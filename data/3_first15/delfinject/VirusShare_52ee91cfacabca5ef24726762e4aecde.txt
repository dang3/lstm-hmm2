mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
adc
mov
imul
outsb
add
mov
or
jae
jb
or
push
ficoml
add
ds
enter
repz
int3
rol
or
sub
pop
push
dec
bound
arpl
pop
sbb
xlat
mov
roll
jns
gs
adc
dec
data16
fucomip
jb
popa
arpl
add
or
fcompl
pushf
int3
addl
jmp
adc
out
std
nop
push
push
imul
xchg
mov
sbb
push
mov
sbb
out
aas
or
mov
rcr
out
addr16
addr16
jo
push
out
adc
fs
mov
jbe
adc
push
inc
popa
xor
lcall
mov
push
pushf
cwtl
dec
dec
dec
dec
xchg
nop
adc
dec
dec
dec
dec
mov
dec
jl
je
dec
dec
dec
dec
insb
push
dec
dec
pop
pop
push
or
dec
dec
dec
push
dec
dec
cld
daa
outsb
daa
daa
and
hlt
inc
aas
inc
jbe
mov
call
lret
leave
leave
in
cmp
xor
sub
sub
push
add
mov
into
add
ljmp
je
movzwl
mov
ss
pop
ret
push
sub
mov
push
lahf
push
lods
mov
dec
and
insb
inc
and
out
decl
je
outsl
outsb
and
xor
or
ficomps
jb
and
imul
outsl
data16
clc
fildll
push
mov
push
push
je
popa
inc
inc
gs
insb
outsl
jo
pop
mov
cmpxchg
ret
cmpsb
mov
mov
mov
mov
push
dec
add
inc
or
and
sub
add
or
adc
lcall
adc
adc
sbb
fildll
fildll
add
sbb
mov
fistpll
add
jp
cmp
push
dec
imul
sub
jp
nop
cltd
cmpsb
mov
inc
add
dec
xor
lods
push
lahf
push
add
pop
cmp
int
cmp
pusha
cmpsb
imul
inc
inc
imul
into
sub
add
add
neg
jns
fistpll
fstp
push
inc
jl
push
cmp
add
js
and
mov
mov
inc
ret
pop
add
dec
or
push
adc
mov
nop
call
cmp
mov
mov
push
sub
mov
shr
movzbl
mov
sti
rol
and
pop
mov
and
mov
sub
ljmp
mov
lret
adc
push
add
lret
dec
mov
add
jbe
jbe
sti
shl
or
mov
cmp
sbb
hlt
outsl
mov
cld
add
jmp
jne
orl
adc
dec
add
clc
fbstp
mov
jae
lock
and
fisubs
adc
add
fnstsw
mov
mov
inc
push
and
add
std
mov
push
add
js
shr
inc
xor
fimuls
mov
push
mov
rorl
push
mov
sar
sti
cmp
mov
mov
mov
jmp
lret
push
sub
sbb
xor
mov
data16
nop
cmpb
jmp
mov
into
mov
sbb
and
mov
add
add
clc
test
sbb
xor
jle
pop
cmp
call
dec
add
and
mov
and
xchg
mov
mov
or
ja
sub
or
lods
into
movl
pop
mov
sbb
add
add
adc
pop
pop
mov
fmull
jae
jle
adc
mov
fisubrl
rclb
or
ret
sbb
subb
push
aas
je
cmpb
jmp
or
cmp
in
pop
ja
outsb
push
push
lea
or
push
inc
or
fstl
push
mov
cmp
jbe
sub
add
jmp
test
pop
inc
cmp
jne
lods
fimull
lock
scas
dec
mov
sub
out
daa
js
nop
inc
loopne
repnz
sub
pusha
cmp
and
jmp
fidivrs
loope
pop
shl
mov
pop
bound
add
cmp
jbe
ljmp
clts
mov
lock
xchg
xor
push
mov
cld
xchg
push
add
and
xor
stos
inc
push
cmp
jae
mov
inc
sti
ja
add
dec
and
jae
fdiv
jo
cmp
pusha
xor
push
xor
mov
rolb
pop
or
pusha
or
mov
jmp
mov
outsb
or
or
jbe
or
pop
ret
push
addr16
mov
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
and
add
pusha
bound
dec
les
leave
cmp
mov
dec
jo
push
mov
xchg
inc
or
je
addl
jne
dec
and
idiv
je
and
pushl
pop
xor
dec
adc
mov
add
sarl
or
jbe
mov
pop
mov
or
dec
aas
adc
es
nopl
mov
lahf
adc
and
xchg
xorl
pause
jns
aas
je
push
sub
lods
cmp
imul
sub
out
or
idiv
ja
mov
bsf
lea
js
lcall
lea
add
push
test
add
cmp
sarb
movsl
ret
push
jne
btr
rolb
sarl
pusha
or
jb
mov
dec
jnp
sub
lea
mov
inc
jmp
sbbb
das
add
mov
mov
xchg
iret
fucomi
sti
fwait
enter
iret
sub
sub
cmp
and
inc
sbb
jl
mov
mov
mov
sti
call
movl
dec
cld
xor
das
mov
mov
mov
add
adc
icebp
pop
mov
adc
push
or
imull
iret
mov
addr16
aam
xor
inc
dec
mov
mov
xor
fidivs
mull
faddl
mov
jne
lea
cli
sbbl
loopne
push
je
fdivs
insb
dec
loope
rol
or
jmp
mov
insb
jae
fdivrs
popf
xor
mov
sub
rol
loopne
push
xor
sbb
push
fadds
adc
fdivs
cmc
lock
loopne
mov
jmp
mov
dec
or
enter
or
and
mov
cmp
xchg
or
inc
bound
xchg
adc
test
push
pop
xorb
or
sub
setno
negl
neg
mov
test
adc
cli
nop
and
mov
testb
add
roll
test
clc
scas
add
mov
jne
subl
je
pop
pop
push
lds
rorb
pop
data16
gs
mov
imul
cmpsl
and
adc
shrb
adc
cmp
jne
and
inc
jbe
insb
push
mov
iret
push
push
sub
lds
xchg
scas
ljmp
jmp
xor
mov
aam
inc
push
push
adc
out
pop
pop
lock
fmull
scas
testl
sub
xor
testb
jne
cmp
in
je
lea
and
ss
xchg
mov
xlat
mov
test
pop
sbb
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
adc
in
mov
lahf
mov
or
cmp
sbb
add
loopne
movsl
movl
js
mov
lret
or
sub
pop
loopne
mov
mov
out
ljmp
stos
push
or
or
xchg
enter
sub
add
ret
cmpl
lds
push
mov
mov
mov
jg
or
push
jg
test
lea
push
mov
loop
roll
add
add
sub
jbe
clc
iret
mov
call
xchg
push
cmp
inc
xor
mov
push
cmp
push
and
cmp
push
xchg
scas
lock
cmp
jb
sbb
pop
mov
mov
push
mov
and
stos
jmp
lds
add
sub
cmp
call
pop
inc
or
mov
mov
sti
mov
cld
or
mov
imul
or
daa
shll
clc
mov
roll
xlat
inc
sbb
mov
clc
addl
clc
sub
inc
sbb
or
mov
out
adc
inc
fdivr
out
cs
imul
add
pop
ret
or
dec
fistps
iret
lcall
addb
mov
aaa
xlat
je
iret
ja
cmp
orl
mov
shr
add
xor
sub
bound
add
test
add
jg
shlb
push
ret
andl
push
add
push
xchg
push
push
lea
jl
mov
push
pop
add
outsb
mov
jecxz
roll
dec
iret
push
gs
andw
mov
clc
xor
nop
cmp
divb
push
lea
jecxz
fists
cmpsl
lea
or
jae
neg
adc
add
js
or
sar
mov
iret
sbb
faddl
rorl
or
jne
xor
inc
iret
je
mov
xor
shlb
scas
cmp
jae
pushf
scas
mov
rclb
adc
daa
push
pop
jmp
dec
mov
mov
idiv
call
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
add
scas
inc
add
fmuls
addr16
push
mov
cmpsl
push
mov
mov
pop
icebp
jo
mul
ss
mov
loop
pop
shr
jbe
xchg
enter
mov
fadds
fwait
rcr
incl
aas
wbinvd
shrl
sbbb
dec
aaa
sbb
xchg
add
jb
add
add
mov
sub
dec
in
jg
aas
pop
push
cltd
inc
adc
and
pop
scas
icebp
mov
ud0
bound
and
add
push
mov
push
inc
cli
mov
ss
push
ljmp
jbe
insl
scas
fistps
add
push
lock
push
jae
ss
mov
push
jge
mov
in
mov
inc
sbb
add
push
neg
imul
cmpl
testb
je
adc
js
jmp
mov
pop
pop
adc
or
loop
ss
sar
call
push
data16
cmp
dec
push
and
ja
sbb
sbb
test
daa
dec
sahf
out
mov
lea
mov
and
xchg
sti
push
rcrl
pop
mull
adc
cld
sbb
mov
push
xor
mov
ss
fistpl
pop
mov
dec
scas
pop
pop
and
xor
cli
mov
mov
jae
mov
inc
rorl
setne
xchg
lock
sub
aas
inc
sbb
add
jnp
adc
add
jp
sbb
out
mov
xor
nop
xorl
mov
mov
mov
pusha
jl
inc
pop
mov
cmp
add
mov
add
push
mov
or
and
or
jne
mov
sbb
sbb
mov
call
lock
shl
lea
lea
call
inc
in
adc
add
mov
sub
jne
fcomps
loopne
adc
push
rorb
movb
aas
sbb
adc
jmp
xchg
sbb
sub
dec
negb
or
cmpl
mov
xor
int3
or
ficomps
jl
or
test
jle
jge
sbb
sbb
cmpb
mov
cmpb
jb
mov
hlt
clc
jo
push
jmp
decl
and
fbstp
dec
aaa
push
sarl
cmp
je
or
inc
cmp
jg
rcrl
mov
inc
fiadds
add
pop
xor
push
adc
in
xchg
aam
xchg
nop
scas
xchg
push
mov
pop
push
add
push
dec
jne
data16
xchg
or
lea
popa
test
nop
and
pop
pop
push
gs
mov
push
add
lcall
xchg
add
mov
xchg
pop
mov
push
xor
mov
aas
cli
or
push
lods
je
push
loope
insb
pop
aam
mov
lea
jge
and
inc
jbe
sub
mov
and
jne
push
in
jle
int3
loope
xchg
cmp
mov
jecxz
jne
mov
test
adc
jle
ds
xchg
adc
fstl
fnstenv
in
xchg
scas
mov
pop
aad
pop
xchg
sti
mov
mov
jl,pt
cmpb
test
call
std
mov
sbb
jo
sub
push
mov
movl
adc
dec
jb
cld
dec
push
adc
shrl
add
mov
scas
imulb
loopne
mov
lock
xlat
mov
or
mov
xchg
or
xchg
in
ss
daa
cmp
out
shr
fwait
jne
movb
inc
push
or
pop
inc
dec
sub
mov
and
sub
sarb
mov
dec
in
dec
out
sub
nop
out
pop
sbb
pop
jmp
mov
xorl
push
and
sarb
xchg
movzbl
scas
fldcw
dec
das
js
pop
pop
jno
pop
dec
pusha
or
xor
push
pop
incl
add
andl
fdivp
push
lcall
sub
stos
push
sbb
filds
imul
lds
js
outsl
mov
testl
mov
or
imul
into
mov
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
enter
insl
gs
outsl
jb
pop
popa
imul
popa
jae
outsl
add
arpl
fs
incb
pop
jae
popa
insb
insb
and
dec
imul
or
or
es
mov
addr16
outsb
imul
outsb
add
idivb
jae
xchg
jp
mov
cltd
xorl
nop
outsb
and
jbe
mov
lahf
mov
pop
jbe
popa
dec
cs
xor
pop
mov
jb
pop
add
hlt
add
jne
repnz
out
add
cmp
jbe
mov
xor
ja
mov
add
cmp
jne
in
hlt
add
es
xchg
mov
hlt
mov
add
inc
clc
or
std
aad
sbb
movl
icebp
in
out
rolb
add
add
jbe
lods
jae
mov
shr
cmp
jbe
jg
and
mov
shl
mov
shl
add
lods
push
stos
mov
xor
loope
lea
add
popf
and
jae
mov
or
mov
lcall
mov
xor
div
imul
mov
or
mov
in
dec
push
clc
lds
sbb
movl
mov
fists
ret
mov
or
repz
xor
add
mov
push
push
mov
add
adc
sub
jmp
push
mov
cmp
jne
mov
fwait
mov
adc
orb
ja
dec
or
cs
jne
sbb
mov
inc
rorl
repz
jnp
jnp
fwait
inc
fistpll
fimuls
or
loope
mov
jecxz
mov
sub
mov
push
mov
enter
sbbb
sbb
out
pop
add
call
add
ret
mov
add
push
dec
imul
ret
ficoms
sub
rclb
addr16
add
or
shlb
mov
inc
xor
in
frstor
pop
mov
inc
mov
xor
jne
xlat
mov
adc
frstor
cmp
pusha
jo
dec
pop
mov
mov
cmp
lds
or
aas
add
cltd
sbb
xorl
push
dec
enter
out
xchg
mov
test
dec
or
jecxz
sahf
or
mov
mov
cmp
jne
lahf
cwtl
shl
or
jmp
cmp
ja
movzbl
add
inc
mov
pop
inc
pop
nop
scas
call
add
in
push
push
push
adc
xor
pop
pop
jne
jge
icebp
pusha
mov
out
call
aas
jmp
testb
inc
or
je
mov
sbb
ret
sub
inc
fdivrl
sarl
mov
inc
rep
jmp
pushl
les
mov
jmp
mov
jmp
mov
insb
ret
andb
pop
repz
jo
push
aas
cmp
je
cmp
ja
sub
mov
sar
pop
jmp
sub
or
aaa
jo
add
push
adc
or
add
cmpsl
jge
int3
rorl
dec
dec
pop
jnp
out
popa
insb
jns
push
mov
mov
add
push
neg
and
or
mov
or
sbb
ret
jle
addl
sub
or
adc
add
add
and
sub
pop
inc
cmc
pop
lcall
or
push
or
decb
inc
add
mov
push
and
add
add
sahf
cmp
cmp
cmp
push
add
add
mov
jbe
fsubs
or
inc
lock
out
jbe
and
cmpb
add
xor
mov
jbe
negl
jmp
sub
adc
ljmp
js
inc
out
add
add
std
imul
xchg
addb
mov
cs
jmp
jne
imul
add
or
jb
sti
inc
xor
ja
iret
frstor
arpl
mov
loopne
lock
push
cli
ret
add
xorl
push
push
es
mov
xor
aas
cmp
jmp
and
ds
mov
aas
add
dec
jmp
mov
lock
mov
or
cmp
imul
dec
fstpl
xor
imul
lcall
xchg
jb
cmp
ja
sub
call
mov
fldcw
cmp
pop
fsubrp
fimull
sub
adc
or
fldcw
in
fwait
push
fwait
orw
or
push
jmp
cmc
jle
fldcw
pop
inc
lods
sub
ret
stos
sbb
or
nop
daa
arpl
insl
xchg
mov
repnz
data16
insb
mov
cmp
rcll
sbb
pop
cmp
sbb
cmpsb
pop
cmp
std
push
sti
and
pop
inc
and
push
fbstp
scas
mov
sbb
cwtl
aas
pushl
inc
cmp
mov
ja
and
sub
mov
jb
add
adc
lahf
jmp
gs
sti
adc
or
ljmp
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
rorl
xlat
xor
movsl
lahf
pop
decl
testl
aaa
loopne
dec
sbb
cmp
jbe
mov
mov
inc
sbb
xor
imul
lock
lods
push
xchg
inc
inc
jg
jo
in
add
push
outsb
je
mov
mov
cmp
jne
dec
je
mov
mov
sbb
add
pop
mov
pop
sahf
loop
push
adc
add
add
push
shll
das
push
adc
add
adc
add
jne
add
jmp
pop
cmp
cmp
jne
shr
rcll
add
push
mov
shr
push
imul
inc
dec
loopne
pop
cmp
jl
cmp
loope
mov
add
and
mov
cmp
jne
dec
dec
dec
add
addr16
lock
add
rcrl
into
cmp
divb
clc
int
cmp
add
pop
fstl
fstl
sar
sbb
add
neg
rolb
mov
notb
jl
ffree
add
push
mov
idiv
cmp
push
sahf
imull
ss
jmp
cs
sbb
sbb
jns
out
push
adc
adc
pusha
rcrb
push
pop
dec
inc
icebp
or
ret
pop
push
mov
outsb
mov
fstpt
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
filds
in
dec
and
test
jmp
or
fucomi
xor
or
cmp
ja
lea
push
add
push
outsl
clc
testb
dec
je
sarb
jmp
inc
mov
fdivrs
fistps
js
pop
sub
jmp
inc
inc
jmp
mov
pop
stos
mov
xorb
xchg
and
data16
outsl
add
or
stos
aad
adc
adc
cwtl
pop
xor
mov
mov
adc
push
cmp
fucomp
or
push
inc
mov
dec
jne
pop
testb
ds
cmpsb
mov
jmp
fs
sub
iret
add
adc
lea
jp
adc
cmp
lods
mov
add
pop
fmulp
loop
jns
pcmpeqb
mov
push
cmp
cmp
popa
push
and
sbb
dec
lock
pop
xchg
jge
mov
dec
sub
xor
sbb
data16
stc
jmp
fstp
fldt
adc
out
mov
cwtl
or
inc
sahf
jl
add
add
jne
inc
pushf
or
mov
and
adc
enter
xchg
cwtl
push
and
sbb
mov
xchg
and
mov
aam
fnsave
adc
out
xchg
sub
xor
out
sub
mov
jecxz
add
leave
sbb
mov
repz
inc
jbe
imul
cmp
mov
mov
bound
jmp
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
jg
fbstp
dec
adc
ret
inc
mov
push
pushl
lcall
push
inc
enter
mov
inc
dec
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
ljmp
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
push
cld
jmp
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
fcomip
lcall
cld
sarb
repnz
test
nop
fcmovnb
movsb
lahf
nop
inc
pop
ljmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
incl
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
cmp
pushl
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
lcall
mov
and
addr16
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
jp
rclb
sub
loop
sbb
add
arpl
add
lods
and
fdivl
decl
outsl
div
movzwl
lea
push
push
jnp
add
inc
or
hlt
sahf
icebp
jg
aaa
int3
jne
xor
push
push
xor
movl
dec
pop
hlt
push
push
clc
data16
in
in
fisttpll
pop
pop
pop
push
adc
cmp
test
ret
sub
jmp
jecxz
and
pop
ss
clc
data16
or
andl
scas
cmp
inc
push
push
inc
push
inc
pop
ret
pop
inc
xchg
clc
jmp
jo
imul
push
dec
popa
jae
push
popa
insb
jne
stos
sub
xlat
fninit
fwait
in
mov
cmc
sub
jle
mov
test
clc
aas
xlat
mov
xor
mov
inc
out
sub
cld
xor
adc
leave
out
cmp
loopne
push
lea
add
test
inc
sbb
fdivrl
push
das
and
and
push
inc
cmp
add
out
mov
sete
and
xor
mov
adc
mov
call
out
addr16
sub
or
cwtl
mov
sbb
jnp
pop
adc
push
mov
rcr
std
add
icebp
test
out
push
das
xchg
xor
movups
fs
mov
fistpl
cmp
jle
in
pop
mov
js
cmp
call
ret
sahf
mov
mov
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
pushf
add
pop
fsubrl
jmp
cmp
je
jbe
add
jae
or
in
das
ss
mov
mov
push
sbb
jne
jne
lods
sub
mov
lods
mov
mov
jbe
loop
push
mov
clc
inc
movsb
fdivs
cmp
fidivs
paddd
shufps
add
pop
and
jmp
mov
add
mov
adc
pop
push
outsl
cld
inc
addl
pop
out
pop
clc
mov
mov
and
test
subl
sub
fidivs
mov
lret
mov
jbe
push
mov
push
callw
pop
lea
jbe
ss
push
sbb
hlt
insb
clc
mov
call
xchg
jns
mov
in
cmpb
sbb
sarb
add
xor
xor
jb
jo
jne
add
jae
push
or
jne
or
push
and
fcoml
sti
nop
mov
into
fldl
loopne
pushf
mov
xor
xor
pop
loope
aas
lods
rorl
xchg
jle
jne
mov
in
push
xchg
jmp
lret
dec
idivb
test
test
add
scas
je
pop
in
mov
sbb
pop
add
sub
mov
pop
cs
clc
out
mov
cmp
pop
ljmp
aaa
divb
xor
das
mov
or
rcrl
out
les
out
fdivs
pop
push
data16
sub
cmp
pop
movl
fiaddl
pop
stos
mov
aaa
ds
ret
fmull
xchg
adc
mov
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
jmp
add
sbb
and
jne
dec
cmp
fbstp
mov
enter
dec
jmp
sbb
fcompl
sbb
sub
ds
call
add
mov
rcll
bound
hlt
xor
lea
mov
mov
mov
cs
or
inc
add
aas
inc
inc
or
or
mov
mov
inc
sub
or
cmp
mov
push
mov
fldcw
loopne
icebp
or
push
clc
rorl
sti
xor
js
inc
stos
jmp
dec
xor
xchg
inc
in
jae
insb
cmc
ds
sbb
stos
push
negl
idivl
js
out
pop
cwtl
ja
pop
pop
xchg
sub
jbe
dec
dec
push
ret
in
push
call
nop
ja
es
pusha
push
push
cmp
ficompl
leave
rorl
cs
add
mov
mov
in
xor
pop
push
push
and
sbb
cli
push
cmp
je
or
jne
movsbl
inc
inc
jmp
add
mov
pop
addr16
jecxz
add
nop
loope
adc
addl
loop
fdivrl
adc
insl
adcb
jecxz
pop
dec
aas
add
cmp
inc
add
jne
mov
inc
mov
adc
outsb
add
or
push
pop
adc
sub
loopne
test
psrld
fildll
into
lcall
into
cli
out
popa
xchg
loopne
je
dec
push
sub
ja
lea
xor
clc
add
dec
mov
jbe
leave
cmc
fadd
sbb
jmp
adc
mov
and
push
stos
cli
push
jns
cld
sbb
jo
dec
add
jbe
shll
rcrb
push
cmp
sub
push
sbb
stos
movsl
sub
sub
jg
mov
mov
lock
push
add
pop
xor
push
std
pop
stos
lods
fisttps
cmovno
sbb
push
xor
sbb
pop
dec
or
cmc
sbb
add
xor
loope
je
cwtl
push
or
lahf
dec
jg
dec
pop
add
lds
subl
fsubrs
dec
fadds
aam
push
sub
arpl
or
or
and
fmull
pushl
outsb
dec
jne
sbb
and
sarl
jmp
xor
fsubp
sbb
mov
push
cmp
daa
lahf
adc
sub
push
adc
fldenv
mov
pop
les
sub
or
dec
mov
inc
movsb
jmp
pcmpeqd
sbb
outsb
sbb
nop
popa
rclb
sub
aaa
push
xor
add
icebp
movsl
jecxz
or
shr
shll
stos
aad
lods
adc
mov
cmp
jmp
dec
in
rorl
es
in
loope
cmp
adc
out
mov
mov
jo
fmul
and
loopne
mov
push
push
or
jb
addb
leave
mov
dec
inc
or
xor
mov
inc
sahf
insl
imul
call
or
pusha
add
inc
or
push
into
cwtl
fisttps
sarl
test
adc
adc
loopne
jle
jae
mov
push
stos
scas
call
adc
loop
xor
add
jg
cs
xchg
ret
ja
pop
mov
cmp
jbe
sti
sub
pop
cmp
push
sub
and
cmp
pusha
add
add
je
jmp
mov
insl
fnstsw
sub
adc
jmp
ljmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
or
decl
mov
sub
mov
cs
mov
xor
lret
mov
fbstp
jmp
xchg
mov
cli
je
pop
clc
cmp
push
outsb
inc
sbb
xor
mov
mov
out
push
inc
pushl
xor
pop
sbb
notb
mov
mov
jo
xor
sbbb
adc
enter
add
call
enter
adc
sbbb
enter
pop
cmp
repnz
cmp
jne
and
iret
adc
mov
sbb
das
xor
add
jge
test
jle
dec
push
loopne
mov
aaa
je
add
cmp
sub
or
jmp
mov
xorb
mov
dec
mov
fidivrs
ds
repnz
adc
in
sti
jle
xchg
jge
pop
jbe
fadds
iret
sub
jmp
iret
adcb
cmpsb
push
sub
sbb
mov
orb
adc
jo
ret
cmp
call
pop
or
ret
dec
xchg
mov
sbb
mov
mov
add
int3
adc
cmpb
jne
pop
pop
xchg
dec
sti
add
inc
or
in
mov
mov
mov
jp
mov
add
adc
jnp
cwtl
mov
and
and
dec
sub
mov
push
add
loopne
inc
addb
mov
mov
cmp
xchg
dec
add
mov
outsl
in
ja
mov
and
movsl
push
leave
out
add
dec
inc
push
data16
add
out
add
adc
cmp
mov
xorl
jo
push
sbb
cmp
or
popa
xor
inc
pop
ret
mov
popf
inc
jne
mov
cmp
and
and
loopne
mov
sarb
fsubs
inc
and
jnp
push
ss
je
lock
out
sbb
lcall
adc
std
fsub
cmp
daa
data16
ds
faddl
jg
loop
mov
je
mov
fildll
sbb
sbb
jne
cmp
shlb
loopne
aaa
test
sbb
pop
mov
add
loope
clc
icebp
cmp
cwtl
sbb
loopne
inc
lods
adc
adc
sti
int
scas
pop
lock
ljmp
shll
jmp
mov
and
mov
aad
push
mov
cwtl
lods
sub
xchg
push
xor
push
sub
add
push
push
daa
xchg
imul
pop
pop
mov
xchg
add
mov
push
mov
test
or
mov
jmp
mov
pop
sbb
fildll
lock
dec
add
push
push
or
push
mov
movsl
dec
sbb
mov
sub
sahf
addl
or
xlat
xor
pop
mov
dec
adc
mov
adc
decl
clc
pop
repnz
xchg
jg
adc
movl
push
or
dec
jecxz
push
shlb
dec
and
inc
jg
lods
pop
push
sbb
cmp
pop
push
mov
and
or
adc
xchg
jle
test
push
daa
jle
push
add
outsb
cld
setnp
push
inc
pop
movw
loope
jecxz
or
movl
je
xlat
cltd
mov
mov
daa
icebp
push
xchg
das
js
nop
or
adc
ljmp
cmp
mov
or
lds
test
aaa
add
mov
adc
sbb
dec
rolb
xchg
fsubl
pop
lea
cmp
push
mov
pop
mov
nop
lock
xchg
push
jl
lea
daa
int
mov
add
sbb
aaa
jnp
pushf
test
pop
jge
xor
clc
lock
push
mov
mov
or
and
xchg
or
push
cmp
je
and
add
or
xor
call
loopne
mov
pop
sub
jmp
push
cmp
and
pop
pop
or
push
or
popf
mov
jmp
or
add
push
xchg
fisubs
mov
inc
xchg
inc
mov
add
add
pop
add
scas
push
jl
pop
pop
xor
push
jnp
jle
je
pop
cld
and
cmp
jl
and
or
xchg
mov
dec
popa
aas
idiv
pushf
push
inc
cld
dec
js
inc
out
test
lock
js
jmp
jns
push
cld
add
jo
cmp
mov
loop
push
sub
es
jo
sahf
ret
cmp
daa
repnz
sub
arpl
sbb
je
cmp
cmp
jl
out
mov
mov
inc
cld
add
jo
fisttps
nop
fmuls
aad
add
mov
sbb
out
xor
dec
clc
pop
lret
or
movsb
divl
enter
mov
adc
or
je
fimuls
bound
add
or
push
jo
cmp
add
mov
jne
mov
testb
daa
clc
add
cld
popf
cmp
pushl
add
dec
jmp
xor
shlb
jb
pop
rcrl
dec
jne
sahf
pusha
jne
or
sahf
inc
cmpb
xor
lea
jmp
and
or
dec
pop
xor
or
outsl
jg
pop
movsb
pop
cld
sub
push
adc
and
sub
mov
jo
mov
xor
je
js
std
call
sbb
mov
jmp
add
jns
mov
cmp
pop
push
insl
xor
mov
inc
test
jle
push
sbb
inc
iret
dec
add
clc
sub
hlt
pop
cld
mov
dec
cmp
xlat
mov
movsl
bound
push
stos
push
orb
addr16
mov
pop
mov
daa
inc
adc
add
xor
push
in
loope,pn
mov
cmp
jge
sub
jle
cmp
jg
add
loope
mov
shr
in
jmp
and
pop
das
test
sbbb
jp
jl
int3
jge
pop
test
or
icebp
ss
ret
xchg
lea
inc
dec
cmp
xlat
add
or
dec
mov
loop
cltd
mov
push
cmove
lods
loop
fistpll
xlat
adc
imul
add
gs
cmp
or
fimuls
adc
lock
push
add
adc
jnp
mov
mov
cmpsl
cld
cmp
sahf
dec
enter
cld
loopne
mov
fdivrl
fidivrs
cmp
add
add
mov
and
inc
neg
scas
jmp
aam
xchg
test
or
rclb
ss
dec
movsb
cmp
jb
push
in
cli
or
jb
add
xor
and
pop
movsl
sbb
dec
add
ret
mov
shrb
js
adc
jbe
imul
xor
push
xor
inc
push
or
dec
push
shll
shll
mov
ss
jo
sbb
xor
jne
mov
shr
sbb
jne
push
icebp
adc
xor
arpl
loopne
sub
mov
xchg
adc
js
scas
sbb
adc
stos
loopne
int3
pop
cmp
gs
in
sub
arpl
out
push
cmp
and
daa
push
pushf
dec
cmp
xlat
jle
loop
rcrl
fnstcw
pop
pop
lods
je
rolb
in
in
popf
pusha
iret
cmpsl
push
push
das
and
mov
push
clc
ja
mov
cmp
andb
adc
call
adcb
shl
mov
lcall
inc
adc
iret
in
stc
inc
push
jmp
pop
mov
cmp
and
mov
lea
lock
or
lret
mov
sub
inc
mov
push
leave
sub
or
aaa
enter
data16
pop
pushl
mov
sub
pusha
sub
add
add
pop
or
mov
add
or
mov
push
call
push
pop
je
xor
les
push
xor
and
adc
xor
test
pop
inc
and
mov
push
cmpsb
or
pop
das
or
mull
push
es
stc
xchg
lock
loope
mov
cmp
jge
pop
dec
cmp
jo
out
rcll
sub
cmp
push
jno
ja
lods
add
add
xor
or
fistpll
idivb
mov
inc
daa
cltd
inc
sub
out
adc
stos
inc
cmp
jle
mov
add
xchg
pop
jno
sub
dec
inc
lds
push
popf
inc
pop
inc
insl
mov
inc
aaa
push
mov
cld
ja
mov
lea
mov
mov
rorb
mov
bound
pop
mov
mov
fisttps
xor
cmp
fcomip
ja
and
je
cmp
fs
je
cmp
je
cmp
inc
pushf
subb
adc
push
fs
jo
jp
clc
jmp
adc
add
or
adc
jmp
sub
pushl
push
mov
mov
mov
add
dec
cs
adc
cmp
pop
jmp
cmp
inc
sub
and
dec
add
push
jmp
lahf
inc
sbb
cld
ss
cwtl
jp
adc
xor
mov
lods
or
cmp
fsub
push
fstpt
jae
and
loopne
repz
test
push
mov
int3
or
inc
mulb
jmp
dec
sbb
pop
xchg
cmp
mov
ja
inc
push
lock
cmp
push
inc
dec
repz
sub
in
and
adc
push
jmp
test
test
sbb
and
icebp
jmp
pushf
pop
inc
loop
and
mov
xchg
movsb
popa
sbb
add
add
loope
shl
push
push
sub
jp
inc
pop
push
outsl
jp
loopne
daa
mov
gs
lock
xchg
sub
inc
pop
inc
add
pop
dec
enter
sbb
push
hlt
pop
pushf
ret
sub
sbb
enter
inc
add
cld
aam
outsl
ja
dec
clc
push
push
add
sarl
add
addr16
mov
adc
mov
add
cmp
xor
in
cmp
push
out
dec
or
push
or
jo
push
mulb
jo
adc
xchg
or
pop
adc
jmp
cld
in
popa
and
insb
lea
mov
stos
pop
adc
sti
popa
push
dec
orb
dec
push
pop
jmp
aas
popa
in
fcomp
add
sarl
xor
mov
xchg
enter
ds
fiadds
cwtl
mov
loop
inc
fildl
rorb
sbbb
pop
dec
and
mov
and
mov
in
movsl
push
test
jg
adc
enter
push
adc
dec
jne
cmp
dec
cmp
xchg
cmpsb
sbb
adc
push
les
cmp
cmp
or
pushl
incl
pop
add
inc
call
jl
mov
cmc
mov
cmp
add
jae
flds
je
cmp
pushf
iret
adc
lock
sub
popa
xor
pop
mov
sahf
adc
ja
mov
dec
or
inc
xchg
inc
cli
ret
xchg
xor
subb
mull
mov
insl
fs
add
push
mov
mov
pop
ret
inc
and
in
int3
lock
fcos
sahf
popa
push
wbinvd
mov
or
loop
sub
dec
les
jl
lcall
cld
divb
int
inc
sbb
inc
jmp
cmp
jne
clc
and
fnsave
sub
scas
inc
jle
sub
out
jnp
insl
fldt
and
inc
xor
roll
or
add
sub
jb
add
or
icebp
repnz
jmp
xor
sub
jmp
getsec
jmp
push
orl
sub
test
or
jb
lahf
sub
jl
andl
add
out
add
cld
xor
mov
cltd
bound
movsb
pop
push
inc
sbb
movsb
add
mov
sbb
push
mov
fcmovne
dec
dec
sbb
test
mov
xor
fs
adc
rolb
neg
push
pop
stos
mov
push
jae
adc
sbb
inc
test
sbb
inc
int3
jne
jge
mov
and
jg
inc
push
hlt
adc
mov
jl
andb
jmp
and
xor
sbb
add
or
xchg
shr
setl
cmp
je
dec
int
sbb
and
or
les
jo
mov
mov
dec
mov
add
mov
cli
dec
lret
dec
dec
dec
pop
rclb
dec
int
inc
push
push
push
pop
das
scas
mov
cmp
loop
aad
sbb
pop
pop
mov
mov
ss
lods
adc
dec
xchg
mov
inc
mov
inc
add
sub
push
mov
sub
mov
loopne
push
push
cmp
sbb
insl
call
mov
cmp
je
andl
mov
fisttps
cmp
jne
mov
cmp
jge
xchg
divb
xlat
imul
sub
jnp
lea
lea
mov
pop
mov
pop
decl
stos
lcall
lret
jnp
fadds
mov
push
in
test
imul
xor
mov
inc
aaa
mov
stos
in
dec
push
push
nop
push
int
rol
or
movl
data16
push
sub
lahf
test
or
cld
fildl
ret
cmpsl
cmpl
jle
cwtl
or
xchg
and
jl
inc
jl
lcall
pusha
clc
outsb
mulb
inc
push
dec
jne
enter
fsub
fistl
push
andl
lds
xor
or
dec
clc
jne
scas
jge
or
loope
adc
outsb
sbb
lods
jne
inc
data16
pop
call
push
mov
push
dec
jl
push
push
mov
incl
out
pop
jp
pop
pop
jo
lahf
adc
adc
adc
in
stos
imul
push
in
sbb
push
dec
inc
inc
test
ja
push
or
insl
sub
jne
pop
adc
testb
mov
adc
xor
mov
xchg
cs
insl
xor
inc
fs
adc
and
push
and
jae
or
js
and
or
ret
fistpll
clc
jmp
test
stos
and
cmp
nop
fs
and
insb
sub
jg
jno
and
sti
pop
jne
mov
mov
xor
enter
inc
lahf
rclb
jmp
push
ljmp
lock
out
inc
push
lods
mov
or
dec
jo
das
popf
test
shll
rcrl
or
sti
aam
sub
sbb
sbb
pop
or
js
pop
sti
sbb
add
cs
or
xor
cwtl
inc
and
daa
fidivl
jne
push
mov
sub
jnp
clc
lea
mov
pusha
xchg
xor
out
inc
cmp
inc
orb
addr16
mov
lret
imul
inc
xchg
jl
ss
out
je
fnsave
in
jle
cli
fmull
jg
movb
fcmovnu
sbb
push
movl
mov
stos
test
cmpsl
add
call
gs
gs
xor
cs
insb
movl
and
ljmp
push
popa
je
dec
popa
insl
gs
and
loopne
mov
jecxz
pusha
das
in
mov
and
push
loop
call
nop
dec
mov
je
cmp
and
adc
sbb
ja
sbb
icebp
sbb
test
xor
mov
adc
sub
out
fisubs
xor
clc
inc
int
sbb
gs
ss
repnz
mov
inc
mov
das
xlat
mov
pop
sar
add
test
negl
and
mov
xlat
sbb
jge,pt
movsb
or
push
and
jnp
jnp
je
mov
dec
mov
cmpb
lock
cmp
jne
adc
jle
mov
popf
inc
xorl
add
roll
push
les
push
je
das
outsl
insl
sbb
repz
cmc
add
fs
mov
xlat
sub
lcall
insb
mov
mov
inc
cltd
xchg
or
push
and
push
inc
divl
icebp
jno
adc
test
std
adc
pop
fisttps
call
cmp
jne
mov
outsl
mov
dec
mov
sub
scas
fbstp
inc
pop
adc
pop
sti
add
push
loope
mov
aad
mov
dec
add
lret
xor
and
mov
inc
push
sahf
int3
and
pusha
mov
mov
mov
movsb
cmp
or
testl
js
add
movsb
inc
jg
std
cmp
cmp
mov
pop
mov
or
jne
push
out
or
fs
cmc
cs
lcall
xorl
add
and
pusha
pop
mov
fldl
dec
rorb
push
inc
pop
rcrl
adc
out
mov
or
push
testl
mov
xchg
sbb
mov
pop
ret
sbb
je
or
js
add
lret
adc
sub
div
pop
pop
test
sub
aaa
add
pop
lret
add
push
loope
or
cmpsl
pop
or
sub
cmpb
dec
fisttpl
mov
sbb
loope
dec
stos
ds
push
and
dec
pop
inc
mov
outsb
pop
sub
lea
mov
xor
mov
cs
xor
dec
inc
cmp
ja
mov
inc
jmp
cld
push
dec
sub
lea
cmp
ja
out
pop
test
shr
or
mov
adc
sbb
sti
aaa
in
add
xor
add
jmp
pusha
add
sbb
mov
dec
lret
shlb
cmp
and
jae
cmp
jb
or
dec
movb
addl
and
sbb
add
pop
add
cmp
lea
ret
pop
inc
pop
out
lock
add
bound
jge
or
xor
into
lods
add
xor
out
add
pop
push
hlt
movzbl
inc
test
je
add
repz
jae
and
je
cmp
std
add
cmp
jne
outsl
andl
loope
or
mov
push
icebp
ffreep
cmpsb
lea
inc
dec
cld
mov
addr16
or
inc
nop
or
mov
jne
adc
or
movl
cmp
inc
inc
mov
ret
mov
stos
sbb
adc
push
cmp
xorb
sbb
inc
test
fisttpll
int
mov
sbb
jbe
pop
cltd
xchg
in
bound
dec
or
loope
jo
loopne
push
int3
je
adc
or
sbb
in
jbe
pushf
jecxz
cmp
jne
sbb
mov
sbb
fdivrs
fmuls
jmp
sub
loop
shll
xor
jmp
fldl
dec
push
pop
imul
push
mov
dec
add
adcl
aam
add
sbb
push
jbe
or
pop
pop
or
test
jo
fdivl
ret
inc
fsub
nop
mov
push
aas
xchg
lock
fldcw
inc
cmp
aaa
pop
jecxz
mov
cmp
lahf
jbe
dec
mov
notb
add
test
sub
mov
das
sbb
mov
sbb
add
or
push
aas
loopne
add
imul
lea
pop
dec
xor
clc
and
add
mov
mov
add
cwtl
mov
sub
inc
jo
jo
jle
xchg
aaa
mov
into
mov
mov
mov
push
or
xchg
scas
sysret
fnsave
andl
pushl
loop
add
mov
sub
sub
push
push
aaa
push
shrb
jo
or
jge
push
cmp
lcall
insb
push
pop
adc
cwtl
dec
push
ret
mov
xchg
mov
pushf
inc
mov
push
negl
arpl
mov
mov
cmp
mov
or
rolb
push
aaa
cld
pop
daa
pop
mov
decb
add
xchg
or
outsl
inc
add
mov
ss
ljmp
and
call
shlb
das
ja
enter
jp
or
insl
adc
pop
add
push
dec
inc
dec
mov
add
xor
mov
mov
or
push
gs
push
or
jb
imul
es
imul
inc
push
mov
arpl
inc
gs
jne
je
dec
outsl
je
in
fucomip
out
imul
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
add
jnp
xor
xor
outsl
insl
bound
outsl
js
loopne
arpl
pop
push
imul
outsb
cmp
andps
outsb
fldl
cs
push
je
add
fistpll
push
push
cld
xchg
xchg
xchg
xchg
sub
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
sub
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
fs
add
sub
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
fs
in
in
push
dec
inc
inc
in
in
push
dec
pop
pop
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jb
xor
cld
sub
hlt
lock
jb
in
call
jb
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwtl
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
fsubrl
jbe
sbb
mov
pushf
pushf
pushf
or
add
in
inc
sahf
cld
sub
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
cs
in
dec
dec
inc
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
sub
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
sub
dec
fwait
adc
scas
nop
ss
pop
cli
mov
ss
cwtl
test
mov
iret
repz
adc
sbb
and
lock
cmp
and
popa
jl
ljmp
mov
and
push
inc
jmp
jle
shrb
jp
and
inc
cmp
mov
push
mov
ds
add
sbb
pop
pop
punpcklbw
jl
sbb
inc
scas
push
das
loopne
or
push
add
inc
inc
sub
addl
pop
lods
movl
cmp
clc
dec
popa
gs
push
call
inc
inc
dec
add
outsl
bound
and
pop
push
dec
dec
dec
push
inc
push
dec
pop
and
push
push
dec
push
push
pop
mov
jge
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
mov
cmpsl
jp
adc
inc
ret
into
sahf
test
pop
enter
mov
in
es
dec
push
scas
jp
cs
es
movmskps
jo
leave
leave
leave
dec
icebp
repnz
leave
leave
leave
leave
cmc
div
clc
leave
leave
leave
leave
stc
cli
sti
cld
leave
leave
leave
leave
std
jmp
leave
leave
leave
leave
loope
jecxz
leave
leave
leave
leave
in
out
leave
leave
leave
leave
jmp
leave
leave
leave
in
out
out
ror
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aad
xlat
fmul
leave
leave
leave
fcmovnu
leave
leave
leave
leave
fstp
ffreep
leave
leave
leave
leave
rol
leave
leave
leave
leave
enter
leave
leave
lret
leave
leave
leave
leave
int
iret
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
movsl
cmpsb
cmpsl
test
leave
leave
leave
test
xor
jge
push
push
inc
jne
andl
adc
or
push
sar
or
je
insb
jae
fmull
or
gs
out
xor
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
xor
push
rcll
scas
sbb
scas
jmp
push
adcl
es
js
gs
push
cmp
mov
mov
repnz
inc
inc
bound
je
adc
outsb
shlb
aas
adc
or
push
inc
dec
inc
jo
in
mov
insb
les
and
or
dec
jne
dec
data16
pop
cmp
inc
enter
ret
outsl
xchg
or
outsb
xchg
push
jb
mov
sbbb
mov
push
or
shlb
inc
repnz
fldl
js
jg
popa
enter
fdivs
jb
mov
nop
loope
sbb
orl
mov
mov
shrl
cli
pop
gs
mov
cmpl
loopne
add
push
push
jbe
dec
jbe
insb
outsl
ja
inc
popa
mov
cmp
xchg
dec
dec
gs
jo
notb
lock
jbe
imul
outsb
scas
in
mov
xor
pop
mov
pop
mov
cmp
rcl
sbbl
into
outsb
mov
nop
hlt
scas
outsl
cmp
mov
cmpsl
subl
or
pop
ds
or
mulb
xor
inc
push
sub
inc
or
shrb
es
incl
rclb
fdivs
push
adc
mov
add
jbe
mov
push
or
push
nop
shrb
push
inc
push
lock
arpl
nop
sbb
xchg
sbb
daa
or
push
lods
popa
inc
je
insb
inc
je
pop
xchg
add
inc
mov
mov
adc
sbb
shlb
rorb
js
addb
mov
xchg
xchg
and
push
out
mov
mov
sbb
mov
jo
push
mov
test
xchg
add
stos
push
inc
mov
adc
xchg
ds
adc
push
add
gs
pop
mov
sarb
add
xor
inc
fs
iretw
or
jo
xor
xor
sbb
mov
and
cwtl
insl
push
insl
mov
jbe
gs
outsb
addr16
outsb
or
setl
adc
sbb
jnp
pushf
and
test
push
insb
push
mov
test
aaa
xor
int
mov
outsl
dec
psllw
add
lods
xchg
push
inc
cmp
cmp
int3
mov
popf
push
xchg
aas
inc
out
push
mov
push
xchg
je
testb
shrb
test
jb
adc
movsb
das
push
fs
push
adc
push
push
les
mov
jmp
icebp
stc
xchg
adc
sbb
jp,pn
fists
jno
cmp
addr16
cmp
popa
seta
mov
mov
sbb
xor
dec
cld
xor
push
imul
add
and
mov
hlt
xchg
add
ljmp
pop
inc
ret
mov
div
mov
mov
add
ljmp
mov
mov
mov
xor
pop
ret
pop
push
jbe
pop
cmp
aas
jo
adc
js
adc
decb
adc
or
pop
adc
iret
addr16
mov
popa
xor
and
adc
scas
imul
pusha
mov
aas
dec
test
sub
jmp
pushf
je
nop
push
adc
cmp
mov
adcb
sarl
add
lret
data16
cmp
jl
and
xchg
sub
mov
sub
lcall
mov
adc
add
outsl
or
or
mov
xchg
jae
data16
in
mov
add
bound
stos
mov
jo
ja
push
cmp
je
cli
and
inc
ret
or
leave
movsb
addb
test
sbb
repz
add
adc
rcrb
sbb
xor
stos
cmp
inc
cld
out
xchg
adcb
xor
cmpsb
inc
cli
jbe
add
rorl
jg
scas
cmp
sbb
sbb
push
movsb
sahf
add
fnstcw
sub
in
idiv
pop
mov
cmp
jne
or
sub
jae
jle
cmp
jg
aaa
sub
mov
and
add
ljmp
pop
pop
cmp
jne
pop
lea
rcrb
pusha
and
ret
pusha
add
push
shrb
push
xorb
ret
lea
mov
je
mov
xor
push
cmp
sub
add
mulb
pop
cmp
jg
outsb
cmp
fsubr
lods
push
or
sbb
and
fdivs
pop
cmp
je
loopne
xor
or
loopne
add
pop
jl
mov
pop
pop
dec
sbb
push
fisubl
pop
or
cld
jne
movd
jge
push
add
out
mov
mov
clc
cmp
xchg
mov
jbe
fldcw
mov
loopne
outsl
push
adc
ljmp
mov
test
push
xor
popa
add
mov
lret
fistl
cmp
psubusw
add
aas
mov
adc
mov
sbb
mov
inc
cmp
fadds
jbe
adc
or
fcmovnbe
jbe
fcoml
dec
sub
clc
jb
sub
outsl
subb
loope
push
cmp
push
xchg
aaa
xchg
mov
mov
and
loopne
mov
push
mov
imul
and
mov
clc
add
or
dec
cwtl
push
in
sti
sub
pop
mov
in
aaa
and
jmp
sub
adc
inc
das
out
or
ja
clc
aad
xor
jle
ja
shrb
aad
cmp
jne
mov
dec
out
add
sub
xorl
push
lret
add
negl
sub
mov
sub
mov
xor
mov
add
xor
sbb
dec
sbb
or
imul
imul
aam
mov
sub
bound
adc
mov
outsb
ljmp
and
add
sub
jb
or
or
fdivrl
xor
jmp
ds
rorl
fwait
out
test
jmp
dec
add
add
dec
call
out
je,pn
jns
jb
push
stc
mov
in
aas
jae
inc
dec
jne
jmp
test
cmp
jnp
fcmovu
scas
adc
or
sarb
std
pop
mov
mov
inc
dec
mov
ret
xchg
sub
decb
pusha
fnstsw
jb
push
pop
mov
adc
pop
pop
sub
call
ljmp
lret
add
mov
sub
jmp
mov
lcall
in
adc
leave
and
outsb
cltd
rorb
iret
arpl
xor
sarb
pushl
dec
sbb
imul
cs
dec
add
sbb
pusha
movb
dec
inc
cmp
mov
jo
sbb
hlt
or
mov
push
movb
mov
pop
enter
je
push
and
xchg
fisttpl
fistps
ret
add
rorl
fdivr
mov
xor
add
push
sub
rcrl
fnstsw
sahf
jae
lret
loopne
outsb
ffree
ffree
ffree
ffree
pop
aad
and
push
jl
int
frstor
push
or
sub
and
data16
rcrb
add
push
fldenv
movsb
scas
aaa
push
or
and
mov
int3
xor
es
xchg
add
loop
mov
ss
rorb
scas
mov
push
cmp
xor
or
out
pop
pop
das
push
and
insl
imul
testb
xor
cmpsl
mov
hlt
inc
and
xchg
rcrb
lea
mov
icebp
adc
mov
loop
push
sahf
je
cmpsb
sbb
xchg
and
inc
cld
iret
mov
lahf
rolb
cmp
or
add
scas
mov
sarb
jg
or
nop
orb
xchg
dec
jb
jg
cmp
mov
push
nop
lret
jl
or
movl
movsb
xor
rorl
subb
lahf
movb
jl
inc
mov
and
mov
sbb
lods
in
mov
popf
xor
mov
cltd
js
push
mov
movsl
push
inc
adc
es
pop
dec
push
mov
fidivrl
dec
hlt
jne
ret
les
or
decl
sbb
or
lock
push
add
andl
mov
mov
dec
cmp
ffreep
in
fmull
test
xchg
mov
ss
inc
adc
or
push
mov
jno
imul
rol
mov
neg
pusha
and
in
ret
je
mov
jmp
and
or
push
mov
jae
adc
xor
daa
aaa
inc
add
hlt
or
mov
dec
sbb
add
mov
and
ja
sbb
adc
adc
and
sub
inc
mov
mov
loope
cltd
mov
cmp
add
sbb
call
clc
mov
cmp
push
pop
fcoml
loopne
sbb
jns
push
popa
pop
les
push
iret
mov
push
jecxz
ss
out
lret
clc
mov
pushl
pop
out
xchg
int3
ds
lret
sbb
shl
xchg
shl
fdivl
mov
or
addr16
cmpl
adc
or
pop
sbb
mov
shll
pusha
scas
push
pop
gs
push
or
jge
jmp
fdivrs
mov
or
frstor
test
add
add
gs
call
adcl
pusha
bound
inc
js
icebp
popa
xor
pop
rcl
insl
adc
mov
xchg
in
inc
fsubrs
mulb
adc
dec
jae
lock
in
adc
push
hlt
dec
ret
lret
js
sahf
sub
loopne
jl
jmp
pop
lods
enter
and
icebp
sbb
fcomip
cmp
push
cmpsb
sub
mov
dec
rcrb
xor
out
out
sti
add
add
je
pop
xchg
jns
cwtl
fldenv
cld
out
lea
notl
pusha
or
xlat
xor
push
add
xchg
scas
mov
js
inc
mov
sub
cmp
or
jl
sbb
pop
sub
fcmovnb
jecxz
xchg
test
test
inc
pop
loope
jp
sub
jge
mov
out
jne
pusha
dec
mov
call
sub
jp
sar
jp
cwtl
jne
cmp
lock
outsl
test
daa
in
fildl
rcrl
lock
dec
and
jmp
in
enter
aas
push
lock
stos
mov
mov
incb
adc
fldenv
and
loop
adc
push
popa
add
sti
in
push
mov
andl
js
movsl
sbb
sbb
sbb
push
movb
pop
sub
mov
jmp
xor
inc
sbb
push
inc
xor
or
call
add
mov
inc
inc
xor
push
jp
or
ss
push
testb
or
add
int
fstl
andb
lea
mov
or
pop
pop
mov
ss
not
and
pop
sbb
test
adc
dec
mov
jo
cmp
push
inc
or
cmp
hlt
jmp
push
xadd
xchg
lret
add
push
or
je
adc
inc
jno
pop
mov
rclb
repnz
or
mov
clc
sti
add
sub
mov
pushl
shrb
mov
fsubr
xchg
pop
xlat
cmpsl
jne
dec
pop
jg
xchg
out
cmp
push
or
out
popa
xor
mov
inc
mov
add
xchg
shll
rorl
mov
sbb
pop
adc
pop
ds
popf
jae
pop
cmp
sarl
out
lock
mov
inc
jg
insb
mov
and
shrl
sbb
jne
inc
cmp
addb
inc
xchg
jge
mov
movsb
inc
paddsb
adc
sbb
pop
xor
outsl
jle
lret
xchg
sbb
jne
aad
xchg
sbb
xchg
pmuludq
and
push
imul
dec
sub
call
sti
cmp
lret
xchg
fs
push
hlt
clc
cld
push
jnp
test
loope
fdivrp
imull
mov
leave
sahf
pop
push
hlt
in
aam
sbb
mov
xchg
mov
xor
adc
ret
xor
or
ds
inc
test
rcrl
je
mov
neg
add
sub
pop
lock
add
je
test
jne
mov
sub
jmp
ljmp
cmpsb
lea
mov
or
mov
sub
addr16
sub
test
sahf
jnp
lods
cmp
mov
adc
loopne
add
mov
or
jg
ja
pop
ret
mov
mov
jne
insb
add
mov
mov
adc
sub
mov
mov
ljmp
rep
or
movsb
sub
inc
pop
pop
pop
imull
lea
fdivp
shrl
jg
mov
shr
fidivrl
sbb
pusha
jne
rorb
jne
cli
jb
repnz
or
add
dec
add
sbb
dec
call
push
sbb
add
pop
jbe
sub
and
jno
pop
jno
sahf
inc
sahf
sub
sbb
jp
scas
xchg
or
pop
cmc
add
lret
nop
adc
and
sbb
fs
push
or
inc
pusha
loopne
mov
repz
je
mov
pop
mov
incl
sbb
sub
sub
je
xor
pushf
push
mov
and
jne
es
pushf
add
inc
out
fdivrs
xor
xchg
mov
cs
mov
pop
mov
icebp
jbe
sbb
pop
mov
mov
push
mov
filds
cli
pop
mov
jne
call
sub
in
sbb
cmp
push
test
mov
sbb
cmp
jb
shrl
inc
jbe
rcll
mov
pop
loopne
ljmp
push
popa
push
pusha
fld
fs
jbe
pop
or
mov
sbb
js
ret
into
aam
mov
mov
add
cmp
mov
sbb
and
and
out
test
lcall
cmpl
loopne
rsqrtps
add
rcr
mov
dec
jo
mov
mov
pop
adc
or
dec
mov
dec
popf
mov
or
push
xchg
stos
push
ret
into
ds
add
jge
jp
xchg
jbe
hlt
mov
mov
cmp
je
stos
in
bnd
js
clc
sub
xchg
stos
sub
or
lods
mov
call
scas
cmp
mov
rclb
cs
and
movl
loope
enter
in
pop
sub
inc
sub
mov
cmp
shrb
sub
jae
rcr
push
fildl
sub
jae
sarl
movsb
xchg
pop
mov
rep
sbb
and
sub
or
ja
mov
mov
mov
sub
pop
cli
scas
data16
cmp
ja
imul
inc
dec
sub
ret
cld
add
in
imul
dec
cmp
punpckldq
sbb
cld
add
je
xchg
ret
and
mov
jle
imul
jne
lea
mov
push
add
and
cltd
mov
sahf
cmpsl
stc
mov
movsb
xchg
or
repnz
push
iret
push
es
xor
xchg
xchg
dec
dec
fsubrs
rcr
push
sub
jne
and
stos
ret
xorl
inc
push
out
xchg
xchg
xor
cmp
push
or
or
mov
cmpsl
add
push
lcall
je
xchg
nop
out
data16
xchg
flds
fdivs
jno
push
ret
sbb
jmp
cmp
jbe
mov
aad
or
jmp
xor
cmp
lods
and
jmp
mov
pushf
dec
out
add
cld
aas
and
jp
call
pop
js
mov
or
add
hlt
push
add
cmp
ja
aad
cmp
or
push
jne
cmp
jecxz
dec
mov
fcomps
adcl
aam
out
shlb
cmp
inc
je
mov
jnp
outsl
mov
mov
inc
je
mov
dec
je
dec
jl
pop
out
dec
mov
pop
cmp
jbe
mov
or
hlt
xchg
adc
and
mov
mov
sub
pop
push
sub
xchg
mov
inc
iret
dec
faddp
xlat
lcall
les
or
call
adc
and
inc
cwtl
daa
xchg
sahf
jns
xchg
dec
inc
out
xchg
out
and
or
daa
xchg
testb
mov
adc
jns
neg
pop
cmpsl
push
or
repz
push
sahf
ljmp
insb
cmpsb
out
cwtl
pop
and
es
insb
sbbl
nop
jmp
or
and
sbb
out
xchg
push
test
or
fdivrl
push
add
cmp
lds
jns
and
notl
adc
adc
mov
push
pop
mov
ret
mov
sahf
stos
xor
sub
jbe
jg
mov
cli
dec
test
fmuls
pop
add
clc
fs
pusha
imul
rorb
push
ret
or
or
ret
add
ret
loopne
mov
outsb
jge
and
or
dec
cld
lea
and
popa
stos
mov
adc
push
dec
add
cmp
jg
jmp
add
enter
inc
push
or
movsl
inc
das
outsl
shlb
jle
icebp
mov
hlt
insl
enter
and
add
movsb
mov
dec
leave
push
xor
inc
push
dec
dec
xchg
mov
pop
or
or
lods
adc
push
xor
stos
or
jne
lcall
sarb
mov
neg
jmp
or
je
mov
sub
push
mov
into
mov
int3
das
add
or
mov
inc
dec
enter
jg
xor
jmp
cmp
jne
pop
pop
aam
sti
and
mov
cld
mov
sti
mov
add
out
out
shrl
or
repz
inc
in
je
je
sub
mov
jne
mov
fs
xor
jge
push
and
jle
fisttpl
cmc
mov
add
cmpsl
dec
clc
adc
xchg
mov
flds
out
sub
mov
cs
out
mov
fsubrl
js
xchg
jbe
pop
add
jne
or
sti
add
ja
movswl
push
shlb
add
fstpl
mov
or
shll
mov
add
cmc
xor
lods
push
mov
loope
pushf
repnz
dec
inc
dec
inc
dec
lods
or
rorl
loopne
dec
ret
xor
cs
sbb
std
mov
aam
cmp
sbb
cmp
jl
pop
sbb
je
clc
jbe
cmp
sbb
stos
jmp
mov
mov
stos
loop
movlps
pop
pop
inc
in
or
pop
clc
dec
lods
ss
mov
mov
mov
push
dec
sbb
sub
popa
adc
sub
leave
mov
sub
mov
movsb
insl
loopne
pop
adc
cli
adc
mov
pusha
aas
es
ljmp
je
mov
dec
mov
div
mov
inc
test
jne
sbb
cli
in
stos
xor
call
mull
jecxz
js
je
inc
jne
pop
bswap
ss
ret
xchg
repnz
or
repnz
clc
lock
add
pushf
fwait
push
lods
iret
mov
dec
jle
inc
je
push
push
cmp
jg
mov
or
inc
jmp
or
mov
xor
cli
inc
loop
ret
push
test
mov
mov
inc
add
and
and
adc
and
mov
inc
sub
sub
into
inc
es
sbb
and
sub
mov
orl
inc
mov
xor
add
call
adc
into
test
or
and
xor
scas
adc
add
adc
add
out
sahf
mov
jns
and
mov
sti
mov
scas
push
pusha
lret
and
mov
scas
adc
mov
sahf
mov
adc
pop
mov
insb
dec
scas
nop
and
adc
scas
pop
cmp
mov
jns
popa
adc
and
add
insb
jo
jp
add
cmp
mov
shll
pop
in
and
cmp
or
inc
push
mov
movl
cmpl
loope
push
inc
imulb
fldt
sub
in
rclb
enter
xchg
sub
ret
push
fabs
push
subl
inc
pop
frndint
sbb
fs
fistpll
jge
fwait
mov
testb
je
fidivl
mov
pop
fbstp
lea
mov
inc
sub
mov
shr
and
ja
mov
ljmp
mov
mov
sub
or
or
mov
adc
cmpb
jb
movb
js
decb
and
cmp
jmp
data16
pusha
xor
jmp
mov
fisttpll
inc
xor
push
cmp
stos
jbe
shr
mov
push
add
inc
out
cmp
fs
sub
icebp
aas
pop
pop
jp
rorl
je
mov
rorb
neg
pop
pusha
adc
and
mov
xchg
or
hlt
adc
jl
mov
outsl
inc
sub
mov
loopne
jae
dec
add
mov
decb
or
mov
dec
fimull
cmp
mov
shll
iret
setnp
leave
jne
mov
idiv
jg
push
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
movsl
test
fsubl
inc
or
ljmp
adc
sub
movb
cmpb
divl
or
or
sbb
hlt
mov
pop
jae
inc
ret
scas
ret
lret
f2xm1
fwait
jg
loop
push
je
fldz
cmpsb
mov
sar
popf
ljmp
dec
ljmp
icebp
daa
addb
pusha
jne
inc
sbb
idivb
icebp
je
and
fistpll
sub
add
cmpb
xor
fcoml
fstps
push
mov
adc
aas
or
lock
fstpt
fs
add
or
je
test
test
jmp
jl
cmp
push
decl
mov
sub
add
jae
fimull
and
fiaddl
jmp
aaa
mov
idiv
or
push
inc
imul
shrb
cli
hlt
inc
jb
aaa
add
jl
inc
push
and
insb
jmp
push
out
cwtl
je
rolb
xor
cs
rolb
pop
add
dec
sahf
and
mov
mov
adc
dec
push
fldt
fstpl
fwait
out
push
push
pop
xor
rcr
fmuls
cmp
xchg
xor
ret
xchg
inc
or
adcb
jge
adc
adc
mov
xor
push
adc
xchg
push
in
adc
pop
clc
xchg
or
jns
xchg
cmp
jae
or
cmp
inc
stc
cli
es
test
sahf
jae
movzwl
push
pop
outsl
out
data16
add
shrb
pusha
jb
ret
xor
adc
cmp
test
outsl
add
xor
fstpl
fwait
xchg
lock
adc
xchg
std
or
dec
filds
dec
push
add
or
fisttpll
jp
fnstsw
pop
popa
test
popa
int
sub
add
adc
mov
dec
mov
orb
int3
mov
push
cmp
int3
daa
xor
push
xor
and
jbe
mov
and
enter
loopne
scas
adcb
and
fldenv
mov
add
pop
outsb
sbb
nop
add
jp
sbb
add
test
idiv
add
inc
dec
mov
movsb
jg
sbb
pop
or
enter
addb
adc
ja
and
jb
add
or
jb
push
insb
je
pop
dec
fnstsw
bound
test
cs
daa
add
inc
dec
jne
sub
dec
mov
loopne
clc
cltd
idiv
imul
in
mov
ret
cli
add
repnz
ds
lds
add
pusha
ret
or
pusha
test
test
std
mov
xchg
rcll
pop
push
cmpsb
push
cmp
push
fs
and
add
call
cld
in
test
jg
mov
in
clc
addb
hlt
or
lods
pusha
mov
inc
test
cmpsb
pop
inc
in
mov
data16
stc
mov
add
jl
addl
loop
data16
and
jl
mov
lods
mov
shlb
imul
decw
cmpl
outsl
mov
push
sub
pop
mov
pop
inc
cmp
sbb
sarb
xchg
sub
lock
push
shrb
cmpsl
mov
push
add
mov
int
cmp
jb
adc
sub
inc
jmp
xchg
sbb
clc
dec
mov
sbb
hlt
and
hlt
mov
jo
mov
scas
mov
pusha
pop
jbe
sbb
ds
or
xchg
iret
fwait
loope
ret
cmp
addr16
xchg
dec
jo
push
inc
xlat
nop
outsb
jbe
push
or
sub
jbe
ja
sbb
pop
and
sbb
jne
stos
push
push
adc
js
adc
fstpl
adc
ret
aam
pop
fst
sub
adc
clc
fs
mov
aad
pop
dec
js
shll
fidivl
mov
xchg
and
inc
lea
xor
add
dec
out
pop
popa
mov
pop
pop
push
dec
test
mov
push
jb
pusha
in
adc
or
jp
test
push
adc
dec
addr16
xor
lea
mov
cmp
jle
or
das
leave
and
dec
sti
je
mov
outsl
xchg
add
inc
hlt
push
lods
in
add
jo
add
push
lea
or
sti
sti
mov
test
adc
inc
in
add
mov
xor
push
jge
out
mov
mov
push
pop
in
leave
lret
xchg
loopne
add
cli
mov
inc
jo
xor
push
repnz
adc
add
out
repnz
mov
sub
push
sbb
xor
pop
cmc
inc
cmp
pusha
jge
fldl
mov
mov
lea
or
sub
mov
call
sbb
and
pushf
adc
mov
sbb
cmp
xchg
insl
cmpl
sub
adc
or
add
adc
mov
ljmp
dec
adc
push
cmp
pop
sti
sbb
nop
or
ljmp
adc
nop
sub
addr16
and
jmp
mov
mov
mov
jmp
sbb
ret
stos
loop
inc
or
inc
cmpb
jne
cmp
pop
xor
add
push
add
xchg
vmwrite
pop
add
dec
mov
clc
inc
mov
push
rorb
push
jge
cmp
inc
jbe
mov
cltd
cmp
mov
inc
add
addr16
sbbb
jp
leave
push
mov
mov
ss
jge
pop
push
pop
or
xchg
scas
out
repnz
das
pop
cmp
mov
insl
dec
insl
and
xchg
jge
sbb
mov
jl
push
add
sub
jae
cmp
inc
push
adc
cwtl
dec
pop
sub
jge
dec
sbb
pop
loop
push
and
dec
loop
into
cmp
xchg
push
pop
jg
fadds
test
mov
jo
and
add
add
or
or
xor
mov
jbe
push
pop
add
or
or
or
int
push
or
mov
mov
dec
rorb
jecxz
dec
mov
adc
add
push
xor
rcll
pop
or
lock
inc
mov
sti
inc
ret
movsb
xchg
fcomps
pop
stc
inc
mov
mov
lea
mov
xchg
fadds
pop
aam
adc
aam
dec
cs
sbb
xor
lock
mov
add
sub
xchg
pop
xor
nop
pop
push
inc
mov
fmull
dec
add
jmp
mov
jo
aad
sub
daa
mov
dec
cmp
and
daa
lods
sub
adc
icebp
pop
inc
rcll
loopne
pop
mov
pop
push
mov
push
lahf
je
test
notl
jl
fildl
adc
and
add
fwait
call
pusha
or
je
or
je
jmp
push
jne
lods
mov
ds
out
popf
je
mov
mov
push
add
sbb
add
adc
bound
loopne
cli
loopne
addl
ljmp
push
adc
or
and
xor
out
add
or
or
add
mov
or
add
add
or
call
fidivs
rorl
push
sub
popl
in
orb
sbb
jmp
daa
sub
pushf
adc
lock
scas
sbb
xor
icebp
loope
dec
cmp
cmp
cmp
xor
adc
sbb
nop
out
adc
mov
mov
imul
in
adc
xchg
mov
int
adc
inc
jne
fcmovnb
test
or
out
push
rol
jecxz
cmp
pusha
loope
iret
sub
adc
or
mov
sub
mov
sub
fidivrs
mov
or
pop
jae
pop
imul
cmp
pusha
or
push
cmp
fnsave
push
cmc
mov
and
lds
mov
sub
mov
cmc
push
ret
outsb
jp
adc
cmp
and
cld
ficompl
mov
or
dec
inc
push
mov
mov
or
inc
aam
xor
scas
dec
das
push
dec
bound
push
adc
lret
mov
clc
push
jnp
xchg
mov
lret
push
sub
add
xchg
push
fstpl
notb
cmp
ljmp
fldl
cmp
popa
scas
aas
or
mov
mov
bound
jp
or
fdivrs
mov
in
mov
sub
and
inc
sub
negl
push
mov
cmp
push
pushf
or
in
insb
cmp
mov
sbbb
sub
add
mov
dec
pusha
adc
pop
loopne
add
and
push
sbb
or
sub
jl
add
mov
fsubl
ja
loop
iret
dec
mov
mov
pop
xor
dec
push
xchg
mov
dec
sbb
xor
adc
push
repz
adc
cmp
and
xor
or
jecxz
xchg
lock
push
or
fwait
jo
push
mov
and
outsb
cmp
push
mov
fmul
dec
mov
or
mov
xor
mov
stos
sub
pop
jl
push
inc
push
cmp
jne
rcrb
pop
adc
cmp
imul
and
adc
je
dec
mov
xchg
mov
jmp
mov
jmp
push
push
push
sahf
jbe
push
inc
js
cmp
lret
out
or
add
div
out
imul
adc
add
add
jl
pop
mov
add
mov
mov
fdivrs
or
sub
adc
pop
or
sub
or
jmp
add
cmp
sbb
jne
clc
orl
mov
jne
cmp
jg
push
xor
test
mov
cltd
xor
sub
add
data16
icebp
aas
cmpsl
stc
imul
add
dec
cld
add
aad
lcall
sub
gs
xchg
pushf
fsubrs
pop
loopne
ret
jns
mov
iret
sub
xchg
sarb
or
push
repz
outsl
fs
loopne
or
and
aam
pop
dec
addr16
das
mov
fsubs
xor
fmull
mov
jg
ljmp
jbe
adc
push
cmp
fidivrl
or
jbe
mov
adc
test
and
or
push
das
mov
and
jns
sbb
out
or
add
sbb
push
in
fldenv
pop
sbb
add
and
xchg
jge
es
in
sti
sub
mov
call
cs
adc
lock
sub
es
in
cmpl
cmp
jmp
jne
clc
jmp
cmpb
ja
mov
add
shlb
mov
push
rcrl
out
ja
jo
ds
add
cmpb
jle
and
js
test
xchg
mov
add
or
repz
sbb
cmp
mov
xor
inc
cwtl
daa
repnz
mov
stos
and
stc
ljmp
jne
adc
and
and
ret
cmp
leave
js
jo
ds
adc
mov
xchg
fsubrl
jle
mov
xorb
das
push
jne
adcl
notb
movl
mov
cmp
cwtl
test
xchg
rol
fs
pop
add
jne
rcl
fs
ss
jne
pop
repnz
scas
or
movsl
push
decb
fimuls
xor
adc
test
inc
and
es
sub
jle
pmulhuw
mov
sub
or
and
add
xor
dec
xor
or
dec
dec
dec
sbb
dec
fadds
sbb
je
test
add
inc
push
dec
or
pop
sbb
xor
mov
addl
mov
cmp
inc
mov
and
bound
ja
jne
jo
sbb
sbb
pop
daa
shlb
js
leave
xchg
and
mov
adcb
imul
les
lea
add
sub
and
mov
sbb
cmp
inc
setl
stos
mov
add
mov
jns
sub
loop
hlt
adc
adc
les
jp
outsl
mov
mov
fisttpl
push
adc
xor
out
mov
cmp
add
sbb
jle
sbb
pop
fmul
fstpl
fwait
jmp
dec
mov
rcrl
add
les
ljmp
push
push
sbb
jmp
and
repnz
sub
jb
xor
movd
or
xchg
test
lret
jae
fwait
xor
test
lea
push
adc
jmp
adc
data16
cmp
ret
cmp
divps
push
outsl
push
nop
or
test
ss
adc
xchg
cmp
add
hlt
xor
lods
mov
add
or
add
mov
rorl
jnp
rorb
outsl
dec
out
shr
rcll
mov
or
or
sub
loopne
dec
lea
roll
sub
pop
mov
imul
cwtl
inc
jl
movl
das
or
or
test
bound
rcrb
cld
xchg
dec
mov
subl
shlb
in
loope
call
and
jne
mov
or
and
sub
loopne
or
das
jl
mov
push
loopne
add
pop
jp
popf
push
and
sub
adc
adc
cmc
mov
dec
inc
and
mov
rorl
pusha
inc
xchg
sub
incl
pop
add
mov
mov
cmpb
jnp
nop
out
in
add
out
in
xlat
mov
cmpsl
mov
inc
mull
insb
js
mov
fcmovb
jbe
cmp
fimuls
push
out
push
sbb
ljmp
mov
dec
aaa
lret
hlt
push
xor
push
fimuls
pop
inc
push
pop
cmpl
inc
nop
or
iret
xchg
addb
lahf
and
and
test
orb
fidivl
pop
or
repz
pop
xchg
nop
mov
dec
sbb
das
mov
ljmp
je
sub
je
mov
push
call
pop
sahf
mov
xor
mov
jecxz
sbb
adc
lock
fnsave
stos
add
jge
xchg
mov
lahf
add
std
aam
adc
call
nop
mov
add
aad
and
cld
add
jmp
mov
jo
iret
movups
jmp
icebp
pop
je
cmp
bnd
ss
or
movsb
pop
leave
sub
mov
pushl
rcrl
cld
push
ret
imul
sbb
ja
scas
add
sub
and
or
xor
ds
lock
loopne
sti
xchg
sub
push
test
cmpsb
jbe
sub
cmpl
push
dec
out
in
mov
aam
popa
rclb
adc
xlat
xor
push
les
jmp
sub
aaa
je
mov
mov
mov
inc
fisttps
test
inc
mov
lods
aad
mov
add
aas
mov
mov
cmp
inc
sub
push
fwait
ds
lds
mov
cmpl
mov
mov
inc
add
push
dec
adc
fbld
out
notl
les
mov
pop
faddp
sti
movb
mov
jg
in
hlt
push
inc
push
mov
rcrb
cmp
sahf
imul
mov
js
xchg
cwtl
js
imul
add
fnstsw
cmp
xchg
dec
mov
int3
pop
mov
dec
add
imul
out
lods
xchg
pushf
leave
cmp
dec
mov
adc
hlt
call
xchg
pop
js
inc
xor
jmp
push
cmp
fdivl
dec
adc
pusha
imul
les
push
xchg
rcrb
lahf
mov
pop
jne
push
cmpsl
rcr
add
sub
sbb
test
cltd
sub
sub
push
orl
push
push
dec
or
xorl
sbb
sti
adc
rcll
lea
push
mov
ja
or
test
and
insb
test
int
sbb
clc
pop
loope
cwtl
and
pop
aas
cmpb
lods
jg
subl
or
js
pop
push
or
xchg
add
and
pop
lret
jne
push
push
jg
cmp
sub
sbb
jns
addr16
scas
add
js
sbb
push
clc
inc
and
inc
lods
frstor
jo
jo
pop
cwtl
decl
push
mov
push
dec
sar
lret
ljmp
sub
jb
loopne
sbb
mov
cld
jmp
push
sbb
or
imul
fld
cmp
pop
pop
fwait
in
adc
ret
loope
dec
inc
loopnew
cld
imul
fstps
rolb
iret
loop
ret
inc
lea
jg
mov
dec
in
inc
call
or
fucomi
mov
push
in
push
loopne
data16
nop
in
dec
loopne
test
pop
in
or
push
test
pop
dec
cmp
insl
add
cltd
push
jne
pusha
leave
jo
push
icebp
and
imulb
pop
das
sbb
adc
mov
sbbl
das
xchg
push
push
cmp
je
jmp
xor
test
jl
xorl
push
jmp
and
dec
sti
mov
ret
mov
add
push
pop
or
xor
or
or
push
push
pop
cmpsl
sbbb
leave
lock
mov
add
pop
mov
loopne
adc
mov
xor
xchg
lods
mov
xor
cmp
push
inc
cld
pop
cld
cmpl
pmulhuw
sub
lock
push
and
sbb
inc
or
inc
adc
inc
pop
aam
test
and
mov
xchg
jl
add
or
pop
adc
add
xor
sub
mov
jnp
jae
or
out
lret
enter
rcrb
aam
or
nop
xchg
mov
mov
lea
xchg
mov
outsl
jmp
sub
enter
movsb
test
test
nop
adc
cmp
dec
daa
dec
int3
jb
adc
inc
sub
dec
pop
cltd
aad
ret
icebp
and
es
push
lock
mov
gs
cld
std
rolb
ss
ljmp
jae
imul
sub
fdivrs
and
mov
orl
out
xor
pop
ret
hlt
inc
loop
inc
pop
lock
ret
lock
sub
cmp
scas
in
adc
push
shlb
xor
sbb
add
jo
movsl
test
mov
add
jns
sub
mov
mov
xchg
mov
orl
test
mov
adc
mov
fldl
cli
mov
enter
cld
mov
test
add
fwait
repz
addr16
sbb
shufps
adc
in
sbb
sbb
jo
and
adc
inc
push
fiadds
inc
aaa
dec
xor
xor
adc
cmc
or
adc
cmpsb
sbb
adc
jo
jne
ret
jbe
cmp
xor
int
inc
xchg
orl
xor
sbb
xchg
adc
fstpl
jl
add
rorb
les
das
add
sarb
lock
ja
jle
jp
adc
adc
xor
fldenv
cmp
insb
jl
pcmpeqw
cmp
mov
das
call
sbb
fildll
inc
or
lea
and
adc
pop
or
xchg
test
add
imul
call
dec
popf
or
mov
sub
mov
dec
push
adc
cmp
addr16
aas
loop
fwait
pop
push
stc
cmp
mov
loopne
bound
push
inc
andb
jb
inc
mov
dec
jmp
dec
test
jl
nop
decl
nop
mov
cmp
sub
and
sub
dec
or
inc
jae
push
jg
mov
jmp
inc
cmp
bound
add
je
add
sbb
add
xor
cmp
daa
xor
push
shr
sub
cmp
jle
push
sub
inc
mov
xor
push
imul
or
enter
and
mov
ret
or
pop
ret
cmp
jl
rcrb
loopne
and
fcompl
inc
inc
jge
push
add
mov
dec
ja
sbb
int
pop
clc
inc
sti
dec
leave
and
cmp
jge
insl
ds
push
jl
jne
sbb
inc
xchg
or
sahf
aaa
pop
inc
bound
lea
mov
stc
movb
enter
inc
jmp
push
add
dec
xchg
rcrl
ljmp
adc
ficomps
jp
mov
add
adc
daa
lock
sarb
jp
adc
jge
outsl
or
ret
stc
fbstp
pop
mov
adc
dec
sub
push
mov
mov
sub
sub
push
daa
push
out
mov
and
mov
dec
and
push
add
sbb
imul
xor
int3
push
inc
imul
outsl
cwtl
sbb
test
adc
popf
and
roll
mov
mov
sete
adc
cmp
jge
stc
push
test
or
mov
sub
mov
xchg
int
add
andl
xor
add
ret
or
add
add
aam
call
or
sub
scas
popf
cmp
divb
popa
flds
roll
ljmp
nop
pop
addr16
push
or
sbb
inc
jo
xor
test
movsb
cs
inc
push
mov
pop
fadd
pop
ret
jae
je
daa
jne
xchg
mov
cmpsl
loop
test
lea
int3
inc
cmp
push
jmp
jne
jnp
cmp
sbb
sbb
jle
xchg
mov
pop
sub
cmpb
xchg
xchg
jl
jmp
js
jge
jb
mov
stos
inc
sub
xchg
cmc
jp
dec
in
repnz
xor
sarb
sub
rcrb
push
push
push
sub
cmpsb
or
clc
sub
aaa
and
jns
repnz
inc
add
or
mov
ret
sub
sub
cmp
jbe
or
imul
insl
add
lods
jge
mov
inc
das
and
mov
movsb
out
lret
addr16
add
xchg
pushf
lret
pop
or
dec
test
inc
inc
inc
rolb
jne
jg
push
lcall
sbb
call
xor
mov
sub
pop
aaa
pop
sub
jb
inc
mov
inc
and
sbb
lret
jne
dec
cmp
jge
sbb
mov
pop
jne
add
mov
ds
push
or
inc
add
add
dec
pop
pusha
mov
lret
fcoms
shlb
add
inc
pop
imul
call
cmpsl
ficoms
mov
adc
aas
cmp
movsl
pop
cmpl
jmp
movb
punpckhdq
dec
jb
sub
sub
ret
mov
cwtl
pop
push
test
push
and
sub
ja
ss
dec
lahf
out
dec
jne
push
subb
mov
xchg
mov
dec
mov
sarl
mov
or
xchg
xchg
adc
pop
or
lock
imul
inc
sub
nop
es
mov
nop
xchg
call
and
sub
cld
mov
leave
ja
mov
sbb
or
das
mov
lret
or
push
aad
mov
test
js
jge
dec
lcall
cmp
scas
fstps
sarb
sub
ss
add
mov
sub
xchg
cmp
int3
mov
mov
out
and
sub
aam
inc
ss
test
mov
fs
outsb
sub
les
inc
rolb
leave
pop
hlt
mov
rcll
sbb
loopne
pop
jo
mov
hlt
mov
jb
aas
add
in
sub
popf
dec
cs
sub
mov
aaa
bound
mov
jo
out
push
loopne
inc
push
insl
das
fs
iret
sbb
insl
add
fs
daa
data16
cmp
pop
jo
sbb
pop
cmp
push
add
sbb
or
pop
cmp
out
in
inc
mov
or
aad
or
or
orl
xchg
adc
jmp
scas
cmpsl
outsl
lock
fsubrs
sub
adc
xlat
push
jmp
ret
jnp
jns
cmp
sarb
push
pushl
sbb
inc
push
cs
clc
mov
inc
mov
cs
fistl
pop
gs
cwtl
or
pop
add
mov
jp
sbb
rolb
bound
pop
imul
add
jge
mov
test
inc
sub
icebp
sti
adc
xor
dec
bound
adc
push
push
outsb
imul
jae
inc
jb
sbb
pop
xchg
add
cmovg
push
or
fs
gs
outsb
outsw
fistl
jmp
mov
rol
add
cmp
inc
inc
test
jg
pop
jg
or
xor
inc
jmp
pop
pop
ret
pop
outsb
pop
add
clc
adc
cmp
test
add
adc
cmc
movsb
xchg
test
pop
sbb
adc
mov
mov
test
or
mov
stc
mov
jge
sti
pop
cli
call
lret
testb
clc
lcall
cmp
and
enter
adc
jmp
cmp
lea
push
inc
ret
jecxz
add
mov
out
lret
dec
imul
cmp
ret
popf
sub
xchg
mov
xchg
cmp
xchg
adc
inc
in
aaa
mov
rcll
mov
push
ss
fsub
subb
pop
sbb
and
push
adc
stc
in
inc
add
push
jbe
lahf
mov
or
hlt
cmpsl
add
movsl
xchg
paddsb
xor
aaa
mov
hlt
cli
test
fs
cmc
jnp
test
jecxz
add
sub
xorl
adc
mov
add
movsl
mov
mov
pop
inc
fists
dec
and
ret
scas
cmp
add
and
call
inc
ficoms
push
fdivrs
mov
cmp
mov
loopne
jne
push
bound
inc
bnd
imull
out
inc
add
adc
sub
push
lods
fwait
push
pop
push
sub
pop
or
cmp
and
add
dec
pusha
adc
aaa
movsb
imul
gs
jo
aam
mov
dec
pop
xchg
lock
inc
dec
les
dec
ret
xchg
xchg
aaa
loope
xor
mov
mov
aad
mov
cmp
and
repz
cld
icebp
inc
cmp
jne
nop
adc
cld
pop
sub
cmpb
or
in
daa
fwait
sbb
into
pusha
push
xor
loop
loop
and
inc
out
subb
cli
push
push
sub
insb
xchg
adc
add
jle
dec
sub
aaa
push
loopne
fnstenv
xor
ljmp
repz
scas
or
fs
inc
inc
mov
in
iret
fists
mov
daa
mov
add
or
rcrl
push
add
sbb
lea
aaa
or
cmp
cwtl
sub
sar
pop
and
roll
call
popa
sub
addr16
lret
ds
push
decl
mov
js
mov
mov
sbb
sbbb
rcrb
loop
mov
aad
movsb
mov
addr16
or
pop
in
inc
les
test
adc
shll
mov
pusha
enter
jb
call
aaa
popa
dec
out
nop
arpl
adc
call
sbb
clc
cmp
push
push
clc
icebp
stos
and
mov
jb
xchg
or
push
pusha
or
ret
les
loope
push
push
sub
sbb
mov
adc
xchg
xor
xor
test
out
xchg
or
jge
sub
in
aaa
out
sbb
inc
sbb
push
fcomps
sub
or
decl
cmpl
push
push
pusha
ds
jo
stc
ret
cmpsb
pop
xor
mov
or
cmp
test
loopne
pop
fbld
notb
mov
inc
or
add
cmp
je
mov
mov
rolb
mov
xor
xchg
pop
xor
push
dec
lods
sbb
hlt
int
jg
xchg
and
fisttpl
cmp
pop
sahf
or
ror
cmp
pop
mov
sbb
adc
mov
int3
push
pop
sahf
scas
add
xor
cmpsb
push
popl
ss
imul
add
xchg
out
push
outsl
jp
dec
mov
hlt
cmp
inc
pusha
loope
enter
inc
adc
sbb
cmp
mov
jne
adc
test
jl
cmc
pop
mov
dec
pusha
push
mov
mov
punpckhwd
mov
pushf
add
pop
jo
cs
ja
inc
inc
mov
repz
stos
lods
add
in
ret
cmp
mov
sbbl
outsb
je
clc
or
cmp
fs
inc
adc
scas
inc
dec
xor
adc
loope
add
shlb
push
xor
clc
push
jo
lock
xchg
push
or
ja
loopne
nop
fcoms
out
scas
sbb
push
inc
dec
enter
sahf
idivl
push
mov
dec
test
jnp
loopne
mov
add
nop
aas
repz
push
mov
repz
out
or
push
fistpll
push
out
jns
dec
pop
push
pusha
push
jg
es
pop
out
cmp
jle
iret
dec
xor
negl
mov
sub
fnstsw
rcrb
sbb
es
or
add
scas
push
adc
enter
das
or
cwtl
mov
mov
iret
add
add
cld
js
stc
int3
push
cs
clc
cwtl
mov
jnp
iret
in
lods
inc
lock
das
in
mov
jge
xchg
ja
push
js
les
loopne
hlt
mov
push
fcoms
sahf
xchg
out
adc
dec
enter
mov
inc
sarb
mov
mov
mov
insb
mov
push
outsb
iret
in
lock
test
cmpsl
movsb
mov
aam
cltd
pop
mov
repnz
push
cmp
xchg
sbb
mov
xchg
pop
mov
mov
mov
mov
cltd
jne
mov
pop
add
jecxz
addr16
mov
push
aas
clc
sbbb
or
dec
add
iret
fadd
jmp
mov
in
pop
add
mov
mov
xor
cmp
inc
push
pop
daa
jb
enter
sbb
and
nop
sbb
mov
jp
adc
mov
add
add
cmp
add
lahf
pushf
and
daa
push
and
xor
add
adc
sbbb
push
push
xchg
or
push
stc
aas
mov
and
cmp
cmp
xor
and
daa
xor
jge
outsb
push
pop
lret
js
jmp
loopne
push
jle
and
jmp
pop
xchg
dec
cmp
dec
aam
or
jnp
rcrb
mov
mov
sti
xchg
adc
sbbl
test
jp
ljmp
in
adc
xchg
inc
scas
in
movsb
jl
xchg
add
xchg
sti
movsb
push
test
or
outsb
or
dec
push
mov
and
test
sub
sbb
pop
daa
fsubrl
cld
sub
inc
clc
clc
lea
test
jg
shl
cmpb
cmc
sbb
je
mov
pop
push
cld
mov
sub
pop
mov
ret
or
pop
sub
mov
mov
jg
adc
in
push
sar
xchg
jns
lcall
popf
xor
mov
cmp
inc
std
loope
pop
inc
adc
std
orb
rcrl
movsb
or
out
in
xchg
or
dec
jmp
mov
imul
or
scas
sub
add
scas
xchg
and
iret
rolb
jns
rclb
gs
popf
pop
jp
in
add
ret
push
mov
mov
jl
mov
pop
mov
lcall
in
leave
xor
mov
xor
inc
sbb
dec
xor
dec
and
xor
and
sub
and
sub
xor
and
dec
je
jl
dec
in
cmp
test
xor
rorb
xor
pushf
inc
test
xor
repz
sti
mov
in
int3
push
in
leave
repz
push
insb
cld
in
xor
xor
cld
pop
sarb
in
push
std
or
pusha
inc
mov
jne
pushf
adc
sub
inc
inc
push
sub
fsubs
stc
repnz
dec
add
outsl
je
fs
jne
or
popa
dec
out
jle
enter
adc
mov
pop
outsb
dec
jb
pop
outsl
jb
inc
xchg
out
fldcw
pop
xor
jb
insl
push
je
pop
push
and
sbb
dec
xchg
fwait
insl
and
rolb
pop
dec
pop
pusha
outsb
mov
pop
pop
outsl
aaa
loop
and
adc
mov
xor
nop
imul
xlat
out
add
and
cmp
fdivrl
add
je
orb
popf
push
inc
aaa
inc
fldcw
mov
sub
pop
sbb
dec
js
adc
mov
push
daa
mov
dec
nop
sub
sbb
repz
push
xor
es
push
inc
xorb
pop
push
fs
push
and
es
adc
sub
pusha
mov
sbb
mov
adc
or
xchg
and
add
ret
fists
imulb
mov
and
adcb
ds
adc
xchg
and
mov
loopne
loope
in
pop
push
mov
ret
out
inc
jb
lret
inc
add
ds
movl
movsb
sti
pop
test
jo
xchg
sub
add
dec
ficoms
add
enter
and
add
dec
outsl
bound
je
je
sbb
cli
inc
jb
clc
iret
fcoml
in
in
adc
jb
sub
insl
jo
movl
mov
mov
sub
inc
or
int
pop
incl
push
push
pop
pop
out
jmp
test
jo
arpl
out
in
adc
mov
cmp
int3
add
mov
add
xor
and
jne
std
dec
dec
insl
or
pop
dec
sti
shr
call
xchg
out
or
leave
lods
adc
and
es
xchg
shr
xor
mov
xchg
and
in
push
push
add
ret
push
shll
or
push
inc
int3
fildll
inc
dec
and
idivl
scas
dec
loopne
xor
repnz
add
dec
or
cmp
add
sub
mov
inc
dec
adc
mov
add
cmpb
add
aam
xchg
mulb
clc
lcall
inc
pop
add
in
fistps
sti
and
dec
je
sbb
repz
orb
gs
adc
imul
loopne
dec
shll
call
mull
adc
pop
mov
add
inc
clc
add
cmp
adc
mov
iret
and
pop
dec
hlt
mov
in
test
xchg
add
or
jae
shr
je
in
repnz
nop
add
dec
add
cmp
hlt
es
and
nop
mov
jnp
jae
outsl
fisubl
inc
pop
push
roll
and
push
sbb
add
sbb
mov
or
xor
jno
mov
les
fcoml
enter
movsl
ffreep
fs
shlb
mov
ret
add
loopne
or
push
mov
adc
lcall
int
jns
push
push
je
sti
jbe
cmp
mov
aad
jmp
adc
jb
arpl
xchg
scas
ss
cmp
rolb
movsl
xor
cmp
dec
jl
aam
inc
pop
sub
imul
mov
add
xchg
push
pusha
nop
pop
mov
sbb
setg
dec
xchg
add
jbe
push
mov
out
push
repnz
inc
pop
mov
sub
xchg
lcall
aas
jg
cmp
jmp
cmp
mov
and
cld
mov
xchg
adc
and
cld
les
testb
adc
push
add
andb
sub
inc
lods
add
movsl
push
add
or
test
push
fcmove
add
lcall
out
je
jmp
and
mov
lock
or
rcrl
jl
inc
xor
lea
jnp
clc
push
or
push
jno
or
js
in
enter
out
pop
xor
inc
sbb
js
sub
inc
pop
mov
inc
xchg
jmp
inc
mov
nop
sti
dec
ret
repz
dec
jnp
push
iret
imul
mov
in
cmp
fsts
xorb
sbb
push
push
jmp
lcall
jae
push
test
pop
cmp
fnstcw
inc
sub
or
pop
jl
jmp
cmp
div
and
fsubr
and
das
add
mov
push
add
lock
xchg
jo
jmp
mov
repz
jb
mov
in
movsl
aas
push
inc
ss
xchg
or
jmp
loopne
test
mov
nop
add
sbb
fstl
inc
aaa
sub
jmp
sbb
subb
pop
adc
pop
and
jb
in
aaa
mov
loopne
mov
std
lock
mov
jno
lds
js
sub
jae
add
jnp
adc
test
xchg
lock
pop
inc
push
movsb
call
outsl
inc
xlat
cmp
sub
call
mov
jmp
push
fldt
sub
or
imul
addl
and
jle
in
cmpsb
outsb
jb
adc
push
push
ja
jns
push
jns
mov
ds
adc
sbb
rcrb
and
mov
test
xor
inc
adc
mov
inc
cmpb
mov
mov
mov
cmc
pop
test
cwtl
dec
cmp
je
pop
jne
or
or
addl
cmpsb
dec
rcrl
pop
inc
add
or
or
pop
jge
or
rcll
pop
jecxz
nop
roll
inc
push
push
rorb
inc
add
mov
push
aam
jo
mov
push
mov
outsl
or
sbbb
pop
nop
loopne
xchg
insb
adc
or
or
xchg
inc
add
or
mov
sbb
loopne
ljmp
and
inc
rorb
adc
push
out
and
sarb
inc
mov
lock
mov
add
imul
add
jmp
pop
pop
arpl
cmp
cmpsl
out
addb
mov
arpl
mov
daa
test
and
sbb
inc
inc
shrb
movsl
das
pop
add
ja
adc
lcall
jne
sbb
loopne
cmp
inc
movsb
es
addr16
jb
sbb
cmpsl
out
mov
xchg
rorb
movsl
shrb
nop
add
pusha
add
and
push
fwait
ret
adc
jmp
addb
mov
adc
fisttps
dec
mov
sbb
adc
pop
xchg
stos
pop
add
outsl
jns
mov
or
sbb
add
cmp
ja
cmpb
into
repz
out
adc
sub
imul
pop
popf
int3
push
jae
out
mov
pop
pop
out
add
mov
push
leave
add
or
mov
inc
stos
decb
pop
or
sbb
sub
cs
les
adc
xorb
xor
mov
inc
movsl
pusha
sub
cmp
mov
jb
lock
or
or
add
dec
push
cmp
call
mov
lahf
sub
loope
push
mov
loopne
nop
cltd
out
jg
xor
fmull
mov
lods
fsub
fdivrs
xor
or
nop
aam
sbb
jecxz
test
fsubrs
mov
cmp
jne
adc
mov
in
int
popa
and
int
js
enter
push
add
dec
je
jmp
das
mov
lods
fdivs
outsl
les
faddl
je
js
int3
and
add
pop
iret
repz
dec
sbb
cmpsb
leave
call
pop
aas
pop
sbb
pop
cmp
repz
xor
shlb
adc
ljmp
fcompl
xchg
mov
bound
mov
mov
mov
or
cmp
cmp
mov
jbe
lods
mov
pop
in
add
test
nop
cmp
nop
fwait
test
cmp
popf
movsb
aad
cmp
mov
je
cmp
or
adcl
ds
nop
in
sbb
popf
nop
inc
sub
adc
test
adc
mov
xor
cmp
leave
test
push
clc
arpl
or
imul
and
mov
in
add
and
sbb
stos
in
sbb
mov
lock
fucomi
push
push
inc
js
stos
add
and
in
cmc
nop
cmpsb
xchg
inc
inc
mov
lods
or
test
loopne
xor
nop
sbb
and
sbb
movsb
loope
adc
mov
ret
loopne
sbb
lock
loopne
nop
cwtl
adc
repnz
cmp
repz
mull
sbb
cmp
imul
sti
sahf
scas
ficoms
test
pop
pop
stc
es
cmp
jnp
push
dec
push
and
cli
adc
cmp
push
inc
mov
aad
xor
fdivs
cmp
dec
cmp
mov
cmp
cmp
pop
fistl
rolb
insb
ret
and
es
fsubl
fdivl
mov
mov
and
dec
sbb
pop
mov
cmpsb
add
push
fwait
lock
int3
xor
insb
ja
roll
mov
enter
adc
or
dec
in
pop
sahf
out
outsl
pop
push
jns
xchg
mov
outsb
jnp
aas
pop
sub
pop
jl
out
pop
inc
sbbl
les
shlb
xchg
fld
inc
mov
fnstsw
ret
inc
xor
test
arpl
xor
js
mov
pop
fwait
xor
dec
popa
adc
rolb
addb
insl
dec
daa
pop
mov
pop
movl
adc
daa
jae
pushf
pushf
and
pop
dec
sbb
dec
mov
and
cwtl
and
and
cmp
or
mov
and
cmp
jl
mov
xorl
enter
rclb
rclb
movsl
pop
pop
dec
testw
fs
adc
adc
cs
add
sub
data16
fs
sub
movw
mov
xor
mov
movsb
inc
cmpsb
and
mov
cs
pop
or
or
add
data16
xchg
loope
seta
ret
loopne
pop
or
sub
js
xchg
mov
cmp
push
sahf
and
pop
mov
pop
push
push
lods
xor
adc
sbbb
jb
not
mov
dec
adc
xchg
addr16
jg
addr16
insl
jo
jns
add
jne
pop
adc
add
daa
and
jo
mov
mov
ds
jmp
add
inc
outsl
jne
xchg
leave
jp
mov
sarl
jmp
or
xorl
mov
adc
pop
dec
pop
shll
arpl
sub
mov
iret
inc
and
mov
mov
mov
mov
fadds
shlb
xorl
and
out
test
js
mov
in
and
out
seto
ss
fisubrl
rorb
adc
cmp
aas
inc
sti
jbe
and
cwtl
insb
das
sbb
push
test
jno
iret
dec
or
cmp
aad
stc
xchg
lret
jo
pop
mov
xor
addb
lea
sbb
xor
xchg
adcl
or
pop
adc
mov
and
repnz
cmp
cld
ficoml
mov
clc
sub
dec
inc
outsb
jns
sbb
jecxz
cmp
out
pop
inc
push
gs
push
stos
and
test
add
add
andb
rolb
cli
xor
add
sub
add
push
ljmp
push
xor
clc
sbb
rol
leave
es
push
psubusb
icebp
fisttpl
sbb
add
cmp
fisttps
xchg
pushl
out
jb
out
aam
xchg
pusha
jae
or
push
ja
push
cmp
cli
and
add
mov
xor
dec
out
push
xchg
movsb
add
pop
push
xchg
xlat
sbb
pop
sbb
add
jge
jno
icebp
insl
jge
cmp
mov
pop
adc
into
xchg
add
add
or
pop
pop
dec
mov
inc
lea
fsubrl
dec
inc
test
mov
add
cmpb
mov
xor
incb
mov
call
cli
adc
dec
lock
mov
jg
adcl
dec
push
sti
jb
xor
idiv
out
daa
xor
add
push
pop
pop
adc
incl
cmp
dec
adc
mulb
push
jge
adcb
data16
das
in
or
sbbb
cmp
mov
rorl
test
push
testl
push
add
test
insb
mov
mov
push
cmp
mov
aas
loopne
cmp
xchg
adc
pop
or
sub
lcall
adc
pop
cmp
cmp
cld
cld
pusha
sub
movsl
sub
sti
cmp
jo
mov
lahf
jno
inc
mov
cmp
aam
cmp
mov
fnstenv
loope
sub
sub
inc
ja
lock
das
lock
inc
nop
in
stc
dec
sub
jg
mov
sub
push
inc
xor
nop
jno
decl
mov
cmp
pop
adc
popa
dec
gs
mov
je
xorl
fcompl
loop
inc
dec
jne
cltd
cmp
inc
push
xor
cmp
xchg
jno
lods
adcl
dec
shrl
mov
cltd
jge
aas
sbb
adc
call
jle
add
adc
xor
fsts
pop
mov
leave
fisubrl
pop
add
and
adc
seto
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
cwtl
leave
leave
leave
leave
cltd
lcall
popf
sahf
lahf
or
leave
leave
addl
xchg
mov
leave
leave
lea
mov
out
das
add
inc
push
add
and
nop
mov
inc
adc
ljmp
xchg
push
or
dec
or
adc
or
add
inc
les
pop
adc
mov
xchg
sbb
test
jne
xchg
jmp
cs
imul
add
clc
jle
mov
and
loopne
jl
dec
adc
cmpl
xor
hlt
push
adc
cmp
sbb
sub
mov
test
xchg
hlt
push
lods
pop
xor
rorl
add
push
sub
cmpsb
fisttpl
mov
xchg
add
jo
push
or
sbb
or
mov
and
cmp
je
mov
and
sbb
inc
add
and
jmp
jle
in
je
mov
loop
mov
insb
sbb
test
out
ret
xchg
lock
ss
sub
mov
mov
or
stos
mov
outsl
jle
push
dec
inc
push
or
or
dec
aaa
imul
sbb
or
bndstx
and
loopne
jmp
add
jmp
cmpsl
mov
xorl
add
aas
pop
je
xchg
mov
lar
decb
ja
pop
push
jmp
call
jmp
imul
cmp
jb
clc
lret
sar
jae
or
movsbl
and
pop
ror
cmp
adc
jo
add
ds
jp
push
pop
pop
in
push
push
adc
lcall
mov
cmpb
ja
jb
xor
xor
push
add
xchg
das
iret
out
mov
mov
mov
andl
push
and
jns
imull
stc
adc
and
mov
add
shr
cmp
push
adc
por
enter
insl
mov
aaa
mov
and
dec
jae
mov
dec
xor
inc
xlat
stos
insb
lahf
cs
sub
sub
jg
push
or
jle
xchg
mov
incl
cmp
pop
mov
xlat
or
rol
ljmp
sub
cmp
fimull
add
fadd
das
or
jmp
les
js
and
ds
adc
pop
dec
pop
add
dec
and
mov
mov
mov
xchg
fcomi
addr16
cmpsb
add
inc
jne
ss
pop
cli
and
xor
mov
push
xor
lds
and
sbb
jbe
ret
sbb
lods
sub
adc
push
push
and
or
loopne
sbb
dec
add
hlt
push
pop
xor
ret
or
dec
sub
or
js
lcall
lahf
inc
clc
inc
out
dec
hlt
icebp
and
jmp
das
fmuls
and
push
or
jecxz
add
icebp
pop
jmp
cmp
sbb
mov
rorb
out
mov
cld
xchg
cmp
lcall
iret
lods
pop
bound
cmp
mov
cmp
insb
loope
or
xor
adc
cmpsl
xchg
pop
inc
sbb
inc
xlat
lcall
xchg
iret
jnp
mov
fisubl
outsl
cmp
sbb
fstp
mov
jo
add
or
pushw
data16
jbe
or
cmp
or
sub
adc
pop
lret
add
pop
lcall
rorl
jge
cmc
jne
and
or
push
test
cmp
addr16
les
or
inc
or
mov
sub
fldl
adc
movsb
adc
push
fbld
and
out
cmp
shrl
push
loop
shl
hlt
pop
pusha
sbb
and
orb
cmp
jmp
push
sarl
and
push
push
inc
sbb
inc
push
das
lods
push
stos
push
lock
jmp
cmp
pop
out
jp
sarl
loopne
enter
pushl
int3
fildl
sbb
adc
inc
roll
adc
fs
pop
add
mov
cmp
dec
or
jae
jne
sbb
inc
pop
adc
lret
sbb
imull
or
dec
add
jp
fisttps
icebp
jbe
fnstcw
outsb
lahf
fldenv
push
cwtl
jmp
or
cmc
js
sbb
and
or
inc
int
xlat
dec
mov
adc
adc
dec
gs
mov
cmp
pushf
daa
mov
mov
or
push
loop
sbb
xor
nop
int3
sbb
xor
inc
insb
imul
dec
aaa
ds
icebp
popf
fimuls
je
mov
jns
sbb
xor
push
gs
inc
insb
popa
std
testl
sbb
imul
gs
push
adc
xchg
mov
outsl
in
fs
outsl
test
nopl
pusha
nopl
sbb
scas
rcrb
outsb
insb
jns
mov
mov
cmpsb
shll
push
push
imul
or
jb
or
test
cmpsl
or
dec
imul
inc
lock
faddl
cmp
out
test
lret
push
dec
ljmp
js
add
jno
adc
dec
sub
xchg
outsl
cmp
or
or
dec
gs
fstps
mov
rclb
jae
dec
add
and
jge
jne
shll
mov
adc
inc
jbe
fadd
fcmovne
dec
or
push
gs
mov
add
sub
aam
ds
xchg
subb
inc
in
inc
cmpl
wrmsr
aaa
popa
fdivs
ds
sub
xchg
mov
inc
push
xchg
mov
nop
nop
cmpsl
popa
scas
xchg
in
and
inc
stos
dec
pop
in
mov
sbb
lods
outsb
and
sbb
cmp
inc
cmp
stc
cs
or
pushf
jmp
clc
aaa
or
fimull
enter
scas
hlt
cwtl
adc
jns
mov
cmp
ds
push
inc
and
insl
xchg
ljmp
mov
adc
mov
inc
repnz
add
ds
mov
add
jb
out
out
scas
pop
mov
inc
int3
jae
mov
push
sub
and
imul
cmp
add
cmovl
sub
out
insl
jo
push
cmpsb
fsubl
aas
dec
adc
js
and
pop
enter
mov
mov
nop
jb
or
mov
mov
adc
pusha
test
and
mov
dec
and
jle
cmp
adc
lods
popa
cmpsl
mov
mov
bound
js
dec
lcall
aas
ss
scas
pop
and
call
les
fldenv
xchg
dec
inc
push
subps
pop
xlat
xchg
cmp
loope
sarl
push
add
clc
push
mov
push
adc
sub
inc
sbb
mov
mov
mov
out
pop
and
or
jb
test
fst
cmpl
adc
shl
jle
int3
int3
lea
push
movsl
cmp
pop
mov
pop
fdivrs
sbb
cmp
push
sbbl
cmp
shlb
inc
test
fsubs
iret
dec
int
ljmp
mov
xor
cmp
mov
nop
loopne
and
pop
push
push
loopne
xchg
testb
sub
outsb
push
cmp
cli
ficoms
test
sbb
andps
fisubrl
dec
pop
cmpsl
push
cwtl
xorb
sub
loopne
cwtl
dec
out
negb
pop
shr
cmp
stos
sbbb
mov
and
out
sahf
data16
cmp
xor
das
jo
push
outsb
xor
roll
sti
stos
inc
sub
idivl
inc
push
push
mov
mov
aaa
pop
and
dec
adc
push
cmpsb
insb
inc
pop
mov
xor
pushf
push
sbb
aas
add
and
pop
cmpsl
fidivrl
cmp
mov
fs
push
incl
mov
shll
dec
clc
aas
lea
lock
sub
cmovns
aaa
sbb
sahf
fs
jo
push
add
pushf
jae
push
rclb
sahf
cmpsb
int
in
or
fisubrl
outsb
pusha
mov
fwait
addb
push
or
sbb
add
cli
inc
jbe
sti
dec
fcmovu
je
add
pop
insb
ss
push
cld
jle
jg
adcb
mov
data16
cld
push
and
pop
pushf
ja
jo
mov
jl
sub
push
jl
sbb
ss
mov
jns
loopne
hlt
cmpb
popa
sbb
fsubrl
dec
sbb
mov
push
xor
and
cli
adc
in
or
sub
cwtl
dec
inc
inc
jecxz
iret
les
xor
mov
les
push
addb
ss
cmp
je
outsl
in
mov
out
mov
outsl
pop
push
fadds
fdivl
or
jbe
xchg
xchg
enter
mov
fwait
in
mov
sbb
outsl
cli
fidivrs
push
outsb
insb
push
jo
mov
nop
mov
mov
pusha
pop
jo
idivl
cmp
add
scas
addl
pop
int3
inc
sbbl
out
nop
loopne
je
push
hlt
lea
xchg
mov
pop
or
call
das
sbb
push
jo
clc
xlat
inc
inc
daa
xchg
loop
pusha
ds
insl
xor
push
call
mov
push
dec
sbb
movsb
adc
arpl
scas
pop
sub
addl
xor
inc
das
add
xchg
dec
aas
mov
pop
add
ret
shrb
dec
pop
and
xor
xchg
loope
inc
stos
inc
divl
mov
lahf
movl
enter
pop
sub
or
mov
inc
jecxz
inc
xchg
rolb
jbe
xchg
push
enter
xchg
inc
fcmovb
lcall
mov
adc
es
idivl
or
dec
push
adcb
iret
or
icebp
adc
pop
xor
sbb
pusha
cltd
inc
xor
nop
cltd
andps
imul
and
or
adc
pop
jb
sbb
and
jb
and
sbb
les
push
add
xchg
mov
push
jns
inc
psllw
and
push
out
mov
int3
inc
dec
pop
imul
xchg
mov
dec
and
loope
and
sbb
mov
mov
xor
int3
sbb
push
test
and
scas
push
in
jge
iret
shrb
lods
adc
jbe
push
and
iret
repz
cmp
les
mov
nop
sub
test
or
in
rcl
pop
xchg
mov
outsb
mov
scas
xchg
out
sub
mov
lcall
push
cmp
movsl
incb
jp
adc
xchg
daa
stos
outsl
es
dec
scas
fsubs
cmp
test
scas
lds
sbb
push
pusha
movb
shll
andb
ljmp
addl
mov
pop
inc
xlat
sarb
fdivrs
cwtl
rcrl
mov
cs
rclb
bound
pop
sbb
addl
nop
ds
daa
push
add
das
pop
call
push
daa
fdivp
rcll
stos
mov
dec
mov
mov
xor
arpl
mov
das
mov
xchg
rcl
aam
repz
loopne
xor
dec
sub
iret
outsl
pop
pop
sbb
inc
dec
imul
push
in
jns
mov
aam
mov
sub
and
push
aam
add
or
fisubs
les
xor
inc
fldl
dec
out
or
adc
add
sub
mov
jg
fcmovb
jnp
jecxz
fdivs
sub
push
jbe
push
je
clc
fidivrs
push
fs
mov
lcall
int
adc
add
stc
clc
push
push
out
jge
cmc
push
push
push
inc
icebp
push
call
mov
mov
sahf
cld
push
add
push
outsl
lock
adc
aam
fcoml
fidivrs
rolb
sbb
or
xlat
pop
and
rolb
xor
cwtl
sub
stc
pop
add
mov
jae
pop
add
test
push
popa
addr16
stos
fiadds
scas
mov
repz
scas
xor
push
les
enter
push
rcr
stos
subl
imul
nop
scas
cli
imul
dec
fs
dec
dec
push
jl
push
push
push
push
push
aam
mov
jb
mov
fcompl
jns
xor
dec
loopne
inc
addb
test
fimuls
pushl
pusha
adc
pop
sub
adc
and
fnstcw
dec
dec
fs
lds
popa
push
add
jb
icebp
add
xchg
mov
lahf
test
jne
pop
push
data16
push
movsb
push
push
movsl
add
xchg
lahf
push
add
dec
fisttpl
xchg
jl
cmp
jne
mov
pushl
and
decb
pusha
add
rolb
push
mov
mov
sbb
jne
fsubrl
sub
jl
add
dec
scas
jae
cmp
adc
pushf
push
enter
mov
push
roll
cmp
jo
dec
cwtl
cmp
xlat
leave
inc
cmp
and
imul
sbb
add
and
jmp
add
and
mov
incl
pop
or
cltd
or
lret
aas
lock
add
xor
sub
sub
fldt
test
test
sbb
gs
ret
jmp
and
es
push
ljmp
and
add
sbb
xchg
pop
push
mov
and
mov
pusha
pop
add
pop
xor
inc
and
or
cmc
cltd
movsb
stos
adc
fmuls
push
and
fmul
sub
clc
xor
mov
fstl
or
mov
jne
mov
adc
rorl
gs
sarl
jmp
and
and
mov
mov
pop
or
push
inc
sbb
ja
sbb
int
dec
nop
out
and
int3
dec
jne
pop
push
fs
xchg
and
das
hlt
cmpl
pushf
rcrl
in
inc
pop
call
xor
cmp
or
add
out
sbb
shlb
sarl
leave
addl
cmovnp
aas
dec
inc
mov
sub
ret
push
mov
sbb
xorb
jae
adc
inc
sub
push
and
shlb
addr16
push
or
fdivrs
or
lea
sbbl
jno
mov
mov
cmpl
sub
inc
add
push
adc
fistpl
add
imul
pop
loop
outsb
mov
adc
cmp
daa
mov
jne
mov
sub
loopne
or
xchg
mov
fsubrs
je
push
adc
stos
push
xor
inc
mov
jno
xchg
pop
dec
les
add
mov
in
xchg
test
lcall
inc
sub
or
subb
stos
inc
mov
movb
fwait
push
or
or
dec
mov
daa
mov
xchg
push
subl
and
xor
jge
fsubr
and
roll
test
push
xchg
call
mov
mov
ret
xchg
or
cmpsb
inc
xor
cmp
enter
cmpb
mov
dec
sub
pop
dec
fisttpll
add
xchg
scas
hlt
push
enter
repnz
push
add
lods
cmpsl
dec
mov
mov
mov
arpl
inc
outsl
mov
xor
js
add
jecxz
mov
lret
leave
aaa
inc
sbb
cwtl
call
es
cmp
inc
fsubs
jne
push
sbb
pusha
add
add
fldenv
in
inc
int
sahf
mov
push
jl
int3
and
jle
push
call
or
mov
int
pop
lock
or
rorb
inc
fistpl
xorl
push
stc
ja
insl
jae
jne
push
dec
lock
mov
ja
push
mov
dec
call
jne
lds
adc
negl
pop
adc
bound
mov
int3
sbbb
out
sarl
lcall
aad
xor
sbb
pop
int
adc
outsl
shl
dec
in
pusha
push
sar
cli
add
lock
inc
or
cmpl
mov
cmp
adc
dec
loope
popa
fcompl
and
and
lcall
sub
push
ret
xchg
mov
push
add
inc
mov
js
or
or
shlb
mov
stos
pop
hlt
adc
mov
mov
insl
enter
mull
mov
dec
pop
test
cmpb
xchg
or
add
sbbb
ficompl
jae
je
stos
adc
loopne
mov
lcall
or
orl
push
xlat
add
imul
arpl
jb
stos
or
mov
cmp
and
cmpsl
scas
pop
movsb
scas
ss
imul
inc
or
inc
iret
lret
mov
sub
pop
mov
pop
pop
fs
dec
sub
or
mov
sbb
loope
enter
xchg
inc
sbb
pop
push
cmp
popf
jge
inc
orl
mov
dec
inc
and
or
adc
in
jmp
jmp
outsl
jecxz
aaa
push
mov
shll
sub
adc
inc
sbbb
xchg
mov
and
imul
popf
sbbb
into
push
mov
imul
jns
pop
in
mov
sub
jb
mov
pop
and
sbb
sbb
testl
mov
jae
addr16
and
mov
add
push
push
shll
or
or
inc
add
mov
iret
pop
pushf
dec
mov
jo
sub
mov
ss
xlat
call
push
leave
sbbb
scas
push
hlt
loope
inc
mov
or
dec
insb
mov
cmp
sbb
jecxz
add
push
dec
insl
xchg
mov
pop
pop
negl
xor
inc
arpl
jbe
lea
mov
jmp
dec
dec
loopne
push
cmp
cld
mov
inc
push
mov
or
add
push
inc
sarb
jne
cmpsl
and
imul
or
sub
or
ret
add
dec
faddl
fcoml
mov
in
and
pop
dec
mov
ja
xor
insb
xchg
inc
cmp
xor
sub
sbb
pop
sub
call
rolb
xlat
loopne
pop
and
cmpsl
loope
lods
dec
adc
cmp
ror
mov
mov
fprem
sahf
push
mov
lods
or
arpl
xor
pop
sub
sub
inc
pop
xchg
clc
and
push
push
sub
push
test
dec
cmp
dec
mov
mov
xlat
push
leave
push
pusha
cmp
test
mov
mov
dec
nop
outsl
test
mov
jl
aas
cmp
arpl
js
mov
xchg
or
xor
pop
cmp
jo
push
xor
push
loope
es
movsl
push
or
lret
jle
cmpl
nop
xor
mov
mov
cmp
jmp
jl
shlb
fstpt
xor
popf
push
inc
push
clc
je
ret
or
sub
nop
pop
pushf
movsl
adc
push
xor
test
cld
pop
fnop
or
push
stos
sarb
pusha
mov
dec
bound
sbb
cmpl
out
or
and
jge
outsl
adc
shlb
mul
push
jmp
push
imul
rcrb
push
lods
cmp
pop
das
fcoml
aas
jo
sarl
sub
pushf
mov
xor
lods
add
pop
pop
or
decl
push
aad
adc
mov
inc
or
fstps
add
lahf
enter
dec
add
adc
inc
mov
inc
mov
add
inc
pop
push
xor
outsb
rolb
and
stos
mov
mov
xor
add
sub
lea
or
lods
and
popa
nop
sbb
jb
mov
popf
jo
mov
cmpsb
sahf
inc
aad
or
aaa
fstps
pop
mov
pop
clc
or
andb
sbb
cmpsb
ja
adc
mov
pop
dec
movsl
mov
sbb
sbb
imul
mov
inc
sbb
test
mov
hlt
roll
stc
add
adc
nop
mov
pop
jmp
hlt
lock
push
lahf
add
mov
int
popf
ss
out
stos
add
dec
or
out
pop
push
mov
adc
jne
sbb
leave
jno
xor
cmpsb
andl
jae
push
pop
adc
and
jno
inc
sbb
cmc
das
push
hlt
jecxz
and
divl
cld
mov
call
sbb
jnp
or
fwait
cmp
jmp
aam
mov
add
cmp
push
test
pop
and
jns
inc
movsb
xor
cli
test
lret
jl
movsl
push
in
adcb
cmp
or
jbe
ret
pop
sbbl
mov
push
rolb
xor
mov
jg
jns
ret
cmc
jns
mov
aas
sub
jle
mov
inc
pop
sub
adc
xchg
inc
incl
dec
dec
mov
sub
jg
dec
jo
cmp
add
jo
and
mov
inc
mull
fdivl
push
inc
jbe
and
aad
lea
xchg
mov
leave
jne
mov
orl
cwtl
adc
scas
rorb
icebp
sub
add
inc
xchg
in
fcom
daa
mov
or
add
loopne
js
shrb
jbe
in
popf
inc
jne
test
jmp
dec
add
or
cs
fstpt
push
adc
in
das
push
jne,pn
daa
fiaddl
and
or
and
or
add
lds
cltd
adc
dec
outsb
scas
and
sub
rol
and
pop
add
cmp
add
cmp
and
insb
shll
add
test
dec
xchg
push
mov
sar
xchg
xor
rcrb
clc
add
add
in
sbb
sbb
call
out
je
je
jno
andl
pop
stos
add
es
push
loop
shll
addb
into
adc
mov
mov
jg
and
push
add
lar
leave
je
cli
in
or
adc
btr
cmp
jl
call
sbbb
pop
fmuls
mov
mov
idivb
push
jno
fdivp
fdivrl
adc
je
decl
xor
push
and
inc
ja
mov
loop
cmp
std
test
cmp
jl
adc
push
inc
cmp
jne
cmpsb
icebp
aad
decl
jne
les
or
bound
push
loopne
push
mov
test
ret
and
push
dec
push
dec
shr
out
imul
sbb
pop
adc
add
mov
and
popa
loopne
jmp
dec
or
and
test
pop
adc
test
or
mov
aas
andb
imul
mov
scas
adcl
aas
cld
imul
xor
ret
mov
sbb
or
pop
sbb
call
and
idivb
shlb
xchg
inc
xor
push
dec
pop
test
rorl
shll
les
jo
dec
and
push
pusha
je
cmp
sbbb
xor
leave
mov
fsubs
or
imul
push
or
xlat
rorl
aam
int3
aad
and
jne
sub
negb
lahf
inc
testb
je
addr16
push
xor
sub
sub
adc
sti
sbb
outsl
add
in
movsb
push
mov
stc
lret
mov
jnp
jne
xchg
mov
or
mov
inc
adc
push
das
je
fwait
in
aad
push
mov
sub
adc
mov
hlt
inc
mov
pop
adc
lahf
xor
cmpl
dec
mov
mov
aam
pop
push
add
inc
and
or
ret
mov
daa
xchg
jge
mov
sbb
adc
xchg
rcl
ja
or
inc
es
in
cltd
pop
adc
xor
cmp
mov
sbb
ret
loopne
clc
bound
pop
or
insl
add
or
cld
fadds
les
xchg
imul
sti
in
fbld
pop
dec
jle
push
ja
and
pop
pop
and
enter
and
lock
jo
sbbb
aam
aas
rcrb
bound
pop
call
pop
push
pop
sbb
mov
pop
add
jo
into
jne
adc
xchg
mov
or
push
cmpsl
mov
mov
inc
push
cld
sahf
add
nop
neg
jb
insl
pop
enter
inc
mov
test
inc
push
fdiv
cmp
sbb
sbbb
xchg
xchg
xchg
insb
ljmp
push
mov
loopne
pop
push
inc
cs
cmc
pop
pusha
pop
inc
sub
je
inc
pop
cld
pop
rorl
out
test
cmp
aaa
scas
mov
roll
scas
and
lahf
and
dec
mov
push
adc
add
and
hlt
push
mov
inc
jnp
lret
add
add
cli
push
jle
inc
mov
push
es
or
jmp
inc
pop
or
jg
ret
push
repnz
sub
pop
pop
orl
push
idivl
push
mov
sbb
push
iret
xor
fdivrs
lahf
push
xchg
mov
aaa
xor
popf
andl
add
clc
jge
jno
pop
rcrl
mov
nop
or
add
popa
push
pop
pop
inc
test
adc
push
clc
pop
add
ss
ss
test
pop
pop
xchg
jbe
push
loope
lods
lahf
cmpl
popf
cmp
sbbl
outsb
out
je
ror
xor
inc
mov
and
pop
sbb
pop
imul
cmpsb
outsw
adc
icebp
sbb
movsb
pop
adc
cltd
add
sub
xorl
sbb
pop
je
aaa
inc
jg
std
cltd
fs
mov
jb
cmp
jne
arpl
out
jbe
adc
fs
xchg
cmp
push
jno
xlat
pop
xlat
adc
push
sbb
inc
dec
jne
push
sbb
bound
or
jmp
push
push
lret
insl
sub
in
xchg
mov
lods
adc
in
mov
adc
pop
popf
jge
decl
sub
sbb
gs
idivb
call
or
and
fstpt
pop
push
mov
push
inc
xchg
push
pop
arpl
fnstcw
jmp
fld
mov
addr16
mov
aaa
pop
cs
jb
sbbb
xor
aam
pop
ret
adc
add
push
daa
cmc
sbb
aaa
inc
push
daa
pop
fnstcw
inc
mov
or
xlat
icebp
and
scas
pusha
inc
mov
jmp
pusha
xor
repz
lock
cmp
std
cmp
shlb
adc
lea
hlt
push
movsb
cmp
loopne
je
mov
stos
shrb
mov
inc
jno
xchg
sbb
test
mov
cmp
mov
cmp
dec
jne
scas
test
into
out
mov
mov
test
push
into
je
adc
jmp
or
add
dec
imul
add
shrl
aam
inc
push
adc
cmp
out
adc
push
or
add
mov
add
jns
fwait
mov
mov
pop
cmp
dec
setno
xor
loope
xor
sahf
popl
je
jecxz
jo
sub
mov
addr16
clc
pop
push
repz
lds
and
mov
push
addr16
addr16
das
sar
push
add
mov
in
adc
fwait
mov
push
dec
movsb
pop
pop
inc
jbe
sub
add
jno
or
cmpl
xor
mov
push
test
lods
sarb
jbe
cmc
mov
mov
mov
jo
mov
jge
lock
fdiv
pop
jge
scas
mov
hlt
jne
push
in
pop
or
push
pop
es
cld
jbe
dec
test
adc
pop
push
nop
daa
test
pop
addr16
cmp
mov
sbb
or
or
hlt
or
xchg
ja
es
sub
je
lock
mov
or
rcll
arpl
cmp
rol
cmp
xor
xchg
xor
sub
and
cltd
jge
pop
fsubs
sbb
outsb
adc
movsb
hlt
and
in
xchg
ljmp
orb
les
mov
iret
push
sub
cmc
push
xor
mov
rclb
cmp
pop
adc
lock
dec
adc
rcl
xor
aad
or
or
fildll
fwait
pop
jns
sbb
or
mov
add
inc
mov
mov
fs
xchg
mov
insb
sub
push
push
addr16
scas
mov
dec
cld
jbe
cwtl
fistpl
mov
inc
or
mov
inc
adc
pop
adc
push
stc
add
jp
shll
enter
fidivrl
mov
rcll
iret
aas
inc
adcl
sub
inc
fisubrl
aad
sub
and
rolb
dec
sub
test
xor
leave
les
in
mov
outsb
loopne
pusha
xchg
mov
shll
cmp
sub
push
fdivrs
add
clc
inc
clc
dec
in
jl
test
hlt
jp
and
or
inc
inc
hlt
loope
pushf
jecxz
cmc
jnp
and
push
cmpsb
cmp
or
jne
test
loope
push
add
add
push
xchg
jp
test
push
adc
cmp
lods
jmp
sub
nop
adc
mov
and
sbb
mov
clc
fsubrl
or
jl
add
bswap
pop
das
lock
pop
and
xlat
push
addr16
insl
insb
cmp
hlt
mov
ret
inc
ret
popa
in
in
cmp
arpl
and
push
mov
jp
lret
jno
clc
inc
ret
ss
pushl
jne
les
sub
outsl
jle
jecxz
xchg
add
popa
lea
adc
aam
outsl
out
or
insb
out
or
outsl
movsl
rorb
dec
inc
mov
jp
insb
adc
loop
ret
xchg
push
lret
inc
xor
dec
test
xor
or
xchg
jge
test
push
fldt
jge
adc
cmp
fcmove
sti
cmp
and
dec
cld
loope
jge
sub
into
daa
pushf
adcl
fadd
sub
sub
mov
jle
inc
jle
addb
mov
sub
pop
pop
in
test
and
shlb
xchg
push
popa
sarb
rcll
adc
nop
sbb
hlt
xchg
out
cmp
daa
jmp
and
pop
int3
mov
pop
mov
aam
sbb
mov
jmp
popf
sub
cmp
test
cmp
pop
ljmp
int
stos
ljmp
out
mov
push
sub
sub
jne
inc
xlat
adc
ret
mov
cmp
and
or
and
cmovp
mov
lea
jne
mov
adc
rcrl
pop
and
mov
js
lods
pop
das
adc
pop
scas
ja
lods
sarl
sbbl
mov
sub
pop
adc
aad
in
xor
loopne
addr16
ffree
dec
dec
int
xchg
and
movsb
mov
pop
mov
xor
scas
sbb
outsb
in
insb
xor
adc
mov
adc
sub
inc
push
fisubl
cmovs
sub
stos
add
push
or
jns
mov
cmpb
jne
or
add
mov
jb
mov
sbb
xlat
mov
push
dec
jmp
mov
call
push
in
rcrb
add
loopne
icebp
fwait
add
lock
add
cmp
sub
je
xor
cmp
mov
sub
dec
loop
aam
aas
or
adc
stc
je
je
js
xchg
bound
aad
or
shll
movsb
rcll
dec
popa
pop
adc
pop
and
adc
xor
iret
inc
lea
inc
ficoml
test
pop
sbb
lds
add
and
add
mov
or
cld
xchg
sbb
and
loopne
mov
enter
jne
pop
sub
mov
jg
jg
jmp
mov
jge
cmp
lods
fs
push
mov
ja
pop
shl
dec
je
xchg
push
xchg
mov
test
pop
cmp
jne
psubq
push
xor
testl
sub
add
shll
sub
mov
jecxz
sbb
js
icebp
call
inc
insb
inc
mov
fstpt
mov
int3
out
mov
mov
sub
icebp
sub
or
popa
add
or
ret
push
inc
push
das
cmp
jne
testb
or
sbb
dec
or
je
data16
movl
in
push
orb
int3
in
int3
or
add
jb
adc
aaa
push
adc
daa
sub
adc
pop
cli
jns
test
jg
add
leave
repz
cmp
out
lds
lret
add
or
imul
add
wrmsr
xor
mov
mov
arpl
mov
push
enter
adc
xchg
inc
fcomi
dec
sbb
sub
pop
xchg
fucomip
test
dec
jle
xchg
cmp
dec
cmpb
add
cmp
pusha
loop
das
xchg
xor
xchg
mov
mov
jo
adc
add
cmp
add
jmp
pop
sbb
dec
rorb
inc
mov
mov
jo
mov
rorb
adc
sub
imul
sub
sub
xor
int
xor
pop
out
sbb
je
mov
test
fsts
or
inc
ret
push
adc
mov
setbe
leave
sbb
test
in
nop
lock
xchg
les
xchg
dec
adc
or
nop
jbe
xlat
flds
fldl
sub
add
rorb
js
mov
aaa
sub
mov
inc
dec
fmuls
mov
or
adc
or
cwtl
xchg
sbb
rcl
lock
sarb
jno
jbe
leave
ret
mov
cmp
dec
mov
or
shr
sub
pop
or
mov
xor
aas
and
jge
lea
jmp
cld
imul
cmpb
stos
repz
inc
adc
mov
insb
es
mov
ja
xor
cmp
mov
outsb
sbb
push
lods
mov
add
movsb
push
and
test
inc
mov
out
and
loopne
mov
push
mov
jp
adc
mov
je
lcall
aad
ss
pop
pop
push
sbb
in
add
lcall
mov
inc
jb
loope
movsl
mov
sub
out
add
mov
and
scas
jns
and
cmpb
repnz
nop
cmp
mov
sub
adc
pusha
mov
fwait
push
incl
aad
sbbb
mov
dec
mov
pop
push
add
dec
test
call
int3
add
rorl
mov
es
pop
lret
adc
ljmp
jg
jl
cmp
mov
pop
and
mov
cmp
mov
sbb
dec
inc
jge
sbb
jle
not
mov
jl
jnp
push
pusha
hlt
jl
cmp
adc
lock
andl
je
test
dec
mov
push
cwtl
cltd
push
mov
loopne
and
mov
and
roll
fadds
inc
popa
mov
clc
mov
cltd
out
xor
mov
popa
cwtl
xchg
xchg
pop
popf
sub
nop
sbb
jle
push
cmp
and
lahf
pusha
and
adc
inc
sbb
and
push
jmp
jo
fidivrl
sbb
lods
push
loop
mov
loope
xchg
dec
xchg
sbb
scas
push
cmpsb
mov
sub
out
mov
pop
xorb
gs
mov
insb
out
pop
clc
insl
or
sub
cmpl
xorb
adc
add
and
mov
dec
and
insl
test
inc
fdivrs
ja
test
fwait
mov
lahf
fst
xchg
mov
mov
adcl
lahf
push
daa
mov
lea
mov
cmc
or
sbb
mov
test
orb
cmp
arpl
mov
add
fnsave
sbb
jle
pop
cltd
add
xchg
add
dec
cmpsl
sub
cwtl
or
clc
scas
call
out
orl
adc
adc
adcl
xor
add
dec
cmc
sbb
mov
jno
loope
cmp
pop
cmp
add
out
outsl
dec
leave
in
adc
mov
mov
shl
push
fcomps
popa
popf
mov
lahf
jge
pop
adc
js
xchg
cld
push
popf
lock
lods
mov
push
add
dec
or
push
or
test
or
and
nop
repz
xor
cmp
outsb
es
jge
mov
jmp
filds
adc
test
cwtl
lret
stc
jg
pop
pop
mov
mov
imul
repz
rorb
inc
loopne
add
cs
in
iret
inc
cmpsl
cwtl
sbb
sub
inc
dec
dec
loope
movsb
lea
cmp
mov
stos
in
popl
or
out
add
mov
sbb
mov
lds
jmp
inc
popf
or
add
adc
popw
jo
sbb
and
xchg
inc
jmp
aad
and
mov
in
rclb
pop
movsb
adc
fimuls
pop
shll
xor
xchg
and
push
iret
imul
faddl
movsl
inc
or
test
pushf
dec
cli
jne
xchg
xor
jnp
addr16
or
adc
repnz
aaa
movsb
jecxz
aam
les
jmp
dec
cwtl
jge
jne
call
lcall
in
push
adc
in
mov
hlt
imul
movsl
adcl
mov
add
sarl
xor
ret
xchg
leave
loopne
and
mov
xchg
mov
insl
out
test
xchg
insl
inc
shr
or
and
mov
cs
push
daa
xchg
push
fadd
ffreep
mov
outsl
adc
or
push
lret
stos
insb
and
and
ja
fiaddl
cmp
or
in
icebp
dec
add
into
das
popa
sub
jle
mov
inc
loope
cmp
je
dec
or
adc
or
push
add
sbb
pop
jnp
ss
jle
test
fwait
into
outsb
leave
mov
jno
add
ret
test
xchg
das
nop
pop
xor
addl
mov
inc
daa
adc
jo
adc
aad
pop
pusha
add
movsb
push
add
pop
push
xor
call
loopne
adc
xchg
outsb
pusha
outsb
imul
pusha
sar
dec
or
mov
rorb
in
adc
repnz
movsl
stos
cmp
loopne
and
jge
data16
or
mov
mov
cmpb
adc
push
stos
adc
and
inc
inc
add
int3
jl
mov
jmp
lret
ret
daa
nop
psraw
sub
test
push
popa
sbb
pusha
jne
pop
adc
arpl
push
loop
shlb
lods
ljmp
cmp
xor
decb
or
sub
jnp
or
or
addb
xchg
and
push
or
pop
lds
sub
pop
sbb
mov
push
dec
mov
mov
outsl
inc
push
imul
mov
or
cmp
inc
pop
inc
nop
outsl
lea
mov
inc
inc
jno
ja
mov
push
add
adc
mov
insb
pop
adc
lods
push
sub
push
and
jecxz
pop
sarl
and
inc
mov
or
sbb
das
inc
lock
inc
ret
mov
pop
jne
push
mov
mov
out
into
add
mov
xchg
or
push
pop
sub
out
ret
push
addb
inc
cs
inc
sub
in
pop
inc
and
lock
sub
sub
sub
sub
push
popa
rol
push
adc
pop
jae
cwtl
xchg
xor
adc
xlat
daa
mov
sbb
paddb
sub
icebp
dec
mov
mov
dec
sub
pop
divb
pusha
js
loopne
mov
popa
sbb
mov
pop
aaa
icebp
das
push
pusha
das
dec
pop
pusha
scas
cmpsb
pop
popf
pop
clc
mov
ret
ficompl
mov
mov
mov
inc
ljmp
mov
daa
add
mov
shlb
sarb
push
mov
sbbb
push
adc
insb
lcall
sbb
dec
mov
rclb
sub
push
pop
lods
aad
jle
inc
imul
add
in
or
in
sbb
sub
movsb
out
mov
mov
nop
daa
nop
inc
andl
les
or
inc
dec
jno
shr
adcb
xor
xchg
add
movsl
xchg
inc
fimuls
adc
add
sub
jne
and
int
dec
mov
int
sbb
xchg
mov
add
es
mov
add
add
cmp
push
ds
or
add
add
xor
cs
fs
and
xchg
out
add
push
adc
and
adc
lods
shrb
sub
sahf
inc
or
add
and
and
dec
lahf
loopne
test
outsl
jl
pop
or
add
lcall
mov
jmp
mov
inc
push
add
sub
jae
adc
mov
hlt
inc
xchg
lret
aaa
test
sbb
or
rcll
roll
imull
adc
sub
add
fs
data16
test
imul
aaa
push
inc
sub
out
or
dec
adc
sbb
inc
shll
push
and
jl
inc
shrb
loop
enter
adc
push
orb
xchg
xchg
mov
mov
add
inc
scas
sbb
xor
xor
aaa
pop
xor
cmpl
mov
fmuls
leave
sbb
dec
loopne
das
xchg
adc
jge
ljmp
sbb
fidivl
sbb
movsb
push
sub
testb
xor
add
aaa
les
std
jno
and
push
lock
adc
or
push
imul
pop
sarl
psubsw
jnp
or
ja
jl
jo
cmpsl
sahf
sub
inc
add
jmp
aad
pop
mov
jg
cs
push
sahf
mov
loope
mov
cmp
cmp
inc
mov
add
cmp
inc
inc
mov
movsl
xchg
inc
arpl
or
jns
inc
movb
popa
cmp
adc
test
xchg
xor
arpl
lahf
loop
adc
test
fucomi
inc
shll
dec
je
inc
arpl
sbb
push
xor
push
and
mov
cmp
or
int3
nop
insb
ds
lea
pop
mov
movsb
mov
testb
push
inc
fs
dec
outsb
mov
push
clc
popa
adc
dec
rorl
xchg
cmp
xchg
pop
adc
jo
mov
in
out
loope
inc
mov
lock
cmp
decb
sbb
or
ja
xchg
adc
popa
push
xor
movsl
aaa
mov
adc
shll
jle
incl
xor
imul
xchg
and
sbb
mov
rcrb
insb
and
xor
and
sahf
subb
movb
push
pop
inc
les
mov
gs
aas
jo
cmp
hlt
js
arpl
scas
cmp
aad
cmp
jb
sbb
add
lea
mov
adc
push
push
int
mov
bound
inc
lret
sub
cmc
loopne
wrmsr
xor
dec
arpl
stos
fsts
data16
inc
stos
xor
xchg
mov
mov
repz
mov
xchg
xchg
inc
notl
push
push
mov
or
cmpsb
inc
jmp
cmp
jge
loope
sbb
sahf
push
cmp
adc
jbe
das
jp
and
xor
daa
mov
add
adc
in
mov
enter
pop
jecxz
mov
mov
mov
loopne
mov
rclb
add
or
pop
aad
sbb
hlt
mov
sub
jne
test
or
jne
pop
cmp
adc
sbb
lret
and
cmp
and
ret
pop
jmp
nop
or
movsl
pop
fstps
adc
mov
cs
int
sbb
sbb
push
mov
and
jl
jnp
cmpsl
sti
fistps
pop
into
inc
pop
aad
mov
inc
cltd
outsb
mov
jl
js
or
lea
icebp
imul
icebp
rclb
xor
push
insb
push
in
pop
xlat
cmpl
push
leave
mov
fs
inc
pop
xchg
cmp
jne
fimull
mov
js
adc
adc
jo
push
aas
into
xchg
je
inc
jmp
shlb
call
ja
inc
mov
inc
ret
aaa
add
mov
jmp
sub
ljmp
mov
and
push
xchg
fstpt
add
and
in
mov
jne
jnp
das
loopne
cmc
call
mov
out
dec
sbb
xorb
je
sub
or
in
mov
sahf
fistpl
sub
sub
lock
push
jne
out
in
ficoml
sub
mov
mov
mov
dec
adc
mov
mov
rcrb
outsb
fsts
lret
cwtl
cmp
cmp
jmp
cld
push
sbb
or
jne
pop
xlat
inc
sbb
sbb
pop
dec
push
out
les
cwtl
add
lods
jne
adc
pop
cmp
push
cmp
scas
ret
jns
inc
cmpsl
sub
jno
shll
adc
addr16
jle
es
adc
adc
lds
adc
cmpsl
pop
mov
sar
and
cmpsl
sub
test
cmc
bound
and
dec
push
jmp
jge
das
test
sub
jae
mov
or
mov
xor
movsb
js
je
cmp
add
imul
fmuls
mov
test
and
ss
daa
andb
xor
popa
mov
lahf
out
xor
lods
cmp
mov
int3
xor
pusha
mov
add
scas
jg
hlt
jne
adc
pop
xchg
movsl
lret
enter
call
inc
mov
add
xor
or
imul
cmc
pop
xor
cld
mov
cmpsl
pop
repz
xchg
xor
pop
add
xor
jge
cmp
cmp
mov
push
pushf
fs
mov
pop
pusha
xor
not
and
aaa
int3
push
jo
rol
pop
daa
dec
xchg
jnp
add
andl
mov
xor
lcall
pop
add
inc
add
dec
mov
cltd
xchg
sub
pop
out
fs
inc
sbb
cmpsl
pop
sub
sub
pusha
xor
inc
sub
mov
call
shll
and
into
jb
mov
ret
pop
int
xchg
jo
imul
fdivl
xchg
in
push
inc
inc
mov
hlt
adc
iret
push
pop
mov
dec
sbb
and
addl
scas
lock
sbbl
inc
or
mov
xorl
das
add
idivl
push
and
in
shlb
push
fcoms
popa
push
or
les
adc
clc
sbb
xor
xor
sbb
mov
sbb
adc
in
or
add
int
jne
in
adc
sub
lods
lods
cwtl
in
enter
add
xor
mov
sub
pop
or
inc
sub
dec
sbb
mov
hlt
xor
sub
lock
sbb
dec
int3
popa
push
pop
sub
mov
adc
stc
scas
fdivrs
sub
fcoml
push
fadds
test
jge
dec
cld
push
mulb
or
fwait
call
fstpl
lcall
push
negl
jae
scas
icebp
dec
jg
jmp
push
mov
jnp
add
pop
lahf
jne
andl
fwait
dec
ds
push
leave
lret
sub
xchg
pop
add
sub
mov
popf
add
mov
xlat
test
pusha
sbb
push
js
and
mov
jecxz
adc
les
fnsave
in
or
sub
xor
dec
push
imul
aaa
xchg
cmp
aas
and
xchg
or
xor
adc
pmullw
sub
fsub
inc
loop
xor
out
scas
subl
push
ljmp
rol
adc
pop
lahf
leave
push
push
mov
dec
mov
add
into
sub
arpl
scas
or
inc
and
setae
cmp
sub
pop
or
out
or
lock
popf
inc
ljmp
push
and
adc
shll
mov
movsl
sub
mov
cld
notl
js
add
jge
popa
add
jae
sub
adc
sbb
sbb
adc
sub
bound
push
stos
shlb
and
icebp
das
cmp
movsb
inc
sbb
pop
mov
pushf
push
lcall
cs
adc
mov
mov
add
mov
aaa
mov
ja
stc
cmp
add
flds
dec
and
adc
fmuls
test
sbb
push
adc
out
scas
adc
daa
jp
or
mov
xchg
jo
mov
orb
lcall
fstl
sbb
cmp
dec
push
or
pop
xchg
add
jo
mov
fcmovnbe
sub
cmp
fbld
iret
and
das
sbb
dec
icebp
mov
iret
adc
push
test
pop
sbb
mov
popl
xchg
cmc
sub
mov
and
ss
cmp
mov
xchg
cld
xor
mov
push
popa
shl
and
adc
xchg
cmp
movb
cli
in
adc
rcrl
push
addr16
adc
clc
sub
pop
in
fbstp
adc
mov
mov
jne
ret
ljmp
testb
mov
pop
jecxz
push
dec
aad
fsubrl
push
mov
mov
fists
adc
test
push
ret
mov
fadd
push
pop
add
pop
daa
jne
movsb
xchg
out
test
xchg
xchg
notb
icebp
mov
in
popf
push
sub
jns
push
or
push
add
fcompl
mov
scas
aam
mov
mov
cli
push
or
add
push
add
pop
popa
inc
pmovmskb
dec
xchg
adc
les
loopne
mov
sub
dec
cmpsl
mov
dec
pop
pop
daa
je
dec
xchg
pop
cmpsl
ret
pop
xchg
jecxz
sub
hlt
dec
or
jl
icebp
cmp
inc
mov
fimull
sbb
mov
hlt
pop
jmp
and
inc
mov
rcrb
adc
dec
lds
mov
arpl
and
pop
add
je
or
adc
push
es
lods
jmp
xchg
inc
inc
mov
cmpsb
stos
or
pop
dec
mov
and
or
xor
rcll
or
testl
rolb
add
iret
lret
push
cmp
outsl
pop
in
shr
cwtl
xor
cs
push
mov
sub
pusha
pop
jmp
dec
xchg
outsl
cmp
xor
outsl
fstpt
jne
or
xchg
lret
mov
add
enter
push
cmp
pop
dec
imul
or
in
call
mov
lahf
inc
adc
pop
ret
add
mov
add
push
sbb
mov
bound
insb
sarb
xor
sbb
stos
mov
lret
mov
lock
pop
sbb
pop
xor
add
push
shll
dec
mov
mov
pop
inc
mov
mov
mov
lods
std
or
mov
xor
aad
gs
sti
and
adc
push
jle
sbb
clc
out
xchg
mov
inc
insl
jno
cmp
xchg
xchg
test
mov
mov
test
xchg
push
cmpsl
test
outsl
jmp
int
mov
sub
sbb
xor
and
inc
cwtl
in
adc
jmp
adc
ja
mov
mov
popl
mov
inc
arpl
stos
daa
sub
pop
push
pop
dec
ss
cmc
cmp
and
stos
inc
lock
call
stos
push
xor
xor
add
jo
mov
in
sbb
mov
mov
inc
push
sub
leave
fistpl
jle
and
fcompl
lret
and
clc
fsubrl
inc
mov
cs
and
sbb
sub
and
cmp
xor
shrb
int3
sar
nop
imul
pop
loope
dec
imul
and
in
popa
js
and
mov
nop
aam
test
mov
jmp
daa
push
iret
pop
xchg
sbbb
push
push
add
inc
sarl
les
mov
filds
jmp
adc
movsl
sub
adc
jne
push
dec
dec
pop
sub
enter
inc
jge,pt
pop
jnp
aas
mov
shrb
ja
lret
dec
sbb
clc
pop
lods
lret
cli
mov
and
push
dec
out
add
fsub
xor
sti
adc
scas
fcompl
hlt
dec
aaa
jns
popa
out
mov
sbb
cmp
xchg
sub
add
fnstenv
push
sub
divl
mov
repz
sbb
pop
mov
fdivl
sbb
or
lods
jge
jne
and
add
shlb
imul
int3
mov
cmp
push
push
jle
dec
popf
sbb
dec
inc
rorb
adcb
push
inc
shlb
insl
movsb
cmpsl
mov
call
xor
adc
xor
cltd
mov
dec
xor
aam
pop
in
sub
adc
push
enter
and
lret
adc
mov
adc
xchg
roll
outsl
and
inc
andb
sub
inc
rorb
repnz
orl
js
push
dec
pop
xor
pop
jo
fcomp
pop
pop
cmp
jo
xor
jmp
or
jo
outsb
jns
insb
sub
dec
push
cmp
jmp
mov
daa
ds
and
pop
adc
cmp
test
dec
xchg
in
idivb
jge
nop
mov
push
inc
pop
sub
mull
or
mov
shll
xor
inc
pop
or
push
jbe
nop
pop
inc
cltd
xchg
nop
inc
in
add
push
inc
push
mov
loopne
stos
ret
jmp
push
pushf
sbb
test
sub
mov
arpl
clc
pop
mov
push
cmp
test
pop
ret
addr16
es
pop
inc
pop
adc
or
mov
adc
xchg
dec
add
jmp
and
xchg
mov
push
je
sbb
adc
dec
cmp
inc
imul
ret
jle
push
cmp
push
mov
or
xchg
test
xchg
rol
jae
push
inc
lods
xchg
xchg
push
pop
orl
add
and
pop
movsb
push
shrb
pop
lret
loop
pop
pop
inc
inc
pushf
fadd
xchg
cmp
cmp
xchg
cmpsb
pop
adc
insb
das
inc
add
cmp
and
rcl
adc
pushf
test
sub
lock
test
add
and
ret
cmp
push
or
ret
cld
lds
adc
add
add
pop
andl
addr16
and
imul
shll
cmp
leave
bnd
mov
repz
push
mov
jmp
adc
les
xchg
sbb
ja
pop
sti
daa
ret
inc
jg
test
nop
push
mov
mov
fdivrs
pop
call
push
stc
push
add
adc
sbb
js
jnp
cmp
loope
jb
mov
cmp
jnp
stos
cmp
mov
adc
test
dec
or
movsb
jae
daa
pop
mov
sub
xor
jmp
push
adc
fiaddl
sbb
push
ss
sub
sbb
or
cmp
les
pop
lea
mov
sub
ffree
inc
and
or
pop
jb
xchg
mov
or
sarb
lea
cmc
mov
aam
sub
pop
ds
rclb
fadd
mov
mov
out
jmp
or
in
enter
cmp
push
mov
inc
mov
pushf
jmp
inc
dec
cmp
sti
jae
sarb
and
aam
or
mov
or
xor
ljmp
cmp
aas
popf
push
add
push
das
test
bound
push
cmp
movl
push
mov
dec
mov
rclb
jnp
sub
adc
dec
adc
mov
cmp
dec
call
pushf
mov
adc
and
into
push
daa
jmp
test
movsl
ficoms
inc
sbb
sbb
mov
push
xchg
mov
insb
in
push
sub
and
loop
adc
or
add
mov
jl
jle
sub
adc
sub
sbb
and
xor
pop
jg
jmp
xchg
test
push
in
enter
adc
xchg
loope
sub
sbb
sbb
sbb
mov
sbb
inc
call
shlb
fmull
cmp
sbb
inc
or
sbb
adc
in
mov
mov
cmpsl
enter
pusha
lods
ret
ret
lock
fnstsw
lock
cltd
or
sbb
rorb
aaa
stos
cld
mov
lock
inc
push
sub
push
sbb
mov
sub
lock
dec
adc
call
addr16
inc
pop
sub
aas
sbb
xor
nop
inc
xchg
inc
mov
popa
push
lret
xchg
cmp
dec
pop
repz
lcall
lret
fstp
data16
push
clc
adc
je
das
mov
arpl
push
dec
pusha
mov
iret
mov
psignd
add
fdivr
sbb
push
loope
mov
mov
fbstp
xor
repnz
cld
mov
jae
xor
mov
xchg
xchg
sub
pop
mov
xor
cmp
cmp
out
or
jo
insl
loop
imul
mov
push
daa
aas
sbb
sub
inc
push
lea
incl
sub
cld
jmp
das
arpl
sub
jmp
ret
mov
les
cmp
dec
loopne
xor
dec
or
dec
add
and
mov
lret
fsubl
and
jle
or
inc
adc
cmp
xor
mov
pop
adc
iret
aam
subl
ds
or
dec
mov
and
pop
enter
pop
scas
and
movsb
fistpll
jg
sbb
cmp
mov
or
pop
sbbb
adc
mov
push
add
pusha
insl
fidivl
push
xor
fdiv
test
jle
imul
pop
and
cmp
and
dec
call
push
orb
loope
add
scas
cltd
pusha
pop
add
test
and
inc
mov
and
xor
fnstcw
dec
pop
nop
lock
mov
dec
inc
push
int3
mov
jge
push
in
std
mov
add
add
addr16
call
fistpl
xchg
sbb
les
popa
mov
mul
test
test
mov
dec
and
pop
mov
dec
test
fucomip
mov
sarb
add
test
andb
sar
push
in
xor
lods
lods
mov
loope
sbb
jnp
adc
iret
inc
push
push
push
mov
push
push
cmp
mov
jg
or
adc
mov
mov
and
sub
sbb
fmuls
stos
sbb
and
pushl
xchg
mov
cli
rcrb
cmpb
pop
mov
lods
push
push
jo
and
mov
insb
xchg
xor
jne
xchg
sti
jmp
sbb
mov
lods
negl
sbb
icebp
add
roll
bound
icebp
testl
scas
rorb
das
inc
sarb
mov
out
iret
push
xor
add
adc
xlat
pop
stos
cmp
outsb
inc
loop
dec
mov
aas
mov
lods
jo
adc
inc
adc
lods
or
add
out
push
push
insb
shrb
sbb
rclb
shlb
insb
outsl
jecxz
adc
fnstenv
or
inc
jnp
xor
sbb
sbb
jo
push
sarb
mov
cmp
mov
push
shlb
push
lock
icebp
or
mov
shll
sub
add
push
sbb
icebp
mov
shll
cmpb
mov
lds
sbb
mov
or
loopne
adc
ret
movsl
movsb
test
je
cmp
jo
std
ljmp
ret
sbb
push
mov
popf
sbb
adc
inc
out
pop
nop
test
dec
dec
cmp
js
mov
sbb
pop
popa
lods
adc
pop
adc
mov
sbb
ficomps
cltd
or
bound
sub
and
jne
daa
scas
push
cwtl
inc
jae
rcr
out
pop
xor
mov
adc
je
sbb
enter
dec
push
dec
dec
add
push
mov
sub
sbb
mov
jne
adc
jne
jno
stos
in
imul
jp
clc
push
xor
nop
sti
shl
dec
dec
sub
xor
sti
mov
scas
sbb
cld
loope
mov
sar
test
icebp
popf
and
inc
rolb
push
sub
js
push
and
add
cwtl
inc
or
nop
sbb
aam
xor
adc
pop
adc
mov
jns
loope
popf
or
inc
lds
ret
push
xchg
push
enter
into
jecxz
fsubrl
push
sbb
push
call
push
sbb
inc
fstl
je
ret
or
loopne
aad
and
jmp
gs
and
cmp
or
push
out
jno
or
add
loop
daa
xor
jo
lea
push
hlt
nop
call
jae
inc
push
sub
or
es
adc
sbb
fs
sub
dec
aad
test
lahf
clc
pop
setge
add
inc
push
add
or
outsl
lret
mov
fcomp
mov
jmp
add
mov
jmp
jmp
addr16
clc
pop
mov
add
inc
setne
sbb
sbb
or
lock
shlb
add
push
adc
jno
dec
rolb
mov
sub
push
dec
push
out
jno
pusha
mov
inc
add
inc
and
pop
pop
imul
push
add
inc
xor
push
jae
hlt
push
or
sub
cmpsl
in
rcl
leave
jo
xor
mov
xor
clc
add
jg
fcoms
outsl
add
aam
inc
mov
hlt
adcl
and
mov
xchg
pushf
jle
in
sbb
add
or
xor
adc
push
sbb
mov
dec
sbb
mov
call
popf
mov
sbb
add
les
xchg
mov
pushw
sbb
push
adc
or
or
int3
and
push
xchg
rorb
push
mov
addl
sub
mov
ret
cld
xchg
cmp
loope
adc
sbb
imul
int3
test
or
addr16
xor
pop
pop
out
mov
inc
fisttps
or
lds
insl
adcl
push
imul
insb
pop
test
aas
jmp
xor
adc
cmp
aad
cmp
push
sbb
adc
cmp
jne
ret
aam
or
fwait
pop
lea
mov
adc
mov
repnz
loopne
pop
ret
or
ds
clc
mov
fldenv
scas
inc
fstps
adc
test
lock
sbb
add
movsb
mov
in
mov
flds
sbb
cmpsb
or
add
adc
xchg
pop
je
psadbw
popf
xchg
xlat
jb
dec
cmp
or
push
jge
cmovae
mov
pop
popf
ficoms
call
loopne
xorb
mov
outsl
test
js
xchg
sarl
xlat
cmpsb
pop
add
hlt
inc
adc
incb
adc
xchg
sbb
frstor
inc
xchg
sbbb
outsl
jo
movl
pop
pop
mov
nop
out
sbb
daa
dec
mov
arpl
decb
add
dec
das
sahf
int3
xchg
dec
pop
push
shlb
das
dec
mov
pop
inc
push
mov
or
jne
pop
add
xor
lret
inc
mov
cs
jne
nop
mov
dec
ds
enter
adc
orb
pop
push
cmpb
dec
leave
mov
ret
call
pop
dec
sbb
sbb
sub
mov
jl
inc
xor
sbb
jno
pop
arpl
inc
dec
shrb
inc
aam
loope
mov
decl
je
cli
popf
sbb
hlt
outsb
and
sbb
mov
mov
push
jge
sahf
inc
orps
jmp
dec
aad
jb
and
push
addr16
mov
lods
inc
sbb
cmpsl
push
sbb
add
mov
and
inc
push
adc
inc
loopne
rolb
xchg
fs
aas
int3
je
sbb
and
push
push
xchg
jg
push
dec
sbb
xlat
jmp
pop
inc
add
out
outsl
push
in
cmp
dec
sbb
or
sbb
subb
sti
xor
pushf
mov
inc
pop
incb
push
clc
and
dec
jne
or
adc
popa
mov
ja
sub
or
stos
aam
push
inc
cmp
mov
mov
gs
add
or
cld
repz
or
push
or
es
dec
cmp
test
mov
and
and
mov
mov
pop
pop
mov
bound
scas
jnp
jne
mov
jg
sbb
push
pop
jmp
push
mov
test
xchg
mov
daa
insb
lods
arpl
xlat
out
or
and
jb
sahf
cmpsl
aas
or
push
dec
mov
or
notl
pop
pop
pushf
aam
ret
iret
add
pop
pcmpgtd
out
fs
push
or
movsb
or
mov
cmc
shlb
adc
out
inc
add
shll
rol
andb
add
dec
add
or
dec
popl
lds
dec
xchg
ret
sbb
stos
inc
xor
in
pop
sub
jge
push
test
cmp
ret
sti
insl
rorb
ja
dec
out
xchg
rolb
inc
push
lret
pop
mov
push
and
fwait
aam
sub
add
cmp
push
ficoms
push
sahf
inc
sub
movsb
out
into
flds
lahf
aaa
dec
dec
inc
bound
dec
setbe
inc
loope
inc
inc
insb
or
inc
je
dec
push
pushf
xchg
cltd
sbb
sub
xlat
sub
fmul
xor
add
inc
invd
sbb
dec
push
rorb
pop
daa
cmp
loope
push
sbb
lret
insb
mov
in
jg
mov
sbb
lret
cmp
jne
test
adc
push
add
pop
xor
aam
fwait
sbb
negb
dec
inc
adc
inc
scas
or
sub
mov
subb
mov
movsb
mov
xlat
cmp
xor
sub
xor
fmull
and
or
pop
test
adc
aas
js
adc
xor
push
out
add
push
mov
pcmpgtb
lret
cmc
add
sarb
roll
iret
nop
dec
push
call
xchg
loop
jl
mov
scas
add
mov
cmovb
push
rep
fmull
inc
std
push
or
jmp
arpl
rorb
dec
add
shlb
mov
xlat
pop
sti
jp
xor
fnstenv
lock
pop
push
push
cmp
and
sbb
aam
pop
shlb
call
push
shlb
xchg
add
and
jge
int
movl
movsb
and
pop
fsub
sahf
sub
adc
sub
sbb
pop
push
adc
add
dec
aaa
xchg
pop
clc
jne
push
add
jbe
aam
jg
sbb
mov
or
mov
cmp
mov
cs
inc
add
push
das
or
lock
cs
in
aaa
mov
cmp
adc
fadds
faddl
push
loopne
xlat
jecxz
int
mov
aam
pop
loopne
pop
pop
pop
dec
aas
push
and
fmul
aad
or
rcll
sub
lret
sbb
pop
push
jp
rolb
xor
fisttpll
ja
adc
push
xlat
dec
rorb
xchg
push
lds
sbb
loopne
dec
aaa
jo
in
call
xor
imul
rol
or
sbb
inc
shlb
sbb
mov
mov
fmull
lcall
cmp
aaa
fdivrs
notb
das
cmp
or
add
inc
cmp
and
fsts
sbb
add
push
bound
mov
mov
or
jbe
fwait
inc
aaa
subb
clc
das
xor
pop
pop
sbb
or
or
cmp
mov
stos
pop
cld
sub
adc
xor
add
sub
sbbb
inc
add
adc
test
xor
sub
or
mov
add
out
lods
mov
sub
cmp
mov
rol
jg
mov
push
add
in
mov
mov
repz
add
insb
mov
pop
or
dec
fsubs
or
push
rolb
pcmpeqb
xor
mov
cmp
dec
test
or
xchg
loopne
sbb
scas
adc
invd
sbb
mov
push
pop
shrb
inc
mov
jle
dec
clc
xor
pop
mov
imul
cltd
mov
dec
jmp
or
jbe
sub
and
jp
pop
jne
fistpl
ds
pop
push
push
adc
cwtl
push
cmp
mov
addr16
shrl
fmuls
fistpl
pop
loope
arpl
je
cld
push
test
sbb
inc
mov
xchg
add
ss
lretw
pop
push
pcmpgtb
sti
xor
pushf
lock
in
das
mov
mov
loop
lret
or
adc
aad
aas
push
mov
xchg
cmp
addb
mov
ja
mov
sbb
inc
cmp
mov
daa
xchg
xor
adc
or
icebp
mov
sbb
adc
mov
adc
movq
ljmp
jb
orl
test
jmp
inc
xchg
adc
iret
dec
mov
iret
push
push
jg
mov
mov
lds
adc
pop
adc
inc
int3
adc
test
fmuls
mov
xorl
loope
stos
push
jmp
pop
fdivrl
jo
ret
in
outsl
sahf
ss
shll
scas
prefetchw
pop
adc
mov
fisttps
pop
xchg
cld
mov
pop
rcll
mov
or
adc
lret
inc
sub
adc
xchg
outsb
nop
outsl
or
nop
out
subl
jnp
mov
dec
sub
imul
outsb
jae
or
add
aad
add
adc
mov
mov
or
jnp
test
data16
ds
add
jmp
or
adc
mulps
push
lock
in
cmp
rcr
mov
xchg
fucomi
lock
lret
xor
mov
mov
inc
sbb
dec
ljmp
xchg
fsub
sbb
ror
pop
ja
jmp
stos
adc
addb
add
lods
jns
dec
and
int3
mov
mov
sahf
out
movsl
lods
or
adc
pop
fistpl
jecxz
jmp
sti
sahf
idivl
xor
push
inc
sub
decl
or
or
dec
inc
cltd
icebp
sbb
xchg
cmp
std
lcall
cs
outsb
xor
dec
loop
push
inc
mov
movsl
leave
aam
rolb
sub
adc
decl
mov
pop
and
sub
sub
in
push
and
push
xlat
jle
lods
add
or
out
add
push
mov
or
jmp
popa
fidivl
fmul
fsub
add
dec
mov
adc
pop
movaps
popa
xor
xchg
push
shll
and
jl
jo
jno
push
sub
hlt
lods
cmp
sbb
popf
adc
mov
ljmp
xchg
inc
dec
test
or
add
adc
inc
mov
les
popa
mov
orb
test
xlat
mov
xchg
inc
loope
rolb
adc
and
sarl
sub
pop
jb
or
and
ja
and
mov
xchg
and
inc
inc
lea
addr16
cmc
orb
sub
and
add
dec
jne
xchg
pop
inc
sbb
add
lds
mov
cmovno
sbb
push
lock
iret
lods
mov
rolb
inc
and
xchg
pop
shll
xor
xchg
mov
sbb
rcl
or
clc
mov
push
movl
sbb
pop
mov
inc
jno
push
sub
ds
add
ja
push
pop
sub
push
ljmp
jno
or
jno
mov
jge
inc
mov
or
fisubs
test
inc
inc
and
jl
insl
ss
in
sbb
scas
and
adc
lahf
and
outsl
cmp
or
sbb
movsl
js
icebp
clc
dec
jne
les
mov
mov
jmp
inc
mov
cmp
fs
sub
popa
divl
popf
xchg
fld
icebp
je
call
and
dec
sub
sbb
push
mov
add
jmp
test
and
loope
repnz
and
add
xchg
cmp
mov
pop
mov
lea
cmp
andl
or
dec
push
mov
pushf
inc
cmp
test
adc
ficompl
jne
mov
jmp
mov
push
xlat
lea
and
cmp
and
scas
push
adc
cmp
clc
divl
fbld
adc
cld
test
jo
hlt
mov
inc
push
mov
or
pusha
lea
pop
rolb
add
inc
fs
pop
push
cmc
pop
lods
cmp
mov
sub
pop
loopne
aaa
or
jne
push
clc
push
add
xor
aam
fsubs
mov
add
mov
lods
ret
cs
add
hlt
data16
cmp
movsb
rol
call
adc
jmp
loopne
push
icebp
test
or
pop
arpl
dec
or
sub
rorb
or
mov
adc
or
fnsave
mov
add
xor
test
aaa
dec
addl
push
push
inc
fdiv
scas
call
insl
lock
cld
sbb
sub
dec
cmp
adc
jne,pt
daa
nop
out
pop
cmp
jle
lods
or
adc
aas
pop
push
dec
cmp
sbb
push
js
or
dec
and
push
roll
jge
mulb
shlb
and
push
aam
xchg
dec
ja
int3
jge
sub
scas
mov
stos
xchg
andb
int
in
mov
jmp
popa
cs
fs
sbb
inc
cmp
hlt
jno
pop
xchg
push
jo
fcomi
pop
jmp
movsb
clc
fcmovnu
shl
mov
fdivrp
aaa
cli
xor
push
inc
jne
mov
adc
sbbb
fs
push
jo
in
pop
push
xchg
sub
sub
test
add
lock
addb
mov
inc
pop
mov
dec
insb
cmpsl
and
loopne
leave
xor
jge
arpl
mov
fmul
test
stos
aam
test
dec
sbb
pop
inc
sahf
push
es
adc
pop
jne
push
mov
push
movsb
add
aaa
push
ret
mov
int3
int3
pusha
fsubs
jmp
pop
jns
xchg
mov
push
clc
mov
mov
in
adc
lcall
fndisi(8087
xchg
fwait
inc
sbb
inc
hlt
pop
adc
push
and
out
xchg
incl
push
sub
stos
sarb
ret
sbb
sub
push
int
adc
flds
lret
mov
or
dec
add
add
inc
sbb
jg
or
cmc
sbb
or
stc
cmpsl
adc
sbb
sbb
sbb
jmp
push
pusha
mov
sbb
inc
xor
aam
ret
stc
popa
jo
ret
push
imul
lea
lahf
mov
mov
mov
mov
pop
sub
aas
add
enter
sub
pushaw
add
dec
outsb
adc
xor
aas
xor
xor
jmp
sbb
and
loopne
jmp
lods
jmp
push
adc
filds
adc
lcall
insb
test
mov
aad
test
fcmovnbe
sti
cmp
add
test
popa
out
mov
hlt
add
inc
pop
pop
loop
loopne
and
mov
jmp
cmp
mov
cwtl
sub
in
lods
sub
out
ret
mov
and
loopne
out
or
add
xor
mov
pop
add
xor
out
and
cmp
rcr
test
test
xchg
loop
fdivr
mov
ret
imul
lahf
jecxz
dec
jne
and
test
pop
daa
and
fs
insb
xchg
mov
mov
loope
mov
push
mov
insl
mov
bound
outsl
pop
adc
pop
or
jo
jae
mov
cld
lock
adc
rorb
movsl
shll
cmp
mov
jne
mov
push
cmpb
and
and
je
addb
pop
mull
xor
sub
adc
ds
mov
in
mov
pop
aas
and
lds
leave
icebp
and
dec
std
mov
cmp
xchg
int3
add
not
cmp
movb
inc
lret
movsl
jl
mov
jle
sbb
lar
dec
mov
adc
inc
enterw
addl
sbb
adc
push
clc
pop
adc
add
pop
push
jmp
and
ss
inc
fisttps
jb
je
dec
sbb
jae
shlb
or
sahf
xor
sbb
scas
push
push
subl
adc
js
adc
jb
arpl
xchg
das
ucomiss
sbb
and
xchg
push
jno
pop
push
sbb
pop
mov
xorl
fisubl
cs
cmpb
or
push
popa
inc
lds
adc
pop
inc
add
add
xor
test
rolb
sbb
movswl
and
mov
cmp
cld
or
pop
dec
call
jo
daa
jmp
rcrb
mov
shr
sub
rcr
sbb
mov
push
lock
jae
pusha
push
adc
pop
nop
nop
or
adc
adc
push
or
and
and
pop
ja
shlb
testl
pushl
sbb
inc
xchg
divb
sub
es
sbb
pop
and
lock
movsl
cmp
inc
or
enter
outsl
das
adc
imul
mov
sub
and
push
rcll
mov
rorb
or
cmp
nop
loopne
ljmp
xor
maxps
push
sarb
cmp
insl
or
insl
sti
jg
dec
ss
adc
push
lea
lea
movsl
add
loopne
clc
pop
movl
push
push
sub
push
lea
push
daa
adc
inc
dec
push
movsb
pop
cmpsl
jmp
je
or
add
pop
cmpsl
or
push
and
test
iret
lret
andb
and
fs
add
add
push
mov
daa
cmpsl
pop
movsb
push
stc
cs
pop
pop
std
xchg
add
pop
or
fs
pop
sarl
sbb
sub
flds
inc
jne
sbb
gs
bound
imul
adc
cmpsl
dec
ja
fmuls
insl
or
div
out
addr16
pop
sbb
cbtw
push
sub
lds
ss
sub
in
ret
ljmp
shrl
mov
adc
adc
pushf
test
ds
xor
adc
lods
outsb
jne
je
push
add
popa
jns
jae
inc
jmp
mull
rol
add
mov
mov
shlb
mov
decl
in
inc
stc
mov
mov
add
jg
xchg
pusha
mov
push
push
inc
push
lret
adc
inc
dec
dec
jmp
add
sbb
xor
xor
cmpl
add
ret
pop
and
je
push
sbb
inc
mov
arpl
arpl
dec
adc
dec
inc
es
add
out
jge
addl
daa
mov
sub
jl
daa
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
call
cs
imul
cli
xor
push
ja
das
inc
popa
xor
dec
sbb
adc
xor
add
cmp
sub
inc
fisubs
cmpsb
adcl
loopne
lea
leave
leave
insb
sub
decl
jbe
leave
leave
leave
leave
js
jp
leave
leave
leave
leave
jl
jle
leave
leave
leave
leave
pusha
popa
bound
leave
leave
leave
fs
leave
leave
leave
push
leave
leave
leave
insb
insl
outsb
outsl
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
loopne
leave
leave
and
es
incl
addr16
pop
jmp
out
or
pusha
push
jne
mov
fcompl
adc
inc
out
add
inc
mov
ds
xchg
shlb
adc
addr16
in
or
fs
xlat
jbe
sbb
push
xchg
sub
into
inc
test
or
cwtl
or
xlat
adc
inc
lock
mov
popf
xorl
sub
sbb
push
add
mov
jmp
adc
add
repz
or
sub
and
movl
adc
insb
mov
insb
add
sbb
or
lea
mov
push
push
jecxz
and
or
adc
call
inc
adc
mov
mov
insl
addr16
movb
jae
loopne
xchg
mov
jg
sub
cltd
sub
cmp
push
mov
jnp
orb
adc
pop
shl
xchg
mov
popf
or
popa
cld
and
test
sub
sti
xor
cs
jge
imul
out
or
xor
and
adc
or
cwtl
rol
xchg
mov
and
loope
std
ds
jle
adc
sbb
pushl
mov
adc
loopne
sbb
cmp
sbb
subl
outsb
fisttps
cmp
or
flds
inc
lock
or
scas
push
dec
xchg
inc
mov
cmp
gs
push
sahf
jmp
xchg
lea
int3
xor
and
or
inc
add
cwtl
rclb
rsm
ret
xor
mov
xor
push
vpaddb
pop
nop
cmc
inc
popa
xor
int3
or
jle
mov
and
xor
insl
add
stos
into
fdivrp
movsb
or
cmp
popa
jl
pop
data16
scas
add
xor
mov
test
cmp
or
xor
cwtl
shll
cmp
mov
test
jae
push
and
nop
daa
in
adc
fwait
nop
push
enter
test
xchg
jo
jecxz
push
push
outsl
push
subl
mov
ds
fbstp
arpl
mov
push
xor
mov
push
ret
cmc
xchg
push
or
mov
inc
enter
inc
push
mov
xchg
and
sbb
data16
add
adc
adc
jl
or
jae
movsb
push
or
xchg
mov
add
clc
dec
adc
jae
je
dec
cmp
rcr
push
je
insb
xor
sbb
push
data16
enter
or
je
arpl
adc
les
mov
xor
add
xchg
ss
xor
ficompl
and
insb
or
cmp
push
outsb
int
inc
sti
cmp
xor
pop
jo
outsl
sbb
push
inc
lret
jle
mov
je
sbb
add
add
inc
jl
or
push
mov
xchg
fildll
push
push
lods
jb
push
inc
insb
or
or
push
dec
aaa
mov
sahf
adc
mov
insl
inc
insb
mov
push
push
push
push
jo
cltd
jnp
xor
or
jns
sbb
out
dec
inc
or
clc
nop
popa
cltd
sbb
and
rcrb
ja
insl
ja
and
je
lret
mov
adc
xor
or
adc
je
jbe
inc
jb
or
pop
jo
pop
bound
bound
push
dec
jl
jp
shll
lods
data16
push
fidivl
or
nop
iret
mov
inc
outsl
jb
xchg
out
outsl
jae
es
fdivrs
pop
inc
push
dec
push
sbb
mov
mov
sub
pop
test
decl
andps
add
mov
pop
imul
mov
xchg
xor
and
adc
imul
cmpsl
inc
push
xchg
loopne
sbb
dec
nop
or
out
mulb
pop
sub
add
jl
push
in
mov
mov
sub
cmp
mov
and
pop
div
in
std
fdivl
add
mov
mov
or
sarl
push
in
xor
hlt
add
lock
add
call
les
add
adc
das
ss
das
aas
out
pop
or
cli
mov
inc
inc
jecxz
inc
add
mov
xor
xor
or
sbb
int3
dec
adc
rclb
add
mov
push
push
add
push
push
cs
mov
xor
jge
pop
bound
mov
les
leave
stos
mov
mov
fldl
stos
aaa
enter
lahf
pop
sub
mov
rorb
mov
leave
call
mov
insl
leave
or
mov
add
mov
in
xor
cmp
add
movl
ja
push
mov
ds
mov
lods
adc
lcall
mov
adc
push
push
movzwl
test
add
loope
xchg
add
loopne
or
inc
movl
mov
aaa
dec
aaa
lds
bound
roll
pop
push
adc
ja
add
cmp
inc
pop
insb
outsb
scas
or
jl
mov
nop
jae
mov
sbb
push
movsl
shl
loop
ror
fs
mov
scas
or
and
pop
sub
rolb
push
int3
mov
scas
pop
lods
cmp
inc
cmp
pop
jmp
push
mov
cmp
lock
pop
test
xchg
addr16
jae
or
je
mov
or
jo
push
xchg
movsl
lcall
outsb
adc
inc
insb
movsl
mov
adcb
and
add
adc
mov
arpl
int3
add
mov
push
gs
dec
outsl
ja
add
adc
push
inc
xor
aas
add
dec
jae
imul
xor
push
les
jb
xor
ficoms
push
xchg
ret
sbb
mov
scas
fdivl
iret
imul
adc
add
sbb
lcall
sbb
jg
adc
mov
sbb
es
adc
dec
jnp,pn
fisubl
push
pusha
push
add
xor
hlt
lcall
jle
mov
dec
push
inc
fcoml
jmp
cwtl
push
sysret
in
outsl
iret
in
in
adc
pop
jo
paddq
pop
add
subl
inc
jl
pop
inc
js
mov
push
or
xorl
and
fs
nop
push
sbb
jg
dec
call
and
fadds
mov
push
xchg
insl
jne
stos
pop
movb
mov
sbb
push
add
push
push
push
sub
inc
pop
ret
scas
iret
or
push
mov
dec
pop
inc
scas
jecxz
pusha
ret
icebp
xchg
mov
ds
push
xor
jge
or
je
jb
out
pop
and
pusha
adc
das
rcrb
pop
push
fidivl
dec
js
add
or
push
xlat
orb
dec
insl
push
sbb
xor
pop
test
push
pop
jnp
inc
sub
ds
mov
cmp
inc
ret
faddp
pop
in
nop
nop
mov
xor
sub
sbb
aas
xchg
mov
xchg
push
xchg
inc
or
adc
jo
repz
jle
or
ds
push
andb
insb
push
push
pusha
jge
loope
xchg
insb
or
or
add
and
call
xchg
mov
xchg
push
push
fcoms
mov
fcom
mov
cmp
and
sbb
fwait
div
jo
jle
jle
push
orl
orb
push
aam
fmull
jle
cmovs
mov
mov
inc
xchg
pushw
sub
clc
mov
xchg
pop
mov
xor
sbb
xchg
faddp
sbb
outsl
les
sbb
cli
iret
jbe
or
outsl
outsb
pop
sbb
push
cs
pop
test
pushf
mov
cld
xchg
pop
pop
xchg
ja
out
lea
loopne
rorl
add
cltd
push
sbb
psubw
xchg
xchg
jo
pop
add
mov
push
pop
sbb
cmp
hlt
rcrl
fs
mov
jecxz
loopne
in
mov
add
mov
adc
fnsave
jl
rcrb
mov
cmp
iret
mov
insl
sbb
mov
loopne
add
jne
dec
sbb
loopne
mov
sbb
pop
mov
inc
mov
inc
sbb
popl
mov
movsl
movzwl
add
nop
and
into
add
adc
add
test
push
popa
loopne
push
enter
idivl
loope
and
data16
lock
dec
lds
les
dec
lahf
jge
mov
dec
jne
cmp
xor
test
mov
adc
mov
sbbl
or
dec
test
lods
ret
xor
adc
mov
mov
sti
cmp
mov
ds
adc
push
and
test
adc
push
mov
inc
decl
lock
lock
adc
nop
popf
sub
cmp
add
rcrl
add
into
xor
and
adc
xchg
and
cltd
mov
pop
lods
lret
les
or
pop
rorl
es
imul
fsubs
jnp
xchg
jnp
xchg
aaa
sbb
stos
movsl
sub
ret
mov
xchg
inc
jo
xlat
cmp
add
and
push
xchg
xchg
add
sub
mov
pop
sar
je
incl
jle
and
int3
dec
fst
cmpsl
ss
lods
add
mov
or
inc
sbb
ficoms
and
pop
dec
fstl
push
pop
adc
mov
jle
adc
push
stos
shll
xor
inc
push
daa
and
addl
sub
adc
shr
jmp
dec
movb
cmpsl
jns
mov
adc
insl
xchg
push
jg
mov
ret
adc
loope
jo
into
or
adc
jbe
repz
dec
sub
or
test
or
cwtl
pop
sub
sarb
aas
arpl
pop
or
jb
outsl
outsb
jo
inc
shrb
lods
outsb
pop
dec
insb
std
in
add
push
dec
popa
jbe
add
jbe
scas
xchg
jo
xchg
cs
push
gs
insb
pop
jle
mov
imul
sbb
push
dec
in
sbb
xor
gs
xor
fcompl
lods
iret
lahf
jne
or
arpl
rorl
jae
popa
inc
jno
popa
mov
pop
pop
or
in
orl
xchg
push
imul
test
inc
add
and
fimull
push
outsl
inc
outsl
lock
fstps
insb
das
cmovae
push
cwtl
aaa
scas
pop
jo
push
pop
imul
hlt
adcb
pusha
dec
call
dec
mov
outsb
inc
push
xchg
dec
adc
enter
sbb
or
fmuls
pop
mov
push
cmp
dec
daa
or
and
xor
or
fs
lahf
or
push
fwait
sbb
aaa
mov
mov
mov
or
fldl2t
push
mov
push
andl
or
mov
fbld
pusha
cltd
lods
loope
repz
adc
add
adc
mov
out
push
inc
push
daa
or
pop
mov
jne
pop
xchg
rcll
or
push
dec
cs
jecxz
test
push
arpl
mov
inc
xor
shrl
mov
das
cmp
sub
mov
out
das
or
lock
pop
rcr
cmp
ret
push
mov
lcall
in
repnz
or
mov
cmp
mov
testl
dec
inc
push
push
inc
push
add
adc
push
dec
push
xor
inc
dec
dec
pop
jnp
shlb
dec
inc
inc
push
adc
dec
inc
push
dec
dec
push
mov
lods
sbb
inc
dec
dec
and
xchg
nop
aas
insb
out
inc
inc
xor
xor
and
mov
xchg
and
push
repnz
sti
inc
inc
dec
inc
xor
inc
dec
mov
push
push
push
dec
sub
imul
mov
mov
negl
mov
inc
das
inc
inc
inc
das
pop
adc
out
mov
mov
push
jae
push
xlat
adc
ret
push
int
push
push
push
dec
push
inc
scas
lods
jecxz
jns
inc
dec
push
mov
popa
mov
pop
nop
push
mov
fs
mov
mov
adc
mov
push
and
cmp
clc
mov
subl
shlb
mov
orb
out
out
add
add
jns
or
pop
mov
adc
test
sarb
sbb
push
sbb
mov
inc
aaa
movsb
mov
sbb
dec
sbb
mov
push
inc
sarb
imul
add
mov
mov
orl
add
loop
pop
mov
jl
mov
or
pop
xchg
mov
negb
test
push
adc
enter
out
push
sbb
pop
sbb
xchg
cmpsb
inc
adc
or
or
sar
mov
js
dec
pop
or
sub
sbb
dec
mov
dec
dec
jle
call
xor
xorb
loopne
je
jne
mov
movlps
push
xchg
push
mov
repnz
cmp
add
daa
push
idivl
adc
inc
insb
inc
adc
sub
cli
inc
mov
adc
scas
pusha
xchg
or
lret
jae
arpl
jmp
cmpsb
clc
daa
push
cmp
je
or
xchg
test
push
idiv
lds
cmp
mov
sub
adc
or
and
mov
add
ss
mov
mov
cmp
inc
das
inc
adc
add
dec
dec
cmp
das
dec
jge
adc
add
shrb
jo
add
push
cmp
je
shrb
jmp
adc
lret
in
adc
inc
aam
add
je
add
push
cmp
xor
fsubl
cmpb
out
jbe
cmp
jmp
or
cmc
daa
test
cwtl
add
jnp
mov
cmp
mov
sub
sub
sbb
orb
loope
push
mov
jb
sti
add
mov
jmp
adc
pop
xor
mov
icebp
xchg
mov
cmp
cmp
push
das
fwait
adc
clc
pop
aam
mov
insb
addb
fs
push
or
sbb
cwtl
push
adc
mov
flds
popa
mov
push
mov
or
or
fcmovnbe
or
add
cmc
xor
mov
adc
and
mov
out
xor
sarl
ret
dec
dec
test
fistps
mov
push
add
sbb
xor
pop
mov
add
nop
push
inc
pop
test
xchg
jl
lds
dec
jne
dec
sub
loope
popl
adc
mov
pushf
inc
int
add
xchg
push
and
mov
es
xor
xor
ja
pushf
xor
scas
lret
push
call
push
adc
mov
neg
fldcw
push
das
outsb
neg
push
in
xor
push
sbb
daa
add
mov
hlt
pusha
insb
cmp
imul
jbe
adc
and
push
push
push
xchg
in
mov
cmp
push
mov
sbb
push
and
push
xchg
inc
lds
sbb
and
inc
pop
and
or
rolb
adcb
push
push
jae
shrb
and
nop
aaa
pushf
nop
dec
push
pusha
adc
push
orb
cmp
aaa
inc
jb
and
xor
shlb
pop
js
mov
movsb
push
das
fimull
in
nop
jmp
mov
pop
and
cmp
and
scas
lock
loop
lods
jne
addl
cli
sbb
xor
jmp
pop
and
inc
movsl
lock
push
xchg
sahf
sbb
push
adc
add
jns
lods
xor
inc
or
outsb
cmp
pop
das
lock
cmp
rcll
xchg
jl
sbb
and
sbb
jle
and
aas
or
inc
sbb
mov
xchg
mov
inc
push
mov
call
cmp
sbb
inc
pushl
repnz
xor
and
adc
mov
icebp
cmpsl
push
pop
mov
fisttpll
push
unpcklps
and
cmpsl
push
fsubrl
push
adc
adc
xchg
and
and
mov
fimull
add
mov
and
mov
or
aaa
jne
sbb
dec
imul
xchg
sbb
jo
or
push
cltd
push
ret
cltd
loop
cmp
test
cmp
jmp
adc
jbe
adc
sarl
add
arpl
das
in
pop
hlt
lock
test
lahf
inc
mov
inc
dec
mov
mov
xor
or
sahf
pop
stos
jo
cmp
dec
mov
mov
add
xor
mov
lea
sub
sbb
pusha
lock
pop
pop
add
jle
mov
pop
aas
es
pusha
inc
enter
int3
inc
and
js
test
cmp
cwtl
dec
sbb
inc
and
and
add
test
cmp
adc
stos
pusha
mov
rorb
movsl
mov
imul
add
adc
add
dec
aad
inc
cmp
inc
sbb
rolb
test
jge
stc
cmp
stos
xadd
faddl
sbb
sub
push
cmpb
sub
or
sub
or
or
jae
mov
push
or
push
xor
popa
push
pop
arpl
imul
mov
mov
pushf
fildll
cmp
mov
cmpl
mov
shrl
xor
xor
push
enter
and
sub
fsubl
mov
rcll
adc
push
outsb
add
adc
sub
notl
add
mov
xor
in
loopne
fisubl
ret
pusha
sbb
cmpsl
jge
push
fwait
in
push
insl
enter
adc
push
dec
mov
dec
insl
push
ljmp
mov
lea
sub
mov
mov
mov
cmpsl
add
orb
fcomps
pop
sub
pop
ja
add
xlat
push
or
imul
or
scas
adc
xchg
iret
xchg
ret
js
mov
push
fiadds
mov
div
pop
push
cwtl
frstor
or
stc
push
or
add
jecxz
bound
popa
mov
add
adc
rclb
mov
imul
fsubl
pop
mov
mov
adc
and
lock
pop
ret
mov
out
dec
sbb
call
int
and
dec
jecxz
rolb
pusha
pusha
dec
lahf
sbb
jns
lds
mov
push
or
fs
add
test
fmuls
and
movsl
rcll
or
xor
fs
mov
sub
mov
cltd
dec
js
enter
iret
test
xchg
jmp
push
outsl
add
xchg
and
data16
and
jecxz
pop
mov
pop
mov
test
shlb
test
or
out
out
or
shlb
dec
sahf
push
ret
sbb
in
loope
push
jnp
xor
test
mov
scas
or
aas
es
mov
sub
push
sbb
clc
mov
arpl
sub
orb
push
lea
adc
inc
xchg
jbe
jae
pop
cli
es
or
shll
sbb
push
out
ret
je
divb
jle
pusha
fisubrl
adc
mov
in
mov
push
jg
cmpb
push
add
jbe
rolb
jl
add
jb
push
rorb
fmuls
mov
add
shl
lret
inc
test
or
ret
xlat
xchg
or
sbb
lahf
iret
add
cltd
addr16
call
add
pop
out
and
sbb
icebp
jne
insb
fmuls
or
add
movsb
popl
mov
inc
xchg
add
lahf
idivb
insb
adc
xchg
add
jp
pusha
mov
add
andl
hlt
push
inc
out
icebp
inc
mov
mov
pop
inc
loopne
das
jbe
mov
mov
inc
inc
add
and
push
mov
cmp
inc
jno
inc
sarb
xchg
or
jmp
add
cmpb
scas
push
ljmp
inc
ja
mov
lahf
jb
sbb
lea
pushf
pop
sbb
push
and
xor
add
int3
test
ljmp
addr16
pusha
pop
and
and
repz
hlt
fxch
cmp
call
ss
inc
test
push
push
movsl
pop
cmp
push
cwtl
ret
push
add
sbb
cwtl
jp
test
fldenv
inc
add
fwait
aad
xor
xchg
cs
mov
faddl
aas
ja
movsl
addr16
fcoml
cld
sub
mov
sub
xor
cmp
cli
fdivl
sarb
push
out
pop
push
scas
mov
push
js
xchg
loop
sbb
fmuls
push
adc
inc
sub
lock
cltd
neg
rclb
pop
cmpsb
or
ljmp
ret
mov
mov
and
fiaddl
add
clc
fincstp
shll
fnstcw
mov
fmuls
or
subl
lret
adc
pop
xchg
out
jae
add
test
adc
lds
sbb
dec
jl
xor
mov
lock
popf
push
adc
pop
push
jmp
mov
stos
movsb
jecxz
imul
pop
nop
pop
rolb
inc
mov
cs
fwait
loopne
sbb
lock
add
flds
addr16
scas
lea
sub
and
dec
mov
mov
and
ljmp
lock
jecxz
mov
jmp
jns
pop
bound
add
mov
cmp
push
test
ljmp
push
jp
sub
push
das
xor
inc
cmp
insb
in
add
out
dec
jmp
rcll
loopne
pop
mov
mov
push
mull
dec
cmp
mov
ficoml
cwtl
es
sub
mov
mov
insb
sbb
xchg
lret
in
lea
add
dec
pop
add
pop
push
shrb
or
add
push
cld
fcmovnb
inc
adc
or
scas
mov
rcl
cmp
aas
dec
pop
jnp
rcll
into
mov
add
int
pop
push
xchg
pop
pop
pop
inc
roll
jne
and
mov
adc
adc
adc
mov
rorb
sbb
add
fnsave
jae
push
inc
sub
call
push
cmpsb
pop
addb
testl
fcoml
nop
ret
push
or
in
outsl
mov
push
xor
and
mov
sub
rorl
shl
mov
mov
jmp
jl
inc
movw
add
cli
and
cld
add
clc
push
mov
and
or
push
lock
subl
insb
stos
jmp
test
idivb
nop
cmpl
ds
ds
adc
sbb
sti
testl
test
jg
xchg
ss
pop
push
cmp
cs
dec
lret
cmpsb
cmp
out
or
sub
sub
pop
pop
add
icebp
and
adc
fcomps
sahf
push
cmpsl
lahf
push
mov
cmp
cmp
out
inc
and
xchg
push
add
push
aad
lret
das
jle
inc
add
inc
mov
pop
or
in
or
add
clc
add
shlb
pushl
add
fimull
sub
push
inc
pop
cmpsb
add
adc
imul
xor
je
mov
scas
cmpsl
fwait
aas
push
inc
mov
dec
test
push
js
orb
jae
cwtl
movups
and
shrb
ret
xlat
lret
add
add
sub
lcall
add
insl
out
ss
loopne
jmp
push
popa
ret
and
mov
inc
push
outsl
push
jbe
mov
dec
jo
leave
shlb
sbb
das
jnp
dec
adc
push
iret
and
lahf
add
xchg
adc
lret
inc
and
push
cmp
sbbl
adc
dec
nop
jno
xchg
jge
add
ret
xchg
ret
push
shlb
gs
nop
popf
cmpsb
div
and
dec
ja
cmp
mov
jo
push
add
sub
sbb
xchg
out
stc
add
roll
cmp
bound
push
lock
pop
push
shrl
and
imul
mov
sub
lea
pop
cld
push
push
mov
das
jns
dec
mov
push
repnz
sub
jae
dec
adc
lods
lock
aas
enter
aas
add
inc
push
pop
pop
push
jl
push
or
inc
sub
sbb
subl
pop
pusha
jne
ss
imulb
sar
xor
cmp
jg
test
jle
imul
jl
cmpsb
aaa
enter
and
enter
cmp
jle
xor
fstl
jo
lcall
jecxz
popa
mov
lret
sbb
dec
jge
ret
dec
imul
push
call
inc
xchg
sbb
shlb
or
lret
rol
test
adc
push
fimuls
jne
lcall
add
lods
xchg
pop
and
imul
cmp
or
and
and
in
or
mov
dec
sbb
das
addb
das
ds
jns
push
sub
cmp
jge
mov
mov
dec
add
inc
ret
std
add
inc
in
sub
loopne
es
fstpt
mov
mov
loopne
mov
pop
cli
mov
jp
mov
mov
adc
cmp
xor
cltd
xor
cld
lea
ss
inc
popf
mov
repnz
add
sub
add
sbb
and
pop
loope
pop
aam
add
lea
pushf
enter
pop
add
movsl
sub
mov
xor
enter
nop
pop
lock
inc
mov
insl
mov
push
mov
mov
ret
outsl
rorl
pop
xor
or
inc
in
mov
repz
mov
mov
adc
add
xchg
or
outsl
add
mov
fiadds
js
jp
imul
mov
or
enter
mov
sbb
pop
movsb
mov
sbb
push
ljmp
fdiv
test
imul
fcomps
xor
sarb
xor
lods
xchg
add
push
push
lea
pop
push
in
aas
and
fsubrl
sbbl
pop
sti
lea
push
sub
xchg
and
sub
sub
add
mov
sbb
or
or
sub
jmp
pushf
push
lret
jo
adc
xchg
and
jmp
adc
sub
insb
and
sub
or
inc
and
pop
inc
or
add
and
and
push
xor
cmp
cmp
mov
adc
rolb
mov
int3
cmp
pusha
dec
shll
inc
out
adc
loop
xor
add
add
es
inc
arpl
cmpb
lcall
fmuls
arpl
xor
testl
dec
adc
and
loopne
or
xchg
sub
push
inc
imul
popa
ss
dec
dec
push
repz
cmp
mov
shrl
ljmp
shll
jo
pop
movsb
in
jbe
roll
sbb
xor
push
movsl
inc
imul
sub
mov
and
lahf
lods
mov
dec
mov
xchg
cmpsl
add
enter
adc
jg
push
xchg
push
cmp
add
add
mov
jle
push
push
in
hlt
int3
or
in
scas
ret
loopne
inc
mov
mov
sub
lock
sbb
sub
mov
fwait
adc
and
int
mov
and
shl
enter
mov
push
inc
push
add
lock
pushf
and
xor
fidivl
mov
xchg
insb
in
cmpsb
test
lcall
or
inc
adc
push
scas
mov
mov
and
jb
lods
mov
sahf
push
jl
add
push
xchg
dec
jae
shll
in
in
adc
dec
lock
je
sbb
cmp
loopne
xor
outsb
mov
call
push
aas
int3
sbbl
andl
add
inc
movb
out
shlb
rcll
imul
inc
popf
jno
pop
or
adc
mov
sbbb
adc
jno
sbb
shl
or
cmp
push
adc
das
push
xor
sbb
cmp
xor
adc
cli
orl
push
inc
mov
daa
and
inc
mov
xchg
icebp
add
shll
adc
rol
xchg
cmp
or
je
sub
mov
jne
add
shlb
int3
or
add
popf
jnp
push
xchg
clc
add
das
sub
inc
ja
movsb
cmpsb
mov
push
dec
pusha
loope
orb
dec
adc
and
mov
mov
push
cmp
cmovns
sub
jl
movsb
jb
or
mov
xor
cmp
imul
add
and
and
daa
test
lea
xor
add
aas
popa
test
fs
pop
push
dec
pop
insb
pop
negl
add
fildl
fildl
in
mov
cmp
call
enter
aaa
sbb
jb
fistpll
inc
push
inc
pop
add
and
mov
and
daa
pop
adc
insb
loopne
push
push
fistps
adc
test
mov
mov
jge,pt
cmp
ljmp
or
rcl
adc
sub
lahf
and
roll
shl
mov
mov
lcall
xor
mov
cmp
mov
les
sbb
and
push
enter
sbb
mov
repnz
sbb
inc
add
fcoms
rcll
jmp
imul
mov
outsl
scas
or
push
negl
inc
pop
adc
push
dec
cmp
ljmp
inc
or
add
xchg
getsec
icebp
xor
scas
pop
popf
mov
in
cmpsl
dec
mov
or
cmp
mov
dec
or
add
adc
sbb
jge
mov
or
test
pop
test
addr16
sub
daa
ds
inc
cmpsb
jno
fstpt
xor
pop
test
dec
mov
add
aam
popa
mov
pushl
pop
adc
ljmp
mov
pop
add
xor
ds
xor
adc
imul
xchg
inc
adc
shlb
es
mov
mov
push
xchg
popa
daa
add
insb
loopne
cmpb
sub
xchg
push
rorl
mov
pop
inc
cmp
or
mov
xor
push
xchg
dec
pop
xchg
mov
ja
outsb
mov
jge
cmp
add
mov
daa
mov
pop
inc
test
mov
mov
pop
dec
mov
add
push
loopne
inc
or
and
dec
loope
cmp
test
and
loope,pn
lock
and
xor
jne
test
mov
xlat
clc
sub
mov
add
push
cmp
or
arpl
mov
sub
pop
mov
cmp
cld
sbb
pop
lea
jmp
mov
cmp
fisttps
xor
loopne
pop
das
das
test
adc
dec
dec
sub
addb
mov
out
add
push
sub
pop
mov
das
mov
and
cmp
sbb
shlb
bound
ja
mov
addl
dec
adcb
xchg
or
adc
ret
and
jno
mov
movsl
dec
fdivrl
pop
dec
fdivrs
jle
push
addr16
jmp
and
push
pop
or
adc
repnz
jnp
jecxz
xor
shrb
dec
dec
mov
mov
test
and
and
inc
pop
aaa
cmpsl
mov
cmpl
mov
mov
lret
add
and
sbb
sbb
imul
mov
and
inc
popf
cmpsl
push
mov
mov
xor
call
stos
xor
push
test
and
push
or
jle
dec
inc
and
rorb
loopne
sbb
fcompl
inc
mov
jmp
les
insl
iret
jmp
jecxz
and
sahf
sub
push
and
and
pop
cmp
es
push
xor
or
dec
cmp
je
xchg
push
sbb
jns
adc
je
jge
mov
add
adc
shrb
test
gs
sbb
add
enter
fcoml
pushf
nop
iret
outsl
ret
hlt
pop
add
push
mov
outsb
push
lods
adc
or
sub
inc
adc
das
and
sbb
mov
add
xlat
decl
inc
mov
mov
and
rcrl
mov
sub
popa
cmp
out
adc
pop
fmull
push
in
sub
js
xchg
dec
push
sub
sbb
sub
inc
sub
adc
pop
es
pop
faddl
pop
jp
jns
shll
shrb
xchg
imul
jnp
add
incb
sbb
lods
adc
je
xor
fdivrs
in
or
push
inc
pop
or
cli
add
call
es
pop
iret
mov
clc
test
dec
adc
adc
pop
adc
pushf
arpl
test
push
add
sub
loop
stos
pushf
inc
dec
pop
jne
push
mov
pop
sub
sbb
cs
jle
and
xor
stos
pop
imul
adc
jg
scas
out
call
push
pop
stos
sub
clc
inc
fs
out
fldcw
sbb
imul
sub
mov
js
and
jecxz
mov
pop
loope
xor
mov
out
pop
push
xor
mov
mov
and
or
push
jbe
pop
jae
nop
sbb
dec
or
and
or
mov
inc
das
add
push
sbb
sbb
adc
push
pop
sub
aaa
push
sbb
xchg
xchg
inc
inc
xchg
call
and
cli
sub
rcl
mov
xor
bound
and
dec
sbb
or
daa
cmp
xor
xor
adc
and
cwtl
push
popf
jns
push
cwtl
leave
xchg
or
dec
cmpl
je
das
cld
xlat
shrb
lds
sub
or
add
add
adc
js
sbb
cltd
jae
xchg
dec
lods
push
pop
sarl
jne
aas
push
sub
sub
stos
imul
push
ret
iret
xchg
adc
mov
sub
jge
test
aaa
add
fimuls
jecxz
jl
ret
or
int
lcall
fsubp
pop
cmpb
subl
xchg
pop
mov
adc
imul
mov
push
data16
sub
ljmp
sub
push
stos
cmp
cmp
call
ret
iret
roll
cmp
out
add
outsl
add
fimull
pop
mov
push
inc
sub
test
fs
pop
mov
in
adcl
sub
loope
add
mov
sahf
or
test
mov
and
outsb
or
das
sahf
push
les
in
out
cmp
mov
aam
sarb
popl
or
sbbl
adc
sub
ss
enter
dec
sbb
xor
adc
lods
dec
add
push
fdivs
inc
add
mov
xor
pop
loopne
out
shl
inc
js
jle
mov
mov
jmp
add
add
stc
decb
adc
push
pop
fs
gs
lock
pop
mov
mov
xor
out
aas
push
add
je
mov
lahf
das
pop
inc
mov
rorb
cmp
jns
xchg
or
pop
sub
adc
push
leave
cld
rorb
sub
push
inc
pop
push
xor
xchg
mov
inc
es
pop
popaw
inc
adc
xchg
xchg
adc
sub
push
loope
mov
sub
sbb
addr16
jmp
xor
jle
leave
or
add
adc
popa
nop
xchg
jbe
pop
cli
pusha
adc
adc
insb
loope
or
data16
sub
sbb
and
nop
ret
lock
or
pop
iret
add
jecxz
insl
dec
es
or
leave
call
loop
cmpb
sub
or
cltd
fadds
lods
leave
adc
pop
cltd
lods
jne
dec
sbb
mov
mov
ja
push
test
push
or
pop
mov
adc
loopne
adc
test
adc
push
add
mov
lret
je
xchg
xor
test
sahf
mov
pusha
add
mov
jbe
shr
sub
push
js
push
subl
test
mov
jmp
repnz
fldenv
mov
faddl
mov
add
mulb
out
imul
call
jae
sbb
loope
add
nop
adc
imul
cmp
mov
cmpsl
pushf
lea
clc
mov
icebp
or
mov
les
sub
push
lea
imull
sarb
jno
cmp
sub
xchg
in
popa
or
enter
push
xchg
jne
call
lret
out
pop
mov
dec
stc
lods
dec
or
jp
add
js
jmp
shll
sbb
or
lods
popf
inc
add
jo
xchg
cmp
in
cmp
subb
add
sahf
add
sbb
add
pop
sub
nop
push
jns
cmc
rorb
leave
push
sub
dec
mov
mov
cmpb
adc
mov
sub
inc
adc
insl
xchg
out
test
jne
pop
arpl
fcompl
out
dec
cld
jo
jne
dec
fisubrl
pop
pop
sbb
xor
add
ret
add
imul
imul
sub
ffree
and
cmp
fimull
sub
std
sub
inc
incl
daa
je
ja
inc
and
add
cmp
mov
add
cmp
movsb
cmpl
and
dec
inc
jo
mov
push
pop
adc
jns
push
or
pusha
mov
pushl
dec
mov
mov
sbb
loop
mov
xor
inc
lret
cs
loope
cmpsl
pop
inc
pop
and
sub
rolb
sub
pop
idivb
jo
add
adc
mov
pop
les
xchg
scas
rcll
cmovns
or
push
mov
pop
jmp
loopne
ss
pop
dec
adc
out
xchg
cltd
int3
push
and
jae
and
cmp
loope
lea
xor
idivl
mov
imul
adc
mov
pop
out
rcr
mov
shlb
adc
es
insb
mov
dec
and
inc
cmpsl
jle
pop
mov
xor
insb
insb
or
adc
and
inc
out
mov
mov
rcrb
jns
or
xchg
jmp
shll
cmp
mov
inc
mov
push
inc
popl
jb
test
sub
inc
std
mov
jb
jnp
adc
loope
mov
cs
adc
add
add
add
in
es
adc
movl
ds
loopne
dec
pop
pop
stc
jge
dec
sbb
and
add
enter
or
or
dec
xor
sbb
in
sbb
sbb
sbb
push
or
and
sbb
sbb
sub
frstor
aaa
or
cmc
add
sbb
sbb
js
push
nop
xorl
ljmp
cmp
pushf
and
pop
frstor
in
pop
jns
sub
inc
dec
pushf
pop
jp
insb
jl
clc
or
inc
es
jl
pop
pop
or
or
jno
xlat
push
pop
sbb
fildll
push
les
mov
add
xchg
jbe
add
pop
daa
popa
testb
mov
push
xchg
lahf
das
pop
mov
stc
push
sbb
dec
mov
mov
out
push
fmull
push
loopne
adc
lods
fcmovnbe
jbe
push
and
lods
ss
fistpl
push
jo
int3
sub
cmpl
arpl
lcall
gs
mov
ret
imul
cmp
pusha
stos
cwtl
lea
mov
push
nop
add
mov
pop
outsl
sbb
dec
bound
inc
cmp
and
or
xlat
into
aaa
sbb
inc
sub
mov
clc
adc
jo
scas
call
lds
adc
mov
mov
cwtl
xchg
push
in
dec
add
mov
jp
xsavec
pop
inc
push
mov
test
cmp
fmull
cmp
jne
mov
mov
mov
xor
test
bswap
sbb
mov
je
negl
xchg
lea
sub
outsb
dec
and
pop
int
and
fs
dec
or
cli
js
bound
xchg
push
xor
imul
xchg
imulb
and
mov
movsb
fcomps
mov
adc
xor
lret
out
iret
sbb
fildl
ret
sub
fs
pop
rol
push
mov
fdivl
sub
mov
adc
mov
inc
push
adc
dec
mov
sbb
inc
jmp
push
call
loopne
repnz
inc
xlat
xor
clflush
lods
loope
scas
loopne
dec
fldcw
loop
adc
push
aaa
mov
popa
imul
xchg
ja
xor
inc
enter
xor
add
loopne
dec
dec
xchg
jns
inc
mov
in
jecxz
add
stc
push
inc
xchg
cmpsb
fidivrl
mov
xor
cmp
cmp
sub
and
cwtl
push
xchg
mov
inc
xor
lock
aad
lock
lea
sahf
pop
aad
mov
cmpsl
ljmp
lock
jg
iret
and
and
inc
xor
jle
xchg
sub
push
fwait
xor
dec
add
js
into
push
or
icebp
fwait
lods
or
pop
or
lock
or
jmp
push
ss
rclb
cs
sub
mov
or
push
popa
iret
mov
mov
call
mov
sbb
ds
add
jmp
pop
inc
addr16
sti
jne
mov
leave
adc
xchg
xchg
xchg
movsb
xor
dec
xor
test
and
dec
arpl
test
pop
xor
cmp
mov
xchg
dec
aaa
fisubrl
retw
fldcw
sbb
cmpsb
lock
imul
popa
or
adc
xor
cmp
daa
or
xor
out
stos
cmp
popa
popa
aad
jecxz
rorl
in
lea
pop
inc
mov
jge
aaa
or
sub
call
test
mov
cmp
jge
cmpb
push
movsl
and
mov
sbb
jae
mov
sub
and
cmp
sub
aam
jge
scas
fwait
mov
sbb
js
idivb
adc
inc
jmp
jns
lods
push
cmp
and
xor
xchg
lret
fs
fs
aaa
jmp
es
sub
dec
jge
pop
dec
mov
ja
sub
and
sub
xchg
jle
or
dec
mov
push
das
movsb
push
test
stos
push
mov
andb
rolb
jo
in
jle
xor
out
ret
popf
ljmp
movsb
pusha
sub
dec
arpl
and
sbb
flds
cmp
push
add
scas
jmp
lret
dec
arpl
xor
movl
dec
jno
mov
je
mov
push
or
test
jecxz
and
xor
loope
dec
sbb
out
fmuls
call
fmulp
rclb
cmpsb
push
and
add
pop
add
xor
mov
orb
push
pop
test
or
add
jnp
sbb
adc
xchg
les
aaa
in
mov
jo
mov
lret
add
imul
add
imul
push
sub
dec
in
scas
shl
sbb
sub
lods
es
lds
or
pusha
cmp
push
dec
arpl
pop
adc
sbb
insb
add
push
or
add
mov
insl
sub
ss
xor
pop
leave
adc
add
arpl
dec
in
jne
mov
ret
xchg
mov
adc
or
and
add
lock
xorb
inc
dec
lret
insl
mov
les
pop
pop
sbb
mov
push
movsl
loopne
ret
cmp
xchg
or
je
sbb
mov
or
lods
mov
cmp
xor
lea
adc
jmp
mov
or
loopne
test
lock
add
xchg
pop
fadds
jl
add
sub
stos
and
scas
xor
sar
insl
jl
pop
and
dec
and
popa
push
sbb
outsb
adc
sub
jo
pop
aas
sub
test
dec
push
cli
insb
add
aam
idiv
sub
pop
pop
dec
sbb
out
subb
clc
cmp
mov
mov
loopne
cli
mov
inc
xor
xor
sbb
das
rorl
adc
pop
ja
sbb
orl
aad
push
adc
pop
sbb
andl
jo
sbb
loopne
or
inc
sub
lahf
out
je
mov
inc
scas
mov
xchg
pop
add
pop
or
jo
lods
xlat
xor
dec
jne
nop
mov
inc
jmp
adc
jmp
jae
dec
fisttps
add
pop
testb
or
mov
nop
ja
jb
lods
lea
gs
pop
fists
add
mov
es
adc
sbb
sbb
cmp
sbb
lods
or
in
orb
cmp
cwtl
dec
adc
test
jl
jbe
ja
fcoml
fisttpl
adc
test
je
xchg
or
adc
lock
iret
jne
insl
call
insb
fisubrl
adc
inc
add
or
testl
xchg
dec
insb
adc
fldl
outsl
pop
sub
test
jmp
add
mov
adc
push
push
mov
xor
jg
insb
pushf
dec
mov
pop
mov
dec
pushf
sbb
je
inc
adc
dec
movb
push
xor
std
rorb
sbb
cmpb
mov
popa
bound
and
mov
add
adc
xor
fiadds
sub
xchg
xchg
mov
adc
push
sub
dec
sub
mov
push
loope
jg
xchg
sbb
adc
sub
ljmp
or
pop
je
add
push
inc
adc
mov
into
movb
sbb
lock
add
inc
scas
adc
push
data16
jecxz
shlb
sub
lea
movb
sub
out
and
scas
sub
daa
pushf
ret
mov
ret
lea
push
or
cld
loopne
pop
and
les
mov
or
or
inc
cmp
es
mov
into
jo
fstl
jmp
and
adc
inc
and
fldcw
mov
or
push
pop
mov
enter
xchg
jb
test
xchg
pop
xor
out
lods
aas
dec
pop
inc
lods
pop
push
ficoms
rclb
push
jb
insl
clc
loopne
mov
or
cmp
loopne
out
rcr
scas
cmp
mul
fucom
dec
lds
add
pop
or
cmpl
xchg
sbb
adcl
fidivrl
les
sbb
or
cmp
rorl
shlb
ret
out
or
push
push
test
xor
pop
push
push
call
roll
adc
push
xchg
clc
add
cmpsl
call
and
ja
mov
and
loopne
aam
inc
dec
enter
in
mov
sbb
or
push
rcrb
mov
dec
add
cvtdq2ps
and
inc
movb
push
add
fcmovb
js
setle
notl
mov
call
inc
les
add
add
pop
or
jne
outsb
push
dec
insl
popf
aad
push
push
sbb
push
into
pop
test
sub
cmc
dec
xorl
pop
dec
xlat
jmp
inc
cmpsb
push
cltd
jo
mov
push
rolb
adc
popa
imul
sbbl
mov
negl
dec
pop
cmpsb
add
push
es
inc
mov
pop
imul
mov
inc
xor
dec
ret
or
sub
add
mov
mov
jno
mov
into
imul
mov
mov
mov
add
mull
mov
sbb
jl
inc
mov
adc
or
add
xchg
mov
adc
mov
sbb
ja
pusha
stos
adc
aam
mov
push
dec
test
mov
fucom
mov
dec
cmp
add
sbb
mov
leave
or
cmp
xchg
jo
mov
adc
push
or
loope
push
lock
sbb
stos
imul
shlb
je
pop
fwait
and
jl
pop
xor
push
sbb
xchg
out
cwtl
and
popa
aas
enter
sbbb
dec
shlb
xor
push
and
adc
mov
dec
daa
jmp
push
das
mov
adc
push
mov
aaa
or
push
repz
xchg
mov
jecxz
xchg
aad
pushw
shlb
inc
adc
test
dec
mov
clc
das
lcall
cmp
cmpsb
mov
mov
loope
loope
stos
cs
mov
pop
jle
sti
inc
imul
adc
outsb
jmp
sbb
js
icebp
pushf
in
or
inc
popa
xchg
sub
ja
jge
cwtl
fs
mov
inc
sbb
xor
popa
pop
push
lock
cmp
sbb
sub
loopne
jle
dec
je
jle
jne
or
add
es
dec
or
add
push
adcb
add
mov
or
inc
add
push
or
fidivs
push
mov
test
sub
push
notb
push
cwtl
int
mov
mov
lea
xchg
mov
jmp
and
add
xchg
inc
scas
mov
lea
or
or
out
sbb
and
outsb
popa
jo
nop
inc
adc
call
movsb
sbbb
inc
mov
es
adc
push
in
pop
adcb
dec
lea
rol
ret
lods
nop
sub
add
or
push
add
cmp
jge
pop
or
pcmpeqd
push
sarb
or
adc
mov
adc
dec
or
mov
adc
sti
das
inc
js
shrl
inc
mov
stc
out
repz
dec
xor
xchg
adc
fninit
shrb
and
jp
and
push
test
iret
notl
sahf
addb
push
scas
lods
cmove
mov
jb
add
sbb
or
or
mov
insb
subb
sub
aaa
mov
and
xchg
cli
cmp
lock
mov
and
add
dec
pop
insb
test
sahf
hlt
paddq
inc
jl
mov
mov
jo
inc
cld
adc
ljmp
xor
mov
testb
fisttpll
cmpb
dec
fnstsw
lock
ds
mov
adc
addb
cmpsb
add
sbb
lods
dec
test
sub
js
xor
test
rcrl
cmp
mov
imul
fsubs
add
jne
sbbl
aaa
inc
je
fbld
loope
sub
fmull
pop
mov
or
adc
sbb
sbb
add
dec
stos
adc
lds
out
aas
outsl
mov
out
daa
xchg
dec
lret
je
stos
and
and
or
dec
jbe
data16
mov
daa
mov
mov
jecxz
xchg
cmpsb
add
sub
int
ror
cs
push
push
fwait
pop
jmp
inc
lock
dec
sti
push
xor
testb
je
pusha
pop
xor
pop
jns
pop
bound
jle
push
mov
fildl
sub
xor
fwait
push
fs
sbb
inc
subb
pop
xchg
dec
xor
iret
inc
jg
jle
pop
outsl
pop
fcomps
and
push
adc
shlb
pop
cltd
mov
push
adcl
dec
push
mov
cmpsb
xchg
sub
push
adc
or
lods
imul
sub
inc
popa
test
scas
lods
stos
sub
jne
in
pop
clc
cmp
je
adc
jae
scas
push
and
pop
daa
add
or
push
test
mov
mov
ret
pop
dec
cmp
fs
icebp
pop
or
jmp
and
data16
mov
out
sbb
shll
nop
adcb
rol
ret
das
xor
outsb
or
inc
add
data16
popf
push
xchg
jmp
addb
aam
outsb
dec
test
add
pushf
xchg
test
xchg
popf
and
add
mov
add
aaa
jnp
lods
aam
mov
pop
xchg
outsb
add
test
jne
sbbl
adc
in
sub
push
daa
adc
add
outsl
loope
test
sub
mov
adc
add
loop
adc
or
lock
pop
or
sbb
movsb
add
add
cmp
mov
push
add
mov
aam
lock
fst
jg
or
xchg
pop
cmpsl
xchg
sbb
cld
jo
dec
aas
stc
xchg
pop
cmp
add
inc
imulb
dec
jo
or
push
and
insl
adc
test
dec
push
pop
push
jne
sub
bound
stos
lea
scas
xchg
lods
adc
pop
sub
adc
dec
xchg
sbb
stos
sbb
sub
pop
lret
sbb
push
fidivl
sub
ret
and
aam
insl
dec
or
daa
outsl
cltd
and
jp
stos
sbb
sub
or
roll
es
dec
and
cmpsb
sbb
insb
adc
inc
rorb
dec
ss
mov
push
dec
cmpb
into
xchg
lods
test
sub
pop
mov
cwtl
sti
sbb
cmp
or
or
mov
push
aam
or
mov
xchg
popf
rcrb
jp
inc
out
mov
dec
orl
mov
inc
xor
mov
mov
mov
sti
adc
add
xor
enter
xlat
ja
or
sbb
popl
dec
and
or
xor
mov
imul
mov
shll
pop
leave
fwait
sbb
pop
mov
xchg
or
inc
cmp
ror
gs
or
outsb
out
mov
int
xchg
inc
and
cmp
iret
mov
add
lods
imul
or
popa
add
or
fwait
dec
aad
out
lock
sbb
addb
dec
jmp
insb
fnstsw
jo
mov
in
adc
movsl
movsb
clc
out
outsb
testl
test
push
dec
xchg
and
mov
std
xor
in
out
xorl
mov
and
outsb
dec
cld
and
add
ss
and
add
scas
test
outsl
insl
popa
pop
cmp
loope
mov
mov
pop
add
dec
push
pop
push
push
clc
add
popf
sub
fsubrs
cmpsb
imul
xlat
dec
push
and
mov
cli
and
and
outsb
shrb
jne
fwait
mov
loope
mov
and
inc
pushf
sbb
dec
push
les
jmp
popa
xor
movsl
ret
lds
push
sbbb
testb
addr16
pop
outsl
mov
and
or
inc
sub
ljmp
loop
outsl
or
test
add
mov
jge
cmp
add
outsb
or
imul
sub
pcmpeqb
dec
jmp
mov
xchg
xchg
fmull
lods
add
ret
push
pop
clc
adcl
out
push
daa
and
inc
xor
push
shlb
pop
jbe
and
inc
inc
inc
pop
push
and
or
adc
and
add
fwait
add
test
or
inc
das
xchg
fxch
sbb
inc
cmp
mov
pop
stc
addr16
add
push
lret
decb
ret
jecxz
xor
push
mov
das
add
xchg
adc
push
jae
test
filds
ret
push
adc
pop
lcall
and
lods
leave
mov
xchg
stc
xchg
pushf
call
jp
adc
xor
shll
rolb
and
stc
outsl
mov
out
push
jp
cs
inc
nop
fmuls
sbb
jbe
cwtl
pop
mov
nop
xchg
adc
add
ret
cmpsl
arpl
push
imul
test
adc
hlt
jl
adc
and
ja
lahf
adc
push
adc
add
cmpsl
fcomip
push
cmpb
pop
enter
sub
jl
sti
push
xchg
scas
pop
lahf
fmuls
mov
dec
adc
push
inc
jb
lahf
push
ret
or
add
pop
add
push
outsb
add
aam
icebp
ret
mov
test
dec
clc
test
mov
add
xchg
sbb
insb
or
les
sub
dec
sub
fstp
and
push
out
or
and
xchg
mov
adc
out
insl
fadds
pop
inc
addb
jb
mov
jo
adc
aas
xchg
or
or
xor
push
mov
dec
and
loop
mov
inc
jne
lretw
inc
jle
popa
or
xchg
je
mov
xchg
sub
mov
jae
outsl
or
ret
cli
push
xor
rcl
push
pushf
jnp
lahf
ret
insb
js
push
outsl
pop
ds
xchg
insb
aaa
mov
mov
dec
jno
mov
lds
loope
push
jo
ret
cmp
mov
push
push
xchg
sbb
fsubrl
sub
fs
decl
fdivrp
je
push
or
test
push
mov
lahf
or
or
inc
mov
mov
inc
rol
int3
inc
inc
inc
inc
rcl
fcomp
inc
inc
inc
inc
loopne
call
inc
lock
clc
cld
inc
inc
cs
add
add
or
inc
inc
inc
adc
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
pop
inc
inc
inc
push
push
pop
push
sub
leave
sti
sub
xor
daa
loopne
loope
mov
lds
pop
arpl
mov
xor
add
xchg
mov
cltd
sub
rclb
je
in
movsb
cld
mov
adc
push
and
loop
inc
mov
push
sbb
gs
les
test
push
movsb
xor
rcl
in
leave
lret
or
faddl
loopne
push
sbb
dec
gs
sub
in
pop
lock
andb
mov
test
mov
and
movsb
shlb
xor
adc
jb
lret
adc
movsb
sub
push
sbb
pop
gs
sub
sub
test
mov
cmp
cmp
inc
add
nop
loopne
clc
dec
nop
lret
adc
sbb
push
pusha
test
imul
ja
addl
jno
or
js
add
lock
aad
iret
add
or
test
popa
ret
and
cwtl
nop
in
add
sti
and
inc
mov
int3
fdivr
add
adc
xlat
aas
push
fdivl
mov
and
daa
or
xor
mov
adc
and
inc
push
imul
popf
jbe
inc
fcomps
dec
arpl
jae
dec
or
sbb
dec
mov
daa
test
add
outsb
adc
outsb
sub
leave
inc
push
outsl
xorb
in
ficoml
fistps
xlat
sbb
and
dec
xor
adc
pop
bound
xchg
add
or
fsubl
push
mov
mov
mov
or
jae
sub
outsl
sub
inc
adc
jns
dec
imul
out
cs
iret
push
loopne
pop
stos
outsb
popa
and
xorl
imul
pop
inc
push
fstpl
imul
pop
in
pop
xchg
pop
lds
or
pop
cmp
sbb
sub
and
push
popa
dec
mov
sbb
xchg
jne
insl
int
cmp
pop
fs
mov
imul
push
mov
inc
insl
inc
icebp
mov
nop
xchg
cwtl
inc
popa
fadds
xor
fwait
outsl
jno
xor
in
sbb
adc
inc
adc
or
lea
imul
xchg
enter
lods
pop
jne
mov
mov
inc
jmp
sub
and
adc
shrd
push
sbb
test
sub
lods
cmpsl
mov
sbb
subb
orb
lahf
aaa
test
push
dec
inc
push
dec
xlat
mov
ja
iret
adc
mov
sbb
or
mov
ds
xor
mov
xchg
dec
das
dec
hlt
daa
popa
adc
scas
das
jge
rcrb
xchg
or
mov
jl
xchg
pop
daa
outsl
push
mov
add
je
jl
pop
popf
test
mov
lret
push
cwtl
adc
or
inc
ja
inc
gs
scas
jl
pop
or
mov
sbb
pop
mov
and
jno
fwait
dec
popa
jns
add
out
sub
xor
add
dec
aad
lcall
fdivrp
or
push
jae
les
push
inc
insb
mov
xorb
xchg
cmc
sarb
gs
rcrl
ret
xchg
js
xor
sbb
shrl
mov
add
dec
add
and
movsb
fidivrl
pop
in
pop
xchg
pusha
incb
jle
add
clts
pop
add
enter
outsb
push
jo
inc
mov
test
addb
stc
data16
rcr
loope
and
sbb
jnp
imul
push
inc
mov
data16
data16
push
sub
push
movsb
out
jmp
mov
lcall
in
push
inc
fdivrl
dec
pop
aam
add
mov
mov
inc
jmp
lahf
ja
addb
in
push
ret
push
cmp
pop
push
mov
ret
pusha
sbb
sub
sbb
mov
in
test
lock
in
les
mov
inc
test
push
or
jbe
jp
push
push
or
nop
mov
sbb
xor
xchg
push
sbb
clc
mov
and
inc
iret
mov
add
add
add
clc
leave
inc
and
or
adcb
flds
test
pmuludq
push
or
popf
mov
or
sub
and
or
mov
outsl
push
pop
sarb
je
ljmp
dec
adc
sti
jecxz,pn
into
shl
mov
mov
adc
stos
out
sti
push
stos
jo
jo
mov
outsb
adc
adc
push
adc
lcall
add
mov
orb
jb
push
cwtl
cmp
jae
mov
pop
dec
sbb
add
adc
inc
call
xchg
fcoml
mov
dec
or
push
inc
pop
fs
or
pop
inc
pop
movsl
cpuid
sbb
xchg
xor
lret
xor
xlat
and
push
xchg
push
call
cli
cmp
test
insb
sbbb
cmp
adcb
adc
int
dec
cmp
jo
pop
push
jb
into
pusha
xchg
mov
jbe
jmp
sbb
add
cbtw
sbb
pop
or
insb
ds
call
leave
repz
dec
inc
jmp
ss
out
mov
ss
sbb
incl
ret
push
outsl
jo
jo
cwtl
mov
or
mov
and
rorl
fmuls
xchg
and
cmp
pop
xchg
and
fstl
and
jbe
mov
and
mov
sahf
cmp
mov
add
jns
push
shl
aaa
push
icebp
add
and
jne
push
imul
jbe
lahf
test
lret
es
aam
add
push
clc
pop
insl
fstp
ss
dec
inc
pop
inc
mov
daa
mov
scas
ret
push
imul
mov
popa
pusha
cmp
mov
ffree
xchg
cmp
sbb
or
bound
or
sbb
or
cltd
mov
push
dec
scas
fldcw
sub
xchg
dec
dec
loopne
enter
sub
imul
dec
clc
clc
and
dec
fmuls
imul
add
pop
jbe
sub
sub
rolb
les
ficomps
addr16
in
mov
fcmovb
jecxz
jns
insl
push
outsb
push
out
outsb
test
enter
nop
or
or
ror
loopne
push
mov
sbb
mov
sarl
inc
push
dec
xor
xchg
xor
fwait
cwtl
xchg
loop
pushf
lock
xchg
or
xorl
cmpsl
andl
daa
cltd
and
nop
jbe
dec
data16
add
mov
sub
add
inc
out
mov
mov
inc
push
enter
aam
sub
inc
clc
shlb
pop
inc
adc
dec
repz
sbb
push
push
jns
cmp
pushf
mov
inc
jbe
push
pushf
jnp
jnp
nop
push
rorb
push
and
mov
jl
in
cld
add
or
fwait
out
mov
or
mov
adc
push
outsb
sbb
test
xor
out
fistps
insb
push
xchg
push
add
cmpsb
in
and
lea
push
push
test
pop
rorl
push
cs
pusha
lock
roll
mov
aas
hlt
sahf
mov
ror
lock
mov
ds
dec
inc
aas
stc
inc
sbb
pushf
into
aas
inc
jge
mov
xchg
pop
movsb
int
pushf
outsb
pop
addr16
push
testb
in
jnp
pushf
mulb
nop
das
lods
into
dec
mov
mov
push
sub
dec
loopne
repz
jl
push
adc
js
clc
nop
push
shlb
mov
adc
jnp
adc
lcall
addb
sub
push
mov
xchg
shlb
popl
sub
js
lret
push
adc
pop
xor
hlt
ss
pusha
sub
pop
push
inc
mov
leave
and
test
pop
cmp
pop
mov
and
add
idiv
loop
mov
ljmp
push
pusha
rcrl
jnp
jns
loopne
push
dec
pop
jo
pop
adc
lods
subl
pop
sbb
icebp
cwtl
push
aaa
and
xchg
jo
add
jo
jae
enter
push
jno
push
and
mov
inc
mov
jne
lret
adc
lods
pop
iret
adc
sub
nop
or
xchg
rorb
pop
rcrl
dec
shll
addl
lret
jne
xchg
or
daa
lods
inc
pop
lds
pop
lcall
sbb
stos
popa
xchg
adc
pop
jae
jae
bound
add
lds
inc
mov
sarb
pop
push
xlat
icebp
push
jecxz
xchg
lds
adc
bound
inc
imul
or
fs
push
inc
in
adc
je
fsubrs
xor
inc
divl
shl
ret
sbbb
ror
jb
mov
mov
push
and
pop
es
and
push
jb
sub
and
push
lods
inc
inc
or
mov
adc
fsub
inc
sub
push
js
je
movsb
dec
fsubs
lahf
icebp
or
push
and
ds
lahf
mov
inc
push
fs
xchg
mov
xchg
sbb
mov
clc
dec
push
jo
das
push
and
inc
xor
sbb
pop
xor
add
mov
xor
and
sbb
test
dec
add
test
cmp
or
mov
int3
filds
into
int3
mov
movb
xor
mov
or
sti
pop
sarb
jbe
shlb
jp
inc
out
jge
jmp
popf
and
subl
xor
int3
pop
aad
adc
lods
add
test
clc
xchg
xor
rol
dec
mov
inc
inc
mov
pop
icebp
adc
fmull
add
jae
xchg
lods
cmc
push
adc
pop
orl
dec
iret
cwtl
subb
jo
xchg
rol
cmpsl
lea
mov
add
mov
push
mov
xor
push
lods
cmpxchg
jmp
or
outsl
add
xorl
sbb
mov
xchg
mov
xlat
insb
jl
cltd
rorb
push
xchg
xchg
adc
xlat
xchg
adc
mov
aas
sub
add
sti
add
in
or
fadds
jne
outsl
pop
mov
cld
adc
lea
insl
pusha
pop
test
mov
or
loopne
in
add
ret
adcl
and
fistpl
dec
dec
mov
lret
cld
mov
mov
pop
test
or
pop
test
je
or
sbb
or
cmpb
jne
vmread
inc
mov
repz
push
jne
or
cltd
inc
add
sub
jge
sub
je
out
xor
arpl
mov
xor
ds
mov
arpl
mov
xchg
sbbb
test
dec
xchg
shrb
lahf
jge
or
test
xchg
lret
and
lock
loopne
nopl
lods
add
pop
sub
sub
enter
xchg
hlt
xor
andb
cmp
xchg
hlt
ret
push
mov
mov
dec
in
sub
add
je
pushf
add
sarl
jle
and
mov
push
rorl
loope
adc
sub
dec
xchg
push
dec
ror
push
addl
sbb
add
jmp
pop
mov
inc
push
ja
jae
pop
sub
push
and
lock
shll
adc
testb
mov
pusha
mov
dec
lock
push
pop
inc
clc
push
and
std
add
or
pusha
sbb
inc
inc
and
decl
cmp
cmp
ret
and
neg
push
add
das
jno
mov
or
rclb
loope
cmp
cmp
cltd
enter
xchg
fdivs
aaa
xchg
fadds
sbb
out
lret
cld
out
mov
fbstp
sbb
push
lret
andl
lds
loopne
add
scas
inc
ret
xorb
jmp
push
cmp
test
xlat
cmpsl
pop
rorb
aam
or
mov
push
cmp
jb
rclb
daa
and
push
inc
hlt
or
dec
cmp
sbb
xchg
mov
and
dec
in
mov
xor
imul
adc
sub
mov
inc
inc
andb
inc
and
pop
outsl
cmpsl
stc
or
fildl
je
negb
lea
adc
pop
inc
push
aaa
nop
lret
or
add
xchg
lds
push
in
add
inc
dec
sub
sbb
xchg
cmc
not
fucomip
sbb
sar
dec
dec
subl
sub
ljmp
add
pop
or
sub
in
in
xor
sbb
ret
std
push
mov
hlt
out
scas
sbb
addr16
leave
adc
and
dec
test
or
dec
add
inc
push
leave
sub
inc
nop
fwait
dec
jae
or
loopne
stc
leave
sbb
add
out
add
mov
mov
rorb
and
mov
or
xor
out
add
mov
lock
outsl
and
inc
popf
add
push
adc
lds
scas
je
mov
hlt
in
or
pop
in
adc
mov
pop
dec
push
cmp
daa
je
mov
movb
dec
mov
inc
adc
nop
cwtl
inc
sub
cmp
fwait
push
dec
leave
add
mov
pop
int
mov
cmp
lret
fbld
sbb
adc
push
ror
daa
iret
sahf
sahf
fistpll
xchg
lahf
inc
sbb
js
xchg
adc
test
add
jns
lret
add
cmp
fiaddl
mov
test
mov
in
sbb
xchg
int3
xchg
mov
dec
iret
push
movsl
bound
shrb
mov
mov
dec
ljmp
mov
jno
xlat
leave
fwait
insb
stc
mov
adc
or
das
xor
rolb
inc
jecxz
out
sub
jmp
adc
add
loop
mov
mov
or
sti
sbb
mov
mov
jo
sbb
inc
jecxz
loop
pop
cmp
iret
mov
sbb
jle
sbb
sbb
int3
inc
jo
popa
add
in
ror
arpl
sub
sbb
jl
add
sub
adc
xor
cmpb
dec
lea
xchg
mov
sbb
pop
add
pop
xor
xor
test
cmpb
imul
pop
mov
mov
aaa
push
pop
sub
push
lcall
push
lahf
or
dec
dec
jne
mov
cmp
nop
mov
xor
pop
jo
pop
cmovb
and
add
and
or
add
inc
and
jg
movsl
cmp
sarb
or
mov
in
or
movsl
sub
test
mov
dec
rcl
dec
sub
and
add
leave
jne
add
lds
scas
or
test
sbb
cmp
pop
adc
cmp
sbb
push
add
mov
and
push
mov
pcmpeqd
push
pop
cli
inc
aam
add
cltd
xor
sbb
sbb
sbb
adc
adc
push
or
roll
xchg
cmpsl
mov
xchg
test
clc
loope
aas
bnd
rol
aas
fisubl
ds
in
xor
sub
dec
icebp
jle
mov
dec
and
mov
scas
mov
cmp
jp
test
outsb
cmp
mov
xlat
decb
and
adc
clc
mov
add
mov
add
jp
add
jmp
xchg
cmp
clc
add
dec
mov
inc
add
pslld
push
dec
dec
out
sbb
mov
or
cmpl
push
lea
add
ja
cmp
or
adc
sbb
loopne
pop
xor
popf
cmpb
mov
push
cwtl
fcomps
cmp
jne
mov
mov
insl
adc
lods
or
mov
dec
mov
jns
out
add
lock
roll
pop
shr
cmpsb
or
cmp
rcrl
xchg
xchg
ret
hlt
add
aaa
hlt
push
les
and
es
jmp
cmpl
xchg
imul
or
add
int3
addr16
pop
xchg
test
jns
enter
das
pop
sub
mov
and
pcmpeqw
mov
inc
cmp
mov
insb
sub
addl
cmp
pusha
or
jbe
shlb
add
xor
lods
mov
ljmp
out
daa
cmpsl
fidivl
mov
ret
aas
data16
push
bound
ret
xor
daa
adc
push
adc
popa
or
lret
jo
nop
adc
mov
ds
inc
insb
fdivs
or
jb
cmp
arpl
dec
jbe
sbb
jns
or
or
enter
inc
cld
or
pop
gs
adc
je
jno
and
sbb
xchg
faddl
pop
push
fcoms
cltd
call
das
sub
enter
outsl
jae
mov
cmpsl
or
pop
mov
push
mov
fisubs
ret
test
jno
mov
adc
push
popa
jo
xor
enter
inc
lret
out
and
push
stc
iret
dec
mov
dec
dec
cmpsb
rclb
adc
inc
popl
jb
mov
fs
inc
jp
mov
arpl
xchg
push
ja
js
sub
mov
dec
or
js
into
inc
data16
pop
adcl
adc
push
repnz
fs
or
dec
xor
sub
pop
push
adc
push
push
xor
cli
sbb
and
mov
xchg
fcomps
aas
inc
popa
jb
dec
jb
jg
js
xchg
add
insl
push
cs
lret
inc
and
rcr
stos
pop
pop
push
popa
mov
pushf
es
iret
inc
or
rcrl
xor
pop
or
push
movsb
je
daa
push
insl
jae
pop
sub
add
ja
fs
in
lods
test
js
andb
jns
xchg
mov
popa
incl
cmp
jno
xchg
mov
mov
daa
pop
das
jno
sbb
inc
imul
push
add
in
and
push
test
shl
sbb
jb
aas
xchg
add
sarl
fistps
loop
mov
xor
sbb
cmp
iret
xor
mov
mov
mov
pop
or
stos
mov
je
mov
cmp
and
aaa
mov
shrb
sub
xchg
push
filds
out
imul
mov
lcall
adc
lds
xor
jo
dec
popa
in
daa
jno
jnp
out
das
adc
mov
mov
and
pop
dec
aas
jb
add
imul
jo
jecxz
aaa
iret
xor
and
push
rcrb
addr16
push
aad
sub
ja
or
jecxz
fists
loop
pusha
sub
sbb
xlat
inc
and
xor
call
mov
inc
cmp
push
jne
xchg
jae
or
popa
pop
das
mov
and
cmpsb
aaa
das
inc
lds
test
adc
inc
repnz
add
addl
sub
ds
adc
mov
xor
arpl
xor
lea
sbb
pop
pop
xorb
pop
test
push
mov
ret
daa
adc
inc
test
ret
outsb
push
daa
out
loopne
sub
popa
sub
and
dec
or
orb
jl
adc
aam
jae
das
mov
adc
inc
loop
out
das
sbb
add
stos
add
push
loopne
dec
dec
arpl
adc
add
arpl
cld
mov
pop
aaa
iret
test
add
sub
pop
inc
lcall
adc
ja
popa
add
xorl
aaa
mov
movntps
inc
cmp
mov
bound
loope
lds
add
dec
jbe
or
dec
jae
add
xlat
dec
outsl
shll
mov
sub
aaa
add
adc
push
ljmp
or
mov
outsl
ret
push
or
idivl
xchg
and
sbb
or
out
push
insl
outsl
imul
xor
jne
mov
insl
xorl
rclb
clc
test
out
pop
aaa
addr16
les
push
sub
aam
mov
or
push
cmp
loopne
imul
cwtl
xor
xchg
jecxz
xchg
push
xorl
mov
mov
mov
add
icebp
fidivs
push
mov
mov
push
in
out
cmp
push
inc
aas
push
out
or
jecxz
mov
xor
decl
inc
lcall
adc
jmp
add
iret
pop
sbb
pop
pop
sbb
or
adcl
or
xchg
jb
xor
push
xchg
pop
add
seta
cmpsl
rolb
jp
in
loope
or
adc
add
adc
push
leave
adc
adc
mov
xor
inc
stos
cmpsb
push
sbbb
fists
dec
outsb
sbb
cltd
add
add
cmp
adc
xor
mov
mov
and
nop
or
jecxz
lods
push
sbb
lods
or
or
push
adc
or
pop
dec
repnz
and
loope
xchg
insb
sbb
pop
sbb
cmp
leave
mov
inc
stos
test
movb
and
push
or
pop
inc
popf
pop
and
pop
andb
push
leave
push
add
fs
and
add
es
jb
xor
sub
xor
jb
sub
test
dec
jl
inc
pop
push
xchg
add
add
enter
ja
inc
pop
mov
rcrb
mov
mov
inc
pushf
and
cwtl
out
inc
xlat
loopne
or
dec
pop
out
lock
rcrb
jb
testl
sbb
xchg
add
daa
add
inc
inc
insb
jl
ret
xchg
out
xlat
add
jl
xor
mov
mov
push
add
sahf
aam
mov
lock
add
cmp
aaa
and
xor
pop
adc
orb
jb
add
sbb
sub
pop
mov
adc
loope
xor
imul
imul
pop
adc
or
xchg
or
xchg
ret
test
add
sbb
loopne
push
mov
fistpl
mov
mov
mov
fucomip
xchg
sbbl
dec
clc
mov
lods
add
push
or
xchg
cmc
push
add
lock
mov
cmp
jg
in
test
sub
mov
aaa
inc
aaa
mov
je
idivb
xchg
jb
mov
fistpl
push
adc
stc
push
leave
ret
or
lret
pop
fcmovnb
faddl
and
divb
inc
mov
push
add
dec
xor
jmp
sub
imulb
jmp
and
gs
mov
add
add
dec
cltd
and
pop
jge
xor
mov
mov
dec
sbb
sbb
sbb
nop
dec
adc
push
or
inc
sub
add
pop
fmull
ljmp
mov
sbb
jns
sub
dec
sub
xchg
or
adc
inc
add
adc
inc
and
and
cwtl
out
pop
xchg
negb
adc
adc
jle
sub
or
repnz
cmp
nop
jae
sti
cwtl
insb
and
cwtl
or
std
pop
mov
mov
sub
bound
inc
and
testl
cmc
or
fldenv
sbb
inc
mov
jne
cmp
jmp
shll
nop
jnp
test
ret
sub
mov
fbstp
jnp
inc
sbb
jne
pusha
jno
jle
push
and
addb
or
mov
nop
and
pop
mov
mov
incb
mov
fstl
aaa
icebp
inc
mov
jne
cmpb
adc
mov
imul
data16
fisttps
or
insb
jmp
and
iret
and
xor
jle
adc
popa
dec
in
xchg
fstpt
in
pop
dec
add
rorb
cmpw
sub
adcb
xchg
jmp
sbb
js
pop
or
adc
sub
mov
pop
lahf
ret
rcr
iret
daa
sub
test
and
insl
and
stos
stos
xor
jb
lods
lods
mov
dec
xchg
pop
cmp
xor
xchg
ret
repz
sbb
negl
cmp
add
dec
inc
mov
insb
loopne
fwait
sub
adc
lock
popf
scas
push
dec
pop
add
jne
inc
loopnew
dec
je
pop
adc
push
cmove
cmpsb
xchg
add
or
jne
adc
sbb
jg
imul
cmpb
dec
jl
adc
jl
mov
fld
insl
jmp
movsl
sub
js
inc
and
mov
xchg
fcomps
jne
testl
push
cmp
pop
inc
jmp
ljmp
insl
jne
cwtl
xor
jb
xor
push
mov
xor
or
arpl
ret
addps
pop
lds
jo
hlt
mov
shlb
sub
rol
mov
dec
lock
pop
push
movsl
inc
adc
push
xchg
inc
sbb
sub
adc
aas
xchg
push
inc
je
out
mov
xor
xor
sbb
push
mov
add
sub
sbb
xchg
mov
and
push
inc
daa
loop
pop
cmp
or
dec
or
mov
fmul
ret
test
push
dec
xor
fnstcw
cmp
xor
push
mov
fsts
mov
push
lret
cmp
cmpsl
pop
sti
push
inc
je
mov
pop
push
cmp
push
mov
shlb
aas
fistpl
ret
push
cmp
add
loopne
cmpsb
push
cmp
out
loopne
imul
mov
adc
pop
fdivl
cld
push
pusha
sbb
or
call
and
sbb
repz
outsb
mov
add
mov
add
mov
or
lcall
push
and
push
or
imul
movsl
mov
and
jp
ret
pop
mov
sbb
inc
lock
loopne
mov
or
push
pop
xor
inc
mov
cmpsl
pop
pop
lods
push
mov
divb
repnz
cmpl
rcl
or
cmp
fadd
lods
inc
xor
xor
and
repz
je
les
test
xor
cmp
push
pusha
ffreep
add
sbb
mov
mov
cmpb
jp
xchg
xor
or
loope,pn
jmp
or
loope
cs
adc
mov
adc
adc
cmp
or
in
adc
cmp
addb
shl
out
test
cmp
pop
add
insb
fisubl
pop
aad
insb
push
add
pop
and
xor
cwtl
scas
movsb
cmpl
jg
mov
imul
das
orl
in
xor
push
out
mov
scas
adc
rolb
and
cmp
ja
nop
add
lret
pop
pop
popa
mov
push
test
or
add
push
dec
sbb
and
je
mov
lods
addb
hlt
ret
das
inc
out
dec
push
pop
push
insb
fisubl
fimuls
scas
adc
lods
jmp
or
or
hlt
push
cwtl
cli
popa
push
or
jne
daa
pop
orb
sar
xor
mov
lea
mov
inc
inc
cmp
jne
pop
sarb
popa
push
push
scas
sarb
andl
stos
add
or
insb
add
outsb
jecxz
in
rolb
negb
inc
or
jo
inc
daa
sub
dec
add
inc
aaa
sub
stc
inc
mov
fs
inc
or
hlt
push
xor
inc
pop
dec
aaa
dec
push
cmp
push
fcomps
and
adc
inc
inc
dec
inc
cli
or
pop
movsb
xchg
push
pop
dec
dec
inc
leave
sbb
add
pop
dec
scas
movsb
fildl
add
ss
inc
or
mov
pop
in
pushw
xor
push
inc
insb
inc
adc
ret
push
mov
push
in
inc
pop
mov
cmpb
inc
pushf
xchg
push
jo
push
and
jnp
fsubrs
mov
cmpsb
scas
call
fstpt
push
adcb
and
or
dec
test
addr16
popa
popa
push
mov
pop
sub
or
cmp
enter
test
add
pop
add
add
hlt
cwtl
mov
mov
pusha
movl
pop
cmpsb
sub
pop
icebp
jecxz
add
push
js
mov
cmp
insb
in
out
mov
inc
imul
xor
cmp
pop
inc
ds
int3
loopne
mov
sbb
mov
out
or
cmp
push
jl
shl
adc
jae
clc
shll
pop
gs
les
jecxz
loopne
and
push
push
mov
xor
clc
addl
sarl
adc
sbb
adc
adc
dec
ljmp
cwtl
jno
addb
mov
mov
dec
ret
dec
pop
and
xchg
jle
scas
add
mov
ja
mov
pushf
mov
push
xor
pop
mov
lods
xor
adc
in
or
inc
pushf
fcmove
jae
out
mov
pop
mov
xchg
mov
xchg
mov
pop
mov
ds
adc
inc
fldt
cmp
dec
and
adc
xor
inc
loope
imul
push
in
or
cmp
xchg
fldl
mov
pop
test
cmp
push
clc
insl
pop
fcmovu
in
rcr
pop
sbb
movsb
or
scas
xor
jo
mov
sub
es
pushf
mov
fwait
imul
or
mov
imul
cs
pop
jns
dec
xor
push
xchg
mov
int3
sarb
rcl
ret
aas
fsub
lcall
mov
pop
jp
and
and
rcrb
mov
dec
or
pop
or
lock
add
dec
add
sub
mov
xchg
and
pop
push
negl
pop
add
add
add
dec
dec
dec
mov
rclb
aaa
inc
jnp
pop
push
sub
insl
mov
dec
outsb
negl
int
movl
pop
ss
push
outsl
pop
or
and
xchg
push
fisubrl
push
nop
add
adc
fidivl
pushf
inc
stc
sub
push
push
dec
fnstcw
cmpsl
pop
sbb
hlt
dec
add
je
lds
sub
les
shr
out
je
add
test
cmovnp
shlb
sbb
push
push
pslld
cmp
add
push
inc
xchg
sub
addb
mov
jns
add
loope
in
or
sub
fadds
scas
push
jne
push
pop
in
out
pop
jae
cmp
loopne
sbb
xor
hlt
fstpt
pop
sub
or
ja
jne
or
stc
jae
cmp
add
mov
mov
incb
add
rorb
add
test
rcrl
addr16
ds
ret
test
bound
push
pop
fiaddl
inc
jle
or
add
xorl
sti
or
xor
jo
xlat
cwtl
dec
or
clc
mov
dec
aam
pop
sbb
mov
mov
xchg
xchg
lods
add
and
cs
add
mov
mov
outsb
rcl
sub
lcall
xchg
sbb
enter
push
adc
adcb
mov
add
int3
and
or
pusha
push
cmp
loop
add
cwtl
jne
xor
dec
or
jg
dec
imull
add
cmp
jge
das
sub
rolb
adc
testb
add
add
loopne
add
add
das
pusha
rcll
cld
jno
mov
sar
rolb
dec
icebp
sub
outsl
push
mov
mov
test
xchg
mov
add
mov
test
and
cmp
jmp
mov
insl
mov
pusha
cmp
loopne
je
fcmovnb
xlat
jle
mov
and
sub
test
test
fists
ljmp
or
mov
frstor
cmp
xchg
pop
mov
cmp
je
popf
mov
rorl
inc
fists
insb
imul
dec
xchg
push
xchg
mov
pop
push
je
mov
jne
pop
xchg
and
adc
adc
push
push
mov
les
inc
dec
push
push
sub
inc
fists
test
repnz
add
sbb
sarb
add
leave
rorl
into
mov
fsub
mov
jae
xor
shrb
mov
adc
clc
ljmp
mov
xchg
push
cmp
jg
pop
or
pushf
cmp
mov
mov
and
addb
test
fmul
aam
lods
jo
or
add
push
enter
xchg
mov
add
add
dec
mov
or
in
mov
test
mov
scas
adc
loopne
arpl
mov
dec
adcb
rorb
or
sbb
addl
push
push
icebp
jge
mov
jmp
adc
je
mov
cwtl
rolb
rol
insb
out
push
dec
mov
dec
pop
inc
out
sbb
sahf
and
sbb
sub
dec
xchg
adc
loope
test
mov
adc
ret
pop
fisubs
mov
fstpt
jge,pt
mov
xchg
cld
or
cld
jns
add
jbe
int3
inc
push
dec
adc
int3
lcall
jge
jge
jl
lods
adc
cmpb
xchg
dec
sbb
pop
int
sbb
inc
fcomps
inc
dec
stc
dec
jmp
sub
nop
cwtl
inc
orb
aas
xlat
adc
test
inc
add
nop
mov
loop
test
adc
adc
lea
insb
add
mov
imul
fdivl
insb
jge
push
add
je
pushf
xor
add
daa
add
and
jbe
and
inc
cmp
mov
fsubrl
ja
and
mov
and
mov
xor
inc
clc
jecxz
test
test
add
xlat
cs
add
movsb
out
cwtl
rcl
adcb
cmpsl
sbb
pop
add
clc
imul
in
adcl
push
das
push
lds
mov
inc
dec
mov
inc
inc
ret
dec
push
pop
push
xor
test
xorl
add
inc
movsb
lahf
sbb
adc
fs
inc
inc
xchg
lcall
inc
pop
or
inc
loope
outsl
pop
test
or
add
ret
insb
xor
cmpsb
pop
push
sbb
je
hlt
cmc
stos
and
stos
inc
outsb
jp
sarb
inc
xrelease
pop
jbe
lea
inc
clc
rol
add
mov
jmp
adc
dec
cmp
xor
mov
push
xchg
in
inc
mov
sbb
clc
int3
rclb
int3
sub
sbb
cmp
ror
jl
movsb
imul
add
enter
pop
mov
add
push
enter
std
pop
aam
adc
add
out
daa
daa
add
hlt
adc
clc
out
repnz
pop
or
or
cld
xchg
or
cld
mov
mov
es
sbb
push
inc
in
sarl
or
stc
or
adc
or
push
scas
jno
nop
pop
and
or
insl
adc
or
jecxz
scas
mov
mov
cmc
jmp
mov
xor
sub
or
sbb
insb
push
and
orl
ds
mov
push
mov
pop
mov
adc
bound
sahf
fs
xchg
faddl
mov
add
inc
lret
jo
insl
push
cmp
add
lods
mov
jg
mov
sbb
pop
pop
movsb
popa
inc
loop
es
fidivrl
test
mov
mov
into
or
scas
sub
test
lods
adc
adc
lret
fistl
xor
mov
lea
push
add
or
mov
cmp
in
loopne
inc
adcb
imul
cmpsl
add
mov
mov
popa
gs
fisubrs
pop
mov
outsb
cmp
xor
fidivs
loop
imul
adc
pop
pop
mov
fdivrl
xchg
adc
enter
dec
and
xchg
ds
imul
shl
jge
dec
inc
imul
enter
cmp
pop
pop
shlb
lea
pop
das
dec
js
mov
out
imul
jmp
push
jmp
add
add
sub
popa
not
test
js
sbb
mov
add
in
and
data16
xchg
push
push
je
or
or
mov
mov
or
push
push
mov
xor
pop
xchg
adc
sarb
in
addr16
lods
or
sbb
cmp
push
sub
pop
fbld
sub
ss
imul
mov
insl
fs
fcomp
sub
js
xor
inc
loopne
mulb
fs
addr16
push
push
pop
or
std
rclb
jo
hlt
push
adc
xchg
ja
arpl
jb
cmp
les
cmp
outsl
mov
push
test
push
jns
addr16
mov
movsb
inc
sbb
adc
xor
cmp
jl
adc
mov
jl
adc
inc
or
sub
out
cmpsl
rclb
aad
outsb
mov
mov
andl
js
cmc
adc
es
jecxz
daa
fcoms
pop
cmp
cmpsb
mov
xchg
xchg
in
mov
int3
add
loopne
psubsb
pusha
push
xor
test
aam
add
je
jbe
or
sub
lcall
lds
or
mov
lods
push
fisttpl
sbb
pusha
in
es
inc
aaa
addb
lods
add
cmpsl
mov
out
stos
push
testl
push
xor
xorl
andl
inc
dec
cld
sbb
outsb
jae
mov
shlb
cmp
jae
add
sub
and
sar
adc
js
outsb
or
xor
aas
push
or
in
stos
enter
sbb
dec
aas
push
pop
leave
sbb
push
adc
std
sub
push
in
jb
outsb
push
pushf
sbb
dec
gs
mov
enter
xor
aam
aam
stos
or
scas
push
mov
xor
sub
js
adc
hlt
pop
push
jns
add
hlt
sub
and
clc
inc
push
test
cld
push
xor
fs
sbb
enter
push
dec
movsl
add
or
leave
sub
cmp
daa
es
fwait
mov
cmpsb
inc
inc
push
inc
push
dec
mov
fisubrl
add
pop
or
inc
inc
dec
das
push
enter
push
das
push
xor
mov
sbb
popa
adc
mov
push
adcl
mov
ffreep
and
or
jno
xchg
lcall
sbb
mov
ds
or
add
outsl
and
out
je
cmpsb
and
dec
add
adc
and
jnp,pt
lock
insl
bound
and
loope
mov
movsb
imull
jg
push
repnz
lret
add
jmp
call
jmp
les
bound
insb
sbb
or
jmp
mov
out
sub
inc
cmp
icebp
pop
inc
rolb
add
in
adc
mov
push
add
mov
adc
sbb
jbe
xchg
stos
jge
fs
sub
mov
loop
subl
mov
xchg
and
jno
imul
xchg
xchg
aas
add
pop
fldt
or
adc
adc
enter
fsubr
sub
or
or
das
or
push
imul
adc
lds
ftst
pusha
dec
or
dec
adc
fmulp
adc
adc
int
not
in
inc
pop
cmp
enter
inc
push
daa
pushf
sub
ds
sbb
cmp
mov
jl
pushf
repz
cmp
fsubr
inc
cld
push
lock
neg
hlt
push
sbb
pop
sahf
sbb
rorl
sub
add
adc
add
jne,pn
sarl
daa
inc
sub
loope
data16
test
inc
xchg
lock
bound
out
cmp
test
xor
push
insb
pop
outsb
pop
adc
pop
inc
wrmsr
rcrb
outsb
addps
aas
std
mov
repnz
rcrb
pop
push
out
out
repnz
adc
add
clc
pop
cmp
and
jo
mov
sbb
jne
nop
mov
pop
inc
jge
mov
mov
dec
or
xor
or
cmp
dec
imul
enter
gs
dec
cmp
mov
sahf
nop
insb
add
adc
xchg
jne
push
test
or
sbb
mov
rclb
scas
dec
cwtl
cld
pop
inc
or
add
sti
icebp
decl
push
stc
cmp
cwtl
aaa
add
orb
mov
or
inc
and
adc
xor
fsubrs
pusha
or
bound
inc
add
enter
dec
add
or
inc
cmp
sub
out
pop
rclb
orl
lock
push
or
insb
mov
pop
push
gs
mov
les
dec
dec
orb
dec
mov
rcrl
fcmovnb
loopne
mov
lock
popf
shll
js
sbbl
mov
fsubs
inc
ss
loop
push
sbb
lods
sbb
jmp
or
inc
mov
add
adc
pop
inc
ja
mov
in
pop
adc
pop
inc
insb
in
mov
sbb
test
adc
pop
and
sahf
inc
cwtl
dec
mov
mov
rclb
and
test
pushf
mov
sub
in
or
pop
negl
push
cmp
pop
pop
jne
iret
adc
inc
loopne
inc
push
jo
sbb
jbe
fucom
cmpsb
mov
xor
out
or
push
aaa
cmp
negl
scas
pop
daa
sbb
push
shlb
jl
rcrb
fisttpll
jns
enter
add
aad
movsl
push
inc
xor
out
loopne
push
pop
add
pop
or
cld
je,pt
js
sub
pop
mov
xlat
testl
xor
pop
pop
and
xor
or
fdivr
enter
push
stos
in
push
adcb
add
add
inc
add
mov
mov
jne
jg
pop
fcmovnb
jl
jne
inc
rclb
roll
loope
cltd
dec
lea
add
ja
and
iret
or
out
test
mov
adc
adc
cmpsb
pusha
push
mov
pop
sbb
and
push
test
test
push
cmp
jo
adc
fisttpll
nop
push
pop
fstps
mov
sbb
cmp
jge
xor
je
imul
sbb
and
push
xor
out
xor
or
mov
inc
mov
pusha
in
push
inc
inc
sbb
jo
iret
mov
rcrl
adc
sub
push
sahf
lea
loopne
nop
inc
sbb
iret
add
mov
call
push
scas
mov
nop
mov
test
or
push
nop
pop
pop
and
in
push
fsts
or
adc
nop
and
inc
stos
or
aaa
or
pop
or
and
adc
inc
pop
and
mov
sbb
cwtl
add
or
adc
enter
jo
sub
imul
bound
mov
in
mov
add
and
sbb
or
inc
mov
xor
inc
adc
paddb
out
push
lcall
adcb
pop
popf
aaa
mov
neg
dec
nop
mov
rorb
add
mov
jmp
cmp
add
loopne
mov
xor
xor
ss
cmp
xor
inc
mov
push
dec
mov
dec
dec
dec
dec
dec
dec
dec
xchg
das
cmpsb
dec
push
push
push
push
push
pop
pop
pop
and
repnz
fldt
mov
lahf
add
lret
add
addb
xchg
add
inc
test
rcrb
leave
xor
push
jbe
xor
cmovae
mov
or
or
sar
jl
shlb
xchg
testb
xlat
aam
scas
data16
adc
xor
mov
xor
jns
push
add
add
sub
loopne
inc
pop
and
iret
testb
xchg
push
xor
push
sbb
cmp
add
cld
xchg
mov
fadd
aas
add
daa
scas
push
xchg
push
push
loop
jge
jnp
sti
or
sbbb
adc
inc
jge
shll
cs
adc
mov
in
mov
aas
sarb
adc
xor
mov
push
cmp
or
call
inc
add
xor
mov
add
jg
jmp
js
push
sbb
or
ljmp
and
pop
jmp
inc
movl
pusha
dec
sub
adc
push
aaa
call
push
push
test
mov
jl
shl
and
or
clc
mov
pop
add
sbb
inc
xchg
mov
mov
clc
mov
push
or
cmp
sbb
inc
hlt
cmp
jle
inc
sbb
add
inc
adc
xor
and
mov
add
lret
or
push
ret
push
add
cmpsl
mov
jns
and
aad
xor
sub
into
pop
push
jg
pop
adc
cmpsl
jne
les
mov
repz
push
test
sbb
mov
pop
xchg
and
inc
jg
rorl
mov
and
dec
xor
test
loopne
ret
test
faddl
mov
dec
cs
out
and
adc
xor
int
hlt
clc
dec
cs
xor
inc
add
dec
cmp
clc
mov
xlat
rorb
pmulhuw
mov
inc
mov
movsl
jl
add
out
or
clc
subb
sarb
jmp
inc
notrack
jne
add
loop
les
cli
add
aaa
xchg
pop
push
cmp
jb
mov
cmp
add
scas
shll
sub
or
and
pop
adc
clc
and
cwtl
jmp
filds
dec
mov
cmp
js
fs
fwait
jecxz
pop
test
inc
pushl
sbb
pushl
fdivs
mov
inc
insb
pop
incl
adc
arpl
add
fisubs
mov
ds
and
dec
popa
xor
adc
xor
test
inc
imul
or
fcoms
and
ljmp
adc
jmp
push
and
or
jmp
add
sarl
add
jne
jle
mov
sub
inc
cmp
adc
out
idivb
pop
sub
xlat
cmp
enter
jmp
cmp
lods
xchg
ja
xor
dec
aaa
add
ja
dec
addr16
rcrl
xchg
pushl
cmp
outsb
and
fists
in
mov
cmp
stc
jbe
inc
imul
adc
add
cld
movsb
rcl
std
sbb
rorb
add
sbb
push
sbb
and
xorb
cmp
or
mov
mov
lock
xor
mov
pusha
xor
fcmovbe
mov
iret
inc
cmp
mov
push
iret
xchg
pop
cmp
xchg
cld
add
jl
cmp
nop
sbb
sahf
arpl
les
jl
or
cmpsb
jns
fidivs
negb
insb
jp
aas
cmp
and
gs
or
addl
lods
fwait
insl
dec
add
imul
pusha
xadd
jb
inc
ds
add
addr16
shll
dec
adc
sbb
xchg
js
push
out
and
inc
sbb
mov
xlat
lds
sbb
add
mov
fldt
aas
jl
inc
sarb
pop
je
mov
aaa
cmp
add
xlat
mov
shll
xchg
or
jbe
aas
fdivrs
inc
adc
les
dec
in
dec
xchg
cmp
jp
nop
hlt
subb
adc
shrb
mov
loope
out
in
arpl
or
add
cmp
add
jnp
cmp
aas
test
add
inc
inc
int
or
push
sbb
dec
stos
push
sbb
cmp
rcrl
daa
mov
or
sbb
push
and
push
jmp
shr
fdivs
in
add
dec
jg
cmpl
notb
mov
cmp
dec
adc
xor
mov
imulb
pop
lcall
mov
bound
mov
xchg
rorb
and
in
mov
daa
mov
inc
add
cmpb
nop
cmp
sbb
add
imul
and
pop
adc
dec
mov
inc
pusha
and
xchg
add
pop
jnp
js
xor
push
and
pop
leave
out
cmp
pusha
fnsave
push
and
es
mov
sbb
in
xchg
js
or
pop
adc
add
xorb
les
out
cmp
sub
mov
adc
shlb
fs
adc
mov
rclb
dec
or
add
cwtl
add
das
js
sbb
aas
repnz
push
das
leave
adc
xchg
pop
ss
mov
cmpsb
inc
ret
inc
fistpl
adc
dec
test
cmpsl
cmpsl
inc
or
xor
add
bound
test
ja
lahf
call
lea
or
lods
testl
fists
pop
jle
fmulp
fistpl
inc
cmp
xor
divl
int3
jb
les
nop
cwtl
dec
aam
fsubl
pop
inc
or
push
loope
pop
dec
xchg
sbb
sbb
pop
or
test
adc
shll
std
cmp
subl
aaa
in
test
mov
or
cmpsl
std
in
adc
in
push
or
push
in
jmp
or
mov
push
roll
lds
inc
mov
aaa
das
or
filds
sbb
fisttps
add
xor
sbb
pusha
ret
fs
icebp
pop
jo
pusha
push
es
mov
adc
divl
nop
adc
pop
fwait
and
adc
push
out
rorl
dec
popa
adc
mov
outsl
sarb
loopne
sub
jbe
xchg
pusha
adc
push
jl
xor
test
ss
adc
sbb
or
roll
add
mov
inc
xchg
ret
pop
jge
cmp
je
out
aas
jae
insb
mov
sbb
mov
das
subl
outsl
mulb
sbb
mov
inc
push
insb
adc
xor
adc
pop
mov
call
mov
js
sub
movb
jmp
out
xchg
jb
sahf
pop
and
add
shrb
arpl
decb
inc
push
push
fdivr
shrb
shlb
enter
push
dec
movsb
or
push
mov
int3
jo
and
or
mov
cmpsb
inc
jns
addr16
cmpsl
sub
push
jmp
pop
pop
outsl
pop
push
sub
and
int
insb
cmp
jge
aad
cmp
aas
jae
mov
cmp
xor
int3
mov
jbe
sbb
lods
mov
cmpsl
xor
cmp
pop
sbb
cmp
sarb
adcl
roll
vpcmpgtd
inc
cmp
pop
jmp
pop
cmp
loopne
dec
mov
add
add
ljmp
lahf
add
or
insb
add
add
add
xchg
mov
pop
xchg
shrl
loope
divb
mov
adc
inc
ljmp
sarb
std
add
add
xor
outsb
add
decl
andl
into
sub
sbb
xor
xor
adc
dec
mov
inc
sbb
add
movsl
addl
fidivrl
mov
adc
mov
push
rorb
mov
je
js
mov
fldl
or
inc
cmp
das
adc
popa
daa
sbbb
adc
cmp
les
inc
leave
dec
adc
mov
add
mov
mov
mov
sub
or
insb
and
mov
rcrb
repz
jno
inc
imul
inc
test
movsl
sbb
cmpsl
addr16
xor
inc
icebp
out
dec
outsl
imul
sbb
push
or
loopne
push
pop
adcl
pop
mov
call
sub
std
xor
xchg
lret
orl
sub
mov
fs
and
fs
addb
sbb
dec
inc
sub
cmpsb
rolb
mov
push
pushf
mov
sbbb
fwait
or
jg
and
cmp
and
push
push
jo
cltd
cs
mov
pop
imul
sbb
adcb
inc
adc
sbb
in
bound
xor
jecxz
imul
das
sub
outsl
push
mov
das
adc
fcoml
push
cmp
add
pop
push
or
imul
or
inc
je
call
mov
rorl
jb
and
dec
push
add
fldenv
xlat
sub
xor
dec
sbb
fisttpl
daa
or
lret
arpl
push
int3
inc
jl
sbb
sub
xlat
lret
pushf
jge,pn
mov
or
das
add
lea
xor
add
fmul
je
cmp
adc
mov
pop
fwait
ret
push
xchg
add
aam
push
sbb
add
add
stos
jne
push
rorb
adc
fmull
or
int3
push
jle
outsl
sbb
sbb
fmuls
push
hlt
add
aam
jbe
aam
sbb
fidivrs
jo
aaa
ret
jle
add
xor
jle
das
pop
xchg
mov
repnz
push
inc
call
jmp
or
sub
in
mov
rep
test
lock
push
and
out
loop
pusha
adc
add
add
fcoms
adc
ret
mov
inc
dec
arpl
add
mov
fmuls
jmp
and
sub
cld
test
jne
sbb
and
mov
push
movb
lods
shl
xchg
sbb
fisubl
inc
mov
insb
pop
cmc
outsb
jl
js
mov
jo
int
bound
inc
jle
movl
xor
mov
push
cmp
dec
mov
jno
ljmp
int
into
lods
into
push
push
ret
mov
mov
sbb
jnp
push
cmp
decl
inc
in
mov
push
fmull
mov
adc
popa
xor
push
add
push
inc
inc
inc
push
stos
push
sub
dec
loopne
sub
jnp
dec
xor
stc
sub
fstpt
cli
add
aad
dec
in
sub
xchg
or
cmp
mov
fildl
movsl
outsl
int
fildl
mov
mov
daa
test
leave
pop
js
mov
sarb
rclb
sub
sub
notb
sbb
cwtl
jb
add
aaa
bound
arpl
and
movsb
test
pushf
aaa
je
inc
or
dec
dec
jl
mov
jnp
fcom
int
and
sub
push
or
push
stos
outsb
mov
mov
dec
xchg
ljmp
cwtl
out
add
sub
jbe
xor
xchg
ljmp
lock
fidivrs
push
push
lret
or
or
push
cwtl
stos
loopne
inc
and
pop
pop
mov
dec
pop
push
push
movsb
mov
pop
iret
push
sti
roll
or
push
rolb
jne
add
xchg
lahf
jp
orl
push
mov
aas
push
jg
iret
mov
jl
enter
push
push
loop
push
jge
gs
fsubs
inc
sbb
andl
jbe
jmp
rolb
adc
sub
adc
push
sti
mov
mov
mov
mov
jb
add
jp
pop
inc
and
add
mov
movsb
repz
xor
inc
add
push
fistpll
push
and
push
andl
out
fsubs
xchg
rcl
inc
add
add
test
mov
and
add
adc
and
dec
or
call
cmpxchg
lods
rolb
mov
cmp
sbb
paddsw
sbb
add
inc
test
std
int
mov
cmc
ret
inc
inc
sbb
sbb
mov
or
into
inc
mov
adc
movsb
and
push
inc
xchg
jns
pop
sbb
dec
aas
adc
jecxz
or
adc
rcrl
or
test
dec
imul
lock
mov
xor
fsubr
sbb
dec
sbb
inc
popa
das
call
inc
sub
sub
ret
mov
or
xor
xchg
and
inc
cmp
xchg
cmp
jmp
xor
aas
test
or
xchg
push
jo
add
cwtl
adc
jp
imul
subl
cltd
mov
es
lock
nop
out
roll
loopne
fdivl
cwtl
rcll
in
push
push
sbb
push
sbb
sbb
sbb
mov
mov
sub
xchg
add
jns
mov
cmp
mov
sub
mov
adc
mov
and
imul
fsubrs
in
mov
or
in
and
lds
imul
data16
pop
push
push
inc
adc
add
test
std
fsubrs
xor
xorl
cmp
mov
dec
jg
clc
jg
cltd
inc
sbb
sbb
lahf
fwait
dec
es
adc
or
and
jno
sub
dec
sti
or
inc
push
push
sub
inc
pop
mov
rcl
inc
aad
shlb
repz
or
push
pushw
add
inc
test
arpl
and
add
ss
jp
dec
cmc
push
and
dec
cmp
sbb
sub
gs
sbb
mov
jge
and
xor
faddl
fwait
into
fsubrl
and
xchg
adc
out
repz
fucomi
imul
loopne
repnz
jnp
aad
or
inc
outsl
or
shll
jmp
jb
mov
aas
leave
fmuls
cmpsl
push
lock
dec
add
inc
push
jns
add
mov
mov
mov
inc
sub
fstpt
push
jae
xchg
dec
je
fcomp
in
inc
xchg
jl
lock
scas
loopne
lock
iret
sarb
cs
and
pop
mov
and
ja
push
adc
gs
push
bound
lock
sub
dec
add
jne
ret
imul
mov
push
ret
jne
and
add
clc
pop
push
xchg
xor
loope
dec
aas
jae
bound
popa
adc
call
pop
loopne
push
mov
jns
and
push
pusha
xchg
mov
arpl
test
or
xor
pop
adc
add
pop
cmp
daa
call
sbb
test
dec
orb
test
mov
sbb
and
jmp
dec
cmp
sbb
jne
push
and
and
cltd
aad
in
nop
outsb
inc
sbb
cmp
push
scas
xchg
add
adc
sub
adcb
push
pop
jl
sub
jno
push
inc
and
repnz
cmp
enter
lods
nop
sub
dec
inc
push
int3
call
mov
sbbb
dec
loopne
xchg
leave
stos
and
dec
xchg
dec
addb
push
dec
adc
inc
movl
shlb
call
push
or
ljmp
mov
inc
inc
and
out
decl
push
or
enter
adcl
das
and
les
pop
sbb
push
push
lock
int3
pop
sbb
and
sar
push
xchg
pop
lods
push
sub
das
xchg
mov
cmp
add
and
test
dec
mov
pop
test
cs
xchg
loop
daa
mov
mov
jo
test
mov
push
fwait
dec
or
stos
cmp
loope
aad
movsl
je
stos
pop
inc
insb
dec
popa
mov
and
jno
cmpb
std
jb
scas
hlt
sbb
add
mov
xchg
add
mov
jge
insl
movsb
sbb
cmp
and
cmp
pop
pop
dec
call
in
call
cltd
inc
push
int
add
das
out
push
insb
lods
int
xor
repz
add
add
pop
mov
or
shl
cwtl
shll
sbb
and
test
dec
and
add
cmp
xchg
and
or
das
stc
and
jmp
aas
adc
scas
jge
sub
ss
sbb
out
and
sub
incb
ret
dec
pop
mov
jmp
push
in
pop
stos
add
mov
fbstp
jne
setne
sbb
test
lea
in
pop
rclb
rorl
cmp
cmp
imul
sub
adc
nop
xchg
adc
mov
gs
mov
int
mov
pop
hlt
jle
sbb
sbb
lock
rcl
xchg
mov
lcall
or
push
lock
clc
insl
or
pop
or
test
or
xor
jge
hlt
xchg
loopne
sub
jb
icebp
mov
ret
call
mov
loopne
fistps
add
movsl
inc
add
push
push
or
push
arpl
movl
inc
mov
adc
daa
aas
add
addb
add
add
cld
nop
loope
jg
insl
sbb
dec
lahf
and
dec
mov
fsubrs
cmp
fcom
pop
ret
xor
mov
pusha
xchg
pop
rol
pusha
mov
push
test
pop
sub
rorb
or
adc
add
xlat
dec
loopne
jl
pushf
inc
push
and
and
sbb
add
int3
addr16
add
in
xor
jg
call
enter
xor
das
in
dec
add
jo
fdivl
pop
mov
sub
inc
add
add
cmp
in
xchg
shlb
fcompl
pop
mov
or
add
inc
pop
pop
sub
xorl
loopne
aam
loopw
dec
call
dec
packssdw
cmpsl
fists
pop
lret
orb
and
hlt
pop
push
mov
data16
fstl
jno
les
pop
orl
pop
jg
jne
imul
sbb
and
push
rorb
xchg
or
cmp
lea
loopne
dec
add
jecxz
and
gs
sbb
in
mov
push
sub
jo
lcall
jo
in
int3
arpl
push
rcrl
inc
sub
mov
pop
mov
sbb
leave
mov
xor
xchg
adc
scas
test
or
add
outsb
pop
lods
sti
dec
jecxz
xchg
sahf
lods
ret
sub
enter
pop
fs
sub
push
add
add
lock
add
fildl
jecxz
sbb
jecxz
les
in
cmp
sahf
and
push
dec
cmpsl
add
add
or
mov
fidivrs
les
dec
cmovl
jecxz
jae
hlt
cmp
lock
ljmp
dec
lret
in
mov
loop
cmp
xor
or
xchg
cmp
cmpsb
adc
je
mov
mov
pushl
or
push
add
inc
jne
adc
out
orl
xchg
adc
repnz
subb
rolb
cmpsl
inc
or
cmp
je
cmp
iret
lcall
adc
test
jmp
adcb
stos
add
mov
insb
outsl
lahf
xchg
aas
je
mov
adc
arpl
push
fsubrs
clc
mov
push
add
and
ja
inc
inc
jmp
mov
cwtl
jbe
cs
cltd
mov
or
mov
dec
push
adc
pop
cmp
sub
sub
ret
outsb
out
adc
push
ds
inc
push
pop
pop
or
or
enter
adcl
inc
jl
out
les
sbb
jg
pusha
or
mov
add
or
or
in
lret
roll
dec
xor
mov
insb
inc
dec
add
daa
add
or
or
inc
inc
adc
and
sub
ror
xlat
dec
popa
inc
addr16
in
push
mov
cmpsl
cmp
je
xor
pop
or
add
fs
mov
gs
movsl
and
cmp
out
daa
push
cmp
bound
test
or
pop
lods
push
daa
jle
mov
fnstenv
and
enter
sbb
pusha
xor
dec
push
fists
call
dec
add
aad
roll
jbe
mov
dec
imul
aas
push
push
xlat
adc
data16
fildl
outsb
inc
pushf
mov
sahf
inc
lret
pop
movl
push
js
shr
and
and
adc
push
out
push
push
sbb
push
rclb
inc
or
popf
or
jmp
cmpb
mov
gs
sahf
cmp
xor
xchg
mov
add
jne
xor
inc
mov
mov
pop
popa
cmpw
add
jb
enter
cmp
or
orl
jmp
xor
xor
push
cli
adc
notb
sbb
push
adc
dec
mov
pop
inc
lods
enter
inc
hlt
mov
popa
ds
adc
mov
xor
clc
xchg
mov
mov
call
addr16
lcall
push
cwtl
xorl
adc
ret
push
in
lock
sar
xchg
jmp
push
push
jge
clc
mov
jnp
std
cmp
divl
sbb
rcr
addr16
outsb
or
push
pop
fsubr
push
xchg
inc
dec
adc
popf
cltd
inc
fs
pop
xchg
push
sahf
stc
inc
jmp
add
pop
mov
notl
call
cmp
or
mov
cmp
je
mov
sarl
imul
xchg
addr16
mov
or
and
pop
mov
xchg
inc
mov
scas
inc
mov
mov
or
clc
addb
jo
xlat
mov
pop
xchg
aaa
enter
mov
and
xor
lcall
mov
mov
xlat
ja
es
push
inc
lret
push
cmp
je
mov
cmp
jnp
ret
fbstp
fistpl
mov
shlb
push
fsubs
push
loop
lret
pop
xor
ds
xor
xor
fs
add
add
or
cli
jne
mov
sub
push
loopne
mov
jnp
mov
adc
jb
inc
pop
mov
jne
std
adc
call
pop
fimull
ror
sub
jbe
and
xor
mov
cmp
ja
add
mov
xchg
or
adc
cli
inc
inc
mov
push
adc
cmc
imul
nop
loopne
decb
dec
dec
fmuls
cltd
pop
in
test
stc
aas
and
and
cs
mov
cmp
in
mov
adc
pop
adc
push
push
cmp
add
out
mov
repz
dec
adc
out
adc
pop
add
fimuls
in
push
pushl
lds
sub
cmp
pop
add
mov
outsl
lcall
movsl
or
dec
sub
push
adc
jno
cmp
pop
push
xor
push
insb
sub
push
jl
push
js
bnd
sbb
inc
mov
adc
shl
outsb
addb
dec
pop
or
mov
add
js
mov
push
push
lds
push
lds
push
mov
xchg
inc
loope
cmp
pop
xor
dec
test
insb
sbb
sbb
add
dec
jmp
rolb
cmpsl
add
xor
in
cmp
fnsave
inc
inc
sub
push
sbb
pop
int
pusha
mov
cmp
rolb
scas
call
mov
or
fbld
imul
sub
sub
in
push
xor
dec
test
push
ss
test
adc
ret
inc
dec
jne
and
mov
flds
imul
cs
xor
xchg
xor
mov
mov
insb
add
call
add
jge
or
in
push
xorl
or
nop
sbb
push
aaa
pushl
dec
pop
mov
adc
push
xchg
adc
cwtl
mov
or
and
push
xchg
push
add
mov
jg
call
iret
das
sub
mov
xchg
pushf
loope
xchg
sbb
fiaddl
mov
lock
inc
pop
int3
jne
rclb
dec
aas
xor
add
mov
std
cli
hlt
push
cmp
add
aas
or
mov
sbbl
xor
push
int3
mov
pushf
es
or
mov
ds
push
cmp
push
inc
pop
ss
rol
inc
sahf
int3
pop
mov
les
push
nop
enter
or
lods
mov
pop
dec
xor
outsb
je
mov
out
jmp
sbb
aad
aaa
pop
je
push
add
pop
mov
test
xor
cwtl
mov
pop
sub
mov
push
sarl
add
stos
inc
es
shlb
push
aam
mov
fnstcw
cs
jp
inc
ret
lahf
loopne
xor
mov
and
fs
pusha
mov
adc
xlat
inc
pop
adc
js
sarl
outsb
mov
fwait
shlb
xor
decl
ja
push
push
and
push
adc
sbb
cli
imul
and
fs
xchg
or
inc
fneni(8087
lock
jle
add
repnz
cmp
adc
rcll
push
fcoms
aad
dec
pop
xchg
jbe
mov
adc
pop
add
dec
and
cmpsb
rcrl
push
jo
rorl
jmp
cld
mov
int
lds
jp
sbb
add
arpl
pusha
sbb
outsb
lret
mov
cli
ja
pop
push
push
sub
and
ds
xchg
xor
stos
and
push
lods
sub
ja
sbb
pop
push
jmp
dec
pusha
mov
adc
push
outsb
sti
push
aam
sub
daa
in
cmp
loopne
movsb
mov
mov
stos
movsb
test
sbb
or
and
fidivrl
add
push
cmp
cmp
xchg
dec
mov
add
cmpsb
movsb
sar
fistl
and
sti
pop
add
adc
jmp
cmpsl
sub
mov
cmp
sarl
adc
out
iret
push
fisubl
ret
add
push
mov
inc
push
ret
inc
cmpl
push
cmpb
movb
mov
inc
mov
or
sbb
add
pushf
inc
outsb
loope
movsb
push
pop
jo
xor
jle
aaa
dec
xchg
sbb
test
adc
dec
inc
jne
cmp
idivb
leave
push
cmp
or
and
sub
mov
xchg
outsl
cmpsb
pop
cmp
pop
mov
adc
inc
push
adc
add
les
push
cmc
sub
je
std
out
mov
pop
jo
scas
mov
pop
inc
je
movb
iret
adc
mov
mov
inc
adc
cmp
sub
mov
loopne
or
inc
adc
xorb
call
cmp
popa
add
pop
push
adc
pop
push
mov
xlat
imul
adc
ret
stc
daa
sarb
pushf
pop
push
outsb
push
mov
fcomps
int3
inc
push
inc
ja
mov
push
mov
pop
dec
es
xchg
jge
enter
hlt
inc
lret
sub
gs
lock
ljmp
pusha
xchg
pop
hlt
daa
push
stos
call
gs
mov
push
sahf
mov
pop
nop
jmp
pop
push
fbstp
pop
cwtl
and
cmpl
adcl
in
lcall
jmp
sbb
mov
sbb
xor
or
push
and
mov
mov
jmp
add
sbb
pop
mov
push
lock
cmp
aam
inc
cmpl
out
cmp
dec
ja
pop
ja
and
pop
fdivr
imul
and
and
push
adc
rorb
je
call
movsb
outsl
or
adc
dec
xchg
push
enter
cmp
lock
aas
cmp
mov
ja
test
cmp
fstpl
out
add
adc
sub
sub
or
pop
jo
inc
xor
jmp
inc
addl
icebp
cld
sub
ret
inc
addr16
ret
mov
add
inc
inc
cmovp
or
add
adc
divl
ljmp
aas
mov
add
int
jmp
hlt
dec
lea
std
xor
adc
lods
fwait
push
sarb
mov
sbb
or
rcrl
popf
mov
inc
lret
push
sahf
fildl
mov
call
and
movsb
and
loopne
add
sete
inc
lcall
and
push
ss
xor
cmp
arpl
test
dec
xor
push
pop
lods
pop
add
in
mov
jmp
dec
fcompl
push
pop
sbb
rcrl
ja
and
ja
mov
bound
gs
js
mov
je
ss
daa
or
and
js
pop
cmp
sbb
shlb
jp
pusha
test
call
xchg
xor
loope
mov
cmp
rclb
add
bound
nop
and
and
and
fwait
out
or
je
subb
mov
or
bound
hlt
xchg
jmp
out
shll
ficoms
ret
push
add
add
pop
scas
nop
shlb
xor
xlat
cmpsl
insl
sub
push
add
add
inc
js
push
outsb
mov
sbb
cmpsb
cli
lds
push
cli
cmp
xchg
mov
setp
imul
mov
add
lea
mov
and
gs
mov
add
cs
jp
in
sub
out
sub
inc
or
add
dec
sbb
push
mov
je
pop
sub
dec
mov
iret
or
insb
inc
xchg
push
inc
push
add
xchg
push
push
in
add
fs
shlb
bound
push
cltd
test
jae
ljmp
jne
jmp
mov
push
cli
bound
movsb
pop
inc
int
push
add
xchg
out
cwtl
scas
arpl
popf
pop
inc
addr16
shrb
stc
pop
and
repz
xor
mov
popa
test
xchg
ret
xor
xor
xlat
data16
les
push
push
shrb
jae
jnp
xchg
call
xor
adc
xchg
fdivs
push
mov
xorb
add
push
sub
add
push
inc
mov
xchg
fcomps
push
xor
xor
imulb
adc
cli
ss
je
xor
pop
shrb
inc
lcall
mov
cmp
mov
cmp
add
rol
ret
mov
inc
ret
aam
sti
std
mov
sbb
sub
or
orb
push
test
push
mov
add
mov
adc
push
lahf
shrb
push
mov
add
movb
inc
push
add
sub
add
push
sub
scas
add
or
pop
mov
mov
rorl
mov
jecxz
mov
inc
mov
sbb
push
mov
sbb
sub
pop
cmp
cmp
or
jp
xchg
jge
bound
push
cmp
pop
mov
sarb
add
pop
insb
mov
fisttps
subl
js
je
in
and
jge
push
push
adc
mov
and
ja
loope
ret
insb
mov
mov
pop
mov
test
mov
inc
xchg
out
rcrl
out
jae
mov
lock
dec
sbb
push
cmpb
clc
or
mov
mov
daa
or
sub
dec
pop
mov
and
jp,pn
insb
outsb
pop
mov
push
mov
adc
jo
rclb
cmp
pop
js
outsl
dec
push
add
push
dec
mov
pop
add
nop
inc
dec
inc
sbbl
dec
mov
dec
in
jno
pop
psrad
insl
add
ja
push
rorb
movlps
jno
aas
mov
adc
int
jnp
das
sbb
xchg
test
je
push
ja
push
push
or
or
mov
xchg
inc
clc
std
add
lock
xor
test
mov
adc
push
cmp
push
pop
push
xor
fcompl
and
adc
sub
xchg
inc
clc
pop
roll
push
clc
jmp
sbb
or
mov
fsubrs
or
push
xchg
sarl
lea
lret
data16
cmpsb
pop
aas
dec
divl
leave
hlt
leave
xor
jp,pt
das
pop
hlt
pop
xchg
movsb
lea
add
push
in
xchg
sbb
test
jp
add
sub
mov
mov
and
sarl
pop
jo
jecxz
ret
mov
setnp
adcb
add
xchg
xor
or
in
or
sbb
inc
adc
sub
js
add
scas
imul
aas
out
or
and
cmp
faddl
inc
dec
sbb
mov
jle
movsb
jmp
sbb
lock
add
test
and
adc
xorb
sarb
cmp
jne
data16
cmp
in
lret
sbbb
das
jb
pop
adc
jmp
and
lcall
or
inc
rorb
jmp
test
xor
adc
pushf
out
xor
push
in
aaa
in
mov
or
mov
pop
aam
rclb
push
sbb
push
mov
ja
clc
dec
xor
inc
xchg
inc
jo
add
xchg
mov
dec
lcall
add
push
shl
jnp
dec
or
call
sbb
adc
dec
arpl
imul
dec
or
inc
inc
in
push
daa
inc
inc
andb
add
pop
xchg
lock
js
sbb
mov
cmpsl
pop
sbb
pushf
hlt
bsf
pop
inc
loope
outsb
push
sbb
insb
lahf
sarl
jmp
push
pusha
cmpsb
dec
adc
push
ljmp
movsb
xor
inc
cmp
mov
pop
sbbb
inc
inc
pop
cmp
femms
stos
xor
popa
adc
movsb
inc
popa
scas
imul
jl
push
mov
push
mov
arpl
add
in
cmp
ljmp
andl
pusha
or
sbb
lock
imul
or
inc
sbb
fstpl
bound
nop
packssdw
les
dec
push
or
mov
shl
cmp
push
dec
cmova
add
lahf
adc
pop
lcall
imul
lahf
xchg
mov
insb
add
jp
fisubrl
and
call
mov
mov
aas
xchg
daa
sub
jle
cmp
mov
inc
sub
je
inc
addl
fistpl
das
sub
ret
jl
call
mov
add
enter
mov
or
mov
ds
xor
loop
testb
negb
adc
icebp
jl
setb
call
sub
push
pop
push
js
inc
adc
cmp
and
mov
repz
jecxz
test
mov
shr
or
pop
sub
rcrb
sbb
lret
dec
adc
and
dec
ja
mov
ret
cld
movb
mov
xor
loopne
inc
or
sub
shl
and
or
and
mov
enter
inc
or
pop
jge
jl
mov
pop
dec
add
xor
push
or
sub
testb
mov
push
sbb
test
rorl
icebp
xor
or
xchg
imul
je
pop
sbb
xor
test
sub
sahf
and
and
dec
insb
inc
sbb
addl
mov
cmp
sub
inc
sbb
movsl
in
push
lea
or
jbe
jecxz
dec
nop
mov
pushf
pop
mov
enter
out
ficomps
popa
shlb
call
adc
jo
inc
bnd
fdivr
jmp
add
inc
or
gs
pusha
mov
pop
inc
lahf
pop
dec
mov
cmp
and
push
in
or
mov
inc
fmuls
add
inc
std
cmp
sub
inc
in
loope
xor
dec
pop
or
and
imul
jne,pt
or
ljmp
dec
push
out
add
movsl
mov
cmc
out
sbb
jmp
push
lds
inc
insb
sub
les
orb
es
pop
or
mov
push
push
or
cmp
pop
xchg
jp
sbb
mov
mov
xor
add
mov
add
movl
ret
lcall
cmpsb
cmp
jge
mov
inc
popa
add
jl
mov
mov
js
add
cmpsl
popa
je
dec
mov
add
neg
dec
inc
sbb
sbb
or
je
ja
sub
incb
lahf
sbb
insb
fbld
cmpb
pop
xor
pop
clc
nop
out
adc
xchg
adc
das
iret
divl
loop
cltd
jns
test
movsb
cwtl
sub
or
xor
or
scas
or
pop
push
adc
adc
ret
and
out
inc
ret
pop
aam
sbb
push
fbstp
or
in
xor
loopne
xor
adc
cmovge
push
call
pop
push
addr16
mov
mov
or
dec
sub
sub
enter
mov
sbb
shl
or
scas
imul
add
ror
and
pop
js
rcrb
iret
adc
lsl
pop
dec
pop
lcall
push
cwtl
ret
sbb
jmp
sub
fimull
push
sbb
fs
nop
jo
inc
pop
jmp
je
inc
mov
push
dec
xchg
inc
xchg
xor
adc
sub
xlat
sbb
cmp
aam
jbe
push
push
add
mov
fwait
dec
sti
sbb
jmp
into
and
je
add
fadds
pop
addb
sub
pop
sbb
jmp
rorb
dec
pop
mov
sbb
sub
daa
push
and
cmpl
or
loop
cmp
stos
lods
out
push
inc
xor
les
xlat
fcoms
gs
mov
sub
dec
push
sub
or
outsl
ret
sub
cmp
setge
test
pop
shl
inc
or
sub
lret
add
sub
ffree
movsl
push
push
add
es
or
jo
add
test
push
sbb
xor
test
inc
jle
mov
mov
xor
mov
loopne
rcrl
fstl
adc
and
std
inc
adc
es
push
push
ret
dec
stos
sbb
push
lds
inc
jbe
lret
pop
xor
adc
mov
or
test
in
ljmp
jge
ret
xorl
dec
push
lock
add
add
ja
and
and
mov
sahf
mov
in
nop
scas
cmp
les
mov
mov
call
enter
adc
loopne
jp
nop
xor
push
mov
push
adc
xor
push
jl
iret
repz
shlb
int3
and
aam
mov
mov
shrb
jo
out
dec
dec
mov
scas
pop
fabs
mov
mov
add
or
jne
mov
fsubs
adc
xor
xor
mov
andl
testb
insb
adc
shr
jo
nop
int3
aaa
pop
push
out
fildl
add
into
in
add
das
or
sbb
mov
push
outsl
inc
lods
xchg
popa
ret
popa
inc
add
mov
and
popl
fldl
rcrb
gs
sbb
decb
gs
outsl
sub
push
add
mov
push
lcall
mov
movsb
je
fdivs
testl
int3
or
adc
mov
mov
sub
or
sbb
inc
ljmp
inc
or
mov
inc
mov
pusha
mov
mov
cmp
push
test
sbb
cmp
fisttpll
cmp
loopne
mov
mov
pop
adc
sbb
dec
lods
add
and
xchg
mov
push
sbb
jg
lea
or
movsb
out
mov
lahf
pop
leave
xchg
adc
js
or
mov
js,pt
mov
push
insb
xor
sub
out
xor
test
add
push
add
cmova
push
pushf
fldenv
pop
sub
mov
aam
mov
lea
inc
mov
fs
mov
cs
mov
mov
inc
and
cli
push
test
push
push
in
push
mov
dec
nop
movl
xchg
mov
lock
insb
inc
test
push
xchg
jg
hlt
inc
lock
jle
rorl
imul
in
pop
cmp
test
rcll
xchg
adc
dec
in
roll
pop
jns
and
inc
pusha
repz
ds
inc
inc
sub
dec
adc
adc
xchg
pop
add
lcall
pop
add
xchg
or
xor
lock
mov
mov
xchg
inc
sbb
popa
ret
insb
mov
pop
adc
xor
mov
or
xchg
sbb
push
fstpt
fistps
or
inc
or
fs
xchg
test
or
scas
sub
jae
xchg
ja
mov
xchg
or
flds
data16
scas
cmpsl
int
pop
cmp
or
adc
loopne
sbb
paddusb
push
dec
stc
cs
imul
out
adc
mov
jle
sbb
add
or
push
xchg
lcall
add
cmp
xchg
pop
mov
pop
mov
mov
pusha
or
fldl
test
jae
jns
cwtl
sbb
mov
leave
push
rcrb
aam
lds
cmpsb
in
jg
add
add
adc
pop
dec
shrb
push
jge
pop
fcoms
enter
loope
or
sti
push
dec
movl
test
inc
adc
inc
ret
jl
inc
pushf
add
cmp
xor
hlt
js
pop
rcrb
push
or
inc
adc
loope
or
mov
pop
xchg
imul
adc
add
mov
jbe
xchg
cmp
clc
and
xchg
dec
xchg
shl
adc
push
and
roll
ret
push
or
negb
or
xchg
movl
xor
xchg
xchg
or
fsubrl
aaa
mov
dec
cmp
ss
adc
push
mov
mov
adc
pop
jo
and
push
inc
outsb
xchg
in
fadd
seto
andb
mov
push
in
subl
lds
fs
fisttpll
sub
movl
xor
je
mov
xchg
or
das
add
and
leave
inc
add
or
mov
or
loope
popa
add
arpl
sub
ret
sub
push
and
pop
stos
mov
pop
das
sub
faddl
lods
fdivs
xchg
outsb
lods
out
bswap
inc
sub
inc
fxch
scas
xchg
adc
addw
iret
pop
dec
fs
fcoms
push
cmp
mov
pop
cmp
shll
enter
mov
inc
inc
ja
add
stc
push
xlat
and
aas
loope
lcall
adc
xchg
jno
or
xor
xchg
int
push
mov
sub
ja
add
push
sbb
rcll
sbb
add
pop
adc
adc
cmp
pop
and
call
psubusb
inc
or
je
mov
add
bswap
je
dec
sub
lcall
dec
or
inc
movsb
or
push
xorb
imul
mov
dec
push
mov
cmp
inc
je
pop
loope
push
dec
fcompl
mov
pop
dec
xor
pop
push
fsubrs
inc
fwait
iret
out
addl
notl
jbe
dec
adc
push
outsb
inc
lea
or
movsl
test
xlat
js
gs
fistps
push
in
sub
sbb
sbb
loope
mov
mov
pushf
paddusb
lods
cmp
add
xchg
mov
lret
and
xor
inc
loopne
xor
cmpsb
pusha
mov
adc
inc
ret
mov
test
and
add
mov
lods
xlat
sbb
pop
lret
xlat
sbbl
or
int
dec
sub
push
in
push
mov
fists
addb
gs
push
mov
and
push
mov
mov
and
sbb
jmp
jo
loope
addr16
and
adc
insb
rol
mov
popa
inc
add
stos
or
sub
add
in
adc
mov
movhps
mov
orb
repz
fsubr
adc
scas
roll
mov
sub
mov
mov
mov
dec
mov
push
ds
bound
nop
add
xchg
cmp
cmp
push
inc
inc
sbb
ret
push
test
pop
lcall
mov
add
add
add
inc
add
rorb
and
add
add
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
inc
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
jg
mov
xlat
call
call
call
call
call
call
clc
das
mov
call
dec
mov
dec
dec
dec
dec
add
leave
dec
out
sahf
out
imul
in
pushf
imul
sbb
push
js
pop
in
cmp
repz
and
mov
cmpsb
repnz
sub
pop
imull
cmp
lock
test
repz
repz
or
pop
jecxz
push
and
xor
fs
sbb
fistl
lcall
stc
pop
add
lcall
adc
aam
sahf
data16
push
push
push
sub
je
out
cmp
and
xor
pushf
in
hlt
lods
inc
pop
lahf
cld
cwtl
push
mov
add
push
lock
lods
pop
scas
hlt
in
andb
mov
inc
ss
fisubl
cld
ljmp
lcall
ss
out
sbb
adc
cmp
push
inc
ret
cmpb
es
mov
adc
mov
or
in
adc
cmp
sub
push
adcl
and
mov
popa
push
dec
push
push
adc
inc
pop
bnd
inc
pushf
add
inc
sahf
into
in
dec
rolb
adc
dec
add
cmp
and
dec
jl
ljmp
cmpsl
shrl
mov
daa
or
les
or
or
movsb
loopne
pop
repnz
orl
and
mov
mov
or
or
ror
test
shrb
pop
mov
adc
xor
scas
xor
movsb
mov
iret
sub
mov
pop
pop
adc
inc
sub
adc
push
pop
or
mov
pop
xor
mov
test
fsubs
jbe
push
call
icebp
and
add
add
outsb
or
sub
add
sub
call
jns
sbb
test
das
dec
dec
mov
cmp
pop
orl
add
add
xchg
faddl
adc
xor
sbb
mov
movsb
dec
aaa
ret
iret
adc
outsw
adc
mov
mov
movsl
mov
pop
push
in
je
les
and
add
and
add
mov
xor
push
adc
mov
cltd
jbe
push
pop
nop
cmpsl
ret
stos
enter
inc
dec
push
lahf
inc
cmpb
inc
dec
adc
inc
leave
cmp
inc
or
movl
movsb
push
mov
add
adc
add
mov
push
xchg
dec
adc
add
add
add
add
add
sub
mov
add
in
add
jp
adc
sbb
sub
or
xchg
add
aaa
mov
mov
mov
or
dec
mov
mov
mov
jg
stos
lock
mov
or
and
mov
sub
pushl
add
sub
dec
mov
mov
mov
mov
dec
pop
movsb
push
js
mov
add
decl
inc
inc
inc
mov
mov
mov
inc
pop
test
mov
mov
adc
pushl
sbb
pop
dec
repz
cmpsl
push
mov
push
cmpsl
stc
cmp
js
rclb
repz
add
les
jl
dec
lock
sarb
dec
pop
mov
adc
push
push
push
xor
out
cmp
xor
pop
mov
out
hlt
push
add
sbb
push
cmp
repz
and
pop
lods
shlb
jns
rcr
xor
push
iret
push
add
push
pop
pushf
mov
or
test
clc
push
push
cmp
mov
mov
in
push
hlt
cld
idivl
sti
cmp
popa
push
jo
sbb
mov
pop
out
jnp
jo
insb
xor
pushw
push
push
fdiv
scas
xchg
push
shlb
je
mov
cs
push
sahf
push
mov
out
cmp
mov
and
mov
test
inc
outsb
jbe
inc
jnp
mov
push
push
push
or
add
sti
push
setg
call
outsb
add
stc
add
shrl
fisubl
push
and
outsb
jle
add
pop
and
lock
aaa
enter
fisubs
adc
xchg
add
xchg
loopne
mov
call
jge
adc
adc
sbb
stos
bound
das
test
pusha
sar
pop
sub
in
stos
or
lods
enter
inc
enter
pop
mov
addb
sbb
mov
mov
xlat
mov
push
lods
ret
rorl
js
je
cmpsb
pop
rorl
pop
scas
insb
call
pushw
sbb
inc
clc
mov
adc
mov
jmp
xchg
add
out
imul
cmpb
es
out
jge
cmp
iret
adc
in
lret
in
adc
addb
mov
mov
icebp
loopne
aas
shlb
ss
loop
add
mov
mov
ds
and
jg
aam
and
mov
pop
vpcomub
and
call
push
or
or
or
adc
orb
sub
add
leave
xor
pushf
jl
fwait
gs
mov
adc
loopne
push
push
test
scas
out
out
imul
sbb
shl
jns
xor
dec
pop
push
cmp
mov
js
je
inc
pop
xor
mov
cmp
inc
scas
pop
cmpb
pop
dec
push
adc
nop
xchg
shrl
test
pusha
xchg
jo
fwait
adc
in
jae
push
pushf
mov
in
lahf
or
mov
andb
mov
push
cmpsl
es
lods
xchg
sub
push
inc
push
das
push
mov
outsb
mov
aas
xor
add
add
fwait
clc
insl
ficoml
add
cld
daa
insl
push
jmp
dec
adc
sbb
pop
lea
cmovns
outsb
adc
jns
addr16
ds
xor
fisttps
push
dec
xor
daa
ljmp
hlt
and
pop
sbb
fs
or
push
cli
es
dec
vmread
adc
inc
mov
push
push
jb
dec
inc
mov
jl
movl
and
xchg
das
xchg
jb
gs
push
push
cmc
pusha
shrl
jmp
cmp
adc
jo
imul
mov
ja
fists
jno
xor
jne
xor
dec
insb
pop
jl
xor
inc
cmp
adc
inc
mov
call
sbb
mov
add
or
sbb
leave
bound
jo
arpl
into
inc
jle
iret
sbb
jns
iret
adc
hlt
pop
push
push
xchg
push
jno
inc
out
and
daa
rcrb
inc
fidivs
add
dec
inc
psraw
popa
pop
or
nop
insl
push
dec
add
push
xchg
daa
in
cmp
mov
rorl
xchg
daa
push
jo
je
xchg
or
inc
pop
mov
push
or
adc
dec
outsl
or
mov
rclb
imul
ja
loopne
cmpsl
mov
popa
and
daa
add
cmpsl
push
jmp
adc
push
sub
cmp
in
mov
xor
dec
outsl
dec
or
mov
push
push
mov
inc
cwtl
mov
nop
pop
dec
adc
or
sub
lea
inc
jmp
xorb
inc
lret
dec
in
add
inc
mov
add
lea
add
test
dec
movsl
movsb
adc
pop
mov
add
push
int
cmp
arpl
and
imul
fcmovne
sub
push
dec
inc
or
or
adc
sub
pop
pop
xor
rclb
add
mov
xchg
scas
mov
stos
mov
arpl
mov
mov
pop
sbb
mov
add
push
pushl
mov
addr16
or
test
test
xchg
jbe
sbb
ds
jg
mov
mov
pop
inc
push
dec
fnsave
inc
arpl
in
or
mov
das
cmp
sbb
repz
or
mov
repnz
push
insl
arpl
lock
xor
mov
stos
add
addr16
rclb
mov
xor
cmp
jmp
test
mov
push
pushf
roll
cmp
lret
repnz
xlat
or
pop
mov
scas
aam
sub
xlat
aam
inc
cmp
int3
dec
dec
jne
shl
adcl
dec
dec
add
es
adc
pop
sbb
xchg
shr
add
cmp
test
test
xchg
dec
cmp
sub
jbe
jmp
mov
or
or
adc
imul
imul
setp
scas
push
push
ret
push
push
jg
andb
movl
pop
data16
mov
or
ja
or
add
int
jg
je
sub
and
arpl
mov
mov
sub
std
dec
je
and
mov
movswl
or
movsl
adc
daa
or
js
adc
push
mov
push
in
lock
mov
jmp
mov
adc
add
jmp
mov
jp
adc
mov
mov
nop
subl
xor
xor
or
cmp
fidivs
shl
imul
xchg
lret
pop
cmp
icebp
imull
andl
aam
mov
jmp
or
incl
lahf
or
pop
cli
mov
mov
pop
xor
fadds
bound
or
cmc
nop
nop
push
test
mov
add
mov
imul
inc
or
adc
add
lock
xor
add
js
fisttps
dec
iret
jmp
cmpsb
mov
or
rolb
inc
inc
dec
jle
cmpb
and
dec
xor
aas
pop
sub
imul
xchg
addr16
insb
popa
cmpsl
test
pop
dec
sarb
pop
add
add
cmp
jae
push
ret
pop
inc
mov
sbb
imul
addr16
or
xchg
lods
mov
cmp
xchg
out
dec
jg
mov
pusha
mov
fisubs
stos
jns
je
repnz
lea
xor
sbb
imul
fs
test
sbb
or
in
lds
inc
sbb
pop
push
lock
enter
lea
cmpsb
movsb
scas
mov
es
or
inc
jae
daa
sub
sub
or
push
dec
push
sub
lods
pop
icebp
repnz
add
or
adc
repnz
pusha
and
inc
adc
mov
xlat
and
push
push
fs
fstpt
lea
sbb
fwait
out
insl
lods
imul
lahf
and
push
cmpsb
cmp
roll
in
jecxz
andl
add
mov
js
push
or
sarl
jb
icebp
cmpsl
mov
adc
mov
xor
or
push
roll
les
jg
mov
sbb
mov
adc
pop
push
dec
fildll
sarl
xchg
jp
ret
pop
in
mov
pop
xchg
js
mov
shl
loop
inc
add
or
daa
mov
inc
mov
call
or
test
xor
in
sub
push
adc
sub
dec
add
jae
clc
lods
dec
sub
mov
sti
sbb
das
fsubrl
mov
enter
stos
in
clc
add
aam
pusha
fsubs
xor
dec
pushf
les
fimull
fiadds
daa
rolb
jb
fdivs
mov
in
cmp
je
int3
fiaddl
cmpsb
jbe
sarb
xlat
int
cs
imull
lods
loopne
mov
xchg
fldl
shll
sbb
cmp
fcoml
ss
jge
jne
int
add
adc
xor
mov
sbb
outsl
jp
push
dec
dec
mov
sub
jo
sbb
in
mov
fists
cmpb
mov
je
mov
add
jno
bound
js
clc
les
xor
insb
push
push
mov
negb
jbe
push
jmp
fadds
adc
add
jmp
sti
add
inc
fsubs
or
cmp
in
or
addb
dec
inc
and
imul
cmp
xchg
pop
adc
jl
mov
adc
popf
call
cmp
dec
mov
inc
mov
inc
and
jl
inc
jne
and
loope
rol
or
mov
and
test
xchg
cwtl
fs
js
test
rclb
pop
pop
cmp
movsb
add
xor
ret
sub
call
xor
mov
mov
dec
clc
push
push
fs
push
jmp
push
outsb
rolb
push
inc
shrb
test
cmp
inc
inc
dec
in
sbb
call
fucomip
or
les
daa
xchg
clc
xchg
in
push
sub
push
jno
lods
clc
jmp
aaa
mov
adc
mov
out
test
cwtl
inc
loope
sub
in
hlt
cmpsl
add
push
mov
pop
push
aam
cmp
cmp
mov
mov
or
xor
aas
add
sbb
scas
mov
push
ja
pop
or
fs
into
mov
rorl
mov
mov
push
in
add
fnsave
jg
mov
jge
sbb
popa
insl
mov
and
inc
mov
jne
adc
mov
xchg
cmc
add
inc
std
arpl
dec
xchg
and
xchg
xchg
hlt
push
pop
pusha
rclb
aad
cmp
jg
add
repz
jnp
pop
inc
xchg
fcomp
shrl
ds
in
add
mov
sub
push
lods
sub
mov
push
sub
lods
loopne
or
in
pop
lock
es
sbb
xchg
push
arpl
xlat
cmpsl
jp
pop
mov
lcall
movb
mov
adc
push
fimull
das
sbb
pop
out
pop
dec
iret
jl
mov
mov
int
adc
pop
push
jp
pop
hlt
adc
lods
je
sbb
push
fbld
adc
and
jns
js
sbb
sbb
fld
sti
mov
mov
or
ret
loop
bound
jne
test
das
out
inc
push
and
mov
je
push
adc
adc
sbb
sub
jne
sahf
pop
or
add
cmpsl
push
jmp
cmpsb
adc
mov
cmp
pop
pop
lods
movswl
subb
std
cltd
jns
sbb
mov
test
cmp
or
adc
push
imul
cli
out
addb
jmp
movsl
lods
mov
js
andb
hlt
cmp
pop
fcoms
inc
pop
push
pcmpgtw
sub
sahf
pop
scas
dec
lods
cmp
add
xlat
hlt
sbb
popa
mov
inc
insb
mov
aad
mov
sub
inc
pop
loop
adc
std
jae
jecxz
test
fimull
inc
dec
fs
inc
lea
ret
test
adc
dec
adc
fstl
sub
adc
pusha
aaa
sub
ret
test
push
iret
sub
lea
jo
or
inc
shrb
stc
sbb
jp
adc
cmp
mov
bound
pop
adc
or
clc
pop
sub
add
pop
sub
add
and
and
xchg
push
jns
sub
imul
pop
insl
pop
xor
shrb
stc
push
adc
jbe
insb
das
sbb
jmp
pop
jnp
xchg
push
adc
popf
jmp
sub
popa
popa
or
lea
adc
rolb
stos
sub
mov
or
inc
outsl
mov
xchg
dec
leave
push
in
movsb
jge
pop
addl
sbb
inc
fmull
orb
loop
bound
andl
and
test
popf
add
xchg
jecxz
das
mov
mov
test
fcomp
xor
push
pop
ja
les
mov
sub
xchg
imul
lret
jo
cmpb
scas
mov
test
test
add
push
outsb
fadds
shlb
out
push
call
out
push
push
sub
add
dec
add
pop
jno
rcrl
push
push
pop
sbb
mov
das
mov
xor
sbb
push
inc
or
cmpsl
or
bound
rclb
insl
inc
aas
push
js
dec
mov
js
les
cmp
jecxz
shlb
enter
sbb
mov
ret
mov
push
inc
push
push
add
inc
inc
add
fisttpl
add
cmc
int3
stc
push
jp
cmp
das
cmpl
add
mov
inc
aad
push
xchg
pusha
fwait
pop
mov
and
xor
nop
push
aam
rorl
je
sub
fsubs
icebp
idivl
adc
add
mov
or
jmp
and
adc
mov
xchg
jne
inc
sbb
push
mov
in
clc
test
dec
imul
arpl
pop
outsl
inc
adc
mov
adc
push
inc
mov
sbbl
cmp
sub
testl
dec
fisttpll
outsb
movl
cmp
movl
fcoms
sbb
lock
dec
imul
pop
daa
decb
repz
clc
pop
daa
sub
enter
push
adc
ret
inc
push
daa
les
xchg
cmp
xchg
ret
sub
mov
cmpsb
xchg
ds
xchg
clc
add
dec
mov
adc
push
insl
mov
sbb
repz
add
add
notl
pop
push
test
adc
in
loope
jb
cld
inc
mov
inc
imul
cwtl
ja
adc
xorl
sub
push
jecxz
outsl
mov
pop
dec
daa
pop
stc
xor
flds
and
mov
pusha
push
out
xor
dec
add
stos
call
pop
loope
pushf
jl
pop
test
popf
jge
sbb
mov
cwtl
xchg
sbb
xchg
cmp
leave
xchg
cli
mov
add
push
adc
xor
xlat
or
das
or
mov
notw
sub
push
or
and
lock
ret
into
cltd
clc
sbb
add
fldcw
add
or
std
add
add
push
std
aas
jnp
xor
rorb
add
inc
stc
add
movsb
dec
inc
adc
mov
mov
cmp
cmp
add
sbbl
outsb
iret
inc
addr16
pop
xlat
scas
inc
insl
hlt
imul
xor
and
push
addr16
push
add
and
mov
negl
mov
test
outsb
inc
sbb
push
shll
fiaddl
rcr
add
and
mov
pop
lea
add
adc
push
push
nop
lcall
add
jge
es
dec
add
add
mov
push
or
aad
and
aas
shrl
insb
inc
pop
push
push
pusha
fnstenv
sbb
xor
out
cmp
movsb
or
mov
pop
pop
inc
js
or
add
fiadds
rcrb
orl
push
jg
add
xchg
xor
mov
neg
and
cmpsl
outsb
mov
and
push
adc
or
or
addl
or
insb
jno
pop
add
gs
dec
sub
push
mov
out
pop
jmp
cmp
je
mov
test
jbe
data16
xchg
push
push
push
pushf
jge
dec
gs
fsubl
or
push
or
adc
mov
je
call
xchg
pop
je
cmp
add
nop
dec
or
rol
xchg
aas
sub
pop
insb
lahf
inc
or
aaa
pop
sbbb
rcrb
mov
add
cwtl
es
or
out
fs
js
mov
cmp
add
mov
cmpsb
push
pop
push
pop
inc
sahf
in
cltd
dec
pop
pop
in
stc
imul
sbb
mov
and
push
sbb
ret
add
shll
add
or
fdivl
dec
icebp
nop
push
fs
cmp
mov
xchg
and
sub
stos
add
cmp
cli
pop
sbb
cld
push
xor
lock
pop
xchg
ret
cmp
fmull
lods
imul
dec
loop
mov
rcl
outsl
pop
xchg
repnz
and
imul
sub
sbbb
push
xor
inc
mov
addr16
and
or
and
xor
dec
insb
add
xlat
cld
pop
out
rol
pop
or
pop
add
lock
int3
add
es
adc
inc
pusha
pop
xchg
pop
es
jae
adc
pop
push
es
mov
outsl
and
shlb
xchg
jne
sub
cmp
stos
dec
pop
jno
pop
add
jne
mov
mov
xchg
fistpl
and
shlb
mov
ret
shlb
xor
ret
test
xor
inc
lods
test
addb
and
pop
rolb
adc
adc
push
cmp
mov
stos
jae
and
pop
adc
sub
andb
filds
popa
xchg
cmpsb
jmp
les
sbb
push
jle
sbb
cmp
xchg
add
push
inc
fcomps
inc
jo
repz
mov
add
pop
pop
pop
xor
add
pusha
push
pop
add
jbe
or
jle
jmp
xorl
mov
inc
addr16
ds
loope
sbb
int
push
jg
push
test
xchg
popa
test
dec
push
aam
insb
cs
push
das
bound
inc
and
and
lcall
add
int3
fisubrl
faddl
push
mov
sub
insb
mov
loopne
lahf
xchg
push
pop
dec
repnz
mov
rclb
inc
dec
aaa
or
inc
out
adc
xchg
mov
gs
sbb
xchg
mov
mov
adc
xchg
mov
fisubs
or
arpl
dec
aad
lcall
or
outsb
dec
das
push
push
push
jmp
punpckldq
pusha
cmp
ret
fimuls
add
inc
loopne
adc
and
mov
inc
popa
or
pop
popa
and
into
add
into
insb
flds
test
sahf
or
push
dec
xchg
notb
push
xchg
inc
inc
jne
adc
inc
pop
lcall
jne
mov
jge
pushf
sub
or
pop
mov
jg
mov
lock
int3
loopne
outsl
mov
inc
call
andl
orl
xchg
movsb
pop
dec
enter
adc
jb
xchg
cmp
fwait
insb
je
inc
fildl
inc
iret
pop
push
sbb
xor
rcrb
xlat
sub
sub
or
pop
fwait
insb
mov
or
adc
adc
add
js
inc
popa
and
push
pusha
xchg
clc
popa
dec
inc
fcoml
mov
push
sarl
adc
adc
xchg
sub
dec
outsl
or
frstor
jle
or
or
dec
cwtl
pop
sub
jmp
imull
pop
repnz
fdivl
and
jb
xor
mov
cli
cmp
mov
loopne
out
es
cmp
lret
sbb
push
inc
stos
add
adc
push
adc
pop
pop
inc
out
ret
xor
adc
or
enter
mov
push
inc
outsl
push
or
mov
push
adc
xor
adc
out
fildll
mov
adc
cmp
jne
xor
lock
add
repz
jbe
dec
push
push
dec
dec
inc
mov
adc
push
inc
loopne
cmp
adc
pop
inc
xchg
pop
add
or
rcrl
or
pop
xor
inc
or
push
or
hlt
hlt
push
adc
adc
leave
mov
test
push
mov
pop
push
fcoms
out
mov
dec
inc
mov
jl
xor
fldenv
dec
xor
mov
stos
rorl
lahf
pop
xorb
ret
iret
ljmp
cmpb
dec
or
or
mov
mov
je
ret
sbb
add
nop
imul
add
shll
sub
pop
andl
mov
jno
add
xchg
sub
push
jne
vmwrite
add
lock
pop
mov
and
add
jmp
jmp
sub
xchg
or
push
in
loopne
das
or
mov
mov
xor
sub
adc
pop
enter
sahf
sbbl
repnz
loop
mov
stc
rcrb
mov
inc
sbb
and
push
mov
jl
insl
xchg
inc
and
sub
addr16
cltd
fdivs
fs
inc
imul
mov
fs
leave
pop
xor
aad
add
mov
xor
add
push
or
push
lret
xchg
jns
add
and
iret
test
add
mov
and
push
mov
inc
and
aaa
jo
call
popa
sub
fwait
push
and
push
fsubs
adc
dec
pop
lret
gs
inc
fsubrs
in
mov
ss
xchg
ja
loopne
xor
das
fs
insb
mov
stos
les
mov
xchg
sub
int
roll
pop
sbb
sbb
cmpl
push
sti
dec
sbb
sub
movl
or
das
fsub
xlat
sbb
pop
add
add
cmp
pushf
ret
inc
cmp
add
shlb
cmpb
pushf
and
call
lods
or
mov
imul
adc
dec
dec
andl
loop
pop
mov
xor
into
push
mov
push
pop
sti
mov
sub
adc
sbbb
mov
pop
xchg
push
or
cmpl
inc
xor
adcb
sbb
je
and
add
cmp
lea
pop
daa
xchg
adc
add
hlt
add
aam
mov
xchg
call
je
cmp
aas
pop
mov
pop
arpl
cmpb
xor
add
lock
sbbb
inc
and
shlb
push
add
mov
pusha
mov
fs
pop
je
imul
rorb
sti
loope
pop
jnp
or
dec
cmp
sbbb
adc
sbbb
pusha
dec
cmp
stos
xor
sbbb
outsb
xor
popa
imul
loope
dec
and
rorl
das
push
jne
ljmp
mov
sbb
add
cwtl
or
call
jecxz
cmpsl
cld
sub
jae
cmp
or
mov
push
jns
movsb
or
test
pop
hlt
cmp
jge
fsubs
sti
cmp
sahf
mov
jl
outsb
adc
adc
dec
inc
ficoml
xor
adc
divb
inc
ret
fstps
jb
adc
pop
jmp
xor
xchg
lds
xor
mov
xchg
inc
jae
cmpl
or
push
or
sub
insl
das
daa
mov
shlb
sbb
rcl
nop
loope
test
imul
xor
sub
fmull
std
mov
and
xchg
or
adc
cmpsl
daa
lods
xchg
add
addl
add
pop
push
jne
rcrb
movsl
call
jnp
inc
sbb
push
add
jne
addr16
pop
and
or
adc
ret
or
pop
notl
add
les
stos
out
testb
je
scas
jne
cli
mov
jno
adc
jge
test
push
test
and
pop
mov
jns
shlb
mov
or
insl
fcoms
icebp
jmp
add
rclb
dec
or
fistl
es
cwtl
adc
sub
mov
data16
loopne
mov
lock
or
cwtl
xchg
xchg
pop
mov
cmp
pop
fwait
adc
add
or
test
xchg
das
clc
cmp
test
dec
inc
mov
nop
ss
mov
lock
adc
push
dec
cmp
mov
sti
or
inc
jle
jge
pop
push
add
or
jge
nop
mov
inc
lcall
int3
cmc
adc
aas
mov
ret
fildll
arpl
adcl
fisubrl
inc
mov
adc
and
or
dec
xor
dec
mov
inc
int3
pop
cmp
sbb
inc
or
add
and
mov
adc
xchg
and
popa
pop
mov
pop
je
mov
movb
cmp
push
xorl
inc
add
push
adc
inc
insl
test
push
fwait
adc
dec
sub
mov
jecxz
es
lahf
inc
push
sub
js
or
call
mov
adc
or
outsl
lcall
sbb
sbb
dec
or
jl
mov
mov
jge
mov
dec
and
mov
out
sub
setnp
mov
jo
pop
daa
adc
out
and
test
xor
and
popa
daa
aad
enter
inc
stos
mov
pop
pop
pop
repz
test
pusha
mov
pop
jl
adc
mov
fisttpl
outsl
push
movsl
mov
loope
cmp
xchg
nop
pushf
add
fisubl
sub
sbb
adc
loopne
xchg
mov
sub
punpcklwd
mov
test
frstor
daa
nop
test
out
mov
in
xor
mov
push
dec
movsb
adc
mov
push
add
push
adc
cmp
cs
add
je
mov
mov
lock
or
jo
rclb
ret
and
mov
push
jbe
fisubrl
pop
mov
mov
jo
push
shrl
insl
insl
rol
jmp
addb
arpl
pop
rolb
sbb
sbb
lods
sbb
dec
jle
dec
mov
cmpb
aad
add
xor
mov
adc
mov
adc
in
mov
fsubrs
bound
mov
jg
adc
addr16
sbb
mov
imul
push
shl
push
pop
push
adc
jae
mov
add
cmpb
pop
aas
dec
loope
lock
and
enter
inc
mov
sub
jg
icebp
push
push
dec
out
inc
inc
rolb
push
xor
addb
mov
push
sub
daa
add
add
xchg
je
sub
sbb
sub
rcll
jb
sub
call
outsl
fstps
cmp
sub
adc
pop
dec
js
cmp
mov
inc
std
xor
call
inc
loope
dec
pusha
ljmp
fdivl
arpl
aaa
xor
fbstp
gs
movsb
or
or
cmpb
adc
jo
testl
sbb
sti
inc
and
mov
pop
pop
and
pop
jle
pop
or
dec
ret
jb
add
cmp
pusha
pusha
int3
inc
pusha
pop
cld
aam
div
add
push
popa
inc
mov
sbb
add
pop
rclb
mov
mov
popf
cmpsl
outsb
cwtl
or
add
insl
adc
and
mov
pop
add
lcall
add
inc
pop
xor
jb
xchg
xor
inc
sbb
and
push
mov
fbstp
push
cmp
cmp
mov
or
stos
xchg
mov
loop
pop
and
test
sahf
fldl
cmp
adc
jne
inc
insb
fnstsw
daa
cmp
push
jb
push
adc
ret
addb
outsb
pop
add
popa
stos
push
outsl
jo
ja
or
sbb
or
add
mov
fwait
sarl
orb
mov
jo
mov
mov
jo
sbb
ret
fistpll
add
adc
pop
and
push
sub
add
push
cmp
mov
sub
sti
loopne
cmp
push
push
push
cmpsl
pop
iret
push
movsl
cs
inc
push
push
add
add
add
dec
sarl
std
cmpsb
in
add
or
xchg
loop
mov
pop
popa
in
popa
sub
dec
repnz
adc
cld
xchg
insb
nop
adc
mov
stos
pop
mov
sub
inc
popa
pcmpgtw
adc
loope
mov
mov
clc
lea
fldl
and
ffree
sar
and
mov
add
mov
call
out
sub
inc
dec
and
add
roll
and
negl
pop
push
outsb
push
mov
xor
or
stos
pop
shl
mov
jb
je
loope
add
mov
and
repnz
inc
lock
xchg
insb
mov
inc
push
or
inc
movsb
add
addb
arpl
inc
mov
shl
lahf
movb
pusha
mov
xor
divb
mov
xchg
xchg
push
jne
add
psadbw
dec
xchg
call
ja
out
cs
pop
adc
fdivs
lea
cmp
loope
enter
jmp
sub
mov
clc
js
mov
call
hlt
fidivl
add
les
std
dec
mov
add
les
clc
or
add
dec
imul
sbb
or
ja
jb
inc
push
push
push
push
or
es
das
mov
cmp
mov
lcall
repnz
leave
push
mov
or
dec
clc
lcall
add
xor
lcall
hlt
ss
add
dec
dec
test
adc
jge
loope
enter
sub
sbb
in
testb
dec
loopne
fisubrl
cmp
aaa
call
ja
mov
inc
loopne
in
or
xchg
xorb
adc
inc
loopne
stc
sbb
jo
sub
shrl
adc
mov
pop
sub
jo
push
mov
nop
jge
ja
dec
and
sbb
test
arpl
sbb
test
jo
ret
add
stos
sbb
mov
push
sbb
jle
jb
je
cwtl
cmp
stos
mov
lock
mov
push
cmp
or
adc
or
mov
push
adc
std
and
sub
adc
jmp
dec
dec
fdivp
movsb
sbb
dec
mov
lret
xor
fsub
ja
xor
mov
sbb
mov
push
xor
and
adc
push
shlb
sbb
xchg
sub
jmp
sbb
cld
xchg
push
inc
mov
fcoml
adc
xor
inc
call
push
sbb
xchg
push
sbb
aas
ret
enter
pop
inc
int3
push
pop
xor
cltd
sbb
lea
xor
mov
out
push
adc
stos
mov
push
lret
sbb
adcb
xor
or
mov
mov
loop
mov
and
in
hlt
ror
je
or
imull
or
sbbb
xor
jmp
or
inc
sbb
push
add
cmp
bound
test
and
into
cmp
xlat
mov
push
sbb
and
pop
push
stos
sub
jns
testb
scas
add
iret
div
add
inc
pushf
insl
xchg
lcall
scas
mov
sub
lds
test
mov
mov
add
xor
int3
ss
sbb
test
pop
lods
push
inc
or
int3
and
and
mov
lods
je
push
mov
daa
add
js
xor
adc
pop
loope
push
sbb
test
out
pop
aaa
movsl
push
push
sti
or
adc
js
add
loopne
lock
lahf
adc
out
mov
cmpb
leave
rcl
daa
add
std
cmpb
push
xchg
sub
push
or
xchg
pop
sbb
shrl
jmp
insb
pop
xchg
mov
out
xchg
cltd
mov
mov
loope
push
xchg
int3
add
shr
cmpb
dec
dec
mov
inc
jmp
xor
movsl
test
adc
or
bound
scas
mov
dec
stos
sub
sbb
push
je
hlt
shlb
xor
out
or
adc
push
jmp
sub
sub
in
in
or
or
xchg
or
out
adc
sub
arpl
or
or
jle
pop
dec
subl
adc
xchg
and
or
inc
push
faddp
jge
rcll
mov
add
jmp
sub
push
pop
sub
clc
add
push
or
xchg
or
nop
lcall
pop
jno
movsb
push
hlt
add
sbb
add
shrb
icebp
mov
add
xchg
cmp
pushf
sbb
xchg
and
pop
inc
cmpb
jb
mov
lea
pop
jae
imul
adc
sbb
popa
mov
ja
daa
pop
add
or
inc
xchg
subb
sbb
sub
rol
mov
mov
negl
addr16
inc
or
mov
cld
add
adc
pushf
xchg
insl
scas
sbb
addr16
mov
add
divl
cmp
adc
imul
push
inc
add
jb
jo
jns
xchg
out
inc
xorl
inc
pop
add
cmp
aam
testl
adc
add
or
sub
mov
add
lret
inc
add
jae
push
insb
xor
push
adc
push
stos
std
std
jno
pop
sahf
ss
mov
mov
sti
lret
add
pop
push
mov
jge
push
adc
pop
cmp
dec
xorb
xchg
push
in
and
loopne
sbb
jo
jge
fs
mov
pop
jb
daa
into
add
push
push
jbe
inc
sub
inc
jbe
mov
xor
pop
pop
or
fcomp
out
sub
add
xchg
loopne
gs
sbb
mov
lret
add
aaa
call
jle
push
cmp
sub
subb
jbe
adc
and
push
inc
mov
loop
test
cmp
nop
sbb
enter
js
lcall
sub
inc
jne
push
xor
rorl
cmp
xor
push
and
jo
test
or
icebp
push
pop
sarb
je
dec
dec
add
dec
call
xor
add
mov
loop
call
mov
add
inc
sbb
aas
mov
adc
xchg
push
sbb
inc
xor
pop
inc
clc
xchg
xor
mov
mov
push
das
adc
repnz
jmp
setbe
mov
lods
scas
fistpll
mov
imul
adc
pop
fistl
pop
outsb
xor
mov
pusha
mov
dec
push
add
or
rorb
icebp
cmp
test
sbb
stos
cmp
mov
xchg
cmp
pop
push
sbb
fnsave
mov
popa
and
inc
push
dec
or
lret
push
pop
xor
cmp
mov
repz
test
mov
mov
and
out
scas
icebp
fiaddl
out
cltd
inc
dec
imul
sub
in
nop
xchg
and
nop
mov
jne
add
mov
lcall
dec
test
pop
mov
push
push
fisttpll
out
add
fmuls
pop
test
outsb
aaa
mov
add
loopne
push
push
js
flds
aam
cmp
xor
mov
add
in
outsl
mov
jb
inc
adc
mov
jb
pop
jb
add
jb
daa
pop
enter
ss
faddl
inc
pop
pop
testl
pop
movsb
jo
jne
js
arpl
adc
das
and
daa
mov
or
mov
push
call
push
out
mov
sbb
fiadds
xchg
adc
leave
adc
adc
pop
push
xor
or
sbb
aaa
les
add
sbb
sbb
mov
ret
sbb
pop
decl
pop
mov
gs
shrb
and
push
dec
sti
dec
mov
dec
data16
adc
adc
jmp
fwait
test
nop
orb
cmp
scas
icebp
in
cmp
scas
and
mov
dec
pop
lods
andl
sub
mov
mov
test
mov
xor
inc
ret
jle
add
jl
lea
add
mov
notl
rep
xor
les
shll
jmp
fsubr
xlat
hlt
into
add
adc
data16
xlat
jmp
lea
out
outsb
add
or
sbb
add
outsb
gs
mov
hlt
add
scas
out
cmp
fisttps
mov
dec
arpl
jo
lods
je
dec
fwait
jne
mov
sub
pop
xor
addr16
lcall
push
loopne
scas
xchg
xor
and
scas
adc
add
fldl
xchg
push
sbb
push
dec
xchg
ror
inc
out
test
sbb
ds
jnp
pop
cmpl
sub
sbb
push
roll
jmp
es
lods
mov
out
leave
in
mov
cmpsb
mov
jecxz
popa
mov
rorb
cltd
jnp
mov
dec
decb
sbb
popa
and
jo
std
mov
mov
fidivl
or
adc
pop
lods
xchg
push
clc
nop
adc
adc
outsb
mov
add
sbb
mov
push
ja
das
je
mov
add
inc
popa
and
push
xchg
ret
mov
cmp
mov
adc
ss
inc
mov
sbb
fdivs
and
insl
lsl
mov
je
shlb
movb
add
rcrl
icebp
pop
ret
aad
outsl
fmull
or
adc
xchg
lock
data16
mov
test
cmp
stos
or
adc
adc
jle
gs
cs
dec
dec
sbb
push
push
dec
out
adc
orb
je
pop
inc
inc
xchg
jno
data16
push
nop
mov
inc
sbb
rolb
dec
or
lods
pop
add
sbb
or
pop
push
inc
cmc
jo
mov
das
or
pop
fnstcw
and
cmpsb
mov
inc
jo
daa
adc
mov
dec
pop
inc
loope,pn
rclb
xchg
push
push
add
or
je
xabort
movsb
mov
push
inc
stc
rcrb
push
js
popf
sbb
jo
sbb
add
sub
div
pusha
adc
std
mov
jle
mov
imul
dec
js
iret
xchg
or
jne
add
jne
mov
push
ret
add
gs
or
lock
pop
jecxz
pop
push
rcrl
mov
jo
adc
dec
ja
popa
and
insb
fwait
jne
xchg
sub
clc
push
mov
mov
xor
inc
adc
sbb
jle
mov
ret
fstps
mov
mov
jbe
jnp
inc
dec
inc
jmp
sbb
inc
fadd
jmp
push
mov
fsub
sub
sub
pop
push
fsubl
in
insl
test
cmpsb
imul
cmp
push
dec
adc
stc
ret
jne
cmp
fbstp
leave
xchg
sbb
xor
mov
in
sub
jno
mov
xor
and
pop
and
shl
or
icebp
dec
daa
push
mov
rclb
subl
jge
mov
fcoms
sbb
push
adcl
loopne
xor
and
inc
jmp
push
inc
or
jb
pop
adc
clc
pop
xor
jl
lea
je
aaa
pop
icebp
das
loopne
mov
pop
push
sub
ficomps
sub
push
hlt
or
dec
dec
loop
fwait
shrb
push
inc
add
sub
mov
add
popa
dec
lock
mov
pop
adc
adc
inc
iret
pop
sub
test
xchg
dec
cmp
dec
cld
test
fdivrl
dec
xor
hlt
jno
fadds
dec
test
ficompl
adc
movsb
cmpsl
pusha
and
inc
mov
mov
les
mov
ja
push
clc
fstl
orl
lock
or
mov
cmc
mov
xor
xor
or
lea
jns
or
les
fmull
ss
xor
and
cli
into
dec
orl
les
jae
les
shlb
pop
add
aas
les
shlb
les
shlb
les
fwait
cmpsl
aas
inc
inc
mov
xchg
mov
dec
and
fisttps
movsb
sbb
es
call
aas
test
cltd
push
es
inc
xchg
mov
cmp
adc
or
add
mov
cmp
mov
pop
stos
cmp
mov
adc
pop
xchg
xor
xor
mov
dec
loop
and
adc
rcl
push
or
add
fcompl
por
xor
fiadds
dec
lods
test
imul
dec
fwait
xor
mov
dec
lcall
inc
fsubrl
pop
mov
add
and
lock
mov
jmp
imull
jns
test
push
add
insl
cmp
push
add
gs
mov
xchg
fisttpl
jmp
mov
and
fwait
dec
sub
out
or
sub
push
orl
clc
and
fldt
add
call
or
mov
mov
bnd
in
aam
int3
cmp
cmc
es
sbb
or
push
xchg
inc
leave
dec
or
outsl
mov
mov
mov
call
movsb
dec
inc
inc
mov
aaa
adc
cmpsl
movsl
pop
nop
iret
push
push
sbb
add
ret
add
jmp
sbb
lock
test
jae
rorb
daa
adc
aam
movsl
aas
pop
mov
adc
aas
dec
cmpsl
inc
add
movsl
jne
and
pop
inc
cld
sub
icebp
sub
xor
sbb
inc
mov
adc
jno
repnz
adc
adc
adc
jno
stos
mov
sbb
ljmp
jmp
adc
lds
mov
sub
push
sub
xor
adc
jo
daa
out
adc
jne
xor
nop
jp
inc
push
dec
cmpb
adc
fs
ss
ljmp
test
pop
add
std
jg
cmp
ja
inc
mov
addr16
lret
test
or
sbb
or
pop
lock
adc
enter
and
and
popa
add
das
je
or
adc
inc
inc
mov
adc
and
flds
clc
sub
add
fmul
shr
xor
adc
es
fists
test
addl
inc
and
mov
loope
jmp
or
mov
push
xor
mov
in
push
sub
scas
in
repz
jno
in
shrl
and
pop
push
cltd
adcl
inc
jp
inc
or
lock
cmpl
outsl
and
sub
jne
js
jno
stos
or
out
ja
pop
adc
add
clc
sbb
adc
sbb
dec
push
fdivrs
push
cld
cmp
inc
arpl
inc
jne
mov
pop
loopne
nop
in
adc
gs
mov
nop
add
mov
mov
dec
aaa
orb
dec
mov
popf
mov
mov
push
lcall
xchg
das
sub
mull
fcompl
fsubs
push
mov
mov
adc
pop
into
sub
cmp
push
add
les
cld
add
dec
cmc
jo
in
sbb
pushf
mov
aam
add
mov
add
or
or
test
sbb
or
mov
and
or
mov
mov
xor
xchg
add
iret
cwtl
and
pushl
jp
sbb
push
push
notb
decl
addb
jo
in
int3
outsl
mov
int
mov
fists
test
jbe
outsb
fdivr
ds
int3
push
lret
mov
sbb
mov
lret
fincstp
jg
add
pop
cmpl
xchg
lock
pop
xor
fdivrl
ret
sub
dec
pop
mov
in
les
dec
cmp
jne
enter
adc
sub
cmpsl
test
in
xor
rcll
pop
orb
pop
or
lock
test
or
sbb
add
repnz
gs
add
push
aad
mov
sub
clc
mov
adc
in
mov
bound
cmp
add
mov
add
push
insb
in
outsl
sbb
or
sub
xor
xorl
inc
lahf
sbb
xor
adc
lea
and
pop
add
mov
fs
jnp
addl
sub
aam
adc
lock
or
xor
mov
lret
adc
adc
inc
faddl
fdivrs
fnstcw
or
or
or
dec
add
adc
xor
pop
inc
adc
xchg
pop
sub
lcall
adc
pop
adc
push
pop
and
enter
cmp
dec
mov
xchg
xchg
fbld
loopne
inc
push
aaa
je
ja
lock
cwtl
fwait
and
mov
sbb
lcall
leave
sub
jmp
sub
mov
pop
jne
or
shrl
push
lock
movsl
idiv
cmp
or
add
add
mov
imul
jmp
sub
loop
push
mov
imul
ret
lret
jne
mov
cmp
pop
inc
leave
or
pop
insl
jb
or
adc
cmc
jno
sub
mov
xchg
mov
or
cmp
jae
xorb
repz
syscall
mov
mov
jb
sub
and
cmp
adc
test
push
add
ja
sub
dec
cmp
ja
repz
sbb
mov
jo
iret
popa
push
push
jmp
sub
loopne
push
popl
mov
bound
inc
sbb
sub
imul
icebp
xor
push
ljmp
push
inc
mov
adcb
lods
loopne
es
xchg
daa
js
shll
in
jns
add
test
sbb
dec
cmp
pop
adcl
shrb
push
movsb
outsb
sub
add
jmp
add
add
inc
sub
jmp
sub
mov
xor
pop
xor
sub
pop
int
or
rorb
lock
pop
mov
ret
adc
add
add
cmc
mov
orl
or
xor
push
sbb
inc
adc
popa
test
pop
fldcw
fcoml
mov
cli
push
or
mov
pop
push
dec
push
ja
shl
inc
loop
out
and
gs
out
cmc
pop
js
and
shrb
imul
add
xchg
add
xor
cmp
stos
jbe
fadds
xlat
ds
ret
inc
add
mov
add
insl
and
sub
arpl
outsl
call
and
test
movsl
call
nop
popf
ficoml
xor
xor
mov
js
lock
pop
nop
mov
sbb
cltd
sub
ror
lea
pop
jne
mov
cltd
jno
xor
push
addr16
cld
add
jne
bound
fldl
push
inc
test
clc
sub
and
inc
mov
adc
rcll
ja
sbb
or
pop
roll
cmp
xchg
cmp
pusha
daa
push
add
pop
test
in
sarb
push
sbb
sarb
shrl
subb
mov
and
loope
out
rcr
xchg
pop
xor
les
hlt
jb
lods
fstpl
int
fstps
inc
cmpsl
shll
jne
xchg
bound
add
or
and
mov
cmp
push
js
push
sub
inc
pop
cmp
inc
sbb
cmp
cmp
or
or
lods
add
shlb
xchg
lock
repnz
pop
fistpl
adc
adc
adc
pop
inc
xchg
inc
aas
sub
rclb
or
or
clc
inc
popa
mov
test
sbb
pop
or
pop
inc
push
sbb
aad
nop
add
dec
hlt
xchg
mov
xor
dec
and
fiaddl
imul
xchg
jns
push
cmp
jmp
insl
gs
nop
xchg
sbb
cli
dec
push
adc
jecxz
xchg
mov
xchg
les
sub
inc
testb
push
out
adc
jg
incw
std
mov
dec
jo
or
hlt
lock
inc
push
dec
adc
push
adc
and
sbb
ret
hlt
cmp
dec
mov
push
in
pop
test
sbb
xor
xor
inc
andb
lret
rclb
imul
push
dec
sub
xchg
sub
add
mov
ds
push
add
push
add
clc
and
push
fwait
aaa
cmpsl
fbld
and
rolb
lret
hlt
sbb
mov
and
imul
and
fs
xor
adc
shr
clc
shll
aam
mov
and
mov
loop
add
sbb
and
mov
ss
adc
jne
push
push
adc
jo
shrb
or
adcb
mov
aam
inc
adc
xor
pop
mov
inc
sub
into
xchg
adc
cmc
push
int3
inc
hlt
xor
dec
out
dec
fprem
xor
bound
cli
inc
or
sbb
xchg
dec
rcrb
cwtl
sbb
jmp
push
pop
dec
rcrb
mov
xchg
push
ss
mov
jne
test
les
adc
cmp
sbb
push
pop
mov
or
cmp
sub
sub
enter
shufps
aad
xchg
sti
outsl
inc
inc
stos
test
je
inc
jae
outsl
jmp
sbb
or
or
arpl
sbbb
xchg
adc
fnstcw
add
xor
pop
inc
loop
mov
decb
xchg
push
jmp
add
xor
jmp
das
push
sbbb
mov
jmp
mov
add
movsl
and
imul
ret
mov
stos
popa
ret
add
scas
hlt
das
lock
jle
movsl
inc
jmp
mov
sub
xor
mov
jge
imul
add
xchg
mov
push
or
rol
jo
adc
lahf
cmc
ja
loop
push
and
cmpsl
sbb
int
call
flds
and
jl
or
cmp
scas
cli
or
inc
pop
sbb
fcoms
movzwl
aad
and
adc
add
push
jecxz
sbbb
sub
notl
gs
daa
inc
mov
xchg
and
pushf
mov
imul
aaa
jnp
lds
mov
xor
and
mov
out
push
ret
push
orl
xchg
xchg
cld
inc
inc
icebp
add
mov
inc
adc
or
cmp
xchg
push
rolb
mov
mov
mov
inc
mov
movl
lea
add
push
aas
hlt
add
dec
sub
push
add
ret
fldenv
jl
add
fsubs
pop
dec
fisttpll
lcall
adc
sbb
imul
sbb
xchg
je
add
sahf
mov
mov
pop
sbb
push
stos
ret
jno
xor
mov
imul
into
testb
xchg
sub
mov
dec
xor
imul
adc
sub
add
cmpl
pushf
and
cmp
sti
nop
call
sub
add
repnz
mov
xchg
adc
test
inc
nop
adc
loop
push
cwtl
test
dec
int3
or
mov
push
adc
cmpsb
arpl
fimull
mov
xchg
jp
loopne
test
outsb
pop
or
fdivl
jle
xchg
push
inc
je
and
out
sub
pushf
aas
push
dec
inc
push
lcall
inc
pusha
hlt
cwtl
data16
push
andb
adc
imul
inc
jne
jo
stos
xchg
mov
in
add
sub
pop
rolb
jecxz
sbbl
cmpxchg
inc
inc
sbb
test
xor
add
ds
addl
aas
repz
mov
in
or
mov
cmp
adc
sbb
inc
push
test
sbb
push
or
mov
inc
shrb
mov
sbb
das
and
and
loopne
inc
insl
aad
sub
sbb
mov
insl
pop
mov
mov
mov
inc
sbb
mov
sub
cmp
cs
xchg
sbb
out
inc
push
out
lea
and
ffree
adc
stc
mov
int3
fnstsw
jl
test
mov
jo
sbb
cmpb
out
sub
popa
jne
xchg
xorl
push
rclb
push
or
das
xchg
rcll
cmp
pop
repz
adc
push
mov
or
js
gs
test
ret
adc
mov
testl
and
loopne
push
sub
int
pop
icebp
ret
cmpb
pusha
fstl
int3
dec
sbb
sahf
mov
fadds
stc
lcall
fs
xor
pop
push
inc
fs
loope
cmp
xchg
jne
mov
sub
pop
es
inc
inc
imul
mov
jnp
ss
ljmp
pop
ret
cmp
and
repz
movsb
repz
add
arpl
sub
cld
or
jbe
ljmp
mov
push
leave
mov
ss
arpl
and
jg
pop
ss
dec
sub
xchg
push
or
add
sti
test
sub
pop
lock
lods
test
gs
jne
stos
inc
push
dec
push
pop
pop
stc
xchg
xchg
xor
daa
test
pop
loope
lahf
insl
cmp
inc
iret
or
jne
push
fwait
xor
icebp
cmp
add
cmp
push
testb
fld
xchg
dec
fs
or
aad
push
je
sbb
and
sbb
and
loop
das
cltd
enter
inc
out
cmp
inc
push
and
js
aam
push
pop
jae
pop
shl
fstpt
mov
inc
cmpsb
and
orb
push
ret
cmc
add
js
add
add
mov
dec
pop
and
dec
add
rcll
cwtl
push
mov
pop
bsr
xchg
pop
sbb
xchg
dec
and
inc
xor
adc
addr16
fcompl
or
inc
pop
xor
pop
xor
or
stos
cmp
pop
mov
scas
and
dec
pop
lods
pop
sub
mov
sub
aam
leave
test
decb
cmp
mov
or
xor
sbb
xor
test
or
fdivl
iret
in
mov
and
in
xor
and
jl
mov
adc
std
push
xor
push
sbb
mov
add
rcll
inc
or
add
sub
or
lahf
jge
mov
fmuls
movb
mov
pop
dec
sarb
inc
pop
les
ret
pop
cwtl
or
xchg
push
jmp
lods
and
jo
jle
adc
rorl
mov
outsl
fiadds
push
shr
cmp
imul
ja
pop
lahf
dec
jp
es
lea
push
hlt
adc
add
jnp
rclb
adc
mov
inc
xor
xor
fcmovnu
cmp
sub
nop
xor
pop
mov
cwtl
sbb
leave
loop
sbb
or
ss
fadds
add
jno
sti
add
inc
and
clc
sub
push
add
push
inc
es
jecxz
cmp
sbb
sub
inc
in
orb
loope
add
pop
inc
push
hlt
addl
xchg
arpl
adc
enter
pop
int3
lret
fimull
adc
sbb
fst
iret
ret
hlt
mov
jmp
cmpsl
fcoml
sbb
arpl
cli
insb
pop
in
pop
aaa
xchg
push
mov
fiadds
pusha
cmpl
and
push
xor
rcrb
pusha
inc
jmp
int3
dec
sub
mov
or
rcr
sbb
ss
jnp
push
mov
jne
xor
sub
in
daa
rcrl
int3
loop
adc
add
aaa
or
test
arpl
mov
rorb
pop
cmpsl
repnz
adc
or
jne
hlt
adc
add
mov
dec
jb
xor
pop
jns
add
and
jecxz
repz
cmpl
adc
dec
lret
or
or
pushf
call
mov
adc
imul
out
sub
cmp
cmc
jge
add
dec
or
mov
std
or
int3
das
push
sbb
into
movb
lret
andb
sbb
mov
dec
add
cmp
nop
adc
push
sti
test
addl
hlt
das
dec
xor
pop
xchg
lcall
inc
aas
test
outsl
add
clc
movsl
add
pop
cmp
mov
adc
mov
xchg
loope
in
and
popa
imul
sahf
xchg
and
jge
push
mov
mov
add
int3
mov
add
xor
pop
test
mov
fisubl
pop
int3
sub
orl
jo
cmp
and
add
jl
popa
dec
arpl
sub
xor
mov
mov
xchg
inc
mov
add
lcall
outsl
popa
jns
pop
cmp
ljmp
test
adc
and
movsb
ret
sbb
pop
dec
xchg
std
push
dec
or
mov
mov
cmp
push
pushf
in
sbb
fsubrl
push
pop
sub
xchg
inc
cmc
jne
sti
rorb
pop
or
dec
cmp
les
cmpsb
sub
pusha
lods
cmp
and
ljmp
pop
loop
addb
ja
and
andl
insb
adc
dec
int3
lahf
xor
mov
adc
inc
sbb
inc
mov
and
cwtl
pop
jecxz
pop
cmp
add
arpl
es
or
std
jmp
repz
mov
loope
xor
pop
mov
das
jle
and
push
and
inc
cli
or
in
mov
daa
arpl
push
adc
ss
push
lock
or
test
pop
ret
fsubl
pop
fmul
mov
ret
sbb
mov
xor
testl
je
xor
push
xor
hlt
lds
addb
or
fsts
or
sbb
or
outsl
mov
pop
inc
push
sbb
sub
lds
das
cmp
cmpb
popf
test
add
inc
aam
or
lgs
mov
leave
fsubl
loopne
ret
icebp
or
addl
and
mov
xor
pop
addr16
loope
inc
add
aaa
add
or
mov
xor
daa
inc
ja
add
inc
aaa
ficomps
popa
sbbl
inc
mov
iret
sbb
jl
fcomp
subl
push
cmp
imul
cmp
pop
push
sbb
adc
unpckhps
scas
rorb
adc
in
cmpl
push
xlat
jbe
call
out
add
mov
cmp
or
sbb
add
inc
popa
or
rcll
add
mov
xor
jb
add
jmp
xor
stos
xchg
push
scas
add
xchg
in
add
xchg
and
xorl
xor
cmp
cmp
inc
sbb
data16
pop
add
xchg
out
fwait
xchg
jno
popa
xor
mov
xor
filds
add
pop
pop
add
fistl
mov
add
mov
pop
aas
mov
pop
xchg
and
adc
sbb
hlt
imul
int3
adc
mov
or
adc
push
stos
jno
add
movb
jnp
inc
int3
and
adc
jg
jns
stc
jp
sbb
pop
aaa
jne
add
fdivs
dec
daa
leave
push
add
adc
push
adc
push
push
push
add
into
js
pushf
add
in
popf
dec
je
sbb
and
int
mov
lock
loopne
fisubrs
mulb
sbb
push
pop
push
adc
dec
or
fnstsw
sbb
sbb
push
dec
cwtl
mov
push
fsts
mov
sbb
fstl
repz
arpl
and
push
movsb
mov
ds
or
pop
jge
hlt
pop
test
test
mov
rcrb
shlb
hlt
sub
ret
or
mov
test
bound
daa
and
fisubl
fisubrl
fsub
sbb
pop
cs
inc
mov
and
inc
outsl
cmpsb
scas
sub
add
test
push
xor
dec
push
fldl
js
movsl
or
cld
subb
pop
fucomp
pop
jmp
xchg
call
cmp
inc
mov
or
xor
mov
adc
lock
js
imul
pusha
cmc
cli
shl
xchg
ja
les
or
mov
pop
mov
pop
nop
orl
out
or
fstps
cmp
pushf
mov
popa
push
jmp
mov
sub
add
ss
pusha
imul
and
add
xchg
dec
inc
jbe
adc
orb
lret
add
push
adc
fiaddl
inc
ja
push
dec
and
dec
sbb
and
mov
xchg
pop
jmp
in
fsubrs
adc
int
xorb
adc
cmpsl
add
lcall
or
call
pop
inc
add
inc
gs
fs
cld
push
add
or
add
pop
call
sbb
lahf
add
cmp
aad
dec
and
xchg
cld
ret
lock
sub
dec
test
in
mov
sub
mov
test
inc
add
cwtl
mov
sti
or
inc
mov
mov
sub
inc
das
add
sub
cmpsl
push
popa
push
or
out
xor
jmp
popa
dec
sbb
enter
aam
imul
subl
or
in
popf
movsl
push
dec
sbb
sbb
xor
jmp
movsb
push
mulb
mov
push
push
aaa
pop
fs
or
popa
push
and
jno
inc
lods
insl
cmpsl
sub
add
daa
fisttpl
inc
xor
cmp
setno
adc
in
sub
mov
mov
movsl
or
aaa
push
sub
cld
subl
jns
add
xor
add
jns
rolb
jno
cmp
jne
das
mov
adc
aas
scas
inc
add
xchg
xor
dec
lds
push
jbe
fmull
push
xchg
fmuls
out
cmpsb
adc
jb
cmp
fwait
add
add
mov
or
adc
in
ss
cmp
popa
fadds
cwtl
xor
push
jns
inc
jg
add
pusha
out
loopne
adc
push
sub
insb
and
popa
test
jb
icebp
and
outsl
sub
push
dec
repnz
cmp
xchg
mov
cmp
xchg
jne
xchg
aaa
ss
sbb
icebp
push
mov
or
or
enter
jmp
inc
out
lret
push
fdivl
iret
jge
pop
and
adc
lock
jo
dec
dec
aam
pop
push
and
cmpsb
or
nop
sbb
xchg
aas
mov
inc
lods
icebp
ret
cmp
sub
and
or
add
push
fisttpll
mov
and
lock
xchg
pop
push
xor
and
inc
lods
out
mov
inc
test
xchg
mov
add
pop
push
sbb
lea
push
and
fwait
pop
cmc
push
aas
and
stos
outsl
adc
testb
lock
adc
rorl
icebp
cltd
and
jne
xchg
inc
or
sub
rolb
or
jo
pop
loopne
js
push
lret
push
lock
cmpb
and
adc
lds
stos
sbb
lods
add
add
or
nop
fldcw
es
add
inc
add
mov
mov
pop
adc
mov
add
cltd
mov
call
lock
popf
or
jne
rolb
fstl
or
pop
les
adc
adc
or
ficoml
and
push
in
xchg
orl
xchg
adc
repz
add
pop
or
push
in
aaa
pop
adc
lods
inc
inc
inc
pop
nop
movb
pop
cvtdq2ps
mov
fisubrl
scas
push
pop
jmp
add
jmp
add
cmp
inc
data16
mov
dec
sbb
and
icebp
adc
jbe
pop
insl
popa
idivb
mov
inc
jnp
rolb
in
lret
dec
loopne
inc
jmp
cmpw
fiadds
mov
sbb
lds
add
xor
mov
or
dec
mov
aaa
ds
cs
int3
pop
outsl
aas
test
add
ljmp
popl
dec
data16
xchg
daa
add
mov
inc
xchg
adc
leave
and
push
fmull
mov
mov
shr
inc
add
sahf
inc
sub
jge
out
sbb
push
mov
je
cltd
dec
addr16
xchg
push
sti
hlt
push
xchg
cmpb
rorb
leave
jo
dec
fsubs
fmul
fidivrl
orb
clc
jp
xchg
sarl
inc
cwtl
jecxz
xchg
xchg
push
pop
and
push
scas
sub
call
ret
mov
pop
sub
jnp
mov
sbb
adc
push
sbbw
add
pop
add
js
cmp
mov
cmp
orb
sub
and
sbb
sarb
rorb
xlat
hlt
lock
cli
nop
push
cs
clc
mov
mov
adc
or
shr
add
push
cmp
addb
loop
call
rcrl
or
in
and
imul
mov
mov
pop
dec
push
imul
test
cmp
lea
pop
paddb
pusha
push
mov
jle
push
push
push
iret
pop
and
andb
and
inc
push
enter
enter
xchg
fwait
and
dec
repz
dec
ret
inc
pop
jae
cmp
addb
or
gs
popa
imul
jno
leave
js
test
ret
jne
scas
les
and
addr16
push
or
inc
add
sbb
pop
push
xchg
mov
sbb
in
ret
in
mov
scas
cmpsb
xor
ljmp
adc
cli
fbstp
sbb
add
fmuls
jg
call
mov
xor
pop
dec
js
daa
adc
aam
hlt
xchg
aam
jmp
fisttps
push
jmp
xchg
and
ret
sbb
rcrb
ds
daa
outsb
test
sub
es
xor
hlt
stos
int
adc
stc
xlat
mov
push
cmp
pmaxsw
mov
adcl
mov
mov
add
mov
jne
dec
lcall
sbb
or
adc
mov
push
pop
or
mov
push
loopne
or
insl
push
add
sbb
icebp
xchg
gs
pop
push
jl
sub
and
arpl
mov
lock
xchg
xor
mov
lret
push
divl
add
rcll
shlb
test
gs
lock
imul
insl
and
lock
or
pop
std
push
sub
sarb
xchg
push
add
lcall
dec
push
push
loope
fwait
adc
add
dec
dec
cmp
jae
pop
or
ret
shrb
dec
sbb
sbb
jmp
imul
pop
fcom
adc
xor
cmp
pusha
stos
movsl
out
pop
idiv
test
mov
clc
and
cwtl
inc
cli
push
push
jne
or
daa
push
mov
adc
add
in
fbstp
jo
outsl
and
insb
or
or
or
pop
jae
inc
add
out
sbb
sub
jmp
pop
cmc
mov
into
and
xchg
mov
add
xchg
hlt
fmul
xchg
add
pop
xchg
cmpsl
adc
ss
xchg
leave
or
inc
xchg
mov
xchg
mov
inc
inc
pusha
and
add
adc
fincstp
lea
and
jns
aas
push
or
setle
add
adc
cmpb
xchg
adc
and
lds
or
push
and
mov
aam
mov
stc
mov
andb
dec
xor
sbb
sub
adc
sarl
xorl
pop
insl
sub
mov
add
movsl
pop
inc
push
lods
add
test
je
ret
js
cld
add
adc
mov
cmp
jne
aad
cli
popa
test
add
dec
xchg
popl
jae,pn
sti
xlat
bound
dec
scas
out
popf
inc
imul
jge
test
enter
or
je
fisubs
je
or
lock
adc
and
inc
addb
pop
xor
xchg
xchg
push
scas
pop
shll
fisttps
or
push
xchg
jb
scas
out
fsub
and
sub
or
sub
loop
adc
dec
imul
lock
int3
enter
jnp
js
fs
aad
loope
cmp
add
insb
and
pop
jg
imul
xchg
push
call
jle
out
leave
cmp
xor
xor
cmp
mov
enter
shl
cwtl
jge
push
clc
xchg
mov
fidivs
and
shlb
mov
movsb
inc
mov
fldcw
dec
pop
add
pusha
aas
adc
push
addr16
or
xor
sarb
ret
jmp
dec
pop
cli
enter
sar
or
mov
cmp
inc
push
push
push
push
es
xchg
call
ja
mov
addr16
and
sub
pop
cmp
cmovne
rcrl
push
ret
outsl
or
ret
push
stos
decl
mov
fnstenv
or
pop
daa
and
ror
gs
cmp
fisttpl
cmp
add
pushf
movsl
imul
fcmove
inc
imul
mov
push
cwtl
insb
push
loope
sbb
push
mov
mov
mov
lods
test
fs
push
xor
mov
inc
sub
test
or
mov
pop
das
dec
mov
xor
pop
cmp
nop
movsb
and
ds
pop
js
mov
sbb
and
repnz
arpl
jb
mov
lds
aaa
pop
mov
push
xor
cmpsl
adc
rorb
sub
and
pop
sbb
add
jle
ljmp
xor
fldln2
adc
or
push
mov
lods
jg
pop
dec
jmp
gs
cmp
mov
daa
mov
shll
sbb
mov
xor
jb
adc
cmp
jg
sbb
or
in
movsl
add
jle
sub
mov
pop
and
jne
add
cs
sub
xchg
push
adc
and
dec
add
add
lea
push
mov
sahf
pop
inc
movsl
pop
inc
subl
pop
mov
inc
add
mov
mov
inc
inc
push
dec
andb
sbb
dec
out
or
pop
mov
jne
loopne
mov
pop
movsb
adc
icebp
lret
jnp
adc
adc
adc
mov
adc
pop
and
and
sbb
inc
mov
add
push
sub
pop
inc
rcr
mov
mov
daa
jmp
xchg
or
inc
lds
push
xchg
mov
jo
xor
sbb
pop
test
mov
ret
imul
xchg
subb
push
jle
dec
push
int3
leave
xchg
dec
sbb
jmp
add
adc
adc
mov
or
xchg
fcoms
xchg
lahf
xchg
push
ret
addr16
xor
jne
pop
add
push
adc
pushfw
and
jae
add
or
cmpsl
adc
sub
fstpt
adc
je
mov
xchg
ret
push
leave
loope
sbb
les
push
xchg
cmp
outsb
adc
inc
pop
dec
imul
mov
les
inc
les
jecxz
pop
and
push
pop
pushw
repz
gs
cmp
pop
cmpsl
adc
cmp
sub
pop
push
inc
imul
push
adc
push
sub
dec
cmp
mov
je
push
and
push
aas
sub
jns
outsb
into
mov
xor
push
fcomps
sbb
add
sbb
sub
mov
pop
andb
rol
sbbl
rolb
mov
add
addr16
test
call
aad
mov
je
or
pop
in
inc
push
or
jmp
lret
lods
mov
icebp
jne
inc
ret
sahf
in
sbbb
inc
add
and
xchg
mov
int
and
lods
cltd
and
loope
int3
adc
shll
cmp
sbb
dec
aas
cmc
add
jb
sar
ss
loopne
cmp
inc
or
cmp
daa
cmp
inc
or
push
mov
dec
testb
push
jmp
dec
test
ds
xchg
cli
and
nop
inc
adc
add
insb
iret
mov
in
adc
jle
and
or
add
mov
call
sbb
push
subb
mov
pop
dec
push
or
pop
add
mov
sarb
jp
pushf
push
ret
out
stos
movsl
orb
push
mov
gs
push
sbb
push
fwait
or
orl
push
testl
pop
imul
bound
nop
push
push
negl
into
sbb
aad
aam
lret
decl
mov
adc
shrl
icebp
sub
rolb
fs
fsubrl
pop
or
call
arpl
jae
add
or
popf
push
adc
pop
add
add
hlt
jne
test
xor
mov
jmp
inc
add
jne
fbld
add
andl
sbb
xor
stos
or
jbe
addr16
pop
sub
js
pop
or
xchg
push
daa
push
push
pop
mov
enter
insl
push
cmp
insb
ret
or
das
sub
outsl
adc
mov
jbe
jnp
in
or
push
les
inc
sub
push
or
and
mov
cmp
lods
divl
cli
push
mov
sahf
fwait
aaa
push
jge
sbb
mov
adc
bound
fucomi
aaa
dec
dec
in
aas
add
cmp
jle
aas
pop
push
sbbl
pop
das
add
jle
inc
push
xchg
fimull
maxps
add
cmpsl
sbb
lock
cwtl
xchg
negl
and
and
das
jae
and
xchg
roll
mulb
adc
pop
adc
cmp
clc
sbb
shufps
dec
adc
test
sub
cs
adc
xchg
mov
or
arpl
mov
inc
jl
dec
stos
arpl
out
xor
cmp
adc
and
pop
bound
out
imul
lret
push
inc
stos
loopne
pop
test
iret
rcr
pop
rorb
mov
inc
lahf
cmp
movswl
rolb
adc
push
cmp
or
js
mov
stc
sub
loopne
inc
inc
fsubrl
sti
sbb
mov
fldt
mov
mov
test
je
cs
and
fs
and
fisttpl
pop
popa
xchg
sbbl
hlt
jae
roll
adc
xor
imul
add
xor
rolb
xchg
js
shrb
adc
addr16
adc
push
inc
xlat
daa
sub
dec
bound
sub
mov
add
add
test
les
cmp
xor
inc
jg
mov
jns
mov
jne
fwait
or
sub
pushf
or
popf
loope
adc
imul
outsb
adc
push
adc
dec
gs
je
sub
pop
sub
int3
fnsave
dec
or
inc
outsb
pusha
jl
cmc
loopne
outsl
inc
lcall
push
insl
xchg
vmread
adc
lret
jb
and
loope
imul
pop
and
or
popa
mov
popa
into
push
xor
movsb
sbb
dec
test
flds
and
jle
inc
and
add
dec
sub
scas
jp
mov
iret
pop
or
lds
fists
kaddw
jecxz
jp
test
push
add
or
rclb
loop
lock
aaa
daa
xchg
push
int3
adc
cmp
push
dec
push
cmp
loopne
and
orb
jo
push
jbe
pop
je
pop
fs
data16
sbb
sub
adc
sbb
or
sbb
push
cmp
testb
fcomps
xor
fs
xorb
and
push
and
xor
js
fidivrl
pop
xor
add
jb
add
push
mov
cmpl
mov
or
sbb
adc
and
push
pop
out
outsl
pop
add
mov
dec
sbb
mov
shlb
xchg
nop
or
fstl
ret
or
fmuls
iret
push
imul
cmpsb
lock
fs
das
hlt
cmpl
faddl
sbb
cmpsb
pop
clc
xchg
out
shl
or
in
or
leave
xor
or
mov
sub
shrb
or
aaa
sbb
sbb
pushf
or
pop
add
jne
or
xor
movsl
cmp
das
add
insl
mov
mov
mov
xor
rclb
test
mov
sub
movb
idivl
or
jmp
cmp
xor
sbb
or
dec
inc
or
jle
xor
test
xchg
cmpsb
cltd
pop
add
mov
sub
sub
cltd
sar
mov
add
sahf
or
or
push
mov
mov
and
inc
inc
and
stos
test
mov
adc
movsb
daa
or
mov
adc
pop
jmp
push
cvtdq2ps
mov
mov
ja
jge
adc
lahf
lds
inc
shrl
mov
mov
mov
sub
cwtl
loop
js
jmp
sbb
cmp
clc
clc
xchg
push
test
and
dec
jmp
in
mov
int
lahf
rcrb
cmp
mov
or
and
cltd
loopne
push
add
test
lds
enter
mov
cld
stos
cmp
sbb
jle
dec
aam
sbb
shrl
fdivl
mov
dec
xchg
stc
mov
xchg
mov
cmp
cmp
xchg
mov
gs
aam
dec
rorl
pop
sbb
push
hlt
repz
mov
inc
cmp
xchg
or
daa
push
rcrb
add
stc
bound
lea
dec
and
das
add
jo
and
pop
sbb
mov
lea
adc
or
adc
mov
cmova
xchg
test
add
pop
dec
sbb
hlt
das
xchg
sbb
lods
mov
arpl
stos
mov
add
sbb
or
hlt
sbb
notl
fldcw
jbe
and
cmp
movsb
add
in
in
sub
add
push
aas
ja
clc
and
pop
pop
cmpb
les
sub
fsubrl
jne
call
cmpsl
sub
adc
jge
sub
mov
iret
or
push
shlb
push
jmp
dec
jne
xor
test
push
rorl
push
inc
pop
and
pop
add
jl
mov
cld
add
or
fisttps
aam
dec
int3
sub
push
cmpsb
add
popa
add
int3
push
test
sub
jg
push
lcall
hlt
and
dec
pop
sahf
pop
adc
and
mov
pushf
sbb
mov
push
dec
rclb
ja
cmpb
xchg
xor
add
push
add
sbb
lock
orb
or
rolb
push
adc
test
scas
sub
lret
pop
or
inc
and
mov
mov
pushf
lret
imul
dec
js
jns
mov
aaa
push
push
add
imul
aam
int
xchg
xor
aam
sbb
add
int3
es
fisttps
les
inc
push
insl
pusha
cmp
pop
les
cli
mov
enter
adc
jmp
add
sub
movsb
xor
push
adc
daa
mov
pandn
clc
sbb
mov
dec
repz
jbe
adcb
insb
adc
sbb
lds
out
xor
or
dec
movsb
mov
adc
or
fwait
or
inc
and
xor
fnop
or
sbb
arpl
push
or
xchg
insl
sbb
xor
dec
sbb
shlb
pop
adc
clc
add
shrl
jmp
repnz
pop
jl
divb
cltd
in
cmp
es
movb
enter
add
and
push
push
ljmp
inc
pop
scas
dec
loopne
mov
sbb
mov
pop
mov
inc
xorb
lock
daa
sbb
lret
test
inc
cmp
andl
lods
inc
loope
xor
js
jnp
gs
xchg
cmpl
push
add
xor
out
in
cli
mov
clc
cmp
jmp
inc
or
in
adc
subb
dec
sbb
and
in
add
stos
adc
orl
enter
mov
ret
imul
and
adc
dec
fisttps
lret
hlt
mov
xlat
push
add
dec
dec
push
or
sub
jecxz
addl
pop
imul
es
or
rcr
and
sub
mov
mov
or
hlt
sub
jmp
xchg
rol
sbb
jne
dec
aad
pop
out
or
or
adc
and
movsl
sbb
jo
daa
push
push
cwtl
ret
push
outsb
lret
addr16
je
cmpsl
and
pop
fnstsw
sahf
fnstenv
inc
mov
sub
dec
stc
push
mov
mov
popa
xor
dec
loope
mov
and
adcb
cli
lahf
shlb
fisttps
or
cmp
shll
ds
adc
stos
pop
push
call
int
fistps
lret
sub
sub
add
int
or
lods
leave
sub
cmp
push
sti
int3
ljmp
inc
dec
sbb
xorb
mov
inc
xor
add
rolb
pop
fmull
xor
call
mov
rcrb
loop
nop
dec
call
and
fldenv
mov
sbb
subl
call
or
popf
mov
sub
jne
xchg
js
push
jo
dec
sub
fadds
sbb
push
add
sub
lods
loope
pop
add
inc
loop
mov
add
xor
jg
adcb
add
je
aas
ja
fcmovb
xlat
sub
adcb
test
xchg
lods
mov
cmp
push
sbb
psubq
push
flds
add
adc
cmp
sub
leave
pop
test
dec
ficoml
add
int
push
pop
adcl
or
and
cmp
clc
mov
or
loopne
push
lods
loopne
add
dec
and
sub
or
cmp
scas
jmp
adc
pusha
push
mov
add
dec
lret
iret
adc
inc
pop
xchg
add
pop
xchg
adc
mov
shlb
sub
push
sub
wbinvd
repnz
insb
sbb
pop
or
pusha
test
inc
add
xchg
dec
ror
pop
jbe
dec
sub
mov
inc
push
add
xor
add
adc
pop
sub
mov
xchg
adc
dec
sti
jmp
or
or
sub
std
ja
popa
and
jecxz
mov
xchg
cmpb
jge
pop
push
dec
call
dec
push
leave
and
xor
inc
clc
clc
dec
shll
sub
adcl
dec
loopne
push
xorl
inc
movb
cmp
imul
mov
or
ret
shlb
lods
mov
add
shrb
dec
jge
fildll
sbb
lods
aas
dec
addr16
lods
mov
shld
add
xor
clc
jge
cmp
aam
clc
xor
dec
imul
dec
shll
call
fisttpl
pop
ss
hlt
or
push
enter
xor
aad
pop
push
sub
arpl
mov
cmp
sub
arpl
sar
clc
setl
cmpl
les
or
stos
xchg
jae
pop
xchg
test
cs
push
jb
pop
sbb
or
iret
sbb
aaa
pop
fdivs
inc
es
cld
and
or
test
cmpsb
or
jne
cmpb
in
rolb
xor
add
mov
dec
cmpsb
add
sbb
xor
int3
mov
pop
or
mov
lret
insb
jl
sbb
mov
punpckhwd
add
iret
loope
jmp
iret
dec
or
testb
mov
xor
push
adc
lret
add
adc
ret
in
je
jle
jmp
dec
mov
test
jmp
jne
push
dec
push
push
jmp
cmp
add
mov
add
inc
jbe
ret
add
test
mov
adc
adc
and
clc
and
fcmovne
dec
cld
mov
push
jg
adc
dec
xchg
push
cmp
sbb
inc
loope
in
pop
fildll
dec
test
int
lahf
dec
sub
sbb
pop
inc
adc
aam
mov
lds
fcoms
push
gs
enter
sbb
xchg
push
pop
lret
mov
rolb
je
flds
sbb
ret
add
test
fisttps
cmpb
inc
je
and
mov
jne
cmp
out
pop
jbe
xchg
pop
arpl
popa
test
inc
faddl
sbb
push
push
test
ljmp
cmp
ja
je
pop
cmp
mov
mov
int3
xchg
loopne
popa
mov
call
inc
fildl
mov
popa
sbbl
repz
popa
mov
push
fs
mov
push
fldcw
fistpll
or
sbb
xchg
test
pop
js
add
xchg
jo
inc
cmp
aas
dec
jp
outsb
fadd
loopne
movb
shl
shrl
fwait
jl
push
roll
call
mov
jg
sbb
insb
or
mov
xchg
add
mov
cmc
pop
aaa
mov
sbb
mov
icebp
xor
enter
dec
insl
daa
cmp
push
in
xchg
cs
xchg
sahf
imul
mov
test
jle
add
pop
jmp
mov
jno
jns
sub
mov
mov
cmpb
push
sbb
inc
sbb
popa
adc
es
inc
inc
dec
dec
stos
pop
js
inc
mov
mov
xor
fiaddl
das
pop
jg
inc
inc
jecxz
fwait
jne
sti
dec
adc
shr
pop
push
jmp
mov
popa
pop
pusha
pop
ret
push
cmc
push
mov
push
mov
les
aaa
push
fwait
pusha
mov
jp
adc
stc
stos
xor
add
ret
push
add
pop
movsl
add
fadd
fidivl
shlb
and
cmc
pop
or
scas
clc
pop
mov
fimull
addb
jne
popf
pusha
xor
or
adc
rcl
js
mov
adc
pop
push
rcrb
insl
ffree
adc
push
jne
xchg
xchg
xlat
pop
ja
push
adc
lods
adc
mov
pop
and
mov
xchg
fdivl
fistps
adc
inc
dec
inc
cmpsl
mov
or
dec
jne
xor
inc
mov
sbb
cmp
and
pop
jmp
xchg
add
data16
sub
lcall
inc
adc
mov
or
adc
sub
xor
insb
outsb
jbe
sti
ljmp
cmp
adc
mov
or
popa
lds
sub
insb
pop
lock
add
ffreep
mov
cmp
adc
and
push
popa
shll
adc
insl
inc
pop
adc
mov
or
pop
mov
xchg
cmp
mov
les
int
cmp
inc
inc
sbb
insb
sbb
mov
or
leave
add
lcall
and
mov
enter
mov
test
mov
les
add
jb
lea
icebp
ret
pop
sar
mov
inc
and
xchg
cmpsl
sbb
cmpsl
inc
cmp
aaa
or
adc
adc
xchg
xor
add
sbb
cmp
incl
sbbl
inc
mov
movsl
xchg
in
loope
jno
lods
pop
mov
ljmp
shll
cmpsb
jnp
imul
adc
fimuls
out
cmpl
test
or
adc
sub
fdivrs
lock
pop
sbb
and
adc
mov
pop
sbb
pop
or
gs
mov
imul
sti
xchg
cmc
sbb
ljmp
test
fs
adc
push
jb
je
cmp
aam
dec
sub
aaa
inc
sbb
xor
or
ds
mov
sbb
loope
ret
lret
pop
fnstenv
add
xchg
mov
pop
cmpsl
test
decl
cwtl
fldl
loop
imul
and
aam
or
or
push
mov
add
mov
xor
ret
add
cmpsl
sbb
pop
imul
mov
sbb
adc
je
jle
mov
sbb
and
push
push
lret
insb
mov
pop
adc
nop
mov
push
loope
pop
iret
pop
sbb
sbb
mov
or
cmpsl
inc
xchg
test
add
adc
jge
fldenv
push
ficoms
sbb
hlt
xorl
add
popf
sub
or
gs
pushf
repnz
adc
xchg
jge
push
adc
sbb
jae
movl
hlt
or
jno
cmp
or
mov
cmp
fmuls
pop
in
cmpsb
ljmp
mov
lea
ret
inc
jg
pop
mov
dec
cmp
push
pop
inc
mov
rorl
cmp
cmp
sub
adc
inc
push
mov
jnp
add
push
xor
pusha
mov
sbb
add
mov
adc
xor
push
inc
add
ret
adc
cmpsl
xchg
dec
insb
jecxz
or
out
or
popf
movsb
push
adc
and
or
fstp
clc
adc
clc
add
or
xchg
pushf
iret
adc
or
and
sbb
lcall
adc
add
cmc
fisttps
mov
xor
call
add
or
aam
sub
dec
in
jbe
xchg
pop
mov
adc
push
fsubs
ret
loop
into
add
push
add
mov
cmp
mov
pop
sbb
jb
jmp
sbb
sbb
push
dec
scas
add
mov
push
cmpb
insb
or
xchg
cmpb
pop
inc
cltd
testb
int3
or
or
test
fs
mov
pushf
push
insl
adc
imul
stos
add
ret
mov
lds
test
je
fsubrl
sbb
dec
adc
dec
iret
inc
cld
inc
or
loopne
push
lea
mov
push
mov
adc
ja
dec
mov
pusha
mov
mov
or
loopne
aam
push
adc
fsubrs
add
fcmovnbe
pop
xchg
test
sub
shlb
adc
rolb
loopne
dec
xchg
js
and
div
test
dec
or
lock
or
inc
lcall
add
sub
adc
xchg
and
lods
subl
adc
xor
in
pop
shlb
pop
add
jne
push
adc
rclb
xchg
in
arpl
ret
xchg
iret
popa
push
xor
push
cmp
mov
inc
lods
inc
adc
jmp
aad
inc
or
sub
push
mov
push
push
mov
inc
inc
dec
inc
inc
pop
dec
sub
dec
sub
and
inc
int3
or
rolb
mov
data16
cli
and
rorb
insl
cltd
fcoms
insb
jmp
sbb
adcb
or
nop
in
lea
cltd
inc
dec
test
lods
pop
and
push
inc
jg
inc
js
cld
test
sub
mov
stos
push
push
rorl
inc
dec
push
dec
fistl
imul
or
sbb
js
cpuid
cmp
adc
aas
pop
adc
xor
pop
repz
movsb
ja
jo
dec
shll
js
jmp
jbe
adcb
daa
sbb
or
orb
sub
dec
imul
bound
adc
dec
inc
test
add
jne
sbb
and
pusha
rorb
add
ss
inc
pop
imul
and
mov
and
rorb
sbb
ficoms
or
xchg
adc
xchg
push
sub
les
das
sbb
ret
sub
add
add
jg
fneni(8087
add
cmp
and
jno
adc
xchg
adc
add
cmp
dec
xor
pushl
dec
sub
cmp
jge
fimuls
push
and
popa
adc
and
or
icebp
fucomp
sbb
add
ret
idivb
imul
testl
scas
sbb
or
inc
add
ret
push
pop
xor
scas
or
cmp
daa
jno
xchg
fiadds
dec
xchg
push
push
add
or
push
rcr
rclb
sub
int3
gs
lods
test
ret
inc
or
xor
mov
xor
dec
jl
inc
das
dec
pop
push
nop
pop
das
and
sub
and
fstps
lock
xchg
pop
mov
in
jne
add
add
jp
orb
inc
mov
aad
clc
adc
mov
pushf
leave
jne
jmp
lcall
dec
xor
dec
sbbb
dec
pop
orl
insb
ss
cld
rcl
adc
insl
add
lods
mov
adc
or
cmp
adc
push
lock
sub
add
push
inc
xor
mov
xchg
cltd
call
hlt
mov
push
daa
push
lock
dec
or
sbb
mull
das
je
or
jle
ds
inc
or
jge
xor
out
sbb
mov
and
dec
arpl
inc
fmuls
and
sbb
sbb
and
ds
or
cmpsl
xor
or
es
add
dec
negb
outsb
loopne
or
outsb
xor
xchg
aad
in
push
push
je
add
addr16
pop
jmp
pop
push
sarb
push
hlt
xor
sahf
or
fidivs
and
pop
mov
inc
mov
repz
and
int3
xchg
push
lea
mov
pop
cmp
leave
push
inc
aaa
sub
dec
dec
jg
sbb
popa
loope
dec
lock
in
pop
lock
dec
mov
mul
shlb
test
je
rclb
std
mov
push
xchg
or
jno
adc
das
cmpsb
shl
jp
in
cmp
xchg
push
and
xor
fistpl
fcmovnu
push
and
add
int3
push
add
xor
inc
sbb
imul
add
popa
lea
sbb
mov
lahf
or
or
pusha
aas
outsb
push
jle
adc
mov
out
mov
jbe
ja
fisubl
sbb
mov
inc
fcoml
push
pop
jle
sub
push
inc
shll
jge
data16
and
inc
jb
mov
test
or
cmp
cmp
into
lods
mov
add
lea
inc
dec
fisttpl
push
test
ror
mov
rclb
enter
cmpsb
popa
xor
adc
in
push
int3
mov
jmp
ja
lret
sub
add
js
dec
push
in
pop
mov
lds
add
mov
lock
jecxz
cmp
dec
add
mov
mov
add
push
and
mov
ret
inc
or
adc
xchg
or
in
and
je
sub
inc
pop
bound
or
adcb
insl
inc
fiadds
dec
and
mov
adc
insb
cmp
pop
sbb
nop
and
add
ret
sbb
ja
sbb
pop
pop
jge
orl
dec
out
inc
mov
jo
dec
push
ss
or
or
push
dec
xchg
or
inc
inc
xchg
mov
jno
movsl
mov
xchg
xor
cwtl
xchg
jmp
sbb
cwtl
add
add
inc
adc
data16
xchg
inc
pop
add
sbb
sub
loopne
xor
xchg
or
sub
mov
inc
enter
add
inc
lock
mov
aaa
add
int3
ss
mov
and
or
adc
pop
mov
pusha
movsl
bound
add
and
push
adc
test
cmpsb
shll
test
sbb
sub
jno
inc
iret
and
shlb
adc
sbb
not
adc
xor
dec
lods
dec
mov
pop
cld
cmp
and
add
lret
or
mull
ljmp
lret
mov
add
adc
dec
cmp
mov
imul
sbb
inc
scas
in
cmp
arpl
in
add
mov
inc
dec
and
scas
or
stc
pop
add
add
cmc
dec
outsl
push
mov
sahf
out
call
push
or
jo
jo
cmpsb
xchg
lret
xchg
or
mov
cmp
pop
mov
xor
rcrl
adc
or
xor
push
sub
lods
inc
inc
or
aad
leave
dec
cwtl
cmpsb
xor
shrb
lods
or
or
sar
jns
adcl
mov
pusha
sub
dec
xchg
mov
sub
fs
jne
add
mov
and
hlt
add
js
or
inc
rclb
mov
cmp
cmp
cltd
sbb
or
pusha
aam
xchg
xchg
in
inc
sbb
lahf
into
xchg
push
dec
push
pop
push
adc
or
in
repnz
test
sbb
push
or
addr16
out
cmp
mov
rolb
fs
sarb
adc
cmp
adc
push
cli
js
xchg
jae
movsl
dec
fcoml
cmp
cmpsl
dec
cmp
cli
xor
add
mov
rol
sbb
pop
or
xchg
or
ja
xor
mov
fs
inc
lock
jge
xchg
pop
popf
inc
adc
pop
push
and
stos
js
ljmp
push
xchg
es
test
mov
or
clc
rcrb
rcrl
shlb
inc
cmp
xchg
add
mov
xchg
add
inc
into
loope
arpl
mov
shrl
sarb
or
idivl
or
mov
mov
mov
jle
jecxz
enter
test
das
pop
mov
xchg
fcoml
outsl
cli
or
movsb
in
movsl
mov
or
dec
jne
fisubrs
ja
daa
xor
jne
sbb
cmp
js
dec
sbb
mov
rcll
cs
jecxz
push
xchg
jmp
mov
inc
pop
inc
sbb
pop
or
stos
sarb
sbb
inc
push
ja
and
flds
lods
add
daa
lea
ja
out
ja
push
mov
mov
cmp
add
jbe
fistl
mov
push
sbb
dec
adc
js
add
loope
xor
or
adc
lret
mov
xor
mov
xchg
pop
ret
inc
push
and
xor
adc
mov
insb
std
xor
mov
add
push
jne
mov
inc
adc
push
inc
std
or
cs
sub
sbb
inc
dec
add
test
scas
ret
add
inc
dec
inc
inc
lods
cltd
sbb
pop
xchg
imull
adc
clc
inc
popa
adc
cmpsb
imul
lods
mov
sbb
inc
xchg
sbb
pop
imul
ret
scas
adc
adcb
or
dec
rorb
sbb
aad
clc
mov
and
mov
js
les
pushf
fiadds
icebp
sbb
xchg
cli
hlt
frstor
or
ss
out
incb
cltd
add
inc
sbb
mov
push
das
mov
xchg
es
mov
lods
dec
add
repz
faddl
lret
sbb
cmp
adc
xchg
xor
mov
xor
dec
cmc
xor
cmp
roll
mov
or
push
cmp
lcall
sbb
hlt
jge
inc
mov
pop
lock
sbb
dec
and
push
cmp
out
test
or
lcall
loop
cmp
arpl
jmp
clc
outsb
lods
sub
imul
mov
and
dec
test
daa
cmpsb
fnstcw
dec
dec
mov
xchg
mov
stos
aaa
push
push
add
pop
divb
jne
adc
lea
adc
add
pop
add
xor
jo
adc
jne
pop
or
sbbl
mov
loopne
fst
pop
cmpsl
push
fwait
les
and
and
call
xchg
shrb
faddp
push
or
adc
jnp
and
xchg
repnz
cmp
loope
jb
pop
js
jo
lahf
adc
push
dec
sbb
imul
and
gs
and
sbb
clc
daa
insb
pop
push
push
into
leave
mov
pop
sub
mov
popf
lock
imul
cmp
insb
je
pop
fsts
pusha
addb
pop
dec
cmpb
fiaddl
mov
add
jmp
in
arpl
mov
shll
pop
lret
and
or
lods
xor
insl
andb
iret
mov
push
scas
js
pop
loopne
stos
insl
sbb
lock
sbb
mov
cwtl
filds
inc
andl
fdivrs
test
push
adc
shl
inc
xchg
xor
add
clc
or
inc
addr16
adc
lret
lods
inc
inc
push
pop
int
mov
das
cltd
xor
push
adc
mov
adc
add
or
xchg
lret
andb
or
loopne
arpl
or
icebp
and
pop
cld
je
xchg
mov
ret
popf
inc
mov
cmpsl
out
jle
adc
xchg
rcl
jp
pop
mov
add
popa
js
rorl
or
and
pop
sub
sbb
loope
add
add
adc
rolb
mov
mov
mov
test
or
push
pusha
in
push
add
sbb
aad
cmpsb
mov
sbb
nop
jl
sbb
and
ss
sarl
ss
ss
es
sub
rcrb
sbb
or
xor
loop
lock
inc
and
adc
ret
test
xchg
mov
mov
and
shll
dec
sub
push
xchg
adc
iret
mov
and
rcrl
pop
fst
adc
fxch
inc
mov
or
xchg
and
xchg
out
aam
mov
xor
inc
jo
adc
cmpsb
pop
insb
inc
cmp
sub
push
add
data16
pop
sub
mov
jge
jbe
jno
int
sub
cmp
add
adc
addr16
mov
mov
and
aaa
adc
lea
flds
push
nop
xchg
jnp
insl
push
adc
shrb
push
lahf
lea
test
jmp
adc
les
and
je
cld
push
jb
lock
js
cmp
aam
pusha
int3
push
lods
insl
popf
fdivs
in
add
inc
les
jg
ret
jg
push
cmp
std
xor
mov
sbb
cs
sub
push
pop
insb
pop
sub
push
mov
int3
and
fstpl
xchg
sub
add
or
cmpl
movsl
sbb
dec
or
mov
lock
lahf
int3
adc
and
mov
js
xor
adc
or
je
dec
pop
adc
add
andb
sub
add
mov
add
or
pop
adc
sbb
int3
data16
inc
jp
mov
inc
sete
lcall
jo
dec
adc
insl
cmpl
je
jne
and
dec
push
mov
inc
xchg
and
rclb
jp
out
add
add
addl
outsb
fimull
and
dec
dec
sbb
sub
push
je
mov
cmp
xchg
jg
dec
jmp
mov
pop
and
rorb
inc
cwtl
mov
push
lcall
xchg
or
pop
aaa
adc
ret
fisttpl
or
cltd
cmp
in
outsl
cmp
fdivrs
add
ret
and
testl
shrb
mov
add
inc
push
adc
sub
pop
dec
sub
mov
adc
and
or
sub
dec
mov
cmp
and
add
and
dec
mov
push
mov
mov
sub
js
push
test
mov
xchg
aam
and
enter
dec
push
push
imul
cltd
addb
mov
gs
xchg
sbb
mov
sub
sbb
adc
sbb
mov
lods
les
or
lds
mov
xlat
enter
mov
negb
and
shrb
pop
dec
loopne
rolb
mov
mov
sub
sbb
adc
xchg
testl
pusha
aaa
ss
adc
add
ss
inc
pop
add
mov
xlat
cmp
push
pop
xor
out
daa
mov
jmp
push
push
pop
mov
xor
jg
push
ret
xchg
das
add
shll
loopne
in
add
jo
pop
mov
push
insb
cmpsl
or
push
add
inc
fcmovnu
arpl
add
cmpl
dec
stc
popl
rorb
adc
das
or
cmp
xorl
jmp
xor
movsb
mov
mulb
shlb
inc
icebp
imul
mov
nop
addr16
mov
adc
lsl
aad
test
and
jge
inc
inc
rclb
or
jo
ret
or
loopne
push
xor
pushf
push
jo
inc
dec
push
adc
mov
add
sahf
push
int3
das
and
pop
lods
movsl
inc
fisubl
dec
in
lret
fldl
fdiv
adc
push
pop
rol
sub
and
push
sub
add
dec
push
push
je
jg
sbb
add
jno
mov
or
sub
sub
sbb
mov
mov
inc
dec
cmp
fisubs
inc
sahf
test
ds
push
push
and
inc
sub
insl
jl
rolb
lea
iret
add
outsl
add
lret
or
pop
imul
fiaddl
mov
insb
jnp
fcoml
xor
add
aas
adc
add
pop
adc
push
jmp
push
xchg
cmpl
inc
mov
mov
inc
adc
sbb
push
or
sahf
sub
mov
pushf
and
sbb
or
or
imul
orl
xchg
stos
cmp
mov
loopne
sub
adc
push
push
popf
addr16
push
cmovb
mov
mov
sub
xchg
mov
out
pop
or
and
push
mov
or
shr
cmp
mov
or
inc
test
mov
and
sarb
cmpsl
and
imul
push
mov
es
add
dec
or
dec
loopne
fs
push
jae
and
fs
inc
xor
push
sarl
aaa
push
aaa
inc
nop
data16
sub
pop
push
mov
pop
dec
in
pushf
xchg
mov
test
rclb
test
lods
hlt
dec
enter
add
or
xor
dec
cmpsl
adc
adc
daa
adc
in
push
push
push
dec
dec
dec
dec
push
lahf
inc
cwtl
fdiv
dec
dec
inc
xchg
insl
insl
cltd
fwait
sub
dec
push
inc
and
xor
addr16
push
gs
mulb
dec
push
cwtl
or
out
mov
pushf
jne
das
push
mov
sub
mov
push
aaa
mov
dec
jae
inc
in
mov
mov
inc
out
push
inc
xchg
dec
jae
pop
in
fmuls
dec
call
cmc
sbb
push
sbb
rcrb
mov
mov
inc
add
mov
push
xchg
mov
or
or
mov
fsubs
lahf
xor
pop
sub
or
ret
sub
push
fcmovnb
lea
or
xor
push
adc
ss
loopne,pn
jb
mov
js
and
and
ret
xchg
xor
hlt
stc
push
add
es
stos
add
addr16
pop
fimuls
mov
shl
pop
sub
or
pop
mov
mov
es
dec
sub
nop
dec
dec
or
adc
inc
mov
cltd
sbb
imul
dec
jo
push
inc
dec
mov
mov
sbb
popa
sbb
or
jp
loop
stos
jns
xchg
cmovp
adc
aaa
fidivs
inc
mov
xor
dec
dec
xlat
sub
and
dec
push
push
aaa
cmpsb
mov
nop
ret
xchg
mov
xor
incb
sbb
push
and
sbb
mov
sub
inc
enter
mov
inc
aam
nop
mov
rorb
mov
shrl
jmp
pop
sar
rcll
pop
pop
sbb
inc
or
or
add
push
jbe
ret
pop
jp
add
das
aaa
cli
sub
sbbb
pusha
lods
rclb
add
movb
sub
and
add
or
sub
outsl
lods
sub
push
mov
cmc
aad
movl
movsb
mov
and
add
sbb
cmp
das
or
sub
xor
push
sbb
and
adc
or
adc
inc
loop
sarb
sub
aam
adc
xor
sub
test
inc
pusha
adc
xlat
add
adc
out
inc
pop
jbe
mov
or
lahf
sbbb
and
and
mov
mov
and
sbb
jecxz
movsl
mov
pop
andl
fsubrs
dec
xor
add
mov
bound
mov
sub
mov
sbb
repz
add
fisttpll
loopne
cmp
cmp
mov
ja
sysenter
aad
push
iret
aas
sbb
dec
sub
inc
or
pop
mov
loop
sub
adc
xor
sbb
dec
add
rolb
dec
mov
add
popa
dec
js
ror
andl
xchg
cld
outsb
into
pusha
sbb
pusha
jecxz
or
imul
mov
push
push
xchg
iret
lds
cmp
andl
adc
push
mov
ret
mov
dec
sahf
movsb
in
in
push
sub
sbb
cmc
jo,pt
mov
xor
jl
dec
inc
leave
push
push
push
push
or
pushf
cmpsb
mov
dec
cmpsb
jae
daa
push
mov
or
mov
dec
imul
mov
push
mov
outsl
add
arpl
insb
push
fdivp
fisubrl
imul
insl
inc
outsl
pop
js
out
jnp
fsubl
add
es
jb
jb
ja
jnp
popa
or
pop
fidivrl
jae
jbe
es
int
sti
pop
gs
pop
jo
addr16
jb
sbb
out
sahf
addr16
pop
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
imul
daa
mov
cmp
pop
je
jo
jb
aaa
insb
in
push
arpl
jns
jb
lods
loope
pop
pushw
das
add
xor
imull
scas
aam
rolb
add
addb
call
and
movsl
inc
add
sbb
mov
cmp
push
push
outsb
je
nop
mov
add
push
and
nop
mov
in
movlps
and
push
das
mov
mov
loopne
mov
cmp
and
xchg
shrb
rcrb
nop
lods
aam
add
pop
push
sub
push
movsb
inc
lea
aaa
pop
outsl
push
pushf
pop
or
es
lcall
clc
mov
mov
jne
fdivrs
cmp
out
mov
dec
mov
lods
pop
add
or
jl
inc
nop
sub
push
sahf
xchg
xor
test
ret
mov
fwait
add
subb
stos
imul
sbb
in
test
xor
das
push
lea
dec
adc
dec
aas
cmpsb
mov
notl
cld
adc
mov
dec
sub
insb
rol
dec
lea
add
pop
jne
jo
push
mull
adc
sub
or
pop
mov
rcll
rclb
cltd
pusha
andb
pop
xor
test
push
cmp
push
sbb
aas
fadd
push
aam
and
pop
adc
sbb
sbb
adc
add
movsl
repnz
or
mov
push
or
inc
mov
sbb
jbe
inc
fcoml
ja
cmp
adc
in
inc
fisttpl
ds
shlb
repz
clts
sbb
and
cmp
aas
add
xor
add
adc
add
add
push
scas
pop
aaa
push
loopne
ds
out
lret
outsl
adc
insb
add
add
push
add
pop
or
out
sahf
decl
or
or
or
or
out
sahf
adc
adc
jns
sbb
sbb
mov
jmp
sbb
push
pop
and
and
and
loopne
fadds
cmp
repz
lret
out
lcall
inc
sahf
out
sahf
push
arpl
cmpsl
jns
out
mov
sahf
out
out
or
inc
push
bound
out
jo
mov
out
ror
in
pop
sbb
repz
cs
xchg
imul
dec
in
lret
or
push
mov
or
push
cs
push
xchg
dec
sub
in
lret
sub
mov
adc
adc
test
cmp
sub
xchg
lret
push
inc
pop
dec
movsb
jb
in
dec
sbb
pop
push
mov
sub
sbb
popf
xor
imul
pop
and
push
xchg
cmpsl
dec
and
or
sbb
push
push
test
ljmp
popa
test
lock
ret
or
mov
imul
add
popf
inc
dec
pusha
push
adc
inc
adc
mov
js
add
dec
sahf
popa
mov
pop
push
dec
popa
imulb
clc
push
adc
dec
je
push
ljmp
or
rclb
nop
out
sub
pop
and
inc
sbb
push
mov
loopne
movb
or
jae
sbb
pop
dec
int3
mov
adc
cmpsb
xor
mov
and
das
push
rcrb
lea
inc
imul
push
pushf
insb
mov
ret
rolb
addr16
adc
xor
lds
fldcw
subl
sbb
xor
inc
xlat
shlb
mov
loopne
repnz
or
movsb
es
mov
inc
inc
stos
or
mov
push
mov
sbb
shll
fisttpll
dec
loop
or
out
mov
jl
fnstsw
push
or
out
dec
test
jle
and
int3
xor
rcrl
sbb
testl
jnp
sub
push
dec
clc
dec
push
fldl
fsub
repnz
add
jl
pusha
mov
insb
push
rcll
fmulp
inc
ljmp
adc
imul
fiaddl
xor
pop
addr16
adcl
push
xor
stos
adc
pop
je
dec
or
or
mov
mov
push
inc
mov
push
aas
and
mov
out
xchg
movl
adc
inc
mov
mov
xor
add
ja
out
ret
and
outsl
shlb
ss
nop
fcmovb
mov
sbb
rclb
mov
xlat
adc
inc
inc
mov
dec
stos
push
jl
cmp
std
mov
add
push
test
cmp
and
insb
adc
cmpb
cmp
inc
insb
sbb
cs
jne
or
or
cmpsl
push
jge
or
les
xor
xor
fstl
pop
inc
mov
or
add
jo
push
ret
adcb
xchg
orl
dec
lret
and
out
and
pop
fld
jnp
or
xlat
sub
jno
out
pop
or
in
lock
push
addl
push
sbb
add
xbegin
popa
sub
adc
pop
add
add
aaa
hlt
adc
cmc
push
mov
loop
sbb
xchg
cmp
ret
scas
pop
daa
insl
mov
sarb
push
rol
jnp
add
stos
movsb
out
addr16
test
or
xchg
movsl
in
xor
imul
xchg
jns
jp
lahf
adc
jo
cmpsb
cmpsl
nop
cld
xor
xchg
jno
push
aaa
jae,pt
push
xchg
xchg
push
ret
xor
pop
pop
pop
mov
lahf
mov
loope
cmp
mov
jecxz
sub
enter
jmp
jg
mov
mov
std
or
inc
xlat
mov
mov
cmp
adc
add
and
lcall
push
cmp
test
cwtl
jo
xchg
sub
add
lea
inc
dec
faddp
inc
mov
incl
cmp
adc
cwtl
push
pop
add
lock
cmp
lock
push
call
lret
push
adc
adc
mov
fdivr
and
nop
push
push
out
mov
ret
and
faddl
xor
stos
sbb
sbb
movsl
stos
test
orb
imul
jnp
dec
sub
and
dec
icebp
push
inc
mulb
push
sbb
mov
mov
inc
cmpsl
stos
loope
loopne
cli
bound
inc
cmpl
cs
clc
xlat
inc
clc
push
and
jle
pop
and
sbb
xor
adc
sub
and
inc
push
inc
loop
add
rorl
pop
movsb
fistpl
inc
xor
sub
add
gs
add
inc
push
sarb
pop
addb
inc
imul
mov
rcl
inc
pusha
jne
adc
shll
push
in
inc
push
ss
xchg
std
insb
push
inc
pop
loop
push
outsl
rolb
inc
mov
fwait
adc
imul
inc
xchg
pop
inc
or
mov
sub
mov
mov
dec
cmp
pop
sub
add
push
xchg
pushf
outsb
fadds
xchg
and
movsb
push
or
clc
pop
push
sub
mov
dec
pop
in
es
dec
pop
fmull
jmp
mov
sbb
clc
pop
mov
jg
pop
jb
mov
nop
imul
sbb
daa
jl
rol
xor
jne
int3
decl
xor
adc
cmp
mov
add
in
add
mov
adc
jo
adcb
jle
nop
mov
adc
sub
inc
fdiv
mov
dec
jae
leave
dec
xor
gs
movsb
fisubl
cmpsl
lock
ror
lcall
adc
xor
mov
jne
es
mov
xchg
lcall
les
mov
or
inc
push
inc
test
inc
inc
lret
test
jne
aaa
fsubr
sbb
jmp
cmp
and
and
je
imul
aad
stos
outsl
sbbl
aaa
sub
pop
mov
and
adc
ja
inc
or
mov
fiadds
roll
lock
or
sub
add
ja
or
rcr
test
xor
or
or
adc
lret
lcall
jl
pop
push
cwtl
mov
lock
sbb
loopne
and
cmpsl
xor
sbb
dec
repz
es
mov
mov
jmp
sbb
and
jecxz
lahf
ljmp
cs
fildl
mov
pop
add
fwait
insb
and
pop
inc
dec
xor
dec
inc
dec
dec
icebp
rorl
cmp
mov
mov
xor
xor
add
inc
loope
mov
bound
pop
insb
pop
sahf
pop
cmp
sbb
in
mov
xchg
in
shrb
test
aad
mov
cmp
inc
dec
insb
loopne
mov
push
push
les
mov
mov
iret
dec
loope
loopne
test
sbb
pop
push
cmp
inc
pushf
add
add
ret
std
adc
aaa
add
lahf
sarb
add
fldt
sub
js
cmp
mov
sarb
icebp
mov
sub
inc
jno
push
cwtl
dec
push
add
lock
inc
add
jle
imul
insb
sub
mov
sub
mov
push
mov
mov
insl
jecxz
and
js
movsl
dec
sbb
lock
test
mov
xor
in
pop
repnz
mov
imul
jo
mov
cmpb
xor
test
jp
jmp
cwtl
xlat
xor
add
push
sub
cmp
xor
or
shl
in
add
imul
adc
jl
test
inc
scas
push
mov
lds
subl
xchg
mov
and
lock
dec
in
and
dec
in
sub
clc
call
dec
pop
xchg
shll
cmp
sub
loope
inc
stos
lcall
mov
mov
inc
les
pop
jge
push
mov
movsb
into
outsl
sub
gs
or
sub
in
cmp
sbb
in
sbb
add
inc
test
movsl
sbb
repnz
jns
inc
nop
lret
pop
in
mov
sbb
test
push
ja
adc
sub
out
inc
fcoml
lcall
daa
and
and
dec
daa
cs
cmp
daa
sbb
mov
inc
out
xchg
scas
dec
jbe
add
stos
or
xor
inc
in
inc
adcb
in
in
ret
inc
stos
xchg
adc
fwait
dec
addl
cli
cli
push
or
add
or
add
push
add
outsl
or
sbb
and
jne
push
mov
jp
or
test
call
out
sub
mov
dec
and
rol
adc
cltd
adc
cmpl
pop
and
and
adc
mov
cmp
and
das
cld
jb
push
sbb
je
push
pop
pop
cs
cmc
dec
inc
into
bound
and
in
ds
add
bound
divb
mov
addl
js
call
or
mov
xor
inc
or
adc
imul
dec
jo
inc
mov
adc
inc
mov
dec
call
test
adc
cmovp
inc
pop
ret
push
push
mov
adc
dec
pop
cmpb
inc
sub
cmp
or
incl
into
lock
jo
ds
cmpsl
add
ja
pop
pop
dec
call
mov
xchg
xchg
in
inc
mov
and
push
inc
sbb
push
pushf
xchg
fcmovb
ficoms
mov
inc
dec
mov
pop
out
mov
pop
push
inc
scas
push
push
adc
pop
fcmovb
jo
xchg
shlb
xor
mov
cmp
inc
testl
out
add
fcoml
add
inc
xchg
adc
fs
lea
mov
xchg
out
test
aam
jb
jmp
pop
push
add
js
inc
mov
lock
popl
pop
and
fiadds
repnz
inc
test
out
jns
push
enter
sub
push
adc
push
push
push
and
push
cmp
sub
pop
and
inc
ljmp
pop
loopne
pop
xchg
nop
pop
dec
inc
or
cli
inc
or
sub
das
movl
nop
push
cmp
aaa
out
fwait
in
jmp
push
cld
pop
fidivl
pop
clc
out
add
add
jbe
roll
push
add
inc
loop
js
outsl
out
jecxz
gs
int3
stc
sub
or
push
push
lahf
pop
sub
int
inc
in
pop
fcoml
cmp
and
in
jmp
adc
dec
inc
adc
repz
mov
push
cmp
iret
repz
mov
repz
loopne
call
in
lock
clc
add
andb
xor
cwtd
ja
loopne
pusha
pop
xchg
add
iret
sbb
dec
addb
xor
add
cwtl
fstp
add
test
sbb
or
mov
push
push
add
dec
out
fiadds
orl
sub
and
shlb
add
xor
xor
cmp
and
push
push
lea
adc
andl
and
dec
loop
sub
lods
dec
cmp
movsl
ds
flds
loopne
cmpl
inc
movsb
jnp
dec
fs
sarb
jo
clc
sbb
iret
xor
mov
add
fs
fmulp
mov
adc
or
add
scas
es
int3
or
adc
and
mov
jo
xor
ds
and
inc
add
inc
mov
inc
dec
sbb
test
sub
pop
jmp
sbbb
cmp
movl
dec
and
xor
js
add
or
lds
adc
add
adc
and
rcl
cmp
pop
and
aaa
xor
cmpsl
cmp
test
loopne
mov
push
xchg
xor
xor
ja
mov
cmp
jne
jle
push
mov
jle
std
inc
test
cmp
or
jge
dec
xchg
mov
push
adc
xchg
mov
pop
cmp
mov
add
int3
lock
arpl
mov
bound
dec
dec
xchg
adc
std
push
pop
nop
ds
mov
cs
adc
or
nop
add
arpl
and
or
daa
ss
add
shlb
and
data16
popf
mov
push
sbb
fistpl
push
and
sbb
sub
mov
outsb
xchg
dec
loopne
test
sbb
lret
xor
or
mov
sbb
add
scas
insb
arpl
bound
lock
shl
sbbl
cmp
test
and
and
cmp
xchg
call
inc
mov
push
ja
xchg
mov
cmp
inc
sub
cmp
sbbl
mov
call
cmc
sub
sbb
inc
inc
pop
fcoms
mov
and
jne
cmpsb
cmp
insb
or
daa
inc
or
pop
fwait
inc
mov
pop
adc
or
addl
pop
pop
xchg
ret
mov
arpl
xchg
fbstp
add
pushf
sbb
leave
jo
ud2
lea
push
fsubr
xlat
jb
dec
or
mov
mov
mov
imul
jl
push
dec
or
lods
ja
adc
insb
xchg
test
jb
scas
or
xor
inc
add
mov
das
inc
inc
dec
or
dec
or
cmp
test
pop
jae
adc
pop
inc
bnd
inc
jnp
jae
push
jl
and
mov
stos
adcl
fmull
push
push
insl
aas
xor
jecxz
or
push
push
dec
dec
push
push
sub
cmp
mov
in
mov
aas
lock
scas
or
push
neg
dec
mov
lret
out
jmp
jnp
inc
test
movsl
inc
and
and
pop
mov
rclb
adc
imul
fs
cmp
loop
mov
rol
xorl
cmp
adc
lods
dec
icebp
push
pop
push
cltd
iret
lods
ljmp
je
mov
push
pop
enter
lock
loop
dec
and
push
or
outsb
sub
fisttpl
shlb
test
xor
add
testb
mov
adc
aad
sub
js
aad
scas
arpl
pop
iret
xchg
cmp
je
xor
mov
mov
inc
jl
sbb
and
outsl
push
pop
shrl
or
inc
inc
jne
jns
jmp
sar
mov
mov
jmp
movsl
pop
inc
cs
jg
xlat
je
xchg
mov
and
test
inc
mov
push
shlb
outsl
je
popf
icebp
enter
jae
enter
dec
mov
pop
movlps
addb
ret
sub
and
sub
add
mov
xor
mov
imul
lahf
pop
ret
sub
dec
imul
or
stc
push
xchg
fwait
ret
push
push
dec
jp
outsl
pop
or
pop
or
lods
xor
loop
cld
fucomip
jns
sbb
imul
mov
imul
pusha
push
jbe
mov
adc
jmp
jle
loopne
add
xchg
insl
arpl
inc
pop
sbb
adc
repz
aad
add
dec
popf
jmp
xchg
dec
addr16
int3
pushf
jmp
aaa
sub
daa
inc
jo
sbb
push
add
pop
sbb
add
push
sbb
add
adc
inc
inc
out
loopne
cmp
push
testb
ss
adc
or
shrl
push
inc
or
fmuls
cs
cld
pop
in
inc
add
add
iret
inc
and
dec
daa
sbb
xor
xchg
mov
pusha
nop
pop
pop
xor
mov
test
adcl
inc
add
dec
dec
orl
rol
ret
mov
in
sbb
dec
je
imull
and
xchg
sub
or
lock
and
or
or
push
mov
mov
cmp
sub
leave
adcl
inc
jnp
pop
fwait
add
add
stc
je
adc
sub
sub
or
dec
std
ds
push
xor
rcrl
pop
sti
je
push
xor
xor
icebp
dec
sbb
or
popa
pop
enter
cmp
or
in
pop
imul
enter
jne
inc
push
push
add
sbb
cs
arpl
inc
sbb
sub
cwtl
or
in
adc
xor
pusha
icebp
ja
mov
jae
into
mov
adc
imul
fsts
popa
js
pop
je
out
dec
cmp
pop
cwtl
lcall
pop
push
jle
fs
inc
or
les
inc
xchg
adc
test
rol
subb
or
push
ja
ds
ret
xor
pop
push
dec
repz
push
adc
loopne
push
xor
lcall
pop
and
mov
push
adc
xor
nop
pop
adc
mov
add
lcall
mov
xor
mov
adc
push
gs
sbb
incl
add
loopne
fistl
dec
outsb
enter
inc
pushf
pop
xor
push
add
inc
clc
pop
cpuid
out
xchg
or
inc
orb
dec
bnd
push
jp
dec
push
sbb
ret
xor
adc
sbb
dec
insb
add
add
push
imul
cmovno
std
bound
outsb
or
sti
and
or
add
test
dec
ljmp
or
push
outsl
mov
jge
insb
and
aam
prefetchwt1
mov
ss
inc
xor
sbb
lcall
ljmp
inc
std
das
mov
pop
or
or
data16
into
sub
sar
add
shl
int
jnp
mov
inc
pop
add
add
push
adc
or
popa
dec
add
outsl
fs
inc
imul
popf
xor
pusha
xor
data16
dec
inc
rclb
inc
xchg
dec
ret
jo
fimull
adc
stos
xor
divb
or
leave
push
cmp
pop
sub
push
outsb
jne
sbb
sub
divb
aas
add
lock
jae
mov
mov
xchg
nop
sbb
sbb
fcomps
daa
fdiv
or
mov
fsubs
xchg
adc
popfw
mov
push
test
clc
xor
gs
add
push
lea
mov
and
cld
xor
lcall
xor
inc
imul
and
jne
xchg
mov
or
adc
adc
int3
scas
or
jns
adc
testl
scas
fwait
sub
ja
xor
add
roll
xor
and
ds
jo
addb
nop
push
sahf
stos
jo
xchg
add
mov
or
imul
or
iret
pushf
les
jge
or
vfrczsd
push
rcr
jns
inc
xchg
roll
imul
jne
jns
adc
outsb
dec
and
add
push
popa
fadd
or
adc
mov
dec
push
add
fwait
loopne
jb
adc
ja
fisttpll
mov
test
in
insb
mov
dec
js
add
jae
inc
and
or
add
orl
push
push
sarl
pop
add
pop
dec
mov
jo
dec
rol
or
insb
cmp
mov
push
iret
xor
outsb
add
ret
sub
inc
pop
loop
or
orl
int
or
xor
sbb
sub
mov
xor
adcl
cmp
add
add
add
adc
scas
mov
adc
sbb
and
sub
orb
add
sbb
push
add
mov
add
fs
shrb
inc
lret
mov
enter
add
adc
inc
sbb
add
out
and
mov
mov
mov
ljmp
dec
scas
ljmp
ljmp
loope
cwtl
test
cmpsl
jmp
add
movsl
idivb
dec
stos
ret
jnp
shlb
jl
cmp
or
push
pusha
in
cmpb
lahf
cmpsl
mov
add
lods
sub
xor
ss
int
pop
and
xchg
out
fldcw
nop
cwtl
cltd
push
dec
data16
out
int
push
xchg
push
mov
pushf
out
scas
jnp
pop
mov
push
in
ds
imul
nop
cmpsb
push
inc
push
lods
mov
ja
sahf
testb
mov
out
ss
dec
cld
sbb
adc
enter
pop
mov
out
loopne
and
je
rcrb
pop
repz
dec
jl
pusha
lcall
mov
pop
pop
and
pop
xchg
and
clc
mov
sub
fcompl
push
aam
popf
inc
lcall
xor
pop
shlb
cwtl
sub
pop
xchg
add
sbb
push
mov
push
inc
fs
in
cmpsb
push
adc
inc
loope
pop
dec
mov
push
xor
jne
add
add
adc
les
push
dec
sub
xchg
out
adc
rorl
addr16
lea
add
pop
jo
xor
addr16
lods
or
pop
inc
push
clc
test
std
xchg
bound
or
sub
sti
pop
sbb
add
pop
xor
ret
push
xor
mov
les
dec
out
in
inc
sbb
push
sbb
sub
popa
mov
sbb
aad
cwtl
loope
add
stos
cmpsb
jo
inc
push
add
cmc
dec
push
xchg
flds
dec
fnstsw
add
cmpsl
add
pop
out
and
mov
adc
and
nop
xlat
mov
push
push
pop
pop
test
ror
add
dec
idivl
fldcw
je
inc
push
mov
sub
js,pt
stos
loopne
or
pop
mov
lds
or
inc
es
aaa
cmp
test
out
nop
push
daa
sub
les
xor
fdivrl
sub
sub
cmpsb
loopne
add
sub
add
adc
mov
add
out
add
push
int
or
add
add
or
xlat
jno
push
push
insb
loope
fsubr
incl
or
jmp
sbb
jns
jnp
xchg
jns
push
pop
mov
inc
scas
xchg
loopne
aam
das
pop
cwtl
fwait
xor
int
jne
pop
hlt
or
jbe
mov
mov
inc
and
xor
or
inc
lock
inc
nop
test
pop
sbb
lret
xor
push
sub
pop
add
mov
sbb
adc
daa
mov
dec
in
pop
inc
andb
xor
bound
inc
cs
mov
imulb
pusha
pop
pusha
fwait
mov
add
jae
stos
insb
add
repz
subl
nop
dec
out
xor
and
inc
jns
js
dec
sub
je
cmp
or
adc
roll
test
cwtl
xor
inc
shrb
mov
push
popa
orl
inc
iret
rorl
xchg
aas
movsl
dec
sbb
insb
and
gs
mov
xchg
inc
inc
inc
ds
out
pop
pop
jnp
dec
mov
pop
push
test
xor
push
cwtl
push
and
int3
lcall
cmp
inc
je
call
dec
dec
mov
inc
lret
and
or
mov
lcall
mov
dec
pop
dec
add
sbb
inc
pushf
fimull
cmp
jnp
popf
int3
mov
push
stc
add
data16
fdivrs
mov
push
inc
iret
cwtl
bound
add
in
test
mov
mov
movsb
subl
inc
push
sub
pop
inc
jge
and
mov
dec
push
or
dec
mulb
sbbb
add
aad
es
ret
xor
dec
stos
outsb
inc
cmpsb
icebp
dec
and
sbb
xor
or
mov
call
sub
mov
fcomps
ja
push
rorl
mov
inc
fwait
and
or
xchg
mov
insb
or
loope
xchg
sub
sbb
xor
loop
push
push
mov
mov
and
addl
loope
sahf
push
or
inc
lea
xor
mov
lcall
fcomps
add
int3
xor
sbb
xor
inc
mov
xor
push
add
inc
or
pop
jge
shlb
pop
jge
sbb
or
pop
xchg
sub
out
jge
xor
push
sahf
movsb
inc
xchg
inc
addb
pop
enter
pushf
dec
dec
dec
pusha
or
add
dec
mov
push
push
pusha
push
popa
mov
mov
add
hlt
push
inc
pop
pop
dec
mov
bound
rclb
mov
mov
pop
arpl
out
test
addb
shlb
fldl
pop
inc
adc
xor
roll
and
cmpsl
push
pop
mov
push
sti
rcrl
inc
cli
mov
test
mov
sbb
lods
lock
push
in
xlat
rcrb
xlat
pop
popf
loopne
cmp
or
mov
xor
mov
stc
add
ljmp
add
cmp
int
pop
inc
mov
sub
ljmp
sub
pop
mov
into
sysret
sub
cmp
imul
and
xchg
cmp
nop
nop
sbb
pop
test
inc
ds
push
rorl
push
cmc
fsubrp
inc
and
dec
mov
sbb
aam
pop
cmpsl
stos
sbb
sub
mov
paddusb
xor
test
or
and
sbb
sbb
dec
and
push
imul
jo
and
adc
loopnew
rclb
orl
scas
out
sbb
push
add
cwtl
and
push
push
and
and
mov
dec
inc
mov
loopne
pop
mov
leave
in
push
andps
sub
jecxz
repnz
push
or
jns
js
jbe
mov
outsb
popf
mov
jo
sub
xchg
mov
enter
pop
and
repnz
push
adc
hlt
or
or
in
and
shlb
movsb
fst
xor
insl
fcoms
adc
sub
pusha
add
cmp
jb
add
xchg
dec
mov
ds
lods
mov
in
cmp
mov
lods
test
mov
mov
xor
cltd
mov
cmp
jno
xchg
ret
out
pop
add
xchg
add
push
lods
inc
cmp
subl
dec
jmp
push
je
in
adc
inc
push
and
and
outsl
add
out
mov
pushf
or
xchg
push
scas
pop
jno
jp
shll
mov
lcall
sahf
xor
stc
pop
call
stc
fucomp
xor
or
inc
das
jmp
pop
sti
incl
sub
jb
add
or
sbb
imul
add
inc
mov
jne
mov
jnp
lods
mov
enter
dec
sbb
mov
xor
jl
sbb
popa
dec
lods
movsb
out
je
adc
xchg
dec
pop
and
cltd
xor
mov
les
mov
lods
fidivs
hlt
mov
and
sarb
inc
dec
negl
jne
mov
add
pop
add
add
push
inc
add
and
cld
push
jo
orl
dec
stos
ficomps
lret
sahf
mov
and
mov
jno
cs
sub
fiadds
in
adc
subb
adc
mov
mov
xlat
mov
ret
xor
and
mov
je
stos
ss
pusha
add
inc
cmp
fidivs
jne
mov
push
ret
mov
adc
push
repnz
inc
test
xchg
in
fistps
ret
mov
shrl
jnp
mov
daa
fistl
lret
cld
adc
xchg
es
xchg
js
lods
or
std
iret
mov
cwtl
xchg
inc
cli
rcll
pushl
mov
mov
push
xor
les
push
sbb
fs
xchg
paddd
cmpsb
and
shr
adc
arpl
in
sbb
adc
mov
sub
lea
cmp
mov
sbb
lds
mov
fidivrl
fldenv
cltd
call
mov
push
loopne
sbb
adc
pop
pop
sbb
or
popa
scas
add
or
add
add
xor
adc
xchg
in
push
add
pop
aaa
aaa
scas
sbb
adc
xor
enter
dec
ret
cwtl
lock
jns
jg
testb
mov
adc
add
add
int
add
add
add
sub
mov
rol
stos
mov
or
dec
and
xchg
sbb
clc
pop
sub
mov
adc
mov
je
or
movsb
icebp
ficomps
add
bound
push
push
bound
adc
das
imulb
loop
je
and
and
and
add
adc
aaa
sbb
adcb
xor
mov
jb
inc
dec
mov
add
xorb
add
mov
pop
and
mov
xchg
mov
push
sarl
jno
inc
or
int
or
push
in
or
fisttpl
xchg
xchg
add
or
sbb
sub
sub
sbb
inc
jno
pop
bound
into
inc
pop
xor
and
push
push
daa
mov
mov
sub
add
or
mov
and
lret
les
das
mov
subb
pop
fwait
add
mov
xchg
adc
jg
add
pop
aas
xor
imul
sub
mov
inc
cs
add
insb
aaa
faddl
inc
popa
adc
dec
and
movsl
cmc
add
add
dec
es
and
in
push
xchg
aaa
inc
inc
add
test
and
adc
push
roll
or
xchg
inc
and
push
rorb
cmp
icebp
push
sub
mov
pop
add
inc
dec
push
and
pop
mov
xchg
cmp
add
inc
testb
mov
call
les
adc
test
inc
ret
dec
pop
and
add
mov
add
adc
dec
push
pop
push
movlps
mov
lret
xor
and
dec
dec
shr
inc
popf
inc
inc
cmp
push
repz
mov
loop
mov
sub
outsl
fmuls
xchg
or
push
sar
xorb
jecxz
xchg
js
push
sbb
inc
inc
mov
fcmovnu
xchg
sub
neg
jmp
arpl
or
cmpsb
mov
shlb
inc
pop
cli
mov
loopne
jno
push
sarl
pop
mov
pop
pop
lret
and
mov
loope
mov
pop
nop
or
in
pop
lds
jmp
adc
sub
cmp
es
scas
or
pop
xor
inc
adc
test
sub
je
adc
repnz
add
add
aas
test
lock
call
jl
pop
or
add
jne
or
inc
outsl
pop
xchg
shll
sbb
jno
aas
out
call
xor
adcl
inc
test
sub
sub
shll
in
cmp
js
stc
jmp
inc
inc
or
add
sti
sub
fistl
cs
jmp
sbb
loope
pop
push
lock
pop
std
scas
repz
cmpb
and
leave
and
xor
mov
frstor
in
xor
and
dec
fdivs
inc
cmpsb
xchg
sub
push
mov
mov
shll
and
movsb
sbb
adc
in
ss
jle
xchg
push
mov
adc
sub
jmp
sub
add
push
movsl
test
shr
mov
adc
sub
inc
bound
movsb
aam
sub
icebp
push
rclb
dec
and
mov
add
inc
outsl
jle
dec
sti
shrb
add
mov
cmpl
int3
outsb
sti
fs
imul
cmp
push
sbb
adc
or
sahf
mov
push
adc
jg
push
lret
and
pop
cmpb
shrb
mov
test
fmull
pusha
ss
and
popa
call
sahf
adc
adc
xor
push
dec
inc
xchg
cmc
ret
add
sub
lret
and
into
sub
loopne
jno
and
pminub
mov
test
mov
arpl
mov
adc
push
ljmp
aaa
inc
xor
add
cmp
add
dec
pop
das
ds
jo
or
or
sbbl
sub
sbb
adc
push
lock
nop
xchg
arpl
add
or
push
xchg
call
shlb
sbb
xlat
cmp
inc
jb
pcmpeqd
les
ret
dec
or
dec
aas
xchg
std
xor
js
mov
outsb
mov
das
mov
or
add
test
sub
push
fimuls
orl
jo
sub
dec
mov
int3
sbb
xlat
dec
lcall
test
imul
hlt
sbb
andb
pop
add
ss
test
cld
jo
and
xchg
pop
sarb
cmp
adc
aam
or
pop
jb
fcoms
sti
and
sub
pop
faddl
and
add
mov
out
ret
ret
clc
les
sbb
nop
int3
sbb
cwtl
lret
push
add
push
mov
sbb
dec
insb
ja
xor
pop
add
inc
xor
jle
inc
adc
xchg
insb
dec
xlat
dec
call
add
push
xchg
daa
push
mov
pop
push
rcrl
xchg
push
cmc
inc
push
or
in
mov
jnp
pop
pop
xchg
lret
jbe
push
lods
or
fs
jnp
inc
and
push
aam
adc
cmpsl
lcall
dec
orl
push
addr16
lods
xchg
mov
mov
cmpsb
into
test
aaa
push
sub
ds
push
movb
lret
inc
bound
lods
cmpsl
xchg
iret
push
sahf
push
inc
in
push
add
pop
es
andl
ss
and
cmp
cmp
lret
int
call
sbb
cmp
xor
add
pusha
xchg
mov
pop
xor
or
mov
push
sub
xchg
lock
fistps
shlb
cwtl
out
or
pusha
fsubl
adc
or
jnp
sbb
or
sub
jo
mov
pop
mov
inc
add
clc
pop
and
lock
int3
ss
je
inc
xchg
pop
addb
and
push
in
push
jno
jno
rolb
pop
inc
daa
add
out
aam
or
sahf
pop
pop
jg
mulb
mov
icebp
inc
ja
xchg
pop
je
mov
jo
jo
icebp
rorb
jmp
sub
push
test
or
emms
xchg
jl
imul
pusha
stc
cwtl
mov
rolb
out
and
movb
mov
or
mov
fistps
sub
in
fxch
or
outsl
push
insb
in
inc
mov
xchg
mov
dec
icebp
sbb
aad
shll
out
adc
adc
inc
clc
pop
mov
mov
rclb
rcrl
idiv
pushf
dec
sbb
xchg
sub
inc
shll
sub
add
xlat
sbb
insb
sbb
sbb
sub
xchg
test
fisttpll
lea
push
mov
push
test
push
adc
adc
popl
fidivrs
lods
pop
outsl
or
lds
sbb
out
popf
and
sbb
mov
jle
mov
inc
addr16
ja
mov
inc
fcomip
pop
insb
outsl
or
sbb
outsb
sbb
xchg
mov
pop
aaa
lods
and
mov
add
aam
insl
je
adc
adc
std
adc
jle
sbb
xor
mov
xchg
lods
das
pop
je
add
push
mov
nop
popa
in
add
and
pop
add
and
push
jecxz
aam
mov
xlat
in
leave
ja
les
sbb
les
add
es
in
pop
dec
je
lods
test
into
gs
add
out
mov
or
mov
stos
and
jl
jl
repnz
and
cli
pop
stc
xor
shll
popa
add
mov
sbb
mov
pop
pop
add
fimuls
popa
jns
or
sbb
cmp
pop
jb
mov
inc
push
push
xor
push
outsb
sbb
arpl
icebp
roll
xchg
xor
pop
adc
call
rorl
jl
xchg
push
jle
inc
fs
cli
push
push
mull
mov
sub
insb
arpl
push
ja
sahf
sub
lret
or
es
shl
test
adc
xchg
aaa
jmp
gs
ja
push
inc
mov
jo
scas
dec
mov
or
jb
inc
add
pop
xchg
inc
sbb
mov
dec
popa
sbb
enter
mov
push
inc
add
push
sbb
mov
inc
or
cmp
call
fistps
ret
sbb
sub
add
dec
out
dec
flds
pop
add
ja
mov
add
or
dec
pop
xchg
sar
in
lds
std
add
or
mov
enter
xchg
mov
faddl
mov
push
xor
jl
out
xchg
push
es
in
sbb
or
push
rcll
cmp
add
xor
mov
popa
add
cmpl
mov
mov
xor
inc
aaa
mov
and
pop
std
xchg
daa
test
dec
jbe
mov
push
and
loope
fcmovb
inc
add
mov
insl
sbb
mov
add
mov
popf
push
lds
daa
orl
out
lea
je
adc
movb
dec
adc
xorb
adc
into
sub
mov
xor
or
inc
or
push
cmpl
or
nop
sbb
xchg
cmp
or
sarb
jmp
mov
sbb
mov
sub
adc
in
or
cmp
aaa
and
clc
fidivrl
jecxz
xchg
xorb
movl
andl
adc
addb
mov
mov
pop
movsl
push
jl
call
dec
addb
mov
iret
xor
jge
pop
movl
js
call
daa
andl
pop
je
push
push
push
jp
loopne
or
pop
dec
inc
push
cwtl
cmp
mov
add
xchg
lds
add
mov
inc
aam
jbe
add
orb
sub
add
and
leave
cmp
roll
test
pop
and
xchg
push
inc
daa
mov
sbb
dec
mov
lock
lcall
in
mov
daa
sbbl
sbb
lea
adc
pop
popf
inc
inc
xchg
stos
pop
cmpsl
xchg
and
repnz
add
mov
mull
inc
mov
cmp
nop
les
cltd
cmpl
xchg
addl
or
in
pusha
mov
sub
nopl
dec
adc
cmp
mov
rorb
cmp
cld
dec
lods
das
push
ljmp
mov
jnp
lods
cmp
adc
pop
inc
mov
iret
idiv
xchg
test
mov
nop
mov
sub
pop
movsb
cmp
dec
call
add
xchg
xchg
fstpt
pop
adc
sub
adcb
xchg
cmpsl
lea
cmp
inc
mov
and
adc
les
cmc
pop
orl
in
movups
sbb
lods
scas
repnz
stos
push
jae
dec
fisubl
lods
inc
inc
xlat
cwtl
in
pop
leave
mov
mov
dec
sbb
mov
fildl
in
push
dec
push
icebp
or
mov
hlt
mov
or
orl
mov
jne
pop
pop
testb
je
fisttpll
jo
test
jae
inc
inc
push
sub
sbb
xor
popa
push
fdivrs
lock
cmp
mov
daa
mov
lret
inc
enter
mov
pop
jp
mov
and
cwtl
jg
je
mov
push
push
adc
out
sbb
xchg
nop
mov
cmp
inc
mov
push
inc
mov
test
lods
xor
mov
jo
sbb
sub
mov
sbb
or
cmp
push
and
add
sub
mov
enter
xchg
insl
sub
daa
nop
dec
pop
das
scas
mov
mov
jns
cmpsl
stc
push
add
sub
dec
inc
pop
xchg
ror
fidivl
daa
in
scas
in
adc
outsl
mov
ljmp
sub
lods
dec
cli
pop
fistps
rol
add
and
je
lcall
jp
insb
dec
pop
mov
mov
inc
cmp
inc
adc
and
in
mov
fwait
mov
inc
xor
jge
ljmp
xor
lret
enter
add
es
dec
es
mov
mov
push
enter
xor
dec
insb
insb
in
or
in
mov
add
add
xor
les
ficoms
mov
mov
adc
sub
add
es
cmp
jecxz
mov
inc
aaa
psubw
inc
or
adc
mov
or
lahf
pop
enter
jns
push
adcb
or
ret
shr
adc
lret
daa
sub
and
pop
push
mov
cmp
mov
xor
or
dec
and
xor
mov
mov
nop
aas
adc
jns
jmp
inc
loope,pn
mov
test
arpl
push
pop
ret
xor
xor
orl
mov
xor
call
and
xchg
aam
mov
add
push
and
imul
add
cli
pop
sbb
dec
lds
xor
or
shll
inc
cmpb
inc
movsl
addr16
les
aam
mov
pop
jl
inc
or
test
pop
orl
jge
mov
arpl
mov
clc
movsl
cvtps2pi
mov
dec
enter
nop
aaa
xlat
sub
add
aaa
push
xor
xchg
add
jmp
iret
lret
call
add
cltd
fdivrs
jbe
ds
pop
cmp
pop
adc
subb
adc
adc
adc
and
daa
or
sbb
cmp
jp
lock
add
cmp
push
inc
cli
es
or
cld
adc
or
imul
pop
fcomp
outsl
sub
repnz
inc
mov
sub
pusha
inc
aam
mov
ss
lods
mov
xor
popf
cmp
test
icebp
xchg
mov
aas
mov
dec
xor
out
and
addb
aaa
lods
lds
nop
xor
xchg
sarl
stos
movsb
mov
or
push
mov
cmp
sub
sub
and
adc
inc
call
sub
lods
pusha
inc
fs
jno
mov
aaa
add
xchg
loope
fstpl
lcall
add
int3
pusha
mov
mov
jle
jno
mov
outsl
in
or
xor
jne
pop
push
lret
jg
mov
xorl
push
pop
push
jo
push
or
fs
cmp
mov
add
xor
mov
addr16
andl
testb
in
inc
orb
adc
adc
pop
outsb
cmp
lock
cltd
add
add
cmp
stc
jne
add
je
dec
daa
pop
test
mov
and
popf
nop
jb
pop
lds
setbe
xchg
add
sbb
pop
sbb
add
or
cld
dec
mov
cmp
les
jne
add
insl
mov
jp
outsl
insl
inc
push
mov
xor
add
adc
mov
lret
adc
or
and
lahf
sti
imul
sbb
add
push
pop
push
adc
mov
and
je
dec
or
add
sbb
push
push
and
ret
test
fisubl
jb
ljmp
ds
add
add
nop
jmp
sbb
or
icebp
inc
aas
sbb
in
inc
shll
ficompl
and
cmp
xchg
fistps
add
pushf
and
mov
ja
mov
int3
popa
loope
xor
int
cmpb
ja
dec
cmpl
sbbb
enter
dec
add
mov
xchg
rorl
or
and
sub
pop
cmp
push
popa
sbb
add
shl
cmp
jp
sarb
mov
xchg
iret
and
sub
gs
inc
popa
xor
pop
rolb
iret
mov
push
mov
lock
and
mov
pop
adc
mov
pop
loopne
in
jo
and
mov
pop
adc
push
add
sub
xchg
shrb
cmpsl
movsl
xchg
andb
push
sbb
shlb
in
inc
xor
sub
xorl
test
cs
lods
or
shrb
add
ret
daa
mov
add
sub
jae
int
cmpsb
fstl
or
lret
imul
mov
inc
mov
gs
inc
pop
jae
dec
aaa
les
xchg
addr16
in
push
xchg
nop
cltd
pop
cmp
xorb
or
push
add
cmp
xchg
add
xor
dec
in
je
pusha
add
mov
orl
xchg
xchg
hlt
in
in
hlt
mov
xchg
xchg
clc
sub
xchg
xchg
add
xchg
pop
movsl
pushf
fldl
pushf
add
add
outsl
add
sbb
fsubrs
out
dec
rorl
xchg
daa
shll
push
add
sub
insb
loopne
lea
adc
xor
lock
xchg
add
cmc
dec
or
xchg
inc
lock
jg
pop
or
jmp
cmp
jmp
pushf
data16
and
push
and
or
sub
dec
pop
cmp
out
sbb
aam
repz
adc
add
push
add
int3
sub
mov
inc
inc
xor
ret
dec
dec
dec
xchg
sti
and
inc
aam
xor
aas
mov
mov
setbe
es
mov
sbb
cmp
inc
lods
pop
and
add
mov
shl
push
hlt
push
xchg
flds
mov
popf
cli
add
or
ds
push
dec
movsb
add
mov
inc
movsb
xchg
jo
inc
shlb
pop
dec
mov
xchg
inc
clc
pop
lock
inc
push
idivb
adc
cwtl
lds
sub
popf
jp
cmp
fildl
nop
push
pop
inc
xchg
lea
mov
dec
mov
nop
xchg
mov
outsl
or
fsts
adcb
lea
adc
aaa
push
addr16
mov
dec
imul
fidivs
je
push
inc
aas
mov
sbbl
push
ss
ja
push
push
push
push
xor
movsb
add
mov
test
popa
or
cmp
data16
push
cmp
jg
movsb
or
push
pop
decl
fistpll
pop
roll
fldt
ret
bound
sbb
cmp
pop
sub
push
icebp
mov
jae
mov
bound
mov
lret
pop
adc
mov
sbb
mov
sbb
jno
dec
loope
cwtl
mov
sbb
jo
mov
lret
dec
mov
sbb
sub
add
inc
lods
les
xor
sar
aam
hlt
push
xchg
lea
xchg
xor
xchg
sti
add
adc
add
or
clc
je
xchg
mov
hlt
incl
inc
roll
addr16
cmpb
xor
mov
sbb
lods
add
sahf
adc
push
cwtl
pop
pop
or
adc
sbb
sbb
dec
jb
sbb
add
std
es
fsubr
or
fsubl
jae
add
nop
push
or
dec
pop
adc
int3
adc
push
add
dec
mov
dec
rcrl
pop
or
adc
pop
add
pop
pop
or
mov
fstpl
testl
test
and
xor
inc
or
and
rcll
mov
adc
or
pop
or
mov
push
sub
sti
pop
dec
mov
lods
bound
andl
leave
les
jl
and
cmp
jle
sub
push
push
andl
loop
sbb
or
sub
fmull
cmp
xor
lea
jb
push
dec
outsl
arpl
jns
pop
pop
push
fs
jmp
mov
ja
jne
orl
sarb
les
push
fdivrl
aaa
adc
or
mov
jae
mov
mov
out
cmpsb
dec
clc
mov
push
push
or
and
push
lret
cmp
je
mov
cld
inc
shrd
lahf
xor
movsl
adc
mov
inc
std
fistpll
pusha
lods
jno
test
mov
or
loopne
mov
or
ret
jge
and
or
jae
out
or
cmp
loopne
mov
mov
pop
xchg
sub
test
adc
xchg
out
sub
xor
pop
inc
push
shlb
movsb
xchg
in
aam
cmp
or
mov
pop
movsw
cmp
cld
push
cmp
hlt
les
subb
pushl
xor
and
nop
ror
or
add
add
cmpsb
adc
rcrb
jp
cld
pop
mov
test
test
dec
cmp
je
add
adc
adc
cmp
ss
pop
sub
shll
or
or
jbe
add
jmp
jns
scas
test
mov
imul
add
dec
pop
clc
and
sub
popa
or
adc
adc
pop
mov
daa
aaa
and
dec
test
shlb
and
and
xor
add
jl
nop
popa
arpl
xchg
cmp
inc
mov
loop
xor
and
inc
adc
inc
les
ficompl
sbb
push
les
adc
cmc
leave
shlb
test
push
xchg
add
push
inc
inc
mov
orb
xchg
mov
aas
mov
jno
sub
or
inc
xchg
add
and
or
pop
fistl
push
test
inc
inc
cwtl
or
scas
and
addl
jno
pop
or
imul
xchg
scas
push
mov
pop
cmp
ja
push
add
sub
add
ret
frstor
arpl
movsl
mov
mov
fcomps
adc
lahf
jecxz
lcall
push
es
mov
mov
addr16
pop
js
sbb
xchg
push
fbstp
mov
fs
xchg
pop
xorl
outsl
rcrb
rcl
add
push
sbb
and
cmp
fldcw
inc
sbb
add
mov
pop
iret
sbb
mov
cmpl
and
nop
mov
shll
add
loopne
pop
add
xchg
or
ret
push
push
push
dec
inc
test
mov
rcrl
das
push
adc
mov
out
ljmp
ljmp
add
and
lahf
pop
or
test
cmp
or
pop
popf
popa
jl
hlt
popa
xor
loope
and
or
pop
inc
daa
fdivs
sbb
push
aam
stc
lock
cld
jne
rolb
pop
addr16
xorl
sarb
mov
shrb
rcl
gs
test
mov
gs
push
cmp
adc
push
jno
push
dec
cs
ret
mov
or
jecxz
sbb
xlat
pusha
jmp
cmp
jb
flds
or
sbb
xorps
push
data16
and
add
jge
mov
stos
test
and
pandn
andb
and
insl
adc
and
rorl
jo
sub
jns
js
subl
or
dec
cmp
cmp
outsb
jle
shrb
pop
sti
and
and
rorb
outsb
cwtl
xchg
add
pop
repnz
shl
aas
pop
mov
cmp
lret
in
ud1
daa
hlt
aad
das
xor
xor
jae
punpckhwd
or
sub
scas
fstl
mov
cmove
mov
inc
pop
test
orl
loopne
fs
cmp
adc
sub
adc
xorb
sub
rcrl
cmp
xlat
adcl
inc
push
shlb
xchg
mov
push
inc
mov
sub
push
jg
je
addb
push
push
jo
ret
stc
push
cmpl
js
filds
adc
pop
cltd
inc
cmp
popf
cmp
jne
xchg
jmp
mov
cmpl
cmp
push
xor
nop
pushf
adc
jecxz
mov
andl
sahf
rcrl
xor
jnp
pop
sahf
jae
imul
mov
test
ret
add
xchg
push
scas
adcb
xor
insb
xchg
clc
pop
mov
roll
xchg
cmpl
pop
push
dec
push
xor
xchg
ret
add
mov
inc
adc
addr16
lcall
in
jo
push
call
cmp
fiadds
pop
aas
jo
mov
xorl
popf
xchg
inc
adc
ss
xlat
pop
adc
out
movsl
mov
cmp
adcb
movsb
xor
push
push
insb
in
or
mull
fwait
adc
push
pusha
mov
sbb
jl
push
add
lods
sub
test
and
mov
jmp
mov
add
test
pop
pop
or
aad
pushf
push
pop
cmp
sti
jg
call
push
inc
rorl
jae
xchg
sub
or
add
add
and
sub
orps
sub
icebp
cmove
sbb
lret
lcall
imul
and
add
shrb
and
imull
push
dec
mov
or
jae
lcall
imul
adc
push
movsl
sbb
outsl
inc
or
in
mov
imul
pop
cmp
ja
data16
cmp
pop
inc
inc
and
add
pop
cltd
mov
dec
sub
pop
into
xchg
fsubs
fisttps
dec
pop
cld
adc
xchg
fs
inc
cmp
ret
sub
or
add
push
call
dec
cs
pop
cmp
sub
fldcw
dec
jo
add
xor
jl,pt
add
add
inc
or
mov
fstl
cmp
cmpsb
mov
inc
sub
rcrl
mov
imul
outsl
dec
jmp
cmpsl
fcoml
pusha
pop
xor
sbb
cmp
sbb
cmpsb
mov
jo
cmp
push
enter
fsub
mov
imul
xor
and
sbb
sbb
push
mov
cmp
push
jne
ret
xchg
sbb
adc
push
loop
cmp
jne
mov
js
adc
ret
fnstsw
insb
cmp
add
fbstp
dec
adc
pop
and
add
and
mov
ret
or
outsb
sbb
rcrb
adc
push
mov
and
jg
scas
je
lahf
loop
loope
jle
or
jo
jmp
adc
pop
cmp
jmp
push
dec
jmp
iret
fildl
fucom
adc
sbb
sub
scas
mov
and
ja
mov
les
xchg
andl
push
mov
adc
or
dec
ljmp
pop
xor
push
sbb
in
lods
jbe
jg
insb
or
or
fisubl
push
lea
enter
push
ret
jecxz
pop
add
aad
or
fnstsw
sbb
add
sub
imul
adc
adc
xchg
push
adc
push
mov
add
shll
adc
pop
inc
dec
mov
adc
in
mov
add
xor
adc
sub
lock
lret
sbb
cmc
adc
xor
mov
mov
xchg
sbb
mov
inc
add
jo
pop
or
js
imul
dec
and
or
cmp
leave
pop
adc
nop
push
enter
jne
roll
addb
das
divl
or
cmpsl
sbb
cmp
cmp
dec
rclb
push
loop
popf
sub
push
in
mov
gs
addb
push
cmpl
sub
mov
fdivp
inc
add
fistpll
inc
jns
xchg
shlb
mov
mov
or
sahf
lods
in
sbb
xor
fwait
test
xchg
xor
dec
sbb
insl
lds
ljmp
or
and
mov
pop
popf
iret
xor
inc
dec
mov
sbb
das
pop
pushf
or
iret
add
popa
jg
and
inc
dec
push
and
inc
cmpsl
dec
lcall
lcall
push
incl
and
or
cmpsl
adc
test
sub
lea
add
or
inc
cld
add
jo
or
jae
inc
xor
shll
adc
shll
clc
and
mov
loop
and
nop
and
or
cld
loopne
roll
push
jecxz
inc
mov
inc
sbbl
incl
idiv
dec
sub
push
pop
inc
mov
or
mov
gs
sub
xchg
push
cmpsb
add
and
or
lods
daa
mov
pop
jb
xlat
and
in
add
in
sub
xchg
call
push
clc
les
dec
push
mov
push
xor
xor
test
mov
outsb
xor
jno
fwait
xlat
and
and
test
enter
insb
sub
mov
pop
or
cmc
dec
test
jnp
je
pusha
shl
pop
push
imul
push
jmp
andl
inc
cmpl
jne
imull
stc
jmp
cmp
inc
sbb
fs
popa
js
mov
jb
or
je
in
cmpsl
add
add
je
push
adc
stos
push
xchg
adc
or
pop
mov
mov
jge
or
cli
rolb
gs
jp
mov
jno
aad
jb
jge
mov
aam
xlat
or
adc
inc
lcall
daa
xor
jmp
inc
loope
mov
inc
shrb
jbe
xor
incl
dec
and
mov
adc
add
adc
jne
cmp
mov
fistl
iret
lcall
call
mov
push
lds
jnp
xlat
jnp
push
inc
arpl
fs
lea
in
jbe
jno
dec
dec
mov
and
pop
push
cmp
icebp
int3
add
add
push
add
je
jne
fnstsw
push
loop
and
js
mov
loope
push
adc
pop
or
cmp
push
dec
add
insl
pop
pop
or
mov
cmp
jmp
ficoms
fstps
out
movsb
sbb
sub
loope
mov
outsb
ljmp
xchg
add
cmp
dec
call
add
in
sub
out
dec
loop
cmpsl
adc
sbb
inc
or
sub
cmp
fs
mov
pop
xor
addb
sub
mov
sub
mov
adc
pop
imul
not
and
mov
add
add
rclb
push
sbb
sbb
bound
ret
or
push
sub
gs
and
lds
movsl
xlat
cmp
cmpsb
pop
packssdw
jecxz
and
dec
imul
aad
mov
loopne
add
mov
pop
dec
aaa
cmpl
adc
rolb
mov
sahf
cmp
insl
sbb
xchg
test
jp
ffree
dec
jo
out
rcll
iret
xor
adc
lret
data16
clc
jmp
adc
sbb
jns
xchg
mov
cmpl
iret
je
cmp
je
xchg
neg
je
dec
cmpb
je
hlt
arpl
mov
add
push
shlb
dec
call
int3
shlb
ficoml
outsb
adc
stc
sbb
inc
outsb
sbb
ja
pop
std
out
push
cmp
and
fs
pop
adc
dec
std
bound
das
add
das
sbb
pop
shrb
dec
imul
mov
ljmp
xchg
and
shl
outsb
pop
aaa
cmp
dec
mov
mov
dec
xchg
xchg
ret
mov
fstl
arpl
rclb
pop
aaa
dec
mov
fs
dec
fidivrs
push
outsb
jl
pop
or
popa
jmp
bnd
sub
xor
addb
std
adc
bound
std
cld
xor
test
xor
orb
and
leave
in
inc
ficompl
jmp
outsl
mov
inc
xchg
cmp
sbb
sub
and
jmp
sub
adc
xor
jg
aam
pop
les
lock
mov
arpl
cltd
ret
or
inc
bound
les
outsl
push
push
sub
jmp
cmpsb
xor
fiadds
xchg
leave
or
push
jp
stos
mov
cwtl
xchg
xchg
pop
cwtl
pop
fistpl
ror
roll
xor
scas
cmp
pop
and
mov
jecxz
sarb
mov
addb
mov
cmp
sub
orb
gs
cwtl
aam
cmp
insl
dec
add
pop
icebp
or
push
sbb
and
cmpl
push
insl
ljmp
push
xor
arpl
ret
mulb
fs
adc
push
push
addr16
push
mov
ljmp
fcoms
popa
movsl
gs
adc
pop
bound
dec
jne
xor
dec
mov
or
xor
pop
push
and
mov
cmp
fidivl
push
jg
stos
jae
mov
and
sbb
cmp
int3
xchg
test
xchg
pop
lcall
dec
call
icebp
outsb
xchg
xor
push
sbb
movsb
lock
add
pusha
add
cmp
arpl
jne
or
push
shll
pop
mov
push
adc
adc
pop
push
insb
adc
lock
imul
fisttps
mov
pop
sub
or
rorb
loopne
add
push
jp
adc
push
or
js
and
push
repnz
mov
mov
mov
ret
push
hlt
jl
stos
xchg
cmp
add
xor
push
xchg
or
andb
pop
jnp
push
xor
pop
mov
mov
sbb
adc
xlat
jno
lea
xor
jle
movsb
mov
add
jmp
jne
inc
test
mov
adc
dec
pop
inc
test
loopne
xchg
nop
push
sti
ficoms
jo
or
push
popa
sbb
adc
mov
add
dec
orl
push
fwait
das
pop
addb
mov
std
sbb
loopne
inc
popa
clc
xchg
cwtl
xchg
xchg
mov
jl
outsl
aas
lcall
adc
xorl
xchg
cmp
ret
and
roll
and
gs
jne
mov
cwtl
and
or
iret
add
or
mov
xor
mov
cmpsb
pop
movapd
std
xchg
and
inc
push
out
add
inc
jno
and
jecxz
adc
cmp
test
dec
fisttpll
lret
dec
jmp
sbb
je
cmpsb
add
loop
adc
rcrb
inc
add
pop
or
pcmpgtd
cmp
aam
sti
or
les
aam
mov
or
sbbb
movsb
or
push
test
aad
rol
add
hlt
out
cmp
clc
mov
push
or
push
daa
adc
repz
cmpb
pusha
or
sbb
repz
push
ret
xchg
jle
mov
mov
xchg
pop
out
add
jmp
sbb
mov
lret
xchg
dec
adc
sub
pusha
arpl
add
in
add
call
sbb
popa
pop
sub
or
add
jb
lahf
mov
xorl
add
jmp
dec
lock
mov
adcb
or
ss
daa
inc
and
xor
outsl
add
adc
pop
mov
inc
roll
xor
and
and
jae
inc
or
ret
xor
and
adc
jmp
adc
arpl
test
dec
call
repnz
dec
mov
add
leave
add
xchg
sub
inc
test
mov
dec
pop
mov
addb
cs
in
sub
fstl
add
sbb
aas
mov
lods
pop
add
mov
jae
adc
imul
add
pusha
and
rcl
cltd
lods
aaa
outsl
movb
jne
outsb
lret
mov
addr16
push
mov
mov
repz
inc
push
or
fistl
mov
orb
fisubs
and
inc
add
test
and
sbb
pop
add
repz
dec
mov
sbb
in
or
inc
icebp
out
scas
ret
dec
add
mov
push
jmp
shrb
or
jmp
sbb
push
shll
pop
rcll
sub
mov
fldt
and
fnstenv
or
or
pop
pop
dec
out
scas
rcr
add
hlt
mov
push
inc
pop
sub
adc
sub
dec
xor
movsb
outsb
pop
in
push
sbb
ja
adc
push
lods
jb
dec
push
xchg
lea
adc
adc
cmpsb
mov
in
add
mov
sub
push
push
fs
or
inc
and
add
cmp
test
inc
xlat
addr16
push
lds
add
sub
xor
push
mov
add
icebp
mov
test
fbld
in
or
add
rclb
xchg
sub
mov
sbb
xchg
rclb
dec
jg
fnstenv
push
push
adcl
dec
adc
jne
jae
dec
pop
sub
lods
dec
push
xchg
sub
lea
push
ficomps
sbb
shlb
in
jp
dec
dec
inc
and
movsl
adc
and
or
and
test
mull
mov
jle
push
xchg
and
or
cmp
or
sbb
cmpsb
and
sbb
xor
or
lods
movsl
movsb
dec
and
jp
popa
push
xchg
sub
pusha
mov
insb
insb
sbb
call
insb
jle
cwtl
daa
insb
mov
dec
or
outsl
push
adc
add
inc
dec
add
jo
enter
xchg
adc
sub
out
jle
sub
bound
out
sbb
insl
jge
fsubrl
mov
inc
loopne
popa
xlat
mov
or
pushfw
inc
cmp
pushf
mov
jno
loop
lds
mov
rcr
adc
subb
shl
inc
inc
add
leave
xor
sub
pop
mov
shlb
loope
dec
jb
test
pop
stc
jl
dec
add
cmp
pop
aam
adc
mov
sbb
xor
addr16
inc
pop
cmp
push
cmc
mov
setge
mov
dec
jl
adc
xor
aad
xor
movsb
push
cli
daa
je
les
or
pop
add
lods
sub
imul
jl
loope
test
mov
cmp
sub
dec
mov
push
sub
mov
mov
and
stc
xchg
cwtl
adc
dec
pop
pop
add
popf
add
cmpsb
sar
stos
jg
inc
sub
mov
dec
and
push
aas
pop
fwait
sbb
shl
pop
jne
fcmovu
test
mov
cmp
pop
dec
sar
ret
aaa
xchg
xchg
icebp
lcall
sar
jns
adc
jmp
fidivl
insl
xor
out
arpl
cmp
jge
sbb
mov
cmp
xor
mov
into
or
sbb
sub
adc
add
inc
arpl
fcmovb
cli
hlt
or
jae
sti
sbb
jne
mov
andl
int
scas
and
cmp
and
inc
jl
mov
addr16
xor
mov
or
cmp
add
add
dec
mov
add
push
cltd
popa
pop
push
in
adc
mov
test
not
popa
cwtl
rorb
add
pop
add
xor
dec
lock
xor
cwtl
push
cmp
mov
mov
sbb
adc
push
arpl
push
divl
push
jns
jmp
push
nop
adc
dec
shl
or
jmp
add
lods
pop
sqrtps
cs
inc
push
jp
notb
mov
in
lods
pop
xchg
rol
insb
enter
scas
adc
adcb
adc
add
je
push
jb
outsb
pop
fists
dec
or
inc
stc
jae
adc
cmpsl
and
dec
push
clc
jmp
popl
rclb
or
sub
sbb
arpl
pop
add
sti
mov
sbb
mov
enter
mov
sub
ret
push
dec
outsb
dec
fnsave
cmp
ljmp
push
sbb
adc
iret
out
xchg
ficoml
mov
push
inc
or
hlt
push
or
inc
loope
je
into
sbb
or
jbe
pop
test
rcl
adc
push
inc
popf
movsl
cmp
sbb
cwtl
inc
cmpsl
movsb
xchg
scas
and
adcl
xorl
fnstenv
and
and
or
popa
daa
pop
xchg
data16
loop
mov
cmp
cwtl
jmp
add
daa
les
jmp
sbb
loop
test
sbb
adcl
or
shlb
movsl
jno
das
dec
filds
test
mov
icebp
and
add
rcrb
and
cli
in
push
xor
or
or
enter
xchg
add
pop
lret
mov
adc
ret
pop
sti
sub
mov
lock
and
por
and
loope
dec
inc
or
add
mov
push
rolb
pop
sarb
fisubs
daa
sbb
bndstx
add
adcb
mov
sbb
or
xor
lea
xor
repz
adc
call
icebp
and
shrb
xor
pop
lods
push
mov
pop
dec
adc
dec
jg
mov
arpl
mov
and
mov
out
pop
sbb
std
jne
adc
rcl
popf
sbb
xchg
ret
cmp
lret
xchg
dec
shlb
add
fiadds
pop
sbb
or
scas
js
js
xchg
in
xchg
rorl
fistl
test
pop
or
push
mov
clc
adc
sbb
adc
add
pop
lret
or
fldt
out
cmp
lcall
dec
stos
lahf
popf
add
pusha
hlt
inc
daa
int
movsl
cmovno
xchg
adc
add
inc
fwait
movsb
test
cmc
add
movl
mov
pop
ja
daa
sahf
mov
repnz
dec
icebp
sub
and
pusha
jo
mov
lea
add
pop
movsb
adc
std
pusha
movsb
mov
out
xor
sub
add
test
and
cmp
jl
xchg
in
xlat
jmp
sbb
add
mov
aam
insb
bound
mov
dec
shlb
test
or
insb
outsb
test
rorb
insl
cmp
adcb
shrb
xor
and
push
inc
and
mov
pusha
add
roll
nop
push
jl
add
xor
pop
inc
mov
inc
fdivl
lcall
jbe
popa
lea
hlt
xor
and
or
imul
inc
shl
fildl
sub
lret
cs
and
dec
jae
pop
aam
rclb
xchg
dec
jmp
adc
dec
adc
or
addb
push
mov
in
lods
ret
push
mov
or
lret
add
dec
cmp
ljmp
jno
aaa
sbb
dec
add
cwtl
repz
mov
pop
int3
add
nop
pop
dec
jecxz
jle
imul
xchg
pop
test
dec
dec
fwait
adc
mov
icebp
loope
jns
movsb
mov
pop
push
cmpsl
into
push
cmp
adc
ds
fisubl
sbb
or
ret
pop
insl
testl
xor
xchg
mov
mov
xchg
mov
xchg
push
inc
dec
hlt
xor
pop
addr16
add
rcll
sbb
cmpsb
nop
adc
lds
lret
jnp
notl
pop
sub
fisubs
sbb
adc
js
sub
mov
mov
sub
adc
adc
pop
add
icebp
mov
and
icebp
out
ret
sub
and
loopne
inc
mov
cmp
push
lock
orb
or
or
and
or
adc
add
cmp
inc
mov
inc
jl
lods
dec
push
pop
mov
mov
repz
fmuls
sub
adc
cmp
mov
lock
pop
inc
mov
or
call
sub
lret
ret
xor
sarb
jo
inc
cmp
or
or
jmp
push
out
mov
dec
mov
nop
shll
add
movsb
jne
faddp
syscall
ret
es
pop
ds
cmp
lock
mov
cpuid
adc
inc
rcrl
rclb
xchg
cmpsb
xchg
sbb
inc
fldl
js
icebp
and
jbe
dec
mov
pop
orl
xchg
sub
and
sbb
xor
dec
add
sub
mov
daa
adc
das
push
add
push
insb
xchg
lret
jnp
iret
iret
jbe
sub
and
push
fs
insl
push
negl
pop
xlat
mov
aas
xor
add
cwtl
mov
adc
pop
idiv
inc
je
pop
xchg
xchg
sbb
sti
ja
pop
xchg
or
out
enter
xor
imul
cld
sbb
or
sbb
pop
and
xor
and
push
fldcw
or
insb
jmp
sbb
inc
dec
inc
inc
or
std
push
pop
sbb
or
lret
pop
jmp
or
xchg
stos
sub
inc
sbbl
jge
push
jne
rcl
push
outsl
sbb
jmp
movsl
es
fstl
or
movsl
rcrl
pop
xor
fwait
pop
fisttpll
mov
mov
ja
jmp
ficoml
pop
add
xor
repnz
push
mov
filds
inc
cmpsb
pop
jl
jae
mov
xlat
jle
xor
pop
leave
nop
cmp
or
sub
fsubrs
push
mov
bndldx
test
dec
pop
iret
ss
push
xchg
es
dec
loop
mov
rcrb
pop
test
pop
or
scas
add
xchg
xchg
jl
shll
mov
imul
mov
or
or
push
jmp
in
pop
das
mov
mov
jmp
push
insl
shrb
test
fimull
add
iret
insl
and
shll
cmp
mov
add
inc
rcll
punpckhbw
or
lods
popf
jmp
add
insb
adcb
xchg
xchg
decl
inc
dec
dec
mov
outsl
cs
push
mov
fidivrs
aaa
das
or
jecxz
leave
ficompl
jmp
dec
sub
fnstenv
ret
push
cmp
aam
add
sub
pop
adc
mov
or
push
add
xchg
adcb
mov
mov
cmp
out
mov
xor
lret
adc
setbe
mov
dec
enter
dec
sbb
test
ds
jecxz
pop
push
jge
mov
push
rcrb
loopne
call
sub
mov
dec
in
xchg
lahf
and
adcl
mov
pop
dec
mov
ret
lcall
mov
dec
mov
inc
push
daa
daa
daa
daa
dec
xor
push
gs
daa
pop
dec
mov
sbb
pop
pop
lds
inc
ljmp
add
cmpsl
add
mov
push
lea
pop
dec
dec
inc
xchg
dec
cs
dec
inc
sbb
inc
jbe
enter
pop
sbb
pushf
negb
push
pop
add
je
dec
inc
dec
jg
inc
scas
dec
push
aaa
push
xor
sub
mov
ficomps
fldenv
inc
fs
xor
inc
xchg
xchg
mov
pop
iret
push
enter
inc
adc
sub
cmpsb
aas
test
insl
fmull
dec
ss
movsl
pushf
rep
cmp
adc
adc
xor
pop
jecxz
jno
mov
push
leave
das
pop
addb
xchg
pop
lahf
fstpt
xchg
inc
pusha
mov
jl
inc
testb
hlt
jle
inc
pop
ret
cmp
orb
rcpps
aam
fistpl
les
add
dec
lret
mov
xor
xor
decb
cmpb
adc
push
push
xchg
mov
dec
cmp
mov
rol
loopne
int
mov
wbinvd
jb
out
pop
mov
xchg
lcall
scas
test
add
push
sbb
xchg
loopne
pop
stos
mov
push
shlb
mov
add
dec
inc
test
pop
pushl
or
xchg
adc
mov
cwtl
imul
jmp
movsb
mov
dec
push
xchg
mov
sarb
aam
ja
add
adc
scas
adc
pop
fmull
lret
add
scas
xor
xor
jge
lea
fidivrl
rolb
outsl
lcall
movsb
std
dec
imul
sbb
adc
cli
adc
pop
and
mov
imul
mov
add
add
lds
cmp
pop
or
sbb
cmp
lea
sbb
adc
add
sub
cmp
cmp
push
out
xor
push
push
fisubrl
addb
imul
sbb
rolb
sub
shll
push
jecxz
xchg
mov
and
fs
lods
push
addb
insb
pusha
js
jp
adc
xchg
push
test
les
inc
jmp
cmp
and
xor
test
mov
notb
jmp
add
jb
aas
push
xor
cmp
insb
mov
jbe
outsb
push
lahf
xchg
enter
add
jne
es
bound
pop
mov
rorl
jae
add
jle
mov
data16
popa
mov
xlat
xor
add
xchg
dec
push
std
popa
adc
jo
xor
daa
cwtl
cmp
jne
jns
push
les
sarl
loopne
rclb
mov
sub
and
and
pop
mov
add
pop
xchg
ss
loop
mov
xor
sbbb
pavgw
dec
mov
push
ljmp
sbb
test
fwait
les
cmp
pop
scas
sbb
scas
inc
fisubs
jno
mov
cmp
sub
orb
in
inc
xor
dec
sbb
xorb
mov
addb
sbb
insb
int
inc
out
dec
inc
divb
les
lods
xor
nop
pop
mov
lods
inc
cmp
push
and
and
sub
or
dec
add
insl
jb
mov
out
sub
in
adc
pop
pop
and
xor
js
iret
mov
or
and
ss
or
dec
jmp
jae
push
jo
imul
and
sub
pop
dec
inc
fldt
int3
push
pusha
cmp
adc
fnsave
jb
sbb
addr16
inc
enter
dec
scas
push
jo
mov
test
mov
jbe
subl
or
cltd
and
mov
or
lret
jae
dec
insl
imul
dec
add
push
dec
leave
jge
or
xchg
jne
sub
jne
and
subb
psubsw
cs
cmp
fsubrl
mov
inc
imul
fcmovne
mov
push
or
aas
iret
sbb
xor
inc
arpl
cmp
js
loopne
push
or
jbe
pop
sbb
xor
lods
push
pushf
xchg
sub
jo
pushf
sbb
add
dec
sub
sub
mov
mov
mov
je
adc
mov
dec
call
or
xor
and
inc
push
xor
pop
xchg
dec
push
sub
mov
dec
les
inc
or
xor
lods
pusha
shrl
sub
nop
push
pop
pop
inc
jmp
sbb
push
mov
clc
push
cmp
or
hlt
inc
daa
loopne
mov
hlt
add
fsts
lahf
cmp
and
add
push
fdivs
xor
push
adc
pop
ret
int3
aam
dec
adc
inc
loope
outsl
xchg
sbb
xchg
inc
imul
and
jo
jg
mov
mov
shlb
push
add
imul
dec
sbb
add
lret
sub
inc
sbb
sub
sub
push
xor
fistpl
xor
rcrb
push
pop
add
mov
movl
xor
scas
sbb
xchg
mov
clc
pusha
addb
xchg
or
test
out
inc
lea
shlb
loopne
jno
popa
lock
int3
ljmp
add
sbb
mov
pop
sbb
sahf
jl
adc
add
and
xor
inc
leave
jle
push
or
adc
and
je
sbb
dec
inc
cmp
and
mov
mov
add
sub
cltd
and
mov
mov
mov
sbbb
in
bound
js
dec
or
push
inc
cwtl
xchg
enter
pop
push
out
pop
movsb
mov
jl
test
daa
add
ret
orl
ljmp
dec
or
scas
shlb
rolb
or
test
mov
dec
xor
fwait
pop
fbstp
sub
mov
adc
sub
push
ss
sbb
ret
nop
ret
adc
sbb
iret
inc
dec
aaa
rclb
call
pop
xor
add
push
add
push
push
xchg
outsb
pop
outsb
push
mov
adc
mov
imul
pop
ds
mov
bound
lock
pop
adcb
push
jbe
dec
mov
outsb
mov
out
sbbl
push
or
in
rcll
out
mov
lock
push
or
xor
lock
js
je
inc
loopne
cmp
leave
je
mov
mov
pop
push
and
pusha
mov
xor
shl
outsb
in
insb
lock
adc
or
fdivr
nop
out
ret
lods
or
iret
or
inc
add
or
mov
adc
pop
cmp
push
rolb
cmpsb
xor
sub
push
mov
shll
fcomps
mov
pop
mull
xlat
aaa
dec
inc
imul
pushl
pushl
mov
pushf
adc
pop
xchg
clc
xchg
push
inc
arpl
pop
mov
negb
out
mov
add
add
outsl
xor
mov
adc
inc
sbb
adc
in
jecxz
popa
sub
es
xchg
mov
mov
aas
sbb
movsb
dec
jne
mov
inc
add
ja
movsb
push
addb
xchg
mov
push
fadds
movsb
sub
or
data16
jne
mov
sbb
pop
add
mov
dec
aaa
aas
xchg
pop
xor
aam
inc
xor
rolb
subl
push
pop
sbbl
xor
or
movl
adc
hlt
fsubrl
mov
les
and
inc
imul
or
adc
lds
adc
pusha
add
inc
loopnew
add
dec
mov
xchg
in
ficoml
fldt
sbb
daa
adc
int
or
and
push
add
and
sahf
fisttpl
in
pop
scas
mov
mov
rorb
test
je
mov
jp
xchg
cmp
jnp
sbbb
inc
lods
mov
push
add
or
adc
mov
dec
test
int3
cld
mov
clc
or
cmpsl
push
xlat
dec
inc
dec
dec
dec
inc
dec
dec
icebp
mov
inc
imul
pop
stos
cmpsl
movsb
jo
dec
stc
insl
add
adc
hlt
adc
pop
mov
mov
inc
sbb
sbb
cs
in
xchg
mov
movb
movsl
je
or
insb
adc
fnstcw
push
push
es
add
mov
sub
adc
jg
mov
ret
hlt
add
or
sahf
inc
dec
leave
in
push
sbb
inc
inc
mov
shlb
movsb
adc
cwtl
popa
nop
push
adc
pop
jmp
repnz
in
push
aaa
icebp
mov
inc
sti
mov
push
lods
jno
dec
add
fimuls
xchg
shl
inc
mov
mov
add
les
jge
orl
sbb
mov
pop
imul
je
push
test
pop
cmp
lret
fidivl
sbb
and
sbb
test
jo
cs
insl
test
clc
mov
push
inc
and
inc
clc
push
or
jbe
jmp
fimull
sbb
imul
push
leave
jg
or
movl
jne
add
mov
xchg
bound
outsl
mov
adc
ljmp
imul
push
fs
add
sbb
sbb
int
sbb
insb
sub
js
aad
ss
pusha
scas
add
addb
aaa
push
popa
and
stc
pop
or
mov
adc
xor
or
add
js
cld
xchg
sbb
fisttpll
lret
inc
fs
nop
cmp
subb
aaa
or
mov
or
dec
inc
imul
mov
imul
dec
adc
inc
es
mov
inc
and
sbb
add
sahf
ss
ret
push
pop
in
or
sub
pop
pop
add
xchg
subb
jb
push
push
inc
pop
sbb
jecxz
out
movsl
aad
sti
test
or
jmp
push
sbb
pop
pop
dec
xchg
push
and
lds
push
mov
rclb
movsl
adc
ret
in
sub
mov
sbbl
xor
lea
mov
add
lds
insb
dec
mov
pop
add
pop
add
inc
push
xchg
shlb
sbb
pop
sub
cmpsl
jle
and
xor
lds
sub
pushl
fsubrs
std
test
cwtl
xchg
mov
mov
fbstp
add
test
cmp
mov
dec
ret
sbb
jmp
ret
ret
xchg
js
loope
icebp
jg
xchg
sub
mov
mov
sub
push
lods
push
mov
jne
je
push
jmp
cmp
xor
mov
push
pop
ficoml
inc
bound
ficoms
cltd
push
fidivrs
adc
lret
mov
shlb
sarl
sub
cmpl
lods
insl
mov
rcrb
mov
icebp
inc
mov
xchg
push
ljmp
and
inc
or
sar
mov
pushf
mov
das
pop
jle
and
test
xor
loopne
enter
mov
xchg
or
sbb
shrb
dec
jg
push
das
pusha
jecxz
or
sub
pop
mov
es
pop
je
mov
xchg
les
xchg
daa
mov
sub
test
int
jp
ficomps
pop
mov
or
mov
jp
flds
mov
push
test
sbb
cltd
push
mov
pop
xchg
sub
pop
movsl
or
add
add
push
jg
loope
es
ja
or
push
xchg
arpl
xor
dec
arpl
sub
mov
push
sbb
mov
fs
lcall
or
les
out
fdivrs
inc
xor
or
mov
mov
lock
pop
jb
imul
mov
mov
lods
push
jg
popf
imul
dec
jp
adc
out
popa
inc
bound
add
push
cmpsl
popf
mov
ret
daa
mov
jbe
addr16
enter
sbb
es
mov
adc
pop
add
add
imul
sub
cmp
add
cmp
sbb
xchg
sub
std
je
add
bound
jb
cmp
adc
xor
insb
imul
adc
and
fisubs
sbb
add
pusha
jge
addr16
lret
mov
repnz
cmpb
rorb
adc
nop
xor
jb
mov
sbb
cmpsb
mov
pop
xor
xchg
test
mov
and
jge
mov
das
xor
test
in
ja
xchg
inc
pop
scas
movl
fnstcw
rorb
pop
or
pop
shrb
or
or
or
and
mov
pop
inc
or
add
lods
xor
add
addr16
jnp
rolb
cmp
cmp
popa
cld
mov
inc
adc
xchg
loope
in
daa
cmpl
xchg
adc
push
test
mov
sahf
mov
sub
or
add
ret
mov
call
xchg
add
arpl
adc
std
mov
pushf
or
test
push
sti
movsb
subb
pop
lods
das
xlat
sbb
xchg
imul
jo
adc
test
dec
cmp
jmp
cmp
int
sub
call
pop
pop
daa
in
sbb
leave
adc
shrb
adc
cwtl
mov
xor
adc
rclb
xchg
push
loope
mov
sbb
xor
push
outsl
divl
inc
add
cmp
pushf
pop
jp
inc
inc
rcrb
pop
loopne
repz
or
mov
sbb
dec
daa
cmp
popa
incb
sbb
sub
push
dec
and
adc
add
popa
aas
sti
xchg
or
andl
shlb
and
pop
into
scas
inc
cmp
push
push
les
testb
jmp
arpl
fstl
sub
mov
adc
inc
loope
inc
sbb
push
shlb
cmpsl
xor
xchg
sub
aas
jmp
adc
and
cmp
fsubl
sbb
adc
scas
sbb
add
dec
mov
ret
fistpl
fnstsw
push
sub
jg
andb
pop
sbb
aam
shll
outsl
adc
je
or
pop
pop
test
out
xchg
cmp
sbb
inc
sbb
sub
push
and
mov
nop
push
js
xor
push
cmp
loop
or
call
inc
cmpsl
push
add
inc
inc
popl
faddl
cs
adc
sbb
shll
adc
dec
add
or
movsb
rcll
fs
dec
std
add
int
rolb
mov
rclb
addb
and
ficoml
mov
int
fs
nop
in
aad
pusha
dec
and
js
inc
or
adc
or
shlb
aad
add
cmp
jnp
pop
jecxz
ret
rcrb
jmp
push
js
dec
test
jge
cmpsl
test
int
mov
sti
sbb
jne
mov
cmpb
or
test
jo
mov
pusha
mov
and
or
call
pusha
pop
inc
ljmp
xor
out
hlt
and
xor
wbinvd
ret
cmp
pop
xchg
add
fldenv
cmpb
fsts
bswap
cltd
push
imul
xchg
inc
mov
jb
xchg
sarb
add
jnp
jg
mov
sbb
test
lock
mov
mov
dec
loopne
inc
aam
pushf
into
nop
inc
rcr
sbb
jmp
fstps
ret
lea
lahf
xorb
or
pop
int3
pop
pop
pop
cmp
call
js
inc
mov
adc
push
scas
test
in
in
xor
movsb
pop
rorb
xchg
insb
and
in
in
cld
loopne
mov
mov
repnz
add
iret
push
fmull
cmp
aad
xor
inc
invd
sarb
dec
and
sbb
push
mov
fisttpl
adc
scas
add
mov
dec
mov
cmp
add
inc
jl
cmp
mov
jl
adc
cmp
dec
sbb
iret
mov
pop
cmpb
adc
sbb
or
pop
sbb
pop
jp
jmp
daa
dec
mov
sbbl
xor
dec
test
bsr
xor
push
jns
test
pop
addr16
jg
loopne
lods
push
add
cmpsl
je
ret
cmp
add
adc
sub
dec
xor
cwtl
jle
loope
test
clc
adc
test
lock
mov
sbb
inc
shrb
xlat
sbb
cmp
sbb
sahf
aaa
aad
into
daa
mov
js
cmpb
and
push
fs
jmp
addps
arpl
mov
jnp
es
mov
sbb
dec
mov
dec
leave
push
inc
adc
pop
sar
lods
test
test
inc
xchg
jmp
pop
xorl
add
sahf
subb
or
rorb
xlat
fiaddl
pop
nop
lret
rcll
mov
adc
dec
lds
sbb
and
fwait
testl
xchg
inc
add
pop
pop
xlat
mov
addl
xchg
nop
movaps
add
sahf
daa
sbb
jne
and
add
imull
xorb
movsb
daa
fiadds
adc
mov
test
sub
sub
sub
adc
pop
js
repz
loope
push
pushf
adc
cmp
rcrb
sbb
sbb
jae
notl
fwait
mov
js
adc
xchg
add
pop
mov
push
jecxz
push
loop
lock
or
jne
pop
jg
xor
imul
add
sarl
cmp
jnp
pop
test
lahf
adc
stos
push
test
push
clc
and
pop
mov
ja
lods
mov
jno
inc
loopne
dec
or
and
arpl
pop
and
mov
push
sub
shrl
rorl
outsl
xchg
aas
dec
out
sbb
xchg
mov
add
or
fstl
jo
and
pop
inc
loope
shlb
jns
pop
adc
mov
ljmp
jp
and
sbb
pop
mov
mov
sbb
and
mov
pusha
inc
add
and
sahf
add
nop
xchg
pop
aad
pop
movsb
lea
insb
fldl
test
pusha
or
int
cmp
addb
fldpi
and
mov
mov
lds
addr16
mov
mov
loopne
adcl
and
test
sbb
cli
lock
sbb
and
aas
xchg
add
pusha
inc
ret
movl
nop
and
add
inc
cmp
or
jo
andb
inc
imul
adc
jo
mov
adc
add
rorb
xchg
or
movaps
pop
cmp
into
js
aam
shlb
dec
mov
stos
adc
data16
insl
cmp
add
bound
ss
lcall
sub
push
scas
movsb
push
fcmovb
add
dec
aam
add
lock
iret
cmpsb
shll
out
loopne
iret
in
cmpsb
xchg
push
sbb
es
pop
sbb
cwtl
jmp
mov
mov
int
fcmovb
pop
gs
adc
or
pop
inc
sub
ret
in
aad
rcl
dec
das
adc
cmp
xor
xor
add
push
adc
nop
outsb
mov
adc
fistps
data16
loopne
mov
or
mov
adc
xchg
add
out
lahf
pop
inc
adc
dec
xor
sbb
cltd
addr16
clc
inc
add
in
int3
cli
jl
jne
or
sbb
push
prefetchnta
aas
aam
sub
outsb
cmp
inc
daa
push
jae
lea
jo
push
sbbl
ljmp
push
push
sbb
std
movsb
mov
mov
adc
sub
stc
xchg
adc
mov
xchg
les
push
xor
adc
mov
and
je
je
xchg
es
mov
data16
sub
sub
aam
dec
or
add
sbb
fcmovnb
es
leave
addl
mov
mov
pop
mov
xchg
decl
push
popf
adc
adc
or
add
and
aam
inc
push
stc
pop
ret
sbb
jb
and
add
or
imul
add
adc
dec
push
fs
nop
fsubs
xchg
and
dec
andl
fists
or
cmp
inc
mov
xchg
or
dec
loop
ret
xor
or
sbb
sub
inc
sbb
push
pusha
xorb
lods
dec
mov
xor
sub
nop
test
dec
ljmp
movsb
sub
add
and
addb
cmpsb
xor
or
lahf
push
xor
or
or
popf
jo
shll
xor
out
mov
add
xchg
mov
enter
mov
dec
jecxz
ret
mov
push
cmp
cmpsl
and
es
insb
lea
nop
mov
sub
sub
ret
dec
dec
addl
rcrb
or
pusha
jmp
cmp
xor
in
push
push
lahf
push
jo
cmp
pop
or
xchg
sub
jne
push
sbb
out
adc
or
syscall
mov
and
test
mov
imul
pop
pop
adc
stos
jmp
adc
sbb
test
roll
mov
sub
or
test
jmp
sbb
adc
adc
movntq
mov
pop
inc
cwtl
dec
dec
or
sarl
mov
push
mov
or
dec
pop
jne
js
jecxz
push
daa
out
rcr
inc
lcall
fistpl
fsubl
push
popf
daa
mov
cmp
sbb
pcmpeqb
sti
sub
iret
add
in
jge
sbb
and
adc
cmp
cwtl
sti
int3
pop
test
jp
pop
or
push
mov
cmp
pop
int
nop
pop
aam
add
add
xchg
add
xchg
xorl
rcl
push
push
inc
cli
fwait
clc
adc
dec
fmull
pop
add
mov
adc
cmpsb
nop
out
or
lea
jg
xor
and
push
adc
xchg
rcrb
arpl
xor
xor
xor
jno
iret
data16
ljmp
add
aad
push
jns
inc
arpl
adc
adc
xchg
xchg
and
hlt
dec
loop
jge
insl
hlt
pop
add
push
js
mov
lea
or
add
xchg
jle
mov
sbb
mov
sbb
in
sbb
and
insl
mov
fs
outsl
mull
sub
pop
pop
rolb
rorb
lock
push
dec
rcrb
shlb
xchg
mov
cmp
cmp
fstl
add
or
inc
shl
enter
fldl
add
and
sbb
andl
leave
bound
test
loopne
inc
or
jne
daa
into
loopne
bswap
mov
test
mov
push
mov
test
pusha
adc
imul
push
jmp
flds
mov
mov
xchg
push
insl
shlb
mov
and
dec
xchg
mov
loop
out
xchg
inc
xchg
les
add
sub
add
mov
pop
repz
mov
mov
daa
push
rcl
inc
mov
mov
dec
sbb
sti
arpl
or
add
aam
jg
push
addr16
clc
jecxz
rclb
insl
dec
jne
xor
fst
movsl
push
pop
add
les
bnd
jle
iret
in
inc
jl
lock
fcom
ss
jne
orb
push
ja
nop
push
push
pop
decl
mov
fcomi
imul
hlt
sub
clc
enter
dec
iret
jl
je
xorl
mov
mov
inc
pop
sub
movsb
xlat
inc
pop
sarl
shl
dec
mov
lret
sub
shll
xor
cmp
lock
dec
xchg
fneni(8087
sbb
cmp
in
mov
clc
xchg
test
nop
jno
xchg
fidivs
pop
rcrb
mov
je
cmp
pop
xchg
cmpsl
or
add
out
adc
lds
dec
aaa
roll
and
lret
popa
out
and
rol
and
dec
enter
pop
mov
dec
adc
rclb
xchg
inc
cltd
adc
mov
mov
inc
sbb
loopne
mov
dec
cmp
or
inc
mov
push
dec
les
sbb
inc
js
dec
inc
add
test
xchg
inc
and
jae
adc
sub
xchg
xor
adc
mov
dec
or
dec
jae
es
sub
adc
inc
sahf
test
mov
sub
mov
enter
push
pop
sbb
add
sub
push
pop
shr
inc
dec
andb
push
dec
mov
popa
push
dec
dec
xor
pop
dec
add
or
test
lcall
jmp
jo,pn
sub
pop
and
xor
push
adcl
movsb
or
dec
sub
lea
scas
mov
rcrb
dec
test
and
call
mov
and
scas
mov
sub
in
push
je
out
insl
imul
push
dec
out
add
adc
cltd
mov
cmpb
je
rclb
in
int
xor
insb
xor
insl
movsl
clc
out
push
pop
or
push
cmpsb
pop
jl
add
mov
cwtl
js
cmp
adcl
adc
in
mov
lsl
ss
ret
aam
inc
rcr
xchg
push
sub
int3
or
ret
ret
inc
push
dec
lock
sbb
mov
cmpsl
push
add
popa
push
sub
xchg
stos
push
adc
or
orb
jo
sbb
adc
push
shlb
add
mov
popa
jle
popa
in
inc
jmp
jno
mov
and
xchg
jmp
push
inc
subl
inc
lret
lods
push
inc
pop
cmp
shll
lret
mov
mov
rolb
adc
out
jmp
add
adc
out
pop
cmp
inc
mov
shlb
dec
and
mov
pop
mov
les
aaa
incl
sub
sbb
loopne
daa
and
je
lea
lcall
subl
insb
addb
cmp
rorl
dec
mov
xchg
or
ret
lcall
dec
and
mov
movsb
or
push
pop
and
sub
lea
add
mov
add
sarb
and
jbe
cli
cld
dec
pop
popa
nop
clc
adc
or
addr16
jmp
adc
xchg
push
bound
mov
and
inc
lcall
cmpsb
leave
lds
stos
loopne
adc
in
pusha
call
adc
xchg
fcom
fs
jle
and
stos
xor
mov
movb
dec
loop
loopne
and
add
call
movsb
outsb
cmp
pop
lods
add
sub
push
mov
sbb
insl
add
gs
mov
pop
jns
sbbb
cmpsl
das
dec
fsubl
cwtl
mov
mov
jecxz
push
test
mov
or
out
int
test
sub
scas
das
mov
sbb
add
lds
sbb
sub
sbb
pop
jnp
pop
loopne
xor
movlps
and
daa
sub
add
dec
mov
jo
mov
dec
inc
xchg
cld
push
xor
mov
outsl
or
inc
scas
fcoms
pop
inc
mov
ret
sbb
mov
dec
jb
gs
shrl
pop
sub
lret
popf
jb
push
adc
imul
mov
leave
push
imul
jecxz
jbe
mov
or
andb
fildl
je
add
lods
fidivrl
mov
bound
jmp
mov
adc
mov
les
mov
sub
das
adc
or
or
cmp
pop
or
cmpsl
xor
inc
push
sub
adc
or
sbb
adc
outsb
adc
adc
movb
adc
add
nop
sbb
insl
mov
mov
xlat
mov
insl
push
or
adc
adc
sbb
pop
dec
lcall
mov
xchg
xchg
rdtsc
ret
js
xchg
inc
and
jne
push
dec
add
sbb
push
and
adc
adc
push
ss
mov
stos
mov
cmpb
cmp
mov
enter
sub
mov
in
and
push
mov
aam
add
ret
or
inc
or
arpl
hlt
mov
es
insb
sub
add
rclb
jbe
lea
pop
loopne
or
lds
push
sbb
sbb
pop
imul
push
push
push
aas
pop
or
pop
sbbb
lcall
mov
mull
dec
cli
in
cmp
aaa
movb
dec
cmp
gs
sub
adc
movsl
imul
adc
push
lcall
sbb
xor
xchg
sbb
subb
mov
dec
shll
adc
push
sbb
jge
xor
pop
ret
and
push
add
pusha
out
je
out
lods
sub
push
movsb
js
popa
fiaddl
or
xor
cmpsl
cmpsl
out
cmp
push
ja
loop,pt
call
mov
loop
push
push
sub
call
dec
mov
push
xor
pushf
ss
sbbb
jo
add
int3
sbbl
add
bound
cmpb
arpl
sbb
andb
sbb
gs
data16
sbbb
lods
sbbb
push
jb
in
push
or
imul
inc
push
cmp
dec
cmp
cmp
outsb
push
cmp
mov
inc
push
cmp
int3
cmp
cmp
jb
push
nop
sub
icebp
jae
sub
xchg
je
sbb
xchg
and
xchg
ja
sbb
xchg
in
arpl
enter
cmp
nop
inc
push
nop
sub
dec
push
nop
inc
push
cmp
nop
inc
mov
inc
push
nop
lods
cmp
push
nop
inc
push
pop
in
das
mov
fs
repz
enter
sub
dec
pop
enter
insb
xor
pop
enter
enter
lods
xor
pop
ss
aaa
fadds
xor
in
add
sub
dec
add
nop
add
nop
add
nop
inc
mov
nop
add
lods
inc
int3
add
nop
add
insb
add
inc
aas
jb
add
dec
dec
add
add
enter
dec
mov
enter
dec
int3
add
add
orb
notb
cmp
add
sub
dec
add
in
push
insb
in
cmp
push
mov
in
cmp
add
mov
jmp
mov
rclb
sub
repnz
clc
inc
push
ds
fcoml
push
pusha
mov
enter
jl
in
inc
mov
lods
pop
and
aam
loopne
mov
in
pushf
cmp
fcoms
ss
mov
out
mov
xchg
ret
sbb
stc
mov
test
test
inc
jb
xchg
subl
xor
cli
xorb
sbb
imul
cld
xor
or
dec
add
push
bound
notb
nop
fisubrs
jbe
xor
repnz
inc
arpl
sub
js
movsl
outsl
inc
fisttpl
dec
outsl
ljmp
pop
sbb
xor
insb
fmuls
push
cwtl
outsb
in
movsl
push
adc
adc
stos
xor
or
imul
or
push
insl
inc
outsl
mov
or
popa
js
ss
add
adc
and
imul
fisttpll
cmpsb
js
fcoms
or
scas
das
fisubl
push
inc
pop
mov
inc
inc
xor
imul
test
jge
cmp
add
aaa
pop
dec
xchg
rcl
push
gs
stc
mov
cmpb
cwtl
add
inc
cmc
lods
je
ja
push
adc
adc
mov
add
inc
idivb
test
iret
arpl
xlat
or
adc
mov
xchg
addr16
es
push
in
sbb
add
and
xlat
add
fs
out
sarl
mov
add
shll
or
cmp
add
mov
add
das
xor
pusha
sub
jne
pop
add
nop
mov
aaa
mov
cmp
push
xorl
inc
inc
push
adc
push
push
pop
xor
sub
push
out
mov
mov
test
cmpsb
fldenv
popa
or
sti
nop
andl
dec
aad
or
mov
dec
cmp
cmp
mov
scas
push
test
push
ljmp
xor
xor
xchg
movsb
xchg
loopne
jp
popl
cmp
add
cmp
popa
lahf
test
sbb
xor
or
xor
jns
sub
dec
stos
or
call
dec
js
or
mov
divb
incl
mov
cwtl
sbb
mov
pop
repz
push
or
and
or
adc
jnp
xchg
test
mov
or
jbe
or
sbb
cmp
shrb
incl
movaps
sub
cmp
cmp
sbb
daa
inc
mov
loopne
mov
dec
aad
inc
imul
xchg
lock
push
ret
mov
lahf
pop
sbb
mov
cs
sub
xor
aaa
inc
imul
cmp
or
add
and
inc
add
sub
pop
ljmp
out
orl
fidivrs
stos
push
mov
fisubs
loope
testb
inc
movsb
fwait
pop
mov
pop
sbb
cmp
cmp
sub
sbb
mov
xchg
inc
or
adc
push
es
xchg
js
test
adc
jne
std
add
shll
popf
nop
pusha
xchg
mov
sub
push
cmp
push
ret
ret
mov
push
clc
or
ss
inc
and
cmc
adc
pop
aaa
xor
cmpb
je
mov
xor
les
mov
adc
movsb
je
cs
insb
adc
cmp
add
ret
jge
xor
insb
jne
stos
loopne
dec
xchg
ret
mov
jno
pop
cmpsb
jle
pop
push
jns
mov
loopne
loopne
xchg
clc
or
mov
ljmp
sub
pop
inc
xor
stos
pop
es
jo
push
inc
dec
push
jbe
mov
mov
mov
aad
push
sub
addb
xor
push
rolb
cvtps2pi
iret
jne
cmp
push
push
sub
rolb
int3
insb
inc
adc
mov
sub
ret
clc
mov
push
sarb
mov
test
add
xchg
cmpsb
push
add
inc
aam
mov
enter
fcmovnu
pop
cmp
cltd
adc
shl
int3
mov
inc
je
jp
fwait
loop
loope
adc
mov
pop
pop
and
in
xchg
pop
or
inc
cs
cmp
inc
les
stos
push
les
fists
in
mov
imull
push
push
enter
inc
push
mov
xchg
sbb
add
inc
mov
dec
mov
cmp
dec
add
jecxz
mov
shll
push
mov
cmp
test
inc
inc
inc
ss
je
sbb
sbb
dec
inc
sbb
add
add
sub
adc
adc
dec
fcmovnb
xor
loopne
adc
addr16
mov
add
xorb
mov
pop
mov
test
xchg
push
xchg
arpl
mov
jne
mov
cs
push
js
push
jb
mov
lods
jae
xchg
mov
es
sbb
xchg
fdivp
sar
jne
jno
arpl
cmp
imul
push
xchg
fcomps
ss
inc
mov
iret
repz
sbb
sub
xor
fucomi
cmp
aas
jmp
jae
jge
ret
fucomi
dec
and
mov
sub
sub
pop
sbb
roll
jne
in
adc
pusha
push
xchg
jp
dec
add
pop
fstpt
jno
jecxz
jl
js
das
loop
fcoms
mov
cmp
sub
sbb
jno
scas
roll
rolb
sbb
jno
add
icebp
fdivs
jno
incl
loope
mov
dec
sbb
movl
or
popf
mov
mov
push
sbb
scas
adc
pusha
pop
push
xor
and
mov
cmp
or
dec
mov
pop
add
push
xlat
and
in
ret
js
cld
inc
insb
call
mov
mov
shl
out
pop
adc
scas
js
inc
pop
xlat
dec
mov
pop
outsl
pop
loope
adc
jg
push
sub
pop
xchg
push
push
push
inc
inc
dec
hlt
ret
sub
pop
push
cmp
dec
mov
fwait
sbb
pop
add
gs
dec
dec
inc
cmp
test
or
fnstcw
in
repnz
jg
cwtl
int
or
in
push
xorb
ss
add
mov
mov
sbbb
test
sub
insl
test
push
shll
stc
inc
xlat
loopne
and
rcr
mov
inc
jo
in
push
xchg
mov
adc
xchg
out
mov
fldenv
xor
mov
leave
test
fidivrs
jge
fbstp
cmp
shrl
out
test
popf
xchg
push
mov
sbb
cli
xchg
inc
movl
enter
mov
mov
movl
lea
push
aaa
sbb
and
mov
and
stc
incb
cmp
mov
and
xchg
add
push
xor
cs
js
inc
pcmpeqb
jns
cmp
and
test
std
sub
out
dec
mov
mov
adc
cwtl
pushf
jg
jne
shlb
inc
push
dec
push
sub
add
roll
gs
loop
jle
mov
add
mov
call
xchg
movl
das
add
add
ret
inc
push
pop
mov
sbb
mov
repnz
ret
jmp
xchg
add
and
lods
inc
pop
jo
and
cmpsl
out
push
push
mov
xchg
hlt
xor
sbb
add
push
or
xor
and
inc
sbb
xchg
xchg
cld
mov
fcomip
sahf
inc
adc
shll
cmp
inc
sub
dec
aam
push
inc
adc
or
pop
daa
push
mov
mov
enter
xor
ret
mov
dec
and
ficompl
call
sbb
into
or
mov
lods
fisubl
in
out
mov
loop
and
clc
mov
or
cmp
mov
cld
cmp
and
add
and
adc
inc
rorb
neg
movl
lock
dec
movd
push
add
jnp
adc
movsb
je
sub
cld
or
jmp
mov
push
or
mov
sub
inc
adc
jg
jmp
sbb
nop
push
mov
mov
jp
cli
movsb
add
sbb
push
lock
popa
dec
pop
jmp
mov
out
into
je
jae
cltd
nop
add
mov
mov
or
out
mov
push
push
or
mul
repz
sub
push
dec
repz
pop
mov
sbb
jp
mov
std
fisttpll
outsb
add
rorb
outsb
push
ljmp
add
push
push
or
add
fisubl
popa
push
iret
jg
push
shr
ret
das
es
adc
shll
and
mov
push
cmp
add
mov
add
push
imul
int
sub
push
pushl
std
or
sarl
rcrb
xor
xor
sahf
add
test
es
add
pusha
and
or
add
shl
repz
and
mov
hlt
fisttps
shl
add
roll
enter
add
adc
dec
mov
movsl
add
sahf
test
aaa
mov
sbb
dec
sbb
cltd
sbb
jno
jnp
flds
std
jne
inc
outsl
ret
js
nop
dec
add
pop
fwait
inc
and
xchg
pop
push
jo
xor
mov
dec
loope
sbb
lds
or
ret
push
xchg
je
add
fwait
in
push
sbb
ret
or
sub
sub
or
pop
int
pop
and
test
mov
or
dec
pusha
jmp
jmp
mov
sbb
mov
pop
xchg
cmc
adc
loope
cltd
mov
cmp
mov
test
data16
lea
mov
mov
je
sti
pshufw
jb
mov
mov
jmp
dec
sub
add
xor
nop
and
arpl
sbb
or
lds
fs
mov
push
mov
push
pusha
sub
mov
dec
jmp
mov
mov
xor
add
es
add
or
jge
test
add
aad
rcll
jb
cmpsb
dec
inc
mov
pop
cmp
js
popa
or
xor
fimull
mov
mov
and
rolb
imul
sbb
xchg
dec
push
adc
in
sub
inc
adc
nop
add
mov
jnp
test
loopne
xchg
cli
fsubs
xor
ret
adc
dec
lret
inc
aam
or
stos
arpl
pop
aas
test
in
mov
incl
push
push
jmp
test
loop
or
rcrl
sbb
jmp
xchg
ret
jl
cwtl
rolb
pop
in
add
pcmpeqd
add
ficomps
mov
add
in
lea
jge
push
mov
in
mov
mul
insb
mov
out
out
iret
xchg
mov
cmp
jbe
sub
push
jne
and
enter
lea
xchg
push
shll
adc
mov
sub
bound
pop
pop
les
rolb
les
dec
mov
jb
pop
dec
pop
nop
mov
sub
test
xchg
icebp
pusha
sbb
test
jl
mov
push
imul
shr
pop
jbe,pn
ljmp
in
fwait
addl
fadd
mov
ret
ja
test
adc
decl
insl
jo
aam
jb
aam
and
nop
push
xchg
fdivs
inc
pop
sub
xchg
sub
xchg
add
neg
inc
enter
sbb
pop
aam
and
xchg
mov
push
scas
and
push
fiadds
dec
pusha
sub
mov
adcl
cwtl
filds
cmp
outsb
pushl
sbb
faddl
push
enter
jmp
mov
jbe
out
jmp
add
ss
icebp
notl
mov
shll
sub
cli
mov
bound
lea
lock
adc
adc
or
shrb
incb
sub
inc
es
jo
aaa
fcomps
rclb
add
addl
mov
shl
push
cmp
mov
push
cmc
xchg
scas
fiaddl
xor
call
aaa
sub
mov
mov
xchg
mov
shr
mov
dec
sub
sti
test
jmp
sar
ss
es
or
adc
shrb
adc
cmp
enter
loopne
jl
lock
mov
mov
ret
push
test
push
dec
fsubrs
ja
cmpsl
add
and
hlt
mov
test
test
sbb
or
fsubs
sbb
adc
imulb
jo
add
rcrb
orl
push
mov
stos
orl
repnz
dec
xchg
jle
mov
sbb
or
jae
cmp
pusha
dec
insl
jmp
mov
fiaddl
or
adc
orb
sub
dec
fcompp
inc
or
jmp
inc
mov
mov
jg
fwait
and
adc
lock
lock
cmp
pushf
ds
sub
adcl
mov
push
mov
dec
in
dec
int3
rolb
sbb
pusha
dec
xorb
jne
data16
rorb
jl
pop
das
or
cmp
or
push
inc
fildll
lock
push
mov
orl
xchg
fwait
inc
add
xchg
jo
sbb
add
loopne
sub
fnstenv
push
jl
std
inc
lock
sbb
inc
in
sub
cmp
jno
sbb
cmp
insb
adc
pop
xchg
push
or
js
dec
adc
xchg
dec
sbb
add
pop
inc
pop
arpl
jl
sub
cmp
inc
sbb
adc
jl
sbb
je
add
insb
loop
mov
sbb
inc
mov
cli
xchg
add
inc
rcll
mov
loope
test
mov
testb
sti
jne
ds
push
jmp
aaa
sbb
movsl
jno
lret
outsl
sbb
ja
xchg
mov
add
sub
testb
fs
sub
test
xor
adc
or
jne
dec
loop
jmp
fdivp
push
or
in
jbe
adc
lea
ficoml
inc
add
mov
pop
loopne
push
xchg
add
adc
sti
jae
adc
add
mov
or
sub
pop
sub
and
push
and
or
or
push
jae
pusha
mov
aam
lea
fmulp
cmp
inc
xor
mov
in
dec
ret
pop
xchg
pop
addr16
xchg
adc
mov
ret
fs
xor
push
jle
add
fadds
xor
outsb
pop
js
sbb
push
and
or
xchg
push
mov
add
add
xchg
sub
inc
xor
fstp
orb
in
cs
cld
outsb
imul
mov
or
or
and
imul
jns
dec
loopne
push
sbb
in
pop
sub
or
xlat
ds
jecxz
mov
add
leave
push
movsl
sbb
ret
pop
lahf
inc
les
cmc
inc
cmp
push
push
in
ret
sahf
mov
dec
shrb
pop
pop
roll
dec
fcoms
cmp
jae
sbb
fisubl
dec
dec
jmp
push
sub
sbb
inc
dec
or
test
mov
jl
sbbl
add
sbb
fwait
int
jmp
dec
and
add
cmpsl
mov
imul
jmp
fimull
jecxz
ret
or
pop
adc
addl
add
add
push
out
dec
loope
mov
ret
ret
lods
pop
xor
jmp
or
add
rcl
loop
xchg
lcall
insb
out
jl
or
jb
adc
pop
mov
test
sbb
sar
mov
cmp
xor
pop
or
push
cmp
add
lea
insl
pushf
lock
test
push
dec
xchg
and
out
aaa
inc
faddl
mov
pop
fwait
sbb
lock
test
push
push
sbb
stc
inc
cmpsl
or
push
out
dec
inc
in
push
adc
adcl
push
dec
jae
nop
xor
add
push
push
and
dec
or
push
repnz
add
push
or
idiv
mov
and
and
rolb
sub
lock
and
enter
mov
imul
or
movl
test
jne
nop
stc
mov
inc
inc
daa
jp
mov
enter
jmp
push
outsl
test
popa
mov
or
mov
jl
adc
mov
add
push
push
pop
push
jp
xor
pop
lods
adc
enter
xor
mov
stos
int3
outsl
and
enter
pop
sbb
add
push
mov
xor
roll
repnz
addb
add
ja
pop
push
movsl
jp
and
mov
scas
int
clc
jbe
adc
cmp
jae
insb
xlat
std
aaa
add
xor
jl
jne
ljmp
popa
jnp
add
cmp
jl
inc
pop
jl
mov
rorl
mov
lcall
add
popa
and
aas
adc
sbb
xor
pop
and
ja
jg
add
adc
sbb
sbb
sahf
xchg
mov
add
lea
xor
add
push
movl
sub
daa
js
push
push
loopne
or
ficoml
or
test
xadd
sbb
jae
les
bndldx
push
sub
mov
xchg
adc
cwtl
or
outsb
clc
adc
and
jb
movl
dec
dec
sbb
loope
faddl
mov
sbb
jno
and
cmpsb
push
xor
mov
test
sbb
dec
addl
outsb
jnp
arpl
sub
mov
jmp
jle
hlt
xchg
scas
stos
mov
mov
shl
or
or
scas
lret
jb
mov
cld
rorl
push
ret
mov
and
rcll
add
xchg
adc
jge
push
or
addl
test
add
mov
sub
push
add
clc
mov
mov
inc
stos
or
push
popa
lods
fisttps
clc
out
or
iret
shl
or
and
cmp
jb
imul
int
shl
adc
lcall
lret
popf
xor
int
sub
call
arpl
cmc
loope
jb
push
jne
test
push
push
loope
lea
lret
sbb
push
rorb
sbb
cld
jmp
sbbl
and
inc
call
xchg
add
pop
pop
xchg
and
and
sub
sbb
daa
je
xlat
xchg
inc
inc
fildl
cmp
sub
inc
sub
push
fdivs
fdiv
or
push
mov
cmpl
or
add
cmpsl
inc
push
pop
xor
push
jae
add
jmp
ficoms
adc
cmp
stos
cmp
cmp
sbb
mov
mov
push
mov
mov
push
test
mov
mov
je
sahf
mov
and
or
aaa
in
push
pushf
dec
push
arpl
add
outsb
ja
rorb
pop
pop
ret
ret
sbb
push
xor
mov
xor
sub
dec
pusha
sbb
push
fcoms
daa
xor
add
stos
iret
or
and
rolb
mov
jmp
or
inc
xchg
inc
fsubrp
cmp
shrb
xchg
xchg
push
jg
mov
std
mov
movups
mov
popf
and
mov
sahf
push
push
and
hlt
mov
adc
push
aam
aas
popa
mov
dec
inc
add
xchg
inc
mov
mov
mov
leave
mov
inc
clc
mov
xor
fistpll
loopne
adc
xchg
daa
out
or
sbb
and
sub
fidivrs
lret
mov
pop
mov
fsubrs
enter
fs
add
fists
push
adc
mov
dec
sub
jno
dec
sub
sub
sub
cmc
cs
mov
stc
mov
andb
xchg
or
xchg
stos
call
jnp
jbe
ss
add
add
or
adc
cs
adc
sbb
inc
adc
and
ds
pop
or
xchg
sub
loopne
fdiv
inc
push
sub
lahf
cmp
adc
adc
das
loope
mov
cmp
sbb
in
mov
dec
or
movl
hlt
adc
jne
add
lea
jmp
mov
inc
rcrl
out
mov
incl
xchg
fbstp
out
jmp
mov
jecxz
adc
imul
popf
pop
jnp
mov
mov
jg
ss
test
sbb
outsl
mov
or
lods
pusha
sbb
lock
testb
mov
sub
je
pop
imul
or
add
ss
inc
jne
insl
and
pop
shl
adc
roll
mov
arpl
je
xchg
cmp
add
lds
push
mov
das
sbb
inc
mov
imul
and
cmp
ds
sbb
jmp
je
arpl
adc
loopne
push
mov
adc
aas
dec
sbb
mov
and
pusha
or
movsl
jl
cmp
pop
testl
push
add
or
mov
adc
pop
mov
fmuls
sub
xor
inc
and
dec
or
add
mov
shrb
negl
pop
dec
sub
rorl
xchg
inc
push
sub
lret
push
pop
jl
push
dec
push
aad
scas
repz
pop
add
lea
mov
inc
xor
mov
idivb
dec
mov
rcrb
outsl
add
rcrl
xchg
cmc
test
insl
lds
or
add
shrb
fistl
inc
pop
shlb
out
or
mov
inc
sbb
mov
rcrb
sbb
mov
lret
cmp
cmpb
cmp
andb
and
xor
jmp
or
inc
lods
adc
mov
movsl
xor
and
movsb
ret
aaa
jns
ret
mov
stos
inc
jmp
lods
and
mov
inc
push
xchg
adc
rsqrtps
xchg
dec
inc
pusha
add
jmp
lock
lock
mov
jnp
xchg
clc
ja
pop
xor
add
rcll
mov
inc
pop
stos
movsl
mov
jbe
pop
jno
addb
inc
inc
cmp
je
es
dec
adc
lods
ffree
inc
cmp
sbb
frstor
and
sbb
fmull
clc
dec
sub
in
dec
insb
fdivs
movsb
cli
mov
shll
movsl
mov
pop
xor
cld
repnz
addl
iret
or
mov
sahf
xor
add
and
aam
fisttpl
mov
mov
ret
and
lret
and
pop
xchg
mov
dec
xor
call
or
push
out
xor
dec
nop
pop
jbe
jp
pop
jmp
cltd
js
bound
mov
mov
push
push
cmp
jae
ljmp
fisttps
add
push
shl
or
xor
lods
pop
or
lret
sub
mov
enter
rorb
add
lret
fdivs
addr16
sbb
fsubs
add
add
in
xchg
and
inc
idivb
adc
dec
cld
gs
pop
repnz
or
mov
push
add
bound
jae
xor
mov
lret
and
ss
addb
add
loopne
or
clc
mov
dec
add
and
sub
jecxz
add
testb
scas
ss
ret
cmp
mov
mov
push
or
cli
rcr
xor
mov
adc
or
jns
fwait
or
das
out
push
inc
iret
dec
ret
pop
xchg
pusha
dec
mov
mov
mov
adc
push
pop
dec
jmp
jge
popf
vpunpckhbw
out
sbb
or
and
jb
fidivl
push
ds
sub
orl
mov
in
jne
test
sbb
adc
adc
and
aam
sub
popa
push
icebp
cmp
in
sub
shr
adc
adc
add
iret
push
je
inc
xor
fiadds
adc
and
out
pop
push
pop
sbb
lcall
in
mov
sub
add
fs
mov
or
js
dec
xor
mov
hlt
fcmovne
add
ret
and
fildll
mov
mov
adc
mov
sbb
int3
ret
jmp
lods
cld
xchg
icebp
test
or
cmpl
rol
add
inc
pop
mov
sbb
ljmp
aas
es
mov
nop
cli
xchg
inc
cmp
movsb
push
add
test
rcrb
dec
in
push
stos
adc
push
hlt
pop
push
test
addr16
pop
sbb
rolb
aam
push
fs
fiaddl
sub
js
movsb
and
dec
or
jnp
pop
gs
add
push
dec
popa
cmp
pusha
dec
andb
cmp
adc
or
leave
sarb
les
dec
lods
iret
mov
mov
inc
mov
aam
clc
add
pusha
fsubrl
xorb
das
ss
push
mov
ror
mov
pop
inc
incl
xor
jne
bound
cmpb
out
mov
pushf
jbe
xchg
clc
enter
or
or
rolb
cmpsl
mov
push
mov
add
sub
lret
loope
adc
mov
mov
in
cmp
cmc
xchg
add
je
mov
jmp
pop
mov
dec
sub
std
adc
or
mov
daa
rolb
test
push
imul
mov
adc
cmp
movsb
dec
imul
std
adc
mov
cmp
jns
adcl
xor
xchg
mov
sti
push
cmp
sbb
lret
pop
cmp
mov
pop
inc
imul
ljmp
mov
in
loopne
or
or
sub
aam
dec
rol
or
and
adc
push
adc
arpl
nop
ds
sbb
subl
cwtl
test
inc
fs
jbe
push
jl
nop
jo
xlat
mov
scas
test
mov
inc
push
outsl
mov
icebp
insb
or
dec
subb
inc
fs
cwtl
cmp
data16
add
push
add
cs
movsb
fldt
and
adc
and
repnz
mov
cmp
clc
sbb
mov
dec
cmp
sbb
and
repnz
sbb
mov
dec
repnz
xor
cmp
and
mov
repnz
repnz
mov
dec
mov
dec
push
mov
pop
repnz
adc
sbb
pusha
mov
dec
fs
push
xchg
cmp
mov
aas
je
sbb
imul
cmp
pop
test
xchg
push
push
and
mov
dec
gs
cwtl
cwtl
movsb
test
mov
mov
movsb
int3
test
lret
dec
lods
in
mov
movsb
jb
add
adc
or
jecxz
and
movsl
pop
sub
xchg
and
add
fnstenv
repz
sub
dec
and
mov
add
cmp
inc
vpmadcswd
add
jnp
mov
mov
outsb
pop
inc
bound
sub
pop
inc
jo
fidivl
ja
outsb
pop
insb
pop
in
jbe,pt
addr16
push
gs
arpl
dec
ds
outsl
jbe
pop
adcl
pop
jne
pop
lock
or
jb
addr16
aaa
arpl
imul
das
add
insb
jg
push
pop
test
pop
add
inc
out
gs
data16
push
outsl
and
pop
inc
daa
or
daa
fbld
mulb
dec
jnp
outsl
pop
push
jne
push
gs
imul
xchg
popa
je
cmpsl
fs
pop
or
in
scas
pop
pop
mov
and
mov
jb
sub
divb
out
inc
test
ret
xchg
adc
mov
ret
inc
and
fldcw
lock
dec
fists
int3
push
xchg
imull
add
adcb
inc
xor
add
jecxz
sub
mov
mov
fdivl
shlb
hlt
xor
and
inc
cmp
cmp
pop
push
int3
popl
push
jne
inc
jg
in
adc
or
test
add
das
dec
arpl
xlat
add
inc
addb
xchg
pop
pop
popf
jnp
lock
pusha
xchg
push
mov
jne
and
aaa
aad
gs
push
mov
dec
sbb
mov
movsl
gs
jmp
mov
mov
xor
and
movzbl
jnp
cmc
xor
mov
loopne
loopne
push
loope
pop
xor
fld
and
jno
add
push
jo
and
jmp
or
iret
arpl
push
and
cwtl
xor
adc
clc
cmpsl
test
dec
sub
xchg
scas
dec
inc
xchg
adc
inc
add
cmpsb
jbe
jl,pn
mov
jl
mov
xor
and
movsb
and
hlt
hlt
mov
xchg
or
push
loopne
shll
insl
cli
sarl
test
aaa
pop
lods
add
jg
les
movsb
xchg
jg
outsl
loope
inc
scas
inc
fsin
push
mov
xor
push
std
addl
mov
daa
insb
pop
pusha
adc
iret
adc
mov
or
cli
push
mov
lahf
ja
mov
in
out
mov
std
mov
mov
mov
ja
xor
lea
out
add
fistpll
mov
dec
and
and
or
mov
inc
dec
push
call
enter
jae
and
jae
xor
ret
popa
cmp
inc
divl
mov
aas
sub
adc
xorl
mov
sbb
inc
aaa
ds
sub
pushf
cmovle
pop
arpl
and
repz
aam
push
adc
movlps
pushf
pushf
pushf
pushf
adc
push
pop
pushf
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
pushf
sbb
push
pop
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
add
push
pop
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
push
cmovle
sahf
lock
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
decl
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
dec
dec
dec
dec
call
dec
dec
dec
in
in
out
out
dec
je
dec
shrb
dec
imull
xor
xchg
daa
dec
or
inc
aas
jmp
mov
cmpsl
sbb
pop
mov
push
es
nop
in
lock
inc
sahf
cmp
pop
rclb
sub
mov
nop
mov
data16
daa
sbb
dec
xchg
push
mov
inc
adc
xchg
cs
pop
and
cmp
add
cs
pop
and
add
push
aaa
and
insb
dec
cmpsl
gs
iret
push
mov
cmp
imul
mov
sbb
mov
mov
or
rorl
sbb
dec
faddl
mov
sbb
das
sarb
mov
mov
nopl
xlat
les
test
mov
ror
and
lahf
xor
adc
dec
and
pop
or
sbb
mov
outsb
fwait
add
pop
shrb
dec
jne
xor
inc
sub
pop
lds
lods
mov
adc
inc
add
and
add
cmp
inc
cmpsb
pop
test
lahf
js
test
sbb
push
mov
adc
ret
xchg
push
dec
aas
test
pusha
inc
or
out
and
pusha
xor
les
enter
xchg
mov
loope
inc
cs
fisttpl
jno
sbb
pusha
mov
inc
mov
into
adc
mov
arpl
adc
and
add
xor
inc
lea
jne
test
rcll
dec
jae
push
lcall
pand
jmp
adc
nop
or
inc
inc
mov
icebp
adc
mov
sarl
dec
and
mov
cli
pop
mov
es
loopne
sub
fsubl
and
or
mov
adc
imul
rolb
push
call
pop
add
adc
inc
and
addb
insl
lahf
jne
push
adc
xor
dec
push
test
mov
das
loopne
or
cmp
adc
sbb
cmp
mov
inc
popf
pop
or
gs
fbld
jg
lods
sub
lret
mov
add
sbbb
sarb
ret
push
pop
aam
dec
push
add
jl
add
lret
xlat
mov
dec
and
insl
fidivrs
mov
inc
mov
jae
push
jo
adc
popa
push
repnz
fs
sbb
and
dec
jge
dec
mov
std
bnd
jae
mov
and
pushf
xchg
jne
outsl
xor
repnz
or
dec
push
fidivrl
xor
test
push
cmpsb
ds
push
test
mov
xor
xchg
mov
ss
and
inc
pop
add
test
lods
xchg
and
inc
lret
ret
sbb
or
outsb
push
pop
test
adc
xor
pushf
sub
outsl
rorl
es
xchg
iret
ret
js
push
lahf
adc
cmpsl
dec
push
jbe
pushf
mov
xchg
mov
add
add
sbb
mov
gs
or
xchg
inc
jmp
dec
and
or
insb
outsl
bound
jg
xchg
mov
sahf
lock
xor
xor
outsl
aam
and
and
inc
ja
pop
or
fs
inc
addr16
adc
js
lcall
jns
aam
push
cmpsl
and
xchg
mov
das
dec
pop
sbb
push
pop
test
push
adc
jmp
cld
pushf
mov
movsl
adc
adc
call
or
cmpsb
out
sub
cltd
xlat
or
into
fldenv
ret
ror
inc
lahf
ret
jmp
jge
lret
push
ds
negb
lock
or
xor
jle
ja
insb
push
popf
add
stc
movsb
push
mov
jg
lea
movl
push
xchg
cmp
and
loope
data16
fs
int
shrl
xchg
push
sub
inc
fbstp
jne
mov
ljmp
test
or
call
test
sbb
and
cmp
and
lods
rcrb
popa
je
dec
jmp
ret
sbb
sub
sub
mov
cmpsl
cmp
add
or
cmp
jo
cwtl
push
xchg
add
add
jnp
test
aaa
jo
jne
and
mov
lock
aas
aam
push
inc
mov
hlt
sub
inc
pop
jo
and
and
jp
cmp
jo
cwtl
xchg
into
sbb
adc
ja
rolb
inc
pusha
sar
jp
and
nop
pop
pusha
test
rcrl
out
adc
xchg
sub
sbb
add
jecxz
pop
xchg
jb
cmpsl
ret
and
inc
jae
sub
xor
outsl
mov
cmp
ja
cmp
loop
enter
ljmp
pop
movsb
gs
jmp
adc
test
cmp
jb
cmp
jbe
sub
mov
adcl
jle
scas
mov
rorb
ds
jg
xchg
cmp
cmp
push
inc
jbe
cmp
sbb
sahf
popa
data16
rclb
filds
dec
mov
xor
gs
pop
xchg
fs
sbb
ja
pop
jo
bnd
mov
push
lods
xchg
sbb
push
xor
adc
push
loop
les
into
leave
sbb
push
outsb
jns
rcll
mov
and
mov
xchg
pop
sub
aas
adc
and
jg
je
mov
jne
dec
add
mov
cwtl
mov
stos
orb
imul
arpl
hlt
aad
inc
or
pushl
push
mov
cmp
jg
je
and
nop
ljmp
jb
shrb
outsb
mov
insl
sbb
out
and
add
lea
fcmovb
sbb
sub
and
hlt
lods
lahf
dec
mov
or
hlt
enter
mov
sahf
inc
fdivl
dec
clc
add
or
rcrb
shrb
adc
pusha
jbe
out
enter
add
inc
test
mov
imul
je
jmp
inc
push
cmpsl
sarl
test
dec
int3
sbb
push
xchg
dec
mov
sarb
jae
and
xor
lods
adc
mov
pop
xchg
mov
or
jmp
xor
mov
inc
insl
addl
add
lahf
cmpb
int3
mov
jne
ret
mov
repz
inc
ret
cmc
mov
fs
sub
rcrb
out
jle
jp
add
dec
jmp
test
aam
dec
jne
loopne
adc
lock
and
nop
data16
mov
mov
shll
mov
or
add
test
pusha
push
sub
std
pop
ret
add
sbb
mov
inc
sbb
jle
adc
push
inc
lret
fs
lcall
add
or
arpl
and
pusha
and
ret
lret
xor
hlt
cwtl
xor
xchg
rcll
sahf
shlb
mov
rcll
mov
mov
mov
lcall
inc
test
push
insb
mov
push
orb
push
or
xchg
inc
cmpl
in
or
and
movl
mov
adc
loopne
data16
xor
adc
pusha
xor
mov
pushl
sbb
in
mov
inc
ret
inc
mov
mov
cmpsb
loope
mov
push
adc
mov
pop
lret
popa
ret
push
add
aaa
jle
push
cli
aas
dec
push
out
fbstp
loopne
push
lret
in
fimuls
cmpl
arpl
icebp
and
mov
cmp
dec
movsl
add
or
add
add
lcall
add
ficoms
ret
lds
aaa
pop
add
adc
test
cmpsb
jecxz
push
and
fsubs
out
inc
sbb
cmp
xchg
adc
jle
mov
add
jle
mov
fsts
rclb
outsl
adcb
ss
int3
xor
add
cmp
cld
jno
mov
mov
pusha
push
add
push
icebp
dec
cwtl
mov
insl
inc
out
mov
dec
ljmp
push
or
push
popa
mov
or
xor
nop
mov
xor
sub
popa
or
fmuls
dec
outsl
and
andb
outsl
jp
dec
out
and
arpl
push
mov
or
mov
push
inc
jo
lret
leave
add
imul
pop
mov
lcall
xchg
xchg
xchg
lret
rolb
inc
lea
rcll
inc
je
sub
das
adc
inc
pop
orl
adc
lret
mov
inc
pop
daa
add
lahf
ret
and
rorl
pushf
xor
push
or
inc
cwtl
jl
inc
arpl
inc
adc
xor
xor
cmpsl
sahf
xchg
mov
pop
add
or
or
add
lods
addb
scas
sbb
push
dec
outsl
or
jb
pusha
fs
fs
lods
fwait
push
in
shlb
mov
out
pop
or
aas
add
pop
movsl
shlb
mov
sahf
push
or
adc
adc
lret
gs
xlat
xchg
push
enter
sub
mov
fisttps
loopne
popf
push
add
callw
nop
sub
or
sbb
mov
rclb
cmp
jmp
add
xor
xchg
jne
movsb
adc
jb
pop
add
sub
push
stos
dec
push
xor
popa
jge
push
cmp
and
in
rdmsr
pop
outsl
data16
sbb
cs
js
andl
repnz
cli
push
sub
shlb
adcl
jl
jns
pop
and
sbb
les
inc
or
mov
pop
pop
adc
enter
shrl
fdivrl
push
jb
and
gs
js
in
add
test
or
popa
notl
or
push
cmp
pushf
ret
push
add
push
push
in
ret
sub
lods
ja
int
lahf
lea
xchg
pop
punpckhbw
add
inc
push
andl
loop
rcr
and
adc
and
and
dec
jae
adc
aas
xchg
sub
push
jae
sbb
lods
repz
test
push
aam
pop
out
sbb
push
xor
push
xchg
js
test
add
jne
add
mov
pop
and
movsb
imul
adc
inc
rclb
fsubrs
pop
or
xchg
push
xorb
mov
xor
push
cli
jl
jae
hlt
jp
arpl
hlt
jno
stos
imul
sbb
rorb
cmpsb
pop
cmp
js
ss
xchg
testb
xor
push
fiadds
cmp
ret
cmp
xchg
cs
fsubrl
icebp
loop
push
mov
add
push
mov
lcall
and
inc
mov
adc
cltd
fcoms
ret
inc
add
repnz
lahf
mov
aaa
sub
aaa
dec
pop
dec
lods
lods
popa
nop
xchg
cltd
mov
imul
dec
sub
mov
outsl
dec
inc
cmpsb
mov
fdiv
xor
jmp
mov
addr16
addr16
adc
out
inc
jo
pop
ja
outsl
xchg
dec
and
ja
jmp
imul
ja
lock
adc
data16
gs
lret
hlt
ja
xor
and
xchg
bnd
mov
adc
adc
in
xchg
xchg
jb
dec
test
daa
int3
ss
push
insb
add
xchg
jnp
test
sub
lods
pushf
or
addr16
or
ret
add
or
adc
shlb
inc
movsb
test
jo
pop
fsubs
shlb
je
sbb
inc
imul
or
xor
addr16
aaa
js
xorb
jl
and
addr16
xchg
xchg
xchg
jae
sbb
mov
out
pop
xor
pop
jb
jbe
ja
dec
push
pushf
movsb
pop
sbb
iret
test
in
xchg
or
scas
xchg
outsb
push
push
xchg
cmp
mov
or
inc
add
and
nop
int3
or
and
xchg
adc
jg
xlat
sbb
cwtl
cwtl
outsl
aas
mov
or
jne
fs
cmp
outsl
pushf
aam
imul
addb
pop
enter
outsl
mov
sub
and
dec
mov
movsb
pushl
leave
ja
movsb
outsl
add
sbb
test
jo
pop
imul
ja
outsl
mov
add
repnz
push
and
out
or
push
shlb
mov
adcb
iret
mov
lret
adc
je
int
call
mov
push
out
and
test
pop
xor
and
roll
sub
shrb
pop
shrb
inc
scas
pop
inc
les
fs
arpl
or
xor
sbb
aas
pop
enter
test
aaa
insb
lds
bound
addr16
push
or
int3
lret
ja
inc
adc
shlb
lea
out
sbb
adc
jb
push
out
clc
jb
mov
pop
jb
popl
jns
outsb
cmp
js
push
mov
dec
pop
fsubs
dec
jae
scas
xchg
fisttpl
jae
mov
xchg
sbb
inc
sub
add
loopne
inc
cs
dec
loopne
xor
inc
xchg
in
je
mov
inc
in
ffree
mov
dec
mov
jno
and
push
ja
sbb
sbb
out
loopne
mov
iret
in
jg
enter
adcl
xchg
mov
lock
xor
test
lock
subl
pop
hlt
xchg
sbb
call
enter
mov
pop
jp
inc
movb
ret
ljmp
jb
inc
clc
or
xchg
pop
jne
loopne
add
rcrb
jg
add
loop
push
xor
jbe
push
jne
push
jecxz
pop
pop
in
dec
ja
add
pop
clc
pop
xchg
insb
insl
fmuls
and
cwtl
jbe
flds
add
pop
adc
icebp
push
movb
inc
dec
and
fmull
in
xchg
push
adc
ja
inc
jo
movlps
movsb
repnz
fcoms
xchg
adc
subb
and
pop
loop
cmp
and
adc
inc
call
inc
xor
lock
lret
push
and
fldl
and
js
xchg
dec
and
fimull
sub
js
add
push
dec
addb
out
popa
jo
in
xor
jne
lahf
sub
in
pusha
or
sub
add
dec
push
cmpl
xor
sub
lea
ja
mov
sbb
jns
jg
mov
dec
gs
sub
mov
cmp
and
dec
dec
cmpsl
cmp
stos
dec
push
sub
lahf
cmp
mov
popa
in
stos
mov
inc
push
cmpb
in
test
test
aas
xorl
jg
dec
cmp
inc
cs
push
mov
add
dec
or
and
mov
out
sub
jg
test
dec
mov
mov
jl
mov
push
mov
gs
add
pop
leave
add
fistpll
jl
rorb
pop
push
jb
lods
cmp
daa
pop
mov
shl
addr16
pusha
iret
jl
and
lods
pop
mov
fbstp
int3
jl
xor
or
push
mov
adc
popl
push
mov
insb
pop
enter
insb
push
shll
pop
popl
dec
inc
pop
rolb
stos
inc
outsl
inc
call
push
and
or
js
cmp
push
pop
jb
js
push
adc
mov
dec
xchg
dec
mov
mov
cmp
jl
addb
movsb
aam
das
adc
sub
sub
jg
test
add
xlat
inc
xchg
mov
cltd
dec
sub
xchg
lret
mov
or
das
push
sub
jg
nop
sub
mov
inc
lret
adc
inc
xchg
inc
addb
push
xchg
push
cwtl
or
adcl
in
decl
fadds
lods
or
adc
inc
xchg
and
and
mov
push
movsb
jo
sub
pop
add
test
add
jl
add
inc
and
lods
ja
lods
mov
in
pop
pop
les
loope
push
mov
mov
or
add
mov
mov
arpl
push
and
lea
test
cmpsl
push
gs
xor
or
loopne
add
pop
jb
mov
andb
dec
fists
out
rolb
sbbb
les
mov
das
add
mov
sbb
enter
dec
aaa
fisttps
mov
sub
jb
int3
sbb
add
xchg
test
push
loopne
push
sbb
fs
xchg
test
aam
roll
jns
repnz
dec
test
fadds
fcoms
or
dec
and
loopne
stc
lea
inc
mov
mov
inc
addr16
addr16
dec
ja
xchg
in
lock
scas
pop
and
call
mov
fisttpll
in
daa
xchg
add
loopne
test
sahf
imul
pusha
sub
mov
xchg
nop
inc
mov
outsb
inc
mov
adc
rol
cwtl
subb
inc
lods
sub
dec
sbb
push
sahf
lret
jae
push
push
mov
lret
push
stc
pop
pop
add
mov
mov
push
dec
in
adc
insl
je
js
sti
fsub
arpl
jl
adc
repnz
and
push
xchg
test
dec
adc
sahf
cwtl
insb
pushf
movsb
mov
fsubl
cmp
out
mov
cmpsl
repnz
mov
iret
in
shlb
test
dec
rolb
mov
fmul
in
cmp
loopne
in
lahf
mov
pop
in
fistl
lock
repnz
jne
cmp
jae
jo
mov
inc
in
adc
out
cmp
push
repnz
adc
adc
ja
out
push
sbb
and
repnz
ds
and
sub
mov
fdivs
sbb
cmp
cmpsl
xor
cmp
call
je
iret
in
dec
mov
cld
push
iret
in
jl
jnp
nop
pop
enter
cs
adc
jae
cs
movsb
push
dec
in
jge
push
push
decl
mov
mov
mov
xchg
iret
xchg
adc
cwtl
pop
pushf
jl
iret
in
mov
cs
in
test
lods
les
add
mov
mov
cs
sub
jl
fistl
enter
lret
push
stc
jl
sarb
test
adcb
sahf
fcom
fsubrl
test
or
in
clc
lds
rol
xchg
pop
adc
mov
mov
push
roll
or
xor
lock
addl
adc
fldt
push
cld
lea
xor
mov
mov
sub
das
test
mov
sar
lret
push
int
sub
aaa
loopne
push
call
shlb
push
insl
pusha
and
push
cmp
imul
or
inc
jae
mov
fists
xor
dec
mov
add
mov
jmp
jne
dec
adc
ror
sub
push
shrb
loop
enter
inc
push
mov
add
jae
popa
and
mov
add
popa
cmpsl
insl
fbstp
cmp
enter
not
rorb
rclb
loop
adc
or
add
cmpsb
icebp
test
cmpsl
or
jmp
rol
jge
popa
ja
ret
pop
scas
mov
ret
jae
or
mov
dec
add
add
sbb
and
outsb
pushf
adc
sub
inc
out
test
fdiv
xchg
xor
mov
in
iret
rorl
mov
cmp
popf
sub
ret
push
js
or
xchg
sarl
push
pop
and
xor
cmp
repz
inc
dec
push
mov
bound
fdivr
fisubrs
mov
mov
aas
fstp
pop
lods
cs
cld
sub
mov
popa
fstp
mov
cmp
or
mov
xchg
jo
pop
movsb
cmp
and
mov
add
adc
cs
or
ds
adc
inc
xor
lods
out
je
xchg
xor
add
xlat
inc
dec
mov
or
in
mov
or
pop
cs
push
icebp
mov
cmc
cmp
jne
jle
ret
xchg
jae
mov
sahf
add
lock
jb
outsl
and
aaa
nop
pop
rclb
aaa
data16
cltd
in
mov
aaa
inc
inc
adc
pop
sub
clc
xchg
aam
rcrl
nop
ds
in
dec
in
add
movsb
into
dec
or
out
pop
nop
sahf
dec
mov
pushf
inc
push
mov
in
lds
call
popf
fcoms
rcl
pop
pop
mov
pushf
push
lock
popf
das
call
aad
xlat
push
mov
mov
cwtl
dec
leave
mov
aas
or
push
inc
je
mov
xchg
xchg
iret
bound
test
daa
mov
aas
lock
or
cltd
dec
pop
xchg
nop
and
or
and
dec
aam
subb
mov
xchg
sbb
fadds
pop
cmc
rolb
xor
in
xchg
into
mov
lock
jge
outsb
jae
jo
into
push
shr
add
imul
sub
sbbb
jge
test
or
paddq
cmp
out
and
hlt
cmp
xor
add
ss
rcrb
in
add
imul
add
mov
add
fs
add
clc
inc
adc
mov
add
in
lods
xchg
push
and
push
add
loopne
xor
rolb
inc
add
repz
mov
or
test
ret
movsb
rorb
dec
daa
in
add
hlt
xor
addb
rorl
xchg
fiaddl
push
xor
cmpb
jne
test
dec
clc
add
xchg
push
fldl
jl
aaa
mov
pop
hlt
out
add
add
or
cmp
in
add
sub
mov
aam
add
inc
fidivs
jno
lea
sti
movsl
add
and
xchg
in
or
xor
xchg
nop
jne
pop
gs
xchg
inc
fiaddl
sbb
scas
push
dec
sbb
add
hlt
inc
jne
test
jl
inc
pop
leave
rcrl
gs
jl
cmp
jle
add
mov
jmp
inc
dec
jne
sbb
out
data16
fwait
push
ja
test
clc
mov
mov
and
mov
mov
or
or
mov
jecxz
stos
aas
movsl
inc
ja
sub
pop
cmp
push
les
or
pop
mov
lods
das
mov
dec
mov
outsb
dec
clc
bnd
push
rorb
xchg
mov
cwtl
imul
mov
mov
enter
loop
andl
fcomps
fistl
loope
pop
enter
push
sub
aad
out
testl
or
out
lea
cmp
dec
cmp
repz
outsb
jg
mov
mov
aam
mul
jns
out
lcall
jns
pop
insl
jle
mov
jns
lret
hlt
jns
add
adc
push
sahf
clc
repnz
mov
mov
mov
lods
inc
sbb
sbb
pop
push
insb
mov
test
mov
jne
mov
or
inc
les
xchg
rcl
ss
enter
push
xor
cmp
pusha
sub
in
sbb
xchg
shll
mov
push
jl
push
test
push
xor
in
ret
and
xor
jmp
sbb
sbb
sbb
xor
mov
hlt
mov
push
stc
or
in
inc
lock
sbb
sbb
insb
sub
sbb
inc
or
cmpsl
dec
pop
and
mov
into
xorb
jne
movsb
sbb
mov
out
call
lret
addl
and
test
dec
stc
ficoms
pop
aaa
hlt
mov
mov
in
sbbl
push
mov
mov
adc
add
cmpsb
daa
lea
sbb
xchg
addr16
mov
mov
push
mov
pop
pop
loopne
cld
jb
lea
dec
pop
loopne
gs
inc
mov
mov
jge
cs
cwtl
jp
adc
es
mov
repz
mov
push
jmp
and
and
push
mov
mov
pusha
inc
pop
ret
lods
test
test
arpl
outsb
push
or
push
push
push
loop
dec
test
mov
mov
sub
sbb
bound
inc
or
mov
mov
cmp
fmull
sub
push
arpl
adc
cwtl
imul
mov
and
adc
ss
inc
das
fadd
push
dec
mov
xchg
in
lock
mov
ffree
push
in
or
and
jo
vmovaps
and
inc
jg
xor
xor
pop
int
hlt
in
fildl
je
adc
push
je
js
xlat
rcrb
outsb
popa
jbe
iret
add
adcb
pop
add
loopne
divl
les
mov
xor
jo
push
adc
repz
loopne
xor
jl
pushf
mov
add
outsb
pop
mov
push
adc
push
rcr
add
dec
and
adc
push
inc
repnz
pop
adc
pop
popf
fisubrl
movsl
xchg
lods
shrb
dec
push
cs
adc
outsl
rolb
push
inc
scas
mov
push
les
jnp
mov
push
call
dec
fildll
push
xor
pop
test
pop
push
jo
fidivrl
es
pop
push
mov
cs
call
out
shll
insb
test
push
cmpsb
cmpsb
ss
movsb
mov
xchg
push
mul
push
cmp
in
scas
cmpsb
pop
mov
insl
or
or
sbb
cmpl
sub
hlt
fmuls
inc
nop
out
cmp
sub
inc
lea
pop
call
inc
and
rcrb
or
add
xchg
mov
test
push
adc
cli
sub
mov
pop
call
jge
mov
pop
inc
inc
cmc
mov
push
mov
pop
rclb
xchg
int3
rolb
aam
push
cmpsb
mov
pusha
sbb
add
ss
mov
or
jecxz
aam
std
aaa
inc
fnsave
pop
xchg
mov
pop
ss
sbbb
jmp
pop
fwait
add
mov
scas
adc
sbb
lods
pusha
imul
popa
sti
inc
stos
push
mov
mov
lods
aam
sbb
fadds
popa
cmp
stc
les
xor
adc
fwait
loop
add
xor
fldl
cmp
mov
add
mov
xchg
addl
mov
iret
jne
dec
lahf
pavgw
add
pop
mov
sbb
movsb
add
es
mov
test
inc
outsl
mov
call
out
mov
cmp
mov
xor
xchg
mov
add
pop
mov
rcl
or
adc
dec
xor
inc
mov
pop
leave
cwtl
sbb
fcoms
or
or
call
jge
loop
jmp
push
mov
enter
es
mov
dec
xchg
mov
cmp
fwait
cmp
mov
aad
mov
and
test
shlb
add
or
test
jl
pop
and
or
mov
jnp
nop
mov
rol
mov
icebp
rolb
adcl
and
dec
cli
push
push
mov
cs
push
and
add
pop
das
enter
sbb
enter
addr16
mov
add
frstor
pop
push
movsl
push
insl
fcomp
or
mov
push
test
adc
mov
enter
jmp
lods
enter
dec
shr
or
shrl
dec
dec
ss
add
adc
adc
xor
mov
test
add
mov
and
loope
sbb
cmp
mov
mov
pushf
stos
add
inc
adc
push
or
inc
je
sbb
nop
mov
mov
sbb
lods
xlat
sar
sarb
push
mov
dec
add
ljmp
jl
stos
and
prefetcht2
dec
jnp,pn
jmp
inc
fisubrs
enter
jno
inc
lahf
enter
into
test
inc
push
add
adc
lea
push
inc
and
xchg
test
xor
or
mov
xor
lds
add
imull
daa
sbb
sub
jmp
sub
ffree
addr16
stos
cmp
loopne
mov
push
ret
sub
jl
xchg
dec
dec
nop
in
test
mov
imul
inc
sub
jmp
mov
mov
mov
int
mov
dec
repnz
pop
push
jbe
nop
push
xorl
or
aaa
pusha
cmp
add
xor
and
push
gs
jne
inc
inc
xchg
add
jmp
xchg
imul
or
sti
dec
push
jae
bound
adc
jb
xor
and
push
lcall
adc
xor
dec
fbld
pop
outsl
pop
add
mov
ja
add
jnp
push
out
scas
pop
pop
xchg
je
cmpl
mov
adc
sbb
shll
push
mov
popa
movsb
lods
mov
push
shr
push
aam
and
mov
rcrb
mov
aam
lock
cmp
and
test
mov
nop
and
lahf
mov
or
shrl
adc
inc
lods
mov
push
sbb
into
push
adc
je
pop
and
mov
cmp
push
cld
test
jmp
jo
cli
cmp
inc
add
in
fwait
and
clc
lods
pop
rcll
popa
mov
inc
dec
dec
lods
jnp
inc
lods
adc
cmovae
cwtl
pop
fcoml
inc
std
inc
cmp
mov
xor
xchg
jmp
inc
xchg
bound
lods
and
daa
cmpsb
outsb
and
test
adc
sbb
fidivs
pop
test
inc
orb
sub
mov
lods
mov
push
inc
or
adc
inc
sub
add
dec
or
dec
mov
data16
loop
mov
adc
jo
lea
xchg
sbb
scas
push
faddl
push
loopne
les
sub
mov
arpl
xor
dec
cli
add
push
jnp
fadd
loop
pop
test
inc
xor
add
adc
inc
sub
or
ret
and
push
sub
movsb
movsl
mov
cmp
mov
or
test
jl
pop
add
jl
push
addl
je
aas
rorl
orb
jbe
adc
mov
adc
jecxz
push
or
les
cs
test
aas
lock
scas
pusha
push
jb
or
xchg
iret
jns
xor
ret
cltd
mov
adc
mov
mov
and
fadds
inc
adc
rcrl
mov
push
dec
or
inc
cmc
nop
pop
pop
hlt
shlb
mov
mov
mov
movsb
jge
cmc
push
cmp
repz
cwtl
or
jmp
hlt
adc
push
pop
leave
mov
mov
sbb
add
fildl
mov
or
pop
push
stos
and
push
dec
mov
mov
mov
stc
addr16
mov
mov
clc
pop
shrl
push
cli
dec
mov
negb
push
outsb
dec
pop
movsb
fwait
icebp
dec
cld
dec
pop
xchg
or
adc
lahf
mov
xor
dec
dec
pop
cmpsb
add
rol
inc
mov
sub
cli
jne
data16
sbb
repz
incb
xchg
aam
dec
mov
aas
add
sub
rorl
movl
mov
push
mov
arpl
stos
or
fsub
sti
mov
mov
sbb
mov
call
or
loope
xor
imul
lea
cli
jge
xor
mov
inc
xchg
xchg
test
mov
add
js
xchg
stc
xchg
push
rclb
ret
repnz
add
pop
mov
dec
sub
push
dec
pusha
jbe
mov
sbb
inc
divb
push
aas
lods
nop
mov
aaa
mov
and
xchg
call
pop
adc
movb
push
mov
add
cmp
xchg
and
pmaddwd
xchg
cmp
jmp
out
xchg
and
xchg
and
fistpll
pop
xorl
repz
mov
and
dec
push
xor
movsl
cmpsl
cmpsl
push
test
inc
jnp
sti
cmpsl
ficoms
lock
shlb
icebp
add
clc
das
adc
fsubrs
data16
push
mov
dec
inc
dec
pop
pop
pusha
mov
lea
adc
adc
data16
cmp
cmp
pop
inc
lds
cmpsl
lret
and
push
lock
sbb
xor
dec
and
js
or
and
rclb
cwtl
test
test
inc
mov
pop
cmpsl
frstor
pushf
call
in
adc
shlb
adc
mov
add
inc
add
mov
loope
dec
iret
imul
sbb
loopne
nop
push
pop
xor
lock
fidivl
ja
shl
ret
push
test
fidivl
jae
adc
jmp
sti
add
sbb
addl
xchg
push
test
inc
xor
add
mov
xchg
pop
loope
add
shlb
push
add
xor
lods
xchg
or
xor
pushf
stos
inc
enter
pop
aaa
lds
pop
int3
mov
mov
xchg
sub
pop
out
xchg
cwtl
push
arpl
ja
bound
push
pop
and
dec
add
dec
pop
pop
popl
dec
rorb
repnz
insb
sbbl
add
imul
cmp
pop
add
mov
fs
cs
pop
inc
jl
sub
sarb
jp
pop
or
dec
adc
jne
add
cli
outsb
jne
or
gs
adc
pusha
orb
rcl
es
call
adc
xchg
sarb
adc
inc
adc
lea
sbb
pop
and
mov
jo
inc
lea
cmpb
test
mov
or
test
nop
addl
xor
in
popf
push
popf
test
sub
enter
imul
jno
add
jbe
inc
sbb
fadd
loopne
scas
xor
jae
inc
dec
das
mov
icebp
nop
or
jmp
loop
adc
mov
push
adc
into
sti
lods
movsb
jmp
and
push
inc
lahf
xchg
subb
gs
adc
popa
mov
mov
sbb
push
stos
sub
xchg
push
or
add
cmp
mov
push
popa
add
test
mov
adc
lea
in
dec
and
sahf
add
shl
out
push
bound
adc
adc
xchg
mov
sub
pop
jo
jne
int3
push
mov
inc
ds
add
xor
bound
add
cmp
mov
movl
xor
inc
pusha
loope
sub
imul
mov
jecxz
shll
add
mov
lret
push
mov
ja
shrl
jle
adc
sahf
xor
mov
add
shl
push
sub
push
add
cmpsl
pop
loopne
adc
inc
subl
dec
clc
sub
mov
mov
int
loope
xchg
daa
outsb
enter
rcll
adc
cld
push
push
stos
inc
popf
and
dec
add
dec
add
sbb
mov
pop
lret
mov
subl
rcr
jnp
cmp
pop
rcrl
mov
xchg
pop
scas
or
clc
ret
and
popa
mov
into
test
cmc
pop
and
pop
mov
fstl
pop
add
add
mov
adc
xor
out
or
and
sbb
jne
andb
or
adcb
mov
popa
aam
popa
mulb
inc
sbb
add
cmp
jecxz
mov
push
sbb
loopne
scas
or
rol
mov
pop
mov
xor
add
clc
mov
or
cmpsl
adc
iret
mov
ret
cltd
cli
test
cmp
test
fimull
pop
cmp
sbbl
ret
inc
pop
add
xor
push
jne
add
hlt
mov
in
adc
rol
pop
loopne
outsl
fiadds
xor
cmp
adc
and
outsb
push
notl
sub
rolb
xchg
xor
add
xor
push
ficoml
mov
dec
push
add
sbb
mov
out
xchg
xchg
into
outsl
ss
ss
inc
or
rorb
shrb
incl
jg
xor
xor
cwtl
or
xor
jnp
out
and
xchg
stos
leave
ret
data16
cmp
xchg
push
cmp
out
mov
and
loop
xchg
jmp
add
sub
arpl
xor
sbb
push
or
testb
dec
mov
push
test
popf
lods
inc
daa
push
add
dec
add
add
aaa
jo
mov
xor
xor
mov
roll
inc
cmp
imul
leave
ror
pusha
and
xchg
add
int
enter
jg
or
dec
lock
cmp
dec
leave
in
adc
push
jge
cmp
ds
dec
jo
cmpsl
push
xchg
test
inc
pop
push
pop
adc
adc
filds
test
xor
lea
addl
rolb
inc
insb
fwait
jge
or
cmpl
inc
mov
adcb
in
jo
add
jecxz
xor
pop
movb
out
sub
or
fnsave
mov
out
and
xchg
insl
insl
add
fidivrl
mov
jmp
push
hlt
sub
cs
or
pop
add
or
and
inc
xor
inc
imul
cmp
enter
add
cmp
inc
int
add
cmp
or
add
jmp
add
inc
int
sbb
push
addb
in
or
ret
mov
adc
mov
call
jae
xor
mov
and
push
or
lods
mov
push
mov
add
push
inc
jecxz
ret
sub
push
cmp
pop
loope
sbbl
sbb
mov
popa
fs
mov
iret
movsl
xchg
push
and
xor
sbb
aam
adc
pushl
shll
popa
adc
scas
out
mov
xor
jp
cmp
add
ret
shrb
pusha
jne
aas
dec
inc
xor
add
cmpl
test
mov
add
je
into
lret
adc
pop
enter
cmpsl
ret
add
adc
xchg
or
popa
and
fnstenv
sbb
add
sbb
sbb
jmp
rorb
inc
push
shlb
mov
int
dec
rorb
add
mov
fs
test
ret
nop
sub
inc
mov
xchg
insb
imul
and
cmp
adc
ret
int
pop
aam
mov
clc
xor
or
jmp
int
mov
iret
mov
enter
into
dec
jbe
mov
jl
mov
loope
xor
out
cmp
dec
cmp
cmp
lret
sbb
mov
adc
sub
dec
cmpb
addr16
lds
adc
xor
push
je
dec
dec
inc
inc
dec
dec
dec
push
push
daa
xor
aaa
xor
pop
testl
faddl
fcoms
or
out
and
jno
adc
int3
addl
mov
iret
lds
outsb
dec
pop
mov
push
mov
popa
iret
and
sbb
or
ret
mov
xor
jbe
xchg
push
and
and
sbb
addb
adc
add
pop
cltd
popl
rolb
rolb
add
imul
aaa
rcrb
lahf
icebp
popa
ljmp
cmpb
dec
and
add
hlt
xor
inc
lds
and
push
mov
inc
dec
add
sbb
adc
test
dec
sub
xor
test
jp
sbb
bound
lods
shll
mov
sub
sti
jl
cmp
and
inc
mov
sbb
adc
pop
or
xchg
ret
mov
inc
imul
mov
dec
or
fldt
mov
andb
adc
insb
or
or
mov
ljmp
mov
hlt
add
or
push
push
test
add
fdivs
mov
jns
mov
pop
jg
xchg
add
es
fisttpl
cmp
loopne
jo
push
imul
fsubs
inc
not
pop
imul
cmp
rorb
shr
aam
sarl
push
push
add
pop
test
aam
push
rcll
push
pop
add
test
and
sysret
cmp
add
and
lea
or
mov
fstl
jo
push
aam
add
sbb
add
cmp
cmpsl
adc
pop
add
pop
pop
xor
and
pushf
or
out
leave
mov
inc
pop
and
addb
jnp
adc
and
push
mov
call
fsubl
jbe
add
pop
call
test
fmuls
shrb
add
xchg
mov
push
pop
les
adc
cmp
loopne
in
imul
xor
js
push
gs
jl
mov
add
test
push
xchg
rolb
adc
xor
sub
inc
pop
and
push
in
dec
add
or
jb
add
jns
mov
lods
cld
insb
sub
push
mov
pop
push
add
cmp
jmp
pop
adc
adc
imul
or
adc
add
out
adc
xchg
shr
jne
rorb
jne
sub
in
xor
jmp
pop
adc
mov
mov
testb
sbb
mov
mov
jnp
loope
mov
sbb
mov
movl
add
cmp
xlat
sbb
andb
mov
int3
cmp
enter
add
daa
pop
xor
sbb
or
insb
add
pop
or
bound
ja
xchg
xor
xor
xchg
aaa
add
cmp
mov
push
data16
fldenv
or
cmp
sarb
jns
adc
mov
push
inc
rorb
aaa
add
inc
out
loopne
add
push
lock
lea
or
or
lods
inc
shrd
pinsrw
filds
call
push
ja
and
insl
xor
or
pop
addl
sub
inc
add
add
sub
sbb
mov
ja
or
or
push
sbb
icebp
push
jne
aaa
daa
sub
or
sub
ret
adc
or
andb
aas
pop
insb
and
dec
ficoml
pushf
pop
mov
scas
or
test
call
push
fildl
js
lock
mov
or
addr16
pop
sub
sbb
pusha
pop
sub
dec
xchg
dec
xor
push
dec
sbb
xchg
xor
pop
test
xchg
lahf
ret
aam
xor
xor
xchg
add
outsl
inc
sub
lret
and
out
xchg
mov
stc
sbb
test
jle
ds
mov
add
add
mov
out
inc
popl
ljmp
dec
xlat
lea
xor
dec
and
xor
sub
and
iret
pop
lock
cmp
push
mov
dec
and
add
mov
adc
shl
mov
out
rolb
sbb
sub
inc
shll
jl
inc
push
push
rcrl
pop
movl
dec
push
jo
dec
cmpb
inc
mov
or
push
sar
cmp
pop
je
mov
add
adc
mov
inc
inc
popa
movsb
repnz
sbbl
jp
fnstcw
jl
pusha
add
mov
adc
out
ror
dec
adc
jmp
lods
dec
jae
cmp
imul
sbbb
repz
popa
jno
dec
clc
loop
test
pop
mov
xlat
jmp
loopne
aam
cs
fucomip
mov
pushf
insb
ljmp
lea
mov
fst
push
pusha
xchg
pop
xor
pop
addps
jns
xchg
push
push
mov
hlt
mov
dec
push
nop
movb
cmc
jbe
je
xor
ds
pop
jnp
mov
add
cmp
shld
es
outsl
adc
cmp
inc
lahf
dec
push
dec
xchg
loop
inc
and
jo
inc
mov
push
add
andps
sbb
push
es
pop
sub
imul
pop
or
andb
andl
sub
imul
adc
dec
jle
loope
les
xchg
dec
addb
push
inc
pop
loop
sub
aam
inc
out
or
movsb
fwait
add
outsb
test
xchg
add
fwait
rolb
hlt
sub
pop
sbb
aam
clc
scas
xorb
push
inc
and
fcoml
aam
aad
ja
outsl
adc
and
add
xchg
les
loopne
movb
push
lret
and
mov
cmp
movsl
stc
les
outsb
insb
xchg
and
in
and
test
pop
dec
pop
cmp
dec
in
add
dec
and
cs
or
not
mov
movsb
pop
dec
mov
popf
mov
out
orl
add
pop
mov
out
addl
dec
adc
dec
inc
push
adc
std
sbb
dec
adc
lret
mov
jp
addr16
xor
add
push
adc
jo
mov
add
xor
loop
jnp
ficoml
adc
mov
adc
mov
jle
cmp
rorb
loop
push
xor
outsl
adc
adc
add
sbb
rcrb
imul
les
in
xchg
dec
jle
mov
or
jns
dec
insl
test
fs
rcr
movsb
mov
fsubl
cmp
and
jmp
sarb
add
cwtl
cwtl
pop
cmp
dec
mov
or
sub
sbb
pop
or
and
sub
das
or
push
jb
xchg
jno
xor
and
mov
mov
iret
inc
sbb
and
dec
js
push
out
dec
dec
push
inc
mov
adc
cld
jp
xchg
sub
andb
aam
call
dec
loope
push
ret
jecxz
mov
mov
das
jecxz
add
push
insb
std
xchg
xchg
icebp
pop
push
mov
rorl
fnsave
jmp
sub
fdivrs
adcb
jbe
inc
push
jne
push
pop
xor
jb
stos
ret
mov
sub
test
sub
push
sbb
xor
movsb
and
fs
jae
and
sub
inc
loopne
inc
push
lea
push
addr16
sub
popa
xor
sub
sbb
add
movsl
das
mov
add
inc
in
les
inc
lcall
rclb
inc
in
xor
pop
pop
push
sub
or
xor
sbb
lock
sbbb
in
dec
and
pop
mov
sub
sub
jg
add
jge
lds
dec
cli
xchg
push
add
inc
jne
ja
mov
lds
sub
inc
mov
cmp
xor
xchg
jae
push
sbb
sbb
inc
pop
push
xorb
sbb
add
gs
test
enter
cmp
inc
cmp
je
pushf
aam
or
or
sbb
jo
inc
insl
jmp
mov
out
xchg
xchg
fisttpl
rorb
rcl
xchg
xchg
xchg
xchg
aad
xlat
fcoms
fcmovu
fcoml
rclb
ret
les
mov
xchg
xchg
xchg
xchg
leave
lret
xchg
xchg
xchg
xchg
int
iret
mov
mov
lahf
mov
out
call
daa
adc
test
cli
es
test
inc
xlat
jmp
ret
imul
sti
push
inc
adc
mov
test
iret
or
and
xchg
ss
fstpl
mov
push
je
outsl
rcrl
or
in
jge
dec
ret
or
pop
sbb
xor
es
sbb
mov
ljmp
or
add
or
movsb
inc
push
out
sub
in
ljmp
jo
push
fsubrs
mov
aas
inc
add
xor
mov
push
jbe
mov
cmp
nop
and
sbb
bound
js
mov
add
js
pop
inc
push
cmp
pusha
pop
jb
pop
aam
inc
test
cmpsl
flds
inc
sbb
or
mov
rolb
inc
sbb
stos
adc
adc
sbb
mov
movsb
sbb
sbb
std
or
or
mov
sarb
sbb
jne
les
sub
insl
jp
pop
pop
or
fstp
and
enter
andl
inc
add
stos
enter
inc
xchg
adc
sbb
das
dec
jmp
enter
scas
dec
add
jmp
insb
adc
fbstp
or
or
lods
ret
pop
shrb
in
fcoml
je
stos
pop
jmp
lock
int3
gs
jle
call
rolb
pop
mov
enter
add
lock
jle
sub
ficoml
pop
in
sbb
xlat
hlt
inc
and
or
xor
and
loopne
cmp
or
cmpsl
adc
lea
out
and
jb
and
mov
gs
stos
cs
ror
adc
daa
sub
movsb
nop
or
xlat
fdivl
push
imul
adc
adc
in
pop
in
inc
rolb
cmp
incl
outsl
jne
push
bound
outsb
in
mov
insb
push
pop
mov
jne
rcll
ror
shl
loop
add
and
movsb
or
flds
lcall
push
out
and
inc
push
inc
cmp
jbe
sub
daa
add
test
or
dec
or
pop
pop
out
and
enter
pop
scas
popa
push
arpl
out
inc
ds
fsqrt
mov
leave
mov
jmp
rcrl
cmp
push
or
push
push
dec
dec
sub
lcall
xlat
sub
push
mov
popl
and
sbb
xchg
lahf
mov
subl
mov
jmp
sub
add
sub
xchg
scas
adc
add
xor
call
and
push
in
sub
push
ret
vunpcklps
and
or
fisttps
adc
add
pop
mov
cmp
inc
and
mov
and
pop
aam
and
clc
faddl
loopne
push
sbb
pop
adc
shll
arpl
lea
je
setne
pop
inc
aaa
inc
and
ret
adc
andb
add
arpl
dec
fdivs
les
adc
fisubs
xor
enter
cmp
mov
ss
add
sub
jmp
pusha
add
out
fwait
pop
and
pop
push
cmp
or
and
add
cmp
cmp
out
call
mov
repnz
hlt
cmpsl
push
add
shlb
lea
sbb
cmp
mov
mov
addb
sbb
test
dec
add
dec
push
shrl
add
fwait
cmpsb
pusha
testl
mov
push
repnz
push
popa
movsl
pop
sub
and
jmp
add
fldl
inc
sub
adc
or
jle
or
or
adc
pop
xchg
cmp
mov
pop
insb
insl
pop
jle
pusha
push
and
dec
sub
loopne
inc
inc
popa
in
shlb
xchg
sub
push
mov
inc
ret
adc
cmp
cs
add
or
inc
add
add
or
fbstp
pop
cmp
nop
repz
xchg
push
in
addl
sbbl
shlb
and
fsubr
jecxz
mov
dec
push
push
dec
and
xor
into
in
jne
add
mov
fistl
and
in
adc
mov
pop
jmp
les
loopne
xor
cmp
or
dec
sbb
cmc
push
push
inc
jmp
cwtl
mov
dec
test
xchg
cmpsb
jo
imul
scas
ss
or
lret
or
ficompl
mov
cmpsl
movb
sbb
xchg
inc
ljmp
in
mov
fadds
fyl2x
pusha
add
pop
lock
pop
mov
mov
shlb
adc
pop
jnp
pop
sbb
cs
sub
or
cmp
rolb
inc
inc
arpl
rcrl
shrl
push
adc
xchg
or
adc
out
cmp
cmc
push
sub
or
dec
dec
in
aas
call
movb
cwtl
ds
sbbb
pushf
pop
add
pop
push
pushl
jl
sti
mov
xor
push
enter
call
jno
aas
or
adc
xchg
aaa
or
or
adc
cmp
pop
xor
gs
rolb
inc
or
mov
inc
inc
mov
int
ror
jmp
inc
mov
stos
ret
or
jle
add
sarl
sub
pop
outsb
add
cmc
add
cmp
dec
jmp
xor
fcomi
jl
lret
lahf
in
notl
sub
adc
mov
neg
fdiv
push
cmp
pusha
imul
or
add
clc
mov
loope
xchg
xchg
or
add
adc
sub
push
inc
popa
lods
push
clc
cwtl
or
add
mov
nop
or
xchg
inc
roll
adc
das
popf
cmpsl
in
shrb
inc
stc
pop
push
xchg
lock
and
das
inc
mov
sti
inc
out
fists
les
dec
cli
push
and
sbb
mov
and
pusha
sarl
pop
xchg
push
scas
loope
add
movl
xlat
or
clc
ss
inc
pop
inc
adc
pop
sbb
dec
dec
in
push
xor
push
jno
add
ja
popa
fldl
inc
xor
inc
dec
iret
push
mov
pop
push
loope
dec
pop
cmp
dec
popf
xor
and
stos
inc
pop
fidivs
popl
adc
and
sbb
orl
xor
sub
jns
jns
push
dec
xor
pusha
pop
xchg
cmp
dec
sub
add
inc
add
scas
int3
lea
popa
mov
inc
cmp
adc
push
rcr
fs
push
lret
inc
push
outsl
push
rolb
adc
gs
aam
mov
sti
fmuls
enter
negl
jne
rolb
rcll
shll
aad
xchg
sbb
les
jo
push
in
lret
adc
push
xchg
movsl
xor
loope
fcmovu
inc
pusha
and
cld
pop
dec
test
cmp
pop
and
insl
test
mov
and
cmp
inc
enter
in
call
pop
sbb
push
adc
pushf
ret
std
adc
inc
dec
std
push
mov
dec
outsb
xor
je
jnp
subl
xchg
mov
cmp
mov
jb
adc
and
sbb
xor
mov
inc
enter
add
inc
push
mov
enter
fmul
loopne
cli
and
add
mov
add
push
mov
pop
dec
incl
mov
xchg
das
dec
dec
jb
xor
pushf
leave
mov
adc
iret
mov
fucom
cmpsl
mov
push
outsl
out
add
inc
xchg
and
ds
or
pop
or
mov
je
cmp
xchg
sarb
aam
sbb
jl
push
push
dec
dec
ret
and
push
cltd
mov
inc
inc
add
rcll
mov
xchg
inc
mov
add
or
sbb
add
jns
inc
imul
sbb
jo
pop
rolb
je
ja
mov
jae
sarb
mov
push
iret
sub
cmp
mov
add
in
loope
cmp
dec
test
mov
fisttpl
xlat
test
push
mov
sbb
dec
aad
adc
nop
adc
inc
inc
nop
adc
in
or
jl
sbb
and
pusha
inc
cmpsb
or
xlat
call
pop
inc
inc
push
outsl
call
push
sub
iret
inc
enter
mov
mov
cmp
xchg
adc
popa
insb
and
or
outsl
sbb
lahf
and
loope
bound
sbb
imul
pop
mov
nop
leave
inc
inc
and
fmuls
xchg
data16
arpl
sub
inc
out
pop
movl
and
push
dec
in
jmp
and
jb
and
dec
data16
sbb
data16
out
nop
mov
in
out
lock
pop
adc
push
push
dec
and
pop
ret
mov
or
es
dec
pusha
or
iret
stos
xchg
adc
dec
xchg
pop
mov
xlat
int3
dec
into
xor
xlat
xor
les
es
cmp
pop
test
icebp
scas
rorb
mov
imul
lret
and
mov
std
mov
scas
outsl
add
stc
test
ds
push
or
mov
cmp
sbb
mov
negb
push
pusha
or
dec
orl
repz
sar
fsts
int3
or
nop
or
sbb
xor
push
jl
push
mov
fnstcw
push
adc
rolb
push
sbb
pop
mov
fimuls
mov
push
mov
sub
hlt
fldcw
data16
nop
push
sbb
push
inc
push
dec
and
int
mov
push
push
and
fidivrs
xor
pop
push
test
lock
je
pop
xorl
gs
add
or
popa
nop
dec
pop
and
sub
or
sub
jg
movsl
pop
xchg
push
lcall
or
int
jb
imul
outsb
dec
pop
stos
cs
lret
pushf
cmp
add
mov
jmp
repnz
add
gs
mov
orl
mov
adc
push
out
mov
cmp
xor
or
scas
std
push
push
les
add
les
fstps
sub
push
mov
bound
sbb
fists
sbb
dec
aas
insb
rclb
popf
aam
push
cwtl
test
mov
lret
dec
insb
movsl
insl
lea
mov
in
adc
adc
inc
loope
jae
mov
push
test
dec
or
xchg
movsl
dec
adc
inc
ss
lock
dec
ret
pop
fnstenv
xchg
lret
sbb
leave
leave
rcll
fs
cs
mov
add
xchg
mov
daa
dec
add
adc
add
push
xchg
out
gs
cmpl
pop
sarl
test
cmp
sub
mov
in
adc
outsl
or
mov
and
insl
xor
add
scas
xchg
out
pop
mov
adc
and
mov
lea
pop
jns
add
xchg
dec
jbe
rcrb
jle
xlat
in
cwtl
cmp
or
push
je
inc
sbb
das
add
in
mov
int
iret
adc
xor
pop
xlat
lock
mov
xor
xor
or
sub
fdivrp
dec
jl
mov
sub
sahf
sbb
push
fs
stos
in
push
inc
enter
enter
scas
cmp
pusha
cmp
jno
mov
pusha
mov
fld
or
mov
outsl
add
xor
push
adc
mov
pop
fcmovnu
and
push
sbb
adc
orb
push
inc
add
imul
fbstp
ficoms
add
mov
and
xchg
leave
dec
add
daa
imul
pop
add
add
popf
hlt
add
or
or
rcrl
test
mov
fisttpll
orb
sbb
inc
inc
push
or
lock
cmp
inc
push
or
insl
sub
loope
rolb
cltd
push
add
xor
inc
mov
mov
out
mov
mov
dec
push
adc
int3
in
daa
into
push
dec
bound
scas
fs
or
inc
push
js
scas
mov
pop
aaa
ret
and
cmp
push
imul
rorb
rclb
test
add
movsb
jg
rorb
mov
mov
js
jecxz
adc
sbb
inc
or
cmp
notl
xchg
test
movb
sbb
pop
enter
jb
mov
jle
cmp
hlt
jle
aaa
or
cwtl
into
adc
mov
jle
cmp
inc
dec
mov
and
test
in
aas
clc
cld
out
dec
pop
fs
lea
push
loopne
add
or
ja
test
add
scas
call
mov
inc
sbb
cmpsb
lds
pop
inc
pop
in
loopne
xchg
std
cmpsb
or
movswl
or
ja
jge
rorb
or
inc
pop
dec
add
pop
in
mov
fsubrs
int3
pop
shll
jno
dec
ror
pop
xor
pop
mov
negl
mov
sub
pop
aaa
cmpb
push
xor
dec
in
and
or
clc
inc
or
aad
outsb
imul
clc
add
adc
test
and
dec
and
and
imul
add
sbb
je
dec
pop
insb
mov
imul
mov
nop
popa
mov
and
add
cmovb
or
xorb
dec
and
ljmp
mov
inc
add
cltd
out
adc
test
sbb
popf
fisubs
sub
sbb
pop
pop
dec
sub
add
jge
xor
xlat
xor
clc
adc
rolb
jmp
out
pop
mov
add
mov
xchg
mov
leave
jp
mov
movsb
or
and
inc
movsb
cmp
xor
xchg
and
xor
xor
inc
push
xor
nop
push
add
ds
int3
les
push
pop
mov
imul
push
fwait
iret
or
xchg
cmp
pop
mov
cmp
or
lcall
out
sbb
push
test
mov
loop
fistpll
cmp
repnz
aam
shlb
jl
push
rorl
fidivrs
les
scas
pop
xchg
add
ja
push
loopne
jg
jno
push
aad
push
ror
jg
jmp
inc
jne
sbb
jbe
fnsave
outsl
jno
bound
pop
jg
or
inc
xchg
push
sub
aad
adc
push
xor
and
or
sbb
jg
sbb
lahf
ret
sbb
sbb
xchg
inc
imul
pop
sbb
adcb
cmp
and
jb
ret
cmpb
sbb
sub
mov
lcall
sub
xchg
mov
xor
aam
sub
in
cmp
add
je
xor
clc
sub
js
mov
cld
inc
hlt
negb
sbb
jnp
stc
jl
sbb
cmp
push
add
xor
push
mov
popf
push
mov
inc
cltd
and
fiaddl
adc
add
adc
push
sbb
pop
sub
cmpsb
movsl
push
insb
sub
pop
cltd
cltd
call
aaa
xor
push
outsb
mov
nop
neg
lcall
cmp
scas
cmpsl
sbb
popa
cltd
jle
ljmp
movsb
jge
mov
insl
push
mov
loope
mov
push
sbb
and
push
rcr
pop
inc
nop
fstl
stos
imul
insl
aam
mov
ja
mov
mov
dec
shll
mov
xor
imul
sti
mov
aad
outsb
cs
icebp
add
inc
repz
sbb
mov
cmpsb
or
mov
xchg
inc
or
cmp
cli
rorb
mov
rcrb
pop
jge
xchg
xor
outsb
jmp
aas
loopne
lods
inc
jno
insl
jecxz
mov
sbbb
lret
jne
pop
fdiv
dec
or
jmp
or
xor
loopne
push
stos
jae
sbbb
lcall
jp
les
push
lea
push
cmp
fcmove
xchg
mov
cmp
inc
jecxz
or
pop
inc
push
pop
xor
aad
scas
es
mov
cld
cli
insb
pop
sbb
pop
loope
pop
jno
dec
sbb
movsb
cmp
inc
pusha
insl
mov
out
sbb
inc
dec
xor
inc
call
sbb
mov
sub
mov
cmp
adc
pop
mov
cmp
mov
xchg
mov
jno
out
mov
movsl
dec
adc
adc
loope
leave
out
mov
jmp
sub
lock
lock
mov
mov
mov
and
add
xchg
ds
sub
xchg
or
ret
ljmp
sti
stos
pusha
orb
xor
mov
mov
call
inc
dec
inc
aaa
les
call
jp
adc
addl
arpl
and
shll
mov
jno
or
adc
inc
cmp
push
add
add
and
rcl
push
outsl
xor
test
or
fisubl
movsl
mov
xchg
xchg
fnstsw
cmp
jp
and
ret
cmp
or
imul
clc
cmp
pusha
or
aam
and
incb
pop
ret
mov
popf
adc
call
lret
addl
iret
push
add
cmp
pop
ret
cwtl
fiadds
subl
bound
hlt
loope
packsswb
mov
lahf
mov
notl
add
pusha
ss
inc
sub
and
xchg
and
xlat
scas
adc
data16
add
add
fcmovb
push
dec
sub
push
in
idiv
loopne
inc
dec
call
subl
push
inc
xor
add
mov
lock
xchg
lods
jge
int
out
scas
jle
xor
adc
test
clc
or
je
fists
sbb
or
xlat
push
add
cltd
sbb
pop
insl
jecxz
and
xchg
and
outsb
cmp
cwtl
rol
adc
jp
sub
push
fldenv
mov
push
popa
imul
mov
cmp
jecxz
add
dec
rcrb
mov
bound
mov
cmp
or
adc
mov
jmp
adcb
pop
scas
or
in
loope
and
fsubs
mov
jbe
jno
or
arpl
sub
jmp
pop
or
pop
push
inc
and
push
cmp
into
adc
or
jno
std
sbb
or
aaa
sbb
add
mov
ret
jnp
mov
or
movb
dec
pop
int
movl
adc
test
add
sub
ja
and
sub
add
xlat
int
inc
pusha
sbb
movsl
daa
push
es
add
sub
cmovp
out
add
insb
push
cmp
jo
xor
es
pop
sub
push
mov
and
aam
fsubs
pop
pop
icebp
xchg
push
inc
push
add
aaa
add
pop
add
lods
push
xor
sbb
paddd
inc
fsubrs
adc
in
into
enter
sub
sub
push
fcom
mov
out
push
jl
and
out
xor
mov
sbb
lret
pop
addl
mov
cmp
adc
mov
les
cmpsb
xlat
cld
sbb
dec
jns
insl
jo
lea
xchg
or
enter
mov
xor
scas
mov
xchg
add
daa
push
cwtl
and
pop
fcomps
dec
xor
fildl
xchg
jecxz
pop
sub
lret
loopne
add
xchg
out
loopne
adc
sub
lock
pop
and
mov
rolb
fiadds
xchg
outsl
sub
loopne
add
push
pop
clc
mov
sub
or
vpunpckhwd
into
sbb
pop
push
lret
push
cmp
mov
add
and
loope
pop
leave
clc
sub
mov
ret
aaa
sbb
pop
cld
xchg
in
xor
sbb
leave
pop
fwait
inc
test
cltd
pop
lock
pop
xchg
mov
sti
mov
loopne
xor
and
lock
mov
adc
leave
ja
sub
mov
add
inc
mov
and
bound
test
jbe
scas
push
jb
xor
into
or
mov
and
adc
in
sub
shr
cmpl
pop
mov
aam
enter
mov
dec
fs
mov
cmp
dec
pop
xor
mov
pop
push
negl
push
insb
push
mov
push
jge
inc
inc
daa
pop
and
pushf
or
or
xor
idivl
cmp
call
or
in
pop
inc
ret
xchg
nop
vmread
insb
xor
popf
nop
ret
push
aas
ficoml
push
sbb
test
orb
fadd
cmpsl
dec
inc
mov
movsl
ucomiss
pop
mov
mov
fs
sti
sbbl
push
jo
mov
xor
push
cs
aas
aas
fs
xor
fdivr
pusha
das
sbb
xchg
adc
and
mov
xchg
push
sub
cmp
icebp
push
sbb
scas
outsl
jl
sbb
pushf
idivb
nop
xchg
out
shr
mov
in
inc
test
lret
pop
sub
lods
add
sub
pop
arpl
in
and
mov
bound
stos
pop
mov
and
mov
ret
push
or
inc
xor
addr16
imul
xchg
sub
filds
cmp
vmovlhps
pusha
ret
gs
add
adcl
arpl
fstl
adc
inc
and
imull
and
push
inc
add
add
jmp
lds
imul
adc
sarl
iret
and
inc
cmp
popf
pop
and
add
imul
adc
jg
sbb
xchg
sub
jle
pop
cmp
lahf
xchg
mov
sub
pop
test
rclb
xor
sub
lds
das
push
cmp
bound
je
test
xchg
and
add
aad
orb
dec
inc
mov
inc
adc
adc
iret
and
mov
fists
mov
inc
rorb
es
inc
inc
adc
mov
jns
setb
or
cmp
push
mov
pushf
xchg
inc
xchg
fidivrs
jns
xchg
test
add
mov
jo
lods
mov
mov
dec
lock
pop
push
int3
cmp
or
jl
shrl
nop
mov
je
leave
insl
in
pop
add
iret
leave
leave
rcl
adc
mov
jmp
push
pop
lods
ret
add
aas
pop
xor
nop
lea
add
insl
cmp
xor
sbb
xor
addr16
push
xchg
pop
dec
iret
pop
sub
xchg
popa
adc
adc
bound
pop
lcall
sub
pop
inc
mov
lods
xlat
inc
and
dec
xor
inc
mov
mov
mov
mov
and
mov
in
decl
adc
xor
pop
repnz
cmp
or
mov
popa
orb
or
fsts
pop
repnz
aam
mov
pop
rcl
fstpl
add
shld
fs
aad
xor
jo
dec
adc
ljmp
add
adc
inc
data16
dec
cmpsl
pop
test
hlt
xor
sbb
rorb
arpl
dec
daa
cmc
mov
mov
mov
sub
jge
sti
jae
mov
mov
enter
xchg
imul
popf
adc
aaa
movsl
dec
movsb
scas
dec
mov
sbb
mov
out
shrb
mov
pop
add
mov
mov
pop
mov
xchg
aam
rorb
jbe
xchg
mov
sti
lea
fcomps
in
iret
and
sub
dec
xchg
xor
push
sbb
pop
fdivs
subb
rcll
mov
dec
mov
pop
dec
lret
cs
push
sbb
mov
push
in
hlt
stos
insb
sub
aam
jl
sbbb
flds
xor
adc
jge
xchg
lock
sub
fbld
pushf
jmp
xchg
cmpsl
fwait
sbb
shll
xchg
movsl
adc
iret
imul
push
lea
lahf
and
aas
rolb
xchg
cwtl
or
push
cmp
movsb
lea
mov
add
xor
dec
out
xchg
jae
es
mov
mov
mov
test
fmuls
movsb
xchg
lock
mov
sub
xchg
sub
out
lods
mov
and
mov
idivl
movsb
rorl
mov
mov
inc
pop
aas
push
aas
add
mov
xchg
push
fisttps
sub
add
mov
and
mov
xchg
orb
outsl
call
nop
lock
mov
pop
adc
fiadds
adc
xor
mov
xchg
je
cltd
scas
fstpl
xchg
imul
xchg
dec
push
lcall
mov
cmp
push
lret
in
call
jmp
and
xor
loopne
dec
pop
adc
inc
pop
mov
mov
shll
std
adcb
push
cmp
inc
mov
mov
or
fstps
aaa
add
outsl
cmp
add
add
sub
xor
lods
pop
aam
fstpl
push
int
cwtl
add
cltd
dec
push
sbb
icebp
add
bound
mov
inc
cmp
xor
add
mov
mov
cmpsb
fcoml
cmp
dec
and
xchg
pusha
mov
xchg
and
push
add
xlat
sbb
jmp
push
jne
orl
mov
dec
pusha
imul
imul
and
pop
or
pop
decb
dec
or
dec
je
dec
jne
xchg
rcrb
push
cwtl
std
fwait
jmp
and
fs
xchg
aaa
xor
push
dec
xor
fs
add
mov
and
out
daa
add
inc
loopne
shll
add
add
mov
js
clc
pop
xor
or
aaa
xchg
and
inc
mov
dec
add
xchg
insb
inc
loop
and
cmpsl
adc
flds
push
push
ljmp
mov
push
or
inc
push
pop
and
pusha
aas
push
inc
dec
nop
inc
lahf
dec
lods
out
or
xorl
and
push
fwait
sub
xor
sti
lahf
pop
sub
outsb
jno
mov
dec
mov
push
and
sub
jmp
xchg
insl
fildl
test
stos
and
mov
fiadds
cs
js
or
or
adc
bound
xor
and
dec
cwtl
push
invd
lods
js
adc
inc
jno
aaa
xchg
fistps
pop
dec
or
clc
mov
jmp
mov
jo
adc
mulb
push
stos
fisubrl
push
cmpsb
mov
fiaddl
push
gs
shlb
sub
sub
mov
adc
rcl
xor
das
dec
mov
jo
or
mov
xor
sub
push
out
cmpb
fsubr
adc
pop
adc
test
nop
push
repnz
daa
ja
inc
inc
adc
add
jle
test
adc
ret
or
xor
and
dec
int3
or
ss
dec
test
inc
call
mov
add
addr16
xchg
adc
in
inc
push
push
bound
and
push
test
pop
push
add
push
test
mov
and
iret
ret
ret
cmp
xchg
and
inc
inc
dec
je
mov
inc
sub
test
gs
daa
test
mov
stc
daa
test
test
roll
test
adc
and
inc
shrl
lods
and
push
inc
cmp
xor
mov
and
fnstsw
push
adc
push
xchg
adc
adc
inc
cmp
loopne
je
adc
imul
cmp
test
or
adc
stos
cmp
dec
or
addb
pop
mov
data16
cmc
inc
and
mov
push
dec
mov
cwtl
inc
push
adc
repz
mov
inc
mov
inc
call
inc
test
inc
outsl
and
jg
inc
jns
dec
roll
jnp
add
mov
ja
or
or
cmp
adc
xor
adc
movsl
insl
xchg
pushf
adc
or
lods
fldcw
or
lods
scas
add
aas
and
jae
push
sub
nop
and
in
cmpsb
lods
decb
cmp
cmp
andb
in
jns
inc
sub
dec
out
pop
adc
loopne
aaa
cwtl
push
add
in
cmp
push
pusha
call
out
mov
arpl
pusha
mov
jno
cmp
adc
or
pop
pop
sub
sub
sub
xor
adc
push
pop
push
outsb
and
dec
add
mov
ss
mov
inc
inc
call
outsl
pop
es
and
or
xchg
cmpsb
je
push
test
mov
xchg
add
scas
inc
test
cmp
mov
cli
clc
sub
inc
push
dec
cmpsl
shlb
inc
pop
lock
sub
sbb
adc
push
mov
mov
mov
mov
or
xchg
out
dec
insb
sbb
sub
mov
xor
loopne
sub
sbb
inc
in
push
sub
test
mov
xchg
push
outsl
addr16
ret
dec
sub
dec
cmpb
faddl
call
adc
ds
outsb
mov
push
adc
sbb
loopne
inc
sbb
in
cmpsb
movsb
or
fmuls
in
rolb
push
fs
aam
inc
cmpsb
fs
mov
dec
data16
clc
add
and
push
sub
leave
in
hlt
imul
push
pop
push
das
adc
dec
xor
fistl
or
sbb
jge
add
jecxz
insl
pop
enter
dec
popa
int3
mov
sub
cmp
nop
aam
faddl
mov
loopne
mov
loope
inc
hlt
and
addl
xchg
mov
pop
adc
daa
je
rorl
lds
push
mov
cli
repz
pop
rorb
insl
and
cmp
cmc
enter
add
dec
sub
rclb
pop
test
sub
dec
jmp
add
mov
test
icebp
mov
outsb
mov
in
inc
aam
mov
lahf
sub
add
clc
cmp
gs
les
pusha
xor
sub
push
hlt
xor
daa
inc
stc
nop
sbb
and
test
push
addb
popa
enter
push
lods
sbb
and
and
cs
adc
cmp
je
cwtl
inc
pop
push
lods
loope
mov
sti
mov
mov
inc
rclb
xchg
xor
outsl
or
dec
and
or
sub
adc
pop
inc
or
mov
les
lcall
lahf
out
mov
inc
ret
cmp
aas
rol
inc
mov
jmp
dec
lock
xor
jns
push
dec
lock
add
inc
sbb
inc
test
add
divl
loope
fadds
jmp
mov
aam
lods
test
lcall
or
mov
imul
mov
push
adc
ret
fucompp
shrb
inc
call
sub
add
jne
das
lahf
clc
nop
je
mov
adc
pop
push
js
mov
cld
add
adc
inc
addb
cmp
adc
cmp
ds
lea
movsl
lcall
in
xchg
inc
int
call
addb
test
sub
je
sub
adc
mov
xchg
test
neg
testl
mov
sahf
filds
je
nop
sbb
cmpsb
inc
xlat
and
mov
jl
sti
lock
cmp
mov
push
repnz
in
mov
jae
leave
es
mov
loopne
loopne
enter
fdivl
fldcw
pop
xchg
fsubs
inc
or
aam
cld
mov
cmp
cltd
xor
or
iret
mov
shlb
jl
inc
jb
inc
jno
int3
add
push
test
in
xor
ret
cmovbe
mov
imul
xor
xor
jo
bound
gs
and
and
and
and
enter
fs
or
and
or
iret
outsl
mov
inc
add
pushf
stos
or
out
das
dec
pop
xor
movb
pushf
sub
and
sarb
sbb
mov
and
fistps
popf
xchg
andl
or
xchg
push
ja
push
jecxz
add
pop
je
mov
enter
add
and
insb
dec
leave
and
fildl
add
bound
adc
clc
inc
mov
xchg
loopne
push
sbb
xor
pop
mov
pop
fcomp
or
adc
add
sbb
fucomp
add
mov
mov
add
enter
mov
movsl
add
jecxz
add
dec
subl
shlb
shlb
pop
sbb
test
les
sub
cmc
push
push
add
mov
test
scas
mov
cmc
or
sub
hlt
nop
mov
dec
loope
cmpsb
cmp
rcrb
inc
dec
and
push
orb
inc
xor
fldcw
mov
insl
movsl
loopne
nop
mov
orl
adc
popl
sbbb
mov
out
cmpb
rcll
sti
call
jns
adc
das
shll
incb
xor
movsb
adc
adc
push
or
xor
lea
sbb
adc
hlt
mov
add
cmp
nop
cs
out
dec
sub
dec
jnp
push
mov
lea
lods
and
cli
xor
adc
subl
mov
stc
add
outsl
inc
dec
push
mov
call
cli
movsb
mov
jbe
push
jecxz
cmp
sahf
fcomps
loope
daa
aam
je
inc
add
clc
jmp
lock
adc
add
pop
dec
movsl
imul
imul
movsl
inc
sub
mov
inc
and
pop
or
jl
xor
mov
xchg
lds
xchg
fwait
pop
add
sbb
out
mov
push
dec
repnz
sub
arpl
data16
add
clc
loopne
mov
popa
lock
jmp
mov
push
cltd
sub
sbb
rorl
hlt
adc
dec
lods
lea
rorl
push
lea
movsb
aad
cwtl
jo
pop
inc
cmp
sub
imull
stos
sbb
pop
lock
pop
push
dec
push
mov
push
xchg
mov
sbb
pop
imul
sbb
dec
scas
imul
fcompl
fisttpll
imul
fcomps
fisttpll
imul
aam
fisttpll
imul
rcrb
fisttpll
imul
int3
sbb
imul
enter
inc
les
rorb
out
test
jns
mov
iret
adc
mov
adc
or
in
rorb
mov
xor
ret
fcoms
push
adc
test
mov
mov
mov
mov
into
rolb
fnsave
inc
and
roll
mov
dec
mov
loope
and
pusha
daa
test
sbb
fisttps
push
add
hlt
aad
loop
sub
pusha
mov
int
or
xor
xor
aaa
xchg
dec
sbb
nop
std
xor
inc
test
xor
mov
add
mov
in
adc
cmp
sbb
lock
arpl
out
rcr
jno
and
enter
aaa
jg
sub
pop
rolb
inc
sub
or
pop
dec
mov
icebp
mov
rclb
imul
pop
call
or
dec
jo
cmpb
test
mov
push
xor
push
cmp
pusha
jae
push
in
les
imul
gs
dec
push
je
sahf
out
push
lcall
push
sub
popf
push
in
xchg
sub
push
je
mov
push
je
mov
push
je
mov
push
je
mov
push
je
mov
mov
fcomp
add
sbb
mov
scas
aam
fwait
sbb
push
and
in
mov
mov
in
and
push
fxch
or
and
enter
les
sbbl
pushf
rcl
scas
add
mov
sbb
add
cmpsb
cmp
sarl
inc
push
mov
add
mov
dec
add
mov
jmp
test
adc
push
je
mov
scas
bound
inc
fsubrl
imul
sarb
test
sbb
sarb
jmp
int
xchg
addr16
sbb
in
cmp
mov
pop
addr16
and
xor
pop
inc
mov
or
outsl
call
addr16
sbb
fdivrs
or
pop
push
dec
mov
adc
lods
call
pop
gs
cmp
dec
aad
xor
pop
jo
mov
cmp
roll
nop
cmp
leave
xor
xlat
outsb
outsb
push
mov
fcomip
ss
xor
xchg
pop
insb
shrl
dec
movsb
enter
dec
clc
xchg
push
dec
insl
mov
and
add
sbb
jp
shlb
pop
jmp
inc
pop
pop
roll
insl
jo
inc
mov
insb
incl
mov
movsl
jne
or
jb
ja
in
inc
ficompl
sub
outsb
nop
out
sahf
testl
ret
mov
mov
mov
outsb
push
je
cltd
inc
mov
dec
in
sub
loopne
sub
fdivl
inc
mov
dec
fdivs
inc
mov
dec
aam
add
mov
int3
int3
and
adc
fmull
adc
jmp
mov
addr16
sub
add
or
in
mov
icebp
sahf
outsl
adc
xchg
in
push
pop
or
pop
rclb
adc
inc
imul
inc
sub
push
add
jp
jmp
pop
in
jo
sbb
xchg
mov
xchg
jo
les
add
shl
sub
inc
mov
xor
mov
xor
test
inc
ss
das
loopne
fwait
dec
sub
and
test
fmull
add
add
cmp
in
or
subb
inc
adc
push
pop
fmuls
add
ljmp
stos
test
fisttps
and
xchg
movsl
adc
add
fcoml
adc
adc
sbb
push
test
mov
lcall
push
leave
in
push
sub
js
push
fdivrl
inc
mov
leave
daa
aam
pop
mov
jmp
test
add
xorb
add
adc
cld
ret
sbb
out
mov
add
dec
mov
pop
sub
sub
add
aam
or
mov
or
jg
pop
xor
cli
ja
adc
add
or
xor
lds
lahf
dec
in
lret
in
xlat
xchg
xor
pop
das
add
dec
mov
adc
xlat
jo
or
sub
sbbl
adc
leave
xchg
push
push
adc
ss
insl
test
pop
sbb
push
and
jno
xor
roll
push
mov
imul
and
add
pop
xchg
iret
sbb
or
pop
ja
or
pusha
xchg
push
lods
aam
pop
pop
andl
add
jo
inc
cmpb
mov
xchg
inc
int3
jl
or
sbb
adc
jne
mov
sbb
jns
sbb
shrl
call
pop
leave
jne
or
jb
or
and
mov
add
add
lods
jge
jbe
imul
jbe
aas
and
pop
jne
jno
cltd
loop
or
movsl
and
jmp
mov
add
mov
mov
hlt
and
loopne
push
imul
jmp
cwtl
dec
adc
loopnew
je
stc
loope
repz
mov
aaa
lock
enter
add
mov
and
dec
adcb
jmp
ret
add
sub
xchg
hlt
inc
or
and
outsl
add
push
adcl
adc
add
adc
adc
ret
mov
sub
das
dec
dec
pop
adc
inc
movsl
push
stos
push
pop
push
push
cmovns
imul
sbb
test
push
sub
shrl
push
rorb
arpl
add
jns
enter
mov
xorl
cli
pop
fs
adc
js
out
not
xor
and
shl
pop
sub
xor
sbb
sbb
xchg
movsb
or
or
icebp
outsb
mov
inc
dec
jnp
js
add
jo
pop
push
dec
and
or
jge
and
lahf
lods
or
pop
sbb
adc
cmpl
jl
enter
jle
orb
neg
movsb
scas
mov
xor
inc
movsl
shrl
popa
push
push
push
mov
stc
loope
and
sahf
jg
xor
iret
pop
or
adc
insl
xchg
add
jbe
cmpsl
call
lods
push
imul
or
and
push
mov
and
sub
sbb
dec
aam
je
push
fcoms
pop
data16
cmp
add
pop
push
insb
and
lcall
dec
popa
insb
scas
rclb
cli
addl
inc
inc
mov
mov
add
loopne
lahf
inc
fsubs
sbb
pusha
dec
pop
cmpl
push
sbb
xchg
aam
movsl
adc
sbb
inc
fbld
loopne
fcoml
test
and
ljmp
jo
outsl
mov
outsl
in
xor
pop
push
xchg
adc
adc
pop
rorb
pop
dec
pop
inc
jg
es
aaa
popf
test
std
adc
and
rcrb
shrb
enter
sub
iret
lcall
pusha
sbb
adc
push
ja
popa
or
cltd
xchg
xchg
add
cmp
xchg
sub
sub
pushl
add
lods
lds
adc
sbb
jle
subb
mov
jecxz
inc
mov
cvtdq2ps
xchg
push
popa
in
test
add
shl
mov
dec
or
push
orb
ret
in
push
or
fcoml
add
adc
jge
add
pusha
or
sti
cmp
adc
adc
and
cld
in
sbb
popf
movsl
mov
mov
adc
lret
das
push
jae
sbb
jecxz
inc
inc
hlt
hlt
mov
in
xlat
rol
push
enter
cmc
jg
add
loop
mov
mov
shrb
or
xchg
into
push
sbb
sub
or
dec
adc
sbb
and
adc
dec
rol
sub
mov
sarb
adc
xorb
cld
mov
scas
jns
fisttpll
imul
add
and
push
or
mov
inc
cli
xor
xchg
sub
or
jge
adc
mov
xlat
fstpl
or
ror
movsl
add
les
sub
xchg
jb
adc
ja
je
rolb
sbb
push
adc
xchg
inc
add
nop
xchg
mov
test
push
xor
ret
and
jnp
xor
scas
lods
sarb
xchg
out
adc
mov
fcoml
and
das
adc
push
xor
add
xor
sbbl
jl
leave
push
xchg
mov
dec
mov
clc
addl
mov
pop
xor
sub
loopne
adc
xor
xchg
jbe
inc
push
push
pop
xor
ficoml
push
sbb
adc
mov
paddq
ja
es
test
adc
and
mov
cli
or
sbb
dec
xchg
insl
add
inc
push
ret
adcl
lods
or
mov
mov
mov
jbe
lahf
push
adc
orb
adc
pop
or
pop
or
shll
mov
loop
sbb
lea
inc
popa
sub
adc
jge
push
inc
arpl
jge
add
ret
sub
jge
idivl
cmc
pop
test
cmp
sbb
cwtl
inc
rorl
popa
mov
mov
mov
adc
lock
adc
sbb
div
filds
fidivs
push
dec
mov
jmp
cmp
lds
and
and
sbb
mov
sbb
add
xor
andb
sbb
inc
and
bound
push
cmp
adc
add
push
cmp
lcall
in
lds
imulb
mov
mov
lods
adc
mov
ret
pop
add
push
jmp
dec
xchg
xchg
cmp
rcrb
push
inc
pop
xor
or
jne
adc
dec
mov
in
loopne
fidivl
push
aam
add
and
sbb
mov
mov
jmp
or
inc
test
roll
mov
and
xchg
inc
lods
rclb
cmp
cmp
jne
hlt
adc
add
mov
rcrl
push
mov
je
pop
jmp
gs
mov
or
adc
cmp
subb
lds
xor
aaa
xor
and
testl
xor
sub
sbb
dec
or
lods
into
sbb
push
imulb
int
lret
inc
adc
cmp
lods
shlb
push
adc
addl
adc
imul
je
jl
mov
add
add
lret
mov
push
sti
rcl
sbb
daa
sbb
or
call
lock
and
xchg
xor
xchg
add
jb
dec
add
pop
rclb
mov
xor
addr16
repnz
test
or
mov
and
push
mov
add
mov
rcr
sbb
rcr
out
add
add
or
xor
movlps
cmp
jg
and
adc
adc
loopne
pop
add
sbb
cld
inc
mov
sbb
clc
int3
add
push
imul
popa
xor
ret
addb
insb
dec
leave
rol
or
cmp
ret
xchg
inc
or
ss
xor
sbb
jne
cmpsl
test
inc
cmpb
test
and
inc
arpl
and
mov
sbb
test
dec
bound
and
xor
insl
pop
cmpb
cmp
adc
aad
mov
cmp
adc
scas
movsb
dec
or
imul
pop
add
add
sub
mov
and
test
jne
add
out
in
or
mov
sbb
sbb
mov
loop
inc
fiaddl
or
push
pop
sub
cli
sbb
cmp
push
cmpsl
push
sbb
aaa
jo
mov
outsb
mov
ret
adc
sbb
dec
adc
cmpsb
add
push
or
adc
aad
pop
or
and
dec
sbb
sbb
pop
and
push
cld
sahf
mov
lea
jl
add
add
add
push
les
add
or
sub
xchg
fs
push
lahf
inc
shlb
xor
ljmp
add
arpl
add
shll
xchg
or
dec
cs
ret
add
mov
and
mov
clc
push
test
jle
clc
fdivs
push
push
sbb
sub
pop
fnstcw
pop
or
ficoms
in
pop
mov
sbb
movsb
dec
xor
mov
test
and
sub
pusha
insl
sub
dec
cmp
xlat
push
fsts
xchg
movsl
icebp
dec
pop
sub
xchg
mov
mov
jg
insl
add
adc
adc
jecxz
mov
mov
pop
int
xor
inc
xor
jne
mov
pop
aas
fcmovne
or
fldl
aas
pop
sub
inc
mov
pop
es
jl
leave
test
add
pop
cmp
add
push
jb
pop
imul
loop
pop
xlat
ds
mov
popf
pop
outsl
adc
and
nop
adc
push
or
mov
nop
aas
sub
xor
sarl
pusha
insb
shl
je
add
hlt
add
pop
nop
loopne
sbb
jns
scas
push
and
or
loopne
out
pop
mov
mov
and
adc
cmp
mov
je
fsubp
aam
orb
mov
addb
mov
adc
xchg
mov
cmpb
cmp
push
test
and
jmp
inc
insb
sbb
lods
shl
das
add
push
mov
lret
jmp
pop
or
cld
add
icebp
or
ret
inc
or
cmpsb
mov
jle,pt
fildl
clc
add
push
inc
push
or
lock
cmp
jne
or
shl
dec
jne
jne
je
sub
add
xchg
out
sbb
movsl
lds
xchg
and
inc
sub
ret
loope
or
insb
pop
fmull
sbb
mov
fcompl
and
outsb
bound
add
in
pop
jmp
xchg
xchg
pop
and
pop
pop
das
xchg
shll
push
sub
scas
cltd
rorb
nop
sbb
add
push
insl
push
dec
mov
dec
inc
dec
ret
xor
mov
sarl
sbb
mov
xchg
inc
dec
ret
inc
orb
imul
pop
and
sub
out
xchg
or
mov
rorb
cmp
sbb
add
inc
sub
inc
or
clts
cmp
mov
btr
mov
mov
mov
sub
add
idivl
pop
mov
push
cs
xor
cmp
jae
sub
inc
enter
xor
mov
out
push
dec
push
dec
pop
ss
cs
jbe
mov
xor
mov
nop
das
loope
or
ret
push
sub
dec
cmp
xor
test
jg
jo
xchg
mov
sbb
lahf
jb
ja
cmp
scas
dec
xor
subb
mov
push
bound
orps
sti
bound
jb
popw
adc
loope
loopne
dec
dec
xchg
inc
push
dec
sbb
fisubrs
pop
sub
xchg
mov
xor
ja
jle
adc
xor
inc
dec
xchg
movsb
data16
xlat
xor
or
cmovb
xor
xor
jb
cmp
add
inc
inc
mov
rcrl
bound
jne
adc
cmp
push
aam
or
pop
roll
outsl
insl
fisttps
push
je
lds
out
ret
cmp
daa
xchg
shlb
daa
or
jg
xchg
xchg
xor
push
call
cmpsb
xor
jg
decl
mov
mov
xor
lea
lcall
or
fwait
clc
andb
pop
cmp
pop
ret
pop
inc
mov
add
mov
lods
fldcw
jmp
jbe
push
ja
add
sarb
pop
ret
xor
mov
ja
xor
xor
cmc
cmp
dec
mov
pop
xor
sti
test
cmp
out
xor
push
add
test
push
jbe
xlat
imul
jmp
dec
dec
int
aaa
sbb
xchg
neg
xor
daa
sahf
imul
iret
and
push
inc
mov
mov
push
pop
pusha
mov
daa
or
es
push
fcoms
or
or
xchg
xorps
push
lods
movsl
add
ss
pusha
movl
idivl
scas
xor
int
loop
add
outsb
popa
pop
adc
ret
fiadds
addr16
mov
jecxz
leave
push
je
outsl
xor
divb
mov
adc
ja
push
xchg
inc
xchg
or
xor
cmpsb
add
in
inc
xchg
push
ss
cmp
sub
aaa
mov
or
mov
jo
aaa
inc
push
aaa
ljmp
gs
aad
mov
cmc
mov
je
aaa
sub
and
mov
push
cmp
dec
pop
xchg
scas
testl
xchg
scas
iret
cmp
cmp
dec
add
dec
ds
in
cmpsl
mov
cmpsl
xor
fs
imul
xor
adc
xor
inc
in
outsl
pusha
xchg
enter
pop
pop
lock
xor
sub
daa
xor
adc
idivl
ja
or
aaa
in
push
mov
cmpsl
xor
mov
xchg
xor
rolb
leave
out
push
cmp
ss
cmp
bound
push
popa
lds
cs
fs
lahf
insb
adc
xor
and
add
add
mov
iret
push
add
cmp
push
xor
sub
add
mov
dec
lds
ja
das
addr16
pop
xor
mov
aaa
push
xchg
pop
insb
push
sbb
cmpsl
xor
inc
jae
loop
sbb
cmp
xor
je
ret
aas
inc
inc
pop
jp
xlat
hlt
test
sub
das
arpl
inc
dec
bound
add
inc
mov
sub
data16
rcr
pop
cmp
xchg
mov
xor
stos
add
adc
xchg
push
rolb
adc
adc
dec
lds
or
dec
xchg
stos
mov
pop
ret
mov
add
dec
sbb
xor
xor
xor
imul
cmp
iret
data16
subb
xor
mov
insb
int
cmp
addr16
xchg
iret
stos
icebp
outsb
insl
and
push
bound
daa
aam
sub
push
push
xor
xor
add
mov
leave
imul
push
adc
pop
cmp
pushl
dec
push
mov
aaa
cmp
inc
adc
xor
push
clc
sub
addr16
jb
das
or
push
cmp
popl
pop
cmp
daa
js
adc
mov
lahf
aaa
cmp
sub
test
test
xchg
call
iret
dec
lock
pop
pop
push
inc
das
cmp
xor
inc
xlat
xorb
aaa
cmpsl
out
pop
inc
cmp
xchg
lahf
ja
xchg
js
and
add
popa
popl
jg
addb
outsl
arpl
into
mov
xchg
xchg
xchg
aas
push
add
fisttps
pop
mov
enter
push
sub
dec
add
mov
push
jb
call
or
sbb
add
lock
pop
int
inc
push
rcl
aas
xlat
push
sub
xor
iret
jbe
testb
cmp
aam
or
pop
dec
iret
sbb
xorps
or
inc
mov
xor
push
movsb
dec
jo
sbb
ss
lods
or
filds
rcll
sub
icebp
je
xor
push
mov
negl
xor
xor
mov
pop
inc
push
inc
pop
fwait
mov
in
push
xor
push
dec
xor
rclb
sahf
sub
push
sub
and
mov
daa
cli
aaa
sbb
cs
fidivrl
jb
mov
cmpsl
pop
add
ss
xor
popa
cmpsl
addr16
push
sbb
dec
xorl
xor
xor
xor
cli
cmp
push
push
cs
push
pop
push
sahf
mov
push
pop
pop
in
ss
sarl
daa
add
push
sahf
xor
xor
xor
xchg
mov
outsb
cmp
daa
nop
dec
cs
xor
sub
xor
cmp
nop
xor
ja
inc
cs
cwtl
icebp
and
xor
inc
inc
dec
inc
outsl
pop
insb
lcall
inc
out
adc
addr16
addr16
pop
xor
push
cwtl
call
xor
mov
sbb
popa
aaa
mov
mov
addr16
mov
fs
idivl
xor
cmp
lds
inc
inc
xor
xor
xor
adc
rclb
ja
xor
loop
and
xor
push
xchg
cmp
lods
in
jb
xor
lock
lods
mov
add
inc
xor
xor
push
out
cmpsl
lahf
insb
ret
jg
xor
leave
lds
inc
das
pop
shlb
pop
xor
inc
xchg
add
xchg
ja
pop
sub
or
aaa
inc
dec
dec
push
pop
cmp
xchg
dec
sbb
daa
add
loop
pop
cmp
add
xor
add
inc
xor
push
mov
push
pop
pop
inc
sub
scas
cmp
pop
lock
jb
cmp
push
inc
push
inc
ja
dec
xor
lds
outsl
ret
add
notl
push
pop
xor
idivl
movsb
sarb
dec
pop
xor
cmp
out
cmp
pop
icebp
call
push
pop
dec
cs
xor
xor
cwtl
or
pop
xor
pop
mov
jnp
ljmp
pop
jns
scas
push
cmp
xor
and
add
cmp
in
pop
cwtl
mov
pop
rorl
push
lods
inc
imul
test
push
test
push
test
mov
pop
mov
pop
pop
pop
add
jne
xor
scas
in
xor
inc
dec
mov
in
filds
sbb
mov
push
inc
notl
sub
sbb
inc
xlat
fcmovb
mov
mov
adc
jbe
scas
insl
popa
loop
sbb
aad
sub
lret
push
cmp
scas
pop
adc
xor
ja
push
cwtl
mov
and
adc
adc
pusha
adc
je
fadds
and
add
daa
sub
dec
push
push
ret
sbb
add
lods
add
or
cmp
add
jne
popa
push
test
add
imul
push
dec
xor
pop
adc
xor
ljmp
xchg
jb
mov
scas
scas
ss
aaa
xor
sub
push
xor
or
mov
adc
xchg
xchg
xchg
popl
decb
pop
push
lcall
sbbl
testl
js
pop
pop
subb
mov
or
xor
xor
aaa
scas
or
adc
addr16
xchg
sbb
xor
leave
test
or
dec
in
shrb
mov
sbb
add
xor
xor
add
adc
negl
jmp
cmp
inc
push
mov
mov
sarb
test
add
xchg
lret
jmp
out
jne
sub
insb
xor
mov
aas
xchg
jbe
int
out
xchg
addr16
pop
dec
popa
insb
data16
push
pop
xchg
scas
dec
dec
cmp
xor
lds
push
xchg
xor
add
mov
arpl
mov
insb
push
push
xor
imul
jbe
movl
pop
insl
sbb
mov
cmp
push
loopne
das
push
inc
orl
add
push
push
movl
jne
int
out
daa
iret
dec
inc
adc
imul
pop
mov
bound
sets
jne
arpl
inc
dec
and
add
clc
nop
xchg
pop
add
daa
xlat
inc
loopne
inc
nop
rorb
dec
dec
push
pop
xor
cmp
test
shlb
xor
sbb
movsb
pop
xor
and
xor
inc
xor
jb
push
xor
xchg
mov
mov
xchg
leave
xor
cwtl
push
inc
add
mov
dec
dec
test
sbb
mov
cmp
imul
sbb
mov
push
je
push
pop
insb
pop
je
rorb
add
inc
xchg
inc
andb
xor
xchg
cmp
es
jae
bound
xchg
xor
addr16
loopne
stos
rol
sbb
fnstsw
push
push
cmp
adcb
mov
adc
cmpsb
cmp
xor
xlat
mov
outsl
sbb
orl
and
xchg
xor
stos
sub
das
push
inc
and
and
rclb
dec
push
xor
push
pop
and
sbb
sbb
push
inc
cmp
add
rclb
and
inc
xor
cwtl
pusha
rorb
gs
fsubrs
mov
lods
loopne
push
sbb
dec
aas
and
insb
je
loopne
mov
sete
out
insl
ret
sbb
dec
mov
es
jne
xor
jmp
aaa
pop
and
imul
andb
jb
push
cmp
xchg
or
dec
inc
aaa
jg
xchg
add
loope
pop
cmp
sbb
mov
jg
jg
mov
sbb
rcl
sub
sbb
jnp
lahf
xor
cmp
adc
cmp
lret
aas
xor
xor
scas
dec
lods
test
test
or
and
in
dec
lods
and
testb
ss
dec
xchg
inc
ss
pop
cmp
subb
push
leave
rorb
lahf
cmp
xlat
nop
aaa
xchg
sbb
dec
fists
and
les
enter
jne
test
push
cmp
das
ret
inc
adc
pop
push
or
cmpsb
mov
pop
mov
or
push
test
aaa
cmp
mov
orl
inc
in
adc
test
sbb
and
adc
push
sbb
subb
sbb
push
test
imul
and
loope
or
sbb
je
mov
push
xchg
pop
sbb
aaa
fiadds
xor
inc
dec
loopne
das
adc
fcoms
fiadds
xchg
sbb
pop
popf
addr16
push
sub
push
outsl
push
jns
xor
clc
sub
inc
out
pushf
mov
insl
pop
inc
daa
inc
sub
lods
pop
or
pusha
aas
adc
dec
sub
sbb
xor
das
pop
sub
sbbb
pop
or
inc
mov
xor
mov
popa
outsb
pop
mov
jo
xlat
or
dec
mov
xchg
cmp
push
dec
push
push
leave
sub
inc
push
inc
push
mov
or
sub
mov
aas
or
inc
je
outsl
xor
stos
mov
out
sub
push
aas
sub
push
dec
pusha
push
dec
sub
movsl
mov
popa
xor
sarl
inc
dec
dec
dec
jbe
incl
outsb
xor
mov
xchg
iret
inc
lret
cmp
sti
insl
popa
imul
xchg
lock
aaa
dec
dec
dec
jnp
or
pop
lock
xor
xor
inc
ja
push
dec
inc
sub
mov
xlat
push
adc
xchg
lods
aaa
sub
push
sub
and
cmp
xor
fimuls
mov
mov
mov
rcr
sub
lock
mov
cmpsl
sub
adc
xor
aaa
push
nop
mov
xor
pop
dec
and
enter
js
cmpsl
xor
and
xor
imul
push
aaa
add
nop
or
aaa
fbstp
xor
insl
dec
xor
xchg
pusha
out
add
gs
fbstp
mov
push
mov
xor
xor
inc
mov
imul
in
xor
jae
jae
ss
leave
nop
sbb
bound
add
aaa
int
sbb
cmp
cpuid
test
nopl
ret
xorl
iret
push
push
pop
in
mov
ret
xchg
pop
mov
dec
xlat
xor
test
sub
sub
adc
mov
daa
aaa
add
push
jg
sub
imul
mov
sbb
xor
fsubl
dec
push
inc
pop
rolb
inc
lret
add
aam
mov
xlat
push
xlat
xlat
inc
xor
dec
adc
adc
vmptrld
scas
subb
shlb
mov
les
pop
pop
shlb
imul
xchg
xor
popa
jo
out
push
cmpsl
je
sub
mov
aaa
xor
shrl
pop
pop
add
mov
scas
inc
sbb
push
jg
xlat
gs
das
sub
push
test
or
sub
arpl
fimull
add
cmp
and
push
aad
outsb
mov
push
xchg
and
test
pop
pop
or
popa
pop
loopne
adc
test
rcrb
divb
pop
data16
xchg
iret
pop
test
xchg
push
imul
cmp
testl
imul
test
xor
inc
aaa
pop
sbb
test
push
inc
bound
mov
pop
adc
addr16
sub
jmp
movsb
insl
xchg
ja
lahf
adc
mov
adc
jno
sub
pop
test
push
aas
cmp
ja
in
cltd
cmp
pop
int
enter
out
xor
mov
xor
aaa
push
pop
sub
aaa
sbb
xor
xor
adc
cmp
movsl
xor
nop
xor
rdmsr
sub
dec
xor
xor
and
enter
ss
les
mov
je
jb
sub
sbb
inc
inc
mov
call
rcrb
mov
out
sub
daa
adc
test
aas
or
bound
inc
mov
jle
lds
fildll
lret
aas
mov
or
jg
mov
imul
mov
cmpsl
ja
jns
fsubrs
in
inc
jle
sub
and
push
mov
es
mov
and
in
sahf
or
dec
push
imul
pop
jnp
sub
lahf
mov
jbe
dec
cmp
fsubr
mov
pop
cmpb
imul
and
mov
mov
cmpsl
sub
je
insb
adc
dec
push
xor
inc
pop
adc
fsubrs
jne
insb
cwtl
xor
inc
mov
pop
push
mov
pop
lds
dec
das
sub
negl
fbld
push
mov
or
inc
mov
mov
inc
pop
xor
mov
xor
add
in
xor
sbbl
jo
push
push
cld
xchg
xor
pop
sub
enter
mov
and
or
or
sbbl
popa
leave
mov
mov
sub
sub
add
imul
sbb
es
jbe
rol
adc
dec
test
lret
add
xor
mov
xor
addb
enter
test
add
loopne
mov
orl
jmp
addr16
in
xchg
movb
push
pop
fldt
arpl
add
push
adc
lcall
cmp
jg
cs
cmp
pop
lret
inc
add
out
sub
and
or
arpl
dec
addr16
cld
das
outsb
adc
cmp
jne
cmpb
adcl
inc
pusha
dec
bound
mov
lcall
mov
add
jnp
and
mov
mov
lock
sarl
jmp
jl
xchg
cmp
pop
ret
adc
mov
or
loope
lcall
aam
int3
pop
push
aas
fmuls
adc
pop
jecxz
pop
sbb
fsubrs
or
mov
mov
push
rorb
dec
adc
lahf
insl
or
pop
or
mov
adc
push
or
and
aam
mov
rcrl
and
in
fimull
fs
push
or
jno
jg
xorb
mov
loop
in
jp
ret
xchg
or
jne
outsl
adc
adc
push
push
andb
mov
or
mov
std
push
shlb
shlb
inc
mov
inc
call
pusha
and
xchg
loopne
push
mov
xchg
clc
push
std
pop
adc
repz
mov
or
ret
jb
inc
xchg
sbb
push
xchg
fs
adc
repz
xor
sub
fimull
je
std
or
inc
aad
add
scas
xor
pop
js
add
add
xchg
mov
sbb
idivb
and
xchg
lret
aam
lret
icebp
clc
ficompl
cmp
jp
stos
xor
addb
adc
push
test
das
sub
mov
xor
xor
inc
or
adc
mov
lods
sbb
dec
push
pop
push
das
mov
cmpsl
xor
jb
fcom
ret
fbstp
pop
mov
dec
xor
arpl
adc
aaa
mov
lods
mov
mov
mov
imul
pop
test
in
mov
pop
mov
inc
lock
jle
dec
shll
dec
ljmp
xchg
enter
mov
mov
adc
cmp
xlat
dec
jle
daa
into
xlat
or
or
in
cmpsl
call
data16
or
inc
pusha
push
sub
sbb
les
add
jle
pop
mov
adc
clc
pop
or
pop
inc
mov
adc
dec
or
lock
fldcw
inc
mov
bound
inc
jne
inc
push
dec
stos
sti
pushf
xchg
jo
push
call
push
insb
jle
cmpsb
je
rolb
mov
jae
sub
insb
dec
notb
inc
adc
or
call
fwait
mov
in
or
add
sub
in
imul
into
insl
mov
es
sub
sbb
inc
jo
xchg
sbb
xchg
sub
xor
sub
push
rorb
frstor
add
addr16
mov
dec
int
or
lcall
std
inc
repz
cld
nop
mov
push
rorb
lcall
js
pop
test
in
out
cld
fdivrl
mov
sbb
jno
adc
loopne
mov
lods
fisttpll
xchg
aam
mov
stos
pop
push
xchg
add
fcmovnu
js
cwtl
xchg
nop
push
push
insb
sbb
jno
and
pop
scas
shlb
mov
xor
jne
or
pop
and
cltd
jmp
lods
mov
lock
imul
mov
loop
inc
popa
mov
push
gs
popf
aas
ljmp
inc
xchg
test
aas
inc
inc
loop
lock
add
ret
dec
add
fdivrs
sub
sub
inc
mov
and
and
data16
insb
mov
mov
test
mov
mov
ja
loope
mov
or
inc
add
dec
mov
addb
xchg
aam
fistpl
sub
push
test
cmpsb
or
or
xor
imul
adc
jecxz
jae
cwtl
ds
jl
in
mov
mov
lock
das
hlt
mov
rorb
lea
and
jno
jg
loop
les
loopne
add
in
push
jnp
dec
pop
dec
dec
push
push
inc
sti
nop
sarl
push
inc
inc
das
dec
push
inc
push
dec
popl
push
addr16
cmp
jecxz
das
jg
dec
into
into
paddq
pushf
loope
clc
fdivrl
in
in
xchg
and
in
in
in
add
in
in
mov
daa
cmp
inc
pop
nop
imul
dec
inc
push
inc
push
push
das
pop
cmp
push
dec
pop
push
inc
pop
pop
repnz
push
inc
push
dec
inc
push
dec
dec
push
xchg
mov
es
add
nop
outsb
add
add
or
cmp
push
mov
loope
popa
into
fsts
stos
xor
adc
loop
in
adc
and
sub
shl
nop
lea
mov
add
mov
inc
add
adcl
inc
jecxz
daa
cmp
mov
lock
pop
mov
lock
dec
loopne
adc
sub
loopne
cmp
nop
cmp
jae
push
mov
rcl
or
pushf
mov
push
inc
inc
xor
add
movsb
out
jne
aas
push
jecxz
sub
inc
sub
mov
jge
inc
push
fldl
dec
mov
std
pop
add
lcall
or
sbbl
fsubl
pop
dec
inc
pusha
cmp
in
xchg
stos
out
sub
jb
in
rcrb
and
push
add
xchg
inc
pusha
push
adc
mov
add
push
fadds
cmp
icebp
add
push
es
dec
out
push
addb
mov
cmpsb
gs
pop
xor
in
idivb
jo
inc
add
stc
dec
mov
inc
and
adc
xchg
add
cs
inc
push
out
mov
addb
test
pusha
cltd
mov
mov
pop
push
add
add
adc
mov
das
std
mov
jmp
xor
or
vpshuflw
aad
rorl
adc
push
mov
je
adc
xor
dec
clc
mov
das
lock
fisttpl
add
divl
xchg
dec
aad
fwait
lret
jle
out
or
sbb
nop
in
or
xor
repnz
dec
xlat
pop
loop
xlat
ljmp
dec
mov
jp
jbe
sub
fs
mov
jns
clc
jne
adc
fisubrl
mov
pop
add
mov
outsb
sub
iret
js
dec
add
scas
loop
mov
mov
cmp
nop
cwtl
or
mov
imul
subb
fdivrs
jns
pusha
sbb
sub
insb
jo
add
popa
sbb
pop
mov
shlb
cs
imul
sub
int3
push
mov
ret
adc
rorb
movsl
xchg
inc
ficoms
or
enter
sarl
jmp
dec
test
repz
xchg
movb
pop
push
push
sub
add
jp
fucomip
or
sbb
mov
xor
mov
sbb
outsb
aaa
andb
inc
cmp
pop
movsb
mov
js
inc
jmp
jmp
add
cmp
and
xchg
es
add
xchg
data16
push
push
xchg
or
and
dec
mov
push
push
dec
and
je
mov
and
mov
mov
out
add
je
xchg
testl
fstp
push
pop
adc
lahf
mov
push
jg
pop
ja
push
dec
xor
aaa
jb
mov
sub
mov
push
dec
push
sbb
lock
pop
jne
xor
xchg
das
inc
pop
fisubl
xchg
subl
mov
jp
outsb
or
aam
add
add
sbb
fisttps
dec
push
sbb
cmp
leave
leave
dec
sti
mov
or
leave
leave
leave
leave
adc
and
mov
lret
sub
inc
sub
push
pop
xor
fidivrl
or
je
lcall
lcall
xor
gs
mov
shll
ss
fsubrs
mov
cld
mov
add
and
popf
cwtl
pop
mov
mov
push
roll
mov
push
hlt
mov
cmp
repz
xchg
addl
shrb
sbb
push
add
push
xlat
mov
and
add
les
ds
pop
shr
sub
imul
add
lret
fs
movsb
sahf
in
push
in
inc
in
lods
sub
mov
and
shrb
cmp
bound
add
jge
int3
movsb
gs
pop
icebp
push
adc
cmpsb
jnp
adc
xchg
jno
lret
sbb
fmull
mov
pop
jbe
sbb
pusha
push
pop
inc
dec
ret
ret
cltd
mov
js
jecxz
add
scas
ret
loope
aaa
sbb
popa
or
pop
sub
shrb
sub
sub
lock
repnz
loope
mov
cmp
bound
dec
inc
mov
pop
pop
jb
lcall
push
add
and
ljmp
in
push
sbb
aam
out
cmpsb
xchg
mov
mov
popl
and
adc
icebp
movsl
test
hlt
add
mov
and
lea
jo
loopne
inc
mov
loopne,pn
sbb
mov
mov
ffree
int3
jno
leave
push
aaa
inc
xchg
xchg
aam
mov
push
lods
sub
and
fistl
andb
push
or
mov
mov
dec
push
outsl
pop
jno
dec
shrl
leave
ds
ret
jmp
lahf
lret
push
sub
sub
and
insb
aas
and
mov
ror
sti
int3
cmc
in
jle
and
or
dec
push
pushf
in
es
sub
pop
int
in
dec
cmp
into
add
data16
pop
xor
cmpsb
cmp
sbb
lock
or
pop
pushl
lea
sub
icebp
mov
or
icebp
lock
adc
andl
scas
xlat
imul
adc
and
add
jae
pop
cmp
je
jb
movl
sbb
gs
movsl
add
lret
movsb
cmp
popf
daa
call
push
rorb
inc
pusha
bound
test
xor
fcomps
add
push
and
mov
push
push
inc
aaa
mov
push
and
mov
xchg
shlb
sub
rcrl
pop
pop
and
fists
sub
shlb
mov
movsb
data16
movb
push
cmp
stos
push
nop
push
test
mov
sub
ja
or
in
push
cmp
mov
cmp
and
inc
sarb
stos
pop
xchg
lock
inc
clc
mov
lret
sub
cmp
clc
xor
inc
movsl
imul
and
rcr
dec
adc
jno
push
out
adc
mov
daa
lods
xchg
or
loopne
ljmp
xchg
sbb
jmp
jo
in
outsl
popa
lea
rolb
in
inc
cmpsb
add
push
and
pop
push
clc
and
je
insl
loope
pop
xchg
lock
shlb
jecxz
xor
push
jnp
mov
inc
test
or
and
adc
sbbl
pusha
push
ljmp
push
pop
adc
dec
call
mov
movsl
cwtl
xor
push
lar
or
cli
inc
mov
cmp
test
cmpsl
mov
call
jmp
push
hlt
cli
in
pop
cmpsb
mov
xorl
arpl
jge
lea
jecxz
cli
addr16
cli
sub
sbb
push
ret
fisubs
rol
subb
or
nop
add
inc
addr16
mov
lret
add
jge
decl
jle
jne
outsl
adc
or
mov
lea
adc
push
lods
push
and
cmp
shrl
sti
pushl
in
xor
loopne
xchg
add
xor
and
xor
adc
lock
shll
mov
jbe
std
test
sbb
mulb
fdivr
fwait
ret
mov
xchg
or
pop
jnp
idivb
sub
je
call
loopne
or
add
adc
inc
add
xchg
xor
and
fstl
inc
mov
sbb
pop
in
psrlw
xchg
xor
insl
sbb
shr
aad
popf
jo
dec
mov
fcoms
sbb
and
cld
dec
xchg
xchg
in
std
das
inc
pusha
addb
daa
or
fstpt
movsb
test
outsl
fcoml
shlb
mov
push
test
cmp
lahf
xlat
out
or
outsl
shll
inc
fstl
aam
sub
icebp
out
mov
jae
sub
push
into
aas
adc
jmp
inc
mov
jmp
sbb
push
lods
sbb
cmpsb
sub
repz
fcomps
in
pop
inc
pop
movsl
sub
pop
adc
sub
dec
or
loopne
cs
cmpsl
ss
scas
incl
and
scas
sarl
push
arpl
adc
inc
and
movsb
inc
hlt
pop
mov
js
in
addr16
pop
pop
movsl
adc
sbb
ja
gs
or
dec
mov
nop
or
adc
sahf
xor
or
sti
push
loope
jnp
mov
lods
push
or
jae
inc
sar
sub
add
jbe
in
cmp
popf
jno
mov
dec
push
add
push
push
and
xor
pop
push
pusha
push
dec
pop
shll
ret
lret
push
lods
shl
icebp
xor
dec
das
pop
sub
call
test
add
cmp
nop
xchg
sahf
shrb
xchg
xor
inc
scas
add
pusha
pop
xchg
out
outsb
in
dec
ret
or
pop
dec
push
jo
add
xchg
mov
aas
rclb
dec
mov
leave
xor
xor
lods
rcrl
sub
xor
add
add
test
mov
daa
pop
pop
sbb
push
mov
jg
movb
rol
es
stc
ret
push
jle
dec
orl
dec
test
xlat
mov
leave
dec
cmp
sub
stos
xor
inc
and
sbb
pop
ud0
add
les
mov
xor
es
das
enter
pop
xor
add
or
mov
jg
gs
pop
cli
movsl
push
sbb
fbld
jno
fucomi
pop
fnsave
mov
rcr
cwtl
push
ja
xor
fnstenv
shr
adc
dec
xchg
adcb
mov
push
arpl
sub
mov
inc
popa
pop
movsb
stos
add
clc
add
inc
mov
sbb
inc
or
insl
in
bound
push
and
push
xchg
andl
xor
mov
out
adc
or
or
pop
test
pop
fwait
mov
sub
and
enter
adc
inc
pop
icebp
add
dec
and
lds
repz
sbb
lock
lcall
pop
aaa
shl
pop
movsl
xchg
cli
das
inc
fcoml
loop,pn
leave
in
fimuls
ret
push
repz
mov
rol
sbb
mov
jno
add
xor
pusha
xchg
push
gs
dec
adc
add
cmc
jno
sub
pop
repz
mov
jecxz
inc
bnd
xchg
into
mov
adc
das
and
jne
jnp
call
sub
push
sbbl
xchg
dec
and
clc
loope
push
push
insb
mov
pop
pusha
sbb
inc
test
xchg
push
add
adc
inc
inc
pop
and
and
lods
pop
adc
push
aad
dec
mov
push
fisubs
adc
mov
clc
dec
add
or
pop
cmpl
jnp
push
and
dec
out
inc
dec
pop
adc
insl
push
inc
dec
mov
pop
sbb
nop
xor
dec
rcrl
mov
sbb
fsubr
push
mov
stos
loop
pop
lcall
cmpsb
push
jmp
rorl
pop
or
add
push
lret
adc
dec
enter
inc
add
cwtl
dec
sub
imul
and
push
sub
jge
cli
cmp
add
mov
repz
fwait
mov
rcll
cld
mov
add
mov
inc
pop
pop
fcmovb
lds
outsw
in
mov
mov
and
add
fisubrs
sub
decb
xor
jg
mov
adc
or
sub
sbb
call
and
loopne
push
mov
rolb
decl
shrb
jbe
or
outsl
sbb
sahf
in
mov
aas
inc
and
in
push
out
and
push
and
dec
cmp
push
fldl
pop
lea
shl
movsl
test
mov
ror
jo
and
add
xor
push
sbb
push
les
push
xchg
fdivrs
arpl
fsubs
lret
divb
ss
push
sub
shrb
sub
rol
int3
movsl
mov
mov
mov
orl
dec
lods
push
xchg
add
seto
mov
sub
int
addr16
dec
dec
in
dec
add
daa
pop
out
out
mov
call
push
adc
xchg
add
push
or
adc
sbb
or
or
push
xchg
push
pop
push
or
sbb
adc
mov
les
add
icebp
shrb
mov
jae
enter
mov
popa
leave
and
and
add
rorb
shlb
push
stos
xor
xchg
or
loope
insl
add
add
push
push
subl
cmp
ret
sbb
dec
mov
arpl
cmp
into
inc
jmp
sub
test
or
and
xor
sub
popa
int3
nop
fldl
add
sti
mov
sub
data16
or
pop
mov
lahf
and
mov
movd
insl
xchg
push
shrb
or
leave
insl
xchg
es
das
or
pop
cmp
out
movsb
add
adc
or
inc
cmp
pushf
add
pusha
movsb
sbb
shrb
or
pop
pop
sub
inc
into
adc
sub
xor
mov
incl
pop
addr16
imul
jno
jae
jne
ja
xchg
xchg
js
jp
dec
sub
test
insb
add
out
adc
sbb
fidivs
xor
ja
sbb
adc
xor
pop
push
callw
lahf
in
cmpsl
cs
pusha
test
scas
aam
and
jg
dec
fcomi
aaa
adc
es
hlt
adc
icebp
mov
out
push
cs
insb
cmp
loopne
in
testl
xor
sub
mov
sub
adc
push
adc
mov
mov
push
adc
out
in
push
adc
jg
sbb
cli
ficomps
pop
jle
push
push
mov
push
scas
inc
mov
pop
sbb
lahf
lods
push
lods
orl
inc
pusha
or
jbe
or
fcomps
mov
xchg
ds
sub
mov
push
adc
notb
or
dec
sarb
sub
push
leave
es
mov
adc
sub
push
je
or
xchg
pop
std
sbb
inc
or
xchg
hlt
cmovle
and
xor
mov
adc
mov
inc
push
inc
mov
cltd
jae
adc
shrl
pop
sbb
pop
cmp
adc
xorb
jmp
aam
shll
les
daa
or
xor
mov
andl
popa
dec
adc
sbb
push
adc
pop
test
adc
and
mov
pop
or
lods
inc
and
push
pusha
test
daa
scas
aaa
movsb
mov
mov
dec
adc
aaa
and
adc
or
stc
jmp
rcrb
mov
sbb
pop
dec
clc
or
imul
subl
xor
sarl
or
mov
ret
outsl
fstps
ficoms
popf
rcl
dec
adc
aas
and
adc
pcmpeqw
lret
xchg
pop
out
adc
sub
or
push
je
or
rol
ret
jo
xor
xchg
lods
sbb
push
cmp
lret
cs
in
leave
mov
lahf
push
inc
add
or
xchg
mov
aam
and
test
add
ja
ret
iret
dec
dec
push
xor
nop
or
cmp
ljmp
lret
dec
ljmp
in
mov
roll
sti
out
shrb
lock
push
dec
ret
aad
mov
jbe
imul
gs
je
inc
mov
cmp
adc
popa
xor
addl
mov
std
jo
push
mov
movsb
notb
out
or
cmp
adc
pop
inc
cmp
jbe
push
mov
out
xchg
js
movsb
sbb
add
imul
leave
push
add
pop
loop
mov
call
xor
popl
pop
and
add
and
xor
shr
es
xchg
push
push
dec
std
or
hlt
btl
add
push
aam
imul
push
xlat
movsb
ret
cwtl
and
xchg
add
pop
add
lea
ret
addr16
push
mov
mov
cmp
push
lods
dec
mov
add
sbb
sub
iret
adc
shlb
jmp
add
nopl
ja
sbb
cmpsl
dec
adc
mov
jg
sbb
loopne
pop
sbb
sbb
int3
pop
mov
andl
aad
pop
cmpb
or
sbb
ja
out
cmp
in
scas
pop
arpl
xchg
xor
pop
inc
push
sahf
or
dec
andl
testb
inc
add
cli
lods
xchg
cld
fnclex
std
xor
adc
push
pop
xor
sahf
adc
test
sbb
cmpsl
test
cmp
call
add
and
lods
pushf
cmpsb
add
fmuls
fs
adc
fwait
cld
ds
inc
push
adc
les
and
and
movl
cmp
sub
push
pop
mov
xchg
aaa
repnz
repnz
fs
and
and
cmpsl
jge
sbb
lock
fs
ret
jl
es
das
push
inc
and
adc
adc
lods
push
adc
popa
jo
mov
shll
mov
mov
in
into
push
push
add
sbb
or
adc
xchg
push
pop
sub
adc
sbb
xor
add
aad
das
adc
jl
mov
cmp
adc
mov
mov
add
jle
adc
dec
pop
fcomps
les
fimull
shrl
lahf
mov
pop
push
dec
xor
decl
out
movsb
sub
mov
or
dec
repz
loopne
cmp
xor
sbb
loopne
pop
into
lds
andb
nop
pop
cmpb
jne
subb
dec
test
dec
jg
push
rcll
arpl
filds
and
mov
add
and
addl
and
mov
mov
pop
or
lods
fs
mov
scas
or
push
clc
mov
xor
outsb
sarl
shrb
mov
scas
dec
cmp
out
fnstcw
xorb
ljmp
and
mov
sbb
pop
mov
and
adc
push
push
ret
add
xor
jno
das
sbb
inc
mov
add
mov
pop
jne
ret
add
lods
cmpl
dec
lods
xchg
jecxz
adc
mov
dec
mov
push
and
das
xor
fstl
adc
stos
sub
mov
cmp
push
call
mov
sub
mov
push
outsb
dec
pop
xchg
inc
jmp
add
sub
and
xchg
push
mov
dec
and
ret
sti
das
lock
mov
scas
or
add
mov
insb
leave
lcall
dec
imull
and
cwtl
outsb
imul
dec
cs
push
cmp
sbb
xlat
pusha
jbe
jne
xchg
dec
rorl
gs
hlt
imul
sahf
leave
les
in
lahf
pop
and
jne
stos
xor
insl
clc
movsb
xchg
lret
lods
and
inc
and
pusha
xchg
mov
outsb
shll
push
daa
pushl
push
popa
test
xor
adc
in
cmp
aam
rcrb
mov
ja
movb
sbb
enter
jne
test
rclb
movsl
inc
clc
adc
fdivr
cmp
fwait
in
hlt
adc
pop
test
push
mov
push
addb
cmpsl
shrb
mov
adcb
dec
mov
cmp
sbb
loopne
nop
or
adc
leave
pop
and
mov
jns
adc
xchg
sbb
ffree
adc
clc
sbb
xorl
xorl
add
and
fs
pop
bound
jnp
sub
loopne
sub
sti
mov
pop
cmc
mov
shl
dec
sub
inc
clc
mov
add
adc
fs
pusha
or
fisubrs
sbb
adc
sbb
loope
or
push
inc
push
add
incl
pop
push
dec
push
inc
pop
or
dec
mov
ds
inc
inc
push
incl
inc
nop
inc
fistpll
daa
call
push
mov
movsb
jle
inc
xchg
clc
roll
and
jnp
cmp
jge
push
mov
xor
ficoms
dec
ss
push
dec
pop
or
jne
aaa
pop
pop
aam
sbb
inc
outsl
jg
pop
or
outsb
testl
movsl
loopne
pusha
push
cmp
dec
cltd
sbb
js
fcompl
loopne
xchg
loopne
and
fcoms
loope
aam
xchg
add
leave
push
movsb
pop
sbbl
rcrb
aam
scas
xor
mov
les
aaa
push
enter
mov
dec
fiaddl
addl
movsl
int3
pusha
pop
insl
movsb
mov
and
or
sub
mov
sub
push
or
xchg
test
es
js
rolb
xor
test
xchg
sub
add
adc
cmp
ret
mov
push
lea
pop
aad
dec
xor
dec
ret
lock
adc
stos
test
andb
xor
add
loope
push
ljmp
sub
inc
add
leave
sbb
adc
rorb
jnp
adcb
iret
ja
sub
imul
xor
pop
bound
jbe
bound
fmull
dec
xor
jae
jae
mov
mov
push
mov
push
xchg
filds
cmp
cmp
jne
enter
cli
sub
out
inc
and
popa
js
xor
insl
add
cmpsb
add
add
aam
fcomps
ret
imul
pusha
sub
in
cmp
push
push
add
cltd
addb
sbb
mov
sbb
xor
xchg
jle
inc
sub
lock
add
and
sbb
pushl
call
push
adc
sti
pop
mov
mov
rorb
lret
nop
cmpl
shll
xor
sbb
movsb
and
and
sub
pop
repnz
sti
shl
inc
pop
sub
push
inc
push
push
dec
dec
dec
je
mov
inc
dec
dec
dec
ficoml
xchg
mov
pop
aaa
or
aad
or
add
sbb
mov
inc
sub
mov
ja
sub
div
mov
lahf
push
adc
fsubrl
inc
pop
cmp
imul
jbe
xchg
cmp
add
test
xchg
and
xchg
rolb
dec
mov
enter
movb
jo
push
pop
push
cli
and
adc
xor
negl
lock
addl
pop
add
mov
cmp
push
bound
aad
push
mov
mov
mov
push
lret
inc
push
popl
jo
dec
jmp
lock
popa
and
pop
push
push
dec
dec
add
mov
nop
adcl
addr16
sub
sbb
cmpsl
inc
cmp
push
dec
shlb
ret
jge
mov
imul
mov
jne
fistpll
dec
mov
es
orl
mov
movsb
andl
shlb
inc
ja,pn
and
test
jmp
push
aad
mov
into
inc
lds
into
mov
outsl
add
or
jmp
loope
or
cmpl
sbb
pusha
pusha
adc
xchg
fidivl
mov
or
add
ficomps
inc
cmp
cmpsl
push
and
cmpsl
pop
mov
add
and
lahf
pop
jmp
sar
test
sub
xor
cwtl
inc
mov
mov
xchg
jo
xor
xor
dec
test
mov
adc
and
and
add
inc
into
dec
or
loop
loopne
clc
xchg
push
xor
mov
xor
addb
inc
dec
subl
xchg
iret
into
pop
pop
sbb
push
mov
cmp
jmp
adc
movsb
adc
lods
inc
pop
inc
inc
je
mull
adc
adc
push
xchg
shlb
fiaddl
popa
inc
sbb
sbb
test
mov
dec
push
das
hlt
mov
cs
or
push
mov
add
add
aaa
adc
mov
pop
push
and
scas
push
pusha
xor
fs
bswap
insb
addb
mov
xor
movsb
or
jbe
nop
clc
sahf
add
pop
dec
xor
cmpsl
in
inc
xor
orb
sbb
shll
push
js
sbb
ficomps
pop
xor
add
sbb
add
xor
gs
adc
add
ss
jnp
cmpl
and
aaa
lods
cmpsb
je
scas
dec
popa
push
sub
pop
pop
lods
aaa
or
mov
lea
pop
movsl
ficompl
orl
xchg
addl
cmp
scas
fwait
xchg
inc
inc
dec
fisubl
sub
jecxz
pop
in
loopne
fistl
adc
call
pop
imul
adc
cs
mov
add
sbb
test
pushf
push
es
ljmp
adc
cltd
and
sub
xchg
add
adc
fwait
adc
push
imul
dec
jne
xor
aam
and
push
cmpb
sub
pop
inc
lds
sbb
cs
movsb
and
ret
daa
cs
jl
enter
cld
pop
cld
mov
sub
xchg
insb
mov
jo
push
fdivs
and
sbb
adc
mov
add
sub
pop
pop
icebp
mov
mov
cmp
pop
xchg
xchg
test
xor
lcall
out
gs
xchg
and
xor
add
addr16
inc
xorb
enter
pop
jbe
loopne
sbb
out
mov
ds
push
arpl
out
sbb
xor
xlat
rorl
and
sbb
adc
mov
xor
das
dec
icebp
pop
cmp
inc
jecxz
inc
sub
inc
add
push
sbb
push
sbb
rcl
sub
adc
repz
jbe
push
adc
xor
xlat
nop
cmp
cs
aaa
cmp
mov
inc
mov
sub
mov
xchg
shlb
cmp
cmp
mov
cmp
nop
das
cmp
test
or
pop
adc
pop
out
pusha
mov
cmp
push
pop
cmp
leave
lock
sub
dec
pusha
lea
mov
je
sub
subb
adc
lret
imul
dec
sbbb
jne
sbb
ss
add
jbe
lods
clc
popl
pop
clc
inc
cli
jne
std
dec
inc
nop
mov
inc
push
adc
aad
and
cmp
movsl
in
cmp
dec
mov
mov
and
jl
inc
push
in
pusha
ret
adc
aam
sub
leave
pop
mov
adc
cmp
push
js
rclb
enter
dec
imul
outsl
jb
lods
rcll
dec
pop
cmp
dec
adc
adc
dec
inc
pop
sub
or
mov
arpl
gs
push
sbb
xor
mov
loope
xchg
or
add
in
fs
in
xchg
adc
xor
xor
push
aas
jno
add
add
add
sub
cmpsl
mov
add
mov
mov
popl
sbb
jmpw
lcall
jne
hlt
add
hlt
in
and
adc
and
les
repnz
ret
repnz
jecxz
add
push
mov
orl
in
adc
enter
fbld
lock
in
adc
sub
mov
sub
inc
cmp
xlat
xor
mov
stos
shll
push
xor
xor
xchg
and
shrl
add
push
dec
into
xlat
add
sub
dec
aas
nop
sbb
shrl
cmp
or
testl
inc
sbb
cmp
xor
mov
mov
push
xorb
push
sbb
pop
or
lock
outsb
jg
daa
pop
inc
mov
inc
or
push
or
mov
cmpl
nop
divl
adc
mov
out
inc
sbb
inc
fwait
xchg
test
push
cmpb
mov
add
sub
inc
stos
aas
jg
sub
pop
sub
adc
femms
push
xchg
xchg
popa
cmp
bound
aas
pop
sub
xchg
add
ds
inc
pop
adc
sahf
and
pop
pop
rolb
dec
pop
nop
out
sub
addb
clc
push
es
sub
or
test
jmp
enter
sbb
and
rorb
roll
imul
das
cmp
mov
pop
jle
push
xchg
dec
dec
sub
push
push
xor
nop
ss
dec
arpl
jno
pop
cmp
sbb
pusha
scas
mov
mov
dec
mov
adc
push
sbb
scas
xchg
xor
rcll
subb
push
push
push
imul
incl
jp
or
fdivs
mov
mov
jo
xor
andb
mov
sbb
addl
add
push
push
adc
add
push
dec
test
or
dec
in
xchg
scas
push
dec
pop
cmpl
mov
push
lret
xchg
arpl
xor
std
or
mov
ss
rol
sub
push
mov
xchg
push
and
imul
add
or
sbb
sub
or
push
adc
inc
or
imul
fmuls
sbb
push
andl
inc
pop
add
add
lds
jae
adc
add
or
gs
xor
frstor
and
push
or
test
dec
jb
mov
fildl
dec
pusha
lds
bound
incb
imul
adcb
pop
add
push
sbb
shl
or
push
mov
adcb
and
mov
daa
dec
pop
pop
pop
cmp
pop
inc
add
pop
add
or
adc
rcrb
push
or
xchg
adc
fisubs
mov
dec
aam
ret
hlt
cld
mov
cmc
adc
inc
sub
sbb
add
popa
mov
adc
movaps
mov
adc
lcall
je
inc
or
pop
das
andb
shr
js
es
xchg
fcmovne
inc
xlat
or
adc
mov
or
das
aaa
push
adcb
sub
inc
xchg
or
add
pusha
or
cmpsb
mov
push
adc
or
loopne
mov
inc
les
mov
pop
popl
adc
sub
cmp
add
add
inc
dec
jae
enter
je
push
test
push
pop
sbb
insl
push
adc
sbb
imul
jl
sbb
mov
daa
mov
inc
add
rorb
ret
test
pop
ljmp
addr16
or
xor
movsb
outsb
dec
dec
inc
pushf
jno
movsl
scas
dec
dec
aaa
mov
sbbb
xchg
add
add
fnstsw
dec
sbb
pop
adc
outsl
mov
sub
jo
add
lock
jmp
pusha
filds
cmp
out
fs
xor
pusha
pop
add
inc
imul
dec
fdivrs
pop
xor
test
push
sbb
mov
xchg
or
mov
dec
outsl
in
and
adc
loope
js
push
jge
shll
cmp
mov
cltd
pop
mov
adc
push
add
add
nop
test
xchg
xorb
or
inc
aad
add
dec
cmp
and
pop
or
movsb
mov
pop
xor
adc
or
and
les
mov
ret
adc
adc
int3
dec
jae
cmp
adc
scas
mov
xor
rorl
sbb
and
dec
shll
xor
xor
shll
xor
dec
dec
shll
push
push
adc
xor
pop
pop
pop
pop
adc
mov
cmpsl
mov
or
adc
xlat
cmpsl
add
fistl
sbb
mov
mov
fs
or
and
int
das
push
dec
xor
or
push
insl
cmp
cmp
or
faddl
addr16
rolb
or
xor
movsl
sbb
cltd
test
jno
or
or
imul
cmpb
mov
or
daa
in
movsb
in
outsl
ret
cmpb
loopne
xor
sbb
or
mov
pushl
test
add
or
setae
sub
cwtl
popf
pop
fs
push
dec
roll
insb
sub
push
movsl
aam
or
mov
sub
add
fsubs
push
inc
nop
ja
pop
and
clc
jno
xchg
push
mov
push
sub
pop
pop
pop
sub
movsb
and
xchg
pop
jo
ds
mov
int3
pop
daa
add
pop
dec
fwait
xor
mov
loope
aas
les
cmpsl
xor
in
inc
je
inc
rol
aaa
or
dec
cmp
in
in
sti
inc
mov
faddp
mov
fwait
jmp
jbe
cmp
mov
mov
lds
and
or
mov
loop,pn
stc
fidivs
daa
sbbl
arpl
sub
adc
mov
cmpsl
aaa
arpl
xchg
sbb
das
push
xor
or
sbb
das
das
sub
pop
xchg
mov
clc
xchg
inc
sbb
sti
adc
test
adc
pushf
push
dec
dec
cmp
push
mov
lock
fwait
in
dec
jnp
dec
mov
inc
in
les
jl
cmpb
adc
mov
adcb
cwtl
scas
xchg
jl
cmp
mov
xor
sub
movsb
and
mov
sbbl
int3
cltd
mull
stc
xchg
add
mov
fcomps
cmp
adc
outsb
jecxz
cltd
nop
imul
push
scas
pop
inc
addb
mov
adc
pusha
pusha
cmpsb
xor
inc
subl
xor
and
fisubs
xchg
mov
xor
jmp
xchg
push
pop
jp
inc
in
sub
data16
mov
roll
into
add
ja
in
push
es
mov
or
rolb
aaa
sbb
jns
jns
fs
data16
xchg
call
and
mov
and
xchg
rol
lahf
push
daa
xor
add
adc
and
pop
fists
push
das
pushf
push
lock
or
push
cmp
sub
in
test
inc
and
xchg
push
push
lea
and
mov
inc
sbb
xchg
xor
sub
dec
imul
pop
dec
pop
cmp
or
inc
and
aad
or
sahf
push
lock
jmp
sub
push
xor
stos
mov
aad
cmc
jl
insb
leave
in
or
nop
mov
addps
inc
or
inc
test
sub
les
ljmp
inc
pusha
scas
out
add
sub
lds
mov
ret
mov
mov
sub
cmp
mov
adc
pop
add
pop
orb
sbb
sub
movsl
fwait
ljmp
nop
add
jo
push
in
test
je
cmpsb
xor
test
rcrb
xor
subl
enter
aas
xor
cmp
mov
and
and
jne
mov
fs
les
cmp
mov
pop
pop
or
cs
push
mov
inc
popw
push
sub
pop
das
je
das
add
cmpsl
call
add
inc
movsb
shlb
out
sub
jmp
shl
pop
outsb
adc
jb
pop
rorb
imul
sub
push
sub
jo
int3
dec
jae
je
test
pop
mov
xchg
adcb
test
into
fwait
xor
or
mov
std
or
xor
cmc
push
cmp
jno
cmp
jnp
mov
inc
mov
mov
mov
or
je
insb
sub
sub
sub
sbb
jp
popa
das
inc
arpl
dec
and
mov
ficoml
cmp
push
and
pusha
jb
xor
dec
lods
add
stc
or
sahf
push
adc
out
sbb
pop
inc
pop
sub
insl
jb
shrl
clc
add
xor
pop
insb
xor
bnd
sub
je
inc
sub
and
pop
pop
dec
or
xchg
nop
test
sbb
cwtl
mov
inc
inc
and
pop
leave
inc
movsb
mov
and
and
pop
fcomps
pop
jnp
push
imul
mov
test
rol
jns
push
cld
icebp
imul
je
int
sbb
clc
mov
lea
and
cmp
sbb
inc
cmp
push
rcrb
adc
sbb
movups
rolb
mov
andl
pusha
adc
mov
cmp
aaa
pop
dec
data16
push
imul
roll
xlat
ss
xchg
push
mov
js
cmp
lea
mov
dec
in
mov
mov
mov
sbb
adcl
mov
adc
pop
sahf
cmpsl
dec
leave
adc
inc
sbb
sub
mov
rolb
addr16
ret
cli
popa
arpl
ret
adc
cld
das
sbb
imul
xor
xorl
das
mov
bsr
pop
daa
in
call
js
test
fsubs
mov
cmp
mov
pop
bound
push
sbb
mov
jo
xor
add
bound
push
daa
cmp
add
out
xchg
push
cmpsb
dec
xchg
test
add
js
and
mov
fs
pusha
loopne
insl
add
mov
sarb
nop
add
xchg
sub
push
in
call
mov
out
adc
add
xor
nop
add
push
lock
sub
push
clc
push
mov
lmsw
bnd
notl
sbb
push
dec
inc
jle
sub
int3
inc
add
scas
push
bound
imul
push
aaa
adc
mov
sbb
testb
fs
mov
sub
nop
mov
popa
das
pop
and
jge
sub
gs
pop
clc
sbb
push
idivl
add
shl
jae
dec
fidivl
inc
lahf
inc
sbb
jp
pusha
call
sub
sub
rcrb
inc
sbb
dec
jo
and
scas
fdivs
punpckhbw
outsb
and
xchg
out
adc
dec
add
js
add
popa
pop
adc
inc
adc
pop
add
push
sub
rolb
fistpl
push
push
mov
mov
add
fwait
mov
push
dec
mov
sti
incb
xor
xor
and
push
or
cmp
add
push
xor
or
insl
popa
xchg
add
rorb
push
add
sub
dec
and
and
pusha
adc
add
pusha
adc
dec
arpl
or
inc
and
andl
cmpsl
pop
dec
call
sbb
orl
push
mov
push
add
xchg
aaa
aad
adc
push
xor
std
inc
sub
cmpl
add
rcll
addr16
or
or
push
xchg
add
mov
add
xchg
xchg
sti
mov
add
jno
xchg
ljmp
or
mov
dec
addr16
mov
ret
mov
xor
incl
xor
dec
insb
dec
and
or
mov
cwtl
push
enter
add
mov
mov
inc
dec
xlat
in
mov
mov
xor
jbe
pop
lcall
and
mov
jge
cmp
mov
outsl
mov
xchg
jle
xchg
mov
xor
inc
pusha
add
jp
add
subb
in
aaa
xor
xor
fs
dec
xchg
dec
pminub
out
mov
mov
ja
bound
out
pop
sub
add
fmuls
les
jl
pop
xor
pop
dec
imul
pop
pop
xchg
pop
sbb
pop
pusha
sbb
push
sbb
sbb
rcrl
enter
decb
push
push
or
add
daa
push
cmp
mov
sub
mov
sub
roll
mov
adc
orb
ret
inc
jno
xor
mov
ficoml
ud2
push
xchg
fidivl
adcb
xor
fwait
xor
jne
mov
inc
fmuls
subl
les
xorb
xchg
push
cld
mov
pop
stos
cmp
and
or
xchg
insl
stos
or
andb
inc
adc
add
add
pusha
movsb
mov
adc
add
mov
push
ret
inc
adc
sbb
add
add
aad
addr16
pop
add
cmp
mov
fdecstp
or
mov
adc
test
push
dec
cs
movsb
lcall
jp
xchg
and
sarb
dec
cld
sbb
mov
addb
push
mov
rorb
pop
adc
out
mov
xchg
nop
jae
nop
in
loopne
mov
outsl
push
cld
sub
add
or
stos
inc
rorb
outsl
lahf
nop
ret
sbb
arpl
or
pop
xor
add
push
daa
or
and
inc
imul
sub
add
or
daa
sub
or
jl
add
adc
jle
add
xor
pusha
loopne
jo
sbb
add
jo
mov
xchg
andl
pushaw
imul
je
add
push
add
pop
push
jmp
mov
loope
aad
add
movsb
push
and
shrl
jno
fidivl
jns
lods
jno
ljmp
fcmovnbe
xchg
addb
pop
inc
add
inc
in
xchg
adc
mull
or
andl
sub
lods
inc
ljmp
out
es
add
mov
jno
add
inc
and
pop
inc
sub
rcrl
gs
mov
out
pusha
inc
cmp
es
repz
add
jae
jae
and
mov
jne
jecxz
sub
lods
cld
mov
fs
cmp
pop
outsl
cld
xorb
ss
mov
pop
adc
sub
dec
pop
push
pop
add
add
in
jecxz
test
xor
lock
into
rclb
or
pop
xchg
aam
orl
ret
pop
adc
push
pop
xor
fldt
add
adc
inc
imul
mov
popa
int3
or
imul
imul
adcb
sub
mov
in
mov
pop
hlt
adc
shll
add
je
imul
ljmp
or
addl
sub
cmp
std
pop
jo
pop
es
das
add
cmpl
sbb
ljmp
jno
adc
rorb
imul
mov
add
arpl
pop
addb
xchg
inc
arpl
sub
mov
add
imul
mov
inc
mov
and
rorl
or
sbb
daa
movl
and
mov
xchg
into
cmpsl
jg
or
das
js
ja
es
sub
or
fildll
push
push
adc
xchg
jbe
inc
loopne
cmp
es
xor
jns
jmp
xor
movsb
cmp
addb
lret
dec
jo
stos
pop
mov
add
mov
inc
je
add
andb
xchg
cmp
cmc
ljmp
ja
mov
jmp
ja
and
or
sbb
rcrb
pop
cmp
dec
add
push
mov
adc
loope
inc
push
daa
or
aaa
and
loop
push
imull
js
mov
mov
cmovb
aas
mov
js
or
lea
mov
adc
lods
cmp
ret
outsb
pop
adc
xor
mov
clc
les
cmp
lods
jp
js
or
aad
adc
in
popa
inc
jne
push
adc
rcrb
icebp
or
xchg
popa
mov
nop
lahf
sub
xchg
hlt
dec
lret
or
insb
and
mov
js
nop
orl
dec
hlt
mov
mov
hlt
cwtl
or
adc
jmp
aam
jnp
or
add
xchg
arpl
lods
fnstenv
sub
and
and
and
push
sub
inc
insl
add
mov
and
push
inc
mov
insl
add
or
cmp
jno
cmp
pusha
aaa
push
xchg
adc
mov
nop
xor
inc
loopne
filds
xor
fcoms
add
notl
fwait
repz
push
or
or
push
add
mov
out
repz
cmp
cld
unpcklps
test
xchg
icebp
sbb
test
mov
xchg
jne
lea
sbbb
sbb
pop
cmpsl
sub
sbb
or
and
adcl
dec
pop
cmp
xorl
lcall
inc
cld
cmp
xor
inc
add
sarb
pop
add
mov
mov
mov
pop
aaa
or
ret
cmp
jmp
or
adc
repnz
loope
sti
sarl
add
subb
in
inc
jae
mov
adc
add
mov
js
test
and
inc
dec
xchg
adc
and
adc
pop
pop
jno
cmp
loope
adc
addl
mov
dec
lahf
ds
inc
std
inc
pushl
mov
mov
cmp
clc
dec
jle
faddl
sbb
cmpb
sbb
xchg
mov
adc
lock
dec
aas
push
jmp
fwait
mov
ja
in
xor
jmp
aaa
outsl
jo
xchg
and
adc
or
mov
movsb
lods
mov
xor
ret
and
or
xchg
adc
and
ret
xchg
addr16
jo
xor
les
adcb
jne
adc
rorb
xchg
mov
movsb
xchg
xchg
pusha
pusha
inc
pop
mov
mov
hlt
es
mov
mov
adc
dec
push
add
mov
xchg
fsts
mov
or
scas
out
repnz
xor
add
je
rcll
xor
xchg
and
xchg
ret
das
push
and
and
outsb
and
mov
loopne
mov
push
mov
and
pop
jbe
pop
rcll
lret
popaw
ljmp
addr16
negb
roll
sub
jns
pop
sub
adc
dec
cs
inc
sbb
or
sbb
push
out
jmp
sub
adcb
sub
insb
mov
sbb
mov
fldl2e
jno
dec
ret
dec
outsl
and
adc
cld
test
cmp
mov
enter
pop
push
arpl
cmp
loopne
js
sbb
xor
xor
out
adc
pushl
add
sub
sbb
sti
xchg
mov
xorb
push
fs
lock
jnp
lds
inc
xlat
cmp
inc
lds
dec
adc
xlat
inc
mov
pavgb
jp
fists
or
mov
xchg
lock
pop
mov
cmp
adc
add
push
lock
xor
or
sbb
aam
js
push
sub
and
sbb
jbe
adc
nop
xor
adc
jo
js
mov
sbb
inc
scas
dec
or
cmp
jnp
add
je
jae
add
mov
push
push
cs
or
loopne
or
push
push
inc
inc
inc
push
push
xchg
hlt
inc
or
push
inc
push
fadd
pusha
dec
lock
mov
mov
lock
mov
imul
pop
imul
popa
mov
cmp
jmp
addl
cmp
push
cltd
or
add
test
jbe
xchg
mov
rolb
movsl
cltd
ret
cmpsl
add
mov
into
dec
add
mov
inc
add
fldl
jle
or
jne
ja
push
pop
push
add
or
aaa
sahf
imul
outsb
cs
jne
out
cmpsb
push
gs
adc
lar
mov
imul
jae
sbbl
ja
cltd
imul
loop
jo
movsb
mov
cmp
enter
adc
or
mov
mov
sub
sub
movsb
inc
mov
pop
sub
xor
test
mov
mov
mov
daa
xor
and
out
pop
fs
outsl
inc
cmp
lock
jp
imul
aaa
in
mov
cmpsl
pop
fidivl
xchg
sub
dec
sti
pop
daa
push
ret
lret
push
push
int
mov
fstl
sbb
pop
jae
xchg
push
loopne
pop
hlt
aam
jmp
push
jmp
pop
insb
sub
sub
popa
cmp
adc
push
jmp
nop
pop
out
jns
cmp
and
pusha
js
icebp
xchg
jae
test
cmp
sbbl
and
sbb
adc
clc
mov
sarb
mov
inc
loop
or
movsl
xor
pop
decl
imul
cmp
outsl
mov
pop
mov
aaa
or
mov
insb
mov
mov
rcrb
pop
ljmp
rolb
mov
rorb
push
or
sub
cmp
out
inc
ss
and
sub
sbb
js
ss
pushl
cmpsl
test
gs
cmp
sbb
notl
jg
nop
out
dec
dec
inc
add
add
sbb
or
dec
adc
mov
xchg
add
adcb
or
inc
or
mov
dec
cli
mov
ret
fsubrs
cmpl
je
or
das
dec
dec
lods
xor
loope
inc
jmp
out
pop
or
insb
imul
inc
cld
sbb
mov
pop
nop
mov
push
adc
fcoms
push
and
xchg
jne
inc
outsl
test
push
inc
mov
into
addr16
sbb
clc
inc
sub
add
js
jne
inc
jmp
xchg
in
clc
in
lock
push
int3
mov
xchg
mov
cmp
mov
adc
inc
lahf
push
outsb
or
xor
adc
xor
mov
mov
jge
xchg
jmp
and
add
push
stc
xor
dec
cld
cld
scas
pop
pushf
nop
out
jne
sbb
and
dec
mov
and
mov
roll
leave
fildl
xor
jb
pop
xor
cmp
xor
test
fldl
lret
rolb
jl
inc
pop
mov
jne
mov
mov
add
mov
mov
pop
jne
xchg
in
ret
add
clc
pop
or
jle
sbb
inc
sbb
sbb
jne
jle
or
inc
or
hlt
pop
jb
call
ja
xor
lods
xor
sbb
sarl
pusha
sub
loopne
xrelease
cmpsl
or
add
mov
jae
leave
js
int3
sbb
ret
xchg
push
test
cmovge
inc
mov
pop
pusha
sarb
or
gs
xchg
push
pusha
push
pusha
sub
insb
jae
sub
icebp
popfw
pop
loope
je
jmp
mov
push
out
loopne
repz
call
inc
arpl
dec
inc
mov
insb
test
shl
aad
imul
insb
mov
cmpsl
jo
or
outsb
pushf
or
scas
icebp
sub
mov
add
mov
cmpsl
dec
jno
pop
and
cmpsb
or
loopne
cmp
and
push
pop
jb
hlt
out
lcall
js
test
lahf
push
or
cmp
js
cmp
add
or
add
or
xchg
dec
mov
ljmp
dec
lds
sub
sbb
mov
ja
into
dec
xor
pop
js,pn
and
sub
andl
stc
mov
xlat
je
mov
adc
mov
xor
push
and
and
adc
xchg
and
js
push
inc
inc
add
lret
pop
mov
push
in
je
stos
adc
shll
or
imul
pop
inc
lods
and
mov
jb
pand
and
dec
fmull
push
or
shlb
in
inc
inc
mov
push
movsb
mov
js
jnp
dec
aad
or
adc
andl
pop
jg
dec
mov
in
imul
pop
mov
sarl
daa
icebp
addb
fs
es
jl
mov
mov
ficompl
mov
or
xor
push
pop
adcl
pop
fnstenv
in
inc
out
push
xor
xor
jo
jb
push
sub
xor
jg
add
mov
ret
and
push
or
icebp
aam
inc
nop
xchg
cmp
mov
adc
movsl
mov
insb
outsb
aam
adc
mov
lea
sbb
xchg
xchg
mull
fiadds
nopl
and
inc
enter
sbb
xchg
fsubs
pop
xchg
jo
daa
pmuludq
sbb
mov
cmc
push
pop
enter
sbb
xor
sub
fcoml
xor
xchg
lock
and
dec
dec
mov
mov
imul
mov
outsb
inc
sbb
call
pop
movsb
or
cmp
xchg
jge
cwtl
pusha
add
adc
inc
dec
dec
neg
sbb
inc
push
sub
sub
xchg
test
pop
pshufw
inc
loopne
out
fwait
mov
push
cmpl
pop
fisttpll
pop
sbb
push
xchg
mov
rcrl
pop
cmpsb
add
xor
rol
mov
inc
pop
or
xchg
sub
addr16
dec
cmp
enter
sub
lahf
push
sbb
and
or
imul
and
int3
test
sbb
cmpsl
xchg
in
dec
pop
adcb
aaa
adc
add
ffree
mov
adc
dec
or
outsl
shl
pop
push
addr16
mov
xorl
sub
divb
push
movsb
push
push
xchg
cmc
lret
ljmp
movsl
jmp
icebp
mov
pop
pop
add
and
inc
sub
jl
roll
in
sub
rolb
fidivs
das
mov
sub
and
mov
stc
xchg
inc
sbb
push
or
and
mov
or
jns
addl
adc
inc
jae
pop
pop
jae
rorb
xchg
sub
pushf
das
addr16
cmp
dec
cmp
inc
mov
test
mov
jg
xchg
sbb
or
lar
popa
ret
push
add
and
mov
xor
mov
rolb
add
inc
test
js
push
inc
rorb
sarl
dec
push
jns
ljmp
or
mov
ja
in
rcl
or
int
xor
add
test
sbb
pop
js
rcr
mov
sahf
xor
popa
push
imul
test
es
cs
sbb
out
outsl
jl
inc
xchg
jmp
and
xor
movswl
cmp
jne
and
addb
loop
mov
fdivrl
test
jnp
jecxz
sbb
sbb
std
cmc
cwtl
outsb
dec
pop
xor
or
cmp
xor
push
mov
flds
xor
addr16
add
fs
cld
fs
dec
mov
jnp
jnp
inc
add
sbbb
jb
popa
fldenv
xchg
inc
pop
jg
xorb
add
test
cmp
je
nop
dec
xor
aad
mov
sti
movsb
addr16
add
jmp
mov
ja
fildl
pusha
jmp
push
push
inc
or
in
popf
xor
sahf
push
out
mov
mov
dec
loopne
jnp
pushf
lock
mov
mov
xchg
push
xlat
testb
adc
cmp
mov
je
xor
push
test
or
sbb
insb
das
dec
cmp
clc
cmpb
mov
nop
sbb
and
lea
jae
inc
xlat
and
test
push
imul
mov
sub
push
xorb
scas
bound
sbb
outsb
xor
mov
xor
inc
inc
jl
jbe
cs
add
pop
mov
mov
jo
subl
pop
rcrl
int
insb
mov
adc
int3
add
nop
mov
popf
push
stos
pop
xor
shll
imulb
aaa
popf
mov
pop
sbb
in
adc
push
fs
sarb
je
add
popa
test
xchg
fisttpl
sub
call
mov
icebp
cltd
lds
push
or
ret
rcrl
cmpsl
inc
sub
xchg
jp
jno
pop
aas
mov
add
add
sbb
or
jbe
mov
movsb
cmp
fildl
arpl
adc
jmp
dec
andl
lods
and
sbb
incl
or
xchg
cmp
jmp
shl
xorb
mov
push
push
sbb
push
pop
loopne
sub
pushf
ss
inc
push
add
bound
loope
inc
push
mov
add
in
aas
inc
lret
jns
sti
mov
push
mov
stos
cmp
aaa
and
adc
cmp
and
sarb
push
orl
inc
sub
or
fildl
and
add
dec
mov
and
dec
add
je
dec
ljmp
push
lcall
pop
cmpsb
data16
imul
mov
mov
ja
add
inc
test
int
xor
out
cmp
dec
push
mov
movsl
inc
dec
sbb
pop
sbb
mov
adc
and
push
mov
fwait
stos
loopne
cmp
mov
push
xchg
push
fs
push
push
mov
inc
jmp
lock
rorb
xor
adc
movsb
sub
add
xchg
data16
adcl
adc
adcb
pop
fdivs
xor
scas
and
insl
mov
daa
inc
adc
sbb
divb
insl
pop
and
pop
rclb
outsb
sar
adc
shlb
jo
and
sbb
loopne
push
movsl
pop
xchg
xor
cmp
jg
aaa
lock
stos
stos
adcl
cwtl
xor
jns
xorb
shrb
pop
je
mov
jnp
sbb
out
js
push
int
test
cld
push
xor
sahf
jnp
pusha
ret
pop
add
xor
push
or
pushf
sbb
and
dec
xchg
jno
pushf
ret
movsb
mov
call
mov
test
sbb
xlat
clc
sbb
lea
cwtl
sub
shll
ret
or
or
insb
in
inc
add
mov
fwait
loop
or
pop
sbb
out
ret
ret
div
cmpsl
push
daa
push
xchg
rcrl
inc
imul
iret
dec
cmp
test
sbb
pop
push
mov
pop
xchg
insl
or
push
out
cmp
xor
mov
adc
ds
test
cmc
call
inc
xor
lea
mov
daa
xchg
ret
cs
sbb
lds
push
inc
fdivs
inc
dec
jne
mov
dec
test
push
cmp
or
mov
and
loope
pushl
xchg
out
fildll
out
dec
test
dec
or
movsb
inc
add
or
fstpl
mov
mov
pop
push
mov
fidivs
cwtl
jae
cwtl
cwtl
xchg
inc
jo
xchg
and
nop
jge
push
in
dec
nop
mov
or
mov
imul
jecxz
jl
and
push
je
jl
ret
jo
jo
insb
insb
and
push
fs
mov
sbb
shlb
pop
fsubp
pop
mov
mov
pop
push
mov
shlb
push
mov
fsubs
dec
dec
dec
ret
mov
push
xor
pop
push
mov
cmp
sbb
xor
add
xor
or
gs
sub
and
or
inc
add
nop
and
and
enter
sbb
sbb
adc
adc
in
and
or
nop
lret
sbbb
das
add
add
add
std
jae
mov
insb
clc
pop
rorl
std
das
hlt
and
mov
das
lock
xchg
in
and
push
xor
mov
cmp
loopne
xchg
loopne
fdivrl
std
xchg
fsubs
orl
adc
dec
enter
pop
out
enter
add
and
rclb
mov
lret
sbb
or
jno
jae
jb
std
add
mov
jae
jo
lods
mov
cmp
push
mov
sbb
sbb
sbb
sbb
adc
orb
pop
cmp
xor
sbb
or
sbb
pusha
add
mov
sbb
sbb
sbb
dec
test
or
and
add
jmp
xor
loopne
xor
std
mov
pop
inc
push
mov
sbb
adc
push
adc
adc
repnz
outsl
add
dec
sbb
inc
xchg
cmp
ljmp
add
mov
mov
or
mov
mov
mov
xchg
out
xchg
loopne
xor
xchg
lret
jnp
mov
jnp
mov
adc
jbe
mov
fisttps
push
mov
movsb
enter
jnp
data16
stos
push
cmp
and
cmpl
inc
push
inc
inc
add
mov
add
je
outsl
adc
and
stc
and
add
push
dec
js
insl
xor
xor
in
cltd
inc
ja
mov
pop
and
imul
inc
clc
out
jae
pop
pop
mov
test
dec
cltd
jnp
loope
inc
xor
popa
xor
lods
pop
jbe
loopne
pusha
mov
stos
xor
add
dec
popa
pusha
mov
or
mov
outsl
in
pop
ror
or
sub
pop
xchg
xchg
ret
adc
mov
dec
divl
xchg
aaa
lods
scas
xchg
cmpsb
cmp
cmp
fwait
test
adc
xchg
mov
js
or
lods
xor
inc
addb
imul
pop
orl
sbb
add
lret
pusha
dec
adc
mov
adc
inc
dec
fstpt
adc
xchg
loopne
out
shl
es
scas
add
adc
in
xchg
jbe
sahf
jno
je
or
sbb
aam
cmpsb
push
push
mov
orb
xor
sbb
lods
ror
imul
push
and
cmc
xor
enter
mov
dec
lock
lret
inc
mov
mov
sub
lods
enter
add
das
xor
fs
jo
xlat
pop
das
in
xor
mov
fnsave
subb
sbb
hlt
lahf
jg
mov
enter
imul
xchg
and
cmpsl
call
push
push
hlt
jbe
mov
adc
repz
and
sub
mov
leave
fiaddl
pop
sub
and
push
or
cmpsl
shlb
adc
jl
inc
push
ljmp
lcall
pop
push
push
imul
push
les
jg
outsl
pop
not
mov
lods
test
cmp
cmp
fistpll
nop
out
mov
lods
filds
mov
int
rol
xor
adc
adc
movsb
test
xchg
or
xchg
cwtl
xchg
notl
cmpsl
inc
mov
ds
mov
in
mov
mov
int3
test
pop
orb
xchg
mov
sahf
insb
loop
gs
ficoms
in
mov
xchg
mov
fnstcw
push
mov
and
adc
mov
sub
mov
insb
mov
mov
push
nop
insb
pop
push
fiadds
lcall
nop
dec
xlat
mov
inc
inc
push
dec
inc
dec
inc
notb
inc
inc
jle
mov
dec
dec
dec
rcrb
jb
xor
xor
cmpsl
sbb
xor
xchg
lret
cmp
xchg
out
xchg
sub
and
cmp
sbb
pop
sub
sbb
lods
adc
adc
sub
in
sbb
in
sbb
push
xlat
xor
lea
mov
pop
lcall
mov
mov
or
test
fnsetpm(287
jno
push
dec
es
lret
cmp
adc
lret
mov
add
popf
lcall
dec
mov
mov
aad
call
leave
jge
inc
sbb
loopne
or
add
mov
sub
mov
jp
aas
adc
aam
fimull
in
ja
test
sbb
rcrb
int3
mov
adc
push
xor
sarb
jo
xchg
data16
cs
enter
imul
div
mov
lods
dec
adc
mov
mov
push
adc
pop
imul
mov
sbb
mov
xchg
cwtl
sub
cmp
or
in
movsl
daa
sbb
sbb
mov
sbbl
xchg
insl
pusha
js
adcb
mov
shrb
mov
fs
inc
cmp
and
sub
imul
push
pop
mov
push
enter
movsb
in
inc
push
dec
jnp
lret
leave
dec
dec
cmp
popa
add
lea
sbb
cmpb
sbb
outsb
push
cmpb
fimuls
xor
clc
xchg
daa
inc
cmp
sub
or
jb
sub
cs
jb
sbb
inc
dec
push
nop
and
add
leave
in
sbb
mov
xchg
xchg
out
mov
or
out
fistps
lea
notl
jl
and
cld
sahf
test
call
lock
sub
mov
jne
xchg
cmp
rcl
cmp
les
adc
in
inc
lock
or
sbb
in
fwait
pop
rorl
lock
outsb
push
xor
fisubl
mov
xchg
popa
repz
aas
call
or
xor
idivl
add
push
out
mov
das
es
sub
ja
subl
je
adc
xlat
mov
icebp
and
addr16
iret
dec
adc
xchg
or
cmp
in
aaa
int3
jne
arpl
aaa
insb
fildl
sbb
mov
xchg
xchg
cmpsl
sbb
pop
repz
repz
test
lods
xor
gs
fwait
dec
or
test
xor
sbb
loopne
mov
xor
jne
aam
loopne
cli
shr
pushf
push
jne
mov
roll
mov
outsl
in
nop
pop
xor
or
test
push
xor
out
lods
sbb
fisttps
pop
lahf
jno
je
sbb
pop
test
andl
inc
inc
xor
lods
cmp
cmp
data16
mov
pop
mov
pop
pop
imul
ret
or
mov
pop
test
dec
add
sbb
sbb
xor
jno
mov
jge
fimull
jno
mov
lea
inc
inc
pusha
fisttpl
sbb
cmp
add
loope
dec
addb
and
sub
mov
fdivr
cltd
jne
add
lds
and
shlb
add
xor
dec
shl
add
lcall
insl
and
or
and
or
and
add
add
sub
adc
jno
and
add
push
or
cmpsl
sbb
aaa
and
loopne,pn
cmpb
and
in
in
loopne
fsubl
je
in
sbb
adc
mov
popf
pop
daa
and
adc
pop
fcomps
pop
js
mov
fucomip
add
add
lea
sti
lods
or
in
adc
and
inc
push
rcr
mov
sub
and
mov
and
pop
in
les
rorb
lcall
jbe
xlat
test
addr16
outsl
mov
adc
inc
mov
daa
mov
outsl
or
dec
mov
mov
add
inc
jb
dec
mov
adc
test
imul
insb
xor
or
imul
loopne
sub
in
xor
adc
inc
and
or
sub
xor
test
inc
adc
xor
and
in
adcb
stos
and
pop
outsl
adc
and
adc
or
pop
lret
or
in
adc
push
lods
leave
orb
lods
push
adc
add
orb
aas
jno
add
sbb
fwait
sbb
test
es
push
xchg
adc
scas
in
in
adc
xor
fsubs
popa
dec
popa
sub
xchg
out
out
jo
inc
sub
popa
adc
jb
mov
xor
test
and
jnp
or
xorb
mov
jnp
sbb
in
loopne
adc
and
add
dec
loope
add
inc
jo
test
jno
cmp
or
adc
arpl
imul
loope
imul
in
jl
adc
jl
addl
and
sbb
fisttps
cmp
sbb
test
add
std
adc
test
adc
jns
lods
lock
andb
or
cmp
add
fdivr
cmpsb
test
cwtl
movsl
pop
adc
cmp
sub
add
scas
add
jns
orb
mov
scas
jl
sbb
and
push
or
insb
aad
cmc
mov
popa
je
ficomps
loopne
or
shrb
lea
sbb
dec
sbb
push
inc
sbb
xchg
andb
cmp
cmc
call
xor
pusha
sbb
pop
fcomps
add
sbb
or
fadds
std
sbb
dec
and
mov
ja
mov
sbb
loopne
ror
sbb
add
lret
mov
jb
sbb
cwtl
pop
dec
push
sbb
xchg
and
jb
shlb
std
outsb
xor
lods
jae
and
sbb
daa
jb
jo
adc
xor
test
and
dec
sbb
shll
cmp
jno
jp
push
push
adc
xor
or
push
mov
add
add
jo
cmp
sbb
cld
xchg
int3
cld
push
sbb
movsl
adc
lahf
mov
xchg
ret
daa
outsb
add
and
cmpl
mov
inc
roll
cld
jae
fstp
sbb
and
inc
xor
jae
cmp
mov
and
outsb
dec
dec
dec
ds
mov
sbb
loopne
mov
sbb
sbb
adc
les
xor
sbb
ja
repnz
and
add
sbb
inc
imul
test
cmpsb
in
movsb
mov
movsb
xchg
dec
popa
enter
cld
sbb
mov
cwtl
and
xchg
cwtl
and
outsb
inc
or
and
adc
sbbb
mov
sbb
cmp
rcrb
das
sbb
cs
call
mov
mov
mov
dec
xchg
and
je
movsb
xor
sbb
jne
mov
insb
dec
and
loop
or
adc
adc
sahf
je
inc
sbb
cld
xlat
xchg
push
push
dec
pusha
sbb
stc
test
test
into
push
int3
fidivl
pop
cld
rcrl
inc
or
jecxz
xor
gs
popl
test
notb
ret
test
mov
mov
adc
xchg
movsb
xor
jmp
push
or
outsb
add
shlb
or
and
aaa
xor
mov
pop
xor
sub
and
sub
or
subl
pop
ret
aam
push
leave
shll
loope
lds
insl
cmp
in
push
and
jne
fsubrl
push
jne
inc
fadds
push
sub
test
jae
imul
fwait
xor
adc
int
xor
jmp
fstpl
imul
fwait
cmc
imul
adc
mov
adc
pop
popa
scas
pop
testb
aas
mov
lea
mov
and
mov
mov
pushf
js
cwtl
test
xchg
push
jbe
aam
jne
sub
jmp
mov
inc
test
push
xchg
and
or
adc
cmp
outsl
pop
mov
dec
sub
mov
cmpsb
pop
xor
sub
mov
mov
inc
sti
fistps
push
sti
arpl
dec
add
and
xlat
xor
movsl
push
inc
mov
outsb
add
sti
sbb
mov
clc
and
fdivr
ret
push
sbb
push
sti
aam
test
cs
out
dec
sbb
dec
sbb
add
sbb
ret
sbb
sbb
jno
lock
jnp
movb
sbb
rolb
sbb
pop
push
mov
jecxz
lods
mov
sbb
mov
mov
pop
seto
cwtl
jmp
in
jne
add
aas
int3
movsb
xor
jp
mov
cwtl
xor
add
sbb
movsb
add
std
in
cmpsb
fildll
dec
clc
pop
jo
sub
push
pop
dec
sbb
add
jg
call
mov
stos
and
pop
sbb
mov
dec
sub
add
outsl
addl
inc
shlb
cmpsl
outsl
out
mov
orb
cld
outsl
xchg
in
fsubrp
mov
add
adc
outsl
jne
xor
push
subb
or
pop
adc
push
rolb
push
shrb
fisttps
or
ss
nop
mov
jbe
or
add
push
rclb
gs
stos
add
je
mov
sub
xchg
dec
loopne
add
xchg
mov
or
inc
add
push
andb
sbb
pusha
subb
or
push
add
adc
inc
repnz
mov
and
aad
mov
movb
and
gs
inc
leave
clc
dec
cmpl
mov
jno
push
jle
push
add
popa
xor
out
je
or
push
pop
sub
repz
and
ret
sub
or
pop
xlat
es
dec
add
dec
les
ret
dec
fbld
pushf
in
and
in
pop
push
inc
mov
enter
push
add
add
mov
xchg
out
jae
and
mov
or
push
enter
mov
das
pusha
iret
jmp
inc
sbb
or
or
or
adc
in
in
mov
adc
add
stc
sbb
sahf
inc
mov
sub
inc
ret
push
pop
xchg
cmpsb
xor
aad
ljmp
mov
jp
orb
sbb
ret
push
dec
push
int
jge
rorl
push
rcrb
add
nop
push
or
pop
mov
pop
rolb
scas
add
cmp
mov
xchg
es
push
inc
daa
das
andb
pop
stc
pop
aam
movb
jno
push
test
xchg
mov
mov
enter
dec
lods
xorb
mov
movsl
xchg
cmp
jecxz
push
pusha
pushf
movsl
pop
push
mov
mov
jp
lods
mov
xor
mov
add
cwtl
fwait
pop
sbb
push
add
pop
popa
push
mov
lea
lret
sbb
inc
xor
enter
or
inc
ljmp
mov
adc
add
adc
add
mov
or
adc
roll
test
sub
orl
xor
call
inc
ljmp
test
add
shl
loope
in
movsl
mov
xchg
cmp
je
adc
daa
adc
push
ret
orb
stc
lock
sub
mov
orb
add
out
jmp
fstpl
xor
sbb
pop
pop
insl
movsb
and
sub
dec
loopne
mov
fstpl
fbstp
pop
scas
cli
pop
in
imul
imul
sbb
insb
sbb
pop
cmpsl
dec
inc
mov
push
cmpsl
mov
sbb
or
push
or
xor
sub
sub
adc
ret
test
mov
nop
sub
cmovb
in
js
roll
test
pop
sub
and
inc
ret
jecxz
mov
fs
mov
xor
sbb
xchg
lea
add
imul
adc
test
xchg
add
xchg
test
push
mov
mov
cmp
hlt
fwait
xor
adc
test
inc
sub
mov
orb
repnz
sbb
cmp
daa
bound
mov
mov
and
sub
subb
sub
inc
mov
mov
test
pusha
xchg
test
test
or
add
cs
mov
popa
test
loopne
jne
pop
sbb
movsl
push
sbb
movsb
lods
je
pop
xchg
mov
xchg
jmp
xchg
jmp
cs
lock
jo
loop
test
popa
ljmp
leave
adc
xchg
loope
lods
push
xchg
xlat
adc
and
push
xlat
dec
xchg
push
pop
loop
push
sub
xchg
pop
xchg
mov
xchg
pop
push
sub
inc
in
pop
mov
mov
mov
inc
mov
out
test
or
add
subl
lods
sbb
sub
xchg
pop
xchg
adc
push
or
pop
or
and
adc
add
inc
mov
scas
pop
adc
movsb
and
adc
adc
mov
sub
cmp
mov
cmp
cmp
test
aad
inc
andl
xor
push
imul
pop
loope
inc
jb
push
fildll
fbstp
jo
in
sub
loope
sub
dec
xchg
jo
ror
push
add
mov
pop
nop
fisubrs
hlt
push
movsb
imul
mov
dec
sbb
or
adc
call
and
or
xchg
sbb
mov
and
je
loopne
and
pop
lock
pop
loope
or
adcb
mov
int
sbb
dec
push
in
mov
sub
fisubs
xorl
adc
and
in
xor
pop
sub
jnp
xor
push
cmpsl
and
mov
or
mov
jl
xchg
or
or
sbb
imul
or
test
andl
sub
lods
and
and
or
fcomip
push
inc
sub
stos
cmp
and
mov
push
in
dec
cmp
adc
inc
sbb
inc
sub
jle
jle
sbb
add
and
in
mov
or
or
sbbb
bound
xchg
cs
lar
inc
jg
lret
xor
adc
pop
adc
adc
dec
push
mov
lods
shrb
or
or
pop
or
adc
lret
adc
or
dec
mov
and
jo
cs
sbb
pop
or
mov
fcoml
cld
pop
sbb
add
sbb
aam
loopne
and
shrb
mov
leave
shrb
or
inc
filds
loopne
fadds
inc
rcll
sub
inc
mov
inc
or
mov
pop
or
enter
lods
jno
ret
sarb
dec
test
fdivr
mov
cwtl
or
fadds
movsl
mov
in
cwtl
jmp
dec
insb
adc
cmp
jmp
fsubr
loope
inc
mov
inc
roll
icebp
jb
pop
je
cld
lcall
lea
push
and
jb
jo
xchg
popa
adc
fdivrp
jo
mov
outsl
test
push
mov
and
push
imul
push
dec
jecxz
nop
outsl
pusha
mov
inc
aaa
xor
inc
inc
pop
inc
and
cmp
sbb
dec
popa
jno
sbb
push
push
dec
out
movsl
xor
and
xor
lret
sbbb
and
jo
nop
and
sbb
or
movsl
pop
sbb
fwait
add
dec
mov
shlb
outsl
and
sbb
push
xchg
or
stos
push
into
mov
or
sbb
add
add
xchg
add
cwtl
test
sbb
xchg
pusha
or
push
insb
add
and
incb
mov
addb
inc
dec
push
fsubrp
movsb
rcll
push
pop
push
mov
push
cmp
je
int3
and
pop
pop
push
pusha
lock
enter
popa
adc
sbb
sub
call
fcoml
mov
cmp
insb
cmp
loope,pn
scas
add
outsb
enter
movsb
jo
push
scas
push
pop
subb
pop
pusha
xchg
xorl
int3
push
push
sti
or
shl
nop
jo
nop
inc
add
nop
lret
nop
xchg
sbb
xor
mov
inc
in
inc
mov
test
mov
test
clc
and
orb
fsubrl
inc
sbb
cmp
js
outsl
pusha
or
sbb
fstl
sti
and
cmpsb
fisubrl
and
cmp
ljmp
mov
xor
sbb
jecxz
rolb
add
sti
aas
sbb
addb
mov
sbb
jecxz
shlb
jo
push
push
xor
sbb
sti
rcrl
or
outsl
insb
xor
sbb
add
sbb
mov
jo
push
sbb
pop
pusha
jecxz
filds
les
or
add
sbb
in
les
pop
add
fwait
mov
nop
out
and
sbb
rcr
add
and
and
icebp
pop
inc
arpl
and
dec
add
cmpb
and
lods
lahf
and
in
xlat
lock
and
mov
in
in
xchg
sbb
jecxz
sbb
dec
jecxz
sti
xchg
and
rolb
push
bound
or
mov
cltd
popa
adc
mov
cltd
jne
add
sbb
and
add
pusha
and
mov
clc
pop
les
mov
cli
add
mov
mov
push
arpl
sbb
jno
mov
fdivr
sbb
push
push
fistps
jno
lods
jecxz
cli
in
sbb
push
mov
xchg
cs
fistps
ret
sub
inc
sub
jo
add
insb
add
sbb
dec
sbb
or
jl
std
int3
ficoms
add
xchg
mov
push
int3
ret
mov
xor
sahf
mov
mov
or
or
and
dec
xor
dec
sub
push
xchg
lret
mov
xor
jae
decl
adc
mov
stc
cmp
and
push
xor
push
jmp
xchg
inc
shlb
dec
add
adc
outsb
clc
cmp
repz
jecxz
lock
leave
and
int3
sub
loopne
xor
xor
pop
les
or
sub
dec
pop
xor
jecxz
sub
lret
rorb
cltd
ror
mov
dec
leave
sub
rclb
dec
loope
push
inc
inc
sub
and
mov
push
out
fbstp
insb
shrl
sarb
loopne
nop
mov
mov
jb
mov
test
jmp
mov
mov
adc
loopne
inc
test
sbb
mov
mov
pop
es
and
nop
dec
push
push
or
adc
cmp
int3
sub
test
es
loopne
es
rolb
push
or
fisttps
sub
loopne
dec
lcall
cwtl
xchg
loop
fists
or
sbb
int3
xchg
loopne
sbb
and
mov
xchg
loopne
loope
adc
xchg
or
inc
xchg
and
cmovae
loope
test
and
and
jecxz
mov
jb
adc
and
mov
xchg
dec
xor
test
dec
loopne
fisttps
fildll
test
dec
insl
int3
dec
xchg
insl
fisubrl
and
sub
nop
and
sub
mov
add
mov
leave
fcmovbe
mov
sub
jle
nop
mov
sarl
mov
fbstp
imul
adc
cmp
and
insb
pusha
test
dec
jle
fiadds
mov
adc
cmc
jle
and
test
jle
mov
and
pop
and
add
dec
inc
adc
inc
jecxz
out
and
or
loop
xchg
or
andb
jecxz
mov
sub
mov
dec
jle
jle
inc
xor
lods
mov
pusha
inc
and
inc
xor
mov
xor
nop
sbb
loopne
xor
pusha
and
lods
xor
mov
mov
mov
fbld
loopne
jp
or
cmp
mov
add
sbb
lea
lods
outsl
imul
rolb
push
cmpl
adc
add
pop
sbb
dec
pop
adc
jne
and
adc
adc
and
inc
xchg
enter
push
lds
ljmp
add
and
jo
fnstenv
sbb
je
push
sbb
pop
incb
punpcklbw
addr16
xchg
orb
add
insb
jo
cmp
cmp
js
orb
nop
xchg
cwtl
cmp
cmp
pushf
mov
lcall
or
lahf
ss
jo
push
push
pushw
xor
sub
push
movl
pop
pop
addl
inc
inc
add
cmp
imul
fdivl
mov
movl
sub
dec
inc
out
bound
sarb
dec
aas
sbb
insb
mov
and
sbb
dec
pop
cmp
pop
int3
and
mov
pushf
jbe
fmull
jb
pop
enter
in
dec
sahf
pop
int3
hlt
or
out
pop
mov
shlb
jne
leave
jae
shlb
enter
daa
aam
xchg
cmp
xor
aam
push
dec
lret
shrb
and
scas
adc
dec
insl
and
dec
and
arpl
jo
or
jnp
xor
mov
mov
sbb
jecxz
ror
jb
push
sub
loopne
push
inc
adc
imul
adc
adc
sbb
rcll
stc
pushl
cmc
pushl
mov
fildll
adc
imul
aaa
jne
xchg
int3
jnp
inc
movsl
xchg
pop
xchg
es
or
or
insb
sub
push
and
enter
wbinvd
jp
sti
lods
or
adc
sbb
push
test
inc
ficoms
sbb
mov
sbb
mov
test
or
inc
aaa
mov
xor
sbb
pop
fiadds
aad
rorb
lds
lods
in
sbb
push
cmp
sub
out
and
cmp
cwtl
andl
ficompl
pop
inc
jle
mov
xchg
add
std
mov
enter
xor
add
lret
leave
mov
sbb
push
and
sub
push
in
push
inc
shrl
inc
or
aam
dec
sub
rclb
cmp
or
add
sbb
sqrtps
inc
jae
and
fcomi
fs
xchg
sub
lods
push
repnz
jne
popa
dec
sub
mov
les
add
mov
pop
nop
mov
jo
sbb
xor
aam
push
jp
xchg
in
mov
or
sbb
add
or
mov
popa
push
pop
dec
xchg
dec
test
adc
pushf
ret
xor
stc
js
lock
stos
rolb
testb
fs
hlt
addb
es
xchg
xor
inc
xchg
imul
jo
cltd
mov
test
add
adc
lock
add
jge
sub
add
add
mov
jge
and
rcr
mov
jge
xor
xor
test
fdivrl
dec
imul
push
int3
adc
cmp
inc
xor
add
sub
movsb
push
add
leave
push
pop
shll
test
mov
push
jns
sbb
adc
nop
jns
rolb
popa
inc
pop
xchg
sbb
dec
inc
data16
push
js
push
mov
and
loopne
add
shrl
fcoml
andl
sub
and
push
sahf
or
sub
jo
add
push
leave
push
xor
push
test
in
xchg
popl
inc
cmp
mov
xor
movsb
pop
push
sbb
icebp
cmp
not
xor
cmpsb
xchg
mulb
xchg
cld
scas
mov
popf
inc
adc
and
jmp
sub
adc
sti
aam
cmp
cltd
adc
shlb
mov
add
mov
mov
mov
xchg
mov
xchg
addb
faddl
fucom
dec
mov
jns
movsl
pop
test
bound
or
jo
call
call
sahf
mov
mov
or
push
popf
jl
pusha
adc
insb
inc
sbb
arpl
sub
dec
je
xor
and
pop
pop
popa
pop
test
mov
cmp
add
and
gs
out
add
mov
push
xor
push
mov
sbb
clc
and
sub
pop
lea
adc
inc
xchg
dec
lcall
pop
jns
mov
xchg
add
lret
dec
gs
or
dec
push
push
inc
pusha
xor
dec
jb
and
jo
sbb
mov
lods
addr16
fcoms
cmp
push
dec
xchg
in
loopne
dec
push
sbb
dec
sbb
movsl
add
stc
sub
sbb
in
sub
sub
enter
xor
push
push
mov
in
orb
xor
pop
popf
xchg
lods
jmp
mov
push
mov
pop
jo
xchg
clc
and
fmull
xchg
sbb
andb
xchg
dec
xchg
push
in
cmp
rcll
add
call
rorl
mov
int3
pop
push
addb
sarb
lret
adc
inc
add
jb
sbbb
lods
dec
loopne
lea
inc
sarb
imul
imul
or
scas
add
add
leave
mov
xchg
or
add
push
stos
push
call
or
test
pop
mov
sbb
and
mov
push
jo
loope
leave
push
add
loopne
loopne
in
sbb
loope
pusha
mov
xchg
sub
mov
loope
push
inc
add
pop
pop
dec
xor
pop
jl
addb
in
loopne
inc
jb
sbb
insb
leave
xchg
sbb
fwait
loope
inc
pop
and
loopne
jecxz
cmp
or
and
enter
sub
xchg
and
andb
and
movups
add
push
insb
mov
push
test
or
repnz
aad
insb
loope
mov
add
sbb
std
std
and
mov
test
jb
add
mov
mov
mov
insb
inc
adc
test
mov
dec
int
jecxz
loope
pop
enter
enter
add
int3
int3
add
movsb
mov
push
loopne
and
push
jb
or
adc
adc
and
adc
call
outsl
xchg
push
and
jecxz
jo
push
in
and
pop
pushf
pushf
mov
mov
mov
mov
pop
orb
loopne
sbb
rolb
loope
andl
push
nop
and
nop
dec
inc
fs
push
xor
xor
leave
mov
sub
sub
inc
outsb
aaa
or
orb
aaa
inc
adc
inc
push
daa
insb
push
and
and
or
add
and
daa
xor
ret
orl
cmp
dec
cs
movb
lea
push
cmp
xchg
jmp
pop
lea
mov
inc
jb
stc
loopne
mov
adc
add
add
test
ret
mov
sub
ret
xchg
lea
sub
jb
sub
cmp
outsl
xor
add
lods
loope
movsb
cmp
and
fdivrs
ret
dec
adc
pop
xchg
pavgw
mov
add
add
pop
adc
inc
sub
mov
rolb
sbb
dec
cmp
xchg
push
and
in
mov
mov
cmpb
mov
mov
orb
jo
mov
mov
add
fiaddl
hlt
adc
and
adcb
xchg
and
sbb
or
dec
xchg
dec
add
nop
je
js
pusha
cmp
sbb
lea
and
xor
orb
sbb
mov
pop
sbb
sti
insl
lods
xchg
fildl
mov
sub
or
add
adc
cmp
lea
mov
ss
add
sbb
sbb
add
aaa
mov
inc
lcall
push
inc
mov
sbb
add
mov
cmpsb
add
jmp
leave
push
add
xchg
insb
inc
add
add
add
mov
mov
jecxz
xor
add
aaa
sti
dec
gs
sub
sti
sti
or
movsb
jb
sti
sti
add
sbb
and
mov
sti
sub
test
nop
mov
adc
add
fisubrl
push
add
subb
adcb
mov
sbb
pop
sbb
lea
push
xor
orl
mov
test
sub
sbb
lea
sbb
int3
loopne
xchg
mov
dec
inc
mov
inc
xchg
and
adc
fildll
sbb
nop
sbb
sub
in
xchg
xchg
in
in
push
add
dec
mov
lods
inc
jb
xchg
mov
nop
sbb
int3
jecxz
loop
mov
mov
loopne
and
leave
mov
lods
add
orl
inc
add
test
testl
sbb
nop
and
mov
subb
xchg
cmp
and
fs
fwait
loope
sbbb
loop
leave
nop
mov
loope
mov
jecxz
aam
sbb
cmp
or
inc
and
sbb
push
inc
loope
push
cmp
add
or
dec
movsb
or
and
dec
rolb
inc
add
dec
mov
push
inc
out
int3
adc
and
inc
jb
add
inc
add
leave
mov
xchg
movsb
push
adc
inc
cmp
test
je
stc
scas
add
and
sbb
sbb
js
or
movsb
mov
sbb
test
jo
push
cs
es
sbb
or
mov
and
shl
push
lods
inc
or
add
and
or
dec
or
sbb
in
movsb
fs
in
push
call
cmp
ret
in
fistpll
xchg
cmp
sahf
mov
sbb
rcll
or
inc
add
and
pop
push
push
mov
pop
and
sub
add
sbb
xchg
add
sbb
or
adc
pusha
in
or
jle
dec
fcompl
pushf
push
mov
jl
xorl
arpl
mov
cmp
mov
xor
mov
dec
adc
and
or
stc
or
mov
stc
xor
lods
loop
and
outsb
adc
pop
movsb
stc
sbbl
daa
pusha
pop
pop
add
int3
push
fmuls
sbb
sbb
lcall
sarb
repnz
loopne
insb
enter
push
sbb
cltd
in
sub
push
and
aaa
xor
mov
js
push
or
stc
lods
and
loopne
pop
sbb
pusha
add
addr16
lea
insb
ret
add
mov
sbb
lods
test
test
adc
fst
mov
adc
mov
ret
les
sbb
les
adc
sahf
mov
ret
movhps
mov
pop
sahf
mov
lds
dec
rclb
sbb
jle
sbb
and
stc
and
fmull
add
addr16
jo
jo,pn
loopne
in
rcrl
rol
add
roll
sbbl
or
or
pop
aaa
xor
lahf
push
or
lods
aam
and
xor
sub
sbb
popf
xor
sub
and
clc
push
dec
repz
xchg
pop
or
add
orb
inc
inc
lods
cmp
add
and
data16
sbb
dec
xor
push
es
xchg
pop
mov
jl
jae
add
sub
dec
sbb
loopne
rcrl
sbb
pop
pop
mov
shrb
outsl
sbb
sub
aaa
shrl
lock
outsb
or
xchg
ja
test
or
add
sbb
jp
adc
mov
sub
mov
adc
loopne
xlat
or
pop
and
mov
cmpb
xchg
add
sbb
jge
and
add
sbb
je
pop
enter
or
cmc
mov
mov
lock
mov
cs
sub
lea
add
sbb
jno
lock
lock
js
in
mov
mov
clc
jge
movsb
loope
movsb
push
call
lods
cmp
push
test
mov
cs
subb
xchg
sub
jmp
fcmovb
mov
popa
or
mov
ds
xor
or
push
push
sub
cmp
in
add
mov
sbb
enter
push
add
adc
or
sub
inc
ret
mov
push
xchg
xchg
sub
cmpsl
fs
mov
or
dec
lods
sub
movsb
movsb
test
inc
xor
mov
xchg
sub
cmp
pushf
js
leave
push
xor
cwtl
xlat
cwtl
jo
cltd
jbe
dec
xchg
and
push
sub
nop
clc
vmovapd
xchg
cwtl
nop
dec
mov
pop
bound
xchg
mov
popa
mov
mov
addb
xchg
sub
push
sub
js
mov
je
sub
js
jo
or
enter
sub
xor
push
push
mov
pop
cltd
in
mov
xor
and
xor
cmc
push
sub
or
push
dec
xor
add
dec
cs
xor
xchg
sub
push
sub
inc
nop
pop
cmp
leave
cmp
fstpt
sub
mov
or
dec
xor
gs
cs
xor
sub
nop
or
xor
sub
sub
push
sbb
sub
pop
push
jp
jmp
addr16
cmp
das
mov
outsb
imul
daa
and
int
cmpl
pushf
push
push
push
in
mov
sti
insl
and
push
push
lock
mov
and
dec
mov
pop
fsubrs
mov
pop
pusha
pop
inc
dec
mov
gs
fdivs
jmp
or
scas
push
and
xchg
or
dec
jl
add
inc
push
jo
in
dec
outsb
inc
lea
mov
ss
aas
cmp
cld
pusha
mov
test
and
sbb
dec
dec
pop
iret
sbb
lea
xchg
test
jmp
mov
xor
mov
push
addr16
dec
sbb
vucomiss
inc
sbb
cld
filds
adc
or
les
std
aaa
sarb
sarb
mov
test
cmp
scas
fwait
rorb
test
fistps
test
adcb
arpl
push
mov
pusha
pushf
es
push
bsf
js
or
stos
lcall
loop
in
sbb
inc
mov
loopne
push
push
andl
push
add
loope
pusha
leave
and
pop
or
xchg
adc
iret
pop
andb
test
push
pusha
pusha
mov
or
push
push
xchg
test
mov
or
mov
adc
push
enter
ret
or
mov
sub
pop
ret
xchg
sub
fiadds
adc
fstl
jge
or
pop
xor
jae
mov
sbb
pop
or
cs
mov
test
imul
pusha
and
mov
xchg
inc
adc
xchg
andb
add
push
test
add
push
jg
push
sbb
jg
daa
or
or
daa
push
sbb
xor
mov
xor
mov
adc
mov
xor
mov
sbb
add
lret
pop
icebp
mov
cs
inc
adc
jno
sbb
mov
push
push
clc
and
ss
sbb
cmpsl
jno
aaa
cmp
ret
stos
add
xchg
maxps
and
pop
inc
pop
or
xchg
mov
and
pop
jl
mov
pop
faddl
mov
lds
adc
sbb
dec
scas
inc
aas
int3
jecxz
adc
adc
adc
dec
push
loopne
mov
mov
mov
inc
cmpsb
js
add
and
pushf
mov
dec
xor
dec
cwtl
mov
dec
scas
or
inc
sbb
pop
repnz
dec
adc
roll
nop
cmpsl
xchg
incb
shrb
loop
pop
sbb
stos
scas
in
arpl
mov
js
test
dec
std
dec
cltd
xchg
pop
jl
nop
adcl
popa
sbb
pop
call
xorl
push
inc
xchg
add
pop
pop
rcrl
nop
push
pop
nop
dec
adc
addw
pop
mov
xchg
sbb
jecxz
mov
shlb
in
xor
pop
mov
adc
jne
adc
mov
sub
sbb
das
in
or
xor
aad
rcll
add
notb
sbb
test
mov
je
cmp
jno
jno
roll
adc
adc
xchg
lods
sbb
pop
sub
push
add
and
sbb
and
xor
or
loopne
faddl
pop
sub
sub
leave
sbb
pop
test
inc
pop
mov
je
and
push
push
fs
insb
and
cmp
xor
loopne
shl
sbb
fisubrs
js
in
pop
fbstp
pop
sub
mov
shll
push
jp
sbb
gs
mov
fsubrp
cmp
dec
dec
sti
inc
adc
push
daa
add
sbb
inc
ja
cltd
inc
jbe
mov
loopne
popa
les
push
jb
jo
xchg
enter
test
enter
nop
jb
and
and
and
mov
rol
mov
or
or
fwait
insl
bextr
je
lahf
adc
add
fisttps
inc
sbb
lds
popa
xor
inc
xor
inc
inc
dec
xchg
inc
repnz
dec
dec
aam
mov
addl
mov
push
sbb
lahf
shrb
mov
out
aas
test
insb
imul
xor
xor
je
ja
popaw
mov
stos
xor
push
js
sbb
dec
inc
outsb
into
imul
imul
jl
sbb
aam
cmp
divl
iret
inc
push
xchg
out
add
push
fs
out
fsubrs
inc
jg
push
js
clc
add
mov
adc
movsb
bound
jo
inc
add
xchg
mov
lock
in
push
lea
dec
dec
mov
ja
scas
fstps
add
ds
es
sbb
mov
push
js
enter
cs
pop
xchg
inc
adc
jle
cld
aas
add
int
aam
inc
rclb
bswap
sbb
pop
popa
repz
adc
fmull
mov
mov
cs
mov
clc
ds
testb
or
lods
pop
inc
out
inc
jbe
push
push
jno
rorb
sbb
push
jle
jg
pop
add
and
dec
cmpsl
outsl
pop
mov
mov
les
je
mov
jg
ds
sbb
ret
mov
aam
mov
rol
mov
shl
sbb
cs
jl
int3
xchg
out
ds
xor
shrb
push
fcomps
scas
or
scas
push
fstpl
outsl
mov
iret
dec
xorb
cmpsb
test
fistps
push
movsb
cltd
xchg
outsl
ljmp
inc
aaa
inc
lock
xor
ret
add
or
add
mov
mov
subl
add
addl
data16
idiv
movb
cs
xor
rolb
pop
inc
pop
inc
sbb
stc
flds
ds
insl
adc
fisttps
data16
xlat
adc
out
fldt
pop
mov
mov
adc
sahf
int
cmp
idivl
loop
mov
out
cld
out
push
iret
sub
xor
js
fwait
mov
adc
dec
mov
fnstsw
jo
mov
cmpb
adc
in
shrl
mov
ljmp
adc
and
call
clc
stc
or
lea
shll
mov
loop
mov
sub
or
pop
insb
or
das
in
pusha
or
mov
mov
mov
inc
add
or
jl
and
xorb
adc
test
in
push
mov
loope
pop
inc
jmp
fsubs
sbb
mov
adc
xor
sbb
mov
sbb
mov
aas
rcll
lea
loopne
in
in
push
pop
es
movsl
xor
ret
andl
popa
call
cmp
cs
div
add
and
fs
pop
aam
std
mov
cmp
icebp
sar
jl
mov
sub
inc
cmp
add
mov
es
push
push
roll
and
fcoms
sbb
mov
into
insl
mov
cmp
das
cmp
inc
in
iret
xor
pushl
xchg
or
push
call
xchg
scas
mov
lahf
pop
push
or
or
and
push
mov
pop
jae
aaa
lcall
xchg
clc
xor
dec
sub
pop
sbb
ja
lods
fwait
test
sbb
cmp
jge
and
mov
inc
mov
cmp
mov
stc
repz
or
mov
sub
popa
xchg
pop
or
adc
out
test
cmp
push
lods
jl
fwait
aas
mov
nop
or
or
adc
sbb
sbb
pushf
push
xchg
and
sub
movsb
jb
js
imul
scas
into
dec
pop
xor
pushf
add
add
es
or
fisubs
push
movsb
xchg
mov
jmp
mov
adc
pop
or
mull
push
or
outsb
mull
jb
fs
pop
jge
pop
test
xor
mov
into
into
int3
imul
fwait
jmp
mov
mov
lock
daa
push
adc
and
cmp
sarl
call
aam
and
arpl
and
shrb
das
or
ja
clc
ja
mov
stc
sub
jnp
test
sbb
pusha
or
adc
jecxz
inc
jns
daa
jns
call
adc
icebp
jmp
loope
ja
je
mov
and
sbb
shrb
push
and
jo
imul
fidivs
ret
add
loopne
inc
notl
pop
sti
cmp
push
shl
xchg
cmp
mov
insb
pop
clc
out
sbb
inc
jne
jmp
xchg
pusha
mov
mov
lds
testb
gs
pop
mov
fcomps
adc
das
mov
call
xor
adc
push
mov
sub
inc
nop
ret
sub
pushf
cmp
xchg
addr16
add
jno
sub
cmp
in
shr
into
notb
xor
push
frstor
xor
out
ret
xchg
loopne
fldenv
xchg
fidivl
and
mov
int3
mov
xchg
es
pusha
ds
pop
add
jns
sub
sbb
std
cld
pop
icebp
xchg
and
fisubs
mov
les
and
pop
and
loopne
es
inc
jl
fdivrs
cwtl
movl
or
sbb
mov
orb
cmp
fildll
mov
adc
mov
filds
enter
sbb
sbb
rcl
sub
jns
sbb
insb
mov
jno
push
mov
pop
add
and
lahf
sub
dec
aam
dec
dec
and
mov
mov
data16
mov
and
jmp
xchg
in
fiadds
loope
imul
sbb
inc
add
ja
mov
outsl
mov
adcb
sti
jle
adc
div
les
cltd
xchg
xor
xor
int3
mov
cmpb
test
test
rcrl
shrl
imul
loope
ficompl
inc
or
pusha
or
sub
cli
push
push
inc
out
sbb
mov
inc
add
mov
cwtl
xchg
in
sti
pop
adc
adc
fidivl
repnz
bound
pop
xchg
sbb
cld
idivb
push
idiv
repz
cmc
push
sub
loop
ret
pop
ja
loopne
mov
and
pop
cmp
sahf
iret
lods
inc
repz
es
loopne
jp
mov
pavgb
lock
addr16
insb
in
adc
psubq
pop
pushf
imul
lea
inc
push
lds
and
jo
fcomp
push
shlb
ja
cmpb
out
pop
xor
adc
in
in
jmp
sbb
and
cmp
sub
stc
pop
fs
test
xor
test
aam
mov
aas
push
add
aas
inc
fwait
call
aas
pop
and
leave
pusha
push
xchg
js
xchg
pop
and
mov
cwtl
mov
and
rorb
pop
leave
inc
loopne
mov
in
lods
add
aas
inc
jb
pop
and
pop
and
leave
inc
pusha
or
jb
mov
pop
loopne
add
aas
jo
dec
cs
mov
dec
inc
lret
xchg
mov
arpl
rclb
orb
add
loopne
push
mov
push
enter
push
or
or
cmp
sbb
sbb
and
and
ljmp
out
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
jg
sbb
dec
add
push
and
pop
add
gs
and
and
add
add
jae
movsb
jmp
xor
fs
fcomps
arpl
jl
aaa
xchg
xchg
push
mov
dec
xchg
icebp
idivl
add
dec
xchg
insb
loope
jnp
test
ret
sbb
aas
std
ja
in
iret
pop
es
js
iret
repz
inc
addb
nop
cwtl
mov
cmp
mov
cmp
repz
call
sahf
out
jge
adc
and
xor
inc
dec
push
jns
out
pop
pusha
push
sahf
out
mov
ss
and
add
fs
in
cs
loopne
repnz
sub
sbbl
or
pop
cmpsl
rcrb
xchg
rcr
mov
adc
shll
icebp
and
int3
xchg
and
insb
outsb
clts
addr16
mov
or
repz
movb
add
and
iret
repz
dec
pop
push
iret
repz
rcl
lock
shr
push
inc
out
cltd
mov
push
call
or
fldt
sub
sub
dec
andl
neg
adcl
pop
jmp
fmuls
sub
xlat
js
inc
jnp
out
pusha
data16
push
sub
xor
push
addb
lret
ret
imul
jg
and
hlt
mov
adc
and
push
sbb
sub
mov
pop
xor
pop
jae
or
rolb
push
call
adc
mov
fcoml
adc
pop
jnp
push
fdivrs
push
call
jnp
aas
cmpsb
lret
and
mov
mov
bound
add
cmp
repz
add
iret
test
mov
into
repz
or
push
adc
push
sbb
sub
sbb
push
adc
repz
insb
or
cmp
repz
or
add
imul
sbb
daa
pop
out
sahf
out
add
push
push
jge
jns
sbb
fistps
nop
repz
ret
push
and
iret
repz
int3
add
repz
inc
aaa
push
add
add
outsl
mov
sub
cmpb
cmp
repz
mov
fs
repz
iret
repz
lods
mov
fwait
loop
cmp
out
or
mov
cmpb
add
cmp
incb
mov
add
or
or
jnp
dec
or
punpckhdq
pop
bound
add
jle
imul
adcb
sbb
out
mov
icebp
out
ret
or
ret
sbb
cmp
fildl
cmp
add
sbb
xchg
cli
cli
xchg
rolb
insl
xlat
jno
mul
cmc
sub
push
std
cmc
out
scas
fnstcw
dec
push
pushf
cs
clc
fcoml
push
cmc
cmc
pusha
cli
jmp
mov
pop
fidivs
movsb
call
clc
mov
outsl
cmc
mov
in
loopne
aam
out
aad
out
cltd
jbe
fisubrs
push
push
push
dec
sub
fidivrs
test
pop
sti
push
cmc
jle
pop
mov
cmp
push
in
or
enter
inc
por
jg
aad
fidivrl
stos
loopne
mov
hlt
aad
push
jl
ds
push
mov
lods
int
pop
sahf
push
cli
xorb
rorl
jg
pop
inc
push
addr16
sti
fldenv
mov
mov
mov
in
shrb
mov
outsb
dec
mov
dec
outsb
push
lock
jge
lahf
cmpsb
inc
int3
mov
and
sub
xor
push
sub
aas
lahf
jg
adc
push
jmp
mov
out
call
stos
add
rolb
mov
cmpxchg
and
or
scas
mov
cld
push
nop
out
nop
dec
fadd
iret
aas
jmp
aam
push
mov
inc
fisubl
daa
push
push
jl
je
imul
cs
add
or
cmpsl
dec
inc
push
jl
cmpsb
push
cwtl
sti
vpsadbw
adc
data16
add
cmp
jno
lahf
loopne
aas
push
mov
mov
push
imul
push
mov
movsb
mov
out
rcrb
mov
cli
lcall
mov
fimull
and
pop
sub
scas
out
cs
push
loopne
pusha
push
mov
fdivrs
out
nop
push
fs
in
stos
ja
adc
push
add
push
dec
mov
loopne
dec
rorl
push
inc
loopne
test
filds
cmpsl
sub
mov
jle
fucomi
sbb
imul
dec
lock
push
sbb
jo
pop
into
sarl
pop
jmp
aas
push
pop
sahf
mov
lock
pop
jnp
rorb
push
mov
nop
cmp
rcll
push
ds
cmp
adc
cltd
xor
nop
push
out
iret
icebp
jnp
test
mov
rorb
adc
pop
adc
cs
mov
loop
ffree
push
lods
outsb
shrl
push
xchg
sub
dec
push
lahf
push
push
call
jl
mov
mov
out
xorb
in
xlat
lods
push
fidivl
sahf
push
frstor
mov
fsubrs
dec
imul
scas
push
mov
fdivrp
push
jnp
jae
imulb
dec
push
ja
cltd
scas
aas
push
pop
scas
push
fcom
add
inc
orb
imul
jo
test
cmc
add
fistps
push
imul
lahf
std
sbb
mov
scas
push
jae
xor
faddl
sahf
push
test
push
loop
add
push
das
cmp
sbbl
and
iret
rcrl
inc
jg
add
sahf
out
mov
push
enter
push
loopne
cld
cmp
sarl
sbb
cmp
repz
pop
xor
pop
cmp
repz
push
icebp
mov
ffreep
add
mov
add
push
std
and
fwait
add
sbb
add
fcomps
inc
shl
fcoms
inc
sub
and
inc
test
pop
push
mov
xor
or
and
outsl
and
mov
pop
inc
pusha
test
add
mov
add
add
movsl
mov
xor
or
and
jp
jns
mov
pop
or
nop
pop
hlt
mov
sahf
notb
dec
or
out
sahf
out
cli
cmp
dec
sahf
out
sahf
clc
pusha
divl
jns
out
cmc
pushf
hlt
mov
out
sahf
out
repnz
call
lock
out
adc
cmp
xor
dec
jmp
daa
iret
repz
ljmp
lds
xchg
and
ret
aad
pop
fisubrl
or
aaa
addr16
loop
push
mov
iret
rorl
bound
scas
rorl
or
add
jns
testb
movb
inc
push
out
sahf
out
jo
cwtl
lods
lahf
out
sahf
mov
add
cmp
repz
sub
dec
pop
repz
repz
fiaddl
lahf
out
pop
aad
inc
rorb
mov
das
adc
adc
pop
adc
mov
scas
jnp
jne
add
push
xchg
test
pop
inc
pop
cmp
jnp
int
xchg
stc
mov
mov
sti
cld
std
iret
repz
incb
add
subb
cmp
addl
xchg
jg
outsl
mov
mov
addr16
or
mov
out
rcr
enter
pushf
loopne
mov
jne
and
aam
mov
and
cs
dec
add
push
inc
pop
fwait
leave
lahf
inc
mov
cmpsl
es
jb
and
xor
mov
insb
scas
add
gs
cmp
xchg
cmp
push
insb
dec
inc
cwtl
dec
pop
imul
and
outsl
cmp
repz
adc
pop
repz
repz
and
xor
repz
cmp
arpl
inc
ret
cwtl
jecxz,pt
mov
mov
addb
das
and
pop
movl
mov
jb
xor
ror
pop
pop
pop
or
ja
push
and
inc
popa
xor
sarl
lahf
add
jns
out
add
or
out
sahf
adc
and
inc
lds
xchg
pop
daa
daa
daa
daa
or
or
outsb
daa
daa
daa
or
or
jmp
inc
push
or
push
ds
das
jo
addr16
jl
inc
out
sbb
pusha
mov
mov
outsl
push
addb
jg
jns
pushf
pushf
pop
sbb
in
cmp
cmp
jns
push
adc
in
in
cmp
dec
aas
add
add
daa
daa
mov
pop
push
push
jecxz
sub
daa
daa
daa
enter
dec
cmpsb
sub
inc
dec
cmpsb
loopne
aas
call
jb
sub
cwtl
push
jl
pop
jno
cmp
aas
pop
insb
jb
popf
pushf
sub
pop
or
mov
leave
in
jbe
aas
clc
incl
push
jb
jb
adc
mov
jb
xor
or
jbe
jb
movsb
add
adcb
in
pop
pop
leave
leave
add
incl
leave
leave
leave
leave
cmp
adc
fcmovne
leave
sub
outsb
mov
aas
hlt
incl
mov
xor
in
in
ss
paddsw
in
data16
push
mov
leave
xchg
in
decl
pop
xchg
or
push
aas
pushf
jmp
xchg
xchg
xchg
jle
fcompl
mov
xchg
xchg
outsb
cs
test
daa
dec
aas
cld
call
test
cmp
incl
cmp
xor
popa
daa
mov
xchg
and
cmp
lcall
xchg
xchg
or
xchg
jns
cmp
mov
mov
jbe
cmp
jns
mov
adc
cmp
lret
xchg
or
stos
test
daa
mov
jne
or
cmp
nop
xchg
xchg
jge
fisubrl
cmp
cmp
popa
mov
jbe
aas
cli
dec
xchg
mov
mov
inc
pushl
mov
xchg
xor
dec
and
cltd
imulb
cmpsb
pop
mov
leave
inc
jne
lcall
pushf
pushf
pop
enter
leave
leave
leave
test
mov
mov
fisttpl
jnp
jb
pushf
pop
push
pop
ja
pop
jb
aaa
into
addr16
dec
outsb
daa
daa
scas
pop
ja
fnstsw
out
lcall
daa
daa
pop
jb
jg
fidivs
jb
outsl
das
mov
jg
dec
es
inc
mov
loope
and
mov
icebp
leave
cltd
dec
es
test
fs
mov
stc
lds
in
dec
es
xchg
aad
mov
dec
es
mov
cltd
popf
frstor
dec
es
mov
cltd
dec
mov
mov
cltd
mov
es
mov
jmp
and
es
mov
es
cmpsl
es
mov
xlat
and
mov
scas
and
es
mov
jmp
xlat
call
pmaxub
inc
std
mov
push
add
aas
pop
add
push
pop
mov
jg
pop
add
icebp
push
add
push
push
testl
pop
push
sbbl
shlb
incl
sbbl
push
enter
popa
jg
incl
or
xor
xor
or
mov
pushf
aad
xchg
inc
and
or
jns
and
push
cmp
xor
addb
inc
push
sahf
add
jne
xor
jp
jbe
mov
out
add
rclb
jae
sub
cltd
lods
mov
pop
and
inc
add
mov
add
sub
lea
sbb
pusha
test
gs
andb
movsb
sub
test
in
dec
adc
arpl
pop
adc
inc
out
int
push
scas
add
inc
add
nop
pop
inc
inc
arpl
mov
gs
xorl
pop
outsl
lret
adc
push
or
fcoms
shll
jmp
arpl
mov
nop
mov
fistps
fdivl
mov
sub
cmp
clts
pop
aas
jg
jns
out
inc
ljmp
daa
lock
jg
mov
inc
or
mov
ret
inc
mov
arpl
add
adc
sbb
adc
add
out
lods
add
in
cmp
adc
xor
jbe
cs
xor
cmp
daa
inc
mov
cmp
mov
gs
in
adc
cmp
rorl
push
sbb
cmp
je
int
jmp
mov
mov
rorb
xor
int
fsubl
xor
mov
push
dec
imul
test
gs
subb
mov
dec
pusha
and
rorb
mov
mov
stos
push
scas
push
daa
adc
push
and
push
mov
cmpsl
lret
cmp
push
dec
mov
or
je
js
and
mov
je
mov
mov
adc
add
ds
cmpsl
aam
jne
mov
pop
sbb
push
ss
scas
mov
push
xor
fwait
mov
push
sub
mov
das
insb
andl
test
cmpl
rolb
ss
adc
or
fwait
insb
push
and
pop
fnsave
mov
add
add
pusha
mov
jnp
inc
mov
fstl
inc
pop
imul
test
sbb
fstpl
or
add
mov
and
enter
sub
repnz
out
xchg
adc
add
ret
mov
and
fisubrl
sub
in
popf
sub
rorb
inc
rcll
jae
jmp
lea
dec
iret
mov
push
das
or
fstps
pop
add
unpcklps
adc
pop
rcr
jne
adc
pusha
xor
push
out
xchg
ss
dec
scas
popa
pop
add
test
pop
mov
mov
and
arpl
mov
or
pushf
mov
out
insl
ret
fldenv
xchg
repnz
xchg
jecxz
and
add
lock
pop
clc
xchg
xor
add
fsubrl
jb
je
daa
enter
mov
mov
xor
test
gs
sub
xchg
in
out
xchg
and
jns
jmp
push
pusha
testb
dec
adc
xchg
pop
in
imul
adc
and
loopne
xor
lock
sub
cmp
loop
jmp
add
or
int3
cmpsb
mov
clc
insw
gs
sub
aam
pop
pop
pusha
cltd
sub
orl
stos
sub
mov
enter
pop
ja
outsb
insl
popa
xchg
insl
in
add
shrl
cmp
enter
test
cwtl
lds
pop
ficoml
jmp
addl
cmp
iret
cmc
loope
sti
nop
add
inc
pop
push
sbb
iret
repz
xor
dec
pop
repz
repz
mov
lods
mov
decl
cmp
enter
pop
outsl
imul
in
jecxz
ret
and
fisttps
lods
or
notb
cmovg
out
push
sub
iret
repz
pop
je
cwtl
repz
rep
mov
aam
out
sahf
out
xchg
and
pop
sahf
out
sahf
jo
mov
dec
repz
add
adc
repz
repz
pusha
je
mov
mov
cwtl
repz
repz
cmp
jo
iret
repz
cwtl
movsb
mov
out
or
jns
out
adcb
lahf
out
lock
sbb
iret
repz
dec
pop
je
test
imul
cld
push
fwait
push
sub
jns
out
dec
push
jns
pushf
mov
aam
add
cmp
repz
and
push
fs
repz
test
fsub
jns
iret
in
add
out
sahf
push
push
cmp
out
fsubr
add
iret
repz
fs
test
repz
mov
lahf
pop
repz
repz
xor
fs
out
cmp
lods
fdiv
add
sahf
out
sahf
sbb
push
fs
sahf
out
mov
out
out
or
pusha
jns
out
insb
mov
out
call
iret
repz
inc
push
push
iret
repz
shl
clc
or
jns
out
sbb
pusha
jo
jns
out
mov
sahf
ja
lock
movb
inc
push
out
sahf
out
adcb
in
adc
iret
repz
nop
mov
loopne
sahf
out
hlt
adc
xor
pusha
out
sahf
out
mov
sahf
out
add
push
insb
out
sahf
out
xchg
test
aam
fidivrs
call
push
and
out
sahf
out
fs
pushf
lahf
out
sahf
test
shl
cld
adc
and
pusha
js
cmp
repz
out
ds
in
adc
repz
repz
insb
andb
shl
hlt
add
sahf
cmp
mov
mov
push
push
sahf
out
sahf
xor
test
enter
lods
repz
shll
cmp
iret
repz
mov
sahf
out
add
jns
out
sbbb
out
hlt
or
cmp
dec
fs
cwtl
movsb
lcall
add
sbb
out
sub
pop
jo
out
sahf
out
lods
enter
repz
or
cmpb
cmp
lods
rcl
iret
repz
sti
lock
mov
sub
pop
cmp
repz
test
out
repz
mov
mov
cmp
repz
adcb
fsubr
add
adc
out
sahf
out
dec
fs
sahf
out
sahf
cwtl
lods
rcr
cld
cmp
sarl
sub
push
pop
repz
repz
xchg
movsb
mov
stc
cmp
enter
mov
sahf
out
sahf
sub
pop
jo
nop
jns
out
pushf
mov
aam
repz
out
or
repz
dec
pusha
js
test
mov
loopne
add
pushw
iret
repz
and
dec
pop
insb
cmpb
cmp
movsb
mov
fdivrs
out
lock
jns
out
insb
adcb
mov
mov
out
and
dec
pusha
jo
out
sahf
sbbb
dec
repz
or
cmp
repz
fs
mov
mov
fsubr
cld
adc
out
lcall
jns
out
adcb
lahf
out
hlt
or
sbb
iret
repz
cmp
adcb
rcl
iret
repz
repz
add
inc
cmp
repz
fs
xchg
repz
rep
mov
shl
out
lcall
cmp
out
sahf
dec
pop
insb
jl
mov
mov
int3
loopne
jns
cmpsl
fldenv
push
or
xor
jns
out
fs
nop
lahf
out
sahf
mov
add
cmp
repz
sub
push
fs
repz
pushf
mov
mov
in
shrl
sub
cmp
repz
js
repz
nop
movsb
mov
fdiv
sahf
out
ds
adc
push
jns
out
insb
test
out
cld
adc
sub
iret
repz
pop
je
pushf
mov
repz
repz
in
add
pop
push
sub
repz
cmp
fs
mov
mov
in
or
jns
out
sbb
cmp
pusha
out
sahf
out
adcb
sahf
enter
and
cmp
repz
fs
movsb
stc
cmp
repz
enter
cmpsl
and
dec
push
sahf
nop
mov
leave
out
sahf
ja
push
sub
push
fs
out
sahf
adcb
repz
or
sub
repz
repz
mov
iret
fdiv
add
sbb
sahf
out
sahf
cmp
adcb
int3
call
imul
push
jl
mov
jns
aam
hlt
add
adc
cmp
repz
push
push
iret
rep
mov
or
cmp
jns
out
je
mov
iret
sarl
hlt
adc
xor
ds
repz
test
in
sarb
out
and
mov
int3
call
iret
repz
push
lock
out
ds
and
push
push
jl
movsb
mov
out
hlt
or
cmpsb
push
cmp
jns
out
fs
mov
jns
out
adc
adc
xor
jns
out
pop
je
movsb
dec
repz
mov
sbb
cmp
repz
test
ror
cmp
repz
lock
or
mov
push
and
inc
push
or
repz
push
cmp
mov
mov
out
loopne
clc
add
iret
repz
adc
xor
dec
mov
repz
fs
xor
lcall
adc
xor
cwtl
inc
mov
and
and
mov
xor
fimuls
mov
dec
xchg
fisubl
push
test
cwtl
push
ja
pushf
testl
sub
out
cmp
push
inc
xchg
xor
cli
xor
jo
cmpsl
inc
ds
mov
sahf
ss
push
sub
push
nop
mov
pop
mov
dec
call
push
insb
push
push
dec
ss
into
js
dec
pop
sti
dec
aam
push
and
pop
ror
out
add
add
xchg
or
mov
push
call
sbb
pop
xchg
push
mov
sbb
dec
pop
out
mov
jo
dec
orb
negb
push
sub
je
add
push
fcompl
inc
dec
call
int3
inc
js
shll
ds
sbb
mov
inc
adc
push
clc
ss
xchg
loopne
scas
mov
push
sub
fcomps
dec
out
pop
dec
call
sbb
mov
lock
fmuls
data16
cmp
mov
es
cmpsb
sub
mov
push
rolb
push
clc
into
fadds
inc
dec
testl
or
mov
pushf
xchg
add
hlt
jbe
xchg
or
cmp
adc
nop
fdivp
fidivrs
mov
in
jl
dec
rorb
cmpsb
or
mov
sub
enter
loope
sbb
sub
inc
jns
push
push
inc
mov
out
loope
mov
call
out
xchg
jl
mov
push
cmp
push
mov
loope
push
lock
dec
cmpsl
mov
pop
mov
jo
cmp
push
sbb
jecxz
jbe
push
xor
pop
sbb
pop
cmp
pop
pop
push
or
pushf
push
pusha
pop
adc
out
fidivrs
lock
cmp
inc
mov
ja
lock
mov
mov
mov
movsb
imul
fnstsw
loopne
loopne
cmp
mov
cmp
push
into
jecxz
jo
add
fimuls
pop
mov
adc
xchg
sahf
jnp
adc
int3
es
lods
jo
jo
jle
into
add
enter
jo
mov
out
and
xchg
sbb
outsb
data16
mov
movsb
je,pt
inc
test
mov
call
into
push
out
sbb
into
aam
adc
lock
jnp
xor
push
mov
loopne
roll
cld
orb
cmp
subl
jle
dec
push
and
std
xor
pop
add
scas
cmp
cmp
jl
pop
jnp
push
fidivrs
loop
dec
pop
ds
ss
push
and
and
sarb
movsb
mov
out
mov
jno
ficoms
dec
call
dec
test
rcl
mov
shlb
out
pusha
sti
js
fcompl
add
push
dec
div
pop
les
and
mov
push
jp
pop
push
mov
call
mov
jbe
mov
js
push
nop
push
pushf
xchg
test
rol
xchg
sbb
mov
dec
or
push
push
enter
loopne
out
lods
mov
mov
loop
pusha
push
fsubr
jl
pusha
into
inc
fidivrs
shlb
mov
addr16
pushf
jg
mov
inc
jbe
jmp
mov
dec
push
xchg
sti
outsb
or
jbe
xchg
ss
neg
sarl
ficoms
pop
jo
mov
ds
mov
mov
ds
dec
xor
xchg
mov
lock
mov
push
sub
rol
je
les
dec
mov
in
faddl
inc
add
jbe
out
rcl
neg
xor
rorb
test
jo
cmp
mov
mov
mov
add
incl
mov
cs
dec
js
fs
loopne
mov
testb
sbb
cmp
scas
nop
or
imul
push
jge
sahf
fsubs
js
out
gs
ds
push
hlt
cmp
fiadds
add
push
pop
push
mov
je
loope
pop
cmp
sub
or
js
xchg
call
dec
lods
xchg
sub
or
mov
addb
pop
inc
push
and
adc
leave
and
add
addr16
les
adc
adc
popf
push
inc
adc
addl
push
xorl
and
add
add
inc
push
outsb
aaa
mov
dec
push
add
fdivp
add
pop
inc
sbb
inc
and
fistpll
push
and
pop
dec
aaa
push
pop
dec
add
out
mov
and
adc
mov
jne
dec
xchg
push
or
push
inc
insl
in
jbe
mov
dec
dec
add
es
mov
push
inc
cmp
mov
fnstsw
fcoms
or
inc
push
xor
js
dec
dec
inc
xchg
push
add
scas
shl
dec
xor
or
cmp
push
sbb
xlat
inc
dec
push
pop
push
aaa
push
xchg
mov
ror
add
inc
sarl
dec
mov
dec
push
sub
scas
ret
xchg
or
jle
cmpl
push
xchg
xor
or
or
cmpsl
pop
and
inc
add
jecxz
add
test
add
add
iret
lock
push
sbb
subb
mov
sbbb
xchg
add
sar
pop
mov
cld
jg
clc
aas
push
jns
sahf
das
pop
jmp
rol
dec
repnz
ss
or
push
aas
jg
shlb
icebp
add
adcb
popf
and
add
inc
aaa
in
ret
or
mov
mov
ret
pusha
or
roll
mov
sti
lcall
jle
insb
mov
xorb
out
push
ficompl
iret
shr
cmp
xchg
pushf
pop
loopne
lock
push
sbb
push
aas
pop
cs
mov
aas
pop
xchg
add
lock
jae
fwait
pushl
push
pop
std
cmp
push
fnstsw
add
jl
testl
jle
mov
jl
rolb
push
cmpsl
out
pusha
bswap
shlb
or
lock
lcall
or
cmp
xor
into
fwait
mov
jg
add
add
cmp
add
lahf
aas
xchg
or
subl
sbb
adc
and
cmp
clc
daa
add
add
xorps
ja
ds
pop
outsl
add
stos
aaa
inc
std
push
clc
stos
xchg
int
lock
aas
rcrb
dec
divl
push
inc
pop
outsl
or
popl
adc
adc
inc
cmp
insb
push
jnp
add
xlat
pop
sbb
mov
nopl
and
pop
add
popa
inc
xchg
ss
out
pop
in
les
test
neg
inc
aas
nopl
pusha
roll
roll
adc
int3
pop
cld
pop
cmp
faddl
test
cs
cmpsl
xor
mov
lock
jo
cmp
inc
addb
inc
jge
fwait
int
or
push
sbb
push
sub
inc
add
mov
insb
inc
add
inc
shll
mov
sbb
push
push
sbb
outsl
push
shlb
jl
mov
push
xor
notb
clc
fcompl
jl
data16
push
sbb
push
sbb
or
test
shlb
loopne
shl
xchg
cmpsb
add
inc
movsl
add
add
or
orb
adc
add
and
add
rcrl
and
xchg
inc
fiadds
mov
cmp
xorl
repz
daa
sbb
cmp
fcompp
repz
and
daa
and
gs
fprem
xor
lahf
and
daa
and
out
push
adc
cmp
clc
dec
push
mull
mov
daa
xor
fsubrl
mov
push
andl
mov
sbb
ja
dec
addl
divl
lds
push
daa
ret
mov
sbb
push
add
jb
xchg
or
ret
jg
adc
add
xor
ja
aas
xchg
xorl
and
xorl
pop
ret
and
daa
inc
push
fidivrs
pop
movsl
daa
dec
sub
aas
push
imul
xor
mov
dec
sub
jbe
loope
pop
aas
jns
dec
and
ja
cmp
es
and
mov
and
and
cmp
idivl
mov
pop
push
mov
data16
push
fs
outsl
jnp
push
xlat
push
lret
push
or
mov
push
or
push
xsaves
mov
mov
daa
mov
hlt
cwtl
sahf
daa
xor
mov
mov
push
xchg
adc
decb
inc
inc
inc
or
cltd
std
test
mov
scas
dec
push
pop
es
sub
daa
xor
aad
push
push
dec
fidivrs
sub
pop
daa
mov
adc
dec
out
in
push
fcoml
cmp
push
aas
add
clc
addr16
or
xor
outsl
daa
or
pushf
or
push
jne
aas
add
mov
filds
ss
arpl
popa
jecxz
pop
daa
ds
shll
rclb
clc
add
adc
jbe
daa
lahf
cmp
or
out
cmp
dec
fs
loopne
pusha
or
daa
loopne
bnd
out
aas
daa
dec
fnsave
cmpsl
dec
inc
inc
es
fldenv
jb
daa
dec
add
ret
inc
jle
xor
in
repz
fsubrs
push
test
adc
fnstsw
inc
xor
jnp
pop
rcll
movsb
adc
es
mov
aas
daa
xor
sbb
mov
daa
aas
das
ss
in
es
bound
in
cmp
push
inc
sub
push
daa
xor
mov
adc
outsl
cmp
bound
data16
inc
push
int3
inc
push
xlat
shlb
mov
lock
daa
je
stos
inc
aas
call
aas
clc
daa
fsubrs
jo
pop
pop
lock
add
or
xor
dec
sbb
in
and
es
xor
ja
sub
xchg
repz
adc
and
mov
sahf
js
data16
sub
cmp
sbb
mov
xchg
mov
sbb
sbb
dec
jl
daa
adc
fnstcw
fstps
dec
clc
or
sbb
xchg
fcoms
daa
jbe
jnp
dec
xor
dec
xor
dec
daa
jecxz
mov
dec
daa
dec
daa
clc
dec
mov
pushf
adc
sarb
dec
jl
mov
dec
rorl
cmp
sbb
int
push
lahf
mov
xor
cltd
or
sbb
test
add
stos
outsb
adc
inc
and
ss
and
cwtl
repz
xchg
xchg
movsb
aaa
mov
lret
jae
or
dec
jb
rcrl
les
outsl
inc
mov
arpl
cltd
sbb
lock
shll
loope
out
push
test
daa
std
jne
or
inc
xor
cmp
pop
xchg
pusha
cmp
orl
mov
or
mov
daa
fistl
fisttpl
aaa
and
pop
cwtl
jns
daa
and
mov
jbe
stos
sub
sbb
mov
fstl
jbe
xchg
adcl
daa
es
and
stc
es
sbb
inc
push
lahf
xor
fldenv
xchg
pop
dec
incl
mov
stos
mov
rorb
push
aad
lds
addl
pop
pop
je
jo
adc
jg
insl
inc
int3
add
emms
mov
jo
pop
push
pop
jg
mov
fnsave
add
pop
push
ja
sub
shlb
sub
adc
js
jnp
pusha
inc
or
ja
or
sti
rorl
jl
movswl
lea
data16
or
add
mov
sbb
add
ud2
jnp
cmp
add
add
pop
data16
fs
mov
and
lock
jae
adc
scas
pop
pop
sbb
outsb
pop
add
divb
dec
movq
testl
pop
sub
aas
add
cmpsb
adc
xchg
mov
jg
rcl
jo
outsl
add
aas
ja
aas
push
and
cmp
sbbl
pop
cmp
cmp
cld
int3
iret
popl
or
outsl
stos
adcb
aas
jg
cs
mov
mov
js
pop
jo
adcb
jg
pop
mov
or
mov
mov
rolb
add
push
outsb
int3
pop
adc
cmpsb
test
incl
add
xor
jo
jo
pop
ja
mov
jg
pop
push
or
xor
mov
xchg
and
cli
and
and
out
push
imul
imul
xchg
xor
sbb
add
out
mov
jns
inc
push
fs
pop
push
ret
fisubrs
arpl
sbb
rcr
dec
add
push
insl
mov
insb
add
and
jnp
jp
inc
outsb
imul
mov
mov
add
inc
add
shr
fbstp
aas
sub
jne
mov
pop
outsl
push
outsl
inc
sub
addl
jno
jae
insl
adc
ja
subl
ret
js
adcb
xchg
mov
xor
cmp
inc
cmp
ret
mov
xchg
dec
outsb
scas
arpl
outsl
fsubrs
mov
pushf
sarl
fistps
loope
out
push
sub
scas
and
js
mov
push
pop
jnp
fisubrl
data16
insb
mov
ja
push
aaa
data16
mov
roll
test
sbb
add
mov
jecxz
sbb
jne
ret
cmp
pop
sub
and
clc
sbb
xchg
arpl
sub
ja
jb
lcall
inc
insb
lahf
sbb
gs
loope
jnp
xchg
shll
pop
push
pop
jg
out
negb
inc
pop
mov
mov
outsl
cs
arpl
loope
imul
xchg
insb
adc
mov
push
daa
repz
or
cltd
xor
gs
andb
push
push
dec
adc
mov
rcrb
pop
and
clc
pop
outsl
repz
dec
js,pn
push
cmp
push
js
pop
xor
ds
adc
fidivrs
fbld
imul
dec
daa
call
ja
outsb
jg
push
bound
sti
mov
data16
mov
sbb
mov
ja
jo
outsb
jnp
lds
inc
aaa
bound
aad
mov
jae
push
jge
and
pop
xchg
sbb
mov
and
enter
insl
ret
cmp
jbe
imull
pusha
shrl
push
outsl
jl
subb
push
inc
or
sub
pusha
push
bound
mov
lods
imul
shrb
and
pop
in
das
iret
pusha
shll
addr16
stos
jecxz
add
mov
jb
imul
mov
shll
mov
xor
add
mul
add
arpl
fdivl
iret
fwait
fs
add
add
sub
call
scas
loopne
mov
fistps
xor
xlat
and
pop
imul
test
xchg
push
dec
les
movsl
and
pop
arpl
jae
mov
inc
xor
roll
jne
shlb
imul
pop
add
mov
xchg
ret
ds
push
dec
adc
rorb
and
push
adc
inc
adc
loope
sub
jge
push
pop
cli
dec
jae
das
or
add
mov
loop
jnp
sbb
out
jae
sub
roll
sbb
fucomip
sbb
and
loopne
mov
and
xlat
mov
addr16
fdivs
jne
arpl
aad
xchg
outsl
xchg
dec
ss
scas
inc
arpl
sbb
add
jmp
imul
xor
insb
pop
es
mov
dec
mov
or
push
fildl
cmp
mov
repz
test
fcompl
scas
dec
aad
jb
sub
cmp
push
sub
das
cmp
sub
adc
mov
ds
add
sti
pop
cmp
adc
inc
fwait
mov
lods
pusha
inc
push
jecxz
adc
fcom
cmc
xchg
sbb
push
adcl
loop
fistpl
mov
or
jg
cs
aas
push
ss
popa
pop
loop
push
pushf
cwtl
subb
addr16
mov
cmp
cmp
das
push
xor
push
or
mov
sub
fwait
jmp
mov
adc
add
outsl
adc
push
popa
mov
lret
inc
and
inc
push
lea
addr16
fs
and
aas
inc
pop
mov
shrb
pop
xchg
mov
sub
push
dec
cmpl
xchg
mov
adcl
mov
xor
pop
jae
push
mov
dec
xchg
and
es
stos
imul
sub
pop
sbb
add
mov
xor
and
out
mov
imul
orb
inc
insl
mov
pop
lret
lods
fucomi
mov
sub
jne
lea
insb
sti
push
lea
adc
and
xor
into
bnd
pop
rcrb
outsl
adc
outsl
pop
ss
andl
pop
xchg
aaa
je
pop
outsb
lcall
pop
sub
dec
jb
orl
mov
or
xchg
adc
sbb
loope
push
mov
jae
dec
pop
dec
add
dec
add
push
arpl
pop
sbb
xchg
dec
or
and
push
les
xchg
push
mov
push
roll
dec
outsl
pop
or
outsb
and
sub
dec
xor
lret
or
enter
fs
dec
out
sub
xchg
pop
pop
stos
xchg
push
pop
push
ja
lcall
pop
sub
push
jo
inc
sub
jg
mov
mov
mov
mov
push
jae
adc
and
ret
out
add
inc
xlat
jecxz
test
loopne
add
data16
shll
xchg
adcl
jg
or
xchg
mull
mov
stos
ss
xorb
xor
lea
orb
outsl
je
imul
jp
cwtl
jecxz
out
cmpsl
insl
ja
inc
es
xchg
push
cmp
push
outsl
clc
mov
inc
bound
adc
data16
adc
stos
xor
sbbb
xchg
mov
mov
and
jo
outsb
test
mull
xorb
testl
jmp
pop
int
xor
sbb
push
and
lret
adc
cmpsb
out
adc
xchg
add
push
sub
and
mov
push
sbb
push
inc
ds
inc
xchg
lahf
cmpsb
jae
and
loop
or
outsl
lahf
fwait
mov
pop
jne
scas
je
mov
xchg
sub
out
test
jnp
arpl
addr16
inc
sub
mov
dec
mov
or
aas
fs
sbb
and
mov
push
cmpsl
inc
add
sbb
arpl
inc
jl
cmp
arpl
fistl
sbb
imul
push
cwtl
jg
lcall
pop
lret
pop
mov
lds
and
sbb
push
insl
arpl
je
push
jecxz
push
mov
and
jecxz
lods
fadds
sbb
and
or
pop
dec
arpl
push
aad
mull
rcrl
cmpsb
test
jo
inc
mov
sub
mov
cmp
push
and
dec
adc
mov
int3
js
scas
add
aaa
int
cmp
add
push
push
adc
jmp
push
push
negl
jle
push
adcb
pop
or
ja
dec
pop
loop
cmp
and
push
testl
js
add
sub
or
pop
sbb
arpl
mov
out
ret
stos
add
push
sub
add
shlb
lret
sbb
ret
dec
mov
sbb
cmp
std
mov
or
insl
add
sub
imull
lock
lea
imul
push
pop
sub
dec
pop
adc
sub
xor
mov
adc
dec
dec
pushf
mov
add
pop
ljmp
insl
js
les
push
subb
pop
jl
rorb
je
jo
push
test
roll
fwait
outsb
subl
in
enter
imul
aas
dec
mov
cmp
dec
or
push
inc
adc
arpl
push
in
rolb
in
test
pop
or
or
sub
pop
out
test
and
imul
scas
outsl
push
inc
and
pusha
pop
pop
cmpl
aaa
add
mov
jo
inc
imul
stos
inc
lret
mov
aaa
ret
sub
ret
xor
inc
mov
jmp
push
ret
inc
push
pop
push
mov
cmc
sub
mov
mov
outsb
daa
dec
out
and
subl
sbb
notb
push
push
sbb
adc
pop
mov
sub
pop
mov
jbe
pop
mov
mov
lret
push
inc
mov
sub
and
andl
shlb
addr16
hlt
add
outsl
test
jg
insl
adc
aaa
xchg
cmp
push
sub
bound
push
daa
inc
lds
jae
xlat
xor
stos
add
ret
add
dec
xor
imul
mov
je
sub
sti
push
jmp
stos
and
das
aas
insb
daa
sub
bound
sarl
xchg
pop
inc
pop
xchg
arpl
aas
daa
aaa
xchg
rolb
mov
pop
pop
and
call
mov
fildl
fwait
jmp
je
sbb
shll
pusha
and
jbe
in
test
push
out
bound
mov
xchg
push
sti
pop
sbb
or
or
pop
push
rolb
fstpt
and
sbb
inc
or
push
mov
or
sbb
test
scas
mov
fimuls
inc
inc
mov
jl
call
or
loope
not
loope
mov
arpl
mov
lahf
mull
test
mov
mov
xchg
push
cwtl
scas
aad
scas
sub
and
popa
les
jecxz
arpl
rcll
movzwl
bound
shlb
cmpsl
imul
sub
or
ss
add
sub
insl
push
xor
ja
gs
rcll
addl
pop
xchg
das
xchg
ret
add
ficoml
mov
push
adc
mov
mov
push
sub
js
sub
ret
pop
sub
dec
push
or
pop
inc
xlat
aas
xlat
push
lcall
ret
mov
inc
lahf
jo
shrb
xchg
or
jae
mov
insb
dec
and
ss
daa
imul
jecxz
xor
mov
add
mov
arpl
pop
mov
lods
lcall
xor
push
mov
jbe
imul
addr16
aam
cmpsb
roll
pop
push
add
and
jae
sub
dec
add
daa
data16
pusha
add
repnz
inc
arpl
movb
movsl
push
pusha
jo
ret
rcrl
arpl
pop
stos
ret
push
sub
push
mov
and
pop
ljmp
ret
outsl
test
adc
ret
adc
push
sub
dec
shl
outsl
test
out
out
mov
pop
loopne
shlb
mov
and
aam
ret
shll
pop
mov
daa
and
insb
inc
sbb
rcll
mov
mov
or
dec
les
addr16
jg
and
ret
stos
inc
push
dec
xor
mov
mov
mov
inc
cmp
adc
adc
leave
inc
sbb
push
add
adcl
push
dec
push
xor
outsl
ds
push
dec
push
adc
jge
push
inc
adc
push
fwait
testb
out
jns
sbb
fucomi
pop
xchg
or
xorl
mov
sbb
pushf
shrb
add
jae
inc
sub
mov
adc
mov
stos
sbb
adc
sbb
call
pop
add
dec
adc
cmpsl
jbe
arpl
dec
jne
popa
das
loopne
mov
movsl
push
jo
add
movhps
push
ret
xor
add
jo
jo
jecxz
adc
or
add
loopne
jo
scas
inc
pop
jo
loopne
pop
outsl
pop
or
inc
adc
inc
and
mov
xor
pop
arpl
pop
xor
dec
ret
sbb
fwait
nop
pushaw
cmpsl
mov
imul
cwtl
or
adc
ja
inc
das
loopne
sbb
mov
arpl
aas
movzwl
cmp
outsl
insb
das
pop
or
or
and
sub
out
mov
test
lahf
add
popa
roll
xchg
jp
adc
adc
cmp
cmp
rolb
sub
js
jne
fistl
lea
inc
add
jbe,pt
scas
add
cmp
cmpl
mov
push
stos
jae
loopw
lods
inc
push
ja
xchg
filds
mov
mov
sub
jae
jmp
test
lods
outsb
push
push
xlat
mov
xor
pusha
mov
repz
or
arpl
es
aam
sbb
popa
pop
lds
arpl
scas
arpl
push
push
pusha
stos
mov
pusha
popl
mov
imul
cmp
cmp
shrb
cmpl
adc
iret
sbb
cmp
xlat
pop
inc
cwtl
mov
sbb
pusha
add
test
stos
not
cmp
xor
add
cs
sbb
adc
jae
sub
mov
sub
loopne
push
adc
mov
fwait
adc
jnp
push
pushf
jno
jbe
pop
jg
fiaddl
outsl
out
sbb
lcall
dec
loope
aas
dec
iret
lods
inc
mov
rcr
adc
and
xor
in
stos
add
adc
inc
push
scas
fwait
test
mov
push
cmp
sahf
orb
dec
lods
sbb
addr16
pop
fsubrs
rolb
and
cmp
mov
push
pop
adc
xor
mov
shlb
xchg
daa
or
xor
inc
arpl
mov
xor
lret
das
add
jno
popw
pop
pop
inc
xlat
and
mov
cmpsl
push
pop
mov
add
in
push
sub
out
pop
sbb
addr16
add
add
mov
repz
test
cmpb
cmp
imul
add
inc
cmp
cmpxchg
push
outsl
xor
inc
and
iret
jno
ss
add
sbb
iret
popa
mov
push
jae
daa
or
jns
push
xor
les
or
add
cs
mov
daa
or
cwtl
push
jle
adc
add
mov
xor
ljmp
add
xchg
inc
es
aaa
mov
pop
fwait
cmp
adc
in
push
shll
insb
and
mov
and
andb
dec
lods
pusha
mov
movsb
daa
cwtl
mov
cmp
mov
xchg
push
test
pusha
dec
movsl
insb
mov
sbb
push
xchg
inc
add
adc
mov
ret
dec
insb
jo
popf
xor
dec
adc
in
jmp
mov
fsts
repz
push
test
cmp
push
stos
sub
es
sar
xchg
fisttps
jno
and
add
fucomi
adc
iret
xor
push
adc
push
push
dec
add
jae
test
xor
sbb
inc
nop
push
lods
or
pop
adc
cltd
xchg
sbb
test
fiaddl
pop
adc
xor
pop
js
push
jecxz
add
test
jb
adc
iret
int
push
and
and
xor
sub
xor
pop
push
xor
jmp
and
push
jb
push
cmpsb
pop
mov
mov
cmp
mov
ret
adc
mov
insl
stc
and
xor
stc
sbb
inc
and
cwtl
and
lods
pop
sbb
pop
mov
mov
imul
fcmovbe
stos
lds
xchg
and
inc
loopne
mov
sbb
jmp
arpl
je
or
push
es
mov
xor
pusha
test
movsb
lea
pop
adc
fdivrs
ret
sub
fs
das
mov
pop
sbb
sbb
and
mov
mov
insb
cmp
insl
adc
mov
adc
out
inc
lahf
inc
scas
orl
and
dec
inc
and
fldt
adc
imul
adc
adc
push
pop
and
loope
popa
or
cmpsb
shlb
lods
imul
insl
mov
and
das
adc
inc
fistl
and
xor
orl
cld
ja
jmp
adc
jo
clc
pop
mov
push
js
sbb
fidivrs
cld
dec
insl
inc
fdivl
xor
push
or
fisttpll
loope
or
mov
sbb
outsl
mov
push
push
dec
push
dec
bound
mov
or
sub
adc
in
int3
adc
xor
scas
mov
and
mov
pop
jb
imul
popa
sub
shrl
iret
mov
adc
push
add
push
xchg
outsb
mov
mov
notl
fnstcw
sbb
inc
insb
pop
dec
push
call
pop
adc
cmp
add
addl
jbe
stos
call
sbb
mov
sbb
xchg
clc
xchg
sub
sub
add
sbb
push
mov
mov
adc
je
and
pusha
cmp
les
adcl
jne
imul
popa
pusha
lret
jl
clc
test
sbb
push
insb
scas
xor
add
lret
cs
pop
mov
insl
add
or
adc
insl
sub
add
inc
jae
push
inc
adc
pop
add
adc
mov
pop
or
or
outsl
jp
xchg
js
or
addr16
ja
add
or
leave
cmc
loope
and
adc
add
add
and
cwtl
cmp
or
dec
adc
das
pop
jno
jo
add
add
push
xor
int
rorl
pop
xor
push
add
mov
add
jbe
and
adc
or
mov
mov
inc
or
xor
or
add
jb
push
jb
add
push
adc
outsl
add
xchg
insl
lods
aas
adc
add
and
arpl
push
xchg
sbb
daa
fldl
cmpb
arpl
jl
adc
pop
inc
push
dec
pop
xchg
cmp
or
cwtl
inc
push
add
outsb
imul
gs
add
outsl
mov
mov
gs
mov
imul
xor
sbb
push
mov
sub
adc
dec
and
nop
loopne
adc
dec
iretw
arpl
xchg
sub
imul
and
int3
mov
sub
pop
leave
movsl
xchg
adc
loopne
movq
push
jno
adc
xor
pushf
mov
jbe
outsl
loopne
data16
sbb
imul
xor
dec
mov
in
and
outsl
or
xor
mov
outsb
insb
notb
sub
sbb
pop
push
xor
aaa
mov
xor
and
sbb
jbe
shlb
push
fstpt
sbb
divb
xchg
adc
out
pop
sbb
lock
inc
gs
shrb
and
add
sbb
xchg
test
sbb
dec
ret
push
inc
pop
pop
pop
cs
jns
or
cmpsb
xchg
loop
inc
pop
or
add
sub
les
push
les
mov
test
mov
rolb
add
mov
outsb
mov
arpl
insl
adc
sub
push
mov
gs
or
dec
fs
sbb
sub
sub
or
test
xchg
dec
add
ret
mov
mov
in
dec
insb
and
mov
sbb
int3
arpl
xlat
je
lods
sub
cwtl
pop
negl
mov
pop
pusha
add
dec
and
adc
in
push
sub
ss
dec
jae
lea
addl
imul
push
xchg
adc
pusha
dec
int3
pop
pop
jns
pusha
jecxz
push
xchg
sbb
push
mov
or
in
cmp
dec
inc
pop
xchg
sbb
push
out
pop
fwait
adc
sbb
fs
mov
dec
mov
dec
jmp
in
inc
stos
sbbl
push
call
mov
shll
inc
subb
add
dec
andb
sub
in
popa
push
sub
sbb
test
pop
adc
mov
pop
sbb
and
add
lods
push
inc
movsl
out
ja
and
lods
sbb
inc
int3
rolb
subl
je
ja
lods
add
push
jae
sbb
or
add
cmp
or
jbe
push
dec
and
ret
ds
gs
inc
or
sbb
mov
jae
imul
cmp
hlt
pop
or
insl
sbb
xor
pop
xor
rorb
aas
or
sub
shrl
lock
movsb
jecxz
dec
and
sub
mov
add
and
dec
outsl
shll
outsb
daa
notb
notl
jae
add
mov
or
sbb
sub
insl
ja
jmp
adcl
imul
push
sbb
lret
jnp
lds
xor
mov
mov
xor
pop
into
call
sbb
dec
and
inc
push
fmuls
dec
repz
insb
xor
loopne
jb
scas
pop
xor
lea
jne
test
rcl
add
dec
mov
movsl
pop
add
inc
push
dec
push
xor
popa
jl
insl
dec
in
push
lea
js
int3
dec
or
shrl
addl
arpl
ret
sbb
icebp
add
fcoms
xor
adc
jne
xor
push
insb
popa
jns
and
aam
and
daa
or
and
dec
test
jae
sub
bound
loop
push
test
lods
es
dec
push
push
nop
pop
add
mov
xchg
mov
push
pop
or
xor
sub
insb
mov
dec
mov
push
pop
pop
push
outsb
inc
outsl
push
mov
adc
pop
ret
mulb
pop
push
inc
cmp
cmp
cmp
gs
mov
out
popa
jo
dec
xor
inc
movsb
mov
arpl
sub
sbb
outsl
sbb
dec
sbb
addr16
cmp
fildl
and
add
cmp
adc
or
cs
sbb
and
inc
rorb
mov
adc
adc
dec
pop
pop
fcmovb
insl
aaa
push
and
test
daa
jnp
inc
roll
inc
frstor
xchg
xlat
add
fadds
pop
sbb
xor
or
inc
ficoml
in
and
sbb
movsl
add
dec
and
add
mov
cmp
dec
data16
sub
mov
or
daa
mov
or
dec
addr16
dec
or
repz
sbb
sbb
popa
addb
cs
jo
addr16
cmp
imul
push
mov
and
xchg
cmp
push
push
dec
adc
stos
stc
arpl
jo
pop
push
inc
call
lods
repz
out
jp
fwait
pop
mov
cmp
mov
or
push
inc
fisubl
out
cmp
mov
cmp
sub
add
mov
and
or
add
sbb
js
outsl
sbb
add
lods
and
push
and
mov
mov
pop
add
rclb
and
add
minps
and
pshufw
jmp
stos
iret
and
mov
test
insb
shl
arpl
inc
fs
xchg
jno
insl
sub
and
add
cmpl
pop
xor
push
inc
push
sbb
inc
arpl
xchg
push
fdivrs
outsl
or
dec
test
sbb
mov
sbb
push
adc
shrl
js
adc
and
arpl
inc
loop
or
jo
andb
xor
rcr
mov
je
jne
and
push
js
outsb
add
aaa
inc
call
sbb
adc
lods
jg
dec
lods
loopne
fdivr
test
addr16
insb
mov
and
sbb
dec
inc
sbb
dec
call
aad
jae
lret
adc
mov
movsl
inc
sbb
sahf
fmuls
gs
mov
adc
das
push
jl
dec
imul
pop
test
fs
and
and
push
or
jo
add
jns
add
jb
xor
and
dec
xchg
adc
jo
and
out
dec
sub
push
jb
loopne
add
pop
xchg
push
xchg
mov
arpl
push
out
inc
pop
or
inc
popa
adc
pusha
pop
test
les
mov
mov
and
jbe
sbb
mov
and
jne
push
xchg
lcall
adc
inc
adc
cmp
and
jmp
imul
sbb
int
insb
pusha
and
mov
cmpsl
mov
stc
mov
inc
hlt
sbb
daa
insl
ret
aad
xchg
mov
insl
lea
and
push
xchg
and
push
inc
inc
inc
jb
addr16
adc
test
or
ja
and
leave
inc
and
mov
aad
pop
xor
inc
rcll
les
js
jmp
sub
test
test
sbb
and
imul
push
or
add
dec
push
and
xchg
push
pop
pop
inc
in
add
ss
jmp
push
push
push
out
out
sbb
mov
xchg
xchg
cmp
adc
popa
je
sarl
and
fcoml
orb
pop
sbb
sbb
sbb
mov
mov
cwtl
shlb
call
fildl
and
sub
and
js
or
inc
aaa
fcoml
pop
pop
adc
xchg
or
mov
adc
daa
insl
les
dec
sti
pop
test
inc
adc
dec
or
mov
pop
push
jo
aaa
mov
addb
push
subl
add
lds
lods
lahf
dec
push
sbb
or
aaa
es
inc
roll
sub
add
js
sub
mov
mov
add
jmp
pop
dec
xor
push
inc
push
dec
add
add
and
mov
mov
add
sbb
fistpll
addr16
daa
test
adc
jo
add
ficoml
pop
add
movzwl
fistpl
cmp
adc
cmpsb
add
outsl
and
push
add
jmp
add
movsl
sbb
mov
pusha
or
in
sub
pop
push
adc
subl
and
scas
inc
or
fcompp
pop
push
pusha
imul
inc
lock
dec
or
dec
outsb
cmp
inc
dec
aas
and
and
dec
or
cs
movsb
pop
call
sahf
js
xor
sbb
dec
in
insl
aaa
clc
sub
lahf
je
scas
fs
cmp
push
repnz
push
pusha
dec
add
sub
cli
sahf
inc
cs
out
insl
mov
jns
cmpsb
int3
inc
jae
adc
mov
dec
data16
or
adc
insl
sub
cs
xor
or
push
xchg
and
incl
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
dec
add
rorb
xchg
ja
