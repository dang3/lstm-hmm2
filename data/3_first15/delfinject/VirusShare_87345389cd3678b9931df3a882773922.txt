iret
and
psrld
mov
xor
pushf
out
mov
clc
lock
xor
out
and
inc
jbe
out
notl
mov
push
push
adc
push
or
jmp
jnp
clc
mov
pop
sbb
push
pop
mov
dec
dec
mov
dec
ja
sub
mov
or
mov
shll
pop
and
pop
adc
push
dec
mov
cmp
mov
arpl
in
lods
popf
jmp
cmp
icebp
xor
and
daa
inc
xor
sbb
faddl
ljmp
cmpsl
icebp
out
jge
fwait
in
mov
out
notl
pop
cmp
inc
fbld
jl
jo
sarl
sub
push
and
push
aad
test
cmp
push
in
int3
and
hlt
xor
fs
mov
xlat
rol
aad
xchg
and
aad
scas
add
mov
outsb
push
mov
sbb
cmp
or
fistl
fadd
push
outsl
xor
les
inc
mov
aas
xchg
dec
cwtl
movsb
jo
add
nop
xor
push
adc
cmpsb
in
xor
mov
add
repz
push
outsl
ja
xchg
pop
pop
adc
sarb
cli
out
xchg
stc
loop
mov
sub
mov
xlat
sbb
rclb
pop
xchg
adc
das
or
adc
and
pop
xor
jnp
leave
pop
pop
sbb
clc
loope
les
leave
ds
and
imul
jecxz
sub
inc
jmp
inc
in
lret
fcmovnb
jg
cmp
shlb
pop
aad
sti
rorl
fprem1
leave
popa
add
fwait
xlat
div
fisttps
shlb
pop
out
fistl
mov
lret
fstpl
adc
aaa
shl
ret
and
stos
sti
ljmp
cmc
and
rclb
icebp
addb
repnz
sbb
push
adc
jbe
mov
ss
in
enter
dec
add
add
ss
xchg
jecxz
loop
call
inc
sti
les
daa
mov
mov
sub
push
xor
pop
outsl
cld
loop
iret
mov
sbb
hlt
lret
inc
shlb
cltd
sub
ret
mov
daa
shr
insb
sarl
mov
ror
cli
push
fcmovne
mov
xlat
pop
clc
pusha
xchg
loopne
jne
cmc
rclb
jmp
xor
sti
notb
push
fucomp
mov
in
aam
popf
scas
xor
pop
clc
xchg
adc
and
pop
push
daa
add
inc
out
push
adc
je
mov
in
stc
mov
or
faddp
in
ljmp
call
sti
mov
out
sbb
ss
jmp
jecxz
lret
ret
cwtl
pop
xor
cmp
loope
sti
shl
adc
jne
fcoms
insb
xor
ljmp
iret
push
imul
adc
icebp
jo
jmp
xor
jb
adc
mov
xchg
aaa
sbb
add
int3
aam
xchg
jne
das
mov
sub
mov
jl
push
int
push
add
outsb
or
fsubp
jnp
dec
or
ss
aas
movsl
sahf
stc
int3
pushf
js
inc
or
shll
imul
aas
int3
cmp
call
push
ficompl
cmp
xchg
jns
sub
and
mov
mov
fstl
or
rcr
in
xchg
push
cmpsb
pusha
adc
jne
shrl
pop
int
mov
xor
jp
jae
rcrb
aas
pop
add
xchg
rclb
mov
dec
ucomiss
jl
sub
sub
loopne
das
sub
xchg
in
pop
fbld
popa
lods
bound
mov
hlt
daa
ljmp
or
push
lock
mov
ss
aad
in
pop
test
cmp
pop
inc
insl
int3
testl
pop
sti
mov
sub
imul
rcrb
or
fldcw
divb
ret
cmp
inc
cmp
cmpsb
aaa
mov
pop
outsb
jge
mov
int
sub
inc
xchg
bound
push
push
stos
ja
arpl
and
mov
sub
xchg
xchg
sub
out
mov
mov
fwait
mov
fistpl
xchg
ror
pop
pushf
jecxz
mov
mov
dec
lods
popa
rep
das
pop
popa
pop
inc
inc
cmp
pop
sbb
sti
pop
pop
mov
out
in
lahf
ds
xchg
movsl
adc
mov
or
jp
xor
and
fwait
push
adc
mov
jmp
outsl
xchg
push
sbb
inc
fcomi
arpl
mov
inc
xchg
arpl
mull
mov
xchg
gs
add
rcrl
mov
test
stos
rorl
push
test
push
fbld
mov
adc
pop
in
push
sti
push
in
insb
mov
pop
sub
movsl
outsl
sub
ja
jecxz
inc
and
or
adc
ja
sti
cmp
dec
aaa
sub
pop
pop
out
sti
aas
mov
or
aas
call
or
add
test
lea
sbb
cmpsb
in
xchg
jg
dec
je
aas
mov
fisubl
out
clc
sub
or
shll
cmc
sbb
xor
fstpt
xchg
mov
out
pop
push
add
pop
jl
test
pop
dec
lock
xchg
je
enter
dec
dec
xlat
cmpsb
mov
pop
jecxz
adc
hlt
fistpll
jns
das
divl
rorl
xchg
push
mov
jo
ror
call
push
xchg
mov
cltd
nop
adc
fldl2e
fs
mov
lret
jecxz
shl
shll
lret
aas
jne
in
pushl
xchg
sar
gs
dec
jb
xchg
push
jl
dec
mov
lret
cs
adc
pop
iret
and
insb
mov
adc
jbe
call
icebp
xchg
call
jmp
sti
mov
rclb
stc
leave
xchg
aad
sbb
sahf
icebp
pop
sub
jmp
stc
iret
sahf
xchg
in
dec
ret
jno
mov
mov
das
and
push
cmp
outsb
jmp
mov
icebp
fistps
rcll
js
mov
sahf
pop
addr16
xor
inc
xlat
pop
push
sub
lock
add
fdivl
sbb
jl
xor
cs
push
scas
mov
push
test
xchg
inc
loop
mov
frstor
mov
loope
movq
aas
pushf
fimull
jl
mov
jae
sub
mov
imul
fbstp
xchg
aad
and
mov
pop
mov
push
xchg
pshufw
mov
je
mov
sbb
xchg
push
cmc
xchg
mov
push
int
mov
add
lds
pop
adc
sub
repz
out
mov
in
insb
lock
mov
jnp
sarl
jnp
mov
js
pop
and
mov
nop
ret
xor
ds
loope
push
popa
lods
xor
mov
cld
lea
hlt
daa
xor
mov
cld
sbb
out
pop
sub
cld
or
int
xor
push
xor
sbb
cmp
add
inc
cmp
jge
sbb
lcall
push
ljmp
scas
sbb
aad
push
lcall
mov
shl
sub
call
ljmp
mov
lock
mov
lods
fsubl
nop
test
in
out
xor
sbb
out
std
dec
mov
add
loope
ret
repz
and
inc
adc
mov
addr16
pop
stos
pusha
pop
fimuls
std
xchg
lock
pop
jnp
inc
push
push
fdivl
sub
outsb
lock
cmp
hlt
mov
fwait
and
subl
mov
pusha
and
cmpsl
aad
in
call
imul
sub
dec
jne
cwtl
inc
pop
dec
inc
mov
movsb
rorl
xor
dec
xor
nop
sarb
pop
dec
repz
add
or
pop
pop
mov
cmp
pop
xor
xor
dec
lds
xchg
pop
scas
jae
push
std
rorl
js
fsubr
inc
jns
scas
in
xchg
in
jp
in
xlat
xchg
inc
mov
pop
pop
fs
enter
xchg
into
ljmp
ret
and
ss
adc
adc
xorl
daa
cmp
xchg
jae
loope
mov
rorb
fnstsw
add
xchg
push
ret
mov
mov
mov
inc
movl
xchg
mov
decl
xchg
push
inc
sbb
arpl
repnz
clc
push
add
adc
lret
mov
mov
mov
jnp
inc
inc
pop
int3
pusha
stos
push
xchg
test
xchg
loope
lret
jecxz
sub
mov
xor
rcll
add
add
pop
not
push
xor
loop
inc
cmp
cmpsb
push
cli
stc
aas
jle
ds
in
pop
mov
call
lret
ja
or
mov
ss
stos
shlb
in
sbb
fdiv
stc
arpl
push
sub
lahf
loope
pusha
xor
xor
or
mov
mov
dec
icebp
mov
jmp
int
adcl
mov
mov
adc
push
ljmp
inc
sub
inc
test
sub
hlt
fistpl
shl
inc
arpl
lds
in
xchg
or
mov
loop
adc
ret
pop
lcall
mov
sbb
aad
or
add
ss
sahf
add
and
jns
into
scas
mov
shlb
xchg
insb
add
loop
shlb
jbe
xor
jbe
movsl
pop
xchg
jle
rolb
popa
mov
call
aaa
mov
pop
adc
xchg
xor
es
loop
mov
lods
lods
ret
xchg
divl
inc
rcrb
pop
jbe
cli
push
imul
je
in
cmc
sahf
inc
hlt
subb
and
mov
mov
dec
out
pop
shlb
cs
mov
cmp
xlat
adc
inc
aas
orl
sub
lods
jl
dec
jmp
ja
lds
mov
out
ss
sti
jae
xchg
cmp
scas
adc
mov
pop
or
fiadds
pop
call
sbb
ret
ljmp
mov
in
movsb
in
pop
add
icebp
movsb
add
icebp
or
ret
in
or
loopne
call
movsb
movsw
lods
push
sahf
mov
push
fmull
test
mov
lds
add
or
je
bound
pushf
arpl
mov
in
xlat
into
mov
inc
loop
out
push
imul
xor
sarb
mov
in
mov
jecxz
pop
cmpsl
cwtl
arpl
xchg
in
repz
fs
mov
push
mov
sub
das
imul
and
lret
xor
mov
loope
xor
and
xor
hlt
ja
inc
stos
out
roll
sti
adc
fsub
pusha
ficoml
push
notl
push
loopne
inc
sub
fcomip
lcall
sub
icebp
xor
call
mov
aam
imul
ljmp
push
adc
sub
div
ds
add
js
shll
and
xorl
int
and
les
xchg
fdivl
add
or
sub
and
rorb
enter
rsqrtps
cld
pop
mov
arpl
sbb
notl
xor
fcoml
jmp
xlat
jnp
or
jl
testb
es
iret
pusha
mov
call
sub
arpl
jmp
mov
push
jo
cs
sbb
push
fisubrs
repz
arpl
jno
outsl
pop
iret
aam
int3
mov
xchg
mov
inc
lret
mov
pop
fwait
adc
mov
dec
inc
mov
dec
push
psrad
arpl
fisttpll
imul
mov
shll
pop
jl
into
jae,pn
rol
push
shl
sbbb
inc
sub
jno
cmp
jl
push
mov
jns
push
push
jnp
ljmp
in
inc
fstps
rol
repnz
jecxz
mov
mov
push
iret
scas
dec
imul
out
cmp
adc
adc
idivl
and
enter
int3
sub
fidivl
pop
inc
xrelease
push
push
sub
push
or
cmc
push
enter
fdivrs
jp
jae
stos
inc
xor
push
in
jbe
arpl
ret
add
movsb
ficoml
insl
ja
mov
mov
cmp
mov
push
push
ss
test
rolb
sub
push
in
add
testl
adc
pushf
push
je
mov
cmp
adc
pop
pusha
mov
ret
fldl
ret
vmaxps
adc
xlat
push
cwtl
mov
cli
push
arpl
push
dec
shlb
test
jmp
pop
adc
or
cmp
sbb
arpl
decl
stos
les
inc
pop
mov
adc
popf
pop
movsl
fucom
ljmp
cmp
mov
lock
push
and
push
data16
pusha
add
inc
inc
mov
xlat
and
inc
fbstp
dec
cmp
rep
pop
clc
mov
scas
repz
idivl
mov
decl
push
pop
call
sbb
push
popa
sbb
pop
scas
inc
jnp
adcl
lods
adc
repz
cmpsb
out
mov
sbb
push
dec
jb
ret
or
dec
popa
int
pop
jo
notl
ja
push
cmp
clc
lds
add
aas
testb
pmulhw
shr
mov
cld
repz
je
cmp
mov
sbb
enter
popa
lods
jne
xor
push
imul
cs
push
loopne
adc
cld
pmovmskb
push
outsl
test
mov
fildl
movsb
xor
sbb
mov
cwtl
inc
mov
in
jl
loop
cli
arpl
inc
aaa
push
mov
pusha
xor
adc
push
ret
outsl
aas
and
mov
dec
loop
cmp
dec
in
push
js
and
repz
outsl
xchg
stc
or
sub
dec
add
pop
notb
mov
xchg
xchg
add
push
push
loopne
pusha
in
xlat
rorl
pusha
push
inc
clc
pushf
push
jb
sbbb
clc
orb
inc
xchg
pushf
xor
ret
xchg
sub
iret
cld
popf
dec
aad
sbb
cld
pop
sub
and
cmp
inc
pop
sub
scas
cmp
and
dec
push
or
sub
int
dec
push
inc
dec
stos
pop
jl
mov
xor
dec
std
fstps
xor
sub
std
xor
xchg
and
rcr
adc
add
pop
and
shrb
cmp
shrl
les
inc
mov
cmp
sahf
xor
insb
bound
lahf
fsubrs
loope
cs
inc
push
and
cmp
inc
jecxz
es
cmpsb
in
imul
setnp
aad
sti
fadds
mov
mov
mov
cltd
sarb
es
inc
jae
or
xchg
in
cmp
xchg
jmp
mov
inc
mov
jae
sub
jns
or
mov
xchg
out
out
in
sub
mov
shrb
pop
ret
fdivrl
mov
sub
sbbl
mov
andb
and
std
fwait
xorl
mov
xor
hlt
jecxz
jnp
lret
ljmp
stos
pop
shlb
call
mov
aam
js
sbb
inc
les
xchg
sti
xchg
sub
ds
into
into
in
popa
js
push
lods
aaa
in
xchg
cmpsb
int3
mov
mov
mov
je
jnp
sbb
dec
arpl
xchg
insl
test
mov
ror
jb
iret
push
xlat
bound
inc
xchg
lea
cltd
or
lods
sarl
call
outsl
shr
push
ja
in
push
sti
arpl
and
loopne
cs
mov
aam
mov
ja
aam
out
mov
adc
test
rcrb
pop
shll
inc
xchg
cmp
or
inc
or
into
mov
push
or
jnp
adc
cs
push
aam
loopne
daa
rep
push
pop
jmp
aad
sub
nop
or
outsl
mov
test
shl
repz
ds
inc
pmuludq
outsl
insb
jecxz
fldt
adc
cltd
adc
aad
enter
mov
int
jbe
int3
adc
aas
in
dec
jmp
negl
jmp
cld
ror
pop
in
pop
fucomip
inc
cmc
cmpb
jo
inc
std
mov
xor
jecxz,pn
and
or
cmp
fistpl
popf
jno
shlb
xor
mov
adc
cld
dec
mov
cmp
push
out
out
sub
jb
mov
fimull
testl
push
arpl
sub
scas
add
aaa
sahf
xor
xchg
cmpsl
into
loopne
mov
aad
pushf
ljmp
mov
imul
stos
mov
and
rclb
sub
mov
out
mulb
rcrl
sti
xor
call
mov
repz
jl
or
fsubs
outsl
loopne
dec
lods
addr16
sbb
add
jg
sub
lock
and
inc
lds
or
pop
cmp
jns
inc
sbb
fistl
idivb
iret
dec
add
xchg
dec
pop
fdiv
fwait
sub
filds
and
push
sti
stc
ret
sahf
loope
rcrb
xchg
mov
je
mov
mov
pop
pop
imul
pop
pop
mov
xlat
pushf
mov
or
in
inc
inc
cmp
fmuls
mov
add
test
cld
repz
lret
std
xchg
jne
cld
ret
pusha
jb
push
loop
hlt
or
je
sbb
in
adc
loop
adc
aaa
jge
repnz
dec
add
aas
and
daa
fimull
outsl
xchg
jo
repz
fbstp
dec
rorb
push
clc
sub
aad
ret
inc
xchg
ja
and
xchg
mov
and
loope
push
xchg
push
icebp
call
movsl
iret
mov
flds
mov
push
mov
loopne
lock
sub
out
jecxz
out
fldcw
std
xlat
cmp
fcmovnu
sahf
fcomps
fdivrs
mov
push
push
mov
fcom
or
mov
mov
lock
int
cltd
add
xchg
sti
out
jl
dec
stos
ds
and
cmp
jbe
mov
jo
or
mov
add
xchg
sbb
sub
shrb
mov
mov
and
inc
push
in
jmp
imul
push
add
call
inc
mov
or
cli
mov
in
lods
lea
out
sahf
adcl
lea
or
inc
call
aaa
shlb
test
mov
mov
out
mov
sbbb
test
fyl2x
dec
stc
mov
mov
push
mov
dec
cmpsb
pop
mov
out
imulb
orb
add
aaa
fdivl
or
add
lock
pop
pop
loop
mov
sub
or
dec
and
shl
or
inc
xor
hlt
add
xchg
test
jmp
cmpsl
or
inc
ja
dec
fdivrs
frstor
and
pop
mov
into
in
dec
ss
cmp
fistpl
cmp
lret
iret
xchg
je
xlat
fimull
adc
cmpsb
rcrl
aam
lods
fwait
loop
scas
out
mov
jecxz
inc
sti
sarl
ljmp
pop
pusha
mov
in
lret
es
loopne
loop
in
lea
xlat
cmpsl
shlb
fldenv
hlt
in
insl
aaa
dec
les
rcl
adc
push
nop
sub
cmp
int
popf
mov
inc
or
test
or
out
inc
adc
movl
xor
mov
data16
sahf
lret
fnstenv
push
xor
or
jo
cmp
rorl
fcoms
sub
inc
ret
add
stc
iret
fwait
pop
lds
xchg
arpl
int
out
xchg
add
shlb
mov
fisubl
daa
mov
sbb
cli
mov
je
clc
fucompp
in
in
lcall
es
add
push
int
push
arpl
stc
push
ds
out
lods
add
cmc
push
cli
xor
add
sub
push
inc
sub
adc
xchg
sbb
in
outsb
dec
sub
pushf
mov
out
mov
lcall
gs
or
in
jmp
push
xlat
in
repz
push
aad
xlat
enter
daa
loopne
jmp
lods
iret
sarb
mov
push
mov
dec
test
push
jl
sbb
sbb
lods
fcoms
pop
jo
mov
in
call
flds
add
or
dec
lock
out
stos
inc
int
xor
dec
inc
lcall
adc
or
out
push
push
xor
hlt
mov
adc
lods
push
shll
push
xchg
and
cmp
mov
movb
push
in
dec
mov
dec
push
rcrb
je
ror
jb
into
or
out
pop
push
add
jnp
in
lret
icebp
loope
loope
cld
fucomp
idiv
fldcw
cli
aad
jb
xchg
in
jnp
and
xor
pusha
pop
jb
mov
mov
xlat
or
enter
cld
mov
jae
loopne
jp
mov
and
loop
ficoms
gs
adc
cmc
push
arpl
mov
shr
hlt
sub
add
push
icebp
pop
lock
icebp
push
mov
test
and
or
daa
xor
mov
scas
push
es
dec
into
sub
es
js
push
mov
mov
lret
xchg
mov
jmp
add
inc
test
mov
jl
je
iret
inc
or
and
jecxz
push
push
pushl
sub
dec
bound
add
sti
movl
sub
cmp
adc
cmpsb
sub
addr16
shl
mov
fildll
in
pop
pop
int
pushf
shl
std
ficoms
sahf
mov
popf
in
sub
jecxz
xlat
inc
push
popl
cmp
dec
jbe
dec
inc
in
lea
ljmp
icebp
es
flds
ret
add
or
lods
mov
sub
mov
xor
jbe
push
adc
lods
fdivr
jo
leave
in
pop
rcl
xlat
shrl
push
inc
mov
push
imul
or
xchg
shrb
dec
fsub
cmp
push
test
mov
test
out
cld
outsb
mov
insb
fstpt
mov
in
inc
lock
fidivl
fiaddl
nop
xchg
mov
inc
icebp
lret
imul
int
in
sub
jecxz
iret
stos
mov
seto
outsl
jb
pushf
ljmp
leave
inc
shlb
jbe
push
sub
fs
adc
imul
mov
pop
in
push
jae
pop
jg
or
or
sbb
in
push
mov
lea
mov
inc
ds
mov
pop
sbb
mov
mov
inc
enter
push
dec
dec
xor
rorb
inc
jno
insb
xchg
push
xor
jg
cmp
adc
aas
push
fwait
outsb
sub
sti
jae
js
xor
mov
mov
imul
nop
add
mov
js
push
xchg
xor
pop
xchg
mov
loop
xor
insb
add
and
ret
dec
or
or
jmp
gs
in
push
insl
xlat
xor
jne
negb
push
psubsw
out
mov
xchg
lret
dec
push
mov
jae
pop
repz
in
loopne
into
js
lds
insb
jnp
mov
xor
shlb
inc
addl
iret
andl
jle
mov
mov
sub
fildl
cmp
sbb
pop
arpl
mov
sbbl
inc
nop
loop
shrb
or
sarb
pop
pop
add
insb
dec
fsubrs
in
shll
in
testl
adc
int
adc
adc
shlb
xor
and
scas
cmp
stos
cmpl
or
das
aam
fdiv
hlt
imul
mov
push
jl
int3
dec
loopne
xchg
and
push
xor
xor
sub
fimull
xor
inc
cmp
add
inc
sbb
sti
dec
cmp
xchg
xor
inc
sbb
and
xor
aam
ja,pn
mov
and
sti
sbb
scas
pushf
not
push
fdivrl
lock
fwait
insb
jmp
or
fcom
lods
jns
pusha
mov
sbb
pop
aam
sub
sbb
dec
xor
mov
push
sbb
sbb
xor
and
aas
inc
fidivrl
inc
mov
dec
mov
cmp
jg
out
fwait
jns
mov
cmc
xlat
push
mov
ja
test
cmpsb
mov
mov
fimuls
push
jmp
cmp
sbb
mov
mov
adc
fwait
insl
lret
fsubrl
or
fisttps
je
js
pusha
add
shll
inc
pop
push
stc
divb
aaa
loope
dec
ret
iret
in
shll
movb
mov
sbb
loope
mov
adc
adc
stos
push
dec
mov
iret
icebp
cmp
ds
or
sbb
or
jne
push
pop
nop
mov
mov
fwait
sbb
lock
call
das
jnp
stos
es
jecxz
cmc
dec
mov
pop
push
jno
stos
outsl
adc
popf
adc
shr
loopne
push
sbb
in
cli
mov
aaa
mov
mov
sti
ret
ss
xlat
pop
or
mov
mov
add
es
in
jo
mov
sub
dec
scas
ja
ds
mov
je
jmp
ljmp
mov
jmp
inc
dec
cmpb
push
les
inc
mov
clc
push
pushf
insl
lods
jno
jmp
loope
hlt
mov
rolb
xor
out
inc
inc
in
and
push
sub
rorl
call
nop
insb
das
jge
loopne
sub
and
jbe
push
lods
pop
adc
xchg
je
js
hlt
lahf
dec
cmpsb
mov
sbb
xor
into
jecxz
push
or
pushf
adc
jbe
push
jg
fwait
aam
lret
js
sub
push
stos
and
ljmp
jnp
out
aam
or
stos
mov
shll
mov
sub
mov
adc
mov
add
sbb
jbe
fists
out
fcomi
cltd
mov
hlt
mov
adc
xor
push
lock
cltd
repnz
or
loopne
lcall
push
cmc
jmp
call
mov
push
lods
flds
xor
popa
cmpsb
adc
loopne
mov
xlat
mov
xor
xor
sub
push
xchg
out
rol
xor
sub
out
jp
xlat
and
jb
xchg
int
pop
cmpsl
leave
dec
adc
sbb
cld
jns
fiadds
inc
leave
cltd
pop
mov
int3
or
push
popa
ret
adc
sbb
out
push
pop
cmp
mov
xchg
xor
rcl
inc
sbb
rcll
loop
ss
leave
outsb
jae
in
cmp
dec
aad
fstl
pusha
test
out
sub
mov
inc
shll
sub
pusha
pushf
gs
xchg
mov
add
repz
in
and
popa
movsb
dec
dec
sahf
call
mov
mov
rcrl
xchg
call
adc
jo
sbb
cmp
fistps
dec
fsubrl
repz
ret
or
add
mov
in
andb
cmp
das
rorl
call
out
sti
push
pop
in
int3
xchg
xor
mov
or
jae
xchg
sub
or
fldenv
lods
addr16
imul
jo
repz
sbb
adc
ficoms
mov
into
clc
cmp
add
dec
pop
jmp
push
push
shl
push
mov
scas
cmp
mov
popf
jmp
mov
insl
add
dec
inc
adc
imul
inc
or
fldlg2
sub
xor
out
lods
mov
ret
and
in
bound
pop
cmp
sub
mov
leave
or
jae
dec
loope
int3
iret
jno
sub
cmc
mov
out
fwait
mov
mov
push
mov
mov
int3
pop
shrb
dec
add
cmp
aad
sahf
inc
pop
sti
jo
push
mov
add
or
movsb
cmp
mov
cwtl
hlt
std
add
fcmovne
sub
rcll
lds
cwtl
inc
rol
or
aaa
jecxz
sub
or
ljmp
push
mov
ret
xor
test
push
dec
fldl
jmp
aas
outsl
push
add
insl
in
popf
int3
in
fidivrs
and
mov
inc
mov
inc
jmp
inc
pop
dec
cmp
inc
das
inc
sub
jne
call
and
adc
sub
out
ja
sbb
fwait
or
les
iret
inc
mov
xchg
xor
cmc
call
aad
imull
clc
out
in
mov
mov
frstor
jns
jae
push
mov
and
pop
xlat
xchg
push
push
aad
mov
aam
aad
shr
add
mov
shl
repz
mov
mov
mov
pop
mov
dec
out
je
fildl
adc
rcll
sub
xor
jns
dec
xchg
cld
pmuludq
push
and
aas
inc
aam
cmp
or
mov
sbb
in
xlat
adc
out
push
push
in
or
testb
mov
adc
aas
cmpsl
push
add
sbb
aad
pop
int
sbb
jne
into
out
mov
out
in
pop
addb
pusha
xorb
adc
push
cmp
add
jge
inc
and
push
cmp
and
or
mov
cmp
rcrl
int3
and
scas
dec
fwait
fwait
xor
xchg
dec
add
jge
push
pusha
aam
ret
fdivl
pop
popf
stc
pop
fisttpll
adc
push
xor
and
mov
call
es
cmp
inc
push
aam
push
adc
jecxz
fbstp
in
scas
or
mov
jae
aad
xchg
jecxz
stc
ret
je
adc
stos
pop
vmwrite
xor
clc
mov
sub
into
mov
mov
daa
stc
inc
push
push
adc
push
or
hlt
sub
inc
xchg
jecxz
jecxz
addl
imul
divl
cmp
or
lock
mov
pop
out
xor
insb
lahf
repnz
addr16
fsubl
cmp
pop
addr16
sbb
inc
inc
xor
pop
mov
sub
int
add
aad
pushf
in
repz
clc
je
xchg
out
popa
dec
aam
cld
aas
gs
cmc
mov
test
mov
pop
mov
sahf
call
or
mov
pop
jmp
or
add
cmc
push
loope
fdivp
shl
mov
xchg
ficompl
loop
or
fnstcw
cmc
sarl
scas
xorb
sub
jmp
or
icebp
fisttpll
icebp
f2xm1
les
iret
fidivl
imul
aad
mov
xchg
mov
pop
aam
mov
xchg
mov
mov
pop
push
stc
sub
les
jle
test
ja
jne
daa
aas
dec
push
pushf
jmp
push
add
in
adc
dec
lret
cmp
outsb
sbb
mov
cmp
fsubr
mov
mov
movsb
jmp
push
mov
cld
mov
sti
adc
lea
mov
cmp
cwtl
xchg
out
repz
sbb
mov
or
push
dec
aam
imul
pusha
test
cmp
leave
mov
mov
pushf
out
pop
add
call
arpl
fxch
jo
dec
loopne
jo
out
xchg
aam
shrb
fisttpll
mov
pushf
mov
mov
mov
sbb
jge
xor
lds
test
sub
lret
or
es
dec
loop
outsl
add
idivb
or
aad
cmp
pop
cmp
xchg
dec
je
xchg
cmp
nop
xchg
add
pusha
sti
adc
test
fwait
pop
fbstp
mov
xor
lock
jle
jmp
icebp
out
std
add
mov
fisubrl
adc
and
leave
ret
mov
mov
gs
cmpl
das
rorb
repz
scas
shll
xchg
cmp
fmuls
cld
cmp
out
movsl
pop
adc
test
ds
cmp
rcrb
cmp
push
lods
adc
dec
ss
jbe
dec
dec
gs
rcrb
cld
pop
sti
rcrl
rcl
jb
push
daa
jecxz
jmp
lahf
in
and
lret
outsb
rorl
mov
add
pusha
jmp
es
xchg
sti
dec
sbb
pusha
jne
adc
jecxz
xchg
in
bound
mov
es
mov
nop
rcl
cwtl
lret
andl
sbb
sub
jbe
lods
cmp
mov
sub
pop
and
sub
adc
fldcw
mov
shll
mov
sub
inc
fimuls
fnsetpm(287
push
aaa
arpl
xlat
lods
test
or
in
out
inc
fnsave
inc
pop
bound
in
movsb
push
mov
mov
fldcw
xchg
and
icebp
fidivrs
push
sub
out
mov
sub
pop
jp
mov
out
push
rclb
push
ss
ds
notb
and
fwait
pop
addr16
andl
into
pushf
fcmovu
pop
addr16
imul
inc
repnz
aad
mov
daa
mov
jbe
scas
stos
out
aaa
push
aad
insb
js
mov
outsb
push
fwait
sub
or
mov
pop
or
inc
aam
enter
cwtl
test
dec
ljmp
cmp
cld
bound
adc
cmp
leave
ffree
ds
mov
std
test
test
fisttps
pop
arpl
movsb
xchg
jl
stos
push
addl
rcl
sti
push
and
jne
popa
cmp
cmp
xlat
jo
fcom
roll
dec
adcl
jg
sarl
or
clc
mov
and
outsb
dec
and
cmc
into
xchg
mov
in
dec
fiadds
mov
mov
sbb
jne
xlat
and
jp
and
mov
mov
inc
mov
test
addl
sub
aas
adc
movsb
imul
or
jecxz
xlat
jae
out
cmc
mov
push
imulb
in
frstor
adc
mov
lock
adc
jecxz
imul
roll
ss
out
xor
test
pop
adc
cmovp
jnp
mov
ret
mov
lock
xchg
popf
xor
fwait
xlat
jbe
or
push
ret
mov
es
adc
push
cld
ret
jmp
lds
insl
pop
sti
sub
dec
lret
cli
call
aaa
loopne
mov
cltd
mov
inc
ds
in
xor
lock
shl
dec
adc
fs
nop
jecxz
jmp
ret
sbb
jmp
inc
jg
xchg
stos
mov
adc
leave
mov
push
xchg
xchg
repz
aas
pop
add
push
testb
lds
movsl
aam
mov
pop
ret
xchg
incl
outsb
ds
and
cmpsl
les
push
mov
rcl
and
add
int
test
and
ljmp
xor
xorb
cmc
dec
sub
clc
adc
jg
aad
idivl
jae
jbe
inc
inc
inc
scas
or
jne
adc
inc
mov
sarl
mov
push
dec
pushf
cmp
or
in
cmp
in
and
lret
pop
and
cld
jmp
inc
pusha
arpl
push
hlt
repnz
mov
xchg
add
cmp
test
push
idivb
fisttps
insl
pop
jns
xlat
pop
inc
lock
int
lods
inc
icebp
and
push
adc
rorl
mov
fucom
repz
mov
adc
loop
fldcw
rol
aad
mov
adc
jecxz
mov
sbb
out
into
stos
pushf
bound
mov
in
rclb
cmpsl
and
mov
in
adc
xor
cmpsl
push
cmp
mov
lds
sarl
inc
shll
fcmovnu
push
fwait
xor
lcall
pop
xchg
or
test
inc
xlat
xchg
mov
mov
push
push
jae
mov
call
out
adc
add
ljmp
pop
mov
mov
mov
cmpsl
xor
jnp
lahf
iret
add
jnp
mov
mov
xchg
loop
imull
and
cmp
stos
pop
jno
inc
mov
orl
push
ror
or
sub
or
jg
mov
cwtl
sahf
arpl
jae
sti
jo
fdivrs
mov
cmc
dec
aas
or
testb
in
les
hlt
mov
lcall
adc
inc
fists
leave
ret
in
dec
into
repnz
jbe
ss
adc
mov
dec
fiadds
cs
stc
pop
stos
lock
and
inc
loop
test
lods
jo
sbb
pop
movsb
les
sbb
in
add
inc
ljmp
fadds
jmp
stc
jge
pop
and
add
ljmp
scas
imul
pop
sub
cs
jmp
push
aas
xchg
jne
sti
sub
xor
lea
adc
lods
sub
pushl
lret
lods
jnp
fwait
sub
mov
pop
shrl
pushf
daa
jbe
leave
pop
push
iret
xor
push
add
add
inc
push
sbb
dec
adc
rcrb
dec
pop
bound
inc
negb
popa
sbb
nop
or
xchg
jae
es
sti
sbb
pop
lds
pop
out
les
sbb
cmpsb
add
ss
adc
pushf
add
les
add
rcl
sarl
push
in
ss
push
mov
loope
pushf
cmp
adc
jbe
mul
jo
mov
pop
cmp
add
or
in
and
ffreep
cmp
popf
adc
cmpsb
std
orb
les
out
hlt
pop
pop
adc
inc
aad
mov
mov
xacquire
repz
out
adc
inc
mov
cmp
sub
out
cwtl
and
das
lea
repnz
std
sbb
add
xor
leave
jecxz
lods
jg
bnd
add
mov
mov
std
in
daa
lods
or
clc
dec
mov
mov
sti
mov
xchg
aas
iret
mov
xchg
cmp
sub
sub
into
mov
or
push
xor
mov
ds
clc
push
aam
sub
cli
inc
add
sti
stos
cli
ja
in
rorb
pop
xor
outsl
stos
cltd
adc
in
push
loop
loop
fsubl
sarb
stos
inc
ficompl
and
push
mov
pop
daa
lock
cmp
dec
rclb
aas
inc
fst
sarl
ret
pop
dec
cmp
add
or
dec
rcrb
jne
xchg
lahf
cmp
fs
out
mov
jno
repz
adc
setns
inc
pop
lds
mov
das
iret
push
dec
ret
jae
enter
or
sahf
cli
ror
xchg
or
into
inc
enter
shll
hlt
fwait
and
pop
enter
aaa
cwtl
leave
sti
or
std
je
mov
rcr
adc
jmp
fcoms
fnsave
jnp
xlat
das
pop
mov
adc
inc
loope
sti
mov
mov
mov
sbb
push
and
xor
out
and
ficomps
stc
dec
sub
push
int3
xlat
rorl
mov
adc
std
lods
loope
pop
xlat
repz
or
adc
add
and
cmpsl
rcrl
in
or
rorl
inc
jae
ss
pop
mov
shrb
push
scas
or
out
test
lret
push
add
pop
aam
test
iret
dec
sahf
jo
and
sub
inc
pop
fisubrl
cmp
rcrl
mov
shll
mov
incl
push
dec
ljmp
dec
pop
insl
aam
stos
test
jno
jl
and
mov
jmp
inc
fdiv
cmp
and
jle
int3
fldl
cltd
imul
push
adc
adc
in
inc
or
lret
mov
xchg
xlat
into
out
fmul
out
fxch
add
fdivl
jg
push
sarb
stos
dec
enter
jecxz
dec
in
shl
mov
out
mov
or
aad
inc
dec
push
test
fst
jo
mov
sbb
aaa
push
dec
and
leave
ds
negl
xchg
leave
sub
loopne
cwtl
mov
xchg
jnp
fwait
popf
enter
int3
ret
scas
push
cmp
mov
cvtpi2ps
daa
sub
and
sti
cmp
cmp
in
mov
dec
negb
mov
lods
or
fcoml
rcl
xorl
mov
sti
and
into
bnd
enter
cmp
sahf
jo
mov
mov
sbb
xchg
das
into
jmp
sub
loopne
cs
mov
mov
sbb
adcb
adc
mul
pop
out
cmpsl
jo
add
cmpsl
jae
inc
inc
icebp
ja
je
loope
adc
pop
sub
fnstcw
cmc
jl
pop
sbb
and
sahf
lds
ret
cmp
pop
add
fsubrl
and
xor
mov
adc
mov
or
into
cmpsl
jecxz
out
xchg
fsubl
loop
mov
addr16
call
sbb
mov
mov
test
imul
jae
sbb
sarl
imul
sub
fcmovb
push
or
lds
and
push
and
mov
cmc
out
fists
push
dec
cld
test
add
out
inc
aam
jmp
lcall
fdivrl
inc
add
sti
fists
inc
xchg
into
adc
pop
xor
nop
hlt
hlt
out
sub
mov
cld
in
add
jge
sti
jge
in
pop
inc
fcompl
sub
loope
xor
in
sarl
ret
add
sub
mov
mov
outsb
mov
daa
pop
mov
and
mov
icebp
dec
jl
jb
or
and
cmp
inc
fimull
out
in
mov
mov
mov
into
mov
push
xchg
hlt
sbb
hlt
mov
lret
stos
sub
inc
shr
cmp
adc
in
popf
ljmp
adc
add
lcall
inc
inc
cmpsb
lods
push
xor
pop
mov
add
mov
stos
ds
sbb
mov
add
cld
std
pop
int3
fildll
mov
sub
ret
ret
or
xchg
jae
inc
xor
clc
mov
mov
inc
cmp
shrl
dec
xor
and
pop
mov
cmp
idivl
cmp
add
mov
fisubs
into
jae
out
sbb
inc
mov
out
cld
inc
hlt
repnz
xor
sahf
fstps
daa
cli
ljmp
daa
pop
or
repz
jecxz
sti
mov
adc
cmpsb
jecxz
aad
push
or
xchg
and
jecxz
in
jae
fwait
sbb
test
mov
shl
push
jmp
add
stc
mov
or
xchg
das
jbe
pusha
mov
pop
mov
scas
adc
int3
cmpsb
cs
mov
sti
push
pop
xchg
xor
in
out
cli
push
inc
lock
and
rol
cmp
enter
push
rcrb
clc
testl
inc
jnp
lods
outsl
andb
loop
std
cmp
out
jl
pop
iret
in
xchg
es
insl
add
push
inc
adc
xor
insl
adc
sub
sbb
dec
clc
cmpb
aad
inc
xor
xor
arpl
adc
les
es
stc
rcr
dec
sti
inc
nop
mov
xchg
aaa
mov
xor
mov
ret
test
out
mov
xchg
pop
fildl
mov
inc
mov
fcomip
lcall
mov
mov
jmp
lret
jno
mov
fs
dec
jnp
rorl
icebp
dec
ret
push
sub
add
aaa
iret
dec
push
mov
psrlq
mov
lock
outsb
inc
test
lret
dec
jmp
sbb
imul
mov
cmp
loop
ss
xchg
pop
mov
cmpsl
iret
inc
daa
stos
inc
insb
inc
adc
xlat
pop
in
mov
pop
push
dec
xchg
insb
dec
fmull
dec
mov
repz
mov
out
je
sbb
ficomps
pop
xor
fstps
xlat
adc
lcall
mov
pop
imul
pop
cmc
inc
lods
adc
cmp
add
add
sahf
lds
cs
out
lods
add
or
loope
ja
repnz
pop
mov
mov
or
sbb
xchg
xchg
xchg
testb
stos
rorl
push
popf
shr
stos
icebp
adc
push
mov
jb
enter
add
jbe
cmp
popa
cltd
dec
xchg
inc
lret
ret
dec
loop
outsl
mov
xchg
jecxz
mov
popa
fimull
pop
std
cmp
fldcw
or
xor
xchg
mov
shrb
addr16
lret
jbe
push
cmpb
dec
loopne
push
pop
jmp
das
pushl
and
pminub
mov
in
jbe
jae
mov
movsb
adc
mov
insb
mov
and
adc
movsb
loope
in
push
hlt
lcall
in
inc
or
aas
mov
push
mov
popa
dec
cmp
and
push
lahf
les
scas
pop
icebp
ja
out
inc
ss
ret
testl
pop
in
fcompl
inc
pop
in
int
mov
pop
frstor
mov
fs
jge
test
outsl
repz
cmovne
or
lcall
mov
inc
icebp
mov
enter
cmp
sti
arpl
add
jl
arpl
imulb
loop
jbe
negb
orb
mov
jecxz
jmp
inc
xor
jmp
ret
aam
or
jl
leave
cmc
out
sub
dec
sub
push
out
shl
sbb
or
in
and
arpl
js
shrb
das
sbb
mov
pop
stc
jb
inc
popa
cltd
outsl
notb
nop
hlt
ficomps
push
or
push
pop
and
dec
push
fistl
subb
gs
pop
cld
pop
jnp
cmpsl
dec
hlt
pop
sub
test
pop
push
shll
jns
call
sub
cli
mov
xor
or
adc
fwait
xor
ret
push
sbb
stc
clc
call
fistps
cmpsl
inc
in
sbb
cmp
sbb
dec
mov
xor
inc
pop
pop
and
sbb
or
cmp
cmp
sub
xchg
into
cmc
stos
popa
arpl
and
iret
js
jg
mov
mov
in
fwait
je
shr
or
jmp
jp
test
mov
jb
icebp
push
fsubr
mov
inc
shll
je
mov
aad
jno
mov
lcall
jg
mov
fwait
jmp
sbb
jmp
out
xor
mov
nop
hlt
and
push
dec
aad
adc
daa
insb
mov
aas
add
jecxz
or
or
out
stc
in
repz
inc
mov
sub
mov
pop
mov
nop
stc
push
cmpsl
rcrl
in
popf
rcll
insb
out
std
jnp
aaa
loopne
fiadds
in
push
pusha
fistpl
pop
add
sub
fwait
pop
jo
mov
pop
inc
cmc
cmp
imul
outsl
add
or
and
pop
mulb
lds
ja
dec
scas
into
popa
xchg
jmp
mov
and
dec
scas
iret
mov
cs
mov
adc
fnstenv
dec
jl
loopne
xor
cld
shll
iret
mov
fldenv
popa
add
scas
sub
daa
pop
lret
fsubr
xchg
inc
adc
jo
in
jb
movsl
mov
adc
stos
pusha
maskmovq
pop
push
es
cld
fbld
mov
push
or
aad
xlat
mov
sub
mov
int
push
mov
push
push
daa
and
sbb
dec
stos
cmp
dec
fst
cmc
jne
aam
aam
stos
adc
pop
push
mov
push
mov
sahf
sub
jb
sti
adc
sbb
arpl
inc
push
inc
push
lcall
push
mov
inc
sbb
sti
or
cmp
dec
test
cmc
pop
int3
inc
cmc
jbe
push
jp
movsb
clc
call
nop
loop
sahf
xor
mov
sub
xlat
sbb
call
in
out
sub
jmp
inc
jmp
popa
mov
cmp
jge
pop
jo
cld
shll
addr16
test
cmp
in
add
adc
mov
rcrb
imul
sub
xchg
imul
xchg
inc
mov
loopne
xchg
add
std
scas
imul
xchg
push
xchg
hlt
xlat
and
ds
hlt
xchg
movsl
loope
add
add
movsl
lret
dec
loopne
inc
lret
sahf
imul
outsb
sbb
cmpsl
dec
aad
push
pusha
stos
cmp
fiaddl
lret
outsl
in
shrb
test
jp
push
push
cmp
call
cmp
dec
sbb
sub
out
aad
outsl
jecxz
mov
xor
out
inc
cld
js
roll
dec
fcmovne
inc
scas
mov
mov
mov
clc
out
mov
movntq
sub
in
mov
mov
and
out
xor
lock
adc
mov
mov
add
sbb
and
scas
inc
push
lock
push
repz
in
add
in
xchg
cs
fimull
mov
sub
in
inc
scas
jns
jno
scas
out
adc
or
les
pop
arpl
pushf
repnz
push
jp
lret
push
mov
jmp
pop
xlat
inc
cs
lret
mov
je
aas
cmp
push
shl
ss
push
enter
shr
fildll
xlat
lods
lods
ljmp
jne
jg
inc
jge
popf
lods
mov
shl
sbbl
pop
setbe
call
jne
adc
div
psubsb
fnstenv
xchg
jecxz
jg
pop
ljmp
sbb
xor
repz
je
std
and
xlat
imul
aaa
jmp
lods
and
cmp
in
enter
and
mov
clc
or
sbb
lock
dec
mov
rclb
inc
mov
adc
jbe
rcrl
out
fstpt
and
push
dec
js
cmp
sub
sbb
dec
push
xor
out
sub
mov
cmp
mov
or
jbe
fcom
mul
mov
inc
ret
data16
popa
out
imulb
mov
sbb
push
int
xorl
les
xchg
mov
add
inc
xchg
mov
push
mov
sti
jp
sub
adc
mov
mov
and
mov
jnp
cmp
cmp
adc
xchg
add
sub
dec
push
add
mov
push
cmp
xchg
lods
dec
mov
sbb
sub
mov
cmp
das
test
jne
enter
mov
shll
test
adcl
lret
outsl
mov
xchg
lret
aad
pop
mov
pop
jbe
cmc
les
stos
jb
push
lea
vhaddps
push
orb
pushl
cmp
jg
add
sbb
nop
push
fwait
rcll
rcl
aad
jbe
test
test
aas
hlt
cmp
inc
push
mov
jnp
test
mov
mov
jecxz
mov
dec
pushf
add
sahf
stos
fidivrl
int3
pop
daa
jbe
xchg
push
mov
inc
clc
loope
ret
ficoml
mov
jbe
fdivrl
ret
icebp
dec
ds
sbb
xchg
iret
insl
sub
cmp
in
push
enter
and
std
out
stos
data16
dec
adc
repnz
cli
push
in
fwait
outsb
mov
lahf
pop
pop
ficoms
fists
clc
es
sbb
xchg
cmp
or
pop
leave
cmp
sbb
adc
xchg
xlat
scas
testb
ss
in
xchg
and
push
mov
das
xor
stos
and
fwait
dec
stc
ljmp
sbb
mov
out
insb
sub
lret
and
or
mov
roll
cmp
cmp
jg
hlt
out
sar
sbb
sbb
cmc
and
push
pop
sti
insl
xchg
jecxz
loope
and
clc
movaps
fisttpl
lock
divb
pop
push
pop
ficoml
lret
xlat
inc
ds
testl
mov
cmp
push
xor
adc
adc
pop
add
lods
adc
cmc
lds
out
jg
cmp
clc
int
fnstenv
mov
sub
rcrb
inc
cmp
sub
jl,pt
jo
repnz
mov
sbb
dec
or
daa
clc
jno
mov
sbb
repnz
out
rcl
stos
shll
xchg
in
outsl
jecxz
sub
scas
divl
mov
ljmp
and
sub
fists
add
pop
imul
out
je
cmp
mov
mov
test
or
hlt
push
jl
inc
sub
cmp
xor
ret
dec
sub
xlat
push
rorl
lret
ljmp
int
inc
scas
pop
int
out
jmp
or
push
fdivrl
mov
pusha
sbb
ja
test
add
add
neg
mov
loope
repnz
mov
xlat
or
xchg
mov
je
xchg
mov
sub
pop
mov
sub
sbb
mov
xor
sbb
call
aas
fcomps
adc
sbb
xor
into
mov
cmp
push
sbb
sbb
add
fldcw
enter
sub
pop
dec
frndint
scas
mov
fldl
aam
fwait
clc
xor
mov
sbb
jne
inc
cld
push
cltd
push
xchg
outsl
sbb
fs
cwtl
mov
shrb
in
les
leave
out
out
int3
xchg
jmp
xchg
mov
int
mov
into
inc
pop
scas
sets
lret
mov
pushf
mov
pop
sahf
or
fcmovbe
mov
scas
mov
iret
movsb
pop
xor
cwtl
movsb
rorb
in
test
cli
lods
out
lret
xchg
lods
xchg
xchg
cmp
mov
pop
xchg
popa
xchg
mov
mov
pop
jle
xchg
or
sahf
pop
pushf
jnp
scas
sahf
and
test
imul
test
insl
inc
xchg
cli
out
stos
inc
jo
lea
jae
nop
inc
pop
jno
pop
popa
jae
pop
mov
pop
pop
or
pusha
pop
jg
arpl
loop
mov
inc
dec
movsl
loop
fdivrl
ret
gs
repz
inc
inc
daa
cmp
ret
jecxz
add
aam
pop
push
out
scas
sbb
lahf
icebp
mov
inc
cs
and
std
ret
in
push
sub
xchg
inc
push
call
xor
xchg
mov
je
sbb
sbb
aam
sub
xor
subl
mov
adc
in
adc
cmp
dec
pop
pusha
jmp
bound
xor
pop
out
adc
jg
jl
lea
jge
cwtl
popl
xlat
adc
sub
mov
sub
fdivrs
andl
fdiv
negl
cmp
imul
inc
fwait
lock
insb
insb
adc
ss
xor
ja
popf
inc
inc
inc
push
shlb
or
les
das
out
cwtl
aam
ret
fstl
call
ds
and
mov
xor
push
mov
jl
pop
and
mov
sub
sbb
das
int3
out
scas
out
repz
push
inc
insb
bound
aaa
pop
sub
pxor
aas
repz
pop
subl
inc
xchg
mov
adc
jmp
cmp
shrl
lea
push
fadds
xor
sub
das
ss
pop
negb
insb
and
imulb
sub
inc
sub
bound
das
loopne
pop
push
mov
adc
cli
add
imul
mov
inc
cwtl
ucomiss
test
sbb
pop
pop
sub
cwtl
sarl
cmpsb
arpl
mov
mov
ret
sub
mov
xchg
pop
aaa
dec
insb
pop
in
cmpsl
or
sub
mov
cmp
insl
ficomps
dec
or
adc
cs
xor
pop
or
push
daa
xchg
xrelease
lret
aas
or
cmp
or
inc
inc
push
mov
adc
inc
pop
mov
sub
mov
ds
jae
adc
xor
jle
adc
sbb
dec
xor
inc
fdivs
movsb
and
ds
psllw
imul
adc
setnp
mov
ret
hlt
je
push
xchg
or
mov
cmp
or
fstpl
xor
lock
sbb
pop
cmpb
insb
xor
into
sbb
add
test
je
icebp
mov
add
lret
add
push
push
loopne
xchg
imul
fisubl
adc
push
xor
ds
jae
sbb
in
test
mov
jmp
xor
and
ja
sbb
imull
mov
shr
cmp
fdivrl
clc
out
ljmp
or
and
adc
pop
jo
jl
fmull
and
xchg
jne
pop
or
mov
mov
and
scas
and
bound
mov
dec
lods
xchg
rorl
sbb
jp
aas
and
add
push
xor
std
hlt
insb
push
mov
sbb
jnp
jp
loopne
xchg
pop
std
aam
shr
add
jnp
in
cmpsb
cmp
and
and
in
repnz
sbb
popa
mov
xchg
int3
or
das
mov
jl
or
shl
pop
sbb
sbb
into
es
outsl
add
loopne
into
add
cmp
test
mov
pop
pop
in
iret
lea
cmpsb
gs
inc
push
int3
icebp
std
loop
inc
add
or
xchg
lea
xor
aam
sub
sub
push
xchg
push
cld
shlb
cmpsl
push
jns
daa
shlb
fisttpll
cld
cmp
jbe
arpl
or
cwtl
xor
add
scas
xchg
sbb
xchg
or
cmp
pop
pop
lds
outsb
add
jo
adc
or
fiadds
push
lods
sahf
sub
jae
mov
mov
sbb
ficompl
xchg
fsubrs
shrb
sbb
jg
ja
shr
inc
cmpl
cmp
lret
dec
xlat
mov
scas
mov
iret
push
std
pop
insb
clc
in
push
cmp
and
push
push
mov
incl
dec
sbb
push
pop
das
neg
adc
rcrb
pop
add
mov
push
hlt
add
rol
mov
xchg
cmc
mov
fadd
hlt
ds
mov
lock
lock
add
or
jbe
repz
jne
dec
rorb
nop
ret
fdivs
shrl
jno
nop
add
cwtl
into
adc
test
sbb
sahf
sub
push
sub
ret
shrb
shrl
out
or
xor
xor
mov
test
stc
or
lods
dec
mov
repnz
push
sbb
fildl
rcl
fcomip
xor
addr16
or
add
lret
outsb
xor
mov
jb
loop
xchg
jl
mov
push
inc
or
imul
loop
nop
mov
fnstcw
mov
inc
cs
jecxz
cld
cmpsb
les
mov
hlt
fiadds
sub
mov
roll
add
outsl
aad
das
mov
add
or
pusha
aad
inc
xor
cld
ds
loope
shrb
pusha
dec
push
dec
pop
js
add
cld
sub
or
fiadds
ss
xlat
sar
std
push
mov
les
js
icebp
push
je
and
cmpsl
inc
push
shlb
cmpsb
xor
sbb
movsb
and
movb
jae
jge
push
sub
push
adc
addr16
roll
flds
in
call
push
sbb
out
ja
hlt
dec
stos
cld
das
mov
adc
lea
sbb
xor
adc
out
or
mov
mov
xchg
push
xor
insb
ss
lret
kshiftrb
add
mov
pop
push
cmc
and
aas
mov
mov
jne
or
and
imul
push
xchg
xor
hlt
push
aad
add
sbb
xor
pop
mull
ss
push
pushf
push
xor
ds
push
mov
xchg
sub
push
sbb
frstor
fisubl
enter
jo
add
fnstcw
loope
inc
mov
inc
push
fists
xor
stos
aaa
imul
mov
mov
call
dec
in
dec
cmp
push
adc
push
add
out
enter
gs
ret
fnstenv
outsl
cmp
rcr
sub
jecxz
std
cmp
sbb
mov
pop
fidivrl
cld
shl
push
sti
xor
out
addl
mov
pop
and
mov
sbb
dec
es
and
adc
mov
bound
pushf
fstps
in
popf
icebp
sub
jnp
mov
fdivl
in
xlat
add
jl
cmp
repnz
mov
adc
stc
mov
mov
xchg
adc
adc
cmp
inc
call
add
enter
push
sbb
xor
or
das
fistps
orl
xor
sahf
mov
push
mov
js
dec
daa
cli
mov
fdivr
or
add
scas
xor
idivb
mov
dec
or
mov
in
inc
into
test
inc
rcl
or
hlt
cltd
inc
cld
mov
pushf
pushf
jecxz
mov
sbb
or
push
shlb
mov
xchg
pop
fwait
and
and
mov
xor
cltd
movsb
sbb
outsl
ret
mov
lods
icebp
into
cmp
dec
add
out
ss
adc
sub
negb
into
clc
cmp
push
hlt
pop
std
outsl
lock
test
out
loop
insl
ret
dec
cmpsb
imul
movsb
mov
cmp
cs
pop
xor
xor
jle
lcall
inc
mov
ljmp
mov
xchg
leave
push
push
lods
add
das
mov
nop
clc
mov
stc
ret
mov
lretw
xchg
outsb
ds
add
out
adc
test
xchg
xchg
mov
lahf
nop
and
adc
xlat
test
push
das
mov
pop
aad
mov
sbb
ja
lds
adc
jnp
mov
cmp
cmc
cld
shlb
mov
pusha
adc
call
aaa
rclb
mov
mov
or
lahf
sub
mov
push
ret
xchg
sub
cmp
push
adc
and
addl
imul
repz
lods
or
ret
fwait
ret
lock
push
fisubrl
scas
lret
add
jo
cwtl
int3
push
mov
xorl
fwait
mov
jl
jl
fcoml
test
in
sbb
popa
mov
pop
inc
xchg
lock
lahf
cld
jmp
pop
sbb
adc
sti
ret
push
pop
les
jo
mov
fsubrl
ja
fwait
xchg
lret
les
add
nop
loopne
loop
cmp
outsl
adc
mov
aad
push
inc
lock
iret
jmp
mov
mov
sbb
in
xor
sbb
outsb
bound
jmp
adc
shll
mov
cmp
iret
inc
xchg
jmp
insb
add
and
into
sbb
in
inc
mov
rol
stos
int
mov
pop
pushf
std
adc
stos
out
popf
call
xchg
inc
pop
inc
adc
fs
imul
pop
add
pop
inc
inc
add
xlat
push
shl
out
pop
xchg
lea
lret
mov
sbb
in
mov
dec
fbstp
lods
std
scas
xchg
in
pop
mov
scas
adcl
ret
fsubrl
jg
jns
or
sub
mov
shlb
fisubs
jb
mov
inc
sub
shlb
frstor
int3
lods
into
pop
inc
fists
lret
jp
push
push
xor
sbb
addr16
mov
mov
in
sbbl
adc
mov
out
loope
jns
jae
inc
mov
aam
mov
icebp
inc
mov
rcrl
or
daa
push
or
lods
mov
xchg
push
adc
push
rcrl
into
sbb
daa
aas
out
add
jmp
pop
push
js
aam
imul
out
cmp
cmp
dec
push
inc
mov
fidivl
jl
jb
adc
pop
mov
aad
sbb
filds
add
out
sbb
cmpsb
cmpsl
and
xlat
movsb
xor
cwtl
push
push
leave
fs
orb
stos
stos
jnp
add
jge
call
inc
inc
aad
jmp
xchg
push
shll
mov
jmp
mov
hlt
in
ret
loopne
outsl
cltd
inc
sub
jle
decl
cmp
aad
pushf
dec
lock
std
xor
mov
sti
jl
pop
icebp
and
mov
sub
and
ja
adc
mov
adc
jge
scas
sarb
push
enter
ret
fiadds
mov
xor
ja
in
xor
xlat
jns
rcl
or
lahf
enter
rcrl
enter
fsts
cli
pop
ds
imul
or
fistl
shlb
push
icebp
adcb
sarl
jbe
and
das
into
notl
adc
out
jmp
inc
and
mov
mov
adc
sub
adc
loopne
add
mov
pop
add
pop
das
popa
adc
or
add
jecxz
arpl
aam
xchg
dec
fsubrl
or
pushf
jne,pt
xchg
pop
and
call
filds
int3
fwait
pop
shll
hlt
pop
cmpsb
adc
push
stos
loopne
pop
out
into
xchg
mov
sub
stos
into
and
cli
inc
loop
mov
stc
imul
icebp
outsb
arpl
mov
inc
sbb
fstl
ret
mov
mov
out
sbb
inc
test
sub
push
jg
shll
nop
adc
pop
test
add
fstp
jbe
cld
lret
in
cltd
je
aas
adc
ds
fmull
ret
add
fistl
movsl
daa
rorb
adc
test
jecxz
mov
lods
add
jecxz
mov
push
cs
mov
out
and
in
dec
ficompl
push
loop
bound
lds
testb
shll
nop
aam
je
fstl
or
cmp
jle
dec
push
push
add
repnz
out
xchg
lcall
aad
sahf
or
ret
mov
jo
fildl
int
orl
pop
nop
aam
aam
sub
fidivrs
lahf
pmuludq
or
cmp
xchg
mov
dec
jp
pusha
loope
push
push
mov
pop
mov
shll
cmpsl
add
sbb
insb
les
fwait
adc
mov
ljmp
loope
das
and
pop
sbb
mov
ljmp
sub
testb
push
popf
outsl
push
xor
jecxz
lea
push
aaa
nop
rcl
jnp
mov
rorb
push
jge
inc
sub
outsl
xor
in
xor
repz
inc
fildll
cmp
faddl
mov
push
cmp
pop
and
add
clc
cmpsb
lea
lret
pusha
std
loopne
push
out
push
jo
pusha
xor
popa
push
dec
aas
mov
icebp
aas
lcall
cltd
add
or
pusha
out
push
ret
xlat
pop
inc
mov
shlb
inc
pop
jge
or
or
lock
test
aam
aam
lret
mov
push
ss
test
lea
cmp
cmp
add
ficoms
xor
sbb
cltd
xchg
jmp
leave
int3
push
fmull
insb
in
notb
stos
mov
mov
inc
mov
mov
dec
aad
imul
mov
loop
std
int
adc
dec
dec
into
jge
in
stos
inc
inc
pop
shl
cli
fistpll
pop
ficomps
out
dec
ret
fmull
jne
rsm
lret
negl
fucomp
cmp
mov
pmulhuw
movsl
cmp
std
mov
inc
jbe
push
iret
cmpsl
push
fdivp
push
dec
add
jb
sub
mov
mov
add
cld
out
outsl
push
arpl
es
adc
mov
loopne
pushf
lret
cwtl
flds
mov
dec
leave
sub
fcoms
or
out
repz
cli
inc
out
xchg
push
jno
in
xlat
jne
mov
cmp
ret
xchg
push
shlb
dec
jmp
push
xchg
inc
inc
and
jmp
sbb
jl
xchg
paddsb
xor
xlat
and
repz
into
pop
loop
rcr
xchg
aaa
shrl
cltd
pusha
in
repz
cmpsb
aad
jle
std
hlt
sbb
or
adc
aad
jne
into
mov
out
lds
mov
outsl
mov
fcompl
adc
cmpsb
mov
sub
fmuls
es
mov
cmpsl
les
clc
sub
dec
jae
pop
cltd
mov
loope
push
mov
fadd
inc
or
in
pop
dec
lods
bound
jo
daa
in
scas
das
enter
lock
sbb
adc
push
add
outsl
es
adc
imulb
mov
enter
adc
cmp
mov
mov
push
sub
add
adc
mov
inc
out
ljmp
mov
or
out
rolb
aam
movsl
ret
or
xchg
iret
pop
xor
lods
adc
mov
mov
into
iret
std
outsl
sub
mov
loopne
aad
insb
repz
pop
repnz
xchg
mov
and
cmp
and
sbb
cmp
add
sbb
daa
dec
xor
in
adc
loopne
testl
adc
shlb
xchg
pop
dec
xchg
cmp
and
xor
scas
jb
fs
repz
mov
dec
fsubs
mov
mov
arpl
add
movsl
push
xchg
popa
jecxz
pop
aam
adc
add
stos
ja
xchg
es
add
sbb
xor
add
std
movsb
sbb
xchg
aaa
test
je
pusha
or
jo
xchg
or
pop
mov
cmpsb
insb
xor
xchg
sbb
pushf
divl
lds
jnp
scas
jp
cli
out
jbe
mov
pusha
mov
push
sbb
inc
ds
imul
out
stc
dec
in
data16
rcrb
popf
inc
fstpt
mov
imul
dec
aad
sub
movsl
imul
jne
dec
push
iret
and
jno
cltd
adc
mov
roll
inc
xlat
js
inc
test
lock
hlt
pusha
test
jno
add
inc
loope
push
mov
add
dec
icebp
lcall
jnp
fistpll
push
call
cmp
xchg
lret
call
jl
cmpsl
pop
mov
sub
xor
stos
clc
out
add
add
inc
xor
popaw
aaa
xchg
pop
cs
ss
add
pop
ljmp
and
lods
add
jge
xchg
sbb
outsl
jmp
inc
xlat
pop
lea
cmp
cmc
add
xchg
or
mov
lret
cld
jp
or
sub
ss
shl
in
and
mov
mov
push
xor
out
mov
subl
popl
in
fcmovnu
inc
pushf
into
dec
jle
push
cmovge
pop
and
mov
aam
ds
hlt
push
and
mov
call
lahf
mov
les
daa
rsm
ljmp
int
scas
loop
out
xor
or
sbb
iret
mov
in
fmuls
or
sub
in
clc
push
scas
mov
vpmaxub
insl
popa
adc
mov
push
aas
add
add
xor
imul
xchg
sbb
push
add
ret
mov
lret
dec
adc
dec
or
ret
cmp
inc
fcoml
mov
lahf
fcoml
pop
repnz
in
push
std
xor
jbe
or
adc
push
pop
mov
repnz
pop
movsl
xchg
inc
xor
jmp
icebp
loopne
xlat
push
outsb
mov
jne
add
ljmp
leave
sub
push
push
repnz
sub
std
pop
dec
ret
cmp
cld
push
ret
insl
daa
pushf
mov
mov
sarb
sub
into
fisttpl
cltd
test
imul
into
hlt
jne
xchg
sub
pop
pop
sub
sarl
pop
cmp
fisubrl
xor
adc
repz
stos
or
push
pushf
aam
jns
inc
mov
out
int
xchg
inc
call
loopne
mov
jmp
leave
xchg
in
les
jne
repz
xor
jo
pop
adc
jb
aam
call
ret
sbb
adc
mov
fidivs
xchg
sbb
outsl
jb
sti
or
push
mov
aam
mov
bnd
out
dec
pusha
and
xchg
movsb
rolb
fwait
test
aas
cmc
adc
imul
sbb
cmpsl
sbb
cmp
js
adc
sbb
and
lret
push
outsl
lds
cmp
mov
adc
ja
push
mov
leave
push
test
ja
sub
es
loope
test
popa
paddq
stc
popf
fcmovbe
imul
jnp
stos
dec
movsl
fdivrs
push
stos
xchg
inc
and
je
add
mov
jae
push
ljmp
adc
mov
mov
jne
xchg
xchg
ret
inc
adc
sub
cmc
test
push
int
mov
cmp
repnz
mov
fsts
hlt
movsb
xchg
push
out
mov
sbb
cltd
xchg
repz
int
in
sub
jne
mov
aas
ficoml
imul
mov
mov
mov
mov
shrb
in
negl
xlat
shll
aaa
pop
mull
cmpsl
xchg
inc
sub
fsubr
sti
clc
leave
cmpsb
lea
scas
xchg
in
es
out
sub
mov
clc
xor
jle
iret
lock
jg
fcmove
aaa
xchg
mov
jae
mov
insl
mov
loope
and
mov
sbb
xor
adc
mov
sub
or
cmpsb
jecxz
cld
jne
jge
mov
mul
iret
jb
xor
dec
cmc
stos
int
add
std
in
lret
jns
sub
or
int3
rol
mov
mov
sub
adc
lret
cmp
fcomp
sbb
xchg
push
push
pop
adc
repnz
ret
adc
das
xrelease
gs
dec
cmp
push
push
add
push
sub
add
jg
dec
andb
arpl
mov
sbb
pop
adc
or
lret
mov
jo
xorb
mov
dec
sbb
mov
sbb
notb
rclb
ret
loopne
pop
lds
ret
jmp
in
and
xchg
inc
inc
ss
or
into
enter
dec
jecxz
stos
xchg
popa
loopne
ret
les
fisubrl
mov
sbb
sahf
pop
aam
dec
and
cmp
pop
fisttps
sub
cmp
test
push
notb
xlat
shll
fnstcw
shll
xchg
lods
mov
test
ret
jns
xor
out
lahf
and
out
popf
out
cmc
adc
std
pop
push
jo
shr
cmpsb
cmp
hlt
pop
ss
adc
jmp
fimuls
and
pop
sbb
pop
pop
fisttpl
hlt
fld1
test
fsubs
or
sbb
out
hlt
mov
lds
cmpsl
loop
ret
pop
in
lock
in
sti
mov
pop
xlat
mov
popa
ficoms
pop
leave
out
stc
jge
mov
mov
adc
cld
aas
pusha
xlat
mov
mov
loopne
fwait
sahf
mov
and
cld
cmp
xchg
xchg
mov
mov
xchg
mov
ljmp
xchg
lock
mov
inc
push
sbb
adc
jno
push
std
xor
push
dec
inc
sbb
sub
ljmp
shrb
mov
cmp
mov
ret
mov
or
fcomp
mov
fwait
pop
data16
mov
leavew
inc
movsb
clc
cmpsb
dec
sub
push
cmp
popa
fwait
pop
inc
out
insb
push
lcall
imul
arpl
push
outsb
mov
call
and
repz
dec
cmp
xlat
push
add
outsb
mov
adc
dec
lret
lock
stos
fldz
add
jmp
mov
mov
jno
add
push
jge
mov
mov
sti
pop
movsb
push
movl
xchg
mov
cmp
enter
mov
aad
scas
cli
push
xchg
aam
mov
fistl
lds
aam
ret
sbb
dec
je
stos
push
dec
rclw
mov
rclb
cs
adc
xor
jb
lea
loopne
cld
aam
or
clc
out
aam
and
xlat
in
adc
shll
hlt
aad
xor
jg
xchg
data16
fstpl
aad
fldenv
mov
adc
sub
and
mov
in
cmc
xchg
lock
jmp
aad
cli
jge
mov
mov
pop
pushl
xlat
mov
xor
scas
add
sbb
jl
pop
mov
pop
clc
lahf
mov
or
cmp
data16
outsl
xchg
xchg
jns
sub
add
sub
dec
lret
cmpsb
aad
sub
int3
xor
icebp
out
xorl
xlat
adc
in
sarb
xor
out
lret
inc
not
adc
and
je
movb
shlb
pop
fwait
roll
idivl
mov
movsb
int3
in
push
lock
cmovbe
daa
stos
pusha
dec
out
je
lahf
inc
stc
xchg
out
cs
hlt
xchg
shll
jae
or
lret
or
and
mov
sub
int
adc
cmp
lret
or
sbb
fnstcw
mov
sarb
xor
loope
jmp
mov
mov
leave
push
or
or
push
push
movsl
push
dec
stc
adc
add
sarl
in
pop
not
loop
inc
xor
stos
dec
add
ret
mov
adc
bound
mov
pop
lahf
jge
sbb
mov
testl
ret
notl
xchg
test
push
pusha
lds
movsl
daa
ret
in
lods
repnz
adc
or
jle
loope
movsl
dec
jl
leave
mov
testl
adc
or
sbb
push
lock
jecxz
add
lds
movhlps
xor
dec
popf
push
add
loopne
fdivrp
mov
mov
ret
xchg
dec
popf
mov
out
je
loope
shll
xchg
aaa
mov
ret
call
ror
lret
push
xchg
mov
cmp
lods
xor
stos
push
call
mov
adc
les
jbe
repnz
xor
dec
pop
add
sub
and
test
ret
sub
leave
shlb
scas
into
lcall
out
add
mov
or
mov
sarl
mov
add
outsl
xchg
sarl
clc
push
icebp
ffreep
push
popa
mov
sub
cmp
lds
testb
sti
mov
add
cmp
pushf
pusha
mov
sbb
and
dec
jns
packsswb
js
out
cld
xor
imul
out
adc
dec
icebp
sub
inc
inc
mov
fildl
lods
scas
pushf
jecxz
sub
adc
sub
loopne
push
pusha
dec
cli
dec
mov
push
mov
sbb
mov
adc
cld
dec
sar
pop
push
lods
push
pcmpgtb
cmp
dec
dec
sub
lods
rcrb
fidivrs
or
jno
sub
fidivl
sbb
mov
xchg
push
pop
js
jne
add
fisubrl
pop
cmc
or
out
sub
aam
sahf
xchg
inc
cmp
repz
rcl
cmp
inc
mov
jge
call
jl
into
sti
or
lahf
repz
dec
jae
sbb
adc
in
or
repnz
aad
mov
rcr
xor
pop
fdivl
mov
mov
movsl
aam
xchg
mov
sbb
xor
add
xor
pop
cmc
ret
frstor
mov
push
jmp
out
jb
iret
or
cli
pop
pop
fistps
sub
mov
fwait
and
xchg
lahf
data16
jmp
push
pop
cs
fadds
mov
inc
add
hlt
pop
repz
add
push
cmp
jge
ret
inc
cmp
outsl
test
and
repnz
pop
leave
popa
pop
insb
fs
dec
xchg
push
dec
jae
daa
lods
in
out
daa
test
out
les
scas
and
mov
mov
cmp
xor
ror
out
outsb
leave
pcmpeqb
or
mul
cmp
enter
jecxz
or
int3
inc
enter
mov
dec
lock
aam
push
pop
out
fbstp
cmpsl
popa
adc
add
cmc
dec
stos
inc
les
ljmp
negb
mov
jb
jnp
fldenv
xor
cmpl
mov
enter
inc
add
jo
mov
leave
mov
mov
mov
gs
mov
mov
cmpsb
pusha
mov
push
sbb
push
xor
aas
loopne
int3
dec
jne
nop
push
mov
popf
lea
aaa
jae
out
pusha
movsb
cmp
jne
ret
cli
xchg
pop
stos
and
mov
sbb
ljmp
adc
mov
pop
sbb
push
xchg
sub
rcll
pop
jmp
scas
xor
cmpsl
and
add
sarb
stc
stc
out
pusha
scas
aaa
jg
scas
orl
fnstcw
aad
shl
outsb
sub
outsl
pusha
pusha
jne
xor
cmp
push
fcmove
lods
out
fstl
add
iret
add
cld
pop
pop
push
adc
lret
pop
ss
inc
faddl
mov
dec
stos
sbb
imul
movsb
jmp
mov
add
push
push
xor
flds
aad
fcomps
inc
rcl
cmp
push
mov
cli
adc
lret
sub
xchg
cs
daa
xor
sbb
fdivp
pop
cmpsl
jge
test
or
push
je
xor
imul
push
lcall
mov
fwait
ss
jl
pop
cmpsl
std
mov
unpcklps
popa
pop
addr16
push
outsl
sbbl
mov
mov
pop
inc
push
out
outsl
dec
add
dec
inc
repz
shrl
jecxz
aas
mov
xlat
add
fimull
aaa
ret
loopne
cmp
xor
jge
adc
fcoml
pop
popa
sti
std
out
stc
xor
sti
aam
out
sbb
cmc
jmp
mov
inc
mov
jb
mov
cmpb
sbbl
cli
mov
cmc
lahf
mov
sub
imul
rolb
repnz
repz
cmpsl
in
stos
into
push
mov
repnz
jbe
out
lods
bound
std
repz
imull
lock
loope
dec
adc
mov
inc
mov
inc
ret
xlat
mov
lods
hlt
adc
sub
repz
outsb
mov
mov
mov
push
btr
xlat
adc
pop
mov
push
int
mulb
add
inc
pop
cli
das
mov
lods
mov
sbb
js
pop
ret
ret
adc
cmp
rorl
test
cmp
icebp
lock
fdivs
fsubrp
xchg
push
icebp
xor
iret
repnz
shl
ret
xor
js
lods
fcomi
mov
push
sub
sbb
lods
xor
xchg
repnz
xchg
sbb
pop
aam
aam
fwait
xor
aam
push
adc
repnz
jge
icebp
test
cld
insb
je
popf
lods
pop
adc
jo
addr16
cs
jecxz
fistps
popl
adc
sub
add
fwait
outsb
fmull
testb
div
aad
xchg
mov
dec
int3
sbb
mov
loop
adc
sbb
mov
dec
rorb
adc
jb
sbb
mov
int3
mov
or
fadd
in
mov
push
and
shrl
cmp
sbb
pop
in
dec
and
add
mov
pusha
jp
in
lock
loopne
std
stos
jo
faddl
adcb
jmp
fisttpl
cmc
sbb
add
mov
jno
inc
loop
out
inc
fsubl
incl
clc
aam
sub
es
sbb
cmp
xlat
das
add
dec
jmp
dec
fxch
aad
divb
lret
sbb
aad
cmpsb
cmpsl
popl
xchg
daa
push
test
push
fildll
mov
push
fstpl
xchg
movzwl
xorb
mov
stos
and
into
jne
mov
xor
or
pushf
jp
xchg
jg
aam
into
mov
ret
rcll
repnz
repnz
or
daa
int3
inc
sar
pop
aam
jp
cmp
adc
adc
sarb
arpl
add
mov
iret
push
and
cltd
xchg
cltd
push
lods
clc
test
int
repz
dec
in
daa
in
jae
push
in
dec
scas
fnstcw
jmp
repz
mov
cmp
out
cmp
gs
cmp
sub
pop
mov
cmp
add
mov
jne
push
pop
or
lret
adc
iret
das
sbb
cmp
bound
in
jp
stos
adc
cli
mov
out
ds
les
add
sahf
or
jecxz
xor
shrl
aad
jmp
lret
mov
mov
jnp
into
clc
cmp
cmp
stos
xchg
ficoms
mov
int
push
das
push
fists
xor
xlat
int
lret
incl
lret
cld
cld
jg
ds
push
jmp
xor
jle
mov
sti
lcall
mov
mov
cmp
push
jb
mov
add
out
or
sbb
jne
in
xor
fnstcw
vpmadd52luq
xor
mov
adc
popf
push
sbb
push
inc
shll
sbb
sbb
adc
mov
lock
pop
loope
sahf
sbb
lock
test
adc
push
pop
sbb
out
xchg
fcompl
dec
movsb
jle
repz
add
cli
cmp
call
add
mov
jns
repz
push
mov
push
lret
or
enter
scas
lcall
imul
lahf
and
stc
aas
cs
punpcklbw
mov
xchg
cli
mov
int
lcall
mov
cmpsl
sub
push
rcrb
pop
ljmp
lock
pop
push
lret
aas
outsb
xchg
adc
xchg
dec
adc
out
test
dec
mov
xor
sbb
out
dec
bound
add
dec
lds
das
push
mov
clc
and
arpl
mov
xchg
jmp
ljmp
out
cmp
push
add
cs
test
std
ds
test
daa
gs
lods
test
xchg
or
std
in
clc
out
cmp
jl
ret
xor
lds
int3
fldenv
jne
idivb
gs
andb
mov
insb
pop
aaa
mov
or
repnz
pop
test
stc
cmpsb
mov
popa
jecxz
jle
cmpsl
repnz
out
std
stc
sub
fcompl
clc
pop
paddq
into
inc
scas
repnz
mov
dec
flds
repz
xchg
not
or
in
imul
scas
dec
pusha
ljmp
sub
cli
or
imul
es
inc
pop
pop
clc
xor
mov
shlb
aas
aam
mov
adc
stos
dec
xchg
aad
xchg
test
js
add
into
push
decl
stc
cmp
jmp
sub
pop
or
dec
lods
xchg
addr16
sbb
fwait
and
loopne
in
pop
outsb
movsb
xchg
mov
nop
divl
dec
dec
aaa
lock
mov
and
sub
inc
adc
shll
mov
mov
ja
in
and
je
cwtl
mov
inc
add
xor
dec
stc
fsubrl
xchg
stos
jecxz
fs
jne
testb
mov
push
nop
mov
mov
add
sub
shrl
loop
jecxz
push
adc
sti
add
cmp
repz
mov
les
repz
mov
cmp
dec
mov
rcr
aaa
jae
sti
and
sub
and
std
or
and
mov
push
mov
cmc
jno
sbb
or
mov
in
mov
dec
mov
sub
mov
or
shld
mov
cmp
daa
or
push
pusha
out
movsl
or
jbe
cli
sbb
fildll
mov
mov
fcoms
das
cwtl
sbb
les
divl
and
push
pop
xlat
or
imul
nop
pop
inc
loope
negb
mov
out
xlat
mov
fdivs
test
dec
out
fsts
xlat
and
in
xchg
rolb
fwait
or
lock
sbb
sbb
or
jmp
bound
or
daa
jnp
add
aad
das
xlat
loop
lret
xor
in
ret
lds
sub
and
push
inc
xchg
mov
push
xchg
dec
adc
push
icebp
arpl
insl
push
cmp
inc
insb
sbb
xchg
push
lods
dec
stc
frstor
sbb
jl
add
ret
aas
dec
mov
in
dec
pop
in
aam
pusha
popf
sbb
fidivrl
rcrb
lock
jbe
xor
and
inc
je
sbb
data16
mov
push
aam
pop
lret
pop
pop
push
cmp
ja
repnz
cmp
and
push
xor
dec
and
fbstp
jle,pn
mov
imul
jg
loope
mov
lret
insb
enter
cmp
dec
mov
es
lcall
lcall
add
es
xchg
jb
popf
icebp
movsb
cwtl
popf
or
divl
sbb
cmc
sub
shl
sub
icebp
jno
mov
ret
cld
sub
sar
cmc
sbb
lahf
cmp
jno
in
sarl
jecxz
xor
jae
das
xor
push
aad
les
pop
dec
sti
jecxz
clc
test
ret
and
pop
out
test
push
push
add
xlat
popl
je
lds
shr
or
cli
jbe
ret
push
les
les
ja
adc
sub
dec
popa
mov
mov
mov
add
movsb
sbb
sti
cmp
or
lcall
mul
popa
push
dec
pop
and
xchg
sub
cmp
pop
aad
xchg
sahf
dec
je
mov
fidivs
ret
xor
and
aam
lret
jle
mov
xor
cmp
das
cld
mov
insb
fisttpl
pop
enter
in
add
fcompl
cld
int
mov
out
mov
and
ljmp
lods
jns
xchg
in
das
mov
shlb
outsl
fwait
rorb
dec
mov
xor
clc
out
push
xor
pop
push
and
push
ds
add
shll
das
add
lock
aad
inc
mov
fdivrs
aad
jge
mov
jl
jb
inc
and
cmp
jae
iret
jne
xchg
adc
les
xor
sahf
mov
jne
cmp
dec
imul
inc
stos
dec
pop
rorl
pop
in
out
mov
mov
push
adc
push
or
orb
or
clc
fildll
out
cwtl
cwtl
fwait
sbb
fsub
adc
iret
mov
dec
daa
mov
outsl
pop
sti
mov
cmc
mov
or
pushf
mov
jp
xor
adc
fs
sub
inc
loop
cmp
sub
ss
adc
das
sti
dec
cmp
ds
fidivl
pop
mov
hlt
or
inc
out
cmc
into
sub
out
inc
jns
negl
xchg
fildll
inc
jmp
push
scas
nop
jmp
icebp
xor
repz
ret
mov
addr16
sbb
push
fwait
mov
ljmp
inc
ss
clc
fsubrl
lahf
repnz
jae
or
xchg
mov
mov
adc
sahf
dec
repz
ljmp
into
aad
mov
jle
mov
mov
mov
imull
clc
mov
fnstsw
mov
mov
outsl
lock
cmp
fwait
movb
hlt
sahf
xchg
aad
mov
insl
inc
cmp
aam
dec
outsl
sahf
aad
cmp
and
cmc
cmpsb
movsl
dec
repz
jb
xor
sti
push
ret
pop
cmp
inc
aas
js
pop
mov
dec
ds
cmp
inc
mov
cmp
fldcw
test
dec
mov
seta
ret
or
adc
out
add
push
jnp,pn
push
jno
popa
test
pop
int
cmc
sub
sbb
test
fwait
mov
lea
push
ja
pop
xchg
cmp
adc
jecxz
xor
loope
std
shrb
fisubrs
repnz
ljmp
ljmp
mov
rcl
jmp
push
mov
adc
push
mov
push
dec
mov
jecxz
es
pop
cwtl
in
in
lahf
push
stc
jbe
call
pop
je
fsubl
bound
insl
mov
aad
pop
dec
cmpsb
cwtl
fs
mov
or
imul
pop
faddl
dec
adc
sub
lock
fdivr
ror
fdiv
mov
mov
popf
sub
xchg
sbb
sti
loopne
cld
ret
lret
sub
push
and
mov
inc
cli
rorl
out
jbe
mov
inc
mov
mov
cmpl
fidivrl
int
sarb
xchg
sahf
xor
inc
fldt
and
inc
fcomps
mov
cmp
call
xor
out
insb
mov
mov
jb
rcrl
or
std
loop
popf
inc
out
insb
ja
xorl
cmp
push
loop
rorl
adc
sbb
cs
pop
push
mov
rcr
mov
dec
pop
in
push
pop
in
clc
rcrl
add
cmp
cli
mov
sahf
fdecstp
cmp
add
cmc
test
add
mov
arpl
rol
leave
outsb
mov
out
mov
sti
movsb
loopne
jb
pusha
inc
mov
mov
push
cmp
in
test
sub
or
dec
add
out
jbe
lods
sarb
leave
adc
ds
hlt
dec
jno
int3
cmpsl
aad
inc
mov
and
je,pn
or
jno
js
les
stos
mov
push
shll
xor
mov
adc
jg
mov
xchg
mov
pop
mov
aad
test
inc
es
adc
leave
idivb
ja
lods
mov
jnp
mov
fnop
stc
hlt
push
push
xchg
pop
pop
pop
lods
pusha
sbb
je
and
mov
jae
mov
or
add
xor
lret
push
sahf
mov
mov
out
int
adcb
jp
bound
or
clc
loopne
mov
mov
xchg
daa
mov
push
or
stos
inc
push
into
xor
jmp
clc
or
js
push
gs
mov
repnz
jge
insl
and
fneni(8087
push
int3
cmp
xchg
ret
sbb
fidivrs
ljmp
mov
jg
push
sbb
mov
push
jp
hlt
jp
xchg
mov
jp
sub
dec
in
inc
or
pop
aaa
push
dec
mov
test
inc
mov
sub
adc
xchg
inc
cmp
mov
stos
outsl
stos
addr16
fwait
ss
lea
out
jnp
into
pop
divb
in
movsb
es
push
sti
pop
lods
ljmp
dec
imul
pop
lods
mov
xor
movsl
lcall
aam
not
filds
push
je
fwait
cmc
testl
lret
int3
icebp
xor
push
and
inc
mov
clc
jp
jo
xor
mov
out
mov
add
insb
mov
fadd
gs
cld
pushf
aad
pop
mov
addr16
cld
mov
push
xchg
inc
stc
loope
mov
jecxz
mov
mov
lahf
add
out
mov
stc
fldt
ficompl
out
adc
fnstenv
rcrl
shl
out
push
xchg
aas
xchg
mov
push
lea
dec
addr16
fildl
inc
inc
xchg
mov
rclb
mov
das
cmp
lea
pushf
in
call
test
iret
jns
xchg
dec
inc
mov
mov
adc
xchg
xor
insb
fcmovu
cmp
cmc
add
inc
test
test
xchg
mov
jno
mov
sbb
mov
jne
jp
xlat
and
icebp
aaa
negb
push
call
outsb
mov
cmc
mov
mov
pop
std
std
jo
sbb
orl
and
out
mov
loope
or
sbb
mov
out
or
xlat
jnp
jne
iret
icebp
repnz
insb
mov
xlat
sti
mov
in
jl
push
and
iret
jbe
xchg
xor
inc
adc
ljmp
xlat
lahf
inc
jl
pushf
cld
shlb
stos
sbb
call
fistps
add
cmp
test
lock
in
push
mov
lds
faddl
jp
aas
inc
fsubs
testb
lds
int3
addl
mov
test
dec
rep
in
jmp
in
loopew
inc
loop
jge
jno
je
ja
dec
ffree
xchg
xchg
ret
fwait
aam
push
sbb
lock
push
std
out
aam
ja
push
imul
jns
and
out
icebp
push
inc
dec
pop
clc
dec
push
push
dec
dec
fsubrl
divb
xchg
ret
arpl
add
dec
std
jnp
cmc
outsl
out
test
enter
aam
and
enter
sbb
sub
and
stc
sub
mov
enter
lcall
inc
enter
fwait
outsl
jne
pop
mov
sbb
cmc
and
cmpsl
les
mov
int
add
dec
jecxz
mov
dec
mov
jno
popf
aad
pop
lcall
movsl
or
xchg
aaa
repnz
adc
mov
fbstp
test
cmp
sub
dec
lods
aam
das
sahf
adc
jmp
pop
fsubs
sbb
xchg
lods
push
arpl
loopne
xorb
jmp
mov
addr16
popf
jae
dec
not
lods
fidivrs
cmp
jbe
lods
fs
daa
stos
push
mov
mov
mov
mov
dec
pop
pop
int
sub
sbb
jo
jmp
or
mov
jo
pop
mov
or
out
xchg
hlt
jmp
mov
dec
dec
insb
mov
imul
shl
fs
out
jg
pusha
xchg
lea
mov
mov
push
jecxz
inc
and
mov
xchg
mov
xchg
stc
or
ljmp
sub
pop
mov
jne
jge
sbb
mov
mov
mov
shl
in
daa
loopne
adc
jae
setle
aam
ret
fiaddl
sub
aaa
mov
pop
int
aam
es
lock
mov
sub
mov
dec
xor
dec
int3
repz
ja
stos
adc
push
mov
mov
push
in
jns
sub
push
mov
pop
inc
test
arpl
pop
mov
add
jb
xlat
neg
pop
dec
push
fadds
jnp
pop
mov
fisubrs
sub
fstpl
ret
test
adc
fwait
lds
dec
fsubs
mov
push
fsubr
sub
sub
orl
dec
and
or
pushf
mov
sub
daa
ret
and
sti
movsl
sahf
ficoms
ja
push
mov
cmp
push
loop
xchg
or
sahf
pop
lcall
dec
dec
gs
int
dec
ficoms
out
popf
loop
aad
push
and
mov
lea
lods
cwtl
cmpl
fwait
inc
adc
pop
pop
sub
ss
popa
loopne
add
mov
not
dec
fdivl
pop
std
nop
test
mov
mov
mov
sbb
gs
xor
loope
mov
gs
js
jecxz
inc
dec
add
fcmovnu
push
daa
imul
mov
clc
fadds
sahf
pushw
pushf
and
adc
cs
pop
dec
enter
iret
sub
test
aaa
addb
fidivl
cs
push
push
dec
cmpsl
dec
dec
nop
fimuls
ret
or
cs
mov
xchg
cltd
mov
cmp
mov
pop
and
cmp
scas
mov
xchg
push
aaa
add
adc
iret
sbb
pop
outsl
pop
in
lods
pop
push
jle
frstor
xor
fdivl
pop
fbstp
dec
int3
mov
mov
popf
or
xorl
inc
mov
mov
cmc
nop
lea
sbb
add
je
cwtl
shl
pop
leave
pop
sarb
xor
xor
in
dec
scas
imul
leave
shll
sti
push
sbb
sti
lret
hlt
jnp
adc
dec
pusha
sub
lret
pop
sti
rcll
pop
cld
xor
je
fstpt
or
cmpsl
jle
mov
xchg
in
xor
mov
aaa
jl
xchg
in
pop
and
xchg
mov
dec
push
dec
clc
mov
arpl
std
jge
enter
cmp
inc
mov
mov
and
repnz
scas
sbb
jp
lahf
add
xchg
mov
adc
and
dec
push
pop
cmp
adc
cmpsl
movsl
test
sub
push
cmpsl
adc
and
insl
or
sub
out
test
mov
insl
clc
scas
cmp
lock
push
pop
dec
daa
cmp
sub
and
pop
pop
dec
cltd
into
fistpl
jae
shlb
dec
pop
or
imul
add
scas
add
xor
enter
sahf
xchg
movzwl
jne
push
adcb
pop
cli
nop
lret
cmp
mov
lcall
leave
shll
jno
dec
sub
pop
push
negb
lret
mov
push
jge
es
xlat
int3
stc
xchg
cvtps2pd
and
int3
fisttpl
and
dec
loop
rcll
sbb
popa
cmp
add
pop
je
test
sbb
cli
ss
adcb
aas
push
pop
dec
jb
and
out
mov
add
scas
iret
push
sub
cltd
add
out
insb
loop
xor
insb
jmp
pop
jnp
push
cmp
jne
cmc
cmp
jmp
inc
sub
shlb
dec
aaa
insl
xor
mov
xchg
sarl
sbb
test
div
shll
cmp
insb
xlat
icebp
and
leave
int
call
in
test
jecxz
ds
call
inc
mov
xor
in
movsl
pop
pop
sbb
mov
call
mov
cmpsb
xor
cmpb
hlt
pusha
adc
out
mov
hlt
xor
pop
jmp
cmp
loope
sub
and
lds
je
inc
xor
mov
in
jle
mov
iret
cmc
enter
sbb
shl
daa
lea
push
aam
pusha
out
mov
xchg
push
repnz
mov
cmp
xlat
paddsw
sub
mov
or
movsl
outsl
test
je
aam
stos
setno
gs
and
stos
movzwl
jb
or
rcl
mov
data16
loop
imul
push
inc
sub
pop
xchg
dec
cltd
pop
stos
adc
sahf
mov
adc
pop
cmp
push
and
fcompl
adcl
sub
push
push
fwait
jmp
mov
fbld
and
add
push
fiaddl
mov
add
paddsb
imul
aas
stos
pop
cs
data16
aad
xchg
decl
dec
fadds
lea
hlt
das
or
cmp
cmc
repz
ret
mov
std
test
shl
add
jmp
adc
neg
jmp
insl
in
push
cs
fsubs
rep
xor
out
in
or
lahf
and
ret
lock
std
rclb
rcl
mov
in
sbb
shrb
aad
out
and
std
mov
in
or
mov
xchg
adc
sti
inc
xchg
xchg
movsb
shl
gs
stos
or
mov
hlt
hlt
dec
inc
gs
in
cli
jne
rcrb
fistpl
mov
add
ret
sbb
inc
jg
or
pop
cwtl
or
xchg
fcomi
ret
rcl
out
mov
xchg
push
loopne
xchg
out
daa
push
enter
std
jno
icebp
mov
out
mov
or
dec
and
js
xor
mov
mov
ja
test
xor
pop
outsl
sub
das
or
cmp
jnp
rcrl
das
inc
nop
cmp
inc
and
into
or
cld
inc
lahf
inc
cwtl
int
adc
xlat
cmp
in
int
sbb
in
dec
xor
inc
lock
inc
loopne
sti
xlat
out
cmp
jns
cltd
jno
xchg
loop
in
pop
push
hlt
in
out
scas
push
fmul
mov
sub
insl
test
aam
inc
scas
je
push
stos
add
mov
in
pop
adc
std
and
fstpt
adc
fbstp
jno
push
and
sti
or
dec
stc
in
inc
push
into
popa
mov
filds
xor
xchg
pop
or
jle
add
or
cmpb
imul
rolb
adc
sub
sahf
pop
mov
mov
xchg
imul
or
mov
ret
inc
mov
mov
sub
xchg
sar
daa
lock
daa
jne
int
and
inc
fisttpll
xor
xor
push
hlt
inc
jmp
pop
xchg
and
pop
or
jo
xor
testb
cmp
push
inc
aaa
push
cld
cmp
lods
cmp
add
xor
jae
lock
mov
sub
adc
inc
repnz
into
imul
scas
stc
mov
sbb
les
or
xchg
dec
imul
adc
sarb
push
cmp
push
jo
jge
test
push
in
or
dec
les
fists
mov
pop
das
mov
mov
and
in
ja
rcll
pop
test
add
stos
jb
pop
in
jo
push
xor
loope
inc
test
jmp
jns
add
out
notb
lret
movsb
loopne
into
inc
jp
stos
xchg
pop
inc
das
mov
xor
lds
jne
fdivl
jne
loop
adcb
pop
sub
adc
mov
popf
ffree
pop
ljmp
cltd
out
cmp
insl
mov
cmp
das
cmc
fadd
mov
dec
es
mov
sub
out
lods
mov
mov
fsubs
cmp
sub
sbb
cltd
test
jecxz
lret
and
int3
hlt
cmp
ret
cmp
aam
sub
ficomps
jae
cmpsb
insb
cmc
cmp
push
jnp
xchg
inc
inc
sbb
push
jbe
adc
sub
xchg
pop
aas
aas
in
rclb
and
lahf
mov
mov
mov
and
fiaddl
jo
add
in
jno
call
pop
mov
xchg
test
mov
cwtl
push
fucomp
mov
push
dec
sbb
out
aam
rep
adc
inc
ja
stc
faddl
push
int3
mul
dec
jl
repz
xor
xor
out
xchg
jb
dec
cld
pop
fdivrl
pop
xlat
push
pop
xlat
xor
push
fcmovnbe
xchg
aam
sti
fldcw
cmp
sahf
mov
xchg
ret
daa
test
push
fcompl
ret
test
pop
icebp
mov
cli
push
call
mov
scas
xchg
clc
movsl
call
je
jo
rcrb
add
adc
cltd
add
jle
xlat
dec
mov
sbb
or
stos
lea
js
hlt
int
je
daa
fildl
aam
out
addr16
adc
sub
pop
push
cmp
dec
into
stc
cmpl
test
adc
cmp
les
dec
pop
xor
into
sahf
adc
adc
arpl
out
sbb
cmp
jb
and
xor
rcll
sub
xor
pop
das
mov
xchg
mov
push
shlb
mov
fs
inc
jge
xchg
cld
lods
into
add
and
sti
xor
fdivs
stc
outsb
push
mov
cmc
adc
ljmp
test
call
dec
mov
push
push
add
lock
gs
xlat
mov
mov
call
or
mov
jno
ss
clc
fildll
out
fildll
adc
pop
lea
push
cmp
lea
dec
fmuls
mull
imul
lret
and
mov
jbe
mov
orl
and
imul
cmp
sbb
in
mov
rorb
push
mov
iret
nop
push
cmp
pop
enter
pop
add
cld
or
cmpsl
adc
mov
mov
lahf
fsubs
or
inc
popf
push
ljmp
xor
loop
adc
mov
inc
xchg
mov
iret
lea
pop
add
jge
adc
sarl
push
inc
mov
fdecstp
stos
cmp
call
mov
pop
shll
jb
or
lds
fnsave
mov
es
pop
adc
xor
shlb
adc
cli
int
cmp
jne
cmp
xchg
std
lcall
jp
scas
add
jge
add
and
stc
lock
push
sbb
aad
bound
and
call
cmp
adc
lret
out
inc
dec
or
loope
ds
xchg
sbb
push
mov
cmp
test
fsubs
shlb
mov
sub
dec
loopne
adc
movntq
out
sti
pusha
scas
xor
mov
jle
mov
test
push
enter
testl
aam
inc
in
jbe
or
adc
aad
fucomi
inc
lock
mov
mov
call
sbb
sub
push
mov
pop
ret
stos
sbb
sbb
dec
int
rorl
pop
fcmovnbe
dec
ds
pop
inc
mov
rcrl
aad
xor
fdivr
dec
xchg
or
sub
std
mov
rorl
int
push
aaa
daa
mov
dec
js
adc
mov
or
or
das
and
cs
or
xor
add
pop
cmp
std
pop
je
stos
ret
ret
fsubl
inc
xor
sbb
std
test
pinsrw
jle
cmp
pop
cmp
jae
xchg
or
arpl
push
add
psubb
dec
push
pop
adc
xor
repnz
xlat
xorl
pusha
xchg
sub
adc
pop
adc
sbb
std
add
sahf
mov
icebp
push
xor
add
pop
js
std
cmp
decl
sub
cmp
jp
fld
jecxz
shr
subb
push
add
idiv
orl
xlat
in
cmpsl
gs
std
pop
imul
sti
fildll
lahf
in
faddl
arpl
fstpt
pop
add
pop
push
cmp
mov
scas
ss
das
int3
test
aaa
push
mov
insb
lahf
imul
pop
xor
and
jnp
jns
notl
ret
xchg
lret
adc
incb
sub
arpl
aaa
mov
incl
jne
in
outsl
jne
sub
mov
pop
xor
pop
cmpsl
cmp
addr16
and
pop
jo
daa
pop
vmread
jne
xor
and
notl
xchg
lret
adc
sbb
insb
cmovs
xor
lods
inc
xor
push
push
or
test
mov
pop
jp
negl
dec
in
int3
push
imull
push
xchg
cwtl
add
sub
add
in
cs
out
mov
sbb
sub
sub
push
fildll
fcomip
out
aam
jmp
cmc
out
fstl
not
in
pop
xlat
mov
cmp
daa
mov
fisubrs
ljmp
inc
cmp
pop
pop
pop
dec
cmp
aad
mov
add
cmpb
sbb
pop
push
out
arpl
ja
jmp
mov
roll
cmc
dec
popl
mov
dec
std
and
sti
enter
xchg
testl
pop
jmp
pop
shl
ret
mov
leave
notl
push
mov
invd
xlat
add
fcmovnu
mov
or
mov
fidivl
jnp
das
clc
out
fisttps
sbb
leave
push
push
jge
cld
cmpsb
mov
icebp
enter
iret
mov
imul
fcom
inc
mov
fdivr
in
lret
mov
add
cmp
sbb
add
test
stos
pop
gs
inc
or
cs
subb
and
and
lock
and
lret
mov
cli
dec
movsl
add
addb
sti
andl
int
push
jo
clc
rorb
loopne
inc
scas
int3
clc
cmpb
cmp
imul
enter
insb
xor
jae
sbb
out
xor
sub
xor
jns
jno
mov
mov
jno
fwait
xchg
cld
sub
rorb
in
dec
repz
jecxz
mov
mov
mov
add
and
cld
jnp
inc
lods
sub
mov
in
sahf
pop
mov
js
push
fdivl
test
cmp
shrb
hlt
addr16
push
adc
sbb
mov
xchg
shll
mov
sti
repnz
pop
movsl
sbb
es
lods
and
call
stc
cmpb
mov
iret
subl
fwait
dec
rcrb
das
stc
sub
jmp
mov
insl
dec
pushf
les
or
gs
lret
inc
push
fsubl
in
ja
push
and
push
std
dec
xchg
daa
aaa
adc
push
jmp
jnp
cmp
mov
push
daa
xor
add
pop
cmc
xor
out
inc
cld
lods
pop
ret
mov
push
pusha
mull
inc
or
ja
dec
push
pop
jmp
or
das
les
lds
divl
jae
pop
loope
clc
cli
push
in
ljmp
pusha
pop
mov
adc
push
lock
or
inc
ja
xor
adc
sbb
test
jmp
add
das
mov
push
xor
cmp
dec
popa
aam
pusha
daa
mov
das
adc
aad
sbb
aaa
and
xchg
iret
mov
or
pop
push
fstpt
sub
mov
repz
inc
dec
cld
xor
dec
ds
hlt
out
push
cmp
daa
cmp
adc
pushl
movsb
aas
mov
jo
jg
cld
ljmp
in
cli
dec
jg
xor
insl
ljmp
add
cld
mov
add
mov
ret
adc
mov
loop
sbb
adc
cmc
mov
cmp
das
jbe
lahf
pop
fidivs
jmp
sarb
test
sbb
sub
ret
mov
ds
sub
fwait
imul
dec
mov
adc
daa
push
js
pop
pop
filds
or
cmp
fdivl
rorl
imul
iret
test
xor
or
das
xlat
hlt
les
push
popa
inc
call
pop
cli
mov
je
push
addr16
cld
repnz
test
inc
xor
dec
xchg
fcoml
jg
repz
xor
jno
dec
sub
mov
sti
add
shr
scas
enter
xor
inc
push
mov
mov
mov
push
mov
rclb
sti
dec
sub
or
das
not
in
cmc
mov
add
decb
push
pop
pop
scas
xchg
out
xchg
loopne
rcrl
idiv
aam
clc
mov
lods
add
xchg
mov
sbb
das
xchg
adc
popa
aas
xlat
lock
push
movsb
in
mov
and
mov
repz
jp
popf
std
cmpsb
add
js
rcrb
xchg
add
ss
clc
mov
cmp
ret
cmp
mov
xor
movsb
repnz
pop
and
push
sbb
jae
xchg
out
repz
hlt
mov
fiadds
loope
mov
push
in
notb
sub
sub
ja
mov
mov
or
xlat
shll
push
dec
fcmovnu
rol
lock
fwait
sub
mov
dec
push
push
mov
adcb
mov
shl
fpatan
leave
mov
mov
popa
push
jo
or
push
mov
mov
cmp
movsb
push
sti
adc
je
adc
pushf
push
rcl
add
jo
xor
out
loop
xchg
out
mov
test
adc
push
lods
mov
out
insl
cs
xor
daa
sub
cmp
sub
out
xchg
and
adc
repnz
test
enter
mov
xor
and
xor
call
add
clc
ret
sbb
into
mov
jbe
daa
in
mov
cld
shll
rclb
sub
push
and
std
inc
lcall
inc
inc
cmp
dec
adc
mov
mov
mov
sbbl
dec
add
test
sub
mov
pushf
pusha
ret
mov
jecxz
ret
cld
push
scas
incl
repz
bnd
xchg
mov
jno
jg
adc
push
int3
xlat
dec
jo
xlat
iret
fistl
xor
jl,pt
jae
mov
into
ret
push
mov
sub
rorl
aad
mov
sar
xlat
push
push
out
jbe
stc
mov
icebp
jecxz
aam
sub
inc
repnz
jp
xchg
add
popf
inc
aas
mov
adc
and
sub
xchg
out
cmp
jo
push
or
dec
mov
jg
lahf
mov
xlat
scas
ss
mov
mov
repnz
dec
jle
popf
or
cld
out
and
pop
inc
or
shrb
jmp
fsubp
repnz
loope
ret
lahf
shll
mov
pop
adc
and
insb
sahf
bound
push
cld
dec
cld
std
fdivl
in
xchg
out
mov
ret
and
jno
out
xor
ds
fbstp
inc
popf
idivl
sub
adc
dec
negl
or
adc
arpl
pusha
dec
xchg
addl
int3
adc
dec
xlat
pop
xor
lods
stos
movsb
or
jnp
rcr
pop
pop
sar
es
push
and
mov
mov
rorl
cmp
mov
insl
inc
repz
aas
jo
sub
test
jge
stc
addr16
sahf
fbld
std
push
jmp
xor
test
shlb
sti
icebp
cmp
ljmp
inc
sahf
jmp
daa
es
pushf
jo
es
jecxz
sub
sar
dec
fmull
push
shrb
sti
outsl
ljmp
repnz
sbb
push
scas
mov
jecxz
sub
jecxz
adc
sub
xlat
or
fisubrs
cli
push
insb
repnz
mov
push
pop
mov
xchg
add
sti
iret
icebp
mov
push
int3
cmp
hlt
mov
imul
int3
push
or
hlt
or
hlt
dec
repnz
add
or
xor
fadds
fldl
out
jne
mov
inc
and
mov
stos
loope
cltd
and
sbb
inc
xorb
push
push
outsb
rclb
sub
push
sbb
xor
hlt
inc
mov
idivl
push
incl
mov
test
movl
hlt
push
adc
jp
inc
sti
mov
mov
jl
adc
add
push
loopne
pop
cmp
call
lock
jecxz
stos
std
popf
cmc
jp
dec
shl
lcall
sbb
fwait
sahf
imul
pop
daa
out
bts
jne
pop
inc
pop
mov
repz
inc
mov
imul
mov
jns
loope
and
shrl
jno
test
arpl
push
dec
inc
push
xor
fdivs
add
fsubrs
stc
js
cmp
pop
pop
fdivs
mov
hlt
into
imul
lods
mov
push
sub
lcall
push
cmp
mov
cmp
gs
in
inc
imul
arpl
jmp
mov
cwtl
mov
sub
mov
cmpb
mov
and
xchg
in
fmull
in
aam
loop
xor
bound
or
jno
push
lods
cmp
pushf
push
jg
jo
jno
cmp
lods
shrl
cld
lret
sbbl
jae
flds
and
shrb
clc
sti
dec
popf
fimull
add
jo
mov
xor
push
testl
call
inc
inc
mov
push
into
lock
cld
repz
xchg
sti
ret
std
cs
sbb
leave
sub
mov
scas
loope
call
xchg
sub
clc
push
adc
sub
or
ret
jmp
fst
cmp
xor
inc
fcmovnbe
out
cmp
adc
stc
popf
shrl
adc
in
push
add
and
xorl
push
push
movb
iret
shll
pop
mov
push
outsl
pushf
lods
sti
pop
or
or
shr
mov
loope
out
and
jl
das
sbb
icebp
or
mov
je
dec
sti
push
cwtl
dec
in
jae
aas
repnz
dec
pavgb
mov
in
test
mov
pop
push
push
dec
mov
xchg
add
repnz
in
add
mov
clc
and
addr16
popf
sub
loope
push
in
mov
test
add
and
push
outsb
aam
lahf
cmpsb
xchg
adc
or
sarb
hlt
pop
jnp
xor
or
xchg
mov
sub
push
inc
hlt
es
aaa
xchg
filds
jmp
sarb
js
popf
dec
pop
push
adc
fwait
ret
jbe
in
shlb
adc
dec
xor
mov
mov
stos
mov
loopne
mov
jg
sbb
adc
xchg
insb
push
push
clc
pop
push
sub
fsubrs
and
aam
adc
mov
aad
pop
lds
jne
sbb
add
loopne
add
xchg
fdivrl
ss
push
xchg
push
and
pop
out
add
mov
jo
adc
cmp
loopne
xchg
mov
lods
sbb
or
loop
rcrl
cmp
sub
mov
lahf
dec
out
cwtl
push
and
add
adc
xchg
cltd
jne
cltd
jne
loope
add
cmp
jbe
jbe
outsl
lret
mov
ret
out
iret
dec
lcall
push
or
xchg
call
add
ret
fcomps
aam
jmp
pop
mov
movsb
fs
jbe
dec
sbb
cmp
insb
inc
cmc
rorb
aam
xchg
jmp
jmp
add
popa
cmp
ljmp
outsl
mov
daa
and
push
insl
les
data16
push
jl
pop
outsl
cmpsl
dec
inc
xlat
icebp
mov
lret
std
insl
cmp
daa
notb
divb
sub
sbb
mov
xor
fmul
int3
aam
frstor
aam
fistl
jo
push
or
pop
fidivrl
aam
int
idivl
or
add
mov
push
repnz
inc
jae
dec
out
std
push
or
sub
xchg
fwait
loopne
fwait
push
rorl
loope
enter
xor
movsb
adc
jle
shlb
mov
lahf
std
popf
adc
ds
pop
cwtl
hlt
shll
sbb
in
in
repz
aas
xor
fisubrl
lahf
fisubrs
jb
sbb
in
rclb
xor
adc
jne
loop
adc
repz
xchg
fistl
loopne
push
add
jns
lcall
dec
movsb
sub
pop
jmp
lds
dec
in
mov
dec
add
sub
dec
ffree
testb
xor
or
pop
lock
fists
pushf
ret
mov
in
repnz
add
adc
dec
pop
ja
lds
sti
fsts
add
lock
or
inc
inc
inc
adc
cmpsl
nop
shlb
test
cmpsb
adc
push
sti
mov
mov
test
fwait
ljmp
mov
es
fwait
shlb
push
push
cld
and
inc
cmc
xchg
imul
sub
mov
mov
adc
in
sub
add
mov
dec
out
mov
push
int
fwait
clc
adc
push
push
push
add
jle
jg
fbstp
sub
fistl
pop
push
arpl
mov
mov
or
lahf
popf
fcmovnu
ds
push
and
sbb
outsb
adc
in
and
xchg
pop
in
call
xchg
and
cs
push
pop
in
movsl
inc
lock
sub
ret
fcomi
mov
push
or
jmp
repz
shrb
jo
ljmp
lahf
add
jno
icebp
es
or
int3
push
pop
out
push
mov
push
mov
ret
shl
mov
push
test
fldpi
add
fdivrl
and
fwait
lret
aas
mov
sbb
fildll
hlt
mov
movsb
aaa
add
pop
or
paddb
jmp
dec
out
in
test
dec
hlt
add
jo
mov
push
sti
std
cld
repz
popa
je
jns
popa
or
jle
mov
push
outsb
cld
rcl
das
in
jecxz
sbb
push
pop
push
aaa
and
or
mov
add
inc
mov
pop
mov
jne
fbld
push
mov
aad
icebp
lock
jb
outsl
aam
mov
aaa
jp
adc
jmp
sahf
rorl
adc
xchg
testb
adc
sbb
add
inc
add
dec
push
incb
lods
xlat
fildl
inc
cmp
sub
test
shlb
clc
int
push
ds
xchg
movsb
mov
daa
insb
sti
int
add
mov
daa
insb
cli
int
add
add
xlat
mov
cld
lea
add
xlat
ljmp
jmp
adc
call
aam
mov
fwait
lock
xor
imul
push
loop
xchg
and
add
std
clc
fidivs
insb
stc
incl
add
mov
inc
mov
jmp
mov
mov
add
push
test
sbb
ret
inc
mov
xchg
adc
xor
inc
fimuls
sbb
out
fstl
in
adc
jno
fildl
add
push
jo
insl
and
cli
int
add
or
add
push
sahf
add
mov
adc
inc
add
addb
sub
jg
push
fcom
aad
std
and
mov
insl
mov
clc
pop
pop
std
add
push
adc
adc
into
pop
loop
shl
adc
cmp
xlat
ja
shlb
xor
xchg
mov
add
out
loopne
je
xor
and
sbb
movsb
in
mov
ret
push
stos
sbb
jae
xchg
mov
hlt
mov
adc
sub
rcll
sbb
sub
xchg
dec
or
movsl
jp
jge
sub
leave
dec
cmp
sub
xor
pop
repz
mov
lahf
imul
mov
sti
mov
mov
ret
stc
xlat
jo
add
test
daa
add
and
test
mov
push
pop
add
iret
lret
xchg
subl
mov
mov
shlb
mov
pop
push
test
ds
bound
nop
add
jmp
mov
pop
or
add
jecxz
push
push
into
jne
mov
jecxz
add
pop
aas
aas
gs
or
cmp
inc
lods
lock
cmp
cmp
in
jne
inc
rcll
sbb
jb
addr16
sbb
fldt
ds
dec
push
comiss
mov
push
xor
push
popa
jne
call
aas
xchg
aam
push
fistpll
jne
mov
mov
jle
push
pusha
leave
dec
mov
cld
popf
int
add
loopne
das
sbb
xor
bound
sub
call
cmp
in
repz
push
adc
inc
inc
push
das
push
iret
sbb
stos
jmp
and
movsb
nop
fs
int3
push
inc
xor
nop
neg
xchg
jbe
ss
shl
mov
ja
int
dec
jl
add
jmp
lret
dec
adc
out
cmpsb
dec
aas
mov
push
call
fscale
pop
loopne
adc
mov
repnz
mov
into
imul
psubsb
xor
std
iret
sti
dec
or
jae
in
dec
imull
inc
push
fcoms
enter
pop
mov
rcrl
ja
test
push
lds
or
jb
std
cmp
or
adc
adc
notl
lock
les
enter
shrl
cwtl
pop
xchg
push
adc
pop
ljmp
sbb
mov
xchg
addr16
sarl
mov
xor
mov
sbb
add
lock
gs
and
adc
add
les
mov
jae
pop
mov
inc
mov
in
sbb
shrb
mov
push
outsl
dec
fldl
shll
rorb
or
loope
in
inc
cmpsl
xchg
inc
adc
sbb
cld
lock
ja
adc
std
lcall
adc
jns
cli
mov
sbb
ja
filds
not
cmc
xchg
mov
out
mov
sub
or
test
dec
cmp
out
fiaddl
es
or
in
lret
les
adc
pop
adc
and
and
aas
gs
pop
push
loopne
or
xchg
sarl
and
es
sarl
xchg
sbb
and
mov
arpl
mov
std
jecxz
jbe
dec
or
mov
jb
and
xchg
jne
jge
pop
lea
pop
imul
repnz
jmp
es
ret
sub
arpl
sbb
shl
enter
sub
adc
sub
jecxz
or
test
add
jae
adc
fld
lret
xor
cmp
dec
int3
rcl
sbb
adc
inc
stos
cmp
movsl
mov
out
hlt
mov
xchg
cmp
inc
enter
iret
popa
in
lret
pop
das
cwtl
add
cmp
inc
mov
into
aaa
in
xchg
push
je
jbe
or
fnstenv
rcl
bound
pop
mov
xor
rorb
adc
fistpll
push
or
mov
scas
push
push
daa
jne
push
sbb
or
xor
notl
xlat
inc
mulb
xor
and
fdivs
mov
push
sub
outsl
into
sbb
sbb
adc
in
nop
jnp
hlt
mov
repz
pop
pop
jbe
or
and
fisttps
call
mov
out
fdivr
xlat
fsubrl
int
pop
scas
jl
jbe
inc
mov
mov
sub
pop
sbb
out
fisttps
adc
ljmp
lock
js
mov
outsl
push
jae
loope
mov
sbb
dec
cmc
das
psllq
aad
or
mov
pop
push
movsl
enter
push
cld
push
add
in
orb
cmpsb
and
imul
bound
rorb
push
out
xor
push
mov
popa
pop
xor
pop
jge
cwtl
popa
rorb
arpl
cli
push
xchg
mov
push
out
inc
pop
dec
getsec
popa
push
mov
mov
pop
cmp
push
or
pop
pop
jns
pop
scas
jnp
lret
mov
mov
pop
add
movsb
test
adcb
fwait
add
rcrl
jmp
fidivrs
xchg
mov
das
mov
arpl
fcompp
punpckhbw
sub
jmp
loop
scas
push
icebp
sti
sarb
add
imul
dec
leave
fsubrs
js
inc
lahf
test
push
int
dec
push
stos
add
scas
dec
decl
mov
fists
push
adcl
outsl
dec
xor
sarb
mov
push
dec
mov
pushl
pop
nop
in
cmp
sbb
push
pushf
cmc
insb
dec
pop
pop
lret
xchg
jecxz
mov
sub
mov
inc
or
mov
stc
sbb
out
int3
dec
mov
in
lcall
fsub
out
daa
fcoml
lock
cwtl
mov
stos
sub
ljmp
inc
mov
add
nop
repz
mov
and
jmp
mov
in
ret
aam
dec
mov
pop
leave
sbb
notl
or
inc
fadd
in
lret
pop
sbb
leave
push
pop
xchg
xchg
repz
int
pushf
aad
inc
jnp
cmp
cmc
js
jnp
das
or
sub
dec
outsb
mov
pushf
imul
jbe
icebp
inc
repz
sbb
ror
sahf
loopne
inc
cmpsb
daa
mov
xorl
std
sarl
add
or
daa
icebp
push
fisubrl
mov
push
adc
or
sbb
fistpl
outsl
jnp
or
jecxz
sub
ror
and
xor
lds
inc
movsb
jne
les
mov
pop
mov
dec
add
mov
je
xor
frstor
sti
popa
xor
mov
decb
aaa
or
jno
roll
fmulp
lods
xlat
in
mov
pop
xor
fisubrs
movsl
inc
or
sbb
leave
addr16
sbb
aam
icebp
push
das
cld
fdivp
dec
xor
sub
mov
or
decl
and
sbb
fldcw
push
inc
repz
jge
mov
mov
add
and
hlt
insb
lcall
jae
xchg
loope
call
shr
pop
or
xchg
push
xchg
ret
cmp
xchg
or
rorl
or
ds
test
test
aas
xor
xchg
sub
fwait
stc
out
adcl
movsb
stos
xchg
adc
gs
push
mov
inc
sbb
dec
mov
leave
or
popa
scas
sbb
push
mov
xor
in
aas
pop
orb
shrb
mov
or
jne
xlat
test
icebp
shrb
into
adc
pop
or
ret
cld
adc
enter
fdiv
cmpl
and
insb
push
pop
call
gs
mov
dec
loopne
insl
xchg
mov
enter
xchg
or
out
nop
jle
and
lock
sbb
jmp
movsb
roll
add
enter
jmp
ret
ret
or
inc
mov
iret
and
popa
fcompl
or
loopne
incb
push
cmpsb
mov
sub
jp
mov
outsb
lret
xchg
int
inc
push
clc
inc
cld
cmp
ret
push
push
inc
fcompl
ss
push
inc
xchg
insb
cmc
idivb
jne
loop
or
cmp
data16
sbb
testb
int
aam
or
sti
loop
rcl
adc
xchg
or
stc
ljmp
pop
mov
inc
pushf
cld
les
je
loopne
xor
jo
jo
mov
sti
adc
push
or
and
push
testl
adc
in
nop
dec
fiadds
xchg
js
mov
push
ret
and
sbb
xor
mov
mov
bound
sub
xor
push
into
repnz
xchg
mov
dec
pusha
aad
out
pop
and
sahf
out
jae
pushf
mull
stc
xor
push
and
push
adc
add
imul
out
lret
test
xchg
pop
int3
fld
mov
inc
mov
push
jae
sub
and
sbb
lret
mov
push
cmove
out
incb
or
shll
jg
scas
jns
roll
mov
mov
rcl
cmp
pop
sahf
or
insb
dec
mov
lock
aas
imul
addr16
aam
fbld
and
xchg
sbb
inc
or
lret
mov
imul
loop
push
dec
les
in
cmp
mov
leave
xorl
clc
jnp
out
into
and
sbb
cmp
xor
add
out
sbb
push
sbb
les
xor
sub
out
ficomps
xor
ret
das
push
add
pop
inc
mov
jl
add
test
mov
push
push
jge
loopne
and
xor
jno
aas
and
or
inc
sbb
xchg
add
dec
cmp
pop
inc
jae
aad
sbb
pop
xor
inc
push
cld
repnz
mov
mov
mov
pop
test
xchg
aaa
push
xchg
outsb
pop
cmc
xchg
xchg
enter
aas
or
test
adc
aas
sti
xor
pop
fstl
cmp
es
xor
mov
pop
stos
mov
in
mov
xlat
sbb
fsubs
arpl
mov
cmp
adc
hlt
push
test
stc
aad
mov
and
xlat
mov
xor
data16
int3
xlat
sarl
ret
xor
dec
jno
clc
jl
mov
movsl
sub
dec
pop
or
cmp
je
add
push
incl
jae
push
push
inc
cmp
adc
jne
decl
pop
mov
ffree
fidivrl
std
and
jnp
cs
xlat
xchg
adc
cmp
pop
pop
or
jbe
xchg
movl
mov
xchg
addr16
stos
pop
loopne
mov
daa
pop
loopne
sub
loopne
lahf
jnp
or
and
sbb
fwait
or
pop
and
jns
pop
fmull
push
pop
xor
in
xchg
bsf
inc
movsb
inc
mov
aam
jnp
adc
inc
pop
shll
cmp
aas
add
jg
push
femms
xchg
cs
ds
jnp
inc
xchg
aaa
divl
cld
aad
push
fadd
or
ret
pop
loope
cmp
iret
xor
dec
lock
daa
mov
rorl
mov
inc
stos
jle
jns
mov
inc
cs
jle
daa
push
jg
xorl
pop
repnz
xchg
int
fisttps
or
jge
lods
cwtl
adc
pop
dec
mov
xor
aam
push
xor
adc
addps
aam
mov
mov
cmp
aad
getsec
adc
aad
or
mov
jmp
xor
xor
cmc
mov
pop
mov
cmp
repz
pop
cmc
shl
xor
mov
mov
incl
push
loopne
jbe
push
push
fwait
xor
repnz
popf
leave
testb
xor
add
negb
mov
add
xor
imul
pop
dec
push
das
ja
or
rorl
push
cld
or
sidtl
imul
lea
sbb
out
pavgw
fldl
mov
mov
pop
mov
int
mov
je
adc
fbld
es
frstor
mov
cli
cmp
and
or
xchg
aam
cmp
aaa
add
iret
or
or
out
xor
std
out
sbb
adc
pop
pop
add
cmp
sub
fucom
dec
loopne
mov
imul
pop
rcr
pop
ret
add
push
jmp
pop
adc
pop
sti
jg
call
aaa
pop
mov
lret
lret
repz
jge
pop
in
ja
fistl
cld
and
sbb
pop
jg
or
dec
jne
sbb
rclb
mov
inc
ret
mov
hlt
inc
push
xor
das
jmp
or
loopne
push
xor
pop
xor
xchg
jbe
mov
cli
xchg
mov
imul
cmp
push
pop
adc
scas
pop
xchg
pop
in
hlt
or
push
popa
xchg
push
roll
ret
daa
sub
dec
mov
pop
hlt
push
jecxz
cld
mov
dec
fildl
int3
mov
push
cmp
aam
daa
jle
orl
pop
ja
push
addr16
sbb
pop
sbb
aaa
mov
jo
xor
ret
mov
rcll
iret
mov
push
int
push
in
inc
mov
repnz
mov
sbb
mulb
cltd
iret
pop
cmpsb
mov
adc
adc
cld
addl
and
jecxz
sub
xlat
dec
jb
or
cmp
pop
pop
and
pop
dec
xor
push
out
aas
ss
mov
xor
sub
adc
jmp
push
mov
xchg
imul
cmp
xor
xor
adc
jmp
sbb
mov
dec
jl
jo
cmc
mov
clc
addr16
clc
int3
or
andb
sbb
sbb
mov
and
mov
push
pop
jp
out
icebp
mov
cmpsl
arpl
shl
ss
add
mov
idiv
adc
sub
lahf
jge
mov
insb
or
fdivr
push
fsts
dec
and
push
push
sbb
shll
add
inc
iret
iret
pusha
jo
xor
daa
fnsave
outsl
push
xchg
jg
mov
jae
fcoml
pushf
aas
mov
inc
pop
pop
xchg
loope
xor
in
sbb
xchg
and
jg
faddl
loop
fbld
cmc
and
arpl
call
sti
adc
push
das
cwtl
pusha
and
dec
popa
jno
cld
jae
dec
cmp
addr16
jne
shrb
push
clc
stos
mov
cld
cli
icebp
aam
mov
xchg
fsubs
cli
iret
out
adc
out
or
test
fwait
jl
leave
add
and
mov
mov
out
notl
loopne
add
jecxz
iret
add
das
adc
ljmp
ror
sbb
pusha
add
cmc
idivb
mov
add
sub
push
dec
push
jae
fs
mov
xorb
addl
cld
lcall
pop
std
aam
push
xchg
xor
pop
or
stos
leave
lods
int
and
cmc
jb
repz
jnp
sti
xchg
add
repz
sbb
or
xchg
sub
movsl
mov
repz
lret
dec
or
testl
fbld
mov
test
jb
fmull
test
inc
push
mov
mov
fsub
adc
adc
xor
and
data16
cmc
rclb
jo
and
jnp
xor
into
jb
dec
jns
adc
fsubrp
jle
pop
adc
repz
jbe
bound
in
adc
pushf
or
adc
pop
cwtl
mov
test
mov
cld
aaa
test
pop
repz
adc
rorb
stc
pop
xchg
pushf
sbb
push
fsub
faddl
xchg
fstl
mov
add
shlb
mov
sub
mov
push
mov
add
mov
jp
stc
pop
rclb
sti
inc
mov
clc
lahf
push
mov
in
aaa
scas
jge
jo
fcomps
jne
loope
adc
sbb
xchg
push
jg
add
mov
jno
sub
jnp
cmp
repnz
sbb
sub
adc
int3
ret
xchg
imul
push
adc
adc
je
sbb
cmp
sbb
jns
in
ja
sti
mov
aam
dec
ret
iret
xor
adc
or
loopne
adc
add
and
xor
xchg
sub
jl
rol
sti
stos
pop
ret
jnp
lahf
sarl
fwait
mov
fsubrl
stos
stos
div
mov
int3
fsubr
xlat
aam
cmp
cmpsl
cli
lret
loopne
test
lahf
aam
inc
rcl
xchg
pusha
outsl
fadds
sub
mov
dec
dec
jo
into
cmp
out
in
clc
daa
adc
jmp
ror
jg
push
mov
push
adc
xor
add
dec
notl
mov
xchg
sbb
aas
cmc
adc
rcl
sbb
push
stos
cmp
das
cld
gs
add
fstps
dec
mov
jmp
imul
xchg
lods
outsb
jl
scas
repz
sbb
mov
pop
dec
or
fstpt
ret
jnp
mov
in
std
jo
out
xorl
sbb
jle
fcompl
dec
and
jae
pop
push
js
xchg
cld
cmpsb
push
out
or
push
push
hlt
adc
inc
dec
cltd
mov
xor
scas
insb
stc
idivl
out
dec
and
inc
sarl
sub
xchg
pusha
mov
sbb
repz
iret
addr16
sbb
mov
inc
cmp
inc
mov
cmc
xrelease
and
xor
sarb
jl
adc
rorl
call
cld
out
inc
loop
fmuls
push
or
mov
push
ret
int
dec
bound
pop
mov
sub
arpl
das
lock
mov
in
xchg
jno
sub
fcomi
sub
mov
push
xchg
inc
ja
loop
sahf
rolb
cli
add
out
ret
push
stos
popa
shlb
or
in
and
inc
sub
push
xchg
mov
mov
rorb
adc
jo
pushf
cmp
ljmp
mov
xlat
shrl
int
xchg
or
cmp
outsb
lahf
pop
int
insl
push
xchg
fisttpl
jbe
out
rol
mov
into
fildll
in
int3
mov
ficompl
js
or
lods
sbb
add
jg
fistps
xchg
lret
pop
dec
dec
mov
aaa
test
adc
call
addr16
push
xor
cmp
sar
insl
popa
ss
pop
jae
aad
mov
adc
in
rorl
in
mov
pop
fcmovbe
mov
lret
xor
cmp
xchg
stos
fwait
loope
loope
or
sarl
hlt
inc
mov
cltd
out
shlb
jae
bound
push
xor
xor
mov
cmp
dec
adc
fwait
pop
je
test
and
xchg
fsub
aam
dec
adc
popa
xor
clc
jbe
sbbl
cmpsl
add
std
aas
and
cmp
ficompl
stos
pop
pop
ficoms
jecxz
dec
fs
dec
rcrl
ret
xchg
xlat
mov
out
aam
ret
pop
jbe
push
std
imul
or
sarb
sbb
pop
pushl
pop
mov
aas
cld
outsl
and
dec
and
jle
jl
xchg
jmp
fidivrs
out
cmpsl
dec
shll
sub
add
lret
push
jle
mov
and
add
cmpsb
flds
in
fwait
cli
sbb
imul
mov
aad
mov
xchg
mov
outsb
in
outsl
stos
pop
cmp
inc
xchg
xor
cmp
loope
xor
mov
int3
jne
jmp
repz
aas
sbb
leave
jmp
mov
xor
mov
mov
sub
jae
fists
lods
push
and
xor
dec
xlat
sbb
jne
lock
pop
or
in
or
call
push
dec
lock
push
pushf
mov
and
jmp
cvtps2pd
adc
adc
enter
mov
enter
fwait
mov
push
pop
mov
sub
dec
pop
sbb
or
movsl
out
cmc
inc
add
and
mov
xchg
mov
fmul
loope
xlat
out
lahf
or
mov
fimuls
fcoms
xor
and
cmp
jne
std
stc
das
in
dec
out
insl
pop
imul
cmp
xor
inc
cld
sti
jno
ss
xlat
dec
ror
popf
adc
mov
or
jae
pop
xlat
shll
lods
cwtl
andb
cmc
iret
push
rcrl
mov
test
fcoms
sbb
xor
lds
push
pop
je
shl
sti
out
lds
jns
lahf
mov
push
mov
inc
fwait
xchg
jne
pusha
popf
xchg
cwtl
xor
sub
and
push
ret
in
sub
repz
adc
dec
and
fwait
or
aam
call
push
testl
rcrb
jnp
dec
ljmp
xlat
movsb
mov
hlt
cmpsl
adc
loop
out
daa
out
adc
shll
push
xchg
aad
out
or
test
xchg
xor
aam
pop
inc
sbb
pusha
dec
cmp
fstpl
lret
int
incl
sahf
aad
int
outsl
in
loop
scas
aad
or
jb
push
mov
lret
lret
mov
and
sub
push
in
or
fildl
jno
push
shrb
sub
jge
sbb
mov
sub
sub
add
divl
dec
inc
das
rclb
es
inc
hlt
xor
outsl
aam
scas
ljmp
sbb
cmpsl
pop
popf
cld
popa
mov
fsubs
cmpsl
popa
bound
sbb
aaa
aam
add
push
inc
push
jae
push
icebp
sahf
inc
inc
xor
mov
xchg
mov
add
lcall
mov
in
xchg
sub
insl
hlt
or
bound
aam
hlt
xchg
fwait
insb
xor
pusha
out
test
ficoms
dec
xor
lods
dec
adc
add
ret
lea
cmpsb
les
mov
das
sub
int3
daa
dec
std
mov
cli
mov
xchg
mov
xchg
outsb
dec
xor
lods
lods
or
dec
outsb
stc
push
pop
mov
int3
mov
mov
push
xchg
pop
adc
hlt
jo
adc
jecxz
stos
jg
int
negl
add
rorb
add
mov
nop
in
mov
div
xchg
aam
jl
int
movsl
je
call
push
xchg
movsl
add
sub
in
xchg
xor
insb
sbb
dec
cmp
mov
les
fcompl
out
psadbw
out
fwait
mov
pop
xchg
mov
icebp
push
jge
data16
int3
hlt
mov
inc
cmp
out
jmp
scas
xchg
negb
in
push
orl
in
nop
mov
inc
push
jnp
scas
sub
jge
cmp
sarb
mov
out
or
xor
in
sub
jno
jbe
jmp
pop
rorb
push
rcrl
pop
lds
test
jecxz
addr16
adc
mov
sbb
dec
add
push
cs
pusha
pop
into
add
insl
divb
sub
ret
scas
adc
push
out
push
ds
add
add
sar
cmp
xchg
cld
push
jb
fists
les
jo
sub
push
cmpsb
pop
movl
and
xor
add
xchg
jle
or
push
xchg
movsl
hlt
xchg
lcall
mov
scas
and
sbb
pop
punpckhwd
adc
fwait
mov
repnz
aas
jge
and
lahf
sbb
sbb
rcr
jne
cwtl
push
sub
cs
popf
aam
outsl
xor
aam
stc
pop
jne
pop
js
in
push
fsubs
push
mov
orb
cwtl
push
jmp
mov
inc
stc
loope
in
aam
or
fcmovne
xor
xchg
fdivp
push
pushf
pop
int
inc
int
lret
ficoms
lods
pusha
or
out
dec
into
inc
ret
out
xchg
mov
xchg
mov
aad
dec
mov
cmp
jae
fsincos
in
mov
sbb
pop
dec
stc
fisubrs
xchg
jae
add
ret
cmpl
or
jl
fsubl
cld
sub
into
adc
and
hlt
lret
and
repnz
in
sahf
jmp
fidivrs
cmp
sub
je
lock
hlt
cmp
scas
adc
xchg
lret
inc
sarl
scas
jns
fsubs
aaa
push
aas
test
pop
inc
push
adc
mov
mov
or
or
xchg
mov
lcall
push
cltd
pop
cmp
cmp
and
fists
add
pop
jo
repz
out
and
add
xchg
jle
repz
loop
std
lods
movups
lock
pop
xchg
lret
lods
adc
sbb
pusha
push
subl
cmp
jae
fcomi
pop
hlt
cmp
sub
pop
divb
pop
icebp
mov
xchg
dec
inc
xor
xrelease
ds
hlt
insl
cmp
mov
or
outsb
sub
test
push
xor
sti
out
adc
push
test
int3
divl
in
jns
adc
jl
add
cmp
inc
lahf
mov
sbbl
cmpsb
daa
call
fistl
hlt
test
inc
in
sbb
pop
cmp
ja
pop
hlt
movsl
push
out
adc
mov
std
inc
jge
lods
mov
loop
dec
jns
lret
dec
inc
pop
ljmp
adc
push
mov
rclb
outsl
pop
lea
cmp
jecxz
cwtl
inc
xor
sub
dec
or
repz
pop
in
lahf
int3
cmp
lds
or
loop
es
rcrl
or
push
aas
stos
sti
or
or
xorl
mov
jo
push
inc
mov
icebp
fs
imul
jle
lret
hlt
int3
in
int3
ljmp
inc
scas
inc
cwtl
xchg
clc
adc
push
pusha
xorb
roll
fst
inc
mov
pushf
xchg
flds
lret
mov
dec
lcall
pusha
lock
mov
mov
out
cmpsb
cltd
mov
or
mov
mov
jg
cld
rcrl
repz
xlat
fucomp
mov
dec
push
fidivrs
outsb
pop
aam
js
jecxz
repnz
dec
sar
cltd
insb
sub
insl
xor
stos
sub
repz
sbb
mov
xlat
out
fsubl
icebp
mov
and
lods
sbb
jecxz
adc
in
je
loopne
jge
adcl
push
in
imul
xor
notb
mov
add
lea
stos
ret
mov
repnz
xor
ficompl
jne
daa
adc
mov
fmull
rorb
dec
cli
jae
push
mov
sarl
out
popf
xor
adc
cmpsb
mov
pushl
xor
in
fs
sub
xlat
dec
sub
daa
iret
fcmovnb
mov
test
push
lods
pop
lds
imul
jnp
and
jne
outsb
repnz
test
sub
fwait
dec
fisubrl
jns
ret
adc
dec
imul
jge
fsub
cmp
enter
adc
je
jg
ret
add
mov
movhlps
xor
inc
stc
popf
out
cld
fisttps
inc
icebp
jo
or
shl
test
test
mov
xlat
mov
adc
mov
xchg
dec
dec
adc
inc
push
cmp
jo
test
lcall
aaa
xlat
test
iret
js
dec
xchg
and
mov
and
pop
icebp
bound
mov
xchg
dec
xor
xchg
into
stos
adc
lock
mov
loop
ficompl
lods
fmulp
dec
sbb
push
cvtps2pi
addr16
pop
add
inc
filds
rcll
in
scas
loop
into
ret
pop
pusha
ret
adc
notb
divb
pop
pop
shl
mov
movsl
ljmp
sbb
mov
out
cmpsb
sahf
sbb
xor
sbb
mov
sub
pop
hlt
cmp
mov
out
add
loop
loop
adc
mov
lock
or
xor
sub
int3
int
dec
fs
sarl
cld
pop
mov
sar
call
fisttpl
shl
daa
in
jle
pop
push
or
adc
sub
gs
outsl
add
jg
ds
xchg
popa
aam
jg
ret
dec
xchg
push
mov
sbb
cld
xor
loope
push
cmp
sub
ja
fists
mov
cmpsl
out
lods
mov
test
adc
xchg
add
sub
lcall
test
fidivs
sub
mov
mov
mov
iret
cli
ss
adc
xor
aam
or
xlat
ljmp
into
aas
aad
out
jmp
fnstenv
gs
lods
cli
into
pop
add
sbb
dec
cmpsb
dec
cwtl
inc
rcll
push
mov
mov
insl
push
div
or
mov
ja
cmp
dec
mov
loope
push
cmp
fiaddl
mov
xchg
pusha
push
xlat
jbe
jne
jle
ljmp
jb
and
cmc
mov
decl
sub
inc
sahf
stos
mov
xchg
pop
out
sbb
adc
add
jnp
out
out
fistps
jae
test
inc
shrl
dec
fimull
out
mov
sub
ljmp
or
push
rorl
or
movsl
fnstenv
mov
out
mov
xchg
and
mov
mov
into
jmp
fcmovnu
mov
fwait
push
out
inc
pop
shrb
fcoml
insl
jae
pop
push
divl
cmp
ret
nop
pushf
mov
jne
mov
fmuls
xchg
mov
inc
mov
rclb
sub
jno
jno
cmp
cmp
mov
push
mov
sbb
aaa
inc
or
xchg
cmpsb
popf
bound
push
jae
adc
lds
rcr
lahf
dec
pop
sbb
push
scas
push
cli
adc
adc
inc
les
jl
xor
fstps
movsb
push
aad
push
iret
mov
fbstp
pop
mov
stos
out
insl
arpl
dec
les
leave
jns
push
scas
je
ljmp
shrb
jnp
jecxz
stos
jo
sub
test
cmp
mov
push
outsb
lock
mov
aam
dec
or
stc
lods
sbb
js
insl
add
push
insl
sub
pop
mov
lock
or
add
mov
les
pop
out
jmp
inc
cmc
aas
mov
mov
add
lret
shrl
in
push
lods
add
jbe
out
clc
aaa
aad
es
psrad
jmp
cld
add
lcall
lahf
add
adc
loope
icebp
inc
loope
mov
xchg
push
or
xchg
mov
ret
sub
out
jecxz
inc
aaa
sti
or
pop
pop
cmpsb
dec
fidivrl
mov
cld
enter
pop
or
mov
enter
mov
mov
push
mov
xor
sbb
and
out
cmp
int3
mov
adc
push
lret
ss
cmp
add
sub
adc
mov
loope
dec
test
dec
movsb
mov
mov
mov
ret
push
stos
inc
mov
in
jne
mov
push
jno
shll
in
or
push
lds
adc
shll
cmp
push
sbb
insb
inc
test
xchg
dec
aam
or
mov
cld
pusha
fdivs
xchg
pop
mov
xchg
xor
mov
cmp
test
rclb
mov
pop
push
pushf
das
dec
push
mov
jge
in
pusha
lret
mov
sub
sub
int3
mov
xor
shll
jecxz
cmpb
sub
inc
loop
outsl
and
add
and
repnz
jmp
scas
jo
mov
imul
xchg
sbb
test
push
xchg
inc
inc
or
pusha
mov
cmp
pop
or
mov
sub
mov
xchg
xchg
pop
fldcw
out
xchg
incl
cmpsl
add
mov
sahf
movsl
dec
in
jnp
sub
lahf
fwait
mov
das
push
jno
add
and
pop
and
std
mov
mov
stc
ljmp
sbb
xlat
push
push
orb
scas
ja
add
jge
daa
out
sub
jo
and
pop
jne
xor
scas
add
sub
add
push
push
mov
mov
add
sbb
aad
sahf
arpl
pop
jg
std
xor
xor
xor
cmp
nop
mov
loop
mov
out
push
fsincos
inc
adc
mov
loopne
sahf
icebp
testb
sbb
pop
add
push
dec
xlat
cmpsb
test
stos
das
dec
lret
or
in
int3
mov
or
insb
es
inc
sbb
int3
lods
mov
les
popf
push
xor
push
push
mov
dec
dec
in
notb
ds
pop
push
cmp
mov
aas
mov
in
sub
cmc
ret
das
movsl
xor
mov
pop
jl
sub
mov
test
mov
xor
cmp
xchg
decl
roll
icebp
ja
adc
pop
mov
push
pushf
pop
test
xchg
mov
jb
pop
out
daa
sbb
jmp
ss
movsb
in
adc
jg
and
and
cwtl
or
cmp
out
adc
daa
jb
and
add
and
or
aam
mov
and
outsb
addr16
lahf
rcr
js
ljmp
add
add
mov
xor
test
loop
xor
xchg
pop
lcall
dec
imul
das
sub
mov
mov
push
stos
ret
movsl
jmp
xchg
ja
xchg
scas
add
cmpsl
int3
and
sbb
mov
hlt
adcl
outsb
jne
clc
mov
stc
out
fmul
jecxz
xlat
mov
cmp
clc
sar
jg
cmp
push
mov
iret
shll
lret
dec
mov
mov
shr
jl
psraw
scas
insl
xor
xchg
dec
scas
push
repnz
out
ja
xchg
fistps
xchg
lret
adc
push
xor
jnp
mov
lcall
clc
ljmp
mov
inc
xlat
aam
sub
push
loop
mov
cmp
sbb
jmp
adc
push
mov
test
mov
inc
mov
sbb
mov
test
rolb
ss
mov
clc
std
pop
ret
test
mov
ffree
push
xor
ja
shl
daa
negb
sub
test
or
out
or
jge
jle
hlt
out
mov
cmp
das
test
movsl
pop
mov
mov
jbe,pt
fsts
and
push
sub
mov
ret
cmc
inc
nop
push
cs
loopne
insl
adc
jno
loop
push
addr16
shrl
data16
aad
shl
inc
out
push
leave
repz
ret
push
sub
cltd
shll
outsl
mov
dec
ret
iret
loop
sbb
pop
leave
pushl
ss
out
adc
dec
loopne
int3
jo
xchg
cmp
out
aam
mov
ffreep
push
clc
ret
aam
sbb
in
popf
loopne
jg
cmpsb
sbb
push
test
rorb
sub
sbb
mov
mov
cmc
and
pop
adc
subb
rorl
push
subb
fisttps
and
cmpsb
jmp
movsl
mov
push
scas
test
sub
lahf
jnp
mov
loop
adc
or
push
repnz
xchg
loopne
or
mov
aad
pop
inc
push
sub
pusha
mov
ret
std
lods
scas
inc
or
cwtl
mov
popl
dec
out
add
andb
xchg
sub
cwtl
adc
bound
loop
loopne
icebp
or
cmp
scas
pushf
mov
dec
add
scas
mov
aad
xor
leave
inc
inc
sub
mov
inc
add
push
jno
push
hlt
inc
loopne
adc
int
pop
adc
mov
xchg
mov
jbe
sub
ret
push
jle
lcall
scas
clc
lret
pop
jle
mov
enter
mov
adc
jnp
cmpsb
cmp
int3
fs
sbb
call
addr16
in
adc
mov
adc
sahf
mov
aaa
jno
sub
or
push
fbstp
lahf
insb
xchg
lea
push
dec
ss
add
vpgatherdd
sbb
and
cmpsb
and
addr16
movsl
mov
jge
add
or
lret
xor
mov
ss
sti
dec
inc
testb
xchg
fildll
pop
std
inc
lock
lds
adc
mov
in
add
pusha
in
clc
into
push
xchg
inc
mov
dec
add
pop
mov
aad
test
test
test
mov
or
dec
mov
sbb
clc
outsl
jl
andl
inc
andl
fwait
in
jne
lret
inc
repnz
xor
mov
dec
aad
mov
cmp
adc
pop
xor
sti
add
lret
push
mov
pop
pop
stos
repnz
fs
xor
aam
inc
icebp
mov
jle
pop
mov
scas
popa
or
scas
loopne
shlb
pop
sub
sbb
sbb
shlb
arpl
jl
jl
xchg
pop
add
and
dec
sbb
push
mov
pop
mov
lret
leave
or
xchg
sub
sbb
imul
lock
cmp
adc
stos
jmp
inc
icebp
adc
sbb
in
out
pop
sarb
jmp
cmpsb
divl
sbb
fs
fdivr
orb
test
pop
insl
add
push
inc
cmpsl
loopne
sbb
xor
sarb
adc
mov
andl
dec
ljmp
or
mov
aaa
in
shrb
mov
xchg
jmp
ret
das
aam
out
ret
daa
xchg
int
outsl
mov
cltd
push
lret
pop
jno
sahf
mov
pop
notl
stos
sbb
xchg
outsl
jp
and
les
lcall
outsl
xorl
outsb
pop
mov
add
je
adc
repz
out
addb
xor
test
or
filds
xor
xor
cmp
or
mov
faddl
cmp
push
jnp
ret
dec
addr16
lds
fs
insl
lods
in
or
fstp
popf
mov
mov
ja
jecxz
js
divl
sbb
cmp
out
testb
jmp
shll
sahf
jae
mov
dec
cmp
sbb
pop
enter
addr16
shll
es
jge
pop
inc
mov
imul
les
jg
loope
dec
mov
mov
cmp
pop
cmp
xchg
leave
sbbb
inc
loopne
cmp
xchg
movsb
dec
adc
test
mov
loope
xor
jae
repz
mov
repz
sbb
pop
or
jns
iret
fstpt
scas
cmp
dec
pushf
into
insl
shll
and
mov
xchg
mov
out
out
fildll
xchg
std
loope
lock
cltd
and
addb
sar
roll
lds
imulb
xor
sbb
adc
pop
les
jne
xlat
outsb
xlat
scas
cmp
jle
push
jae
test
movsb
mov
add
pop
mov
lahf
lcall
dec
fmuls
gs
mov
aad
fiadds
mov
add
adc
mov
mov
push
dec
sbbb
mov
daa
fdivr
adc
sub
push
cmp
jnp
sbb
xor
pushf
stc
sahf
inc
and
filds
lods
add
xchg
push
jg
mov
dec
out
push
jmp
pushf
dec
push
shr
sbb
cmpsb
stc
fildl
fcoms
xchg
mov
hlt
clc
enter
inc
and
push
mov
xor
fmul
inc
mov
pop
xlat
hlt
push
hlt
fcompp
adc
add
inc
in
popf
fwait
idivb
jge
imul
push
stc
daa
test
mov
jne
dec
loope
jo
push
mov
loop
in
fistl
mull
rcl
sti
mov
imulb
xlat
jmp
inc
ret
call
js
push
mov
add
out
fldcw
nop
clc
xor
mov
mov
sbb
inc
rorl
xchg
pop
out
dec
push
mulb
jle
push
leave
jno
dec
jle
mov
sti
xchg
enter
dec
test
js
push
jmp
cmpsl
push
mov
pop
pushf
test
mov
inc
mov
pop
popf
pop
movsb
in
int3
push
push
pop
and
arpl
xchg
cmp
inc
and
add
mov
dec
repz
inc
xor
je
aaa
sub
cmpsl
shrl
push
stc
arpl
sbb
cwtl
mov
cmpsb
sti
fcoml
dec
aad
repz
push
inc
fistpl
and
testl
push
cmp
imul
adc
int
stc
sub
mov
xchg
or
jae
adc
rcr
out
jae
jmp
push
loopne
sti
es
daa
lods
pop
mov
push
sub
and
rol
enter
clc
loope
enter
mov
adc
cmpsb
adc
jbe
bound
mov
fidivrs
mov
outsl
mov
push
pop
sub
lods
aam
cmp
or
jb
shlb
xchg
shll
pop
xchg
stos
shrl
adc
lds
lock
aam
es
xor
icebp
dec
and
orb
inc
add
xor
jb
test
or
mov
sbb
clc
push
call
repz
roll
icebp
daa
shll
push
xlat
push
add
push
mov
pushf
test
js
shll
cmp
xor
xlat
js
out
mov
fwait
cmp
sti
lock
jnp
lods
imul
loope
stc
lret
xchg
push
mov
or
cltd
adc
out
pushf
les
aas
ret
jmp
adc
enter
popf
lock
mov
lods
stos
jmp
mov
movsl
push
andb
ficoms
rcrl
mov
mov
or
jge
outsl
inc
loopne
xor
mov
fistl
repz
loope
fiadds
out
scas
pop
repz
xchg
push
pop
fwait
pop
pusha
jg
and
aaa
push
inc
adc
insb
sbb
loop
push
xchg
iret
fs
adc
dec
call
int
cmc
or
mov
loop
test
rol
push
ret
faddl
inc
add
mov
fcoml
stc
clc
fsubs
imul
fucomi
nop
add
clc
nop
or
sub
or
bound
or
dec
xlat
jmp
fisubl
lahf
push
cs
mov
xor
pop
or
loopne
faddl
mov
iret
addr16
ja
rolb
cmp
fmull
mov
sub
gs
jg
and
pop
sbb
mov
push
loope
add
fwait
add
es
dec
adc
mov
fcomp
dec
add
int
jae
std
ds
jmp
cltd
ja,pt
ret
cmp
mov
jo
or
pop
loope
in
xor
hlt
xor
mov
leave
test
in
push
cmpsb
hlt
sbb
clc
filds
outsl
das
fmul
push
mov
out
fildl
jne
fstl
out
mov
dec
adc
aad
cmpsb
sbb
imul
fdivrl
repnz
cmp
scas
push
jg
ret
aaa
cli
or
dec
out
pop
inc
jge
in
and
arpl
shll
cmp
pop
jmp
add
mov
mov
nop
leave
popa
insb
and
xchg
jne
push
xchg
cltd
flds
pop
jb
mov
inc
push
xlat
int3
mov
stos
sub
push
or
pop
push
dec
lcall
cmp
lahf
mov
xchg
out
imul
lret
clc
xor
icebp
push
dec
mov
jae
pop
je
mov
cmp
push
inc
arpl
jns
ret
push
fcoms
outsb
iret
lods
or
es
repnz
jl
dec
movsl
cmpsb
repnz
aas
add
arpl
ljmp
cmp
outsl
dec
or
push
ja
pop
mov
ja
mov
cli
pop
adc
push
or
sahf
xchg
mov
lock
sub
pushf
aam
jno
cs
jle
jecxz
pop
mov
cmp
lret
das
rorb
mov
aad
mov
dec
ror
mov
adc
js
dec
orb
decl
adc
sub
lods
test
inc
dec
cmpsl
mov
inc
pop
push
rcrl
sti
lcall
shlb
std
nop
fdivp
sahf
pusha
push
jle
sub
mov
cmpsb
and
faddl
andb
xlat
or
in
and
decl
jne
cmp
xor
mov
inc
lahf
das
adc
icebp
int3
or
repnz
and
mov
sti
sbb
and
xchg
xor
push
mov
push
cmpsb
es
mov
sbb
mov
pop
sahf
pop
add
jp
pop
das
jno
int3
cld
adc
sarb
xchg
ret
mov
jge
pop
dec
popf
call
ror
inc
or
repz
and
jmp
cmpsl
in
xlat
in
adc
sbb
iret
cmp
and
dec
push
pop
cmp
les
lret
sti
xor
in
test
add
loopne
dec
mov
mov
pop
mov
ficoms
aaa
add
mov
inc
out
xor
fidivs
sbb
jne
dec
sub
subl
mov
iret
aas
sahf
leave
xchg
sbb
ja
lcall
jae
adc
sti
lock
fcomp
xor
inc
jne
lret
dec
loop
mov
jnp
cmp
repz
inc
test
fildl
fsts
sbb
lods
pop
icebp
mov
out
mov
out
mov
sti
or
repz
sbb
out
xchg
mov
andps
adc
fsubs
fdivs
data16
jae
enter
xchg
add
xor
and
push
sbb
or
cmp
adc
insl
cld
loopne
sub
add
cmp
jae
std
xlat
shlb
dec
sub
sub
loop
inc
adc
dec
mov
cmp
pop
or
and
aad
mov
pop
and
stos
neg
aam
mov
repz
shlb
sub
lahf
jl
add
xchg
push
push
mov
pop
inc
aam
xor
out
mov
insl
mov
scas
mov
mov
mov
stc
daa
add
jo
pop
mov
xchg
adc
lds
aaa
mov
or
mov
sbb
adc
adc
push
stc
movsb
inc
pop
fadds
jge
inc
inc
jb
popf
cmc
and
xchg
ja
pusha
mov
fisttpl
jbe
ficoml
mov
das
cmpsl
lock
dec
and
cmp
aam
test
inc
or
bound
xchg
dec
fnsave
out
nop
loop
mov
and
loopne
xor
pop
rcll
je
ret
je
sbb
aaa
clc
ss
push
ret
or
mov
xchg
inc
arpl
inc
cltd
aas
xchg
xchg
add
in
aaa
and
xor
popf
jo
xor
push
les
aas
xchg
or
xchg
jl
cs
mov
add
clc
xor
xor
mov
add
pop
and
lea
repnz
out
cmpsl
imul
stc
dec
cmp
fistps
fwait
push
push
aam
xor
imulb
imul
mov
dec
daa
cli
out
jmp
sahf
push
inc
outsb
in
repz
or
shll
je
mov
out
scas
xor
mov
and
xchg
cmc
push
adc
test
aam
mov
push
loope
repz
mov
iret
xchg
outsb
jg
stos
inc
lahf
and
enter
xor
icebp
or
repz
shl
sar
fstpl
inc
xchg
movsl
in
fcompl
jae
cmp
sarb
test
sub
push
out
adc
pop
mov
mov
out
pop
xchg
rclb
mov
aam
fwait
sub
ds
jno
xchg
sbb
leave
mov
gs
jmp
jecxz
xchg
negb
fcmove
cld
mov
jmp
sub
jge
outsb
jae
movsl
xor
sbb
outsb
mov
dec
inc
popa
icebp
xor
inc
jmp
shll
lods
mov
fs
lret
xchg
ja
adc
shll
jnp
xlat
leave
jmp
jb
ret
ret
cltd
test
sub
xlat
subb
daa
fdivrs
aad
add
shr
aaa
stos
sbb
hlt
leave
lret
and
jmp
pop
pusha
or
rcrl
dec
gs
cmc
jne
cltd
pop
and
lock
shlb
testl
loopne
in
adc
jns
cmp
jo
iret
and
mov
xor
mov
dec
xchg
stos
cmp
inc
sub
push
jp
dec
or
mov
lret
and
lock
insb
ret
filds
mov
sbb
sub
pop
pop
cmp
jg
shll
popa
shlb
sti
mov
cmp
pop
add
fstl
xchg
inc
fwait
sub
dec
jns
mov
rcrl
pop
add
add
insl
xor
push
es
mov
popa
adc
adc
pop
jo
mov
and
cmpsb
xor
pop
mov
mov
jae
sub
sub
das
popl
jno
pusha
mov
push
mov
cmpl
pop
lock
mov
aas
mov
push
push
cmp
rclb
sub
pop
sub
shr
mov
xchg
or
xor
out
mov
jg
xor
ljmp
ret
or
out
lods
insb
iret
push
or
je
sbb
dec
ficompl
lock
fmuls
shrl
or
inc
cmp
fisttpl
xor
add
fidivrl
daa
ja
jb
ficompl
outsl
adc
ja
mov
in
xchg
lret
mov
pop
sbb
lcall
mov
clc
movsl
cmp
aam
arpl
push
xor
stc
fiaddl
mov
fimuls
cwtl
mov
mov
movsb
ficoms
mov
lods
std
jp
inc
jne
adc
loopne
in
adc
pop
pop
adc
lahf
push
jge
int3
insl
pop
or
std
in
cmpsb
mov
mov
cld
dec
dec
ret
xchg
push
nop
roll
test
add
mov
fistps
fucomp
ret
xchg
dec
test
inc
aas
aad
loopne
sub
out
enter
pop
jno
stc
sbb
rcll
rclb
sub
pop
sbb
cld
scas
test
mov
lods
jo
jb
jmp
insb
test
cli
jmp
popl
pop
call
xor
adc
xchg
jle
cmpb
or
push
push
nop
lcall
stc
jecxz
loop
dec
orb
js
mov
pop
cmp
aas
cmp
sarb
inc
popa
pop
jo
int3
dec
and
inc
mov
cmc
jae
dec
fimuls
pop
mov
lods
pop
adc
mov
test
jns
insb
mov
aas
add
insb
cmp
mov
pop
mov
jle
test
mov
loope
mov
jbe
sti
mov
cld
xlat
mov
cmp
adc
fdivl
ja
nop
popf
pushf
popf
dec
adc
jno
sbb
fstpl
sbb
outsb
jnp
int
mov
fcoml
stc
jg
sti
jle
inc
inc
pop
push
mov
in
fmull
test
or
test
adc
mov
repnz
mov
mov
xchg
ret
and
sbb
mov
cmp
sahf
cs
scas
xchg
les
mov
sarl
cmpsl
mov
idivb
cmpsl
xchg
scas
fcomps
mulb
iret
or
fisubs
mov
mov
loop
hlt
out
lret
cmpsb
shll
icebp
jle
xor
insb
push
adc
mov
lcall
inc
mov
jae
orl
sbb
dec
jae
add
dec
sbb
cltd
hlt
das
push
sbb
inc
stc
push
repnz
dec
ja
jmp
add
aas
dec
mov
xchg
sbb
repnz
int3
rcr
dec
cmp
dec
les
ljmp
mov
sbb
mov
pop
dec
imul
jne
dec
mov
ss
fisubs
je
or
inc
call
mov
cwtl
or
test
or
mov
ret
bound
and
popa
adc
dec
pushf
test
inc
in
pop
in
pushf
adc
stos
pop
or
stc
cmpsl
adc
ret
and
test
sbb
push
pop
xchg
stc
mov
cwtl
pop
stc
push
arpl
pop
xlat
jae
outsb
or
fwait
movsl
push
cmp
gs
cmp
stc
push
ret
adc
pop
ret
bound
xlat
xor
in
dec
xchg
mov
icebp
les
les
cmp
lret
outsb
rorb
adc
icebp
shrl
fucomi
and
enter
and
lcall
push
into
lock
adc
or
mov
jb
add
pop
sub
xor
add
lock
jne
adc
pop
ds
fsubs
jae
ret
fwait
and
dec
jne
sub
stos
inc
sbb
mov
inc
xchg
jo
clc
jbe
icebp
and
xor
sub
push
push
push
into
jns
or
adc
leave
lea
xchg
sub
mov
push
movsl
das
je
cli
das
mov
xor
mov
ret
outsb
adc
aaa
push
sbb
rolb
add
mov
xchg
lods
xor
mov
sub
cmp
inc
nop
loopne
std
xchg
in
add
arpl
pop
scas
inc
push
pop
icebp
cmp
inc
adc
xor
pushf
jno
pop
mov
sbb
xor
xor
insl
jno
dec
das
scas
xor
sbb
dec
mov
sbb
ret
or
loopne
or
aas
mov
popl
sbb
mov
mov
jecxz
inc
ret
pop
enter
rcr
es
mov
out
inc
les
lea
push
jns
lock
mov
pop
out
adc
or
pop
shlb
fstpl
pop
icebp
in
push
push
pop
dec
mov
xchg
fucomip
scas
clc
sti
aaa
xchg
cmc
fwait
pop
fmull
xor
sub
ret
mov
out
adc
out
in
lods
dec
inc
push
outsb
dec
and
nop
iret
aam
rcl
icebp
je
cmpsl
out
xor
adc
and
sub
ret
ds
pop
jno
and
push
shlb
mov
pop
push
fsubrs
pop
cld
sub
inc
test
fwait
jmp
fdivs
addr16
rorl
dec
cltd
cmpsb
push
test
aam
js
daa
fsubrp
cld
lods
out
xchg
inc
inc
ftst
enter
mov
pop
sarl
sub
mov
fidivrl
dec
imul
aad
mov
stos
arpl
das
jl
popf
or
push
or
bound
adc
mov
repnz
adc
xchg
xlat
pop
popf
sti
ja
test
cli
add
mov
add
or
xor
sar
scas
test
xchg
pop
fbld
jge
xor
cmp
jle
mov
mov
mov
xor
stos
add
std
pusha
leave
stc
xor
pop
js
xor
adc
popaw
or
adc
push
xchg
faddl
and
inc
inc
sub
cmp
lock
add
mov
push
add
mov
sbb
enter
lock
xchg
shll
gs
pop
inc
into
adc
popa
pop
sbb
add
dec
jge
mov
xor
pop
inc
pushf
pusha
daa
inc
inc
aad
mov
cmp
xor
dec
cmp
daa
cmc
push
aad
pop
cmp
je
jle
jecxz
outsl
lea
js
loop
jle
mov
sbb
rcll
insb
cmc
pushf
outsb
cmp
mov
icebp
or
jmp
icebp
ja
cmp
movsl
pop
pop
and
sar
jmp
lcall
jp
mov
mov
lahf
stos
cwtl
jge
cmpsl
pop
mov
add
lods
fwait
arpl
lahf
test
xor
mov
gs
mov
loop
aaa
cmp
lret
jbe
loope
jno
xchg
mov
dec
cmp
sbb
xor
out
inc
popf
sbb
jo
push
add
cli
push
cs
xlat
pop
mov
jg
and
mov
cmc
pminub
cmp
mov
or
fbld
movsl
fnsave
in
ds
lret
xlat
pop
mov
fwait
xchg
fcom
jmp
loopne
push
jecxz
aam
xchg
in
test
fs
and
fcompl
xchg
xor
stos
sbb
mov
scas
ret
inc
xchg
std
mov
aam
leave
inc
xchg
inc
insl
lods
aaa
cmpsb
xchg
mov
jb
sub
iret
leave
jecxz
inc
pusha
or
fldcw
clc
sti
adc
mov
lret
ds
js
shlb
fisttpll
aaa
dec
mov
test
cmpsl
sub
mov
sbbl
adc
jae
sbb
sbb
sbb
cmpsb
mov
cmp
fildl
scas
in
xchg
jo
adc
xchg
sti
les
dec
jl
mov
js
jp
cltd
xor
mov
inc
push
in
or
out
push
cld
into
pop
adc
jg
lret
ret
mov
jmp
aaa
out
xor
adc
fmul
stc
fwait
test
fmuls
out
xchg
outsl
sbb
xor
cld
mov
add
or
aam
in
call
cmp
ret
mov
jmp
sub
out
iret
pop
in
lods
popa
enter
out
fnsave
sbb
test
mov
cltd
ret
and
or
adc
dec
movsb
int3
popa
xchg
mov
inc
xchg
hlt
sarl
mov
dec
sbb
repnz
xor
ja
aas
xor
enter
std
sbb
loop
insl
hlt
fisttps
mov
mov
daa
dec
shrl
mov
leave
mov
ret
repz
jno
xchg
lcall
push
jecxz
xchg
jle
ja
inc
faddl
js
jge
jg
push
mov
mov
mov
or
fistpl
stc
or
imul
add
push
inc
add
std
sbb
enter
lds
daa
xor
adc
sub
movsb
inc
das
rorl
arpl
sbb
rorb
adc
lahf
sbb
pop
fwait
inc
dec
pop
ss
xlat
xor
in
add
jnp
mov
xchg
fsubrs
cmp
xchg
sbb
lods
lds
fwait
adc
into
int
add
jmp
idivb
add
pop
mov
pop
lcall
push
mov
sub
dec
pop
mov
jp
and
push
sub
loopne
fs
inc
sub
jmp
sti
xchg
sbb
add
loopne
mov
adc
mov
xor
pop
jle
pop
hlt
xor
test
xor
ret
sub
mov
mov
or
rolb
sub
mov
xor
iret
inc
loope
dec
xlat
rcr
imul
jl
pushf
les
adc
dec
pop
filds
ss
mov
repnz
pop
icebp
inc
inc
fnsave
cld
jecxz
pop
add
aam
cmp
cs
push
test
stos
jl
inc
cmpsl
mov
loopne
dec
jl
cltd
mov
lcall
ret
fcompl
adc
test
push
sub
nop
inc
int
subb
aam
iret
mov
pop
pop
subl
pop
mov
divb
jbe
jmp
outsl
out
dec
mov
in
push
stos
mov
add
sahf
adcl
jecxz
add
aad
cltd
jmp
rcll
or
mov
sbb
inc
xlat
shr
fldt
testl
mov
pop
mov
xor
fisttps
mov
pop
mov
js
add
es
sub
mov
scas
pusha
dec
inc
jmp
cld
sbb
out
mov
xor
fwait
cld
inc
lret
aaa
jle
icebp
popf
call
pop
add
stos
in
sti
fstpl
pushf
aas
sub
pop
rcrl
jmp
popa
pop
mov
cli
push
cltd
cmp
mov
add
mov
xor
pop
sahf
mov
jl
fstps
xchg
int3
lods
dec
cmpsb
insb
in
aas
cmc
mov
stc
loop
sahf
push
pop
cmp
xor
xchg
popa
addr16
repz
mov
fsubl
jns
sub
jne
and
stos
and
ja
pop
xor
in
mov
inc
mov
es
push
xchg
fwait
push
daa
stc
mov
rcr
in
lock
jecxz
aad
in
out
pop
pop
mov
fstps
or
lret
inc
insb
pop
sbb
sarb
inc
cmpxchg8b
cmp
repz
ss
cld
adc
xchg
sub
icebp
push
shr
pop
cwtl
popf
mov
sbb
jl
ret
repz
mov
sti
lcall
imul
push
xlat
aam
inc
shr
add
rorl
dec
xor
pop
lds
movsb
mov
das
hlt
adc
faddl
loopne
fwait
lret
push
cmp
call
push
dec
pop
xor
fildll
lock
loopne
mov
rcr
mov
adc
pop
into
outsl
stc
fists
mul
jmp
test
inc
je
loop
pop
fs
jmp
sti
dec
sub
jo
jmp
pop
add
push
and
sub
adc
cmp
mov
test
fisubl
cmp
dec
imul
jo
std
lret
in
adc
fsubr
int
test
cltd
std
scas
cmc
test
jne
jno
insb
stc
rcr
mov
inc
cmpsl
rolb
mov
mov
and
add
add
or
cmp
mov
or
or
sbb
test
jecxz
inc
cmp
icebp
es
jmp
in
popf
sti
add
inc
adc
jg
push
pop
adc
and
lret
aam
sahf
adc
cmc
repnz
stos
testl
push
cs
mov
mov
mov
pop
adc
mov
dec
add
movb
lret
xchg
adcl
call
iret
test
mov
icebp
les
icebp
add
in
push
repnz
dec
out
xlat
mov
in
dec
dec
nop
push
ret
adc
mov
int
jle
pushf
in
loopne
loope
loopne
jg
jne
mov
sbb
lcall
and
les
xchg
insb
pop
loop
sub
sub
aam
xchg
mov
mov
int3
scas
xchg
mov
mov
test
or
test
pop
rcl
xor
js
add
lea
pop
je
or
dec
xor
loopne
dec
or
xlat
imull
bound
in
push
cmpb
adc
mov
mov
mov
sub
sbb
mov
dec
cwtl
sub
pop
repz
les
adcl
jo
dec
and
lret
into
stc
pusha
movsb
ja
xor
sbb
push
js
test
mov
stos
push
add
sti
ds
jbe
repz
jp
std
pop
and
repnz
arpl
scas
dec
data16
and
dec
jl
sarb
push
bsf
outsb
imul
test
shlb
fdiv
aam
dec
xchg
inc
lds
pop
stc
jge
dec
xchg
sbb
inc
imul
mov
jno
push
mov
mov
sub
mov
push
sbb
adc
daa
sahf
fsubr
aam
pop
cmpsl
in
imul
insb
add
cmp
pop
sbb
aad
in
cmp
mov
fsubrs
add
push
xor
test
push
mov
fistpl
pop
popa
lahf
inc
lret
sbb
lcall
xchg
roll
addb
inc
aad
cmp
and
sti
add
es
std
into
imul
insb
jecxz
inc
xchg
add
addb
icebp
jbe
cld
and
sbb
sbb
loope
mov
mov
inc
jge
dec
ss
adc
es
insb
or
mov
xor
mov
adc
lret
mov
pop
filds
in
sbb
push
xchg
loope
in
dec
push
xor
repnz
dec
wbinvd
push
push
lret
sti
mov
or
fimull
push
cmp
inc
outsb
aam
inc
sub
dec
into
jge
test
push
cmp
cmp
adc
add
aas
jo
pusha
hlt
mov
sbb
loop
add
push
sub
cmp
fcoml
repz
inc
notb
andl
mov
or
stos
loopne
jae
dec
mov
cmp
or
mov
pop
in
hlt
ja
mov
repnz
jne
loop
adc
fists
cld
sub
pop
aam
cmp
add
sbb
push
out
mov
in
int
fimull
das
jmp
push
jmp
iret
into
jecxz
push
ja
aas
xor
mov
jne
jae
push
sbb
jne
cmc
xchg
in
mov
ficoms
ret
mov
int3
cmovb
inc
cmc
push
push
xchg
in
shl
push
add
icebp
or
sbb
int3
aaa
add
icebp
pop
sbb
inc
fucomp
cmpsl
hlt
jp
ret
push
adc
sbb
test
mov
inc
std
pusha
inc
add
stc
dec
or
fistps
fsub
mov
out
dec
mov
iret
or
xor
imul
cli
out
xchg
lods
mov
xchg
scas
dec
bnd
hlt
pop
mov
inc
pushf
and
leave
dec
mov
mov
push
clc
lods
adc
dec
adc
push
imul
sahf
push
sub
clc
out
and
mov
std
out
into
push
cmc
adc
push
push
add
sbb
repnz
xor
rcll
add
rcrl
jo
xor
shlb
int
stos
leave
stc
pop
xadd
ror
adc
lret
jae
cmpsb
push
movsb
sti
shll
les
pop
gs
sti
or
mov
sbb
lock
add
inc
loopne
aaa
mov
mov
adc
inc
sub
es
out
mov
stos
mov
ds
imul
flds
loopne
orl
mov
out
repz
stos
push
js
push
popa
pusha
pushl
mov
mov
pop
sub
inc
test
mov
daa
cmpsl
mov
shrb
loopne
das
std
xlat
int
adcl
mov
sbb
mov
mov
push
outsb
cli
aam
adc
push
hlt
scas
pop
dec
jo
sub
jno
dec
and
mov
fs
into
jne
pop
mov
out
out
fldl
mov
push
add
sbb
jl
adcb
jne
jo
loope
scas
in
loop
cwtl
adc
xor
icebp
jo
int3
push
in
mov
lcall
or
xchg
subl
cltd
add
mov
sarb
stos
inc
out
mov
xchg
pop
adc
pop
push
push
and
iret
cltd
test
lret
loope
daa
cmp
sub
jnp
inc
stc
jge
aad
les
mov
push
sbb
sub
push
add
mul
and
push
ror
fidivl
aam
das
sub
outsl
jge
dec
test
sub
icebp
mov
loop
daa
add
xchg
adc
stos
mov
pop
xchg
aaa
inc
sahf
xchg
cmp
push
cltd
cmp
insl
lea
imul
fisubrl
scas
mov
cmovnp
lret
fidivl
filds
mov
pop
push
push
ret
or
shrb
xor
lcall
mov
cwtl
or
mov
pop
pop
aaa
push
sahf
into
jno
cmpsl
adc
std
data16
sbb
lock
xlat
pop
mov
push
cmp
imulb
adc
adc
push
shlb
push
sbb
icebp
adc
lds
mov
shlb
fdivrs
inc
xor
int
leave
or
and
jp
jns
mov
dec
add
div
es
stc
hlt
lds
in
cmp
cmp
jno
xlat
mov
scas
xchg
stos
push
push
xchg
jge
outsb
loope
aas
pusha
insb
das
cwtl
lahf
mov
jo
push
xor
pop
fcomps
lods
add
aas
jo
ret
fnstcw
mov
sub
sbb
subl
in
das
pop
sarl
push
add
lods
dec
dec
int3
xchg
mov
leave
push
cld
call
fsubrl
mov
bound
xchg
rcrb
cld
mov
mov
sahf
lret
fcmovnb
je
pop
push
push
push
rcl
cmc
push
adc
cmp
push
ret
pop
push
jl
stc
shll
xchg
sti
lods
and
mov
gs
xor
cltd
popa
adc
sahf
insl
jb
addr16
sub
imul
xor
xchg
xor
dec
mov
or
cmp
cld
lcall
pop
adc
jle
pop
sbb
cmp
or
push
std
pop
mov
adc
sbb
jle
das
mov
mov
ds
jge
inc
nop
lds
test
pop
pop
outsl
pushf
push
cmpsl
lock
inc
push
subl
mov
insl
xor
jo
pop
pop
cmc
push
bnd
jns
pop
rdmsr
xchg
in
int3
enter
fists
adc
sti
and
push
aad
repnz
repz
aam
push
mov
movsl
jge
lock
xor
loop
pop
add
xchg
hlt
mov
or
cmc
jp
setae
lock
jl
addr16
push
imul
cmp
loope
pop
mov
push
and
push
cmp
je
rcrl
cli
sub
int
loope
push
shlb
sub
mov
and
iret
icebp
dec
jge
xor
jg
in
lret
cmp
cmp
and
daa
clc
jnp
leave
ja
movntq
or
je
xchg
jl
dec
and
adc
sub
daa
or
jae
movsl
mov
jno
inc
je
fstpl
gs
xor
ret
mov
dec
or
ffreep
mov
push
out
flds
pop
ja
push
movsb
pusha
or
rorb
mov
cmp
mov
jb
outsl
xor
ret
popa
mov
mov
stos
jo
add
push
sbb
lret
mov
popa
xor
loopne
lods
mov
std
or
and
lods
arpl
push
sub
cmp
clc
out
add
roll
shlb
fsubrl
jl
pop
sub
xchg
fldt
cmp
lods
cmp
inc
push
add
jp
les
push
sbb
push
and
ss
fadd
stos
fbstp
lret
pop
loope
cmp
cltd
inc
std
add
test
fnsave
out
or
jecxz
push
sub
pop
mov
mov
pop
sbb
cmp
insl
sbb
add
cli
incl
push
ret
insb
inc
adc
push
lahf
jle
lcall
gs
or
loopne
mov
jne
sbb
ss
dec
or
insb
sahf
fstpl
test
xchg
adc
mov
adc
arpl
adc
pop
fdiv
mov
sahf
mov
popa
jg
mov
inc
lds
sti
xchg
sbb
fistl
jle
fsubrl
push
in
xchg
lahf
mov
movsb
fildl
add
dec
jb
fiaddl
mov
lret
mov
xchg
jl
jecxz
es
imull
or
jne
fwait
adc
imul
imul
push
and
dec
in
insl
int3
mov
xchg
clc
and
into
fs
js
dec
and
mov
sbbb
xor
sbbl
das
pop
fsubrs
inc
fistpll
push
mov
pop
jns
es
fsubs
add
add
pop
cmc
mov
testl
jmp
jp
jno
jmp
jae
cmp
jae
adc
lcall
sbb
in
dec
notl
xchg
sbb
lods
mov
xchg
std
cld
fld
adc
lock
pusha
push
call
cmp
inc
adc
in
aam
xlat
das
adc
sahf
shll
xrelease
cs
cld
sti
push
xor
aam
mov
sub
pop
mov
lea
orb
adc
dec
fldt
into
pop
adc
add
jecxz
aaa
xor
shll
xchg
in
or
lahf
or
adc
mov
xchg
mov
push
stc
xchg
enter
mov
nop
rcl
adc
and
pop
and
mov
ss
shll
stos
cmc
movsl
mov
xchg
clc
inc
mov
or
cmp
outsl
scas
push
and
adc
push
and
idiv
adc
ja
push
jo
clc
or
adc
sbb
lcall
push
cmpsl
shrl
cmp
js
mov
mov
xchg
mov
mov
clc
fstpl
jmp
mov
mov
fucomi
mov
dec
out
adcl
inc
leave
jle
ret
push
mov
ja
xor
sbb
sub
inc
cmc
outsb
fistpll
aad
mov
cmpsl
push
insb
das
lock
in
mov
fstps
iret
dec
enter
cmp
repnz
xor
add
addr16
push
out
jbe
pop
pop
int3
or
rorb
jge
ja
dec
roll
test
rcrl
jnp
sub
mov
add
adc
jns
dec
or
jge
inc
pushf
push
and
xchg
or
outsl
cmp
add
and
pop
cmp
jnp
sub
mov
arpl
movsl
cmp
push
inc
or
mov
pop
popf
call
mov
ud1
fildl
push
mov
jb
pop
icebp
add
setp
fcmovnu
mov
mov
aaa
xchg
test
add
and
inc
insb
insb
push
test
icebp
xlat
xor
aad
pusha
js
sbb
lahf
lret
stc
jmp
filds
pop
and
dec
cmp
or
fnstenv
sar
loopne
addr16
ja
pusha
push
ljmp
mov
sarl
adc
fwait
xchg
mov
call
mov
inc
pushf
cmp
lret
cmp
jno
mov
cmovge
lahf
lahf
and
int3
sub
jno
mov
repnz
aas
cmc
add
js
xchg
mov
adc
jp
iret
xchg
jno
fisttpll
jb,pn
cld
or
sahf
jle
mov
pushf
cmp
fstpl
or
xor
das
adc
cmp
cld
mov
shrl
mov
push
aam
shlb
lret
lds
fldcw
adc
jbe
in
fldenv
mov
or
cmp
xlat
out
xchg
sub
inc
mov
xor
mov
aaa
hlt
mulps
mov
push
sbb
xor
shl
imulb
fwait
aad
jno
addr16
fsubl
or
pop
cmp
loope
mov
aam
push
adc
mov
push
cmp
or
or
sub
mov
and
pop
in
xchg
fdivrs
scas
add
imul
out
test
jae
aaa
push
stos
sti
subb
negb
test
jno
mov
xchg
test
sub
scas
adc
pop
icebp
mov
lea
repz
sub
add
push
sub
inc
and
push
jle
mov
loop
cmc
xor
mov
pop
repnz
inc
jb
ds
mov
mov
pop
pop
jl
and
test
mov
or
mov
xor
cmp
out
push
sbb
ljmp
into
fimuls
repz
pop
pop
add
mov
jle
adc
shrb
ret
pop
ds
cmpsl
pusha
inc
insl
hlt
lea
andl
jecxz
adc
mov
pop
out
cmpsb
jge
sub
jecxz
inc
mov
mov
lock
mov
mov
sub
mov
adc
sub
es
adc
xchg
sbb
mov
sar
neg
mov
ljmp
xchg
push
icebp
in
xchg
push
mov
in
std
test
dec
sub
jno
repz
clc
dec
mov
pop
mov
dec
mov
jne
mov
insl
push
roll
and
mov
xchg
mov
pop
adc
sbb
hlt
and
outsb
sarl
ja
test
mov
mov
push
mov
dec
addr16
add
mov
je
addr16
test
int3
inc
pop
fdivrs
adc
mov
aam
adc
in
cmp
dec
stos
gs
cmp
adc
cmp
adcl
cmp
test
aaa
data16
adc
dec
add
xchg
test
cmp
iret
pusha
lock
xor
cld
sbb
orb
mov
loopne
jns
jp
fdivrl
xor
icebp
aas
pushl
push
fnstenv
jecxz
fwait
or
shlb
sub
sbb
lods
cmp
ljmp
and
or
jle
push
xor
bound
leave
xchg
and
sub
sub
adc
in
cmp
dec
ja
sub
sbb
aaa
pop
or
or
mov
fcmovnbe
sub
pop
mov
jl
movsl
xchg
push
jl
inc
pop
mov
ja
leave
fisubrs
cld
lock
iret
pop
jns
fsts
dec
or
xchg
out
call
mov
les
inc
mov
icebp
outsb
call
lock
test
jmp
scas
int3
jno
sub
aaa
add
add
idiv
xor
int
xchg
jno
stos
in
fiaddl
pop
sub
or
add
fsubl
dec
pop
cli
dec
mov
ret
aaa
lods
xchg
jno
cmc
pusha
cmp
addr16
fstpt
jb
adc
mov
aam
sub
cli
dec
mov
adc
mov
cmc
lea
pop
push
pop
xchg
lods
mov
mov
push
pop
xchg
xor
pop
rcrb
pop
sahf
das
scas
inc
mov
pop
mov
gs
push
es
repnz
repnz
movsb
cmp
lcall
pop
mov
andb
inc
or
pop
pop
addr16
xchg
mov
cmpsb
sbb
xchg
test
sub
push
jno
or
or
sbb
sti
inc
xor
mov
pop
add
push
fimuls
test
jmp
xor
out
mov
or
out
inc
ret
mov
jnp
popl
add
popa
mov
cmpsl
sub
int3
jmp
cmp
das
mov
lock
jbe
push
mov
lcall
pop
repz
test
cmpsb
mov
inc
jle
mov
xchg
test
xchg
jmp
or
ljmp
cmp
cmp
lods
js
mov
lret
out
xchg
sub
add
mov
mov
xlat
leave
enter
dec
mov
leave
jbe
es
scas
shrl
push
jmp
mov
mov
icebp
nop
xor
mov
xor
stc
xor
add
incl
mov
jg
inc
xlat
dec
cmp
xor
inc
and
adc
xor
imul
lea
pop
shl
cmp
and
sar
mov
adc
andb
mov
lret
mov
xor
sub
cmp
mov
pop
mov
lea
mov
or
lret
mov
arpl
jecxz
fs
arpl
shll
sbb
fmull
pop
cs
xlat
fdiv
fisttpl
or
shll
push
xor
jb
orb
sbb
shrl
adc
jno
ljmp
call
pusha
iret
adc
fists
ljmp
mov
mov
push
cmp
push
xor
pop
and
and
mov
jle
shlb
leave
jae
sub
or
scas
ljmp
lahf
adc
shll
outsb
jmp
and
cli
out
js
inc
negl
push
jmpw
dec
mov
cld
pop
dec
jnp
aas
jne
push
popa
xchg
xchg
cmp
or
fdivr
jmp
mov
fisttpll
loop
iret
jmp
fwait
nop
sbbl
imul
cs
adc
loopne
mov
das
imul
out
bound
pop
mov
out
sub
adc
sub
or
mov
notb
add
push
popf
adc
and
rcrb
imul
dec
mov
mov
dec
ja
lahf
mov
xor
cld
cmpl
cmp
jbe
pop
mov
int3
jmp
mov
mov
lcall
push
rorb
inc
xchg
aas
mov
std
sbb
loop
push
xor
cmp
and
ret
outsb
pop
cmp
rcrb
movsb
xor
enter
jb
shrd
sub
or
inc
sbb
inc
repnz
mov
dec
cmpsl
xor
push
ret
into
inc
add
xchg
inc
mulb
jmp
jle
xor
sbb
pop
std
fisttpl
push
pop
repz
loope
or
cli
test
inc
repnz
dec
add
mov
jmp
dec
or
xchg
sbb
adc
test
xchg
adc
xchg
and
dec
mov
ret
aas
sub
aad
pop
add
jb,pn
cmp
add
lods
out
and
mov
nop
and
fildl
sub
push
or
adc
ljmp
imul
fdivl
mov
xchg
int
int
push
das
ret
enter
out
jns
jmp
sbb
fistl
pop
xlat
add
aaa
pop
push
sub
mov
and
inc
mov
mov
xor
sbb
outsb
rol
mov
shlb
fldcw
std
mov
pushfw
push
adc
push
sub
sahf
xchg
in
arpl
jno
cmp
ja
jbe
lock
sub
fisttps
dec
jg
sub
imul
push
adc
in
mov
ds
cmpsl
mov
hlt
dec
shrl
jl
xchg
cltd
loopne
push
pop
out
idivb
dec
js
shr
cs
sbb
xchg
stos
dec
enter
fwait
call
push
iret
push
add
sbb
mov
lods
adc
lret
push
sahf
loopne
test
int
mov
cmp
cmc
mov
sub
fst
shl
rclb
fbld
xor
mov
imul
sti
xchg
mov
jnp
jo
and
sub
notl
or
mov
xchg
cmp
pop
scas
mov
or
out
adc
cmp
xlat
jno
adc
add
sbb
in
hlt
enter
jo
mov
outsb
outsb
pop
in
and
pop
mov
and
push
subl
jmp
arpl
gs
sub
pop
push
mov
call
enter
pop
cmp
xor
adc
mov
inc
push
adc
loope
and
repnz
cmp
icebp
mov
fdiv
sti
ja
ret
cmpsb
test
insb
adc
xchg
subb
ret
push
es
pop
notl
lods
or
push
xor
loopne
mov
xchg
popa
cs
ret
das
cwtl
test
xchg
ret
pop
js
mov
push
jg
cmp
aad
pusha
add
jl
xor
pop
mov
xor
shr
dec
jae
fisubl
xor
icebp
cmp
mov
out
hlt
push
dec
fsubrl
rcrb
pop
int
sarb
in
cli
fwait
js
jno
loop
sub
cs
mov
les
shlb
aam
jle
adc
jecxz
inc
mov
cmpb
inc
icebp
repz
xchg
shrl
std
sti
adc
and
enter
pop
fistpl
ss
mov
mov
jbe
xchg
push
mov
adc
mov
or
inc
adc
push
add
lock
or
inc
out
adc
out
add
mov
xor
stc
xor
scas
jecxz
sub
mov
clc
mov
aaa
inc
aam
cmpsl
bound
shlb
call
mov
mov
xchg
pusha
cli
sub
mov
adc
js
out
jmp
push
fnstcw
in
dec
jg
mov
jmp
or
aaa
mov
mull
fsub
cli
inc
adcb
mov
popa
push
fsubrl
add
ret
into
xor
pop
das
andl
loop
xchg
adc
clc
mov
fldt
mov
loopne
fadds
mov
jns
pop
push
aas
mov
test
adc
xor
fs
cs
out
xchg
sub
lock
inc
adc
ljmp
or
aad
std
push
cmpsb
popf
hlt
outsl
sahf
jmp
pop
jmp
std
mov
out
aam
xchg
sbb
and
int
mov
push
test
out
add
adc
push
mov
mov
dec
mov
jns
and
fwait
lock
cmp
xor
push
pop
lods
cld
xor
cmp
mov
add
ja
mov
fidivs
cmp
xlat
add
repz
and
dec
notl
pop
mov
nop
xchg
or
push
adc
andl
push
or
out
out
psubusb
mull
pop
out
mov
jo
jne
sti
xchg
mov
mov
or
mov
xor
jb
les
mov
popa
jae
jb
dec
adc
adc
and
push
pop
add
adc
repz
std
inc
lods
inc
sbbl
in
cld
dec
cltd
fildl
jecxz
push
into
rcrb
lock
loope
inc
or
mov
test
rclb
sub
mov
loop
push
repz
cld
popf
inc
pop
lret
jbe
jno
insb
repnz
sarl
aam
cmp
cmpsb
mov
jmp
pop
adc
pop
jge
pop
outsl
xor
dec
mov
and
in
test
pop
divb
icebp
fstl
aad
mov
ds
cmp
movsl
add
dec
incl
mov
cmp
addb
icebp
push
loopne
lock
out
jge
dec
and
loop
jl
cmp
push
enter
ds
clc
sub
nop
mov
inc
or
movsl
jae
xor
rcr
sbb
daa
jge
stos
std
or
loopne
mov
sbb
push
and
test
test
movl
mul
pop
push
xor
into
sbb
or
pop
call
mov
add
fmuls
scas
adc
add
rorl
push
dec
call
or
pop
jno
aam
lock
pop
aam
mov
xchg
aad
pop
ror
cmpb
mov
xchg
div
fbld
mov
nop
or
sub
bound
dec
jbe
fs
mov
pusha
adc
cmp
xchg
leave
jge
icebp
fldt
aam
out
xor
call
aam
push
pop
out
pop
xor
push
mov
pop
fstpt
sti
daa
sarl
push
das
lock
inc
mov
pop
outsl
and
xchg
fcmovnbe
or
push
ds
pop
iret
sti
int
xchg
es
dec
ds
sub
adc
mov
adc
movhlps
fs
push
cwtl
add
shl
pop
push
lods
mov
jae
mov
enter
jge
daa
sbb
ret
mov
sbb
ds
insl
mov
call
xchg
sbb
or
in
jnp
mov
or
idivb
dec
fldenv
cmp
rcll
ja
cld
movsl
mov
jmp
test
leave
push
mov
shl
xor
cmpsb
cld
movb
jbe
sbb
or
mov
dec
xlat
ret
lret
sahf
sub
sahf
rorl
jle
xor
sub
jae
sub
repz
inc
and
push
xor
jmp
int3
dec
or
dec
loopne
les
push
fucomi
mov
mov
fsubrs
ljmp
mulb
into
xchg
mov
sub
das
rcrb
fs
mov
je
cltd
cmp
mov
icebp
ljmp
loop
adc
pop
cld
test
or
xor
clc
hlt
mov
mov
ret
fs
shl
dec
or
ds
add
pop
sbb
pop
lods
pop
mov
shl
out
cltd
lahf
push
lahf
or
jl
scas
push
lods
rclb
or
adc
int
insl
loope
inc
inc
hlt
negl
in
das
fnstenv
fmulp
imul
cmp
mov
inc
or
inc
mov
pop
pop
out
adc
pop
push
mov
aaa
mov
adc
es
je
popf
ja
pop
int
push
cmp
inc
xor
hlt
push
inc
cmp
outsb
lock
aas
pop
lret
adc
rcrb
dec
enter
roll
lea
adc
sub
je
fdivrp
inc
in
adc
test
push
outsl
out
outsl
pop
xorl
les
fisubl
enter
arpl
lock
cmp
add
mov
pop
sbb
fistpl
pop
inc
or
das
sub
jl
int3
ljmp
and
rcrl
jmp
pop
loop
jle
inc
xchg
push
sbb
dec
cli
in
loop
loop
pop
popa
xor
inc
pcmpeqw
xor
add
fnstenv
sti
xchg
leave
js
xchg
test
mov
jp
or
ds
ret
aas
adc
fwait
push
into
dec
inc
stos
inc
fidivs
mov
inc
lock
insb
fs
xlat
std
pushf
fnstenv
inc
push
aad
mov
imul
out
dec
into
cmp
es
adc
push
add
mov
and
decb
rol
ja
inc
or
xor
xchg
inc
dec
sub
fildl
aam
repz
push
outsl
out
pusha
pop
sbb
pop
add
add
idivl
mov
sbb
push
sbb
sub
mov
pushf
cld
loope
dec
cs
ds
mul
imulb
loop
popa
stos
aad
arpl
hlt
aam
or
jno
adc
fcompl
lret
movsb
jp
pop
bound
incl
and
jl
cs
cmp
icebp
lock
loopne
cli
icebp
dec
jno
dec
push
xchg
test
dec
lahf
daa
add
inc
pusha
ja
test
sbb
sbb
loope
push
movsb
cmc
sbb
xor
popw
fcmovnb
jmp
add
shl
ret
mov
xor
fistpll
call
daa
fadd
inc
add
add
imul
mov
adcl
and
dec
dec
jae
fwait
inc
lahf
xchg
jg
adc
addb
in
cli
inc
inc
das
mov
sti
mov
popa
xlat
leave
pusha
mov
cmp
xlat
mov
enter
mov
pop
xchg
loopne
adc
cmp
std
je
fcmovnbe
iret
in
data16
jmp
shr
ret
jecxz
push
inc
mov
adc
inc
fcompl
inc
rclb
mov
jnp
test
add
jp
std
ret
andl
sub
xchg
jg
jb
in
out
sbb
pop
dec
mov
in
sbb
test
cmpsl
popa
xor
jnp
mov
cs
and
lahf
push
shlb
std
mov
add
push
and
aam
cld
mov
aas
xor
pushf
es
push
enter
bound
add
les
add
imul
pop
push
jbe
int3
cmp
jbe
outsb
stos
xor
dec
out
xchg
mov
fmul
adc
inc
mov
pop
loope
push
mov
sarb
fdivrs
adc
xor
scas
xor
add
in
rcll
adc
stos
xor
or
fwait
outsl
adc
mov
das
mov
popf
push
idiv
sub
jmp
xlat
xlat
cli
adc
iret
ret
dec
cmp
sub
add
bound
push
adc
movsb
dec
loopne
push
enter
aas
push
cmp
lret
lahf
mov
les
inc
xor
shll
pop
lret
jmp
cmp
and
xchg
popa
mov
xor
mov
cmp
mov
mov
or
roll
jne
push
rclb
jnp
cwtl
cld
push
xchg
sub
mov
dec
testl
rclb
clc
pop
cmp
push
or
lea
jbe
jge
mov
subl
das
cli
adc
dec
out
dec
and
sbb
lcall
ret
jecxz
push
mov
hlt
pop
mov
sub
and
sbb
int3
in
pop
jmp
jno
movsb
sbb
or
jecxz
int3
pusha
lds
and
fcmovnbe
imul
jmp
dec
push
into
pop
hlt
jp
push
sbb
pop
cmp
ljmp
inc
jno
aam
push
mov
jae
addl
add
movsl
lahf
add
add
std
xchg
lock
repz
iret
sbb
fsub
adc
add
mov
sbb
xchg
call
test
push
push
mov
xchg
dec
jge
fdivl
popf
sti
and
enter
pop
in
scas
bswap
mov
stc
in
das
aam
mov
insb
push
add
shl
out
add
mov
addr16
mul
mov
hlt
shlb
dec
dec
js
nop
xor
js
in
sbb
shll
cld
adc
xor
call
mov
mov
mov
stc
add
inc
mov
neg
jp
mov
cmpsl
sti
cwtl
xor
icebp
out
cmp
test
xchg
jae
adc
sbb
inc
je
cmp
inc
pop
cmp
pushl
cmpsb
inc
ficompl
or
inc
loope
pop
aaa
lret
sub
add
das
test
fwait
int
push
in
mov
das
mov
cmp
fxch
ret
xor
dec
leave
sbb
xchg
and
imul
push
or
push
aas
popf
jecxz
arpl
xor
aad
push
loop
mov
imul
jecxz
pusha
inc
or
gs
js
dec
inc
in
in
mov
test
in
jmp
faddl
cmpsl
jl
mov
jns
mull
out
xchg
sahf
cmp
xor
sbb
adc
jecxz
xchg
mov
out
clc
mov
scas
ret
rol
add
jle
pusha
ja
ss
stc
iret
xor
cli
aaa
mov
daa
cmp
add
outsl
sub
and
push
repnz
pop
mov
in
test
xchg
lcall
jne
sahf
ret
inc
mov
pop
xchg
pop
cmpsl
sub
inc
mov
subl
lcall
dec
cltd
movsl
or
mov
stos
sti
aaa
sub
adc
test
xchg
xlat
xchg
test
in
ficoms
fbstp
mov
pop
sub
sti
imul
sub
ret
jne
add
out
mov
adc
imul
mov
push
mov
iret
dec
sti
shrb
repnz
mov
incl
dec
push
pop
inc
cs
xorb
jp
repnz
mov
orb
js
fsubl
aaa
negb
rcrl
xchg
and
iret
or
ret
in
loop
imul
jno
cmc
int3
pop
add
fisubrl
or
lods
outsl
fisttpl
hlt
roll
mov
imul
push
dec
adc
scas
sarb
pusha
jo
mov
daa
fnsave
add
add
jno
xchg
js
fisubrs
leave
xchg
xchg
xchg
jmp
imull
fbstp
mov
mov
fstpt
aaa
pop
adc
jns
leave
xlat
scas
fistps
fistl
xor
xchg
push
lcall
shll
sahf
lea
stos
arpl
push
ds
ljmp
scas
shlb
loop
add
addr16
rcll
ds
test
shlb
cmc
adc
icebp
xor
adc
fwait
sbb
jo
enter
pop
inc
xor
push
cmpsb
repnz
adc
repz
outsl
pop
lret
in
jnp
imul
mov
filds
inc
add
stos
fdivrs
xchg
in
xlat
fcmovnbe
in
sarb
lea
int3
xchg
mov
aad
cs
arpl
cmp
out
add
iret
aam
add
mov
and
jle
lock
imul
cs
fxtract
insl
adc
add
push
push
jp
ja
mov
or
cmc
pop
adc
aaa
idivl
in
loopne
sbb
out
lds
pop
int3
sbb
aam
aam
jg
dec
iret
jae
mov
xor
mov
int3
rorl
adc
cmc
push
jbe
fdivrs
xor
sti
scas
xor
mov
xor
cmpsb
jmp
xorl
xor
pop
adc
xchg
imul
hlt
pop
int3
mov
test
cmp
inc
push
push
gs
dec
mov
or
and
inc
fs
minps
xlat
cmpb
in
mov
ds
inc
mov
ljmp
cmp
insl
inc
push
adc
std
lods
out
jge
int3
lret
in
mov
sbb
subps
and
sub
fadds
aas
in
ss
out
mov
mov
cs
ja
arpl
push
adc
fwait
repz
inc
fldpi
adc
mov
mov
mov
call
jmp
xchg
or
push
adc
rorl
shll
pop
sub
lods
loopne
inc
adc
filds
mov
push
stos
inc
ret
decb
jo
jne
sub
mov
js
mov
push
ret
je
pop
ss
push
jge,pt
push
ljmp
sub
in
and
jle
clc
fdivr
cmp
ds
pop
sub
jmp
xchg
inc
adc
rcl
loopne
loope
les
pop
lock
lea
jno
inc
sbb
mov
or
mov
sub
xor
incl
or
scas
pop
adc
repnz
das
mov
xor
fnstcw
sbb
xchg
icebp
push
cmpsb
in
mov
loopne
les
out
xchg
mov
fcom
je
je
xchg
or
in
ret
jecxz
dec
mov
mov
rcll
ds
stc
das
call
fisttpl
adc
stc
xchg
xchg
clc
in
out
hlt
loopne
sub
adc
das
and
aam
sbb
inc
loopne
lcall
jb
icebp
sti
pop
jbe
js,pn
sbb
out
sbb
xor
ds
adc
ret
cmp
xor
out
push
inc
adc
mov
jecxz
rcll
mov
in
test
add
divb
inc
xchg
lahf
cmc
sbb
icebp
ja
adc
xor
cld
les
int3
aas
adc
ss
sti
ss
idivl
mov
adc
jnp
scas
gs
dec
pop
xor
repz
jge
cwtl
sub
adc
sub
jp
xor
push
inc
aaa
xchg
push
xchg
cmp
push
inc
pop
cmp
and
mov
mov
pop
add
pop
adc
and
scas
inc
and
sub
adc
sub
cwtl
or
hlt
inc
or
jp
adc
xor
xor
and
cmp
sbb
cmp
sbb
jecxz
cld
mov
mov
pop
out
add
jmp
pop
pop
and
and
or
jmp
aam
in
iret
inc
out
and
jmp
jns
idiv
xchg
xor
cli
aad
dec
das
pusha
pop
adc
jae
push
inc
add
inc
pop
lods
enter
dec
lret
fmuls
mov
aam
hlt
hlt
dec
ss
les
pop
cmp
ficompl
adc
mov
pop
add
iret
lret
push
inc
fnstenv
sbb
adc
in
sbb
fmuls
ljmp
aam
xor
daa
out
repz
pop
stos
aas
push
icebp
test
std
ret
ds
rcr
mov
lds
call
adc
lret
das
fstl
jecxz
pop
popa
dec
addr16
adc
and
xchg
lahf
and
addr16
je
and
mov
in
fstpt
je
sbb
test
inc
fs
jmp
icebp
cwtl
lods
out
lea
jge
mov
stos
push
mov
mov
cld
push
stos
cs
adc
je
addr16
pop
mov
arpl
icebp
rcll
out
pop
ret
pop
test
test
push
lods
adc
mov
insl
lock
mov
lock
adc
or
mov
hlt
test
mov
sub
ljmp
lret
push
mov
test
xchg
fadds
fldcw
xchg
stos
cli
inc
mov
rclb
mov
ja
icebp
push
lcall
aam
xor
push
mov
bound
add
call
sbb
push
cwtl
pop
mov
out
pushf
mov
lods
es
adc
cld
insb
xor
mov
stc
mov
xchg
aad
push
sarl
mov
jne
or
dec
adc
fs
aaa
jne
inc
adc
cmpsb
inc
nop
rorl
icebp
fbstp
and
lods
out
mov
and
subl
into
push
hlt
nop
rcr
scas
and
adc
lcall
out
addr16
sub
cmp
inc
fwait
int3
out
fidivrs
adc
sub
jnp
addr16
and
aas
mov
push
fisubrs
mov
jecxz
mov
push
test
mov
push
std
div
cli
sub
push
mov
pop
outsb
mov
jnp
cmc
es
xchg
jno
out
jmp
and
sub
daa
xchg
stc
or
xor
sub
xchg
mov
lret
aaa
dec
xlat
mov
and
push
xor
adcb
pop
movsb
lcall
push
test
mov
sub
add
xchg
jnp
aas
cli
shl
std
lret
xor
filds
ss
add
aaa
xchg
out
in
mov
inc
iret
mov
push
xchg
imul
mov
daa
sub
mov
jecxz
and
in
sub
sub
add
jge
cmpsb
testb
push
push
in
in
pop
xor
push
cmp
enter
pop
mov
mov
mov
mov
mov
scas
add
nop
js
aad
or
insl
dec
pusha
jg
aam
xlat
dec
divb
call
inc
test
pop
aas
clc
dec
aaa
stos
mov
out
add
pop
ficoms
inc
daa
subb
mov
pushf
xchg
sub
ss
add
pusha
cs
cmp
arpl
testl
sbb
das
jmp
imul
pop
roll
lea
jb
aad
sub
xor
mov
sbb
jnp
fildl
push
xchg
fdivrs
adc
sbb
xchg
xchg
fistpl
or
in
sub
in
adc
jb
movl
dec
andl
cmp
loope
inc
push
cmp
add
mov
adc
fs
fsub
cmp
lcall
xor
clc
aad
add
push
out
shlb
push
fstp
adc
aad
or
sub
cmc
xchg
sbb
mov
and
loopne
xlat
into
and
mov
aas
fmull
adc
xor
out
push
sub
inc
pop
jge
leave
fcmovbe
xor
fucomi
sub
sub
adc
cmp
loop
sub
sub
jl
ret
mov
sbb
scas
mov
inc
fiaddl
cmp
out
stos
aad
mov
mov
fwait
dec
sar
pop
ret
fidivrl
cltd
inc
inc
push
push
imul
imul
mov
hlt
test
and
cld
jp
pop
push
aad
or
les
lahf
pushf
sbb
or
or
push
xchg
jns
icebp
cwtl
pusha
add
fwait
push
cld
mov
imul
lahf
add
repz
sub
out
xor
sahf
imul
hlt
test
aam
stc
mov
push
pop
cmp
add
jmp
hlt
aad
xor
and
xor
test
mov
test
push
push
xor
aas
xchg
push
loope
mov
pop
push
dec
inc
mov
fwait
xor
add
mov
aad
test
xor
daa
imul
and
divb
daa
rorl
iret
outsl
jp
push
add
ljmp
and
fsubr
js
push
fcomps
stc
test
sarl
push
movsb
out
fucomp
jmp
xchg
popf
push
jg
lahf
repnz
jmp
aam
out
or
mov
or
xchg
aas
push
adc
scas
add
in
add
iret
insb
out
jae
int3
aad
das
inc
adc
repz
frstor
les
xchg
stos
and
mov
iret
mov
repz
ja
testl
xchg
outsl
out
xchg
pop
sti
cmp
addr16
pop
pop
ret
push
push
inc
and
adc
pop
push
cmp
mov
and
dec
and
sbb
cmpps
pusha
sbb
mov
out
sahf
out
mov
inc
push
aad
repnz
dec
in
into
and
add
sub
adc
and
int
push
pop
push
push
cld
iret
mov
mov
sbb
sub
shr
aaa
imul
aam
or
and
cmp
xor
out
fnstcw
xor
xchg
jbe
jg
sub
jl
xlat
repnz
xchg
inc
test
repnz
rorb
jno
rcrl
dec
jge
setge
jle
lret
aam
scas
xor
lahf
sub
cmp
mov
lret
cmp
mov
sbb
es
rcr
nop
pusha
pop
cld
ret
and
xchg
xlat
and
mov
cmpsl
jp
mov
mov
aam
scas
or
and
lcall
pushf
test
pand
fwait
int
sbb
jne
mov
ljmp
mov
inc
adc
xchg
dec
lods
xor
jecxz
mov
fstps
cmp
int3
je
cld
out
pop
cmc
in
lock
mov
push
cmp
ds
mov
cltd
setne
cld
hlt
aas
and
mov
iret
inc
xor
fs
mov
movsb
imul
sbb
pop
mov
std
ret
sub
mov
sbb
adc
push
push
out
xchg
or
and
push
xorb
pusha
xor
inc
push
mov
loop
pusha
cld
stos
xlat
jmp
pop
and
call
adc
int3
and
pop
clc
daa
inc
xor
pushf
sbb
jg
dec
iret
adc
inc
or
int
scas
add
dec
pop
aam
dec
rcr
sub
ja
testl
mov
ficompl
shl
rcr
stos
leave
adc
mov
cmp
push
inc
push
sti
push
bound
or
adc
ljmp
sbb
sub
xor
xor
aad
cmp
pusha
xor
into
fistps
xor
out
push
test
xchg
inc
shrb
push
hlt
adc
arpl
es
cmpxchg
pop
dec
push
xlat
xchg
or
cmc
in
xor
adc
or
cmp
pusha
fildl
pop
add
xchg
aam
ja
div
xlat
jo
rcrl
inc
xchg
daa
sbb
das
stos
dec
xchg
sub
cmovno
mov
sbb
cmp
outsl
je
shrb
aas
rcr
sysenter
cld
or
das
xchg
sbb
das
push
push
or
dec
aas
sarb
mov
dec
js
add
shlb
stc
pop
inc
fmuls
add
sbb
sti
pop
and
adc
dec
sub
mov
or
out
mov
and
in
pop
call
cmp
shrl
in
mov
aas
cmp
aas
loope
or
push
jl
sub
mov
pop
out
inc
dec
jmp
movsb
add
arpl
push
pop
mov
add
addr16
test
sub
pop
mov
dec
mov
jl
repz
cmpsb
js
mov
shrb
mov
push
push
in
jne
xlat
or
sbb
pop
pop
add
xchg
and
push
and
ret
bound
mov
nop
jmp
or
addb
and
je
mov
xor
hlt
sbb
test
out
sub
push
sbb
push
fimull
rcrl
jmp
out
faddl
pusha
cld
add
mov
pop
mov
andl
add
clc
add
jmp
jecxz
fisubl
aam
lret
icebp
sub
enter
rcrl
iret
dec
stos
divl
dec
pushl
push
pop
mov
sbb
lcall
inc
pop
xchg
mov
clc
in
or
call
dec
aas
incl
jne
adc
aad
into
fsubl
loopne
adc
cmp
inc
inc
test
stos
push
mov
xchg
daa
std
jns
in
insl
in
cltd
aam
mov
ret
jb
sub
std
or
scas
ret
push
fisubrl
outsl
mov
dec
inc
ss
xchg
int
adc
mov
ja
das
jle
mov
outsl
sub
outsl
cmp
jnp
sub
inc
push
sti
or
out
inc
popa
int
pusha
adc
inc
xor
sbb
inc
icebp
imul
cmp
movsb
popa
add
dec
sub
imul
sub
incb
test
daa
jecxz
xchg
cmc
mov
shrb
sbb
loopne,pn
xor
test
inc
push
negl
das
and
push
out
mov
out
arpl
inc
aad
fcmovne
mov
popf
or
mov
gs
mov
int
mov
xor
mov
cli
out
xchg
aas
and
xor
adc
push
pop
pop
push
popa
aam
xor
adc
inc
or
pusha
or
lret
mov
test
shl
dec
pop
jmp
repnz
pop
or
jae
sbb
mov
mov
push
test
jae
hlt
or
xchg
hlt
loope
adc
adc
pop
loope,pt
imull
cld
stos
sub
sti
push
adc
andl
xchg
mov
insl
jae
cld
jno
es
mov
test
mov
dec
ret
push
pusha
iret
xor
into
jmp
adc
mov
rcl
sub
icebp
mov
or
es
mov
push
xor
sarb
les
lret
xor
sub
jecxz
cltd
stos
jmp
push
inc
cmp
and
adc
xchg
cmp
ret
or
cmc
sbb
jmp
add
ret
adc
and
lods
cmp
pop
push
adc
fistpl
ja
and
es
hlt
push
stc
cmp
xchg
and
xor
cmp
mov
out
hlt
lret
adc
xor
adc
or
sub
and
sbb
xchg
add
lds
jmp
hlt
push
sub
in
daa
sbb
sbb
add
jg
inc
enter
mov
jle
decb
xor
jecxz
cmc
xor
inc
aam
xchg
pop
leave
es
ss
jp
jl
in
pop
pop
push
xor
or
fcoml
idivl
shlb
push
sbb
lahf
adc
adc
sub
fstpl
fistpll
jl
cwtl
loop
jle
das
shr
fwait
adc
repnz
adc
lcall
dec
cmpsb
cwtl
in
mov
loopne
or
ds
cmp
mov
push
mov
jmp
lods
add
hlt
out
xchg
fdivr
or
aas
or
mov
push
mov
mov
xchg
cmp
push
sbb
pop
jecxz
into
mov
sbb
pop
aas
and
inc
adc
push
lods
cltd
imul
daa
aaa
outsl
notl
shlb
aas
lods
and
pusha
jecxz
mov
fisttpl
sbb
pushf
sbb
movsb
pop
jno
loopne
add
mov
arpl
mov
and
shlb
aam
fwait
pop
adc
add
or
pop
outsb
push
cld
cs
arpl
inc
sbb
sub
and
aaa
pop
jmp
call
cmc
clc
sbb
in
sti
cmp
adc
das
fists
adc
std
mov
out
cmp
adc
scas
out
fdivs
std
push
in
cmp
xor
or
or
loop
push
cld
sbb
loopne
call
scas
xchg
aaa
lods
filds
or
push
jno
sbb
xor
das
sub
fcompl
push
add
adc
aam
jecxz
adc
and
aam
iret
lret
out
das
xlat
jbe
lock
pop
loop
jo
and
insb
mov
repnz
add
fsubl
add
add
adc
or
loope
mov
imul
cmpsb
jne
adc
movb
rcrl
push
out
and
xchg
push
add
cmpsb
cwtl
fwait
fwait
insl
das
mov
adc
push
push
stc
mov
add
div
shl
ja
loop
sbb
or
das
rcrl
or
or
scas
xchg
fwait
cmc
add
adc
out
ficompl
shl
push
dec
mov
inc
clc
js
in
popf
jl
in
sahf
aam
insl
cmp
add
pushf
adc
mov
repz
inc
add
mov
push
pop
add
ret
mov
cmp
xor
shr
mov
lds
movsl
loop
fdivrl
pop
dec
jmp
and
fisubl
test
fptan
lret
jg
mov
int3
filds
in
sub
mov
add
sub
pushf
icebp
cmp
testl
call
bound
ljmp
loope
testb
les
out
fwait
or
xchg
sbb
dec
pusha
popa
adc
cli
test
test
jbe
in
jge
mov
jne
cld
pop
or
push
push
jo
sub
fistps
cmp
lds
lahf
push
push
xor
push
and
inc
scas
mov
enter
movsl
mov
shrb
lret
rcll
cmp
insl
or
sbb
icebp
mov
mov
push
and
or
lock
dec
popa
movb
sti
fcmovbe
add
fwait
les
outsb
dec
cmpsl
fwait
push
clc
inc
mov
sbb
loop
cmp
cmp
adc
orb
xchg
loopne
rcll
mov
jo
dec
ret
ja
cli
sub
ds
add
nop
addl
xchg
bnd
inc
loop
in
int3
pop
scas
roll
outsl
rorb
mov
cwtl
in
mov
pop
loopne
je
cs
mov
mov
aad
xor
fwait
push
cmpsb
test
ret
sahf
aaa
into
idivb
push
xchg
push
lea
mov
imul
stos
movq
jmp
and
fdivrs
or
lds
movb
repz
pop
mov
add
hlt
xor
out
inc
enter
push
int3
cltd
fistps
jb
out
loope
insb
or
dec
and
test
sub
sub
movsb
push
or
pop
sbb
push
adc
insl
push
arpl
mov
dec
mov
mov
rcl
fdivrl
jl
hlt
sar
fstpt
fsubr
adc
mov
call
mov
cmc
jge
repz
negb
repnz
mov
or
sbb
and
iret
loopne
add
push
clc
out
or
stc
sbb
adcl
push
pop
test
fucomip
enter
sti
imul
pop
jl
jne
iret
pop
popa
ret
sti
push
out
mov
inc
adc
leave
cmp
inc
fisttpl
fistl
and
pusha
popa
lcall
add
fprem
cli
cs
fisttpl
aaa
arpl
inc
sar
imul
mov
or
out
sbb
xlat
das
lock
adc
outsb
sti
inc
pop
std
outsl
dec
int3
adc
jmp
mov
ret
cwtl
cmp
mov
pand
mov
dec
cli
add
mov
fucomip
mov
jg
aas
mov
mov
aas
or
mov
xor
pop
jecxz
aad
xor
das
mov
popl
sbb
or
sti
xor
pop
and
xlat
clc
push
subb
add
push
cmp
dec
pop
js
xchg
pop
movb
sbb
loope
jecxz
iret
push
dec
xor
push
mov
test
insl
xor
aam
push
push
cmp
fstpl
iret
and
call
pop
test
and
adc
pop
mov
xchg
dec
in
rorl
in
icebp
loope
xchg
std
jbe
std
dec
mov
jne
cld
pop
push
xchg
jl
sarb
sub
arpl
imul
lret
jnp
cwtl
mov
jb
loopne
push
adc
push
xor
test
push
loope
pop
lcall
popa
pushf
sbb
or
or
dec
inc
mov
fimuls
cmc
mov
aaa
cmpsl
cwtl
add
add
sub
push
xchg
jbe
jge
xor
aas
push
out
jnp
fcmovnbe
cmp
xor
in
sbbl
fsub
pushf
fadd
push
pop
ljmp
stos
mov
icebp
pop
shll
push
ljmp
pop
rol
sbb
mov
adc
or
xchg
loopne
imull
pop
ficoms
cld
stos
xor
fidivl
sub
xlat
pusha
mov
pop
in
add
jmp
cmp
mov
mov
add
mov
stc
fisttpll
nop
rcrb
adc
cltd
fldcw
std
movsb
aam
out
mov
jl
movsl
call
pop
movsb
sub
mov
aad
in
xchg
pop
push
fmull
imul
pop
mov
mov
or
pop
jl
xor
stos
pop
loopne
loop
pop
sbb
push
xchg
fwait
add
shll
mov
lock
add
or
mov
iret
push
fidivl
pop
mov
mov
cmpsb
scas
fsubl
movsb
inc
inc
push
roll
enter
push
mov
mov
add
hlt
mov
and
mov
lahf
add
int3
pop
mov
aam
ret
adc
fldt
in
fs
jmp
mov
mov
cltd
cs
push
ret
or
imul
push
adc
xor
aas
or
clc
das
xor
cmp
inc
fisubrs
xchg
insb
std
scas
aam
leave
stc
out
clc
lea
loopne
and
int
adc
xchg
or
shll
sti
ljmp
lods
loope
or
jg
aas
pop
add
leave
jns
into
push
sub
clc
and
xlat
and
fldt
push
mov
bound
cld
sub
in
cld
push
arpl
xor
movsl
or
push
mov
lret
dec
and
ret
xchg
shlb
xlat
jle
inc
cmpsb
add
test
mov
adc
fs
shll
inc
fisubrl
and
push
fucom
mov
sbb
outsl
imul
popa
rolb
lret
or
mov
jmp
pop
shl
imul
inc
ds
xlat
push
mov
out
clc
mov
xor
loop
dec
mov
push
rcl
sub
imul
mov
mov
stos
adc
xchg
dec
add
dec
sbb
lahf
cmpb
insl
push
mov
push
je
fistl
mov
cmp
mov
aaa
mov
push
fsubrl
rorb
sbb
jne
rolb
push
inc
mov
ret
jp
lcall
sub
lahf
cmp
in
pop
xor
adc
imul
aam
dec
lods
sar
cmp
pop
and
es
fst
xor
pusha
xor
pusha
pop
je
and
aaa
imul
fisttpl
stc
ljmp
fwait
out
aad
negb
fdiv
les
gs
dec
inc
sbb
sbbb
xor
sti
push
cwtl
pusha
pusha
cmc
pop
ret
sti
and
fcoms
pop
orl
mov
fmul
lods
in
fcomi
adc
or
int
pop
lcall
or
ror
in
push
pmuludq
arpl
aam
cmp
test
mov
in
push
xchg
adc
jl
loopne
pop
rclb
mov
lea
out
cmp
hlt
sbb
add
sub
add
jbe
xchg
bound
cs
inc
dec
add
repz
or
aaa
mov
and
int
xlat
sub
xor
aam
mov
pop
je
adc
inc
push
stc
rcr
in
leave
ja
pop
sbb
push
xchg
add
insb
lock
jle
xor
pop
adc
js
mov
mov
loope
lea
mov
aaa
in
pop
adc
add
data16
loopne
mov
rolb
jo
rorb
push
and
aam
icebp
call
hlt
xchg
mov
xorl
imul
pushf
sub
std
aam
jo
fcompl
ds
or
cmp
inc
fwait
cltd
insb
stos
sub
fidivrl
or
fbld
icebp
push
fwait
bnd
fsincos
test
popf
jae
hlt
icebp
das
ds
lret
pop
arpl
jg
pop
add
bound
dec
cmc
test
push
jno
lea
negb
es
ret
popa
hlt
test
xchg
inc
or
pop
sub
or
or
daa
out
dec
push
in
pop
fs
insl
fwait
mov
push
jecxz
repz
sub
mov
lods
cmp
jecxz
cmp
cmp
mov
sub
mov
ds
out
out
mov
fcom
rcll
fxtract
cmp
btc
cmp
add
add
cmpsl
push
fildl
mov
adc
sti
ret
hlt
pop
movl
jg
loope
add
fcmovnbe
mov
sub
add
and
fsubrs
adc
mov
xor
xchg
in
fisubrl
mov
icebp
mov
jno
lret
gs
add
mov
cmp
or
mov
cmpsb
fimuls
xchg
int
pop
loopne
call
push
out
mov
sahf
sub
push
jno
mov
jns
lret
jmp
and
adc
pop
mov
out
es
js
rorl
pop
test
cmc
fcmovu
cwtl
mov
and
pop
pop
xor
imul
inc
loop
out
ret
ret
inc
sbb
sbb
loope
sti
mov
pop
sbb
cwtl
lcall
repnz
push
pop
add
imul
sahf
aad
pop
call
or
mov
fidivl
mov
xchg
push
jmp
add
jbe
sub
das
clc
les
mov
lock
add
lcall
push
iret
cs
fimuls
or
out
xor
repnz
pop
inc
mov
pushf
pop
shlb
hlt
add
add
loop
leave
bound
adc
mov
fldl
loope,pn
fucomp
fldl
jg
add
shll
in
push
sub
fists
dec
decb
xchg
fwait
push
xor
testb
icebp
fistpl
cmp
mov
inc
and
movsl
enter
cmp
int
ja
aad
push
or
fidivrs
int3
push
cltd
leave
sub
sbb
lret
lds
fsubr
daa
xchg
loop
or
mov
pusha
adc
mov
into
lds
jae
iret
jb
or
rorl
lret
cwtl
mov
test
clc
mov
push
xchg
and
std
dec
push
or
pop
adc
jge
addb
sar
fidivl
lods
insb
notb
call
mov
stc
jmp
das
shl
push
adc
sti
sbb
push
cmp
cli
sub
mov
loop
mov
ss
lret
adc
jb
in
jle
aas
enter
adc
sub
and
pop
test
jecxz
lock
xchg
ror
loop
pusha
sbb
fcoml
jbe
and
lahf
lds
nop
or
outsl
add
jmp
pusha
mov
clc
mov
fistpl
insl
xor
sbb
or
bndstx
clc
into
fcmovb
sbb
in
mov
loope
call
cld
filds
pop
push
dec
int3
and
push
movsb
xchg
je
pop
stc
adc
add
outsb
je
cmp
pusha
push
xor
pop
bound
jns
lea
jns
jns
cmp
popf
mov
idiv
jp
negl
leave
test
lea
cmpb
into
test
dec
add
cmp
or
push
pop
or
aam
mov
in
stos
ret
sbb
loope
xchg
or
mov
inc
dec
xor
loope
sub
loop
fdivrl
addr16
cmp
je
stos
and
dec
icebp
into
aam
add
int3
lds
cmpb
imul
fistps
xchg
inc
adc
in
mov
mov
xchg
imul
dec
add
inc
dec
jae
stos
mov
hlt
cld
js
sbb
mov
push
inc
cli
stc
lock
imul
xchg
mov
mov
dec
mov
dec
mov
push
mov
mov
push
ret
les
lret
xchg
push
or
mov
dec
mov
sbb
xchg
jno
scas
into
mov
leave
pop
cld
aas
jmp
xor
aad
loop
jmp
jno
adc
inc
dec
xor
pop
stos
push
add
ret
jbe
pop
sbb
icebp
das
pop
hlt
ss
or
cmp
add
movsl
mov
mov
inc
cmp
ret
je
mov
jge
adc
cli
imul
sub
dec
xlat
sbb
xor
or
add
loope
or
add
movl
in
push
jge
jle
aas
jb
adc
add
xor
push
flds
aaa
inc
das
cmp
adc
and
push
cmp
adc
ret
or
sub
sbb
enter
mov
out
rol
xor
lcall
scas
lock
in
outsb
das
mov
fildll
ss
pop
inc
adc
insb
sahf
test
ret
hlt
adcl
mov
pop
fadd
out
push
adc
pop
sbb
cmp
aas
xlat
fucomi
xor
fmull
inc
push
data16
cltd
insb
mov
sbb
in
jp
mov
dec
stc
xor
aaa
mov
call
hlt
sarb
mov
outsl
das
clc
dec
and
sti
cmpsl
mov
mov
std
mov
adc
sbb
in
mov
fs
js
pop
jnp
add
mov
je
and
mov
or
xchg
xchg
push
out
js
rolb
mov
dec
into
xor
add
js
jge
push
xchg
aad
mov
sti
mulb
xchg
mov
sbb
add
scas
mov
jb
adc
xor
add
or
loopne
imul
push
jno
dec
gs
std
mov
jmp
mov
jbe
cmp
fmuls
jecxz
add
jns
jecxz
dec
mov
cs
stos
dec
scas
iret
jecxz
rcrl
out
out
out
xchg
sub
push
in
inc
dec
leave
jmp
out
ficompl
inc
ficoml
in
out
jle
daa
fstps
dec
adc
pushf
jp
jmp
mov
aaa
add
pop
push
mov
aad
xchg
cld
imul
fldt
ret
in
aaa
jg
cmc
pop
enter
xor
imul
in
in
pop
cwtl
jl
pop
mov
adc
lock
mull
push
mov
arpl
jp
jb
fstp
or
fstl
ret
scas
pop
mov
jmp
and
rcrl
xchg
mov
jne
xchg
xchg
mov
push
xchg
sub
aam
fsubrl
out
push
inc
iret
adc
addb
call
cmp
mov
ret
test
hlt
or
xchg
gs
xchg
clc
mov
mov
lock
mov
push
mov
hlt
mov
xchg
push
out
mov
cmp
or
jae
iret
mov
sarl
pusha
mov
sar
enter
sbb
ficomps
adc
ljmp
jno
cmp
mov
cmp
mov
lds
sti
mov
xor
mov
sbb
lea
sbb
cmc
dec
idiv
js
dec
mov
lret
rcll
loope
int3
jecxz
mov
stos
adc
into
stos
or
or
and
mov
pop
mov
and
jno
in
je
lods
loop
mov
mov
leave
sbb
push
popa
lods
xchg
cmp
push
inc
movsl
aad
and
mov
out
mov
mov
pop
int
xor
mov
add
add
lret
mov
fistl
xorl
in
xchg
sub
xor
fildll
sarb
dec
popa
iret
js
cwtl
mov
clc
sub
int
fcomp
jmp
push
ds
inc
mov
or
sbbl
mov
int
adc
sub
cmp
rorl
aas
shrb
ret
fldcw
mov
cmc
inc
push
xor
xlat
and
das
or
rcl
cmp
lds
dec
mov
mov
pusha
imul
mov
es
cmp
sub
scas
xor
push
ds
cmp
and
jle
shrb
mov
lret
mov
and
or
call
imul
dec
cs
lcall
fwait
cmp
mov
addb
popf
xor
out
mov
mov
dec
hlt
sub
sub
imul
inc
rclb
add
adc
dec
jecxz
call
enter
pop
aas
in
cmc
aad
cld
gs
loopne
andl
jp
inc
test
in
rcl
imulb
inc
cli
lret
inc
fidivl
mov
mov
or
xchg
push
fs
shr
mov
dec
jmp
int3
fcmovbe
jno
popa
sti
arpl
xor
fcmovne
aaa
cmp
sbb
mov
in
mov
int
push
cli
fdivrl
xchg
adc
add
ror
nop
jne
jecxz
lds
daa
cltd
rclb
lret
pop
mov
lcall
cmp
inc
in
pop
ficoms
clc
popf
testb
leave
dec
pop
fisttpl
inc
int
ds
test
std
jne
add
xchg
xchg
inc
popa
jl
subps
mov
repz
insl
data16
aam
cmp
pop
loopne
cmp
push
jg
pop
cmc
and
inc
loopne
mov
xchg
scas
mov
xchg
test
or
in
clc
jno
pop
sub
sbb
and
popf
add
cmp
shr
gs
cmpsb
aaa
pop
mov
mov
adc
mov
orl
pusha
scas
fsubrl
daa
jo
jl
inc
cmp
inc
xor
mov
jnp
sti
aam
in
icebp
rcll
out
mov
addb
sbb
xchg
fsts
push
insb
es
aam
or
mov
lcall
ret
cmp
in
jmp
cwtl
jl
and
notl
lret
fsubrs
mov
push
mov
cmp
inc
in
inc
outsl
sub
push
fwait
sbb
fidivs
jmp
out
jp
mov
mov
mov
aas
jns
fisubrs
lret
fsubl
movsl
mov
sbb
jae
jl
repz
mov
ret
mov
jle
lahf
or
jg
imul
popa
aaa
jl
cld
loopne,pt
jmp
cld
xchg
rorl
pop
aam
sbb
daa
dec
imul
xchg
inc
sbb
int3
ret
mov
enter
sub
inc
stos
mov
mov
jl
icebp
popa
fisttpll
pushf
or
dec
cld
mov
pop
gs
pop
les
mov
jmp
cmp
icebp
fsubrs
mov
jo
loop
pushl
loopne
movsl
call
int
movsl
add
sub
dec
popa
add
test
int
xchg
call
pop
loop
dec
fisubl
and
pop
out
loop
pop
outsl
pop
dec
addr16
or
pavgb
pushl
jl
adc
pop
cmp
mov
sub
lcall
jb
xchg
inc
pop
in
je
popa
sbb
notb
data16
xlat
in
pop
xchg
inc
pop
and
mov
dec
push
jg
fs
lock
pop
fisubl
fcmovu
xor
out
div
repz
fcompl
jns
test
cmp
xorl
daa
shrl
aas
shr
inc
ss
xor
sub
lock
mov
scas
or
dec
cmp
mov
lods
dec
jbe
or
add
push
adc
in
filds
mov
outsl
pop
mov
lahf
or
movsb
sbb
and
int3
jae
sbb
or
sahf
arpl
cltd
dec
mov
dec
ret
movsb
stc
testl
rorb
notb
xchg
push
xlat
or
and
pop
push
inc
or
out
cmc
mov
daa
push
lds
xchg
addr16
cltd
xchg
sbb
or
inc
aam
pushl
xchg
fucomp
adcb
add
dec
sub
add
ja
stc
repz
shll
cs
incl
out
jp
add
mov
jno
daa
jbe
push
inc
pop
sub
fwait
ret
inc
les
subb
stc
je
stc
cs
xor
sysret
cmc
push
lahf
mov
add
je
in
cmpsb
imul
xor
add
scas
pusha
gs
xor
cmpsb
mov
mov
and
and
xchg
jecxz
iret
push
inc
fdiv
cmp
or
test
inc
mov
xchg
in
mov
inc
mov
enter
mov
mov
or
xor
fcoms
cmp
fdivl
jae
cmp
pop
fbstp
cli
pop
and
adc
loop
lcall
mov
mov
adc
inc
push
inc
lods
jmp
mov
add
xchg
xchg
fwait
or
sarl
imul
shlb
mov
mov
in
and
sbb
inc
jg
cmp
shl
cmp
push
cli
aad
push
arpl
inc
xchg
movsl
int
aas
sahf
mov
mov
out
out
aam
and
mov
xchg
das
in
loopne
cmc
dec
xchg
lahf
push
xchg
jb
clc
repnz
push
mov
ret
sub
and
and
out
pop
lahf
clc
mov
aas
push
pop
pop
cld
ja
gs
jl
mov
fistpll
fwait
add
inc
add
pop
das
pop
shll
adc
aaa
aam
out
xchg
lods
jmp
ret
sub
xor
ss
xchg
aaa
adc
sbb
test
mov
and
lods
cmp
cwtl
faddp
fdiv
sti
jne
fbld
mov
push
sti
outsl
push
sub
sbb
outsl
popa
adc
sub
out
cmp
adc
or
xchg
xchg
jns
pop
push
dec
xchg
fistps
jmp
cmp
inc
cmp
sub
pop
xchg
push
shrb
mov
xchg
or
jnp
stos
xor
xlat
test
rcl
jecxz
clc
mov
stos
fildl
cli
lea
cmpb
inc
sub
mov
daa
mov
pop
ror
in
pop
cmpsl
loopne
jle
add
faddp
jmp
lods
mov
mov
incl
lock
push
pusha
test
stos
mov
xadd
nop
outsb
test
push
cld
inc
lcall
sbb
test
add
sbb
inc
jb
subl
in
sbb
pusha
cmpsl
ret
pop
sbb
lods
iret
ja
pop
repnz
xlat
test
les
add
jle
xor
iret
lds
pop
cld
lret
fbstp
ljmp
insb
in
lret
loope
outsl
push
dec
cli
sti
int
pushf
push
scas
add
imul
xor
inc
frstor
sarb
and
mov
movsl
in
pop
nop
and
gs
lods
add
mov
out
add
leave
push
movsb
scas
aaa
aam
ret
int3
mov
jg
mov
mov
outsl
push
rcr
inc
xor
mov
pushf
mov
dec
addl
add
mov
aad
xchg
adc
out
lret
cmc
sbbl
xchg
xchg
clc
popf
out
dec
cmc
outsb
pop
inc
outsl
ret
sbb
clc
dec
sbb
add
pop
call
sbbb
aam
out
or
cmp
xchg
sub
aas
cmpsb
fistpl
movsl
mov
mov
loop
jnp
aad
jno
dec
and
jecxz
lods
scas
ret
iret
cmc
scas
pop
loop
mov
dec
cld
pop
sbbl
jl
add
and
mov
pop
sbb
outsb
sub
ret
jnp
fisttpl
mov
iret
inc
pop
adc
or
hlt
and
pop
and
sbb
sbb
mov
inc
stc
call
sbb
cs
mov
faddl
stc
push
inc
jge
into
cmpsb
push
sti
gs
aas
mov
pop
int
gs
cmp
fs
fs
jnp
pop
shlb
adc
adc
pop
mov
mov
jecxz
cmpsl
jbe
negl
cmc
mov
jecxz
push
jecxz
shr
pop
mov
jne
dec
mov
lcall
dec
popa
loope
stc
fwait
nop
cmc
loope
xchg
jmp
or
sti
int3
repz
jg
pop
pop
jne
stos
add
lcall
arpl
push
adc
inc
sbb
pop
pop
jle
and
jno
stc
fnstenv
fstpl
in
in
mov
jae
pop
dec
imul
js
testb
pop
push
lret
mov
divl
push
fmul
int
ffree
pop
pop
fs
jns
int3
nop
and
add
or
out
fisttps
adc
ss
cmp
leave
std
sub
mov
and
hlt
mov
and
fcomps
ljmp
test
fbstp
mov
out
adcl
push
pushf
lods
dec
bnd
jb
xchg
mov
lret
jecxz
sti
dec
leave
inc
mov
sbb
xchg
xor
jbe
mov
adc
push
hlt
and
dec
mov
pop
lods
push
inc
lret
add
popa
out
pop
pusha
popa
ficoml
push
mov
mov
xor
or
fistpll
push
xchg
push
popa
daa
cmpxchg
ret
imul
xor
aad
add
mov
loop
leave
adc
jge
xor
jnp
xor
clc
dec
ficoms
inc
push
push
fsubl
int
mov
cld
bound
xor
sbb
xor
lods
rcr
arpl
and
push
push
pusha
lahf
sbb
aam
adc
ret
fwait
cmp
xchg
ljmp
push
pop
pop
fmull
in
iret
jmp
cs
xor
fisttpl
rclb
pop
hlt
fistpl
shlb
sbb
clc
pop
inc
loope
int
das
sub
or
icebp
xchg
jnp
out
mov
es
push
cmp
sbb
dec
cmp
shll
mov
daa
sbb
cmpsb
lods
fucomp
cmp
mov
testl
mov
fdivr
mov
and
cld
mov
js
int
and
cmp
in
aas
and
add
push
mov
dec
lods
rcll
xor
dec
rclb
ss
xchg
stc
jp
loop
dec
jns
outsb
outsl
cs
adc
xlat
push
push
shrb
aam
and
lds
and
popa
jne
mov
or
add
or
cmp
in
cltd
xchg
fistps
movsl
lret
mov
jb
bound
mull
aaa
aas
notl
sbb
js
loopne
loope
xchg
orb
cmc
into
push
xchg
sbb
mov
lret
adc
ret
mov
mov
cmp
mov
sarl
ss
inc
sbb
sbb
cltd
clc
mov
dec
test
shlb
lahf
ss
je
mov
jge
mov
mov
rcr
xchg
or
mov
iret
cmp
mov
cmpsl
int3
fists
sbb
rol
push
aad
cs
sahf
lahf
mov
stos
loop
stc
sbb
mov
mov
push
pop
lret
clc
xor
sbb
dec
jae
iret
and
das
aaa
jbe
fcompl
push
in
lcall
xchg
jle
dec
lods
test
das
mov
loope
dec
sub
ss
pop
jle
shrb
and
loopne
mov
cmpsb
scas
push
jecxz
loopne
xchg
sub
jl
pop
idivl
je
add
mov
inc
ljmp
cmp
aaa
outsb
fidivl
sbb
stos
enter
mov
jbe
movsb
js
scas
xor
outsl
gs
stc
inc
pop
cmc
frstor
sub
cmp
mov
and
test
shrl
cmpsl
pusha
addr16
in
dec
scas
es
sbb
mov
cmp
ds
ja
lock
dec
das
je
push
and
fsubs
lock
add
dec
jle
fildl
cs
outsl
insl
sahf
inc
mov
jmp
jl
cmp
inc
mov
push
pop
ret
inc
loope
int3
je
mov
daa
sub
pop
aam
addr16
mov
cs
and
push
push
cs
lock
hlt
cwtl
xlat
mov
fldt
jge
out
cmp
inc
movsl
test
xlat
sahf
or
rcll
push
xor
pop
push
out
sub
loope
mov
insl
cmpxchg
and
in
loope
inc
neg
jg
adc
lea
xchg
sbb
jnp
inc
cmc
ss
icebp
popf
cmp
mov
fsubrl
lds
jle
data16
fadds
add
adc
push
repnz
mov
addr16
repnz
popf
outsl
cmc
shr
lods
pushf
mov
inc
loopne
xlat
cs
aam
lret
pop
fcmovnbe
cmp
push
xor
lock
cmp
stc
xor
or
adc
addr16
adc
mov
loop
arpl
adc
cli
sub
jge
jnp
dec
pop
pop
sub
insl
ret
flds
add
mov
std
mov
aad
xchg
adc
jg
xor
inc
je
xor
dec
in
pushf
push
mov
push
mov
les
adc
mov
xor
fisubrl
mov
leave
push
jmp
jge
mov
cmp
xor
outsl
fsubrs
lds
mov
imul
mov
loope
ljmp
ret
sub
popf
mov
xchg
mov
add
dec
repz
ret
int3
inc
mov
mov
push
xchg
sti
hlt
jecxz
add
mov
ds
sbb
or
mov
adc
outsl
push
out
ret
repz
cmpb
push
ffreep
pop
cmp
shrl
imul
movq
dec
sbb
movsl
aas
cwtl
addr16
cmp
rorl
pop
jg
push
notb
push
out
sahf
ret
sahf
mov
and
mov
fadds
lods
mov
mov
mov
jne
movsb
xor
out
sbb
sub
adc
lods
pushf
adc
jle
aad
int3
dec
int
pop
adc
mov
je
pushf
iret
mov
xlat
sub
lods
stos
xor
jge
mov
scas
sub
mov
cltd
cmp
cmp
fstp
inc
mov
lods
fs
out
dec
cmp
ljmp
or
mov
stc
fists
bswap
mov
cmpsl
dec
sub
pop
pop
add
mov
mov
aad
mov
pusha
loope
xchg
insb
int3
sub
insb
outsl
cmpsb
fdivrs
adc
inc
sbb
negb
in
shll
popa
and
and
andb
into
adc
dec
mov
ss
adc
xor
shr
pop
xacquire
adc
mov
sub
mov
xchg
xor
cld
cmp
or
aaa
fsts
loopne
int
test
and
icebp
mov
jl
pop
xor
adc
and
or
lock
jle
adc
add
jp
jg
adc
out
sub
xor
insb
or
push
test
fwait
pop
scas
push
cwtl
lret
push
fwait
jmp
xchg
bound
inc
mov
inc
fwait
xor
pop
sub
push
stc
add
stc
out
mov
push
dec
jp
ficoml
jmp
mov
movsl
sbb
pusha
orb
decb
ret
test
aas
push
push
ficomps
lds
popa
jo
jno
inc
sbbl
jl
cmpsb
je
inc
lock
sub
call
add
jns
fwait
add
rol
pop
test
shlb
pop
adc
sar
shll
jne
sub
pop
pop
idivl
xlat
out
rolb
or
and
call
sub
push
hlt
mov
mov
out
sbb
cmc
cmpsl
popf
decb
pop
movsb
sub
loope
lcall
fldcw
jae
ja
cltd
adc
popa
inc
or
mov
loop
call
mov
xor
das
mov
pop
jecxz
adcb
pop
aad
insl
lods
cld
ljmp
outsl
bound
push
and
adc
dec
push
cmp
adc
mov
out
incb
sbb
popa
repz
sbbb
mov
cmp
icebp
mov
jecxz
mov
sub
push
inc
adc
out
cmpl
lahf
xor
push
sub
cmp
and
outsl
cmpsb
mov
jnp
jle
fistpl
std
pop
sub
call
in
cmp
add
pop
push
fcomps
mov
mov
sbb
xlat
mov
ds
cmc
daa
or
jecxz
cmc
jg
lods
loopne
add
jmp
dec
push
fsincos
imulb
shl
popf
jmp
or
inc
loopne
aam
add
push
mov
shll
lds
int
aam
test
out
aam
pop
xor
pop
mov
fdiv
rorb
sbb
pop
movsl
pop
out
rolb
sbb
stos
leave
in
xor
push
sbb
inc
adc
xchg
rorb
adc
sbb
loope
iret
ja
in
inc
sub
dec
sub
push
push
cmp
loope
fisubrs
push
scas
clc
sahf
in
repz
out
mov
sbb
mov
jmp
and
les
sbbl
fprem
rcll
ljmp
call
xchg
cld
xor
aam
dec
sbb
add
repnz
and
cmp
sbb
inc
flds
inc
pop
cmp
lret
lcall
je
fcompl
jge
and
imul
xor
sar
negl
mov
xchg
cmp
mov
cs
push
mov
cmp
inc
cmpsl
xchg
pop
aad
xor
jecxz
inc
sbb
shlb
xchg
mov
or
push
lea
push
nop
imul
pop
pop
pusha
dec
fcoms
sub
sbb
sub
int3
iret
sbb
punpckhbw
pop
xchg
iret
imul
pop
push
jb
add
mov
inc
mov
lods
ss
cmp
mov
mov
or
dec
in
into
test
or
mov
mov
sub
lcall
adc
jmp
lock
jge
adc
out
push
inc
xor
inc
adc
pop
int
insb
mov
inc
call
jns
mov
aad
mov
leave
mov
rcll
adc
mov
outsl
cwtl
jbe
adc
dec
stos
fistl
mov
push
xchg
mov
imul
mov
push
push
imul
das
ja
add
adc
jne
fs
test
cmp
cli
cmp
mov
xchg
outsl
arpl
iret
sbb
orb
push
mov
fdivs
add
fidivs
adc
lods
frstor
jecxz
scas
pop
mov
call
leave
scas
hlt
addr16
sbbl
clc
jno
adc
in
sub
adc
popf
sbb
imul
outsl
inc
mov
sub
mov
int
adc
pop
adc
std
jmp
fcomp
cltd
push
cld
adc
push
fmull
push
push
out
insb
ja
in
call
test
testb
pop
movsl
jg
pop
fcoml
xor
xchg
insb
test
leave
pop
ret
adc
ja
adc
mov
lods
sbb
mov
pusha
addr16
or
adc
inc
xchg
stos
je
andb
xor
pusha
adc
adc
int3
out
mov
sbb
push
aam
fcmovne
shll
pmullw
aam
jne
dec
add
adc
jmp
stos
and
sub
aaa
ss
adc
sti
scas
outsb
enter
test
inc
cmpl
adc
testl
ja
pop
lcall
dec
mov
rorl
sub
jmp
sbb
andb
sarl
pop
or
push
push
mov
add
ret
insl
sub
dec
sti
cld
mov
pusha
dec
mov
fbstp
push
inc
aaa
inc
jbe
aad
popf
mov
hlt
xor
push
sub
sbb
mov
inc
jecxz
xchg
in
loopne
xchg
test
sub
stc
clc
push
cmp
or
sbb
enter
push
mov
roll
cmc
jnp
test
mul
cmp
xchg
fcoms
aam
push
addr16
lods
push
nop
cmpsl
add
inc
cmp
jnp
pop
push
mov
xchg
jmp
mov
imul
scas
inc
adc
mov
int
jecxz
shlb
bsf
xor
mov
bound
loop
dec
and
aaa
test
xchg
imul
dec
repnz
cmp
ds
and
shr
dec
xchg
icebp
xor
jae
lods
cs
popa
sbb
fstp
out
ljmp
jmp
cld
jbe
lods
aam
mov
mov
xor
cli
test
out
or
sub
inc
push
or
pop
mov
flds
icebp
subl
test
imul
rorl
mov
cmp
xor
pop
iret
jge
sbb
loopne
jbe
xchg
je
ljmp
lods
jge
or
jbe
jecxz
test
cmc
sbb
mov
cmp
push
fidivrl
sub
ret
inc
cld
adc
cmc
enter
fnstenv
leave
test
enter
mov
loop
push
or
in
sti
push
push
inc
movsb
int
data16
clc
cld
add
test
adc
inc
fsubrl
pop
fwait
xor
cmp
out
and
mov
addr16
xlat
push
mov
nop
cmp
mov
mov
mov
sub
dec
adc
mov
outsb
int3
xor
xor
and
mov
cmp
and
scas
mov
cld
pop
filds
push
out
out
mov
pop
pop
test
mov
mov
cmc
mov
jbe
cmp
lcall
xchg
cmpsl
sub
or
xchg
imulb
jge
dec
jne
pop
icebp
sub
push
sarb
ss
aaa
test
sbb
mov
out
pop
pop
xorl
cli
pop
mov
push
sub
mov
xor
lock
fcmovbe
fs
and
lret
scas
mov
in
std
mov
push
mov
mov
pop
shrb
add
sti
and
add
orl
pop
sub
push
es
push
jae
ja
mov
jnp
xor
push
pop
jbe
mov
daa
adc
lock
or
cld
imul
icebp
stos
fdivl
cmpsb
ret
pop
cld
mov
sub
sti
lret
xchg
push
mov
mov
das
sub
jmp
mov
push
js
fnstenv
sbb
sahf
cmp
cld
into
sbb
mov
push
popa
ret
cmp
jns
add
adc
insb
insb
fs
fstpt
nop
pop
jnp
out
psrld
push
inc
lock
mov
push
pop
mov
xor
push
mov
stc
mov
adc
fst
test
push
faddl
inc
test
jne
ljmp
add
mov
pop
mov
pop
fsubr
lret
test
mov
repnz
fstl
cmpsb
dec
adc
jmp
fisttpll
in
arpl
inc
ret
xchg
stc
dec
icebp
pop
cwtl
inc
push
pop
pusha
in
xchg
into
pushf
mov
sbb
das
fcoml
lods
test
dec
adc
adc
cmp
sub
dec
adc
mov
test
mov
mov
addl
lret
iret
cli
or
aaa
test
movsl
dec
xchg
mov
aam
out
xchg
jae
xor
pop
mov
mov
xor
fistpll
xor
stos
push
dec
pop
clc
cmp
rcll
mov
out
and
sub
in
mov
add
inc
mov
jae
sub
pop
push
mov
lds
xchg
push
or
dec
imull
aad
enter
add
fsts
fcmovne
lock
aad
ffreep
jno
sbb
testl
popf
js
add
in
ret
mov
fucomi
daa
xlat
push
sti
les
test
shl
sbb
ss
inc
xchg
jne
mov
into
cmp
mov
jmp
aad
mov
aad
popf
inc
jbe
push
out
test
cmp
dec
mov
scas
decb
je
daa
pop
sub
push
scas
xor
fwait
ljmp
mov
adc
ds
cmpsb
ljmp
popa
lahf
xor
int3
cwtl
pop
dec
mov
mov
or
jb
push
arpl
gs
insl
mov
inc
adc
adc
mov
lcall
scas
clc
and
push
inc
or
mov
and
lods
mov
fsubr
repz
cmpsb
cmp
orl
test
cmp
add
jmp
jb
and
sub
mov
push
rorl
out
mov
icebp
jle
cld
pop
add
pop
push
xor
aad
mov
ret
xchg
mov
cli
sub
sbb
repz
fadds
lods
imul
dec
pushf
add
rcrl
inc
mov
pop
dec
adc
dec
dec
arpl
push
imul
gs
add
les
sarb
mov
lahf
add
mov
mov
push
popa
sub
insl
mov
jns
cltd
add
cmpsl
in
mov
sbb
sbb
dec
push
cmp
adc
jbe
clc
ret
enter
stos
iret
sahf
mov
sub
test
mov
jge
mov
bound
mov
dec
mov
sub
movsb
mov
sbb
loopne
mov
cmpsb
fcoml
std
mov
inc
jl
pop
adc
arpl
and
and
mov
out
pop
cli
pop
mov
out
jno
repz
mov
orb
stc
fisubs
roll
push
dec
movsb
cmp
cmc
rorb
add
xor
rolb
mov
push
mov
inc
imul
and
push
cmp
xor
pop
lretw
fwait
cmp
mov
jnp
scas
loopne
rol
enter
in
mov
test
cmp
divb
gs
mov
mov
cmp
xor
push
mov
popf
lea
fldenv
or
arpl
mov
xchg
push
xchg
sub
jl
aaa
pop
mov
or
insl
mov
aaa
push
les
or
insb
mov
test
or
mov
sbbb
mov
and
mov
mov
mov
push
cwtl
fistl
jle
aam
jbe
pop
into
lock
mov
pusha
fnstcw
sbb
stos
imul
insb
fdivr
dec
xchg
sub
push
frstor
out
arpl
insl
mov
loopne
or
mov
fcomps
int3
das
jl
inc
fwait
jne
cmp
add
shrb
ret
push
ret
out
xor
jb
cmp
movsb
push
lock
nop
sub
jl
mov
push
orl
dec
inc
ss
cli
ret
inc
and
mul
or
sub
jg
into
cmc
icebp
push
inc
aad
movsl
push
fiadds
and
fcomp
or
fisttps
jns
bnd
cmpsb
dec
dec
sub
aad
mov
repz
loopne
push
pop
sub
xchg
mov
jb
add
divl
xchg
fildl
push
mov
mov
std
shrl
cli
call
dec
lret
movsl
xor
and
sub
inc
push
out
mov
insb
fs
lods
sbb
mov
push
hlt
cmp
and
fadds
pop
jo
push
and
fsqrt
mov
stos
stos
mov
arpl
push
cwtl
or
xchg
jge
jbe
outsb
xchg
mov
or
sahf
int
jg
fdivrs
mov
les
jb
sar
gs
pop
sub
push
mov
add
test
xlat
mov
mov
adc
push
std
lret
lcall
sbb
mov
in
hlt
aam
jne
cmp
adc
fiadds
pop
int3
data16
xchg
mov
add
in
in
jo
ja
jge
popa
dec
bound
out
push
add
sbb
inc
mov
pop
add
movsb
sub
push
pop
dec
test
xor
jnp
mov
shrb
dec
jge
cltd
lods
pop
mov
fldt
xchg
je
daa
movsl
lds
bound
shl
shr
inc
mov
cltd
jae
sub
test
pop
mov
jne
cltd
cld
divb
rol
test
out
out
cwtl
or
loopne
daa
push
or
icebp
dec
in
cli
or
test
ret
les
insb
sarl
add
enter
adc
cli
mov
or
push
mov
sti
lret
arpl
adc
xchg
mov
sbb
pop
pop
adc
pop
loope
and
nop
mov
lock
cli
arpl
dec
push
xorb
repnz
out
sub
dec
jb
jo
xchg
inc
movl
imul
inc
inc
test
pusha
gs
movsl
jns
movb
div
dec
jl
adc
or
dec
cmpl
cltd
lahf
fcomps
fcoml
push
lret
adc
arpl
sti
inc
sbbl
orb
xor
movsl
nop
sub
add
hlt
bound
mov
imul
popa
dec
loop
int
aam
inc
fwait
and
fisubl
fildl
push
in
out
int
and
xlat
int
sahf
fdivs
popf
aam
pop
xor
jecxz
xor
dec
or
jle
scas
dec
or
mov
push
pushf
cmpsb
jo
sub
cmp
popa
fdivrs
lcall
push
dec
adc
dec
shr
shr
xlat
incl
jmp
aas
loopne
pop
adc
lret
jp
fisttpl
out
divl
stos
pusha
sbb
adc
xor
aam
jl
in
xor
out
adcb
sbb
pop
ficomps
sti
and
and
adc
or
add
adc
scas
and
mov
dec
adc
aad
push
pop
jns
out
cli
add
mov
fidivl
sbb
icebp
test
cmp
sti
hlt
push
fmuls
mov
sbb
jle
add
loope
xchg
add
inc
fidivrl
cmp
mov
push
pop
aam
cmpsl
rclb
and
dec
fiadds
lods
hlt
popf
jecxz
dec
inc
repnz
mov
and
jecxz
sub
xchg
in
enter
inc
sub
cs
stos
mov
adc
cld
adc
xlat
mov
fimuls
push
lcall
fadd
xchg
xor
xchg
xor
sub
fcomps
mov
mov
xchg
dec
out
andl
std
mov
repz
push
ret
jnp
dec
inc
mov
mov
xor
les
xor
jp
cmp
mov
in
fs
fcompl
push
fnstcw
scas
out
loope
mov
push
popf
mov
fsubl
or
inc
jae
js
out
or
cmpsl
mov
xchg
xchg
das
mov
icebp
int3
sbb
pop
xchg
mov
in
adc
mov
fwait
dec
mov
lret
je
mov
mov
cmp
jo
add
jno
mov
mov
in
sbbl
mov
lock
std
cmp
lock
jo
push
int
nop
in
fisubs
push
repz
mov
vpsubq
and
adc
inc
mov
push
add
jmp
or
adc
call
arpl
adc
lds
cmc
fcoms
or
imul
add
xor
outsb
adc
rorl
inc
pop
dec
cwtl
rolb
scas
aaa
sti
jg
jo
jg
orl
xlat
jb
lret
add
int3
mov
faddl
mov
xchg
jae
aad
orl
jle
daa
push
dec
push
fwait
jae
sbb
movsb
cmc
out
hlt
pop
idivb
aaa
xorb
inc
sti
sub
pop
mov
xorb
add
jmp
leave
mov
adc
add
int3
mov
aas
add
negl
adc
inc
mov
add
stc
popa
push
jg
xor
sub
cmp
add
rcrl
sub
pop
push
mov
ss
fdiv
xchg
repz
testl
sub
insb
fcoml
lds
in
cli
pop
add
call
test
inc
fisubl
or
or
test
dec
lods
and
shll
hlt
mov
and
loop
and
sbb
into
jl
hlt
push
and
jg
mov
mov
fstl
mov
fisubl
adc
jecxz
and
ss
cld
xchg
mov
sbb
loopne
jle
mov
jle
scas
in
into
cmp
sub
jle
aad
mov
negl
sahf
frstpm(287
aam
jge
repnz
iret
incl
scas
call
cmp
sti
and
cmp
dec
out
mov
inc
or
push
push
mov
mov
addr16
xor
repnz
std
into
data16
imul
ds
and
aam
sub
cld
xchg
jmp
faddp
lock
xchg
sbb
jae
daa
imul
xchg
scas
jne
pushf
sub
fstp
mov
xchg
xchg
push
xchg
xor
lock
insb
push
inc
call
pop
fbld
int3
pop
mov
jp
jno
jns
sbb
jnp
add
sub
fdivrs
pop
ret
jecxz
pop
jb
inc
imul
js
jl
cmp
in
scas
notb
jp
loope
mov
cmc
jmp
xor
push
orl
aaa
xor
lahf
lods
fnstenv
push
orl
pop
xor
xor
stos
insb
outsl
ljmp
or
dec
jns
cmp
dec
cmp
std
int3
rorb
hlt
xchg
pushf
in
mov
add
outsb
add
fisttps
push
push
mov
dec
loop
cli
inc
push
rcrl
and
mov
lret
xor
or
daa
int
das
test
adc
sub
in
or
js
in
sbb
mov
dec
add
dec
scas
add
sarl
outsl
xchg
pop
adc
das
rcrl
cmp
popa
test
hlt
enter
iret
xor
sub
sub
mov
incb
sub
cmpsb
orb
mov
sub
outsl
jbe
mov
test
inc
mov
aas
enter
popa
dec
dec
pop
push
or
lcall
iret
loope
sub
push
addl
roll
fs
pop
sbb
in
loop
pop
mov
daa
xchg
leave
push
add
insl
jmp
loopew
xchg
aaa
mov
add
mov
add
jb
pop
lock
sbb
push
je
popf
lret
addr16
das
movsl
inc
sbb
mov
repz
mov
incb
push
pop
mov
push
lcall
cmpb
push
or
mov
push
flds
or
mov
je
push
mov
and
movsl
test
enter
lahf
call
jo
sbb
test
pop
scas
xchg
mov
jnp
mov
jno
cmp
cmc
sbb
dec
mov
dec
sbb
jo
lret
mov
jmp
mov
filds
adc
sbb
cmp
or
sbb
push
jp
sti
pop
imul
and
push
inc
mov
test
ljmp
sbb
sahf
mov
aad
push
and
inc
pop
stos
testl
ret
jo
push
sbb
jp
jecxz
test
inc
loopne
lods
lret
mov
push
mov
cmpsb
push
jno
and
dec
dec
push
and
xchg
insb
sbb
movhps
mov
test
in
pusha
repnz
lock
lods
dec
dec
lods
icebp
scas
sub
add
pop
jae
loope
jge
xor
scas
mov
mov
jne
test
mov
mov
pop
int3
movsl
notl
aam
or
hlt
lret
sub
dec
rorl
cmp
dec
mov
xlat
pop
adc
jmp
out
js
pusha
addr16
cmp
jb
outsl
addr16
mov
insb
cld
shr
je
sub
std
xlat
jle
jl
stc
es
xchg
aam
popa
lods
int
push
shl
pushf
shrb
sbb
loope
mov
arpl
rcrb
inc
mov
scas
mov
cmp
or
add
pop
inc
mov
sbb
jecxz
mov
mov
inc
shlb
inc
or
sbb
cmp
inc
lods
js
daa
and
call
push
dec
ret
xor
aaa
cli
jmp
jmp
sbb
pop
ljmp
mov
dec
sti
orb
jmp
adc
mov
push
and
ds
pop
mov
inc
jmp
push
inc
pop
cmc
adc
lods
push
inc
pop
and
leave
cld
xor
sbb
repz
pop
cmp
jb
ljmp
das
lea
or
jmp
fwait
out
pop
lock
push
adc
jmp
es
cld
mov
and
daa
mov
sub
shl
pop
and
dec
movsl
inc
cli
pop
mov
mov
or
sar
icebp
adc
jmp
pop
push
loop
sti
push
jmp
pop
stos
pop
popa
mov
inc
movsl
and
invd
inc
adc
sub
scas
pop
xor
loopne
sbb
cmpsb
aas
scas
inc
imul
jmp
mov
mov
in
loopne
push
mov
int3
addb
dec
aam
outsb
push
stos
or
fdiv
dec
insb
mov
shlb
ss
leave
sub
push
dec
into
ret
jecxz
rorl
add
enter
or
mov
into
hlt
divl
dec
xchg
popf
jmp
sbb
insb
and
loopne
adcl
jle
mov
int
adc
in
pop
jbe
jl
loope
arpl
mov
dec
les
jo
int
imul
insl
xor
cli
mov
jnp
dec
xorb
mov
or
ja
sbb
sbb
shlb
xorl
or
mov
add
mov
xchg
mov
mov
xor
push
out
pop
add
adc
push
jo
cmpsl
bnd
jb
mov
dec
movsl
in
in
adc
xorl
sti
or
aad
faddl
mov
icebp
or
bound
subb
pop
aas
cmp
mov
insb
and
sub
cmpsl
dec
push
inc
icebp
inc
xchg
out
mov
test
mov
ret
sub
add
call
cli
dec
mov
pop
insb
mov
ds
sbb
pop
subl
jmp
fs
pop
xor
add
rorl
adc
mov
pop
iret
xor
repz
out
pop
xchg
lahf
fs
fsubrl
subb
out
lock
mov
imul
imulb
jl
aam
mov
add
xlat
mov
int3
rcll
adc
ljmp
js
inc
into
xchg
mov
adc
std
popf
and
mov
sub
push
jg
test
push
clc
outsb
adc
and
adc
xor
mov
sub
pop
cmp
pop
jge
adc
clc
sahf
push
push
pop
icebp
cmp
in
xor
call
push
test
out
test
hlt
lock
sub
insb
sub
xor
push
sub
add
lahf
pop
sub
fs
xor
shl
fistpl
and
adc
push
aas
push
jmp
aad
lret
xor
xor
push
push
jge
jbe
aas
pcmpgtb
fcompl
xor
xchg
adc
pop
and
xor
jg
inc
and
or
add
inc
das
outsb
push
xor
daa
daa
leave
add
add
out
push
fidivrl
mov
push
dec
repnz
fstp
hlt
das
xchg
fisubrl
rcr
into
das
dec
inc
scas
in
jne
fwait
sub
scas
ret
sbb
pop
pop
adc
mov
mov
pushf
cld
mov
mov
cmpsl
std
xchg
pop
scas
mov
xor
js
out
out
and
fdiv
cmp
cld
adc
cld
add
jmp
xor
repnz
cld
ficoml
scas
jecxz
lcall
out
js
pmaxsw
les
push
cmp
sub
popa
repz
nop
or
adc
int
fsts
inc
push
or
sahf
sbb
lods
aad
stos
cld
or
adc
add
dec
jne
in
cmp
adc
ja
lock
jno
cltd
pop
cmpsl
sbb
mov
roll
cmp
scas
dec
ficoml
sbb
pop
push
adc
or
fwait
push
sti
fcompl
int3
lock
cwtl
shrb
outsl
mul
int
cltd
out
stos
aad
add
mov
icebp
pushf
cld
jp
jnp
jb
xchg
std
jb
js
cmc
lahf
inc
jp
push
mov
mull
inc
jo
stos
out
pop
inc
xor
cmp
daa
inc
adc
aaa
pop
pop
or
or
or
dec
push
in
pusha
ret
je
mov
push
scas
loope
or
and
aaa
adc
push
jae
jl
mov
loope
hlt
mov
push
adc
aam
ss
dec
sbb
jecxz
ficompl
inc
aam
fsubl
jnp
aad
add
mov
icebp
in
sti
ficoml
rol
icebp
idiv
cs
enter
dec
xor
icebp
mov
out
arpl
mov
add
pop
in
xchg
jo
or
scas
inc
test
imull
in
jecxz
pusha
shll
aaa
repz
div
cmp
das
in
sub
aas
aaa
pop
sub
pop
addr16
sarl
mov
push
stos
fmuls
xchg
dec
push
ret
cmp
inc
fs
or
cmp
cmp
je
into
ret
sbb
es
dec
add
pop
div
inc
decb
test
pushf
ljmp
sub
xchg
iret
loopne
lcall
ss
outsb
loopne
fisttps
pop
scas
jne
adc
outsl
sti
xchg
add
es
or
mov
ret
push
cld
cmp
cs
push
int
push
lods
push
insl
in
xor
xor
repz
inc
inc
xchg
dec
pop
pop
and
iret
mov
stc
in
adc
mov
jno
mov
xor
in
xlat
es
mov
inc
mov
mov
cli
sbb
ret
dec
ret
rcrl
pop
xchg
and
xor
in
adc
jbe
test
inc
cmp
das
cmp
inc
popf
iret
or
aaa
xor
pop
mov
lea
sub
pop
filds
jo
pop
jb
mov
pop
push
cld
push
fwait
in
sti
jl
sbb
orb
cmp
and
adc
cmp
test
cld
push
inc
pop
mov
add
ret
sbb
xor
mov
adc
xor
es
or
sbb
cvtdq2ps
inc
leave
dec
cs
pop
cld
add
add
popf
push
filds
arpl
into
loopne
xor
or
mov
lret
in
and
xchg
push
xor
mov
and
pop
inc
or
lcall
push
inc
push
pop
outsb
adc
mov
or
push
adc
outsl
aaa
push
or
ret
inc
fiaddl
sbb
pop
fwait
sub
scas
xor
fstl
scas
movsb
push
jge
clc
pop
adc
jo
mov
cmovae
adc
xor
cmp
mov
and
mov
inc
or
xchg
dec
lahf
pop
icebp
pop
je
mov
sbb
les
je
pushf
adc
jno
xchg
dec
pusha
fnstenv
cmp
xor
adc
inc
pop
aad
pop
aam
push
js
fisubrs
shll
pop
xlat
push
lods
xchg
jl
xchg
js
cmp
rorl
das
loope
xor
xlat
stos
mov
pop
pusha
add
in
into
idiv
and
dec
call
add
mov
shll
cmp
ret
imul
pop
adc
mov
adc
aas
cs
lea
jmp
mov
add
js
rorb
fistps
sti
xchg
stc
rorb
push
inc
jne
add
fwait
or
mov
add
call
test
pop
pop
push
lcall
and
xor
sbb
mov
out
push
imul
pop
out
jecxz
and
or
je
dec
in
dec
aam
add
jmp
mov
jmp
mov
fsincos
cld
pop
pushf
aam
inc
or
mov
push
rorl
shll
cld
inc
lret
add
cld
adc
xchg
fadds
dec
sbb
cli
jnp
fwait
mov
inc
nop
inc
pop
fs
mov
addr16
rclb
or
fsubrs
int
adc
push
sbb
nop
rcr
and
jb
xchg
cld
jg
int
andb
mov
jmp
out
dec
and
push
popa
int3
jg
lods
push
repz
fcoms
and
mov
or
iret
daa
xchg
das
mov
sub
inc
xor
add
movsl
dec
push
std
ljmp
fldcw
mov
arpl
sbb
test
xlat
adc
cli
jnp
or
pusha
pusha
mov
push
pop
sub
int
mov
or
daa
adc
jae
add
push
popf
dec
ds
push
push
loope
xor
cmp
ds
jmp
into
mov
or
lahf
pusha
loop
cmp
or
xchg
std
adc
mov
and
test
scas
mov
idiv
negb
cs
pusha
add
and
fildll
popa
lret
cmc
mov
fwait
pop
aaa
popa
jne
inc
popa
enter
add
rcll
mov
fadds
push
jle
and
xor
sbb
pop
mov
cmp
int3
fcomps
add
adc
jecxz
or
xor
sbb
mov
adc
add
pop
cmpb
imul
lea
es
ret
jl
ds
adc
mov
mov
sbb
xor
cmp
pop
sbb
xor
pusha
inc
fdiv
inc
inc
xchg
sbb
mov
sub
jno
sbb
lret
mov
sti
in
sbb
fsts
getsec
jge
aas
mov
xchg
adc
repz
ljmp
cmp
pop
or
and
inc
lods
popl
jge
add
aam
or
hlt
inc
cs
mov
push
js
lock
inc
fadds
push
cmp
out
insb
xchg
adc
pop
outsl
adc
loop
sub
mov
xchg
push
cmp
or
fidivl
outsb
loopne
wbinvd
mov
xor
and
sbb
shl
icebp
ja
rolb
and
test
or
sbb
fistl
push
cmp
ss
pop
outsl
mov
push
fcomps
push
clc
push
xor
adc
call
mov
stc
mov
xor
in
cmp
or
jnp
stc
lock
cmp
cmp
push
int3
insl
pop
xchg
pop
push
addl
stos
out
in
lock
cmp
mov
mov
js
xlat
cmp
repz
sbb
aam
mov
xor
lods
nop
mov
orl
js
cmp
ljmp
sbb
add
enter
jmp
jge
popa
add
data16
sti
sub
xchg
xor
sub
iret
out
pop
rclb
scas
sub
mov
cmp
xor
dec
aad
ljmp
push
jecxz
push
out
loope
sti
subl
adc
sbb
jo
and
and
inc
sub
push
xor
adc
dec
in
sbb
mov
xor
dec
xchg
iret
in
repz
sbb
pushf
mov
loope
cmp
mov
jnp
xchg
fcoml
loopne
xlat
icebp
push
xor
jg
lret
add
test
lret
cmp
out
mov
pop
sub
cltd
daa
sbb
push
mov
les
add
jmp
int
pop
test
inc
das
cmp
out
pop
inc
ljmp
adc
rcrb
ds
and
adc
sub
cmc
pop
mov
mov
dec
push
jo
popf
or
dec
sbb
sbb
xor
xchg
leave
das
or
pop
xor
sbb
repz
mov
pushf
aaa
pop
aam
fcoms
mov
dec
shl
pop
jmp
adc
mov
mov
mov
fsts
test
arpl
stc
fldcw
adc
push
sti
addl
pop
or
mov
loopne
mov
loopne
cmpsb
xchg
cld
and
lock
mov
sbb
iret
orl
and
sahf
shl
mov
lahf
fsubrl
popf
iret
xchg
cmp
jne
mov
das
pushf
clc
or
stos
jne
imul
cmc
mov
mull
ret
xor
je
cli
pusha
in
cmp
jnp
out
push
sahf
pop
mov
add
sbb
shr
rcrb
or
rcll
xchg
mov
push
push
dec
adc
xor
mov
mov
lret
cmp
je
lahf
addr16
xor
cwtd
inc
repnz
jecxz
cmpsb
fs
cwtl
movd
mov
and
pop
cmp
mov
cmp
arpl
pop
daa
adc
xchg
rcrl
sbbl
ljmp
sbb
push
iret
cmpsl
xor
mov
adc
hlt
es
add
adc
mov
incl
stc
movsl
jns
push
in
xlat
pop
lods
push
inc
bnd
mov
fwait
mov
cmc
repz
cmp
mov
xchg
idiv
jae
sub
adc
hlt
rcll
dec
mov
xchg
clc
popf
sub
sti
outsl
dec
clc
inc
xor
ja
arpl
adc
push
sub
inc
je
movsb
test
xlat
or
mov
jecxz
inc
ret
stc
insl
mov
ret
dec
das
loop
sti
js
outsl
je
in
out
sbb
out
xchg
and
fidivrl
jmp
push
dec
fs
stos
push
hlt
adc
cli
not
pop
frstor
into
xor
sbb
out
jb
dec
test
in
mov
jle
test
gs
es
addr16
mov
adc
outsb
adc
rcrl
xor
add
inc
or
sbb
dec
loopne
scas
fdivl
arpl
ja
test
mov
jne,pn
jp
icebp
mov
aas
pop
int
jmp
adc
xlat
mov
shlb
push
sbb
imul
jecxz
xor
pop
lret
icebp
jo
or
aas
sbb
out
inc
ja
cmpl
ja
xchg
aam
jge
xchg
in
repnz
pop
out
loope
call
out
jae
mov
lock
push
jge
jle
shrl
sub
xor
pusha
dec
iret
iret
leave
scas
notl
jae
movsb
pop
push
mov
insb
lds
js
std
push
jecxz
pop
push
dec
in
xlat
mov
sbb
cmp
sub
addr16
popa
jmp
popa
mov
fimull
pop
jb
cmc
into
outsl
in
jno
lods
in
in
xchg
loope
and
dec
movl
loope
shrl
roll
cwtl
mov
ljmp
or
add
mov
ret
es
pushf
ja
fists
mov
cs
dec
adc
loopne
lds
mov
sti
enter
inc
lods
faddl
rolb
fildl
sbb
leave
aaa
mov
push
xchg
pop
sub
inc
shrl
por
clc
test
sub
xor
lea
stos
negb
adc
ret
xchg
out
jmp
mov
leave
cmpsl
repnz
mov
dec
iret
jb
fisubl
mov
push
sbb
sbb
fcmovnb
add
mov
stc
dec
int3
sbb
xchg
test
dec
mov
jl
lahf
pop
inc
or
fcoml
mov
or
push
loopne
inc
xor
fstpl
cld
adc
aam
inc
sub
fwait
push
and
int
in
dec
daa
mov
jae
nop
cmpsl
jmp
xchg
cli
sub
movsl
push
loop
inc
cli
daa
mov
push
ja
pop
out
rorl
pusha
adc
sub
ret
mov
hlt
imul
jo
mov
jp
sub
pop
push
push
or
aaa
push
enter
sbb
jb
jne
insl
push
loope
push
out
add
fs
xchg
or
xorl
xor
sbb
in
or
xchg
push
imul
iret
je
xor
jae
adc
push
and
jecxz
xorb
leave
sub
pop
in
mov
adc
test
dec
add
outsl
mov
mov
dec
pop
mov
hlt
cmp
dec
inc
ja
mov
les
addr16
adc
and
mov
push
fimuls
xchg
push
adc
push
xchg
and
cmpb
pusha
and
and
gs
cmpsb
push
sub
push
pop
ss
or
and
inc
xor
ret
lcall
ret
shl
aad
xor
roll
scas
aas
fwait
addr16
or
xlat
add
or
mov
negb
push
jg
stos
imul
les
inc
cmp
cmp
or
movsb
mov
cmpsl
les
cmp
inc
mov
stos
pop
mov
clc
bswap
push
jns
je
cmc
or
pop
ljmp
sti
push
popa
movb
fdivrs
xchg
push
xlat
adc
push
add
clc
outsb
cmpsl
mov
je
xor
adc
adc
insb
out
in
testl
pop
mov
incl
xor
inc
sub
movsl
mov
xor
stos
inc
test
loope
mov
cli
sbb
pop
test
fnstenv
int3
ret
in
in
dec
into
outsb
and
mov
jb
aas
jle
in
lcall
sarl
push
subb
xchg
std
inc
push
ja
xchg
mov
fimull
mov
sbb
push
loopne
mov
jo
mov
inc
lcall
aam
push
into
jne
loop
mov
push
mov
pop
pop
out
push
jo
jmp
out
mov
jae
jb
adc
mov
movb
ja
xchg
xchg
pop
je
push
popa
int
pop
sub
adc
xor
push
ss
pop
pop
mov
xchg
call
fld
out
lcall
in
xchg
adc
adc
into
ret
mov
cmc
adc
xor
popf
cmp
push
imul
icebp
and
popa
out
or
pop
fadd
adc
enter
push
or
xchg
stc
xchg
lcall
int
es
nop
mov
popa
dec
je
inc
imul
sbb
fs
out
mov
inc
cmp
test
sbb
cmp
mov
dec
push
mov
dec
push
xchg
mov
lret
call
mov
clc
iret
jge
jmp
xchg
rorb
push
aas
xchg
add
aaa
imul
mov
aad
push
cmp
sar
push
lcall
fildll
fsubrl
mov
sti
in
xchg
mov
mov
es
stc
imul
jge
test
int
int3
aas
inc
sbb
cld
lods
mov
lret
hlt
xchg
jne,pn
xchg
sbb
loope
testb
mov
in
into
subl
push
adc
push
icebp
jbe
ds
imul
cli
faddl
cli
fcmovne
fiaddl
push
aam
dec
std
jle
lods
inc
xchg
mov
hlt
mov
enter
xchg
into
rcrl
and
xor
movb
add
ja
lret
out
mov
divl
in
pop
xor
dec
cmp
xlat
fdiv
ror
xlat
pop
adc
fucomip
dec
add
int
imul
pop
enter
fld
add
lea
mov
pop
dec
mov
jae
in
xchg
cmp
in
iret
cli
mov
aaa
inc
shlb
ret
pop
daa
fadds
xchg
iret
xchg
call
cmp
lock
push
roll
cmp
imul
pop
sbb
jno
inc
cld
mov
or
cld
int3
xchg
sbbl
aam
mov
adc
xor
test
xor
pmaxub
dec
jnp
push
fbld
sbb
aaa
in
cmp
inc
push
cmc
es
cmc
cmp
lods
pop
int3
add
dec
adc
and
mov
andl
or
or
out
mov
ror
out
add
add
or
je
int3
push
mov
dec
adc
pop
scas
and
pushf
fistpl
loope
mov
lahf
test
dec
daa
rcrl
sub
dec
mov
or
lock
repz
lods
xor
fcmovu
repz
cmp
mov
pop
int3
ret
jne
fildll
adc
push
repz
hlt
outsl
fistps
mov
popf
mov
dec
add
call
sbb
fsts
and
dec
cwtl
mov
mov
sub
insb
mov
decl
pop
es
push
add
jle
stos
dec
lcall
add
and
mov
sbb
push
jno
ss
sub
in
mov
xor
jle
dec
jns
sub
add
in
jg
cmp
jmp
inc
pop
cld
sahf
pusha
xor
cli
iret
mov
pop
movb
pop
add
mov
fdivl
je
mov
push
push
cmc
mov
pop
dec
mov
adc
add
pop
and
push
sub
fcompl
sub
or
mov
insl
mov
lahf
xchg
mov
das
scas
out
iret
clc
mov
and
sti
in
ljmp
jmp
adc
pop
cli
loopne
inc
inc
add
into
jb
in
mov
sbb
out
xor
jae
inc
mov
cmpxchg
fistps
stc
lret
jnp
adc
cmp
fsubs
dec
or
push
adc
push
xorl
pop
paddusw
es
sub
pop
out
mov
cmc
stos
push
push
inc
cwtl
xchg
ret
stos
push
inc
ss
rorb
or
jecxz
cmc
sub
and
scas
fwait
add
inc
cmp
aaa
adc
repz
into
adc
xor
inc
imull
jo
cmpsb
pop
in
push
inc
mov
mov
mov
push
adc
leave
or
and
test
mov
imul
pop
sti
pop
ss
int
sbb
icebp
add
mov
mov
mov
cmpsl
and
fwait
pop
shl
xor
mov
test
inc
scas
nop
lock
xor
cmp
sub
les
mov
loopne
in
dec
cmp
lret
adc
daa
aaa
mov
add
mov
sub
insl
leave
hlt
test
cld
xor
jo
daa
stos
and
adc
adc
pop
push
cmp
push
cmp
pop
loopne
sub
and
hlt
jl
incl
fldl
sub
add
shll
outsl
and
add
and
fdivs
pop
es
rclb
fdivrs
sbb
sbbl
or
and
iret
xor
and
and
cmp
inc
lea
xor
and
push
or
or
arpl
pop
das
stos
cmpsl
fimuls
sub
filds
or
pusha
cmpb
adc
mov
repnz
fidivl
cltd
cmp
cmp
xor
aaa
mov
dec
shrb
xor
aas
push
iret
fdivs
fldt
fldl
push
push
dec
popf
inc
cmpsl
sbb
out
addb
jp
out
ss
mov
out
push
pop
mov
sub
mov
jno
fcomi
shl
pop
and
dec
and
sbb
ja
jmp
repz
or
sub
sbb
pop
cmp
pop
xor
pop
test
pusha
daa
jg
sbb
jb
clc
jl
pop
cmc
sub
or
sbb
add
pop
insl
pusha
dec
adc
aad
scas
pusha
fs
dec
jge
adc
pop
faddp
sbb
mov
cmp
push
jno
cltd
rclb
push
push
ret
jne
or
adc
testl
leave
cmpsl
daa
xchg
pop
jae
addb
and
add
xchg
fld
xor
jo
xor
mov
jb
inc
imul
daa
outsl
inc
mov
leave
outsb
cmpsl
xchg
lea
pusha
repz
call
mov
repnz
nop
push
and
push
popf
or
std
push
or
mov
push
sbb
idiv
mov
jmp
inc
sbb
dec
ror
cld
and
inc
insb
add
in
cmp
fists
movsl
loope
clc
or
cld
loope
mov
into
pop
mov
mov
sbb
dec
xor
outsl
fwait
pop
hlt
sub
call
cmp
jns
sbb
dec
out
loopne
icebp
inc
sbb
add
jle
orb
and
mov
pop
xor
ds
pop
mov
add
inc
cld
dec
call
dec
or
ficomps
sub
sub
jns
xor
mov
out
sub
pop
fbld
mov
mov
or
sub
jb
inc
fsubrl
jbe
jecxz
cmp
jmp
addr16
or
jge
cwtl
loop
fiadds
das
and
mov
push
jnp
loope
es
dec
fucom
add
cmpsl
sti
cmp
fwait
out
inc
ret
stos
mov
aam
fists
and
or
ret
in
cmp
sbb
dec
popf
xchg
sub
sbb
test
popa
cmp
out
shll
push
mov
jmp
jge
lods
hlt
pop
and
pop
movsl
push
leave
mov
adc
add
pop
aam
in
das
fwait
pusha
inc
inc
mov
fpatan
cmp
cmp
and
cmp
inc
inc
mov
and
xor
cmp
fwait
push
push
cmp
pop
cmp
aas
cwtl
icebp
sbb
call
lret
pop
les
daa
sahf
add
mov
test
jecxz
pop
jge
addl
out
ljmp
push
pop
and
ret
ret
lret
or
sub
mov
cmc
sbb
jmp
inc
cmc
pop
hlt
mov
push
pushf
sbb
lcall
push
test
int
mov
inc
adc
sbb
les
leave
mov
pop
adc
push
cld
in
frstor
std
pop
xchg
leave
inc
sti
ret
jo
xor
ja
scas
push
sub
stc
hlt
bound
mov
cmc
fwait
sub
es
inc
lcall
mov
mov
out
jb
lret
add
rol
cmpsl
mov
dec
mov
mov
mov
xchg
leave
sub
popf
repnz
xor
xchg
jp
loope
divl
shr
xchg
mov
psubusb
push
das
cmp
in
lcall
loopne
movsl
aam
daa
cmp
jno
cwtl
enter
or
xchg
mov
sbb
pop
lret
outsb
ds
mov
data16
xchg
out
notb
ljmp
out
cmp
fistl
xchg
sbbl
das
jge
jns
ret
rcr
mov
dec
jmp
push
pop
imul
pop
or
cli
rcrl
mov
in
xchg
cli
push
xchg
or
jecxz
dec
push
pop
pop
or
or
out
and
sbbl
add
repz
sahf
cmc
repnz
inc
or
fstp
fidivrl
shl
inc
add
mov
mov
inc
das
sbb
in
scas
std
push
stos
loopne
pop
mov
andl
outsl
jmp
iret
mov
push
jp
loopne
das
mov
lds
mov
dec
jecxz
repz
mov
xor
test
data16
push
mov
dec
sar
sbb
mov
enter
arpl
add
subl
mov
xor
sbb
adc
ds
hlt
out
push
mov
adc
cmp
inc
mov
pop
push
jae,pt
sbb
lcall
inc
testb
mov
jo
add
pop
mov
dec
aam
int3
jo
mov
fbstp
xchg
adc
sbb
test
ret
or
cmp
jecxz
out
hlt
cmp
inc
adc
mov
out
mov
pop
pop
sarl
or
nop
jb
cmp
or
sbb
fstpt
inc
pop
repz
std
inc
mov
mov
xchg
fs
and
push
xchg
push
stc
hlt
test
jle
mov
push
std
cmc
les
pop
xchg
in
pop
adc
fstpl
rcl
and
dec
aad
das
push
leave
jp
dec
insb
or
inc
inc
in
inc
inc
pusha
mov
cmp
das
mov
fsubrl
test
stos
fsubs
in
int
sbb
inc
xor
ja
or
xchg
ret
xor
dec
adc
shlb
lcall
pop
xor
in
inc
adc
adc
cs
rclb
mov
in
movsb
or
test
or
fisubrs
hlt
pop
mov
push
add
dec
xor
insl
inc
bound
lahf
test
bound
inc
aas
shl
push
movsb
adc
loope
les
clc
xor
cli
bound
pop
sbb
cmpsl
add
jmp
lcall
pushf
xchg
cmc
in
jne
jo
and
pusha
jmp
push
es
pushf
lods
fyl2x
push
sbb
push
xchg
sbb
test
sbb
cmp
into
mov
loope
in
cmp
mov
dec
jmp
clc
adc
dec
aam
xchg
sub
shrb
dec
pop
in
xchg
imulb
xlat
repnz
mov
int
mov
fdivrp
loope
in
add
dec
aam
pop
dec
fs
xor
and
mov
lret
loop
ljmp
sbb
sub
sbb
cld
lea
mov
cmc
in
mov
mov
xor
aas
mov
daa
sti
add
out
shll
stos
inc
pop
in
cmp
xor
clc
or
movsb
sahf
cmp
mov
inc
hlt
test
sbb
pusha
out
stos
sub
adc
pop
clc
push
ljmp
pusha
adc
movsl
ret
stos
in
rcll
popf
out
mov
cmp
sti
fs
push
cmp
sbbl
retw
cmovs
xchg
xchg
mov
scas
stc
mov
jp
sbb
icebp
stos
jne
into
test
jle
negl
sbb
mov
jmp
stos
lret
lret
mov
mov
popa
mov
push
arpl
pop
je
push
fstl
mov
jne
mov
test
or
add
add
push
fcompl
inc
mov
sub
adc
fildll
adc
xchg
add
fildl
adc
add
or
sbb
fwait
add
test
outsl
ret
push
hlt
and
add
scas
lcall
outsb
and
xor
out
or
sahf
lds
mov
push
test
push
les
mov
push
xor
mov
inc
cmp
adc
hlt
fsubs
push
int
dec
aad
mov
mov
add
jno
hlt
inc
testb
xchg
lret
inc
call
push
leave
lds
xor
mov
pop
push
inc
adc
sbb
fcoml
inc
movsb
int
scas
cld
int
shrb
cmp
shl
out
and
fcoms
test
sbb
fdivrl
sbb
pop
inc
and
arpl
test
bswap
jmp
or
fwait
int
dec
mov
ss
pop
lcall
and
jae
insb
xor
dec
scas
or
sbb
cld
jg
cmc
sbb
push
imul
cmpsl
cltd
inc
rcrb
xor
fisubrs
pop
inc
or
test
adc
inc
sbb
pushf
adc
add
mov
adc
bound
dec
and
sbb
inc
rcr
aaa
mull
inc
mov
test
push
sub
sbb
push
repz
inc
sti
rol
cmovnp
push
add
push
fdivl
push
sbb
pop
in
js
jno
jecxz
sbb
into
cs
mov
fistps
inc
cmp
xchg
jmp
pop
push
or
cmp
rcrl
movsl
xor
pop
aad
fwait
daa
and
jle
por
fisttps
mov
pop
mov
lods
pop
pushf
or
jb
adc
sti
add
adc
mov
scas
ret
shl
or
and
mov
call
xchg
hlt
jb
xorl
rcrb
xor
icebp
fsts
fldcw
xchg
iret
jae
fcompl
lahf
mov
arpl
rolb
sti
mov
insb
push
jle
das
adc
shll
mov
push
pusha
pop
add
fmull
add
hlt
mov
rcl
xchg
stos
push
sub
je
cmp
fcmovne
xor
sbb
pop
aam
inc
adc
mov
insl
and
nop
sti
idivb
lcall
and
xlat
xchg
xor
fsubr
outsl
scas
aam
inc
cmpsl
repnz
and
scas
add
inc
xchg
jl
sbb
push
jo
cmpsb
loope
loopne
adc
ja
rolb
adc
jge
mov
or
mov
lret
inc
out
mov
mov
jg
inc
mov
push
add
aad
imul
test
dec
push
into
jne
clc
aam
mov
cmp
jmp
enter
mov
dec
in
fidivs
or
lahf
dec
xlat
jge
popa
scas
insb
xorb
je
mov
mulb
mov
mov
push
test
imul
mov
and
fistps
lret
pushf
aad
xchg
jns
not
sbb
sbb
loopne
ja
cmp
mov
adc
jmp
out
mov
loopne
cs
aaa
mov
clc
daa
adc
jae
or
sti
or
mov
or
pop
fadd
out
hlt
repz
adc
or
xor
or
sti
mov
dec
and
mov
cs
into
push
shll
pop
adc
sbb
notl
mov
push
aam
je
repz
mov
ljmp
lahf
adc
movsl
fcoml
mov
rcr
inc
leave
inc
cmp
outsl
cltd
lods
jae
pop
xor
push
int3
cmc
repnz
int
pop
mov
xor
add
cmp
jmp
loope
or
mov
inc
add
mov
or
loope
mov
loop
loopne
sub
xor
add
fcoms
sbb
ret
incl
and
repz
movsl
out
test
pop
adc
mov
or
sti
sub
pop
mov
push
sub
sub
fildll
xor
pop
or
les
shll
ret
sti
jg
es
pop
and
jmp
aad
pop
not
push
fistpl
and
shrl
pop
das
sbbb
jg
or
inc
pop
jo
inc
adc
xor
and
fcomi
rolb
fcmovnu
xor
jg
xor
scas
fisubs
clc
xor
pop
movsb
adc
aad
cs
fcompl
cmp
and
xchg
xchg
cmp
or
xor
cmp
dec
or
cmpsb
in
ja
mov
sbb
out
cmp
mov
fucomi
aas
sub
hlt
js
fcompl
addr16
shll
inc
stc
std
jbe
mov
jl
or
stc
aaa
mov
pop
pop
in
imul
cwtl
mov
cmpsb
js
sarl
stos
mov
xchg
sub
add
aad
pop
in
dec
jnp
shlb
sbb
adc
adc
xor
ss
cmp
orb
scas
mov
loop
jo
sbb
pop
cmp
int3
and
mov
or
push
mov
fnstenv
lea
and
call
pop
sub
repz
xor
and
adc
dec
jbe
bound
mov
or
int3
or
mov
xchg
xor
in
aas
sbb
pop
scas
mov
xchg
jno
sub
repnz
insb
inc
sbb
and
inc
mov
xchg
aaa
fldl
or
sti
pop
add
in
inc
jns
jp
xchg
sbb
sahf
inc
icebp
mov
adc
jp
ret
rolb
mov
loopne
imul
and
sbb
jns
cmp
xchg
sub
movsb
fdivl
rcrl
mov
fcomps
aad
out
sub
es
inc
or
sbb
insb
push
lods
insb
pop
or
das
dec
lahf
or
jne
ret
inc
cmpsl
fwait
int
cli
add
inc
shr
adc
addb
inc
pop
push
pop
cmp
xchg
push
fisubrl
repz
mov
jmp
dec
out
jae
adc
mov
add
push
add
lret
test
ljmp
in
push
movsb
pop
pop
rclb
icebp
pop
add
xchg
movl
and
xchg
adc
aam
out
push
fildl
das
js
push
pop
sarb
aas
mov
dec
fsts
mov
mov
mov
xchg
add
xchg
insl
subl
mov
xor
push
mov
mov
sub
mov
out
pop
cmp
and
idivb
inc
out
aaa
mov
add
call
jl
push
mov
inc
lahf
mov
xlat
je
int3
sti
push
fcoms
adc
cli
int
push
out
or
adc
sbb
js
inc
stc
enter
dec
xchg
sub
pop
loopne
cmp
ljmp
sbb
xchg
sbb
sub
test
inc
jge
fcomi
or
cld
mov
mov
pop
enter
sbb
dec
sub
scas
andl
mov
mov
adc
lods
lea
hlt
pop
incl
gs
add
fcom
aam
je
jnp
cmp
xor
adc
inc
dec
in
ljmp
pop
pop
clc
jne
xchg
insb
mov
pop
or
push
enter
push
sub
cs
scas
inc
mov
shlb
aam
data16
or
pop
int3
in
out
int3
stos
push
push
in
clts
adc
stos
or
sub
dec
scas
out
fiadds
xchg
mov
fcoms
adc
es
sub
imull
call
and
adc
stc
add
lret
fmuls
jo
mov
dec
sbb
cmp
ret
enter
cli
ret
inc
adc
sub
pushf
add
xchg
push
sti
das
inc
mov
push
repnz
cmc
push
icebp
xor
xor
adc
daa
aam
mov
dec
test
pushf
mov
add
mov
stos
push
ret
pop
fwait
adcb
call
pop
xchg
mov
jnp
or
nop
push
xchg
add
add
xchg
fistl
sbb
and
nop
pop
cmp
adc
addr16
sbb
push
pop
adc
fadd
aad
jno
push
xchg
push
sub
cwtl
jge
fwait
adcb
ja
cmp
into
cltd
jp
leave
enter
push
movsl
sub
adc
cs
insb
sti
leave
push
je
pusha
and
mov
push
mov
sbb
test
shll
xchg
daa
xchg
dec
imul
push
out
jae
and
mov
xchg
mov
in
or
mov
inc
rolb
push
mov
pop
jbe
mov
test
out
add
pop
les
push
inc
cmp
jp
movsb
scas
ret
dec
dec
out
sarl
cmp
and
cs
mov
aad
arpl
push
mov
jns
in
adc
add
in
ss
fisubs
imul
sub
push
andl
fs
jge
and
and
dec
in
sub
fwait
imul
and
fcmovnbe
or
in
rolb
lret
repz
xor
xchg
jecxz
cmp
pop
and
sahf
pop
movsb
mov
cmpsb
xchg
lcall
cmpb
lea
enter
out
cmp
sti
cli
aas
xor
test
push
xchg
stos
jl
aad
jb
loope
and
imul
adc
pop
je
dec
mov
jb
lods
fcom
cmp
popf
loopne
cs
jns
jb
sbb
dec
push
ret
xor
mov
ficomps
ja
nop
add
add
pusha
push
mov
movsb
scas
cmp
mov
clc
mov
ret
mov
inc
jb
inc
dec
repnz
pop
cmp
mov
xorb
repz
add
mov
xor
xchg
imul
adc
add
xor
pop
adc
pop
mov
jne
mov
ret
arpl
mov
fisttps
xchg
xor
fcmovbe
pusha
leave
call
int3
cld
ret
popf
mov
loop
mov
popa
or
xor
mov
cld
fcoml
push
outsb
inc
and
mov
push
fs
jae
xor
cmp
out
loope
or
ss
in
adc
rcll
mov
adc
notl
or
sbb
loop
push
aad
sub
mov
dec
outsb
scas
xchg
inc
mov
dec
out
scas
mov
fisubl
adc
shrb
loopne
inc
mov
adc
bound
and
mov
in
mov
push
fs
cs
push
and
jle
mov
ss
sub
es
cmp
adc
jle
sbbb
mov
gs
movsb
xor
inc
mov
xlat
add
jns
mov
clc
rcll
fsts
xor
loopne
pop
mov
mov
cld
testl
out
jno
int
mov
inc
pop
push
cmpsb
in
adc
das
pop
mov
push
call
cmp
lahf
stos
dec
and
xchg
xor
mov
xchg
pmaddwd
mov
sbb
aam
adc
lds
or
repnz
sub
mov
fcmovbe
movsl
das
jne
sbb
rorb
push
sub
test
mov
call
sbb
pop
pop
nop
insl
cmc
xor
pop
sbb
mov
xor
outsl
adc
loopne
mov
cmp
cld
inc
fsubs
inc
mov
in
sar
mov
dec
imul
ljmp
sub
mov
mov
sbb
or
xlat
shl
aas
xchg
ljmp
hlt
xor
dec
xor
push
cmp
into
cmp
sub
dec
fistpll
add
mov
fwait
cmc
sbb
enter
gs
dec
inc
adc
mov
dec
mov
and
jmp
xchg
hlt
add
sbb
test
pop
xlat
pop
sti
inc
aad
mov
xchg
jp
inc
jecxz
clc
jo
loopne
push
and
movsb
aad
pushf
jbe
jae
into
adc
aas
sub
push
aaa
mov
jg
inc
or
lods
enter
pop
push
inc
sbb
jle
jo
lahf
lret
jle
jp
mov
rcrl
mov
out
pop
jg
xor
xchg
jne
neg
repnz
push
iret
xlat
jmp
jge
loopne
int3
repnz
loopne
fidivrl
mov
insl
decb
sbb
push
sub
add
divl
mov
and
jge
lret
fadd
testb
and
loop
stos
push
lods
fcmovb
lret
sbb
cmp
scas
out
push
cmp
iret
stos
xor
sti
aaa
sub
data16
ljmp
das
jmp
add
mov
fwait
mov
sbb
pop
in
xchg
fsubl
les
in
mov
ljmp
adc
xchg
mov
jo
pop
jne
jb
add
adc
les
xlat
add
inc
lcall
mov
ret
xlat
push
loopne
pop
movsb
lret
popa
aad
add
in
mov
xor
fisttpl
push
push
mov
jno
jnp
daa
std
jns
iret
inc
sub
jo
cwtl
pop
cmpsb
fmuls
repz
cltd
push
dec
dec
lcall
stos
lock
and
jae
pop
iret
lea
fistpl
mov
dec
fldenv
mov
das
dec
cmc
push
xor
jp
sbb
xor
mov
imul
push
mov
pop
dec
imul
xchg
add
leave
xor
cld
and
push
inc
push
mov
pusha
sahf
js
int3
imul
fsubp
sub
sahf
cli
mov
jmp
push
cmp
pop
fldt
and
das
jmp
mov
jb
or
ja
and
inc
pop
or
xor
aad
add
int
or
jae
or
in
cs
arpl
mov
sbb
out
shl
xchg
push
mov
in
inc
xchg
clc
push
sub
and
push
enter
cmp
mov
in
idivb
daa
add
shll
pop
add
mov
fwait
xchg
roll
pop
cmp
xor
pop
cmpsl
lret
jmp
push
cmp
fcoml
cli
stos
sbb
dec
dec
cmpl
inc
pop
mov
fisttpll
mov
xchg
shll
in
mov
neg
adc
xchg
fdivp
adc
dec
adc
mov
in
out
mov
xlat
or
or
lahf
popf
fadds
jg
xchg
mov
or
inc
inc
jae
jecxz
inc
sub
clc
dec
fucom
in
cmp
fisttpl
in
sbb
ret
cmp
into
rol
scas
add
xchg
pop
mov
push
mov
cmp
mov
rcl
pop
inc
sbb
mov
pusha
xlat
mov
dec
mov
xlat
repz
pop
xor
sti
mov
add
sbb
call
xlat
sub
cmc
mov
add
fsts
cmp
dec
std
aaa
movsb
cwtl
lret
fists
inc
sbb
pop
sub
jg,pn
or
mov
popf
cmc
fistps
jmp
iret
pop
push
filds
fs
fucomip
jecxz
in
push
sbb
jb
sbb
xlat
jmp
add
xor
xchg
sbb
xlat
fcmovnu
pop
addr16
pop
lods
pop
fwait
pop
sahf
push
fmull
test
jbe
push
imul
push
xlat
xor
or
cmp
jmp
fbstp
pop
ljmp
imul
xor
movsb
sub
repnz
stos
mov
adcb
xor
ljmp
sarb
fistps
xchg
in
and
mov
movsb
js
add
and
outsl
hlt
inc
mov
add
loopne
jnp
hlt
mov
jae
call
aad
cli
pop
sbb
dec
loopne
xor
aad
cld
lahf
mov
imul
cmp
lds
mov
fdivl
dec
aam
mov
rorl
mov
out
enter
add
stc
in
cmp
sub
lock
and
into
std
add
mov
mov
lret
in
test
clc
lret
insb
shll
mov
or
shl
pushf
jo
insb
test
dec
mov
loope
inc
sti
sbb
sbb
adc
fidivs
push
sbb
push
icebp
out
bound
xchg
add
imulb
push
and
mov
out
pop
and
mov
stos
jns
cmp
popf
loope
sub
rcll
aam
or
je
xor
pop
stos
in
loopne
bnd
mov
inc
jo
fcomps
jb
cltd
cmp
mov
int
add
jns
lock
adc
push
adc
cmp
lea
loop
stc
mov
adc
test
inc
fadd
outsb
mov
stc
cmpsb
mov
test
loope
aad
sub
adc
jmp
push
add
nopl
in
sti
push
push
loope
cli
cmp
add
pop
sub
es
mov
and
cmp
rolb
mov
dec
dec
mov
adc
xor
jecxz
inc
out
cmp
sbb
and
dec
repnz
test
pop
test
push
pop
mov
pop
test
cmp
pop
mov
sub
shr
test
xor
pop
pop
pop
insb
cmp
ret
mov
add
in
aad
xchg
ficomps
aas
fisubs
mov
push
dec
sub
out
sahf
dec
movsl
insb
in
add
sub
decb
dec
sub
aaa
aas
hlt
sub
xor
stos
cmpsl
es
mov
sbb
push
sbb
mov
pop
xchg
scas
mov
push
int
or
sub
inc
jne
mov
pop
and
ss
inc
fstl
ds
cmp
and
je
pop
imul
ljmp
xor
and
out
pop
push
or
inc
mov
in
les
mov
aam
mov
adc
ret
and
aaa
adc
pop
adc
jecxz
adc
hlt
jg
sbb
lods
xchg
imul
cmp
clc
and
fmull
xor
scas
xchg
adc
stos
std
das
movntq
sarl
jb
fcoms
jecxz
ficompl
xchg
xchg
dec
sub
testl
fbld
xchg
std
push
mov
shrl
push
xlat
stos
pop
aam
lret
xchg
std
mov
push
frstor
daa
insb
inc
ret
fmul
jo
incl
test
ror
or
xor
loope
aam
add
daa
sbb
clc
jg
push
fdivs
xor
std
or
shrl
pop
jo
rcl
sbb
pop
cs
cmp
sub
lods
adc
jg
stos
test
in
inc
lods
or
sbb
in
or
icebp
shl
adc
inc
jns
cmp
popf
aam
rcll
pop
mov
fisttps
dec
cmp
add
lods
repnz
or
dec
std
jp
stos
or
and
nop
jno
repnz
mov
mov
push
repnz
lock
ja
dec
jo,pt
or
mov
dec
ror
les
jg
sbb
sar
sbb
jbe
sarl
outsl
sarb
xor
inc
add
pop
adc
push
lret
cmpsl
add
dec
adc
mov
insb
ja
xlat
dec
loopne
mov
ja
mov
cmpsl
fldcw
push
aad
orl
pusha
adc
and
ss
push
xchg
inc
bound
lods
stc
daa
out
aam
icebp
mov
mov
xlat
xlat
pop
xchg
xor
sbb
inc
stos
pop
nop
idiv
lea
sbb
xor
addr16
pop
in
out
push
addl
jle
in
lret
sbb
xchg
clc
fisubrs
mov
sbb
popa
stc
push
or
jb
mov
sub
movsl
xor
or
adc
push
add
cmpsl
xchg
data16
jp
xchg
lea
jno
sub
mov
mov
insl
cmp
je
adc
mov
outsb
clc
ret
fistps
lock
dec
js
xchg
cwtl
lods
adc
out
divb
and
ss
loop
sbb
adc
cmp
mov
out
call
pushf
sbb
or
insb
hlt
sub
cmp
inc
dec
outsl
out
movl
cmp
ret
mov
dec
mov
xlat
jae
out
xor
sbb
aas
divl
je
ds
out
out
inc
rcll
xchg
inc
lcall
adc
jecxz
add
enter
sbb
scas
adc
cmp
mov
out
xor
push
sub
mov
xchg
dec
adc
stc
add
inc
mov
and
test
cmp
mov
pop
pop
int
pmuludq
push
test
stos
insb
push
cld
lock
shlb
enter
fistpll
pop
popa
iret
sub
xchg
popf
test
aas
orl
mov
repz
mov
jecxz
mov
adc
sub
movsb
inc
test
mov
popf
dec
arpl
aad
dec
daa
imul
cmp
into
cli
push
mov
xchg
fistl
cmp
aas
mov
xlat
fnstcw
ret
xchg
and
sub
fistpl
and
jo
pop
cmp
and
inc
sub
mull
bound
shl
les
and
bnd
cltd
pop
add
test
add
mov
cmp
adc
loopne
shl
ss
mov
in
aam
aad
rol
iret
arpl
pop
lcall
inc
mov
into
xchg
ret
pop
ret
mov
fs
xchg
push
stos
iret
lahf
loopne
xchg
cmp
aad
outsl
xchg
insl
jl
pop
shlb
les
ja
mov
add
mov
inc
inc
dec
and
dec
loope
lock
xor
mov
loope
fwait
loope
repz
cwtl
int
ret
rorl
sbbb
daa
add
xor
test
iret
nop
cmp
das
maskmovq
xchg
xlat
aas
shll
xor
mov
xor
pop
push
lahf
das
shll
and
pusha
pcmpgtw
and
loopne
pop
jmp
sub
jae
ja
hlt
push
sub
fwait
sub
jl
cmp
xor
push
adc
rorb
adc
popf
ss
fdivrp
sbb
cld
jmp
add
and
push
add
notb
adc
cli
iret
adc
add
lret
cmp
push
inc
or
and
or
and
out
cmp
mov
fidivrs
xor
xor
fwait
push
ret
mov
shrb
enter
xor
dec
xchg
mov
push
popa
ret
dec
add
in
js
hlt
jp
push
repz
xchg
fstpl
xchg
sarl
das
dec
push
cmp
dec
mull
cmpsb
imul
pop
cmp
popf
jmp
mov
jmp
ja
or
mov
dec
loope
add
push
lea
notb
jno
jecxz
or
mov
dec
cmpsb
cli
add
jp
sbb
add
adc
sti
fimull
stc
setb
xchg
mov
and
push
daa
jge
jecxz
mov
mov
xbegin
fnstsw
inc
cmp
pop
sub
or
ret
outsb
push
pop
in
shlb
inc
hlt
dec
out
test
divl
sbb
mov
mov
dec
xchg
jmp
repz
je
xchg
mov
jle
dec
loop
pop
filds
fwait
inc
adc
pushf
mov
add
in
xor
xchg
cmp
xchg
pop
dec
xor
decl
lret
pop
aaa
adc
adc
cmp
outsb
popf
movsl
pop
pop
push
mov
sbb
aam
adc
adc
jno
and
push
std
shll
add
mov
xor
adc
stos
out
cmpsb
mov
mov
xchg
pop
cmpsb
mov
test
imul
loopne
jno
cld
adc
repnz
mov
add
push
adc
push
push
dec
repz
std
xchg
adc
aam
shrl
mov
in
sbb
jecxz
cltd
das
cltd
mov
mov
lret
and
mov
into
loope
mov
lret
std
in
lahf
dec
xor
mov
mov
loopne
cwtl
xlat
jo
cmpb
fbstp
lds
mov
cmp
inc
and
out
mov
mov
data16
shll
std
les
sbb
fsub
aad
out
out
mov
xlat
jecxz
rcll
xor
sbb
mov
jae
fwait
and
add
adc
lock
jle
test
mov
mov
dec
xlat
dec
daa
pop
or
enter
mov
inc
mov
inc
xor
mov
cmp
mov
scas
enter
jmp
incb
sub
out
fsubrs
xor
sbb
fs
out
repz
sbbb
popf
adc
arpl
dec
gs
lret
jnp
arpl
and
xchg
into
insl
mov
xchg
sbb
fmuls
imul
adc
stc
in
add
fs
aam
repnz
arpl
xchg
add
test
dec
iret
pop
cmp
ss
jp,pt
popa
and
xor
je
xchg
jecxz
mov
lds
lahf
add
sub
inc
movl
fisttpll
cmp
aam
aad
loopne
or
fidivrl
xchg
mov
mov
daa
adc
dec
std
cli
pop
inc
mov
mov
mov
add
popa
out
xlat
cmp
sub
roll
xlat
or
xchg
cmpsl
mov
mov
mov
jge
ljmp
xchg
iret
inc
into
mov
mov
aam
sarl
jecxz
xchg
shrl
scas
or
mov
fidivrl
movsb
movsb
cmp
push
pusha
lret
push
loopne
mov
mov
in
lods
mov
outsb
add
mov
and
fs
or
fistl
cld
push
cmp
scas
cmp
adc
mov
std
xor
stos
adc
lock
adc
in
add
ss
adc
cs
jns
aaa
add
push
mov
xor
pop
sarl
dec
dec
out
adc
and
je
xor
lock
push
fnstsw
sti
imul
dec
pusha
ficoml
test
ss
pop
shrb
repnz
pop
xchg
and
imul
xor
nop
out
test
jecxz
dec
ds
add
adc
imull
pop
shr
lods
add
jb
adc
pop
dec
aam
mov
lods
adc
pop
clc
fistl
pusha
push
jg
sbb
in
adc
call
loop
out
jmp
mov
and
fstpt
out
or
push
aam
jne
scas
fildl
test
push
xor
aad
jne
and
or
clc
sub
inc
xor
lret
ret
or
repz
sbb
ret
mov
inc
and
sar
lahf
cld
adc
rcll
enter
jo
out
cmp
xlat
std
sbb
popa
in
jmp
shll
fmuls
lods
in
xchg
push
sub
rcl
and
or
stc
out
push
mov
lods
inc
aas
call
repz
fs
jecxz
mul
sti
insb
pop
pcmpgtb
shl
dec
idivb
dec
ret
loope
call
mov
test
rcr
icebp
out
neg
in
sub
iret
adc
out
pop
mov
lock
rcll
loop
loop
add
pop
sarl
xor
aas
shl
out
out
mov
sbbb
xor
sub
mov
pop
lods
xor
xchg
ja
pop
std
roll
mov
fldcw
cmp
cld
sar
dec
loop
sbb
dec
cmpsb
hlt
cmpsb
in
dec
repz
xchg
sbb
mov
insb
scas
xchg
sti
push
jno
dec
or
pop
xor
pop
mov
lret
cmp
aam
inc
xchg
sub
adc
add
fidivs
or
loopne
push
hlt
mov
or
mov
sbb
mov
mov
cli
das
fst
push
lds
push
bound
adc
jnp
loop
inc
lock
shlb
lock
sbb
ficoml
enter
or
pop
add
xor
xor
dec
xchg
daa
fmull
mov
je
add
mov
sub
xor
push
das
xchg
repz
sub
dec
xor
push
cmc
cmpsb
data16
sbb
shrl
xor
adc
mull
or
sub
xlat
push
decl
jge
xchg
sub
ret
mov
push
stos
add
push
or
push
cmp
fidivrl
sar
mov
int
dec
jecxz
shll
lret
add
add
ljmp
in
add
inc
out
xchg
jle
sbb
lahf
popa
scas
jge
enter
dec
mov
scas
jge
cltd
stc
push
push
repnz
shll
call
enter
hlt
mov
cltd
sbb
jo
push
jecxz
cli
pop
sbb
std
scas
push
push
xorl
fistpll
pop
in
daa
jge
repnz
ret
clc
out
sub
dec
mov
and
push
iret
adc
push
aad
push
je
xchg
sbb
rcrb
jl
aaa
fadds
mov
adc
les
cmp
fstps
or
or
sub
out
mov
das
sti
pop
dec
cwtl
or
inc
rdmsr
and
lock
mov
ret
inc
and
or
xor
rorl
cmpb
jb
scas
scas
adc
fldl
nop
dec
leave
fnstsw
mov
clc
mov
jl
xchg
les
aaa
loopne
minps
push
clc
adcl
outsl
jnp
mov
stos
push
sbb
dec
sbb
push
mov
test
pop
lea
ds
mov
jle
or
mov
mov
xchg
lret
sbb
test
add
out
jno
lret
pop
loopne
imul
mov
adc
sahf
inc
sbb
fcmovu
ficoms
push
sub
mov
int
mov
rcl
xchg
pop
mov
mov
inc
pop
mov
mul
nop
iret
lods
and
enter
aam
mov
sub
pop
cli
dec
ja
pop
and
xchg
es
ja
add
nop
paddb
jle
add
xor
das
dec
dec
and
pop
addl
sbb
mov
mov
inc
cmp
and
push
pushl
call
cmc
comiss
jnp
movsb
fidivl
push
lret
addr16
out
aaa
xor
in
jmp
or
ds
jo
out
cmpsl
roll
in
push
cmp
bound
push
iret
xor
inc
test
add
jae
xor
or
or
js
fstpl
adc
loopne
push
xchg
arpl
aad
fstp
mov
adc
jae
jmp
ficompl
bound
ljmp
sub
enter
mov
sbb
repz
insl
and
xchg
mov
pmulhuw
outsl
xchg
add
scas
insl
xchg
sbb
rorl
push
andl
mov
dec
movsb
fstpt
rorl
mov
push
xchg
adc
cltd
xor
mov
out
outsb
xor
iret
cld
xlat
mov
lods
in
cmpsb
adc
lods
aam
in
or
dec
push
ret
ljmp
repz
add
les
aam
or
fwait
add
ret
xchg
std
fisttpl
icebp
fwait
rcrl
pop
jnp
or
inc
pop
sbb
es
and
sub
test
iret
mov
sbb
out
push
xchg
ljmp
and
sub
dec
repz
and
int3
ss
xlat
ret
mov
scas
into
loope
loopne
jmp
push
jno
inc
adc
lea
inc
pop
sbb
jb
int
filds
rcll
xchg
fcomi
mov
inc
fstl
das
loopne
add
sbb
jge
lea
and
fs
test
xor
jno
pop
subl
push
or
mov
into
ret
xor
divb
mov
mov
xlat
cwtl
insl
loope
jne
ss
inc
pusha
fsubs
cmp
call
insb
xor
ret
insb
pushf
sub
shrb
ret
adcl
pop
rcrb
mov
iret
mov
push
push
enter
adc
cmpsl
xlat
or
flds
push
addb
inc
push
or
test
dec
sbb
mov
xor
pop
aam
lret
fs
scas
lret
add
xlat
int
cltd
and
xor
or
int3
push
scas
iret
add
or
clc
cwtl
mov
out
add
inc
in
fdivrl
loopne
dec
iret
jp
repnz
sub
sbb
jle
mov
jmp
inc
and
iret
pop
aaa
lea
mov
shl
aad
xchg
icebp
sub
lret
sbb
mov
mov
dec
jbe
clc
idivl
pop
hlt
or
push
clc
in
mov
sti
mov
clc
inc
cmc
mov
dec
mov
movsl
rclb
incl
cli
hlt
sub
out
popf
jecxz
adc
in
in
xor
cmpsb
loopne
xchg
add
add
or
push
das
dec
inc
inc
pop
aam
mull
inc
xchg
cmc
cmp
fs
test
idiv
xchg
aaa
push
push
loop
mov
xchg
fidivrl
fisttps
or
add
sbb
pop
aas
pop
arpl
push
outsb
xchg
nop
sar
mov
inc
dec
and
xchg
imul
cmp
or
add
dec
mov
mov
ja
notl
iret
loopne
xchg
xor
mov
fistps
mov
stos
mov
idiv
repz
fsubr
es
div
mov
and
or
inc
dec
ds
int
jae
mov
iret
sub
push
outsl
shlb
adcb
pop
jb
and
int3
sub
mov
dec
comiss
repz
popf
pusha
shl
sarl
mov
clc
and
jbe
iret
rcrl
sar
xchg
loopne
nop
shll
mov
sarl
out
push
fwait
xchg
mov
fsubr
pop
shlb
add
jge
in
adc
sub
jecxz
sbb
push
adc
xor
mov
fistpl
mov
ret
sar
sti
ret
std
xchg
adc
mov
inc
test
adc
jae
hlt
popf
pop
add
aad
lahf
inc
sub
sti
js
lcall
test
gs
hlt
std
repz
adc
je
sahf
mov
pop
add
repnz
pop
jecxz
and
fisubrl
xor
add
ret
jecxz
jmp
cmovl
fwait
pop
push
test
dec
in
mov
mull
fnsave
xchg
sbb
pop
mov
sar
das
mov
repz
ret
call
repnz
adc
xchg
add
dec
xor
sub
iret
pop
add
fadds
lods
cld
cmpsb
shll
cvttps2pi
fcoms
mov
push
iret
dec
std
add
jnp
call
or
jno
aam
pusha
sbb
sub
mov
imul
int
add
mov
mov
sub
mov
rolb
xor
gs
in
hlt
mov
rorl
mov
lahf
ds
mov
lock
jo
cld
das
pop
xor
imul
push
int3
add
jmp
mov
ret
mov
jg
std
push
ljmp
testl
sbb
call
addr16
loope
pop
popf
dec
pusha
in
into
je
sbb
xchg
out
stos
fcomps
jp
sahf
pop
pop
mov
pop
jae
insl
pop
das
push
cld
inc
adcl
fidivrs
mov
xchg
push
into
clc
xlat
test
mov
add
inc
fs
fidivrs
sar
pop
cmp
pop
add
frstor
repnz
fsubr
mov
sbb
cmp
adc
mov
aam
adc
aad
scas
stc
mul
push
or
jo
pop
idiv
ds
pop
popa
adc
dec
in
sbb
dec
dec
call
shlb
fsubr
es
insb
sti
into
push
icebp
ret
stos
push
pop
fs
lock
das
xchg
cwtl
movsl
insl
xor
and
ficoml
and
testb
cmp
xchg
adcb
daa
and
aas
nop
aam
fdivl
sbb
cli
imul
enter
inc
ret
mov
mov
daa
mov
test
andb
je
test
ds
div
es
mov
lret
out
into
sub
pop
loop
dec
push
cs
int3
mov
testl
sbb
ret
inc
nop
or
sti
xor
clc
inc
fistps
mov
clc
mov
popf
mov
push
movsl
jmp
adc
jbe
and
xchg
negl
loop
or
out
fldcw
jnp
mov
jb
arpl
repz
xor
and
gs
dec
mov
sbb
hlt
sub
fwait
inc
inc
jmp
bound
push
push
sbb
add
cmpl
mov
rcl
xchg
stos
jae
movsl
mov
addr16
mov
dec
fdivs
cmc
fidivrl
jae
and
fcompl
mov
call
jmp
clc
mov
aam
sbb
imul
js
cmp
lds
jl
cs
xchg
mov
test
pop
in
push
jno
daa
sub
out
sete
adc
adc
push
mulb
out
mov
xor
or
js
orl
add
fnstsw
mov
decb
cld
pop
les
into
adc
add
ja
sti
iret
sahf
out
outsl
sbb
push
mov
fdivs
test
testl
scas
jge
cmp
add
imul
cmp
lcall
lret
shlb
or
stc
push
std
mov
mov
neg
xor
xchg
xchg
pushf
and
add
inc
imul
push
enter
loop
fiaddl
neg
adc
mov
pop
cmp
push
mov
jmp
mov
iret
scas
mov
ja
scas
lock
sbb
daa
imul
stos
cmp
mov
xchg
repnz
push
insb
xor
repz
sub
mov
pop
sti
mov
lret
movsb
adc
sahf
jmp
sti
sahf
pop
lods
adc
push
or
pop
cs
jo
shll
push
loopne
xlat
incl
cltd
arpl
pop
and
push
push
add
cmp
mov
push
scas
xor
xor
cmc
sbb
lcall
stos
xor
cmpsl
push
lods
out
jmp
arpl
jge
popf
jecxz
mov
cmpsb
ret
loopne
or
push
loopne
xor
jp
dec
sub
add
inc
or
add
pop
les
js
xchg
mov
inc
adc
add
push
xor
das
inc
inc
repz
or
cld
stos
mov
pop
mov
sbb
xor
lcall
leave
jp
aam
mov
jbe
inc
stos
inc
sbb
xchg
mov
cmc
jg
xor
arpl
sbb
or
mov
cld
iret
jae
adc
jo
dec
fadds
iret
daa
notb
in
xchg
cmp
pusha
ret
dec
push
call
insl
in
es
jnp
pop
es
stc
into
mov
int3
xchg
push
xchg
fisubl
adc
or
dec
cld
sub
lcall
lds
fidivl
sbb
lret
mov
clc
mov
imul
cs
push
push
sbb
fcmovnbe
in
jl
adc
pusha
leave
lcall
push
lret
jg
xorl
fnsave
aam
pop
int3
and
shrb
push
out
daa
orl
sti
cld
faddp
bound
bound
sbb
xor
call
leave
pushf
clc
sar
inc
xchg
mov
inc
and
mov
loopne
dec
dec
push
add
pop
out
loope
insl
pop
stos
insb
or
jmp
mov
pop
les
adc
mov
test
mov
aam
sub
xchg
cmpsl
ret
das
and
inc
mov
sarl
mov
xchg
sub
stos
and
je
out
push
das
cltd
sbb
xchg
mov
cld
pop
div
mov
jle
scas
stos
push
lock
jl
aaa
push
cmpsb
mov
mov
xchg
popl
ds
mov
add
pop
hlt
xor
rorl
in
in
add
lea
out
in
cmp
rcr
push
ret
fxch
jno
add
pusha
jne
das
dec
cmp
sahf
inc
jle
pop
lret
and
mov
sti
jecxz
addr16
shrl
les
mulb
sti
imul
cs
movsb
pop
jge
leave
xlat
cmp
fisubl
and
adc
sub
sub
loope
adc
fildll
insb
add
pop
int
jo
int3
iret
xchg
sub
inc
rcr
fiaddl
cmc
shr
adc
inc
fmuls
lret
movsb
dec
aad
and
lods
mov
inc
lds
sub
loopne
ljmp
std
addr16
iret
addr16
pop
add
inc
loope
fildll
inc
jne
and
inc
jns
push
mov
mov
repz
mov
lahf
loop
fdivl
ret
sbb
cwtl
imul
aad
imul
imul
xor
imul
dec
jb
aad
sbb
repz
imul
iret
rolb
sbb
repz
out
repz
pop
mov
push
dec
xor
mov
jae
les
inc
repz
stos
outsl
xor
adc
jo
fadds
and
lret
add
sbb
xchg
repnz
adc
or
pop
js
push
addr16
sarb
lcall
dec
cli
stos
pop
inc
mov
lods
neg
mov
scas
test
mov
loopne
mov
aam
mov
fnsave
jo
mov
jg
mov
lds
inc
push
mov
fdivl
cmp
push
and
jnp
jns
or
daa
out
push
pop
loope
sahf
and
fnstsw
insl
sti
out
test
int3
mov
sbb
div
xor
and
xor
repz
in
ret
test
or
shlb
inc
push
push
loope
retw
int3
test
dec
test
mov
std
aad
out
mov
adc
lret
fisubs
negl
and
imull
and
xchg
xchg
dec
ret
push
insb
clc
dec
pushf
cmpsb
inc
pop
fistpll
inc
sub
add
inc
cs
jae
add
int3
dec
xchg
mov
or
xchg
mov
pusha
jmp
add
push
mov
mov
das
mov
negl
stos
mov
push
jl
lea
aad
dec
inc
aam
xor
clc
faddp
xor
cltd
mov
jecxz
test
pop
int
sub
mov
call
cmp
mov
shll
repz
push
clc
or
stos
jns
dec
aaa
jge
notb
and
add
sub
das
fisubl
inc
sar
ror
lds
push
cmpsl
addr16
inc
insb
push
mov
aam
dec
dec
xchg
cwtl
lea
pop
push
ja
in
xlat
rcl
ss
xor
and
inc
pop
adc
inc
mov
mov
cmpsl
icebp
fnstcw
scas
mov
call
into
mov
jnp
lahf
dec
adc
shrl
aam
mov
jle
rcrb
xor
stos
in
and
pusha
jecxz
sub
cmp
fcomi
imul
lcall
ljmp
sub
jns
push
mov
inc
jl
inc
mov
sbb
sbb
repnz
std
aam
jbe
lret
sahf
lock
stos
mov
les
jmp
xor
dec
jmp
push
inc
imul
cmp
cmp
inc
push
negb
insl
aas
adc
bound
jp
xor
pop
das
aam
fidivl
lods
inc
rsm
mov
sti
dec
add
fistl
rcl
mov
nop
cmp
filds
adc
shl
pop
push
cmc
into
mov
jge
adc
pop
or
add
jae
dec
jecxz
testb
aas
mov
repnz
pop
jle
stc
js
fdivrp
add
orl
jmp
call
imul
push
inc
imul
divl
xchg
lea
ljmp
and
add
filds
mov
mov
push
imul
addr16
outsl
jns
and
push
aam
ret
push
push
fs
dec
xor
or
popa
es
outsl
pusha
test
inc
lods
dec
pop
jo
sub
insb
push
cmpsb
mov
pop
mov
cs
xlat
mov
adc
sbb
sbb
cltd
inc
and
pop
mov
mov
adc
das
pop
mov
mov
leave
ret
pop
in
add
add
scas
in
cs
sbb
jo
or
je
pop
dec
cwtl
dec
shl
mov
cmp
sbb
cmp
stc
mov
rcll
clts
mov
dec
push
jbe
push
mov
mov
aas
push
shlb
test
xchg
popa
lahf
mov
shlb
ret
push
dec
pop
xor
je
jns
mov
jmp
dec
lock
ss
mov
and
div
inc
cld
xor
jecxz
nop
mov
mov
push
shrb
pop
sub
xchg
cld
outsb
mov
ljmp
sbb
fsub
push
xchg
push
dec
and
loopne
sbb
in
out
in
hlt
sahf
sub
outsl
cs
inc
jle,pt
icebp
lcall
pmaddwd
hlt
mov
negb
or
dec
nop
or
jne
clc
lods
xchg
and
or
xor
cmp
mov
into
pop
push
cmpsl
jl
push
sahf
je
hlt
fdivs
clc
or
push
lahf
and
iret
dec
movsb
lahf
mov
into
out
sbb
sti
jae
dec
loopne
dec
loop
cs
adc
mov
daa
jle
int
fadds
xchg
inc
cmpsl
mov
xlat
mov
adc
lds
fucomip
xchg
repz
sub
mov
call
jg
aas
pop
aad
into
scas
and
loopne
and
sub
daa
sbb
cmpsl
or
xor
jge
mov
dec
fmull
cli
aam
js
jns
dec
mov
test
sub
jns
movsl
push
jne
push
jae
and
mov
dec
fbld
inc
cltd
fiaddl
push
iret
iret
xchg
int3
fistpll
pop
mov
jge
xlat
push
push
mov
in
add
scas
ret
adc
sub
pop
incl
cld
adc
mov
loope
xlat
cmpsb
and
pop
mov
mov
shrl
jl
jb
mov
pushf
jnp
sbb
lock
or
pushf
inc
rcrl
jnp
inc
je
xchg
mov
aaa
or
subb
fistl
xchg
ret
clc
ret
xor
mov
fmull
sub
scas
mov
aam
adc
pop
jl
ret
xor
pop
enter
fcoms
mov
cmp
in
inc
mov
inc
add
push
xorl
cld
lcall
pop
jbe
cld
nop
jl
std
mov
out
shll
ss
dec
or
cmpsb
inc
nop
aas
jb
sub
mov
out
daa
fnstsw
clc
jmp
nop
or
insb
pop
flds
adc
cltd
nop
nop
and
dec
mov
fsubrs
pop
ret
cltd
and
scas
jg
rorb
jle
out
cld
mov
hlt
pop
add
pop
fimull
xor
jecxz
arpl
bound
fnstcw
stos
xor
ret
inc
jb
cmp
ljmp
xchg
div
and
enter
and
aad
push
fstps
inc
sbbb
shlb
mov
jl
xchg
fsub
and
pop
or
pop
shl
and
mov
mov
mov
mov
jle
push
testb
cmp
cmp
cmp
mov
out
mov
xorb
cli
mov
fwait
and
leave
out
popa
mov
cld
cmp
pop
mov
push
xchg
dec
mov
shll
and
mov
ret
add
xor
call
clc
dec
and
sbb
inc
dec
ds
jmp
xchg
pop
mov
lcall
jnp
sub
divb
sub
mov
sahf
pop
rorb
mov
orl
stc
add
int
xchg
std
jno
sarb
aad
nop
pop
enter
xchg
aaa
adc
jl
and
or
push
jno
shl
fdivrp
add
push
enter
sbb
mov
pop
push
push
das
sbb
pushf
clc
loope
jno
sbb
addl
in
into
dec
sti
insl
loope
push
inc
pop
jbe
or
fistpll
or
xor
fimuls
and
insl
in
popa
push
xchg
xchg
adc
mov
jne
pop
push
xor
loopne
jmp
push
push
pop
adc
jbe
outsl
fidivrs
std
pop
in
xlat
xor
xor
loope
call
or
jecxz
bound
cmp
sbb
mov
push
cwtl
js
andps
pop
jmp
orb
lret
imul
ret
sub
lods
je
decl
fisttpl
rol
shlb
pop
push
arpl
repz
rcr
dec
out
and
adc
mov
cs
mov
movsl
cs
and
push
ljmp
movl
jecxz
mov
mov
repz
cld
inc
pop
sti
jae
popa
push
icebp
add
cmpsl
fmulp
jle
push
insl
insb
and
fildl
xorb
adc
imul
adc
push
fwait
sbb
and
inc
pop
pop
out
je
int3
mov
inc
add
mov
cwtl
dec
inc
pop
ret
out
xchg
sahf
fsubrp
push
sub
aam
xchg
cltd
nop
hlt
lods
cmp
std
dec
jns
xchg
mov
hlt
dec
dec
std
xor
fdivr
aam
fdivrl
and
sbb
icebp
lods
cli
adc
jmp
mov
stos
jl
cltd
fistpl
xchg
push
mov
in
xchg
imul
ss
repnz
mov
scas
xor
movsb
jo
lahf
mov
pushf
xchg
xchg
inc
sbb
outsb
add
and
inc
adc
or
cmpsl
sub
adcl
sbb
mov
enter
lcall
mov
sub
add
inc
xchg
in
mov
test
aam
push
pop
fs
cltd
jbe
scas
dec
xchg
mov
adc
subl
out
es
pop
jno
into
jo
dec
out
test
and
sarl
push
ss
pop
mov
aam
xor
mov
adcl
fimull
push
sub
mov
or
mov
hlt
add
mov
jl
jg
lahf
mov
in
mov
jbe
inc
sbb
or
mov
test
rcrb
mov
jge
divl
mov
adc
xchg
and
sahf
pop
je
fisubl
in
xor
in
jne
and
icebp
or
subl
push
adc
dec
ja
cmp
and
lods
aaa
jo
adc
mov
sub
sbb
bound
sub
leave
mov
and
out
jmp
lock
fidivl
out
mov
iret
je
ljmp
mov
ja
loopne
xorb
or
jecxz
dec
xor
cmp
das
shll
cmp
adc
adc
fisttps
add
mov
fbld
push
and
xor
mov
sarl
shll
repz
mov
in
adc
stos
mov
and
fistl
or
fs
add
popf
fcmovnu
push
or
xchg
mov
movsb
outsb
loope
jns
out
call
mov
ret
push
fisubl
jle
movsb
das
loopne
xor
popa
leave
push
inc
mov
inc
gs
push
sub
imul
out
sbb
fbld
daa
sbb
push
and
mov
ret
daa
push
jge
int3
adc
or
or
add
cmp
roll
in
add
push
shlb
add
pop
xor
jmp
repnz
mov
pushf
imul
xchg
pop
stos
push
push
inc
sbb
mov
jnp
and
div
mov
es
mov
mov
int
sahf
dec
lret
ljmp
sub
pop
jmp
or
xlat
pop
sbb
adc
fisubs
add
push
movsb
mull
add
test
jcxz
movsb
pop
rcrl
lret
std
add
cmp
fistps
fcmovnu
mov
enter
mov
js
sbb
fldt
jne
das
std
gs
adc
pop
out
jae
mov
xor
cmp
sbb
push
into
fstl
push
lret
js
push
icebp
in
jb
iret
jp
cltd
add
sbb
push
jmp
adc
fstpl
jecxz
into
and
inc
push
xor
test
jmp
dec
xchg
aam
lret
or
and
or
pop
stc
fisubrl
mov
dec
stos
push
pop
js
cltd
mov
xchg
sbb
inc
sub
lods
lock
jne
mov
test
sub
rcl
xchg
push
push
lods
inc
out
movsb
jne
sub
jnp
outsl
mov
sti
inc
mov
ss
loope
jo
mov
add
mov
mov
dec
cwtl
mov
cmp
les
ret
push
mov
mov
push
mov
scas
fistl
or
movsl
mov
mov
pause
fwait
inc
fwait
adc
rcl
push
mov
inc
das
js
loope
lret
movsl
aas
inc
lock
push
dec
mov
pop
lahf
pop
mov
xchg
xor
lahf
mov
outsl
sti
sub
xchg
inc
pusha
xchg
bound
adc
repnz
nop
notb
addr16
sub
xchg
and
cs
fnstenv
fimuls
mov
adc
adc
fcomps
jne
add
std
push
popa
not
out
sti
push
xor
push
and
sbb
das
hlt
test
sbb
pusha
call
push
in
negb
dec
aaa
cli
inc
xchg
das
dec
cmc
fldl
xor
dec
lahf
or
gs
hlt
int
sub
pusha
adc
sarl
lahf
dec
aaa
xchg
push
aam
cmc
bound
movsb
aaa
add
sub
xorl
out
sbb
dec
outsl
lcall
femms
pop
adc
sub
jmp
pop
pushf
fs
stos
cmp
cmp
inc
inc
cli
js
or
lds
xor
mov
or
aaa
out
adc
jne
popf
call
sbb
test
outsl
sbb
nop
out
dec
xor
loopne
fst
adc
push
leave
daa
mov
pop
or
inc
dec
mov
jge
int
fwait
and
fcomps
lods
mov
out
shl
sahf
fs
sti
aas
and
in
mov
mov
fadd
stc
push
movsl
mov
je
jnp
push
mov
push
cmpsb
mov
mov
dec
fiadds
data16
sub
imul
mov
dec
sbb
pusha
mov
idivl
add
jecxz
mov
cli
scas
dec
ret
xchg
sub
cmp
mov
sbb
xchg
test
dec
xlat
in
lods
cmp
cwtl
xor
fsubrs
icebp
add
iret
mov
sbb
xchg
daa
jno
aas
and
push
or
ret
xchg
test
loopw
dec
add
arpl
ret
clc
js
adc
xor
imul
pop
in
mov
add
lret
scas
or
push
and
mov
xchg
aaa
xor
mov
mov
arpl
mov
push
inc
mov
adc
xchg
inc
inc
and
push
js
pop
enter
pop
xchg
rcrb
outsb
rorb
cmpsl
mov
sub
add
hlt
mov
pusha
sub
and
push
or
or
test
and
mov
ja
xor
cmp
aaa
mov
adc
adc
push
aad
insb
outsb
inc
jl
repz
stc
es
jo
pushl
add
xor
iret
clc
add
out
clc
and
jecxz
xlat
shr
shlb
ror
push
divb
push
pop
hlt
pop
clc
cmp
aas
rcrb
xor
repz
fwait
mov
leave
notl
movsl
aas
shll
cmp
jb
inc
jns
fsubs
pop
sahf
jmp
sub
push
mov
popf
add
fs
shrl
out
inc
mov
popl
add
rcll
imul
push
notb
sti
outsl
cld
sti
shrb
wbinvd
lods
mov
insl
mov
pop
lret
xor
and
jecxz
popa
sub
push
xchg
fidivl
aas
in
fs
lock
adc
mov
sbbb
pusha
jmp
test
or
aaa
fcomps
xchg
or
push
or
mov
push
cmpsb
mov
icebp
fcomip
fdiv
scas
imul
sub
cli
sub
inc
jnp
adc
mov
inc
sub
lret
mov
dec
mov
and
ds
sub
jmp
iret
shll
adc
lret
sub
ficoml
cmp
imul
push
pop
frstor
xchg
sbb
into
push
push
rolb
and
jns
inc
mov
roll
adc
xchg
and
mov
push
sbb
sub
xor
cmp
aad
insl
jl
aad
les
shl
repz
or
sbb
lret
jne
xchg
fidivl
add
stos
pop
add
es
lock
xlat
jge
stos
imul
out
or
mov
lahf
and
pop
fwait
push
push
idivb
cld
into
sti
mov
lods
xor
inc
nop
push
insl
fsubp
lods
xchg
test
movsb
cld
dec
iret
aas
lods
lret
icebp
inc
rorl
xchg
int
jl
mov
ja
xchg
rclb
mov
into
aam
leave
push
push
add
dec
mov
loop
pop
xchg
jno
in
jnp
fiadds
in
popf
dec
std
jecxz
stc
xchg
xchg
push
mov
out
jecxz
sub
mov
xchg
call
repz
out
fwait
repz
test
call
ja
xchg
aam
sub
jnp
sahf
jae
outsl
pop
sti
daa
sbb
jbe
movsl
xor
jecxz
addr16
fwait
mov
hlt
jmp
lods
fs
sti
mov
sbb
leave
sbb
fwait
push
push
pop
sub
sbb
xchg
mov
mov
orl
xor
push
lahf
cmp
add
push
mov
sbb
cld
mov
std
fsts
jecxz
or
jnp
subl
xchg
pop
ficompl
sbb
or
add
imul
push
adc
les
push
stc
ljmp
jge
ret
mov
out
into
mov
repz
andl
loop
mov
xchg
icebp
repz
and
add
jb
or
std
and
repz
in
int
popf
cs
xchg
aas
sub
pop
push
pop
pop
inc
mov
mov
adc
mov
stos
pop
es
out
jns
push
sub
rorb
or
out
jno
arpl
and
fwait
adc
mov
xlat
jg
add
scas
movsb
or
sahf
cmp
cmpsb
dec
cmc
imulb
sbb
push
and
icebp
cmp
inc
fidivl
sbb
add
out
push
mov
push
hlt
cmp
push
sub
pop
push
in
shl
std
icebp
in
push
shlb
push
fnstenv
xchg
sub
and
jo
xor
adc
js
outsb
fdivrl
clc
fldl
clc
cmp
inc
adc
call
ret
ficompl
repnz
loopne
add
push
cmc
test
pop
push
insb
sti
mov
ret
push
jo
cmpsb
cmp
loop
sub
pop
and
adc
sbb
jmp
aaa
mov
add
push
fisubs
add
popa
xor
and
mov
mov
jmp
fstpl
inc
adc
lret
in
mov
or
dec
seta
xchg
and
inc
adc
repz
enter
jb
ljmp
loope
cmp
mov
dec
adc
lds
fcom
daa
mov
lahf
dec
push
test
in
jns
movsl
pop
sti
sbb
stc
push
sbb
aad
pop
mov
in
loope
enter
addl
xchg
stc
mov
push
mov
or
xor
fsubs
ljmp
test
das
fwait
das
xor
inc
add
xor
nop
pop
add
cmp
jecxz
repz
imul
dec
mov
lods
aaa
or
in
cmc
inc
dec
pop
shl
inc
sbb
jge
iret
lods
ret
inc
in
je
and
sub
push
xor
mov
push
xor
enter
popa
jmp
cs
and
outsl
test
daa
adc
lods
jae
rcrb
xor
lcall
jo
dec
repz
adc
out
aam
pop
inc
jo
in
and
std
cmp
inc
or
loope
ret
mov
dec
mul
enter
mov
dec
push
ljmp
mov
and
test
dec
cli
pop
cmpsl
add
hlt
fidivl
bound
fs
push
mov
call
sbb
cld
mov
jnp
sbb
xchg
cwtl
jb
xchg
and
lret
out
dec
sub
adc
rcl
sbb
push
imul
sbb
mov
jecxz
shrb
mov
push
fildll
jl
shrb
adc
jl
not
mov
insb
cmp
xlat
mov
scas
cmp
dec
aas
pusha
inc
push
jae
mull
lock
add
or
iret
pop
jns
cmp
mov
fildll
xlat
aad
add
jl
cmc
loope
stc
idivl
dec
in
movsl
dec
push
test
xchg
fsubrp
fs
dec
repnz
pop
or
fstps
rcrl
lahf
shrb
pop
test
aad
ljmp
and
ja
adc
adc
mov
sbb
add
int
fucomp
daa
in
scas
call
str
xor
dec
bound
loope
jge
outsl
cmpsl
xchg
push
into
out
testl
enter
add
mov
jne
or
push
arpl
and
pop
aam
inc
in
adc
ret
sbb
xchg
jg
sub
cmp
dec
pusha
or
out
xor
mul
mov
enter
add
pop
push
in
aas
aas
bound
mov
adc
mov
push
jle
aas
sbb
xchg
std
jecxz
daa
mov
sahf
pop
cmc
fiaddl
jl
xor
gs
xchg
out
jne
jmp
jbe
cmp
mov
push
sbb
pop
ja
push
adc
pop
fbstp
push
hlt
xor
add
out
sbb
nop
pop
jmp
shll
fsubl
pop
or
insl
pop
sub
sub
call
push
mov
enter
fwait
das
adc
dec
pusha
pop
je
inc
dec
inc
stos
stos
clc
and
rol
inc
mov
lret
mov
fcoml
rcr
loop
sbb
xchg
inc
aam
cli
leave
lret
xor
push
xchg
adc
push
xchg
out
pop
dec
in
movsl
mov
fistpl
xor
or
in
xor
std
pop
inc
test
dec
adc
mull
bound
adc
adc
sub
shll
decl
mov
and
imull
mov
xchg
adc
ret
scas
scas
pop
rorl
pop
jl
jecxz
mov
adc
cmp
pop
or
imul
sti
fisubrl
cmp
out
mov
bound
aad
leave
clc
dec
lret
xor
stc
rcrl
fidivrl
and
or
or
or
add
cmp
test
dec
inc
mov
mov
cmpsw
sti
jp
push
push
popa
enter
jmp
xorl
xor
pop
mov
stc
sar
loope
adc
popa
or
fsubr
pusha
and
sub
sbb
fcompl
movsb
shlb
add
xor
clc
sub
cmpsb
jg
mull
subl
shlb
aam
add
mov
icebp
sub
aam
shll
push
pop
loopne
mov
gs
or
into
arpl
shll
int3
out
adc
sbb
fsub
lods
aaa
xchg
cmp
xor
inc
xlat
mov
mov
jns
xlat
inc
push
std
mov
in
push
cmp
testl
das
pop
xchg
xor
or
pusha
jbe
fldt
push
sub
pop
and
imull
adc
jnp
mov
inc
xchg
or
adc
jo
pop
fsubrs
int
xchg
dec
out
out
movsl
bswap
or
pushf
flds
test
dec
hlt
inc
adc
out
push
repz
mov
push
lahf
outsl
movsb
fldcw
cmp
call
inc
jmp
jnp
gs
testb
adc
les
iret
int
scas
mov
movsb
sub
push
or
test
or
jbe
cld
call
ud0
cmp
les
shll
mov
scas
jle
in
ret
jecxz
mov
dec
lret
jnp
ja
rol
repnz
add
out
outsb
idivb
sub
hlt
push
xchg
shlb
hlt
sub
fsubrs
out
xor
sarl
loop
bound
int3
stc
inc
fsubp
sub
sub
mov
lods
or
lods
and
lods
push
add
cwtl
out
lahf
inc
rclb
fsubrs
cmp
movsl
sub
xchg
pop
or
jmp
fistpl
addr16
jmp
or
daa
std
loope
into
dec
fdivs
sahf
imulb
fincstp
xchg
push
or
push
mov
std
xchg
add
and
adc
inc
xor
aas
mov
pop
ficomps
pop
dec
adc
fscale
sbb
jl
in
cs
mov
aam
jbe
ficoms
push
pop
int3
stos
xchg
scas
adc
jecxz
outsl
dec
xor
add
mov
insl
cld
clc
daa
fs
push
flds
out
sbbb
mull
fdivl
sbb
loopne
fwait
inc
stc
pop
xchg
rclb
mov
jge
xor
loopne
and
cmpsl
cmc
lret
jno
fdivl
fildl
lahf
or
mov
cmpsl
xchg
pusha
cmp
ret
xchg
stc
repz
lret
pop
pop
mov
add
loope
andl
jmp
in
push
cmc
or
fsubrl
mov
mov
fs
in
fstpl
sbb
clc
add
inc
adc
jne
xchg
pop
push
xchg
pop
adc
aad
adc
mov
ret
inc
add
aam
sub
jecxz
xlat
lods
sub
aaa
shrb
fwait
movsb
adc
mov
je
movsl
das
cmc
xor
lret
fistl
pop
fwait
orl
repz
shll
call
popf
mov
testl
sbb
cmc
nop
popa
notl
xchg
int3
mov
sbb
mov
or
and
ret
jecxz
push
inc
subb
or
or
sub
inc
aam
push
movlhps
pop
sbbl
lock
inc
es
inc
pop
out
lock
rcr
mov
mov
repz
fcomp
imul
sub
cmp
sahf
push
cmpb
mov
xchg
lea
mov
jno
lret
adc
sarl
dec
dec
pop
lahf
mov
sarb
leave
lock
mov
dec
test
jle
ret
fdiv
test
out
popf
adc
aad
cmp
iret
and
fcomp
jns
pop
testb
mov
inc
or
movb
shl
mov
clc
xchg
outsl
sub
pusha
cmpsl
mov
add
jecxz
pop
cmc
mov
loopne
js
inc
jmp
mov
mov
dec
push
pop
arpl
adc
push
lret
out
sbb
pop
ficoms
sub
stos
jecxz
shl
fidivl
int
add
adc
sub
mov
into
repz
clc
rclb
add
hlt
outsl
test
movsl
xchg
xor
cmc
movsb
lret
adc
aaa
aaa
mov
xor
adc
xorb
pop
add
pop
adc
dec
cmp
or
add
push
pop
sbb
jo
fildl
out
lret
es
mov
jmp
mov
xchg
adc
adc
sti
mov
mov
inc
imul
sub
sub
bound
arpl
cmc
cmp
fcoml
imul
lods
call
pop
xchg
adc
fdivrs
sub
pop
adc
arpl
push
sbbl
stos
fwait
pop
pop
xchg
lcall
mov
mov
stos
int3
xchg
jge
cmpsb
popa
fsubrl
aad
jmp
fs
clc
jp
mov
jg
fmul
aad
bswap
inc
adc
mov
mov
mov
les
xchg
xor
xchg
push
les
push
scas
icebp
mov
arpl
push
call
fcompl
jecxz
imul
repz
or
jge
punpckhdq
jae
pop
orl
jg
insb
loop
mov
aam
mov
cmp
cmp
aas
arpl
loope
mov
dec
imul
adc
repnz
or
aaa
bound
sarl
sub
insb
or
scas
neg
bound
mov
fstpl
ror
sub
lret
outsl
cli
jne
addr16
pusha
push
ja
lret
lahf
lds
or
adc
sub
fisttps
sub
daa
mov
jae
mov
jmp
fsubrl
jle
aas
out
mov
dec
outsl
mov
jb
ret
push
sub
or
jg
mov
adc
xor
push
stos
push
push
xchg
jnp
sub
or
adc
fsub
aas
cmc
jecxz
pop
sbb
jp
fs
mov
or
pop
pop
scas
pop
cmp
js
pop
pop
int3
jb
scas
cmc
scas
clc
mov
fistl
std
push
nop
daa
pop
das
pop
push
fstpl
outsl
das
aas
push
adc
mov
daa
pop
jl
sbb
sub
in
and
mov
and
pop
int3
ret
mov
movsb
testl
dec
std
jne
and
mov
fisubrs
nop
xchg
or
mov
aas
push
nop
jge
push
sarb
incl
mov
orb
sbb
imul
imul
lcall
sbb
xadd
fst
mov
mov
shlb
adc
mov
js
aaa
cld
sbb
push
scas
adc
add
mov
xor
rorb
adc
stos
jle
cwtl
popf
ficomps
push
dec
repz
inc
popa
jne
out
mov
int3
mov
hlt
in
fdivp
sub
in
cmpsl
rcl
jnp
pusha
aad
inc
mov
pop
xchg
push
movsb
into
mov
mov
mov
outsl
and
sbb
fstpt
xchg
dec
mov
aam
repnz
xor
mov
sbb
jecxz
out
fdivrs
dec
adc
sbb
jecxz
or
mov
fistl
inc
imul
rcrl
push
or
hlt
push
cmpsl
std
fidivs
add
dec
std
cmp
movntq
out
adc
add
push
or
clc
fmull
pop
inc
cmp
add
mov
fstps
sbb
stos
je
lret
mov
sbb
lret
rcl
mov
bound
jmp
jmp
adc
repz
and
in
daa
inc
not
aas
nop
loop
and
inc
loope
push
aad
push
shrb
cmp
rorb
xlat
arpl
shrl
inc
push
pop
leave
jo
dec
sahf
out
cltd
push
outsb
dec
pop
stos
sub
xchg
cld
cmp
mov
cmpsl
ret
push
xor
sub
adc
xchg
int3
xchg
xor
je
xchg
pop
sti
rolb
pop
or
lock
dec
out
inc
jb
ja
ljmp
inc
dec
hlt
aam
lds
mov
shr
not
mov
adc
test
out
in
outsb
cmp
in
call
sbb
outsl
repnz
mov
sub
fcoms
inc
cmp
push
pusha
jbe
loopne
push
enter
arpl
in
jbe
shl
je
aaa
add
pushl
pusha
repz
lahf
dec
ds
in
lods
divl
test
mov
and
rcr
jmp
cmp
jmp
je
out
fbstp
ror
mov
subl
in
cld
fs
out
or
in
add
loopne
mov
and
inc
adc
sub
repz
lahf
test
jge
jnp
loope
scas
xacquire
mov
iretw
repz
repnz
icebp
movl
sahf
mov
push
push
add
insb
mov
xlat
jl
gs
and
pop
mov
insl
cmpsl
ffree
call
clc
ja
stc
fisubs
aam
mov
xorb
das
push
popa
cmpsl
mulw
sbb
sbb
lret
push
loope
in
mov
lcall
cmp
xchg
hlt
mov
sti
orl
xor
jmp
mov
adc
mov
dec
imul
hlt
add
push
mov
pop
xor
sub
je
mov
xchg
sub
aad
fistps
repz
icebp
dec
cmp
testb
push
inc
mov
hlt
add
push
dec
aad
sarl
mov
hlt
hlt
adc
fwait
pop
sub
jmp
gs
ret
rclb
imul
sbb
aad
clc
cmp
jb
fwait
sahf
push
sub
ja
enter
jge
lods
imul
mov
xor
andb
mulb
sub
dec
les
push
mov
fisubl
pop
sbb
roll
xchg
cmp
push
inc
push
inc
jns
inc
sbb
loop
mov
or
stos
xor
popa
ja
insl
icebp
push
jp
pop
xchg
insb
lcall
shll
jno
in
cmp
jecxz
xor
xchg
mov
or
loopne
lods
movsb
loope
cmpsb
sbb
inc
adc
insb
jp
sbb
repz
sbb
test
push
cmp
adc
lret
adc
pop
lret
adc
push
pop
adc
ljmp
cmp
pop
lock
lds
lcall
xchg
or
and
fs
daa
mov
ljmp
sbb
sub
mov
lret
jl
dec
pop
jo
daa
xor
test
sbb
add
mov
pop
mov
mov
sub
xchg
mov
loope
cmp
and
dec
xor
inc
mov
push
jecxz
incb
into
cltd
loop
or
in
add
orl
call
sub
jnp
inc
call
sbb
pop
mov
das
jb
fldt
insb
mov
scas
sbb
push
adc
setle
int
shrb
in
rorb
mov
aad
imul
pop
out
fsubrl
iret
fsubrl
rcl
push
rcr
push
push
add
push
jecxz
add
push
push
or
sub
pop
addr16
insl
fsts
jle
jbe
sahf
aad
mov
mov
iret
cmpsb
mov
int
mov
lret
cmpsb
scas
mov
cmpsb
stos
mov
ret
cmpsb
cmpsb
mov
mov
cmpsb
mov
mov
mov
or
mov
jl
xchg
push
cmc
out
jne
fcomi
inc
aad
xlat
pop
insb
in
mul
shl
sub
sub
mov
and
cs
xchg
push
fnstcw
mov
jecxz
adc
icebp
mov
mov
icebp
dec
mov
pop
call
jg
add
mov
xor
out
pop
mov
mov
repnz
cmp
cmpsb
cs
out
fiadds
xchg
fcoml
sbb
int3
and
adc
aas
cmc
mov
out
xchg
mov
arpl
mov
movswl
mov
sar
mov
sahf
in
pop
adc
iret
push
fsub
popf
fcoms
mov
or
sbb
xor
gs
pop
in
stos
mov
negb
jbe
not
in
mov
mov
sti
and
pop
jno
push
insb
loop
hlt
pop
popa
lret
pop
xor
inc
mov
out
int3
stos
iret
or
pop
addr16
inc
cmpsb
jl
icebp
adc
sbbl
out
rcrb
xchg
dec
ror
jge
fidivs
pop
std
addr16
xlat
aad
stos
cs
pop
cmp
lea
out
push
xlat
and
mov
out
hlt
sar
pop
and
mov
and
mulb
arpl
and
pop
sub
sbb
mov
dec
int3
js
pop
or
adc
outsl
test
jge
repz
inc
xchg
jl
enter
out
imull
xchg
popf
pop
or
mov
je
cwtl
ds
shlb
jmp
bound
add
and
mov
add
dec
pop
or
idiv
or
xor
inc
test
in
sub
in
xor
lea
mov
outsb
pop
fwait
lahf
sahf
push
pop
or
mov
sbb
dec
push
sbb
cmc
add
cld
push
and
push
sbb
scas
inc
fmull
insl
lock
push
lret
push
dec
insl
repz
fsubrs
dec
or
aam
pavgw
bnd
lahf
sub
cmp
sbb
mov
jno
push
sub
mov
mov
gs
int3
jnp
xchg
es
adc
std
ror
push
push
dec
ja
jno
testl
in
int3
aad
pop
stc
mov
movsb
cld
int
fwait
pop
fdivp
test
ret
int3
add
shrl
mov
pop
stc
test
adc
cwtl
jecxz
popl
cmp
sub
pop
push
lahf
loope
in
outsb
ss
dec
aad
push
pop
push
shr
or
int3
mov
cs
add
sbb
rolb
sub
std
ficoml
int3
push
in
sub
mul
out
cmp
stos
test
lret
icebp
out
lret
cli
call
mov
iret
xlat
mov
lret
shl
mov
jae
lds
aas
fdivs
adc
ja
mov
jne
mov
js
mov
inc
int
test
mov
movsb
and
mov
push
int3
jge
fs
pop
not
push
jno
cld
xlat
jl
xor
fnstsw
xlat
inc
adc
std
icebp
jg
daa
sbb
mov
sbb
and
mov
lahf
push
fs
adc
ret
out
or
in
hlt
sbb
stos
jne
inc
shll
loop
int
push
aam
cmp
rcll
repz
pop
push
ret
out
inc
cld
dec
sub
xchg
testl
das
int
outsl
invd
adc
cmpsl
std
push
pop
test
xchg
dec
mov
cmc
sbb
fs
das
in
les
push
jmp
dec
dec
mov
shrl
mov
rcrl
js
push
or
imul
dec
add
pusha
inc
cmp
xlat
push
test
push
cmp
xor
insl
jecxz
imul
shlb
les
lret
cmp
sub
push
or
xchg
cmc
mov
fisttps
sbb
jnp
out
cmp
negb
push
pop
adc
cld
nop
cmp
jo
cwtl
mov
in
jmp
jl
pop
out
fbld
loopne
dec
in
das
cmc
inc
sarl
cld
xchg
iret
jno
cwtl
xchg
vmwrite
neg
push
push
jge
sub
push
mov
mov
mov
or
cld
sahf
jnp
rcrb
mov
lahf
sub
insl
sti
sub
lds
and
ja
xchg
sub
add
ror
lds
sti
push
mov
and
push
ja
sbb
jge
adc
call
pop
pop
push
jnp
jecxz
adc
dec
fcmovb
pop
dec
pop
pop
push
aam
mov
dec
hlt
push
imul
inc
sbb
fstpl
js
xor
divl
jno
orb
daa
mov
adc
jmp
adc
sbb
call
cs
or
mov
inc
or
outsb
and
inc
dec
stc
cmp
shl
jmp
scas
jb
int
xchg
mov
xchg
fmuls
ret
adc
push
popf
add
sbb
or
scas
xchg
mov
adc
andl
xchg
bswap
and
jp
sub
lds
sbb
xlat
notb
and
cmp
sub
jbe
sarl
lods
pop
pop
sbb
cmpsb
add
or
xchg
jp
ss
sub
inc
sbb
out
sbb
fisttpl
lock
scas
inc
popa
ss
fdivs
ret
das
pop
push
and
jmp
adc
aad
hlt
mov
rcrl
call
dec
add
and
mov
fdivs
mov
jo
sub
cmp
push
adc
sbb
push
ret
mov
sub
sub
ret
insb
popf
gs
mov
js
mov
imul
lahf
aaa
rcrb
scas
jno
imul
stos
incl
stc
adc
rorl
sbb
into
and
jno
int
pop
xchg
cmp
aad
sbb
mov
add
sub
movb
dec
sahf
pop
adc
mov
push
fmull
ja
push
ret
sarb
imul
xchg
adc
neg
in
bound
fistpll
jb
out
mov
adc
int
stc
pop
ja
leave
cmp
int
loopne
and
or
jg
or
lahf
sub
mov
test
cmc
or
sub
cli
inc
pusha
pop
inc
add
stos
insb
xchg
std
xor
add
sub
jo
pop
cmpsb
jb
sub
bound
sbb
ja
lods
scas
lret
dec
push
pop
inc
mov
ja
xchg
push
adc
in
mov
fs
rorb
lret
jb
ja
pop
call
xchg
xchg
cmp
cld
add
sbb
mov
orl
inc
mov
icebp
aas
push
mov
repz
pushf
cmp
loopne
das
roll
add
adc
sbb
cmp
or
pop
cmp
popf
and
pop
pop
xchg
movl
or
adc
inc
in
pop
xor
dec
leave
xor
push
add
pop
xor
je
push
adcb
js
dec
in
cli
and
pop
sbb
jmp
xor
rclb
push
pop
repz
inc
xlat
xor
add
sbb
mov
loop
pop
arpl
mov
pmaxub
movsb
call
out
pop
xor
cmpsl
fistl
cmc
test
push
push
mov
pop
mov
cmp
mov
xor
ret
and
sbb
cld
add
jl
fldt
lcall
inc
imul
sahf
clc
cmpsl
xor
cld
xorb
out
movsl
mov
push
in
imul
imul
nop
xchg
adcb
mov
mov
adc
add
icebp
sub
in
mov
and
js
adc
mov
repnz
adc
idivl
add
ret
jl
push
inc
inc
adc
ret
pop
loopne
mov
clc
rorb
mov
outsb
mov
cmp
addr16
pop
loopne
mov
fwait
adc
jecxz
loope
rcl
push
push
gs
pop
jge
sbb
aaa
or
add
mov
cmpsl
scas
push
mov
cmpsl
mov
ds
test
sbb
out
aas
fs
lods
mov
iret
subb
mov
ja
lods
dec
shrl
mov
lds
stos
inc
paddq
outsb
mov
fldt
out
dec
test
xorb
xlat
cwtl
or
fsubrl
xchg
inc
adc
and
fwait
pop
pop
mov
out
aas
sbb
xor
in
add
mov
pop
or
aaa
mov
xchg
mov
out
add
shl
inc
popl
jmp
in
adc
xchg
pop
popa
xchg
xchg
lret
inc
xchg
mov
dec
and
push
push
inc
xor
jnp
cmpsb
pop
pop
adc
jg
aad
sti
pop
pop
out
xorl
cmp
inc
fsubrs
mov
add
lock
lods
test
jno
ljmp
in
cmpsb
jg
xor
lea
and
loopne
int
enter
imul
mov
jl
sub
mov
repnz
and
out
insl
iret
add
fiaddl
sbb
push
push
in
cmpsl
sub
mov
fistpl
mov
pusha
inc
subl
xchg
imul
xchg
mov
cmpsl
pop
push
push
or
outsb
sbb
push
pusha
incb
cmpsb
out
dec
mov
out
mov
mov
int
mov
add
dec
jecxz
jmp
clc
pop
mov
sub
pushf
mov
test
dec
cmc
leave
pop
aas
push
sub
fdivrs
fisttps
or
add
ja
jge
mov
movsl
and
mov
jge
js
push
or
mov
fistpl
xor
sti
movsb
aam
cmovne
mov
jmp
mov
sub
dec
into
out
ret
inc
push
lea
cs
mov
mov
add
sti
xchg
loop
push
cld
es
add
or
ret
ficoms
ds
inc
fldt
fdivrl
pop
cwtl
fwait
repz
and
lret
notb
xor
stos
xor
mov
cmpsb
jnp
sub
pop
or
popf
cli
jnp
lods
mov
fnstsw
int3
fwait
ljmp
jmp
aaa
mov
cmpsl
add
fcoml
addr16
cld
add
and
pminsw
xchg
insb
mov
lock
mov
sbb
notb
daa
ljmp
sahf
or
inc
push
or
mov
out
xor
int
lahf
push
jmp
mov
movsl
add
push
ret
sub
arpl
adc
sahf
lods
mov
inc
xor
push
cwtl
mov
adc
mov
cmpsb
out
cwtl
sbb
jg
cli
xchg
js
clc
jns
cmpb
out
push
sub
dec
add
push
mov
pop
and
andb
sub
rcrb
mov
cmp
notb
repz
jge
cmc
inc
xchg
cmp
push
pop
adc
xchg
cmp
lcall
int
push
add
mov
push
aad
add
cmp
js
pop
test
push
push
in
icebp
lahf
stos
mov
or
dec
cmp
mov
inc
inc
inc
pop
mov
mov
in
mov
jb
mov
lret
pop
push
xor
call
or
jae
cwtl
lods
dec
scas
testl
push
clc
or
jl
test
or
in
xchg
or
sbb
dec
test
cld
push
pop
pop
test
divb
xchg
mov
sbb
jecxz
inc
cmp
fcomi
xor
test
aaa
jae
pusha
push
hlt
sbb
mov
cwtl
lret
push
cmp
xor
add
mov
in
test
add
fadds
aas
fwait
inc
or
mov
adc
pop
xor
jae
fmul
lret
sub
leave
push
sbb
sub
data16
pop
push
jle
test
cmp
mov
sti
jne
insb
pushf
xor
inc
sub
dec
and
xchg
cs
rorb
xlat
les
adc
xchg
in
sbbb
xchg
enter
loopne
test
loope
pop
jecxz
mov
jns
push
jmp
mov
pushf
nop
or
mov
cwtl
inc
pusha
in
ja
jle
in
in
incl
fld
cmc
jbe
jp
jmp
dec
fmull
fbstp
ret
in
mov
xor
push
rcrb
dec
cmp
and
xchg
icebp
and
in
add
add
in
xlat
sahf
js
pop
or
add
mov
aad
mov
mov
fmul
adc
scas
jecxz
push
out
xor
pushf
pushf
dec
jecxz
pop
imul
int3
jne
mov
addr16
in
cli
aam
aam
adc
mov
jae,pt
repz
mov
fdivs
add
push
jmp
lret
sbb
xor
mov
pop
jo
js
inc
in
ja
jne
aam
mov
push
test
fwait
ret
je,pt
dec
push
fsubr
dec
outsl
mov
push
in
mov
shlb
mov
pop
les
dec
mov
negb
or
mov
or
add
xlat
rorb
jae
andl
jno
xor
outsl
in
or
jge
insl
mov
jbe
mov
or
stc
and
sbb
add
stos
adc
movsb
push
jp
in
xrelease
dec
sti
and
cmp
xchg
popa
arpl
add
aas
jmp
or
ret
adc
jo
pop
vcvtsi2ssl
xchg
fs
aad
xchg
test
test
scas
add
loop
cmpsl
out
xchg
mov
fdivrs
lahf
sbb
aam
jmp
movsb
mov
cmp
cmpsb
lahf
fcmovu
imul
scas
jp
and
sahf
test
sbb
ret
popa
and
ljmp
aas
cmp
push
clc
pusha
les
ficompl
dec
fisttpll
out
aaa
mov
lea
es
sbb
ljmp
test
mov
cmp
pop
push
lock
adc
xor
iret
dec
cmpsl
fadd
in
mov
inc
int
inc
xchg
push
loope
lock
std
and
sti
mov
xor
arpl
inc
cmp
clc
cmp
out
je
std
addr16
pop
dec
xchg
movups
dec
jne
insb
xor
adc
aam
jns
negl
data16
scas
sahf
sub
jge
out
push
rorl
jp
aam
sbb
pop
or
loope
repz
rcl
inc
clc
add
cmp
aam
divl
leave
pop
shrd
push
roll
add
popf
mov
frstor
cli
stos
push
enter
aam
shlb
xchg
and
imul
pusha
addb
std
lock
in
or
push
aaa
dec
outsl
inc
jb
roll
lret
add
jecxz
sub
mov
add
xor
out
lcall
dec
lret
xor
call
jmp
cld
testl
sbb
mov
divb
pop
xlat
fadd
xlat
push
or
repz
push
cli
pop
shll
arpl
xlat
mov
iret
cmpsb
inc
and
test
xchg
jne
add
push
cmp
imul
sbb
sti
lock
dec
add
mulb
iret
add
fisubrl
pop
and
xor
lret
and
shlb
fldenv
sub
or
out
int
hlt
xor
fcmovnu
aaa
cmp
jmp
loopne
jbe
test
fdivp
mov
or
in
xchg
mov
sbb
add
out
push
or
xchg
inc
xchg
cmpsl
daa
std
inc
hlt
fucomi
pop
jne
inc
sub
test
sti
and
bound
push
lea
xchg
cmp
clc
xor
cmp
int
inc
lret
fidivs
int3
arpl
mov
or
in
cmp
sarl
or
loopne
push
sbb
dec
out
or
pusha
hlt
mov
pushf
mov
test
imul
sbb
jne
pop
jecxz
push
sbbb
outsl
xchg
adc
cs
ret
push
iret
iret
stos
xchg
rcrl
or
enter
addb
jo
movsl
mov
loop
sbb
jo
mov
jecxz
xlat
mov
sub
repnz
adc
lods
xlat
adc
js
xchg
mov
and
xchg
cmp
daa
test
add
sbb
test
vpmacsdql
jae
push
xor
out
dec
in
mov
clc
add
mov
push
dec
into
mov
jmp
mov
fiaddl
cmp
sub
jne
push
das
test
adc
sahf
mov
mull
cld
not
mov
rcll
addl
inc
rol
shrl
divl
push
xor
sub
movsb
pushf
cli
xor
jnp
and
xor
dec
or
dec
push
cmpl
jns
rcll
data16
mov
aad
and
fst
xchg
jno
dec
out
mov
mov
add
nop
test
and
sub
pop
or
adc
mov
loopne
shll
xlat
rcrb
fldt
mov
in
sbb
pop
add
mov
xchg
mov
mov
ret
icebp
dec
xchg
push
xor
adc
lcall
bswap
outsb
mov
jae
inc
jp
add
mov
push
adc
adc
and
cmpsl
lock
arpl
push
and
mov
pop
jne
mov
enter
inc
add
jns
mov
pop
in
fiaddl
add
shlb
mov
call
daa
dec
sbb
shll
inc
or
sbb
dec
imul
in
loop
arpl
add
mov
add
sti
jge
fucomp
pop
xor
sbb
orb
xchg
es
aas
or
mov
and
mov
xchg
jne
pushf
jb
push
sub
mov
in
data16
pop
pop
inc
push
inc
lcall
adc
inc
rcll
mov
jae
sbb
and
jge
mov
mov
decb
mov
sub
scas
cld
sub
fimull
pop
mov
ja
imul
inc
nop
push
lods
xchg
xchg
fisubs
cli
dec
outsb
lock
outsl
repnz
lock
cld
adc
es
add
dec
inc
push
mov
cmp
cmp
adc
roll
inc
insl
sbb
mov
mov
jno
fdivl
pushf
push
push
shl
outsb
jo
mov
push
lret
xchg
loopne
mov
std
ljmp
nop
mov
test
jg
sbb
dec
loope
adc
rcr
cs
ficomps
sbb
dec
es
lcall
roll
cmp
mov
adc
ret
xchg
fbld
mov
add
cs
mov
ret
mov
ds
lcall
jno
rorl
or
pop
and
scas
adc
push
adc
jns
sbb
mov
xchg
popa
xchg
xchg
add
aam
dec
shll
mov
mov
div
loopne
rorl
jl
push
addr16
in
push
icebp
jge
outsb
adc
sbb
clc
jnp
or
inc
or
push
adc
ds
fimull
add
aad
adc
into
push
test
jl
add
out
or
xchg
fistpl
mov
les
fs
sbb
inc
add
adc
in
rcr
xchg
push
cltd
dec
pop
cli
pop
pop
mov
aas
adc
out
jle
aas
mov
inc
lds
mov
incl
jge
xor
jl
das
pop
test
in
adc
mov
push
xchg
sub
jl
fisttps
adc
out
fisttps
push
dec
cmc
or
lock
divb
push
pop
iret
mov
ja
loope
sbb
mov
scas
pop
fcoms
mov
rcrb
insb
xchg
inc
cs
sub
jae
cmp
adc
enter
bound
adc
xchg
imul
jb
xchg
pop
xor
mov
inc
jo
insb
outsl
out
aaa
mov
sbbb
into
jbe
aam
push
shll
pop
mov
shll
imul
addb
incl
push
nop
cmc
mov
xlat
inc
mov
cld
inc
xchg
int
sub
push
mov
mov
push
cltd
das
push
daa
jmp
xor
add
push
mov
and
adc
cs
out
cmp
ljmp
movsb
and
push
mov
aad
cwtl
nop
add
in
inc
add
push
clc
inc
ret
enter
into
imull
jle
push
mov
pop
jge
repnz
dec
mov
insl
in
lods
and
jg
lret
arpl
mov
cmp
jno
push
lcall
sahf
push
scas
data16
or
nop
movsb
lcall
adc
adcb
xchg
mov
mov
jo
cmp
adc
adc
cmp
adc
and
xchg
jle
mov
pop
dec
fdivl
std
lds
jae
ja
fwait
adc
das
aad
cld
sub
adc
xor
mov
movsb
xor
out
imul
mov
mov
jne
and
insl
negl
sbb
fsubl
dec
mov
insb
mov
inc
sub
sub
vpshufd
in
sub
jbe
sbb
mov
jbe
pop
rorl
jge
jne
ds
jbe
sbb
loope
inc
lret
lret
jnp
pop
pusha
out
fwait
repnz
or
nop
jnp
xor
push
inc
test
repz
xor
mov
and
jbe
aaa
out
sub
pop
iret
xor
mov
pop
test
push
wbinvd
loopne
mov
rcr
mov
fstps
xchg
pop
pop
sub
xor
inc
rorb
cmp
pop
fxtract
adc
xlat
sub
push
cmp
push
inc
mov
jne
pop
add
pushw
bnd
pop
xlat
jne
mul
repnz
cs
aas
and
std
adc
sub
inc
repz
xchg
ljmp
push
sti
xor
and
stos
xor
and
aam
cli
aas
xchg
mov
dec
jne
call
stc
ffree
out
ret
loop
push
mov
mov
mov
adc
lcall
cmpsl
hlt
in
and
mov
jg
inc
push
push
xorl
pop
ss
or
jle
jo
ja
mov
adc
lahf
dec
aam
sbb
or
ret
and
out
and
push
rcll
mov
xor
xchg
outsl
notl
stos
arpl
pop
cmp
inc
mov
jle
cwtl
imul
lock
adc
clc
jp
mov
mov
ljmp
push
mov
rcrb
sbb
lods
loopne
push
sti
into
jmp
jo
mov
jl
xchg
sti
dec
jne
push
push
inc
pop
dec
dec
loop
push
inc
mov
xor
inc
jns
mov
adc
cld
cmp
sub
dec
lea
adc
int
addl
dec
jle
xor
das
xchg
mov
call
std
fs
lahf
cmp
out
fmul
push
cltd
inc
nop
test
sbb
xor
add
arpl
scas
xchg
push
scas
pop
pop
inc
pop
push
push
divb
int3
sub
iret
stc
jmp
sbb
mov
jb
scas
inc
mov
adc
fists
testb
rcrl
push
in
mov
mov
fildll
or
or
jno
or
adc
hlt
pusha
jmp
jnp
cmp
pop
aas
flds
sub
in
cmp
xor
inc
and
cmp
dec
cmp
cmc
ret
testl
pop
add
mov
outsl
dec
test
adc
out
loopne
repz
daa
xchg
lods
or
pop
mov
sbb
add
sbb
in
stos
inc
mov
ds
outsb
pushf
leave
insb
hlt
mov
mov
data16
aam
jg
icebp
lds
cwtl
sbb
mov
cmp
in
cmp
dec
jns
xchg
fadds
push
test
sti
mov
cmp
or
shrl
or
push
inc
mov
pop
inc
jbe
xor
rcll
rorl
mov
daa
add
adc
pop
test
sub
enter
adc
xchg
or
pop
add
rol
fwait
jnp
jp
push
pusha
sbb
xor
add
mov
mov
add
and
mov
bswap
mov
pushf
ror
aam
loop
leave
outsl
pop
xor
mov
sahf
sahf
jne
loopne
xlat
mov
pop
mov
pop
jmp
push
into
inc
mov
into
fbstp
int
ffree
lods
push
shll
arpl
imul
cmp
int
mov
sbb
int3
xor
sub
bound
cli
inc
daa
push
pusha
outsl
movsb
notb
outsb
push
repz
std
inc
mov
dec
les
repz
pop
mov
out
inc
daa
xor
cmpsl
dec
stc
jno
adc
mov
test
xchg
mov
and
cmp
and
aam
push
adc
xor
xor
fldcw
cmp
repnz
push
mov
mov
inc
es
das
cmpsl
pop
dec
es
mov
in
jae
xor
and
xor
imul
cmp
stos
push
mov
inc
pop
sbb
lds
adc
jmp
push
imul
leave
push
xlat
das
test
pop
shl
pop
xlat
aaa
faddl
add
pop
fldl
data16
jb
and
sahf
sbb
pop
inc
or
jmp
mov
mov
insb
push
and
outsl
cmpl
sahf
sbb
xchg
das
sub
push
mov
test
adc
in
jo
mov
sbb
or
hlt
xor
inc
leave
or
push
adc
jo
inc
push
jns
cli
xlat
dec
test
test
or
pusha
or
push
pop
rcll
adc
adc
shl
push
hlt
adc
sbb
loope
pop
cs
dec
iret
sub
adc
mov
cwtl
fmul
adc
sar
fsubrl
mov
sahf
mov
hlt
and
daa
xor
sar
push
lcall
ret
cmpsl
sbb
push
cmc
arpl
ret
push
adc
mov
pop
or
mov
or
xor
loope
push
xor
cwtl
das
xchg
fwait
jmp
jno
push
dec
pusha
cmp
mov
imul
jmp
mov
les
xchg
mov
mov
dec
mov
add
jb
das
pop
outsl
jbe
pop
jge
cli
imul
lods
xchg
test
dec
pop
cld
out
sbb
push
dec
push
push
repnz
loop
jb
repz
out
sub
sti
sti
int
inc
nop
jge
in
xchg
enter
inc
es
inc
sti
je
xchg
xchg
mov
cwtl
loopne
pop
mov
xor
sbb
push
daa
ret
out
push
out
jbe
popa
dec
mov
lock
mov
dec
push
push
sbb
daa
xrelease
outsl
movq
int
sbb
pop
dec
fsubrs
jl
dec
cmp
jecxz
loopne
adcb
cmp
xlat
mov
insb
mov
dec
js
jg
inc
or
insl
cmp
sbb
std
push
mov
cmc
int
push
mov
cmp
cli
notl
mov
pop
in
movsl
in
aas
cmp
lea
adc
dec
das
inc
push
and
mov
dec
stos
pop
into
movsb
xor
out
adc
sbb
ljmp
xchg
stos
mov
les
movsl
adc
mov
inc
insl
add
mov
out
or
sbb
das
mov
cmp
pushf
inc
sbb
xor
jl
or
in
xor
inc
std
fwait
lahf
dec
lea
mov
loopne
in
in
adc
vpshuflw
mov
out
aad
clc
andl
add
cli
addb
in
fistpl
sbb
les
push
jno
in
fwait
ds
and
xchg
jns
adc
or
jge
lret
mov
fs
mov
insb
push
jo
add
xor
and
rcll
les
and
and
xor
ror
rclb
and
sbb
jae
fists
scas
enter
push
inc
inc
mov
jg
push
or
les
add
hlt
cmc
aam
test
push
ret
out
mov
out
or
dec
xchg
ret
or
push
xor
pop
cld
xor
push
pop
dec
in
dec
clc
sbb
dec
xor
xchg
sbb
repnz
mov
rorl
sub
and
sbb
cmp
mov
adc
imul
popa
cmp
adc
in
push
mov
xchg
iret
sbb
pop
ret
push
adc
mov
mov
lret
int3
lahf
or
sub
push
sub
js
addr16
outsb
fwait
sub
inc
in
insb
mov
sbb
xchg
pop
mov
xor
jmp
stc
lock
pop
sub
stos
xlat
xchg
insb
sbb
sub
mov
mov
push
dec
out
rcrb
xor
and
shl
imul
sub
test
push
cltd
cmp
mov
lcall
fmuls
fidivs
aad
hlt
jno
push
repz
or
loopne
xor
mov
mov
fwait
in
push
adc
xchg
lods
div
cmp
cltd
xchg
dec
sub
mov
pop
pop
mov
xchg
cmp
cs
je
jne
push
mov
ret
sub
test
int
test
imul
outsb
mov
fists
in
loopne
jne
test
fisttpll
sub
mov
leave
sbb
adc
rcll
movsb
adc
dec
shlb
dec
jb
mov
iret
cmp
lods
jp
inc
movsb
rcrb
jae
dec
aam
and
jne
rorb
mov
repnz
test
or
inc
mov
push
mov
push
enter
xor
xchg
jb
mov
notb
in
fdivrl
xor
int
or
bound
xorb
enter
inc
adc
sub
adc
cmp
in
lock
adc
and
inc
pop
xor
in
pop
sub
jbe
mov
lahf
inc
subl
mov
mov
into
or
pop
cmp
enter
inc
popl
insl
xor
or
ror
or
test
pop
insb
fdivrl
fdivrs
ret
imul
imul
lcall
adc
dec
mov
dec
push
test
jg
arpl
cmp
std
add
mov
out
aam
insb
add
xchg
add
cmp
jmp
add
pop
js
fcomip
popf
jmp
loopne
adc
mov
cmp
cmp
pusha
out
cmp
push
lock
cmp
enter
sbb
cld
ret
add
cmp
push
lret
les
inc
and
fcomi
push
shl
repz
sarb
ret
arpl
mov
fs
lcall
arpl
mov
dec
push
adc
pop
rcrl
dec
sbb
push
mov
in
sbb
pop
mov
or
shrb
cmp
stos
call
rorl
mov
fcmovbe
sub
pop
add
je
fs
dec
test
loope
xor
test
jge
xchg
leave
or
rol
cmp
inc
push
mov
push
mov
rcll
rcll
cmc
insl
popa
mov
sub
rol
out
inc
push
add
or
xchg
inc
ljmp
fnstenv
xchg
xor
push
je
xor
jp
mov
pop
lcall
int
inc
nop
out
fyl2xp1
jp
aaa
dec
dec
pop
scas
push
xor
scas
nop
into
or
lret
aam
shrb
cwtl
dec
and
fdivrl
out
sub
push
cmp
iret
icebp
and
inc
repnz
cwtl
loop
out
jle
test
cld
les
and
jecxz
cltd
jmp
fdivl
iret
into
dec
jecxz
rcrb
daa
test
or
movsb
inc
add
dec
sbb
addr16
imul
fstp
or
outsl
sbb
inc
rcrb
mov
lea
lret
fistpl
pop
insl
push
jne
jle
lahf
push
push
cmp
adc
cmpsl
cld
jg
or
fstl
push
jnp
cltd
xchg
loopne
std
mov
or
pop
xchg
xchg
imul
idivl
pop
adc
insl
jecxz
pushf
je
loopne
cmp
pusha
adc
pop
adc
ja
sub
cmp
push
dec
dec
push
push
in
cltd
push
std
push
xor
or
dec
daa
in
addr16
sub
jmp
movsb
mov
or
xor
test
lea
or
dec
cld
push
out
cmp
jge
jecxz
mov
cmp
adc
jl
xor
jne
test
daa
ds
clc
add
test
addr16
rclb
test
leave
sbb
shrl
das
fwait
cmp
cmc
ljmp
cmp
in
lcall
pop
in
or
repz
xor
orb
cmp
aad
dec
xchg
daa
fs
repnz
mov
idiv
inc
cwtl
ja
or
ret
std
scas
loopne
mov
sub
scas
das
push
das
cmc
rcrl
sub
mov
pop
sub
jp
push
out
pop
inc
test
mov
in
cli
ret
movsb
push
fstps
mov
rolb
jne
mov
sub
std
movb
or
cmc
adc
add
inc
jne
dec
jp
cmpsb
ret
popf
cmp
pop
sbb
pusha
cmp
daa
mov
movsb
dec
mov
pop
imul
mov
das
ret
sbb
jns
inc
xor
inc
enter
add
jle
cmp
stos
je
fadds
sub
fdivs
jmp
lret
fildl
aam
push
mov
flds
add
sti
outsl
dec
mov
sbb
cli
push
loope
jge
dec
sbb
jmp
xchg
and
sti
jne
dec
imul
mov
daa
sub
cmpsl
fidivrl
rol
or
or
sbb
nop
fbstp
add
or
cmp
repz
push
adc
mov
stc
sub
stos
adc
sbb
aas
xchg
stos
xchg
inc
or
ds
mov
ds
sbb
inc
js
or
push
cmp
pop
in
sti
adc
or
sbb
push
adc
xchg
adc
les
out
stos
loopne
cltd
cmpl
int3
leave
mov
insb
rol
xchg
push
mov
je
push
dec
jge
out
fisubrl
out
cmp
xor
std
or
inc
sbb
sbb
mov
sub
fwait
and
cmp
aam
dec
inc
sbb
pop
dec
and
push
dec
imul
enter
sbb
xchg
call
mov
adc
rcrl
fs
repnz
leave
or
hlt
lahf
mov
int
dec
cli
int3
outsl
and
adc
sub
mov
imul
lock
mov
fmull
and
bswap
popf
add
mov
movb
out
fidivrl
out
ljmp
push
dec
pushf
jne
sub
adc
outsl
xor
jno
lock
jmp
dec
cltd
dec
lret
mov
test
jae
add
jg
jno
frstor
neg
jp
mov
pushf
jae
and
sahf
testb
out
adc
mov
push
push
inc
inc
jl
in
das
fisttps
mov
les
outsl
xchg
mov
pop
sub
inc
rep
push
adc
push
adc
push
int3
jb
jl
or
icebp
je
ret
add
or
out
sbb
int3
mov
cmc
aaa
add
scas
jmp
mov
pop
jmp
xchg
sbb
mov
ss
adc
cmpsb
push
pop
mov
jns
mov
jecxz
fisttps
add
push
out
xor
fcmovnb
mov
pop
lret
sarb
sub
push
aad
and
mov
aam
icebp
and
out
pop
rcl
loope
cwtl
sbb
loope
out
orl
dec
push
std
or
jmp
cmp
jle
je
and
testb
lret
sub
mov
mov
push
clc
js
movsb
cmp
jg
mov
sub
clc
pop
fisubl
mov
fldcw
out
jle
mov
push
fdivrs
movsb
adc
flds
fsubrs
fucomi
aam
or
jbe
idivl
fsubrl
xchg
xchg
fmull
dec
ljmp
repnz
in
push
xchg
fstl
jl
lahf
pop
push
push
stos
incb
or
lods
jbe
lahf
sub
lock
pop
dec
mov
fdivr
cmpsl
lcall
rcrl
movsb
mov
fcoml
push
lea
inc
mov
xor
sub
btr
test
push
gs
jmp
inc
push
mov
idivl
int3
nop
in
rolb
jecxz
fbstp
rcrb
inc
inc
pop
fst
cmp
mov
lret
pop
mov
inc
test
dec
mov
enter
jg
imull
sahf
adc
jecxz
stos
adc
inc
fldl
ja
and
mov
mov
mov
mov
lcall
testl
jmp
jecxz
lods
icebp
cmp
jne
ret
adc
pop
mov
adc
test
and
inc
add
add
stc
mov
lock
idiv
shrl
dec
testl
test
loopne
sbb
sbb
js
push
cmpsl
in
roll
lea
fbld
cmp
mov
push
push
scas
jo
fisubs
hlt
pop
aad
jnp
dec
add
fiaddl
aad
cmc
stc
rcll
ret
jmp
cmp
mov
insb
xor
mov
iret
push
pop
or
in
inc
dec
fincstp
testl
outsl
xchg
in
cmp
xor
cmc
in
or
jne
ljmp
mov
mov
std
lods
int3
repz
add
adc
ret
pop
jae
mov
pop
xor
cmp
into
hlt
add
lahf
inc
aaa
movsl
mov
arpl
jns
fldt
xlat
mov
add
insb
cmp
lock
ret
inc
mov
pop
jecxz
sub
mov
adc
jmp
popf
dec
push
fcompl
xchg
test
loop
dec
sbb
and
in
dec
scas
inc
or
pop
fsts
mov
xchg
out
ficoms
out
fwait
and
or
sbb
or
scas
dec
add
fadds
clc
push
sub
es
in
fstp
inc
push
daa
add
dec
into
cmpsl
mull
sbb
dec
mov
imul
hlt
movsl
mov
push
add
or
fcomp
shll
sub
cwtl
cmp
roll
sub
out
into
jae
xor
adc
sub
pop
sbb
jns
fadds
jae
mov
fisubrl
out
and
loop
adc
int3
test
out
lock
sbb
shlb
pop
xlat
cwtl
mov
push
xor
scas
pusha
xlat
aad
out
cmp
pop
adc
aad
pop
out
fisubrs
into
xor
jmp
das
mov
in
call
iret
addr16
pop
xchg
lds
xor
or
cmpsl
jne
cmp
test
out
imulb
mov
xor
xchg
out
mov
and
dec
mov
in
and
sbb
jmp
pop
fmull
int3
fwait
gs
dec
rcl
xchg
aam
mov
mov
lds
dec
push
pop
cmp
and
push
test
xchg
lcall
fstps
lods
mov
adc
lods
movsb
push
into
xor
fsts
inc
adc
sub
push
mov
dec
fs
fidivs
decb
sti
jp
jo
leave
fsub
shr
inc
sub
lds
imul
enter
adc
and
jmp
cmpsl
pop
inc
push
mov
pop
dec
enter
jle
decb
pop
inc
icebp
inc
inc
sti
scas
adc
int3
jmp
xchg
mov
sub
ret
jno
fwait
push
ficoms
jge
xor
mov
xorb
pop
pop
push
sub
in
outsl
mov
push
sbb
dec
sbb
popa
push
cmp
icebp
and
sbb
xlat
mov
inc
jmp
cmp
and
fistl
aas
test
mov
mov
xchg
mulb
mov
mov
adc
sbb
stos
movsl
daa
in
ljmp
lock
pop
das
addr16
jnp
stos
sbb
push
cld
cmp
xor
add
fdivs
idivb
inc
ss
or
dec
xchg
aaa
cltd
aas
hlt
xor
int
mov
fists
mov
pop
pop
sbb
aad
mov
xchg
sbb
lock
sti
add
dec
add
dec
jge
movzbl
sub
fcompl
aad
aam
movsb
fmul
negb
jae
push
cmp
divl
mov
aad
and
daa
cli
adc
xchg
jae
mov
dec
ljmp
rorb
mov
loopne
scas
daa
cmpsl
sub
inc
dec
ds
push
popf
bound
inc
push
adc
test
cld
mov
fsubrs
negl
jo
pop
loopne
add
xchg
movsb
add
shlb
je
pusha
or
shll
sbb
fcmovne
xor
sbb
inc
and
jae
mov
add
iret
sti
shrb
jle
fs
mov
sub
mov
int3
pop
cmpl
pop
or
or
andl
fnsave
xlat
fsubs
sahf
sub
mov
dec
mov
rcll
add
sub
pop
mov
mov
aas
cld
ljmp
mov
sub
or
jmp
repz
or
clc
mov
inc
xlat
les
int3
adc
push
mov
xor
adc
test
mov
pusha
rcrb
loop
adc
sub
push
int
loopne
es
iret
jns
decl
enter
ficompl
mov
out
pop
and
fiadds
push
pop
mov
fcoms
popa
lock
adc
movd
push
daa
fistpl
lock
adc
cmc
or
in
nop
fstpl
loop
dec
arpl
faddl
loopne
out
pop
std
fld
mov
aam
pusha
mov
scas
and
mov
shll
sarb
pop
pop
mov
call
pop
int
mov
hlt
cltd
sub
add
inc
mov
jb
sbb
cmp
cmpsl
fbld
ljmp
fwait
xchg
call
in
test
xchg
aad
mov
mov
push
adc
scas
dec
push
and
sub
sbb
inc
cmp
fcom
scas
cwtl
cmp
adc
sbb
fcompl
in
fs
pusha
cld
mov
lods
or
mov
sbb
sub
add
cmpl
adc
in
scas
mov
jno
das
lods
cmp
push
jb
dec
cmp
push
pop
pusha
imul
xchg
mov
mov
inc
insb
sbb
sbb
mov
aaa
cmp
shll
leave
mov
inc
pop
mov
cmp
cmp
in
loope
aaa
bound
jp
or
jno
mov
loop
add
out
ret
in
push
les
std
adc
roll
shrl
xchg
out
or
mov
std
aaa
and
dec
aad
cli
rorb
mov
sar
sahf
push
outsl
in
popa
lret
add
sti
repnz
mov
and
sbb
jb
pop
mov
in
nop
repz
mov
cmp
push
mov
fisttpl
pop
cmp
lods
je
lea
cmp
sub
cmp
fidivs
mov
dec
pop
fistpl
sbb
adc
and
ret
lods
inc
mov
in
sub
mov
push
xchg
or
add
xor
ret
es
ret
lret
push
xor
popa
daa
mov
sbb
pop
and
pop
cmp
mov
stos
dec
xchg
and
shl
inc
pop
dec
xchg
test
outsb
mov
loope
dec
imul
add
daa
out
lds
in
lock
or
jecxz
inc
loop
into
addr16
sub
divl
hlt
jnp
cmp
in
xchg
sbb
push
xchg
xor
notb
or
pop
or
sub
dec
arpl
adc
aam
adc
pop
js
sbb
repnz
pop
xor
xor
imul
jecxz
push
out
add
pop
aam
imul
jno
jg
jnp
test
adc
mov
stos
add
je
arpl
fdivrs
lret
fsubl
ret
insl
sbb
jle
mov
or
dec
cmp
pushf
inc
push
and
add
jmp
jnp
cmp
imul
mov
movsl
xchg
or
jnp
pop
test
mov
call
mov
cmp
test
in
fistpll
adc
jns
cld
inc
lret
movsl
lcall
js
sub
ja
push
sbb
fstpl
shll
loop
mov
or
mov
lods
or
out
ror
iret
jecxz
scas
fcmovnu
notl
fisubrl
jl
pop
in
lods
or
pop
and
in
pop
icebp
int3
mov
je
lret
fdivl
scas
aam
ljmp
loopne
mov
sbb
fwait
push
aad
cli
and
push
dec
xor
jle
mov
loope
jo
dec
cli
cmp
addr16
test
das
cmp
mov
or
xchg
push
mov
xor
aaa
adc
add
fsts
inc
clc
adc
sbb
ljmp
stos
ds
jbe
inc
aaa
adc
adc
int
mov
mov
inc
lcall
adc
movsl
dec
jno
scas
push
mov
arpl
mov
xor
xchg
sbb
xchg
call
push
cmp
decb
sub
addl
inc
xor
fcom
xchg
loopne
dec
add
mov
cmpsl
out
xor
mov
push
fstpt
sub
or
push
clc
fisubrs
xor
inc
sub
clc
mov
mulb
mov
aad
stc
aam
rol
cmpsb
add
pop
xchg
lahf
add
and
push
mov
addb
nop
mov
inc
sahf
jge
rclb
icebp
jbe
adc
sub
cltd
inc
inc
sub
cltd
push
imul
cmc
add
dec
fwait
sub
stos
dec
mov
pop
cmp
jle
push
cs
jns
xchg
cld
or
xchg
cmc
stos
aam
mov
lock
jo
mov
sub
sarb
out
xor
rcrl
loopne
clc
sbb
test
pop
rclb
in
sbb
or
hlt
call
out
fwait
inc
push
pop
sarb
inc
stos
out
popf
mov
rcll
dec
xchg
cltd
int
inc
cld
push
xor
into
aas
cltd
cld
jg
int
inc
cmp
lock
sbb
notl
shld
cld
xsaveopt
lock
push
fstpl
sbb
sub
xor
sbb
sub
or
rcrb
movsb
daa
test
or
repz
movsl
sbb
jge
pop
adc
sar
in
cmp
fldcw
ds
inc
les
add
mov
lock
inc
aas
outsb
out
push
push
mov
lret
lret
imul
repnz
jbe
mov
imul
out
xor
das
in
imul
stos
mov
aas
rolb
gs
shlb
cmc
cmp
jmp
std
mov
int
cmp
in
nop
leave
std
ret
call
stc
jle
lds
mov
out
iret
pusha
int3
push
or
das
fisubrs
loopne
adc
fcmovnu
mov
xchg
mov
in
movsb
sar
icebp
jl
sub
clc
xor
adc
aam
cmp
or
pusha
sub
inc
and
push
div
aas
aas
adc
mov
xor
das
fidivl
and
or
outsb
stc
fidivs
xchg
insl
fists
rcl
pop
and
mov
pop
insb
nop
pop
fwait
addr16
rcl
sbb
xchg
lock
loope
inc
dec
adc
mov
inc
outsb
push
lds
popf
stc
das
or
movsb
mov
std
or
mov
ret
xor
push
repnz
ret
xchg
sub
mov
rcrb
mov
loope
xchg
das
cwtl
call
loopne
sub
mov
mov
cld
rcrl
pop
jae
popa
xchg
xchg
sbb
and
nop
cmc
in
cwtl
repz
jecxz
popf
push
aam
inc
leave
or
mov
cmp
sbb
dec
inc
inc
jo
outsb
adc
lret
test
sahf
fnstsw
in
cmp
sub
adc
int
or
xorb
push
cmp
pusha
and
inc
inc
in
mov
adc
fmuls
pusha
fidivs
lods
push
outsl
xor
iret
pusha
cmpsl
ss
movsb
mov
sbb
fbld
cs
sti
xchg
dec
outsl
setl
dec
cmp
lds
sbb
jbe
pand
lcall
addb
xor
add
vrsqrtps
or
cmc
push
mov
cld
adc
scas
movsb
xlat
imull
movsb
cmpsl
outsl
ja
fcmovnb
jnp
mov
cmp
imul
add
sub
into
xor
mov
add
fwait
sub
repz
dec
mov
lods
and
in
dec
popa
cmc
insb
inc
adc
mov
inc
rcl
inc
fisubl
xor
out
sub
or
test
dec
data16
adc
dec
pushf
sbb
xchg
rcll
add
push
pop
sbb
loop
aad
inc
fwait
sbb
or
repnz
sbb
ljmp
adc
or
stc
or
and
pop
loopne
dec
movsb
call
inc
pop
ret
xor
das
push
mov
adc
jle
and
test
pop
sbb
sti
scas
or
pop
rcrb
push
cmpb
mov
mov
pop
sbb
mov
cmpsl
fcmovnu
ljmp
test
ss
or
lock
inc
in
mov
push
mov
loopne
scas
in
push
mov
dec
lods
sbb
or
call
cmp
leave
stos
jl,pt
mov
pop
lods
adc
loopne
roll
cmp
aaa
fldt
pusha
aaa
call
test
andl
and
mov
repnz
inc
das
mov
xcrypt-cbc
cmpsl
adc
lock
ret
sub
jmp
and
je
testl
mov
jmp
xchg
sar
cmpsb
mov
push
sbb
test
ljmp
mov
insb
aad
jns
stos
sahf
cmpps
sub
mov
mov
ret
add
xchg
fnsave
mov
shll
add
stos
out
dec
scas
jecxz
push
inc
jecxz
stc
cwtl
hlt
xor
js
sub
ss
dec
jnp
movsb
outsl
and
je
adc
pop
fcmovbe
dec
repz
and
inc
ja
dec
pop
dec
cmp
cmp
lods
or
in
mov
js
xor
ja
lods
daa
jae
imul
test
jecxz
push
xchg
sub
repz
out
pop
outsl
dec
jno
pusha
dec
mov
std
clc
mov
cli
add
mov
cmpsl
outsl
jle
mov
test
inc
jb
inc
scas
mov
xchg
sub
stos
pop
cmp
xchg
std
sarl
sti
and
sub
lods
movq
rorb
roll
sbb
shlb
fcmovnu
pushl
fwait
int
insl
test
testl
leave
push
adc
repnz
push
mov
push
mov
shl
stos
mov
lds
and
xchg
in
jge
add
mov
out
xchg
push
and
orb
fnstenv
jbe
lcall
pop
faddl
push
add
ret
xchg
mov
pop
or
mov
lea
les
adc
mov
icebp
out
rcll
aad
xor
dec
mov
and
push
ret
fmull
sub
fildll
cltd
pop
adc
sti
jecxz
inc
sub
mov
cld
inc
pop
push
pop
insb
cs
mov
pop
push
jmp
jecxz
bound
xor
cmp
lahf
lahf
dec
fnsave
in
fists
xchg
cmp
jp
out
pop
add
xor
cmp
push
xchg
in
faddl
ret
icebp
int3
jbe
mov
cmp
mov
push
roll
add
adc
mov
pusha
daa
ljmp
and
push
in
rolb
loop
dec
add
test
fs
cmp
mov
insb
or
ret
jge
std
mov
adc
call
jnp
jne
rcrb
hlt
notb
mov
icebp
shl
sbb
and
lock
inc
pushf
pop
add
rol
or
lcall
pushf
push
add
dec
enter
pop
in
aas
sbb
sub
addr16
cmp
rorl
aad
push
jnp
pop
ret
jg
mov
xor
inc
xor
cmp
jo
mov
mov
sbb
sbb
call
fistpll
daa
mov
cmp
dec
nop
and
loopne
sub
sub
cmc
push
jmp
notb
aaa
clc
pop
fsubrs
lock
jge
mov
adc
adc
jmp
push
jo
mov
out
mov
enter
jae
mov
cmp
das
js
lock
cwtl
mov
iret
sub
notl
jae
add
data16
je
cli
mov
xor
hlt
jge
pop
adc
fdivr
out
lret
cmp
sbb
add
test
nop
push
imul
in
lods
rcrb
fsubrl
and
nop
hlt
pop
outsl
nop
icebp
cwtl
mov
movsb
test
mov
inc
jecxz
jmp
push
fdivrs
mov
lcall
icebp
daa
mov
imul
dec
cmpsb
inc
jo
cmc
push
dec
dec
push
enter
jle
rcr
cmp
test
mov
cld
lret
cmp
in
inc
data16
sbb
cs
xchg
aam
loop
stos
mov
in
test
sbb
adc
mov
sti
jnp
xchg
sahf
sub
int3
adc
jo
cmpsl
mov
mov
push
dec
outsl
inc
push
jnp
jle
cmpsl
cmp
test
mov
xor
push
xchg
xchg
mov
rorb
imul
mov
adc
mov
xor
stos
jge
jmp
je
out
test
fiadds
inc
sarl
inc
leave
in
lods
xor
std
fwait
sahf
dec
cmp
ljmp
ljmp
add
repnz
aaa
daa
jmp
mov
shll
jb
les
sub
lock
pushl
dec
mov
xchg
add
stos
sub
xor
inc
push
sub
mov
and
icebp
jo
mov
dec
imul
push
push
mov
adc
adc
inc
in
aaa
sub
sbb
int
lcall
popf
or
cmpsl
dec
inc
push
sarl
inc
push
gs
mov
call
ficompl
sbb
pop
jno
mov
dec
cld
dec
out
dec
and
xor
repnz
xchg
loop
cwtl
mov
push
pop
popa
out
in
adc
inc
fcmovbe
jp
xor
lock
fistl
fsubr
cli
ret
fisttpl
add
aam
in
daa
loopne
imul
ret
dec
in
and
and
xor
xor
pop
cli
insl
stc
clc
dec
in
xorb
adc
cwtl
adc
mov
mov
mov
lods
mov
sti
lcall
popa
cli
pop
sti
xchg
push
mov
adc
test
sarl
ss
xor
adc
inc
mov
push
sbb
rcrl
adc
fs
dec
xlat
push
inc
in
xlat
cmc
in
loopne
mov
icebp
jae,pt
adc
inc
mov
xor
adc
mov
repz
sbb
enter
push
test
xchg
popa
pop
push
adc
inc
xlat
cld
aaa
cltd
lahf
rcrl
mov
jns
cltd
enter
mov
xchg
cs
test
lret
jno
sarb
insb
and
inc
fsubrp
popa
push
push
pop
jo
and
outsb
pop
inc
mov
test
das
adc
adc
rcrb
cmpsl
fcomip
outsb
xor
rclb
mov
xor
push
dec
in
add
jl
push
sahf
je
pop
fsubrl
mov
addr16
lcall
std
sbb
adc
jns
pop
or
sub
inc
push
movsb
inc
cltd
lcall
inc
hlt
fdivs
into
rorl
mulb
cwtl
das
daa
mov
shl
cmp
outsl
pop
jnp
ret
in
std
cli
mov
and
adc
adc
lret
in
or
mov
insl
shlb
fdivl
loop
hlt
fs
or
out
inc
sub
xchg
ret
mov
and
cmp
sbb
sbb
pop
test
pop
movsl
in
pushf
push
insb
mov
movb
call
pop
roll
popa
fiaddl
add
xchg
xlat
add
jae
mov
aad
cmp
sahf
push
xchg
and
dec
out
roll
divl
in
add
sbb
mov
sbb
push
test
jns
out
rorl
xor
fiaddl
sbb
dec
xchg
sti
add
ds
fnstsw
jbe
fsubr
lods
dec
nop
mov
cmp
fcomip
repz
jno
es
notl
push
sbb
cs
or
xchg
cmp
and
jmp
jnp
sub
mov
cltd
sbb
inc
adc
push
enter
sbb
sub
mov
sub
cmp
cmp
xchg
push
fwait
and
lds
hlt
and
inc
fwait
xor
hlt
xlat
xchg
add
idivl
sbb
and
or
mov
lcall
cmpsl
add
in
stos
mov
cmpsl
push
push
mov
shrb
ficoml
cmp
fs
repz
imul
scas
cmp
repz
pop
repnz
adc
adc
call
pusha
sti
addb
ja
or
stos
mov
mov
sti
mov
mov
inc
ret
cltd
leave
push
mov
lods
stc
test
mov
push
jg
movsl
jp
es
mov
jge
nop
inc
or
int3
insb
mov
sub
cmpsb
and
push
push
ljmp
movsb
mov
insl
jns
jg
push
sub
subb
or
sahf
sbb
and
divb
in
je
adc
mov
adc
fstpt
adc
xor
pop
iret
sub
out
stc
adc
and
push
lret
cli
jne
scas
push
adcl
imul
xchg
je
leave
pop
push
loopne
mov
fbstp
adc
popf
lds
push
ja
jns
in
mov
mov
push
mull
lock
andl
cmc
out
shrb
rcl
sbb
inc
aad
popa
jp
pop
pop
jmp
ds
fisubs
jmp
nop
cmp
in
mov
add
xchg
sub
sarl
mov
xor
cmp
jo
stos
test
inc
cmp
inc
stos
xchg
or
in
inc
ret
fisttps
pop
jge
lahf
inc
pop
cwtl
out
ljmp
test
in
xchg
shll
popa
fisttps
mov
ja
mov
pop
xor
inc
mov
imul
add
aas
icebp
imul
xchg
es
roll
shr
sarl
or
jo
mov
fs
daa
das
je
adc
adc
xlat
imul
adc
je
loopne
sbb
and
push
sti
aad
jge
mov
mov
rcrb
cmpsl
inc
hlt
push
xor
aad
ret
leave
pop
cmpsb
cmc
iret
inc
fisubrl
or
shlb
lahf
cmp
xchg
stos
add
rcrb
sarl
std
repz
cmc
icebp
jg
iret
insl
lcall
pxor
pop
out
jecxz
sbb
mov
cmp
rorl
cmp
movsb
xchg
sbb
lods
add
outsb
pushl
push
lds
into
testb
push
shll
popf
fldcw
ss
loopne
pop
sub
inc
loopne
xor
movl
loope
or
lods
and
xchg
adc
jl
roll
mov
xchg
push
xor
ret
loopnew
add
ja
mov
inc
and
mov
lods
mov
lds
leave
xlat
or
lahf
jmp
mov
aas
push
adcl
xchg
lret
push
pop
and
out
cmp
ret
xchg
inc
or
rclb
dec
int3
fsubr
mov
stos
push
jne
push
sti
mov
fsub
push
daa
sbb
xor
pop
rorl
stos
and
loopne
data16
sbb
test
out
cmp
loop
push
mov
jnp
pushf
dec
xchg
jle
pop
lahf
fiaddl
cmpsl
mov
jl
xor
aad
or
mov
adc
fsts
repnz
imul
mov
aam
xor
icebp
sbb
inc
jmp
mov
xchg
jecxz
xor
stc
cmp
out
adc
aas
std
cmpb
cmp
je
mov
inc
sbb
loope
div
scas
cmc
pop
push
enter
add
hlt
loop
inc
mov
and
popf
into
sub
xchg
loope
ja
pop
hlt
test
cmpb
push
pop
push
hlt
in
push
ret
cltd
lods
or
xorb
jl
mov
sub
push
data16
dec
inc
jg
mov
test
push
outsl
or
xchg
pusha
and
std
cmp
jmp
push
lret
fs
mov
push
int
mov
cmpsb
scas
cmpl
cmp
and
iret
bound
xchg
addr16
jnp
mov
subb
cli
inc
stc
in
jo
daa
mov
xlat
ljmp
andb
hlt
shl
out
shll
neg
and
and
js
repz
xorb
cmp
aam
sbb
loopne
sbb
pop
xor
sbb
fsubp
dec
xor
mov
jb
xchg
out
lods
cmc
loope
lods
cmp
inc
dec
out
dec
sti
xchg
lock
jl
lods
fmull
cmc
pop
loopne
fcoml
fidivl
pop
sbb
lock
loop
add
jg
arpl
cmpb
int3
bound
test
sarb
jmp
jbe
movsb
aad
xor
loope
mov
lahf
push
xor
aad
and
in
fimuls
out
jnp
xlat
dec
int
mov
mov
sub
and
cld
jmp
inc
sahf
and
xlat
ss
fisttpl
mov
push
jecxz
inc
xchg
jae
je
sub
add
sub
jae
push
mov
jns
out
xor
icebp
cmp
add
jns,pn
xor
mov
test
ret
data16
pop
roll
and
aas
out
adc
popa
sbb
mov
jl
andb
popf
lock
gs
andb
or
xlat
popa
jmp
lods
or
fistpll
dec
rcl
cmp
cmp
rcrl
push
inc
sbb
cs
lds
test
or
mov
push
cmp
mov
sbb
clc
mov
lea
jg
sbb
lds
add
outsl
mov
cmp
jae
loopne
or
lods
aaa
inc
jae
es
pop
lcall
pushf
push
push
push
andl
loopne
xor
sti
mov
add
mov
ljmp
addr16
push
sti
xor
jne
and
mov
loopne
jne
ror
cld
out
in
push
mov
inc
cmp
std
mov
loopne
sysexit
insb
sti
call
dec
pop
mov
dec
add
add
sub
scas
int3
mov
jle
pop
mov
mov
inc
mov
and
adc
push
xchg
je
cld
pop
jno
out
mov
shlb
hlt
pop
out
fldcw
xor
push
jo
jg
fsubr
hlt
ret
add
jb
hlt
rclb
push
xchg
repz
mov
movsb
push
add
jae
insb
cmp
push
cmpsb
jmp
adc
xchg
add
or
or
cmp
inc
lret
inc
jnp
or
daa
pop
arpl
outsb
xchg
popf
inc
and
add
dec
ret
jecxz
shll
or
rorl
push
and
cmp
ja
jne
lock
js
lock
stos
aad
lcall
int
call
aam
in
dec
mov
fs
jmp
add
enter
xor
dec
stos
xor
xlat
fwait
push
hlt
or
in
or
rcr
mov
idivb
cmp
inc
cs
dec
jecxz
mov
xchg
inc
xor
xchg
rcrl
repnz
xchg
repz
pusha
stos
lock
mov
mov
loope
cmpl
cmp
pop
jb
xchg
jmp
daa
add
or
push
pop
mov
mov
sahf
int3
mov
jns
in
dec
mov
sarb
mov
dec
adc
mov
loope
jno
cmp
mov
mov
jl
subl
lock
add
into
pusha
fs
aam
push
pop
xchg
sbb
jmp
mov
mov
enter
repnz
lret
adc
cwtl
jb
call
hlt
jl
rclb
ret
and
xchg
cmp
jbe
mov
adc
mov
cmp
mov
adc
je
call
aam
aam
jnp
outsl
cmpsb
and
fs
sahf
aaa
pop
adc
or
adc
pushf
sub
cmp
loopne
dec
sar
es
mulb
jne
movsl
inc
stos
mov
stos
ficoml
xor
mov
jo
rol
movsb
push
jle
add
add
xchg
fwait
addr16
jecxz
ret
fldt
mov
in
shlb
aaa
mov
xchg
add
and
mov
int3
xor
stos
aam
sbb
push
insl
xor
in
push
js
out
aad
jl
xor
notb
fistl
ret
push
sub
out
mov
pop
inc
hlt
add
aam
out
or
cmp
mov
lock
daa
popf
stos
rcrl
out
shll
and
inc
fstps
push
loopne
movsb
iret
cmp
inc
adc
pop
cmp
push
test
cmc
nopl
adc
or
lods
in
ds
adc
das
cmc
mov
dec
inc
out
mov
xchg
sbb
xor
sbbl
aaa
mov
call
iret
fldl
cmp
scas
mov
aaa
das
mov
rcl
ret
push
fs
fisttpll
cwtl
hlt
and
cmp
pop
jnp
loopne
jle
ret
rcrl
pop
cwtl
out
hlt
sbb
and
xchg
sti
push
lea
mov
sbb
sub
cmp
ficoml
inc
movsb
ljmp
or
jnp
and
push
adc
and
in
test
push
sub
fisttpll
ret
incl
outsb
jne
xchg
loopne
inc
add
into
inc
inc
cs
mov
sbb
repz
mov
xor
scas
add
sbb
mov
std
fidivrl
nop
loopne
aas
xor
scas
xchg
mov
add
hlt
outsl
mov
sub
repz
or
inc
imul
ja
add
xor
int
out
jge
pop
out
mov
sbb
sbb
xchg
or
pcmpeqw
std
mov
aaa
adc
ficompl
in
cmpsl
xchg
ja
cmc
xlat
in
hlt
pop
xchg
or
xchg
cmp
movsl
and
ja
jo
cltd
sub
dec
adc
add
ret
mov
push
push
nop
pop
pop
idivb
out
jns
loop
mov
ror
test
adc
insb
test
call
leave
fbstp
sbb
xor
js
aaa
test
adc
pop
pop
and
cmp
xor
xlat
cltd
cli
sti
xor
push
mov
sar
cmp
jbe
cmpsl
fs
jp
mov
test
data16
in
das
jg
mov
xchg
js
xor
mov
ficoml
inc
test
jle
lret
add
adc
imul
pushf
jecxz
call
mov
mov
ret
mov
jl
jg
pop
sbb
xor
and
insb
hlt
jnp
jne
dec
pop
jl
mov
lcall
cld
es
aam
adc
mov
loope
out
test
clc
test
jg
mov
xchg
pusha
push
xchg
repnz
lea
shrb
repnz
push
mov
nop
daa
xchg
popa
fbld
xor
fcomps
adc
mov
push
cmp
jmp
dec
adc
pop
mov
test
xor
pop
push
adc
popa
fsubp
and
inc
add
jae
hlt
mov
dec
mov
addr16
in
sbb
imulb
sarl
fildl
fwait
lret
and
into
jo
pop
ret
lcall
clc
inc
arpl
mov
shlb
outsb
add
mov
pop
xchg
ss
mov
or
aam
cmc
out
push
icebp
stos
cltd
idivb
sahf
xchg
aam
scas
sbb
ret
mov
adc
push
stos
sbb
iret
daa
pop
add
mov
push
add
adc
jp
out
js,pt
loop
fldcw
sub
aam
cwtl
test
pop
shl
out
out
jmp
call
xor
jne
xchg
push
aaa
lock
lret
xor
push
loop
lret
sti
xlat
mov
daa
lock
fs
mov
cmp
add
lret
push
push
scas
call
fcompl
sub
xchg
jne
jmp
nop
cld
fwait
mov
mov
fisubl
pop
out
cmc
inc
or
add
std
push
jo
or
sti
cmc
cmp
or
sti
push
mov
inc
and
cmpsl
xchg
mov
xor
sub
xchg
jle
pop
invlpg
imul
push
pop
outsb
dec
sbb
sahf
loopne
data16
push
xor
mov
std
mov
jne
into
ds
lret
xchg
outsl
mov
cmc
add
jno
or
std
fisttpll
std
fwait
mov
out
fldcw
imul
out
lea
dec
add
push
or
pop
mov
fsts
cli
adc
cld
roll
dec
repnz
or
loope
or
sub
adcl
inc
cmc
testb
push
pop
fwait
icebp
pop
testl
push
movlps
decb
inc
daa
hlt
xor
ret
shl
push
daa
fldenv
jbe
leave
push
lcall
subb
loop
jbe
push
jno
sbb
andb
add
pop
out
xor
dec
cmc
mov
imul
xchg
inc
inc
ret
subl
xlat
push
pop
push
rcrl
es
je
mov
es
push
push
les
scas
jl
divb
test
mov
and
add
in
mov
and
lock
sbb
inc
dec
mov
or
sub
pop
cmp
es
xor
pop
ret
jno
push
ficompl
mov
add
sahf
adc
push
pop
insb
std
push
lfs
mulb
fscale
pusha
mov
jmp
mov
fidivs
sub
pusha
push
jbe
aam
mov
xor
mov
inc
fisttpl
testl
adc
hlt
ja
loopne
mov
or
mov
inc
out
int
cmc
mov
cld
or
jae
sub
inc
loop
pop
ret
in
fdiv
cmp
outsb
hlt
lds
mov
pop
ds
movsb
pop
dec
add
in
add
and
lea
imul
cmc
daa
add
jnp
rclb
xadd
mulb
xchg
gs
mov
mov
scas
xchg
pop
mov
popa
push
out
pop
xchg
pop
mov
pop
sbb
movlps
pop
aas
icebp
and
add
data16
add
mov
fld
and
jecxz
in
pop
movsl
cld
movsl
mov
test
icebp
jo
mov
and
lock
mov
fwait
push
cmc
cld
mov
and
jno
or
cmp
inc
ss
sub
sub
in
mov
or
ss
lret
insl
icebp
aaa
sarl
pop
jae
lock
mov
or
push
xchg
lea
ljmp
cmpsl
lahf
inc
dec
add
enter
and
stc
test
frstor
hlt
test
sbb
sbb
mov
inc
mov
xlat
je
mov
aad
ljmp
aas
ds
aam
sahf
sub
stc
jle
add
repnz
and
inc
cltd
hlt
xor
cmp
cmpsb
lret
sarl
sub
dec
lcall
sub
sbb
push
div
dec
adc
or
dec
xchg
lret
inc
icebp
lods
inc
xchg
push
shrb
sub
fidivs
fwait
push
call
stos
movsb
inc
pop
dec
mov
aam
jns
adc
xchg
test
add
fwait
mov
push
stc
xlat
jle
push
lea
decb
mov
fucomip
jnp
add
xor
repz
in
loopne
pushf
push
xchg
cmc
neg
lret
out
add
adc
sub
xor
mov
dec
xor
in
std
fwait
cltd
cli
test
pop
pop
sub
popa
or
jle
lock
xchg
mov
jecxz
in
insl
pop
adc
clc
pop
sti
push
add
or
std
mov
add
leave
inc
lock
in
sbb
xchg
lods
jmp
add
add
push
add
bound
or
xor
fmul
jnp
sar
pop
jo
std
lcall
adc
and
dec
dec
cld
les
sub
movsl
and
jbe
dec
lret
inc
setne
mov
fists
jb
out
loop
cltd
dec
jl
les
lds
stc
pop
or
pusha
fcompl
sar
push
adc
inc
cmpsl
and
pop
stos
lds
sub
lock
orl
dec
mov
jmp
xor
add
fcmovnu
js
or
xchg
xchg
dec
add
or
popf
sub
fildl
ret
lahf
sub
insl
sbb
movsb
movsb
and
and
xchg
cmp
arpl
sbb
xor
bound
push
and
les
cmp
out
xlat
leave
ljmp
jmp
pop
test
imul
inc
aam
mov
repz
or
stos
cld
fwait
adc
mov
mov
dec
push
movsl
or
out
ljmp
rorl
mov
insb
and
push
insl
fbstp
nop
lds
mov
jnp
hlt
pop
rol
jmp
sub
inc
xor
ja
and
cs
int3
outsb
add
enter
cmpsl
pop
xor
rcl
and
mov
clc
mov
lea
sbb
mov
push
xlat
cli
ss
and
and
loop
mov
fidivrl
out
dec
xchg
pop
inc
inc
push
rcr
jo
jp
inc
cmp
decb
mov
xor
lahf
cmc
ljmp
jmp
in
and
cmp
push
lret
sub
cwtl
or
jecxz
test
fucom
adc
sbb
pmulhw
movsl
push
daa
iret
loope
pop
orl
sti
jmp
lock
nop
xor
mov
mov
mov
sti
cmp
sub
sbb
test
lahf
sbb
or
cltd
add
push
mov
cld
scas
jno
iret
sub
insb
mov
pop
popf
sub
mov
jmp
sbb
mov
ss
xchg
xor
mov
and
inc
out
in
jg
add
mov
insb
xchg
mov
cmc
or
push
shl
daa
fiaddl
sti
xor
mov
shl
je
negl
cmp
xor
add
push
pop
jge
les
ds
sbb
lods
mov
pop
ljmp
ljmp
dec
jno
add
mov
enter
mov
and
sahf
cs
mov
ret
pop
dec
rcrb
cld
dec
xlat
or
pop
push
mov
mov
push
cs
inc
enter
mov
jecxz
rolb
out
xor
pop
adc
ja
out
cmp
xchg
cltd
int
push
cli
cmpsb
xor
cmp
adc
aad
sarl
inc
leave
jo
xorl
push
int3
daa
ja
or
shl
jmp
add
jnp
sub
aas
mov
stos
int3
xor
and
jecxz
or
rcl
pop
push
mov
jmp
out
ja
out
mov
dec
in
and
jl
xor
dec
xlat
xchg
jno
mov
jecxz
xchg
in
inc
mov
test
sbb
cld
aam
or
icebp
iret
repz
test
push
lret
rolb
pushl
xor
push
loopne
ss
scas
pop
mov
xor
inc
aaa
std
cmp
push
repnz
sti
pop
out
out
mov
mov
cmpsl
roll
das
div
adc
dec
in
pop
cld
sbb
add
sbb
xchg
fs
cmc
daa
mov
cmpsb
ficompl
push
adc
xor
sub
cmp
addl
ljmp
pop
mov
pop
comiss
jge
fiaddl
ds
mov
hlt
into
les
mov
dec
ficomps
inc
not
or
popa
push
rclb
mov
int3
ficoms
and
mov
out
cmp
mov
pop
and
sub
xor
jmp
xlat
or
jo
in
lahf
repnz
lock
mov
pop
fcompl
adc
mov
les
cld
fyl2x
insl
push
out
adc
xchg
mov
imul
or
testl
je
mov
lcall
aam
fwait
mov
xor
mov
jecxz
cmp
or
jne
fcmove
inc
pop
pop
out
xchg
ss
dec
cmc
xor
jmp
in
lds
sbb
mov
xor
jo
push
jne
sbb
out
in
in
dec
mov
outsb
dec
int3
jmp
rcrb
aam
outsl
push
adc
orl
aas
jmp
xor
mov
dec
das
cld
jno
out
cmp
outsb
ret
insb
jb
movsb
sub
fsub
fistpll
mov
jl
jns
gs
jae
fiaddl
push
xchg
jecxz
hlt
push
fstpt
inc
xlat
icebp
inc
jae
movsb
scas
cmp
adc
les
sub
pop
or
test
rcr
cwtl
shlb
dec
mov
cmp
xchg
fisubs
inc
jns
ljmp
mov
jg
mov
arpl
movsb
jle
xlat
sbbl
pop
add
popa
and
notb
sbb
push
stc
lcall
bound
cmp
das
aad
adc
pop
mov
call
mov
add
icebp
lock
mov
jae
stos
inc
push
fidivl
cmpsb
cmpsb
fwait
shll
leave
dec
pop
push
add
pop
sti
sub
adc
mov
mov
cmp
mov
fcomps
mov
enter
shlb
into
std
xor
xor
fstl
pushf
addr16
inc
jl
psubusb
cmp
lock
clc
xor
outsl
add
mov
mov
sbb
cmovle
xor
call
or
rcll
mov
in
sbb
dec
std
aam
out
pop
xor
scas
lods
mov
xor
out
cmp
push
and
fcomip
and
nop
mov
fistpll
add
mov
jecxz
and
dec
outsl
std
xor
add
adc
mov
ret
xor
lret
icebp
or
in
cmp
icebp
sub
movsl
fbld
xor
in
dec
or
or
sbb
and
add
mov
push
add
xlat
popa
mov
loope
inc
repnz
push
pushf
insb
dec
enter
cs
shl
adc
out
jecxz
adc
jmp
push
ds
push
cs
or
movsl
out
into
mov
subb
or
js
mov
jae
sub
sar
popa
lcall
mov
fs
jns
pop
jne
jmp
add
adc
test
scas
sbb
jecxz
add
in
inc
and
cmp
aaa
repz
fistpll
jbe
scas
lods
fistl
mov
xchg
sti
sarl
lods
pop
or
addr16
cmp
adc
scas
pop
imul
push
dec
xchg
popa
jns
outsl
mov
adc
sahf
out
sahf
mov
push
xchg
fwait
mov
jmp
loopne
cli
mov
cltd
mov
inc
mov
jbe
stos
daa
dec
es
lds
push
lahf
lret
sti
add
cltd
or
xchg
sarl
lret
xchg
mov
mov
loope
sbb
sbb
out
out
fcomp
jnp
fidivrs
or
jae
es
rorl
pop
dec
jo
jge
and
in
cmp
insl
fistpl
adc
pop
pop
xor
pop
jmp
fs
pop
data16
cmp
cmp
imul
xchg
pop
imul
pop
inc
inc
lds
add
cmp
aad
pop
es
lds
push
adc
jecxz
mov
mov
imul
xchg
xchg
sbb
outsl
scas
loop
push
sahf
insb
xchg
daa
mov
mov
cmp
call
in
pusha
jecxz
mov
mov
stos
std
or
cmp
mov
fmul
outsb
popf
pop
scas
dec
fsub
enter
cmp
pop
out
jge
or
sub
lret
int3
mov
stc
cmc
push
add
xchg
mov
idivl
addr16
cs
mov
add
pop
and
inc
gs
fcmovbe
inc
fcompl
push
dec
dec
ror
add
mov
push
inc
mov
js
inc
loop
ljmp
mov
sub
ret
add
cmp
jle
jg
or
fcmovnu
cwtl
sub
arpl
popf
ror
pop
cli
pop
jmp
stc
and
add
loope
push
repnz
aaa
loop
in
aad
repnz
call
pop
sub
push
xchg
cld
daa
fdivs
add
xor
xor
fbstp
cmp
addb
loopne
or
daa
lahf
xchg
and
mov
jne
mov
cmp
cld
push
testb
loop
out
repz
mov
movsl
subl
inc
sahf
hlt
inc
scas
daa
mov
lret
cli
cmp
popa
testb
mov
out
mov
push
in
loop
test
in
pop
aaa
add
push
ds
nop
in
pop
lret
loopne
xchg
movsl
and
popa
jge
aam
int
lret
or
repnz
shrb
xlat
addl
ror
mov
mov
or
aam
in
test
or
push
jbe
push
pop
cwtl
push
cmp
xchg
pop
push
adc
es
xchg
mov
pavgb
xor
jae
xchg
aam
loop
bound
xor
testb
pop
inc
popf
bound
adc
mov
cmpsl
xor
fs
fsubrs
adc
cmp
insb
sbb
push
xor
adc
sub
or
call
cltd
fists
in
iret
call
cmc
mov
stos
jle
scas
push
sti
in
mov
jge
test
pop
mov
ja
push
jae
xlat
mov
lock
loop
lds
push
add
fistps
jge,pn
cmc
xchg
jo
in
movsl
cli
cs
xor
imul
nop
loop
ja
jecxz
jp
outsl
stc
mov
xchg
sahf
out
in
insl
outsl
jecxz
jmp
add
add
mov
xchg
bound
or
int3
dec
int
into
cs
loope
test
jae
ret
loope
scas
pop
jno
movsb
ds
and
scas
cmc
loope
decl
pop
xor
scas
std
pop
pusha
pop
xchg
and
inc
aam
dec
scas
xchg
mov
mov
mov
add
inc
fs
fidivl
sbb
lds
call
shrb
jmp
cmc
jecxz
pop
outsb
out
daa
bswap
jne
iret
fadds
jle
loope
adc
imul
dec
xor
and
fadds
mov
les
andb
lret
lcall
cwtl
or
pop
mov
js
hlt
pop
rcrl
in
push
rcrb
pop
jecxz
push
popl
pshufw
cltd
stc
sub
adc
cmc
loopne
out
pop
mov
xor
fs
mov
movsl
in
push
push
cmc
sbb
ja
sbb
call
adc
or
push
lea
test
out
and
lret
pop
fcmovu
daa
addb
jp
lcall
jmp
dec
sbb
add
or
fucom
adc
push
aaa
movaps
in
adc
sbb
daa
cmc
iret
mov
and
inc
test
cld
and
out
cmp
shlb
add
fistps
test
xchg
rorb
jae
pop
into
jle
mov
int3
jns
iret
mov
mov
sarl
dec
push
or
and
xchg
pop
mov
in
push
add
out
cmp
xchg
out
jbe
aam
sarb
lock
fidivrs
in
add
nop
idiv
mov
jne
sbb
lock
lods
mov
movsb
sub
cmpsl
movsl
mov
jo
lret
sub
mull
cmp
adc
inc
fwait
mov
push
in
repz
nop
aas
mov
push
cwtl
les
xchg
cmc
in
orl
mov
sub
ret
iret
incl
push
inc
frstor
jmp
dec
pop
cmp
push
mov
xor
jg
inc
repz
aad
lret
cli
ss
lds
fnstsw
addb
pop
scas
ss
or
test
push
jbe
inc
pop
push
add
jg
add
stc
imul
fcom
sbbl
mov
adc
or
out
inc
inc
cli
pop
cmp
in
cmp
and
dec
aam
cmp
enter
aad
icebp
inc
or
sub
push
sti
push
out
loope
sti
xchg
adc
and
inc
inc
pop
lods
fnsave
in
aad
xchg
pop
loop
mov
stc
push
jns
fsubr
in
jb
fcmovnb
jl
mov
jecxz
lods
arpl
loope
aaa
push
stos
orl
pushl
lds
das
sub
jl
loop
inc
fists
insb
pusha
int3
stos
sbb
adc
pop
xchg
inc
lret
icebp
mov
aas
add
fsubrl
insl
fwait
mov
jecxz
mov
imul
lods
lods
cmp
dec
sub
sbb
fsub
pop
arpl
mov
sti
push
push
pop
pop
cmpsl
mov
adc
loope
loopne
xchg
test
cli
stos
pop
mov
sbb
jae
xorl
out
cld
cmp
outsl
pop
pop
addr16
sahf
repz
pop
ds
jmp
pop
and
adc
jmp
shr
push
ja
cmp
das
dec
add
inc
pop
xchg
dec
inc
dec
or
mov
cmp
adc
push
out
cmp
lods
jne
and
mov
jne
aas
xor
and
pop
gs
mov
xor
outsl
add
in
mov
ret
pop
xor
aas
sbb
sbb
aad
add
mov
push
add
loopne
incl
pop
fidivrl
aad
lock
ret
cld
cmp
dec
stc
in
fcmovnb
dec
push
inc
pop
pop
stos
push
jae
stos
nop
xor
mov
push
or
inc
add
out
push
pop
and
sar
pop
pop
jle
repnz
or
outsl
cmc
call
mov
and
pusha
push
mov
test
mov
inc
or
sete
or
xor
cld
mov
mov
push
outsl
pop
das
and
inc
cmpsl
jl
push
inc
adc
aam
dec
mov
cwtl
fcomps
xor
add
ret
paddsw
lods
dec
mov
repnz
outsl
sub
stos
test
cmp
pop
fbld
in
outsl
push
rcll
fstl
cmp
sti
push
inc
out
xchg
push
loop
es
stc
in
fcmovne
enter
insl
fwait
divl
sahf
fxch
pop
mov
incl
sub
out
imul
xor
mov
ret
lret
mov
jle
scas
sbb
stos
mov
cltd
sbb
add
mov
sar
and
xor
cmpsb
outsb
nop
aad
iret
cmp
mul
out
pop
frstor
fadds
es
jg
or
xor
push
jb
jne
and
fisttps
pusha
xor
addr16
aam
fmuls
inc
mov
and
cmp
cmc
adc
add
pop
dec
cld
shr
xor
test
out
shll
shlb
pop
sbb
call
mov
jne
mov
leave
addr16
loopne
data16
jae
jae
push
aam
loop
test
jmp
inc
jne
adc
test
mov
lock
daa
mov
adc
fldcw
cmpsl
test
jp
int
xor
scas
pop
aas
cmc
xchg
lea
mov
xchg
in
xor
movsl
out
dec
push
test
mov
pop
mov
sysenter
push
push
jp
clc
sbb
call
push
cmp
lahf
out
mov
and
scas
lcall
jg
lods
mov
cmp
pop
xchg
adc
andb
and
daa
adc
cmp
roll
in
loope
int
pop
jne
loopne
ss
enter
pop
inc
jl
lock
scas
push
pusha
adc
inc
sbb
xlat
icebp
xchg
sbb
mov
inc
jecxz
pop
imul
and
test
fisttpll
cmova
add
js
push
mov
arpl
mov
ds
sub
or
int3
pop
loopne
dec
mov
std
repz
incl
jp
std
int
fld
cli
stc
pop
xchg
int
mov
push
adc
mov
sub
mov
imul
addr16
js
inc
xchg
inc
ficoms
loop
ljmp
mov
sti
notl
fcomps
fstpt
jo
lods
cmp
inc
push
push
leave
jne
xchg
inc
add
testb
mov
pop
arpl
mov
jne
jmp
mov
fisttpl
call
add
stc
aad
cmp
xor
jl
enter
inc
fnstenv
push
xor
or
jge
arpl
ficompl
adc
cli
sub
cmp
nop
movups
fisubrl
iret
xchg
sti
dec
inc
sub
adc
jmp
test
jb
stos
aam
inc
aas
inc
xchg
cwtl
pop
orl
push
fcmovnb
push
cmp
leave
xchg
xor
loopne
adc
or
xchg
out
je
push
cmc
or
es
lret
adc
sub
cld
enter
push
pop
sti
pusha
fwait
das
int3
mov
inc
loop
or
sub
jl
cltd
pop
testb
stos
out
aas
imul
dec
xlat
mov
dec
mov
lcall
dec
mov
or
and
mov
jmp
sbb
cmp
jecxz
and
sbb
mov
imul
rcr
mov
out
test
sbb
outsb
sti
ds
cli
xchg
rolb
adc
popa
add
outsb
popa
aam
xor
mov
mov
das
fcoml
fcomps
mov
dec
cltd
out
loope
outsb
std
mov
shlb
dec
jmp
or
pop
adc
xor
inc
psrlq
inc
mov
sub
or
cmp
aam
xor
xorl
in
out
scas
mov
stos
push
out
testb
cmpsl
rcrb
movsl
add
or
jae
and
and
cmpb
addr16
inc
fbstp
xchg
std
pop
jne
mov
jae
xlat
xchg
insb
nop
dec
lods
xor
xlat
repnz
xlat
push
add
repnz
and
clc
fnsave
jae
ss
or
sti
jno
mov
fmuls
or
cmp
out
mov
fucomip
test
pop
add
cmpsb
pop
push
loope
xchg
aam
xchg
popa
js
lods
mov
fisubrl
mov
dec
xchg
pop
add
imul
test
mov
pop
xor
pop
imul
repz
into
and
lret
adc
cs
repz
or
loope
xchg
add
and
push
fsubl
aaa
mov
xchg
push
aam
cmpl
lret
xchg
cmp
adc
adc
pop
mov
repz
outsl
sbb
jae
cmc
jge
loopne
neg
js
push
adc
push
xchg
daa
inc
push
jmp
lea
sahf
sti
fdivrs
int3
loopne
sub
jmp
jecxz
fnstcw
and
enter
fucom
push
push
dec
and
mov
add
cmpb
pop
idiv
cli
pop
xlat
aad
in
shl
addr16
inc
or
push
aas
enter
push
xchg
popa
dec
fmull
aas
jns
dec
in
fisubrs
imul
sahf
arpl
adc
add
mov
pushf
jmp
and
adc
push
iret
outsl
cmpsl
jae
or
out
xor
cmpsl
lea
push
leave
sahf
push
imul
jne
jne
and
call
fdivrl
pop
bound
fcoms
pop
leave
ja
dec
inc
loop
pop
add
sbb
mov
push
and
aaa
mov
push
imul
or
hlt
or
ffree
sahf
fcomi
cmc
popa
negb
ja
aas
loope
inc
dec
roll
aas
or
hlt
adc
adc
mov
popf
add
out
cmp
daa
out
mov
pop
ja
addr16
aam
mov
ds
mov
fcomip
mov
mov
add
dec
xor
xchg
lret
sbb
or
add
cmp
test
cmp
aam
fadds
sbb
xor
adc
in
dec
subb
loopne
fndisi(8087
int
call
cmc
jecxz
inc
stc
mul
jl
hlt
das
mov
adc
je
bound
shll
mov
xlat
adc
clc
mov
int3
ljmp
xchg
push
sbb
jnp
jnp
sbb
mov
int3
xor
jbe
or
clc
xor
add
nop
push
and
pop
sub
adc
and
lcall
inc
hlt
xchg
ror
sti
pushl
pop
ljmp
pop
and
inc
imul
xor
cmpsb
ficoml
and
fsubrp
in
inc
imul
and
out
dec
or
jbe
divl
aad
cmp
sub
test
push
sarl
repnz
inc
jle
into
hlt
lods
jne
pop
sub
pop
pop
push
mov
cltd
mov
in
xlat
lods
mov
mov
pop
out
cmpsl
stc
add
mov
pop
fcmovnbe
push
mov
sub
push
das
dec
aam
aas
xor
mov
fwait
push
push
lods
inc
xchg
mov
mov
mov
stc
xor
sub
sbb
and
xchg
in
jg
incl
sbb
hlt
int3
cli
xchg
fisubrs
add
stos
pop
mov
mov
lods
fucomip
aas
jb
scas
in
div
lea
fwait
pop
ds
and
adc
outsl
aam
sbb
rolb
test
adc
or
out
cld
push
dec
inc
mov
mov
vunpckhpd
bound
popa
jge
imul
xlat
push
orl
pop
jg
aam
push
or
mov
out
cmp
arpl
push
bound
out
dec
mov
in
sbb
stos
pop
scas
push
pop
movsl
out
adc
cwtl
fsubr
add
fcoms
in
push
jmp
lds
rorl
mov
imul
fnstsw
test
pusha
sub
cld
fnstcw
out
jns
push
incb
movsb
dec
add
arpl
add
fldl
mov
je
jbe
mov
push
jge
pop
jns
or
shll
idivl
stos
int
pop
mov
pop
push
jg
outsl
adc
fisttpll
daa
andps
xchg
out
jecxz
fsubrl
pop
movsb
pmuludq
int
ret
stc
mov
mov
addr16
adc
jp
in
shll
jmp
pushf
leave
repz
mov
push
mov
push
adc
dec
jmp
scas
pop
fisubrs
push
lret
dec
pop
ljmp
inc
scas
add
cs
std
loop
inc
adc
sub
lods
cmp
jbe
cmpsl
and
andb
clc
lods
xchg
xor
push
shl
push
imul
dec
cmpsl
mov
mov
rol
stc
lds
rorl
jnp
mov
es
inc
ja
pop
dec
hlt
pop
cmp
mov
adc
push
cmp
inc
dec
sub
pop
jge
mov
push
bound
inc
sahf
dec
fildll
fmul
lods
dec
push
aam
mov
cmp
js
je
and
jns
push
lret
xchg
int3
es
outsl
or
lods
idivb
fldlg2
divl
mov
push
pop
cltd
mov
addr16
out
lcall
xchg
push
dec
xchg
sbb
in
stc
sub
lods
outsl
xor
jnp
mov
jne
mov
jnp
scas
fnstenv
mov
mov
out
repz
jmp
mov
pop
rorl
cmc
jl
inc
arpl
dec
mov
insb
sub
shrb
insl
sbb
jo
rcll
cld
je
fildll
movsl
orl
stos
lods
push
mov
sbb
lds
inc
dec
xchg
xor
sbb
in
pop
add
rolb
jg
in
jecxz
jg
cli
gs
int
mov
shrl
cmpsl
sar
cmc
mov
cld
xchg
sbb
inc
js
xor
inc
outsl
in
push
sub
mov
fcomi
ret
shr
cmp
scas
iret
sub
and
fisubl
dec
pop
push
lds
cmpsl
sbb
or
xchg
jo
xchg
mov
xor
push
int3
movsl
and
rcll
aam
jns
call
outsb
std
sbb
mov
inc
lahf
push
xor
mov
pop
or
lock
sbb
std
call
sar
jg
hlt
insb
mov
ss
cmp
push
add
hlt
dec
sbb
jae
mov
iret
and
sarb
dec
addr16
stos
push
fs
sub
loopne
fs
test
pop
jge
rcrl
mov
or
mov
ror
ds
jno
ret
ret
sub
mov
and
enter
and
push
push
das
out
scas
sbb
mov
ds
gs
add
hlt
cmpsl
xor
jno
jo
leave
cwtl
repz
lahf
push
add
dec
add
bound
cld
frstor
dec
sub
mov
lret
sbbb
leave
mov
in
call
cmc
xchg
push
mov
push
enter
xor
add
in
sbb
popf
clc
not
add
lds
out
xchg
jg
mov
mov
xor
les
pusha
ret
adc
fdivs
fadds
cmpsb
inc
jb
test
fldcw
mov
das
lea
cli
add
or
out
mov
mov
loopne
aam
sub
test
and
jp
dec
test
ja
mov
mov
ss
pusha
mov
imul
mov
ds
mov
cli
mov
in
fwait
adc
xchg
addb
cli
icebp
mov
nop
bound
xor
enter
movsl
jo
pushf
sbb
xor
scas
mov
ret
sbb
xor
push
mov
sbbl
cmp
imulb
in
push
les
cmp
jo
sub
lods
and
sti
mov
fistl
cmp
fs
rclb
jp
in
cltd
daa
flds
xchg
cmpsb
mov
mov
aad
ss
stos
dec
stos
push
inc
push
dec
cmp
outsl
jecxz
pusha
jecxz
adc
pop
icebp
addr16
mov
pop
lods
das
clc
fsub
push
sub
sbb
xor
inc
cs
jns
fildl
mov
js
fucomp
cs
dec
inc
mov
xchg
dec
std
aas
popf
jle
pop
jg
mov
ret
aam
or
sbb
push
mov
xor
jge
lods
mov
cmpsl
loopne
fidivl
add
dec
adc
lods
aam
shll
pop
mov
cld
cltd
pop
shll
cmp
stc
ss
shl
int
inc
mov
mov
aad
or
sbb
mov
jge
sbb
lcall
call
jbe
ss
dec
add
mov
fisttpll
push
ja
dec
ficoml
stos
jne
xor
sbb
pusha
push
imul
sub
js
mov
pop
jns
adc
jae
aad
jbe
fdivs
mov
push
pop
xchg
fmuls
add
adc
inc
and
inc
push
xor
enter
inc
inc
iret
sahf
sub
ljmp
hlt
lcall
dec
call
aam
andb
dec
jle
cwtl
clc
ljmp
jg
fwait
inc
pop
rcl
xor
call
in
and
or
mov
lds
adc
jge
sbb
das
out
lahf
pushf
test
cld
or
xor
cmp
inc
cmp
cmp
jo
jbe
fiaddl
inc
adc
xor
hlt
les
js
sub
jmp
pop
insl
repz
jl
pop
sub
loop
out
jge
add
int3
das
push
add
cmc
lods
mov
sahf
out
out
push
pop
lahf
inc
push
lods
push
lea
sub
pop
mov
adc
sbb
jp
dec
sbb
popa
mov
sub
dec
sarb
je
push
push
cs
test
sti
mov
pusha
inc
je
ss
mov
jb
and
or
jle
fs
inc
rcr
sti
xlat
fiaddl
add
xchg
testl
jne
ret
sahf
add
pop
pop
add
idivl
loope
pop
hlt
ja
ja
add
mov
mov
inc
cmp
icebp
insb
lods
mov
add
inc
push
cld
mov
push
fsubrl
adc
add
adc
cld
not
push
adc
loopne
hlt
aam
mov
insl
pop
dec
mov
arpl
insb
notl
xchg
dec
sti
lods
jecxz
jmp
lock
add
adc
enter
fisttpll
popf
or
mov
testl
xor
pop
int3
pop
cltd
je
xchg
mov
sahf
xchg
shll
adc
xchg
xchg
sbb
lea
pusha
xchg
mov
push
jo
mov
fbld
sbb
xchg
mov
pusha
mov
les
out
xchg
aam
add
mulb
fcomps
loop
nop
mov
out
xor
adcb
xor
sti
push
jnp
incl
jge
pop
out
scas
adc
or
loope
push
adc
mov
add
xor
clc
call
push
sti
inc
cmp
pop
dec
sbb
movsb
fs
jnp
lock
mov
out
lods
xor
or
das
sbb
push
enter
cmpsl
icebp
push
stos
lds
fistl
test
jg
cmp
mov
jecxz
or
lahf
data16
ret
imulb
sub
dec
lock
mov
push
ret
push
ret
aas
fisubrl
ja
fwait
inc
das
insb
lcall
sbb
sbbl
pop
and
pushf
les
std
cmp
das
xchg
add
lahf
dec
inc
add
lods
scas
and
sbb
jno
xchg
out
add
mov
jnp
clc
sbb
sub
jle
std
mov
cmp
and
aad
push
mov
mov
dec
popl
xchg
mov
inc
test
daa
in
andl
xchg
mov
mov
loope
jno
cmc
sub
pushf
sti
out
cmpsb
aam
fdivl
subps
jae
popa
push
dec
and
xchg
out
mov
dec
lahf
pop
mov
shl
mov
xchg
pop
pop
add
inc
add
pop
es
push
adc
divb
xor
inc
mov
divl
lret
cmpsb
lcall
cmpsb
sub
clc
sub
lret
ljmp
jns
cmp
loopne
and
mov
jecxz
push
pop
cli
inc
pop
mov
push
dec
inc
roll
jo
nop
cwtl
sub
fsub
mov
je
inc
push
fsub
fsubrp
cmp
movsb
jle
cmpsl
loopne
add
and
ret
repz
cmpsb
int
cs
sub
jecxz
fadds
pop
pop
pop
mov
dec
in
push
cmp
push
das
sbb
dec
xor
add
xor
arpl
andb
lock
nopl
adc
cmp
or
adc
pop
pop
nop
in
inc
pop
insb
xor
rorb
fimull
dec
mov
inc
aas
ret
cmpsl
pop
or
mov
or
sub
lcall
fwait
inc
sahf
lock
jnp
movsb
push
pop
fwait
inc
jne
xchg
aam
add
in
inc
aaa
mov
mov
pop
je
leave
sbb
ja
jno
ljmp
aaa
out
dec
dec
imul
cmpsb
das
dec
dec
jg
push
mov
filds
lret
repnz
mov
mov
xlat
test
mov
cmp
jae
scas
push
cmp
push
push
shl
inc
push
xor
or
sub
bound
daa
mov
mov
push
jae
daa
inc
sahf
lods
dec
sbb
push
cld
inc
xor
gs
and
sti
nop
jge
out
pop
push
cmp
adc
icebp
dec
mov
inc
sub
fdivrl
push
adcb
xlat
jns
sbb
js
pop
int
cli
pop
inc
xchg
push
lods
leave
push
cmp
test
jno
das
adcb
stos
jge
rorb
or
jno
loop
dec
jl
push
lock
ds
dec
jl
int
adc
in
setno
jg
aam
cmp
push
adc
ja
mov
popa
fldcw
push
cmc
sbb
insl
sbbb
jecxz
fwait
gs
movsb
leave
mov
xlat
jo
shll
and
call
jnp
imul
gs
imul
mov
movsb
popa
out
add
sbb
popf
fwait
sub
test
das
iret
out
pop
mov
repz
mov
cs
hlt
inc
in
sbb
sub
aad
rclb
js
aam
outsb
ret
inc
or
adc
and
stos
sub
sbb
loop
pop
xor
adcb
stos
dec
mov
dec
adc
jno
jb
std
lcall
clc
push
inc
xor
std
mov
lahf
hlt
adc
dec
or
mov
inc
jbe
insl
xchg
icebp
push
gs
sbb
adc
inc
jmp
jb
repz
and
movb
aam
add
fbstp
mov
popf
lods
scas
jns
mov
xor
mov
out
push
push
xchg
push
fs
imul
and
imul
and
dec
into
inc
out
lods
inc
xchg
pushf
es
xor
push
pusha
repz
pop
push
mov
adc
cli
aad
testb
or
inc
ret
hlt
add
in
sti
push
icebp
cli
sbb
fdivs
inc
es
sahf
pop
push
pop
cmp
lods
mov
outsb
push
mov
and
add
add
push
jns
stos
jae
mov
nop
dec
push
xchg
js
sbb
mov
xor
sarb
fsubs
out
loope
lock
push
fstpt
aad
hlt
les
sub
push
inc
fst
cld
ss
leave
and
push
sub
xchg
and
in
cwtl
scas
and
mov
mov
popa
je
in
enter
addr16
cli
mov
push
sbb
push
cmp
ficoml
pop
push
and
xchg
das
addr16
scas
sbb
adc
push
adc
hlt
cmpsl
mov
dec
adc
pop
sub
lods
mov
fmull
sbb
jl
lock
clc
mov
inc
invd
or
or
repz
xchg
adc
cmp
stos
jnp
fwait
mov
test
inc
sub
add
pop
xchg
inc
popa
mov
aaa
push
mov
add
in
mov
daa
icebp
ss
cmpsb
sarb
mov
stos
inc
xchg
mov
xor
jne
inc
mov
inc
inc
add
sbb
mov
sbb
mov
push
or
cmp
int
ja
dec
sub
dec
mov
xor
mov
mov
add
jno
push
out
or
sub
fidivrl
add
sarl
inc
push
jns
testb
in
repnz
add
movb
ret
sti
sbb
daa
adc
or
dec
das
aam
inc
in
dec
push
in
addr16
and
sub
mov
fdivl
jno
aad
lahf
add
in
xor
mov
mov
std
adc
outsb
dec
and
lds
movsl
jecxz
add
xchg
aas
cmc
cli
jno
cmp
jmp
or
rorl
scas
psubb
mov
sti
mov
es
shlb
adc
sbb
fsub
jp
in
test
loopne
xlat
out
xlat
sbb
lods
and
add
pop
into
cmp
pushl
dec
aad
cs
adc
jecxz
inc
addr16
dec
int3
out
out
stc
int
or
fwait
cltd
mull
xchg
jge
ret
and
xor
adc
inc
insb
setnp
and
jne
pop
xchg
sbb
pop
pop
adc
repz
push
jg
cmp
pop
push
ja
mov
mov
lods
dec
xor
and
in
repz
aas
mov
sub
fsincos
aas
cmp
lret
es
jmp
mov
lods
enter
popa
loop
lods
inc
add
int
loopne
xor
cld
xchg
and
test
mov
out
in
icebp
mov
or
movsl
data16
cmp
loope
addb
inc
mov
loopne
push
lods
vmovntps
jo
mov
sahf
cmpsb
add
fs
std
pop
mov
fdivs
ljmp
or
adcb
shrl
jle
sbb
fstpt
sbb
pop
test
jne
xchg
push
imul
pusha
mov
pop
mov
jle
mov
jne
fbld
pop
out
in
lcall
nop
lock
inc
or
aad
add
jno
aas
pusha
sti
int
aad
imul
stos
xchg
mov
mov
pop
jecxz
das
mov
lock
test
dec
mov
lcall
mov
into
and
iret
mov
xor
jle
lods
or
mov
out
fistl
fmull
inc
inc
fbstp
pop
ret
addr16
js
jno
negl
pop
jae
xor
lret
stos
gs
inc
mov
adc
inc
mov
push
jle
lea
add
int
gs
adc
mov
adc
imull
xchg
lret
loope
mov
mov
sbb
lock
jbe
loope
or
push
ret
ljmp
popa
mov
mov
sub
mov
mov
cli
shlb
lea
mov
mov
add
ret
popf
or
sub
rorl
out
and
add
insl
das
cmp
push
outsb
addl
jle
add
jb
pop
sub
add
insb
sub
stos
xchg
rcrb
xchg
outsb
adc
je
mov
adc
std
adc
rcll
icebp
fmul
xchg
pop
andl
adc
mov
jns
mov
dec
std
mov
jb
add
jle
addr16
lds
aas
pop
fcmovnbe
adc
lods
or
aam
loope
mov
mov
out
leave
mov
fs
mov
pop
nop
add
pop
repz
scas
scas
ds
mov
sbb
sbb
test
push
xor
pop
shlb
pop
jp
and
in
inc
test
dec
inc
and
out
push
push
sahf
stc
fwait
inc
lds
add
notb
pop
pop
iret
cmpsb
pushl
repz
aaa
fldl
fdiv
fdivs
test
out
push
add
fiadds
and
les
mov
call
pop
loop
pop
mov
fdivrl
movsl
fmul
mov
loopne
add
mov
fists
call
cmp
xor
add
in
push
xlat
int
movsl
fcomp
or
add
mov
or
arpl
daa
adc
stos
adc
sbb
ja
cltd
testl
mov
sbb
mov
and
or
cmp
sbb
test
jnp
push
xchg
jae
rcll
xor
std
push
or
jg
pop
sbb
xor
xchg
or
std
xchg
imul
callw
imul
repnz
xchg
movsb
fdivs
sbb
popa
lret
pop
adc
push
ret
sub
push
nop
jo
addb
test
cmpsl
xchg
mov
shll
push
mov
inc
loopne
insl
enter
idivl
divl
aam
mov
shr
pop
jg
xor
inc
add
aas
jb
dec
inc
mov
mov
ret
dec
scas
sbb
es
xchg
out
adc
push
std
sarb
das
call
mov
pop
loopne
shll
inc
mov
lcall
lret
push
out
dec
iret
inc
pop
jle
sub
dec
jecxz
pop
xchg
in
ficompl
bound
jne
or
ret
in
mov
cwtl
in
push
dec
cmp
or
es
dec
dec
jno
xchg
mov
cmp
pop
int
or
push
inc
call
dec
sub
leave
inc
ds
pop
pushf
js
repnz
and
inc
mov
dec
scas
arpl
mov
pop
fwait
out
xor
in
clc
or
and
or
inc
daa
pop
in
add
jo
mov
loopne
inc
stos
std
push
repz
lds
push
pop
mov
mov
iret
dec
sbb
lea
xchg
js
cmp
insb
mov
enter
imul
insl
mov
popf
test
in
adc
ret
pop
jne
add
xor
mov
jo
xor
sti
sub
mov
inc
xor
dec
push
divl
adc
mov
adc
cmpl
inc
sahf
mov
movsl
pushf
movsb
cmp
xchg
sbb
inc
or
loopne
add
cmpsb
inc
or
jmp
xchg
sub
test
xlat
scas
movsb
mov
dec
das
xor
ljmp
push
mov
inc
jmp
ret
mov
lcall
fsubs
pop
pop
pavgb
pop
loope
loop,pn
test
and
cmp
mov
cmp
jo
orb
mov
xchg
xchg
hlt
dec
push
sahf
addl
xchg
scas
or
cmpsb
cmp
nop
add
add
out
shrl
das
push
bound
das
fdivs
jbe
or
pop
lahf
mov
mov
sub
mov
notl
cmp
mov
jo
frstor
jns
xor
lea
mov
pop
mov
scas
popa
fcoms
js
inc
test
std
add
je
or
add
nop
cwtl
push
incl
cmc
in
fbstp
push
roll
lcall
or
fiadds
mov
mov
test
sub
mov
xor
nop
xlat
xor
sub
repnz
push
mov
outsb
fnsave
sub
out
or
fwait
popa
add
loopne
add
insb
aad
add
fstpt
push
stc
lcall
sub
std
lds
pop
adc
out
stc
out
in
lds
shl
fistpll
xor
push
js
mov
aam
outsb
add
sarl
cmp
lret
aad
scas
pop
outsl
or
in
cs
pop
xchg
out
mov
cmc
aam
mov
fldcw
aad
cmp
xor
dec
dec
push
in
mov
ficoms
jne
mov
xor
fsubrl
pop
iret
adc
and
dec
rcll
dec
jmp
fists
addl
adc
push
popa
mov
pusha
mov
repnz
rclb
xchg
shrb
nop
fistps
adc
pop
cld
pop
fmuls
loopne
idivb
xlat
cld
dec
out
aad
xchg
mov
xchg
ficoms
mov
cwtl
popf
jns
adc
loopne
ss
pop
bound
mov
mov
shrb
mov
dec
push
out
cs
stc
lcall
adc
fwait
out
cmp
popa
fnsave
jnp
fwait
das
or
and
inc
enter
sbb
outsb
pop
fdiv
pusha
in
inc
mov
pop
push
sahf
jmp
and
pop
mov
dec
lds
rcrb
sub
xchg
dec
adc
cltd
xor
jecxz
lret
std
xchg
sub
sti
in
rorl
in
cmpsl
outsl
push
loopne
sar
cltd
dec
jl
fsts
imul
scas
in
mov
aaa
hlt
sbb
xchg
sti
out
or
ficoml
fldt
aad
scas
xchg
fisttpl
insb
shll
cli
imul
in
push
xor
movsl
fisubrl
jmp
jmp
shlb
pop
leave
or
and
sub
mov
lret
inc
nop
and
das
daa
shl
push
add
or
cmc
add
xlat
movsb
popf
shrb
repnz
out
sbb
adc
fwait
fwait
adc
pushf
mov
xor
icebp
inc
cld
jmp
adc
inc
rclb
push
pop
cld
or
ret
hlt
xor
mov
and
mov
cld
out
hlt
jnp
or
negl
shlb
push
clc
in
dec
shll
rcll
cmp
repnz
add
cld
inc
sarl
fwait
jns
cmp
out
rolb
and
movsb
cmp
adcb
std
mov
xor
lock
sahf
jo
sub
cmpl
out
popa
sbb
in
ja
sbb
cmpb
arpl
pop
adc
dec
je
frstor
clc
lcall
push
and
movsl
out
jecxz
inc
aam
pop
push
adc
or
and
pop
push
push
sub
cld
out
fs
mov
xchg
pusha
jnp
inc
mov
and
stc
dec
ds
jl
scas
sbb
sbb
jno
loope
xor
xorb
ljmp
imul
inc
loope
test
sub
xchg
adc
fwait
sub
daa
push
fstp
fsubrs
test
into
sub
jg
ror
mov
sub
cmp
mov
insl
jb
int3
dec
ficomps
int
repz
lret
xor
out
jp
jmp
push
mov
fsubs
mov
cmp
mov
jg
testl
addr16
popf
inc
push
daa
lahf
mov
cwtl
jecxz
xlat
and
fcomi
mov
dec
orl
push
sbb
sbb
aas
fidivrl
or
jne
jle
int3
adc
cmp
pop
cmp
push
sbb
out
hlt
daa
fcmovnbe
in
das
int3
mov
pop
les
icebp
or
or
push
mov
leave
dec
out
int
add
pushf
mov
scas
test
sbb
lds
inc
xchg
jge
adc
jl
and
add
lret
xlat
jge
outsl
xchg
loopne
jp
fisttps
mov
pusha
out
es
dec
pop
mov
inc
das
test
sub
mov
mov
push
das
jmp
inc
repz
push
cmp
bound
push
push
jl
sub
sub
out
sbb
and
daa
bnd
aaa
hlt
cmc
push
push
scas
fldcw
mov
mov
fldt
jecxz
ja
stc
ret
dec
xchg
push
int
pop
and
and
add
dec
in
xchg
mov
ret
cld
aaa
rol
fistl
jne
fadd
out
test
mov
das
shrd
jnp
push
je
cli
mov
mov
test
add
dec
xlat
push
mov
ret
or
loope
je
pop
inc
inc
js
fists
xchg
cs
scas
das
mov
mov
add
and
inc
sbb
pop
cmp
movsb
mov
push
mov
loopne
int
fwait
pop
js
imul
dec
cld
adc
std
sbb
xchg
pop
into
testb
inc
xor
es
rorl
pop
mov
notl
pop
fisubrl
ds
mov
out
push
inc
sub
xchg
std
inc
fistps
cli
iret
cmp
dec
mov
gs
sbb
xchg
inc
ficoml
fildll
in
icebp
shr
lds
pop
je
js
icebp
imul
cli
popf
cmp
std
shl
les
and
push
add
ja
adc
add
mov
sar
clc
hlt
sahf
arpl
fsubrs
sbb
hlt
push
add
fldenv
das
subl
int
or
pop
loopne
cmpsb
imul
addr16
mov
xchg
inc
sub
and
push
xchg
inc
push
mov
sub
arpl
pop
and
add
les
jb
movsb
mov
fidivrs
in
leave
mov
inc
lcall
das
and
push
aam
outsb
jp
ds
adc
fwait
cwtl
mov
fmull
mov
push
aam
push
stos
sbb
int
sbb
jmp
aaa
ljmp
fisubl
xchg
jnp
jmp
adc
fldcw
push
inc
mov
bound
mov
mov
and
popf
and
jg
ret
cmp
xchg
mov
push
jb
sbb
adc
movsl
push
push
and
repz
shr
jno
fs
jae
inc
jns
dec
add
je
adc
xchg
aam
xlat
xchg
mov
leave
sarb
cmp
cmc
outsb
in
test
mov
lods
inc
bound
hlt
pusha
add
fldt
fsubrp
insb
cmpsl
push
jle
and
xchg
shrb
fwait
test
lods
inc
lods
lods
fdiv
lds
aam
ja
inc
les
jae
xchg
leave
add
fnstcw
mov
lock
call
arpl
fwait
out
add
shlw
push
imul
clc
dec
imul
test
lods
daa
mov
loope
cmpsb
pop
inc
int
add
sub
in
je
cld
push
outsb
cmp
cltd
push
push
jge
and
xor
or
sbb
jp
mov
inc
add
push
in
sbb
push
sarb
fsubrl
shrb
adc
call
aaa
sub
mov
add
mov
cmc
insl
inc
xor
jecxz
add
addr16
xor
out
jp
mov
fisttps
adc
cmp
loope
repz
fstps
ret
mov
fiaddl
add
pop
mov
pop
clc
cmp
lods
lock
jb
xchg
pop
jns
mov
fwait
iret
bound
inc
decl
int
scas
test
inc
adc
ja
sbb
xor
cmpsl
pop
xor
fbld
jns
fstl
cmp
scas
cmc
popf
loope
sub
mov
sbb
lahf
mov
push
push
xlat
fcompl
adc
cmpl
push
mov
fcomps
push
fdivs
sub
les
adc
push
inc
call
add
gs
loope
test
and
call
jg
movsb
inc
arpl
sub
and
mov
add
adc
mov
loop
aad
shlb
aam
xchg
adc
pop
cs
loop
pushf
call
push
es
scas
je
mov
jg
daa
sub
pop
jge
mov
imul
pop
rcrl
lods
adc
pop
out
int3
mov
fs
jl
push
sbb
mov
jp
pusha
into
sub
das
xchg
ljmp
mov
cmpsl
inc
dec
mov
inc
repz
mov
add
jbe
pop
cmpsl
push
pusha
adc
dec
mull
xchg
pushf
iret
sbb
push
scas
testb
add
mov
mov
sti
aam
pop
clc
lcall
scas
push
scas
and
lret
sub
repz
and
and
sbb
inc
add
repnz
dec
int3
rcll
rcll
push
dec
sub
bound
iret
ljmp
fstpt
lcall
ja
in
adc
hlt
and
mov
sar
scas
inc
and
cld
lret
or
mov
or
test
movsl
lret
or
and
sbb
idivl
enter
mov
aam
and
xchg
sub
sarb
mov
ljmp
aam
loop
scas
sahf
jg
pop
cli
insb
pop
mov
cmp
pop
into
cmp
pop
lods
add
mov
pop
inc
cli
jecxz
adcl
cli
push
adc
cmpsb
loope
cmc
scas
sbb
mov
xor
sbb
les
call
loope
mov
sahf
dec
xlat
dec
xor
mov
adc
in
ss
add
shlb
add
mov
jbe
shrl
pusha
pop
sbb
cmpsb
adc
and
imull
mov
call
lock
push
in
out
mov
mov
fucomip
add
scas
dec
cmc
imul
cld
nop
push
xor
shrb
das
in
sbb
push
insb
mov
movsb
loop
stc
adc
pop
in
mov
lret
inc
dec
test
hlt
xchg
adc
cmp
bound
or
int
into
sub
sarl
mov
sub
xor
mov
cmp
loopne
xchg
pop
jb
lds
sub
clc
stos
lock
loopne
int3
stos
ficoms
mov
push
mov
xor
add
adc
shrl
push
pop
cli
jge
js
out
cld
imul
cld
add
imull
add
aad
int3
mov
mov
ss
xchg
sub
dec
push
out
je
fldenv
call
mov
jecxz
imul
jle
or
mov
and
mov
or
sbb
pop
outsb
arpl
mov
push
mov
adc
jmp
push
mov
sub
inc
fwait
mov
ret
icebp
pop
or
and
sub
jo
mov
push
mov
shl
push
sbb
cld
stos
mull
das
mov
in
push
xchg
add
fisubrs
mov
push
aad
loopne
jns
ret
stos
xor
popa
push
in
xchg
repz
fwait
jb
insl
mov
mov
push
sbb
stc
mov
rol
adc
mov
jecxz
les
xchg
outsl
lods
lcall
test
in
sbb
aad
idivb
psubw
sarl
fistpl
cmp
cli
jl
repz
adc
sub
push
sub
pushf
scas
lea
les
cmpl
testl
dec
loope
or
cmp
mov
and
sti
mov
inc
inc
sub
jne
cmp
add
cli
scas
cwtl
cmp
cmp
lret
int
lds
pop
lock
addr16
inc
cld
mov
scas
fwait
adc
rcll
scas
ds
or
shl
imul
lret
add
clc
pop
imul
clc
adcb
clc
cmp
dec
insl
std
dec
std
sbb
pushf
out
clc
sbb
cli
int
push
iret
mov
call
das
aas
xchg
in
xchg
lods
dec
push
call
adc
sbb
xor
repz
add
in
fldl
fwait
add
imul
pop
dec
imulb
mov
ss
fmuls
mov
cmp
inc
cli
mov
or
stos
inc
adc
or
enter
shrl
adc
push
fsubrl
repz
ja
and
jnp
cmp
daa
sbb
mov
mov
icebp
mov
shll
adc
cmp
or
lds
imul
lret
je
scas
imul
mov
dec
imul
in
shll
adc
insb
inc
xlat
notb
repnz
or
cld
jo
iret
mov
mov
or
push
ljmp
sbb
loope
adc
cmpsb
daa
mov
fcomip
push
add
pushf
bound
or
xlat
testb
bound
sbb
mov
iret
dec
push
out
pop
repz
repnz
js
jge
decb
shlb
cmp
sbb
xor
jmp
sbb
pop
aas
mov
push
cs
dec
shrb
push
jmp
add
call
fists
pop
mov
push
not
pop
push
scas
aaa
mov
adc
adc
imulb
loop
sub
mov
mov
sbb
or
bound
ret
clc
push
xorb
ret
es
push
lret
out
out
xor
inc
dec
mov
push
adc
mov
test
inc
mov
fbld
scas
pushf
sub
mov
fmuls
xchg
repnz
loope
aaa
repz
pop
mov
fs
testb
sti
mov
inc
xchg
adc
mov
push
push
mov
loop
test
add
push
outsl
xchg
aad
push
mov
aas
imul
pop
dec
mov
add
loop
mov
lds
insl
pop
push
dec
push
sbb
cmp
into
ss
jnp
fbld
pop
lock
cmc
fstp
cmp
shrl
loope
cmp
in
xchg
filds
jb
movsl
dec
cmpsl
int
pop
sbb
sub
adc
dec
sbb
in
pop
shll
mov
scas
and
shrb
push
aaa
in
push
pop
add
sbb
out
xlat
add
and
cmp
mov
sbb
pop
fwait
stc
xorb
jg
and
add
cs
push
js
imul
mov
into
mov
xchg
in
add
mov
jle
test
pop
sub
hlt
push
fisubs
test
loopne
mov
mov
xchg
cmp
push
clc
and
sbb
adc
adc
mov
xor
mov
mov
inc
ds
sbb
sbb
push
hlt
filds
arpl
cs
jmp
sub
mov
inc
fsubrl
pop
sub
outsb
hlt
fwait
repnz
xlat
xor
ret
cmp
icebp
xchg
xor
push
xchg
mov
jmp
rol
mov
cmp
shl
mov
inc
loop
loope
ss
mov
pushf
repz
pop
or
pop
or
adc
push
or
push
mov
out
ret
mov
add
lods
incl
aaa
scas
hlt
or
in
lret
xchg
and
push
fimuls
js
dec
out
iret
aaa
jnp
fwait
ret
xchg
xlat
call
outsb
xor
sbb
js
cmp
and
xor
mov
aam
int
repz
insb
cld
ret
fs
loopne
dec
loopne
je
inc
push
hlt
dec
push
push
push
aad
out
push
icebp
imul
mov
std
push
fmuls
xchg
mull
ja
cmpsl
xchg
rorb
leave
icebp
mov
mov
in
push
sub
ret
push
loope
bound
repnz
inc
cld
sbb
sub
adc
or
push
and
sbb
mov
xor
inc
mul
out
out
sti
add
sbb
adc
sahf
add
inc
ds
fnsave
dec
inc
cwtl
dec
lret
mov
cmp
mov
inc
ss
cwtl
cmc
fnstsw
and
mov
call
xor
hlt
sbb
inc
es
xlat
testl
dec
gs
add
pop
aam
insl
int
into
mov
fcoml
orl
push
rcrl
movsl
push
pop
out
push
sti
jnp
push
fstps
ljmp
test
xchg
rcrb
push
cmp
cwtl
inc
and
sbb
rolb
adc
jbe
mov
jno
cli
adc
jo
or
leave
cmp
in
add
divl
test
dec
inc
insl
aad
bound
mov
mov
add
mov
push
daa
enter
in
repnz
sbb
cmp
mov
inc
adc
imul
std
pop
ret
xor
leave
pop
or
cmp
push
jg
scas
sub
mov
je
sub
mov
mov
imul
movsb
fists
jno
sub
aad
les
push
out
mov
jo
into
sub
aaa
mov
sub
sahf
cmc
stos
out
push
repz
pop
pop
mov
adc
stos
add
into
cmc
jle
xor
out
xchg
adc
lret
cmpsl
adc
je
je
call
loopne
test
adc
ds
int3
dec
lock
call
add
jne
and
mov
loopne
loopne
mov
sub
fwait
push
loop
pop
mov
jns
test
ja
push
mov
xchg
lcall
mov
lcall
ljmp
pop
xchg
or
sub
mov
jno
leave
leave
jae
mov
xor
push
sbb
fstpl
jmp
mov
dec
sub
push
es
jecxz
jecxz
sbb
cmp
xor
fcmovnb
rcll
call
imul
cli
cmp
cmpsb
arpl
gs
sub
fwait
push
roll
lods
ja
popa
cmc
jno
mov
js
in
mov
ja
xchg
mov
push
xchg
cs
test
mov
add
sahf
adc
sub
arpl
sahf
mov
out
test
dec
adc
mov
loope
lods
mov
add
shlb
jmp
cmpsl
bound
jbe,pn
mov
jnp
jne
add
fimull
enter
fs
je
repz
loope,pt
or
shlb
pop
ss
lcall
test
outsb
xchg
lret
sub
or
jge
test
pop
mov
jae
adc
lcall
stc
leave
sarb
ja
in
mov
pusha
jnp
gs
loope
scas
mov
out
pop
sti
jo
mov
cmpsl
jo
aas
add
incl
lret
xor
mov
lret
rcl
sbb
sbb
and
pmuludq
test
pop
mov
xlat
add
sti
rolb
ljmp
dec
dec
pop
in
pop
cmp
fcmovnu
lcall
xchg
add
shll
shl
mov
xor
std
inc
pop
inc
xchg
repz
scas
xor
mov
mov
bound
pop
adc
nop
movsb
cli
sbb
mov
aam
push
dec
mov
mov
enter
call
or
shll
aam
inc
hlt
sar
add
lret
jne
push
inc
mov
aad
xchg
adc
test
cmp
pop
add
pop
inc
push
inc
imul
cs
mov
push
lret
jmp
jnp
xchg
les
add
and
push
repz
xor
inc
inc
pop
sarb
repnz
out
cmpsb
fwait
xlat
imul
fadds
testl
sbb
pushl
popf
inc
add
loopne
dec
iret
mov
pop
mov
push
cs
pop
test
xlat
jmp
cmp
inc
or
xor
hlt
sbb
sbb
and
xor
xor
pop
cmc
call
in
in
push
imul
mov
inc
filds
sub
das
pop
adc
sbb
aas
inc
insb
out
and
mov
in
or
gs
dec
aad
jae
movl
pop
inc
and
aaa
lret
xor
pusha
out
aad
adc
aaa
adc
jnp
sub
and
cld
imul
adc
filds
cs
in
fistps
pop
orb
clc
inc
dec
hlt
pop
ret
jnp
push
hlt
mov
push
push
push
ficompl
mov
inc
push
notl
insl
adc
or
sub
dec
cmp
out
hlt
adc
inc
and
std
xor
adc
mov
mov
imul
xor
ret
iret
push
mov
int
ja
mov
push
xor
aam
nop
ss
dec
add
loop
sbb
clc
inc
nop
cmc
out
jbe
lods
repz
xchg
fisubl
jb
aas
cmp
daa
cmp
pop
cld
and
cmp
jbe
xchg
int
add
sbb
mov
imulb
insb
mov
inc
jb
test
scas
mov
imul
cmp
inc
pop
rcll
fadds
mov
dec
inc
icebp
jg
xlat
imull
scas
clc
mov
push
xchg
pop
adc
cmp
push
sub
aaa
aam
sbb
sbb
addb
sub
cmc
dec
movb
adc
add
loope
mov
sete
aad
mov
mov
jecxz
fstl
mov
popf
and
or
xor
sahf
ljmp
test
jnp
push
dec
mov
and
enter
stos
mov
pop
jbe
sbb
mull
roll
int3
push
xor
enter
xorb
out
aaa
or
xchg
int3
out
cs
xchg
aad
sar
popf
in
xchg
sub
mov
cwtl
add
mov
hlt
mov
lock
repz
push
divb
call
sub
dec
mov
imull
fisubrl
int
mov
into
mov
pusha
rolb
fwait
idiv
inc
fld1
or
cmp
push
into
xor
in
mov
add
aad
das
shll
push
mov
mov
jle
mov
out
push
jno
mov
mov
int
mov
int
mov
je
loope
movnti
fdivrl
fisubrs
in
add
out
add
call
invd
ror
jmp
push
xlat
hlt
cld
lret
subl
test
xlat
int3
psubd
ljmp
xor
push
out
cmp
cwtl
shufps
mov
mov
and
aas
punpckhdq
pop
gs
pop
hlt
xorl
pop
mov
frstor
inc
cmp
pop
repz
xor
je
std
mov
orl
sti
mov
shl
repnz
icebp
sar
enter
mov
call
out
mov
divl
clc
ret
in
roll
shl
dec
je
adc
or
ficoml
dec
aam
fistl
cmp
std
aam
fsubrl
lret
loope
cs
cli
sti
lds
xor
xor
cld
out
xlat
fdivs
in
sub
lret
in
jnp
push
wrmsr
sahf
xor
cld
cli
xlat
movsl
js
out
aaa
mov
fstpt
push
jae
add
adc
gs
cs
lock
std
aaa
pop
call
arpl
adc
or
loope
or
push
pusha
jmp
push
adc
xor
adc
jbe
icebp
in
sti
pop
jb
cld
sbb
in
movnti
insl
adc
aaa
fidivrl
faddl
pop
jg
mov
dec
dec
and
ja
sarb
sub
xchg
add
pop
add
outsb
add
dec
or
pop
adc
ret
test
mov
pusha
scas
fldcw
mov
daa
dec
fistpll
sub
jg
jns
lsl
jmp
rcl
and
pop
out
pop
ret
test
les
mov
mov
xchg
cmp
pushf
fdiv
mov
cmpsl
sbb
dec
xchg
cmp
jno
sub
mov
jp
cwtl
mov
mov
push
or
jno
js
pushf
jge
xor
aas
out
icebp
lods
push
adc
arpl
cmp
idiv
fidivs
or
ja
scas
pushf
test
mov
xchg
sti
push
dec
addr16
mov
es
lret
cmpsb
lods
enter
fsubl
mov
shll
in
andl
faddl
sbb
push
in
call
fadd
jle
repnz
xchg
jecxz
inc
loopne
mov
push
imull
adc
add
fsts
push
mov
adc
xchg
inc
dec
add
addr16
test
cltd
mov
aaa
sbb
mov
mov
xchg
int3
jae
aas
divb
sub
and
xor
mov
shr
xor
cmp
das
adc
sub
stos
out
mov
in
mov
out
mov
xchg
ret
cmp
mov
jmp
sti
add
cld
fisubrl
cld
xchg
adc
mov
jnp
out
arpl
mov
jmp
fistpl
popf
add
and
fcomp
cmc
scas
in
mov
or
rclb
add
mov
mov
pop
and
dec
mov
mov
in
sub
test
rcl
pop
sarl
stc
jecxz
push
imul
jmp
pop
mov
mov
xor
pop
pop
cli
loop
mov
xchg
pop
dec
loop
cmp
mov
cmp
mov
cmp
pop
sbb
arpl
inc
outsb
inc
xor
sbb
pop
sti
jns
pop
cmp
fdivl
lret
stc
cld
or
mov
pop
jbe
das
subb
dec
add
loope
jno
mov
icebp
cs
pusha
mov
stc
out
jle
jmp
les
cld
dec
or
leave
mov
dec
and
cmp
jns
add
insb
mov
outsb
push
jns
jp
stos
std
sbb
adc
mov
pop
pop
pop
cmp
out
int
jb
mov
mov
mov
inc
or
mov
hlt
mov
mov
push
fucom
cltd
les
mov
jecxz
cmc
jle
stos
xor
pushf
rolb
mov
or
repnz
imul
jl
cli
repnz
test
adc
sub
adc
pop
xlat
pop
and
sbb
dec
aam
adc
imul
or
inc
divl
pop
dec
mov
fcom
inc
aaa
sbb
inc
loope
inc
push
call
das
jns
dec
lahf
push
and
mov
sbb
decl
sahf
fnstenv
push
sbb
mov
loop
pusha
add
cmp
pop
mov
xchg
mov
dec
xchg
pop
or
jecxz
pop
hlt
repz
gs
ja
outsb
xchg
mov
push
sahf
repz
jmp
sub
pop
rcr
gs
outsl
rcll
mov
fiadds
xor
stc
daa
fucomp
dec
cli
pop
cmp
subl
adc
mov
ret
push
pop
jmp
lods
repnz
sbb
in
pop
sbb
xchg
jae
sbb
fistpl
sub
mov
dec
hlt
in
pop
ds
insl
cmp
xchg
adc
inc
fs
cmpsb
push
or
and
imul
repnz
jno
cld
nop
push
dec
test
xor
jecxz
mov
insb
or
sub
stos
dec
and
test
ss
pop
ficoms
out
outsl
stos
mov
sbb
mov
inc
lret
add
cmp
xchg
cli
adc
push
jnp
cmp
aaa
in
and
test
gs
cli
fsub
scas
jl
lods
in
cwtl
adc
xor
sbb
or
mov
je
adcl
test
ljmp
sbb
inc
int3
dec
sbb
movsl
cld
stos
test
iret
dec
mov
dec
cld
and
addr16
push
sbbb
scas
and
xor
fildll
or
nop
mov
mov
jne
jne
mov
jg
jno
push
add
mov
sbb
lret
data16
sub
adc
adc
add
lahf
lret
adc
mov
clc
mov
sub
jnp
mov
cmpsl
aad
int
add
and
pop
std
dec
jae
lahf
sti
dec
lds
aad
addr16
push
in
sbb
rcl
push
mull
mov
add
add
jecxz
in
cs
out
jg
add
and
fcoms
xchg
imul
push
push
ss
dec
dec
sub
dec
push
push
scas
cmc
push
push
in
sbb
jo
lret
in
fistl
dec
cmp
movb
xor
add
or
in
sbb
rol
sbb
es
aad
mov
lods
nop
xor
mov
xor
add
ror
imulb
fneni(8087
adc
ljmp
dec
out
aaa
mov
push
cmc
mov
and
icebp
cmc
pop
hlt
mov
jge
dec
scas
fisttpll
lods
popa
mov
jns
clc
bswap
adc
cmp
sub
xchg
jmp
jle
aaa
mul
cmp
mov
test
fisttpll
ljmp
jg
and
jl
shll
scas
in
xchg
inc
fdivr
sahf
shl
sub
fstl
mov
stos
pop
mov
sar
stc
lahf
in
or
mov
pop
or
addl
andb
add
clc
enter
jecxz
mov
dec
xchg
mov
stos
and
cmp
outsb
mov
push
inc
daa
outsb
loope
jo
fiadds
inc
sub
rcl
dec
mov
jb
mov
mov
hlt
mov
cli
lret
sub
fwait
out
push
leave
jmp
das
add
rcl
pop
cmc
arpl
sbb
push
adc
es
xchg
or
jne
push
scas
std
push
inc
mov
stos
ret
icebp
lods
mov
mov
ljmp
inc
divb
ljmp
mov
fldl
fdivl
sub
int
imul
or
adc
inc
repz
add
lock
sahf
inc
adc
adc
mov
leave
adc
jmp
lcall
ficoml
int
pop
sub
imul
div
mov
push
inc
add
test
test
jno
push
mov
jns
jg
in
fimuls
mov
stos
dec
xor
dec
mov
push
inc
pop
pop
jecxz
and
add
and
leave
jge
cmpsl
push
and
inc
leave
push
scas
fisttps
insb
jne
test
sub
movsb
daa
mov
mov
clc
add
imul
pop
pop
adc
cmp
rcrb
bound
add
stos
jo
inc
and
pusha
iret
jns
inc
jle
mulb
loop
js
cmpsl
pusha
arpl
dec
and
sub
ljmp
adc
push
xor
mov
pop
stos
xor
ljmp
dec
repz
and
out
and
aad
sbb
pop
xlat
pmaxsw
inc
lock
mov
xor
ja
push
in
adc
movsb
bnd
dec
sub
jg
cmp
cld
push
daa
insl
pusha
mov
loop
into
outsb
lods
cmc
or
sub
push
js
scas
inc
sbb
sbb
cwtl
push
orb
aas
loopne
mov
jecxz
adcb
daa
fldcw
push
fmull
popa
cltd
or
ljmp
xchg
std
or
cmp
push
xchg
mov
aam
mov
mov
loopne
xchg
and
jbe
mov
fists
movsl
ficoml
arpl
icebp
inc
aaa
repz
sbb
or
ljmp
test
popa
cs
pop
dec
fcomip
jne
inc
or
call
mov
into
sub
in
pop
mov
sti
jns
insl
ss
outsb
jb
mov
aas
mov
test
mov
movsl
popf
mov
idivl
sbb
mov
mov
xor
and
cmp
stos
fcoml
inc
inc
test
insl
gs
popa
les
adcl
sbb
outsl
push
mov
xchg
loop
loopne
xchg
add
out
lds
jbe
repnz
mov
adc
and
data16
lret
ret
clc
nop
addr16
mov
aad
and
cwtl
inc
scas
ss
and
sbb
out
pop
pop
mov
mov
or
add
or
fstpl
popa
out
cltd
inc
inc
mov
mov
adc
iret
push
jl
pop
xchg
aam
adc
xlat
das
inc
and
push
in
push
mov
lret
jno
adc
pop
loop
inc
fisubs
or
mov
pop
stc
dec
sahf
fisubrs
mov
fldt
jge
rcrb
je
jo
cmc
adc
aam
adc
in
or
cmpsb
out
lret
adc
sti
aaa
scas
loopne
cli
out
add
out
leave
and
rorb
ror
push
out
xchg
or
dec
ret
or
xchg
std
in
lea
movsl
pop
decb
mov
and
sbb
jmp
bnd
cld
push
sbb
mov
imull
call
add
xor
fsubrl
cli
iret
lret
sbb
pop
mov
mov
jge
loop
cmp
std
adc
jbe
ffreep
inc
cmp
or
and
xchg
fimuls
push
insb
mov
xchg
adc
lock
fwait
push
dec
xor
sbb
imul
sbb
std
mov
mov
xor
sbb
jo
add
jp
push
daa
xor
push
mov
sbb
push
add
mov
aam
ljmp
pop
in
push
or
mov
jbe
push
cwtl
xchg
nop
add
in
outsl
push
cmc
fdivrs
ja
push
data16
cmp
inc
test
fnsave
ret
mov
cmpsb
jecxz
adc
jbe
rclb
loop
out
shrb
fistps
std
into
in
out
imul
mov
cmp
pop
test
popa
loop
in
addl
loop
pusha
clc
in
pop
rcll
outsb
xchg
xor
xlat
jmp
xlat
jnp
int
fldcw
push
loop
inc
cmp
jae
in
jno
ss
lds
int3
aam
lock
and
hlt
or
aam
rcr
push
loop
xor
and
ljmp
in
mov
jb
cmp
cltd
jbe
loopne
in
icebp
shrl
lcall
xor
dec
lods
xchg
jle
and
cwtl
ja
jmp
push
ret
cmp
ret
sbb
xlat
out
add
cmpsb
mov
out
cmc
in
stos
pop
scas
push
xor
mov
push
dec
outsb
stc
lds
dec
sbbb
repnz
daa
cmp
fs
lret
xchg
and
mov
xchg
mov
add
or
out
out
mov
hlt
bound
push
pop
and
enter
es
dec
loop
dec
bound
lret
or
aad
dec
fldt
mov
cld
paddq
and
js
lahf
push
cld
aam
shld
jg
push
mov
mov
sbb
out
cmpsl
lret
mov
cwtl
ficomps
push
xchg
jnp
popa
test
jmp
mov
sub
push
fs
sti
daa
inc
scas
xchg
adc
clc
bound
dec
add
add
je
shll
out
cmpsl
sub
mov
aas
jae
adc
adc
lahf
mov
cmp
pop
mov
add
and
push
mov
mov
mov
dec
mov
rclb
ret
push
in
ret
or
sbb
divl
jle
fcompl
repz
mov
outsl
add
cmpsb
pop
push
mov
mov
pop
andb
xchg
push
dec
jb
push
outsb
sub
mov
repnz
fsts
pop
mov
gs
push
out
cli
pop
int
aas
rorb
insl
mov
fnstenv
insl
roll
sub
cwtl
lcall
mov
mov
mov
fcoms
imul
mov
mov
push
in
mov
repnz
xor
insb
jo
clc
les
push
push
mov
inc
mov
pop
mov
or
push
sahf
fdivrp
mov
imulb
ret
shr
int
cmp
test
out
inc
and
hlt
aad
pop
push
out
xor
sbb
lds
add
mov
aaa
fcoms
dec
push
xchg
adc
add
xchg
mov
jns
ja
push
push
ret
push
jmp
push
jge
push
sbb
movsl
jmp
scas
sarl
mov
idivb
mov
negl
hlt
mov
out
daa
xor
sbb
out
data16
mov
and
lcall
stos
sbb
mov
mov
movsb
jmp
arpl
jge
or
icebp
lcall
data16
add
pop
imul
mov
push
sbb
scas
mov
xchg
add
incl
insl
mov
fwait
push
pmaddwd
or
sbb
xor
sbb
adc
dec
and
arpl
int3
sub
out
das
sahf
out
push
mov
pop
jbe
push
filds
mov
lods
fcom
mov
fmulp
pusha
int
xchg
mov
xchg
inc
and
xor
pop
dec
jge
cmpsl
loope
inc
rcr
push
scas
cld
clc
pusha
in
sub
addl
sub
shl
add
mov
or
fldcw
or
mov
in
xchg
mov
sti
rorl
shll
mov
fists
scas
push
stos
daa
hlt
rcl
cmp
out
das
push
int
add
incl
fldt
jae
fildl
shl
push
cmp
int3
dec
je
and
mov
sbb
mov
inc
jo
mov
pop
mov
in
sbb
push
adc
cmp
sub
sbb
bound
pop
jge
sbb
clc
push
das
int3
popf
jae
mov
mov
push
fistpll
ret
rorl
xor
inc
push
inc
mov
das
mov
scas
pushf
sti
insb
sbb
or
shll
cmpl
pop
mov
inc
or
cmp
inc
data16
jns
dec
mov
mov
dec
lods
sub
push
push
sbb
push
test
mov
cwtl
stc
xchg
add
testb
sub
mov
sub
ja
movsb
addr16
dec
das
test
xor
adc
and
jbe
in
pop
inc
movl
repz
xchg
mov
jmp
pushl
in
jbe
xor
pop
jo
scas
cmpsb
cmpsl
ds
jge
leave
push
sub
xchg
das
fdivr
sbb
std
pop
adc
pop
std
stos
push
shll
jno
inc
sub
jns
and
inc
aad
repz
inc
sbb
push
pushl
daa
pop
mov
test
mov
cmpb
inc
fcomps
xor
jg
jp
das
mov
arpl
dec
mov
cmp
dec
aam
mov
sbb
pop
adc
sub
mov
pop
in
sti
xchg
inc
mov
iret
sub
repz
pop
repnz
mov
cli
mov
in
scas
loop
int
pop
ja
cli
ret
jmp
fmull
xlat
rclb
add
or
sub
cmp
push
adc
mov
xchg
add
adc
pop
outsl
xchg
dec
inc
jg
adc
test
sbb
mov
xchg
jnp
mov
xchg
dec
cli
or
dec
mov
aam
inc
pop
int3
cmp
mov
loop
aaa
fwait
sub
movsl
popf
xor
pop
xchg
sbb
jns
dec
in
outsl
mov
pop
int3
sbb
std
pop
ljmp
std
pop
push
cmp
mov
xor
cmp
mov
jmp
or
lcall
aas
stos
xchg
dec
sub
add
cmp
sbb
testl
pop
cmp
add
in
push
fldt
lret
mov
into
je
push
jl
or
nop
dec
sahf
movb
push
fimuls
stc
push
in
in
into
xor
add
cs
div
mov
or
fcomps
in
or
popa
insb
push
mov
dec
xor
xchg
out
lret
cwtl
negl
or
mov
cmp
cmp
dec
enter
or
icebp
lods
jecxz
sub
jno
xlat
sub
fs
xorl
adc
loop
xor
or
pusha
arpl
test
add
in
adc
loopne
add
lret
ret
sbb
cmp
push
stc
sub
xor
jnp
inc
mov
sbb
lock
mov
cmp
cmp
lods
ljmp
gs
or
gs
stos
fcmovb
xor
add
aam
fdivrl
cltd
and
lds
mov
mov
fstp
adc
xchg
mov
xor
add
dec
out
out
rcrb
and
adc
mov
std
jmp
cld
sub
jno
into
push
or
stc
pop
inc
push
std
push
stc
cmpsb
xor
sbb
dec
pop
xor
sub
fwait
sbb
adc
sub
ret
pop
and
shrl
push
dec
pop
adc
jge
in
push
repnz
in
mov
iret
loope
sbb
cld
mov
popa
cmp
or
pusha
js
add
xchg
sbb
pop
aam
std
pusha
cmp
mov
or
dec
je
aam
pop
pop
push
cmp
push
lret
or
jno
adc
pop
nop
pop
fisttpl
mov
and
pop
dec
fwait
lds
fcoms
jg
sar
inc
push
orb
and
filds
stc
outsb
sbb
push
adc
or
adc
or
dec
aad
aad
sub
fcoms
mov
jge
inc
pop
sahf
bound
or
cmp
int
aad
mov
xor
pop
and
dec
push
sbb
addr16
jp
repz
jns
xor
sarb
push
pmullw
cmp
fcompl
xor
rcl
xchg
mov
cmp
aas
fimull
mov
xchg
mov
xchg
adc
jl
mov
xchg
push
outsl
filds
repnz
pop
mov
shl
imul
incb
adc
pop
mov
gs
dec
ret
ljmp
adc
add
lret
xor
mov
jl
iret
xchg
mov
dec
xor
and
scas
push
add
sub
mull
xor
inc
fistps
fdiv
int3
int3
out
xor
movsb
jecxz
dec
sbb
aad
or
lcall
jae
and
xor
mov
pop
shll
xor
cmp
and
jecxz
rol
cs
cli
jle,pt
mov
cs
mov
int3
mov
std
scas
lret
psrld
adc
sub
cmp
pop
jp
adc
ret
mov
jg
jle
hlt
repnz
and
outsb
pop
or
pop
test
or
mov
hlt
scas
jo
cli
adc
fwait
jmp
jp
test
dec
fldenv
cmpsl
sbb
sti
call
aad
pop
inc
negl
ljmp
dec
mov
pop
cmp
push
push
xchg
rorl
sub
idiv
inc
data16
rorl
jno
cmp
mov
adc
adc
pop
ret
sbb
fdivr
aam
add
xor
sbb
ljmp
and
pop
fadds
hlt
repz
lock
mov
mov
jg
cmc
jb
loop
repnz
push
mov
call
das
pop
cmp
and
push
push
aaa
in
stc
jl
fistl
mov
mov
adc
test
repnz
inc
into
aad
or
mov
adc
int
test
fistpl
in
ja
xor
pusha
pusha
xor
inc
sbb
dec
loop
xor
jl
push
push
fsubrl
aas
arpl
pavgw
aas
ljmp
adc
dec
cmc
push
mov
sbb
dec
dec
cmp
adc
popf
inc
push
mov
jo
std
sbb
sar
pop
dec
xor
roll
sarl
hlt
add
aaa
out
mov
push
gs
and
sbb
cwtl
pop
mov
add
jnp
sub
sbb
jge
out
jnp
adc
push
add
jp
sbb
outsb
mov
lods
add
xchg
fwait
dec
in
mov
mov
incb
ds
push
mov
dec
clc
lcall
sti
rep
in
xchg
mov
std
mov
int3
into
pop
bound
std
cld
in
fisubl
out
add
loopne
inc
push
mov
or
ret
mov
dec
icebp
psllw
xchg
or
adc
push
pop
sbb
xchg
cli
add
pop
aam
xor
or
in
aas
jmp
mov
xor
cld
arpl
lahf
jno
xor
inc
mov
pop
adc
loopne
adc
push
in
lret
sarl
sti
in
jle
enter
pop
sbb
jmp
in
sbb
cmp
loopne
mov
lret
lods
xchg
rcrb
mov
jbe
mov
inc
dec
incl
loope
aas
test
call
inc
and
inc
xlat
nop
aas
aam
mov
add
inc
mov
sbb
rol
out
adc
repz
sysexit
rcll
xor
xor
notb
xor
jae
gs
imul
in
pop
into
idiv
and
jo
xor
and
shll
sub
mov
and
aad
jge
xor
inc
mov
ret
xchg
cmp
out
mov
shl
add
ds
push
sbb
jle
into
je
in
je
xlat
fiadds
mov
or
hlt
pusha
fcomi
pusha
sbb
fisttpl
outsl
xor
mov
and
aaa
ret
lods
fadds
dec
fistps
xor
and
cs
aaa
push
xchg
roll
jno
inc
pop
mov
loope
mov
ret
addb
or
pop
rcll
or
es
enter
lods
adc
mov
inc
sahf
cmpsb
hlt
inc
fcompl
and
clc
mov
and
or
iret
nop
adc
xchg
add
lea
cmp
fiadds
jecxz
fbstp
xor
and
add
sub
dec
push
dec
sbb
cld
test
mov
adc
jg
fstps
lahf
dec
in
hlt
mov
repnz
aas
sarl
xor
cmpsl
lret
hlt
cmp
xchg
pop
fldt
sub
mov
adc
jg
cmpsb
std
shrb
jl
sar
je
adc
or
dec
fsubr
incl
repnz
and
sub
jbe
ret
cwtl
adc
fs
sub
fadd
and
add
xor
ror
jl
xchg
call
aam
dec
and
or
orb
pop
hlt
cld
in
icebp
jp
pop
sbb
sahf
add
cmp
mov
mov
imul
bound
std
cli
repz
jle
mov
fisubrl
dec
xrelease
lret
leave
sub
jg
adc
out
cmp
imul
mov
cld
add
sar
push
xor
and
popl
call
mov
adc
jnp
mov
and
adc
out
push
pop
nop
dec
push
cmp
bound
xor
adc
mov
sbb
inc
jg
jnp
xchg
fidivrs
jge
in
inc
xor
addr16
sti
mov
sub
jp
clc
rorb
sbb
inc
rcll
ss
mov
out
mov
insb
jb
sbb
testb
sub
xor
push
pop
testl
cld
jo
cli
ret
shl
cmp
pop
ljmp
loope
add
icebp
int
insl
in
cmp
repnz
aam
divl
cmp
imul
stos
add
push
push
icebp
push
push
stc
push
push
fsubrs
push
adc
jg
jg
mov
cmpsl
jl
xchg
scas
jp
xchg
scas
int
xchg
scas
ja
xchg
scas
mov
or
cld
shll
add
pop
insw
dec
dec
mov
mov
stc
aam
lds
jg
jg
iret
dec
idivl
sub
push
nop
sti
dec
out
xchg
shrl
daa
fisttpl
aaa
loopne
jno
xchg
cld
ljmp
test
push
xor
push
jmp
aam
adc
adc
inc
jnp
mov
xlat
or
pop
and
xor
jnp
pushf
cmp
stc
push
inc
pop
ljmp
cmpsl
xor
push
jmp
pop
push
xchg
inc
inc
jmp
repnz
sbb
adc
sub
cld
dec
xchg
std
adc
mov
fcmovb
icebp
fsubr
or
ds
arpl
xor
sbb
adc
lods
addr16
je
adc
or
dec
inc
jns
cltd
jae
adc
jg
fldt
jae
sub
lds
push
loope
xchg
mov
sub
jg
fists
shl
cld
fdivs
sahf
xchg
sub
int3
add
bound
nop
pop
cmp
lds
dec
jg
adc
clc
xchg
stc
and
mov
sub
adc
stos
adc
shl
push
icebp
adc
out
scas
mov
and
sub
or
inc
inc
inc
sbb
or
mov
in
adc
and
dec
jg
iret
push
lret
subl
out
inc
out
cmc
repz
or
mov
leave
scas
loop
xchg
out
jns
shl
inc
xlat
pop
sub
push
pushw
icebp
sbb
sbb
and
push
mov
cld
lret
cmc
or
dec
xchg
cwtl
mov
jae
push
icebp
mov
mov
xchg
sbb
or
leave
adc
clc
xor
cmp
jmp
pushl
xchg
fldenv
jle
adc
cmpl
lcall
cmc
adc
mov
push
adc
pop
iret
add
cs
pop
adc
outsb
pop
out
fldenv
out
sbb
out
fwait
lret
cmp
test
stc
push
inc
or
or
nop
jl
pop
into
shl
mov
jg
lret
cmp
push
add
xlat
icebp
mov
ficomps
fcmovu
lds
pop
ret
mov
push
ja
outsb
xor
les
sub
fdivs
push
hlt
je
xor
fildll
shl
cmpsb
adc
cmp
fstp
flds
inc
xor
cmp
sbb
and
nop
mov
and
or
icebp
cmp
add
js
lret
aas
cmp
xor
inc
fadds
xchg
out
adc
imul
xchg
xor
mov
psubw
mov
mov
cli
pop
xlat
push
inc
inc
adcb
cld
inc
ds
mov
cs
divb
leave
xchg
or
push
and
adc
jb
xor
aaa
xchg
jmp
outsl
inc
pusha
arpl
mov
mov
xlat
sti
adc
cmp
iret
lret
neg
mov
sub
xor
std
cltd
cmp
mov
push
cmp
sub
fwait
xor
bound
cmp
sbb
lcall
or
mov
insl
sbb
ret
or
add
shlb
inc
js
data16
inc
jae
pop
das
ds
sbb
pop
xor
xchg
xor
add
pop
pop
push
jg
repnz
dec
push
xchg
das
mov
sbb
adc
xor
fisttps
adc
xor
int3
sbb
adc
or
out
mov
sub
xchg
aam
daa
dec
dec
fs
cmc
aaa
cld
inc
and
fnstsw
sbb
fnstcw
lods
repnz
cmp
mov
mov
cmc
cmp
mov
inc
enter
lock
enter
xchg
and
dec
out
aas
test
mov
mov
cli
inc
aam
aam
scas
ja
ret
cs
pop
out
test
fnstenv
push
pop
scas
jge
hlt
pop
mov
push
or
xchg
adc
sbb
xchg
sbb
push
cmp
loop
fstp
aad
jmp
mov
lcall
rolb
sbb
mov
and
cmp
aad
repnz
push
sub
aaa
sbb
out
inc
mov
and
ret
mov
shrd
pop
lods
ja
lahf
test
rcr
pop
pop
mov
mov
imul
push
out
cmp
outsl
paddb
dec
sti
std
mov
add
and
rcrb
pop
ja
sahf
adcl
pop
pushf
jne
roll
test
push
add
sbb
ret
rcr
mov
fcomip
mov
arpl
aad
mov
js
adc
in
xor
inc
adc
adc
mov
push
pop
xor
shll
push
clc
pop
std
or
cld
push
sub
or
push
cli
add
push
jo
shr
and
adc
repnz
jbe
dec
push
jge
jecxz
cld
mov
adc
out
push
ss
test
dec
xor
in
xlat
stc
mov
pushf
das
mov
add
adc
mov
stos
lds
mov
pop
push
push
std
mov
lock
and
test
mov
mov
cmc
jo
xor
in
scas
loop
lods
and
sub
dec
je
stos
mov
xor
xchg
adc
push
mov
data16
push
sti
aam
sbb
push
pop
rep
out
in
inc
out
add
mov
push
or
in
insb
sbb
cltd
cmc
arpl
jp
push
jmp
cld
mov
jle
xor
inc
ds
cld
out
xor
cld
pop
mov
sbb
std
mov
stc
xor
and
add
mov
enter
outsl
mov
es
push
std
pop
fimuls
out
cmp
pop
arpl
xchg
sub
flds
inc
mov
fdiv
cmpb
aad
inc
in
dec
push
daa
xor
add
mov
xlat
das
aaa
or
fsubp
sbb
insb
sub
shlb
ss
rep
xor
dec
or
dec
rcl
data16
out
sbbb
rcll
xor
fcmovnu
sbb
into
xor
hlt
push
arpl
jne
fdivrl
add
jl
fnstsw
xor
pushf
adc
sets
in
jp
xchg
dec
cmc
cmp
lods
sub
push
pop
jmp
inc
jae
pop
stos
mov
jg
cmp
pop
scas
ja
mov
xor
fs
aam
push
shlb
push
repz
inc
testl
bound
fwait
je
inc
mov
fwait
add
inc
inc
int3
lahf
push
dec
adc
andb
les
xlat
dec
cwtl
cld
cmp
ds
aas
lahf
dec
xor
mov
inc
lret
sbb
lret
daa
jge
add
jge
stos
enter
push
sub
shll
jb
cmpsb
sub
mov
fsubs
jl
sub
fisttpl
xchg
or
mov
mov
pop
fs
cld
fdivr
clc
mov
xchg
adc
clc
in
jecxz
fsubs
mov
sub
push
icebp
jmp
scas
icebp
iret
mov
mov
stc
arpl
hlt
jp
scas
js
inc
cmpl
aas
js
loopne
lock
xchg
push
jecxz
lret
loopne
xchg
ret
ret
adc
mov
aas
cli
cmp
js
rcrb
xor
cmp
jge
test
shr
cld
mov
pop
ss
hlt
pop
aad
add
mov
out
popf
and
mov
jmp
mov
cli
pop
push
shl
out
push
cmc
or
push
div
adc
sub
movl
fwait
cmp
fwait
popa
or
fisttpl
xchg
sub
xchg
rorb
inc
scas
test
jb
mov
pop
fsubrs
jmp
or
mov
test
mov
inc
idiv
pop
adc
or
lods
or
add
out
push
push
aad
lahf
lret
push
repz
push
cli
jmp
or
ret
scas
push
fadd
mov
fwait
push
adc
scas
icebp
sbb
ds
push
xchg
popf
daa
rsm
cmp
in
rorb
pop
adc
add
es
mov
pop
push
fsubrl
push
inc
and
adc
ja
cld
ret
icebp
push
cmpl
sub
imul
inc
outsb
int3
jae
add
cmp
sub
mov
dec
aad
test
stos
iret
mov
leave
int
shlb
aam
outsl
xchg
js
out
cwtl
movsl
aaa
fcmovbe
push
insl
int3
lret
mov
dec
ja
iret
dec
mov
sub
and
das
push
push
adc
icebp
aas
mov
inc
out
roll
dec
push
rorb
clc
iret
mov
loop
inc
movsb
cmp
cwtl
mov
fs
stos
sbb
imul
jne
or
psrld
mov
xor
mov
ljmp
fsub
shrl
and
cmpl
in
or
aam
test
mov
insb
fcmovnbe
push
jno
sbb
ffreep
ja
inc
lret
cld
imulb
or
sub
sbb
aas
fcom
popa
sbb
push
pop
pop
insl
fdiv
sahf
repz
cli
in
lds
xchg
aas
lcall
and
adc
adc
jae
xchg
adc
mov
sbb
or
xchg
mov
jnp
mov
push
or
push
sti
shl
jnp
mov
and
je
aas
xchg
pushf
lret
push
xor
pop
out
xchg
and
cmp
clc
rorl
add
mov
outsl
sti
fwait
mov
cmpb
pop
push
add
sub
xor
mul
es
dec
jo
xchg
mov
aas
xor
mov
xchg
repz
popf
dec
or
pusha
ret
mov
cmp
repnz
xor
xchg
lds
jnp
rcr
add
and
push
inc
pop
testb
push
or
pop
mov
cli
ljmp
mov
out
cltd
cmc
lcall
mov
mov
ja
mov
dec
fidivs
es
loopne
and
cmp
ja
daa
pop
stc
cmp
es
lods
movsl
nop
xlat
cli
imul
aam
out
push
xor
mov
bound
mov
call
push
stos
xchg
fwait
add
in
sbb
mov
mov
xor
fcmovu
rcrl
fs
gs
jb
pop
aam
push
xchg
imul
xor
push
int3
loop
les
ret
xchg
lock
xchg
repz
sub
add
inc
xchg
iret
sti
les
shrl
imul
fldt
mov
jmp
sbb
mov
sarb
jmp
test
pop
aas
jl
dec
sahf
or
cli
xor
out
fistps
lods
and
sbb
sbb
aam
movsb
dec
loopne
out
out
mov
fdivrp
enter
jo
or
fildl
in
loopne
rolb
popf
ljmp
arpl
mov
repz
adc
test
jecxz
jecxz
cmc
cli
lret
xor
sbb
push
jae
push
cmpsl
mov
xor
sarl
sbb
pop
push
call
push
xor
inc
leave
cmp
ficoml
je
popa
idiv
inc
fst
push
shll
jns
jmp
jbe
or
jecxz
xlat
neg
pandn
jns
imul
mov
push
sarl
xchg
pop
fwait
sub
dec
fdivl
loopne
add
mov
stc
inc
iret
xchg
popa
mov
ret
in
push
mov
imul
mov
negl
fucom
loope
clc
dec
cld
hlt
push
movsb
icebp
push
lcall
leave
ret
roll
and
dec
scas
outsb
mov
adc
xchg
add
mov
xor
es
cmp
iret
lock
dec
dec
aad
sub
and
add
das
lret
xchg
clc
add
ret
repnz
pop
push
mov
adc
push
cs
adc
add
test
scas
add
das
mov
aas
lods
add
inc
push
lock
int3
jnp
subb
adc
aaa
sub
in
aaa
loopne
add
mov
repnz
mov
loope
mov
add
out
pop
push
aas
decb
fimuls
lods
aam
rorl
cwtl
mov
das
filds
or
push
das
pop
ret
and
add
pop
adc
sti
jle
or
loopne
mov
sbb
filds
pop
dec
xor
xlat
sbbb
inc
mov
xchg
clc
mov
rolb
rcrl
sub
xchg
cmp
jne
jo
push
iret
jo
mov
cmpsb
jmp
xor
dec
dec
rcll
pushf
mov
xchg
or
aam
faddp
outsb
loop
lcall
inc
sub
test
aam
xor
hlt
lcall
jns
xor
xchg
add
lret
imul
mov
sbb
push
inc
adc
mov
arpl
lods
cmpsl
out
cli
jnp
addr16
ljmp
sbb
cmc
jnp
int3
xor
iret
or
test
xchg
das
mov
icebp
ss
cwtl
ljmp
add
dec
pop
mov
rcr
ja
shlb
or
pop
rolb
out
adc
cli
dec
adc
inc
lods
sub
mov
jns
scas
mov
lahf
int3
add
sub
cmp
loop
cmp
or
mov
ret
clc
mov
add
cmp
lret
arpl
out
push
std
pop
rcll
or
mov
jecxz
outsb
add
jno
xlat
push
repnz
in
push
dec
cli
and
jbe
insl
movq
mov
shl
cmp
in
sub
aas
pop
clc
jmp
cmc
mov
mov
mov
mov
fidivs
adc
and
flds
outsl
cmpsb
sti
inc
fdivs
inc
fnstenv
idivb
fcmovnu
ja
push
dec
lahf
push
lods
fcmovnu
aas
shrb
lret
cld
sar
in
mov
xlat
push
or
dec
aam
mov
and
adc
roll
psubusw
sub
ret
ljmp
stos
xchg
sbb
push
pop
ret
dec
mov
jg
aaa
push
lock
inc
lock
push
adc
bound
fsubrs
fwait
je
and
jl
sbb
cmc
faddl
adc
adc
movsb
fdivr
fst
in
add
push
hlt
add
in
lea
pop
or
or
lret
dec
xor
idiv
in
xchg
repz
aam
adc
std
inc
add
and
push
pop
mov
add
test
ret
les
fdivrl
out
cli
or
loope
popa
icebp
test
repnz
sub
fistpll
mov
in
sti
xchg
jp
push
cmp
movsl
dec
adc
movb
insl
test
xchg
stc
mov
jle
call
mov
mov
inc
mov
aad
or
push
cmp
inc
dec
incl
ljmp
mov
add
push
cmp
sub
mov
popf
movsl
stos
push
int3
mov
repnz
jb
ss
in
imul
jnp
daa
inc
aam
loope
xchg
and
int3
inc
sbb
out
push
jne
pop
pop
aaa
callw
jmp
push
sarb
xchg
dec
sarb
sub
ret
or
iret
mov
jb
jl
xor
add
or
adc
xchg
es
aas
add
add
adcl
pop
je
jecxz
in
scas
or
aad
cmp
lods
sbb
push
jmp
daa
inc
movl
mov
test
pop
jp
lcall
xor
push
mov
in
pop
cmp
adc
push
rcl
mov
addr16
sub
push
repnz
in
out
in
ljmp
xchg
dec
fmul
mov
add
shll
adc
scas
inc
les
out
test
repz
add
loopne
fidivrs
xchg
call
pop
adc
jmp
fwait
scas
xchg
or
pop
iret
pop
push
test
pusha
fdivl
pop
add
mov
movsl
aaa
stc
inc
adc
loope
push
idiv
xchg
enter
ja
and
aaa
xchg
jns
xor
aad
dec
jecxz
push
sbb
sub
push
in
jae
dec
and
hlt
or
mov
jp
push
sub
jne
jne
mov
je
push
in
xlat
pop
sub
adc
dec
subb
cltd
sahf
jmp
add
push
push
ret
out
mov
test
push
mov
repz
mov
fnstsw
addr16
inc
fsubl
sbb
xor
xor
jo
mov
fmuls
jl
data16
cmp
mov
inc
test
or
pop
and
lds
inc
sahf
sub
aas
fistpll
icebp
fisttps
rclb
fcmovbe
stos
outsl
pushf
pushl
fs
pop
call
cmpsl
cmpsb
sbb
adc
loope
cmp
mov
sub
sub
jl
push
sbb
mov
mov
xlat
cmp
dec
inc
jnp
xchg
pop
jo
mov
adc
pop
ficoml
mov
std
outsb
push
hlt
lcall
inc
sar
fadds
test
inc
jo
jle
aas
lods
icebp
xor
jmp
jb
mov
inc
mov
movsl
pop
xor
push
ret
add
mov
mov
fcmovnu
loopne
testb
pop
ja
ror
hlt
sub
pop
fldenv
xor
dec
add
aam
mov
pushf
mov
mov
jg
lcall
enter
cld
in
add
imul
and
loope
cs
jns
out
lock
test
loope
cmp
jecxz
clc
cmp
cs
ret
jns
inc
shl
bound
inc
push
pushf
add
ret
jo
cmp
ret
sub
jg
rcrb
in
mov
addr16
mov
clc
cmpb
push
loop
xchg
sub
xor
mov
cmpsb
mov
addr16
and
lds
imul
aas
mov
mov
test
ljmp
and
ja
push
sub
mov
or
loope
loop
sub
cmpsb
jo
icebp
insb
and
jle
test
push
jecxz
fnstsw
or
adc
arpl
shll
pop
or
or
add
pop
lock
paddsb
ds
cmp
es
xlat
gs
mov
pop
and
call
adc
xchg
add
mov
adc
addl
lock
lret
in
jmp
movsb
inc
inc
fsubrs
fs
div
xor
repnz
shr
mov
and
cmpsl
aam
or
adc
repz
mov
popa
push
in
pop
pushf
pop
jae
ret
clc
cltd
stc
test
and
pop
pop
xchg
or
adc
push
hlt
push
test
aam
cmpsl
imulb
mov
shll
js
add
shrb
xlat
adc
jle
hlt
push
push
sbb
std
dec
inc
fbstp
xchg
arpl
cmp
xor
and
mov
icebp
fsubrs
dec
sbbl
and
jmp
dec
jne
sub
loope
pusha
xor
pushf
inc
push
mov
xchg
shl
lds
xor
insl
repz
aam
cmp
jecxz
inc
or
ja
fwait
jle
xchg
jnp
nop
pushf
mov
ret
jl
and
cmp
lods
jecxz
inc
add
cmc
sub
mov
fwait
and
mov
xchg
fldenv
outsl
and
enter
das
lret
faddl
aam
jnp
std
mov
xor
adcb
pusha
stos
cmpsb
out
adcl
lock
fnstenv
mov
xchg
neg
leave
lret
out
in
and
pusha
add
adc
cli
fcmovnb
cmpsb
in
push
add
ds
fiaddl
add
jmp
dec
push
mov
outsl
sub
movsb
push
cmp
dec
adc
mov
movsb
clc
out
pop
jecxz
dec
xlat
and
in
jbe
cs
pop
leave
adc
jp
push
cmp
jge
push
add
dec
and
sti
in
xchg
dec
lock
dec
loope
or
inc
mov
bnd
sbb
in
adc
scas
imul
mov
iret
cmovo
adc
into
enter
jg
fisttps
es
test
lret
xor
hlt
and
inc
test
addr16
mov
fucom
cmc
add
int
mov
adc
add
lcall
xlat
and
xor
mov
lock
lods
rorl
jb
cs
aas
cwtl
icebp
add
jecxz
int
push
rolb
push
aam
and
sub
iret
jmp
sbb
mov
nop
or
loopne
jae
jno
inc
gs
imul
into
pop
sti
lock
sbb
repz
repnz
imul
ljmp
pop
pop
push
cld
std
jle
icebp
mov
sbb
mov
stc
pop
je
mov
ret
sbb
rorb
or
adc
mov
or
xor
insl
mov
push
inc
neg
mov
push
je
scas
or
jecxz
cmc
out
not
aam
jmp
xor
inc
frstor
dec
and
cmpsb
jg
mov
enter
push
sub
shrl
jmp
adc
icebp
push
jno
push
xchg
int3
aam
imul
lret
and
loop
and
aam
insb
dec
repnz
fwait
inc
jb
xchg
add
push
clc
push
pop
loopne
push
cmp
inc
cmp
and
push
aam
or
ficompl
dec
push
out
out
fstp
adc
add
fwait
or
dec
insl
inc
push
inc
jne
cmp
xchg
dec
mov
aas
in
dec
outsl
cmp
iret
je
in
mov
jb
stc
lods
xchg
dec
fs
sub
aad
jmp
stos
cmp
adc
gs
aam
cld
push
sub
push
aaa
pop
loopne
cmp
jnp
ds
rorb
out
mov
mov
ffreep
jne
repnz
fwait
addl
clc
dec
popa
pushf
jge
pop
or
lds
mov
and
repz
or
mov
pop
adc
mov
hlt
cmc
inc
ret
xlat
xchg
fnstenv
mov
fcoms
add
dec
loop
insb
mov
sbb
sbb
xor
movsb
cltd
cmc
stos
iret
add
scas
shl
pop
aam
lcall
arpl
pop
and
xor
outsl
mov
xor
lea
push
or
sub
int3
lret
jmp
or
push
aad
mov
mov
scas
mov
or
popf
push
adc
pusha
mov
or
xchg
xchg
icebp
or
cmc
iret
test
mov
test
xchg
inc
jg
flds
and
or
sbb
mov
adc
fcmovne
out
int
adc
inc
je
xchg
into
loop
and
adc
movsl
lret
sbb
xor
push
xor
out
cmpb
xlat
dec
test
mov
or
inc
and
imul
mov
xor
loop
jno
in
push
pushf
lahf
inc
jecxz
aam
mov
pushf
mov
cmp
xchg
xor
int3
mov
adc
dec
add
ja
and
cwtl
or
je
adc
jns
mov
xor
xlat
ds
jmp
negl
pop
mov
inc
outsl
mov
or
jne
mov
stc
icebp
jbe
pusha
mov
stc
sbb
ret
stc
mov
push
les
or
inc
xor
sub
cld
push
imul
enter
push
jp
xchg
loopne
jb
mov
es
cmp
call
lds
sub
mov
mov
add
sub
sbb
lock
jl
mov
add
rclb
mov
jo
dec
xor
jo
shlb
xchg
push
loop
fcomi
dec
mov
adc
dec
pop
fidivs
cli
sbb
ret
cld
loope
movsl
test
xlat
push
cmpb
sub
insl
mov
push
xlat
sbb
scas
loope
dec
repnz
mov
loope
scas
push
inc
cltd
iret
out
adc
xchg
pop
cmp
int3
test
pushf
and
das
mov
mov
mov
inc
adc
sar
push
jbe
mulb
mov
mov
cs
push
cmp
in
push
xchg
dec
cmpsb
imul
adc
test
and
sub
xor
sub
pcmpeqb
push
xchg
cwtl
lock
aas
xor
pop
mov
push
test
clc
cld
pop
pop
arpl
addr16
push
inc
jmp
push
lock
mov
cmpsl
iret
xlat
jae
mov
sbb
mov
push
decl
lods
enter
add
sbb
fidivrl
fwait
sti
sub
fcomi
push
push
jp
lock
xor
fisttps
push
out
repnz
push
push
idivl
push
lock
mov
jno
push
test
fsts
cmp
pop
addr16
repz
mov
cmpsb
sahf
pop
lret
loop
jo
or
aaa
repz
mov
adc
lret
daa
lods
push
jbe
clc
inc
mov
or
aaa
jle
inc
sub
scas
pop
int
loope
test
mov
loope
fdiv
or
jne
add
jno
lcall
rcll
scas
push
ret
add
das
cmpsl
in
add
pop
or
popa
fsubp
pop
cmpb
jmp
test
leave
sub
adc
xchg
das
add
leave
xlat
fstps
xlat
xor
loopne
dec
sti
sub
lahf
pop
imul
pop
imul
mov
movmskps
mov
pop
xor
sbb
or
push
sbbl
inc
mov
pop
push
ret
mov
insl
in
and
je
xor
rcrl
add
add
aas
xor
out
aas
andl
int
or
sub
aad
xor
repnz
mov
mov
int3
sarl
iret
pop
icebp
mov
jno
dec
out
and
mov
push
sub
test
jp
lods
repnz
pop
mov
mov
shlb
jg
inc
or
loopne
movsb
rolb
fbld
cmp
jp
push
jb
xor
bound
jb
jecxz
out
and
out
add
data16
xchg
aam
sub
xor
dec
pop
mov
cld
jg
mov
adc
dec
and
or
aad
outsl
dec
mov
mov
and
jnp
dec
push
push
movl
or
or
xchg
shlb
ret
add
mov
fwait
loopne
stos
jae
jne
fwait
pusha
je
add
dec
iret
outsl
or
sub
loopne
push
mov
into
rol
cwtl
stc
jns
push
mov
xor
adc
movsl
dec
add
sub
loop
outsl
sti
push
shl
xchg
loop
dec
cmpsl
cmp
fwait
nop
loop
jg
sbb
fwait
xchg
jecxz
mulb
jl
xor
or
fadd
insb
adc
in
adc
mov
pop
sub
addr16
sbb
aad
clc
stos
fcomps
sub
xchg
xchg
shl
and
xchg
sbb
sbb
insl
mov
arpl
int
imul
adc
xchg
lock
inc
fmulp
pop
roll
out
int3
inc
jae
andl
and
push
pop
loopne
cli
cwtl
out
push
pop
fidivrs
jmp
loopne
mov
xor
cmp
arpl
push
out
and
push
push
pop
mov
sub
stos
inc
jp
adc
push
ret
icebp
jmp
push
sub
mov
jmp
lods
fld
mov
fdivp
pand
std
dec
xor
or
adc
xchg
shr
test
lahf
push
and
lods
sub
pushf
mov
shr
mov
cmp
pop
mov
xlat
out
nop
jg
out
cli
jecxz
fistpll
pop
adc
adc
or
cmpsl
mov
jne
inc
xlat
mov
xlat
in
jae
neg
es
jl
add
negb
sub
outsb
mov
rcrb
fucom
inc
aas
mov
dec
test
push
mov
adc
das
mov
pushl
xchg
mov
sub
into
add
ds
test
sbb
sbb
int3
push
jg
dec
enter
outsb
leave
and
xor
loope
fcomp
subb
pushf
push
in
dec
mov
adc
sbb
shrl
outsb
cmc
sahf
lret
test
leave
xor
cltd
sub
in
xchg
rcl
out
scas
inc
jle
mov
cmp
xor
dec
cli
jge
sub
in
loop
std
or
repnz
sub
bound
pop
add
cld
mov
out
rcrb
hlt
es
jg
in
imull
aas
push
fnstcw
sbb
repnz
rcr
orl
scas
mov
out
push
das
inc
jb
push
xlat
sbb
push
dec
es
aam
dec
jp
fs
xlat
fs
mov
fildl
mov
dec
mov
cli
out
adc
xor
or
je
inc
adc
adc
pop
out
popf
push
cmp
repz
in
inc
push
jg
cmp
mov
lret
inc
sbb
xor
push
push
jge
arpl
mov
push
cld
add
sbb
xlat
in
lcall
fs
pop
xor
lcall
inc
sti
or
cmp
xor
xchg
rcll
icebp
popa
ret
adc
add
repnz
lret
xor
cmpsl
fsubr
jp
xchg
push
test
loop
xorb
loopne
cwtl
push
cmp
mov
add
cltd
insl
rcll
push
into
dec
sbb
out
and
mov
dec
mov
fidivrl
sbb
mov
fildl
pushf
push
jno
xchg
lods
int3
jns
mov
or
dec
sti
xchg
lret
sti
mov
in
pop
add
sti
into
shll
sbb
test
sub
sbb
repnz
aas
mov
jno
std
ficompl
adc
mov
push
aam
lcall
cld
add
xchg
cmp
or
and
dec
daa
sbb
dec
inc
dec
leave
repz
jmp
in
hlt
sub
cli
mov
xchg
inc
pop
cmc
test
jmp
jno
mov
xor
jno
mov
into
leave
mov
xchg
pop
lock
pushf
shrl
popa
andb
shll
xchg
ja
cli
adc
cli
clc
pop
or
sarb
int
lcall
push
movsb
hlt
cs
cli
lds
sub
sub
int
push
popa
cltd
call
pop
std
cmp
hlt
push
in
xchg
sbbb
jle
out
loop
call
cs
mov
pop
int
sub
inc
jns
rol
aad
cmc
lock
push
mov
lock
mov
iret
out
aam
cmp
lea
bound
mov
subl
fiadds
or
outsb
icebp
pop
jecxz
aad
imul
xchg
shrb
jle
call
or
jle
scas
ret
test
dec
and
mov
xorb
push
cld
arpl
sbb
aad
or
repz
mov
shll
adc
sti
rcr
lock
mov
cmc
cmpsl
inc
sub
sbb
inc
loop
and
lcall
cmpsb
mov
cld
pop
inc
pop
test
fstps
loopne
ret
pop
fdivrl
jmp
inc
sub
mov
ljmp
stos
ds
fimull
adc
lods
orl
cli
mov
and
inc
inc
mov
adc
into
inc
dec
stc
lock
mov
rclb
and
jmp
and
clc
rorl
cmp
inc
inc
pop
loopne
add
push
push
fiaddl
inc
mov
add
and
fwait
aam
xor
xor
mov
adc
shlb
aad
and
or
div
cwtl
mov
mov
mov
or
lahf
popa
rorb
enter
cltd
rorb
and
xchg
js
cmp
sti
sub
insl
and
rol
add
inc
push
push
in
lock
jp
pop
pop
gs
add
cwtl
out
dec
add
out
cmp
aam
repz
pop
loop
fsubrl
jnp
ja
jp
lcall
int
arpl
mov
out
mov
xchg
add
fldl
or
cmp
mov
sub
mov
cs
fsubl
push
int
idivl
sbb
sbb
lds
adc
out
enter
es
jp
rcll
jno
jmp
fdivp
insb
aas
test
xor
ljmp
int
and
inc
outsb
scas
cmp
nop
cmp
dec
jo
cli
pusha
addl
mov
inc
std
cmp
repz
lcall
inc
cld
and
xor
push
stos
push
cld
cs
lret
inc
aad
mov
into
decl
jle
cmpsb
push
ljmp
leave
jb
and
out
pop
jne
mov
std
stos
or
adc
dec
add
aaa
or
inc
in
in
lock
aad
mov
xchg
pop
cmpsl
mov
fsubrl
cmp
pop
mov
rorb
mov
and
outsl
faddl
cmc
cmpsl
push
lods
cs
lock
dec
pop
lahf
cmp
pop
stos
sub
jno
movl
bound
or
data16
fidivl
sbb
dec
iret
push
andb
inc
std
loope
jl
and
sbb
hlt
clc
push
xchg
jo
or
fistpll
andl
cmp
loope
lahf
xchg
cmc
or
aaa
sub
jnp
xchg
cs
fildll
out
hlt
mov
xchg
fldt
lret
mov
mov
cs
punpckhdq
scas
jp
and
mov
movsb
push
adc
std
inc
add
leave
aad
inc
pop
cli
lret
xchg
cmp
subb
out
std
and
xlat
pusha
es
in
call
cmp
es
nop
inc
jp
jo
loop
xor
ljmp
inc
cmc
cs
cld
jmp
xchg
pop
leave
je
xchg
push
xor
lods
sarl
mov
loop
lock
mov
addr16
mov
mov
or
in
lcall
xor
mov
les
and
not
inc
iret
jge
mov
lds
ljmp
and
out
cwtl
lock
mov
stc
inc
dec
mov
or
mov
pop
jmp
xor
mov
cli
ffreep
adc
mov
and
int3
shr
mov
es
movsl
adc
push
fisttpl
js
jecxz
aam
fisttps
xchg
mov
or
int
test
sarb
movsb
pmullw
popa
jbe
aas
add
fbstp
out
dec
mov
pop
je
mov
mov
sub
fnstsw
adc
lods
xchg
add
outsl
dec
orb
ja
jg
ret
ja
mov
xor
jge
dec
sti
sahf
cmpsl
rolb
pusha
xchg
push
lds
leave
or
pop
add
mov
or
popa
jp
jecxz
lret
lret
pusha
or
mov
xor
repz
loopne
xchg
aas
movsb
push
je
cmpsb
jbe
and
adc
cmp
push
pop
imul
xchg
adcl
sub
mov
std
test
push
rcr
jbe
push
xchg
pusha
mov
hlt
int
addr16
loope
lods
jo
fwait
cmp
pop
add
add
hlt
sti
repz
or
and
jo
lea
sbb
in
sbb
dec
dec
sub
sub
dec
fsub
stos
out
lock
jbe
xor
push
fstps
cmp
std
in
rcrb
ja
dec
dec
pop
mov
pusha
jecxz
movsb
fcom
daa
pop
add
shl
push
mov
push
cmp
inc
fucomp
inc
test
rol
dec
aad
sub
aad
or
aam
cmp
push
or
or
enter
inc
ror
lahf
push
lea
add
cmc
lods
push
sahf
xor
addr16
mov
mov
pop
xchg
in
ss
adc
sbb
add
cmp
and
fildl
push
ja
xlat
in
fstpt
into
add
data16
mov
into
setb
sub
push
jp
divl
les
sti
mov
packssdw
jg
pushf
aas
adc
in
sbb
add
cmc
in
mov
ficomps
sbbb
repz
jle
jnp
jmp
or
out
xor
xor
pop
and
sti
xchg
adc
dec
adc
xorb
les
hlt
push
cmp
inc
adc
pop
sub
inc
fldt
out
xor
jle
test
cmp
mov
mul
push
push
das
adc
xchg
cmpsb
leave
cmpsb
in
into
and
sti
out
mov
mov
pop
insb
mov
out
aas
loopne
adc
xchg
call
sahf
in
sub
dec
push
es
js
scas
addr16
add
std
dec
int
mov
jne
loopne
or
sub
sub
sahf
cmp
jle
jnp
mov
rclb
ret
fs
pop
xor
mov
xchg
lods
xor
daa
adc
in
daa
add
icebp
xchg
rcrl
in
xchg
imul
in
leave
sbb
inc
imul
jg
repnz
outsl
jmp
test
scas
and
outsl
insb
xchg
into
negl
push
fcomp
in
scas
or
sbb
hlt
testl
add
push
fs
nop
sbb
ja
adc
mov
cmpsl
and
mov
lock
cmp
mov
and
pop
aaa
pop
xchg
ds
aad
dec
out
testl
mov
stos
out
jl
jecxz
push
add
xor
dec
movsb
mov
in
fmull
sbb
les
push
dec
cmp
fnsave
bnd
test
stc
cmp
fidivrs
inc
and
add
cmp
cmp
ss
xchg
repz
xchg
test
or
ja
sbb
and
and
out
pop
mov
mov
jl
imul
push
dec
pop
aam
lods
cmpsl
lds
out
cmp
cmc
shl
std
add
call
mov
xor
sbb
cmc
fs
ds
mov
inc
push
mov
ljmp
cmp
insb
jo
movsb
sub
push
xchg
adc
xchg
push
jno
ss
mov
enter
jbe
negb
ja
mov
mov
adc
in
mov
filds
add
std
int3
push
inc
enter
or
loope
sub
popf
push
paddd
js
scas
mov
adc
add
jb
mov
or
ss
dec
rcr
sbb
push
lret
rorb
sbb
dec
dec
sbb
arpl
inc
jge
cmc
movl
or
cmc
inc
or
xchg
in
ret
daa
dec
push
sub
xor
mov
push
test
inc
adc
sub
loop
aam
popa
pop
xchg
mov
cmc
iret
lahf
aam
call
ret
jbe
bound
or
fwait
mov
cs
test
rcll
mov
jnp
sub
sbbb
and
data16
scas
jg
mull
pop
negb
add
ficoms
xchg
insb
call
pop
imul
stos
jmp
call
movsb
jno
fcmove
ret
aaa
xor
adc
xlat
repnz
pusha
jmp
dec
sbb
aad
xchg
nop
call
out
sbb
jnp
cwtl
xor
jo
ficoml
cmp
aam
js
adc
add
push
pop
pop
dec
add
in
jo
sti
pop
xchg
xor
loopne
add
rcr
adc
jbe
out
clc
mov
adc
or
js
nop
popa
cld
andb
ret
js
bound
fwait
xchg
push
lea
in
repnz
sub
jge
repz
mov
sbb
jl
fcomip
jo
aam
out
dec
in
push
jno
mov
jb
pop
mov
jne
loopne
je
cld
out
in
sub
subb
ss
lcall
add
add
in
and
hlt
in
mov
dec
sbbl
sbb
aad
repz
das
imull
cli
mov
adc
popf
mov
stos
push
lods
outsl
ds
pop
adc
je
mov
out
lret
aad
xlat
xor
inc
int
or
repz
stc
invd
cmp
mov
out
enter
mov
loopne
or
nop
roll
into
outsb
xor
and
lock
in
add
int3
inc
sbb
mov
or
rorb
push
fsubr
hlt
fmull
sbb
inc
popa
or
pop
pusha
sbbl
xor
lock
fcomi
daa
loopne
xchg
mov
cmpsb
add
jb
out
in
or
xor
xchg
test
mov
stos
jnp
xor
add
int3
in
insl
mov
mov
pusha
aam
mov
in
jecxz
and
jnp
or
sbb
std
call
test
pop
sahf
jne
daa
cmp
into
cmp
sub
add
add
jecxz
xor
out
scas
pusha
cmovae
lock
sub
and
mov
clc
idiv
cld
or
pop
add
ds
lahf
mov
addb
fidivl
sbb
sub
fbstp
out
arpl
or
in
or
cli
aaa
pop
jp
mov
xor
fistl
fxsave
or
mov
adc
push
in
adc
adc
or
icebp
push
and
scas
inc
inc
stos
cmp
sbb
dec
and
inc
inc
jmp
or
fisttpll
loope
fstl
mov
aaa
adc
jbe
sub
push
aaa
adc
pop
orl
jae
sub
mov
hlt
dec
loop
mov
out
aad
push
cli
in
icebp
out
in
mov
out
push
insl
xor
outsb
mov
imull
outsb
sbb
mov
cmc
sbb
cltd
scas
add
or
rcll
fstl
insb
xor
loope
loope
add
push
cmp
insl
nop
daa
jge
hlt
or
repnz
push
test
aad
fidivrs
adc
ja
in
negb
push
std
xor
mov
cmp
jmp
and
std
stos
push
inc
aas
out
pop
xchg
rol
loopne
cs
pop
cmovo
std
repz
out
outsb
cmp
lock
jns
test
inc
mov
cs
daa
inc
or
xor
sbb
lds
insb
stc
mov
mov
xchg
test
cmp
cld
fisubs
punpckldq
jns
cmp
adc
sti
sub
sti
inc
and
xchg
and
fcomps
out
iret
fdiv
jl
lret
xchg
xor
inc
std
sub
cmp
lcall
stos
push
add
cltd
dec
xchg
into
mov
xchg
call
imul
fnstsw
repnz
adc
sbb
mov
int
fldl
push
jg
es
jle
push
scas
mov
mov
jnp,pt
xchg
int3
push
mov
cmp
mov
or
das
pop
sarl
leave
mov
xor
in
xchg
cld
jno
xchg
push
pop
push
and
aas
insb
sbb
mov
jg
nop
arpl
sbbb
iret
mov
xor
leave
mov
pop
xor
fsubrp
fsubp
push
push
pop
adc
push
sbb
je
in
testl
push
mov
rep
ds
loopne
dec
and
lret
repnz
dec
pop
ret
loopne
ds
ficomps
push
pop
rcr
ljmp
lock
xor
fst
pop
add
addb
int3
mov
push
roll
xlat
fcoml
lret
adcl
or
push
popa
mov
loopne
xor
sbb
mov
cmc
sarb
dec
es
inc
fmuls
pushf
cmp
dec
push
addl
mov
js
or
into
addr16
mov
loop
leave
les
lods
jecxz
loope
popaw
les
push
test
stos
outsl
ds
call
push
and
pop
pop
pop
loopne
xlat
sarb
xchg
dec
jecxz
repz
push
mov
jge
pop
or
fisubrl
adc
adc
mov
dec
pop
pop
jno
jno
lods
mov
sbb
and
or
push
adc
fnstcw
mov
adc
scas
add
pop
jmp
jle
cmp
add
call
sbb
pushf
lea
loop
mov
lret
sbb
pushf
adc
test
fdivrl
insb
inc
ja
pop
sbb
add
cmp
cwtl
pop
xchg
xor
sahf
outsb
adc
xchg
pop
xchg
pusha
push
incl
mov
mov
sar
push
repz
pop
jo
add
or
add
movl
xchg
inc
int3
push
and
xlat
push
inc
scas
sti
push
sub
loope
pop
push
out
cmpsl
dec
aam
js
fbstp
dec
fisttps
xchg
lods
fimuls
jne
int
mov
sbb
mov
in
popa
sub
cltd
sub
mov
push
out
pop
rep
pop
adc
mov
out
cmp
dec
add
jge
lods
and
test
add
jle
xor
ds
std
sub
out
aas
mov
mov
push
insb
xor
outsb
push
cmp
mov
ljmp
sti
cs
repnz
cmp
jb
stc
sti
add
mov
lock
aad
adc
iret
int3
call
and
push
ss
cbtw
fcoml
out
inc
cmp
rcr
test
adc
popf
jge
pop
xlat
out
jno
repnz
stos
cmp
mov
lods
mov
hlt
ss
xchg
ds
jmp
mov
mov
lock
lods
test
add
pop
loop
inc
cmp
xor
nop
mov
stc
mov
fiaddl
imul
lds
lahf
sub
mov
mov
ror
fimuls
ljmp
pop
ret
inc
stc
or
lods
cs
sbb
xor
cltd
sbb
psllq
add
adc
dec
insl
ja
lret
adcl
adc
fiadds
add
jno
jecxz
xchg
push
dec
mov
js
gs
or
pop
je
push
sbb
scas
fimuls
out
pop
adc
ds
cmc
xchg
movsl
fs
xchg
les
cld
ret
sub
mov
iret
out
mov
lret
pop
push
pop
mov
cli
pop
stos
lock
hlt
cli
pop
cmpxchg
pop
scas
lret
mov
mov
int
movsb
push
ficomps
pop
inc
sbb
ret
gs
enter
jo
stos
dec
mov
insb
inc
aad
iret
mov
mov
sti
loope
fcoml
movsb
cmp
roll
sub
cmc
int
out
xor
sub
lods
pop
dec
inc
ds
lret
loope
test
xchg
imul
in
and
bound
aam
dec
mov
pop
nop
sub
stc
rcrl
in
and
pop
sbb
aas
js
nop
fmull
shl
fwait
mov
inc
mov
das
cmp
xchg
ret
cld
cltd
mov
push
sub
aam
insl
dec
push
mov
mov
sbb
inc
add
mov
inc
data16
push
neg
inc
lds
ret
mov
xor
dec
mov
and
xor
jae
cltd
int
push
cmc
and
add
inc
lock
dec
pavgw
sbb
std
outsb
mov
xchg
sub
mov
inc
shll
jnp
shlb
in
mov
xchg
mov
and
les
clc
mov
rcrb
push
xor
ret
mov
ljmp
pop
pop
clc
pop
es
xchg
vmaxpd
int3
mov
xor
dec
stos
dec
aad
jbe
repz
jle
dec
cld
jae
xchg
out
enter
xchg
sti
xor
adc
pop
adc
cmp
adc
aad
jo
cmp
cmp
lds
es
jns
fiaddl
adc
rcll
leave
in
push
adc
push
insl
add
pop
push
jnp
cmp
push
mov
pop
adc
and
mov
into
and
add
mov
push
imul
xchg
stos
loope
inc
shrl
mov
xor
out
push
cmpsl
mov
sbb
add
push
fisttpll
vpaddusb
add
inc
adc
pusha
cmp
mov
idiv
mov
lds
cwtl
fisubl
int
mov
pop
jo
stc
push
and
adc
cmp
pop
mov
cmpsl
mov
inc
push
insl
sarl
push
data16
cs
mov
lods
repz
jmp
cmpsl
cmp
jg
dec
fsts
xor
hlt
or
pop
shll
push
and
adc
aaa
leave
cli
adc
add
inc
shr
lcall
rorl
and
pop
xchg
pop
jmp
cmp
pop
lods
lahf
loope
add
repnz
inc
out
sub
aad
jecxz
push
repnz
push
mov
insl
jne
push
mov
jbe
scas
mov
popa
popa
std
mov
sbb
enter
fwait
pop
xchg
jge
data16
jl
dec
cwtl
add
lock
xor
fsubrl
sbbl
movb
std
push
push
or
ja
add
ret
repz
icebp
je
rcll
aas
sbb
xlat
dec
pop
in
jno
fcmovb
mov
ss
push
lahf
mov
push
lea
dec
shl
fdivl
jbe
loop
add
fs
fs
repnz
xor
sbb
out
mov
push
into
mov
lcall
inc
ljmp
stos
jo
dec
repz
adc
cmp
pop
sti
subb
fidivs
push
push
imul
sbb
cmp
jecxz
cmp
andl
es
pop
dec
repz
out
imul
pop
pop
iret
hlt
mov
movsb
inc
std
add
xor
push
mov
adc
mov
push
and
inc
lods
add
jae
popa
cs
les
dec
aad
ss
fcmovnu
jae
movq
push
inc
cmc
adc
push
scas
enter
cmc
lods
insb
insb
jo
pusha
add
roll
addr16
lret
cmp
imul
xor
push
pushf
inc
data16
mov
mov
mov
add
adc
adc
mov
cmp
out
mov
loope
stos
and
jno
out
sti
shl
in
out
popfw
repnz
and
in
mov
fs
rcrl
or
addr16
mov
mov
ret
shlb
jg
test
in
ss
cmp
fwait
cmpsl
popa
shlb
xor
bound
aaa
mov
roll
sbb
push
inc
pop
mov
xchg
pop
sbb
lods
push
ret
out
nop
daa
in
jg
call
ret
inc
into
stos
push
rcll
pop
jb
or
cmpsl
cmp
hlt
sbb
pop
das
sbb
frstor
fs
paddq
add
lods
in
js
mov
mov
imul
mov
and
push
xor
aas
notb
imulb
lret
pop
fldcw
lahf
in
imul
dec
push
loop
xor
xchg
pop
aas
imul
add
imul
push
fidivrs
test
decb
mov
repz
sti
mov
decl
gs
sarl
cmp
xor
inc
pop
cwtl
popf
jl
cwtl
adc
cmovne
loope
inc
fs
lods
and
or
mov
repz
jbe
jp
xchg
addr16
and
outsb
sbbl
int
xchg
push
pusha
adc
inc
sub
icebp
mov
or
xor
inc
jb
aad
out
aas
xor
lods
stos
dec
jnp
xlat
outsb
sbb
shl
and
psubw
jno
mov
pushf
add
add
or
mov
or
mov
lds
cld
adc
mov
mov
mov
cmp
aaa
xchg
repnz
scas
adc
iret
cmp
cmp
stos
push
pop
cld
dec
mov
dec
popa
fmulp
stos
pop
jo,pn
push
mov
fsubrs
idiv
sbb
fwait
push
pop
in
sub
cwtl
and
dec
or
dec
enter
movsl
test
mov
push
pop
je
icebp
or
in
xchg
shl
mov
mov
out
mov
jne
adc
or
sub
xchg
daa
dec
sbb
xor
test
je
cmc
lcall
flds
xchg
adc
test
not
int
in
fs
dec
cld
or
or
pop
lcall
mov
pusha
cli
jecxz
jo
movsb
and
push
sbb
fsubr
repz
mov
inc
adc
lds
mov
lds
mov
add
into
pusha
adc
xor
rcll
popa
movl
pop
mov
aam
xorb
fmuls
cmp
inc
pop
cmp
cmp
rcrl
add
sbb
fs
in
or
cmp
xchg
aas
jbe
lods
jmp
push
or
out
neg
adc
shll
adc
enter
divb
inc
inc
loopne
push
pop
xor
out
nop
adc
push
or
cli
fadds
mov
cs
jb
adc
mov
sti
jo
push
pop
das
repnz
movsl
inc
ja
movsb
shll
pop
mov
testb
neg
rcll
lods
mov
repz
or
mov
sbb
ds
shll
jg
clc
cmp
sahf
mov
icebp
or
loope
int
pushf
jo
mov
shll
subl
push
or
pusha
mov
pop
jecxz
test
push
insb
movups
adc
push
in
test
jmp
cwtl
xor
shll
popa
out
xchg
mov
mov
push
cld
cmp
and
scas
ja
xor
insl
mov
je
mov
and
sahf
pop
imul
xor
or
pop
push
pop
sbbb
xor
pop
push
fidivs
jg
fsubrl
pushf
into
push
xchg
pop
and
or
imul
in
es
mov
wrmsr
dec
xor
mov
mov
frstor
cmpl
dec
arpl
daa
sbb
xchg
dec
pop
mov
cmp
mov
jb
xchg
dec
jno
inc
pop
sbb
jno
cmp
sub
xor
insb
lret
test
rcr
std
mov
or
push
outsl
adc
mov
fcoms
movsb
loop
nop
cmp
arpl
xor
or
pop
cmpsl
adcl
dec
dec
sbb
inc
lock
lahf
mov
add
or
movsb
in
mov
xchg
cmp
xchg
push
mov
xor
sarl
pop
xchg
xor
out
add
shll
hlt
popf
mov
mov
je
sti
sbb
xor
mov
test
test
fmull
inc
sahf
and
push
fstpt
repz
daa
sbb
mov
and
push
in
sbb
mov
bound
mov
cwtl
in
rcr
push
or
flds
ds
or
xchg
test
xor
movsb
lret
sbb
add
das
punpcklwd
fisubs
adc
sub
mov
pop
decb
shlb
outsl
push
in
adc
int
and
cmp
push
inc
push
inc
ficomps
dec
fidivl
aaa
push
les
scas
push
icebp
std
mov
or
xchg
test
adc
mov
mov
in
push
vpslld
in
add
cli
fmul
xchg
sbb
es
xchg
les
call
jno
pop
cwtl
rcl
shl
pop
aad
or
xchg
test
xchg
fnstsw
push
cld
sub
mov
jno
or
hlt
pop
cltd
sbb
shll
pop
jg
insb
inc
pop
ret
mov
fisttpll
hlt
stc
mov
pushf
inc
int
hlt
ss
or
shlb
mov
xchg
dec
in
jmp
push
jne
pop
in
fmuls
in
ljmp
xor
cmpb
inc
popf
adc
rcll
call
in
push
popa
lea
and
and
cmc
fmull
adc
stos
mov
pop
add
data16
inc
cld
daa
mov
add
fwait
cmp
mov
dec
out
pop
gs
jmp
add
clc
xchg
leave
jo
mov
fildll
shr
jne
in
adc
fidivs
out
pusha
push
inc
lock
xor
mov
es
xor
into
push
mov
sub
leave
xor
ret
adc
mov
shrb
popf
cltd
cs
scas
std
popf
divb
fiaddl
shrb
cltd
inc
sbb
jg
clc
imul
mov
sbb
fcmovbe
cmpsb
adc
inc
test
imul
xor
mov
inc
int
mov
clc
scas
inc
add
fsubs
fs
mov
pop
cld
fisubl
sub
enter
mov
fsubr
stos
xor
cmp
cmp
ret
aam
adc
xchg
cmp
pop
mov
mov
add
dec
sub
or
cli
jecxz
mov
rclb
loop
mov
out
iret
neg
xlat
push
icebp
stc
out
sbb
lods
lcall
inc
pop
icebp
or
cs
and
divb
fisubrs
les
movsb
pop
pop
or
comiss
and
fidivrl
nop
dec
xor
rorb
sbb
xor
xor
aaa
push
sti
clc
mov
jne
gs
xchg
sbb
jno
in
nop
loopne
push
adc
stos
test
cmp
and
dec
xchg
pop
lods
out
dec
cmp
dec
into
cmp
jmp
or
fistpl
fwait
add
dec
cli
shr
xor
negb
les
mov
js
cmp
mov
test
jbe
mov
fimuls
ret
dec
sbb
push
sbb
insb
fisubs
test
je
les
mov
popf
popa
mov
fnsave
out
jle
gs
into
sbb
out
mov
ja
sti
rcll
les
ficoms
bound
imul
lret
sbbl
mov
or
lret
scas
imulb
fsubl
imul
lds
into
pop
adc
loope
fisubrl
dec
mov
lret
and
xchg
pop
lods
jmp
dec
clc
pop
ds
mov
push
ds
fidivrl
bound
popa
add
imul
loope
popf
lods
testb
adc
xor
pextrw
adc
enter
dec
ja
mov
loope
adc
insl
jge
out
inc
repz
jp
sub
xor
and
fcomps
sahf
stos
push
mov
mov
mulb
mov
sub
jp
lock
fimuls
dec
xchg
aas
xor
movsb
push
std
xchg
fsts
pop
pusha
or
push
or
test
lret
aam
mov
jo
jecxz
pop
aam
mov
inc
in
cmp
test
leave
xchg
cmpsl
jmp
sahf
pushf
push
adc
sub
repnz
sbb
mov
divl
icebp
push
loope
xchg
mov
loop
icebp
mov
aas
je
nop
ds
in
pop
outsb
inc
cs
hlt
dec
pop
inc
imul
icebp
cmp
movsb
jecxz
iret
mov
push
clc
cmp
dec
inc
pop
aam
mov
xor
push
mov
cli
cmp
mov
sbb
clc
mov
mov
fwait
adc
scas
cmp
loope
outsl
mov
icebp
lcall
shll
add
xchg
filds
mov
mov
ljmp
sarb
mov
push
mul
sub
call
call
dec
fiaddl
add
push
test
in
xchg
das
sub
popa
addb
pop
mov
pop
std
je
aaa
mov
movsb
inc
shrl
pop
mov
minps
mov
in
push
jne
inc
pop
mov
sahf
cmp
roll
and
jbe
cmp
mov
mov
xor
cmp
and
and
mov
sub
add
sbb
sub
xchg
jecxz
test
jecxz
ja
scas
cwtl
xchg
cmp
shll
lret
out
aam
or
loopne
movl
cwtl
sub
rdmsr
cld
test
mov
mov
sub
pop
popa
popf
hlt
loop
mov
in
pushf
bnd
loope
jecxz
cmp
push
ljmp
jecxz
aas
rorb
mov
loop
push
in
mov
movups
adc
xchg
movsl
into
sub
mov
and
es
sbb
mov
call
sbb
pop
lock
fcomi
je
xchg
repz
pusha
or
adc
xor
dec
jns
hlt
push
out
inc
mov
push
gs
std
cmpsb
call
pop
cmp
xor
hlt
ret
shll
push
jl
push
scas
mov
pop
gs
adc
adcl
lods
xchg
mov
or
repnz
subb
mov
pushf
cmc
imul
mov
and
das
mov
pop
lcall
ret
jl
mov
sub
das
cmc
icebp
daa
push
inc
and
add
stc
pop
push
lds
dec
push
leave
pop
mov
lods
test
pop
fsubrl
fcoms
lret
and
lods
outsb
icebp
sbb
mov
das
mov
mov
add
sub
cmp
jecxz
xlat
mov
sti
in
pop
repz
test
in
movsl
or
mov
inc
mov
add
xchg
arpl
xor
aaa
inc
adc
psubw
fsubr
xor
insl
jg
pushf
popf
mov
clc
dec
or
out
xchg
inc
fsubrl
xchg
fsts
jle
adc
das
push
xor
mov
xchg
pop
bnd
fadds
mov
mov
pop
cld
movsb
cmp
and
cli
jns
pop
out
xor
sbb
loope
repz
addr16
cld
mov
aas
repnz
sahf
fsubr
popf
fcmovu
test
cmp
mov
pusha
add
dec
lock
xchg
sub
lahf
cmp
dec
mov
test
orb
call
out
mov
xorb
std
xor
inc
add
and
sbb
gs
lds
jmp
jnp
jge
aad
aam
lcall
cld
cmp
mov
int3
rorb
pusha
xchg
popl
cmp
subb
inc
in
repnz
aas
cmp
jnp
mov
inc
and
jo
mov
mov
ja
sub
xchg
shr
aam
jle
push
xlat
mov
or
imul
inc
inc
in
xor
inc
cmpsb
orb
adc
cwtl
push
incl
xor
jle
outsb
sti
fildll
sbb
jmp
pop
imul
jle
cmpsl
outsl
notb
mov
lods
push
cmp
pop
push
das
into
xorl
dec
mov
pop
pop
xor
inc
jae
jo
data16
pop
mov
addl
sub
icebp
jnp
mov
rorb
gs
daa
jnp
lret
pop
push
dec
push
rcl
and
and
xchg
ds
jl
into
mov
mov
push
repnz
mov
jne
addr16
rorb
outsb
loope
xchg
push
shr
push
or
add
and
cmp
sbb
adcb
xchg
ret
std
or
jb
mov
mov
cmp
loopne
xchg
xchg
leave
mov
xchg
loopne
rolb
pop
inc
loopne
mov
bound
sub
xor
cld
es
in
adc
sub
aaa
insl
enter
repz
jp
idivb
xchg
gs
jno
and
push
pusha
adc
lahf
pop
jmp
xchg
in
imul
xchg
adc
push
add
adc
pop
adc
mov
mov
lahf
jle
push
sbb
out
mov
and
cmp
or
je
inc
pop
icebp
pusha
lret
lret
test
out
push
inc
sub
xor
cmp
jns
out
jmp
dec
push
lret
loope
cld
mov
and
dec
ljmp
shrb
ja
shlb
fdivr
inc
adc
push
dec
in
mov
enter
cmp
inc
mov
lcall
xor
dec
fwait
pop
mov
xchg
jb
jnp
iret
pusha
in
daa
push
lahf
cld
inc
cmp
push
jnp
adc
dec
push
testl
push
sbb
or
inc
lret
mov
inc
sbb
jge
insb
pop
das
push
and
adc
jecxz
sbb
xor
repz
and
call
push
mov
insb
rdtsc
cmpsl
enter
testl
gs
ret
into
out
lods
scas
mov
lods
sbb
repz
xor
fisttpll
call
or
int
and
stos
sbb
pop
incl
pushf
call
ret
mov
or
scas
pop
or
outsb
jl
stos
pushf
sahf
loop
mov
dec
int3
cmp
js
add
int
andl
dec
or
scas
rolb
pusha
sbb
into
out
lret
or
xor
cmpsb
sarb
xchg
lods
insl
pop
cmpsb
push
pop
and
mov
sub
cltd
inc
and
adc
pop
aas
dec
hlt
fldt
mov
scas
cmp
jecxz
test
and
fstl
mov
push
dec
lods
push
or
add
bound
xchg
cli
sbb
push
repnz
loopne
jg
jno
subl
lret
frstor
pop
sub
inc
mov
and
hlt
jge
add
jg
jno
mov
add
jl
or
xor
jne
jmp
sub
cmp
adc
jle
inc
pusha
lret
roll
adc
out
shl
pop
cmp
fsubr
ljmp
jbe
pop
pop
jmp
jg
outsb
xor
sbb
xchg
loop
fcmovbe
clc
pop
jbe
loope
xor
xor
cmpsl
push
mull
mov
sahf
add
es
mov
push
xchg
cltd
loopne
mov
push
aam
and
out
dec
push
insb
cmp
scas
movsb
cmp
push
ret
inc
dec
mov
mov
loope
mov
sbb
cmp
cmp
push
jle
leave
fisubrs
addr16
clc
xchg
arpl
rcll
xchg
rolb
xchg
ljmp
ret
rorb
sub
adc
adc
mov
add
insb
hlt
or
std
sahf
lret
test
sbb
inc
in
pop
and
sub
test
loope
in
pop
cmc
dec
cmp
fists
jmp
mov
je
xor
das
sbb
outsl
pop
inc
push
aaa
push
out
lods
or
lret
in
pop
adc
mov
mov
xchg
pop
adc
lods
in
sti
mov
push
je
xor
mov
es
xchg
aas
sbb
add
pop
mov
inc
and
and
loope
cmp
std
jnp
cs
cs
icebp
pop
into
daa
jmp
mov
ss
test
sbb
clc
push
xor
push
lods
cmp
and
inc
lcall
fdivs
fadd
test
jbe
and
cmp
idiv
xlat
jb
sahf
xchg
pop
or
or
pop
jecxz
lea
test
test
mov
andb
shrb
mov
iret
mov
push
mov
cmp
lods
push
inc
data16
and
outsl
imul
sub
push
pop
sbb
bound
fadds
data16
push
movsl
pop
and
sub
add
fwait
jbe
std
fistpl
dec
mov
dec
adc
or
int
dec
sbb
fstl
std
loope
aam
andl
adc
mov
out
bound
outsb
iret
mov
lods
sub
lret
push
sarl
jne
imul
divl
imul
push
loope
sbb
push
js
fistl
imul
inc
push
aaa
stos
and
jns
mov
or
mull
jecxz
push
cwtl
adc
pop
sub
das
outsb
mov
push
sbb
inc
movsl
adcb
int
jg
lret
gs
inc
dec
fstl
mov
jmp
shll
int
or
hlt
filds
daa
adc
push
and
lods
mov
sbb
test
icebp
push
cmp
xchg
jmp
cmpsb
jnp
mov
push
fdivs
ljmp
cltd
jns
adcl
cmpsl
sub
pop
jne
adc
iret
clc
mov
and
pushf
add
cmp
push
inc
out
push
inc
lock
xchg
fs
in
inc
xchg
xor
fucomip
mov
js
inc
pop
mov
cld
mov
ja
pop
dec
xchg
sahf
mov
jae
clc
in
dec
pop
adc
les
nop
push
push
cmp
loop
loop
jg
stc
outsl
lock
or
movsb
data16
ljmp
jo
push
movsl
mov
mov
call
jmp
push
popf
mov
pop
icebp
xchg
mov
jle
jle
data16
fs
in
xchg
adc
mov
jns
out
push
test
int3
call
pop
aas
sub
decl
loope
sub
lock
inc
insb
adc
movhlps
lret
call
inc
mov
inc
cmc
pop
add
repz
nop
scas
adc
xchg
pmulhw
mov
test
aas
scas
push
pop
test
fs
mov
push
cmp
neg
cltd
shll
int3
cli
inc
adc
xor
stc
insb
adc
mov
ficoms
xchg
rclb
pop
sarl
data16
pop
loop,pt
gs
je
popa
jg
mov
fdivl
adc
or
cmp
sbb
inc
fisttpl
push
or
push
das
jnp
add
or
or
jp
sbb
out
dec
jecxz
jge
daa
mov
stos
add
fstl
dec
cmpsl
je
cmp
sar
cmp
lret
mov
push
je
test
fistpl
xchg
mull
popa
fdivl
aam
or
sbbl
or
leave
addb
sub
mull
aad
mov
fadds
cmp
and
ret
sbb
push
or
sub
sahf
xor
add
popf
mov
ljmp
fiaddl
sbb
xchg
add
mov
pushl
js
sbb
mov
sbb
pop
in
data16
mov
push
and
push
stos
and
fcoml
or
mov
and
mov
pushf
cmpsl
in
fisubrs
lods
js
xor
scas
dec
daa
imul
repz
sbb
stos
out
sbb
mov
imul
xchg
fisttps
dec
mov
push
stc
aas
dec
xlat
lds
cs
push
cmp
outsl
aam
roll
out
test
add
jp
outsb
je
pop
insb
and
mov
cltd
jno
dec
xor
or
flds
push
addl
mov
lahf
jl
sbb
std
dec
mov
outsl
jno
stc
into
orl
sbb
push
sub
dec
outsb
ds
stos
leave
lea
lods
das
push
fnsetpm(287
dec
shl
cmpsb
dec
fst
or
sub
cmc
roll
les
adc
cmp
mov
sbb
sub
js
xorb
sub
mov
int
mov
int
es
nop
negb
loop
popa
xchg
or
test
gs
int
in
stos
mov
inc
cwtl
adc
hlt
push
ja
shrl
daa
jne
sarl
adc
sti
xor
mov
movmskps
or
adc
aaa
iret
pusha
shll
or
push
stos
jmp
sbb
mov
push
sub
lds
aam
or
daa
xor
insl
ja
imul
ret
jecxz
cli
leave
adc
add
xchg
stc
pop
repz
inc
pop
add
stos
add
or
lock
shl
stc
nop
jnp
xor
and
lret
adc
jmp
leave
popf
ds
push
out
gs
popa
mov
jo
out
int3
in
stos
mov
push
sub
cwtl
xchg
rolb
adc
push
jecxz
scas
mov
rcll
sahf
xor
imul
pop
sbb
mov
dec
add
sbb
jns
mov
mov
sbb
push
pop
jge
cmp
test
in
sub
pop
stos
push
inc
sbb
pop
inc
loop
fcoms
pop
mov
sub
loope
inc
or
testb
xor
push
fidivl
outsl
dec
lock
sbb
pushf
lret
push
dec
cmpb
cld
hlt
and
fwait
gs
out
in
and
cltd
jmp
rcll
jb
das
lahf
push
push
cmp
inc
and
mov
push
popa
and
dec
pop
and
push
push
scas
sub
cmpsb
dec
xorl
sahf
mov
popa
daa
inc
roll
std
add
aaa
cli
rorb
cmp
shlb
and
and
ss
in
push
hlt
movb
data16
loop
dec
sub
insb
lea
das
jge
je
out
and
sbb
test
jno
xor
or
adc
jnp
loope
test
push
mov
inc
jo
adc
in
sbb
ljmp
es
xchg
mov
lods
out
inc
punpcklbw
mov
ret
adcl
movsl
sub
popf
lahf
or
or
mov
xchg
or
push
aad
or
aam
arpl
lds
aad
pop
mov
sub
popf
xchg
and
mov
xor
sub
and
hlt
adc
sti
inc
jnp
sbb
inc
scas
hlt
out
cmp
fmull
fs
push
pushf
ja
xchg
sub
jbe
fldenv
push
loope
out
insb
sbb
scas
inc
out
int3
int3
jns
mov
les
and
adc
add
repz
inc
jp
and
ret
xchg
push
pop
pop
push
pop
in
pop
sbb
test
xlat
pop
and
push
scas
sbb
std
cmp
loope
lret
fidivl
adc
jae
adc
xchg
aaa
popf
jne
inc
shrl
pop
out
icebp
data16
dec
or
jmp
movsl
mov
stos
repnz
loopne
mov
les
add
repz
mov
pop
int
inc
lcall
loopne
jo
xchg
add
repnz
pop
std
fcomip
lcall
mov
dec
xchg
mov
out
mov
jl
xchg
cmc
shll
cmc
mov
arpl
jne
xchg
pop
cmc
or
sbb
loopne
outsb
adc
dec
sub
js
popa
out
xor
or
mov
or
inc
test
in
inc
xchg
test
push
pop
jecxz
lcall
jns
xor
inc
sbb
sub
adc
roll
and
inc
cmc
fidivrl
adc
xor
mov
daa
into
dec
pop
mov
cmc
mov
add
fldenv
cmpsb
cmp
fstpt
pop
aad
sahf
out
push
or
mov
or
sub
shll
aad
fistps
sahf
pop
in
stos
or
int3
cmp
dec
hlt
cmp
sahf
out
outsl
cli
out
sar
adc
adc
movsl
in
mov
xchg
pusha
xchg
scas
adc
dec
add
sub
in
pop
pop
loopne
adc
sbb
pop
jnp
aas
imul
fs
dec
repz
push
notl
sbb
out
xor
fsubl
pop
sar
hlt
mul
mov
hlt
xor
repnz
mov
ljmp
dec
mov
jecxz
mov
adcb
ss
mov
add
int
loop
sbb
rcll
daa
add
es
cli
xchg
push
mov
aas
std
rorl
pminub
xor
es
aam
inc
adc
add
js
adc
lock
dec
enter
or
mov
popa
xor
push
inc
cmpsl
rorl
pop
test
cmp
sub
test
mov
loopne
xchg
or
adc
fldt
cmpl
pop
inc
aas
xor
adc
subb
push
push
inc
ss
xchg
xchg
inc
inc
test
in
and
or
mov
add
adc
sti
in
or
sbb
ss
add
push
jg
mov
je
int3
enter
mov
fdivs
sbb
aad
push
mov
arpl
stos
mov
jmp
sbb
inc
shl
bnd
push
scas
cmp
inc
test
and
xchg
je
push
div
mov
inc
fprem1
aad
imul
add
rclb
ret
mov
stc
out
mov
aad
mov
mov
jns
sbb
lods
add
or
cmpsl
inc
sbb
das
pop
cs
clc
mov
insb
cmp
cmp
ss
push
jbe
adc
xchg
in
mov
cwtl
jo
fcom
jmp
pop
fnstsw
imull
cmp
mov
push
js
scas
mov
loopnew
xor
xor
pop
jno
pop
shl
insb
addl
mov
mov
js
negb
inc
push
pop
mov
shr
cmc
or
rep
cld
aaa
pop
cmp
outsb
out
cld
data16
outsb
shlb
in
adc
xlat
pop
into
ljmp
pop
inc
movsb
dec
jae
mov
in
sbb
adcl
incb
push
push
cmp
sub
jp
test
xchg
inc
aaa
jb
inc
aaa
fs
imul
mov
cmpsb
push
popa
inc
orb
nop
mov
dec
pusha
cmp
and
fadds
adc
ljmp
or
pop
sahf
cmove
inc
xor
pop
fisttpll
nop
pop
insb
jl
xchg
out
gs
dec
sub
ljmp
inc
sbb
xor
daa
fstpt
ja
adc
push
or
into
insb
fidivl
mov
cmp
lea
fistl
stc
xchg
cmp
sbb
les
call
mov
bound
sub
jno
aam
jbe
add
sub
das
jne
aaa
add
cld
mov
jbe
and
adc
mov
mov
pop
jne
shrb
out
sub
inc
ja
fdivrp
add
bound
push
test
cwtl
pop
das
mov
lcall
xor
sbb
jecxz
mov
daa
subb
loope
shrb
mov
cmp
pop
add
sbb
aam
js
add
gs
test
adc
mov
flds
inc
fisubl
nop
fldcw
cmpsb
jne
adc
mov
or
les
hlt
sbb
je
adc
mov
xchg
jge
adc
mov
scas
into
aam
and
dec
jbe
loopne
or
fisttps
sub
xlat
cmp
push
xlat
sub
enter
ljmp
iret
xchg
push
and
pop
ljmp
pop
js
arpl
data16
or
sarl
imul
cli
sub
int3
negl
mov
pop
ja
aam
xchg
lret
xchg
sti
push
pusha
int3
or
inc
cld
xchg
bound
pop
sbb
sbbb
ja
lods
pop
and
inc
adc
imul
xor
test
push
jmp
mov
sar
sbb
sub
ret
jmp
decl
or
ficomps
add
pushf
out
loope
jbe
xchg
inc
dec
mov
in
adc
push
testb
jae
add
pushf
movd
repnz
dec
mov
pusha
int
jp
xor
or
rorl
pop
pop
icebp
jge
ret
loopne
enter
and
shr
lods
mov
or
add
push
cmp
dec
pop
inc
rcr
loope
lods
and
rsqrtps
das
lds
xchg
push
int
sti
mov
push
or
sarl
lret
pop
popf
push
cli
fcmovne
movsb
loop
popa
aam
cmpsb
or
mov
outsl
mov
imul
push
jo
mov
pop
arpl
and
lods
push
mov
call
leave
adc
sbb
mov
roll
movsb
add
clc
cmp
add
jbe
mov
jo
mov
incb
mov
outsb
xor
daa
mov
inc
jns
pop
adc
pushf
cmp
test
clc
adc
testl
cli
jmp
pop
or
mov
stc
dec
pusha
dec
in
aas
cli
aam
ja
scas
cmp
test
jo
jo
sub
cmp
xorl
imull
sbbl
nop
jnp
push
inc
ja
fsts
jb
xchg
fsubrp
and
out
and
mov
sbb
addb
push
push
sarl
jns
xchg
or
xchg
sahf
gs
mov
call
jmp
aaa
aam
aaa
leave
sbb
pusha
shl
cld
xor
ja
xchg
mov
dec
inc
mov
enter
xor
sti
outsl
xor
aas
pop
call
mov
mov
pop
testb
fucomip
or
in
cmc
ffree
adc
fiaddl
inc
test
test
lea
or
pop
scas
sbb
push
sar
add
in
mov
hlt
aam
aam
popa
outsl
cmp
adc
jge
fldl
pusha
js
add
pusha
mov
repz
out
outsb
push
add
adc
push
push
inc
xor
xor
adc
sub
pop
in
cwtl
ret
adc
int3
dec
testl
xor
mov
enter
insl
inc
xchg
pop
iret
dec
test
cmp
cmp
idivb
and
int3
jb
clc
lcall
mov
sbb
test
push
inc
repnz
das
setg
push
add
je
mov
push
inc
xor
mov
inc
adc
insb
fwait
push
out
jecxz
cmpsb
pushf
jp
gs
gs
fnstsw
dec
pop
loop
mov
push
shl
out
xor
xchg
xlat
mul
fldt
push
add
orl
cmp
mov
loopne
mov
xor
imul
lcall
mov
popf
aad
or
call
je
mov
std
aas
loopne
lret
sub
mov
jo
mov
es
out
dec
mov
pusha
mov
fadd
int
test
adc
pop
and
adc
das
lret
popf
mov
lea
fists
sahf
xchg
pop
fadd
jg
sub
mov
mov
cmp
add
and
cs
push
adc
xchg
lret
push
outsb
xchg
cmc
faddl
and
push
mov
sar
pop
ljmp
cmc
dec
cmp
pop
jmp
add
pop
ss
mov
jo
insb
jp
cld
enter
mov
adc
incb
sub
push
cld
in
jbe
pushl
push
clc
mov
dec
fldl
push
js
add
es
es
sti
orl
lret
or
pop
dec
or
or
rorb
in
lds
imul
pop
and
addr16
imull
xlat
loopne
push
jecxz
iret
je
push
xchg
mov
scas
jl
ret
pop
inc
outsl
outsl
pop
sbb
loop
sbb
mov
adc
inc
out
and
hlt
shl
aaa
xchg
cmp
call
pushl
jle
notb
push
lods
add
ss
xchg
adc
stos
aam
jl
lock
fstpl
aas
adc
out
mov
fdivs
int
je
inc
ja
xor
mov
inc
xchg
fidivrl
insl
fsubr
jno
fisubrs
push
and
das
pop
cwtl
rcrb
insl
push
lret
mov
jno
outsl
daa
sti
mov
imul
nop
jg
insl
je
xor
mov
sarw
popa
jl
ret
shl
jns
pusha
das
or
in
psubsw
or
ficoml
gs
sarl
xor
fdivp
pusha
push
fisubs
sahf
iret
in
jne
clc
jnp
xchg
mov
sbb
xchg
jecxz
push
js
cwtl
xchg
ljmp
jnp
xchg
test
xchg
ds
orl
push
sbb
add
int
mov
fsubp
pop
pop
or
fcmovnb
cltd
sub
icebp
sub
test
lock
adc
push
repnz
jge
mov
and
sarb
sbb
rcll
pop
xor
in
std
push
push
mov
lds
inc
rorb
into
cli
lcall
fidivrl
inc
sub
inc
loopne
adc
clc
pop
inc
fs
dec
insl
je
pop
mov
rorb
fucom
mov
inc
aam
aam
pop
xchg
xlat
in
test
dec
mov
ficomps
xor
mov
popf
cld
add
rcl
sti
movsb
push
sub
fmul
out
jo
pop
mov
js
adc
aam
xorb
add
fbld
jnp
jnp
mov
lea
jecxz
add
in
mov
outsl
push
mov
add
fdivrl
xchg
or
fstps
in
push
aad
pop
call
imul
mov
clc
repnz
pop
jne
cld
jmp
lods
xchg
das
repz
jmp
pop
in
fstpl
call
inc
scas
mov
jg
push
pushf
and
inc
rcll
or
add
out
les
xor
clc
mov
cld
fwait
lahf
iret
test
int3
jo
push
adc
push
mov
push
or
aad
ret
jge
adc
cltd
shlb
and
cs
shrl
pop
sbb
int
out
sbb
std
cmp
pop
mov
adcl
and
clc
dec
cmp
xor
sub
add
out
int3
fidivl
repz
cmp
insb
hlt
pop
add
in
cmp
ud2
std
iret
pop
addr16
mov
fisubrs
xchg
gs
enter
and
inc
shrl
pop
mov
les
cld
lahf
adc
dec
shr
das
jmp
int3
jb
fwait
push
bound
xor
xor
inc
adc
icebp
das
test
roll
lret
mov
push
test
lods
out
fdivs
adc
xchg
add
fistpll
jnp
jo
inc
sub
fwait
jnp
jle
repnz
aam
bound
dec
scas
lds
aas
jne
and
inc
jp
aaa
xchg
lcall
test
dec
jmp
cmp
ret
add
jno
cmp
imull
test
dec
in
adc
pop
push
xor
mov
xchg
push
lcall
shr
sbb
push
xchg
lods
lock
or
or
dec
or
xchg
add
push
cmp
cmpsb
push
jno
jmp
jg
idivl
out
test
loopne
jecxz
fsubr
cltd
mov
adc
call
syscall
xor
pop
mov
insl
test
daa
mov
add
ror
sahf
imul
or
in
jbe
ret
in
jns
outsl
insb
push
clc
outsb
add
out
mov
mov
mulb
mov
lea
loope
mov
fistpl
cmp
mov
jnp
das
sbb
loope
and
mov
mov
into
int
xlat
aam
push
inc
adc
lahf
popf
test
sub
or
xorl
xchg
clc
mov
sbb
and
push
sbbl
in
int3
sub
icebp
xor
into
cmp
nop
xlat
adc
jns
mov
test
push
mov
xlat
add
mov
mov
out
push
ficoml
push
add
ret
pop
out
dec
cmp
les
sub
bswap
rcl
jo
push
mov
lods
cld
push
lods
jl
scas
imul
sub
cmp
cld
fwait
jmp
mov
pusha
push
push
sahf
mov
aam
mov
jl
fdiv
cmp
fwait
jbe
push
adc
cmp
and
mov
outsl
adc
xlat
mov
mov
scas
cwtl
cs
xor
pop
sub
adc
pop
mov
lahf
push
loop
add
aas
dec
ja
mov
adc
ljmp
cmp
mov
arpl
idivb
xor
push
cmp
cmp
fadd
jo
das
aaa
dec
sahf
add
xchg
mov
fsubs
sbb
and
or
std
repnz
je
add
mov
mov
add
push
fwait
mov
jl
inc
out
adc
sbb
or
pop
add
mov
adc
in
adc
xchg
ljmp
dec
std
loopne
jnp
inc
pop
popa
aam
mov
and
daa
push
ficoms
push
dec
fwait
jmp
imul
push
push
mov
inc
shlb
dec
fcoms
sti
cwtl
or
jo
sbb
cltd
test
das
cmpsl
mov
xor
mov
add
fldl
pop
ss
sbb
xor
mov
xchg
cmp
xlat
aad
cld
lret
mov
imul
shl
pop
sub
lcall
jbe
xor
aam
cld
in
repnz
dec
lcall
xor
out
hlt
daa
sbb
stos
xor
lahf
cmp
lret
jo
pop
in
pop
mov
inc
out
sti
mov
repz
inc
fists
imul
xchg
je
das
push
call
dec
in
scas
das
xchg
cmc
or
jnp
inc
int3
ljmp
inc
jns
movl
add
popa
or
cmc
loope
xor
xor
fmuls
jge
inc
mov
pop
adc
mov
aam
xor
mov
mov
pop
sub
pop
sti
mov
outsl
dec
decb
add
ja
inc
sub
mov
push
into
add
sahf
in
pop
jp
adc
int3
insl
xor
shll
pop
mov
pop
les
icebp
mov
imul
sbb
xor
dec
repnz
inc
call
jp
adc
js
xchg
inc
or
pop
cmp
repz
sub
loopne
shll
sbb
xchg
push
jne
test
ja
jecxz
js
mov
inc
mov
jmp
outsb
and
stos
and
or
pop
lret
sarl
mov
mov
sti
sub
xchg
mov
fsubrs
cmp
jo
jae
mov
test
idivl
pop
jp
test
push
pop
cmpsl
mov
rol
shll
nop
pop
xchg
cld
pop
push
pop
mov
dec
cmp
mov
out
sub
enter
insb
or
outsb
mov
pop
cli
xor
clc
or
rorb
movsb
push
xchg
fisttps
mov
outsb
lock
add
push
sti
ret
xor
pop
jnp
push
mov
fstpl
jne
test
pop
mov
cmp
jns
sub
jo
mov
fst
fsubp
push
sub
mov
frstpm(287
mov
pop
arpl
dec
and
ss
push
js
mov
inc
dec
mov
mov
in
je
in
ljmp
mov
xor
pop
test
sbb
mov
in
mov
inc
lret
pop
and
inc
scas
mov
sbb
icebp
mov
push
outsl
rolb
lret
mov
pop
leave
inc
ds
add
adc
sbb
int
push
dec
add
xchg
xchg
and
aaa
adc
push
and
sub
mov
cmp
pop
out
lret
lret
stos
out
fistpl
mov
sbb
cmc
repnz
subl
les
rcrb
cmpsb
js
ss
test
sbb
inc
inc
mov
imul
pushf
loopne
jns
inc
in
mov
das
push
xor
push
icebp
scas
xchg
xchg
push
mov
aam
push
fsubrl
fsts
mov
mov
sbb
pushf
pop
pop
or
ret
and
mov
or
jb
fisubl
xor
popf
es
fstpl
push
mov
sti
mov
es
pusha
stos
rorb
cld
mov
fs
test
stos
mov
jns
pop
inc
fstl
cmp
or
repz
ljmp
call
insl
movb
mov
add
loope
imul
stc
ja
cwtl
adc
adc
mov
pop
add
mov
dec
inc
or
ficompl
movsb
add
cltd
into
jnp,pt
add
iret
dec
jmp
push
dec
xor
test
cmp
stos
dec
lret
cltd
push
pushf
pop
lock
adc
jb
mov
push
cld
mov
ja
adc
xor
stos
int
dec
jecxz
sub
popf
mov
ss
cmpl
adc
clc
jnp
mov
fdivrl
adc
lea
daa
arpl
call
and
aas
xor
clc
dec
dec
test
pop
push
sbb
jno
jne
jl
inc
cmp
cmp
in
or
sub
fisttpll
push
cmpsl
aam
cmp
xor
push
xor
dec
sub
inc
push
mov
hlt
xchg
sbb
stos
xor
inc
ret
sub
stc
cs
aad
xchg
ss
shrl
out
xor
sbb
mov
fisttpl
adcl
pusha
sub
xchg
gs
and
dec
movb
pop
mov
lret
jno
xchg
push
daa
lahf
pop
dec
das
dec
loop
aad
filds
fstpl
std
insl
push
fldl
out
or
xchg
cmp
inc
cmp
leave
fidivl
call
sub
cmp
lods
push
adc
enter
notl
jnp
std
jmp
fnstenv
sub
inc
popf
fnstcw
fidivrl
push
xchg
bnd
push
add
xor
cmp
and
std
inc
int
fwait
sbb
rcll
bound
mov
and
jp
xor
sbb
shrl
mov
stos
xor
dec
adc
in
lcall
pop
lock
push
lock
out
add
push
aam
sbb
scas
mov
or
repz
jg
xchg
mov
push
dec
xor
bound
not
pop
int3
fstp
arpl
cmp
push
mov
mov
pop
cmp
shl
jecxz
cmc
fistps
es
push
scas
movsb
fisttps
rcll
pushf
and
mov
mov
lea
inc
cmp
push
cmp
in
mov
mov
inc
stc
and
mov
ret
in
sbb
enter
pop
std
repnz
aaa
fldl
sbb
mov
dec
daa
xchg
sti
sub
pushf
int
movb
pop
cmp
mov
and
sti
cld
xchg
sbb
bound
and
clc
add
punpckldq
into
lods
push
in
pop
dec
sbbb
test
mov
lret
js
dec
sbb
inc
cld
iret
shlb
loop
ljmp
hlt
mov
stos
rclb
add
dec
ret
or
and
adc
push
inc
mull
adc
sub
in
lods
sbb
movsb
into
je
sub
xchg
sub
and
jmp
inc
enter
cwtl
jo
adc
dec
push
inc
push
adc
insb
push
cmc
lcall
and
sbb
and
jne
loope
cli
fstpl
sti
imul
cmp
mov
les
int3
push
ss
ja
push
mull
outsb
cmp
xor
jmp
clc
sbb
repnz
lcall
inc
ja
cmpsb
jb
stc
mov
sbb
dec
push
clc
aad
iret
hlt
sub
loop
jmp
cmp
int3
clc
lods
ss
int3
cld
inc
call
test
ret
cmp
inc
outsl
adc
mov
shlb
cmpsb
adc
mov
decb
out
mov
pop
xchg
neg
aam
in
cli
loope
lods
ret
imull
addr16
mov
ss
xchg
cmp
aaa
daa
pop
dec
lea
and
lcall
add
push
lock
push
pop
movsb
sbb
cld
dec
fisubrs
cld
cmp
push
add
pusha
cmc
cltd
or
mov
cmp
fs
sbb
sub
mov
cmp
jns
mov
std
sti
jg
aaa
pop
mov
adc
nop
ud0
loopne
sbb
pop
pusha
outsb
mov
xor
lahf
add
sbb
addb
in
call
in
loop
inc
dec
pop
cld
std
insl
xchg
pop
xchg
push
xor
sbb
addr16
xorb
mov
lods
pop
inc
mov
cs
inc
into
je
hlt
and
xchg
xor
bound
arpl
add
mov
fidivl
push
jbe
push
or
fwait
out
xor
daa
push
in
pop
mov
ret
scas
inc
out
std
aad
les
out
add
add
mov
inc
cmp
enter
aad
test
mov
int
shll
stos
mov
jns
jle
gs
adc
dec
lock
push
fsub
daa
dec
fidivrl
rep
movsb
jo
xor
arpl
fimull
or
jmp
add
mov
push
cmp
adc
cmp
push
div
jmp
sbb
jg
sti
loope
push
mov
loopne
mov
adc
sub
xor
cmp
pop
push
icebp
ss
imul
ret
stos
ret
pop
test
stos
and
push
cmp
mov
adc
fisubs
or
jg
pop
std
shl
loopne
and
lahf
fldcw
jae
mov
mov
cmp
scas
adc
test
push
cmc
fcoms
addr16
push
dec
divb
iret
jg
lret
jg
mov
andb
jl
iret
bound
xlat
inc
and
in
repnz
fcomi
push
sahf
sub
cmp
xchg
push
mov
insl
sbb
dec
test
out
loope
sub
jecxz
std
push
andb
test
or
mov
mov
pusha
and
call
rcrb
je
loop
imulb
jb
cmc
repnz
xor
fadd
out
xchg
fisttpl
or
xchg
rcrl
js
fbld
inc
hlt
adc
mov
pop
jno
imul
xlat
sarb
lret
ljmp
jnp
pop
ds
xlat
out
or
mov
push
mov
outsb
mov
lods
fdivs
popf
adcb
ret
mov
pushl
and
pop
jg
in
loopne
inc
cld
push
pop
xchg
or
aam
fcomps
insb
dec
jno
and
lret
icebp
cmp
sbb
push
push
shrb
dec
mov
jmp
rcll
pop
sbb
or
insl
call
outsb
jbe
xchg
loop
test
sbb
jecxz
ja
jl
xor
mov
not
loop
cld
shl
into
mov
enter
int
or
xlat
sbb
push
adc
dec
stos
inc
jbe
stos
pop
and
pop
xchg
mov
dec
dec
or
add
xchg
out
imul
jmp
imul
push
ja
bound
adc
pop
clc
xor
test
cmp
jecxz
bound
inc
push
xor
div
jb
dec
addr16
loope
cmp
jne
aam
jle
or
into
sti
lods
or
mov
xor
pop
out
pop
jbe
popa
pop
push
test
into
cmp
aas
frstor
loop
dec
jno
mov
mov
jb
in
dec
inc
mov
adc
test
je
xor
lret
insb
dec
add
mov
ss
xchg
aad
push
pop
sub
daa
push
into
sub
pop
mov
es
mov
lods
bound
inc
or
fdiv
sub
popf
push
hlt
cs
dec
test
add
hlt
popf
fadd
outsl
enter
pushf
sahf
push
mov
xor
fisttps
sub
mov
inc
mov
and
adc
icebp
je
inc
add
lcall
fistps
dec
lods
mov
cmpsl
mov
xor
paddusb
rorb
int3
inc
lret
out
aaa
imul
iret
xchg
loop
xlat
xchg
into
lds
sbb
fcmovnu
adc
jbe
into
test
lods
ss
ret
xor
pop
idivl
shll
mov
ja
add
into
lcall
stos
jno
mov
mov
sbb
cmp
sbb
sti
push
pop
aaa
bound
add
aad
adc
mov
xchg
into
mov
pusha
loop
mov
mov
in
mov
dec
mov
adc
sbb
xchg
out
dec
inc
sti
fidivrl
rclb
push
psllq
xor
out
or
xchg
fdivr
jecxz
sub
loop
test
loopne
pop
iret
pop
mov
cld
push
adc
fistps
fmuls
and
sbb
ljmp
es
insb
mov
xchg
mov
push
or
push
xchg
mov
int
lock
stos
dec
aas
inc
adc
mov
xor
lret
js
adc
sti
adc
aam
fwait
idivb
push
cltd
cmpl
mov
and
mov
push
imul
inc
int3
cs
aad
das
sbb
mov
pop
cs
call
mov
ja
mov
mov
jne
jg
les
enter
inc
mov
sub
leave
fmul
mov
daa
ret
mov
or
popf
sbb
cmp
pop
add
xchg
mov
mov
mov
jb
cltd
int
addr16
mov
repz
cs
cmc
jo
decb
mov
fisttpl
aam
test
push
mov
adc
ror
mov
push
negb
clc
lcall
outsl
outsl
movsb
jo
mov
ja
mov
je
icebp
pop
sbb
sbb
in
mov
loop
xlat
loop
or
lods
das
pop
cltd
xchg
sub
int3
int
rolb
test
inc
push
popa
dec
hlt
mov
jl
imul
adc
fsts
loope
pop
or
hlt
inc
sub
cmpb
xor
arpl
push
movsb
ss
cmc
dec
iret
roll
cmp
jo
mov
inc
push
aam
mov
jne
mov
gs
inc
jae
inc
add
xchg
jne
sub
dec
cmpsb
insl
add
outsl
mov
pop
xor
dec
mov
xchg
mov
cld
sub
push
push
sub
out
nop
dec
aad
popa
rcrl
jbe
sub
and
daa
daa
ss
aas
sbb
cld
std
lods
mov
inc
xor
ljmp
clc
inc
cli
inc
insl
cmpsb
pop
mov
inc
pushf
test
jnp
cli
aas
ja
mov
xchg
mov
add
xor
out
rorb
xor
jnp
rcrl
clc
jge
mov
mov
filds
pop
loop
clc
sbb
repz
push
pop
clc
cmp
lds
int
test
and
aad
out
shll
insb
adc
or
negb
ret
sahf
stc
repz
int3
and
or
fistps
subl
jge
ret
dec
push
push
fistpl
pop
ret
outsl
dec
dec
cmp
das
cmp
sahf
std
test
or
cmp
pusha
les
xor
cs
rorl
imul
xchg
test
mov
mov
insb
addr16
loop
pop
fwait
mov
or
cli
fimull
notb
int3
mov
repz
icebp
aas
push
aam
inc
mov
sbb
fucomi
je
push
xlat
mov
cmp
lock
push
clc
test
sub
ss
lods
jge
sub
xor
fisubrs
das
pop
xor
and
push
in
out
sbb
sbb
pop
mov
ror
in
jmp
fdivs
cmp
fst
fmull
xchg
push
decl
lahf
out
das
lods
pop
push
stos
clc
faddl
ret
xor
cs
and
test
jns
mov
adc
mov
add
push
sti
sub
out
and
jmp
pop
in
iret
mov
and
aad
mov
push
popa
in
jb
mov
lock
out
enter
pusha
bound
mov
scas
aad
fistpll
in
add
popf
push
ret
cmpsb
xchg
push
out
mov
pushf
sarb
cld
mov
movsb
cltd
push
push
pop
sbb
jmp
in
ds
out
mov
fwait
cmp
aam
sbb
addr16
pop
out
and
jnp
or
jp
pop
dec
sub
leave
cltd
push
enter
mov
mov
mov
int
pop
jnp
lea
insl
ret
jcxz
mov
aas
gs
push
cmc
adc
or
fldenv
sbb
cltd
test
pusha
mov
jle
fcompl
fwait
aam
mov
cld
cltd
mov
sti
addl
hlt
int
fwait
daa
xchg
out
jmp
lock
sub
pop
xchg
stos
mov
jge
popa
and
sub
mov
or
mov
fists
mov
push
xor
push
xchg
mov
and
sti
adc
lods
inc
mov
or
neg
push
leave
sti
inc
bound
adc
mov
adc
pusha
jle
daa
mov
mov
fdivl
pop
cmpsb
and
clc
aam
mov
ja
mov
out
mov
les
push
dec
fidivrs
mov
pop
ds
jo
jne
cmpsb
xor
mov
loope
notl
add
jae
xchg
aas
leave
repz
lea
mov
scas
cmp
gs
int3
mov
jne
popl
je
mov
pop
out
inc
in
mov
lret
pop
clc
adc
fucomip
js
sub
pop
out
ficompl
lds
xchg
loopne
repnz
xchg
ret
fcmovnu
sub
lods
jns
aam
jecxz
lcall
std
mov
push
or
mov
mov
insb
popa
or
repz
push
movsb
mov
push
mov
sub
out
or
cmp
std
fnstenv
adc
mov
daa
icebp
jbe
fisttpl
adc
repz
fs
sub
loope
adc
push
mov
cmp
mov
movsl
ljmp
mov
insb
insb
xchg
or
imul
fimull
adc
mov
jecxz
cmp
dec
popa
xlat
popf
mov
adc
add
lock
xchg
adc
jge
and
cs
mov
or
pop
mov
mov
pop
sbb
les
xchg
inc
mov
and
dec
aas
xor
xlat
in
pushl
push
pop
or
pushf
jp
xchg
testl
xchg
sbb
testl
xchg
adc
fcmovnbe
in
aad
leave
sbb
repnz
adc
adc
shll
test
aad
or
sti
sbb
scas
adc
pop
fs
pop
sti
shlb
test
adc
add
inc
and
decl
stc
xor
sbb
inc
popl
cmp
popf
mov
push
inc
or
mov
cld
aam
popl
add
adc
icebp
mov
ss
jge
test
loop
mov
icebp
push
in
jnp
sahf
cmp
test
push
mov
add
lret
jp
jne
and
stos
je
sahf
enter
movsb
rclb
lcall
divb
jg
cmp
shll
orb
add
mov
mov
mov
arpl
xchg
sarb
mov
shll
in
mov
mov
imul
fstpt
fmul
clc
push
lret
mov
cs
addr16
rcrb
fcomps
insl
mov
rcl
push
xor
int
push
and
pop
push
sub
mov
mov
das
cmc
jp
jnp
mov
or
sahf
test
rcrb
pop
add
or
push
and
dec
jb
and
inc
mov
pop
sbb
pop
test
mov
pop
mov
and
sbb
inc
cmc
fcmovb
rorb
mov
fists
fs
cmp
aaa
add
out
add
jbe
rcrb
and
cltd
arpl
lcall
sti
adc
dec
pop
push
xor
push
data16
or
push
and
sar
call
add
inc
mov
aas
xor
scas
pusha
adc
lret
push
adc
sbb
out
cmp
shll
xlat
add
repnz
shrl
test
jg
cmc
jg
in
push
shl
mov
arpl
xor
shlb
push
in
adc
stos
lret
or
sbb
aam
pop
xchg
inc
xchg
in
aaa
xor
xor
dec
je
jne
cvtdq2ps
loopne
dec
or
mov
adc
aas
cmp
clc
push
pop
jg
sub
mov
aas
sub
adc
ret
daa
outsb
cmpsl
pop
daa
mov
inc
enter
cmc
mov
sbb
push
cmp
test
lcall
fisubrs
jmp
mov
shl
jl
jge
in
lock
sar
int
cmp
sti
repz
fs
std
fcoml
repnz
outsb
ret
cmc
jne
rcll
shlb
push
mov
mov
mov
pop
push
idivb
and
push
imul
mov
pop
mov
aaa
test
std
fs
cwtl
mov
push
sbb
mov
mov
pop
xor
adc
inc
fincstp
shrb
cmp
in
btc
dec
push
sbb
push
enter
push
inc
das
addr16
pushf
out
cli
hlt
pop
jle
iret
xchg
ljmp
hlt
in
push
inc
incb
nop
das
fldt
xchg
rolb
sbb
les
fucomp
or
push
aaa
pop
cmp
clc
xchg
xlat
dec
xor
mov
pop
mov
and
adc
cmp
les
fnstsw
int
push
xor
dec
xchg
out
int
into
out
adc
mov
sti
add
iret
cld
pop
xor
icebp
cli
mov
neg
dec
cmp
mov
in
leave
lret
enter
mov
repz
and
divb
das
xchg
shll
mov
addr16
mov
push
adc
pop
in
cmc
test
out
cmp
dec
lea
or
iret
loopne
cmp
ret
xchg
sub
imul
add
jg
repnz
testl
adc
nop
cltd
sub
mov
daa
clc
lods
inc
ret
pusha
testl
rol
or
mull
shll
cmp
test
pop
push
pop
stc
mov
std
add
leave
lock
cmc
clc
ficoml
cli
cmc
scas
fsubp
or
push
jmp
mov
fcoms
cmp
fildl
enter
lods
out
cmp
in
fadds
fldt
sub
sbb
dec
loope
sbb
mov
clc
or
in
xchg
sbb
cli
xor
cmove
test
mov
mov
mov
mov
inc
fucom
insb
sub
inc
ret
mov
xor
and
push
sub
dec
imul
or
fisubrl
imul
lcall
xrelease
dec
adc
cli
repz
in
lea
adc
pop
in
jo
mov
mov
and
sbb
je
out
xchg
and
aam
negl
sti
sbb
call
or
add
xlat
xchg
xor
fs
std
mov
test
pop
or
or
mov
in
jne
mov
mov
xchg
add
adc
xchg
adc
imul
call
ficoml
and
icebp
sbb
test
or
imul
insl
pop
pop
and
in
jo
rcll
dec
ljmp
fdivrl
into
das
mov
jae
sbb
push
in
xchg
xor
rol
jl
jmp
sbb
outsl
mov
sti
scas
enter
imul
pop
out
jb
jp
mov
and
sbb
sub
rcl
out
cs
or
mov
xchg
addl
nop
and
xor
jnp
cmp
or
nop
adc
lcall
leave
adc
lret
adc
mov
adc
aaa
sti
sbb
add
pusha
repnz
fwait
and
inc
sbb
repz
sub
and
mov
popf
xor
inc
mov
pop
fsubrs
mov
idiv
pop
jl
dec
ficompl
pop
fnstsw
int3
jb
sbb
inc
fsubl
push
pop
pop
sar
jl
test
xchg
cmp
int
stos
jno
mov
lds
adc
lock
iret
mov
jbe
or
les
adc
or
xor
scas
aam
outsb
pop
int
push
or
inc
jmp
pop
adc
mov
inc
lock
xchg
sub
shrb
test
insl
sbb
fnstcw
fidivs
pop
sub
out
jmp
adc
fildll
jnp
test
cmp
adc
daa
hlt
push
lds
sub
or
mov
dec
addb
out
mov
out
aad
ds
mov
decl
push
sub
mov
xor
inc
mov
mov
push
push
and
fnsave
fucomip
pop
mov
cli
lock
jl
decl
pop
popa
mov
push
cld
sub
in
xchg
xchg
iret
movb
aam
das
aam
fs
imul
mov
outsl
pop
shrl
test
mov
xchg
jl
test
fistps
hlt
lods
add
pop
loop
dec
or
sbb
roll
scas
enter
pop
mov
add
popa
gs
pop
mov
cmp
adc
jp
and
sub
lahf
clc
dec
xor
dec
mov
or
or
jp
adc
aas
inc
and
outsb
xchg
fsubrl
cli
in
loop
lds
push
adc
test
add
and
ret
push
jmp
daa
out
push
add
test
clc
cmp
push
sbb
inc
std
adc
mulb
jo
or
mov
imul
xchg
clc
incl
sub
sar
cmc
sbb
pop
adc
jbe
fisubl
mov
mov
and
mov
das
push
int3
inc
pop
or
xor
stos
outsb
out
mov
add
xor
sbb
es
sbb
fildll
stos
jb
mov
jne
rcll
mov
inc
repnz
jl
push
xchg
fsubrl
xchg
sub
mov
aad
mov
pop
pop
inc
mov
in
inc
outsb
jbe
pop
test
mov
aas
adc
fiadds
addr16
push
pop
adc
test
mull
jl
cltd
daa
gs
adc
mov
pop
xchg
negb
dec
pop
lock
int3
cld
mov
mov
call
fsubrs
push
dec
mov
mov
adcb
and
mov
xlat
js
pop
mov
and
mov
inc
hlt
mov
fcompl
clc
divb
insb
sbb
jmp
mov
in
mov
and
add
or
cmp
sbb
repnz
inc
mov
adc
out
cs
imulb
adc
xlat
mov
or
mov
testl
cmp
mov
out
incb
movsl
xor
mov
notb
inc
arpl
mov
enter
lock
bound
pop
loope
cmpsl
daa
out
push
mov
shrl
push
dec
int3
js
rcll
in
or
ja
cmp
jne
cmp
repnz
dec
divb
dec
jl
mov
sbb
and
jl
push
jb
sub
mov
enter
pop
pop
mov
push
adc
in
cld
sbb
sar
jnp
xchg
or
leave
add
lret
inc
sbbl
pop
adc
push
shll
call
and
xlat
je
les
push
xchg
rclb
jge
mov
cmpsb
cmp
cmp
dec
fidivs
iret
and
xlat
test
pop
jg
fists
xchg
pop
icebp
ret
adc
clc
xchg
mov
xchg
scas
cld
jo
sub
mov
in
int3
add
pop
push
sbb
leave
or
outsl
lods
or
push
ficomps
inc
inc
mov
or
push
add
add
out
clc
xlat
mov
cmp
enter
add
cmpsb
outsl
or
gs
pop
call
xor
push
xor
inc
aam
clc
das
aas
ja
stos
scas
xchg
sub
mov
or
cltd
fbld
push
aad
mov
cld
mov
insl
int3
inc
fcmovnb
or
fwait
icebp
fists
xlat
das
adc
pop
sti
clc
xchg
in
add
mov
sub
pop
pop
adc
push
pop
adc
cmpb
mov
in
out
dec
cmpsb
lock
stc
fmull
repnz
jecxz
xchg
mov
sub
mov
add
int3
iret
ss
mov
lock
mov
jmp
pop
fdivrs
rclb
or
mov
adc
rcll
imul
inc
testl
lds
mov
cld
shrl
cmp
xchg
inc
aad
rol
pop
mov
inc
stos
ret
or
jl
test
dec
into
push
fildll
outsb
rolb
fs
pop
ljmp
inc
sbb
cs
je
sti
inc
jne
adc
in
clc
pushf
adc
arpl
push
ss
shll
out
mov
rcll
mov
lods
lea
mov
mov
xchg
mov
or
push
dec
cmc
add
ss
adc
ret
mov
shrl
not
notl
add
aad
xchg
call
push
out
loope
jmp
and
jecxz
and
and
mov
sub
fiaddl
sar
fnstsw
mov
or
test
cmp
lods
ret
xchg
das
jecxz
int
lea
repnz
mov
test
out
test
iret
cmp
mov
not
mov
inc
jle,pt
stos
fistl
push
mov
int
pop
or
cmp
mov
sbb
jnp
sti
out
lcall
inc
fdivs
sbb
out
mov
sub
jns
sahf
mov
dec
inc
fnstcw
aaa
sti
push
testb
clc
mov
loop
and
js
adc
jno
aas
mov
dec
inc
xor
insl
mov
pop
int
xor
pop
add
fistpll
out
iret
les
mov
mov
dec
sub
and
xor
adc
sarb
mov
adc
shll
inc
fldt
fsubp
mov
mov
outsl
push
loop
push
int
inc
es
push
sbb
in
push
in
inc
mov
sbb
jns
shlb
movsl
dec
scas
movsb
lret
repnz
sbbb
push
in
pop
loop
cmp
mov
popa
mov
lods
std
mov
xor
mov
cli
cmp
pop
sub
jns
and
in
scas
lahf
idivb
sbb
fwait
in
or
mov
hlt
out
inc
fisubl
pop
cs
stos
mov
idivl
sbb
aaa
jnp
outsb
or
repz
lds
sbb
xbegin
mov
mov
mov
mov
lods
or
jne
lods
pushf
cmp
pop
push
pusha
add
frstor
mov
mov
xor
idivb
pop
cmp
in
loopne
mov
or
cmp
fmul
xchg
or
dec
mov
repnz
xchg
testl
stos
xor
stos
sbbb
arpl
stc
ss
lods
inc
pop
inc
cmpsl
popf
push
or
pop
inc
add
enter
icebp
ret
gs
jl
filds
jo
jmp
xchg
mov
xchg
pop
and
fidivs
or
arpl
aad
test
cmp
jg
cmp
xchg
bound
jecxz
adc
xchg
mov
fs
mov
jmp
lods
es
mov
push
ficomps
dec
mul
shlb
adc
mov
rep
and
jo
adc
pop
test
je
incl
push
push
adc
ror
popa
subl
mov
mov
faddl
out
mov
sub
adc
jp
addr16
test
mov
sub
pop
or
ja
in
aam
push
mov
push
jnp
lcall
pusha
and
sti
pop
sti
dec
loope
repz
fwait
into
adc
notl
iret
mov
test
sub
inc
xor
sub
cmc
outsb
stc
sbb
inc
and
int3
shll
aad
inc
lods
push
icebp
sbb
mov
leave
push
loope
int3
sarl
fdivrs
sbb
sar
sub
mov
mov
jne
mov
imul
dec
imulb
aas
insl
outsl
jns
rclb
sarb
cs
testl
inc
fadd
pop
sbb
int
adcb
mov
add
mov
mov
xchg
pop
fldenv
pop
add
roll
adc
inc
sti
scas
sbb
pop
sub
mov
mov
enter
mov
aam
add
rol
cmc
sub
dec
repz
cmpsb
cmp
int3
fwait
xchg
clc
imul
mov
xor
jmp
or
out
inc
add
loopne
lock
xor
mov
cmp
sbb
dec
push
xchg
int
sbb
sub
hlt
mov
dec
push
cli
mov
dec
cmp
xorl
mov
ja
adc
mov
cmp
bndstx
jmp
mov
or
test
int3
inc
cmp
cmp
lds
mov
das
into
mov
imul
cs
xor
xor
jecxz
and
sbb
loopne
dec
and
pop
or
fdivrl
jecxz
push
mov
call
movsb
adc
sub
bound
add
insl
repz
jge
inc
icebp
mov
xchg
add
loopne
mov
ljmp
or
add
stos
mov
mov
mov
fdivs
cmp
fiadds
cli
mov
xchg
adc
and
sbb
sbb
call
add
cmc
movsb
jmp
ss
filds
not
in
out
out
popf
ljmp
pop
sbb
push
xchg
jecxz
decb
shl
mov
cmpsl
ror
xchg
pop
iret
cmp
fadd
out
int3
or
adc
fsubrs
and
cmp
xor
jb
fmull
pop
xor
iret
pop
fdivrl
aad
mov
in
fsts
test
lods
mov
or
adc
add
fcomp
lods
iret
lret
aas
clc
aam
addr16
insl
xor
inc
je
jne
clc
mov
jne
mov
jecxz
lahf
fs
jae
int
fs
clc
fcmovnb
and
mov
push
inc
adc
in
sbb
push
xlat
out
lret
adc
jl
mov
add
div
xor
out
jnp
dec
fcmovnu
shrb
sub
pop
jecxz
adc
in
jns
int3
dec
les
gs
sub
faddp
xor
andb
mov
adc
xor
lahf
fists
ss
enter
xlat
pop
sub
fcmovbe
push
fwait
es
aas
outsb
das
cs
push
add
test
movsb
fnstcw
push
std
sbb
ret
test
movzwl
in
lock
repz
loopne
lea
sbb
mov
neg
outsl
into
push
xchg
cld
sarb
shrl
dec
mov
sbb
popw
loope
sti
adc
mov
xor
dec
ret
mov
mov
push
pop
lock
inc
fimull
xchg
jae
leave
mov
push
add
flds
push
fsubl
loope
out
in
xlat
hlt
fmul
rorl
mov
pop
add
sbb
pop
xchg
ret
mov
xor
cmp
jo
jecxz
add
sti
sbb
cs
leave
test
scas
sbb
cmc
stos
aam
out
mov
imul
push
adc
push
fidivrs
out
and
xor
pop
push
hlt
push
sar
mov
mov
cld
cmp
hlt
push
inc
mov
aad
loop
and
and
aad
in
cmc
ror
popf
hlt
pop
mov
xchg
mov
or
add
cmc
mov
push
mov
mov
sbb
add
clc
enter
adc
sub
adc
test
out
stos
into
xlat
aam
les
dec
out
xor
pop
out
vaddsd
stos
cmp
in
lods
adc
adc
int3
dec
add
mov
mov
ret
shrl
sub
mov
sbb
mov
xlat
or
adc
mov
call
cmc
dec
iret
dec
daa
ss
lods
ret
and
and
sbb
rcll
lret
xor
or
push
ss
loope
popa
fidivl
call
out
fildl
push
pop
fimuls
mov
shll
mov
mov
sbb
or
cwtl
push
mov
or
adc
loop
sub
jl
fimuls
push
bound
add
jo
jb
add
mov
or
frstor
lock
mov
pop
lret
test
mov
lea
in
icebp
ret
cmp
decl
fildl
lock
mov
dec
jae
cld
jmp
ret
dec
iret
jmp
jne
push
jo
jne
scas
scas
lock
pop
aam
imul
xchg
mov
push
cmc
mov
xchg
sbb
mov
out
add
stos
fwait
adc
ja
mov
scas
imull
scas
loopne
fimull
push
push
lods
jl
push
ljmp
pusha
in
sbb
mov
cmp
and
fcmovu
cs
int3
cmp
fwait
sahf
cmp
push
lock
mov
std
push
push
aad
xchg
clc
mov
daa
sub
roll
repz
ljmp
mov
mov
pop
negl
test
xor
sbb
cmp
jne
adc
ds
adc
aam
and
inc
icebp
ljmp
shll
mov
imul
fcoms
push
push
aam
adc
pop
iret
rcrb
iret
and
mov
in
and
adc
pop
cmpl
adcl
jo
movsb
inc
xchg
pop
aas
aad
or
xchg
jno
jge
lea
xor
les
sar
icebp
lock
adc
sti
pop
rcl
inc
or
fildll
inc
mov
icebp
sbb
cltd
aam
mov
push
adc
cld
xlat
or
into
lods
mov
cli
cmpsl
xchg
ret
fsub
adc
cwtl
xlat
xchg
push
sub
or
hlt
fstpl
mov
xor
inc
sub
movb
rcll
jle
inc
int
jmp
js
fs
leave
add
adc
hlt
lcall
insb
sub
push
inc
test
jmp
mov
aaa
and
ficomps
xchg
dec
cld
mov
out
adc
int
hlt
mov
cmp
inc
out
and
fdivs
enter
mov
sti
cmp
push
or
inc
jo
popf
xchg
icebp
icebp
stos
inc
cmp
outsb
xlat
push
push
ffree
adc
lock
adc
jne
stos
push
es
cmpsl
out
lock
div
xor
jne
stos
jno
in
fisubs
jl
loope
mov
adc
mov
in
add
stos
xchg
push
js
sbb
adc
dec
push
xlat
mov
cmp
shll
leave
jl
and
lret
fstpt
xor
pop
hlt
inc
jecxz
aad
iret
xrelease
pop
inc
je
mov
cwtl
sub
andl
xchg
daa
lods
inc
sbb
jno
mov
stos
negb
push
or
mov
ds
mov
scas
cwtl
xchg
xor
push
div
jo
push
mov
pop
cld
daa
sub
repz
adc
mov
fsubrl
or
fdivs
rorl
adc
popa
inc
out
in
call
cmp
inc
mov
pop
sbb
incb
and
jecxz
fisubs
out
nop
mov
push
add
adc
push
sbb
dec
mov
test
lcall
pop
pop
ficompl
fwait
or
hlt
inc
push
fmull
rcll
jmp
test
mov
sahf
int3
push
inc
daa
pop
push
inc
loope
iret
add
and
out
sbb
out
jb
out
sub
out
test
sti
test
push
lret
xchg
fwait
pop
mov
pop
sub
rorb
add
and
ss
cmp
adc
jl
fstl
pop
out
gs
testl
sub
cmc
mov
dec
cs
les
mov
sbbb
inc
push
ficoml
outsl
push
xor
sarb
mov
mov
or
into
push
and
sub
push
jae
push
lret
cmp
and
fadds
fistps
sbb
inc
xchg
jmp
popf
and
out
jg
aas
inc
in
inc
outsl
pop
sbb
sbb
loop
fucomi
pop
cli
adc
mov
pusha
or
sbb
mov
mov
xchg
das
es
sbb
sbb
xchg
lea
jg
cmpsl
lret
sbb
lret
and
out
pop
dec
fdivs
pop
int3
jne
rcrb
ficoms
xor
ret
cli
push
xlat
fcomip
das
idivb
jmp
adc
shrl
mov
out
in
push
int
fcom
adcb
jns
idivb
pop
push
insl
lods
mov
mov
int3
adc
xor
jmp
popa
int3
sub
dec
sub
dec
or
xchg
cmp
loopne
cli
mov
adc
mov
sti
jecxz
scas
leave
pand
or
sahf
push
test
or
sbb
inc
sub
in
mov
pop
sbb
cmp
fbld
lock
cmc
cmp
fdivp
xor
mov
push
nop
push
in
fnsave
aas
and
add
sti
jno
test
add
scas
enter
lods
xor
lcall
scas
popf
lret
pop
loop
xchg
xchg
aam
sbb
xor
xchg
das
jg
or
xor
and
lret
xchg
pop
cltd
push
stos
cmp
push
cmp
jl
das
xlat
not
xor
dec
pop
leave
outsl
sbb
xor
aam
faddl
inc
insb
sti
ret
xor
adc
push
js
aad
mov
rcr
lret
sub
inc
and
lds
fxch
mov
cmp
ret
cs
leave
int
mov
adc
mov
xchg
fwait
cwtl
dec
and
es
add
and
out
add
add
pop
mov
cmpsl
push
fdivs
adcl
cmp
jo
repnz
fdivs
mulb
pushf
jmp
cmp
xchg
xlat
dec
pop
call
cld
out
xchg
pop
stos
cmc
fstpt
fldcw
loope
cmp
ss
xchg
daa
stos
clc
ds
insl
mov
xor
xlat
das
mov
xlat
mov
push
mov
scas
scas
jecxz
add
iret
mov
flds
xlat
ljmp
sub
leave
or
cmp
test
jnp
push
adc
mov
push
pop
adc
data16
mov
aam
xor
pop
out
xchg
pop
cli
fcomip
mov
xchg
pusha
into
xchg
inc
pop
jo
xchg
xchg
and
stc
or
or
add
sub
jo
xor
mov
sti
inc
mov
insl
jno
out
lds
js
enter
je
push
cld
sub
jns
jle
orl
sub
mov
push
jle
or
mov
ds
xchg
push
std
fwait
push
cmpsl
lods
fsubr
dec
je
ror
into
add
cli
enter
insl
push
fmuls
loope
sbb
repz
and
loopne
in
cmp
cltd
fldcw
out
pop
in
sub
fildl
jb
sbb
pop
mov
mov
sahf
ss
stos
sbb
aaa
pushf
mov
inc
push
jle
and
jge
ja
fidivs
and
adc
in
pusha
xor
shll
rcr
ret
xor
in
push
dec
dec
mov
stos
in
rorb
mov
out
push
pusha
repnz
notb
lods
mov
sub
add
shlb
call
insb
jecxz
test
mov
push
mov
cmc
lcall
inc
push
pusha
xchg
aam
sub
lahf
in
sti
push
sub
aas
lods
rcrl
movsl
xchg
fucomp
iret
inc
mov
into
mov
mov
hlt
adc
xchg
arpl
movsb
repnz
jmp
repz
loopne
sub
dec
repnz
sbb
adc
hlt
add
inc
xor
out
fwait
and
inc
push
div
cli
call
jl
xor
rol
jae
cmp
mov
xchg
rorl
movl
jbe
adc
dec
scas
mov
pop
pop
lcall
xchg
cmpsl
je
mov
cli
testb
dec
testl
mov
add
mov
mov
iret
sti
les
sub
xchg
mov
xchg
cmp
inc
sti
xor
add
in
test
sub
add
pop
clc
mov
rorl
roll
dec
pop
fnstenv
ds
imul
ret
movswl
mov
xor
btc
fiadds
test
shlb
mov
fstl
mov
pushf
push
or
in
test
or
daa
cmp
xchg
je
xor
or
aad
sub
mov
xchg
clc
adc
mov
dec
repz
cmpsl
lods
mov
jns
lcall
pop
push
cmc
push
lock
xlat
xor
push
adc
cli
imul
sbb
shl
hlt
shlb
sub
mov
insb
or
out
push
inc
xlat
pop
std
repz
sbb
mov
mov
scas
cld
test
sub
pushf
lcall
lret
jnp
stos
dec
inc
sbb
lahf
sti
jmp
jle
mov
mov
rclb
ret
in
testl
in
add
imul
pop
mov
aas
add
push
push
jne
or
in
push
sbb
js
mov
std
add
ret
adc
lret
mov
mov
push
and
pop
pop
in
pop
outsl
cmpsl
lods
cmp
lock
push
pop
cwtl
sub
xchg
call
out
add
mov
sti
xchg
push
pushf
pop
and
fidivrl
sti
outsl
arpl
arpl
pop
bound
add
icebp
mov
xor
lahf
negl
xor
sbb
mov
lods
daa
xchg
jp
dec
mov
cwtl
xchg
rcrl
repnz
sbb
je
ror
mov
sub
or
addl
add
dec
stos
sub
pop
fwait
decb
ret
lock
xor
cmpsb
cmp
push
imul
das
std
or
mov
jbe
das
lret
xchg
in
add
insl
test
lahf
push
or
daa
fiaddl
and
jp
insl
mov
ret
repz
jge
dec
dec
pusha
adc
test
inc
pushf
mov
lea
xor
gs
or
or
cmc
pop
mov
sbb
pop
aas
xor
xchg
repnz
test
ljmp
mov
testl
push
and
or
adc
adc
add
cmc
bnd
or
into
ficoml
aad
fcomi
fsubl
loopne
icebp
addl
ret
jecxz
mov
mov
push
shll
inc
or
rcrl
arpl
ficoms
cld
mov
call
cltd
and
mov
jnp
inc
aaa
fwait
enter
roll
xchg
xor
rorl
stc
mov
xchg
mov
add
sti
inc
testl
push
adc
hlt
loope
test
int3
xor
mov
push
pop
mov
jl
fistpl
int3
inc
push
in
mov
cld
jmp
xchg
dec
dec
dec
out
test
jmp
outsb
mov
or
cmp
mov
outsl
cmovb
nop
loopne
sbb
pusha
outsb
add
nopl
out
cli
dec
pop
add
arpl
loop
lret
inc
andl
xor
mov
fcomi
xchg
shll
and
pop
xor
aad
inc
xchg
xchg
inc
stos
fstl
aaa
jmp
fs
int
jbe
scas
adc
or
adc
in
in
sbb
aam
testl
sub
idivb
xor
mov
cld
imul
insl
push
leave
adc
not
scas
shl
lret
enter
adc
sarb
xor
rcll
mov
repz
cmp
ret
inc
jae
cmp
je
and
pop
jnp
mov
lock
repnz
ret
cmp
loop
inc
aas
xor
pop
mov
or
test
or
xor
push
dec
in
pop
gs
pusha
mov
fsubs
jno
inc
testl
aam
sbb
mov
out
fs
push
packsswb
out
dec
cs
paddsb
adc
inc
xchg
in
push
pop
insb
cmp
imul
js
jno
nop
push
add
lret
or
fadd
add
mov
or
adc
sub
fs
mov
js
jo
push
push
inc
pop
adc
mov
adc
push
aam
das
lods
aad
loopne
in
stos
cld
cmpsl
in
jl
xchg
and
movsb
pop
cs
cli
in
and
adc
or
add
cmp
and
mov
sti
imul
insl
sub
enter
shrl
push
div
pop
pop
sub
inc
lock
mov
repz
aam
das
dec
aad
loopne
stc
orl
or
shll
cmp
sbb
or
sub
movsb
sbb
or
add
or
filds
sub
gs
add
in
cmp
push
in
inc
enter
push
loope
idivb
and
mov
cld
stos
jo
fmul
or
sub
inc
adc
or
test
or
in
inc
sbb
in
mov
out
mov
aas
cld
scas
push
gs
sbb
pop
aam
test
lods
add
fldcw
inc
negb
push
out
into
int3
fwait
lods
inc
into
roll
insl
push
fisttpl
ror
pop
mov
std
rorb
xlat
movsl
push
fsubrs
sub
lds
xor
hlt
xor
jmp
clc
daa
jmp
xor
in
in
out
lock
sub
jo
sti
add
or
fbstp
das
out
mov
mov
add
pop
push
push
stc
fmuls
inc
or
mov
sub
fucomip
das
add
rcrb
sbb
aaa
test
shll
dec
icebp
mov
gs
in
nop
push
sub
mov
xchg
mov
jns
push
test
aaa
shrb
xlat
sub
xlat
pop
lods
in
dec
das
std
testl
cs
aam
imul
mov
adc
push
ret
call
lods
clc
ds
or
jae
adc
push
xchg
jmp
push
mov
aam
pop
mov
sbbb
jnp
push
fidivl
nop
aad
fdivrl
ja
cs
icebp
dec
jl
pop
mov
and
jnp
xor
out
dec
in
fdivr
mov
icebp
out
and
adc
mov
push
inc
fcomp
cmp
xor
gs
fs
loop
hlt
mov
jmp
insl
mov
out
push
es
movswl
mov
push
xor
and
cmp
out
or
mov
cwtl
lods
ss
daa
clc
clc
lock
sbb
or
cltd
add
pop
dec
fmull
push
or
xor
and
fstpt
and
xor
xor
fists
pop
test
movb
pop
push
repz
sbb
lea
xor
cmpsl
loopne
adc
aad
sub
sub
jnp
shlb
sbb
add
das
outsl
movsl
push
cmp
add
jnp
fcoms
pushf
stc
repnz
clc
xchg
push
mov
cmp
and
pusha
sbb
and
sbb
xor
xchg
adc
sbb
loope
or
repz
ds
lahf
movsb
lods
and
pop
ss
pop
fidivrl
xchg
popa
push
adc
mov
fwait
fs
and
pop
jmp
mov
icebp
mov
stc
jmp
cmp
out
xor
stos
xor
mov
cmp
aaa
ret
sub
pop
loopne
cmp
sahf
aad
rcl
mov
in
testb
fnstenv
pop
rcr
in
lods
lea
sti
out
cmp
loop
mov
stos
imul
out
pusha
rcr
adc
mov
push
push
dec
pushf
and
sub
add
mov
fcmovnbe
ficomps
sub
and
sub
mov
adc
adc
cld
push
js
adc
mov
hlt
rcrl
jge
cmp
push
jecxz
cmc
xchg
aas
lcall
cmp
or
pop
pop
imul
std
int
sub
out
cmp
mov
andl
sbb
ja
ja
adc
or
push
adc
shrl
sub
prefetchw
or
call
clc
adc
xchg
stc
mov
sub
enter
mov
and
loop
daa
mov
test
mov
outsl
mov
fmuls
outsb
int3
pop
sbb
in
hlt
push
clc
and
cmp
xor
lods
pop
or
adc
aam
mov
push
add
and
cld
jmp
rcll
dec
mov
mov
ja
or
das
pop
pop
loopne
in
adc
inc
or
dec
shll
repz
lock
mov
pop
loop
xor
xchg
cltd
loopne
daa
mov
push
std
test
pop
in
fbstp
and
xchg
rcrl
subl
js
jnp
in
xchg
adc
and
in
add
stc
sbb
inc
and
mov
sbb
jnp
jns
sub
add
sahf
fisttpl
int
sbb
push
loope
and
or
jae
cmpsl
mov
jp
lods
mov
jnp
fwait
or
mov
ret
mov
in
in
scas
fxch
mov
mov
push
or
sbb
stos
jl
mov
fdivs
lds
inc
xorl
mov
dec
mov
sub
mov
or
pop
sbb
cld
stc
sbb
mov
push
lock
fucomip
imul
xor
push
mov
adc
fs
sub
cmc
adc
movsb
jb
add
xchg
aam
xorb
cmp
movsb
cs
popf
daa
ja
jne
jmp
bnd
addr16
ja
cmp
ret
jne
lods
pop
adc
rclb
mov
cs
mov
std
into
loop
xor
repnz
leave
xchg
loop
lret
inc
in
int
out
cli
jmp
or
or
sarb
lock
pop
rorl
mov
mov
pop
mov
pop
adc
aad
push
fdivl
or
or
pop
in
lret
and
int
jmp
scas
pop
xor
scas
rcrb
inc
mov
pushf
in
mov
cli
mov
xchg
ficoml
test
sub
loopne
imul
sbb
cmp
dec
sbb
xor
mov
jge
jmp
adc
mov
lret
pop
mov
mov
jl
jg
push
mov
push
loop
idivb
ret
push
xor
inc
or
and
push
cmpsl
stc
and
jg
adc
in
into
sbb
jle
lea
iret
in
pushl
aas
popa
mov
lret
inc
fwait
insl
test
sbb
hlt
sbb
add
fstps
push
mov
adc
in
fistpll
pusha
repnz
push
add
adc
and
mov
push
jmp
sbb
insl
fidivrs
inc
or
dec
and
push
daa
pop
push
lods
icebp
jecxz
dec
push
xor
push
fistl
gs
ljmp
cli
aaa
push
sbb
xor
add
fistpl
mov
ss
add
dec
mov
enter
or
push
push
aam
push
inc
mov
mov
test
loop
int
shl
push
xorl
push
loope
xchg
or
push
sbb
enter
rorl
rol
push
jecxz
aad
sbb
in
idivl
sub
xlat
pusha
arpl
in
cltd
dec
icebp
add
xlat
imul
notb
icebp
push
in
daa
mov
mov
call
subb
sbb
sti
mov
xorb
fs
sbbl
cwtl
and
lods
repnz
outsl
out
cmp
inc
repz
and
jo
loope
pop
cld
test
jmp
jb
mul
fistl
pop
test
dec
out
add
adc
jp
jae
adc
cld
icebp
repz
cli
pop
jae
push
cwtl
push
pop
fmuls
or
fstpt
out
pop
bound
adc
test
jle
ds
adc
cmp
icebp
mov
mov
adc
into
push
push
xor
phsubd
push
jle
inc
stos
imul
nop
test
inc
leave
adc
aaa
fisubs
push
xor
movsb
push
mov
xor
cmc
add
push
decl
in
push
mov
loop
nop
jg
cmpsl
decl
ss
cmpsb
sar
cmp
lret
mov
sbb
or
jle,pn
orl
fnstsw
sbb
add
std
mov
mov
sbb
mov
out
sti
js
jnp
arpl
sub
adc
imul
dec
fsubr
and
push
or
icebp
adc
ljmp
or
mov
push
scas
xor
out
dec
in
cmp
jbe
mov
lock
xor
push
inc
mov
mov
jb
push
mov
out
jae
add
in
loop
cs
dec
push
es
pop
pop
hlt
stos
xchg
scas
dec
pop
cmp
push
cmp
insl
inc
mov
sub
div
jmp
xchg
add
into
dec
dec
push
mov
mov
outsb
mov
rcrl
clc
ficompl
les
and
or
enter
popf
jns
imul
sub
jmp
cmpsb
lock
add
push
arpl
hlt
or
mov
adc
inc
fcomps
je
push
jae
lret
push
adc
cmpb
inc
jge
aas
ja
pop
sar
outsb
fucom
pusha
or
mov
cs
hlt
xlat
insb
push
mov
adc
dec
pop
and
xlat
sbb
sbbb
adc
movsb
es
mov
ss
movsl
xor
nop
sub
xchg
xor
dec
mov
cmp
daa
bound
das
out
mov
sub
jmp
inc
je
fsubrs
mov
jno
jge
xchg
mov
adcb
xor
movsl
push
push
shll
mov
jle
shll
movb
mov
clc
outsl
out
mov
test
imul
lods
and
mov
test
stos
popa
repz
xchg
fistps
push
pop
mov
outsl
sub
mov
das
decl
mov
dec
mov
cmp
lcall
lret
in
jecxz
loop
shll
outsl
rclb
pop
mov
pop
cmp
adc
mov
dec
aam
aaa
mov
mov
outsl
push
mov
aad
ret
mov
rclb
mov
jae
je
lds
sahf
mov
sahf
iret
es
rcrl
cli
jl
cld
mov
sbb
push
sub
sbb
xor
into
mov
jb
sub
and
xchg
andl
cmp
dec
js
dec
or
ja
or
sub
fdivs
add
ud1
sahf
ret
xlat
mov
mov
jl
add
jo
cmc
inc
bound
add
frstor
dec
mov
lcall
mov
in
icebp
mull
dec
iret
fnstenv
out
push
icebp
mov
rcrl
test
loope
cmpsl
movsb
std
sti
cmp
xlat
sub
in
test
out
pop
data16
out
jecxz
push
pop
fwait
mov
xchg
push
das
lret
sahf
pop
cmp
or
shrl
fbld
popa
aam
shrl
les
and
sbb
push
les
int3
les
adc
pop
adc
inc
and
inc
cmc
fs
fdivl
push
out
or
faddl
sub
inc
pop
mov
lret
insb
scas
sbb
stc
pop
adc
xchg
cld
out
pop
pop
push
or
push
push
pop
ss
clc
adcl
cmpsb
testl
mov
or
jmp
mov
xchg
int
fistpll
ret
adc
dec
inc
push
fbld
xor
xchg
filds
aam
mov
call
jmp
push
xchg
arpl
xlat
gs
dec
adc
jnp
mov
mov
int
scas
or
cmp
mov
pop
or
inc
fiadds
loopne
int
shrb
outsl
daa
xor
sbb
fbld
inc
mov
mov
pusha
dec
pop
ret
ss
sbb
or
shll
rcrl
mov
or
push
pushf
or
aas
or
push
int3
jbe
jmp
fidivrl
sbb
xchg
shrl
mov
inc
jmp
mov
push
jo
lahf
popf
pop
mov
in
ret
adc
and
inc
loopne
dec
push
mov
imul
enter
fisubrl
mov
mov
add
sub
push
adc
dec
lret
push
cmpsl
cld
sbb
sbb
lea
pop
stc
hlt
repnz
cmp
adc
pop
or
dec
data16
jno
mov
lds
xor
aas
sub
lea
aad
add
mov
les
ret
mov
sbb
mov
mov
js
cs
xor
pusha
test
lock
sbb
push
cld
jp
aad
push
jns
jp
sbb
sub
call
pusha
inc
sti
push
out
sub
cmp
loopne
dec
cwtl
in
inc
lods
mov
movsl
xchg
movsb
movsb
lods
lcall
inc
xorl
jl
mov
cmp
ljmp
sbb
iret
decb
dec
in
cwtl
mov
xchg
loope
fidivl
push
dec
insl
pushf
shr
pop
inc
sub
aaa
and
add
mov
std
and
clc
jl
jg
ss
mov
adc
repz
jg
pop
or
jmp
xor
or
pusha
jo
jecxz
mov
jg
in
icebp
shrl
inc
adc
xor
dec
jb
inc
pop
mov
xchg
test
je,pn
movsl
pop
aad
movsb
mov
popf
cmc
std
shl
sub
cmpsl
or
loopne
jnp
fwait
mov
sbb
das
fdivs
add
jp
mov
add
jge
push
cmp
mov
pop
into
iret
shrl
and
out
or
sub
std
xor
mov
jmp
stc
jae
es
test
xor
imul
adc
jo
mov
push
mov
pop
aam
push
mov
mov
push
jne
dec
hlt
sub
ret
je
push
dec
or
fs
pop
jl
sbb
sub
mov
cs
in
dec
pop
mov
clc
cmpsl
std
adcb
pop
adc
fcoms
inc
or
vrcpps
push
in
into
sbbl
insb
shlb
xorb
dec
sbb
pusha
and
sahf
and
dec
push
arpl
xor
sbb
mov
adc
js
push
cmpsl
in
out
push
cs
dec
insl
loope
sub
loop
fadds
rol
scas
and
inc
jmp
cltd
adc
cmpsb
xchg
cmp
push
push
orb
bound
mov
dec
lods
mov
or
lret
pop
cmpsl
jno
dec
jae
sub
cmp
int3
add
push
mov
dec
mov
push
outsl
int
scas
sbb
cmp
push
jge
mov
es
inc
adc
cmpsb
jg
cmpsb
pusha
mov
insl
cmpsb
mov
add
in
aaa
cmp
dec
push
cmp
jge
daa
push
push
test
adc
fucomip
daa
aad
pop
xchg
adc
roll
jne
ficompl
imul
fisttps
test
int3
pop
lds
js
popa
dec
mov
mov
fstl
xor
enter
cmove
dec
loop
fwait
mov
adc
inc
mov
mov
jne,pn
out
mov
push
xor
dec
cmpsl
int3
pop
pop
or
pop
loopne
jae
jle
mov
sar
roll
or
adc
mov
aam
int3
lods
fsts
shrl
sbb
sahf
lret
push
popf
leave
sbb
sub
push
and
adc
sub
fidivrs
loopne
sub
or
pop
fsubrs
adc
lret
mov
sahf
jb
mov
out
cmp
lock
arpl
dec
xchg
pop
and
mov
hlt
ds
sub
fisttpll
aam
je
mov
lea
repz
fnstenv
sar
inc
adc
and
jne
movsb
pop
xlat
lock
cld
shrl
mov
jno
jmp
or
inc
cltd
fchs
repz
sar
adc
subl
popf
aam
lret
stos
aam
add
notb
sub
negl
jl
daa
add
mov
in
xchg
adc
adc
dec
fiaddl
jge
sub
out
push
or
rorl
mov
cmp
cmp
shr
fisttpll
enter
jno
mov
in
fsubrs
add
das
das
decl
adc
loopne
mov
mov
dec
pop
mov
fcoml
mov
ljmp
mov
test
fs
imul
sarb
fs
push
loopne,pt
and
push
cvtps2pi
and
jns
aas
fistl
out
xchg
rorl
lahf
mov
xchg
lds
sub
das
pop
leave
les
fstpl
push
mov
fists
xor
pushf
repnz
pop
xor
and
mov
mov
scas
pop
dec
int
pop
push
pop
jns
sbb
cmpsl
iret
insl
lea
push
xor
adc
movsb
mov
xor
add
sbb
std
sahf
mov
mov
cmp
inc
leave
ret
out
add
lock
sub
outsb
xor
pusha
shl
push
in
dec
cmpsl
cmpsl
push
mov
fwait
rcrl
setg
les
mov
xchg
cmpsl
mov
jl
int3
push
or
pop
aam
sub
lahf
xchg
adc
xor
sarb
lds
mov
jno
sbb
xchg
and
push
jnp
sub
cmpsb
pop
pop
or
std
pop
lret
fdiv
or
push
adc
or
mov
lret
int3
cli
shrl
mov
or
inc
jns
cs
out
xchg
dec
push
das
mov
int3
stos
ror
mov
sbb
xchg
mov
mov
cmp
stc
push
mov
xchg
pusha
jne
mov
es
xor
in
aaa
pop
cs
add
inc
pop
lods
add
mov
pop
aad
add
inc
lock
cli
or
lea
mov
cmc
xchg
ret
les
enter
lahf
sarl
xor
fsub
jae
mov
or
dec
es
sub
daa
inc
sub
adc
aaa
jb
cltd
repnz
ret
cmp
xchg
je
testb
sbb
fdivrs
clc
mov
dec
stc
add
scas
lock
pop
xchg
insl
imulb
dec
push
daa
xor
outsb
dec
mov
clc
xchg
ja
outsb
ljmp
in
jbe
sbb
sti
cmpsl
mov
dec
hlt
xchg
insb
out
add
xchg
cmp
cmp
push
mov
sbb
add
dec
repnz
pop
sbb
ret
in
pop
fildl
push
and
mov
scas
and
push
je
mov
lods
outsl
frstor
cmc
pop
sub
inc
sub
xor
xchg
mov
push
jno
aaa
xchg
clc
arpl
aam
xor
dec
inc
test
test
repz
adc
mov
aad
or
arpl
inc
ret
inc
fwait
jbe
adc
sti
mov
cwtl
mov
repz
inc
iret
pop
sahf
jecxz
aam
jno
dec
and
shll
cmp
or
ljmp
sub
les
or
stc
mov
pop
add
push
pop
cmp
mov
std
xor
inc
fwait
pop
lea
cwtl
icebp
mov
lea
repnz
xor
xchg
inc
aaa
sbb
sub
cmpsl
icebp
roll
pop
pop
sbb
cmp
mov
pushl
push
jge
loopne
push
mov
popa
and
fcomps
mul
fbstp
adc
dec
xlat
jecxz
inc
into
adc
dec
icebp
das
add
inc
jb
add
movhps
iret
adc
insl
pop
faddp
stos
or
mov
mov
jl
cwtl
aaa
cs
subl
mov
adc
fistl
xchg
cmp
repz
jge
mov
lcall
pushf
fs
dec
out
sub
sub
xchg
mov
aas
and
adc
cmp
int3
and
jmp
ja
int
insb
adc
mov
xchg
xor
shrb
int3
cmp
out
pusha
inc
movsl
mov
ds
and
outsl
mov
add
mov
bound
out
hlt
push
repz
out
adc
iret
jbe
xor
add
rolb
xor
movsb
cmp
sbb
dec
adcl
dec
cld
scas
repnz
xor
repz
sbb
sub
cmp
jp
negl
repnz
adc
xor
adc
adc
cmc
shrd
movsl
push
sub
arpl
sbb
inc
pusha
pop
aas
inc
pop
inc
nop
or
adc
enter
or
aaa
fdivrl
xor
mov
scas
mov
xor
xchg
outsl
xor
xlat
or
lock
or
pop
and
js
insb
aad
in
daa
js
aam
fiaddl
aaa
leave
pop
or
sub
lock
and
mov
sub
mov
mov
jg
ffreep
sarl
push
or
fwait
xchg
test
pop
and
xchg
in
mov
lahf
xchg
loopne
pop
push
lahf
jb
es
cmpb
push
pop
movsb
mov
cwtl
andl
xor
jmp
xchg
push
loope
not
mov
fildl
cmp
dec
stos
jns
cmpsb
jae
add
or
lahf
in
adc
cmc
xchg
cmp
les
xor
movsb
std
mov
jnp
fmuls
jecxz
mov
or
push
sahf
enter
sti
es
rcrl
dec
js
adc
sub
mov
xor
adc
dec
cmp
add
inc
movsb
push
in
fcmovu
loop
cmpsl
fstpt
and
mov
sbb
shll
jbe
pop
inc
mov
mov
stos
push
mov
loopne
mov
out
mov
push
add
fs
je
sub
mov
gs
loope
xchg
push
pop
add
notb
pusha
aad
rorb
rcll
jnp
adc
aam
pop
or
sbb
aam
jmp
inc
push
mov
mov
hlt
repnz
xor
push
and
pop
sub
sub
mov
movsl
loopne
sbb
js
fwait
add
push
sbb
push
js
lret
jnp
addr16
and
adc
adc
lock
aaa
in
jecxz
ja
or
stos
repz
adc
hlt
mov
repz
orb
sub
or
push
mov
pop
test
hlt
rolb
testb
repz
daa
jno
jne
and
jle
daa
rorb
loopne
hlt
adc
push
pop
in
adc
cwtl
mov
insb
testl
push
xor
bswap
aad
loopne
cmc
jnp
jb
or
loopne
ficomps
lds
das
std
dec
ficoml
xor
add
mov
std
sbb
fsubrl
aaa
sbb
add
pop
add
loope
test
cs
push
inc
lahf
xor
paddusb
fchs
jl
lret
and
out
fcompl
sub
xchg
fstpl
jo
lods
hlt
shll
adc
idivb
inc
enter
lds
clc
repz
in
sub
fldt
nop
inc
repz
dec
inc
aaa
dec
and
ret
dec
inc
xchg
add
idiv
mov
pusha
jae
cmp
and
and
leave
jne
cmp
xor
and
sbb
dec
outsb
jge
lock
sti
cmp
into
ret
sub
in
outsb
out
repnz
ds
push
or
adc
hlt
popf
mov
xlat
imul
cld
mov
fistl
sub
pop
sbb
pop
sbb
ss
aam
push
sti
pop
or
sbb
pop
push
iret
or
sub
xchg
cld
es
xor
out
and
push
mov
xlat
mov
mov
sbb
icebp
fnstenv
inc
xor
sbb
fiaddl
lods
cmp
jmp
std
out
andnps
sub
aam
xchg
sbb
aaa
push
or
std
jae
xchg
mov
adc
push
pusha
hlt
frstor
pop
inc
dec
xor
and
popa
lods
popf
ss
adc
pusha
and
dec
pmaxsw
jecxz
bound
mov
pop
cmp
scas
add
jecxz
dec
aaa
and
sub
xor
adc
sub
rcl
fcoml
rcl
adc
push
mov
out
xor
dec
sbb
imul
idivb
fs
pop
aaa
je
adc
addr16
cmp
mov
mov
or
js
adc
in
add
sti
stc
pop
mov
xor
stc
ds
pusha
and
xor
dec
dec
push
out
dec
hlt
mov
and
fs
adc
mov
sbb
fistl
xor
daa
std
imul
rcrl
inc
xor
sub
push
cmp
jp
or
call
lea
outsb
rol
push
push
pop
jmp
popa
cwtl
cmp
sbb
inc
sbb
xchg
aas
jne
mov
stos
dec
push
inc
loope
hlt
mov
mov
inc
pusha
push
jge
pop
pop
cmp
incl
push
jle
dec
pop
adc
mov
adc
insb
fadds
pushf
inc
lret
addr16
cs
icebp
cmp
fisttps
add
push
mov
cmpsl
in
adc
fs
dec
lcall
sub
push
adc
insb
fisubrl
xchg
adc
and
pop
fcoms
pop
add
jg
das
cmc
ud2
xchg
insb
mov
fisttpll
lock
xorl
push
pop
repnz
jge
push
adc
es
stc
sti
out
or
das
adc
fwait
cmp
xor
lock
mulb
in
lahf
repnz
in
jno
test
add
jmp
cmp
mov
jg
pop
sbb
outsl
loope
hlt
mov
mov
add
sbb
adc
hlt
notb
fstps
sub
aad
call
and
in
mov
mov
mov
push
clc
cli
jp
cmp
dec
xor
pop
data16
pop
mov
lea
sbb
lret
lahf
dec
cs
repz
push
orl
add
push
shl
bnd
dec
xorl
repz
mov
icebp
push
leave
xor
jmp
mul
xchg
and
repnz
and
cmc
jno
enter
movsb
lds
stos
std
pop
fcomps
cmp
xor
ds
test
negl
mov
fwait
loopne
jno
lcall
aaa
push
faddl
js
scas
lahf
or
ja
rcll
add
sbb
adc
xchg
xor
add
and
fcoml
inc
and
pop
mov
pop
addr16
jns
enter
xor
cwtl
mov
sbb
push
push
adc
jmp
daa
add
or
dec
xlat
dec
std
push
xlat
jg
in
mov
pop
cmp
cmp
daa
sbb
push
sub
dec
push
das
sbb
xor
scas
push
aaa
adc
pop
aad
out
push
in
out
xchg
in
out
iret
in
in
adc
loope
push
jmp
imul
jmp
rcll
cmp
xlat
fwait
cmp
xlat
lahf
cmp
cmp
testl
jnp
notl
fldt
sti
icebp
fwait
das
aaa
repnz
das
outsl
repnz
aam
pop
int3
aam
pop
rol
xlat
aas
je
pusha
and
mov
push
cmpsl
icebp
jmp
in
pop
inc
int3
in
lahf
pop
sbb
add
inc
fdiv
les
in
les
sti
les
inc
hlt
lret
clc
into
pop
mov
rclb
arpl
adc
xor
adc
jae
adc
ret
cmp
add
dec
in
pop
mulb
in
and
arpl
daa
divb
inc
std
div
aas
jge
lock
push
jge
loopne
cmp
pop
jl
sub
jnp
push
cld
cs
xor
xor
xor
xor
xor
xor
xor
dec
in
pop
xlat
aaa
std
pop
xlat
jg
arpl
rorl
loop,pn
add
aaa
loop
add
mov
pop
push
mov
xor
orps
mov
jl
out
adc
adc
pop
adc
insl
les
in
outsl
inc
mov
scas
inc
nop
xor
cwtl
xchg
jl
cwtl
xchg
jl
cwtl
fwait
je
push
xadd
dec
das
les
jno
enter
je
pusha
inc
mov
pusha
xchg
mov
in
ja
pop
outsl
xchg
lods
ret
xor
inc
mov
cld
popa
push
mov
js
sub
xchg
aas
push
push
sbb
xchg
das
test
mov
push
cmc
inc
scas
mov
sub
pop
jb
inc
scas
add
sub
imul
xor
sbb
xorl
iret
mov
repnz
std
jbe
rcrl
sbb
push
mov
out
rclb
rcrb
and
xchg
test
push
repnz
mov
push
popl
xchg
xor
ret
stc
popf
inc
addr16
lret
in
incb
loope
xchg
cs
push
test
inc
cmp
mov
lea
out
add
mov
into
mov
fnop
shlb
repz
lcall
cs
lea
mov
adc
mov
loopne
aaa
out
ss
ret
mov
pop
xor
xlat
call
scas
mov
inc
sbb
insl
fisttpl
scas
xor
xor
ficoml
or
scas
stos
rol
cs
leave
cltd
cmp
dec
ja
in
xchg
icebp
out
jb
ret
xorl
sbb
mov
sti
jae
pop
adc
jmp
inc
cmp
gs
inc
or
and
test
sub
leave
cli
cmp
mov
hlt
rcrl
std
fdiv
cld
xor
pusha
or
sbb
adc
and
cld
mov
push
xor
lcall
add
sub
std
hlt
xchg
out
mov
in
or
shrb
int3
testl
mov
push
sub
aaa
je
in
add
mov
push
adc
rclb
aad
pop
pop
aad
addl
pop
add
call
cld
inc
xchg
out
lods
sbb
pop
push
jge
lods
xchg
push
dec
int3
test
add
jo
push
cmp
mov
das
mov
mov
jne
fsubl
push
cmp
xor
rorb
imul
dec
cmp
test
jle
sbb
mov
and
xor
test
xor
cmpsl
in
pushf
out
loop
scas
mov
pushf
push
pop
frndint
scas
fisubrs
xchg
xchg
mov
or
les
jg
jmp
sub
xor
lock
fcomp
jae
xchg
sub
push
sahf
sar
inc
lret
aas
adc
fsubrs
pop
inc
xor
mov
dec
adc
out
iret
jo
imul
aaa
pusha
fwait
dec
pop
lods
and
jo
int
movsb
mov
jecxz
fwait
jmp
push
std
adc
aam
test
xor
mov
adc
lds
xlat
in
or
xchg
inc
pop
ljmp
mov
inc
cld
mov
dec
jo
cmovb
jb
cld
jbe
or
pop
int
ret
or
inc
sbb
test
pop
inc
jb
inc
push
pop
pop
pop
pushf
or
stos
mov
lock
stos
sarb
rcr
or
and
mov
xor
shl
hlt
out
es
pop
ret
inc
and
push
vmulps
mov
cmp
fisubl
lahf
cli
push
pusha
in
push
and
fstpt
ljmp
sti
jnp,pt
mov
addl
or
insb
fwait
call
push
mov
icebp
xchg
insl
inc
pop
pop
xchg
in
push
pop
xor
rol
test
and
push
and
insb
rorl
cwtl
divb
loope
sub
sbb
xor
cltd
mov
imul
xchg
inc
pop
jmp
pushf
hlt
outsl
jno
adc
jb
mov
mov
xchg
aad
incb
push
dec
shlb
jg
xchg
leave
imul
icebp
mov
inc
xor
outsl
mov
xchg
or
cmpsl
push
inc
in
cmc
and
cmp
outsb
leave
xlat
in
hlt
gs
mov
or
outsl
jge
mov
mov
enter
push
or
cmpsl
lods
pop
push
push
fdiv
inc
or
inc
pop
inc
mov
out
jae
call
loopne
jl
loopne
pop
jmp
cs
adc
cmp
fcoml
icebp
int
sahf
jb
add
pop
pop
push
dec
mov
cmc
js
and
ffree
loopne
and
out
xor
inc
and
cwtl
sub
dec
pop
shll
icebp
inc
dec
lods
hlt
dec
loope
add
adc
xchg
push
lods
adc
ret
sahf
lahf
imul
sub
cs
fistl
adcl
stc
pop
xchg
cmp
js
data16
inc
or
adc
shll
je
adc
enter
xor
in
cmpsb
mov
lods
xor
sbb
or
cmp
outsb
mov
jle
ja
mov
push
out
or
cltd
ljmp
and
sub
jmp
bound
fcmove
add
inc
icebp
js
lea
xorl
mov
pop
pop
adc
and
je
cmp
lret
sub
je
sbb
ds
popa
xor
bound
icebp
or
popa
sub
loopne
or
shll
push
mov
push
push
data16
sahf
scas
lahf
fs
shl
sahf
test
mov
cmp
inc
aam
push
xchg
mov
xchg
arpl
aad
data16
cmp
sarl
ret
push
iret
cmc
mov
inc
imul
mov
push
jge
sbb
dec
idivl
insb
adc
mov
repnz
test
pop
hlt
std
in
repz
xor
popa
cmp
xor
mov
frstor
inc
mov
fistps
sarb
jae
ret
popf
cld
dec
ja
inc
out
mov
out
in
dec
data16
std
mul
mov
addr16
dec
xor
idivl
cmc
dec
out
or
sbb
lods
pop
xchg
inc
fcmovbe
nop
xchg
mov
shl
div
adc
std
nop
sbb
pop
testl
adc
loope
jnp
lock
pop
push
jg
test
sbbl
xchg
hlt
aam
pcmpgtb
jg
jo
xor
jo
cltd
cmc
loopne
sbb
stc
adc
imull
dec
xor
testl
push
mov
pop
fnsave
not
sub
data16
std
mov
pop
add
xchg
je
cmp
repnz
stc
popf
repz
or
fists
loope
xchg
sub
into
sub
repnz
mov
dec
clc
cmp
add
add
das
in
aas
notb
clc
imul
add
inc
in
ret
dec
xor
loope
std
cmpsb
test
jne
add
inc
push
fcomi
xchg
and
in
cli
push
fcomi
mov
sbb
cmpb
lea
dec
adc
in
xchg
cli
shrl
jg
push
mov
lock
xchg
js
xor
jnp
ds
int
lret
pop
lea
lahf
les
fsubrs
jbe
js
inc
cwtl
fadd
add
hlt
fcomp
or
stc
popf
jae
insl
pop
mov
jo
ljmp
ja
cmpsl
adc
push
je
addr16
sbb
sbb
inc
outsl
icebp
popf
mov
test
shll
xor
mov
pop
repnz
shll
xchg
hlt
adc
leave
xchg
icebp
in
in
or
stos
push
cli
iret
js
rcll
push
sub
add
dec
icebp
lea
pop
popa
outsl
enter
xor
fdivrl
and
outsb
pusha
js
mov
cmp
add
push
loop
orl
xor
jns
sti
jbe
inc
jo
mov
push
out
dec
movsb
mov
xchg
mov
add
cmp
ja
repz
sub
loope
dec
lds
lods
hlt
push
je
ljmp
outsl
notb
and
sbb
rol
push
xchg
popa
shll
xor
cltd
aam
sub
pop
lea
mov
adc
sbb
fsubrl
sbb
fdivl
cwtl
pusha
jmp
mov
sub
repnz
mov
jnp
aas
mov
cmc
xchg
cmp
mov
mov
adcl
jbe
sub
or
scas
xchg
or
push
test
mov
popa
add
or
mov
loope
test
inc
ud2
jbe
dec
test
sub
out
mov
xchg
orl
sub
in
addb
dec
pop
and
js
outsl
mov
test
mov
push
inc
and
and
ret
insb
enter
mov
mov
fdivl
jne
dec
out
adc
pushf
mov
jg
ljmp
lahf
pushf
mov
loope
cmc
dec
adc
pop
sbbl
lcall
adcl
bnd
clc
es
pop
int
jno
int
lock
xchg
shll
or
jge
negl
or
push
sbb
lret
lret
aam
jns
push
rorb
xor
jne
pop
sub
mov
mov
add
movsl
adc
aam
mov
xlat
aas
and
fdivl
mov
xor
and
sub
push
loopne
xchg
into
shll
in
pop
or
das
loope
fwait
xchg
xor
popf
imul
mov
jmp
or
dec
sub
hlt
mov
xchg
movsl
loopne
fisubl
jae
mov
test
cmp
pop
add
jne
int3
mov
aad
out
imul
xchg
xchg
in
cmp
mov
popa
push
lods
ss
xchg
int
add
add
jecxz
scas
stos
jne
in
dec
aaa
pop
adc
cli
push
sbb
mov
mov
fwait
sahf
mov
cltd
imulb
imul
jle
gs
cltd
out
sti
movb
lea
add
sbb
ja
lods
dec
cld
xchg
push
insl
inc
xor
cmpsl
jle
fstpl
hlt
je
lahf
sub
mov
js
mov
pop
xchg
cmp
pusha
mov
sbb
xor
sub
mov
aam
lock
ror
jecxz
daa
repz
mov
sbb
jbe
movq
clc
stos
cmp
pop
dec
lock
xor
cmp
adc
and
mov
mov
loop
push
mov
xchg
rcrb
clc
in
xor
xor
js
shl
enter
arpl
bound
xchg
in
push
fidivrs
stos
adc
mov
mov
arpl
lds
xchg
loopne
pop
add
or
test
adcl
nop
mov
lea
mov
outsb
rolb
xlat
push
xchg
mov
int3
sbb
pushf
out
jb
add
aas
out
insb
cmp
push
cmp
int3
dec
cs
xchg
add
out
shrl
sub
add
mov
mov
mov
xchg
ljmp
fld
mov
jns
stos
jge
adc
push
xchg
mov
sub
enter
cmpsb
dec
mov
or
out
int3
fstl
and
cwtl
insl
iret
rcll
dec
sub
out
in
inc
pusha
rolb
cmp
aam
mov
xchg
ss
mov
mov
dec
call
mov
mov
test
and
mov
push
jno
and
mov
sbb
push
push
add
cwtl
mov
xchg
adc
mov
movsl
push
sbb
ja
lods
ja
lds
xlat
test
in
jo
mov
mov
arpl
out
jecxz
outsb
fists
out
mov
xchg
rclb
hlt
adc
and
call
push
fsub
fwait
jl
adc
jnp
cld
jge
jo
nop
fdivl
jge
js
je
orl
mov
adc
test
push
adc
pop
push
je
jbe
mov
push
fstpt
push
leave
mov
jge
popa
fisttps
inc
pushf
insb
push
mov
xor
inc
mov
mull
fbstp
dec
or
lret
pusha
sbb
jns
and
push
mov
pop
or
aam
sahf
stc
and
mov
mov
pop
pop
sub
mov
and
push
outsb
fs
cld
adc
iret
push
inc
xchg
cmp
fwait
add
shlb
push
fdivrp
stc
mov
mov
ret
jo
or
mov
cld
sbb
es
insb
test
inc
jne
int3
push
mov
aad
std
sbb
jp
aam
push
ljmp
bt
or
jne
pop
sti
xchg
pop
xchg
sub
mov
mov
lods
or
push
scas
push
pusha
jge
jmp
xor
ss
xchg
pushf
dec
push
paddq
push
das
mov
sahf
add
sbb
lret
daa
xor
pusha
jnp
loop
scas
ret
dec
push
sbb
cmpsl
cmpsb
and
cs
cmpsb
repz
dec
xor
repz
add
xor
das
mov
popa
adc
fwait
enter
sbb
xchg
cmpsb
jne
lcall
adc
dec
aam
xor
mov
insl
dec
stos
sbb
mov
jns
pop
jg
pop
mul
lods
imul
push
cmp
jmp
sub
imul
sub
sar
sbb
movsb
std
stos
das
sub
or
aaa
pop
inc
addr16
or
add
popa
pop
out
pop
xlat
add
xorl
sub
push
pop
fdivs
pop
in
add
add
mov
push
out
push
sbb
sarl
or
mov
and
cmpsl
fstpl
sbb
neg
or
ja
imul
mov
fwait
push
insb
daa
or
stc
les
pop
movsb
insl
js
pushf
gs
push
inc
xchg
sub
nop
lahf
dec
popa
and
insl
jnp
aaa
xchg
add
mov
pop
rcr
xorb
push
cmp
add
aam
sbb
mov
loope
push
mov
or
xor
sub
enter
mov
in
adc
pop
mov
jbe
neg
mov
mov
xor
add
pop
jmp
lock
add
add
sbb
and
mov
jnp
cmpsl
add
leave
out
jg
ja,pn
and
mov
jnp
mov
xchg
pop
push
cld
jmp
add
jno
pushf
mov
sbb
cli
mov
into
movsb
jl
int
syscall
mov
popf
mov
fldt
pop
xlat
mov
aam
push
adcb
or
shrl
rclb
dec
cmc
pusha
sahf
enter
inc
xor
loope
mov
sbb
mov
push
inc
hlt
lret
jae
lods
jbe
lds
loopne
pop
xor
insl
ror
cmc
and
jl
add
pop
inc
cld
fildll
jp
mov
scas
dec
ss
mov
lods
jne
xor
mov
in
es
xor
call
dec
mov
mov
push
cli
dec
loope
lret
cmp
or
add
jns
push
mov
je
mov
movsb
mov
cmc
push
into
in
cmpl
xlat
xlat
sti
lcall
movsl
dec
inc
push
inc
mov
out
test
and
sti
sub
mov
mov
dec
adc
arpl
mov
leave
adc
shrl
das
sub
and
nop
xchg
inc
pop
dec
mov
pusha
pushf
mov
sar
xor
sub
push
dec
xor
adc
xchg
xchg
int
jb
ror
mov
in
xchg
sbb
or
inc
sarb
cmp
xchg
movsb
and
fists
mov
push
mov
clc
inc
push
sahf
jg
mov
mov
hlt
std
cmp
insl
jmp
fbstp
je
lret
sbb
add
faddl
inc
fcmovne
insb
jp
push
and
and
std
arpl
adc
hlt
add
push
shll
and
leave
push
xor
daa
push
cmp
or
das
out
mov
out
daa
shrl
repz
out
adc
das
dec
fdivrl
xlat
xlat
popf
mov
sub
jg
negl
pop
lahf
mov
sbb
and
jno
xchg
dec
leave
fcompl
inc
ss
inc
dec
aaa
andb
lods
lds
cmpsb
test
addl
scas
xchg
mov
imul
jge
aad
push
mov
and
pusha
add
sbb
cmp
mov
pop
cwtl
dec
andb
pusha
lods
neg
fdivrl
lods
popl
fsubl
pop
cmp
cmp
cwtl
dec
sbb
int3
hlt
jo
popa
xlat
jmp
jnp
push
cwtl
xchg
cld
std
ret
addb
cli
pop
shlb
cld
pop
pop
jle
mov
xchg
sbb
jb
popa
shrl
movsb
fnsave
out
cmpsl
rol
repnz
mov
stos
repz
addr16
cmp
sbb
jl
in
inc
test
mov
insl
cmovg
xor
adc
lret
fwait
jecxz
ljmp
inc
and
es
leave
popa
adc
cmp
notb
adc
pushl
aam
test
in
lds
bnd
mov
stc
lods
cmp
push
cmp
mov
sub
dec
sbb
inc
mov
ss
pop
mov
lock
jno
mov
mov
fwait
and
or
lock
mov
add
loop
mov
aad
jne
cmp
enter
lret
mov
pop
mov
pop
jmp
push
pop
cld
sti
lret
clc
lret
notb
mov
jle
jmp
mov
in
rcrl
mov
jmp
fildll
stos
cmp
inc
mov
push
aad
rcrb
sbb
outsl
dec
add
cli
loopne
xor
xor
in
daa
cmp
dec
pop
outsb
push
pop
inc
hlt
imul
addr16
jne
inc
cmp
lock
xor
lcall
add
int
pop
pop
mov
scas
out
cmc
fucomp
pop
lahf
jo
jge
aad
fnsave
pop
push
xor
cmpsb
fmull
jno
ss
jo
repz
and
cwtl
inc
pop
push
mov
jb
fwait
dec
dec
js
xor
or
lahf
mov
cmpl
pop
pop
cmovae
fwait
push
xchg
push
fimull
stos
out
insl
outsl
sti
insb
mov
push
jbe
pop
cmp
add
aaa
into
subb
mov
mov
mov
jmp
sub
xor
repnz
das
sub
adc
sahf
ss
sbbb
mov
mov
mov
jp
cmpsl
data16
insl
std
scas
daa
mov
cli
pop
cmp
outsl
adc
or
test
mov
popl
movsb
or
in
xor
adc
pop
mov
shrb
stc
push
stc
cmp
ja
sub
orl
int3
push
test
xchg
mov
mov
or
decl
test
xchg
jge
inc
cmpsl
dec
icebp
lahf
mov
sbb
mov
sahf
cs
jl
leave
enter
add
dec
stc
cmpsl
inc
call
mov
inc
daa
pop
push
inc
mov
sub
cmp
mov
xor
fcmovb
lock
cmp
mov
loopne,pn
int
pushf
test
ret
jo
pop
cmc
inc
insb
sub
lahf
inc
insl
sbb
inc
iret
mov
mov
cmc
mov
les
jns
lret
mov
std
or
fisttps
xchg
sar
fwait
je
mov
xchg
mov
xchg
cmc
sub
insl
pop
insb
hlt
loope
cmp
stos
iret
lock
js
adc
fbld
hlt
scas
jne
inc
test
jecxz,pn
stos
dec
pop
add
ficomps
sahf
mov
cli
lods
daa
fwait
add
push
jns
aam
pop
lcall
sbb
cmp
xchg
je
insl
ja
stos
fdivr
pop
push
cmp
fistl
movsb
int
mov
mov
dec
out
movsl
mov
sub
loopne
sub
adc
jno
incl
pop
popa
leave
inc
cmc
loop
or
adc
mov
jecxz
pop
adc
fst
in
pusha
out
inc
lahf
fsts
push
dec
mov
fnsave
adc
jns
jmp
lahf
sub
adc
push
pusha
jg
lahf
imul
mov
fcompl
mov
cmp
aam
sbb
and
lret
das
cmp
mov
cmp
mov
loop
loope
sub
pop
jno
sbb
push
sub
ret
cltd
sahf
enter
in
test
dec
pop
pop
push
jmp
imul
mov
xor
lock
cmp
lahf
ljmp
fisubrs
mov
test
sub
outsl
push
add
mov
movsb
dec
insl
stc
pop
mov
fsubs
aas
and
loopne
repz
xchg
pushf
dec
dec
jns
aaa
jecxz
fsts
hlt
xor
xchg
xchg
test
and
imul
and
mov
xchg
cmpsb
or
pop
mov
insb
dec
xor
je
sbb
cld
test
fiadds
dec
loopne
adc
xchg
lock
test
je
movsb
lea
addl
xchg
sets
setge
push
or
test
lods
dec
dec
add
mov
lcall
push
pop
aaa
stos
stos
out
rorb
jo
mov
mov
cs
out
lahf
xchg
repnz
push
insl
aas
dec
stos
rclb
xlat
jl
fcomps
lods
add
xchg
pop
or
nop
pusha
imul
xor
push
adc
inc
repz
test
neg
sti
popa
ss
mov
xor
push
inc
cli
pop
cltd
mov
loope
loop
into
int
idivb
add
iret
fists
mov
sub
cmc
subl
mov
mov
fisttpl
jo
addr16
jae
xor
cmp
cwtl
cld
adc
and
and
movsl
jle
fwait
sbb
ret
push
js
clc
xchg
fcoms
or
dec
shrl
xor
cmp
ja
sahf
cmp
cwtl
inc
sub
add
sbb
adc
push
cld
or
xor
xchg
std
cltd
enter
popa
sar
inc
mov
enter
sahf
scas
pushf
sub
fisubrl
mov
mov
xlat
cmp
leave
lahf
loop
sbb
mov
loope
mov
mov
mov
fcmovnu
pop
lret
adc
jle
lea
inc
jo
xchg
pushf
cld
imul
outsl
push
cmp
aad
in
ret
mov
in
push
pop
cmp
cmp
out
adc
leave
mov
or
inc
jo
dec
jg
cmpsl
mov
sub
inc
mov
cmpsl
shlb
fcoms
ret
outsl
mov
or
xor
movd
imul
dec
push
mov
mov
pop
mov
scas
scas
mov
jbe
cwtl
in
stos
cmp
fs
fmull
outsb
xchg
movsb
sbb
hlt
inc
sub
jo
aas
outsl
icebp
jp
xchg
and
mov
pusha
jnp
out
and
cmpsl
xor
or
sarl
jl
fs
sahf
jae
rcr
jge
scas
insb
mov
xchg
test
stc
xchg
pop
fldl
or
or
loop
das
clc
mov
push
mov
lahf
pop
cltd
mov
nop
leave
xchg
inc
bound
gs
sbb
push
emms
out
add
aaa
enter
jl
fnstsw
xor
mov
cwtl
out
scas
push
int
cmp
ljmp
das
cs
stos
arpl
jb
int3
add
xor
int
std
movsb
dec
nop
dec
aad
jbe
roll
in
xchg
daa
movsl
cmc
dec
push
lock
inc
or
popl
in
dec
push
iret
repz
jle
adc
sub
cmp
imul
cld
test
js
and
imul
push
jns
clc
pop
in
mov
pop
push
sub
inc
dec
adc
es
dec
mov
xor
les
shl
stc
pushw
or
pop
push
xor
notl
mov
mov
mov
mov
fldcw
mov
jge
xor
mov
insb
push
or
xor
push
xchg
mov
loope
imul
mov
out
jns
rcl
pushf
fiaddl
nop
push
jle
lock
add
notl
cmp
fcompl
xchg
pop
xchg
pushf
sub
push
lret
mov
icebp
ja
outsl
add
std
sbb
mov
sbb
sub
mov
cli
inc
pop
pop
imul
rsqrtps
aas
fnsetpm(287
call
inc
pop
out
mov
out
and
popl
sub
rol
int3
xor
sarl
in
mov
xor
add
sti
pop
es
mov
rclb
mov
cld
dec
scas
fwait
hlt
rcll
mov
mov
ret
xlat
push
adc
push
int3
fnstsw
pop
shl
inc
cmc
hlt
and
xor
aam
mov
shrl
out
pop
into
cmp
push
push
je
pushf
push
sbb
rolb
fmuls
and
cmp
inc
lods
jbe
sbb
pop
inc
pop
mov
mov
test
xchg
scas
loopne
pop
cli
xchg
or
lock
cmp
cltd
or
add
test
daa
stos
incl
pop
jb
pop
out
gs
fwait
mov
push
subps
fsubrs
mov
incl
push
lea
daa
mov
enter
and
sbbl
push
and
nop
inc
push
cmp
jo
sar
ljmp
ja
sbb
add
jne
jecxz
pop
cmp
cmp
cwtl
std
je
lods
imulb
ficompl
mov
pop
fnstenv
stc
inc
fdivrl
xor
push
pushf
jnp
ss
push
fistpll
mov
cmp
add
in
mov
cmp
pusha
out
adc
cs
push
test
scas
dec
dec
in
stc
imul
dec
shlb
shr
push
cwtl
fistps
and
push
adc
faddl
push
inc
mov
jno
xchg
or
popa
in
lcall
incb
sti
cmpsb
dec
xchg
fbld
inc
cwtl
cmp
xchg
pop
cli
lea
sub
mov
sbb
imul
stc
mov
movsb
pusha
pop
mov
lahf
in
jo
cmp
loopne
je
sub
sti
aad
pop
cmp
and
aad
rclb
cmp
je
insb
popf
lcall
adc
lea
inc
js
cmp
mov
add
inc
lock
outsb
fdiv
clc
dec
fs
xor
arpl
dec
push
imul
push
pop
sub
into
ret
mov
jno
inc
xor
int
adc
or
or
xchg
pop
scas
insl
pop
movsl
dec
hlt
dec
inc
xor
xorb
hlt
mov
push
push
scas
in
add
popf
xchg
aad
mov
or
in
cltd
daa
push
sub
cli
decb
push
dec
dec
iret
xor
ret
push
dec
call
mov
jo
shrb
repnz
jge
jmp
jno
pop
mov
inc
xor
popf
stc
jnp
enter
outsl
pusha
or
mov
sub
divb
sub
aaa
add
aas
sub
pop
in
sbb
jecxz
fstl
ja
cmp
imulb
push
push
hlt
ss
shlb
mov
sub
in
lods
and
or
dec
lret
push
int
daa
lahf
repnz
or
addr16
jo
inc
pop
sub
adc
rep
loopne
add
or
pop
cmp
fisubl
jne
cmp
mov
pop
pop
aas
sbb
mov
mov
pop
sbb
mov
or
cld
and
adc
loope
mov
cli
dec
sbb
cld
shlb
push
ss
nop
pop
sti
int3
pop
mov
xchg
stc
cmpb
ja
pop
inc
orl
rcl
cwtl
outsl
jns
sub
pop
out
enter
mov
repnz
push
das
sbb
jne
mov
pop
popf
jmp
adc
stos
orb
in
shlb
outsl
mov
xor
add
dec
mov
aad
push
push
xor
xlat
nop
adc
mov
sub
cmp
adcl
mov
push
xor
mov
xchg
add
ret
mov
adc
fs
adc
fbstp
inc
jg
inc
scas
inc
sub
mov
cmc
mov
sbb
aam
scas
adc
push
cmpsl
data16
js
push
mov
fmull
jb
lock
jle
je
out
fbld
int3
outsb
mov
fimull
inc
xor
out
mov
jae
sbb
and
imul
pusha
imul
mov
xor
in
add
repz
jb
xor
adc
mov
aam
cld
mov
aad
xchg
lock
cmp
push
push
sbb
mov
stos
shlb
mov
out
mov
xor
pop
and
or
push
jbe
in
inc
xor
mov
in
hlt
es
mov
hlt
and
ja
cmp
mov
fstpl
pop
jae
inc
adc
int
or
mov
jo
add
push
mov
loop
sahf
jg
mov
and
lret
or
sbb
movsl
rorl
es
sub
jns
hlt
lock
or
adc
inc
inc
cmc
xchg
in
xor
shlb
inc
roll
loopne
push
fwait
jl
rcll
mov
testl
fwait
ret
ja
add
fdivr
inc
or
push
cmp
xor
fildl
aas
pop
rolb
push
jle
pop
dec
shrl
dec
out
push
test
adcl
or
or
inc
push
aam
cld
mov
leave
jge
arpl
pop
gs
xchg
icebp
xchg
sahf
aaa
mov
push
mov
cmp
pusha
aaa
daa
add
mov
cmp
daa
pop
push
jecxz
stc
and
inc
aam
out
jo
and
loope
lods
push
rcr
sbb
cmp
fidivs
repz
insb
push
int
inc
mov
mov
inc
repnz
loope
add
rcr
push
pop
incl
mov
leave
mov
jb
enter
mov
lahf
cmpsb
pop
pop
sahf
cmp
pop
pop
sbb
fwait
add
pop
call
pop
jecxz
rcrl
xchg
lea
not
xchg
add
xor
jae
cmpsl
push
call
aaa
sbb
adc
addr16
mov
into
into
pop
popa
es
xor
mov
cld
iret
pop
pop
inc
scas
loop
and
pop
mov
jmp
rorl
lahf
icebp
inc
out
inc
pop
lret
inc
in
xor
cmp
shll
sub
push
push
xor
mov
lock
flds
loop
or
imul
xchg
int3
mov
or
sub
inc
or
loopne
ret
stc
cltd
mov
dec
push
lret
jb
cld
icebp
sub
flds
cmp
cmc
pop
jge
fistps
and
pop
xor
dec
insb
aad
repz
xchg
enter
sbb
mov
xor
pop
fdivrs
jmp
xor
add
adc
mov
dec
pop
notb
test
fstpt
dec
mov
pop
mov
mov
arpl
and
repnz
mov
sbb
into
hlt
out
xor
push
mov
ja
lret
add
xor
xchg
sbb
shrb
xchg
jl
test
out
pop
adcl
cmpsb
cmp
sub
icebp
mov
push
xchg
dec
sbb
dec
loop
dec
xor
das
mov
cmpsb
stos
jno
push
or
call
lea
dec
scas
adc
and
cld
cli
push
orb
cmp
mov
cs
mov
movsl
subb
fidivs
sub
adc
test
insb
pop
mov
lods
xorl
xor
push
nop
and
xor
lock
or
push
movsl
jl
and
inc
push
sub
push
xchg
or
std
lcall
or
adc
lods
stos
out
ljmp
cs
hlt
push
mov
in
subb
mov
mov
inc
fstl
mov
ds
ljmp
push
and
in
shr
jbe
out
adc
sub
sub
out
xlat
add
cmp
push
add
sbb
cmp
faddp
popa
mov
popa
ret
sbb
xor
cmp
js
fcoms
xchg
movsb
stc
inc
mov
js
inc
daa
in
jge
ljmp
cmc
adc
and
jno
in
arpl
xor
jle
fistl
daa
pop
inc
jnp
pop
movsb
aad
jmp
imul
je
test
and
xchg
ljmp
add
and
or
pop
or
dec
ret
fadds
rol
out
pop
xlat
cmp
call
rclb
fsub
lret
xor
mov
mov
das
ret
shrb
pop
cs
sti
rolb
jnp
push
or
sbb
in
mov
mov
into
clc
cmc
cmp
push
add
lahf
push
adc
xchg
test
dec
sub
jmp
sti
or
faddl
push
mov
cld
into
adc
jae
fadd
lock
fdivs
insl
pop
popa
lea
in
sti
xchg
push
jmp
cs
fstpt
or
cld
push
add
sti
inc
sub
scas
mov
and
cmovno
repnz
mov
shll
adcb
int3
ud0
lcall
std
xchg
les
jns
fwait
xor
in
add
bound
push
and
add
add
cld
adc
jno
sbb
ret
sbb
shrl
sub
mov
xchg
clc
cli
xchg
lods
inc
loope
nop
in
fistpl
jnp
lret
sti
rep
or
fsincos
inc
nop
push
pop
sbb
sbb
mov
dec
dec
mov
mov
out
loop
mov
lahf
repz
fidivs
or
push
xchg
in
xchg
inc
sbb
idivl
mov
inc
dec
cmp
push
xchg
jo
cmp
jge
xor
push
fcompl
repz
xbegin
test
sub
fisttps
outsb
cs
and
xchg
adc
adc
push
jo
ficompl
jg
lods
or
mov
loope
mov
xchg
imul
inc
ret
subb
aam
adc
inc
pushf
roll
cmp
adc
leave
sub
xor
dec
xchg
and
push
cmp
inc
ss
addr16
pop
rcl
xlat
fisttpl
aaa
xchg
or
push
lods
insb
push
pop
test
dec
push
sbb
fstpl
sbbl
stc
imul
push
inc
loop
jo
xor
lret
sbb
das
shll
push
add
fprem
dec
out
pop
adc
jmp
cs
out
aam
or
pusha
dec
cmp
dec
jne
or
push
adc
push
pop
add
idiv
int3
xor
fmul
push
cmp
repz
push
mov
xchg
mov
shll
push
dec
lahf
fstps
sub
pop
enter
rol
lea
leave
xchg
rcll
push
mov
sub
inc
iret
sub
scas
sbb
sbb
pop
cmp
jae
ss
rcr
mov
loopne
out
inc
jle
sbbl
enter
cli
or
add
mov
add
loopne
movsb
adc
jmp
sti
sti
inc
inc
stc
xlat
inc
out
cli
pop
aaa
imul
add
ljmp
ret
enter
and
or
out
sbb
addl
or
pop
cmpsl
rolb
push
outsl
std
sahf
arpl
add
cmp
and
xor
in
add
jmp
adc
lock
push
ljmp
jecxz
adc
inc
ss
je
xchg
stc
int3
notl
jbe
dec
xchg
stos
aam
adc
das
jp
test
rclw
sti
mov
adc
in
clc
xchg
inc
jg
xor
frstor
ret
sbb
jnp
in
mov
pop
xlat
mov
adc
daa
les
push
dec
out
fdivrl
push
daa
fstpl
lods
out
lods
loopne
fildll
sub
sbb
pop
insl
loop
je
fimull
mov
pop
push
scas
push
dec
mov
and
push
stc
imul
out
mov
sbb
fs
cmc
adc
cld
jno
sbb
cmp
fadd
jmp
stc
push
ret
xchg
sub
cmp
push
jne
adc
mov
dec
fs
jnp
jae
into
rcll
add
mov
inc
pop
mov
mov
mov
pop
mov
cmpsl
or
scas
pop
lods
jnp
scas
scas
and
xchg
pop
xor
xchg
jge
cwtl
xchg
sarb
xchg
and
cli
popf
out
mov
push
insb
clc
add
aaa
mov
mov
lret
sbb
or
or
inc
mov
call
dec
jl
fldenv
xchg
aam
dec
loopne
test
aam
lahf
test
mov
xlat
dec
arpl
sbb
gs
je
repz
lods
jg
int
fndisi(8087
test
push
sahf
jbe
cmpl
cs
sub
sub
mov
jb
outsl
es
into
pop
inc
ret
pop
mov
mov
out
int3
xchg
orl
mov
jge
add
fwait
sub
jg
xor
push
push
push
push
push
inc
in
pmaxsw
mov
or
data16
out
adc
shl
add
out
xchg
xchg
inc
cmp
lock
add
loopne
lea
cmova
cld
mov
add
jns
call
roll
push
mov
inc
cmp
adc
add
loopne
ret
fisubrs
dec
call
sub
add
idivb
pop
mov
pop
dec
xlat
insl
das
rorb
fisttpl
push
out
mov
cmp
ja
mov
mov
sarl
sub
hlt
fbld
inc
cmovae
js
adc
dec
cmp
imul
dec
cmp
out
xchg
xchg
neg
sub
inc
mov
clc
adc
sbb
movsb
inc
aas
das
lcall
loope
xlat
cmp
sub
pop
push
push
pop
mov
pop
xlat
jl
dec
sbb
dec
or
cmp
repz
out
sarl
dec
ret
jp
push
push
mov
mov
inc
pop
dec
clc
lcall
repnz
pop
inc
fwait
mov
iret
inc
xchg
in
ja
push
add
or
dec
adc
nop
mov
inc
ss
ret
in
jle
dec
and
jno
loopne
sub
mov
inc
sub
test
lea
or
in
jle
jmp
adc
cmp
icebp
nop
insl
add
or
jns
fwait
and
ljmp
push
cmp
aas
push
and
icebp
jg
xor
fsubrs
sbb
lock
rcpps
into
lret
es
cmp
cmovge
bound
fisttpll
cmp
das
pop
int3
loope
pop
aas
scas
aam
xor
cmp
mov
pop
in
hlt
wrmsr
gs
cmpl
and
int3
sbb
sbb
mov
mov
ret
ss
mov
dec
ja
xchg
sub
rol
int3
out
sub
iret
push
mov
imul
jo
cmc
mov
adc
jmp
mov
lret
add
ret
push
mov
push
xor
and
or
push
out
mov
loope
or
sbb
xor
pop
sbb
push
lock
fidivs
mov
jl
jns
sub
xor
dec
notl
ret
ret
sub
fnstsw
lea
leave
in
lret
pop
iret
out
jb
lret
and
negl
out
xlat
jecxz
fisttpl
dec
sbb
lods
adc
jmp
ret
data16
hlt
cmp
xor
jge
fs
sbb
std
arpl
lea
add
idivl
loope
cmp
popf
inc
in
push
add
sbb
std
mov
dec
insl
loope
jns
loopne
dec
mov
mov
cmp
pop
fisubl
mov
rclb
xor
pmaxsw
lcall
push
mov
sub
dec
loop
push
or
pop
push
sarb
add
or
dec
inc
push
adc
push
orl
jmp
xchg
test
push
xor
outsl
test
inc
and
or
xor
leave
sbb
in
mov
sbb
aaa
mov
arpl
jno
out
inc
std
cs
pop
lret
mov
das
jle
xchg
dec
xor
cmp
loopne
jae
popf
or
jns
paddd
push
scas
test
cs
adc
frstor
sti
leave
cmp
lods
addr16
dec
lods
sub
xchg
in
repnz
xor
insb
cld
mov
jl
add
xlat
mov
lahf
in
dec
dec
rsm
mov
imul
ret
add
sbb
sbb
xor
jecxz
push
inc
pop
jmp
popf
hlt
rclb
sub
mov
xor
out
in
sub
das
lret
in
lea
adc
inc
jmp
das
je
ret
lret
shrb
nop
aam
or
les
int
filds
jg
dec
scas
adc
out
push
leave
push
inc
push
pop
pop
dec
fadds
pop
cmc
mull
stc
filds
mov
cmp
jecxz
jns
leave
mov
bound
cld
inc
add
push
mov
int3
or
in
sub
repnz
mov
out
clc
pusha
fcomip
aam
dec
jmp
imul
xor
pop
xchg
mov
sub
inc
lret
push
xchg
cwtl
pop
xchg
ja
int
dec
sbb
hlt
and
add
fists
xchg
in
jmp
pop
fsubrl
ja
mov
cmp
rorb
enter
cmpsl
cwtl
stos
cld
dec
ret
dec
arpl
xchg
or
pop
shll
insb
mov
insl
add
push
push
push
push
pop
hlt
std
aad
cltd
and
dec
mov
and
por
test
push
xor
imul
inc
sbb
data16
adc
add
lock
fistl
cmpl
insb
lea
in
dec
pop
stc
pushf
idivb
rcll
or
mov
and
lods
les
or
fmuls
bound
cmc
rdpmc
out
fldcw
fdivl
adc
dec
ljmp
shrl
push
dec
cmc
ljmp
stos
in
scas
aad
push
es
dec
mov
scas
jge,pt
addr16
jecxz
cmp
mov
mov
jl
inc
fimull
add
push
ja
rorb
mov
or
xchg
daa
mov
mov
in
movsl
addl
jne
mov
js
mov
mov
gs
adc
xor
xor
adc
mov
leave
std
repz
add
call
inc
dec
sub
in
inc
pop
fildll
cwtl
or
iret
adc
and
jne
jmp
lcall
in
movsb
and
les
mov
aaa
shlb
mov
loop
inc
loop
js
sub
dec
pushf
addr16
aaa
gs
scas
daa
fcompl
cmp
faddl
pop
mov
negb
inc
enter
xor
into
jmp
subl
mov
pop
pop
shlb
addr16
fwait
jno
jl
mov
aam
cmpxchg
or
push
push
adc
jecxz
pop
fistl
sbb
pop
in
add
out
jecxz
inc
nop
enter
cltd
xor
pop
or
add
sbb
cmp
fs
pop
or
sbb
inc
lahf
sbb
int3
push
leave
push
pusha
mov
faddl
in
adc
in
bound
sub
push
notb
jle
or
cld
cmpl
pop
xor
scas
adc
mov
loopne
paddw
jge
insb
call
jne
xor
addr16
sub
pusha
inc
push
push
push
mov
inc
repnz
dec
in
insb
mov
cmp
fucomi
or
scas
push
daa
mov
notb
aam
pop
fld
adc
xrelease
xchg
pop
sub
pop
cmp
pop
shr
xor
pusha
mov
dec
insb
sub
aas
cmp
aas
xor
pop
icebp
std
add
in
daa
stc
jl
push
adc
xchg
cli
jl
add
shrl
incl
sti
push
es
cs
or
aad
and
push
adc
idiv
int3
add
pop
add
fstps
dec
add
or
ja
jg
xchg
jmp
inc
adc
stos
mov
lret
clc
es
mov
inc
adc
mov
xchg
mov
sti
pop
push
fcomps
cltd
fsubrl
lock
aas
repz
insb
jl
mov
push
mov
sub
popf
mov
and
jle
jae
mov
inc
dec
dec
in
je
ja
cmc
cli
stos
shlb
pop
pusha
out
push
adc
pop
add
push
frstor
loope
dec
adc
dec
lahf
xchg
cld
and
dec
jb
sub
aad
mov
sbb
fadd
cld
mov
out
lret
sti
push
out
out
push
fidivrs
mov
aaa
xchg
call
pop
push
je
fists
test
lahf
daa
scas
dec
gs
stc
add
xor
inc
mov
insb
xor
fildll
arpl
clc
pop
sbb
dec
into
inc
test
push
ret
fnstenv
xor
lea
int
mov
sti
lock
or
mov
jl
iret
in
add
and
cmp
or
les
jp
pop
mov
adc
call
pop
leave
bnd
dec
cmp
mov
pop
lcall
sbb
out
cmp
fwait
jno
add
lcall
cmp
inc
cltd
outsl
das
pop
mov
divb
adc
lods
cli
jmp
repnz
aas
sub
daa
pop
pop
dec
cmpsl
cmpsb
test
lcall
or
mov
jg
sub
in
push
jno
in
shll
mov
lock
xchg
ficomps
lret
movsb
jbe
shrl
loopne
xlat
int
clc
ljmp
adc
in
mov
outsb
dec
stos
dec
inc
aaa
fsubs
push
stc
fadd
pop
sbb
les
mov
cvtpi2ps
dec
adc
jl
jmp
ljmp
leave
rcl
adc
pop
fidivs
lds
mov
add
test
mov
pop
cmp
sbb
mov
push
sub
inc
xor
das
fistpll
lock
mov
pop
inc
mov
or
push
cmp
push
xchg
fdiv
push
mov
icebp
sbb
scas
push
fdivrl
mov
test
or
xchg
xor
fcmovbe
dec
cld
cmp
jo
aad
cld
rcl
leave
pop
sarb
adc
or
jnp
aas
cmp
mov
dec
pushw
cmp
rcl
fdivrl
lods
mov
push
push
push
movsl
inc
ret
pop
pop
pusha
daa
push
fs
hlt
pop
adc
arpl
shlb
aas
sbbl
and
clc
inc
cmp
add
shrl
das
shrl
mov
sub
add
sub
pushf
lret
push
sti
push
add
jp
or
inc
ja
adc
inc
inc
aas
popa
jg
mov
in
mov
popa
xlat
pop
push
aas
das
inc
dec
in
cmc
xor
iret
cmc
ss
sbb
rcr
dec
sahf
push
scas
pop
adc
push
and
push
std
cmp
lahf
in
out
inc
pop
loop
pushf
or
xor
sbb
cli
cmp
or
out
xchg
hlt
cli
loopne
sub
fisttps
push
jae
push
insb
out
cwtl
std
lret
popf
jecxz
jnp
sti
xchg
dec
mov
sti
or
cmp
push
sti
lret
pop
les
add
sbb
imul
inc
aam
push
add
inc
fisubrs
in
mov
inc
or
xchg
xchg
rcrb
mov
jnp
scas
cmp
jp
mov
pop
adc
xlat
fisubs
sbb
jbe
sub
repnz
ljmp
das
and
add
sti
lret
cmp
push
filds
addr16
pusha
out
pop
icebp
sub
cmp
nop
fwait
mov
adc
fcmovb
pop
outsl
xor
mov
dec
dec
cmp
or
dec
out
inc
rorl
jae
adc
cmc
div
mov
fwait
xchg
jnp
adc
hlt
flds
movsl
lahf
sub
pop
jb
jg
cmpb
jo
jae
and
leave
adc
cmp
test
int3
push
lea
in
arpl
testb
jecxz
loope
mov
in
cmc
xchg
arpl
sarl
arpl
je
jne
jo
mov
push
outsl
outsl
repnz
pop
notl
or
sub
aaa
push
in
std
or
xchg
mov
aad
es
shl
and
mov
ds
inc
sub
inc
jnp
adc
push
xor
cmp
add
inc
adc
jmp
jmp
outsb
lock
lock
dec
fsubrs
clc
add
lcall
repz
and
fildll
push
les
lods
cmp
jg
aam
aam
or
mov
movsl
inc
sbb
cmp
mov
repz
and
pop
aas
xor
mov
dec
xchg
xchg
sar
mul
sar
cltd
sbb
fiaddl
aad
pushf
adc
cmc
cld
das
dec
loope
sahf
add
sbb
mov
pop
mov
scas
pushf
in
sbb
dec
sub
add
push
cmp
jne
call
lods
xchg
dec
and
sbb
or
sbb
pop
fs
outsl
mov
mov
mov
clc
imul
daa
sbb
jnp
in
cmpsl
clc
xchg
mov
adc
lret
xchg
cmp
sti
xor
addr16
clc
sti
stc
dec
pushf
lock
xor
inc
jns
and
aas
mov
add
sbb
pop
gs
sahf
lods
fimull
inc
leave
add
cmpsb
lods
xor
xor
mov
xchg
lea
sub
ret
clc
inc
test
ds
xchg
test
and
sbb
enter
inc
push
aam
in
lock
arpl
std
mov
inc
push
mov
clc
jmp
inc
add
mov
cmpl
aam
sahf
dec
pop
in
fcmovnbe
jbe
fcomi
push
pop
adc
ja
lea
sub
fmul
mov
cmp
xor
sbb
imul
or
rorb
mov
mov
sbb
mov
push
sub
push
inc
leave
daa
call
cmpsl
popf
sub
daa
aaa
cmp
dec
cld
fistl
push
xchg
sbb
pop
adc
cltd
inc
pusha
iret
xorb
dec
push
loope
sbb
and
adc
repz
cmpsl
sbb
inc
lret
xchg
add
or
aad
xorb
imul
iret
lock
dec
in
loop
cs
fwait
sbb
and
mov
xor
lret
xchg
cmpsb
and
mov
mov
inc
and
adc
sub
outsb
loopne
inc
sbb
mov
mov
or
cli
fdivrs
mov
cmc
adc
or
call
imulb
ja
xor
mov
push
lods
xor
push
imul
insb
stos
cld
aaa
mov
stc
jmp
dec
adc
arpl
mov
inc
or
xlat
push
mov
add
jnp
mov
push
enter
or
or
movsb
and
dec
shlb
add
push
sub
enter
mov
daa
pop
aam
sarb
pushf
pop
cmp
adc
cwtl
cmp
mov
out
cmp
jle
out
stos
sbb
repz
push
lods
cmp
lret
fadds
aam
icebp
addr16
scas
fs
mov
fucom
and
imul
out
lcall
movsb
inc
pushf
jl
pop
out
and
cmc
xor
out
mov
jnp
mov
lock
cmc
es
dec
je
test
insl
and
jne
lock
rolb
mov
lock
jb
insl
pop
in
adc
add
or
rcll
test
sbb
out
imul
leave
sbb
arpl
sahf
repz
cli
sbb
mov
aaa
test
lcall
sub
les
add
lods
iret
xchg
nop
call
shl
shl
fwait
adc
addb
pop
sub
mov
lods
mov
das
cmp
inc
add
xchg
cli
mov
add
shl
xchg
inc
lds
aas
jge
cmp
jle
pop
mov
push
jnp
scas
call
repz
pop
xlat
call
and
inc
rclb
add
in
jp
dec
fs
push
insb
fisubl
jge
sub
dec
push
xor
dec
mov
xor
mov
adc
iret
pop
add
clc
clc
or
cld
cmp
out
stos
leave
jb
or
mov
stos
inc
lret
jle
iret
aaa
into
mov
jns
ljmp
ja
adc
xlat
adc
adc
int3
mov
sti
sub
pop
aam
out
add
and
stos
jmp
std
adc
cmc
lahf
fistl
clc
cmp
or
sbb
or
test
jmp
aas
push
adc
mov
sbb
fldl
test
adc
inc
mov
xchg
jno
jne
leave
mov
sbb
cli
loopne
pop
fisubrs
adc
mov
adc
or
loop
inc
call
dec
cmpsl
dec
adcl
xor
subl
mov
adc
mov
fistps
sub
shl
add
xor
in
ficomps
lret
ljmp
aaa
imul
pop
jo
cmp
idiv
loop
jmp
xchg
clc
jmp
push
cmc
pusha
dec
ljmp
sahf
adc
pop
mov
sub
fiadds
outsl
lods
push
shr
lock
insb
jge
cmp
xor
stc
cmpb
fsqrt
inc
and
inc
mov
jo
add
lea
jnp
in
loop
xchg
aam
dec
adc
rcr
aad
ret
cmpsb
inc
cli
push
dec
fstpt
mov
es
ret
daa
out
xor
stc
imul
push
mov
lds
and
sbb
mov
adc
jae
hlt
repz
rcl
push
out
cmp
jno
push
pushf
repnz
inc
mov
mov
movsb
mov
cmp
loopne
cld
loope
fs
adc
and
pop
hlt
push
jp
ficomps
add
jmp
arpl
add
jmp
add
xor
ja
jecxz
sub
dec
jge
sbb
inc
rep
add
mov
pop
sub
push
push
or
inc
push
mov
mov
iret
out
add
push
adc
push
clc
cmp
jbe
adc
cltd
fildl
sbb
out
jb
shll
movsl
ss
nop
bound
sbb
pop
or
fsubrl
pop
jge
sbb
call
dec
cli
and
push
or
sbbl
notl
in
sub
pop
pop
dec
push
shrb
fcomi
fnstcw
shl
mov
filds
adc
jp
adc
sti
inc
out
mov
int
mov
mov
jb
push
sbb
lock
clc
ret
mov
xor
negl
faddl
repnz
xchg
fdivs
jae
xcrypt-ctr
cmpsl
fsts
out
arpl
aad
icebp
dec
xchg
test
aaa
push
and
lahf
mov
ja
mov
mov
inc
adc
mov
call
add
aad
sub
or
call
cmc
pop
cmp
dec
sti
ret
sub
or
push
test
sti
mov
testl
adcl
idivl
fs
xor
adc
cld
inc
mov
pop
lahf
ljmp
mov
pop
mov
insl
push
insb
push
pop
inc
test
xor
std
jnp
and
in
or
pop
dec
movsl
lods
mov
and
scas
stc
mov
sbb
sbb
out
ds
mov
into
int3
stos
jge
mov
inc
dec
mov
jae
das
xor
sub
addr16
cmp
int
sbb
mov
push
xchg
out
or
inc
pushf
repnz
add
or
fs
test
mov
lock
scas
mov
enter
std
loop
xor
cwtl
mov
loope
aaa
leave
ljmp
dec
jl
fiadds
int3
or
imulb
mov
jecxz
in
cmpsb
jmp
xor
fnstcw
push
inc
jg
shl
xchg
mov
ds
xlat
or
push
loopew
ss
xlat
mov
hlt
dec
inc
cmpsl
mov
scas
mov
pop
xlat
loop
test
shll
daa
incb
aam
cmp
and
shlb
daa
mov
cmpsl
xor
pop
sbb
pop
xchg
push
test
adc
shll
mov
dec
stc
add
lods
hlt
rcrl
push
out
pop
push
push
imul
jns
sbb
mov
dec
xor
cmpsb
jle
mov
or
test
lret
lods
adc
std
sbb
sti
mov
mov
jecxz
daa
and
out
das
jge
outsb
jae
les
push
out
fcmovnu
cmc
imul
mov
mov
and
aam
push
aad
push
popl
std
hlt
in
repz
icebp
mov
lret
push
ret
pop
add
sbb
outsl
pushf
insb
sub
sbb
daa
sbb
pop
jle
jnp
inc
negb
xchg
dec
es
add
jecxz
jne
mov
mov
sti
pusha
push
ret
sbb
jno
xor
mov
sahf
aam
cli
lcall
cli
pop
sub
stos
ljmp
scas
insl
cmp
cld
xchg
cmp
or
mov
mov
ficomps
sahf
aaa
mov
test
ja
out
or
and
cmpl
push
push
cmpsb
sub
ficoms
dec
push
daa
test
lret
inc
adc
addr16
pop
rol
cltd
and
inc
pop
pop
add
out
mov
repnz
lock
mov
out
jl
inc
push
into
fwait
sti
sarb
aas
dec
cmp
fdivrl
push
pop
scas
repz
subb
add
testb
stos
insl
or
xchg
and
loope
sahf
xchg
dec
hlt
push
mov
scas
and
clc
in
lahf
inc
cld
and
insl
jbe
mov
sub
push
jo
out
push
test
bound
pop
insl
div
mov
std
mov
outsl
scas
push
sbb
sarb
mov
mov
fdivl
lock
inc
mov
inc
loopne
cmp
aas
push
rdpmc
sbb
out
or
push
lods
pop
jl
iret
mov
dec
sub
or
pop
cmpsb
cltd
xchg
decl
shll
push
lock
in
insl
push
orb
mov
idivl
xchg
or
aas
mov
cmpb
mov
jbe
jae
repz
adc
pop
in
xor
repnz
iret
pop
clc
jb
mov
icebp
mov
loop
mov
fwait
orl
and
mov
test
sbb
jns
and
push
or
scas
das
mov
push
iret
push
into
adc
and
movsb
jp
pop
test
mov
sub
mov
adc
xor
movsb
sahf
bound
loop
lret
pop
movsl
pop
pop
jo
stc
adc
mov
xlat
movlhps
fstpt
les
popf
ljmp
push
cmp
mov
hlt
pop
and
sbb
or
sbb
dec
stc
test
ret
cmp
in
xor
mov
arpl
inc
outsb
fistpll
loop
pop
cmp
in
cs
inc
dec
xor
mov
push
outsb
mov
pop
push
mov
sub
aad
aam
inc
and
sub
icebp
div
sahf
dec
ret
daa
push
ret
sarl
push
sub
shl
inc
sub
sbb
sbb
sbb
stos
push
jno
lods
in
sbb
sub
loop
mov
push
mov
dec
arpl
adc
repnz
subl
cmovb
out
sub
sub
aam
pop
aaa
int
xchg
mov
fadds
jns
popf
lcall
jge
xlat
jnp
mov
jb
add
cmp
arpl
lcall
dec
aam
leave
cltd
or
jmp
neg
mov
xchg
out
adc
hlt
inc
xor
inc
jne
call
push
fnstenv
sbb
call
sub
mov
cld
jg
cmc
dec
imul
xchg
pop
pop
stos
mov
mov
sbb
cltd
cmc
xor
mov
imul
hlt
call
mov
cmc
jmp
imul
notb
aad
scas
add
enter
adc
mov
addr16
lret
sub
aad
in
xor
inc
sarb
aas
enter
inc
push
scas
or
aam
fsubl
push
sahf
add
sti
daa
scas
ret
stos
jg
sti
daa
fidivs
or
xor
stos
jecxz
jecxz
cmp
stos
add
xlat
lods
aas
cld
push
adc
test
cld
jp
out
pusha
xchg
push
fwait
cmp
push
push
inc
pop
pop
adc
loope
pop
sub
int3
pop
cli
add
es
int3
arpl
push
das
inc
adc
push
lock
cmp
sub
or
fwait
cld
aas
cmpsl
int3
pop
cld
dec
clc
sbb
in
cmp
cli
push
push
dec
inc
pop
jmp
inc
sub
pop
stc
mov
mov
shrb
shlb
mov
push
xchg
ficompl
lret
xchg
orl
xor
das
ljmp
cltd
adcl
sbbl
loopne
xor
mov
pop
popa
dec
cmc
pop
xchg
sbb
sarl
rclb
push
push
cmp
dec
jl
lds
sti
sub
sub
fldt
mov
jp
test
or
or
and
dec
enter
rorb
mov
cmp
imul
sbbl
adc
push
adc
xor
stc
ss
movsl
pusha
xor
cmp
pop
aam
mov
adc
lds
cli
sahf
call
in
or
sbb
add
and
xor
mov
out
inc
xor
dec
repz
hlt
cmp
pop
lea
lods
fcoms
lcall
push
pop
ret
loop
xorl
dec
dec
jecxz
pop
adc
push
sbb
lock
inc
cld
add
xor
push
jecxz
fistps
fisubs
test
sti
xchg
mov
xor
sbb
aas
lcall
adc
lret
fsub
pop
push
push
jo
mov
pop
add
add
cmpsb
dec
push
into
mov
loop
or
out
orl
fbld
xor
cmc
cmp
or
jp
push
push
adc
enter
inc
jmp
fwait
iret
push
shlb
inc
scas
pop
sbb
or
and
out
bswap
xor
add
pop
or
frstpm(287
shlb
into
push
std
stc
sbb
jmp
jmp
xchg
int3
dec
lcall
loope
js
push
mov
pushf
or
lahf
jl
nop
add
pop
pop
popf
inc
or
hlt
dec
popa
xlat
sti
inc
jmp
cld
out
repz
sbb
int3
and
aaa
dec
cltd
mov
mov
xlat
xlat
es
fnstcw
mov
fcomi
jmp
out
inc
and
enter
call
mov
mov
jecxz
jmp
push
jmp
xor
pop
pop
aaa
mov
or
pop
negb
out
invd
sti
mov
sub
cld
fcmovnu
nop
ret
divl
jge
rcrl
les
in
cmc
inc
pusha
push
jmp
sbb
shrb
add
mov
fmul
adc
stos
or
imul
lods
ror
mov
out
lods
push
adc
and
scas
pop
scas
clc
lods
pop
mov
push
push
es
cld
jae
movsb
dec
or
repnz
rcr
aaa
shrl
in
sub
push
mov
cmp
xchg
push
stc
cmc
xchg
cld
scas
mov
sbb
pop
aad
fs
hlt
fnstenv
fmull
inc
push
adc
xor
cmp
mov
sub
stc
pop
repz
jbe
inc
add
ja
mov
ret
mov
and
mov
lods
pop
jae
pushf
aad
jmp
stc
and
push
aad
fildll
push
push
pop
jo
movsl
ja
mov
dec
push
cmp
adc
clc
out
pop
sbb
push
das
insl
leave
pop
cmpsl
mov
icebp
insl
test
inc
loop
inc
loopne
xor
push
jl
loop,pn
add
xchg
ljmp
jle
ja
cmc
cmp
cmp
test
sti
loop
arpl
and
jns
movsb
sub
nop
jns
jno
jl
cmp
mov
int3
ret
push
xor
mov
cmp
in
push
out
in
jne
fcoms
add
clc
inc
mov
push
mov
cli
mov
push
shl
daa
or
sti
mov
pop
mov
arpl
or
pop
mov
jno
xor
add
imulb
out
pop
pop
dec
movsb
arpl
idiv
mov
das
push
jns
clc
out
shrl
lcall
and
xchg
test
jecxz
fwait
imul
popa
arpl
cmp
xchg
and
add
push
test
negb
xor
fstpl
shrb
push
dec
jmp
cwtl
lds
inc
movsl
je
movsb
xchg
pusha
aad
jge
cmp
mov
out
mov
push
je
arpl
mov
jb
stc
aas
push
lahf
nop
lret
daa
flds
das
pop
icebp
imul
mov
pop
lock
mov
jnp
mov
mov
push
mov
add
jb
outsl
pop
pop
icebp
mov
mov
cmp
push
mov
fstpl
and
add
icebp
add
fwait
outsl
lods
pop
mov
movsb
lock
xchg
push
push
or
dec
dec
cmp
in
jle
dec
in
testb
pop
push
cld
cmp
ss
add
dec
cmp
push
fchs
cmc
jno
loope
cwtl
adc
cs
inc
out
and
fs
inc
cmpsl
mov
sbb
fistl
mov
xor
jle
push
fisubrl
dec
push
lds
xchg
test
jo
inc
iret
lcall
out
inc
and
xor
arpl
sub
fincstp
mov
lock
cmp
cmp
mov
int3
les
mov
mov
push
filds
scas
mov
adc
sahf
xor
pop
nop
nop
aam
addl
push
gs
cmc
adc
out
into
loopne
imul
push
xor
dec
lcall
xchg
sar
les
and
fwait
sbb
arpl
fldcw
int
or
cmp
clc
fists
test
bnd
test
js
xor
insb
dec
and
fdiv
fildl
or
jecxz
cmpsb
scas
lea
jbe
fiadds
jp
dec
loop
jle
mov
arpl
pop
mov
rorb
cmc
or
inc
mov
mov
std
pop
std
inc
loope
sub
pop
or
ss
cld
loop
insb
test
lods
cmp
push
mov
aaa
adc
xchg
shr
shll
loop
xchg
in
push
call
daa
testl
push
ret
fcoms
or
repz
stos
xor
fldlg2
in
or
cmp
push
popa
or
mov
ficoml
aaa
shll
push
sbb
enter
pop
mov
out
mov
mov
mov
xchg
mov
cwtl
xchg
paddusw
sahf
clc
test
add
sub
mov
lock
jg
ret
flds
out
jb
stos
and
loope
insl
or
mov
lods
xchg
xchg
jae
into
fcmovnu
mov
cld
pop
lods
dec
lods
lret
mov
jecxz
inc
cmp
cli
cmp
int3
mul
divl
mov
push
or
dec
jge
into
adc
std
mov
repz
or
jno
cmp
mov
and
push
sub
sbb
inc
lea
lret
mov
ja
sub
mov
mov
pop
pop
out
outsb
inc
adc
xor
pop
js
and
mov
sub
loopne
add
sbb
jge
call
sti
pop
xchg
mov
pop
push
scas
enter
adc
xchg
sub
test
inc
or
nop
mov
jmp
push
jecxz
popa
cmp
hlt
ret
mov
pop
testb
mov
inc
add
out
mov
add
out
icebp
lock
push
iret
or
dec
idivb
sahf
loopne
cmp
jg
mov
mov
lret
dec
xchg
out
scas
pop
xor
push
rorl
repz
rorb
lcall
jno
mov
fistl
in
sar
aam
dec
sbb
xlat
loope
mov
int
xchg
mov
stos
push
adc
mov
pop
out
and
xor
jmp
jbe
jb
ljmp
and
lahf
pop
ffreep
arpl
mov
push
sbb
xor
add
shr
sbb
roll
pop
out
int
jae
out
jae
cmp
adc
clc
leave
sub
sahf
repz
pop
ljmp
xlat
and
cmpsb
push
stc
pop
ret
xorb
dec
mov
or
xor
icebp
adc
cmpsl
ljmp
mov
fdivl
mov
sbb
data16
inc
mov
fcmovnb
imulb
push
xor
aam
ret
xor
and
xor
loop
arpl
fcoml
rcrl
imulb
int
int
xlat
fmull
fwait
int3
leave
pop
jae
adc
aam
das
xchg
cld
push
int
push
sbb
push
mov
outsb
xchg
cmp
cmpb
xchg
sti
not
leave
jp
xchg
push
call
fiaddl
addr16
mov
inc
jb
lcall
arpl
cs
data16
ljmp
andl
ss
xchg
ljmp
sub
call
insb
insl
add
push
sbbb
mov
pop
jecxz
dec
aam
jmp
fimull
sbb
loope
icebp
out
in
jge
aad
into
add
mov
repz
ljmp
mov
mov
inc
jo
lret
int
add
xchg
fidivrl
mov
push
push
jmp
mov
scas
lock
das
stos
cmpsl
mov
xor
lret
je
sub
mov
rcll
inc
mov
adc
in
push
shll
sbb
add
mov
in
fdivrs
testl
add
fcom
jne
loop
and
insb
fdivr
inc
mov
aaa
fs
inc
fucomp
dec
mov
cmpsb
push
sub
int
xor
or
dec
mov
dec
sbb
test
or
dec
sbb
adc
fiadds
jae
scas
test
mov
shll
push
lea
loope
pop
lret
das
aam
sub
je
clc
or
cmc
adc
cmp
xor
jb
push
mov
int3
std
mov
repz
imul
sbb
cli
sub
or
in
mov
aas
bound
sub
pop
cmp
lock
fcomps
or
mov
mov
push
add
aad
incl
jne
jbe
outsb
addr16
mov
xor
xchg
jle
adc
jl
jg
lea
xchg
hlt
push
das
std
xlat
out
cmc
aaa
sub
and
js
rclb
scas
ret
ret
jo
clc
xchg
pop
iret
adc
inc
data16
test
push
fmuls
pop
mov
push
dec
fsub
mov
clc
sbb
sbb
jnp,pn
loope
loopne
dec
nop
arpl
mov
push
out
jp
add
push
lahf
sub
jp
inc
jne
cltd
out
inc
mov
cli
sbb
cmp
adc
aam
sarl
aad
int3
out
popf
in
or
adc
into
aad
fnsave
mov
add
fstps
dec
xchg
aas
shl
dec
scas
inc
mov
lods
add
pop
les
or
enter
jbe
fwait
jns
cmp
mov
sbb
xchg
scas
add
mov
xor
int
sbb
bound
push
xlat
or
or
aas
inc
stos
mov
add
pop
xor
pop
outsl
andb
ret
and
adc
cmp
ret
and
ljmp
int
jnp
fwait
jge
dec
pusha
int3
aad
mov
sarb
adc
movsb
dec
cmpsl
lds
xchg
mov
pop
std
jle
jg
mov
loope
xor
jge
xchg
mov
aad
lea
dec
stos
das
push
stc
scas
dec
ja
out
push
hlt
loop
rol
push
leave
dec
test
xchg
xlat
out
sbb
cmp
cmp
imul
roll
insl
lods
jns
jo
mov
rol
mov
sbb
adc
adc
mov
testl
int
pusha
mov
divb
mov
sub
mov
rclb
sti
dec
js
add
xchg
push
push
xchg
mov
gs
jg
scas
loop
std
daa
fcom
outsl
repz
xor
je
rcrl
aaa
mov
mov
scas
fdivs
and
cli
or
add
xchg
lea
enter
icebp
and
mov
addr16
sub
mov
icebp
and
or
jge
sti
les
fdivp
pop
mov
jo
add
push
or
sbb
xlat
roll
pop
out
sub
dec
aam
jge
and
pusha
std
aaa
test
mov
in
popf
sbb
xor
jnp
xchg
leave
push
add
sahf
pop
mov
mov
or
adc
out
mov
fistpl
pop
add
mov
insl
pop
adc
shl
jmp
push
mov
pop
inc
lea
cld
mov
loopne
jmp
outsl
xchg
push
mov
or
outsl
inc
mov
mov
clc
mov
jo
repnz
cmp
loopne
fcoms
fdiv
push
add
sti
ret
jo
ret
ds
cwtl
cmpsl
aad
push
xlat
out
inc
pop
or
push
adc
enter
mov
cs
push
jmp
mov
imul
push
bnd
cmp
pop
fsts
push
sbb
int
xor
divb
in
stos
xchg
lcall
jb
mov
mov
cs
jnp
adc
mov
lock
pop
repnz
sbb
sahf
aad
sub
pop
lds
dec
ret
cmp
dec
loopne
repnz
jae
mov
xchg
sbb
in
es
scas
sbb
test
xchg
lock
xor
adc
and
andl
sbb
push
iret
xor
mov
cmp
pop
pop
dec
movsl
lcall
cmp
adc
rorl
mov
mov
inc
jge
jne
fisttps
scas
and
add
adc
scas
rolb
dec
cmpsl
mov
adcb
mov
jle
mov
hlt
xchg
rorb
fmuls
cmp
fwait
sbb
inc
adc
call
xor
or
cmpsb
mov
rol
gs
sub
ljmp
xor
mov
cmp
mov
add
sbb
push
testb
stos
lahf
lds
out
div
shlb
mov
call
jg
rorl
mov
sti
jo
xchg
xchg
mov
xchg
push
loope
out
adcb
mov
fs
inc
cld
dec
pop
sti
das
aam
xchg
xor
jl
repz
adc
add
mov
cmp
add
xchg
xchg
sbb
ljmp
in
push
mov
mov
arpl
xchg
jno
pop
imul
ljmp
or
in
scas
xchg
inc
sub
stos
pop
sbb
jb
test
test
inc
mov
jbe
jmp
test
jno
and
mov
inc
in
cmc
mov
and
scas
cltd
push
mov
sub
jbe
fmuls
xchg
aam
aad
xchg
clc
mov
dec
push
jo
or
jnp
pop
lods
js
fcmovne
in
cmpl
cmp
cmc
addr16
lods
sub
fnsave
mov
cmpsb
lea
inc
dec
mov
jecxz
add
cmp
jecxz
mov
mov
add
out
sub
lahf
push
je
ja
in
fildll
adc
jno
push
repz
hlt
sbb
dec
jg
xchg
fildl
dec
sarb
cmp
or
mov
das
jle
popa
ret
pop
push
sub
aas
adc
push
xlat
in
mov
loopne
xchg
test
scas
je
xchg
jae
mov
push
rorl
aad
das
cmpsb
cmp
push
sbb
ja
cwtl
add
aas
jge
cmc
push
mov
out
jns
pop
dec
mov
out
popf
mov
lahf
mov
arpl
dec
test
rcr
cmp
out
inc
cs
fsts
sti
dec
test
aad
mov
xchg
cld
in
imul
inc
cmpsb
test
or
jl
push
adc
xor
fmul
sub
cli
testl
pusha
test
jnp
dec
sub
inc
nop
bound
or
mov
test
push
add
mov
pop
mov
ds
inc
adc
add
xorb
daa
push
cmp
dec
xor
bound
lret
sub
mov
iret
and
cld
ja
cltd
cmc
cmp
jbe
out
push
push
inc
popa
push
in
das
insb
push
test
fnstenv
jbe
movsl
popf
test
outsl
jno
jne
mov
or
dec
fistps
lock
mov
cmc
pop
jne
fiaddl
mov
sub
mov
decl
dec
fdivrs
icebp
rcr
pop
cmp
xchg
cld
loope
hlt
scas
or
popl
lcall
mov
popa
add
dec
or
leave
in
into
push
fistps
loop
andl
subl
and
out
and
stos
cmp
test
add
and
sbb
and
pop
cmp
in
jecxz
repnz
das
cmp
adc
pop
ljmp
packsswb
rorl
add
cmc
rcrl
inc
push
xor
cs
add
into
pop
into
imul
iret
aaa
imul
test
imul
ret
sub
pushf
popa
test
sub
aas
or
cmc
sub
les
shrb
xor
les
mov
push
mov
std
mov
push
push
lock
pop
cmc
push
mov
jo
mov
pop
das
loopne
notl
popa
ljmp
shrl
jle
out
xchg
xchg
popf
inc
rolb
inc
clc
fnstsw
xchg
cmp
rorl
or
mov
jge
xchg
leave
xchg
pushf
es
jns
stos
jle
shl
shlb
push
mov
mov
xchg
dec
cltd
out
xchg
lock
lods
jo
loope
add
sbb
out
xor
pop
lcall
popf
shrl
adc
les
aam
xlat
mov
int
xlat
cld
adc
adc
fsubl
xor
shlb
xchg
out
fcomp
idivl
je
icebp
inc
lret
inc
xor
add
gs
xchg
adc
or
addr16
js
test
clc
daa
pop
jge
fildl
mov
pop
cmpl
xchg
cmp
mov
movl
xorl
sbb
mov
xchg
xchg
or
out
jbe
addl
aad
mov
jae
mov
fdivp
repnz
mov
sti
andb
adc
push
sub
or
jo
xor
and
fdivl
add
mov
or
ret
xchg
in
aam
inc
lds
lea
outsl
int3
fisubl
pushf
mov
daa
sbb
push
popa
xor
push
arpl
xor
push
out
rclb
pop
cld
ja
mul
sub
cmp
mov
pop
mov
xor
jae
imulb
xor
mov
mov
pop
mov
mov
std
aas
lcall
aas
mov
out
push
cmp
sub
mov
dec
insl
mov
out
dec
imull
dec
insb
sahf
inc
out
push
mov
fistpll
push
cld
out
leave
mov
cs
dec
subb
aad
sub
sbb
mov
rcll
in
cmp
lea
shl
xor
into
push
xchg
sub
jg
cld
fcmovnbe
mov
xlat
nop
push
out
sub
cld
and
lcall
jp
and
dec
pop
inc
subb
xchg
pusha
xchg
stos
sahf
lods
sub
xlat
mov
rcr
nop
adc
hlt
rorb
les
test
push
mov
inc
pop
aaa
cmc
leave
lods
cmc
cmpsl
xchg
cmp
ja
sbb
mov
add
jp
or
insl
in
dec
lock
jne
mov
in
mov
or
frstor
das
lock
xor
xchg
cmc
dec
popa
mov
cltd
xlat
sbb
fcoms
ds
push
fdivl
rol
ret
icebp
dec
mov
adc
pop
icebp
clc
mov
add
testb
mov
cli
ds
repz
clc
jae
xor
lahf
mov
sarb
aas
shl
adc
dec
aad
jne
sub
fcmovnbe
pop
ss
lods
lret
jge
out
mov
and
xlat
push
adc
rcrl
xchg
repz
sbb
sarb
dec
lcall
sub
icebp
addb
icebp
dec
lods
mov
hlt
xchg
aad
ja
pmaddwd
insb
aad
add
pusha
shl
mov
inc
daa
roll
jle
mov
inc
fcomp
out
push
mov
or
mov
mov
loopne
push
push
xor
pop
mov
das
cli
dec
ret
shll
cmp
je
aas
jl
mov
or
sbb
stos
mov
adc
mov
add
mov
sbb
add
dec
mov
inc
mov
lahf
stc
fcmovne
xchg
dec
dec
xorb
imul
popl
jno
mov
aaa
mov
push
pop
fdivl
mov
dec
insl
arpl
pop
faddl
sti
inc
inc
cmc
out
in
cld
add
in
scas
mov
push
push
push
push
pushf
push
mov
adc
dec
jb
pop
test
dec
les
bound
out
pop
out
or
xchg
rclb
sub
sti
xchg
pop
into
inc
or
imul
roll
ficoms
je
sbb
jo
rcl
aaa
sbb
jo
fnsave
push
lds
cltd
in
call
pop
inc
and
add
cmp
mov
push
fwait
out
sbb
mov
out
repnz
cmpsb
cwtl
dec
out
jae
mov
aaa
inc
mov
movsb
ret
cmp
jae
mov
fwait
dec
adcl
sbb
mov
push
push
adc
adc
xor
mov
or
outsl
imul
adc
repz
sub
dec
test
xchg
fs
and
lds
push
outsl
cmpsb
fdiv
rolb
lret
and
cmp
jg
cmp
movsl
aaa
push
jae
repnz
xor
inc
dec
ljmp
arpl
push
insl
sbb
mov
repnz
scas
sti
sub
je
mov
hlt
nop
lret
clc
test
fnstenv
out
jae
mov
xor
int
pop
mov
push
ljmp
movsl
std
pop
cmp
pusha
aam
addr16
xchg
idiv
fwait
jae
cmp
sub
and
sarl
mov
add
loopne
cmp
cmp
cmc
cld
add
popa
aad
stmxcsr
std
bnd
push
mov
clc
shll
xor
push
rclb
out
sbb
pop
pusha
lods
enter
cld
sub
enter
pop
into
clc
test
cmc
and
shll
enter
pop
inc
neg
movl
xlat
ret
push
lods
xor
ja
sbb
aam
das
cmp
push
jb
in
cmp
pop
icebp
pop
adc
cmpsl
push
pop
push
xchg
orb
adc
fcoms
pop
dec
cmpsl
xorb
stc
mov
xchg
jmp
cmp
scas
push
bound
xchg
sbb
sahf
loopne
and
add
cmc
sbb
lock
mov
jle
jp
imul
fistpl
xchg
enter
add
shrl
out
addr16
mov
or
lock
rcrb
adc
dec
ret
test
popl
adc
imul
hlt
mov
adc
pop
mov
insl
jp
jnp
pop
mov
fisubl
or
adc
push
cmpsb
push
mov
fisttps
pop
xor
mov
divl
imul
es
sbbl
addr16
sub
cmc
loopne
fildl
sub
stos
pop
cmc
mov
popl
lret
in
xchg
data16
imul
rcrl
icebp
pop
cmp
insb
pushf
in
imul
push
cmp
stc
out
mov
cld
and
mov
push
icebp
sub
cmpsl
mov
pop
push
inc
insb
cs
ja
mov
mov
or
xchg
xchg
lods
daa
stc
mov
jnp
push
sti
jnp
xchg
fcomip
popf
xor
mov
xchg
fsubs
enter
inc
into
lock
mov
sbb
cltd
push
mov
lahf
movsb
stc
cmpsl
mov
sahf
xchg
push
cld
test
lods
adc
cmp
dec
mov
cmp
mov
in
out
add
fcmovb
ss
das
icebp
flds
icebp
test
and
jp
divb
push
stos
in
sbb
loope,pn
xchg
movsb
xor
cmpsb
in
int
fwait
add
mov
xchg
imul
arpl
push
inc
sbb
fidivl
and
sub
jl
mov
outsb
jge
arpl
xor
cmp
rorb
dec
cltd
and
lods
insl
mov
inc
cwtl
into
push
ret
push
lods
je
movsl
jle
test
push
paddsw
pop
sbb
push
push
gs
or
aaa
dec
or
mov
adc
mov
add
sti
xchg
mov
or
ds
adc
sbb
fadds
cwtl
mov
mov
loope
pop
pop
xor
mov
push
xchg
or
rcl
call
insl
adc
xchg
add
repz
xor
mov
lds
data16
cmp
xchg
push
add
push
or
jb
cld
ss
xor
push
jo
repnz
mov
and
pop
out
xchg
add
sbb
cmp
xchg
movsl
jg
scas
sub
lcall
lret
lods
xchg
iret
xlat
fstpl
or
mov
inc
xchg
cmp
cltd
xor
or
pop
js
sbb
push
cld
nop
add
add
stos
aaa
mov
inc
mov
out
ds
popa
scas
pop
je
inc
xchg
sbb
push
cwtl
std
jns
shrl
and
movsb
pusha
es
fldt
mov
mov
repnz
xor
jnp
bsf
or
pop
lea
outsl
popl
mov
jp
nop
ss
lret
adc
or
test
repnz
icebp
sub
sub
es
cmp
popl
movsb
sub
out
leave
movsl
mov
filds
dec
jne
into
lea
popf
iret
pop
push
lcall
rcr
dec
nop
pop
push
je
inc
jg
popf
or
cmp
scas
ret
jl
cld
mov
hlt
mov
fs
mov
xchg
or
jnp
xor
sarl
dec
push
adc
in
xor
enter
jg
mov
shll
lock
cmp
pop
gs
or
out
push
add
daa
loop
dec
jnp
sarb
faddl
arpl
lahf
xchg
push
xor
mov
aaa
aaa
xchg
push
mov
or
adc
mov
jno
fisubl
les
mov
push
mov
bound
mulb
out
in
push
sub
mov
call
addr16
mov
aaa
repnz
mov
mov
fcmovne
push
cmpsl
jns
inc
fnstenv
push
pop
sbb
fldl
mov
std
and
lods
push
xor
in
mov
lods
iret
dec
mov
fwait
bound
mov
jno
fs
xchg
dec
cwtl
pusha
loop
fcom
jmp
inc
outsw
mov
jns
cmp
lods
push
mov
mov
call
adcb
pop
addr16
inc
mov
mov
dec
aam
int3
in
fnstcw
lret
sub
lcall
jle
lods
add
loop
in
dec
rcl
xor
push
jne
dec
or
jae
movsb
dec
mov
call
sub
shl
cmp
scas
sub
xchg
push
test
rclb
pand
repz
roll
mov
xchg
adc
fidivrl
xchg
sbb
mov
loopne
pop
je
mov
cwtl
fwait
jl
out
pop
ss
pop
inc
test
imul
mov
pop
mov
mov
int
adc
js
pop
xlat
mov
bound
clc
mov
xlat
xchg
push
sbb
cmp
iret
mov
fwait
xlat
test
out
cmp
cmp
push
add
shr
xchg
mov
push
mov
les
icebp
imul
xchg
inc
push
out
ds
adc
test
jne
xor
std
xchg
add
out
mov
cmp
das
push
jb
out
cli
ss
loopne
dec
jp
ja
pop
push
sahf
dec
int3
iret
ja
fnclex
mov
ret
cs
cmc
aas
ljmp
push
aam
jb
add
out
dec
sub
cld
jne
dec
in
out
lock
xor
hlt
jg
icebp
lock
push
lea
dec
ret
popf
pop
mov
fwait
stc
int
movsl
add
loopne
mov
push
dec
stos
jge
shrb
add
inc
dec
adc
daa
cmp
jle
stc
mov
cmpb
sbb
push
daa
popa
or
into
repz
aaa
jae
sahf
pop
int
dec
xchg
mov
xor
bound
cmpsl
or
test
js
mov
out
or
push
sub
xor
fadds
sub
push
rclb
and
add
aas
rclb
cwtl
mov
push
fcmovbe
jp
cmp
clc
les
cmpsl
adc
out
jg
jecxz
fwait
aaa
hlt
dec
notb
scas
jl
jg
sub
xor
fcomps
je
adcl
je
fwait
push
mov
mov
jb
shrb
mov
push
jmp
xor
pop
test
mov
jb
cmp
or
xchg
add
mov
loop
mov
repz
imul
lret
mov
sub
xor
lods
stc
sbb
aaa
pop
push
js
cwtl
adc
inc
jecxz
mov
add
mov
cmp
xlat
adc
jne
mov
lods
add
dec
shrb
cmp
xor
push
das
jg
lods
jns
pop
les
push
ret
mov
in
mov
and
adcl
xchg
sbb
mov
xchg
ret
mov
jbe
aam
aas
sbb
testl
jle
in
sti
jb
stos
adc
lret
or
sahf
loope
mov
sub
add
pop
loope
dec
xor
add
push
xlat
and
lret
fldl
xchg
add
loop
js
mov
inc
push
and
add
jl
inc
add
cmp
addb
add
jp
mov
add
sbbb
sub
loopne
out
push
mov
mov
cmp
adcl
pop
and
out
movsb
mov
jl
lret
lock
push
clc
xchg
outsl
and
test
addr16
rep
ret
mov
out
gs
fists
js
cld
push
hlt
dec
pop
and
lcall
scas
xchg
push
ljmp
in
sub
negl
mov
pop
mov
into
shrb
sbb
rorb
insl
sbb
sahf
mov
mov
mov
push
cltd
stc
pop
xor
sbb
mov
in
popf
xor
sti
out
dec
sbb
add
inc
dec
aaa
and
adc
or
pop
or
fildl
ds
cmp
adc
pop
out
out
xor
jg
cmp
push
and
xchg
fwait
out
aaa
lods
int
mov
pushl
dec
or
fidivrs
xor
or
jae
cmp
push
js
imull
dec
and
mov
sub
lret
xchg
out
iret
and
jno
popf
jg
out
cmc
aaa
into
mov
imul
dec
xor
pop
and
aaa
test
pushw
pop
push
or
dec
sar
cmp
subl
lret
dec
popa
movsl
insl
or
mov
shll
xchg
pop
push
rcll
ds
lock
fucomi
xor
cmp
or
mov
ljmp
scas
pop
sbb
push
movsb
pop
stos
jno
adc
jp
insb
inc
repnz
sbb
pop
and
loopne
jmp
and
ret
fcmove
sbb
mov
gs
and
jno
cmp
dec
nop
vextractf32x4
jne
sbb
mov
push
xor
mov
js
call
leave
lods
fcompl
pop
fcompl
jns
inc
dec
add
mov
fcmove
pop
add
out
xchg
es
imul
lret
aas
sahf
mov
jle
rcl
add
popa
in
stc
out
arpl
arpl
xlat
sti
mov
pusha
in
lea
xchg
loopne
sub
mov
int3
push
or
inc
std
imul
adcb
pop
cmpsl
xor
dec
cmp
pop
dec
jno
push
sarb
push
push
xor
pop
test
cmp
adc
mov
mov
xor
cmp
ja
push
mov
cmp
and
hlt
sub
inc
rcrl
or
lds
aad
int3
addps
ds
mov
pop
mul
pop
jecxz
shlb
add
lcall
mov
jmp
mov
and
or
push
popf
jnp
cmp
cmc
cld
jnp
enter
enter
sub
pop
test
adc
xor
mov
ja
insb
jbe
int
popf
mov
push
xor
mov
nop
pop
mov
pop
aam
call
cmpb
or
push
push
cmc
mov
push
stos
add
xchg
ror
sub
subb
dec
and
mov
sbbl
pop
xor
sar
push
add
xchg
enter
mov
mov
mov
loop
add
fnstenv
test
into
loop
jae
add
inc
imul
and
adc
iret
sarb
out
in
and
or
dec
add
xadd
xor
pop
mov
repnz
mov
inc
outsb
fld
ss
loopne
adc
roll
and
repz
add
shlb
add
addl
sti
mov
xor
hlt
push
stos
dec
pusha
and
std
and
jne
mov
mov
fmuls
aas
xor
shl
out
mov
mov
adc
lds
xor
mov
mov
push
insb
mov
andl
pop
xor
mov
enter
in
or
xchg
popa
mov
push
xchg
push
adc
push
mov
adc
cmp
fdivrs
lret
repz
dec
adc
cmp
push
xchg
adc
movups
or
aam
les
push
inc
or
mov
ret
sti
cmpsl
outsb
mov
mov
dec
adc
fsts
sub
rol
jb
cltd
cmovno
lret
xor
pop
sahf
inc
cmp
repz
decl
push
js
jne
jl
sub
jne
iret
sti
fisttpl
mov
leave
int3
imul
mov
test
in
pusha
pop
push
jne
xchg
std
fsubp
cmc
mov
aas
mull
dec
lret
shrl
fsubrl
inc
xor
mov
add
js
loopne
mov
dec
and
dec
aas
lods
mov
cli
inc
pop
outsl
mov
sub
mov
dec
fadds
add
xlat
insb
lods
jmp
aaa
lods
shrb
sub
int
repz
es
add
push
mov
and
out
lcall
or
jb
loop
out
out
cmc
repz
subb
ret
adc
fdivs
push
jns
pop
repnz
int3
pop
pop
adc
adc
leave
lret
push
xchg
in
jns
jno
adc
push
mov
movsb
add
sti
fcompl
loopne
cmpsb
cltd
aam
cld
cmc
lahf
div
lret
mov
aaa
adc
push
repnz
mov
and
cmp
gs
push
inc
dec
daa
pusha
mov
sbb
imul
push
lods
daa
xchg
fstpl
sbb
les
addr16
and
sbb
xor
sub
cmpsl
cmpsb
outsb
outsl
fwait
aaa
in
adc
pop
bound
ret
pushf
sti
pop
push
or
hlt
sub
lret
push
rcl
pushf
stos
cltd
stos
and
jmp
adc
js
pusha
lods
adc
test
or
xchg
sbb
aad
jg
mov
insb
adc
pop
pop
jne
jecxz
add
das
push
dec
push
inc
xor
out
mov
sbb
popf
push
sar
shrl
mov
xchg
nop
lods
lock
fsubl
repz
sub
loope
pop
xchg
adc
dec
sbb
mov
and
cmp
push
inc
mov
jle
adc
lds
sub
daa
cmpsl
mov
inc
shll
mov
popa
add
fcmovnbe
jae
cmc
into
xchg
pop
xor
aam
cmpsl
stos
adc
lahf
cld
mov
mov
iret
or
es
in
mov
inc
je
sbb
ljmp
xor
icebp
mov
push
cmp
mov
pop
cs
pop
jnp
dec
mov
pusha
inc
jge
xor
bswap
sti
pop
or
mov
clc
push
jae
push
rorl
xchg
or
into
inc
dec
insb
out
xor
add
pop
arpl
or
xchg
fwait
loop
cmp
cwtl
xchg
jbe
jl
dec
cltd
push
mov
call
pop
inc
pop
cmc
ja
vandps
or
xor
cmc
cld
repz
sbb
dec
fmul
jge
xor
sti
nop
push
cmp
lea
movsb
in
lods
adc
scas
les
xlat
pop
jo
mov
in
fistpl
xchg
das
jne
push
jl
enter
xor
dec
push
mov
mov
adcb
adc
pop
test
mov
jae
pop
dec
xor
out
inc
inc
repnz
rcr
mov
adc
mov
adc
jmp
xor
dec
clc
std
jge
je
nop
pushf
imul
and
repz
mov
shlb
roll
mull
mov
add
sbb
pop
or
dec
movsb
fadd
movsb
fnsave
fcomip
cli
xor
cmpsl
clc
cmp
js
lea
pop
sbb
incl
movsb
pop
sub
pop
test
xchg
jae
insl
imul
sbb
dec
mov
imul
adc
pop
pop
add
fcoml
sbb
arpl
inc
xchg
leave
inc
out
lods
sub
and
push
inc
jns
test
mov
inc
push
ljmp
adc
insb
sub
push
scas
std
mov
mov
scas
push
lock
xchg
mov
and
pop
push
lea
ds
loope
add
pop
test
cltd
mov
push
dec
sub
push
hlt
and
orl
or
test
clc
insl
adc
mov
ljmp
out
inc
pop
orl
insb
jne
cmp
fisubs
aas
loopne
xor
cld
stc
lods
ss
rorb
push
sbb
sub
push
filds
add
jmp
notl
cmp
iret
inc
pushf
and
adc
aad
fidivl
pop
sub
out
stc
dec
sub
add
sti
mov
cmp
insl
imul
mov
inc
ds
ret
aad
xor
sbb
and
sbb
push
push
inc
ljmp
and
push
pushf
fwait
lea
sti
ds
adc
loopne
jg
call
repnz
push
jl
dec
adc
xor
cli
jge
pop
mov
xor
jno
aas
jp
adc
mul
scas
rcrl
sysret
fs
sbb
add
aad
pop
adc
std
das
mov
sbb
xor
insb
sbb
or
cmp
mov
push
mov
mov
sub
ljmp
jg
rcll
ret
dec
out
inc
ss
jecxz
lock
cmp
push
push
fwait
sub
sbb
cmp
sbb
es
and
xor
in
sbb
out
adc
lea
jge
lods
inc
movsb
mull
divl
icebp
idivl
in
packuswb
and
xor
jno
std
in
pop
neg
sbb
sbb
std
mov
inc
or
xor
and
mov
stc
xchg
lret
fcomps
incl
es
inc
jl
lcall
pop
ljmp
packssdw
mov
stc
ds
xchg
aaa
fstl
aas
jnp
add
cld
shl
push
push
and
jmp
cld
test
xchg
mov
outsl
lret
and
xor
cmp
add
cld
xlat
sbb
xchg
fs
or
mov
jns
fsubrl
adc
sub
adc
sub
adc
pusha
push
mov
jg
pop
fimull
jno
sbb
inc
add
daa
pop
sbb
sbb
sbb
and
roll
inc
incl
pop
movsb
nop
pop
addb
push
adc
and
and
pop
sti
sub
add
or
lea
dec
cmp
and
arpl
push
imul
mov
and
inc
mull
mov
popf
cmp
movl
aaa
aam
inc
and
imul
sbb
roll
insb
push
mov
jno
adc
sbb
dec
add
xor
lock
ds
ds
and
and
fbld
sub
and
sbb
mov
clc
aas
std
dec
pop
movsb
sub
xor
test
and
nop
pop
aad
lods
push
in
fisttpl
jl
pop
clc
sbbb
push
das
xor
inc
cmp
ret
and
sahf
mov
add
sbb
mov
fbld
cmp
add
sbb
pop
mov
push
hlt
std
ss
jp
sti
cld
pop
sub
pop
out
sub
aaa
loop
and
adc
adc
sbb
pop
ret
push
pop
cmp
add
cmp
enter
sbb
mov
xor
fwait
xor
dec
or
in
pop
rcrl
push
or
adc
or
add
daa
imul
pop
mov
dec
lret
mov
xor
pusha
lret
ds
repz
ss
sub
shl
pop
mov
mov
jp
push
add
inc
or
adc
clc
pop
int3
pop
aas
imul
sub
cld
add
inc
cs
cmp
push
cmp
add
push
sub
add
in
jge
mov
jb
cld
pop
cmp
or
sub
loopne
xlat
pop
dec
scas
jl
and
movsl
mov
cmp
arpl
fwait
add
repnz
sub
jb
lret
dec
shrl
fwait
int
jl
pushf
outsl
inc
hlt
lret
in
cmp
pop
nop
scas
divb
add
push
sub
xor
mov
fwait
cld
decl
mov
pop
add
push
dec
push
jnp
in
ds
jle
std
test
pop
sti
and
or
in
xor
sbb
btc
pusha
out
or
ja
jmp
inc
sub
lea
push
gs
out
iret
adc
xor
decl
push
ja
push
outsl
cli
push
push
and
bound
adc
adc
pop
lock
sub
pop
sbb
jnp
inc
cli
test
or
fdivrs
and
or
inc
push
pop
lea
out
nop
lods
pop
push
add
or
xor
mov
push
cmp
add
nop
clc
jecxz
in
incb
or
repnz
cmc
sub
push
wbinvd
sbb
push
lcall
sbb
fs
sub
adc
xchg
imul
add
sbb
xor
xor
fs
incl
sub
pop
mov
or
add
in
adc
dec
loope
std
daa
notb
jmp
das
mov
movsl
pop
add
aam
gs
pop
in
out
or
aaa
push
out
mov
adc
cmp
push
and
stos
push
movsl
add
inc
push
cmp
push
xor
and
jo
push
inc
out
add
xor
call
pop
testl
repnz
mov
xchg
pop
lret
and
fistpl
lods
repz
add
fsubrp
dec
and
jecxz
dec
daa
loopne
mov
sbb
les
inc
jns
pop
insb
mulb
or
pop
add
fdiv
mov
hlt
push
mov
aas
add
mov
sti
sti
jg
dec
inc
in
ljmp
jmp
repnz
lahf
mov
shlb
or
pop
negb
jmp
jle
in
jl
mov
jb
and
loop
push
aas
sbb
pop
sbb
add
aas
jae
cmp
sbb
call
pop
sbb
repz
push
aam
pop
pop
and
sub
out
pop
pop
push
jno
and
out
inc
jae
add
outsl
aam
inc
and
imul
outsl
add
jl
xchg
pusha
incl
mov
dec
hlt
dec
add
and
dec
cmpsb
adc
pop
sub
fsubp
jmp
or
xor
lea
aaa
ja
hlt
xchg
inc
pushf
jnp
add
dec
int3
mov
lods
sub
fdivs
adc
in
dec
imul
pop
enter
add
out
stc
mov
addl
aam
cmp
rcr
lahf
cmp
and
sbb
sub
add
test
imul
lods
cld
mov
xchg
inc
push
jle
or
and
mov
xchg
sub
shll
clc
out
dec
mov
cmp
mov
sti
pop
ljmp
fsubrp
in
int3
aaa
add
and
idiv
add
popa
xor
jae
xchg
in
pop
aas
out
mov
jnp
or
adc
xorl
and
movntq
out
movsl
jne
es
xlat
and
mov
sub
call
scas
dec
ja
sub
jl
cmpsb
ljmp
adc
dec
lds
add
fisttps
mov
hlt
sub
loop
cmp
or
push
dec
cld
std
or
jp
fwait
incl
xor
xor
popa
adc
je
ss
aaa
arpl
xchg
and
and
xor
std
inc
and
in
cmp
popa
sbb
lret
clc
cli
pusha
loope
add
les
pmaddwd
subb
push
clc
dec
mov
mov
mov
lret
fnsave
lea
cmc
push
lods
pushf
adc
mov
jg
add
push
cmp
sbb
icebp
cmpsl
cmp
or
and
xor
jo
push
ljmp
cmp
and
xchg
adc
add
xchg
out
mov
movsb
jmp
mov
and
in
add
daa
mov
pop
lds
sub
std
jnp
adc
pop
fdivl
popa
and
int3
cmp
jo
xor
rol
mov
jae
insl
push
inc
sub
mov
xchg
and
pop
sbb
push
cmpb
call
cmp
icebp
pop
jmp
adc
add
pop
int3
int
daa
and
inc
sbb
test
and
sti
movsb
test
sub
inc
pop
outsl
xchg
pop
jne
insb
lret
sti
sub
ja
sbbl
dec
dec
inc
jae
xlat
fcoms
out
scas
xor
fs
sub
das
jnp
gs
sti
sub
xchg
ret
aas
adc
nop
add
mov
inc
add
es
cmc
sub
and
scas
pushf
pusha
in
xlat
pop
sub
ds
insl
and
sbb
add
mov
shl
jno
dec
clc
push
push
cmpsb
call
aam
in
in
mov
jecxz
push
add
xor
inc
rcrb
push
decl
shll
push
loopne
jmp
loop
and
push
negl
xor
add
rcr
js
sbb
sbb
rclb
xor
stos
notl
sarl
in
add
out
xchg
cmp
and
mov
lcall
filds
cmp
maskmovq
mull
mov
das
imul
clc
cmp
pop
iret
push
cmp
or
xor
push
jae
ds
add
dec
cmp
xor
and
or
aas
pop
cmp
fcompl
pop
add
jo
xlat
cmc
add
cs
sbb
push
insb
mov
xor
or
cld
lahf
sbb
jecxz
xchg
xor
outsl
sub
pop
push
pop
das
pop
dec
pop
bound
xchg
adc
adc
es
sbb
xchg
add
sti
repnz
in
sbb
iret
outsb
or
pushf
repnz
repz
aas
and
in
mov
out
pop
pop
add
shrl
call
xchg
adc
push
lret
sub
iret
mov
int3
pop
cwtl
xorl
ds
mov
enter
jne
cmp
out
pop
adc
in
jns
adc
and
and
add
bound
push
ds
add
or
aaa
jae
cmc
add
and
shrl
fildl
incl
sbb
jnp
lahf
inc
adc
in
push
pop
je
add
idiv
xlat
sub
in
pushf
inc
inc
daa
mov
sti
iret
loope
xor
es
push
cwtl
scas
push
nop
sti
pop
pop
cmp
and
cmpsb
jmp
xchg
je
cld
cltd
xor
xor
cltd
jg
call
iret
fimull
fdivl
ja
cli
push
ja
ljmp
sbb
outsl
push
adc
xor
xor
loop
sbb
mov
sub
jne
sub
fcoml
adc
in
leave
and
pop
pop
xlat
add
cmp
ljmp
stos
enter
push
push
ljmp
or
inc
dec
pop
mov
inc
setno
pop
in
sub
sub
adc
popf
in
lret
mov
sbb
fidivl
add
inc
cmc
add
out
into
push
test
add
xor
outsb
scas
pop
mov
lods
and
xchg
xchg
jns
jo
mov
ljmp
mov
inc
cli
or
and
and
inc
stos
jmp
pop
icebp
inc
cmp
inc
paddusw
cmc
push
xlat
add
mov
arpl
sbb
mov
and
pushf
cld
popf
pop
cmp
insb
cmp
clc
sti
aas
or
pop
rcr
dec
mov
and
cmp
stc
stos
cld
jmp
je
xlat
add
xchg
lods
out
jg
rolb
outsb
sub
cmp
lea
in
and
add
data16
filds
in
dec
lea
cli
jle
fisttpll
pop
mov
enter
or
dec
pop
lds
jecxz
repz
fs
loope
mov
add
ja
cmpsl
or
lahf
in
mov
jnp
aam
sbb
stos
mov
push
dec
dec
add
sbb
mov
sbb
scas
inc
cmc
adc
sbb
inc
stos
hlt
pop
pop
aam
pushf
cmp
insb
fwait
aas
jo
cmc
sub
icebp
std
jg
fistpll
or
cwtl
aaa
lret
push
xor
pop
push
push
or
and
clc
out
mov
and
pop
or
cmp
sbb
push
add
rcrb
sbb
cmp
sbb
add
lea
adc
inc
mov
xorb
adc
pop
lock
hlt
sbb
pusha
adc
std
dec
pop
out
push
adc
add
cld
adc
pop
and
and
movsb
dec
or
xchg
outsl
sbb
sbb
cmp
call
fdiv
ret
mov
push
or
fidivs
in
push
daa
scas
in
add
add
xor
pop
repz
call
or
rcrl
sbb
xor
sub
cld
add
adc
push
ljmp
flds
fdivrs
xchg
push
pop
test
pop
cs
ss
ret
clc
pop
aam
out
cmc
aas
xchg
pop
sub
decb
aad
add
es
cmp
mov
add
or
faddl
sti
aas
test
or
xor
dec
push
and
loopne
call
add
sti
jmp
push
cmc
sti
sbb
and
movl
or
pop
call
inc
and
pop
add
adc
or
pushf
sbb
test
repnz
call
cwtl
mov
lds
mov
and
ret
xchg
jle
and
push
ss
sub
lock
fsubs
sub
div
fistps
int3
and
xchg
push
adc
aas
add
push
in
sahf
sarl
jno
cmp
cld
mov
sub
sbb
add
jge
push
scas
mov
push
cld
pushl
insb
aam
and
stos
xor
into
sub
loopne
cwtl
nop
cmp
xor
xchg
dec
push
or
std
daa
and
std
notl
xor
sbb
ja
add
ljmp
sub
test
xchg
jl
sbb
insb
in
fistpl
jge
loope
repz
xor
adc
and
push
sbb
ss
in
sub
adc
mov
fsubrs
sbb
cmp
fidivrs
jb
adc
arpl
pop
mov
push
repz
movsb
sarl
xchg
sbb
fstps
movsb
mov
pusha
cmp
xor
pop
daa
jle
insb
iret
cli
sbb
push
xor
push
icebp
push
das
int
push
cmp
sbb
mov
jge
test
mov
fiadds
lcall
sahf
xor
jp
arpl
xchg
fldenv
jo
out
add
adc
xor
xor
std
les
jp
mov
pop
por
or
pop
add
push
add
jmp
add
mov
lods
pop
or
pop
mov
out
stc
sbb
push
inc
je
or
repz
fdivp
loopne
popf
int
or
push
adc
xchg
fcmovne
add
cmp
shll
pop
sbb
aam
aas
daa
lret
sbb
or
repnz
or
out
psadbw
subb
es
cmp
mov
fnstsw
adc
in
dec
and
push
in
js
js
xor
addb
dec
mov
or
js
jg
nopl
stos
mov
ja
mov
and
fistps
inc
mull
xchg
stos
loop
sbb
sbb
add
arpl
inc
ret
adc
and
sbb
mov
sbb
add
aad
jmp
mov
lcall
mov
insb
and
xor
fwait
cmpsl
cmp
pop
and
cmp
shl
pop
fucom
sbb
aas
fbstp
in
int3
cmp
mov
pop
pop
and
push
add
xlat
xor
popa
pop
in
das
das
enter
aam
dec
nop
jle
fstpl
cltd
adc
pop
sbb
cmp
push
sbb
xchg
push
flds
dec
es
cmp
sbb
call
or
mov
les
ret
push
add
dec
pop
jo
and
add
leave
das
into
imul
cmp
movsl
mov
xor
iret
cmp
jmp
into
sub
jbe
out
cs
xchg
xchg
pop
cs
pushf
dec
cmp
mov
mov
out
insb
cmp
sbb
aaa
ds
xor
push
daa
fwait
push
addr16
push
popa
imul
pop
cmc
cmp
std
xchg
cmp
stc
lock
aad
pop
and
or
shll
fistps
jb
gs
or
pop
leave
clc
sbb
sbb
pop
sub
shll
dec
push
mov
sbb
add
mov
push
jecxz
in
leave
adc
pop
fsubrs
clc
jae
ret
pop
test
lahf
in
push
loopne
hlt
shlb
mov
pop
cmp
andb
orb
out
xchg
rclb
in
sub
aaa
fldt
or
repnz
pop
sbb
in
push
popa
jbe
pop
adc
xchg
cmpsl
dec
in
aam
cmp
mov
leave
push
xchg
and
es
and
test
enter
pushf
dec
xor
push
je
sub
pusha
cld
dec
dec
insl
cmp
pop
dec
dec
lea
test
hlt
inc
mov
mov
lahf
je
cmp
push
xchg
insl
mov
push
mov
fiadds
pop
leave
xlat
setns
adc
xlat
ljmp
shrl
dec
lock
and
and
mov
cmp
adc
mov
mov
repnz
lahf
xor
push
xchg
out
mov
xchg
in
pusha
decb
jl
lahf
mov
or
in
fsubr
push
xlat
cli
inc
mov
mov
jns
push
mov
cwtl
push
addl
sahf
idivb
lahf
testl
push
sub
fbstp
cmp
mov
insb
sub
jno
cmc
push
jnp
push
pop
xor
je
pop
or
mov
cmp
dec
mulb
sub
les
es
idivl
mov
test
outsl
sub
xchg
andl
cmp
cli
xchg
mov
jg
pop
pop
pushf
lret
dec
xor
lgs
imul
loope
stos
mov
popf
xchg
mov
std
jb
js
out
and
imul
into
insl
fcomp
jne
fcmovne
adc
jge
inc
mov
push
clc
rcr
mov
jp
clc
dec
ret
cli
mov
lea
xchg
mov
push
xchg
inc
inc
mov
repnz
sbb
jle
enter
mov
mov
mov
add
mov
mov
popf
or
arpl
cwtl
and
mov
mov
mov
mov
in
arpl
mov
cs
mov
mov
fs
adc
mov
pop
pop
cmp
pop
inc
call
xor
add
frstor
in
es
addr16
jne
cmp
les
dec
jo
push
addr16
stos
rorl
dec
je
gs
loop
les
jl
sbb
out
push
cmc
push
cmpsb
or
out
xchg
xchg
ret
xchg
nop
mov
stos
xchg
lcall
sub
imul
dec
je
xor
xor
cltd
xlat
imul
mov
pop
and
push
cmpsb
insl
adc
test
scas
shll
jmp
push
jg
mov
lea
fists
dec
xor
xchg
decb
push
fnsave
xor
inc
aam
pop
mov
inc
out
lock
jmp
mov
repnz
and
fdivp
test
pop
mov
outsl
xchg
sub
jae
xchg
hlt
pop
testl
or
aaa
cmc
or
xor
cmp
hlt
xchg
sub
ljmp
mov
mov
mov
pop
pop
shl
cld
rcr
bound
or
mov
mov
dec
pushf
mov
js
and
iret
pop
jne
mov
femms
xlat
sar
and
fists
lods
cltd
jae
adc
xchg
adc
test
inc
xor
in
mov
sub
in
adc
cli
insb
nop
or
in
lcall
push
ss
sbb
cmp
mov
lock
das
mov
fisubl
xlat
sbb
jecxz
pop
and
lods
sub
adc
mov
imul
popf
sub
scas
fcmovnbe
sub
test
ds
test
xor
xor
dec
shl
jnp
outsb
pop
push
or
sti
ja
ljmp
sub
fbld
vpaddusb
testb
inc
in
xchg
sbb
aas
add
pop
test
or
xor
xchg
mov
and
fsubl
inc
or
aad
xchg
add
xor
mov
mov
nop
pop
insl
mov
lock
cwtl
xor
cmp
adc
xchg
nop
lods
cmp
in
inc
stos
and
xor
jp
pop
rclb
jo
push
mov
push
test
xchg
aaa
xchg
adc
je
fstps
push
cmp
lods
stos
lock
mov
or
cmp
iret
cmpsl
cli
jb
stos
mov
add
clc
dec
les
and
sti
jecxz
rcll
loopne
pop
ja
cmc
adc
cmpb
dec
cmp
out
fwait
xchg
jbe
fdiv
in
cmp
cmp
cmp
and
mov
scas
sbb
add
out
push
mov
adc
repz
push
mov
lret
mov
sbb
xchg
loope
mov
jnp
mov
dec
lods
xor
sub
add
mov
xlat
repnz
or
stc
mov
cld
jne
xchg
jo
jmp
or
add
push
xlat
int
fidivl
in
clc
fisttps
test
dec
repz
dec
cltd
js
and
movsb
fs
cmp
jno
repnz
push
or
popa
mov
or
fwait
enter
xor
daa
in
push
shrl
ret
cmp
pop
repz
xchg
je
fldt
je
mov
in
int
or
movsl
idivb
aam
mov
jle
xor
and
mov
lock
push
push
movsb
push
mov
into
fbstp
mov
or
and
daa
xchg
cli
outsl
hlt
sub
cmpsl
push
mov
sarl
in
dec
scas
push
xchg
mov
mov
and
adc
into
pop
lahf
sahf
jl
mov
fildll
sbb
mov
push
inc
add
add
push
and
lar
and
inc
arpl
sbb
sub
inc
fdivrs
adc
iret
mov
xlat
fwait
std
lcall
test
enter
dec
jecxz
dec
iret
xchg
cs
xor
scas
push
adc
mov
nop
inc
or
popl
or
xchg
xor
add
push
cs
adc
sti
clc
adc
pushf
add
sbb
ds
xchg
and
std
repnz
sub
lock
adc
push
inc
or
rolb
mov
mov
sbb
adc
xchg
dec
cmp
ret
jmp
cld
mov
push
mov
cmp
stos
and
jb
aad
aam
insb
aad
nop
mov
push
sub
bound
mov
mov
and
fidivl
jno
jp
cmpl
dec
je
int3
jne
adc
sub
cs
sahf
jmp
pop
inc
ret
pop
pop
das
jecxz
pop
das
lret
std
loopne
sbb
aam
add
xchg
jp
ds
jbe
xchg
cmpsl
inc
clc
int3
pop
lods
jmp
mov
stos
adc
call
adc
fwait
cmc
imul
in
fstps
test
pop
jp
loopne
dec
call
fcompl
into
sahf
cmp
cltd
addr16
inc
aad
sbb
mov
cld
jecxz
loope
sbbl
stos
lahf
stos
insl
xlat
add
loop
add
out
enter
jns
in
jg
fwait
scas
stos
add
inc
mov
aad
mov
mov
sub
jno
in
mov
ret
pushf
loop
sub
inc
mov
and
push
ss
pop
lds
adc
int3
cmpsb
addl
aas
jge
mov
aam
mov
subl
xchg
sub
jmp
add
cmp
mov
mov
sbb
jp
stc
push
mov
lea
xchg
sub
sti
and
notb
cmp
orl
iret
push
ret
out
mov
adc
xchg
push
push
inc
out
or
call
jae
addr16
and
nop
test
pop
cmp
dec
and
push
xchg
decb
push
sbbb
inc
xchg
gs
stos
push
jl
lcall
setno
mov
mov
xor
inc
fstps
fwait
mov
adc
sarl
lods
mov
out
sbb
mull
aas
inc
ficoml
outsb
movsl
push
in
or
aam
clc
testb
loopne
shl
dec
sbb
shll
mov
mov
jo
sbb
xor
out
pop
mov
and
or
xchg
icebp
mov
fwait
cwtl
fsubs
xchg
add
cmp
adc
out
into
xor
test
es
adc
mov
push
andb
dec
sbb
mov
cmc
aam
nop
adc
fldl
pop
mov
xor
fisttps
std
clc
stos
push
sbbl
fwait
daa
adc
mov
mov
mov
nop
sbb
stos
pusha
cmpsl
mov
ja
imull
jp
js
push
sbb
insl
and
mov
sbb
cwtl
pop
daa
ja
sub
push
loop
das
jp
sti
fiaddl
cld
pop
lock
lds
jmp
testl
jmp
sub
jae
xor
cld
mov
xchg
into
push
in
mov
jle
pop
add
xor
xchg
push
cmp
into
repnz
mov
outsl
aas
sub
insl
xchg
cwtl
mov
xor
movmskps
outsb
inc
xchg
aam
rcrl
push
mov
or
loop
inc
popf
sbb
aam
popf
or
and
mov
test
jno
mov
loopne
push
sub
bound
mov
push
stos
xlat
jmp
sysret
pop
loope
mov
or
sub
xchg
in
notl
jmp
mov
dec
aad
pop
dec
clc
push
push
or
rclb
jb
xlat
sub
mov
add
inc
stc
sti
adc
xchg
jg
scas
mov
or
out
dec
sub
pusha
jecxz
iret
mov
pop
xlat
or
std
mov
and
daa
pop
pushf
mov
xchg
dec
enter
or
adc
loop
sub
cli
sbb
stc
cmp
cmp
inc
xchg
adc
xor
push
or
dec
gs
sahf
xlat
inc
xchg
ljmp
adc
sub
shll
mov
sbb
fisubrl
sub
ror
int3
in
mov
std
xchg
jns
fdivrl
out
mov
es
sub
dec
cld
jae
or
mov
sbb
cmp
adc
sub
and
sub
mov
leave
fcoml
mov
sbb
and
xor
and
jno
add
or
cmp
or
out
xor
or
or
insl
jmp
iret
repz
fldt
add
lods
aam
jmp
int3
fucomi
fcmovnb
push
inc
adc
fcoms
xchg
push
and
mov
sbb
bound
or
call
aad
sub
in
int
inc
push
adc
out
xlat
out
cmp
jne
mov
sbb
movsb
das
or
jp
mov
and
inc
push
out
ret
sub
repz
jl
cmp
lahf
cmp
sbb
and
xchg
fcomps
lock
fstl
fiaddl
sub
mov
fincstp
push
fs
fs
ss
loope
push
sub
jecxz
mov
mov
adc
shll
push
sbb
dec
fdivl
adc
repz
mov
fistl
fidivrs
jecxz
ljmp
xlat
cltd
cmpsl
sbb
jnp
jb
xchg
push
push
push
negl
inc
aas
jnp
js
mov
or
adc
inc
fistpll
int
loop
cmp
into
adc
int3
dec
and
stos
mov
hlt
stos
dec
popf
sub
lahf
arpl
mov
call
test
lret
gs
imul
lods
xchg
lret
mov
push
adcb
iret
pop
hlt
test
out
jbe
js
adc
mov
adc
mov
hlt
jle
loop
mov
cs
hlt
sub
inc
mov
or
mov
outsl
cs
out
sub
fstl
addl
xchg
jnp,pn
sub
and
inc
loop
fidivl
add
add
cmc
sarl
enter
mov
imul
pop
sub
push
icebp
xchg
dec
add
dec
fisubl
cwtl
or
fsubs
sub
lcall
sbb
in
mov
cmc
roll
out
loope
dec
stos
mov
psubsb
mov
imul
cmp
cmpsl
cltd
call
insb
and
out
es
in
xor
lods
sbb
fs
jnp
fwait
and
xchg
js
cmp
fs
cmp
push
adc
xor
das
inc
out
and
add
and
lds
add
push
stc
fsubr
or
mov
or
add
hlt
cld
mov
fwait
cmp
cli
or
das
add
pop
jno
lret
jne
mov
dec
or
xchg
cmp
je
cmpsl
test
push
mov
lock
icebp
out
es
cs
adc
loopne
popa
jo
cmp
dec
jmp
hlt
in
inc
push
imul
add
ss
fcomps
push
repz
dec
aas
sub
push
and
sbb
sbb
inc
shr
mov
pop
pop
sti
hlt
loope
fwait
clc
mov
add
dec
mov
push
cmp
aad
fcmovbe
mov
pop
mov
loope
push
or
fxch
push
fsubrs
shl
cli
and
xchg
pop
pop
fildl
es
mov
repz
adc
dec
push
pusha
rcrl
test
out
push
fbld
cmp
out
and
sub
sahf
mov
mov
movsb
adcb
repz
xor
int3
xor
cmp
mov
pushf
movl
idivl
fimull
cmp
shll
das
pop
mov
xchg
inc
or
pop
jmp
ds
rcll
dec
push
or
mov
fdivrs
shll
sub
fwait
je
in
add
xor
aam
xor
add
dec
ror
xor
aam
and
mov
cld
xor
aas
mov
or
clc
push
dec
cli
xor
out
add
and
ret
rolb
and
repz
adc
mov
xor
ret
and
adc
jns
adc
mov
mov
or
repz
rorb
xchg
mov
inc
pop
leave
mov
aad
push
roll
ja
in
adc
ficoml
das
stos
das
sti
jl
or
or
jne
in
push
fcmovnu
adc
push
js
jg
sbb
in
inc
fldenv
xchg
test
push
cmp
adc
lea
jmp
int3
push
sub
sub
xchg
gs
adc
cmp
mov
adc
cmp
das
sub
or
das
sbbb
ds
out
or
dec
dec
loopne
test
inc
mov
ret
popa
in
pop
ja
xor
push
adc
mov
aaa
jns
in
insb
adc
das
es
or
notb
std
out
scas
mov
int
or
in
lea
inc
jecxz
fdivrs
push
dec
push
ja
adc
aas
push
js
xor
cmc
jecxz
add
aam
adc
aam
or
lods
adc
loopne
inc
loopne
push
std
jnp
mov
push
dec
pop
jo
mov
lds
sub
jecxz
inc
lret
testb
pop
push
mov
divl
std
cltd
sbb
jno
jp
ret
lds
jae
push
inc
push
scas
cmp
jp
adc
cmp
fdivrs
xor
jl
cmpsl
jo
and
jmp
insl
pop
ret
jb
or
enter
sar
cmp
mov
je
ret
js
jp
lcall
stos
push
int3
arpl
push
jno
xchg
ret
jmp
dec
jl
xchg
dec
inc
jmp
in
notl
ror
push
xlat
push
jnp
push
imul
movsl
into
dec
and
imul
mov
mov
cmpsb
push
push
sti
scas
jmp
push
mov
jle
and
repz
sbb
scas
and
xchg
insl
and
jne
enter
cmpsb
sti
ds
and
in
mov
or
addb
icebp
aam
add
inc
inc
add
adc
fwait
outsl
std
xchg
pop
js
js
pusha
jnp
and
fisttps
sub
push
adc
inc
xor
frstpm(287
push
xchg
cmp
add
inc
imul
xor
pop
inc
fcomps
xor
inc
inc
sbb
pop
cltd
lret
out
or
sbbb
inc
mov
mul
sub
sbb
divl
sub
lret
ss
int3
ss
andl
arpl
fdivs
mov
push
neg
scas
dec
xchg
ret
mov
mov
jmp
jecxz
push
sbb
adc
or
and
xchg
cmpsb
push
jmp
test
cmc
stos
xchg
cmpsl
push
sbb
ret
and
push
pop
xchg
imul
adc
outsl
and
inc
xor
adc
jns
dec
cli
fldt
push
icebp
push
adc
pop
in
sbb
jg
or
jo
and
sub
lret
icebp
icebp
xchg
loopne
mov
es
iret
mov
push
xor
negl
add
shll
xchg
inc
lret
mov
cmpsb
push
fndisi(8087
sti
jnp
xchg
dec
pop
sub
aad
cld
ja
scas
sbb
jge
xlat
push
std
hlt
outsl
push
or
xor
fistl
ds
outsl
nop
cwtl
les
cld
xchg
pop
cmp
fistpll
dec
mov
push
aas
adc
outsl
mov
cmp
sub
xchg
xchg
sbb
add
clc
out
jns
cmpb
adc
and
jne
xchg
inc
push
dec
clc
rcrb
cmc
jbe
inc
enter
adc
xchg
stos
rcll
pop
lock
inc
push
test
loop
sbb
out
cmp
lret
mov
jmp
outsl
divb
adc
dec
sti
pusha
mov
roll
pop
sub
pop
fsubl
pop
out
test
cwtl
daa
aaa
jno
xchg
das
fs
inc
stc
dec
sbb
mov
jnp
lret
sbb
stos
cmp
cmp
repz
jle
psadbw
sub
jno
out
in
ret
add
jns
in
das
imul
jmp
mov
hlt
dec
adc
out
pop
push
xor
fwait
idivl
rcrb
mov
stos
sbb
aad
lock
and
clc
mov
js
lret
inc
inc
or
mov
aaa
xorl
das
adc
add
add
repnz
idivb
dec
in
jmp
pop
jl
fldl
xor
test
in
out
jecxz
fimull
inc
xchg
or
and
adc
gs
lods
pop
bswap
call
call
mov
xchg
sbb
repz
mov
inc
or
adc
add
push
mov
pop
cld
ffreep
lea
nop
cmp
mov
arpl
lret
mov
imull
mov
or
jo
adc
ficoms
xor
push
xor
ds
inc
adc
movsl
lcall
mov
mov
ret
movsl
push
jmp
lahf
mov
test
in
push
out
nop
ret
cld
jnp
dec
testb
sahf
fmuls
call
mov
mov
push
cmp
mov
fisttpll
sub
mov
out
dec
cmp
les
sbb
mov
dec
rcrl
in
mov
jbe
hlt
nop
cs
adc
mov
and
divl
add
mov
enter
sub
and
loopne
les
arpl
mov
jg
jae
xchg
xor
and
stos
ret
and
ss
loop,pt
out
push
out
int
fimull
pop
out
aad
xor
or
add
dec
nop
psubb
aas
test
inc
je
push
fistps
lds
sbb
scas
add
stos
pushf
or
aam
js
fs
clc
loope
xchg
sahf
jne
add
lds
dec
mov
adc
into
add
sti
cmc
scas
es
xor
mov
std
xor
inc
or
shl
xchg
test
pop
adc
push
in
mov
pop
xchg
xor
xor
aam
mov
scas
cmc
repnz
aaa
adc
and
push
ljmp
xchg
sub
inc
mov
sbb
clc
jle
int3
mov
jno
das
jp
jns
mov
sbb
jle
jle
xlat
les
xor
push
outsl
push
cld
xchg
daa
xchg
aas
test
roll
test
ficoml
nop
xchg
jmp
out
mov
adc
adc
xor
fidivrl
cmc
rolb
add
mov
cmpsl
mov
or
mov
pop
jecxz
in
cli
outsb
addr16
inc
and
jno
call
in
or
fsubs
push
aas
enter
int
ja
and
loopne
movsb
sbb
jl
std
lea
cmpsl
ret
aaa
mov
jecxz
push
xor
xor
std
or
in
mov
sub
mov
jecxz
outsb
lret
xchg
cld
aam
shrb
stos
rorb
into
fistpll
sbb
outsb
jb
mov
adc
push
data16
lret
test
or
mov
int3
imul
std
and
pop
and
cmpsl
movsb
in
int
testl
into
fnstcw
add
in
out
rcr
cli
mov
repnz
test
push
rolb
xor
addr16
outsl
xchg
movhps
aad
sti
pusha
or
xlat
call
mov
loop
mov
xchg
mov
or
mov
push
mov
pop
mov
in
xor
xlat
push
pop
clc
jb
push
and
adc
mov
inc
das
jae
in
test
iret
adc
addr16
rcrl
aaa
push
ds
inc
jb
stos
rcl
call
shl
aad
lret
add
test
out
ja
cmc
js
and
add
sub
andl
fnstsw
push
cmp
loopne
js
mov
or
sub
or
add
push
enter
add
dec
loope
fwait
jg
imul
mov
pushl
mov
filds
js
sub
sar
cmc
sbb
enter
pushl
cld
test
std
out
roll
mov
cmp
repz
ds
jmp
push
lcall
or
inc
adc
fstpl
fistps
sarl
and
popa
lret
mov
sbb
repnz
cmc
inc
sbb
std
dec
mov
imul
cli
jecxz
insl
xor
lods
pop
mov
pop
add
std
sub
pop
aaa
lret
push
leave
push
lods
add
jo
es
repz
cmp
pop
lods
push
repnz
test
jb
cmpsl
ss
add
clc
mov
test
rcr
adc
cltd
aam
xchg
fs
pop
roll
scas
cmp
fdivrs
cmp
cmpsb
push
aas
mov
mov
sub
or
cmc
xor
or
xor
arpl
idivl
stos
jno
xchg
lcall
ss
fistps
pop
aas
fwait
int3
repnz
fsubrp
sub
and
sub
ss
mov
repz
sbb
jo
int3
fistpll
clc
or
je
cmp
push
or
std
cmp
stc
mov
ds
sbb
inc
sbb
xor
out
inc
push
mov
lret
fistpll
not
add
xchg
xchg
ja
pop
js
cli
dec
jmp
sbb
jle
pop
jge
xlat
es
ja
das
mov
xor
orl
adc
add
sbb
and
inc
or
aam
or
and
in
sbb
xor
cmp
pop
inc
add
pop
and
ds
sub
imull
dec
inc
sbb
push
xchg
call
or
sbb
std
push
mov
loop
jecxz,pn
iret
jmp
iret
pmaxsw
xchg
mov
or
loop
xor
push
nop
loopne
push
nop
sarb
mov
or
fcoms
idiv
jmp
fldenv
push
fs
test
inc
icebp
mov
call
push
aam
push
loop
xor
leave
fists
ffreep
shlb
rol
leave
arpl
popa
adc
ds
fcomip
lret
js
mov
repnz
fld
sbb
mov
in
incl
mov
add
inc
fistpll
jg
std
or
loope
adc
aad
pusha
lds
adc
sbb
push
lock
das
xchg
int3
mov
lahf
lret
test
jg
add
jge
push
sub
mov
mov
dec
adc
xlat
orl
in
aas
sbb
pop
add
inc
jle
mov
jle
mov
mov
and
ret
mov
jmp
or
lret
subb
dec
repnz
cs
outsb
repz
out
inc
ja
push
hlt
mov
nop
dec
nop
pop
aam
cli
ret
repz
mov
mov
or
pop
outsl
aas
push
cmp
dec
mov
outsb
fcoml
mov
fcmovb
and
lods
dec
in
outsl
loopew
inc
stos
mov
pop
jnp
push
push
push
into
and
out
testl
xchg
xor
and
loopne
sbb
testl
das
daa
in
scas
idiv
mov
or
pushf
into
or
inc
sahf
in
add
out
cli
dec
faddp
dec
mov
stos
or
sub
or
sahf
sbb
xchg
sub
fwait
leave
add
mov
lock
jnp
shrl
xor
lods
adc
push
int
movsb
je
push
inc
outsb
popl
fwait
xor
pop
dec
sub
mov
ja
add
add
xlat
xlat
cmp
or
or
scas
xchg
das
cs
fsubrs
cmc
sub
push
fcmovnb
xor
adcw
xlat
ret
lods
xchg
add
or
stos
mov
or
dec
call
fdivrs
loopne
cmpsl
lods
or
push
adc
and
inc
mov
xlat
mov
cwtl
scas
jae
daa
adc
push
lret
test
adc
jle
inc
xor
dec
divl
push
stos
aas
fwait
shll
icebp
repz
loopne
rorl
mov
loop
inc
in
xor
iret
mov
fcmovnu
lock
push
sbb
mov
movsb
mov
out
std
mov
call
mov
mov
sub
popf
out
or
mov
jbe
adc
cmp
dec
push
hlt
mov
jl
repnz
test
or
jmp
dec
fstps
and
sbb
xchg
test
xor
inc
fstl
out
rcl
pusha
cmc
lret
sti
inc
push
call
dec
lcall
sti
dec
shr
hlt
pushf
and
loopne
mov
lods
push
insb
and
add
scas
ds
je
dec
jne
out
adc
pop
imul
push
lock
arpl
out
pop
sub
or
add
dec
jno
test
push
push
in
pushf
mov
mov
xor
mov
mov
or
movsb
inc
push
fstpt
arpl
cmp
into
jle
mov
adc
pusha
test
out
push
inc
js
rorb
mov
adc
or
imull
adc
loop
fs
mov
mov
pop
movsb
xlat
mov
rcll
out
add
xchg
push
std
mov
inc
outsl
cmc
xor
ljmp
fildll
jns
fwait
sub
cmp
xlat
fidivrs
ficoms
stc
jae
jecxz
jno
jg
push
dec
mov
sahf
sahf
pop
sbb
push
mov
sti
addr16
pushl
in
add
sarl
sbb
out
les
cmp
push
ficoms
dec
sarl
pop
aaa
testb
mov
xchg
adc
xor
sub
pushf
es
aam
adc
loop
dec
loopne
cmpsl
out
dec
sbb
mov
add
enter
cld
lods
pop
cmp
aas
add
lock
sub
es
inc
sbb
xor
inc
dec
mov
aam
jo
mov
dec
sub
std
and
adc
mov
sti
roll
pop
inc
pop
notb
push
int3
in
inc
mov
adc
sti
inc
xchg
addl
repz
pop
sub
out
jb
mov
jae
sarl
outsl
jp
fdivrp
ds
ljmp
xor
out
cld
ret
pushf
lcall
std
push
in
inc
mov
and
or
push
aaa
lret
ljmp
ss
sbb
jle
loopne
repz
and
loope
mov
add
out
xlat
dec
imul
or
in
in
fdivr
std
fldt
push
push
cmp
out
mov
xor
sub
hlt
ss
jnp
ja
icebp
in
pop
repz
test
aas
pop
xor
out
dec
add
or
and
jae
rolb
push
jecxz
adc
das
mov
scas
call
cmp
outsb
scas
jmp
fsubr
notl
sub
push
dec
lret
call
sbb
xchg
mov
aam
lret
xchg
sbb
outsb
adc
mov
add
repz
out
cmpsb
xor
add
setl
pop
mov
and
inc
das
out
pop
in
mov
icebp
pop
push
jecxz
sbb
mov
mov
sahf
addb
mov
and
enter
jns
adc
adc
jmp
jg
pop
cld
jp
pop
adc
sbb
push
sbb
addr16
shll
mov
add
mov
mov
jno
repz
loopne
jl
jg
imul
xor
loop
jmp
fdivrs
in
icebp
fildll
adc
xchg
push
aam
xlat
sub
pop
ljmp
ret
push
and
stos
cld
cmpsb
pop
mov
inc
loopne
fisubl
fs
mov
pop
and
mov
repnz
adc
xchg
fimuls
cmpsb
out
mov
mov
std
pop
dec
or
notl
aad
push
jne
dec
loop
ret
add
mov
outsl
fsubr
in
shl
mov
dec
stos
cmpsb
push
fsubrs
jno
jne
call
ss
mov
adc
stos
jg
test
mov
lret
ret
xlat
aas
mov
cmc
and
jge
fmuls
lret
mov
daa
and
ljmp
sbb
dec
jecxz
push
es
adc
jecxz
sbb
lret
inc
dec
or
outsb
mov
pop
mov
clc
shll
and
into
inc
pop
push
cld
int3
mov
rorb
icebp
xor
roll
insb
in
jmp
adc
dec
dec
repz
ss
in
out
lcall
or
fs
cwtl
rcl
rol
push
repz
sbb
xchg
adc
testl
das
sub
in
add
sbb
hlt
mov
sub
fisttpll
popa
mov
mov
pop
mov
mov
mov
fstp
mov
jo
and
rolb
mov
inc
arpl
out
xchg
or
hlt
jmp
add
add
dec
inc
scas
mov
and
aas
adc
fwait
adc
jae
ja
adc
fwait
adc
lds
loope
dec
pop
into
out
fsubs
inc
fildl
divl
inc
pop
std
cwtl
mov
xor
shlb
ret
or
push
incl
shl
mov
daa
mull
cmpsl
inc
js
insb
cs
sub
or
pop
repz
test
dec
jnp
pop
pop
or
fmull
ret
xchg
std
clc
fstpt
lcall
loope
add
mov
mov
cld
adc
aaa
sub
cmpl
ja
inc
dec
cmovne
nop
mov
add
das
movsb
mov
xor
push
pop
sbb
subl
sarl
jo
adc
lahf
lea
jne
jge
push
mov
sbb
inc
add
testl
push
sub
jo
or
or
imul
lea
sbb
aad
dec
mov
mov
sbb
fucom
movsl
sti
es
mov
and
cmp
push
jmp
inc
in
or
lret
lahf
sub
mov
pusha
lret
inc
popf
lea
adc
aas
and
sub
fcmovne
iret
pusha
cmp
sbb
in
ret
les
push
xor
in
sbb
pop
adc
cmp
adc
inc
dec
sarl
clc
adc
sub
dec
sub
dec
lret
sbb
cltd
outsb
mov
adc
leave
and
add
mov
mov
cwtl
or
outsl
mov
and
cmp
mov
repnz
mov
xchg
xor
sbb
sbb
ljmp
fdivrl
sbb
repnz
bound
stos
jmp
mov
mov
mov
outsb
lahf
and
outsl
add
inc
xchg
adc
cld
push
aad
cmpsl
jge
aaa
fsub
fucomi
stos
cli
rcrl
sbb
out
pop
push
cmp
add
mov
cmp
push
cmc
loope
cli
ds
cmpl
aas
clc
ret
and
xchg
inc
mov
std
pusha
pop
pop
fwait
and
jg
sti
dec
ljmp
pop
xchg
fcmovbe
fcompl
mov
shl
add
sub
xchg
jno
mov
push
enter
sub
stos
arpl
push
cmp
cmp
nop
adc
cmpsb
out
xchg
mov
cli
ss
adc
addl
xchg
das
mov
incb
pop
pop
cltd
xor
cmp
arpl
push
sti
ja
outsl
dec
fsubr
jbe
loopne
ficompl
pushf
xlat
mov
mov
cmp
fwait
sbb
ljmp
or
dec
pop
lret
sti
cmp
cs
fcomp
rorl
fisubrs
push
pop
or
inc
sub
hlt
sub
rcll
ljmp
mov
or
test
jno
fwait
outsl
int3
jb
push
xor
aaa
mov
push
dec
cmpsb
enter
adc
imul
shl
mov
inc
sub
rorb
out
fwait
iret
lcall
add
sub
movsb
adc
xor
stc
push
imull
xchg
shlb
adc
adc
call
mov
jo
xchg
or
clc
sub
loopne
fsubrl
out
dec
cld
lret
mov
loopne
loope
ficoms
bound
scas
bound
cmp
mov
lahf
imul
adcb
sarb
pop
adc
jge
fcompl
imul
neg
daa
pop
das
out
imul
xchg
hlt
jae
fbstp
lret
js
push
and
dec
and
negl
add
lds
in
out
and
aam
or
or
xor
inc
push
int3
and
cmp
push
sbb
push
push
loope
push
xchg
xor
push
xor
pop
sti
jnp
dec
call
inc
cmp
mov
jecxz
out
addr16
pop
addr16
xor
scas
mov
out
xlat
push
movsb
sub
mov
adc
and
add
cmp
xchg
pop
js
jae
adc
loopne
adc
ret
sahf
and
adc
add
das
iret
sbb
xor
fs
rcrb
push
out
in
cmp
ffree
mov
or
aad
lcall
adc
lcall
push
mov
sub
dec
test
add
inc
das
mull
into
mov
notb
push
sbb
adc
pop
orl
jne
adc
aad
clc
jo
stos
clc
add
testb
pop
movsb
std
rorb
cmc
mov
xchg
dec
push
adc
inc
adcb
or
test
js
js
cmp
push
call
sub
sbb
xor
fwait
and
popa
addr16
or
add
test
push
xchg
and
adc
ds
pop
jge
icebp
push
push
mov
in
mov
mov
out
ss
mov
ret
and
loopne
lcall
pushl
das
add
leave
rorb
addr16
cmp
cmc
mov
call
sbb
lahf
cli
or
mov
dec
inc
inc
lcall
insb
mov
cmpsl
mov
aam
pusha
insb
cmp
rol
aad
add
xlat
adc
xlat
or
sbb
nop
cmp
je
mov
dec
test
or
stc
jge
inc
fistpll
sbb
int
hlt
outsl
cmp
in
rcrb
test
sbb
lods
pusha
lahf
dec
cmp
pop
adc
adc
pop
cld
push
hlt
xor
fstl
xchg
sbb
rcll
or
insb
sub
xlat
inc
add
adc
mov
adc
mov
add
movsb
mov
fidivrs
push
and
inc
cltd
stc
or
daa
dec
out
push
lods
or
inc
popf
out
xchg
mov
xchg
sbb
in
enter
aam
inc
ret
mov
jg
and
xchg
ss
mov
in
loopne
push
pop
daa
adc
rcrb
push
xlat
in
daa
adc
mov
cwtl
cmp
inc
sub
ljmp
mov
and
addr16
sbb
jno
jns
jns
mov
pusha
in
sti
shl
adc
divl
mov
mov
jno
stc
pop
jb
sbb
mov
pop
adc
lock
popf
loope
sub
push
repz
mov
dec
jl
mov
jmp
push
imul
lret
and
cmp
jl
mov
fcomip
jno
adc
pop
sbb
cmp
jecxz
push
sub
sub
stc
and
in
mov
addr16
jb
std
inc
pop
gs
sti
ret
movsbl
push
mov
add
sti
or
push
int
cmp
sub
popa
inc
cmpsl
inc
repnz
and
rcrb
out
aaa
jl
es
cmp
bound
pop
and
hlt
sahf
add
push
push
adc
xchg
rclb
popf
mov
cmp
jno
outsb
ficoml
shlb
test
das
push
outsl
lahf
inc
imul
and
or
negb
mulb
inc
cmp
daa
adc
xchg
gs
mov
adc
cmp
ljmp
mov
outsl
movsb
add
mov
add
or
cmpl
ret
pushl
lret
repz
push
lods
mov
sbb
stc
pop
rorb
add
xor
jno
stos
sub
mov
sar
scas
mov
pop
cmpsl
xor
ljmp
jmp
adc
jbe
sub
inc
mov
loopne
outsl
icebp
rcrb
test
dec
push
lahf
mov
xchg
xor
inc
iret
sbb
lret
xor
or
cmc
xchg
jecxz
mov
pop
repnz
mov
lock
push
adc
add
lock
jae
and
or
sahf
adc
sti
aaa
adc
fildll
movsl
xchg
je
in
rcrb
shlb
std
push
add
rol
cmpsb
aad
add
repz
loop
cltd
mov
in
mov
pop
int
xor
fstl
mov
adc
add
andb
je
cmp
mov
mov
sub
lds
mov
call
out
xor
and
fsubs
xchg
sub
dec
push
pop
xor
rol
les
dec
dec
sbb
test
inc
lret
bound
cwtl
in
xchg
sbb
or
mov
pop
enter
rolb
adc
fdivrs
jbe
repz
outsb
test
fldl
repz
out
rcll
fimuls
pop
pop
or
div
adc
jle
sahf
jmp
cwtl
cmp
shrl
lds
mull
xor
cmp
je
loopne
jecxz
dec
inc
push
sbb
cmpsl
out
test
pop
mov
xchg
mov
dec
push
push
leave
cmpsl
cld
fs
sbb
loope
into
leave
or
lcall
daa
movsl
mov
cmp
lock
add
pop
cmc
push
add
mov
jns
iret
lfs
mov
sbb
mov
insl
and
or
dec
std
push
repnz
push
shl
ljmp
in
aaa
pop
outsb
adc
out
xchg
pushf
call
out
ret
pusha
jg
xchg
repz
xchg
fistpll
testl
test
inc
inc
jne
addb
dec
push
cs
sti
mov
adc
jae
outsl
xchg
jle
mov
xchg
fldcw
out
in
adc
dec
outsb
popa
scas
enter
or
andb
add
mov
mov
mov
fwait
in
jnp
adc
pop
in
push
xlat
dec
imul
mov
or
pop
mov
pop
aam
ret
or
push
add
shrb
stos
xchg
pop
loopne
rol
ficomps
jge
lods
stc
push
and
sub
rcrb
xorl
aas
out
rcll
inc
lret
dec
jne
cmp
fwait
or
xlat
icebp
mov
rorb
jg
sbb
clc
bound
insl
mov
mov
lea
loopne
push
js
int
sub
sub
test
call
aas
outsb
cwtl
pushf
add
sbb
push
rorl
cmp
adc
jnp
aad
cmpsl
push
dec
jmp
out
js
adc
mov
mov
clc
outsl
movsb
xchg
jb
cmpsb
icebp
jno
fiadds
xchg
stc
xchg
push
adc
inc
pop
or
clc
sbb
lods
hlt
pop
xor
cli
aam
cld
imul
inc
les
adc
push
and
ret
test
ror
or
push
scas
icebp
adc
xlat
adc
call
lock
push
xchg
sub
dec
mov
cmp
test
xor
test
loopne
repz
push
mov
and
sbb
mov
push
push
sarl
pop
sub
mov
push
lret
sbb
jo
in
xchg
xor
xchg
cmp
sahf
std
fisttpll
insl
cmp
lcall
movsl
fdivr
popf
or
lahf
or
iret
mov
rorl
sbb
jo
insl
sub
data16
std
inc
movsb
sub
mov
add
sub
dec
or
pop
xor
fisubrl
nop
mov
xchg
adc
call
adc
dec
cmp
or
out
das
xorl
add
and
pop
stos
call
test
jmp
add
hlt
mov
ljmp
jno
cs
and
ret
mov
inc
hlt
or
cmp
outsl
enter
fucomp
pop
inc
frstor
ss
lret
in
add
jmp
push
repz
das
pop
aam
mov
push
push
xchg
inc
or
or
push
movsl
dec
enter
or
push
inc
incl
aam
sub
and
xchg
mov
aad
add
sub
negb
neg
add
loopne
repnz
ret
mov
push
int
add
ds
inc
and
lahf
arpl
fcomip
std
out
loope
mov
mov
repz
pop
scas
sti
adc
das
cmp
push
sti
insb
cmpsb
scas
int
cli
out
and
or
inc
lock
lret
xchg
pop
add
xor
sbb
test
sbb
jmp
or
push
and
shl
vcvtdq2ps
mov
xchg
repz
and
mov
rorl
shlb
add
cmp
shrl
gs
pop
jmp
test
xor
xchg
ss
pop
lods
andb
pop
xchg
add
adc
ficompl
aad
dec
fsubrs
push
dec
push
cmp
std
pop
es
test
ret
mov
mov
popa
push
adc
dec
push
fisttps
xor
sub
fisubs
lods
xchg
push
xor
aaa
xor
pop
lahf
ret
fxch
and
jne
cltd
dec
mov
mov
loop
add
and
push
fldt
sarb
lds
and
sti
xchg
aaa
int
daa
sti
lds
nop
sbb
inc
fcom
mul
cmp
pusha
mov
icebp
xchg
jg
fadd
adc
bound
repz
movsb
pusha
mov
lahf
or
gs
dec
or
push
add
mov
mov
adc
movsb
stos
inc
stc
ror
adc
sbb
cmpsb
in
xor
cltd
jmp
idivl
xchg
sbb
cmpb
repz
aas
inc
cli
adc
dec
das
mov
xor
mov
cs
inc
mov
loop
pusha
lret
or
bound
ss
jo
ljmp
push
xchg
adc
cmp
mov
jp
inc
lret
sub
aas
sub
ja
xchg
xor
sub
cld
aam
fistpl
and
mov
mov
cmp
roll
pop
bound
jns
mov
je
clc
push
fisttpll
in
pop
mov
rorl
out
jp
cli
mov
ljmp
fcom
fcompl
cmp
pop
and
dec
pop
aas
xor
out
outsl
pop
movsl
mov
xor
movsb
mov
clc
jecxz
stos
call
je
ds
imul
sti
jmp
movsb
shlb
hlt
sbb
sub
xchg
ds
cmc
jl
jge
sub
pop
inc
outsb
rcr
iret
pusha
adc
loope
push
std
jo
popf
sub
loop
dec
ret
stos
in
xor
adcl
mov
filds
sbbl
jnp
fidivs
mov
iret
popf
mov
cmp
into
and
jl
aad
es
test
inc
pusha
dec
push
add
cmp
fsubr
test
push
sahf
pop
pop
mov
sub
xchg
mov
int
fimull
rcrl
notb
push
aas
pop
data16
inc
call
dec
pop
xchg
repnz
fsubrl
jb
out
dec
xor
dec
pop
fildll
dec
clc
rcll
movsb
in
loop
cmp
mov
rclb
aad
loopne
ret
aad
mov
pop
pop
test
fadds
enter
pop
in
or
adc
sbb
shrl
sti
mov
cld
fsubl
fisubrl
sarl
jecxz
add
inc
pop
push
cmpsb
fs
in
inc
jmp
arpl
scas
dec
xchg
mov
pop
je
cmp
dec
sub
add
jecxz
scas
repz
mov
jo
rol
mov
pop
adc
ret
push
int
sub
cld
sub
xlat
jnp
das
pop
xor
mov
mov
dec
xchg
push
add
ja
mov
and
xor
xor
inc
and
sub
das
int
xor
or
daa
mov
dec
push
push
mov
clc
into
inc
dec
or
pop
fisttpl
es
repz
and
add
insl
sti
add
incb
cmp
pop
fstpt
es
and
ljmp
lods
ret
in
xchg
shr
inc
fidivrl
call
sbb
rorl
dec
and
sbb
jns
pop
shlb
mov
testl
jecxz
call
jb
fs
fs
or
daa
push
add
popa
jle
icebp
jo
mov
sti
movsb
mov
xchg
mov
es
jl
sub
clc
mov
mov
cmpsb
and
in
into
int3
in
mov
mov
mov
out
adc
test
inc
ret
cmpl
aad
xchg
jmp
cmpsb
push
loopne
lret
mov
sarl
aam
ret
push
pop
mov
pop
push
fldt
xlat
sub
push
mov
das
jge
stos
bound
stos
adc
insl
repz
xchg
mov
mov
mov
iret
and
push
cmc
cld
mov
bound
outsl
int3
movsl
sbb
push
mov
push
xor
and
hlt
ficomps
popf
mov
hlt
jecxz
aas
adc
aaa
xchg
pushf
fnstenv
stc
jns
repz
xlat
enter
and
test
ret
cli
stos
call
mov
loopne
inc
scas
pop
sbb
out
mov
shrd
mov
sti
jnp
dec
lcall
xchg
clc
xor
lret
sbb
imul
sahf
repnz
adc
arpl
test
movsl
sbb
bound
pusha
mov
in
in
or
and
aas
repnz
add
ds
clc
aam
loop
pushf
lidtl
ficoml
add
mov
loope
jge
pop
mov
sub
movl
pushf
or
dec
pop
lret
fucomp
cmpsl
je
fisubrs
ret
and
push
lods
push
test
test
stc
pop
gs
clc
movsl
clc
dec
jmp
int3
jae
jae
cmpsb
les
cld
cs
shll
shr
imul
enter
xchg
push
pusha
sbb
int3
push
fsubrl
adc
xchg
loope
push
sbb
cmpsb
pop
xor
xchg
mov
jmp
cmpsb
stc
dec
in
lret
pop
scas
loopne
into
scas
shll
jne
hlt
cmpsb
into
mov
mov
outsl
adc
and
cmpl
icebp
and
scas
call
inc
xchg
push
pushf
in
sbb
xor
les
stos
mov
rcl
sub
leave
negb
cmpsl
icebp
cmp
mov
enter
rclb
insl
fisubrl
mov
rcrl
add
in
pop
repnz
loope
pop
fistpl
js
imul
ret
ljmp
xor
xchg
jb
leave
ja
iret
leave
mov
cltd
in
aad
aam
push
enter
jl
adc
and
sahf
mov
xor
loope
fisubl
sub
push
outsb
in
lahf
aad
mov
add
sbb
aaa
mov
cmpsl
pop
or
lret
fcmovnbe
in
into
push
inc
cmp
hlt
xor
xor
adc
repz
jg
add
mov
pop
sti
fwait
fwait
add
sbb
out
loop
fs
ror
fldl
sbb
mov
xor
fstpl
cmc
xchg
mov
ret
int
in
mov
and
adc
dec
push
adc
push
mov
jnp
jmp
mov
pop
pop
test
dec
loopne
inc
dec
add
test
add
iret
jcxz
loopne
jnp
scas
pop
ja
enter
cmc
loopne
pushf
addr16
or
sbb
dec
lea
or
push
test
gs
fcmove
cmp
mov
and
dec
or
xchg
aam
jne
xlat
movaps
leave
inc
and
jno
mov
cmp
jno
scas
adc
out
jl
inc
or
mov
insb
push
sub
fisubl
inc
pop
xor
cmp
and
add
and
ret
xlat
idivl
insl
lcall
adc
iret
inc
adc
adc
push
in
cld
mov
pop
fwait
jnp
mov
xchg
mov
ret
lret
mov
jnp
xorb
jo
mov
mull
mov
xor
lret
cmp
or
sbb
or
and
inc
sbb
jecxz
push
pop
dec
adc
cmp
subb
push
push
and
or
dec
ja
pop
in
add
mov
cmpsl
inc
mov
out
mov
jo
mov
xlat
stos
adc
fucomip
ror
insl
mov
push
or
movsl
fldl
ret
mov
fisubs
push
fneni(8087
movsb
test
mov
shr
out
adc
mov
sub
in
jg
cmp
sbb
in
xor
sub
stos
scas
adc
lods
lret
cmp
mov
or
pop
rol
gs
jl
loop
je
pop
icebp
ffreep
and
mov
mov
je
mov
push
jecxz
ret
lods
fdivrs
sarb
mov
pop
testl
inc
dec
and
clc
lods
movb
ret
aas
mov
movsl
lods
stos
xchg
xor
pusha
sti
in
cwtl
adc
or
mov
and
mov
or
adc
cmp
icebp
pop
sub
dec
push
fnstcw
inc
dec
das
iret
sbb
push
cmp
jp
push
sbb
mov
sbb
push
dec
sub
movsl
nop
and
jns
test
sbb
test
and
sbb
xchg
pop
filds
movsb
adc
loope
pop
nop
push
pusha
sbb
sbb
cmpb
fisttps
jmp
and
idivl
cmpsw
outsl
lret
dec
loop
stc
sbb
sub
aas
jge
push
mov
jns
push
xor
sarl
dec
push
mov
popa
mov
dec
xchg
arpl
ret
les
pushf
mov
cmp
jle
ljmp
push
xor
mov
lock
das
out
cmp
sbb
lahf
loope
popf
rclb
add
lods
cmpsb
bound
fwait
movb
ljmp
lea
adc
xor
mov
mov
push
push
icebp
push
sub
push
fisttpl
out
in
mov
je
mov
loop
pop
cld
mov
lods
loop
or
sbb
inc
mov
shlb
add
mov
add
push
test
pop
popa
pushl
repnz
in
pop
sub
sarl
mov
push
xor
jbe
in
jecxz
jg
cmc
stc
fimuls
aam
push
daa
scas
cmp
dec
hlt
scas
push
adc
mov
repnz
pushf
and
mov
insl
cmp
lahf
adc
xor
mov
lds
and
pop
sub
jmp
insb
enter
fdiv
enter
or
or
negl
sub
inc
mov
stc
pop
lds
and
pop
pop
xchg
xchg
xlat
lret
xchg
aam
push
call
and
ret
ss
sub
mov
stc
out
cmpl
mov
jne
or
scas
jg
popa
jne
adc
cwtl
or
jns
fdivrs
sbb
or
mov
out
js
and
lock
jbe
arpl
lahf
lret
in
inc
sbb
mov
inc
fwait
pushf
mov
push
ret
sub
lahf
add
in
or
sub
mov
fisttpl
pop
cli
test
fnstenv
jge
sub
xlat
pop
in
cmp
or
and
add
add
cld
and
sbb
and
repnz
mov
adc
lret
sub
out
adc
ret
test
fnstenv
add
leave
shrb
aad
pop
aam
mov
xlat
push
fnstsw
adc
fs
rsqrtps
addr16
fiadds
xlat
or
sbb
mov
std
mov
push
fistpll
push
stos
dec
ret
fcoml
cmpsb
mov
or
cmpsb
xchg
jg
inc
xor
mov
pop
sahf
enter
cld
cmp
scas
sbb
mov
cs
pop
mov
aad
cmpsb
cmpsl
jp
fnstcw
out
test
sbb
sub
sub
scas
sub
stos
pop
cmpsl
int
sbb
insb
je
inc
insl
sti
or
fcmovb
push
out
xchg
scas
enter
add
loope
push
sbb
loop
cld
cs
std
mov
jo
scas
mov
sbb
orl
and
dec
and
mov
mov
rcll
mov
stos
loopne
jae
cwtl
repnz
lret
sti
stos
scas
into
mov
inc
sbb
fidivrs
add
pop
repnz
out
gs
leave
push
pop
inc
mov
dec
hlt
push
repnz
sub
push
loopne
jbe
sbbb
fdiv
cld
inc
lret
cmc
lods
imulb
sbb
inc
cwtl
add
in
xchg
pop
mov
ret
sbb
fistpl
cmp
cmp
or
cmpsl
add
sbb
cmp
jmp
xchg
jle
loop
ss
adc
push
pop
call
mov
repnz
sub
mov
sbb
fucomi
xor
je
fisubrs
mov
shl
inc
jmp
and
add
jne
enter
jae
rcrb
add
inc
jecxz
lods
test
or
and
lret
pop
arpl
mov
add
or
dec
ljmp
inc
dec
aad
add
sbb
push
cwtl
stos
movsl
sarl
mov
or
mov
cmpsl
and
push
rolb
mov
pop
sbb
roll
adc
cmc
int3
mov
ja
inc
sarl
hlt
hlt
sub
or
sbb
inc
xor
not
pop
stos
pop
xor
mov
aaa
xor
sbbb
js
add
push
jno
hlt
call
lret
icebp
lret
sarb
add
push
push
je
fdivl
jne
fsubr
imul
inc
xchg
daa
sub
pop
daa
sbb
mov
xor
dec
test
mov
push
push
orb
aad
adc
xchg
shrl
jle
or
cmp
inc
inc
sub
xchg
add
inc
icebp
xchg
jae
mov
lahf
mov
xorb
cwtl
dec
fadd
pop
mov
fsts
adc
mov
jg
test
mov
sbb
clc
jg
shl
test
or
jge
jbe
cmp
mov
mov
je
stos
push
in
pop
sti
daa
sti
jbe
out
in
sbb
cld
pusha
adc
jns
insb
movsb
pop
mov
ljmp
or
ror
push
ret
inc
mov
aam
popa
sti
xlat
push
rolb
sbb
inc
ret
icebp
cmp
int
icebp
repnz
stc
dec
inc
aam
clc
icebp
cmp
cwtl
out
mov
sub
cmp
xor
cld
fnsave
rolb
dec
in
imull
xchg
cmp
xchg
adc
add
stc
sbbb
negl
es
popa
push
xor
nop
pop
or
jo
adc
andl
pop
dec
add
sub
xchg
mov
leave
push
jle
sub
pop
insl
scas
mov
and
mov
aas
cltd
sti
pop
fidivl
jmp
jecxz
add
sti
xor
icebp
sub
or
pop
xchg
jmp
pop
jle
loope
mov
add
repz
pop
ffreep
push
loopne
addr16
add
pop
mov
popa
stc
adc
call
pop
outsl
imul
cli
pop
inc
daa
pop
pop
add
mov
add
pop
and
jmp
aaa
pop
and
leave
nop
fsubs
pusha
fnstsw
push
mov
out
fldenv
push
push
cmp
adc
aaa
ds
pop
adc
in
xchg
ds
xor
fsubl
es
and
ja
fistps
mov
mov
jge
jbe
shl
pop
inc
pop
mov
sbb
xchg
pop
clc
scas
dec
addr16
nop
repnz
andb
into
es
out
lock
cmpsl
cwtl
jle
pop
mov
cmp
xor
fisttpl
arpl
pushf
fcompl
data16
ret
lock
add
fdivrp
popf
leave
cmc
in
popl
addl
hlt
mov
aas
adc
cmp
rorl
cmp
pop
xor
sub
in
inc
mov
inc
or
mov
xchg
xor
dec
incl
cmp
jecxz
stos
xchg
loop
jmp
cmp
jo
scas
sub
and
in
lds
xor
scas
mov
mov
stos
mov
xchg
mov
out
fldl
push
adc
test
roll
js
adcl
mov
pop
cmp
insb
add
int
push
aaa
push
lock
dec
and
in
cmc
ja
loopne
mov
out
enter
cmp
and
sub
pop
test
pop
pop
lret
cli
jecxz
cmp
repnz
les
mov
std
rcrl
out
jge
fisubrs
int
inc
lret
lret
addl
sahf
mov
pop
icebp
sub
stos
push
pop
and
out
stos
lret
enter
aaa
lods
ja
or
dec
sbb
xor
inc
mov
loope
cmp
enter
push
sub
xor
xchg
std
push
pop
in
cmp
cli
and
push
push
aad
pop
lahf
ss
stc
mov
lock
fsubp
aas
loop
divb
adc
push
sarl
inc
nop
fbstp
xor
push
iret
and
jns
xchg
push
ja
inc
add
aam
fildl
pop
cmp
negl
xchg
add
jl
cmp
movsb
divb
sar
pusha
ret
aaa
mov
fptan
mov
loope
mov
push
loopne
out
sbbl
jl
mov
and
loopne
xchg
push
lret
mov
jp
cmp
dec
fs
aas
add
ljmp
pop
icebp
mov
movsl
int
cwtl
sub
push
jne
mov
mov
aam
pop
leave
ss
lock
sub
adc
aam
les
or
add
mov
inc
ret
aam
mov
adc
cmp
adc
cmpsb
mov
inc
and
repnz
mov
or
pop
cmpsl
mov
sub
xor
inc
sbb
shrb
test
rol
inc
aaa
push
movsl
xchg
cli
je
movsb
sbb
inc
pop
je
rclb
sub
dec
in
lahf
cmp
hlt
inc
lock
sysret
push
mov
pop
cmp
xlat
stos
enter
jo
mov
fcompl
adc
or
or
add
push
lret
xchg
cmp
or
mov
je
arpl
repz
push
icebp
test
inc
or
pop
lea
shr
xor
sub
int
addr16
xchg
jg
dec
sahf
test
mov
mov
adc
fcoms
mov
js
fcomps
ret
pushf
cmp
lods
fiadds
in
ret
add
adc
mov
lods
mov
enter
sbb
frstpm(287
sahf
stos
jne
and
push
pusha
mov
sbbl
addr16
xor
shll
gs
adc
xchg
cmpsb
or
adc
lret
xlat
clc
int
adc
arpl
mov
add
adc
xchg
dec
xor
stos
push
in
cwtl
sub
push
xchg
cld
lcall
rcll
cmp
loope
int
mov
fisubl
std
loopne
xlat
es
movsb
cld
mov
cmpl
adc
js
xchg
push
cmpsl
push
loop
cmp
xchg
mov
cmp
and
jle
mov
sub
xchg
repnz
mov
out
jg
pop
dec
adc
ljmp
sub
int3
mov
leave
xor
mov
shlw
rolb
pop
out
shlb
les
mov
xchg
ss
adc
repz
add
je
cmp
jb
add
mov
dec
test
movsl
add
xchg
pop
mov
jo
fnstcw
shrl
and
cld
cmp
or
jge
cwtl
push
add
xchg
shld
cli
cmp
sahf
je
lcall
bound
mov
add
insl
fs
and
lret
mov
xchg
or
test
pop
fdivs
decb
inc
sti
fisttpll
and
imul
sbb
rcrb
shrb
aam
push
jo
dec
sahf
stos
mov
fsubr
stos
sub
cmp
adc
pusha
inc
dec
flds
sbb
cmpl
cmp
xchg
jno
arpl
dec
daa
adc
mov
push
mov
mov
loop
sti
dec
xchg
cs
jnp
lcall
inc
enter
jecxz
lds
xchg
adc
jp
or
adc
sbb
outsl
dec
ret
hlt
rolb
and
ret
jo
pop
das
cmpsl
mov
fstenv
stc
stc
jo
push
and
xor
xchg
ljmp
and
cs
push
dec
movsl
outsl
ljmp
or
addl
jnp
pop
sub
and
fsts
push
cmc
sub
daa
sbb
cwtl
mov
ljmp
addl
enter
dec
xchg
sub
and
pushf
push
ja
ficoml
mov
or
and
add
stos
pop
iret
cltd
roll
daa
inc
jo
mov
push
aad
mov
test
adc
mov
sbb
mov
imul
popl
sbb
adc
daa
cmp
jb
or
mov
add
inc
shl
sarb
push
jl
addl
sahf
ljmp
orl
shlb
xchg
lea
xor
mov
scas
rorl
push
jno
push
pop
push
lahf
push
sub
push
rclb
xchg
sub
mov
jl
xor
sub
insb
adc
lcall
or
cmc
sbb
push
xchg
lret
pop
push
in
xor
lret
inc
loop
in
popa
dec
cmc
cs
mov
jge
in
push
lret
mov
adc
lahf
test
and
adc
jbe
rorl
sbb
fistps
loopne
sbb
cmp
shll
sbb
jbe
adc
sub
cmc
xchg
fisttps
mov
and
lods
inc
mov
xor
ffreep
mov
in
dec
xlat
pop
mov
adc
pop
add
push
mov
nop
dec
fistpl
add
pop
xbegin
iret
dec
sbb
clc
and
adc
jle
xlat
and
in
add
mov
repnz
pop
or
sbb
xchg
adc
repnz
pop
sbb
pushf
movd
sbb
sbb
out
cs
pop
add
stos
divb
out
fcmovnu
push
mov
add
mov
pop
sub
adc
int3
jbe
loope
lods
sti
fwait
adc
mov
pop
adc
and
test
rorl
and
mov
sbb
xor
stos
repnz
imul
decl
jg
mov
fsubl
xchg
mov
rcr
adc
inc
sti
je
push
jnp
ret
mov
and
mov
jnp
iret
xchg
fcompl
clc
adc
mov
fists
jno
call
or
xchg
sbb
pop
xlat
sbb
rcrl
cmp
insb
add
scas
iret
imul
push
cmpsl
mov
and
orl
leave
jmp
inc
mov
popf
xlat
repz
jg
test
dec
cmp
mov
cwtl
test
cmp
cmp
push
sub
aas
bswap
pop
jecxz
or
add
scas
adc
and
cmc
test
dec
jl
out
clc
push
xor
mov
rorb
aaa
push
lahf
push
jecxz
sbb
push
xor
add
xchg
xchg
cli
pop
adc
add
cmp
in
cld
std
orb
and
imul
enter
and
out
ret
inc
push
rorl
in
or
pushw
cmpsl
das
or
test
sti
dec
notb
fnstcw
lds
jge
int
fsubrl
movb
add
mov
mov
lods
dec
push
loopne
arpl
add
outsl
sbb
pusha
aas
fcompl
push
out
cld
fwait
mov
ret
int3
push
and
aas
in
cld
jno
push
sbb
xor
adc
fwait
xchg
and
ja
ret
sub
loopne
fists
adc
cmp
jno
push
out
data16
xchg
mov
iret
sub
rorb
hlt
mov
mov
bound
mov
sarb
push
daa
xor
cmc
loope
xor
aaa
inc
fidivs
cld
xlat
push
ficoml
sub
aas
mov
fwait
sbb
cmp
fdivr
fisttps
jge
in
clc
jecxz
cmp
pop
mov
pop
insb
sub
add
test
loope
je
inc
out
sarb
add
lahf
imul
test
xor
jnp
jb
cld
dec
in
cmpsl
jo
pop
xchg
cld
cmp
dec
imul
mov
push
pop
mov
mov
pop
mov
add
divl
iret
pop
fs
stos
shlb
jl
mov
roll
pop
aad
aaa
adc
or
add
lret
outsb
adc
nop
movsl
popa
push
iret
je
in
aas
mov
cli
xchg
or
test
add
xor
cli
xor
jns
subb
and
mov
push
pop
mov
cmp
mov
andl
mov
mov
or
fnstenv
popf
push
clc
mov
mov
divl
fadds
jb
frstor
add
loop
jg
mov
int3
int3
sbb
mov
mov
rcr
xor
lock
push
xchg
sub
in
and
cli
mov
sbb
in
stos
fcoms
cld
lds
and
dec
or
in
jmp
cld
enter
ffreep
mov
inc
pop
mov
clc
or
hlt
push
aad
aam
roll
cmc
xchg
cmpsl
add
inc
in
rcll
pop
adc
xchg
sub
mov
pop
lcall
jg
movsb
mov
daa
and
shll
xor
loope
inc
mov
dec
into
nop
dec
rclb
xchg
xchg
cmp
pop
sbb
mov
cli
rclb
testl
fwait
shlb
dec
roll
les
mov
imul
cmp
jbe
movd
and
int3
or
add
mov
aaa
pop
lods
dec
dec
inc
adc
inc
push
xlat
dec
insb
stc
movsb
sub
fucomp
cmpsl
adc
out
xchg
movsb
out
jl
mov
outsb
fisttpl
repnz
jnp
add
jae
aaa
jl
das
sbb
jbe
rcrl
outsl
cmp
mov
jo
xlat
leave
mov
stos
es
sti
rcrl
mov
ret
rcr
and
push
cld
push
or
fcoml
dec
pop
test
pushf
cmc
ficomps
stc
mov
std
into
movsb
int3
cs
jg
add
push
lret
loope
xor
mov
movsl
sbb
inc
xchg
pushf
mov
sub
adc
icebp
sbb
xchg
pop
mov
call
mulb
imul
imul
mov
mov
fistpll
lret
add
shrb
sub
pop
out
lea
mov
mov
cmp
fucomi
add
int3
lods
mov
cmp
outsb
inc
pop
add
xor
mov
mov
jmp
in
leave
xchg
in
enter
jbe
fiaddl
push
adc
cmp
cmp
fwait
mov
fists
cmp
jmp
adc
sahf
add
cmp
adc
and
scas
pop
aas
adc
aam
push
xchg
mov
enter
lods
push
dec
cmp
shrl
push
mov
ret
scas
int
pushf
dec
in
aam
sub
add
aam
inc
ret
push
push
push
or
sub
popa
sub
fmul
es
cmp
into
dec
sub
in
xchg
dec
xchg
inc
or
jg
iret
lcall
scas
rcr
dec
pop
data16
add
addr16
stc
mov
jo
mov
out
dec
push
stos
jp
pusha
cmp
leave
dec
sbb
stc
pop
lds
xchg
dec
sbb
nop
je
dec
cwtl
push
mov
pusha
pop
lds
int
dec
aas
rcrb
dec
aas
dec
pop
std
mov
outsl
cmp
leave
rorb
lret
cmp
xchg
nop
mov
hlt
inc
mov
mov
aas
icebp
mov
push
iret
push
out
mov
mov
and
mov
notl
cmp
push
inc
call
loop
adcb
hlt
xchg
fildll
and
call
xchg
and
shr
loop
jl
pop
mov
rolb
dec
jl
push
inc
lock
gs
daa
repz
sahf
ss
cmp
inc
sbb
repnz
mov
xchg
aad
dec
cld
inc
adc
mov
pop
push
stc
ficomps
xor
in
roll
xchg
pop
outsl
push
nop
dec
cld
fisubl
push
sbb
es
cld
inc
inc
xchg
adc
sbb
clc
pop
in
ffreep
inc
fists
push
push
cs
mov
daa
fstpl
test
loop
and
fildll
push
and
rolb
test
iret
repz
mov
sub
test
mov
xor
lcall
jmp
jp
clc
adc
mov
daa
push
or
lret
repnz
jecxz
mov
xchg
adc
adc
mov
sarl
fwait
lods
call
inc
aaa
ja
fs
dec
ljmp
push
insl
int3
jae
mov
cmpsb
insl
inc
daa
push
loope
imul
clc
adc
out
mov
lret
js
xor
push
push
push
icebp
popf
dec
adcl
cmc
push
aaa
lea
out
aas
iret
pusha
clc
inc
pop
adc
int
add
enter
dec
ficoms
outsl
lret
dec
or
bound
aaa
add
jp
push
loope
dec
sbb
outsl
push
xor
and
daa
stc
arpl
pusha
stc
jmp
cmp
call
mov
cltd
jle
xchg
out
addr16
pop
loopne
dec
inc
test
stos
or
push
out
je
mov
mov
js
cmpsb
stos
pop
jp
iret
jg
mov
mov
push
inc
pop
mov
mov
sub
inc
xchg
adc
lret
fstl
jl
outsb
sbb
das
fs
icebp
mov
push
leave
jo
inc
in
xchg
adc
fucomip
jge
dec
push
arpl
fisubs
es
add
fldcw
pop
jno
push
inc
dec
fnstsw
rcrb
inc
cltd
movsb
dec
inc
repz
jb
cmp
add
insl
call
and
fildl
push
inc
cmp
xlat
push
xchg
addr16
push
enter
ds
sub
jp
push
xor
adc
int
js
adc
cmp
adc
dec
aaa
scas
and
sbb
sbb
fldl
pop
xor
mov
int3
inc
repnz
lods
fstpl
js
mov
cwtl
nop
mov
push
fwait
stos
jecxz
and
lods
in
sbb
call
fptan
addl
loopne
fwait
aaa
push
mov
mov
pop
push
in
jns
loope
or
ret
cmp
popa
jne
mov
pop
or
cmp
jno
cmp
rclb
sahf
inc
push
fdivr
xchg
jbe
and
negb
aaa
mov
aas
xor
push
sub
push
sar
push
scas
test
cmp
mov
jp
fcmovu
mov
xchg
repz
inc
jo
imul
data16
add
pop
sarl
cmp
jnp
outsl
loopne
mov
mov
repz
roll
cmpsl
and
test
jl
shlb
sbb
ja
push
jo
fwait
dec
pusha
js
cmp
jmp
push
loope
add
pop
dec
leave
mov
mov
ss
pop
into
xor
dec
mov
int3
pop
cli
sar
mov
or
xor
pop
adc
inc
js
or
xor
scas
stc
cmp
add
and
aaa
jmp
mov
xchg
push
pause
pushf
aas
dec
js
bound
push
cmc
mov
xor
cli
push
ja
test
sarb
insl
xor
loope
jecxz
loope
cmp
push
adc
xchg
call
adc
mov
insl
cmp
sahf
lcall
dec
movsl
fcoml
jmp
add
aad
rol
jecxz
jecxz
mov
xor
and
rclb
div
loop
mov
mov
sub
adc
js
ds
out
lcall
mov
mov
insl
fistpl
xlat
or
cmc
fstl
aam
pop
cs
or
out
push
cltd
mov
mov
jno
dec
aad
pushf
dec
int
into
push
adc
sub
test
dec
push
lock
stos
loop
inc
data16
fbstp
xor
mov
adc
add
sub
cld
cmc
shr
loopne
in
mov
sbb
fwait
sub
sub
sbb
xor
lret
mov
or
mov
lods
lea
je
cli
jno
sbb
mov
repnz
loop
insl
push
mov
and
aaa
std
mov
inc
add
gs
roll
in
lea
dec
adc
dec
mov
in
and
movsb
and
rorb
lret
adc
cli
mov
lcall
or
adc
ret
clc
scas
pop
or
pop
daa
in
jbe
push
out
and
or
rcll
adc
js
subl
adc
iret
insb
in
icebp
xor
or
jae
shlb
dec
sbb
add
dec
jecxz
push
push
push
imul
inc
shrl
cltd
xor
mov
and
xchg
cmp
cmp
loope
and
inc
inc
je
loope
in
xchg
mov
mov
mov
roll
out
rcrl
xchg
add
mov
jmp
pop
xor
lcall
insb
icebp
lea
lcall
lods
xor
adc
addb
sbb
aaa
sbb
rorb
pop
or
lods
pop
fiaddl
or
in
inc
fcoml
ss
xchg
ret
mov
int3
inc
pop
sbb
xchg
jns
jne
ja
lcall
popl
movb
xchg
jnp
cli
or
xor
dec
lahf
popa
leave
mov
jno
pop
repz
push
aad
inc
or
or
push
mov
add
xor
push
pmuludq
xchg
leave
mov
sbb
scas
push
or
cmp
lock
sbb
arpl
pop
movsb
xchg
cltd
scas
jl
xor
jno
xchg
mov
sahf
sub
add
scas
dec
outsb
dec
xor
bnd
push
bound
cmpsb
or
or
outsl
setb
pop
shlb
sub
nop
test
inc
aad
adc
sbb
ss
sahf
sub
sub
push
in
aaa
loopne
cmp
jns
push
loopne
bound
pop
clc
in
mov
leave
pop
mov
sub
sub
inc
xchg
mov
pop
cmp
loopne
je
xor
and
mov
jecxz
or
xor
mov
fstpl
cld
inc
xchg
mov
leave
pop
shrb
dec
into
xchg
jmp
sbb
ss
movsb
mov
shrd
stos
negb
ret
imul
mov
sub
sti
stc
adc
stos
and
test
into
jp
sbb
icebp
repz
je
shrb
sub
out
xchg
subl
outsl
mov
mov
data16
dec
loopne
sbbl
cmp
jne
or
enter
mov
not
xchg
ljmp
fimuls
dec
jge
fcmovbe
pushf
mov
sub
fs
scas
mov
push
or
andps
mov
mov
inc
push
mov
sub
repnz
lahf
or
fsincos
rcrb
hlt
xor
inc
xchg
jmp
push
int3
cli
pop
sbb
pop
push
push
push
sbb
ret
jp
jge
adc
outsb
mov
pinsrw
jecxz
out
xchg
sahf
stc
jecxz
lds
pop
cmp
fidivl
es
adc
jle
hlt
jp
js
lcall
inc
cmp
fwait
aam
jns
leave
xchg
stc
adc
jns
addr16
arpl
xchg
aaa
push
int
xor
inc
dec
add
jne
scas
pop
jle
bound
dec
xchg
in
mov
push
or
vmovaps
mov
imull
adc
push
push
nop
push
int
shlb
fidivrl
pop
dec
pusha
in
xchg
mov
aaa
and
imul
insb
push
mov
mov
cwtl
cltd
xchg
mov
cli
test
push
cmpsb
fistpll
int3
pushf
sti
jecxz
sbb
in
or
or
roll
in
enter
fwait
decl
test
pop
jmp
repnz
mov
jge
jbe
xor
and
sub
inc
test
mov
fidivl
mov
pop
xchg
loop
and
shlb
or
xchg
jg
pop
cmp
mov
testb
loopne
int3
repnz
repnz
fimull
push
inc
pop
ja
sub
cld
jne
add
cli
cmp
psrlq
iret
jecxz
mov
loop
and
inc
rcrl
xchg
mov
cmpb
movsb
ljmp
dec
jecxz
js
je
loop
cltd
mov
cmpl
adc
jp
jge
jge
jae
fcomps
repnz
push
sub
cwtl
lods
adc
xor
je
mov
pop
mov
add
mov
nop
arpl
enter
mov
aad
xor
add
xchg
push
cmc
stos
pop
loope
test
mov
xchg
fistpl
pop
imul
int3
xchg
fldcw
fwait
pop
fimuls
adc
fcoms
sub
subl
sbb
adc
div
stos
addr16
fdivr
daa
adc
and
lret
inc
iret
decl
adc
push
inc
adc
mov
adc
inc
imul
mov
push
fists
mov
jecxz
imul
xlat
inc
mov
std
lret
cs
pop
lock
sub
fcmovu
daa
jmp
mov
xchg
int3
pop
lret
inc
aam
adc
popa
mov
cli
add
cld
lds
jns
sbbb
push
jnp
clc
jp
jae
arpl
mov
js
lret
fidivs
lahf
add
iret
pop
dec
out
push
adc
ja
push
cld
aam
cmpl
scas
lock
aas
jne
dec
jb
arpl
fidivl
out
jnp
imul
pop
inc
push
add
jnp
xlat
in
cld
rorl
mov
std
shl
sub
xor
mov
js
add
xor
dec
pop
jg
fwait
jnp
popl
ljmp
cmp
aaa
mov
das
fimuls
pop
sub
outsl
sub
pop
pop
push
test
adcb
pop
sub
xchg
cmp
call
std
aas
in
and
xor
dec
lahf
jg
fwait
jnp
popl
adc
push
xchg
insb
out
mov
ret
dec
lock
mov
mov
addl
pop
fucomi
xchg
xor
pop
lods
pop
arpl
icebp
dec
inc
cld
push
mov
lea
and
repz
mov
push
sub
adc
xor
xlat
xchg
inc
and
je
cmp
out
pop
and
jne
testb
dec
push
xor
fbld
push
xor
push
mov
cwtl
shll
pop
aam
dec
jnp
jecxz
jno
icebp
imul
xor
shl
push
jecxz
push
xor
loopne
ret
mov
je
sahf
call
add
jne
push
lcall
daa
faddp
pop
mov
jo
out
fimuls
push
cltd
dec
xor
rcl
mov
sti
mov
int3
test
jecxz
adc
repz
cld
jne
xor
xchg
or
cmpsl
aas
enter
faddl
jb
xor
in
lret
clc
fwait
icebp
and
jg
pop
mov
inc
or
xor
push
ret
jl
mov
mov
and
mov
dec
pop
jg
pushf
cmp
push
movb
lahf
add
jno
roll
dec
dec
pushf
stos
push
fiadds
or
add
adc
loope
push
jecxz
pop
divb
inc
adc
sub
push
push
xlat
bound
scas
aam
leave
lret
addl
push
out
mov
jge
cld
cwtl
jge
xchg
sub
inc
test
sti
pop
lret
mov
movsb
fxch
gs
out
xor
adc
xchg
or
ret
rorb
sub
push
cmp
jle
mov
and
addr16
sbb
sbb
or
mov
out
xlat
push
or
je
inc
sub
cmc
sub
into
jg
cwtl
and
cmp
out
aas
mov
inc
lret
mov
dec
jecxz
xlat
out
mov
inc
cmp
inc
pusha
xchg
cmpsb
std
adc
cmp
fnstsw
pop
adcb
sbb
add
mov
mov
shll
mov
adc
mov
sbb
arpl
xlat
rolb
fwait
cmpsb
lea
mov
inc
fmul
xchg
lcall
push
mov
lock
inc
out
in
mov
xchg
cs
jnp
dec
ja
sbb
dec
rcl
out
hlt
test
ss
adc
or
pop
jge
pop
mov
sub
insl
mov
jge
adcb
clc
jns
jmp
mov
test
les
mov
ret
jnp
pop
adc
mov
stos
add
mov
pusha
mov
xchg
scas
sub
divb
gs
jmp
jle
jp
aas
xor
inc
jle
cmp
xchg
mov
adc
xchg
sub
add
xchg
ja
cli
ljmp
rcrl
sbb
aas
pop
fisubrl
sbb
jno
push
dec
and
or
icebp
pop
loopne
test
push
pusha
mov
lea
popf
cmp
mov
inc
cmpsl
or
call
movsb
movsl
push
push
inc
popa
jnp
fwait
jl
scas
imul
leave
push
loopne
and
pop
clc
sub
push
int
and
sub
jnp
sub
lret
lcall
adc
mov
nop
mov
out
xor
test
mov
mov
pop
out
sub
mov
sub
inc
xchg
cmp
test
aaa
or
and
mov
push
sbb
cld
jbe
adcb
popa
mov
jle
lret
mov
dec
les
pop
sbb
ds
mov
ljmp
xlat
in
fdivs
insl
fiaddl
mov
repz
adc
stos
cld
or
nop
popf
in
sbb
stos
dec
xlat
in
ret
fbstp
clc
inc
push
adc
ret
jecxz
adc
movsb
fcmovne
das
push
int3
mov
aad
ss
pop
fnstsw
inc
pushf
sub
and
fsubrs
or
pop
cmc
adc
cmp
test
sub
int3
fwait
gs
cmpsb
jns
les
xchg
sub
add
cmpsl
aas
lods
adc
mov
adc
cwtl
cmp
fcom
in
xchg
xor
lret
or
pop
xchg
and
pop
aam
repnz
push
call
adc
ss
or
hlt
popf
or
nop
ret
add
loopne
jne
loope
imul
and
inc
loop
lcall
fnsave
dec
xlat
addr16
test
xor
push
push
xchg
sarb
adc
sub
cmp
push
stos
add
push
scas
aam
dec
pop
jno
sbb
pop
aas
and
mov
dec
hlt
repz
sub
divb
cs
push
aaa
fmull
cmp
ja
cmpsl
sbb
aam
sarl
pop
push
pop
or
aas
adc
imul
xor
push
sub
cmpsl
pop
cli
add
in
scas
xor
xchg
psllq
fcmove
adc
xor
notl
std
aaa
out
fldpi
mov
push
and
decl
xor
faddl
jb
or
movsb
lea
test
xlat
xor
pop
lahf
xor
sbb
ffree
add
add
adc
push
inc
and
sbb
aam
aas
push
fisttpl
mov
add
jmp
call
sahf
popa
xor
dec
push
loope
faddl
and
imul
aaa
mov
out
ds
sbb
push
jnp
fldenv
push
push
fwait
sbb
jnp
mov
iret
push
or
inc
out
test
repnz
jns
stos
ret
sti
leave
call
aam
adc
adc
test
or
inc
daa
aaa
fwait
cld
rorb
stc
loopne
test
adc
fcom
mov
pop
bound
add
insb
push
and
jnp
stos
insl
xchg
mov
clc
mov
out
loopne
push
xor
insb
mov
mov
xor
fcomp
pushl
inc
or
pop
ffree
ja
mov
out
jae
outsl
loopne
addr16
jno
mov
adc
outsl
stc
xchg
in
mov
ljmp
xor
cwtl
lds
out
in
in
mov
movsl
popf
into
xchg
in
jno
mov
push
inc
jne
loope
mov
sub
inc
js
sbb
ljmp
negl
add
jecxz
in
or
movsb
fadd
xor
cmp
dec
dec
loop
push
sbb
adc
jno
das
pop
lock
addr16
movsb
ret
out
cltd
decb
stos
dec
les
dec
mov
ja
out
inc
ljmp
inc
add
sub
add
orl
adc
inc
add
pop
sub
jnp
ljmp
mov
sub
loope
jo
dec
bnd
add
xlat
aas
cmp
and
je
imul
ret
mov
into
mov
inc
lds
inc
xor
push
cmp
movsb
sub
push
mov
lods
scas
xor
fstl
sar
sbb
inc
mov
loopne
jns
cwtl
sti
xor
clc
adc
sti
mov
out
lods
inc
adc
adc
xlat
adc
or
lea
pop
jnp
sbb
into
push
or
mov
pop
das
add
jecxz
cs
lock
jp
dec
mov
inc
mov
push
xor
andl
xchg
dec
mov
aaa
add
push
fwait
inc
ss
arpl
cs
into
aas
in
xor
push
pop
or
push
notl
dec
jecxz
loop
and
enter
xor
sbb
jne
inc
aas
cmpsl
jb
ret
mov
pop
jge
mov
jle
xchg
adc
aam
pop
mov
and
and
stc
rolb
add
or
mov
in
xor
imul
cmp
xchg
mov
dec
test
ror
icebp
adc
jp
lods
aaa
cs
dec
adc
push
imul
fs
int3
pop
loope
pusha
mov
loop
jle
jnp
xchg
mov
jae
aaa
loopne
adc
fldl
xor
jns
les
popa
push
and
inc
ror
xlat
cmpsb
bound
roll
and
sbb
rcrb
lcall
cmp
sub
lcall
das
mov
or
cmp
and
sub
mov
aas
adc
cld
fbld
push
in
mov
in
sub
cld
xor
inc
adc
ljmp
sub
sbb
outsl
test
jns
xchg
inc
es
insb
sarb
pushf
in
pop
pusha
rcrb
jno
jae
test
incl
add
dec
jb
aas
outsl
cmp
cmc
cltd
repnz
lea
pop
sub
jnp
pop
xchg
or
fnstenv
pop
dec
cmp
stc
sti
sbb
sub
pusha
push
adc
jne
adc
les
inc
inc
jo
call
jb
lea
sbb
push
repz
mov
dec
adc
push
push
icebp
out
adc
rorl
icebp
repnz
jno
hlt
adc
xchg
mov
loop
shr
mov
add
and
sbb
aam
mov
jbe
out
repz
sbb
mov
icebp
pop
rclb
scas
icebp
adc
cwtl
mov
mov
cltd
and
ret
out
pop
fwait
test
cmpsb
push
scas
add
aad
sub
mov
xor
xchg
mov
or
clc
mov
pop
add
sti
loop
mov
add
clc
sbb
and
fs
roll
xchg
jbe
out
sti
mov
andb
ret
and
lahf
call
in
lret
add
sahf
add
xchg
push
cwtl
in
pop
insb
ds
adc
out
mov
enter
dec
mov
pusha
lret
insl
jbe
pop
pusha
repnz
or
mov
sahf
sub
xor
mov
adc
push
and
cmp
xchg
scas
lret
fs
jge
xchg
out
mov
fisubrs
push
xchg
cld
scas
aas
push
inc
xchg
dec
aad
mull
and
mov
ret
cmp
scas
fdivrl
aam
sub
jnp
das
lock
jb
popf
jno
pop
inc
ret
inc
js
inc
dec
cld
sub
fwait
js
shll
sub
cmp
jae
or
inc
loopne
insl
inc
and
lret
jle
popa
aas
pop
ret
dec
cmp
daa
inc
idiv
mov
ja
movsb
fimull
and
icebp
pop
pop
pop
pop
push
or
inc
in
mov
andb
test
cmp
inc
orb
mov
jl
mov
and
xchg
inc
aam
cmp
push
jbe
adc
sub
in
cld
add
lret
xchg
sub
sub
les
popf
repnz
push
call
or
leave
mov
dec
sub
loope
jmp
adc
xor
enter
or
cmp
add
jo
in
or
pop
fcompl
push
fdivr
repnz
pusha
stos
mov
jo
inc
inc
inc
push
dec
cs
loopne
fstpt
and
pop
push
sub
sub
es
aam
sub
push
cmp
cld
dec
pop
in
dec
cmp
pusha
cld
mov
fwait
xor
xor
push
mov
lahf
add
subl
in
or
aaa
add
mov
inc
scas
pop
lods
lcall
in
repz
icebp
push
rcrb
dec
cmp
cmp
lods
adc
cld
in
cmp
jl
sbb
sti
fcmovnu
sbb
pop
cs
xor
mov
in
cld
jnp
fwait
shlb
movsb
pop
das
push
cwtl
pop
adc
mov
push
in
push
inc
aam
int3
dec
jecxz
pop
popf
xabort
pop
and
in
mov
sbb
lret
mov
jg
bnd
pop
inc
sub
mov
xchg
mov
xor
mov
das
sbb
cs
pushf
imul
repz
dec
adc
sub
add
lret
ss
out
and
cmpsl
cmp
inc
scas
sub
lcall
pushl
icebp
xor
mov
fcoml
leave
unpcklps
jbe
aaa
mov
fld
add
mov
jno
push
xor
adc
jbe
push
xlat
xor
adc
fiadds
cmc
roll
lret
xlat
add
and
filds
cmpl
in
cld
enter
push
mov
icebp
push
sub
repnz
add
mov
push
push
xor
or
out
repz
sbb
or
mov
testb
fcomi
ja
xchg
mov
imul
out
jecxz
sbb
lahf
xor
lcall
popf
test
dec
jo
loopne
jg
mov
xchg
add
movsl
xor
mov
mov
inc
lods
pop
int3
push
cmp
xor
repz
cld
mov
push
outsb
movsl
test
inc
stos
xchg
xchg
js
repz
sub
and
or
sub
pop
outsl
xchg
testb
pop
movsb
aaa
dec
aaa
adc
cmp
lock
lahf
filds
sbb
je
jecxz
mull
dec
jno
out
xchg
shrb
sbb
mov
pop
lahf
add
or
push
inc
cwtl
sbb
add
dec
lret
xlat
outsl
aas
icebp
push
icebp
xchg
out
imul
stos
dec
inc
dec
push
in
lea
mov
pop
je
fwait
cmc
mov
cmc
push
mov
fdiv
mov
mov
adc
jbe
out
aas
push
or
cmp
inc
fld
in
lret
pop
jbe
sahf
add
sbb
pop
xor
mov
dec
jno
cmc
inc
in
icebp
mov
or
das
or
adc
jne
and
inc
inc
ss
enter
fisubrs
mov
scas
mov
pop
addr16
jae
mov
and
insb
and
or
sub
or
xlat
lret
push
int
mov
mov
cld
or
rcll
jl
cmp
cld
or
lea
push
inc
mov
fdivrs
xchg
add
inc
pop
fisttpll
aad
xchg
clc
or
cmp
or
sarb
stc
fstps
sub
movsl
es
xor
or
negb
sub
andb
je
and
mulb
fmuls
ljmp
sub
adc
inc
jg
sahf
xchg
shlb
cmp
xor
cmp
xor
int3
movsl
xor
sti
push
xor
jbe
leave
dec
out
rorb
ja
sub
stos
adc
mov
xor
mov
fucomip
imul
dec
adc
cmp
xor
rorl
xchg
sbb
pushf
fdivs
xchg
call
jl
dec
arpl
std
push
hlt
inc
mov
int
pop
xor
mov
ja
in
dec
mov
cmp
xor
jae
jno
out
adc
dec
in
das
dec
mov
in
fcmovnu
out
test
and
or
mov
xlat
scas
icebp
dec
movsb
lock
lcall
xchg
scas
push
in
test
mov
dec
push
xor
sub
mov
dec
hlt
xor
loope
mov
std
iret
jecxz
sub
fsubrl
loop
stos
jecxz
cmp
xlat
ret
aas
icebp
dec
dec
icebp
xchg
out
mov
cmp
fwait
or
jg
push
adc
push
adc
xchg
push
aas
push
push
pop
xchg
mov
sub
faddl
loope
and
pop
sbb
push
arpl
out
inc
and
subl
push
push
dec
push
cld
jl
adc
push
sbb
loope
imul
mov
push
xor
lea
movsb
push
test
mov
insl
sub
push
push
fwait
daa
fisttpl
xor
in
sub
das
xchg
leave
lods
mov
mov
adc
inc
dec
leave
aaa
sarb
mov
and
lret
pop
sub
xorb
arpl
mov
mov
cld
jne
add
push
cmp
dec
mov
cmp
das
sbb
push
ja
sub
mov
jmp
xchg
ret
sub
xor
mov
or
pop
mov
jae
push
rcll
dec
leave
loop
lock
xchg
aam
push
mov
or
cmp
push
and
mov
sub
lahf
sub
sti
sub
and
adc
xor
in
inc
adc
in
in
adc
cmp
xor
inc
enter
or
sub
arpl
andnps
cmc
adc
in
inc
adc
xor
dec
leave
arpl
cld
fists
arpl
jecxz
pop
mov
push
xorl
sbb
loope
fisttps
scas
lret
mov
movsb
lea
cmpsb
loope
sub
es
dec
mov
scas
ffreep
jb
call
mov
sub
inc
mov
testb
push
das
xor
jmp
imul
dec
xchg
sub
sub
xchg
sbb
ret
cltd
mov
sub
mov
in
mov
inc
rep
ss
fwait
pushf
lea
pusha
add
or
cmp
add
mov
leave
jnp
push
dec
insl
pushf
xchg
xor
xor
dec
fstpl
mov
in
adc
cmpsl
or
mov
rcll
sbb
aam
mov
shll
outsb
lods
imul
dec
repz
arpl
cmp
dec
push
add
mov
leave
fmul
sbb
add
lock
adc
lcall
mov
or
out
fiaddl
cmpsl
inc
jmp
pop
lods
sub
inc
add
xlat
out
repz
sbb
pop
loopne
fs
int
inc
mov
xor
ds
mov
outsl
out
test
dec
mov
scas
in
sub
loopne
mull
adcb
mov
lods
sub
push
xchg
test
test
jo
pushf
ss
mov
mov
mov
jle
mov
rcl
xchg
push
scas
inc
lcall
sbb
pop
aam
nop
gs
clc
adc
stos
rep
and
mov
jne
push
iret
int3
repz
xor
fsubrl
sbb
out
mov
dec
aam
in
push
hlt
fisttpl
or
fxch
divl
push
push
jp
push
cmp
cmpsb
adcl
pop
xchg
inc
shlb
fnstsw
outsl
cmpsb
or
test
add
and
mov
ret
shrl
sub
push
or
lods
push
out
imul
testb
insl
cli
sub
fs
push
movsl
xchg
mul
call
mov
hlt
dec
sub
mov
inc
dec
pop
iret
push
test
cmp
mov
add
aaa
adc
or
rcrb
jg
arpl
xor
pop
xor
xor
mov
fwait
inc
nop
xchg
mov
mov
cmpl
mov
pop
and
mov
orb
in
inc
mov
fucom
xchg
push
jl
jb
mov
test
std
ret
ds
push
ljmp
scas
pop
lea
adc
pushw
lea
cmp
outsb
sbb
mov
test
mov
xchg
fwait
pop
outsb
leave
adc
lods
pop
sbb
fdivs
inc
sbb
movsb
arpl
lods
cmc
jle
push
je
nop
ret
push
es
and
mov
or
or
sti
ret
fnstsw
fisubl
int
sbb
or
fxch
adc
sbb
mov
xchg
es
inc
mov
jmp
dec
and
push
je
sub
daa
or
push
xchg
or
in
loopne
sub
inc
enter
or
cwtl
pop
push
xchg
ja,pn
mov
out
mov
push
add
es
dec
or
push
sub
icebp
xchg
inc
or
and
add
and
inc
aam
and
and
sbb
or
xor
sti
inc
cs
lods
inc
mov
ffreep
inc
pop
sbb
or
arpl
and
or
jbe
mov
fisttpl
xchg
fcmovnbe
loop
cs
inc
aam
and
push
dec
mov
loopne
pop
and
or
or
pop
inc
adc
enter
or
pop
inc
sbb
pop
pusha
mov
or
jno
mov
lcall
sbb
loop
lahf
jecxz
std
and
divb
and
ret
mov
cwtl
movsb
adc
popf
jno
aad
push
and
jo
mov
test
mov
fcmovne
push
jle
push
in
jmp
inc
clc
or
and
add
aas
je
adc
pop
or
add
and
sbb
fistps
cmp
inc
push
dec
cmp
ret
lea
cwtl
mov
and
jae
es
pop
push
sub
aas
lret
cwtl
mov
out
mov
fmuls
test
xchg
inc
jne
sbb
clc
pop
or
add
es
dec
push
sub
cmp
mov
cs
jae
and
bswap
and
xchg
out
ja
sub
mov
cmp
sub
das
cmp
cmp
or
divb
pop
pop
lds
jnp
add
sbb
inc
cmp
or
push
jb
xchg
push
dec
cmp
shrl
and
adc
jp
ds
movsl
adc
fwait
mov
cli
cld
pop
mov
in
and
add
inc
lahf
loop
std
hlt
fsubs
aad
jne
dec
cmc
cmc
push
add
sbb
lock
daa
cmp
cmp
and
imul
push
inc
xchg
loopne
add
xor
dec
xorb
pop
rorl
pop
std
dec
mov
loopne
push
push
jno
adc
push
or
je
popa
jnp
lods
sbb
push
arpl
xchg
cmp
cli
fildl
incb
dec
cmp
fistps
aaa
fs
not
push
jg
xor
loope
aaa
sbb
and
cld
loope
push
inc
push
pop
sbb
mov
aam
xor
push
das
pusha
adc
adc
jge
addr16
cld
sbbb
loopne
addr16
cli
adc
popf
out
aad
hlt
sbb
sti
inc
sbb
cmc
sbb
fcmovu
jo
mov
mov
fmull
jg
xlat
mov
xor
add
jmp
js
cs
xlat
jno
or
push
cli
push
xabort
pop
lock
dec
xchg
aas
xor
sbb
or
cli
push
sub
dec
cli
and
push
xor
pop
push
sub
in
xchg
push
loop
test
jne
sbb
bnd
pop
in
repnz
ss
inc
aam
das
hlt
xchg
push
movsb
hlt
lret
xor
sub
jl
xor
fbstp
xor
idiv
mov
cld
rclb
scas
das
xor
test
mov
stos
mov
adc
enter
cs
fistl
cs
fs
jg
adc
xlat
xor
push
fs
cmpsl
das
mov
jge
addr16
cli
cmp
mov
pop
adc
push
push
jnp
shl
scas
ja
cmpsb
xchg
xor
jo
jl
scas
fdivl
fadd
loope
fnstsw
push
adc
nop
ret
push
sub
cmp
mov
jns
push
cmc
xor
adc
aad
rcll
mulb
jl
stc
lahf
testb
cmp
sbb
mov
push
push
mov
repnz
out
sbb
mov
pop
or
push
mov
divb
js
or
pop
fsts
daa
sbb
stos
jbe
daa
cld
fsubrs
fisubrs
in
cld
dec
rol
cmp
jl
and
int
cmp
mov
or
xchg
in
jo
xor
xor
jbe
pop
cld
inc
scas
sub
jmp
push
adc
fidivs
cld
dec
xchg
cmc
sub
dec
scas
lcall
dec
mov
das
pop
or
xor
or
cmp
out
sti
js
push
inc
lock
mov
iret
fisttps
adc
jecxz
mov
xchg
lds
mov
dec
cli
ljmp
test
roll
aam
hlt
aaa
sbb
int
push
pop
dec
clc
insb
testl
mov
outsl
in
add
andps
divb
sbb
sub
dec
cmp
mov
ljmp
filds
push
or
and
or
scas
lea
idiv
pop
adc
cmc
push
jl
cmc
xor
sub
inc
rcrl
add
cld
xchg
inc
or
add
push
cltd
lock
enter
xor
xor
dec
adc
dec
adc
adc
lods
adc
movsl
or
ret
xor
and
or
jl
clc
adc
mov
and
mov
dec
subl
in
cld
call
dec
xor
fnstcw
jno
sub
lods
out
out
inc
inc
hlt
xchg
sbb
jnp
inc
mov
inc
mov
lret
shll
lds
jmp
aam
or
scas
out
ja
loopne
cmp
push
scas
mov
in
cld
idiv
outsb
sar
push
outsl
call
out
sub
inc
cld
ja
sub
sub
and
ret
outsb
stos
dec
inc
inc
dec
sbb
mulb
fwait
jg
push
js
add
jle
pushf
jnp
nop
mov
inc
sub
addps
pop
arpl
scas
les
and
shr
fadd
add
mov
and
loope
icebp
fwait
jnp
lcall
sbb
mov
pop
mov
push
inc
or
subl
out
pop
pushl
out
sbb
imul
cmp
notl
push
mov
stos
scas
sub
xlat
pop
cs
jno
out
or
jg
dec
inc
in
push
sub
mov
cmp
push
repnz
sub
mov
repnz
pop
arpl
in
sti
insb
hlt
push
xabort
pop
and
vmovdqu
lcall
ja
or
in
adc
mov
push
jo
fdivrl
jb
mov
mov
cmp
xor
sbb
pop
lods
sub
mov
xchg
test
mov
mov
icebp
push
inc
cmp
popa
and
outsl
xor
in
bnd
fiadds
cmpsb
push
rcl
mov
jb
sti
mov
popf
out
mov
sub
or
test
pusha
mov
jecxz
pushf
hlt
or
leave
adc
adc
imul
mov
aaa
xor
pushf
ret
add
mov
ja
rorb
bnd
pop
js
fsubr
fadd
add
mov
and
xchg
mov
dec
add
inc
fldenv
pop
cmc
test
pop
add
adc
cmp
push
push
cmp
xabort
pop
and
fld
pop
dec
add
jno
insl
ds
mov
lret
xchg
jo
int3
pop
jmp
fldcw
inc
int3
js
xor
out
aam
xchg
inc
out
adc
lds
fs
or
gs
hlt
daa
push
push
mov
fildl
bound
mov
mov
es
push
push
pop
ret
bound
cld
inc
les
mull
ljmp
fists
cld
lahf
jecxz
imul
icebp
test
aaa
jmp
adc
xchg
out
aaa
sbb
xchg
lock
xchg
cmp
mov
shrl
das
call
pop
loope
cld
push
pop
imul
adc
cmc
pushf
inc
arpl
push
push
mov
jno
lret
andl
es
je
push
adc
jmp
in
and
mov
daa
shl
cmpsb
and
aam
add
daa
test
movsb
out
mov
in
insb
xor
lcall
and
inc
push
jmp
inc
aad
cmp
subl
pop
dec
mov
jae
test
je
add
push
adc
xorl
mov
les
bswap
inc
sti
jle
add
inc
mov
pop
pop
call
xor
and
cli
xorl
add
cmc
cmpb
pop
fcompl
and
jb
in
jle
jo
cmp
arpl
pop
adc
ja
cmc
add
push
out
jge
call
xchg
stos
pop
sub
inc
fildll
dec
sub
xchg
cwtl
sbb
push
and
fcomip
and
add
jbe
add
ret
jle
cwtl
dec
adc
lahf
jl
jbe
mov
andl
pushaw
outsl
xchg
jge
dec
sub
cli
out
test
and
divb
add
in
adc
out
mov
jo
push
idiv
jle
ja
std
add
add
jbe
add
ret
das
add
sub
push
ja
cmc
add
lcall
std
fs
not
adc
push
fsubp
in
scas
in
aas
fstpt
xor
and
push
mov
or
adc
add
cmp
jl
iret
cli
add
dec
xchg
incl
push
mov
push
pusha
xchg
std
cmc
jbe
std
push
in
jno
popf
and
sti
fwait
add
cmc
add
test
jnp
cs
ret
xchg
dec
push
pop
sbb
or
adc
in
fcmovnbe
jecxz
jge
loop
dec
sbb
pop
leave
adc
jb
fisubl
loop,pn
cmp
push
sbb
sti
adc
loope
fstpt
jecxz
adc
fsubp
sub
cld
and
ja
cmc
decb
jecxz
mov
jo
mov
push
cmp
clc
mov
xor
lods
clc
inc
aam
cli
inc
dec
call
pop
std
pop
fwait
pop
icebp
jl
cmc
xchg
jge
aad
sub
aam
std
mov
fisttpll
adcb
adc
insl
mov
fldt
pop
aaa
adc
or
mov
xchg
pop
rcl
cmp
cmp
arpl
paddd
and
aas
cmp
mov
mov
icebp
add
and
xor
dec
arpl
add
lret
add
cmp
fsubrs
incl
sti
into
ljmp
pop
lods
outsl
add
addb
leave
add
lods
push
stos
rcrl
mov
inc
test
loopne
xor
daa
fistps
jl
sub
out
push
fs
icebp
pop
std
not
push
jo
pop
in
retw
sbb
negl
in
push
les
rorl
adc
push
push
jne
sub
adc
dec
mov
mov
adc
std
mov
roll
pop
fcoms
cld
add
ret
incl
hlt
adc
imul
dec
sar
push
xchg
daa
adc
fprem1
pop
fisttpl
sbb
pop
sub
ret
cmc
loop
int
cwtl
adc
fidivs
shll
mul
mov
mov
fwait
cmp
xor
mov
mov
out
push
sbb
xor
or
loop
jmp
shrb
in
addr16
test
fdivs
std
out
roll
lret
pop
pushf
xchg
sbb
and
xor
add
dec
sub
loope
and
jmp
call
lahf
ss
pop
and
or
fdiv
sbb
sbb
sbb
inc
shrl
pop
jecxz
fcoms
sbb
cmp
inc
hlt
stos
xor
mov
imul
aas
sti
repz
decb
mov
into
sbb
fwait
data16
mov
xchg
xor
rcr
xor
test
in
cmp
jl
cmp
pop
inc
pop
aas
movntps
mov
mov
pop
aas
or
inc
pop
adc
je
xchg
add
fdivr
loop
or
mov
mov
pop
in
add
sbb
push
pop
or
lahf
stc
sar
jnp
fdivs
rcr
sbb
add
mov
nop
cmpsl
pop
iret
mov
mov
pop
and
adc
push
mov
cmp
fcmovbe
or
cmc
aad
shrl
sahf
iret
lock
cmpsb
push
push
aad
push
jecxz
shl
mov
daa
push
cmp
sti
fistpll
sbb
icebp
cmp
adc
and
xchg
dec
rcrl
mov
ret
xor
jne
fisttps
jno
fcomip
jae
test
or
rorl
inc
loopne
pop
mov
mov
jne
jmp
sbb
icebp
fwait
cld
sete
pop
cmp
lock
xchg
faddl
mov
fildll
in
mov
cmp
xchg
stc
test
mov
addr16
or
push
jns
xchg
addb
mov
xchg
call
fnstenv
aam
adc
sbb
loope
insl
push
jg
push
pop
aam
cmp
popa
mov
and
ret
lods
repz
pop
lock
clc
popl
fisubrl
data16
jbe
jmp
clc
icebp
ljmp
mov
shll
sti
cmc
arpl
notl
fs
inc
push
ficompl
dec
mov
ret
adc
ds
inc
fidivrs
sti
xor
les
loopne
ficoml
adc
adc
sub
inc
xchg
inc
mov
enter
cmc
mov
repnz
dec
sub
pop
pop
xchg
inc
subb
mov
dec
cli
addr16
mov
xchg
fstp
lods
push
xorb
or
fisubl
sbb
lcall
inc
jmp
pop
data16
popf
sti
jmp
jno
inc
arpl
jo
mov
popf
cld
inc
ljmp
pop
cmp
sbb
rcrl
push
mov
add
dec
scas
icebp
add
testb
mov
cmpsb
pop
inc
pushf
mov
inc
sahf
pop
xchg
mov
adcb
xchg
sbb
ficoms
mov
mov
jmp
neg
sub
pop
stc
push
je
sti
inc
vorpd
fimuls
loop
adc
pushf
sahf
and
scas
rcrl
mov
push
mov
lods
sahf
push
jl
mov
and
shl
sar
test
dec
adc
or
aaa
outsl
dec
adc
and
js
fidivl
in
xchg
fcmovbe
pop
lods
jg
xchg
mov
ret
out
faddl
neg
cld
mov
pop
jnp
lds
xchg
shl
add
push
sbb
addr16
dec
jmp
ret
pop
shll
cmp
insb
pop
loop
hlt
cli
jp
clts
add
lods
int3
xlat
sti
incl
ja
lock
sbb
out
add
mov
jo
pxor
push
clts
xchg
sub
aam
push
adc
leave
popa
push
xchg
fimull
pop
push
ret
jb
jae
adc
int3
les
leave
adc
add
movsl
out
push
add
mov
sub
push
or
jns
loope
in
mov
mov
dec
adc
push
mov
sbb
in
jb
ljmp
imul
outsl
cmpsl
push
aam
pusha
inc
daa
cmp
xor
in
lea
push
fsts
inc
les
add
out
sub
pop
pop
stc
gs
fstpt
out
fs
sahf
cmpsl
adc
push
aaa
les
add
pop
mov
sbb
xor
int
icebp
jmp
adc
in
div
dec
and
lds
sbb
xchg
imul
pop
lret
inc
sbb
cmp
sbb
std
jp
loope
sub
jae
lea
test
fnstsw
iret
cmp
loop
mov
mov
cmp
dec
or
lret
xchg
fisubs
fwait
adc
jbe
movsb
fbld
in
dec
dec
or
int
aam
in
xchg
add
mov
cmp
adc
mov
int3
inc
lret
fcoms
nop
jecxz
pop
adc
imul
fiaddl
cmpsb
rcll
and
add
fs
sub
callw
xlat
jge
and
and
mov
or
jl
aaa
std
add
fs
int
imul
cmovnp
adc
dec
sbb
mov
rcll
arpl
jl
push
fwait
gs
imul
imulb
aam
sbb
enter
push
mov
mov
fistpl
pop
ds
adc
insb
jecxz
or
mov
add
inc
xchg
fldt
add
inc
scas
push
gs
lock
dec
aam
scas
pop
sub
add
cmpsl
or
outsl
sbb
fidivl
in
xor
xchg
ljmp
dec
push
loop
lock
or
mov
jmp
pusha
inc
mov
pop
in
loope
pop
add
adc
ss
fcmovnb
dec
xchg
je
je
and
hlt
inc
fwait
jne
call
inc
out
scas
or
pop
ret
jp
ja
adc
mov
clc
test
nop
cmp
jo
shlb
jnp
sbb
aas
shll
jl
mov
adc
inc
ss
dec
or
push
push
or
std
movsb
or
in
iret
daa
stos
or
std
inc
and
sbb
jmp
push
aas
ret
pop
push
push
mull
mov
shll
aam
rorl
pop
out
cmp
aas
loopne
or
push
out
in
movsl
addr16
sarl
sub
pop
lret
push
orb
scas
ja
loopne
std
add
fisubl
jmp
aad
push
inc
cmp
jmp
movsl
dec
lahf
sar
fisttpl
into
addb
pop
push
cmp
insb
adcb
pushf
scas
jmp
scas
mov
ljmp
fstpt
add
adc
mov
sbb
push
or
insb
ret
test
fistl
orb
mov
fisttps
or
fimull
test
mov
and
pop
cmc
mov
lret
dec
insb
jg
push
jae
fstl
jnp
test
movsl
insl
insb
mov
iret
sarb
rolb
testb
filds
fs
xchg
add
clc
xchg
mov
cli
fs
pop
movsb
sub
dec
fld
add
in
imul
jmp
in
adc
xor
jecxz
pop
loopne
je
sbb
jae
inc
push
xor
sbb
mov
mov
adc
inc
and
out
or
lret
push
sub
lahf
into
and
push
jo
in
push
loope
push
cld
mov
push
test
lahf
or
js
sti
data16
loop
fs
push
sub
inc
cmp
push
dec
pop
call
and
int3
push
cmp
and
lods
push
cmp
fiaddl
movsb
xor
pop
les
xlat
inc
aas
icebp
test
inc
mov
pop
inc
jp,pn
fmull
lret
gs
lret
jnp
jnp
sub
mov
fisttps
add
or
test
out
fsubl
repz
push
adc
mov
imull
push
in
shl
add
jo
cmp
add
in
add
dec
xchg
inc
aaa
and
push
ret
pmulhuw
cmp
sbb
aaa
sub
or
int
jecxz
fadd
cs
dec
jbe
xchg
hlt
jnp
dec
push
dec
stc
push
outsl
fst
mov
cld
jb
jg
lods
lcall
pusha
in
daa
cmc
jecxz
xor
fstps
cs
sub
out
jo
xchg
mov
scas
int3
xchg
jecxz
cmp
xlat
mov
icebp
xor
mov
xor
mov
in
test
or
loopne
jbe
fists
ret
inc
fbld
lret
aaa
leave
sti
push
ds
rorl
dec
call
push
xor
inc
adcb
ja
shrl
dec
adc
loopne
jge
dec
mov
cli
lds
sahf
lcall
jecxz
xor
scas
sub
adc
push
das
xchg
movsb
pop
push
sbb
xor
push
jecxz
pop
jo
fdivl
js
push
pusha
sub
ja
cli
nopl
fbld
mov
fildl
lds
sub
std
popf
cli
jg
loop,pn
cmc
hlt
in
inc
pop
xchg
push
and
jae
arpl
sarl
ret
loope
jnp
push
sub
mov
mov
pop
decl
icebp
push
decb
and
jo
push
fsubrl
push
or
pop
lds
add
cmpsl
in
hlt
xchg
jecxz
or
cmpsl
lods
fistpll
ret
mov
lahf
out
outsl
and
xchg
mov
test
addr16
cli
ret
cs
push
addl
jnp
push
loop
add
or
or
fdivr
mov
and
ret
in
ret
fld
daa
xchg
aaa
xor
mov
aaa
adc
imul
jbe
adcb
sahf
or
loop
fidivrl
and
stc
aaa
xor
std
repz
push
cmp
mov
loopne
sti
pop
xchg
or
or
in
sub
inc
rcll
in
add
in
insb
ret
xor
clc
push
push
fcoml
aas
push
sub
sbb
lret
xlat
addr16
icebp
js
icebp
xchg
push
xor
mov
shll
ret
adc
and
adc
dec
js
mov
in
cld
popf
rol
adc
dec
sub
push
or
xor
jnp
sub
mov
or
jbe
fbstp
adc
add
and
fsts
test
pop
add
adc
cmp
shll
fdivl
lock
notl
sbb
push
stos
xchg
sub
adc
push
push
xchg
dec
cli
push
ss
or
add
or
aad
jb
xlat
inc
jg
push
dec
int3
fneni(8087
jae
fisubs
or
aad
fisttpl
push
dec
cld
xchg
in
jg
jne
fsub
into
cmp
inc
ffree
or
and
dec
mov
sti
aad
insb
ficoms
push
loope
aam
icebp
cld
bound
stc
pushf
cli
sar
cmc
fnstcw
mov
mov
loop
pop
lahf
add
rcrb
mov
adc
scas
cmp
jae
xor
dec
cs
bnd
pop
mov
aas
fld
or
push
loop
mov
adc
pushf
inc
fst
std
push
divl
adc
lock
das
fstpt
sti
xchg
pop
or
mov
in
lock
daa
sub
aaa
xor
testl
mov
flds
cmp
inc
aam
fadds
fcoml
fsub
movsb
aam
and
mov
in
mov
and
mov
aaa
xor
hlt
or
xor
or
notb
les
loopne
fwait
mov
mov
adc
xorl
cmp
jmp
sti
loop
ja
cmc
aad
idivb
cli
fldt
mov
xchg
mov
fstp
ret
clc
pop
mov
icebp
arpl
cmc
jbe
rclb
dec
and
scas
lahf
filds
scas
sub
jg
xor
cwtl
xchg
mov
add
or
cmc
jbe
rcll
ret
push
rclb
mov
aad
rcr
sti
sub
aad
shlb
jnp
cs
xchg
xor
fstp
shl
repz
pushl
loopne
adc
loope
dec
jecxz
pop
or
clc
mov
inc
and
test
mov
repz
int3
cmp
and
mov
sbb
push
cmp
dec
lret
loope
adc
rcr
xlat
in
cld
aaa
rol
inc
lret
or
inc
ret
push
rorl
data16
scas
sbb
aas
cmp
xor
dec
jbe
lahf
add
sbb
rorl
mov
push
dec
jb
or
fmul
xlat
and
and
adc
out
rcrl
sahf
add
sbb
fadd
add
sub
outsl
scas
fsubr
ja
clc
dec
xchg
jmp
and
or
mov
dec
xor
add
jnp
xlat
in
cld
xchg
or
push
mov
jg
lock
sub
sbb
pop
push
jmp
jbe
rcl
mov
out
fwait
adcb
cld
cld
shrb
inc
xchg
xor
aam
pushf
jnp
nop
mov
jo
fisttpl
outsb
sub
xchg
pop
adc
fdivl
cs
scas
dec
adc
sti
scas
leave
addr16
lods
stc
pop
fistl
mov
dec
push
xor
jns
mov
mov
lock
sahf
stos
mov
push
mov
loope
stos
jbe
popl
push
inc
dec
jb
call
xchg
call
jecxz
pop
push
xabort
push
or
jae
sbb
sub
or
mov
mov
pop
scas
dec
scas
and
and
aaa
imul
adc
add
and
sbb
cmpsb
loope
sbb
pusha
arpl
xor
hlt
xchg
xor
push
icebp
test
push
scas
xor
mov
jmp
mov
pop
jg
mov
fistl
outsb
lock
pop
cmp
std
xor
pop
arpl
fimuls
dec
cmpsb
mov
mov
pop
lahf
add
pop
mov
xlat
ret
shrb
cmp
push
jo
cmp
sbb
dec
jne
xor
and
sub
popa
daa
je
aas
jnp
cmp
push
push
les
mov
pushf
addr16
push
mov
sub
pop
adc
mov
add
push
jno
out
aaa
ret
sbb
add
dec
and
jge
xor
inc
loopne
adc
sub
add
mov
xor
pop
lahf
add
sbb
sbb
pusha
push
xor
decl
cmp
fildl
insb
test
mov
xor
inc
repz
shrl
fistl
stc
out
inc
cs
je
iret
out
xchg
fnstcw
or
add
push
aam
lea
cmp
je
call
sbb
sti
fstpl
mov
push
fbstp
pop
lret
cld
adc
fldl
in
jecxz
push
push
xchg
mov
shrb
push
mov
xorl
cmpsb
fucomip
hlt
pop
add
add
push
add
cwtl
mov
push
rcl
ja
jecxz
mov
and
jecxz
push
and
sarb
push
pop
push
add
out
jg
xor
in
mov
cmpsl
jl
insb
ud0
sbb
mull
cmp
aas
fistl
mov
inc
push
hlt
mov
adc
pop
adc
pop
lret
adc
test
or
mov
mov
nop
sbb
cmp
shrl
scas
testb
mov
enter
jno
out
cmp
push
hlt
mov
pop
add
cmp
mov
xchg
pop
popa
inc
and
ljmp
or
add
mov
orl
call
cwtl
out
add
xorb
dec
out
xchg
push
hlt
xlat
in
mov
fists
pop
inc
or
into
outsl
gs
hlt
mov
push
dec
adc
nop
movsl
mov
pusha
movsb
ds
insl
pop
jge
pop
das
inc
pop
pop
push
lret
and
cmp
repz
sub
js
adc
arpl
lea
or
push
leave
jae
mov
pop
push
sar
adc
ret
aas
loope
adc
loope
push
push
loope
push
lcall
leave
pop
popa
mov
sbb
leave
addl
div
arpl
cli
xor
lahf
lock
out
add
fsubr
push
rol
sub
pop
jl
mov
xchg
out
jle
sub
push
js
into
fimuls
cmp
repz
cmp
pop
dec
inc
push
dec
push
push
mull
cs
lock
cmp
in
cs
in
int
jmp
push
push
dec
icebp
dec
es
push
fs
adc
or
xor
push
lret
loope
jl
adc
sub
ljmp
push
and
fisttpll
fcomps
add
push
shl
cmc
addr16
add
call
push
das
sbb
aam
loopne
test
jecxz
pop
out
sub
jge
xor
inc
xor
add
gs
jae
stc
dec
orl
fdivs
iret
lock
std
ret
xchg
push
cmp
xor
pop
mov
sbb
aas
testl
cmp
adc
addr16
add
decl
xchg
lret
xlat
aaa
cmp
dec
std
negb
cmc
sti
xchg
loop
mov
out
jno
testl
or
pusha
sub
in
cwtl
aaa
mov
outsl
cli
and
fisttpl
xlat
pop
inc
add
js
pop
push
test
pop
add
loope
fistl
jmp
inc
push
out
mov
adc
gs
test
sti
stc
ret
jae
and
mov
pop
test
ss
push
push
js
cmc
mov
in
pop
adc
out
adc
pop
pusha
adc
in
je
mov
mov
insl
adc
cli
int
lock
mov
mov
stc
aam
jecxz
lods
pop
repnz
mov
push
xchg
xor
fstpt
ja
lds
leave
and
push
in
imul
mov
xor
cmc
movl
adc
inc
aaa
adc
add
into
addr16
leave
ja
dec
mov
sti
cs
and
loope
lea
icebp
mov
mov
dec
adc
hlt
sbb
pop
sub
cmp
mov
mov
dec
loopne
xor
test
lock
out
xor
pop
xor
sub
dec
inc
hlt
mov
or
xor
or
sahf
ficoml
nop
ja
or
inc
arpl
out
mov
popf
das
mov
or
loope
fadds
jns,pt
inc
cs
movsb
cmc
inc
pop
fnsave
pop
enter
cmp
jp
sbb
lret
ffreep
aas
jb
ret
clc
xchg
fs
jnp
lods
ficoml
push
and
imulb
add
jge
fnsave
rcrb
mov
stos
xor
lea
jp
mov
fisubrs
sbb
rclb
in
ret
xor
inc
jns
cmp
fst
bound
ret
aad
inc
fcmove
pop
lock
rol
inc
dec
mov
pushf
cwtl
out
sub
cmp
rcll
sarb
rol
icebp
enter
cmp
pop
ds
stos
test
mov
xor
push
sti
push
jnp
pop
ret
roll
fs
in
xrelease
add
cli
mov
pop
clc
add
cmp
pop
sub
cmpsb
loop,pt
jbe
xor
mov
mov
mov
xchg
mov
ljmp
dec
loopne
sbb
sbb
adc
arpl
mov
fisubrl
int3
pop
cld
out
mov
mov
andb
bound
cmp
pop
push
fwait
in
or
mov
insb
not
in
pop
push
pop
dec
decb
dec
test
ret
or
repz
insb
sti
jge
mov
call
scas
jo
fisubrl
int3
aad
aaa
sbb
popf
sbb
mov
loopne
out
sbb
xchg
jne
call
scas
fimull
mov
mov
mov
fldcw
lcall
xchg
icebp
pop
js
or
push
xchg
inc
mov
fisubrl
int3
aad
push
mov
mov
insl
scas
fimuls
xchg
mov
lret
dec
mov
fldcw
mov
jo
fldln2
sti
xchg
out
repz
gs
push
shll
xlat
in
enter
xchg
fldt
popa
cmpsb
inc
xchg
fistpl
ds
mov
or
xchg
xor
mov
mov
mov
in
xchg
mov
mov
push
push
cmpsl
push
cmp
lock
jl
retw
mov
jl
xchg
jmp
inc
or
push
push
cmp
jo
fldt
jnp
hlt
adc
cmp
pop
sbb
loop
js
push
adc
or
stos
les
scas
ss
jbe
popf
pusha
stos
fisttpl
int3
outsl
cmp
mov
imul
or
int3
sbb
adc
jno
pusha
test
inc
or
push
jb
inc
cmp
mov
pop
test
aad
and
sub
ret
xor
pop
sbb
pushf
mov
pop
mov
clc
in
sub
jecxz
mov
xchg
hlt
lock
and
sub
mov
or
mov
loopne
aad
mov
mov
add
mov
scas
push
push
inc
fistps
mov
dec
fstl
add
jl
push
outsl
imul
sti
push
xor
jmp
test
and
rcr
lea
and
loope
imul
mov
sub
push
adc
adc
and
lcall
repz
adc
push
loop
nop
enter
aam
mov
and
fimull
lea
push
fcomp
push
adc
and
add
push
cmp
int3
mov
dec
jge
mov
mov
fisttpll
or
and
lcall
outsl
push
aam
or
cwtl
dec
cmp
pop
cwtl
repnz
jmp
pop
pop
pmovmskb
stc
mov
aam
cmp
mov
mov
cmp
push
sbb
mov
ss
adc
xchg
out
arpl
push
add
aaa
andb
aas
repz
push
loope
mov
inc
int3
jae
xchg
int3
push
xor
bound
mov
sarb
ljmp
sbb
and
scas
jae
jno
lods
and
mov
dec
cld
or
in
lock
leave
lahf
cltd
or
insb
stos
cli
adc
or
jmp
popa
stos
sti
out
push
mov
adc
add
jge
pushf
xchg
ret
rcrl
int3
std
xorb
or
add
dec
cwtl
mov
fwait
sbb
xlat
jnp
mov
icebp
xchg
and
test
pop
mov
aaa
aad
xor
aaa
cld
daa
pop
cmp
push
repnz
std
adc
inc
jo
es
addr16
sbb
insb
notl
in
outsl
les
shll
adc
or
loopne
jae
adc
or
dec
push
or
call
cmpsb
loopne
je
adc
push
xchg
loope
hlt
xchg
jge
or
stos
cmp
cmc
push
or
loope
sub
or
loop
mov
xchg
sbb
sarl
mov
shlb
lret
stos
ss
repz
adc
inc
cli
stc
rclb
hlt
fwait
or
out
sub
into
shrb
int3
add
loope
cld
ret
adc
adc
ljmp
or
mov
jnp
add
arpl
mov
cld
imul
lds
stc
arpl
out
jge
rcrl
xchg
nop
sbb
adc
sarb
add
jbe
aad
insl
fmull
mov
cmp
mull
fisubrl
mov
out
inc
jb
out
es
pop
mov
adc
std
fidivl
enter
idivb
mov
adc
xchg
call
xchg
inc
xor
and
sbb
sbb
shl
imul
mov
cld
and
movsb
or
pop
mov
ja
and
cs
cmpsl
in
in
cmpsl
xchg
sbb
and
leave
inc
pop
prefetchw
sbb
sub
pop
adc
sub
jecxz
mov
or
push
call
push
mov
adc
pop
and
outsl
iret
daa
jecxz
jnp
daa
xchg
std
jbe
jle
leave
scas
sbb
mov
xchg
ss
jg
js
jmp
pop
fwait
ss
mov
iret
xchg
icebp
mov
xchg
mov
jae
out
lds
std
dec
repz
inc
jmp
adc
inc
mov
lds
xor
lds
dec
mov
add
jmp
or
out
jge
push
or
sub
lods
aad
jmp
sbb
test
sbb
rorb
shll
rcrb
jae
rcll
push
insb
mov
shll
pop
ss
adc
negl
rorl
in
imul
xorl
fisubl
insb
add
aam
and
xchg
in
xor
imul
scas
sub
mov
push
mov
xchg
add
dec
jbe
mov
xchg
pop
ljmp
pop
decl
fcoms
mov
mov
test
push
in
add
xor
lcall
sub
jae
lret
fcomip
dec
push
cmpsb
xlat
psrld
dec
add
or
lahf
fmulp
jbe
adc
aam
repnz
xchg
sbb
nop
int
ljmp
mov
or
jl
aas
pop
cli
pop
xchg
pop
fdivrs
lods
ja
push
xchg
fidivrl
into
xor
out
imul
aam
cmp
outsb
bound
mov
hlt
ret
adc
dec
into
cs
sub
push
popf
pusha
mov
dec
xchg
iret
xor
pop
sbb
mov
aad
pop
cld
jmp
mov
or
cmp
dec
or
jmp
das
mov
push
enter
pop
xor
lds
jg
mov
iret
xor
ret
pop
push
rol
pop
les
push
mov
gs
stos
xor
mov
xchg
pop
push
pop
divl
repnz
adc
push
or
add
push
addr16
insb
add
mov
aaa
mov
add
cmp
xlat
sub
jg
bnd
dec
jns
and
out
in
mov
mov
push
dec
fcoml
movsl
fcomip
sub
mov
ficoms
add
add
adc
adc
pushf
ret
add
test
jo
mov
out
std
out
pop
js
xchg
pop
ss
push
outsb
jns
ret
hlt
sbb
rorb
jl
push
push
shl
pop
and
cmc
imul
arpl
push
push
xchg
add
dec
in
add
mov
fwait
or
adcb
jo
addl
pop
fdivl
mov
adc
add
fcmovb
and
js
xor
push
jo
enter
pop
in
cmp
push
pop
pop
dec
xchg
pop
adc
mov
push
mov
lds
push
or
adc
cmp
pop
out
adc
push
adc
scas
sub
divb
sbb
movsl
fs
xor
xor
mov
and
out
divb
pop
sbb
xor
add
mov
ret
int
or
and
mov
ja
clc
fidivl
imul
jne
sub
into
test
insb
gs
lock
and
adc
lock
in
cmpsl
cmpl
mov
iret
pop
mov
or
aad
rcll
push
mov
fsubr
cltd
out
aas
cmp
in
test
stos
divb
cmc
xchg
xchg
outsl
ss
icebp
out
add
fisubrs
mov
je
andl
std
jecxz
icebp
daa
scas
iret
mov
mov
adcb
xlat
jg
push
xchg
or
inc
fiadds
repnz
mov
pop
xchg
fcmovnb
jne
andl
repz
rorl
adc
dec
icebp
je
loopne
enter
lock
push
push
pop
loop
scas
faddl
outsb
mov
gs
push
and
fsubrs
ljmp
mov
mov
jecxz
and
clc
imul
fsubrs
mov
aad
movsb
xor
pop
xor
test
rcrl
shl
jns
mov
dec
repz
push
popa
mov
flds
mov
movl
repnz
pop
in
push
push
cmpb
push
push
popa
mov
in
xchg
lock
shlb
cli
xlat
pop
sti
ljmp
push
mov
xchg
and
pop
insb
cwtl
in
out
call
jecxz
dec
lods
add
xchg
jb
aad
fcomip
mov
jmp
in
push
mov
jo
mov
test
mov
push
xor
xor
pop
stos
mov
icebp
mov
mov
movl
lock
cwtl
push
xchg
lahf
inc
xor
mov
add
aaa
sbb
cmpsb
orl
inc
push
pop
cmp
lods
jnp
push
or
outsl
adc
mov
shrl
mov
je
xor
test
inc
fiadds
cmpsb
out
cmpsl
push
std
js
push
test
lock
push
adc
and
pop
push
mov
xchg
xchg
clc
negl
or
lea
loop
repnz
stc
adc
out
je
scas
les
sbb
sti
hlt
jmp
add
daa
mov
shrl
jno
arpl
out
cmc
call
xor
and
adc
ja
xor
and
sub
xlat
dec
pop
sbb
les
daa
call
pop
lock
jb
mov
outsb
push
hlt
pushl
xor
ja
decl
adc
mov
mov
daa
mov
fsubrs
int3
out
add
push
addr16
push
rol
sbbl
icebp
xlat
jno
adc
clc
std
fdivrl
jl
fwait
mov
pop
rorl
jae
sbb
xchg
xor
inc
test
loop
ret
xlat
lcall
sub
in
push
lods
mov
or
mov
int3
pushf
push
jecxz
add
outsb
and
adc
out
in
add
and
push
repz
pop
jmp
das
and
icebp
jae
stc
sbbl
cmp
mov
addr16
sub
sbb
xchg
pop
mov
inc
fidivs
subps
pop
rorb
out
mov
adc
int
in
rcll
jmp
repnz
or
adc
insb
xor
imul
out
xchg
int3
mov
fucomi
mov
into
adc
rol
xor
ret
cmp
iret
out
dec
mov
icebp
scas
pop
stos
frstor
ljmp
enter
xchg
sbb
icebp
xlat
sti
cmc
xor
jae
repz
testl
mov
in
out
mov
iret
add
jmp
mov
cwtl
xchg
ret
cmpb
mov
stos
int3
xchg
mov
iret
cwtl
inc
repz
inc
test
mov
jmp
inc
cmp
cmp
xchg
inc
sub
out
add
ljmp
xor
adc
xor
jo
or
in
xchg
hlt
shlb
jecxz
mov
inc
cmp
out
sbb
mov
pop
inc
push
mov
int
cmp
mov
dec
call
in
in
notl
xor
mov
imull
aam
sub
in
mov
stc
adc
sti
dec
aam
lds
cmp
pop
xchg
aad
shld
incb
popa
mov
mov
rcl
movnti
jecxz
shl
repz
jecxz
push
loopne
pop
pop
cmp
daa
cmovl
pop
cmp
sub
dec
xor
popa
pop
push
dec
adc
into
iret
mov
xchg
adc
jl
sbb
cmp
xchg
int3
xchg
fs
sbb
ss
push
hlt
aaa
add
or
adc
pop
pusha
sbb
jae
pop
push
pop
movsl
pop
adc
iret
es
jp
int3
or
adc
js
iret
aad
mov
loopne
adc
xor
aad
sar
mov
sbb
inc
xlat
aaa
adc
pop
in
xchg
jg
jne
loop
adc
fisttpl
or
pop
or
push
std
mov
mov
push
lock
fwait
loopne
cli
iret
pop
fildll
pop
sbb
push
jg
out
mov
push
push
daa
adc
xlat
mov
mov
into
push
add
fpatan
stc
xor
mov
push
lock
dec
and
divb
imulb
cmp
mov
sub
fcmovu
xor
ljmp
sti
imulb
mov
loopne
or
jecxz
add
repz
mov
shll
ret
or
fcmovnbe
les
aam
jge
shll
ret
rolb
pop
je
mov
jnp
int
adc
xlat
das
sub
push
jl
fsubrp
xchg
sti
jecxz
test
fisttps
rol
mov
mov
out
fists
or
clc
faddl
sti
pop
pop
std
aam
psubw
pop
fscale
inc
hlt
in
pop
popa
or
cmp
fucom
xlat
out
cld
fyl2x
loop
push
sub
in
out
cmp
in
pop
push
aad
adc
mov
push
push
repnz
testl
sarl
rorl
mov
pop
mov
hlt
mov
das
std
jmp
fwait
adc
sbb
adc
cmp
sti
xor
popa
adc
push
adc
mov
fstpl
jl
movsl
notl
test
jne
stc
cld
lret
fstpt
hlt
or
xorb
pop
fcmovb
xchg
lods
push
out
xor
nop
test
fcompl
cli
dec
and
dec
ret
cmc
bndldx
pop
jle
and
bound
aam
cltd
pop
jne
ds
stc
test
inc
and
sub
movsl
shlb
shl
xor
lock
mov
jmp
mov
aaa
test
cld
cs
scas
hlt
mov
loopne
ficompl
insl
repz
xlat
out
jecxz
sbb
cld
cmpsl
pop
rorl
lret
ja
iret
sti
nop
adcl
mov
mov
roll
sbb
jmp
pop
xor
mov
lahf
jne
mov
leave
pusha
fcomps
hlt
mov
loopne
movsb
cmp
mov
inc
aad
cmp
dec
lcall
fistl
outsl
insl
mov
adc
cld
mov
jg
aas
lret
lods
mov
mov
xor
mov
adc
adc
leave
imull
insb
jmp
fisttpl
pushf
xor
mov
dec
cli
test
std
mov
jo
jp
mov
test
jmp
nop
adc
out
fisubrl
js
loope
jle
or
lock
sub
lret
das
fdivl
jg
dec
scas
loope
loopne,pt
ja
xor
cs
fwait
data16
imul
xchg
push
and
and
push
fs
icebp
push
jl
push
fcompl
std
dec
movsb
test
adc
cmp
lahf
mov
stc
jbe
push
prefetchw
js
sub
jno
cmp
cmp
push
popf
lahf
jo
std
dec
popf
std
mov
loope
scas
and
std
dec
lret
xchg
iret
dec
in
push
adcb
mov
sahf
and
sti
cld
push
ret
lret
loopne
mov
les
insb
sbb
fcoml
fs
in
outsl
into
add
pusha
test
add
mov
lds
inc
test
fisttpl
subb
les
jnp
adc
fnstcw
std
jl
int3
lret
inc
fdivl
pusha
ret
dec
inc
loope
andl
loope
sahf
xchg
xor
xchg
cmpsl
outsl
fsubrl
pop
mov
pop
sbb
loope
int3
xor
mov
test
xor
push
lock
adc
mov
je
loopne
mov
adc
mov
dec
mov
out
mov
repnz
and
das
sbb
jmp
js
fs
ret
lods
jae
les
stos
jbe
xchg
add
push
ret
jo
inc
pop
jb
loope
jne
mov
rcll
add
sub
sbb
aas
sbb
fsubr
pop
inc
sub
imul
outsb
jle
ja
lea
mov
mov
adc
mov
int3
fwait
pop
lret
test
jns
mov
ja
rcll
aas
dec
xor
fsubl
imul
les
sahf
out
xchg
pop
addr16
clc
push
dec
mov
cmp
pop
xor
loopne
cmp
out
push
loop
mov
sbb
adc
ret
sub
push
std
cli
or
add
loope
cmp
mov
pop
push
loope
xor
jmp
or
fwait
cld
dec
push
fcomi
dec
lock
shl
repz
je
imul
in
jp
fs
fldcw
xor
cld
in
and
pop
daa
jne
push
fnsave
xlat
daa
adc
in
pop
testl
cmc
mov
mov
or
xor
cwtl
aam
mov
les
out
push
aas
int3
ret
es
cmp
hlt
jo
sbb
push
lock
jo
mov
add
pop
outsl
std
jnp
jge
or
das
out
fs
jb
inc
rorl
hlt
test
int3
ss
adc
sub
sbb
and
negb
sar
mov
cld
pop
loopne
lock
jge
xlat
jle
ret
int3
in
add
lret
repz
loop
adc
sub
stos
inc
push
loop
push
out
loopne
imul
pandn
mov
xor
popa
mov
cld
repnz
out
mov
sti
icebp
mov
or
push
dec
mov
int3
push
push
cltd
iret
sub
addr16
cmp
fistps
testb
add
pop
dec
pop
loopne
dec
xor
in
xor
mov
idivl
dec
jns
decl
adc
push
cmp
fnsave
adc
in
scas
mull
iret
mov
jmp
pop
sti
add
daa
andps
pop
push
push
hlt
xorl
lahf
inc
in
add
js
lret
inc
lahf
cmp
aam
push
in
dec
sbb
or
nop
nop
adc
xrelease
arpl
mov
sub
xorb
arpl
push
cmp
in
pop
fnsave
push
adc
inc
lret
in
out
int3
lret
inc
arpl
dec
test
cmc
push
enter
jo
rorl
or
leave
add
and
sti
lds
mov
fmuls
movsb
pop
pop
jnp
jb
mov
push
xchg
subl
jmp
dec
int
rcrb
inc
add
sub
fldenv
cmp
sub
stc
scas
out
sub
inc
sbb
les
fwait
lods
push
cmp
lods
and
sarl
push
or
in
pop
sub
jle
mov
pop
adc
sub
mov
je
loope
bswap
pop
ljmp
or
and
dec
sti
inc
pop
outsl
aad
imul
loopne
xorl
rorb
repz
xchg
mov
mov
cltd
lahf
adc
or
add
sub
xor
insl
inc
xchg
adc
int3
mov
into
movzwl
sarl
xlat
das
ret
out
or
out
sub
das
scas
enter
mov
sbb
mov
and
arpl
mov
push
xchg
hlt
leave
pop
aas
jg
je
fstp
jg
cmp
and
sbb
push
aam
adc
xchg
sub
rorl
imul
fdivl
xor
or
mov
mov
mov
pop
lret
or
add
dec
xchg
and
mov
xchg
push
xchg
clc
cmp
push
mov
out
mov
push
pop
popa
fistps
xor
out
inc
pop
decl
jnp
fdivs
pop
or
dec
aaa
in
setb
es
xlat
pop
dec
jge
jmp
dec
sbb
jge
cwtl
inc
shr
inc
mov
push
pop
popa
divl
in
push
and
popa
push
adc
aad
pop
and
outsb
and
cli
add
scas
inc
fistl
nop
in
shl
insl
inc
pop
or
prefetch
mov
mov
pop
sub
pop
adc
aad
pop
push
jnp
scas
mulb
add
iret
ret
pop
xor
cmc
mov
inc
add
iret
fwait
pop
xor
repnz
xchg
ja
mov
jmp
jp
in
sub
in
out
xchg
push
push
cmp
pop
inc
pop
stc
push
outsl
popa
fnstenv
scas
mov
fsubl
inc
scas
sbb
adc
in
jl
cwtl
int3
iret
xor
or
xchg
out
out
inc
inc
jmp
out
inc
pop
popf
mov
mov
pop
or
or
in
cmp
ror
int
or
or
pop
push
jnp
scas
xchg
and
adc
xor
inc
gs
dec
out
sub
pop
in
cld
out
inc
pop
fmuls
inc
popa
sbb
push
lret
sbb
les
add
jns
cs
inc
jno
in
dec
or
jne
dec
cltd
sarb
addl
mov
pop
test
pop
scas
aaa
and
icebp
loop
sub
add
popf
xchg
push
xchg
idivl
jb
pop
adc
mov
or
dec
pop
sub
les
pop
xor
fidivrl
sbb
mov
lret
jecxz
pop
scas
lea
rep
in
out
xchg
mov
movsb
imul
pushf
out
xchg
test
subps
mov
nop
in
out
xchg
shll
subps
sub
cltd
mov
mov
leave
scas
lea
mov
xchg
scas
mov
outsb
ficoms
mov
out
fidivs
subps
scas
imul
dec
out
cmpsb
lods
lret
ljmp
mov
rorb
out
ret
ljmp
jg
shlb
scas
ljmp
sub
mov
fstp
ja
push
inc
add
movsl
test
cmp
sub
test
mov
mov
fcomp
in
ret
and
or
sub
or
and
je
fldcw
or
shll
repz
pop
xor
add
mov
fimull
sub
rorl
mov
cld
clc
in
clc
neg
sub
push
and
cmp
xchg
lret
pop
sub
xor
sbb
aas
or
loop
sbb
fiaddl
repz
cmp
pop
icebp
jecxz
dec
jecxz
xlat
pop
sub
mov
nop
sbb
mov
dec
cmp
adc
dec
frstor
jp
es
mov
cltd
dec
push
dec
and
adc
lahf
jns
push
sub
out
sub
loop
out
xor
push
sahf
stos
gs
in
xor
and
bound
cmc
iret
pop
lock
clc
cmpsb
out
clc
xlat
pop
pop
fisubrl
out
fimull
xchg
xchg
fldenv
cmp
aas
cs
mov
pop
sbb
imul
push
jnp
cwtl
adc
mov
jno
dec
add
jg
fsts
adc
and
stos
sbbl
vcvtdq2ps
call
dec
and
ds
and
add
xlat
cmpl
push
fs
dec
push
ja
das
in
in
xchg
mov
movsl
clc
daa
pusha
inc
pop
sbb
pop
add
pushf
lods
loope
inc
in
mov
dec
dec
ret
mov
dec
jmp
dec
aad
das
ret
pop
push
mov
sub
test
fbld
mov
fs
loope
add
ds
in
or
jnp
mov
pushf
andb
cltd
movsl
repz
mov
movsb
in
add
pop
in
fcomip
pop
and
push
sub
mov
mov
sub
mov
mov
sub
inc
aad
shlb
jbe
aad
inc
fdivs
pop
jns
xorl
xchg
iret
notb
inc
shl
mov
imul
cli
movsl
inc
pushl
pop
andb
out
pop
xor
add
lcall
lret
dec
ret
xchg
cmp
mov
sbb
dec
sub
adc
ds
mov
cmp
mov
ret
mov
sbb
mov
inc
add
xchg
icebp
icebp
mov
push
lahf
ljmp
dec
jns
mov
inc
jmp
pop
push
mov
loopne
xor
and
clc
push
mov
dec
mov
leave
push
stos
xchg
sbb
mov
insl
repz
mov
inc
fbld
pop
mov
frstpm(287
ljmp
test
mov
aaa
add
sub
jno
dec
mov
mov
aad
inc
call
in
rcrl
mov
inc
or
adc
pop
shrl
mov
pusha
adc
adc
dec
xor
fists
iret
jge
pop
in
cmc
notb
mov
in
outsl
call
jne
mov
call
push
stos
sub
jne
shr
inc
nop
cs
adc
push
aam
insb
add
adc
mov
mov
jp
aas
jecxz
outsl
not
cli
adc
cmp
jnp
cli
out
scas
mov
inc
insb
xor
xchg
jmp
pop
push
inc
je
data16
mov
mov
push
lock
xchg
lock
mov
jo
call
add
cmp
pop
cmpsl
sub
lods
imul
mov
in
push
xchg
sti
fistps
lretw
icebp
std
lcall
aas
mov
loop
popa
pop
add
and
rcrb
add
test
sahf
loop
sbb
sbb
mov
mov
cmp
or
bound
jmp
sub
cmp
add
mov
ljmp
cmpsl
cmc
popf
jecxz
pop
cmc
in
add
lcall
push
jle,pt
jmp
lahf
cld
pushl
fwait
xlat
mov
adc
sub
fwait
mov
or
cmp
xor
add
push
xchg
push
call
repz
js
cmp
in
das
popa
pop
pushf
adc
sbb
pusha
js
xlat
xlat
ret
ja
dec
and
cmp
lods
cmpsl
cltd
int3
jmp
xlat
lock
aam
xor
aam
iret
notl
pxor
sti
daa
pop
push
aad
punpckhbw
pop
pop
push
hlt
ja
imul
adcl
ret
ljmp
mov
iret
add
in
lods
out
xchg
sbb
in
jnp
dec
in
fdiv
psllq
and
repnz
xor
push
mov
sti
mov
jmp
fists
adc
inc
fnsave
outsl
adc
idivl
push
or
pop
out
aaa
sti
das
pop
pusha
aad
jl
xchg
hlt
mov
mov
pop
pop
cmp
xor
pop
aaa
pop
xor
popa
xchg
xchg
call
fndisi(8087
or
pop
sbb
jge
repnz
xor
push
mov
not
gs
lret
or
cmp
fstl
inc
mov
out
out
xor
pop
push
cmp
aaa
out
pop
sti
push
pop
mov
orl
xchg
std
mov
int
repz
and
dec
testl
adc
insb
psubb
pop
add
add
xor
popa
pop
push
pop
adc
les
loop
push
fsub
jl
icebp
adc
pop
dec
push
js
ja
mov
aad
add
push
xor
test
shl
cs
pop
pop
hlt
xor
popa
mov
add
repz
loop
adc
sbb
ja
push
mov
stos
out
sar
xlat
insb
dec
pushf
out
das
ljmp
push
pop
lds
xchg
jg
mov
lahf
adc
je
int
add
sub
and
push
notl
jne
loop
adc
loopne
mov
out
and
pop
sub
and
push
xor
popa
jnp
ja
cmpsl
fdivrl
aam
lds
std
repnz
xor
popa
dec
push
inc
adc
mov
mov
jecxz
fbstp
pop
pop
repnz
xor
push
mov
mul
jno
out
adc
adc
mov
fnstsw
pop
jno
inc
mov
cmp
push
testl
das
movsl
mov
sbb
dec
testl
jge
repnz
xor
push
jmp
out
pop
xor
popa
inc
push
aas
adc
pushf
cmp
fnstsw
inc
loopne
mov
repz
pop
cmp
fisttpll
inc
mov
fists
pop
out
aaa
sti
das
pop
pop
aad
sete
cmpsl
mov
sub
sbb
adc
aaa
pshufw
jp
stos
xor
pop
xlat
cwtl
out
in
and
sbb
jne
loop
adc
jae
jae
lahf
xor
repz
repz
pop
push
pop
adc
test
cmp
jp
into
icebp
sti
das
pushl
push
lds
cmp
pop
lods
aad
psubusb
cld
xlat
daa
adc
in
xor
xchg
jne
loop
push
mov
or
xor
insb
inc
pop
ja
jb
lahf
xor
popa
mov
nop
or
or
push
hlt
aas
xor
popa
arpl
pop
adc
enter
repz
popa
dec
push
inc
adc
lods
cmp
fst
aad
jg
pop
repz
icebp
adc
pop
dec
push
js
addr16
xchg
sti
pop
aad
psubsb
jo
cmp
sub
pusha
inc
push
in
jg
jae
jne
loop
adc
out
sbb
adc
inc
and
incb
addr16
popa
push
xchg
loopne
fadds
por
adc
repnz
xor
push
test
fwait
out
lret
sti
mov
pop
cmc
icebp
add
sti
sub
dec
out
jnp
jae
mov
mov
in
fstl
xlat
or
inc
inc
cmp
imul
imul
xchg
adc
mov
call
sub
repnz
xor
push
test
fwait
out
iret
sti
push
hlt
insl
loope
or
cmp
frstor
pop
adc
stos
mov
scas
loope
cmpsl
mov
out
and
pop
pop
inc
aad
inc
pop
jae
jb
lahf
xor
popa
mov
pop
idiv
add
loop
adc
sbb
inc
repnz
xor
push
rol
out
fisttps
jmp
aad
fsubr
das
out
push
inc
lds
out
pop
sti
dec
pop
adc
push
jae
fwait
xchg
hlt
mov
sti
inc
cld
in
daa
negl
and
loop
adc
sbb
arpl
mov
jg
push
fmul
icebp
push
test
fsubr
das
jecxz
push
cmp
xor
pop
sti
push
pop
jl
outsl
push
ja
lahf
sahf
repnz
lods
mov
adc
or
cmp
xor
jne
loop
adc
mov
repnz
xor
popa
inc
ja
fmuls
xor
cmp
pop
out
sti
sbbl
adc
je
int
repz
inc
and
push
notl
jne
loop
adc
xchg
fcoml
aad
cmovs
pop
push
decb
jnp
xchg
adc
fdivrs
push
nop
push
adc
repz
pusha
sbb
pop
adc
js
jo
lahf
xlat
fwait
adc
inc
enter
repnz
fisttps
push
cmp
das
out
pop
sti
dec
pop
jl
outsl
push
jnp
mov
mov
repz
inc
and
dec
testl
adc
cmpsl
jge
loopne
mov
out
nop
pop
xor
cs
pop
xor
popa
xchg
mov
mov
fdivp
or
popa
das
push
xor
xchg
cmp
fnstsw
cmp
xchg
std
pop
xor
xor
imul
sti
pop
enter
out
jge
jecxz
cmp
fnsave
xlat
das
adc
in
jg
jae
jne
loop
sbb
in
cmc
div
add
loope
adc
sbb
push
bnd
jae
push
aam
ret
in
out
jg
fbstp
push
add
push
xlat
adcl
cmp
cltd
std
out
icebp
and
daa
pop
push
pushf
lds
push
add
adc
js
js
mov
mov
lock
jl
icebp
das
xor
js
mov
adc
xor
pusha
xor
das
adc
pushf
cmp
fstp
aad
popf
lock
pop
pop
jge
repnz
das
pusha
push
nop
lds
pop
loopne
xlat
sahf
xchg
aad
pop
xor
xor
push
sti
mov
mov
sti
adc
inc
vmread
xchg
stos
popa
mov
mov
in
pop
idiv
addr16
loop
adc
xchg
jge
repnz
xor
test
testl
add
daa
xor
inc
push
xor
fs
aas
je
sti
bound
in
mov
stos
loope
sbb
fucomip
pop
sti
negl
pmulhrsw
and
inc
cmp
call
jp
and
jmp
cs
imulb
push
shl
lret
js
and
adc
mov
fdivl
mov
mov
repz
jg
jecxz
mov
inc
jno
cmp
int
test
imul
add
sbb
xchg
sub
jg
div
push
fsubr
jnp
addr16
dec
jg
ret
inc
and
pop
dec
stc
arpl
mov
imul
lods
movsb
push
push
iret
or
xchg
cmc
enter
imul
sub
mov
xchg
aam
ret
xlat
cld
idivl
imul
sti
inc
shlb
test
idiv
push
daa
xchg
iret
aaa
dec
lods
aam
jg
xor
adc
inc
mov
outsl
ss
sbb
int3
jmp
mov
sbb
sub
or
mov
pop
dec
jl
arpl
or
cld
int3
pop
inc
lret
mov
adc
in
push
push
jmp
aad
jge
fisttpl
aad
xor
fmull
sti
adc
nop
out
jae
les
mov
sbb
dec
push
gs
lret
xchg
jnp
dec
dec
pushl
add
out
in
call
pop
pop
aas
fldcw
and
hlt
inc
jns
adc
daa
sub
cld
in
outsb
add
stos
cmc
jg
adc
test
pop
pop
adc
xor
ljmp
fildl
pop
xor
dec
and
jmp
xorl
mov
mov
sti
movlps
int3
hlt
aas
xchg
std
ljmp
inc
pop
mov
mov
jnp
sti
jp
fsubp
rcl
pop
jae
iret
js
clc
add
das
sub
fsts
pop
dec
test
mov
push
je
jo
fistpl
ja
add
xchg
cmc
repnz
scas
cltd
in
fsubs
stos
cmp
jns
cli
rcll
push
fsubrl
sbb
fsubs
fisttpll
popf
scas
and
adc
fdivrl
insb
jecxz
lods
xor
push
mov
cmp
inc
sbb
add
movsl
or
loopne
je
push
daa
stc
jae
push
push
fsubl
adc
adc
nop
test
mov
in
mov
nop
xor
int3
pushf
int3
popf
add
iret
jl
add
push
decb
xlat
or
bound
sub
mov
sti
inc
mov
insb
xor
and
jmp
xor
cs
outsl
push
add
xor
aam
or
cmpsl
or
inc
pop
lock
adc
add
pop
adc
ja
fsubr
mov
mov
mov
fcompl
add
nop
push
adc
xor
in
aam
cmp
scas
jge
imulb
push
int3
inc
in
testl
add
dec
xor
xor
sbb
data16
fdivr
icebp
ficomps
aam
or
xor
sbb
call
jg
addr16
js
jo
sbb
adc
pop
add
xor
adc
mov
xchg
test
popa
out
les
adc
inc
dec
pop
and
test
and
mov
imul
pushf
jge
jae
aad
adc
cmp
push
fstpl
sbb
das
imul
xor
iret
or
imul
push
mov
mov
inc
in
push
fs
and
sbbl
aas
arpl
fneni(8087
mov
in
xchg
test
ljmp
mov
stos
or
sub
int3
icebp
jae
lods
pop
mov
dec
test
push
fs
and
add
xlat
aas
sti
jge
xor
pop
dec
push
and
cmc
push
xor
mov
cmp
loop
and
aaa
xor
xchg
test
nop
sti
incb
insb
xchg
ja
iret
test
sub
hlt
mov
aam
mov
sbb
jl
xchg
pop
or
aam
jbe
test
adc
mov
xor
push
add
xor
inc
pop
mov
movsl
not
cmp
cmp
add
ret
or
push
hlt
cmp
out
fsubl
and
pop
aam
cmp
in
ret
jae
aam
sarl
ret
stos
jecxz
scas
aam
cmp
or
aam
hlt
push
sub
dec
cld
push
cmp
fldenv
push
ss
in
sti
jl
adc
je
nop
lahf
inc
hlt
mov
jecxz
mov
in
jnp
loope
cmpl
out
dec
dec
fdivr
dec
and
cmc
repz
cwtl
adc
fs
hlt
cmp
mov
jns
into
lret
sbb
arpl
push
fisttpl
loopne
ljmp
add
adc
or
inc
lock
or
arpl
pushf
repnz
enter
fdiv
mov
or
and
cld
out
in
filds
or
rorb
push
call
addr16
fwait
call
xchg
int3
scas
call
mov
xchg
pop
push
aad
cmc
aaa
mov
mov
ds
sub
dec
scas
cmp
pop
scas
dec
outsb
scas
pop
jle
push
mov
mov
scas
scas
lcall
scas
mov
out
jmp
aad
lds
in
aad
cmc
push
or
cs
sbb
ds
dec
jb
pop
movl
xchg
or
cli
movb
sub
or
sub
jo
sub
push
fnstcw
int3
pop
repz
dec
pop
addr16
imul
and
out
imul
fldz
in
fistpl
cs
sbb
push
ret
outsb
inc
push
roll
pop
inc
inc
aaa
outsb
data16
mov
pusha
scas
xchg
cmpsb
cmpl
mov
lret
mov
es
or
sub
aad
sti
into
out
sti
sbb
call
repnz
repnz
or
mov
iret
push
cltd
rorb
add
dec
adc
pop
popf
xchg
rcrl
roll
std
jnp
pushf
dec
mov
cld
ljmp
or
or
mov
mov
int3
or
adc
fwait
fs
cwtl
sub
prefetch
push
sub
das
pop
dec
jge
gs
xchg
xor
mov
icebp
or
rcrb
inc
sarl
push
rcrb
mov
pusha
lret
push
sub
jbe
imul
dec
push
insl
jmp
mov
mov
sbb
xchg
lahf
scas
lods
lods
add
push
enter
and
mov
out
xchg
fwait
add
shld
ret
and
or
cmp
data16
sub
or
xchg
pop
or
int
or
dec
xchg
or
ss
pop
sub
sub
ret
jecxz
push
aaa
rorl
xchg
rolb
in
sbb
mov
pop
out
inc
adc
dec
inc
pop
dec
jnp
sub
pop
or
repz
push
push
mov
mov
aam
push
adc
mov
and
das
jo
mov
ljmp
add
jmp
push
sar
push
push
pusha
push
push
xchg
push
push
les
cmp
add
fiaddl
adc
sbb
xchg
outsl
lcall
jo
movsl
pop
inc
test
mov
aam
mov
outsb
xchg
jg
ret
imul
inc
jecxz
loop
inc
adc
jl
inc
mov
lret
sbb
mov
cmc
jmp
and
sub
inc
add
push
cmpsb
adc
push
fisubs
dec
xchg
and
bound
jae
xchg
int3
mov
mov
fdivr
mov
outsl
out
jmp
pop
pop
in
insb
int
shlb
daa
push
rorl
cmp
pop
idivb
add
mov
imul
sarl
push
loop
iret
sahf
out
cli
fcompl
jp
lahf
jnp
je
leave
sub
arpl
cmp
imul
xlat
mov
call
xchg
int3
mov
mov
int3
shll
fldl
adc
std
or
xor
adc
add
and
adc
xor
and
inc
call
inc
push
imul
subl
dec
mov
push
sbb
mov
inc
rorl
insl
push
fisttpll
xor
sbb
push
pop
sub
es
dec
int3
lods
inc
in
leave
push
in
leave
popa
in
leave
jno
popa
leave
adcl
scas
cmpsb
lret
fisubrl
adc
shl
icebp
jmp
push
push
push
push
es
push
ss
push
inc
push
push
push
push
push
pushw
push
jbe
lcall
push
push
cmpsb
push
push
mov
ficoml
push
cmp
std
stc
fxam
adc
sbb
push
sbb
xchg
int
push
mov
lcall
pop
lcall
jp
data16
lcall
stos
lcall
lret
mov
lcall
jle
jb
sahf
fsts
or
stc
ret
or
sub
sbb
cmp
and
lcall
lcall
mov
fiaddl
stc
inc
out
or
mov
xchg
scas
sub
outsb
sub
sbb
cmp
sub
dec
in
leave
pop
in
leave
imul
imul
cltd
in
leave
test
in
leave
leave
in
add
cli
es
or
mulb
sbb
dec
sub
push
dec
cmp
es
dec
imul
pop
xor
push
push
dec
jp
dec
mov
jbe
lcall
cltd
sub
ud1
test
frstor
add
icebp
cli
loopne
int
out
sbb
or
sub
sbb
cmp
sub
dec
call
dec
sub
bnd
mov
repnz
or
repnz
or
repnz
lock
mov
ss
jb
jle
or
outsb
adc
adc
mov
outsl
inc
mov
outsl
push
jle
push
in
mov
and
in
add
mov
test
in
leave
leave
out
xor
mov
mov
stc
aam
rorb
stc
enter
leave
sub
sbb
cmp
sub
dec
in
leave
pop
in
leave
imul
imul
cltd
in
leave
test
in
xor
add
sub
outsb
sub
ds
push
jp
lahf
insl
sti
fs
test
lahf
xchg
mov
xchg
lahf
mov
mov
or
ss
testb
clc
jb
jp
mov
lcall
dec
inc
pusha
cmp
sub
les
add
lods
nop
les
mov
aam
rol
pop
sbb
iret
ret
mov
xlat
sarl
add
repz
adc
add
and
adc
xor
and
inc
call
jg
arpl
orb
mov
cmpb
cli
out
xlat
sbb
inc
call
sbb
or
cmp
sub
sbb
cmp
sub
dec
in
leave
pop
in
leave
imul
xor
mov
test
aam
nop
or
xchg
in
adc
out
add
cmpsb
adc
cmp
inc
mov
mov
js
cwtl
cmpsb
cmpb
cmpsb
mov
fsubs
push
push
lock
cmp
pop
pop
mov
or
das
mov
dec
lahf
outsl
mov
arpl
les
call
mov
int
addl
mov
dec
fbld
dec
out
fistps
lcall
xchg
aaa
in
leave
aas
in
leave
ja
addr16
pop
sub
mov
stos
xor
mov
sub
hlt
dec
adc
sti
ficompl
sbb
aas
mov
xor
scas
test
nop
les
jmp
repnz
das
add
cmp
pop
jmp
xlat
adc
and
les
les
les
les
les
les
mov
enter
shrb
rcrb
push
repz
fists
xchg
out
add
inc
fs
dec
insb
scas
push
je
pop
jl
movl
test
enter
rclb
push
push
rclb
repz
cli
pushl
out
ljmp
call
adc
dec
call
inc
int3
pop
call
push
int3
outsl
call
int3
scas
call
mov
int3
jmp
iret
mov
fdiv
mov
sbb
jae
mov
andb
mov
pushf
xor
mov
xor
stos
and
faddl
sub
inc
add
clc
dec
xor
and
xor
dec
dec
xor
dec
push
xor
dec
pop
xor
jo
je
cwtl
xor
dec
test
nop
push
mov
xchg
xchg
mov
mov
inc
jecxz
iret
dec
jmp
xlat
fidivs
adcb
dec
cmpb
pop
addb
orb
adcb
jl
mov
leave
in
leave
xchg
and
setg
mov
cmpsl
sub
dec
imul
mov
xlat
fstpt
ret
pop
mov
push
dec
dec
push
dec
pusha
push
dec
js
addr16
pushf
push
dec
lods
push
dec
mov
and
insb
fmull
int3
insl
in
or
or
cmpsb
and
insb
cmpsb
jo
xchg
scas
jl
pushf
cmpsb
test
lods
cmpsb
xchg
mov
adc
add
cmp
sub
dec
scas
dec
jo
pop
js
or
jg
push
push
push
les
out
stc
lock
push
cltd
insl
imul
add
test
rcrb
ret
sbb
imul
rclb
scas
outsb
mov
hlt
and
mov
mov
bound
aaa
mov
jo
js
or
out
xchg
pop
repnz
or
xlat
jne
cmp
je
add
out
daa
pusha
push
dec
bound
icebp
inc
jo
pop
fbld
popf
jle
or
jo
mov
js
xchg
in
leave
pushf
in
leave
movsb
jp
add
and
mov
int3
inc
call
mov
std
mov
xchg
adc
filds
add
add
cmc
add
pop
add
pop
xor
push
enter
icebp
push
pop
mov
orb
aaa
outsb
js
add
xlat
mov
mov
sahf
push
rolb
and
cmpsl
or
dec
add
mov
mov
jne
lds
mov
aad
shrl
cmp
sub
cmove
xor
dec
sarl
sub
mov
mov
dec
out
sbb
xchg
and
jns
push
or
ljmp
negl
lret
push
loop
adc
jns
adcb
icebp
mov
fadd
fstpt
lds
add
loope
popf
xchg
cmp
andb
fidivrs
jne
ja
loop
jmp
aaa
jle
add
data16
les
mov
mov
push
mov
push
nop
xchg
xchg
mov
mov
clc
out
daa
xchg
or
into
lret
sub
jb
fisttps
ds
insb
jmp
rcl
int3
pop
mov
clc
fidivrl
scas
lods
jnp
cmpsb
ljmp
hlt
repnz
sub
loope
loop
dec
or
ds
and
scas
inc
cwtl
outsb
mov
xor
xchg
mov
jmp
pop
ret
lock
push
repz
sti
ret
sub
dec
cmp
insl
jp
mov
lcall
or
mov
mov
jecxz
adc
mov
push
fwait
in
enter
out
sbb
gs
or
push
or
mov
adc
push
sub
or
or
push
shlb
subl
mov
push
mov
push
dec
dec
int3
mov
fmul
leave
mov
jg
out
or
pop
pop
jp
fs
xchg
fcmove
adc
mov
rcll
dec
pop
mov
mov
repz
jnp
into
sar
or
call
int
iret
rolb
pop
cli
or
xor
mov
in
ficompl
aam
fmull
inc
nop
outsl
out
jmp
data16
dec
lcall
cwtl
popf
sbb
or
push
or
cltd
mov
shll
adc
pop
leave
xchg
pop
jne
mov
mov
divb
adc
push
pandn
pop
rol
or
add
or
inc
adc
or
sub
mov
lds
and
pushf
mov
sti
pop
jne
cmpsb
jg
xchg
cltd
pop
push
bound
jbe
popf
int
loopne
repz
fistpl
sti
arpl
sub
out
les
lods
clc
les
lods
add
and
loop
shlb
push
inc
inc
dec
sbb
ret
dec
dec
push
dec
push
ss
test
setb
int3
filds
ret
jnp
mov
pop
inc
sbb
adc
sbb
cld
bnd
inc
sbb
and
mov
bound
mov
push
xchg
ja
popa
sub
mov
aam
mov
outsb
ljmp
xor
out
outsl
cmp
sbb
inc
scas
sub
ret
xor
jl
dec
addr16
pop
jg
cmpsl
nop
imul
call
mov
movsb
popa
sti
mov
fsubrl
in
leave
cmp
das
cmp
sub
repz
mov
cwtl
xchg
mov
push
dec
mov
and
push
aas
adc
hlt
jb
cs
mov
int3
and
mov
loope
out
add
pop
or
cmp
int3
mov
out
sbb
stc
pushf
lcall
pop
xchg
push
adcl
sub
add
sbb
or
push
and
dec
decb
xor
insb
lcall
call
push
mov
dec
cwtl
push
dec
mov
sti
enter
aam
in
push
in
fcoms
xchg
jecxz
push
shl
mov
imul
ljmp
arpl
jbe
je
bound
push
dec
nop
push
dec
mov
push
das
mov
or
fcomps
add
sbb
sti
cmp
movsb
insb
les
mov
sahf
scas
into
sbb
mov
dec
add
jmp
sbb
xchg
stc
jae
lock
xorb
sbb
pop
lahf
ja
arpl
pop
or
lret
cmp
mov
out
add
pop
mov
xorb
push
cmpb
pop
xchg
clc
aas
sub
push
pop
sbb
push
inc
xchg
lea
jg
out
xor
or
adc
sub
cmovle
aaa
cli
out
jae
stos
or
sbb
push
pusha
pop
pushf
loop
or
add
sti
push
jno
pop
mov
in
pop
push
arpl
sahf
jl
test
scas
jbe
hlt
idiv
ja
fcomps
sub
inc
inc
scas
dec
cmp
sub
inc
outsl
adc
fsubs
sbb
lods
outsl
adc
loope
aam
cmp
subb
pop
sub
adc
fbld
mov
jg
loop
scas
ja
stos
out
out
loope
adc
sti
filds
lahf
in
out
dec
inc
cmp
decb
add
pop
fcompl
addr16
fbstp
cmp
add
je
jbe
jne
int
push
xchg
loop
push
cwtl
pop
sarb
and
ja
fucompp
fwait
fwait
mov
ljmp
sub
mov
icebp
inc
and
stc
push
es
add
jge
jno
stc
jmp
lock
out
adc
cwtl
lock
testl
fsubs
stos
mov
mov
js
das
test
movsl
lods
stc
cli
inc
xchg
lcall
mov
mov
sub
sbb
lret
sbb
lods
stc
repz
cld
inc
out
insb
call
negl
aaa
xchg
jae
idivl
sahf
imul
fwait
dec
push
xor
call
mov
mov
cld
mov
sbb
loope
pop
adc
mov
inc
repnz
data16
jmp
cltd
push
jp
outsb
fstl
inc
xlat
jmp
xor
aaa
inc
jae
je
jg
jno
cwtl
cmpsb
xchg
enter
out
add
dec
adc
in
out
xlat
push
sub
xor
inc
icebp
ffreep
sub
pop
int3
aas
call
aas
int3
pop
call
rorl
outsl
pop
cmc
movsb
mov
jp
icebp
into
inc
or
pop
dec
pop
sbb
xchg
int
rclb
and
icebp
fldl
inc
popa
lcall
xor
adc
clc
push
and
or
add
xchg
xor
push
pop
pop
int3
shrb
mov
xchg
sbb
andb
loop
fstpt
negl
jae
pop
jbe
sahf
popa
jb
lds
pmulhw
cmp
xchg
aas
add
jae
jns
fwait
xor
sub
and
pop
scas
dec
pop
sub
dec
mov
outsl
jecxz
mov
mov
adc
mov
xor
loope
jae
rolb
inc
clc
mov
and
enter
enter
leave
dec
pop
ret
mov
sub
testl
leave
mov
lahf
leave
mov
in
or
sbb
pop
cltd
repz
adc
xor
sbb
ret
and
sbb
push
mov
insl
add
dec
popa
pop
loopne
enter
or
iret
mov
pop
out
lahf
jl
out
mov
cld
mov
adc
pusha
jge
jl
pushf
xlat
test
cmpsb
repnz
lock
pop
pop
adc
inc
inc
loop
fwait
inc
hlt
pusha
jo
cld
ja
fadds
sub
test
aam
daa
sub
das
flds
js
insb
dec
test
xchg
lea
xchg
fmul
and
or
push
push
out
inc
dec
loop
fwait
push
add
jo
or
mov
adc
cmp
and
dec
cmp
shrl
rcll
mov
cwtl
dec
pop
xlat
dec
sbb
in
mov
daa
fdivr
aaa
xchg
xor
dec
push
xor
outsl
mov
outsl
xchg
andb
pushf
mov
shrb
mov
dec
jp
icebp
icebp
fstps
dec
call
sub
sbb
mov
bound
push
push
jo
push
ljmp
push
jg
jge
cmpsl
sbb
push
scas
sbb
fdiv
out
rcr
sbb
or
push
mov
loope
ss
fiadds
orl
cmp
jl
push
sbb
and
dec
sub
adc
xor
sbb
cmp
and
inc
dec
push
test
xorl
jl
push
lea
push
ja
aad
addl
dec
xor
fsubrp
in
jnp
fstpt
daa
in
gs
mov
or
jg
xchg
xorl
lret
shl
fcmovnb
pop
call
and
addr16
mov
cmpl
xchg
lods
mov
mov
test
sub
and
dec
in
cld
cmpsl
sub
xorl
pop
loop
shlb
mov
daa
out
mov
add
out
cli
push
xor
popa
xchg
mov
out
adc
cs
das
arpl
es
inc
mov
sbb
int
sbb
pusha
jae
sub
mov
sbb
inc
test
movsb
scas
mov
lods
push
and
mov
mov
dec
jecxz
iret
and
and
pop
cmp
pop
mov
decb
or
stc
hlt
rorb
push
dec
movsb
push
dec
sub
roll
mov
ss
or
sub
inc
mov
xchg
dec
subl
jae
push
sarb
push
lds
mov
lahf
inc
sbb
aam
sub
pop
bound
push
data16
pop
push
dec
je
js
inc
int3
inc
into
ljmp
push
iret
fadds
mov
es
add
les
mov
bound
mov
lods
cmp
out
stc
mulb
popa
loopne
xor
xchg
cmp
add
inc
sub
das
or
shll
and
cmp
xchg
mov
pop
out
ljmp
mov
std
inc
fwait
mov
push
dec
ret
dec
scas
xor
out
adc
push
dec
lods
inc
inc
jo
push
xor
mov
add
jl
addb
lea
mov
mov
mov
popf
add
mov
adc
jg
adc
adc
mov
in
mov
mov
ficoml
cmp
dec
xchg
cmp
cmp
mov
call
cmc
pop
jbe
xor
lcall
cmp
and
push
aam
sbb
dec
repnz
scas
xlat
mov
cmp
sbb
repnz
sete
or
bnd
jno
xor
in
aas
or
loope
outsl
or
bound
push
rorb
dec
test
jb
sahf
dec
popa
lahf
dec
mov
lock
jns
stos
jecxz
in
out
cs
ss
adc
add
jb
out
gs
test
xchg
xchg
jne
pop
daa
dec
shll
add
dec
jg
jae
lahf
xchg
nop
clc
and
lods
stos
sub
mov
es
fisubs
sub
bound
push
inc
pop
mov
ja
pushf
loop
int3
cmp
push
pop
leave
pop
aam
add
stos
lock
ss
jbe
testl
push
mov
sbb
dec
stos
mov
cltd
imull
icebp
adc
mov
pop
fnstenv
mov
or
inc
pop
aaa
cmp
mov
sbb
and
jbe
pop
xor
xor
cmp
dec
in
cmp
inc
jne
adc
and
shll
jb
fcoms
int3
leave
mov
cmp
lock
scas
jbe
les
and
test
adc
jb
les
das
fnstenv
in
push
adc
je
enter
iret
pop
out
lock
push
sub
mov
sub
rorb
aad
pop
lock
sbb
in
inc
lret
shlb
in
add
adc
add
mov
mov
pop
push
jmp
scas
cmpsb
push
shr
jge
push
adc
mov
inc
les
jmp
lahf
gs
mov
mull
fnstcw
fs
mov
xor
iret
les
nop
aaa
cwtl
xchg
jmp
inc
icebp
mov
dec
add
cmp
mov
lock
mov
les
mov
add
jp
cltd
loopne
mov
or
lret
scas
mov
push
mov
xor
lcall
dec
rorl
xor
lcall
out
rcr
xor
cmpb
sbbl
mov
repnz
xlat
inc
in
fwait
aad
fdivp
jecxz
adc
dec
mov
xor
push
int
mov
negl
sub
lcall
arpl
cmp
outsb
xchg
xchg
bound
pusha
jmp
out
incb
push
mov
pop
and
xchg
dec
pop
pop
mov
jecxz
add
loope
fcmovnb
dec
cli
dec
out
cmp
scas
inc
ljmp
sub
ss
movsl
dec
inc
adc
outsl
fstpt
subb
hlt
jmp
mov
xchg
inc
fiadds
leave
xchg
shlb
jno
cmpsl
iret
lret
in
out
pushf
mov
pop
adc
rol
push
dec
or
dec
adc
dec
sbb
push
xchg
or
das
mov
push
movsl
aas
inc
cmp
inc
push
aaa
pop
call
adc
aad
sarl
dec
dec
pop
das
sbb
sarb
mov
push
and
cmp
mov
sbb
push
movsw
dec
aas
push
rclb
jbe
pop
mov
test
out
insl
jg
mov
in
sub
in
mov
daa
movsb
dec
xchg
inc
push
sti
negb
test
inc
mov
sarl
int
mov
or
push
mov
aam
icebp
loop
inc
sub
jnp
mov
mov
xlat
fcmovb
jg
mov
lds
loop
in
jnp
mov
cmp
popa
and
ljmp
idiv
lea
xchg
pushf
mov
iret
lods
les
cli
test
adc
jae
or
ret
jnp
lahf
dec
mov
lahf
pop
pusha
sbb
and
push
and
add
xchg
dec
je
inc
dec
iret
sbb
push
push
dec
pop
fs
in
mov
stos
cmp
adc
and
loop
test
decb
in
pop
fidivl
inc
in
lock
fcoml
mov
and
pop
push
rolb
gs
adc
aas
out
and
add
int3
incl
jmp
mov
jo
push
pop
mov
scas
cld
xchg
cmpsl
leave
ret
and
inc
sbb
pop
cld
or
push
push
xor
cmp
popa
add
aas
out
aaa
pop
cmpsl
lea
add
and
gs
imul
call
push
dec
cmp
and
jp
sbb
out
pop
mov
popa
mov
imul
repz
push
jns
mov
out
push
int3
and
sub
popa
enter
mov
lods
pushf
not
cmp
sub
mov
lahf
adc
push
fwait
adc
ret
aaa
fisubs
mov
jmp
mov
mov
test
mov
sbb
jle
pop
fidivrs
ja
scas
sbb
aad
enter
pop
push
adc
adc
dec
push
imul
jmp
xchg
dec
popf
mov
insl
jns
mov
packsswb
inc
aam
mov
pshufw
dec
dec
enter
xor
out
lods
pop
push
pop
jnp
scas
jae
lea
fadds
repnz
stc
call
push
push
pop
dec
js
data16
sarb
in
in
repnz
inc
fs
cs
notl
cli
xchg
add
or
dec
in
xor
pop
loop
rorb
mov
pop
out
xor
xor
mov
push
add
dec
mov
movsb
mov
xlat
lods
notl
mov
out
je
xchg
icebp
xchg
stos
fmul
sbb
sbb
push
dec
sti
cmp
fwait
lds
xchg
repnz
je
xchg
add
xorb
ja
test
push
arpl
or
repnz
adc
pop
or
sub
and
in
movsl
inc
xor
es
andl
pop
outsl
lods
pop
aaa
jb
or
cmp
mov
in
sbb
decl
push
fists
dec
push
imull
adc
dec
les
pop
mov
push
add
fsubl
paddsw
mov
lret
jecxz
jmp
loope
add
fists
sbb
adcl
fwait
repnz
xlat
mov
stos
ffree
arpl
dec
and
cli
lock
test
out
repnz
adc
inc
add
jo
ja
mov
mov
call
jae
jle
jmp
jg
fmulp
es
push
leave
jne
mov
fistpl
fistl
pop
and
jae
push
and
jl
add
jo
pushf
scas
pushf
or
loopne
fdivs
ror
pop
or
and
pop
mov
adc
mov
arpl
mov
scas
rorb
bound
cwtl
daa
jle
das
inc
sti
test
xchg
lods
xchg
stos
xchg
loop
lahf
aam
sub
bound
inc
cmpsl
mov
out
insl
jg
add
lds
xlat
and
mov
fadd
lods
repz
test
and
ja
pop
int3
jnp
mov
pop
in
lret
lods
xchg
mov
rcrb
int
or
push
adc
stos
arpl
dec
mov
dec
adc
stos
ret
scas
mov
sarb
imul
jp
xchg
addr16
sti
mov
mov
xor
dec
jmp
out
sbb
xchg
dec
mov
mull
jo
add
inc
sub
icebp
aas
addl
and
dec
lcall
and
push
inc
sbb
call
gs
xchg
stos
daa
sbb
add
dec
fisttps
push
mov
pop
orl
push
sub
and
scas
bound
adc
xlat
cmp
lock
hlt
xchg
mov
movb
das
aas
and
dec
sarb
mov
pop
test
fisubs
jl
inc
shlb
ret
fwait
pushl
pop
movb
and
lock
xchg
fdivs
mov
adc
sub
pop
adc
xor
test
or
xlat
pushf
in
out
push
and
jl
xor
test
lods
je
xchg
fldt
sub
and
test
inc
cmc
ljmp
adc
sub
incl
mov
dec
js
les
les
cwtl
sbb
pop
push
or
and
xchg
rcll
lock
adc
pushl
mov
sbb
inc
dec
pusha
cwtl
cmpb
adc
pop
pushf
pop
jecxz
lock
aam
aaa
idiv
cmpsl
psubusw
es
dec
repz
stc
sbb
mov
inc
lock
int
popa
dec
pop
sbb
aam
sub
je
sub
rorb
addr16
push
fisttpll
mov
ret
jne
mov
movsl
fs
sub
leave
loop
lods
sbb
mov
push
jns
jge
daa
xor
cmpl
sti
mov
aam
sub
loope
out
imul
orb
jne
and
outsl
imul
mov
int3
int
pop
fbstp
pop
dec
icebp
inc
jmp
and
mov
pushf
push
test
mov
push
test
faddl
sub
pop
mov
ret
lea
icebp
out
movsb
sbb
push
fsubl
mov
mov
xchg
add
cwtl
out
xchg
repz
out
dec
mov
fsubrs
inc
nop
cmp
push
adc
mov
lahf
mov
xchg
insl
and
int3
xor
std
xchg
lods
shrl
add
dec
inc
mov
push
inc
adcl
pop
cmc
xor
in
scas
mov
mov
adc
mov
fcomip
fadds
sahf
int
xorb
cmpsl
mov
xor
xchg
sbb
push
sbb
mov
sub
loop
lods
mov
cwtl
out
fsubrl
xchg
sub
cli
cs
rorb
loopne
loop
insl
mov
xor
dec
imul
or
scas
ret
xor
dec
lock
pop
movsl
scas
xchg
inc
dec
outsb
mov
aas
jno
push
lret
cmpsl
mov
mov
add
or
pop
or
loopne
sbb
sbb
pop
sti
sti
add
fstpl
add
mov
insl
je
pop
daa
mov
stos
push
movsl
xor
cmp
jmp
add
mov
mov
leave
cmp
pop
test
les
repnz
cmp
mov
mov
dec
in
pushf
fs
sar
dec
and
sub
lock
inc
cltd
mov
hlt
add
mulb
add
out
and
test
pusha
sub
push
xchg
and
jle
xchg
pop
or
out
imul
lret
pop
mov
aad
popf
sbb
cmpl
sub
stos
or
in
push
lock
mov
sub
and
lea
fists
mov
xchg
add
sub
fcmovnu
push
adc
mov
rcrb
sbb
dec
idiv
notb
cltd
insl
sub
sti
and
test
sub
pop
test
pop
sub
daa
imul
ret
mov
mov
inc
int3
cmc
pusha
ret
xchg
jo
or
push
push
test
imul
push
adc
or
and
les
push
fxch
sub
movsb
sbb
inc
fnstcw
or
and
popf
cmovge
inc
cmc
bound
test
hlt
test
pushf
stos
jl
sub
xor
addr16
repz
cli
ret
repz
incl
xchg
into
sbb
pop
mull
xchg
mov
push
mov
scas
mov
aaa
mov
repz
xor
pop
xor
jmp
out
not
sahf
lcall
loopne,pt
rorb
imul
shl
in
xchg
jae
xchg
xor
add
dec
push
scas
cmp
xor
push
mov
inc
xlat
mov
arpl
xchg
iret
cmpsl
jo
and
jle
popf
adc
pop
in
loop
sahf
shl
ficomps
xor
xor
inc
dec
xor
pop
jnp
dec
insb
popa
add
das
stos
je
pushf
in
dec
inc
sub
add
in
sti
jg
ljmp
cmpsb
movsl
add
sbb
xlat
cltd
call
mov
xchg
insb
popf
lcall
sarl
addl
ficoml
and
push
xchg
call
das
push
dec
outsb
xlat
bound
ja
xchg
mov
cmpsb
and
into
lods
clc
ljmp
pushf
call
nop
xchg
inc
das
lcall
imul
mov
xchg
inc
pop
addr16
imulb
je
fisubl
cltd
rorb
xchg
ficoms
adc
decb
repnz
dec
cmp
pop
mov
jno
pop
addr16
inc
jp
or
repnz
stc
shlb
bound
xchg
push
repnz
and
add
sub
mov
cmc
out
mov
adc
and
mov
scas
adc
fwait
aam
or
cmp
push
and
pop
mov
loopne
cwtl
add
aas
mov
ret
hlt
dec
xor
push
sbb
nop
push
xor
repz
push
movsl
inc
roll
test
xchg
ss
sbb
sub
inc
and
daa
adc
mov
xor
or
test
sub
sub
leave
dec
jl
shll
call
stos
test
divl
pop
divb
jo
push
jl
adc
js
push
jl
sub
sub
dec
das
lock
or
shl
sub
xor
shl
out
push
xor
ret
xchg
push
and
xchg
xor
cltd
mov
fwait
les
shll
mov
scas
pop
sub
dec
bound
pop
cmp
cli
sub
add
loopne
int3
mov
dec
outsl
mov
popf
fiadds
je
mov
lret
mov
insb
push
xor
lahf
in
add
iret
scas
push
fst
jae
shll
mov
mov
jmp
jge
jg
ds
adc
pop
lods
dec
xor
cmp
test
mov
mov
movsb
push
je
popf
loope
dec
mov
push
dec
or
or
adcb
sub
cmc
push
mov
sbb
jecxz
sarl
icebp
in
xchg
and
xchg
pop
inc
cld
xor
mov
mov
ljmp
cmp
lahf
cmp
out
mov
inc
pop
jp
cltd
jno
movsl
aad
add
mov
xor
ds
push
iret
mov
sub
adc
push
rcr
insb
push
push
adc
andl
lret
or
mov
mov
fldt
into
nop
das
orl
dec
sqrtsd
and
inc
cs
fbstp
inc
int3
mov
int3
inc
int
cmc
fisttps
out
repnz
sbb
stos
les
add
outsl
cmp
inc
lods
xor
and
xchg
xor
icebp
aad
cmp
je
testl
test
pop
mov
cs
or
xchg
mov
mov
fisubrl
pop
out
inc
and
add
sub
pop
mov
push
xor
and
dec
lahf
sarb
pop
mov
xchg
les
sbb
jmp
or
scas
pop
cmpsb
adc
fsubp
es
or
cmpsl
dec
std
push
dec
sbb
insl
mov
pop
call
mov
mov
sti
sbb
sub
push
std
lods
hlt
das
jge
out
dec
rep
test
stc
mov
mov
mov
jns
cmp
xchg
filds
dec
mov
ja
loope
push
movsb
movb
loope
push
aam
push
daa
addl
insb
jbe
sti
mov
add
and
mov
jb
mov
dec
mov
insl
insb
sub
ss
jge
scas
sbb
insb
out
mov
mov
adc
cltd
imul
and
cmc
int
sbb
sub
sbb
push
loope
imull
dec
xlat
je
clc
xlat
aaa
fcmovbe
mov
push
sub
mov
mov
bound
test
add
adc
mov
hlt
inc
rcll
or
inc
xor
xlat
dec
pop
idiv
nop
xchg
pop
addr16
shr
lret
push
mov
nop
sahf
mov
ret
push
xchg
imul
adc
out
pushaw
addb
jl
pop
and
or
inc
cmp
push
jecxz
loop
lods
xor
idiv
sahf
push
sbb
inc
das
xchg
push
or
jae
test
scas
idivl
outsl
xchg
or
mull
add
or
mov
push
lods
xor
sahf
inc
xchg
sub
jo
in
ja
fcmovnb
je
js
outsb
dec
dec
sub
cmpsb
inc
mov
pop
repnz
shrb
mov
ljmp
insl
iret
loope
lret
aam
and
aas
bound
xchg
push
fwait
adcl
ret
aam
movsb
imul
fimuls
test
lea
jnp
jle
repnz
push
int
mov
lcall
outsl
leave
or
inc
cmc
ret
jp
mov
xor
jg
xchg
jnp
fwait
lds
cs
push
daa
loope,pt
add
adc
bswap
gs
add
mov
pop
test
and
sub
das
cvtpi2ps
sub
dec
sub
repnz
repnz
ret
mov
adc
jge
dec
aam
aaa
sub
ficomps
sub
mov
mov
xchg
lock
lock
dec
mov
test
jno
fs
xchg
in
cmp
rorb
add
fcomps
roll
popa
cmp
les
push
mov
rcrl
xlat
sub
scas
sbb
jp
sahf
and
xor
fidivrs
clc
inc
push
add
cwtl
push
lea
orl
dec
cs
jo
js
out
test
mov
and
iret
jmp
sbb
push
in
add
cmp
dec
pop
inc
inc
ret
outsl
ret
daa
pop
jmp
rclb
add
adc
xchg
or
pop
sbb
test
xchg
icebp
out
sub
jns
jecxz
popf
lret
xchg
out
sti
add
push
out
jmp
ljmp
js
mov
inc
sub
scas
push
dec
adc
data16
in
gs
push
mov
aam
stos
push
dec
lret
xchg
push
clc
sub
pusha
popl
jecxz
ja
inc
xor
sbb
test
incb
xchg
push
push
sub
push
repnz
cmp
pop
or
popf
mov
imul
dec
jg
iret
xchg
mov
jb
ljmp
xchg
xchg
repz
je
std
fsts
cmpsl
arpl
ret
lds
mov
fucomp
or
jae
or
out
push
daa
sub
scas
push
pop
and
push
aam
sti
test
or
mov
fiadds
mov
fisubs
pop
mov
inc
enter
mov
lock
and
call
subb
sub
insw
insb
repz
popf
out
push
dec
inc
popa
xlat
jmp
out
cmp
sub
jp
out
xchg
push
loop
ljmp
or
jl
inc
xchg
sub
in
mov
enter
clc
pop
push
sub
hlt
xchg
adc
jle
aad
and
popf
sbb
inc
dec
ss
ficomps
loope
cs
fucomip
int3
pop
inc
dec
push
call
mov
xor
lahf
pop
jg
add
les
fisubl
cmp
jae
test
dec
bound
xchg
cmc
inc
push
negl
pop
fstpl
or
jb
das
jmp
mov
sub
aam
iret
jae
cmp
inc
in
hlt
adc
dec
or
sarl
daa
mov
mov
roll
shrb
mov
add
push
daa
hlt
iret
jb
test
add
xchg
arpl
dec
dec
inc
dec
nop
sub
call
or
mov
int
mov
xchg
hlt
jge
mov
and
rcrl
adc
cmp
iret
sbb
into
aam
dec
xor
sub
mul
pop
addr16
sahf
xorl
jl
mov
pop
mov
pop
nop
scas
xchg
orb
adc
stos
add
pop
sahf
xor
ret
call
sub
pop
mov
aas
or
dec
or
mulb
shrl
std
rclb
jl
nop
cmp
fcompl
jl
fwait
dec
adc
fstl
lret
sbb
cmp
insb
loop
rcrb
cmpsl
mov
mov
int3
outsl
stos
mov
scas
dec
pop
dec
xor
fcomp
sub
loope
push
jae
popl
mov
add
icebp
fisttpl
sub
push
rorl
xchg
cwtl
inc
or
inc
and
es
fwait
push
sbb
subl
xor
xor
call
adc
jnp
inc
mov
in
pop
orl
mov
leave
and
cmpb
mov
movsl
lcall
outsb
add
lea
or
mov
repnz
or
aam
cmp
and
ss
cmp
in
dec
mov
push
repnz
cmp
xchg
dec
ja
aad
sub
push
aaa
rorb
cli
test
and
pusha
lods
inc
xchg
testb
push
stos
ja
pop
mov
mov
iret
repz
popf
sbb
lds
rcll
add
stos
and
inc
dec
nop
mov
jecxz
rorl
scas
aad
jno
xlat
add
mull
sbb
stc
add
cmc
popa
adc
sbb
mov
jno
pop
dec
scas
lock
insb
sub
stos
aam
outsb
adc
pushf
inc
ret
pop
fimuls
pushl
insl
gs
mov
js
sbb
add
negl
inc
fs
mov
mov
mov
leave
mov
test
push
push
in
fstp
and
add
scas
mov
scas
push
push
push
pop
pop
pop
or
andl
xchg
mov
hlt
mov
mov
dec
inc
ret
fists
sbbb
test
outsb
add
popf
or
gs
xor
mov
xchg
push
sub
xor
jo
add
lahf
push
mov
xor
cmp
mov
sbb
push
fdivl
pop
ss
cmpl
xchg
inc
xchg
int3
scas
mov
pop
xorb
adc
sahf
aad
daa
xor
mov
das
push
int3
mov
bound
mov
mov
or
adc
and
je
flds
jge
test
test
mov
into
lods
mov
iret
repnz
sub
xchg
in
int
in
aad
imul
fldl
out
in
push
repnz
or
loopne
sub
loope
std
in
or
sub
push
or
call
lods
mov
stos
pop
push
clc
mov
adc
testl
mov
push
dec
leave
or
in
int
xchg
aad
icebp
adc
mov
out
lock
or
sbbb
js
lock
mov
pop
incb
imul
andl
mov
scas
leave
xor
jnp
addr16
or
lahf
out
ret
sahf
call
fstps
adc
xchg
xchg
or
frstor
jne
mov
das
mov
fiadds
mov
mov
mov
fcmovnbe
stc
fisubrs
sub
cwtl
dec
jae
sahf
push
scas
push
or
jne
test
mov
stos
dec
sahf
inc
adc
rcr
cmp
xlat
ljmp
sub
mov
fwait
push
daa
js
pushf
mov
mov
xchg
push
sbb
aam
cmpsl
pop
cmp
vcvtpd2ps
xchg
subl
pop
pop
xorb
sbb
mov
into
rorb
sar
add
jne
aad
lret
out
sub
in
or
pushf
mov
or
or
mov
into
inc
rep
fwait
lock
in
data16
xchg
popa
or
push
push
std
int
adc
xchg
push
xor
loope
outsb
mov
mov
stos
cmp
push
sub
dec
gs
fwait
dec
push
subl
js
pop
lods
out
pusha
jo
add
mov
inc
push
pop
inc
mov
int3
inc
mov
jae
ret
xchg
xlat
adc
fsubr
cmp
ss
fs
mov
outsl
into
xchg
jg
jne
inc
mov
scas
dec
and
rcr
bound
pop
pop
jmp
mov
or
inc
xorb
mov
lcall
idivl
mov
sub
cmp
pusha
rcll
adc
mov
enter
push
out
push
clc
jge
xchg
push
push
xor
push
cli
pop
sahf
jns
jno
insb
dec
mov
insl
in
sbb
inc
hlt
sysexit
push
jne
dec
les
pop
outsl
insl
test
int
mov
xchg
std
push
cwtl
call
ds
sub
mov
ds
pop
out
and
cmc
sbb
inc
ret
mov
add
fsub
sub
dec
mov
insl
sbb
fninit
jg,pn
rcrl
pop
out
mov
mov
rcrl
sbb
xor
sbb
fstpl
incb
pop
pop
sbb
xor
in
pop
sbb
push
dec
cmp
leave
inc
cmpsb
lret
mov
push
imul
outsl
mov
xchg
rcrl
adc
adc
loopne
fsubl
sbb
mov
test
in
aam
scas
push
int
fsubrs
bound
sub
bound
sbb
popa
rcrb
out
and
in
je
cmc
or
daa
out
add
jg
jb
fwait
inc
cmp
jb
ja
mov
mov
in
stos
pop
in
int
mov
add
xchg
in
and
or
push
in
cmp
sub
inc
xorl
xchg
cmp
pop
xchg
pop
pop
out
scas
shll
mov
inc
addr16
subb
fdivrl
pop
pop
and
rcr
push
aam
aas
xchg
dec
jge
inc
or
es
fiaddl
xorb
and
in
push
add
iret
jne
mov
mov
adc
dec
mov
fwait
imul
xor
sub
mov
test
ja
add
loopne
lcall
daa
in
and
mov
push
sbb
inc
je
aad
mov
enter
cmp
ret
clc
std
aam
or
sbb
cmp
pop
push
mov
jge
iret
scas
sub
cmc
xor
ret
dec
lret
jg
negl
push
add
and
rclb
das
and
push
xchg
sbb
les
gs
push
sbb
mov
pop
aad
and
mov
sub
push
add
fidivrs
mov
arpl
push
push
aam
sub
fldenv
sbb
insl
mov
aaa
jp
jg
divl
add
in
jnp
mov
mov
icebp
out
jo
jae
sti
aam
fidivl
mov
and
rclb
call
lea
or
js
aad
in
in
fwait
mov
test
movsb
out
fnsave
out
sub
xchg
lea
mov
push
lret
or
mov
shrl
into
notb
adc
adc
aam
dec
pop
xchg
mov
lahf
pop
sub
mov
add
jl
pop
jns
jb
adc
imul
or
xchg
aad
and
dec
pusha
lods
icebp
call
shr
lods
pop
mov
es
fistpll
cmpsl
loop
adcl
test
cmp
out
sub
lock
pop
jns
aam
inc
or
mov
cli
adc
iret
rorb
cmp
lock
icebp
arpl
lret
cld
xor
xchg
arpl
cmpsl
ds
sbb
or
adc
or
arpl
jle
inc
xchg
cmp
fidivrl
push
xor
jp
mov
dec
add
fmul
or
jge
sbb
cmc
loop
push
dec
sub
enter
int3
pop
es
loop
push
xorb
int
jecxz
push
aam
mov
cmp
xchg
fwait
pop
cmp
faddp
cmp
je
fsts
mov
inc
int3
push
test
jns
je
mov
pop
sbb
lods
jo
cmovge
daa
mov
test
popf
jo
mov
lock
fbld
cmc
imul
in
fnstsw
push
sbb
test
sbb
xchg
jle
out
and
xchg
cmpsl
cmp
rcrl
insl
sub
fwait
pop
daa
mov
push
xor
je
adc
add
push
je
mov
imul
jnp
jg
imul
bound
in
outsl
and
std
adc
cwtl
add
dec
lret
aaa
loope
ret
sti
push
pop
js
or
lock
mov
sarb
dec
in
icebp
xchg
shl
cmp
and
sub
sbb
sbb
dec
mov
ficompl
xor
or
stos
insb
cli
mov
adc
xchg
sbb
out
imul
cmp
pop
ss
jns
inc
xlat
jbe
jae
lret
mov
pop
stc
int3
in
mov
loope
cs
sub
mov
mov
lods
lret
imull
mov
testb
inc
and
xchg
pop
cmp
int3
inc
mov
movsl
out
fcoms
mov
push
nop
shr
jecxz
imul
lea
inc
shlb
fidivl
lcall
imul
insl
push
int3
xor
orb
mov
mov
and
ret
mov
push
mov
mov
push
jmp
xor
xor
mov
mov
xlat
or
adc
fcomp
ret
cld
sti
in
adc
pop
adc
insb
in
add
sub
adc
xchg
and
push
stos
lock
inc
add
mov
lcall
mov
pop
lods
rcrl
out
insb
fdivrp
dec
adc
xchg
inc
and
cmp
pusha
and
fstpt
loop
out
jnp
shlb
mov
sub
xchg
jno
imul
pop
dec
loope
add
xchg
fsubp
xor
in
sbb
mov
jecxz
inc
and
push
shr
mov
mov
xchg
or
rcrl
repz
inc
or
andb
cltd
sahf
mov
add
dec
out
push
mov
push
or
repz
sbb
insl
add
and
outsl
cmc
xor
inc
push
mov
loope
pop
xchg
cmp
adcb
in
jo
push
inc
fildll
xchg
sbb
push
dec
xor
jg
jg
jne
stos
lret
in
scas
sbb
inc
cmp
sub
push
roll
nop
or
in
sbb
sahf
and
xor
loop
push
xor
frstor
stc
jno
addl
jne
sarl
mov
xor
push
fwait
addb
testb
ss
cli
sub
sbb
pop
push
aad
sbb
sbb
adc
push
inc
sbb
or
imul
mov
mov
mov
add
jns
mov
and
inc
aad
sbb
shll
push
sahf
es
dec
into
pop
mov
and
hlt
ljmp
stc
mov
mov
call
sub
mov
jbe
jne
jne
or
push
repnz
dec
sub
and
daa
jg
mov
test
mov
xchg
adc
jae
mov
repz
rolb
jecxz
prefetch
lea
fs
mov
das
xor
in
xchg
mov
jecxz
fsubp
mov
test
bound
push
xchg
shl
push
cld
out
inc
mov
xchg
test
call
sub
lock
leave
mov
mov
or
fninit
shr
xchg
push
shll
xchg
loope
int
add
push
stos
sub
push
addr16
sbb
nop
scas
xor
xor
cmp
and
inc
cmp
sub
sbb
push
dec
and
xor
xor
outsb
xor
jbe
pop
pop
int3
bnd
xchg
bnd
sahf
loop
push
jb
rclb
lcall
add
mov
popf
int3
mov
adc
dec
icebp
or
in
scas
push
xchg
push
ds
popf
inc
xchg
dec
fiadds
add
and
xor
movsl
xchg
push
mov
mov
pop
stc
arpl
inc
mov
xchg
mov
add
mov
sub
nop
mov
xchg
cmp
int3
dec
movsl
jmp
xchg
mov
cwtl
leave
mov
out
std
mov
ss
roll
stos
push
pop
jne
ja
mov
les
hlt
fisubl
cmp
pop
jnp
cltd
jl
les
test
sub
sbb
lods
adc
hlt
dec
mov
je
xchg
push
sbb
lods
jae
pushf
and
dec
stos
push
out
push
sbbl
sbb
mov
xchg
int3
repnz
push
aaa
shl
adc
pop
push
leave
xor
mov
sbb
pop
mov
mov
mov
mov
push
fisttpll
leave
sub
mov
imul
xchg
adc
pop
pop
push
nop
jge
movsb
fldz
in
sbb
push
mov
out
sub
jmp
ss
add
aam
cld
and
inc
cmp
inc
sub
mov
aaa
or
repz
xchg
fisttpll
sbb
or
ds
pop
mov
push
fiaddl
jb
popa
xchg
andl
fcoml
arpl
xchg
daa
aam
addr16
cld
dec
jns
pushf
aaa
fucom
adc
or
cwtl
or
fnstenv
inc
dec
ljmp
mov
test
or
mov
ss
mov
nop
pop
push
xchg
idivb
in
enter
scas
aaa
xchg
pop
push
scas
jl
sub
fwait
jl
call
add
sub
adc
int3
pop
mov
mov
cmpsb
mov
insl
aad
stc
jnp
add
dec
or
pusha
repz
cmpsl
cmpb
mov
adc
add
inc
inc
jae
loopne
push
ret
icebp
xchg
push
push
stc
in
loope
cmc
inc
repnz
sub
cli
sub
ja
adc
dec
imul
dec
imul
shlb
dec
rcrl
or
test
enter
andb
mov
jmp
xor
or
and
stos
hlt
push
loop
xor
inc
pop
mov
add
es
ret
mov
xchg
mov
and
rcll
cltd
adc
sbb
sahf
mov
sbb
dec
lea
xchg
imul
imul
pop
out
mov
mov
ffreep
or
stos
int3
in
pop
or
xor
pusha
rorl
jo
in
test
mov
loopne
mov
decl
cmp
or
push
mov
idivl
icebp
stos
push
mov
loopne
push
cld
aaa
xor
aam
fistl
pop
ret
pushf
pop
pusha
repz
lret
fcomps
shufps
xor
mov
pushf
mov
scas
dec
dec
pop
jmp
cld
outsb
lods
andb
pop
mov
inc
fs
push
icebp
cmc
sbb
push
enter
dec
add
aad
cmp
divb
sbb
inc
xlat
jmp
mov
hlt
dec
xchg
pop
jne
notb
push
xor
aas
push
gs
pop
popf
cmp
mov
sbb
pop
mov
lods
adc
mov
iret
push
fstl
test
adc
sti
xor
push
mov
repnz
sbb
lcall
jmp
pushf
pop
loop
in
cld
addb
mov
clc
loope
in
cltd
adcl
and
mov
inc
or
in
sbb
imul
in
add
mov
jle
or
jae
sbb
icebp
dec
repz
cwtl
daa
or
sub
enter
jmp
test
mov
ret
xor
mov
mov
adcl
rcr
test
inc
shl
dec
sbb
pop
jno
jno
ljmp
mov
push
pop
jno
adc
dec
jmp
daa
sub
pusha
and
push
push
pop
jle
ss
push
lods
jb
outsl
sbb
outsl
inc
loop
sahf
mov
mov
aad
sbb
push
lret
pop
iret
adc
push
pusha
dec
frstor
pop
xor
out
data16
jns
mov
enter
sub
popa
sbb
push
leave
mov
fdivr
adc
jle
sbb
lods
jge
xor
pop
sti
fbld
pushl
cli
pop
cli
xchg
jne
jg
arpl
mov
pop
dec
in
pop
mov
aaa
repnz
int
fmuls
int
mov
aam
sbb
std
xchg
enter
mov
mov
rcll
dec
out
outsl
inc
lcall
push
lcall
xchg
mov
jl
or
sub
call
dec
jmp
pop
adc
mov
dec
jmp
dec
and
mov
jo
js
cmp
cmp
scas
or
xchg
and
aas
rclb
xor
lock
int3
scas
xor
push
push
dec
scas
push
push
cmp
gs
mov
out
lods
fldl
mov
out
fmull
mov
in
dec
fisubrl
or
mov
mov
stos
and
mov
shrd
add
cmp
lret
sarl
int3
sbb
jns
jg
push
stos
in
sbb
into
lock
into
outsl
adc
repz
xchg
movsb
dec
ret
rorl
idivl
das
daa
inc
leave
dec
std
mov
divb
jae
xchg
cli
pop
jmp
push
icebp
cld
enter
loop
ret
insb
xor
and
aam
jnp
inc
add
pop
aam
cmp
mov
mov
jo
leave
imul
mov
add
stos
cmp
movsl
adc
pop
pushf
xchg
xor
cmp
int3
lds
lods
push
test
or
mov
fucomp
enter
idivl
jmp
mov
xchg
adc
lcall
mov
cwtl
fisubrs
fdiv
clc
sbb
pop
inc
rorl
out
int
ret
mov
jb
cmpsb
movsb
int
repz
add
inc
xchg
mov
mov
or
xor
into
add
inc
ss
pop
lahf
push
xchg
nop
xor
xchg
test
icebp
inc
pop
xor
jo
cmp
or
cs
push
push
daa
sub
dec
sub
sub
into
int
or
arpl
fldt
test
adc
popf
adc
bound
rolb
loop
xchg
or
mov
cmp
aas
in
jmp
cmp
lea
lds
mov
fcompl
cli
scas
rcrl
mov
or
xchg
mov
adc
push
insb
pop
add
mov
sub
pop
dec
sbb
icebp
std
xchg
mov
cld
cs
aas
jmp
pop
dec
mov
je
mov
pusha
andl
enter
xor
ss
ljmp
enter
das
adcb
popl
xchg
jl
jne
loop,pn
cmp
inc
mov
repz
sub
cwtl
adc
iret
ja
rcl
out
xchg
pop
inc
subb
inc
jecxz
lret
dec
jmp
shll
fsubs
sbb
cli
xchg
mov
xor
inc
lret
push
adc
mov
addr16
pop
iret
stos
paddd
jg
xor
jg
pop
sahf
pop
subb
mov
pop
cld
idivb
xor
aas
rolb
sub
lea
mov
cmpsl
push
adc
mov
pop
and
sbb
push
sbb
fistps
ret
aaa
sbbb
xor
sub
fisubs
push
in
daa
rcr
ds
mov
mov
pop
push
jb
popf
pop
mov
dec
and
fmull
out
mov
out
sub
xchg
xchg
dec
in
mov
add
adc
and
dec
push
xchg
sbb
out
pusha
shl
mov
pushf
jo
inc
dec
push
dec
xchg
inc
pop
jecxz
lods
sub
inc
jmp
cld
inc
nop
sti
xor
call
mov
test
inc
add
lahf
mov
inc
out
and
jl
adc
lock
push
add
pop
or
outsb
call
adc
std
inc
sbb
xor
add
fs
pushf
lock
mov
fmuls
adc
jecxz
or
in
push
sbb
hlt
or
inc
shr
in
out
js
arpl
testb
push
les
jecxz
push
fstl
push
pop
lea
cwtl
fisubrl
or
xor
lods
std
sbb
ficompl
mov
std
jno
lret
jne
jge
inc
adc
jp
jne
out
xchg
and
sbb
jae
pop
dec
xchg
xchg
out
sahf
in
inc
cmc
cmp
push
imul
inc
mov
mov
das
cmp
pop
pop
jnp
cltd
xchg
sub
in
in
out
mov
test
and
add
pop
xor
movsb
mov
scas
push
and
fpatan
add
hlt
aam
push
mov
inc
jnp
aam
fwait
or
test
inc
mov
jne
push
icebp
sub
aas
lods
imul
xor
push
sbb
dec
adc
test
lock
push
dec
cld
dec
mov
and
bound
xor
std
add
in
add
insl
adc
outsb
fbld
jle
and
inc
fdivr
mov
jle
lret
leave
xchg
mul
mov
mov
aad
daa
dec
xchg
js
pusha
aad
push
arpl
stos
sbb
daa
xchg
int
stos
xor
loop
push
and
les
xlat
lret
mov
aaa
das
out
cli
inc
aaa
ljmp
aas
outsl
bswap
std
jae
mov
ja
aad
sub
fidivrl
dec
dec
insl
push
or
mov
fisttpl
pop
xor
js
rcrb
jl
daa
push
daa
insl
adc
jo
sub
daa
fldt
add
inc
sbb
jle
movl
mov
or
lahf
mov
testl
dec
pop
xor
ja
inc
flds
xor
incb
jae
imul
add
jmp
scas
out
test
inc
in
dec
add
stos
fcmovb
lret
and
adc
dec
adc
mov
push
pop
sbb
iret
loop
aam
or
cmpsl
data16
sub
fwait
incb
neg
mov
xor
js
sub
fucomi
es
sub
aaa
adc
xlat
or
std
sahf
repz
add
push
cli
inc
das
lea
push
or
mov
call
mov
sub
or
mov
jae
ret
sub
insb
std
xchg
push
mov
mov
sub
xor
adc
fs
jns
jecxz
add
std
rolb
cmp
in
out
mov
loope
std
pushf
cmpl
adc
rolb
push
loop
xchg
cld
jns
mov
arpl
pop
fsubs
jl
jl
addr16
sbb
rolb
push
mov
lock
and
inc
dec
cs
js
popa
pop
xchg
movsl
popf
gs
roll
cmc
push
hlt
lock
dec
ds
push
mov
fnstcw
pop
rcrl
inc
dec
adc
outsl
pop
jo
addl
mov
aaa
ret
mov
cmp
push
fs
jmp
fwait
test
cmp
push
ret
sbb
roll
jbe
js
ja
fildl
cwtl
mov
mov
rcll
add
adcb
mov
jae
aad
scas
lret
fadds
fsubrs
sbb
lahf
pop
mov
xchg
xor
aam
fcompl
incl
lahf
or
js
xor
or
adc
out
pop
add
xorl
aad
mov
sub
idivl
xchg
iret
pusha
xchg
or
std
cwtl
in
mull
dec
fistl
dec
xchg
mov
sub
pop
xor
pop
bound
pop
xchg
test
pop
cld
bound
or
dec
dec
dec
cmp
rolb
hlt
loopne
fcoms
xor
cmp
push
into
inc
sbb
sti
mov
mov
popa
pop
dec
xchg
inc
cli
popf
ja
xchg
push
inc
shl
jecxz
pop
xlat
sbb
xor
call
lods
cld
rcr
push
adc
add
push
mov
mov
cld
mov
or
in
insl
jge
mov
mov
insl
adc
pop
bound
xor
testl
jo
xchg
inc
cmc
mov
jns
add
or
mov
pushl
xorl
pop
shrl
call
dec
sti
ja
cmc
clc
xchg
mov
add
adc
imull
pop
mov
mov
sahf
adc
mov
sub
cwtl
push
xchg
add
into
sbb
sbb
dec
cmp
hlt
lods
mov
xchg
and
mov
sbb
clc
xor
push
mov
lods
or
rcr
scas
or
addr16
ljmp
popa
lods
rorb
out
shrl
mov
jecxz
into
movsl
sbb
popf
lods
rclb
jl
mov
aaa
ss
aam
jno
sub
mov
dec
add
es
das
lods
into
add
xchg
arpl
repz
js
pop
and
push
pop
add
lret
pop
xor
shrb
pop
dec
and
pop
fiaddl
cmp
push
sbb
sbb
jo
mov
jg
hlt
pop
outsb
xchg
aaa
xor
sbb
aaa
out
ret
in
js
xor
int3
pop
sbb
fiadds
loope
cmp
add
jg
loop
adc
xor
jg
fcompl
jne
aas
fisubrs
mov
lea
adc
out
push
dec
sbb
jo
sbb
cmp
ljmp
dec
jnp
fwait
sbb
jg
cwtl
punpckldq
pop
scas
jp
or
or
push
jge
sbb
cltd
test
jg
subb
or
dec
push
lea
cmp
sbb
xchg
mov
xchg
cld
fsubs
cmp
pushf
call
les
out
lock
mov
sbb
lret
into
sub
pop
dec
jne
outsl
fcoml
xchg
dec
call
dec
test
test
loopne
adc
xor
jb
imul
dec
ljmp
cmp
sti
loop
sub
icebp
adc
inc
push
imul
shll
aad
xchg
cltd
fwait
jge
imull
pop
arpl
out
sbb
lret
call
aam
clc
dec
fnstcw
xchg
xor
lods
mov
es
sub
mov
mov
dec
roll
xorl
and
add
mov
subb
mov
ret
mov
mov
clc
mov
adc
cmp
vdivss
mov
in
shl
push
mov
sbb
or
jb
pushf
je
cwtl
in
leave
mov
mov
shrb
and
pop
icebp
insb
lock
mov
loope
xchg
xchg
adc
out
dec
lods
sub
jnp
jo
imul
pop
les
xor
daa
in
mov
or
addr16
mov
ja
lcall
sbb
fdivrs
xlat
lahf
negl
xor
mov
dec
xor
out
cwtl
jo
add
fstpt
jae
cmp
test
mov
ret
sbb
cmp
sbb
loope
mov
mov
push
cltd
xlat
arpl
les
mov
aam
clc
inc
cmpsl
inc
adc
clc
push
dec
add
mov
aas
clc
nop
outsl
push
mov
ud2
sbb
inc
and
or
add
mov
loopne
shrb
jbe
rclb
dec
sti
cmpsb
xchg
adc
cmc
jg
pusha
ja
es
arpl
out
subb
stos
jae
pop
push
xchg
outsl
lcall
daa
movsl
mov
shll
dec
stos
jle
inc
or
pop
xchg
sub
or
mov
cli
mov
cs
push
cmp
dec
repnz
xchg
inc
loope
and
cmp
inc
rclb
lods
clc
or
jbe
inc
scas
orl
popf
faddp
insl
cld
and
test
shl
scas
jo
rcr
push
pop
jo
xchg
loop
or
and
xchg
mov
xor
loope
push
ret
pop
inc
out
rcll
push
mov
adc
sbb
in
lods
aas
ret
pop
xchg
js
cmpsl
repnz
call
mov
inc
mov
es
dec
mov
mov
fdivrl
movsl
mov
pusha
adc
pop
xor
mov
xor
jne
notl
loopne
lods
test
lret
movsb
mov
jge
loop
pushf
push
lret
xor
jbe
push
mov
in
test
stc
loope
cmc
push
outsl
push
ljmp
dec
add
dec
or
xchg
imul
sti
cli
loopne
adcl
addps
dec
dec
lea
aad
sbb
cmpsl
ja
add
repz
lock
movsl
adc
mov
sbb
int3
int
cmp
mov
pop
enter
mov
test
sbb
sub
cmc
xchg
lock
cli
xor
push
cmpsl
hlt
xlat
mov
push
in
and
shufps
insl
dec
cmp
mov
adc
inc
shl
inc
ret
testb
or
inc
xor
imul
call
loop
pop
dec
cmpb
jo
imul
fcoml
adc
xchg
adc
xchg
and
sbb
add
insb
xchg
jmp
adc
repnz
lods
xchg
out
jne
mov
scas
mov
xor
icebp
adc
fadds
cwtl
addr16
and
pop
jg
enter
lds
and
and
mov
clc
xchg
lock
mov
jle
push
sahf
or
aad
pushf
loop
in
push
or
cmp
mov
mov
adc
dec
xor
mov
mov
shll
andl
data16
jl
outsl
push
jnp
movsl
lret
mov
sbb
xlat
arpl
dec
xchg
pop
adc
push
aaa
loope
push
lods
bound
inc
sbb
repnz
dec
fisttps
and
xor
push
outsl
sbb
stos
icebp
push
pop
cli
popa
cmc
scas
push
push
mov
inc
push
xor
lock
scas
or
nop
test
gs
fs
out
xchg
lods
pop
add
mov
add
inc
stos
test
test
mov
pop
pusha
xor
and
mov
mov
repz
enter
addr16
and
lret
scas
or
jecxz
pop
cmc
dec
ret
bound
mov
in
into
shrb
cmp
or
aaa
imull
daa
ljmp
lods
inc
xor
fimuls
repz
jge
lock
je
das
push
jne
popa
fcom
push
popa
nop
retw
movsl
fsubl
test
les
mov
scas
mov
mov
push
notl
loopne
pop
sbb
mov
jnp
pop
das
mov
pop
cmpsl
aaa
xor
in
mov
popa
or
loopne
les
and
das
sbb
sub
push
daa
sbb
mov
and
pop
movsb
or
insl
pop
out
dec
adc
sets
mov
idivb
sub
pop
mov
ret
mov
subb
xor
aaa
rcl
jnp
xor
mov
into
int
xor
sahf
test
or
dec
hlt
imul
int
and
inc
in
sbb
ljmp
sub
add
cmpsb
jnp
ficoml
cltd
push
jle
jne
ret
aad
jp
mov
addl
push
out
add
fnstenv
and
aad
mov
fstl
sub
xor
hlt
enter
leave
outsb
add
push
or
adc
mov
push
pcmpeqw
adc
inc
push
xchg
push
xor
inc
push
movsb
or
jnp
and
lds
repnz
in
add
fisubrl
jnp
sub
out
push
daa
call
frstor
dec
fwait
xchg
cld
icebp
inc
loopne
cmp
out
add
sti
mov
jnp
testb
mov
or
movsl
cmp
mov
lret
xor
xor
stos
or
fadds
outsl
mov
add
cmp
stc
jg
loop
fcoml
loope
scas
scas
es
popa
mov
out
xlat
mov
sbb
push
out
test
mov
loope
jg
mov
push
pop
outsl
cmp
dec
add
orl
mov
dec
adc
adc
rcr
adc
jae
inc
pop
addps
cmpsb
xor
cld
ja
add
add
shrb
push
scas
insb
ficomps
frstor
cld
pushl
and
ret
addl
pusha
push
lret
pop
fmul
aas
xor
adc
nop
sub
xlat
add
fcomp
cmp
or
pop
scas
test
test
lahf
sbb
mov
and
xchg
test
mov
loop
cs
lods
pop
mov
int3
fistl
mov
jne
movsl
ret
mov
xor
mov
mov
jno
add
mulb
scas
mov
pop
pop
imulb
xchg
and
cmp
je
lea
cmp
adc
scas
iret
xchg
and
adc
rorb
stos
ds
push
dec
mov
cmp
inc
mov
pop
jnp
add
sub
shll
mov
in
adc
and
ret
fwait
add
jp
fwait
mov
mov
xor
push
cmp
xor
xchg
dec
push
sbb
ja
lods
xor
pop
inc
fnstsw
aad
stos
ficoms
or
and
pop
les
dec
arpl
add
stos
hlt
dec
push
pop
or
in
mov
inc
fisubl
das
repnz
loope
xor
cmp
mov
scas
dec
test
dec
ret
jno
jo
xchg
dec
les
and
js,pn
fldenv
orl
stos
scas
popf
sub
add
stos
sbb
scas
in
out
or
popa
lds
stc
in
sub
cwtl
pop
cmc
lods
xlat
inc
and
imul
xor
popf
notl
and
aaa
jnp
jb
cmpsl
test
movsb
flds
mov
imul
sub
adc
jg
dec
movsl
out
cmpsl
xlat
imul
test
leave
daa
sbb
jae
mov
roll
fldt
cmc
bound
fwait
subb
push
outsl
mov
pop
rep
mov
xchg
outsb
cli
pop
xor
push
cld
loope
pop
sbb
mov
xlat
cmpsl
push
in
pop
fsubs
loopne
mov
movsb
jge
or
clc
cld
sbb
jae
outsb
repz
loopne
mov
ret
add
or
out
int3
movsl
pop
arpl
dec
xor
pop
test
cmc
ss
movsb
mov
add
inc
cmc
stc
cmp
mov
pop
sub
inc
jne
sbb
sbb
fisubrl
iret
push
add
popf
fidivl
and
jmp
fcmovu
cmp
loope
add
jmp
stc
rol
cs
push
icebp
sub
push
movsl
fcoms
lret
cli
insl
pushf
aad
ret
adc
push
jb
imul
mov
aam
lods
or
fadds
adcl
loop
arpl
iret
adc
icebp
or
jo
ficompl
shrl
lods
aam
mov
push
fidivs
adc
add
pop
arpl
shrb
scas
shrl
loopne
stos
xchg
aaa
lahf
xchg
xor
sbb
pushf
clc
clc
mov
or
loopne
jg
sub
pop
cmpsb
jg
lret
ss
mov
loope
lock
ja
fsubs
sub
ss
add
mov
xchg
add
mov
loopne
addl
call
inc
or
xor
repz
pop
scas
mov
scas
lret
mov
or
ret
xor
cmp
in
inc
js
sub
adc
loope
mov
outsl
iret
popa
jbe
cmp
into
ja
sub
repnz
xchg
lret
arpl
call
mov
lock
clc
aas
mov
pop
int3
mov
lods
dec
loope
lret
inc
leave
jno
jbe
ficomps
cltd
imull
outsb
test
jmp
nop
pop
repz
iret
insb
mov
cmp
sbb
xchg
sbb
add
loope
imul
ss
mov
jo
jb
stos
incb
mov
out
dec
xchg
je
jge
ret
ret
pop
loopne
shrb
mov
daa
mov
push
ret
inc
scas
fucomip
inc
jp
loop
mov
jb
inc
repz
xor
xor
ss
addr16
dec
mov
xchg
dec
dec
lods
lock
sbb
loop
fmull
scas
out
add
mov
sub
andnps
popa
xchg
scas
into
xor
add
dec
fwait
xchg
xor
daa
cmp
outsb
xor
addr16
ljmp
sub
scas
data16
scas
inc
jg
lret
sub
sub
stc
clc
dec
pop
addl
and
jp
fwait
nop
les
call
and
mov
jne
fsts
mov
push
jne
mov
imul
add
ja
adc
mov
ljmp
xchg
in
mov
mov
mov
imul
inc
lahf
dec
cmp
sub
mov
fdiv
dec
in
mov
sub
lock
fwait
jle
lcall
push
daa
mov
dec
fmull
les
in
pop
or
bound
in
std
push
push
pop
sub
cmp
fisttpll
addb
mov
xor
ds
popf
lahf
lock
jb
adc
xor
addl
add
outsl
dec
insl
je
xor
mov
push
dec
insl
adc
adc
xor
pop
adc
cmc
cld
cld
jo
sub
pop
adc
lock
add
out
mov
lods
and
xchg
adc
repnz
mov
hlt
outsb
scas
adc
push
lahf
dec
popa
ljmp
mov
movsb
cli
les
out
cwtl
loope
insl
data16
test
xchg
or
mov
xchg
and
cmp
or
addr16
lds
push
aam
jne
mov
fsts
or
addr16
clc
jo
js
loopne
outsl
mov
add
or
aaa
cld
xchg
fwait
jl
dec
jb
addr16
or
fdivl
add
pop
test
cmp
leave
adc
push
inc
ljmp
rcl
incl
lods
or
jle
jb
xchg
cmpsb
fadd
aam
mov
inc
mov
push
sub
or
loop
outsl
sub
jge
push
les
insl
or
addr16
jo
jp
xchg
leave
or
jg
sub
sar
rcrl
call
daa
out
call
ja
imulb
mov
add
pop
jl
pushf
test
fadds
fdivs
sbb
dec
std
inc
jae
jne
xchg
mov
or
loopne
sub
or
mov
xchg
sbbl
scas
push
mov
xor
fwait
test
sub
add
cmc
add
daa
push
inc
call
sbb
push
pop
sti
scas
pop
stos
xchg
mov
mov
and
jle
jno
std
out
cwtl
jno
or
test
pop
mov
cltd
and
adc
lods
movsl
das
test
out
push
push
mov
xlat
inc
and
dec
mov
mov
in
sub
data16
pushf
sub
dec
rcrb
dec
cld
adc
fisttpll
movq
adc
push
je
imul
dec
in
sub
xchg
cmp
inc
inc
cmp
jno
and
movsb
das
add
xchg
sub
scas
xor
ret
ja
gs
movsl
inc
fildll
cld
push
sbb
pop
nop
fcoml
inc
sub
sbb
icebp
mov
mov
mov
imul
lcall
or
lret
lea
sarb
testb
les
xchg
inc
js
out
sub
and
add
ret
and
sub
inc
je
outsb
push
xor
sbb
adcb
xor
sub
fcomps
lret
and
mov
subl
mov
or
mov
jnp
adc
lea
aad
lds
mov
mov
aam
sbb
mov
shrb
pusha
stc
subb
push
out
adc
mov
aam
aaa
and
pusha
xor
ss
cmpsl
insb
notl
mov
jl
jnp
push
jg
nop
ret
ds
rcrb
mov
push
sarb
mov
mov
add
push
xchg
flds
sub
cmp
test
idivb
hlt
add
mov
lea
xor
jg
lahf
push
push
xor
sbb
loop
imul
sub
pop
aas
push
aas
jle
jbe
popf
lods
xchg
loop
int3
mov
dec
add
hlt
ljmp
add
cmp
insl
loope
pop
nop
pop
ja
fdivrs
or
mov
mov
xor
push
jg
in
es
sub
mov
cmc
gs
sub
cmp
icebp
lret
outsb
xchg
andb
xor
and
xchg
mov
jno
pop
xchg
into
and
push
cmc
or
in
sbb
mov
enter
addr16
nop
jne
cmpsb
push
mov
cld
popa
shll
jmp
adc
jle
test
sahf
aas
imul
dec
jle
inc
lea
push
out
sub
fcmovbe
cmovg
mov
insb
jle
xchg
sub
mov
add
jmp
frstor
mov
mov
fidivs
mov
mov
jp
pop
sbb
mov
cmp
cmpsb
cwtl
cmpsl
jae
fucomip
mov
loop
or
cmpsb
dec
lea
fildl
test
sub
mov
cmp
incl
sub
push
bound
push
js
std
test
test
pop
int
mov
aaa
mov
in
shrb
iret
mov
imul
lock
fcoms
fmull
aas
xor
jecxz
add
add
jmp
mov
push
dec
popa
or
mov
pop
outsl
loopne
xchg
aas
call
or
mov
jle
jno
pop
pop
adc
aam
jle
lea
xor
dec
xor
fiaddl
jmp
push
int3
xor
das
jo
mov
les
xor
inc
call
je
xchg
int
loope
test
test
popa
or
mov
push
mov
es
fidivrs
inc
or
test
push
pop
mov
out
bound
dec
cmp
jnp
cmpsl
aad
cmc
push
lahf
lea
mov
lret
inc
int3
adc
bound
ss
jp
mov
icebp
sar
adc
xor
mov
mov
fcomip
repz
fisubs
in
cmc
das
out
or
dec
das
xchg
pushf
rorl
outsb
ret
retw
sti
mov
fldenv
adc
std
icebp
popf
iret
stos
ja
mov
push
out
adc
adc
mov
pop
sbb
ss
scas
scas
mov
leave
inc
adc
sub
dec
xchg
sub
paddb
into
adc
add
ret
cmp
fsubrs
fs
imull
inc
loopne
jns
push
shlb
cmpsl
adc
je
xor
sub
gs
mov
adc
lods
pop
sbb
jbe
jae
popf
push
lcall
nop
mov
test
xor
pusha
shrb
push
scas
mov
mov
pop
je
cltd
adc
sub
lret
clc
xor
xchg
xchg
jnp
lods
das
adc
xor
mov
dec
leave
inc
imul
cmpb
repz
xor
push
bnd
lds
pusha
pop
sub
dec
sbb
test
sub
aas
ror
sub
add
fildll
xchg
loop
bswap
mov
push
dec
xor
sub
or
repz
mov
push
dec
lds
mov
mov
or
add
push
in
aad
cld
cltd
roll
push
sbb
inc
push
xor
sbb
cmp
repnz
lods
fcompl
mov
lods
push
fisubrl
ret
mov
mov
push
sti
outsb
cmp
lcall
push
arpl
mov
iret
cmp
xchg
sub
dec
scas
lds
bound
xor
inc
lods
inc
repz
cmpsl
test
ud2
bound
jbe
popf
das
adc
xchg
mov
loope
out
jmp
out
lods
insb
mov
xlat
cmp
push
iret
dec
lds
lock
fldl
jae
add
mov
out
sbb
outsb
test
test
lahf
shll
imulb
mov
int3
ljmp
ret
mov
clc
sbb
inc
addr16
adc
pop
mov
or
push
fdivl
fadd
out
stc
lods
cmc
fadds
lret
aam
or
mov
std
sub
add
cli
adc
and
and
jne
imul
mov
lods
dec
aam
shll
imul
das
sub
adc
iret
inc
jb
loope
xor
ja
stc
lods
outsl
subb
jns
test
int
jle
fidivrs
loope
out
jno
add
push
mov
bound
or
mov
repnz
lods
rcll
out
or
fidivl
iret
mov
sbb
cmp
lods
fildl
mov
adc
fld
sbb
aam
xchg
mov
and
clc
pop
call
fmull
jmp
mov
sub
scas
cmp
adc
xchg
adc
inc
jae
fmul
sub
hlt
cmp
pop
and
and
add
dec
loopne
ds
mov
dec
xchg
vpcomud
rcrb
repz
jg
dec
outsl
imulb
sbb
subb
and
shl
push
dec
in
jg
mov
decl
call
pushf
mov
and
test
das
ss
jns
sbb
lock
fldenv
mov
outsl
or
mov
mov
mov
pop
adc
cmp
mov
ret
outsl
xchg
lea
pushf
sbb
dec
scas
push
dec
push
sti
or
int3
icebp
push
mov
mov
das
leave
or
mov
test
cmovnp
cmpsl
mov
lods
push
aaa
cmp
and
push
cld
jge
inc
xchg
sbb
xor
arpl
out
xor
aaa
mov
cmpsl
mov
push
mov
cwtl
into
mov
lock
mov
mov
cli
jecxz
or
clc
mov
jecxz
je
push
or
xor
imul
decl
shrl
in
ja
push
jbe
jle
sub
orb
mov
sbb
nop
sbb
mov
lods
imul
inc
pop
loopne
and
popf
jg
pusha
cwtl
cmp
arpl
xchg
bsf
sbb
test
adc
mov
repnz
xchg
js
in
xor
cmc
popf
xchg
ljmp
or
jle
ret
repnz
inc
or
cmp
and
test
mov
mov
fwait
or
das
sbb
lock
dec
dec
sahf
rorl
sub
sbb
fstpl
push
xchg
xchg
mov
sub
sbb
jmp
repnz
xor
cmp
pop
adc
fdivr
cmpsl
mov
lahf
lods
mov
xor
fstpl
mov
xorl
mov
mov
scas
js
xchg
scas
push
jecxz
fisubrs
inc
in
xor
adcl
cmpsb
mov
shlb
jg
fnsave
pop
inc
loope
fwait
shl
imul
push
addb
mov
pop
fisubl
fs
inc
dec
mov
gs
cmpsb
stc
jbe
cmp
sbbl
inc
mov
adc
mov
stc
sub
sub
dec
and
push
push
mov
ret
sub
mov
sub
lret
sbb
aas
inc
aaa
in
jle
jns
mov
push
push
das
test
sti
mov
push
fcomps
sub
pop
inc
icebp
ja
shl
ss
fistps
int3
out
aas
aad
aad
cmp
nop
out
xor
cmp
idivl
insb
call
push
xchg
js
sbb
das
adc
or
xor
test
rcll
mov
mov
out
jmp
push
lds
and
cs
aas
jp
push
push
scas
inc
xor
nop
loope
jae
inc
push
xchg
dec
lds
push
xchg
les
inc
decb
and
test
repz
dec
in
dec
testl
nop
scas
jl
bound
mov
mov
dec
shlb
loope
add
xchg
mov
xor
pop
push
or
arpl
push
xlat
jg
inc
or
or
stos
sbb
xlat
cmpsb
pop
sub
lods
das
cs
xlat
mov
in
movsb
adc
icebp
push
sub
loope
aas
lods
sub
frstor
je
push
lods
insb
add
std
fwait
rclb
repnz
aaa
mov
cmpsl
push
adc
mov
or
mov
imull
sbb
mov
pop
int3
aas
mov
mov
mov
and
fdivrl
insl
insb
fucomip
fwait
cltd
or
in
aas
adc
das
push
mov
pop
movl
push
dec
imul
sbb
fcomp
fidivrs
call
lfs
in
mov
dec
dec
xor
inc
push
sbb
pop
jge
outsb
lcall
mov
shlb
pop
icebp
cld
mov
fptan
jno
xlat
outsl
gs
mov
test
inc
mov
cmp
stos
ja
lret
inc
subl
sub
inc
xchg
into
and
lds
mov
cs
push
das
jp
out
jb
ja
and
in
mov
lcall
add
ds
ret
mov
mov
xchg
and
and
sahf
dec
int
sbb
test
pushf
lahf
roll
xlat
sub
mov
mov
in
jno
pusha
pop
ss
jecxz
imul
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
xor
and
call
aas
js
ja
dec
test
jo
xchg
adc
or
repnz
push
add
loop
inc
ljmp
add
fcoms
gs
imul
cmp
xchg
jo
mov
jno
add
out
and
mov
rcrb
jne
add
stos
cld
xor
sub
andb
jno
je
jbe
clc
pop
jl
std
mov
and
cmpsl
js
mov
sbb
lds
sub
push
mov
mov
and
mov
je
cmp
xchg
push
ret
cmp
ds
and
push
call
lcall
or
and
jno
push
add
mov
add
fsubr
add
ljmp
inc
dec
fmuls
fmuls
inc
mov
or
xor
or
andl
inc
jmp
sbb
fsubl
mov
inc
add
jb
xchg
lea
mov
pop
or
test
and
lea
roll
mov
cmpl
lea
orb
cmpb
jle
popa
invd
dec
jne
fsubrs
dec
and
stc
inc
adc
popa
mov
inc
jb
sbbl
popa
jmp
test
ret
inc
pop
and
inc
stos
cmp
add
jb
or
jle
sbb
or
out
adc
movb
dec
add
push
push
xor
add
std
pushf
xor
xor
mov
sbb
push
mov
test
setnp
rclb
addb
fcoms
cmp
mov
add
add
ret
jne
mov
xor
sub
cmp
or
or
mov
jmp
adc
roll
add
push
or
pop
mov
jo
and
jne
and
adc
add
adc
movb
int
ret
jecxz
loope
jns
aaa
mov
popf
sub
je
lret
push
and
and
movsl
fsubrs
jmp
fimuls
mov
and
xor
add
dec
mov
push
out
cli
shlb
out
add
xor
pop
je
test
jge
add
add
arpl
and
shlb
mov
jg
xor
repz
test
je
or
ret
out
sub
int3
add
pop
pop
mov
pop
out
data16
xor
or
or
or
and
or
jb
add
jbe
andl
add
and
pop
inc
insl
sub
fbld
and
cmp
mov
jge
xor
xchg
or
dec
cld
inc
repz
jmp
pop
clc
cmpsb
pop
insl
adc
gs
hlt
inc
adc
lock
cmpl
loopne
ret
add
fisttpl
cwtl
lock
cmp
shr
mov
cli
or
jp
cli
ret
jne
push
or
inc
xor
and
add
pop
lock
in
arpl
jb
data16
jbe
in
stos
enter
rorb
push
cld
jb
subl
or
dec
jo
or
cmova
cli
cmp
mov
sub
mov
cmc
cmp
pop
push
jo
jle
mov
jmp
out
pop
sub
adc
cmp
add
inc
cwtl
or
and
add
pushf
insl
scas
mov
jmp
push
xchg
inc
add
mov
pop
sub
ret
sub
testb
out
mov
xor
addb
dec
pop
jbe
adc
rcrl
jne
lods
adc
nop
push
jo
test
add
cmp
mov
add
movsl
sub
jne
in
mov
sbb
iret
in
sbb
mov
mov
repz
cmpsl
insl
dec
mov
xorl
mov
adc
sbb
cmp
js
sub
add
xor
sbb
stc
xor
or
xor
xor
cltd
inc
in
les
inc
or
mov
les
dec
and
adc
cmpsl
xor
test
adc
inc
or
out
adc
test
inc
rorl
add
mov
mov
adc
fdivrl
hlt
fiaddl
mov
and
lret
pop
add
xor
xor
pop
jp
out
add
arpl
xor
adc
ret
lods
add
or
sub
add
mov
ljmp
pop
les
mov
add
dec
addr16
xor
sar
aaa
mov
mov
aam
sahf
jg
xor
dec
adc
push
sbb
or
inc
jle
jmp
sbb
adc
push
scas
addr16
jo
add
popa
mov
and
shll
inc
push
pusha
pop
icebp
mov
add
stc
pop
and
dec
loop
push
adc
xlat
inc
les
jae
pusha
aam
pusha
adc
cli
mov
aas
add
addb
add
decl
loop
adc
or
ljmp
daa
out
hlt
les
lcall
dec
ljmp
push
ds
aaa
sub
push
xchg
int
and
cmpsl
pop
in
xchg
mov
int
out
adc
push
shlb
pop
out
cmp
jnp
jge
sbb
push
cltd
int3
bound
push
add
mov
popf
ret
add
sbb
in
xchg
adc
pop
pusha
adc
sahf
data16
or
mov
push
mov
push
add
sbb
xor
and
imul
xlat
sbb
mov
movsb
or
rcrb
iret
int3
add
fildl
adc
cs
rcll
or
add
inc
aas
sbb
sub
je
adcb
loop
sahf
lcall
aaa
pop
mov
out
jno
fcmovnu
roll
idivl
je
int3
in
xor
cs
mov
cli
pop
arpl
mov
lea
push
sub
pop
dec
sbb
out
into
or
pop
jge
mov
cmp
loopne
fsubrp
outsl
sbb
push
add
cli
inc
add
jno
pop
mov
mov
cmp
or
iret
add
test
cli
xorb
adc
xor
cs
sub
call
or
sbb
or
xor
pop
mov
adc
jg
adc
ret
adc
sub
fadds
push
jne
icebp
aad
in
xorb
inc
dec
adc
cld
nop
lock
lcall
inc
test
jo
loopne
push
lods
pop
fildll
aas
test
xor
ud0
mov
sti
inc
pushf
pop
pop
adc
lahf
push
sbb
push
int3
mov
ss
push
out
or
je
adc
xor
dec
pand
adc
sub
movsb
lcall
aam
and
popf
mov
iret
xchg
les
sti
push
outsl
test
and
clc
dec
add
dec
sbb
adc
sub
jle
addl
dec
adc
adc
sahf
add
out
les
outsb
pushf
rcll
jo
in
push
dec
jb
and
test
xchg
push
add
mov
or
pop
push
dec
in
and
add
insb
aam
pop
imul
jmp
mov
cmc
add
mov
or
aam
dec
sbb
pushf
and
or
mov
addr16
dec
ja
popa
xlat
push
jg
inc
orl
add
shrb
ja
pop
sahf
cmpsl
or
jae
pop
adc
or
or
push
mov
test
mov
push
jl
push
pop
bound
xor
movsl
fwait
int3
cmpps
mov
in
add
lret
aaa
mov
andl
or
xchg
pop
nop
push
pop
aad
insl
xchg
stos
push
ds
xor
rcrb
mov
jno
rorb
repnz
cwtl
addl
and
fwait
dec
sbb
push
mov
pop
icebp
lds
cli
test
inc
enter
add
bound
cmpsl
add
mov
inc
add
pop
adc
cs
jp
add
stos
lods
cmp
andl
cmp
push
add
adc
dec
add
pop
lods
bound
xchg
and
je
ljmp
popf
add
aad
xchg
inc
jns
sarb
add
sbb
adc
cmp
add
enter
fistpll
shl
dec
pop
sub
stos
push
ja
sub
ja
xor
fidivs
sub
pop
insl
ljmp
sbb
daa
inc
outsl
mov
or
or
insb
mov
scas
in
xor
xchg
lods
or
push
insl
cwtl
in
push
mov
popa
or
and
sbb
ret
xchg
xor
clc
sub
adc
cltd
push
sub
and
sub
std
mov
xor
push
jno
pop
fsubrl
push
add
mov
inc
mov
sbb
and
xlat
jl
shlb
adc
jbe
or
mov
dec
push
ror
xor
cmp
add
dec
pop
stc
test
mov
adc
int3
adc
dec
dec
rorb
fsubrs
add
adc
dec
insl
sbb
jno
cld
xchg
dec
mov
inc
ror
lret
cmp
and
push
push
enter
sbb
mov
mov
xchg
sub
jo
mov
cs
cli
xchg
pusha
lret
jb
ljmp
cmove
shlb
inc
inc
popf
and
test
mov
mov
push
cmp
aaa
orb
fists
jo
fs
cld
push
leave
jle
mov
mov
lods
push
fadds
shlb
mov
in
ljmp
push
ds
stc
ficoml
loop
push
cmp
shrb
pusha
insb
stc
xchg
cmc
add
sahf
clc
mov
pop
cmp
xchg
scas
int
movsl
mov
cld
add
jae
mov
add
mov
fdivs
loopne
in
xchg
mov
pop
je
push
hlt
sub
andb
or
shrb
sub
pop
mov
rclb
inc
or
add
cmp
sbb
test
sbb
xor
imul
inc
or
es
fmull
push
push
sub
out
shll
mov
adc
imul
or
sbb
push
push
in
or
loope
inc
fimuls
faddl
popa
dec
in
leave
add
fs
add
or
outsb
pop
es
adc
je
sbb
push
push
mov
addb
mov
rcll
jno
add
sub
pop
add
in
outsl
cmp
add
jae
inc
sti
testb
inc
cs
test
mov
sbb
int
add
mov
mov
in
aam
push
xchg
cmpb
pusha
add
xor
sub
xchg
jbe
bound
lock
add
insw
testb
add
test
add
and
sbb
inc
jecxz
or
loop
scas
xorl
jg
mov
loopne
xor
xor
shll
add
adc
inc
dec
mov
cmp
xor
sti
lcall
push
inc
mov
cmp
xchg
rcrb
adc
add
inc
and
add
loopne
push
cwtl
adc
into
push
mov
ds
mov
cs
xchg
fldt
add
xlat
aam
mov
lea
mov
imul
pop
and
pop
ss
inc
sbb
sub
das
or
ljmp
adcb
sti
repnz
mov
mov
into
adc
cs
fcomps
mov
lock
cwtl
mov
dec
jecxz
fistps
push
loopne
add
push
fnstcw
and
xor
out
sbb
dec
adc
pop
into
or
dec
xchg
pusha
rclb
add
add
xchg
mov
dec
and
ret
xchg
in
xchg
add
xor
and
or
dec
cltd
mov
lock
push
test
mov
or
add
dec
push
sarl
or
jo
sbb
mov
cltd
pusha
push
repz
mov
dec
loopne
cmp
inc
ret
mov
cmp
pop
fs
xor
mov
out
pop
dec
inc
sbb
xchg
cwtl
or
sub
lock
sti
xchg
lods
sbb
jns
mov
mov
dec
and
shll
inc
xchg
fistpl
dec
lock
jp
popf
test
pop
ret
jl
add
rcrl
xor
cwtl
stc
cmpl
call
ret
add
xchg
psubusb
pushf
into
cwtl
mov
inc
ljmp
test
je
inc
add
cmpsl
adc
popa
je
cli
xchg
jb
add
mov
je
mov
stos
add
push
pop
dec
push
int3
aas
adc
sbb
adc
and
mov
sbb
popa
fisttpll
adc
xchg
lret
inc
rclb
sub
xor
or
adc
add
inc
jae
lcall
das
call
inc
popl
call
inc
pop
psubb
push
fcoml
fnstsw
repnz
clc
pop
jg
dec
sbb
dec
inc
stc
mov
sub
xor
inc
cwtl
lock
add
push
adc
popa
xlat
pop
adc
call
fisttpll
mov
mov
adc
and
clc
cmp
xor
rorl
dec
push
mov
mov
pop
jmp
int3
push
add
sahf
jns
sti
push
and
leave
nop
jo
test
add
and
and
adc
clc
lds
or
iret
pop
mov
mov
ja
ljmp
mov
imul
pop
mov
jno
push
lahf
in
and
sbb
add
mov
hlt
pop
movlps
aad
in
add
sbb
jl
popa
push
ret
enter
push
cwtl
cld
mov
jl
add
fisttpll
gs
enter
int3
sbb
shl
inc
xchg
and
xchg
sub
add
sbb
pop
arpl
cli
mov
mov
add
adc
seta
clc
mov
jnp
cmc
fdivrs
add
int3
rolb
fisubs
arpl
lds
cld
pop
hlt
add
push
xchg
jmp
sar
adc
mov
sbb
outsl
cwtl
loope
sub
add
mov
sbb
aad
adc
lret
call
ficoms
xor
add
lret
in
dec
add
xchg
cmp
loope
hlt
cmpsb
xchg
adc
push
rolb
divl
sbb
adc
movsb
adc
jnp
ret
xlat
mov
add
sbb
test
sbb
mov
and
lret
fcoms
add
push
stos
dec
add
mov
into
inc
jl
add
leave
push
xchg
loop
cs
gs
ljmp
mov
add
in
mov
jb
shlb
cmc
mov
push
pop
fstpt
inc
mov
mov
pop
addr16
add
or
push
hlt
adc
push
add
sbb
mov
lds
ljmp
add
testl
pop
test
bnd
jo
and
cmp
aad
pop
jl
adc
mov
mov
inc
sahf
dec
add
dec
in
adc
xchg
mov
dec
test
call
jmp
adc
xor
xchg
int
and
cs
rolb
jae
or
cli
scas
les
inc
and
add
cwtl
scas
mov
mov
xchg
mov
jmp
jb
enter
das
enter
sub
push
stc
incb
scas
and
add
sbb
push
shll
outsb
xchg
mov
inc
xchg
out
int3
sub
call
mov
repnz
xor
jb
add
add
stos
lahf
pop
sbb
xchg
aad
repnz
fsub
and
sbb
insl
fstps
daa
mov
inc
into
fildll
leave
jmp
add
jl
mov
cmovp
and
add
pusha
xchg
jnp
ret
repz
add
add
xchg
inc
out
mov
lret
aam
adc
push
aaa
aas
sub
clc
jbe
adcb
push
rorb
out
loope
aaa
cs
xor
add
cmp
dec
jg
mov
hlt
sub
ss
das
or
int3
pop
pushf
and
push
xor
inc
bound
dec
insb
xchg
xchg
and
or
pop
data16
mov
inc
jle
pusha
mov
ret
push
ljmp
daa
add
sbb
mov
push
in
inc
icebp
clc
sub
in
push
and
aam
cwtl
adc
orb
or
imull
add
xor
call
sub
push
xor
stc
insl
push
mov
ret
dec
inc
orl
xor
add
mov
push
mov
jno
jo
sbb
jne
sbb
insb
push
or
xchg
subb
jno
aas
ljmp
cwtl
hlt
and
aam
pop
add
pusha
sbb
or
aam
aad
fs
mov
daa
mov
loopne
cmp
cmp
jo
inc
popa
test
ljmp
adc
and
lds
jecxz
add
lock
inc
call
hlt
je,pt
mov
pop
mov
mov
fldl
add
out
add
inc
push
rcl
andb
add
aam
pop
sbb
cmp
add
adc
into
clc
test
fwait
pop
mov
inc
aam
pinsrw
sbb
sub
loopne
sarb
adc
js
cmp
and
popa
cltd
or
orb
sub
pop
lock
cmp
mov
add
enter
repnz
mov
ljmp
enter
push
scas
cld
xorb
leave
push
sbb
enter
js
sbb
neg
adc
mov
andb
push
cs
mov
add
addl
insb
aad
test
leave
into
xlat
add
pop
mov
imul
stos
bound
aam
cmc
xor
loope
imul
add
jae
sahf
leave
mov
xor
fistl
and
sahf
and
lock
adc
xor
loopne
inc
and
xor
andb
xor
adc
addb
push
jl
and
fcomp
add
jge
fdivl
orb
add
lds
add
fnstenv
sahf
xor
or
push
into
inc
test
ja
push
cli
sahf
push
loopne
cmp
xchg
push
popa
dec
fs
add
test
xor
loope,pt
pop
es
repz
popa
cwtl
movsl
popa
cmp
add
rcrl
and
xor
test
mov
sub
mov
dec
jl
data16
fstps
xchg
das
add
les
inc
push
rcl
push
fmull
dec
or
xchg
nop
loop
clc
add
enter
sahf
pusha
js
ret
imul
mov
repnz
push
mov
int3
lret
loope
jecxz
inc
arpl
add
lret
mov
adc
or
and
clc
sahf
add
hlt
bound
push
lock
test
mov
xchg
int3
jae
fs
push
and
sahf
mov
into
in
inc
jle
sbb
nop
insb
mov
lods
mov
ror
cmp
push
cli
or
mov
in
xchg
cld
mov
movsb
add
pop
fucomp
mov
jmp
mov
xchg
pop
in
pop
cwtl
dec
leave
insb
sbb
dec
push
xchg
cmp
cmp
push
sub
mov
pop
pop
fstps
sbb
pop
mov
inc
addb
aam
pop
xor
in
and
aam
push
outsb
or
lock
jo
jle
lret
test
ret
enter
dec
cmpsb
mov
add
int3
dec
repnz
cwtl
and
pop
cmc
das
adc
sarl
daa
in
ja
mov
xlat
shll
addr16
adc
and
sbb
das
lds
mov
jns
mov
clc
in
pop
inc
outsb
addl
pop
mov
pusha
aas
imull
les
int3
lret
sti
mov
or
mov
or
mov
sub
push
std
popa
fdiv
ja
jnp
lock
lret
aas
inc
and
jo
leave
mov
in
mov
test
ret
pop
add
sub
jl
sbb
arpl
xor
add
test
subl
pop
popa
in
test
repnz
mov
mov
sbb
mov
nop
lret
cwtl
cmpsb
leave
push
jo
das
push
cwtl
lret
inc
in
xor
jecxz
fdivrs
lea
scas
push
inc
or
test
add
sbbb
inc
movsb
cwtl
or
add
outsb
push
sbb
addl
add
push
aas
xchg
jb
les
sub
mov
xor
sub
cltd
call
jmp
dec
faddl
push
mov
nop
cltd
cwtl
sarl
pop
add
test
fs
cmp
fsubr
das
jg
les
xor
jmp
js
ret
and
jmp
testb
add
rcl
fdivs
pop
xchg
faddl
pop
xchg
outsl
pusha
data16
imul
jae
lcall
sarb
fbld
xor
loopne
faddl
out
jae
lret
jecxz
int3
adc
or
cwtl
xor
scas
pop
loopne
or
addb
dec
mov
push
rol
pop
dec
inc
lock
add
bound
jmp
pop
dec
roll
push
les
push
in
movb
aam
pop
jmp
adc
sbb
mov
shl
cmp
into
push
push
call
sbb
into
pop
std
mov
push
icebp
sahf
jge
repnz
mov
adc
and
jns
mov
ljmp
push
sbb
ficompl
adc
arpl
xchg
fmuls
adc
cmp
fsubr
les
ljmp
dec
mov
jmp
cmpsb
mov
fs
add
sub
sub
jl
cmpsb
fs
xchg
push
dec
movsb
mov
clc
fmull
testb
mov
fidivrl
sub
jg
enter
clc
cmp
stc
es
push
out
xchg
add
add
push
and
push
sbb
in
mov
sahf
movsb
add
cmp
sbb
mov
aaa
mov
jae
mov
jge
jbe
pop
mov
jo
test
and
push
rcrb
in
adc
rcrl
int3
fdivrs
jo
jb
movsb
enter
outsl
adc
mov
dec
dec
jno
in
leave
mov
cli
xor
test
test
pop
jle
lock
dec
adc
or
mov
pushf
push
xchg
jg
xor
jp
pop
dec
sbb
or
sbb
in
mov
adc
jne
cld
or
mov
test
xchg
sarl
pusha
and
sbb
mov
add
aad
fidivrs
cltd
insl
xchg
xchg
cmp
out
jae
clc
and
lcall
pop
fisubrs
mov
ret
es
insb
std
lea
xlat
clc
jle
ror
sub
lahf
jmp
or
cmp
pushf
lret
jp
adc
sub
test
mov
push
cmp
ss
bound
loopne
cwtl
xchg
xor
pop
pushf
cmp
test
mov
int3
add
or
pop
ja
rol
cmpsl
in
enter
jp
adc
adcl
xchg
cmp
push
push
cwtl
orl
sbb
jle
decb
dec
in
mov
jns
mov
mov
inc
xchg
jmp
add
mov
cvtdq2ps
sahf
out
mov
inc
out
jo
mov
push
scas
aam
xchg
call
push
inc
out
cwtl
xor
lods
xor
pop
mov
mov
stc
lea
pop
fmuls
mov
sbb
xor
sbb
push
jge
test
loope
sub
mov
das
xor
sahf
mov
jp
mov
push
leave
mov
pop
addr16
out
adc
and
js
adc
addb
stc
jle
add
lcall
pushf
pop
jmp
orb
pop
jmp
in
push
xchg
push
aaa
mov
enter
aas
shrl
add
lods
cmp
and
cld
xchg
xchg
clc
lods
dec
call
cmpl
adc
nop
inc
or
add
gs
ljmp
push
or
test
mov
sub
nop
rcr
pop
aas
orb
push
inc
mov
push
dec
and
dec
xchg
push
mov
and
xchg
mov
inc
rcll
xlat
dec
dec
stos
and
lcall
mov
inc
aaa
adc
jecxz
rcrb
repnz
into
jl
fimuls
scas
or
xchg
pop
mov
mov
testb
jo
fwait
push
or
inc
xchg
ss
ror
mov
aas
ljmp
pop
sarl
js
arpl
inc
negb
lods
fs
stos
add
fwait
or
sbb
insl
stc
or
in
sub
iret
imul
push
or
bound
test
cwtl
iret
rorl
inc
jmp
cmp
jae
addb
add
push
pop
dec
push
xlat
enter
cmp
lret
jbe
and
xchg
out
inc
test
and
sub
cmp
push
mov
and
xor
aaa
inc
add
jl
or
sub
jmp
sub
cmpsl
sbb
minps
shl
mov
nop
add
mov
lods
mov
add
jg
fs
arpl
in
out
adc
jp
pop
movsl
enter
or
push
or
lret
lret
js
fld
pop
dec
int3
inc
or
sbb
je
idiv
in
push
loope
les
cmp
shlb
jge
decl
test
loop
adc
push
mov
add
mov
enter
movsl
mov
data16
cmp
divl
cmp
fadds
leave
xchg
add
jle
dec
inc
sarl
push
push
sub
add
cli
idivl
pushf
lret
jbe
aaa
jns
daa
movl
mov
sub
xchg
push
mov
push
cmpb
test
mov
and
push
xchg
xchg
scas
pop
call
fidivl
push
es
sub
adc
add
xor
addr16
add
jo
mov
ret
push
xchg
mov
mov
pop
jle
sbb
mov
push
push
pop
scas
xchg
jl
ret
jns
dec
xchg
mov
in
sub
adc
cmpb
add
rolb
mov
inc
test
daa
xor
ficoml
push
push
stos
and
stos
cs
xlat
add
xchg
nop
mov
pop
sub
sub
adc
cmpb
test
jmp
cwtl
or
cld
out
sub
cmp
ja
js
data16
adc
loope
and
mov
adcb
dec
les
pop
pushf
pop
dec
scas
lret
js
and
pop
pop
fs
inc
adc
rorl
xor
daa
rolb
mov
xor
xor
scas
sbb
arpl
scas
add
mov
pop
adc
mov
aaa
adc
fisubrs
fisttpl
fldenv
adc
cli
or
xchg
sbb
xor
mov
test
nop
mul
cwtl
ljmp
cld
inc
int3
lods
mov
mov
add
rolb
sub
lret
xor
das
cmp
aaa
add
cld
adc
or
test
push
pop
aas
bound
mov
imul
out
jg
push
ds
flds
jl
insb
sub
hlt
outsl
xor
sbb
hlt
leave
mov
jl
test
lock
mov
daa
aam
and
adc
adcb
es
and
ljmp
stos
xchg
add
xchg
arpl
gs
mov
add
jl
cmp
aam
adc
push
inc
xchg
lods
cmp
push
inc
fisttpll
inc
sub
adc
mov
add
fmull
jmp
jns
sti
mov
and
pop
or
and
pusha
mov
push
inc
lret
dec
test
sbb
sbb
xchg
hlt
sbb
dec
pop
xor
cmp
adc
xor
into
out
dec
es
push
outsl
cwtl
add
mov
xor
sub
mov
cmp
ljmp
adc
jo
pop
jne
pop
mov
and
cmp
dec
rorb
lods
je
cld
add
mov
rcrl
pop
inc
mov
or
bound
xor
adc
cwtl
adc
fdivs
xchg
addb
fcomps
pop
push
jns
pop
mov
inc
es
mov
andl
testb
add
arpl
or
test
data16
lods
and
stos
or
rcll
inc
sbb
adc
rclb
in
pop
fs
mov
ret
sbb
cld
xchg
xorb
cmp
dec
add
icebp
mov
xorb
dec
jno
ja
rorl
outsl
test
pop
nop
or
push
jb
dec
test
xchg
mov
mov
aam
mov
add
push
xor
inc
hlt
or
xor
fmull
xor
jbe
jns
add
inc
shll
push
clc
cld
and
loopne
pop
add
mov
test
inc
sub
roll
sahf
fdivl
js
test
add
mov
ljmp
in
xor
jg
pushf
dec
test
das
leave
jp
adc
test
push
inc
cmp
sub
insl
xchg
rolb
js
inc
or
push
ja
dec
test
sbb
mov
test
mov
sub
adc
xchg
add
jne
test
lock
ret
mov
pop
aaa
xor
jl
mov
loope
or
add
ljmp
movsb
inc
jo
and
push
repz
add
dec
mov
lock
lret
mov
roll
fisubs
inc
outsl
int3
leave
sbb
cmp
fiadds
cmpl
ja
jnp
daa
push
pop
add
cmp
add
pop
jo
jb
in
and
adc
jl
xchg
pop
and
icebp
jo
dec
insl
jnp
add
or
dec
in
mov
mov
mov
add
fsts
mov
cmp
mov
std
lods
push
inc
fiadds
xchg
jl
hlt
insb
ja
ds
clc
or
je
and
dec
stc
add
jnp
jo,pn
push
dec
cmp
lock
jns
push
stc
ss
mov
pop
mov
roll
fsubs
jmp
or
sub
stos
lds
add
mov
push
iret
lea
push
or
push
popf
add
loope
rolb
push
insl
mov
cwtl
pusha
mov
cwtl
inc
pop
dec
xor
dec
popf
lret
adc
mov
add
test
ljmp
inc
push
add
cli
inc
cmp
xor
sbb
jnp,pn
push
mov
adc
inc
shlb
cmpsb
fs
xorb
dec
aam
leave
add
cmpb
call
es
inc
push
in
leave
movsl
sbbb
inc
jecxz
xchg
dec
dec
lea
mov
mov
movsb
loop
or
in
add
sbb
mov
mov
dec
ss
mov
das
add
lahf
lods
jno
mov
mov
inc
fadd
in
lret
jp
jg
add
repz
xchg
int3
mov
inc
and
arpl
dec
mov
pop
int
daa
in
push
data16
mov
popa
lret
mov
into
rorb
clc
lahf
jo
cmp
add
xor
push
lahf
call
pop
mov
and
mov
adc
pop
mov
dec
add
inc
dec
inc
jns
les
cmp
les
mov
ret
aam
repz
add
and
inc
pusha
or
adc
lods
stos
stc
aaa
push
dec
cwtl
mov
lods
clc
testb
push
ljmp
daa
fwait
gs
shl
rclb
stc
lds
rorb
push
testb
xchg
insb
add
daa
lds
les
out
rcr
add
cmp
xor
setnp
mov
lock
fs
push
xchg
mov
mov
bnd
cmp
popf
add
xchg
clc
pusha
mov
push
lea
mov
dec
jns
js
fiaddl
jmp
push
add
mov
dec
mov
jge
inc
add
add
push
aas
jmp
add
sbbb
les
cmp
test
sbb
and
jg
xor
xchg
adc
aaa
xor
mov
cmp
dec
or
mov
ss
loopne
fstps
xchg
or
clc
fdivrl
les
mov
ljmp
outsl
lods
in
loopne
insb
pop
or
xchg
popf
int3
xchg
jl
decb
repz
pop
pop
jo
pop
push
cmp
pop
sbb
dec
sbb
sbb
cmp
ficoms
xorb
jno
call
std
shlb
icebp
jge
add
pop
fldl
xchg
add
loopne
pushf
into
fidivrs
gs
pop
lods
mov
sbb
adc
enter
mov
push
pop
xchg
rol
inc
addr16
dec
sbb
jg
dec
mov
movsb
xchg
inc
pushw
mov
movb
add
mov
xchg
outsl
adc
insb
add
sbb
daa
and
mov
mov
outsb
leave
pop
cmp
and
xor
mov
rclb
or
push
or
jno
in
cli
into
loope
inc
je
fdiv
mov
mov
loopne
jge
fsubrl
pop
ror
jnp
loopne
jp
sub
repnz
inc
dec
and
inc
lds
mov
test
insb
bound
and
data16
movsb
push
or
leave
inc
xchg
shr
add
ret
sub
push
inc
add
and
or
jl
pop
imul
fidivl
cld
in
dec
push
test
push
dec
pop
mov
and
jmp
sbb
jecxz
pushf
jl
mov
movsl
add
sub
in
out
adc
loope
xor
mov
loopne
mov
gs
add
xchg
pop
dec
pop
push
push
bound
lods
add
inc
repnz
jno
jno
sbb
loopne
lea
mov
push
mov
es
mov
pop
push
loopne
add
stos
mov
inc
lods
push
inc
xor
dec
mov
nop
movsb
adc
add
inc
enter
add
fsubrs
xchg
in
mov
push
add
loop
ficomps
clc
push
loope
fldl
dec
jbe
xlat
push
cmpl
addl
jno
in
inc
and
clc
sbb
repnz
sbb
pop
xchg
cmp
pop
movsl
xor
dec
call
fisubl
fcomps
in
mov
inc
aas
and
mov
mov
inc
inc
lret
xchg
mov
sbb
pop
adc
add
mov
roll
cltd
lret
shr
sub
mov
adc
movsb
push
mov
sarl
rcrb
not
mov
stos
add
test
xor
int
jns
add
jo
push
loopne
cld
outsl
xor
mov
dec
into
mov
es
jmp
dec
sub
sub
mov
inc
mov
pusha
gs
movsb
sbb
in
rolb
xorl
jb
testb
or
faddl
push
sub
cmp
insb
mov
rcrb
cltd
dec
dec
addb
dec
inc
jae
pop
gs
add
and
imul
push
push
fwait
int
xor
mov
xchg
add
or
add
pop
popa
mov
sbb
jo
cld
adc
xchg
fdivr
daa
jg
xchg
xor
xchg
adc
ss
pop
mov
mov
jmp
pop
fs
xor
test
mov
push
dec
xchg
inc
dec
clc
call
subl
adc
cltd
pop
testl
sbb
dec
fcomps
pushf
or
mov
cmp
mov
mov
mov
cltd
add
xlat
leavew
xchg
dec
imul
inc
test
das
popa
lods
mov
clc
fimuls
mov
or
pop
cmc
mov
mov
xchg
sbb
xchg
dec
mov
rolb
sar
cmp
loopne
cmp
sub
shlb
out
or
mov
and
call
xchg
jns
or
sbb
push
push
mov
inc
jl
jge
mov
dec
pop
int
lret
shlb
hlt
flds
push
or
sbb
xchg
jns
mov
out
movaps
dec
ret
pusha
mov
mov
int3
loopne
and
xchg
add
mov
insb
bound
jns
je
sbb
inc
xor
or
and
lods
mov
fimuls
faddl
push
jp
mov
add
outsb
lcall
nop
sub
subl
mov
repz
rcll
iret
inc
movsl
mov
or
call
add
push
push
cmc
aaa
xchg
add
inc
sub
xlat
scas
or
inc
shlb
clc
pop
and
shl
add
jne
movsl
and
repnz
fldt
push
lods
das
rclb
daa
xchg
add
fldl
dec
in
in
mov
xor
outsb
mov
fwait
loop
add
loopne
lcall
hlt
rol
lods
xor
jnp
sbb
sub
mov
ja
and
add
movsb
inc
mov
cmp
pop
mov
aaa
in
stos
adc
and
sub
test
jne
xchg
outsb
js
dec
mulb
pop
pusha
orb
js
cwtl
mov
insl
xchg
adc
test
test
jg
push
ret
adc
clc
cmp
adc
lock
fcomp
adc
lret
cli
addb
and
add
push
dec
jno
mov
xchg
les
push
push
pop
or
inc
movsb
add
clc
decb
in
sub
pop
cwtl
xor
xchg
ret
stc
xchg
adc
mov
add
mov
inc
mov
pop
mov
and
or
ret
fs
fsubl
inc
mov
adcl
in
and
leave
in
int3
and
gs
push
out
nop
xchg
add
sub
mov
test
andb
xchg
and
orl
inc
or
dec
adc
icebp
push
aad
xchg
orl
lock
pop
pop
and
jbe
xor
adc
nop
mov
add
cs
mov
inc
xchg
and
add
lcall
and
mov
es
xchg
subb
outsl
add
mov
pop
push
pop
cmp
in
dec
dec
push
inc
mov
daa
sbb
add
cmpsl
pop
inc
mov
dec
pop
xor
inc
mov
cmc
stc
push
mov
sbb
pop
hlt
add
iret
mov
or
sub
push
sbb
in
push
dec
add
push
adc
mov
loop
xor
jne
ret
mov
loop
xor
ror
xor
mov
and
fistl
add
sbb
int
inc
les
ffree
inc
clc
insb
push
push
mov
test
mov
lahf
mov
pop
and
ret
dec
lods
adc
add
xchg
xchg
inc
mov
push
mov
xchg
xchg
ret
dec
adcb
ds
inc
insb
mov
out
and
mov
test
dec
jle
test
or
es
xchg
int
xor
scas
icebp
call
cwtl
fisttps
mov
push
movsb
inc
push
mov
inc
mov
ds
adc
loop
and
mov
add
imul
subl
and
add
and
pushf
gs
neg
mov
lret
and
addb
notb
rcl
mov
push
rorl
and
and
ja
adc
xor
mov
or
pop
xor
popa
xor
loopne
push
jmp
test
mov
jo
leave
add
inc
xchg
xchg
push
jp
sbb
sub
xchg
pop
jmp
cwtl
inc
lcall
es
xchg
xchg
int3
test
int
loop
push
sub
or
pop
sub
adc
cld
pop
out
adc
clc
push
leave
add
addl
pop
imul
xor
inc
enter
sub
int
fcompl
in
mov
int3
js
test
sub
loope
shrb
subb
out
jno
add
scas
movsb
jp
cmp
add
cmp
dec
inc
push
adc
aam
out
push
jl
add
add
fs
rcr
addb
lods
push
inc
dec
push
push
or
gs
jle
int
hlt
add
sub
pop
and
clc
hlt
inc
test
ror
adc
sbb
xchg
push
cmc
mov
enter
loopne
jns
push
or
cltd
jl
mov
xchg
push
rclb
outsl
pop
stc
test
pushf
lock
add
xchg
pop
sub
inc
or
add
pop
mov
push
pop
and
cmp
jle
adc
int3
inc
push
pop
jb
out
lahf
sahf
dec
dec
inc
sub
test
test
mov
sbb
or
sbb
and
add
fadds
cmp
std
and
sbb
add
test
cmc
rclb
js
xor
lods
inc
mov
scas
cmp
rorl
into
or
sbb
add
out
sbb
lods
mov
jo
mov
lea
pusha
sarl
xchg
cs
lods
in
mov
adc
pop
call
decb
inc
in
lcall
jo
xor
fildl
dec
orl
loope
outsb
dec
stc
hlt
jmp
pop
loop
repnz
push
mov
loope
sub
add
adc
fcomi
sbbl
jecxz
cmp
jae
add
gs
clc
mov
jmp
dec
fwait
scas
in
add
mov
add
inc
push
out
into
dec
ret
inc
loop
hlt
pop
or
aas
les
inc
loop
add
fcompl
pop
dec
popf
popa
movsb
inc
pop
mov
sahf
sub
jo
cli
mov
arpl
cwtl
mov
les
mov
outsb
jbe
add
sbb
mov
push
and
adc
sti
adcb
and
pushf
push
int3
popl
jecxz
xor
cwtl
mov
out
mov
xchg
movsb
adc
add
lods
in
add
xchg
and
or
xchg
sub
sub
and
jo
cmp
ljmp
cmpsl
lahf
xchg
cwtl
xchg
mov
mov
xlat
ror
sbb
pop
test
std
pop
pop
mov
cmc
push
jae
mov
dec
adc
and
sbb
mov
mov
outsb
jno
cmp
ja
xor
or
mov
jg
les
and
clc
das
or
int3
mov
sub
hlt
insb
sbb
inc
in
clc
imul
mov
push
pop
adc
int3
adc
test
mov
dec
mov
push
add
sbb
add
pushl
int3
push
test
test
xor
pop
in
aam
mov
fs
rcr
daa
mov
enter
js
pop
adc
roll
fdivl
dec
cmp
add
jmp
and
imul
mov
stos
pop
gs
repz
adc
addr16
adc
xchg
xor
movsb
repnz
cli
lcall
inc
and
add
push
lret
int3
call
and
sub
inc
and
dec
imul
add
inc
adc
pusha
mov
and
push
and
dec
fsubs
ffree
or
push
in
insl
and
sub
adc
divb
sbbb
bound
inc
xor
and
mov
and
xlat
mov
lock
xchg
decb
cld
dec
add
shlb
cmp
pop
fs
ljmp
sub
or
lret
lods
dec
daa
clc
xor
loopne
push
pop
adc
jg
adc
hlt
add
sbb
pop
mov
fsubrp
in
fcoml
sahf
xchg
aas
dec
xchg
pop
rorb
imul
sub
pop
sub
movsb
loope
xlat
or
add
lret
lock
dec
repnz
daa
cmp
clc
pop
int
jns
push
dec
sub
push
cs
pop
jl
and
xor
jns
mov
popf
add
gs
clc
add
xchg
mov
je
test
test
add
movsb
jo
out
or
arpl
adcl
jle
add
inc
mov
add
daa
dec
shlb
mov
adc
into
mov
cli
pop
je
fadd
sub
cmp
ja
push
cltd
adc
and
cmp
cmpsl
cmp
adc
xchg
aaa
mov
rorb
rcrb
adc
mov
adcl
adc
and
cmp
inc
filds
pop
mov
adc
mov
xchg
das
cmpb
movsb
add
mov
sub
xchg
pushf
popf
pushf
pusha
cwtl
pop
daa
xchg
xor
and
and
adc
aad
cld
orl
mov
mov
mov
mov
dec
or
jbe
rolb
loop
dec
push
test
andb
add
loope
cmp
out
lahf
out
adc
add
pop
loop
jl
add
shll
inc
dec
mov
scas
xor
or
pop
lods
cld
sbb
jge
ljmp
mov
jg
mov
dec
lods
roll
lock
mov
mov
push
cmp
sbb
xchg
pop
int
push
and
and
add
mov
pushf
out
das
int
pop
mov
and
dec
dec
test
and
xchg
mov
out
cmp
bound
xor
fsubrs
xor
mov
inc
pop
inc
pusha
subb
mov
push
push
push
sbb
nop
adc
lret
inc
rorl
adc
jp
xor
int3
adc
or
outsl
out
sbb
adc
test
jmp
in
ret
pop
popf
in
and
add
gs
inc
pop
mov
rol
stos
xorb
addb
mov
mov
mov
jns
jl
mov
xchg
bound
addb
pop
and
add
enter
add
outsb
and
ljmp
mov
loopne
add
adc
dec
test
lods
mov
in
and
mov
xor
jl
mov
add
stos
popf
enter
dec
push
add
xchg
rcl
and
adc
addr16
sub
mov
scas
sub
cmp
xor
enter
or
pop
sub
jge
mov
clc
or
or
incb
fnstcw
inc
pusha
sbb
adc
or
leave
sbb
stc
sbb
add
add
xchg
sbb
jae
sbb
xlat
fistpll
loopne
fcoml
push
adc
sbb
data16
add
clc
and
inc
mov
inc
xor
inc
popa
add
sbb
mov
cmpb
sub
cmpsl
icebp
inc
cmp
bound
xchg
mov
repz
dec
jle
xor
clc
or
or
or
insb
or
push
or
or
or
add
or
sbb
in
mov
xchg
or
and
mov
mov
adc
or
cmpb
out
subb
mov
dec
adc
or
shll
daa
cltd
sub
aam
and
sbb
scas
adc
add
sbb
adc
orb
rol
add
or
sbb
sub
or
lret
movsb
mov
rorl
push
or
orl
inc
dec
sbb
or
inc
mov
adc
pop
pushf
sub
pop
jge
and
cltd
sbb
xchg
mov
xor
les
xor
and
add
fdivs
dec
adcl
imul
inc
shll
sbb
sbb
lock
sub
mov
or
adc
push
pop
add
add
push
sbbb
mov
adc
les
nop
cmp
bound
dec
sub
mov
push
les
cwtl
or
pop
les
out
xchg
or
fmull
bound
adc
addb
inc
popa
aam
ja
bound
or
pop
scas
fldenv
leave
or
shlb
in
sbb
xor
call
cltd
mov
jl
or
xchg
test
mov
js
adc
lret
add
lods
mov
or
ret
inc
sbb
cmp
push
pop
pop
addb
push
les
or
cmpsb
push
adc
fisttpll
mov
push
repz
hlt
dec
pop
ja
add
insb
lret
int
sti
int3
adc
push
and
lcall
or
mov
outsb
xor
dec
popf
fldt
dec
shl
mov
int3
cmp
and
or
push
jae
adc
mov
mov
fisttps
pop
fwait
or
lret
ss
mov
rorl
pop
das
pusha
insb
andb
jp
jo
fldenv
add
push
in
int3
fwait
inc
inc
rcrb
insb
add
xchg
add
aaa
lret
es
add
aam
clc
call
mov
cmp
adc
jp
jle
cmp
mov
xor
stc
or
dec
or
pusha
addl
mov
lcall
sbb
push
rep
cmc
cmp
mov
lock
pop
adc
xchg
jg
adc
xchg
and
mov
xor
dec
clc
mov
or
push
hlt
cmp
scas
pop
inc
add
ljmp
aam
shrl
mov
push
sub
jo
push
and
cmp
sbb
clc
aaa
pusha
dec
js
rcrb
jp
push
ror
push
je
dec
xchg
popf
and
cmp
clc
mov
xor
xorb
push
cwtl
cmc
inc
and
arpl
jb
pop
mov
jbe
or
sub
xchg
sbb
push
sbb
adc
cli
mov
test
dec
mov
rcll
and
pop
rolb
and
mov
and
mov
aam
or
shll
imul
cmp
xchg
shrl
inc
mov
or
leave
push
ret
int3
inc
add
hlt
xchg
fwait
and
in
test
sbb
sahf
and
pushf
sbb
es
jbe
jno
sub
sbb
lock
fcompl
or
push
pop
xchg
and
stos
push
call
clc
mov
test
inc
lret
add
and
in
jns,pn
iret
and
pop
loopne
or
adc
pusha
cwtl
adc
pop
push
stos
xchg
cmp
iret
xorb
nop
cwtl
call
inc
sbb
xor
cld
xor
push
je
cwtl
pop
add
pushf
sub
jmp
xor
sbb
test
in
push
addb
add
and
and
outsb
xchg
push
dec
adc
lret
inc
test
inc
lret
or
lods
sbb
cld
xchg
ss
xchg
mov
data16
dec
push
lret
ficoml
sbb
xchg
inc
nop
inc
rclb
shlb
lret
and
mov
pop
and
fiadds
mov
lock
pop
pop
push
and
inc
dec
or
sub
cmpsb
xor
push
push
adc
nop
jno
lods
inc
clc
add
std
fnstsw
xchg
mov
je
add
or
xor
xchg
cmp
lea
es
mov
xchg
push
andb
jno
add
loopne
popa
cld
push
or
or
mov
mov
dec
mov
xchg
int
push
data16
sub
negb
mov
add
shlb
adc
push
push
adc
or
rcl
sub
fcmovnb
cmp
into
mov
mov
fcmovu
test
sbb
push
andb
push
dec
out
pushf
sub
add
xor
es
jo
add
mov
sub
xchg
pop
sbbl
stc
outsl
add
pop
push
rclb
mov
mov
loopne
sub
adc
pop
inc
xchg
add
cmp
scas
repnz
pop
mov
sahf
iret
push
enter
xorb
das
ljmp
lea
xchg
gs
lods
pop
pusha
adcb
and
sbb
xchg
cli
aaa
jns
or
clc
daa
mov
mov
leave
pop
test
test
xchg
push
adc
icebp
mov
subl
test
add
rclb
add
dec
add
inc
mov
sbb
sub
add
cmpsl
dec
adc
add
pop
adc
pushf
add
movsl
daa
or
cltd
push
push
gs
push
js
push
imul
sbb
sbb
and
inc
mov
mov
or
int3
subb
mov
test
and
xorb
dec
js
rcrb
movsb
or
dec
jb
fiadds
lcall
sbb
inc
orl
mov
js,pt
dec
xchg
mov
std
xor
fwait
push
push
pop
repnz
dec
push
subb
int3
movsb
mov
push
pop
mov
jp
jb
aam
inc
xchg
outsl
imul
jg
aad
xor
sub
mov
div
ljmp
outsb
sbb
add
sub
or
cwtl
clc
fiaddl
dec
call
or
add
push
xor
pop
cmpsl
invd
inc
fisubs
int3
adc
repz
mov
mov
jge
imul
xor
pop
fsubl
es
rolb
cli
pop
mov
mov
das
adc
cmp
icebp
jnp
js
push
add
and
stc
add
jns
je
and
cmp
imul
adc
fnstsw
iret
mov
mov
dec
adc
clc
push
xor
mov
ja
fwait
xchg
in
inc
lock
adc
das
jg
decb
test
jae,pn
call
and
xor
into
loop
pop
fs
add
pop
clc
imul
add
lock
fs
and
addb
lret
pusha
push
jle
and
aad
adc
ret
inc
pop
rcll
or
cld
call
and
es
cltd
int3
ret
push
mov
repz
sbb
push
mov
nop
pop
pusha
add
jb
adc
aaa
lods
nop
add
add
push
les
push
jns
int3
add
nop
and
mov
push
cmp
lret
add
mov
cmp
imul
nop
sub
movsb
push
roll
sub
xchg
dec
repnz
jmp
outsl
mov
test
mov
or
mov
fwait
dec
inc
in
loope
inc
cmc
or
sbb
xchg
or
in
xor
add
pop
orb
sub
add
cmp
cmp
loopne
xchg
nop
or
mov
rolb
fsubrs
inc
add
add
leavew
cs
add
icebp
ja
pop
mov
test
in
add
xchg
jmp
sub
xor
add
dec
fisubrl
clc
nop
js
and
jo
pusha
fwait
push
or
addr16
sti
dec
add
sbb
add
fs
jecxz
fmuls
fisubs
add
insb
cmp
les
sub
mov
push
xchg
pop
hlt
add
sub
xchg
jg
mov
test
cltd
filds
xor
add
insb
aaa
push
mov
lock
add
pop
xor
mov
sbb
pushf
das
add
adc
loopne
cmp
mov
xchg
xor
insb
add
or
mov
add
setno
push
pop
push
faddl
out
and
fsubp
test
xchg
sub
adc
bnd
mov
out
clc
leave
outsl
add
or
pop
pop
push
sub
mov
mov
push
add
addr16
inc
xor
add
cmp
imul
jl
push
imul
xchg
sub
push
shlb
cwtl
addr16
cli
inc
cmpsb
push
mov
inc
or
int3
xchg
sbb
inc
repz
adc
mov
add
mov
inc
mov
push
aad
add
mov
mov
push
mov
inc
jns
in
pop
xchg
dec
xchg
jl
addps
aad
or
sub
lahf
or
roll
enter
es
and
sahf
or
int3
and
and
arpl
clc
ds
shlb
xor
dec
xor
mov
xor
xchg
pop
roll
je
dec
enter
add
arpl
xchg
shlb
test
pop
add
orb
mov
pusha
in
clc
mov
outsb
adc
bound
sbb
add
or
fcoms
sbb
imul
cmp
test
outsb
loop
sahf
lods
add
int
xor
stos
push
int
clc
adc
mov
jle
dec
fwait
insl
or
mov
sbb
add
cmp
push
fadds
xlat
sub
push
dec
and
out
call
cmp
fs
and
push
jmp
fs
pop
insb
and
gs
add
lea
or
adc
aad
add
xor
cmp
jno
sbb
test
sub
pop
loopne
orl
cmpsl
or
into
outsl
cmp
pop
sub
mov
fildl
cmp
lret
xchg
clc
add
fstl
sub
sub
arpl
negl
push
xor
lock
lret
and
adc
xor
fisubl
je
popf
dec
mov
lock
push
or
rclb
push
mov
cmp
dec
mov
push
pusha
lods
rorb
popa
inc
aad
push
fsts
cs
mov
or
push
adc
or
jl
pop
sub
int3
xchg
push
hlt
inc
nop
mov
popf
dec
aam
mov
divb
and
scas
inc
xchg
pop
shll
ljmp
cmc
jecxz
shrb
call
dec
sbb
repz
push
stc
leave
dec
jle
or
xchg
add
add
addb
pusha
cli
adc
imul
ja
adc
add
cmp
sti
adc
push
aad
inc
sub
sub
fsubrl
pop
pop
add
repz
push
jle
add
sub
inc
mov
loop
adc
push
pop
xorb
clc
aaa
cwtl
mov
push
ljmp
inc
shll
jb
lahf
adc
call
dec
inc
test
dec
push
xchg
int
inc
jle
dec
push
adc
or
dec
xor
add
in
mov
inc
pusha
sub
mov
cmp
enter
loop
xor
into
cld
sub
mov
imul
add
push
jmp
add
ljmp
out
lock
jns
sub
sbb
dec
je
pop
push
fdivl
andb
je
pop
gs
jg
mov
enter
aad
hlt
and
or
jg
mov
push
mov
push
mov
inc
call
popa
clc
mov
test
pop
mov
cmp
cmp
dec
mov
add
and
adcb
xchg
loop
push
jbe
adc
fildll
push
jmp
into
mulb
pusha
int3
add
sbb
lds
and
xchg
add
pusha
and
add
inc
test
mov
ds
out
xor
add
nop
jge
les
jae
and
mov
cli
xor
add
pop
in
mov
jp
cmp
cmp
mov
jl
in
add
jmp
jmp
add
jge
sub
outsb
push
push
jns
or
inc
lret
dec
or
dec
cs
movb
movsb
fucomp
out
pusha
cwtl
sbb
aad
push
fs
cld
push
shrl
cwtl
or
xchg
xchg
add
cwtl
add
xor
add
push
iret
or
fistpll
dec
andb
adc
xor
and
sub
ret
push
hlt
inc
ja
or
and
push
xor
pminsw
mov
lcall
enter
add
addl
and
dec
add
leave
out
mov
rol
clc
push
ja
cwtl
in
loopne
mov
add
inc
dec
sbb
add
cli
ficoms
test
aam
js
fcoms
mov
loopne
cld
lcall
push
clc
cs
or
movsb
test
add
dec
push
mov
pop
or
mov
inc
mov
adc
add
lds
xchg
repnz
xchg
add
cmp
stc
push
cmp
jmp
dec
test
and
jo
cmp
out
jne
add
subl
dec
rcrl
out
ds
or
repz
mov
fdivl
inc
fstpt
dec
xchg
pop
mov
lods
or
hlt
outsb
lcall
test
pop
sarl
addl
xchg
pop
cli
testl
mov
and
dec
and
cmp
aad
clc
push
mov
test
inc
aam
loopne
mov
xor
shll
aaa
mov
flds
pop
add
fsubl
or
mov
scas
nop
sbb
mov
test
pop
fs
mov
jecxz
into
pusha
dec
adc
mov
enter
xchg
pushf
cli
fcmovne
sub
push
xchg
mov
jb
xor
js
cs
mov
xor
lock
add
in
xchg
push
inc
sub
push
push
sarb
lahf
sbbb
and
xor
int3
dec
jecxz
and
mov
push
adc
push
out
test
sbb
in
clc
out
orb
add
adc
andb
adc
mov
fldl
sub
push
pop
adc
out
or
into
stc
cmp
sbb
in
nop
insb
and
shlb
lock
lock
jns
movsb
test
lcall
pop
fists
jbe
push
fcmovnu
outsl
and
inc
dec
cmc
inc
adc
ret
sbb
lods
jno
repnz
mov
xchg
dec
add
xchg
imul
and
enter
push
sub
inc
sub
add
aad
add
nop
add
mov
sbb
adc
les
fldt
pushf
xor
pushf
push
jbe
lcall
mov
in
ja
adc
pop
jo
mov
lds
cmp
ja
cmpsw
aam
inc
xchg
lods
stos
nop
inc
mov
lods
cwtl
mov
daa
ds
xor
loopne
cmp
add
mov
rolb
lods
adc
dec
inc
test
and
je
add
sbb
xchg
and
scas
mov
or
add
js
sahf
sub
pop
add
in
dec
xor
inc
add
js
pop
xor
out
lar
pushf
imul
mov
pusha
stos
nop
or
add
pushf
adc
shll
dec
call
sub
pop
add
std
fsubrs
dec
and
push
push
mov
sub
int
sarb
call
pop
sahf
pusha
add
inc
and
push
cmp
jle
rorb
xchg
add
outsb
add
mulb
outsl
pop
add
push
inc
cltd
clc
iret
lret
xor
mov
sub
fbld
popa
clc
es
dec
loopne
xor
adc
jmp
int3
mov
jl
push
repnz
mov
outsb
push
add
call
sbb
iret
scas
xor
ja
scas
pusha
dec
lods
lret
imul
hlt
and
mov
xor
lret
pop
inc
shl
xor
addb
nop
in
dec
mov
jl
test
cs
pushf
add
mov
and
mov
pop
les
aad
in
arpl
pop
lea
in
mov
mov
add
in
push
mov
cld
shl
pusha
lcall
loopne
pop
mov
out
mov
lods
icebp
inc
push
add
push
pusha
xlat
xchg
mov
pop
and
push
inc
and
add
sti
and
lahf
pop
inc
in
iretw
ja
fs
bound
xor
clc
mulb
inc
pop
or
bound
fs
inc
addb
xchg
push
pop
xor
sbb
add
call
cmp
fnsetpm(287
icebp
inc
shrb
xor
inc
fldl2e
adc
jno
inc
les
and
add
arpl
pop
cmp
scas
pop
rclb
pusha
andb
jle
in
and
es
push
subl
outsl
sti
lods
stc
pusha
or
lea
loope
push
mov
js
add
pop
xchg
push
fiadds
cmp
add
shlb
lods
testb
push
jno
leave
add
pop
ret
mov
xchg
jecxz
push
adc
push
es
push
sub
pusha
dec
sarb
dec
or
add
and
push
push
popf
and
push
mov
cmp
outsb
out
fwait
mov
xchg
add
dec
inc
sbb
out
in
sub
adcl
pop
test
dec
loopne
pop
add
or
clc
imul
dec
push
xchg
faddl
mov
sbb
imul
dec
cmpl
or
clc
pop
push
mov
dec
aas
lret
cld
iret
mov
pop
in
add
dec
cmp
fsubs
cmpsb
jmp
ja
mov
test
loope
or
cmc
jbe
mov
out
dec
or
push
enter
in
push
mov
dec
mov
add
shlb
les
inc
movsl
sub
aam
mov
sbb
xchg
addb
push
and
mov
xchg
clc
mov
fnstenv
pop
add
sub
add
test
arpl
push
and
or
subl
rcll
test
push
inc
cmp
mov
push
js
loope
lret
jne
and
into
vmovups
jl
pusha
mov
mov
imul
popf
test
fdivrl
inc
sbbb
add
arpl
push
cltd
test
rolb
loope
psubb
pop
mov
add
xchg
push
shr
loopne
xor
out
jmp
ss
mov
push
pushf
pusha
or
lods
dec
sbb
and
push
cld
or
das
jno
imul
push
popa
fsubs
mov
mov
sbb
push
out
jg
adc
lret
dec
push
xor
cmp
lcall
leave
sbb
mov
mov
icebp
xchg
adc
inc
xchg
nop
clc
shll
inc
aas
popf
dec
mov
push
dec
push
mov
dec
shll
add
xchg
adcl
push
aas
movsl
mov
dec
lea
adc
nop
mov
add
lea
or
dec
dec
imul
shll
pop
add
dec
lods
cs
lods
or
add
pop
sub
fildll
rcll
jo
jno
mov
movsb
add
push
jb
repz
icebp
push
idivb
jmp
rcr
add
add
dec
adc
add
sub
rorb
icebp
pop
add
and
sub
call
arpl
jo
cmpb
lods
call
addr16
fiaddl
das
add
sub
in
mov
adc
xor
and
mov
lret
gs
xchg
test
rorb
fsubs
aam
adc
mov
sub
fistpll
movsl
lods
inc
clc
pop
roll
mov
sbb
push
or
xor
fwait
cli
cmp
adc
mov
dec
jo
cmpb
or
loopne
inc
mov
dec
inc
into
add
sub
push
ss
test
cld
add
js
gs
adc
cmp
dec
popf
stc
mov
dec
jp,pn
rclb
outsl
jno
dec
es
rorl
inc
push
jne
cli
xor
xchg
sub
mov
fs
adc
shlb
mov
sar
sbb
pushf
into
cs
shl
inc
and
pop
dec
dec
lea
sbb
dec
dec
mulb
push
je
push
cs
inc
sub
lods
test
pusha
pusha
cltd
clc
xor
cmp
inc
sbb
ret
add
pusha
mov
ja
mov
jbe
sbb
mov
lret
push
mov
das
mov
hlt
dec
mulb
jo
repz
xchg
scas
cwtl
mov
lret
push
out
or
icebp
add
sarl
shll
pop
cwtl
lret
add
repnz
xchg
icebp
fs
movb
lcall
cwtl
addr16
icebp
add
cmpsb
push
popf
sbb
loop
aaa
in
bound
int
hlt
add
daa
das
je
imul
ljmp
lcall
adc
clc
shll
xchg
scas
or
adc
mov
sbb
cmp
test
adc
push
or
cltd
into
in
out
mov
cmp
mov
adc
push
arpl
push
mov
pusha
jo
and
add
mulb
adc
cld
out
out
xchg
add
lahf
push
popl
fdivl
inc
adc
xchg
xor
inc
and
dec
mov
out
pop
pusha
fdivp
es
add
outsl
movsl
jo
mov
jne
leave
sbb
popf
pop
xchg
pop
or
push
jecxz
sbb
call
jmp
mov
inc
sub
pop
add
in
xor
test
ret
or
adc
fs
in
pop
icebp
sub
add
xorb
mov
mov
subb
outsb
push
lahf
test
sbb
leave
xlat
sbb
adc
add
sbb
nop
mov
xor
sub
mov
and
loopne
inc
imulb
inc
pop
rolb
jecxz
xchg
pushf
icebp
shrb
in
push
call
dec
mov
inc
jmp
and
xchg
cmp
xchg
ret
pop
mov
xchg
cmp
sbb
mov
push
adc
jg
push
inc
insl
xor
mov
pop
push
sbb
aaa
insb
sub
nop
pusha
xor
lods
in
dec
cwtl
lods
inc
aam
sub
fidivs
out
xchg
or
mov
jge
mov
mov
sbbb
pop
dec
js
or
sbb
sbb
xchg
push
mov
mov
and
or
es
dec
cwtl
push
pop
mov
loopne
xchg
mov
or
aaa
pop
scas
push
fldz
cld
push
sub
cwtl
push
jo
jle
inc
insl
mov
add
cs
jae
scas
mov
pop
cmp
fidivrs
push
mov
out
sbb
dec
or
aaa
add
sti
jge
inc
mov
xor
out
cwtl
push
lahf
icebp
mov
addr16
and
jecxz
add
out
popw
push
mov
dec
std
add
insl
aaa
clc
out
add
icebp
out
inc
adc
pop
ret
push
mov
fisubl
add
dec
xchg
xor
enter
rcll
add
lahf
add
lea
sti
or
leave
add
jmp
xchg
push
movsb
push
rorl
add
adc
or
ret
fcomps
xor
push
inc
push
push
push
push
cmp
mov
add
sbb
sbb
sub
cltd
out
adcl
push
push
loop
gs
fdivl
je
cwtl
call
dec
test
add
sub
lock
andb
aad
pop
mov
in
push
pusha
hlt
nop
or
push
rorl
and
leave
imul
mov
pop
add
cmp
cmp
push
fistpl
daa
pop
lcall
inc
and
rolb
jns
iret
xor
movsb
jno
ljmp
insb
or
sahf
xor
cmp
add
and
ljmp
pop
sti
add
arpl
mov
ljmp
and
adc
orl
shll
cld
jo
pop
inc
les
rcr
pop
ljmp
test
push
mov
xor
adc
clc
fadd
lock
ljmp
fsubs
adc
movl
and
lret
inc
push
and
or
repnz
frstor
ljmp
add
inc
nop
ja
call
mov
pop
popa
fisubs
lds
push
xorl
pop
pop
dec
iret
jmp
mov
in
adcb
sub
or
shrb
shlb
sbb
ljmp
pop
add
push
push
pop
ret
add
mov
ljmp
lods
popf
or
mov
in
add
push
aad
add
sub
and
andb
movsb
sbb
dec
add
ficomps
push
fs
add
xchg
push
fisttpll
adcb
mov
in
jmp
ljmp
xor
mov
push
fwait
adcb
aas
xor
push
inc
sbb
jmp
mov
popf
ljmp
sbb
inc
pop
xchg
mov
daa
aad
push
fdivl
sub
push
xorb
clc
shll
test
leave
cs
inc
xor
mov
sub
mov
xor
add
jno,pn
cmp
inc
andb
push
mov
mov
cmp
pop
push
loop
mov
test
lcall
sbbb
movl
out
push
mov
xor
pop
and
add
movsb
mov
clc
sub
pop
enter
sub
sub
shll
xor
leave
jp
aad
jns
mov
xor
test
add
ljmp
aas
mov
test
adc
mov
and
xor
jno
inc
xchg
imul
sarb
dec
and
test
mov
sbb
jle
cmpb
sub
xchg
inc
mov
bound
jnp
add
or
or
pop
ljmp
dec
ss
jae
pop
xor
xor
push
mov
shl
imul
ficomps
loope
mov
add
pop
orb
dec
ja
mov
add
test
mov
cmp
add
rorl
xchg
dec
add
pop
mov
adc
push
xor
dec
sub
mov
imul
out
or
push
push
imul
shl
ljmp
add
dec
in
ret
imul
out
int3
out
cltd
mov
fdivl
jnp
roll
ljmp
loope
pop
jne
rorb
pop
jle
sbb
ret
int3
out
dec
inc
repnz
ds
add
arpl
ljmp
pop
mov
inc
mov
cmp
in
pusha
hlt
mov
add
or
clc
sub
in
add
cmpsb
jmp
inc
push
and
repz
push
lahf
jnp
lcall
jmp
add
mov
mov
jmp
mov
push
addl
out
or
push
hlt
xchg
arpl
pop
mov
repz
xor
xchg
or
mov
push
inc
sub
jnp
addps
out
push
xchg
pop
jg
add
xor
andl
shlb
xor
rolb
stos
fiaddl
jmp
dec
pop
add
mov
pop
jb
out
cmp
add
aad
add
pop
ret
lock
adc
pusha
jmp
stos
inc
adc
pop
pushl
jge
les
dec
testl
in
out
cmp
dec
ja
sub
orb
pop
xor
lret
lahf
push
push
jmp
dec
mov
push
xor
adcl
mov
inc
sub
cmp
sbb
mov
ret
sbb
pop
dec
testl
add
fstpl
push
push
push
pop
aaa
add
mov
iret
push
mov
add
dec
xchg
test
ret
push
in
inc
add
fiadds
ja
inc
aaa
js
mov
dec
xor
lret
subl
add
adc
mov
xor
popf
addb
rorl
pop
push
push
pop
mov
jmp
not
nop
or
and
mov
pause
fs
mov
and
mov
xor
fbstp
or
xchg
pop
sub
sbb
or
jmp
mov
pushf
inc
hlt
and
sub
mov
push
in
hlt
add
cmc
push
jmp
mov
shl
pop
test
jmp
mov
imul
mov
xor
es
js
andb
dec
out
mov
push
mov
rcll
mov
icebp
push
pop
or
jmp
add
jecxz
hlt
in
stos
std
mov
mov
cwtl
sbb
or
xlat
mov
mov
dec
popf
movsb
inc
popa
push
mov
and
jg
jge
xor
dec
sbb
mov
pusha
lods
and
push
sub
pusha
cmp
push
fstl
sub
inc
or
es
jns
out
add
pushf
outsl
and
inc
jmp
int3
popl
mov
jp
add
sub
sbb
mov
bound
mov
sbb
in
out
sub
pusha
test
dec
sub
shr
inc
fdivs
xchg
xor
int
add
fwait
pop
add
mov
and
rorl
push
pop
add
push
mov
and
pop
pop
pushf
inc
push
and
xor
sar
and
dec
inc
fstps
push
pop
push
pop
xor
jb
jg
sub
aam
mov
push
xchg
jmp
fs
shl
leave
bound
dec
lods
cmp
faddl
into
lea
inc
flds
mov
mov
push
xor
sub
sbb
ret
aad
das
push
inc
loope
xor
inc
std
in
push
dec
dec
mov
jbe
xor
pop
sub
out
inc
push
mov
mov
push
jmp
mov
imul
fidivrs
aaa
sub
xorl
and
into
sbb
xor
loopne
xchg
ret
pusha
sub
jl
jbe
add
or
sub
or
jmp
cmp
jge
lahf
adcb
or
pop
pop
add
mov
mov
add
fldz
xlat
pusha
jbe
mov
push
dec
je
mov
pop
push
sbb
adc
int3
cmp
push
pop
gs
repnz
lock
pop
sbb
add
ljmp
push
lock
xorl
sti
cwtl
adc
js
pushf
xchg
ficoml
jno
add
fildl
push
cwtl
pop
or
adc
add
ffreep
shlb
push
mov
cwtl
stos
cmp
push
lods
sbb
jmp
jmp
mov
movzbl
incl
andl
xor
lret
cmp
inc
inc
xor
test
xchg
stos
cmp
mov
adc
sub
pop
inc
push
pop
and
xor
lods
call
inc
and
in
adc
adc
xchg
and
pop
adcb
push
mov
adc
jl
adc
aam
dec
out
subl
shll
subb
cli
push
xor
mov
xchg
pop
data16
mov
add
add
push
or
not
xor
mov
push
outsb
xor
adc
popa
out
push
xor
and
jg
cmp
in
pop
cli
je
fiadds
adc
sbb
rcrl
jmp
adc
add
lea
or
insb
cltd
pushf
mov
dec
cmc
negb
xor
inc
js
mov
cmp
push
in
data16
sti
sub
inc
mov
outsl
dec
pop
mov
in
pop
xchg
adc
popa
cmpsl
and
in
sub
popa
cmpsl
data16
test
iret
pop
mov
es
add
shr
add
adc
or
push
jbe
sbb
add
pop
std
shrl
inc
test
push
jmp
in
sbb
push
in
jl
or
xchg
cli
pop
jmp
pop
pop
or
or
jmp
jecxz
lret
ljmp
push
lahf
xor
sbb
loop
push
push
sub
pop
rcl
add
fbld
pop
or
push
or
nop
pop
addr16
lea
in
rcll
inc
mov
add
adc
jae
cmpl
and
pop
adc
add
cmp
paddsb
jb
push
test
repnz
fimull
sarb
sub
ljmp
pusha
adc
adc
loopne
cmp
push
fwait
jp
xor
push
jmp
add
fstps
pusha
repnz
movsl
mov
fdivrs
dec
int3
add
clc
pop
std
sub
push
sbb
je
cld
xchg
mov
add
jns
mov
sub
fadds
inc
repnz
in
mov
add
jmp
pop
ret
push
pop
cwtl
dec
and
cmpb
test
loopne
in
cmpb
push
or
xchg
add
pop
push
mov
int3
or
jmp
mov
or
push
cmc
std
lock
sub
cmp
test
mov
jne
adc
ds
add
scas
mov
sbb
lret
mov
xchg
inc
cmp
add
neg
and
sub
push
gs
lods
popa
sbb
pusha
icebp
jbe
jne
je
inc
aas
pop
jmp
fisubrl
adc
jmp
aas
pusha
fwait
or
pop
sbb
sbb
je
adc
arpl
repnz
or
pushl
add
lods
nop
xor
push
sahf
out
js
cmp
test
xor
mov
nop
nop
jg
add
mov
inc
mov
sub
lds
xor
dec
add
test
xchg
mov
add
negl
int
rcll
sbb
mov
lods
or
sbb
repnz
jno
jae
pusha
cmc
jle
cmpsb
push
fs
push
push
inc
adc
inc
daa
lds
push
neg
add
xor
and
xor
adc
and
push
inc
aad
jo
sahf
xor
xor
pop
xor
outsb
lods
leave
add
xchg
das
pop
hlt
dec
in
push
pop
sbbb
adc
xchg
es
pop
and
pop
jmp
imul
xchg
push
subl
data16
ret
aam
add
std
adc
negb
pop
xor
loope
push
and
add
add
std
jno
jg
stos
push
aaa
add
andl
pop
mov
dec
addb
cmp
in
cmpsb
sti
ds
push
pop
test
lcall
stc
outsl
in
add
xor
pop
mov
dec
xchg
in
ljmp
or
popa
add
adc
or
mov
push
mov
push
fdivr
and
sbb
inc
jne
sahf
mov
leave
push
and
stc
add
rorb
ret
pop
push
xlat
ja
mov
jmp
adcb
in
dec
mov
ds
in
loope
shlb
xor
jb
in
pop
andb
out
pop
adc
enter
xchg
insl
rorl
sbb
push
push
nop
shlb
daa
mov
lret
adc
inc
dec
shl
rolb
add
stc
dec
imul
pop
sahf
pop
push
mov
ljmp
push
ja
add
fistps
stc
jb
cld
jmp
pop
xor
addr16
inc
in
ror
pop
shl
add
mov
iret
push
cmp
bound
jecxz
inc
cmp
loopne
or
negl
pop
pop
loope
movsb
add
popa
pop
add
add
lahf
test
inc
lret
or
pop
fnstcw
sub
jns
rcll
or
inc
out
mov
rol
xor
lcall
popa
or
jbe
rcrl
mov
sub
pop
sub
adc
add
sbb
cmp
xchg
push
ret
nop
or
push
push
ja
shlb
push
jmp
nop
movb
push
pusha
add
mov
cmp
or
leave
aam
add
popa
push
pop
hlt
jmp
cmp
pop
xlat
jg
push
add
adc
pop
and
add
int
pusha
sbb
lock
pop
nop
xor
sub
jmp
test
and
popa
push
add
mov
stc
pop
push
lds
in
and
xchg
test
dec
or
xlat
and
les
iret
andb
popa
ljmp
es
mov
call
shrl
cmp
js
jo
sub
or
xchg
sub
mov
jp
add
or
or
sbb
push
cli
sub
sbb
push
sbb
pop
shrl
scas
sub
icebp
sbbb
sbb
cmp
add
pop
sti
clc
dec
dec
xor
shl
xchg
sbb
pop
xchg
fidivrl
popa
adc
inc
sbb
mov
pop
or
add
icebp
xor
push
cli
repz
in
add
sub
pop
pop
pop
push
in
dec
cmp
xor
dec
rolb
mov
cmp
push
pop
pop
jmp
add
mov
cs
jecxz
addr16
in
loope
clc
test
cltd
pushf
scas
cwtl
stc
push
mov
cmp
pop
test
roll
and
es
pop
sub
push
add
jnp
imul
mov
xor
inc
or
jecxz
jnp
fstpt
pop
mov
call
adc
testl
stc
ss
scas
hlt
add
sub
xor
dec
rorl
mov
fdivrs
dec
jl
push
jmp
ljmp
jne
lea
jmp
sahf
jno
mov
jmp
inc
outsb
pop
int
mov
neg
add
cli
cmp
repnz
xchg
dec
add
in
movsl
mov
jecxz
imul
or
mov
dec
xchg
sbb
inc
mov
mov
aas
outsb
sub
addr16
mov
jo
es
movb
fstps
or
adc
dec
dec
mov
aad
enter
mov
push
sahf
in
dec
sbb
adc
imul
or
adc
add
jp
jecxz
pop
out
dec
pop
ret
cs
mov
add
out
cmpsb
cs
jle
mov
pop
shrb
movsb
dec
add
js
das
push
addr16
cmpsb
dec
jno
jb
xor
rcrb
mov
dec
inc
and
stos
mov
mov
add
ret
push
mov
push
push
pop
sub
add
fld
sub
test
mov
adc
pop
pop
mov
ja
int
mov
adc
mov
outsl
data16
add
cmp
les
xchg
not
shl
in
push
leave
jmp
inc
add
in
lahf
jns
insl
sub
sbb
pop
pop
sbb
mov
shrb
dec
es
test
mov
adc
sti
int
push
mov
cmp
pop
push
popa
outsb
jno
icebp
push
xor
dec
mov
imul
enter
dec
push
mov
or
adc
loopne
adc
gs
rcr
neg
div
or
sub
insb
arpl
cwtl
jecxz
add
xchg
xchg
shrl
mov
inc
jo
add
push
push
jmp
sti
cmp
mov
inc
lock
mov
movsb
adcl
pop
lds
jo
lds
jne
shrb
add
mov
aaa
cmp
push
push
mov
sbb
shl
push
pop
xor
scas
iret
es
adc
and
loop
pop
inc
shll
jno
imul
jo
scas
push
ds
pop
les
out
jl
dec
or
cmp
test
and
ret
cmp
push
or
mov
nop
adc
xor
ss
dec
cmp
in
mov
adc
or
push
xor
and
inc
mov
mov
imul
mov
or
adc
sbb
lea
mov
fisubrl
addb
shr
add
and
pop
dec
outsb
ret
in
frstor
pop
push
dec
or
adc
push
pop
cwtl
movsl
add
cmpl
push
mov
arpl
jns
or
mov
sub
dec
in
outsb
adc
cwtl
mov
xor
sub
fiaddl
out
mov
fists
adc
adc
jmp
push
add
pusha
and
jmp
sub
mov
repnz
loopne
mov
ret
lcall
scas
push
fisttpll
or
sbbl
dec
pop
and
jmp
imul
fistpll
lcall
mov
mov
cs
pop
push
mov
adc
and
inc
ret
scas
pop
sti
pop
add
push
cwtl
cmp
mov
je
push
or
mov
pop
mov
in
aad
scas
xchg
sub
mov
or
outsb
inc
mov
icebp
insl
arpl
mov
fiadds
iret
mov
jmp
lret
shl
jb
cmpb
mov
or
inc
and
mov
cmp
popf
add
add
test
sbb
xchg
inc
xchg
add
dec
pop
sbb
push
pop
sbb
push
sbb
loopne
pop
mov
mov
pop
and
call
ret
mov
aaa
movsl
adc
mov
es
xor
fsubs
mov
dec
mov
pop
push
fsubrs
lock
repnz
add
loopne
cmp
in
push
sub
andb
add
jl
jp
xchg
mov
aam
and
push
cmpsb
pop
pop
push
mov
push
pop
sbb
fucomp
mov
sbb
bound
ds
mov
nop
jmp
addr16
jmp
shl
jne
xchg
orb
adc
insl
adc
xchg
pop
rclb
or
aam
les
and
rclb
push
and
test
pop
test
or
imul
or
ljmp
push
xchg
inc
jle
clc
std
nop
out
and
pop
dec
mov
jbe
mov
sarb
add
and
movsb
sub
ror
rcrl
es
sub
loopne
or
add
lods
add
pop
push
cmp
cltd
push
addl
jns
xchg
cwtl
dec
add
lahf
loope
das
sub
repnz
xor
dec
movsl
or
push
out
or
push
push
std
jne
mov
adc
xchg
inc
xchg
jmp
cmp
jecxz
mul
sbb
int3
jmp
pop
push
mov
inc
daa
int
mov
arpl
repz
mov
pop
not
jp
loope,pt
test
cmpsb
xor
fadd
or
add
call
repz
testb
and
out
add
add
je
push
popa
aaa
xchg
sub
push
jmp
neg
pusha
pusha
push
push
pop
jecxz
das
cmp
fsub
cld
xor
out
jmp
mov
ljmp
out
loop
and
adc
lret
mov
xchg
add
sub
ds
dec
cmpsl
fmuls
popf
ds
dec
add
sub
pusha
rorb
icebp
dec
add
test
xor
sbb
mov
add
inc
adcb
loop
push
or
fcoms
dec
xchg
and
jmp
jnp
arpl
push
dec
sub
lea
cmp
and
insl
std
adc
aaa
negl
adc
pop
and
push
jle
sub
pop
test
adc
lret
leavew
int
mov
sub
adc
add
dec
xor
mov
cmpl
and
mov
xor
sbb
jge
sbb
dec
ljmp
shlb
jle
dec
push
sub
pushf
mov
inc
shl
jno
loopne
lahf
mov
xchg
pop
lock
xchg
je
notb
roll
jge
jb
addb
jne
push
and
push
add
hlt
ret
mov
pusha
stos
jmp
mov
cld
add
pop
xor
lds
cmc
cmp
add
mov
in
or
mov
mov
adc
add
sub
or
and
push
outsl
mov
adc
and
and
add
out
fcoml
dec
xor
cmp
dec
sbb
aas
arpl
xchg
cltd
shrl
pop
cmp
pop
je
inc
loop,pt
inc
pop
xor
push
cmp
shll
inc
sahf
jne
lock
add
pop
es
repz
pop
or
iret
push
stos
pop
pushf
mov
jo
lret
mov
push
fldl
mov
sub
add
mov
ds
adc
pop
dec
fldl
imul
mov
mov
pop
movsb
loope
scas
adc
mov
adc
bound
out
data16
push
ljmp
sub
mov
add
push
mov
jmp
test
xor
mov
push
pop
add
push
dec
and
xchg
xchg
fs
jo
or
mov
or
ret
or
icebp
jmp
rcrb
shr
mov
xor
test
cli
sti
pushf
jmp
fs
pop
inc
cmp
mov
add
stc
push
scas
sbb
inc
lods
add
das
add
cmp
test
xchg
xchg
sub
dec
ret
lret
pop
adc
cs
in
pop
not
enter
hlt
test
ret
pop
lcall
sub
inc
xchg
fmull
add
mov
lret
or
scas
movsb
loopne
fiaddl
js
cmc
mov
and
or
push
in
or
push
inc
lret
addb
ds
mov
jp
orl
jmp
sub
mov
push
dec
mov
push
xor
ret
sbb
mov
inc
add
mov
fisubrl
rcrl
or
es
pop
add
sti
or
or
push
pop
ds
imul
std
jno
jno
or
adc
std
jmp
add
dec
pop
shl
inc
xchg
pusha
adc
scas
push
rcrb
std
cs
push
dec
mov
fwait
or
fiadds
sbb
cmp
addr16
push
stc
pop
lds
add
out
pop
jmp
andb
aas
ds
adc
jp
decl
push
push
mov
and
push
pop
je
popa
test
jb
sbb
jns
dec
push
test
push
repnz
dec
int3
and
adc
xacquire
push
ret
fcoml
inc
jae
mov
gs
push
orl
push
outsl
jg
movsb
add
scas
sbb
pop
pop
sbb
pop
xor
or
add
test
dec
push
add
sub
clc
orl
into
invd
jbe
push
mov
or
push
or
bound
aas
call
cld
and
out
sub
and
int
xchg
in
push
int3
out
imul
add
jo
push
inc
loopne
or
in
hlt
xor
mov
repz
xorb
cltd
push
add
dec
add
cwtl
inc
or
inc
dec
jmp
int3
orb
sti
pop
shrl
jmp
cmp
hlt
push
xor
xchg
pop
pusha
mov
jl
fildl
movsb
fstpl
les
sub
shr
out
bound
lret
push
pop
fsubr
xchg
call
das
or
call
es
add
cs
sub
ret
dec
jns
add
pop
add
ja
jno
dec
lahf
les
push
jmp
jmp
jno
das
mov
cmp
sub
add
es
sti
add
cmp
jno
push
outsl
pop
pop
sub
inc
test
cwtl
jne
leave
dec
push
mov
mov
xor
gs
mov
ret
sahf
bound
aas
or
rcll
push
jbe
add
and
lret
sub
je
pop
cmp
aaa
add
orl
mov
inc
and
cwtl
or
or
addr16
rcrb
adc
or
push
aaa
das
mov
orl
movsb
sarb
adc
mov
inc
adc
push
jecxz
adc
push
xchg
push
sub
loop
pusha
lahf
jbe
loopne
and
jno
xchg
mov
mov
test
and
push
pusha
and
xchg
inc
mov
push
stos
loop
test
jnp
add
leave
cmp
and
pop
in
ret
shrb
lcall
push
mov
jg
dec
pop
cmp
add
lock
sahf
imul
minps
adc
inc
addr16
xor
stc
cvtps2pi
pop
pop
outsl
call
or
in
cmp
add
sbb
xor
dec
xchg
add
loope
mov
insb
in
pop
jb
push
leave
pop
inc
inc
mov
lds
cmp
rcrl
cmp
out
sub
jb
adcb
xor
jae
xchg
inc
pop
dec
dec
fstps
push
sbb
dec
push
jp
lret
ja
sub
mov
xor
pop
sub
ljmp
xor
sbb
mov
sbbb
dec
js
push
xchg
scas
loopne
call
test
int
mov
push
stc
clc
push
mov
adc
stc
and
das
fldlg2
lods
mov
mov
popf
xor
loop
fiadds
lods
push
or
push
inc
ja
jo
cld
mov
lret
rcr
xlat
or
lods
sub
data16
test
jmp
pop
shr
add
movsb
sub
mov
pop
out
and
in
push
mov
xor
not
inc
fsubr
xchg
sub
rorl
pop
icebp
icebp
sub
repnz
jmp
pop
sbb
push
bound
push
stos
or
dec
jo
jne
test
xlat
ds
adc
fisttps
pop
and
sub
lret
jb
mov
jmp
xchg
out
xchg
sbb
dec
movsl
loopne
neg
mov
or
sub
loope
fnstsw
push
xor
sbb
outsb
dec
and
push
add
or
pop
lock
sahf
inc
xchg
push
fsts
popl
loopne
mov
or
sub
xchg
orb
pop
pop
and
adcb
dec
mov
jmp
add
cmp
loopne
out
cmp
or
cmp
or
sub
lock
jmp
inc
mov
xchg
jl
insb
cs
sub
out
xchg
pop
inc
or
repnz
pop
sub
cmp
scas
adc
lret
test
dec
jg
push
dec
sbb
ljmp
roll
adcb
shl
sub
enter
pop
movb
rcrl
mov
sub
sbb
int
inc
test
divl
push
sbb
sbb
stos
pushf
sub
mov
cmp
adc
mov
pusha
dec
or
mov
mov
imul
movl
sahf
push
adc
leave
cmp
pop
add
lock
and
pop
out
pop
add
pop
call
push
pop
ret
cmp
xor
dec
or
adc
xchg
push
inc
push
jle
adc
out
divb
pop
push
rcrb
pop
stc
xchg
movsb
dec
push
add
xor
stc
icebp
lcall
or
fadds
push
mov
fmuls
and
int3
in
int
add
pop
insb
and
jg
or
pop
and
cmp
std
push
das
mov
and
cli
add
jmp
lret
add
popa
decl
add
sti
mov
lds
pop
dec
lcall
push
xchg
jg
jb,pt
sub
mov
mov
and
in
push
mov
in
push
dec
mov
jmp
ss
dec
sub
shrb
mov
and
push
fdivs
push
inc
xor
icebp
adc
insl
or
aad
es
xchg
pop
sub
dec
cmp
xor
lret
fisttpl
or
outsb
sub
mov
fwait
cltd
fcmovu
and
or
mov
gs
and
and
adc
mov
rcrl
inc
or
addr16
aas
push
jmp
lock
adc
mov
and
fstpl
out
push
ss
jmp
ret
dec
shr
repnz
push
testb
mov
shlb
push
test
sbb
repnz
test
xlat
xor
dec
sbb
addr16
nop
andb
fs
mov
and
imul
mulb
inc
jno
push
jae
add
or
pop
lret
adc
sub
jmp
add
popa
or
add
and
jo
adc
pop
adc
pop
add
andb
add
mov
mov
dec
movsb
stc
adcl
hlt
or
adc
add
inc
xchg
cwtl
popa
jl
lret
adc
add
inc
dec
call
lods
gs
and
mov
push
scas
test
cmp
jl
and
jmp
dec
dec
lcall
stos
int
rcll
and
mov
lret
add
je
sbb
dec
add
mov
je
push
push
lret
and
pop
fiadds
gs
sbb
call
sbb
or
not
push
jmp
inc
out
mov
cmp
mov
loopne
push
or
rcll
add
loope
out
in
loopne
jns
mov
cmp
mov
xor
jmp
mov
xor
or
sar
imul
xchg
mov
ss
push
inc
pop
test
fildll
sti
add
pop
shrb
sub
nop
pusha
je
xchg
sbb
orb
dec
xor
sar
push
mov
jmp
lods
add
lock
popf
in
and
cmp
das
ljmp
sbb
pop
outsl
push
or
push
or
push
mov
dec
jmp
sub
or
adc
enter
push
loope
sub
jmp
xor
or
and
insb
push
push
mov
lahf
jg
jmp
ljmp
mov
xchg
stos
or
mov
inc
cmp
sub
inc
xchg
sbb
loopw
shr
add
fwait
orb
or
xchg
jnp
add
sbb
outsb
xchg
mov
aam
cmp
sbb
rorb
mov
rsm
jae
inc
idivb
sub
pop
sub
or
adc
sbb
aas
sbbl
adc
pop
ret
pop
scas
add
add
in
pop
jmp
mov
fld
bound
in
push
and
mov
nop
es
add
shlb
jmp
or
pop
mov
fsubrp
rclb
add
dec
dec
mov
mov
jb
imul
xor
pop
dec
jo
xchg
dec
xchg
and
add
add
push
jmp
imul
test
aas
or
fadds
push
pop
add
push
subl
xchg
adc
pop
push
xorb
int
jne
fs
cmp
mulb
nop
andb
mov
jbe
fistl
je
popa
notl
ret
add
push
push
test
xchg
das
decb
call
cmp
pop
dec
shrb
popf
aas
test
movsl
pop
sbb
cmc
cmp
movsl
cmpl
sarl
xor
xchg
adc
and
push
xor
aaa
or
inc
sbb
push
jmp
flds
and
mov
add
mov
in
mov
insb
push
push
push
loopne
dec
rcrl
dec
arpl
daa
inc
push
xchg
insl
dec
jmp
adc
inc
stos
push
add
xor
sub
shrb
subb
out
es
pop
xchg
insb
xorb
inc
testb
xor
add
aad
into
cld
flds
divb
xlat
insl
orb
mov
mov
sub
cmp
mov
push
mov
call
sub
pop
adc
icebp
insl
lock
pop
pop
loop
lock
sbb
inc
testl
not
pusha
xchg
cli
dec
dec
inc
sub
or
inc
sahf
jg
push
adc
dec
xor
ljmp
add
inc
dec
pop
jle
std
cmp
mov
mov
arpl
mov
add
pusha
adc
lds
pop
add
inc
inc
data16
inc
mov
mov
fldcw
subb
lcall
adc
dec
neg
inc
jl
pop
adc
pop
sub
test
push
adc
dec
mov
cmp
aad
pop
push
cmpsl
orb
mov
sub
jg
pop
mov
mov
jne
pusha
lahf
loop
ret
inc
xchg
out
mov
incl
nop
jge
stos
pop
pop
addr16
sub
rol
sbb
adc
icebp
sub
rorb
and
int3
or
pop
sahf
mov
and
jl
push
mov
imul
rclb
inc
dec
sbb
or
sbbb
sbb
jge
sbb
ja
aas
xor
icebp
movsb
movl
mov
fists
mov
mov
sub
aam
leave
out
jns
xchg
push
sub
add
movsl
lds
jmp
jmp
out
popa
add
push
mov
sbb
dec
shll
xchg
push
fwait
jae
sub
stos
add
cmpsb
outsl
loopne
daa
jmp
jmp
fsub
mov
jg
ds
mov
mov
dec
add
flds
cwtl
gs
das
lret
pop
rclb
bts
add
push
nop
add
jno,pt
pop
andb
pop
adc
sbb
adc
jns
sbb
mov
cmp
lret
aam
andb
lds
gs
jno
and
into
sarl
loopne
hlt
or
adc
test
or
sbbb
lret
ffreep
dec
push
shll
fisubrs
je
xor
cmc
es
imul
xchg
popa
xor
jecxz
push
popa
insb
jo
stc
sub
fdivs
pop
jmp
adc
mov
mov
adc
or
fldl
jmp
adc
add
jmp
les
addr16
popf
dec
add
popa
add
jmp
xor
push
xchg
push
inc
test
cmpb
or
xor
push
sbb
aad
in
xchg
into
cmp
and
out
or
stos
subl
xchg
fildl
pop
dec
jmp
in
xor
dec
cmp
jp
adc
ljmp
push
pop
aaa
dec
lds
pop
fmulp
dec
or
adcb
dec
dec
ret
jo
pop
negb
jle
push
jmp
or
inc
stos
scas
add
ja
push
and
insb
xlat
mov
cli
pop
shl
push
mov
cmp
ficompl
add
roll
pop
sub
add
push
insb
sbb
and
mov
fstl
mov
sbb
mov
cs
lds
jecxz
cmpsl
cmpsb
pop
lcall
pop
and
iret
ret
dec
mov
sbb
fs
cmpsl
xor
mov
push
jmp
inc
sub
int3
add
jmp
dec
nop
or
lods
into
xor
and
inc
shlb
push
or
popf
lods
addb
lcall
sbb
ds
out
cmpsl
push
int3
dec
pop
mov
dec
int3
adc
jne
push
add
jge
mov
push
jmp
inc
aaa
mov
int3
xor
xor
lods
push
push
pop
inc
jmp
push
and
aas
jno
jmp
add
pop
dec
shll
lods
add
add
dec
lret
subb
add
inc
daa
mov
inc
and
add
stc
rorl
jl
pop
sub
pop
push
and
sbb
dec
jno
mov
fimuls
add
rolb
lret
pushf
adc
pop
ror
cmpsl
adc
mov
dec
sbb
stc
sub
xor
iret
xor
in
cmpl
push
add
pusha
dec
xor
daa
pop
insb
pusha
and
inc
mov
dec
sub
inc
mov
push
mov
cmp
les
loope
mov
lcall
ret
xchg
sub
jne
pop
or
arpl
push
xor
repnz
push
add
jg
adc
in
push
push
pop
lods
mov
or
xchg
mov
jnp
and
push
dec
int3
cmp
in
xor
mov
std
adc
call
inc
jmp
into
push
add
ljmp
cs
ret
or
jg
jmp
pop
mov
das
sub
ret
push
jmp
pusha
sbb
xor
push
sub
ret
pop
sub
in
or
cmp
jne,pn
cli
pop
mov
pop
aaa
pop
jmp
test
push
cwtl
mov
adc
xchg
inc
fists
mov
sbb
mov
xor
arpl
insl
sub
pop
mov
xchg
and
push
int
insl
dec
adc
test
mov
lahf
negb
add
scas
add
aaa
jg
ja
outsl
push
push
fwait
sub
xlat
push
inc
mov
rorl
xchg
clc
xchg
clc
mov
add
das
pop
jmp
push
jl
add
nop
sub
adcb
push
adc
pusha
mov
pop
rolb
adc
rcl
add
cmpsb
loop
rcr
dec
das
testl
cltd
jbe
add
push
add
inc
cmp
sub
and
jmp
pop
call
adc
mov
gs
ret
jl
jmp
dec
rolb
sub
adcl
js
ja
mov
xchg
gs
jae
mov
push
ret
leave
pop
scas
push
rol
inc
xchg
xchg
in
xchg
sub
inc
negb
sbb
imul
xchg
sub
or
push
cli
sbb
or
test
jo
push
int3
lods
mov
addr16
and
or
daa
sub
and
mov
test
fisttpl
test
jnp
icebp
out
xchg
push
adc
in
call
xchg
sub
scas
ljmp
nop
pop
test
addr16
movsl
roll
or
fs
adc
inc
push
and
push
popa
sub
pop
adc
xor
insb
aaa
movb
shl
sub
int
xchg
pushw
add
or
pop
adc
int
daa
cwtl
in
mov
add
pop
push
jnp
mov
loope
lahf
push
pop
not
adc
xchg
or
sbb
ds
jg
or
pop
sub
mov
pop
push
mov
add
cmpsl
es
jmp
flds
dec
adc
clc
out
loop
js
mov
dec
push
mov
sbb
rolb
jbe
dec
push
push
and
int3
sahf
add
or
popa
cmpsl
sbb
adc
xor
push
dec
push
popf
in
leave
int3
call
int
xchg
call
lret
test
sub
test
xor
inc
cs
jnp
lret
or
cltd
aad
add
pop
pushf
pop
in
mov
cmp
jmp
cmpsl
cs
repnz
pop
push
mov
dec
xor
adc
dec
mov
xor
ret
inc
jo
mov
or
xor
dec
out
push
add
fcomps
mov
mov
adc
jecxz
inc
es
add
xchg
mov
or
xchg
add
push
jmp
mov
in
fimull
sub
adc
mov
adc
das
lret
mov
mov
or
into
je
sbb
adc
out
push
inc
scas
orl
cmp
push
sbb
inc
lods
add
cld
adc
push
jp
adc
aas
test
adc
icebp
adc
or
aas
sbb
gs
add
pusha
bound
cmp
pop
sub
pop
mov
pop
jne
or
push
call
mov
adc
cmp
dec
xchg
jmp
loopne
inc
lahf
cli
ljmp
pusha
ficoms
dec
test
mov
ret
int
ss
call
loope
sbb
push
sbb
es
inc
push
adc
sub
or
xchg
add
xor
out
add
mov
outsb
push
inc
cld
fadds
lock
jge
add
hlt
inc
inc
xor
dec
mov
sub
lock
sub
out
add
pop
popa
aam
xchg
int3
imul
pop
and
shl
sbb
add
int3
sbb
xchg
sbb
outsb
inc
mov
test
sub
jb
adc
xor
shlb
mov
sub
push
out
mov
inc
ss
xor
pop
stos
inc
mov
rcll
mov
jnp
loopne
and
push
andb
sub
punpckhdq
pop
cmp
or
out
and
mov
repz
out
mov
jecxz
pop
mull
mov
mov
add
js
mov
pop
lods
mov
push
inc
adc
ja
push
fisubs
adc
jno
push
push
in
popa
inc
movb
jmp
clc
and
jno
jg
push
fisubrs
es
lcall
out
test
or
push
inc
jbe
or
ss
repnz
jp
enter
jg
pop
pop
mov
xor
loope
lock
popf
std
and
cli
adc
and
push
mov
xchg
mov
bsr
pop
lahf
mov
add
xlat
xor
push
push
dec
mov
insl
mov
sbb
xchg
movsb
push
testb
arpl
xchg
jnp
xor
adc
cmp
mov
movsb
pop
adc
and
je
add
mov
pop
mov
adc
cmpsl
aas
add
mov
sub
ss
push
push
add
mov
mov
dec
sub
sub
cmp
add
push
mov
jmp
rol
jb
push
xor
test
pop
push
push
in
push
fisttps
mov
jl
std
add
mov
es
dec
adc
cwtl
xchg
lock
outsb
idiv
add
push
outsl
test
add
fdivrl
stos
lcall
or
dec
xchg
and
or
inc
mov
pop
aas
das
or
push
subb
aas
pop
push
xchg
add
push
out
push
std
jno
dec
rorb
and
add
dec
cwtl
pushf
add
inc
jbe
lds
pop
push
rcrl
xor
pop
pop
mov
lock
inc
popf
jl
jns
cli
jo
mov
xchg
and
sar
shl
cmp
or
cwtl
inc
jmp
cld
vpsubb
add
outsl
xchg
cmpb
pop
xchg
lock
adc
xor
movsl
daa
bound
push
push
inc
push
jmp
out
push
adc
pop
mov
xlat
test
mov
scas
fisubl
stos
pop
pop
arpl
or
add
cwtl
xor
cmp
test
cmpsb
push
sbb
push
xchg
popf
and
sahf
lret
notl
sahf
push
pop
dec
jp
in
jns
je
jmp
or
fsubrs
push
je
mov
fwait
ret
shrl
pop
inc
xchg
cwtd
sbb
cmp
outsb
out
icebp
aad
cld
inc
rorl
xor
fwait
clc
xchg
cmp
sbb
mov
icebp
repnz
je
leave
pusha
test
aaa
stc
sub
xchg
cltd
pop
hlt
les
push
push
pop
inc
push
push
dec
pop
pop
sub
movsb
aam
repz
push
mov
clc
jmp
push
pop
jb
push
push
add
jo
lret
inc
dec
fisubs
mov
jmp
push
cmp
inc
pusha
mov
jle
rcll
push
sub
or
lahf
jb
mov
sbb
filds
ret
add
xchg
cmp
hlt
roll
mov
xorl
jmp
add
popf
lea
push
test
adc
pop
or
cmc
pop
sub
push
popf
mov
cmp
jecxz
jnp
mov
jle
shr
jbe
js
add
stos
pop
pop
neg
scas
sbb
and
add
mov
push
xchg
adc
pop
mul
jg
lahf
dec
add
sahf
adc
cmp
pop
push
fmuls
sub
mov
sub
push
jmp
add
out
jno
notl
and
stos
rol
add
or
jmp
lock
jle
pop
push
cmpsb
mov
pop
ficomps
push
lock
leave
fs
jl
das
add
icebp
ret
icebp
insb
or
out
repz
outsb
call
push
sub
add
mov
lret
add
sub
jmp
mov
push
jbe
cmpl
and
add
pop
add
xor
lock
test
int
lcall
mov
sub
add
xor
call
pushw
or
mov
sarl
push
pop
ljmp
loope
ss
test
aaa
aad
push
adc
inc
pop
or
sbb
add
pop
mov
ja
sbbb
or
jle
and
clc
and
js
push
mov
sahf
or
inc
stos
sub
jmp
sub
mov
ret
test
add
test
movsb
into
inc
js
enter
xchg
rcl
pop
sbbb
mov
imul
popf
jecxz
add
in
icebp
movsb
jnp
fldcw
inc
lock
popf
insl
pop
mov
int3
adc
pop
jmp
xorl
fcomps
ret
add
mov
jle
and
adc
lods
or
test
add
pop
jbe
sub
shrl
sbb
push
mov
icebp
in
idivb
and
sbb
gs
or
push
mov
sbb
fwait
add
xchg
ja
push
add
jae,pt
adc
sub
jmp
or
cs
push
test
shll
xor
jl
imul
sbb
pop
bound
add
adc
ret
dec
add
cmpsb
invd
sbb
test
cmpsl
shr
mov
xchg
or
nop
out
imul
mov
pop
aas
cmp
pop
push
ss
in
cmp
push
test
sub
aad
add
mov
sub
insb
xchg
mov
push
lock
movsl
neg
xor
sarb
call
ret
pop
pop
push
or
je
inc
xchg
mov
cli
inc
xchg
andl
add
push
lods
add
ja
pop
lods
xchg
push
mov
push
test
ret
push
adc
or
mov
cli
and
adc
or
or
and
fs
movsl
je
add
xor
push
sub
call
mov
sahf
hlt
mov
jmp
lods
push
mov
leave
lret
clc
rclb
ret
ljmp
test
xchg
mov
in
sub
int
inc
aam
in
fisttps
push
push
sub
adc
jp
mov
call
dec
outsb
pop
pop
je
and
test
jmp
xchg
jmp
push
imul
imul
insb
dec
daa
aad
push
cmp
or
sub
inc
xor
sub
das
dec
iret
sbb
leave
loop
mov
cltd
add
cmp
xor
iret
add
jmp
jp
mov
sbb
push
aas
jmp
test
test
xchg
or
ret
icebp
popaw
testb
orl
stos
shlb
or
movntps
arpl
cmp
inc
or
insl
jle
sbb
mov
xor
adc
sti
dec
orb
push
xchg
adc
push
xchg
add
mov
lea
jmp
cwtl
adc
inc
out
adc
test
push
ftst
push
mov
add
fstpt
adc
pushl
xor
add
and
fcoms
jl
fisttps
es
add
pop
mov
sbb
push
ljmp
push
in
ss
or
sub
add
sub
int3
sub
jge
jns
mov
mov
out
fsubr
scas
loope
add
outsb
jmp
fstp
or
sbb
sti
sub
pop
cwtl
lea
push
les
push
jae
jmp
fisttpl
mov
jmp
shrl
out
call
jmp
fs
dec
push
push
pop
xchg
inc
test
pop
and
push
adc
dec
cmp
dec
outsl
adc
test
mov
push
cmc
pushf
dec
xchg
or
mov
add
cmp
pop
adc
push
shll
add
push
lcall
leave
lds
cld
inc
subb
leave
dec
mov
cmp
mov
arpl
add
xor
mov
out
adc
daa
mov
and
rcr
repnz
or
pop
add
addr16
push
cld
or
stc
ljmp
mov
outsl
and
add
lea
lret
aaa
daa
sub
push
loopne
out
rol
adc
adc
inc
xor
pop
pop
out
pop
dec
bound
pop
push
fildl
and
cmp
and
lret
loope
fisubrs
movsb
pop
insl
daa
pop
jns
popf
daa
jo
mov
adc
mov
ror
data16
mov
cli
and
test
pop
dec
shll
push
ss
shl
mov
daa
andb
out
or
xchg
add
xor
lea
insl
jl
js
scas
or
push
mov
mov
outsl
mov
stos
lret
add
push
aas
mov
pop
lods
popf
pop
shrb
and
xchg
out
push
xchg
or
push
ljmp
inc
and
sbb
mov
add
push
addb
lret
or
xor
push
push
pusha
movntps
cltd
mov
inc
call
push
xor
or
out
and
pop
movsb
push
mov
add
add
push
mov
orb
cmp
mov
out
push
out
adc
pusha
or
int3
and
into
mov
adc
insb
or
repz
mov
je
and
adc
jae
enter
clc
cmp
int
cli
sub
xor
cltd
out
push
subl
rsm
sbb
mulps
push
rdmsr
aaa
push
std
xchg
adc
das
jecxz
add
sarb
add
popa
mov
or
test
jge
xor
pop
les
jno
mov
imul
and
dec
push
enter
and
and
in
inc
inc
add
and
inc
nop
pmuludq
pop
dec
or
mov
out
push
add
sbb
imulb
cmp
mov
and
xchg
and
aad
xchg
in
push
loope
and
xchg
lds
sbb
push
xor
pop
test
xor
sub
icebp
insb
idivb
push
mov
shr
shlb
in
mov
pop
sbb
insb
sbbb
fstpl
push
push
fwait
dec
addl
and
clc
aaa
insb
push
dec
loopne
icebp
add
sbb
int
add
push
gs
jnp
mov
push
mov
or
push
mov
push
loop
push
and
mov
vcvtss2si
testl
pop
xchg
lea
sarb
ljmp
and
xchg
iret
add
or
sahf
cmp
sub
or
cmp
pop
outsb
mov
pop
dec
pushf
pop
push
cmp
mov
inc
xchg
or
push
push
and
mov
sti
out
mov
xor
mov
mov
bound
lock
sub
ja
dec
and
cmp
xor
and
pop
sbb
std
and
jge
pop
inc
xor
stc
dec
pop
mov
cmp
lds
push
push
or
dec
rolb
add
cmp
and
adc
push
fsubrs
add
sub
fmull
sub
loop
daa
ss
cmpsl
cmpsl
lock
add
pop
inc
test
xchg
push
stos
shrb
adc
das
icebp
fsub
jmp
rorl
dec
inc
pop
add
cmp
push
sub
mov
and
pop
roll
sbb
and
pushf
insb
lret
or
xlat
jnp
xchg
rorb
push
add
cli
add
mov
shrb
fadds
cmp
xor
push
ja
or
push
cs
or
ret
sub
movsl
adc
scas
cmp
addb
out
push
ret
rorl
xor
add
faddp
add
push
xor
push
into
cmpsb
adc
repnz
enter
add
shr
loop
lods
xchg
sti
arpl
sub
out
jb
aad
jmp
dec
scas
push
xchg
push
add
into
mov
add
mov
dec
out
cmpsb
xor
add
push
add
pop
fnstcw
mov
roll
mov
sahf
dec
push
and
jecxz
jmp
add
xchg
push
adc
fiaddl
psrld
sbb
aas
sarb
popf
or
jge
push
inc
sub
nop
sbb
jno
mov
inc
imul
mov
dec
rcrb
dec
mov
adc
xorl
fdivrs
push
subl
or
aad
cmp
int
push
mov
push
add
roll
mov
outsb
or
or
sub
push
add
test
push
sub
pop
cmp
jp
sbb
mov
sbb
add
insl
add
mov
ja
dec
pop
push
cmp
add
push
sbbb
mov
adc
push
cltd
cmpsb
mov
or
adc
cmpsb
jp
dec
rorb
mov
scas
lods
lea
sub
or
and
or
pushf
adc
lds
addr16
xchg
popa
inc
cmp
pop
call
pop
add
fadds
sub
sarl
lcall
hlt
and
sub
pop
mov
xor
insb
test
cs
pushf
sub
pop
popf
sbb
fldenv
jmp
jg
mov
cwtl
push
push
ja
mov
dec
repz
adc
push
test
inc
mov
add
fiadds
or
pop
shll
scas
jbe
cs
aad
shl
pop
push
loope
cmp
push
xchg
jmp
rcrb
push
add
adcb
mov
jno
or
pop
ja
movsl
xchg
daa
inc
pop
mov
outsl
shlb
jmp
fdivs
adc
addl
sub
xchg
add
add
sub
inc
pop
inc
stc
xchg
add
push
or
lods
clc
or
adc
mov
roll
or
dec
mov
jmp
in
aas
dec
pop
dec
fsub
jmp
out
hlt
das
mov
ret
imul
pop
jno
add
dec
xchg
cli
mov
repnz
popf
outsl
jne
cs
shl
mov
cmpsb
repz
je
js
sub
test
subb
pop
sbb
jp
sub
inc
xchg
push
dec
test
pop
cwtl
xchg
xor
or
pop
jo
cli
add
push
cmpsl
inc
scas
sarl
sbb
or
mov
into
push
pop
jae
sbbb
or
jge
stos
jmp
mov
mov
xchg
sub
test
iret
mov
das
mov
xchg
lods
in
xchg
rolb
mov
xor
cld
mov
imulb
jge
fcomps
out
and
inc
pop
pop
jg
pop
adc
sub
xor
dec
xor
and
or
pop
push
push
mov
add
out
or
pop
aas
dec
or
adc
pop
test
in
lea
xchg
xor
dec
adc
lea
clc
mov
enter
pop
mov
inc
pushl
mov
ucomiss
aaa
cmpsb
mov
xor
into
cs
pusha
jae
gs
cs
les
imul
cmp
push
push
pop
shrb
repnz
or
xor
cltd
or
lds
inc
add
add
pop
shrb
sub
adc
repnz
dec
cmc
in
popf
scas
push
lcall
push
dec
push
push
sbb
inc
and
pop
add
sub
mov
pop
inc
or
push
xor
sub
movsl
add
es
sub
popf
js
xchg
fs
push
mov
adc
add
outsb
jne
jmp
xchg
es
ljmp
ret
cmp
daa
jbe
fs
pop
pushf
cmp
inc
lods
mov
cmp
mov
pop
xchg
and
add
jae
cmpb
pusha
inc
add
adc
or
adcb
rolb
test
pop
fisttps
add
and
orb
cmp
enter
loopne
out
sub
and
lcall
loope
mov
gs
push
push
push
sbb
mov
inc
jmp
fdiv
mov
enter
add
js
fisubs
loope
fsubl
adc
fs
jbe
pushf
adc
cs
ja
add
dec
adc
push
and
addl
add
sub
sub
cmc
cs
add
push
push
jmp
dec
xchg
mov
mov
xchg
ret
lock
ficoml
add
inc
push
xchg
mov
push
xor
sub
inc
out
pop
inc
cwtl
sbb
mov
or
jp
js
movsb
out
push
lods
dec
in
cmp
push
movsb
or
jmp
into
pop
inc
rcll
rorb
xor
adc
mov
ljmp
mov
or
and
inc
sub
cmp
fcoms
insb
sbb
push
subb
insb
lds
adc
jns
and
mov
xor
das
pop
sub
clc
je
and
pop
dec
jns
in
repz
or
lret
mov
jl
push
ss
jp
repz
outsb
pop
push
adc
jmp
push
cmp
sbb
xchg
neg
cwtl
dec
xor
scas
testl
outsb
xlat
lret
jbe
sbb
js
sbb
push
out
add
push
jo
push
mov
ljmp
add
inc
xchg
test
pop
mov
and
pop
sbb
roll
and
adc
adc
and
das
adc
aam
add
cli
fcomps
sti
test
mov
inc
inc
rorl
mov
out
cmp
call
push
js
movsb
subb
mov
dec
call
rorl
std
outsb
lret
xor
ds
push
jne
xchg
test
mov
enter
jmp
ret
jbe
loop
call
mov
outsl
je
stos
lret
pop
repz
pop
or
cs
mov
xchg
adc
lods
push
movsl
iret
mov
icebp
add
inc
es
ljmp
inc
mov
loopne
cmpb
or
push
lretw
ds
mov
sub
popf
mov
sub
std
cmp
pop
or
push
not
jmp
lods
add
push
ret
ja
adc
xorb
aam
ret
cmc
and
pop
push
mov
dec
lret
icebp
adc
pop
or
outsb
xlat
mov
into
xchg
adc
mov
not
jmp
mov
outsl
pop
jl
xlat
daa
inc
jl
in
push
enter
pusha
push
or
or
pop
jmp
push
mov
pop
pop
push
fs
out
popf
out
adc
push
dec
dec
adc
fbld
and
daa
insb
mov
or
add
dec
popa
adc
xchg
xchg
jmp
in
insb
inc
pop
or
out
mov
jno
jbe
mov
push
clc
xchg
add
inc
sbb
mov
push
push
rorl
pop
lods
cmpl
fstl
lret
or
sbb
jns
add
mov
pop
ret
cmp
mov
add
jmp
pop
rorl
push
add
push
ljmp
fiaddl
dec
dec
jmp
push
jl
fs
mov
pusha
jle
jl
jg
fs
fisubl
sti
loop
sbbl
pop
and
addr16
add
testb
push
insl
pop
adc
pop
or
add
inc
or
push
lret
and
pop
or
pop
repnz
push
jbe
ljmp
pop
dec
inc
or
pop
jmp
mov
das
loope
push
imul
mov
cmc
or
push
dec
fstpl
or
mov
jmp
and
push
mov
mov
add
or
cmp
dec
and
nop
out
push
pop
sbb
shrb
pushf
pop
sbb
adc
insb
orl
inc
and
or
xor
repnz
push
push
push
add
or
dec
mov
push
add
cmp
cs
mov
lock
data16
jle
sub
ret
or
mov
and
sbb
or
mov
jne
in
in
xchg
in
add
insl
movsl
xor
test
fidivrs
jl
sub
pop
add
shll
fcompl
and
lods
int3
cmp
or
sub
sub
xchg
in
mov
sti
cmp
out
pop
insb
int3
and
xchg
sub
xor
insb
pop
daa
jmp
mov
mov
cmp
mov
movsl
repnz
pop
inc
jo
adc
jb
or
pop
mov
add
push
mov
clc
leave
cld
je
xchg
push
hlt
jmp
dec
or
xor
lret
jbe
or
pop
mov
add
sbb
or
pop
mov
adcb
ljmp
push
jb
in
pop
not
push
daa
stos
lock
mov
sub
sbb
rolb
jbe
movsb
inc
mov
dec
mov
xor
sub
aaa
sbb
adc
shr
push
adc
push
adc
mov
mov
clc
out
pop
pop
cmp
add
orb
nop
dec
or
mov
les
jns
ds
in
and
mov
sub
subb
movsb
pop
jne
in
jmp
inc
push
clc
into
jnp
ja
loope
mov
push
sbb
adc
int3
or
lock
push
ds
dec
mov
pop
outsb
push
daa
mov
xlat
flds
dec
loope
test
mov
das
sub
sub
dec
es
push
mov
repz
push
push
sbb
out
addr16
or
xchg
and
or
outsb
inc
dec
or
push
in
clc
push
xchg
add
cltd
xchg
jbe
push
add
ljmp
and
insb
ds
add
sbb
adcb
pop
lret
into
xchg
adc
add
sub
xchg
ret
arpl
xchg
lea
push
add
xor
jmp
cs
repnz
push
insl
test
pop
daa
scas
dec
xor
xchg
shr
inc
xor
ret
adc
xor
out
lcall
dec
xchg
pusha
das
or
jg
imul
pop
pop
repz
push
imul
cmc
jmp
out
cmp
cltd
leave
ret
inc
xchg
jno
dec
daa
dec
adc
or
dec
adc
es
stos
add
push
pop
movsl
mov
jle
popf
lock
inc
and
aaa
cmp
mov
pushf
testl
lret
jne
or
or
jb
push
imul
pusha
jb
mov
cld
testb
xor
das
nop
pop
push
sbb
clc
scas
popf
dec
push
sub
jmp
xchg
das
mov
bound
clc
or
into
cld
sbb
sbb
loopne
daa
popf
pop
lock
mov
outsl
les
mov
cld
dec
loopne
push
daa
cs
daa
xchg
or
jns
xor
xor
push
movsl
stc
and
push
push
xor
outsl
sbb
adc
scas
sbb
fisubl
sti
jmp
xor
shrb
pop
adc
in
dec
inc
loop
sub
cmpb
xchg
fs
mov
cwtl
lds
aas
notl
adc
add
dec
cli
mov
or
pop
push
or
daa
stc
sbbb
int3
push
nop
or
adc
sbb
jo
fs
les
push
pop
jg
inc
popa
movsb
shlb
mov
sti
jmp
cmp
adc
sub
cmp
sbb
sub
mov
dec
and
das
movsb
adc
out
jmp
ret
decl
lods
arpl
shlb
sbbl
call
sbb
inc
scas
dec
sub
cmp
adc
nop
pop
or
xchg
rcl
test
int3
add
mov
sub
imul
inc
sub
pop
lret
fwait
sbbb
leave
pushf
adc
xor
notb
mov
mov
popa
or
adc
ja
add
sbb
sarl
jo
ret
mov
ss
in
push
add
xchg
adc
or
insb
sbb
mov
pop
inc
shrl
pop
pop
adc
jbe
sub
jmp
mov
dec
add
pop
mov
jge
dec
cmp
adc
cwtl
cmp
mov
aam
ret
push
xor
pushf
xor
ret
and
pop
int3
adc
add
test
ficoml
sub
mov
shll
bound
neg
sarb
push
adc
inc
call
cmpl
sub
xorb
jne
rolb
in
push
jbe
pusha
dec
jge,pt
nop
loop
or
pop
jbe
addr16
std
sub
add
ret
aaa
ficomps
popf
mov
adc
add
jmp
add
dec
sbb
push
add
lock
or
enter
aad
push
test
rolb
fnstsw
jno
loope
clc
dec
jmp
and
test
not
pop
jmp
dec
mov
dec
mov
or
xchg
add
add
aas
mov
int
aaa
ret
dec
into
or
xor
sub
xchg
push
testb
push
insb
cld
xor
pop
dec
mov
outsb
loope
aas
mov
jo
xchg
aas
pop
add
add
jmp
ljmp
lds
les
mov
add
clc
icebp
xor
cmp
pop
nop
xchg
push
int3
andb
add
orl
xchg
sbb
stos
mov
sbb
xor
ljmp
fists
mov
push
testb
outsb
add
stc
sub
dec
andnps
xlat
fiaddl
movsl
add
inc
jl
cs
adc
std
lcall
push
hlt
cli
cli
xlat
push
cli
hlt
mov
decl
inc
push
cmpsb
jae
nop
jnp
and
adc
lods
jno
out
sarb
popa
jl
mov
clc
std
sbb
das
div
cmp
fmull
enter
add
or
push
sub
sub
xor
scas
sbb
popf
fsubrs
repz
in
adc
sbb
push
push
mov
ds
jae
js
adc
lahf
testl
loopne
cmp
pop
add
mov
push
ja
push
je
sbb
pop
inc
stc
add
xorl
mov
shlb
lret
cld
std
shll
or
pusha
insl
lds
xor
lock
or
scas
sbb
inc
sub
shl
xchg
sbb
js
ja
cmp
imul
xchg
les
negb
test
mov
push
inc
jmp
sub
dec
jo
add
movsb
lahf
xchg
sub
das
mov
xchg
jge
fcoms
mov
add
loop
shl
iret
or
add
sub
pop
lahf
push
inc
inc
lods
nop
adc
and
lods
pop
add
mov
pop
and
sub
pusha
decl
push
je
mov
mov
mov
dec
shlb
add
jmp
lods
or
mov
int
cmp
aas
jl
jb
rorb
iret
add
mov
pop
push
mov
add
add
mov
pusha
sbb
add
mov
mov
test
mov
psubsw
inc
xchg
jno
out
adc
pop
inc
cvttps2pi
outsl
addl
sbb
and
mov
ja
jmp
shlb
cltd
js
inc
add
les
xchg
dec
push
dec
addl
jmp
mov
or
mov
jo
adc
sub
push
add
pop
into
jg
pop
addr16
xor
mov
outsb
mov
adc
ljmp
xchg
pop
mov
push
or
adc
push
and
cld
or
xchg
loope
sahf
mov
in
mov
enter
or
inc
dec
or
xchg
add
stos
fwait
ror
pop
add
or
in
std
rclb
dec
fwait
js
add
mov
sbb
loopne
shll
in
ja
add
pop
jp
jmp
jl
or
mov
les
inc
jecxz
inc
push
aad
js
lds
push
in
sarl
int
or
xor
shrb
jnp
sbb
cld
out
ret
xchg
jb
adc
jbe
cli
jno
div
sarb
and
mov
lcall
aam
cmp
add
push
adc
sub
shrb
mov
adc
cmp
xchg
sbb
in
and
sub
adc
push
sbb
popf
sub
fildl
popa
jae
sub
les
and
jns
jg
repnz
add
sub
out
inc
or
add
sbb
mov
push
cmp
loopne
ret
mov
shrl
push
mov
or
pop
add
gs
movsl
fnstenv
mov
arpl
or
push
sub
jg
or
adc
insb
cwtl
and
cmpb
and
pop
rcrl
fsts
or
push
test
cmpsb
ja
add
ficompl
repnz
sbbb
shll
sahf
sub
ss
push
push
xchg
lret
mov
das
cmpsl
jle
or
xor
pop
ud0
rcrb
dec
fs
add
cmp
pop
shll
add
inc
jbe
jmp
into
outsb
push
addr16
bswap
or
sub
push
add
popa
xchg
aad
xchg
sub
pop
push
push
add
adcl
shlb
dec
adc
mov
jbe
cli
sub
popf
push
in
dec
lea
mov
inc
es
xchg
loopne
push
push
dec
adcb
add
cmp
fdiv
stc
jo
lds
cs
add
sub
and
push
push
jnp
nop
test
jo
pmulhuw
bound
ds
xchg
dec
call
lods
cwtl
data16
das
and
fisttpll
xor
cli
dec
add
loopnew
push
sarl
scas
and
mov
jb
xchg
dec
les
mov
daa
lods
add
dec
xor
or
pop
push
in
mov
jg
jae
adc
mov
add
pop
fdiv
mov
dec
dec
add
sets
push
stos
mov
test
inc
stc
dec
mov
dec
fxch
adc
loop
and
sbb
in
ljmp
pushf
adcl
test
add
push
sub
mov
sub
add
ret
jmp
sbb
dec
add
add
mov
mov
inc
add
js
inc
xchg
cwtl
outsb
loopne
leave
mov
fidivrs
lods
daa
cli
xchg
jp
dec
lea
push
rcl
clc
add
xlat
shl
stc
push
in
mov
mov
out
clc
aad
sbb
popa
leave
sbb
imul
adc
jb
or
mov
mov
enter
mov
dec
nop
jne
jns
or
add
test
adc
popa
pop
cmc
inc
cmp
sbb
add
adc
enter
and
sbb
cmc
adc
jecxz
in
push
jge
sahf
les
pop
insb
cwtl
cli
fstpl
loop
cmpl
cmp
mov
xlat
call
xchg
data16
pop
hlt
or
push
outsl
mov
pop
shll
in
addr16
pop
lock
es
lret
or
popa
inc
xor
add
lret
dec
pusha
mov
sbb
adc
sbb
xchg
push
or
ficoml
mov
xor
cmpsb
hlt
pop
cwtl
pop
jmp
dec
add
das
es
test
sub
jmp
mov
lret
fdivl
mov
inc
sub
cmp
mov
pop
stos
sub
repnz
pop
inc
jne
or
js
or
pop
pop
loop,pn
leave
xchg
xchg
dec
push
iret
sub
loopne
xchg
aaa
and
test
push
xor
and
lds
adc
es
mov
shrl
xchg
fcomi
push
sub
lock
xchg
ret
js
adc
or
push
jge
and
es
dec
add
xor
push
xlat
add
and
cs
mov
scas
or
push
cmp
loope
xor
mov
popa
add
jne
stos
fsubs
or
testb
pushf
ret
clc
insl
dec
mov
adc
pop
cmp
mov
adc
xchg
pop
pop
push
mov
adc
dec
pop
add
xchg
push
or
mov
bound
je
jae
inc
dec
xor
mov
inc
into
push
scas
and
jmp
jp
mov
fstpl
rolb
mov
aaa
and
jmp
inc
inc
out
ret
pop
push
std
sbb
and
nop
dec
jmp
add
jecxz
sbb
aad
test
mov
or
mov
mov
xchg
imul
jmp
movsl
push
pop
mov
rcrl
mov
mov
add
pop
jno
clc
int
sub
inc
gs
dec
or
loop
mov
inc
in
pop
sbb
cmp
mov
mov
rorb
mov
shll
pop
sub
push
push
loopne
or
mov
push
dec
gs
add
lock
push
push
xchg
push
cld
sub
adc
pop
add
cmpsl
clc
fdivp
xchg
in
test
test
lods
sbb
arpl
rcrb
and
lret
add
push
push
adc
add
fcomps
gs
orb
mov
lahf
sti
or
rcll
add
push
bound
out
inc
mov
xor
jl
inc
jle
dec
jmp
push
movsl
mov
push
dec
fsubrp
dec
movsb
aam
pop
cmpsb
xor
or
bound
outsl
xor
les
push
push
jmp
cmc
jmp
jmp
push
insl
arpl
lret
in
add
sbb
mov
push
mov
add
dec
inc
mov
adc
mov
ljmpw
insb
mov
pop
xor
jmp
cmp
fs
mov
xor
and
xor
or
adc
and
mov
sub
cmpsb
mov
ficompl
add
outsl
dec
push
dec
shrb
iret
dec
jb
sbbl
and
shlb
push
dec
addr16
cmp
ja
sbb
add
nop
arpl
inc
inc
outsb
push
inc
inc
mov
insl
add
and
xchg
pushf
aad
je
shrb
dec
pop
int3
in
dec
into
xor
sub
lret
sbbb
sub
in
add
lds
pop
xor
pop
not
mov
std
dec
add
clc
shr
fcmove
inc
stos
mov
push
or
pop
jle
je
add
mov
jmp
mov
ja
fs
mov
xor
loope
bound
inc
stos
std
pop
xchg
adc
inc
push
adc
cmp
push
and
test
jo
ret
or
js
inc
add
dec
pop
out
inc
adc
pop
enter
inc
pop
cs
mov
sbb
jge
push
dec
sti
jns
inc
adc
adc
div
push
xlat
xlat
jb
out
je
sub
mov
pop
shrb
sub
dec
push
hlt
jl
dec
add
in
xchg
sub
and
add
movsl
cmp
inc
xchg
stc
das
call
das
insl
sub
push
ljmp
ret
aas
or
adc
sbb
pushf
pop
jmp
dec
mov
push
push
mov
or
lahf
cmp
mov
addb
xor
outsl
hlt
cli
js
sbb
inc
jo
jg
popa
dec
xor
not
add
jl
xchg
bound
inc
jno
test
or
repnz
fimull
xlat
xchg
lock
xor
or
jmp
cmp
xchg
adc
outsb
loop
bound
push
fstps
lahf
iret
xchg
rorl
fs
push
jl
mull
xlat
push
lret
cmp
mov
ficomps
dec
call
cmpsb
lahf
in
xchg
sbb
int
xor
inc
adc
je
mov
rcll
pop
adc
jge
inc
subb
cmp
insb
rorb
inc
sahf
outsl
jle
push
sahf
jmp
icebp
push
into
push
push
inc
jp
cmp
push
xchg
mov
sub
dec
dec
pop
push
adc
cli
xor
dec
and
jno
push
pop
pop
cmp
addr16
imul
repz
lss
sbb
out
cltd
add
test
leave
cmp
and
mov
arpl
dec
enter
pop
lahf
pop
cs
mov
clc
orb
clc
mov
xor
fldenv
dec
sub
popf
pop
and
mov
jo
sbb
mov
aas
jp
clc
jmp
cmp
mov
adc
notl
lret
das
pop
out
xchg
and
mov
sti
pop
jns
adc
jmp
shl
mov
mov
and
push
sbbl
sub
push
jno
jmp
inc
push
mov
jns
xchg
pop
out
xor
pop
lcall
pop
mov
inc
in
int3
mov
push
cld
sbb
addr16
nop
xor
bound
scas
ror
jno
jno
jnp
imul
cs
adc
or
inc
shll
jle
addr16
insl
movsb
addr16
sub
push
into
and
sub
pop
jp
rcll
jns
inc
loope
in
incb
out
cvtps2pi
adc
cmp
test
pop
cmp
adc
cli
aam
add
imul
mov
dec
shl
fs
fisttpll
testb
jno
lods
and
hlt
and
movl
movsl
pop
sbb
in
and
sub
dec
add
inc
mov
insl
insl
pop
mov
adc
add
jne
mov
loope
aas
xlat
dec
inc
mov
inc
and
test
sahf
pop
inc
aad
sub
je
pop
ret
loopne
mov
sub
sbb
inc
movsl
popa
push
jmp
insl
cmp
or
mov
pop
in
imul
xchg
bound
push
jle
mov
imul
testb
fsubp
leave
jl
add
and
pusha
icebp
jmp
popa
arpl
sub
mov
or
leave
mov
cmp
push
in
sbb
jbe
and
jo
loopne
dec
shlb
or
orb
push
outsl
jmp
bound
add
scas
jns
push
xor
inc
pop
test
lods
cmpsb
jge
cmpsl
push
je
push
ret
jecxz
std
adc
mov
jmp
cwtl
test
jns
addl
xchg
add
and
stc
sbb
jo
add
xor
neg
and
lret
stc
loop
and
imul
push
mov
and
lahf
xchg
movsb
mov
pop
sub
and
test
or
jp
jae
add
add
outsl
fs
push
int3
bound
inc
cmp
fdivrs
pop
in
and
cmpsb
push
orb
adc
xor
sub
or
xor
jns
mov
cmpsl
jo
xchg
rcl
ret
test
or
push
sub
push
loope
jmp
jge
sbb
xchg
orl
mov
and
insl
xor
dec
mov
cwtl
cmp
xor
add
push
push
mov
xor
jmp
sub
push
mov
repnz
lds
ret
push
fdivrl
rolb
push
mov
jne
push
std
mov
push
cli
jns
ss
lret
pop
pop
ljmp
dec
add
or
nop
mov
push
dec
adc
lfs
xchg
pop
jmp
sub
xchg
mov
out
or
sub
outsb
roll
pop
or
in
fwait
mov
and
aaa
inc
jo
mov
push
mov
out
add
cld
mov
and
mov
lcall
fs
sub
jbe
add
lods
stc
test
sbb
cmpsb
fsubs
jmp
add
mov
jbe
ret
cld
pop
mov
mov
cld
cwtl
fdivrs
xor
jp
mov
pop
jbe
adc
aam
xchg
neg
xor
test
push
lock
shl
shll
mov
mov
xchg
and
pusha
pop
or
outsb
pop
sbb
pusha
sti
and
bound
sub
imul
inc
filds
das
mov
test
sub
mov
js
orb
pop
pop
add
repnz
hlt
add
dec
shlb
daa
push
je
adc
push
sub
add
ja
js
inc
pop
mov
xchg
pushf
inc
lock
sub
sub
stc
icebp
dec
movsb
adc
jmp
and
int3
xor
repz
ficomps
icebp
popa
xchg
push
pushl
and
nop
es
in
sub
ss
inc
clc
xor
dec
push
sub
hlt
add
dec
mov
das
mov
and
add
iret
pop
or
jp
hlt
jmp
repnz
leave
movsb
lock
and
add
cmp
lea
sbb
pop
fsubrs
fdivr
scas
jle
inc
mov
jbe
shlb
pop
push
out
inc
int
jnp
jecxz
pop
iret
dec
cmp
pop
ret
std
add
es
push
or
jmp
ret
dec
and
and
pop
shlb
pusha
adc
xor
add
rorb
or
pop
xlat
mov
jmp
push
popf
push
movzwl
shrb
data16
das
int
out
or
adc
jle
or
aas
neg
push
dec
cli
enter
ja
data16
sub
fadds
xor
push
add
aad
push
xor
addl
jns
movsl
ret
mov
adc
jae
icebp
lods
lods
push
mov
xchg
push
divl
test
rclb
lds
push
push
jnp
or
clc
dec
sub
pop
and
sub
out
add
mov
mov
dec
adc
cs
les
cmp
and
mov
sub
outsb
das
ljmp
adc
adc
or
push
shr
fistps
add
clc
jmp
call
lods
mov
js
mov
mov
sub
ror
pop
enter
movl
cwtl
movsb
cwtl
xchg
lcall
lret
push
insb
daa
xchg
sbb
lods
stc
xor
mov
adc
add
inc
sti
add
jmp
mov
add
popa
add
or
aam
push
test
cmpsl
push
inc
cmp
pushf
movsl
iret
cmp
xlat
xchg
xchg
lods
push
test
mov
push
mov
push
sbb
push
pop
ret
pop
xorl
pop
stc
or
pusha
or
or
inc
pop
repz
pusha
mov
pop
push
xchg
ret
mov
pop
push
scas
jo
arpl
daa
add
inc
sbb
and
inc
jg
jl
or
fsubrs
cmp
add
xchg
jle
push
sub
or
mov
xchg
push
add
dec
dec
xchg
add
pop
sbb
mov
lods
jmp
xchg
pop
jbe
ljmp
sbb
mov
push
mov
jno
lods
push
sbb
jmp
cmc
cli
mov
or
jmp
clc
jl
push
push
test
imul
jg
lods
xor
mov
xchg
push
add
add
insb
push
mov
mov
adc
inc
pop
pop
lock
hlt
cmpsl
add
jns
adc
shlb
popf
xchg
sti
nop
daa
or
pop
ds
cmc
and
add
pop
inc
cmp
ja
loopne
mulb
popf
jae
mov
fwait
arpl
daa
mov
fmul
xor
das
lcall
inc
mov
pop
inc
and
sbb
dec
jg
dec
roll
cmpsb
lock
sub
jnp
imull
cmp
cmp
shlb
daa
cmp
or
fnstenv
roll
enter
sub
int3
gs
add
cmpsb
insl
or
add
shlb
sbb
aaa
adc
and
or
stc
jg
mov
push
sub
mov
mov
cmpb
jne
fsubr
sbb
pop
add
jle
push
not
sbb
sahf
icebp
xor
mov
in
sub
out
lods
icebp
repnz
pop
divl
mov
jge
daa
xchg
mov
push
pop
mov
xchg
inc
push
cmp
add
into
push
or
mov
icebp
scas
xor
cmc
popa
add
jmp
jp
out
add
iret
outsl
shr
cld
leave
or
add
or
push
sub
pushw
jo
das
cmp
shrl
je
sub
stc
pusha
mov
xor
dec
scas
aam
push
pop
cmc
stc
cmp
pop
sub
clc
sub
dec
or
out
jle
outsl
data16
andl
jecxz,pt
test
sub
sbb
arpl
test
daa
js
push
mov
mov
jne
es
jns
inc
push
mull
xor
test
rclb
push
std
pop
jbe
jb
add
pop
neg
inc
shl
add
xchg
and
shr
cmp
clc
test
imul
rcrw
repz
ret
outsl
dec
ljmp
into
add
inc
and
roll
xchg
xchg
xchg
ds
sub
test
push
or
lret
push
mov
xchg
inc
and
pop
push
or
stos
stos
xchg
loopne
lahf
mov
cld
add
call
repnz
in
jecxz
push
icebp
leave
addb
repnz
int
xor
orb
smsw
mov
xchg
push
xchg
pop
daa
movsb
push
inc
inc
xor
flds
sub
ret
xchg
or
add
lcall
loopne
lcall
mov
loopne
divb
push
popf
inc
mov
lea
call
push
jle
addb
imul
mov
lret
sbb
push
rorb
mov
cli
jl
and
sahf
push
dec
xchg
aam
jmp
jbe
sbb
add
add
cs
inc
sysexit
add
push
lea
push
mov
sub
fs
pusha
icebp
push
fwait
sub
inc
mov
out
inc
add
andb
pop
sbb
add
jmp
mov
andb
sub
mov
jg
lret
add
and
negl
lods
add
sub
lahf
in
inc
outsb
push
add
mov
or
loop
push
or
leave
lds
add
xchg
pop
fistps
push
cmp
pop
push
mov
shl
daa
or
insl
lcall
jl
cwtl
lods
ljmp
or
mov
vphadddq
pop
mov
fistpl
das
gs
xor
fidivs
sbbb
fisttps
fst
in
lcall
icebp
mov
lcall
test
mov
xor
xchg
adc
test
mov
and
not
xor
popf
pop
lahf
jmp
pop
sub
xor
push
push
or
cmpsb
fnstenv
imul
pop
adc
divl
adc
out
add
inc
repnz
xor
jno
pop
dec
clc
sahf
pop
test
dec
adc
repz
pop
out
pop
mov
sub
add
bnd
push
imul
or
add
xchg
jmp
jbe
insb
inc
mov
or
aas
adc
push
push
jmp
sbb
mov
imul
sub
loop
pop
sub
sahf
aad
ss
adcl
adc
dec
add
mov
stc
mov
ljmp
shll
sbb
lret
xchg
dec
repnz
loop
fsts
inc
lock
dec
lahf
rol
add
pop
dec
aas
sti
jbe
push
push
add
clc
or
lret
std
and
dec
mov
mov
cmp
pop
sub
xchg
inc
mov
xchg
add
rcrb
jmp
push
push
push
test
ljmp
sub
pop
fwait
push
rorb
dec
mov
int3
fcompl
sbb
push
out
adc
push
mov
pop
das
aaa
jo
and
mov
ret
aas
adcb
jmp
sahf
inc
or
push
cmpsl
pop
sbb
push
xor
jle
dec
inc
les
jge
push
xchg
and
rcrl
add
daa
test
adc
add
mov
dec
mov
adc
dec
or
pop
pop
push
jmp
pop
dec
mov
inc
xchg
or
sbb
stc
jnp
in
nop
popa
inc
xchg
mov
mov
push
inc
outsl
in
aam
or
add
xor
pop
arpl
sub
in
xor
push
leave
std
ss
adc
mov
dec
mov
mov
ds
sbb
adc
cmc
xchg
nop
ljmp
push
xchg
or
and
cmp
daa
mov
sub
cmp
fistps
andl
and
cli
and
out
fmull
orb
call
outsb
imul
inc
rcll
jb
ret
push
pop
push
cmp
lds
cmc
pop
add
or
push
inc
ret
loope
adc
mov
jae
pop
adc
loopne
push
push
add
xchg
or
inc
fisubrs
push
push
mov
repz
roll
push
cmpsl
add
push
and
push
xor
fldl2e
dec
enter
mov
aas
shr
cmp
cmp
mov
adc
cmp
jmp
ret
out
notl
pop
outsb
popa
imul
dec
stos
mov
push
inc
inc
out
push
in
into
lahf
fsubs
add
lret
fnsave
orps
sub
insl
jl
add
sub
jns
stos
inc
adc
ss
andb
push
push
ds
mov
xchg
and
sbb
repnz
aam
add
xor
sub
inc
enter
pop
test
in
add
push
inc
shlb
lods
faddl
ss
insb
jmp
lahf
push
pusha
or
xor
int3
xor
or
inc
inc
stc
jg
popaw
adc
fsubs
movsl
inc
cmpl
sbb
out
add
and
jno
and
mov
lds
rcrb
pop
repz
movhlps
das
shll
icebp
push
popf
and
cmp
sub
adc
pop
or
stc
inc
pushf
out
hlt
mov
pop
mov
mov
sbb
push
int
pusha
inc
cmp
pop
popa
lret
or
jmp
dec
divl
xor
sbb
push
rcrl
pop
mull
add
pop
stc
adcb
add
subb
adc
pop
pop
gs
xchg
jl
mov
sbb
push
leave
pop
je
sbb
sub
xorb
movl
add
test
jg
movsl
dec
sbb
dec
cs
and
mov
cmc
add
iret
fistpll
aad
push
and
add
or
sub
int
inc
mov
inc
jb
cmpb
cmpl
popa
add
adc
or
jmp
cltd
pusha
dec
push
push
jmp
nop
push
lret
push
rolb
je
jb
pop
shr
pop
or
mov
pop
xor
pop
jmp
mov
push
push
or
sbb
push
mov
inc
add
mov
dec
movb
sbb
push
das
mov
sbb
xor
sub
sub
mov
loope
pop
pop
fcos
imul
cmpsb
adc
loopne
and
jle
or
sub
sub
xorl
add
fsubr
add
sbb
or
lret
jmp
mov
push
push
pop
sub
data16
and
jmp
push
mov
stc
mov
insb
out
cmc
mov
loop
xchg
scas
xor
je
sbb
add
push
add
pop
shrl
pop
in
mov
mov
sbb
movsl
and
ret
inc
ficoms
insl
push
pop
aad
push
or
dec
or
lret
sub
cli
cs
cltd
loop
test
pop
stos
popf
sbb
cltd
adc
dec
push
insb
leave
dec
sbb
push
push
daa
pop
and
push
lcall
sbb
jmp
icebp
cld
xchg
adc
cmp
pop
jne
fxch
pop
sbb
jg
shr
loopne
pop
cmp
or
mov
push
xor
add
push
inc
adcb
adcl
jns
dec
jge
push
or
addr16
pushf
call
rcr
inc
scas
mov
nop
sub
xchg
dec
jmp
add
inc
dec
add
jecxz
daa
jmp
mov
add
pushf
push
out
add
jmp
jb
test
push
pop
push
into
lock
mov
rcrl
addl
inc
push
jg
lods
xchg
dec
movsl
xchg
fcmovu
and
fwait
rol
pop
jge
loopne
push
stc
cmp
ja
neg
orb
mov
dec
add
and
dec
clc
repnz
mov
rcrl
movsl
test
ds
cmp
push
outsb
or
inc
lret
push
addb
mov
jmp
dec
loope
pushf
mov
test
pop
rclb
subb
inc
pushw
add
or
shr
push
scas
xor
divl
jb
push
pop
std
in
and
movsb
dec
add
push
pop
push
sub
mov
dec
test
inc
les
jge
xor
inc
into
lret
jecxz
pop
clc
add
pop
sub
jmp
add
add
shll
pop
sub
ljmp
daa
sbb
pop
cmp
bound
repnz
xchg
push
dec
dec
sbb
and
push
dec
and
icebp
je
aas
xchg
xchg
icebp
in
mov
dec
fwait
sub
imull
xor
sbb
roll
cmp
int
jmp
add
add
cli
xor
add
jmp
jb
loop
loopne
bound
or
mov
push
push
adc
cmpsl
sub
into
add
add
xchg
cmpsb
add
push
or
inc
xchg
inc
cltd
sbb
add
mov
sub
pusha
mov
push
mov
pushf
neg
inc
test
push
loopne
shr
add
mov
pop
and
dec
jmp
sahf
faddl
fs
icebp
add
aas
jno
dec
mov
cmpsb
loop
ja
insb
movsl
gs
pop
cmp
movb
clc
lahf
push
mov
xchg
js
gs
add
sub
cmp
pop
mov
and
insb
dec
neg
xor
jecxz
mov
andb
data16
int
enter
mov
int3
int3
mov
into
cmp
shr
sar
pop
sub
lahf
stc
push
or
or
loopne
jns
fcompl
stos
cmp
adc
fldl
pop
and
mov
add
mov
cmp
sub
sbbl
dec
jl
inc
jmp
cmp
jge
out
dec
into
mov
jmp
cwtl
push
pop
xor
das
mov
inc
je
ret
out
push
jmp
pop
sub
outsl
ret
add
pop
or
shll
push
add
loop
push
sub
and
js
jg
daa
push
mov
lcall
aam
mov
out
aaa
adc
popa
pop
out
push
icebp
add
or
or
cmp
add
in
and
or
dec
nop
sub
push
pop
push
fsub
add
push
sub
stos
shrb
ret
aam
inc
jecxz
ss
inc
inc
lret
in
shlb
and
or
lock
outsb
jns
sbb
das
adc
rcrb
idivl
mov
or
pop
xor
imul
add
adc
push
adc
fldt
add
mov
jmp
popa
out
pop
add
push
mov
sbb
sub
fldl
push
mov
mov
mov
push
adc
or
sub
jbe
mov
or
dec
aaa
adc
pop
lock
push
jmp
stos
mov
js
add
push
pusha
es
lods
and
jo
xchg
fimuls
xor
cmpsb
adc
js
rolb
sub
inc
shr
add
dec
mov
jmp
cmp
pop
or
aam
dec
mov
vaddpd
stc
xchg
mov
dec
adc
sub
xor
adc
test
mov
sub
push
subl
addb
xor
push
and
sbb
add
and
je
jb
add
les
outsb
pop
and
leave
adc
das
mov
adc
pshufw
lea
pop
out
and
mov
das
push
and
jb
fdivs
shl
outsb
sub
sti
add
add
jmp
pusha
fnsave
pop
jl
insl
inc
es
mov
jmp
mov
sbb
xchg
push
pop
jp
and
add
aad
cmp
daa
adc
sahf
xor
out
push
xor
out
sbbl
cmpsl
pop
mov
sarl
push
sub
sub
xchg
mov
movl
shlb
mov
adc
ljmp
jmp
add
and
cmp
mov
add
stc
pop
mov
jo
push
loope
xor
or
pop
js
fbld
cs
inc
jmp
push
adc
test
or
sarl
mov
sub
test
dec
stc
insl
add
add
std
inc
sub
adc
jg
add
data16
addr16
test
add
mov
imul
jo
bound
imul
or
inc
fstpt
test
pop
gs
test
jbe
jmp
pop
cmpsl
jmp
push
jae
test
xor
pop
popa
sbb
les
int3
in
or
fiaddl
xor
cli
cmp
or
mov
data16
jmp
cmpsl
xchg
jmp
jecxz
into
push
repnz
pop
repz
push
in
mov
rcrl
xor
cs
pop
in
inc
push
push
mov
jmp
daa
rol
inc
bt
and
mov
sub
scas
int3
jmp
mov
cwtl
or
ret
shll
dec
mov
cs
add
sub
xor
push
dec
mov
push
mov
mov
or
sub
movb
jnp
adc
mov
or
cwtl
mov
mov
and
adc
cs
inc
das
adc
lock
sub
jle
test
ret
or
test
xchg
sub
enter
sub
pushf
add
pop
std
daa
or
dec
in
cs
out
sub
push
sbb
lahf
popw
jge
repnz
sbb
mov
cmp
jb
dec
jle
cmp
popa
or
add
or
rcl
call
mov
dec
sbb
jbe
gs
pop
andb
loopne
scas
and
sub
push
xchg
push
adcl
ficoml
xchg
lret
xor
scas
fnsave
or
push
aam
fs
scas
fs
iret
and
sub
sub
mov
and
adc
popa
push
adc
pop
into
test
aad
ret
sbbb
dec
mov
sbb
sbb
add
jmp
push
mov
shll
ret
sub
call
add
ret
mov
lods
aam
jmp
loopne
inc
inc
jl
add
push
pop
shl
add
lock
jb
dec
mov
xchg
cmp
push
add
mov
insb
pop
adc
imul
adc
xor
inc
bound
and
pop
rolb
dec
add
mov
jg
std
sub
mov
xlat
movsb
or
add
inc
pop
and
xor
not
xor
leave
repz
or
pop
and
adc
inc
lods
cltd
sbb
in
arpl
xchg
das
push
pop
add
xchg
pop
inc
leave
sub
mov
mov
cmp
shlb
inc
dec
insb
je
xor
decb
dec
imul
sub
lret
lock
jnp,pn
dec
dec
fbstp
loopne
mov
clc
xorb
fstpl
pop
in
push
es
mov
cmp
adc
push
pop
js
lds
fsubrp
das
bound
aad
nop
push
jge
aas
lret
sbb
sbb
insb
push
jmp
xlat
and
push
xchg
push
pusha
xchg
inc
and
cld
icebp
sub
clts
sbb
jmp
jmp
add
inc
adcb
in
and
pop
repz
fadds
sbb
or
sbb
mov
xchg
mov
xchg
mov
push
jmp
jbe
in
pop
cmc
pop
push
fdivrl
fadds
imul
pop
pop
std
fwait
shlb
sub
inc
xor
or
ror
outsl
adc
sbb
popa
add
jmp
std
sub
rorl
pop
es
adc
xor
lea
dec
jbe
push
stos
ret
inc
mov
xor
xchg
lahf
adc
or
sbb
test
inc
loope
xor
je
xchg
neg
push
or
lcall
jmp
clc
jo
or
test
testl
xor
dec
test
mov
pushl
sub
jmp
mov
aaa
lea
testl
sub
sub
xor
pop
push
push
jl
xchg
or
or
xchg
jns
pop
arpl
cwtl
in
pop
data16
mov
nop
mov
jmp
adc
shrl
imul
repz
mov
jge
cmpl
inc
adc
push
pop
push
dec
hlt
lds
and
call
sub
mov
dec
push
add
mov
add
jle
mov
sbb
add
jbe
sub
cmc
inc
mov
aaa
sub
xor
in
fs
pop
fdivrs
insb
cmp
je
gs
dec
ja
fmul
sbb
xchg
jnp
mov
pop
add
and
sbb
idivl
leave
out
repz
inc
push
loop
and
nop
add
push
pushf
les
lret
mov
push
jnp
cmp
dec
test
ljmp
dec
sbb
cmc
xchg
cmp
pop
in
repz
dec
or
jmp
sbb
dec
sbbb
or
mov
adc
push
push
mov
mov
or
in
push
es
cmp
loopne
xchg
setge
mov
mov
pop
out
or
and
xor
data16
repnz
jecxz
nop
lea
test
mov
fwait
adc
xor
add
pop
inc
push
insb
popa
push
sahf
imul
test
adc
add
stos
xor
sbb
adc
sub
jl
fiadds
sbb
sbb
inc
sti
mov
or
or
mov
into
cmpb
in
rorl
inc
jmp
bound
xor
shrl
insl
push
add
iret
scas
mov
das
outsb
dec
mov
xor
imul
cmp
pop
pusha
sub
pop
jne
xor
sbb
sub
jb
or
enter
adc
dec
icebp
pusha
outsb
into
jno
sub
xor
sbb
orb
scas
pop
cmpsb
cmp
fs
xchg
leave
rorl
pop
add
adc
insl
aam
sbb
and
and
popa
pusha
mov
push
push
add
add
xor
inc
fcom
imulb
inc
notl
or
int3
pop
jmp
fsubs
das
and
fsubl
mov
add
xor
mov
and
mov
dec
or
cmp
jge
or
push
mov
jge
jmp
pusha
addr16
je
cmpxchg
or
daa
push
gs
rorl
fiadds
and
rcl
jp
jne
pop
adc
scas
mov
inc
pop
pop
cmp
or
pop
mov
ljmp
sbb
xchg
sti
jo
add
dec
mov
cmp
add
mov
xchg
inc
xchg
out
jmp
or
fisttpl
test
push
push
das
test
shlb
xchg
shrl
push
jle
or
jb
repz
pop
push
pop
fstpt
jnp
lea
jne
pop
pop
and
xchg
call
divl
je
repnz
loopne
adc
dec
jb
add
ret
mov
pop
into
or
aam
mov
xor
push
lods
mov
sub
ljmp
and
pusha
dec
out
add
mov
negb
pushl
xchg
push
dec
pop
adcb
mov
mov
bnd
call
aaa
xor
fs
dec
mov
mov
pop
or
xor
jecxz
cwtl
pop
jne
add
not
jmp
add
icebp
cmp
pop
sub
lea
jecxz
mov
add
cld
enter
sbbl
in
push
pop
lahf
loop
add
pushf
sub
push
mov
cmpsl
inc
lcall
push
xchg
inc
mov
jmp
mov
add
in
clc
xchg
cmpsl
dec
or
ret
out
sahf
cmp
or
jmp
jbe
pop
jo
and
add
pop
adc
xchg
into
cli
push
in
mov
ds
lods
inc
cltd
inc
cld
jecxz
cltd
sub
push
pop
ffreep
loopne
push
pop
dec
fstpl
pop
sarb
mov
sarb
andb
dec
push
add
lret
pop
push
int
cld
jmp
outsb
xchg
pushf
mov
mov
daa
sbb
mulb
lods
sbb
negl
ja
movb
out
mov
xor
lret
dec
xchg
xchg
add
dec
sub
rclb
mov
gs
add
push
dec
dec
dec
sub
imul
xor
pushf
pop
and
dec
cmp
jb
push
jl
jo
lds
daa
and
bound
sub
xchg
pop
test
sbb
sub
jmp
push
pop
stos
jb
pop
pop
push
test
pop
pop
shl
pop
mov
sbb
cmp
xor
imul
cli
mov
insl
sarl
bound
mov
sbb
adc
out
icebp
into
std
loopne
push
jbe
daa
cmp
push
mov
push
loope
push
popa
inc
jle
xchg
adc
add
inc
mov
dec
sub
dec
test
inc
int3
ret
push
das
mov
pusha
fdivr
out
add
pop
pop
sub
outsb
cmc
pop
cmp
in
dec
push
cmc
daa
rolb
adc
dec
and
outsb
neg
inc
mov
fucom
ss
repnz
xchg
ss
add
das
xchg
aas
and
mov
jge
sub
gs
out
lcall
inc
cltd
jne
cli
les
jne
lcall
shlb
push
daa
push
mov
mov
xorb
data16
and
adc
xchg
dec
dec
pop
mov
das
cmc
adc
int
int
scas
fidivrs
shl
push
ret
aas
xchg
push
clc
cmp
es
loope
js
and
dec
xor
pop
inc
push
xchg
loop
jmp
repnz
insl
push
clc
pop
aad
adc
sbb
cmp
dec
jl
sbbw
lcall
lcall
mov
outsl
pop
push
jmp
sub
push
mov
or
xor
inc
inc
pop
loopne
or
std
jp
adc
test
mov
imul
mov
sub
push
outsl
cmpb
jmp
and
cmp
mov
or
dec
add
or
pop
nop
pop
push
lds
orl
mov
mov
in
test
ds
sti
xor
mov
adc
ror
fldt
mov
inc
popf
in
bound
push
push
push
jge
and
sbbb
inc
or
rorl
add
mov
jmp
dec
lods
mov
pop
test
pop
lock
divb
dec
std
mov
adc
out
mov
hlt
ljmp
add
pop
lahf
ret
popf
test
jb
jo
pop
inc
cmpsb
cmp
adc
cmpsl
rorl
push
dec
pop
out
sub
cmpb
imull
jg
jae
fistps
mov
mov
xor
push
lahf
ss
fdivrp
bnd
das
push
repnz
sbb
repz
int3
add
outsb
loop
sarl
add
cmp
or
add
roll
lret
lock
mov
movsb
popa
jmp
xchg
push
add
addl
sbb
adc
nop
cmpsl
adc
push
lods
jnp
jp
push
ret
or
push
pusha
jle
push
xor
or
pop
stc
lret
xor
movsl
fsubrs
and
cltd
sbb
addl
or
shrb
xchg
cmc
fs
push
scas
imul
jb
sti
fisttps
lods
dec
out
jge
pop
push
mov
dec
shlb
fildll
imul
sub
ja
jns
xchg
mov
sub
lock
loop
loope
fists
or
out
or
xlat
fbstp
cmp
sbb
push
sub
or
pop
push
dec
adc
sbb
fiadds
pusha
clc
push
rorb
jnp
inc
popf
bound
fs
lods
es
cmpb
inc
popa
sbb
or
jnp
stos
inc
mov
mov
add
pusha
fistl
cld
push
adc
iret
sarb
mov
dec
rcll
call
rolb
pop
push
enter
lods
leave
in
push
xchg
and
dec
mov
mov
push
subb
jle
jge
pop
jmp
test
aaa
shr
dec
rol
push
pop
cmp
or
icebp
cmpsl
or
and
push
mov
aaa
or
adc
jmp
jmp
adc
adc
mov
push
mov
pop
mov
lahf
dec
pop
pop
adc
sbb
push
push
mov
scas
and
sub
in
mov
int3
lahf
push
push
aad
daa
stos
xor
inc
jmp
pop
xchg
mov
test
and
adc
dec
ljmp
push
add
pushf
dec
cmp
sbbb
enter
notb
pop
add
sub
mov
push
and
inc
and
add
addb
movsl
dec
pop
mov
sub
inc
or
pop
mov
ljmp
out
or
jg
and
jmp
push
inc
repz
inc
pusha
insb
push
shlb
fldenv
mov
inc
push
inc
cmp
or
sbb
daa
push
pop
sub
and
fs
cli
add
mov
jmp
test
lret
or
test
push
cmp
fisttps
pop
sub
or
pop
icebp
xchg
iret
xlat
icebp
push
mov
and
popf
dec
shl
insb
out
add
jl
int3
dec
daa
cltd
outsl
js
push
lds
pusha
jmp
rclb
xchg
dec
adc
xchg
xor
xor
sbb
adc
in
add
rcll
adcb
test
mov
bound
add
xlat
sbbb
or
pop
je
add
aam
adc
call
adc
or
jae
pop
pop
xchg
mov
dec
cmp
call
or
jno
das
les
test
fnstenv
or
push
ret
add
pop
aas
jecxz
cmp
push
sbb
and
jge
bound
inc
ja
jae
gs
pop
pop
neg
or
rorb
paddb
rcrb
ret
loop
jmp
push
mov
leave
sub
mov
loope
lret
cmp
xchg
popa
test
and
pop
lcall
pop
push
mov
mov
movl
pop
push
xchg
repnz
mov
jno
jns
js
pop
cli
addr16
mov
mov
push
pop
push
and
mov
push
xchg
xchg
dec
cmp
and
sub
dec
or
pop
sub
out
dec
xchg
adc
dec
inc
je,pt
adc
in
adc
cmpsl
push
mov
add
lds
add
or
jp
xchg
push
cmpsl
jg
clts
nop
test
arpl
push
push
aad
adc
xchg
inc
into
lods
mov
or
pop
mov
and
xor
inc
lds
pop
mov
xchg
xchg
aad
sub
jns
jle
addr16
xor
or
or
ja
aas
clc
in
push
inc
inc
inc
sbb
sar
mov
scas
mov
jno
imul
ret
jbe
movsl
in
shlb
add
and
adc
xlat
xchg
repz
fadds
aad
in
rcrl
inc
rol
test
cmpsb
daa
dec
lods
xchg
mov
cmp
fistps
xor
or
cli
js
cmpb
mov
xchg
arpl
sbb
addr16
shl
inc
sub
aaa
sub
xor
dec
in
or
add
lret
pop
incl
jle
mov
jns
aam
shr
popf
pop
sbb
pusha
push
repz
add
inc
cld
xor
jmp
jp
pop
enter
test
das
imul
dec
out
and
addl
dec
adc
or
fidivrl
ja
mov
ret
push
fsubs
addb
daa
sub
xor
sub
and
loope
or
or
pop
clc
repz
cs
in
fucom
cmp
not
push
push
dec
aad
out
push
xor
stos
mov
sub
or
jbe
inc
mov
mov
aaa
sub
ret
cs
add
sub
add
or
or
adc
and
ret
shlb
les
mov
imul
aam
inc
sbb
lds
pusha
push
popf
dec
insl
jle
sub
cmpsb
mov
or
xchg
jnp
xor
stc
pop
fdivl
and
add
pop
shr
cmc
mov
sbb
sub
jo
cli
loope
xor
push
scas
xor
jmp
sbb
cwtl
shrb
aas
sbb
pusha
push
xorb
in
cmpb
fwait
and
sub
xor
and
aam
and
inc
mov
push
adc
mov
xchg
push
xor
pop
in
or
pop
pop
lods
cmp
jae
cmp
jmp
out
pop
jbe
add
dec
sbb
orb
test
inc
xor
rorb
push
push
sbb
inc
call
fldl
add
jmp
cld
push
push
not
xchg
xchg
push
push
leave
ret
jge
jecxz
lods
dec
or
and
mov
lods
aad
mov
ret
and
daa
xchg
jno
or
dec
das
add
icebp
jl
ror
lods
adc
mov
or
xor
dec
add
push
shl
adcb
sbb
sub
push
jo
dec
pop
lods
jmp
leave
mov
fmull
enter
insb
xabort
push
pop
xchg
imul
dec
mov
cli
inc
jecxz
jge
test
leave
jp
mov
xor
clc
bound
ds
push
arpl
in
test
jnp
push
add
sub
push
das
jmp
lret
out
cwtl
pop
inc
leave
or
push
mov
xor
mov
outsb
fmuls
or
mov
popa
shr
aam
push
push
mov
pop
adcb
jmp
je
xor
orb
or
pop
aaa
inc
xchg
sbb
lea
or
adc
xchg
es
cltd
imul
inc
rorb
mov
jmp
pop
and
bswap
das
add
sub
mov
push
sbb
fsubrl
jno
dec
jmp
mov
cmp
sub
mov
mov
jno
sub
jmp
adc
addl
xor
xor
popa
push
cmp
rol
ss
dec
jmp
pop
or
sarl
push
jp
rclb
sub
pop
add
not
jne
cli
js
sbb
cs
and
addr16
mov
test
and
je
dec
jo
divl
sbb
sbb
xor
sbb
sbb
add
pop
cs
inc
lcall
adc
mov
out
dec
inc
fprem
mov
clc
mov
out
in
sub
test
xchg
xor
and
inc
pop
push
pop
and
jae
and
or
test
sbb
imul
addb
push
push
mov
jmp
mov
pusha
sub
jo
daa
pop
push
hlt
dec
pop
mov
sub
or
rolb
cmc
lds
mov
sub
add
into
jle
mov
maxps
sub
jb
fcmove
fxch
lret
dec
lock
and
push
sub
mov
clc
scas
sub
ret
loope
lahf
mov
pusha
shrl
xchg
push
add
std
jmp
loop
es
cwtl
add
or
xchg
xchg
or
icebp
cmp
pop
add
sahf
lcall
and
and
mov
rcrl
mov
sub
sbb
ficompl
jno
mov
add
push
push
mov
add
cwtl
jae
fidivs
or
mov
push
adc
arpl
add
pop
flds
neg
xchg
push
cmp
adc
shl
enter
add
sub
flds
out
push
scas
pop
jmp
dec
rcrb
cmp
mov
jp
je
cmp
adc
iret
jns
inc
es
jle
roll
or
in
aaa
popf
sbb
hlt
daa
bound
hlt
add
push
pusha
lret
ljmp
add
shll
dec
imul
sub
testl
cs
popf
adc
shll
call
push
repnz
ds
jecxz
hlt
outsb
lds
dec
iret
push
int3
lret
mov
sti
ja
imul
loop
repz
fcmovb
jp
dec
sub
lret
sub
sub
push
pop
stos
xchg
test
add
mov
push
mov
pop
jnp
pop
inc
test
out
lea
bound
pop
mov
jmp
mov
xchg
mov
mov
clc
xor
lcall
sub
iret
mov
pusha
pop
cmp
push
mov
fiaddl
or
xchg
dec
pop
cmpsl
data16
das
je
loop
pop
ja
leave
pop
icebp
popa
pusha
jbe
add
jbe
sub
leave
and
in
pop
add
or
insb
in
xorl
sarl
ja
and
fisttps
cld
jnp
outsl
rep
lea
dec
lods
mov
jo
xchg
mov
data16
hlt
dec
loopne
and
and
push
push
add
or
or
add
mov
sub
setl
add
sbb
jp
xor
inc
push
push
cli
adc
or
adc
xor
pushf
mov
push
jmp
repz
rol
push
add
sub
mov
sbb
xchg
push
test
inc
mov
in
imul
add
lds
lods
dec
bnd
jmp
and
mov
cmp
xor
or
add
adc
ss
pop
inc
mov
jns
test
mov
fisttps
subb
mov
dec
shll
push
add
push
mov
or
jmp
or
sub
notb
ljmp
add
push
or
addr16
sub
xor
test
push
push
ret
imul
xchg
std
and
xchg
ss
cltd
shlb
inc
pop
lcall
push
mov
test
aam
add
pop
ret
push
push
dec
pop
or
leave
sub
lret
aas
or
add
mov
dec
mov
outsb
out
push
cmp
mov
fwait
or
aad
and
mov
sub
cmpsl
ficoms
pop
ja
pushf
daa
cld
push
repnz
xchg
fstl
and
aad
arpl
pop
insl
addl
vxorps
mov
pusha
pop
inc
andb
out
sub
enter
jo
xchg
addl
icebp
add
or
cld
es
jbe
and
xchg
pop
idivl
push
cmp
add
shr
or
jg
lods
mov
or
jmp
or
inc
jecxz
or
psubsw
pushl
or
cltd
test
sbb
inc
sub
cmp
andb
ret
sub
mov
ja
loop
incb
xor
movl
fwait
inc
jmp
push
mov
loopne
jno
data16
addr16
mov
pop
push
jle
fcoms
add
aad
fdivs
xchg
loope
popa
pop
lret
and
adc
push
or
shll
sub
mov
mov
sub
call
jge
cmp
lcall
and
dec
pop
pop
cmp
cwtl
mov
mov
ret
sub
push
iret
jl
dec
sub
adc
out
lret
add
call
or
enter
jge
dec
sub
mov
cmp
or
stc
rorb
lea
lods
jmp
mov
stos
xchg
push
test
incb
add
lret
mov
icebp
nop
cld
xor
jl
mov
outsb
repnz
xchg
and
push
add
jmp
daa
add
incl
jbe
adc
icebp
xor
not
add
adc
leave
int
xor
sarl
into
pop
or
jnp
mov
call
jp
cmp
in
repz
sbb
or
shll
aas
lcall
in
dec
lret
outsl
add
bound
dec
add
loop
xchg
pusha
push
adc
popl
sbb
ljmp
or
or
pop
xchg
int
push
push
mov
push
add
adc
add
xor
jns
sbb
add
js
hlt
cmp
mov
mov
xor
fimuls
add
push
mov
jne
insl
scas
push
sbb
jmp
repz
pop
and
cmp
adc
jp
push
add
js
push
xor
daa
jno
notl
pop
mov
cld
inc
das
aam
clc
jmp
mov
lods
mov
push
add
outsl
daa
es
sub
add
stos
xor
test
call
imul
cld
inc
loopne
loope
mov
mov
sub
ficoms
jmp
mov
mov
es
mov
fidivs
mov
cmp
jmp
stos
std
pop
jge
out
mov
xchg
rcrb
dec
fbstp
pop
push
pop
hlt
mov
mov
pop
cwtl
xor
add
pop
sub
mov
sub
inc
jo
push
stos
add
sbb
mov
cltd
das
cmp
shlb
adc
adc
sbb
into
mov
sbb
out
or
jo
xor
xor
adc
adc
push
push
mov
test
add
in
add
add
jge
movl
sub
cmp
jmp
mov
mov
outsb
and
aas
adc
fnstsw
xor
aaa
jg
cmp
fcoms
cvtpi2ps
loopne
sbb
pusha
and
pop
ds
orl
jmp
int3
dec
or
push
or
xor
les
inc
pop
add
mov
mov
sub
or
ffree
cli
test
pop
leave
push
sub
dec
adc
mov
lock
leave
push
jns
adcb
ret
push
pop
loopne
add
pop
xor
xor
popa
pop
mov
dec
sbb
add
cmp
xor
in
mov
xor
in
adc
mov
mov
inc
sub
inc
pusha
push
push
loope
jle
and
mov
pusha
cmp
cmp
lods
push
pop
and
andb
sbb
or
adc
push
xor
mov
or
xlat
mov
dec
imul
adc
dec
sbb
fldl
sbb
ret
into
pop
lock
pop
popf
fildl
jmp
sbb
xor
outsb
mov
adc
sbb
je
rcll
and
iret
jno
outsl
push
outsl
or
imul
or
add
lcall
sbb
push
pop
mov
out
cmc
push
mov
xor
daa
pop
pop
pop
dec
or
xlat
pop
fs
repnz
sbb
pop
sub
mov
notb
pop
arpl
mov
jg
xlat
dec
test
mov
xchg
add
iret
jne
jmp
jmp
repnz
outsb
daa
sarb
mov
jns
push
and
lods
xchg
dec
repz
daa
cmp
sahf
lods
xor
lods
add
adc
cmp
leave
testl
fadds
bound
dec
dec
dec
mov
into
add
cmp
jmp
sbbb
push
jge
icebp
sahf
pusha
addl
imul
and
pop
dec
sub
aas
add
lods
mov
jge
sbb
mov
sub
call
inc
shl
and
sbb
pop
ja
sbb
addl
xchg
arpl
push
and
add
pop
mov
es
xchg
and
fcoms
hlt
dec
je
out
add
adc
adc
cli
xor
sbb
outsb
inc
jge
mov
jmp
sti
xor
sub
fisubl
xor
ret
inc
lods
lret
push
sarl
das
mov
dec
pop
in
rolb
mov
mov
xchg
popf
incb
jl
push
rcrb
sub
mov
xor
loopne
dec
or
cli
pop
not
addr16
ljmp
jo
inc
xor
push
fwait
daa
xor
sub
fwait
push
dec
jmp
test
add
mov
call
cmpb
outsb
xor
aam
stc
sbb
jp
adc
call
negb
jecxz
add
and
iret
orl
sbb
pop
pop
push
fadds
xor
and
and
shrl
push
xchg
adc
dec
jmp
int
mov
arpl
inc
xor
pop
sub
add
jo
mov
sub
xorb
jp
cmp
dec
lret
adc
in
or
jl
popf
fs
xlat
pusha
rcrb
jb
insb
xor
adc
stc
push
or
or
jmp
add
incl
shll
ret
in
popf
mov
andb
push
inc
add
fmuls
and
sub
imul
mov
int3
iret
sbb
add
inc
push
mov
jmp
fs
imul
xchg
add
aaa
jmp
push
repnz
and
lret
lods
aam
sub
sub
add
pusha
sbb
popw
jb
pop
aam
daa
xchg
sbb
or
adc
sub
notb
mov
fiadds
push
push
pop
pop
out
in
mov
xchg
dec
pop
mov
mov
mov
cld
dec
imul
ds
jmp
jle
mov
sub
pop
pop
out
cwtl
das
rorl
dec
cld
sub
inc
dec
inc
outsl
jecxz
add
jge
fs
mov
mov
mov
mov
cmp
out
xor
leave
pop
sahf
cmpsl
dec
cmc
imul
subb
lods
push
pop
add
sbb
aaa
adc
les
les
inc
or
insl
jmp
rcrl
insb
dec
ds
mov
push
mov
add
pop
push
test
mov
xchg
in
ja
in
push
fs
or
sub
sub
shlb
lea
packuswb
mov
pop
mov
pop
aaa
push
outsb
mov
pop
pop
add
sub
pop
out
mulb
and
jnp
iret
sub
pop
mov
jne
xorb
pop
js
scas
mov
add
jmp
push
es
mov
jp
and
xchg
popf
faddl
pusha
jne
add
lods
adc
or
or
sub
rolb
sbb
and
lcall
mov
jb
add
xor
jmp
mov
mov
loope
cmp
jns
scas
sub
mov
cli
ja
pop
xor
shrl
imulb
xchg
in
pop
movsl
sarb
adc
pop
jb
bound
push
cs
out
mov
sub
scas
int
adc
rcll
movsb
jmp
xchg
or
rorb
push
push
push
pop
push
bound
xchg
sub
mov
jmp
shlb
mov
pop
jmp
iret
fnsave
sbb
mov
jbe
ds
divl
mov
cmp
xor
insb
push
enter
jle
push
dec
dec
xchg
out
sbb
inc
negl
mov
das
add
fsts
test
sub
adc
rorb
sub
push
push
std
test
cmp
js
and
out
loop
push
jnp
push
jnp
add
xor
xor
add
shr
xor
sub
push
arpl
xchg
sub
mov
outsl
add
and
leave
jmp
inc
sub
sub
out
pop
xorb
inc
mov
or
outsl
mov
push
hlt
imul
lcall
xchg
sbb
push
js
pop
lcall
test
push
pop
std
pusha
mov
pop
sbb
dec
in
or
or
cmc
or
push
or
scas
shl
inc
push
adc
dec
stc
test
popf
sub
bound
pusha
sub
fmuls
adc
daa
call
pop
lret
jmp
insl
inc
cli
les
hlt
mov
pop
les
dec
arpl
pop
add
test
cwtl
aam
xchg
mul
cmp
push
fdivs
jl
addb
push
mov
mov
mov
pop
dec
mov
pop
adcb
inc
mov
in
aad
ret
dec
cmp
icebp
and
inc
pop
aas
rol
add
jl
xorb
and
cwtl
jb
fstl
or
les
orb
pop
push
pop
aas
fdivs
adc
mov
stos
and
mov
sub
jmp
aas
ret
sbb
shll
push
and
lock
dec
push
cmp
mov
dec
leave
fsubp
ret
or
outsb
inc
pop
sbb
inc
dec
add
mov
test
cltd
adc
dec
mov
iret
add
or
push
inc
xor
pop
pop
adc
aaa
dec
cli
cs
mov
int
cmc
xor
outsb
fimull
or
std
sub
or
push
jmp
jae
mov
and
pop
divl
mov
sub
outsb
push
adcb
cmpsb
pop
add
jmp
add
imul
and
jmp
es
pop
mov
pop
and
add
jge
pop
repz
sub
in
scas
loop
xchg
stc
push
rolb
sbb
in
cmpsl
add
cltd
je
movsb
pop
dec
add
ret
push
bound
jg
data16
pop
xorl
js
mov
cs
popa
jbe
and
pop
push
xchg
xchg
xchg
out
sahf
scas
mov
notb
aam
jmp
in
fldenv
add
stos
je
addr16
lret
imul
or
xorb
push
imul
mov
adc
push
pop
xchg
lock
stos
sub
pop
or
or
push
and
icebp
sbb
mov
js
or
add
popf
mov
sbb
movsb
push
and
popf
adc
inc
jae
sub
cmp
subb
push
loop
and
es
adc
out
pusha
pop
push
and
xchg
jns
mov
and
jmp
mov
popa
mov
arpl
jns
cmp
push
adc
fildl
jno
loopne
jns
add
addr16
jmp
lock
hlt
fstl
mov
push
jno
ret
pop
push
shrl
lahf
std
push
and
mov
scas
imul
pop
xor
sbb
aam
out
dec
call
sub
imul
mov
and
xor
xchg
push
shlb
out
rep
clc
adc
xor
mov
push
add
mov
add
mov
mov
xchg
sbb
pop
and
leave
bound
call
call
cmc
roll
jmp
cmpsb
jle
or
push
mov
icebp
xor
push
push
rorb
or
jecxz
pushf
jg
pop
mov
sarb
push
test
sub
and
stc
subl
inc
popa
push
jmp
pop
decb
dec
pop
cmp
pop
rcrl
loope
imul
and
push
push
aas
call
mov
shl
push
jno
dec
inc
shl
sbb
clc
iret
syscall
jns
insl
sub
mov
inc
mov
or
push
and
pusha
mov
jle
xor
pop
jg
mov
cmp
dec
loop
xchg
add
pusha
add
out
or
mov
push
bound
es
sti
push
leave
out
imul
jbe
adc
mov
pop
pop
push
loop
popa
and
inc
pop
shr
ljmp
fs
hlt
inc
pop
imull
and
push
add
pop
insb
mov
leave
test
jmp
stc
mov
pop
std
xchg
lahf
jg
sbb
or
pop
xor
mov
add
lea
add
sbb
cli
fucom
xor
and
insb
sahf
test
sbb
mov
or
jns
cmp
mov
push
or
loop
shll
lret
call
into
es
or
dec
inc
mov
cmp
ljmp
push
pop
mov
shl
xor
sbbb
sbb
rcll
test
ret
negb
ret
icebp
push
add
sub
xlat
mov
jmp
sti
xor
push
dec
cld
dec
loope
pop
add
pop
mov
adcb
push
xchg
lahf
daa
imul
into
pop
jmp
sub
push
sti
out
dec
push
push
sti
sahf
ljmp
mov
jmp
mov
adc
add
fsubl
pop
stos
xor
cmp
or
fistps
lods
sbb
mov
mov
rcl
notb
push
cmp
imul
pop
jne
mov
xor
adc
fisttps
jmp
test
pop
sub
fcomps
fs
mov
lds
add
adc
aad
mov
daa
push
mov
dec
pop
ljmp
in
add
adc
and
add
adc
nop
jb
push
and
aaa
adc
or
iret
add
push
push
sbb
mov
dec
repnz
and
lods
dec
das
xlat
pop
fsubrl
push
sbb
push
rcrl
divl
das
ret
sub
jno
and
loope
cli
scas
add
jmp
mov
add
and
outsb
loopne,pn
leave
mov
mov
push
inc
push
iret
mov
jle
jb
pop
pop
mov
mov
pop
lds
in
pop
pop
or
push
jl
mov
test
sahf
call
push
cmp
lea
adc
inc
jmp
notl
out
js
or
lock
jbe
daa
icebp
adc
mov
add
insb
daa
pop
or
and
push
push
sub
mov
in
idiv
jp
mov
push
jmp
mov
pusha
and
add
mov
cld
sub
imul
push
movsl
mov
rclb
dec
es
imul
add
inc
push
push
adc
ljmp
or
pop
xor
test
repnz
bound
xor
or
movsl
roll
and
movsl
imul
jmp
add
push
mov
add
sbb
push
int
shll
in
pop
in
inc
aad
and
sub
jp
mov
mov
aam
test
or
jo
jnp
dec
push
loope
cmpb
popa
pop
pop
adc
adc
or
pop
add
jb
js
add
data16
into
sbb
sbb
das
adc
or
shl
loope
push
cltd
in
test
or
xor
insb
rolb
mov
or
jmp
cmpsb
repnz
xchg
je
sbb
repnz
push
push
jmp
add
adc
xor
sti
mov
mov
aad
adc
inc
ret
xchg
jnp
pusha
adc
gs
sub
neg
dec
adc
adc
push
stos
mov
push
add
inc
jl
pop
pop
push
jl
push
push
sub
fs
sbb
cli
mov
lock
rcrl
jmp
jp
or
mov
pop
dec
mov
add
xchg
sub
mov
push
rolb
cld
xchg
inc
fsts
stos
test
out
cmp
ret
push
adc
not
scas
loop
dec
das
add
mov
sub
icebp
xor
in
popf
sub
popf
sarl
xor
sub
mov
sub
loope
icebp
sbbb
push
data16
mov
and
data16
adc
pop
pop
test
and
inc
stos
jecxz
dec
push
xor
not
inc
add
or
fidivrl
add
insl
loopne
push
xchg
fdivr
sti
xor
push
jmp
mov
inc
pop
cmp
sbb
jmp
jp
outsb
dec
xor
sub
xchg
fucomp
jp
lods
push
sbb
and
adc
popf
dec
out
daa
push
xor
aad
add
inc
add
mov
call
push
mov
lods
pop
sti
inc
cmp
in
mov
shr
test
mov
cmpsb
xor
pop
int3
dec
or
fmul
shl
fdivrs
test
lods
fildll
and
mov
test
lret
icebp
sub
inc
adc
lods
lcall
and
xor
or
jge
pop
mov
inc
adc
pushf
add
jno
xor
jbe
ljmp
xchg
adc
movsl
push
xor
cwtl
jns
or
and
mov
inc
add
aad
or
les
inc
lahf
cmpxchg
add
xor
or
sub
jne
push
add
pop
sub
mov
pop
sbb
cmp
mov
inc
aas
cmp
inc
stos
adc
in
dec
mov
adc
js
add
int3
sbbl
std
push
and
sbbl
js
jmp
sub
pop
lock
sub
sbb
push
cmpsl
int3
testl
mov
ret
add
gs
mov
cwtl
push
stos
mov
mov
dec
mov
dec
addb
add
daa
and
adc
fs
lea
mov
mov
popf
lock
pop
pop
and
pop
daa
sub
gs
cmpsl
clc
and
cs
jb
xor
sbb
xchg
test
push
in
mov
push
cltd
jbe
add
movsb
in
repz
pop
push
or
xor
enter
push
enter
sbb
inc
jp,pn
and
aad
lods
add
xor
or
jmp
add
or
fsub
jnp
dec
lcall
push
pop
into
pop
sub
add
std
fsts
xchg
push
xor
mov
mov
xchg
add
jmp
popa
shrl
repnz
mov
xchg
cmp
push
dec
test
add
rorb
adc
cmp
loopne
xor
mov
jp
loop
rcrb
daa
jmp
pop
std
cmpsl
lcall
jne
push
dec
or
add
mov
mov
fstps
icebp
fwait
addl
mov
cwtl
movsb
jmp
mov
adc
mov
stos
xchg
jmp
aad
das
add
mov
jecxz
pop
and
test
xchg
dec
andb
and
push
stc
nop
mov
ret
stos
mov
cmpb
sub
fcoml
dec
and
adc
push
mov
stos
sub
cmp
stos
sub
or
or
jmp
fnsave
push
es
mov
push
testb
push
inc
cmovp
adcl
outsl
loope
push
arpl
jo
clc
sahf
leave
jecxz
out
test
rcl
inc
and
jp
push
push
pop
xor
jmp
in
out
dec
lods
in
es
xor
sub
push
or
xchg
fsubs
cwtl
cmc
pop
pop
push
test
cmpsl
lds
icebp
push
ds
push
sbb
push
fldcw
shrb
cld
in
add
jl
adc
daa
xor
je
data16
lea
jns
jae
mov
pop
cmpsl
les
stos
and
roll
movsl
add
add
pop
filds
shr
dec
and
push
cmp
push
int
push
xchg
add
in
lock
cmpsl
dec
push
sub
jbe
sub
or
inc
mov
dec
xor
jp
adc
clc
mull
in
test
gs
xor
xchg
or
clc
dec
xchg
fiadds
mov
bound
in
dec
xor
mov
sbb
or
lret
adc
test
neg
add
int
push
mov
jo
pushf
in
and
negb
and
add
or
push
js
rorl
sub
jecxz
jmp
pop
mov
mov
pop
pop
jg
fisubs
or
out
frstor
sti
int3
adc
lds
dec
les
out
push
sbb
mov
mov
jmp
pop
pushl
and
or
stc
subb
in
mov
and
pop
inc
inc
pop
hlt
inc
popf
mov
icebp
add
stos
mov
add
sub
int
lds
rolb
push
popf
pop
test
cmp
lahf
loope
js
pop
xor
scas
jge
mov
add
sub
xor
push
adc
sub
add
sti
fwait
pop
add
out
xor
inc
mov
jmp
mov
sahf
clc
std
lods
mov
repz
xchg
iret
jge
arpl
mov
testl
xor
pop
hlt
mov
pop
mov
and
pushf
lods
xor
xchg
or
cltd
fbstp
push
xchg
ljmp
lret
loop
jbe
push
push
cmpsb
push
inc
or
push
test
add
and
mov
out
js
daa
mov
rcll
test
mov
scas
adc
push
rolb
inc
aas
out
lret
dec
jbe
int
cmp
std
xchg
fs
in
repnz
aam
clc
std
ret
mov
and
add
pop
pop
sub
push
push
cs
pop
pop
or
cmp
bswap
jmp
bswap
mov
mov
adc
ja
push
dec
repnz
ret
jne
jmp
cld
clc
pop
push
jmp
ficoms
adc
adc
inc
cld
lret
or
jle
sub
push
pop
cs
mov
xor
or
xchg
faddp
xchg
imul
nop
or
push
rolb
hlt
pop
mov
mov
sub
into
adc
iret
push
mov
rolb
popf
lock
push
push
adc
pop
xchg
add
xor
pushf
pop
add
lods
in
inc
xor
jae
and
rorb
enter
dec
cld
gs
or
lcall
sub
in
inc
or
shlb
cwtl
or
or
adc
push
mov
cwtl
leave
in
sbb
pop
adc
inc
dec
push
ljmp
pop
fsubrs
pop
dec
iret
inc
daa
inc
aam
sub
hlt
xor
leave
rorl
add
xorb
adc
insl
aas
andb
js
dec
cltd
jae
sbb
jge
lahf
in
cmp
hlt
sbbl
icebp
lock
insb
inc
dec
shl
pop
push
mov
mov
adc
cmp
lods
dec
and
push
push
adc
xor
andl
cld
stos
movsl
mov
scas
xchg
add
rcll
or
inc
ja
cli
sub
add
fwait
mov
and
movsl
popa
pop
shl
mov
mov
das
jl
pop
test
push
imul
lock
mov
nop
scas
outsb
fs
fcomps
rorb
test
ljmp
loope
adc
mov
loop
inc
pushf
xchg
ret
or
mov
and
mov
push
mov
shr
xchg
icebp
pop
or
bnd
add
test
mov
add
and
push
pusha
mov
sub
add
mov
or
shll
loope
mov
pop
push
jle
shr
cmp
lret
pop
decb
imul
jp
push
mov
std
mov
sub
xchg
sar
jo
xor
xor
add
int
push
ror
push
add
add
inc
imul
cmp
outsl
and
cmp
jmp
sbb
inc
shr
xor
sarb
or
in
xor
lock
sub
lods
adc
or
sub
ja
push
out
jae
dec
and
loop
rol
push
sbb
mov
dec
cli
add
sbb
xor
pop
adc
mov
and
ljmp
sahf
sub
ds
enter
sub
inc
gs
sbb
pop
les
and
pop
sbb
push
out
push
sbb
push
arpl
cmp
cmp
inc
dec
or
dec
jae
or
pop
xchg
mov
mov
js
sub
push
mov
and
cmp
jmp
dec
jmp
mov
push
or
sub
mov
imull
das
push
and
lea
xchg
mov
pop
std
add
cmp
fxch
mov
push
push
mov
xor
leave
push
add
pop
scas
xchg
inc
imull
mov
jmp
inc
lea
mov
jg
sub
mov
dec
pop
push
sbb
shr
test
xchg
add
and
dec
rorb
dec
push
adc
pusha
frstor
add
inc
cmp
push
repnz
outsl
and
jb
jmp
push
dec
bound
push
out
or
adc
test
sahf
or
test
fiaddl
pop
push
mov
push
cmp
add
or
add
dec
pop
dec
mov
icebp
adc
lock
out
fcmovnu
adc
xor
inc
mov
stos
lock
hlt
sbb
mov
repnz
and
bound
mov
shr
push
jmp
mov
das
or
jo
add
dec
gs
jmp
mov
and
jmp
inc
aaa
daa
je
lock
adc
pop
cmp
mov
test
sbb
or
xchg
shrb
sub
test
adcb
and
jo
sub
or
mov
sub
imul
pushf
xor
add
xor
aas
and
nop
popa
retw
cmpsl
sub
mov
aam
mov
inc
popl
js
pop
add
add
nop
jp
pop
pop
ret
lret
cmp
loope
sub
mov
sub
jle
cmp
mov
inc
les
test
mov
enter
test
xchg
pop
gs
das
fadds
and
dec
je
mov
fidivs
mov
rcrb
lods
ret
in
dec
mov
or
jle
adc
dec
mov
xchg
push
icebp
add
jg
xor
adc
lret
push
adc
enter
mov
std
aaa
mov
mov
aad
daa
pop
sahf
or
das
outsb
jle
mov
fistpll
imul
add
jmp
sbb
cli
lock
push
cmpxchg
not
inc
pop
push
mov
cs
stos
sub
sub
cmp
jmp
cmp
sbb
pop
adc
xor
imul
dec
mov
adc
loope
imul
adcb
lods
dec
scas
push
inc
loope
jge
push
xor
pusha
mov
sarb
mov
movsl
fsub
add
fisubl
add
or
add
aad
into
jno
xor
dec
sub
push
cmp
shll
cmp
mov
rol
xor
sub
jne
fcmovnbe
adc
jmp
sbb
and
int3
mov
pop
popa
cmc
push
fs
pop
push
hlt
stos
xor
or
adc
or
cmp
jmp
dec
adc
jl
out
out
dec
jbe
hlt
jb
push
inc
jl
inc
or
dec
ror
jecxz
iret
add
or
sbb
cmp
mov
add
test
jb
push
or
mov
pop
aas
lahf
push
pop
or
mov
sahf
test
cmp
fmuls
ret
add
scas
pop
sbb
xor
cli
pop
and
jbe
cmp
rcll
enter
push
inc
sub
mov
repz
add
or
dec
pop
dec
in
jl
pop
and
pop
mov
inc
inc
dec
addl
es
rolb
pop
mov
or
jo
sahf
ljmp
pop
or
sub
shrb
stos
sbb
jnp
dec
jmp
sarb
xor
mov
jnp
adc
adc
out
mov
pop
gs
jmp
out
dec
mov
in
daa
xor
ficoml
ret
lret
inc
bnd
adc
pop
and
mov
les
push
jge
pop
pop
sti
das
add
and
cmpsb
or
icebp
xchg
mov
sub
dec
mov
negb
xchg
mov
mov
std
loop
fildll
push
shl
or
ret
fucom
mov
inc
fs
test
rol
pop
mov
add
addb
cs
dec
je
jle
sub
std
add
push
inc
xchg
mov
mov
fdivrs
sahf
sbb
sarw
dec
cmp
xchg
repnz
hlt
mov
jmp
sub
adc
xchg
fcom
cmp
cld
daa
call
push
sbb
ds
mov
aad
mov
push
push
scas
pop
call
dec
test
add
jne
sub
stos
add
xor
jmp
inc
jmp
shll
add
adc
add
jns
stc
aas
rolb
push
push
or
push
cmp
jb
inc
pop
pop
xchg
lock
stos
mov
add
dec
push
bound
cwtl
lods
sub
jb
add
sarb
sub
push
cmc
lods
fstpt
je
jbe
mov
or
das
call
addr16
mov
push
sbb
pop
mov
int
sub
add
xor
sbb
bound
repz
orl
jnp
cli
mov
pusha
or
mov
and
jmp
or
sbb
mov
inc
negb
and
aam
icebp
push
cs
mov
aas
enter
pop
mov
cli
add
out
outsl
mov
out
jbe
clc
cmc
nop
ds
sahf
sahf
push
inc
push
cmpsb
and
or
inc
fcomps
ficoms
xchg
iret
imul
arpl
sub
push
add
and
pusha
xlat
push
xor
sbb
pushf
cld
mov
and
fsubrl
ficoml
xor
ret
jge
imull
mov
int3
xchg
cld
or
lods
mov
nop
jnp
out
mov
loopne
xor
test
movsl
mov
mov
fsubs
sbb
sub
jmp
xchg
inc
push
mov
xchg
pop
inc
push
lahf
fildll
jmp
rcrb
lds
enter
jl
fdivrl
sahf
movsl
add
outsl
pop
loope
add
call
pusha
daa
pop
jl
call
pop
mov
ja
imul
outsb
imul
add
jmp
loop
mov
add
je
push
pop
popa
mov
das
jnp
dec
out
je
push
int3
mov
dec
enter
repz
sub
in
out
jg
fldl
push
in
inc
lds
dec
inc
sahf
push
fldcw
adc
pop
scas
mov
cmpsb
pop
jnp
cmpb
pop
mov
andb
xchg
adcl
inc
add
or
jge
mov
lea
mov
sbb
xor
mov
mov
imul
sub
mov
scas
push
sub
int
in
xor
cwtl
add
inc
sub
and
jmp
int3
add
sbb
and
outsl
jnp
cwtl
das
mov
in
xor
mov
lahf
xchg
bound
mov
repz
in
mov
nop
and
and
int3
leave
jg
mov
das
pop
xor
push
cmp
cld
add
push
add
ret
sbb
int3
cmpsl
sbb
add
call
and
jecxz
aaa
cmp
sbb
pop
mov
or
or
pop
or
sarb
inc
pop
outsb
or
mov
mov
andb
cmpsb
mov
pop
aaa
xor
cmp
add
add
and
cmp
not
jmp
fsubrs
lods
mov
pop
enter
pop
cmp
pop
cltd
pop
inc
mov
push
rclb
jle
daa
in
stc
add
ljmp
and
cmp
mov
adc
sti
fcmovu
push
jg
rcrb
dec
mov
xor
pop
and
leave
je
fdivrs
lahf
sbb
outsb
mov
cwtl
and
pop
pop
or
dec
mov
inc
add
pop
add
add
fsts
mov
lahf
ret
insb
out
or
mov
pop
daa
stos
loop
in
dec
fstps
roll
and
pop
inc
and
cld
es
mov
add
xor
mov
mov
sub
sbb
repnz
out
mov
out
xor
adc
int3
lods
ret
xor
or
dec
and
jl
inc
xor
cli
sub
ja
rclb
enter
add
shl
sub
sub
jno
pop
inc
cmpsl
mov
mov
insb
aas
cli
sub
sub
cmp
push
cmpsl
jne
mov
std
xchg
fisttpll
popa
push
cmp
xor
aam
mov
add
outsb
sbb
add
push
add
adc
mov
sbb
enter
lods
inc
nop
pusha
imul
jg
mov
dec
add
xchg
subb
sarb
or
add
int
cmp
jmp
sub
loop
hlt
ret
lea
mov
fldcw
add
xchg
insb
mov
arpl
popa
fsubrl
sbb
xchg
sub
jmp
jmp
xchg
push
xchg
sbb
add
or
add
arpl
into
mov
rorb
out
aaa
cmp
cmp
and
mov
pop
orb
nop
lret
push
sub
mov
pop
mov
dec
nop
cmp
dec
add
shrb
mov
pusha
cmpl
pop
mov
cmpsb
out
mov
mov
pop
xchg
js
xor
pop
push
inc
aaa
out
push
mov
mov
push
pop
xor
loope
inc
jae
jl
add
shr
jmp
mov
pop
xchg
jns
dec
pusha
addr16
sub
fucomip
push
adc
sub
cwtl
inc
xor
mov
push
je
mov
push
push
cmpb
aas
test
or
xor
sub
mov
test
out
mov
add
add
dec
cmc
mov
xchg
sbb
and
mov
jp
xchg
adc
lret
and
fs
lds
hlt
mov
cmp
dec
test
push
jg
sbb
xor
inc
or
mov
cs
sub
or
sbb
xchg
jne
or
push
cmc
or
adc
add
stc
jae
or
jecxz
add
inc
xor
lahf
sbb
jno
in
mov
mov
inc
call
cmp
adc
push
popl
mov
ret
call
sbb
fisubs
mov
int3
jmp
add
mov
test
xchg
xchg
push
cwtl
ljmp
or
inc
sub
mov
ds
test
in
repz
outsb
roll
or
nop
mov
gs
jmp
add
and
dec
inc
and
sub
mov
ds
or
and
push
pop
push
jmp
xor
pop
pop
dec
sub
fmull
mov
fs
add
arpl
cmpsl
jae
shll
cwtl
fcomip
xchg
out
add
out
outsb
jge
sbb
or
or
adc
imul
popa
push
test
adc
adc
mov
xchg
push
jmp
pop
sub
add
mov
push
int3
aam
xchg
push
shl
adc
loope
or
push
add
sub
inc
mov
jg
push
sub
lods
add
dec
xor
cwtl
addb
testb
dec
loop
negl
aad
cmp
call
dec
adc
ja
jno
pop
jno
je
arpl
sub
enter
das
aad
lret
jns
loopne
nop
pop
push
sub
aas
jecxz
sub
call
xor
jnp
pop
and
iret
fwait
add
mov
mov
dec
sti
sbb
pop
flds
jmp
pop
pusha
out
pop
sub
loope
inc
or
int
mov
xor
mov
mov
pop
ror
sub
adc
nop
xor
and
jp
xor
orl
push
push
cmp
or
jle
mov
shl
mov
dec
es
fsubs
cmp
cmp
inc
sbb
inc
add
sbb
xchg
xchg
leave
jg
sub
adc
fiaddl
cld
les
aam
lods
add
push
out
fs
jb
jecxz
mov
adc
cmp
cmp
sub
cmp
add
fldcw
movsl
xor
push
dec
inc
xchg
lods
mov
mov
jge
in
sub
and
pop
leave
cmc
inc
jb
shlb
aam
push
scas
shrb
repnz
jmp
lahf
jbe
js
dec
push
out
rol
aas
push
arpl
mov
fimull
jmp
dec
xchg
push
pop
stos
jge
add
pop
jns
dec
push
pop
xor
dec
push
inc
jl
mov
aaa
leave
call
loope
fisubs
mov
mov
sbb
push
filds
inc
into
js
push
clc
sbb
inc
lods
inc
and
ja
mov
fisubl
filds
jmp
test
cmpb
dec
push
mov
mov
mov
sahf
lods
daa
pop
cmp
jno
notl
stos
pop
push
inc
and
insb
push
or
add
pop
jge
pusha
add
cmpb
pusha
pop
fcompl
or
rcrb
test
add
sub
mov
inc
mov
insl
pusha
mov
and
test
jmp
lods
jg
jbe
lahf
data16
and
or
ljmp
movsl
leave
push
jge
cmp
int3
add
xorps
jmp
test
push
mov
jecxz
mov
iret
xor
fidivl
pop
mov
or
stc
dec
dec
jge
inc
call
push
pushw
sti
sbb
cwtl
out
dec
jmp
inc
jmp
hlt
xchg
mov
or
cmp
testb
cmp
mov
roll
and
lret
push
jae
or
push
jns
jbe
add
repz
sbbl
es
in
and
fiadds
mov
push
stos
and
mov
xchg
aam
jbe
int3
sub
ljmp
aad
add
lahf
fdivrp
push
add
and
add
pop
sbb
into
out
cmp
cmp
sahf
mov
out
mov
fbstp
pop
orb
int
and
aas
ficoml
loope
pop
xor
add
and
add
fisubl
add
addb
cmp
ja
les
mov
mov
add
and
or
sub
and
and
jae
subb
scas
daa
out
mov
sbb
push
push
cld
pop
xor
call
out
push
mov
pop
add
mov
insl
adc
mov
jg
outsb
dec
add
or
sub
dec
adc
inc
loope
jp
cmp
jmp
nop
movsb
fwait
add
lahf
push
ret
leave
imul
call
pop
sti
push
bound
loop
or
ret
lods
imul
sbbl
mov
sbbb
jb
dec
push
mov
testb
mov
fisttps
jmp
mov
mov
xchg
inc
jecxz
std
int
fdiv
int
pop
dec
jno
js
add
cmp
popa
push
jle
out
repz
sahf
adc
push
push
jmp
int3
imul
or
pop
or
push
and
xchg
std
push
aas
sub
mov
std
mov
or
adc
or
and
mov
mov
mov
insb
stos
pop
push
sub
jmp
outsl
adc
dec
jl
or
daa
push
sbb
in
icebp
xchg
stos
and
push
push
and
add
jb
int
outsb
in
arpl
add
xchg
jmp
sahf
mov
and
and
mov
mov
xchg
ffree
xor
sbb
cmp
popf
jl
dec
pop
and
mov
mov
test
insl
pop
sbb
loopne
jmp
sub
add
popa
mov
sub
adc
dec
inc
xchg
adc
out
pop
push
jnp
jge
jns
push
pop
adc
cmp
out
add
sub
call
push
jae
test
inc
sbb
push
daa
add
mov
enter
push
shlb
jle
mov
aam
adc
or
xor
push
lret
dec
dec
adc
inc
mov
scas
rclb
sub
out
iret
push
xchg
cmp
push
shl
sbb
mov
in
add
pop
push
mov
or
lret
inc
add
mov
rcrl
sbb
mov
mov
pop
mov
movl
in
pop
and
mov
sub
jecxz
or
xor
jmp
inc
das
add
stos
adc
fadds
not
xchg
pusha
and
or
sbb
mov
add
sub
mov
jbe
js
es
into
xor
xor
mov
mov
rolb
in
pop
push
pop
neg
add
xor
push
cld
out
xchg
out
add
mov
pop
cmp
adc
pop
ret
nop
xchg
push
add
jle
push
lods
jge
dec
xorl
stos
addr16
pop
pushf
jmp
subb
std
mov
repz
pop
mov
mov
iret
into
std
sar
ja
mov
mov
push
hlt
sarl
jnp
cli
xor
and
mull
in
sbb
pop
out
jmp
out
cmpb
hlt
sbb
test
ja
outsl
aas
fs
in
scas
lret
les
jmp
fldl
ss
je
outsb
pop
jmpw
int
jg
fiaddl
lods
jmp
pop
fstpl
call
clc
aaa
outsb
cmp
add
inc
popa
mov
out
call
sub
jne
push
shr
push
mov
ret
or
hlt
out
and
mov
push
inc
or
arpl
or
cwtl
sbb
loop
or
adc
rcr
sub
jp
and
or
ret
adc
add
jno
xchg
or
and
rorb
or
andl
lret
mov
xchg
fiaddl
or
jmp
add
insl
add
cwtl
mov
or
xorb
paddq
push
loopne
fstpt
sbb
lods
mov
mov
les
inc
les
xchg
rclb
pushf
movsb
add
sub
or
cmp
and
add
das
wrmsr
cmp
add
cmpb
sbb
adc
iret
xorb
popf
mov
rcl
push
mov
xor
or
mov
or
mov
adc
add
mov
or
movsl
sbb
or
push
mov
push
jle
mov
mov
add
lds
clc
mov
jae
pop
and
adc
rcr
adc
test
movsb
enter
sbb
or
dec
push
lret
sti
inc
icebp
xchg
jno
inc
dec
jbe
or
jns
std
add
mov
or
adc
push
fimuls
mull
adc
adc
sbb
dec
or
add
and
mov
and
or
pop
add
jno
fcoms
outsl
cmp
cmp
imull
sub
adcb
pop
dec
enter
test
scas
andl
jl
jo
xorb
stos
and
xor
inc
inc
pop
jnp
test
inc
xorb
or
push
jns
les
in
rcrl
cmp
sar
mov
dec
jnp
and
bound
push
cmp
add
lock
inc
test
and
cld
jmp
pushf
xor
xchg
shrl
jne
jmp
adc
cmp
add
je
popl
add
mov
rolb
mov
xor
push
popf
mov
in
aaa
movl
pop
push
mov
cmp
mov
sbb
shl
sub
mov
mov
sub
jns
sbb
mov
sbb
hlt
push
xor
mov
pop
notl
pop
pop
push
js
jmp
xor
push
or
cmp
dec
or
popa
pop
fbstp
clc
mov
sub
or
pop
pop
fiaddl
add
push
mov
add
jmp
sbb
fld
xlat
add
lock
dec
xor
out
sbb
pop
or
push
mov
fadds
cmp
xchg
imul
out
inc
lock
test
clc
xor
fistpl
jmp
cwtl
push
inc
mov
pop
jecxz
sbb
xchg
mov
sbb
jp
cmpsb
cmp
xchg
nop
bound
pusha
and
lahf
cli
mov
mov
insl
or
pop
jno
adc
rol
sbb
ret
fldenv
pop
test
dec
add
gs
or
push
pop
mov
lds
adc
loope
cmp
dec
mov
pop
je
dec
adcl
rorl
xor
xchg
lods
or
out
jecxz
ds
sub
jp
kmovb
mov
neg
pop
add
leave
sub
add
lds
push
add
out
lods
xchg
popa
sub
mov
mov
inc
dec
jecxz
add
dec
cmpsl
bound
jp
mov
cmp
pop
push
add
add
push
add
inc
les
or
adc
js
or
sub
mov
stc
loop
mov
mov
sub
push
dec
lds
or
rolb
addr16
ds
cwtl
push
push
sbb
loop
les
pop
sub
and
dec
pop
rcrb
adc
push
xor
pop
push
negb
pop
icebp
popa
sbb
inc
call
push
lahf
int
or
daa
repnz
jns
popa
jmp
fsts
inc
dec
mov
lahf
ret
jl
ret
sbb
or
mov
lods
add
jns
push
mov
xchg
jmp
rcrb
xchg
loope
pop
add
jmp
mov
dec
sti
mov
pop
or
je
mov
xchg
in
sub
adc
push
push
push
pop
or
subb
clc
mov
adc
movsb
xor
dec
adc
addb
push
mov
pop
loope
mov
in
jns
inc
rcrl
dec
lahf
push
int
push
push
cwtl
enter
inc
push
pushf
sti
sub
andl
cmpsb
sbb
test
loop
sti
mov
nop
mov
call
dec
and
sbb
imul
fstl
xor
sbb
cli
pop
mov
push
xor
mov
dec
rorb
aam
jmp
jo
adc
shrl
pop
arpl
ljmp
dec
fsubrp
xchg
fiadds
push
jne
push
decb
cmc
inc
nop
adcb
push
mov
sbbb
aad
lods
inc
add
push
mov
jns
out
leave
xchg
ffree
inc
rcll
mov
sub
jb
add
neg
add
sbb
ljmp
add
jns
or
out
sub
dec
popf
cs
sbb
mov
mov
sub
add
add
movsb
out
mov
xchg
repz
and
xor
sbb
in
mov
daa
clc
aaa
dec
ljmp
pop
mov
pop
imul
cli
push
pop
outsl
or
aas
dec
ret
daa
lds
sbb
int3
sbb
push
add
sub
xchg
mov
jg
sub
pop
add
icebp
inc
mov
jg
jmp
rcl
dec
scas
movsb
mov
add
sub
pop
jmp
js
rdmsr
ret
mov
push
icebp
dec
xchg
pop
add
xchg
adc
inc
mov
sbb
int
mov
push
pop
mov
jecxz
sub
push
std
imul
jle
loop
repnz
loope
nop
ret
sub
jmp
jae
or
jle
imul
pop
sbb
mov
or
jmp
pop
xchg
push
jmp
enter
or
incb
ret
cltd
fs
sbb
fwait
add
push
cmp
mov
add
int
sub
xor
sub
jmp
lret
addb
adc
xor
out
jmp
mov
insb
mov
ret
xlat
pop
bound
and
daa
mov
or
inc
and
xchg
hlt
in
filds
mov
in
pop
repnz
push
or
clc
push
xchg
pop
and
add
sbb
int3
mov
dec
sar
fdivr
mov
push
push
add
mov
cltd
xor
xor
lock
bound
add
adcl
push
sub
orl
movsl
sbbb
aaa
out
push
sub
test
and
xchg
sub
inc
xchg
leave
jle
dec
aaa
es
push
xchg
dec
dec
jge
gs
jbe
add
or
push
test
pop
sbb
adc
mov
dec
ljmp
push
mov
cmc
rorb
inc
ret
mov
loope
sub
mov
pop
push
add
stos
in
scas
cmp
outsl
cmpsb
in
sub
xor
mov
mov
xor
cmp
subl
shr
jle
daa
or
int
shrb
pop
inc
rcrl
fnsave
js
dec
lock
sbb
scas
and
adc
pop
mov
sbb
xchg
mov
lahf
mov
std
xor
pop
pusha
daa
sub
das
sub
icebp
and
mov
xchg
push
pusha
sub
xor
add
jmp
hlt
inc
push
rorb
sbb
leave
scas
or
cs
adc
xchg
jae
jo
stc
push
cmp
jb
push
sub
jg
push
push
pop
incl
in
shll
cmp
mov
int
push
or
out
leave
push
inc
and
movsl
mov
sbb
cmp
mov
ds
sbb
push
sbb
adc
lahf
cld
fs
rorb
push
mov
dec
mov
je
pop
std
push
cmp
loope
sub
das
pop
mov
xchg
test
and
cmp
sub
and
xlat
pop
push
or
pop
gs
lahf
loope
push
mov
cmp
and
or
add
push
adc
cmp
fldl
mov
pop
xlat
data16
out
into
xlat
stos
ret
cmpl
xor
or
sub
and
sahf
fs
and
adc
xchg
xor
add
mov
shl
cmp
nop
cmp
sbb
int3
imul
lret
jno
lock
rcrb
add
movl
loop
nop
pop
clc
mov
jp
or
fs
mov
push
sti
pop
enter
cld
repz
push
sbb
cmp
loop
andb
jecxz
xchg
pop
shll
fnstsw
cmp
cmpxchg
jnp
pushf
rorl
dec
mov
scas
pusha
es
lcall
or
mov
inc
adc
push
push
stos
or
pop
arpl
cli
lret
es
jnp
sub
jo
jbe
or
jmp
orb
and
sbb
pop
pop
dec
dec
xor
push
incb
insl
jae
pop
mul
xchg
lock
imul
pop
push
mov
add
stos
jl
je
xchg
xor
repnz
test
das
adc
inc
mov
in
add
paddusb
aam
into
out
repz
pop
shl
add
and
push
add
into
jmp
lahf
clc
xor
popf
mov
and
push
mov
shrl
in
ds
and
jne
xlat
xor
call
mov
or
loop
jg
addb
cmp
adc
xlat
adc
push
jmp
cmpl
je
push
lcall
add
test
xchg
shlb
ja
fcmove
test
or
fs
jge
insb
adc
cmp
push
inc
or
cmp
sub
imul
mov
adc
push
imul
pop
stos
pusha
daa
push
adcb
sbb
push
mov
mov
ret
into
jb
xorl
test
pop
mov
in
pop
pusha
sub
adc
jb
sbb
sub
mov
cmp
mov
or
loope
fistl
jge
dec
dec
lret
pop
enter
insl
jbe
or
popa
pusha
movsl
ljmp
xchg
call
outsb
ret
or
adc
and
jmp
push
in
mov
cwtl
add
aas
jmp
sub
and
enter
pop
add
sub
sbb
sahf
popf
xor
adc
jge
rol
mov
aam
ret
xchg
aaa
cltd
jmp
test
test
cltd
rcl
mov
mov
cli
sub
cmpl
stos
push
or
divl
mov
and
out
mov
pop
and
mov
adc
push
push
ja
push
test
es
dec
dec
jo
jg
mov
movsl
push
inc
loope
dec
cld
aas
pop
fcmovb
inc
daa
add
push
and
pop
inc
push
icebp
lret
shll
add
push
mov
push
sub
cmp
in
daa
add
mov
test
and
pop
popf
pop
lea
and
xor
call
add
pop
lahf
ret
insl
push
fadd
add
mov
mov
pop
pop
das
aam
push
or
and
lret
mov
dec
push
xchg
add
mov
ffree
pusha
les
or
xor
xlat
mov
push
xor
or
push
adc
xor
mov
jg
xchg
outsb
clc
lea
pop
popa
push
mov
into
add
sub
jl
or
xor
int3
inc
mov
daa
push
lods
mul
shr
cmc
jb
jbe
rcll
es
pushf
mov
push
movsl
sbb
mull
adc
adc
xchg
sub
pop
int3
imul
cli
pusha
insb
push
pop
pop
add
loope
jno
jle
dec
jmp
cmp
outsl
or
dec
pop
xlat
and
add
dec
cmp
mov
gs
jg
jecxz
lret
leave
inc
mov
and
ss
fcoml
repz
or
dec
rorl
fstpt
mov
mov
pop
cld
or
leave
jnp
hlt
das
dec
push
out
push
sub
idivb
pop
pushf
stos
in
push
adc
les
aam
push
fidivs
adc
subl
jne
ja
test
dec
in
enter
arpl
dec
xchg
add
pop
dec
pop
enter
and
or
sti
and
or
push
or
rcrb
push
lods
mov
stc
pop
mov
pop
add
push
bound
adc
xchg
lock
xchg
js
hlt
mov
es
sub
add
dec
cmp
xor
fcomps
lods
adc
xor
ljmp
jae
jmp
mov
test
les
fld
out
push
into
mov
cmpsl
lahf
jnp
icebp
pop
mov
push
loope
test
cmp
mov
sub
add
or
xor
insl
add
loop
pop
inc
mov
xchg
sbb
xor
or
roll
cmp
sub
push
loopne
and
inc
repz
dec
subl
and
cwtl
lahf
repnz
inc
mov
sarb
push
and
iret
lds
int3
pop
push
rorl
repz
push
into
pop
popf
fsubp
pop
pushl
push
daa
dec
jge
jecxz
push
fnsave
pusha
inc
mov
jbe
pop
add
adc
cmp
lock
cmp
cwtl
out
adc
icebp
push
ljmp
jne
pushl
les
adc
leave
xor
adcb
inc
hlt
sub
pop
sub
shr
mov
push
sub
ds
sbb
stc
sbb
cmpsl
or
xor
stos
inc
daa
pop
mov
imul
pop
push
sub
push
mov
mov
rol
or
mov
xchg
mov
sbb
pop
cwtl
ja
mov
imul
dec
mov
xchg
inc
or
test
dec
jmp
jp
push
dec
sar
or
sbb
push
mov
or
sbb
jle
ret
sub
and
push
mov
shr
iret
aas
and
loope
in
mov
mov
adc
std
pop
test
push
push
jl
jmp
shrb
and
hlt
insl
push
stc
ret
int
test
fs
stos
pop
stc
fld
leave
push
adc
pop
rclb
outsl
xor
popa
sub
sahf
lock
or
xchg
dec
or
xor
jbe
rcl
or
pusha
push
das
js
pop
inc
add
adc
in
xchg
outsb
ret
xchg
or
mov
sub
fidivrl
inc
cmc
or
and
add
fldt
xchg
sub
cmp
jbe
dec
lret
idivb
imul
cs
push
rclb
repnz
ljmp
call
stos
iret
les
cmp
or
rcrl
loop
mov
in
cmp
ds
mov
out
or
and
push
xchg
lahf
test
mov
pop
loopne
in
out
or
pop
and
fucomi
or
push
xor
push
mov
add
jne
push
aad
xlat
sbb
in
adc
arpl
scas
inc
and
sbb
inc
mov
adc
jbe
pop
push
xor
cli
mov
or
cmp
xor
add
adc
mov
cmpl
cmp
add
pop
dec
scas
adc
les
jmp
sbb
das
and
add
pop
pop
ds
scas
push
hlt
or
mov
inc
pop
je
add
pop
fdivl
push
sti
add
addr16
arpl
in
sbb
repnz
jmp
or
addr16
jb
xchg
popf
jg
inc
or
cmc
push
or
ret
scas
call
and
jns
popf
xor
and
inc
add
inc
jo
cmp
shlb
jbe
sbb
cmp
aaa
add
movsl
scas
je
call
nop
out
rcrl
add
lods
push
pop
test
sub
je
pop
push
ret
iret
dec
push
sbbl
sbb
inc
xor
pop
add
dec
push
jae
ret
shl
mov
dec
inc
pop
and
jmp
int3
dec
jbe
add
push
aas
jnp
stos
push
or
pop
jbe
and
push
pop
push
aad
mov
ret
icebp
push
sbb
and
pushf
mov
push
call
pop
xchg
arpl
repnz
xchg
and
mov
add
outsb
push
sub
cmpsb
pop
and
rcrl
mov
mov
jo
add
sub
cmp
repz
sbb
outsb
adc
out
sbb
push
mov
add
jb
pop
mov
sub
push
sbb
push
add
loopne
add
cmp
cmpb
in
mov
sbb
mov
sbb
ret
ljmp
pop
not
push
mov
clc
jnp
pop
sbb
scas
xchg
mov
ljmp
add
sbb
xor
dec
in
dec
ror
xor
mov
pop
add
les
mov
jle
pusha
lock
imull
xor
sarb
loop
and
sti
pushf
adc
stos
rcl
aam
nop
xchg
sbb
mov
and
add
xor
push
add
outsb
add
popa
sbb
or
jecxz
jbe
jmp
sub
or
aam
mov
bound
xor
or
cmpsb
decb
push
call
es
sbb
repnz
pop
les
jecxz
or
dec
pop
pop
jmp
xchg
add
mov
push
andb
popa
cltd
push
push
xchg
cmp
push
pop
ja
mov
adc
or
push
sub
jmp
sub
insb
loope
add
inc
xchg
neg
inc
add
shlb
add
testb
ret
nop
gs
xor
bound
shlb
mov
cmp
stos
adc
leave
jge
mov
adc
xchg
in
xchg
clc
or
pushf
jns
dec
shrl
jne
dec
and
pop
popa
sub
sub
sbb
cmp
pusha
mov
pop
push
inc
fsts
push
rcr
in
xor
xor
stos
xchg
adc
push
das
addl
and
vmovddup
loopne
mov
dec
fcos
and
ja
test
loop
dec
imul
mov
outsl
fwait
lods
mov
std
xlat
xchg
push
in
test
push
mov
push
mov
mov
jle
or
sbb
aas
in
xlat
or
push
test
mov
shr
mov
xchg
mov
shrb
xchg
je
bound
add
fildl
clc
mov
push
jmp
add
push
jne
orb
dec
push
lret
ja
cmp
lods
shl
add
sbb
sbb
adc
xor
xchg
fdivrs
sub
xor
xchg
and
pop
pop
xor
cmp
xlat
or
test
adc
or
bound
stc
aaa
push
xchg
or
adc
sub
push
jmp
shrb
cwtl
mov
mov
and
lret
jmp
or
sbb
repnz
rol
and
pop
in
jge
jmp
xor
lock
lret
addr16
push
mov
call
mov
stos
loopne
cld
dec
dec
jmp
mov
stos
sbb
adc
xor
adc
push
xchg
mov
mov
std
or
jge
dec
outsb
mul
ret
jl
mov
pop
jnp
add
stos
out
gs
adc
add
repz
dec
aaa
add
jnp
loope
lcall
sbb
dec
jp
cmpsb
push
in
add
arpl
ja
mov
sbb
jne
mov
or
es
adc
cltd
sub
pop
cmp
sbb
insl
xor
or
pop
imul
sbb
push
pusha
movsb
xchg
jo
cld
lret
mov
dec
xor
and
aad
push
inc
add
outsl
xchg
les
add
xchg
std
cli
adc
add
push
mov
xor
add
add
inc
es
fnstenv
lret
rolb
decl
outsb
or
sbb
rol
push
dec
fldenv
push
jmp
or
mov
and
jo
jae
adc
les
push
add
push
push
jbe
icebp
lock
out
mov
pop
push
adc
fmuls
fldl
lea
dec
add
xorb
cld
sub
mov
jl
and
or
mov
hlt
inc
pusha
pusha
mov
ret
lret
pop
js
popa
aaa
sbb
inc
inc
cmp
lret
fstpl
or
hlt
xchg
pop
daa
std
dec
jne
pop
or
pop
jmp
jmp
inc
subb
sub
push
jl
mov
jmp
dec
sub
lds
aas
pop
sub
cmp
testl
jns
std
xor
aas
out
fildl
jg
push
cmpsl
in
sarb
inc
mov
adc
dec
test
cmp
shr
inc
repz
jle
lock
add
stc
or
adc
ficompl
sub
push
dec
cmp
inc
push
sbb
aaa
adcl
mov
loopne
mov
or
pop
out
or
jmp
lahf
jno
dec
dec
aas
sub
in
into
mov
imul
ss
sub
jnp
fs
cld
cld
mov
loope
imul
push
lods
dec
or
sub
ja
cmp
sub
add
mov
in
sub
scas
jo
push
jo
or
xchg
fwait
and
cmp
push
fiaddl
xchg
aaa
scas
sarl
jp
push
push
outsl
push
stos
mov
stc
into
lahf
xchg
pop
rorl
jo
inc
ret
insb
or
adc
sbb
cmp
fs
add
out
jl
add
xchg
adc
outsl
lret
stos
push
inc
jmp
pop
lret
mov
or
je
adcl
aas
push
mov
push
adc
cmp
pop
stc
mov
push
cs
cli
out
jne
mov
pop
sub
ss
call
aaa
lahf
pusha
lods
cmp
push
xchg
inc
push
repnz
dec
adc
pop
inc
dec
dec
cmc
push
push
push
mov
jne
enter
xchg
cld
insb
mov
imul
js
pop
push
mov
jmp
push
aaa
out
or
sbb
add
inc
cmp
mov
sti
cmp
add
repz
ljmp
pop
out
movsb
enter
nop
mov
imul
sub
insb
popa
and
flds
loope
adc
adc
lret
sete
inc
jo
push
add
mov
xchg
mov
dec
lock
movsb
pop
lret
test
push
push
and
sbb
sub
xchg
stc
imul
xchg
dec
xor
fiadds
arpl
int
das
xor
mov
outsl
mov
or
pop
pushf
add
arpl
mov
leave
mov
push
push
lods
add
movsl
jmp
mov
das
in
gs
push
jmp
movsl
inc
mov
xchg
jb
dec
add
push
movsl
push
les
cmp
cltd
add
andl
nop
sbb
nop
arpl
lea
push
sbb
cwtl
mov
dec
and
dec
jmp
pop
mov
fistl
mov
mov
mov
pop
inc
dec
fdivl
leave
fidivs
mov
rol
data16
pop
xor
jnp
fsubs
lret
or
dec
add
cmp
pop
adc
out
dec
insb
fadds
inc
jecxz
popl
sti
xor
test
xor
enter
cmp
subb
pop
rcl
push
add
jmp
sub
mov
cmp
ljmp
in
enter
stos
cwtl
pop
push
scas
mov
and
push
adc
sub
add
lds
xchg
and
lea
mov
jmp
dec
out
je
rclb
mov
cwtl
sbb
pop
push
fists
mov
shr
push
xchg
mov
in
notb
and
mov
ret
adc
or
in
add
or
inc
imul
pop
jge
lcall
jnp
pop
mov
pop
push
push
mov
jbe
add
call
sub
sbb
xlat
cltd
mov
xor
pop
test
in
push
push
add
adc
pop
nop
hlt
pop
mov
fwait
lahf
adc
cld
adc
mov
data16
popa
jmp
mov
jns
stc
sub
negl
sub
sub
sbb
inc
popa
pushf
inc
idivb
xchg
lock
fstpl
inc
cs
pop
mov
pop
or
inc
lcall
push
jb
int
subl
mov
bound
test
jno
lds
loopne
lea
push
sub
push
movsb
repnz
test
adc
int
fnstcw
inc
mov
push
lret
jns
outsb
mov
pushf
xchg
lods
inc
cld
mov
push
pop
gs
and
adc
add
bound
pushfw
popa
sub
sub
mov
cmp
insb
cmp
dec
fnstcw
cmp
add
xlat
fisubs
push
xor
gs
adc
mov
pop
mov
sti
adc
dec
out
call
adc
int
call
jo
cmp
inc
add
jne
enter
lds
push
and
fistps
pop
lahf
mov
lahf
xchg
sbb
add
and
push
xor
sbb
stos
rol
push
push
or
push
sub
call
cmc
push
imul
fdivrs
lret
or
dec
daa
and
add
mov
daa
lods
test
out
pop
stc
dec
cmpsb
and
or
add
xor
sub
out
or
lret
xor
mov
jmp
shrl
sub
add
xchg
mov
mov
mov
faddl
or
dec
push
or
fyl2xp1
or
xchg
add
cmpsl
jle
loop
lods
js
xchg
loopne
lock
or
push
pusha
into
cmp
xchg
push
adc
push
mov
ss
std
jle
dec
in
data16
pop
and
inc
fisubl
push
jbe
and
push
ficompl
push
cmc
xor
xor
neg
xlat
lock
sbb
leave
or
sbb
subb
jne
inc
rorl
lret
mov
xchg
inc
lcall
pop
dec
mov
pop
and
es
mov
pop
in
data16
inc
pop
mov
fsubrs
fs
mov
mov
frstor
js
jmp
add
jl
mov
lret
sub
fiadds
ljmp
loop
push
jg
shr
mov
fdivrl
pop
pop
stos
les
enter
pusha
insl
aas
add
add
dec
jle
jo
sbb
cmpb
xchg
jns
fsubl
sbbb
outsb
pop
pop
push
mov
jno
pop
add
or
jmp
lahf
cli
adc
add
mov
cmpsl
dec
add
dec
cld
scas
dec
jmp
aam
cmp
call
loopne
push
test
xor
out
lods
imul
mulb
sbb
jecxz
mov
jmp
push
std
sub
bound
int3
add
jg
mov
jp
push
fsubs
jno
inc
cmp
pop
push
push
rcrl
ds
mov
ret
pop
mov
mov
imul
mov
mov
mov
imul
jmp
pop
push
pop
sub
aas
jo
mov
out
cmp
jmp
popa
test
outsb
cwtl
movsb
mov
ficompl
push
mov
jbe
push
mov
or
mov
or
mov
les
lods
testb
mov
or
dec
inc
push
adc
push
call
ret
subb
add
scas
aam
adc
mov
cmp
in
xor
add
daa
xchg
xchg
mov
lods
dec
cmc
dec
lcall
mov
jmp
or
cmp
cmc
sub
addl
or
orl
icebp
or
repnz
pop
insb
add
in
sub
pop
sub
push
xchg
negl
cmp
mov
hlt
add
xchg
add
imul
fiadds
bnd
ljmp
lahf
in
add
aas
inc
adc
and
in
adc
xchg
cmp
xor
movb
sub
sub
pop
and
frstor
aad
mov
and
mov
movsb
call
or
inc
mov
jo
imul
xchg
mov
hlt
mov
and
mov
iret
jmp
or
inc
aaa
clc
das
dec
cmp
adcl
sbb
lahf
and
push
mov
cmp
jl
or
dec
sub
inc
mov
jmp
xor
aam
insb
fiaddl
push
push
push
and
jecxz
and
xchg
fisttps
mov
adc
jmp
mov
dec
add
dec
push
shll
scas
sbb
rolb
roll
adc
fdivs
mov
mov
nop
mov
pop
or
jbe
push
add
lahf
and
scas
inc
pop
mov
push
neg
ret
adcb
push
sub
repnz
rcll
xchg
lods
add
adc
pop
mov
or
shll
imul
inc
clc
popa
mov
xor
adc
mov
inc
cmp
addb
jmp
pop
and
adc
xor
es
cmp
pop
orb
inc
lods
add
pop
clc
xor
std
cmp
sub
fildll
enter
jmp
rcrl
or
xchg
sub
stos
push
jb
loope
add
mov
sbb
add
rolb
setbe
xor
jmp
push
jbe
xchg
iret
mov
or
sti
mov
inc
and
into
or
fistpll
into
ljmp
inc
rolb
cli
add
clc
push
gs
cli
mov
adc
lods
fmul
int3
test
dec
xlat
inc
or
push
jmp
adc
bound
mov
mov
mov
cmp
mov
jmp
xor
jg
sub
repz
dec
icebp
fiadds
int3
inc
icebp
pop
adc
sub
xor
repnz
cwtl
in
loope
push
xor
push
add
aas
adc
add
pop
daa
cmpsl
add
dec
and
and
fidivl
jecxz
xchg
les
push
mov
daa
nop
fwait
cmp
sti
lods
xlat
pop
push
and
mov
pop
and
cwtl
es
push
mov
sbb
imul
andb
popf
fs
xor
push
ret
jmp
mov
pop
mov
fldl
add
daa
or
jmp
jne
or
push
and
pop
pop
mov
push
sub
stos
sar
mov
test
jp
jle
shr
mov
test
sub
and
push
jo
add
incl
add
cmp
testl
loopne
out
pushw
arpl
les
mov
lods
clc
cwtl
fndisi(8087
imul
ret
insb
mov
dec
cmp
mov
ret
jecxz
pop
and
or
int
int
in
xor
loop
imul
shr
cmpb
xchg
data16
pusha
dec
mov
mov
or
out
bound
je
jp
scas
lock
adc
pop
xor
jg
inc
test
pop
stos
cwtl
in
add
jno
rolb
sub
insb
aaa
add
mov
mov
out
push
mov
int3
in
sbb
pop
neg
jmp
sahf
sbb
sub
inc
mov
add
dec
sub
xchg
outsl
test
mov
mov
nop
jp
pop
lahf
sbb
dec
adc
sub
lock
rorl
pop
out
test
adc
insb
sub
pop
dec
add
lods
ds
fmuls
cmp
mov
rolb
outsb
in
stos
xchg
enter
add
bound
ret
movsb
mov
iret
out
arpl
pop
ds
push
dec
sarl
xchg
mov
or
adc
adc
scas
pop
into
mov
inc
add
addl
add
add
add
cs
xor
or
or
data16
mov
mov
push
addps
push
mov
call
cwtl
insl
mov
inc
pushf
loop
cwtl
mov
pop
rep
jle
leave
cmp
fsubrl
inc
pop
cwtl
popa
add
add
cmp
fwait
inc
add
pop
psrld
mov
not
je
shrl
jbe
adc
dec
cld
pop
cmp
jmp
clc
clc
sahf
sbb
rorb
shlb
xor
pop
jnp
hlt
scas
imul
push
jl
ja
std
inc
push
insl
inc
pop
cld
inc
add
loopne
xchg
imul
addl
add
dec
adc
scas
pop
js
dec
aam
dec
test
xchg
pop
cmp
or
test
or
insl
push
jmp
sbb
xor
xor
jns
pop
rol
mov
sbb
outsb
xchg
rcr
pop
vmwrite
jmp
push
dec
ss
add
daa
or
dec
jbe
push
push
clc
or
addb
pop
cmc
loopne
sub
mov
cmp
rorb
jo
jp
sub
or
dec
lret
push
cs
stos
jmp
out
sbb
sub
push
dec
inc
mov
lahf
mov
loope
sub
popa
add
sahf
dec
and
clc
aam
or
test
repz
mov
jle
push
out
int
sub
adc
mov
adc
test
pop
aaa
loope
pusha
andb
or
and
add
lods
mov
push
and
out
cmc
orb
xor
and
daa
or
push
sbb
sahf
sub
cwtl
int3
or
fldcw
out
pop
sub
sar
je
add
mov
jmp
pop
aam
and
mov
mov
add
negb
sbb
inc
aas
and
sbb
jp
add
aam
jne
aas
dec
stos
xchg
or
mov
xchg
cwtl
xor
mov
loope
mov
lret
daa
pop
push
nop
shrl
movd
push
lea
jo
mov
cmp
jge
rorl
jl
sbb
inc
sbb
push
je
add
dec
jb
add
ret
mov
lock
lock
xor
add
mov
mov
adc
es
add
adc
mov
jo
push
mov
sub
push
xlat
insb
test
lods
in
dec
mov
dec
clc
push
xchg
jmp
add
jmp
mov
testb
mov
adc
int
xor
pop
popa
inc
push
sub
add
push
pop
loop
sub
mov
dec
sub
popf
loopne
pop
cltd
pop
and
push
push
rcrb
xor
bound
push
incb
pop
pop
add
aam
cmp
mov
cmp
into
dec
inc
sub
jecxz
or
sbb
push
pushf
cmp
add
sub
mov
inc
adc
adc
lods
inc
or
xor
cmovne
in
mov
add
les
push
push
jae
and
popa
in
xor
mov
pop
das
stos
cs
sti
or
and
pop
es
jns
push
data16
flds
sub
dec
fldcw
mov
mov
cmp
je
pop
aas
xor
push
xchg
shrl
pop
fbld
xchg
jnp
pushf
hlt
mov
jmp
aad
mov
add
xlat
sub
sub
data16
inc
adc
inc
int3
test
jecxz
int
mov
jg
cmpsl
pop
pop
adc
dec
pusha
imulb
addr16
mov
fdivs
pop
in
in
cmp
sub
adc
mov
iret
cmc
in
mov
gs
enter
xchg
notb
mov
js
das
shrl
add
push
mov
or
lret
out
sbb
dec
icebp
addr16
inc
jmp
push
movsb
push
arpl
mov
jo
and
mov
or
or
and
cmp
bound
xor
stc
pop
ja
adc
loop
das
adc
out
iret
push
pop
outsb
pop
icebp
jmp
lret
in
adc
insl
pop
insb
pop
loop
push
movhps
add
fadd
fisttps
sbb
incl
shll
test
insb
popf
mov
mov
jp
cwtl
sub
imul
jno
sub
das
add
std
dec
jmp
xchg
push
push
jmp
sbb
out
out
psubusb
dec
mov
hlt
jp
pusha
jo
mov
mov
or
xlat
xor
insl
dec
mov
pop
push
andl
ljmp
orb
pop
shr
adc
add
xchg
inc
sub
pop
fwait
out
add
dec
rcll
lret
dec
push
push
cltd
sub
aas
fstpl
test
in
jb
in
dec
add
dec
push
mov
pop
aas
pusha
mov
mov
sub
xor
jmp
cmc
pop
adc
pop
iret
or
scas
pop
testb
push
mov
cli
adc
sbb
mov
push
xor
jmp
mov
pop
xchg
mov
int
push
hlt
ljmp
sbb
jmp
pop
vzeroupper
out
leave
pop
fldenv
popf
push
das
mov
cltd
pop
jnp
sbb
pop
mov
es
mov
inc
test
mov
or
enter
repnz
sbbb
dec
and
loop
pop
jns
cli
je
pop
or
push
mov
enter
mov
imul
das
jae
andb
dec
lea
jo
inc
dec
xchg
add
leave
mov
or
xor
repz
stos
xchg
jmp
adc
adc
shll
add
adc
jmp
jmp
and
std
mov
or
in
add
sub
adc
loopne
incb
outsb
cmp
sarb
cmp
dec
sbb
imul
ja
les
lds
call
incb
pop
jb
or
daa
mov
adcl
mov
xor
sbb
jp
mov
sub
gs
notl
mov
fsubrl
sub
cmp
pop
push
push
scas
loopne
add
call
add
ja
dec
pop
lret
adc
mov
add
add
mov
or
sti
les
hlt
sub
adcl
push
mov
add
inc
or
jb
inc
jp
xor
in
inc
mov
push
in
stc
and
or
imul
cs
jmp
or
adc
xchg
fsubl
push
lret
cmp
dec
dec
mov
insb
hlt
push
adc
dec
pusha
xchg
xchg
add
mov
inc
orb
mov
nop
mov
cmp
pop
or
push
or
in
cli
repnz
dec
pop
cmp
add
adc
add
sub
sub
enter
push
mov
mov
cmp
pop
mov
fnstcw
mov
cld
cld
shl
add
xor
mov
or
adc
popa
pop
inc
shl
inc
frstor
adc
inc
cmp
test
in
push
test
add
icebp
loop
fs
dec
sbb
mov
or
jmp
aam
pop
cwtl
and
loope
adcl
jmp
outsb
inc
lret
jbe
bound
jmp
in
jae
dec
push
push
call
sub
sbb
mov
pop
subb
not
out
cmovae
jnp
sar
add
lret
ljmp
inc
mov
lcall
out
dec
push
cli
dec
gs
test
cs
pop
push
imul
arpl
inc
dec
sub
xor
inc
bound
in
fidivs
pop
int
or
add
pusha
pop
inc
inc
insb
dec
add
xchg
sahf
loopne
mov
sbb
inc
push
je
into
dec
daa
push
data16
outsl
js
aam
add
divb
xor
push
jge
daa
daa
sbb
push
inc
int
sbb
or
mov
pop
push
ficompl
dec
es
or
xchg
inc
jb
sub
enter
sti
pop
and
fldt
pop
sub
je
popa
lret
jle
in
lods
pusha
mov
xchg
dec
dec
cmp
leave
fisubrl
pop
pop
pop
mov
out
fsubrs
mov
sti
push
lods
hlt
rolb
shr
add
pushf
push
inc
insb
sbb
mov
icebp
push
gs
mov
push
xor
or
js
push
dec
adc
jmp
popa
icebp
pop
pop
sub
pop
mov
push
dec
sbb
into
cmpsb
ret
rcl
insb
lods
das
push
loop
sbbb
jg
fidivl
pop
push
mov
cmpb
outsb
push
mov
lock
push
fistps
int
pop
add
cltd
push
xchg
lret
cmp
push
jno
ret
fs
push
add
cmp
push
sbb
loope
add
or
push
ss
sub
inc
push
and
sbb
imul
mov
inc
imull
insl
imul
arpl
xor
add
adc
mov
push
dec
cmp
bound
hlt
push
and
mov
jb
shl
loopne
push
inc
pop
or
pop
jns
stos
xor
ret
dec
scas
push
fsubrl
test
and
xor
xchg
out
xchg
adc
adc
in
cs
lock
or
mov
pop
xor
aam
pop
orl
imul
mov
xlat
or
dec
data16
out
xor
sub
cltd
outsl
xchg
sahf
mov
cmp
pusha
xor
or
enter
daa
mov
out
pop
popf
adc
sbb
iret
mov
and
out
cltd
daa
imul
shlb
xchg
lods
aad
mov
xor
ficoms
mov
orl
sarl
loope
or
xchg
cmp
push
sahf
add
add
pop
mov
or
cmp
hlt
sbb
push
lcall
add
arpl
jmp
mov
add
dec
dec
adc
rclb
and
orb
push
add
mov
shlb
xor
add
xchg
clc
mov
not
scas
push
loopne
adc
pop
sub
push
xchg
lock
cltd
mov
in
mov
pop
in
lods
cld
xlat
lret
push
or
dec
inc
rorb
leave
mov
pusha
xor
cwtl
or
ret
dec
movsl
das
add
adc
or
jl
push
dec
js
adc
add
popa
sbb
mov
push
add
mov
cmpsl
hlt
adc
or
jmp
jo
mov
push
pop
jnp
ss
pop
add
push
cmp
ror
pop
cmc
scas
test
jmp
imul
imul
daa
xor
jno
enter
jbe
test
mov
add
jns
ret
rorl
fistps
mov
clc
push
mov
das
stc
cmc
xchg
push
hlt
pop
mov
pop
or
mov
das
rorb
cmp
rcll
mov
repz
cld
mov
jmp
add
and
scas
jp
or
jle
dec
xor
out
pop
nop
mov
add
or
and
in
inc
jmp
pop
rolb
push
mov
loope
out
outsb
pop
lcall
stos
shr
data16
add
pop
jl
or
imul
xor
cmc
add
inc
aas
ljmp
xchg
or
push
push
pop
add
dec
pop
mov
push
inc
or
sub
cmp
dec
push
jns
sarb
dec
loop
insl
pop
fwait
push
leave
pop
mov
pop
add
add
jne
adc
cmp
cmpsl
outsl
push
popf
movsb
push
cmp
xchg
pusha
jle
rcrl
stc
aam
data16
nop
les
xchg
imul
int
jg
stc
aaa
push
sbb
sbb
xor
repz
push
faddl
or
xor
ss
lcall
out
push
push
fucomi
iret
lcall
sub
sub
jecxz
pop
and
outsb
insb
xor
or
dec
adc
shll
daa
or
arpl
cltd
and
adc
fnsave
push
pop
in
add
push
dec
sbb
clc
fdivrs
jno
movsb
push
jp
cli
pop
aam
daa
or
loopne
ret
dec
cs
dec
outsl
call
jmp
cltd
mov
push
daa
popa
arpl
jmp
ret
and
lret
repnz
arpl
jmp
pushl
loop
push
sahf
pminsw
sub
or
dec
mov
pop
inc
dec
and
jb
push
or
jns
mov
adc
mov
loop
mulb
pop
pop
jecxz
xchg
mov
dec
int
pusha
or
xchg
std
push
cwtl
cld
mov
sub
adc
and
scas
jmp
sti
or
cmp
repz
push
in
sub
adc
decl
pop
jge
mov
orl
out
aad
fnstcw
jb
sub
bound
sbb
xchg
mov
add
roll
adc
pop
adc
jns
cmp
pusha
push
mov
push
fcomp
add
scas
dec
loop
arpl
push
push
mov
and
jbe
add
sub
in
and
jmp
mov
push
mov
xchg
mov
scas
xor
shl
in
mov
mov
out
cs
rolb
inc
imul
pop
mov
aaa
movsb
push
mov
ss
es
pop
pop
lods
mov
xchg
or
mov
loop
jge
fnstcw
mov
inc
bnd
sub
rcll
mov
and
rcrb
std
jp
enter
push
xor
push
cwtl
push
add
or
pop
push
fisttps
inc
in
add
imulb
dec
dec
jbe
pop
into
mov
xchg
push
sti
and
push
xchg
jecxz
sbb
rcrl
popa
gs
jnp
out
xchg
dec
adc
and
pop
push
add
cld
movsb
adc
push
jne
and
jb
pop
jg
add
test
lea
ljmp
xchg
adc
pusha
or
inc
push
in
or
lds
mov
cmp
mov
mov
mov
testl
das
add
popa
pop
or
jmp
aad
cmp
mov
adc
je
sub
ljmp
add
mov
fadds
ds
or
mov
orb
dec
jns
adc
adc
int
and
mov
sub
inc
cmp
jmp
out
dec
add
pop
push
push
push
mov
mov
adc
and
mov
xchg
inc
sub
inc
jne
ucomiss
mov
push
arpl
emms
aaa
dec
pop
stos
bound
loop
push
rcll
iret
ret
pop
mov
sub
dec
loopne
ss
test
jge
inc
stos
test
inc
or
pop
fistl
ljmp
mov
jno
addr16
shlb
ror
ds
sar
daa
sbb
lret
inc
xchg
lahf
out
sub
dec
nop
cmp
in
sti
inc
shrl
aam
adc
add
add
cwtl
gs
loope
cmc
add
adc
test
pop
fisttpll
in
inc
add
out
sub
push
xchg
sbb
movsb
inc
pop
jg
push
push
roll
pop
xor
fwait
neg
jmp
insl
dec
xor
adc
and
addb
dec
ss
jb
int
add
insb
adc
movb
sbb
xor
adc
jmp
pop
scas
imul
sarl
mov
jo
cmp
cmp
dec
test
lods
or
jmp
cli
mov
sub
cmp
adc
int
cmc
enter
pop
incb
dec
cmp
pop
stos
cmpsb
or
mov
pop
or
fidivrl
loop
das
xchg
mov
inc
iret
movb
test
add
dec
add
jle
inc
aad
shr
dec
xchg
roll
fdivs
stos
mov
dec
roll
imul
cmp
test
sbbl
sti
or
pop
pop
lea
pop
push
push
adc
push
cmp
mov
pop
call
ret
jle
adc
pop
out
cli
test
cwtl
dec
scas
inc
out
outsb
mov
jp
ds
add
adc
dec
jmp
xor
mov
test
push
pop
iret
push
dec
and
pop
lock
jmp
test
dec
scas
push
out
pop
push
or
push
jl
inc
pop
push
mov
mov
xchg
lock
inc
mov
jg
mov
push
mov
jmp
outsb
jnp
sbb
mov
push
pop
jl
cli
dec
pop
stc
je
and
shl
add
rclb
pop
addl
mov
test
xchg
push
push
dec
call
sbb
out
sub
or
test
enter
pop
in
inc
sbb
pop
xchg
mov
mov
push
mov
cmp
xor
shlb
sbb
pop
inc
mov
cmp
loope
aas
xor
xchg
dec
jge
arpl
pop
out
add
dec
jp
pop
les
or
out
mov
inc
call
xchg
ror
ror
or
mov
push
xor
adc
jl,pn
int3
iret
add
pusha
test
pop
adc
sub
addr16
mov
or
sub
sti
sbb
mov
inc
test
pusha
add
or
cmp
inc
out
dec
fsubrs
pop
pushf
jno
jmp
lahf
or
call
fs
xor
inc
pop
roll
lods
int
and
mov
das
add
mov
dec
xor
scas
mov
mov
and
jmp
and
out
push
inc
aaa
dec
push
flds
or
pop
push
in
dec
cmpsl
xor
xor
fmuls
xchg
jnp
jecxz
pop
movsb
xchg
jmp
rcr
js
adc
iret
mov
mov
cmp
sub
jmp
mov
in
loope
mov
pop
push
push
pusha
jmp
mov
lds
pop
jne
inc
xor
ret
dec
insb
test
sbb
or
insl
sbb
aas
pop
mov
lcall
lcall
out
jmp
std
int
jmp
adc
imul
stos
adc
movsl
jmp
bound
mov
mov
pop
add
sub
lahf
adc
outsl
mov
adc
push
inc
xor
pop
push
push
pop
xchg
add
jns
adc
outsb
inc
adc
push
mov
bswap
pop
inc
mov
dec
jmp
addr16
add
ficoml
mov
add
shr
in
int
shr
in
xchg
in
push
add
in
dec
dec
aas
in
add
imulb
mov
or
or
pop
or
lret
adc
fwait
pop
mov
push
jmp
dec
mov
shll
cmc
adc
and
or
inc
arpl
bound
insl
rorb
jo
add
mov
push
push
pop
sbb
in
lock
mov
dec
stos
sub
jne
cs
sub
cmp
or
push
push
pop
mov
adc
sub
mov
cs
jnp
and
idivl
xchg
pop
std
inc
cmpsl
repz
pop
shll
or
pop
jmp
rep
dec
xor
xlat
jnp
icebp
je
into
cmp
not
aad
cmp
jle
shrl
aam
stos
sub
icebp
pop
sbb
dec
or
pop
mov
pop
loop
add
sbb
call
dec
lret
jge
les
cwtl
jno
sbb
fadds
add
dec
cmc
cmp
inc
pop
mov
ds
sbb
ja
sub
mov
andl
sbb
lock
daa
xor
push
sub
sub
xchg
in
push
sbb
xchg
push
mov
xchg
out
dec
mov
sub
pop
jmp
inc
pop
stc
jp
and
cwtl
movlps
fisubl
push
movsb
enter
dec
popa
adc
inc
out
outsl
jae
jmp
lods
shlb
scas
movsl
pop
mov
test
jae
fisubrl
scas
rcll
js
shrb
std
aas
and
xor
ja
in
out
pop
xor
mov
inc
loopne
out
inc
test
mov
cwtl
gs
push
mov
push
lock
jmp
jne
nop
mov
leave
lds
divb
cmc
jp
and
and
cmp
insb
sbbb
out
or
test
or
sub
sub
fcoms
enter
sbbl
loopne
push
sub
pop
shll
movsl
std
pusha
sub
jmp
cmc
stc
add
pop
jne
ljmp
jl
cmc
and
push
pop
or
in
fistps
jmp
mov
cmpb
movsb
ret
aaa
adc
dec
lret
mov
jb
movsb
dec
and
stc
in
cmp
sub
and
shrl
jb
fneni(8087
stc
repz
cs
ja
mov
xchg
inc
adc
jl
xor
push
insl
pop
push
movb
pop
and
gs
add
cmp
mov
mov
jmp
lahf
push
push
push
out
mov
out
sub
add
pop
cmp
jno
push
pop
jg
or
imul
das
jl
push
icebp
and
js
imul
in
into
fldl
push
ficomps
cmp
xor
push
pop
fninit
cmc
or
xorb
mov
cmp
jnp
adc
inc
in
clc
daa
dec
or
add
out
push
mull
fnsave
lahf
mov
das
pop
jb
and
lret
sub
cmp
adc
idivb
sub
cmpl
push
lock
or
das
push
inc
jo
test
ret
push
dec
xchg
pop
cs
imul
dec
push
push
adc
or
pusha
rorb
pop
js
sbbb
mov
cwtl
or
loope
sbb
and
and
adc
pop
mov
xchg
mov
ds
loopne
lcall
div
std
add
fsubr
jo
popf
jnp
lods
loope
test
push
or
push
jmp
ret
call
mov
scas
call
cmp
cmp
test
dec
imul
add
aaa
sbb
jmp
mov
inc
mov
les
pop
call
iret
shl
insl
pop
ds
pop
cmc
fneni(8087
and
test
mov
aad
inc
add
shll
in
sub
jecxz
pop
lahf
shr
push
push
mov
jmp
lds
popa
adc
or
add
dec
or
cmp
add
adc
mov
dec
andb
jnp
dec
jne
cltd
in
or
mov
and
pop
pop
add
out
cs
push
nop
mov
push
dec
jmp
popl
out
push
jge
inc
jnp
sub
cmp
and
bound
xor
or
jo
or
jne
add
gs
fdivr
flds
das
ljmp
and
cmp
cmp
xchg
orb
push
rorl
sbb
mov
push
pop
std
push
push
sub
lahf
outsb
in
add
pop
scas
cmp
jmp
and
das
dec
mov
pop
sbbb
testb
hlt
dec
mov
popf
pop
in
mov
cli
adc
test
pop
mov
lret
out
sub
dec
sub
call
inc
pop
out
adc
pop
les
jecxz
xorb
ja
xchg
mov
in
inc
nop
inc
push
jae
pop
daa
xchg
mov
mov
je
jecxz
pop
push
xor
sub
sub
jbe
popf
jecxz
xchg
shll
ljmp
add
cmp
mov
outsb
push
cmp
movsb
test
mov
xor
push
sub
xchg
jmp
nop
jp
lret
pop
sarb
add
ljmp
out
xor
ret
sub
neg
cmp
ljmp
mov
dec
inc
sub
loopne
jp
inc
jae
pop
mov
mov
movsb
cmp
pop
faddp
push
notb
les
jge
or
mov
icebp
inc
repz
jmp
pop
in
sub
jb
jb
aas
xor
cmpsl
cmpsl
pop
das
fdivs
ss
add
lods
stc
lds
scas
mov
sbb
lret
push
enter
adc
xchg
outsl
mov
fisttpll
push
es
inc
addr16
sbb
adc
loopne
lret
stc
fcompl
daa
mull
lods
dec
or
xorb
stos
xchg
repz
dec
xor
push
pop
call
inc
xor
shl
rcrl
mov
in
mov
pusha
lahf
fdivrs
stos
jns,pt
jne
xor
inc
cmp
add
xchg
jnp
inc
xchg
cmp
push
mov
in
xor
dec
sbb
inc
fadd
rolb
imul
dec
push
adcb
lods
int3
sbb
sub
mov
xchg
cmc
in
pop
cwtl
jp
or
add
mov
adc
lods
xchg
mov
jg
mov
int3
leave
xchg
xor
dec
in
adcb
and
mov
inc
out
leave
out
adc
scas
xor
jmp
add
arpl
rcrb
and
popa
sbb
inc
les
sub
out
sbb
mov
inc
pop
in
cmp
push
fs
sub
rcrb
and
insb
add
ffree
or
popf
fistpll
sub
sub
and
add
mov
push
or
pop
push
xchg
cmpsl
jg
inc
sub
ja
cmp
jmp
nop
and
addr16
nop
dec
loopne
popf
adc
cmp
jmp
push
mov
rorl
xchg
pop
add
dec
mov
jmp
sub
dec
inc
adc
push
leave
mov
or
stos
dec
pop
add
xchg
insl
pop
jo
dec
inc
popa
add
aad
and
cmp
inc
bound
push
add
inc
cmp
sbb
ret
sub
fdivrs
mov
add
push
add
add
jnp
jno
arpl
add
inc
jnp
aam
or
pop
movsb
add
cmp
lods
inc
ljmp
add
inc
cmp
sbb
aad
or
cwtl
adc
cli
movsb
pop
popf
std
ss
push
aas
scas
cltd
mov
push
popa
outsl
mov
sti
or
pop
das
lock
jmp
cld
leave
add
inc
cmc
inc
cmp
call
mov
lahf
daa
push
roll
ljmp
insb
out
adcb
push
cmc
dec
pop
adc
lret
jmp
jmp
sub
fs
mov
in
das
fistpl
push
push
pop
decb
mov
movsl
mov
leave
daa
jle
mov
cmp
into
inc
cmp
loopne
adc
scas
mov
pop
mov
das
lcall
jle
adc
mov
scas
dec
test
dec
mov
push
fldl
andl
ret
xchg
mov
sub
cmp
add
add
inc
lahf
pusha
adc
pusha
jno
iret
repnz
mov
cmp
sub
jle
ljmp
gs
xor
inc
es
aam
or
in
out
pop
cmp
push
xchg
imul
xorb
adc
jmp
push
adc
js
sbb
movsb
sub
sbb
fdiv
sbb
incb
jmp
js
cmp
add
xor
mov
loop
hlt
cmp
scas
shl
fisttps
mov
sub
or
test
jnp
and
fwait
inc
cwtl
int
es
lahf
pusha
cmp
dec
pop
xor
jnp
jo
mov
xor
adc
loope
scas
adc
cmp
test
js
xor
out
or
xor
std
xchg
add
dec
sub
not
and
push
inc
stos
mov
and
xor
clc
sar
pusha
push
mov
dec
adc
mov
mov
les
sub
pop
ds
cld
add
mov
sub
stos
pop
xlat
add
inc
pop
xchg
cli
clc
pop
mov
fmull
xor
das
xor
sub
inc
or
or
dec
add
cmp
mov
or
or
mov
jge
aas
sbb
sbb
and
repnz
sbb
sub
push
mov
js
testb
movsl
pop
mov
ljmp
out
fdivp
add
add
and
add
and
and
scas
pushf
dec
adc
mov
push
ds
push
insb
push
lret
enter
push
lods
mov
cmp
inc
movsb
scas
rcpps
ret
inc
outsb
pop
push
test
sub
sub
cltd
cmp
push
adc
insb
mov
outsb
mov
sub
pop
and
adcb
movsb
dec
clc
jae
mov
inc
outsb
fstpt
pop
sub
mov
imul
xchg
xor
mov
or
add
or
dec
mov
and
inc
mov
cmc
sub
sbb
push
in
fdiv
cmp
and
stc
sti
and
cli
sbb
rolb
xlat
rorl
adc
lahf
dec
mov
cmp
hlt
xchg
loope
mov
push
mov
mov
add
cmp
rcr
inc
push
pop
shl
sbb
push
push
adc
add
les
xchg
in
add
xor
mov
adc
rcll
mov
inc
and
das
ret
repz
push
or
insb
test
push
xchg
test
pop
inc
adc
mov
ss
mov
add
test
adc
sti
cwtl
jg
push
sbb
repnz
xor
lret
pop
or
push
outsb
sub
inc
sbb
fnstcw
loope
int
mov
push
and
and
imul
push
hlt
nop
push
xor
pop
mov
jno
movsl
and
add
or
adc
iret
popa
jp
or
jp
icebp
sub
notb
fsubrs
sbb
jle
jbe
cli
pop
inc
pop
push
bswap
out
leave
and
cmp
sti
mov
push
dec
add
repz
dec
pop
mov
pop
clc
mov
notb
push
cmp
and
push
cmp
inc
addl
xchg
mov
jmp
andb
xor
xchg
add
cmp
dec
dec
mov
clc
mov
fistpll
pop
pop
dec
in
aas
sub
push
sbb
mov
xlat
dec
call
push
mov
and
out
cmpsb
add
jmp
cmp
dec
ds
mov
lea
pusha
jg
addb
or
push
fsts
mov
aas
sub
subl
sub
es
inc
mov
mov
sbb
jb
add
xchg
and
lret
cmp
popa
addb
cmp
add
jae
inc
xchg
mov
cmp
je
popf
mov
cmc
dec
xchg
xor
sub
jae
push
pop
sub
lret
and
jno
rclb
or
pop
cmp
pop
and
sub
dec
sti
add
inc
rclb
add
rcrb
and
inc
pop
out
icebp
sub
lret
push
sub
cmp
xchg
fcoml
sub
jmp
dec
cmpsb
add
push
jmp
sub
dec
xchg
in
sub
dec
pop
jl
mov
add
xchg
outsb
mov
out
inc
xor
jg
cmp
or
adc
add
inc
mov
addb
mov
rcrl
jmp
fdivs
jnp
das
out
push
jns
dec
xlat
inc
mov
sbbb
icebp
add
xchg
jmp
in
lahf
push
inc
xchg
jle
jae
mov
cmp
dec
arpl
testb
or
jno
or
mov
aad
push
adc
or
mov
cmp
jg
inc
sub
dec
add
popf
stc
xor
mov
sub
ret
dec
cmp
pop
rsm
sub
int3
jl
mov
mov
out
sub
pop
push
jne
loopne
inc
jle
insl
mov
dec
repz
jmp
int
lea
jo
jo
repz
std
dec
mov
outsb
push
sbbl
push
cmp
int
ljmp
aad
cld
dec
std
xor
jmp
popf
jg
sbb
pop
add
lahf
lods
sbb
outsb
in
dec
aad
in
or
imul
and
add
push
aad
sub
rorb
sub
sub
cmpl
lret
sahf
pop
push
and
cmp
into
cmp
push
leave
adc
out
int3
out
cmpb
push
add
mov
loopne
movsb
mov
or
sbb
roll
dec
pusha
ss
or
mov
or
pushf
jo
mov
inc
out
mov
cmp
and
add
push
jecxz
sub
sub
sbb
repnz
lock
pop
mov
sbb
addb
inc
and
mov
std
mov
into
pop
cmp
jmp
nop
or
mov
fs
mov
pop
mov
out
adc
stos
fs
jmp
pop
aad
mov
lds
or
mov
sbb
jbe
pop
xchg
or
dec
popf
pusha
lahf
mov
jmp
repz
dec
sbb
into
fwait
push
adc
mov
xchg
add
xor
xchg
push
cmpsl
cmpsb
jmp
cmc
out
pop
adc
cwtl
pop
icebp
lahf
les
mov
and
jne
push
out
das
xchg
sbb
jl
dec
push
fwait
or
lods
push
imulb
xor
out
adc
cmp
and
and
rorl
pop
cmp
outsb
pusha
jmp
leave
test
fucomip
int
xor
or
fldenv
inc
cmp
xchg
and
jmp
loop
int
outsl
das
leave
lock
movsb
in
jb
jmp
lahf
or
sub
lock
mov
sub
mov
repnz
dec
lahf
add
or
ja
pop
pop
or
jne
fdivrl
loope
cwtl
das
enter
in
mov
ret
jmp
out
cmp
rol
in
cltd
hlt
pop
popf
pop
arpl
ficoms
dec
push
leave
gs
mov
mov
sbb
pop
ds
pop
adc
and
sub
dec
xchg
enter
xor
es
sbb
das
cmp
std
xchg
addb
sub
imul
scas
dec
scas
and
test
ss
mov
in
aad
xor
xlat
pop
cli
gs
xor
inc
scas
push
mov
mov
mov
mov
add
inc
lahf
pop
cmpb
mov
mov
push
push
jnp
popf
adc
inc
test
jo
add
cmp
std
outsl
testl
andnps
xor
cmpl
shl
icebp
mov
pop
nop
xor
mov
roll
xor
iret
push
lds
add
push
mov
shr
mov
scas
shl
adc
jp
xor
mov
ret
or
inc
mov
lods
push
sub
pop
ret
pop
push
ror
xlat
sub
sbb
sbb
sub
rclb
jo
popa
add
sbb
mov
rcr
stos
sbbl
dec
dec
in
mov
jmp
jle
push
in
aaa
sub
roll
frstor
push
mov
xchg
mov
ror
mov
repz
and
lock
inc
xchg
jns
test
jbe
in
pop
aad
lock
insb
push
repz
or
push
popf
rcr
inc
add
jae
jp
stc
arpl
ds
dec
addl
test
test
stos
mov
lret
mov
jbe
push
xchg
push
or
popa
add
sbb
popa
movsb
mov
pop
sub
dec
add
in
pusha
rorl
xor
push
jmp
cmp
fcoml
neg
lds
jno
out
movsl
scas
repnz
out
imul
dec
aad
mov
outsb
push
clc
xor
sub
dec
or
aad
add
pop
loop
lret
cs
mov
hlt
lods
sub
jg
pop
mov
clc
mov
xchg
nop
insl
jne
cld
pop
add
popa
ja
shl
lret
fnstsw
insb
xor
jle
push
cmp
lret
add
shl
jle
mov
jbe
dec
mov
add
push
add
fsts
leave
cs
dec
mov
lcall
popa
inc
or
push
pop
xchg
bound
xor
or
fidivl
xchg
and
repnz
cmc
inc
sub
ljmp
add
enter
pusha
push
mov
jmp
jne
test
lods
jl
and
and
pop
std
adc
daa
in
ret
inc
fisubl
popa
pop
mov
sub
test
out
pop
add
popf
lock
mov
daa
pop
push
xchg
sbb
hlt
lea
clc
pop
popa
rcrl
bound
gs
mull
addl
xor
jne
add
jmp
stc
push
sub
repnz
xlat
adc
adc
insl
pop
aas
and
inc
std
shrb
call
jge
das
push
jmp
mov
sub
das
dec
pop
lret
mov
clc
sbb
cmp
sbb
int
jmp
xor
sbb
call
daa
in
test
roll
daa
loopne
fsubl
stos
das
gs
loope
movsb
rorb
stos
pop
popl
fdiv
lret
sub
cld
jg
add
data16
inc
lahf
ret
das
sbb
or
aas
inc
aad
sbb
js
dec
lods
push
or
js
xlat
xor
in
jp
sbb
xchg
jbe
pop
jge
add
das
jmp
pop
push
add
imul
pop
enter
xor
insl
pop
je
iret
dec
sbb
pop
jmp
out
pop
ljmp
movsl
pop
popf
add
mov
fadds
punpckhwd
fmull
xchg
jo
mov
leave
pop
inc
mov
sub
push
jmp
stc
sbb
icebp
xchg
out
data16
dec
dec
xorb
dec
mov
cmp
shrb
adc
outsl
or
mov
xor
jge
push
mov
xor
push
fs
pop
shrl
inc
and
push
adc
xchg
in
jmp
in
ret
call
push
push
sbb
pop
pop
test
dec
in
cmp
enter
push
dec
outsb
scas
jo
push
fucomip
sub
sub
icebp
and
push
add
sub
pop
lds
cmp
cld
dec
pusha
push
add
adc
push
mov
aas
in
loope
jbe
sbb
icebp
pusha
stc
jg
enter
stos
xchg
push
pop
leave
pusha
imul
push
jmp
inc
push
movlps
insl
cmc
mov
pusha
inc
jmp
cmpsb
or
add
sub
inc
push
and
add
insl
add
rcl
add
jns
add
out
lret
sub
rcll
repnz
div
pop
or
cmpsl
add
cs
xor
inc
test
jo
sub
cs
add
dec
xor
std
sub
loop
loope
testl
mov
sbb
in
pop
cltd
scas
add
xor
dec
and
cmp
push
int3
or
shrb
push
icebp
xchg
outsb
jbe
sbb
orb
dec
nop
sbb
mov
std
insl
pop
movb
cmp
lock
insb
lret
and
pop
aad
pop
out
aam
scas
jecxz
sbb
push
sbbb
push
ja
sbbb
dec
mov
cli
dec
push
pop
pop
xor
cwtl
pusha
pop
push
add
push
sub
cmp
and
dec
and
imul
mov
inc
inc
pop
iret
add
inc
and
mov
orl
jmp
or
mov
cmp
or
sbb
dec
int3
and
or
cs
xor
pop
push
push
mov
push
jbe
cltd
sub
xor
rcrl
adc
or
dec
jnp
xorl
add
pop
dec
not
inc
rolb
test
jecxz
or
insb
mov
repz
aaa
cmpsb
or
ljmp
xchg
and
fs
sbb
and
mov
mov
cmp
push
pop
test
daa
bound
sub
and
xchg
pop
popf
ret
inc
ljmp
push
lret
cli
pop
loope
sub
cmp
mov
cmp
mov
sub
or
xor
rcrb
xchg
mov
mov
ds
sbb
or
aas
repz
das
sub
push
aas
ret
sbb
pop
xor
add
fisubrs
jl
jbe
add
aam
decl
xchg
fmul
mov
push
dec
daa
mov
and
in
repnz
dec
lods
jae
pop
xchg
jmp
add
nop
adc
inc
lcall
inc
out
xorl
push
test
xor
or
loopne
xchg
jbe
jnp
push
dec
add
add
out
icebp
popa
pusha
add
mov
adc
dec
sbb
or
pop
lea
and
mov
or
ja
push
cmc
fs
or
jge
inc
cmpsl
sarl
dec
inc
adc
push
push
subl
adcl
adc
in
xlat
dec
out
lret
push
push
int3
dec
add
mov
adc
jmp
daa
fldl2t
cli
mov
cmpb
testl
sbb
cmp
shrl
rcll
pusha
add
adc
or
fistps
push
movsl
and
inc
jle
int3
or
dec
dec
push
push
or
pop
add
xor
aas
pop
neg
jnp
mov
pop
push
loopne
cmp
xor
out
fstpl
arpl
add
xchg
mov
and
cli
jge
out
add
int3
idivl
add
dec
sub
pushf
push
push
add
mov
leave
mov
and
sub
sub
xor
mov
es
and
negb
xchg
stos
add
ljmp
xor
outsb
cmp
int3
es
sbb
pop
sbb
inc
pop
das
ds
add
pushl
fdivl
mov
jmp
frstor
gs
scas
xor
jg
pop
mov
add
mov
inc
push
jbe
xor
pop
jg
push
xchg
ljmp
inc
inc
sub
adc
dec
pusha
ret
jnp
inc
dec
aas
mov
rorl
cmpb
clc
mov
add
out
mov
pop
push
idivb
xchg
jb
add
jno
jg
clc
test
data16
add
popa
cmp
subb
jecxz
jmp
cmp
pop
push
mov
mov
inc
iret
ret
jno
xchg
rol
adc
out
es
test
pop
pop
jecxz
xchg
scas
cwtl
sbb
loop
xchg
xchg
dec
bound
pop
xchg
fadds
push
clc
cmpl
lret
fcoml
inc
pop
push
xchg
mov
pusha
xor
push
daa
arpl
push
mov
out
dec
sub
das
scas
xorb
cmp
or
xor
push
icebp
lods
outsl
lods
std
test
cmpsb
mov
stos
mov
pop
adc
mov
xchg
and
mov
ss
rol
push
pop
mov
clc
cmpsl
xor
sti
adc
xchg
test
sbb
imul
sbb
dec
dec
pop
ret
jp
xor
js
dec
adc
push
add
sbb
loopne
es
addw
test
adc
sarl
push
xor
cwtl
subb
or
sbb
jle
sub
mov
sbb
xor
inc
cmp
mov
mov
pop
xchg
adc
incl
stos
add
mov
in
add
or
mov
lock
pop
lcall
add
sbb
or
sub
jg
xchg
sbb
pop
sbb
pusha
sbb
arpl
mov
sbb
sbb
adc
and
adc
push
pushl
xchg
bound
out
adc
xchg
pop
fadds
out
flds
pop
test
dec
pop
out
daa
enter
arpl
div
pop
jl
mov
adc
or
cld
jmp
add
jne
add
or
jno
pop
inc
rolb
inc
jmpw
mov
ret
repnz
inc
lds
sub
inc
cs
push
or
inc
lret
movsb
dec
pop
add
sbb
xchg
lahf
sub
addr16
stc
add
mov
add
cmp
jle
gs
xchg
and
std
inc
fldl2t
xchg
das
pop
mov
popf
push
scas
fdivs
aaa
mov
push
dec
pusha
mov
dec
sub
and
pop
cli
adc
xchg
popa
sbb
inc
sub
enter
jb
or
fwait
or
and
jbe
jnp
push
pop
popaw
pop
into
mov
in
jnp
cmp
sbb
adc
ret
loopne
push
daa
clc
fiadds
lds
scas
leave
ljmp
adc
daa
pop
shl
in
jp
pop
test
dec
scas
fimuls
jg
test
repnz
jne
inc
pop
pop
add
pusha
mov
mov
mov
mov
pop
roll
les
stos
cmp
pop
jg
pop
adc
mov
xor
call
jl
hlt
mov
loope
call
lds
mov
pop
xor
jno
cmc
out
andb
and
add
xchg
hlt
mov
jecxz
sbb
and
outsl
cmp
mov
mov
adc
push
pop
jmp
sar
sbb
push
dec
inc
lods
sub
sub
jo
sub
add
cmp
ljmp
cmp
js
dec
scas
or
scas
cmp
xor
rol
and
and
mov
fs
pop
dec
push
or
mov
je
ljmp
mov
cmpb
add
push
pop
pop
test
jns
sbb
dec
mov
stos
add
xchg
fnstcw
push
fucompp
push
pop
testl
call
jmp
into
push
or
inc
stos
enter
cmp
inc
pop
xor
repnz
push
dec
mov
pop
push
je
loopne
mov
fs
icebp
pop
push
iret
scas
mov
idivb
xor
xchg
pop
pop
jecxz
cwtl
sub
add
mov
inc
dec
or
dec
mov
sbb
jge
mov
add
cmp
pop
push
mov
fistpl
repnz
movsl
stos
xor
shl
pop
jp
or
scas
lds
adc
divb
pop
pusha
inc
jmp
and
out
xchg
and
gs
ret
jle
jmp
push
enter
and
sbb
dec
lahf
mov
or
sbb
daa
mov
test
add
adc
push
add
add
hlt
sbb
cmpsl
jl
adc
je
push
jmp
mov
push
aaa
push
test
gs
xchg
std
pop
jbe
jb
lcall
mov
mov
xchg
pop
xor
fwait
insl
xchg
aas
jecxz
xchg
sub
jmp
mov
test
imul
outsb
sbb
in
or
and
xchg
aam
cmp
and
sbb
dec
out
faddl
sub
inc
adc
scas
and
pop
push
cmp
es
mov
jmp
imul
dec
xchg
insl
adc
or
push
int3
or
xor
pop
and
or
mov
jp
addb
adc
adc
inc
repnz
push
or
gs
add
jmp
cltd
cli
cmp
add
push
add
sub
sub
cmpb
test
in
push
lahf
sub
or
push
dec
push
and
lods
adc
in
add
jmp
xchg
xlat
mov
scas
jl
jle
leave
je
sub
gs
sbb
and
inc
cmp
loope
ljmp
mov
mov
adc
mov
pop
in
mov
ret
inc
inc
push
mov
mov
pushf
cmp
daa
out
push
jmp
cmc
stos
sub
push
jle
add
imul
push
mov
adc
jo
imul
and
adc
pop
push
cmp
fs
mov
std
add
lahf
sub
pop
push
inc
and
cmp
ret
fistps
dec
ret
cmpsb
test
xlat
push
loop
std
push
call
or
jg
popa
cmp
das
call
jmp
xchg
stos
pushf
out
retw
adc
jmp
push
mov
or
out
add
out
jmp
cmpsl
test
mov
outsb
push
xchg
pop
add
lcall
pop
mov
sub
iret
and
adc
jg
mov
mov
stos
std
jnp
mov
shr
mov
add
cmp
pop
or
out
sub
stc
inc
jle
mov
out
sbb
out
rclb
popa
aaa
in
mov
icebp
jo
pop
pop
inc
test
out
stos
lock
cmp
jns
test
xor
mov
daa
add
mov
js
lcall
cwtl
inc
arpl
cmc
dec
ret
test
mov
sub
cmp
add
jmp
xor
es
data16
std
fdivrs
outsl
icebp
adc
js
movsl
mov
jecxz
bound
push
push
gs
jbe
into
dec
jmp
lock
xchg
and
orb
add
je
jns
dec
fistps
mov
sbb
xor
xchg
out
pop
or
repnz
cltd
dec
or
and
pop
adcb
jl
pop
dec
or
cli
cmpsl
bound
flds
lret
ret
push
xor
and
into
not
xchg
je
jae
pop
jmp
add
outsb
xor
leave
loopne
bound
in
icebp
add
push
scas
loopne
cmpsl
add
int
inc
and
pop
add
jle
xor
mov
pop
push
xchg
or
arpl
loopne
ret
testb
iret
xor
fucomp
mov
cld
les
sub
mov
cmp
jno
or
jbe
jbe
orb
jmp
inc
mov
test
sub
jae
shlb
cmp
mov
xchg
sbb
or
xor
or
daa
fdivl
xor
dec
dec
mov
lahf
mov
cmpb
out
je
adc
movsb
sub
scas
xchg
pop
decl
mov
hlt
mov
cli
push
mov
sub
out
imulb
and
and
test
sub
mov
inc
add
xlat
jae
outsb
or
fcomp
ja
add
pop
push
mov
cmp
or
neg
push
mov
sub
int
jnp
cli
jo
lock
pop
add
cld
lret
push
int3
cmp
out
xor
fidivrs
rcl
call
imulb
rorl
mov
jns
add
xchg
scas
les
mov
push
pushf
inc
int
push
add
jmp
addb
fcomps
aam
stos
mov
xlat
cmpl
jmp
push
dec
repnz
mov
sti
mov
sbb
xchg
je
pop
mov
adc
sbb
js
rcll
sub
add
enter
in
xchg
cmp
fsubrp
sub
int
testb
notb
mov
or
or
push
popf
xorb
repz
mov
mov
mov
cs
pop
sub
popf
sbb
loop
jne
push
repnz
or
cld
jmp
data16
push
inc
scas
pushf
or
cmpsl
ret
lret
sub
repz
jl
or
decl
jecxz
loopne
repnz
das
int3
adc
mov
cli
push
sub
or
insl
jbe
inc
nop
jmp
ret
js
push
bound
push
je
pusha
pop
dec
push
add
dec
ret
mov
xor
add
sub
inc
imul
pop
stc
insb
dec
clc
cli
push
scas
cmp
lock
xchg
xor
cmpsb
pop
mov
sub
push
into
scas
adc
call
arpl
mov
pop
inc
lcall
mov
jmp
dec
dec
sbb
sub
inc
lods
sbb
sbb
in
outsl
jns
add
jmp
fnstsw
mov
mov
push
jmp
jg
or
scas
cltd
je
adc
push
outsl
mov
pop
cmc
lock
in
add
jp
adc
jne
or
sbb
mov
aaa
dec
hlt
inc
add
sub
dec
jns
sbbl
mov
stos
sub
in
mov
insb
jno
mov
lcall
into
jns
lcall
mov
repnz
shll
sbb
int
loopne
mov
mov
push
add
inc
pop
sub
jns
or
add
mov
dec
push
in
pushf
loope
push
sbb
mov
or
ret
xchg
aad
lret
lock
sub
std
mov
push
mov
jnp
mov
es
lea
dec
sub
movsb
sub
jae
daa
push
minps
jle
jg
xor
mov
mov
dec
cmp
add
xor
jmp
mov
iret
xchg
push
fisttpl
sub
xchg
dec
xchg
rcl
xor
add
push
push
cs
xsha256
cmpsb
push
jb
insb
adcb
cmp
xchg
adc
sub
cwtl
stos
cwtl
call
fucomi
dec
outsb
xchg
loopne
pop
cmp
xlat
subb
add
jae
or
enter
pop
jmp
mov
aad
jmp
jg
stos
ret
insb
sbb
mov
insb
mov
fldenv
mov
push
push
repnz
popf
fistpll
lret
pop
xchg
daa
mov
jecxz
test
decb
jmp
rcr
jno
or
lods
push
inc
test
add
add
ret
jns
sub
imul
jecxz
add
push
test
and
xchg
and
and
js
push
jnp
call
jb
jmp
fcmovbe
movsl
cmp
cmc
sub
stos
aam
pusha
jecxz
push
and
fsubl
add
test
ja
or
pop
dec
adc
add
push
stc
or
das
in
and
add
out
ret
mov
push
ss
sbb
test
add
jg
xchg
jmp
pop
pop
sbb
ss
test
scas
add
and
pusha
mov
inc
inc
or
xchg
jnp
cltd
mov
xor
sbb
pop
jmp
mov
shl
xor
in
and
gs
xor
cmp
fstpt
pop
mov
mov
lods
push
push
sub
je
mov
mov
aas
bound
xor
fidivrl
pop
pop
fcoms
and
jmp
nop
add
ja
ss
mov
pop
jns
push
out
das
daa
je
xor
and
jnp
icebp
jmp
jecxz
fsts
pop
sub
into
or
push
dec
out
lds
pop
dec
mov
sbb
jp
adc
cmp
rolb
pop
shlb
push
push
fmul
std
jge
idivb
inc
ss
lret
jp
ljmp
mov
jmp
out
scas
pop
push
sub
pop
push
repnz
pop
mov
or
sub
mov
xchg
cld
pushf
or
push
mov
and
sbb
iret
inc
mov
fisubl
push
repnz
add
xor
ss
or
pop
popa
or
rcrl
insl
adc
incb
mov
test
ljmp
inc
add
pop
xchg
xchg
test
add
pop
xchg
jns
mov
gs
mov
adc
xchg
xchg
dec
jmp
mov
pop
jne
jmp
xchg
jne
xchg
or
and
subb
adc
inc
xor
push
iret
sub
sbb
sbb
stc
add
cmp
xor
or
jbe
push
notl
add
aad
jmp
push
mov
sub
pop
jae
jbe
popa
xor
rol
pop
push
ja
mov
xor
sub
mov
jbe
in
ret
aas
push
xor
cmc
dec
push
sti
leave
dec
pusha
cmp
and
ja
adc
mov
subl
mov
pusha
hlt
jmp
and
dec
push
or
fiaddl
test
inc
addb
ret
inc
dec
push
cmp
inc
dec
xor
mov
and
aaa
push
cmp
out
outsb
and
fst
adc
lahf
jne
gs
jb
xchg
rolb
scas
and
rol
cmp
fists
push
scas
mov
pop
dec
xchg
cwtl
sarb
add
cmpl
xchg
mov
out
xchg
out
fisttpll
pop
test
jns
out
push
mov
mov
add
iret
out
fwait
add
dec
pop
push
adc
cld
inc
or
out
cli
fwait
mov
sbb
ja
repnz
push
sub
aad
imul
ret
int
jmp
and
daa
pusha
lods
jb
dec
sbb
lea
or
stos
loope
test
and
mov
shll
leave
mov
ret
xchg
mov
pop
jne
pop
push
mov
sub
pop
jmp
jg
fldt
xor
xor
call
or
dec
xor
pusha
and
out
pop
pop
leave
mov
push
mov
sub
jmp
jb
cmp
loop
test
movsl
dec
xor
stc
test
aas
stc
jl
rorl
or
pop
push
cmp
push
das
fcomp
in
jo
ljmp
popa
pop
pop
pusha
add
ficoml
adc
out
dec
and
stc
js
js
aas
adcb
mov
test
jge
or
or
add
mov
inc
pop
mov
mov
or
movsb
je
popf
mov
pop
add
pop
add
push
jmp
inc
out
loop
leave
or
jmp
mov
inc
dec
sub
cli
mov
sets
mov
pop
add
add
add
sub
pop
mov
dec
clc
cmp
test
mov
sar
test
dec
ret
jbe
mov
std
inc
sbb
or
adc
negb
adc
sbb
jmp
mov
inc
pop
in
mov
pop
pop
push
call
out
xor
ret
jo,pt
movsb
jnp
and
add
dec
les
aas
in
add
dec
mov
sbb
sub
arpl
jmp
xchg
rorl
sbb
shl
pop
mov
jbe
or
popf
bound
lahf
cli
insl
and
outsl
mov
subl
mov
jmp
mov
xchg
scas
ret
xlat
inc
push
sti
jl
mov
push
outsl
cmpsb
fisubs
adc
aam
and
popf
xlat
xor
xchg
mov
sbbl
divl
xor
lds
test
lea
ljmp
push
ja
push
pop
fs
pop
sub
repz
adc
ljmp
cmp
or
in
std
add
jb
mov
or
pop
into
adc
adc
add
cmp
jmp
es
push
dec
add
sbb
or
add
or
xchg
inc
xor
push
shlb
add
mov
movsl
pusha
pop
xchg
mov
iret
or
mov
sub
add
cs
mov
xchg
mov
ja
loop
loopne
dec
sbb
into
testl
pop
test
sarb
je
cmc
fadds
jns
and
add
add
scas
popa
sub
or
je
inc
nop
movsb
adcb
aad
int3
and
icebp
incb
or
push
sarb
dec
mov
iret
dec
adcb
and
jnp
test
add
and
ret
jge
pop
add
cmc
jo
dec
daa
jp
je
pusha
dec
inc
xchg
imul
cwtl
movsb
movsl
pop
outsb
daa
out
scas
inc
xchg
jmp
pop
pop
lret
xor
stc
loop
push
sbb
push
mov
jne
jmp
xchg
push
mov
inc
adc
push
insl
jbe
mov
mov
add
pop
pop
add
loop
push
and
inc
pop
pop
repz
jecxz
xchg
and
inc
push
aad
or
pop
ja
push
out
inc
addr16
testb
sbb
lock
inc
add
sbb
jmp
adc
xor
bound
xor
aad
and
push
aam
push
pop
dec
jg
cmp
movsb
add
push
mov
sub
dec
sub
mov
push
aas
push
dec
push
loope
cmpsl
push
rclb
or
jmp
jmp
mov
and
or
inc
xor
ret
aam
mov
jne
imul
add
push
adc
add
and
sbb
mov
jg
add
out
sub
sarl
flds
push
stc
inc
pop
add
cmp
xor
lods
aam
mov
daa
dec
dec
mov
fisubs
add
inc
mov
adc
mov
add
cli
movsb
cmc
dec
call
cmp
cli
and
fists
pop
jmp
popa
and
mov
popf
add
aaa
mov
pushl
iret
je
imul
xor
xchg
pop
pop
outsb
jne
push
xor
insl
or
cmpsl
testb
ljmp
adc
add
add
popf
add
push
push
adc
dec
xor
cmp
add
ret
or
mov
in
push
sub
xor
rorl
sti
xor
nop
cmc
pop
pop
das
xor
call
inc
idivl
fisttpll
cli
sub
push
daa
orl
and
add
add
nop
into
or
mov
jne
scas
orl
subb
xor
stos
add
mov
push
and
ret
adc
pop
sbb
add
dec
dec
push
adc
inc
jo
outsb
stos
cmp
pop
xlat
add
test
stc
test
jne
out
add
jge
mov
loopne
sub
add
pushf
scas
hlt
mov
pop
loope
xor
pop
adc
and
pop
mov
inc
or
mov
adc
ss
or
imull
ss
nop
hlt
dec
add
pop
jo
push
push
aad
daa
bswap
jl
adc
stos
mov
mov
insl
push
mov
mov
mov
cmp
fsubrl
lods
add
ljmp
mov
mov
or
in
inc
pop
pop
inc
and
popf
cmp
xchg
pop
sub
hlt
repz
mov
mov
mov
icebp
jmp
loope
mov
and
arpl
out
ljmp
inc
icebp
rclb
mov
pop
aas
xchg
xor
jmp
mov
ds
or
sbb
dec
push
jnp
dec
jb
add
out
outsl
repz
lret
or
ffree
xor
data16
or
pop
add
jl
sub
jmp
mov
cld
imul
push
cmp
add
jmp
mov
add
xor
and
fwait
dec
mov
das
jmp
and
add
mov
add
xchg
loopne
xchg
adcl
adc
cmp
sbbb
cmovb
xor
dec
pop
mov
add
pop
aad
movsl
push
andl
mov
mov
or
sbb
mov
or
mov
mov
sub
flds
mov
sub
jg
shll
jb
cmc
pxor
jo
jge
pusha
ficoms
push
mov
test
mov
jmp
repnz
add
mov
negb
lret
fstl
sarb
popa
jno
sarb
mov
push
mov
inc
repnz
or
mov
inc
mov
add
add
daa
jmp
daa
add
call
and
mov
repnz
fcoms
stc
mov
jmp
in
sub
test
and
cmp
icebp
push
mov
mov
fs
pop
filds
and
jge
enter
daa
pop
ds
btrl
mov
outsl
xchg
add
loope
aad
and
or
pop
mov
es
mov
jnp
or
or
repz
and
les
dec
jbe
xchg
adc
arpl
fistps
lcall
or
xor
jnp
pop
jmp
mov
inc
xor
sub
xor
aam
mov
pop
rorl
lds
cmp
push
push
push
push
push
fcmove
cmp
sbb
pop
or
add
adc
jmp
pop
push
repz
mov
push
pop
in
add
faddl
push
adc
gs
mov
cmp
jmp
mov
subb
jns
out
push
je
or
sub
mov
cmp
sub
cwtl
push
xchg
loop
xor
test
bound
jge
dec
bnd
xchg
dec
push
mov
xchg
push
rorb
cwtl
push
subb
movsw
nop
test
stos
decl
jo
mov
mov
fidivl
test
lret
es
dec
xor
and
mov
dec
scas
inc
or
mov
fidivs
shlb
addr16
push
in
icebp
inc
mov
pop
pop
xlat
sub
and
pusha
pop
add
xor
dec
push
cmp
js
xchg
xchg
jo
jno
mov
mov
mov
ret
adc
mov
jbe
fimuls
subb
repz
popa
mov
pop
push
inc
cltd
cmp
pusha
jno
mov
hlt
inc
adc
fidivrs
sub
jp
bound
cmp
add
sub
cli
push
lock
cli
popa
sub
mov
push
add
mov
xchg
mov
push
cwtl
inc
insl
jp
mov
rclb
cmp
stos
lret
pop
push
stos
mov
fsubrs
repz
adc
mov
das
or
sbb
pusha
sbb
or
std
xchg
in
in
dec
sub
js
je
dec
mov
arpl
xchg
stc
lahf
sub
ret
mov
imul
jmp
add
rclb
push
outsb
jge
negl
mov
loopne
mov
or
inc
andl
or
adc
data16
fstl
mov
add
xor
jbe
pop
dec
call
dec
sti
rcrl
push
jnp
lock
lds
pop
mov
or
or
icebp
sub
cmp
mov
out
or
mov
or
vpsubd
sarl
add
fucompp
scas
mov
jecxz
lret
mov
js
or
rol
and
push
jmp
or
adc
arpl
inc
add
ja
add
mov
ljmp
mull
loope
push
add
sub
add
sub
add
popa
push
scas
test
rorb
mov
fxtract
popf
and
xchg
fadds
ret
outsl
inc
pop
sbb
sbb
mov
xchg
jmp
jecxz
xchg
jecxz
xchg
add
mov
inc
mov
xor
push
push
shlb
xor
into
and
jmp
outsb
mov
mov
pushf
cld
pop
pop
jmp
mov
popa
dec
shlb
jg
les
cmpb
cld
lahf
mov
movsb
hlt
and
aaa
or
jbe
cmp
sbb
xchg
lcall
pusha
dec
aaa
test
dec
lret
jmp
adc
sahf
bound
dec
xchg
int
or
xchg
push
and
in
inc
pop
pop
pop
mov
push
lret
and
test
testl
andb
popf
icebp
les
add
inc
std
sahf
mov
and
xor
dec
pop
adc
adc
clc
add
mov
lods
mov
adc
push
cmp
add
in
jnp
xchg
sbb
inc
xor
shl
sub
push
adc
icebp
bound
cmp
inc
cmp
sub
pcmpeqb
or
or
xor
lds
add
cmp
sub
push
push
sarb
call
leave
popa
iret
sub
mov
or
push
inc
pop
pusha
add
fisubl
scas
sbb
ljmp
iret
push
sub
cltd
jno
pop
sub
pop
mov
popa
add
and
dec
call
inc
sbb
aas
or
neg
or
xchg
sub
lds
adc
fs
out
mov
and
daa
pop
and
sub
mov
mov
in
lahf
pop
jmp
inc
adc
and
pop
xchg
jne
ss
ljmp
dec
mov
cmp
les
adc
stos
mov
leave
cld
cmp
cmp
cld
rcl
fistpll
cmpsl
outsl
cmpsl
inc
and
in
outsl
lds
add
aas
mov
pop
and
out
loopne
stc
jmp
dec
filds
movsl
stos
lret
jle
into
dec
sbb
and
adc
lret
mov
scas
in
add
das
mov
pop
jecxz
xchg
movsl
pop
cmp
pop
xchg
filds
inc
imul
lret
add
xchg
sbb
ret
xchg
fadds
in
push
push
pop
ja
aam
hlt
adc
sub
loop
test
je
cli
jne
xchg
sub
adc
pop
aam
scas
in
mulb
sti
mov
inc
inc
sub
mov
pop
repnz
push
push
inc
push
cmp
lret
stos
cmc
mov
cmp
dec
xchg
mov
lret
pop
xchg
xchg
stos
pusha
arpl
dec
in
aas
ret
jmp
xor
movsl
lahf
pop
pop
pusha
or
test
mov
jmp
test
test
cwtl
lods
jbe
js
out
popf
xlat
adc
add
xchg
in
clc
dec
stos
lcall
sti
or
pop
dec
inc
push
orl
adc
lret
sub
and
ljmp
cmc
jg
or
fadds
pop
dec
xor
inc
xor
fists
and
jo
push
or
hlt
addb
adc
ret
mov
add
sub
ja
xchg
mov
cs
dec
ds
cli
pop
mov
pop
das
sub
mull
pushl
push
pop
mov
sub
or
jg
and
aaa
das
push
ds
das
lcall
xchg
es
mov
lods
dec
subl
ja
test
mov
or
or
or
and
sbb
cs
or
scas
push
jo
push
mov
or
mov
jmp
push
mov
clc
hlt
jg
repnz
push
add
scas
mov
dec
or
or
mov
or
subps
push
jbe
and
lds
push
jae
cmp
xchg
mov
testl
and
xchg
ss
test
push
repnz
or
out
jmp
mov
cmp
xor
and
pop
pop
add
cmp
pop
dec
push
xchg
test
sti
cs
les
jmp
jmp
inc
or
pop
cmp
or
cs
test
push
mov
cs
mov
sub
mov
jae
addl
jae
iret
pop
sub
in
popf
jbe
jb
je
jb
incl
jp
adc
dec
xlat
clc
or
or
iret
mov
idivl
cmp
xlat
shl
imul
add
sub
xor
push
adc
fadds
xor
loope
mov
dec
dec
adc
pop
push
outsl
out
les
inc
cwtl
loop
pop
and
mov
or
cwtl
mov
fcmovb
in
jb
sbb
mov
add
pop
push
andb
sbb
mov
and
testl
adc
ljmp
int3
mov
adc
fsubl
pop
fldl
push
outsl
orb
pop
ds
mov
sbb
mov
pop
popa
outsl
enter
out
fisubs
cmpsb
repz
and
out
mov
adc
cmpsl
push
add
pop
jbe
sub
adc
shll
cmpsb
xchg
push
ss
lcall
adc
add
push
mov
jnp
xor
pop
mov
adc
je
sbb
loopne
sub
jp
jge
jne
and
xor
cmp
push
dec
inc
and
adc
inc
sbb
dec
in
orb
pop
dec
js
vpackssdw
add
and
xor
pop
rcll
inc
or
pop
in
jmp
test
sbb
sub
jmp
mov
std
daa
outsb
sub
popf
stc
adc
cli
lods
pushf
movsl
mov
adc
fldt
or
out
jp
aad
push
rclb
mov
mov
sbb
push
call
lods
dec
stos
mov
adc
sub
sbb
sbb
pusha
and
cmp
or
inc
jno
popa
sub
fldt
in
stc
fnsave
or
mov
pop
and
das
lahf
sti
and
pop
adc
lahf
int3
or
out
mov
movsl
cmp
mov
mov
mov
data16
sub
pop
shll
ljmp
dec
mov
int3
and
jp
mov
stos
cmp
into
adc
pop
mov
in
push
jo
pop
sub
cli
shrb
add
sar
cs
test
and
jo
adc
out
dec
hlt
ret
xchg
push
push
mov
ret
add
scas
lock
in
or
mov
shr
loopne
push
pop
rol
cmpb
pop
fwait
inc
leave
pop
loopne
insl
mov
lcall
inc
jmp
dec
push
add
cmp
inc
hlt
push
dec
xor
push
lret
sub
mov
or
xor
or
cwtd
dec
pop
mov
sbb
dec
push
cli
dec
pmulhw
imul
sbb
mov
inc
loop
pop
push
and
push
cmp
fisubs
xor
in
pop
xor
movsb
xchg
daa
xor
inc
or
movsl
addb
push
dec
inc
mov
cmp
sbb
inc
xchg
jne
xor
sarb
fidivrl
mov
add
into
xchg
test
out
gs
notb
mov
shl
lahf
insb
call
pop
push
andb
pop
jmp
sub
mov
or
mov
mov
inc
pushaw
popf
inc
mov
mov
jne
les
popf
jns
ja
pusha
scas
in
imul
mov
and
repz
cmp
pop
mov
pop
stos
pop
inc
dec
js
push
mov
add
cltd
jp
push
xor
imull
or
in
jnp
fcomps
push
idivl
mov
enter
sub
aas
adc
lret
das
mov
xchg
and
sbb
inc
cli
mov
dec
dec
repnz
es
xchg
js
add
test
adc
dec
popf
xchg
repz
pop
jmp
or
nop
jo
add
insl
out
sbb
das
jnp
pop
jb
sbb
aad
sti
addb
xor
mov
int3
mov
dec
mov
fmul
mov
movsl
push
mov
inc
lret
pop
add
xor
int
pop
leave
push
pusha
in
push
inc
popa
sbb
aas
push
and
mov
jle
xchg
pop
mov
divl
and
dec
inc
cmpsl
shrl
fdiv
in
pop
mov
es
sub
jmp
inc
inc
pop
rolb
mov
cld
lret
dec
scas
enter
imul
sub
divl
or
jge
mov
imul
push
jmp
jne
sbb
add
jnp
jl
inc
or
shll
sbb
les
test
fistps
repz
push
xchg
in
ret
call
xor
movsb
or
mov
sti
add
sbb
xor
lock
mov
sub
jmp
and
pop
insb
add
leave
js
pop
xchg
pop
jmp
test
or
inc
sbb
mov
mov
ret
bound
lahf
push
or
inc
int
inc
in
insb
adc
dec
jle
leave
xlat
pusha
mov
dec
and
add
cmp
mov
sub
stc
inc
imul
mov
stos
shl
and
push
xchg
stc
idivb
add
popf
push
rcrl
jg
jmp
jb
cmp
and
jmp
sti
repnz
daa
daa
add
mov
imul
pop
push
inc
test
stc
rcr
pop
add
pop
stc
mov
rcrb
mov
jmp
mov
vmovd
loop
xchg
cli
lea
jp
pop
xchg
lods
xor
repnz
ss
js
xor
pop
popf
mov
jns
xchg
lods
aam
push
push
in
sub
xor
lods
push
inc
aaa
repz
jne
test
pop
loope
cmp
fcomp
dec
xlat
lahf
and
stc
in
iret
ljmp
mov
add
push
ret
sub
js
popf
push
mov
push
jmp
loop
push
mov
jmp
out
jecxz
dec
jp
or
mov
loope
mov
stos
pop
adc
das
icebp
and
arpl
sub
adc
add
xchg
inc
shll
push
rcll
loopne
fmull
scas
lcall
sub
cmp
xor
rorb
jmp
imul
cmp
and
int
mov
cmc
and
js
xchg
scas
add
scas
sub
and
jo
cli
and
sub
mov
xorb
cmp
aaa
icebp
add
lret
cmp
add
pop
cmp
stos
mov
mov
jnp
jnp
call
pop
addr16
pop
in
mov
xor
lock
mov
imul
dec
xchg
adc
mov
jbe
lcall
gs
scas
test
cmp
sub
push
fwait
adc
xchg
stc
arpl
into
cwtl
cmp
rclb
pop
push
enter
adc
jns
mov
cld
xlat
or
xor
pop
pop
sub
cmp
in
pop
aas
dec
call
add
and
add
adc
sub
dec
incl
and
sbb
ja
and
mov
mov
and
pop
add
sbb
mov
and
push
mov
mov
addb
sbb
mov
jg
loop
mov
or
jl
es
test
or
lock
pop
xchg
insl
cwtl
bound
xchg
sub
sarb
jmp
cmp
out
sub
adc
lcall
and
jbe
adc
xor
push
ret
pop
test
jmp
mov
and
into
dec
in
lds
retw
daa
jle
mov
pop
add
js
or
jmp
mov
loope
test
add
shll
loopne
xchg
das
frstor
enter
sbb
push
fstpl
xchg
sub
les
mov
inc
lds
jmp
sbb
sbb
pop
dec
jmp
mov
dec
mov
sub
add
add
rorl
pmuludq
fdivrl
push
mov
xlat
and
mov
pop
lods
stc
mov
pop
dec
lcall
cmpsl
js
xor
jmp
xorl
pop
and
jne
aas
inc
jmp
jecxz
pop
adc
test
mov
leave
cli
and
mov
iret
mov
jmp
cmpsl
loop
lods
pop
xchg
pop
dec
xchg
mov
add
aaa
pop
les
call
jmp
cmp
sub
and
pop
push
cwtl
xor
jle
ss
pop
dec
shl
or
add
lods
jmp
sbb
mov
mov
adc
lret
lcall
jnp
push
lcall
dec
add
xor
or
je
ds
mov
clc
add
push
mov
cli
loop
or
add
xor
data16
mov
loopne
cwtl
daa
pop
insb
and
mov
je
bnd
add
ja
outsb
lds
inc
roll
movsl
cmp
lods
jp
mov
sub
jg
stc
testl
insb
popf
int
xchg
add
pop
loope
or
jg
push
mov
xchg
xchg
sbb
sbbb
inc
or
jp
decl
idivl
in
pusha
mov
sbb
shlb
jbe
add
das
scas
adcb
dec
mov
ljmp
xchg
cmp
push
dec
scas
gs
stos
dec
dec
sub
mov
inc
loopne
push
mov
sarb
ljmp
jmp
ret
xchg
pop
dec
test
jno
inc
adc
jg
nopl
adc
mov
jle
fisttpll
jmp
fnsave
adc
inc
xor
ljmp
imul
push
pop
push
pop
cli
stc
cmpsb
dec
xchg
lods
push
jge
mov
push
xchg
push
push
sub
push
xchg
dec
jne
daa
mov
jno
leave
aam
sbbb
jmp
ficomps
dec
ret
jmp
mov
adc
stos
mul
mov
dec
ret
dec
mov
xchg
lds
movsl
enter
or
push
sub
aaa
xchg
rclb
and
sub
sub
cmpsl
scas
dec
fstl
xor
or
shr
insb
ss
popa
aaa
mul
cmp
and
mov
jmp
add
dec
fucomp
jnp
push
mov
test
jmp
addr16
xor
repz
and
xchg
divb
daa
cli
inc
nop
ds
mov
pop
mov
in
sbb
mov
pop
out
pop
call
outsl
jae
sar
dec
clc
and
pop
xor
push
push
lahf
push
push
inc
xor
enter
pop
or
sub
xchg
stc
push
mov
jno
sbb
lock
ret
or
or
inc
cs
mov
push
mov
or
or
out
mov
cmp
add
lahf
addr16
jmp
shll
mov
mov
movsb
mov
sub
mov
inc
jb
push
repz
add
filds
adc
jp
jl
mov
mov
rcrl
add
lea
xor
stos
and
icebp
shll
es
mov
cmpsb
jmp
or
pop
mov
test
push
call
das
movsb
mov
push
and
dec
rcr
adc
sub
inc
popf
add
mov
hlt
jmp
and
inc
and
mov
jb
xchg
rol
dec
add
adc
lock
ret
adc
lret
pop
addr16
dec
mov
jbe
daa
mov
fsubp
fiaddl
iret
adc
push
jmp
pusha
sub
and
xchg
decl
pusha
repnz
cmp
and
ja
sbb
jne
push
mov
xchg
jnp
jg
stos
ja
mov
stc
mov
or
int3
je
bound
lods
xor
push
mov
cmp
bound
cld
jne
lret
cwtl
mov
add
push
lock
mov
and
lods
cmpsl
push
mov
or
push
and
or
jg
hlt
ja
xor
sub
cmpb
cli
jmp
xor
dec
std
push
mov
add
loopne
neg
push
mov
pop
xor
dec
push
jmp
xor
je
in
call
add
pop
les
arpl
lcall
jmp
mov
movsl
shl
and
enter
dec
mov
pop
and
rorl
jmp
jns
sbb
push
je
adc
inc
mov
add
jmp
orl
rolb
mov
lds
add
and
pop
cli
xchg
push
sub
dec
es
add
or
into
xor
push
push
jnp
lock
sub
pop
sub
pop
ret
or
jb
pop
push
pusha
inc
adc
xchg
aam
pop
push
outsl
in
lahf
arpl
inc
dec
dec
cwtl
inc
or
fst
cli
add
dec
push
aam
stos
gs
in
or
and
ret
inc
cmc
push
push
inc
pop
gs
mov
or
mov
push
in
add
std
mov
xchg
andb
push
or
mov
dec
mov
mov
jo
inc
pop
push
push
pop
jmp
add
dec
pop
cmp
pop
pop
sub
push
jb
push
add
jmp
push
andb
jo
jbe
xchg
jne
xchg
dec
add
adc
popf
fisubrs
mov
push
int
jmp
daa
jg
inc
dec
subl
xchg
lds
or
loopne
pop
mov
or
cs
adc
ret
out
iret
sbb
sbb
mov
mov
mov
not
push
in
mov
lds
outsl
and
outsl
xor
pop
shl
push
test
dec
shl
loop
push
pop
xchg
jbe
push
inc
jle
mov
jo
popf
aam
les
ja
adc
jmp
sub
push
add
jmp
iret
lret
jge
dec
or
lret
push
xor
or
neg
dec
std
loopne
jl
subb
sub
pop
aas
push
xchg
cli
pop
mov
jmp
xchg
or
push
xchg
jmp
add
push
mov
mov
or
add
push
push
cli
popf
cld
inc
fdivrs
inc
mov
push
adc
je
push
scas
sarb
xchg
ja
shlb
push
add
push
rolb
dec
push
xor
push
xor
pop
std
inc
xchg
int
jp
add
dec
es
aas
test
insb
or
jne
repz
add
or
addb
cld
sub
in
incl
sub
aas
cld
xchg
xlat
cltd
adc
out
jmp
cwtl
adcl
push
adc
std
inc
ljmp
leave
addl
inc
xor
popa
and
and
jne
test
int
inc
bound
dec
fstl
inc
push
jmp
mov
mov
pop
mov
xor
push
dec
add
xor
ficoml
jno
bound
jne
cs
rolb
dec
mov
loope
mov
push
popf
jl
lret
loopne
sbb
pop
idivl
dec
in
adc
gs
loopne
sbb
inc
dec
pop
xor
push
add
mov
stos
add
pushf
jo
or
insb
mov
dec
sub
sarl
mov
push
dec
mov
test
cmp
cli
xor
push
ret
out
and
add
jae
or
xlat
outsb
popf
insb
stc
mov
mov
outsb
inc
or
ss
ja
fcoms
scas
test
into
cmp
and
dec
sub
or
int3
andb
mov
push
push
mov
enter
mov
push
or
dec
jmp
mov
pusha
cmp
mov
push
mov
xor
xchg
push
cli
push
pop
scas
dec
push
cld
sar
iret
sbb
or
les
mov
lea
sub
or
loope
call
pushfw
mov
popa
or
jns
cmp
cmp
pop
jnp
cmp
test
push
push
pop
jmp
in
jno
out
mov
xchg
xchg
ljmp
int3
daa
std
pushf
pop
pushf
sub
inc
add
lret
jmp
movnti
daa
fcmove
jl
and
movsl
inc
add
out
push
dec
dec
pop
in
sbb
stos
or
jmp
push
jo
adc
mov
inc
or
dec
sub
jmp
pushl
adc
xchg
imul
push
je
imul
pop
lret
xor
mov
dec
mov
jmp
loope
jp
dec
or
mov
cmpsl
mov
dec
sub
dec
inc
lret
jl
lock
dec
or
inc
sbb
mov
ret
jg
popf
je
leave
hlt
sbb
pop
xchg
mov
pushl
ljmp
std
push
notb
cld
dec
and
pop
mov
and
dec
mov
out
ja
or
xor
xchg
mov
jb
or
fsubs
jp
mov
jge
cmp
xchg
push
imul
insl
pop
loop
test
std
lret
xor
jbe
ret
push
push
xchg
push
jmp
fdivl
sarl
addb
popa
jecxz
ret
pop
notl
push
xchg
loope
cmp
sbb
jae
or
jmp
or
rcll
pop
out
xchg
sbb
dec
push
pop
push
lods
mov
xor
push
adc
push
cmpsb
push
imul
ds
test
push
jle
xchg
imul
rol
cmpsl
sub
mov
out
lods
add
mov
divb
adc
or
roll
xor
jmp
and
das
das
jl
mov
lcall
inc
sub
sub
pop
inc
pop
add
or
pop
loopew
push
add
and
push
push
mov
mov
add
pop
jmp
jo
int3
dec
push
lds
test
pop
scas
repnz
shl
pop
push
ror
and
mov
movsb
pushf
ds
jne
add
pop
push
shr
jl
push
mov
pop
sarb
shr
and
xor
in
push
sub
sub
sahf
mov
sbb
sbb
jne
mov
subl
pop
mov
mov
inc
repz
add
ds
sahf
push
filds
jmp
shrl
pop
sub
pop
pop
push
das
cmpsb
add
push
out
mov
fcomps
jmp
daa
shrl
cmc
popf
je
mov
xor
mov
enter
fldenv
pop
or
repnz
pop
pop
out
ds
adc
push
out
stos
dec
push
dec
neg
movsb
out
or
pop
repnz
enter
pop
and
je
ret
inc
xor
mov
xchg
pop
mov
inc
cmp
std
orb
dec
dec
adc
mov
inc
push
jmp
rolb
inc
jle
ret
ja
outsb
pop
add
lea
push
out
sub
pop
add
xlat
bound
add
cmp
cltd
xor
mov
push
xlat
mov
or
mov
push
xor
jp
arpl
adc
outsl
std
mov
add
ja
pop
jp
or
or
aad
mov
leave
xor
adc
lods
leave
div
subl
fildll
jecxz
fbld
cmp
xor
repz
jbe
lock
or
lret
daa
inc
push
ret
sbbl
scas
loopne
xchg
push
call
pop
gs
jecxz
popf
adc
ljmp
test
loope
push
add
das
cmp
jge
inc
cmp
jo
add
mov
scas
adc
push
out
xchg
inc
orl
push
fisubrl
jl
add
jne
scas
add
jno
int3
inc
or
imul
out
jo
jmp
das
sub
incb
das
movsb
mov
pop
pop
in
outsl
jns
pop
into
sahf
pop
clc
mov
pop
xor
clc
sbb
push
cli
stos
jo
xchg
cmc
push
mov
gs
ror
xchg
lods
call
fldl
test
push
lcall
fsts
outsb
push
mov
test
lock
sub
xchg
jmp
clc
mov
lods
jns
mov
popf
stos
push
fs
and
subb
xchg
lock
and
jg
jecxz
sub
or
or
push
mov
mov
hlt
dec
dec
aam
xchg
ret
in
pop
jp
pop
subb
or
insl
das
ljmp
or
scas
mov
adc
aad
xchg
fimuls
push
fs
jmp
mov
mov
pop
scas
bound
dec
pop
stc
pop
add
call
ds
pop
mov
mov
mov
fadds
sub
jle
mov
xlat
pop
out
nop
mov
mov
sarb
mov
push
js
inc
jnp
dec
rorb
mov
jae
cltd
aas
jmp
xchg
and
jno
lret
sub
cmc
pop
adc
add
or
dec
and
mov
fistpll
jge
jl
jg
jbe
push
or
loope
mov
add
bound
or
jl
pop
and
dec
dec
ja
scas
loopne
push
or
imul
dec
pop
jmp
or
inc
dec
pop
popf
jl
xor
orl
ret
mov
xchg
mov
leave
pop
mov
dec
aaa
pop
repz
add
sbb
cmp
imul
inc
and
jecxz
adc
je
push
fimuls
ret
pop
add
clc
xchg
bound
adc
push
outsl
ljmp
das
adc
daa
push
mov
scas
push
xchg
add
or
dec
pop
and
cld
sbbl
shlb
and
xor
push
dec
cmp
mov
sub
stc
nop
dec
test
adcb
dec
add
popa
jg
aad
orb
ss
pop
das
je
iret
mov
sub
adc
or
daa
dec
add
adc
cmp
smsw
lea
xor
fsubrs
and
sbb
or
adc
jecxz
fmuls
jmp
jp
push
enter
push
cmp
inc
mov
inc
fcomps
push
jmp
xchg
xor
adc
es
mov
mov
idiv
arpl
adc
push
int3
add
orb
cmpsl
jbe
sub
jle
in
or
adc
push
not
orb
inc
add
jge
inc
jmp
shrb
cmp
pop
jmp
mov
decb
xor
or
inc
sub
mov
and
in
xchg
inc
xchg
push
or
js
jno
outsb
dec
shl
pop
add
add
lret
mov
jae
jmp
lea
test
or
xor
out
shr
lret
cwtl
jle
shrl
jns
inc
into
out
mov
cmp
jg
mov
pop
stc
in
popa
inc
in
ss
fwait
loopne
push
stos
test
js
pop
ds
push
jge
pusha
jecxz
pop
add
mov
pop
push
cmp
imul
cli
push
scas
adc
aad
adcb
push
mov
fisubrl
xor
lret
jmp
sbb
push
ror
scas
jne
leave
js
dec
loope
xor
push
scas
popf
aas
cmc
sub
dec
sbb
sub
jne
mov
divb
lcall
jl
adc
add
adc
or
dec
sarl
mov
outsb
or
push
mov
lods
mov
adc
mov
jp
test
test
xchg
fadds
mov
shl
not
pop
add
ret
loopne
mov
mov
fs
pop
xchg
add
push
pop
imul
leave
cmp
xor
jmp
int
or
sub
jge
test
pusha
xchg
fisttpl
push
int3
mov
pop
sbbb
js
arpl
scas
inc
addl
loope
pop
cs
clc
sbb
or
cmc
mov
mov
stos
add
bound
cmp
add
pop
pop
xor
pop
stos
mov
sarb
add
inc
or
fnstcw
sub
adc
or
xchg
dec
push
loop
js
mov
pop
pop
dec
push
mov
in
adcl
repz
lock
or
jmp
lahf
xlat
xchg
mov
repnz
pop
and
and
push
dec
sbb
lds
inc
popf
sub
imul
pop
lds
and
mov
loop
test
insb
int
das
lock
pop
mov
sub
xchg
shrl
loope
jl
mov
jnp
cmp
jg
push
lds
andb
adc
sub
adc
imul
fs
out
cmp
dec
fnstsw
into
shrb
scas
cmp
add
push
bound
pop
fdivl
xor
rclb
int
dec
mov
xchg
ss
or
mov
addl
mov
aam
mov
dec
dec
bound
add
inc
add
adc
pop
mov
mov
add
cltd
lret
push
pop
dec
push
mov
call
cmp
add
rcrb
movaps
jbe
add
push
sbb
fs
jmp
mov
pop
push
pop
inc
push
mov
adc
out
mov
jmp
mov
jne
xchg
mov
cmc
and
repz
fidivs
cld
enter
dec
xchg
sub
mov
xor
xor
xchg
dec
fwait
mov
or
xor
ss
movsb
pop
add
add
out
pop
sub
dec
fadds
add
push
sbbl
rol
iret
sub
mov
faddl
mov
pop
pop
pop
cli
dec
bound
gs
jmp
or
push
repnz
shlb
out
pop
outsb
mov
add
jno
push
ljmp
loopne
mov
push
jge
clc
repnz
add
cmp
xchg
xchg
pushf
pop
mov
or
outsl
sbb
lahf
and
cmp
in
mov
cvtps2pi
sbb
or
das
pop
flds
mov
cmc
push
jnp
test
imul
xchg
pop
mov
add
xor
sahf
rcr
adc
loopne
mov
cmp
sub
lods
and
xor
jmp
stos
dec
stc
in
lds
inc
dec
ret
jo
cmpsl
xchg
shlb
sub
sub
cmp
pop
cmp
push
mov
neg
xor
sub
loopne
sti
rcrb
loope
mov
adc
jmp
clc
push
mov
arpl
adc
sub
popa
mov
loope
pop
mov
xor
and
sub
push
es
push
mov
imul
xchg
dec
jmp
add
sarb
sub
filds
push
inc
jg
aad
add
and
insb
push
fnsave
cmp
imul
or
mov
cmc
pop
fldenv
xchg
loope
cmp
push
daa
inc
push
sub
jmp
push
push
pop
push
xor
sub
push
mov
mov
cld
cmc
mov
inc
or
int
pop
xlat
es
inc
scas
jmp
cmpsb
nop
lods
das
push
jns
imul
stos
pop
pop
jnp
mov
fldcw
lea
ror
jmp
mov
mov
xor
sub
pop
adc
jmp
dec
into
sarl
int3
mov
push
int
lcall
inc
or
sub
dec
fld1
outsl
add
push
xor
add
add
dec
leave
jno,pt
xchg
push
pop
lret
lcall
push
sbb
js
jmp
push
shll
rcrl
xor
add
push
fstl
pop
inc
cld
xchg
pop
mov
adc
mul
sbbl
dec
mov
cld
mov
cmc
or
stos
rolb
jge
jbe
or
aam
sbb
stc
cltd
pop
jo
popf
pop
xchg
in
mov
mov
imul
or
mov
or
or
jb
pop
scas
frstor
pop
hlt
pop
xorb
cmp
insl
ds
lods
xor
inc
subl
adc
inc
mov
adcb
out
push
push
xchg
stos
jecxz
stos
cltd
insb
push
push
std
pop
pop
sbb
fs
aam
cmp
pop
mov
xor
call
addb
adc
js,pt
sub
mov
int
mov
pop
and
jmp
mov
sbb
jl
clc
or
ficoms
gs
lea
in
push
and
pop
adc
add
or
cmp
pushf
add
mov
fs
cmp
jmp
or
xlat
pop
xchg
fisttpll
pop
insb
cmp
jbe
dec
ljmp
jae
unpcklps
in
sbb
cmp
xlat
rcr
jmp
sbb
addr16
fadds
inc
pop
fnstenv
jo
and
push
add
daa
or
dec
and
orl
or
inc
and
xchg
inc
lea
sbb
cmp
xchg
scas
cmp
dec
sub
add
sub
lahf
add
push
out
les
or
pop
jb
or
push
jnp
push
jne
jae
mov
or
pop
jb
sub
je
sbb
sbb
sub
push
jmp
repnz
mov
and
cltd
jmp
sub
loopne
dec
add
fbstp
fiaddl
push
mov
sub
sbb
test
cmpl
aam
and
or
in
sub
out
push
jb
xchg
jecxz
add
push
jl,pt
rolb
mov
orb
or
jmp
pop
pusha
int3
mov
ret
pushaw
lahf
lret
xlat
in
add
ss
stc
sub
push
jl
add
loop
inc
adcb
imul
inc
hlt
pop
fisttps
in
loop
xlat
push
test
dec
dec
popa
or
les
and
pop
test
or
sbb
push
std
push
adc
jle
or
ljmp
movsl
filds
insl
mov
pop
icebp
adc
fwait
inc
jl
pop
dec
ja
jmp
push
popa
push
and
push
sub
jne
cmovl
dec
jmp
xlat
push
jl
or
pop
fstl
lret
filds
test
mov
adc
or
push
fistpll
jnp
sbb
clc
dec
adc
bound
pop
gs
int
cmp
lods
push
cmp
sbb
sbb
sub
mov
or
push
xor
mov
sub
pop
out
shlb
shr
fidivrl
cli
imul
jmp
sub
push
push
mov
sbbb
mov
movsb
xchg
ja
cltd
and
push
cmc
jmp
push
lcall
push
inc
pop
fstps
lds
dec
cmp
popf
sbb
pop
mov
cmp
inc
pop
xor
inc
or
cmp
add
inc
cmp
cmp
loop
xchg
cld
stos
push
cmpsb
es
adc
fimull
test
imull
mov
and
jmp
inc
lea
push
pop
inc
lods
inc
dec
and
in
adc
out
mov
mov
rcr
mov
add
dec
jle
xor
lods
push
xchg
add
dec
jo
push
add
dec
inc
add
pop
cmp
rcll
inc
mov
add
xchg
jle
insb
sub
mov
fwait
dec
pop
int
sub
addr16
movsb
add
sub
sub
push
inc
add
adc
and
loop
jns
dec
dec
fs
addb
hlt
cmp
push
or
test
pop
add
sub
das
add
roll
inc
sub
cwtl
cmp
fiadds
push
mov
pusha
out
pop
and
out
sbb
add
pop
dec
jecxz
arpl
out
jno
andl
push
and
or
popf
push
pop
and
mov
push
add
ret
cmpsl
mov
jo
dec
enter
rcrl
dec
dec
push
push
mov
in
or
jecxz
pop
icebp
in
xor
repz
outsb
arpl
or
sbb
mov
push
and
cmp
pop
cmp
jle
pop
cmp
mov
jae
fistpl
jp
add
or
pop
xor
or
popa
bound
bnd
sub
fwait
not
hlt
ljmp
jns
cmc
adc
push
inc
out
or
lahf
jo
repnz
insb
or
clc
mov
ja,pn
mov
xchg
dec
jge
or
pop
mov
fdivs
inc
push
add
daa
inc
and
xor
add
push
jmp
and
or
jo
dec
hlt
xor
pusha
dec
ss
loope
stos
xchg
clc
aam
sub
pop
pop
cltd
add
out
fcomp
push
in
testl
das
or
repz
adc
jmp
mov
xchg
push
daa
pop
outsl
cmp
jmp
es
adc
add
push
sub
inc
fsts
xor
adc
or
jmp
repz
xlat
in
scas
loopne
push
mov
fisttpll
out
mov
shlb
fdiv
and
adc
adcb
push
pop
xor
test
cltd
mov
fnstenv
test
lock
xor
imul
orl
inc
inc
jmp
in
inc
sub
lods
push
ret
jbe
pop
pop
scas
inc
mov
mov
ret
pop
dec
pop
lcall
xlat
mov
orl
and
mov
insb
sbb
sbb
pop
fbstp
jb
push
and
in
fimull
shl
hlt
cmp
adc
push
movsl
mov
sub
adc
jns
repnz
dec
cmpsb
add
je
mov
mulb
jns
push
add
mov
sub
mov
scas
xchg
add
inc
cli
cltd
lret
or
sub
jmp
pop
xchg
pop
cmpsl
jecxz
jo
adc
in
mov
popa
jmp
pushf
xchg
shr
addr16
xchg
cmp
dec
mov
add
js
popf
sbb
adc
js
jnp
and
lock
cld
leave
cmc
push
jb
pop
lea
and
adc
jno
dec
push
or
or
pop
pop
xlat
sti
ja
adc
lods
pop
pop
mov
jb
loop
or
xor
bound
icebp
icebp
cld
pusha
adc
xor
ret
push
inc
jno
xchg
jne
idiv
jb
and
dec
dec
pop
mov
add
pop
jl
inc
inc
mov
jne
imul
xor
jo
jg
mov
or
add
or
adc
popa
xchg
xor
mov
out
sub
add
aam
movsb
call
cltd
mov
and
dec
push
out
jl
xchg
cmp
add
scas
sub
and
inc
mov
and
jle
dec
les
pop
aas
cli
aam
add
pop
jmp
inc
push
add
sbb
hlt
shlb
shlb
in
dec
jmp
add
pop
outsb
mov
dec
mov
mov
dec
mov
lods
pop
adc
xchg
outsb
into
out
jge
push
mov
nop
clc
and
push
mov
andl
repz
or
jmp
cltd
pushf
lds
popf
push
cmp
pop
push
icebp
cwtl
or
aas
fists
scas
and
hlt
push
data16
xor
add
pop
movsl
sbb
push
scas
sub
xchg
add
xor
push
int
aaa
sub
sti
jnp
add
enter
push
int3
add
inc
sub
into
js
je
add
fwait
es
inc
xchg
mov
sbbb
aam
inc
push
pop
fists
arpl
repnz
jp
fiaddl
or
movsl
cmp
jnp
lods
cmp
jb
sbb
in
leave
or
push
push
xorl
pop
jg
push
imul
lahf
jmp
bound
fidivl
lods
fisubl
xor
inc
dec
cwtl
scas
cwtl
mov
mov
push
out
sub
ja
or
loopne
push
adc
aas
enter
xlat
and
cltd
dec
and
outsb
jmp
cmp
inc
inc
jge
daa
addb
mov
test
stos
xor
and
repnz
or
and
and
xchg
push
pop
xor
insl
pushf
mov
push
mov
jmp
push
dec
add
enter
mov
into
pusha
inc
or
dec
sbb
inc
inc
and
mov
pop
lahf
push
pushf
rcrb
jmp
push
cmp
adc
ds
add
pusha
pop
mov
jle
hlt
shlb
or
adc
shl
or
mov
mov
dec
jno
dec
add
jmp
sub
push
add
mov
jecxz
dec
add
sahf
mov
mov
in
sub
dec
dec
stos
add
imul
orl
fbstp
negb
push
mov
xchg
dec
sub
test
dec
stos
fsubl
dec
out
jecxz
mov
mov
or
das
xchg
fs
jmp
orl
or
cs
mov
add
xchg
ljmp
add
mov
mov
inc
adc
adc
push
pop
dec
pusha
pop
push
jmp
negb
cwtl
inc
loopne
push
jb
inc
mov
das
add
ret
push
inc
mov
ret
add
xchg
add
jle
not
push
add
jmp
sub
jl
or
push
xlat
lock
pop
hlt
xchg
jnp
mov
sub
sub
hlt
dec
scas
mov
ret
or
mov
sbb
pop
lock
sarb
scas
add
cmc
cmp
mov
mov
pop
sbb
jecxz
les
jmp
pop
jl
pop
push
cs
pop
push
pop
add
cmp
dec
mov
or
add
aam
jo,pt
int3
push
pop
stos
cltd
xchg
test
jbe
in
xor
leave
std
dec
aam
fcoms
add
imul
jmp
push
test
mov
sbb
inc
xchg
pusha
dec
sub
gs
jne
outsb
repnz
dec
xchg
ud0
lret
pop
mov
sti
pop
mov
loop
pop
mov
push
lds
faddl
inc
push
cwtl
push
pop
das
mov
sub
add
push
add
test
and
out
inc
dec
adc
xchg
xchg
cmp
mov
pop
or
fsubl
adc
push
shlb
mov
shrl
rcr
mov
mov
fwait
mov
mov
fcompl
dec
add
xchg
ja
xchg
jns
mov
in
lock
mov
push
scas
mov
or
pop
out
jmp
sub
jle
ret
aam
orb
nop
jb
cmp
inc
jl
sub
or
jo
pop
pop
pop
repz
ja
cwtl
insl
add
push
out
push
or
pop
xchg
push
xor
xor
push
jnp
xor
cmp
pop
pop
add
js
enter
sub
mov
ret
adc
mov
xchg
addl
ljmp
push
lds
dec
stos
hlt
add
out
and
jmp
test
pop
push
ret
pop
sbb
push
js
scas
gs
mov
pop
jmp
lahf
out
daa
sbb
les
push
jns
sbb
fndisi(8087
or
movsl
sub
sub
pusha
dec
sahf
mov
cmp
jl
sub
sbb
sti
mov
std
dec
data16
or
mov
push
cmpsb
pop
pop
test
fistl
jmp
cmp
jle
xor
lret
sbb
mov
lods
pop
divl
lods
add
into
push
xchg
jg
xor
lret
sub
jmp
lahf
daa
ret
hlt
push
push
ljmp
out
add
or
sub
into
mov
cli
xchg
out
cld
cmp
dec
lahf
pop
xlat
adc
sarl
stc
push
jnp
jns
inc
test
test
inc
jge
stc
push
cmp
jg
mov
icebp
and
cs
sub
dec
xchg
cmp
shrl
adc
fstps
jnp
les
andl
xor
jmp
imul
cmpsb
or
sbb
mov
negl
inc
addb
add
inc
cmp
cmc
inc
push
and
xor
pop
adc
jmp
pop
repnz
or
pushf
push
pop
sub
mov
jb
lods
icebp
cmp
ss
subl
and
inc
popf
fisttpll
push
das
jmp
repnz
lret
sub
dec
ret
push
mov
test
incb
negl
sahf
insb
or
sub
cmp
dec
test
push
pop
hlt
xor
add
sbb
shrb
fsts
mov
pop
cmp
mov
fisttpll
jo
pop
adc
lock
insl
mov
insl
add
dec
test
mov
mov
or
dec
mov
cli
add
shl
loop
aas
mov
inc
pop
sbbb
xor
xor
mov
xchg
mov
cli
and
sbb
ret
inc
jbe
sbbb
dec
fdivl
push
add
fwait
outsl
or
das
loopne
pop
sub
imul
xor
outsb
icebp
shlb
push
sub
pop
sti
mov
in
outsl
dec
cltd
or
xchg
popf
push
cmp
xchg
mov
and
cmp
outsl
ss
jnp
xchg
jge
dec
mov
out
adc
xorb
or
lods
pop
add
into
inc
mov
mov
push
sbb
mov
aam
out
iret
sub
and
push
or
cmp
in
mov
dec
push
lcall
sbb
movsl
or
sbb
or
dec
cmp
add
adcb
call
mov
jo
add
cs
adc
dec
lods
addb
mov
push
sub
inc
test
pushf
pop
dec
mov
in
push
xor
orb
in
pop
cmpsl
push
mov
push
jo
sbb
movsb
mov
out
mov
stos
sbb
loope
jp
dec
or
aas
xchg
insl
cmp
jecxz
jp
mov
ja
pop
shr
xchg
jno
dec
fadd
in
mov
out
loopne
xor
in
mov
sub
jmp
enter
push
sub
dec
cmpsb
ret
sbb
or
mov
add
sarl
or
inc
push
inc
orb
cmp
loope
or
dec
jmp
jmp
add
xor
ljmp
in
pop
int3
hlt
mov
inc
inc
mov
mov
fldl2e
dec
rolb
into
or
rclb
int
nop
lret
or
and
repnz
out
adc
in
add
jge
or
jmp
mov
adcl
push
mov
and
jbe
nop
adc
add
pop
and
pop
mov
dec
dec
sti
int
lock
or
push
mov
sub
jg
shr
mov
push
pop
mov
jmp
add
adc
clc
add
mov
dec
test
and
adc
cmp
jmp
dec
dec
xor
mov
mov
and
ja
pop
fistps
xchg
sahf
and
les
or
mov
dec
xchg
mov
push
mov
sti
testb
mov
inc
push
lods
dec
pop
shl
cltd
sub
push
cmp
in
shlb
lahf
fisttpl
std
xor
into
push
push
addr16
add
stc
ja
cmp
cmpsl
adc
cmp
lock
add
pop
mov
pop
and
xor
jle
and
or
sub
enter
inc
incb
mov
jns
adc
scas
and
push
inc
jl
add
add
fwait
mov
add
popa
cmp
imul
pop
cmpsb
roll
into
push
and
fwait
cmp
leave
cmc
or
add
mov
je,pn
mov
lcall
push
les
mov
lahf
jno
sbb
mov
sub
inc
add
cmp
in
mov
or
pop
pop
push
pop
sahf
lea
rorl
dec
push
ljmp
cmpl
popa
push
inc
dec
jmp
push
add
mov
rorl
inc
and
add
push
out
and
mov
jmp
dec
adc
pushw
mov
or
xlat
adc
inc
adc
hlt
inc
and
cmc
pop
add
rol
sub
in
or
inc
dec
xchg
add
xchg
lock
std
mov
or
jbe
movsl
das
js
stos
cld
ja
mov
fstpl
in
fwait
das
or
shll
ja
push
pusha
fcoms
sarl
addr16
mov
ret
mov
mov
jg
stc
pop
mov
sub
adc
std
orb
jge
sub
imul
jl
adc
mov
and
sub
push
mov
in
out
jns
sub
call
cltd
pop
xor
cmp
jb
push
sbb
and
push
stc
add
cmp
xlat
pop
xor
cli
mov
pop
pop
cmp
pop
cmc
out
orl
push
scas
mov
jmp
arpl
jg
add
jmp
xor
add
and
fildll
xor
dec
ds
je
adc
mov
lea
test
int3
lock
pop
std
pop
sub
xor
repz
add
arpl
js
out
add
inc
adc
repz
add
or
imul
inc
dec
shlb
ds
mov
dec
mov
sbb
xor
fidivl
arpl
pushf
adc
out
loopne
int3
jo
cmp
clc
push
fldl
outsb
inc
pop
or
mov
ja
inc
mov
movsl
pop
testl
adc
push
sar
fmul
pop
mov
adc
shl
jb
push
push
dec
fidivs
pop
adc
in
xor
cmpb
adc
ds
insl
pop
push
sbb
sub
std
icebp
jle
rclb
xchg
jmp
pop
popf
scas
xchg
popa
jp
mov
cmp
cmp
mov
add
gs
xor
add
sbb
leave
movsb
lds
mov
and
push
mov
push
pop
iret
test
pop
mov
mov
aaa
pop
or
insl
inc
add
or
mov
dec
shl
in
mov
mov
xchg
inc
hlt
ffreep
sub
push
jmp
insl
adc
out
jmp
sub
push
test
mov
enter
sub
repnz
push
lahf
jo
jae
lret
add
add
aas
pop
mov
fimull
push
push
push
cld
test
jmp
out
jl
add
jge
xchg
test
or
mov
mov
out
jmp
mov
shlb
imul
test
and
movsl
dec
rorb
pop
pop
and
mov
pop
pop
divb
les
inc
inc
cmp
sbb
rcrl
icebp
cld
ds
icebp
inc
sub
movsl
inc
pop
jmp
mov
push
or
dec
adc
in
popa
jb
cli
shl
adc
and
shl
inc
dec
xor
jle
gs
pop
inc
mov
lret
fcmove
fbstp
aaa
mov
das
push
push
push
add
jbe
jne
loope
or
movsb
xchg
aas
pop
mov
jg
add
adc
cmp
pusha
cmpsb
leave
mov
add
mov
xchg
pop
jp
cmp
out
call
outsb
cli
cmp
xchg
or
arpl
outsb
inc
sub
sbb
xor
or
push
aaa
pop
cmp
int
ds
jmp
push
sub
sbb
test
cld
es
mov
scas
cwtl
adc
pop
add
push
add
cmp
mov
sbbb
cmp
mov
rcll
addl
xchg
mov
add
mov
lods
adc
mov
sub
mov
add
es
xchg
mov
inc
adc
dec
or
cmpsl
shrb
jge
enter
pop
lcall
shl
or
jne
adc
pop
add
jl
sub
ffree
jle
fstpt
sub
jns
mov
pop
cmp
pop
mov
xor
or
add
int3
daa
in
cld
dec
repnz
sub
movsb
mov
fisttpl
and
inc
pop
adcl
mov
add
jmp
jnp
lahf
or
pusha
sub
push
les
push
nop
pop
sbb
mov
mov
xor
xor
ljmp
decl
pop
loop
push
repz
adc
add
add
dec
push
fwait
push
addl
jae
repnz
dec
mov
sbbb
gs
or
aaa
insb
xchg
adc
dec
ret
jle
inc
insb
cmp
xlat
or
test
pop
lods
in
ret
push
jbe
iret
and
mov
dec
add
bound
cltd
adc
push
inc
or
incl
mov
test
stos
adc
add
or
dec
fprem1
xchg
push
push
or
add
pop
out
fsubr
jl
push
pusha
jp
mov
popf
aaa
outsb
add
fxch
movsb
iret
leave
in
rcl
ret
lds
das
add
jo
jo
loopne
rol
xchg
and
sbb
dec
sub
inc
outsb
xor
jne
scas
rcrb
xchg
sbb
mov
adc
scas
inc
stos
nop
movsb
test
inc
xchg
cmp
cli
push
pusha
cmpsl
push
jns
mov
out
ds
xchg
sbb
and
dec
mov
loope
add
adc
mov
insb
jmp
xchg
sub
ret
and
mov
mov
mov
ja
or
mov
xlat
jb
out
xor
and
or
std
cmpsb
imul
mov
pop
pop
jo
jnp
sub
movsl
push
jl
and
rorb
dec
sti
sub
dec
push
push
add
loopne
mov
and
dec
ror
insb
mov
nop
imul
fcomps
mov
sub
pop
sub
rcr
xor
or
jge
scas
pop
cmp
or
mov
ds
push
or
pop
xor
iret
pop
mov
or
push
pusha
add
mov
cld
in
mov
scas
jecxz
xlat
scas
lret
jo
out
sti
xor
testb
in
bound
mov
push
in
and
and
and
clc
push
sbb
push
movsb
adcl
rcr
and
pop
mov
mov
or
outsl
xchg
push
ja
jno
das
fdiv
pop
jo
or
cs
in
jns
sbb
xchg
dec
lds
mov
add
ret
sti
sub
jae
jmp
add
push
pop
movsl
cmp
or
dec
and
sub
inc
outsl
push
mov
push
or
inc
gs
jb
push
pop
sub
bound
imul
int3
add
pop
jmp
mov
fildl
or
jmp
imul
icebp
test
in
mov
or
adc
mov
add
adc
and
inc
pop
cvttps2pi
js
inc
or
mov
cmp
xchg
mov
adc
jle
adc
mov
dec
ljmp
xchg
sbb
sub
out
adc
sbb
push
add
adc
sub
pop
xchg
imul
mov
test
pop
push
std
add
mov
and
push
test
lea
stc
fs
imul
or
sbb
mov
push
mov
pushf
xor
outsl
das
inc
cwtl
fimuls
xor
cmp
notb
in
mov
icebp
movsl
jns
jecxz
and
jg
dec
ja
mov
repnz
and
and
or
inc
icebp
xchg
data16
fcmovnbe
ret
lods
cld
ss
mov
clc
mov
leave
xor
stos
lock
iret
push
mov
lret
adc
cs
ljmp
mulb
daa
fldt
rorb
mov
add
xor
xchg
adc
cmp
gs
jmp
mov
sbb
repz
pop
xchg
mov
cmp
sub
adc
xlat
add
clc
add
pop
sbb
arpl
pop
add
add
adcb
cmp
pop
mov
push
stos
dec
ret
mulb
dec
jle
xor
sub
stos
or
jnp
dec
push
add
cmp
push
mov
and
jl
jmp
dec
stc
cmp
fmull
lods
jne
add
cltd
adc
enter
mov
sub
mov
push
pop
cmpsb
xor
ret
mov
dec
lret
sbb
inc
xchg
cld
out
dec
scas
sub
dec
enter
das
add
adc
cmp
jbe
jg
mov
nop
out
in
int3
mov
mov
push
jmp
ljmpw
movsl
sar
xchg
out
mov
pop
sbb
sbb
jle
xor
inc
out
inc
out
push
xlat
mov
lods
mov
shrb
xor
push
xor
cli
sub
orl
testb
cmp
push
sbbl
add
rclb
jp
inc
pop
mov
lea
add
cli
jns
and
dec
int
add
cli
jno
movsl
add
pop
scas
add
stos
stc
or
pop
cmp
push
in
out
xor
xchg
mov
xchg
ret
inc
add
sub
or
icebp
xchg
jnp
sub
sti
gs
jmp
push
or
adc
lods
mov
pop
push
pop
pop
out
loop
mov
outsb
daa
dec
sbb
sbb
mov
mov
jmp
pop
rcll
add
xchg
data16
sub
popa
shr
jp
mov
inc
mov
loop
push
notl
mov
mov
mov
in
pop
repnz
addr16
cmpsl
shrl
mov
ret
push
xor
xor
pop
cmp
popf
jno
xchg
lods
inc
cmpsb
mov
js
sbb
add
pop
cmp
mov
lods
mov
push
fldl
and
or
daa
xlat
in
dec
add
pop
in
mov
xchg
lea
punpckhbw
sahf
enter
sub
dec
sub
add
rorb
inc
leave
stos
push
adc
fwait
daa
bound
xor
fcoms
mov
mov
and
push
lock
repnz
jmp
cli
sub
pop
popf
popa
js
mov
shr
leave
fucom
aam
bound
sahf
or
sahf
xchg
hlt
push
push
pop
inc
xor
dec
sti
add
or
ja
imul
jl
shl
push
pop
push
jl
pop
das
add
aas
mov
sub
stos
gs
scas
pusha
mov
mov
or
dec
out
push
add
jns
in
pusha
hlt
inc
adc
in
sub
pop
sub
dec
bound
push
mov
lahf
push
ret
dec
cmp
pop
sti
inc
pop
addl
enter
add
inc
pop
filds
shl
and
jbe
adc
jnp
sbbb
and
adc
mov
nop
lea
rcrb
push
inc
push
mov
push
sti
jmp
shrl
jns
mov
mov
dec
lahf
stc
es
leave
mov
mov
sub
cmp
jge
frstor
xor
mov
and
adc
pop
je
fisubs
adc
mov
pop
jae
xor
mov
idivl
add
inc
call
mov
cmp
push
xor
mov
or
fistps
or
sbb
add
cs
sbb
add
push
pop
out
mov
adc
fisubrl
fwait
jmp
movsb
cmp
loopne
dec
sbb
xchg
lock
sbb
addr16
enter
fs
cmp
or
pop
ja
push
ds
aaa
fnstenv
add
sbb
jg
dec
pop
cmp
lcall
adc
pop
jg
jmp
pop
aad
pop
repz
and
aas
mov
sub
dec
add
cmp
push
push
gs
push
cltd
adc
incl
lea
popa
sub
test
jl
pop
repz
jne
jo
rol
cmp
push
push
adc
add
jecxz
shr
daa
or
ja
jge
scas
aad
xchg
dec
andb
clc
or
in
rclb
lret
add
shr
in
pop
lcall
push
ljmp
fsts
orb
adc
mov
call
daa
mov
push
mov
neg
jle
or
in
add
push
jmp
fs
push
out
mov
popl
mov
jmp
and
or
sub
lcall
or
repnz
dec
mov
xor
stos
test
mov
negb
and
loopne
add
sub
mov
pop
cmp
ljmp
dec
and
pop
popf
jnp
lret
test
enter
outsb
je
ret
add
cltd
mov
stos
sub
inc
int
add
in
sbb
cltd
data16
pop
scas
push
sub
lock
dec
or
jmp
aad
hlt
les
dec
test
jl
push
push
sbb
mov
or
imul
add
dec
jmp
inc
push
adc
imul
add
mov
rcr
movsl
sbb
lcall
xchg
push
dec
adc
and
pop
mov
fsin
cmc
push
pop
jge
xchg
mov
pop
int
xchg
mov
push
push
cwtl
addr16
das
jmp
iret
pop
xchg
push
add
xor
sub
add
ret
jmp
xchg
cli
mov
fidivrs
lock
and
xor
jns
je
add
push
bound
and
sub
lcall
jb
pop
sarb
lods
jnp
add
or
enter
adc
xchg
repnz
rcrl
adc
sub
or
lods
hlt
add
out
mov
das
leave
mov
adc
xchg
pop
cmc
cmp
sub
jg
inc
inc
insl
xlat
or
bound
outsl
mov
fwait
sbb
xor
add
pop
pop
push
imull
jae
or
add
jb
or
inc
shrl
cwtl
fimull
fcom
mov
rep
add
cmp
scas
popa
inc
and
pop
xchg
imul
push
push
jle
jns
out
cmp
pusha
hlt
jmp
push
inc
dec
cmpsl
push
pop
sbb
lret
cmp
ret
addr16
push
insl
jnp
push
mov
pop
rcl
addl
nop
cmc
and
orb
pop
test
mov
into
sti
or
sbb
decl
or
adc
push
add
daa
add
jmp
pop
iret
repnz
int3
ret
mov
push
fwait
ret
mov
xor
ret
add
and
xchg
test
mov
shl
push
mov
ja
out
pop
fmul
jb
push
mov
stos
lret
negb
imul
mov
push
cmp
adc
fisubs
or
lcall
dec
pop
mov
and
rcll
fisttpll
push
inc
repnz
cmp
push
jle
xor
mov
sbb
pop
repnz
push
push
arpl
arpl
push
cmc
mov
push
xchg
add
ret
les
sub
pop
aad
jnp
adc
mov
inc
push
jae
popl
dec
and
testl
push
jge
or
andb
sbb
popf
push
add
jae
add
stos
jp
cli
xchg
adc
push
imul
lods
mov
ss
push
xchg
ds
mull
in
inc
pop
icebp
adc
popa
fs
out
xor
pop
sbb
pop
cwtl
xor
xchg
fs
addr16
imul
sbb
push
fbstp
mov
and
add
lods
inc
mov
loope
inc
mov
inc
mov
push
sti
lcall
adcl
push
out
jecxz
cmpb
dec
not
or
rorb
xor
add
dec
daa
pop
xlat
out
clc
cmp
push
xchg
pop
rolb
das
add
dec
pop
and
rclb
jb
adc
hlt
sbb
jge
add
jmp
sub
or
push
inc
pop
pop
cmpsb
xor
loop
fdivl
dec
loop
push
scas
mov
les
xor
shl
push
mov
mov
bound
mov
pop
shl
imul
sub
fst
xor
repz
cmp
or
mov
js
push
mov
or
nop
mov
fstpl
and
inc
or
push
sub
lock
ret
or
rorb
pop
push
je
add
scas
jg
sbb
xlat
xor
out
stc
test
mov
adc
scas
fnstcw
or
cli
add
cmp
fcoml
in
mov
les
sbb
popa
imul
imul
clc
mov
daa
push
xchg
jmp
arpl
push
sub
test
jne
stc
add
pop
cmpb
dec
clc
ret
sub
mov
lret
cld
leave
cld
nop
inc
inc
pop
push
add
add
jp
loope
les
dec
shrb
stos
leave
pop
mov
jg
jae
jecxz
sbb
sahf
mov
and
jb
xchg
std
xchg
dec
add
or
cmpsb
popf
jge
insl
push
adc
repz
push
pop
push
mov
xchg
test
cmpsb
push
sub
sar
mov
jb
ret
xchg
pop
sbb
fldenv
jmp
insl
aam
mov
into
aam
fwait
dec
dec
sbbb
cmp
pop
ret
pop
in
dec
cld
push
cli
mov
lock
pop
fdivs
imul
and
or
or
fcomps
push
jmp
das
out
gs
loopne
xchg
enter
or
and
add
testb
adc
or
mov
pop
add
outsb
call
scas
pop
pop
mov
test
mov
enter
cld
fstl
jl
mov
out
lods
inc
cmc
mov
sub
sub
push
lcall
pop
and
inc
add
jle
xchg
mov
fadd
jmp
cld
mov
push
rcrb
jae
xor
vpslld
mov
pop
jae
jmp
repz
sub
add
cmp
pop
jp
cwtl
and
fldl2t
xrelease
sbb
sbb
add
stos
or
inc
inc
shrb
xor
add
push
mov
sbb
mov
adc
sbb
and
mov
sahf
aas
mov
pop
mov
mov
call
cwtl
pop
mov
dec
and
outsl
inc
pop
addl
inc
pop
incl
subl
jnp
add
flds
lcall
cwtl
mov
aad
xor
pop
inc
xor
clc
je
outsl
sub
mov
pop
outsb
hlt
daa
mov
das
add
incb
pop
or
neg
add
cmp
mov
pop
mov
or
inc
sub
add
addb
xor
hlt
frstor
xor
or
mov
daa
js
rclb
stc
inc
and
pop
pop
andb
xchg
outsb
jmp
mov
add
xlat
test
mov
ja
std
mov
pop
mov
pop
fistpll
jmp
add
ret
push
dec
xchg
ja
jb
stc
popa
scas
icebp
push
pop
ljmp
loopne
and
cmp
push
ftst
sub
mov
inc
out
adc
mov
test
loopne
sub
testl
push
scas
pop
mov
cmc
pusha
pop
add
mov
mov
lahf
lahf
je
repnz
adc
ds
rcll
mov
cmp
cmp
into
ret
loope
pop
in
jnp
sbb
pop
add
xchg
cmp
shl
js
repnz
or
hlt
mov
out
xorl
ret
lods
in
out
dec
jb
inc
sbb
jmp
inc
repnz
add
and
and
js
xor
bound
inc
sub
test
shll
add
pop
push
add
xchg
cmp
xchg
sub
mov
mov
sub
mov
inc
mov
push
ret
mov
xor
pop
ret
inc
pop
lods
sbb
add
cmp
arpl
push
int3
xchg
cmpl
adc
cltd
xchg
insl
subb
out
sbb
jmp
ret
loop
movsb
pop
or
in
jmp
push
jecxz
xchg
and
das
fsubs
or
arpl
sbb
add
pop
mov
push
movsl
fidivs
sbb
jg
test
pop
sbb
add
xchg
vaddpd
inc
jge
pop
add
mov
sarb
jp
dec
cwtl
ret
jne
mov
enter
movsl
push
adc
insb
pop
shr
jmp
cmp
aam
xorb
out
pop
or
mov
push
and
pop
add
loopne
movsl
sbb
int
icebp
pop
cmp
mov
mov
add
sbb
dec
pop
cmpl
dec
xchg
xor
mov
push
push
cs
dec
ljmp
fidivrl
mov
push
shrl
ljmp
inc
lock
mov
pusha
inc
or
jp
out
jmp
outsb
xchg
jp
adc
cmp
or
mov
mov
or
cmp
dec
sbb
ret
ljmp
cmp
adc
pop
xor
xor
ljmp
cli
xchg
inc
or
mov
std
mov
loope
ja
cmp
pop
and
add
sbb
js
pusha
jns
push
sub
out
pop
incl
insl
xchg
add
adc
pop
add
imul
test
stos
adc
pop
daa
out
pushf
test
sub
inc
cmp
jmp
mov
sub
cld
clc
cli
repnz
mov
hlt
movsb
outsb
mov
dec
out
pop
sub
cmp
fsubrs
or
push
mov
ja
pop
add
testb
fs
jo
call
add
xor
xor
jmp
stc
or
pop
jne
xor
add
xor
jg
insb
jg
add
sub
popa
scas
add
or
add
jb
idivl
mov
enter
inc
cli
cwtl
lahf
sbb
nop
test
fildll
push
and
xchg
push
pop
jmp
push
push
mov
addr16
popf
loopne
cmc
andb
int3
shr
dec
imul
push
sub
xchg
orl
pop
push
out
and
or
mov
stos
mov
xchg
hlt
sub
dec
pop
les
sbb
incb
stos
xlat
mov
cmp
daa
jns
leave
inc
pop
push
inc
dec
mov
imul
jecxz
lds
and
out
loope
push
jge
jl
dec
out
xor
bound
add
adc
push
xor
cmp
sub
sub
mov
pop
push
cmp
add
xor
sub
or
push
stos
les
push
or
stos
adc
bound
add
jle
pop
call
lods
cmp
sbb
fimull
sbb
adc
mov
inc
fldenv
push
push
mov
loop
or
into
je
loopne
lahf
add
and
imul
imul
cltd
push
or
shlb
dec
mov
inc
mulb
add
divl
inc
add
mov
sub
mov
dec
inc
rcrb
insl
push
mov
jae
jg
sub
gs
pop
and
mov
add
jmp
lock
push
loope
in
xchg
xchg
xor
inc
xor
imul
adc
gs
and
jecxz
pop
inc
jns
inc
or
pop
or
push
scas
lods
test
clc
push
pop
adc
push
adc
push
arpl
lock
pop
or
push
add
jmp
adc
nop
rcrb
decb
mov
mov
dec
jg
add
dec
ja
cs
xlat
lea
add
popf
dec
data16
popf
pushw
push
sub
push
and
inc
adc
mov
adc
pop
add
mov
andb
sbb
xchg
cmp
or
aam
orl
jl
sub
inc
mov
xor
mov
jno
test
push
adcb
sbb
jmp
rclb
add
or
jo
jo
add
inc
and
fs
add
shl
add
jbe
ret
cs
sub
adc
and
mov
out
add
int3
jl
inc
rclb
sub
insl
sbb
push
mov
add
inc
sbb
mov
jb
rcll
nop
mov
push
jecxz,pt
pusha
pusha
sub
fst
mov
neg
xor
mov
xor
dec
outsb
pushl
sbb
add
inc
sbb
push
push
les
push
and
sbb
jg
cmp
jg
sbb
imul
pop
xchg
xchg
in
xchg
push
mov
mov
xor
mov
add
sub
lret
pop
scas
dec
push
idivl
inc
incl
jmp
mov
sub
sbb
repz
js
lods
push
jno
xor
pop
sbb
dec
add
sub
jmp
sub
jge
push
movsl
xchg
jno
leave
pop
out
mov
sub
sub
call
pusha
xlat
stos
mov
test
cld
pop
cld
or
stos
enter
or
add
js
jmp
pop
add
jns
stc
cltd
and
cmp
imul
mov
pop
mov
pop
mov
add
jmp
sahf
ret
in
test
or
in
fs
aas
test
mov
sub
les
pop
mov
shrb
jp
and
add
or
inc
lods
xchg
dec
dec
jnp
addr16
adc
mov
hlt
je
dec
notl
mov
adc
sbb
mov
push
or
sbb
or
loope
push
sub
and
or
shl
lods
cmp
pop
sub
daa
outsl
mov
sar
shll
sub
iret
push
inc
mov
bound
inc
push
notb
es
jmp
outsl
sbb
xor
enter
movzwl
jb
cwtl
adc
stos
fs
sarl
dec
adc
push
add
test
add
mov
jbe
jl
jae
data16
test
mov
fstpl
dec
mov
cmp
pop
out
adc
inc
int
cmpsb
push
or
or
sub
and
inc
stc
fldl
add
jmp
cmp
add
ret
add
cmpsb
leave
push
push
mov
outsl
mov
leave
sub
xchg
or
dec
fadd
insb
sarl
and
cli
pop
nop
bound
adc
cmp
daa
adc
loop
lret
xchg
and
add
cltd
dec
imul
mov
lea
flds
mov
dec
pop
push
shrl
addb
jo
ds
xor
pop
or
inc
dec
negl
and
or
xadd
cltd
and
sub
clc
or
or
sbb
or
adc
push
dec
push
mov
sub
xor
lret
or
dec
bound
shlb
mov
pop
outsl
pusha
jmp
lcall
imul
iret
js
dec
cmp
jmp
scas
pushf
jb
pop
pop
push
test
pop
adc
mov
mov
push
mov
xor
shl
add
call
xor
rcrb
push
mov
and
cltd
ret
add
jmp
bnd
out
call
jmp
clc
or
lock
mov
into
sbb
cmpsb
xchg
sub
jae
lahf
mov
aam
repz
insl
jae
lret
pop
mov
pop
xor
cli
cmp
lock
frstor
or
or
xchg
push
decb
sbb
xor
cli
insb
test
jecxz
sub
dec
mov
pop
and
inc
push
ja
add
jmp
leave
in
dec
icebp
aam
das
cmc
push
mov
repz
cmc
in
push
fistps
dec
movsb
mov
push
popw
add
sub
push
mov
psadbw
out
ret
pop
incl
rorl
push
loope
loop
sub
jmp
std
sbb
push
sahf
push
xchg
fmull
rclb
popa
push
nop
push
subb
ss
cmp
subl
cs
sub
pop
int3
lahf
repnz
xor
lods
xchg
fwait
and
fcomps
dec
fistps
pop
adc
imul
jecxz
mov
fistl
sbb
nop
and
jmp
cli
or
add
icebp
hlt
clc
sbb
and
or
call
jl
add
sti
addr16
xadd
xor
xchg
mov
jmp
fsub
pop
je
std
jg
rorb
cmp
cli
lock
pop
lock
lret
mov
mov
daa
mov
ljmp
cmp
add
in
and
jecxz
sub
or
push
sub
and
dec
or
jmp
sub
sbb
fmull
mov
imul
cmc
dec
or
inc
cmpps
sbb
cmp
loopne
not
dec
xchg
push
jno
rcrl
addb
xor
dec
push
pop
xorb
push
rcrb
out
and
xchg
jge
push
push
add
cmp
neg
or
and
adc
or
outsb
add
jmp
and
stc
cs
bound
lret
push
jmp
imul
movsl
pop
mov
mov
xchg
test
stos
imul
cmp
mov
ja
fs
and
clc
add
test
jl
or
dec
mov
jbe
sbb
dec
in
pop
inc
sbb
ret
sbb
pop
jne
cmp
and
push
and
ret
mov
frstor
lahf
fucomip
in
or
adc
push
dec
push
or
or
xor
mov
lahf
add
cmp
inc
inc
pusha
divl
cltd
jmp
add
int3
sar
in
or
xor
ret
or
lds
not
cmp
adc
shl
and
xor
sbb
lcall
icebp
dec
adc
cli
inc
add
leave
sahf
push
dec
jg
push
aam
add
cmpsb
outsb
ljmp
jg
cmp
add
jmp
xor
mov
add
pop
sti
rcrb
xor
jb
sub
mov
mov
shl
movsb
into
push
mov
cmp
mov
jbe
leave
aad
and
push
test
mov
dec
repz
mov
lods
inc
mov
jmp
loop
lock
cwtl
mov
fstpl
push
jge
in
mulb
push
out
icebp
syscall
or
jno
sub
test
and
push
rclb
xor
add
xor
jge
dec
push
mov
add
cmc
arpl
mov
pop
jmp
decb
ds
or
mov
adc
push
mov
xor
out
sub
mov
pop
test
sub
enter
adc
and
add
jmp
pop
aad
clc
cwtl
push
mov
testl
dec
orb
and
lea
mov
rclb
das
jmp
repz
jo
das
fdivs
inc
jno
push
dec
push
outsb
mov
add
aaa
mov
mov
push
push
mov
sbb
jmp
mov
xor
mov
mov
inc
mov
add
pusha
and
or
ficomps
adc
add
scas
sbb
mov
xchg
scas
xchg
dec
inc
test
or
ror
xlat
pop
sbb
adc
mov
rcr
call
pop
cmc
and
sub
js
push
pop
or
dec
aas
movsl
or
pop
sbb
fsubrl
push
pop
mov
dec
rcl
inc
xorb
popa
jmp
mov
xor
sbb
push
pop
lock
adc
mov
ret
adc
stos
inc
mov
cmpsw
or
adc
mov
mov
and
jmp
pop
cli
imul
add
fcoml
push
xor
jne
push
dec
shl
add
or
xchg
add
fstpl
jb
sbb
lahf
repz
add
dec
cmp
mov
pop
jp
popl
stos
xchg
sti
pop
sbb
mov
iret
mov
jb
adc
pop
push
mov
mov
ja
call
rorl
repz
mov
jmp
and
repnz
adc
sbb
inc
push
and
popa
std
stos
rol
les
jmp
stos
ret
out
pushf
adc
mov
in
movsl
jne
aad
mov
insb
inc
lods
pop
popf
cmp
je
add
outsb
in
out
add
cmp
mov
inc
mov
or
push
stos
les
jge
push
lret
int3
pop
shlb
cmc
jno
sub
nop
test
dec
or
pop
mov
push
int3
jmp
mov
cmp
incl
in
lret
push
in
cltd
inc
or
cwtl
cs
or
xchg
dec
mov
cli
and
push
or
xor
xor
pusha
daa
or
leave
sti
cmpsb
mov
push
ret
or
sub
and
int3
add
jmp
out
xchg
add
add
adcl
adc
xchg
cmp
subl
cli
into
ret
jge
test
daa
jne
test
nop
xchg
lea
mov
andl
sahf
mov
ficoms
add
sbb
or
daa
sub
shr
adc
out
add
lock
add
sub
mov
sbb
imul
sbb
push
notl
rcll
push
flds
sbb
shrl
add
pusha
jl
daa
adc
testb
cmp
test
test
mov
popa
jge
rclb
push
repz
loop
neg
inc
lea
sbb
inc
push
mov
adc
sub
pop
mov
mov
andb
lret
shrd
xorl
or
xor
push
push
jns
dec
add
icebp
xchg
out
test
mov
not
xor
jo
int3
fists
out
add
jle
out
lret
fwait
dec
jmp
testl
cmp
pusha
xchg
jmp
adc
sub
test
sbbb
bound
mov
push
and
pop
mov
mov
mov
add
in
sub
and
test
dec
clc
mov
mov
push
std
data16
fsubrp
shlb
addb
push
sbb
daa
push
jne
jge
hlt
xchg
push
add
fstl
mov
shr
dec
sub
sbb
sub
orb
das
push
mov
adc
das
pusha
data16
dec
jle
idivl
mov
cmp
outsl
xchg
insl
roll
lret
rclb
faddl
add
jl
pop
dec
sti
inc
mov
or
add
mov
sbb
sbb
add
lea
cli
mov
aas
int3
xor
or
rcr
sbb
add
rcl
or
or
add
inc
popa
ja
dec
or
jns
or
cmp
sbb
stos
xchg
cmp
ficompl
lahf
fldenv
das
shlb
pop
dec
pop
and
add
testl
mov
mov
dec
adc
cmc
dec
jnp
and
jmp
fsts
lods
sbb
add
test
mov
jmp
cmp
dec
dec
pop
mov
mov
jmp
add
cmp
sub
cs
mov
add
or
jge
cmp
roll
mov
inc
jmp
sub
fcoml
or
mov
cmpsb
or
icebp
test
mov
dec
test
test
dec
mov
cmp
jb
dec
sbb
mov
pop
push
pop
mov
add
je
push
jmp
cmpsl
shlb
pop
cmp
rorb
test
push
xchg
pop
std
test
dec
addb
fistps
jno
dec
jl
popa
jmp
cmc
xor
inc
push
dec
pop
lock
jl
pop
outsl
inc
mov
mov
push
bound
cmpsb
into
and
jae
or
pop
sub
sub
fists
pop
fidivrl
mov
xchg
fisttps
pop
add
test
mov
push
movzwl
adc
lods
js
dec
xchg
in
pusha
fists
stos
les
stos
mov
popa
clc
fistl
mov
clc
data16
push
push
std
xorb
daa
sbb
mulb
iret
jge
cmpsb
mov
out
sub
lods
push
push
loopne
adc
add
push
jbe
les
sbb
clc
pop
loop
mov
dec
xchg
sbb
int3
loop
jp
jmp
or
sbb
sub
mov
sub
xor
xor
pop
add
je
fcmovbe
pop
cwtl
pop
xor
sub
and
repz
or
adc
icebp
sbb
or
pop
and
cmp
insl
aad
mov
or
jg
jns
pop
sbbl
inc
icebp
jmp
sbb
jns
jb
orl
jmp
cmp
jmp
dec
leave
mov
scas
xor
pop
add
cmpsb
ret
add
out
pop
mov
leave
jg
fldl
mov
cmp
push
push
loopne
pop
mov
push
push
adc
pop
inc
add
push
add
cld
jo
adc
jmp
ret
aas
or
ja
fstpt
cmovp
add
and
inc
mov
xchg
pop
mov
inc
pop
jae
sbb
pop
xchg
xor
lcall
arpl
das
popa
mov
outsl
leave
into
aas
push
jmp
insl
out
lods
push
xchg
std
push
out
int3
pop
sub
scas
xor
fcmovnb
mulb
ret
or
pushf
adc
fisttpll
push
push
cmp
jbe
in
pop
push
std
insb
into
dec
add
sbb
aam
aam
xor
add
fistpll
jae
das
add
adc
xchg
or
adc
loopne
jns
and
jecxz
and
pusha
and
add
mov
xor
pop
inc
jg
xchg
jge
movsb
call
xchg
lcall
cmpsb
push
pop
pop
push
pop
adc
add
and
in
jmp
mov
push
add
into
pop
push
imul
add
xor
adc
inc
inc
cld
jg
in
mov
cmp
sub
pop
dec
xor
push
dec
clc
and
pop
push
das
fisttps
dec
pop
out
orb
ret
jmp
decl
je
xchg
bound
shlb
push
inc
push
add
cmp
dec
mov
loopne
pop
pop
and
mov
loopne
mov
sub
or
sarl
sbb
pop
out
push
loope
mov
clc
mov
pop
or
add
hlt
cmp
add
hlt
mov
js
fiadds
das
add
outsl
push
inc
xchg
jp
jo
jge
jne
jbe
adc
inc
sbbb
gs
pop
inc
shr
jne
or
xor
jmp
jg
add
imul
cmp
push
fbld
nop
les
adc
fmull
sub
popa
pop
fadds
outsb
cmc
mov
out
pop
lcall
or
pop
fstps
cmp
icebp
dec
enter
repz
xchg
inc
shl
xor
jge
xchg
je
repz
add
push
mov
inc
and
aaa
test
hlt
xor
inc
fs
sbbl
outsl
add
jo
mov
or
adc
pop
loope
out
push
lret
jg
mov
cmp
pop
in
js
sub
lahf
push
push
call
lds
add
pop
push
sti
mov
inc
and
pusha
xor
cmp
repz
adc
iret
inc
or
sbb
jo
movb
rorb
sbb
add
inc
or
pop
xchg
mov
ret
pop
pop
mov
aaa
cmp
mov
js
and
push
adc
lahf
push
cmp
ja
xchg
or
xorl
xor
mov
mov
dec
cmp
out
shlb
push
scas
push
mov
jns
outsl
or
push
push
popf
mov
and
test
rcrl
js
pop
js
pop
stos
add
ds
mov
and
inc
mov
sbb
and
icebp
cmp
inc
jbe
imul
and
test
add
push
mov
and
mov
aaa
dec
push
shlb
shrb
and
int3
scas
xor
add
call
popa
roll
or
pop
loope
shrb
jae
mov
mov
push
xchg
jno
arpl
pop
mov
mov
push
pop
in
scas
shll
loopne
pop
add
inc
jmp
rcrb
out
pop
sub
push
aaa
daa
push
mov
xchg
shlb
cmp
in
das
hlt
jo
dec
aaa
jne
rcl
inc
jo
mov
out
clc
cmp
adc
add
mov
movsb
jnp
imul
fstl
daa
pop
shlb
cmpsb
sbb
push
xchg
adc
adc
cmp
push
popf
sub
in
xchg
add
xchg
clc
mov
sti
int3
scas
or
push
insb
mov
pop
popa
xchg
adc
adc
adc
shrb
sub
leave
roll
mov
push
jbe
push
cwtl
fdivl
test
adcl
fcomi
pop
sbb
mov
out
mov
iret
inc
push
inc
addr16
push
popa
inc
sub
or
clc
inc
push
fidivs
push
leave
xlat
push
shll
bound
and
jmp
rclb
add
insl
cmp
adc
add
pusha
sbb
ficoms
and
add
pop
push
add
xabort
dec
mov
jbe
scas
mov
subb
sub
add
mull
xchg
lds
pop
mov
push
mov
popf
jle
mov
push
fcoms
into
movsl
dec
fnstcw
jecxz
movsl
push
push
push
jmp
push
sub
test
fcoml
adc
lahf
push
dec
popf
fstpl
dec
mov
mov
pop
inc
mov
pop
mull
inc
inc
and
out
mov
adc
cld
xor
push
clc
or
xchg
fnsave
adc
dec
shl
sahf
daa
fcoml
sub
jb
push
xor
dec
xchg
adc
shl
adc
add
mov
not
addb
lds
mov
jl
push
out
adc
iret
pushf
mov
add
adc
mov
testl
fsubs
push
or
cwtl
xor
cltd
stos
fdivr
int
add
fucompp
xchg
dec
xchg
inc
pop
push
push
pusha
add
push
pop
jbe
lcall
sub
mov
jp
cmp
popa
add
or
jge
lahf
push
xchg
or
pop
jg
pop
pop
jmp
xchg
push
adcl
jmp
mov
sbb
daa
ret
scas
in
lock
pop
faddl
testl
ss
jmp
cmp
xor
ljmp
leave
mov
xchg
out
hlt
push
add
ret
add
pop
fdivs
sar
mov
or
rcrb
das
adc
xchg
loop
pop
inc
in
adc
xchg
cmp
inc
or
stos
pop
rcrb
push
mov
jmp
imul
xor
outsl
or
xchg
hlt
add
out
aad
clc
out
dec
pop
push
adc
jns
lods
adc
addb
jg
in
outsb
shl
sub
xchg
xchg
push
pop
mov
das
clc
push
xchg
add
add
mov
xor
stos
stos
sub
mov
jmp
rol
add
out
lret
add
insl
jns
jno
add
sub
call
adc
jno
jge
les
adc
jnp
mov
fcomip
pop
outsl
add
lds
mov
mov
stos
xchg
adc
or
cmp
mov
adc
out
stos
mov
sar
mov
push
stos
pop
aaa
imul
mov
xor
in
addb
call
sub
mov
mov
inc
jbe
mov
pop
pop
pop
adc
in
xchg
iret
jmp
or
test
or
jmp
popa
int
and
out
sahf
mov
add
dec
add
cmp
out
insb
jg
sahf
dec
xor
mov
add
sub
add
pop
add
cmp
jo
cld
add
sbb
not
jo
mov
dec
jb
pop
and
or
movsb
clc
cmp
add
int
push
imull
imulb
xchg
jle
xchg
push
jbe
pop
jmp
imul
fwait
sbbl
ljmp
lods
stos
data16
pop
push
mov
mov
cmpsl
and
inc
add
cmp
dec
inc
xor
push
push
lock
or
inc
cmp
or
call
push
in
dec
add
pushf
xchg
push
not
add
mov
xor
lods
hlt
jge
divl
jmp
xor
sbb
fcoms
inc
fisttpll
mov
and
push
pop
mov
out
mov
dec
lcall
adc
ret
or
sub
pop
ficomps
cli
jmp
ret
jns
add
cmpsb
mov
mov
test
shrb
std
pop
imul
xor
scas
inc
jo
sbb
sub
mov
sbb
sub
dec
dec
xlat
add
fcoml
pop
inc
inc
cmc
mov
and
and
mov
and
jmp
add
mov
dec
pop
fsub
and
daa
mov
push
mov
jmp
mov
daa
stos
dec
nop
decl
pop
call
leave
jns
inc
sub
xor
pop
or
or
out
sbb
das
in
inc
mov
and
mov
sub
and
sarb
mov
in
lahf
or
jo
int3
inc
jp
fsincos
cwtl
cmpsb
jge
mov
add
ljmp
jmp
pop
rclb
xor
add
mov
clc
mov
outsl
push
mov
or
cmp
sti
mov
lods
push
mov
sub
add
cmp
or
dec
inc
cs
pop
push
and
out
mov
push
sub
or
pop
dec
push
jge
outsb
repnz
sbb
rcrb
add
ljmp
mov
xchg
test
int
add
in
and
mov
push
ja
and
mov
push
mov
mov
pop
sbb
cs
mov
enter
lret
pop
aam
call
inc
clc
mov
or
loop
dec
mov
dec
xchg
and
ret
notb
lret
stc
mov
dec
dec
sub
aaa
std
aam
shr
test
shl
pop
push
dec
jg
or
xchg
test
sub
inc
mov
daa
xor
movsb
mov
push
sub
adc
cmp
popa
insl
mov
sub
pop
fwait
pop
mov
mov
loope
dec
xchg
sbb
pusha
fldl2t
fsubp
xchg
icebp
out
ret
pop
sbb
inc
das
jne
lock
repnz
push
add
fimuls
sub
xchg
das
ljmp
sub
test
std
and
icebp
sub
jb
aaa
add
movsb
push
mov
popfw
rorb
xchg
add
stos
adc
sahf
add
jmp
jno
fwait
adc
mov
dec
or
push
xchg
ja
mov
mov
sbb
sbb
fiadds
xchg
mov
les
je
loopne
mov
sub
sbb
jl
xor
adc
fs
and
push
emms
arpl
dec
adcb
jge
ss
in
pusha
dec
push
pop
sbb
lahf
aam
jmp
lock
not
mov
inc
mov
ss
int
xlat
and
or
mov
mov
cmp
dec
ror
xchg
jne
ss
jb
shrl
adc
xchg
lret
out
mov
les
mov
bnd
adc
dec
stos
push
add
jecxz
fmulp
stos
enter
aam
push
gs
hlt
add
jmp
or
call
xor
or
add
cmp
xchg
sbb
or
xchg
push
mov
popa
std
sbb
xor
jl
popf
adc
pop
sbb
ss
mov
subb
pop
daa
sbbb
dec
dec
xorb
add
sub
or
pop
clc
mov
sbb
xor
jne
les
adc
out
add
jmp
lret
or
cmp
aad
and
jge
les
fisttps
cmp
add
push
add
add
into
fmull
out
nop
enter
fldl
data16
adc
push
jo
mov
in
pushf
adc
pop
sbb
push
or
hlt
les
jne
mov
and
inc
bound
push
sahf
add
xor
xor
cmpl
xchg
inc
loope
cwtl
and
adc
dec
add
adc
adc
inc
xchg
adc
adc
cmpsb
ja
fildl
cwtl
dec
cmp
pusha
and
and
dec
and
pushf
and
dec
and
int
and
fidivrl
insb
mov
sub
lcall
sbb
cmpl
jns
lea
mov
mov
sbb
inc
or
inc
pusha
cs
popa
mov
sbb
inc
xchg
inc
pop
adc
lods
mov
mov
testl
sbb
pop
rorl
and
sbb
adc
roll
adc
sbb
int
test
mov
jl
add
imul
pop
push
mov
and
popf
push
push
fwait
imul
cmc
or
js
lea
fidivs
sub
bound
mov
sbb
popf
lret
mov
daa
cmpsb
leave
add
sub
stos
cmp
inc
sbb
cwtl
add
mov
bound
mov
stos
mov
addb
cmp
adc
add
pop
pop
push
push
mov
xchg
add
cmp
mov
xchg
sbb
or
lahf
xchg
movsb
mov
xchg
clc
inc
cmp
mov
flds
out
xor
xchg
cs
push
or
out
pmuludq
test
adc
push
out
adc
mov
pop
negb
mov
jne
sbb
loope
fcomps
push
mov
mov
sub
or
pop
mov
xlat
push
sbb
sbb
jmp
mov
das
and
js
dec
mov
dec
adc
ret
sub
sahf
cmp
sub
int3
add
sbb
mov
rcll
shlb
cmpsb
jl
loopne
lret
xchg
and
dec
mov
adc
mov
sub
pop
loope
cld
inc
rcrb
cli
orb
in
xor
imul
dec
and
cmp
dec
orl
idivb
sbbb
sub
rcrb
in
inc
insb
push
mov
inc
xor
nop
fcoml
les
inc
dec
sbb
push
lahf
jbe
mov
das
adc
and
lret
shll
lods
sti
dec
stos
insl
in
cmp
xchg
stos
out
enter
add
sub
or
jns
cmp
icebp
dec
pop
lods
aas
hlt
mov
movb
mov
stc
in
and
sub
pop
xchg
sub
ja
mov
push
dec
lahf
adc
loope
sub
js
test
push
mov
mov
fwait
add
lahf
jecxz
push
fisubl
push
outsb
pop
and
push
scas
arpl
fadds
sbb
push
jmp
lds
adc
sbb
mov
aaa
inc
dec
je
adc
cmp
push
push
xlat
cmp
pop
jmp
dec
add
rorl
pop
and
mov
loope
push
sbb
jge
mov
out
or
nop
cld
push
mov
pop
das
cmp
aas
test
fldl
adc
inc
xlat
xchg
inc
sbb
sub
mov
add
lods
sbb
in
cmpsb
ds
addb
xchg
mov
cmp
push
mov
iret
mov
rcrb
repz
and
es
and
or
mov
xor
cmp
rcrl
pop
push
cld
cmp
mov
or
fcmovbe
mov
roll
pop
and
add
or
sbb
mov
xor
mov
and
hlt
sub
popf
test
or
jmp
push
push
orb
push
add
jmp
push
imul
imull
lahf
jecxz
add
xchg
adc
xor
fstpl
out
aam
mov
xchg
cld
data16
je
or
or
push
hlt
lret
out
cmp
cmp
fisubrl
inc
sub
aam
add
stc
inc
sbb
mov
push
mov
add
or
repnz
jns
mov
les
in
stos
mov
push
mov
ret
jns
push
mov
xor
cmpsb
repnz
cmp
dec
shr
mov
sub
sahf
subl
inc
mov
bound
push
add
lods
push
jmp
push
mov
negb
adc
notl
mov
in
pop
mov
hlt
ficompl
shlb
inc
add
jnp
cmp
cltd
mov
hlt
or
insb
and
aam
and
and
lock
fisubrs
jnp
sub
cli
add
xchg
lret
roll
cmp
mov
pop
cmc
gs
clc
pop
pop
inc
inc
push
leave
int3
stos
fwait
push
xor
xchg
test
add
in
pop
sbbb
dec
pop
pushf
jae
add
gs
mov
mov
xchg
mov
stos
scas
loop
ret
jmp
mov
xchg
add
bnd
out
xor
xor
jmp
push
outsl
loopne
pusha
xchg
pop
push
cld
fldenv
sbb
dec
lcall
and
inc
cmpl
push
dec
addl
jl
stos
inc
test
mov
or
pop
cld
push
shr
sub
mov
and
daa
inc
rorb
shld
notb
mov
jmp
cmp
adc
sahf
js
dec
jg
inc
mov
jmp
pop
fdivp
shr
push
xchg
pop
add
inc
sbb
dec
out
loopne
shll
cmp
dec
mov
sbb
xlat
sbb
dec
mov
test
or
aas
sbb
add
lahf
adc
fs
scas
add
pop
xor
mov
inc
out
adc
pop
cwtd
dec
pop
mov
outsl
cmpsb
loop
sti
mov
add
out
mov
jmp
dec
push
mov
mov
inc
xchg
push
mov
sub
dec
lret
pop
push
jmp
testl
aaa
pop
add
test
popa
mov
mov
incb
add
mov
testb
jno
add
imul
adc
testl
aas
and
pop
or
xor
arpl
dec
inc
inc
push
iret
dec
pop
cwtl
inc
dec
imull
shrb
cmp
jo
inc
sbb
hlt
and
in
ror
ljmp
aad
pop
cli
in
ja
imul
push
jge
jae
add
inc
sbb
lea
xchg
fsub
outsb
test
mov
jp
jno
inc
jbe
or
sbb
push
outsl
rclb
inc
push
push
push
sbb
fimull
je
xor
and
inc
xor
scas
fs
mov
mov
clc
cli
push
adc
mov
mov
imul
movsl
add
idivl
or
daa
xor
je
ret
and
ror
pop
negl
sub
adc
orb
stc
shlb
addl
jmp
or
scas
lock
sub
jmp
push
fsubs
imul
sbb
cld
push
popf
adc
popf
repnz
sti
cmp
sbb
loope
dec
lret
das
pop
pop
sti
clc
daa
in
mov
stos
sbb
pop
lahf
out
movsl
je
push
inc
jmp
pop
adc
pop
jp
in
paddq
pusha
jmp
es
pop
push
and
jge
push
jmp
stc
xor
mov
lret
hlt
mov
dec
xor
fstl
cmp
push
pop
je
push
ja
or
hlt
shr
jg
jne
cmp
imulb
xor
addr16
call
mov
std
movsl
jle
inc
fisubrl
scas
jle
add
jnp
aas
inc
or
in
mov
imul
cs
iret
in
scas
mov
xchg
jmp
add
ret
jmp
mov
xlat
hlt
inc
jmp
push
lahf
dec
cld
push
sarb
or
cmp
pop
in
sub
pop
pop
lmsw
dec
sbb
dec
mov
mov
mov
cld
out
xlat
loopne
ljmp
lret
mov
mov
stos
jmp
jns
jmp
adc
add
lea
mov
or
add
scas
rorl
and
jmp
push
testl
daa
sub
dec
sub
call
and
mov
jmp
loop
or
push
imul
push
add
adcb
icebp
ds
inc
cwtl
push
and
add
pop
orb
repnz
adc
and
jmp
lock
cld
enter
lock
or
and
dec
or
pop
aad
jmp
lds
sub
jae
movsb
dec
and
js
sbb
add
loopne
jmp
mov
xor
sbb
pusha
ja
xchg
push
das
jmp
in
inc
cmp
sar
push
mov
cmp
pop
sub
jmp
gs
std
jno
jo
pusha
mov
xchg
daa
ss
je
rcl
and
xchg
sub
push
std
or
fwait
cmp
mov
xchg
out
repz
iret
ja
andb
xlat
jns
cmp
mov
imul
and
andb
mov
lret
sbb
push
ret
popf
xchg
int3
and
shrb
cwtl
ret
push
xchg
daa
adc
sub
mov
dec
sbb
or
jmp
inc
arpl
ret
dec
jo
push
lret
stos
jae
cmp
mov
jmp
ljmp
pop
pop
js
jmp
mul
sbb
data16
inc
lahf
add
jnp
aam
pop
insb
push
add
adc
jne
scas
call
ficomps
rolb
sbb
inc
jnp
daa
test
out
and
jmp
push
in
daa
lods
icebp
lds
or
aam
fsubs
pop
rorb
popf
cmp
push
mov
aam
divps
cld
xor
mull
pusha
lahf
dec
mov
inc
mov
sub
jo
and
in
push
and
shlb
add
lcall
push
jmp
shlb
pop
clc
or
mov
dec
mov
sub
xchg
xchg
stos
sub
outsl
notb
jle
jg
icebp
dec
sti
inc
stos
sub
stos
in
push
hlt
loop
jno
push
add
jo
jmp
jo
jecxz
and
jmp
push
hlt
neg
push
sbbb
mov
dec
mov
sub
push
addb
add
or
jmp
cmpb
mov
jns
xor
enter
jl
push
or
and
jge
adc
movsl
push
loop
scas
or
xchg
cli
and
pop
lods
push
das
pop
fdivs
push
pusha
dec
dec
mov
mov
push
jmp
sbb
sub
cwtl
jp
into
out
das
popf
jle
jo
jns
cmp
sub
pop
jp
das
pushf
std
fucompp
jp
jg
xchg
ja
xor
in
lock
or
shll
xchg
aas
rcll
dec
dec
shr
xor
pushf
cmp
nop
push
or
jmp
sbb
leave
or
or
pop
scas
shrb
push
mov
jbe
leave
pop
inc
shlb
clc
loopne
mov
sbb
idiv
into
iret
inc
rol
shr
rcrl
mov
pop
cltd
sub
mov
add
xor
mov
push
ror
push
xor
sub
fcos
inc
jmp
iret
repz
jo
cmp
out
lahf
enter
add
ljmp
es
popa
inc
sbb
dec
push
stos
xor
shr
pop
mov
add
xor
je
insl
or
imul
xchg
sbb
adcl
dec
nop
dec
pop
in
addr16
ja
cmp
out
call
nop
jb
xor
movsb
bound
and
and
sub
loope
xchg
mov
jg
mov
xchg
and
sbb
mov
repnz
rcl
imull
or
add
jmp
jmp
popf
or
stos
sub
daa
sub
popa
sub
push
bound
sub
jmp
xor
jne
cmp
jb
mov
ds
cwtl
in
and
sar
int
outsb
mov
sub
jmp
imul
and
mov
shrl
sub
mov
mov
das
inc
stos
and
fdiv
pop
jo
loope
lods
leave
leave
sub
or
dec
fiadds
push
or
jmp
adc
lret
and
pop
cmp
leave
ret
push
or
lahf
push
scas
cli
cltd
add
jg
mov
push
cmc
or
push
addr16
push
call
ss
cmp
lahf
aam
push
add
and
cmp
jne
sub
and
test
or
push
push
shrb
mov
nop
add
dec
sahf
xchg
adc
pop
enter
mov
add
stos
pop
push
in
and
das
outsb
insl
stc
movb
inc
pop
dec
dec
sbb
jnp
out
loop
xor
mov
pop
jmp
rcrb
or
enter
roll
push
and
bnd
mov
and
ja
add
pusha
push
ret
rorl
sub
cmpsb
bound
rorl
sbb
ja
pop
in
cmpl
add
cmc
add
adc
jmp
inc
inc
insl
sub
pop
push
push
mov
inc
shr
push
daa
mov
js
xor
aad
jmp
test
push
fadds
sub
sub
ret
pop
push
lods
dec
xchg
add
out
daa
sbb
sbb
cmc
fdivrl
notl
mov
or
mov
xchg
imul
sub
icebp
mov
dec
jmp
outsb
lret
add
push
lret
das
xor
or
mov
add
jae
add
jmp
add
xchg
push
push
adc
push
lea
mov
imul
test
aad
sub
into
scas
ret
pop
fs
cmp
je
bound
inc
or
ja
mov
fsubs
add
sub
xchg
jge,pn
hlt
mov
mov
fildll
leave
call
mov
add
out
push
mov
stc
shr
das
fcoml
sahf
shll
fdiv
test
pop
pop
dec
xor
cmp
mov
pop
jmp
shr
jb
ja
add
movsb
pop
and
jo
mov
es
and
adc
out
inc
out
in
out
imul
cli
mov
inc
out
test
cmp
ja
testb
loopne
mov
push
inc
pop
add
jae
in
push
aad
push
mov
or
pop
cmpl
add
jmp
dec
jge
mov
push
push
enter
jno
pop
out
dec
add
pop
neg
or
push
ret
aam
fdivrl
loope
out
shll
imul
lret
pop
inc
out
pop
sub
rcrl
or
int3
pop
call
xor
fwait
jb
pop
addr16
pop
cli
and
mov
jg
je
inc
dec
pop
jo
sub
xchg
push
je
bound
sub
lcall
adc
pop
lret
and
fcomps
mov
call
stos
fsubrs
add
jns
shr
sbb
scas
dec
fnstcw
or
and
jmp
sub
pop
mov
add
loope
pushw
xor
jmp
xchg
mov
mov
hlt
adc
pop
pop
int
cli
add
or
sahf
dec
pop
jnp
sbb
xor
mull
push
mov
sub
cmp
or
mov
in
and
and
in
inc
push
pop
xor
pop
jo
fsubrs
ss
movsb
shl
or
xchg
fcmovbe
rcr
aas
les
mov
mov
pusha
ljmp
clc
add
sub
push
add
mov
and
add
sub
rolb
sub
xor
ljmp
cmpsb
test
add
adc
fiadds
shlb
push
dec
push
mov
pop
or
ret
jnp
sbb
pop
pop
mov
std
xor
add
adc
push
mov
push
fs
lahf
sub
mov
push
and
pop
add
adc
shlb
push
mov
into
push
js
adc
jg
adc
popf
xor
js
std
push
push
subl
imul
xchg
sub
outsl
push
cmpsb
inc
adc
and
add
mov
mov
scas
xchg
xchg
push
mov
shr
sub
mov
daa
and
pusha
mov
or
push
in
fiadds
lods
pop
subb
add
jp
test
mov
sbb
stos
lret
cmp
mov
neg
jmp
ljmp
sub
jnp
loop
inc
push
push
orb
mov
jno
push
pop
scas
pop
sub
sbb
dec
jmp
stos
cltd
pop
aas
mov
dec
lret
inc
jae
roll
xchg
sarl
inc
jmp
mov
sub
cltd
ret
and
or
push
mov
sbb
mov
adc
jmp
loop
jb
or
push
push
jmp
jne
mov
pop
and
lock
shrb
pusha
loope
data16
jb
dec
xchg
push
xchg
xor
inc
aaa
jbe
or
fs
lahf
pop
imul
pop
pusha
sub
daa
adc
testb
push
pop
sahf
jle
sub
adc
pop
pop
iret
add
add
cwtl
ljmp
das
jge
ret
xor
data16
mov
popf
sbb
leave
jmp
scas
jbe
add
dec
inc
lea
popa
adc
aam
hlt
pop
ljmp
rolb
aaa
add
test
cmp
popf
xor
and
mov
in
mov
loopne
out
xor
not
or
cmp
nop
cs
inc
push
inc
pop
movsl
jns
mov
call
mov
push
push
lcall
xchg
jne
in
mov
dec
scas
mov
pop
icebp
aas
adc
mov
xchg
or
je
pusha
icebp
jmp
jnp
dec
in
imul
cmp
cli
pushl
inc
inc
and
pop
jb
adc
pop
loopne
inc
pop
sete
or
js
daa
jle
cmc
sbb
jns
aaa
popl
jecxz
push
push
inc
mov
and
adc
ds
sub
sbb
xlat
jmp
cmc
jno
push
jmp
pop
pop
mov
mov
scas
dec
rcrl
dec
mov
aaa
mov
scas
out
xchg
mov
pop
pop
outsl
in
add
cmc
mov
inc
mov
stc
push
mov
aas
imul
orb
xor
pop
gs
adc
push
lock
in
add
sub
sarl
addl
leave
gs
mov
dec
rol
jo
rorl
pop
gs
in
vcmpss
or
addr16
enter
cltd
mov
adc
and
mov
dec
jbe
add
inc
mov
loop
mov
jp
lock
into
std
inc
sbb
inc
pop
mov
imul
out
add
xor
dec
xor
sub
pop
xor
jb
cmp
xor
mov
and
mov
clc
addb
cwtl
inc
cmp
cmp
xchg
loope
rcl
cs
jle
daa
inc
mov
cs
sbb
ret
add
out
push
and
pop
sub
shl
push
mov
dec
data16
out
enter
rcrl
add
inc
shr
repnz
push
in
test
lods
jmp
or
add
cwtl
sub
pop
dec
adc
xchg
scas
cmc
aam
jae
mov
add
nop
clc
mov
mov
popl
xor
or
mov
sub
add
or
inc
push
cld
cmp
jecxz
dec
dec
cwtl
push
jnp
js
or
je
add
push
dec
cmp
pop
push
ljmp
add
sbb
dec
sbb
sbb
xlat
pop
mov
test
cmp
push
popa
les
iret
js
push
jns
or
call
rcrl
push
pop
sub
sti
jecxz
test
loopne
mov
pop
and
cwtl
lods
xchg
insb
lock
cmp
aaa
inc
sarl
std
inc
insb
jae
outsb
xchg
lahf
push
lcall
enter
cmp
int3
xor
sub
pop
fisttps
cmp
hlt
and
pusha
jmp
mov
call
aas
sbbl
call
cmp
mov
jecxz
add
inc
sbb
adc
jg
lret
pop
inc
jo
xor
and
push
pop
cld
lds
push
ja
cmp
xor
dec
mov
cmp
nop
sub
jno
or
and
pop
jmp
dec
scas
xor
pop
lods
lock
idivb
push
pop
je
add
stc
mov
es
hlt
mov
pusha
push
call
in
repnz
push
add
adc
xor
out
dec
jne
mov
ret
test
mov
clc
dec
dec
clc
mov
jns
out
mov
js
push
inc
cmpb
decb
mov
and
popf
int3
push
sbb
xchg
loop
push
and
add
mov
xor
pop
cmp
hlt
sbb
push
inc
pop
jmp
hlt
arpl
pop
pop
push
push
jne
add
add
adc
push
dec
imul
je
push
lock
adc
and
ljmp
jmp
jnp
fsubrp
mov
in
repz
dec
rorb
cmp
lock
in
add
xor
cwtl
jbe
jecxz
fiadds
or
add
pop
loopne
cmp
mov
xor
push
xor
pop
cmpsl
repz
scas
push
pop
add
mov
shrl
lock
or
push
mov
dec
push
lock
and
mov
mov
push
mov
sub
mov
pop
sti
rolb
leave
cmp
pop
dec
fabs
clc
pusha
roll
xchg
not
fcomps
nop
or
outsb
and
fstpl
mov
dec
dec
in
icebp
lods
jo
dec
push
push
sbb
adc
mov
or
and
mov
lods
pop
neg
adc
sbb
sbb
orb
mov
adc
cld
pop
xchg
std
push
pop
pop
add
add
in
sub
push
sbb
or
pusha
sub
loopne
sub
add
and
push
ljmp
cmp
int3
pop
push
pop
sbb
pop
mov
push
push
pop
add
ret
pop
push
cld
ds
jo
loopne
clc
adc
mov
adc
testl
pop
jle
nop
jbe
std
test
mov
rorb
or
push
andb
sub
aam
cwtl
sub
or
je
mov
jmp
scas
push
mov
push
lret
adc
xor
shll
xchg
das
pop
aam
daa
ja
xchg
dec
and
push
jnp
xor
pop
or
idivb
push
and
and
mov
popa
mov
xchg
in
out
push
fsubr
cltd
sbb
xchg
or
sub
fucomp
lcall
adc
dec
mov
push
repnz
rcll
sti
imul
repz
popa
push
jmp
mov
mov
cmp
adc
jmp
push
jno
or
jmp
pop
mov
hlt
push
mov
pop
in
dec
sarb
movhps
lcall
aad
out
inc
fistl
insl
ret
jmp
xchg
roll
subl
add
aad
xchg
mov
cld
in
inc
mov
pop
pop
icebp
xchg
cmp
adc
fiaddl
mov
aad
loope
jge
push
mov
lock
gs
add
inc
aam
clc
adc
cs
mov
mov
push
cmp
les
pop
lcall
push
pusha
lods
mov
mov
test
xchg
xchg
pop
add
adc
xchg
decb
into
xor
pop
xchg
stos
adc
push
xchg
pop
adc
pop
or
inc
int3
jno
fwait
mov
add
outsb
sub
inc
es
or
lds
push
sbb
mov
loop
push
roll
mov
jmp
cmpsb
xchg
cli
adc
fildl
aas
das
sub
and
repz
mov
xchg
xor
push
add
addr16
cmp
sbbl
sarb
pop
push
dec
and
lods
fsts
cmpsb
test
mov
adc
sub
sbb
xlat
pop
push
cmpsl
sbb
rcrb
sub
cmp
jbe
lret
sub
cmp
inc
xchg
dec
jmp
sahf
and
jae,pt
adc
xchg
sub
adc
fisubl
mov
sub
push
cmp
add
js
fdivr
sub
dec
inc
dec
pop
dec
imul
jg
jae
xchg
sub
xchg
or
jle
fistps
mov
add
jg
ja
orb
es
add
jl
lahf
in
sbb
fnsave
les
add
inc
filds
and
not
inc
mov
dec
pop
aad
mov
sbb
cmp
loop
jmp
push
sbb
pop
push
aam
xchg
pop
or
pop
and
mov
sub
dec
imulb
adc
dec
or
jno
test
inc
add
shl
adc
mov
mov
ljmp
sub
or
cmc
bound
ficoml
sub
dec
ret
sbbb
mov
sub
sahf
add
xor
and
arpl
cmp
cld
push
mov
lea
das
rorl
pop
gs
push
mov
inc
jl
inc
cmp
scas
sar
adc
or
or
mul
jo
xchg
jle
jmp
adc
or
pushf
cmpsl
and
sbb
mov
or
outsl
mov
adc
aas
test
out
and
push
out
repz
jg
and
jmp
mov
test
leave
mov
push
inc
xor
cwtl
sbb
sbb
nop
out
pop
sub
ljmp
pop
int3
or
es
hlt
pop
mov
test
or
push
lret
and
hlt
sbb
add
mov
enter
mov
mov
push
pop
movsb
movsl
jmp
xor
ds
addr16
mov
mov
adc
in
in
mov
sub
add
xor
jns
cmpsl
push
sub
jmp
loope
jbe
cmp
sbb
jecxz
and
push
incb
pop
dec
ljmp
or
pop
xchg
jnp
cmpsl
jmp
repnz
out
out
loop
rcrb
push
test
lret
mov
popa
scas
inc
xchg
adc
test
call
mov
pop
aad
xchg
mov
movsl
or
cmpsb
lret
outsl
jp
lret
mov
bound
das
add
jbe
add
hlt
cmp
ficoms
cmp
pop
sbb
mov
dec
hlt
cwtl
push
xchg
xchg
jne
xchg
cld
jge
test
dec
testl
sub
idivl
push
outsb
pusha
inc
push
or
inc
hlt
and
push
dec
push
jne
pop
in
test
js
dec
scas
push
outsl
or
push
pop
filds
jecxz
ja
pusha
pop
jmp
push
sbb
or
fucompp
mov
call
daa
out
aam
cmp
sub
sub
test
call
fiaddl
enter
mov
movl
arpl
vcvtsd2ss
push
sub
or
jmp
std
xchg
icebp
pop
js
pop
inc
cmp
clts
and
or
mov
mov
pop
pop
pop
adc
add
jb
sbb
inc
mov
xchg
setg
mov
ds
pop
stc
pop
lds
testb
loope
sub
lock
cmp
inc
jno
outsl
xor
aas
into
lock
hlt
std
cmpsl
pop
enter
les
or
dec
xor
rorl
lahf
insb
add
fsubrs
mov
jns
jg
enter
xor
sub
std
or
or
adc
or
push
cmp
movsb
add
sub
mov
pop
pop
lods
jmp
inc
pop
dec
mov
add
or
adcb
not
xchg
or
leave
and
jmp
ds
and
cmp
ret
sbb
rolb
dec
jecxz
into
mov
rorl
sub
cwtl
sub
jne
dec
fidivs
aad
out
fdivrl
incb
or
movsb
add
mov
add
sub
ljmp
stc
insl
adc
rolb
push
inc
or
add
xchg
imul
jb
lahf
sub
push
call
and
or
jno
cmp
scas
mov
or
xlat
inc
fs
xor
xor
add
aad
push
repnz
jmp
jno
jmp
mov
adc
mov
mov
addl
movsl
mov
mov
mov
sbb
add
dec
or
sub
push
push
mov
daa
pop
push
mov
aad
in
xorb
pop
dec
mov
add
cmp
cmp
cli
mov
sub
pop
mov
das
sbb
les
insb
repz
nop
repz
xchg
sti
sub
into
out
sbb
inc
pop
jmp
out
mov
ret
jle
adc
mov
or
imul
jne
fnstenv
popa
nop
or
lods
jmp
add
push
jo
mov
sahf
or
incl
fisttpl
test
pop
test
jp
mov
cwtl
inc
mov
clc
add
std
aad
shl
sbb
sbb
add
inc
dec
and
mov
ret
push
jmp
shr
and
outsl
fldcw
es
jae
adc
into
mov
push
dec
add
mov
xor
dec
in
mov
test
rolb
lretw
repnz
sbb
neg
push
test
nop
mov
push
rolb
les
aad
add
add
insb
jl
and
in
mov
aas
cltd
xchg
and
aaa
lret
cmpsl
add
pop
fs
push
inc
mov
stc
dec
sarb
ret
setbe
pop
mov
and
pop
shrb
insl
push
mov
push
add
add
or
cmc
test
test
call
mov
add
jl
xorb
cwtl
lcall
xchg
mov
cmp
scas
xor
push
in
aas
shrl
mov
push
cmp
sbb
sti
sub
stos
enter
loope
stos
pop
je
lret
push
xchg
test
lea
das
pop
sub
loop
xchg
out
add
and
sub
test
mov
mov
xor
insb
sub
cmp
stos
mov
lods
mov
push
sbb
or
pop
xor
jo
inc
mov
sbb
cs
cmp
or
mov
loop
andb
inc
test
or
mov
or
in
imul
adc
negl
idivb
mov
cmp
xor
pop
in
mov
xchg
stos
dec
cmp
rcr
mov
cmp
js
sub
movsb
testb
dec
rclb
pop
pop
sbb
and
jb
inc
add
insb
or
test
sub
jle
adc
xor
cmc
mov
mov
js
ficomps
test
lds
add
push
aam
pop
ss
jmp
mov
mov
xchg
aas
test
sub
mov
sti
lock
iret
or
adc
aad
dec
xchg
lods
xlat
sbb
cmp
push
sbb
shlb
ret
frstor
push
pop
out
jns
add
outsb
ficompl
mov
dec
dec
jp
or
cmp
les
add
ret
pop
xchg
jmp
jmp
in
lcall
cld
das
add
push
inc
dec
popf
sbb
add
xchg
rcr
lds
pop
add
xlat
loope
jo
sub
cmp
inc
das
scas
jb
inc
fsubl
inc
vhsubps
inc
shlb
ds
clc
add
lret
or
fwait
add
jae
test
xor
or
xor
xchg
not
aad
cmp
cs
and
fwait
dec
pop
in
mov
adc
dec
insb
loopne
leave
daa
rorl
pop
jmp
add
xchg
pushf
pop
pop
lods
xchg
mov
mov
leave
push
pop
sub
push
cmp
out
adc
test
or
sti
je
add
add
pop
lret
lods
inc
xor
push
popa
loopne
jp
pop
push
add
mov
pop
lret
fldenv
loop
clc
into
jecxz
cmp
pop
das
test
add
rorl
pop
add
mov
or
pop
mov
pop
and
mov
imul
pop
jns
sar
test
out
sub
dec
sub
xor
divps
push
and
in
jle
pop
outsb
jo
sbb
inc
adc
lods
jge
fs
xchg
sub
mov
mov
push
scas
cld
xchg
lea
push
cmp
dec
push
push
mov
lods
and
mov
not
inc
dec
aas
popa
push
xor
sub
fstps
or
rolb
dec
addl
cmp
pop
cmp
adc
ret
iret
mov
repnz
or
sub
rorb
pop
je
push
pop
push
in
loope
jae
arpl
popa
dec
jmp
idiv
jnp
inc
pop
ret
lea
xor
mov
adc
jne
sub
mov
lahf
sub
add
inc
lods
fxtract
mov
cmp
xor
add
push
mov
adc
ret
push
sbb
push
pop
lea
and
add
and
pop
jge
push
xchg
aad
adc
add
lcall
xchg
aad
cmp
loope
inc
outsb
insb
daa
fidivs
fidivrs
adcb
push
inc
jmp
and
push
loop,pn
mov
idivl
add
clc
add
pop
mov
ds
add
lds
and
or
push
es
lods
sub
out
pop
sub
push
jmp
lret
loop
adc
xor
das
scas
jns
inc
mov
cli
add
cmp
xchg
movsl
stos
mov
pop
push
push
mov
jge
xchg
in
fsin
pushf
mov
mov
pop
jmp
stos
loop
xchg
mov
stos
sub
sub
stos
jecxz
mov
push
pop
incb
out
out
repz
rolb
or
xchg
inc
hlt
and
dec
pop
shlb
mov
dec
or
or
fisubrs
inc
fistps
sti
jmp
test
inc
mov
leave
sub
lret
add
ljmp
fsubs
mov
pusha
pop
pop
icebp
fmuls
or
in
cmp
flds
dec
inc
sub
xorb
clc
divl
push
pop
jmp
mov
out
aad
pop
mov
mov
jg
xor
ret
jns
int3
adc
push
adc
jmp
cmc
pop
cmp
icebp
pop
mov
pop
pushf
aaa
dec
clc
mov
je
or
scas
movsl
push
into
pusha
daa
xchg
arpl
outsl
xor
or
ss
dec
jg
dec
adc
sub
jnp
cvtdq2ps
and
pop
lahf
push
pushf
inc
xorb
shrb
xchg
aas
int
xor
add
inc
das
iret
les
mov
in
mov
and
cmp
inc
add
pop
sub
push
pop
adc
mov
arpl
mov
pop
clc
shlb
add
mov
add
cmp
add
rol
mov
dec
sub
sbb
add
nop
cs
adc
cmp
sub
xchg
push
or
push
push
ja
cltd
aas
mov
xchg
xchg
insl
sub
or
push
or
lret
jl
jmp
cmpsb
sbb
pop
icebp
mov
jmp
dec
add
cmp
sbb
inc
or
rol
or
dec
imul
mov
push
inc
call
lds
mov
xlat
cli
aam
cltd
clc
movsb
push
mov
hlt
cs
xor
jmp
jne
sarl
repnz
popf
rorl
dec
pop
shl
ret
sbb
and
andb
addb
stc
in
jl
aas
push
push
mov
sub
rol
iret
jns
nop
pop
dec
mov
add
test
outsb
and
mov
push
inc
sarb
sub
aas
jmp
test
inc
add
mov
loop
push
into
orl
mov
ds
or
jge
jle
sar
test
mov
sub
aad
xor
mov
lods
xor
sub
cmp
xor
cmp
test
add
arpl
mov
into
inc
mov
jg
adc
mov
mov
or
aaa
sub
outsb
es
fs
cmp
sbb
aaa
xor
cmpl
cs
add
add
ret
addl
or
ja
push
pop
aad
movq
fwait
jg
nop
adc
pop
icebp
imulb
popa
add
mov
ss
andb
adc
xchg
ficomps
dec
test
mov
fsts
add
push
mov
add
loope
push
jecxz
shrl
jge
loopne
jg
dec
or
push
pop
dec
repz
fcmovu
pushl
xor
add
daa
scas
lea
adc
dec
lods
aam
xor
cli
fiaddl
ljmp
fdivrl
ja
imul
or
shrb
mov
mov
arpl
mov
mov
ss
pop
imul
nopl
es
sub
pop
sahf
call
adc
movsl
adcl
sub
and
inc
out
stos
cmp
adc
mov
or
repnz
int
jmp
pop
mov
imul
jne
icebp
enter
push
in
mov
and
sti
push
addl
xchg
xchg
stos
sub
popl
jecxz
pop
push
cli
push
popa
cmc
inc
push
shl
fld
lock
or
pop
subb
daa
or
mov
xor
dec
imul
popa
jg
dec
pop
cld
imull
xor
inc
sub
jo
mov
add
ja
rorb
test
mov
add
cmp
scas
in
mov
test
fcmove
and
mov
inc
fidivs
add
in
add
pop
push
jo
cmp
ds
mov
xchg
aaa
push
pop
insl
dec
add
cmp
jle
cmc
popa
adc
or
ret
jo
outsb
push
notl
cmpsl
push
dec
and
pop
push
dec
xor
pop
jbe
mov
push
mov
xor
cli
jmp
mov
and
inc
jmp
out
data16
cli
and
stc
in
jg
in
add
leave
inc
xchg
push
jnp
movsl
nop
or
jmp
or
xor
pop
add
out
clc
in
lds
jg
xor
in
or
mov
pop
pop
dec
xor
xchg
rclb
aas
sbb
sub
cmp
or
pushf
and
jmp
fadd
in
pop
cli
xor
pop
outsl
sub
sub
popa
or
inc
pop
push
out
inc
scas
jp
jbe
add
pop
adc
punpckhdq
mov
adc
das
and
push
add
xor
out
pop
dec
push
rclb
and
gs
fadd
mov
in
mov
aad
dec
pop
cmp
in
pop
mov
pop
incl
add
inc
jae
addb
sub
sbb
inc
xchg
out
pop
xor
push
push
into
mov
or
sub
fnstcw
addr16
movsb
shlb
out
repnz
jnp
movsb
xchg
sub
dec
idivb
sub
mov
jg
mov
mov
sbb
or
stc
mov
push
in
imul
inc
or
jmp
dec
inc
sbb
jo
mov
fs
lahf
test
pop
dec
sub
pop
sahf
xor
in
pop
sub
jb
testb
push
pop
popf
stos
ret
cmpb
jmp
adc
nop
mov
inc
ds
xchg
add
and
cmp
jnp
push
pop
cli
lret
jmp
shlb
mov
dec
repnz
push
dec
aam
mov
fcomps
pop
pop
or
addb
popa
pop
dec
pop
cmpsb
cmp
pop
or
lahf
data16
rcll
cmp
dec
or
notl
arpl
idivb
mov
jle
insl
cmp
jmp
ficompl
jb
mov
pusha
mov
pop
add
jl
sti
popf
and
mov
scas
cmp
mov
xchg
push
push
push
or
cltd
pop
sbb
call
mov
and
sbb
pop
add
push
xor
sub
mov
or
and
stc
mov
jecxz
fldt
jmp
add
syscall
shr
test
mov
stos
add
es
aad
stos
ror
loopne
sbbb
maskmovq
pop
inc
imul
aas
xor
jae
pop
call
pusha
sub
lds
pop
xor
shr
xor
or
cmp
adc
mov
jnp
pop
sub
aas
mov
xor
pop
push
scas
leave
cwtl
jno
dec
xchg
inc
push
add
sbb
mull
push
nop
inc
add
jmp
add
jbe
sahf
or
inc
test
call
pop
daa
bound
add
lock
jmp
adc
pop
call
clc
adc
dec
fisubs
push
daa
jmp
lods
sbb
orl
cli
pop
dec
cmp
dec
xlat
lods
testl
sub
add
adc
int3
mov
int
push
adc
loope
pop
pop
ficompl
xchg
fiadds
loope
mov
cltd
xchg
aas
lds
mov
and
shl
pop
scas
jbe
cwtl
mov
into
pop
jle
sub
vmovd
insl
add
cli
mov
mov
fidivs
imul
add
mov
lods
mov
add
pushf
dec
pop
aad
in
pushf
adc
add
lret
mov
dec
xor
sub
lock
cmp
icebp
jnp
add
xchg
sub
in
xchg
inc
outsb
cwtl
cmc
imul
fsts
iret
pop
inc
mov
cs
shlb
popf
pusha
outsb
cmpsb
sub
push
push
push
out
shrl
jp
add
adc
add
xor
aas
mov
xchg
test
in
ds
push
mov
pusha
mov
fsubr
xor
inc
in
lods
pop
mov
lock
gs
nop
or
stc
push
pop
out
test
mov
lds
adc
jno
subl
scas
mov
ret
push
repnz
ficompl
out
jbe
dec
cmc
mov
cmp
jmp
sub
cwtl
into
pop
push
inc
cmpsb
sub
or
pop
and
cmp
daa
push
cmpl
ret
add
sub
dec
lahf
mov
lahf
push
jp
jp
add
mov
push
clc
adcb
jle
jle
and
and
mov
sbb
lret
loop
ljmp
dec
sub
pop
sbb
repnz
push
lahf
dec
into
add
xchg
xor
jg
rolb
adc
or
or
or
inc
leave
jg
out
movsl
jbe
push
dec
pop
adc
ficompl
or
out
xor
push
push
ja
jns
lds
sub
add
sbb
in
testb
sbb
cmpsb
aam
loopne
clc
pop
add
push
mov
dec
xchg
pop
mov
outsl
dec
adc
dec
cmc
mov
mov
jmp
outsl
xchg
decl
add
lds
bound
cmp
fcmove
and
adc
repnz
push
adc
push
int3
inc
leave
jns
cmp
jns
flds
in
aad
jnp
mov
daa
push
push
mov
sbb
adc
clc
out
cmc
xlat
inc
pop
mov
add
cmp
mov
insb
push
jmp
mov
out
sub
stos
pop
scas
std
push
sbb
mov
xor
ds
or
sbb
sub
in
dec
mov
ret
inc
xorl
push
jg
mov
or
cmp
dec
iret
mov
dec
iret
inc
dec
shrb
and
mov
cmp
arpl
mov
and
in
inc
hlt
fwait
gs
sub
pop
fstpt
pusha
inc
pop
sub
addl
fsubrs
adc
dec
push
and
add
inc
jg
subb
inc
out
sub
xchg
lods
add
dec
adc
imul
mov
push
cmp
xchg
add
rcl
sti
push
push
pusha
jmp
add
add
repz
inc
mov
andb
je
les
shl
adc
mov
in
sub
mov
dec
jmp
dec
outsb
jecxz
sub
add
imull
mov
mov
es
mov
fdivs
int
sub
cltd
and
push
inc
fidivs
push
jle
das
cmp
ds
popf
inc
adc
sub
jne
imul
mov
mov
das
je
ds
sbb
or
jns
addb
add
in
adcb
mov
inc
jmp
jle
inc
jp
pop
mov
outsb
fnsave
loop
push
mov
subb
not
mov
push
and
or
push
jp
mov
movsb
enter
jb
dec
sbb
jmp
cmp
das
es
mov
push
dec
jns
ret
push
or
pop
imul
dec
ss
inc
pop
or
xlat
push
add
mov
jmp
int
cli
push
hlt
mov
xlat
and
in
das
outsl
sub
shll
lods
dec
mov
fldenv
mov
sub
aas
or
outsl
fildll
lock
ds
jecxz
les
pop
mov
not
jne
push
fwait
pop
out
cmp
push
insl
inc
leave
inc
test
js
add
icebp
out
lahf
and
push
adc
vmread
mov
sbb
ja
push
mov
xchg
pusha
ljmp
mov
negb
loop
clc
pop
das
mov
inc
nop
xor
out
ljmp
pop
push
xchg
xchg
ljmp
in
mul
lods
adc
dec
add
repnz
jbe
sub
aam
call
out
mov
pop
cmp
dec
lock
daa
pop
orl
scas
jge
loop
add
push
sbb
out
add
dec
jmp
inc
mov
sub
jae
shlb
adc
sub
xor
or
add
add
pop
mov
cmp
jmp
fs
sbb
stc
mov
fdivrl
bnd
push
neg
std
repnz
dec
aam
scas
mov
je
cmp
dec
mov
dec
xor
pop
push
ds
adc
mov
pop
lods
jbe
push
add
push
add
push
mov
xlat
minps
js
add
mov
push
dec
jno
enter
dec
or
mov
movsb
sub
testl
sub
test
cmp
popa
push
mov
mov
mov
mov
jae
cmpsb
xor
rclb
stos
jno
lret
sbb
enter
dec
jnp
addl
inc
jmp
xchg
stc
repz
loope
inc
out
test
dec
loop
rol
adc
mov
stos
loopne
testb
jle
jmp
mov
test
add
jmp
pop
inc
adc
xor
les
and
push
adc
out
lods
sbbl
cmp
dec
inc
loop
fisttps
daa
fwait
xor
fsubr
xchg
or
icebp
stc
sub
call
js
in
ss
add
icebp
stos
sbb
test
stos
jl
sbb
push
sbb
adcl
lds
jmp
cmp
add
insb
je
data16
lahf
enter
repnz
arpl
or
jge
icebp
and
sar
xchg
mov
pop
in
jns
xlat
add
pop
sti
dec
stc
out
aad
stos
and
jbe,pt
movsl
rcll
pop
pop
jmp
mov
add
ljmp
imul
loope
add
pop
cld
imul
push
push
and
mov
xor
jno
ret
nop
hlt
or
dec
sub
hlt
out
in
loope
js
das
or
jl
js
or
xchg
fnsave
mov
or
data16
ret
push
jne
push
mov
pop
test
cmp
push
pop
push
js
daa
inc
data16
adc
and
add
xor
or
mov
or
mov
ljmp
or
pop
xchg
outsb
xchg
push
fstps
or
jnp
pop
inc
push
push
shlb
mov
sub
lock
insb
in
pop
addl
mov
pop
and
sarb
xchg
inc
pop
lret
pop
data16
or
aad
inc
mov
sbbb
fs
fmul
push
inc
call
or
andb
jl
ss
and
add
imul
pop
jmp
mov
push
or
inc
push
add
lret
pop
call
aas
mov
dec
in
rol
jmp
mov
pop
lea
test
add
mov
xor
jnp
and
push
loope
sub
pop
jbe
ljmp
pop
push
add
or
mov
pop
adc
sub
dec
scas
or
daa
arpl
adc
stc
sti
cmp
mov
cmp
xchg
or
xchg
in
cmp
push
add
jb
or
in
das
movsl
add
shr
aad
jg
pop
dec
push
or
imul
enter
sub
out
rol
adc
cli
inc
inc
dec
jl
cmpb
icebp
fstl
mov
adc
push
cli
or
sbb
adcb
adcl
fs
in
lods
inc
jae
les
or
cmp
mov
aam
popf
or
mov
mov
jmp
stc
jmp
jmp
in
and
lods
popf
test
mov
scas
xor
pusha
jns
adc
clc
or
cmp
je
jp
push
push
and
and
stc
cmc
jl
leave
and
sbb
xlat
fdivl
add
pop
sti
jmp
add
in
mov
std
cmovg
test
divb
cmc
out
and
pop
jle
push
stos
mov
add
scas
push
dec
jmp
adc
pop
out
jns
jo
jo
pop
repz
pop
std
xlat
cli
mov
jne
sub
add
aad
and
push
add
clc
mov
sub
xor
jmp
push
inc
jae
cs
cmc
add
mov
xorb
adc
test
or
push
and
stos
sub
pop
push
nop
enter
lock
bound
jmp
pusha
das
push
mov
notb
das
shrb
or
mov
sub
repz
fnstcw
shl
mov
les
pop
lods
xor
imul
loopne
mov
and
das
js
addb
jmp
scas
loopne
sbb
or
jno
pop
cld
clc
add
add
cmpsb
add
jmp
or
jnp
xlat
aaa
les
xor
cmp
pop
dec
mov
add
pushf
xor
mov
imul
and
sub
pop
push
fldenvs
inc
sub
lret
sbbb
xchg
sbb
inc
movsb
cmpsb
shll
adc
dec
jle
add
sub
stos
add
adc
popf
adc
daa
mov
mov
repz
mov
sub
aam
push
dec
lahf
sbbl
lods
add
mov
outsl
clc
mov
stos
fcoms
xor
test
decl
dec
inc
testb
add
xor
xor
jne
sbbb
add
cs
sarb
je
movsb
sub
mov
inc
lock
loope
adc
jnp
jle
mov
add
mov
imul
loop
pop
jae
aas
and
mov
fucomp
jo
push
pop
stos
fwait
pop
lret
test
adc
add
ja
cmp
add
loop
jge
jmp
cltd
ljmp
mov
sub
test
dec
jno
and
stos
push
jmp
and
xor
mov
rcrl
dec
in
add
stc
nop
cmp
ret
pusha
out
lahf
xor
mov
adc
dec
cmp
pop
out
mov
add
fwait
inc
mov
das
sub
stos
leave
pop
aad
nop
xor
jge
test
or
jns
add
std
mov
daa
jno
dec
mov
jg
not
imul
and
dec
in
push
dec
outsl
xlat
daa
xchg
ljmp
cmpsb
mov
aam
subb
mov
and
scas
std
xchg
sub
pop
cmp
pop
enter
test
leave
pop
fucomip
xor
stos
orb
dec
push
xor
out
xor
inc
movsl
mov
in
add
negl
push
cwtl
or
sbb
xor
and
pop
lock
pop
bt
add
xor
bound
stc
mov
nop
test
xchg
cmc
push
call
xlat
call
jg
fsubs
add
imul
jns
push
pop
or
popa
jmp
and
arpl
mov
mov
push
adc
rcpps
push
dec
int
dec
std
idivl
jmp
mov
rclb
pop
push
xchg
jg
popa
mov
ret
or
pop
sbb
aaa
push
xchg
add
or
push
aad
and
mov
adc
daa
negb
sub
cmp
xchg
or
or
pop
in
push
cmp
inc
and
add
xor
add
test
outsb
faddp
adc
mov
jmp
push
add
mov
inc
addb
ja
push
sbbb
jmp
lret
or
or
lods
cmpb
cmp
cmc
stos
iret
inc
dec
inc
and
adc
out
xchg
ljmp
xor
scas
repz
xchg
and
push
sbb
mov
neg
dec
jmp
out
mov
repz
fdivs
jmp
inc
push
push
and
pop
jecxz
sub
nop
sbb
pop
mov
or
shlb
inc
iret
testl
inc
insb
sub
and
and
movsl
add
pop
rclb
mov
pop
push
adc
lods
add
dec
jmp
cmp
sbb
xor
add
js
xor
lret
pop
jmp
outsl
xchg
dec
or
fstpl
inc
scas
and
or
dec
jge
mov
sbbb
adc
xor
xor
fs
sbb
jbe
and
xchg
shlb
insl
push
inc
push
mov
xor
leave
and
loop
adc
pop
adc
sub
adc
imul
mov
mov
sarb
cld
ds
sbb
or
je
add
sub
jge
sbb
lock
in
push
dec
sub
mov
lea
arpl
lret
hlt
and
and
or
inc
nop
cmp
leave
or
jns
mov
addb
out
push
pop
mov
cmp
jmp
jo
or
divb
scas
cmc
mov
xor
daa
jae
sub
mov
or
or
jg
movsl
imul
push
out
inc
clc
mov
sub
and
jl
outsl
pop
sub
sbb
cmpsb
enter
inc
out
lcall
mov
xor
pop
shr
or
ds
push
cmpsl
stos
into
xchg
popa
mov
in
fdivs
pushf
pop
push
xchg
add
cmp
jns
pusha
push
movsl
xor
pop
jmp
add
xor
or
es
test
movsl
push
cmp
push
fildl
pop
mov
bnd
mov
push
xchg
inc
notl
push
and
push
dec
xchg
mov
inc
loop
sub
inc
lods
inc
rcll
sub
pop
sub
shrl
lds
add
inc
push
dec
push
out
and
sbb
in
cmp
push
jno
xor
mov
and
sarl
cmp
sbbb
in
push
sub
int3
cmpsb
mov
mov
mulb
pop
notb
leave
xchg
jle
test
xor
stc
adc
movsb
aas
pop
jp
mov
out
and
cmp
icebp
push
cmpsl
iret
out
lods
lds
push
out
push
cltd
push
aad
ds
dec
xlat
mov
out
jmp
insb
pop
fsubs
jnp
dec
stos
das
add
pop
push
mov
mov
push
push
pushf
in
mov
xchg
dec
addl
cmp
and
jmp
shrb
mov
push
xlat
cli
inc
into
mov
movsb
shr
loopne
outsl
mov
stos
inc
filds
push
inc
sbbb
imul
push
mov
and
or
sbb
out
xor
inc
mov
in
shrb
int3
sub
inc
shl
aam
fiadds
lods
sub
cmp
fcom
and
ja
push
and
hlt
pop
inc
sub
out
cmp
xchg
inc
push
enter
mov
ja
nop
iret
jmp
add
xor
in
mov
add
das
jb
mov
popa
nop
shr
cmc
mov
aas
fnsave
add
scas
push
jmp
mov
popa
mov
movsb
les
mov
jg
pop
pop
ret
test
stc
repz
and
in
cmpsl
xor
mov
lret
cmp
scas
imul
mov
lods
mov
xor
out
insl
sbb
add
hlt
cli
jmp
mov
gs
bound
mov
neg
add
stc
int
out
push
and
es
scas
loop
push
cs
adc
nop
addr16
out
loop
cld
add
pop
add
and
mov
neg
add
jmp
add
jae
out
add
sbb
pop
mov
and
loope
into
and
pusha
stos
sub
inc
pop
ja
int
ds
dec
clc
into
adc
mov
cli
out
les
sub
dec
in
sbb
pop
mov
jne
sub
enter
push
and
das
pop
pop
pop
sub
or
xchg
orl
je
or
and
dec
xor
dec
aas
pop
dec
sbb
imul
ret
pop
or
push
jmp
add
fsts
sub
lahf
pop
adc
inc
loopne
push
es
inc
in
inc
pushf
mov
fdiv
cwtl
ds
aad
add
adc
mov
test
daa
jecxz
out
sub
repnz
xor
and
jns
sub
or
mov
add
sub
and
mulb
insl
inc
dec
pop
mov
outsl
xor
xchg
pop
push
mov
add
cmpsb
sub
outsl
pop
jnp
fcomps
adc
std
ret
sarb
xchg
imul
jecxz
sarb
push
sub
iret
mov
pop
push
mov
push
dec
ljmp
sub
clc
dec
mov
mov
jmp
inc
test
es
push
ljmp
lcall
ja
in
stc
pop
pop
mov
cmp
add
mov
and
shll
sub
test
dec
jle
push
xor
lcall
mov
push
pop
xchg
pop
fs
call
dec
add
pop
cltd
mov
dec
pop
and
lods
sbbb
jmp
dec
add
aaa
lock
fwait
or
push
je
xor
daa
mov
or
ss
push
rcl
and
in
inc
add
inc
dec
sti
add
jge
test
cmp
dec
jp
loope
pop
pop
std
add
push
mov
and
mov
sub
ret
pop
repnz
dec
movsb
fidivrs
inc
or
mov
lock
inc
mov
push
push
add
dec
rorb
pop
jmp
loope
mov
jno
fisubl
and
gs
mov
pop
stos
lahf
jno
mov
imul
sub
out
xchg
test
pop
pop
mov
xchg
add
push
push
mov
mov
shl
mov
jbe
pushf
jp
rcrl
push
nop
mov
xor
mov
cmp
out
fsubrs
mov
lahf
add
hlt
jnp
push
mov
ljmp
lock
pop
ljmp
gs
hlt
loop
test
add
inc
pop
xlat
dec
and
rol
fcompl
repnz
stos
jns
mov
push
jmp
jge
adc
xchg
push
cs
insb
push
or
mov
pushf
aaa
xchg
inc
xchg
testl
xor
rorl
mov
or
js
or
shl
inc
fsts
mov
ja
mov
insb
mov
mov
dec
das
jmp
shlb
push
inc
jg
jmp
mov
addb
and
js
les
shr
sbb
cmp
cmpsb
and
xchg
pop
lods
dec
pop
sub
mov
sbb
mov
es
xchg
add
push
or
iret
pop
jnp
out
pop
inc
cmp
adc
sbb
mov
dec
add
mov
add
push
mov
ret
movsb
cmp
sahf
gs
adc
test
ja
mov
inc
stos
aas
jae
icebp
lahf
aam
shrb
daa
dec
dec
mov
xlat
sbb
adc
pop
dec
sub
cmp
lahf
xchg
shll
lds
or
jo
pop
out
jns
ja
in
xchg
and
aam
mov
das
gs
mov
pusha
jo
popa
pusha
insb
ret
sbb
pusha
push
sbb
jecxz
popf
mov
inc
loop
push
inc
sahf
je
rol
fcompl
aam
mov
pop
xchg
aaa
scas
mov
jp
mov
jne
inc
sbb
push
and
repz
lret
adc
mov
loop
sub
in
mov
inc
movsb
jmp
inc
gs
test
sub
movsb
cmpsl
add
sbb
pop
aas
aas
adc
add
mov
cmpsb
push
pop
cmp
mov
push
sub
push
jp
xchg
or
or
pop
lret
xlat
inc
in
aam
stos
sbbl
test
dec
inc
loope
ret
loop
lahf
or
or
sbb
or
shll
sub
dec
and
push
shll
in
fwait
xchg
cmp
pop
mov
pusha
ljmp
inc
aam
adc
xor
xchg
jbe
mov
sbb
jmp
xlat
roll
movsb
addl
jmp
push
or
mov
mov
cmpb
dec
or
bound
jmp
repz
push
les
aaa
mov
or
inc
shl
fs
jge
cld
mov
aas
adc
jb
xor
pop
add
negl
pop
ja
xchg
pop
in
test
mov
mov
lds
call
gs
call
adc
inc
adc
sub
scas
lods
add
enter
push
ja
mov
mov
clc
imulb
pop
pop
out
daa
repnz
out
jbe
pop
sub
test
push
scas
popf
mov
xchg
pop
mov
pop
and
lock
fsubl
jmp
mov
sub
add
pop
fildll
inc
sub
ljmp
rcrb
push
ret
xor
cltd
dec
jmp
dec
test
inc
test
hlt
push
cmc
cmp
ret
push
inc
test
sub
jnp
std
xor
stc
dec
pop
stos
insl
mov
outsb
jg
lods
icebp
clc
xor
dec
jmp
cltd
mov
subb
insl
fmull
repz
pushl
jmp
out
mov
call
push
or
lret
add
ret
adc
pop
sub
and
inc
nop
out
and
cmp
pop
xchg
mov
pop
jmp
stos
sub
sbb
mov
fnsave
lods
movsb
test
cmpsl
inc
rolb
hlt
adc
inc
mov
sbb
inc
sarl
push
in
inc
into
or
jle
or
push
test
add
ljmp
pop
and
xchg
decb
and
sbb
or
out
jle
jecxz
add
push
xor
mov
ficompl
adc
int
cld
sub
pop
mov
enter
adc
imul
adc
jmp
xor
xchg
call
jb
data16
jle
js
pop
lods
sub
mov
add
or
lods
fstl
mov
ret
scas
mov
das
pop
repz
jge
push
jmp
or
jns
inc
scas
mov
or
fmull
mov
add
xor
call
cmp
pop
dec
scas
lcall
dec
jle
mov
stc
js
add
xchg
inc
pop
jmp
jle
sub
hlt
mov
xor
or
ds
xchg
testb
or
orb
push
das
sub
inc
push
pop
push
lea
adc
mov
adc
fucomi
mov
dec
imul
sti
pop
ja
jbe
and
add
push
in
notl
and
inc
ja
and
inc
pop
xchg
jo
xor
mov
jae
les
andb
xchg
push
fdivp
out
or
bound
push
mov
stos
not
sub
and
ret
hlt
push
call
push
or
cli
das
or
xchg
and
pop
or
push
fwait
or
add
pop
push
bound
aam
lahf
roll
dec
sub
fsubr
jno
adcl
add
push
or
and
sub
nop
fistl
and
adc
inc
sbb
std
shr
dec
neg
pushf
aam
jno
mov
jbe
and
sub
roll
add
sbb
sub
ret
or
jmp
aam
repnz
enter
adc
sub
cmc
js
add
push
mov
add
inc
or
pusha
jl
out
rcrl
add
rcr
or
mov
mov
dec
xor
xor
mov
pusha
dec
cs
dec
popf
fadds
jmp
jae
ja
sub
lret
xor
addr16
jmp
movb
shl
imul
loop
fisubs
inc
jmp
pop
and
and
dec
cmp
subb
add
out
xor
mov
xchg
pop
fisubrl
fs
or
add
mov
jo
dec
push
lods
adc
and
or
push
mov
hlt
dec
jp
jno
shr
das
imul
dec
push
loopne
xchg
sub
fcoms
jne
sbbb
add
or
add
push
cmp
dec
mov
mov
xor
fcomp
rcl
cmp
jmp
pop
sub
and
cmpsl
inc
xchg
sti
fmull
cmp
stos
lods
scas
mov
loopne
mov
bound
xlat
inc
div
mov
and
inc
xor
jbe
pop
fadds
jbe
dec
and
lcall
stc
and
adc
mov
inc
xor
xor
mov
aam
into
sbbb
fnsave
and
sub
sbb
and
jge
sbb
shl
cmpsl
pop
arpl
or
roll
mov
and
dec
mov
jge
dec
mov
jmp
loope
pop
orb
sub
cmp
sbb
dec
xor
inc
js
fisubl
or
cli
xchg
xchg
call
jb
sub
inc
xor
hlt
fimull
les
xchg
cmpb
popa
xchg
out
int
popa
push
mov
not
cwtl
addr16
imul
jno
dec
push
pop
dec
ja
repnz
incl
and
mov
imul
and
mov
jmp
popa
int3
sub
ret
ficoml
inc
popf
loop
push
mov
fs
addl
incb
mov
mov
add
sbb
inc
packssdw
push
mov
sub
loope
and
loop
push
xor
mov
fstl
jl
mov
push
or
lds
outsb
push
sub
push
sbb
enter
sub
fcoms
sub
jo
addr16
mov
dec
rolb
xchg
test
push
cmp
imul
and
add
adc
mov
push
pushf
std
popf
lods
xchg
aad
add
dec
xchg
adc
dec
ret
xchg
adc
sub
mov
or
xor
cwtl
push
cmp
or
mov
shrl
pop
daa
jg
test
gs
jp
dec
scas
or
pop
jl
bound
xlat
mov
adc
mov
jbe
mov
outsb
je
test
or
jmp
fsubs
mov
mov
daa
pop
mov
push
xchg
and
and
stos
push
mov
pusha
std
daa
or
aaa
bound
nop
push
inc
ja
push
jg
adc
out
inc
cli
shr
shll
mov
das
addb
xor
sbb
mov
jb
sub
mov
loope
andb
dec
rclb
jo
jp
or
xor
lahf
loope
push
aas
nop
dec
ret
cmp
or
pop
sbb
pop
sub
sub
add
repnz
mov
xchg
rclb
pop
add
cmp
out
and
sbb
shlb
loop
adc
inc
lock
mov
fiaddl
sub
and
jmp
pop
js
mov
adc
sub
imul
sbb
xor
out
insl
inc
xor
add
sbb
adc
jmp
push
and
imul
push
mov
hlt
bnd
xor
push
or
cmpsb
in
mov
arpl
pop
cmp
jle
or
jbe
xor
pop
sub
es
add
mov
jmp
and
rcrl
mov
pop
stc
mov
add
jge
fildll
mulb
jo
adc
jmp
pop
in
xchg
jmp
xchg
icebp
jmp
lods
add
push
in
sub
fwait
push
enter
andl
jae
pusha
push
push
jbe
sahf
pop
leave
in
daa
jge
mov
jne
cmp
or
stc
notb
stc
or
push
cmp
in
inc
or
in
andb
push
xor
pop
out
or
nop
pop
push
in
and
sbb
add
pop
fidivs
cmp
lea
dec
sub
lock
pop
push
mov
inc
jmp
sub
dec
jno
inc
adc
fwait
lods
fdivr
insb
xchg
sub
jmp
aad
xchg
add
add
xor
movsl
pop
btr
orb
dec
lea
cs
addr16
lret
inc
adc
push
dec
pop
icebp
add
push
add
xchg
mov
or
popa
aaa
add
pop
xor
in
and
cltd
aad
push
mov
cmc
cmpb
outsl
pop
dec
jnp
aad
sub
pop
and
aam
and
jno
imul
jge
shlb
or
mov
jmp
mov
push
clc
pop
xchg
sub
jg
push
push
cmp
sub
sub
mov
fidivl
cmp
or
bound
add
jmp
cmp
mov
sarb
test
jg
inc
or
pusha
inc
inc
xchg
pusha
sbb
sub
jle
or
lds
cmp
sti
insb
pop
sub
bound
lock
add
sbb
mov
je
dec
or
bound
pop
loop
pusha
add
imul
sub
sub
pop
mov
jbe
cmp
cmp
or
lods
jne
mov
scas
sub
lcall
pusha
lock
dec
pop
sbb
ds
fldl
push
dec
push
mov
mov
out
pop
out
out
mov
std
stos
daa
xchg
das
fidivl
ds
cmpsl
rorb
inc
add
stos
bound
fbld
mov
push
pop
push
mov
fwait
repnz
movsb
and
into
roll
cvtps2pd
mov
pop
pop
shlb
inc
aad
mov
decl
pop
mov
push
adc
dec
ret
xor
jo
mov
out
push
mov
orb
scas
out
push
add
push
gs
ds
sbb
shlb
dec
push
roll
jle
and
and
ret
imul
sub
add
push
outsb
push
lods
test
loope
cmp
pop
pop
mov
ret
jp
jg
in
cmp
dec
movsb
pop
call
fidivrs
clc
repnz
cmp
push
clc
adc
jecxz
jne
adc
sbbb
mov
dec
inc
sbb
mov
mov
testb
mov
mov
cs
lahf
cmp
mov
out
sub
in
fisttps
in
add
or
push
enter
xchg
insb
test
push
lret
or
outsl
pushf
sub
data16
xor
cmpsb
mov
orb
pop
loopne
cmc
lahf
out
mov
or
outsl
cwtl
pop
popa
cwtl
jmp
or
mov
loope
xor
push
push
xchg
jl
ret
pop
icebp
js
sub
or
mov
adc
movsl
add
mov
xchg
cmp
push
daa
pop
mov
inc
popf
ret
and
mov
sub
adc
add
sub
inc
jge
jb
pop
and
shll
inc
push
faddl
xor
xor
cmp
xchg
cld
clc
outsl
mov
aas
and
dec
xor
adc
sbbb
or
push
out
es
das
or
es
xchg
outsb
inc
or
fildll
sarb
add
aas
xchg
ds
rcr
add
cmp
dec
iret
ret
aaa
loop
aam
mov
repnz
cs
mov
mov
mov
sbb
clc
mov
ss
push
dec
xchg
push
jl
adc
outsl
pop
pushf
addr16
xchg
push
mov
mov
and
xchg
outsl
stos
dec
add
es
lods
and
divb
push
adc
adc
dec
lock
jle
sub
fcoms
ret
jmp
std
mov
mov
lahf
and
push
dec
pop
push
jmp
sahf
push
xchg
xchg
loope
push
cmpsl
cmp
mov
dec
hlt
cmp
xchg
pop
cltd
adc
lret
mov
inc
mov
inc
sub
ficoml
test
ret
pop
push
jmp
pop
push
jl
push
and
aam
gs
test
pusha
stc
in
cmc
and
add
push
mov
dec
add
dec
stos
fldenv
dec
xchg
pop
repnz
pop
xor
or
xor
mov
lock
sub
and
lea
cmp
filds
dec
imul
pop
mov
cmc
inc
and
and
inc
test
or
daa
push
pop
jecxz
loopne
jmp
mov
movsl
or
xchg
push
mov
adc
cwtl
sub
mov
nop
push
popf
add
ret
mov
pop
lods
add
jo
cmc
dec
mov
stc
decl
fsts
push
xchg
jmp
add
bound
adc
fnstcw
jl
xchg
pop
mov
shll
push
mov
jo
mov
inc
sbb
ja
dec
lahf
loopne
add
mov
or
xor
cli
test
cmp
xor
push
sub
pop
bnd
dec
pop
loopne
fsubrl
sbbb
pop
or
dec
xchg
repz
adc
loop
or
push
imul
pop
and
int
jmp
xchg
jmp
test
ss
jmp
lret
addr16
xor
jno
push
push
data16
add
cmpsl
sub
pop
inc
movsb
and
jmp
dec
pop
test
mov
sub
jnp
jmp
fists
adc
add
out
push
mov
jp
pop
pop
fisubrl
mov
rolb
mov
push
neg
push
jo
add
inc
cmp
sub
sarl
mov
jg
fs
jmp
pop
inc
jb
inc
out
stos
cwtl
into
cmpsl
pop
test
push
flds
pop
fwait
gs
in
leave
inc
cmc
sub
gs
sbb
fisttps
xor
jno
fsubl
cmc
jne
cmp
and
mov
aad
add
sti
mov
push
cwtl
cmpsb
pop
mov
rclb
repnz
nop
cwtl
ljmp
xchg
enter
dec
test
je
ret
mov
xor
push
push
pop
in
sub
xor
lds
mov
js
push
mov
push
aaa
mov
cmp
cli
repz
hlt
sbb
popf
fs
xor
leave
aam
daa
test
ds
stc
jne
in
call
lds
mov
pop
jno
pop
push
sbb
ret
daa
lret
repnz
xlat
jns
imul
mov
add
sub
lock
mov
push
iret
test
lock
ja
mov
insb
pop
daa
dec
adc
inc
cmc
sarb
jae
jns
adc
jb
mov
std
push
sbb
inc
push
xor
dec
inc
or
adc
mov
inc
iret
and
outsl
in
dec
es
mov
inc
pusha
jle
rclb
je
lret
and
mov
jbe
test
jl
xor
dec
shrb
pop
push
push
sahf
and
adc
ret
sbb
ss
xchg
sbb
sbb
cmpsb
push
pusha
sub
push
mov
mov
pop
or
fisttpl
mov
adc
cmpsl
lahf
imul
mov
test
cwtl
pop
call
dec
mov
push
cmp
xor
or
gs
push
adc
pusha
pop
pop
pop
shl
jo
pop
xchg
test
scas
mov
push
add
pop
mov
daa
inc
jg
adcl
jge
and
icebp
lahf
popa
push
pop
cmpsl
mov
or
and
daa
repz
adc
call
popf
push
jle
or
cmp
sub
mov
add
pop
sub
jmp
push
xchg
lds
jg
inc
ja
push
mov
cmpsb
mov
test
repnz
outsl
push
test
or
add
jae
sarl
mov
mov
or
cld
lock
add
out
dec
cmp
es
dec
inc
lods
sub
fistpl
movl
add
aam
test
mov
sub
out
xorb
test
shll
xor
and
js
mov
insb
mov
bound
push
mov
jnp
call
scas
stc
inc
cmp
push
stos
push
out
cmpb
and
push
ja
test
dec
sub
sbb
jb
jl
cmp
or
add
pop
cwtl
mov
adc
or
dec
outsl
pusha
popa
and
jmp
push
mov
rorb
lds
pop
lds
pop
stos
xchg
jmp
and
repz
cmc
movsl
bound
add
shl
neg
sarl
movsl
jne
xor
xor
stos
ja
xor
in
cli
lds
stos
repnz
icebp
jg
push
ret
stos
sbb
xchg
loopne
inc
popf
js
mov
xor
sub
loop
push
jg
mov
insb
adc
rorb
inc
sub
and
push
cs
add
pop
andb
mov
push
xor
dec
cmp
or
out
notb
fneni(8087
add
ds
sbb
dec
sub
jecxz
pop
pop
inc
jmp
add
sub
add
into
sbb
andb
or
add
in
and
imul
xchg
sbb
sub
movsb
cmp
aam
cmp
and
mov
push
inc
adc
mov
lcall
pusha
jmp
add
pushf
addr16
push
repnz
jecxz
or
xchg
inc
outsb
neg
sahf
push
add
stos
in
pusha
outsb
mov
add
xor
sbb
std
fcomip
jne
movsl
jg
push
mov
ret
jge
aam
adc
clc
insl
adc
cmp
xor
nop
cld
pop
xor
aaa
dec
or
jmp
aas
sub
adc
movsb
js
add
add
shl
push
mov
xchg
or
jmp
lock
lret
mov
or
add
or
daa
xorb
mov
pop
xor
cmp
sub
inc
std
mov
jne
adc
jmp
daa
pop
mov
xor
neg
sub
outsl
pop
ds
add
push
loope
movsl
aas
out
adc
push
push
test
sub
int3
insb
cmp
pop
insl
jns
sarl
inc
out
dec
xor
aaa
daa
and
call
or
shr
das
icebp
xchg
in
imul
xor
and
repnz
mov
mov
sub
jmp
ret
sbb
push
lock
hlt
in
fs
push
mov
mov
es
pop
inc
xor
mov
mov
sbb
movsl
outsb
or
push
push
mov
not
mov
notl
mov
aad
cli
pop
push
xchg
mov
ftst
sti
mov
daa
imulb
and
cwtl
adc
xchg
inc
je
push
cmpsl
mov
lretw
and
shrl
aas
push
data16
repnz
or
add
dec
jns
mov
stos
test
repz
sbb
inc
cmp
inc
enter
jl
scas
inc
push
inc
addr16
lods
or
push
imul
sbb
jmp
push
movsl
rolb
pop
movsb
test
cmpsb
sub
aaa
jmp
testb
jecxz
jbe
ret
and
aas
scas
cli
dec
icebp
lock
jg
push
xlat
xchg
mov
fildll
in
push
cmp
dec
pop
mov
int3
movsb
sbb
cmp
sbbl
daa
jp
pop
aaa
jo
ret
lcall
jmp
lret
push
mov
es
fwait
and
xor
test
and
mov
movsl
sub
arpl
mov
inc
jmp
push
push
lahf
push
dec
dec
je
sub
cs
xlat
mov
dec
shlb
call
mov
jecxz
in
mov
jmp
jmp
dec
push
das
jmp
push
dec
jae
rol
mov
xchg
sub
int3
mov
or
inc
mov
xor
inc
js
sub
inc
or
notb
push
icebp
imul
in
sub
sbb
jmp
xor
and
cmc
or
aaa
loop
sbb
add
es
insb
mov
pop
dec
clc
jl
lcall
xchg
push
mov
nop
ljmp
test
lahf
jno
add
pop
hlt
mov
pop
push
enter
mov
movsb
es
int
pop
jnp
mov
mov
loop
cmp
call
push
cmp
leave
fisubrs
pop
mov
dec
stos
mov
adc
lock
jnp
out
add
push
dec
mov
dec
dec
out
fsubrl
sbbb
frstor
add
xchg
inc
adc
cs
pop
push
mov
test
bound
fsubrl
movb
test
xchg
nop
repnz
rclb
mov
daa
sub
pop
data16
add
xor
call
add
idivb
jmp
movsb
or
lret
shrl
ret
jmp
push
mov
push
sbbb
test
pop
in
cmpb
dec
cltd
movl
or
xlat
mov
fildll
bound
repnz
sub
add
xchg
xchg
jae
push
push
mov
addl
cmp
inc
push
dec
mov
mov
enter
aaa
lcall
sub
lds
inc
nop
or
inc
jge
dec
repz
popf
add
inc
stos
sbb
lea
push
mov
icebp
sub
dec
or
mov
fimuls
add
add
xor
inc
or
xor
or
push
jmp
cld
dec
loop
lret
jns
dec
add
push
mov
orb
and
mov
ret
pop
pop
ljmp
popa
xor
pushw
push
or
jmp
jecxz
add
mov
xchg
jge
mov
lods
jb
scas
adc
outsl
push
dec
aas
xchg
scas
arpl
ds
addl
inc
and
stc
arpl
lahf
ret
mov
xor
hlt
xchg
fucomip
adc
dec
ljmp
push
fsts
test
mov
push
or
ljmp
ja
push
and
push
cmp
push
adc
xchg
mov
addl
jbe
xchg
add
ficompl
stos
sub
push
cmc
pop
sub
sbb
loope
add
scas
sub
loop
clc
ljmp
icebp
lock
arpl
rcrl
rclb
scas
push
loope
sbb
outsb
inc
orl
sbb
cmp
pop
imul
std
shlb
test
fcoms
fsubrs
xchg
jns
xchg
test
lods
adc
jbe
data16
pop
add
cmpsl
pusha
neg
shll
loope
fadds
das
nop
leave
push
push
outsl
fimuls
adc
mov
xchg
rcll
push
lea
leave
adc
daa
mov
scas
lock
and
iret
mov
push
ret
pop
mov
mov
pop
pop
jno
xchg
lret
pop
shlb
adc
add
jae
ret
stc
xchg
cmp
pop
sub
sbb
test
jne
adc
in
rcll
adc
jno
into
aad
adc
sti
mov
push
and
daa
aad
jp
ds
cmp
rolb
mov
movsb
fwait
testb
call
call
adc
sti
shlb
pop
pop
mov
pushf
or
cltd
clc
mov
pop
xchg
cli
pop
add
adc
jmp
push
pop
jo
push
sub
xor
pop
add
jmp
adc
icebp
mov
pop
std
jg
das
scas
lret
roll
stos
loope
push
dec
clc
jmp
dec
mov
xlat
sbb
push
and
adc
jle
movsb
cs
insb
ret
cmp
les
and
jecxz
lods
sub
in
stos
mov
js,pt
jmp
xor
es
sbb
pop
pop
mov
ds
mov
push
cltd
add
jge
sti
jns
in
rorl
fnsave
scas
je
dec
or
fsub
push
dec
jae
mov
cmp
fdivrs
push
lds
dec
sbb
push
xchg
jl
jp
sbbl
add
push
test
mov
out
and
push
adc
jno
aam
loopne
push
mov
mov
add
iret
sbbb
ret
loopne
pop
jne
ds
leave
sbb
jle
out
or
scas
iret
lods
outsl
jb
enter
test
daa
lods
jb
and
push
adc
ljmp
sub
adc
hlt
cmp
pop
mov
xorb
mov
mov
jnp
pop
and
test
orb
int
dec
xchg
cmp
inc
sbb
pop
ds
sub
outsl
sbbl
or
leave
jne
ljmp
mov
pop
aad
add
xlat
test
mov
xlat
scas
cmc
leave
inc
push
mov
leave
sbb
lods
sbb
movswl
pop
push
push
stc
mov
in
hlt
cmc
mov
mov
push
pop
daa
inc
dec
dec
or
jge
and
inc
pop
fcompl
dec
aas
xchg
inc
mov
loope
repz
mov
insb
inc
lods
scas
xor
xorb
or
repz
or
insb
mov
jae
ja
push
call
sbb
pop
mov
xchg
push
scas
adc
push
dec
icebp
mov
inc
lods
push
add
pop
lods
adc
idivl
mov
mov
xchg
add
test
rep
pop
sbb
pop
inc
cmp
or
into
dec
sbb
insb
push
fs
repnz
sub
and
and
sti
jb
jp
xchg
jecxz
sbb
push
test
adcb
add
inc
cmp
dec
lahf
add
neg
rcr
cltd
pop
daa
lods
xor
xor
pop
mov
cmc
and
and
jo
sub
and
cli
jae
cld
jp
inc
xor
push
and
add
xor
or
jmp
pop
jb
xchg
mov
icebp
cmp
stc
arpl
lods
out
or
xchg
and
insb
loopne
mov
das
dec
daa
jbe
andb
cli
sub
pop
pop
testb
dec
repnz
lret
rcrb
add
insb
adc
inc
cli
add
popf
push
dec
inc
inc
lret
cltd
pusha
pop
or
push
ficoms
and
mov
mov
cmp
shlb
pop
xor
sub
clc
test
sub
inc
scas
push
ljmpw
xlat
pop
push
dec
mov
nop
ja
gs
adc
cltd
sti
arpl
fstpl
scas
lret
push
mov
out
adc
test
pop
mov
push
jbe
lods
jl
xchg
pop
scas
add
test
mov
adc
or
and
jmp
ror
aas
jbe
push
jecxz
push
adc
pop
sbb
sub
cmp
enter
push
pop
dec
cmp
insb
jae
push
imul
mov
jmp
push
add
mov
aam
push
aam
dec
loopne
adc
repz
movsl
loop
jge
inc
sub
cmp
sbb
adc
out
shll
add
inc
stos
mov
adc
cwtl
xchg
call
push
xchg
mov
loop
aad
rol
loopne
call
pop
adc
mov
or
cmpsl
jl
movsl
pop
mov
pop
ret
or
outsb
test
pop
dec
cld
sbb
mov
pop
sbb
push
iret
pop
test
mov
add
push
lret
insb
adc
in
pop
dec
test
add
inc
sarl
cmp
xchg
jbe
pop
sub
stc
sub
rcll
mov
dec
add
adc
push
jmp
shrl
pusha
and
popf
movsl
push
fdivrl
sbbb
or
adc
test
mov
sbbb
outsl
or
mov
ja
fwait
imulb
jg
popf
fs
mov
hlt
jecxz
sbb
mov
ds
push
in
mov
test
mov
adc
pop
adc
rep
nop
and
push
cli
pop
dec
movsl
in
out
jne
inc
and
sbb
inc
pop
or
ljmp
pop
cmpsb
insb
push
push
mov
shll
aas
popa
xchg
push
int
push
push
inc
pop
sub
dec
inc
add
xor
cmp
dec
movsb
nop
call
outsb
insb
fists
push
gs
fadds
fs
dec
pop
add
jnp
cmc
mov
and
push
je
das
jbe
jge
sbb
mov
fcoml
inc
mov
pop
cld
and
xchg
sarl
outsb
mov
call
test
jmp
or
pop
pop
ds
mov
add
pop
inc
iret
jne
mov
iret
out
push
push
and
nop
movsl
or
dec
js
popf
dec
ljmp
xchg
ret
cli
subl
inc
ljmp
jge
shl
xor
push
jb
sahf
xchg
lcall
jp
imul
inc
clc
je
std
xor
push
add
push
adc
repz
mov
mov
loopne
sub
cld
mov
mov
out
or
jns
lock
add
jecxz
adc
test
cmpsb
insb
and
pop
pushf
sbb
repz
cli
push
inc
pusha
pushf
pop
data16
test
pusha
int
pop
xchg
bound
pop
into
cwtl
das
sub
inc
add
push
xchg
or
pop
dec
inc
fidivrs
sub
jmp
into
dec
stc
jg
adc
xlat
pop
xchg
andl
out
cmp
rcl
jmp
fcoml
jns
mov
rolb
cmp
jbe
jmp
or
popa
js
mov
sub
cmp
jae
jmp
icebp
mov
insl
loope
enter
sub
aas
cmc
outsb
cs
adc
adc
shll
or
out
xchg
pop
mov
add
add
test
mov
inc
adc
stos
orb
stos
jo
dec
push
or
jecxz
add
adc
rorb
outsb
mov
mov
xor
ds
dec
lods
int
imul
call
sub
cs
lds
cmpb
push
adc
dec
and
sub
rcl
adc
and
rorl
cwtl
xor
mov
out
sub
mov
mov
inc
inc
inc
xchg
adc
sub
decb
adc
inc
cmp
push
sbb
pop
sub
and
data16
scas
mov
or
jo,pn
sbb
cmp
cs
addb
stos
push
pop
clc
pop
and
xchg
jg
movsb
adc
mov
fstps
fnsave
jmp
std
cli
dec
sahf
xchg
fsubs
fsubr
outsl
sub
sub
ds
sub
push
leave
fsub
xor
lds
rol
or
popf
shll
cmpsl
push
aas
mov
xor
xchg
jne
iret
push
mov
ljmp
je
adcb
pop
into
add
popf
jns
pop
mov
shrl
adc
arpl
lock
sub
mov
adc
mov
mov
mov
adc
test
nop
stc
icebp
jo
jo
mov
adc
push
lock
sbb
cmp
jo
add
fiaddl
scas
and
and
outsl
dec
push
int
jg
or
jns
ret
cmpsl
jnp
fldenv
outsl
jae
jmp
mov
add
aaa
jb
test
lock
mov
in
call
adc
mov
shl
mov
pop
push
and
subb
mov
cwtl
adc
dec
in
pop
add
add
sub
jne
ljmp
mov
or
gs
jbe
pop
add
insl
jmp
or
call
mov
sub
adc
das
adc
or
jmp
lret
adc
jmp
nop
xchg
aas
push
das
xor
xchg
mov
ljmp
inc
xor
arpl
push
and
movups
inc
pop
push
in
jp
pop
jle
add
pop
adc
call
xor
xor
orl
out
mov
adc
push
add
popa
filds
mov
mov
clc
xor
movsl
jbe
adc
js
imul
xor
add
icebp
push
outsl
test
pop
stc
dec
mov
and
or
jno
mov
dec
push
gs
packuswb
or
lds
inc
clc
sarl
jle
or
imul
inc
mov
or
sbb
or
cmp
sbb
or
hlt
add
loope
xor
pop
lock
pop
inc
xchg
frstor
and
inc
xor
imul
nop
aas
dec
addb
push
imul
push
mov
push
push
int
dec
mov
aad
adc
jmp
fdivl
pop
jmp
testl
add
scas
or
jne
in
pushl
out
lret
xchg
jg
add
push
mov
sarb
fcoml
lock
jbe
jmp
xchg
push
jmp
or
push
mov
in
add
hlt
mov
lret
std
frstor
fildll
add
mov
outsl
and
pop
das
add
add
imul
add
or
xchg
inc
jecxz
adc
mov
neg
jbe
or
imul
mov
es
add
add
out
mov
shrb
jne
pop
cs
test
test
lock
clc
arpl
sub
sub
and
jne
loop
dec
sahf
ret
xchg
repz
scas
scas
mov
adc
addb
insb
or
push
mov
sub
mov
sbb
adc
notb
fsubrp
sbb
xchg
sub
imul
xchg
mov
push
popf
mov
push
aas
push
lods
pushf
stos
or
mov
bound
mov
data16
aam
jns
sub
jmp
gs
cmp
xor
out
cmp
mov
sbb
cld
movb
xor
push
fbstp
cli
inc
jo
inc
and
aas
nop
lcall
leave
sub
addb
xor
test
and
addr16
mov
push
push
popa
aaa
pop
in
pop
adc
sub
gs
cmp
mov
ja
jmp
jmp
inc
push
jg
pusha
mov
push
les
jp
inc
icebp
xor
loop
std
push
inc
xchg
add
lret
adc
push
lds
mov
out
test
xchg
lahf
pop
pop
popa
ret
adc
or
bound
sarl
ret
mov
call
cmc
mov
bound
nop
xchg
test
xor
xor
xchg
es
xchg
stc
jb
stos
neg
enter
sub
inc
mov
jp
lret
orl
dec
fnstenv
loopne
cld
in
mov
xchg
push
cmpsl
or
repnz
cmc
xchg
loop
in
hlt
mov
ja
outsb
outsb
and
cs
out
in
mov
cmp
xchg
and
add
jo
sahf
xorb
xchg
cmpsl
add
int3
cli
inc
sub
or
sub
pop
add
jmp
jecxz
add
or
or
mov
push
fst
outsl
clc
cld
jnp
test
push
mov
xlat
and
jne
push
mull
adc
out
ficoml
jmp
loop
mov
or
jg
pop
popf
mov
or
cmp
outsl
faddl
adc
ret
add
filds
pop
nop
repnz
lahf
mov
mov
or
add
jle
or
not
jmp
pusha
push
mov
out
sbb
mov
repz
and
sub
add
mov
clc
add
dec
dec
pop
mov
andl
sbb
cmp
pop
ficompl
xor
das
ljmp
dec
out
shll
dec
xor
push
mov
jmp
push
jmp
hlt
mov
sar
shl
jmp
or
push
stos
add
jle
sbb
pop
xchg
pop
mov
jmp
push
sbbb
jl
cli
int3
or
add
dec
jmp
rorb
mov
in
push
push
dec
insb
es
lods
sbb
jmp
adc
divl
add
sbb
pusha
mov
out
jmp
cwtl
adc
icebp
mov
aad
cmp
sub
aad
loopne
hlt
inc
mov
or
xchg
push
sub
test
cmpsl
sub
sub
mov
mov
xchg
xor
es
or
lods
dec
iret
mov
push
cwtl
inc
stos
aam
pop
lcall
shll
pop
fidivrs
pop
mov
in
nop
dec
pop
ljmp
push
stc
out
dec
and
adc
push
jmp
adc
sub
imul
test
mov
popf
pusha
adc
add
jmp
fucomi
cmp
leave
test
incb
xchg
pop
or
push
push
mov
inc
fcomps
in
push
pop
and
adc
out
cs
push
pusha
and
adc
roll
test
xor
jmp
add
add
in
out
jbe
daa
testl
pop
push
dec
push
mov
mov
mov
jp
test
inc
mov
push
sub
and
pop
fld
les
sbb
jae
cmp
add
idivb
sbb
xchg
ja
jg
mov
sbb
mov
int3
push
pop
mov
fdivr
push
negb
incb
push
adc
dec
dec
mov
das
dec
or
das
cli
push
repnz
icebp
loopne
jle
push
xor
ret
xor
push
sbb
imul
loop
call
mov
leave
xchg
arpl
in
adc
sbb
addr16
loopne
or
ds
mov
inc
ret
jb
push
jle
imul
sbb
pop
or
jecxz
inc
mov
add
addb
aad
dec
repnz
add
or
mov
push
dec
insb
fisubs
addr16
pop
lahf
rcr
lds
mov
mov
cmp
xchg
ret
testl
and
lds
cmpb
xor
and
and
and
loopne
xchg
push
dec
add
mov
das
ret
repnz
jge
lock
adc
jo
std
mov
jae
xchg
cmpsl
add
or
or
jmp
call
adc
xchg
or
ljmp
into
push
add
aad
out
ret
je
cmp
sub
mov
call
repnz
loope
fiadds
mov
or
jl
jmp
sub
addr16
xchg
nop
daa
push
cmpsl
cmc
adc
cwtl
xchg
jl
andb
or
add
popa
jns
or
mov
outsl
jge
push
movsl
ss
jmp
xchg
mov
repz
xchg
and
or
xor
insb
jge
mov
xchg
and
add
nop
add
int3
cwtl
and
inc
fmuls
inc
push
jmp
in
xchg
push
pop
xchg
les
xchg
or
jecxz
ds
outsb
mov
lret
sub
insl
and
jmp
and
inc
sbb
cmp
jg
or
mov
dec
loope
aad
fisttpll
and
decl
clc
pop
pop
fnstcw
dec
sub
and
test
xorb
cmp
testl
leave
jns
push
int
sti
ret
adcb
lock
movsb
jmp
jmp
or
mov
push
pop
lock
dec
in
bound
xor
lds
movsl
ret
xlat
int3
jp
inc
add
addr16
imul
dec
fistpll
cs
movsb
mov
push
shl
mov
in
jne
popf
out
js
hlt
jae
iret
lods
jo
push
jmp
shr
rcl
mov
popa
xchg
and
scas
sub
aas
insb
cmp
insb
outsb
add
mov
icebp
fsubrs
cld
loope
push
pop
out
popa
sbb
cltd
test
xchg
dec
ret
mov
or
out
not
sub
je
add
js
outsl
cmc
pusha
cwtl
dec
adc
lret
inc
push
arpl
lds
dec
rolb
sub
jb
cmp
shrb
clc
scas
cmc
sub
mov
pop
push
ret
lcall
pop
add
outsb
lock
add
adc
adc
xlat
test
call
ret
scas
leave
test
push
pushf
das
pop
popa
sub
xor
inc
cmp
mov
sub
and
pop
rcr
cmp
or
push
test
add
add
call
aad
jmp
inc
test
jle
out
sub
jae
xchg
std
mov
jmp
add
jle
gs
mov
push
dec
loopne
jmp
lahf
leave
adc
loopne
movsb
das
dec
inc
shl
xor
jp
or
outsl
pusha
xor
lds
ret
push
push
dec
mov
add
sub
mov
lods
pop
scas
lahf
ficompl
mov
jl
xchg
mov
or
pop
jmp
daa
jne
stc
push
pop
daa
push
sbb
inc
sbb
cmc
cmp
push
push
add
dec
scas
ret
cwtl
cmp
push
pop
loop
pop
out
pmulhw
repnz
mov
mov
pop
pusha
push
sahf
lret
mov
add
repnz
mov
jnp
mov
movsb
mov
sbb
shrb
das
movsb
js
jmp
push
js
mov
nop
pop
jno
push
push
dec
das
mov
jbe
xchg
jae
or
or
insl
or
cmp
push
into
stos
cmpl
sub
pusha
out
jp
xchg
xchg
jl
jb
jl
xor
pushf
jo
xchg
repz
addr16
out
es
add
lahf
add
add
cmp
cwtl
sysexit
dec
addr16
jge
es
jmp
fistpll
and
push
lcall
ss
push
adc
push
jp
insb
in
popa
or
sub
sub
pop
outsl
inc
or
xchg
int3
rcrl
in
or
jl
push
data16
xchg
lds
add
mov
cmpb
fnstenv
or
pop
and
lret
jb
jl
and
dec
sub
sub
dec
test
adc
or
rcl
add
std
jne
idivb
stos
das
pop
jno
add
add
mov
jno
xchg
shrl
and
out
push
add
push
mov
das
add
inc
dec
fbld
shr
jmp
ret
sbb
bound
fcmovne
aam
fs
xchg
adc
stc
cmc
daa
mov
cwtl
add
nop
fnstenv
outsl
std
and
mov
inc
xchg
pop
push
loope
stos
push
fisttpll
pop
mov
pop
xchg
and
repnz
pusha
jg
ret
pop
cmc
xor
std
imul
push
shll
adc
daa
jmp
sub
jne,pt
in
sbb
hlt
cs
dec
add
movsl
jl
daa
xchg
or
sub
push
jnp
xchg
mov
stos
and
and
pop
cwtl
insb
and
and
mov
pop
xor
pop
in
icebp
mov
not
leave
pop
push
dec
aad
lcall
popa
and
lods
sbb
xor
pop
pop
cld
and
add
push
push
add
pop
rolb
shrb
push
push
pusha
xchg
dec
jle
stos
push
mov
testb
test
data16
or
mov
and
cli
insb
roll
and
andl
jmp
add
add
std
pop
lds
stos
mov
or
pop
popa
addr16
test
sub
aam
sbb
sbb
adc
in
xchg
push
mov
lret
pop
aas
in
es
daa
or
icebp
sub
push
and
inc
jle
xor
enter
insl
cs
movsl
or
jae
and
ret
xchg
push
add
xchg
in
push
xchg
add
fldt
mov
or
clc
enter
jmp
ret
push
je
shrl
mov
mov
stos
adc
pop
pop
cmpl
fdivp
imul
push
ror
push
add
xor
leave
out
adc
dec
imull
xchg
popa
jmp
repz
mov
and
movups
pusha
jp
ljmp
sarl
cs
aad
scas
pop
adc
sar
xchg
pop
int
sub
cmpsl
cmc
push
stos
lret
mov
sub
adc
dec
mov
lods
jp
roll
das
in
ret
push
mov
add
sbb
loope
jnp
mov
adc
imul
sti
or
jne
divps
push
addr16
jp
mov
lret
pop
xchg
mov
sbb
push
inc
seto
inc
out
sub
push
popf
ja
push
adc
hlt
push
inc
adc
or
fadds
notb
divb
jno
xor
jg
xchg
mov
sbb
not
xchg
fldl
push
inc
xlat
cmp
mov
sbb
fnsave
jl
add
inc
movsl
das
sub
cmp
cld
nop
mov
pop
sub
and
jbe
call
frstor
cmpsl
xchg
mov
pop
test
insb
jo
sbb
push
scas
xlat
stos
enter
cs
sbbb
mov
push
cld
push
or
movsb
movb
mov
rclb
addr16
push
xchg
outsl
movsl
inc
inc
push
in
imul
mov
sub
sub
mov
sub
pop
mov
ret
scas
mov
add
pop
sbb
fcmovbe
or
adc
jnp
clc
mov
and
mov
or
pop
push
fcmovnb
pop
pop
scas
sub
mov
out
dec
pop
push
lods
dec
ja
dec
pop
lahf
negb
decb
push
sub
jg
xchg
fistl
lods
push
fstps
iret
das
xchg
xor
loopne
lods
xlat
test
mov
add
add
add
in
pop
loop
pop
inc
stos
ss
loopne
jl
dec
mov
and
cmpps
repnz
mov
xor
dec
mov
popa
xor
push
or
clc
shl
in
pop
xchg
in
mov
jbe
out
lret
jmp
dec
xchg
mov
ret
push
aas
jo
lahf
gs
movsl
call
pop
push
jmp
jbe
mov
cs
adc
insl
pop
add
add
xor
cld
sbb
push
jne
js
mov
dec
call
call
jmp
repz
in
into
add
cld
xor
and
outsb
int
cmp
roll
lret
scas
mov
jne
loop
mov
or
adc
testl
popa
pop
ret
add
cmp
lret
pop
mov
jmp
cmpl
and
and
add
rorl
adc
or
jbe
xchg
inc
or
out
push
jmp
jns
aas
add
sahf
pop
xchg
xor
lock
fwait
pusha
int
ja
test
xor
jmp
jno
dec
mov
sub
imul
mov
dec
fsubrl
test
cld
imul
xchg
jge
inc
test
push
dec
cmp
sarb
mov
adc
loopne
ror
out
jle
add
je
mov
jmp
and
nop
jge
dec
jb
dec
pop
sbb
and
push
push
pop
jle
aas
ljmp
mov
test
mov
pop
jae
jmp
ljmp
push
or
or
jmp
mov
adc
mov
push
push
dec
lods
movsb
stos
push
data16
imul
repz
sub
cmpsb
jo
cmp
add
push
dec
sbbb
pusha
clc
loope
dec
mov
nop
rolb
pop
add
sub
xor
lahf
in
mov
mov
pop
push
mov
daa
iret
ljmp
push
push
test
loop
in
je
repz
push
dec
leave
jl
push
ja
push
pop
push
iret
sub
mov
call
arpl
into
lahf
sbbb
jp
mov
call
pop
inc
pushf
adc
dec
dec
loope
fdivrs
ficoml
add
fiaddl
pop
mov
jmp
notl
dec
cld
pop
rcll
jne
cmp
mov
adc
xor
xlat
mov
pop
lods
call
push
mov
jecxz
push
rcl
mov
push
xchg
pop
mov
xchg
inc
nop
xor
sub
das
sarb
lret
xor
push
or
sbb
push
xchg
push
add
fdivs
jmp
push
push
stos
rorb
test
aas
fcomps
mov
inc
mov
jbe
pusha
jo
fucom
mov
mov
shrb
clc
and
sbb
inc
daa
aam
data16
jecxz,pt
add
add
hlt
faddl
idivl
mov
aam
adc
popa
push
sbb
jo
hlt
adc
es
and
xchg
adc
dec
xchg
sbbb
gs
nop/reserved
push
sbb
or
mov
or
test
or
call
push
mov
rclb
push
and
sbb
lea
fstps
pop
add
sub
adc
ljmp
mov
aas
adcb
or
and
add
lods
jmp
pop
jb
mov
add
sub
mov
jns
test
mov
jecxz
inc
push
in
add
loop
daa
jmp
out
cmpsb
xchg
pop
ja
push
fwait
jbe
add
test
push
or
fimuls
int3
jg
add
mov
sub
loopne
daa
and
fists
and
and
es
roll
adc
and
xchg
nop
rdtsc
insl
out
jne
iret
gs
adc
test
cmp
add
loope
inc
push
cld
enter
add
sarl
add
hlt
outsl
stos
repz
ja
mov
ret
push
test
mov
cli
call
int
pop
pusha
push
inc
adc
dec
outsb
jp
aaa
imul
insb
dec
rcll
in
adc
ret
cmp
mov
xor
jns
lods
push
pusha
sub
jl
sub
add
loope
mov
loop
cmp
loopne
add
add
stc
je
rolb
shlb
fwait
push
cmp
pop
orb
add
jle
iret
add
or
mov
fidivrl
pop
xor
in
nop
lret
pusha
shlb
cmp
add
aad
add
sub
xchg
push
das
push
dec
cmpsb
add
fwait
push
sub
mov
es
and
adc
repnz
es
add
xchg
push
xor
push
call
adc
mov
add
mov
inc
or
out
add
or
xchg
cld
dec
mov
mov
add
or
inc
or
cmpsb
add
sahf
push
jmp
es
aad
add
adc
xchg
add
sahf
repz
mov
sbb
js
aam
ljmp
mov
mov
sub
mov
cmp
popf
push
add
rolb
jl
test
inc
loopne
mov
add
mov
add
xchg
jmp
hlt
js
inc
inc
xor
leave
jb
add
or
add
rolb
xchg
xor
outsb
add
push
sub
lcall
dec
popa
hlt
arpl
out
clc
cmp
mov
push
fmul
and
subl
pushf
adc
leave
cmpsl
add
imul
or
dec
add
xchg
sub
cmp
addb
cmp
int
mov
cli
mov
imul
test
xor
mov
lods
loopne
add
add
jle
push
adc
add
imul
icebp
ja
add
inc
adc
test
mov
sub
add
mov
sub
mov
clc
dec
aad
add
sbb
jp
add
pop
iret
inc
mov
sub
sahf
adc
ljmp
in
add
adc
push
mov
fisubrl
add
jb
cs
rorb
cmp
dec
js
stos
movsl
add
mov
pop
push
add
mov
aaa
dec
or
or
fisubrl
fisubrs
inc
insb
daa
rcl
jnp
sbb
pop
adc
and
pop
ds
incb
add
call
sub
cld
jae
je
rcrb
pop
inc
mov
bound
test
ret
add
pushf
dec
pop
ds
fwait
movsb
add
into
das
xchg
pop
cmpsl
scas
in
scas
inc
mov
pop
adc
movsb
jmp
or
sbb
cmp
daa
ret
leave
ret
dec
mov
fwait
push
popf
flds
ret
add
dec
and
mov
daa
add
xchg
pop
rcrb
jo
push
das
sub
inc
push
cmp
adc
mov
sarl
xor
add
mov
jnp
inc
incb
in
test
push
cmp
xchg
pop
ffreep
pop
push
lret
dec
xchg
cmp
scas
mov
faddl
enter
cmp
stc
pop
pushf
cmp
mov
cs
and
add
add
and
test
and
and
add
add
sub
movsb
enter
mov
jp
xchg
aam
aad
add
out
jns
mov
adc
mov
cs
or
ja
lret
arpl
xchg
enter
imul
popa
sub
lea
pop
sub
shrl
and
add
fiaddl
ds
cmpsb
and
ffreep
icebp
fwait
dec
add
inc
mov
nop
cltd
lahf
sub
dec
pusha
mov
out
dec
andb
add
jo
int
es
es
test
and
add
mov
call
sbb
pop
add
push
outsb
jmp
ret
movsl
pop
push
xchg
aaa
adc
mov
stc
in
repz
insb
xor
jecxz
mov
scas
mov
cmp
lock
les
add
leave
fdivrp
push
jb
push
mov
sahf
popf
nop
fwait
sbb
add
daa
jno
out
sub
sub
xchg
push
or
fsubrl
aad
fs
mov
xor
fwait
jmp
loop
jge
dec
jns
add
incb
xchg
mov
and
das
clc
rolb
ret
mov
out
push
add
leave
mov
push
pushf
movsb
inc
nop
lret
and
stc
push
mov
fcoml
mov
fistl
mov
popa
cmp
mov
dec
add
jecxz
cld
or
adc
andb
add
in
enter
aaa
jo
fdivrl
loop
cmpsb
loopne
test
leave
enter
jo
inc
arpl
jp
and
call
into
movb
or
push
sub
pop
mov
mov
add
lods
ss
push
shrb
cs
addl
jne
mov
mov
pop
cli
jno
jecxz
or
mov
add
xor
push
hlt
cmp
or
sub
fcmovnb
add
push
std
xchg
sahf
call
pop
push
mov
test
fimuls
jmp
add
in
inc
pop
jo
jg
add
mov
push
lret
mov
sbb
and
flds
outsb
popf
shr
in
and
push
mov
fcompl
movsb
xor
adcl
mov
push
ljmp
cmpsl
sub
mov
testl
and
add
cmp
jae
in
push
leave
mov
ret
mov
loopne
and
in
pop
je
sub
iret
push
dec
stos
js
add
fnop
mov
add
pop
push
imul
mov
in
ds
daa
add
sbb
ret
pop
stos
add
add
insb
repnz
ljmp
sub
cmp
loopne
xchg
fs
inc
pop
sbb
cmp
push
dec
aas
mov
xchg
pop
cmp
das
push
mov
pop
adc
add
mov
push
mov
pop
mov
sbb
fwait
add
sbb
sbb
pop
add
lock
or
cld
mov
adc
mov
push
fdivrl
das
arpl
int3
jb
adc
sti
popa
test
aam
adc
fiadds
push
add
xchg
insl
mov
bound
js
out
loopne
xor
add
dec
pushf
cmpsb
and
stos
add
mov
cmc
scas
xor
insb
add
pop
decl
loop
mov
xor
jnp
cs
aad
cmp
pop
add
js
pop
jmp
cld
add
mov
add
pushf
dec
sub
add
mov
adc
mov
scas
pop
mov
imul
inc
pop
push
idivl
pop
ret
sbb
adc
scas
xor
mov
adc
add
xchg
es
loop
mov
pop
or
out
add
clc
xchg
mov
pop
xor
adc
jg
jmp
xor
add
xor
adc
xchg
push
pusha
pop
mov
ret
sbbl
xor
test
in
add
mov
jmp
ja,pt
add
xchg
incb
fistpll
sub
int3
or
mov
inc
push
fdivs
dec
pop
out
mov
push
out
mov
cwtl
je
push
mov
xor
pusha
sub
mov
dec
or
pusha
lret
jne
mov
sbb
mov
ds
out
rcll
int3
jno
jl
or
xor
cmp
in
add
sahf
mov
and
xor
cmovge
xor
push
push
dec
test
lea
loopne
mov
int3
xchg
lahf
jp
addr16
cs
jecxz
mov
and
add
out
clc
mov
or
nop
fistps
or
pop
imul
addr16
jne
ds
jle
outsb
stc
pusha
cmp
cmp
xor
push
outsl
mov
test
add
imul
mov
jp
add
xchg
push
mov
dec
cli
mov
cmp
cmp
mov
sbb
call
pop
lods
cmpsl
aam
pop
mov
add
aaa
nop
add
jne
iret
add
jp
addr16
add
cli
add
into
jne
xchg
pop
pusha
mov
or
cmp
add
jnp
daa
push
sahf
std
lods
add
sbb
add
lahf
xorb
movzbl
push
dec
hlt
add
sarb
and
sub
add
pop
add
cli
dec
push
or
dec
pop
cltd
or
mov
inc
jp
xor
mov
clc
outsl
fcmovnbe
test
adc
sub
addl
sbb
lock
add
shll
and
push
cmp
sbb
dec
dec
repz
add
ss
in
add
loopne
cld
out
pop
flds
xchg
enter
clc
dec
pop
add
fadd
out
not
or
hlt
inc
cmp
popf
test
push
add
loopne
aam
add
adc
or
push
adc
std
movsl
dec
add
jle
roll
jp
fimull
mov
pop
lock
mov
pop
js
and
movsb
lods
shl
rcl
cli
xchg
add
adc
mov
repz
in
jg
sbb
inc
and
loop
dec
add
jge
fmul
inc
lods
out
cmp
bound
in
js
and
inc
push
xchg
adc
nop
cmp
test
scas
mov
cmp
mov
jle
add
mov
fs
push
push
fucomi
pop
cmp
add
ffreep
pop
aaa
mov
fstps
pop
xchg
or
add
call
mov
je
sub
push
popf
out
or
mov
add
cmp
aas
or
and
adc
dec
xchg
mov
inc
cmp
mov
xor
imul
sbb
stc
dec
inc
push
mov
imul
aad
pop
insl
aam
jno
add
test
frstor
imul
push
sbb
jge
add
ret
outsb
ja
inc
mov
push
mov
jnp
and
lds
mov
pusha
pusha
sub
adc
js
push
fidivl
cmp
add
mov
test
cmpsl
adc
cltd
add
and
xchg
or
lods
add
add
xor
daa
and
mov
std
and
cmp
xchg
jbe
adc
add
xchg
jnp
mov
in
dec
aas
fidivrs
mov
mov
xor
lret
or
lds
add
clc
outsb
stos
and
idivl
loopne
mov
sub
xor
test
mov
lret
or
push
cmp
mov
fbld
mov
or
cmp
sarb
repz
pop
push
std
je
and
sbbb
dec
sub
inc
mov
push
sub
mov
in
jae
push
aaa
push
pop
mov
xor
jmp
and
mov
mov
mov
xchg
push
or
xchg
push
cli
sbb
pop
dec
add
cmp
xlat
adc
repz
std
mov
and
mov
ljmp
leave
and
cwtl
es
cmp
mov
loope
add
das
adc
pop
xchg
adc
out
dec
xor
push
mov
loope
add
xchg
inc
mov
jnp
add
notb
cmp
fwait
push
push
mov
shr
mov
subb
add
jb
cwtl
push
int3
dec
xor
das
orl
pushf
pop
ja
add
subl
xorb
cs
cmp
push
mov
or
mov
sub
xor
xchg
add
adc
in
jo
shll
pushf
push
jge
jl
and
stos
fs
jle
mov
xchg
cmp
test
lret
lods
dec
add
enter
push
cmp
inc
jg
and
and
int3
roll
cmc
add
iret
ss
pop
dec
sbb
add
jno
mov
fistpll
int
mov
inc
mov
fs
sbb
es
test
and
cmp
bound
pusha
outsb
xchg
mov
mulb
push
ja
add
stc
jle
dec
push
mov
add
xchg
lock
jp
push
mov
dec
mov
rcrl
jle
push
cs
mov
jge
int3
add
addb
fdivr
les
xor
inc
xchg
call
mov
inc
fisttps
add
imul
aam
loopne
jg
jl
clc
jle
sarl
int3
insb
das
and
add
jl
mov
out
xor
push
inc
lds
mov
mov
sub
xor
add
mov
mov
scas
fstpl
mov
xorb
push
inc
add
popf
mov
dec
jne
add
loope
inc
add
add
lahf
sbb
ljmp
int3
ja
add
sbb
sub
mov
add
lahf
out
xor
add
jp
and
add
mov
out
jne
shll
sti
sub
add
mov
and
or
or
push
cmp
ss
inc
cmp
push
xchg
insl
pop
add
aam
dec
inc
fnstsw
sub
sahf
testb
lock
or
add
lcall
sub
lea
sarl
mov
mov
das
jl
addb
mov
int3
cmp
sahf
js
mov
js
lret
mov
jl
lret
add
jns
add
sbb
pusha
inc
pop
xchg
mov
ret
sbb
out
pusha
mov
test
sub
push
fisubrs
cmp
xor
mov
dec
test
add
imul
add
add
aam
and
xchg
add
rcll
rorb
add
adcb
mov
ss
dec
add
in
mov
sbb
ja
dec
cmpsl
addb
sbb
in
add
cwtl
xchg
movsb
stos
dec
int3
push
add
shl
rclb
mov
lret
add
xchg
mov
jbe
icebp
shrb
and
sub
incl
stos
cli
push
arpl
insl
add
jge
out
stos
sti
popa
and
jge
pop
xlat
sub
daa
inc
xchg
xor
dec
cmp
ret
into
test
das
add
mov
cmpsl
fldcw
jno
push
or
scas
adc
push
mov
and
add
jns
or
add
test
cld
push
mov
iret
lods
sbb
shlb
stos
es
push
push
dec
mov
adc
fs
sub
dec
sbb
adc
popa
leave
xchg
clc
jbe
fldl
insl
fidivrl
sub
inc
inc
mov
and
mov
inc
js
xor
mov
fmul
mov
pmaxsw
nop
or
stos
mov
adc
jae
jmp
push
pop
fsubl
jg
and
test
incb
jbe
xor
add
out
repnz
jae
fisubl
xchg
sbb
js
fildl
adc
mov
add
ja
cltd
or
mov
fwait
mov
inc
xchg
jnp
mov
shrb
pop
ljmp
cmp
sub
lea
mov
mov
sar
add
enter
dec
add
sub
faddl
xchg
push
les
lods
inc
addb
or
add
stc
hlt
sub
sub
es
pop
or
enter
nop
outsl
xor
subl
pop
mov
and
popl
stos
repnz
rolb
test
loopne
mov
js
lods
sub
sbb
pop
xchg
in
adc
mov
fwait
test
xor
int3
mov
lock
add
popa
test
in
cmpsb
and
adc
dec
cwtl
shrb
push
xor
add
pop
orb
loopne
mov
pop
lret
pop
sub
decl
inc
int
pop
pop
push
cmp
adc
jo
mov
das
push
fiadds
testb
test
add
jmp
loopne
aam
pop
pop
and
dec
mov
or
shll
dec
mov
xlat
add
fldcw
loopne
mov
js
xchg
jl
xor
lahf
sub
mov
loopne
push
fs
cwtl
aam
xchg
push
xchg
sub
andb
mov
mov
cmp
sub
mov
hlt
lret
fdiv
push
inc
jns
mov
push
andl
mov
in
call
push
andb
inc
adc
mov
imul
or
xor
and
sbbb
cwtl
xchg
pushf
or
xchg
mov
push
add
ss
stos
stos
xchg
adc
lcall
push
clc
clc
fmull
ss
push
out
test
and
or
push
xor
dec
pop
sub
jl
stc
or
cmpb
sub
aas
jbe
loopne
add
sbbb
sbb
pop
adc
outsl
fmul
push
dec
sub
and
xchg
enter
push
jl
in
and
insl
adc
rsm
cs
pop
xor
push
xor
mov
inc
int3
dec
sbb
adc
sub
add
cld
cmp
call
and
cmp
sti
jbe
add
rorb
inc
push
popa
loop
add
movsb
sahf
jp
mov
jl
pmaxsw
inc
pop
adc
out
rolb
pop
sub
addb
mov
out
test
fildll
daa
aaa
inc
orb
xor
dec
sahf
dec
jg
adc
push
add
cmp
mov
cs
or
pop
or
call
add
xchg
add
ss
subb
pop
into
add
jae
jp
imul
push
and
mov
pop
mov
cmp
adc
je
movl
popa
sbb
mov
add
pop
pop
lahf
pop
fiaddl
ds
sub
xchg
jns
add
outsl
test
mov
pop
adc
bound
dec
loop
pushf
jg
enter
mov
xlat
clc
mov
fistps
mov
jns
xor
into
pusha
or
jg
add
fwait
mov
push
mov
mov
mov
mov
loop
pop
mov
movsb
xchg
ja
xor
lret
enter
xor
push
enter
inc
cmc
or
popf
mov
shrb
add
cmp
pop
divb
test
adc
movl
fadds
xor
cmc
call
lahf
testl
fs
dec
mov
or
add
addr16
div
aad
sarb
cwtl
inc
sub
push
scas
lods
mov
orl
aam
sahf
pop
mov
add
xchg
mov
repnz
out
add
mov
lahf
pop
mov
mov
xchg
aaa
adc
jnp
sti
cmpsl
or
or
pop
test
test
lcall
jb
mov
and
loopne
inc
and
add
lea
sbb
test
movl
xor
add
fadd
xor
sbb
cld
stos
aaa
cmpsb
xchg
es
adc
int
int
jae
xchg
or
cld
sbb
test
push
xor
add
loopne
pop
add
mov
rclb
stos
jo
fmuls
push
sti
mov
incl
sbb
add
mov
scas
test
aam
add
cmpsl
inc
dec
add
fbld
dec
popf
int3
or
push
stos
ret
andb
mov
jmp
sub
xor
mov
loope
add
adc
shlb
adc
jl
fadd
or
mov
inc
sbb
push
or
push
add
xor
mov
sar
add
mov
leave
pop
mov
ds
xchg
add
mov
and
test
mov
sub
xlat
popf
mov
or
xor
mov
addl
dec
mov
test
mov
test
aas
pop
push
pop
and
orb
xchg
mov
pop
sbb
into
ret
sub
adc
int
cli
cmp
and
outsb
repnz
mov
lds
xor
and
hlt
cmp
push
addps
dec
mov
add
iret
sbb
mov
in
cwtl
dec
sbb
add
xchg
roll
and
cmpsl
pop
xor
test
sbb
js
test
cltd
mov
add
mov
aam
test
sub
inc
test
mov
jbe
mov
es
sbb
mov
lods
mov
cltd
sbb
hlt
xchg
and
adc
inc
movsb
aas
push
add
arpl
mov
data16
lods
into
popa
adc
rolb
jo
das
arpl
sub
xchg
mov
hlt
fistpll
insl
lcall
jmp
pushf
mov
inc
popa
jae
mov
add
leave
test
clc
out
sub
mov
fwait
lock
xor
mov
fistpll
test
mov
cwtl
ss
loope
sub
int3
rol
add
push
mov
inc
in
rol
lods
orl
mov
pop
push
adc
push
loop
jnp
stos
xchg
add
push
es
popa
ror
fcoml
and
adc
add
mov
into
adc
mov
aaa
sar
pop
cmp
adc
adc
and
xchg
push
add
leave
or
ret
adc
mov
enter
es
xor
nop
pop
inc
mov
xorb
loope
popa
add
add
clc
inc
xchg
cwtl
cmp
pop
or
mov
out
mov
fs
mov
mov
sub
add
loop
inc
and
add
sbb
cmp
cltd
out
int
add
cli
ror
and
cmp
xor
mov
add
pop
arpl
fcomps
or
sbb
or
dec
cs
or
hlt
or
mov
jg
jo
das
push
mov
dec
nop
add
xchg
add
jl
add
mov
adc
cmp
add
jle
sbb
sti
aas
push
das
int3
repz
dec
lods
mov
inc
aam
test
aam
xchg
mov
xchg
pop
sbb
fcompl
cmp
rol
pop
mov
dec
mov
clc
in
or
fsubp
inc
jle
sbb
ljmp
mov
sbb
mov
pop
xchg
xor
sub
mov
xor
test
sahf
cmp
jl
xor
fidivl
nop
les
jp
inc
sub
lret
ss
jb
pop
in
and
mov
js
ror
and
popf
lcall
dec
cmp
fs
mov
push
ss
sbb
fwait
adc
adc
cli
push
sbb
pop
aad
icebp
jae
in
shl
and
out
push
es
inc
sbb
cwtl
and
test
sahf
inc
testl
jmp
pop
sub
ss
test
push
xchg
data16
int3
push
or
repnz
cmp
pop
inc
mov
push
mov
insl
int
sub
test
inc
fsubrl
add
sbbl
les
xchg
ss
jg
andb
ret
adc
push
test
adc
sub
pop
xlat
cli
out
fwait
and
mov
jbe
push
repz
jmp
cmp
jl
fcoms
pusha
aam
call
into
stos
push
mov
movb
jo
xchg
or
lcall
push
xor
movsl
js
je
add
andl
aam
adc
setl
daa
jg
xor
xorl
rolb
loopne
push
mov
lcall
and
ds
cli
and
push
push
sbb
mov
pop
mov
inc
add
and
add
loopne
dec
fmull
aas
pop
add
pminub
add
xlat
xchg
out
jo
cwtl
xor
xchg
aaa
pop
mov
sub
add
pop
add
sub
ja
add
push
call
xor
mov
and
nop
icebp
rdpmc
dec
and
adc
cmp
push
inc
add
lcall
imul
jecxz
out
add
sbb
and
mov
cmp
inc
sbb
repnz
adc
jle
ljmp
adc
jnp
movsb
clc
fiaddl
jl
push
mov
add
xor
mov
add
addb
mov
cltd
cld
add
pop
sbb
add
push
mov
inc
ret
adc
push
mov
and
clc
sub
sahf
icebp
testl
cmp
add
ffree
sbb
add
xchg
mov
cmp
movsb
jae
and
jae
pop
mov
lret
sub
mov
mov
add
sub
push
js
dec
add
fcmovb
testb
xchg
jmp
lods
fcoms
xchg
out
in
jo
or
cli
mov
pop
push
iret
std
push
cmovl
add
adc
stc
mov
mov
mul
out
cmp
aas
jno
adc
cltd
mov
xor
fbld
in
data16
popf
call
stos
sbb
push
push
sahf
out
jmp
add
adc
flds
cmpsb
mov
scas
imul
dec
add
or
mov
jo
lods
call
js
push
in
add
jno
jb
test
sbb
mov
sbb
jecxz
and
test
mov
arpl
ret
data16
movsb
cmp
cmp
call
jle
mov
sahf
mov
mov
outsb
repnz
rolb
pop
dec
sbb
gs
ljmp
popf
sub
push
add
sahf
cmp
scas
push
sbb
cld
call
sub
jmp
add
enter
pop
fnstsw
dec
clc
cmp
pop
addr16
mov
adc
push
add
push
mov
sbb
in
shl
out
add
and
push
das
add
aad
adc
das
cli
clc
add
jmp
add
cmp
push
push
bnd
cmp
mov
call
mov
add
pop
push
rol
push
sahf
stos
add
mov
sbb
xor
lcall
pop
testb
int3
pop
cmpsb
add
mov
dec
in
test
or
scas
add
sbb
add
cmp
punpckldq
fiaddl
add
cmc
xor
sarb
dec
push
push
jae
xor
xchg
push
pusha
fcoml
inc
shlb
ljmp
lods
out
pop
add
jae
jmp
jbe
adc
dec
nop
cwtl
add
push
mov
add
add
ficompl
fldl
mov
jmp
dec
pop
add
js
jb
mov
and
mov
pushf
cmp
add
jne
int3
das
jb
add
add
add
or
jg
mov
pop
add
pop
mov
ret
push
ljmp
add
ja
nop
aaa
aas
mov
cmp
aad
jae
lret
fildl
enter
push
les
mov
std
push
mov
pop
cmp
xchg
int
ficompl
cmp
mov
pop
push
test
adc
idivb
iret
adc
add
inc
sbb
jg
push
adc
mov
add
mov
sub
fidivl
mov
in
add
inc
mov
sbb
jno,pt
cmpb
add
int
clc
mov
xor
stos
rcrb
mov
or
aam
cmp
add
sbb
add
jp
in
cmpsb
mov
das
add
in
movsl
inc
rcll
xchg
cmp
jo
add
xor
cmpsl
add
xchg
nop
dec
lret
test
pop
jae
mov
sbb
out
push
leave
sub
xchg
or
sub
adc
add
inc
jp
nop
sub
out
in
fimull
jmp
add
scas
insl
ljmp
arpl
int
imull
add
push
lea
mov
aas
cmp
add
cmp
cltd
mov
mov
sub
jns
cmovp
fadd
sbb
rorl
xor
dec
add
add
fimull
inc
sbb
lcall
or
dec
sub
sbb
dec
sbb
ret
mov
push
inc
sbb
add
imul
adc
ss
aad
insb
sbb
mov
aas
lret
xor
sub
xor
or
incb
pop
mov
xchg
mov
add
dec
lds
stc
cli
mov
or
out
scas
repz
roll
pusha
enter
push
pop
aad
add
sub
out
lods
lods
cs
add
push
clc
cmp
mov
imul
imul
mul
sub
push
inc
sub
dec
cmc
and
cld
sub
call
rdpmc
fiaddl
sub
or
daa
roll
adcb
xchg
add
aaa
push
sbb
mov
mov
aaa
ljmp
mov
pop
cld
xchg
cmp
inc
orl
ret
pop
sbb
shl
cmpsl
pop
pop
xchg
or
add
pushf
popf
imul
or
cwtl
ja
aam
shl
push
in
mulb
pop
push
add
das
sbb
add
call
jmp
inc
aam
add
jge
rolb
pop
rcr
into
push
push
mov
call
andl
stos
add
fnstsw
sub
inc
pop
cmp
jae
add
test
es
scas
push
pop
sub
mov
push
insl
dec
lcall
fadds
loopne
and
inc
cltd
cld
mov
sub
and
pop
orl
adc
jecxz
std
and
rclb
push
xchg
lret
jmp
xor
inc
add
aad
ss
fildl
sub
es
ret
push
fdivs
mov
adc
test
rolb
cmpsl
cmp
add
add
test
sub
or
adcb
loop
jns
xor
sbb
stos
add
in
or
in
decb
sbbl
mov
out
inc
js
and
xor
add
loop
icebp
jne
inc
jae
xor
add
cltd
jecxz
add
dec
fcomps
mov
jbe
subl
mov
dec
pop
mov
pop
fstpt
fmuls
cmp
add
xchg
mov
aaa
jo
data16
loopne
out
mov
cmp
lret
fsubs
push
and
faddl
sbb
lahf
shrl
mov
dec
cmp
jne
pop
je
pop
xchg
add
mov
out
cmc
dec
mov
inc
pop
cmp
push
adc
mov
jmp
in
iret
cmovle
test
and
les
mov
pop
fbstp
pop
fdivrs
rorb
add
lret
mov
mov
push
mov
outsl
mov
mov
pop
adc
js,pt
pop
hlt
sub
pop
inc
std
xor
inc
sbb
in
and
and
pop
inc
add
xor
fadd
aam
xor
jmp
cld
ljmp
push
inc
es
push
inc
mov
mov
mov
nop
xor
sbb
mov
mov
jo
dec
adc
dec
je
sbb
inc
rcrl
or
and
sbb
add
xorb
fs
push
push
sarb
xor
inc
pop
ja
sbbb
into
orb
xor
xchg
push
sub
jno
jp
je
inc
test
jl
pop
gs
push
insl
roll
pop
outsb
xor
daa
push
mov
fidivrs
jns
into
xchg
addr16
cwtl
dec
gs
daa
add
fstpl
add
xchg
imul
cmp
arpl
jle
jbe
loop
es
mov
jne
js
jno
xor
xor
cmpsb
or
adc
lcall
sbb
jo
adc
mov
movntq
and
add
fucomp
jno
ja
add
jnp
std
mov
stos
rorl
test
int
das
push
push
adc
sahf
psrlq
sub
shl
xor
lea
cmp
dec
add
cmp
lock
jp
xor
add
call
sbb
xchg
sbb
loope
push
or
xor
popf
in
or
sbbl
jo
and
dec
inc
aaa
sbb
or
mov
lock
pushf
cmp
mov
jns
xor
notl
push
mov
or
test
sarb
or
add
inc
mov
out
xor
mov
inc
ja
add
test
jmp
movsb
jbe
xor
js
sbb
scas
gs
mov
dec
out
pop
mov
or
cmp
mov
fcom
xor
inc
dec
lcall
xchg
jnp
sbb
sub
subl
movsb
adc
les
fwait
je
mov
stc
and
mov
fs
sbb
push
xor
and
xor
add
inc
ss
imul
inc
sub
cmp
mov
adc
mov
xor
push
or
inc
lods
inc
adc
bound
cmp
push
mov
push
sbb
mov
xchg
subl
insb
add
and
aam
lods
adc
pop
xor
xor
sbb
lods
dec
sbb
adc
movsb
or
fwait
aam
mov
jne
and
jo
mov
daa
cmp
adc
mov
imul
lds
nop
sbb
je
adc
and
and
pop
mov
jne
cmpb
push
es
sbb
test
jbe
mov
mov
jo
inc
sub
and
pop
dec
int3
sbbb
rorb
sbb
aaa
sub
mov
repnz
pop
jo
jl
rolb
xor
aaa
push
jg
jl
pop
jno
jg
mov
push
mov
cltd
mov
jo
add
shlb
dec
sbb
jmp
inc
inc
xor
push
icebp
jb
out
enter
and
jecxz
call
movsb
push
add
je
popa
int3
lods
adc
xor
or
lea
add
pmaxub
adc
nop
daa
pop
sbb
xchg
sbb
jo
test
sbb
sbb
or
jns
bound
ficoml
add
inc
mov
clc
movsb
jns
xor
subb
cmpl
add
clc
into
mov
cmp
jmp
inc
pop
adc
mov
jle
insb
mov
or
dec
mov
aam
sub
mov
pop
push
cmp
outsl
aaa
ret
adc
psadbw
pushf
fldl
xchg
mov
lds
push
push
dec
xor
dec
sub
fs
xor
jl
add
and
iret
mov
sbb
cmp
jle
arpl
loope
data16
jns
add
push
rcl
mov
fidivrl
xor
mov
pop
xorb
loope
cmp
add
out
js
sbb
or
push
aam
mov
dec
mov
xchg
or
sbb
push
popf
mov
int3
sub
enter
sub
xor
pop
je
movsl
adc
inc
and
or
jnp
add
mov
loopne
ret
or
inc
mov
data16
sub
je
sbb
add
loopne
call
xchg
pop
and
inc
and
mov
adc
and
and
inc
sub
mov
lock
add
push
mov
hlt
outsb
lret
test
dec
add
push
test
adc
jb
pop
popa
add
addr16
or
test
add
aas
fildl
jno
and
je
jl
js
je
jl
js
filds
or
adc
add
sbb
xlat
incb
outsl
mov
push
pop
mov
fdivrs
add
rorb
loope
add
mov
jge
fcmovne
mov
add
mov
adc
xchg
and
sarb
push
addb
xor
nop
fs
hlt
pop
fmull
fistps
pop
psadbw
jge
inc
mov
loopne
sbb
loopne
xlat
or
sti
shrl
inc
call
sub
leave
pop
das
in
popa
sbb
add
loopne
sbb
add
movsb
or
rolb
out
loope
ds
mov
xor
psrld
adc
pop
cmp
push
les
pop
fidivrl
xor
add
jecxz
and
rclb
pop
add
sbb
out
sbbb
in
inc
ret
inc
push
inc
adc
sub
dec
inc
ds
dec
inc
or
adcl
push
js
cmpsb
xor
cwtl
or
sbb
adc
fistpll
sbb
in
xchg
or
in
inc
loopne
xor
rcrl
sbb
inc
push
rol
inc
sbb
ljmp
inc
in
add
cld
arpl
jno
sub
int
and
jns
push
std
adc
inc
add
cld
int
sub
fstpl
aaa
aas
clc
cmpb
jmp
pushf
push
push
les
and
mov
and
shrb
rol
in
inc
sbb
xor
sub
jecxz
add
dec
add
in
hlt
adc
xchg
cwtl
add
dec
inc
xlat
movsl
aaa
xor
ficoml
inc
iret
push
cmc
push
jno
inc
std
mov
aas
inc
or
in
cmp
dec
je
aam
or
sbb
in
add
xor
test
aad
nop
xchg
es
and
pop
add
pusha
push
jns
xor
dec
inc
cld
loopne
cmp
cmp
inc
pusha
sar
add
rorb
sbb
push
rorl
loop
mov
push
fimull
adc
jo
dec
adc
xchg
dec
andl
pusha
inc
cmp
push
dec
xor
push
xchg
push
aas
push
lea
jecxz
orl
mov
inc
push
sbb
add
dec
aaa
adc
dec
sub
cli
stc
dec
clc
je
adc
cs
or
aad
sti
xor
lahf
sbbb
inc
jl
and
dec
mov
push
dec
xor
es
sbb
fisttps
adc
add
setno
aas
adc
loope
orb
cmp
dec
iret
imul
add
ds
les
stos
or
mov
addr16
lock
xor
cwtl
push
inc
pop
add
fdivs
clc
inc
pop
push
les
or
loopne
sub
inc
adc
pop
inc
rcrb
xchg
dec
add
lret
popa
adc
imul
adc
and
dec
dec
sub
cmp
roll
xor
pop
add
ds
push
loope
stc
cltd
mov
add
sbb
push
inc
pop
loopne
or
shrb
lahf
aaa
pop
mov
dec
add
add
sbb
clc
fs
push
xor
shlb
les
sub
aad
or
shll
dec
sbb
xlat
dec
scas
add
or
test
loopne
fs
adc
je
pop
adc
jecxz
xor
inc
cmp
sbb
pop
add
inc
aas
vmwrite
cwtl
call
or
fists
adcl
xor
ffree
movsb
loope
and
in
add
or
and
je
daa
cmp
movsb
fs
mov
or
sub
cs
mov
dec
movsl
xor
push
cmp
das
dec
mov
cmp
in
movsb
ffree
xor
aad
add
mov
je
add
sti
inc
jno
andb
push
inc
adc
ds
adc
fsts
fistpl
test
les
mov
sub
je
int
and
fcoml
flds
and
adc
fisubl
dec
ds
mov
adc
lock
mov
pop
xor
sbb
mov
dec
sbb
shlb
fsubr
adc
or
sbb
pop
addb
inc
push
popf
in
push
add
or
filds
loope
lock
sub
push
nop
jmp
sub
mov
mov
inc
sbb
loope
cmp
inc
je
rcrb
inc
and
pop
inc
rol
and
inc
add
sbb
shl
dec
das
sub
add
ss
int
nop
mov
mov
fiadds
push
in
cmp
and
or
dec
cmp
add
push
test
cmpsl
repnz
xchg
loopne
add
stc
inc
inc
lcall
pop
pop
sub
add
cld
fwait
enter
out
xchg
inc
stos
hlt
cwtl
jge
lret
xor
adc
sub
and
xchg
or
es
addb
js
pop
pop
loop
je
int3
xor
push
push
add
xchg
pushf
and
mov
cmp
push
out
xor
pop
adc
int
jmp
in
divl
ds
dec
mov
pop
hlt
pop
addr16
push
je
mov
push
daa
hlt
movsb
repnz
or
and
sarl
jle
xor
dec
and
ss
adc
cli
aaa
loopne
cs
add
aaa
cltd
mov
mov
adc
xor
pusha
subb
fstps
push
jmp
ror
sbb
pop
lea
rorl
in
mov
subl
fisubl
inc
in
sub
pop
punpckhbw
add
lahf
inc
aaa
sub
or
mov
rcrb
shll
data16
mov
sahf
leave
aam
sub
adc
sub
cld
cwtl
or
xchg
pop
popa
je
mov
flds
mov
repnz
cs
inc
pop
inc
mov
int
mov
bound
sbb
add
cwtl
and
pusha
ljmp
inc
in
pop
aaa
or
verr
jne
cld
fcomps
dec
add
sbb
jmp
cltd
mov
push
push
mulb
adc
jl,pt
jne
xchg
and
push
test
jecxz
xchg
pop
and
mov
cmp
inc
loope
inc
cmp
ds
mov
sub
and
jo
cmp
xchg
xchg
xorl
in
sub
into
xchg
lea
and
sub
xor
negb
and
sub
lds
pop
adc
out
pop
and
adcb
push
jnp
xchg
dec
pop
adc
cmc
cmpsl
and
adc
js
mov
sub
jge
add
in
dec
enter
cmp
sbb
clc
xor
cmp
and
push
jmp
vaddps
fiadds
mov
sbb
cmp
sub
mov
xchg
mov
and
xchg
lcall
mov
cmp
mov
divb
push
sti
enter
xchg
dec
add
es
fsubs
lods
inc
pusha
add
sub
adc
pop
lods
add
push
rorl
test
nop
or
inc
jb
add
repnz
or
xchg
insb
into
pusha
lea
inc
gs
xor
mov
shl
es
push
sub
sbb
hlt
pop
fbld
xorl
fists
insb
mov
add
lds
mov
cmpsl
ret
fistps
stos
idivb
or
insb
mov
leave
sahf
push
adc
loopne
sahf
add
decb
sbb
and
pop
xchg
adc
ja
mov
adc
xchg
jbe
lret
fs
ficoml
jae
adc
cmpsb
in
sbb
jmp
add
push
clc
adc
add
jns
xor
js
pusha
add
mov
test
lods
pop
dec
cltd
dec
adc
or
mov
xor
pop
inc
or
add
dec
inc
jp
dec
ror
mov
jge
add
mov
aad
sti
push
std
jo
ljmp
push
jg
or
or
mov
fnsave
cld
es
cli
inc
dec
and
js
adc
aad
lahf
push
jge
shrb
idiv
icebp
mov
push
mov
add
nop
test
or
aam
sbb
sbb
mov
lods
pop
incb
dec
mov
out
and
push
js
push
mov
pop
sbb
es
negb
sbb
and
mov
adc
jb
xor
add
inc
ficoml
pusha
mov
jns
cmp
cwtl
sidtl
fwait
ja
cwtl
add
add
mov
lea
sbb
movsb
out
inc
in
or
loop
jge
xchg
push
jo
test
dec
xchg
inc
mov
add
mov
aad
jnp
jl
xor
imul
dec
xor
sbb
gs
and
aad
xchg
mov
mov
sbb
add
fsts
jmp
and
add
mov
shlb
add
sbb
mov
or
and
jae
sub
shlb
push
mov
cli
in
xchg
sbb
sbb
mov
mov
add
fldenv
in
and
dec
jo
pusha
shlb
loope
iret
inc
test
cwtl
or
and
cmpsb
add
xchg
insl
pusha
inc
add
push
icebp
sbb
fstpl
add
jno
sub
loope
and
adc
add
cmpsl
loope
pop
xchg
xor
sbb
dec
sub
cmovs
xchg
add
lock
mov
push
test
push
xor
lret
mov
cmp
ficoms
je
dec
add
push
cld
inc
sub
xchg
adc
xchg
sbb
pop
dec
shrl
mov
je
mov
sbb
pusha
jb
inc
jmp
inc
call
popa
fstpt
push
add
add
mov
xor
adc
xchg
xchg
pop
incl
stc
cmp
sbb
adc
loopne
dec
push
int3
sar
push
inc
add
mov
mov
incb
and
in
lods
outsl
idivl
decl
xor
les
inc
and
fisttpl
test
cwtl
and
pusha
pop
repz
and
inc
add
adc
dec
sbbl
and
adcb
inc
mov
mov
fisubs
lods
sahf
adc
jb
js
dec
testb
test
lock
push
add
in
popa
or
add
aas
ds
roll
inc
into
xlat
add
cwtl
jle
aas
pop
jno
push
fsub
nop
sub
or
lret
addb
inc
add
add
and
push
jo
dec
add
test
leave
adc
das
lock
sbb
or
mov
inc
push
dec
lock
rcrb
jle
inc
and
add
aam
pop
shrl
aam
add
sub
sub
mov
mov
xor
add
sub
jecxz
pushf
pop
xchg
fs
mov
push
push
ret
jb
sbb
test
xchg
sti
sbb
jo
jl
pop
je
mov
roll
leave
and
loopne
jge
pop
arpl
xor
mov
in
cmp
fcomp
add
rcl
call
dec
pusha
and
cmp
mov
jbe
mov
cmpsl
add
addr16
pop
addb
frstor
xchg
xor
cwtl
jo
or
adc
or
cmp
jge
scas
cmpsl
rcr
lahf
mov
pop
movb
cld
mov
mov
iret
mov
add
idivb
into
pop
push
inc
loop
xor
push
cs
push
jl
mov
jecxz
mov
rolb
jge
sbb
lcall
jae
add
mov
add
fildll
inc
and
push
in
in
inc
pop
aam
ds
jne
fcoms
xorb
pop
les
mov
outsl
or
jae
insb
aam
jecxz
mov
out
add
or
lahf
inc
test
js
aam
fiadds
mov
gs
ljmp
dec
jg
push
cmpb
outsb
sahf
mov
adc
in
adc
mov
and
test
mov
aam
inc
shll
roll
add
cmpsl
jmp
lahf
inc
add
lret
mov
lock
jg
insb
es
cmp
sub
sbb
cmp
daa
or
jmp
xchg
jle
xor
xor
mov
add
fisttpl
rcll
ja
xor
sub
cmp
push
push
jmp
adc
or
scas
jb
inc
repnz
lods
mov
mov
or
xor
mov
or
inc
cltd
mov
movsb
loope
add
and
add
dec
fwait
push
test
cmp
xor
ficomps
loopne
jno
add
inc
inc
shlb
mov
or
add
sbb
mov
test
inc
xchg
fsubrs
pushw
inc
dec
das
addl
inc
and
jp
add
leave
jns
dec
outsb
movsb
adc
cmp
dec
xor
xchg
sbb
pop
or
sub
jl
adc
mov
lret
setge
adc
sti
mov
pusha
sub
rol
inc
nop
ljmp
push
adc
cmpsl
add
je
add
pop
fildl
xchg
xorb
and
cli
jge
adcb
xchg
movsb
subl
jne
xor
outsb
add
fldcw
flds
mov
rorl
jge
cmovl
push
sub
es
mov
xlat
push
push
nop
test
repnz
inc
lods
sub
add
add
dec
cli
dec
inc
inc
jo
aad
mov
and
sbb
mov
icebp
and
rol
push
pop
int
cmp
inc
movsl
jb
sbb
adc
andl
jb
fidivrl
inc
cli
pusha
dec
js
movsb
mov
inc
cmp
dec
inc
xchg
inc
or
add
mov
cli
lock
xlat
jo
mov
rcrl
jae
addl
cmp
add
mov
sub
jbe
or
add
xchg
nop
jbe
test
add
xchg
inc
ret
out
fs
mov
aas
push
stos
sarb
fsubs
mov
test
fldenv
add
loopne
fldt
pop
cmp
add
xor
adc
shrl
pushf
sbb
cmpsl
subl
mov
or
aaa
movsb
jae
xchg
decl
sbb
pop
dec
orb
inc
xor
add
jmp
push
rcll
push
in
sbb
movsb
pop
inc
or
pop
cld
add
mov
pusha
test
lods
aaa
out
cli
sub
pop
sahf
xor
or
xchg
fcoms
ja
stos
pushf
xchg
add
cmp
rorb
fs
daa
mov
int
xchg
push
ret
adc
fstpt
pop
sahf
adc
lds
bound
cmp
dec
mov
mov
push
dec
xchg
xor
sub
adc
mov
shrl
cmp
xchg
jl
sbb
cmp
jb
or
add
add
lods
test
and
into
adc
dec
nop
rorb
add
imul
dec
jb
mov
repnz
push
pop
xlat
into
mov
mov
or
mov
add
cmp
movsb
mov
mov
push
inc
cmp
outsb
and
popw
pop
testb
shr
jg
adc
xchg
fcoml
xor
jge
mov
icebp
mov
andb
xchg
cmpsb
adc
sub
insb
pop
xchg
or
test
sub
xor
jo
pusha
lods
loope
and
sti
mov
inc
pop
lcall
and
add
jle
and
adc
sarl
cmpsl
jmp
lret
add
push
jmp
mov
aam
xor
ljmp
mov
push
cmp
nop
lret
add
xchg
add
cli
in
or
rcr
mov
cmp
push
imul
xchg
adc
inc
inc
xor
jne
mull
test
arpl
inc
es
sub
inc
pop
sub
cmpsl
adc
jbe
jo
xor
or
mov
add
jns
push
cmp
mov
or
xadd
out
pushf
mov
mov
adc
je
sarl
push
push
mov
pusha
or
scas
not
xchg
jl
test
xor
out
and
mov
roll
and
popf
push
mov
fdivr
repz
stc
fidivrs
lods
mov
pop
or
xchg
xchg
add
jo
in
cmp
inc
iret
sub
loopne
add
push
add
and
lea
push
data16
inc
push
push
in
mov
xchg
sub
mov
cmp
jne
push
push
mov
pop
pop
xchg
aad
xorb
fldcw
fisttpl
fsts
push
enter
lea
testb
lret
or
adc
add
pop
pushf
xchg
or
add
mov
or
pusha
xchg
jns
incl
pop
dec
adcl
pop
ret
in
dec
je
and
sbb
and
add
inc
add
or
aad
mov
out
sbb
call
add
int
jecxz
xchg
stc
aaa
daa
pop
mov
data16
inc
push
sbb
ret
mov
inc
push
ret
mov
add
stc
push
andb
mov
rcl
aaa
inc
das
sarb
adc
orb
or
into
test
out
pop
xchg
sbb
mov
in
push
xor
or
fsubr
sub
and
add
and
xor
dec
sub
inc
ljmp
adc
ret
add
sahf
xchg
sub
mov
sbb
call
clc
lret
add
filds
in
or
pop
shl
in
pushf
add
nop
sbb
mov
cmp
push
sbb
pusha
in
nop
push
cmpsl
inc
in
inc
lock
testl
jae
push
jo
push
jmp
mov
call
clc
rcrb
push
lds
xorl
mov
sbb
xor
das
xchg
lea
push
loopne
cld
cltd
sub
fwait
dec
cmp
pop
inc
cli
fists
adc
push
add
subl
cmovbe
push
push
xlat
sub
mov
ret
mov
or
popf
xor
cmc
jmp
add
or
addl
mov
push
jne
adc
lods
sub
sbb
cmp
test
popf
adc
pop
mov
pop
add
and
mov
shrb
std
xor
sub
cmc
shlb
fwait
or
add
push
cwtl
scas
xor
ds
add
adc
mov
sahf
daa
xor
push
pop
pop
xor
addb
shlb
cwtl
add
fcomi
shrb
pop
and
cmpsb
stos
add
sub
xchg
inc
xor
orb
mov
sar
jnp
sub
aam
orb
pop
js
mov
jle
add
cmpsl
mov
leave
testb
out
test
dec
push
and
push
mov
test
test
or
cmp
lods
inc
aad
xor
push
int
cmp
add
sete
or
add
push
mov
dec
shll
push
arpl
or
into
add
xchg
sbb
inc
adc
inc
shrb
dec
cs
es
icebp
and
xor
in
inc
dec
and
inc
push
ret
push
andb
cmpb
sub
adc
pusha
sbb
add
mov
adc
and
add
or
adc
test
mov
stc
xor
ljmp
push
push
pop
notl
dec
sbb
mov
pop
ret
and
inc
push
ret
mov
fwait
add
stc
and
or
ret
adc
inc
push
ret
nop
jb
adc
test
cmpsl
adc
and
cltd
xchg
dec
and
mov
xor
push
ficomps
dec
xchg
subl
punpcklbw
sbb
xor
popa
enter
pusha
mov
ja
call
sub
sub
sbb
push
jb
stos
lds
push
cmp
and
pop
push
test
enter
aam
inc
push
ret
fadds
sbb
mov
je
jmp
mov
rcr
xor
or
test
mov
movsb
mov
and
rcrl
aam
out
push
dec
shlb
pop
pop
dec
push
adc
push
mov
test
sub
cs
jge
add
push
test
push
and
dec
sbb
mov
into
in
pop
xchg
or
inc
and
mov
add
jge
pop
fldpi
rol
std
adc
je
pop
xchg
mov
out
lret
vlddqu
dec
xor
adc
lret
jno
leave
xchg
mov
xlat
jmp
sub
cwtl
and
pop
push
pop
nop
call
adc
fsts
sbb
mov
lods
test
push
subl
sbb
adc
and
add
xor
and
add
and
ja
or
movl
cs
repz
iret
sub
or
push
pop
clc
jp
stos
mov
sti
jns
sbb
sub
in
cltd
or
add
add
mov
sub
daa
outsl
js
adc
fadd
daa
mov
mov
ret
xchg
movsl
test
push
cli
xchg
sub
push
xor
ror
add
mov
mov
subb
and
xor
mov
int
cltd
xor
inc
push
mov
adc
rcll
jmp
std
lock
mov
ja
cmp
bound
or
shl
xor
or
push
jns
sbb
inc
punpcklbw
pop
imul
pop
lods
xor
or
sub
lcall
outsl
inc
aaa
and
leave
and
push
cmc
add
xchg
xlat
push
and
in
xchg
sbb
fisttpll
or
adc
rclb
cmp
adc
jno
adc
or
jb
add
pop
outsb
test
fs
and
dec
cmp
pop
stc
test
sbb
jle
adc
call
test
rol
mov
xlat
pop
scas
pop
xchg
clc
addb
lret
mov
add
sub
dec
inc
or
sub
iret
xchg
pushw
test
jecxz
mov
cwtl
inc
mov
and
int3
sahf
pop
inc
rcr
jae
add
mov
test
enter
lea
and
rolb
insl
pavgb
add
push
jmp
mov
jge
fsubp
int3
cli
lods
add
repnz
pop
in
movsl
add
mov
and
and
add
les
sar
adc
enter
or
mov
cmp
test
out
lock
xor
inc
cmp
stc
push
xor
sub
pop
jno
fists
jo
cmpsb
pusha
jb
lcall
sub
or
xchg
inc
pop
or
xchg
add
or
jb
gs
jne
mov
pop
addb
dec
xchg
testb
adc
mov
adc
or
test
add
sbb
mov
adc
ret
xchg
inc
sub
loop
or
jmp
int3
sub
adc
stos
addb
or
add
xchg
jb
fisttpll
insb
adc
or
sbb
mov
inc
inc
and
in
adc
jb
push
adc
add
xchg
mov
mov
sbb
ds
mov
inc
jbe
add
rcr
fxch
jns
pusha
pusha
push
cmc
pop
mov
inc
dec
or
incl
hlt
cltd
leave
push
push
jns
xor
sbb
jo
xor
loope
jmp
stos
insb
iret
scas
lods
pusha
mov
enter
popa
pop
jmp
adc
sub
inc
mov
add
imul
leave
sbb
adc
test
jmp
in
sbb
jp
or
pop
push
push
and
sarl
sub
or
cmp
cmp
pop
pushf
cmpsb
push
xor
ljmpw
ljmp
adc
push
or
and
add
loopne
and
in
mov
rcrb
jns
dec
add
sub
cmc
mov
add
js
shrl
xor
add
aam
in
das
add
mov
pop
adc
push
clc
xchg
mov
push
fstps
cwtl
cmp
int3
sub
cld
lods
dec
pop
ja
sbb
sbbb
or
jbe
sbb
dec
inc
adc
sub
adc
or
shlb
and
lcall
popa
sub
or
decb
sub
pop
adc
or
aaa
jle
and
adc
rclb
mov
sub
xchg
mov
pop
ljmp
add
leave
or
dec
inc
jge
cwtl
adc
pop
pop
popa
dec
xchg
mov
inc
add
pop
or
cmp
xchg
or
clc
mov
jmp
or
sbb
mov
daa
incb
fdivl
cmpsb
ror
pop
adc
cmpb
mov
nop
cmpsb
mov
push
sub
imul
push
stos
bswap
push
add
leave
in
call
adc
insb
or
sub
in
pusha
xor
aaa
jnp
mov
add
jne
in
outsl
stc
and
fidivl
xchg
or
inc
seto
inc
inc
pop
add
pop
sub
or
add
pop
cs
dec
inc
lods
fs
sub
xchg
jnp
pop
inc
aam
sub
adc
xchg
insl
add
sub
add
inc
pop
leave
jge
hlt
add
fcoml
pop
pusha
mov
das
aas
mov
inc
ffreep
or
lret
push
adc
out
or
push
xlat
inc
leave
add
sub
gs
cmp
test
or
pop
pop
xchg
xor
push
mov
push
or
sahf
push
mov
stc
xor
nop
or
xchg
daa
mov
pop
cmc
add
xor
jp
pushf
insb
mov
das
cmp
test
xchg
adc
inc
daa
or
inc
sbb
movsb
sbb
sqrtps
out
add
add
aas
fcmovbe
xchg
ror
mov
cmp
int3
mov
mov
jge
mov
and
cld
data16
dec
cmp
cmp
mov
mov
and
sbbl
movsl
sbb
sub
test
jmp
gs
sbbb
xor
push
addr16
mov
cwtl
inc
fsubp
pop
push
in
adc
push
test
xchg
pop
cmp
add
shll
test
icebp
cmp
push
inc
add
pop
test
cmovg
jmp
inc
pusha
push
cmp
xorb
popa
fs
xor
arpl
js
cmp
popf
loop
call
add
push
jno
add
addr16
pop
cmpsl
jns
les
or
add
call
add
inc
xchg
std
sub
and
pushf
inc
xchg
pop
or
repz
movsl
sahf
shrb
push
call
fs
inc
push
pusha
or
popf
and
mov
sub
int3
mov
clc
pop
jno
fdivr
fadds
inc
or
add
ror
sbb
iret
out
mov
repnz
xchg
xor
aaa
add
shll
rorb
add
in
mov
sub
scas
data16
icebp
and
adc
call
pop
mov
sbb
add
pop
xchg
mov
mov
fnstcw
lret
out
mov
js
jmp
repnz
mov
std
fldl
iret
and
xor
sbb
mov
or
push
rcr
enter
enter
clc
stos
mov
jmp
repnz
xor
sub
shr
leave
shr
add
xor
push
inc
add
cmpsl
xor
dec
les
nop
stos
or
nop
add
mov
lahf
push
jb
dec
cmc
adc
popa
sbb
add
dec
sub
imul
jmp
enter
js
push
popa
leave
outsl
add
insb
jno
mov
imul
inc
push
shr
cwtl
jb
jb
add
arpl
inc
adc
mov
xchg
push
pop
test
add
xchg
jge
out
popf
push
sbb
mov
mov
push
loopne
sbb
pop
cmp
jecxz
pop
adc
and
push
jle
adc
mov
jg
mov
inc
test
xchg
enter
cmpsb
xchg
loopne
jae
add
or
xor
mov
mov
and
cmpsl
push
and
push
add
fsubs
add
mov
sbb
push
cmp
nop
bound
or
xchg
or
inc
jbe
and
loopne
dec
dec
push
and
add
iret
mov
sub
ljmp
xor
adc
xor
and
and
lret
fldl
dec
cmp
inc
xor
pop
das
sub
aam
and
jmp
orb
mov
add
and
insb
sbb
lret
add
loope
sbb
or
je
adc
pop
adc
or
and
imul
pusha
xor
lods
pop
rcr
imul
stos
xor
pop
or
xor
movsl
or
cmp
pop
cld
fadd
push
ja
pop
aad
jno
sahf
int
inc
mov
repz
lcall
lcall
mov
sub
mull
bswap
pop
pop
mov
gs
and
shlb
mov
je
pushf
cmp
inc
add
dec
ret
lcall
sbb
or
rcl
mov
inc
jl
fptan
fsts
cmpl
xor
mov
push
push
push
jae
pop
cmc
fdivs
push
lds
inc
xchg
add
fwait
push
lods
and
and
pop
jecxz
push
xchg
mov
mov
ja
aam
inc
lret
push
jae
jo
inc
adc
jecxz
inc
adc
pop
jo
jmp
lods
pusha
mov
push
and
mov
or
addr16
in
pusha
pop
mov
mov
or
or
xchg
inc
sub
cmp
sub
mov
outsb
lea
jmp
bound
jno
adc
daa
shlb
and
xor
sub
and
add
fsts
cmp
mov
lret
and
or
sarb
testb
das
sti
and
xchg
cmp
adc
movl
push
loopne
push
inc
mov
test
mov
aam
mov
das
xor
cs
call
jb
or
aaa
push
rorl
fnstenv
pop
pop
setns
push
clc
cmp
pop
sbb
addps
outsb
inc
notl
mov
clc
orl
sbb
push
cmpb
or
adc
addr16
test
gs
rol
scas
pop
adc
mov
pop
inc
push
or
xchg
and
popf
inc
das
mov
or
test
or
dec
push
add
push
inc
jge
pop
add
pop
mov
and
mov
sub
fs
aas
pop
pop
xor
test
mov
xor
shrb
dec
pusha
or
lret
insb
or
stos
sub
sbb
mov
sub
mov
stc
inc
or
pop
add
inc
loopne
add
jo
cld
add
sahf
add
js
mov
in
int3
mov
lock
lock
xor
jle
fldl
lock
test
mov
lret
or
pop
add
int
sbb
mov
inc
aad
jmp
sbb
sbb
cmp
stc
lock
daa
jmp
jle
pop
pop
and
mov
add
cmp
sahf
ret
sbbb
and
inc
or
or
push
stc
inc
push
mov
push
jp
jge
out
mov
xchg
cmp
mov
add
fcomi
ret
add
push
imul
push
push
or
test
sbb
mov
xchg
or
lods
sbb
jns
fwait
lock
push
pop
dec
push
fldt
jge
pusha
sub
sbb
inc
push
fcmovnu
fsub
stos
jo
dec
push
andb
mov
add
rcll
movl
inc
or
mov
pop
push
add
xor
mov
push
pop
or
inc
push
add
add
sub
data16
or
push
aas
push
inc
or
adc
outsb
sub
cmp
sti
pop
mov
popa
push
aas
xor
ret
cmp
push
inc
test
popf
mov
in
mov
cs
sbb
adc
outsl
data16
popa
fs
xor
mov
cmp
mov
or
xor
leave
sub
adc
ret
adc
ljmp
pop
das
lds
mov
mov
push
outsb
and
adc
mov
jmp
and
dec
push
or
mov
add
ret
stc
inc
syscall
aas
pop
or
mov
loope
jb
repnz
jmp
sbb
adc
xor
test
and
or
sbb
push
adcl
adc
std
mov
adc
jmp
sub
mov
movsb
and
cmpsb
mov
ret
xor
pop
xor
and
pop
sub
cmpl
sub
jae
movswl
mov
xor
xor
sbb
push
sub
jb
loope
lea
je
orb
adcb
mov
add
push
dec
add
or
add
mov
in
add
push
or
push
dec
nop
cli
adc
adc
jmp
jmp
sbb
ja
sbb
shrl
mov
xor
jge
std
inc
mov
scas
jbe
push
xchg
rcl
push
sbb
sbb
pop
call
lahf
nop
mov
stos
add
pop
mov
or
cmp
mov
and
add
push
push
sub
jp
and
mov
or
or
mov
mov
mov
jmp
add
mov
pop
scas
ret
dec
clc
les
push
lds
or
std
push
pop
xor
add
cwtl
sub
push
mov
mov
add
out
xor
pop
pop
mov
js
xor
adcl
pop
imul
push
dec
jbe
xchg
mov
push
adcl
cmp
das
mov
xchg
pop
mov
loop
shl
or
xchg
push
mov
ja
mov
add
dec
mov
cld
jo
in
cld
jmp
adc
xchg
movsl
jg
and
xchg
inc
shlb
es
or
subb
jge
sbbb
sbb
push
cmpl
or
sbb
enter
outsl
leave
add
sbb
mov
xchg
jecxz
pusha
aad
push
sub
es
lcall
js
pusha
les
adc
jns
popf
push
les
lds
cmovs
push
cmp
inc
jg
xchg
mov
movsl
adc
xchg
int
or
jb
js
adc
xchg
adc
cmp
movsb
mov
inc
pop
add
and
inc
dec
mov
fisttpll
add
xchg
icebp
std
jbe
xor
mov
adc
call
xor
add
push
jb
jl
mov
pop
jno
add
adc
add
movsl
in
pop
push
pop
cmp
repz
push
xor
adc
push
sbb
or
inc
push
add
mov
sub
sbb
je
mov
sti
inc
jmp
inc
xor
xor
add
add
pusha
mov
push
jge
xchg
je
ja
inc
js
gs
imul
data16
insl
popa
or
iret
insb
jns
jae
sbb
arpl
je
scas
aas
sbb
jae
pushaw
jb
jl
jle
jge
jns
divb
ja
imul
arpl
jae
mov
imul
cli
jne
or
add
add
sub
pusha
jae
inc
push
push
dec
jne
pushl
inc
sub
bound
jns
or
fisubrl
sub
addl
mov
push
inc
call
dec
setno
push
push
cmp
jg
mov
cmp
nop
repz
mov
cmp
lret
mov
sbb
dec
sub
bswap
sbb
unpcklps
add
ss
or
sub
movsb
inc
inc
das
mov
enter
out
das
mov
ss
daa
and
imul
cmp
push
mov
and
les
popa
dec
rcrl
push
and
enter
ret
xor
xor
xor
xor
xor
adc
dec
lock
cltd
xchg
xor
dec
sbb
adc
mov
jne
mov
mov
lea
xor
sub
aam
mov
jns
and
or
inc
push
push
adc
adc
dec
icebp
or
sbb
push
test
enter
repnz
adc
jnp
add
xchg
enter
xchg
xor
xchg
and
xchg
andl
sub
adc
cmp
cmc
jg
clc
cmp
push
and
xchg
sbb
lcall
sbb
jmp
push
loop
pop
add
add
xor
dec
imul
mov
dec
and
ret
jmp
arpl
popl
dec
enter
and
add
mov
cmp
xchg
push
and
xchg
and
iret
outsl
add
mov
and
or
popf
data16
aas
in
test
adc
or
adc
sbb
pop
jnp
add
iret
adc
mov
fdiv
add
pop
add
push
rcr
cmp
or
pop
pop
push
or
adc
mov
xorb
ret
scas
and
das
jbe
pop
xor
outsb
inc
out
cwtl
lds
pop
push
push
sbb
pop
and
xor
add
mov
or
movsb
or
inc
mov
sbb
add
lods
mov
add
xor
or
jns
xchg
leave
inc
in
and
push
mov
push
int3
jp
adc
shr
push
stos
cmpb
lea
push
push
push
jb
pop
fcmovne
lea
add
fidivs
xchg
call
cmp
sub
movsl
adc
ja
rolb
fistps
orl
cmp
aam
xchg
or
sbb
fs
inc
push
mov
jmp
fnstcw
add
mov
lods
inc
push
mov
xor
mov
fbld
jp
mov
test
jb
add
enter
jb
ljmp
dec
sub
adc
sub
or
sub
sub
add
rol
nop
sbb
addr16
pop
push
pop
aaa
cmp
ficompl
inc
test
or
jns
adc
push
sbb
mov
out
cmp
add
xor
mov
hlt
inc
sub
sub
add
push
arpl
sub
inc
cmp
push
sbb
push
push
shl
push
int3
mov
xor
test
add
les
adc
xor
jl
pop
int3
mov
add
mov
push
popa
pop
cmpsl
adc
mov
cs
adc
push
add
sub
sub
inc
or
ret
or
push
mov
popl
add
mov
dec
filds
inc
flds
and
jae
mov
aad
adc
jb
or
into
adc
or
movsb
aas
add
push
inc
outsb
add
sbb
out
sbb
inc
add
fsubs
insl
mov
push
int3
or
and
pop
pop
or
ja
subb
jns
xor
loope
lea
aam
sub
jnp
dec
gs
test
ds
insb
adc
push
add
dec
mov
push
mov
adc
loop
jae
lcall
aad
dec
mov
mov
out
ficompl
sahf
mov
addl
push
lods
mov
and
sbb
dec
test
stos
adc
add
push
cli
jecxz
shl
add
jge
stos
cmp
mov
add
mov
into
push
dec
mov
stos
or
mov
dec
leave
or
testl
lock
dec
add
das
mov
pop
testb
xor
add
fisubl
sbb
enter
andl
ret
test
aad
and
mov
xor
push
cmpl
les
inc
and
mov
test
loope
testl
cmp
sahf
mov
push
push
add
das
icebp
xlat
dec
mov
jb
pusha
mov
lods
ja
pop
add
jbe
cmp
loopne
int3
popf
test
test
movsb
and
add
test
in
popa
add
jnp
add
bnd
shlb
cmp
mov
cmpsb
add
sub
mov
cmpsb
add
jmp
mov
add
push
xlat
pop
xchg
jne
dec
lock
adc
mov
and
or
push
xor
adc
inc
out
xor
cld
pop
test
add
int3
mov
loope
pop
rolb
pushf
add
add
movsb
rsqrtps
out
xchg
jbe
sbb
and
push
sbb
push
dec
insl
rcrl
dec
lds
jns
stos
inc
add
dec
jmp
je
icebp
fld
adc
sbb
dec
add
nop
call
clc
dec
leave
cmp
rorl
jp
js
inc
sub
add
stc
add
jne
ret
mov
pop
add
lea
or
and
mov
out
push
add
ret
rorl
or
pop
and
lods
mov
push
xor
data16
cwtl
and
repz
lods
mov
cmp
cmp
add
pop
addl
jae
daa
in
push
scas
inc
xor
out
mov
sbb
mov
clc
fs
xchg
fisttpll
inc
das
mov
pop
dec
and
ss
inc
femms
out
stos
sar
ja
cli
add
scas
mov
cwtl
jmp
lret
clc
mov
or
popa
pop
sub
inc
lds
daa
rolb
cmp
lods
mov
mov
loope
xor
xlat
out
push
mov
mov
add
frstor
pusha
push
adc
add
pop
or
mov
imull
setg
or
loope
cmpsl
dec
mov
pop
cmc
clc
jmp
sbb
insb
lret
dec
mov
cmp
jo
mov
or
pusha
inc
xor
adc
pop
or
and
addr16
pop
leave
push
stos
dec
jo
add
or
enter
ror
adc
add
bound
aam
add
shl
addb
mov
fwait
add
stos
loop
cmp
push
mov
mov
ret
xor
jp
leave
clc
dec
aad
aam
sar
mov
add
jno
dec
inc
mov
leave
cmp
jns
xlat
shr
adc
dec
les
xchg
cltd
jg
add
xchg
ret
mov
enter
xor
not
add
xor
cmpsb
sub
shlb
xchg
ret
int
rclb
inc
and
push
sbb
clc
jmp
xor
ret
adc
xchg
mov
add
add
mov
cmpl
adc
aad
mov
xor
orl
jbe
jmp
inc
call
adc
mov
mov
or
mov
lcall
inc
cmp
mov
sbb
arpl
push
imul
pusha
andb
xchg
dec
pop
rorb
sbb
adc
push
jg
add
xor
mov
jns
push
cmp
inc
outsl
loope
inc
xchg
add
scas
inc
outsl
and
mov
add
outsb
arpl
xchg
out
xchg
or
mov
push
fsubrs
mov
mov
lret
mov
lahf
out
jg
sbb
and
xor
dec
es
lret
adc
icebp
xchg
aad
sbb
sub
cs
and
or
cmp
inc
mov
lock
mov
and
or
mov
nop
cmp
stos
add
andb
std
out
or
mov
mov
xchg
sarb
jne
add
mov
inc
testl
mov
pop
add
or
test
ss
jb
scas
push
xchg
mov
push
and
ljmp
sbb
and
shll
call
imull
in
repz
sahf
jg
adc
rolb
mov
jns
es
jle
inc
in
or
enter
push
jg
mov
imul
adc
sti
sbb
dec
pop
add
sarb
dec
lock
pop
and
xor
push
out
cld
lret
cmp
pop
add
xlat
push
rclb
ficompl
inc
push
adcb
mov
push
mov
and
add
mov
das
add
and
rcrb
mov
jbe
add
xchg
sub
testb
lcall
adc
mov
sbb
addr16
xchg
mov
sbb
xchg
test
hlt
hlt
dec
clc
loopne
cmp
pop
mov
les
and
subl
int3
mov
dec
enter
lahf
xchg
add
push
fs
push
shr
pop
loop
stos
xchg
and
cmp
add
bound
push
call
cld
and
ljmp
or
add
pop
stos
fcomip
add
mov
fimull
sbb
pause
idivb
pop
lret
daa
pop
push
or
nop
imul
mov
jb
add
jp
fcmovu
gs
movsl
or
and
pop
js
lods
cmp
push
out
jb
and
add
xchg
adc
add
pop
stos
pop
add
roll
xor
mov
imul
add
push
pop
test
aas
mov
xchg
cmp
cmp
ja
incl
pop
xor
mov
sar
add
sub
dec
scas
cltd
rcll
add
shrb
pop
test
mov
add
sub
in
or
loope
daa
push
and
rclb
mov
aaa
dec
lahf
xchg
lods
ds
sub
mov
int
hlt
jo
add
ss
add
ret
add
adc
jge
dec
inc
add
cld
pop
mov
sar
push
mov
fwait
ret
xchg
lahf
enter
or
mov
pop
add
ret
add
pusha
insl
test
add
js
enter
pop
into
leave
dec
scas
dec
add
dec
shll
inc
mov
pop
inc
lea
add
push
aad
cwtl
dec
or
jecxz
lahf
add
lea
push
mov
movsb
mov
dec
or
loope
mov
cmpsb
sbb
ss
mov
inc
cld
cmpsb
sti
sbb
cmp
and
adc
repz
test
rorl
xchg
dec
in
fcomps
mov
data16
adc
dec
or
push
les
sbb
pop
adc
cmp
and
arpl
addl
rolb
dec
pop
clc
orl
xor
jge
pop
push
add
mov
push
cmp
add
rorb
loopne
add
add
mov
loopne
sub
in
lcall
jp
call
pop
jle
and
push
arpl
inc
aam
cmp
and
mov
mov
stos
or
ds
mov
sahf
adcb
push
push
mov
inc
aam
orb
lret
push
add
loopne
cmpsb
add
das
jno
aam
cmc
xor
add
mov
sbb
push
cmp
mov
sub
pop
sahf
lahf
mov
or
ret
mov
xchg
std
and
stos
jno
into
pop
iret
xor
cltd
sbb
xlat
inc
ret
add
scas
sub
add
ss
jge
imul
ret
fidivs
or
in
add
mov
and
nop
mov
xchg
cmp
iret
push
cmc
dec
mov
fiadds
test
lcall
adc
or
add
cmp
pop
andl
ficoms
lret
lock
les
pop
clc
add
incl
xchg
mov
add
xor
add
movsl
mull
push
sahf
add
xchg
add
and
pop
jo
pop
xchg
add
ret
push
roll
out
or
int
pop
mov
xchg
out
sub
xchg
adc
adc
in
pop
xchg
sub
or
mov
popa
sbb
xchg
fiadds
insb
mov
insl
push
in
push
pop
push
mull
sbb
mov
push
pop
add
aad
inc
add
filds
stc
js
negb
rcrl
gs
loopne
inc
push
mov
std
pop
mov
add
icebp
and
sub
es
in
add
push
rcr
dec
dec
dec
or
add
jae
jle
add
mov
mov
cmp
sub
mov
xchg
repz
xor
jno
jecxz
add
dec
add
and
in
or
movsb
sub
cmp
das
cmpsb
mov
add
call
or
cwtl
cmp
in
mov
jnp
sub
sbbl
rolb
lret
ss
add
andb
mov
inc
test
push
icebp
not
shlb
cmp
ret
popf
xlat
jge
xor
jns
fldt
or
xchg
or
or
stc
mov
mov
add
popa
sarb
mov
rolb
insb
and
shrb
push
pop
ds
add
repz
test
andb
mov
cld
mov
loop
popf
push
and
dec
test
dec
pop
mov
clc
add
fidivrl
fsts
loopne
nop
fadds
push
push
lock
push
popf
jne
ds
add
inc
or
or
and
xor
add
mov
js
shlb
or
iret
std
pop
mov
and
add
mov
repz
sbb
movsb
roll
enter
add
dec
cs
and
add
jge
jns
mov
clc
mov
hlt
add
mov
in
sub
adc
or
scas
cmp
faddl
push
inc
dec
cmc
jbe
inc
inc
add
pop
in
lods
dec
popl
push
sub
jbe
adc
xor
push
xchg
add
jnp
fmul
or
or
enter
or
arpl
push
add
mov
add
repnz
adc
xchg
push
push
movsb
int3
add
std
adc
cmc
sti
push
push
mov
xlat
pusha
xor
and
enter
les
cli
cmpsb
adc
ret
add
jecxz
sbb
cmp
shrb
ljmp
adc
add
pop
dec
cmp
dec
sti
pop
push
push
pop
in
arpl
cmp
add
or
and
push
idiv
jge
ds
popf
cwtl
pop
mov
sbb
add
mov
aas
jmp
jo
mov
ss
scas
daa
jmp
xor
mov
inc
xchg
sub
add
rolb
sub
dec
push
push
hlt
movsb
icebp
inc
adc
jb
out
xor
sbb
es
xor
cwtl
imulb
pop
mov
faddp
add
sbb
out
in
loop
xor
jmp
or
cmp
bndldx
lahf
add
push
pop
addl
inc
inc
fsubr
xor
outsb
loopw
xor
mov
sub
sbb
into
adc
call
pusha
or
test
xor
jge
push
loopne
pop
ja
or
push
outsb
dec
rcr
mov
push
pop
shlb
dec
dec
outsl
in
mov
outsb
sbb
insl
ret
enter
cmp
dec
xor
nop
dec
ret
pop
shrb
adc
cmp
idivb
std
mov
add
dec
dec
insl
xlat
and
inc
mulb
pushf
add
outsb
dec
lock
repz
or
cwtl
mov
adc
fisttpl
je
and
fcomi
add
sti
pop
jae
or
lret
add
in
fs
jmp
sub
add
call
hlt
jb
or
xchg
cli
sub
sahf
add
je
lret
adc
mov
adc
push
add
push
fimuls
or
or
xor
push
sub
aam
test
dec
into
sub
or
and
adc
repnz
les
or
pop
in
add
jne
add
ds
mov
aad
stos
sub
addb
inc
dec
xchg
mov
lcall
add
xchg
pop
or
mov
adc
insl
mov
cmp
xor
je
es
push
mov
mov
add
xchg
mov
jecxz
inc
push
jo
sahf
nop
sbb
call
cmpl
mov
cli
pop
pop
push
adc
jmp
cmpsb
outsb
adc
and
loope
sbbb
dec
pop
fiaddl
icebp
mov
push
xor
insb
pop
add
push
xchg
lret
add
jns
add
movsb
bound
xchg
push
in
out
push
in
mov
pop
add
int3
stc
pop
sahf
or
aam
pop
lock
mov
outsl
add
andl
pop
jno
jmp
mov
add
mov
xor
xchg
mov
ret
mov
cmpl
dec
fbstp
sub
test
push
jge
adc
ljmp
pop
mov
sbb
imul
in
rorb
sub
cld
es
pusha
jae
adc
adc
pop
loop
add
mov
push
add
data16
repz
std
cmc
in
dec
mov
add
inc
shlb
adc
pop
inc
push
into
popf
xchg
inc
pop
cmc
push
idiv
push
push
push
icebp
add
dec
in
lods
xor
pop
add
jnp
add
fwait
mov
mov
pop
inc
sbb
cld
and
push
btc
fidivl
mov
test
pop
fisttpl
adc
test
je
fst
jns
cmp
mov
adc
ljmp
xor
stos
xchg
add
xor
add
repz
insb
mov
mov
jecxz
daa
xchg
inc
cs
out
loopne
pop
jge
mov
xor
outsb
cmp
sbb
push
loope
test
fdivs
rcl
shl
sbb
xchg
ss
sbb
lahf
loopne
jg
add
jl
mov
mov
shlb
and
adc
filds
add
fnstsw
dec
pop
ds
mov
dec
inc
call
in
stc
insb
daa
or
loop
clc
test
inc
stos
sbb
mov
sub
sub
jle
fs
dec
jnp
cmp
cs
jb
jns
xor
push
lods
inc
dec
push
faddl
addr16
fisubl
fadds
jp
sub
pop
add
xlat
aaa
add
int3
fisubs
or
call
xchg
add
pop
jg
xchg
add
adc
outsb
cld
daa
jno
mov
add
in
mov
adc
dec
add
pop
stos
mov
xor
add
int3
push
mulb
jo
cli
in
dec
add
push
outsb
pop
movsb
sub
jae
xchg
lret
push
pusha
jno
icebp
mov
inc
mov
dec
pop
pop
mov
mov
inc
stos
pop
dec
mov
shl
mov
leave
push
dec
test
cmc
xchg
push
add
iret
xchg
mov
enter
out
mov
ds
mov
or
in
add
sub
repz
add
xor
movsb
imul
inc
imul
mov
subb
add
lret
xchg
les
test
repnz
mov
fldl
das
jle
cld
sub
js
cwtl
sub
enter
fcmovbe
add
sub
mov
ds
pushl
and
testb
test
jne
or
in
es
enter
dec
fdivp
inc
jno
adc
std
and
xlat
fsubrl
add
push
das
jp
jno
enter
outsl
scas
aas
addr16
and
lea
or
sbb
roll
leave
or
push
inc
xchg
mov
mov
push
enter
inc
push
cmp
push
notb
or
arpl
xor
outsb
nop
xchg
cli
sbb
inc
adc
pop
add
in
xlat
and
adc
movb
xor
popa
adc
xor
add
sub
add
loop
and
sub
mov
test
mov
push
movsb
and
add
sbb
cmp
add
add
xchg
test
mov
pop
cli
push
adc
icebp
imul
call
out
add
mov
pop
add
and
cmp
cmc
mov
fnstcw
or
and
dec
test
aas
sahf
clc
andb
mov
add
pusha
daa
pop
fiadds
mov
or
test
and
clc
jecxz
stos
ja
dec
mov
mov
mul
lret
cwtl
loop
jmp
xchg
add
imul
lret
aad
test
pop
inc
mov
sbb
cltd
dec
in
pop
enter
inc
lods
iret
inc
add
enter
jbe
out
pop
and
pop
cwtl
stos
ljmp
mov
push
sub
daa
ja
mov
xorb
or
xorb
mov
sarb
fisubs
roll
sbb
mov
cmpsb
add
test
mov
pop
xchg
xchg
sbb
adc
cmp
mov
add
dec
cmpl
popf
test
mov
push
dec
sub
rolb
nop
pop
cltd
pop
or
push
clc
and
push
or
mov
outsl
adc
ds
roll
dec
adc
push
test
push
or
nop
and
ficoml
shlb
mov
cmp
mov
inc
pop
js
stos
jmp
jo
dec
mov
fldl
sbb
cwtl
sub
in
cmp
mov
adc
fbld
jo
insl
xchg
repz
js
pusha
xchg
movsl
sbb
add
mov
rcrb
repnz
sub
inc
add
mov
inc
jge
aam
pop
gs
cltd
and
psadbw
stos
and
add
sub
mov
xor
pushf
sub
rorb
mov
or
mov
rcl
add
adc
push
outsb
addr16
xor
adc
int
hlt
dec
pop
jmp
rcrb
lret
add
adc
ja
rolb
lea
xchg
add
ret
in
incb
ljmp
hlt
out
in
int
pop
mov
push
jge
outsl
dec
imul
mov
adc
outsb
cmpl
add
cltd
lods
cmp
sbb
jge
loopne
push
and
push
loop
ja
movsl
lret
jle
add
add
adc
arpl
push
movsb
push
pop
arpl
and
add
ljmp
daa
mov
jge
add
mov
push
daa
pop
mov
adc
hlt
add
aam
xor
into
nop
js
xor
sub
mul
add
adc
xchg
and
cmp
rorb
pop
shl
add
imul
mov
arpl
add
adc
stos
sti
and
lock
sar
cmp
es
lock
jb
shll
jne
pop
and
jg
jb
mov
inc
or
sbb
popf
dec
add
repz
pushf
shlb
rcr
add
mov
sub
xchg
mov
aas
dec
gs
fs
pusha
arpl
leave
fcomps
push
mov
adc
dec
lret
adc
nop
or
push
add
lea
inc
daa
or
cmp
sub
push
int
pop
aad
mov
jmp
mov
mov
and
test
shll
in
xlat
jg
loopne
fnstcw
loop
inc
xchg
add
outsb
and
xor
call
or
or
mov
add
jp
dec
mov
xor
imul
stc
outsb
add
testl
xchg
push
ficoml
xchg
dec
xchg
rolw
bound
dec
cmp
sti
xchg
mov
popf
xchg
push
outsb
or
cwtl
and
ret
insl
or
movsb
mov
inc
push
jl
adc
sub
xchg
loop
or
mov
jnp
fwait
or
daa
and
cmc
mov
clc
pop
sbb
jae
pop
jno
fdivs
or
xor
aad
add
call
add
out
and
popf
les
js
loope
stos
ss
xor
pop
fistl
iret
xrelease
jmp
adc
inc
add
pop
push
xchg
xchg
cmp
dec
shl
jno
pop
push
testb
shld
inc
add
add
lahf
in
nop
icebp
push
scas
pop
pop
pop
sbb
and
cmpl
outsl
inc
cwtl
inc
push
adc
dec
add
clc
mov
push
and
xor
movl
mov
call
stc
mov
aaa
sbb
in
imul
add
jecxz
push
jmp
xchg
fsubrs
add
xchg
stos
and
xchg
dec
faddl
push
insb
sbb
ret
add
int
ret
and
and
lods
lahf
sbb
movb
data16
jmp
lds
cmp
nop
xchg
sbb
sbb
jecxz
gs
sbb
lcall
cmp
cltd
sbb
fs
sbb
and
or
cmp
fimull
add
test
lods
jb
sbb
add
jo
xchg
xchg
fnstenv
push
sti
sub
pushf
loop
pop
cmp
pop
mov
sahf
mov
in
repz
jns
test
lea
adcl
fldl
pop
adc
mov
mov
or
inc
mov
xchg
pop
xchg
add
inc
jecxz
repnz
mov
lcall
lods
inc
jns
push
push
scas
nop
inc
test
enter
and
faddl
mov
jg
and
dec
and
inc
imul
dec
and
push
test
dec
loope
pop
mov
dec
mov
insb
pop
lods
push
add
cld
sbb
rcrl
add
push
ficompl
pop
shlb
dec
xor
jnp
inc
cmc
add
pushf
rol
add
das
push
loop
in
pop
add
repz
lds
xor
cmp
mov
into
rolb
push
mov
je
sbb
jge
mov
test
ficoms
int3
sbbl
mov
cmp
xchg
fwait
pop
xchg
xor
sti
xchg
inc
and
xchg
subb
pop
mov
fbstp
cmp
xchg
push
add
bound
into
adc
outsl
xor
out
aam
adc
pop
movsb
xor
cmp
xchg
xchg
cmp
mov
int3
out
lods
add
jb
add
in
xchg
sbb
push
pusha
pop
cmp
and
xor
jecxz
mov
aad
pushf
add
lock
jle
inc
loope
and
sbb
imul
adc
add
pmaxub
mov
arpl
add
dec
or
lods
mov
bound
or
push
add
jo
mov
stc
lds
push
cmp
js
pop
adc
pop
inc
push
cmpsl
test
cmp
insb
mov
mov
test
flds
addb
xor
mov
rcrl
xchg
xchg
cwtl
je
mov
add
inc
add
sti
sbb
mov
mov
and
sub
cmp
jbe
ja
pop
add
imul
insb
orb
or
aas
pop
adcb
out
test
mov
lods
jns
test
andb
testl
jp
roll
dec
sbb
mov
loop
jb
add
add
mov
call
add
insl
sub
dec
stos
push
add
pop
leave
mov
push
sub
xchg
hlt
add
dec
movsl
stos
sub
mov
out
aas
sbb
xor
int3
aaa
pop
inc
fwait
xor
add
xor
sti
sub
popa
xor
sbb
or
add
int
cltd
add
lcall
adc
mov
xchg
add
mov
adc
outsl
daa
sbb
insb
add
ljmp
pushf
int
mov
mov
jo
cmpsl
shll
mov
mov
add
add
xchg
pop
stos
fwait
loope
adc
mov
add
jb
shlb
in
inc
jge
leave
sub
pop
add
loopne
add
jb
cmc
pushf
xchg
push
inc
fildll
push
sub
mov
xchg
push
pop
cmp
cwtl
sub
xchg
lods
mov
add
es
mov
mov
sub
cmp
mov
cmp
mov
cmp
cmp
cmpsl
jns
daa
cld
insb
lock
or
add
out
les
add
cvtpi2ps
cmp
lea
scas
in
daa
pop
add
cli
or
cmp
cwtl
dec
xchg
sub
cmp
pop
int
scas
test
sti
mov
outsl
add
fwait
mov
dec
loop
cmp
inc
dec
inc
enter
leave
push
je
imul
outsb
sub
inc
pmaxsw
nop
movb
mov
mov
jg
cwtl
jno
add
mov
clc
xor
pshufw
data16
adc
push
xchg
xor
or
and
xchg
adc
or
or
out
fadds
adc
and
mov
ret
movsb
lods
mov
fldenv
pop
shll
out
pop
xchg
fs
jno
add
sar
mov
mov
sub
mov
pop
add
insb
inc
mov
mov
dec
mov
lods
xchg
imul
push
in
test
sub
ret
sbb
sub
aam
add
enter
add
push
cs
scas
or
add
mov
lods
adc
push
adc
cs
inc
mov
test
cli
rcll
addr16
pop
jne
enter
cmc
loopne
mov
dec
sub
repnz
cs
lods
add
shll
shl
fst
imul
scas
popa
sbb
movl
and
jbe
push
movsb
lret
mov
ja
inc
inc
pop
fiaddl
add
sbb
add
cmp
add
lret
adc
lret
out
punpckhbw
filds
adc
lret
jg
add
xor
pop
cltd
test
es
gs
add
fiaddl
jns
sub
insl
sbb
fs
inc
repnz
xchg
popf
mov
mov
mov
sub
push
fs
add
clc
jns
aam
add
xor
push
jnp
inc
add
lea
adc
pop
pusha
or
cld
clc
mov
std
imul
out
sbb
out
inc
cwtl
dec
push
or
mov
bound
jns
sarb
roll
imul
mov
or
pop
add
cwtl
adcl
xor
test
pushf
mov
add
push
call
fisubl
cmovbe
aad
inc
sbb
cmp
bound
xor
pop
lds
inc
shrb
add
adc
mov
fsts
sbb
stc
add
enter
inc
mov
in
mov
push
sarl
mov
push
arpl
add
rcrl
mov
mov
add
mov
mov
lods
xor
ss
push
sbbb
shlb
in
add
outsl
cltd
pop
scas
sbb
cld
push
add
xor
inc
lods
shr
jno
stos
add
dec
inc
push
mov
push
jecxz
sub
or
clc
das
or
lds
orb
xor
sub
ljmp
sbb
push
add
ss
popa
out
pusha
fsts
in
outsb
add
lret
jle
add
in
ret
or
ret
xor
push
movsb
jae
fwait
mov
shll
dec
add
lds
enter
mov
mov
pop
add
pop
aad
or
jo
push
add
shll
cmp
xor
jbe
sub
int
pop
cli
add
push
rcrb
mov
cmp
sbb
cmp
dec
je
mov
aam
xchg
push
jbe
and
test
int3
xchg
dec
pop
mov
jle
sti
fadds
in
inc
sbb
pop
add
sub
jge
add
pushf
pop
push
xchg
fiaddl
daa
ja
dec
sub
add
add
vcvtsi2sdl
add
adc
call
xchg
test
into
mov
pop
push
jmp
add
lds
add
mov
pop
add
cmp
push
cwtl
ljmp
adc
imul
xchg
inc
inc
mov
add
xlat
mov
enter
sub
add
add
test
inc
sub
add
push
negl
sbb
mov
xchg
mov
jg
mov
add
pop
add
test
fcomps
add
daa
pop
into
ret
lcall
fucomp
nop
push
mov
xor
movsb
inc
add
jne
lret
sarb
adc
add
and
es
cli
xor
add
test
pop
outsl
jl
inc
mov
sbb
movsl
in
pop
push
mov
lock
push
mov
adc
xor
nop
fbstp
ss
mov
push
pop
and
mov
xchg
cmp
mov
add
xchg
mov
test
add
xchg
outsb
and
add
inc
lret
sub
data16
int3
mov
add
cli
addl
es
cwtl
movsb
and
dec
orb
ja
les
das
dec
add
and
sub
add
mov
xor
pop
lahf
shlb
bnd
adc
and
xor
fcomp
and
je
fwait
pop
scas
fxch
aaa
out
add
shr
jge
jle
dec
add
adc
imul
test
nop
rclb
push
and
pop
sub
mov
jne
test
add
push
push
sbbb
cwtl
ret
sti
pop
out
cmp
fwait
add
roll
fs
push
pop
inc
das
shr
loope
mov
in
inc
or
call
pop
loope
insb
loopne
stos
and
in
cltd
push
add
sub
pop
cmpb
mov
les
mov
mov
rorl
add
bound
insb
inc
push
movsl
xor
or
or
enter
rolb
mov
out
xor
loope
or
jmp
lcall
lea
dec
and
in
sbb
sahf
add
fdivs
jnp
les
pop
and
sbb
jmp
je
push
add
sub
rolb
sub
and
push
pop
stos
jecxz
js
add
lea
je
scas
lds
xor
pop
or
daa
xchg
inc
outsb
jg
add
clc
sub
cmp
es
jb
sbb
out
decl
movsb
add
mov
mov
pop
rcrl
add
adc
jge
divl
add
popa
cmpsl
fucom
out
pop
dec
or
out
mov
sbb
push
in
cmc
mov
dec
loopne
xor
add
popf
mov
add
sub
std
and
pop
add
xor
xchg
mov
roll
pop
pop
add
add
aam
fisubs
and
or
sub
pop
rorb
test
mov
js
adcb
frstor
arpl
fists
add
and
or
jl
mov
aas
cmc
mov
mov
and
or
mov
ret
cmp
decl
pop
mov
cmp
icebp
sbb
insb
jno
add
jo
pop
cmp
scas
call
ljmp
xor
out
sub
push
shl
lahf
mov
inc
lds
jae
cwtl
xor
sub
push
or
pushf
lock
loope
cmpb
data16
fsub
int3
cli
mov
mov
stc
pusha
das
sbb
lock
sar
pushf
add
cmp
inc
or
jl
lods
pushf
dec
xor
add
sbb
mov
fistps
outsb
dec
loope
into
cld
add
iret
jo
xchg
out
add
in
push
rolb
xchg
adc
xchg
xlat
add
leave
mov
arpl
jae
xchg
add
aam
pusha
lods
movsl
jns
add
dec
push
add
and
in
js
push
pop
push
testb
dec
mov
enter
sub
add
dec
lods
inc
add
push
lods
xor
or
jbe
je
jecxz
enter
push
push
push
and
sub
lret
mov
add
pop
sub
jbe
orl
xor
push
add
repnz
or
dec
add
sti
push
add
sbb
xor
aas
and
in
sub
aam
in
rorb
fdivs
pusha
bnd
add
mov
add
rcr
jno
add
push
nop
outsl
jae
add
sbb
add
dec
outsb
fadds
dec
cmp
pop
add
pop
pusha
and
add
add
pop
aaa
jns
loope
outsl
shlb
pop
fstps
mov
stc
adc
mov
js
jge
mov
sub
mov
rcrb
add
jae
mov
or
add
cmp
andb
les
xorl
frstor
adc
fidivs
jge
sti
and
sbb
andb
mov
inc
pop
and
lret
sub
inc
sarb
mov
scas
cwtl
aad
arpl
cmp
lock
xchg
xchg
pop
xchg
push
adcb
dec
mov
sbb
push
push
pop
andl
xor
dec
add
xchg
adc
sbb
test
stos
add
inc
movsb
incb
mov
jae
jnp
adc
add
dec
or
mov
add
fsubl
fstpl
and
add
jecxz
push
scas
xor
cmp
movb
pop
std
sbb
pusha
jns
cmp
popl
mov
outsb
sub
or
stc
out
xor
jns
int
add
addl
fwait
outsl
popf
in
sub
xchg
xchg
adc
add
cmpsb
jle
add
pop
mov
add
cmc
aam
popl
add
xchg
fwait
or
adc
dec
cmpsl
inc
mov
scas
insl
outsl
sbb
pop
add
push
inc
xlat
loopne
lods
arpl
dec
js
push
add
pop
mov
lea
aam
push
fsubrs
frstor
sbb
xor
mov
dec
push
addr16
rcrb
pop
cmp
jb
jo
push
cmp
stc
jne
addr16
add
imul
mov
add
repz
int3
or
jg
imul
out
add
ss
push
push
sbb
xchg
into
mov
cmp
add
and
nop
pop
add
xor
add
js
popf
push
push
pop
sbb
mov
and
sub
bound
add
jmp
call
mov
testb
xor
lock
cmp
ret
push
out
cmp
pop
jo
inc
icebp
jae
push
mov
outsl
sbb
popf
das
lods
push
call
imul
adc
push
repnz
in
fistpll
or
ss
ret
pushf
cmp
hlt
jb
mov
mov
addl
in
frstor
testl
push
jnp
rclb
into
loop
fidivrs
xor
xor
fcompl
xchg
adc
call
dec
nop
xchg
pop
or
cmp
cmp
stos
push
sbb
rorb
or
xchg
push
xchg
mov
push
ss
sub
cmp
addl
movsb
clc
mov
lcall
and
out
jl
jnp
mov
push
shlb
lock
inc
mov
arpl
mov
aaa
cmp
outsb
and
fistps
jb
jge
and
sbb
sub
add
cwtl
pop
mov
mov
jnp
clc
sub
xchg
add
fst
sub
iret
and
mov
mov
jnp
rorb
xor
mov
mov
mov
cmp
push
sbb
movsl
incb
sub
int
dec
cld
dec
shl
add
call
repnz
add
loop
hlt
jecxz
ds
fs
mov
pop
mov
dec
push
xor
clc
rolb
pop
das
fwait
jo
sub
and
sub
sub
cmp
dec
xchg
or
sub
mov
add
and
ret
insl
and
faddl
data16
cmpsl
sti
out
or
shlb
and
pop
sub
push
jecxz
cld
fprem
inc
mov
mov
dec
inc
sbb
lds
in
mov
xor
push
jl
popf
aam
push
cmp
add
js
test
movl
adc
pop
push
or
push
mov
or
cs
cmpsb
out
leave
mov
add
pop
sub
push
lods
xor
xor
jo
or
or
xor
adc
mov
add
mov
add
push
loopne
insl
rclb
adc
sub
push
int3
push
rcrl
add
jecxz
mov
mov
aas
in
sub
movsl
jb
int3
lea
inc
test
mov
es
addr16
insl
arpl
scas
in
test
or
test
mov
stos
jbe
pop
loope
push
mov
mov
jo
jge
and
js
add
insb
xlat
inc
hlt
movsb
jp
xchg
idivl
add
inc
sub
add
je
outsl
xchg
out
icebp
popa
pop
rcrb
pop
rcr
pop
insl
push
pop
jbe
push
mov
push
push
cmp
cli
xor
ja
dec
add
sbb
fistps
testl
jle
arpl
xchg
sbb
imul
add
popa
clc
push
jae
ljmp
pop
dec
popl
or
stos
aas
loop
pop
add
dec
lahf
scas
add
push
xchg
cmp
fiadds
xlat
jmp
aaa
stos
cmp
lods
add
popa
lret
movl
aas
mov
pop
insb
jno
add
outsb
std
loopne
push
add
adc
daa
ljmp
pop
push
inc
out
mov
add
sbb
test
or
adc
insb
loope
add
scas
mov
lcall
adc
cmp
out
adc
jmp
add
push
or
add
jae
movsl
pusha
adc
pop
mov
jb
xchg
mov
push
jg
clc
add
fdivl
cmp
rcrb
js
arpl
test
and
inc
add
push
add
aad
and
push
aam
add
push
lods
insl
add
lea
cwtl
add
pop
mov
aas
sub
jecxz
in
sahf
xor
test
and
xchg
mov
or
mov
sub
cmp
leave
sub
add
scas
mov
mov
shr
mov
add
leave
cmp
adc
or
and
popf
out
sahf
xchg
add
enter
lock
mul
jae
cmp
lods
int
or
fldenv
ljmpw
push
and
mov
push
mov
je
add
aas
pop
cmp
sahf
pop
add
cli
push
xchg
adc
dec
rol
imull
js
add
add
sub
test
cmp
add
and
xor
lock
lahf
inc
mov
mov
sbb
and
add
push
into
cmpsb
ret
lock
add
cmp
xor
push
das
and
cmpsl
push
addr16
xchg
mov
add
test
in
in
loopne
in
add
dec
mov
add
mov
jns
add
mov
sub
repnz
addr16
xchg
add
pushf
adc
jle
insl
adc
imul
and
push
pop
sub
push
add
int
dec
push
push
push
jge
cmp
or
xor
xor
loope
inc
icebp
popf
fmulp
sarb
fnstenv
pushf
sub
xorb
add
mov
repnz
sub
pop
sbb
add
arpl
mov
js
sub
call
dec
jl
mov
ret
enter
cmp
mov
sbb
jns
xor
or
fsub
outsl
repnz
add
scas
add
mov
and
add
loop
and
inc
mov
ret
rcr
lcall
jg
pop
xchg
inc
rcrb
pop
lcall
test
cld
in
mov
shll
inc
mov
mov
loop
repz
jg
int3
sbb
xchg
pop
rolb
subl
sbb
mov
rcrb
push
push
dec
cmp
dec
rorb
add
hlt
adc
pop
movb
ret
loop
push
xor
lret
pop
jb
rol
push
rcrb
test
xlat
dec
sbb
jle
aad
mov
ss
add
mov
jb
add
push
mov
subl
mov
iret
lahf
mov
inc
xor
pusha
push
cmp
mov
jnp
ss
xchg
mov
les
add
dec
push
fwait
scas
repnz
xor
push
dec
imul
jae
push
mov
pop
adc
xchg
daa
pop
add
cltd
push
cmp
sbb
ss
push
roll
add
adc
pusha
ror
stos
jp
daa
roll
sub
and
inc
or
mov
mov
inc
inc
or
std
or
js
leave
ljmp
add
lock
sbb
shll
inc
test
and
test
lock
add
fcomip
out
sub
add
pop
jecxz
shlb
dec
add
fnstsw
rorb
repnz
xor
test
les
das
push
adc
pop
je
cmp
std
imul
xchg
or
xor
dec
cmp
jle
adc
inc
jo
pushf
fldenv
push
shlb
adc
sub
pop
add
and
scas
cwtl
rolb
arpl
mov
push
out
mov
adc
sbb
add
outsl
add
bnd
pusha
into
lock
xorb
adc
mov
cwtl
jle
xchg
loopne
out
jecxz
pusha
je
in
call
outsb
sub
inc
decb
xor
dec
cmp
data16
pop
add
test
fs
cmp
adc
xchg
es
pusha
pop
cld
mov
mov
psraw
repz
pop
test
js
insb
xchg
sbb
and
sbb
cmc
mov
pop
in
imul
in
xchg
adc
add
mov
mov
shl
mov
orl
aas
idivb
mov
jo
adc
push
inc
fwait
add
cmp
jae
stc
or
rolb
enter
sar
mov
sub
cmp
pop
add
push
add
xchg
fwait
or
jo
ret
fs
lods
clc
cwtl
add
lret
call
insb
ds
in
jnp
adc
add
pop
adc
in
test
inc
sub
mov
sbb
shll
xor
pop
add
bound
dec
in
lea
mov
loope
inc
push
sbb
add
xor
mov
and
in
cmpsl
pop
int3
cmc
mov
outsl
add
cwtl
add
cmc
pop
adc
fs
in
mov
sub
mov
add
out
lds
and
in
sub
sbbb
inc
xchg
lods
or
scas
dec
push
lcall
sbb
je
sbb
or
daa
mov
add
lea
mov
cmp
push
add
out
insb
push
jmp
in
lock
pusha
inc
js
push
nop
mov
and
cli
push
pop
add
mov
xlat
cmp
clc
loop
add
cmp
cmpsb
addr16
inc
jp
shrb
shr
xchg
mov
add
xlat
mov
pop
in
popf
add
in
flds
jp
sbb
add
stos
daa
sub
xchg
add
aad
add
xchg
inc
mov
lods
fwait
mov
fldcw
loope
mov
add
out
pop
push
icebp
xor
fmull
add
or
mov
mov
frstor
aad
insl
add
xor
mov
int
xchg
sub
sbb
inc
pop
daa
sub
loope
dec
push
andb
mov
ds
and
data16
add
cmp
inc
pop
pop
addl
cmpl
mov
sbbb
cmp
aas
jbe
jle
orb
jg
dec
add
or
and
das
andl
cmpb
jl
loope,pt
outsl
add
xor
int
pop
shlb
add
sbb
add
or
mov
pop
and
ret
and
idivl
imul
inc
push
in
xchg
or
add
mov
xchg
inc
pop
loopne
imul
or
lock
lods
int3
dec
pop
add
mov
jmp
adc
xchg
dec
iret
pop
lock
adcb
jnp
jns
aas
adc
mov
add
jge
das
xor
pop
xor
andb
sbb
adc
rclb
xor
push
dec
inc
push
inc
inc
mov
jle
add
jnp
mov
cmp
jne
fisttps
orb
jo
mov
xorb
aas
repz
pop
int3
push
iret
mov
xchg
stc
imull
mov
loopne
add
push
add
pop
jle
add
xchg
add
sub
add
inc
cmp
add
sub
pop
inc
shll
add
cwtl
jg
inc
xchg
std
mov
add
xchg
xor
sahf
jo
idivl
es
or
inc
add
add
jl
mov
xor
stos
nop
loop
xchg
jno
push
pop
mov
lss
inc
mov
mov
shll
pop
add
adc
adc
dec
es
jle
dec
push
jl
xlat
jbe
sbb
inc
roll
pop
insl
loope
jno
movsb
or
scas
loopne
hlt
xor
xchg
sti
fwait
push
ret
mov
mov
pop
stos
adc
icebp
imul
mov
lods
inc
inc
lcall
mov
aas
test
add
mov
add
add
pop
ljmp
call
adc
xchg
add
or
xchg
jg
add
shll
push
push
rolb
pop
inc
add
aas
add
fdivr
ret
xor
int
xchg
xor
add
mov
gs
and
in
cmpl
imulb
stos
dec
enter
addr16
xchg
lock
push
hlt
ficompl
jmp
mov
cmpsl
sub
inc
addb
jge
int
das
sbb
in
imul
fsubl
xchg
loope
fnstcw
rolb
ja
enter
mov
xor
add
loope
negb
idivl
adcb
add
clc
pop
xchg
loopne
add
out
adcl
add
mov
cmp
test
subb
push
sub
nop
sub
inc
pop
hlt
pop
std
xor
sbb
jo
inc
aas
int3
or
enter
loopne
push
xor
add
mov
sub
enter
push
leave
insb
test
lock
shll
jns
clc
icebp
add
sarb
test
xchg
sub
shlb
add
add
movsb
jae
out
mov
cmp
pushf
mov
rcrl
shll
aam
arpl
dec
mov
stc
xor
mov
add
lock
cld
adc
in
ds
cs
sarl
cwtl
inc
loope
dec
test
add
lods
shlb
inc
pop
add
iret
rcll
xor
adc
mov
or
out
stos
xchg
call
pop
pusha
cmp
mov
inc
jae
add
repz
and
cli
add
inc
adc
clc
out
sbb
arpl
call
cs
js
add
jmp
cmc
loop
push
out
movb
aaa
cmp
into
adc
sub
pop
adc
jle
test
aaa
andb
add
push
fstps
cmp
adcb
jb
push
cmc
sub
ror
mov
cmp
dec
mov
add
data16
add
std
xor
fdivr
fwait
pop
mov
imul
ljmp
or
fsubs
push
sahf
in
adc
adc
xchg
test
in
ret
lock
add
or
add
mov
cwtl
testl
add
adc
aaa
push
loop
out
mov
cmpsl
fidivrl
add
rcr
add
add
mov
dec
and
mov
add
add
pop
fstpt
xchg
add
pushf
lds
movsb
sbb
incb
outsb
dec
cmpsl
test
icebp
mov
sbb
scas
inc
inc
movsl
lock
cwtl
cmp
pop
cmp
andb
inc
ljmp
sahf
or
scas
mov
std
sbb
dec
xor
hlt
lds
adc
fadds
add
divl
hlt
mov
add
ss
xchg
pop
and
push
xchg
mov
movsl
stc
xor
jg
enter
sbb
add
ljmp
call
mov
and
mov
test
jecxz
imul
pop
and
sbb
adc
push
dec
mov
add
mov
popa
jg
sbb
mov
inc
add
pusha
add
sbb
nop
ljmp
jl
xchg
adc
add
jno
js
pop
clc
push
add
testl
out
sbb
add
rcrl
add
xor
sub
mov
add
mov
fiadds
sub
out
xchg
push
lcall
push
jo
add
and
push
loop
sub
arpl
lock
daa
xor
sbb
add
iret
aaa
jns
add
push
adc
push
pop
push
push
xor
xor
xchg
xor
mov
sub
adcl
adc
mov
dec
mov
fdivs
or
test
bound
mov
negl
inc
add
hlt
add
xchg
xor
sbb
test
push
pop
stos
and
rcll
cld
xchg
add
int3
or
dec
cmp
add
shr
add
xor
or
push
into
mov
inc
arpl
flds
mov
mov
test
xchg
sub
lcall
push
loopne
stc
test
insb
cld
lods
aas
lods
dec
orb
xor
mov
mov
repnz
pusha
stos
mov
bound
xor
aaa
test
jbe
jno
sti
add
jge
lds
loope
xor
pushf
faddp
int
int3
xor
and
pop
popf
shlb
mov
mov
fcmovnb
mov
fimuls
cltd
insl
adc
and
lock
neg
movsb
sbb
inc
adc
dec
arpl
or
mov
add
and
xchg
mov
and
and
jnp
jb
add
push
dec
or
repz
mov
mov
sub
pop
loopne
clc
cmpsl
imul
xorl
cmpsb
cld
or
mov
fadd
sbb
mov
add
adc
mov
scas
inc
add
insl
pop
fidivrs
add
das
sbb
jge
add
add
inc
mov
movsl
pop
push
jnp
test
add
mov
add
out
mov
sarb
push
mov
dec
andb
xor
pop
lds
scas
add
negl
into
aas
test
pop
fadds
jno
shlb
aaa
adc
adc
mov
xor
xchg
add
notl
inc
xor
add
pop
adc
xor
in
jo
jmp
add
pop
callw
adc
push
mov
movsb
stc
cmp
aad
mov
in
mov
sbb
repz
add
dec
push
aas
daa
jg
pushf
add
cmp
out
ljmp
adc
xchg
movsl
pusha
repnz
mov
iret
pop
ret
lahf
mov
sti
xor
jecxz
outsb
je
div
insl
test
add
pushf
inc
mov
out
frstor
add
inc
add
arpl
insl
push
mov
inc
movsb
out
push
inc
mov
shlb
idivl
scas
cmp
and
mov
xor
jmp
mov
jl
pop
push
xchg
fcoml
inc
add
stos
push
ja
xchg
es
add
xor
insb
push
popa
loopne
into
pop
pop
std
or
push
out
pop
mov
pop
test
cmp
cmp
jns
xchg
addb
call
push
scas
sbb
int3
add
jp
sub
push
fcoms
add
in
push
xchg
std
subb
loopne
decl
xor
sub
out
insl
imul
out
repnz
lcall
add
daa
sub
inc
cmp
in
push
lods
pop
enter
cmc
rol
faddl
es
mov
adc
sbb
add
pop
mov
test
lock
and
mov
test
outsb
add
inc
or
aam
inc
cltd
mov
loopne
jmp
movsb
mov
cli
cmp
cs
test
pop
les
fnstcw
ja
popa
mov
int3
or
outsl
jnp
ficomps
sub
add
rol
sbb
sbb
fcmovbe
jb
add
mov
push
dec
adc
ret
enter
add
xlat
mov
lret
sub
jge
dec
sub
adc
into
addl
mov
mov
xchg
pop
xor
repz
insl
shll
nop
into
sub
ss
add
push
jae
add
jae
pushf
or
xor
orl
adcb
ret
mov
cmc
pushl
icebp
adc
and
rolb
cmp
xor
cs
mov
add
push
xor
jg
pop
add
dec
sbb
cmp
xor
add
or
cmpsl
pop
in
adc
inc
lock
pusha
aas
dec
cmp
leave
xor
mov
xorb
fs
outsl
or
push
add
lods
mov
test
sub
cmp
add
push
test
and
imul
mov
adcb
arpl
cmp
adc
adc
push
enter
add
jp
add
jb
sbb
add
lods
and
cwtl
stos
es
dec
stc
adc
fstl
sub
cwtl
sub
cli
mov
mov
iret
jne
add
dec
cmp
add
daa
sub
in
test
push
push
pop
mov
xchg
mov
rcrl
popa
adc
ror
dec
push
push
in
gs
shl
out
inc
xor
fyl2xp1
xor
or
jnp
push
mov
dec
add
loop
cmp
jl
push
xchg
cld
or
and
aam
adc
dec
jge
jo
xchg
and
mov
xor
mov
mov
mov
add
jge
adc
les
roll
push
in
daa
ss
shl
aam
loope
jne
dec
test
pop
bound
scas
dec
jae
add
dec
in
pop
test
aas
sbb
push
scas
testb
jle
inc
push
sub
dec
scas
xchg
andl
xchg
test
rolb
or
pop
sbb
sti
inc
cmp
addr16
in
test
shrb
ds
sbb
add
inc
xchg
lea
adc
pop
cs
mov
add
jg
dec
xchg
jbe
pushf
add
and
std
cmpsl
inc
stos
daa
dec
aam
aaa
add
mov
push
add
add
adc
lods
add
jnp
push
cmp
das
dec
xlat
pusha
add
lock
popa
cmp
jp
mov
es
lcall
ss
or
push
xor
inc
sub
push
add
outsl
and
dec
xor
mov
shlb
pop
aad
sub
push
adcb
cwtl
add
fsubrs
cli
idivl
jns
inc
ds
lds
add
addl
dec
cmc
ja
aad
gs
pop
sub
roll
sub
jns
jge
test
xchg
addb
add
and
inc
inc
enter
mov
outsl
push
add
mov
adc
inc
cwtl
jne
icebp
fiadds
jl
add
and
in
mov
aas
lcall
movb
xchg
lahf
stos
sub
mov
roll
mov
imul
mov
adc
nop
sbb
stos
mov
and
outsl
pop
mov
adcl
shl
ljmp
xchg
mov
push
dec
xor
je
mov
addb
pop
cld
and
xchg
jmp
mov
lds
adcb
loopne
test
movsb
push
mov
push
ffreep
in
test
jp
pop
jb
jno
mov
jmp
call
xor
insb
or
adc
or
jnp
sbb
sbb
pop
jns,pt
add
iret
sbbb
mov
loopne
in
push
push
xchg
add
jmp
fwait
stc
xorb
stos
dec
mov
and
push
add
mov
imul
adc
adc
add
lahf
dec
xchg
rcl
shlb
add
dec
shl
popa
mov
jg
in
cwtl
sub
lds
dec
pusha
mov
mov
pusha
mov
cmp
dec
mov
fldt
or
pop
sbb
iret
mov
xchg
arpl
lds
fsubs
pop
jg
mov
or
pusha
pop
lahf
add
pusha
sub
and
mov
mov
fwait
test
mov
mov
enter
insb
jecxz
nop
lahf
andb
inc
or
aas
push
mov
cmp
das
ret
xchg
repz
or
cmp
in
xchg
sub
inc
call
fbstp
adc
add
aad
dec
cmp
push
pop
xor
test
jl
lods
or
fiaddl
sti
arpl
inc
push
loop
data16
jmp
add
mov
sbb
mov
pusha
mov
jg
add
flds
or
pushf
sbb
sar
or
xchg
jb
sbb
ret
fsub
cmp
push
add
sbb
stos
adc
cmpsb
popl
ret
inc
or
pop
add
sub
adc
not
mov
sbb
movsl
or
and
lret
mov
loopne
fiadds
js
test
add
mov
das
xor
stc
push
push
aam
bound
jle
push
add
inc
add
push
in
mov
add
outsl
andb
insb
push
or
icebp
or
jl
nop
add
and
out
std
add
les
rolb
sub
aam
push
adc
imulb
loop
adc
sub
shlb
lret
in
sbb
xchg
xchg
lods
and
stc
outsb
pop
sub
ds
repz
roll
cld
mov
stos
fbld
loopne
lods
rolb
mov
mov
add
es
jl
jns
les
jno
faddl
loopne
add
xchg
je
or
testl
add
test
xchg
cwtl
mov
cld
push
lds
pop
repnz
add
mov
cmp
and
lcall
adc
adc
hlt
sub
cmc
push
outsl
adcb
and
xchg
scas
fiaddl
adc
nop
dec
xchg
dec
stos
daa
xor
and
and
push
cmp
aad
lahf
sbb
movsb
and
add
jae
aam
cmp
out
add
shrl
adc
movsb
stos
cmp
in
decl
add
inc
mov
outsb
dec
pop
dec
call
dec
cmp
cwtl
mov
xchg
xor
or
add
cli
movl
outsb
mov
inc
inc
dec
mov
repz
divb
mov
or
mov
leave
rclb
flds
sub
add
sub
mov
cmp
nop
out
add
dec
xor
bound
nop
aam
rorl
in
cmp
dec
mov
aad
bound
mov
xor
add
mov
in
sar
icebp
pushf
roll
mov
aaa
pop
mov
push
mov
or
jo
jg
or
inc
xchg
fwait
push
dec
js
or
addb
sub
push
rclb
mov
and
cmp
add
mov
iret
test
adc
out
jnp
pusha
call
dec
xchg
add
push
adc
mov
xor
push
push
add
mov
add
or
inc
add
mov
push
dec
dec
test
mov
cmp
xor
aas
in
jge
in
add
pop
add
add
fcoml
insb
lods
rcrb
call
mov
std
add
sti
push
mov
push
dec
sbb
das
add
mov
pusha
mov
mov
adc
add
int
mov
add
loop
or
int3
push
sbb
xor
xlat
add
mov
pushf
fcoml
lret
xor
mov
out
mov
xchg
aad
addb
lea
aam
shll
push
out
adc
in
adcb
xchg
es
pop
mov
inc
cli
mov
fstl
lock
movsb
fcmovu
push
mov
push
xor
jne
clc
sub
mov
pop
les
pusha
in
test
cmp
fs
out
inc
mov
movsb
inc
shll
clc
mov
fucomp
inc
jno
jae
out
add
aam
fadds
or
cmp
jo
cld
add
bound
sbb
inc
cs
inc
lea
out
mov
repnz
push
lods
jp
pop
sahf
dec
sbb
push
bnd
rcrl
andl
mov
shll
add
addr16
cmp
lret
test
stc
fsubp
jns
rorl
mov
sub
call
inc
mov
in
in
test
iret
into
es
or
push
add
mov
dec
shll
lea
clc
mov
loop
add
shl
roll
mov
xor
clc
sub
lea
js
pop
subb
stos
ficoms
inc
mov
jmp
aam
adc
mov
ret
add
andps
psrad
roll
addr16
lahf
dec
ficoml
xor
cmp
jae
push
into
cld
pop
fs
mov
les
lahf
and
dec
shlb
pop
push
xchg
and
bound
pop
mov
xor
jo
cmp
aad
popf
dec
je
add
in
movsb
push
sbb
mov
pop
add
add
enter
push
xor
rcll
push
push
pop
sbb
xchg
mov
push
xchg
and
shrb
jns
inc
sbb
stos
add
fcoml
rcrb
in
rolb
loope
inc
mov
ret
pushf
add
sub
jae
inc
mov
int3
mov
cmp
pusha
adc
mov
rcrl
js
iret
movsb
cmp
pop
or
shlb
inc
cld
jb
ljmp
lods
pop
jo
inc
mov
xor
pop
cmp
lret
xorb
lods
lods
int3
push
leave
pop
mov
add
test
inc
push
loopne
jle
fdivs
dec
popa
mov
inc
mov
dec
sbb
add
push
xchg
push
jmp
push
lcall
cmp
dec
add
sbb
add
imul
xlat
jno
adc
les
repz
adc
push
mov
bound
lods
mov
lea
jnp
adcl
mov
loopne
add
inc
repnz
insb
cmp
aas
enter
rolb
adc
inc
mov
sub
insl
roll
mov
mov
mov
add
xchg
sub
add
into
loopne
dec
xchg
sbb
ret
inc
in
cmp
add
popf
push
repnz
es
inc
mov
inc
adc
aad
aam
fs
in
mov
into
cmp
push
sub
or
or
pop
mov
hlt
xchg
cltd
mov
lcall
jnp
cmp
xor
add
lds
push
loop
iret
inc
sti
add
and
lret
nop
rcl
mov
xchg
loopne
outsl
and
pop
mov
jecxz
inc
enter
and
scas
aam
mov
mov
enter
and
xor
leave
push
pop
mov
pusha
sub
push
mov
shlb
push
adc
jmp
stc
mov
lcall
rcll
xor
les
sbb
cmp
ret
pop
ss
ds
inc
cmp
and
or
dec
mov
pop
lds
call
pop
add
rcll
add
jbe
add
jb
in
lds
stos
call
test
fdivr
or
sub
nop
cmp
hlt
add
fdivr
sub
mov
pop
cli
leave
add
add
jecxz
adc
mov
loope
lahf
add
cmp
jle
imul
pop
cmp
sub
push
jl
fildl
xor
les
mov
add
out
xchg
adc
orb
push
popf
loope
add
fwait
pop
cmp
dec
add
inc
xor
push
adc
mov
pop
shll
aam
fldl
sahf
adc
sub
sbbb
out
push
scas
sbb
and
xchg
mov
pushf
xchg
jge
fwait
xchg
sub
cwtl
jb
sub
inc
xchg
dec
add
jp
mov
sahf
out
stos
sbb
xchg
xlat
mov
hlt
cmp
push
sbb
xchg
ret
adc
adc
sbb
daa
mov
dec
cwtl
add
adc
push
fbld
fildll
sub
call
rcll
jns
add
or
js
xchg
inc
mov
xchg
sbb
pusha
push
outsl
pop
add
mov
pop
hlt
pop
sub
mov
das
jnp
add
hlt
sub
dec
bound
inc
test
fwait
aaa
cmp
mov
fmull
xchg
pusha
int3
loope
sub
xor
add
orb
loopne
aas
out
jb
xchg
sbb
repnz
xor
adc
in
sbb
xchg
mov
xchg
idivl
or
xlat
jbe
xor
mov
outsb
aam
add
data16
mov
xchg
rcrl
jbe
adc
xor
pusha
mov
aas
mov
fsubs
mov
push
push
cltd
sbb
out
jo
imul
shll
jmp
and
mov
or
movsl
cli
add
or
xchg
repz
adc
in
setb
out
aas
pop
sbb
in
or
and
arpl
jl
in
push
xchg
pop
sti
mov
cmp
pushf
enter
add
scas
test
add
adc
mov
enter
add
ss
stos
lods
xchg
enter
mov
push
or
ds
inc
pusha
or
mov
cs
mov
push
dec
add
into
test
mov
mov
fldl2t
xadd
and
jb
into
dec
dec
dec
add
aas
test
xchg
gs
loopne
aam
rcl
inc
mov
cwtl
shlb
inc
mov
pop
add
movsb
fisubrl
outsl
dec
add
jl
xchg
pop
mov
imul
data16
es
int
popf
fisubrs
dec
cmp
sub
dec
mov
pop
lods
dec
aad
push
mov
ffree
ljmp
andl
xchg
adc
pop
fsub
leave
xchg
cmp
pop
mov
mov
xchg
movsb
mov
lahf
dec
mov
adc
xchg
andb
lahf
inc
push
fsubl
cmovb
push
sub
mov
sub
sbb
hlt
sub
inc
inc
aam
add
lcall
dec
wrmsr
xor
pop
call
pop
adc
pop
stc
inc
or
pusha
or
xor
cli
adc
scas
or
dec
out
outsb
nop
add
inc
insb
sbb
add
int3
fs
push
push
outsl
cs
in
and
dec
jle
add
mov
lods
xchg
and
and
push
enter
rol
pop
push
mov
idivb
shlb
or
fcoml
repz
nop
push
hlt
cmpsl
push
sarb
aas
cwtl
test
inc
test
mov
je
add
push
imul
popf
and
insl
sbb
dec
nop
scas
add
xchg
sub
adc
cli
sub
jl
xor
cmc
je
jle
fists
aad
add
lret
pushf
sub
sarl
push
inc
mov
xchg
jnp
add
inc
addr16
inc
and
aad
dec
test
sahf
add
ljmp
jno
in
out
repz
clc
dec
sub
mov
addl
xchg
sldt
stos
shll
in
cwtl
pushl
iret
js
xorb
out
inc
int3
pop
cmc
shrb
in
daa
sbb
add
dec
repnz
sub
js
add
nop
dec
pop
ljmp
and
inc
out
and
add
icebp
sbb
roll
xlat
rclb
and
cmp
filds
pop
punpckhdq
or
shlb
mov
aam
mov
xor
ss
mov
sub
insb
loopne
sbb
subb
cwtl
push
pop
shll
out
push
lret
testb
add
sbb
jae
pop
je
add
fnsave
out
es
lahf
cmp
in
push
stc
mov
xchg
cwtl
jl
inc
mov
fwait
dec
rolb
and
and
xlat
add
jb
jg
sbb
sbb
push
stos
scas
xchg
add
mov
pop
xor
add
or
ss
push
pop
andb
shr
int3
add
cmpsb
outsl
fcomi
cli
aam
add
fistpll
ja
add
and
hlt
rorb
sub
cmp
fcmovnbe
test
xchg
and
sbb
add
push
jnp
adc
mov
mov
test
add
test
push
test
loopne
js
add
aaa
ds
mov
shrb
jl
aam
cmp
xor
mov
stc
add
test
xchg
in
jle
add
lods
lcall
xchg
dec
in
mov
loopne
dec
cli
push
push
fcmovbe
or
hlt
and
enter
dec
mov
stos
mov
rolb
aam
add
pop
and
add
out
aad
repz
repnz
pop
pop
push
inc
mov
adc
cmp
gs
imulb
pop
pop
lods
test
add
cmp
add
mov
cmp
mov
cld
ljmp
adc
and
mov
dec
sub
jo
adc
pop
aam
repz
xchg
in
or
shrb
aaa
inc
shll
push
scas
cmp
in
addr16
pop
pusha
pop
pop
jp
push
shll
stos
loopne
sub
xor
jge
pop
dec
rolb
and
loope
fistpl
mov
fimull
dec
mov
cwtl
mov
xor
mov
cmp
push
notl
push
mov
imul
push
aad
add
bound
popf
add
mull
jne
push
filds
call
and
movsl
popf
mov
ret
sbb
mov
mov
xor
xchg
mov
jae
push
arpl
dec
add
mov
fdivl
sub
or
sahf
incb
and
lods
rcll
add
in
sbb
adc
mov
cld
shlb
mulb
mov
push
sbb
in
lock
js
leave
sub
adc
jo
dec
add
or
sub
cmp
sbb
cmp
es
test
std
orl
fsubs
add
in
mov
imul
adc
add
rcrl
pop
add
jl
push
cmp
insb
mov
bound
pop
gs
add
rcrl
mov
mov
dec
shlb
pop
mov
cmp
inc
adc
pop
cmp
push
xchg
das
sub
in
dec
std
les
inc
pop
daa
add
add
leave
js
mov
jo
pop
xlat
ja
or
mov
adc
addr16
mov
mov
mov
je
pop
pop
int3
add
mov
clc
bnd
add
add
or
loopne
imul
push
jecxz
xor
loopne
and
pop
and
mov
cmp
sbb
subb
add
pop
inc
gs
orl
in
cltd
je
mov
push
jbe
jb
fcoms
cmp
popa
cmpsl
and
xlat
jmp
pop
outsb
push
or
xchg
adc
add
mov
rclb
les
jne
mov
addr16
pop
jecxz
xchg
jne
mov
add
push
pop
scas
mov
sub
lock
in
adcl
test
jno
fsts
mov
add
jge
je
xchg
cs
pusha
inc
sahf
push
loopne
repnz
xchg
out
or
enter
jp
add
lcall
jne
loopne
cmp
dec
scas
shr
sub
add
xchg
inc
dec
fmuls
mov
aaa
jno
je
add
icebp
sbb
inc
and
or
adc
add
in
test
nop
adc
cmp
jnp
dec
lock
sbb
into
pop
rorb
stos
pusha
pushf
mov
or
lods
add
ljmp
add
push
ror
std
jae
add
cmp
negb
mov
push
iret
movsl
imul
jo
icebp
les
push
inc
in
push
repz
pop
pop
out
loop
sarb
mov
cli
pop
push
sub
or
or
scas
aad
pop
and
push
push
push
mov
test
psrld
lcall
dec
mov
stc
sbb
inc
cwtl
adc
add
sti
push
call
adc
cmpl
mov
push
cmp
xchg
nop
in
in
pop
cmpsl
out
sbb
loope
add
iret
loop
xor
or
jmp
rorb
cltd
cs
jb
dec
enter
push
scas
push
cwtl
mov
sbb
fistpl
or
add
filds
add
mov
or
sub
xor
mov
sub
je
loope
mov
mov
sbb
icebp
out
je
xor
stc
pop
inc
inc
ljmp
and
call
leave
fsts
add
add
in
and
mov
push
insl
orb
test
add
xor
cwtl
add
jns
dec
mov
sub
sti
lcall
pusha
cwtl
clc
lock
xor
add
mov
mov
mov
in
xor
pop
sub
adc
or
cmp
arpl
rorb
fadds
shl
add
xlat
sub
mov
add
iret
jne
fnsave
ds
rcr
lea
dec
mov
push
cltd
sub
add
pop
mov
push
xchg
add
mov
add
inc
xlat
clc
loopne
mov
data16
setge
out
xchg
and
loopne
and
movsl
inc
xchg
scas
adc
mov
mov
dec
enter
scas
mov
sbb
jne
add
cwtl
add
popa
pop
stos
add
xchg
lahf
jge
nop
mov
xor
cs
arpl
mov
loop
cmp
jb
or
fisubrl
jae
push
les
int3
add
das
cld
jg
icebp
adc
loopne
enter
fidivs
inc
adc
mov
jl
test
pop
pusha
mov
push
fcoml
add
dec
mov
je
sbb
cmp
sub
or
mov
jno
sub
pop
jl
adc
insl
pop
outsb
adc
cs
sbb
sub
cmpb
adc
daa
sub
inc
xor
add
sub
in
and
bswap
cld
mov
bound
adc
jbe
stos
je
xor
cmp
pop
inc
movsl
out
pop
xor
adc
aas
sbb
dec
stc
in
inc
jge
add
cli
in
or
jnp
je
cmp
add
push
daa
add
ds
cmpsb
push
rcrl
jae
push
lret
add
jns
in
or
pushf
add
enter
loope
or
xchg
and
push
dec
push
jno
add
sbb
filds
out
jo
sahf
sbb
sbb
cli
lea
sbb
adc
pop
push
and
or
add
loopne
xchg
mov
mov
pusha
pop
cmpsb
mov
clc
and
add
out
test
and
lret
cltd
and
xchg
pushf
jno
fs
jle
add
jne
xchg
sub
popf
add
jg
jl
xchg
add
push
shll
mov
lds
enter
push
adc
add
xor
inc
cld
xchg
daa
jno
pusha
jo
cwtl
add
pop
ss
push
sub
andb
test
xor
pop
adc
mulb
fistpll
or
fisubrl
test
enter
fwait
mov
add
inc
sbbb
inc
sti
sbb
cmc
xor
aas
cmp
bound
pop
cwtl
inc
add
int
out
adc
adc
add
mov
sbb
or
adc
inc
cmp
or
mov
adc
mov
ret
push
push
push
das
push
shlb
or
sub
leave
add
lret
push
pop
mov
fildl
inc
fucom
popl
int
clc
movsl
fs
xor
ret
aam
lock
jmp
add
aas
mov
sub
adc
mov
add
test
adc
aad
inc
cwtl
pop
sub
divl
add
cmp
call
xchg
int3
mov
mov
jl
xor
ret
cwtl
nop
adc
loope
addb
sub
imul
mov
push
cmpsl
add
add
outsb
lods
sbb
pop
mov
jno
jp
fldenv
pop
incb
cmpsl
cmp
dec
or
mov
push
aam
or
and
pop
cwtl
xor
inc
adc
dec
and
sidtl
ret
fmull
and
add
xlat
jae
lret
or
mov
out
push
xchg
insb
aad
pusha
dec
addr16
nop
lret
add
cmp
mov
jmp
xchg
mov
push
mov
or
repnz
or
jne
sbb
adc
inc
psadbw
jbe
inc
xchg
shlb
add
filds
push
fld
xchg
fimull
push
add
adc
inc
dec
push
pushf
push
xor
inc
loopne
pusha
add
lock
das
mov
loopne
xchg
sbb
dec
outsb
hlt
pop
pop
or
mov
repz
js
add
mov
xchg
pop
dec
int
mov
inc
mov
addb
mov
dec
mov
mov
fdivl
movsb
add
rorb
mov
ljmp
sbb
fstpl
fsubrl
rolb
mov
rclb
adc
dec
in
sbbb
xor
fdiv
jp
add
dec
inc
pop
icebp
mov
ds
xchg
jae
mov
test
repz
mov
push
aad
and
pop
xchg
push
jg
inc
fnsave
popf
cmp
pop
xlat
cmp
sub
call
rorb
sbb
ret
xchg
add
stos
dec
fsubrl
xor
gs
repnz
push
jmp
fadds
fstpl
lret
xchg
cwtl
mov
loope
arpl
mov
int
stos
xor
rcrl
lods
mov
xor
ds
pop
out
sbb
insb
cmp
lret
stos
add
aas
mov
mov
fidivrs
lret
xchg
mov
cmp
sbb
lods
cwtl
lock
pop
pusha
xchg
xor
sbb
and
xor
lods
add
scas
xchg
or
mov
lds
inc
pop
jne
push
fmuls
mov
mov
add
mov
cmp
cmpsb
sbb
xor
mov
lds
filds
pop
stos
sub
push
cmp
dec
add
mov
pop
xchg
ret
add
imul
inc
nop
gs
push
or
mov
and
pusha
xchg
or
mov
cld
rolb
out
add
out
dec
mov
dec
pop
lea
test
sarl
addr16
push
aam
mov
mov
mov
adc
add
jnp
adc
insb
int3
mov
std
sbb
mov
outsl
pop
test
fwait
and
push
push
dec
adc
inc
mov
jle
sbb
fsubrs
clc
ds
aas
inc
inc
lock
add
jno
mov
mov
dec
or
loop
pop
fmuls
mov
stos
push
std
and
cmp
mov
cwtl
mov
push
pusha
loopne
mov
push
add
ljmp
mov
pop
fnstcw
ja
add
adc
adc
ret
movb
jo
mov
data16
fucom
mov
pop
pusha
les
and
push
lret
pop
add
pop
popf
stos
roll
ret
mov
mov
ret
jb
add
push
and
add
stc
scas
jmp
push
mov
das
jno
aas
ret
push
jb
je
adc
loop
add
aad
mov
jp
jne,pt
inc
in
add
hlt
sbb
inc
ret
cmp
add
stos
add
cmp
xchg
add
or
inc
adc
les
cmp
xchg
mov
pushf
sbb
int3
add
in
mov
mov
loopne
jge
sbb
test
je
add
scas
cmp
pop
daa
icebp
xor
xor
add
push
dec
mov
inc
sub
mov
dec
mov
pusha
out
add
inc
or
gs
lds
mov
aad
sub
sti
sahf
xchg
dec
jnp
add
xchg
out
adc
add
mov
test
aaa
rorb
popf
ds
add
dec
mov
es
pop
add
outsl
cmp
push
cmpsb
dec
pushf
sbb
subl
mov
add
mov
sbb
xor
dec
andb
or
add
rolb
jp
or
std
ljmp
data16
stc
jl
enter
pop
mov
or
dec
xor
mov
aad
xor
add
into
ror
xor
add
mov
in
lods
mov
add
stos
shlb
int3
nop
fidivrs
or
or
mov
cld
jmp
adc
add
movsl
cmp
daa
mov
loopne
add
sub
or
das
bound
mov
mov
gs
sub
div
mov
adc
int
or
mov
mov
inc
lahf
push
es
fmull
loopne
dec
or
jle
cmp
pop
inc
xchg
daa
fadds
dec
or
mov
and
cmp
subb
push
cmp
fcoml
push
cmp
cwtl
bound
mov
js
or
test
clc
add
xchg
sti
test
xor
sbb
sahf
mov
sub
jmp
nop
stc
popf
pusha
adc
sub
hlt
or
das
add
push
jae
test
andb
popf
out
fadds
enter
cmp
loopne
insl
and
adc
jae
cltd
int3
ret
cmp
push
hlt
xor
arpl
xor
dec
insb
pop
push
stos
jle
jae
cmpsl
jge
adc
hlt
mov
mov
xchg
es
sbb
and
out
add
lods
ficompl
or
loopne
mov
sahf
lahf
sub
stc
pop
inc
inc
inc
or
push
pop
not
pop
dec
pusha
out
rcrb
push
or
lods
xchg
sahf
fstpt
inc
and
add
fdivrl
sub
push
fisubrl
mov
inc
sub
fsub
imul
dec
and
mov
mov
xchg
clc
jmp
and
lcall
add
jnp
inc
add
and
les
movsl
sbb
dec
outsb
xor
insb
das
in
adc
adc
dec
xchg
push
add
mov
inc
add
or
add
and
pop
add
sarb
push
xlat
clc
sbb
or
pop
mov
pop
andb
sbb
or
push
mov
jl
cwtl
jle
roll
in
ljmp
loopne
add
fwait
sub
mov
and
mov
dec
mov
aas
add
mov
outsl
add
stc
jae
add
or
or
in
mov
insb
jge
fs
pop
lret
jae
and
xor
or
inc
in
leave
inc
pop
shrl
add
xor
add
cwtl
std
pusha
mov
aas
sti
outsb
nop
int3
sbb
mov
repz
inc
sbb
add
inc
lods
cmp
aad
add
jle
push
push
scas
jns
pop
in
or
ja
fs
icebp
sbb
add
or
add
lock
inc
int3
sbb
xchg
xlat
cmp
call
ret
pop
into
xor
psubd
mov
mov
sbb
aaa
int
xchg
xchg
daa
and
enter
add
insl
pop
lock
test
shl
xchg
js
push
pushf
push
pop
push
sar
adc
subb
les
pop
xchg
push
iret
and
add
in
scas
push
add
add
mov
ja
pop
push
aam
ret
std
xchg
add
push
xchg
cmp
out
sub
dec
or
lock
daa
or
mov
add
in
pop
jecxz
dec
add
sbb
sbb
sub
pop
add
xchg
lea
popf
push
es
cmp
rolb
cwtl
add
in
mov
add
out
cltd
sti
xchg
xor
or
lahf
sbb
xchg
and
movsb
sbb
outsl
dec
aad
jo
loop
push
out
dec
out
das
and
in
cmp
outsl
jnp
mov
das
cmp
and
xlat
pop
cmp
call
xchg
pop
add
mov
xchg
or
pusha
rcll
add
test
add
lock
dec
sub
pop
add
xchg
mov
mov
shlb
rcl
aaa
popa
iret
push
cmp
dec
mov
subb
mov
in
shlb
clc
loopne
enter
lahf
mov
loop
xlat
add
pop
pop
xchg
xchg
fwait
popa
xchg
aas
cmp
sub
cmp
push
roll
lock
add
cmp
call
add
pop
rcl
xor
sti
aas
les
mov
jbe
cmp
mov
xor
rcrb
and
pusha
in
iret
xor
pop
mov
add
sub
pop
add
cmp
xchg
stc
daa
xchg
xchg
je
imul
pushf
mov
and
lock
lds
lods
pop
push
clc
push
push
testl
jmp
in
imul
add
std
rcrb
dec
repnz
mov
dec
add
jb
stc
adc
mov
cli
and
adc
sub
popa
loopne
addr16
std
inc
jne
jp
stos
adc
ret
ficompl
pop
std
enter
nop
inc
mov
add
xchg
and
fistpll
add
decb
aam
stc
add
mov
jp
lcall
lock
in
mov
lcall
xchg
out
lret
or
cmp
addb
jo
push
pop
add
jne
inc
nop
test
sbb
cmpsb
add
add
lea
add
mov
aas
gs
das
js
mov
xchg
push
mov
mov
sub
loopne
sub
add
sar
and
mov
inc
add
movsb
icebp
mov
pop
jb
cmp
ret
fstl
das
push
subl
fsubrs
lods
out
cmp
les
pop
testb
jo
xchg
push
cmpsl
imul
mov
add
mov
pminsw
mov
enter
pushf
xchg
test
jae
push
add
stos
cmp
push
cmp
rcr
arpl
add
sbb
lret
decb
adc
mov
jo
cmpb
bndldx
fst
pop
or
inc
push
pop
mov
or
mul
outsb
sbb
daa
orb
sbb
mov
add
push
pop
pop
movsl
push
fimull
dec
lock
cmpsl
xor
mov
pop
cli
movsl
jmp
add
pop
mov
add
int3
mov
dec
mov
or
ja
insl
and
xchg
jbe
push
cmp
shlb
add
lock
scas
adc
add
enter
sti
pop
jg
and
cmpsb
adc
adc
vmovups
aaa
and
andb
or
imul
adc
cmpsl
pop
sub
xor
push
faddl
adc
stos
xchg
in
inc
jnp
add
mov
adc
inc
add
jnp
popf
pop
ja
push
aas
adc
add
inc
cld
add
dec
add
pushf
mov
xor
sbb
insb
cltd
add
push
testl
lahf
arpl
dec
into
inc
cmp
xchg
xlat
jnp
fldenv
adc
pop
jecxz
xor
add
aad
sub
sub
outsb
cmp
mov
push
es
idivb
cwtl
lret
dec
sbb
mov
jns
pushf
je
add
test
sub
leave
xchg
cwtl
add
sub
add
jnp
sbb
jo
movsl
jp
adc
sbb
add
sbb
xchg
push
dec
lock
pop
push
popa
outsb
andb
cmp
icebp
aam
stos
add
jl
ss
andl
fnsave
add
sahf
add
loopne
adc
cmc
cmp
stc
out
rclb
and
repz
enter
jnp
adc
nop
dec
inc
and
ja
and
xchg
shr
add
subb
pusha
call
div
stos
add
and
mov
loope
and
or
sub
lahf
fistpll
nop
insb
jl
jbe
add
push
mov
cwtl
mov
cltd
jle
orl
decl
jne
or
movsl
lret
popa
out
je
dec
test
je
push
xor
xor
inc
or
js
fildl
push
inc
stos
ud2
lcall
lds
jle
xchg
mul
push
push
pop
xchg
int3
add
cmpsb
sbb
popf
jl
call
jmp
fldt
out
adc
jl
repnz
push
pop
popa
mov
jae
cmpsb
movb
leave
add
or
sbb
inc
cmc
fsubr
faddl
mov
mov
add
jle
test
dec
push
cld
scas
add
sarb
int
clc
add
cmp
push
add
nop
add
scas
in
shr
add
and
pop
mov
sbb
popf
pop
pop
mov
sbb
add
mov
mov
outsb
sub
sub
dec
add
jbe
inc
loopne
mov
add
add
cmp
fwait
adc
mov
adc
in
xchg
or
ds
cmc
mov
xchg
pusha
jno
pop
mov
push
pop
sbb
lret
sbb
or
pop
adc
cmp
push
xchg
mov
fistpl
sbb
or
outsl
cbtw
adc
mov
dec
je
add
push
cmp
and
aas
test
mov
sbb
mov
adc
add
testl
aas
mov
inc
cmp
pop
mov
xchg
shll
mov
push
icebp
mov
adc
add
gs
sub
fs
add
cld
push
xor
adc
loopne
xchg
rcrb
mov
lcall
arpl
inc
jnp
cwtl
or
sbb
rolb
fsubr
cmp
ret
out
dec
jnp
ret
push
jae
dec
mov
lret
out
iret
or
scas
mov
adc
add
mov
and
mov
test
cmpsb
inc
or
and
mov
pop
jns
jge
or
jg
sub
xchg
adc
hlt
into
push
mov
popf
add
xor
or
and
add
cmp
cmp
sbb
aam
fstpl
je
mov
xlat
lods
rorb
popf
sub
fadds
cmp
orb
test
add
js
xchg
ljmp
xchg
jnp
sub
enter
lahf
jno
hlt
adc
lret
pop
xorl
push
add
jne
movups
push
add
dec
sub
mov
fdivs
mov
mov
jae
add
outsl
jo
add
daa
dec
fmull
dec
add
sub
imul
and
ficoms
rclb
mov
in
inc
pop
pusha
dec
mov
and
push
mov
sbbb
add
insb
and
rorl
call
mov
xchg
mov
fiaddl
sahf
dec
pop
and
lahf
cmp
dec
pusha
sahf
ljmp
and
fldl
push
out
sub
jns
jl
les
fldt
xchg
sub
or
jae
lods
cltd
or
or
popf
sbb
sub
addr16
jo
sbb
icebp
xorb
cltd
push
cmp
and
adc
mov
inc
sahf
jne
idivl
jo
xorb
sbb
lods
nop
push
insl
cli
scas
mov
push
dec
hlt
push
in
test
cmpl
push
adc
jbe
shlb
jl
jmp
adc
xchg
insb
inc
sub
andb
push
mov
sbb
pushf
mov
and
add
mov
cmc
lahf
int3
lahf
push
mov
jnp
adc
xor
ss
std
add
push
mov
adc
push
mov
cmp
add
mov
adc
pop
inc
in
xchg
xor
out
inc
jnp
xor
jmp
xor
out
add
mov
scas
xorl
sbb
add
fiadds
mov
add
arpl
sbb
pusha
and
xor
push
push
pop
pushf
je
jns
jle
or
xchg
pop
mov
push
xor
mov
add
nop
sbb
hlt
enter
adc
jo
add
test
pusha
lret
imul
rclb
inc
repnz
lahf
push
fistpl
inc
sbb
mov
pop
cmpsl
test
aaa
sub
add
aas
xchg
inc
out
adc
fs
daa
add
jns
mov
xor
adc
jae
add
push
dec
lahf
loop
mov
aam
jecxz
and
add
ret
sbb
imul
enter
xor
adc
ljmp
or
xor
mov
cmp
pusha
sub
shll
adc
jmp
sarb
jns
pusha
pop
xor
sbb
pushf
jno
dec
rcll
xlat
jae
jle
orps
mov
gs
lock
testl
in
sub
inc
andps
cmp
xchg
andps
int
and
push
andl
and
sbbb
inc
lods
je
mov
cli
sub
mov
dec
cmp
fs
add
cmp
mov
aam
ret
jecxz
pop
sub
and
lcall
in
add
inc
test
pop
sub
mov
inc
pop
in
stos
cmp
xchg
or
xchg
xor
in
or
adc
movsb
fadds
xor
push
sub
sti
adc
mov
add
cmc
pop
add
pop
sbb
stc
or
cmc
push
xchg
mov
xor
lock
inc
add
jg
ret
cmc
and
pusha
inc
fwait
xor
mov
jmp
add
dec
xor
adc
bound
add
ds
jmp
hlt
and
pusha
jo
in
xor
add
adc
out
stos
add
xchg
xlat
push
mov
or
or
jns
movsb
xor
push
loope
js
int3
and
fisttps
pop
scas
pop
sbb
pop
xor
pop
mov
pusha
push
xchg
or
mov
and
test
xor
ret
mov
pop
movsl
inc
popf
popa
sahf
test
xor
sbb
cltd
mov
clc
xchg
mov
repz
add
xor
out
jle
paddsb
pop
sub
cmp
add
mov
loop
push
add
pop
xchg
add
cmc
push
mov
mov
mov
jg
and
pop
pusha
jg
jo
sub
add
xchg
mov
int
add
in
push
andb
or
pop
xchg
ss
push
add
out
dec
outsl
cmp
pop
ja
into
xor
inc
dec
xchg
rcrb
and
repz
popa
mov
mov
hlt
dec
xchg
aam
mov
in
dec
xchg
lods
aas
in
cmpb
add
sub
sbb
add
sbb
lret
xor
add
mov
jecxz
adc
add
cmc
ja
dec
add
jb
jae
lds
dec
test
in
pop
add
into
sbb
add
and
clc
sub
out
rolb
insl
push
xchg
orb
subl
mov
fidivl
push
into
adc
mov
into
ds
arpl
pop
or
inc
mov
lods
popf
orb
mov
pop
out
or
in
stc
add
cltd
lea
rcrl
movsb
and
push
in
xor
adc
cmp
stos
in
push
mov
pop
sahf
sbb
xchg
cltd
insb
aad
add
movsb
inc
xor
shl
sub
xchg
test
les
inc
pop
popa
jg
push
sub
jl
mov
xor
inc
and
imul
insb
jne
add
xchg
or
xor
push
sub
in
orl
xchg
ljmp
movsb
adc
cwtl
or
cwtl
mov
popa
and
push
sar
xchg
pusha
and
sbb
popl
cmp
jmp
xchg
insb
dec
xor
xor
pop
mov
and
or
or
adcl
call
orb
jle
pop
es
jno
pushf
cltd
sub
push
sub
dec
test
and
xor
lcall
aaa
cld
adcb
cmp
sbb
out
or
nop
mov
cmp
push
dec
mov
stos
mov
loopne
xchg
dec
stc
sub
add
jg
lock
xchg
push
mov
insb
insb
lock
call
xchg
orb
or
cld
mov
cmp
lret
sbb
inc
xor
sbb
jp
lods
and
inc
addb
or
mov
add
sbbb
pop
or
xchg
mov
add
pushl
nop
xchg
mov
add
xchg
sub
lock
dec
ret
inc
cs
movsl
xchg
inc
sbbb
loope
xchg
push
jno
pop
mov
xor
add
xor
notb
call
xchg
xorl
pop
push
lods
ret
xor
aas
out
and
jbe
into
adc
mov
adc
rcrb
jno
insl
add
xchg
jge
inc
push
jle
incb
xorb
testb
test
shrl
and
stc
sub
inc
sahf
scas
movsb
dec
push
push
mov
mov
mov
cld
aaa
shll
add
ljmp
test
mov
out
pusha
dec
xlat
adc
or
dec
sbb
inc
or
nop
add
xchg
inc
mov
jo
mov
pop
in
push
pop
push
nop
add
sbb
jo
adc
mov
push
sbb
add
cmc
shl
jbe
add
mov
ret
loop
and
mov
cmp
inc
dec
stos
mov
pop
jg
cs
clc
jo
bound
shrb
sub
mov
mov
mov
adc
xchg
and
mov
dec
mov
mov
jne
xchg
into
aaa
fidivs
sbb
sahf
pusha
mov
xor
ret
enter
push
test
movsb
add
sbb
movsb
call
dec
pop
push
fs
pop
jl
neg
aas
jns
add
mov
imul
sub
lret
mov
cs
mov
cld
add
outsb
data16
loope
xor
mov
stos
movsl
orb
sbbl
jmp
insl
or
push
lcall
data16
jle
subb
out
jo
imul
lret
add
stos
int3
out
iret
aas
add
xchg
mov
mov
js
movsb
xchg
mov
mov
push
enter
loop
jne
add
push
shll
stc
xor
jo
push
xor
xchg
loop
mov
sbb
mov
mov
loop
add
aas
fdivs
or
fcompl
lret
inc
shlb
xlat
dec
ja
pushf
fdivl
hlt
inc
mov
sub
dec
mov
xlat
xchg
jge
jae
divl
add
pop
in
jo
mov
push
add
sbb
cmc
movb
test
mov
adc
fstpt
les
push
in
push
and
xor
in
push
add
jo
xchg
mov
jne
add
cmp
movsl
lds
xor
xor
mov
js
ret
je
jge
call
mov
fnstsw
mov
pushf
aaa
mov
rcrl
sbb
push
orl
enter
arpl
cltd
cmp
mov
xor
jge
cmp
sarb
mov
fisttpll
shll
enter
in
call
xchg
adc
add
adc
pop
pusha
mov
sub
inc
sbb
xor
in
mov
mov
mov
dec
sbb
sub
push
pop
jp
test
sbb
movsb
dec
dec
adc
aam
popf
call
loop
push
mov
mov
incb
add
test
out
cmp
add
inc
std
mov
xor
hlt
xchg
pop
outsl
sub
xorb
dec
pop
cmp
pop
adc
or
addb
mov
hlt
xor
add
add
inc
jg
das
out
ljmp
data16
in
movsl
les
gs
mov
incl
aas
mov
lcall
test
mov
jg
test
bound
and
jg
add
imul
pop
dec
popf
and
xor
jle
mov
mov
shlb
push
jge
add
pop
mov
mov
jno
cmp
mov
sub
dec
cmp
inc
xchg
xor
inc
and
outsb
testl
xchg
stos
clc
sub
ficoms
push
les
push
cwtl
cmp
cli
pop
push
loop
call
in
xor
mov
pusha
pop
jg
sbb
add
xchg
inc
or
sahf
pusha
les
add
pop
xchg
jg
add
ss
xchg
or
sub
dec
cmp
insb
sbb
inc
or
rorl
xor
repnz
add
and
jg
nop
cmp
mov
aam
addb
fnstsw
sub
pop
inc
inc
test
push
and
repz
dec
sub
loop
mov
mov
pop
cld
test
loop
jae
gs
repnz
es
enter
out
mov
test
adc
cmp
sbb
or
rcrb
mov
add
jb
push
mov
mov
sub
xor
popa
rclb
pop
loop
add
repnz
mov
lret
call
sbb
sub
lods
inc
inc
pop
inc
int
sub
xor
mov
push
inc
pop
lds
sub
pop
test
mov
sub
mov
sub
or
out
fcomi
cmp
add
test
mov
call
add
or
add
pushf
push
sbb
les
inc
test
adc
les
mov
lds
push
dec
arpl
clc
pop
lea
pusha
nop
leave
aas
jne
pop
dec
in
jle
inc
adcb
addl
pusha
and
testb
xorl
inc
inc
push
and
test
sub
cld
mov
jbe
ds
pusha
imul
mov
mov
xchg
loope
inc
adc
ret
jo
js
stc
cmp
sbb
dec
mov
jbe
es
dec
rcr
movsb
in
imulb
adc
add
pop
lcall
pop
aaa
sbb
push
mov
add
fbld
ja
jnp
or
mov
inc
dec
je
or
test
sbbb
cltd
testb
push
cmp
call
mov
out
mov
mov
xchg
rcrb
add
push
sub
dec
das
pop
and
add
negb
mov
pop
inc
xchg
add
enter
das
add
sti
add
push
shlb
xorb
clc
push
add
test
xor
or
test
adc
inc
mov
fsts
sbb
add
pusha
into
xchg
dec
and
or
push
pop
fstps
sbb
xchg
bound
pop
scas
jge
sbb
sub
cmp
pop
add
push
imul
xor
incb
xchg
xchg
xchg
out
cli
mov
into
in
mov
dec
into
inc
sahf
and
adc
inc
test
mov
pushf
cwtl
xor
popf
mov
add
cmp
roll
inc
stos
adc
push
pop
imul
jmp
movsb
or
movsl
rolb
dec
or
cmp
mov
test
mov
mov
nop
test
jg
repz
mov
dec
add
adc
xor
sub
je
xchg
and
pop
jns
clc
popf
dec
les
out
rclb
test
pop
sub
popa
add
xchg
fnstsw
stc
adc
add
dec
test
or
xchg
ds
fisubl
roll
mov
pop
jb
test
clc
lea
cmp
mov
inc
adc
inc
shll
push
and
adc
mov
add
cmc
pop
add
mov
cmc
push
or
in
jne
inc
test
leave
test
mov
or
test
sbb
pop
subl
in
bound
mov
push
mov
mov
dec
movl
mov
add
orb
aam
sub
in
aas
sbb
or
mov
xchg
and
push
mov
test
sbb
cmp
and
adc
lret
cmp
repnz
add
add
mov
std
pop
add
out
add
shlb
cwtl
adc
cmp
add
pop
cmp
loop
lods
pushf
xorl
dec
inc
push
pop
es
dec
fs
cmp
xchg
or
mov
sbb
cmp
jl
mov
cmc
dec
loop
call
test
pop
lods
cmpsl
push
subl
and
test
loop
imul
jnp
into
xchg
push
xchg
lahf
mov
pop
push
in
sub
or
xchg
pop
pop
inc
dec
add
fs
mov
ret
pop
pusha
dec
cmp
mov
push
jnp
inc
js
dec
sbb
test
popa
sbb
es
addr16
adc
add
icebp
pop
push
cmp
lock
nop
loop
mov
mov
loop
call
cmpb
test
sub
push
mov
mov
pop
or
cmp
lcall
mov
sbb
cmp
sub
loopne
lods
dec
push
sarb
dec
cmp
and
add
xchg
sub
push
popa
inc
pop
dec
shlb
add
and
push
sub
add
mov
in
add
mov
and
xlat
sbb
mov
nop
push
sbb
les
inc
std
and
sbb
inc
outsb
add
sub
roll
test
mov
mov
jmp
mov
inc
sbb
repz
dec
xor
adc
pop
cli
sbb
jp
in
es
sub
popa
movsb
adc
add
scas
mov
mov
in
movsb
adc
and
pop
inc
pop
stc
icebp
cld
pusha
dec
dec
sbb
ror
adc
inc
dec
shll
rcrb
or
mov
jbe
or
pop
add
jge
outsl
es
or
call
xchg
adc
out
push
cmp
and
outsl
mov
rolb
lret
subb
xor
adc
jl
sub
inc
pop
cmpsb
sub
cmp
das
pop
and
push
stos
test
lcall
orb
sub
popf
mov
cmp
or
xchg
cmp
dec
adc
stos
test
lds
sbb
in
push
xchg
sub
mov
add
shll
ficoml
pushf
testb
aas
adc
jns
cltd
dec
mov
mov
dec
sbb
mov
lret
mov
push
movsb
push
or
mov
jns
js
lock
test
stos
sbb
cwtl
out
rcrl
xchg
std
int3
mov
dec
xor
add
jle
jecxz
mov
and
xor
xchg
xchg
and
cmc
cld
and
lahf
add
outsl
lcall
jbe
int3
sbb
leave
es
push
test
rcr
lea
ss
and
lcall
insb
rclb
sbb
cwtl
dec
inc
in
sbb
aam
cltd
adc
ficoms
mov
or
cmp
mov
aam
lds
gs
mov
sbb
outsb
sbb
xchg
mov
sub
cmp
imul
push
sub
sbb
arpl
mov
jae
add
ret
enter
js
push
mov
and
or
fadds
test
mov
rolb
mov
mov
sub
adc
or
and
movsb
fs
dec
sub
xchg
imul
add
inc
clc
push
aas
imul
dec
icebp
pusha
cmc
andb
jge
push
clc
sbbb
imul
and
inc
movsb
and
or
jno
scas
daa
lock
fldl
sbb
popa
pop
movsl
lods
mov
nop
je
sbb
mov
xchg
mov
subb
in
mov
push
mov
xor
sub
jg
push
add
out
test
push
sub
orb
icebp
cmpsl
cmp
fisubrl
mov
rolb
or
ljmp
dec
aaa
clc
add
cmp
xor
shr
push
mov
jne
adc
mov
xlat
mov
ror
testl
add
and
sbb
add
cmpsl
enter
push
dec
jle
add
mov
std
cmp
and
push
mov
xchg
inc
add
insl
mov
or
sbb
add
nop
pusha
mov
int
rclb
int3
or
clc
add
or
add
push
mov
aam
mov
fs
dec
dec
mov
inc
js
stos
arpl
or
lock
daa
pushf
sbb
add
or
js
pcmpeqw
xchg
dec
lcall
adc
mov
and
pop
mov
and
mov
icebp
sbb
stos
cmp
and
nop
xor
loop
pop
mov
cmp
mov
int
add
push
mov
adc
or
mov
push
add
or
add
bound
fnstsw
or
pop
pop
leave
hlt
bound
push
or
jecxz
jae
or
dec
into
addb
mov
add
imul
pusha
pushf
int
clc
jne
sbb
icebp
fsubl
add
pop
comiss
in
or
mov
mov
clc
pop
aas
xlat
sbb
pushf
neg
sub
push
push
sbb
fimull
sbb
adc
jp
paddq
test
filds
jmp
pop
sub
cmp
and
add
sub
or
and
loop
xchg
add
fidivrs
cmp
sti
mov
loope
pop
into
mov
dec
mov
popf
nop
pop
out
add
rolb
cmp
dec
test
pop
fcmovb
jmp
outsl
lret
push
enter
sbb
jl
pop
sahf
mov
mov
faddl
mov
push
jecxz
outsl
sbb
push
xchg
dec
mov
insl
sub
out
sbb
adc
push
or
xor
and
or
inc
sbb
test
adc
loopne
sub
outsl
sbb
mov
and
pop
repz
push
stos
ficomps
rdtsc
daa
or
xchg
jno
and
mov
shll
xor
call
insb
jae
add
jl
push
cmp
ficoms
add
push
imul
jg
mov
mov
or
cmpb
rorl
out
pusha
dec
jecxz
addb
push
or
fsubr
cld
loop
add
mov
mov
dec
add
fwait
out
fisttpl
hlt
or
lret
lahf
pop
adc
sar
je
add
call
push
movsl
mov
and
outsb
add
and
mov
lret
inc
je
sub
xchg
cmp
popa
or
push
test
push
push
cmp
call
aaa
cs
dec
jp
sub
xor
clc
or
sbb
xor
xor
push
pusha
rcrb
flds
es
loope
fstpt
xor
lock
loopne
stos
pop
add
and
add
mov
sbb
das
dec
stos
in
rclb
cltd
sub
int
test
repnz
jle
movsb
add
push
push
sahf
cltd
cmp
mov
lock
hlt
aas
add
sarb
pop
pop
pusha
xor
xchg
mov
mov
push
add
dec
push
sub
mov
pusha
or
adc
and
or
add
inc
inc
inc
mov
xor
xlat
add
in
ret
sbb
mov
and
and
in
enter
inc
pop
jl
mov
jge
sbb
mov
sub
fdivrs
mov
and
xchg
lock
push
push
push
cmp
mov
out
xor
mov
add
fld
sub
daa
or
aas
inc
lock
lcall
inc
scas
dec
xrelease
ficoms
mov
data16
jge
js
xchg
and
lea
mov
xchg
nop
daa
mov
ja
add
daa
adcl
dec
subl
pop
add
push
sbb
pop
mov
ss
orb
fs
cmpl
or
mov
push
dec
les
inc
rcll
add
jnp
int
or
inc
dec
mov
jno
fs
addr16
loop
inc
cmpb
pop
mov
push
add
enter
cmp
ret
out
or
fcmovnb
add
in
popa
inc
stos
inc
mov
xor
andb
stc
add
or
inc
icebp
outsl
mov
int
leave
add
jae
mov
mov
sbb
ss
dec
push
add
jmp
push
movhlps
and
lock
xor
pop
hlt
out
jecxz
sbb
jbe
mov
and
push
jmp
push
adc
ljmp
pslld
and
out
hlt
inc
pop
push
adc
lret
add
in
dec
lds
lcall
inc
movsl
cmp
inc
lock
pop
xchg
fisubrl
dec
adc
scas
sub
addb
loopne
ljmp
dec
add
mov
leave
cmc
mov
out
add
add
in
loopne
incl
mov
dec
fisttpll
xor
pop
gs
sub
sti
test
jns
rolb
inc
fldt
and
xor
jns
cmc
test
rclb
mov
ljmp
inc
adc
popa
sub
sbb
mov
fbstp
add
pusha
sub
xor
pop
pop
add
aam
mov
mov
rolb
xchg
lret
jp
fs
push
and
jmp
add
fiaddl
xchg
push
adc
sub
push
imul
add
sub
pop
in
and
jge
lds
and
sbb
bound
add
cmp
pop
inc
pop
xcrypt-cfb
cmpsl
and
lret
add
xlat
fwait
or
inc
std
mov
scas
push
idivb
dec
mov
inc
pop
in
xchg
xor
sbb
xlat
adc
test
dec
push
jne
cmp
mov
mov
clc
btl
push
adc
add
jne
mov
cld
cwtl
xor
dec
mov
test
inc
inc
add
jne
mov
add
out
enter
mov
add
adcb
add
inc
pop
inc
gs
mov
sub
cli
test
cmpsl
or
dec
add
sarb
mov
inc
aaa
sti
imul
fldl
or
icebp
ljmp
mov
nop
scas
loopne
repz
aad
cwtl
js
jecxz
shlb
loop
ret
cltd
pop
add
adc
adc
add
out
js
inc
mov
mov
add
xchg
fisttpl
movsl
xchg
shlb
rolb
mov
and
add
in
lret
icebp
push
mov
push
jo
add
sub
add
jno
add
dec
push
mov
push
mov
sub
pop
jbe
test
mov
add
or
dec
imul
or
std
jnp
push
xchg
xchg
loopne
repz
cmc
pop
out
jb
dec
aas
cmp
pop
addb
stos
into
push
jmp
sbb
add
loopne
mov
in
sbb
cmp
fldl
stc
out
dec
shl
pusha
mov
fmulp
mov
pop
aaa
mov
and
xchg
subb
push
aam
dec
lds
push
xchg
cltd
xlat
rorl
add
mov
jg
mov
mov
add
inc
out
jns
out
int
cmc
mov
mov
sub
mov
arpl
jp
sbb
cmp
adc
imull
add
cltd
fs
add
aaa
outsb
pusha
cmp
inc
les
fiadds
cli
xchg
sub
cwtl
add
xor
cmc
and
jp
push
push
mov
xor
pusha
cmpsl
mov
addr16
pop
mov
push
testb
add
pop
cmovp
add
into
sbb
fadd
daa
cmc
adc
push
stos
adc
cmp
sbb
inc
mov
mov
or
rol
xchg
adc
add
inc
inc
enter
and
jnp
mov
adc
xor
sbb
push
sbb
xor
mov
pop
bound
jl
mov
add
xlat
mov
mov
xchg
ds
adc
call
lods
les
add
pusha
mov
push
into
scas
mov
mov
push
add
add
lock
int3
jle
add
push
cmp
add
jge
add
dec
popf
in
dec
and
inc
adc
into
dec
inc
pusha
shlb
sub
push
sub
mov
fiadds
jmp
insb
das
jbe
or
jno
int3
gs
popf
add
adc
movsb
std
rcll
addb
or
cmpsl
pushl
mov
mov
push
fldt
subl
cwtl
jno
add
aad
out
xchg
mov
add
scas
jnp
add
insl
inc
rcr
mov
jl
dec
inc
sub
and
idivb
inc
jb
add
xchg
stos
and
sbb
and
xor
add
rol
into
adc
mov
add
jbe
lcall
jl
mov
and
push
add
xor
cwtl
sub
movsb
jae
add
bound
aad
add
sub
cltd
pushf
sub
imul
shl
add
mov
ret
inc
cmp
clc
xor
jo
pusha
and
sub
xchg
add
movups
mov
add
push
push
in
addb
scas
mov
inc
insb
leave
add
jb
sbb
je
add
jg
dec
sbb
push
sub
add
xchg
and
jecxz
jno
fldenv
jnp
sbb
add
xor
sbb
inc
xor
outsb
dec
sarb
add
jo
adc
adc
insb
bound
cld
mov
mov
lock
test
dec
lret
cmc
or
js
add
and
add
imull
push
insl
pusha
fcompl
mov
stos
pop
mov
lock
push
mov
mov
add
es
testl
push
loop
dec
add
add
shlb
xorl
push
push
insb
push
roll
lret
pop
aaa
popa
mov
sahf
pop
out
add
lcall
cmp
jo
hlt
in
xchg
jae
add
mov
add
das
sub
fiaddl
aad
pop
inc
test
or
pusha
mov
int3
add
and
es
pop
xorb
cld
add
and
jle
mov
ljmp
lahf
jbe
sub
mov
jge
andb
fs
xchg
lret
aas
add
call
out
adc
leave
add
dec
fisubs
xor
add
sbb
pop
add
repnz
das
xchg
mov
add
jno
cmp
add
dec
pop
mov
cmpsl
jae
inc
fcomp
std
lcall
sbb
or
sbb
sub
lock
add
jle
mov
cmpsl
inc
xor
in
sbbl
aaa
push
add
cmpsb
sub
xor
fsubrl
mov
bound
loopne
mov
inc
pusha
roll
ret
adc
xchg
add
add
scas
aad
add
sub
push
addl
subb
pop
jnp
cmpxchg
jns
shrl
outsb
push
xchg
mov
xchg
xorb
or
aas
add
jg
js
dec
or
xor
pop
popa
pop
ds
jecxz
sbb
or
outsl
xor
or
add
sbb
xchg
repnz
xor
fadd
arpl
nop
sbb
push
push
faddl
clc
sbb
lahf
cmp
rcrb
js
test
dec
insb
divb
cmp
mov
mov
hlt
add
sub
add
dec
pop
push
rolb
add
add
xchg
mov
sub
sub
and
add
mov
pop
add
out
cs
or
cmp
push
hlt
lock
lds
mov
mov
sub
sbb
scas
add
shlb
xchg
and
add
nop
lret
imul
int
inc
aas
inc
or
sub
xchg
stc
insl
pop
mov
mov
xchg
rcll
pop
dec
push
hlt
add
int3
sub
repnz
movsb
mov
add
jbe
lcall
xor
lsl
xchg
nop
and
jge
mov
xchg
in
repnz
inc
or
add
fisttpl
addr16
cmp
popa
adc
mov
cmpsb
sub
pmaxub
or
repz
jbe
add
jb
mov
lret
bound
cmpb
je
das
popf
add
sub
call
add
popa
lds
add
jb
mov
loope
dec
bound
add
lahf
dec
adc
ja
sub
movsl
aaa
and
dec
das
inc
add
push
mov
into
xchg
pop
hlt
nopl
ss
inc
mov
inc
scas
lds
pop
cmc
add
xchg
pop
psrad
lcall
dec
push
int
cwtl
pop
push
js
insl
sub
imul
add
in
outsb
add
and
cmpsl
jecxz
mov
pop
lret
xor
sub
sbb
jb
add
neg
leave
cld
test
sub
pop
adc
inc
fldcw
pusha
repz
add
jae
cmp
inc
cld
test
sub
clc
imull
shr
loopne
add
rcrb
popa
fs
xor
adc
cmpsl
push
in
xchg
xlat
mov
or
dec
test
xchg
sbb
pop
aaa
icebp
js
add
dec
and
dec
out
xchg
inc
lret
pop
imul
push
mov
shrb
add
lahf
es
enter
mov
cld
mov
ds
out
lea
stos
mov
mov
pop
xor
jecxz,pn
adc
shlb
xchg
xchg
jle
dec
xchg
xlat
cwtl
sbb
and
cltd
inc
add
int3
inc
mov
fdivs
sub
add
aam
pop
push
and
sti
lret
ds
and
push
add
cs
icebp
popf
loopne
add
adc
sub
xchg
and
sahf
sub
cmp
add
push
sbb
repz
addl
sbb
mov
adc
lock
mov
and
xchg
mov
outsb
pop
mov
decl
vmovntdq
or
mov
add
sti
xlat
sbb
jae
xchg
mov
fcomps
dec
fistl
call
out
ljmp
push
jne
xor
sub
and
add
xor
shr
icebp
testb
aad
sbb
outsl
ljmp
jg
sti
or
xor
add
in
or
adc
add
std
lret
xchg
ret
arpl
push
rorl
cld
push
xor
outsb
dec
sbb
das
or
shld
xor
lahf
add
mov
orl
inc
push
sbb
jle
aam
sbb
imull
mov
xlat
pusha
in
sbb
add
jge
pop
rcrl
rolb
aad
pop
arpl
mov
adc
insb
pop
faddl
jmp
test
insl
and
enter
out
mov
lock
lret
loopne
icebp
inc
pop
test
loopne
mov
mov
dec
pop
faddl
ds
cli
mov
xlat
mov
gs
cltd
insb
add
lea
sbb
and
add
pop
shl
lldt
inc
lret
push
push
mov
mov
jle
add
icebp
xlat
adc
in
add
sbb
flds
cld
cltd
mov
or
les
jb
out
cli
add
jnp
push
stos
add
sbb
fwait
shlb
mov
ja
cwtl
lds
xor
or
hlt
mov
inc
add
cmc
add
das
hlt
adc
mov
add
mov
mov
enter
leave
sahf
add
shll
rclb
xchg
adc
jp
sbb
add
ds
adc
add
fwait
scas
add
pop
shlb
pop
add
bound
mov
add
jle
mov
fcom
incl
jmp
cwtl
idiv
add
cld
adc
outsl
ljmp
arpl
or
xor
into
dec
in
es
cltd
not
push
push
pushf
ds
shrb
mov
add
mov
cmp
arpl
nop
out
add
cmpsl
outsb
test
sahf
push
inc
xchg
notb
add
jg
cmp
aas
pop
cltd
jl
cli
insl
or
rcr
adc
push
test
addl
sub
add
dec
xlat
dec
inc
lcall
inc
cmp
push
adc
aas
aaa
dec
and
mov
das
cltd
notb
dec
push
outsl
leave
int3
sahf
pusha
les
mov
punpckhdq
cmp
rcr
or
es
cmp
shlb
loopne
jne
add
jnp
dec
jb
es
xor
mov
cmp
cmpl
sbb
out
pmullw
cmp
mov
xchg
lock
adc
cmp
push
subb
add
repz
fwait
sub
mov
xchg
ret
icebp
pop
lock
add
fcmovnbe
inc
bound
fdivrs
movsb
jnp
push
mov
lds
and
pop
pop
mov
jp
in
or
das
mov
popa
daa
and
hlt
cli
add
xor
icebp
movsb
aas
jmp
add
push
out
cwtl
pusha
sbb
xor
mov
add
dec
mov
sub
iret
comiss
add
or
adc
scas
lock
dec
pop
add
ja
push
mov
inc
leave
ret
test
int
insb
mov
adc
rol
pop
je
sbb
sub
add
sub
fdivr
and
xchg
pusha
mov
cmpsb
dec
dec
inc
push
lds
fmull
popf
lcall
aad
repz
mov
daa
pushw
mov
or
jno
mov
inc
dec
lds
pusha
dec
cmp
imul
pop
or
pop
add
mov
test
test
arpl
fimull
jbe
addr16
and
pop
ds
push
push
lret
jo
sbbb
push
shlb
test
or
mov
jnp
add
aam
pop
iret
push
jno
adc
inc
lret
lods
add
ret
rclb
subb
aad
fnsave
dec
addl
scas
test
fsts
ds
addps
movsb
out
nop
sbbl
push
dec
cmp
xor
jecxz
test
bnd
add
stc
imul
fldenv
pop
outsl
adc
add
jbe
xor
popa
dec
sbb
ss
mov
sub
jg
push
cmove
jb
add
idivl
xchg
sub
enter
test
mov
mov
ljmp
push
jecxz
pop
sub
inc
inc
or
xchg
mov
enter
sbb
pusha
out
or
mov
sbb
adc
sarb
add
mov
sbb
pusha
enter
add
add
iret
jmp
popa
bnd
ljmp
adc
std
adc
adc
push
cmp
jae
add
xor
imul
fwait
sbb
data16
xchg
sbb
sub
push
inc
jb
imulb
xor
inc
mov
es
cmp
xchg
pushf
and
mov
cmpsl
loope
add
jge
aas
push
jo
add
push
test
or
mov
lock
pop
xorb
sub
jne
popf
fidivl
dec
jl
and
xchg
sub
xor
hlt
imul
cmp
loope
add
inc
pop
push
jo
pop
sub
aam
lods
jnp
insb
or
sub
addl
pop
add
push
pushf
jp
mov
sub
adc
add
or
cmp
nop
xchg
add
add
inc
mov
add
testb
in
jne
clc
push
popa
aam
into
add
cmp
pop
jns
stos
add
filds
test
aad
mov
add
push
add
addr16
clc
cmpl
mov
add
int3
sbb
xor
inc
dec
frstor
jo
test
dec
push
xchg
xorb
in
ss
add
mov
adc
cltd
insl
adc
scas
xor
dec
aaa
lahf
insl
xor
dec
out
ffreep
inc
imul
pusha
cmp
outsl
xchg
xchg
inc
sbb
int3
add
dec
sti
dec
sahf
xor
push
and
inc
add
imull
push
imul
out
xor
cmp
hlt
and
mov
or
ror
pop
mov
or
add
sbb
mov
xor
push
int3
xchg
hlt
lock
js
jle
ret
add
sbb
mov
jecxz
push
add
out
pop
add
std
pop
out
add
fcmovbe
add
xchg
icebp
lcall
sub
xor
pop
fs
lds
jno
notl
ret
add
jo
dec
push
adcl
sti
and
fsubrs
addb
js
pop
or
xor
sub
pop
aam
add
ja
sbb
lds
cmpb
mov
insb
int3
roll
jle
sti
mov
imul
push
out
jbe
pop
dec
repnz
pop
stc
push
or
ret
jg
das
mov
add
inc
je
fldcw
pop
add
sbb
add
xor
and
sbb
out
inc
das
dec
lods
cli
dec
adcb
divb
mov
sbb
cmp
adc
daa
sub
push
add
dec
jbe
jmp
jns
sbb
add
xor
inc
out
mov
mov
dec
aas
add
stc
mov
js
add
outsl
jbe
cmp
repnz
cmc
nop
ret
das
outsl
fisubs
add
push
inc
cmp
inc
cmp
insb
adc
out
fwait
mov
sbbb
daa
mov
enter
pushf
popf
mov
mov
xor
xor
out
sub
sbb
ja
add
jg
dec
fnstsw
pop
xor
sbb
inc
movsb
fs
rorb
adc
in
loopne
call
cld
out
and
pop
inc
add
dec
adc
lods
mov
movsb
stos
mov
test
imul
add
mov
aaa
xchg
add
add
push
cmp
and
bnd
add
test
sbbb
add
adc
jb
push
dec
sbb
or
subb
pop
inc
mov
pop
add
fs
repz
fldcw
cmc
xlat
leave
cmp
roll
mov
jle
jmp
mov
je
inc
mov
roll
insl
add
int
orb
movsl
insb
pop
shll
jno
insb
add
and
adc
je
test
aad
pop
pop
mov
mov
push
in
shrb
adcb
sti
in
pop
shlb
sub
pop
movsb
add
loopnew
insb
jge
mov
jo
push
mov
cmp
data16
fs
mov
pop
rorb
cld
add
inc
dec
jmp
cmp
test
dec
iret
jne
pop
dec
inc
adc
roll
cltd
dec
nop
imulb
push
repnz
mov
or
mov
mov
fdiv
add
shr
jae
pop
pop
sbb
shl
lret
fdivl
in
xchg
add
into
popf
icebp
and
call
adc
pop
cld
sub
add
hlt
add
fdiv
ja
adc
scas
add
test
test
add
pop
das
sbb
xchg
ljmp
ss
or
pusha
xchg
iret
add
mov
ret
cmpb
cmp
add
aam
pusha
xlat
jbe
cmp
xorb
dec
add
adc
adc
sbb
add
mov
div
ss
dec
add
adc
dec
push
adc
inc
fs
add
dec
out
aam
jb
add
lret
stc
mov
daa
movsb
xlat
inc
dec
sub
sub
add
addr16
jl
add
rorb
jg
scas
jb
and
pop
rolb
cwtl
mov
jge
sbb
xor
mov
cwtl
cltd
cmp
cmpsb
adcb
push
dec
pop
inc
mov
fnstsw
shlb
xor
xchg
pmulhw
out
jo
mov
insb
xchg
sbbb
add
test
cli
sbb
dec
lahf
xor
fs
xchg
add
lea
pop
add
cmp
loope
push
gs
sbb
sbb
lret
mov
jns
shl
dec
inc
xor
test
add
insb
or
lock
ret
dec
sarb
add
cmp
mov
rcll
nop
jp
add
les
rol
add
mov
jmp
int
and
outsl
mov
roll
mov
push
xchg
jns
mov
add
cld
sbb
sub
cmp
add
in
ljmp
ret
addr16
push
cmpsb
cmp
mov
add
dec
es
cmovae
dec
lret
add
ret
xchg
cmp
and
cmp
jne
add
arpl
sub
and
jo
jnp
mov
unpckhps
imul
subb
dec
push
adc
mov
add
data16
xchg
pusha
call
inc
and
dec
dec
pop
mov
jmp
cmp
and
nop
mov
sub
push
push
jne
out
xchg
jb
test
enter
jbe
push
jp
lret
xlat
mov
mov
cmp
mov
add
dec
cmp
out
loop
std
inc
xor
data16
bound
sub
cmp
push
inc
sub
xor
aam
setp
push
lods
popa
pop
ss
arpl
rolb
jge
faddl
push
adc
or
or
inc
add
pop
and
add
cmp
repnz
add
add
sub
jmp
push
stos
loop
add
push
repz
jle
in
loopne
out
shlb
andb
bound
sbb
cmp
jecxz
push
popf
push
sbb
jbe
shll
push
jne
clc
hlt
jae
or
addr16
mov
mov
adc
jge
in
push
add
dec
movq
lods
lret
jb
lahf
mov
pop
in
dec
add
in
insb
pop
out
cmp
mov
xor
rclb
repnz
lods
hlt
sub
sbb
pusha
mov
pop
add
cwtl
in
jmp
lret
hlt
sub
xlat
pusha
rcrb
mov
add
cmp
dec
cmovl
notb
xor
cmp
pusha
push
push
mov
sub
lcall
adc
hlt
dec
inc
sbb
push
xor
test
clc
jae
orl
and
push
jo
add
xchg
arpl
inc
inc
add
sbb
out
jmp
inc
leave
push
enter
add
lock
pop
add
adc
cmp
sbb
js
pop
jns
or
xchg
inc
mov
mov
mov
pop
rorl
not
sbb
mov
fs
call
test
push
lret
mov
mov
mov
add
dec
test
daa
jae
add
sarb
lock
add
enter
xor
dec
or
add
inc
call
xchg
sbb
in
shufps
and
add
cwtl
repnz
mov
xor
insb
xchg
xchg
mov
mov
hlt
jmp
jp
rcll
add
push
add
dec
lods
dec
sbb
xchg
push
pop
shll
sub
cmp
movsl
add
shr
les
cli
in
outsb
sub
jne
aaa
insb
jbe
sbb
or
and
dec
mov
cltd
mov
xlat
xchg
ret
mov
in
add
or
shlb
sub
sarb
mov
call
push
sub
in
or
cmpxchg
xchg
sahf
xchg
imul
inc
dec
fistps
movsb
xchg
nop
xchg
jno
repnz
jle
mov
ljmp
movb
jecxz
out
call
jae
pop
or
or
push
or
dec
mov
stos
insl
or
push
test
negb
test
push
pusha
sahf
xlat
fstps
daa
sub
mov
mov
push
cmp
jno
test
mov
jae
jo
sbb
jbe
push
sub
mov
or
add
push
dec
mov
loopne
xchg
ljmp
out
push
adc
mov
aad
mov
xchg
push
mov
jns
fnop
hlt
in
mov
dec
fs
add
xlat
mov
push
inc
sbbb
dec
test
lcall
or
pushl
pop
add
jbe
dec
movsl
adc
xor
push
movq
rorb
xchg
mov
add
push
scas
ljmp
or
and
jnp
sbb
or
scas
pusha
add
outsb
pop
insb
xchg
fildll
push
sub
in
cli
dec
rolb
dec
imul
and
out
setp
popa
dec
bswap
mov
or
inc
or
mov
out
jne
test
mov
sub
mov
pop
push
inc
dec
dec
adc
cmp
xorb
mov
push
or
and
rcrb
xor
cmpb
inc
aas
lods
jns
xor
push
test
xchg
cmp
ljmp
inc
dec
loop
out
xor
and
sbb
stos
xor
xchg
xor
dec
jne
out
pushf
clc
pop
pop
xor
cmp
add
sbb
out
mov
inc
mov
jno
sbb
movsb
rorb
fucom
lock
or
lret
or
adc
adcl
popf
push
sub
xchg
clc
and
push
shrl
jo
pop
int3
add
pusha
in
xor
loop
pop
sahf
xor
push
lret
cwtl
inc
aaa
shll
or
lods
mov
xchg
in
mov
or
and
aad
loopne
mov
xchg
sub
out
add
push
dec
jg
mov
fistpl
call
mov
or
inc
jp
add
mov
cmpb
outsb
adc
and
repnz
push
rclb
repnz
mov
mov
mov
adc
sbbb
add
in
xchg
filds
movsb
or
in
mov
cmp
mov
fs
clc
fdivrs
push
add
or
add
push
or
sbb
fmuls
mov
inc
mov
mov
add
es
in
adc
mov
sbb
rcr
xor
and
mov
add
bnd
dec
mov
ss
cltd
or
mov
inc
cwtl
mov
loopne
push
test
fbstp
pop
pop
js
mov
js
add
or
add
orl
iret
out
xchg
and
lods
fs
push
shll
xchg
test
out
mov
imul
mov
bnd
add
pop
call
jo
test
loopne
rcr
sub
sahf
sarb
push
sub
cltd
push
mov
inc
mov
push
push
movsb
repnz
mov
daa
mov
xor
and
dec
push
je
int
xor
inc
mov
pusha
out
xchg
fildl
pop
inc
mov
add
scas
xchg
xchg
pusha
mov
add
sbb
stos
lods
lock
rclb
cmp
outsl
cmp
mov
int
into
shlb
loop
or
add
iret
add
inc
cmp
mov
jmp
and
pushf
or
rcl
mov
clc
add
movsl
xor
xor
shr
hlt
mov
dec
mov
es
jo
aam
mov
jns
push
ljmp
ja
push
pop
sbb
add
rol
and
mov
or
ljmp
push
popf
enter
sub
dec
and
ficompl
fs
jmp
rorl
add
mov
loopne
xchg
pop
sbb
je
push
arpl
cmp
adc
xchg
mov
push
mov
and
pop
scas
daa
ficoms
loopne
out
add
push
leave
testl
adc
push
ds
movntps
imul
mov
mov
push
or
je
pop
jmp
fnstenv
sub
popf
add
daa
int3
iret
int3
push
imul
push
stos
sbb
popf
or
stos
add
sbb
xchg
pop
push
mov
ljmp
out
xchg
cmc
lock
lret
cmp
cltd
sahf
je
xlat
xchg
or
cmp
test
push
adc
mov
lods
xor
les
mov
out
pop
mov
das
sub
out
enter
add
mov
xor
add
sub
pop
jle
call
je
or
pusha
sti
pop
out
push
pushf
xchg
mov
mov
xor
push
mov
out
fmuls
insb
and
out
or
add
movsl
in
aaa
insb
or
jo
pop
popa
and
and
mov
loope
addr16
jge
jecxz
and
lret
je
cmp
sub
add
push
iret
call
dec
add
aam
fs
shrb
inc
fsubs
add
call
pop
add
adc
in
mov
dec
adc
adc
push
repz
pop
and
mov
push
lods
ljmp
push
loopne
cmc
in
add
addr16
call
or
xchg
mov
cmp
arpl
nop
cwtl
enter
pushf
movsb
leave
test
shll
xchg
fs
out
repnz
inc
fs
add
sti
cmc
inc
shll
in
cmp
nop
nop
jl
add
pusha
xor
repnz
add
sbb
int
mov
xor
stos
and
push
cltd
pop
in
inc
movsb
mov
or
data16
adc
mov
jl
cwtl
fisubl
mov
and
int3
dec
xchg
loopne
xchg
cmp
int3
pushf
aas
xor
jmp
add
int3
pop
cmc
popa
mov
movsl
fs
sbb
insl
add
cmp
lret
inc
insb
pusha
adc
enter
pushf
rcrl
adc
push
aaa
subl
aad
push
push
add
sti
movsl
hlt
and
js
jno
cld
jg
adc
lahf
or
and
ficoml
ret
sub
mov
lret
ds
mov
adc
imul
mov
movsl
inc
add
sbb
ret
and
xor
cmp
push
fs
xchg
dec
cmp
adc
shrb
add
inc
or
cli
fs
fwait
sbb
or
add
adc
out
add
repz
shlb
fdivrs
dec
cmp
call
adc
mov
sti
or
shl
clc
push
mov
xchg
inc
lcall
adc
add
mov
lcall
or
xchg
punpckhwd
adc
pop
mov
mov
inc
imul
or
call
or
adc
add
pop
jo
or
inc
xchg
nop
fsubs
and
cmp
int3
xor
addl
pushw
negl
ljmp
xor
test
jecxz
cwtl
insl
rolb
mov
push
arpl
mov
shlb
popf
add
xchg
push
test
cmpsb
add
xchg
out
outsl
xlat
nop
out
in
lcall
push
enter
xchg
push
mov
in
mov
xor
enter
dec
test
cmp
and
xor
jp
push
lods
cmp
sbb
inc
stc
ss
push
add
inc
push
fcmovnbe
add
xchg
mov
iret
mov
sbb
loopne
data16
push
lock
rcrb
push
jbe
and
fsubrs
popf
sub
or
and
loop
dec
sbb
inc
add
aad
xchg
pop
repnz
imul
jne
mov
or
push
test
daa
in
xchg
add
or
xchg
out
cli
or
rolb
in
sahf
aaa
dec
inc
enter
pusha
pusha
lahf
xorl
jne
pushf
jo
inc
imul
fisubrl
bndldx
mov
lods
insb
xorb
sub
fldt
scas
xchg
fwait
loop
inc
sub
mov
cld
js
outsb
clc
or
mov
mov
stos
add
imul
sbb
or
decl
je
fisubs
scas
xchg
lcall
mov
test
or
fwait
mov
enter
ret
mov
lahf
fldenv
jbe
push
movsb
rclb
sub
xchg
xor
js
mov
sbb
aad
pop
lea
sub
in
mov
add
sub
mov
lahf
xor
jb
xchg
adc
xor
push
inc
push
scas
add
xor
push
aam
lods
xchg
xchg
in
adc
bound
mov
ret
mov
mov
push
mov
dec
and
fstpl
int3
outsb
jbe
adc
test
sbb
subl
fcomps
add
mov
loop
aad
adc
mov
add
test
jo
or
adc
add
pop
mov
loopne
push
mov
pushf
push
mov
pop
mov
pop
outsb
mov
dec
add
ljmp
xor
sub
mov
call
xor
push
fnstenv
push
imul
repnz
je
add
loop
add
test
stc
pusha
cld
call
repz
int3
mov
lock
jmp
mov
mov
clc
ret
test
call
bound
xor
mov
lcall
loop
or
scas
daa
xchg
mov
jmp
lods
inc
jb
and
es
loopne
inc
xor
jge
pusha
push
icebp
popa
sub
fstpl
sub
xchg
mov
push
inc
sbb
mov
cmp
fsubrs
out
add
notb
or
inc
jmp
and
shll
push
in
xchg
loope
fisubs
sbb
push
mov
lcall
adc
sbb
inc
testb
sub
xchg
pop
popf
sbbb
jns
xchg
and
fwait
mov
or
add
xchg
das
sbbl
jno
fwait
cwtl
mov
jae
add
ja
jbe
lods
xchg
or
mov
mov
clc
rcrl
subl
sub
sub
pop
adc
mov
sbb
and
nop
cmp
loopne
inc
shll
push
jp
std
or
mov
push
call
sub
sbb
mov
add
cmp
repnz
mov
xor
in
out
lea
jp
shrl
mov
or
hlt
dec
cmp
shrb
mov
push
imul
shlb
add
lret
mov
or
jmp
add
outsl
push
sub
xchg
and
addr16
lock
call
cmpb
inc
inc
dec
sarb
imul
hlt
dec
inc
pop
add
mov
daa
gs
fcomps
xchg
out
stc
in
inc
or
les
pop
je
adc
fs
fistpll
lcall
add
mov
shl
aas
fildl
es
test
icebp
jmp
add
add
rcr
mov
hlt
lds
xchg
addl
std
cld
xchg
add
lret
sbb
adc
decb
push
or
xor
aam
sbb
jbe
add
outsl
push
dec
ret
xchg
movb
xchg
stos
add
das
push
loop
cld
push
movsb
add
roll
arpl
cli
in
cltd
cwtl
loopne
xchg
movsb
loope
leave
dec
loope
sub
dec
inc
pushf
dec
xor
inc
shrb
xchg
pop
sbb
lret
and
mov
pop
or
mov
add
lahf
pop
mov
out
mov
inc
test
push
xor
push
and
add
ret
add
cmp
mov
add
xchg
dec
xor
sub
and
std
cwtl
sbb
pusha
fwait
aaa
inc
pmuludq
or
dec
cmp
insl
xchg
mov
hlt
frstor
dec
js
push
call
sbb
imul
cltd
sti
pushf
dec
sahf
sbb
mov
cmpsb
xor
fwait
push
push
adc
out
daa
mov
pop
loope
mov
mov
xchg
inc
es
mov
mov
movsb
and
mov
hlt
add
inc
mov
and
add
jmp
movsl
lret
aaa
rcll
mov
mov
pop
jno
xchg
sahf
adc
add
pop
cmp
jg
sub
and
into
xor
enter
mov
cmpsl
test
pop
pusha
mov
adc
outsl
adcb
loope
dec
adc
sbb
and
sbb
dec
lcall
and
std
and
andb
jo
stos
jp
movsb
sub
xorl
nop
mov
stos
xchg
fsubs
xchg
in
and
mov
mov
out
pop
push
xlat
sbb
add
fstl
mov
std
sbb
inc
loope
int
das
call
scas
movsl
rcrb
mov
rolb
mov
arpl
rcr
rolb
outsb
jns
fldt
push
ja
scas
push
fs
aas
stos
movsl
inc
pop
sbb
rolb
add
inc
cld
repnz
inc
mov
ficoml
stos
stos
dec
int3
fldl
in
pusha
out
js
enter
jns
add
cmpsl
adc
test
sbb
xchg
sahf
pushf
push
dec
aad
subb
out
push
testl
stos
and
push
xor
sub
imul
jns
dec
sub
dec
mov
push
xor
rcrb
mov
add
pusha
inc
ret
rorl
add
jb
loopne
enter
dec
add
cmp
data16
xchg
call
xchg
jge
add
add
mov
call
jno
adc
bound
cmp
xor
rol
sbb
mov
add
hlt
or
sbb
out
int3
repnz
orb
xor
xchg
inc
stc
mov
sub
inc
test
call
xchg
push
pop
inc
pop
add
push
cld
cltd
mov
push
pushf
push
cld
hlt
shll
jmp
fadds
lock
push
sub
xchg
and
out
nop
push
shrl
enter
mov
int
add
nop
daa
xchg
sbb
inc
bound
add
out
xor
jp
adc
add
jmp
or
add
loope
or
insb
mov
xor
xor
jle
push
rclb
or
dec
mov
lret
inc
push
dec
dec
fmull
adc
les
pushf
dec
aam
cli
jmp
sarl
jae
clc
jbe
pop
test
dec
push
call
pop
out
hlt
test
xchg
cmp
jge
push
push
mov
outsb
jg
inc
inc
nop
ljmp
jmp
mov
push
add
xlat
add
lds
adc
stc
cwtl
adc
movsb
in
pop
push
cmp
adc
xchg
xor
sub
in
outsb
push
xchg
jno
mov
outsb
clc
adc
cmp
or
xchg
or
pop
mov
stos
adc
add
loopne
xorb
into
je
leave
icebp
mov
scas
xchg
rorb
push
or
mov
mov
lcall
cwtl
fwait
andb
and
loopne
shrb
loop
pop
add
repz
data16
sbb
sahf
mov
fnstsw
jo
lret
mov
inc
pop
add
adc
add
xchg
mov
xchg
aam
and
push
stos
or
and
jnp
shr
aam
inc
lods
andl
xlat
cltd
lcall
adc
mov
shlb
out
dec
xchg
sbb
mov
lds
add
dec
nop
jb
push
lods
mov
push
mov
test
out
add
xchg
dec
dec
aaa
ds
mov
aad
dec
add
dec
xor
mov
in
jl
pop
subb
cwtl
adc
push
in
jae
adc
push
cmp
es
lods
mov
pop
mov
pop
jbe
mov
aam
sub
cs
pop
add
out
lahf
mov
arpl
mov
sub
jo
stc
insb
mov
xchg
add
mov
pop
sbb
dec
movsl
cmpsb
jns
adc
arpl
mov
int3
jo
xchg
push
mul
addl
fildll
in
loope
popa
push
inc
mov
mov
jp
add
call
fiadds
fcmovbe
jle
inc
xchg
insl
cmpb
push
sub
sub
push
inc
mov
int3
add
cmp
adc
sub
test
loope
rolb
js
mov
add
repz
bound
nop
push
fnstcw
inc
rcl
pop
and
sub
dec
cmp
popf
andb
push
mov
push
mov
insl
add
ror
push
jno
sahf
or
xchg
sti
mov
mov
add
mov
mov
xor
cwtl
adc
and
movb
and
hlt
push
lea
push
jne
cwtl
bnd
xchg
inc
test
ljmp
js
int3
inc
dec
stc
je
cmpsb
call
mov
stos
add
lea
push
push
fstl
cld
sbb
popf
jl
insl
outsl
add
rorb
mov
add
or
mov
pop
mov
mov
add
xchg
add
sbb
sbb
lea
out
xor
pop
add
pop
jle
mov
test
in
fnstcw
sbb
adc
adc
or
gs
stos
mov
mov
add
cmpsb
cmp
outsb
dec
enter
dec
add
and
mov
cmp
rclb
lahf
lock
inc
sbb
decl
adc
xor
jp
add
lods
enter
pop
jo
pop
add
incb
std
pavgb
mov
pop
cld
hlt
test
adc
sti
test
sbb
dec
add
mov
xchg
cmp
jbe
pop
jge
mov
add
jae
andb
xlat
mov
insb
and
jg
jl
sbb
xor
jne
mov
dec
hlt
adc
pop
mov
lock
sbb
test
aad
lret
or
ss
xchg
and
jmp
mov
loop
mov
orl
test
outsb
into
aad
int3
and
xchg
pop
dec
add
push
xchg
or
in
mov
addb
sub
decb
mov
daa
aas
mov
add
add
push
cmp
add
sub
and
xor
cmp
repz
fcompl
stos
or
add
iret
mov
push
dec
push
aas
xor
lods
mov
fldenv
pop
cmc
std
rolb
sti
sbb
movntps
mov
call
mov
add
add
in
mov
or
rcr
cmp
lds
add
mov
jne
faddl
test
xchg
into
adc
mov
xor
inc
movsb
mov
mov
inc
and
das
inc
or
sub
sub
aas
mov
test
push
or
movb
or
mov
clc
inc
mov
mov
add
dec
iret
hlt
js
add
clc
test
cld
push
push
add
adc
xchg
push
add
js
bound
mov
jae
cwtl
test
add
sahf
adc
adc
insl
mov
xchg
sti
add
push
stc
dec
and
ljmp
movsl
mov
add
push
add
and
sub
add
bound
cmp
arpl
cmp
add
popf
ljmp
dec
inc
add
sahf
pop
and
scas
dec
mov
sti
cmp
xchg
fbld
dec
sbb
push
mov
add
adc
push
hlt
add
pop
scas
add
insl
cmp
mov
stos
cmp
cltd
add
dec
inc
xor
cmp
rcll
pop
ret
jno
and
add
mov
gs
rorl
int
in
xchg
ret
sub
jle
adcb
repz
jmp
cld
add
scas
add
push
stc
jno
push
xchg
in
sahf
out
cmp
dec
jg
add
jmp
cmpsb
add
xor
cltd
xchg
sub
sbb
sbb
cmp
inc
icebp
test
mov
shl
rolb
push
rclb
jo
push
push
scas
in
call
ret
add
pop
mov
aaa
or
pop
add
cmp
add
add
add
adc
pop
loop
hlt
add
test
and
jecxz
jo
insb
lahf
dec
inc
add
mov
xorl
fildll
mov
imul
add
icebp
or
decb
mov
xchg
add
adc
jb
add
mov
add
mov
or
std
repz
cwtl
add
pop
cwtl
lods
aas
lret
or
mov
in
js
movsl
hlt
popf
xor
push
add
or
mov
mov
sub
das
call
sbb
aas
push
test
add
lret
out
add
in
mov
add
jno
js
dec
add
adc
push
dec
mov
es
call
sub
fldl
lret
into
arpl
lods
sahf
mov
xor
adc
jmp
clc
and
or
dec
lahf
add
gs
mov
xchg
inc
adc
fdivr
dec
inc
shll
mov
mov
dec
adcb
out
int3
sub
jnp
add
and
mov
adc
pop
xor
jle
pop
inc
mov
hlt
out
add
push
fs
mov
pop
into
mov
sbb
mov
add
ljmp
pop
je
nop
add
leave
lahf
jecxz
imul
fstp
test
add
xor
push
add
push
cmc
inc
and
mov
add
jb
aam
mov
mov
jp
sub
xor
pushf
mov
loop
add
clc
mov
in
add
pop
dec
sbb
shlb
add
adc
xor
and
add
mov
xor
sub
stc
add
mov
xchg
adc
dec
pop
or
push
inc
push
push
push
insl
cmpsl
shl
fwait
rorl
add
sbb
test
mov
in
add
push
aaa
xor
pop
imul
add
test
push
loop
pushf
faddl
scas
push
out
repz
fildl
add
sub
add
and
pusha
pop
insl
pop
movsb
ja
pop
xchg
daa
pop
subb
cmp
arpl
mov
mov
sub
sub
and
int
add
cmp
and
in
push
je
int3
or
lock
add
lods
or
dec
shrb
ret
jns
adc
and
cmp
sbb
outsb
dec
jns
xchg
adc
mov
cwtl
mov
adc
leave
mov
xchg
xchg
out
pusha
ficoml
clc
add
out
mov
mov
into
or
mov
imul
or
test
sbb
cmpb
out
add
adc
imul
mov
lret
int3
jnp
add
push
sahf
add
mov
je
andl
out
in
add
in
inc
mov
push
jnp
add
xchg
cmp
ds
push
test
sahf
aam
insl
popf
repz
loope
out
and
hlt
test
outsl
jecxz
mov
lods
popf
or
push
inc
enter
push
mov
or
add
cmp
mov
mov
add
in
and
jno
cmp
ljmp
lahf
dec
push
nop
adc
loopne
sbb
jae
push
add
inc
in
pop
iret
push
rorb
fwait
out
cmpsl
loop
dec
aad
add
hlt
fcoms
filds
push
mov
enter
jbe
dec
sahf
inc
into
push
cmp
sbb
push
add
shll
mov
pause
add
int
ljmp
stos
nop
xchg
jo
push
xchg
mov
push
out
inc
rorb
lods
rorb
mov
add
clc
lret
not
inc
mov
mov
xor
lret
data16
add
mov
sti
mov
or
xor
adc
pop
add
and
icebp
mov
popf
push
mov
mov
add
add
cltd
jmp
sahf
and
add
add
pop
dec
adc
cmp
aas
xchg
andl
xor
rolb
push
outsb
push
out
pop
stos
ret
in
mov
sbbl
cmpsb
rcrl
add
jmp
je
mov
add
out
scas
mov
jne
add
sbb
add
insl
xor
sarb
roll
jmp
mov
ud0
xor
pop
sub
daa
popa
out
push
and
in
imulb
mov
mov
pop
fdiv
jmp
and
out
ret
pop
loopne
ss
int3
push
jno
cmp
icebp
jnp
lret
sub
jmp
sub
shll
push
repnz
in
sub
add
stos
ror
loopne
rclb
dec
shll
or
push
pushf
xchg
pusha
hlt
shr
add
xor
xor
cmp
das
push
jge
iret
or
cmp
std
pop
outsl
adc
mov
pusha
jns
clc
push
cs
in
pop
movsl
sub
sbb
insl
inc
xchg
xchg
add
call
add
cmc
pusha
popf
pop
movsl
or
clc
xchg
jge
add
test
in
mov
rcrb
lret
cld
addb
mov
add
pop
add
nop
mov
cmpsb
dec
jl
mov
mov
jae
fstpl
mov
fdivrl
mov
nop
mov
cmc
xchg
mov
add
and
and
cmp
pop
add
add
imul
add
sub
lret
and
or
mov
add
or
sub
xchg
add
fs
pop
mov
sub
jo
jae
pop
xchg
sbb
repnz
in
testb
mov
loop
add
adc
pop
pop
inc
pop
sbb
aaa
idivb
add
push
jne
fcomps
or
push
scas
cwtl
mov
inc
lods
add
mov
out
jbe
pop
insb
mov
mov
add
add
pushf
data16
adc
ljmp
mov
push
fldenv
xor
cli
mov
bound
and
and
mov
cmp
ljmp
and
es
add
mov
fdivs
add
repz
jne
jo
push
inc
xlat
adc
std
mov
call
add
dec
dec
ja
inc
cmpsl
ljmp
and
add
fdivp
add
shl
jbe
call
fsubrl
xchg
mov
mov
mov
or
sbb
add
fs
movsb
and
or
aam
sbb
orl
jle
mov
adc
loop
nop
mov
mov
imulb
add
push
jno
repnz
push
dec
mov
mov
xchg
lock
les
insb
jo
dec
add
pop
in
xchg
adc
sbb
out
pusha
dec
cwtl
and
les
mov
add
cmpsl
add
cmp
mov
movsb
adc
mov
sbb
add
mov
das
in
js
jmp
mov
fsubrl
insb
add
enter
and
and
push
inc
mov
add
add
sub
shlb
and
sbbb
cmp
les
xchg
loop
std
xlat
leave
and
pop
jo
mov
shlb
inc
fcompl
sub
xor
shr
pop
cld
xor
dec
orl
xor
ret
xchg
push
jne
lock
pop
and
jns
mov
cmpsl
cld
fdivl
lcall
in
dec
xchg
fdivs
cmp
or
xchg
loopne
lock
movsb
cwtl
dec
stos
aam
mov
push
mov
pop
mov
jne
adc
test
mov
test
jle
mov
leave
hlt
xorb
in
nop
lret
pop
enter
pop
pushf
bound
add
out
and
enter
and
pop
adcl
mov
push
sbb
xchg
inc
sbb
pop
adc
aaa
addb
sub
inc
sbbb
dec
data16
sarb
mov
jno
sbb
add
push
push
mov
addl
lret
scas
hlt
ds
cmp
pop
in
faddl
sub
into
jge
adc
cltd
enter
pop
push
mov
jle
jbe
fldl
cld
jmp
mov
nop
fdivrl
in
addb
loopne
cltd
pop
xchg
cwtl
add
in
out
call
inc
mov
dec
fwait
add
icebp
cld
loopne
sbb
pushf
add
ds
repz
lret
jne
dec
push
mov
mov
xor
fisubl
mov
lahf
xchg
add
xchg
add
xor
and
sub
fstpl
into
mov
adc
les
iret
pop
popa
add
arpl
test
mov
sahf
adc
or
xor
and
adc
cmp
add
jecxz
clc
adc
cld
or
nop
add
sub
fisttpll
mov
or
push
sub
inc
jnp
pusha
cmp
or
jae
jno
xchg
pop
push
ds
or
jl
inc
cltd
mov
add
ds
inc
cmpsb
loopne
mov
les
or
int
test
mov
js
pushf
mov
in
mov
sahf
decl
test
xchg
cmpsb
je
add
out
add
insl
ljmp
xor
dec
stc
cwtl
int
pop
jb
data16
or
and
mov
aas
and
rolb
pop
dec
mov
dec
push
cmpsb
fsub
or
add
cmc
cmp
scas
leave
mov
adc
jl
pop
push
push
xor
mov
fdivs
or
mov
jns
pop
bound
into
xchg
div
lret
adc
jecxz
mov
sub
ficoml
mov
adc
jnp
cld
push
xchg
jp
add
mov
enter
fisubrl
mov
aaa
leave
movsb
cmp
aad
sbb
mov
cmpps
push
lock
sub
mov
cmc
push
in
sbb
add
insb
movsb
nop
xchg
inc
addl
adc
fwait
xor
adc
adc
and
and
clc
mov
or
jb
sahf
int
mov
add
addr16
es
sbb
jmp
and
mov
mov
jl
adc
inc
call
rclb
xchg
cwtl
std
loopne
shrl
mov
jg
dec
sbb
mov
or
faddl
xor
jns
add
inc
pop
cld
xchg
xchg
jne
xchg
int3
add
xchg
or
mov
add
sar
pop
sbb
orb
sub
push
rorb
cmpsl
cmpb
sbb
jne
inc
xchg
cmp
dec
jl
call
inc
test
mov
dec
inc
sub
pusha
mov
sub
xchg
in
mov
lock
pop
rorb
int
inc
and
xchg
jne
jp
adc
pop
cmp
daa
testb
pop
fbld
pushf
stos
in
and
dec
clc
pop
sbb
add
test
push
and
push
add
adc
add
sbb
adc
inc
and
scas
pop
inc
cmovl
int
mov
push
xchg
stc
cltd
int
bound
and
mov
movsl
mov
adc
sub
jns
fwait
int
xchg
cwtl
rclb
das
mov
push
lds
rorb
mov
incb
inc
and
movsw
leave
into
add
mov
or
lds
lahf
test
insb
push
xorl
inc
cmp
push
push
jbe
daa
pop
call
adc
inc
into
rcll
addl
inc
push
mov
cli
sub
cwtl
aad
mov
jl
or
sub
xor
popa
lret
cltd
adc
les
sbbb
pop
xchg
dec
push
insb
push
dec
cltd
dec
mov
sbb
daa
cmp
jb
decb
enter
jne
rorb
int
in
sub
xchg
or
xor
push
aam
push
in
pusha
cwtl
adc
adcl
push
mov
hlt
shrb
mov
ljmp
int3
cwtl
or
lea
add
addr16
arpl
or
inc
sub
push
cmpb
adc
adc
out
test
mov
xchg
lret
or
in
mov
add
push
jne
jb
sub
out
pop
sub
jmp
pop
shlb
sub
out
inc
mov
lret
mov
and
inc
mov
adc
sub
xlat
cmp
jmp
inc
or
pushf
inc
cmpsb
or
xor
in
fs
push
mov
add
repnz
mov
jp
mov
dec
mov
jg
xchg
adc
dec
inc
jnp
push
addb
add
xchg
clc
inc
adc
mov
inc
imul
jne
cmp
gs
jmp
icebp
movsb
cwtl
jl
push
cmp
push
cltd
and
cmp
dec
push
sub
shll
push
inc
add
xor
mov
add
repz
lock
mov
mov
les
xchg
adc
nop
sbb
jae
ja
sbb
xor
addb
jns
inc
lcall
ja
ss
std
jno
ficomps
orb
cli
sub
or
daa
adc
mov
add
jmp
imul
aaa
sarb
cmp
mov
arpl
sti
add
push
mov
idivb
aad
loopne
mov
push
sbb
mov
gs
dec
jl
pusha
sub
ret
mov
jne
add
aad
mov
mov
cltd
jo
loopne
add
fists
rolb
fcmovnu
sbb
mov
pop
int3
out
cmp
insl
mov
sub
add
cwtl
setb
pop
push
or
add
js
mov
mov
add
mov
mov
jl
adc
pop
dec
mov
pusha
xchg
std
lahf
and
mov
fwait
std
loopne
cmpsl
testb
adc
shrl
pushaw
mov
jne
test
pushf
push
add
adc
loopne
data16
xchg
mov
popf
out
and
lds
lret
jp
adc
pop
lods
or
mov
sub
mov
add
xor
scas
cmovl
mov
or
and
xor
pop
or
testl
push
inc
mov
sahf
push
pop
or
inc
popa
jno
jg
arpl
nop
pusha
push
cmp
and
mov
cmp
sub
addl
xor
scas
xor
jl
add
movsb
out
rcrb
or
push
jl
xor
cmp
add
inc
popf
mov
lock
jge
inc
mulb
enter
pushf
xor
xchg
repz
or
xchg
mov
inc
pusha
pushf
out
xchg
popf
add
jp
inc
mov
dec
ljmp
push
add
aam
cmp
les
or
mov
into
sbb
add
push
mov
inc
sbb
dec
shlb
imul
les
cmp
push
and
xor
scas
push
push
adc
imul
sub
fmul
addr16
aam
mov
and
sbb
ja
jg
mov
in
and
pop
cmp
lret
jne
sbb
inc
pop
out
or
enter
lods
sbb
add
scas
mov
xchg
jp
out
add
popa
insl
fsubs
mov
stos
mov
lcall
fistpll
ret
cwtl
mov
add
out
xchg
insl
inc
adc
andl
or
stos
movsb
shrb
nop
pop
inc
fiaddl
sahf
inc
nop
mov
xor
adc
inc
add
inc
jnp
xlat
cmpsb
test
and
add
rorb
xchg
pop
adc
aas
cltd
mov
inc
xor
dec
cmp
sub
scas
mov
mov
scas
or
pop
add
mov
xorb
stos
mov
rcrb
mov
in
add
and
leave
es
nop
and
adc
aas
xor
ljmp
inc
nop
mov
sbb
fwait
lfs
or
in
les
imul
push
in
cmpb
mov
mov
xor
scas
js
pop
inc
jno
xor
mov
and
xor
mov
mov
and
mov
mov
or
popa
mov
hlt
adc
les
hlt
pushf
xchg
adcb
test
cmpl
and
dec
adc
or
pop
or
inc
push
or
pop
add
xchg
add
fldt
andb
repz
ss
cmp
fs
addr16
int3
sarb
mov
or
andb
sti
scas
aad
add
mov
in
ffreep
xchg
leave
repnz
add
pop
dec
mov
sub
mov
xor
nop
leave
popf
push
push
cmc
shlb
or
fisubrs
add
xor
mov
xor
lods
add
sbb
add
inc
add
movsl
hlt
lds
ja
in
add
cmpsl
dec
pushf
or
js
leave
inc
dec
pusha
out
popa
push
and
xchg
add
jae
outsb
adc
mov
add
jge
mov
push
mov
rorb
cmp
rcrb
and
add
inc
and
add
fimull
jnp
sbb
lods
or
jmp
mov
test
mov
lcall
cmpb
adc
clc
repnz
cwtl
dec
xor
mov
mov
dec
or
and
xor
add
dec
xor
jmp
xchg
and
je
mov
or
mov
sub
insb
testb
lock
or
add
mov
adc
jg
fists
lahf
hlt
adc
mov
pusha
cmp
jmp
push
ljmp
call
adc
hlt
bound
mov
jge
jne
add
or
dec
shlb
dec
out
cmp
sub
movsl
or
adc
aas
outsl
pop
fs
jns
dec
cmp
out
mov
adc
cs
outsb
xor
or
inc
mov
inc
ficompl
and
out
mov
adc
cmc
cld
mov
add
hlt
sbb
pop
or
adc
xor
xor
xchg
nop
add
cmp
dec
fadds
mov
pushf
and
subl
push
js
add
add
imul
lss
std
fmuls
pop
add
fwait
test
cmp
xor
orl
dec
cwtl
fs
and
lock
mov
inc
push
lret
push
addb
in
and
fs
fcoml
push
mov
lret
adc
js,pn
lods
xor
decb
sbb
scas
jge
adc
sub
pop
mov
es
test
ja
inc
inc
xchg
add
push
add
xor
pusha
je
mov
and
fdivs
shlb
xorl
and
add
inc
adcl
sbb
xchg
inc
and
int3
outsl
rcrb
and
xchg
dec
loopne
add
bound
adc
xor
dec
insb
mov
push
add
mov
mov
jnp
stc
add
sub
push
mov
ljmp
inc
cmp
inc
xchg
jno
mov
and
aam
mov
lret
rcrb
mov
jbe
jne
mov
scas
mov
sbb
mov
pop
mov
add
jg
push
xchg
xchg
mov
cmp
aam
add
es
mov
mov
mov
or
xor
lods
out
xor
shl
mov
clc
pop
cmp
inc
es
xchg
je
and
push
je
aas
jge
sbb
push
loope
pop
push
adc
dec
loope
pop
push
adc
and
jg
push
adc
push
loope
dec
push
adc
loope
dec
push
sub
nop
loop
push
sbb
sbb
addr16
std
popf
mov
icebp
xchg
or
pusha
mov
jne
adc
xor
push
sbb
lock
jns
push
and
or
mov
test
mov
dec
mov
adc
sar
mov
addb
xchg
mov
ficoms
std
xlat
addb
test
add
loopne
popa
insl
and
and
mov
xchg
mov
enter
jge
std
adc
ja
dec
loope
repnz
inc
loop
repnz
xor
cmp
xchg
gs
inc
jb
enter
je
hlt
xchg
repnz
inc
xchg
insl
xchg
pop
ljmp
ja
pop
shlb
psadbw
aad
jecxz
mov
add
pop
call
push
insl
test
add
cli
mov
inc
scas
adcl
sbb
imul
sahf
jmp
test
or
gs
mov
out
iret
push
adc
fsubs
les
outsb
or
mov
popa
jecxz
enter
mov
xlat
dec
and
nop
add
loop
lods
sbb
xorl
clc
or
pop
and
testl
ljmp
mov
pop
icebp
out
inc
add
inc
fs
hlt
gs
fsub
rolb
aad
ret
adc
add
jo
rolb
outsl
test
add
insb
bound
ds
movsb
leave
inc
inc
loopne
add
cvtpi2ps
shlb
cmpsb
and
dec
mov
pusha
push
xchg
loope
inc
insb
sub
push
and
or
mov
mov
xchg
or
addr16
fs
add
test
mov
fisubl
mov
das
mov
add
pop
ret
adc
cmp
add
lods
iret
lahf
subl
pusha
push
and
scas
cld
pop
hlt
rcrl
mov
jo
add
scas
push
pop
add
test
mov
jecxz
sub
rcll
or
nop
adc
mov
cmp
sbb
repnz
xchg
add
sbb
and
cs
and
sbb
outsl
push
and
jb
sbb
mov
add
jbe
mov
mov
jmp
mov
xchg
xor
xor
or
dec
test
inc
ret
push
xchg
cmp
mov
inc
ror
and
inc
rolb
ret
repz
andb
add
out
jne
loopne
lods
sbb
adc
inc
addr16
and
and
xor
sbb
xor
sbb
pop
inc
xchg
or
mov
xchg
and
call
and
or
pop
lea
xor
addr16
scas
je
jbe
add
adc
mov
adc
mov
test
mov
cltd
push
mov
filds
mov
xchg
add
mov
rcrb
lret
jmp
aaa
or
push
push
das
popf
adc
cmp
scas
mov
and
dec
sub
push
mov
mov
push
add
push
outsl
sbb
pop
and
dec
mov
add
ljmp
call
adcb
loope
cmp
jns
dec
rcrb
dec
xchg
shll
dec
aaa
dec
cmpb
add
sub
cmc
cmp
dec
lahf
pop
popa
subl
lods
mov
pop
cmc
cmp
mov
add
scas
ss
and
lods
insb
adc
imul
rorl
xor
cmp
and
push
add
push
sub
mov
cmp
inc
mov
leave
sbb
add
hlt
xor
mov
pop
sub
jne
adc
rol
add
push
cmp
pop
or
lds
jnp
stos
jb
shrl
mov
int3
mov
int
cmp
lea
and
jg
inc
mov
add
mov
mov
add
sahf
and
adcb
add
lcall
in
adc
adc
les
jbe
pop
add
or
add
out
mov
and
in
pop
add
adc
sub
fildl
js
adc
gs
rcrb
pop
and
call
pop
rorb
sbb
das
mov
add
or
dec
call
add
pusha
dec
call
movsb
push
popf
psubq
dec
fsubs
add
mov
pop
aas
imul
in
sbb
cmp
sbbb
ss
jl
inc
and
out
lret
cld
push
and
insl
psrlq
mov
insb
out
leave
mov
loopne
xlat
out
inc
xchg
sbb
ljmp
pop
or
dec
jnp
dec
jo
rcll
cli
into
add
inc
mov
and
hlt
es
pop
sub
jp
or
lcall
ret
repnz
cmp
call
ja
insl
adc
mov
push
add
insl
fwait
dec
imul
subl
pop
dec
sub
mov
ds
imul
mov
mov
pop
inc
cltd
add
out
adc
jle
mov
mov
insl
sbb
stc
divb
sbbb
outsb
sbb
lcall
jl
jne
popa
sub
pushf
sbb
rorl
nop
mov
add
sub
cli
movsl
xor
and
sbb
cmpsb
test
stc
dec
fs
add
lods
orb
sub
mov
or
add
stos
jmp
les
mov
mov
xor
add
add
mov
outsb
jecxz
cmp
shlb
pop
mov
jno
mov
sbb
movsb
add
das
dec
inc
sub
xor
push
pushf
andb
jne
fwait
dec
int3
test
and
cmc
mov
aam
and
daa
jae
mov
cmp
aas
sahf
adc
dec
xchg
js
add
dec
sti
mov
or
adc
fldt
lahf
jne
shlb
loop
repnz
push
jne
inc
das
pushw
mov
sarb
mov
inc
cs
repz
shrl
repnz
ljmp
mov
mov
sbb
mov
jb
sub
stc
rol
xlat
cmp
sub
sti
sbb
push
enter
out
xchg
pop
xchg
inc
loopne
add
loopne
push
mov
cmp
adcl
jge
pop
mov
testb
cmp
add
js
mov
jbe
pop
sub
leave
pop
or
ja
js
push
sbb
jbe
add
and
lock
sbb
or
push
push
testb
repnz
sub
lret
cmp
dec
sub
in
mov
dec
and
add
pop
test
or
dec
or
test
xor
fadd
arpl
dec
lcall
rcrl
jecxz
stc
add
or
mov
jo
mov
call
hlt
idivl
mov
add
cmpsb
scas
mov
xchg
adc
and
mov
aad
outsl
cld
add
ss
mov
dec
push
cmp
mov
inc
js
mov
or
sbb
add
outsl
je
pop
adc
and
xor
xor
pop
sbb
mov
mov
andl
xchg
or
pop
or
jge
mov
xchg
sarb
push
ljmp
ds
and
push
xchg
and
popl
clc
or
xlat
push
inc
xor
pop
push
sbb
push
mov
mov
xchg
les
jo
sub
insb
je
mov
and
adc
jecxz
insb
xchg
outsl
jo
jl
pop
pusha
dec
mov
add
or
sbb
andl
or
outsw
imul
add
jb
mov
mov
add
movsl
xor
jl
mov
rcl
mov
pusha
xchg
or
or
imul
pusha
sti
pop
mov
std
mov
sub
lock
lret
test
aaa
sbb
adc
mov
pop
inc
pop
rcrb
cld
lahf
inc
push
adc
stos
xor
jmp
mov
std
pop
hlt
cld
mov
pushf
mov
arpl
mov
xor
pop
add
sti
jns
sbb
insb
sub
popa
bound
add
inc
pusha
aaa
loop
cmp
jecxz
xchg
clc
iret
pop
lock
jo
mov
jg
repnz
adcl
and
mov
js
movb
mov
es
adc
cmp
add
sbb
add
inc
xchg
cmp
xchg
add
std
sub
mov
cmp
mov
add
insb
sahf
xchg
add
repnz
mov
xchg
mov
lret
js,pn
inc
push
cmp
sbb
insb
movb
add
out
leave
adc
or
outsb
inc
cmp
push
in
add
pop
inc
imul
pusha
pushf
loopne
and
test
mov
int3
mov
lods
sub
mov
sahf
mov
pop
shrl
push
repz
and
mov
pop
mov
cld
fadds
push
add
pop
push
fwait
mov
lret
in
inc
popa
xor
loop
repnz
add
sub
add
shrl
nop
loope
and
je
inc
add
out
out
int
sbb
and
push
inc
incl
js
or
stos
xchg
xchg
lret
sub
xor
fdivs
or
mov
loopne
mov
das
add
pushf
xchg
lock
ja
add
popf
ljmp
mov
clc
mov
lods
sbb
xor
aas
aam
pop
dec
int3
andb
movsb
adc
ret
pop
mov
dec
cmc
cmp
dec
push
rcr
test
add
jb
add
iret
dec
push
cltd
add
subb
dec
psllq
xor
mov
in
pop
mov
pushf
lret
jbe
iret
and
fldt
data16
sbb
loopne
cmpsl
xchg
test
mov
adc
jae
adc
lahf
dec
push
mov
mov
outsl
test
push
cmp
or
psrlq
lret
inc
in
loopne
in
push
add
adcb
sbb
gs
pop
scas
or
inc
jo
adc
jae
ljmp
adc
dec
add
aas
leave
mov
pushf
mov
jecxz
mov
add
inc
pop
add
cmp
stos
movsl
mov
les
xchg
add
jns
mov
mov
jecxz
arpl
in
xchg
clc
shlb
cld
adc
and
je
sbb
lods
push
add
inc
lods
std
enter
stos
xchg
push
inc
aaa
data16
or
or
inc
aad
pusha
jo
or
inc
add
xchg
cmp
pop
ljmp
std
bound
gs
nop
mov
xor
pop
sbb
or
xchg
sbb
dec
inc
add
push
jns
adc
mov
lea
in
push
adc
imul
jl
in
inc
je
dec
xchg
mov
dec
push
add
fildll
inc
xchg
cld
inc
les
adc
push
xchg
add
push
push
int3
dec
push
pop
pusha
popf
es
test
filds
sbb
or
adc
mov
scas
and
xor
aam
add
fstps
fcoml
push
or
xorb
mov
ficoml
test
pop
mov
jle
jne
push
test
jne
mov
mov
and
mov
jns
clc
adc
add
fistl
add
pop
and
push
stc
mov
xor
push
or
test
and
add
inc
les
cmp
add
mov
addr16
mov
inc
push
lods
mov
mov
sbb
rdmsr
pop
stc
insl
clc
or
adcl
daa
xor
in
std
dec
icebp
inc
add
adcb
mov
xchg
jmp
movsb
push
dec
imul
fidivrs
add
stos
lcall
into
dec
inc
cmp
psubw
loopne
mov
clc
rolb
repnz
icebp
ficoml
cmp
cmpsl
call
push
push
cwtl
mov
pop
pusha
mov
nop
sbb
mov
lcall
and
add
mov
mov
inc
push
pop
jo
rorb
and
mov
ror
add
cmp
es
inc
xchg
mov
jb
xchg
adc
hlt
subl
ljmp
mov
jle
jl
cwtl
adc
and
mov
outsl
add
sbb
mov
aas
int
cmc
adc
aaa
insb
add
push
roll
enter
xor
mov
lahf
add
divb
sub
icebp
repnz
cmc
imul
rolb
xchg
call
sbb
add
cmp
add
aas
and
add
fsubrp
popf
pop
sbb
inc
andb
dec
mov
leave
adc
inc
adc
adc
dec
loopne
clc
jb
pop
xchg
mov
outsb
or
into
xchg
scas
rcll
jp
mov
jb
dec
loope
inc
rorl
mov
ret
insb
push
scas
mov
orb
mov
dec
or
repnz
xor
pop
pop
inc
test
rorl
std
adc
movl
jle
ret
into
or
pop
addr16
jne
xchg
shlb
inc
adc
cmp
pop
mov
nop
sarb
add
push
popf
jle
inc
adc
repnz
outsl
adcb
repz
flds
sbbb
dec
mov
faddl
mov
imul
mov
add
or
aas
add
test
outsb
aaa
int
push
hlt
mov
inc
pusha
mov
cmp
push
xor
pop
xchg
mov
loopne
cltd
sbb
outsb
push
inc
push
aas
gs
subb
cs
add
mov
or
cli
add
ret
xchg
jbe
iret
aam
cmpsl
add
test
xor
and
addr16
add
insb
mov
adc
ja
jle
add
aas
ret
gs
jl
and
or
mov
mov
adc
xchg
scas
cli
dec
mov
inc
cmp
orb
fwait
dec
lcall
xor
clc
inc
mov
cwtl
bound
push
test
sub
aas
adc
or
sti
outsl
fmulp
add
pop
mov
test
xorl
push
sub
lds
mov
or
fisttpl
pop
push
jmp
sbb
test
leave
xor
insl
sbb
nop
pusha
push
call
or
xchg
pop
add
pop
enter
add
push
and
adc
pop
lods
lret
xor
clc
add
sub
sbb
push
push
or
pusha
cld
xor
mov
cmp
pop
pop
xchg
nop
pop
aam
mov
popf
sub
call
pop
xor
add
lahf
lret
mov
lea
mov
xor
movl
xchg
pop
and
inc
xchg
jg
inc
adc
jb
fs
cmp
mov
xchg
stos
push
add
sbb
cmpl
push
pop
mov
int
shlb
mov
mov
sub
add
jmp
movswl
or
icebp
and
mov
out
imul
lcall
push
push
je
pop
inc
sbb
mov
inc
mov
or
mov
inc
clc
adcl
jbe
je
pushf
bound
adc
jl
je
push
popa
testb
and
lock
testl
and
aaa
dec
xor
or
fs
repnz
xchg
mov
xchg
fistps
call
fbstp
mov
jns
add
shlb
aad
dec
add
lcall
add
jo
or
wrmsr
or
or
lock
sbb
mov
or
pop
repz
push
cmpsl
sub
jmp
sub
icebp
xor
push
movsb
in
sbb
push
mov
addb
mov
mov
jg
cmc
call
movsl
les
popa
fwait
mov
inc
mov
test
adc
xchg
sub
xchg
or
push
hlt
jge
aaa
xchg
xor
add
repnz
jge
xor
pushf
lahf
add
jne
ja
adc
adc
adc
flds
mov
iret
push
loope
out
adc
add
push
dec
popf
or
sti
xlat
loop
push
add
sbb
dec
fwait
mov
sbb
xor
loope
push
cld
mov
stos
call
push
repz
or
popf
aad
add
fisttpl
test
dec
pop
sbb
jbe
push
arpl
add
test
ja
adc
in
aaa
pusha
nop
stc
sbb
pop
cli
lahf
icebp
in
test
cmp
test
add
movsl
jo
pop
inc
sub
or
xor
inc
xor
inc
ret
xchg
mov
ljmp
sbb
add
mov
adc
mov
mov
and
dec
pushf
scas
stc
les
dec
dec
sub
cmp
cmc
adc
cmp
cwtl
inc
and
mov
add
ja
rol
and
scas
push
xor
cltd
aaa
pop
lret
add
out
imull
jmp
sahf
addb
sahf
mov
add
xchg
enter
lods
push
scas
and
mov
and
mov
mov
xchg
fs
test
cmp
cltd
sbb
out
in
xchg
jmp
mov
pop
mov
out
fisubrl
rorb
std
aam
shl
jo
nop
or
dec
mov
pop
adc
orb
or
fdivr
int
pusha
lret
adc
nop
lods
xor
rorl
push
add
jne
xor
shll
add
shr
mov
add
testw
out
mov
push
adc
push
pop
xlat
add
push
pop
mov
inc
mov
xchg
pop
inc
adc
aaa
pop
sub
jle
add
stos
aam
sbb
push
mov
mov
fldl
stos
in
das
nopl
out
loopne
dec
stos
add
jb
xchg
lea
jns
mov
test
popa
shr
rol
fimuls
lods
or
lea
clc
cmpl
pusha
adc
cwtl
bound
sub
add
jl
sti
pusha
and
add
jae
adc
or
xchg
aad
ret
dec
jle
fbstp
push
test
pop
adc
jp
movsb
adc
jae
cmpsl
jmp
or
cmp
xchg
lods
add
mov
pop
or
xchg
dec
pop
inc
push
or
mov
or
add
dec
pushf
or
jmp
out
ficoms
js
mov
enter
and
push
sub
cmpxchg
xlat
add
test
mov
add
ljmp
pop
or
dec
pushf
mov
ljmp
sub
cmp
jbe
lea
push
rcrl
cmp
or
test
sbb
rolb
call
lods
and
addr16
cmpsb
or
sbb
shlb
test
sbb
pop
fucomip
pusha
xor
cli
mov
fwait
jae
out
or
outsl
xchg
jg
mov
dec
call
hlt
jb
and
jno
cmpsl
sub
aad
std
adc
mov
add
fdiv
movl
mov
pop
lock
mov
mov
adc
push
test
jns
js
mov
and
out
xor
outsl
xor
pextrw
jo
stc
nop
mov
mov
xor
orb
pop
imul
xlat
or
sbb
jmp
sti
xor
mov
mov
add
shlb
xchg
or
mov
dec
mov
dec
dec
movsl
cmp
push
xchg
add
sbb
push
subl
sbbb
daa
in
cs
jo,pn
test
imul
or
sub
mov
push
jge
sbb
sidtl
jecxz
and
fsts
mov
push
call
mov
rcrb
in
imul
xor
movsb
mov
push
sub
jmp
sbb
cmp
mov
pop
adc
pop
inc
or
sub
repz
and
pusha
shll
jg
jmp
cmp
add
xchg
in
push
xchg
cmc
sbb
or
adc
add
aaa
sub
fidivrl
adc
cs
xchg
in
pop
xor
xchg
adc
das
add
ret
outsl
jmp
sub
adc
jne
push
xor
add
jb
inc
stc
push
in
sub
mov
and
mov
leave
negb
xchg
testb
dec
push
sbb
imul
sbb
aaa
dec
add
xor
mov
pop
add
inc
jg
out
mov
rcrl
pop
pop
inc
xchg
sub
pop
hlt
jmp
loope
lock
inc
repz
and
outsl
add
ss
lret
xchg
inc
cmc
xor
mov
int3
push
cmp
popf
lds
jg
int3
add
adc
sbb
sub
cmp
loopne
inc
dec
dec
stos
subb
lds
adc
insl
xchg
fdivs
adc
iret
add
cwtl
notb
inc
inc
out
and
shr
cli
cmpsb
and
std
adc
jmp
iret
roll
scas
mov
sub
or
push
adc
rcrb
xchg
data16
push
rorb
iret
rolb
mov
imul
das
call
dec
mov
xor
icebp
lahf
add
push
ljmp
sarb
out
pusha
shr
and
pusha
cmc
or
addr16
or
fbld
pop
dec
jne
xchg
popf
pop
dec
data16
sarb
arpl
add
mov
or
into
pop
nop
sub
cmp
popa
fs
in
inc
push
pop
shll
in
test
pop
fldt
mov
pop
mov
cmp
fs
mov
add
cmp
mov
dec
dec
xor
add
ret
sbb
jo
aam
adc
jp
jno
push
xor
stos
popa
pop
or
xchg
sub
rorl
pop
shrb
mov
mov
test
xchg
lods
in
jge
inc
aas
or
pop
mov
sub
enter
enter
orl
or
adcl
out
loop
sub
cmpb
aad
mov
jae
mulb
stos
inc
fistl
xchg
mov
pop
out
jecxz
add
shlb
or
dec
lea
pusha
leave
add
shll
jnp
insl
dec
mov
dec
fldt
mov
or
ror
push
sub
or
or
loopne
sbb
add
or
add
or
mov
outsl
add
mov
pop
pusha
jns
add
cli
mov
push
outsl
mov
in
add
pusha
mov
popa
test
dec
and
pop
add
test
or
shll
mov
sub
pop
outsb
sbb
adc
pop
adc
jae
add
mov
dec
cmpb
lret
je
mov
jne
pop
lahf
and
jnp
call
cmp
sbb
sub
or
cmp
test
jae
push
dec
mov
push
xor
and
inc
aam
dec
jo
pop
add
int3
mov
pop
movsl
sar
sub
jae
xor
xchg
add
lock
adc
lea
mov
imul
push
sub
push
push
lock
mov
add
les
nop
pop
sub
pop
mov
aad
or
ret
dec
movsl
inc
adc
insb
sub
and
xchg
jp
mov
call
sbb
sbb
test
dec
popf
add
fcomps
pop
add
repz
daa
jno
sub
cmp
ja
fcmovnb
cmpb
mov
adc
or
mov
shlb
pusha
push
pop
imul
jne
test
add
inc
push
push
adc
int3
mov
xor
jo
adc
xor
cmp
addb
mov
pushf
mov
add
or
jns
mov
dec
mov
dec
adc
add
fsin
aaa
sbb
jb
jle
lock
lahf
add
jmp
lea
mov
lods
xor
stc
add
xchg
scas
test
push
dec
dec
pop
sbbl
arpl
add
cltd
sbb
sbb
and
sub
adc
and
push
mov
popa
out
loopne
ret
pop
xor
mov
xchg
sub
mov
dec
jmp
in
sbb
lret
add
and
push
fisubl
out
sbbl
xchg
mov
mov
push
xchg
inc
cltd
rorl
ljmp
jbe
dec
push
cmp
or
mov
int
and
sub
cmc
push
xor
jne
es
pushf
test
lahf
push
add
fistps
dec
in
sbb
imul
mov
sbb
in
sub
test
lods
cmp
pop
sbb
movsb
lea
or
sbb
add
neg
cld
pmulhuw
push
sti
mov
inc
dec
or
jne
or
cmp
add
loope
push
mov
jp
xor
mov
ret
and
adc
stc
mov
rorl
loopne
outsb
lock
sbb
cld
insb
daa
ds
and
ror
xchg
xchg
inc
outsl
cld
jb
add
fimuls
jne
mov
jmp
out
mov
scas
rorb
movd
shlb
cmp
in
cmp
and
cmp
and
xchg
leave
inc
fscale
loope
add
sbb
enter
jp
jl
sbb
jns
pusha
pusha
cmp
cmp
test
lods
mov
add
push
push
sub
mov
scas
aaa
bound
in
das
push
daa
add
add
or
fdivs
pop
pushw
inc
add
dec
or
or
dec
add
insl
lds
pop
lcall
pop
addl
and
sahf
sbb
xor
or
shl
adc
loopne
fnstsw
je
add
push
mov
es
mov
xchg
mov
add
gs
movsb
jl
push
cwtl
jg
inc
sahf
add
jp
jmp
lods
xor
rcl
fistl
add
cli
add
pop
cmp
add
aas
cmp
xchg
and
scas
xor
inc
inc
dec
pop
jl
cltd
push
inc
ret
fwait
pusha
ds
xchg
mov
push
movsb
cmp
pop
mov
scas
mov
rclb
cmp
loope
std
enter
stos
cmp
cmp
sbb
sbbb
imul
cmpsl
inc
ds
add
repnz
in
orb
loopne
xor
movsb
mov
mov
xor
mov
xor
add
pop
sub
xchg
inc
add
add
jae
adc
xchg
aam
adc
xor
mov
adc
int
rolb
lret
or
fadds
shlb
roll
fs
mov
mov
imul
jnp
lahf
pop
jge
cli
add
cmpsl
pusha
arpl
sahf
sbb
mov
jl
add
pop
push
subb
dec
push
rcrb
inc
insb
and
icebp
ss
sbbl
cs
add
ds
sub
aaa
pop
xor
inc
dec
test
push
gs
dec
fmul
add
sub
pop
jl
add
cmp
jb
pop
imul
mov
mov
adc
pop
add
nop
or
loop
in
or
jmp
movsl
ffreep
push
lret
sbb
aad
leave
sarb
add
orb
sub
xchg
addl
mov
jmp
push
sbb
sub
mov
add
bound
in
jo
push
mov
xor
jbe
push
lret
shrb
lds
mov
movsl
xor
inc
pop
cmpsl
ret
das
pusha
add
shll
cltd
add
push
fildll
cmp
mov
rolb
jb
rdtsc
push
pop
mul
movsl
jmp
incl
shrb
dec
nop
ffreep
mov
add
testb
add
jmp
icebp
hlt
jge
outsl
in
xchg
lods
nop
mov
roll
or
push
cltd
pop
repz
loopne
mov
inc
adc
add
push
mov
popf
subb
mov
lods
sub
add
add
xchg
add
icebp
cli
cmp
incl
ficompl
addb
jbe
jl
xchg
arpl
inc
pop
lcall
popl
cld
xor
popa
pop
sub
and
mov
xor
inc
movsb
cmp
jns
mov
add
ljmp
test
pop
shr
repz
out
sti
sub
mov
nop
jge
lock
xchg
mov
push
mov
xchg
inc
lahf
scas
mov
dec
in
dec
add
adc
clc
outsb
cs
xor
xchg
sub
jae
rolb
into
sbb
lret
cmp
rorb
std
pusha
outsb
add
adc
push
loopne
lock
ljmp
adc
mov
add
sahf
add
bound
xor
cmp
idivb
cmc
mov
jae
mov
rorb
aad
mov
and
mov
mov
add
mov
inc
adc
lods
add
cs
iret
repz
sub
das
add
cmpsb
lret
out
lock
jecxz
dec
sub
js
push
cmp
mov
push
mov
lret
mov
or
mov
pop
and
popf
dec
push
roll
jge
inc
shlb
sbb
push
jns
add
or
add
xchg
push
pop
or
or
and
sbb
cmp
xchg
daa
xor
sub
out
fldcw
xor
mov
ret
pusha
push
movsl
into
sbb
bound
loope
insl
add
inc
lahf
fst
cmp
andb
cmp
lahf
push
inc
addr16
cmp
or
jge
inc
loop
enter
mov
push
push
addb
cs
popf
aad
iret
mov
mov
mov
shlb
add
or
dec
fnstcw
dec
in
push
sbb
es
cmc
add
push
pushf
add
mov
add
jns
std
in
push
push
fildl
in
gs
pop
xchg
mov
dec
stos
pop
add
frstor
add
jno
jbe
aad
xor
sub
inc
adc
lret
adc
and
push
mov
pushf
cmpsl
add
xchg
sub
es
sbb
mov
sbb
mov
mov
cli
cmp
xchg
add
mov
mov
insl
add
pop
sti
repnz
jnp
fbld
mov
pusha
inc
jge
out
or
hlt
fs
sbb
xchg
movsl
test
add
mov
mov
repz
lods
outsl
add
rolb
pop
insb
inc
sub
fwait
inc
pop
and
mov
jge
int
mov
cmp
fnsave
pop
leave
aam
mov
je
mov
mov
jle
add
shld
int3
lock
test
jp
add
xchg
xchg
dec
shrb
fmull
add
mov
test
dec
xchg
jnp
mov
insb
aam
pop
or
rclb
xchg
pop
jne
rolb
mov
sub
fs
sub
dec
sbb
mov
and
dec
add
cld
rorb
es
cmpsb
fistl
sub
pop
dec
hlt
fimuls
je
out
mov
lock
rorl
hlt
sbb
adc
test
add
push
inc
mov
push
add
imul
pop
pushf
mov
adc
pop
xorl
je
jns
mov
test
dec
xchg
sbb
addr16
pop
add
sbb
inc
dec
sub
repz
add
in
out
jg
mov
jbe,pt
outsl
push
dec
mov
jle
orl
pop
adc
push
add
stos
sub
divb
xchg
in
adc
incb
rcll
add
mov
push
xor
xchg
mov
push
and
testl
add
repnz
jns
lcall
pushf
cmp
rclb
idiv
in
loopne
push
pop
mov
loopne
pushf
cmp
jns
pop
jle
sbb
jb
jge
mov
mov
insl
aad
lahf
xor
push
cld
jnp
les
add
dec
push
ja
add
push
fwait
push
sbb
imul
pop
add
and
stos
dec
jb
fcmovb
adc
stos
scas
sarb
mov
adc
add
imul
in
push
ja
shlb
test
adc
es
jns
add
xor
popa
loop
add
dec
xchg
push
subb
popa
js
xchg
add
enter
imul
xlat
andl
scas
mov
in
xor
cmp
dec
push
or
push
and
add
arpl
xchg
pop
inc
test
enter
sub
ret
inc
mov
lods
xor
mov
cmp
pop
les
and
ds
adc
pop
iret
nopl
mov
push
shl
orl
add
xchg
pop
mov
in
mov
push
mov
pop
xor
pop
push
mov
neg
add
aas
or
jle
jl
pop
out
je
cmp
ror
inc
pop
pusha
or
test
and
sub
add
call
cmc
jne
pop
dec
cld
fisttpll
sub
cltd
rep
add
or
pop
out
cld
outsl
xor
mov
add
in
mov
sbb
lds
incl
sbbb
orb
mov
add
nop
shlb
mov
add
and
sbb
sub
popa
push
add
mov
fwait
add
je
jno
int3
lcall
pop
mov
inc
mov
mov
xchg
inc
or
ficoms
mov
imul
push
mov
push
or
mov
mov
add
ss
push
testl
jo
xchg
inc
mov
mov
pop
or
popa
mulb
and
mov
jns
jb
xor
pop
adc
mov
and
stc
mov
dec
jmp
outsl
xorl
push
or
mov
push
pop
cmpsl
scas
int
rol
mov
cmp
xor
lret
icebp
nop
push
jae
sub
je
dec
daa
fisubs
aam
ljmp
jne
scas
roll
push
ds
jge
sbb
xor
js
and
out
push
popa
dec
dec
xchg
mov
add
jmp
lock
xor
and
aaa
add
xchg
sub
pop
sub
imul
push
sbb
jmp
inc
jae
jo
rolb
xchg
lret
into
adc
mov
jmp
pusha
mov
mov
call
xchg
lods
sub
leave
pop
gs
popf
adc
lcall
or
jnp
jno
mov
cmpl
push
xor
adc
popa
mov
psraw
call
cmp
movl
orb
xor
xchg
jne
sarb
popaw
add
cmp
inc
or
lea
rolb
dec
pop
out
dec
pop
lods
popf
sub
mov
mov
push
ret
int
shlb
data16
or
or
mov
xchg
sbb
push
mov
negb
sbb
xchg
das
sub
jle
inc
mov
cmpsl
inc
stc
test
add
movsb
mov
cld
add
push
mov
push
xchg
sbb
mov
jl
les
hlt
add
lods
test
sub
push
mov
pop
jmp
xor
scas
mov
xchg
notb
xchg
jo
mov
add
mov
mov
sbb
and
inc
add
inc
cmp
xchg
test
mov
es
test
lahf
addl
ds
sbb
cmp
push
mov
repz
clc
dec
or
bound
negl
mov
out
fninit
das
popf
add
verr
jle
inc
or
rcll
adc
stos
sbb
jb
and
jmp
mov
or
out
lahf
lods
mov
outsl
push
add
jo
mov
pop
mov
decb
fnstsw
mov
mull
es
popa
sti
xchg
add
push
pusha
mov
sbb
add
icebp
in
dec
lret
inc
sub
cs
mov
pop
iret
and
add
mov
and
dec
dec
dec
pop
aam
jmp
test
outsb
adc
insb
mov
mov
mov
adcb
rolb
mov
in
xor
xchg
repnz
jne
es
enter
insb
xchg
movsb
stos
outsb
shll
loop
xchg
xchg
loopne
pop
or
xchg
out
aam
test
xchg
or
adc
pop
add
xchg
adc
aad
adc
mov
pop
or
inc
inc
sub
add
inc
mov
xchg
es
sti
pop
or
scas
jbe
loopne
sbb
add
fwait
xchg
je
mov
roll
adc
mov
pop
mov
lea
rorb
jns
in
pop
pop
mov
inc
xchg
lea
lcall
addb
xadd
cmpsb
ret
mov
loop
push
loop
mov
fstpl
iret
pusha
pushf
cli
es
add
add
or
movsl
adc
loope
fldenv
add
xchg
lock
add
push
cmp
mov
imul
lods
pop
xchg
adc
iret
mov
test
or
cmc
pop
or
adc
jmp
mov
insb
jns
pop
pop
fsubrs
cmp
xor
sub
mov
aaa
andb
cwtl
xchg
in
sbb
fwait
push
lds
cmp
aaa
or
pop
xchg
js
and
xor
mov
into
jg
mov
jle
neg
add
lcall
mov
daa
imul
pop
jo
icebp
add
cmpsl
ror
xchg
fiadds
jge
push
and
aas
jne
in
sub
fwait
add
sarb
ds
sbb
rorl
add
and
enter
shl
push
nop
in
inc
mov
mov
sbbb
cmp
dec
roll
mov
testb
lcall
sub
add
push
or
or
shlb
push
add
movhps
jecxz
dec
in
sbb
dec
sub
add
xor
jp
add
das
roll
cwtl
mov
icebp
sub
cmp
dec
push
adc
es
jmp
mov
mov
in
push
xchg
dec
sbb
cltd
add
adc
ror
push
mov
mov
xchg
shrl
pop
pop
sub
loop
dec
shlb
clc
clc
bound
cmpsb
pop
add
dec
nop
push
dec
push
inc
mov
xor
mov
mov
lret
add
pop
xorl
ss
nop
aam
pop
add
jae
repnz
aam
outsb
add
adc
sub
push
adc
nop
jmp
jge
test
mov
xor
or
adc
popa
add
mov
and
pop
lahf
xor
push
loope
cld
pop
in
out
jmp
jb
les
fs
push
xchg
and
das
mov
inc
xor
mov
aas
sbb
adcb
imul
fs
push
add
movsl
sub
push
lcall
mov
jne
cmp
repz
sbb
add
pop
test
dec
mov
js
jne
dec
lea
pusha
mov
push
lahf
jno
and
test
andb
xor
aam
jns
cmp
test
or
aas
loopne
out
ljmp
add
out
fisubs
mov
out
xor
or
insb
jmp
sub
in
mov
in
sub
or
sbb
addl
data16
push
bound
test
inc
dec
addl
xchg
rcrb
in
jnp
pop
cmpsl
mov
fists
mov
lahf
ret
call
mov
loop
lock
push
xchg
xchg
push
out
inc
xor
pop
inc
jo
inc
int
pop
mov
js
push
out
aaa
andb
pop
sbb
or
cmpsl
mov
sbb
sbb
clc
inc
icebp
orl
jb
push
pop
push
repnz
push
or
cltd
mov
roll
mov
sahf
push
in
mov
popa
mov
push
add
stc
sub
in
int
jmp
pushf
add
cmp
sub
or
bound
imul
repz
push
bound
hlt
jge
sub
roll
test
mov
test
push
sub
cmp
and
add
gs
jbe
ds
pop
stos
cs
and
or
leave
jbe
xor
or
xor
push
jo
push
or
insl
sbb
fsubrl
fdivr
int3
test
cmp
adc
jnp
add
jb
lahf
test
or
orl
das
xor
into
or
pop
adc
or
fnstenv
fnstenv
inc
add
daa
push
inc
loopne
notl
cmp
and
movsl
push
add
dec
movsb
and
or
rcrl
mov
imul
sub
sbb
enter
xor
jg
out
aad
jns
inc
leave
es
aad
mov
frstor
and
cwtl
mov
lds
in
sbb
mov
push
xchg
ror
xchg
lcall
mov
mov
pop
mov
sub
pusha
daa
mov
mov
loopne
push
cmp
mov
push
stos
out
adc
adc
inc
scas
cmpsb
and
jns
cwtl
dec
add
xchg
shr
mov
outsl
adc
out
push
mov
inc
xor
ljmp
add
fistpl
cld
mov
fstpl
push
call
aas
inc
jge
xchg
and
cmc
push
push
dec
xchg
adcl
adc
loopne
xor
dec
int3
sahf
dec
sub
in
add
orl
mov
imul
sbb
dec
jb
add
adc
jecxz
shlb
mov
shll
jne
xchg
loop
jo
and
test
fs
int3
lahf
xchg
nop
mov
mov
fwait
jle
rcl
sub
inc
cwtl
jns
fimull
mov
push
or
icebp
mov
loope
repz
cmp
mov
divl
and
scas
adc
gs
mov
test
or
lret
cmp
out
xor
lds
in
lahf
xor
pop
and
pop
and
jge
mov
cmp
pop
popa
xor
das
clc
inc
je
fdivrl
mov
pop
addl
add
jb
jns
dec
lret
ljmp
sbb
pop
inc
jb
mov
adc
stc
aad
or
pop
sub
ret
aaa
xchg
push
gs
jns
jns
das
rcrl
mov
adc
mov
xor
jecxz
out
popf
mov
push
push
pusha
decb
cli
add
and
dec
sub
sbb
decb
mov
shrl
push
mov
and
pushf
lock
icebp
add
popa
dec
lahf
pop
clc
and
jbe
out
daa
dec
adc
ret
jns
enter
add
lret
add
mov
sbb
test
add
push
shr
cmovs
dec
pop
lcall
jbe
clc
fcoml
and
adcl
test
xor
cmp
call
shrl
dec
fildl
mov
adc
scas
mov
mov
rcll
jnp
adc
das
mov
jge
mov
and
pop
or
sarl
jmp
sub
icebp
imul
sub
lods
push
test
cld
jne
repz
add
int
cmp
mov
inc
movsb
loopne
insl
or
sub
and
sub
push
mov
xor
insl
adc
mov
insl
adc
adc
orl
jmp
shrl
pop
cmp
shll
icebp
idiv
xchg
pop
jno
rolb
dec
pusha
xor
bound
sub
fldt
and
mov
xchg
xchg
sub
cmpsb
pop
xor
je
fidivl
add
push
cmc
xchg
addb
popf
and
clc
add
gs
jmp
sbb
dec
sub
mov
lret
adc
add
push
xchg
push
popa
xor
ds
pop
nop
mov
dec
add
mov
or
mov
aad
add
insl
xlat
in
addb
lods
add
adcb
test
pop
cmp
lds
test
mov
sbb
movswl
out
loopne
xor
add
sub
xor
jmp
pop
push
jnp
add
pop
test
add
sub
cmp
mov
fiadds
ficompl
aad
mov
inc
mov
sbb
loopne
aad
mov
nop
cld
insl
push
test
inc
or
loope
cltd
jno
in
xor
add
dec
or
icebp
cmpb
mov
lods
add
pop
xchg
out
xchg
and
lcall
dec
push
and
lods
test
jg
cmp
pop
push
cmpsb
ss
add
out
in
insb
sub
sub
inc
mov
cmc
les
insl
test
sub
hlt
and
xchg
lea
jmp
dec
imul
push
cmp
jg
fcompl
adc
pop
jp
dec
inc
mov
in
adc
flds
mov
fidivl
sbb
or
pop
cmpsb
or
push
jle
es
adc
outsb
xor
fimuls
pop
cltd
fwait
cli
adcb
ret
add
cmc
mov
jmp
xchg
mov
insl
dec
rcll
in
dec
pop
test
das
push
xchg
xor
dec
out
ds
push
fcmove
dec
jmp
gs
pop
out
rcrb
cmp
add
xlat
dec
clc
scas
aaa
xor
cli
adc
test
jp
and
jae
mov
clc
jl
mov
dec
add
mov
mov
add
or
cmp
and
mov
and
sub
js
mov
mov
xor
int3
or
xor
pop
push
mov
clc
popa
mov
mov
mov
into
cmp
gs
and
mov
mov
dec
aam
sbb
lods
jb,pt
add
push
or
sbb
push
sub
in
and
sbb
xor
aaa
and
out
or
and
rolb
outsb
mov
std
cmpl
cmpsb
xlat
out
clc
jecxz
cmp
pop
xor
aaa
cmp
fwait
daa
leave
mov
shlb
test
xor
incb
rolb
mov
add
push
popf
inc
jb
jge
xchg
aad
cwtl
ret
pop
popa
xor
lds
mov
mov
xor
fs
jae
cmp
arpl
scas
cmp
push
inc
fimull
and
lds
jbe
push
clc
sub
sarb
lcall
or
sbb
xchg
mov
add
sub
mov
or
lea
dec
xor
shrb
imul
hlt
cs
mov
push
mov
pop
push
stos
outsb
jno
hlt
or
movb
add
sbb
xchg
cs
sub
sti
pop
scas
imul
dec
shrl
lahf
sbb
push
mov
insl
shl
or
pop
cmp
push
adc
outsl
mov
out
lods
cli
adc
enter
adc
lods
push
mov
in
jecxz
jle
xchg
mov
movsl
add
insb
fldcw
dec
sbb
dec
push
pop
ss
and
cmpsb
and
push
and
pop
sbb
or
cmp
or
add
mov
loopne
jnp
out
sub
jp
leave
or
mov
test
test
mov
or
push
mov
mov
and
mov
dec
pop
xor
push
cld
fwait
cli
js
mov
dec
sbb
aam
inc
cmc
mov
jns
push
sub
pop
jg
mov
cs
jmp
sti
call
rcrl
je
imul
adc
test
pop
sub
arpl
xchg
int
or
movsl
push
add
test
mov
mov
insb
fdivr
jl
cmp
popf
sub
dec
lahf
or
int
fs
pusha
xchg
sahf
out
mov
cmp
sbb
mov
shlb
add
lea
add
ljmp
mov
pop
lds
push
je
push
rolb
sub
cmc
jg
or
inc
inc
sub
jmp
fisubl
sbb
jmp
iret
test
push
int
ret
xchg
jle
aaa
jae
outsl
dec
lcall
add
sti
fbld
sbb
fsubs
inc
fsts
sub
hlt
adc
inc
mov
mov
inc
ficoml
arpl
push
sbb
mov
sub
jbe
lret
xchg
dec
pop
xchg
xchg
mov
sub
rcrl
add
inc
stos
lcall
add
sub
imul
jns
pop
xchg
ret
jle
sbb
das
mov
jb
je
leave
xlat
jnp
or
and
push
imul
inc
xchg
add
in
cmp
add
lea
pusha
pop
jp
cmp
sahf
cmp
fs
lock
cwtl
jbe
aad
stos
mov
and
cmc
xchg
cli
cmp
sbb
mov
adc
stos
and
inc
ret
scas
add
dec
mov
add
gs
xchg
cld
pop
andb
jnp
jo
insl
inc
daa
outsb
mov
add
dec
dec
add
les
mov
mov
addb
and
mov
add
xor
or
sbb
mov
sub
mov
and
imul
jo
or
pop
or
in
cmpb
sub
faddl
cmp
and
daa
or
pop
pop
jl
dec
mov
mov
aam
mov
imul
xchg
ficoms
add
gs
or
fwait
inc
sbb
loopne
inc
xchg
push
icebp
mov
pop
pop
lret
and
fsubrp
lcall
mov
sahf
mov
push
mov
push
mov
push
mov
sub
adc
call
xchg
pop
stc
mov
es
push
les
pushf
lds
ret
pop
call
pop
ja
pop
xor
addr16
push
test
rolb
dec
dec
popa
xor
es
insl
jp
mov
repnz
stos
outsb
sbb
aad
lcall
lahf
mov
inc
mul
divl
insl
test
shlb
adc
jecxz
sub
add
test
fisttpll
in
pop
pusha
sub
aad
or
pop
add
fwait
add
xor
sub
pop
cmc
sub
int
ret
fldt
jle
sahf
jae
push
das
mov
dec
pusha
mov
lods
jge
xor
leave
xor
bswap
sbb
test
test
mov
sub
orb
push
add
cld
xchg
pop
bound
mov
movsl
fdivrs
lcall
movsl
mov
and
dec
adc
inc
or
in
enter
mov
test
cltd
cld
add
add
fcoml
sub
mov
movsl
mov
pop
cld
adc
pop
cwtl
inc
mov
lcall
sub
sub
and
loope
push
mov
bound
inc
lods
sub
or
push
xor
shrl
lods
push
fwait
inc
les
andb
adc
push
mov
movsl
mov
jbe
loopne
hlt
iret
add
sbb
xchg
das
mov
loope
in
loopne
jb
fldl
push
xorl
jae
out
hlt
inc
push
mov
inc
push
sbb
shr
pop
mov
cmp
lea
popf
and
push
mov
sbb
adc
lar
loope
lret
fdivrl
pop
add
mov
cs
adc
jae
mov
out
inc
pop
mov
xor
outsl
add
scas
fs
xchg
add
and
xchg
or
inc
mov
movsl
push
mov
mov
out
jl
mov
push
xor
mov
iret
repz
pusha
sub
mov
fs
xor
iret
add
fildll
dec
pop
mov
in
movsl
sbb
and
xchg
cmpsl
daa
jg
cmpsl
movl
add
aaa
rorb
jns
add
shlb
stos
add
lea
repnz
xchg
orb
xchg
adc
xchg
add
push
adc
mov
xchg
jl
mov
or
lea
and
fs
jne
sub
cli
add
xor
rcl
push
ja
add
sub
cmp
add
jbe
dec
add
lret
sub
pusha
mov
jae
sbb
mov
stos
ret
and
lds
sarl
sbb
mov
pop
or
cmp
rolb
xor
or
imul
in
xchg
lcall
lock
jle
dec
xchg
lahf
shrb
add
aaa
push
enter
gs
pop
negb
lret
out
mov
pop
or
fmuls
jbe
push
fwait
test
lock
je
test
cmpsl
sub
push
popa
fwait
sub
das
or
pop
popa
popf
cli
into
xchg
push
les
arpl
dec
addb
fs
pop
arpl
aad
dec
mov
adc
xor
mov
incb
test
mov
in
ds
xor
cli
mov
pop
xor
ret
push
call
pop
xor
adc
add
cmpl
or
sub
mov
xchg
rorb
inc
cmp
lock
inc
xor
pop
and
add
or
shll
icebp
outsl
push
dec
push
adcl
dec
inc
lds
add
adc
mov
pop
xor
ret
cmc
lock
cmc
repz
add
cmpsl
lcall
lret
inc
ljmp
jmp
shr
enter
mov
add
add
loopne
les
popa
leave
cltd
mov
inc
sbb
daa
and
add
add
adc
sbb
push
dec
cmp
sub
fstpt
dec
add
cltd
movsb
das
push
inc
add
dec
cs
mov
jbe,pt
bound
dec
nop
or
ss
addr16
jo
push
add
push
inc
or
out
adc
push
push
fucomp
mov
jno
mov
sub
insb
sbb
nop
popf
jae
inc
mov
xor
jmp
inc
pop
fs
push
xchg
and
and
or
and
or
mov
adc
ret
push
daa
in
push
adc
or
add
shlb
push
incl
and
push
inc
cld
add
and
out
mov
or
sbbb
push
push
push
pop
mov
add
movzbl
inc
mov
jae
sbb
xor
sbb
dec
mov
movsb
mov
lea
cmp
stos
or
stc
jnp
adc
mov
sub
inc
iret
sub
cmp
ss
adc
std
int
dec
mov
mov
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cltd
leave
push
cltd
mov
and
adc
shr
test
add
add
mov
mov
out
mov
add
and
mov
shr
or
jmp
ret
adc
cli
xorb
iret
fimuls
xor
sbb
mov
mov
scas
orb
loop
into
es
int3
cli
xchg
mov
jb
and
mov
push
inc
lds
and
push
add
pop
or
mov
mov
cli
mov
test
jo
cmp
inc
ss
cmp
and
pop
pop
mov
mov
push
jne
inc
inc
add
rorb
lods
insb
jns
and
and
and
mov
rolb
jmp
aaa
push
jne
cmpsb
or
outsl
adc
mov
mov
xor
xchg
jbe
repnz
cmp
cltd
sbb
pop
cmp
in
and
adc
cmp
cltd
xchg
stc
adc
sbb
push
pop
jnp
and
mov
test
in
jo
loopne
pop
xchg
add
test
mov
jecxz
xor
and
stc
adc
mov
add
sbb
rolb
lahf
jbe
test
push
sbb
xchg
and
ret
dec
or
xchg
jmp
pop
pop
pop
add
leave
ret
rcrl
adc
or
daa
fadds
nop
jmp
je
sbb
and
fisubl
mov
sbb
rcrl
pop
xchg
pop
pop
mov
or
addl
mov
sti
movsb
aam
clc
inc
aas
rolb
pop
mov
add
and
xor
jmp
divb
mov
jl
push
mov
pop
xchg
jo
mov
imul
andb
mov
ss
push
dec
xchg
cmp
popf
or
mov
inc
and
aaa
pop
and
mov
pusha
insb
add
sbb
addr16
or
push
jae
mov
popa
lahf
dec
cltd
mov
and
jg
cmpsl
and
mulps
aad
movsb
ljmp
lcall
sbb
sub
xor
xor
cmp
mov
cmp
pop
mov
mov
xchg
push
jle
and
jo
and
in
les
xor
adc
negl
add
cmp
add
popa
xchg
sti
xchg
or
and
adc
test
mov
push
in
add
fwait
push
cmp
daa
dec
out
push
or
adc
ss
stos
pop
pushf
xor
jb
mov
gs
test
push
add
cmp
sbb
mov
and
aam
cmpsb
inc
adc
je
mov
icebp
or
sbbl
dec
pop
jbe
dec
jg
in
push
pop
daa
xor
pop
or
and
inc
jg
out
stos
pop
dec
dec
push
add
inc
mov
inc
loopne
movsb
jae
pop
jmp
sti
push
sbb
add
fs
lret
je
in
mov
pop
sti
adc
pusha
and
movsb
mov
or
cmpsl
cltd
insl
adc
fdivs
add
ss
push
push
aas
or
lcall
xor
push
dec
leave
pop
xor
add
add
ljmp
mov
rorb
xor
xchg
ja
in
mov
aam
lcall
aam
add
mov
scas
sub
orb
in
pop
xchg
and
xor
mov
mov
je
rclb
or
ss
outsl
mov
add
and
inc
mov
xchg
js
and
int
jecxz
sbb
mov
arpl
mov
adc
add
cmpsb
loopne
cltd
and
mov
mov
test
adc
add
stos
pop
ljmp
test
pop
adc
aam
lcall
aam
push
dec
cmc
addl
inc
push
adc
and
inc
xor
and
add
aam
mov
aam
jg
dec
insl
and
mov
xor
mov
mov
fsubrl
lods
mov
pusha
and
cli
cltd
pop
add
movsb
push
aas
add
and
add
outsb
in
inc
sbb
and
jg
fmull
add
inc
xor
and
adc
mov
add
mov
inc
xchg
xchg
sbb
or
ret
stos
jecxz
mov
add
loope
mov
addb
lahf
movsb
adc
mov
cmpsb
sbb
jns
adc
inc
mov
mov
jg
in
sub
pop
adc
cwtl
add
je
lods
push
mov
dec
cwtl
jl
xchg
pop
pusha
fsubrs
and
add
std
idivb
inc
mov
add
mov
add
inc
js
es
xor
test
jne
and
pop
adc
jg
cmp
test
jge
or
mov
in
sbb
pop
lods
adc
push
mov
jle
adc
mov
orb
sub
xchg
push
mov
add
mov
and
inc
add
aam
lcall
mov
adc
call
pusha
cmpsb
lock
enter
xchg
stos
inc
movsl
mov
popf
jl
push
adcb
cmp
push
aaa
cld
or
test
sbb
test
cld
and
dec
jg
imul
inc
or
outsb
inc
add
add
aaa
addr16
aam
stos
pop
push
add
ljmp
push
daa
sub
in
sbb
mov
leave
rol
add
mov
push
je
adc
adc
sahf
xor
loopne
pushf
enter
cwtl
sub
sahf
jmp
or
movsb
mov
sbbb
div
push
mov
loope
add
xor
push
push
dec
xor
jo
lcall
aam
into
mov
add
notb
loopne
and
data16
dec
and
pop
mov
mov
adc
add
into
stc
mov
push
cmp
stos
insb
imul
mov
adc
test
inc
rep
into
fldenv
int3
pop
jno
data16
inc
ret
pop
jp
add
sub
adc
push
ss
adc
or
aam
dec
inc
in
push
add
inc
push
push
enter
repnz
int3
into
aam
cmp
and
add
sbb
outsb
push
dec
pop
push
popf
xor
xor
pushf
stos
add
xlat
adc
mov
and
icebp
dec
subl
pop
popf
nop
ljmp
mov
inc
test
imul
mov
ret
dec
or
push
fistpl
add
fdivr
xchg
add
scas
jmp
inc
mov
xchg
rorb
xchg
pop
lret
inc
sub
push
mov
fdivrs
mov
sub
push
pop
mov
mov
rorb
in
inc
arpl
jnp
and
jg
dec
sub
push
movsb
pushf
icebp
push
arpl
sbb
cmp
or
aaa
mov
add
jge
push
pop
pop
xor
jmp
leave
sahf
insb
cmc
leave
mov
das
sbb
or
add
or
in
cld
add
loop
cmpb
into
add
jmp
xchg
and
iret
cmp
cmp
enter
fstpt
add
inc
ljmp
arpl
xor
push
add
mov
nop
out
enter
and
icebp
cwtl
push
jecxz
mov
or
add
mov
inc
rol
pusha
inc
aad
les
lret
das
mov
mov
mov
or
xchg
lret
jns
add
lods
nop
jl
sbb
sbb
fiaddl
mov
or
mov
push
call
faddl
dec
aad
or
sbb
je
mov
sbb
jg
in
xor
jns
sbb
cmp
aaa
sahf
sub
or
and
addb
loope
ja
sub
inc
ss
call
subb
leave
aas
mov
cmp
add
mov
ret
pop
mov
cmp
mov
stos
inc
hlt
in
xchg
test
mov
pop
or
push
cmp
sbb
int3
lock
cmp
andl
loopne
pop
push
cmpl
pop
sbb
mov
clc
mov
mov
pop
sub
nop
mov
add
inc
ljmp
sbb
dec
add
inc
sbb
xor
insb
jb
push
add
xlat
testl
loopne
bound
sbb
sbb
enter
and
std
sbb
xor
jge
add
lea
enter
fsubr
adc
lods
sub
add
pop
sbb
cmp
cmp
lods
iret
jb
cltd
shlb
cmpb
jno
xor
daa
data16
push
clc
hlt
fdiv
add
daa
or
push
cs
push
imul
adc
cmp
xor
adc
mov
sar
push
stos
test
xchg
addl
popa
arpl
xlat
inc
mov
jl
xchg
or
leave
mov
andb
popf
nop
adc
sbb
int
or
movsb
arpl
pusha
insb
cmp
out
fcomps
mov
jne
add
add
fists
add
cmpsl
movsb
push
repz
in
xorl
adc
repnz
rclb
xchg
cmp
cwtl
xchg
or
or
add
cli
pop
jle
fs
xchg
loopne
and
repz
jb
jo
sub
mov
jg
test
cmp
movsb
mov
add
mov
pushf
xor
push
outsl
and
jle
add
es
sbb
xchg
push
addb
repz
mov
cwtl
dec
fisttpl
push
or
push
or
dec
ret
imul
push
lret
and
inc
sub
jno
notb
jmp
add
mov
or
xor
push
dec
xor
scas
ror
fs
addl
sahf
cmp
sub
mov
sbbl
pusha
mov
add
add
dec
sarb
add
scas
push
add
test
inc
push
outsb
in
ja
ds
pop
cmp
rorb
adc
add
stos
add
xchg
cmp
and
push
push
mov
sbb
scas
iret
mov
xor
push
push
js
add
and
lea
enter
cmp
mov
sub
mov
inc
sub
test
popa
sti
shl
into
inc
in
sbb
out
jle
inc
xor
aas
dec
repz
mov
inc
loope
cli
inc
or
mov
or
lcall
pop
pushf
add
dec
mov
xchg
mov
add
pop
jmp
fs
mov
mov
jo
call
push
inc
dec
aam
test
sbb
push
add
iret
inc
insb
ja
scas
pop
clc
int
cs
mov
xchg
nop
insl
xchg
les
sbbb
push
and
popa
inc
cmove
mov
clc
imulb
adc
dec
or
leave
or
sti
mov
leave
jae
adcb
out
push
jno
add
inc
cmpsl
stos
add
xor
pushf
subb
adc
mov
ret
and
and
add
mov
fldcw
pushf
mov
dec
add
movsb
das
pop
lock
adc
fsubs
fmuls
in
jb
sarb
jae
pop
mov
add
pop
mov
sbb
and
and
pushf
xor
sbb
mov
scas
push
cwtl
call
dec
pop
mov
inc
cmpsl
mov
add
jp
sbb
lret
sahf
mov
mov
test
xchg
pop
out
pop
cmpsl
shrb
add
je
cld
mov
shlb
jg
or
andb
orl
pop
adc
out
fsubl
or
pop
xchg
int3
lock
pop
adc
jo
inc
outsl
add
add
mov
lret
xchg
mov
sbb
pop
push
add
repz
xchg
rorb
jb
ret
nop
mov
test
mov
dec
push
rorb
push
in
jo
dec
push
lods
add
in
repnz
aam
mov
xlat
mov
push
push
je
es
inc
fwait
ror
ljmp
das
js
mov
ja
mov
in
mov
mov
jbe
add
loope
ljmp
mov
push
test
jne
rcrb
xchg
les
sbb
enter
aam
sub
popl
std
movl
mov
sub
lds
mov
das
mov
adc
sbb
ljmp
aam
push
js
lods
add
sbb
inc
aam
sbbb
mov
xchg
jp
cld
ljmp
push
push
dec
sbb
sahf
sub
add
xchg
add
int3
push
sbb
movsb
sbb
push
jge
pop
adc
movsl
rorl
inc
add
mov
xchg
jge
js
or
jns
aaa
sbb
or
rcll
testl
cs
test
add
cmc
sbb
dec
nop
sbb
mov
adc
inc
ds
pop
adc
mov
fiaddl
pop
jo
push
sbbl
mov
add
lea
inc
les
pop
adcl
xchg
xchg
jo
lock
clc
cmp
push
cmp
loopne
mov
leave
xchg
jno
nop
dec
push
xor
mov
jbe
sbb
lcall
inc
push
cmp
add
jne
mov
leave
mov
mov
inc
mov
and
popf
nop
mov
ss
or
sub
sub
cvttps2pi
aam
add
in
je
cbtw
arpl
test
push
ja
mov
sub
clc
xchg
push
xchg
imul
dec
push
pop
adc
mov
mov
mov
loop
xor
fmull
jb
scas
lods
sbb
xor
mov
push
sub
sbb
test
and
testl
lret
and
out
mov
nop
add
dec
mov
out
inc
or
mul
gs
shll
jns
sbb
cmp
dec
test
lds
hlt
mov
testb
call
mov
lcall
dec
mov
repz
or
inc
aaa
ds
pop
mov
mov
addb
add
clc
dec
xchg
sar
es
outsb
add
stos
andl
and
mov
inc
imul
mov
push
mov
mov
push
mov
inc
test
scas
rcll
sahf
and
mov
xchg
scas
sub
cld
sbb
add
sti
popf
aad
adc
cmpsb
shr
xor
clc
add
sarb
rclb
xor
dec
and
cmp
cld
push
add
inc
cs
jno
dec
jl
add
and
imul
popa
cmpsl
xchg
addl
mov
inc
rorb
xor
or
daa
cmpsb
pushf
or
xor
fcoml
orl
and
xor
movsb
in
add
insl
add
jno
je
add
test
and
das
xor
ss
and
test
cld
jb
sbb
push
adc
imul
cmpl
xor
dec
mov
mov
je
pop
sbb
fs
cmpsl
xor
cmp
cmp
push
mov
sub
lcall
ds
out
cmp
mov
aas
cwtl
movsl
repnz
xor
mov
mov
pop
out
add
ds
pop
xor
sbb
popf
lds
and
push
jl
adc
andb
into
adc
loope
adc
mov
inc
lret
les
cmp
jns
or
in
sahf
jae
int3
dec
adc
xchg
enter
das
jl
sti
lret
lock
pop
xchg
or
and
add
out
cwtl
adc
lods
jno
and
push
adcb
pop
cmp
es
in
sahf
sbb
pusha
movsb
or
inc
ljmp
dec
rclb
lret
imul
fistpll
ret
xlat
das
ret
mov
inc
push
fnstenv
dec
add
data16
add
lcall
int3
and
pop
fs
dec
mov
pop
add
xchg
aaa
and
jo
sbb
adc
sbb
aam
int3
in
roll
insb
out
es
jbe
inc
sbb
sub
mov
push
ss
add
mov
xchg
xchg
imul
and
add
jecxz
fwait
dec
lods
sbb
fsubrs
lods
mov
push
add
and
sti
mov
jl
and
dec
jnp
add
sbb
push
cmp
adc
mov
ja
mov
sub
nop
inc
pushf
xchg
mov
mov
mov
jns
xor
push
jb
in
and
insb
adc
inc
pusha
mov
call
lret
mov
dec
sbb
pop
mov
lods
adc
aaa
push
xor
sub
mov
test
iret
lock
fs
cmpb
inc
pushf
loopne
jecxz
mov
xor
loope
sub
push
scas
nop
test
loop
xchg
pushf
adc
cli
or
sub
sbb
test
sub
inc
sbb
dec
push
mov
stc
scas
mov
hlt
add
mov
lock
les
in
inc
test
fcoms
sbbb
xchg
icebp
subb
mov
or
xor
mov
xchg
js
jo
mov
str
test
push
fs
adc
fistps
and
mov
sbb
dec
rorb
pop
xchg
enter
adc
cwtl
mov
xchg
mov
cmpsl
sbb
jo
and
push
mov
das
inc
inc
inc
mov
sbb
dec
push
loopne
jbe
bound
inc
mov
mov
pop
sub
jnp
movsb
out
cmp
cld
add
mov
test
mov
mov
add
ljmp
insb
loopne
in
sahf
jb
mov
xor
push
jbe
or
cmpsl
inc
lcall
addr16
punpcklbw
add
mov
jnp
cmpsb
sbb
cltd
imul
mov
mov
shrb
lods
movsl
push
mov
push
mov
sub
lods
and
add
enter
insb
loopne
pop
roll
fsts
sbb
xor
cs
push
inc
cmpsb
pop
test
loopne
call
imull
cld
gs
push
clc
inc
loopne
add
cwtl
test
or
push
lea
xchg
lock
push
add
push
dec
or
lahf
jl
popa
push
fsubrl
inc
mov
movsl
sbb
cld
out
icebp
andb
lods
rolb
mov
jmp
clc
ror
pop
jae
pop
fwait
mov
mov
imul
add
adc
lret
loopne
push
rcrb
add
sbb
scas
js
nop
push
xchg
faddl
and
stos
mov
dec
shll
pop
pusha
lahf
push
dec
add
in
pop
dec
sbb
pop
jb
sbb
repnz
loop
add
sahf
int3
mov
cli
xor
es
inc
cmpsb
bound
jl
sub
loop
leave
in
jne
enter
xor
call
mov
or
scas
and
or
push
add
lods
lea
xor
test
int3
sbb
cmp
pop
mov
hlt
pop
or
xchg
nop
or
cwtl
fidivrl
test
cmp
xor
dec
gs
roll
enter
xchg
clc
shl
mov
cmp
add
jg
lcall
adc
cmc
inc
or
push
call
sub
test
mov
xchg
mov
loopne
inc
inc
shl
cmc
es
xor
int3
mov
lods
ds
aad
and
or
andb
mov
dec
xor
adc
into
cld
pop
shrl
cmp
stc
add
in
cs
add
push
inc
jo
cli
inc
jo
pop
ds
repz
xchg
add
lds
mov
shll
fadd
add
xchg
push
cltd
ss
mov
ret
and
add
add
repnz
call
stos
sbbb
cli
ja
add
out
adc
pushf
nop
mov
dec
jae
sbb
mov
jne
xor
out
or
xor
mov
push
clc
jp
pop
pop
mov
xchg
or
aam
nop
mov
movsb
or
idiv
mov
stos
sbb
lcall
aas
xchg
xchg
adc
cli
test
mov
insb
js
ret
test
cmp
add
dec
add
add
or
add
cmpsb
insl
jne
jnp
or
fdivrl
js
ds
cmp
mov
pop
inc
adc
dec
jmp
mov
pop
cmp
and
je
mov
add
popa
xor
lds
xor
pushf
xchg
adc
andb
divb
adc
inc
movsl
out
cwtl
or
add
fs
and
sbb
js
xchg
nop
add
jno
or
pop
pop
fnstcw
call
inc
aas
sbb
mov
xorb
movzbl
jns
outsl
aas
xchg
mov
mov
stos
hlt
dec
loop
xchg
sbb
jb
push
fxch
xor
test
hlt
pop
inc
jns
mov
repz
add
push
in
test
mov
mov
xor
addb
mov
push
mov
rcll
cmp
ljmp
or
inc
nop
call
cmc
shlb
inc
in
les
mov
gs
and
xchg
cli
inc
in
fs
xor
clc
popa
movsl
adc
jb
enter
pushf
mov
sahf
call
icebp
mov
das
and
imul
and
in
popa
mov
test
lods
and
cmp
shlb
sti
mov
and
outsb
movsb
nopl
inc
enter
or
mov
jno
jns
sbb
jne
add
sbb
les
das
mov
jnp
push
arpl
fdivp
add
les
mov
sti
mov
xchg
xor
sub
add
cltd
dec
pop
int
sub
mov
mull
push
push
outsl
cmpsb
adc
rcrb
pusha
enter
push
roll
add
xor
leave
xchg
mov
and
test
js
aas
xor
push
jecxz
add
cmp
push
pushf
xor
and
sbb
into
lcall
leave
pop
mov
notb
daa
mov
pop
add
cmc
mov
repnz
test
adc
inc
push
das
scas
in
sub
loopne
sbb
xor
jnp
mov
pop
add
int
xor
mov
test
adc
cmp
or
cmp
pop
mov
jbe
push
les
xchg
sbb
stos
inc
sub
xor
lahf
rcll
fiadds
in
imul
pop
or
xchg
inc
and
sub
adc
pop
cmp
pop
adc
mov
lods
add
enter
and
out
imul
je
dec
lds
enter
and
inc
jp
add
rcl
mov
dec
cs
pop
mov
mov
xor
lret
mov
push
jmp
dec
or
inc
mov
adc
lods
adc
and
mov
and
pop
mov
add
cmp
add
jg
jnp
ja
add
in
daa
and
adc
orb
cmpl
or
fs
add
fsubs
subb
xor
enter
movsb
cmp
add
jo
mov
call
fdivrl
call
out
icebp
aas
inc
push
pop
jmpw
xor
adc
pusha
ret
add
mov
std
add
pop
shrb
pop
push
test
aas
add
mov
orb
cmovae
sub
pop
lods
lock
adc
pop
shrb
mov
jp
mov
loopne
imul
sbb
add
or
lcall
imul
inc
movsl
in
stc
mov
and
add
shlb
mov
jo
arpl
aam
bound
sbbb
gs
dec
ret
arpl
es
movsb
push
inc
xor
pop
add
movsb
mov
into
push
mov
xchg
sbb
and
mov
addr16
xor
rclb
xchg
or
lret
xor
push
sti
inc
sbb
inc
push
cli
mul
fcomp
add
in
test
xchg
subb
push
xchg
cmpsb
or
popf
push
fs
ljmp
mov
dec
popa
ftst
fnstenv
sub
adc
into
imul
loop
jmp
mov
or
int
dec
add
bound
push
scas
push
out
dec
push
pop
cld
mov
adc
imul
sub
inc
int3
test
loopne
pop
incb
movaps
cmp
jae
nop
roll
enterw
jge
test
push
push
add
inc
cwtl
adcb
into
ja
fidivrl
push
fldl
jecxz
dec
fwait
xor
push
fcoms
mov
pushf
in
dec
lock
rolb
lret
test
add
outsl
rorb
lock
cmc
loop
shlb
shl
adc
cs
add
mov
adcb
push
add
sahf
movsb
shr
insl
adc
jo
insb
push
and
dec
enter
add
lsl
loop
or
and
lret
dec
pop
pusha
jl
rolb
lea
out
push
xchg
aaa
inc
cwtl
mov
nop
dec
ss
test
xchg
jnp
jg
jg
adc
nop
and
jb
and
sub
xor
js
jecxz
cmp
jl
inc
pusha
sub
pusha
jecxz
mov
rcr
mov
sbb
andb
dec
xchg
mov
lret
mov
inc
cltd
mov
xor
test
add
lds
in
mov
push
mov
mov
mov
jnp
mov
mov
sub
adc
or
rorb
mov
and
shr
mov
loop
mov
sahf
hlt
push
push
pop
sub
psrad
mov
inc
popf
jns
or
psllw
loop
cmp
mov
inc
cwtl
dec
pop
cmp
sbb
js
mov
in
cmp
xchg
and
xchg
dec
fnstsw
xor
andb
inc
jl
cmpsb
xorl
inc
mov
and
push
add
dec
enter
mov
inc
or
mov
sbbb
xor
mov
add
push
inc
xchg
rcr
mov
mov
shl
push
shl
add
shll
adc
xor
mov
mov
mov
add
dec
xchg
inc
fucomip
pop
cmp
jne
shrl
sub
jo
dec
mov
jecxz
pop
sbb
daa
add
fstps
aas
mov
in
hlt
push
add
and
xlat
adc
rcr
xor
aaa
ds
adc
xchg
movsb
mov
push
repnz
xor
enter
and
push
mov
or
or
mov
mov
add
and
push
lock
or
adc
cmp
popf
sub
xlat
in
outsb
add
ds
js
xor
and
mov
mov
cli
xchg
daa
stos
or
sbb
adc
and
lock
sbb
lds
and
dec
aaa
add
xor
inc
cmc
pushf
hlt
daa
xchg
call
mov
xor
mov
mov
adc
cmp
jnp
lds
mov
add
jl
das
jge
mov
std
sub
les
cmp
and
lret
jl
pop
inc
dec
add
sahf
sti
and
push
lret
mov
push
mov
xchg
mov
or
out
xchg
ds
pusha
mov
lock
hlt
add
mov
pop
pop
xchg
leave
push
rclb
sbb
dec
sub
push
jp
inc
add
cmp
hlt
fildl
and
and
into
outsl
or
mov
xchg
clc
sub
add
cmpb
mov
fnstcw
jae
repz
xchg
fwait
mov
push
push
xchg
loop
gs
je
dec
mov
mov
into
pand
sub
lds
add
add
inc
pop
add
pop
add
and
movl
push
and
rol
icebp
lods
push
add
adc
or
and
jnp
add
scas
cwtl
shlb
pop
aam
push
ds
jbe
jnp
mov
cmp
in
repnz
and
pusha
rol
cmc
nop
adc
mov
cmp
and
test
iret
mov
xchg
test
mov
mov
aas
push
dec
adc
mull
mov
or
xchg
test
int3
inc
fadds
je
lret
and
call
fidivrs
pop
jp
sbbb
mov
dec
mov
mov
loopne
jns
xchg
sbb
les
mov
pop
sti
adc
sbb
int3
jno
cmp
shlb
xor
sub
jmp
lods
dec
pop
inc
movsb
sbb
xchg
aam
mov
rorb
dec
insb
add
sbb
jbe
adc
and
xchg
aaa
dec
fcoml
mov
sbb
sub
mov
rclb
outsl
xchg
dec
pop
inc
jbe
fs
and
xlat
scas
sbb
mov
sub
adc
push
xor
add
sbb
pop
fs
cmp
add
aam
jecxz
pop
das
inc
and
or
sbb
nop
cmp
subb
lds
sbbb
mov
les
shlb
or
mov
fldcw
xor
cwtl
adc
pop
nop
in
sbb
lods
dec
mov
je
sub
cld
jge
sahf
jns
daa
ljmp
mov
fldcw
mov
add
xor
sub
sub
sbb
je
fdivrl
lods
inc
pop
jbe
add
pushf
je
mov
sub
ret
add
or
sub
subb
addb
dec
shrl
xor
pop
jmp
lahf
jl
popf
insl
dec
loopne
sub
cmc
add
stc
lahf
cwtl
lock
negb
cltd
or
xchg
fildl
sbb
sahf
dec
xchg
rcrb
push
cmc
inc
push
aam
ljmp
xor
cmpsb
popa
push
fisubrl
movsl
rol
pop
xlat
aaa
test
cmp
clc
xchg
jne
loopne
adc
xor
xchg
enter
xchg
or
sarl
ss
push
add
in
je
push
notl
aas
xchg
lcall
aas
int
add
or
fbld
dec
cli
and
or
cld
insl
push
iret
add
mov
int3
les
das
hlt
and
cmp
repz
movsl
adc
xor
sarb
mov
and
popa
push
mov
sbb
pusha
pop
mov
rolb
fdivs
add
int
push
pusha
dec
je
fs
or
rcll
clc
xchg
sub
add
sarl
push
mov
rcl
push
jo
lcall
jb
dec
imul
push
fs
xchg
insl
pushf
shl
add
sbb
cmp
inc
out
mov
cs
inc
outsb
lds
mov
xchg
and
hlt
or
in
bound
sarl
inc
add
nop
ljmp
aam
or
imul
cmpsl
and
push
mov
mov
jl
ljmp
and
or
in
scas
cld
mov
nop
nop
rorb
dec
push
imul
mov
and
pop
popf
inc
hlt
jo
shrb
adc
std
jbe
dec
xor
adc
ss
cmpsb
adc
or
bound
or
pop
push
push
mull
cs
int
jae
add
repz
lock
imul
and
insb
cmp
jo
cmp
in
loope
insb
mov
or
and
mov
cmpsb
pop
or
shrl
lock
jecxz
sbb
add
xor
scas
xchg
imul
pop
or
in
jle
daa
repz
rol
add
and
iret
aas
mov
sub
out
cmc
fcoml
fsubrl
sub
fadd
dec
in
pop
cmp
cmp
inc
xor
cld
filds
add
push
jne
hlt
mov
mov
mov
fadd
outsl
xor
inc
pop
pusha
aad
xchg
or
js
or
popa
mov
out
imul
mov
movsb
adc
push
inc
xchg
lods
aaa
add
xor
repnz
inc
dec
imul
sub
mov
push
mov
mov
sbb
xchg
fs
sub
mov
add
mov
cmp
push
jl
push
dec
adcb
subb
xor
fnsave
xchg
insl
cmc
iret
mov
hlt
lcall
adc
sub
or
jl
scas
inc
mov
les
or
or
loopne
mov
adc
js
test
insb
lret
xor
lahf
pusha
cmp
sbb
dec
mov
push
jne
dec
data16
and
cltd
or
and
dec
pop
adc
insb
call
xchg
or
sub
dec
rclb
mov
enter
stos
lret
bound
xadd
xor
int3
jns
add
mov
add
stos
push
imul
js
mov
mov
in
xor
inc
adc
test
add
pushf
aam
mov
shlb
push
les
call
daa
jmp
inc
xchg
lds
mov
inc
lea
lcall
and
sbb
movsl
dec
fcoms
inc
add
ljmp
mov
inc
lds
fcompl
testl
cmp
cwtl
mov
xor
pop
pop
ljmp
enter
clc
or
sub
aam
fmuls
rorb
adc
xor
mov
add
ljmp
in
push
inc
and
nop
or
lahf
scas
out
push
movsb
add
add
mov
mov
sbb
not
es
xor
adc
xchg
enter
arpl
push
jno
les
ss
adc
pop
mov
les
mov
sub
adc
cmpsl
mov
sbb
dec
xchg
jle
loopne
in
xchg
pop
or
push
and
and
jb
pusha
addb
pop
fsubrs
add
xor
incl
arpl
xchg
lods
int3
das
inc
call
aam
push
push
dec
leave
mov
dec
cmpsb
and
scas
mov
mov
shrl
jo
and
fisubs
mov
bound
je
shrb
sahf
loopne
std
mov
les
xor
fistpll
xchg
sarb
dec
out
nop
mov
xor
loope
add
sbb
add
mov
ljmp
lret
rclb
inc
inc
sahf
in
pushf
dec
ret
faddl
inc
pushf
int3
je
leave
dec
xor
in
das
enter
jle
jnp
aaa
jp
lock
adc
inc
nop
lock
add
in
mov
mov
test
testb
sarl
fstpt
push
sarb
xchg
mov
mov
shrb
mov
loop
mov
add
cltd
inc
popf
jge
and
shrb
sti
add
data16
nop
push
rcrl
push
imul
mov
add
xor
pop
dec
sub
andb
imul
fdivrl
xchg
les
push
repz
lods
lock
imul
xchg
outsb
xorl
cltd
xchg
aas
enter
cmpsl
ficoml
mov
scas
mov
dec
inc
push
add
adc
ss
jp
rcrb
test
and
jb
cmp
mov
mov
inc
sti
cli
pop
mov
aaa
add
insl
shll
lcall
pop
add
xor
xor
jp
hlt
ja
mov
idivb
adc
test
inc
mov
cli
jb
or
in
or
add
leave
mov
adc
push
inc
add
fcoms
push
push
int3
xor
faddl
cmpsb
sub
std
decl
adc
jle
dec
movsb
jl
or
mul
and
clc
mov
punpckhbw
addb
jg
push
daa
insl
mov
lcall
jp
mov
jmp
pop
mov
or
sbb
add
push
xor
daa
loopne
push
lds
cmpsb
inc
lods
repz
pop
stos
loope
xor
push
adcl
outsl
add
xor
jns
push
adc
or
add
dec
rolb
pop
xchg
xchg
add
inc
add
jb
mov
add
jge
lcall
ljmp
and
stc
and
push
push
mov
insb
dec
push
or
mov
fdivrs
sbb
fldl
faddl
imul
movsl
dec
add
mov
mov
cli
pop
popf
adc
dec
repnz
bound
jb
jae
lcall
xchg
add
in
subb
es
add
pusha
pop
xor
xchg
mov
sbb
push
inc
push
add
in
int
mov
call
lods
iret
in
rcrb
pop
outsb
mov
push
outsl
mov
hlt
addb
sbb
mov
data16
xchg
lahf
mov
or
pop
aaa
leave
adcb
sbb
incb
aas
fwait
push
mov
add
test
pop
std
scas
das
pop
in
in
xchg
or
cmpsb
dec
mov
jbe
je
sbb
rcl
xchg
mov
pop
test
imul
jo
aam
out
or
jae
aaa
data16
adc
inc
in
sbb
sbb
insb
inc
mov
dec
and
pop
mov
add
stc
push
xchg
mov
loopne
push
mov
sub
push
add
addr16
mov
leave
pop
sbb
push
movsb
loopne
loope
ret
and
addb
fst
pop
inc
test
mov
pop
dec
movsb
cwtl
push
inc
xchg
mov
inc
jl
add
mov
dec
xorb
ljmp
loop
repz
js
movsb
sbb
lock
sbb
and
add
insb
xchg
inc
daa
mov
mov
lock
insl
and
stos
shll
clc
popf
mov
call
xor
push
jae
insb
push
lods
inc
and
mov
cmpsb
cwtl
std
jo
pushf
popf
out
pop
or
cld
loop
cmp
call
xchg
jg
int3
sbb
pop
aam
test
popf
and
inc
jne
pushf
mov
cmp
mov
mov
mov
mov
lcall
iret
in
xor
cmp
stc
and
or
cmp
jnp
js
jo
scas
pushf
push
push
insb
xchg
cmp
out
loope
lods
and
dec
pop
mov
sbb
push
cld
leave
sti
pusha
fistpl
movsb
inc
inc
xchg
mov
inc
dec
add
dec
cmp
lods
sbb
outsl
adc
add
xor
push
adc
in
xchg
dec
iret
dec
or
out
pop
adc
mov
shlb
shl
shlb
daa
jmp
sub
test
cmp
cld
es
aas
pop
roll
daa
xchg
sub
mov
clc
and
mov
call
sub
fstp
add
mov
pop
divl
and
push
xchg
jle
lret
add
mov
pop
jl
inc
test
ljmp
or
push
movsb
push
lods
add
out
fmulp
clc
insb
negb
popa
jmp
push
call
push
imul
daa
addb
adc
sbb
add
sub
jns
sbb
add
pop
mov
sbb
out
mov
adc
mov
test
sahf
in
stos
les
pop
mov
ja
mov
pushf
adc
std
mov
icebp
out
add
cli
shr
mov
jnp
ljmp
cmp
test
enter
cmp
adc
pop
add
decl
cmovl
fadd
cmpl
les
adc
jae
push
dec
imul
inc
xchg
mov
push
mov
pop
ljmp
jge
dec
ja
add
sub
adc
pusha
into
add
int3
test
add
inc
xor
imul
lods
adc
push
xor
dec
push
paddsb
jo
add
mov
and
push
hlt
out
das
jne
jno
add
push
test
sbb
insb
dec
fcmovu
xchg
or
test
add
mov
mov
fmul
or
adc
and
sub
pushf
jno
pop
or
idiv
testb
or
fistps
pop
push
int
rcrb
jns
adc
scas
cmpsl
cmp
sub
add
test
enter
sub
das
sbbb
sbb
sbb
gs
pop
sahf
mov
and
lock
pop
add
inc
pcmpeqd
inc
mov
dec
scas
pop
adc
mov
in
push
sbb
sub
enter
pop
test
inc
or
jl
nop
sub
adc
or
mov
jo
stos
mov
addr16
add
xor
daa
mov
jno
lock
add
sbb
fldl
push
inc
mov
inc
imul
and
faddl
cld
pop
cs
les
loopne
push
outsl
lea
test
pop
and
inc
xor
adc
nop
add
xchg
xchg
dec
fmuls
sahf
sbb
in
pop
sahf
hlt
jle
cmp
adcb
clc
push
inc
push
inc
jo
pop
je
cld
xor
mov
gs
xor
int
lea
sti
inc
and
sbb
movsl
dec
rolb
sbb
pop
jecxz
hlt
test
mov
add
jb
aaa
movsb
lds
pushf
lods
loopne
jno
cmp
mov
daa
in
popf
pop
xchg
pop
andb
js
dec
mov
test
xchg
pusha
pushf
jle
xchg
mov
adcb
dec
or
pop
in
xchg
push
cli
mov
test
sbbb
ror
mov
les
je
mov
jns
cmp
pop
jl
jo
xchg
add
enter
and
cli
push
mov
add
fadd
out
arpl
mov
push
cmp
lock
or
jae
add
arpl
mov
jo
lcall
imul
std
aaa
dec
pop
sub
xor
mov
and
inc
push
adc
cwtl
mov
mov
inc
aam
adc
push
insb
sbb
or
sbb
jmp
dec
shlb
pop
xor
pop
xorb
adc
leave
movsl
sbb
cmpb
les
sbb
sbb
push
outsb
popf
inc
jge
test
lds
add
stos
icebp
out
xlat
dec
add
push
xor
jne
test
lods
jl
add
sahf
aam
mov
or
sbb
pop
pop
or
adc
push
adc
nop
enter
xchg
inc
or
and
pop
mov
cld
hlt
xor
xor
pushf
mov
adc
dec
call
into
and
adc
orb
mov
cs
add
and
imul
jno
cmpsl
jo
inc
inc
sar
add
pop
add
pop
loope
pop
add
in
or
mov
in
mov
test
aam
mov
loopne
mov
aam
mov
insb
adc
mov
add
cld
xchg
inc
add
fisubrl
cmpsb
pop
sbb
sub
lcall
sbb
mov
test
or
subb
pop
rorb
fsubs
lock
adcb
add
and
loopne
push
adc
dec
shl
les
cmpsb
xor
mov
clc
faddl
cli
mov
test
es
push
dec
pop
dec
sahf
ret
sub
dec
adc
pushf
movsl
mov
dec
mov
out
and
pop
rcl
movsb
test
lods
xor
push
mov
jns
lret
lea
in
mov
mov
iret
inc
push
repz
ret
cmp
jecxz
sahf
add
rol
sub
pop
inc
add
mov
dec
inc
add
lods
cmp
popa
mov
inc
shll
cmp
enter
mov
jo
dec
mov
aas
dec
push
cmp
in
sbb
adc
ljmp
push
icebp
in
sbbb
jbe
movsl
jns
scas
icebp
add
adc
inc
iret
enter
loopne
add
out
push
outsb
int3
xchg
jae
push
loopne
add
add
test
push
add
push
outsl
fmul
mov
movsb
mov
rcrb
fnstsw
idivb
scas
xchg
fnop
adc
xor
pusha
add
sahf
int3
cli
insb
mov
mov
mov
jae
inc
and
shlb
sub
xor
adc
aam
inc
dec
add
cmpsb
lds
add
add
push
movsb
and
icebp
and
fdiv
add
idiv
into
in
lea
mov
jg
pop
sbb
cmp
sbb
push
cmpsl
dec
rolb
inc
inc
sbb
ss
push
dec
and
pusha
orb
sbb
nop
inc
je
cld
addb
out
push
pop
loop
add
daa
mov
add
push
and
repnz
cmp
ret
out
testl
and
inc
cs
cmp
cmpsb
mov
hlt
pop
popf
ja
mov
adc
cs
xchg
xor
in
xchg
xor
test
ret
adc
sti
add
leave
mov
xchg
repz
cmp
add
ljmp
out
outsl
jmp
adc
cld
xor
sbb
fadds
add
jo
ficompl
fsubs
andl
scas
out
pop
jo
or
out
ds
ret
lods
pushw
pop
mov
push
lods
roll
bound
addr16
ss
test
and
call
int3
mov
inc
ljmp
sahf
sbb
cltd
jb
dec
inc
loop
cmp
xchg
ret
out
aas
add
scas
pop
stos
lret
pop
or
xchg
and
and
inc
mov
sti
andl
pop
xchg
test
jbe
add
mov
decb
dec
int3
pop
xchg
cld
sbb
mov
jle
add
and
mov
xchg
mov
jno
movsb
in
sarb
xchg
fsubl
int3
pushf
mov
js
push
dec
add
mov
xorl
les
mov
and
dec
test
testl
sub
mov
or
mov
xor
in
out
jnp
pop
and
xor
add
ljmp
stos
inc
scas
or
test
jg
in
es
mov
mov
lock
jge
cs
mov
ljmp
adc
fsubs
cmpsb
neg
loope
loop
mov
bound
sub
and
adc
orb
mov
xchg
adc
fs
sbb
clc
pop
and
dec
cwtl
inc
mov
les
pusha
cltd
pop
loop
pop
nop
enter
insl
fisttps
iret
jno
cwtl
adc
rol
inc
cmpsl
sbb
imul
cld
in
es
js
mov
and
test
inc
add
fsubrl
imul
dec
repnz
mov
imulb
mov
and
bsr
in
call
add
mov
popa
test
loope
cmp
push
inc
jl
mov
aad
cmp
adc
add
mov
xor
in
movsb
fnstcw
mov
sbb
call
int3
adc
sub
popf
out
fs
movsl
pop
out
ja
cwtl
push
jo
push
sub
pop
mov
clc
push
scas
shlb
push
sbb
mov
idiv
ja
mov
and
and
sbb
or
das
movsb
add
dec
dec
js
adc
sbb
jnp
add
int
xor
sahf
enter
mov
pop
test
scas
ja
mov
rol
or
inc
fstps
inc
sub
in
fisubs
mov
ja
inc
sahf
mov
jge
rcrb
cmp
push
push
xlat
pop
fadds
pushf
and
lods
or
add
in
dec
mov
shrl
enter
ficoml
xchg
sahf
jle
add
jbe
aaa
or
and
pop
sub
nop
sub
nop
sub
aam
movsb
pop
pop
and
adc
push
imul
mov
push
mov
adc
out
xchg
inc
cwtl
push
test
movsb
dec
push
ds
aas
sub
mov
jo
lcall
je
cld
mov
sbb
mov
sbb
test
andb
pop
pop
movsb
andl
pop
js
jo
or
or
cmp
data16
dec
hlt
mov
fnstsw
add
cmp
adc
out
adc
inc
mov
adc
call
mov
mov
xor
inc
cltd
sbb
add
dec
sarl
or
bound
ret
and
cmp
repnz
jle
rolb
inc
jnp
xchg
cli
cmp
add
ja
xor
inc
mov
mov
popf
sbb
ret
cmp
aaa
divl
xor
mov
ss
cwtl
and
nop
or
fdivr
pop
popa
pop
loopne
cld
out
adc
in
call
fisubs
add
iret
add
and
mov
sti
daa
sub
add
cltd
sbb
add
loopne
lods
aam
hlt
ljmp
lods
fisubrs
cmpsb
or
xchg
sbb
aaa
flds
and
imul
jg
xor
pusha
cmp
mov
out
fs
jecxz
jbe
ss
push
sub
test
lds
push
pop
inc
push
pusha
popa
adc
mov
jne
mov
inc
and
inc
adc
and
call
adc
popa
mov
jns
sbb
adc
stos
sahf
flds
loope
cwtl
es
mov
mov
mov
mov
cmp
cmp
shr
lods
push
add
dec
cld
add
jne
jmp
ss
add
or
sbb
sub
adc
push
test
loopne
pop
shr
mov
nop
pop
sti
mov
adc
jp
xchg
inc
movl
push
pop
mov
iret
cwtl
xchg
push
fcoms
aad
lds
sbb
ljmp
pop
pushl
sbb
pop
cmp
fs
aas
ljmp
mov
sbb
push
pop
push
add
dec
push
add
or
shl
mov
das
xchg
pop
dec
fisubs
nop
adc
jne
loope
add
movl
mov
repz
mov
call
push
mov
testl
cmp
cmp
cltd
inc
and
pop
std
xchg
jnp
mov
daa
mov
mov
pop
dec
fldcw
out
stos
outsb
addl
lock
dec
inc
aaa
push
jl
mov
xor
fld1
dec
add
xchg
mov
xor
dec
shrb
jo
xor
popa
mov
sbb
jge
loope
jp
xchg
xchg
fildll
sar
insb
testb
sbb
scas
jb
sub
arpl
inc
adc
cli
ret
mov
loope
mov
xor
mov
aad
jae
xchg
jne
add
mov
mov
and
push
add
or
scas
push
out
jne
dec
add
add
and
cwtl
hlt
sub
mov
pop
add
or
outsl
test
mov
fcmovnb
cmp
data16
cltd
int3
push
pop
mov
mov
inc
dec
or
mov
push
daa
cmp
mov
sti
cwtl
lock
and
mov
push
mov
mov
jne
xchg
insb
inc
std
ds
add
or
cmpsb
xchg
imul
lcall
xchg
imull
pusha
push
testl
and
iret
and
mov
adc
ffreep
push
cmp
sub
rcrl
std
push
mov
sub
scas
pusha
rorl
loop
push
dec
mov
cwtl
popa
mov
sahf
ret
cmpsb
ret
mov
aaa
adc
xor
lods
sbb
jne
fxch
add
bound
sbb
pop
add
insb
push
fnstsw
mov
sbb
out
pop
lcall
aaa
scas
jp
jae
mov
xor
hlt
fsubs
add
jnp
cmp
outsb
push
pop
adc
sbb
and
dec
pop
add
jne
mov
and
inc
andl
lods
fs
shl
jns
movl
add
xchg
xlat
fcompl
add
mov
add
mov
cmp
jle
push
aas
pop
jmp
jne
jo
out
jns
rcr
cltd
rcll
xor
pop
hlt
mov
ljmp
add
ljmp
inc
jmp
mov
adc
ret
dec
test
sbb
xchg
xor
xchg
test
sbb
mov
out
decl
scas
xor
out
jmp
repz
aaa
jae
cld
popa
jnp
sub
pop
addb
enter
rcr
add
out
roll
pop
shrd
adc
flds
push
pop
cmp
cmp
or
test
mov
aas
enter
lds
imul
and
xchg
les
lahf
loope
add
jb
adcb
push
frstor
out
cmpb
fildl
pop
pop
mov
pop
sbb
stos
mov
push
mov
nop
sahf
int3
jp
out
dec
fisttps
mov
jge
jns
shl
repnz
cs
sbb
lahf
jl
push
pusha
xchg
sahf
inc
je
dec
inc
push
test
repz
dec
add
fsubl
xor
cli
inc
outsl
sbb
sbb
cmp
dec
jecxz
add
mov
inc
std
sbbb
add
int
ja
mov
insb
leave
and
jmp
loope
or
xor
adc
lahf
inc
dec
mov
ret
pusha
pop
push
testb
repnz
mov
jl
or
ret
adc
fdivl
add
xchg
je
sbb
jno
add
lods
pop
nop
mov
outsb
loop
add
nop
mov
push
andb
mov
fwait
outsl
cli
mov
rcrl
mov
jmp
adc
sti
lcall
mov
jle
jle
pop
imul
sub
data16
pop
add
cmp
ljmp
mov
fcoml
push
subl
js
pushf
fiaddl
bound
lahf
je
leave
and
mov
sbb
pushf
inc
cmp
out
ljmp
mov
out
in
pusha
ret
sbb
and
add
xchg
mov
add
sub
xor
sbb
sub
xor
adc
mov
xlat
xor
fwait
dec
xor
mov
pop
or
rorl
mov
or
pop
filds
pop
mov
mov
enter
cwtl
add
push
sbb
mov
sub
rolb
cwtl
mov
inc
testb
sub
call
mov
lods
adcl
adc
enter
rol
jle
mov
ja
cmc
dec
std
mov
mov
push
shrl
mov
and
js
and
movsl
movsl
add
decb
mov
jmp
and
lock
inc
mov
orb
xchg
or
outsb
pop
xchg
jno
scas
dec
mov
inc
mov
pusha
xor
jbe
andl
loope
in
jmp
cld
clc
stc
call
push
dec
sub
aad
roll
xchg
popf
test
or
notb
scas
mov
dec
xchg
aam
xchg
loope
pop
xchg
mov
sub
jno
in
clc
mov
cli
nop
dec
jl
sbb
inc
js
add
push
xor
and
sbb
ret
sarb
and
xchg
xchg
add
dec
daa
orl
or
out
loop
dec
add
jmp
xchg
pop
xchg
pop
lret
insl
sub
mov
xlat
push
in
ret
aaa
add
or
push
xchg
dec
adcl
dec
outsb
dec
add
and
adc
pop
mov
mov
in
lods
mov
dec
add
mov
or
in
xchg
push
mov
pop
jmp
shrl
aad
add
adc
add
dec
pop
jno
xchg
or
nop
pushf
arpl
sbb
mov
sbb
je
add
or
shlb
rcl
dec
aaa
dec
loope
and
xor
cmpsl
add
and
sti
fldt
sbbb
and
inc
or
pop
xor
or
scas
sbb
loope
sbb
mov
repz
adc
jg
mov
add
xchg
enter
mov
dec
pusha
movsl
cs
adc
jg
and
cmp
mov
pop
xchg
mov
imul
sub
and
mov
adc
movsl
push
and
cmp
das
in
int3
int
pop
rolb
or
lds
jne
add
mov
or
std
fiadds
inc
cs
cltd
xorb
ja
inc
or
mov
outsl
adc
mov
pop
dec
std
mov
pop
in
je
pushf
cmp
sub
push
rcl
popa
dec
push
add
jne
pop
inc
mov
add
or
sbb
xlat
test
imul
jne
xchg
testb
popa
adc
adc
adc
or
in
mov
sbb
dec
mov
xor
addr16
xchg
cld
push
roll
not
lock
mov
xchg
mov
mov
addr16
add
popf
lea
pop
mov
cmpb
xchg
or
sti
cmp
and
pop
push
call
mov
add
in
pushf
gs
push
int3
jp
pop
lcall
sahf
lock
dec
mov
inc
std
sbb
addr16
in
test
and
push
xchg
fdivrp
add
xchg
cmc
inc
fs
jecxz
es
sbb
sbb
out
xlat
mov
mov
testb
xor
out
loop
mov
mov
out
push
int3
lea
icebp
sub
adc
xchg
push
pusha
loop
add
xchg
dec
mov
adc
inc
pop
and
lret
dec
jae
je
hlt
add
add
jnp
iret
test
sub
add
mov
inc
pusha
faddl
insb
test
inc
sbb
push
mov
pop
sub
adc
jbe
jp
adc
or
dec
pop
movsl
shr
dec
xchg
inc
push
pusha
inc
adc
and
jg
jmp
fldt
xorb
arpl
and
loope
add
adc
fsub
mov
mov
or
mov
add
mov
jne
jecxz
test
push
std
popa
push
push
add
subl
dec
dec
cli
pushf
sub
pushfw
mov
js
push
add
ud2
into
mov
mov
pusha
mull
je
imul
inc
orb
pop
cmp
mov
pop
push
push
test
xchg
and
mov
push
pop
insb
repnz
add
pop
xchg
lods
sbb
mov
mov
xchg
popf
add
cmp
pop
xor
and
pop
lcall
and
imul
add
mov
pushf
int3
adcl
lret
call
dec
out
pop
push
sarb
mov
iret
idivb
cmp
fcmovb
pop
testb
push
dec
bound
adcl
jno
test
and
cld
mov
dec
lods
ret
inc
pop
adc
push
and
roll
rolb
sbb
adc
add
mov
dec
push
add
int3
rcrl
fistps
jno
jg
mov
adcl
add
xlat
push
nop
cwtl
sbb
pop
jo
xchg
adcb
mov
call
mov
cmp
pop
push
cmpsb
ret
xchg
xor
cli
imul
push
lock
movsl
or
jp
pop
insb
sbb
inc
in
xor
mov
faddl
lret
je
inc
sub
xchg
xchg
daa
mov
xor
xor
mov
test
pop
and
mov
pop
loop
rcr
mov
nop
test
ljmp
rclb
cmpsb
mov
shrl
mov
and
xor
outsl
filds
daa
jp
testb
or
mov
lea
pop
cmp
mov
int
addr16
iret
cld
cmc
adc
sbb
clc
mov
mov
cmp
lods
add
addl
ljmp
push
fucomip
jl
scas
adc
shlb
pop
nop
inc
popa
jns
cmc
jmp
scas
fisubrl
xor
push
sub
stos
jp
iret
out
add
and
sub
notb
sub
pop
mov
movsl
js
add
inc
addr16
stos
fwait
daa
inc
popa
dec
cltd
pusha
sbb
sub
xlat
jle
outsl
addb
sub
and
xchg
std
push
subl
lods
in
mov
xor
sub
or
je
nop
pop
push
fstl
pop
cltd
inc
lcall
adc
sbb
shl
stc
sbb
out
add
cmp
sub
fs
add
je
pusha
sbb
notrack
add
lret
icebp
sub
sub
mov
popw
shrl
jg
data16
or
jnp
add
and
movsl
test
pop
xchg
mov
cmp
fwait
inc
and
add
repnz
push
mov
xor
scas
add
sbb
in
je
stc
cs
insb
dec
mov
stc
xor
sub
or
sub
add
push
shrl
jo
lret
or
cld
sti
pop
sbb
orb
js
add
sub
pop
cwtl
or
jp
pusha
push
lods
cmp
mov
add
outsl
nop
inc
mov
sbb
inc
cmp
cwtl
aad
test
push
lcall
popa
ret
xor
inc
pop
sbb
loop
jo
add
je
inc
cs
xor
sub
push
sub
test
adc
pop
push
push
lods
cmp
push
test
push
lcall
js
sub
push
rcrb
lret
lcall
xlat
sub
mov
mov
imul
add
mov
add
popf
shrl
dec
fcomps
mov
mov
test
or
sub
or
je
and
cld
inc
lods
sbb
je
js
or
or
sbb
lock
popf
add
test
ret
ret
jns
addb
xor
out
leave
ljmp
mov
ror
cli
fs
pusha
cld
jg
jno
pop
pop
popa
xor
cmp
xor
fiadds
jns
cmpsl
lods
jge
rclb
push
or
pop
je
xchg
adc
push
in
sub
popf
jbe
movsl
or
push
inc
fstl
push
nop
push
test
mov
movsl
sbb
lret
icebp
and
pop
adc
daa
pop
dec
and
dec
lcall
pop
pop
jo
sarl
add
or
sub
cmp
jnp
sbb
pop
mov
sahf
jo
cmpl
arpl
xor
push
add
cld
cmpsb
repnz
dec
nop
add
pop
mov
sub
shlb
xchg
test
lret
sbb
rolb
test
sub
add
sub
insl
ret
das
mov
fbstp
push
test
add
mov
xorb
aaa
insb
and
rcrl
sub
enter
and
add
mov
shl
aaa
mov
adc
mov
cltd
sub
add
pop
cmp
gs
and
xchg
add
push
imul
mov
scas
divb
sub
test
pop
fwait
insl
or
mov
pop
xor
js
movsb
aam
pop
inc
sbb
cwtl
and
push
faddl
push
sbb
std
jmp
aaa
repz
cmpb
inc
mov
mov
or
bound
jns
sub
xchg
sbb
inc
leave
sbb
fsubl
andb
or
outsl
jns
adcl
movsb
push
add
pusha
add
mov
aad
int3
movsl
mov
pop
sub
loopne
out
push
clc
daa
sub
popa
sbb
add
shrl
adcb
xchg
mov
push
or
add
xchg
adc
aas
scas
pop
loope
jle
cmpb
jb
fdivr
dec
icebp
xor
inc
sahf
jge
sbbl
xor
popa
cmp
lea
sbb
inc
push
inc
add
xchg
out
jb
add
lods
dec
mov
sbb
xchg
cmp
jnp
or
xorb
add
je
ret
push
nop
jns
addl
je
and
out
lods
jmp
pop
cmp
mov
push
out
mov
cld
mov
jns
xor
jmp
dec
dec
nop
mov
cmc
daa
or
aaa
mov
jmp
add
cmpsl
sub
sbb
jae
mov
add
fs
mov
or
decb
dec
mov
pop
lods
mov
outsl
pop
call
adc
fsubrs
push
and
pop
add
xchg
jne
test
insb
es
aad
lds
loopne
cmpsb
xor
mov
jns
adc
pop
mov
pushf
nop
pop
rcrl
xchg
sbb
jne
loop
inc
mov
jp
push
cwtl
lret
pop
subb
mov
add
ljmp
into
mov
imul
notl
push
lcall
xchg
fildl
add
mov
cmpb
cmp
dec
gs
in
push
push
jb
or
jns
test
add
sti
xchg
aam
ret
add
ret
and
dec
daa
mov
inc
inc
or
adc
xor
xchg
pop
dec
inc
bound
dec
pop
add
add
pop
mov
lods
les
mov
insb
pop
sahf
in
add
fwait
mov
dec
adc
mov
sarb
outsl
mov
mov
cmp
mov
inc
jo
mulb
xor
sub
sub
jecxz
mov
xor
sti
sub
rorb
aaa
sbb
movsl
mov
xor
add
xchg
dec
or
sahf
xlat
fcmovb
test
cld
jmp
or
icebp
fmull
out
and
fucomi
cmpsl
inc
lods
xor
jae
sub
mov
out
mov
in
mov
add
sub
inc
or
repnz
xlat
adc
jl
pop
mov
lea
gs
jmp
xchg
pusha
jp
cli
popa
and
or
jb
xchg
popf
pop
cmp
push
fstpl
mov
pop
xor
fsubs
xchg
sub
sbb
pop
std
popa
sub
in
add
out
cmpsb
xchg
or
mov
adc
inc
loope
js
orb
sub
loopne
icebp
dec
sbb
sbb
fiaddl
popa
jns
mov
push
insl
cltd
shrb
cmpsl
mov
dec
sub
jge
icebp
or
mov
mov
orb
stos
lea
cwtl
sar
cld
scas
push
cmp
add
sub
push
pop
insl
pop
add
pop
mov
xchg
lea
xchg
and
sbb
popa
dec
jle
adc
imul
push
cmp
shl
pop
fstl
xchg
aam
fimuls
lods
ja
inc
sub
adc
pop
es
aas
das
out
popf
pop
clc
dec
or
or
rolb
cmp
xor
shll
mov
clc
out
movsb
imul
aaa
sbb
into
nop
xchg
pop
cmp
test
pop
jnp
pop
or
insl
xchg
mov
stos
lcall
daa
ret
mov
flds
ja
jno
jne
dec
mov
or
mov
fdiv
cld
mov
subb
shll
mov
push
test
leave
or
inc
lods
mov
push
loop
fistps
push
rcll
add
mov
and
jo
repnz
imulb
add
imul
stos
xor
add
pop
das
push
scas
fneni(8087
test
xchg
dec
adc
loopne
in
fisubrs
js
xchg
inc
pop
mov
adc
xor
push
nop
lods
lds
enter
std
scas
adc
mov
out
jo
xor
aam
js
sub
in
sar
add
daa
mov
xchg
xchg
sub
int
popa
jbe
addl
out
mull
mov
iret
and
in
stos
xor
mov
lock
jae
mov
sahf
insl
push
dec
inc
icebp
sbb
sub
xchg
shll
push
int3
mov
sbb
adc
and
inc
cmp
das
ss
sub
std
sbb
mov
rolb
add
call
mov
push
popf
adc
mov
add
mov
inc
or
add
rcrb
arpl
decb
cmp
lds
mov
mov
mov
sbbb
dec
mov
mov
add
adc
fildl
adc
sbb
adc
hlt
mov
in
mov
cld
jmp
mov
ds
out
mov
sub
inc
ljmp
scas
pusha
or
dec
sub
arpl
aaa
jns
inc
scas
adc
mov
das
xor
mov
and
ffreep
lret
in
add
imul
and
dec
in
aad
mull
aam
mov
out
loop
or
das
mov
nop
push
mov
cmpsb
sahf
pop
and
in
imul
jg
shr
movsb
jecxz
push
stc
pop
je
leave
jnp
lods
mov
add
inc
jg
push
aam
add
add
movsb
lret
pop
leave
cmpsl
cmp
mov
jb
pop
stc
sub
mov
movsl
mov
popf
adc
sbb
inc
je
add
jp
andb
jne
fstps
mov
push
mov
pop
push
shll
pop
xchg
jo
mov
test
jno
test
add
jp
add
je
xchg
movl
pop
xchg
mov
sbb
ret
inc
daa
jbe
inc
lea
in
popf
adc
add
enter
je
adc
jp
lods
sbb
add
hlt
test
or
out
rcrl
fldl
sti
push
add
jo
dec
cmc
xchg
sbbb
mov
xor
sub
xor
mov
inc
and
orps
jns
movsl
sbb
stc
mov
and
orb
lahf
aam
rorb
cwtl
test
inc
movsl
xor
cmp
xor
xchg
sub
or
xlat
and
or
pop
int3
dec
addl
call
push
push
repz
mov
sarb
add
mov
xor
aam
fimuls
test
mov
pop
and
pusha
nop
adc
mov
add
popa
sti
and
add
and
mov
dec
mov
jb
xor
filds
jmp
cmp
and
add
clc
fildl
xchg
xchg
push
adc
or
pop
push
mov
sub
das
inc
inc
inc
mov
mov
xor
mov
lcall
repnz
fbld
leave
mov
xchg
xchg
xchg
movb
test
cmp
movsl
cld
mov
divb
fidivrl
lret
imul
fcom
data16
adc
and
mov
add
movsl
ucomiss
lods
cmpl
js
mov
sbb
adc
xlat
subb
pop
xor
xor
adc
jg
add
test
xor
dec
adc
push
mov
jbe
fldenv
in
push
scas
xor
movsb
adc
mov
add
loop
mov
pop
pop
cmp
enter
fistps
xlat
stos
fwait
inc
and
js
xchg
cwtl
sub
mov
mov
shlb
add
insb
inc
nop
inc
mov
add
mov
rcr
loopne
adc
or
jnp
push
repz
js
xchg
push
push
or
or
nop
push
jg
cmc
lds
xchg
mov
pushf
add
lods
and
pop
xchg
test
xchg
adc
sbb
cmpsl
fstl
gs
or
call
data16
mov
fwait
or
xchg
or
and
mov
inc
mov
aaa
js
jmp
sub
dec
aad
mov
add
ds
pop
xchg
push
pop
push
cltd
lret
leave
pop
jns
andb
push
es
adc
lcall
jno
cmpsb
sbbl
or
xchg
insb
push
ljmp
enter
jl
add
lea
xchg
cmp
jno
adc
insb
and
mov
sub
jbe
imulb
pop
sbb
xchg
pop
rorb
nop
jo
pop
repnz
add
add
dec
dec
push
lret
fisttps
fwait
add
es
and
bound
sbb
stc
sub
dec
sbb
fmull
add
adc
jmp
movsb
std
mov
sbb
pop
js
fiadds
adc
rclb
stc
das
sub
data16
add
jmp
dec
or
hlt
das
in
addr16
pusha
pop
nop
repz
mov
sub
add
jns
enter
xor
and
cmp
int3
pop
testb
jb
xchg
push
adc
dec
push
fstpl
or
xor
xchg
push
mov
mov
xchg
std
loope
jnp
and
ja
lea
sub
gs
sub
mov
mov
nop
dec
divb
and
add
mov
cld
mov
mov
dec
in
sti
pop
adc
adc
sbb
push
int3
stos
and
andb
cmpsl
jae
stos
pop
pop
cmpsb
cmp
test
inc
dec
jns
js
mov
enter
jecxz
pop
push
lock
dec
inc
test
mov
jo
xchg
sbb
popf
dec
xchg
mov
jbe
push
push
out
repnz
les
mov
or
push
jno
seta
movsl
sub
jae
icebp
lcall
mov
insb
cwtl
xorb
sub
add
fisubrs
pusha
or
push
dec
mov
dec
popa
int
jecxz
and
dec
bound
jae
jmp
pop
lcall
xchg
xchg
test
push
add
sti
ljmp
dec
aas
mov
pop
inc
sbb
lret
add
inc
pusha
aas
adcb
push
xchg
jne
mov
ret
leave
add
mov
cmp
les
lods
sti
imul
mov
adc
clc
inc
add
sub
cli
push
adc
dec
adc
xchg
mov
addb
sbb
xchg
jb
jg
adc
scas
mov
add
lea
adc
or
xchg
incb
rcrb
jb
lock
mov
movb
imul
mov
repz
int3
jo
mov
dec
fs
add
stos
jl
cmp
out
mov
arpl
xor
mov
and
or
mov
ror
jge
push
and
inc
or
subb
xchg
push
adc
lods
dec
in
cmp
sahf
shl
sarl
mov
mov
sub
cmp
js
jle
push
popa
jno
ret
inc
pop
push
or
negb
cmp
xchg
mov
xor
mov
add
jmp
hlt
pusha
mov
add
into
pop
xor
add
sbb
rcrl
push
push
dec
shll
outsl
das
xor
repz
inc
sub
repnz
in
fiadds
and
test
xchg
cmp
jge
jne
or
int3
xor
mov
test
add
and
mov
popa
pop
nop
sti
ja
das
xchg
mov
jns
aas
pusha
mov
hlt
cwtl
ret
dec
pop
cmp
aaa
dec
pop
inc
add
push
mov
jno
les
xor
adc
mov
loope
mov
mov
lret
sub
lock
stc
ret
fbstp
addb
std
push
mov
and
inc
add
test
rcl
pop
and
mov
stc
out
dec
lock
rol
push
enter
push
or
rcll
ja
jp
inc
sti
push
je
adc
push
mov
roll
bound
sub
cwtl
cmp
add
jo
fs
push
scas
xor
mov
pop
loop
adc
mov
add
mov
add
xor
mov
xor
sub
or
addb
pushf
jmp
fisttpll
popa
sub
mov
negl
mov
lret
sub
jmp
in
mov
incl
mov
les
cmc
push
mov
sbb
sub
xchg
or
icebp
mov
and
push
add
xchg
add
sahf
popa
test
aaa
jo
les
dec
pop
movsl
cld
pop
add
pop
cmpb
inc
adc
lcall
sbb
mov
loope
and
sbb
or
notl
and
shl
dec
leave
push
mov
sahf
cld
adc
push
xchg
aaa
cwtl
or
push
pop
or
insl
sbb
adc
rcrl
jne
mov
or
sub
cmp
pop
cli
pop
pop
sbb
adc
sahf
add
xor
or
push
pusha
outsl
jge
xchg
out
imul
cli
push
jns
orl
add
out
jbe
idivb
dec
push
lock
inc
sub
adc
dec
jo
add
xor
pusha
stc
add
jo
and
cmpl
mov
push
mov
jmp
pusha
jmp
outsb
pop
cmp
mov
add
sti
xor
or
les
cmp
inc
or
repz
loope
and
xchg
fsubr
mov
inc
mov
mov
xchg
lret
sub
lock
xchg
mov
dec
dec
or
xchg
and
cmpsb
pop
loopne
popf
and
adc
outsb
cld
loope
jp
mov
mov
dec
rcr
and
jae
lods
dec
fiaddl
mov
pop
push
mov
gs
cmp
mov
pop
adc
vmovups
mov
imul
mov
lret
jnp
xchg
popf
add
or
mov
cmp
inc
add
sbb
xchg
mov
out
lock
pop
imul
mov
xor
sub
sbbb
xor
repz
xchg
cmp
mov
push
jl
add
aam
shlb
adc
neg
and
fistpll
add
mov
leave
popa
pop
mov
mov
mov
cwtl
mov
sub
adc
cmp
outsl
jge
inc
jno
imul
xchg
push
mov
clc
scas
das
dec
inc
inc
or
add
subb
pop
sbb
outsl
xchg
jmp
in
movsl
insl
aas
faddp
shlb
sbb
pusha
ljmp
jns
mov
cmpsl
test
adc
mov
mov
and
test
into
rcl
mulb
and
mov
mov
cmp
xchg
sub
popf
inc
mov
sub
push
lock
sbb
or
push
lret
push
or
stos
jl
clc
insb
xchg
sbb
imul
addl
add
xchg
xchg
dec
cmp
mov
out
xchg
imul
repz
jmp
call
push
scas
pop
pop
int
pop
add
cld
cwtl
lods
mov
lea
xchg
sub
ret
shlb
push
xor
vmread
and
push
pop
xorb
add
or
cmp
pop
or
popa
pop
inc
subb
xchg
xchg
pop
lock
popa
jno
add
mov
jne,pn
test
jo
mov
fcomps
add
xchg
ficoml
sbb
and
fcom
push
adc
jmp
cli
push
pop
pop
sbb
stc
insb
mov
xchg
cmp
xlat
mov
bound
jl
fildll
jno
dec
add
shll
mov
repnz
sub
jbe
cs
sub
aam
fldl
or
int3
xchg
das
mov
and
scas
adc
push
insb
fiaddl
xchg
out
sub
adc
xchg
cmpsb
pop
stos
outsb
jnp
mov
xchg
push
xorb
pusha
mov
push
xor
xchg
cmp
add
pop
fs
dec
xchg
test
fwait
add
dec
jb
mov
gs
int
fs
mov
inc
enter
pop
int
fs
hlt
mov
popf
jo
xor
xor
and
lahf
or
and
jo
lret
add
xchg
add
or
and
xchg
lret
and
mov
mov
loopne
incb
add
adc
mov
mov
jno
cltd
mov
imul
and
stc
cld
xchg
push
inc
xor
add
jp
movsl
mov
popa
pop
loopne
sbb
nop
add
add
xor
sbb
inc
or
jno
xchg
aaa
fildl
dec
adc
call
ja
pusha
stos
xor
sbb
push
outsb
and
cmp
add
jne
mov
inc
push
add
xchg
sub
jmp
cmp
adc
imul
insl
arpl
repnz
xchg
enter
dec
push
add
pop
daa
and
popf
test
aad
mov
add
or
adc
push
inc
pop
aas
shrl
or
jne
and
push
push
mov
dec
mov
lcall
push
shll
jo
repz
mov
cwtl
push
add
sub
dec
mov
cld
dec
mov
loope
add
add
pop
sub
subb
loope
add
mov
sbb
and
negb
fsubr
push
sbb
push
pop
clc
ret
std
shll
mov
jo
pop
shlb
sub
push
inc
inc
sub
or
add
mov
fdivl
testb
sub
adc
adc
jle
sub
popa
sub
add
and
pminsw
test
test
mov
xchg
es
push
scas
aas
pop
lret
cld
push
popa
pop
push
xor
xor
pop
nop
negb
and
testb
xchg
insl
lret
inc
outsb
mov
or
call
jmp
mov
dec
pop
inc
fstp
dec
dec
xchg
sbb
sbb
xor
add
jge
add
lods
or
cs
pusha
push
int
jmp
adc
and
xor
clc
loop
mov
adc
je
faddl
or
and
lahf
hlt
pop
push
push
dec
push
mov
jge
push
mov
dec
pop
lcall
rcll
cmpl
jbe
mov
sub
adc
pop
fiaddl
jp
movsb
arpl
adc
add
mov
push
mov
pop
jo
adc
pop
sbb
jno
add
lahf
sarb
xor
sub
xor
test
data16
mov
sahf
xchg
xor
mov
add
mov
adc
add
inc
dec
std
les
mov
imul
and
shrl
mov
jmp
and
or
xor
dec
and
inc
rcll
add
xchg
arpl
xor
jmp
adc
add
mov
mov
cli
and
lcall
and
sub
popf
cmp
iret
jg
inc
jo
popa
pop
pop
aad
or
xchg
rcr
aaa
iret
adcb
cmp
adc
jle
testb
popa
and
mov
fistl
xor
dec
jge
jecxz
into
inc
jle
add
addr16
pop
mov
add
sbb
xchg
sahf
xchg
in
imul
pop
sub
rolb
shll
mov
divl
das
cmp
dec
shll
push
sbb
into
ret
mov
stc
lcall
sbb
sub
jle
push
or
push
sbb
movsb
sbb
scas
fwait
mov
test
or
cmpsl
adc
pop
icebp
cmp
arpl
cmp
out
mov
imul
cs
test
sahf
adc
xor
pop
jmp
fwait
stos
addb
mov
mov
nop
push
and
sbb
or
sbb
inc
jo
lahf
dec
pusha
jmp
sub
subl
ja
repz
add
loope
ljmp
pop
bnd
movsb
cwtl
cmc
pop
insl
pop
xchg
pushf
push
inc
pop
push
and
adc
add
lret
jecxz
rorl
sbb
jbe
es
pusha
fisubs
dec
push
push
mov
insl
jmp
cmc
call
fmulp
lea
out
dec
lods
rep
adc
out
xchg
sbb
pusha
jl
sbb
xor
iret
cmp
mov
sahf
jecxz
sarb
mov
fwait
sub
out
push
pop
popa
pop
nop
mov
out
add
lods
mov
cmpsb
outsl
ficomps
shrb
sti
push
imul
or
cli
or
icebp
mov
mov
lret
jmp
inc
sbb
fbstp
pop
adc
shll
and
dec
mov
outsb
mov
mov
add
adc
mov
popf
sub
shlb
hlt
bswap
pop
xchg
das
test
jns
test
add
std
faddp
xor
dec
hlt
add
pop
inc
mov
xor
mov
sbb
ret
jl
movsl
ret
dec
popa
inc
mov
mov
xchg
adc
lcall
cmpsl
sbb
mov
dec
repz
push
scas
and
and
inc
mov
fcompl
xchg
xchg
mov
aas
clc
xor
lahf
inc
gs
movsl
jl
sub
xchg
xchg
mov
insb
or
xlat
lods
dec
push
add
fildl
inc
fnop
shll
icebp
mov
add
subl
inc
cmovs
jg
sub
pusha
stc
fsubrp
pop
sbb
mov
andb
loopne
out
popa
add
xchg
test
and
sbb
push
push
push
mov
jge
xor
dec
xchg
dec
pop
loopne
jns
push
sub
adc
fwait
gs
mov
mov
das
fidivrl
jno
scas
insl
subb
arpl
fildll
inc
pop
fsubs
sub
add
mov
sub
dec
dec
xor
je
ljmp
push
fnstenv
test
je
add
mov
test
mov
enter
fistl
mov
int3
jae
pop
pop
mov
push
mov
loope
xor
or
add
nop
jo
das
mov
mov
jb
sub
clc
clc
stos
add
imul
lcall
imulb
rclb
cmc
fld
pop
jae
xor
jbe
sbb
pop
pop
in
mov
jle
shl
or
mov
es
xor
test
add
popa
sbb
cmp
rcrl
daa
and
jl
pop
dec
loope
pusha
and
add
mov
es
mov
mov
das
push
sbb
pop
pop
add
dec
inc
fwait
mov
js
pop
or
add
sub
mov
repnz
adc
jno
imul
int3
xchg
psubw
adc
fsubrs
cmp
mov
cmp
cmp
sbb
nop
xor
outsl
ret
pop
sarl
mov
imul
test
les
jns
in
lret
mov
cs
mov
cmp
mov
mov
add
mov
and
pushf
jo
add
mov
sub
in
xchg
pushf
jne
and
push
mov
les
pusha
sbb
jmp
inc
cltd
add
lea
sub
popf
mov
dec
cli
lds
mov
in
loop
in
add
mov
push
xlat
fdivrl
fstl
adc
repz
out
mov
xor
sbb
mov
jl
cmp
mov
mov
add
mov
les
ret
push
dec
cwtl
popa
mov
jecxz
sub
outsb
std
push
mov
sub
dec
pusha
shll
add
outsl
mov
add
or
mov
outsl
outsb
scas
add
mov
jbe
adc
jb
add
dec
hlt
repz
jnp
push
out
lahf
les
jp
repz
jno
xchg
lcall
cmpsl
xchg
add
push
pusha
idivb
pop
xor
in
sbb
xchg
fs
lods
shrb
mov
jnp
add
out
pop
movsb
pop
ret
mov
in
nop
pop
mov
in
dec
add
out
fsubs
adc
xor
inc
mov
sti
or
push
or
dec
xchg
push
push
dec
nop
cwtl
cmp
sub
mov
mov
add
ds
out
xor
out
loop
enter
dec
push
sbb
xor
fxch
mov
mov
out
or
sub
sbb
mov
mov
xlat
pushf
ss
mov
mov
movsb
mov
xchg
adc
roll
mov
in
and
add
xchg
or
pop
inc
cltd
fadd
dec
leave
in
or
rclb
mov
call
imul
test
stc
xor
push
cmpsb
sub
ds
mov
in
and
sahf
sti
dec
or
jbe
push
add
adc
jmp
xor
outsb
dec
divb
rorb
jnp
add
xor
pusha
cltd
dec
and
xchg
faddl
or
inc
xchg
jns
inc
xchg
fildl
nop
or
xor
in
test
adcb
pop
pop
stos
add
sti
lods
jno
add
stos
dec
movsb
out
jb
inc
fdivl
nop
and
mov
shl
loop
add
mov
test
inc
add
test
repnz
fadds
lahf
pop
fisubs
mov
jle
jns
or
call
pushf
cmp
aad
or
jle
lret
xchg
cmp
mov
popf
icebp
push
pop
adc
inc
aas
inc
gs
lea
ret
or
dec
jo
popf
sbb
inc
ljmp
add
mulb
sub
pop
test
lahf
push
pop
jmp
mov
mov
sub
in
sub
jp
mov
xor
add
lock
in
testl
xor
mov
mov
repnz
add
push
mov
pop
xor
test
inc
adc
jmp
xchg
and
push
outsb
lret
ficompl
xchg
mov
sbb
stc
pop
pop
add
lea
jbe
push
jo
xchg
push
cwtl
movsb
jge
iret
mov
sub
dec
int
das
and
and
orb
je
push
call
test
test
out
add
mov
es
lahf
jnp
sarb
mov
or
cs
mov
xor
pushf
cmp
cld
sub
jnp
jo
xchg
and
adc
and
jae
dec
shrb
dec
mov
dec
mov
or
mov
sub
hlt
or
push
nop
jg
push
jo
pop
mov
cmp
add
popa
movsl
dec
sub
hlt
xchg
adc
mov
lods
int
inc
shll
push
adc
or
mov
shlb
jb
push
add
lds
add
shlb
not
add
mov
xor
pushf
scas
cs
adc
mov
dec
fdivr
adc
sub
sbb
sahf
pop
xchg
xor
cs
sti
rcl
xchg
mov
notb
jge
mov
subl
mov
jae
jo
xchg
das
jmp
push
cwtl
cld
mov
mov
popf
lods
or
rcrb
adcl
call
xor
xchg
sbb
xchg
sub
pusha
adc
lret
inc
cmp
in
stc
addr16
jns
imul
dec
push
fstps
mov
xchg
sub
pop
scas
jo
test
jmp
or
mov
outsl
daa
hlt
mov
in
add
dec
test
mov
jg
ret
push
dec
jns
ffreep
sti
adc
xchg
mov
adcb
mov
adc
xchg
jae
push
adc
adc
mov
push
pop
push
inc
pusha
movsl
stos
iret
ja
lods
or
aam
sbb
or
nop
adc
pop
loopne
push
push
add
pop
cli
fisubrl
les
lret
subb
adc
into
add
cmp
xor
or
sbb
stc
movsb
or
add
xor
jb
pop
je
jmp
mov
iret
and
add
stos
add
lcall
or
iret
cmpsl
inc
das
push
dec
call
sbb
or
hlt
leave
jo
dec
xlat
sahf
sub
cmpl
leave
insl
jp
add
cwtl
pop
jle
cmpsl
sti
rclb
rorl
jp
cld
outsb
rorb
pusha
test
lock
lret
pop
or
clc
stos
fnsave
cli
and
push
push
clc
dec
pop
jbe
mov
or
das
je
leave
sarl
add
mov
xchg
fisttps
pop
ret
das
adcb
testl
add
jecxz
mov
push
test
outsb
lods
xchg
les
inc
sbb
mov
mov
aaa
adc
push
add
and
jecxz
inc
je
fs
pop
lcall
inc
add
stos
mov
imul
push
add
sub
mov
pop
jp
cmp
push
add
mov
std
cmp
dec
and
jmp
push
sahf
roll
hlt
test
jbe
add
mov
mull
addb
add
into
push
xchg
and
adc
insb
cmp
pop
les
mov
jnp
cmp
jmp
and
scas
add
iret
or
imul
cmpl
mov
cwtl
mov
xchg
mov
add
jg
sbb
xor
pop
adc
fnstsw
pop
fadds
xchg
jb
les
add
cmp
and
ljmp
xchg
cld
mov
into
mov
in
mov
mov
hlt
pop
mov
jg
outsb
sub
or
xor
jbe
jne
dec
fucomip
fadd
mov
cmp
push
push
mov
xchg
pop
add
jmp
gs
jno
loope
cmp
bound
cmp
xchg
ffreep
mov
add
sub
add
shlb
loope
nop
sbb
cwtl
xchg
sbb
push
pop
and
fbstp
hlt
je
lods
jnp
shll
adc
xor
int3
push
lods
add
jns
fmul
xor
and
dec
add
push
mov
scas
pusha
fistps
dec
add
sbb
sub
lods
dec
xor
push
adc
push
pop
out
nop
and
int
rorl
adcb
jg
pop
add
add
add
pop
dec
push
dec
cmpsb
stos
sub
shl
pop
push
sbb
testl
xchg
jbe
inc
add
stc
dec
jmp
loop
loopne,pn
repz
add
inc
leave
shlb
mov
pop
popf
sub
shl
push
stc
scas
or
sti
ret
mov
sbb
mov
push
mov
or
jbe
and
inc
scas
test
icebp
sub
pop
mov
cs
sbb
add
inc
mov
dec
cmc
adc
arpl
mov
adc
mov
push
sub
scas
inc
jb
js
xchg
lods
sub
lret
std
in
pop
mov
mov
adc
pushf
idivb
mov
shrl
sbb
xchg
ja
ds
jbe
jno
adc
push
lea
add
int
loopne
jb
jae
dec
rcrl
repz
daa
rol
in
add
or
push
dec
pop
jne
stc
or
pop
adc
push
nop
rcl
add
push
xchg
mov
fsts
mov
inc
outsb
lcall
clc
cmp
pop
and
int
pusha
stos
js
mov
movsb
xchg
pop
or
nop
mov
out
fmull
and
lock
std
xchg
call
sub
sti
mov
pop
popa
mov
xorl
mov
sub
dec
cmp
shl
in
add
xor
jns
pop
decl
pop
mov
insl
adc
jge
mov
cmc
out
movb
mov
jp
add
call
add
out
repnz
std
push
ja
add
xchg
daa
xor
mov
mov
xchg
add
cmp
fcomps
push
pushf
jns
aaa
mov
inc
adc
add
and
mov
inc
fldenv
sbb
sbb
add
es
in
add
cmp
add
push
icebp
xchg
cmc
sbb
add
xchg
rorb
push
xchg
sbb
imul
add
mov
imul
mov
jbe
add
loop
stos
cmp
cmpsb
or
test
pop
add
lea
popf
test
out
pop
add
sahf
dec
adc
repnz
pop
jnp
jae
test
push
rclb
cmp
shl
ljmp
arpl
xchg
mov
add
inc
imul
xchg
or
sbb
dec
mov
rolb
add
mov
mov
xorl
add
mov
pop
sbb
mov
icebp
push
push
pop
pushf
cmpsl
xchg
inc
and
lret
fimull
jns
shlb
and
jge
mov
mov
sahf
repz
sbb
xor
mov
maxps
xchg
sbb
jg
int
inc
xchg
dec
loopne
mov
mov
inc
add
xor
in
jmp
add
lcall
out
fistps
add
push
lea
jbe
dec
adc
push
xor
pop
and
inc
push
and
rclb
or
xchg
xchg
add
lcall
clc
mov
ja
push
sarl
mov
inc
sahf
ret
pop
iret
repz
inc
sbb
lfs
add
jno
sub
lds
popw
inc
jge
pop
test
sbb
inc
movsb
xor
add
mov
or
and
xchg
mov
pop
sbb
push
dec
shrl
aam
mov
lea
test
mov
pop
cmpl
add
dec
adc
add
rcll
push
test
jg
add
mov
outsb
or
scas
mov
push
dec
push
cmp
pop
andl
std
or
out
sbb
push
je
jp
test
or
repz
jl
inc
pop
pop
adc
lret
std
mov
stos
cmc
add
jmp
or
loopne
cli
or
add
int3
iret
pop
aad
jne
add
mov
or
pop
je
mov
sbb
xor
add
add
sbb
test
sahf
ret
mov
or
dec
out
shlb
hlt
mov
jl
popa
hlt
orl
add
sub
xor
ljmp
and
stc
repnz
sbb
leave
xchg
sbb
nop
ret
pusha
mov
mov
mov
push
jl
add
xchg
push
xchg
pop
imul
add
jno
add
shr
call
int
adc
repnz
pop
or
cwtl
repnz
xor
inc
jo
subb
mov
pop
or
push
xor
dec
stc
sti
inc
cld
imul
lea
out
int
sub
lret
adc
and
rclb
and
seto
push
cli
pop
mov
add
pop
andb
or
aaa
bswap
mov
mov
in
mov
cmc
adc
stos
adc
and
mov
fwait
dec
adc
pop
les
in
roll
xor
and
jnp
inc
lret
push
xor
push
cwtl
inc
jb
add
pop
push
stos
sub
das
adc
and
subb
or
push
test
sbb
xchg
cmp
sbb
in
lcall
clc
sti
pop
fwait
jno
xchg
roll
xlat
mov
iret
cwtl
lcall
inc
mov
mov
push
hlt
dec
punpcklwd
pop
add
lcall
ret
outsb
fmuls
lods
inc
push
scas
add
cmc
out
or
in
rclb
pop
inc
xchg
shll
and
add
loope
push
in
aam
and
push
outsl
xchg
dec
mov
pop
out
xchg
daa
mov
in
out
imul
sti
push
sub
add
repz
sub
inc
cwtl
push
xchg
testl
xchg
je
add
sbb
dec
add
testl
std
add
jl
lock
push
and
sbb
mov
andb
loopne
mov
add
xchg
inc
fwait
stos
mov
jg
std
add
clc
test
sbb
sbb
aaa
mov
add
nop
mov
enter
dec
adc
lcall
pop
sub
mov
add
test
stos
sbb
lock
repz
sub
push
test
stos
push
sarb
push
imul
sub
xor
test
js
incb
sbb
pop
loopne
lidtl
mov
jle
dec
not
popl
push
mov
sbb
mov
test
inc
mov
pop
cmp
mov
into
mov
cmpsb
sti
and
add
in
lock
add
xor
pusha
ficoml
jne
jp
mov
dec
insl
loop
add
cmp
int
test
sbb
pop
add
sub
insl
mov
fiadds
mov
movsl
xor
pop
cli
movb
push
push
addl
addr16
add
mov
push
mov
cmc
xchg
iret
int3
push
mov
and
dec
movsb
jge
mov
je
dec
dec
mov
ret
adc
lret
sbb
jnp
repz
imul
cmp
mov
mov
and
sub
push
cmp
ss
push
pop
adc
lret
mov
push
pop
ds
mov
pop
pop
nop
clc
dec
inc
sub
imul
add
xchg
test
xchg
add
mov
and
sahf
rclb
cs
dec
xor
pop
jbe
cwtl
inc
decl
add
and
ljmp
xchg
ss
in
push
sbb
adc
xor
rolb
and
xlat
sub
xchg
adc
in
sub
je
orb
mov
loop
fistpll
mov
pop
into
ret
fldcw
shr
mov
sti
adc
and
mov
loopne
pop
cwtl
adc
add
pop
mov
das
call
enter
aas
pop
adc
add
dec
cmp
push
mov
add
and
fisubs
mov
mov
test
lods
mov
scas
mov
rorl
mov
mov
push
push
lret
dec
add
add
fsubrs
out
lock
cmpsl
lret
jp
fwait
sahf
mov
add
aad
dec
lock
pop
mov
or
and
lods
add
mov
sub
scas
inc
add
jl
adcl
add
xor
iret
in
hlt
mov
test
inc
pop
xchg
dec
pop
addr16
out
inc
push
shll
jae
mov
sbb
mov
cmpsl
fs
pop
xorl
and
fstl
adcb
int3
divb
subl
shrl
add
test
rorl
mov
pop
pushf
add
mov
inc
push
pop
xchg
and
mov
hlt
dec
sub
add
mov
lcall
loop
mov
aaa
cmp
xchg
lods
sub
jge
cmp
ljmp
sbb
add
lods
rclb
in
repnz
lods
test
add
out
mov
mov
adc
push
inc
imul
clc
and
sbb
add
lcall
add
std
mov
sbb
ljmp
add
xchg
inc
add
out
xchg
cli
cld
mov
and
xor
add
cmp
bt
lahf
sbb
sub
inc
fadds
out
bound
dec
push
lods
jns
add
xchg
add
call
or
jecxz
jg
pop
xchg
shrb
hlt
fs
adc
mov
mov
sub
pop
mov
xchg
inc
outsb
add
xchg
outsl
push
mov
add
mov
mov
ja
dec
stc
andb
push
call
addl
push
add
adc
shrb
sub
add
mov
pushf
mov
or
jp
das
push
cmp
mov
cmpb
or
lcall
sbb
sub
xchg
je
mov
inc
shll
xchg
movb
fidivrl
and
iret
inc
pop
sub
cs
xchg
pop
push
add
add
xchg
push
add
adc
fiaddl
shr
pop
testl
sbb
add
or
mov
push
mov
les
in
int3
mov
add
inc
xor
xchg
pop
test
shlb
stos
stc
shrb
insb
lods
nop
mov
out
pop
or
shrl
add
xlat
mov
or
add
movb
add
cwtl
ss
push
faddl
lcall
mov
imul
push
pop
call
dec
aam
ss
ljmp
xor
test
pusha
xorl
imul
popa
nop
push
push
sub
pop
test
iret
adc
pop
inc
push
mov
add
mov
xor
adc
sub
bound
or
or
xor
aad
pop
daa
dec
sbb
loopne
push
add
xchg
mov
mov
nop
adc
lahf
mov
imul
xchg
repz
hlt
dec
xor
lea
jl
mov
mov
dec
and
xor
fsts
test
mov
and
popf
xor
or
test
lret
stc
shll
pop
pop
data16
xchg
decb
mov
mov
sub
adcb
mov
or
js
or
mov
or
dec
push
icebp
daa
jnp
jo
adc
lock
mov
push
test
xchg
and
jo
scas
pop
xor
mov
cmpsl
das
xchg
and
loopnew
xchg
pop
xor
jmp
test
mov
xor
xor
shll
jae
push
add
and
or
push
jg
mov
aad
pop
nop
mov
sbb
pop
push
and
or
jno
lahf
loope
sub
lret
jae
js
inc
repnz
aas
jge
ljmp
push
add
mov
xlat
stos
fwait
dec
xchg
add
sub
lcall
mov
in
popl
adc
inc
sub
push
call
std
jb
or
xor
sbb
adc
sub
mov
cs
sub
pop
xchg
mov
pop
and
repnz
insl
xor
fbstp
push
add
rorb
mov
insl
add
leave
xchg
mov
push
sub
popf
xchg
iret
cmp
fisubrs
xor
and
add
jmp
loop
mov
mov
fdivrs
in
cmp
mov
or
cmp
xlat
out
ja
cmp
test
insb
lds
cli
lret
add
push
lea
jle
mov
pushf
mov
mov
add
sbb
mov
adc
fidivs
xor
dec
stos
testl
int
bound
loopne
push
jo
punpckhdq
dec
mov
cmp
cmpsb
jns
mov
xchg
scas
add
xchg
adc
mov
mov
push
pushf
call
jae
pop
pop
mov
push
pusha
jecxz
cs
xor
add
push
bound
push
mov
loopne
ds
xchg
inc
cmp
test
dec
cmc
std
cmp
push
jg
push
repz
imul
add
sub
and
insl
mov
repz
stos
ja
add
mov
ficomps
mov
ficoml
and
jle
lcall
adc
or
xor
adc
inc
pusha
mov
lock
popa
imul
sbb
dec
stos
fsubrs
test
jb
roll
sub
add
push
xorb
out
loop
mov
xorb
jecxz
pop
movsl
mov
bnd
addb
mov
movsl
aad
ret
mov
inc
aad
xchg
push
add
in
mov
movsl
call
adc
stc
mov
stc
push
mov
push
inc
lret
add
stos
or
mov
adc
aaa
inc
add
cwtl
xchg
lock
cmp
push
scas
and
inc
pop
leave
fdivrs
icebp
pop
das
mov
push
mov
jo
movsb
call
jmp
or
imul
pop
push
sbb
dec
gs
push
jl
test
pusha
orb
clc
sub
or
int3
cs
or
mov
insl
mov
pop
and
das
inc
adcb
mov
loopne
cmp
in
jne
gs
jle
dec
iret
push
sbb
pop
stos
jb
mov
imul
adc
hlt
call
xor
add
ss
xor
push
fisubrs
and
pop
pop
mov
in
or
mov
popf
pop
xor
sbb
pop
adc
sbb
popf
cmp
lea
and
scas
in
je
mov
push
pop
clc
stos
dec
jnp
push
stos
rep
out
popf
shlb
xchg
int3
xchg
das
mov
push
mov
outsl
rolb
fnstcw
or
clc
inc
lret
jb
ss
popf
pushf
xor
push
int3
stc
mov
andl
mov
addl
dec
xchg
ljmp
pop
jmp
test
test
adc
xchg
adc
push
sub
mov
and
xor
or
ret
pop
dec
xlat
int
shl
add
mov
add
xchg
sub
push
sub
ror
pop
push
push
inc
inc
jge
dec
cmpb
xchg
icebp
test
mov
addr16
bound
mov
jnp
and
arpl
ret
pop
aaa
and
add
pop
cmpsb
imul
pop
loope
and
mov
cmp
mov
push
or
pop
cli
xor
scas
std
and
lds
ret
mov
sbb
mov
ljmp
repz
jno
incb
mov
pusha
mov
mov
pop
adc
popa
xchg
add
xor
adc
jmp
nop
add
adc
pop
adc
in
ret
mov
xchg
das
orb
popa
mov
mov
pusha
addl
insl
popa
aad
div
sub
or
push
cwtl
and
dec
push
mov
lcall
lcall
adc
ljmp
push
cmp
jns
sbb
ds
icebp
jo
insb
fimull
pop
dec
sbb
cltd
leave
push
in
dec
es
cmp
mov
inc
push
dec
imul
imul
popf
shrl
in
sub
sub
mov
dec
sbb
adc
jge
enter
nop
inc
mov
jp
out
and
add
imul
pop
std
cmp
outsb
push
sysenter
int
xorb
lcall
xor
mov
mul
pop
leave
and
or
push
mov
add
loopne
pop
lahf
pop
imul
shlb
mov
je
cmp
add
and
mov
sarl
or
test
sub
imul
out
and
mov
icebp
mov
push
mov
pop
test
add
xor
pop
shl
bound
data16
cmp
jecxz
add
add
add
outsl
dec
call
stos
sub
daa
dec
je
loope
fisttpl
mov
mov
jl
xor
stc
dec
movsl
xorl
jmp
scas
outsb
mov
out
add
push
pop
call
inc
loop
pop
and
fdivr
rolb
adc
push
pop
sbb
pop
popa
xchg
cwtl
push
sub
cmc
subl
pop
cwtl
std
or
insl
shlb
mov
dec
pop
mov
mov
dec
scas
inc
xlat
sahf
push
and
cmc
dec
pop
inc
pop
fs
sbb
or
mov
or
jg
pop
in
cld
cmpsb
lock
out
popf
in
cmp
rclb
xor
icebp
adc
lods
add
into
jo
fucom
push
fcoml
adc
mov
pop
fsubrl
or
adcl
and
outsl
xchg
sbb
cltd
sub
imul
sub
or
and
dec
das
lret
mov
popf
fbld
or
lds
add
lea
insb
mov
jle
fsts
enter
inc
jmp
cmp
sahf
insb
fs
mov
xchg
sbb
cmp
cmp
add
xchg
stc
sub
test
sbb
and
hlt
or
lcall
push
xchg
mov
jecxz
pusha
out
cmpsl
cmp
jmp
rcll
icebp
lods
xchg
or
jae
cmpsb
xchg
sbb
pop
test
mov
mov
push
nop
jmp
pop
push
and
or
lret
add
movsb
repz
outsb
jbe
clc
movsl
add
or
pop
push
inc
sbb
ss
popa
shrb
mov
dec
mov
scas
fists
jp
js
jnp
mov
and
popf
subl
mov
adc
daa
push
aaa
lods
add
and
lock
or
imul
cmp
adc
cs
clc
xchg
sbb
int
shlb
fnstsw
dec
and
mov
add
mov
sbb
pop
jb
inc
jo
fnstenv
adc
loopne
sub
pusha
or
add
pop
out
xchg
repz
stos
xor
les
mov
xor
clc
xchg
adc
out
subl
movsl
fs
hlt
jp
or
add
das
sub
or
dec
push
es
pusha
fisttpl
lds
inc
jne
mov
mov
mov
xor
jge
add
add
jg
adc
scas
popa
jbe
mov
pop
outsb
repnz
inc
and
cmp
add
cltd
sub
cwtl
or
push
add
inc
pusha
cld
push
test
jle
push
in
xchg
xor
outsl
pop
popf
pop
in
push
hlt
push
sar
addr16
fwait
aas
jp
xor
or
adc
xor
cmp
pushf
subl
xor
add
das
adc
imulb
loope
pop
and
pop
ljmp
push
add
lret
pop
sbb
or
int
les
addl
pusha
push
aas
jge
jge
xchg
push
push
adc
popa
or
jp
cld
rorl
imul
sti
ds
cwtl
lahf
mov
mov
sub
pop
sarb
mov
cwtl
aad
stc
add
lea
sub
orb
pop
inc
es
xor
nop
add
or
mov
adcb
aad
lds
mov
dec
jae
hlt
pop
xchg
jo
ss
add
xchg
stc
add
ret
leave
adc
pop
stc
lods
mov
les
and
push
jae
or
jg
in
leave
or
loope
mov
add
or
fidivl
inc
mov
mov
push
test
add
mov
mov
or
leave
sahf
cs
ret
sti
pop
pusha
outsb
mov
arpl
mov
or
shrl
sbb
sbb
stos
xor
jb
mov
lods
pop
lds
ljmp
mulb
adc
imul
dec
add
loop
sbb
jp
xchg
adc
jl
outsl
sbb
mov
adc
jmp
or
call
pusha
loop
daa
iret
push
jle
push
or
and
adc
lret
mov
add
or
mov
xchg
mov
and
adc
add
lock
daa
fmulp
std
aas
xor
out
pop
lods
repnz
test
cltd
adc
xor
adc
xchg
fcomps
dec
cmp
add
add
push
or
icebp
jge
out
mov
sbb
mov
inc
test
add
test
es
sub
xor
push
pop
daa
sbb
inc
push
mov
xor
fstpt
iret
mov
mov
addb
adc
sti
test
sbb
pop
push
jb
fsubs
add
pop
sbb
je
das
jnp
fdivs
je
mov
or
pop
mov
mov
and
sbb
in
or
inc
xor
cmpb
dec
cmp
hlt
sbb
inc
rcrb
xchg
and
or
dec
jne
pop
loopne
push
sbb
mov
cld
fucomip
xchg
mov
push
inc
push
inc
adc
sbb
sbb
xchg
push
xor
push
das
je
pop
je
cmp
xor
pop
and
movsl
aad
push
push
ds
push
sub
shr
xor
aaa
data16
push
cmp
clc
push
xor
out
fmul
mov
jbe
gs
and
pop
repnz
daa
rcrb
and
inc
and
pop
cmc
fs
add
mov
pop
hlt
cs
shll
sub
jno
inc
je
jbe
mov
adc
sahf
es
xorl
stc
add
adc
cmp
push
pop
cmpl
ret
or
out
xchg
pop
push
dec
jmp
fildll
sbb
add
push
sti
xchg
out
cmpl
test
jb
and
xchg
xlat
jg
in
outsl
outsb
jne
push
es
int3
jle
jmp
sbb
daa
paddsw
pop
das
popf
aaa
pop
shll
nop
test
push
je
dec
fdivr
xchg
adc
les
jle
imul
outsb
sbb
fwait
mov
add
jbe
jo
add
mov
scas
outsb
dec
mov
add
adc
cwtl
bound
push
imul
cwtl
jmp
outsb
shrb
xor
xchg
jmp
int3
sbbl
or
mov
ja
jne
cli
adc
test
push
fbstp
or
mov
push
cmp
das
mov
mov
les
mov
mov
ss
and
dec
jle
mov
adc
mov
dec
and
fstp
xchg
adc
push
or
into
cmp
mov
in
cmpsl
mov
adc
les
int3
sbb
sub
pop
scas
sub
inc
pop
jg
mov
ds
pusha
xchg
mov
push
pop
shlb
fcmovbe
pop
stos
lahf
mov
push
xor
pop
cmp
call
sub
push
mov
in
popf
loop
xchg
jae
jns
sbb
pop
jnp
dec
push
xor
inc
sbb
andl
arpl
addr16
jb
in
int
test
sar
push
sub
cmp
pop
pop
nop
inc
cmp
mov
add
cmc
sub
inc
push
xchg
sbb
loop
repnz
rol
imul
mov
lahf
rolb
sub
and
imul
testl
in
or
and
add
fisubl
cmp
call
pop
fdivr
xor
mov
dec
adc
add
andl
add
xchg
mov
or
loopne
push
sbb
cmp
push
mov
pop
inc
mov
adc
loope
ret
fistl
and
sub
sub
add
sub
test
std
cmp
rcll
out
mov
test
inc
popa
aam
sbb
sbb
lods
ljmp
sbb
popa
xor
sub
stc
or
mov
push
jmp
cli
and
and
push
mov
fwait
mov
enter
hlt
push
push
mov
mov
mov
mov
adc
bound
aam
das
dec
aad
loopne
jno
mov
pop
aas
insl
or
in
cmp
mov
adc
or
jne
movb
jns
xchg
aas
and
dec
cmc
xchg
paddw
mov
xchg
lods
subl
pushf
scas
sub
xchg
aad
adc
mov
pop
scas
in
push
mov
mov
add
aad
loope
pusha
movsl
and
mov
add
cwtl
jl
pop
push
shlb
inc
pusha
sub
icebp
xchg
icebp
call
and
pop
fildl
loopne
jb
cs
mov
shl
std
sbb
mov
xchg
push
icebp
or
sub
pop
test
and
dec
add
pop
and
sarl
fcompl
stc
aas
pop
cmpl
icebp
sbb
cmp
xchg
push
xor
es
sub
push
rorb
xor
cmp
mov
sbb
add
pop
xor
pop
sarl
mov
enter
je
scas
mov
call
pop
das
pop
imul
push
cs
cmp
stos
or
or
popa
rcr
les
cmpsb
scas
outsl
testb
stos
dec
ficomps
xor
icebp
mov
and
das
sub
sbb
jne
imul
push
imul
pop
negl
cmp
nop
loopne
add
sbb
scas
mov
adc
mov
or
adc
adc
leave
jno
imul
popa
mov
or
push
int
loope
sub
jo
movsb
cmp
sub
sub
sub
mov
leave
and
cwtl
dec
xchg
je
pop
inc
adc
xor
lret
jo
movsb
scas
jnp
sbb
push
jno
fadd
int
pop
mov
sub
mov
cmc
xchg
das
pop
insb
repz
push
mov
push
ficompl
orl
test
and
popf
sbb
push
inc
xchg
jbe
push
or
fcmovne
mov
mov
jg
mov
mov
xor
sub
mov
imul
lea
push
dec
cmpsl
cmp
adc
dec
mov
arpl
and
call
inc
mov
in
inc
mov
cwtl
add
imull
adc
mov
and
pop
push
imul
out
mov
inc
jae
or
add
xor
jns
cld
rolb
jbe
pop
stos
std
jle
jle
loopne
nop
notb
push
xlat
call
dec
mov
fcoml
or
jmp
je
sub
dec
cld
sahf
shrb
ret
loopne
test
jle
sbb
mov
jle
lahf
loopne
loopw
cmp
sub
mov
mov
xchg
adc
add
cmovl
add
dec
push
adc
dec
mov
jns
push
in
lock
push
cmc
shll
mov
data16
jne
fistl
cmp
stos
lret
cmpsl
mov
add
mov
push
nop
sbbb
addr16
outsl
jle
popf
adc
inc
imul
daa
push
shlb
mov
add
pusha
pop
xchg
pop
cmp
fcmovnb
cwtl
mov
ds
stos
je
mov
xchg
shrl
push
sbb
jmp
or
sbb
mov
cltd
adc
adc
sbb
add
sti
mov
sub
andb
push
in
add
sub
sti
hlt
cmc
lods
jmp
fsub
popf
jne
mov
sbb
dec
std
mov
rorb
add
shlb
pop
rolb
xlat
adc
in
jge
jl
jle
push
pusha
mov
xor
push
xchg
icebp
and
adc
mov
cmp
leave
mov
orl
xchg
add
or
arpl
mov
pop
dec
scas
inc
or
cmp
push
adc
pusha
mov
cmp
les
cmp
outsb
roll
jns
adc
mov
out
and
mov
push
push
jns
xor
hlt
inc
mov
xchg
cmp
mov
inc
outsl
rclb
in
inc
adc
mov
jb
jne
sti
loope
pop
jno
mov
sahf
xchg
cmpsb
mov
push
jle
add
sbb
mov
out
call
int
outsb
jns
out
rolb
mov
sbb
aam
pop
adcb
mov
das
add
hlt
imul
mov
add
dec
sbb
lods
pop
xor
pop
sbb
insl
xchg
in
cwtl
push
add
or
out
shll
push
daa
pop
into
daa
out
push
inc
pop
sub
daa
leave
testl
cmc
or
jne
andl
jns
dec
aam
test
sub
test
out
data16
inc
enter
test
and
or
sbbl
cltd
sub
add
cmpsl
divb
jnp
fs
fs
kmovb
and
inc
into
xlat
cmp
xchg
push
das
fsubs
xor
mov
in
leave
lret
xadd
call
adc
ljmp
jbe
ret
push
add
pop
push
xchg
cmpsb
xorb
fldenv
add
scas
add
fistl
imul
jno
fisubrl
push
or
rcll
add
out
addr16
notb
xorl
daa
jae
popa
and
or
daa
adc
mov
inc
xchg
pop
pop
decl
je
testb
popf
cmp
stos
out
in
xor
dec
loopne
popa
mov
mov
mov
je
pop
andb
sub
cmp
inc
cld
add
mov
les
popf
jns
fldl
mov
ret
dec
pop
mov
sbb
icebp
add
xor
fcompl
stos
shrl
mov
out
les
push
stos
dec
pop
dec
mov
or
repz
pop
add
add
cmc
push
jae
adc
mov
int3
movsb
push
repnz
test
add
popa
loope
dec
hlt
add
sbb
test
cmp
repz
mov
and
inc
movzwl
and
inc
sub
jl
pop
cld
out
push
outsl
push
pusha
rclb
mov
add
popf
sbb
dec
pop
das
xor
xor
mov
pop
icebp
add
mov
aad
test
push
cmp
adc
adc
shlb
push
xor
pop
in
mov
mov
mov
loopne
insl
faddl
or
imul
sbb
sub
xor
and
enter
jno
push
inc
push
or
mov
mov
xorb
insl
popa
cli
or
jl
in
in
inc
dec
mov
cmp
imul
fisttpll
push
pop
insl
adcb
dec
out
loopne
xchg
mov
dec
add
and
stc
inc
outsb
or
bound
push
stc
pop
call
sub
or
and
pop
mov
pop
mov
jp
hlt
fwait
cmp
add
in
mov
push
jle
out
pop
fs
hlt
sbbl
push
add
inc
ss
xchg
pop
in
push
pusha
movlps
mov
push
leave
pop
and
adc
in
push
sbb
lds
xor
stos
mov
dec
loop
pop
mov
sbb
ror
hlt
push
pop
insb
pop
ret
je
pop
xlat
xor
xchg
xlat
push
popf
adc
inc
es
mov
shlb
popa
rorl
arpl
dec
das
pusha
cmp
mov
xchg
sbb
dec
mov
loopne
and
xor
add
push
orl
imul
pusha
mov
inc
mov
and
popa
push
lock
sbbl
jno
or
or
inc
or
push
pushf
jmp
sbbb
aad
inc
sub
adc
lock
clc
mov
xchg
add
jp
jge
push
push
pop
cs
mov
inc
shr
shl
mov
lods
hlt
stos
mov
lods
mov
or
test
outsb
and
adc
xlat
ljmp
dec
in
mov
sti
fcoms
mov
push
dec
ror
test
call
out
push
and
jb
nop
push
mov
push
mov
mov
push
pusha
cld
push
pop
aas
popa
pop
dec
xchg
test
push
lcall
mov
mov
fs
jge
sbb
sub
xor
adc
rolb
shll
mov
test
scas
fdivp
ret
ficompl
push
mov
popf
mov
xor
add
and
sarl
les
or
push
sub
shlb
mov
push
or
stc
push
push
sahf
bound
out
add
je
pop
nop
lods
cmp
movsb
jg
or
pop
aaa
xlat
scas
xor
inc
sub
lods
add
lods
inc
ljmp
push
pop
test
outsl
imul
jp
pop
cs
pop
push
pop
xlat
add
dec
and
cld
cmpsl
and
repnz
rcrl
sub
sub
inc
mov
adc
push
or
jecxz
sbb
pop
les
mov
adc
add
repnz
loop
stc
in
int3
mov
and
sarb
sub
xlat
loop
xlat
inc
push
ds
loope
mov
int3
and
pop
dec
mov
cmpsl
sub
inc
add
add
sti
pop
out
jo
cli
in
sub
adc
insb
cmp
aad
push
or
mov
fisttpl
mov
and
mov
fstl
and
je
adc
sub
nop
xor
sub
pop
dec
mov
xchg
mov
add
xorl
popf
lds
jge
xor
mov
test
icebp
push
in
repnz
popf
or
xorb
sbb
mov
xor
mov
jmp
mov
or
xchg
int3
insb
inc
sub
inc
xor
mov
sub
xchg
mov
test
or
dec
aad
clc
movsl
popa
xchg
push
mov
das
cli
and
lods
dec
ficomps
adc
mov
jne
xor
dec
mov
shr
sahf
push
faddl
or
popf
iret
test
mov
xchg
aam
call
out
cmp
test
mov
pop
popf
mov
sarl
test
jnp
add
push
jge
adc
xchg
loope
insb
mov
inc
nop
dec
das
in
jl
push
lods
push
sub
push
fldcw
mov
pusha
test
repz
scas
mov
xchg
cmovo
add
stc
sub
or
mov
pop
mov
mov
or
call
data16
dec
dec
mov
and
push
push
add
pop
mov
out
cld
lret
stc
cmpb
push
adc
and
add
inc
sub
sbb
outsl
lret
or
iret
jle
adc
in
shlb
mov
subb
mov
mov
pusha
jle
cmpsb
ljmp
mov
mov
adcl
popf
or
insl
push
rorb
inc
adc
add
test
sub
mov
loop
pop
xchg
pop
push
popl
mov
jl,pn
jmp
pusha
add
dec
icebp
inc
nop
popf
out
gs
sub
and
and
or
sti
loop
jne
xor
pop
mov
shlb
cld
add
popa
nop
xchg
in
lock
mov
xchg
mov
popa
es
ja
dec
add
push
out
mov
or
jmp
push
push
iret
cmp
mov
cmp
dec
adc
add
sub
std
mov
popa
or
stc
popf
jnp
and
ss
and
pusha
les
movsb
je
rclb
mov
and
mov
pop
imul
add
cmc
mov
aaa
daa
int3
add
mov
xchg
je
or
es
push
push
popf
or
icebp
and
cmc
dec
std
and
mov
add
xor
rorb
pop
ja
adc
push
mov
rcr
les
push
scas
fcompl
add
lahf
jmp
dec
pop
pop
and
imul
gs
loope
push
mov
xor
daa
push
das
aad
mov
dec
push
cmpsb
jb
mov
adc
push
mov
dec
jmp
dec
inc
ja
jg
cs
lret
mov
xor
fmul
sahf
dec
rclb
mov
push
jp
js
test
fwait
jbe
aam
cmp
js
mov
movsl
test
mov
outsl
mov
sti
pop
mov
push
movsb
pop
mov
adc
popf
lcall
add
pop
pop
add
jg
bnd
movsb
ja
ret
inc
out
je
movsl
push
inc
jo
insl
es
mov
inc
sbb
add
mov
popa
push
sti
jo
cmpsb
mov
sbb
movsl
fistpll
jns,pt
subl
sub
push
cmp
add
popf
aas
push
push
push
pop
inc
and
mov
jae
fistps
das
aam
fstpt
shlb
int3
xor
mov
mov
jl
pop
sahf
add
sti
push
shl
insb
dec
xchg
test
dec
jmp
mov
cmp
dec
les
mov
adc
xchg
out
dec
stos
inc
loopne
mov
jg
fists
pop
lds
test
pop
mov
inc
in
jae
mov
xorb
fistl
sbb
cmpsl
adc
push
fbstp
leave
pusha
or
mov
insb
and
xor
sbb
sarl
les
cmp
imul
pop
sub
xlat
outsb
shll
adc
movl
mov
sub
fsubp
stos
and
and
jnp
orl
sbb
lds
mov
jl
popa
mov
mov
push
add
popf
sti
orl
and
add
aas
cmpsl
arpl
popf
sub
movl
movl
cmpsl
inc
jns
dec
mov
andb
in
int3
out
dec
test
add
add
mov
xor
pusha
push
push
repz
add
fisubrs
aam
rcr
loop
add
rcrb
dec
jo
or
sub
or
pusha
scas
faddp
add
and
fs
pop
push
mov
xchg
loope
test
sub
xor
aas
mov
mov
into
push
sbb
pop
cwtl
js
lods
dec
xor
fwait
and
cmpb
add
push
incl
dec
scas
pop
movsl
clc
push
repnz
cmc
int3
fmull
testl
and
pushf
and
adc
lret
mov
shlb
cs
out
hlt
nop
xchg
adc
pop
dec
int
sbb
xlat
loopne
out
jl
push
fstpt
jo
add
adc
popf
dec
push
inc
leave
pandn
jmp
mov
movb
sbb
insb
pop
inc
sbb
push
jmp
int
rorb
or
rolb
inc
mov
in
nop
mov
jne
lods
jbe
xchg
popa
sub
test
pusha
mov
leave
sub
push
inc
xchg
add
jno
insl
loopne
xlat
xchg
push
fmuls
mov
fisttps
jno
pusha
popf
out
pop
addb
lahf
inc
pop
rcrl
or
stos
sub
jg
push
cs
jbe,pt
push
adc
shl
out
addr16
ss
xor
push
sub
daa
mov
lret
pushl
outsb
or
incb
rcr
push
jg
inc
pop
popf
adc
lahf
jae
add
sahf
add
add
out
pop
roll
les
lods
cli
fs
lret
sub
mov
test
sub
lds
sub
das
test
fstps
outsl
mov
lock
or
in
mov
jle
roll
rcr
dec
adcb
fistpll
push
xor
daa
sbb
icebp
std
jl
cmp
iret
gs
rcrb
sarb
or
add
roll
nop
loop
pop
adc
jns
daa
aad
add
fwait
or
ds
pop
mov
lods
mov
and
js
push
enter
rorb
ds
mov
mov
mov
subb
bound
adc
push
inc
mov
xor
push
xchg
cltd
and
pop
inc
pop
jl
in
add
mov
xor
sahf
xor
cmp
mov
pop
adc
nop
cs
mov
push
cs
rolb
clc
push
insl
pop
iret
loopne
cmpsl
mov
push
or
loop
pop
mul
out
test
pushl
sub
xchg
pop
sub
lea
test
mov
clc
mov
xchg
or
cmp
jo
mov
add
shll
add
jno
xchg
mov
pop
in
xchg
sub
and
incb
lret
imul
pop
pop
popf
dec
daa
orl
cwtl
or
les
clc
cs
jmp
mov
cmp
push
push
inc
dec
popf
in
cmp
fstpt
dec
test
or
xorb
iret
cmpsb
add
sbb
rclb
sbb
jmp
fistpll
pop
clc
cmp
in
dec
xchg
in
ljmp
xchg
pop
add
inc
jbe
shll
sub
mov
or
loope
dec
loop
or
and
lcall
xchg
jae
adcl
out
sbbl
repz
jge
mov
cmp
add
pop
ljmp
xchg
cld
jne
cmp
addl
add
shrb
jae
adc
lret
mov
dec
push
fisttpl
or
aam
andl
inc
mov
aam
add
call
imull
pop
pop
dec
adc
push
or
cmp
add
call
and
or
sub
sub
cmp
push
dec
mov
mov
and
push
push
fcoms
and
movsl
fistpl
fsubs
jg
dec
cmpsb
decb
adc
mov
fsubrs
das
in
out
ds
call
and
adc
enter
pop
add
test
push
and
adc
cmp
mov
pusha
fistpl
xchg
dec
add
inc
sbb
cld
fsubrs
mov
rolb
fnstcw
push
adc
sub
sub
js
inc
popf
jno
xlat
leave
inc
cmp
nop
cmpsl
dec
cmp
fstpt
pop
in
push
inc
rcll
addl
notb
pusha
rcrb
daa
or
mov
and
les
or
fcmovnb
movl
repz
je
and
jmp
push
clc
or
in
repz
pusha
fstps
fs
push
inc
adc
jne
cltd
inc
cmp
rorb
jecxz
or
pop
jbe
add
and
push
jg
or
rcrl
mov
ficompl
enter
push
insb
sub
add
dec
mov
or
ficoms
or
jae
add
loope
movsb
shr
dec
cmpsl
nop
dec
lea
cmpsb
gs
xor
jecxz
adc
leave
mov
or
dec
add
mov
mov
jp
dec
mov
fmuls
in
cmp
xchg
push
jo
cmp
mov
in
xchg
rcrb
arpl
pop
call
iret
lds
fwait
sub
pop
and
outsb
mov
push
sahf
cmpsl
in
stos
repz
jmp
add
add
push
mov
push
inc
push
aas
jns
jg
pop
or
ja
les
cmp
add
daa
push
pusha
mov
or
orl
mov
sbbb
popf
sbb
jmp
rdmsr
xorb
sti
enter
cs
push
sub
jbe
lea
cs
cmp
fwait
movsl
test
mov
mov
hlt
nop
fucomip
lret
inc
das
pusha
or
ror
push
leave
cmpsb
popa
in
inc
cmp
push
out
adcb
adc
lea
roll
rolb
xchg
cld
pop
mov
std
popf
push
mov
repz
sub
xchg
xor
push
imul
xor
data16
loop
scas
add
test
push
and
cmp
mov
add
inc
add
push
mov
jp
add
pop
das
xor
xchg
sbb
pop
add
jmp
sbb
in
pop
fsubrp
int
jg
mov
imul
jno
inc
jno
pop
call
mov
jo
fmuls
scas
lea
add
sub
push
aas
subb
int3
popf
dec
jge
cltd
jo
adc
gs
packssdw
or
xchg
mov
mov
rcrl
into
add
cmp
cwtl
add
xchg
sbb
call
cmp
je
push
pop
imul
mov
mulb
into
push
je
pusha
mov
popf
sbb
into
cli
dec
inc
test
pop
subb
shlb
inc
inc
push
cld
arpl
jo
mov
pop
and
or
dec
rclb
adc
dec
popf
adc
mov
push
test
and
test
clc
pusha
addl
jno
inc
and
aam
sbb
add
popa
int3
ljmp
pop
mov
xchg
sbb
in
mov
inc
sbb
bound
sub
inc
add
inc
andb
js
sbb
shll
or
jg
cmp
pop
or
scas
clc
add
in
sbb
daa
out
std
inc
shlb
jne
mov
and
lods
ja
cld
dec
mov
adc
mov
popf
push
adc
cld
shrl
push
pushf
in
cmp
repnz
mov
das
cmc
push
bound
ja
push
or
mov
xchg
add
mov
mov
push
das
inc
lods
xor
popf
sbb
jl
mov
cmp
fildll
nop
aaa
and
jns
sbb
fstps
cs
mov
mov
icebp
jl
fs
jmp
mov
adc
add
xchg
repz
sarb
add
xor
push
lea
stos
xor
sub
push
repnz
sbbb
addl
loope
add
test
sbb
imul
add
and
jg
sbb
and
or
cmc
sarl
xor
outsl
xor
or
adc
adc
insl
sub
popa
add
call
push
cmpb
inc
repnz
xor
jne
adc
std
dec
test
bound
mov
and
push
mov
inc
cltd
dec
xchg
sti
jnp
adc
push
push
sub
loopne
loope
popf
pop
aaa
in
xorb
pop
push
scas
shlb
imul
in
xchg
mov
insb
xchg
cmp
rolb
hlt
mov
div
jne
ret
add
add
rolb
mov
push
xchg
xor
shll
stos
and
cmp
mov
mov
sbb
cmp
add
xor
faddl
jns
push
mov
xchg
out
ja
dec
add
adc
jg
cmp
sti
push
mov
and
adc
push
mov
rclb
mov
call
shr
sbb
xorl
popf
jo
test
cmp
insb
daa
test
add
mov
adc
lods
pop
pusha
mov
mov
stos
jl
jne
xchg
in
lret
jge
mov
pushf
lds
sub
jle
jl
add
scas
jnp
mov
push
mov
movsb
add
mov
xchg
pop
add
je
xor
jmp
cmpsb
push
add
insb
inc
pop
add
jo
pushf
add
pop
or
add
xor
mov
test
dec
xor
or
adc
ficomps
add
mov
and
xchg
sbb
dec
pushl
mov
jbe
push
xchg
fisttpl
add
jg
mov
out
mov
out
stos
in
daa
mov
hlt
mov
scas
mov
sub
sbb
fildl
and
cmp
repnz
or
fwait
lret
fdivrl
mov
add
inc
xchg
xchg
add
add
xchg
in
shll
or
cmp
and
mov
out
dec
add
xor
sar
pop
das
jecxz
inc
iret
dec
inc
inc
push
or
push
sub
ljmp
pusha
add
imul
jno
xchg
sbb
add
ds
jo
fimull
fdivl
negl
fcomps
pusha
push
dec
outsb
test
xor
add
jmp
push
dec
inc
mov
add
roll
mov
dec
jmp
jp
jge
push
aam
jne
dec
mov
cld
in
sahf
mov
test
sub
divb
jecxz
test
into
mov
sub
push
push
cmp
adc
ret
add
cli
aaa
icebp
or
clc
xor
xchg
andl
sbb
cmpsl
incb
sbb
je
push
pop
push
pop
or
rcll
add
jb
test
mov
add
enter
icebp
pop
inc
mov
out
dec
pushf
add
sti
mov
in
pop
pop
push
xchg
cmp
frstor
loope
lcall
or
jmp
mov
pop
arpl
les
cmp
push
and
add
adc
ljmp
add
xor
mov
and
ds
fistpll
je
ljmp
mov
jo
rcl
repz
lret
adc
add
cmp
sbb
push
adcb
or
das
ja
test
aas
dec
push
cmp
mov
lods
xchg
pop
xor
mov
loop
stos
jae
faddl
and
lahf
and
add
sub
mov
add
ss
jp
adc
push
loope
sarb
in
les
jmp
mov
adc
add
mov
add
inc
lahf
xorb
js
pop
and
mov
sbb
pop
and
sbb
sub
add
push
insb
pop
add
popa
testb
faddl
cltd
ja
jl
stos
push
movsl
push
cmp
idivl
pusha
pushf
inc
add
mov
jno
dec
xchg
adc
mov
xchg
mov
mov
add
inc
out
inc
sbb
inc
add
dec
push
add
test
add
int
push
imull
add
xchg
mov
push
call
and
mov
lret
adc
pop
imul
pushf
popa
xor
mov
xchg
testl
add
sub
lret
sahf
and
xchg
lcall
add
outsb
adc
cmpsb
out
pop
je
gs
jmp
fmul
jmp
adc
inc
add
fwait
sbbl
jns
push
adcb
dec
pop
pop
add
push
xchg
ja
in
xchg
lock
mov
lock
add
mov
mov
inc
test
loopne
mov
and
fwait
inc
pop
subb
bound
cli
inc
pop
mov
mov
mov
dec
cmp
and
and
dec
movsl
mov
sub
add
pop
dec
pop
dec
incl
add
lahf
test
orb
jecxz
rolb
nop
int
xor
xchg
les
add
orl
or
mov
sub
fcoml
aaa
and
lds
subl
add
sub
dec
shrb
and
in
sahf
add
nop
cmp
add
mov
add
pop
adc
sbb
repz
jp
or
jmp
jno
notb
bound
outsl
xor
imul
push
dec
loopne
jg
aas
xchg
int3
xor
or
cltd
xor
add
pop
bound
pop
adc
cwtl
mov
cmpb
dec
mov
cmp
lret
xorl
pop
push
dec
loopne
stos
inc
enter
mov
pop
jnp
or
mov
daa
ficoml
shl
mov
sbb
or
or
add
enter
push
scas
cmp
add
pop
rcl
add
pop
iret
jecxz
adcl
add
or
sar
addb
mov
test
shl
push
and
and
movsb
xchg
push
push
and
stc
arpl
add
and
push
je
and
mov
push
pushf
outsl
add
pop
repz
rcrb
add
mov
aas
add
rclb
imul
add
cltd
aam
jecxz
and
xchg
mov
vmovdqa
or
pop
shll
mov
mov
shlb
jnp
push
xorb
cmpl
jle
jbe
sbb
sbb
cmp
and
push
in
pop
in
popf
out
add
push
dec
pop
lods
ss
add
lock
sub
imul
out
jp
add
outsb
adc
es
adc
xchg
ret
pop
xor
pop
aam
divb
add
mov
sbb
pusha
xor
xlat
subb
adc
popa
dec
in
jmp
out
je
cmpsl
repnz
or
push
scas
add
mov
or
sbbb
stc
ljmp
inc
pusha
jmp
xlat
add
insb
mov
dec
pop
xchg
and
test
sbb
and
push
lret
cmp
fldl
dec
loopne
add
jmp
or
pusha
cmpb
test
andb
loopne
add
addr16
cltd
add
jg
hlt
ds
int
add
sub
fdiv
scas
push
test
mov
or
add
cmpsb
pop
mov
add
sbb
out
sub
xorb
mov
and
add
jl
sbb
push
cmp
nop
mov
sbb
mov
xchg
xor
aas
call
pop
pop
add
mov
lahf
add
push
mov
pop
ja
mov
bound
push
ss
cmp
inc
add
mov
repz
add
movsb
lahf
out
ds
inc
xchg
adc
mov
add
jnp
dec
add
jl
mov
iret
stc
stos
jg
add
lea
adc
js
lahf
repnz
sbb
push
jl
shlb
xor
fnsave
add
dec
imul
inc
add
nop
loope
or
jne
cmp
testl
fadds
pop
mov
pop
or
loopne
add
outsl
int
dec
or
add
mov
mov
addb
fists
mov
cmp
and
repz
sbbb
loopne
push
int3
inc
rclb
mov
out
testb
ss
cmc
pavgb
jmp
adc
sub
pop
int3
or
jmp
aaa
dec
jo
loopne
mov
test
or
jp
pop
out
in
push
mov
push
cwtl
or
cmp
dec
orl
std
inc
xchg
mov
or
int
add
push
loopne
mov
pop
pop
ss
movsl
imul
pop
sub
in
dec
loope
jle
imul
ds
inc
hlt
adc
pushf
xchg
sbb
mov
push
mov
add
popa
dec
jbe
add
push
test
fistps
or
out
adc
out
xchg
xchg
fs
movsl
and
add
cmp
mul
popf
xchg
ds
add
adc
pop
test
pop
aam
daa
adc
push
add
mov
and
negb
and
push
xchg
push
stos
mov
dec
hlt
mov
aam
addl
loopne
inc
add
mov
div
adc
shlb
pop
stc
outsl
in
je
mov
dec
or
inc
add
cmp
test
jo
mov
sub
jbe
addr16
clc
and
sarb
scas
sbb
sub
push
add
and
pop
add
mov
and
inc
filds
xor
addr16
push
sarb
lret
fwait
mov
repz
out
inc
sbb
out
push
pusha
xchg
adc
adc
pop
stos
test
jl
add
pop
mov
sbb
lcall
jl
add
out
xchg
mov
push
clc
adc
push
andb
mov
ror
push
incb
or
jno
loop
add
adc
ss
or
cwtl
or
aad
addb
push
hlt
sbb
cmp
mov
clc
enter
out
sbb
test
shr
aad
mov
fcmovb
dec
es
sti
inc
test
mov
xchg
pop
cltd
jo
adc
aad
movsl
or
lock
add
dec
data16
nop
in
pusha
adc
in
fwait
das
scas
mov
ret
and
dec
fdivrs
add
and
sbb
std
pusha
mov
xor
or
test
sub
popf
pushf
mov
xor
adc
add
mov
dec
pop
ret
out
add
mov
cmp
xchg
pop
xlat
push
addb
rolb
int3
clc
scas
cld
add
adcb
gs
imul
outsl
test
cltd
cmp
popf
pop
inc
mov
fmull
test
inc
nop
into
jg
mull
ret
pop
or
cltd
xchg
sub
add
push
xchg
jp
lret
ret
xchg
add
rcrb
xor
jns
mov
jno
mov
jl
cmp
test
mov
add
and
popf
jb
orb
insl
addl
in
pop
jmp
sub
and
cmpsb
add
dec
sub
pop
in
fdivs
inc
pop
push
out
call
xor
and
sbb
sbb
push
movl
push
incl
add
push
sbb
sbb
and
add
adc
xor
mov
push
jb
cmpsb
ss
mov
out
xlat
xor
push
xchg
add
mov
test
or
jb
mov
lret
outsb
testl
mov
jge
rolb
sbb
inc
add
push
stos
jge
add
clc
cld
push
xor
mov
xchg
add
imul
sbb
rorl
add
xchg
loop
pop
pop
and
push
dec
or
into
or
lds
xchg
and
lcall
imul
les
add
cli
mov
add
js
stc
jbe
shl
mov
pop
jnp
pop
in
loop
dec
push
or
fs
sub
data16
or
and
and
pop
lcall
mov
js
sbb
push
sub
sub
xchg
pusha
in
dec
fwait
int3
inc
test
inc
sbb
dec
popl
adc
rclb
add
fstpl
test
add
dec
jecxz
shll
cli
out
pop
dec
test
jno
pop
in
xchg
in
push
loopne
cmp
repnz
or
pop
cmp
xlat
out
sbbl
fldcw
shl
push
xlat
push
hlt
xchg
and
xchg
aam
inc
addb
jne
mov
hlt
sti
movb
add
notl
xchg
and
or
cmpsb
pop
gs
dec
ficomps
fs
pop
incb
adc
add
imul
dec
sbbl
inc
pop
add
repz
scas
rol
inc
push
xor
sbb
in
sub
pop
inc
adc
pop
enter
out
add
mov
push
stos
dec
xor
jl
gs
shll
cmpl
mov
add
das
add
sub
push
add
nop
adc
add
cmp
or
add
out
cmc
sub
inc
sbb
ljmp
xchg
stos
aad
scas
subl
clc
imul
sbb
or
imul
inc
cli
scas
aas
gs
jbe
psubsw
cltd
das
outsl
inc
roll
sub
cmp
cwtl
popa
sbb
call
dec
mov
lock
in
mov
jb
cwtl
shlb
push
js
add
mov
or
and
add
stos
in
std
cmp
shlb
inc
jmp
popf
pop
rolb
push
test
rcrb
add
dec
fldl
or
bound
pop
mov
dec
enter
sub
jae
insb
cmp
cwtl
adc
adc
add
sub
pop
mov
imul
out
or
jl
xorl
adc
mov
in
popa
dec
jg
jae
shll
lods
movsb
cwtl
mov
movsb
and
xchg
adc
js
cmp
pop
ret
sub
clc
lea
adc
mov
lret
popa
cmc
pop
xor
fisttpl
adc
add
imul
add
das
jmp
push
mov
push
cmp
int
std
es
jns
push
add
mov
dec
pop
xchg
push
push
cwtl
inc
inc
subb
add
add
iret
shrl
xor
gs
in
add
and
lock
jae
nop
push
stc
jne
jmp
add
out
jae
inc
or
sbb
cmp
in
and
adc
addr16
dec
imul
orb
fwait
xor
add
rorb
xor
fld
push
mov
inc
movsl
add
add
xor
insb
repnz
les
add
jne
jmp
mov
jne
dec
notb
loop
sbb
pop
sti
ret
cmp
mov
inc
jl
adc
stos
add
jmp
sbb
cmp
xor
push
cmp
add
push
add
stos
ret
gs
mov
imul
pop
sub
imul
in
pop
addl
mov
add
das
inc
push
sub
and
inc
popa
or
and
mov
add
loope
pop
sarl
inc
jnp
add
jmp
push
mov
pop
jbe
clc
stc
sti
inc
lds
add
add
data16
loop
adc
out
add
aam
insb
clc
and
das
cmp
xchg
jp
add
fst
mov
push
rcrl
add
pop
add
lret
inc
sub
cmp
add
cmp
cmpsb
xchg
xchg
jae
jo
cmp
or
inc
add
cmp
frndint
pop
movsl
push
stos
mov
mov
mov
push
in
subb
and
data16
stos
push
aas
les
and
out
pushf
or
xchg
mov
out
xchg
ljmp
mov
inc
dec
cmp
iret
xorl
add
mov
and
into
inc
jmp
insl
pop
mov
stc
mov
addl
mov
mov
aaa
push
pusha
mov
cld
incb
repz
inc
cmp
cmp
jl
repnz
std
add
jns
jmp
cmp
cmp
divb
mov
add
mov
out
sbb
lret
pop
dec
cltd
push
add
jb
mov
pop
jae
mulb
push
hlt
aam
call
and
fisttpll
loopne
add
xchg
dec
cmp
xlat
inc
shll
mov
or
in
pop
mov
dec
mov
out
shl
mov
lcall
pop
add
jo
xchg
int
inc
pusha
lcall
xor
mov
jl
subl
jne
test
mov
loop
sbbb
mov
lahf
mov
into
enter
lahf
nop
lcall
pop
xorps
pop
mov
mov
add
cltd
stc
addb
inc
cld
mov
fs
mov
out
dec
movsb
inc
aas
enter
fstpt
xchg
mov
mov
mov
xchg
jnp
jp
insb
jb
pop
inc
xchg
aas
nop
arpl
mov
repnz
mov
aam
loope
add
cmc
mov
cmp
xor
inc
loopne
ljmp
test
inc
das
insb
sti
test
add
sub
imul
mov
das
lock
mov
mov
mov
or
insb
loopne
dec
outsb
mov
arpl
in
sbb
xchg
out
movsb
pop
outsl
fisttpll
inc
add
adc
sbb
cwtl
inc
test
push
cmp
pop
jno
push
inc
push
loope
addr16
add
cwtl
add
add
cltd
xchg
push
cmpl
rolb
adc
jecxz
push
sarl
leave
scas
xor
movsb
mov
add
sub
cli
and
inc
jns
pop
sub
mov
arpl
test
stos
lahf
push
add
pop
push
pop
jbe
dec
add
push
in
inc
aaa
outsl
add
je
sub
rclb
lods
inc
add
mov
in
movsl
xor
adc
pusha
add
ja
xor
xchg
xchg
addr16
jecxz
pop
lds
jno
add
cli
mov
in
pushw
bound
add
cwtl
or
andb
hlt
test
xchg
add
and
jbe
dec
loop
adc
rcrb
call
movsb
mov
dec
add
ret
jmp
in
xchg
leave
js
add
hlt
and
pop
jns
or
incl
push
jbe
dec
cmp
fmul
mov
sbb
push
sub
add
add
daa
add
dec
out
jbe
dec
add
pop
lret
push
mov
mov
cmp
or
pop
fs
add
mov
cwtl
out
or
xchg
cltd
add
hlt
jle
dec
add
push
cmp
les
in
mov
or
in
ljmp
sahf
sub
mull
or
mov
pop
add
mov
mov
mov
jae
hlt
push
xlat
or
adc
test
shll
and
arpl
shll
lods
add
aas
imul
fsubr
pop
bnd
rolb
push
inc
jle
push
pop
and
xchg
test
xchg
jnp
sbb
xchg
add
sub
ret
push
pop
pusha
dec
dec
outsl
push
hlt
jno
inc
nop
mov
sbb
aam
lock
mov
inc
push
inc
and
adc
cmp
mov
mov
mov
aas
sub
and
mov
inc
imul
sub
int
arpl
imulb
push
mov
aam
jp
dec
pushf
fs
lcall
sbb
inc
add
cld
cs
loopne
add
inc
cmp
add
idiv
shl
add
pop
push
fldl
mov
xchg
fiaddl
shl
push
scas
mov
add
add
mov
nop
sahf
sub
jecxz
mov
jo
iret
and
bound
sbb
cmp
pushf
adc
xchg
fdivrs
add
jnp
data16
arpl
je
inc
js
sbb
dec
add
ja
add
push
mov
syscall
mov
stc
xchg
adc
imul
jmp
add
fistpl
dec
add
shlb
decl
mov
psubb
xor
enter
cmpsb
xor
rcr
cli
mov
sarl
int3
jne
add
je
ds
testl
add
addb
les
jb
xorb
dec
out
sahf
addr16
daa
hlt
mov
xchg
and
xchg
push
add
out
cmc
imul
movsl
fnsave
inc
enter
mov
rorb
shlb
mov
add
insb
adc
mul
faddl
mov
jmp
sbb
in
dec
jns
test
mov
cs
mov
mov
fisubl
cs
sbb
int
xor
pop
jp
scas
loopne
xchg
lea
jno
add
push
orl
fwait
pop
aad
jg
cmp
push
movl
sub
adc
mov
cmp
aas
jnp
fdivrs
push
ret
fists
jbe
mov
push
add
push
fcomp
in
cld
sbb
push
pop
pop
jp
mov
das
rorl
mov
mov
mov
mov
add
loope
push
hlt
or
xlat
dec
inc
scas
aad
dec
xor
xor
adc
sbb
dec
adc
jmp
daa
fsub
push
pop
cmp
add
jne
xchg
scas
das
add
cmpsl
xor
js
loopne
imul
fadd
sub
aaa
mov
mov
xor
scas
add
push
push
sbbl
cmp
adc
movsl
jne
mov
loopne
pop
ljmp
das
xchg
mov
test
mov
push
jp
jno
add
insl
sub
mov
aad
push
fdivl
sub
nop
pushf
mov
cmp
fiadds
out
inc
add
dec
and
and
inc
add
repnz
repz
dec
push
scas
mov
fcoml
stc
ja
hlt
aad
xchg
add
xchg
push
lea
fadds
into
ret
sub
push
das
add
mov
or
dec
shlb
out
xchg
add
lods
repz
outsl
adc
add
mov
xchg
pop
loopne
mov
jne
fsubs
jecxz
xor
lret
add
dec
fnstenv
adc
popa
xchg
add
je
lock
sarb
push
inc
add
and
add
push
cld
add
seta
loopne
add
adc
mov
out
lods
add
out
adc
dec
add
lods
cli
jecxz
adcl
inc
in
pusha
outsb
sub
popa
sub
sbb
or
hlt
mov
inc
aam
loopne
roll
cmp
clc
out
push
add
xchg
mov
push
add
jge
add
jl
cmpsl
add
and
xchg
cmp
push
xchg
cltd
add
rcrb
cmp
adc
xor
push
pop
bound
pop
les
add
lret
stos
and
out
push
jge
jo
jp
je
stc
sub
and
xchg
dec
mov
sbb
mov
rorl
imul
inc
inc
push
shl
gs
adc
push
jle
sbb
add
iret
mov
sub
pop
push
add
in
jp
cs
mov
jbe
repnz
ljmp
xor
fxch
push
pop
adc
insl
aas
je
add
jecxz
add
mov
mov
xchg
pop
jnp
cltd
fmul
push
call
push
andb
inc
pop
mov
aaa
push
xchg
lods
mov
jae
xchg
and
add
aas
mov
repz
js
repnz
or
jae
or
add
add
jmp
inc
addb
adc
mov
adc
jo
fsubl
xorb
sahf
adc
pop
icebp
mov
sub
push
je
sub
test
mov
mov
pop
add
pop
test
dec
mov
add
and
lock
add
mov
xorb
mov
fadds
icebp
adc
aaa
or
xor
add
mov
repz
les
add
stos
stos
xor
add
clc
push
add
into
and
jo
test
sub
inc
call
lcall
add
jae
pop
std
imul
scas
arpl
mov
cmp
add
dec
outsl
mov
jno
or
mov
pop
sbb
sti
add
orl
xor
insl
xor
pop
movsl
inc
pop
outsl
dec
add
mov
mov
sbb
add
mov
rol
sbb
dec
mov
push
imul
add
sbb
out
dec
jge
movsb
dec
xor
inc
fxch
sub
jno,pt
or
lret
adcb
rolb
jecxz
in
mov
icebp
subb
sbb
xchg
loope
out
shll
dec
es
dec
rclb
loopne
xor
fwait
add
cmp
sarl
call
push
lret
shr
sub
lods
cld
xchg
add
cmp
inc
outsl
inc
je
push
pop
xlat
mov
inc
dec
push
dec
push
stc
faddl
sbb
loope
ret
scas
dec
mov
add
jno
enter
fdiv
mov
test
xchg
and
push
sub
xorl
push
jg
dec
sub
movsb
mov
cmp
daa
sub
add
and
mov
sub
loope
lahf
push
ret
test
sbb
icebp
nop
fiaddl
loope
rcrl
out
lahf
int3
adc
push
adc
test
ror
les
and
lcall
pop
push
xor
subb
cmp
add
or
bound
mov
or
scas
subb
add
jge
mov
call
fcompl
adc
lods
imull
add
cmc
lcall
je
dec
or
les
aam
mov
xchg
lret
sub
mov
push
xor
add
je
xchg
std
xor
add
pop
hlt
arpl
into
mov
movups
xchg
push
in
loopne
call
push
mov
and
mov
add
test
pop
lods
add
sub
pop
push
xor
fs
sbb
scas
pop
push
add
pusha
xchg
add
xchg
jge
pop
jo
fldt
or
andl
les
lret
sarb
es
push
ljmp
out
jge
aaa
pop
sarb
and
push
adc
pop
mov
daa
rcrl
iret
mov
sti
dec
nop
push
add
sbb
and
rcrl
add
dec
or
adc
mov
sub
cmp
push
sarl
pop
scas
mov
ror
rolb
les
add
js
push
loopne
jo
notb
pop
cmpsl
in
les
add
push
inc
and
nop
inc
dec
mov
add
xchg
inc
push
add
fwait
push
incl
dec
cmp
xchg
xor
call
dec
cmp
pop
and
and
rclb
out
rorb
xor
xchg
or
jmp
fs
inc
xor
xchg
mov
jg
add
push
insb
movsb
xchg
cwtl
cmp
and
test
shlb
out
and
lret
add
stc
testb
popa
andb
sub
xchg
fs
repz
mov
jns
lods
sahf
addl
pop
or
sarl
jne
mov
out
sarb
cmpsl
fbstp
fsubrs
jecxz
add
pop
cmp
addl
sbb
or
iret
mov
andl
xor
push
mov
loope
loope
or
shll
lods
adc
subb
lods
and
ficoms
sub
out
mov
adc
cmp
sbb
add
push
inc
or
fbstp
cmp
inc
lahf
dec
loopne
xor
sar
test
or
call
dec
faddl
scas
rclb
nop
outsl
push
pop
iret
lock
sahf
inc
xor
sarb
call
es
loopne
getsec
pop
loopne
pop
push
in
push
adc
push
insl
cwtl
adc
das
or
and
or
fsubrs
dec
insb
adc
mov
sbb
shld
cmpsl
ss
call
adc
push
and
dec
inc
pusha
sbb
dec
xor
lods
ds
or
jno
jbe
inc
xor
xor
lds
and
sbb
pop
fldenv
mov
add
mov
xor
cwtl
pop
sbb
mov
daa
mov
jp
test
add
out
mov
ret
mov
mov
hlt
pop
ret
loop
cmc
cmp
ljmp
jns
cltd
jns
adc
loopne
push
sbb
or
inc
enter
push
cs
sbbb
pop
add
push
stos
lods
mov
xchg
pop
mov
lahf
add
and
aas
pop
subb
out
scas
insb
jns
cmpsb
test
jb
repnz
sti
shlb
cmp
pop
movl
pop
shrb
xchg
rolb
xor
loope
sarb
loopne
addr16
test
mov
and
lods
inc
cmpsb
into
roll
push
jb
pop
xchg
and
mov
add
mov
popa
clc
mov
movsl
aam
andl
sbb
mov
leave
mov
lcall
test
xchg
shll
clc
and
adc
popf
out
fucomip
insl
pop
adc
mov
sbb
addl
mov
ss
aas
ret
pop
jmp
ret
jl
jl
xor
pop
sbb
fisubrs
insl
and
adc
lea
out
and
sub
mov
adc
aas
xor
jae
popa
mov
and
leave
add
mov
rorl
or
dec
in
ja
xor
aad
mov
push
mov
sbb
mov
ret
or
enter
xlat
xchg
movsb
pop
fadds
in
movsb
arpl
enter
dec
int
mov
lea
iret
and
and
jl
adc
jns
movsl
adc
xchg
hlt
add
lock
setbe
shrb
push
ret
out
dec
xchg
or
fcoms
clc
push
shl
add
push
and
or
leave
je
jle
arpl
add
add
dec
mov
sti
jns
nop
ljmp
xchg
jg
xorb
movsl
jno
xor
in
add
mov
push
push
add
add
lcall
mov
test
mov
int
add
mov
imul
push
out
xchg
rorl
sub
add
mov
test
movsl
inc
ja
push
add
add
dec
lods
das
arpl
dec
cld
aam
mov
inc
sub
decl
loope
xchg
push
and
or
clc
pop
mov
cli
hlt
and
shlb
cltd
sub
dec
ss
pop
movsb
push
inc
push
faddp
jnp
mov
out
sarb
es
add
jle
lods
aam
out
mov
and
call
adc
gs
fbld
mov
out
test
mov
lahf
enter
cmp
dec
andl
fdivl
pop
pop
daa
clc
sub
pusha
popf
cmpsl
bound
loope
add
and
inc
jecxz
adc
lea
mov
bound
jle
jecxz
inc
sbb
repnz
gs
dec
xchg
mov
mov
mov
imul
cmpsb
nop
push
in
jecxz
cmovg
mov
xor
inc
add
mov
inc
js
adc
rclb
sub
repz
xchg
ss
jbe
add
mov
lods
add
and
cmp
xor
mov
in
in
sbbb
jb
cmp
loopne
jbe
hlt
add
test
sbb
mov
out
stos
aam
dec
mov
mov
in
mov
jmp
jnp
fcomp
cmp
mov
jl
and
fstl
add
rorb
pop
arpl
cmp
clc
mov
pushf
icebp
mov
mov
xchg
cli
pop
ja
push
mov
sbb
sub
pop
pop
int
mulb
cmp
and
add
jecxz
lahf
push
aad
mov
add
pop
adc
pop
dec
imul
cmpsb
adc
or
clc
sub
int
dec
mov
push
mov
pushl
and
pop
sbb
fidivrl
jg
inc
cmpsl
fwait
lods
add
sub
notl
pop
inc
std
pop
add
and
int
cmp
pop
inc
jno
sbb
in
mov
adc
inc
in
and
loop
popa
xor
pop
sbb
sbbb
push
mov
test
push
add
inc
subb
dec
add
or
add
test
stos
add
pop
push
loop
scas
jmp
cmc
mov
pop
add
repz
flds
subl
scas
add
pop
lds
push
sti
sbb
ficomps
and
shlb
jle
push
loope
xor
inc
punpcklbw
into
lret
add
out
xor
and
mov
push
mov
mov
fwait
or
out
and
testl
popf
xor
sub
adc
scas
pusha
add
stos
fcomps
sbb
jo
add
xchg
roll
inc
les
bound
in
fcoms
xchg
mov
scas
inc
inc
pop
add
pop
adc
pop
js
push
js
add
jge
mov
push
mov
je
cmp
push
xor
cmp
dec
cmp
mov
push
movsb
xorb
rcll
add
aaa
push
lods
mov
add
jecxz
popf
cltd
scas
lods
pop
add
mov
call
in
sti
and
push
add
mov
call
xchg
jae
mov
adc
clc
cmp
test
iret
outsb
xor
adc
cmp
push
and
adc
cmpsb
pop
mov
lret
nop
scas
call
out
xchg
jecxz
fs
add
mov
pmulhuw
jbe
add
aas
insb
lahf
add
or
fwait
cmp
dec
mov
popa
popf
lcall
push
sbb
rcrb
cwtl
rol
add
mov
shll
popa
mov
das
insb
or
test
sub
xor
inc
add
inc
imulb
cmpsl
pushf
mov
sbb
clc
mov
repnz
pop
lds
add
dec
pop
mov
pusha
jle
scas
sahf
lock
data16
mov
inc
cmp
sub
push
repnz
add
inc
dec
jl
ret
and
stos
sahf
sbb
fsqrt
cmpsb
add
or
xchg
lods
mov
add
out
push
and
call
sub
imul
mov
and
test
adc
pop
jecxz
mov
cwtl
cmp
lock
xchg
inc
pop
dec
ds
faddl
scas
out
test
push
add
xchg
mov
add
adc
hlt
mov
ret
xchg
add
add
push
sbb
cmp
mov
jo
mov
mov
int3
shrb
pop
repnz
mov
out
jns
mov
cmp
dec
add
xlat
add
ja
mov
mov
pop
adc
jo
mov
and
add
lret
jl
incl
and
out
jns
push
mov
notb
pop
in
adc
jbe
sbb
mov
cli
mov
cmp
push
adc
into
push
shlb
loope
pop
fisubl
xor
ror
cmc
cld
push
adc
pop
add
jbe
pop
daa
cmp
sbb
add
push
jno
imul
int
cmp
pop
xchg
inc
add
mov
add
lock
stos
stos
divb
popa
mov
jle
dec
pop
dec
int
add
pop
xchg
mov
daa
add
lret
sbb
out
xor
cmp
aam
jmp
aaa
add
push
gs
jns
pop
popa
in
pop
push
cmp
in
jne
xchg
add
movb
cmp
shrl
cmpsl
pushf
or
hlt
xchg
imul
lret
mull
pop
dec
cmpsl
mov
nop
dec
add
fiaddl
add
xor
mov
push
out
cmp
scas
adcb
stos
add
out
cmc
sti
pusha
call
mov
rolb
in
sahf
or
push
aam
stos
mov
push
inc
mov
mov
xor
push
arpl
shlb
nop
push
or
lahf
add
mov
pop
mov
pusha
and
bound
add
roll
mov
and
push
cmp
movsl
lock
jo
int
pop
fistpll
push
sub
repnz
xor
jns
dec
iret
out
rolb
xchg
loope
cwtl
xor
call
dec
popa
jl
sbb
arpl
inc
popf
mov
lea
leave
dec
pop
inc
inc
fnstsw
mov
in
jb
push
inc
in
mov
inc
aad
jbe
add
xchg
push
add
shr
aam
xor
add
call
pop
add
dec
adc
icebp
test
movsb
mov
jo
jmp
out
cmp
scas
loop
das
hlt
aad
mov
and
pop
outsb
testb
movsl
xchg
mov
sub
into
push
add
imul
add
push
dec
mov
leave
cmp
ret
sahf
jle
dec
lcall
push
enter
add
aas
test
add
sbb
mov
sbbb
popf
mov
addl
out
or
testl
les
sbb
rolb
ret
push
jno
cltd
add
or
movsb
leave
outsb
es
jb
mov
pop
sub
pushw
loope
inc
adc
scas
gs
cltd
and
outsl
lret
push
add
mov
shlb
in
mov
lahf
clc
outsb
call
add
xor
push
dec
stos
push
jg
jo
and
es
add
clc
adc
call
jmp
pop
imul
adcb
inc
mov
add
mov
out
popf
add
pop
pop
add
or
cmp
in
es
and
xchg
pusha
fidivrl
add
test
sub
add
lods
idiv
jge
or
inc
sub
lock
data16
popf
loop
test
fsubp
je
jmp
sbb
cli
pop
xchg
add
shr
out
add
ljmp
mov
clc
dec
add
popf
das
and
cld
adc
dec
andl
and
dec
xor
outsl
vp4dpwssd
loop
pop
push
push
adc
or
cmp
sbb
mov
lock
adc
cld
aas
inc
add
xor
or
push
cmovns
pop
daa
adc
lahf
add
cmp
xchg
int
or
cmpsb
add
mov
mul
fdivp
in
push
dec
movsb
rolb
aaa
push
gs
push
arpl
add
add
aad
fldenv
add
lea
add
in
call
pop
imul
and
pop
xchg
cld
add
mov
pop
and
ljmp
jns
jecxz
lret
cwtl
cmc
push
adc
push
popa
lea
mov
sub
xchg
aam
cmpsl
mov
sub
nop
std
aad
pusha
xor
adc
xchg
aam
pop
ret
lods
pop
xchg
push
lock
mov
lret
add
or
stos
mov
scas
sub
mov
mov
cmp
inc
add
pop
inc
pop
loop
es
mov
fcomps
add
loopne
data16
sub
pop
ds
pop
outsl
cmpsl
int3
std
jmp
sbb
shrb
clc
lahf
add
push
jnp
loope
add
push
sub
mov
out
scas
or
dec
fimuls
test
push
inc
fdivrl
adc
inc
mov
pop
pcmpeqw
add
orl
aas
dec
cwtl
es
push
mov
jp
sub
mov
aam
pop
xchg
adc
fs
pop
push
insb
push
jp
jo
out
test
imul
incb
fsubs
fbld
sbb
stc
jl
repz
ss
scas
add
mov
mov
dec
hlt
sbb
pusha
loopne
fsubs
or
inc
in
out
jecxz
pop
cmp
sub
mov
jnp
adc
ss
popf
xchg
testb
addl
fdivrs
adcb
or
mov
push
out
add
mov
xlat
pop
add
jp
enter
add
mov
adc
lock
fucomp
fs
sbb
mov
pop
add
inc
popf
shlb
add
push
loope,pn
test
pop
xchg
jg
idiv
mov
jb
cmc
xor
repnz
add
mov
add
dec
push
jo
adc
mov
mov
insb
clc
add
jne
pop
add
mov
aas
mov
dec
sub
ljmp
jmp
iret
push
cwtl
sbbl
roll
and
dec
int
ljmp
test
mov
test
mov
scas
aad
jmp
mov
add
xor
enter
jle
sbb
fnsave
or
mov
lea
mov
cld
pusha
mov
add
les
sub
iret
push
add
js
pusha
sbb
dec
gs
dec
and
addr16
cli
xchg
shl
jae
lea
add
xchg
add
push
movsb
ret
sbb
jb
xor
xchg
rsm
pusha
mov
lods
xchg
ret
daa
scas
ss
out
aad
dec
push
add
push
repnz
xor
pusha
popa
pop
push
lods
push
dec
add
adc
addr16
ds
mov
add
out
mov
pop
add
xchg
dec
sbb
gs
add
sarb
add
xor
ret
add
mov
dec
jae
mov
sbb
push
add
mov
push
jno
aas
add
clc
add
sbb
hlt
sub
and
lahf
jp
sarb
push
inc
jns
cmp
fstpt
pop
push
or
mov
add
in
roll
sbb
lds
add
dec
jg
rclb
inc
and
push
push
inc
mov
lock
add
adc
sahf
xor
shr
arpl
add
insl
aad
dec
pop
add
lds
pop
insb
and
jle
cmp
faddl
push
or
inc
mov
mov
add
rcrl
test
aam
push
jp
mov
sti
mov
jle
sbb
ror
jns
dec
add
loope
data16
cltd
inc
icebp
add
push
inc
imul
rorl
add
sub
popf
pusha
rorb
and
dec
xchg
lods
jecxz
cmpsl
add
push
lods
dec
ss
mov
popf
mov
loope
fstpl
add
dec
add
sbb
sbb
mov
movsb
inc
or
add
add
fdivs
sbbl
xchg
sub
sbb
repnz
loopne
and
and
dec
movsb
lock
jnp
inc
arpl
push
cmp
popf
call
lods
or
imul
or
pop
mov
push
into
pinsrw
subl
ja
lea
rcrb
mov
jmp
cmpsl
push
cli
repz
fucomp
add
pop
test
fiadds
pop
adc
pop
fsub
jbe
and
push
cs
add
add
and
add
clc
xchg
je
pop
adc
mov
add
repz
cs
push
jbe
sub
cmpl
arpl
bound
xor
stos
cmp
inc
add
shll
jb
fs
adc
lods
loope
gs
pop
pop
test
aam
add
cmp
das
imul
outsl
fsubrp
xchg
sbb
clc
leave
hlt
gs
add
out
adc
insb
cmp
pusha
sub
push
stos
sbb
lret
fs
cwtl
cmp
popa
cmp
and
hlt
shlb
repnz
cvtpi2ps
and
and
or
sbb
lret
cs
in
enter
sub
pop
mov
add
and
jbe
roll
sbb
pop
in
in
fmul
push
js
add
ds
cld
jl
and
xlat
cmp
adc
cltd
es
dec
fwait
mov
test
js
clc
add
push
inc
xor
xchg
mov
add
mov
mov
mov
fbld
mov
fcoms
in
iret
add
sbb
in
aaa
inc
dec
cmp
loop
mov
inc
leave
jge
movl
lahf
cmpsb
pop
adc
sarl
push
out
xor
cmc
subl
cmpsb
outsb
sub
xor
and
add
dec
mov
outsl
cmp
mov
push
dec
add
push
leave
fdiv
or
inc
imul
jl
fcomps
cltd
push
popa
jo
push
in
shl
add
popf
jp
cmp
sub
adc
dec
nop
xor
fsubl
add
cmc
movsb
xchg
dec
xor
mov
add
and
movsl
xchg
pusha
into
ret
imul
cmp
push
ja
icebp
mov
xchg
repnz
mov
xchg
stos
nop
adc
xor
nop
cmp
shl
addb
lcall
sbb
adc
inc
aas
or
add
xchg
mov
subl
and
out
add
push
pop
dec
daa
jmp
pop
pop
ficoms
into
mov
aaa
rorb
add
mov
outsb
loopne
or
mov
add
ljmp
or
add
push
out
pop
mov
clc
and
popf
mov
cmp
je
sarb
adc
test
and
cltd
ljmp
das
mov
loopne
test
cmpsl
test
mov
loopne
xor
add
or
cmp
mov
pop
icebp
fcomi
adc
aaa
pop
xor
cmovae
test
lret
in
cmp
pop
sub
fiaddl
lock
dec
ds
pop
pop
pop
jb
mov
pusha
lds
cs
or
dec
adc
pushf
divl
sub
pop
cmpsb
add
insl
outsl
jbe
fdivrl
mov
rcl
xchg
dec
inc
cmp
sbb
test
je
out
ss
pushf
jecxz
jmp
rolb
xchg
leave
in
sbb
inc
push
mov
in
out
popf
push
rolb
nop
add
sbb
adc
in
add
mov
stos
hlt
inc
xor
jmp
mov
ljmp
pop
popf
sbb
mov
sub
xor
sub
pop
push
test
cmpb
pop
push
lods
pop
cli
xchg
js
or
scas
push
jmp
add
pop
dec
cmp
add
xchg
xchg
stos
icebp
jnp
add
sbb
jbe
aaa
push
scas
add
popf
inc
rorb
mov
or
fsubs
push
int
dec
rolb
in
in
int3
lods
pop
stc
addl
aas
nop
pop
fidivrl
mov
test
push
sub
push
ficoms
lds
or
data16
mov
outsl
mov
js
std
cmc
pop
mov
mov
enter
and
pop
adc
inc
xchg
idivb
ret
les
add
mov
adc
lcall
pop
add
int3
enter
adc
loop
rcr
imul
sbbb
inc
in
sbb
add
inc
fs
rolb
cmp
faddl
and
add
in
into
lds
int
les
adc
addb
mov
sub
and
arpl
mov
lods
or
dec
cmp
lock
loop
push
aas
jnp
or
test
mov
dec
add
ret
push
add
add
test
in
cmc
xchg
outsl
add
jmp
inc
add
add
loopne
fs
add
sbb
sub
dec
inc
cmp
and
push
hlt
filds
adc
int
mov
adc
shrb
jle
fdivrl
inc
jb
sbbb
mov
mov
inc
inc
sub
xor
add
les
and
mov
jnp
push
cmp
add
addr16
fninit
add
or
push
mov
shll
shl
or
outsb
sub
pop
pop
ret
imul
sbb
mov
mov
loop
or
aam
cmpsb
and
or
outsb
in
and
cvtps2pi
push
lock
xchg
adc
push
cmc
lcall
test
mov
push
lret
sbbl
sti
loopne
insl
and
mov
pop
ljmp
mov
sbb
jle
dec
popf
mov
test
sub
dec
sbb
sbb
cmp
or
sbb
pusha
daa
rorl
xchg
movsb
dec
push
jno
and
mov
fistpll
jecxz
dec
popf
jnp,pn
sahf
roll
daa
int
loopne
and
clc
or
mov
lock
xchg
call
frstor
addr16
je
add
inc
push
ss
aam
inc
push
jecxz
push
or
mov
sbb
cmp
push
int
cmp
push
hlt
insb
sbb
mov
loopne
call
push
xor
rclb
ret
adc
loopne
xor
xorb
cs
jp
ds
push
popf
mov
pop
and
jbe
pop
bnd
xor
popf
daa
add
movb
pop
fisttpll
es
dec
pushf
cld
repz
mov
arpl
mov
cmp
std
clc
sbb
mov
call
dec
jo
int
aam
cmp
push
lret
inc
pop
xchg
nop
lds
stos
add
lahf
mov
out
outsl
mov
jecxz
mov
addb
addb
ds
sub
add
shll
add
push
mov
clc
mov
push
arpl
and
add
clc
xchg
adc
mov
add
push
sti
lret
and
push
daa
int
subb
jg
nop
xor
std
sbb
add
mov
mov
rcrb
sti
cmpsb
pop
add
outsl
sub
addr16
enter
jl
js
fdivrl
aam
test
ss
shrb
dec
sbb
daa
mov
stos
stos
add
xor
add
pop
pop
dec
mov
mov
in
imul
and
push
outsl
mov
inc
std
mov
adc
jbe
sbbb
dec
push
rorb
or
add
xlat
lods
add
iret
jle
dec
fsts
out
xor
cmpsl
and
cli
mov
pop
sahf
test
jno
mov
dec
jae
sahf
daa
icebp
lea
sbb
and
add
sub
fs
pop
xor
inc
cmp
pop
sub
loope
orb
shll
pop
mov
add
jb
cmc
loop
sbb
stos
into
dec
add
mov
jo
push
jb
int3
push
inc
repz
sub
mov
sub
add
in
sti
into
in
adc
shll
jo
adc
dec
jns
test
mov
sbb
fcoml
mov
dec
jecxz
aas
push
and
xlat
and
jae
clc
or
roll
iret
fcmovne
clc
stos
fs
jno
daa
std
lods
or
mov
jp
xor
mov
cmp
mov
fldenv
rclb
add
inc
or
pusha
or
sbb
add
and
mov
aad
push
jp
jl
pop
ret
or
ljmp
fcmovb
outsb
mov
pusha
pop
sbb
dec
pop
push
add
imul
cs
add
cs
adc
andl
loopne
mull
xchg
xor
pop
lds
arpl
int
lidtl
aas
mov
mov
movsl
push
mov
push
sub
mov
or
cmp
and
mov
add
es
imul
icebp
fidivl
test
jo
shlb
mov
xlat
shlb
out
movsl
jmp
fnstenv
pushf
js
add
dec
fimuls
sbb
int3
push
clc
icebp
add
aaa
int
fnstsw
loopne
sbb
and
add
mul
fiadds
add
jmp
int3
xorb
loopne
cmp
add
aam
fisubs
dec
movsb
xchg
not
pop
in
stos
sbb
in
pusha
add
aad
push
fimuls
sub
orb
jmp
inc
add
pop
pop
lods
mov
imul
mov
in
scas
add
aad
or
rolb
pop
add
lds
sub
inc
aad
subb
dec
mov
push
or
add
xchg
adc
dec
in
mov
xor
mov
inc
incb
pop
cmp
fisubrl
jle
xchg
inc
shrb
int
gs
xchg
cli
mov
stc
cmp
int3
pusha
jecxz
ds
aad
xor
insb
shrb
xor
inc
adc
sbb
mov
and
and
dec
insb
std
sbb
sar
xchg
mov
cmp
xor
leave
push
xor
dec
dec
pop
xor
mov
lds
rclb
mov
loop
jo
out
push
cwtl
xchg
add
pop
fisubrl
pop
inc
dec
and
adc
or
mov
push
test
ret
mov
rolb
jno
fistpll
sub
inc
push
jb
dec
loop
dec
cmp
test
inc
movl
in
lock
push
pop
movsb
push
pop
and
sahf
xchg
test
gs
xor
inc
insl
xchg
xchg
inc
push
mull
jl
cmp
mov
outsl
aas
cmp
in
add
jnp
dec
movsb
jo
notb
sbb
cwtl
testl
ja
lds
add
xchg
dec
stos
loopne
fisttpll
mov
repnz
ror
or
sbb
cmp
pop
dec
mov
push
jg
jnp
cwtl
insl
std
adc
add
cld
lods
iret
leave
in
fiaddl
or
pop
ljmp
addb
inc
into
mov
sbb
adc
adc
mov
test
inc
inc
dec
add
lods
mov
push
and
out
and
add
leave
and
add
xor
in
add
inc
imul
pushf
sbb
adc
push
xchg
inc
les
add
mov
fsubs
push
adcb
add
jle
incb
jl
xchg
cmpsb
ffree
mov
sub
jnp
adc
inc
call
aas
shlb
inc
push
lods
mov
xorl
pop
lcall
fs
lret
roll
mov
add
and
dec
pop
test
cltd
xchg
rcrb
cld
xor
fstps
lret
add
cwtl
cmp
mov
adcl
pop
int3
mov
inc
xchg
sarl
adc
adc
sub
int
mov
pop
mov
call
sahf
xchg
or
into
jmp
inc
adc
add
ja
hlt
pop
xchg
fwait
rolb
and
jns
cmp
lock
pop
xchg
or
adc
cli
or
add
jg
notl
in
dec
addb
lcall
xchg
cmpb
jnp
out
loopw
sarb
add
inc
data16
dec
xchg
insb
lret
add
or
int3
mov
push
enter
cmp
push
jecxz
loope
out
push
int
enter
push
movsb
and
mov
mov
imul
dec
add
push
sti
call
test
xchg
hlt
mov
outsb
faddl
cmp
jnp
insb
push
sbb
cmp
mov
mov
fldl
push
shll
setl
sbb
inc
pop
mov
in
push
adc
jl
clc
dec
jnp
lods
mov
cmp
aaa
faddp
inc
aam
nop
add
pop
add
add
test
mov
les
fiaddl
loopne
fsubl
call
enter
jmp
pop
push
jo
dec
in
cld
imul
adc
sbb
fmull
cwtl
xchg
dec
and
push
push
add
sbb
xchg
jl
cwtl
xchg
scas
repz
add
push
mov
ja
fsubs
sub
sti
test
or
test
xor
and
mov
test
add
shlb
add
pop
loop
or
push
aaa
out
jnp
rcrb
mov
push
add
incl
aam
aad
push
popf
pop
pop
add
and
cmp
dec
lock
lods
or
int
fwait
pop
and
add
clc
and
add
or
incl
sub
cmp
cmp
cmc
or
repz
add
movsb
add
jl
sub
mov
in
xor
popf
dec
lock
push
mov
or
outsb
mov
add
pop
sub
inc
lds
fiadds
mov
add
or
filds
mov
mov
xchg
xor
and
and
cli
stos
lods
popl
sti
mov
loope
adc
cmp
add
jae
sub
mov
add
lahf
in
jbe
inc
xchg
imul
sarl
cmp
xor
add
sub
ja
inc
test
mov
movsb
or
imul
andb
in
push
ret
add
out
xchg
xor
add
lcall
lods
pop
and
mov
xchg
jno
and
sub
or
sub
in
push
xlat
sbbb
mov
push
or
and
mov
cld
sarb
addr16
mov
xchg
rorb
add
push
mov
jmp
sub
xor
shll
push
sarb
xchg
push
push
pusha
pop
mov
movsb
mov
cli
xchg
mov
adc
push
nop
xor
add
out
jbe
test
adc
shlb
push
xor
out
sub
or
dec
adc
addb
add
add
push
add
pop
int
add
and
int3
jno
nop
add
sets
pop
dec
fimull
ljmp
add
xorl
dec
aaa
add
ficomps
jno
out
xor
test
sub
push
jno
mov
cmpsl
ljmp
sub
add
pusha
out
scas
mov
movsb
cmp
aam
or
pop
fldl
notb
xchg
adc
daa
jno
dec
dec
ror
pusha
fidivs
sub
pop
sarb
ja
and
push
xchg
sbb
add
sub
loope
sti
lock
rcrb
lcall
pop
out
test
sub
xchg
jmp
repnz
sbbl
pop
sbb
les
out
pusha
shr
lock
jns
pushf
mov
mov
mov
fwait
dec
push
dec
pop
out
cmpsb
lcall
or
pop
xchg
test
cwtl
push
push
sub
sbb
or
xchg
inc
adc
mov
pop
sub
push
or
or
mov
mov
fldlg2
lods
sahf
mov
sbb
and
mov
mov
jbe
mov
or
test
mov
mov
and
pop
sub
jae
rcr
pop
movsb
add
push
fbstp
add
mov
popf
or
neg
and
scas
push
popa
push
inc
sbb
mov
cmova
lret
stos
xchg
mov
ror
pop
faddp
push
lods
insl
adcb
or
pop
fbld
hlt
xchg
shrb
push
push
dec
mov
jns
dec
mov
inc
lods
push
mov
cmp
pop
mov
add
dec
or
add
xchg
stc
int
ljmp
inc
xor
jge
xor
rcrb
movsb
cmp
into
or
icebp
pop
jns
arpl
pop
repnz
xchg
pushfw
add
sbb
and
sbb
xor
movb
fidivrs
xor
pop
test
mov
sub
in
in
xor
push
adc
adc
out
mov
adc
dec
loopne
sub
push
cmp
mov
imul
sarb
pop
rcll
rorl
pop
jne
enter
ror
lock
push
pop
sti
movsb
dec
add
mov
incl
jnp
shll
sar
mov
pusha
dec
pop
push
sub
push
sbb
incl
movsl
mov
push
dec
idiv
mov
sbb
mov
int3
jno
call
in
loop
xlat
sbb
mov
inc
sub
mov
das
lret
add
xor
pop
fidivl
dec
cmpsl
ljmp
xor
sbb
cmp
jmp
xor
push
cmpsb
test
add
inc
dec
rclb
jg
aaa
repz
stos
add
push
sbb
inc
cmpsb
mov
jae
stc
or
sbbl
enter
add
push
shll
push
lret
push
xorl
mov
jae
pop
inc
add
fldcw
or
mov
adc
stc
mov
add
sub
in
pop
xchg
insb
stos
adc
mov
in
push
mov
mov
xor
mov
lret
add
cmp
cmp
jge
fisubrs
sbb
leave
mov
fldl
pushf
lahf
icebp
int3
lcall
andl
es
outsl
dec
mov
xchg
jp
insb
mov
fwait
popf
add
sahf
mov
or
hlt
pop
xchg
add
sbb
lret
call
dec
xchg
sti
push
push
add
fldcw
add
lds
pusha
add
test
xchg
mov
pop
inc
xchg
adc
or
nop
mov
test
mov
adc
mov
rorb
add
repz
and
inc
pop
and
sbb
iret
adc
mul
pushf
fadds
mov
mov
sbb
mov
inc
mov
mov
add
xchg
adc
pop
nop
add
rcl
dec
cli
ja
and
or
pop
iret
pusha
or
jns
or
add
pop
orl
add
add
dec
xchg
mov
lahf
mov
inc
bound
lock
mov
pop
out
lods
jle
test
push
imul
xchg
jecxz
mov
test
leave
inc
das
inc
stos
push
xor
sub
push
cmp
test
sbb
add
orb
mov
je
pop
outsl
scas
and
popa
push
mov
push
xor
sbb
mov
ficoml
pop
cmp
lea
fs
out
sub
rorl
and
jnp
call
imul
mul
xor
push
scas
xchg
bound
inc
push
sarb
scas
xchg
push
enter
push
das
xchg
mov
and
push
add
cmp
shrl
dec
push
adc
shrd
and
inc
incb
xor
mov
sbb
sbb
or
add
sub
pusha
add
inc
mov
sub
add
sbb
fisubl
and
push
and
pop
cli
js
inc
clc
push
mov
xchg
add
je
imul
jle
imul
push
divb
jg
jmp
push
and
jae
shl
mov
out
sti
pop
xchg
inc
xchg
add
push
xlat
lock
enter
mov
sbb
pop
pusha
sti
fadds
std
sbb
imull
loopne
add
pop
clc
push
jb
add
insb
arpl
leave
push
sbbb
testb
enter
or
cmc
push
daa
jb
pop
xchg
sbb
test
in
repnz
testl
cmp
in
loopne
push
sub
mov
pop
iret
add
cmp
add
decl
add
jno
push
add
bound
push
xchg
outsb
mov
sub
or
adcl
cmpsl
mov
arpl
int3
into
mov
add
das
mov
dec
dec
sbb
sbbl
dec
mov
xor
loope
push
rolb
fcomps
push
mov
push
xor
shrb
loope
cmpsl
in
test
cmp
sbb
movsl
mov
mov
mov
dec
std
roll
aam
xor
fsubs
add
cli
loop
fs
sbb
daa
lret
add
gs
pusha
jl
jae
push
dec
add
push
aaa
push
and
mov
enter
pop
inc
xchg
jbe
mov
cmp
add
mov
stos
push
js
xor
imul
jmp
add
repnz
push
or
lret
sub
hlt
jp
xor
add
scas
push
lret
subb
pusha
xchg
lods
lahf
lds
pop
es
loope
push
insb
mov
add
add
jl
pop
sbb
add
lock
jle
scas
cmp
sbb
cmp
jecxz,pn
js
add
push
cmp
lds
mov
mov
add
xor
sub
out
add
or
fsubrs
shlb
insl
sub
xor
xchg
push
add
mov
pop
inc
inc
loop
mov
dec
cli
test
add
stos
push
fmuls
shll
pop
mov
jg
jno
add
movsl
into
ret
lock
mov
in
in
mov
andb
shll
xor
sbb
add
pop
or
add
popf
cld
inc
test
push
sbb
mov
mov
add
inc
jbe
add
pop
fcmovnb
rcr
add
nop
lods
add
mov
in
cmp
rol
dec
pop
iret
pop
add
loopne
roll
add
loop
xor
fs
lea
inc
dec
adc
rolb
push
stos
test
push
sub
test
cld
adc
or
and
adc
cmp
add
mov
lahf
cltd
xchg
mov
mov
call
testw
lret
inc
and
repnz
pop
inc
sarl
clc
pop
and
stos
cwtl
les
roll
mov
adc
dec
stc
add
cmpsb
cmp
add
xor
adc
outsl
repz
jmp
testb
dec
xchg
cmc
enter
inc
push
fidivrs
ljmp
sahf
push
nop
add
lcall
add
mov
repz
add
fcomps
add
xor
dec
shlb
jo
cmpsl
std
add
add
test
mov
mov
js
aam
inc
shlb
cwtl
inc
lcall
dec
test
rcrl
mov
ret
add
mov
mov
pushf
fsts
add
add
in
push
loope
cli
pop
cmp
enter
xchg
pop
xor
sbb
mov
add
push
push
adc
cs
out
sub
dec
clc
mov
add
mov
xchg
add
lods
cmp
add
icebp
cmp
add
adc
jmp
add
scas
add
jno
loopne
movsb
add
xchg
dec
orb
inc
loopne
xchg
adc
fadd
or
cmp
ds
testb
pop
subl
in
outsb
or
lret
dec
cwtl
fcmovne
add
in
mov
add
cmp
xchg
add
push
add
incb
pop
ret
xchg
sub
cmp
add
shrl
ds
jne
jg
xorl
adc
ljmp
fimull
jo
pop
pop
je
pop
mov
loop
pop
pusha
nop
in
inc
add
leave
imul
xchg
push
jle
jge
lods
stos
push
jmp
mov
add
or
data16
push
dec
repz
jge
mov
fisubs
in
add
test
stos
ret
loopne
xlat
out
add
push
cmp
cmc
sbb
add
pop
ljmp
pop
pop
add
mov
and
stos
cmpsb
sub
popa
mov
ret
ret
add
aaa
xor
xor
add
lcall
dec
xchg
in
stos
pushf
add
aas
daa
rorb
sbb
cli
cmp
jb
add
jo
mov
popf
sahf
push
clc
das
inc
pop
in
sub
cmp
xor
mov
fcmovnu
inc
fiadds
pop
inc
cmpsb
add
roll
cld
ficoml
pop
loopne
dec
cmp
stos
add
jbe
jge
mov
mov
out
jecxz
mov
xchg
push
cmp
stos
dec
imul
js
or
push
mov
divl
mov
xor
faddl
out
scas
jmp
mov
enter
xchg
mov
loope
andb
xor
add
inc
add
push
or
dec
push
movb
popa
sbb
xlat
cltd
jecxz
or
in
je
in
adc
aad
scas
add
mov
test
loopne
jp
iret
cmpsb
pop
mov
dec
cltd
jp
inc
pop
dec
in
std
fcom
repz
aad
cmovp
lea
ljmp
add
mov
clc
add
push
cmp
imul
shl
jno
add
mov
dec
movsl
lcall
fistpll
inc
and
icebp
dec
call
adc
xor
mov
out
xor
cmp
adc
pop
or
xor
xor
add
add
or
dec
ret
lret
ret
fisubl
mov
pop
jno
mov
adc
xor
dec
pop
and
cmp
scas
sub
adc
lret
shr
inc
inc
jo
jbe
mov
jge
sbb
in
stc
cmpsb
add
jno
push
mov
outsb
or
sub
ja
push
mov
pop
outsl
scas
add
in
and
add
push
mov
add
mov
jb
sbbl
daa
adc
pop
mov
mov
xlat
mov
xchg
popa
dec
scas
mov
sbb
pop
loopne
jge
clc
xchg
out
pop
loop
add
push
outsl
cmp
pop
stc
mov
xchg
mov
adc
clc
dec
and
xlat
jnp
cs
incl
mov
mov
push
add
cmp
inc
xchg
ja
popf
ljmp
xor
int
xor
or
and
add
xor
jo
or
int3
subb
and
mov
mov
test
xlat
sti
rorb
add
sbb
inc
sub
add
lods
divb
add
add
lret
bound
cmp
js
nop
push
repz
outsl
add
jb
test
loope
add
les
sub
pusha
arpl
shrb
add
rorb
sbb
add
mov
xchg
loopne
add
push
pop
mov
insb
add
mov
cmp
out
add
pushf
and
mov
mov
sarb
add
test
loopne
ja
popa
adc
sub
mov
add
and
in
iret
xorb
test
aam
cli
cmp
xchg
pop
add
or
mov
adc
dec
push
add
popa
mov
and
jns
and
fimuls
lahf
jb
xor
mov
rcl
cmp
out
xchg
pop
sbb
rclb
insb
test
dec
adc
pop
cmp
mov
adcl
lea
inc
adc
mov
add
dec
mov
mov
insb
inc
outsl
fcmovnu
cmp
fprem
mov
cmp
push
inc
repz
fcmovb
nop
sbb
shrb
or
mov
outsb
mov
cwtl
add
repz
call
cmpsb
dec
xor
rcll
mov
jl
or
aas
add
mov
cmp
jno
or
and
or
add
ds
dec
fiaddl
jge
stc
xchg
adc
mov
cmp
pop
and
mov
test
outsl
ds
jbe
sub
add
add
movsl
rorb
push
mov
mov
jo
dec
add
add
call
fmuls
sub
xor
ja
cmc
fwait
add
mov
or
sub
sbb
hlt
mov
and
ret
cmp
dec
mov
add
mov
or
push
xchg
sti
lcall
dec
insb
xchg
out
lds
cs
pop
icebp
add
les
inc
add
shll
dec
sub
mov
add
mov
inc
mov
out
jg
into
fdivr
adc
mov
add
jle
add
aas
mov
dec
cld
add
insl
xor
aaa
movsl
pop
sti
lock
pusha
xlat
cld
or
mov
pop
call
jne
xlat
sbb
add
sub
pop
add
jp
add
nop
imul
movsl
rcrl
lret
push
je
xchg
dec
hlt
ds
mov
fwait
pop
push
jns
pushf
jno
orb
pop
arpl
lds
jnp
mov
push
pusha
int
jae
jl
dec
sub
add
jno
xchg
pushf
dec
fstpl
inc
adc
mov
fsubr
lret
jle
mov
fs
push
adc
movsb
test
inc
add
cld
pop
cld
mov
lock
sub
or
repnz
jecxz
add
mov
rclb
ret
cli
mov
scas
xchg
insl
das
rolb
inc
fwait
adc
cmp
xchg
push
adc
lock
mov
xchg
xchg
or
mov
mov
push
cmc
js
add
imul
cltd
push
sbb
in
cmp
add
scas
rolb
repnz
loopne
cltd
adc
pop
lods
popa
xchg
inc
add
icebp
adc
sahf
add
enter
inc
inc
sub
arpl
mov
mov
mov
insl
cmpsl
xor
lret
mov
add
push
fwait
shrb
add
xorb
add
adc
int3
hlt
inc
add
inc
sub
into
rclb
jnp
cmp
inc
add
out
jl
scas
add
mov
pop
pop
add
call
mov
jne
dec
push
xor
add
push
rorb
jge
inc
call
xchg
sub
or
inc
test
or
mov
daa
inc
add
lret
lods
fsubrp
and
out
fistpl
lea
lret
push
jp
mov
sbb
xchg
iret
mov
jne
add
push
pop
mov
leave
dec
mov
add
jp
dec
inc
sub
add
aaa
hlt
xor
pushf
aam
and
test
pop
jle
cmp
cmc
rolb
xor
mov
push
shl
dec
cmpsl
pusha
mov
rolb
pop
sti
sbb
push
pop
xchg
insb
add
cmpsb
loopne
roll
xchg
pusha
dec
mov
pop
idiv
add
repz
mov
jb
ljmp
sbb
outsb
test
dec
inc
mov
fiadds
cmp
orl
in
sub
mov
call
xor
sbb
cmp
push
lret
jl
popa
and
xchg
or
xor
lods
sbbb
push
lock
stc
add
adc
mov
push
cltd
mov
xor
int3
rolb
or
and
jecxz
inc
shlb
hlt
cltd
add
fcom
pop
divb
lock
dec
adc
push
xchg
cmpsl
out
sub
outsb
adc
loopne
int
call
bound
push
add
mov
mov
dec
cwtl
sbb
movsl
inc
xor
jmp
dec
add
sbb
fcomps
dec
add
adc
addb
dec
cli
arpl
or
jno
negb
lock
loopne
and
jmp
xor
pop
xor
inc
fidivrl
add
decb
mulb
or
mov
loopne
sub
mov
adc
in
pop
mov
pop
sub
add
and
mov
ja
test
lahf
loopne
popf
in
dec
in
mov
adc
pusha
cmpl
or
leave
ret
cmp
cmp
daa
xor
add
jnp
jae
add
add
int3
add
mov
jb
sbb
mov
pushf
pop
sysexit
pop
ret
dec
sbb
loopne
mov
ficoms
stos
mov
ljmp
ret
or
mov
insb
clc
mov
fdivrl
jb
push
mov
imul
mov
lret
add
add
cmpsl
clc
fldl
insl
push
push
mov
add
jbe
call
icebp
add
cmp
xor
lea
xor
lahf
xchg
push
mov
aaa
xor
mov
stc
les
jle
sbb
xor
roll
cmp
leave
orb
mov
imul
stos
push
add
push
lock
leave
add
ds
xchg
xor
add
inc
mov
add
pop
les
mov
mov
int
cli
decb
push
ds
xchg
loope
pop
rcll
jb
sahf
lcall
jle
adc
add
cmpl
adc
subl
insl
pop
shl
or
and
add
ja
mov
mov
cmp
pop
cs
jo
scas
fld
pushf
nop
or
repz
mov
faddl
cld
pop
and
cltd
or
iret
add
sbb
jmp
cmc
clc
mov
cmpsb
jns
jbe
leave
cmp
sub
xchg
push
jp
shl
add
jo
push
popf
add
xor
add
sub
into
inc
stos
push
ficompl
roll
bound
sub
dec
jmp
add
ljmp
add
lods
shl
jg
push
add
adc
movsb
rdtsc
fstpl
shr
cmp
add
cwtl
lcall
and
jo
stos
repnz
sbb
fistl
adc
adc
add
xchg
inc
sub
es
fstpl
xchg
push
xchg
adc
dec
out
or
dec
adc
sub
jp
sbb
das
es
inc
in
sub
add
push
jo
adc
into
testl
xor
mov
add
les
out
pushf
or
ljmp
cli
rcrl
aas
psubb
bound
adc
jle
fsubr
push
pusha
adc
or
inc
add
fcomps
inc
aam
loopne
push
add
mov
out
shll
jbe
add
pop
aam
insb
shll
pushf
inc
cmp
adc
add
dec
stc
dec
movl
jle
jns
dec
sbb
add
and
xor
inc
pop
jo
or
popf
jns
push
mov
fwait
and
inc
aam
inc
lret
add
mov
add
out
daa
or
ja
shl
movsb
jp
icebp
pop
mov
fcmovu
cmpsl
lds
test
add
add
cmp
xor
add
jmp
mov
nop
insb
loope
cmp
ja
xor
scas
xchg
inc
lea
sub
movsl
int3
call
cld
add
out
rcl
add
jg
inc
cwtl
js
les
mov
andl
adc
pop
rorb
scas
jo
add
and
bound
loopne
sbb
jp
fwait
sbb
adc
cmp
fdivs
or
push
inc
repz
test
or
sub
pop
sub
clc
mov
addl
fstpt
mov
xchg
sarb
int
or
arpl
inc
xor
stos
shl
add
mov
movsb
lds
jae
add
xor
dec
in
loopne
bound
add
ds
in
add
pop
sub
aad
or
scas
testb
and
loope
andb
shlb
pop
cmp
xchg
jns
and
mov
or
xchg
orb
mov
cmp
sarb
dec
add
fs
lock
xchg
adc
push
jns
push
push
dec
push
add
es
pop
xchg
lds
lock
cmp
adc
lock
sbbl
mov
mov
jl
jp
scas
lret
adc
dec
mov
push
and
and
mov
nop
insb
jg
pop
pop
jo
jl
xchg
or
aas
push
mov
jmp
je
lock
jp
sub
daa
pop
add
mov
add
sub
mov
sub
push
push
or
fidivrs
mov
shlb
or
out
pop
xchg
xor
mov
push
jecxz
pop
and
or
mov
inc
sbb
add
pop
xor
push
cli
mov
cmp
pop
enter
dec
roll
rcl
mov
pop
pop
add
cld
lret
pusha
in
cmp
add
test
es
sub
pop
sbb
cmpsl
je
nop
outsl
lret
nop
popf
add
test
inc
add
fs
cltd
sbb
movsl
sub
sbb
fnstsw
mov
jp
call
enter
movsb
mov
lds
fildl
adc
pop
push
jg
test
stc
jo
add
jge
dec
hlt
jmp
aas
and
push
xor
jl
pusha
inc
or
mov
cld
add
das
out
mov
cmp
popa
je
rolb
adc
and
pop
bound
pop
daa
inc
adc
jbe
xchg
clc
or
cwtl
adc
and
add
dec
or
das
sbbb
daa
mov
hlt
xchg
add
xor
or
pusha
call
xor
xchg
jns
add
push
add
jle
mov
sbb
cmpsb
mov
ss
cmp
jbe
sbb
add
cltd
arpl
fsubl
movb
stc
dec
fs
xorb
adc
mov
pop
enter
pushf
pop
cmp
push
or
out
sbb
add
and
out
push
cmpsb
jp
inc
jo
jo
mov
dec
mov
je
sbb
and
add
iret
psubb
jg
in
outsl
lcall
push
inc
inc
xor
inc
test
inc
js
lret
fdivs
adc
pushf
pop
scas
or
sub
add
mov
or
or
add
cmp
push
ja
add
in
or
push
add
pop
mov
add
dec
je
mov
add
pop
in
test
inc
or
mov
outsl
add
cmp
mov
pop
mov
or
dec
dec
push
add
mov
clc
add
sub
movsl
and
pop
push
mov
cmp
inc
pop
test
pushf
lret
dec
cmp
dec
jg
mov
fsubrs
outsb
fidivs
mov
add
and
lock
push
push
dec
fiadds
or
int3
cmp
lods
inc
jecxz
pmullw
inc
incl
test
jge
lahf
pop
fmul
dec
xor
add
loop
xor
mov
decb
and
scas
sbb
sub
pop
add
scas
cmp
mov
mov
loopne
pop
mov
xchg
les
mov
mov
add
xchg
scas
fcmovu
xor
subb
pop
int3
divl
add
shr
lret
aam
pop
movb
dec
daa
aad
cmc
mul
add
stos
fistpll
xchg
cmpb
enter
gs
sbbb
cld
xor
lret
pop
shlb
jp
add
aas
add
rcrb
add
repz
push
pop
pop
cmpsl
sub
stc
test
mov
add
cmp
stos
dec
sbb
mov
add
xor
fildl
sbb
or
mov
imul
dec
imull
into
cmp
pop
cmp
xchg
inc
mov
adc
jae
std
rcrb
jmp
push
pop
xor
packuswb
shlb
test
push
cmp
adc
neg
jmp
adc
jne
stc
and
cs
push
insb
add
cmp
or
sub
inc
jnp
add
jae
shlb
jecxz
stos
popa
dec
sbb
das
cmp
jge
cmp
fidivl
mov
aam
or
enter
pop
test
out
adc
inc
gs
cwtl
and
xchg
fadds
shlb
push
int3
rcl
icebp
test
lahf
loopne
mov
xor
mov
add
into
mov
aam
addb
mov
pop
addr16
add
xchg
pusha
sbb
sbb
push
add
pop
scas
cmp
fwait
lret
stc
icebp
sbbb
and
lret
cmp
push
adc
mov
and
add
call
jle
add
mov
mov
and
xor
out
loopne
hlt
sbb
dec
inc
or
adc
cmp
nop
pop
jg
sar
fadds
cwtl
xor
xor
cmc
loopne
jl
fcoml
jl
ret
mov
xor
shrb
out
add
data16
xor
enter
cmp
and
sarb
mov
sbbb
mov
out
jle
add
lcall
add
pushf
jno
test
push
jbe
shrl
jmp
adc
mov
ret
jno
fcomip
lds
or
mov
jge
jmp
adc
shrl
scas
je
loopne
add
xor
pop
movsl
sbb
outsl
or
and
fs
and
lahf
pop
fcomi
add
jle
push
mov
push
pop
jmp
fadd
push
rolb
loopne
jl
es
jge
xchg
fs
jmp
push
inc
stc
in
push
lret
sbb
add
pop
sahf
add
imulb
enter
mov
sub
xor
mov
inc
xor
sbb
mov
loopne
aad
or
add
cmp
adc
roll
out
add
cltd
dec
lcall
jge
sub
sbb
cwtl
xchg
xchg
icebp
jne
sbb
mov
jecxz
bound
ljmp
cwtl
addl
into
add
pop
add
cmp
test
cmp
in
ss
jg
add
sub
or
pop
es
test
fists
imul
enter
dec
lock
shlb
jbe
sbb
movsb
xchg
push
js
inc
and
pop
xorl
fcmovnbe
sub
adc
pop
fadd
mov
and
imul
add
lock
push
xor
jbe
out
xor
pop
xchg
inc
loope
popa
lds
repnz
add
stos
ja
or
or
xlat
jno
mov
test
jae
add
jl
mov
cld
sbb
popf
rcrl
or
ds
jle
sbb
push
add
lahf
decb
pop
gs
rolb
sahf
or
enter
fiadds
pop
mov
mov
or
loop
xchg
cmp
sbbb
cli
sub
mov
add
inc
xor
sub
ss
rolb
sbb
jge
fiaddl
out
test
cld
jecxz
dec
dec
adc
les
and
mov
xor
loope
lock
xor
mov
add
aad
inc
sbb
xor
sbb
pop
andb
pop
add
insl
pop
jbe
push
push
call
xlat
cmp
sbb
mov
fidivrl
repz
jo
cmc
imul
add
mov
lea
enter
sti
add
add
insl
xor
shlb
mov
movsl
adcb
cmp
mov
out
rorb
fwait
cli
inc
add
jl
loope
je
dec
add
pop
repnz
sbb
push
shl
sbb
in
pop
add
xor
les
jge
mov
scas
ja
rcrb
cli
cmp
in
bt
xor
fisttpll
mov
push
xchg
push
inc
add
mov
sbb
sbb
cld
and
loop
cmp
add
add
sbb
mov
stos
push
imul
add
xor
mov
jbe
dec
jb
xor
xchg
addl
mov
rol
adc
sysexit
mov
and
mov
add
adcb
daa
sbb
ret
testb
testl
into
xchg
fucom
add
xchg
sub
sbb
push
push
pop
inc
mov
adc
add
sbb
fldt
mov
test
roll
jo
mov
xchg
or
mov
arpl
cmp
sbbl
add
loope
imul
adc
arpl
in
roll
sbb
add
int
lcall
add
jle
add
jb
xchg
fs
pop
xor
add
insl
xchg
ljmpw
push
mov
add
dec
sub
and
xorb
repz
cmp
out
adc
push
push
mov
add
dec
and
fneni(8087
inc
test
flds
hlt
mov
shrb
mov
push
outsl
fcmovbe
push
movntq
cld
adcb
dec
fwait
cmp
movsb
mov
adc
inc
add
ja
pop
push
fwait
std
into
add
shr
add
mov
sbb
cmpl
mov
inc
testb
push
jp
jnp
push
stos
and
mov
subb
mov
mov
push
rol
mov
fld1
cli
icebp
clc
ja
add
addl
pop
cwtl
xchg
cmc
add
popf
add
daa
mov
fsubs
jmp
mov
add
hlt
scas
mov
add
clc
addb
mov
arpl
fwait
add
cmp
out
enter
adc
xor
gs
add
push
leave
ret
add
add
xchg
mov
pop
arpl
clc
sub
aad
xor
dec
je
adc
sub
xchg
xchg
pushf
stos
ucomiss
ljmp
push
mov
add
dec
loope
and
xchg
xor
add
aaa
dec
nop
cmpsb
outsb
or
cli
pop
mov
push
push
push
rcrb
dec
jp
cmp
movsb
sub
cwtl
repnz
jbe
pushf
lds
daa
jno
pcmpgtw
or
adc
int
add
out
repz
loop
and
test
cmp
pop
mov
add
mov
add
jl
test
fsubl
pop
add
jmp
daa
leave
ljmp
dec
movsl
jmp
lods
outsl
ret
inc
lds
push
cmp
jno
out
mov
cltd
addb
jns
scas
test
add
add
lea
inc
xor
add
jb
jge
add
out
imul
pusha
add
mov
test
dec
push
sub
mov
clc
xchg
movb
outsb
or
and
lock
pop
das
or
mov
addb
add
fisttpl
sbb
add
aas
xchg
mov
inc
mov
repz
adc
mov
loope
dec
xor
lidtl
ss
lock
pusha
cwtl
mov
in
add
jp
push
rcll
cmp
pop
movsb
add
sarb
mov
mov
xor
add
jb
xlat
faddl
sbb
adc
cmp
fimuls
mov
sbb
sbb
mov
jmp
sbb
into
daa
loop
lahf
inc
add
cmp
adc
cmpsb
cwtl
add
divl
jne
shlb
sub
ret
lods
push
sub
pop
jl
roll
or
out
aas
add
movsl
and
push
dec
test
mov
add
ss
add
fnstenv
pandn
sti
sub
popf
xchg
mov
mov
stos
xlat
sbb
je
push
sub
mov
mov
inc
ret
pop
mov
add
out
fmuls
mov
js
shrb
subb
jne
mov
jmp
pusha
addr16
lret
cwtl
cwtl
add
aad
push
push
mov
popa
mov
add
jl
scas
add
add
and
pop
push
lea
cmp
decb
mov
stos
sti
fsubrs
mov
xchg
out
xchg
sbb
pop
test
sub
je
insl
lods
cwtl
add
leave
cmp
xor
add
mov
ja
xchg
rolb
or
and
add
sub
sub
leave
dec
aas
mov
pop
stos
fcoms
ja
aaa
add
xchg
outsb
dec
loopne
add
pop
je
sbb
mov
cs
mov
xchg
push
std
out
or
or
js
and
add
pop
pushw
or
stos
lods
pusha
pop
sub
cmp
or
mov
andb
pop
lock
xor
or
jle
scas
in
add
int3
dec
cmpsb
les
push
mov
ret
ret
or
inc
xchg
and
bound
sti
rclb
dec
ret
out
dec
repnz
imulb
popf
fcomps
adcb
fsubs
insb
jp
mov
test
leave
add
push
mov
jo
add
pop
sub
aas
add
jnp
xor
cwtl
mov
mov
push
ljmp
cld
or
mov
push
adc
cmp
sub
daa
js
add
mov
inc
cmp
sub
sub
test
add
mov
cli
xchg
aas
and
push
mov
add
subb
push
int
or
add
std
add
inc
cmp
aaa
mov
fs
adc
movsb
dec
int3
test
rcl
jle
pop
push
int
cmp
and
xor
arpl
ja
add
sub
outsl
cld
adc
mov
sub
adc
add
shl
push
stos
loopne
cld
shlb
stc
dec
sarb
and
dec
mov
adc
je
in
movb
pop
aad
ss
fsubs
scas
movsl
fiaddl
push
push
pop
mov
movsl
pop
lds
add
xchg
jno
pop
push
or
sbb
clc
dec
adc
push
inc
fndisi(8087
orb
sbbb
push
add
jmp
push
add
cld
cltd
jns
in
mov
adc
les
fldl
jl
call
into
dec
jp
loopne
dec
out
divl
in
add
mov
add
jecxz
cmp
cld
clc
or
pop
jl
js
addb
cli
xor
divb
push
pop
fcoml
dec
stos
pop
push
ja
push
rcr
mov
jo
sub
test
in
lret
adc
stos
sbb
xor
pushf
jnp
imul
bound
cli
loopne
dec
mov
in
and
lret
or
loope
lods
movsb
movsl
cmpsb
add
sub
icebp
shr
faddl
add
mov
je
adc
loopne
mov
adc
lahf
cmpsb
xchg
jecxz
jmp
rorl
enter
add
adc
pop
shlb
cmp
loop
add
ficoml
sub
stos
shlb
in
jle
shrl
pusha
jno
xchg
mov
cmp
mov
test
or
pop
add
shr
mov
inc
dec
sarl
mov
icebp
pop
test
cltd
cmp
jp
fadd
icebp
ficoml
call
push
test
or
mov
sbb
hlt
dec
loope
out
mov
negb
dec
fsqrt
shll
add
add
rdtsc
xchg
adc
mov
xlat
add
lds
jle
mov
xchg
push
call
jno
jmp
adc
jnp
hlt
cmpsb
repz
or
jle
pusha
and
inc
cmp
sbb
std
insl
lea
fdivrl
mov
bndstx
js
xchg
pop
jnp
dec
add
jns
xor
test
cmp
xchg
aas
adc
mov
add
je
add
dec
fbstp
dec
and
ja
repz
add
int3
pusha
xchg
pop
dec
lock
sub
fimull
push
and
push
xor
inc
pop
inc
test
mov
jbe
or
in
mov
adc
mov
or
stos
adc
inc
add
xor
xor
das
sti
jae
ds
in
push
jo
leave
jmp
cltd
mov
shl
push
push
or
add
mov
and
adc
add
inc
add
sbb
loop
xor
test
cwtl
pop
adcb
js
arpl
cmp
mov
or
insb
icebp
adc
push
gs
cmp
pop
es
pop
hlt
add
adc
inc
fs
mov
add
add
cltd
xchg
mov
sbb
jle
and
fstl
mov
adc
jo
insb
cmovne
loopne
inc
xor
mov
outsb
adc
sbb
icebp
icebp
movsb
popf
add
insb
mov
push
add
jne
fcomps
ljmp
aas
add
dec
aam
mov
add
dec
scas
or
add
mov
sbbb
call
addl
lods
push
and
add
ret
jae
in
or
adc
shlb
lods
lds
ja
gs
icebp
pop
loope
push
mov
or
bound
inc
into
enter
nop
cmc
and
imul
sahf
mov
aaa
inc
and
lret
test
jnp
outsb
sbb
add
adc
xor
cmp
rcrl
mov
inc
adc
flds
fimuls
into
xchg
push
fstpt
add
xor
aaa
add
xchg
shlb
stos
or
mov
inc
popl
pop
add
push
jns
inc
mov
add
pusha
mov
add
loope
xor
ret
push
stos
js
jg
mov
push
xor
sbb
pop
ss
sub
adc
xchg
pop
shl
add
std
jge
pusha
sti
js
add
push
or
bound
cmovae
mov
roll
in
cld
pusha
sub
call
xchg
out
gs
addb
das
add
add
pop
fsubrl
inc
jmp
mov
and
sub
cmp
dec
xchg
pop
inc
xorb
cwtl
fwait
add
std
lock
jecxz
mov
sbb
inc
inc
les
add
out
imul
dec
roll
inc
sub
nop
jo
dec
test
sbb
inc
aaa
mov
add
rcll
sarb
push
mov
mov
pusha
lret
stos
sbb
jbe
pop
cli
xchg
jne
pushf
cmp
mov
rclb
add
scas
xchg
xchg
es
xchg
int
sarb
out
add
sbb
icebp
add
pop
mov
cmp
aas
das
int3
inc
mov
cs
add
jle
add
or
hlt
mov
pop
sbb
loopne
fsubp
jle
icebp
cld
adc
sbb
cli
add
xor
sub
add
sbb
ja
adc
sub
lock
out
or
cwtl
mov
sbb
je
stc
clc
pop
or
mov
aad
add
dec
jle,pt
or
xor
sbb
cmp
adc
je
sub
and
adc
out
mov
dec
push
ret
jg
imul
xor
and
inc
fdivrs
popa
popf
rorl
jle
adc
add
add
jg
jmp
loopne
push
cmp
shlb
pop
sahf
jns
stc
test
lret
add
inc
andb
and
lret
sti
popa
loope
inc
out
loopne
cmp
xchg
sbbl
lcall
pop
in
mov
out
ret
lret
inc
and
xor
arpl
dec
push
inc
cmp
push
addr16
jbe
sub
mov
sbb
adc
add
rcpps
lds
mov
add
push
inc
cmp
lods
inc
sbb
jecxz
imul
push
jno
imul
sarb
cmovns
imul
or
mov
cmpsl
cmp
add
sti
mov
add
push
fldenv
shlb
cmp
call
rcrl
add
pop
jae
pusha
sub
pop
cmpb
cmp
jle
dec
xor
xor
dec
xor
ret
je
icebp
jnp
inc
jno
inc
add
jmp
ljmp
cmp
xor
mov
lcall
mov
stc
jg
ds
lahf
add
movsb
std
adc
sub
ror
add
leave
sbb
pop
and
xor
xor
repnz
in
add
xchg
popa
daa
push
push
fwait
mov
dec
mov
sub
rolb
aad
add
mov
sahf
cmp
mov
jmp
xchg
dec
call
add
mov
les
push
cmpsb
push
daa
out
pop
cli
jno
pop
pop
data16
add
cwtl
es
cmp
add
imul
mov
daa
add
aad
or
adc
fldl
sbb
inc
andb
enter
orl
ljmp
jno
mov
lods
mov
xchg
pop
mov
lock
jae
cmp
cmc
add
and
leave
incb
and
sub
and
add
nop
push
cmpl
cmp
sbb
push
xchg
ret
dec
stos
push
pop
subb
pop
mov
add
dec
aas
test
sbb
jmp
inc
pop
mov
adc
ret
jmp
out
and
test
lods
mov
ret
pop
or
sbb
mull
cmp
mov
adc
inc
cmc
std
mov
in
stos
nop
and
andl
sarb
loopne
sbbb
mov
jne
add
lods
adc
pushw
imul
or
in
add
repnz
push
test
mov
add
stc
or
inc
cmp
push
xor
icebp
test
inc
rorl
add
mov
lods
add
arpl
mov
inc
lds
int3
pop
enter
faddl
fnstsw
add
aad
pop
push
mov
loope
inc
push
push
lret
mov
mov
repnz
or
lret
xor
mov
lcall
and
add
xlat
jns
stos
dec
std
hlt
frstor
cmc
lock
fidivrl
imul
xchg
rcrl
mov
add
orl
or
outsl
jmp
loopne
gs
dec
sbb
das
xchg
in
add
jns
daa
fdivr
mov
fildl
sbb
inc
and
jge
sbb
jg
pop
xor
ret
push
push
test
add
subl
and
xor
or
out
jb
push
mov
sbbb
mov
add
adc
jecxz
or
add
sub
mov
insb
add
xor
mov
mov
js
push
aaa
inc
mov
pushl
xsha1
cmpsb
push
leave
lods
jle
add
adc
jb
mov
addb
inc
push
mov
cmc
push
mov
daa
jno
cmp
popa
add
or
pusha
in
pop
into
push
jns
mov
push
add
repnz
mov
testb
cmpsb
filds
add
cmp
hlt
adc
cwtl
jmp
sbb
test
add
sub
mov
mov
gs
shrb
vmwrite
xchg
ds
cmp
pushf
push
and
add
lods
dec
mov
pop
enter
add
push
gs
nop
cmpsl
call
pop
fs
test
and
mov
rep
clc
sub
mov
aaa
das
inc
stos
loopne
push
insb
push
inc
ss
loop
ret
enter
inc
rclb
sbb
and
icebp
add
adc
xor
lahf
mov
out
insb
add
ljmp
add
pop
out
subl
loopne
out
add
jno
mov
lret
call
add
jl
mov
bound
addr16
pushf
sub
popf
add
out
pop
shll
jne
or
push
pop
jne
inc
mov
push
jae
xor
push
jle
scas
and
fucom
dec
add
imul
sti
daa
cld
add
or
sbb
stc
jecxz
or
movsl
js
xor
lock
jmp
add
mov
sti
xchg
adc
xchg
imul
pop
add
movsl
rclb
dec
xchg
stc
mov
std
mov
lock
test
imul
lds
add
outsb
and
lods
lret
xlat
xorb
xor
inc
dec
sub
cmp
add
pop
nop
psubb
push
pop
ds
cld
insb
cmp
sti
mov
add
and
add
loope
pop
mov
std
gs
push
and
push
add
sub
in
jbe
xor
lock
xor
movb
fnstcw
mov
daa
js
xchg
movsl
jge
pushf
pop
stos
sub
ds
insb
jo
cmpsl
add
mov
inc
arpl
scas
dec
aas
jbe
xchg
popf
xchg
ret
add
movsb
xchg
push
std
pop
pop
cmpb
mov
inc
push
jle
inc
lock
mov
mov
xchg
push
imul
jle
mov
fsubr
push
ret
insb
inc
pop
cmpsb
sbb
add
fldl
cmp
repnz
lock
xor
aaa
push
jmp
ds
add
xchg
jg
in
js
add
mov
sahf
mov
cmp
cmp
push
or
cmp
js
les
cmp
adc
mov
pop
or
lcall
lods
imulb
cmp
pop
sub
test
es
sbb
scas
mov
jo
sbbb
iret
fisttps
lret
cld
in
ret
push
jl
std
xchg
push
pop
xchg
sub
mov
or
fidivrs
fdivr
shrb
fsts
stos
push
dec
jge
push
pusha
popa
sbb
loop
loop
add
sbb
xchg
cmc
lcall
sbb
push
and
sarl
add
xchg
pop
nop
imul
pop
add
inc
cmp
insb
imul
adc
loop
aas
jecxz
sbbb
stc
sbb
sbb
les
sbb
fwait
jbe
test
and
pop
test
rcrl
fcmovu
nop
movsb
add
dec
jo
dec
jae
add
arpl
or
test
cmp
add
in
adc
cli
xchg
outsb
repz
push
mov
jle
lock
mov
and
js
int3
lods
push
icebp
es
cmp
adc
sbb
fnsave
add
jecxz
jl
fisubrl
mov
ds
nop
shll
push
jle
cltd
push
inc
sub
add
pop
or
xchg
sbb
pop
insb
add
dec
fdiv
in
mov
lock
mov
jns
xor
cmp
pop
cltd
dec
loop
add
pop
call
xchg
nop
pusha
add
mov
cmp
or
jmp
mov
mov
add
into
ljmp
push
mov
fbld
add
outsl
daa
add
rol
adc
inc
add
and
lock
add
stc
sbbb
test
jo
stc
mov
pop
addl
mov
out
int3
dec
dec
add
fmull
imul
sub
push
adc
sarb
test
fisubl
dec
mov
cmp
mov
dec
outsb
mov
pop
int3
je
xchg
mov
repnz
or
jg
or
mov
sub
add
sahf
sbb
pop
leave
and
cmp
rolb
jb
faddl
int3
scas
inc
dec
dec
and
loopne
add
inc
aaa
mov
jecxz
add
jbe
mov
out
ss
in
sub
pusha
jecxz
ret
fimull
cmp
mov
dec
adc
sbb
sbb
pusha
leave
cs
loope
out
adc
fdivrs
lcall
sti
lea
stc
addb
insb
add
mov
lods
gs
add
dec
clc
jo
popa
add
sub
repz
enter
andb
sbb
aaa
sub
js
add
push
dec
pop
or
add
testl
pop
mov
sub
adc
add
or
jle
sbb
add
xor
sub
xor
and
pusha
adc
xchg
fmull
test
xchg
inc
push
pop
inc
add
jmp
cmpsl
mov
rcl
inc
mov
mov
out
add
jp
sahf
dec
xor
jo
lods
mov
aad
xor
mov
clc
or
mov
add
aad
jge
gs
xor
sbb
jo
hlt
add
adc
fsubr
test
mov
and
add
sti
sub
shlb
push
lods
adc
push
cmp
mov
roll
pop
add
mov
fs
sbbb
add
mov
cld
test
xchg
ffreep
lret
cmp
jns
cmp
stos
shll
push
sub
pop
inc
lahf
je
sbb
mov
clc
xor
jne
cmpsb
adc
xlat
pop
mov
pushf
in
add
sub
xor
gs
jne
or
imull
loopw
ret
int
add
adc
pop
pushw
pop
lock
idivl
add
mov
pop
fiadds
divb
adc
add
jno
cmpsl
add
int3
sbb
or
sub
jg
and
icebp
sbb
fisubrs
add
mov
adc
mov
xchg
add
adc
adc
addb
and
daa
pop
cltd
mov
out
gs
push
inc
cwtl
enter
mov
pushf
sub
add
pandn
inc
mov
xor
imul
add
and
adc
into
add
stos
mov
push
cmp
jle
lret
inc
inc
mov
sub
mov
mov
testl
aam
inc
add
rclb
add
popf
addb
shl
and
mov
xor
adc
pop
add
ja
sub
jnp
fdivl
andb
cli
lds
add
int
and
test
cmc
pusha
adcl
rcrb
add
insl
inc
call
cmp
cmp
add
ds
test
movsb
out
adc
fmulp
dec
outsb
rorl
sbb
lret
popl
enter
aad
mov
xchg
pop
push
cmp
xorb
and
xor
aaa
dec
jne
and
cs
or
mov
frstor
mov
mov
mov
add
sbbl
push
out
test
add
cwtl
loopne
rolb
inc
dec
cmp
push
add
xor
sbb
addl
enter
cmp
add
or
fs
ds
scas
sbbb
out
add
jecxz
add
push
inc
and
add
mov
idiv
fsubrp
sbb
add
pop
add
pop
popf
or
mov
mov
push
insl
pop
scas
call
inc
lcall
pop
mov
call
xchg
or
pop
sub
xchg
outsb
dec
sbb
add
sbb
lock
pop
aaa
gs
and
add
out
out
loopne
repz
push
xchg
loop
sti
fadds
mov
dec
mov
out
ret
ret
add
leave
add
cmp
fdivrl
push
mov
jecxz
cwtl
scas
fmul
sbb
pushf
aas
add
fistl
push
jle
roll
fcomp
add
xor
sbb
lods
daa
push
lock
in
in
pop
pop
push
lods
cmp
jnp
pop
add
jp
les
jg
add
xor
into
add
or
clc
mov
sbb
xchg
stos
call
mov
sbb
push
or
xchg
pop
lds
mov
add
mov
and
je
rorb
mov
clc
adc
inc
sbb
bound
add
xor
fwait
aas
add
xchg
in
add
push
push
and
std
add
scas
mov
cmpl
jmp
adc
pop
mov
dec
lcall
je
cwtl
mov
mov
mov
or
cld
lods
xchg
jp
dec
rolb
sub
call
insl
add
inc
shrl
mov
movntq
ljmp
xor
jmp
jp
nop
mov
add
lods
dec
fsubl
cld
sub
mov
pop
lock
mov
xchg
mov
pusha
jo
insb
movsl
pop
push
cli
arpl
add
jno
sbb
adc
mov
add
pop
mov
sub
mov
xor
sahf
sbb
pushf
push
sbb
add
push
fsubrl
add
out
pusha
mov
adc
popf
add
roll
sti
in
push
pop
in
dec
rcrb
xchg
xor
mov
dec
out
pop
loop
pusha
xchg
mov
add
cmp
mov
jp
add
pop
sbb
mov
adc
pop
movsl
pop
mov
testl
add
jle
adc
xchg
fsub
repz
dec
or
mov
mov
mov
or
dec
cmpsl
add
dec
movsb
subb
xchg
mov
xchg
dec
faddl
sub
sbb
cmp
mov
cmpl
cwtl
sahf
mov
dec
mov
ja
ror
pop
xchg
in
cmpsb
mov
filds
mov
or
xchg
test
mull
iret
arpl
sarl
add
movl
addb
fs
jb
xor
xlat
cwtl
mov
fsubrs
mov
lret
dec
test
jns
add
pop
sub
mov
stos
push
dec
inc
rcrb
cmp
add
push
test
or
sub
jo
add
push
loopne
inc
mov
push
or
xor
xchg
pop
mov
cmp
outsl
mov
inc
loope,pt
adcb
dec
lock
std
add
push
mov
and
jmp
xor
mov
int
jo
mov
add
mov
jne
test
sbb
jmp
pop
popf
push
pop
and
add
addr16
adc
das
sahf
enter
mov
dec
lds
lcall
shrb
std
andl
add
dec
xchg
in
xor
insl
mov
pop
imul
fidivrs
add
xchg
mov
mov
nopl
sbb
mov
pop
inc
sbb
in
and
lahf
cwtl
hlt
and
sub
push
ret
es
push
mov
push
in
sub
enter
in
sbb
bound
sub
addr16
lea
fdivs
add
or
add
xor
mov
add
pop
pop
clc
xor
sbb
mov
out
roll
das
xorb
fistl
nop
xor
add
cmp
in
arpl
push
cmp
pop
add
rorl
pop
out
call
inc
add
shll
mov
add
push
imul
inc
or
pop
inc
mov
sub
cs
cwtl
fidivrs
outsl
test
and
xor
push
mov
jo
mov
mov
add
cmp
jnp
pop
sub
sub
arpl
ljmp
or
and
enter
out
mov
fdivr
pusha
add
stos
xlat
nop
js
mov
rcl
jp
lods
mov
cmp
and
aam
fmull
addr16
cmp
std
clc
jo
test
shl
pop
wrmsr
pop
add
push
xor
add
aaa
xchg
stc
dec
mov
dec
add
xchg
lock
arpl
sub
mov
and
jae
push
leave
jle
xchg
mov
movsb
addb
xchg
sbb
lcall
push
mov
sub
cwtl
ret
mov
lahf
push
or
andl
mov
or
and
cmpsl
pop
add
mov
cmp
rcrl
loope
push
xchg
mov
mov
or
invlpg
mov
xchg
js
sbbb
inc
cmpsl
incb
pop
sbb
nop
pop
add
stc
shrl
sub
roll
sub
mov
mov
xchg
addb
pop
in
sbb
int
inc
xchg
push
adc
xor
lds
int
lahf
xchg
mov
ss
and
jmp
daa
shlb
inc
jl
test
and
iret
jbe
les
add
jnp
sbb
jno
inc
pop
and
add
gs
adc
sub
xchg
dec
and
mov
pushf
lahf
mov
popf
or
dec
xor
pop
in
nop
lock
push
scas
mov
out
add
push
mov
add
xor
xor
push
sbb
adcl
sbbb
inc
notb
and
pandn
adc
add
cwtl
adc
imul
jg
push
cmp
jnp
orl
clc
pop
push
sub
es
dec
in
xor
testb
mov
inc
mov
in
mov
pop
cwtl
sub
call
insl
mov
loop
dec
xchg
adc
dec
lods
inc
inc
int
dec
loopne
shrb
dec
sbb
rol
pop
or
leave
pop
bound
add
mov
adc
pusha
js
popf
mov
cmpsb
sub
xorb
fs
pop
add
push
or
orl
jecxz
add
std
popa
mov
push
mov
add
cmp
add
sub
or
mov
sbb
dec
or
or
mov
ja
add
lock
push
popl
pop
and
dec
adc
mov
popf
adc
push
mov
pusha
nop
inc
jmp
out
dec
add
scas
into
jg
cmp
mov
mov
fmuls
stc
mov
sbb
adc
test
inc
and
iret
xchg
pusha
cmp
loopne
adc
adc
and
mov
test
or
inc
movb
or
dec
inc
push
test
ret
inc
mov
mov
add
jmp
addl
ror
nop
xlat
jae
add
leave
sub
loop
mov
in
pop
push
mov
inc
push
add
jae
mov
mov
test
aad
sbb
rcr
or
add
inc
sub
into
add
sub
loope
xchg
fwait
nop
xchg
xor
imul
or
clc
ret
sub
pop
btc
dec
aam
lcall
ret
pop
in
repnz
pop
push
mov
aam
out
add
mov
mov
add
ja
sbb
add
mov
dec
mov
jno
adc
jg
mov
mov
hlt
fldl
lods
or
das
nop
add
cmp
mov
loopne
or
aaa
xchg
push
rorl
cmp
divl
jg
into
dec
add
aaa
xchg
mov
sub
add
mov
sub
dec
xor
rcrl
incb
aas
fnsave
push
movsl
add
adc
lret
jo
sbb
pop
sarb
repnz
adc
arpl
mov
cs
jl
add
mov
enter
aas
adcl
mov
sbb
add
enter
push
push
mov
jmp
push
rolb
pop
imul
fwait
int3
fstps
mov
data16
xchg
dec
fildl
movb
pusha
jo
loop
push
adc
inc
out
add
or
lahf
mov
aaa
xchg
lcall
rcll
add
sbb
push
lods
inc
call
stc
xor
ds
or
mov
cmp
imul
push
lahf
sub
sub
push
outsb
push
jns
and
sbb
jmp
scas
nop
adc
cmp
add
jno
dec
das
int3
jmp
pop
sbb
dec
cltd
sbb
xchg
out
xchg
pop
jle
mov
mov
or
imul
pop
mov
adc
into
ret
in
cwtl
stc
sbb
dec
mov
push
jp
enter
lock
fs
orb
test
hlt
lods
pop
push
xor
push
adc
cmp
xchg
jae
lods
fcmovne
imul
orb
cs
xorb
push
jecxz
pop
adc
or
bound
ret
mov
pop
ljmp
cs
movsb
dec
add
pusha
add
pop
push
mov
out
mov
lods
add
outsl
aam
adc
sub
ljmp
xchg
push
push
pop
repnz
cmp
jp
xchg
add
sti
jmp
out
adcb
add
jns
fcomps
dec
fwait
inc
pop
cmp
mov
cmp
lret
mov
adc
ja
in
adc
mov
shrl
aad
stos
inc
daa
jo
push
pop
jmp
je
inc
add
mov
adc
cmp
or
lcall
push
jbe
add
out
out
add
loope
stos
inc
dec
insb
lea
outsb
neg
xor
test
xorb
pushf
mov
jbe
mov
lret
rolb
mov
aam
inc
jle
hlt
add
inc
mov
ds
vcmpsd
enter
add
sbb
xchg
add
xchg
dec
in
out
jle
icebp
add
pop
jmp
push
add
or
add
push
cs
imul
jl
add
and
faddl
rolb
xor
hlt
loop
dec
icebp
add
adc
pop
push
xor
leave
cmp
pop
movsl
adc
mov
arpl
out
jge
std
dec
jne
add
cmp
inc
jl
popa
add
insb
cmp
add
inc
adc
iret
inc
mov
pushl
scas
dec
add
test
ja
add
loope
out
inc
popa
cli
add
sahf
push
fistpl
adc
sub
add
jg
cli
xchg
je
add
aaa
cwtl
lahf
and
dec
push
add
test
cli
nop
add
out
enter
dec
dec
sub
es
clc
aas
cmpb
xor
mov
jg
rclb
jae
cmpsb
adc
js
in
aaa
add
sahf
and
lahf
inc
inc
call
pop
mov
push
rorl
add
jne
pop
push
or
std
xor
fcoml
sub
fcoml
jne
push
cmpsl
mov
mov
lahf
shrb
roll
sar
pop
xchg
pop
mov
sbb
and
testb
loope
faddl
test
push
clc
add
xchg
fdivrp
lcall
adc
out
or
subb
test
jp
mov
xor
imul
add
cmpsl
add
ss
sub
adc
or
jecxz
dec
sub
add
mov
scas
add
addr16
into
sub
pop
dec
jb
mov
xor
sbb
mov
lock
pop
rolb
push
mov
push
add
lea
scas
icebp
data16
mov
leave
mov
inc
sbb
add
aaa
pop
mov
add
fiaddl
outsb
add
dec
jp
mov
fnstsw
notl
lods
subb
int
leave
inc
jbe
pusha
test
jnp
xchg
loopne
lret
sbb
cmpsb
add
sbb
cs
mov
add
mov
mov
aad
add
pop
sub
add
xor
push
aam
sub
leave
movsl
cmpsb
scas
pop
ljmp
fistpl
cmp
add
imul
ret
loop
add
sub
cmp
pop
adc
outsl
frstor
add
push
sahf
lahf
mov
pusha
bound
sbbb
or
es
std
cmpsl
inc
add
loope
daa
pop
jmp
xlat
add
inc
fstpt
orb
add
fmuls
xlat
loop
test
sbbb
cmp
add
inc
xchg
dec
test
pop
sti
add
and
push
add
leave
push
jne
lock
cmp
and
cmp
imul
push
jp
das
out
jae
add
shrl
inc
xchg
lock
xchg
addb
or
pop
mov
or
imul
xchg
push
dec
stos
into
cli
repz
jp
inc
mov
pop
outsb
mov
xor
lahf
pop
andb
adc
outsl
mov
sbb
lock
mov
lret
cwtl
fldl
adc
xor
faddl
je
pop
add
jmp
fsubrl
dec
cmp
or
pop
cwtl
stos
xchg
add
pusha
cmpsl
lds
push
push
cmc
ljmp
imul
jle
and
fldenv
mov
cmpsl
add
fcompl
cmpsb
add
xchg
lretw
cld
sub
sbb
std
and
aas
add
dec
pop
cmpsb
push
imul
xchg
sbb
mov
push
sbb
push
cld
dec
push
add
jnp
pop
aas
pop
bound
sub
mov
movsb
sub
xor
shlb
push
add
clc
sub
add
lret
add
addr16
out
jnp
add
mov
sti
push
nop
push
inc
ss
adcl
cli
add
pushf
enter
xorb
rcl
mov
push
es
adc
pusha
lock
xorl
adcl
jmp
or
out
xor
pusha
add
enter
je
add
push
sub
in
add
xchg
inc
cwtl
mov
test
sub
push
push
mov
mov
pop
sub
add
negl
pop
stos
push
incl
punpcklbw
xchg
xchg
jns
nop
add
sub
mov
out
push
dec
les
push
scas
jp
pop
enter
add
arpl
dec
gs
mov
mov
add
mov
clc
jle
lods
test
loopne
add
das
mov
es
add
iret
rol
jg
add
mov
push
in
dec
int3
flds
xchg
stos
enter
inc
scas
dec
and
cmpsl
pop
aam
inc
add
icebp
into
cmp
fiaddl
or
lds
daa
add
test
loop
cmp
mov
and
jbe
pop
sbb
mov
outsb
push
insb
gs
jno
scas
pop
orb
add
outsl
rolb
jae
ljmp
or
shlb
jmp
sti
imul
in
scas
cld
cmpb
cmpl
mov
add
jmp
lahf
stos
pop
jge
sar
push
pop
test
cmp
jg
and
mov
leave
ss
outsb
hlt
add
mov
lock
mov
jle
sahf
push
fucomip
lret
cmp
movsl
add
jg
push
cmp
add
push
push
arpl
faddp
mov
pop
rcll
lods
psrld
insb
outsl
repz
push
out
subb
rolb
push
push
adc
arpl
inc
in
cwtl
xchg
ficoms
cmp
rolb
inc
mov
xchg
or
and
lods
add
xchg
or
incb
lahf
rorb
mov
test
push
pushf
add
mov
lock
add
dec
enter
add
imul
inc
jle
adcl
mov
pop
aaa
fcoms
stc
mov
call
aas
into
rorl
mov
adc
cmp
outsb
add
mov
aaa
daa
out
xor
lret
xor
and
add
push
fld
cmc
or
cmp
in
sbbb
mov
sbb
dec
push
fidivl
push
add
lods
in
adc
xor
mov
inc
aad
pop
and
pop
jno
add
adc
ljmp
sbb
adc
test
push
gs
xchg
jo
movsl
test
imul
or
hlt
icebp
sbb
adc
rclb
sbb
mov
push
scas
add
insl
ret
xchg
scas
pop
add
mov
adc
ret
jns
add
jp
subl
xchg
call
test
in
mov
mov
mov
add
cmp
xchg
xorb
pop
into
cmp
jo
out
nop
test
loope
insl
stc
add
cmpsb
pop
mov
hlt
out
sbb
sub
add
outsb
cmp
pop
movsl
sbb
add
xchg
push
daa
pop
popa
inc
cli
int3
hlt
sbbl
mov
xchg
nop
sub
lret
xchg
idivb
roll
leave
dec
cmp
es
inc
add
in
jl
rolb
adc
mov
lds
ljmp
add
jmp
xchg
sub
xchg
sbb
cmc
jp
es
scas
inc
pop
shrl
mov
loope
pop
add
xchg
dec
or
flds
add
std
push
mov
or
loopne
test
addr16
push
push
test
fdivs
dec
inc
fsts
sub
and
pop
push
push
inc
out
daa
sub
ret
pop
shlb
push
in
add
gs
pop
clc
mov
daa
xchg
pop
hlt
push
sbb
loope
cmp
add
and
sahf
insb
add
loopne
js
popa
cwtl
je
push
add
mov
dec
pushl
adc
xor
push
cmpsb
mov
or
subl
add
stos
mov
ret
add
or
xor
jns
fsts
loopne
cmp
adc
out
push
pop
cmc
pop
xor
idiv
div
xchg
mov
add
lock
cmp
fsubs
imul
mov
pop
outsb
or
cmpl
add
adc
cmp
sarl
jl
add
add
cs
jp
repnz
jmp
insb
push
add
add
aam
out
inc
js
dec
add
lods
add
clc
test
adc
or
ja
dec
add
jp
das
mov
pop
test
add
xor
repz
je
and
jne
add
ret
sub
xchg
jbe
inc
out
adc
fwait
add
dec
repz
jecxz
fcomps
jecxz
add
mov
xchg
shrb
sbb
cmp
fadds
ljmp
repz
rorl
cltd
add
lret
mov
rorl
mul
cmpsl
pop
fists
sarb
add
shr
sbb
dec
movsl
inc
xor
int3
push
int
ljmp
and
jp
fimuls
dec
pusha
divb
cmp
xor
imul
rolb
cmp
fdivr
aaa
outsb
add
add
ljmp
add
push
mov
hlt
xchg
add
fcmovnu
xor
test
in
add
jmp
add
xor
int
xchg
movsl
adc
data16
add
mul
in
pop
sbb
mov
roll
int3
lcall
pop
pusha
jo
lods
mov
add
mov
sub
mov
add
add
add
ret
dec
lds
ror
push
mov
xor
pop
loop
add
adc
movsb
push
jbe
xor
xchg
xor
push
xchg
out
jno
or
stos
fwait
xchg
xor
cmp
ljmp
pop
inc
add
dec
sbb
push
push
movsl
lret
arpl
in
ja
add
in
repz
sbb
mov
pop
mov
mov
pop
popaw
and
hlt
mov
push
ret
cmp
jl
out
aas
sub
into
xor
mov
call
out
hlt
adc
pop
insb
dec
mov
mov
add
xchg
and
push
mov
out
mov
add
or
xor
dec
add
mov
jnp
outsb
sbb
dec
dec
xchg
mov
jge
push
js
xchg
adc
add
hlt
fimull
sahf
out
je
jnp
stos
sub
add
xchg
mov
mov
add
xchg
sbb
and
inc
cmp
sbb
cwtl
aad
jle
sub
mov
std
rcll
jp
into
repnz
add
aad
mov
add
and
popa
lahf
dec
jmp
jae
mov
aas
pop
les
icebp
xor
jns
or
mov
xor
xor
push
add
jle
xchg
add
xor
pop
iret
test
mov
sarb
mov
inc
push
enter
xchg
add
push
popa
dec
add
xchg
jecxz
mov
sbb
add
loop
hlt
sub
shll
lahf
jmp
mov
inc
and
cwtl
stc
incl
les
aam
insl
add
movsb
mov
adc
cmp
movsl
inc
into
xor
pop
jae
add
repz
fstl
shlb
inc
or
push
and
or
pop
mov
add
mov
pushf
xor
add
stos
add
test
addr16
popa
dec
sbb
fcomps
ss
js
or
hlt
into
push
jp
xchg
push
mov
mov
call
pop
orl
adc
jo
push
orb
xchg
cld
adc
pcmpeqw
add
xor
cli
out
inc
push
jns
adc
sub
mov
jb
int
xor
sub
dec
mov
jle
adc
ficoml
dec
cmp
sbb
sub
sarb
add
cltd
xor
cld
loop
push
repnz
jg
xor
lds
sbb
addr16
lea
orl
popa
add
and
add
jge
lods
fldl
mov
lock
mov
in
jecxz
aaa
shlb
outsb
shlb
mov
jae
cmp
xor
cmpsl
jg
add
mul
mov
xchg
and
enter
or
ss
loopne
clc
push
fildl
xchg
xchg
push
xchg
fwait
jo
add
mov
inc
sub
outsb
xchg
cmp
aas
ficomps
push
and
cmp
bound
bound
sub
xchg
outsl
pushf
or
pop
fisttpl
mov
push
rcl
push
mov
push
cmc
lret
mov
fsubrs
dec
fucomp
push
les
dec
loopne
dec
xor
lods
mov
jle
insl
mov
orb
dec
xchg
xlat
pop
inc
add
mov
mov
xchg
add
mov
arpl
jp
cli
xchg
lcall
stos
add
inc
pushf
add
add
je
add
add
fbld
or
push
sbb
jbe
cmp
inc
add
pushf
adc
xor
inc
cwtl
aam
jae
mov
xchg
pop
fld
hlt
pop
rcl
psrld
movsl
inc
push
or
mov
rolb
test
lds
sbb
shrb
cmp
cmc
mov
xchg
add
or
adc
add
and
aas
je
in
push
lock
mov
inc
xor
movsb
sbb
cmp
imul
mov
jle
sti
sbb
cmpxchg
pushf
cmp
scas
add
test
inc
or
js
cmp
sbb
push
inc
pop
adc
pop
mov
jnp
and
cmp
arpl
clc
enter
mov
xor
mov
gs
loop
js
inc
nop
leave
push
xlat
popa
mov
repnz
jle
cwtl
dec
cmp
add
cmpsb
lcall
mov
cmp
flds
xchg
movsb
imul
jmp
add
adc
xadd
aaa
cmpsb
mov
jno
orb
movq
mov
flds
pushf
cmp
addr16
subb
dec
jo
or
cmp
dec
pushf
pop
push
jb
adc
jmp
addb
test
jg
push
jge
add
rolb
jecxz
enter
and
or
inc
push
mov
push
or
jb
out
push
bsr
add
out
cmp
xor
nop
cmp
in
pop
stos
int3
adc
inc
shlb
xor
mov
shlb
add
popf
fcoml
inc
jns
adc
jnp
push
ret
pop
mov
movsb
mov
add
inc
mov
jmp
fisttpll
clc
xor
in
add
in
test
xchg
mov
fwait
add
or
push
cmp
stos
add
shrl
loop
add
aam
leave
outsl
addb
loopne
stc
mov
pop
xor
xor
jnp
pusha
inc
scas
xor
aad
ret
push
inc
cmp
aas
enter
js
pop
jae
sarl
sub
or
repnz
sub
add
pop
lods
scas
popa
mov
add
and
cmp
and
mov
repz
xchg
dec
mov
aas
int3
or
out
push
lock
adc
sub
shlb
in
pop
andl
insl
mov
add
cmp
cmp
push
pop
add
in
xor
push
xorb
dec
mov
add
dec
in
cld
push
jae
add
in
mov
jg
and
lds
push
xor
adc
jle
scas
enter
cltd
or
add
test
imul
fldl
add
les
jl
jg
insb
jne
mov
sub
cmp
add
dec
pop
sbb
pushf
ret
rep
add
loopne
pop
jo
add
cmp
jb
mov
clc
test
add
sbb
into
or
add
inc
pop
dec
not
sub
test
sub
cmp
add
xlat
gs
cmp
pop
stc
addr16
clc
mov
mov
lcall
mov
jbe
stos
lcall
inc
fistpll
cmp
cmp
pop
mov
out
cmp
push
adcb
xchg
push
shlb
stc
test
cmpb
clc
andl
jl
lock
add
sub
sbb
pushf
jnp
mov
es
add
iret
fildll
aas
fadd
ds
cmc
subb
mov
push
out
lods
add
arpl
cmc
jo
xchg
js
add
xchg
fsubrl
add
xor
sub
fadds
loope
jb
add
aad
cmp
enter
add
xchg
mov
add
fcoms
push
fstl
add
pop
add
inc
test
loopne
pop
jb
lods
xorl
sti
push
pushf
push
or
and
jae
cs
sbbl
repz
bound
jmp
pop
inc
push
enter
or
je
push
in
inc
mov
jl
pusha
pop
cmpl
test
imulb
jg
mov
mov
outsl
js
add
sbb
dec
cmp
mov
pop
sti
divl
add
pop
xlat
dec
adc
iret
add
or
jae
dec
push
clc
add
jmp
addr16
xchg
adc
sub
add
add
pop
sbb
sbb
mov
jl
jmp
in
daa
xor
adc
pop
cmp
dec
test
add
lea
int
push
lcall
imul
inc
xchg
out
orl
test
enter
add
dec
fcomps
setne
in
cli
sbb
mov
sarb
xor
and
pusha
xor
subb
fildl
pop
fimull
lods
cs
jecxz
enter
or
scas
outsb
test
push
xchg
mov
lahf
popf
movsl
push
and
in
js
es
imul
scas
icebp
fwait
pop
pusha
add
inc
ret
adcl
test
shlb
and
roll
mov
pop
cltd
cmp
or
data16
add
lahf
fsqrt
add
clc
lcall
lret
mov
or
int3
movsb
pushf
add
jb
mov
inc
ret
add
out
jp
test
insb
data16
subb
or
sbb
or
push
xchg
outsb
incl
add
push
push
adc
add
pop
test
cld
andb
idiv
add
icebp
xchg
sub
lret
or
lods
fmuls
or
cwtl
outsb
inc
mov
add
mov
aas
add
mov
jl
xchg
pop
pop
jne
xor
xor
test
xor
jecxz
inc
adc
lret
mov
jne
fldl
push
or
insb
cli
inc
clc
mov
add
test
sub
add
stc
testb
push
ja
or
push
ja
clc
lea
xchg
mov
inc
adc
jns
cld
lar
test
push
mov
incl
pushf
shlb
in
cmp
xchg
cli
mov
mov
neg
ja
imul
pop
pusha
xor
cmovge
lahf
psllw
add
aaa
add
pop
out
rolb
mov
pop
pop
fldt
call
push
jmp
xchg
inc
sbb
add
cmp
cmp
inc
cwtl
or
jno
mov
or
fisubrl
xor
jo
clc
inc
add
pop
or
ds
push
and
lea
gs
cmp
mov
andb
insb
mov
jp
xchg
les
dec
push
pop
cmp
push
mov
push
add
jge
mov
add
sub
sbb
ds
mov
xor
add
push
aas
sbb
mov
dec
xchg
mov
inc
hlt
mov
jecxz
push
add
int
aam
lahf
mov
push
sub
adc
inc
dec
gs
push
insl
jmp
and
pop
or
adc
mov
cmp
mov
adc
lret
fsts
mov
and
int
add
lahf
inc
out
add
into
push
filds
jmp
or
shl
mov
and
add
and
call
test
mull
add
pusha
in
pushf
lock
das
test
push
incb
fs
sbb
add
and
icebp
popa
fbld
ret
xchg
adc
fildl
cwtl
or
nop
inc
or
mov
pushf
sub
popa
and
pop
push
aam
jle
pop
lds
rorb
sub
pop
insl
in
mov
cmpsb
jmp
aad
stc
add
fcoms
ljmp
mov
stc
xor
adc
fs
repnz
mov
fwait
bound
sahf
push
repnz
adc
mov
mov
mov
push
sti
loope
lods
add
daa
add
adc
mov
test
cld
mov
andl
and
lret
es
scas
mov
push
mov
in
pop
and
mov
test
add
call
push
mov
cmc
xchg
pop
inc
cmp
popa
or
xchg
loopne
aaa
add
movsb
inc
xor
repnz
add
sarb
out
ret
inc
sub
in
iret
mov
getsec
mov
lea
add
xchg
push
leave
cwtl
test
mov
rolb
fcmovnbe
mov
adc
ja
dec
out
sbb
xor
mov
add
insb
add
int
mov
add
psubsb
cmp
inc
xchg
cmpsl
xlat
pusha
jne
pop
xchg
add
test
addb
jb
popl
xacquire
leave
out
rolb
lcall
pop
das
add
lret
test
pushf
ja
scas
out
jno
clc
mov
shrl
inc
sar
outsl
ds
repnz
sbbl
add
jb
lahf
cmpsl
or
xchg
lods
cmp
xchg
ficoml
shrl
xlat
outsl
add
out
push
mov
jo
add
push
pop
push
add
mov
es
mov
fsub
andb
push
stos
es
sbb
pop
sbb
inc
imull
mov
subb
mov
sub
add
and
add
jae
aam
jmp
pop
inc
inc
fwait
jecxz
inc
mov
pop
scas
aas
pop
cmp
xchg
rol
adc
add
sbb
xchg
repnz
hlt
ljmp
nop
fidivrs
addr16
mov
add
andb
test
lods
pusha
loop
lods
xchg
pop
mov
aad
and
sti
mov
or
pop
decb
jp
mov
add
sub
incl
mov
mov
and
daa
into
adc
push
lods
inc
addb
lcall
imul
add
std
call
dec
pop
inc
sbb
enter
leave
mov
cmp
sub
or
and
clc
in
add
iret
mov
jl
or
or
pop
je
mov
add
sbb
cmp
repz
mov
ret
mov
out
fldt
jecxz
add
repnz
dec
orb
fisubrs
stos
add
jl
adc
jnp
xchg
mov
jp
or
and
ret
lret
mov
pop
push
inc
aas
push
sbb
mov
stc
add
dec
loop
push
pop
sub
cmpsb
or
inc
jne
mov
adc
inc
mov
scas
add
add
in
cli
rcll
ret
push
inc
cmpsb
cmp
push
mov
pop
jl
roll
repz
or
xchg
pop
push
lahf
in
pop
lret
add
aaa
jl
notl
xchg
add
or
out
fisubrl
lcall
lret
fistpl
in
mov
enter
sub
adc
sbb
das
clc
mov
jae
add
in
mov
pop
add
push
dec
repnz
jno
add
rcll
enter
stc
shr
add
test
adc
add
fstpl
jae
pop
and
jnp
cmp
sbb
loope
add
mov
dec
push
pop
in
or
nop
jl
scas
sar
fldl
das
repnz
add
test
imul
mov
dec
pop
aad
pop
cmp
int3
cmp
aas
imul
add
xchg
call
or
inc
mov
push
dec
movsl
ss
dec
pop
pusha
das
sub
jecxz
cmp
xchg
xor
mov
enter
pusha
js
push
fdivrl
ret
and
dec
or
mov
jle
subl
in
loopne
xor
fists
gs
shll
or
add
xor
sub
push
lods
hlt
hlt
push
and
sbb
pop
push
dec
push
push
sbb
push
imul
xor
pop
mov
add
adc
sbb
xor
xor
mov
xchg
arpl
add
or
mov
daa
pop
and
lods
sbbb
call
inc
xchg
cwtl
jo
lret
or
bound
cs
mov
mov
add
popf
mov
mov
fidivrl
push
add
bnd
test
xor
ror
cld
movsl
cmp
mov
rclb
dec
fdivl
push
movsl
or
in
add
mov
loopne
negl
xchg
pop
fs
add
es
push
sbb
inc
movsl
lock
ret
clc
andb
mov
sbb
push
inc
add
std
sub
add
loop
xor
add
mov
mulps
add
pop
sahf
jmp
cld
jae
xor
movsl
jns
add
adc
sahf
cmp
sbb
xchg
xor
shlb
add
mov
add
adc
ja
fiaddl
pushf
cmc
xchg
imul
mov
or
mull
cmpsl
aas
add
ljmp
cmpsb
jno
or
mov
add
cmp
add
xor
mov
aas
shl
nop
inc
fiaddl
push
out
loope
mov
or
xchg
lock
push
fwait
popf
in
sbb
sbb
lcall
push
dec
xor
ljmp
aas
lahf
jmp
jle
sub
flds
pop
add
test
adc
sbb
jns
xchg
orb
xor
repz
pop
dec
test
cmp
push
test
push
nop
in
pushf
jmp
xor
add
mov
pop
pop
mov
cli
add
jecxz
pop
out
roll
pop
cmpsb
mov
es
int
clc
pop
add
mov
pushf
add
aas
push
mov
sbb
adc
add
arpl
xor
inc
mov
aad
push
add
or
jecxz
fstps
aam
mov
cmp
or
addb
inc
dec
push
clc
add
mov
lret
iret
fimull
psubq
jle
dec
pop
mov
cmp
rcll
push
adc
jge
mov
cltd
sarl
inc
push
add
mov
stc
dec
add
xchg
push
dec
testl
aas
adc
fdiv
mov
pop
dec
pop
mov
adcb
rolb
fcmovnb
push
fmul
mov
cmc
mov
push
jmp
jnp
adc
jae
movsl
jmp
jle
jl
adcb
jb
cmp
cmp
cmp
pushf
mov
inc
icebp
sub
add
and
in
add
xor
lret
cmpsl
rcrb
hlt
xlat
fnstsw
pop
sbbb
stos
rcr
fwait
ja
add
fcomps
push
add
add
or
out
and
shlb
sbb
jg
xchg
ja
dec
inc
out
adcb
icebp
add
xchg
mov
ret
pop
or
arpl
faddl
out
jno
mov
jg
lret
dec
pop
and
mov
negl
sub
sub
push
popf
rorb
sahf
aam
int3
mov
adc
faddp
cmp
adc
out
push
movl
or
add
int
mov
mov
aam
cmp
roll
divb
add
hlt
cmc
cwtl
pop
ret
jno
and
sub
add
adc
xor
out
sbbb
shll
dec
jne
cmp
mov
rolb
add
lds
xlat
out
cmp
pop
cmp
inc
and
xor
pop
pop
mov
repnz
sbb
ret
xlat
inc
jbe
add
cwtl
sbb
arpl
or
rclb
outsl
and
sbb
xchg
jno
add
cmpsl
fstps
lds
mov
adc
es
jl
in
push
jp
mov
add
js
dec
addr16
std
add
push
sbb
fisttpl
add
int3
or
jnp
leave
lock
jge
mov
in
inc
mov
dec
pushf
mov
mov
dec
stos
pop
loopne
loope
jne
mov
add
movsl
scas
sub
adc
fmul
sbb
sub
inc
fcmovb
and
pop
fcoms
aad
je
repz
jmp
sbb
push
mov
add
outsb
inc
inc
sbbl
std
add
lds
lods
mov
mov
pop
fstps
rolb
xchg
scas
loopne
daa
mov
pop
pop
mov
push
xor
add
push
aas
flds
out
test
les
cmp
mov
mov
imul
shll
add
jnp
addl
fsubrl
fistpll
ret
inc
add
aad
and
xchg
dec
lds
les
pop
stc
add
data16
inc
dec
pop
leave
jle
shlb
push
jbe
or
test
mov
mov
cld
jns
cli
out
add
pop
arpl
test
push
test
adc
loopne
mov
push
dec
subl
inc
xor
jp
jle
je
sub
pusha
mov
add
aad
and
sbb
or
sbb
add
aaa
cmpsb
add
cli
mov
out
adc
sbb
mov
repz
jg
cltd
dec
sub
test
cmpsb
or
stos
or
arpl
sbb
add
sbb
bound
movb
add
rcrl
or
scas
sti
nop
add
test
xor
add
fcomps
dec
movsl
push
mov
ret
pop
xor
dec
insb
add
jno
add
cmp
sub
push
or
mov
cmp
cld
push
dec
add
inc
mov
add
lret
or
out
jbe
cltd
popa
pop
add
add
push
enter
inc
add
pop
cmp
dec
fadd
stos
test
lods
xchg
jge
lret
movsl
mov
sysexit
idivb
pop
adc
add
aaa
loopne
adc
inc
xchg
shlb
es
inc
das
or
push
rorl
or
adc
pop
jp
stc
lods
add
inc
ficoms
and
cmp
nop
adc
js
xchg
lcall
jns
jo
aas
pop
test
add
cmp
xchg
add
sbb
hlt
jae
dec
pop
add
test
sub
pop
out
mov
orl
rcr
in
sub
and
cwtl
add
push
int3
push
sub
jb
add
xchg
pop
jno
add
pop
aam
jp,pn
je
cmp
sbbl
pop
jle
aaa
hlt
jecxz
clc
jl
dec
and
jns
adc
daa
add
inc
sbb
int3
xorl
sti
fmul
iret
jnp
inc
add
pop
sahf
dec
push
and
jo
lea
jb
daa
mov
mov
mov
xchg
outsl
mov
jb
bswap
notb
sub
rcrb
sbb
adc
mov
add
sbb
inc
iret
addb
imul
or
int
loopne
mov
mul
sbb
pop
fcoms
mov
mov
adc
xchg
push
xchg
cmp
gs
add
add
nop
inc
add
mov
lock
insb
les
mov
outsl
icebp
xchg
andl
sti
mulb
test
jmp
das
xchg
dec
pusha
xor
arpl
mov
jp
add
popf
add
dec
mov
add
int
std
pushf
jae
subb
adc
mov
sbb
imul
jo
or
sub
scas
scas
add
sub
or
add
data16
xchg
fwait
ja
add
aas
movsl
push
xchg
jbe
add
jae
rclb
gs
inc
mul
jo
loop
dec
inc
xlat
ds
mov
repnz
lret
in
clc
and
lret
dec
lds
testb
jle
scas
cltd
push
sub
mov
and
push
aam
xor
pop
adc
adc
push
pusha
mov
add
pop
outsb
push
cmp
nop
adc
inc
mov
test
fs
in
ds
or
ja
pop
iret
add
jns
cmp
add
push
clc
incl
adc
sub
imul
mov
add
filds
ret
jbe
add
imul
xor
add
xlat
mov
add
fbstp
pop
cmp
pop
add
push
dec
mov
or
stos
xor
and
pushf
fscale
add
shrl
cmp
mov
cmp
into
or
scas
xchg
add
add
push
pop
inc
or
fistpll
jecxz
aas
sti
cmp
and
cld
pushf
sbb
cltd
push
and
int3
popa
push
mov
lea
and
xor
add
neg
dec
adc
mov
xchg
push
add
mov
mov
not
jp
jno
mov
xor
movl
dec
fs
cli
add
cmp
mov
andl
nop
jp
jp
fstpt
add
inc
and
dec
add
fcompl
push
mov
mov
and
add
pop
jb
inc
push
add
enter
stos
roll
out
or
add
movsl
xchg
icebp
bound
ja
add
les
cmp
inc
lods
xchg
pop
and
lds
int
shrb
sbb
aam
cltd
cmp
call
scas
das
int
jo
xchg
add
xchg
push
mov
jnp
clc
loopne
add
scas
addr16
pop
je
add
fwait
adc
cmpb
jne
cmpsl
mov
sahf
push
and
jecxz
mov
pop
in
adc
sub
loopne
fdivrl
add
dec
es
arpl
and
add
das
and
rolb
mov
imul
lea
in
or
push
in
out
lret
push
aad
or
lret
addr16
add
add
and
aam
clc
shrl
inc
xor
js
or
mov
iret
sbbb
xor
pop
xlat
ljmp
nop
dec
mov
cmp
push
add
cmp
mov
add
in
xchg
jge
add
outsb
into
sbb
push
add
lret
rcl
and
pop
or
leave
fldl
loopne
repnz
lock
jb
push
imul
in
aas
mov
and
icebp
pusha
aad
jno
shll
lret
add
xor
repz
fwait
and
add
xchg
aas
xadd
or
xchg
and
mov
ds
cmp
cs
jnp
jno
call
pop
add
mov
inc
sahf
pusha
out
ftst
adcb
cmp
add
inc
int
cwtl
or
inc
popa
data16
pop
sbbl
jb
jp
popf
popa
push
and
adc
inc
cmp
pop
cmpsb
xchg
outsb
lret
loope
icebp
in
addl
push
loop
mov
repz
aam
sub
mov
mov
inc
add
test
jecxz
push
add
pop
ret
xchg
inc
add
xchg
or
bound
imul
dec
sbb
and
mov
xchg
sub
and
adc
jge
add
movsl
popf
divb
in
add
jmp
pop
cmp
stc
sbb
add
scas
sub
and
jl
sub
pop
push
add
inc
insl
cmpsl
jl
add
stos
or
add
push
fs
fnstcw
adc
stc
adc
bound
xorb
rdtsc
lods
in
repnz
mov
mov
mov
fidivs
test
push
jne
movl
repz
jnp
cwtl
lods
gs
cmp
mov
dec
das
ss
sub
pusha
mov
pushf
mov
test
adc
leave
jne
pusha
mov
mov
adcl
or
xchg
mov
sub
and
icebp
or
repz
pop
add
add
push
popa
icebp
add
cmpsb
mov
pop
mov
mov
jmp
jg
xor
cmp
cmp
out
add
pop
mov
sbb
mov
and
shlb
movsl
xor
and
or
into
pusha
mov
aam
add
push
shrl
add
inc
push
jne
aaa
loope
pop
inc
xlat
inc
add
stos
test
add
bound
cmpsb
data16
sbb
xchg
call
add
shll
cmc
or
ja
lcall
jmp
cli
mov
and
push
ds
mov
in
cmpsl
sub
mov
insb
mov
stos
mov
adc
adc
fcoms
adc
mov
pusha
inc
shll
inc
jle
sbb
sub
adc
popl
xlat
test
and
inc
adc
shll
or
mov
das
int3
jo
sti
lock
push
sub
pop
aad
dec
stc
xchg
or
push
jns
dec
ret
lret
push
dec
xchg
jne
add
leave
repnz
mov
aas
pop
ds
push
subb
sub
bound
movsl
testb
xchg
sti
stos
lods
dec
shlb
jle
add
lcall
add
dec
shrb
jle
inc
xor
and
add
lock
add
fldcw
sahf
or
andb
and
mov
imul
cmp
dec
sahf
fcoms
push
push
daa
mov
sub
sarl
loop
imul
add
stos
lods
lods
seta
add
gs
fcomps
aaa
sbb
adc
inc
jo
adc
rorb
xchg
jl
enter
or
testl
dec
ret
or
jle
sub
scas
add
fnstcw
mov
push
sbb
loopne
mov
outsl
ds
js
pop
mov
add
xor
ljmp
rcrl
push
pop
sbb
and
repnz
mov
lods
and
add
imul
pop
add
mov
lods
aaa
pop
sub
inc
push
jbe
or
add
and
sbb
jp
bound
add
shrl
stc
fstps
adc
mov
mov
fs
adc
adc
and
inc
cmp
dec
nop
sbb
fidivs
add
lods
mov
mov
xchg
push
fwait
mov
shlb
popa
jbe
pop
sbb
ds
loopne
pusha
and
dec
out
pop
shlb
jl
call
add
outsb
shrb
insl
adc
in
inc
xchg
dec
in
pop
adc
sub
and
add
dec
push
sub
inc
push
ds
setae
mov
cmp
push
mov
int
nop
and
lock
add
push
cmc
int3
jo
xor
mov
stos
ret
mov
add
xchg
dec
cmpsb
push
std
in
and
fistps
jle
ret
in
cwtl
mov
jns
pop
and
and
nop
add
test
mov
dec
add
sub
cmp
int
rclb
add
mov
pop
dec
add
jmp
sti
scas
mov
movsb
and
iret
pop
add
sub
add
and
das
sbb
fldt
push
xor
in
xchg
mov
jbe
add
imul
add
dec
add
outsb
lea
or
mov
jge
push
loope
mov
pushf
push
add
pop
pop
data16
or
in
add
adc
inc
add
mov
add
push
into
sub
stos
popf
es
and
shll
pop
pop
push
test
mov
adcb
data16
movsl
movl
cmpsb
add
mov
daa
adc
add
xchg
popf
sub
orl
xor
jb
push
dec
jae
arpl
add
and
in
repnz
aam
push
ret
dec
int3
and
cmp
and
lret
in
add
pop
cmp
add
rol
mov
pop
mov
loopne
or
xor
pop
push
pop
mov
mov
mov
push
rorl
cmp
ffreep
mov
and
cmp
add
mov
jb
sub
fwait
aam
mov
adc
aad
jmp
ja
out
nop
add
adc
dec
and
popa
inc
sbb
xchg
add
fwait
cmp
or
testb
loop
sbb
xchg
aas
jne
addb
sub
shlb
or
ljmp
xlat
dec
popa
push
mov
std
pop
cmp
add
or
xchg
dec
pusha
pop
sub
outsb
add
mov
sub
push
out
jne
pop
cltd
mov
les
ljmp
add
inc
adc
add
lret
and
les
add
js
and
sub
add
sub
pop
sub
std
xchg
mov
jnp
in
das
sbb
push
cmp
test
or
int3
add
mov
js
push
stc
inc
pusha
ds
dec
xchg
cmpsb
push
cli
testl
pop
lret
mov
loope
sub
mov
add
incb
jle
mov
xchg
scas
test
sub
jns
outsl
sahf
pop
add
sbb
les
aas
add
xchg
imulb
inc
mov
cmp
pop
and
rclb
inc
mov
jmp
rcll
or
jge
add
stos
xchg
or
sbb
jecxz
enter
add
push
inc
aaa
push
pop
pop
dec
jne
add
rclb
mov
sti
add
push
loope
push
je
jbe
add
mov
push
repnz
popl
or
add
pop
addr16
repz
mov
xor
mov
xchg
sbb
shr
sub
dec
jg
or
sarb
mov
xor
iret
lods
cld
mov
rolb
outsl
insb
pop
push
mov
addl
mov
sbb
imul
cwtl
dec
mov
jne
repz
rolb
pop
jl
or
xor
sarb
cs
add
add
add
mov
inc
in
jo
xorb
idivl
cld
mov
pop
aam
jle
add
popl
mov
add
fistpl
adc
shrb
cltd
inc
cli
mov
sarb
lcall
inc
mov
test
movsb
jg
pop
loopne
mov
adcb
inc
add
xchg
xor
or
add
push
popa
aam
mov
sub
mull
add
dec
pop
mov
mov
stc
sbbl
fdivrs
dec
in
add
mov
cmove
aas
testl
add
popa
mov
cli
pusha
add
dec
lock
cmp
cmp
sahf
cmpb
push
repnz
add
cmp
jb
mov
xchg
pop
inc
loopne
pusha
jne
aad
dec
adc
cltd
xchg
jo
fwait
mov
orb
in
roll
sahf
mov
pop
inc
add
outsb
mov
addl
adcb
mov
push
jno
mov
sbb
sahf
popa
stc
or
sbb
mov
mov
lcall
add
lods
movsb
xchg
push
gs
xchg
sti
addl
arpl
or
insb
pop
pop
xor
jnp
add
dec
xor
add
fadds
adc
cmp
pop
cmc
add
mov
dec
shll
jbe
out
movsb
stos
add
inc
pop
imul
icebp
xor
jns
aam
decb
add
jno
xchg
adcb
add
dec
xor
push
mov
test
sub
jno
out
inc
dec
lahf
mov
mov
pop
pop
pop
push
inc
mov
movsb
pusha
push
orl
pushf
and
cmp
testb
pusha
js
dec
jg
inc
add
in
fisttps
je
movsb
dec
and
dec
xor
std
mov
jae
add
or
out
out
add
scas
iret
negl
cmp
ljmp
lods
rorb
das
sub
inc
pop
mov
data16
test
testb
cmpsb
out
push
sbb
data16
pop
pop
and
loop
add
mov
repnz
mov
sahf
add
ja
sub
push
mov
push
push
je
pop
idiv
sub
lock
push
or
add
sbb
ret
push
sti
xchg
in
jne
add
xchg
popa
lods
jno
cmc
cltd
add
lea
pop
pop
dec
stos
mov
fldt
push
sbb
cmp
out
scas
lcall
imul
add
sahf
jle
cld
faddp
sbb
out
fwait
push
add
cltd
clc
dec
clc
insb
subb
xchg
sub
xchg
sbb
push
jecxz
xor
inc
add
fsts
call
mov
outsl
mov
jnp
fwait
out
cmp
das
std
mov
push
inc
bound
or
sti
and
lea
mov
int
mov
shrl
add
cli
jae
andb
aas
jno
hlt
adc
pop
sti
cmc
shlb
xor
call
pop
and
xchg
jno
pop
adc
dec
shlb
jae
out
mov
jp
inc
add
orb
add
aaa
add
dec
fildl
push
xorb
adc
mov
pusha
inc
push
pop
add
pop
push
insb
jb
jne
dec
mov
mov
push
addr16
push
sti
fldl
cmp
add
sbb
das
add
xchg
jecxz
loop
ja
or
adcl
sbb
add
xor
sub
pop
dec
imul
decb
stos
sbb
les
jbe
loopne
sbb
and
mov
lds
shrb
and
test
in
lahf
cwtl
daa
jnp
pop
push
jno
insb
popa
ret
jno
movsl
inc
mov
stos
or
outsl
lock
pop
pushf
lea
mov
sub
shll
adc
xchg
popf
lret
cli
pop
add
and
scas
std
add
loopne
xchg
add
xchg
inc
int
fistl
mov
stos
lods
loopne
mov
add
cmp
je
xchg
ret
les
sub
sbb
sbb
test
adc
imul
shl
fdivrs
lds
ret
nop
out
add
sarl
lret
cmp
mov
inc
fsubrs
sub
add
xchg
and
add
hlt
dec
test
push
adc
rolb
sub
js
add
cmc
and
xor
add
clc
shrb
mov
push
pop
sbb
inc
enter
mov
fwait
lcall
pop
fistpll
icebp
aas
adc
jmp
stos
mov
add
lock
fwait
dec
cmp
push
jl
out
add
add
mov
test
pop
sub
jg
sbb
lcall
pop
js
outsb
add
and
fldt
jns
les
rclb
sbb
add
out
or
push
roll
jge
movsw
or
flds
lret
int
cmc
push
lds
es
add
sbb
adc
mov
jne
jecxz
nop
push
jp
cmc
mov
out
mov
mov
push
shrl
sub
sbb
pop
cmp
add
xchg
jns
sbb
xor
jmp
outsb
sub
pop
int3
icebp
cwtl
adc
mov
xchg
adc
pop
or
adc
add
add
push
sub
jo
add
out
adc
push
xchg
dec
in
stos
cmpb
or
jne
jno
and
dec
lods
add
mov
add
cmp
push
cltd
lods
add
in
lcall
jb
stos
and
sbb
js
jg
les
fisubs
pop
dec
and
mov
jo
sub
dec
shlb
or
je
shrl
daa
add
scas
jbe
xchg
dec
insb
mov
mov
inc
push
mov
outsl
data16
adc
add
movsb
into
jo
rcr
stc
sub
adc
iret
pusha
or
push
addl
fadds
push
test
and
adc
pop
dec
insl
hlt
push
shlb
cmp
cmpsl
add
xor
cmp
lret
dec
scas
xor
pxor
sub
jge
clc
aam
jbe
add
stos
jp
and
jg
add
js
ja
in
jne
test
add
adc
jle
mov
test
pop
and
pop
stc
or
mov
xor
outsl
hlt
add
adc
mov
cmp
add
pop
push
and
jmp
add
repz
push
je
ret
loopne
mov
add
xlat
add
sub
or
mov
lods
sbb
push
stos
push
aas
aad
fcmovnbe
add
js
loopne
mov
test
add
scas
sub
shlb
fisttpl
dec
xor
popa
daa
cmp
je
and
jb
shlb
add
inc
jg
add
pop
dec
add
int
pop
fnstsw
lar
pusha
lret
dec
out
xor
xchg
add
jmp
insl
cli
xchg
inc
or
repz
mov
push
pop
lds
xchg
mov
and
dec
test
loopne
sahf
aaa
dec
sbb
call
bound
push
loopne
lcall
jl
js
xchg
dec
add
pop
daa
call
adc
ficoml
sbb
mov
sbb
xchg
add
and
in
mov
or
add
filds
sti
dec
push
cwtl
xchg
addr16
aam
pusha
cli
jg
add
xor
mov
add
mov
add
lods
jg
sbb
push
outsl
add
fnstcw
adc
cltd
or
add
mov
imul
inc
inc
jne
push
and
xor
es
mov
dec
inc
sub
outsb
sbb
push
adc
jmp
cwtl
cmp
add
mov
sahf
test
sbb
mov
cmpb
mov
aas
add
inc
dec
hlt
popf
adc
jmp
lock
and
lret
xor
out
fsubl
andb
xchg
add
and
icebp
call
mov
dec
leave
push
add
xlat
push
daa
lods
mov
push
inc
shlb
in
in
xchg
mov
movsb
sub
out
cltd
pusha
movsb
mov
push
mov
stos
push
out
lock
mov
sbb
clc
out
mov
xchg
sub
cmp
call
pusha
icebp
sub
dec
cld
pop
lret
pop
push
dec
jp
mov
popa
mov
or
pusha
imul
mov
inc
loopne
lcall
push
js
pop
add
and
fbld
ret
add
std
adc
imul
push
xor
cld
lcall
or
push
inc
shrl
nop
aas
add
xchg
sbb
call
mov
in
cmc
movsl
movlps
mov
sbb
or
outsb
ds
mov
push
pop
sti
sbb
sbb
loopne
pop
jo
add
inc
and
add
test
add
dec
addl
dec
call
inc
inc
shlb
iret
inc
add
mov
ljmp
pop
bound
jl
sub
insb
movb
cld
sbb
cmp
lds
call
out
out
push
insb
push
sahf
pop
mov
lods
or
jg
ud0
sub
inc
pop
daa
add
insb
add
mov
jo
lret
sbb
or
sub
aas
xchg
add
lds
cmpsb
sbb
lret
sbb
adc
xchg
dec
add
dec
lock
jnp
lahf
jecxz
out
iret
mov
cld
cmp
sar
xchg
sub
pop
jae
adc
sub
cmp
scas
filds
icebp
hlt
jmp
inc
inc
mov
mov
mov
xchg
repnz
ret
add
popf
test
andb
adc
in
sbb
imul
add
cmp
push
push
add
out
enter
mov
mov
push
add
adc
push
fcmove
xlat
das
adc
lret
add
cli
add
fs
lcall
sbb
or
push
loop
sbb
clc
pusha
outsl
scas
cmc
jmp
dec
imul
pop
xchg
cmp
in
xchg
sahf
ss
andl
and
je
add
inc
xor
mov
repnz
shrb
xor
out
fnstcw
test
jb
arpl
xchg
dec
add
and
or
jo
dec
mov
push
aam
ret
add
xchg
aas
dec
xor
inc
test
out
je
mov
sbb
pop
xchg
add
or
mov
scas
pusha
jl
sbb
jecxz
rcr
adc
sbb
fistl
je
add
xor
adc
add
push
inc
add
lds
cmp
repnz
pusha
mov
in
xor
add
push
loopne
nop
dec
stos
imul
jb
mov
adc
rolb
int
add
add
push
jmp
cmpsl
inc
jnp
lahf
mov
jne
pop
cld
mov
pop
ds
xchg
dec
pusha
fcoml
test
push
cltd
adc
movsb
ret
fwait
gs
add
push
in
sbb
push
pop
mov
movb
sub
mov
in
f2xm1
inc
add
mov
or
sub
add
inc
outsl
pop
bound
inc
dec
pop
leave
sbb
test
gs
add
xchg
arpl
scas
mov
es
xchg
outsb
cmp
xorb
add
js
lock
cltd
popa
adc
mov
xor
and
imul
and
sub
sbb
add
add
push
ret
xor
mov
add
and
repnz
sti
adc
add
mov
cmp
pop
sbb
pop
jno
adc
enter
test
in
push
mov
movaps
inc
add
jbe
dec
add
and
mov
sub
jns
movsb
insl
cmp
in
scas
add
adc
ja
pop
fdivrp
push
add
pop
out
shlb
sub
add
bound
cld
or
out
fsubrs
or
cmpb
add
mov
mov
sti
fadd
test
adc
add
dec
push
mov
dec
sub
mov
or
lock
cmp
mov
fiadds
rol
sarl
sbb
repnz
cmp
test
pop
lock
out
cwtl
pop
pop
xor
sub
in
inc
xchg
add
sub
adc
xor
mov
cmp
incb
movsb
aaa
outsb
sbb
pop
pop
pop
mov
imul
add
ja
xchg
cltd
loopne
dec
add
sub
and
out
add
push
sbb
add
mov
lcall
adc
push
add
jg
test
repnz
add
dec
inc
ja
sub
push
fwait
int
sbb
and
loopne
and
aad
dec
mov
lds
and
addr16
xchg
push
push
inc
push
ret
mov
add
pop
aas
xchg
lret
add
mov
mov
pop
int
xchg
jbe
in
xlat
mov
scas
add
lea
test
idivb
cmp
add
mov
or
and
xchg
mov
jmp
push
shl
leave
mov
xor
repz
sar
xor
ret
sub
lea
or
cmp
sbb
push
add
call
lods
cmpl
iret
rclb
xor
in
mov
mov
pop
aad
mov
dec
pusha
add
inc
gs
inc
test
pmullw
jno
pop
sub
sub
add
cltd
sub
leave
cmp
call
add
fldenv
sbb
pop
insl
push
add
cmp
push
outsl
inc
fidivrs
icebp
pop
or
shl
add
jl
mov
fmul
pop
and
std
jo
jo
pop
dec
jae
add
outsb
xchg
sbb
das
pop
push
cwtl
jb
push
xchg
scas
cltd
into
push
push
popa
add
xlat
inc
hlt
das
add
xor
scas
cli
lcall
shlb
loopne
test
decb
xor
and
inc
imul
ret
add
push
fwait
inc
stos
fstpt
xchg
add
in
cmpsb
and
stos
add
mov
mov
aam
cmp
sahf
mov
jp
and
add
hlt
and
pop
lret
and
add
int3
xchg
ror
daa
cmp
sbb
push
hlt
pop
out
daa
add
dec
adc
jae
xorps
jns
sbb
sub
xchg
in
sbb
repz
push
pop
mov
add
sbb
arpl
fcompl
mov
movsb
cld
cli
add
ret
mov
popa
inc
rorb
setne
andb
add
cmpsl
leave
inc
sub
pusha
popf
push
pop
aad
inc
mov
clc
movsb
add
pop
sub
add
notl
sbb
push
add
test
mov
mov
or
enter
rolb
ficompl
frstor
add
mov
test
or
or
adc
adc
or
hlt
mov
add
mov
lods
add
inc
jl
jecxz
and
push
mov
mov
push
add
test
std
add
xor
fldl
xor
push
xchg
add
gs
test
pop
pop
sbb
mov
mov
nop
cmp
loop
xor
mov
jge
fucom
sarb
in
inc
out
dec
pushf
push
es
add
arpl
pop
cmpsl
push
inc
mov
sbb
out
adc
loopne
sbb
hlt
lret
pushf
test
into
iret
je
movsb
xchg
add
loopne
jge
rcrb
into
or
arpl
in
push
es
mov
add
sub
sbbb
dec
mov
outsb
out
or
jmp
jnp
inc
xchg
lcall
mov
sbb
insb
fildl
repz
add
mov
dec
mov
pop
mov
in
jae
or
xchg
push
inc
add
gs
sbbl
ljmp
cmp
inc
arpl
add
movb
dec
and
add
mov
xor
dec
add
adc
pop
int
or
fs
stos
pop
adc
add
jp
or
add
or
xor
mov
and
in
pop
add
mov
es
dec
das
add
aam
push
stc
add
insl
pop
cmp
add
loop
pop
inc
cld
jb
add
outsl
jmp
or
cli
mov
push
popf
cmp
call
imul
inc
pop
add
sti
xchg
loop
and
xor
jno
sarb
jae
add
out
push
add
fstp
call
adc
test
dec
mov
lret
or
in
and
mov
dec
leave
push
push
icebp
pop
and
lods
add
subps
sbb
xchg
test
test
mov
jle
movswl
and
mov
adc
ljmp
mov
adc
add
mov
mov
ltr
ss
and
jae
sub
cmpsl
int
pusha
cmp
or
mov
mov
out
add
test
adc
stos
add
les
arpl
mov
lock
cld
add
bnd
cmp
imulw
jnp
fsubs
jle
clc
jbe
add
loopne
aaa
cmpsb
cmpsl
ret
pop
in
aad
add
jecxz
sbb
and
es
aam
sbb
dec
dec
inc
stc
xlat
add
repnz
adc
mov
mov
fiadds
fcomps
in
fistps
fptan
orb
in
add
xchg
or
add
cld
add
push
ljmp
filds
xorl
lahf
and
cmp
enter
xor
movsl
data16
add
sub
inc
adcb
pop
add
scas
insb
dec
aas
mov
lahf
pop
adc
icebp
and
or
ret
sub
pusha
cmp
fs
sub
cld
lret
mov
and
cli
or
std
xor
test
icebp
adc
add
pop
mov
out
jne
add
mov
jp
in
sbb
fxch
lahf
out
test
and
xor
dec
dec
bound
mov
adc
mov
mov
xor
int3
dec
xor
cmp
fiaddl
nop
mov
xor
add
sbb
pop
mov
add
in
sbb
dec
movl
sbb
cwtl
orb
nopl
lahf
add
in
cli
add
pop
repz
int3
inc
add
and
jp
test
scas
daa
push
jmp
add
dec
in
sub
repnz
sbb
add
pop
mov
and
add
jnp
jne
xchg
mov
mov
pop
in
sbbl
add
aad
mov
cmpsb
shrb
push
lahf
xor
mov
hlt
jle
inc
sbb
push
jb
jno
push
divl
ret
orb
pop
pop
sbb
pop
adc
xlat
fsubl
dec
push
add
subl
add
add
or
jmp
sarb
data16
orb
add
cmpl
in
bound
fwait
stos
dec
inc
add
mov
mov
scas
push
xchg
push
lods
add
lds
mov
add
insl
aaa
inc
cmp
pop
push
test
add
or
mov
push
xchg
and
sbb
test
mov
push
jle
or
sti
shll
lock
testl
sub
sbb
sub
jge
add
sbb
adc
fsubp
fwait
add
or
mov
sbb
insb
or
xchg
mov
mov
aad
xchg
loopne
fisubs
cmp
add
jbe
shlb
jno
add
fs
outsb
mov
add
push
mov
jmp
rorb
popa
sarb
pusha
jo
cmc
pop
or
in
out
xorb
and
sbb
xor
enter
cmp
adcb
das
jb
sarb
call
jns
enter
add
fwait
addb
cli
xor
call
xchg
icebp
jg
rorl
dec
mov
ffreep
xor
aas
out
mov
pop
and
ja
xorb
ret
mov
mov
mov
add
xchg
sub
cmp
adc
push
dec
jb
notb
popf
jae
cmp
aad
jne
dec
fisubrs
insb
add
adc
mov
add
sub
das
test
jbe
cmc
sbb
sbb
out
push
ss
push
gs
loopne
add
scas
add
add
push
xlat
insb
sub
mov
in
dec
xchg
sbb
push
sbb
in
movsl
cmpsl
or
pop
lock
into
mov
icebp
mov
push
add
sbb
jne
add
cmp
push
nop
js
adc
pushw
loope
inc
add
out
repz
mov
ss
dec
pop
jbe
dec
pusha
adc
mov
cmpsl
add
push
loopne
add
or
jmp
addb
push
push
jmp
and
daa
pop
roll
mov
je
call
punpckldq
xor
test
nop
add
lret
lcall
adc
add
push
sub
cmp
mov
inc
add
stos
jns
mov
cmc
int3
inc
out
add
xchg
aas
add
mov
sbb
fdivrs
in
adc
add
push
jmp
add
xchg
test
insl
lahf
pop
add
cmpsl
lret
into
inc
les
push
or
lds
cmc
cli
add
cs
xor
jp
dec
add
xor
sub
cli
or
testb
mov
xor
add
push
rcrl
jg
add
add
fldenv
loope
sarb
sbbl
mov
cmpsb
mov
add
adc
stos
in
pop
add
aam
xchg
mov
xchg
dec
sub
pusha
mov
mov
jbe
aad
js
mov
push
sub
adc
xchg
insb
pop
push
or
xchg
jnp
enter
andb
stc
orl
sbb
mov
shrl
add
repz
fisttps
fwait
cmp
adc
lcall
test
enter
mov
inc
inc
rcrb
loop
or
test
mov
push
fistl
and
adc
push
lock
dec
cmp
and
mov
sub
and
add
pop
add
sbbb
add
aam
lahf
add
add
stos
ljmp
test
pusha
cmp
scas
cmpsb
out
add
shll
add
lea
add
ret
mov
testl
xchg
hlt
loope
add
fwait
std
mov
add
adc
popl
scas
mov
adc
add
add
jecxz
in
pop
es
fdivrs
inc
add
xchg
sub
mov
xchg
sub
mov
stc
nop
push
daa
hlt
pop
push
cmpsb
add
cmpsl
inc
dec
pop
js
fbld
jb
aaa
pusha
add
add
sarl
int
cmp
and
jbe
add
jae
je
dec
add
mov
cmp
add
pop
jmp
fstl
push
add
mov
inc
or
add
test
scas
out
loopnew
add
pop
insl
mov
jg
add
fsubr
inc
mov
mov
xor
lret
hlt
je
cmp
icebp
adc
add
jbe
fsubr
dec
pop
add
xlat
dec
dec
pop
jmp
sbb
inc
call
jecxz
fisubrl
sbb
push
in
add
loopne
pop
pop
out
add
int
sub
push
rorl
icebp
fwait
addr16
xchg
jo
push
and
and
je
adc
leave
add
enter
aad
add
mov
sbbb
mov
out
add
mov
enter
adc
push
test
jne
fadds
dec
cmpsb
test
mov
in
add
or
push
ret
adc
jo
jecxz
iret
syscall
and
nop
pusha
insb
add
sub
jo
mov
sbb
jp
addr16
test
inc
gs
and
mov
mov
cld
aad
out
jmp
stos
pop
ljmp
sbb
pusha
f2xm1
pop
or
movsl
out
fnstsw
mov
push
mov
mov
mov
push
sbb
sbb
and
push
pusha
cs
add
in
mov
lock
xchg
and
sbb
sub
stc
aam
nop
andl
mov
pop
jle
punpckhbw
add
sub
jp
shld
or
and
mov
adc
mov
inc
icebp
pop
mov
sar
pop
in
add
sahf
mov
or
add
add
inc
inc
ret
and
mov
rclb
add
inc
mov
movsl
jae
jno
fninit
cmc
es
cmpb
sub
rcl
addb
dec
dec
ror
cmp
sub
and
sub
or
cmp
dec
arpl
xor
add
mov
dec
fucomp
add
inc
sub
and
out
mov
repz
js
fdivs
and
mov
insb
xchg
or
mov
in
sbb
adc
test
test
add
or
or
push
repnz
jo
out
ret
xchg
loop
inc
add
cmp
add
push
pop
leave
add
out
cwtl
jmp
test
outsl
or
add
xor
ja
xchg
push
jo
hlt
jae
add
adc
leave
push
lods
pushf
mov
insb
inc
stos
mov
sbbl
mov
push
and
push
sbb
jbe
add
and
jne
fldl
jb
popa
pop
inc
movsl
push
mov
adc
cmp
jmp
popf
js
mov
je
ds
ja
jecxz
mov
push
jo
sarb
sbb
pop
xchg
and
andb
add
push
mov
and
add
cmpsb
dec
nop
insb
fucomip
mov
js
add
ret
pop
je
add
push
push
adc
add
in
inc
push
mov
add
stos
sbb
push
test
sbb
dec
test
std
mov
and
loopne
testl
xor
push
loopne
test
pop
lods
cmp
mov
pop
mov
add
ficompl
or
or
mov
mov
jno
jl
jne,pn
add
fstl
hlt
jbe
add
aas
add
cmovg
cmpl
jmp
jbe
lcall
cmp
mov
enter
cmpsl
pop
add
add
mov
jae
add
jg
mov
shrl
push
orl
popf
sti
leave
rcr
jl
add
arpl
mov
cmp
lods
mov
fucomp
or
sbb
add
mov
shlb
loopne
ja
ds
inc
add
out
mov
cmpsb
out
rolb
pusha
shl
fs
cmpsl
lea
lock
loop
add
cmp
das
mov
push
and
jbe
cltd
pop
scas
add
add
xchg
outsb
cmc
cli
subb
dec
jb
sbb
pop
sub
sub
aas
sub
sbb
cmp
push
sahf
add
add
popa
sbb
inc
bound
add
ljmp
rclb
sbb
stc
popfw
pushf
nop
test
dec
shr
add
sbb
push
inc
loop
cmpsb
mov
leave
lcall
jge
pop
inc
jmp
int
sbb
shl
popf
xorl
pop
xor
addr16
add
mov
xor
mov
lret
or
push
sbb
inc
lods
jns
cmp
stos
xchg
aas
cmpsb
inc
bound
shlb
pop
dec
mov
js
frstor
mov
pop
popl
pop
clc
sti
lret
sub
sbb
dec
js
fstl
or
add
mov
add
jecxz
cld
lret
add
xor
add
pushw
clc
jl
jne
adcl
dec
jle
mov
push
out
xchg
xchg
mov
cmp
les
push
scas
ficoms
js
add
lahf
push
fldt
pusha
cld
inc
fbstp
mov
cwtl
push
repz
sub
enter
testl
sbb
add
repnz
xchg
and
inc
pop
xor
xchg
sbb
lds
xor
aaa
sti
add
gs
add
das
shrb
mov
mov
faddl
orb
pop
dec
dec
inc
add
or
adc
push
mov
clc
dec
jecxz
or
ljmp
arpl
jle
cltd
mov
cmpsl
lret
sahf
adc
cli
std
push
fcompl
int3
fldl
shll
scas
or
add
insl
clc
add
xor
in
add
enter
aas
dec
and
inc
mov
test
pop
fcomps
ror
push
out
lcall
push
xor
add
or
add
dec
push
adc
rol
mov
dec
sbb
cmpsb
push
add
cli
pushf
fildll
add
sbb
lret
fwait
aad
jle
jne
pop
cmp
xor
jmp
repz
fimull
cmp
add
out
sbb
or
sarb
bound
dec
cltd
or
xchg
jmp
mov
cld
mov
loop
pusha
imul
mov
call
push
in
or
fwait
in
xor
xor
pusha
jle
dec
jo
pop
xor
nop
mov
fdivs
std
jp
rcr
push
pop
dec
out
daa
inc
xor
fidivrl
sti
add
mov
jle
out
inc
or
dec
movsb
movsl
add
aad
mov
lods
shll
les
xchg
arpl
pop
pop
sbb
inc
and
dec
add
and
xlat
out
cwtl
pop
add
fnstcw
decl
rorl
pop
inc
mov
add
add
add
mov
mov
cld
jae
in
xor
mov
shlb
push
cmp
call
jecxz
shlb
xchg
int3
add
dec
pop
sbb
sbb
mov
add
fdivrs
inc
sahf
or
xor
mov
push
mov
fsubl
add
pop
push
add
or
shll
out
mov
inc
jbe
jno
dec
pop
pop
inc
lods
push
and
rcl
mov
imul
mov
es
xchg
pop
int
or
cli
nop
ljmp
fisubl
pop
xlat
shrb
jb
stc
scas
dec
add
xor
cld
das
pusha
mov
incl
mov
push
repnz
inc
clc
jns
push
jge
push
xor
test
sub
push
push
jno
xchg
fmull
sub
or
call
int
loop
fnstsw
pop
inc
or
push
jb
sbb
shr
es
xor
or
jl
add
test
mov
stos
push
dec
add
add
lea
or
mov
test
test
push
insl
dec
mov
mov
mov
or
and
ret
jae
adc
and
push
stos
xor
mov
sbbl
inc
insb
add
js
rcrb
push
es
ss
int
cwtl
and
sti
arpl
mov
loope
lock
adc
pop
movsb
inc
loopne
in
dec
and
pop
js
rorl
and
rolb
cwtl
jmp
add
add
outsl
maskmovq
imull
aad
es
add
and
inc
inc
fadds
add
popf
push
jns
lds
rcr
push
das
xchg
xchg
mov
aas
aad
add
pusha
lret
lahf
and
pop
and
xor
int
jecxz
fnstenv
jl
imul
insl
arpl
sbb
and
mov
mov
nop
add
repnz
pop
rcrl
lea
lods
and
sarl
ret
dec
add
imul
xor
dec
xor
and
cs
pop
dec
repnz
xchg
int3
mov
adc
and
int3
test
xor
jae
push
add
push
or
dec
fistpl
xor
pop
pushl
lock
adc
jle
fstpt
xchg
or
and
mov
mov
inc
movsb
jns
sub
xor
cmp
ja
add
fistl
dec
mov
pushf
addr16
adc
add
dec
pop
cli
out
cld
cmc
xor
negl
inc
dec
pop
faddl
xchg
add
mov
pop
jne
test
add
mov
push
hlt
cltd
adc
mov
jo
mov
mov
lret
add
inc
andl
mov
fiaddl
cmpsb
jge
dec
pop
add
shl
adcb
in
lcall
push
pop
sarl
je
sbb
jno
fwait
jecxz
aaa
push
loopne
push
sbb
orb
outsb
mov
jno
add
xchg
jge
xchg
dec
cmpb
in
gs
sbb
rcrb
adc
xor
ds
or
pusha
dec
mov
loope
loopne
repz
cmp
pop
add
lds
rolb
mov
jbe
or
icebp
pusha
icebp
jb
sbb
or
and
adc
iret
mov
mov
xchg
mov
or
cmpsl
rorb
pop
icebp
inc
push
jge
pop
repz
inc
rolb
pop
xlat
jge
aad
add
roll
or
cmp
sub
add
lret
jle
add
cmp
scas
mov
mov
add
and
mov
and
xor
out
sub
xor
loop
cld
add
inc
sub
add
add
add
imul
push
sbb
mov
push
fisubl
inc
std
loop
or
xor
add
xlat
dec
addl
std
push
xchg
outsl
or
add
push
leave
sbb
out
sbb
mov
add
mov
rclb
mov
pop
jp
das
mov
jnp
push
or
cltd
lahf
shlb
adc
pop
cmpsl
and
push
pop
dec
jo
or
arpl
mov
dec
ljmp
idivb
jecxz
xor
jo
pop
add
xor
enter
or
or
xchg
out
push
jecxz
sbbl
jp
lods
dec
jp
test
jge
lock
sub
test
dec
stc
xor
push
push
mov
add
or
or
and
push
addl
adc
push
sub
loope
add
add
dec
negb
or
sbb
inc
and
enterw
dec
clc
movsb
movsb
inc
pusha
push
andl
add
pop
orl
or
mov
jne
test
fcoml
pop
adc
push
cmc
rorb
mov
mov
dec
mov
iret
mov
xor
leave
adc
mov
int3
inc
adc
and
cwtl
or
and
repnz
mov
lahf
fldt
test
cmp
loopne
pop
addl
ret
pop
dec
jmp
push
sbb
push
add
std
add
and
test
and
pop
sbb
jbe
imul
inc
int
add
faddl
leave
sbb
or
adc
push
cs
loopne
imul
pop
or
sub
pop
push
adc
adc
sub
inc
xchg
ds
inc
cmp
mov
dec
lods
sbb
aas
loope
dec
mov
mov
stos
adc
sbb
xchg
adc
cld
push
ja
mov
mov
dec
dec
scas
lret
ljmp
aam
pop
xchg
or
outsl
fadd
aam
cld
popa
scas
loope
inc
or
push
shrl
dec
test
mov
push
dec
or
add
inc
inc
sbb
loop
rcrb
mov
daa
je
ficoms
ret
sub
push
dec
jge
clc
lcall
sub
cltd
testb
into
gs
or
push
data16
les
cld
cmp
filds
std
push
add
dec
jns
pop
aas
sbb
push
add
aad
mov
mov
xor
scas
push
outsb
xchg
mov
pop
enter
mov
push
jp
mov
es
pop
sub
or
daa
ror
add
loop
or
sub
xchg
inc
mov
cli
movsb
adc
lret
mull
ficompl
add
pop
dec
push
std
jo
cltd
add
pushf
loope
cmp
call
sahf
iret
mov
push
ja
inc
ss
cmpsl
nop
inc
cmp
xchg
add
jns
mov
push
push
dec
mul
inc
mov
out
add
or
dec
and
add
mov
inc
sbb
adc
add
rclb
das
inc
pop
jae
pop
insb
int
fdivs
fbstp
inc
and
rorb
popf
inc
pusha
and
sbbl
jb
shlb
jnp
js
push
shll
jo
mov
push
mov
xor
push
xor
mov
cli
hlt
mov
popa
xchg
lds
testb
sbb
dec
sbb
int3
and
or
cli
push
push
shll
cmp
lods
lock
xor
add
into
push
leave
add
mov
pop
push
push
adc
pop
pusha
daa
pop
cmp
mov
xchg
add
sub
int
inc
or
adc
or
mov
lret
add
retw
les
lods
mov
mov
inc
sub
inc
cmp
jnp
enter
movsl
les
repz
dec
jnp
insl
jg
and
mov
cltd
cmp
and
add
pop
add
cmpsl
out
pop
sbb
repz
dec
ret
pop
call
inc
xchg
add
sbb
adcb
nop
push
insl
add
jmp
mov
incl
dec
nop
test
frstor
add
xor
xchg
test
xor
movsl
repz
addb
rcrl
in
pop
jg
jl
add
xchg
inc
outsb
push
and
xor
aaa
or
orb
add
cmp
rclb
mov
inc
push
orb
loop
sub
mov
mov
dec
add
adc
int
inc
mov
in
movsb
pop
subb
and
sub
into
add
adcb
mov
sbb
push
out
inc
xchg
xchg
adc
push
pop
rolb
pusha
or
stc
push
add
imul
inc
aad
add
in
int
insb
adc
movb
xor
frstor
andb
outsw
add
jno
jbe
insb
cmp
sub
lahf
loope
ret
iret
inc
mov
fstp
in
push
jbe
sbb
inc
gs
sub
stos
cltd
loope
fs
pop
pusha
push
sub
loop
repz
mov
or
jb
stos
add
mov
mov
adc
pop
dec
sahf
mov
hlt
or
bound
dec
daa
insb
in
cmp
loope
mov
add
popf
inc
andb
cmp
and
dec
lock
loope
sbbb
out
sub
add
jg
mov
add
into
add
pop
call
jnp
jecxz
and
cmp
and
in
pop
fists
mov
gs
pop
jbe
call
inc
cmpsb
mov
stos
sub
sub
dec
cmp
inc
in
icebp
sahf
jns
sbb
test
dec
jp
xchg
push
xor
and
sahf
or
push
add
pop
sbb
jb
add
mov
mov
adc
xor
add
lret
mov
xchg
sahf
push
test
sbb
mov
mov
addl
test
dec
ljmp
pop
mov
mov
cmc
loop
push
cmp
mov
out
sbb
call
or
and
pop
scas
add
and
pop
and
outsb
shll
sbb
add
dec
fnstenv
jne
add
jb
add
add
cmpsb
mov
and
mov
pop
adc
outsl
mov
lods
loop
repz
or
fmuls
test
push
fstl
adc
mov
add
sbb
cmpb
add
jp
and
sub
mov
int
notb
movsb
insl
adc
adc
dec
adc
add
fcoml
cmpl
pop
ss
lock
mov
jne
mov
mov
sti
mov
mov
jl
cmp
add
xchg
add
popl
xor
push
xor
js
push
jecxz
loop
lret
sbb
test
xchg
push
mov
add
mov
pop
xchg
ret
mov
mov
mov
adcb
aaa
mov
jg
enter
sub
das
mov
push
inc
add
loop
jl
push
pop
add
jne
fwait
call
je
xchg
add
aad
aaa
ljmp
fiaddl
lahf
cmp
je
nop
arpl
mov
add
jl
mov
add
jp
cmp
addl
inc
cmp
fwait
add
mov
inc
add
cmpl
add
iret
mov
push
js
rcrl
dec
and
scas
leave
jle
sbb
jecxz
pushf
cmp
or
add
jne
loope
cmpsb
mov
mov
outsl
jl
pusha
movsb
cld
pop
jg
add
lret
sti
stc
insl
pxor
add
out
fwait
push
xlat
ja
add
xor
jb
and
aas
divl
insb
add
stos
or
cmc
test
xor
add
pop
ret
ljmp
arpl
leave
dec
stos
pop
ret
rcrb
xchg
adc
aas
dec
in
xchg
add
push
insl
popf
aaa
pop
sub
jne
fs
scas
arpl
enter
add
pop
jp
jno
mov
or
cltd
xchg
or
fs
jmp
push
add
sbb
mov
iret
nop
jae
sbb
push
add
daa
addr16
add
inc
add
in
insb
out
inc
adc
jo
jge
add
mov
fistps
loopne
icebp
sbb
add
inc
mov
lret
add
sub
push
andl
mov
in
sbb
xlat
ret
incb
jp
mov
push
and
xor
bound
lds
fs
fnstsw
loope
pop
mov
add
outsb
cmp
or
cmpsl
leave
repnz
and
enter
jb
scas
sub
add
adc
sbb
cld
dec
cmp
add
rclb
lods
push
xor
add
repz
inc
push
xchg
lock
aaa
add
or
cmp
xchg
rorl
mov
enter
pop
ss
out
test
lret
dec
and
faddp
pop
push
xor
aam
out
int
fisttpll
pop
inc
leave
stos
dec
add
mov
fs
mov
negb
add
nop
xchg
add
mov
xor
jmp
lret
test
mov
jmp
lret
ds
loopne
push
sbb
lock
jnp
roll
ret
jae
add
pop
push
mov
jns
jle
fistpll
ret
hlt
sub
pushf
xchg
test
xchg
sti
addr16
push
sbb
jb
mov
test
mov
xor
out
push
xchg
sub
push
cmp
js
jae
sbb
dec
pause
add
mov
es
repz
cmp
movsb
jae
pop
push
andb
jecxz
sbb
outsb
jge
rorb
int3
movsl
mov
jmp
add
or
mov
sub
dec
cld
mov
cmp
dec
sti
aam
and
sub
or
outsl
add
mov
sub
adc
mov
xor
pop
cmp
push
mov
cltd
mov
pop
jge
push
pop
dec
adcl
push
scas
test
jp
ror
push
fidivs
jbe
lds
sub
push
testb
in
mov
jmp
jg
cmp
decb
repz
or
int
cltd
popf
add
adc
pusha
and
mov
mov
push
mov
call
add
push
fcomp
mulb
pusha
or
mov
cmpsb
sbb
add
in
adc
sub
push
lea
into
fsubrp
add
mov
and
xchg
cmpsb
add
xchg
or
push
rcrb
in
mov
sar
mov
add
loop
stos
loopne
mull
cltd
aam
pusha
in
dec
jg
mov
movsb
lds
ja
sub
jns
into
and
shll
add
add
fstpl
add
inc
clc
in
push
aam
filds
push
jae
inc
cmp
cmp
jl
xor
iret
hlt
rolb
cwtl
clc
add
push
aaa
mov
jne
and
mov
arpl
in
mov
pusha
jne
add
mov
xlat
mov
jns
xchg
push
addb
mov
cld
pop
push
ja
add
pop
pop
test
and
or
ret
sub
sbb
rolb
mov
push
std
lock
add
pop
add
mov
cmpsl
push
into
and
mov
aas
lcall
ljmp
lods
ret
push
sahf
or
xorb
mov
inc
add
lods
jae
cmp
jbe
imul
in
mov
ret
add
xor
rcrb
out
add
ljmp
ds
in
imul
mov
add
xchg
mov
add
dec
cli
inc
hlt
ja
add
popf
lahf
add
pop
popa
jo
addl
out
pop
inc
clc
or
mov
jmp
sub
enter
lock
loop
add
arpl
addr16
dec
and
xor
add
hlt
loop
cmp
mov
sub
add
in
add
mov
popf
add
lret
rorl
sub
mov
and
add
lods
call
pop
mov
add
in
ljmp
jecxz
jp
mov
out
inc
adc
les
rcrb
add
cmp
mov
jle
and
xor
xchg
test
xchg
inc
mov
in
leave
adc
daa
add
or
add
add
xchg
pop
fwait
imul
in
mov
add
sub
pop
lods
fadds
cld
mov
shll
jl
add
jnp
xchg
push
xor
push
dec
shl
add
out
mov
mov
stc
insb
scas
mov
adc
mov
mov
sbb
sbb
cs
adc
scas
ret
movsl
sbb
add
or
jge
push
lods
repz
and
sbb
mov
test
add
cltd
dec
int
pop
jge
cs
fildl
test
dec
adc
out
xor
icebp
push
sahf
sbb
pop
loop
fcomps
cld
movsb
push
jp
sbb
fstps
push
mov
push
add
jecxz
hlt
xlat
insl
and
dec
out
inc
aam
xor
mov
pop
rorb
add
test
dec
incl
js
cltd
add
stos
clc
pop
xchg
adc
or
cld
sbb
sub
enter
jne
dec
mov
jbe
mov
cmp
cmp
adc
pop
jnp
xor
aas
jnp
add
mov
or
popa
mov
push
inc
hlt
das
cmp
in
bound
test
loopne
mov
out
cmp
and
add
sbb
xor
or
mov
add
pushf
aam
push
sub
mov
fbstp
pop
je
insl
adc
in
cwtl
cmp
dec
add
mov
rcr
cmpsb
xor
lea
rolb
sbb
xchg
mov
jae
cmpsl
mov
xor
and
jbe
add
xor
dec
sbb
and
mov
ret
subb
mov
xchg
add
insl
dec
jns
data16
imul
jle
mov
mov
cmpsb
push
or
push
add
inc
loopne
outsb
push
push
rorb
cmp
sbb
and
xchg
pop
add
aas
xor
mov
dec
scas
push
mov
pop
mov
add
nop
pop
add
pop
pop
add
sarb
push
add
dec
jge
test
testb
movsb
xchg
or
push
cmpsl
add
sbb
mov
data16
mov
sbb
subl
sbb
add
jl
xchg
repnz
stc
pop
sub
add
xchg
mov
pop
xchg
mov
sbb
pop
add
btr
loopne
push
loop
cvtps2pi
js
jmp
pusha
jnp
add
pop
rcr
jae
add
cmp
stos
add
add
cmp
enter
inc
aad
sti
add
imul
cmp
push
sub
ds
in
mov
inc
movsl
jbe
cmp
inc
insl
jecxz
or
mov
mov
add
loope
and
push
lods
adc
insl
mov
cld
inc
adc
enter
xor
mulb
sbb
mov
mov
mov
sbb
add
jnp
sbb
inc
cmp
scas
addb
lock
add
mov
push
sub
das
jmp
je
fadds
xchg
add
pop
arpl
nop
nop
sub
sub
sub
add
mov
mulb
pusha
lds
sub
fcoml
std
stos
xchg
push
sarb
cmp
pop
cwtl
subl
mov
adc
jne
call
popa
add
jp
xor
add
pop
mov
lcall
add
add
in
xor
nop
dec
and
inc
cmpsl
add
into
loopne
inc
les
dec
pop
fisubs
lods
push
ss
mov
inc
jo
out
sahf
repnz
jmp
and
fwait
xchg
push
jge
xor
lds
xor
xchg
push
or
xor
sbb
cwtl
popf
fs
pop
mov
or
addb
push
sbb
xchg
push
pop
rolb
cmpb
add
push
cltd
repz
rolb
push
jae
xchg
frstor
out
popf
and
add
jmp
pop
sahf
test
push
filds
fmull
nop
adc
mov
add
test
adc
mov
out
cmp
cwtl
cmp
sub
sub
xchg
subb
and
adc
jge
pop
sub
add
adc
add
test
mul
add
aam
out
pop
fidivrl
test
and
idivl
mov
xchg
push
js
cs
loop
add
mov
ror
jmp
add
xor
push
sbb
xchg
in
and
pop
subb
xor
inc
in
ret
arpl
clc
not
gs
cwtl
mov
add
mov
jb
add
add
popf
push
iret
mov
call
mov
les
mov
sbbl
and
add
add
inc
xchg
in
sub
sbb
enter
out
ja
loopne,pt
imul
sbb
pop
nop
out
mov
iret
mov
mov
cld
sub
add
test
mov
push
test
lods
add
mov
add
or
add
lds
testl
jne
icebp
fstpt
cld
adc
add
push
cmpb
xor
adc
lcall
add
push
inc
mov
testb
out
dec
or
rclb
icebp
lock
mov
js
jle
sbb
sbb
jg
cmp
stc
or
add
loope
je
out
sarb
add
nop
fcom
sbb
mov
sarb
pop
sbb
push
jmp
sahf
mov
jns
dec
mov
dec
push
add
filds
xor
leave
int3
jae
jl
push
dec
mov
mov
mov
mov
mov
push
or
movsl
push
fdivs
push
fiadds
mov
popa
rol
cmp
adcb
lret
add
inc
dec
ret
lea
enter
repz
mov
sbbl
filds
add
iret
xchg
subb
add
in
xorb
cmp
jns
pop
pop
jno
mov
cmp
lods
jb
add
andl
xchg
in
add
dec
inc
mov
mov
jbe
add
addr16
xchg
out
dec
adcb
adc
repnz
jne
jbe
out
mov
xchg
jo
scas
cld
cmp
das
or
push
add
jne
inc
or
bound
and
xchg
dec
xor
mov
or
inc
jecxz
dec
xchg
mov
popa
push
add
push
hlt
adc
lret
jne
add
xchg
mov
mov
mov
daa
daa
shll
mov
pop
inc
dec
add
xorb
add
inc
sbb
ds
mov
cmc
sbb
loopne
popa
adc
add
les
sbb
dec
daa
cmp
es
adc
xor
add
in
popw
sarb
bound
xor
adc
or
lods
cli
sbb
sub
add
stos
mov
movsl
add
cld
push
pop
in
push
popa
mov
or
sub
push
add
adc
xchg
pop
add
scas
shll
enter
sbb
fwait
push
mulb
fs
mov
mov
or
pusha
rolb
mov
add
aaa
fsubrs
pusha
lret
pop
sub
xchg
pop
jbe,pt
adc
das
and
ljmp
dec
mov
xchg
lods
aad
in
mov
stos
subb
xchg
push
int3
filds
xchg
adc
sbb
or
inc
addr16
pop
popa
add
push
cmc
or
mov
mov
lods
mov
add
mov
lcall
out
push
sahf
jge
add
mov
rclb
or
pop
fs
jnp
adc
rolb
sbb
xchg
andl
cld
push
fisttps
and
inc
pop
add
sti
roll
push
xchg
mov
cmp
bound
jbe
pusha
hlt
out
cmp
cs
pop
lds
mov
sarb
ret
into
cmp
cmp
sahf
ljmp
lods
push
lock
subb
dec
jle
mov
lret
icebp
mov
scas
push
and
insb
mov
lea
js
push
sbb
loop
rcrb
loopne
push
add
enter
std
dec
sbb
out
mov
nop
xchg
or
sbb
js
loopne
repnz
xor
addr16
je
sbb
or
ret
cld
jecxz
popa
pusha
inc
in
add
pop
out
in
xchg
call
pop
mov
out
psrad
jg
ret
sbb
or
dec
les
mov
and
xor
cmp
shlb
and
adc
cs
div
add
test
mov
mov
sub
pusha
inc
sbb
cli
inc
ret
adc
je
jo
jl
ffree
lret
jo
pop
add
popf
pop
repnz
imul
adc
dec
push
je
cmp
pop
mov
jb
lds
push
xchg
imul
rorb
call
hlt
aad
inc
call
pushf
icebp
mov
jo,pn
add
mov
mov
sbb
or
aam
int3
in
sbb
pop
pop
and
addb
lock
mov
add
push
push
add
repz
mov
xor
popa
mov
sarl
and
rol
xor
jmp
cmp
pop
jae
ljmp
inc
add
push
out
sbb
imul
sub
add
arpl
sahf
inc
and
les
sub
add
clc
xor
add
mov
into
psubw
rcrl
or
push
jle
sbb
jecxz
add
mov
aam
pop
add
adc
push
ss
ljmp
add
pushf
pop
pmaxub
xchg
add
inc
add
cmp
sub
mov
cltd
xlat
dec
int
push
add
xchg
mov
das
add
rcr
addr16
xor
jb
adc
push
adc
xor
sbb
mov
fmull
push
add
jmp
and
cmpsl
mov
fldl
add
or
arpl
fcomi
jecxz
into
loopne
fisubl
sbb
lahf
in
popf
dec
shlb
mov
add
jle
faddp
inc
filds
popf
jg
lahf
pop
inc
sarl
adc
mov
cmp
add
ret
stos
icebp
out
push
pushf
mov
ja
inc
xchg
outsb
aam
in
ljmp
addb
mov
sbb
popf
out
adc
into
das
aad
inc
rorb
cmp
mov
sbb
bnd
adc
adcl
enter
ret
into
sub
add
pop
int3
test
adc
sbb
xchg
in
mov
fistl
cmp
inc
fwait
sarb
daa
sbb
pusha
pushf
ss
jmp
iret
sub
mov
adc
push
xchg
mov
mov
push
mov
push
jbe
out
fstps
out
call
cmpsb
cmp
sub
roll
sarb
loopne
xchg
daa
inc
clc
les
and
jbe
adc
loopne
testb
sub
lock
xchg
lock
js
jge
cmpsl
aaa
xchg
add
fdiv
cmp
add
insl
push
jg
xsavec
out
add
stos
and
inc
sbb
add
add
pop
add
jle
nop
mov
and
lods
xor
addb
insl
cmp
rorl
out
cmpb
ret
jle
cwtl
xchg
and
aaa
ffree
imul
aam
add
test
xchg
pop
jno
call
fs
mov
les
mov
js
fsubrs
out
int
int3
imul
cmpb
jne
add
mov
add
leave
ret
push
jmp
aad
xor
ror
rorb
push
call
add
sahf
push
in
loop
clc
in
ret
inc
xchg
adcb
cwtl
icebp
add
aaa
cli
lock
stos
lock
test
mov
dec
sbb
xchg
pop
fs
mov
ljmp
mov
pusha
mov
sub
mov
jo
les
movsb
ficoms
add
out
test
mulb
hlt
test
shl
loopne
incb
stos
adcb
mov
lret
dec
cmp
pop
fwait
xor
dec
cmpsl
nop
jle
mov
add
mov
cmpsb
add
clc
rolb
cmc
jmp
add
adcl
push
adc
imul
push
je
mov
cmp
sahf
out
roll
inc
movb
movsl
arpl
xchg
and
sbb
loopne
push
xchg
add
insb
pop
fwait
stos
xchg
cmc
in
add
js
andl
add
insl
mov
les
push
add
add
daa
scas
jg
push
xchg
movsb
dec
pop
push
fnstenv
adc
movsl
shrb
inc
inc
cmp
sbb
cwtl
mov
mov
xchg
aam
jge
pop
xchg
add
pop
ds
sub
out
test
idivl
inc
push
add
shll
add
pop
push
mov
jns
add
pop
stos
dec
mov
push
add
sub
mov
dec
outsb
dec
fs
jo
add
les
add
icebp
push
push
cli
pop
add
or
push
adc
aad
sub
mov
mov
inc
insl
repnz
add
pop
mov
cmp
pop
xrelease
fimuls
sbb
pop
mov
xchg
or
or
out
repz
jo,pn
inc
sbb
mov
add
cmpsl
dec
cmp
push
fdivrp
xor
inc
nop
sbbb
jl
and
xor
shlb
jl
adc
fisubl
sbb
jnp
mov
rorb
orb
stos
and
fdivrl
into
add
xchg
cwtl
mov
pop
movsb
inc
sarb
cmpsl
xor
add
cmp
mov
and
add
movsl
add
inc
int3
in
add
cmpsb
popa
or
insb
roll
mov
and
jo
in
hlt
pop
out
fistps
add
mov
jb
push
in
cmpsb
cmp
xchg
xor
xor
les
cwtl
jg
shrb
mov
jmp
mov
mov
pop
adc
repnz
aaa
fadds
daa
mov
xor
pop
lret
inc
repnz
add
jb
nop
jg
mov
pop
pop
xchg
inc
cmpsl
aas
add
jmp
add
adc
jo
adc
or
add
dec
xchg
fcmove
inc
xchg
sub
popf
aam
or
out
sbbl
jmp
pop
sbb
clc
out
cli
insb
add
mov
mov
pop
sub
xor
mov
xchg
stos
push
and
sub
cmp
ja
pop
cmc
add
pusha
mov
repnz
pop
js
popa
cs
ret
adc
iret
mov
mov
pop
testb
in
add
gs
add
and
or
mov
orb
cmp
dec
sbb
icebp
push
push
add
add
js
and
cmpsl
add
dec
push
pop
sbb
je
gs
add
lock
sbb
xchg
fwait
or
mov
sbb
loope
push
add
cmp
dec
iret
pushl
sub
dec
sub
psubsb
sbb
mov
outsb
loop
cmp
loopne
sub
addr16
xor
fdivs
xor
push
mov
in
mov
inc
ss
xor
sbb
sub
cs
adc
outsl
dec
ljmp
inc
jbe
cwtl
sbb
fldt
pop
jmp
mov
inc
cmp
add
dec
or
jg
xor
xor
pop
in
mov
cmpsl
and
test
or
cmp
add
fldenv
xor
add
aad
lock
adc
sbbb
mov
pop
add
xor
mov
repz
pop
mov
push
mov
pop
call
loope
inc
ja
push
ret
inc
inc
jnp
aam
aas
pop
cmc
add
ds
cmpl
dec
cmp
mull
pop
repnz
and
dec
pop
mov
iret
xchg
shrb
test
xor
loop
popf
pop
imul
cld
lret
out
pushf
add
mov
sbb
jecxz
faddl
cmp
stos
adc
inc
dec
pushf
in
sahf
jge
add
cmc
dec
add
popf
pop
fsubrs
cmp
push
das
daa
cmp
mov
xchg
lods
push
lock
inc
add
fwait
xchg
add
jge
dec
mov
ret
sub
aam
popa
ja
jmp
lock
jns
cmpl
aaa
aad
or
jp
or
test
pop
or
and
mov
out
cmc
mov
add
and
mov
sbb
pop
mov
or
xchg
and
cmp
jmp
test
ds
sbb
fadd
fbstp
push
sahf
or
repnz
nop
ds
inc
add
mov
ljmp
movsb
pop
stos
and
gs
push
jg
jl
add
outsb
mov
add
pop
cmpsl
lahf
call
push
jns
test
add
push
pushf
clc
aas
add
mov
sbb
add
inc
leave
imul
mov
pop
rol
pushf
sub
outsl
xchg
cmp
daa
inc
sbb
mov
pop
lahf
add
sar
xchg
insb
and
cld
or
andb
pop
add
cltd
sti
mov
add
cmp
test
push
stc
scas
mov
mov
pop
mov
ret
nop
add
int
inc
aam
inc
sub
cmp
rcrl
add
lods
in
popf
sbb
add
pop
lods
add
rep
add
popa
mov
rcrl
add
adc
outsl
cld
adc
sbb
add
ret
xchg
jns
mov
push
and
inc
clc
fcomps
pop
cltd
into
and
rorb
or
pop
mov
roll
cmc
add
lahf
or
add
and
pop
out
dec
pop
inc
add
mov
push
aam
movsl
ret
je
ljmp
xchg
cmp
mov
repnz
add
xlat
imul
in
and
add
sub
cmpl
mov
add
imul
mov
repnz
mov
add
xchg
add
or
ljmp
jae
and
xor
push
into
sbb
pop
adc
loopne
clc
add
cmp
and
push
push
add
or
mov
ss
loopne
adc
outsl
adc
arpl
sbb
dec
addl
add
insb
sbb
or
into
cmp
cmp
or
push
ret
mov
dec
lock
pop
dec
test
dec
mov
test
jp
sub
pusha
xor
lods
mov
mov
cmp
add
adc
xor
push
mov
pop
mov
out
jmp
xchg
inc
jle
add
cmp
push
add
adc
adc
and
dec
xchg
icebp
pop
sbb
inc
mov
mov
jne
add
cli
mov
mov
pop
sbb
dec
les
and
add
ja
or
push
dec
mov
and
mov
add
xchg
test
btr
sub
inc
mov
sbb
inc
into
arpl
push
add
xor
lahf
jle
sarb
sbb
mov
mov
sub
jg
mov
xchg
ds
adc
push
fidivrs
add
dec
add
add
test
inc
mov
data16
lcall
cmp
enter
in
repnz
jbe
xchg
xchg
sbb
adc
mov
sub
add
negb
ret
mul
mov
mov
push
adc
enter
dec
js
add
std
dec
pushl
jne
pop
mov
dec
outsb
cmp
add
aaa
jmp
mov
mov
lods
sub
sbb
cltd
repz
shrl
push
xchg
and
xchg
adc
movb
jp
stos
mov
cmp
push
xor
xor
cli
sbb
lods
jmp
or
mov
cmp
sbb
cmc
push
add
jp
gs
cld
sbb
and
ffreep
rclb
hlt
test
cmp
push
add
add
call
adc
test
cli
add
or
popf
jmp
jge
mov
rolb
repnz
popa
dec
xchg
push
cmpsb
ljmp
loope
repz
repnz
pop
jl
sahf
bound
pop
jb
stc
hlt
lds
xlat
mov
add
or
fildll
pop
push
imul
scas
adc
add
sbb
loope
push
movsb
jl
out
cmp
push
fcmovb
xor
cmc
cmp
add
adc
cwtl
popa
add
add
push
sbb
lahf
call
dec
push
inc
sbb
xchg
or
sbb
xchg
jmp
lret
insb
add
cs
aas
push
jno
fmulp
out
or
xchg
rcl
sub
jg
es
sahf
sbb
adc
orl
lahf
mov
jns
fisubrl
inc
idiv
stc
add
out
dec
xor
inc
xchg
mov
adc
mov
and
and
rcll
add
aas
sbb
mul
mov
xor
sbb
ja
ds
daa
add
and
dec
imul
shr
mov
sbb
movsb
ja
adc
rcrb
pop
mov
xor
inc
movq
mov
xor
pop
cli
cmpsl
subl
add
or
je
stos
inc
addl
loopne
clc
or
dec
jmp
jg
loopne
popf
pusha
cmp
mov
outsb
adc
add
testb
jo
mov
inc
das
dec
nop
adc
test
movsb
jne
testb
add
lods
mov
je
fildl
xor
xor
dec
add
addr16
addl
xchg
or
loop
mov
inc
mov
mov
rolb
xchg
mov
jle
add
push
clc
ja
xchg
int3
adc
sbb
pop
jge
test
sub
add
sub
fdivrs
jns
test
test
sub
pop
inc
cs
loopne
adc
ret
dec
rcll
fdivrs
inc
or
push
scas
pushf
push
jno
subb
dec
add
aas
dec
adc
mov
cli
in
push
in
shlb
and
ljmp
jle
inc
jp
orl
or
add
mov
test
test
daa
adcb
xor
adc
lret
inc
sub
and
xchg
roll
mov
xchg
push
stc
pop
je
femms
call
fildll
lock
pop
push
rorl
push
xor
popf
cmp
mov
iret
inc
popl
inc
push
xchg
inc
inc
push
adcl
add
dec
and
nop
cmc
pop
cmpb
dec
bound
out
ret
xchg
nop
in
jl
add
mov
insb
mov
stc
mov
add
sub
repnz
inc
push
or
cmp
stc
add
frstor
pop
inc
xor
and
cld
push
ss
xchg
ret
xlat
mov
decb
pop
fdivl
aaa
sbb
xor
test
inc
add
in
inc
mov
or
mov
clc
les
adc
inc
xor
maskmovq
testl
jo
push
pop
xor
and
jp
fcompl
clc
push
add
jne
dec
cmp
push
jle
fistl
sahf
lods
add
jbe
jge
add
movsb
mov
ljmp
xor
jle
push
xor
sbb
add
out
jbe
stos
ljmp
movsb
add
icebp
clc
into
lods
xor
sub
imul
xor
pop
ret
mov
mov
adc
and
inc
pop
push
test
pop
sub
ljmp
and
mov
divb
add
out
dec
es
into
ds
add
jmp
aas
out
pop
ret
add
fistpl
add
adc
add
jae
push
sarb
add
mov
int
add
fs
loop
shll
nop
getsec
sub
mov
adc
inc
mov
push
add
insb
xchg
mov
cltd
fistpll
fcmovbe
add
in
xchg
push
repz
sub
imul
cmp
add
inc
mov
xchg
fiadds
movsb
lea
jns
jo
sbb
cld
sti
push
push
mov
xor
mov
cmp
push
xor
or
out
mov
loopne
int
faddl
arpl
insb
movsl
cli
sub
fldl
int3
xor
sbb
sub
not
cmp
push
xor
pop
clc
fstpt
repz
movb
lahf
mov
mov
fcoms
ss
add
and
push
fstps
cwtl
or
mov
xchg
into
insl
add
sub
loopne,pt
push
dec
lret
push
xor
testl
adcl
jb
lcall
andb
fimull
lock
addb
inc
cwtl
das
push
inc
sahf
rclb
gs
push
enter
add
or
stos
pop
inc
pavgb
pusha
enter
jo
push
ds
xor
and
psubd
outsb
add
mov
iret
lods
clc
sahf
mov
ret
jmp
add
in
daa
adc
aam
mov
mov
dec
add
pop
mov
dec
flds
icebp
mov
nop
sbb
jnp
cmc
pop
mov
sbb
or
pushf
lcall
pop
fadds
mov
addl
rcrl
subl
and
adc
ret
jge
call
mov
mov
aam
pusha
xchg
sbbb
inc
arpl
rep
mov
mov
dec
xor
test
mov
loop
jns
je
mov
pop
mov
add
dec
movsb
mov
adc
xor
pop
adc
fimull
xchg
pop
push
es
test
fsubrs
rclb
inc
sub
loopne
cmpsb
aaa
popf
or
lret
sbb
andb
pop
mov
cmp
adc
mov
jne
lret
dec
fldenv
lds
loop
sub
sub
cs
dec
and
or
lock
add
add
loopne
sahf
test
in
loopne
lcall
pusha
add
fnstsw
mov
add
dec
push
movsbl
inc
add
inc
jne
dec
outsb
mov
cmp
sbb
std
test
test
jl
leave
dec
test
out
rolb
call
dec
pusha
sbb
push
add
push
dec
test
push
xor
or
std
arpl
movsb
push
jp
popf
adc
cmp
faddl
lods
sub
pop
stos
daa
add
out
shrb
in
add
pusha
mov
mov
mov
icebp
shl
inc
sbb
ret
jmp
mov
adc
pop
mov
inc
jge
mov
daa
inc
test
push
jl
subl
adcb
sbb
movsb
mov
add
inc
add
call
cmc
roll
sbb
sbb
sub
sbb
pop
add
scas
push
js
cmp
pop
popa
js
xchg
inc
cmpb
out
pop
mov
pop
mov
testl
add
mov
inc
pop
loopne
add
sub
sahf
popa
ja
add
push
sldt
jp
lock
fstps
stos
add
ret
andw
jmp
lods
mov
aad
jp
pop
lret
add
sahf
nop
lods
or
pushf
cmp
adc
or
add
mov
in
scas
or
imul
jo
movsb
gs
jl
add
sbb
add
cwtl
add
xlat
dec
or
adcb
jne
insb
sbb
and
repz
nop
out
push
and
add
lods
push
xchg
mov
jns
scas
lret
xlat
rorl
xor
dec
jae
in
add
cmp
and
pop
aad
hlt
test
je
add
mov
sbb
fwait
jae
sub
push
sub
xchg
cmp
and
and
clc
roll
pop
add
shll
push
jmp
xor
stos
arpl
out
cmp
push
sub
stc
pop
insl
adcb
or
add
mov
sub
mov
mov
std
jmp
and
sub
add
sbb
jno
shlb
shll
adc
lods
xor
cmp
pop
imul
xor
test
xchg
ja
shlb
push
add
mov
jp
pusha
insb
scas
pop
add
mov
rcr
inc
sbbb
add
mov
in
shlb
test
sub
add
add
roll
add
mov
pop
add
out
popf
dec
cmp
xchg
fimuls
add
sbb
in
int3
xchg
cmc
add
in
nop
loope
andl
data16
inc
dec
lods
sub
xchg
pop
pusha
adc
test
sbb
arpl
sub
js
mov
adc
scas
adc
push
mov
jg
add
in
or
mov
xor
inc
lcall
test
or
mov
pop
mov
push
pop
test
mov
jge
jg
icebp
xorl
mov
pushf
push
stos
lds
lods
sbb
out
sub
pop
push
das
adc
push
clc
xor
aas
xlat
sbb
xchg
lods
fneni(8087
dec
sub
lcall
push
rolb
and
repnz
jo
jo
jbe
add
jmp
int
enter
inc
cmp
jmp
std
mov
jno
dec
lock
add
xor
fyl2xp1
je
dec
sbb
cmp
mov
test
or
adc
pop
pop
add
lahf
pusha
mov
test
imul
jo
pop
push
and
pusha
jp
cmp
xchg
lcall
daa
aaa
mov
test
mov
add
in
ret
push
xchg
or
add
adc
out
cmp
scas
mov
jmp
cmp
test
outsb
loop
xor
aaa
cmp
leave
mov
psubd
mov
add
cmc
aam
mov
mov
sbb
and
add
lahf
push
cmp
subb
addb
cmp
jbe
les
dec
aaa
inc
mov
add
icebp
arpl
or
mov
sbb
inc
leave
and
mov
xor
adc
mov
or
sbb
hlt
adc
and
mov
aam
lret
rorl
xor
mov
xchg
adcb
gs
jmp
inc
mov
loopne
add
or
pop
fsubs
mulb
arpl
sti
incb
ficomps
insb
or
pop
jne
sbb
fadds
dec
and
add
repnz
push
inc
ljmp
aas
clc
mov
pop
cmp
test
je
ffree
sub
aas
sbb
call
jmp
js
add
sbb
imul
in
fidivs
loopne
add
push
sbb
cld
lds
in
sub
pushf
pop
dec
lret
sahf
rorb
shlb
fs
add
loop
aas
mov
orb
mov
and
movl
pop
cmp
push
out
add
jmp
fsubrl
xchg
cmpsl
addb
into
fucomip
arpl
es
je
add
mov
dec
mov
sub
adcb
add
imul
lret
pop
cmp
in
pop
or
or
fcoms
js
pop
or
lds
loope
pop
add
mov
cld
insl
jno
xor
add
sbb
outsl
add
sahf
sub
adc
loopne
xrelease
rclb
or
mov
xchg
adc
jl
add
inc
jb
imul
lock
sahf
sbb
repnz
out
xor
or
popf
and
inc
movsb
mov
in
movsl
sbb
rcr
dec
push
mov
add
pop
xchg
cli
movsl
sbb
idivl
adcl
xor
push
or
dec
addr16
mov
bound
cmpsl
add
lret
cld
jecxz
roll
jbe
sub
sahf
into
ret
add
push
mov
inc
out
mov
out
jo
mov
push
sbb
insb
sub
or
ret
xchg
dec
adc
lret
jp
in
mov
aad
pop
je
roll
pop
cmpb
add
add
mov
mov
es
adc
mov
loopne
call
aam
out
xor
mov
dec
jns
aas
imul
jnp
shrb
enter
add
inc
sub
shrb
stc
movsb
adc
subl
insl
add
adc
sbb
adc
add
jecxz
sbb
jb
or
int
adc
jp,pt
push
inc
popa
xchg
push
cld
mov
test
out
dec
daa
rcrl
and
in
pusha
jmp
pop
pop
sbb
xchg
or
dec
push
in
mov
gs
daa
cmpsb
xor
add
or
pop
shlb
add
push
mov
xchg
xchg
hlt
mov
out
or
jno
jns
add
and
push
or
xchg
xor
mov
add
rcrl
mov
sub
mov
add
sbb
pop
outsl
or
inc
xchg
add
mov
xchg
outsb
into
lcall
jge
add
add
add
loop
and
mov
fcoml
add
xor
cmp
rolb
cmp
mov
inc
lods
rclb
test
insl
icebp
cmp
loop
jbe
decb
inc
pop
add
mov
testl
pop
iret
dec
and
xchg
scas
fisubs
mov
jbe
fists
add
and
pop
mov
dec
inc
rolb
or
sub
inc
mov
aaa
gs
pop
testl
jecxz
fnstenv
cmpsb
push
sbb
das
cmp
in
outsl
add
test
pop
push
push
dec
js
cld
jg
mov
cmp
icebp
mov
pusha
gs
and
sbb
or
sbb
push
xchg
jecxz
and
add
jle
jl
lcall
in
and
call
cmp
cmp
add
int3
cmp
js
jb
dec
scas
adc
into
fsub
or
mov
jle
jns
arpl
dec
pop
scas
adc
or
mov
push
sbb
jg
push
push
and
repnz
hlt
xor
and
jb
add
add
jb
adc
inc
inc
inc
dec
test
pushf
cwtl
add
and
push
jb
and
sub
xor
xchg
sbb
popf
xor
xchg
mov
subb
mov
subl
inc
jg
add
xchg
mov
cmpsl
add
jnp
inc
ror
mov
scas
sbb
repz
sbb
sti
in
or
dec
out
lret
add
aad
add
add
mov
push
mov
fsubr
subb
dec
scas
fimull
adc
xor
in
les
add
xchg
in
or
push
cmp
xor
js
add
lea
in
adc
fadds
mov
mov
sti
lds
add
inc
cmp
and
xor
push
daa
jnp
xchg
pop
in
pop
movsl
fs
pop
push
push
add
add
imul
push
lret
in
shll
fwait
push
inc
sahf
add
xor
std
mov
fnstcw
cli
jns
fdivl
add
cli
pop
push
push
add
repnz
add
sbb
inc
mov
inc
sbb
loope
frstor
sbb
add
cmc
notl
cld
mov
sbbl
ret
ljmp
mov
adc
sti
lret
fbstp
add
sbb
adc
in
jns
repz
pusha
mov
push
add
hlt
mov
jae
lock
or
add
or
test
out
add
mov
inc
lods
pop
lcall
jl
sub
orl
mov
iret
dec
add
fnstcw
aad
adc
pop
out
cs
and
push
ss
xor
ret
xchg
fbld
mov
xchg
add
lods
mov
nop
sbb
mov
mov
icebp
in
orl
and
and
jle
jnp
enter
mov
inc
int3
jbe
add
pop
cmpb
les
push
rcrb
sub
test
mov
inc
add
xor
sbb
pop
out
call
xor
out
inc
gs
or
aaa
sbb
aas
cmc
out
add
sub
pop
mov
sbb
aaa
cmpsb
jle
and
xchg
call
xchg
adc
filds
add
adc
mov
jo
sub
pop
addb
imul
push
mov
enter
pop
sbb
lock
or
push
xchg
xor
jae
fwait
inc
sub
dec
popf
pop
mov
and
lret
lock
or
out
fadds
dec
add
jl
rol
xor
clc
cmp
sbb
mov
fs
arpl
nop
cwtl
in
daa
sbb
xchg
sbb
push
mov
dec
pop
pusha
mov
add
mov
jle
inc
enter
arpl
pop
bound
inc
lock
jecxz
repz
mov
rorb
f2xm1
int
add
leave
bsr
jge
dec
popa
call
pushf
insb
js
add
int3
les
and
in
push
mov
fnop
mov
bnd
adc
jb
and
xor
adcb
adc
nop
push
adc
push
incb
inc
mov
xlat
or
cmp
imul
jle
push
sbb
dec
adc
rorb
xchg
js
ljmp
push
jg
lahf
mov
inc
mov
loope
out
inc
and
pop
cwtl
xchg
mov
fst
xchg
dec
add
pop
lcall
jae
add
sub
cwtl
cmp
inc
sub
stos
add
xor
xchg
xor
pop
insb
ja
jo
cmp
setp
pushf
sbb
out
dec
fbstp
and
lods
pop
mov
add
sarl
cli
inc
add
jnp
jb
inc
xor
orb
add
push
fcoms
add
or
dec
or
add
fistpll
sbb
dec
add
inc
mov
mov
jb
xchg
insl
add
dec
bnd
lods
clc
xor
test
or
and
andl
mov
push
insl
ret
add
mov
xchg
dec
dec
and
testb
and
aad
or
xor
rcrl
xchg
pop
sbb
mov
adc
popa
lods
jno
scas
outsb
mov
add
dec
in
fs
mov
sahf
aam
insb
jo
rcrl
or
add
push
or
xchg
inc
fiadds
and
repnz
dec
aaa
mov
xchg
mov
xor
shll
jnp
xor
arpl
mov
pop
mov
jle
cmp
pop
xchg
cmp
xchg
sti
sbbl
scas
nop
popl
scas
mov
pop
cmp
xchg
mov
rol
in
andb
xchg
out
add
sbb
xchg
ds
hlt
sbb
rorl
fldenv
add
jl
xor
gs
pop
push
test
ljmp
or
sbb
jecxz
clc
or
es
or
lods
in
add
pop
dec
cs
mov
xor
xchg
sbb
mov
pushf
dec
xchg
pop
adc
leave
mov
rolb
cld
cmp
mov
dec
add
aad
pop
xchg
mov
in
out
jecxz
jo
cwtl
ljmp
sbbb
js
adc
lods
add
push
andb
cmc
pop
mov
cmp
cli
nop
pop
daa
cmp
jbe
jns
mov
in
and
xlat
fldt
inc
into
add
inc
cmovle
cwtl
int3
es
roll
jbe
shrb
punpckhdq
daa
mov
jl
mov
sub
sahf
push
push
addr16
jp
add
fbstp
nop
push
aas
xchg
xor
into
stc
inc
ljmp
add
std
add
in
push
insb
cmp
mulb
sahf
sbb
clc
stc
xchg
mov
jge
add
push
scas
sbb
push
ljmp
add
in
mov
fadds
sar
lods
mov
push
jno
or
ret
jo
in
sahf
std
aad
jo
sbb
push
inc
movsb
add
mov
ret
add
addr16
mov
push
jg
add
and
mov
add
xchg
arpl
test
add
lret
out
and
cmp
lock
repnz
fbstp
adc
out
pop
fdivl
int
xchg
out
pop
pop
add
xor
pop
fs
stos
dec
cmp
add
sbb
dec
rolb
shl
clc
sahf
add
or
js
jo
pop
add
hlt
loop
push
xchg
and
jne
les
mov
test
repz
loopne
mov
and
add
or
aam
xor
mov
add
aas
nop
hlt
cli
push
out
mov
xor
pusha
test
add
sbb
mov
mov
repz
int
bound
and
fsubrl
divl
scas
jp
add
mov
jo
pop
inc
mov
mov
ficoms
add
add
imul
addb
and
jmp
xchg
adc
mov
pop
adc
dec
add
sub
or
jp
and
loopne
jle
das
and
mov
iret
add
push
outsb
cmpsl
mov
nop
repnz
mov
push
pusha
ret
daa
lock
int3
fstps
jo
lods
in
loope
jl
xor
add
stc
add
or
in
movsb
repz
mov
add
mov
push
add
sub
test
push
ds
fcompl
int
and
add
adc
fcmovnu
cmp
pop
enter
loopne
cwtl
outsb
clc
push
mov
mov
test
pop
add
add
cmp
push
sbbl
sahf
bound
push
mov
sub
pop
pusha
dec
orb
add
hlt
out
sub
orb
pop
iret
jle
jecxz
cmp
xchg
enter
push
cld
insl
loope
fiadds
add
push
jmp
popf
xchg
clc
push
pop
pop
inc
rolb
in
test
adc
orl
jge
mov
add
fists
jne
dec
push
pop
mov
out
jb
mov
or
fwait
pop
scas
mov
sbb
xchg
sbb
je
and
inc
js
add
add
cmp
mov
aas
mov
test
adcb
ficoml
pop
fwait
xor
bnd
mov
sti
jnp
pop
scas
scas
push
js
pop
enter
mov
enter
out
cmpsl
sbbb
fs
or
iret
and
mov
dec
pop
jbe
add
and
stos
nop
das
sar
xor
xor
add
push
add
aad
wrmsr
xchg
cmp
ret
inc
rorb
cwtl
mov
leave
add
repnz
dec
sti
mov
les
or
xor
fsubs
test
xchg
add
imul
mov
shll
stos
sqrtps
adc
sub
or
das
push
xchg
adcb
inc
fimull
xor
loop
leave
jecxz
das
add
mov
push
dec
cmpsl
push
and
adc
bound
jge
and
push
jg
add
dec
mov
add
inc
imul
ljmp
roll
push
repnz
lret
cmpsb
mov
mov
mov
popf
pop
mov
mov
les
out
pushf
into
push
jb
or
inc
aas
ja
push
in
jecxz
test
push
popf
mov
inc
mov
inc
or
loopne
add
ljmp
add
ret
add
inc
sbb
jne
out
push
rolb
or
add
jl
push
cmp
mov
out
dec
jno
loope
and
call
repz
lea
cmc
push
aas
xchg
roll
mov
cwtl
inc
test
add
in
and
into
inc
lods
xchg
add
sarl
mov
in
or
scas
stc
sub
and
call
jecxz
outsl
iret
and
sbb
imul
sub
test
adc
cmp
xor
push
mov
inc
push
push
jge
jg
add
jns
roll
cmp
and
rol
lahf
inc
and
or
mov
push
jns
xchg
add
lcall
mov
sub
and
xchg
mov
sub
daa
cmp
les
add
loopne
sub
adc
dec
gs
xor
ljmp
jp
inc
xor
inc
sub
aam
and
mov
inc
and
add
mov
mov
adc
dec
lcall
insl
add
jb
xchg
mov
js
orb
repz
in
mov
test
or
imul
mov
sbb
sub
aaa
test
inc
ds
push
pop
mov
cli
sub
add
sti
cmp
fiadds
add
cmp
fcomp
or
mov
scas
jmp
push
je
sub
push
cmpl
add
add
xchg
rorl
inc
out
subl
jno
out
lret
inc
ret
dec
outsl
xchg
or
lods
jo
in
test
fildl
cmpsb
insb
xor
mov
rorl
orb
sub
add
std
xchg
cmp
int
in
inc
and
adc
test
add
outsl
add
mov
js
sbb
popa
loopne
testl
gs
out
dec
add
es
adc
enter
add
jecxz
adc
jno
mov
nop
ljmp
or
push
adc
xor
inc
insb
pop
jnp
add
mov
pop
add
sub
pop
push
aam
jp
sbb
nop
push
lcall
imul
out
dec
test
loopne
xchg
mov
sbb
test
add
mov
mov
inc
lahf
mov
and
mov
dec
rcl
ss
adc
fsubrs
aam
add
pop
mov
mov
lahf
jo
inc
jl
and
jmp
out
xor
std
lods
add
and
pop
lret
sub
jo
aam
cmp
xor
cmp
mov
push
clc
inc
xlat
ss
insb
fstl
cltd
sub
mov
aas
das
js
adcl
ja
fs
rcrb
movsl
sbb
in
into
cmp
daa
mov
dec
movb
add
lsl
lock
jecxz
insb
xor
mov
jl
inc
scas
std
ja
adcl
mov
xchg
push
loop
push
xor
add
ljmp
dec
push
clc
inc
add
ficompl
cs
mov
sbb
nop
ret
mov
add
cmp
ret
xchg
jne
add
mov
jg
les
aad
pop
jl
add
dec
out
add
push
mov
sbb
ret
xorb
aam
fiadds
std
lret
push
int
or
jmp
rcl
jns
jns
add
pop
push
inc
insl
sbb
push
test
dec
cmp
jl
sub
out
syscall
arpl
insl
pop
mov
jle
js
pop
cmpb
cltd
xchg
add
in
mov
and
add
jge
andl
mov
ss
add
sub
xor
or
fiaddl
cmp
dec
dec
xor
arpl
lret
mov
lods
sbb
aas
dec
shrb
outsb
icebp
inc
js
or
add
jmp
loopne
hlt
aas
add
rorl
mov
insl
cmpsb
mov
push
or
mov
mov
data16
imul
inc
add
jae
out
pop
jg
dec
add
jl
cmpl
into
and
mov
mov
sub
add
fldenv
movsb
add
xchg
mov
and
add
aas
push
lcall
repnz
and
jb
aad
fucom
int3
xor
es
dec
cmp
pop
lret
add
push
inc
ret
add
jno
sub
nop
fs
jg
mov
jb
jl
add
mov
ret
jo
add
cmp
hlt
add
xor
pop
add
sbb
jb
icebp
inc
inc
jge
ficomps
push
jmp
cli
xchg
add
jno
shrl
or
mov
push
scas
or
add
sbb
sbb
mov
in
xchg
push
jno
push
sub
imulb
call
xchg
add
dec
xchg
int3
lock
mov
mov
test
add
and
fsub
imul
shrb
pushf
ret
push
and
jo
fwait
test
sub
mov
ljmp
mov
pop
lahf
mov
inc
aas
outsl
ljmp
mov
mov
or
cmp
add
enter
shld
pop
cmp
int3
mov
stos
push
add
pop
test
sarb
xor
xchg
data16
lock
dec
aaa
mov
jns
int3
sbb
pop
loope
sbbb
fisttpl
add
hlt
or
into
xchg
lret
adc
mov
add
mov
ret
push
outsb
add
push
jmp
xchg
add
sbb
mov
aad
clc
in
add
negb
add
add
in
stos
add
xchg
filds
mov
dec
faddl
adc
push
mov
cmp
xchg
rcll
test
clc
movsb
loope
lret
push
jns
add
mov
enter
cmp
sbb
fsubl
sub
push
aam
popf
xchg
add
cmp
push
shlb
jp
cmp
testl
loop
xchg
mov
dec
mov
scas
loopne
or
sarl
add
add
dec
clc
and
dec
lods
add
fwait
rorb
add
std
loopne
and
lods
or
push
xchg
sti
pop
mov
pop
jmp
sbb
ljmp
lock
ret
inc
dec
add
push
xor
data16
mov
repz
cwtl
test
clc
xor
xchg
jp
add
adc
cmp
push
fwait
xor
add
mov
pop
jne
mov
push
push
repz
dec
enter
pop
call
jae
xchg
sbbb
lods
mov
outsl
shrb
push
aad
shrb
out
mov
adc
add
pshufw
fcomps
fildl
or
iret
xacquire
push
out
and
xchg
adc
sub
inc
lock
lds
jmp
and
inc
pop
insl
insb
scas
add
sub
adc
push
sbb
push
idivl
rcll
push
jne
rcrb
cs
or
and
std
mov
movb
out
scas
mov
add
sbb
add
pusha
and
sbb
les
add
xchg
jno
mov
mov
add
or
insl
adc
hlt
xor
pushl
dec
arpl
push
pop
imul
loope
rclb
clc
push
add
add
adc
inc
ss
loop
sbb
push
je
insl
sub
mov
pop
mov
adc
add
les
pop
jle
aad
out
add
call
mov
add
lods
test
xor
add
daa
jle
pop
jecxz
push
loop
jo
fildll
loope
adc
arpl
add
jle
jbe
test
add
cmp
inc
cwtl
xchg
mov
jge
add
lock
add
inc
insb
mov
sbb
nop
aam
sub
mov
adc
outsl
sbb
add
out
cmpsl
xchg
hlt
fimull
add
mov
fildl
adc
pop
repz
std
xor
in
or
hlt
lret
fcoml
and
into
lahf
pop
sbb
xchg
adc
add
add
fldl
or
push
or
jnp
cmp
and
sbb
add
imul
mov
mov
push
jecxz
add
mov
test
in
cmp
pop
add
out
cld
insl
xchg
add
inc
icebp
enter
ret
add
loopne
add
cwtl
js
idivl
lea
or
in
mov
mov
loopne
jno
frstor
mov
pop
add
lret
out
lock
xchg
push
adc
mov
cmp
pop
fwait
mov
stc
pusha
pop
lcall
add
jecxz
inc
jne
sbb
shlb
inc
fcoms
jae
or
test
jne
push
arpl
mov
in
pop
or
lock
cmc
mov
inc
jo
clc
add
sbb
std
in
add
enter
lods
add
add
popa
add
dec
jle
mov
popf
ja
mov
sub
dec
jno
outsb
flds
inc
nop
mov
inc
fcompl
in
mov
push
jle
mov
les
mov
adc
nop
mov
stos
or
cmpsl
and
push
xchg
loopne
mov
jno
lret
push
pop
sbb
mov
popl
sub
out
shll
popa
mov
lods
cmp
shll
repz
nop
pop
fildll
call
test
add
sbb
popf
adc
add
mov
cmp
mov
fnstsw
sub
test
and
jle
sbb
sub
mov
fldt
xchg
in
pushf
xchg
add
aas
adc
call
rcrb
mov
push
sarb
add
adc
xor
pushf
ds
cs
or
cwtl
add
jns
fwait
movsl
jb
mov
or
js
add
cld
and
inc
sub
ret
scas
loope
enter
clc
mov
mov
jl
lock
imul
mov
or
out
subb
ret
add
cli
gs
add
cmpsb
or
ror
insb
aas
add
jecxz
std
sub
add
fs
xor
mov
cmovo
das
pusha
dec
pushf
rorl
loop
dec
xor
aam
mov
mov
rorb
dec
jbe
int
dec
adcb
sbb
push
jecxz
sti
dec
sbb
and
aad
inc
call
cs
fistl
sbb
into
mov
ret
hlt
mov
aam
xor
lds
adc
scas
imul
adc
bound
and
push
inc
and
add
mov
mov
dec
out
scas
mov
add
aad
jp
xor
add
push
add
sbb
and
cmpb
mov
pop
mov
add
mov
aas
mov
jno
sub
and
ficoms
lods
pop
xchg
push
jle
int3
fiaddl
jns
cli
xchg
jp
adc
add
sbb
jnp
sbb
enter
fistps
mov
add
xchg
mov
loopne
enter
dec
das
add
pushf
ret
dec
mov
mov
jmp
sarb
push
out
mov
or
or
sti
dec
aas
jae
add
xchg
ffreep
cmp
cmp
mov
inc
lods
or
push
xchg
xchg
and
mov
aaa
js
rolb
loopne
push
outsl
push
add
pop
add
mov
loope
outsl
dec
movl
scas
loop
roll
xor
enter
xchg
xor
orb
inc
lods
add
add
xor
sar
xor
stos
inc
push
and
aam
jmp
add
outsl
out
movsl
ret
push
jge
or
mov
fisubs
mov
push
or
and
decl
mov
xor
or
shll
mov
mov
sbb
add
push
mov
scas
ja
add
pop
push
add
mov
gs
add
push
mov
imul
pop
orb
sub
xchg
add
sbb
leave
add
popf
sub
inc
xchg
mov
cmp
add
mov
popf
add
stos
dec
cs
add
add
adc
stos
negb
add
or
lcall
push
in
sub
test
mov
push
es
ja
or
or
pop
lcall
adc
call
mov
add
fldt
cmp
enter
lahf
add
jae
mov
add
test
pop
inc
mov
dec
or
iret
faddl
mov
add
sarl
add
int
imul
add
sahf
inc
mov
ss
jnp
cwtl
pop
add
es
das
add
je
test
int3
add
or
xchg
ret
and
out
cs
fildl
mov
das
inc
sub
sarb
jg
or
inc
xlat
mov
lock
push
add
mov
imul
jl
dec
outsl
insb
mov
stos
es
sub
xor
mov
or
jo
lret
ret
mov
movsb
jl
add
push
pop
add
xchg
mov
adc
lahf
rolb
mov
dec
cwtl
fiaddl
jecxz
jns
out
bound
add
js
sbb
insb
jae
add
das
fnstenv
sub
jp
jns
cmp
xor
add
and
pop
jle
lods
call
cwtl
aam
fwait
dec
xor
popf
mov
sahf
push
mov
int3
cmp
stc
xlat
or
xchg
adc
shlb
xchg
imul
sub
and
aad
add
mov
pushf
add
xor
mov
xchg
or
in
cmp
push
mov
ret
jmp
pop
sti
lahf
mov
out
hlt
negb
sbb
ljmp
xorb
stos
add
push
mov
or
ret
xchg
clc
nop
lahf
in
addb
in
add
jno
inc
lods
and
adc
cld
pop
daa
or
sub
call
aam
xor
fstpl
xor
sub
mov
les
jo
rclb
int3
jae
les
dec
movsb
aas
mov
add
cltd
aam
hlt
pop
mov
lea
stos
mov
add
sub
das
xchg
test
add
dec
mov
mov
aas
cmp
roll
nop
and
cmp
in
adc
ds
push
add
adcl
aas
lahf
mov
mov
aaa
fs
pop
scas
and
lcall
cmp
loope
rcl
xchg
adc
xlat
hlt
maxps
ja
popl
push
bound
pop
dec
scas
mov
mull
pop
out
sbb
test
cmpsb
inc
cld
lock
out
mov
jbe
sub
xchg
addr16
insl
or
dec
sub
rolb
or
cwtl
and
and
push
xchg
dec
adc
pop
inc
andb
or
cmp
jg
add
shl
and
add
push
test
cmp
inc
push
jp
dec
mov
mulb
jg
xor
pop
sbb
je
cwtl
pusha
je
adc
outsl
lods
and
and
dec
in
in
cmpl
jp
add
mov
push
push
cmc
add
notl
xlat
adc
dec
inc
jns
in
inc
push
ja
add
dec
mov
add
sti
add
xor
imul
dec
add
lret
sbb
mov
and
add
sbb
sub
testb
add
dec
cmp
sbb
imul
rorb
int3
xor
and
or
lcall
pusha
cmpsb
add
xor
push
subl
and
stos
xchg
jle
adc
lock
sbb
pop
idivb
sbb
hlt
mov
out
jg
sti
cmp
push
fwait
mov
mov
nop
pop
out
mov
xor
add
adcl
add
inc
rcrb
ss
loop
sti
and
dec
lahf
jne
aas
mov
mov
and
add
add
mov
and
js
insb
jecxz
sub
es
loope
push
hlt
sub
adc
xor
and
add
cwtl
lds
xchg
ret
mov
rcll
fnsetpm(287
bound
mov
mov
das
xor
loope
pusha
enter
ja
jns
mov
inc
rorb
cmpsb
repnz
push
stos
cli
push
pop
jecxz
sbb
add
or
cmc
xor
lret
dec
fwait
xchg
pop
leave
and
adc
test
es
inc
add
push
adc
test
enter
or
out
fs
cs
inc
pushf
test
mov
adcl
cltd
mov
adc
cli
sub
mov
les
sub
and
hlt
icebp
xchg
jae
movsb
clc
in
xchg
dec
jle
in
dec
jl
and
aad
sub
cmpsb
rcrl
add
add
xor
dec
ffree
cmp
data16
add
pop
int3
dec
pop
xchg
cmc
or
je
sti
seta
xabort
and
push
std
les
sbb
inc
dec
sahf
add
dec
push
inc
and
add
test
sti
inc
lds
outsl
hlt
inc
bound
cmpsb
fdivrs
imul
fcoml
enter
incb
and
xchg
cmpsb
add
add
add
cmp
jne
push
ja
cmc
add
or
lods
pop
arpl
mov
lods
push
out
mov
orb
cmp
inc
call
or
pop
loopne
lcall
test
add
and
jl
push
add
aaa
into
pusha
pop
sbb
mov
mov
int3
out
sahf
add
ret
xor
jne
adc
dec
add
lea
inc
add
addr16
incb
jl
bound
out
xor
and
out
pop
add
cmp
mov
add
push
sahf
lock
retw
arpl
add
test
push
das
mov
jmp
mov
stc
into
jne
mulb
scas
popa
sbbb
addb
pop
xor
mov
dec
mov
jne
dec
sub
push
adcb
add
mov
mov
jns
bound
ret
xchg
add
dec
movsb
sub
clc
shlb
cmp
dec
push
adc
add
sub
shlb
outsb
sbb
pushf
jo
jnp
pop
es
mov
xlat
roll
push
adc
inc
and
sbb
xchg
es
pop
ljmp
mov
add
xchg
jl
addr16
cmp
and
sbb
call
fists
ljmp
push
fldt
sub
xchg
adc
sbbl
loope,pn
dec
add
ret
pop
pop
out
daa
add
xchg
push
mov
xor
scas
outsb
inc
test
xchg
mov
and
ret
mov
hlt
add
fldcw
pop
outsl
push
jl
sbb
dec
dec
mov
jbe
jecxz
pop
add
cwtl
psubusw
xchg
jle
es
stos
add
in
imul
test
je
sbb
js
and
gs
ret
push
add
subl
add
sbb
push
adc
push
mov
cli
scas
out
cmp
fisubrl
mov
test
lahf
pushl
fstps
scas
in
and
add
xlat
popa
movsb
jle
shlb
in
mov
cs
rolb
out
orb
clc
dec
add
fchs
pop
imul
roll
iret
push
pusha
inc
and
xchg
add
movsb
xor
inc
xor
iret
push
add
add
cli
in
stc
dec
iret
ret
inc
lods
and
inc
jge
cmp
add
dec
jns
xchg
push
test
jp
cmp
pop
dec
mov
add
rol
enter
add
aad
es
mov
xor
roll
push
add
fisubs
add
sbb
lods
sub
enter
mov
js
std
pop
rcrb
mov
xchg
dec
fiadds
int
outsb
sahf
in
pop
cmpsl
pop
pop
pop
shr
mov
push
dec
inc
in
mov
and
fnsave
mov
sub
push
xchg
lea
pop
loopne
rclb
and
ret
xchg
mov
lods
daa
xlat
adc
les
push
add
inc
pop
fwait
and
and
fistl
call
loop
and
inc
sub
cmp
or
xchg
xor
sub
or
add
dec
sti
pop
mov
push
in
inc
jmp
xor
sahf
jmp
js
pop
movsl
lea
xchg
es
or
cltd
add
pop
lret
out
movsl
call
jnp
aaa
sbb
add
lcall
mov
cli
xor
and
rorb
sub
movsl
and
sbb
sahf
fidivrs
loope
add
shlb
add
cltd
jge
add
fsubl
xor
sub
push
cmc
sbb
adc
std
add
or
test
jp
sbbb
stc
ja
out
add
jnp,pn
mov
add
add
sbb
add
iret
and
xor
mov
pusha
push
mov
lock
adc
fucomp
adc
mov
sbb
dec
orl
add
cmp
fs
filds
sub
or
popf
sbb
sti
into
es
icebp
inc
stc
loope
outsb
add
add
dec
mov
lahf
cmpsl
sbb
or
lods
sbb
incl
inc
xchg
or
aas
push
lods
add
inc
mov
push
and
and
aam
add
outsb
fsts
pop
add
mov
adcb
cmp
loop
jl
add
and
fistpl
pop
loopne
xadd
push
and
stc
inc
add
mov
xchg
ss
add
jp
cmp
sarl
ja
enter
inc
xor
add
lret
mov
aaa
pop
aam
pop
js
dec
fcoms
inc
pop
pop
xchg
fiaddl
cmc
out
mov
stc
add
testb
or
xor
mov
dec
clc
add
sbb
das
add
push
mov
add
bound
inc
cltd
ret
jns,pt
push
xchg
dec
pushf
add
adc
lds
xor
js
and
rorb
leave
orb
and
jbe
insb
ret
fcmovnbe
loopne
add
add
xchg
icebp
stos
sub
or
ror
xor
adc
cmpb
jns
push
mov
push
pop
xchg
inc
iret
das
xor
insb
or
les
cltd
loopne
cmovnp
call
push
dec
rcrl
xor
movsl
les
xor
add
fldenv
add
cmp
cli
scas
push
rcr
ja
mov
das
add
xor
pusha
loop
add
fldl
clc
das
jge
mov
add
xor
sbb
add
push
movsb
jmp
aam
in
in
sub
jbe
add
shrl
pop
jge
dec
rorb
mov
mov
dec
lea
jbe
movsb
and
adc
in
daa
inc
cli
shll
int3
insb
in
lds
add
push
xlat
cmpsl
ss
sub
fs
sbb
test
lret
sarb
and
pop
xor
sbb
add
mov
adc
rorb
out
lds
mov
movsl
add
dec
popf
push
rcrb
daa
add
xchg
lret
dec
rolb
xor
add
mov
mov
add
lods
jo,pn
rolb
adc
addl
inc
sbb
push
add
loopne
mov
mov
and
call
nop
xor
add
sbb
adc
rcrb
pop
roll
add
lret
xor
sbb
scas
das
lock
frstor
icebp
in
aas
mov
sub
adc
xor
fbstp
jmp
shll
xchg
sti
mov
and
push
aam
mov
ds
jb
dec
outsb
in
add
dec
pop
cs
sbb
in
jae
mov
push
xor
mov
sub
jge
sub
jb
enter
stos
test
pop
fwait
setl
aas
in
inc
or
dec
stc
xchg
out
add
and
cmpb
jne
leave
mov
inc
stos
lods
add
hlt
jae
jo
or
sbb
out
in
fistl
aam
adc
mov
jo
lods
xchg
mov
sub
repnz
addb
push
nop
hlt
add
sbb
mov
dec
mov
sahf
xorb
stos
lds
ret
adc
pop
loopne
bound
and
jno
push
add
lock
pop
xchg
int3
pop
jae
rorb
adc
cmp
add
and
mov
in
xchg
cmpb
shlb
incb
add
xor
les
fdivl
ret
mov
sbb
cltd
lods
popf
xchg
add
movsl
mov
jmp
mov
leave
add
add
notb
push
cmp
je
in
stc
clc
sti
add
push
loop
pop
add
repnz
arpl
add
cmc
pop
idivl
jo
cmp
sub
jo
lods
and
sbb
popa
mov
xchg
jb
shlb
inc
mov
adc
sbb
insb
fisubs
jle
subb
int3
push
mov
push
inc
add
mov
fsubs
aas
lods
mov
xchg
stos
pushf
add
jo
mov
pop
repnz
xchg
adc
cli
shll
mov
out
nop
add
loope
idivl
dec
add
insb
jmp
jne
filds
mov
nop
scas
in
add
dec
xsavec
pop
jns
jle
sbb
cwtl
add
jecxz
mov
push
pop
ficoml
repz
adc
add
orl
xor
adc
mov
cmp
xor
movsb
xor
sbb
cltd
sbb
aaa
pusha
push
ficoml
inc
int
and
dec
movsb
orb
mov
cmpb
mov
add
cld
sbb
add
fsubrs
pop
cmpsb
mov
jl
add
loopne
or
insl
add
xor
adc
and
nop
add
push
sub
scas
pushf
inc
rclb
add
stos
xchg
add
ss
stos
adc
push
mov
icebp
pop
xor
mov
pop
in
loopne
inc
cmc
lret
aad
pop
stc
sbbb
jb
fs
jne
sub
mov
xchg
outsl
add
mov
and
ljmp
daa
inc
leave
cmp
popa
or
in
das
add
scas
sub
add
push
testb
and
insl
jl
pushf
xchg
push
addr16
inc
add
inc
jmp
adc
pop
divb
add
jg
mov
mov
sub
xchg
sbb
inc
daa
orb
add
sub
and
pop
cmp
inc
add
les
adc
data16
sbb
mov
add
cld
test
sbbl
sbb
jae
orb
xor
sbb
inc
and
pop
add
fiaddl
cmpsl
sbb
rorb
clc
or
cs
and
mov
out
lods
in
movsb
add
xor
add
mov
std
fcompl
ljmp
xor
sbb
lahf
pushf
test
scas
les
pop
js
add
out
fiaddl
pop
lods
add
adcb
addb
mov
out
jl
pop
push
sub
and
mov
add
mov
insb
jb
add
push
pop
faddl
es
jl
pop
aaa
mov
mov
in
mov
testb
jl
add
add
lahf
dec
pop
scas
add
mov
xor
addb
es
add
pop
mov
jo,pt
dec
xor
scas
cltd
iret
inc
out
mov
xchg
mov
sarb
and
inc
cmpsb
lock
mov
insl
mov
ret
out
jp
mov
push
mov
and
cmp
clc
add
add
es
pop
cmp
hlt
int3
jnp
or
inc
lahf
hlt
adc
popf
js
fldl
rorb
xchg
inc
ret
xchg
sub
inc
lcall
adc
cmp
aas
bound
shll
xor
fistps
mov
nop
or
xchg
int3
pusha
jo
incb
cmp
add
mov
jge
je
add
cmp
mov
sub
add
test
cmp
sbb
and
pop
add
repz
cwtl
push
fs
popf
xor
mov
dec
aam
or
dec
add
ss
fmull
stc
cmp
es
cmpb
cltd
loopne
lret
cmp
pop
push
nop
dec
jmp
and
add
push
add
pop
adc
cmp
push
clc
mov
mov
pop
add
xor
sub
leave
push
sub
sbb
repz
jmp
xor
je
popa
adc
inc
mov
sbb
cmp
fdivrl
test
lock
fidivl
cwtl
sbb
fcomps
bound
add
mov
mov
mov
xchg
mov
stc
add
popa
adc
adc
mov
push
fistps
mull
and
pop
jl
inc
ljmp
add
rcrb
jne
bound
cwtl
jb
push
ftst
pusha
push
dec
imul
fiaddl
cmpsb
jnp
and
inc
sbb
repz
xor
pop
loope
mov
in
add
adc
fstl
ret
mov
loop
push
lods
les
add
cmp
fcoml
insb
or
xchg
dec
cmp
popf
add
jecxz
ja
mov
sub
add
outsl
rorl
test
jbe
mov
pop
inc
data16
mov
xchg
jg
and
iret
xor
push
sbb
test
or
fdivrs
dec
add
cli
add
ret
dec
add
jno
fstpl
cmp
dec
fdivrs
iret
adcb
dec
push
add
add
jmp
clc
add
movb
pop
test
and
add
popa
ds
sbb
adc
movsl
sub
sub
mov
pop
xorb
jl
fwait
sub
test
psubd
add
pop
jo
sbb
jp
cwtl
adc
sbbb
mov
hlt
or
lds
cwtl
pop
scas
lea
les
mov
gs
jae
jmp
add
dec
shl
add
add
hlt
jl
cs
es
cmp
int3
xor
mov
pop
push
lods
add
pop
push
add
adc
jne
mov
xchg
add
push
out
shll
add
dec
test
cmp
add
push
xlat
mov
xor
in
xor
sbb
push
sub
nop
movsb
add
inc
lcall
jo
dec
lods
das
sub
cmc
enter
pop
add
mov
int
pop
inc
cwtl
mov
or
fs
push
inc
inc
push
ljmp
movsb
push
rclb
cltd
push
hlt
jge
jbe
lret
scas
push
test
jle
push
movsb
mov
jg
fbstp
xlat
addb
test
leave
std
cwtl
mov
gs
ret
pop
dec
sti
sub
les
push
loope
pop
mov
cvtpi2ps
mov
in
push
jmp
sar
test
xchg
std
aad
push
sahf
xchg
pop
cwtl
mov
lret
dec
jnp
add
mov
cmpsl
push
xor
mov
add
add
lcall
mov
lcall
xchg
in
daa
ljmp
sbb
mov
mov
inc
mov
mov
inc
push
sti
jno
push
lods
icebp
sbbl
test
sbb
add
stc
fs
add
outsb
gs
jge
pop
imul
and
pop
les
jle
ret
add
adc
xchg
daa
dec
dec
pop
lods
pop
ljmp
mov
mov
pop
add
out
sbb
testl
insl
sbb
ret
stos
dec
imulb
add
ret
or
addr16
mov
aas
mov
mov
lea
hlt
mov
lahf
fistpll
pop
ret
inc
sub
add
or
mov
data16
jmp
lods
push
dec
add
adc
addr16
repnz
aam
fiadds
mov
sbb
iret
add
jo
dec
mov
ja
test
mov
cwtl
inc
cmp
add
xor
data16
push
test
out
int
xchg
ds
or
add
jle
sti
movsl
fsubr
or
pop
lret
push
mov
adc
push
dec
subl
sub
lods
xor
sbb
xor
hlt
loope
jge
jl
xlat
js
loopne
adc
jecxz
out
add
roll
adc
pushf
pop
jns
je
mov
inc
ss
lahf
pop
and
mov
or
sbb
adc
aas
mov
stos
push
or
jmp
aam
sbb
clc
add
push
arpl
cmp
fadds
dec
add
xor
femms
pop
stos
js
rolb
roll
add
mov
inc
inc
dec
inc
sbb
lahf
and
mov
inc
mov
test
popa
pusha
mov
nop
les
add
lds
add
repnz
fldcw
add
movsl
xor
or
xor
pop
shll
add
in
sbb
add
or
pop
inc
rolb
push
movsb
mov
dec
add
sbb
jo
mov
cmp
add
ret
and
push
dec
jmp
adc
out
adc
test
mov
test
jge
pcmpeqb
test
add
pusha
fldenv
clc
push
clc
and
clc
dec
or
in
sub
clc
push
and
sahf
push
and
push
add
sub
scas
jbe
pop
add
fcmove
rolb
mov
je
mov
jge
or
add
mov
mov
inc
in
mov
add
in
aam
aas
sbb
in
adc
mov
jl
add
stc
leave
xchg
lods
adc
inc
inc
lret
dec
pop
dec
cli
cmp
enter
clc
jl
mov
jns
loope
mov
and
pop
sbb
cmp
add
shll
pop
les
mov
arpl
mov
adc
jmp
sub
cld
push
pop
push
mov
cmp
mov
dec
or
leave
add
pop
test
sarl
adc
pop
clc
or
andl
in
into
roll
xchg
add
insl
push
mov
sti
leave
mov
add
add
daa
dec
jl,pt
pop
loopne
pop
cld
adc
add
jo
and
jge
lods
ror
bound
jl
xor
stos
sbb
repz
sbb
sbb
inc
sbbb
and
inc
dec
jp
add
outsb
and
testl
rcl
push
fadds
pop
call
test
jnp
add
sub
add
xchg
das
jp
repz
add
push
stos
fwait
aad
lds
fstps
int
fdiv
daa
push
aam
push
inc
cltd
adc
mov
sbb
push
sub
or
out
cmp
imul
or
inc
xor
mov
xchg
loopne
sahf
aad
inc
mov
arpl
push
add
jg
sbb
enter
dec
test
imul
pop
xor
cld
in
sbb
loop
inc
dec
in
or
mov
add
mov
mov
xor
lret
push
dec
and
lods
je
aas
and
xor
push
std
mov
roll
jp
xor
add
pop
jbe
ret
adc
xchg
enter
fisubs
or
idiv
negb
dec
push
adc
addr16
pusha
scas
call
clc
aas
push
mov
enter
hlt
jnp
loop
push
das
int3
jp
mov
cwtl
add
xchg
out
add
xor
adc
mov
cmp
pop
incl
insb
or
jnp
dec
test
and
and
mov
fistps
jle
and
cwtl
or
fistps
ja
pusha
pop
lcall
outsb
fisubl
mov
lds
and
cli
mov
rorb
dec
test
xorl
sub
xor
clc
and
mov
cs
inc
xchg
push
pusha
stos
pop
fwait
mov
ds
shlb
in
or
pop
mov
stc
lahf
dec
dec
xchg
xor
loop
mov
andb
lock
pop
sbb
add
clc
shrb
enter
xor
mov
pop
in
dec
scas
ret
pop
jecxz
sbb
jp
and
add
mov
or
xchg
and
lods
mov
out
or
mov
xchg
jo
pop
ss
and
sbb
sahf
add
mov
int3
jbe
add
xchg
add
mov
xor
imul
loope
add
test
cmp
icebp
mov
ja
pop
mov
inc
jle
shrb
add
pop
pusha
dec
mov
sbb
cmc
addr16
lea
and
or
pop
jp
cmp
stos
add
sub
xchg
add
xchg
jns
les
jae
push
xchg
enter
fadds
subl
pusha
adc
loop
leave
pop
out
pusha
pop
dec
shlb
pushf
add
add
push
test
xlat
or
add
jp
call
test
xor
shlb
add
scas
lahf
add
dec
mov
add
loop
movsl
adc
mov
insb
and
lods
mov
cmpsb
add
arpl
add
push
or
loope
loop
add
nop
add
mov
test
daa
jg
cmp
cmp
sti
push
std
jecxz
mov
sbb
add
cmpsb
movsl
in
push
mov
mov
incl
mov
das
loopne
rclb
add
mov
repz
xchg
ja
popf
lock
ljmp
imul
fadds
dec
and
in
xchg
cli
add
pop
pusha
jle
mov
jge
outsb
xor
cmp
aam
dec
rolb
add
xchg
push
das
fnstcw
xor
cmc
sbb
gs
add
mov
sbb
test
mov
das
xlat
cmp
dec
dec
fcoms
add
rcrl
outsb
aad
add
xchg
mov
mov
mov
shr
outsl
xor
in
leave
or
mov
cmp
aas
xchg
dec
je
add
repnz
dec
pop
clc
fsubrs
or
sub
sarl
fcoml
pop
test
adcb
in
push
sbb
cmp
xor
add
inc
adc
mov
add
test
or
inc
fsubrl
mov
mov
add
push
or
shlb
pop
fwait
sbb
scas
xor
gs
xor
xchg
fcmovnb
jecxz
es
loopne
sbb
xorl
repz
add
cmpsb
flds
and
stos
push
mov
rolb
sub
mov
out
xchg
sbb
cld
orl
in
loope
add
sub
lods
sbb
jo
std
add
and
xor
add
inc
fidivrl
mov
cmp
add
sbb
pop
sub
add
push
pop
leave
ja
repz
lods
or
add
psllq
sti
pop
add
hlt
sub
scas
call
jle
out
xchg
out
pop
rcr
enter
in
les
stc
mov
jl
sbb
cmovp
pop
xorb
jmp
add
mov
mov
nop
or
push
mov
jmp
or
outsb
enter
fcomps
loopne
add
cmp
jg
add
pop
mov
add
push
mov
pop
fdivl
repnz
jns
mov
fs
sbb
add
iret
pusha
stos
xor
add
add
and
ljmp
in
jae
and
sub
and
and
ret
mov
mov
mov
xlat
popa
ja
mov
add
adc
in
or
fadds
pop
push
xchg
cmc
push
inc
int
or
aam
int3
stos
cmp
add
lcall
jg
push
xor
std
popa
cmp
mov
jle
notl
lret
sub
add
iret
xlat
push
pop
mov
mov
sub
lret
mov
fcmovb
push
xor
out
sti
popa
push
leave
repz
xor
cli
add
fnstsw
add
mov
and
mov
mov
pop
adc
cwtl
enter
rorl
call
add
mov
cmp
cmpsl
sub
sbb
jmp
clc
arpl
jp
add
aaa
mov
inc
add
or
and
add
in
sbbl
scas
dec
mov
add
jge
push
sbb
ss
clc
adc
inc
fcoml
inc
add
xchg
jnp
push
push
and
fistpl
fnstsw
divps
call
ja
nop
add
or
dec
dec
fiadds
cmc
dec
in
adc
mov
dec
femms
adcb
dec
push
xor
shrl
pop
aas
xlat
ss
add
cmp
test
xor
fwait
jae
call
mov
mov
mov
mov
add
xor
ss
mov
add
leave
lahf
inc
cmpsb
pusha
popf
jl
lods
pop
pop
add
into
add
mov
fxch
cmp
int
lods
xor
sarb
sub
fcmovnu
mov
add
jl
sahf
add
repz
or
push
outsl
popa
xor
rorb
fmull
and
loope
inc
adc
mov
mov
or
or
frstor
cmp
dec
roll
adc
push
or
addl
ljmp
repnz
test
frstor
popf
jns
je
add
inc
divl
xchg
leave
loopew
mov
add
stc
fldt
add
insl
out
insb
mov
cmp
push
cmpb
je
pushf
int3
mov
stos
test
mov
movzwl
jl
scas
in
and
push
loopne
add
mul
fldl
iret
push
dec
sahf
add
mov
push
fcoms
add
xchg
movsb
je
mov
xlat
popf
nop
shll
xchg
jp
jle
out
push
push
jecxz
arpl
setnp
movsb
or
mov
out
sub
insb
aam
xchg
notl
lret
push
or
push
jle
cmp
pop
inc
xchg
in
jmp
pusha
cmp
jnp
add
mov
or
outsb
lret
mov
aaa
lds
and
mov
add
insl
ds
mov
clc
or
xchg
addb
cmp
stos
mov
dec
cltd
cmp
jecxz
sti
inc
mov
xor
and
and
sbb
mov
add
pop
inc
roll
jns
ret
mov
sub
scas
and
adc
xchg
insl
aam
je
add
test
shll
js
lret
ss
push
popa
fs
addb
sub
add
fstpl
sbb
add
cmp
add
cmp
fs
mov
add
mov
imul
and
adc
in
aad
add
xchg
xor
adc
lret
jg
clc
pusha
daa
movsl
cwtl
add
jle
test
inc
add
pop
push
mov
add
dec
inc
clc
sbb
pop
into
leave
data16
sbb
adc
mov
mov
cmp
or
fiaddl
mov
ja
in
cmpsb
and
sub
dec
pop
push
dec
add
mov
xorb
or
adcb
gs
cmc
sarb
and
xchg
loop
stos
add
pop
shrb
jge
push
cli
add
mov
push
adc
xchg
push
add
insl
add
test
lcall
pop
addb
push
xor
push
incb
pop
loopne
imul
sub
fxtract
and
mov
add
mov
imul
push
add
mov
cmp
ficoml
sub
push
add
jmp
push
xchg
mov
and
arpl
mov
sbb
pop
cmp
cmp
push
dec
mov
add
fwait
adc
lods
xlat
repnz
test
mov
jbe
inc
in
mov
xor
mov
mov
inc
pop
pop
test
rol
mov
std
je
divl
push
sub
cmp
dec
jo
add
push
sbb
xchg
shrb
mov
add
lods
scas
lock
ljmp
lock
add
xor
sub
xor
sbb
mov
lds
and
cmp
jecxz
pop
bound
add
dec
adc
mov
mov
test
sbb
lods
jle
std
xchg
pop
add
loop
xchg
loope
aam
aad
add
lahf
movsb
and
dec
out
add
push
add
jns
dec
in
fs
jbe
inc
popa
mov
adc
es
add
andb
nopl
cmpsl
pop
pusha
sub
ffreep
mov
cmpsl
mov
or
xchg
out
mov
add
fistps
test
mov
sbb
xchg
into
or
addr16
push
push
inc
inc
cmc
mov
xor
fidivrl
add
or
nop
mov
movsl
inc
xchg
outsb
sti
shlb
cmp
test
in
imul
pusha
pop
or
push
aaa
loope
adc
cmp
or
addb
push
add
sbb
xor
pop
xchg
andb
or
xor
sub
ljmp
jp
inc
sbb
sti
daa
xchg
jno
cmp
mov
or
iret
mov
cmp
cmc
sbb
cs
xor
fs
push
sbb
lahf
add
shrb
mov
add
arpl
sub
sbb
or
push
je
add
mov
mov
add
push
adc
pushf
sahf
push
pop
sbb
push
inc
mov
stos
cmc
sbb
fsts
seto
push
add
mov
mov
sarb
fsubs
inc
mov
add
add
xor
ss
adc
orb
mov
leave
scas
cwtl
fs
mov
clc
lcall
cmova
cltd
clc
lret
xchg
cwtl
orb
out
es
mov
push
push
subb
hlt
lods
sbb
add
mov
loop
xchg
sub
or
mov
sbb
cmp
faddl
in
shll
xchg
sbb
shlb
inc
mov
cmp
push
shr
add
pop
adc
jg
add
jmp
repnz
push
ret
ljmp
mov
push
lret
mov
dec
mov
mov
test
inc
es
sbb
sarl
mov
xchg
push
adcb
fmull
sbb
rol
adc
imul
adc
or
jge
test
loopne
ja
xor
test
mov
leave
add
ss
add
scas
nop
sub
pop
sub
lock
out
sbb
popf
jmp
jecxz
out
imul
mov
push
jbe
bound
adc
sub
add
into
and
xor
add
ja
mov
add
push
xor
adc
or
sub
repnz
adcb
pushf
sub
and
push
and
inc
notb
dec
mov
jle
sub
adc
dec
lret
pop
dec
add
into
je
add
out
push
push
mov
xorl
or
int3
cmp
push
cmp
inc
jno
pop
add
mov
lret
xor
jecxz
add
test
fcomi
fnstenv
mov
js
add
xchg
shrb
jge
sahf
out
mov
mov
cmp
adc
push
mov
xchg
sbb
lods
add
cmpsl
lcall
hlt
sub
add
movsb
pop
sarb
xchg
ljmp
or
xchg
mov
aam
pop
fimull
lock
cmp
pop
jb
out
test
xchg
pop
add
lcall
add
sbb
add
or
or
inc
es
push
fmull
cmp
js
push
lret
addb
xchg
add
stc
cmpsb
add
popa
imul
movsb
xchg
add
in
les
mov
dec
mov
adc
add
push
inc
out
cld
mov
mov
sub
push
mov
push
add
add
push
test
int
outsl
in
pop
add
jle
fwait
push
and
add
xchg
add
mov
sub
repnz
imull
adc
lock
pop
sub
loope
test
inc
shlb
xor
inc
nop
subb
in
lds
filds
stc
and
adc
jnp
fs
push
imul
push
test
iret
jne
dec
aam
cmp
out
shl
mov
add
call
push
arpl
mov
loopne,pn
cld
call
mov
subb
cmp
mov
sub
sbb
push
jnp
add
dec
in
mov
fidivl
add
sbb
inc
jecxz
or
pop
add
mov
mov
dec
std
and
fsubs
adc
nop
nop
or
pop
repz
fcoml
jg
add
push
jmp
sbb
xchg
fstps
push
add
inc
cmovge
adc
sbb
mov
mov
loopne
imul
or
cmpsl
and
test
fucomi
inc
pshufw
add
loope
inc
add
inc
add
jno
push
dec
and
mov
fiaddl
loopne
mov
xorb
std
lock
and
notl
jge
add
pop
mov
out
lea
add
test
jg
jae
add
or
test
les
add
mov
out
out
add
mov
ss
mov
inc
jl
sbb
ljmp
push
mov
mov
in
xchg
enter
add
cmp
and
rclb
add
sub
div
clc
jge
dec
popf
adc
sub
in
es
jae
stos
inc
jmp
xchg
cmp
mov
sbb
rcll
pop
push
les
out
mov
addr16
mov
dec
xchg
pop
mov
popf
sbb
inc
loopne
loope
or
adc
push
dec
fisttps
xlat
cmp
jb
mov
dec
dec
testl
imul
flds
ret
xchg
and
lods
hlt
popa
cli
add
ds
pop
xchg
cmp
adc
jo
stc
mov
data16
sbb
xor
lods
add
sub
lahf
add
fs
and
push
add
loope
adc
inc
and
add
xor
add
or
xor
aad
xchg
imul
pop
adc
push
in
jl
lods
bnd
mov
movsb
inc
loopne
jb
add
sbb
jbe
sbb
sub
dec
fstl
add
sbb
mov
sbb
xchg
adc
pop
mov
add
pop
inc
clc
popa
cmp
mov
push
add
pop
or
mov
xorl
test
mov
mov
add
lods
pop
or
xor
add
mov
pop
push
push
xchg
addr16
jae
je
add
cmc
pop
xor
push
xchg
jp
mov
xchg
pushf
pop
out
ljmp
popa
add
and
mov
push
and
push
xor
add
sub
ficoms
lods
mov
movsb
ret
add
aad
jp
jle
sub
jge
add
xchg
mov
out
and
lods
push
das
iret
add
cmp
or
and
push
jmp
inc
hlt
rcrl
mov
test
adc
and
mov
rolb
sub
popl
add
addr16
lock
rolb
int3
mov
adcl
daa
mov
mov
and
cmp
and
add
not
cmpb
jl
mov
dec
movl
test
data16
and
aas
scas
jp
test
cmp
jb
pop
xchg
roll
dec
or
flds
cmovae
mov
lret
hlt
jecxz
add
fwait
scas
movsb
add
rolb
or
popa
gs
stc
add
movsl
lahf
imul
lock
mov
sub
lods
sldt
add
rorb
xchg
add
or
int
add
mov
sarl
sbb
testb
lret
test
addr16
ja
nop
add
lods
jbe
mov
mov
add
jg
push
mov
pop
cmpsl
outsl
add
ds
xchg
and
cmp
iret
imulb
add
test
inc
and
add
inc
xchg
popa
add
leave
enter
movsl
mov
mov
xor
js
pop
fdivrl
aas
imul
movsb
add
lret
cwtl
add
dec
cmp
cmp
and
test
testb
rolb
adc
dec
mov
scas
and
test
mov
add
cs
push
stos
cltd
xor
aaa
bound
mov
adc
outsb
and
add
in
dec
push
mov
movsl
ja
push
xlat
insb
mov
pushf
lcall
mov
lock
pop
rcll
add
or
inc
cmp
push
pusha
sbbb
ss
push
and
sbb
lret
pop
xchg
add
cmp
mov
pop
pop
push
sub
stc
inc
jecxz
push
add
push
in
fsubr
add
dec
adc
dec
push
lea
mov
ss
aas
mov
dec
add
add
pop
jns
add
add
add
sbb
pop
jge
add
or
les
xchg
adc
pop
mov
cmpsl
addb
test
sub
dec
add
in
push
loop
mov
mov
cmp
xchg
lar
adc
cmc
das
rclb
dec
xchg
xor
add
ss
xchg
pop
aas
add
rcl
xchg
jae
add
and
dec
subb
mov
js
ficoml
je
cmp
loopne
rcl
nop
roll
int3
mov
int
out
movsl
add
fwait
inc
cmp
dec
ficompl
mov
daa
pop
int
hlt
mov
mov
sbb
rolb
dec
lret
aaa
fidivrl
mov
scas
or
jg
movsb
sub
inc
loopne
cmp
xor
in
inc
es
push
sub
lea
add
arpl
addr16
jl
add
cmp
das
mov
dec
jmp
popa
pop
leave
jg
sub
test
ror
xchg
jbe
in
add
loope
jl
insb
lcall
pop
loope
pop
shl
pop
push
cwtl
aam
jne
xor
pop
push
pop
popf
or
rclb
mov
add
xchg
inc
js
shlb
and
push
les
stos
mov
dec
scas
pop
mov
push
push
mov
lock
xor
or
sub
fwait
mov
in
shlb
jno
cmpsl
mov
add
pop
mov
test
xor
add
push
mov
jnp
add
popa
fldl
fisubrs
mov
push
jno
add
cmp
xor
mov
xor
push
push
cmp
pusha
aam
popa
fadds
adc
and
bound
mov
sub
add
dec
out
arpl
insb
fucomp
xor
ficoms
inc
xor
mov
mov
ret
xor
popa
addb
push
mov
sti
push
push
or
lret
mov
pop
inc
pop
jmp
dec
fisubl
mov
and
cmc
add
xchg
inc
rorl
cmp
test
mov
lock
out
add
and
test
inc
xor
and
das
add
nop
in
add
mov
mov
clc
push
les
sub
lcall
ret
xor
test
xchg
sub
shr
in
add
sbb
sbb
mov
loop
cmp
test
out
add
cmp
inc
add
out
xlat
adcl
es
mov
jbe
lea
mov
add
add
sbb
imul
dec
add
cld
negb
jmp
lret
push
outsl
mov
les
cmp
cmp
pusha
jae
mov
adc
or
subb
pusha
push
xor
shr
test
je
add
or
inc
aam
jmp
cmp
fs
and
je
mov
and
xchg
cmc
add
adc
sahf
mov
sahf
adc
add
mov
dec
lgs
inc
loopne,pn
and
jp
or
jecxz
lods
clc
shrl
mov
add
mov
add
xor
addl
mov
popf
rcrl
push
repz
and
nop
cmp
sbb
push
lds
pop
pop
clc
xor
arpl
xor
pusha
loope
fdivrs
add
mov
cmpsl
mov
call
daa
cmp
push
pop
aad
add
dec
adc
xchg
push
test
jmp
xor
int
ret
pusha
stc
push
push
sarb
pusha
push
xchg
mov
int3
inc
inc
out
mov
add
mov
fstl
push
or
clc
push
add
outsl
andl
mov
xchg
jmp
add
stos
cs
pop
push
add
mov
in
out
add
cmpsl
enter
stos
cmp
ret
inc
sahf
cmp
in
les
jbe
add
mov
setge
subb
jge
xor
mov
rolb
stos
push
inc
and
stos
add
gs
mov
push
scas
mov
dec
out
push
pop
sub
andl
xor
adc
add
cli
sub
out
shlb
cmpsl
cli
add
cs
aaa
hlt
add
mov
in
enter
fsubrs
pop
dec
dec
push
inc
mov
mov
push
dec
test
add
imul
add
xchg
cmpsl
add
in
dec
cmp
push
js
pop
mov
aaa
cmp
mov
pop
es
add
lods
xchg
xchg
dec
cli
push
icebp
push
mov
js
add
or
movsl
jge
enter
sbb
sbb
adc
fidivl
add
mov
pop
add
mov
or
mov
dec
sub
clc
xchg
lret
hlt
roll
dec
push
xchg
js
mov
sub
call
fwait
cmp
rol
add
pushf
mov
in
pop
xchg
mov
outsb
inc
aad
bound
xchg
add
fld
enter
call
out
jge
cmpsl
add
sbb
xchg
aas
ret
cs
add
popa
add
mov
pop
or
add
mov
inc
inc
add
add
in
add
xchg
stos
mov
outsl
mov
sbb
in
test
or
pop
in
ja,pt
add
es
xchg
mov
pop
sbb
fsubp
ss
cwtl
test
fiaddl
jo
leave
xlat
xchg
loope
add
jmp
pusha
pop
pop
jno
jl
dec
dec
loopne
filds
push
adc
jnp
mov
dec
add
shll
stos
es
jl
mov
and
sub
dec
flds
sbb
inc
cs
lret
add
lods
or
out
jge
aas
xchg
mov
addl
aam
and
cld
mov
sbb
sti
loopne
lmsw
sub
add
idivl
add
scas
pop
movsl
mov
jae
xor
push
mov
nop
sbb
jbe
cmp
mov
add
out
adc
mov
bound
jecxz
repz
pushf
cmovae
rorl
jp
lods
mov
xor
das
subl
bound
sub
les
dec
or
push
fwait
iret
jo
add
mov
rcrl
mov
pop
imul
sbb
ljmp
sub
cmp
jnp
sbb
test
aam
pop
fdivs
jp
repnz
jbe
aaa
or
sub
dec
pop
add
jno
or
cmp
hlt
push
push
cmp
pop
rolb
inc
sarl
subb
andb
sbb
add
fiadds
stos
or
pop
outsb
scas
mov
fsubrp
lea
add
shrb
xor
add
inc
stos
fs
mov
mov
lods
push
rcrb
add
lret
fadd
jp
enter
aad
xchg
xlat
sbb
pop
push
inc
mov
sub
mov
lock
les
add
mov
pop
and
mov
aam
mov
add
outsl
mov
add
pop
lds
mov
in
add
mov
fdivr
push
xor
pop
jge
inc
andl
insb
sbb
push
add
cmpsl
adc
aas
add
sub
je
dec
jge
jmp
add
lds
add
pop
xchg
lods
push
insl
adc
ret
mov
xor
lds
and
in
test
loope
gs
jae
jmp
add
lcall
add
mov
mov
jne
add
mov
arpl
fisubrs
mov
cmp
in
in
xor
stc
scas
es
cmpsl
cmp
out
mov
addb
mov
test
add
arpl
add
inc
stos
test
outsb
aas
faddl
push
or
pop
mov
roll
sub
cld
out
out
call
cwtl
xchg
push
loop
cmp
xor
cmpsl
in
and
add
stos
inc
jge
inc
add
add
sub
icebp
dec
push
or
lds
je
push
dec
cli
add
jge
int3
pop
xor
out
jecxz
sbb
pop
lcall
enter
dec
add
mov
mov
mov
rep
inc
pop
ret
mov
and
jb
les
and
add
stc
sub
bound
jno
push
clc
out
int3
fwait
in
pop
loop
or
pause
nop
jl
adc
movsl
add
xlat
and
xchg
pop
inc
add
pop
pop
cmp
cmpsb
orl
dec
and
and
pushl
repnz
add
add
imulb
aaa
iret
xchg
add
lock
jl
nop
jg,pt
add
fildll
std
mov
nop
add
inc
jge
jnp
dec
cmpb
add
sub
pop
jge
sub
xlat
pop
xchg
and
dec
lock
add
and
adc
in
xchg
pmullw
sbb
add
push
xchg
cmpsb
lock
je
outsl
xchg
sub
jo
dec
and
push
cmp
frstor
pushf
adcb
paddw
adc
aas
and
push
andb
sub
jae
or
shlb
mov
adc
push
cli
lcall
adc
in
das
cld
dec
daa
clc
addl
lds
add
shr
mov
daa
xor
xor
or
xor
add
add
xchg
mov
ret
lea
rclb
out
adc
popa
iret
jl
in
clc
fidivrl
add
scas
sahf
pop
and
mov
shll
orl
clc
mov
loop
add
sub
insl
and
add
sub
xchg
sbb
loopne
mov
jmp
in
fdiv
ljmp
addr16
inc
test
adc
test
in
lahf
repz
sbb
orb
cmp
insl
inc
jp
les
movsl
movl
pop
push
mov
add
sbb
or
dec
jae
pop
pop
xchg
xor
jne
dec
gs
out
shlb
test
xchg
fisttpll
dec
add
add
lret
es
sbb
arpl
filds
lret
cli
jle
add
insl
or
pop
pop
dec
lea
adc
add
test
dec
jnp
add
mov
dec
add
inc
dec
lds
inc
jp
notb
mov
je
add
or
xchg
xchg
or
add
loop
xorb
imul
in
out
aaa
add
sbb
push
mov
mov
and
sbb
add
loopne
and
out
int3
add
xor
test
cld
sbb
imul
scas
push
std
push
icebp
push
add
mov
movsl
and
stos
inc
add
mov
lea
xchg
icebp
loopne
pop
add
int3
sbb
cmp
sub
xor
clc
sub
adc
subb
jl
pop
add
shl
cld
clc
cmp
adc
lahf
push
popa
loopne
xchg
loopne
add
test
in
push
add
testb
hlt
sbb
icebp
scas
cs
add
push
fbstp
mov
mov
enter
xor
lods
sub
inc
jns
add
push
xchg
loope
sbb
fistpll
rcl
add
add
inc
jg
movsl
add
imul
and
adc
rolb
ss
xor
movsb
add
aad
jo
imul
cltd
es
div
into
outsb
out
or
or
ds
insb
sbb
push
das
fnsave
or
ja
shlb
ja
add
clc
push
mov
push
sub
jns
mov
lcall
adc
clc
sbbb
push
movsl
mov
cmp
add
dec
mov
pop
xor
test
test
clc
add
adc
mov
cmp
jne
add
push
sub
fbld
cs
mov
insl
jl
repnz
sub
add
aam
cmpsb
add
inc
pop
fisubs
imul
adc
add
je
dec
lahf
enter
adc
test
notb
add
mov
pop
mov
add
call
mov
add
cmp
push
cld
sbb
mov
cmp
mov
cs
and
mov
pusha
dec
fisttpll
pushf
ret
xchg
lret
add
negb
dec
roll
mov
add
and
xchg
fists
cmpsl
loope
jl
popl
hlt
push
cmp
setp
sub
test
dec
out
add
filds
or
jp
inc
repnz
cmp
inc
cld
adc
add
or
lock
mov
ja
mov
jbe
sub
cmp
jecxz
mov
cwtl
pop
jmp
aad
add
jp
inc
adc
adc
jmp
mov
pop
xchg
in
or
jae
and
mov
or
xchg
repnz
mov
enter
lret
outsb
sbb
adc
push
fmul
je
mov
pop
shlb
mov
jecxz
add
fldl
pop
fstps
cs
and
mov
jmp
mov
loopne
add
sbb
repnz
dec
sysenter
shll
mov
mov
mov
test
sbb
out
dec
fisubrl
add
inc
mov
push
adcb
jle
repnz
push
pop
sbb
sub
adc
pop
in
daa
mov
icebp
inc
sbb
cmp
rcl
push
adc
stc
xchg
dec
in
cmpsl
jecxz
pop
fldl
clc
loop
jb
sbb
loope
xchg
test
mov
xchg
sbb
pop
inc
xchg
push
fdivs
push
dec
aad
mov
cmp
lock
xor
andl
rorb
inc
roll
pop
lahf
xor
imul
xchg
adc
mov
add
push
jnp
dec
enter
andb
add
lods
pop
outsl
dec
inc
push
xor
add
cltd
test
loopne
iret
lds
jae
stos
lcall
rcrb
psllw
andb
in
add
insb
xchg
not
enter
or
push
je
cwtl
es
xchg
popf
add
arpl
stc
or
fwait
pushf
and
push
inc
ret
inc
shlb
jecxz
jno
add
adc
jbe
jmp
jp
test
push
rorb
jl
or
pusha
mov
push
lds
pushf
pop
inc
in
and
and
sub
add
cmpl
leave
mov
lock
clc
aam
out
add
xchg
dec
arpl
xchg
add
in
xchg
jecxz
jle
mov
aad
sarb
pop
add
ret
push
pushf
and
out
outsb
add
jl
es
xchg
cmp
and
iret
xchg
flds
out
shll
push
inc
or
cmp
add
les
adc
add
je
jbe
rcrb
pushaw
xorl
pop
pop
push
sbb
pop
adc
push
mov
outsl
or
xchg
shrb
xorl
xor
pusha
adc
scas
rolb
pop
inc
inc
and
adc
sub
cmp
pushf
lcall
out
and
les
add
outsb
xor
push
add
lret
dec
stc
insl
and
insb
lahf
xor
push
ficoml
shl
inc
inc
cmp
test
cmp
idivb
cmp
js
icebp
pop
incb
fcomi
out
mov
mov
inc
xchg
fsubrs
sbb
incb
pop
mov
and
lcall
repnz
test
jbe
pop
xor
add
lock
insl
push
sbbl
add
mov
add
ja
push
shlb
rcrl
mov
popa
add
jecxz
dec
es
movsl
xchg
xor
fiaddl
iret
mov
adc
out
call
and
push
xorb
pop
loopne
ret
cmpsl
mov
push
xchg
sbb
loopne
je
xchg
sahf
push
imul
scas
mov
xchg
sbb
push
sub
or
inc
test
pop
cmp
inc
sbbl
xlat
or
mov
add
nop
and
xor
sbb
sub
mov
inc
push
adcb
cs
lret
inc
cmc
adc
xorb
push
lcall
inc
xchg
or
pop
push
adc
xchg
add
rcl
sahf
int3
push
loopne
add
or
dec
bound
xchg
adc
dec
rolb
mov
add
aam
push
xor
mov
mov
decl
lret
repz
cmpsb
mov
or
cs
push
mov
aam
sbb
xor
inc
or
insb
aas
andl
scas
add
add
mov
insl
adc
in
mov
mov
jle
sub
jnp
aaa
jno
sub
roll
nop
push
call
sub
fmuls
iret
dec
nop
call
inc
testl
mov
mov
das
popa
push
mov
push
add
sbb
push
jle
add
xor
mov
ja
add
and
ja
mov
sbb
xor
inc
dec
mov
sub
movsb
ljmp
cmp
inc
mov
push
push
inc
nop
cld
pop
test
add
pusha
loop
and
mov
xchg
ja
add
popf
shlb
add
in
fildll
ds
add
cmp
pushf
ret
and
jb
add
sub
sub
mov
insb
fidivl
in
movsb
out
xor
movsl
dec
das
js
lcall
push
push
int
rorb
jl
and
lret
add
cmpsl
jo
das
dec
or
loop
add
and
xchg
loop
sarb
cmp
mov
out
mov
cli
cmpl
xor
sub
lds
cmp
insl
test
mov
shl
inc
mov
jnp
xor
ret
xor
sub
add
aas
mov
sub
xchg
pop
mov
mov
pop
mov
mov
add
pop
mov
jo
loope
add
pop
insl
adc
cmpsb
clc
sbb
data16
iret
ret
sti
push
pop
mov
sarb
add
enter
inc
mov
or
pop
pop
jmp
fbstp
sub
hlt
add
adc
lock
cmp
repz
cwtl
xlat
sub
pop
push
fld
sbb
loop
shlb
push
sbb
mov
xor
mov
mov
cmp
call
in
fiaddl
cmpsb
es
sar
iret
pop
sbb
ja
out
adc
xor
repnz
bound
inc
inc
xchg
jp
push
sbb
or
pop
hlt
add
sarl
js
adc
loopne
aaa
shlb
add
and
dec
mov
mov
cmp
and
mov
decl
dec
mov
push
mov
popa
add
or
fidivrs
in
adc
add
sub
add
xchg
mov
sbb
loop
mov
int3
xlat
movsl
add
push
adc
sahf
mov
pop
dec
dec
fsubrl
rclb
out
pop
mov
jno
xchg
push
add
or
in
or
xchg
cwtl
in
stos
xor
in
pop
or
mov
decb
iret
and
lods
movl
xchg
pop
mov
cld
add
adc
sbb
add
add
movb
fstpl
cmp
add
pop
sbb
lret
movsb
push
jbe
cmp
shrl
scas
les
add
sub
jno
in
arpl
pop
jmp
stos
test
mov
daa
push
inc
ret
out
jno
nop
mov
bound
pusha
or
lret
mov
stc
add
jnp
push
test
test
push
int
add
fdivs
cwtl
add
into
inc
addl
jb
xchg
pop
ret
icebp
xchg
popf
lcall
xchg
mov
fildl
js
xchg
fdivr
xor
sbbb
cmp
lods
scas
fwait
incl
gs
lea
sbb
add
loop
lock
push
jg
inc
cmpsb
in
pushf
sbb
fcomps
incb
test
fsts
mov
add
in
shl
and
push
xor
lock
xadd
popf
adc
imul
cmc
cpuid
push
push
leave
sarb
loope
cmp
jg
add
or
push
jle
cs
daa
add
dec
mov
push
xchg
insl
mov
popf
ja
adc
add
in
fisttps
and
cmp
jae
and
xchg
idivl
add
cmpsb
pop
sbbb
cmp
xor
idivb
push
pop
aaa
jle
push
stc
lret
or
lods
xor
rcll
fistpll
jo
and
icebp
sbb
add
lret
pop
test
xor
and
faddl
pusha
adc
xlat
jge
pop
cmpsb
add
repnz
add
mov
bound
in
add
ds
scas
das
rolb
jno
xchg
add
inc
push
ror
lcall
imul
popf
pusha
mov
add
loop
loope
fmull
pop
jecxz
je
out
pop
sub
jmp
or
fs
rcl
fcoml
icebp
jne
pop
sub
stc
enter
dec
in
add
cmp
dec
lahf
lea
add
inc
clc
cli
bound
mov
or
popf
add
or
push
pusha
add
test
fwait
jnp
addb
or
xchg
mov
push
dec
loop
pop
xor
test
jecxz
imul
stos
cmp
ljmp
xchg
mov
leave
aad
ds
adc
repz
mov
lret
cmpsl
jae
or
cmp
xor
jmp
out
in
mov
pop
add
int
jp
test
add
out
jle
xchg
or
movsb
cmp
cmc
je
addb
jle
pop
push
push
jp
or
lods
add
jbe
xchg
popf
in
jge
js
cmp
adc
push
sub
imul
fcomps
cmpsl
and
lret
repz
loopne
sub
xchg
in
pop
test
orb
imul
xchg
add
xchg
dec
push
jne
ret
adc
lret
adc
rorb
dec
fiadds
cmpsb
xor
push
popf
cltd
movsb
add
mov
sbb
std
test
dec
shrl
inc
inc
add
sub
cmp
aam
lods
sti
push
mov
add
adc
shl
bound
mov
jl
imul
sbb
push
leave
cltd
aam
lock
jge,pn
mov
pushf
pop
ffreep
fisttpll
push
adc
shlb
mov
pusha
inc
icebp
xor
inc
cmp
clc
xchg
xchg
cmpsl
in
shlb
cmpsl
loope
pusha
sub
in
out
add
cmp
mov
mov
bound
pop
mov
xchg
aad
xchg
xchg
mov
inc
xor
sti
inc
aas
sub
in
or
popa
xchg
into
or
ret
lret
fstpt
cmp
sahf
jb
mov
movl
add
and
xor
test
push
jo
xchg
add
gs
ret
sbb
test
cmp
sub
dec
xorb
push
sub
sub
in
jno
lret
lds
cltd
mov
push
xor
fs
std
fisubrl
mov
add
xchg
add
lret
ds
push
adc
sti
push
sub
sbb
xchg
fwait
cmp
cmp
adc
clc
mov
or
es
xchg
mov
loop
push
jp
lods
dec
mov
mov
inc
cmp
mov
push
lods
jge
mov
jo
add
jnp
insb
fs
insb
movsb
dec
jecxz
data16
popa
push
les
inc
in
or
xor
outsb
mov
add
shll
jnp
pop
jp
imul
sbb
cmp
cmpsb
jne
mov
imul
and
pop
push
sbbl
enter
pop
add
jmp
push
add
sbb
push
jl
add
std
pushl
cmp
add
dec
sbb
in
sbb
push
les
mov
jl
ljmp
add
add
mov
push
lret
mov
xchg
xlat
ljmp
ret
std
add
xor
xlat
jno
add
xor
add
aas
ja
or
fsubs
xchg
dec
sub
adc
adc
inc
or
out
daa
in
add
shll
push
hlt
pop
dec
add
outsb
cmp
imulb
mov
addb
shlb
lcall
add
mov
mov
and
add
jno
call
push
es
push
add
mov
loopne
add
call
add
lock
add
test
faddl
inc
mov
cmp
mov
leave
pop
dec
xor
sbb
mov
in
sub
mov
insb
test
cmpsb
or
ljmp
sbb
mov
stos
mov
add
adc
test
and
sbb
mov
push
test
or
add
lret
or
push
mov
add
sbb
jmp
cmp
xorb
out
jb
inc
or
add
stos
orb
lock
pusha
push
loopne
loop
jle
add
lahf
inc
jg
add
outsb
jae
rolb
add
push
push
call
add
iret
icebp
add
lds
or
cwtl
shll
jb
xor
hlt
in
push
mov
add
jne
ds
adc
lea
xlat
pop
divl
add
scas
das
xchg
int3
jp
or
push
mov
jnp
mov
nop
mov
test
mov
pushf
mov
push
sbb
add
mov
mov
mov
imul
test
sahf
dec
insb
ja
dec
xor
and
adc
adc
arpl
sub
pop
cmp
cmp
jp
add
mov
fs
lret
fucomp
push
test
inc
pusha
icebp
mov
aaa
add
inc
in
cmc
xchg
inc
mov
add
out
imul
jle
mov
adc
pop
loop
ffree
fbstp
jbe
xor
and
lea
add
mov
pop
add
rcrb
shrb
shl
jecxz
push
xchg
testl
xor
jo
rclb
js
add
js
push
pop
inc
movsl
inc
fstps
mov
pop
xchg
jmp
or
mov
adcb
clc
test
test
inc
mov
jl
xchg
lret
mov
adcl
mov
test
jl
add
ss
or
sbb
sahf
sbbb
sub
add
fcompl
rorl
dec
testb
sub
add
sbb
pop
lods
mul
push
push
orl
adc
ljmp
lret
push
sbb
add
xorb
lds
aas
movsb
int
sbb
or
mov
mov
std
out
pop
imul
push
mov
sub
jmp
or
subb
sbb
and
mov
adc
dec
shrl
mov
and
sar
lret
push
add
int
cmc
jge
setne
push
jp
int3
imul
mov
stos
icebp
push
fimull
arpl
pop
add
add
and
fldcw
fldl
cmpl
and
les
pop
aad
jl
mov
clc
add
test
fcoms
mov
add
dec
pop
pop
mov
into
dec
dec
sbb
add
incb
pop
cltd
in
adc
push
out
gs
movsl
aad
test
data16
sub
scas
add
fwait
testb
add
mov
sbb
in
or
mov
push
ret
add
inc
cmpsl
fs
pop
mov
or
push
dec
and
sbb
fildl
mov
je
push
and
add
shrb
int3
xchg
rorb
cmc
aaa
sbb
popa
bound
push
sti
mov
xchg
add
popf
scas
dec
sbb
test
sar
movb
xor
ds
test
lods
inc
jno
sub
stc
hlt
push
icebp
iret
add
mov
sarl
rcrb
mov
pop
fsubl
loop
sar
pop
push
adc
push
loop
pop
lret
lock
pop
jno
push
and
dec
fcomps
mov
inc
inc
filds
movb
test
cmp
jp
aam
add
push
iret
lods
jb
pusha
scas
ror
push
push
or
jecxz
pop
mov
sbbb
add
jmp
inc
in
inc
stos
stc
cld
mov
insl
lahf
test
popf
sbb
dec
push
add
insb
add
xor
push
and
bound
aam
mov
adc
jae
adc
xchg
xchg
aad
add
in
ljmp
inc
sbb
repnz
jecxz
mov
jp
stos
adc
pop
aaa
jecxz
pop
pop
daa
inc
out
cmpb
dec
scas
sbb
push
test
lds
dec
movaps
adc
test
mov
push
mov
out
gs
and
insb
add
adc
aad
lock
cwtl
add
loop
xchg
out
pop
jmp
mov
in
mov
rorb
ds
popf
mov
pop
out
mov
outsl
add
dec
cli
rorb
inc
add
sti
aaa
jns
dec
clc
push
xor
inc
out
add
in
pop
stc
sarb
js
jge
je
add
cld
add
push
shll
add
push
jl
mov
pop
punpckhdq
mov
xor
pop
es
push
jnp
dec
add
dec
mov
addl
adc
mov
cmp
xchg
cwtl
add
outsl
cwtl
test
push
repz
fimuls
into
jmp
mov
mov
add
js
sahf
or
les
mov
lret
mov
stc
mov
sbb
push
sub
sti
add
ret
adc
add
dec
mov
loope
inc
js
pop
loopne
push
scas
xor
or
mov
bound
test
adc
scas
sbb
add
jl
mov
push
mov
dec
pushf
test
xbegin
inc
pop
js
nop
sbbl
xchg
xchg
stos
mov
pop
fstl
push
popa
push
mov
push
add
nop
loope
xlat
pushf
mov
mov
movsl
addl
out
aas
inc
cli
testb
movsb
shlb
lret
bound
or
popa
inc
in
push
add
push
xchg
and
lret
add
mov
xchg
out
xchg
addb
test
mov
mov
sbb
cmpsb
inc
inc
adcb
ss
jb
mov
lock
adc
push
int3
test
popa
stos
cltd
aaa
or
not
and
and
fidivrs
inc
and
faddl
jbe
xor
add
fcmovbe
sub
rcrl
push
mov
pop
add
aam
fwait
ja
dec
stc
inc
mov
inc
clc
jne
add
jmp
jb
test
or
cmpsb
xlat
and
mov
jmp
stos
add
jl
xchg
cmp
insb
xchg
push
jmp
cmp
stos
dec
sahf
mov
cmpsb
hlt
xchg
rolb
cmpsl
sti
sub
push
icebp
fnstsw
hlt
pop
adc
push
rclb
push
add
call
cwtl
jno
cltd
mov
loopne
push
add
sbb
add
jle
fiadds
xor
pop
bnd
cli
test
mov
dec
cmp
jge
cmp
imul
fwait
stos
pop
mov
pop
test
adc
add
scas
sub
jno
push
rorl
ret
repz
xchg
call
push
out
out
dec
mov
pop
mov
or
adc
addr16
cmc
filds
or
out
ss
mov
pop
outsb
xchg
sub
je
and
sbb
add
jg
mov
inc
adc
test
add
cmpsl
sbb
ficomps
adc
cltd
add
and
inc
fs
test
xor
sub
ret
pop
addr16
pop
test
adc
jmp
cwtl
xchg
shlb
mov
repnz
pop
test
scas
mov
or
pop
sbb
dec
sahf
sbb
cwtl
lock
add
push
inc
loope
std
jp
or
or
fnsave
add
lods
dec
add
push
add
rcll
and
inc
push
insb
mov
shll
xor
popf
mov
add
jo
loop
add
add
test
jle
xchg
sub
add
sub
add
sub
fwait
repnz
and
aaa
test
pop
fnsave
push
pusha
cld
pusha
aam
ret
addb
dec
cmp
add
dec
push
lret
div
pop
out
mov
push
sub
push
add
push
cmp
xchg
mov
sub
xor
push
sub
xchg
fwait
dec
dec
shl
sbb
pop
xchg
hlt
cmp
lahf
and
cmpsl
dec
and
js
in
mov
mov
mov
add
cmc
pop
sub
pop
ret
aaa
jge
sti
and
or
and
fwait
mov
fnstcw
adc
adc
push
movsb
mov
pusha
add
sub
add
push
cmp
in
cwtl
add
xor
clc
or
cmp
push
loop
sub
and
mov
mov
add
adc
repz
sarl
es
aas
adcb
and
int3
mov
orps
fadds
xchg
inc
add
call
add
mov
mov
mov
fsubs
adc
xchg
cmp
add
jl
aam
sbb
lds
shll
jmp
scas
cmp
and
mov
xor
add
cmp
lea
iret
ret
pop
mov
lcall
add
loopne
jnp
pop
adc
add
sbb
hlt
in
pusha
enter
pop
or
or
cmpb
push
jmp
lods
mov
cld
jns
mov
ljmp
mov
jbe
ss
nop
movsb
add
cmc
or
loopne
dec
push
sbb
push
xchg
adc
add
or
mov
mov
cmc
stos
cld
sbb
cmp
xor
inc
movsl
andb
xchg
rcrb
and
jge
jp
int
add
sbb
addr16
add
xchg
insl
push
pop
imul
mov
pop
insb
movsb
push
cmp
sbb
sub
lods
push
xor
inc
jae
push
loope
loop
sbb
cmp
dec
mov
mov
push
or
push
cld
xchg
lds
int3
leave
popf
mov
jo
add
loop
stc
sti
xor
jmp
ja
stos
andl
js
repz
aaa
add
and
xor
pop
aas
lock
cmp
das
push
jle
cmp
bound
clc
jmp
addr16
data16
or
pop
xor
or
sub
xorb
or
sbb
jge
loopne
pop
daa
pop
mov
pop
loope
in
ret
imul
mov
jmp
ss
out
mov
lret
add
push
pop
mov
inc
and
mov
xlat
xor
lcall
rclb
or
cwtl
in
jae
dec
fmuls
les
popf
lcall
add
and
jbe
inc
push
mov
sbb
jl
call
pop
into
movsb
mov
jg
add
mov
mov
stos
jne
mov
sbb
add
inc
pop
mov
out
test
pop
sbb
cwtl
mov
insb
arpl
insl
adc
add
adc
ljmp
xchg
add
add
mov
shl
mov
or
xor
and
dec
push
cmpsb
inc
xor
adc
pop
int
rorb
dec
push
add
sbb
scas
js
adc
jne
add
pop
jge
imul
add
fistl
out
add
and
add
pop
out
push
in
loopne
fsubrl
bound
dec
inc
popa
shufps
add
cmc
add
push
cmp
xchg
or
fldenv
adc
dec
int3
lods
add
ret
dec
arpl
add
test
andb
repz
es
movsl
xor
inc
imul
shl
insb
jns
sub
movnti
insl
mov
scas
jae
mov
and
fs
dec
shrb
roll
repnz
push
push
xor
push
adc
dec
loope
dec
mov
jns
shrb
add
mov
stos
cmpsl
popl
push
sahf
add
push
aaa
xchg
and
dec
adc
sbb
dec
mov
mov
std
add
push
mov
sbb
jle
insb
xor
cmp
pop
push
je
shlb
cmp
add
movsb
add
add
pop
out
adc
pop
or
out
jl
cs
add
cmp
and
shrl
push
femms
dec
mov
push
mov
ss
add
leave
cmpsb
push
adc
xor
inc
mov
add
xchg
scas
arpl
stos
jns
fwait
fs
cmp
jge
mov
xor
pushl
push
cs
jo
test
add
add
out
inc
sub
add
outsl
jo
cmp
addb
mov
push
das
js
or
dec
inc
add
fistl
or
call
sbb
dec
out
add
xchg
cmp
mov
mov
jae
add
and
cltd
lods
add
add
js
loopne
fwait
add
lahf
ljmp
xor
mov
add
pop
cmp
mov
out
add
mov
xchg
push
push
add
loope
ss
cmp
push
out
mov
jae
addr16
call
in
insl
out
xchg
cwtl
adcb
mov
xchg
add
aaa
xor
js
movsb
push
inc
xchg
adc
imul
test
shlb
cmp
cmp
add
cld
or
pop
popa
dec
add
mov
jo
push
push
xchg
mov
shlb
outsb
add
add
push
adc
enter
sbb
stos
into
ds
or
mov
loope
add
xor
notb
push
add
cmp
dec
or
add
mov
xor
shll
jmp
enter
stc
sbb
add
fstpl
les
sbb
movsl
rcrl
jno
sbb
shr
add
not
mov
mov
cmp
test
push
push
das
cmp
inc
ret
inc
push
mov
inc
shrb
add
sub
sub
xlat
jp
mov
cmp
inc
addb
jmp
dec
icebp
sbbb
cwtl
mov
popa
mov
adc
hlt
imul
xor
xchg
orb
pop
pop
mov
inc
dec
sub
push
ljmp
mov
xchg
nop
pop
mov
mov
xchg
shl
dec
jl
lock
pusha
lods
sahf
movb
mov
push
daa
repnz
adc
jmp
sbb
inc
add
ret
sbb
rcrl
repnz
xlat
lea
mov
into
lds
mov
dec
xor
and
jo
add
loopne
add
outsl
int
mov
mov
cwtl
lea
jnp
call
add
nop
lods
scas
xchg
fsubs
ljmp
and
or
movsb
or
cmp
lcall
je
mov
add
jbe
dec
out
adc
add
aad
in
add
pusha
pusha
sub
add
push
das
add
shr
fisubl
enter
fimuls
adc
adc
in
sbbb
dec
pop
add
pop
sbb
shll
push
add
sbbb
cmp
insl
sbb
das
and
pop
adc
add
push
jno
mov
dec
das
or
sub
mov
pushf
xchg
add
inc
loop
lods
cmc
cs
sub
das
shll
shll
pop
push
insb
add
nop
cs
mov
jle
add
and
xchg
lock
push
lods
loop
and
int3
jg
cmp
in
fsts
add
fisubl
pusha
fdiv
sahf
or
mov
adc
in
add
pop
xchg
sub
add
fadds
cmp
jae
aad
mov
ret
pop
iret
arpl
cld
dec
movsb
into
orb
fadds
aam
outsl
jnp
test
add
mov
mov
inc
push
inc
cmc
or
push
sub
and
dec
or
mov
repz
add
mov
and
adc
xchg
pop
rcrb
sbb
adc
out
les
pop
leave
adc
or
inc
dec
inc
jnp
andb
or
xor
aam
sub
add
bound
adc
jp
out
add
push
sbb
sub
jbe
cld
roll
push
lea
aad
jb
addr16
mov
cmp
push
scas
test
rolb
fstpl
xchg
sub
mov
lahf
stc
pop
mov
mov
in
or
add
pop
sahf
sbb
lretw
add
mov
and
lret
ss
fs
jae
aaa
fnstenv
push
aam
in
add
ds
hlt
testb
stos
cmpb
ret
push
mov
push
fimuls
cmp
fildll
into
jmp
or
ds
add
in
mov
ret
shlb
les
jge
movd
jns
incb
pop
stos
xchg
push
lock
add
jae
dec
mov
cmp
add
gs
pop
cltd
insl
add
clts
shl
add
jno
dec
mov
and
orb
out
mov
mov
sbb
inc
push
cli
nop
in
sbb
or
ja
icebp
leave
sbb
in
inc
mov
and
xchg
xchg
sub
mov
jnp
inc
mov
test
lock
movl
repnz
inc
add
out
push
xor
cmp
and
sub
dec
jnp
lahf
xchg
inc
ret
sub
das
arpl
pop
push
pusha
cmp
lods
rep
mov
mov
nop
add
lock
loopne
jl
push
sub
sbb
pop
jno
dec
out
pop
leave
xchg
aad
fiadds
cmp
in
jl
cltd
add
stos
shll
scas
hlt
lods
jae
pop
scas
sti
test
inc
jo
add
mov
pop
aam
push
adcb
mov
sbb
adc
movsl
jns
cli
fidivrs
sbb
sub
xchg
fdivrl
add
sbb
aas
push
dec
adc
jno
std
pusha
fdivs
cmp
das
or
pop
mov
pusha
les
movsb
add
lds
xor
sbb
mov
push
dec
pop
adc
outsb
cmp
popl
jae
adc
lret
pop
in
lock
push
sub
add
xchg
fadds
xor
mull
js
frstor
sbb
add
add
mov
ljmp
scas
fadds
xchg
pushf
adc
popf
aas
rorl
ja
or
cmp
loop
push
lds
rol
jno
cmpsl
add
adc
xchg
jns
loop
bound
fsts
cld
aad
sti
sbb
dec
pop
mov
push
lock
xchg
mov
loopne
push
sub
and
pop
repnz
lret
jo
xchg
enter
jmp
pusha
fcomi
cld
addl
inc
pop
jl
add
repz
mov
inc
dec
lods
jo
mov
cmp
xlat
sub
mov
add
jb
daa
inc
lcall
stc
xor
sbb
repnz
lods
pusha
pop
mov
cltd
push
jg
sbb
mov
sar
push
mov
inc
dec
dec
xchg
jl
add
sbb
or
inc
lods
xor
lcall
push
sbb
scas
and
xchg
add
xor
mov
addb
and
pop
sbb
ja
mov
adcb
mov
enter
add
push
inc
or
mov
aad
loop
xor
lcall
jge
in
inc
mov
lea
pop
dec
add
xchg
test
loope
cmp
hlt
test
or
nop
jmp
mov
mov
sbbb
shlb
push
repnz
hlt
jb
sub
inc
cmp
add
add
xchg
add
sub
pause
gs
push
add
mov
insl
add
test
ret
sub
pop
cltd
lock
sbb
sbb
es
into
out
imul
xchg
test
push
in
jl
or
push
jge
dec
mov
sarb
lods
mov
rolb
repz
filds
inc
not
pop
ja
inc
xor
pop
and
popf
mov
dec
aam
cmp
and
lea
sbb
adc
das
insl
pop
jne
or
repz
js
adc
mov
jo
idivl
popf
push
les
imul
aam
xchg
add
xchg
mov
daa
lods
cwtl
push
sbb
pop
jae
inc
add
sub
mov
inc
push
incb
sub
outsb
xchg
fs
movsb
repz
in
cwtl
ljmp
jmp
stc
inc
add
cmp
mov
jbe
sbb
dec
rcrb
or
pop
push
push
mov
mov
jecxz
sbbb
loopne
incl
jmp
push
cmc
cli
nop
jle
icebp
sbb
add
in
pop
push
mov
iret
xchg
pop
pop
test
ret
test
loopne
jle
cwtl
pop
pop
push
fstpl
add
add
add
sub
inc
dec
xchg
lock
xlat
rorb
dec
aad
fsubrs
pop
xor
test
sbb
addl
js
pop
call
mull
pop
cmc
lds
cmovl
xchg
lret
movl
cmp
addr16
loop
lret
add
cmpsb
pop
pop
in
and
lahf
mov
dec
add
stc
insb
or
jne
aas
xor
dec
mov
jae,pn
dec
cmpsb
arpl
mov
enter
gs
xchg
mov
push
and
add
addb
out
testb
andl
push
mov
fsubrs
sti
js
test
mov
or
pop
mov
add
sbb
rclb
add
sbb
add
out
cmpb
imul
cld
push
shll
adc
fisubs
lock
pop
or
ss
add
add
sub
les
repz
or
adc
sub
push
dec
inc
xor
cmp
out
sbb
sub
jns
xor
sub
or
sbb
pop
pop
movl
mov
in
call
lods
pop
loopne
adc
bound
or
lea
dec
mov
xor
push
push
cmp
stc
je
jge
cmp
push
xor
sub
clc
add
sti
insl
rorl
add
adc
cmp
hlt
adc
bound
and
add
repnz
roll
arpl
stos
or
sub
test
sub
jl
dec
dec
push
adc
sahf
aad
xchg
dec
add
stos
int3
pushl
mov
sub
js
add
hlt
or
sbb
mov
fmuls
dec
clc
lcall
testb
xchg
imul
add
xor
push
xor
jecxz
repz
or
decb
orb
shlb
xchg
fsts
cmc
pusha
add
jns
and
neg
sbb
add
push
xchg
out
scas
add
pop
jbe
push
sub
push
add
stos
mov
mov
lahf
test
lods
fiaddl
movsb
dec
rorb
cwtl
adc
mov
dec
jne
sahf
shlb
xchg
cmp
pop
dec
mov
gs
imul
sbb
mov
mov
pop
aam
pshufw
das
ss
sub
test
add
fstpl
or
and
call
jno
es
mov
out
mov
add
cmpsb
add
imul
xchg
repz
sbb
sbb
push
add
mov
inc
icebp
mov
fadds
int
xor
test
push
sub
pop
xchg
cli
out
in
dec
roll
and
jns
ret
add
sub
jmp
xchg
add
jp
icebp
ret
cmp
je
push
dec
jno
mov
dec
scas
jnp
xchg
pusha
inc
mov
jp
out
ss
fwait
xor
add
sbb
pop
nop
insb
gs
out
insl
jnp
inc
call
push
int3
es
ljmp
loop
and
jae
push
es
mov
add
mov
test
hlt
pop
je
mov
int3
fdivrs
outsb
sub
xor
mov
jnp
xchg
adc
repnz
enter
dec
cmc
adc
add
cmp
or
loopne
xchg
gs
add
out
inc
cmc
stc
std
cmp
mov
cmpb
mov
adc
jl
and
dec
adc
add
pop
aas
add
ss
adc
jae
add
push
jno
mov
addb
adc
cmp
fdivs
call
push
ficomps
and
wrmsr
lahf
sbb
das
or
cld
data16
pop
jecxz
xor
or
dec
jmp
imul
nop
fsubrl
aas
icebp
pop
in
inc
mov
imul
adc
dec
jmp
pop
ljmp
inc
mov
sbb
add
xchg
xchg
ret
add
xchg
loop
call
popl
pop
pop
jbe
pop
pusha
and
aas
sub
int
xchg
mov
xor
adc
es
shl
bound
adc
nop
pop
adc
mov
cmp
sahf
add
dec
push
fsubrl
jns
adc
jo
push
push
add
rorl
xchg
jmp
test
add
sub
les
movsb
cmc
pusha
aas
and
cltd
pop
mov
mov
sti
aaa
add
lcall
add
mov
mov
xor
add
sahf
mov
movsb
add
shlb
fidivrs
push
inc
stc
pop
je
add
sub
mov
mov
test
xchg
sti
in
daa
mov
cmc
dec
add
inc
popa
hlt
add
adc
ds
daa
sbb
mov
cli
mov
stos
or
ja
mov
cmp
pop
jp
add
xchg
jecxz
push
inc
cwtl
push
add
adc
repnz
test
out
cwtl
jle
cltd
add
sbb
arpl
xor
jnp
insb
lret
mov
xor
mov
xor
out
add
call
ret
sbb
jne
rolb
mov
shlb
add
imul
aas
pop
shl
add
sub
movsb
movzwl
jg
sub
loop
sub
push
inc
inc
je
fxch
push
add
seta
mov
xlat
nop
rolb
pop
add
inc
dec
enter
ljmp
or
add
and
cli
ja
add
mov
jae
jno
test
inc
loope
mov
add
cbtw
mov
add
mov
dec
add
inc
or
dec
add
aam
test
std
mov
cmpsb
js
mov
dec
add
test
inc
xchg
int3
sub
add
inc
bound
daa
int3
dec
imul
loopne
lock
inc
jns
add
int3
ss
mov
xchg
jbe
int
cld
dec
adc
push
xor
jns
cmp
ljmp
sbb
or
add
lods
mov
cmpps
jl
add
mov
cmp
inc
add
jle
and
mov
cmc
or
in
cwtl
insb
pushf
das
add
data16
mov
stc
adc
cmpsl
cmc
pop
andb
repnz
popa
mov
in
and
mov
xchg
push
divb
add
jg
pusha
je
sti
jmp
fs
mov
sbb
cld
xlat
cmp
fistpll
and
fcomi
sbb
js
cmp
inc
or
aam
sbb
add
mov
addr16
cmp
add
ret
add
andb
hlt
sbb
jecxz
pop
test
add
cs
xlat
jmp
and
stos
mov
xchg
cli
ja
popf
out
js
mov
xchg
aas
lods
in
les
and
cmp
add
xor
shl
cli
add
dec
std
call
iret
ret
loope
ss
hlt
cltd
adc
jnp
insb
push
mov
pop
jp
cmp
shlb
xchg
loop
add
fists
mov
in
fxch
add
or
pushf
jmp
xor
pop
inc
test
mov
outsb
fildll
sub
sarl
ret
xchg
divl
jmp
or
and
clc
cmp
mov
jb
xchg
jbe
outsb
call
in
or
repz
ret
lods
loopne
add
iret
sbb
sbb
fs
or
lret
shlb
lock
adc
mov
push
aam
and
sub
sti
add
cltd
shrb
xor
or
add
mov
test
add
je
add
std
cltd
push
lock
cmpl
sub
leave
add
or
jo
rclb
test
mov
shrl
adc
mov
outsb
stc
mov
mov
les
imul
js
inc
cmp
les
inc
adc
out
jb
pop
mov
inc
push
testb
inc
mov
push
jbe
jb
add
cmc
jp
or
and
es
inc
push
je
iret
clc
or
bound
xchg
movsb
repz
sbb
mov
push
push
stc
mov
dec
sbb
mov
push
xchg
add
pusha
test
or
mov
or
outsb
shl
and
add
loopne
fs
mov
add
mov
lock
push
subl
cmp
mov
out
hlt
add
pop
lahf
dec
jge
jbe
add
cs
sbb
xchg
out
sbb
xor
adc
mov
inc
das
add
xchg
add
lods
and
loope
add
in
xchg
add
das
daa
aaa
add
out
idiv
jmp
dec
jno
add
dec
sbb
imul
aam
add
sbb
mov
sub
movb
cli
aaa
sahf
sarl
shlb
sarb
jb
push
xchg
fbstp
sub
add
aaa
sub
add
jge
rclb
int3
leave
add
push
daa
mov
add
js
sti
xor
add
adc
mov
vmovaps
inc
jo
cmp
xchg
adc
rcll
and
adc
adc
xchg
mov
test
mov
sbbb
or
nop
ret
mov
shrb
add
add
xchg
filds
pop
rcl
pop
loope
popa
jle
nop
faddl
mov
jp
cmpl
inc
add
std
pop
sbb
add
lock
stos
jge
andb
xchg
xorb
pop
mov
orb
fisttpll
es
cmp
subb
ret
mov
daa
sbb
sti
call
xchg
mov
popf
lahf
and
cwtl
sub
and
movsl
pop
test
movl
add
inc
push
cmp
lret
js
mov
jmp
rol
add
pop
in
lret
mov
or
sbb
loopne
and
add
adc
sub
sti
scas
filds
lods
ja
test
mov
cwtl
negl
sbbl
aam
dec
call
cmpsl
lret
roll
iret
xchg
in
ljmp
mov
call
push
add
arpl
adc
add
loop
shrb
movsb
test
test
iret
flds
scas
mov
cmpsl
leave
add
imul
add
mov
xorb
mov
dec
add
jge
sub
adc
mov
or
out
test
add
int3
dec
cwtl
push
cmp
lock
mov
jns
into
roll
lahf
aaa
add
pop
addb
mov
andb
lcall
scas
cmp
mov
add
dec
cmp
add
mov
movsb
jmp
add
leave
sub
sbb
addr16
and
popf
lcall
pop
jg
add
fstps
fs
ret
ljmp
cmp
fs
sbb
aas
cmp
subl
fiaddl
add
pop
jbe
dec
bound
out
and
sbb
pop
sti
data16
test
mov
jns
cmp
add
fiaddl
popa
adc
xor
popf
or
sub
pop
icebp
clc
insl
test
in
add
sti
inc
loop
and
syscall
xor
mov
sub
mov
es
enter
in
mov
inc
addb
jo
out
in
inc
je
cmp
dec
mov
insl
inc
add
faddl
jb
mov
add
xchg
int3
add
shrb
shl
test
add
sbb
clc
add
in
push
mov
or
and
repnz
add
mov
mov
push
aaa
popf
mov
cwtl
fs
xchg
loopne
sahf
push
and
cltd
addl
mov
outsb
subb
lahf
add
cmp
add
push
idivb
xchg
fisttpll
and
push
push
flds
es
popa
dec
gs
pop
movb
dec
cmp
sub
icebp
cmp
fadds
daa
jns
adc
stos
je
jmp
sahf
adc
ja
fsubp
mov
rcll
xchg
xchg
mov
jns
mov
ud1
repnz
hlt
ret
stos
add
and
fdivs
inc
dec
nop
pop
lock
lea
add
adc
lcall
sbb
or
ljmp
jl
mov
into
xor
inc
mov
mov
in
dec
call
pop
push
inc
inc
les
sub
cmp
pop
push
jno
fisubl
pop
out
mov
fs
mov
inc
add
jge
xor
mov
xchg
mov
add
pop
pop
cmpsb
push
cmpsl
jp
inc
data16
or
add
pop
cmp
pushf
pop
fcompl
pcmpeqd
mov
cmp
pop
push
dec
mov
iret
rcrb
or
out
cwtl
add
add
jae
faddp
ja
rolb
or
push
jle
jno
mov
cs
sub
sub
daa
enter
movsb
sub
mov
xor
mov
lds
sbb
dec
sarb
push
pop
cmc
sbb
loopne
int
aad
imulb
adc
jg
hlt
cli
push
xor
lock
filds
xchg
shrl
add
push
sti
dec
divb
and
add
add
dec
lods
pop
xor
mov
jle
movsl
ljmp
xor
jmp
or
add
loop
adc
outsb
ds
push
cmp
pop
or
clc
dec
testl
stc
aaa
dec
cmp
push
pushf
arpl
and
popf
add
mov
xchg
iret
xchg
mov
leave
add
jg
lret
test
rorl
jmp
nop
icebp
add
or
xor
xchg
gs
fsub
adc
or
repz
add
test
sbb
adc
mov
loopne
add
cmp
in
or
rsm
jp
mov
imul
sysenter
adc
add
sub
push
add
es
loopne
mov
xor
inc
jl
add
mov
pusha
adc
add
pop
into
ja
jno
add
shl
jmp
repz
loopne
fmull
ficoms
mov
iret
mov
divb
xchg
cmp
enter
jns
add
push
add
mov
inc
int3
add
mov
xchg
or
insb
pop
loope
sbb
dec
sub
icebp
add
push
mov
shl
fstpl
push
mov
or
pop
cmp
mov
add
sti
jmp
add
ficomps
iret
ja
or
sub
push
mov
pop
insl
test
mov
mov
add
sub
enter
nop
pusha
add
jb
cmp
inc
std
lock
push
xchg
jle
in
dec
jp
add
jmp
cmp
sub
push
xchg
jge
ljmp
arpl
mov
jl
add
loop
sub
mov
adc
jecxz
outsl
mov
shlb
ds
loopne
sbb
call
and
add
pop
sbb
jnp
dec
je
add
xor
pop
xor
add
negb
sub
jo
aas
add
dec
inc
aad
sbb
sti
inc
nop
rolb
rorb
outsb
iret
dec
addb
jmp
mov
mov
add
sbb
jle
pop
xchg
add
test
or
popf
jb
nop
mov
jge
add
xchg
call
and
push
cmpsb
mov
cwtl
and
cmpb
adc
add
jnp
add
push
inc
jle
sub
mov
add
sub
push
lock
in
rcr
pop
jae
loop
xchg
xor
inc
je
jo
sbb
xchg
hlt
push
push
mov
subb
aaa
sbb
in
push
mov
push
push
cli
addb
jmp
imulb
sahf
push
add
mov
mov
add
xchg
cltd
rcrb
stc
lods
cwtl
pop
test
mov
mov
xlat
mov
fsubl
cwtl
movsb
push
ss
sub
mov
push
loopne
movsb
loop
add
inc
mov
cmp
sbb
push
jb
xor
enter
lods
add
lahf
add
pop
ljmp
test
mov
xlat
mov
jmp
add
xchg
mov
sbb
test
aam
test
cwtl
test
mov
inc
mov
mov
js
repz
aaa
sbb
mov
cmp
mov
cmc
mov
nop
lods
jp
add
xor
data16
cmpsl
mov
cmp
mov
pop
pusha
fwait
mov
mov
test
movsl
add
lea
sahf
inc
jae
or
xor
pop
and
add
push
push
inc
shrb
nop
test
mov
add
pop
add
lea
call
xchg
push
int3
adc
rolb
or
mov
jp
add
mov
roll
add
pop
idivl
mov
jo
mov
lea
loope
jmp
out
jne
inc
jecxz
ficompl
std
mov
frstor
pushf
faddl
flds
sbb
push
mov
mov
mov
cmp
insb
mov
mov
popa
dec
xchg
arpl
mov
xlat
sub
int
fsubl
pop
aam
je
mov
add
dec
add
xor
cmpsl
call
stos
cmp
loop
adc
pop
pop
xor
add
imul
scas
inc
je
in
jbe
jno
add
cmc
mov
push
cwtl
jg
subb
punpckhbw
test
lock
pop
mov
shr
xchg
push
sbb
mov
add
push
xchg
add
fbld
scas
push
add
inc
push
mov
fdivrl
add
pop
test
js
add
pusha
sbb
data16
add
testb
add
xchg
or
out
jp
mov
fisttps
inc
dec
scas
imul
and
addr16
and
sbb
aas
mov
pop
lret
add
ret
add
cmp
popf
xor
inc
jb
mov
adc
pop
insl
aam
adc
sbb
stos
pop
test
and
movl
lret
add
lods
stc
jg
add
loopne
add
addl
scas
hlt
movsl
shll
cmp
int
sub
add
insb
push
nop
jg
clc
add
shrl
cmp
shrl
jo
dec
mov
or
adc
add
inc
cmp
imull
sbb
daa
and
add
add
idiv
lcall
xchg
outsb
insl
fdivrl
mov
pop
nop
cltd
dec
imul
lock
add
sub
test
fistpll
mov
adc
cmp
add
lea
outsl
jnp
xchg
cmp
inc
jl
andb
cmc
stos
sub
jg
test
add
fnclex
negl
in
dec
add
jo
xchg
lcall
cmp
imul
cmp
mov
rcrb
mov
rclb
sbb
movsb
adc
or
ucomiss
mov
lea
xor
and
inc
daa
push
pop
insb
iret
rcrl
sub
imul
mov
loop
cltd
pop
xor
add
fadds
add
repz
xchg
movsl
cmc
and
mov
andb
std
inc
sub
add
rcrb
push
push
mov
and
inc
jl
imul
xchg
mov
rolb
xchg
add
nop
inc
loop
and
and
add
ljmp
dec
data16
or
aas
cmp
lock
xor
mov
mov
cmpsb
cld
insl
aam
lcall
push
fs
sub
sub
add
cmp
cld
cmpsl
add
cltd
mul
mov
call
jae
mov
add
mov
sbb
sub
add
test
scas
mov
push
cvttps2pi
adc
stos
das
pop
je
sub
pop
lahf
jp
pushf
sub
subb
lock
push
dec
repz
xor
add
mov
or
sti
pop
pop
icebp
add
xchg
daa
out
int3
cli
adcb
add
jp
jb
xor
aas
pusha
add
sti
cmp
ja
test
cmp
ds
xor
enter
jne
or
mov
rorl
repnz
dec
mov
imul
mov
call
into
pop
jo
int
mov
add
inc
leave
and
cmp
cwtl
gs
enter
call
ljmp
pusha
fistpll
cld
mov
add
push
and
faddl
push
inc
rolb
test
rclb
fimuls
inc
push
pop
push
lcall
sti
mov
mov
add
add
mov
xchg
insb
call
aam
jmp
add
xlat
dec
sbb
push
aad
add
xchg
jne
lahf
rcrb
imul
jmp
stos
lcall
hlt
pushf
or
fisubl
in
mov
push
xor
mov
push
push
lea
pop
jmp
pushf
nop
iret
fwait
test
pop
mov
pop
mov
add
fcomp
cmpsl
in
test
nop
push
sbb
mov
inc
hlt
add
xchg
push
cmpb
sbb
xor
ss
push
in
adcb
int3
jnp
in
int
sub
adc
adc
inc
push
xchg
cmp
shl
aam
sbb
adcb
xor
jle
adc
xchg
inc
add
mov
enter
cmp
pop
dec
mov
shl
add
ret
xchg
movsb
inc
orb
mov
or
and
aam
js
add
or
call
cmp
or
jno
mov
iret
pop
movsl
loope
add
mov
inc
pop
add
add
pushf
push
pop
sbb
xchg
leave
or
sti
xor
and
les
jno
enter
push
inc
inc
sbb
add
out
je
insl
movsl
xor
inc
add
mov
mov
out
mov
lret
xchg
mov
popf
adc
pop
sub
and
pop
and
sti
leave
dec
adc
xchg
xor
insb
daa
add
cmp
loope
pushf
fdivp
push
add
adc
mov
enter
and
outsb
sarl
int3
add
adc
add
sti
push
pop
xor
cld
add
add
push
and
fldl
dec
jbe
fwait
out
jl
inc
loope
dec
movb
jnp
ret
je
rcrb
popf
pop
add
call
fidivrs
and
je
arpl
add
push
iret
orb
out
fildl
dec
sub
mov
test
add
sbb
clc
jbe
add
lods
clc
mov
stc
scas
mov
inc
les
nop
xchg
xor
out
faddl
ret
fucomi
lret
add
pusha
xor
addr16
jae
test
xchg
jg
arpl
adc
pop
repnz
and
add
sbb
insl
aas
and
add
sub
shlb
jl
add
mov
repz
dec
test
and
inc
mov
and
mov
dec
shlb
xchg
dec
scas
sub
cltd
dec
repz
jno
xor
ret
into
popa
pop
pop
inc
call
movsb
xor
sbb
and
enter
mov
sbb
or
and
add
rclb
loope
xchg
add
lahf
sub
fsubrs
orb
dec
pop
enter
cmp
jmp
iret
inc
faddl
dec
ror
lret
nop
lcall
or
xchg
and
sbb
adc
movzbl
jmp
stos
jbe
cmp
mov
inc
sahf
shrl
nop
xor
inc
cmp
hlt
imul
add
push
movsb
mov
push
jg
add
mov
cwtl
add
jne
xor
jmp
inc
sbbl
fldenv
lret
add
fwait
and
and
daa
or
dec
adc
outsb
nop
xchg
arpl
fcompl
outsl
mov
mov
or
jo
add
sub
or
cmp
sub
add
pusha
mov
faddp
add
xchg
sbb
mov
inc
mov
cmp
mov
adc
frstor
pop
sbb
fcomps
dec
jg
xchg
shll
or
pop
in
push
xor
sub
cmp
mov
add
mov
loopne
adc
outsl
cmp
test
mov
adc
cmpsb
and
outsl
movsb
sub
xchg
add
dec
add
outsb
stos
sub
jns
xchg
add
pop
aam
jmp
add
rol
add
jae
inc
std
adc
loopne
add
add
cmp
clc
xchg
sbb
dec
sahf
mov
scas
add
pushf
sub
lods
in
xor
jge
outsb
mov
jae
testb
add
lds
or
push
add
pop
inc
mov
add
iret
push
jbe
mov
adc
jb
pop
std
mov
xchg
orb
pushf
adc
fdivs
adc
sarl
add
push
scas
add
lea
mov
popf
inc
scas
add
or
out
ss
push
insl
mov
inc
mov
xchg
sub
je
mov
std
sub
out
push
pop
or
mov
insb
inc
cld
enter
cltd
testl
jne
lret
dec
pop
mov
add
mov
push
add
icebp
push
xchg
inc
add
push
cmp
add
repnz
add
and
inc
dec
push
ss
or
add
push
or
ds
xorb
loopne
adc
pusha
xlat
inc
mov
jno
lret
jge
loope
ret
cli
orl
addl
lods
cmc
or
and
xchg
push
shlb
jae
movsb
fdivrs
loopne
dec
xchg
addb
add
push
lret
mulb
add
dec
je
flds
cmpsb
mov
loop
sub
shrb
leave
mov
add
add
cmp
shlb
jge
enter
fcomps
loop
cmp
add
dec
cmpsb
xchg
add
int3
jo
les
popf
bound
testl
out
xor
pusha
test
add
arpl
scas
dec
jecxz
cs
hlt
out
stc
fdivr
jp
rol
popa
dec
call
add
mov
sbb
and
xor
add
add
push
or
or
cmp
adc
inc
xor
hlt
mov
lock
xor
cli
sub
mov
xor
lock
nop
dec
jp
adc
imul
out
adc
stos
clc
xor
add
push
outsb
in
push
mov
popa
ja
scas
cltd
fwait
test
add
scas
jnp
out
sbb
push
mov
stos
dec
mov
adc
sahf
add
sbb
pop
jg
add
mov
and
and
fcmovnu
cwtl
jbe
pop
sbb
xchg
push
arpl
jne
add
fs
mov
outsb
pop
dec
inc
iret
test
les
rorb
incl
cmp
vmwrite
mov
adc
pop
xor
icebp
rolb
lcall
pop
imul
roll
std
jb
cltd
pushf
adc
adcb
lahf
insb
jge
xchg
add
mov
push
or
mov
pop
and
jmp
movsl
add
scas
sbb
mov
addr16
rcrl
dec
loopne
jle
push
jge
dec
inc
mov
shr
icebp
in
popa
or
add
xchg
insl
fcoms
cmp
push
scas
pop
mov
adc
movsb
sbb
add
or
or
out
mov
cli
arpl
pop
add
mov
jbe
je
stc
xchg
cld
loop
je
loop
jb
xchg
mov
cmp
stc
in
sbb
cli
jle
add
popa
push
or
test
xlat
cmovnp
pop
fidivrs
roll
sbb
repnz
rorb
mov
xorb
adc
mov
or
or
dec
cmc
lret
jo
add
frstor
repnz
loopne
push
in
int3
std
add
sarb
cmp
into
jne
mov
mov
pushf
add
ret
aad
pop
out
add
mov
push
pop
adc
jns
jecxz
inc
shll
cmp
push
ss
inc
out
push
add
loope
sbbl
cs
pop
xchg
xchg
das
xor
lods
inc
and
pop
xchg
pop
dec
lret
mov
out
jno
mov
jl
sbb
mov
rclb
cmp
hlt
add
mov
xor
int
ja
dec
ds
push
fldl2t
sbb
scas
pop
adc
fildll
insb
addb
fdivs
int3
xor
and
aam
add
test
and
add
sbb
pop
add
aas
jne
jns
pusha
in
cmpb
xchg
outsb
lret
mov
xchg
pop
lods
fcoml
xchg
dec
fxch
adc
dec
mov
and
cmpb
in
or
mov
add
jmp
mov
clc
mov
jecxz
sbb
sbb
xchg
mov
movsb
xchg
shll
mov
int3
add
les
xor
and
cmp
fdivrl
std
rcll
push
loop
push
xor
shrb
leave
lods
daa
aas
xor
mov
dec
add
mov
add
sub
push
std
pop
test
stos
mov
enter
inc
orb
ficoms
add
popf
je
pop
aad
lcall
cmp
xor
pop
or
stc
or
fildll
lret
ret
add
arpl
jne
mov
xchg
push
nop
mov
mov
xor
or
nop
lret
cmpsl
push
repz
jmp
fsts
js
sub
xlat
pop
push
add
movups
call
out
xor
js
dec
add
in
int3
inc
inc
lock
cmp
push
mov
add
mov
xchg
dec
scas
push
pop
cli
mov
les
sbbb
mov
xor
xchg
or
aaa
push
sub
pushf
pop
stos
inc
enter
call
ficompl
push
roll
adc
aam
test
jne
sahf
cld
cmp
lods
push
inc
add
jecxz
jo
mov
adc
lods
adc
and
inc
xor
mov
pop
es
lret
iret
push
jns
imul
xchg
inc
add
iret
call
aam
sbb
cmpsb
pop
movl
push
pop
repnz
and
out
jnp
aas
mov
add
mov
popf
or
jecxz
lods
nop
adc
sbb
mov
sbb
or
sub
xchg
divl
shlb
cmp
clc
pop
push
push
daa
mov
add
jecxz
dec
or
dec
xchg
pop
test
rclb
lea
inc
hlt
xchg
inc
test
inc
mov
fdivs
lea
mov
jne
pop
mov
mov
add
rol
mov
push
call
test
mov
pop
inc
test
xchg
adc
inc
adc
cmp
int3
sarb
mov
ja
shrb
add
jge
sbbl
lds
lret
in
add
scas
filds
mov
insl
push
push
add
xorb
xchg
mov
les
or
pop
add
fld
jne
dec
movsb
pop
push
xor
outsl
or
in
inc
ja
pushf
mov
addr16
outsb
bound
insl
mov
add
jg
out
sarb
out
cmp
sub
notl
pop
ss
xchg
popf
jae
int3
pop
fidivl
cwtl
pop
out
fsubl
sbb
pop
bound
or
loop
jb
add
inc
aad
cmpsl
pop
xchg
loopne
jge
pushf
pop
lods
add
dec
or
leave
aam
and
xor
push
stc
add
pop
and
test
or
sub
out
add
cltd
jae
sub
inc
push
lea
adc
lock
xor
sbb
ret
adc
sub
jae
or
mov
mov
inc
lock
test
mov
clc
insl
cmp
cwtl
pop
add
inc
lret
lea
mov
stc
jo
popf
mov
pop
cs
cmc
push
loopne
add
movsb
test
movsl
mov
mov
or
stos
pop
and
or
lahf
fadds
inc
imul
insb
ss
add
add
sub
or
sub
push
and
inc
add
stos
sti
mov
jl
mov
or
adcl
les
inc
push
add
inc
pusha
mov
cmp
mov
add
icebp
lahf
sahf
lods
test
scas
leave
jae
xor
call
sbb
xor
or
add
out
fnstcw
mov
mov
sub
shlb
mov
adc
dec
push
sub
test
inc
sub
add
stc
cs
out
ret
pusha
jge
add
mov
inc
xchg
movups
call
sub
pop
fmul
mov
cmp
push
sarl
sub
scas
add
call
pop
mov
les
inc
roll
push
loope
mov
stc
scas
fistl
subl
mov
sbb
xchg
mov
add
mov
dec
lea
jae
cld
scas
jae
sub
addb
aas
cld
pop
sbb
sub
push
and
loopne
addl
sub
dec
dec
mov
add
or
std
loope
arpl
mov
pextrw
xor
loop
cmp
orb
mov
push
cmpsb
inc
repnz
shrb
leave
add
inc
adcb
dec
add
sub
cs
add
mov
adc
int
mov
hlt
and
outsb
adc
jae
cmp
cmp
cli
add
hlt
cmp
addl
rcrb
rcrb
dec
xor
adc
sarl
adc
cmp
pop
js
jecxz
shl
daa
in
jo
sbb
push
add
or
das
xorl
pusha
das
jno
and
push
leave
int3
xlat
xchg
xor
out
mov
fs
fistl
mov
lods
add
lret
xor
sub
sub
xchg
mov
lock
add
sbb
scas
pop
or
jb
jnp
push
loop
test
xlat
mov
cmc
or
sub
cmp
or
push
enter
push
push
adc
inc
or
nop
lcall
xlat
jae
sbb
hlt
push
orb
inc
js
lahf
test
pop
subb
dec
dec
add
and
shlb
add
lods
xchg
xchg
mov
mov
test
ljmp
incb
or
jge
loopne
push
shlb
push
fs
sbb
pusha
xor
adc
rcll
mov
mov
lds
xor
sbb
pop
ss
cmp
inc
push
fchs
xchg
fisubl
int
sub
sbb
or
mov
push
xchg
push
sbbl
mov
inc
push
and
stc
push
jae
pusha
lds
add
mov
test
in
popf
push
add
sub
lods
sub
dec
inc
cmp
rorb
fistl
pop
and
sbb
lods
add
cmc
dec
sarl
testl
pusha
jmp
imul
xor
fistpl
add
push
mov
cmpsb
loopne
add
lcall
inc
jge
dec
gs
arpl
je
xor
stos
iret
loopne
lahf
fs
cmp
insb
js
cmc
mov
aaa
inc
mov
add
sbb
mov
adc
sbb
mov
stos
xchg
shrl
lret
pop
inc
jge
inc
push
nop
adc
add
es
add
xchg
fldl
add
cli
dec
outsl
incb
pop
xor
push
and
xor
push
stc
sub
addb
xchg
loop
out
out
fidivl
ds
repz
dec
inc
cmp
add
mov
outsl
xorb
pop
cmp
sbbb
push
cmp
shrl
out
add
pop
pushf
add
sub
jg
scas
or
femms
cmc
in
pop
push
add
fimull
lret
xchg
pop
lcall
or
push
or
into
pop
testl
enter
push
push
pop
out
xlat
jb
test
aam
scas
add
icebp
and
adc
insb
ret
leave
out
loop
cmp
in
repz
push
or
imul
sbb
xchg
out
sub
mov
mov
aas
test
stos
jg
add
xchg
lahf
push
inc
or
shl
inc
dec
ljmp
dec
addb
and
jns,pt
mov
lcall
pop
fnsave
xchg
lahf
jecxz
mov
lock
aam
push
jne
into
rolb
arpl
or
add
mov
cmp
ss
out
mov
movsl
add
ss
jnp
test
insb
inc
add
subl
add
jl
xchg
fadd
dec
push
int3
mov
xor
dec
int
imul
sbb
mov
std
add
repnz
stos
add
in
shlb
ret
cmpsl
test
lock
fcompl
stos
ljmp
out
add
icebp
shlb
int
mov
orb
cld
fcomp
and
fcmovu
xchg
cmc
add
or
sub
cmp
cmp
pop
xchg
xor
scas
rcll
popf
inc
daa
rclb
imul
add
adc
sbb
xorb
pushf
out
sbbb
xchg
les
inc
xacquire
cltd
add
mov
cmpb
xor
or
fwait
jmp
fdivrs
cltd
add
mov
push
ficompl
lds
fmuls
pop
inc
jmp
adc
int
enter
and
or
adc
stos
pop
add
in
jnp
jl
push
mov
notb
xchg
add
mov
xchg
inc
add
mov
jle
mov
insl
add
test
popa
mov
lods
ret
inc
out
mov
adc
nop
sti
mov
hlt
clc
inc
jle
dec
mov
inc
xchg
mov
jnp
mov
push
aas
or
addr16
or
and
inc
push
lret
lcall
mov
sbb
lock
add
mov
adc
cmp
add
sub
in
ds
jnp
movsl
and
jle
pop
loope
jo
pop
imul
mov
pop
or
in
xor
mov
clc
pusha
mov
mov
jno
popa
dec
dec
and
jg
cmpsl
not
and
add
clc
push
adc
fstps
xchg
pop
dec
or
dec
mov
pop
push
ss
lock
add
jecxz
jb
jno
pusha
inc
ds
test
or
sub
scas
add
lock
les
pop
jb
rclb
add
mov
or
lods
push
add
push
arpl
cmpsl
inc
xchg
and
outsl
add
cmp
dec
je
jns
add
punpckhbw
incl
call
add
jns
push
ljmp
nop
shlb
cmpsb
in
imul
add
mov
clc
push
addl
xor
adc
cmp
pushf
rcr
sub
lods
add
jnp
inc
add
mov
pusha
ljmp
sahf
rol
mov
dec
add
inc
inc
icebp
imul
or
loop
add
jb
dec
orb
push
push
lcall
inc
loopne
mov
mov
and
jle
xchg
add
fnstenv
in
xchg
jg
add
mov
push
aaa
sbb
dec
mov
or
pop
repz
loopne
push
push
test
sbb
hlt
data16
pop
ret
rolb
lret
js
and
dec
pop
inc
add
fcoml
cmp
subl
sub
hlt
cmp
cmp
cmp
test
add
movsl
jle
lahf
shl
mov
add
addl
push
jb
dec
ljmp
outsb
and
dec
adc
lds
xor
sbb
add
push
fisttps
mov
add
popf
js
sbb
mov
xor
adc
or
adc
outsb
jge
loop
cmp
jg
add
xchg
div
fidivrl
or
xor
call
dec
stc
dec
pop
das
add
mov
sbb
add
dec
add
sti
dec
push
lea
test
addb
fsts
mov
pop
lahf
dec
inc
inc
sbb
push
cs
or
les
pop
loopne
into
and
sub
add
push
int
mov
add
xchg
mov
add
xorl
xchg
add
xor
add
xor
jnp
stos
push
test
dec
hlt
stos
cmp
pop
cmpb
test
lcall
mov
cmp
sbb
add
mov
xchg
mov
add
pop
and
enter
mov
pop
adcl
inc
pop
lods
push
xor
insb
mov
jbe
pop
loopne
and
cwtl
leave
sub
std
fs
imul
mull
fstps
in
jge
add
shll
sub
in
cmp
xorb
cli
call
fcmovnb
int
dec
jae
adc
mov
push
inc
jns
js
fcmovnbe
add
addr16
fcoml
enter
in
pop
pop
mov
lods
jb
cld
mov
push
mov
xchg
pushf
setg
xor
in
cmpsb
cmp
iret
jo
jg
loope
ss
adc
ja
pop
add
test
rorb
add
and
in
addl
xchg
sbb
add
jp
sub
adc
mov
push
add
arpl
sub
mov
xchg
pop
xchg
adc
test
loop
inc
stc
out
imul
mov
cmp
mov
cmp
aam
add
rorb
jecxz
pushf
aaa
jns
add
adc
jbe
and
fcom
mov
and
lret
cmp
pusha
inc
ficoms
or
movsb
xor
fldcw
mov
push
ja
xlat
lds
mov
add
jl
bound
aaa
inc
shl
aas
popa
pop
inc
push
stc
and
or
cli
add
mov
lods
inc
inc
shll
jb
add
inc
jmp
add
aaa
daa
mov
cltd
or
leave
stc
mov
adc
pop
cmp
out
add
ret
jp
add
jno
clc
add
push
das
jae
movsl
pop
pop
mov
and
lock
sbb
xchg
mov
filds
imulb
dec
jmp
loopne
add
mov
ljmp
fcomps
insb
pop
and
es
inc
stos
imul
or
or
add
int
iret
in
push
popf
hlt
mov
div
jo
arpl
sbb
and
in
add
add
sti
mov
rclb
lret
test
mov
ret
or
xor
cmc
mov
dec
ss
add
pop
sub
cwtl
or
imul
adc
sahf
push
cld
xchg
fadd
push
arpl
push
and
int3
in
mul
dec
les
cmp
nop
xor
dec
add
xor
loopne
mov
mov
or
add
scas
popf
cmp
and
cs
push
add
test
xor
repz
add
nop
sahf
fisubs
pop
sbb
clc
xor
int3
or
add
leave
popa
or
mov
mov
push
sti
lcall
and
add
mov
dec
cwtl
xor
add
sbb
xchg
les
popa
add
xor
push
inc
pop
dec
adc
loopne
add
sub
adc
push
mov
mov
or
mov
and
mulb
test
mov
add
arpl
dec
adc
sub
mov
add
adc
movsl
mov
xchg
or
cs
cwtl
xchg
addb
cmpsb
add
jmp
xchg
add
cwtl
mov
xchg
hlt
mov
mov
adc
jle
pop
sub
jge
jo
enter
movsb
lods
mov
mov
sub
add
mov
jl
ret
ret
out
pop
cmpsb
leave
xchg
test
add
xchg
add
mov
mov
xchg
mov
scas
add
jmp
cwtl
movsl
jg
sub
sbb
adc
and
xor
xchg
in
fsubl
ror
adc
dec
frstor
mov
add
and
ja
push
or
jg
push
add
inc
fcomps
jo
test
mov
arpl
insl
and
jb
adc
xchg
add
pushl
add
mov
and
add
xchg
or
popa
mov
mov
aad
arpl
jecxz
ds
add
cmp
mov
ficomps
pusha
or
pop
mov
add
push
push
xor
mov
pop
hlt
inc
js
pusha
add
pop
jp
cmpsb
add
xchg
je
clc
lret
test
pusha
sbb
lock
incl
popf
ret
aam
push
sub
cmp
fwait
std
cmp
and
add
out
clc
mov
xchg
xchg
stos
jl
pop
add
jne
syscall
sub
or
or
jg
enter
xor
mov
mov
aad
mov
mov
cs
loopne
gs
mov
xchg
lods
cltd
or
xchg
push
shrl
xchg
add
mov
xchg
cmp
rol
add
xchg
lods
or
and
sahf
add
enter
dec
mulb
ds
aas
je
jae
arpl
add
aaa
mov
dec
cmp
clc
ss
testb
inc
add
sub
add
clc
dec
pop
add
add
lods
stos
mov
jmp
enter
sarb
lret
lcall
testb
movsb
clc
or
cli
sbb
addl
hlt
lahf
xor
pop
scas
fisttps
add
sbb
les
adc
outsl
add
xchg
inc
loopne
iret
inc
cs
add
mov
or
sbb
sti
sarl
jecxz
and
stc
int3
cmp
push
jns
xchg
add
mov
jmp
mov
loopne
jge
add
push
xor
inc
pushf
sti
add
mov
in
add
sub
jle
mov
ds
inc
xlat
shll
mov
std
add
out
addr16
sub
sub
cwtl
add
icebp
inc
ds
test
pslld
pop
cmpsb
loopne
incb
mov
sub
mov
shlb
jge
nop
test
jecxz
cli
out
loop
ret
add
pop
add
mov
aam
cld
sbb
out
ret
test
add
sbb
adc
je
xchg
or
popa
cmp
sbb
push
mov
pop
bound
pop
mov
ret
sbb
insl
sbb
and
subb
lea
push
jle
aas
push
xchg
pop
enter
mov
icebp
push
or
test
sbb
sub
inc
pop
mov
cli
inc
int
call
lret
test
add
ljmp
jp
xchg
sbb
out
adc
sbb
jne
imul
jp
jae
mov
inc
and
add
cwtl
sbb
mov
cmc
loopne
rcll
int3
fsub
in
pop
cld
insl
push
dec
fldcw
push
pop
mov
push
loopne
cld
push
pop
loop
pop
aad
jo
je
mov
inc
int3
adc
pop
das
test
xchg
clc
sahf
sbb
sub
add
push
jl
mov
push
sub
mov
adc
fdivr
xchg
jecxz
subl
lds
call
imul
outsb
mov
or
and
and
jae
imul
bound
xchg
or
and
inc
lcall
mov
mov
inc
xchg
cmpsb
test
test
loop
add
mov
mov
movb
rcr
and
push
shll
negb
addb
add
xor
pop
pop
push
lahf
insl
push
pusha
fmuls
les
add
addr16
sub
loope
adc
mov
clc
or
loopne
jns
add
sub
mov
lret
and
add
mov
ja
xchg
inc
fldt
cmc
stos
fimuls
fadds
rcll
pop
js
cmp
sub
dec
pushf
push
push
mov
imul
mov
push
int3
sbb
iret
xchg
lea
add
mov
add
gs
add
dec
push
fsts
push
mov
jmp
lds
dec
add
jbe
dec
aam
push
aad
pop
into
dec
mov
add
lret
insb
push
xchg
add
mov
fldt
rclb
js
add
inc
hlt
insb
nop
inc
cwtl
pop
and
push
out
cmp
adc
sbbb
sub
aas
or
movsb
mov
in
test
mov
cs
adc
adc
test
sub
fmull
inc
sbb
cmc
or
les
incb
mov
pop
out
push
mov
pop
nop
add
int3
xchg
pop
and
mov
jbe
mov
jle
adc
xchg
sub
adcl
mov
or
leave
andb
jns
int
lock
clc
test
sbb
lods
cmp
dec
iret
stos
mov
sbb
out
pusha
xchg
and
cmpsl
scas
je
push
xor
sub
ljmp
pop
inc
push
ja
dec
add
xchg
sti
cltd
push
mov
repnz
add
xor
mov
or
lock
xchg
out
sbb
sti
add
pop
add
jg
jecxz
in
jp
sub
jmp
addb
psubusw
ss
xchg
or
lock
call
push
in
add
stc
or
dec
add
or
inc
xor
imul
mov
pusha
or
sub
into
add
mov
cltd
jle
pop
push
testb
setno
adc
jl
cmpb
imul
mov
insl
loop
iret
fcoms
mov
mov
add
out
jle
adc
insb
loop
and
pusha
cmp
mov
iret
je
pop
lods
cmp
fiadds
mov
fstps
lock
in
leave
out
xchg
add
sub
rcpps
mov
lcall
cmpsl
fs
xor
mov
and
push
adc
ret
mov
sbb
icebp
sbb
and
mov
lret
add
add
icebp
xchg
js
in
loopne
sti
mov
inc
shll
inc
test
ja
sbb
sbb
jne
xchg
xor
xor
mov
fbld
sub
xchg
xchg
adc
mov
test
push
adc
push
out
mov
call
and
add
imul
push
inc
repnz
in
sbb
add
lret
jns
call
cmc
sub
cmp
inc
mov
mov
lret
sub
lock
mov
popa
pop
add
xchg
movsb
pushf
cmp
inc
inc
or
sub
xor
loope
cmovle
xor
sbb
gs
fwait
push
push
cmp
test
arpl
jae
add
test
add
insl
jmp
data16
inc
mov
test
les
sub
or
mov
add
adc
sub
mov
inc
into
cmp
test
in
add
lahf
cmp
add
mov
push
add
stc
mov
mov
testb
sub
inc
lret
add
push
ljmp
dec
jl
xchg
rcrb
pop
push
or
mov
push
pop
lea
cwtl
fnstcw
imul
or
add
mov
das
std
mov
nop
dec
les
sub
inc
test
aas
repz
and
test
js
ljmp
subb
scas
push
add
xchg
test
cmp
lea
out
aam
jg
sbb
mov
jo
repnz
add
sub
cmp
pop
and
mov
add
repnz
inc
pop
sahf
fisttpl
mov
and
call
les
pop
adc
jge
pop
mov
loopne
sbb
adc
stos
push
xchg
shr
jge
adc
out
cltd
in
sub
mov
jmp
inc
inc
dec
jle
sbb
pushf
call
ljmp
mov
add
mov
xlat
and
and
dec
call
les
clc
jmp
mov
or
inc
push
pusha
fsubl
nop
add
loope
movsl
jae
popa
mov
pop
add
sub
arpl
inc
mov
pop
xchg
gs
pop
or
push
pop
mov
rcr
jecxz
loop
jl
adcb
push
daa
je
xor
enter
add
subl
sub
pop
rol
xor
cmpsb
jns
pop
xchg
jno
sub
cmpsl
lret
lahf
bound
popf
les
out
cli
add
dec
aas
inc
repz
adc
inc
aaa
xchg
xchg
push
add
xchg
xor
jg
jbe
call
and
insl
jmp
pop
add
pop
jno
adc
jp
add
inc
fildll
pop
adc
add
jge
jg
leave
add
fwait
into
imul
jo
outsl
adc
stc
clc
mov
jecxz
xorb
shlb
out
cld
stc
dec
add
fcoms
addr16
jmp
rcrb
add
loope
pop
and
loopne
daa
rclb
jge
pop
add
mov
adc
add
pop
or
outsl
loope
shr
jns
addr16
add
js,pt
sub
jl
cmp
jo
call
mov
cmc
shl
shll
imul
into
dec
loopne
lock
push
call
sbb
push
cmp
adc
dec
jecxz
mov
dec
sbb
and
and
call
inc
js
pop
insb
fxch
add
mov
in
out
hlt
cltd
bound
out
jl
dec
popf
mov
push
into
cmpsb
pop
and
fildll
pop
push
addb
mov
out
loopne
inc
pop
test
mov
jmp
add
mov
lea
enter
aam
ds
add
test
lock
mov
ds
push
fcompl
cld
add
inc
pushf
jno
mov
xor
int
adc
push
pop
pop
jne
add
mov
leave
add
mov
jae
push
lahf
push
divl
add
jnp
rolb
out
repz
xchg
add
in
jb
sbb
pop
add
pushf
adc
xor
xor
les
iret
nop
outsb
fabs
add
adc
pop
stos
fisttpll
arpl
je
jbe
dec
pop
int3
push
popf
add
iret
mov
adc
push
xor
cltd
add
ljmp
pop
inc
jo
imul
das
add
and
jbe
sub
add
xchg
push
in
jp
test
mov
cmpb
or
insl
dec
ljmp
shl
add
in
cwtl
mov
js
add
sbb
pop
push
dec
mov
shlb
aaa
add
inc
mov
clc
pop
pop
mov
pop
aad
outsl
push
or
and
cmpl
mov
pusha
inc
paddw
jge
or
cmp
ljmp
pop
add
and
sub
cwtl
or
jmp
xchg
mov
dec
xor
pop
add
add
out
add
jecxz
jle
push
dec
testb
gs
lret
aas
cmp
rcrb
int
cmp
xchg
push
ficomps
loope
jns
push
pop
jecxz
inc
rolb
xacquire
or
repz
lea
xor
jno
cli
or
fldcw
pop
sbb
cmpsl
das
add
cmp
out
xor
shlb
ds
pop
add
sbb
pop
push
dec
xchg
and
clc
push
inc
mov
lods
gs
dec
iret
loopne
and
pop
js
add
inc
dec
repz
out
sete
je
ja
nop
clc
or
dec
lods
pop
jge
mov
popa
push
add
adc
and
and
pop
inc
mov
ja
mov
pusha
idivl
icebp
cmc
hlt
sub
jmp
outsb
pop
call
pop
adc
js
add
rclb
jecxz
mov
push
rorb
roll
in
jno
mov
mov
test
in
and
add
shrb
lret
xor
adc
out
cmp
jg
dec
add
in
lods
or
in
mov
pop
jp
aas
ror
fsubrl
aam
add
jae
stos
push
int3
js
lock
mov
dec
outsl
xor
add
add
add
fmull
add
push
mov
add
adc
sbb
add
fdivrs
cmp
add
js
adc
sub
insb
sbb
into
shrb
aas
adc
clc
cmp
cli
or
js
aaa
lcall
xorb
push
cld
xor
out
pop
mov
rol
sub
add
push
add
test
pop
rcll
or
nop
jge
mov
andb
faddl
add
fsubp
inc
dec
stc
xor
imul
popa
leave
dec
push
add
jge
xor
mov
in
push
add
sub
mov
push
mov
test
adc
xor
add
jae
jbe
cmp
sbb
cld
addl
enter
daa
or
addr16
aad
mov
sbb
jae
adc
cmpsl
paddusb
rolb
outsb
push
add
fdiv
cwtl
add
je
adc
xlat
xor
mov
lds
pop
add
mov
pop
loop
xor
mov
pushf
lahf
pop
adc
jnp
cltd
xlat
sbb
mov
or
in
add
std
enter
test
rcll
sbb
mov
mov
dec
xor
cmp
mov
hlt
mov
outsl
in
sub
pushf
adc
xor
adcb
xor
add
mov
add
mov
dec
or
xor
test
push
jne
repz
mov
add
lods
dec
jle
jo
stc
pusha
add
dec
in
filds
cs
inc
scas
xor
xchg
xor
sahf
add
xor
push
mov
test
jmp
mov
or
test
add
mov
jle
add
in
cmp
icebp
mov
fiadds
rolb
add
fcoml
sub
add
mov
test
bound
repnz
imul
add
lods
dec
pop
mov
add
cmp
out
hlt
and
clc
bnd
add
xchg
nop
xchg
or
or
das
fs
fiadds
mov
in
xlat
ljmp
push
xor
leave
sbb
loope
fnstenv
mov
fiadds
clc
pushf
test
insl
add
cmp
int3
cli
lods
add
lret
das
loop
lea
cld
and
xlat
cmpsl
je
dec
mov
pop
jmp
into
mov
outsl
sub
adc
add
xchg
jp
pop
cmp
sbb
loop
add
pop
dec
jl
addl
cmp
daa
and
mov
loopne
pop
mov
mov
lahf
or
xchg
ja
pop
xchg
push
pop
add
fnsave
mov
mov
movsb
push
adc
inc
stos
mov
add
and
lock
mov
add
out
adc
pop
mov
add
mov
xor
pop
fildl
pop
lods
shl
jne
adc
incl
jbe
pop
movsl
xchg
adc
push
add
adc
pop
inc
ds
inc
ljmp
push
rol
mov
addl
lcall
pop
inc
and
mov
fadds
push
fmuls
subb
sub
in
and
mov
outsb
das
and
add
sub
xchg
arpl
fmul
daa
push
cmpsb
adc
js
movb
seto
popf
and
gs
sbb
lods
fwait
lahf
cmp
out
in
adc
mov
ret
js
jo
rcrl
jno
pushf
or
sbb
dec
push
test
mov
ret
arpl
inc
scas
or
stos
test
mov
xorb
push
insl
sbb
push
adc
int
pushf
bound
roll
js
add
daa
addr16
and
std
lea
fdivs
sub
shrb
add
test
scas
cmp
jno
add
in
addr16
in
pop
xchg
mov
add
dec
cmp
imul
add
mov
fidivl
push
pop
pop
xchg
add
pop
and
add
sub
and
mov
sbb
mov
into
adc
add
daa
bound
jo
enter
push
into
xor
sbb
push
jge
add
add
inc
xchg
mov
push
adc
and
fstp
adc
adc
insl
xor
fnsave
aam
lock
int3
or
xor
mov
sub
fcoms
pushf
sbbb
repnz
dec
or
mov
sti
mov
mov
xchg
add
dec
xor
cmp
mov
push
roll
aad
rorl
cmp
add
add
xor
xor
pop
dec
pause
xor
cwtl
das
mov
cmpsl
add
push
jg
push
adc
mov
stos
jge
ds
xchg
add
stos
jp
push
mov
add
imul
adc
fcomp
or
push
lret
ret
push
mov
inc
add
adc
repnz
pop
xor
add
subb
mov
out
add
popf
add
dec
mov
nop
pop
emms
pop
in
inc
addb
cmp
cmp
loopne
mov
ret
jmp
out
cmp
xor
sub
add
icebp
mov
inc
jo
out
call
cmp
outsb
fstps
into
dec
jle
orb
and
cmc
mov
dec
xor
add
push
xchg
orb
add
lds
pop
add
lock
mov
mov
std
mov
out
mov
popa
add
xchg
outsl
cli
push
add
xchg
adc
push
add
scas
push
into
test
test
cli
lds
hlt
lock
xlat
add
adc
arpl
sub
call
stos
enter
add
jecxz
cs
mov
test
out
cwtl
bound
cwtl
or
push
inc
lahf
jmp
call
sbb
sbb
int
inc
add
subb
cli
xchg
cwtl
adc
daa
push
adc
push
xchg
inc
and
fildll
enter
jg
js
and
jmp
add
outsb
popf
add
xor
stos
repnz
sbb
loopne
and
aad
mov
sub
scas
jge
pop
loope
enter
push
lods
xchg
cmp
cwtl
out
pushl
xchg
or
inc
ja
and
add
and
lods
imul
inc
add
sub
push
fcomps
daa
aas
xor
adc
fnstcw
jo
sbb
inc
stos
and
les
dec
cmp
add
adc
add
cwtl
arpl
and
sub
pusha
dec
fs
sti
stos
sahf
push
gs
hlt
cld
lea
mov
sub
add
push
lock
push
add
inc
aas
add
imul
sbb
add
out
fstps
xchg
add
mov
dec
lods
xchg
xor
jle
jne
add
cmp
sti
pop
mov
jb
cmpsl
or
mov
add
adc
adc
xchg
add
mov
dec
jno
out
jne
or
inc
fisubs
cmp
or
add
out
mov
loopne
iret
dec
sbb
rcll
lret
std
xlat
adc
jo
inc
xor
push
mov
add
adc
test
mov
arpl
push
cmc
push
fwait
adc
xor
dec
sbb
subb
in
jae
ja
add
pusha
ret
insl
cmp
add
push
shlb
pop
test
jns
jl
xorb
mov
cli
sahf
ror
xchg
or
jo
mov
scas
push
fnsave
mov
pop
pop
mov
push
fcoms
sbb
pop
cltd
out
daa
cmp
push
xchg
inc
ss
push
pop
add
subb
ja
add
mov
leave
xchg
subl
inc
xchg
jbe
xor
pop
add
popf
insb
xor
inc
mov
roll
jb
add
mov
iret
jge
add
bound
outsl
les
sub
mov
add
jne
jmp
mov
fsubs
or
sub
cmpb
dec
movb
lret
lods
mov
push
push
and
or
lcall
mov
push
or
incb
cmp
dec
push
xchg
pop
in
fwait
push
and
lcall
pop
dec
xchg
popa
sbb
cmp
mov
sbb
lret
lahf
subl
add
add
cmc
pop
mov
aad
xor
xchg
iret
pop
mov
pop
cli
add
push
in
das
addb
insb
ret
or
add
pop
sti
outsb
mov
mov
mov
add
xor
and
pop
sbb
pushf
daa
in
idivb
cmpsl
enter
call
or
outsl
mov
or
int3
frstor
add
test
add
mov
inc
add
mov
xchg
add
add
add
jmp
test
add
jno
dec
push
fimuls
pop
adcl
mov
sbb
add
fwait
dec
testb
adc
dec
jl
call
lods
lock
stc
addb
mov
add
and
std
in
in
mov
nop
sub
or
int3
cmp
mull
push
cmp
mov
jo
sbb
test
inc
sti
movsb
or
or
ljmp
inc
mov
pop
aaa
xor
rcrb
add
outsl
imul
sti
popf
call
inc
add
xor
xchg
cmp
mov
add
mov
pop
or
or
dec
mov
cmp
jl
pushf
inc
nop
cmp
arpl
mov
cmp
out
cld
out
rclb
adc
add
dec
jnp
cwtl
inc
and
shrb
add
fs
stc
aaa
shlb
pop
mov
mov
andl
xlat
out
std
fistpl
mov
in
in
xor
jge
data16
movsl
mov
xor
or
sar
mov
ds
popl
xchg
push
jne
pop
rcrb
jae
ret
sarb
add
arpl
pop
lods
fwait
sbb
pop
pushf
xor
icebp
das
popf
gs
sub
fcom
lods
data16
arpl
testl
invd
add
and
pusha
push
icebp
jo
add
aaa
aas
and
add
stos
fbstp
xor
icebp
pop
add
cli
mov
and
add
dec
gs
insl
sbb
scas
fdivrl
xchg
popf
add
cltd
dec
mov
sbb
dec
add
dec
xor
decl
mov
stc
cmp
cmp
add
hlt
add
and
ja
add
stc
cmp
add
mov
stc
push
aas
int3
xchg
add
test
or
ss
maskmovq
dec
inc
xorb
push
lret
clc
dec
pop
and
dec
in
mov
cmp
jae
js
fstps
testl
imul
xchg
stc
push
push
mov
in
mov
mov
movswl
pop
add
jbe
int
sti
arpl
inc
fldt
push
pop
mov
pushf
xchg
cmpsb
into
repnz
lock
jo
pop
mov
addr16
adc
inc
push
lahf
push
push
jns
add
jmp
subb
adc
sub
decb
ja
inc
pop
pusha
cwtl
fs
xchg
inc
adc
loope
adc
add
fiadds
std
jne,pt
xor
push
mov
ja
jb
call
push
cmp
imul
add
mov
mov
nop
push
add
outsl
or
add
fcmovne
add
lods
test
das
jmp
sub
cmp
add
adc
jne
add
push
mov
pop
dec
mov
adc
mov
xchg
adc
xchg
lcall
add
adc
sbb
add
inc
mov
fidivrl
or
pop
movsl
or
ljmp
push
daa
mov
xor
shr
mov
lret
add
push
pop
mov
add
add
stc
js
push
adc
add
in
ficompl
mov
add
push
in
loope
orb
add
add
rcr
mov
mov
hlt
cwtl
fistpll
maskmovq
mull
mov
loopne
int3
nop
and
into
fwait
push
lcall
adc
filds
iret
mov
movsl
xchg
xor
xchg
add
or
aad
push
xorb
int3
add
dec
sbbl
stos
ljmp
xchg
push
add
jb
push
pop
mov
or
lock
pop
imul
cmpsb
sbb
aad
xor
fnstcw
pop
inc
mov
add
inc
or
xchg
pop
dec
jno
dec
aad
add
and
xchg
cmp
add
js
bound
push
jns
loopne
dec
loop
inc
pop
mov
push
clc
ja
add
sti
rclb
ss
mov
outsb
andb
js
push
mov
add
xchg
cmp
je
add
pop
mov
cld
and
ret
adc
ds
adc
test
data16
pop
lahf
cmp
or
dec
mov
jmp
adc
xchg
push
add
in
into
adc
leave
cmp
sbb
sbb
fsubr
dec
add
popa
out
negb
jns
inc
sub
mov
push
int3
ret
xor
jbe
js
add
xchg
mov
add
jb
pop
and
in
fidivs
imul
nop
add
jo
sub
mov
imul
insb
sbb
inc
add
fnstcw
das
push
add
rol
jo
pop
into
sub
or
das
add
clc
dec
insb
sub
push
pop
popf
cmp
loope
push
add
xor
aam
jmp
scas
es
sbb
add
imul
or
andl
aam
inc
add
test
push
mov
push
fwait
shlb
iret
mov
in
lock
shlb
sub
pop
cmp
inc
jg
and
add
aad
insl
test
lds
lret
jno,pt
stos
movsl
add
mov
lods
add
dec
in
gs
add
mov
push
inc
or
ja
rorb
stos
jb
arpl
stc
cs
pop
add
sahf
shrl
jae
add
xor
jle
and
cmp
and
sub
in
iret
jl
inc
mov
out
cvttps2pi
cmp
les
add
push
leave
push
mov
mov
pop
mov
cli
pop
cmp
movsb
push
push
jns
stos
cmp
dec
daa
addb
popa
add
gs
add
notb
pop
stos
aas
add
nop
test
push
jl
pop
and
pusha
add
popa
inc
mov
jmp
hlt
push
cmpsl
adc
andl
fbld
pusha
push
xor
test
insb
enter
out
pop
sbb
and
sub
dec
idiv
mov
add
push
xchg
add
jno
mov
mov
enter
pushf
adcl
and
sbb
and
sbb
das
in
lahf
les
icebp
pop
lcall
mov
xchg
testl
and
mov
or
add
hlt
xchg
and
movsb
cs
inc
add
subl
inc
sbb
push
and
subl
pusha
and
or
sarb
jno
pop
mov
test
and
inc
sub
add
decl
bound
mov
xor
shrb
mov
xchg
mov
lods
xchg
mov
sub
or
cwtl
adc
add
addr16
imul
sti
xor
pop
lods
or
repz
or
sbb
movsb
iret
mov
add
xchg
clc
je
sbb
jecxz
fidivrs
pop
xchg
sbb
mov
rclb
pop
and
mov
into
xchg
adc
add
or
dec
add
adc
mov
dec
sub
fwait
mov
outsb
xor
movsl
mov
mov
inc
add
call
fwait
and
dec
mov
cvtps2pi
out
mov
test
lock
mov
call
mov
pop
sub
movsb
pop
test
sarl
aam
jle
adc
push
test
aad
js
call
adc
add
or
inc
adc
and
scas
out
je
add
jmp
sub
jns
push
fadds
dec
xchg
jg
test
les
das
data16
add
xchg
inc
shrb
add
add
outsb
arpl
sub
aad
pmaddwd
cwtl
add
mov
add
ja
xchg
imul
out
and
scas
inc
mov
das
cmp
in
sbb
dec
jg
cmp
call
lock
scas
in
sbb
into
add
movsl
push
push
xchg
cmp
in
inc
sub
or
add
scas
rcl
cmpsl
and
or
outsb
add
jns
jo
sbb
lods
sbb
mov
call
in
jnp
inc
icebp
push
xchg
testl
in
cld
aad
cwtl
or
lret
es
rorb
add
out
pushf
je
fs
jnp
and
inc
and
jnp
pop
push
movsb
orb
mov
add
inc
mov
add
push
xchg
xchg
pop
push
inc
mov
xor
and
in
add
jns
mov
stos
and
in
int
sbb
add
shrb
les
cmpl
sub
mov
es
movsb
in
repnz
mov
xor
orb
call
sbb
stos
testl
pusha
pop
es
and
in
aad
int
dec
shrb
loopne
jmp
add
dec
mov
int3
jb
jp
push
repnz
cmp
mov
adcb
mov
sbb
dec
scas
inc
sub
or
femms
xor
sbb
daa
incl
aas
mov
in
gs
rcll
repz
cmpsl
lods
and
bound
fisttps
push
jo
out
mov
jg
add
scas
movl
or
lahf
shr
cmp
mov
mov
cli
stos
bound
cwtl
add
dec
lcall
push
test
add
dec
aas
or
mov
add
mov
add
lahf
insb
sbb
test
push
jecxz
jp
rcrb
xchg
aas
pop
inc
test
fmuls
xor
pop
lock
popf
add
jmp
aam
loope
xor
mov
xchg
xor
mov
add
jg
sahf
adc
push
add
loopne
ret
pop
mov
pop
or
das
lret
push
xchg
or
mov
popf
sub
addb
in
jo
xchg
jmp
sbb
jp
popa
sub
rorl
sub
imul
scas
loop
fwait
xorl
cltd
push
sahf
jl
out
mov
movl
sbb
pusha
in
fs
iret
fnstcw
inc
int3
rclb
jne
cmp
jae
lret
in
sbb
or
sarb
push
out
call
mov
add
aam
pop
sub
push
xor
scas
adc
add
add
repz
out
repnz
add
hlt
testl
pop
call
pushf
cmc
jge
rcr
inc
push
sub
and
shll
sbb
lcall
jmp
fiadds
out
add
repz
shl
stc
rolb
jp
in
call
psrad
add
add
ror
inc
or
adc
sbb
or
jbe
add
movb
rolb
mov
sub
inc
dec
push
dec
dec
inc
mov
mov
dec
jns
push
mov
adc
push
adc
inc
stos
adc
and
or
lahf
nop
fiadds
cmc
mov
pushf
adc
rcll
push
je
out
rolb
cmp
sbb
sub
or
inc
jne
inc
shl
test
inc
and
enter
adc
and
shrb
jge
in
pop
xlat
call
lock
ficoms
ss
addr16
je
ds
add
inc
stc
out
add
js
adc
add
mov
dec
mov
sarb
cmp
imul
addb
lods
inc
jnp
enterw
add
dec
nopl
cmp
dec
outsl
push
xchg
sbb
int
lock
bound
push
mov
add
jmp
mov
loop
cmp
aad
lret
les
in
add
pop
dec
cmp
add
push
push
not
dec
mov
adc
dec
mov
cli
enter
or
scas
fwait
jle
jae
add
mov
mov
dec
in
cmpsl
repnz
sub
add
mov
js
sbb
mul
stos
mov
repz
pop
add
imul
arpl
xor
inc
aaa
jnp
pop
ror
add
xchg
mov
or
lea
fidivl
cwtl
and
rol
in
add
mov
or
sarb
and
int3
cli
push
or
cltd
loop
rolb
cmc
testl
xchg
pop
in
test
mov
pop
imul
inc
insb
test
scas
fmull
gs
xchg
jl
in
xor
pop
in
or
mov
call
adc
cmp
sub
in
enter
orl
dec
shlb
psrlq
iret
xchg
fnsave
adc
push
ljmp
int3
lods
or
out
movsb
sub
xchg
add
pop
adc
cwtl
add
xor
jl
pop
mov
cmp
sbb
ret
scas
repz
add
sub
and
rolb
ds
insl
fildl
je
sub
add
clc
add
add
das
push
xchg
adc
ror
daa
xchg
xor
lock
pop
push
orb
or
nop
test
cmpsb
push
add
imulb
jbe
add
push
test
add
dec
aaa
add
or
sbb
rcl
push
test
push
push
sbb
add
mov
inc
hlt
cmp
sar
orb
sbb
pop
xor
repz
add
xchg
stos
push
in
xchg
mov
dec
cs
add
mov
inc
add
or
xchg
test
adc
adc
inc
out
lock
outsl
mov
fldl
lcall
fidivrl
sbb
int3
sbb
adc
jo
ret
pushf
stos
in
xor
out
lods
xchg
arpl
add
mov
jne
add
fwait
jnp
or
jecxz
cwtl
pushf
test
and
mov
sbb
mov
jns
add
mov
xchg
pusha
and
lods
cli
sbb
inc
pushf
inc
push
mov
dec
mov
add
and
mov
arpl
sahf
adc
mov
shlb
dec
sub
inc
movsb
jecxz
and
imul
repnz
add
or
cmp
and
lret
and
cmp
es
add
add
icebp
enter
mov
jne
lahf
pusha
fsubrl
xchg
into
cmp
or
pusha
jmp
inc
sbb
jne
jno
pop
and
push
fadds
test
xor
repz
mull
aas
jno
pusha
jne
fnstsw
mov
rolb
ret
es
cmp
test
int3
mov
loope
test
enter
arpl
das
add
mov
add
and
or
loop
ret
shr
pop
int3
leave
pop
addl
pusha
jmp
jae
int
adc
std
mov
lahf
pop
notb
add
ja
outsb
fildll
cwtl
lea
pop
sar
xchg
push
test
add
adcb
xor
ja
mov
mov
add
adc
pop
add
push
dec
sub
push
dec
jne
add
out
or
loop
add
dec
aas
lahf
add
pop
dec
xor
inc
pop
ss
test
jbe
mov
pop
or
mov
icebp
push
shll
xchg
inc
or
out
xorb
pop
loop
sub
repz
popa
ret
or
jbe
or
cmpsb
cmp
inc
sbb
lock
xchg
pop
outsb
jp
fiadds
push
enter
add
call
mov
aas
addl
ret
cmp
inc
or
ss
add
pop
vpackssdw
hlt
daa
rorl
or
sub
or
call
xchg
add
pop
cmpsl
les
or
xorb
add
inc
jno
fs
cmp
add
ja
call
push
add
and
adc
push
sub
test
pop
pop
add
ja
test
add
loopne
push
push
mov
add
ret
dec
inc
data16
popa
imul
add
xchg
pop
les
push
pop
es
add
push
adc
add
rclb
fadd
sbb
jecxz
pop
push
push
mov
cwtl
nop
add
mov
arpl
jp
pusha
sbb
jnp
pop
out
pusha
ret
sub
gs
movsb
adc
or
mov
mov
add
lea
push
xchg
orl
jmp
cmova
jae
add
dec
jecxz
cli
xchg
roll
xchg
mov
and
stc
test
loope
adcb
je
or
xor
add
pusha
push
xor
cmpsl
mov
dec
cli
add
jmp
push
dec
and
stc
add
inc
jno
cmpb
nop
jle
or
shl
movsl
pop
add
sti
repnz
clc
test
jecxz
sbb
xor
addb
cld
test
pop
adc
call
pop
stos
add
adc
pop
dec
das
inc
xchg
mov
sub
push
and
adc
add
push
add
pop
and
pop
outsb
cld
inc
or
lods
out
add
mov
test
xor
add
sbb
sbb
mov
sbb
test
clc
push
push
rcr
hlt
mov
add
movl
pop
std
push
jnp
xchg
shlb
stos
repz
dec
jl
adc
and
cli
out
sbbb
add
fistpll
aas
sbbb
out
pop
subb
ret
das
insl
rorb
mov
mov
or
dec
outsb
jns
jb
or
cmpsl
fistps
loope
cli
aam
xor
pop
xchg
stos
mov
xchg
mov
add
jmp
inc
test
call
mov
jae
sub
shl
jmp
and
mov
adc
sarb
imul
sti
push
out
cmp
add
adc
push
iret
xchg
add
or
sbb
pop
xchg
adcb
jge
mov
mov
data16
adc
pop
add
in
mov
xlat
data16
jae
jle
fs
lea
jb
xor
loopne
jecxz
jp
adc
push
push
ret
jbe
add
cli
pop
sub
jnp
lds
js
cmp
jne
pop
scas
adc
xchg
xor
shlb
mov
jnp
aas
xchg
and
rolb
push
addr16
insb
mov
jo
testb
mov
fisttpl
cwtl
fistps
mul
mov
stos
pop
xor
loopne
jle
pop
in
movsl
pop
inc
mov
add
pop
loopne
sub
add
push
cmp
mov
jg
xchg
stos
fadds
lahf
cmp
push
xorb
repnz
out
pop
xor
add
or
or
movsb
add
pop
fadd
fwait
in
lea
xchg
sbb
mov
mov
add
or
test
mov
xor
push
cs
fwait
sbb
out
add
mov
push
add
cmp
add
out
add
inc
aaa
int
and
jne
pop
mov
testb
push
into
or
loop
add
arpl
mov
add
mov
aaa
jns
rolb
clc
adc
xchg
js
ljmp
adc
adcb
pop
xor
add
out
push
test
xor
popf
sbb
dec
jo
lods
pushf
push
push
cmp
pop
mov
loopne
mov
add
les
add
adc
shl
xchg
jo
fimull
add
inc
xor
jle
mov
cwtl
rcrb
ret
repz
inc
ftst
sub
add
xor
mov
push
or
cmp
loope
cmp
inc
popa
out
pushf
push
adc
imul
add
pop
lret
cmp
pop
roll
js
xchg
cmp
sbbl
lods
cmp
dec
pop
add
roll
mov
push
testl
shl
test
les
mov
adc
xchg
test
xor
cmpb
push
leave
or
dec
fnsave
arpl
scas
add
adc
inc
add
push
leave
shll
movups
mov
xchg
pop
mov
adc
outsb
das
clc
and
add
xchg
mov
scas
or
xor
push
ret
inc
lcall
add
lcall
sub
dec
add
pop
ret
scas
dec
stos
add
fsubl
movsb
cld
outsl
loope
clc
inc
pop
cmp
mov
popf
add
mov
cltd
fs
jne,pt
pushf
data16
and
imul
cmp
std
daa
dec
inc
add
push
sub
pop
in
xchg
fdivrs
adc
in
testb
in
clc
pop
jp
cmp
pop
xchg
xchg
andb
or
adc
jmp
mov
sbb
call
pop
push
into
jle
and
add
lahf
and
add
add
in
testl
xor
int3
vpaddd
inc
test
out
ja
add
ljmp
jbe
out
pop
in
or
push
mov
aad
arpl
sbb
lods
adc
xchg
adcb
adc
test
mov
mov
mov
mov
add
cmpsl
out
fchs
movsl
jb
mov
in
je
add
das
jne
sbbl
jg
add
faddp
stos
mov
sbb
add
clc
xor
repnz
div
mov
aad
ja
sbb
out
mov
dec
and
test
mov
sub
sbb
adc
ljmp
add
mov
push
or
mov
aas
rcrb
js
push
bound
mov
cmpsl
sub
rcrb
mov
ljmp
push
sub
inc
mov
jle
pop
mov
mov
jb
js
mov
cmc
dec
lret
add
aas
inc
push
orb
add
rcl
in
out
cmpsl
call
repnz
adc
cmp
sbbb
data16
mov
mov
lds
mov
inc
push
and
fisubrl
jg
icebp
fadds
out
xchg
aaa
repz
push
inc
add
testb
lret
adc
add
jmp
mov
cs
call
sub
add
dec
aam
je
add
out
shl
jg
movntps
imul
xor
add
jne
mov
mov
ljmp
icebp
add
sub
aas
out
ds
cmp
push
icebp
adcl
xchg
jp
mov
outsb
mov
inc
rcrb
addr16
dec
shll
nop
add
sti
add
outsb
mov
add
divb
add
aam
cwtl
mov
addb
int
in
sub
add
imul
ja
nop
add
loop
mov
sbb
hlt
push
mov
push
mov
jge
sbb
mov
xchg
xor
inc
mov
in
mov
push
push
shlb
cmc
mov
xor
mov
sbb
jg
loopne
jne
adc
add
push
scas
and
mov
adc
mov
dec
insl
cmp
add
ficompl
pop
xor
add
sbbb
jecxz
pusha
icebp
add
push
xor
cmpsb
pop
xor
fcmovb
sbb
adc
and
mov
and
dec
enter
add
ret
pushl
and
xchg
imul
pop
inc
sub
out
pop
mov
fistpl
or
shrd
add
gs
subl
dec
add
adc
orb
sbb
clc
aad
add
jbe
js
fbld
addb
and
add
fwait
sbb
daa
dec
ljmp
cmp
adcb
adc
xchg
addps
imul
dec
addb
inc
sub
sbb
iret
dec
add
mov
or
inc
xor
out
lahf
stos
add
push
push
cmp
aad
pusha
shr
adc
out
mov
add
pop
addl
mov
popa
ds
mov
mov
mov
fisttpll
enter
shlb
fldcw
rcrl
mov
push
cmpsb
repnz
jns
movsl
out
xor
mul
testl
std
adc
mov
repz
xchg
add
xor
out
inc
jno
add
xchg
push
aad
pop
sub
inc
repz
adc
out
mov
sti
jo
xor
inc
pop
subps
mov
pop
popa
iret
popf
jno
add
inc
cmp
sbb
mov
adc
cmp
push
test
sub
xor
inc
add
add
cmpsl
add
in
cli
enter
mov
push
adc
pusha
jp
into
mov
dec
iret
dec
es
pop
adc
xor
mov
outsb
out
add
add
pop
aaa
pop
out
ss
aas
add
inc
pop
nop
pusha
fsubl
fwait
jns
add
mov
les
pop
add
adc
pop
add
cmp
pop
pusha
ret
inc
lods
or
or
adc
and
lret
fisubl
mov
sub
xchg
xor
dec
sbb
ficoml
seta
out
into
cmp
sub
xor
dec
movsb
int3
iret
out
sbb
nop
in
sub
cmp
sub
js
inc
adc
aaa
in
dec
pusha
mov
push
divb
add
push
ficoms
inc
inc
cmp
jecxz
cmpb
out
cli
pop
push
fsub
jmp
mov
sbb
outsb
pop
in
call
jo
add
dec
add
xor
repz
add
rcrl
std
add
sbb
ja
mov
fld
xchg
shlb
arpl
jmp
mov
dec
add
or
push
pop
loopne
or
jge
cmp
in
imull
xchg
jg
lret
inc
fmull
jge
adc
clc
add
xchg
adc
cwtl
fcomi
or
push
cmc
stos
add
aam
xchg
lods
ret
add
out
out
repz
add
imul
orb
testl
rcrl
push
in
aas
filds
leave
lock
aad
sbb
add
out
pusha
cmc
jmp
scas
or
addb
push
dec
lods
add
xor
mov
imul
pusha
mov
pop
pusha
sub
ss
mov
sbb
testb
ret
add
iret
test
imul
inc
call
sahf
lahf
mov
adcl
sub
insl
roll
mov
ljmp
cmp
aam
outsl
jg
add
pushf
xchg
rcrb
sbb
loope
cmp
push
jns
out
outsb
jbe
xchg
sub
scas
mov
jo
dec
adc
jecxz
cmp
pop
bound
fcoms
push
divb
add
test
rcr
subl
inc
jl
push
test
add
and
fists
push
mov
dec
cmp
paddw
lock
xor
add
mov
and
dec
fwait
rolb
jne
jecxz
add
pushf
mov
repnz
lahf
add
dec
movsb
test
dec
add
mov
sub
cmp
es
and
jle
add
jns
mov
add
loopne
and
mov
jmp
scas
sti
in
movb
ds
add
mov
push
add
jo
addl
jg
mov
int3
dec
jno
or
stos
arpl
ja
add
sub
sbb
mov
dec
add
rorl
add
mov
pop
push
jle
add
add
inc
jb
loopne
push
mov
notb
out
xor
lret
sbb
cmpsl
inc
rorb
pop
mov
mov
add
add
mov
inc
in
adc
or
in
add
sub
jo
add
aas
ljmp
mov
out
xchg
add
inc
es
pop
xorl
and
inc
call
dec
xchg
lods
or
out
fcompl
mov
inc
mov
add
out
ja
loope
sub
cmp
add
or
sub
in
loopne
pop
push
add
inc
ret
aaa
dec
int3
add
push
add
aam
cmpsl
repnz
inc
popf
divb
inc
es
add
xchg
mov
mov
add
ljmp
add
and
push
icebp
sub
push
adc
jb
test
aad
leave
push
pop
test
mov
nop
mov
dec
int
cmp
xchg
inc
test
add
leave
ljmp
inc
and
and
xor
add
push
aad
daa
pushf
js
mov
dec
fwait
xlat
add
fadds
inc
mov
add
mov
pushaw
ret
popa
mov
cmp
fwait
mov
dec
sub
cmpsb
jge
push
cmpsl
dec
and
enter
or
or
add
push
pop
lods
mov
sub
aam
outsl
lcall
aaa
pop
sub
call
or
test
pop
aam
add
push
or
inc
push
call
pop
jge
test
stc
pop
or
std
pop
mov
into
and
adc
shld
sbb
shlb
sbb
inc
mov
add
pop
or
push
fildl
push
inc
sbb
add
rcrl
add
ja
adc
adc
orl
jg
add
pop
add
insl
cmp
add
cmp
dec
cmp
xor
adc
pop
int
add
shrb
mulb
ret
jge
dec
ja
cltd
mov
jmp
push
or
das
mov
fst
je
sub
push
add
jl
loopne
jecxz
nop
ret
add
jns
enter
xor
and
or
xchg
jo
pusha
insb
loop
les
jecxz
fsubrs
mov
dec
jnp
add
sbb
pop
in
test
jns
loope
sbb
mov
and
sbb
jnp
mov
gs
jle
dec
or
add
roll
stc
adc
sarb
push
push
and
or
into
xorb
or
cwtl
daa
adc
jge
pusha
iret
sub
jne
add
call
mov
je
xor
and
loope
add
pusha
daa
call
add
ljmp
add
add
je
add
fiadds
mov
add
lcall
xor
xchg
cmp
jno
inc
mov
push
lahf
dec
and
lret
imul
mov
gs
add
and
sub
inc
hlt
mov
add
push
cltd
push
xor
je
imulb
ret
rorb
cli
push
imul
mov
aas
sub
sub
mov
sbb
in
js
inc
pop
shl
adc
jne
cmpsb
add
dec
mov
add
inc
xchg
es
jecxz
add
pop
dec
iret
lods
popl
jge
push
clc
and
or
gs
imul
nop
xor
cmp
pushf
lds
sbb
add
loopne
ds
movsl
jo
or
fs
mov
repz
adc
push
iret
push
stos
or
pusha
push
push
xlat
call
repz
js
push
cli
loope
inc
push
jbe
dec
xchg
shll
fsubr
movsl
add
adc
mov
mov
xchg
mov
dec
out
and
movsb
jo
andl
adc
lds
enter
sbb
sub
mov
xorl
xor
or
and
mov
xchg
pop
push
inc
fcmovnbe
or
repnz
mov
cltd
in
add
xor
popl
incb
in
mov
inc
fcomi
inc
add
mov
pop
jae
xchg
nop
pop
popf
outsl
dec
pushw
adc
inc
and
adc
lret
adc
xor
dec
rol
jp
dec
add
pop
cmp
mov
rolb
repz
pop
addr16
or
jecxz
rolb
js
jge
add
dec
mov
ret
mov
cmc
xchg
fistl
xchg
pusha
add
adc
inc
push
je
jg
add
xchg
jb
jp
xor
add
decl
pushf
shlb
mov
stos
mov
cmpl
in
aad
icebp
js
push
push
add
sub
call
sub
js
add
subb
mov
sub
cmpsl
rol
in
inc
add
mov
pop
push
adc
sbb
cmp
mov
xchg
int3
js
loopne
sbb
popa
in
add
fiadds
std
add
popf
add
push
les
imul
stc
xchg
fistps
xchg
sbbb
and
es
push
sub
arpl
lcall
mov
xor
fdivl
dec
jae
add
test
dec
repnz
inc
lock
push
add
scas
cmpsb
add
and
push
rolb
mov
inc
mov
or
sub
in
jecxz
in
add
pushf
daa
nop
mov
out
push
adc
cmpsl
or
in
or
add
jp
pop
clc
addb
mov
inc
outsl
testl
movsb
dec
sbb
sbb
sbb
add
rcrb
aam
fdivr
add
or
das
fmull
int
mov
adc
test
subb
pop
jle
add
popf
jp
rcrl
jno
inc
nop
xor
mov
lea
orb
inc
push
aaa
lahf
sub
ss
xchg
lret
pop
data16
xor
bound
dec
sahf
pop
dec
cmp
mov
fstpl
add
popl
std
cmp
mov
jg
pushf
lret
call
add
sti
call
add
int3
cmpsb
in
iret
mov
and
add
arpl
mov
mov
add
cmpsb
jp
sbb
leave
add
mov
mov
mov
inc
adc
test
movsl
sub
mov
add
push
mov
popf
push
adc
add
arpl
add
sbb
add
mov
adc
sti
adc
cmpsl
pop
sub
int3
or
adc
cmp
mov
rcll
sbb
add
mov
rorl
popf
mov
sbbb
daa
and
inc
ja
add
shrl
add
jb
or
jle
pop
test
jbe
dec
ja
lock
mov
gs
and
or
ljmp
jae
mov
add
mov
xor
cs
jnp
add
outsl
test
fldcw
ja
pop
cwtl
out
jnp
lahf
adc
ds
add
xor
test
jge
jle
into
bound
andl
hlt
andb
insb
xlat
dec
inc
sarb
mov
xchg
jmp
add
pop
or
cli
add
sub
stos
add
adc
scas
sti
nop
xor
adc
push
add
or
imull
jmp
hlt
cmp
mov
dec
pop
jge
rcll
xor
and
addl
jae
mov
add
xchg
insb
push
jecxz
sbb
ds
cmp
or
rcll
call
mov
pop
and
push
lods
xor
mov
xlat
mov
push
pop
je
add
leave
xor
or
aam
mov
add
push
aad
sub
in
or
mov
adc
xchg
xchg
push
loopne
xchg
lcall
mov
sti
loop
push
and
inc
es
xchg
add
outsl
arpl
je
jnp
inc
shr
xchg
sti
add
inc
out
push
sbb
clc
test
add
stos
cmp
mov
lret
std
sbb
adc
jo
cmp
push
cmp
fistpll
dec
pusha
sbb
cmc
add
push
loop
dec
jg
add
pusha
nop
mov
imul
pushf
hlt
dec
test
xchg
rcl
and
and
jno
or
ss
lds
hlt
jg
shll
popa
nop
inc
orb
rolb
insb
test
dec
cmp
pusha
dec
sbb
enter
cmp
mov
jge
add
stc
test
push
cmpsb
push
aaa
in
enter
outsl
loope
orl
es
out
push
jbe
sub
add
nop
pop
inc
scas
or
movb
and
add
out
or
mov
jmp
xchg
mov
pop
add
push
push
push
push
jmp
push
xor
sti
shll
test
cmpsl
call
fadds
sub
lret
add
inc
adc
mov
mov
push
jno
add
mov
fst
sbb
stc
or
hlt
cli
mov
or
adc
add
aam
dec
mov
mov
add
push
mov
sub
add
pop
call
pop
add
lret
push
sarl
jo
jle
dec
sbbb
orb
xchg
scas
xchg
add
inc
rolb
add
pop
inc
loopne
cmpsb
sub
add
repnz
jecxz
rorb
stos
mov
add
fsubrs
xor
sbb
or
in
add
int3
pop
jne
es
add
sub
dec
ss
loopne
push
pop
out
shl
mov
push
pop
xor
pop
mov
shlb
and
xchg
add
outsb
add
xchg
fbld
test
or
test
xor
adc
sub
loopne
das
test
enter
add
loop
push
mul
nop
push
andb
add
sbbb
xor
cmp
xchg
and
or
add
lahf
dec
outsl
rcrb
add
sub
std
mov
xchg
add
mov
dec
or
add
mov
flds
lcall
lock
add
ljmp
les
mov
in
mov
nop
pop
lcall
in
lea
in
testb
fsubs
enter
xor
xor
cmpsl
jnp
add
test
nop
cmp
ss
insl
push
jnp
add
in
leave
jbe
sbb
andl
lock
subl
adc
lods
fs
imul
add
cmpsb
add
sbb
cmp
add
bound
daa
fsubp
or
xor
lahf
add
and
pop
adc
mov
dec
aaa
sub
push
jl
xor
xchg
into
jns
movsl
mov
pop
add
rol
dec
sbb
rorb
stos
push
adc
fs
cli
cmp
cmp
loop
sub
fcomps
jge
lock
cmpb
mov
add
lods
pusha
pushf
jb
rclb
mov
jno
add
jmp
inc
or
cmp
dec
addr16
addb
add
push
xor
ret
adc
add
pop
ja
mov
test
add
cmp
jb
jns
fwait
pcmpgtb
push
out
out
lods
sbb
xchg
pop
pop
sbb
inc
xchg
rcr
out
arpl
push
lea
jnp
mov
cmp
hlt
mov
and
mov
clc
sbbb
jne
leave
and
test
push
out
ss
lcall
sbb
pop
ret
and
sti
jo
cwtl
mov
add
ljmp
shll
pinsrw
shlb
sbb
adc
sub
dec
movl
lret
jle
shlb
pop
inc
push
inc
std
adcb
dec
or
sub
xchg
add
mov
rcrl
imul
add
popa
loope
imul
inc
ret
adc
jmp
cli
add
std
adc
add
aaa
mov
dec
inc
adc
sub
or
xor
jecxz
pop
and
sarb
aad
mov
inc
ds
inc
and
fldl
divl
and
inc
and
mov
mov
and
hlt
or
add
add
cld
mov
stos
inc
lds
xchg
add
cmpl
pushf
ret
dec
in
fadds
jnp
mov
xchg
pop
pop
sub
adc
fsubrl
and
inc
lock
psraw
out
sti
adc
add
int3
inc
scas
or
enter
arpl
inc
cli
push
subb
or
fists
fdivrs
add
mov
adc
mov
addr16
mov
push
mov
decl
and
or
push
int3
cmp
sub
ds
mov
inc
pop
or
fs
ss
dec
dec
mov
xor
test
add
addl
ret
out
mov
xor
clc
pop
jbe
sbbb
add
loopne
lcallw
icebp
dec
cmp
xor
stos
mov
sahf
mov
xor
and
add
lods
iret
fwait
dec
mov
dec
stos
adc
jb
lcall
adc
fnsave
add
xchg
ja
jbe
clc
imul
cmp
sub
add
adc
add
xchg
xchg
adc
cmp
mov
pop
xchg
rolb
insb
or
insb
popf
inc
cmc
pushf
or
add
xlat
sarb
fisubl
jmp
pop
ret
js
cs
or
jns
xchg
mov
jae
cmpsb
pop
ljmp
test
cs
mov
cs
dec
inc
push
addl
xchg
adc
adc
jmp
cmp
xor
mov
insb
cld
inc
dec
inc
mov
shlb
addl
lahf
jae
nop
mov
xor
pop
add
or
jg
insb
add
xor
add
sarb
mov
mov
push
stc
add
cld
sti
push
add
inc
or
push
testb
and
scas
xchg
add
sbb
push
inc
daa
imul
inc
mov
jnp
jae
add
mov
call
stos
pop
add
push
pop
cmp
inc
add
pop
ret
es
add
scas
push
inc
iret
push
mov
jl
nop
inc
pop
std
rolb
cmp
aad
loopne
adc
push
or
sbb
or
fstpl
add
loop
psubq
sub
mov
out
xchg
pusha
rorb
testb
outsb
sbb
rorb
hlt
mov
shr
cmp
dec
fwait
jb
lret
xor
pop
popa
xchg
pop
repz
adc
loop
fstl
addr16
and
add
inc
sti
mov
mov
xor
dec
mull
out
adc
imul
sbb
and
cmp
in
add
cld
pop
hlt
rorb
and
in
ss
add
mov
and
out
rolb
outsb
add
or
and
nop
add
test
xorl
and
inc
lahf
push
mov
aas
mov
xor
ret
cmp
imul
adc
or
neg
movsl
faddl
add
pop
xchg
adcb
add
lret
imul
faddl
inc
insl
push
sub
dec
imul
jno
or
enterw
pushf
push
add
xchg
jp
add
popf
fildl
nop
les
scas
add
fwait
dec
insl
call
scas
cltd
mov
jb
cmp
out
or
shlb
add
add
in
gs
or
push
push
movsb
add
jno
add
sub
jno
in
leave
pushf
insb
mov
iret
inc
mov
orl
add
sti
pop
and
fcmove
std
xchg
mov
push
out
popf
les
cli
lcall
lahf
xor
out
ja
add
js
subb
sub
fbld
add
jge
mov
cltd
cwtl
incb
insl
jmp
int
in
pop
ret
add
es
dec
inc
pop
xlat
lds
dec
jae
xor
out
xor
lods
cmc
neg
lcall
cld
cmp
test
sarl
jo
stc
scas
call
sub
mov
add
or
push
adc
decb
cmpb
pop
out
mov
daa
dec
pusha
test
sbb
mov
jl
sub
cmp
fwait
pxor
jns
inc
ss
lahf
dec
pop
cs
add
lods
mov
ja
mov
add
push
sbb
inc
pop
fadds
lock
inc
lahf
std
jnp
cmp
xor
iret
mov
scas
ret
xor
aas
cmpsl
in
or
add
in
icebp
insl
sbb
pop
jne
mov
dec
test
scas
cmpb
call
test
fadd
mov
adc
imul
cltd
jae
ss
out
fiaddl
mov
dec
les
sub
jae
int
insl
pop
adc
lea
push
adc
sbb
shlb
push
std
and
push
and
push
push
stc
add
jl
add
jns
jno
daa
or
dec
push
push
out
outsl
push
dec
add
sbb
out
mov
push
mov
dec
out
sub
and
mov
push
loopne
add
popa
sbb
mov
lea
and
dec
pusha
iret
cmovg
push
inc
mov
pcmpeqb
xchg
push
inc
mov
jg
push
jo
mov
lods
cmpsb
in
lock
aaa
cli
in
mov
leave
pop
push
incl
gs
jbe
inc
xor
adc
push
mov
popw
sbb
mov
sbb
imul
aas
outsl
out
test
pop
jmp
mov
les
add
jb
add
add
sub
adc
test
add
adc
inc
sub
xchg
pusha
sbb
cmp
mov
cmpb
mov
add
push
sub
add
movsl
rcrb
add
pop
lock
add
int3
daa
fiadds
iret
add
lods
jp
mov
loop
add
sub
clc
outsb
imul
add
jbe
jle
push
push
add
gs
sbb
pop
and
outsb
mov
ds
xor
or
sub
sbb
rorb
inc
lcall
jbe
out
sbb
data16
shrb
lock
rclb
pop
add
aaa
jecxz
rclb
add
pop
aam
jne
or
stos
test
loop
outsl
ds
add
xor
bound
rorl
test
out
or
sbb
xchg
pop
mov
pop
sbb
jb
loopne
pusha
ljmp
iret
notl
add
mov
add
mov
js
add
lret
jg
sbb
add
jle
out
hlt
mov
test
iret
xchg
rclb
testb
cld
adc
gs
in
scas
push
add
and
clc
jl
xchg
pushf
loope
and
add
fwait
mov
or
inc
add
add
in
xchg
mov
inc
shll
subl
cmp
bound
imulb
loop
mov
jns
jo
lods
jmp
bnd
scas
es
push
sub
add
outsl
inc
les
add
dec
test
dec
xchg
xchg
and
pop
insl
or
sub
pop
pop
test
cmpsb
mov
mov
pop
add
loop
mov
gs
mov
imul
shll
add
fstpt
repz
add
xlat
sti
mov
add
or
xchg
xor
adc
sahf
js
xlat
call
adc
jae
jno
adc
adc
movsb
leave
loopne
mov
outsb
add
cmp
sub
mov
pop
mov
adc
shll
inc
mov
mov
out
add
icebp
mov
sbb
frstor
lahf
vandps
dec
fsubrp
or
mov
push
cmpb
mov
mov
add
loope
sbb
add
call
gs
pop
jno
pop
pusha
andl
jg
add
int3
insb
movsb
loopne
aaa
or
mov
add
dec
jmp
scas
push
rolb
aas
loopne
sub
dec
lret
cmp
pop
fiadds
call
sbb
mov
pusha
rcll
mov
out
xchg
into
jecxz
push
in
and
imul
enter
lods
and
in
into
sub
add
inc
or
pop
nop
add
add
test
adc
enter
shlb
adc
dec
inc
xor
add
lock
cltd
aam
add
popa
es
mov
int3
xor
or
push
mov
add
adc
mov
arpl
pop
sub
ret
cmp
lods
add
movsl
jmp
lods
lea
push
add
jae
adc
and
jmp
add
je
nop
push
mov
enter
add
es
xorl
sbb
xor
mov
mov
xor
mov
push
sti
negb
add
mov
xchg
sub
jae
hlt
inc
mov
mov
and
push
adc
mov
mov
pop
sbb
pop
or
ror
pop
mov
nop
cmp
jl
add
xor
in
xchg
mov
ds
xor
add
ret
or
push
in
jb
test
iret
orb
sbb
xor
aas
incl
xor
loope
add
iret
adc
test
mov
pop
inc
xor
cld
clc
add
inc
lahf
aaa
flds
leave
xor
pop
fwait
add
addr16
push
or
adc
aam
test
fcoms
and
mov
enter
add
sahf
movsl
mov
cmpsb
fstp
add
nop
hlt
aam
pop
dec
into
add
lret
add
xor
lret
jge
push
add
dec
iret
shlb
leave
roll
mov
mov
or
adc
or
mov
jecxz
add
or
cmpb
in
cwtl
lahf
or
add
mov
add
and
and
xchg
mov
aas
dec
pushf
cmpb
add
pop
popl
mov
sbb
inc
xor
test
add
lock
mov
pavgb
lea
rcll
lds
mov
add
dec
call
xchg
int
add
insb
testl
fcoms
arpl
dec
add
jle
and
cmp
iret
loopne
loop
xor
popf
cmp
push
jmp
ret
repz
rcr
or
pop
mov
sbbb
mov
fcomp
stos
fstl
cmp
ja
or
adc
cmpb
pop
xchg
push
mov
add
pop
push
pop
enter
mov
repz
push
aas
jns
xor
das
jno
sar
add
jnp
js
es
adc
add
pop
sub
out
stc
add
adc
fimull
aad
jle
movsl
add
push
mov
pushf
mov
push
movb
ljmp
adc
inc
mov
addr16
add
inc
sbb
mov
aad
mov
push
test
out
or
gs
inc
xchg
and
mov
sub
sub
movsb
in
add
outsb
fnstsw
cld
ja,pt
outsl
sbb
in
add
mov
xchg
jp
nop
mov
xchg
add
dec
jmp
repz
jecxz
fmul
ljmp
push
mov
mov
aad
insb
xor
sub
movsb
jg
popf
sbb
jae
mov
and
cmpsl
dec
push
dec
xchg
or
push
lock
add
mov
and
faddl
in
adc
fdivr
and
mov
fisubrl
mov
int
pusha
repz
add
stos
add
mov
fcoml
int
lahf
push
mov
in
push
and
pop
add
cmpb
nop
or
jns
dec
push
pop
dec
aaa
sbb
outsl
lahf
inc
mov
dec
mov
add
or
inc
mov
call
in
int
push
sbb
stos
ror
add
cs
add
inc
xchg
mov
in
sbb
fs
add
nop
or
inc
jl
sub
cmp
dec
pop
stos
les
pop
daa
and
inc
xor
push
add
movb
lock
push
divl
cmp
and
fs
mulb
lahf
fdivr
adc
out
js
pushf
lods
lret
xor
mov
imulb
add
xchg
fsubl
mov
jns
xchg
ret
sbb
cld
les
mov
stc
xchg
push
loopne
popl
loope
cmp
pop
push
dec
int3
add
aad
sbb
adc
dec
cmp
add
add
pop
and
hlt
nop
or
ds
sub
hlt
add
imul
xchg
jl
pop
test
sbb
fadds
ftst
mov
mov
sbbb
cmpsb
repnz
stos
addr16
es
xchg
push
xor
add
iret
arpl
and
jns
or
push
std
and
dec
add
insl
aad
mov
add
jmp
add
cmpsb
rcll
and
aad
push
and
cltd
lahf
sarb
mov
add
pop
jmp
rcr
push
js
add
sbbl
les
add
mov
jno
xchg
jmp
xchg
rol
and
pop
pop
or
add
pop
clc
icebp
popa
fsub
loopne
push
mov
loopne
sub
xchg
sub
scas
cmpsl
gs
dec
aaa
xor
lar
sti
iret
inc
xchg
filds
xor
loope
aas
cmp
xchg
xchg
loopne
and
ds
je
push
xchg
cli
mov
jle
add
xor
outsl
cmp
data16
mov
xchg
aam
and
pop
enter
or
mov
addb
pop
pop
pop
cli
sbb
xchg
adc
xor
imul
out
int3
pop
cmp
jne
enter
xor
push
mov
push
mov
mov
add
adc
fwait
lods
popf
fsub
mov
dec
pop
mov
adc
mov
add
ljmp
faddl
cli
jne
inc
jb
ja
cmp
addb
sub
mov
xchg
aad
push
fdivs
addb
pop
sub
push
nop
xchg
add
cltd
lds
or
rcrl
sbb
add
mov
adc
add
filds
stos
add
lods
xchg
sbb
add
iret
sarb
xor
mov
xor
pop
fstl
xchg
jp
repz
adc
movsl
jae
push
in
fldt
fwait
ret
movsb
mov
sahf
push
push
cltd
fstps
jl
xor
in
lcall
xchg
add
jle
and
aam
mov
cmovae
jne
test
dec
fldt
iret
mov
mov
adc
pop
and
dec
outsl
stos
shlb
loope
add
fidivrs
xchg
aam
mov
inc
sub
add
aad
imul
pop
add
dec
cmp
cwtl
es
and
fld
xlat
addr16
sarl
pusha
jns
test
pusha
sub
outsl
loop
mov
inc
test
sub
shr
add
js
cld
or
adc
jecxz
lret
popf
jg
or
lods
sbb
push
add
adcb
jae
cmp
daa
mov
inc
pop
mov
add
out
insl
add
mov
adc
jecxz
adc
add
cmp
dec
shlb
dec
add
dec
sub
or
call
fiaddl
popa
mov
add
add
mov
loop
and
pop
cmp
gs
push
add
aaa
js
sbb
jno
xchg
popf
mov
mov
cmpsb
movsl
aad
arpl
dec
sbb
push
inc
add
int3
add
mov
cli
mov
jmp
aas
pushf
xchg
test
pushf
imul
or
sub
das
rcr
mov
xor
mov
pop
scas
xor
push
xor
mov
adc
or
neg
jmp
repnz
pushf
add
test
nop
shlb
mov
fistl
lods
push
addl
aas
fidivrl
pop
jo
xor
xor
mov
inc
fwait
and
stos
loopne
mov
rclb
outsl
cld
addr16
in
xchg
xorb
or
insb
rcrb
jo
xchg
xchg
adc
out
lret
imul
ja
and
mov
mov
pop
dec
dec
subl
cmc
in
in
add
xchg
decb
pop
adc
add
ja
outsb
pop
andb
scas
wrmsr
inc
enter
addl
xor
andb
jle
xor
lret
hlt
outsb
add
mov
lds
jns
mov
mov
xor
add
dec
fs
pop
inc
or
stos
std
into
xchg
add
sbb
fsts
mov
inc
cmp
add
xor
stc
sbb
std
add
outsb
add
sub
adc
aam
rorl
pop
mov
mov
push
add
ljmp
add
add
mov
ror
add
or
and
add
in
shl
pop
pusha
sti
shrb
dec
outsb
pop
and
js,pt
loope
dec
clc
add
inc
nop
mov
dec
sbb
xchg
sbb
push
sbb
cwtl
push
dec
xchg
fwait
cmp
cmp
jno
aad
in
jb
clc
daa
or
test
mov
pop
xchg
jl
movsb
pusha
pmaddwd
ja
push
sub
add
pop
adc
cs
add
imul
rolb
movsl
pop
divb
out
daa
roll
dec
les
fidivrl
add
or
aam
scas
push
add
and
adc
mov
add
in
cmp
testb
sub
pop
sub
lahf
sub
fcomp
push
pusha
lret
mov
xchg
wbinvd
mov
or
movsb
and
inc
inc
in
int
pop
mov
mov
enter
sahf
jns
insl
or
ja
pop
outsb
fs
add
pop
shlb
pusha
or
sbb
inc
icebp
mov
es
int3
std
cmp
test
push
jmp
jecxz
xchg
cmp
jbe
clc
fldt
loopne
add
fwait
leave
pop
jmp
cli
jp
push
dec
ret
xchg
xchg
leave
xor
flds
add
js
push
pop
cmp
cmp
aaa
mov
mov
xlat
dec
sbb
xor
push
mov
sub
shlb
test
jl
es
adc
loope
pop
jle
and
push
aam
add
dec
iret
xchg
mov
add
aad
inc
mov
lahf
mov
push
push
mov
mov
dec
add
push
xchg
sbb
pop
pop
mov
push
adc
sbb
movsb
inc
sbb
insl
das
add
adc
add
aas
mov
mov
adc
icebp
inc
mov
mov
or
add
jge
jnp
popf
jmp
sub
pusha
pusha
cwtl
adc
test
cmp
inc
rcrb
movsl
out
addl
cld
ds
jno
or
add
arpl
add
adc
cld
or
inc
add
pop
shll
push
cmp
pop
ficompl
mov
adc
pop
inc
sbb
add
aad
xchg
dec
adc
dec
imul
mov
add
dec
jb
jns
cmpsl
sub
pop
test
mov
stc
inc
testl
dec
adc
mov
add
loopne
add
ret
cmp
enter
push
add
jp
inc
aas
inc
repnz
scas
out
inc
and
or
pop
std
jae
mov
xor
adc
es
ds
sub
ja
inc
xor
aaa
popa
mov
or
ret
and
cmp
mov
call
cmp
cld
xchg
lret
jmp
mov
mov
cltd
push
or
xchg
ljmp
je
les
movsl
mov
adc
dec
jnp
add
addr16
mov
dec
xor
jl
mov
mov
push
inc
xchg
outsb
and
fcmovbe
lods
cwtl
push
inc
arpl
add
hlt
enter
mov
adc
add
inc
loop
mov
sbb
cmp
mov
add
mov
add
je
in
orb
dec
xchg
addr16
add
mov
pop
js
inc
sbb
cmp
pop
inc
std
scas
movsb
cmp
and
or
cli
mov
inc
clc
pop
scas
dec
add
push
arpl
rcrb
add
push
int3
test
testl
pusha
add
and
sub
pop
aaa
loope
hlt
pop
fidivs
xchg
scas
add
cmc
sub
iret
arpl
push
rcr
pop
add
loop
adc
or
in
xlat
mov
and
mov
add
lods
aas
adc
or
push
cli
xchg
subb
lret
and
add
shl
outsb
cmp
push
jnp
ret
scas
fwait
icebp
mov
sbb
xchg
rclb
es
cwtl
jle
dec
pop
xor
mov
je
sub
or
sbb
lods
outsb
push
leave
mov
pop
in
mov
pop
mov
outsb
test
pop
call
ss
mov
inc
xchg
sbb
mov
and
clc
xor
aad
inc
jae
add
clc
scas
sbb
mov
add
fnstenv
mov
dec
xorb
push
add
add
or
push
adcb
repnz
loopne
in
sub
nop
add
xchg
ljmp
testl
int
sub
adc
xchg
cld
mov
or
pop
je
adc
lods
enter
add
cld
dec
mov
xor
push
call
dec
dec
fadds
mov
out
adc
ja
cmp
roll
mov
insl
cli
out
mov
cmp
std
and
xor
add
xchg
cltd
and
jno
add
out
rcrl
jmp
fiadds
push
out
shrb
adc
dec
xchg
lcall
iret
sarb
and
dec
pop
mov
mov
andb
movl
out
jge
add
mov
xor
push
lret
pop
push
jne
push
xchg
add
sbb
dec
jp
add
mov
stc
add
xor
lahf
aam
rcrb
mov
adc
mov
push
test
negb
xchg
cmp
pusha
jecxz
lret
add
out
movsl
add
sub
add
roll
out
dec
xchg
jecxz
lcall
jns
daa
test
je
and
lods
pushf
ja
inc
add
js
adc
insl
outsl
testl
nop
test
loopew
lret
lods
adc
add
movsb
jg
into
mov
pop
inc
subb
xlat
and
lock
add
sub
cwtl
add
std
invd
outsb
rcl
add
push
xchg
jmp
dec
cld
xchg
mov
js
adc
aaa
int
mov
sbb
movsl
push
rolb
jge
dec
sub
test
jnp
ficoml
jle
insb
rcr
imul
ds
popa
xor
fs
add
jno
shlb
jo
add
fs
movsl
jb
stc
and
lods
hlt
push
adc
xchg
out
add
adc
pop
and
cli
jae
pusha
ds
fsubl
push
or
insl
addr16
lods
mov
sti
aaa
dec
and
cmp
inc
lahf
mov
adc
mov
push
repz
mov
mov
xor
inc
nop
ret
add
std
pusha
push
shlb
inc
cs
add
hlt
clc
fst
loope
mov
lods
pop
xchg
or
add
cmp
add
out
mov
movsb
cmc
jge
sbb
aad
adc
add
stc
adc
xchg
enter
jae
xor
jo
mov
outsb
cltd
les
sbb
xchg
xchg
fadd
cmp
mov
push
out
mov
mov
orb
jg
int3
outsb
pop
daa
mov
std
cmp
call
je
pop
dec
jns
adc
test
shr
mov
add
sbb
sbb
addr16
gs
int
adc
pop
mov
inc
add
ja
dec
ret
mov
stc
pop
test
pop
xor
movl
dec
inc
in
lds
dec
pop
add
add
sub
imul
and
mov
pop
push
dec
and
xchg
lods
roll
lret
xor
push
test
inc
movb
push
loope
jecxz
sahf
ror
push
push
sub
add
cmp
bound
shlb
mov
call
ss
lret
mov
mov
add
xchg
lods
mov
jo
lock
sbb
mov
adc
jge
cli
cwtl
push
or
add
and
mov
push
and
enter
loope
flds
pop
sub
divl
cli
and
mov
push
ds
add
testb
pop
jge
push
mov
cltd
test
ret
xchg
push
sbb
rclb
loope
fwait
ret
pop
out
sbbl
clc
pop
xor
xlat
add
or
out
mov
adc
xor
mov
adc
daa
test
mov
jne
cmp
xchg
mov
mul
cmpsl
mov
js
sbb
in
mov
hlt
xchg
add
adc
push
jo
or
or
pop
cmpb
sarb
cmp
clc
imul
adc
fwait
inc
and
mov
add
xor
push
lcall
loope
out
inc
add
push
xchg
inc
shl
popa
add
addb
mov
pop
ret
fimull
cwtl
push
add
fdivp
hlt
push
and
add
xor
pop
add
jae
sbb
imulb
loopne
sti
and
push
aas
sbb
add
add
sbb
jno
jp
jl
add
scas
stc
mov
lret
int3
or
test
dec
imul
xchg
pop
sbb
add
jae
ds
pop
fstpl
add
and
sub
push
pop
add
inc
pop
out
inc
cmp
loopne
pop
add
cmp
mov
mov
cmp
push
rcl
psrad
rcrl
mov
enter
adc
adc
xchg
pusha
addb
pop
arpl
out
cmovle
test
push
mov
fwait
add
fmuls
cmc
add
mov
mov
sbb
mov
xchg
lret
fidivrs
cmp
jp
add
sarb
out
push
mov
add
xor
mov
mov
ficoml
nop
inc
cmp
test
dec
inc
fnstcw
pop
jnp
sbbb
or
jge
dec
nop
xchg
pop
mov
bswap
and
movsl
scas
sub
push
nop
and
sub
add
add
push
mov
sub
movsl
inc
loopne
mov
cmp
dec
or
sbb
test
jmp
mov
jb
inc
mov
inc
popf
add
addb
pop
cmpl
jmp
daa
sub
es
push
clc
or
roll
sbb
xchg
mov
add
mov
cmpl
dec
xchg
jge
mov
imulb
out
arpl
add
cli
cmpl
add
cli
push
lock
add
inc
push
jle
cltd
test
cld
repnz
sbb
popf
sbb
and
cmpsb
add
xor
xchg
or
pop
popa
inc
jo
jns
or
and
xor
add
adc
bound
xchg
les
into
adc
js
or
dec
aam
sub
loop
mov
mov
mov
and
ret
mov
ja
adc
xchg
push
cwtl
movsb
mov
je
inc
movl
ret
inc
adc
xchg
mov
push
jmp
sarl
pusha
cmp
xchg
mov
sbb
call
jae
pop
jge
mov
add
divl
jne
adc
dec
add
jb
andb
adc
xchg
ss
movsb
sbb
jae
dec
push
add
pop
scas
xchg
push
or
dec
add
mov
je
adc
pop
inc
clc
call
add
ret
mov
das
inc
mov
std
mov
lods
mov
insl
inc
add
mov
sbb
pushf
xor
mov
push
movsl
mov
mov
mov
cmp
add
cmp
enter
jne
xor
mov
add
sub
bound
adcb
adc
mov
lock
int3
mov
mov
add
xchg
xor
inc
push
push
inc
mov
lock
arpl
adc
cs
fcoms
add
inc
and
push
pop
outsl
inc
fisubl
or
and
dec
dec
movl
ja
out
xor
out
pop
inc
xchg
addr16
mov
dec
sbb
pop
mov
fmull
push
pop
inc
mov
mov
or
fnstsw
test
sub
mov
pop
aas
dec
pop
orb
lahf
iret
sbb
cmp
or
jbe
pop
jno
stc
cmpsb
mov
sbb
mov
push
push
add
in
jle
movl
mov
cli
dec
into
adc
xor
sbb
dec
cmp
sub
hlt
pusha
mov
xor
or
pop
dec
int
and
inc
add
sbb
sti
jle
pop
push
inc
lcall
outsb
fs
shlb
dec
mov
repz
adc
lcall
ja
lods
int3
repnz
push
xchg
mov
nop
push
dec
pop
push
or
jg
idivl
add
fistps
faddl
insb
sbb
imul
aaa
xchg
or
and
add
out
jno
repz
loope
shl
jo
int
or
test
inc
dec
call
fwait
rcll
insl
push
pop
enter
leave
mov
pusha
js
je
mov
sub
and
sub
test
mov
inc
and
jmp
xchg
jl
add
lea
add
clc
add
lcall
pop
inc
out
push
adc
adc
mov
icebp
pusha
add
pop
add
sbb
out
in
adc
jns
shll
cmp
fidivl
fstpt
push
mov
mov
dec
mov
hlt
insl
std
jbe
add
jmp
fcmovb
adc
xchg
ret
loope
adc
push
clc
pop
add
lock
xlat
fwait
outsb
pop
sti
out
or
add
fstp
cmp
cs
sub
mov
rclb
add
mov
jmp
add
int3
cwtl
add
movsl
xchg
add
clc
xchg
or
mov
xor
xor
xor
lock
ljmp
loopne
or
add
int3
lea
mov
add
movsb
adc
push
pop
bound
ret
jle
mov
loope
icebp
add
inc
cmpsb
ret
mov
cmp
and
jecxz
xchg
push
and
arpl
jmp
and
mov
cmp
jl
xor
jbe
dec
mov
xor
mov
adc
js
inc
nop
xchg
out
imulb
mov
out
push
aad
sbb
pop
or
out
iret
enter
nop
or
lods
sub
sbb
fisttpl
xchg
subl
or
mov
ret
cmp
andb
dec
add
inc
xor
lock
enter
mov
test
or
push
pop
push
jo
sub
add
or
out
pushl
pop
lea
out
movb
fldenv
out
mov
repz
shlb
shl
andl
aam
cmp
sbb
in
or
sub
sbb
mov
mov
aam
lldt
adcw
sub
repz
ja
pushf
or
daa
das
popf
cmp
mov
mov
addr16
lods
mov
push
xchg
sub
sub
imul
fwait
mov
mov
mov
mov
mov
loop
test
xor
leave
shrl
js
aas
sahf
ja
lcall
out
inc
add
dec
cli
lret
mov
jge
lods
lock
dec
push
cmp
sub
mov
sub
sti
add
pop
stc
cmpsl
jg
add
jo
arpl
xchg
popa
mov
cmp
mov
jne
aaa
xor
enter
out
mov
pusha
add
shrb
sbb
fwait
pop
adc
and
add
push
in
jl
cmp
or
js
leave
negb
movsl
add
loopne
adc
fiadds
clc
mov
imul
jl
jb
in
rcll
mov
xlat
xchg
fstpt
dec
add
insb
and
cmp
inc
and
test
xorb
in
mov
pop
xchg
add
xchg
sub
in
lock
mov
pop
add
testb
xorb
js
push
sbb
push
mov
rorb
jb
add
int
or
adcb
stc
xchg
push
pop
add
dec
mov
adc
inc
push
popf
out
cvtdq2ps
jb
dec
clc
imul
add
cmc
das
outsb
nop
jmp
mov
lea
mov
shll
hlt
sbb
lds
fs
outsl
cmp
test
inc
les
sub
bound
imul
pop
add
icebp
push
dec
lods
test
mov
stos
and
fdivrs
add
fnstsw
mov
mov
xor
sbbl
lock
cli
sbb
add
or
add
aaa
pop
dec
sbb
dec
roll
in
orb
inc
cmp
adc
loope
jmp
in
notl
add
push
sbb
cmpb
rolb
push
mov
dec
ja
pop
negl
call
cmp
arpl
mov
dec
xchg
dec
lret
insb
cmp
pop
mov
lods
les
jmp
adc
cmpsb
add
jo
loopne
jnp
jmp
fadd
mov
add
fstl
pop
aam
icebp
adc
arpl
sub
xchg
imul
outsl
pop
clc
lcall
in
push
jmp
lods
cld
mov
dec
rcrb
in
add
fisubrl
dec
scas
mov
popa
jns
add
jg
add
push
lock
push
int
std
fwait
adc
sbb
mov
add
mov
add
movsl
cmpsl
pop
stc
cmp
inc
sbb
xor
andl
jg
ret
dec
das
inc
stc
repnz
xorb
mov
jnp
inc
pop
outsb
mov
js
stos
cmp
sti
add
mov
sub
aaa
pop
nop
inc
push
stc
jle
andl
insb
adc
addr16
inc
and
xor
add
jp
push
add
push
adcb
arpl
out
scas
xchg
inc
in
test
pop
popa
adcl
loopne
jns
out
mov
push
add
test
xor
test
faddl
imul
out
add
jl
out
ds
outsl
sbb
rcll
push
xchg
std
jae
mov
dec
test
xchg
js
sub
mov
dec
mov
add
sub
add
pop
cmpb
sbb
mov
dec
mov
cld
inc
push
iret
and
adc
hlt
pop
aaa
adc
iret
pop
mov
daa
add
and
push
sub
pop
or
jge
add
mov
fnstsw
lret
jge
test
enter
adc
add
adc
xchg
add
and
add
dec
mov
push
nop
scas
adc
xchg
xlat
xchg
add
xchg
mov
add
push
pusha
aam
addb
sub
lret
gs
sti
push
das
call
xchg
push
lock
add
je
cmp
incl
stos
add
add
js
jmp
movsl
push
mov
sbb
cmc
add
mov
pop
outsl
add
clc
repz
sarb
loope
dec
mov
dec
mov
hlt
ret
mov
add
xchg
pop
lock
nop
pop
add
in
dec
add
fldcw
xlat
lock
push
dec
mov
pushl
sub
test
jno
aad
inc
in
std
jg
xlat
dec
fistps
test
or
fs
mov
ror
add
jge
stos
jl
loope
stos
pushf
add
mov
pop
mov
psubsb
add
stc
add
mov
lret
add
jecxz
and
mov
nop
repz
add
and
insb
fsubr
push
push
mov
lahf
ficompl
mov
xchg
ss
fdivrl
sbb
cld
jp
and
pop
js
lods
je
jae
inc
xchg
mov
enter
add
aas
aam
inc
and
scas
addb
ljmp
and
int
xchg
std
add
inc
incb
imul
test
and
xchg
ret
cld
addr16
incb
add
mov
psrad
jecxz
xor
divl
test
sti
xchg
shll
lahf
aas
push
aad
xlat
cmp
lcall
mov
out
add
fnstenv
add
movsl
jge
add
push
gs
call
xchg
dec
adc
lcall
or
mov
testl
ja
or
push
repz
lcall
add
add
pop
cmpsl
dec
add
mov
add
jmp
cmp
mov
add
and
add
xor
sbb
pop
xchg
fsubrl
insb
xchg
xor
inc
inc
mov
hlt
cltd
lods
adc
fidivl
test
adc
pop
xchg
fisubl
in
xor
xchg
and
push
push
mov
xchg
pop
xor
xlat
int3
imul
or
pop
cwtl
loopne
push
stc
roll
mov
outsl
pop
jge
sete
lcall
repz
test
add
orb
lret
add
out
aas
cmp
push
add
addb
into
out
add
jl
or
sub
int
mov
sbb
add
and
mov
mov
push
xlat
pop
add
mov
mov
add
hlt
add
push
cmp
pop
test
in
pop
push
ds
push
les
mov
push
pusha
enter
sbb
push
mov
incl
andb
cmp
cmp
push
fadds
inc
aas
in
add
fs
adc
stos
dec
dec
mov
add
cmp
pop
aad
push
push
pop
pusha
add
andb
pushf
cmp
mov
mov
mov
ror
in
and
lret
fs
push
add
into
out
xlat
rcrb
lret
stos
sub
aam
jmp
arpl
sub
xchg
or
outsl
push
movsl
es
loopne
rcll
aam
fldt
repz
lock
or
push
mov
add
xchg
sbb
sub
push
cltd
and
shll
jae
lcall
imul
out
test
sub
inc
add
push
dec
leave
inc
xchg
push
dec
mov
mov
jge
les
fadds
push
mov
add
daa
adc
rclb
je
xor
out
sub
sbb
xchg
or
lods
sub
nop
xor
fadds
fisubrl
and
mov
jno
mov
add
jnp
add
fimuls
repnz
pop
imul
add
neg
addr16
adc
mov
orl
ss
xor
repz
mov
subb
cmp
sbb
add
pushf
push
and
cmpsb
cs
jne
in
xlat
out
mov
in
hlt
daa
lods
jge
sbb
adc
andb
or
ja
mov
jno
jecxz
push
shr
mov
xchg
sahf
mov
ret
cmp
outsb
sub
sbb
jns
add
test
mov
mov
jae
mov
sbb
pop
sub
dec
or
inc
sbbl
inc
adc
inc
sbb
repnz
xor
cmp
mov
sub
stos
sbb
cmc
cmp
mov
enter
xor
cltd
jmp
push
clc
cmp
adc
add
dec
inc
out
mov
or
pop
call
add
push
inc
in
and
jae
sbb
fadds
stc
enter
add
add
dec
add
std
and
ja
inc
sbb
jae
and
cltd
jbe
call
cmp
push
cmc
mov
ja
add
pop
por
dec
cmp
push
push
ret
popf
mov
lds
aad
rcpps
and
adc
add
sbb
les
cmp
pop
mov
sbbb
push
xor
clc
add
jae
or
fnstenv
cmp
fwait
dec
pop
add
push
bswap
xor
repnz
rolb
rorb
imul
lods
xor
jge
enter
xchg
xchg
loop
rcr
cmp
fsubl
dec
push
mov
data16
sarb
mov
push
sub
mov
jmp
add
mov
adc
dec
jl
ja
add
mov
push
add
sbb
dec
enter
rclb
and
pop
add
jno
add
xor
mov
dec
cmp
xchg
orb
mov
add
popf
jbe
enter
adc
push
jae
xor
incl
pop
add
xor
lahf
mov
adc
in
ja
cmovnp
movsb
mov
lret
sbb
fsub
add
std
dec
orb
nop
in
fnstcw
inc
adc
jb
in
lods
ja
add
jns
je
loope
in
and
pop
push
aam
push
and
jle
cli
add
adc
inc
add
add
sub
arpl
enter
add
imul
lods
rclb
or
xor
loopne
in
add
xchg
js
add
jbe
sbb
add
nop
cltd
pop
int3
popa
sbb
add
out
push
jmp
mov
cmpsl
jl
kortestw
add
inc
pushf
lock
nop
out
adc
inc
stc
add
out
mov
xchg
in
or
outsb
inc
orb
lods
int3
push
cld
sub
add
or
roll
dec
mov
inc
cmc
cld
add
adc
lcall
add
adc
add
xor
and
aam
add
dec
outsb
inc
add
ja
jg
add
jnp
insl
iret
test
pusha
fcomi
jo
push
add
stos
pop
cli
rcl
es
and
add
sbb
das
sub
cmp
repnz
sbb
popf
pop
dec
gs
leave
and
cmp
push
mov
lock
stos
and
in
mov
cmp
in
mov
add
mov
mov
sar
ret
cmp
jbe
aaa
sub
add
incb
filds
into
out
ret
outsb
add
sub
iret
mov
stc
sbb
insl
cmpb
hlt
imul
or
les
fucomi
lds
cmp
pop
pushf
xor
jae
xchg
mov
mov
gs
add
xor
dec
in
pop
repz
call
iret
mov
xchg
shlb
add
mov
push
add
loopne
mov
mov
mov
add
mov
or
fsubs
jne
add
inc
lods
pop
fstl
mov
push
outsl
pop
dec
icebp
pop
jne
movsl
into
cli
loopne
dec
sahf
jb
add
jg
or
jle
sub
and
call
push
sbb
dec
xchg
add
fsub
outsl
or
sub
mov
push
pushf
test
add
inc
add
aad
mov
inc
add
jge
xchg
push
pop
push
into
jmp
icebp
fwait
out
pop
inc
mov
addr16
lods
and
clc
lock
xchg
adcb
pop
fisubl
ss
and
add
pop
out
dec
or
push
test
jbe
fsubs
xchg
test
sbb
mov
loopne
aas
jmp
sbbl
mov
pop
mov
jno
adc
pop
test
add
fmull
nop
pop
inc
lock
lret
mov
add
fldl
xchg
cld
push
mull
stos
dec
or
add
cmpb
repnz
leave
add
stos
push
lods
addl
mov
jnp
add
out
fisttpll
es
add
aas
jge
data16
jle
add
addr16
jne
xor
inc
or
in
aas
sahf
or
pop
inc
dec
pop
pushf
lods
movsl
lahf
aam
mov
scas
in
inc
jl
add
lods
int3
add
test
sar
fists
mov
add
aaa
adc
insl
fwait
push
add
addb
jo
hlt
ja
add
lods
int3
out
xor
fcmovne
adc
add
clc
or
nop/reserved
shlb
mov
and
add
mov
sub
les
or
add
insl
bound
inc
cmpsl
push
fcoml
mov
mov
mov
popf
sub
mov
add
ja
inc
cld
and
out
adc
lret
inc
pop
mov
shlb
aad
pop
inc
xor
mov
lahf
jne
dec
into
iret
jb
add
negl
push
movsl
jl
iret
sbb
in
jo
pushf
addb
cltd
adc
cmp
jns
push
call
js
mov
and
push
jg
data16
vmwrite
sub
and
aas
ja
call
pop
jo
cwtl
mov
pop
mov
stc
or
cltd
sahf
test
add
mov
or
push
push
and
mov
push
stos
les
js
bound
mov
negl
inc
lcall
out
rcl
pusha
add
in
outsb
subb
add
xchg
dec
or
call
pop
cmpsl
add
int3
add
scas
mov
xor
cwtl
add
and
hlt
repnz
subb
add
lret
bound
xchg
jmp
push
scas
mov
add
into
cmp
pop
mov
xchg
sub
or
push
add
pop
sbb
cmpsb
jl
mov
xorl
repz
sbb
mov
xchg
adc
cltd
out
movhps
lods
mov
movsl
fcoml
sub
popa
sub
and
and
add
xchg
movsb
add
dec
adc
test
add
add
int
cwtl
out
pop
leave
dec
sbb
mov
out
xor
adc
xchg
adc
cmp
sbb
and
push
push
lock
popf
push
pop
xchg
fnsave
xchg
jl
pop
add
xchg
lsl
mov
mov
dec
mov
push
jle
add
lock
pusha
or
add
sub
out
je
and
rolb
and
jl
sbb
div
cld
cmp
add
ja
fwait
push
outsl
xchg
pop
in
test
xor
mov
fs
or
aaa
push
xchg
add
repz
mov
aas
enter
cli
mov
add
cmp
out
inc
xchg
pop
jno
add
push
imul
sbb
out
push
aas
add
movsb
test
fs
in
lahf
scas
xchg
rolb
inc
mov
xchg
push
xor
push
dec
or
pop
dec
push
or
sbb
add
mov
jo
enter
sub
jb
pop
rorb
aad
mov
xchg
jno
dec
pop
icebp
push
andb
in
fwait
or
daa
add
ffree
call
inc
inc
xlat
repz
cltd
out
jl
std
add
adc
pop
cmc
cmp
adc
sub
pop
icebp
pop
xorb
pop
outsb
add
sbb
xchg
lds
hlt
fcomps
mov
sub
sub
cmp
add
inc
sbb
adc
xor
add
xor
sbb
pop
or
xor
lcall
or
mov
das
cmp
add
ljmp
xor
out
add
jp
xor
push
cmp
add
je
dec
cmp
pop
push
add
cwtl
out
jp,pt
mov
lret
xor
jne
sbb
inc
bnd
jb
popf
mov
cltd
jbe
add
mov
shll
add
mov
adc
cmpb
pop
add
mov
insb
ret
pop
fsubrl
test
inc
xchg
adc
shlb
push
add
je
stos
and
nop
les
mov
push
sti
add
dec
adc
or
add
cmp
push
jge
add
into
mov
pop
inc
push
add
cltd
idiv
js
add
push
in
mull
jae
icebp
add
or
pusha
mov
xchg
pop
call
fwait
pop
rorb
loopne
adcb
stc
jle
shl
dec
in
add
icebp
lea
adcb
pusha
pop
add
mov
adc
adcb
mov
push
clc
add
sub
jg
arpl
dec
pop
clc
lea
sbb
inc
or
sarb
xor
xor
pop
dec
mov
jno
loop
xlat
lret
or
xor
and
sub
int
cmp
mov
jp
xchg
insb
js
sub
mov
pusha
dec
sbbb
jne
add
cs
lea
dec
andb
xchg
cmc
add
xchg
imul
xchg
jp
cmpsl
mov
ja
ror
push
es
scas
in
stos
add
ret
pop
mov
cmp
add
xchg
cld
xchg
lods
addb
cmpsb
push
icebp
pop
jecxz
inc
add
and
cmp
repz
and
and
lds
movb
pop
shrb
pop
adc
add
fldenv
and
call
dec
imul
adc
sbb
fmull
xchg
stc
dec
add
mov
mov
mov
ror
xchg
inc
nop
leave
cmp
or
aad
iret
lcall
cwtl
pop
sub
pop
add
imul
fists
popa
xor
call
mov
pusha
sbb
dec
xchg
outsb
mov
jae
push
mov
icebp
mov
or
xor
movsl
arpl
sbb
or
jmp
sub
mov
sbb
adc
fnstsw
scas
test
sbbl
rolb
mov
popa
data16
clc
out
and
ljmp
sub
push
sbb
ja
inc
push
aam
pop
mov
repnz
loopne
and
mov
xor
adc
jno
mov
cmpsl
and
pop
mov
ss
push
sbb
outsl
fwait
scas
xor
fstpl
xor
push
aaa
fadds
dec
jne
outsl
std
out
stos
mov
scas
pusha
xlat
push
jo
cmpsb
les
inc
jne
and
adc
add
setnp
in
sub
pop
pop
adc
add
aaa
push
mov
jns
xchg
add
imulb
ud2
xchg
inc
xlat
pop
sbb
pop
cmp
mov
in
sbb
or
rcrb
and
daa
push
lahf
xor
jns
imul
sbb
cmp
pop
inc
pop
addb
outsl
shrb
adc
push
imul
enter
dec
fsubrs
xor
adc
mov
add
aas
xor
adc
andb
loopne
cmp
cld
fadds
adc
xchg
mov
add
mov
int3
fstps
aad
jl
dec
std
add
out
outsl
sbb
xchg
adc
mov
jo
ja
aas
or
jmp
and
orl
pushf
xchg
outsb
dec
leave
and
cmp
mov
dec
push
xor
add
clc
js
mov
sbb
pop
inc
mov
dec
adc
shr
sti
or
push
mov
dec
cld
nop
add
and
cld
cmp
add
jnp
mov
sbb
adc
cmp
testl
inc
pushf
insb
push
push
mov
mov
add
push
shlb
dec
repnz
int3
mov
mov
pop
push
int
loope
and
add
aam
test
and
mov
fisttpl
xchg
sbb
dec
mov
in
ja
repz
jp
lret
xchg
jnp
sub
adc
fidivrl
fs
das
orb
loopne
dec
xchg
push
jge
leave
xor
dec
adc
xchg
mov
pop
jl
push
jp
sbb
stc
inc
push
xchg
lods
add
js
scas
pop
mov
dec
pusha
test
nop
or
pop
pushf
xchg
mov
push
arpl
cmp
icebp
je
pushf
test
fmull
rolb
js
mov
xchg
loopne
iret
inc
push
in
mov
cmp
pop
push
or
fisttps
out
cmp
mov
sbb
mov
push
add
sub
pusha
sub
and
fisubrs
or
add
negl
push
dec
push
scas
add
mov
dec
test
sub
push
test
or
sbb
sub
shrb
push
mov
imul
xchg
inc
daa
jmp
shrb
push
leave
add
xor
pop
mov
add
psubsb
es
cmp
pop
add
sbb
lahf
jae
pop
mov
out
pop
es
mov
push
imul
jns
pop
aam
arpl
fsubs
aad
inc
and
jns
cmp
sub
xor
fsub
or
dec
push
rclb
lea
int3
das
fld1
arpl
pusha
jns
cmp
push
fimull
in
push
push
add
es
in
mov
cmp
and
cmc
push
adc
jo
jnp
push
rolb
std
mov
imul
lods
lea
pop
xchg
and
sbb
and
mov
push
test
mov
sbb
cmpsb
cmp
ljmp
adc
jbe
adc
add
inc
mov
add
sbb
add
dec
mov
pusha
mov
fmul
or
xchg
sub
lcall
nop
pop
adc
xchg
loop
inc
hlt
sub
push
mov
mov
or
clc
hlt
stos
cld
cmp
mov
stc
cmp
das
insl
or
cmp
jge
or
out
mov
jno
pop
mov
dec
insl
addr16
jns
out
pop
add
lret
cmp
lock
out
pop
and
scas
mov
outsb
sbb
and
adc
mov
dec
xchg
pop
cmp
jge
add
pop
xchg
dec
sub
pop
loopne
inc
add
stos
dec
in
out
clc
addr16
shlb
cli
inc
std
dec
pusha
fildl
in
popf
mov
sbb
lret
cmc
imull
push
adc
or
or
xchg
es
inc
push
jle
or
mov
aam
rcrb
loope
into
jns
inc
popf
repz
arpl
add
int3
rclb
popa
cld
xor
add
add
icebp
or
inc
push
dec
int3
repz
pop
sbb
mov
int
in
adc
or
and
xorb
mov
sbb
outsb
daa
inc
shr
push
ret
insb
add
sbb
push
inc
add
inc
sub
les
or
cmp
mov
adc
xchg
flds
adc
xor
or
addb
push
pop
test
inc
mov
pusha
test
iret
or
add
xchg
jecxz
dec
test
repz
and
mov
pop
jmp
push
test
aam
scas
in
test
pusha
push
xchg
pushf
lods
mov
jns
push
arpl
push
mov
cmpsb
push
xchg
out
add
jmp
dec
mov
int3
add
das
mov
insb
insb
add
or
fs
cmc
mov
andb
add
pop
cmp
inc
in
mov
add
inc
adc
sub
into
sub
adc
dec
bound
subb
cwtl
mov
into
cmp
mov
ss
and
aad
fisttps
outsb
xor
jmp
les
sbb
sub
inc
jp
pop
or
xor
cmp
ds
mov
les
pop
test
inc
jecxz
cmp
andb
dec
cwtl
in
lock
mov
inc
ljmp
mov
jmp
sti
adc
pushf
jo
mov
popf
add
jo
outsb
je
out
push
mulb
loopne
ds
inc
ficoms
cli
mov
outsb
ss
adc
aaa
xor
lret
add
std
insl
or
ds
inc
mov
cmp
fistpll
out
mov
push
xor
mov
cmp
jge
mov
pushl
jns
add
dec
stc
js
push
sbb
mov
xor
cmp
add
mov
add
sbb
gs
call
pop
je
mov
lods
add
lds
arpl
xchg
lea
cmp
add
dec
pusha
sbb
pusha
jno
fwait
add
js
adc
sbb
xor
add
cmpsb
cmp
pop
fidivl
mov
inc
add
mov
decl
add
subb
push
fwait
test
mov
nop
add
add
lock
lds
xor
lea
movsb
jne
andb
subb
or
xor
lret
int
xchg
adc
inc
pop
add
adc
jecxz
mov
and
mov
add
sub
xor
push
andb
push
dec
add
rolb
pop
adcb
pushf
pop
orl
jg
add
jns
dec
std
popa
lods
in
js
test
jae
hlt
test
add
dec
pushf
mov
mov
jbe
div
sbb
gs
mov
mov
add
push
sub
push
ljmp
push
hlt
mov
dec
loopne
mov
enter
adcb
sbb
fmuls
mov
push
jp
lds
enter
cwtl
mov
pushf
in
outsl
leave
inc
xor
mov
sahf
test
cwtl
cmp
add
pop
jne
daa
xchg
test
jo
outsb
add
adc
add
add
xor
mov
cltd
cmp
loop
add
add
bound
adc
in
enter
jno
cmpl
popa
mov
popa
adc
xlat
mov
add
push
pop
jnp
inc
xor
push
stos
loopne
dec
cbtw
cmpb
in
push
add
test
dec
pop
mov
ja
aad
jae
adc
cmp
xchg
inc
punpckhbw
fcmovb
enter
aad
pusha
adcl
push
cwtl
mov
dec
or
xchg
and
jo
mov
scas
mov
fcompl
dec
aam
pushf
inc
xor
jnp
nop
pop
test
and
inc
add
pusha
scas
andl
adc
pminsw
jae
shlb
dec
test
pop
in
adc
ss
jge
dec
push
pop
ficomps
stc
ret
ret
leave
or
push
mov
jne
and
sarl
out
bound
jne
nop
mov
add
movsb
sbb
out
dec
adc
sbb
and
xor
mov
adc
stos
sbb
shlb
add
jbe
leave
cs
insb
enter
or
xchg
push
xchg
inc
insb
inc
jbe
add
adc
push
inc
lea
loopne
cwtl
add
push
jp
adc
stos
dec
jle
add
je
push
les
and
pop
jl
add
pop
sbb
xchg
inc
add
dec
dec
xchg
pushf
jecxz
and
pop
icebp
or
lods
mov
gs
mov
ret
dec
lods
decb
pusha
add
clc
pop
adc
shlb
sub
outsl
inc
loope
add
mov
and
cli
shll
nop
cmp
mov
and
fs
pop
add
nop
jge
push
add
ss
jae
dec
push
in
pop
popa
inc
add
mov
jl
push
inc
mov
or
lahf
arpl
mov
mov
mov
andl
gs
pop
cmp
pop
icebp
adc
mov
inc
xor
and
movsb
ret
mov
aam
roll
testb
scas
pop
popf
enter
and
sbb
test
add
cmp
xor
aas
ss
insl
mov
dec
adc
add
fst
fs
adc
or
fidivs
int3
add
je
cmp
fwait
into
mov
stos
push
mov
addr16
sahf
fistps
sbb
mov
xor
or
dec
shrb
and
jl
jo
inc
cmpsb
int3
xor
mov
inc
adc
mov
mov
les
push
ror
jb
adc
or
adc
dec
sti
test
test
aaa
inc
ja
mov
insl
test
xchg
outsl
dec
xor
sub
push
syscall
test
and
test
test
inc
sub
sbb
popf
testl
into
aaa
sahf
nop
cmp
mov
js
add
add
insb
js
xchg
pop
jae
data16
cltd
les
push
adc
add
push
push
loop
in
addr16
or
and
add
mov
movsb
clc
cwtl
add
jno
mov
imull
and
jo
push
cmp
in
sub
inc
fdivrp
xor
push
cmp
icebp
pop
adc
xchg
cmp
mov
mov
jle
mov
int3
xor
pop
push
dec
pop
sub
int
push
dec
es
mov
dec
jbe
push
aas
xchg
popa
xchg
xor
xchg
dec
pusha
cmp
pushf
or
xor
sub
adc
decl
stos
pop
nop
and
xor
das
sub
or
mov
sahf
add
add
cmp
inc
es
decb
jge
jbe
jg
xchg
push
imul
mov
fdivs
mov
mov
dec
jge
ljmp
mov
je
cld
add
mov
les
rcrl
adc
pushf
and
in
movsb
cld
push
xor
add
ljmp
lods
les
dec
sbb
push
xchg
cmp
xchg
add
cmpl
and
stc
push
mov
cmp
add
cmp
into
adc
aad
mov
push
push
xor
jno
loop
mov
add
pmulhw
add
dec
mov
sub
xchg
add
and
add
mov
in
popa
ret
sbb
test
adc
lock
sub
mov
inc
jo
mov
scas
or
in
add
nop
xor
xor
and
adc
daa
js
xchg
rcrb
stos
imul
iret
test
ret
lock
push
xor
es
je
mov
test
rorl
mov
arpl
ds
jno
pop
sbb
loop
push
and
and
mov
jle
dec
xchg
mov
adc
popa
jge
fiadds
fadds
into
and
xor
lret
aaa
adc
stos
mov
cld
sub
enter
and
lret
push
int
add
push
or
mov
xor
pop
mov
mov
mov
jae
push
add
add
ss
adc
jnp,pt
icebp
cld
rcr
pop
scas
mov
and
push
nop
adc
or
js
arpl
add
sub
xchg
mov
int
data16
adc
scas
pop
jmp
sub
iret
repnz
and
insb
subb
test
add
mov
aam
sub
xchg
xchg
inc
lock
test
sub
xchg
push
and
cmp
addr16
dec
pop
xchg
sbb
lret
push
dec
and
cltd
mov
bound
clc
aam
addr16
scas
add
push
ret
fadds
ss
aam
hlt
pop
dec
imul
hlt
cli
filds
ret
push
mov
rcll
in
or
inc
fnstcw
push
pop
cld
dec
movsb
clc
sbb
push
mov
dec
fsubrs
cli
and
cmp
fnsave
sbb
fdivs
jecxz
lahf
in
sahf
lods
testb
rolb
push
dec
lret
mov
jp
or
mov
andb
std
mov
testl
sbb
or
add
sub
std
pop
mov
add
push
jnp
pop
jmp
xchg
mov
mov
sub
mov
pop
add
ljmp
mov
add
push
cwtl
add
pop
fildl
add
iret
rcl
push
cmp
lret
test
sub
fs
enter
jbe
sti
adc
adc
sbbl
xor
hlt
mov
insb
or
in
add
mov
cli
ja
sub
mov
es
in
cltd
in
lods
shrl
call
xchg
adc
pop
add
fdivrl
xor
addr16
cwtl
inc
icebp
sub
hlt
push
ret
pop
xchg
mov
jo
dec
aaa
fimull
sbb
nop
test
jb
jne
lret
xor
fisubrl
adc
scas
xchg
push
adc
push
dec
inc
add
ss
insb
add
ficoms
sub
fcoml
lods
popf
aam
and
dec
adc
cmc
repz
loope
jo
mov
add
jecxz
dec
test
xchg
fs
mov
pop
and
xor
test
dec
inc
movsb
pop
cmc
mov
adc
xorb
jae
add
push
outsl
dec
xor
add
sbb
xchg
fwait
insb
loopne
push
jle
xor
call
lods
mov
add
orb
xor
movsb
lock
adc
xor
cmpsl
inc
nop
cmp
adc
mov
mov
xchg
or
cmpsb
inc
lods
add
inc
mov
ss
add
xchg
cmp
fs
mov
lret
andb
xor
mov
ret
sbb
xor
jg
push
mov
pusha
test
imul
enter
mov
and
inc
adc
adc
mov
inc
mov
data16
sti
jecxz
push
inc
mov
lret
inc
sbb
push
or
inc
inc
je
movsb
mov
ja
xchg
inc
fisubl
outsl
imul
cmp
add
sahf
jno
pop
dec
fisttpl
pop
mov
pusha
push
add
daa
or
lods
jae
or
in
mov
xor
call
add
xor
and
or
cmp
subb
mov
pop
ror
rclb
add
mov
sbb
mov
and
jo
pop
addl
dec
mov
and
popa
mov
mov
clc
and
xchg
add
and
mov
clc
orl
test
leave
dec
or
movsb
jl
jbe
or
enter
rolb
gs
mov
add
push
dec
sub
enter
push
sarb
xor
mov
mov
mov
rclb
jle
pop
loopne
gs
sub
call
enter
mov
orl
xor
mov
or
xlat
clc
jecxz
jg
jmp
and
cmp
xchg
ds
or
add
pop
inc
pop
sbb
sbb
xchg
mov
jb
add
out
add
lcall
or
xchg
popf
movsb
xor
xlat
inc
cmp
jno
add
test
cld
add
scas
xchg
lods
xchg
shrl
add
repz
push
mov
bound
daa
filds
je
sub
mov
add
arpl
jbe
adc
adc
jge
mov
and
icebp
xchg
xchg
mov
cltd
dec
cmp
je
fnstsw
leave
stos
mov
pusha
fidivl
outsb
xor
inc
cmp
mov
pushf
dec
and
mov
pusha
add
jecxz
push
scas
dec
push
xor
push
dec
mov
and
aam
jne
mov
sbb
sub
orl
das
iret
dec
popa
pop
lea
push
xchg
cwtl
pop
clc
push
or
cmc
repz
shlb
xor
fldt
outsl
xorl
cltd
rcr
rcrb
loopne
mov
push
stos
sub
fxch
sbb
xor
icebp
lcall
and
pop
push
in
mov
jne
xor
idivl
aaa
and
cmpsl
mov
sar
inc
bound
pop
add
popf
out
dec
pop
fucomi
scas
and
pop
adc
stos
mov
cltd
es
jp
or
das
xchg
pop
addb
lcall
inc
and
rorl
add
shll
jno
shlb
or
cmp
inc
push
push
add
inc
inc
setl
pop
pop
popa
jae
sbb
add
mov
inc
pop
and
test
jb
or
subb
fidivl
sub
and
aas
clc
jecxz
and
inc
insl
and
jle
push
add
cmp
xchg
sub
mov
inc
and
mov
aaa
adc
fcoms
ret
adc
orb
dec
mov
and
add
iret
adc
movsl
mov
pop
and
js
out
xchg
out
or
add
testb
imul
pop
push
gs
jg
shl
insb
jno
in
bound
mov
mov
adc
xchg
add
pusha
push
xchg
add
ds
sbb
orb
sub
cmc
loope
or
sub
insb
pushf
fcmovb
cltd
std
add
jb
add
cs
lahf
dec
or
int
xor
pop
jmp
leave
nop
inc
mov
fsubs
mov
sbb
xor
inc
push
mov
add
mov
dec
cmpsl
mov
xchg
pop
pop
aam
pop
mov
stos
xchg
ss
pusha
adc
pop
incb
nop
test
sbb
mov
ficomps
dec
and
mov
add
dec
mov
cld
xor
xchg
into
movsb
add
cmp
sub
jo
nop
or
pop
scas
adc
add
out
daa
xchg
adc
jg
das
in
dec
adc
popf
cmp
inc
add
push
pop
add
repnz
gs
lds
add
jns
xchg
jle
arpl
jb
add
andb
sub
imul
enter
add
push
add
mov
cmp
mov
dec
or
popa
ficomps
cli
and
sub
movsb
jne
sbb
add
inc
addb
aas
es
les
cmp
pusha
jns
mov
sar
fiaddl
jge
xchg
and
dec
mov
mov
push
xor
mov
xchg
sbb
shrl
clc
stos
add
xchg
push
pop
add
outsb
or
popf
xchg
orb
push
sub
add
or
xor
xlat
rolb
mov
movsl
arpl
test
popa
je
or
jecxz
shlb
xor
cld
subb
dec
jg
or
add
daa
dec
mov
or
push
jl
sub
mov
jmp
cwtl
aad
clc
mov
mov
pusha
inc
mov
push
mov
add
mov
xchg
or
shlb
cmp
lahf
popa
mov
mov
sbb
mov
cmp
mov
pop
popa
xlat
pop
mov
add
mov
mov
scas
or
loop
gs
ret
sarb
mov
repnz
fdivrs
xchg
aam
add
sarl
popf
cmp
inc
test
icebp
nop
cwtl
in
jno
cmpsb
mov
neg
push
mov
add
inc
inc
xor
lods
and
jo
pop
add
ss
pop
cmp
pop
fbld
sbb
ljmp
insb
fwait
dec
and
int3
pushf
push
jns
push
jmp
adc
adcb
inc
subb
movsb
add
test
xchg
xlat
inc
add
lds
mov
iret
sub
add
ljmp
add
and
cmp
mov
sarb
insl
fbstp
gs
xor
and
movsl
xor
es
xor
mov
xchg
mov
pop
in
adcl
inc
addr16
dec
das
xor
xchg
push
cwtl
sbb
cmp
xor
mov
adc
add
and
xor
sub
push
mov
lods
mov
sahf
das
xchg
push
lods
jns
and
pop
add
xchg
pop
jg
mov
pop
push
mov
cwtl
and
cmp
dec
mov
push
add
jno
movsb
arpl
lock
jmp
dec
cltd
xor
and
mov
rcl
sti
or
mov
xor
sub
sub
clc
sub
jle
call
pop
add
push
aaa
and
mov
inc
mov
xor
outsb
sbb
and
sbb
add
xchg
cmc
ficoms
pop
add
cmpsl
dec
aas
add
mov
mov
pop
movzwl
add
and
pushf
test
jno
xor
lds
int
or
das
in
enter
sarb
mov
outsb
das
ror
cwtl
andb
shrb
mov
sbb
cltd
xchg
lods
mov
imul
mov
mov
adc
pushf
pushl
fdivl
lds
sub
into
sarb
mov
pop
cmp
pop
stos
cmp
daa
mov
cwtl
call
test
into
jb
pusha
ds
mov
hlt
mov
mov
stos
shll
fs
nop
xchg
push
stc
adc
add
dec
inc
gs
scas
ljmp
and
lret
fists
jmp
and
sub
and
jb
and
lea
xor
or
jle
mov
out
push
inc
js
cmp
cmc
xchg
rol
cmp
inc
add
call
mov
push
mov
add
jecxz
sti
ljmp
insl
in
mov
cmp
pop
cld
decl
pop
sbb
stos
xchg
in
pushf
mov
mov
orl
push
nopl
lret
pusha
imul
nop
add
and
push
mov
clc
mov
sub
pop
je
out
sub
xchg
cmp
cs
sub
xchg
and
cmp
lcall
das
test
in
adc
xlat
add
aad
ds
int3
inc
addl
sbb
imul
add
adc
js,pn
movsb
test
shr
add
push
orb
sbb
out
dec
add
cltd
jl
rcrl
sbb
and
or
mov
lea
fists
add
cmp
sti
jnp
and
inc
add
ffree
push
dec
mov
shr
into
jae
jne
push
mov
lock
xrelease
lcall
stc
and
add
lods
mov
fnstenv
add
std
mov
add
addr16
push
pop
push
and
push
lret
add
pop
jae
sbb
xor
and
mov
mov
faddl
jmp
mov
push
pop
and
add
sbb
mov
mov
adc
andb
xchg
mov
shlb
adc
andl
mov
sbb
inc
sbb
adc
cs
add
mov
mov
xchg
mov
addl
popf
mov
mov
cmp
in
fucomi
dec
sub
mov
or
int3
add
sub
add
dec
jg
ss
call
mov
cmp
insb
or
int3
jb
and
data16
jns
outsb
pop
cmp
outsl
addb
inc
or
mov
add
sbb
dec
xchg
and
loop
jg
adc
push
cmp
mov
les
inc
aas
mov
add
pop
pusha
popa
aas
dec
enter
mov
in
subb
pop
addr16
xchg
or
pusha
popf
jmp
lea
pop
scas
daa
insl
xor
notl
sub
pop
daa
xchg
add
add
or
xor
jo
mov
imul
dec
mov
mov
mov
xchg
adc
lahf
sbb
xchg
add
add
xorb
or
shl
clc
and
jmp
add
in
arpl
lcall
dec
out
int
maskmovq
imull
in
and
lret
lock
ljmp
inc
inc
cmp
mov
push
cltd
push
pop
test
add
mov
push
xorl
lret
fdivrs
imul
or
mov
xchg
xchg
mov
xchg
or
lret
inc
fisubrl
les
jne
outsl
lret
add
or
test
jbe
lock
mov
mov
fucomi
adc
xchg
scas
and
sub
and
arpl
xchg
push
das
stc
xchg
push
nop
sub
enter
adc
jmp
sbb
out
lahf
lods
xchg
insb
mov
popa
mov
pop
xchg
or
arpl
and
add
shll
and
in
lea
mov
and
pusha
add
int
push
stos
inc
add
sub
out
dec
and
cltd
sub
das
mov
inc
jae
enter
pop
mov
mov
bound
rclb
loope
xchg
adc
push
aam
xor
sahf
add
or
cwtl
add
adc
cmp
mov
dec
daa
push
xchg
and
shlb
mov
es
or
test
xchg
int3
mov
add
xor
lock
int3
cld
and
mov
sahf
push
sbb
jmp
leave
pushf
pushl
lcall
xor
or
push
adc
clc
or
cld
pop
and
adc
xor
pop
js
nop
add
jb
add
jo
daa
xchg
scas
nop
mov
cli
faddl
dec
std
push
xchg
mov
pop
lea
add
test
es
xchg
dec
mov
sbbb
push
and
sbb
cwtl
mov
jmp
mov
aad
or
in
cmp
out
add
ljmp
xchg
lea
aas
xor
inc
lahf
and
hlt
or
rclb
nop
jne
clc
mov
push
mov
mov
xchg
jb
push
xor
jl
repnz
lock
xor
jnp
push
mov
fnsave
or
add
inc
les
and
cs
cwtl
or
movsl
pushf
lock
xchg
cmp
push
imul
pop
test
ljmp
or
fisubrs
add
imul
mov
shlb
fcompl
xlat
dec
or
mov
fistps
xchg
and
lock
cs
jo
pop
add
in
jecxz
pop
cli
orb
pop
lds
scas
mov
je
pop
sub
jne
sbb
mov
jmp
mov
push
add
mov
aaa
sti
dec
jns
add
mov
cwtl
int
incb
jo
jmp
adc
lret
aaa
iret
adc
mov
in
outsb
xor
or
add
in
mov
nop
negl
or
inc
xchg
xor
lods
or
jno
and
sbb
out
bound
xor
test
and
or
sbb
push
push
popa
aam
mov
and
test
mov
pusha
mov
shrb
add
jo
pop
and
test
or
sub
or
dec
add
loopne
stos
es
mov
lea
hlt
jmp
adcl
jne
cmpb
cmp
inc
insl
add
pop
lock
insb
mov
faddp
push
pop
cmc
inc
popa
dec
xor
mov
push
push
stos
pop
or
lods
and
xor
loopne
mov
mov
xor
jno
cmp
sbb
enter
mov
pop
sbb
cmp
cmp
add
adc
popf
mov
ds
jg
sbb
jle
cmp
es
cmp
lods
into
xor
pusha
fs
jl
add
cmp
jne
cwtl
pop
add
sahf
in
loopne
cwtl
xor
movsb
movsl
xor
daa
lock
es
movsb
lea
test
sub
and
jp
add
aaa
cwtl
lock
out
scas
push
add
mov
decl
sbb
mov
sub
add
jne
inc
pop
inc
hlt
fists
rcl
ljmp
mov
mov
pop
dec
loope
fsubl
adc
lcall
mov
loopne
or
mov
jne
add
in
lret
mov
xor
sub
in
add
ljmp
add
pop
mov
add
push
adc
add
mov
or
xor
stc
add
xor
addb
xchg
dec
xchg
vtestps
add
cmpsb
inc
cmp
add
cli
xchg
ljmp
xchg
jne
fadds
add
aas
out
ret
xchg
das
sahf
and
stc
add
jae
dec
mov
loopne
imul
mov
mov
icebp
js
add
sub
pop
sub
jnp
add
xchg
dec
mov
insb
mov
pop
je,pn
push
add
mov
jnp
iret
std
cs
in
and
mov
jne
add
insb
cmp
xchg
mov
adcb
pushf
lret
cltd
test
dec
sub
pop
mov
adc
sub
aaa
xchg
xchg
add
push
jecxz
imulb
loopne
and
popa
sub
sbbl
add
pushf
das
push
mov
add
xlat
loopne
or
add
shlb
adc
xchg
adc
movsl
js
mov
jl
shll
add
jg
mov
push
mov
push
sti
adcb
or
outsb
mov
adc
xor
pop
cmpsl
adc
out
add
xor
loop
and
add
xor
fcompl
decb
sbb
pusha
sub
xchg
xchg
push
aad
shrb
arpl
call
jbe
pop
mov
mov
gs
mov
movsl
stos
jo
clc
dec
pop
or
adc
or
add
sbb
and
add
shlb
cmp
pop
pusha
pusha
cmp
push
push
sbb
call
xchg
clc
adc
cmp
jge
shlb
pop
subb
scas
dec
mov
xchg
icebp
mov
mov
add
mov
movsl
aaa
sub
pop
add
pushfw
xchg
xor
fucomip
andb
mov
call
es
add
pop
movsl
fstpt
adc
cmpsl
repz
js
ret
lahf
in
dec
cwtl
jb
sub
push
mov
and
mov
mov
sbb
pop
sub
jno
je
add
cmp
pop
push
clc
repz
in
enter
cmp
mov
mov
sbb
push
loop
push
enter
add
xchg
scas
popf
push
lret
and
push
ja
rolb
jl
stos
ret
movsb
lret
or
hlt
push
sarb
add
mov
rcr
cmp
and
shlb
mov
shlb
sub
dec
call
push
data16
cmp
and
mov
jo
cwtl
addl
mov
adc
outsl
testb
shlb
sub
dec
orb
sub
loope
imul
pop
adc
push
or
addb
mov
sbbb
add
fs
cmp
ljmp
and
jle
pop
adc
mov
adc
mov
dec
sbb
and
movsb
cli
ss
jb
scas
fnsetpm(287
sarb
or
mov
pop
pop
je
inc
push
lret
aas
inc
movsb
lods
cmp
xor
lds
cltd
dec
mov
cmc
jne
shrb
mov
jno
or
sbb
inc
xor
pop
out
add
add
lock
lock
dec
leave
cmp
cmp
daa
cs
inc
jl
add
int
mov
mov
mov
loop
push
xorl
xchg
and
cmp
pop
mov
int
or
imul
push
mov
inc
add
loope
mov
sarb
push
jle
adc
aas
inc
mov
add
js
add
stos
and
pop
mov
aas
pop
sbb
and
xchg
in
and
cmp
fisttpl
std
int3
repnz
sub
lahf
add
rcrb
and
or
push
sbb
push
add
and
sub
pop
dec
jo
rol
xor
sbb
xor
add
insl
ljmp
and
dec
mov
in
lahf
mov
add
cs
push
xchg
or
fucomi
int3
mov
push
mov
or
inc
jne
add
xchg
push
out
xchg
push
mov
cmp
daa
jo
into
nop
push
add
out
jns
pop
pop
xor
add
test
or
push
adc
dec
sbb
push
cmpsb
or
mov
aaa
push
add
add
ficoms
or
scas
and
mov
arpl
das
adc
mov
cmp
mov
pop
dec
icebp
or
jp
fidivs
and
enter
fs
adc
inc
flds
loopne
enter
mov
in
test
and
jge
or
sarl
cmpsl
dec
add
imul
add
xchg
mov
cmp
cmp
outsl
add
adc
and
adc
out
out
or
or
scas
jb
inc
rolb
jle
fists
push
pop
lods
add
cmp
sbb
adc
mov
adc
pop
cld
insb
add
fwait
mov
cmp
rolb
test
shll
sub
mov
aam
movsb
sbb
lret
mov
inc
xchg
lcall
test
pop
mov
adc
add
cmp
cmpsb
clc
sbb
imul
jecxz
ret
cltd
loopne
pop
nop
cmp
push
fcoms
jo
js
call
jo
inc
fs
shrb
shlb
insl
cli
sub
mov
ficompl
mov
adc
movsb
inc
enter
xchg
add
clc
or
adc
jnp
adc
adcl
cwtl
ss
cmp
in
push
out
lret
jl
mov
cwtl
lock
call
cmp
or
pop
das
dec
or
xchg
mov
push
sbb
ret
pop
lahf
enter
push
das
fcoml
or
movb
adc
je
stc
dec
dec
lock
pop
inc
push
lods
daa
into
lcall
pop
add
jmp
adcb
push
add
add
cld
stos
push
push
and
scas
dec
push
jo
pop
inc
inc
push
pusha
sbb
add
fcoml
inc
out
add
ljmp
add
and
mov
scas
mov
lret
xor
ret
push
add
std
push
xchg
nop
fs
shl
sbb
jo
jge
shlb
mov
jmp
pusha
cmp
dec
call
and
xor
sub
addr16
pop
movsb
testl
out
in
cmp
fisubrl
mov
je
sub
sub
int3
dec
and
lods
pop
incl
sub
call
mov
arpl
and
add
daa
sti
jnp
mov
je
push
cmp
or
dec
pusha
and
cmpsl
dec
jmp
sub
dec
dec
pop
sbb
sbb
pop
adc
ss
dec
dec
cli
and
movsb
shrl
lods
inc
push
add
or
je
add
adc
stos
xlat
std
xchg
cld
dec
add
mov
xor
xor
fs
add
inc
lea
xor
gs
jbe
js
insl
add
enter
or
hlt
fsubrp
add
mov
adc
or
aad
pop
push
in
mov
or
mov
cmpsb
xchg
add
jg
sbb
pusha
mov
aam
mov
arpl
in
int3
les
sbb
jmp
imul
mov
lds
lea
dec
imul
movsl
cmp
jns
pop
xor
mov
cmc
adc
cmp
lcall
dec
pop
or
add
cltd
ds
cmp
rcrl
test
int
sub
push
xchg
pusha
in
fsubl
and
xchg
cld
add
ljmp
and
dec
or
call
add
mov
je
inc
in
pop
mov
add
xchg
push
fists
push
add
xchg
add
pop
mov
in
mov
sub
cmp
mov
or
and
in
dec
add
add
mov
inc
or
pushf
push
pusha
xor
mov
in
xor
movsb
jns
and
pop
stos
insb
jo
xchg
pop
inc
add
arpl
test
and
add
mov
mov
and
add
xor
or
ja
push
sbb
jbe
add
sarl
pop
sbb
ss
or
push
rolb
jne
xor
inc
jb
xchg
sub
cli
mov
or
sub
and
nop
mov
cmp
scas
adc
andl
cmp
data16
das
mov
xorb
dec
jl
popf
hlt
inc
out
jae
mov
scas
ret
sub
iret
mov
bnd
add
and
fimull
mov
das
cmpsb
std
andl
subl
insb
fidivl
daa
mov
mov
mov
das
bound
andb
xor
add
roll
movsl
sti
in
pop
jno
lock
sahf
xchg
sbb
or
push
xor
xchg
test
in
add
pop
mov
jl
sub
mov
out
sbb
sbb
sbb
or
mov
cmpsl
push
repz
cmp
mov
les
pop
xchg
cmp
and
mov
add
popa
adc
sub
and
inc
xor
cwtl
rorb
outsl
jo
mov
repz
add
cmp
jmp
les
or
es
das
push
inc
adc
stos
pop
add
dec
fidivl
mov
pushf
or
ljmp
adc
enter
addr16
mov
in
or
out
test
movsl
add
fwait
mov
pusha
jbe
cli
add
je
ja
lcall
test
icebp
jl
in
add
jl
or
sbb
push
lret
and
and
fs
fisttps
add
and
or
ljmp
sub
fildll
add
add
out
jno
add
sbb
jbe
add
lds
into
jno
insl
xor
push
sbb
dec
mov
test
pop
dec
dec
aaa
inc
movsb
inc
sub
adc
es
les
mov
adc
push
stc
sub
and
mov
lock
mov
add
push
in
popa
or
adc
mov
int3
cmp
inc
cmpsl
lods
das
outsb
fs
pusha
mov
mov
cmp
out
cmp
loope
or
mov
xchg
movb
pop
fisttpll
cmp
xchg
mov
jecxz
mov
adc
cld
or
adc
int3
sbb
cmp
cli
daa
pop
inc
push
dec
mov
sbb
adc
in
enter
subb
loope
lds
cwtl
lods
inc
arpl
jp
sahf
pop
or
loop
lea
lods
movsb
pusha
xchg
rorl
xor
mov
jne
jg
fbld
mov
mov
mov
insb
in
loopne
scas
fwait
xor
jo
mov
in
cld
jo
mov
xorb
imul
inc
std
cli
mov
mov
add
push
test
inc
inc
inc
push
sbb
out
fucomip
mov
or
add
push
subb
pop
push
sbb
fisubrl
and
jno
add
fsts
adc
stc
mov
add
dec
xlat
add
stos
sub
xor
out
xchg
push
lea
loop
idivl
arpl
and
adc
dec
cs
add
cmp
stos
pop
orb
add
mov
inc
fnstcw
adc
shr
sub
or
adc
cmpsl
stos
mov
inc
sbb
cltd
mov
lgdtl
nop
pop
and
and
test
test
adc
imulb
inc
cmpb
jecxz
and
jmp
lahf
testb
sbb
cli
add
jmp
clc
rcrl
in
add
out
pushf
das
sub
jl
add
gs
mov
movsb
push
in
add
es
and
bound
add
or
sbb
mov
das
cmc
lock
or
movsb
add
in
shlb
jne
adc
notb
repnz
int
dec
add
dec
add
mov
hlt
ror
into
gs
inc
fisubrs
pushf
mov
cmp
or
enter
dec
dec
sub
cwtl
lcall
push
inc
rcll
inc
dec
je
mov
aam
and
stos
scas
out
lret
add
rorb
das
and
xor
mov
jnp
or
fadds
out
cld
jge
add
frstor
in
ljmp
fcmovbe
pop
dec
adc
cmpsb
stos
or
pop
sbb
lods
scas
pop
pop
mov
jo
xchg
fidivl
lods
and
insb
mov
sub
test
fs
loope
inc
jbe
insb
xchg
nop
js
dec
cmp
test
sahf
mov
or
adc
shl
out
cwtl
js
xor
pop
sub
in
mov
lret
movsb
imul
and
xor
add
add
mov
mov
out
sbb
mov
movsb
cwtl
and
ljmp
add
sbb
xchg
xchg
dec
pop
adc
stos
inc
pop
scas
dec
inc
std
adc
add
mov
nop
andb
or
ds
cmpsb
loopne
mov
clc
jle
in
je
nop
fs
inc
jmp
sub
add
repz
pusha
and
pop
or
fsubrl
and
push
jo
sahf
stos
cmp
push
push
inc
repnz
mov
xchg
xchg
es
pop
and
xor
cmc
andl
das
and
repnz
stc
cmp
lods
or
mov
xchg
les
xor
stc
call
inc
les
pushf
add
roll
daa
stos
and
fabs
pop
xchg
sbb
rorb
loop
mov
ss
sub
mov
jmp
out
mov
aam
mov
loop
or
mov
enter
lock
data16
jnp
add
jno
cmpsb
push
nop
lahf
mov
cmp
mov
sub
dec
fldl
call
and
push
push
or
adc
imul
mov
push
jl
jo
mov
fsubs
cld
add
xor
dec
push
xchg
add
mov
adc
testl
movsb
popf
lods
cmp
js
xchg
inc
jbe
pop
sti
sbb
sub
cmp
add
add
or
nop
sbb
adc
mov
rolb
inc
push
loope
xchg
jns
xchg
xorb
cmpb
sub
adc
and
mov
adc
xchg
pop
mov
xchg
or
aas
loope
mov
add
aam
leave
pop
push
cmp
test
dec
pop
loopne
fimuls
inc
mov
sbb
or
mov
fs
fimull
xchg
xchg
mov
pop
cmp
cltd
mov
cmpsl
fcoms
inc
nop
push
sbb
pusha
add
fdiv
mov
xor
mov
inc
ss
in
pop
lea
add
stc
insb
xlat
or
adc
lds
fldenv
add
mov
jne
jnp
or
sub
enter
mov
test
and
and
sub
add
shl
sub
int3
outsl
lret
mov
sub
xor
cmovae
rol
fisubl
pop
lcall
add
scas
mov
cwtl
push
add
inc
mov
and
mov
cmp
popf
adc
push
mov
cmp
das
loop
movsb
add
xchg
out
add
mov
stos
add
cli
jp
in
mov
pusha
mov
cmp
test
or
pop
mov
push
sbb
fstp
xor
bound
mov
mov
incl
xchg
adcb
nop
adc
xchg
int3
pop
xchg
mov
repnz
sub
mov
in
mov
test
jecxz
add
je
jg
add
in
xchg
mov
insb
sahf
jge
sub
loopne
or
int3
jb
mov
sbbl
adc
scas
and
imul
mov
mov
loopne
xor
sub
mov
jae
or
jne
mov
push
dec
hlt
outsb
push
jmp
scas
push
andb
sbb
in
lds
lods
dec
fwait
pop
pop
inc
sbbb
shll
data16
dec
adc
packssdw
add
arpl
mov
jnp
jbe
add
pop
add
orb
and
cmp
out
es
into
dec
in
add
aam
jnp
es
sub
pusha
add
std
in
cmpsb
pop
xchg
enter
sbb
arpl
and
pop
jno
mov
or
add
sbb
cwtl
out
cvtps2pi
lahf
sbb
jo
sub
int3
negl
and
xor
dec
mov
decl
aam
repz
mov
out
or
sahf
mov
call
dec
adc
mov
add
jge
out
pop
xor
ret
pop
cmp
shl
add
test
adc
adc
test
mov
loope
in
push
add
pop
iret
adc
xor
scas
sahf
andb
or
inc
les
or
cmp
add
or
mov
cmpl
add
pop
inc
sub
pop
pop
xchg
lock
and
cmpsl
pop
jge
xor
add
xor
mov
mov
ja
sti
cwtl
lods
dec
sub
xor
pop
sub
add
jmp
insl
lret
lcall
add
dec
popf
xchg
and
and
xor
push
fisttpl
sub
sbb
mov
dec
lahf
adc
cmpsl
dec
dec
and
pop
sub
add
push
jns
je
add
gs
xchg
shl
jo
movsl
mov
jne
push
and
adc
cld
mov
or
test
mov
add
pop
imul
pop
imul
push
scas
cmp
xchg
out
daa
sbb
and
mov
xchg
fs
mov
mov
cli
aam
push
inc
mov
and
sub
bound
insl
push
pop
or
int3
sub
add
test
xorb
and
mov
sbb
inc
pusha
leave
cmp
insb
mov
out
nop
add
add
pop
daa
hlt
or
xchg
test
cs
in
inc
sbb
cmc
cmp
test
mov
inc
jle
popf
add
stos
clc
xchg
inc
shrl
fldcw
mov
cwtl
add
xchg
xor
test
cld
mov
sub
mov
or
adc
and
sub
out
outsb
or
pop
hlt
inc
cmp
add
rorl
test
xchg
fmull
mov
shll
sarb
mov
mov
add
loopne
loop
mov
mov
lret
sahf
and
pop
mov
sub
sub
adc
insb
pop
gs
popl
add
inc
sarl
cmp
mov
xor
stc
int3
fwait
ret
dec
dec
pop
inc
jecxz
sbb
rcll
adcl
push
in
push
mov
sbb
std
movsl
out
adc
lock
and
mov
in
sbb
mov
arpl
jne
nop
hlt
inc
call
orl
dec
imul
stc
sub
clc
leave
mov
pop
adc
pop
fsubs
sub
nop
imul
jle
mov
push
xchg
stos
test
mov
in
dec
dec
mov
adc
jae
add
ss
dec
sbb
int
in
rcr
test
js
scas
jno
sbb
sbb
out
mov
icebp
test
fidivl
jg
nop
xchg
xor
xor
in
inc
add
mov
xor
addr16
add
aaa
fs
add
and
xor
shlb
cmp
jns
inc
sahf
es
add
into
lahf
pop
push
and
cmp
stos
mov
xchg
sbb
mov
enter
inc
sbb
fld
inc
push
int
dec
jg
add
sbb
sub
jb
int3
es
adc
out
inc
daa
jne
inc
ret
adc
dec
icebp
ljmp
cmpsl
xchg
sbb
mov
mov
rorb
adc
pop
clc
mov
mov
xchg
pushf
cmpl
std
or
iret
test
lret
repz
shll
add
popa
popf
add
sub
fimull
sahf
test
xchg
test
fbstp
add
sbb
subb
in
jp
mov
iret
pop
addl
lahf
test
and
sbb
or
xor
cmp
xlat
add
xor
add
and
in
clc
fcoms
dec
push
xor
xchg
mov
xor
adc
lar
in
jb
hlt
jno
add
scas
inc
imul
cli
add
mov
popa
ret
ss
ljmp
es
test
jg
int
out
and
xchg
push
fistps
push
testb
add
push
adc
sbb
insl
push
push
clc
ss
add
xor
jle
arpl
xchg
push
cltd
movsb
je
add
jge
mov
push
add
clc
lods
dec
adc
cmpsb
data16
and
mov
adc
adcl
and
sbb
mov
ja
add
cmp
pop
fs
outsb
sub
popf
loop
or
shlb
add
pop
out
sbb
mov
inc
adc
inc
xchg
or
lret
dec
in
in
movsl
jo
sbb
mov
mov
sub
fildll
fbld
cmpsl
dec
pop
stos
test
jp
mov
hlt
xchg
sbb
or
inc
add
inc
cmpsl
das
enter
mov
out
cmp
sbb
lods
and
hlt
scas
add
lret
loope
pusha
lret
or
cwtl
push
add
jnp
cwtl
cmp
lret
mov
cmp
or
inc
test
stos
mov
add
sub
popa
push
loope
test
popa
add
xor
rol
jns
jg
setp
daa
enter
int
mov
mov
push
and
xchg
leave
inc
imul
jae
add
jb
fcoml
xorl
xor
into
stos
mov
ljmp
or
movsl
cmpsb
dec
jl
lret
sub
out
or
push
cmpsb
popa
xor
scas
ret
lret
sub
arpl
jno
push
add
mov
mov
xchg
lods
add
dec
add
mov
mov
test
and
and
xor
stos
and
ret
js
jb
sar
add
adc
jmp
or
ja
std
bound
jne
adc
in
add
mov
push
inc
sbb
adc
sub
mov
cmp
pop
sub
mov
fs
subl
adc
jmp
mov
push
xchg
sar
stos
mov
jmp
pop
mov
sbb
add
fs
lods
push
cmp
pop
loopne
lea
gs
call
mov
aaa
dec
jae
lcall
fcoml
jecxz
les
xchg
enter
cld
dec
lea
lock
jo
inc
and
and
and
fidivrl
stos
push
dec
lock
mov
aam
orl
add
lea
rol
inc
outsb
fwait
jmp
and
mov
inc
loop
adc
dec
xor
test
mov
leave
xor
fmul
pop
inc
adc
add
mov
jns
or
enter
cmpb
gs
call
xor
inc
xchg
adc
sbb
shll
inc
add
jno
sarb
lock
adc
mov
cmp
jns
shr
aam
mov
add
sbb
dec
pop
nop
cmp
fistl
add
dec
daa
push
std
xchg
cmp
cli
mov
sahf
repnz
or
adc
dec
inc
aas
lods
add
sbb
pusha
or
std
gs
ret
imul
adcb
lods
pop
sub
add
xchg
insb
cmc
sbb
cmp
pop
movsb
cwtl
mov
inc
enter
enter
mov
jge
add
push
add
mov
cltd
out
add
add
pop
incb
loope
insb
xor
data16
sbb
push
sbb
lods
inc
or
jg
xor
xor
xchg
and
cltd
fadds
sar
psrad
add
arpl
mov
in
sub
lods
lods
xor
push
dec
shlb
les
pop
inc
add
dec
add
cmc
push
xchg
rclb
je
cmp
jmp
dec
movsl
sbb
mov
mov
lods
push
aam
ljmp
hlt
insb
jb
addr16
scas
mov
jo
je
arpl
mov
bound
add
sbb
jo
push
pop
xchg
jg
and
ljmp
mov
aas
add
dec
hlt
mov
test
lret
push
pop
arpl
jns
and
sub
pop
mov
addr16
lret
out
add
add
je
sbb
jg
and
fisttpll
lock
test
dec
fwait
add
jg
xor
mov
mov
pusha
mov
out
lret
inc
test
loopne
adc
jmp
inc
call
jmp
arpl
jecxz
xorb
aam
fstp
add
mov
shr
inc
dec
lock
out
int
or
les
add
xchg
data16
mov
shl
dec
lods
into
adc
leave
enter
pusha
xchg
fsubl
adcb
and
fstl
dec
inc
push
test
jne
sbb
sarb
jmp
add
pop
dec
imul
mov
inc
jmp
or
mov
pushf
and
mov
aaa
aam
pusha
cmp
pusha
jmp
add
int3
xlat
shrl
repz
add
aas
dec
lret
sbb
xor
add
pop
adc
jmp
dec
dec
adc
jae
cmp
dec
add
mov
jp
sub
dec
inc
test
jae
cs
pop
sbb
inc
cmp
jo
popf
fsts
movl
pop
cmp
or
jo
ss
insb
jae
adc
repnz
mov
pushf
ljmp
arpl
or
sbb
adc
cwtl
outsl
rorb
inc
add
cmc
scas
lret
mov
ljmp
test
xchg
imul
adc
adc
movsl
je
bound
test
jns
jne
push
fmul
mov
rcl
test
sbb
and
fsubl
std
shlb
jne
loopne
push
and
arpl
add
or
add
xorb
jmp
inc
xchg
add
cmp
pop
mov
mov
mov
sti
testb
cltd
insl
and
add
jmp
or
clc
cs
ret
mov
aam
mov
fmulp
cmpsl
mov
fucomip
push
inc
mov
pop
mov
pop
and
mov
int3
dec
ljmp
in
add
decb
add
pop
pop
leave
sub
ret
aam
shlb
xor
inc
cld
clc
adc
sub
std
insl
xorl
ljmp
insb
add
adc
or
push
shll
jl
mov
or
add
out
push
fmull
shll
mov
add
add
fisttpl
sub
mov
mov
call
lcall
mov
jl
dec
lods
pop
imul
add
dec
pushf
jb
push
inc
pop
xor
addb
cs
cmp
das
mov
jecxz
add
icebp
scas
movsb
mov
cmp
rorb
and
addr16
push
add
js
mov
in
add
add
dec
jb
push
mov
or
and
mov
adc
rolb
xlat
cmp
data16
cwtl
testb
dec
jl
adc
adc
dec
mov
aad
and
inc
setbe
xchg
enter
sbb
and
mov
js
push
inc
sub
cmp
push
add
cwtl
fadd
leave
add
dec
shll
adc
ds
bound
dec
loop
scas
or
paddd
xchg
mov
nop
mov
pop
adcl
mov
mov
ja
add
sbb
shrl
movsb
notl
xor
adc
ds
test
add
lods
push
cltd
add
xor
pop
mov
push
xchg
inc
mov
lret
mov
push
sti
cmpb
pavgb
insl
cmpsb
mov
jnp
and
jmp
xchg
sahf
or
sub
arpl
jne
cmp
inc
adc
leave
inc
add
add
push
or
xchg
arpl
std
rcrb
stos
pop
jecxz
pusha
out
or
xchg
in
and
jns
xorb
shl
lret
fiaddl
or
jae
scas
arpl
cld
cmpb
add
xchg
fcmovnb
jecxz
jns
sbb
xor
jecxz
scas
rorb
cli
mov
sahf
jns
cmp
rcll
test
pop
scas
nop
enter
adc
pop
pop
add
dec
dec
int3
jb
mov
stos
xchg
sti
les
mov
popa
fsubr
scas
add
imul
outsb
pop
ljmp
or
add
sti
cs
jb
dec
add
mov
xor
xor
in
pop
cmp
jecxz
and
inc
mov
inc
sub
andb
inc
cli
bound
cmp
add
xor
jo
sbb
mov
cli
xlat
movl
idiv
and
add
xor
jno
pop
mov
jae
ds
fsubs
faddl
cwtl
in
sub
fs
fimuls
push
je
jp
add
push
out
jle
push
shl
jb
push
jmp
roll
adc
lret
shrl
sbb
xorb
in
sbb
pushf
add
adc
push
sti
ljmp
sbb
mov
rcrl
pop
inc
cmp
mov
jbe
int
sbb
test
add
push
mov
dec
movsb
jb
popa
clc
inc
rol
pop
sbbl
test
cmpb
or
mov
mov
pop
int
orl
jmp
int3
mov
shlb
aaa
ret
or
jne
lret
loopne
add
inc
add
shrl
addb
hlt
pop
push
add
std
sti
outsb
arpl
mov
add
inc
xchg
lahf
addr16
into
dec
lret
sahf
xchg
sbbl
movsb
iret
sub
and
lret
mov
adc
imul
sub
mov
mov
and
mov
insb
inc
insl
cmp
xor
repz
in
add
mov
cwtl
add
pop
jl
or
call
paddq
out
jg
and
fists
or
aaa
outsl
bound
in
aas
jnp
mov
inc
mov
adc
cwtl
dec
xchg
mov
repnz
int3
int
adc
mov
cwtl
test
nop
add
aad
cmc
int3
jle
cmp
jae
sbb
push
jge
add
lea
push
subl
jne
push
shrb
mov
adc
inc
cltd
mov
outsl
loop
sti
aas
xchg
leave
lret
pusha
add
lds
sahf
add
loope
ret
and
push
add
cmp
sub
rorb
fsub
mov
andl
jnp
out
out
cld
pop
lds
add
add
lods
lods
pop
insl
movsl
add
sbb
out
jb
dec
les
fsts
jo
push
aaa
add
adc
rorl
and
ja
pop
xchg
mov
andb
cld
add
ja
rcr
push
mov
cmp
aas
mov
pop
or
repz
fildll
bound
inc
enter
xor
jl
or
mov
inc
add
lret
jno
jmp
leave
test
loopne
jge
xor
sub
mov
insb
inc
lahf
subb
scas
in
aaa
and
addr16
xchg
arpl
sub
xor
or
cmp
shrb
mov
les
dec
jmp
jmp
xchg
cs
ljmp
mov
popa
js
push
adc
add
inc
movl
cmpb
test
mov
neg
jnp
cmp
and
lret
iret
add
pop
inc
jl
je
add
and
inc
jge
das
pop
shll
dec
into
add
pop
push
rcr
xor
mov
lock
mov
clc
or
push
stc
jae
bound
pusha
pop
add
ja
dec
push
rcr
jecxz
cwtl
xchg
dec
xor
lods
jmp
mov
xor
cmp
sub
jns
mov
pop
sar
cmc
mov
inc
sbb
inc
les
outsb
push
lock
stos
stc
test
hlt
out
add
shl
add
shlb
pop
loope
or
inc
sbb
addr16
add
in
jnp
jecxz
inc
cli
inc
test
pop
and
es
sub
sbb
sbb
xchg
outsb
push
jg
jbe
addb
js
imul
and
mov
jo
cmp
nop
js
pop
dec
xchg
lret
xchg
shl
in
cmp
and
or
mov
jg
dec
jns
xor
negb
jo
lds
adc
outsl
mov
inc
loop
in
jmp
jne
lds
mov
jbe
das
gs
call
stos
cmpsb
jle
and
call
mov
adc
push
cltd
adcl
aaa
add
gs
stos
push
dec
mov
adc
out
in
add
or
and
xchg
or
add
xor
es
mov
pop
jecxz
push
mov
add
cmp
cld
and
mov
cmp
aas
sbb
stc
sbb
fisubrs
std
add
push
mov
fnsave
outsb
dec
js
and
push
mov
add
fwait
in
test
pop
jge
cmp
sbb
pop
and
call
jge
loop
add
enter
fnstcw
mov
repz
push
fmuls
add
cmpsl
popa
outsb
cmp
aam
xchg
add
jae
fstpl
pop
pusha
push
clc
xchg
repnz
mov
xor
ss
hlt
lds
fmull
pusha
das
and
mov
lret
fdivs
xchg
add
add
mov
fs
push
or
jne
cmp
xchg
jns
inc
mov
or
jmp
loope
inc
daa
test
ja
jecxz
jle
into
lock
jp
sbb
iret
bound
pushf
pop
or
push
add
cmp
jg
xchg
insl
add
jmp
clc
add
mov
std
push
jbe
stc
add
scas
out
insl
jno
sbb
xor
cltd
cmpsb
ljmp
sarb
fwait
subl
mov
adc
divl
add
mov
in
inc
cwtl
mov
cmp
scas
movsl
sahf
add
daa
loop
add
ror
push
cmpsl
jmp
add
in
inc
push
int3
mov
sti
loope
xor
into
adc
out
popa
cmp
lret
andb
cltd
add
lea
dec
sbb
aad
inc
pop
pusha
ss
mov
push
mov
cli
xchg
into
mov
pop
mov
xchg
dec
pusha
adc
rclb
fcom
cltd
inc
lds
xor
filds
adc
add
notl
jl
add
mov
pop
mov
mov
int
sbb
dec
jp
bound
add
xor
jne
fwait
cld
mov
fnstcw
xorb
pop
call
dec
out
mov
xor
sbbb
mov
cmp
sub
pop
jg
jp
add
or
jo
mov
xchg
sub
dec
inc
jb
pop
push
in
out
mov
outsb
jnp
xchg
push
in
jmp
sarb
add
dec
add
sbb
popf
bound
mov
lahf
xor
movsl
hlt
push
adc
test
pop
test
add
repnz
or
clc
imul
je
add
lcall
add
cmp
pop
inc
pop
pop
out
mov
test
insb
xor
fmuls
lock
add
int
dec
mov
popa
add
leave
test
jo
hlt
inc
pop
cs
stos
mov
pop
iret
inc
test
in
imul
inc
adc
cmc
lcall
mov
loope
push
pop
pop
dec
mov
enter
out
cld
popa
sub
mov
mov
neg
pop
stc
lods
addb
lcall
mov
testl
lea
cmc
stos
js
add
mov
mov
push
jae
test
pop
repz
repnz
sub
and
ret
mov
xchg
and
incb
popw
fistpll
leave
cmpsl
aam
cld
sbbb
mov
xor
in
rcrl
push
out
jmp
repz
subb
into
cmp
mov
idivb
add
sbb
ja
push
dec
jbe
cs
pop
adc
aam
fldl
cwtl
jb
xchg
dec
and
lret
adc
lea
out
pop
pop
lods
sub
bound
push
mov
jge
jne
in
faddl
jae
aam
pop
add
xchg
mov
sub
repz
push
push
les
dec
add
aam
and
in
es
or
add
icebp
xlat
jp
sbb
lret
and
in
inc
test
add
jae
ss
pop
adc
mov
and
add
repnz
add
out
lock
nop
cs
push
mov
add
ja
shl
cmp
movsb
add
fiaddl
add
xchg
jne
xchg
daa
jne
das
sbb
push
adc
cmpsl
rol
inc
fiadds
mov
loop
jns
adc
push
and
aas
cmp
push
shl
mov
jae
mov
stos
cs
or
add
mov
xchg
adc
sbb
rol
and
adc
add
addb
movsb
jl
adc
cmp
adc
dec
fbstp
rcll
mov
add
fwait
inc
mov
mov
xchg
je
xchg
test
add
xchg
outsb
add
and
pop
add
stc
insb
mov
add
shlb
ds
add
shr
jp
mov
mov
into
mov
loop
jnp
add
insl
mov
xchg
fdivrs
xchg
mov
xor
mov
add
je
ret
jbe
mov
out
adc
jg
loopne
jno
adcl
mov
adc
add
mov
sub
testb
or
dec
add
xor
add
fs
out
pop
jge
xor
mov
xchg
ds
adc
add
aas
popl
out
ds
pop
mov
add
add
fdivl
jg
pop
repnz
cmp
pop
jb
int
adc
inc
js
or
fimuls
test
xor
mov
add
daa
into
std
jnp
pop
inc
sti
jge
les
scas
gs
sub
mov
adc
dec
xchg
lahf
into
xor
add
sahf
add
les
inc
dec
iret
test
jo
dec
adc
add
jne
xchg
mov
dec
push
cltd
lcall
test
insb
mov
shlb
inc
adc
xor
fisttpll
and
psubsb
sbb
fidivl
es
and
mov
jg
pusha
jne
imul
fildll
negl
fdivs
rcll
adc
lds
push
rol
ljmp
stos
add
lock
add
push
inc
inc
pop
add
adc
sbb
cld
cmp
cmp
push
js
or
push
mov
cld
add
jl
pushf
andb
xchg
bound
jmp
push
add
dec
sahf
adc
add
jmp
mov
push
fldt
mov
add
cwtl
aaa
push
jg
addb
add
jmp
and
xor
repnz
ds
loop
add
mov
arpl
add
xor
shlb
cmp
enter
mov
cmpsb
push
sbbb
push
ljmp
cmc
or
int3
add
pop
cmp
fdivrs
xor
jns
cwtl
fwait
pop
or
in
fs
xor
cmp
movb
sub
je
loopne,pt
or
pop
ficomps
sub
add
bound
pop
cld
mov
jns
lea
les
add
pop
inc
lret
jle
mov
sub
jp
mov
add
cmp
test
test
lcall
dec
in
jns
xor
and
bound
mov
cwtl
push
and
mov
cmpl
sub
addb
movsl
leave
push
mov
sti
mov
les
dec
push
outsl
in
fistpll
inc
leave
pop
cmc
push
pusha
mov
cmc
pop
pop
dec
push
push
loop
sarb
pop
fsts
out
ss
addr16
mov
fadd
xor
arpl
std
call
cwtl
flds
es
adc
inc
xchg
or
push
outsl
dec
xchg
sub
lret
sub
out
ud2
add
leave
mov
and
icebp
in
inc
pushf
pop
and
cld
pusha
add
jg
inc
add
sbb
enter
out
pop
hlt
int
jmp
pop
dec
out
push
add
cld
nop
outsl
push
xor
fiadds
sysret
rep
fs
loop
jnp
cmp
adc
add
xorb
ret
mov
adc
mov
jbe
add
jnp
fimull
inc
out
xor
or
xor
pop
sbb
add
in
repz
frstor
in
movsl
pop
dec
sbb
push
js
cs
roll
push
cmc
or
loop
ftst
inc
outsb
add
aad
aas
mov
imull
in
mov
fdivl
popf
ja
xchg
test
add
sub
enter
fldl
sub
test
mov
inc
call
roll
mov
push
add
stos
ret
clc
repz
movsl
sub
cli
jecxz
push
in
add
mov
sub
out
enter
ret
stc
shll
xor
add
adc
rolb
arpl
cli
mov
stos
mov
mov
pop
sarl
push
adc
popa
sub
in
pop
mov
lahf
add
add
bound
test
xor
sbb
inc
pusha
aam
pusha
daa
push
mov
fimull
cltd
push
mov
loopne
out
dec
fnstenv
sbb
scas
jb
clc
mov
add
cli
push
pusha
add
lock
cmp
ret
add
into
push
movups
and
in
inc
rcr
add
mov
clc
add
lcall
ret
jp
and
jns
push
in
mov
pop
lahf
nop
jg
fcomps
and
adc
fs
clc
pop
mov
les
xor
and
fdivrs
lds
adc
int3
cmp
in
cmp
or
adc
add
insl
call
sub
jmp
cmp
sbbl
mov
inc
int3
in
xor
fistpll
das
andl
jl
dec
sub
add
mov
inc
outsb
shlb
cmp
mov
fstl
arpl
divb
jge
jnp
add
call
cmp
sbb
add
mov
inc
pop
cmp
imulb
xchg
fnstsw
scas
arpl
jbe
push
mov
fmulp
and
pop
jae
add
mov
cld
addr16
mov
test
fmull
add
add
xlat
or
push
xchg
pop
cltd
jge
jle
inc
shll
and
scas
bound
add
jmp
js
pop
or
stos
loopne
xchg
mov
out
xchg
xchg
inc
flds
test
add
add
mov
push
jge
pop
inc
and
push
pop
jo
dec
push
sub
iret
add
xchg
inc
mov
jp
adc
into
sbb
in
ja
inc
mov
sub
incl
cmc
or
fisttpll
aam
and
add
pop
fldenv
inc
lock
mov
jbe
incb
in
mov
dec
mov
scas
sbb
nop
fwait
cmp
inc
pop
pop
sbb
sub
xor
xlat
jl
rclb
sbb
mov
xchg
sbb
sbb
ja
sub
xor
shlb
jno
mov
data16
cmpsb
bound
mov
add
lret
out
aam
loopne
push
sbb
lea
mov
xlat
push
mov
add
and
into
cmp
xchg
mov
int3
aam
jnp
cmp
rcr
mov
dec
xor
xor
mov
sbb
cmpsb
and
rcll
ds
test
sarl
dec
add
scas
mov
jb
add
cmp
cmp
in
sbb
adc
sar
adc
sbb
xorb
or
stc
or
jns
lahf
test
out
data16
pop
mov
add
mov
adc
test
xchg
xchg
std
fsubrs
call
xchg
mov
test
sub
shl
mov
sub
mov
add
push
mov
add
jno
sbbl
xchg
mov
in
orl
push
dec
push
cmp
lret
cld
sbb
inc
sbb
testl
sbb
imul
add
clc
add
sahf
cmp
push
and
outsl
imul
testl
sub
inc
popw
xor
sahf
inc
pusha
dec
add
add
pop
add
sbb
or
jns
mov
push
andb
hlt
fbstp
scas
push
push
lcall
jle
js
sbb
fistps
clc
pop
push
add
clc
dec
leave
test
cmp
fcomps
ss
mov
sub
repnz
cmp
stos
add
pop
push
mov
jle
push
fstps
rclb
sub
sbb
cwtl
cmp
or
pop
ja
flds
lds
and
pusha
mov
in
bound
mov
cmp
rclb
jg
dec
push
push
add
incl
cmc
mov
jle
dec
rol
push
hlt
jecxz
add
mov
insl
lods
jge
and
decb
stos
mov
xchg
icebp
cwtl
push
push
cwtl
push
fwait
and
dec
push
es
nop
push
pop
subb
xor
pusha
es
loop
lock
mov
faddl
xor
imul
lret
popl
or
les
nop
add
gs
cmp
repz
movsl
inc
add
imulb
pushf
shrb
jbe
push
push
cmpsb
fcoms
add
add
dec
lret
out
add
dec
mov
jo
xchg
adc
or
lods
pop
xchg
and
mov
mov
add
add
sbb
fisttpll
rolb
push
pop
test
xlat
fidivs
cmp
jne
or
push
mov
aad
fmul
inc
test
add
daa
dec
push
outsb
repnz
add
ret
repz
in
xchg
cmpsl
add
or
hlt
sbb
sahf
dec
fbld
sbb
bound
add
mov
jno
inc
jns
jp
cltd
scas
ror
jmp
movsl
adc
xor
add
fabs
pusha
pop
add
cmp
leave
std
adc
scas
fisttpll
ljmp
push
sbb
push
sub
adc
mov
jne
enter
mov
mov
or
pop
stc
and
sahf
sti
dec
paddusw
adc
ret
mov
pop
mov
xor
add
jns
push
mov
jae
add
cmp
add
test
ljmp
nop
push
sbb
mov
in
testb
popa
rolb
add
repnz
xor
push
push
mov
loopne
pop
addl
pusha
jnp
jl
popa
sbb
cmpsl
add
sahf
pop
in
xor
pop
dec
or
add
inc
je
add
xorl
pop
inc
sti
out
jmp
and
shl
pop
packsswb
xor
and
mov
adc
lods
jno
cmp
fisttpll
push
arpl
rorb
add
add
inc
add
pop
insl
test
push
mov
adc
inc
call
sete
sbb
popf
mov
pop
mov
andl
mov
loope
je
in
mov
lods
cmp
mov
add
fcomps
loope
je
ret
xchg
out
mov
xchg
mov
scas
int
jl
adc
fisubs
and
rclb
push
insb
aad
bound
mov
add
xor
ret
dec
roll
xchg
pop
out
mov
adc
add
aam
and
and
sub
and
sahf
cmc
aad
fistpll
adc
ret
rol
cmp
jns
arpl
inc
lcall
leave
loopne
movsb
xchg
sti
daa
add
pop
cmc
insb
mov
stc
verw
adcb
repz
daa
lods
movsl
mov
xor
std
push
in
mov
dec
adc
add
imul
inc
pop
fidivrl
push
sub
lret
mov
add
adc
adc
enter
add
dec
mov
pop
lods
out
int
xchg
out
add
mov
cmc
shlb
lock
and
in
lahf
sbb
add
clc
aas
in
add
sbb
add
sub
add
sti
enter
and
adc
lret
ret
shlb
sub
jbe
into
xor
mov
and
cmp
test
jge
inc
add
pop
or
sub
mov
add
lcall
sub
cmp
popa
jo
test
or
aam
add
jecxz
stos
dec
loopne
cmp
mov
add
cld
pop
adc
pop
shlb
add
xchg
das
and
andl
pop
call
ficoml
xchg
sbb
aas
adc
mov
or
movsb
dec
xor
dec
cmp
loopne
hlt
mov
cli
stos
mov
mov
aam
mov
ret
dec
dec
int
dec
loop
or
jecxz
add
addb
test
xchg
mov
jae
pop
inc
sbb
int
xchg
xor
daa
dec
nop
movsb
adc
add
xor
xchg
mov
mov
fcomps
add
andl
add
cmp
add
dec
fdivr
jl
cmpxchg
lea
xchg
out
add
in
mov
add
add
or
adc
icebp
jg
and
aad
jb
ret
aaa
mov
das
int3
je
add
cld
pop
ja
iret
fcomi
sub
adc
inc
std
and
add
sbb
jb
add
mov
sahf
insb
es
sub
xchg
pop
mov
add
iret
mov
add
adc
nop
in
adc
imul
mov
lret
adc
aas
lcall
fsubrs
filds
pop
pop
mov
sti
add
pop
push
jns
loop
sbb
or
dec
stc
lods
int3
popa
xchg
or
sbb
add
jp
insl
lods
xor
mov
roll
lret
pusha
mov
xchg
or
push
add
cli
in
mov
pop
and
inc
roll
fwait
mov
push
faddl
add
xchg
mov
scas
es
add
out
lods
int3
sub
and
dec
repz
inc
add
pop
xlat
ret
lcall
fidivl
je
add
push
pop
pop
add
pushl
or
sub
or
sub
aad
cmp
jl
sbb
stc
lcall
dec
clc
repnz
mov
popa
addr16
pop
add
aas
mov
aas
sub
cmp
mov
jae
add
sbb
mov
popl
idivb
test
add
sbb
lret
xchg
add
nop
stos
test
aam
pop
or
sbb
push
xor
mov
sbb
fidivrl
mov
mov
mov
jo
insb
and
repz
out
cmpsl
loope
add
and
pop
in
imul
and
fsubrl
mov
inc
mov
mov
xor
xor
cmp
push
inc
mulb
je
sub
adc
xor
inc
or
cmpb
aaa
adc
mov
and
mov
imul
sub
sbb
pop
fiaddl
add
jmp
ror
sub
dec
jb
add
push
scas
iret
mov
xchg
hlt
ja
push
sub
push
push
jo
add
int
frstor
lahf
adc
cmpsl
jp
stc
lods
mov
gs
jge
inc
out
insb
fidivrl
enter
movsb
xor
dec
sti
inc
fisubrl
dec
rorl
inc
mov
add
pushf
in
sub
push
or
add
jl
arpl
pop
lock
into
mov
rcrb
inc
ja
pop
adc
fsubrp
andb
add
shll
into
punpckhwd
int3
push
add
mov
bound
add
shrl
pop
jp
dec
adc
nop
push
cmp
movsb
mov
xchg
pop
shr
jmp
push
mov
or
mov
add
adc
xchg
outsb
push
into
add
mov
fcom
or
xchg
push
adc
clc
mov
nop
fdiv
fcomps
mov
pop
inc
out
xchg
fwait
mov
arpl
adc
mov
test
pop
pop
xor
push
push
pop
imul
adc
mov
push
lret
iret
cli
add
mov
jo
sub
jnp
imul
add
push
lods
cltd
test
rclb
jle
add
cld
mov
xor
mov
mov
cld
daa
je
add
push
sahf
adc
mov
loop
adc
pop
rol
jae
ss
daa
popf
dec
pop
dec
pusha
fisttpl
scas
into
add
mov
cmp
rol
repnz
ljmp
push
loop
add
stos
call
shlb
inc
rolb
xchg
pop
and
or
pop
add
cmp
inc
in
xchg
jne
add
mov
sub
es
mov
pop
add
xchg
mov
ljmp
int3
bound
insb
nop
or
popa
scas
hlt
cmp
loop
clc
push
es
dec
sbb
or
imul
xor
or
repz
add
rcrl
out
mov
add
loope
in
add
inc
fimuls
mov
or
inc
insb
repz
add
sub
sub
inc
in
adc
dec
dec
mov
aaa
cmpsl
mov
cmp
or
insl
outsl
and
push
les
xor
pop
and
adc
jmp
clc
add
lods
pop
sub
push
add
add
xor
inc
outsl
or
xor
inc
inc
adc
or
rol
add
lods
add
push
cmp
jle
push
mov
in
sub
cli
shll
xchg
repz
push
add
scas
ss
test
cmp
push
cmp
stc
sbb
push
adc
std
ja
clc
loopne
or
add
aad
mov
pop
mul
add
and
push
shrl
add
mov
add
lds
mov
cmp
mov
notl
fadds
cmp
enter
xchg
push
add
dec
movsb
or
pop
ret
pop
in
scas
or
xor
cwtl
pinsrw
push
inc
aad
dec
aam
insl
loop
add
aam
js
push
mov
fs
add
cmc
fwait
xor
add
sub
or
scas
ljmp
inc
out
add
add
jnp
stos
dec
mov
fstpt
add
cmp
xchg
orb
in
lods
add
adc
bound
imull
sub
test
xchg
gs
rorb
xor
jne
int
fsubrl
addr16
lahf
lds
jg
add
xchg
push
arpl
push
push
cld
ret
icebp
pop
pop
pop
ss
sbb
add
xchg
mov
sbb
adc
add
or
cmpsl
fwait
call
inc
inc
jg
rolb
cmpl
insl
jbe
cmp
popa
out
rcrl
mov
aaa
mov
outsl
xor
xchg
mov
mov
xor
push
into
add
shr
cld
and
js
repnz
cwtl
je
pop
cli
cmp
add
mov
adc
xchg
sbbb
pop
xor
aam
inc
stc
cmp
pop
add
xor
arpl
pop
mov
push
loope
mov
cwtl
shll
lds
mov
dec
ja
repz
add
rcr
and
xchg
add
aam
les
js
ds
das
inc
jnp
in
fmuls
lret
stos
sahf
sbb
xchg
fisubl
jle
inc
pusha
orl
incb
inc
mov
mov
fisubs
sub
out
xor
fsubrs
addl
mov
das
rclb
pop
fiaddl
insl
rclb
xor
movsb
repz
mov
push
pusha
sbb
nop
insb
jae
add
cmp
outsl
nop
add
sbbb
jb
sti
or
or
out
dec
inc
repz
add
punpckhbw
inc
and
add
dec
popf
adc
sar
inc
add
mov
pop
inc
mov
pushf
loopne
sbb
adc
mov
sbb
push
mov
push
pop
ja
stc
add
add
jns
gs
cmp
in
decl
repnz
cmpsl
sbb
add
inc
pop
inc
add
cs
pusha
adc
cmc
loopne
movsl
add
mov
lds
int
push
xchg
adc
stos
add
fwait
adc
xor
add
pusha
mov
xchg
dec
add
aas
inc
mov
cmp
out
pop
arpl
push
cmpsb
inc
enter
out
mov
push
sub
out
fimull
addb
inc
cmp
mov
cmp
fiaddl
pop
adc
mov
cmp
stos
pop
lret
mov
xchg
add
cmp
lds
fiadds
jle
es
dec
mov
jne
jae
aas
xlat
inc
add
cmp
push
fwait
movsl
sti
add
mov
sarb
mov
xorb
incb
xchg
into
pop
mov
test
add
pop
mov
pop
bound
divb
push
sbb
add
adc
add
jmp
add
xchg
xor
add
loopne
loope
push
test
in
aam
push
add
sub
data16
ss
add
and
xchg
adc
lods
sbb
jle
pop
mov
add
sub
dec
lahf
cmpsl
add
jb
add
add
xor
int3
ja
push
fmuls
pop
loop
push
jns
cltd
xor
imul
lcall
aad
sbb
hlt
push
lods
add
sbb
sbb
test
out
pusha
out
sub
bound
mov
add
xchg
push
loop
pop
cmpsb
insl
mov
lret
mov
aad
add
jo
dec
add
jne
mov
jb
xchg
outsb
aas
add
sbbb
rolb
push
push
xor
add
hlt
arpl
pop
pop
pop
mov
xor
sbb
data16
mov
sub
pop
test
mov
sbb
data16
cltd
add
repz
es
push
faddl
fldl
or
mov
xchg
add
popa
xor
add
mov
nop
jnp
outsl
mov
add
xlat
sarl
and
addr16
add
sub
ja
shl
pop
sti
push
jmp
sub
mov
inc
push
lret
adc
ljmp
movb
je
movl
push
ret
subb
add
repnz
repz
cmp
shl
add
sbbl
inc
push
fcmovbe
mov
add
pop
shrb
cmc
lcall
in
iret
inc
sbb
push
xor
mov
xor
mov
sub
jnp
mov
xchg
pop
outsb
sbb
call
cltd
push
fcmovnbe
push
jbe
loop
movsb
jmp
mov
or
add
shll
fidivl
and
data16
lcall
mov
xchg
push
add
inc
cmpsb
adc
jmp
pop
loope
jb
add
mov
lret
out
das
add
stos
ret
xor
sub
jg
add
add
cmp
es
scas
push
add
inc
gs
mov
ds
push
jg
andb
popf
add
call
push
add
in
mov
xchg
inc
sbb
sbb
cmpsb
jnp
add
mov
out
subl
adcb
jge
pop
add
mov
or
or
and
or
cmpsb
popa
in
or
xlat
push
repnz
shrb
xor
mov
rolb
outsl
ljmp
sbb
add
stos
inc
inc
test
fimull
inc
movsb
xchg
pop
cwtl
inc
jmp
mov
out
rcl
gs
xchg
mov
dec
jbe
mov
sbb
pop
cmp
aad
insb
pop
addr16
out
add
pop
xor
xor
mov
outsl
cmp
add
je
add
jns
or
in
sub
inc
xor
or
mov
jo
push
add
or
icebp
xlat
paddw
inc
inc
xor
movsl
push
or
aas
in
xchg
mov
das
push
lea
mov
rcll
insl
jo
add
and
push
xor
add
in
inc
push
mov
add
test
xchg
adc
sbb
push
pusha
faddl
hlt
inc
repz
ja
cwtl
mov
inc
cmpsb
insb
pop
xor
xchg
jno
sbb
mov
ss
add
mov
loope
add
mov
jb
pop
sub
loop
sbb
sti
mov
add
push
add
jle
mov
pop
add
add
gs
pop
jnp
jp
or
jae
je
test
dec
popf
push
pusha
repnz
ss
ljmp
xchg
pop
stc
jb
add
sub
rolb
in
jle
sbb
nop
push
cmpb
fs
sarl
mov
aam
cld
enter
out
dec
inc
jae
int
lods
rolb
push
in
jmp
add
or
out
add
xchg
notb
std
cmp
pop
dec
add
sbb
stos
pop
push
add
ret
inc
dec
adc
cld
gs
push
repnz
cmp
fstpl
and
xor
add
ljmp
int3
mov
dec
andb
dec
add
adc
subb
xchg
in
test
push
add
xor
push
test
ret
mov
add
jae
pop
add
adc
aam
push
xchg
sub
or
push
movb
add
sub
aas
adc
xchg
rcrb
cmp
jbe
subl
push
stos
xor
pop
daa
mov
test
mov
sbb
or
push
nop
jae
cmp
data16
add
jns
push
int3
or
jl
cmpsb
pop
jb
psraw
jo
sbb
outsb
insl
lods
in
mov
sarb
fs
pop
imull
iret
clc
xchg
loop
movsb
in
push
in
jge
add
cltd
in
add
xchg
sbb
fiaddl
pop
sbb
pop
cmp
outsl
lock
in
inc
fiadds
inc
mov
stc
xchg
push
ja
pop
xor
dec
sbb
push
add
hlt
xor
pop
dec
pop
push
loopne
inc
push
add
push
push
sbb
add
ja
icebp
into
dec
add
jmp
xchg
in
xchg
push
add
fildl
rolb
jle
fists
mov
jg
je
aas
aas
adc
add
outsb
into
std
loope
mov
cmp
pop
movsl
lock
hlt
cwtl
xchg
je
adc
data16
xchg
mov
jmp
int3
sub
add
flds
adc
iret
mov
cmp
push
aas
inc
flds
clc
test
or
icebp
setl
xchg
mov
inc
mov
aas
int
pop
repnz
xchg
add
push
sbbb
pop
test
enter
insl
inc
push
sub
in
lods
subl
add
repnz
rcl
outsb
incb
cmpsb
rcr
faddl
add
stos
sbb
inc
pop
lock
rorl
mov
push
mov
add
and
or
push
icebp
scas
add
mov
sub
mov
pop
mov
lahf
sub
push
popa
lock
mov
or
push
cmp
outsb
sahf
add
arpl
jecxz
jae
push
iret
push
ss
push
movsb
outsb
aaa
xchg
add
sarl
je
push
or
xor
stc
sub
bound
push
jo
adc
hlt
mov
andb
add
fcomip
add
xor
aam
aas
pop
pop
add
rcll
out
bound
js
and
shlb
xor
jbe
inc
add
xor
add
es
pop
cld
pop
movb
dec
add
adc
push
cmp
iret
add
cmpsl
out
add
aas
add
pop
out
add
fidivrl
or
cmp
je
add
add
out
cmp
shrb
mov
add
repz
addr16
mov
jp
and
xor
lret
testb
mov
out
cmp
push
add
sub
add
sub
cltd
icebp
fildl
xchg
cs
mov
scas
cmp
dec
jb
add
jnp
push
cmp
fcompl
fdivrs
mov
mov
insl
add
ret
xor
cmpsl
sarb
pushf
cmp
mov
xchg
push
sbb
adc
out
loopne
inc
sub
mov
outsb
lock
adc
cmp
adcl
and
mov
cmp
mov
push
neg
mov
in
cmp
add
xchg
sbb
pop
ljmp
jecxz
and
inc
mov
mov
mov
pusha
jo
cmc
add
dec
ds
push
sbb
sbb
add
push
iret
das
gs
inc
mov
jg
icebp
xor
call
mov
leave
cmp
add
rcrb
pop
push
les
pop
adc
and
addr16
inc
xor
ja
add
shl
fcmovb
jg
add
jb
add
sahf
fimuls
pop
jle
nop
aam
jp
pusha
mov
xchg
cmp
mov
mov
mov
lock
aas
insb
fiaddl
js
mov
repz
out
sub
mov
sbb
dec
jg
aas
lds
stos
pop
pop
paddusb
mov
sti
ss
add
enter
mov
lods
jle
in
jne
stc
dec
jnp
movsb
mov
adc
add
adc
ja
add
mov
xchg
test
adc
add
stos
xchg
inc
pop
xchg
push
dec
leave
cmp
filds
xchg
dec
mov
aam
addr16
je
add
jne
stos
imul
inc
add
lret
mov
fsubs
popf
add
adc
sbb
test
sbb
xchg
shlb
jmp
aas
jno
sub
pop
sub
stc
and
add
ds
fnsave
dec
pop
jo
xchg
lock
adc
loopne
frstor
sub
pop
adc
fldlg2
daa
add
push
sub
push
icebp
xor
push
test
xchg
jnp
rorb
inc
in
push
fmuls
and
dec
mov
add
mov
and
and
push
fildl
cmp
mov
jae
sti
popf
add
insb
xor
test
out
testb
test
ret
inc
xchg
scas
loop
cltd
push
sbb
jecxz
xor
sub
mov
or
adc
int
pusha
js
pop
dec
fcoms
add
xorb
mov
mov
xchg
sbb
inc
add
nop
imul
xor
add
stos
fucomip
jns
add
and
test
mov
scas
and
dec
testl
add
xor
lods
shrl
inc
jg
dec
test
jnp
add
inc
mov
sbb
pop
mov
xchg
sbb
aaa
add
jbe
sub
sar
cmpsb
int3
cld
subb
add
jns
dec
aas
mov
adc
inc
add
out
push
pop
push
inc
lahf
cmpsl
test
sbb
cmp
lods
add
movb
and
sti
add
or
push
jmp
xor
loop
xor
sahf
pop
cltd
push
sbb
stc
mov
incb
jbe
pop
add
movsb
fsts
mov
push
add
adc
icebp
cld
fstpt
pop
fimuls
mov
and
add
pop
inc
cli
cmpsl
loopne
out
add
mov
mov
or
add
pop
mov
daa
jle
lret
sbb
mov
add
out
lea
in
inc
mov
nop
mov
fidivs
and
add
or
loop
andps
mov
add
mov
add
loopne
pop
popf
aas
and
mov
aam
add
fcomps
jno
and
xchg
sbb
shlb
add
ljmp
popf
mov
add
clc
inc
hlt
push
out
cmp
in
ljmp
loopne
fs
jg
cmp
lock
cmp
add
pop
sbbb
fninit
inc
pop
mulb
pusha
add
pop
xchg
movsb
and
xor
add
adcb
in
sbb
push
leave
mov
out
out
fistl
test
pop
or
add
aas
popf
pop
mov
jg
fwait
sar
mov
add
mov
mov
insl
xchg
icebp
push
in
addb
add
add
mov
jnp
add
pop
lret
fsubrp
fadd
enter
orb
rol
in
mov
inc
icebp
and
jae
roll
out
lea
cmp
pop
mov
jp
add
fwait
cli
xor
outsl
add
mov
mov
js
sub
add
mov
or
xor
push
xchg
cmp
clc
mov
addl
xchg
jns
and
dec
or
mov
jl
jmp
shl
mov
pop
add
adc
add
cs
fiaddl
out
xor
or
aas
pop
mov
mov
add
add
imul
inc
call
fcmovnbe
stos
rol
push
shlb
xchg
push
add
in
jp
add
stc
out
enter
sbb
hlt
cmpsb
in
in
pusha
pop
sbb
push
fmull
sub
add
jae
inc
xchg
add
xchg
and
shrb
fistpll
sbb
inc
jnp
pop
mov
nop
mov
imul
inc
nop
subb
and
add
sub
loopne
cmp
add
inc
add
out
iret
push
mov
in
inc
mov
test
add
push
enter
sar
cmp
mov
lock
add
inc
mov
mov
aam
insl
add
mov
add
mov
jmp
arpl
loopne
mov
outsb
sub
xchg
shlb
and
es
jge
cmp
or
dec
cmpsl
sbb
aas
mov
ficomps
aas
xchg
lods
add
cmc
cmp
rcll
test
add
fs
mov
push
add
jno
or
bound
fildl
in
adc
cmp
lods
stos
mov
movl
inc
sub
or
sarl
add
cmpsb
xor
ss
mov
shlb
ret
fwait
and
jmp
adc
add
jle
adc
sub
add
out
and
repnz
sub
xchg
mov
mov
mov
add
std
testw
subl
rorb
sbbb
das
cmp
sub
mov
hlt
push
xor
jbe
mov
leave
push
insl
fists
sti
jge
inc
lret
test
pop
fs
pop
movsl
clc
add
jnp
and
pop
int3
rcrb
dec
outsb
jecxz
lret
cmp
jmp
pop
mov
ljmp
sub
add
sbb
pop
xchg
adc
add
and
out
lds
inc
cwtl
jl
mov
or
outsb
into
sub
daa
gs
add
in
mov
mov
out
dec
enter
jo
cltd
gs
inc
fwait
mov
popf
push
or
xlat
lods
aaa
ret
sub
pusha
add
lret
inc
popa
mov
lea
xchg
add
cld
lods
sti
mov
cwtl
and
add
pop
cmpsl
xchg
sahf
pop
add
enter
mov
xchg
test
lret
mov
xchg
jmp
mov
fwait
pop
add
cmp
fidivl
in
add
and
into
mov
in
and
lds
push
sbb
add
mov
stos
add
mov
dec
add
cs
mov
mov
mov
add
movsb
test
or
dec
dec
imulb
push
cli
call
push
push
jae
or
add
sti
cltd
dec
fldln2
jg
add
cmp
mov
lret
and
cmpsl
add
xorl
out
mov
xchg
shll
add
jg
mov
invd
push
inc
jne
jmp
fadds
es
lea
dec
cwtl
push
push
push
addl
mov
insb
js
add
pop
int3
aas
out
xchg
add
mov
dec
push
dec
xor
shlb
mov
movntps
cmp
popf
and
pushf
xchg
fimuls
dec
loopne
aaa
cmp
ret
xor
and
sbb
push
stc
inc
sbb
lods
push
xchg
sbb
add
xchg
add
cli
cmp
imul
or
adcb
in
rorb
iret
dec
add
and
lret
mov
xchg
jecxz
insl
push
nop
add
ja
ret
addr16
mov
and
ljmp
sub
xchg
pop
pop
add
addb
xchg
das
sub
cmpb
mov
or
sub
and
adc
cmp
sub
lea
xchg
sbb
mov
mov
shrl
aaa
mov
outsb
push
add
popf
jo
jle
shl
jns
sahf
xchg
add
adc
lcall
mov
js
repnz
push
push
sete
call
push
pop
add
xor
sbb
mov
cwtl
mov
xchg
xchg
or
std
daa
add
fwait
sub
movsb
cwtl
and
sub
je
sbb
mov
jno
push
add
push
out
mov
inc
iret
out
xor
fxch
pop
mov
mov
push
and
or
sahf
mov
fsubrs
outsl
cld
sbb
add
jge
fsubrl
add
mov
jbe
repnz
add
fwait
adc
push
push
add
dec
mov
push
pop
cmpsb
sti
add
or
cwtl
int3
out
mov
ljmp
mov
cmp
mov
movsl
pop
push
add
add
or
call
rclb
lods
fldl
ljmp
repz
stos
aaa
in
mov
scas
sahf
aad
popf
loop
mov
and
mov
adc
pop
mov
jne
jmp
adc
test
fstpt
sub
push
insb
sub
lods
add
or
addb
dec
pop
add
cmovbe
fwait
into
test
pop
nop
rcll
call
and
sub
push
sbb
ja
imul
loop
test
lahf
add
andb
cmp
and
movsb
push
sub
push
and
add
push
mov
jo
fbstp
xchg
out
pop
mov
addb
push
jns
add
lcall
add
cmp
test
pop
movsb
push
dec
dec
jb
cwtl
sbb
cmp
sarl
popl
xor
and
aad
pop
lods
in
add
sub
sub
sbb
out
stc
jle
fs
mov
imul
ja
add
cltd
repz
out
add
jl
jbe
add
mov
test
fwait
orb
dec
jno
inc
jecxz
add
inc
dec
scas
out
add
je
loop
xchg
fldl
cmp
mov
rcll
mov
lods
add
lahf
pop
dec
addl
mov
cmp
rolb
arpl
das
adc
dec
js
mov
and
popf
add
mov
ds
in
jno
jg
cmpsb
lcall
daa
xor
jns
jb
add
jge
cli
cs
movsl
ds
addr16
outsl
sbb
add
faddl
jle
in
jns
in
add
dec
sbb
lret
jmp
or
add
mov
sub
shrb
pop
or
mov
jo
adc
outsl
ja
or
dec
subl
add
push
jns
adc
cwtl
enter
mov
dec
movzwl
orl
dec
pop
sarb
andb
aas
addb
pop
sbb
jge
cld
push
stc
cmp
sbb
je
cmp
pushf
add
loopne
aam
leave
inc
cld
add
clc
movsb
xchg
xchg
mov
sub
cwtl
test
sbb
std
dec
add
mov
lret
add
or
daa
call
dec
ss
out
stc
in
fildl
mov
and
ret
dec
add
or
inc
inc
jb
pop
nop
add
sub
popf
hlt
push
add
push
mov
es
orl
add
push
data16
fs
add
ret
paddusb
adc
lret
mov
dec
push
sub
inc
lods
inc
mov
repz
jp
data16
xchg
add
pop
mov
and
add
andl
add
test
push
cmpb
lock
jbe
add
xor
add
xchg
or
arpl
into
fsubs
ret
negl
movsb
aam
sahf
popf
leave
pop
push
sbb
das
jle
add
iret
jg
dec
cmpsb
les
mov
xor
pop
jns
sub
push
out
call
jp
aaa
add
or
inc
and
repz
addr16
mov
and
leave
aam
jmp
add
cmpsb
dec
sub
out
add
adc
xchg
js
jnp
add
cwtl
lahf
mov
jnp
push
fcoml
inc
dec
jo
adc
add
ss
push
sub
xchg
add
mov
add
mov
loopne
xchg
es
add
out
xorl
mov
add
fs
loopne
lahf
and
fiadds
xchg
xor
out
adc
rcl
pop
inc
pop
les
adc
inc
add
jbe
out
rcll
pop
add
add
adc
xchg
cmp
leave
jae
ja
call
subb
sbb
dec
mov
inc
lods
ljmp
mov
cmpsb
dec
ret
add
jno
xor
arpl
movaps
nop
add
pop
gs
call
sbbb
imul
push
in
mov
add
inc
xor
stc
push
xchg
jl
pop
sti
push
sbb
mov
loop
out
add
jbe
dec
adc
filds
jae
lods
int3
movsb
mov
addr16
cmp
fistl
cmp
add
push
in
push
arpl
pusha
mov
mov
jno
add
sarl
sbb
cld
loop
and
add
mov
or
aam
jb
mov
add
pop
sbb
dec
add
inc
es
jl,pt
repz
mov
lahf
inc
imul
jle
cld
add
lea
ret
cmp
daa
orb
sbb
xor
mov
push
inc
xor
push
and
ret
hlt
or
pop
mov
add
xorl
push
jmp
arpl
or
loop
loop
add
inc
dec
add
push
inc
and
cmpsb
inc
loop
ret
mov
jb
xlat
fisttps
idivl
mov
sti
test
and
and
xor
jns
jge
repnz
add
pop
inc
fcoml
cli
out
or
je
jo
sbb
pop
sar
add
into
pushf
hlt
insb
mov
ja
and
mov
pop
enter
ret
jb
mov
popf
repnz
outsl
add
negb
hlt
int3
pop
cmpsb
rorb
shr
add
and
and
popf
mov
jne
pop
test
mov
mov
cmp
jp
cmp
sbb
jbe
or
shl
add
mov
scas
mov
int
es
pop
rolb
xor
cmp
mov
jo
dec
xchg
push
mov
push
inc
push
loopne
pop
clc
and
push
mov
xchg
dec
xor
cmp
lods
add
sbb
in
test
add
cmp
xchg
into
mov
mov
push
iret
repz
ljmp
add
mov
daa
mov
pop
inc
and
incl
imul
jecxz
out
hlt
incb
fs
push
dec
iret
ja
lahf
jge
sub
and
xchg
jne
fisubl
leave
scas
js
popa
je
mov
lock
mov
movsb
xor
jo
sub
add
inc
rclb
test
add
lods
push
cmpb
sahf
loopne
cmc
inc
adc
inc
ja
notb
add
pop
out
jg
and
push
fwait
sub
in
adc
movsb
jae
add
inc
aam
add
add
cmpsb
imul
or
inc
xchg
clc
out
movsb
push
cltd
pushl
xorb
out
xchg
add
push
xor
or
xchg
dec
fdivl
scas
mov
pop
add
sub
jp
add
int
dec
stc
lock
add
jo
mov
and
push
std
jnp
xor
add
fwait
sbb
int
insb
add
aas
lcall
xchg
out
pushf
adc
push
mov
sbb
rcrb
icebp
mov
push
sbb
orl
ljmp
mov
into
sub
fmulp
and
add
loop
ja
sbb
inc
adc
jo
xchg
and
push
loope
imul
jne
or
in
adc
sub
idivl
jle
cld
roll
xchg
inc
in
and
sub
ret
mov
dec
pop
popf
mov
jo
sub
test
push
add
jp
call
add
cli
fwait
int3
scas
jne
sub
cmp
sbbb
repnz
bound
xchg
cmp
jle
std
xor
faddl
push
xor
jecxz
idivb
jns
out
pusha
adc
mov
pop
and
pop
pusha
in
pop
mov
gs
out
dec
pusha
cmp
jno
das
inc
pop
arpl
movb
push
imul
push
leave
mull
mov
cmp
rcrb
aam
mov
jne
pop
sub
inc
xlat
adc
xchg
xchg
cmpsl
aas
lock
add
out
aaa
mov
inc
clc
or
xchg
push
or
lahf
inc
aad
mov
jne
stos
add
sbb
sub
inc
loope
push
cmp
cmpsb
add
in
daa
rcll
or
add
pop
pop
enter
fucomp
mov
xchg
aam
clc
roll
mov
pusha
xchg
dec
fmul
pop
add
test
lock
xchg
add
shlb
insl
pop
les
mov
lret
add
adc
aas
call
sub
or
mov
out
sub
jl
clc
cwtl
cli
jge
jg
shlb
ror
jae
add
lea
sbb
xchg
pop
push
insb
add
add
out
or
inc
notb
shrl
push
cwtl
xchg
push
cmp
sbbb
jg
inc
add
into
shlb
lock
ds
sbbb
in
outsb
stc
pop
xchg
pusha
cmpsl
aad
test
shl
sti
clc
filds
cmp
sahf
push
enter
in
add
xlat
int3
and
sbb
inc
push
push
ret
call
and
xlat
jae
or
cmpsl
add
push
stos
rclb
add
stos
pop
or
scas
add
or
aad
add
lock
sub
popa
adc
enter
idivb
pop
imul
das
push
leave
xor
fsubrl
sbb
cmpsb
mov
iret
lcall
rcrb
ds
das
mov
cld
dec
add
sub
gs
add
lds
nop
push
fucomip
cmpsl
mov
or
add
test
add
inc
pusha
adc
lcall
push
stos
add
imul
mov
pop
test
sbb
mov
sub
sarb
lret
lcall
dec
add
fdivrs
aam
js
out
sbb
cmpsl
push
add
jne
jle
add
ret
dec
xchg
sub
jb
add
pusha
or
loop
leave
jns
ds
xor
adc
or
int3
add
mov
loopne
xchg
lods
add
outsl
or
push
and
pusha
insb
add
add
xchg
add
dec
mov
cmp
inc
dec
scas
aad
rcr
imul
mov
add
jne
loope
movsb
adcl
jge
sbb
cmp
divl
mov
mov
sub
xor
stc
lock
dec
mov
add
sarl
rclb
stc
es
lods
pop
ret
dec
push
pop
push
out
add
push
inc
mov
icebp
add
in
jae
out
nop
dec
cmp
fs
or
sbb
add
jne
add
lock
shlb
add
scas
hlt
icebp
inc
cwtl
cmp
in
inc
xor
inc
or
add
jae
rorl
xlat
add
enter
mov
add
jge
cmp
inc
inc
jo
loope
push
and
mov
lret
loopne
test
jg
flds
xor
scas
and
cwtl
mov
mov
lea
ja
iret
inc
xor
sti
lock
es
xchg
jae
add
icebp
fsubl
imul
test
loopne
mov
xor
pop
add
add
push
lret
in
pusha
add
movsb
mov
push
clc
xor
aas
mov
push
adc
add
fildl
insl
cmpsb
or
mov
pushf
inc
nop
mov
sbb
mov
data16
push
iret
push
sahf
subl
dec
or
cwtl
fwait
pusha
push
sbb
outsl
add
fiadds
js
pop
int
stos
jno
xlat
aad
xchg
sti
out
add
movsl
popa
sub
loop
imul
jne
add
pop
dec
dec
movsb
mov
add
outsl
ljmp
jns
xor
push
mov
dec
bound
push
add
xlat
sub
jae
pop
add
imul
dec
repnz
add
ret
lret
popa
xor
mov
out
pop
mov
pusha
mov
aam
dec
ss
xchg
xchg
mov
cmpsl
rcrw
arpl
subb
mov
hlt
aad
test
jb
daa
and
mov
ljmp
xor
jae
add
pop
fstpl
fsubr
aad
mov
mov
js
mov
into
or
outsl
enter
shll
lock
dec
add
mov
jmp
add
jg
test
mov
daa
sub
and
add
ljmp
out
lods
mov
stos
cli
mov
push
je
sahf
daa
add
xchg
fcomps
cmp
add
fistl
test
add
popl
xchg
pusha
in
pop
lret
pop
mov
repnz
je
xchg
jo
and
push
add
popf
fbstp
xchg
fs
sar
loopne
jnp
add
xchg
push
mov
xlat
fisubl
pop
cmp
xchg
mov
inc
bound
std
pop
jge
popa
mov
stc
hlt
ds
sbbb
insb
add
push
xor
rcrl
jnp
mov
in
or
fsts
add
fnstsw
fsubrs
and
xor
xor
jo
and
adc
and
add
xchg
cmp
cmp
or
jg
pcmpgtw
jb
orb
inc
mov
mov
dec
xchg
iret
lds
pop
in
push
push
pop
and
and
push
mov
add
out
mov
jb
pusha
lock
testl
inc
cld
sbb
aaa
hlt
testb
add
adc
and
dec
pop
push
push
xchg
or
iret
rol
pop
jl
lret
adc
jo
add
pop
or
jp
adc
xchg
and
int
add
adc
pop
adc
cs
pop
aas
xchg
arpl
add
rol
daa
pop
clc
push
add
cmp
mov
fmuls
dec
lret
xchg
add
add
adc
cmpsb
add
pop
adc
leave
fstps
mov
add
cltd
loope
dec
cmp
cmp
pushf
add
imul
loop
add
insb
into
xchg
ficoms
add
push
dec
mov
add
pop
sub
inc
iret
xchg
add
pop
xor
je
add
inc
rcl
push
inc
add
rcl
insb
mov
sbb
sbb
ror
jge
daa
ret
cmpsb
inc
call
nop
lcall
and
adc
cmp
dec
mov
cmp
add
rcrl
aad
pusha
cwtl
lret
pusha
and
mov
add
push
add
mov
adcb
add
dec
dec
mov
aaa
mov
out
pop
push
enter
pop
cmp
ret
scas
rolb
lcall
scas
cmp
pop
mov
testl
addr16
std
ftst
outsb
shl
add
xor
adc
inc
push
std
jae
bound
adc
sub
cmp
adc
mov
arpl
test
clc
dec
jmp
les
ret
sbb
mov
cmp
inc
mov
mov
add
adc
pop
jne
add
jp
cltd
fimuls
test
nop
add
out
pop
add
xor
xor
leave
add
pop
or
addl
inc
sub
xlat
xor
add
mov
dec
jmp
movsb
or
imul
dec
sbb
popf
outsb
hlt
dec
incb
insb
jns
scas
mov
pop
jecxz
mov
xchg
insb
mov
sub
in
add
pop
sbb
sbb
ja
sub
outsl
add
add
xchg
sbb
add
push
mov
pop
add
les
and
movsb
xor
ficoml
jge
sub
mov
insl
pop
dec
add
sbb
push
aas
and
daa
sbb
inc
dec
shll
in
fadds
push
push
mov
add
cmp
and
push
sbb
xchg
aaa
clc
jp
icebp
add
inc
fcmovnu
mov
add
xchg
lea
jle
jle
sbb
popa
int
sub
add
add
fxch
lea
push
sbb
inc
and
xchg
test
adc
sbb
dec
push
scas
inc
jno
dec
sub
mov
mov
out
loopne
pop
dec
or
out
add
adc
inc
sbb
add
mov
jge
pop
cmp
cmpsb
mov
or
in
or
filds
inc
ljmp
mov
repnz
mov
icebp
mov
mov
xchg
add
or
mov
mov
cltd
fwait
pop
cmp
adc
xor
dec
push
cwtl
sbb
add
sar
cld
cltd
xchg
add
pop
loopne
jp
add
rcll
xlat
adc
sahf
sub
sbb
fidivl
dec
stos
cmp
cwtl
push
push
fcomps
pusha
and
inc
pop
sub
lret
xchg
xchg
inc
mov
cmpsb
pop
add
pop
pop
adc
insl
add
repz
push
lock
shll
mov
jl
push
dec
add
mov
inc
mov
xorl
or
cmc
call
shll
pop
test
xor
fiaddl
js
push
sbbb
sbb
or
xor
dec
rolb
xchg
aas
adc
call
mov
jle
popf
mov
push
xchg
dec
add
add
sbb
pop
push
pop
test
mov
sub
aad
adc
push
ja
pushf
cmp
fldl
dec
fdivr
mov
xchg
pop
imul
or
adcb
or
stos
and
int
cmp
push
add
cltd
dec
mov
cmp
ret
xchg
imul
add
aad
outsl
mov
mov
add
adc
lods
lea
jae
idivl
push
insl
inc
push
andb
add
test
mov
add
aaa
repnz
mov
cwtl
add
ret
call
or
stos
into
sti
xor
xor
mov
nop
rclb
cmp
repz
push
add
mov
faddp
movsb
divb
data16
mov
and
fstl
repz
out
add
lods
shlb
pop
jecxz,pn
insb
add
faddl
addb
add
pop
or
sti
mov
test
aas
adc
dec
aad
and
mov
adc
movb
dec
stos
mov
sti
adc
lcall
mov
stos
repz
popf
insl
add
jb
jmp
pop
fadds
andb
mov
sbb
sub
pop
mov
sbb
int
orb
mov
add
rorl
add
loope
add
jl
dec
icebp
xor
push
daa
jno
cld
jl,pt
add
jnp
dec
les
push
xchg
andb
nop
or
and
add
out
int3
daa
flds
sti
mov
in
lret
nop
mov
rorb
out
bound
jmp
cmp
ret
mov
jl
shrb
sbb
test
fadds
pop
mov
xor
xor
imul
in
sub
add
push
jbe
sub
lret
mov
push
sbbb
mov
sub
mov
xchg
out
cwtl
sarl
mov
push
cmpsl
scas
or
adc
or
xlat
fcoml
sahf
dec
jb
lcall
fwait
lea
test
add
xlat
pop
daa
dec
lcall
cmpsl
clc
test
jb
cltd
pop
cmp
add
aam
cmp
sar
cs
mov
in
movsl
popa
xchg
mov
aaa
or
iret
idivb
add
pop
lahf
sub
push
add
hlt
daa
inc
xchg
into
jb
add
outsb
ljmp
bound
ret
add
movsl
test
add
int3
out
aaa
popf
adc
xchg
ret
scas
cmp
add
sbb
and
cmp
fs
push
inc
fdivrl
cmc
add
lods
mov
enter
xchg
lcall
push
insl
adc
or
fdivrl
push
loopne
sub
inc
add
std
leave
inc
jmp
call
insl
and
dec
stos
add
movsl
scas
lea
add
xor
mov
pop
add
xchg
or
cs
push
push
xorl
aam
push
add
jo,pt
into
lock
push
popa
add
push
lret
imul
inc
add
and
jg
xabort
iret
data16
ss
sub
jae
cmp
repz
imul
ljmp
stos
lcall
xor
into
lret
xor
das
push
add
and
push
mov
push
in
sahf
loopne
add
insb
and
in
cltd
inc
mov
jecxz
pop
out
mov
enter
nop
sub
aaa
xor
mov
repz
jp
iret
inc
les
mov
pop
test
rcrb
sub
mov
stos
cmp
stos
rcrb
fildll
and
mov
xor
sbb
nop
mov
add
and
xlat
test
dec
std
add
jle
aam
sub
daa
js
inc
add
mov
sbb
lds
test
inc
inc
add
mov
mov
fdivrs
add
out
bound
xor
mov
mov
das
outsl
push
add
pop
sbb
cwtl
add
jg
fucomip
cmp
test
orb
movl
xchg
into
popa
add
mov
or
jg
add
loope
push
and
jmp
out
loop
fnsave
xorb
mov
loopne
test
sti
add
inc
mov
jnp
add
cmc
stos
les
or
dec
fwait
shlb
inc
and
pop
sub
add
outsl
jecxz
add
sbb
or
inc
out
add
xorl
js
test
sbb
mov
movsb
add
ljmp
push
inc
jbe
je
aad
cmp
sti
add
out
enter
hlt
inc
xor
dec
push
fisttpl
or
or
jno
bound
push
cmp
test
or
in
add
enter
loope
push
roll
adc
or
test
pusha
sbb
mov
into
mov
dec
add
test
repz
mov
lds
xorl
outsb
cmpsl
add
pop
jmp
shlb
imul
stos
adc
add
cmpsb
shlb
fiaddl
dec
jmp
cli
dec
inc
add
lahf
sbb
sbb
xor
fcom
loopne
cmpsb
imul
bound
adc
mov
mov
add
add
inc
mov
or
ret
pop
aad
jbe
add
shll
push
mov
lods
repnz
pop
inc
and
mov
das
nop
roll
icebp
add
ds
fwait
sub
scas
push
ljmp
push
push
cld
mov
fildl
dec
cmpsb
mov
addb
push
jg
sub
in
cltd
or
push
sub
lods
in
add
xor
inc
jg
sbb
sub
jae
add
inc
fsubrl
repnz
mov
aaa
test
add
inc
clc
aam
in
fldt
xor
test
xchg
xor
cmp
pop
pop
or
xor
cmp
shll
mov
ror
lret
add
mov
test
mov
loopne
aad
in
test
add
jbe
ror
das
mov
dec
cmpsl
mov
scas
inc
jnp
adc
out
lods
mov
ficompl
jmp
in
push
add
dec
adc
pop
add
les
fidivrl
mov
enter
call
jo
or
push
cmp
rcll
outsl
js
mov
ret
lret
dec
insb
and
sub
push
cmp
or
jecxz
inc
mov
shlb
jmp
adc
cwtl
add
ficomps
mov
inc
adcl
andb
adc
add
jg
lock
rcrb
leave
out
mov
insl
mov
adc
or
sti
cmp
add
xchg
xchg
movsl
leave
jae
mov
add
fldt
inc
movsb
jae
test
pop
push
loopne
insl
adc
int
inc
push
adc
inc
movsb
mov
test
mov
into
mov
xor
push
and
mov
mov
lods
add
adc
out
pop
add
jg
test
push
pop
add
aas
mov
xchg
push
add
pop
into
and
add
add
pop
xchg
loopne
inc
les
add
pop
mov
add
cmp
aam
jns
fiaddl
dec
sub
or
pop
pop
hlt
rcrb
ss
cltd
push
loope
pop
push
push
ret
cmp
scas
jmp
inc
xor
loopne
movsb
repnz
int
and
js
cld
inc
cmpsl
dec
dec
pop
or
add
inc
and
add
jge
add
jmp
sbb
iret
daa
repz
movsb
xchg
pop
loope
test
push
and
xchg
mov
clc
sarb
mov
cld
nop
dec
add
shrb
test
adc
shrl
ja
or
pushf
add
faddp
movsl
mov
dec
inc
jno
pop
jo
loope
je
dec
sarl
add
mov
adc
add
mov
cld
out
mov
mov
pusha
pop
push
mov
xchg
repz
nop
xchg
ficomps
sub
insb
xchg
hlt
into
sarl
ljmp
push
push
repz
mov
cmp
loopne
js
mov
or
pop
mov
subl
pop
shlb
push
lcall
stos
insb
outsb
cli
or
add
adc
bound
or
adc
jnp
movsb
cmp
mov
cld
shlb
mov
add
add
dec
mov
popf
shlb
outsl
movsb
push
into
pushf
xchg
ss
nop
fwait
mov
bound
mov
es
jae
in
jo
dec
fldlg2
cmp
lcall
add
mov
add
adc
jns
xchg
out
add
lret
cmpsb
stos
mov
add
push
fwait
popf
icebp
rorb
hlt
fs
loope
mov
sub
mov
ret
sbb
outsl
in
repnz
add
sbb
mov
xor
cmp
fldl
cmp
and
add
push
xchg
add
pop
or
mov
sub
adc
xchg
push
sub
popa
insb
xchg
xor
dec
data16
xchg
add
out
ja
repnz
test
fs
add
jnp
push
add
enter
pop
pop
outsl
add
test
xor
add
sbb
or
dec
jmp
mov
sbb
xchg
sbb
add
mov
add
xor
js
sub
pop
cmc
mov
sbb
jl
andb
cmc
push
jo
mov
sbb
sar
mov
mov
das
scas
mov
dec
add
in
sbb
inc
or
xchg
test
mov
roll
pop
jp
insl
cmp
negl
mov
push
push
cwtl
rorl
inc
and
xchg
dec
loopne
mov
les
lret
xor
push
int3
add
out
fcompl
sub
aas
lcall
xlat
lock
mov
add
push
push
cld
add
and
je
dec
daa
xchg
pop
cmp
fdivl
sbb
jp,pt
cmp
repnz
cmp
push
outsl
into
jb
dec
mov
sbb
adc
pop
mov
test
xorb
add
addr16
xchg
xor
frstor
pop
lock
mulb
hlt
stos
adc
jnp
jge
xchg
pop
nop
in
add
insl
or
jb,pt
add
jg
add
lcall
sbb
sbb
inc
push
mov
add
fnstsw
fwait
cwtl
jp
pop
addb
aas
rolb
in
loope
push
push
testb
dec
scas
jo
fdivrs
stos
xchg
dec
jmp
adc
lret
add
sub
push
cmp
incb
xor
call
cmp
aaa
and
ds
add
sub
popa
icebp
inc
cmp
add
mov
imul
jnp
das
mov
andb
or
fnsave
inc
mov
add
mov
add
movsl
mov
orb
jnp
add
pop
out
outsl
jle
jge
add
xchg
push
loopne
clc
stos
adc
and
jb
les
add
or
aas
push
pop
fs
out
andb
and
stos
and
or
add
mov
mov
mov
lds
enter
sbb
vmwrite
loope
add
das
ret
jmp
out
mov
push
hlt
jp
add
leave
fmulp
je
fmuls
cmp
cld
or
push
addb
and
insb
int
push
std
loop
inc
add
fildll
xchg
pusha
sbb
ficomps
imul
rclb
loopne
mov
cld
testl
movsb
outsl
sub
adc
mov
insb
or
add
xor
mov
scas
inc
faddl
stos
push
mov
fadd
cmp
cmp
xor
xor
add
loope
pop
sbb
in
shlb
push
or
loopne
addr16
inc
loop
sarb
sti
mov
enter
inc
imul
dec
cltd
push
add
int3
pop
loop
int3
das
jns
inc
jo
int
sbb
cli
lea
cld
daa
dec
inc
or
xchg
outsb
mov
push
mov
jo
les
jl
dec
lock
stos
or
xor
aaa
outsb
push
es
push
add
leave
into
cmp
xor
mov
and
addb
jg
lcall
nop
lret
loope
or
or
or
xor
push
in
or
scas
add
jl
or
jg
inc
push
out
stc
cmp
xchg
add
in
xor
loop
lods
das
ljmp
xor
jo
pop
rol
in
mov
dec
fs
add
out
pop
fwait
rcr
lods
add
insl
and
leave
inc
jecxz
shlb
inc
xor
mov
cmp
push
subb
push
fisttpll
flds
test
call
add
pop
into
sbb
dec
add
pop
mov
mov
add
inc
mov
pop
pmulhuw
fistl
pop
add
sub
add
gs
lcall
add
loop
fs
jmp
aas
mov
and
out
sub
inc
in
pop
add
jbe
cmp
filds
inc
cmp
popa
test
leave
add
add
cld
orb
jle
sub
cmp
add
fwait
xor
and
sbb
fcomp
add
push
push
fnstsw
roll
jge
dec
sbb
mov
cmp
iret
ljmp
sbb
into
or
les
and
inc
and
mov
add
or
dec
mov
nop
ret
sbb
mov
cmpxchg
mov
rorl
cwtl
mov
aas
add
mov
jecxz
add
out
ret
jle
xchg
pop
imul
dec
add
sbb
push
pusha
data16
ret
punpcklbw
add
mov
sbb
fmull
pusha
cmpsl
sub
loope
inc
pop
in
adc
inc
add
mov
inc
or
ret
cmp
inc
add
test
vmread
add
add
call
ja
dec
enter
in
sub
fimull
out
fnsave
shlb
jp
movsb
pop
andb
and
les
mov
cld
adc
jp
pop
sub
or
pop
pop
movsb
dec
loop
push
pop
add
pop
imul
sbb
call
push
sub
shll
pop
or
ja
outsl
cmp
push
in
bound
cmpsl
push
push
add
mov
int3
add
ss
rdpmc
ja
pop
movsl
into
pop
add
test
adc
fcoml
or
nop
add
addr16
pop
pop
inc
xchg
movsb
add
test
mov
lahf
scas
bnd
add
mov
stos
aaa
mov
add
stc
and
xchg
add
scas
into
adc
cld
pushf
add
popf
cmp
jno
clc
test
xlat
or
out
add
jge
rcll
je
ss
pusha
xor
and
cmp
sbb
loop,pn
adc
or
jno
inc
pop
lock
lods
std
mov
push
fs
aam
mov
sub
inc
ja
nop
add
fs
pushf
jge
add
setp
sub
mov
dec
gs
and
and
mov
adc
test
mov
push
cmp
les
das
sti
pop
addr16
or
sbb
mov
add
xchg
shll
add
in
or
test
inc
jmp
add
mull
push
cmpsb
icebp
dec
cli
mov
std
ljmp
xchg
xchg
mov
dec
mov
call
lea
adcl
cwtl
add
mov
movsb
add
xchg
xchg
movb
cmp
xchg
push
add
xor
push
pop
add
int3
lcall
cs
cmp
aad
and
scas
dec
test
ret
mov
movlhps
jo
pop
out
subb
pop
cmc
loopne
add
hlt
adc
add
clc
test
aas
call
mov
fcoml
add
pop
loop
ret
jo
pop
das
test
lock
mov
insl
jns
or
push
loope
outsl
aam
movsb
add
aam
mov
inc
add
add
inc
push
pop
call
dec
cltd
push
pop
pop
rcrb
inc
add
outsb
sbb
sti
pushf
sub
push
orb
push
add
arpl
or
das
inc
push
ret
rcl
and
cmpsl
mov
arpl
leave
add
dec
mov
sbb
in
mov
jg
pop
mov
add
add
adc
lods
dec
and
or
dec
ja
add
push
cmp
jo
and
es
testb
pop
hlt
loope
out
and
loopne
js
mov
mov
shlb
mov
movsb
and
mov
les
scas
lds
sbb
rolb
loope
adc
push
loop
pop
fistpll
addl
mov
aad
add
mov
repz
add
jge
shlb
sub
enter
pop
pushf
sub
lcall
pop
push
sub
and
loope
add
fcomi
push
add
dec
sub
adc
ret
les
call
in
out
popa
inc
sahf
loope
inc
adc
jo
add
xchg
or
xor
push
push
enter
fisubrl
push
cmpb
inc
jb
mov
dec
xor
add
sbb
cmp
mov
sub
pop
xor
dec
or
or
out
cmc
pusha
mov
jne
add
push
scas
or
pop
add
or
push
call
jb
ficomps
push
sbb
adc
push
loopne
mov
cmp
or
jno
lret
lea
sub
mov
pusha
into
pop
xor
das
push
mov
vmwrite
xlat
pop
add
lret
mov
enter
loopne
xchg
add
mov
add
add
sar
rolb
adc
or
push
in
stos
pop
cmpsl
push
jne
sarb
int3
mov
mov
inc
jmp
add
xlat
add
mov
add
mov
inc
cmp
xchg
add
push
push
mov
and
mov
mov
pop
jo
outsb
jne
les
jl
test
mov
mov
pop
sbb
loop
inc
loop
jp
dec
sub
or
insl
cli
dec
mov
loop
imul
adc
movsl
push
fdiv
bnd
pop
out
jp
jns
dec
mov
xor
gs
add
push
mov
push
je
push
inc
xlat
ljmp
add
shr
mov
shlb
push
cmp
add
popa
adc
push
jge
cmp
in
add
fs
mov
movsl
pop
jg
sub
xchg
int
pop
mov
movsb
cmp
addr16
pusha
push
loopne
fwait
cmp
loopne
lret
pop
aas
insb
add
hlt
xchg
lods
sbb
or
mov
mov
outsl
xor
das
add
cmpsb
out
jae
and
jns
xor
pop
imul
push
aam
sbb
and
repz
mov
add
lods
ljmp
dec
add
testb
xor
rorb
mov
call
or
insl
lods
sub
cmp
pushf
adc
aas
inc
and
push
daa
inc
inc
nop
pusha
and
leave
dec
jb
push
popf
test
hlt
shlb
add
inc
mov
push
push
add
and
push
pusha
clc
int
adc
call
and
sbb
mov
mov
dec
scas
clc
sub
sub
sub
es
ret
adc
inc
cld
inc
out
add
xorl
movb
clc
cmp
lock
lahf
push
jl
dec
in
pusha
cltd
and
les
test
ret
test
loopne
sub
cwtl
out
add
or
push
cmp
cmpsl
in
and
inc
leave
jnp
cmpl
int3
mov
push
enter
xchg
add
inc
inc
adc
loope
inc
pushf
pop
in
and
test
fsubr
cmp
pop
sbbl
stc
mov
fnstenv
sarl
inc
pop
dec
and
data16
fmulp
cmp
test
add
inc
sbb
push
neg
mov
shrl
std
push
rcl
xlat
lock
popf
icebp
mov
sahf
je
add
scas
mov
jne
add
or
sbb
das
jo
dec
add
cli
popf
jbe
cmp
adc
jae
sbb
cmp
sbb
repnz
and
and
pop
loope
cld
popa
pop
mov
andb
sbb
hlt
cmpsb
shlb
jns
pop
inc
and
out
lds
lock
orl
mov
js
shl
test
imul
pop
cmp
movsb
push
in
pop
popa
loopne
xor
push
or
js
sub
mov
or
xchg
or
loopne
adc
mov
mov
test
add
sbb
iret
mov
add
inc
loop
pop
pop
sti
push
or
in
test
ljmp
inc
test
popf
test
ficoms
loope
ss
sub
add
mov
cmp
add
out
and
dec
add
fstpl
les
out
add
pop
outsl
cmp
test
insl
add
hlt
js
sub
int
mov
inc
jmp
or
icebp
cmp
add
or
jle
cmp
ss
dec
pop
add
ret
lock
xor
loopne
and
mov
add
xor
into
fs
add
stos
dec
xchg
inc
roll
mov
mov
fwait
inc
movsb
adc
icebp
and
cltd
add
lret
out
xchg
sti
hlt
rorl
mov
sbb
repz
and
or
insl
xchg
loopne
add
pusha
int
mov
stos
mov
push
kmovb
add
xor
mov
loopne
fmull
xor
icebp
int3
fbld
jp
add
mov
shr
dec
ret
adc
xchg
add
aad
xor
shl
jbe
rclb
mov
add
mov
and
add
fstpt
pop
mov
cmp
or
dec
push
jne
clc
pop
sub
enter
mov
dec
add
inc
test
dec
adc
mov
enter
sbb
jle
xor
adc
mov
roll
jmp
add
mov
loopne
ficoms
or
add
xchg
into
cmp
and
xchg
pop
adc
xchg
lret
mov
shrb
cmp
sbb
pusha
outsb
es
in
pop
into
insb
inc
call
repz
pop
lret
push
push
lds
dec
int3
add
cld
rorb
lldt
push
push
int
add
pop
arpl
into
repz
add
mov
jno
inc
sub
in
movsb
pop
dec
mov
rorl
xor
js
cwtl
ss
mov
add
mov
adc
test
xchg
test
push
faddp
pop
movsl
nop
out
out
jmp
hlt
int3
test
mov
xchg
sub
loop
add
xchg
idivb
xor
pusha
xor
add
sbb
rol
icebp
clc
pusha
mov
cmpsb
loopne
push
or
push
nop
into
int
enter
xchg
add
xchg
xor
inc
rcl
jp
add
outsb
bound
xchg
jae
jp
pop
sbb
xor
dec
mov
add
pop
and
add
sahf
popa
add
pop
cli
stc
jne
in
add
sub
xchg
jl
add
mov
jae
mov
add
sbb
stos
xchg
jmp
pop
mov
pop
or
fs
rolb
sarl
mov
aaa
scas
fnstenv
pop
inc
pop
mull
push
fistl
push
sbb
aam
sbb
xchg
add
in
jle
add
movsb
xchg
mov
sbb
lods
add
mov
pop
out
adc
popa
add
mov
jne
out
dec
dec
ljmp
push
jl
addb
imul
hlt
aas
test
movsb
add
lahf
dec
mov
fmulp
in
repnz
dec
inc
lods
popf
roll
mov
addr16
jle
filds
sub
call
mov
mov
add
stos
add
test
or
mov
test
push
pop
jo
andb
dec
lret
and
add
sbb
lds
insb
adc
or
add
xor
ss
clc
cmpsl
add
iret
movsb
sub
jo
sub
cltd
pushl
in
add
ret
movsb
data16
cmp
or
add
mov
add
lret
popl
bound
pop
push
pop
mov
pushf
jns
sub
les
repz
adc
popa
push
dec
scas
mov
inc
add
enter
test
add
rcll
pop
fdivs
addl
push
dec
inc
ret
add
xorb
push
and
sbb
jae
sbb
push
or
xor
push
push
dec
cmp
mov
lods
add
xor
imul
add
aam
or
sbb
sub
andl
das
adc
inc
mov
int3
cmp
inc
adc
scas
pusha
es
int3
add
add
and
xchg
pop
sbb
push
xchg
movsl
add
pop
insl
xchg
add
pop
in
jbe
cmp
add
out
cmp
xor
push
ss
sub
nop
stc
xor
scas
push
loopne
mov
and
js
add
rolb
sbb
cmp
jmp
sti
jecxz
imul
imul
sbb
in
add
fdivrl
add
movb
aaa
loopne
loop
xchg
enter
cmovge
shrl
inc
sub
mov
pop
push
ret
in
enter
rolb
mov
and
out
loopne
ds
call
addr16
rolb
or
inc
xor
ror
mov
cmp
add
dec
ljmp
dec
add
cwtl
inc
cltd
mov
add
or
pop
xchg
and
mov
push
push
add
or
scas
rclb
xchg
mov
cmp
inc
cmp
push
jmp
pop
add
movsb
dec
sub
add
cmp
pop
shll
mov
push
scas
mov
insl
aaa
jb
add
ljmp
js
sahf
push
iret
sub
xchg
inc
les
and
mov
xchg
daa
pop
fs
jno
ss
sbb
shlb
mov
out
cmp
add
ja
and
scas
and
xchg
xchg
add
jno
insb
add
push
fnstsw
cmp
cmc
mov
lods
sub
or
imul
cmp
add
rorb
sbb
daa
es
into
or
in
adc
push
pop
add
ret
add
adc
cmp
sbbl
xor
stc
fwait
add
insb
mov
addr16
mulb
pop
rolb
mov
rcrb
mov
add
sbb
pop
daa
scas
aad
test
mov
in
mov
pushf
dec
push
add
lret
or
clc
push
xchg
jno
pop
cmp
and
faddp
in
test
call
mov
adc
clc
sbbb
add
xchg
inc
sbb
and
sbb
or
mov
xor
popa
mov
add
incb
dec
adc
aaa
fdivs
mov
add
inc
or
add
add
xchg
sub
stos
or
fists
cmpsb
rclb
add
cmp
hlt
sub
push
add
cmpsl
test
sub
push
and
xor
fsubl
push
sub
shl
hlt
cmp
cld
dec
push
jle
jg
add
jno
mov
loope
clc
fwait
mov
nop
gs
xchg
push
stos
lods
inc
add
xor
push
lock
movb
fbstp
inc
and
and
pop
movsl
add
xor
xor
push
fldl2e
jns
sub
imul
and
aas
out
mov
ret
cmc
add
or
call
stc
add
mov
xor
mov
push
inc
pusha
icebp
sarb
push
hlt
mov
push
popa
scas
out
sbb
dec
mov
xchg
repnz
add
and
push
cs
icebp
stos
jo
sbb
mov
mov
mov
xchg
rorl
add
and
cli
add
cmp
aad
fimull
popa
cmp
pop
mov
clc
add
add
dec
cmp
out
int
cmp
dec
mov
inc
push
not
push
add
xchg
mov
in
jmp
sbb
mov
pusha
ss
push
add
add
popa
hlt
jl
or
sub
repnz
sbb
jmp
ds
or
in
adc
jae
cs
das
add
scas
fistpll
mov
sub
xor
cmc
je
int
add
scas
push
sahf
push
fldt
in
cmp
xchg
xor
push
cld
lahf
add
xchg
xchg
cmp
pop
xorl
pusha
adc
je
sub
dec
sahf
push
fistl
add
lahf
push
jnp
pusha
rorb
inc
add
fidivrl
out
xchg
sbb
fnstenv
out
stos
push
je
adc
dec
shr
jae
add
stos
inc
xor
mov
jae
sbb
inc
mov
add
sbb
push
cmp
add
loope
fdivs
and
mov
and
add
pop
shlb
dec
pop
add
insb
ret
and
rorb
add
jno
and
cld
dec
cwtl
arpl
mov
mov
pop
jmp
rol
movsb
jge
push
jb
xchg
pop
mov
push
clc
cli
arpl
mov
cmpsb
add
out
mov
add
mov
ljmp
xor
sbb
add
jbe
pop
or
lea
ficompl
notrack
mov
mov
xor
jbe
add
imul
push
ss
cmc
inc
loopne
sub
lret
jg
cmpsl
int
mov
push
dec
mov
loope
mov
or
add
jg
dec
xchg
push
enter
mov
mov
add
sub
fadds
mov
outsb
xchg
push
pop
add
bound
test
adc
add
scas
jns
pop
jno
and
xchg
nop
addr16
sub
jne
mov
pop
cmp
add
cmpsl
cmpsb
cmp
or
lret
sbb
xor
sbb
aaa
in
jb
das
xor
mov
xchg
cmp
mov
pop
cwtl
add
movsl
jg
cmp
and
test
mov
in
push
add
mov
test
cmp
cltd
enter
push
add
loopne
subl
addr16
pop
pushf
sub
adcl
mov
adc
mov
inc
cmovp
inc
sub
cmpsb
nop
jnp
cmp
dec
push
in
lahf
movsl
sbb
ficoml
orb
mov
push
inc
bound
testb
push
js
push
inc
push
out
icebp
push
int3
dec
jecxz
adc
sub
fs
leave
sti
add
xor
js
push
aad
push
das
into
cmpsb
arpl
clc
js
or
and
stos
push
push
lcall
loopne
push
mov
or
push
jne
cmp
in
xor
adc
mov
mov
mov
and
mov
pop
or
adc
jg
bnd
out
fcoms
or
stos
add
add
or
pop
lret
mov
push
xchg
push
cs
inc
cmp
imul
add
jne
cmp
pop
out
sbb
rorb
shrb
sub
cmp
and
xor
cmp
sbb
les
fildl
mov
shrl
add
lcall
jg
inc
cltd
add
roll
test
in
mov
push
jp
pop
sbb
fdivrs
mov
test
aam
mov
aas
ja
out
add
xor
mov
add
lods
popf
in
mov
add
fsubrs
loopne
pusha
aas
loopne
out
add
cmp
lea
sub
enter
cmpsl
roll
push
aad
and
xor
mov
mov
mov
outsl
dec
addb
in
lods
lret
stc
pop
add
add
mov
push
push
push
data16
fldt
or
out
and
pop
je
sbb
jmp
mov
hlt
xchg
add
xchg
ret
fstpt
mov
loope
aam
or
dec
mov
xchg
sub
jo
call
fcom
sbb
add
and
iret
lods
rcrb
pop
mov
ret
ljmp
add
xchg
shll
je
jo
andl
jg
xor
add
jbe
ret
call
cwtl
ja
js
xor
add
mov
mov
push
xchg
out
in
add
xlat
pop
xchg
out
push
je
pop
sbb
pusha
jnp
faddl
mov
mov
leave
pop
fs
lock
shl
nop
aaa
push
aas
xor
dec
das
lods
mov
jb
xchg
adcb
mov
movsb
mull
jno
add
cmp
rcll
sbb
insb
enter
mov
sub
xor
push
add
inc
jno
sub
add
mov
aam
fdiv
mov
setns
cmp
ret
inc
jo
enter
push
popf
adc
adc
inc
xor
aam
pusha
fists
jle
shr
popa
js
add
fbstp
adc
add
inc
or
mov
scas
push
jg
add
das
sub
fisubs
pop
scas
inc
ret
in
arpl
pop
fwait
adc
lahf
mull
push
cld
je
enter
adc
adc
sar
pop
and
fcompl
inc
mov
and
mov
outsb
add
mov
les
inc
mov
sub
fiadds
movsl
cld
mov
hlt
lcall
push
dec
cltd
add
jmp
adc
pop
and
jbe
pop
notl
xlat
add
inc
mov
push
inc
cmpsb
mov
jmp
inc
cmc
les
lret
sbb
stos
filds
or
out
and
mov
pop
rcr
xchg
push
add
rcrb
clc
inc
aaa
sti
add
and
in
idivb
inc
and
xor
dec
cmp
or
jl
inc
cmp
lahf
mov
xor
add
push
xchg
popa
pop
cmc
sbb
and
sbb
jecxz
or
xchg
inc
sbb
in
add
xor
push
jmp
popa
js
repnz
shlb
in
inc
xor
mov
cltd
lret
push
add
add
cmp
add
aad
push
add
sbb
cmp
arpl
or
sub
mov
movsb
lahf
xor
shlb
enter
jae
xor
sbb
mov
jmp
dec
dec
push
jbe
nop
cld
jno
or
mov
xchg
xchg
mov
ret
push
push
adc
scas
mov
in
lods
mov
add
xor
xchg
adc
popa
jae
dec
mov
push
xor
and
cmp
jmp
add
int3
mov
cltd
shlb
pop
or
pop
insl
imul
scas
pop
cmp
add
push
sub
add
xor
and
or
adc
sbbl
dec
pop
sub
inc
dec
pop
test
jge
jp
mov
leave
adc
sbb
pop
lcall
dec
cld
and
push
push
enter
fidivrs
int
adc
mov
into
and
add
add
cs
jno
sub
dec
rcr
mov
pusha
or
test
sbb
pop
test
lss
aam
push
es
imul
add
jmp
inc
cmpsb
mov
out
iret
mov
popl
ror
addr16
scas
add
loop
cs
cmp
sbb
js
xor
sbb
movsl
sarl
pusha
add
fwait
enter
add
adc
ret
sub
add
insb
loopne
ljmp
push
inc
mov
bound
in
cwtl
movsb
push
ds
addps
xchg
xchg
add
add
sub
arpl
push
sbb
jmp
icebp
xchg
xchg
cmp
lahf
fcoms
add
ss
sbb
std
add
roll
std
bound
push
mov
or
loop
add
test
xchg
imul
pop
jns
fdivrl
lea
andnps
dec
mulb
loope
xor
inc
dec
sbb
arpl
inc
fiadds
es
jns
push
cmp
push
add
inc
jbe
andl
and
pop
sbb
leave
das
mov
jecxz
inc
xchg
push
inc
add
int3
xchg
adc
ret
or
aaa
movb
ret
orl
inc
dec
out
clc
xchg
add
shrb
push
loope
les
stos
sbb
insl
ja
inc
xchg
jecxz
push
or
int3
cwtl
add
fcoms
push
inc
jae
cwtl
clc
pop
ljmp
and
pop
sar
add
lcall
add
es
aam
loope
call
scas
xchg
shlb
push
push
icebp
mov
or
pusha
dec
nop
scas
adc
in
fiadds
cmp
cwtl
shl
shlb
mov
lds
mov
and
sub
shll
fstpl
lds
inc
in
test
add
dec
dec
lea
dec
mov
mov
fldt
adc
shl
pop
in
pop
arpl
or
mov
add
add
mov
cld
jno
add
push
ljmp
addl
jne
add
sbb
pop
cs
lds
xor
add
sub
gs
negl
inc
add
cmpsl
xchg
dec
push
dec
add
cmp
out
add
lret
push
sub
add
xchg
rcrb
scas
jmp
xchg
add
dec
push
call
ss
sub
push
and
sbb
pop
test
lods
mov
xchg
inc
pop
rcrb
leave
lret
out
sarb
and
lcall
pop
jnp
jae
sub
test
and
mov
mov
fcoml
stc
sbb
xor
add
adc
jno
lods
or
mov
addl
mov
pushf
cmpsl
dec
stc
add
jno
in
add
lods
cmp
mov
inc
mov
in
cli
push
sub
add
cs
mov
dec
add
add
add
jg
mov
nop
icebp
fs
add
mov
add
adc
dec
push
add
mov
mov
push
int3
mov
int
add
jg
jno
jle
jne
and
cmp
mov
sbb
pop
std
push
dec
jmp
jb
stos
jno
out
mov
mov
sbb
lock
test
push
add
sti
xor
cmc
jno
shrl
les
jne
add
or
add
mov
mov
add
adc
mov
push
pop
cmp
into
sbb
jp
mov
inc
xor
stos
mov
push
arpl
xchg
nop
dec
cwtl
gs
pusha
mov
add
aas
cmc
add
add
stos
gs
sub
sub
add
push
shrb
pop
add
fcomip
push
clc
dec
mov
or
xor
lods
cld
cmp
cmp
sbb
push
in
nop
or
pop
pushf
inc
or
jg
jp
jnp
or
sbb
add
iret
or
add
dec
inc
rolb
or
fiadds
inc
repnz
cmp
test
pop
sti
jno
xchg
sbb
pop
or
jo
inc
cmp
jo
and
into
or
add
adc
shll
inc
bound
mov
mov
push
sbb
jp
fwait
outsl
add
sbb
inc
mov
int
gs
jnp
xchg
add
addb
fisttps
insb
les
mov
cmp
aas
mov
rcrb
sbb
mov
mov
lahf
xchg
inc
sbb
xchg
frstor
pop
mov
add
adc
stos
cmp
repnz
mov
rcrl
jno
cmp
shlb
stos
lret
sbb
add
divl
inc
lods
jno
pop
repz
add
mov
add
cwtl
jg
or
enter
in
ljmp
les
add
push
pop
popl
xchg
adc
add
mov
out
cmpsl
out
cmpsb
ret
add
push
icebp
jne
rol
aad
add
sbb
add
mov
adc
push
out
add
mov
imul
icebp
add
mov
outsl
out
les
sub
dec
enter
cmp
add
and
lea
rorl
pop
icebp
dec
lahf
pusha
and
movsb
inc
add
roll
jb
inc
cmp
stos
stos
lcall
xchg
movsb
dec
add
jae
dec
push
ret
shll
push
ja
push
ds
ret
add
adc
mov
sbb
lcall
loopne
mov
pop
int
xchg
xor
or
mov
push
lods
xor
sub
subb
push
cmc
int
lock
jnp
shrl
dec
movsb
popa
add
mov
cmp
push
inc
test
mov
push
mov
mov
lret
faddl
and
ficoml
xchg
lsl
in
mov
cmc
sti
sarl
mov
dec
push
or
imul
out
inc
rcrl
test
pop
aas
add
xchg
mov
in
out
fdivs
data16
mov
mov
push
add
insl
nop
into
fs
inc
dec
pushf
xor
push
fiaddl
es
lcall
insl
pop
jmp
adc
xchg
xor
int
test
xlat
repz
nop
inc
add
sub
jno
pop
jecxz
pop
pop
mov
in
or
cmp
dec
lock
push
add
sub
xchg
mov
sarb
add
out
and
cmpsl
jge
inc
push
dec
call
repz
add
cmp
add
push
push
mov
push
adc
cmp
mov
xorb
pop
jae
add
test
jo
add
rcrb
js
fstpl
add
jb
sub
nop
mov
mov
fucom
mov
outsl
fs
sarb
bound
or
pushf
cli
mov
cmp
add
jnp
mov
adc
rol
ss
dec
out
xor
insb
add
lret
or
mov
adc
cmc
sub
ja
in
out
sub
cli
in
outsl
std
adc
movsb
add
xorb
mov
mov
inc
mov
sub
add
jmp
push
add
mov
movsl
and
add
and
sbb
jne
mov
add
lret
lahf
out
ret
cltd
testl
add
movaps
shlb
icebp
jle
fcomps
push
add
stos
mov
pop
sbb
dec
lahf
sbb
pusha
outsl
fimull
add
pop
int3
inc
cld
sub
push
repnz
add
ja
sbb
xchg
jns
add
sti
xchg
sbb
hlt
jmp
inc
mov
in
dec
add
adcl
imul
out
imul
outsl
sub
mov
or
fcmovnu
das
dec
push
dec
sub
lea
jl
push
xor
mov
inc
mov
outsl
orl
je
pop
push
ds
mov
cld
fiaddl
xchg
push
faddl
out
pushf
mov
outsb
popa
fsts
add
xor
in
iret
add
lahf
pop
inc
pop
sbb
add
outsb
cmp
aam
xchg
add
mov
dec
or
sub
rorb
imul
mov
push
int
and
pop
sbb
out
xor
and
sub
imul
movsl
pusha
add
cmp
push
xchg
mov
insb
movups
jo
subb
or
lahf
inc
mov
sbb
adc
add
idivb
movsl
xor
mov
adc
pop
xchg
mov
sub
add
mov
outsl
inc
pushf
jno
add
and
adc
add
xor
lock
daa
pop
movsb
es
pushl
add
sbb
push
clc
fistpl
ret
rcll
dec
mov
jbe
incl
cli
mov
xor
iret
add
mov
mov
out
jge
sbb
sub
shll
add
push
rclb
and
mov
fs
aam
mov
inc
or
add
addb
mov
xor
cld
push
sbb
mul
xor
cmc
xchg
lods
inc
call
dec
jmp
add
pop
mov
pop
jmp
lcall
gs
adc
xchg
es
xor
sbb
jb
adc
xor
sbb
stos
mov
nop
push
or
mov
divl
js
xchg
jge
add
dec
fbstp
mov
push
pusha
adc
add
in
xlat
repnz
jp
mov
pop
jns
inc
mov
xchg
pop
cmp
add
daa
sub
lret
cs
add
push
xor
mov
add
xchg
cwtl
jecxz
dec
add
dec
mov
pop
and
jns
dec
outsb
rorb
add
jmp
sbb
xor
jmp
jle
add
pop
mov
bound
add
pop
jb
pop
add
cmpsl
xor
cmp
addb
mov
add
les
lea
adc
mov
movsb
cld
xchg
aas
repz
mov
cmp
and
add
pop
ja
insl
fnstcw
and
xor
add
mov
lcall
xchg
mov
pushf
add
ret
test
push
add
jg
ljmp
adc
sbb
test
add
jne
jns
inc
add
ja
jmp
and
lea
cs
bound
rcll
stc
mov
leave
jle
test
adc
sbb
es
and
imul
sbb
dec
mov
inc
aam
or
int3
mov
and
inc
sub
mov
push
stos
dec
pop
lea
sbb
and
sbb
inc
or
cmp
icebp
cmp
jbe
mov
add
in
call
mov
push
lods
sub
sub
cmp
xor
test
loop
lods
dec
adcb
mov
arpl
and
add
ja
repnz
dec
gs
sub
pop
push
call
decl
inc
aaa
aad
addl
enter
out
jno
push
dec
or
add
es
pop
adc
add
cmp
mov
data16
mov
mov
add
sbb
inc
jne
enter
push
or
cmp
mov
cmp
inc
sub
add
rcrl
and
cmp
lods
xchg
orb
cmc
cmpsl
sti
notl
sbb
stos
aad
lahf
sbb
cld
push
xchg
adc
adc
popf
add
loop
mov
push
push
xchg
cmp
pop
xorb
in
jb
mov
cwtl
push
movb
xor
mov
stc
pop
add
mov
dec
fwait
sahf
or
add
jmp
add
cmp
repnz
mov
inc
incb
shrb
shlb
test
movsl
enter
add
mov
sbb
das
add
jnp
or
fnsave
add
ljmp
mov
subb
jmp
cmp
sub
cli
pop
jo
and
add
xchg
mov
add
xorl
mov
or
in
cmp
pop
and
addr16
jecxz
imul
imul
popf
iret
pop
fdivrs
popa
push
add
sbb
mov
mov
xchg
mov
dec
setg
jnp
loopne
arpl
lret
pop
add
mov
cmpsb
or
nop
je
push
add
test
push
push
and
and
jp
in
insl
push
adc
jge
push
xor
add
cltd
in
stos
pop
bound
fnstcw
stc
xor
pushf
add
pop
outsb
adc
or
js
mov
jle
push
add
ds
push
fwait
mov
dec
es
sahf
add
xchg
shlb
je
cltd
and
nop
mov
or
push
lea
clc
push
pop
fsubrp
or
test
lret
xchg
sub
hlt
daa
movsl
imul
pop
add
jno
lods
xlat
mov
sub
push
cmpsb
je
add
and
mov
add
shrb
scas
pop
scas
cmp
orl
mov
addr16
pop
adc
add
std
and
jo
inc
mov
pop
sub
mov
gs
stos
pop
cmp
jns
in
insb
sar
mov
sahf
sub
mov
bound
fisttpl
pop
sbb
xlat
fnsave
xor
or
inc
adc
mov
enter
rcrl
data16
repz
sbb
add
pop
mov
int3
je
add
push
jl
ss
movsl
into
mov
int3
add
shll
pop
xchg
push
push
add
outsl
or
cmp
mov
add
vpshufb
idivb
pop
jecxz
add
push
lock
pop
xchg
dec
cmpb
aaa
insb
es
add
pop
jnp
enter
leave
add
xchg
mov
mov
xor
arpl
int3
and
mov
aam
mov
jae
pop
dec
xor
push
aas
rcrl
mov
int
pop
and
mov
in
out
rcrb
jmp
es
addb
xchg
xchg
add
movsb
mov
std
sub
xor
xchg
add
cmp
inc
sbb
add
push
shll
js
loopne
sub
imul
xor
clc
mov
add
cld
push
sbb
cmpl
inc
test
in
mov
cltd
andb
inc
fistpll
outsl
cmpsb
les
outsb
mov
dec
mov
imul
mov
or
addr16
lret
mov
pop
add
inc
xor
sbb
pop
mov
orb
movsl
dec
add
mov
pop
pushf
mov
ret
imul
xchg
leave
std
add
imul
aas
mov
cmpsl
pop
sub
cmp
pop
lahf
pop
push
mov
loop
xchg
add
outsl
inc
cld
into
nop
sbb
push
pop
lods
inc
mul
xchg
inc
xor
adc
add
lcall
push
shl
incb
stos
nop
pushf
ja
adc
mov
fucomi
jns
mov
jb
jmp
bndstx
jecxz
xchg
in
rolb
adc
adc
ds
mov
add
bound
jp
add
loop
and
add
mov
pop
add
jne
mov
push
sbb
loopne
inc
dec
add
lret
imul
cmp
mov
mov
mov
aas
sub
cmc
popa
sub
add
hlt
mov
mov
test
jge
cmp
sub
clc
cmp
lds
cmp
xor
push
add
jl
mov
inc
fldenv
lods
inc
lods
jns
add
adc
cmp
popf
add
cmc
mov
mov
cli
in
xchg
xchg
sub
mulb
cmp
mov
fdivrs
pop
sti
dec
or
mov
or
mov
ficomps
outsl
cld
cs
adc
stos
fsub
out
mov
jno
out
jge
add
cmp
jp
test
hlt
adc
repnz
pop
in
call
add
jp
sbb
aad
adc
popa
rorl
xchg
and
shlb
ror
jae
icebp
adc
ds
mov
sub
iret
adc
pop
fdivs
nop
out
dec
inc
pop
add
fwait
dec
aam
xchg
adc
pop
cmp
xchg
sbb
dec
mov
rclb
add
pop
lods
add
stc
je
pop
pop
mov
xor
push
add
push
add
adc
bound
xchg
cmp
std
push
aas
orb
test
add
and
jecxz
sbb
jb
enter
dec
jg
and
lret
or
adc
push
arpl
xor
sbb
popf
cld
pop
pop
inc
jae
sarb
daa
aas
insb
imulb
ret
add
sub
add
sbb
inc
xchg
ds
in
xchg
pop
adc
inc
add
out
add
ds
adc
add
imul
fcmovnu
or
add
inc
movsb
lds
ret
add
int3
cli
daa
pop
mov
cmp
loope
adc
mov
mov
pop
mov
mov
push
mov
xchg
fisttpl
cmp
sahf
stc
outsb
sub
lock
adc
and
test
lock
dec
es
sbb
push
pop
js
mov
iret
lahf
mov
add
in
sub
add
cmp
or
and
cmp
mov
add
test
jbe
cmp
lods
jl
sti
das
sub
aaa
or
add
outsb
mov
add
sbb
push
test
repnz
cmc
pop
mov
testb
insb
jno
cld
add
test
sti
cmp
cmp
inc
pop
push
add
ror
and
add
cld
movsb
cmp
out
adc
inc
faddp
mul
or
sub
into
adc
and
or
or
dec
rolb
pop
fimuls
add
cli
jo
das
mov
clc
fcomip
sub
fcoms
sbb
dec
add
daa
xchg
leave
dec
add
in
popf
xlat
loop
stos
jge
dec
xor
and
inc
mov
in
leave
in
sti
rorl
scas
aaa
inc
test
or
repnz
push
loopne
fdivrp
arpl
mov
test
sub
mov
pop
add
add
push
js
loopne
cmp
in
sbb
rcrb
fisttps
or
sbb
push
add
xchg
outsl
imul
sbbl
clc
or
sub
xor
pusha
or
push
shrb
jnp
and
lret
jae
fsubrl
cmovb
mov
xchg
push
lods
pop
jne
xor
xchg
fistpl
ljmp
aaa
out
fisubl
sbb
sub
cwtl
icebp
add
jno
xchg
add
fwait
pop
lds
imul
and
xchg
add
lret
sbb
sbb
add
cmp
jg
add
fs
sub
add
arpl
mov
in
test
jb
mov
leave
shlb
push
sbbb
add
jp
negl
enter
xor
imul
lret
add
scas
xor
movsb
stos
leave
cmp
int
es
xor
xchg
mov
out
jp
es
fmuls
inc
aaa
dec
test
or
push
sub
xchg
cmp
cmp
dec
pusha
roll
pop
out
sbb
cmp
xlat
xchg
jno
js
add
add
cmp
sti
lahf
and
pop
mov
jl
sub
mov
add
cli
dec
idivb
out
addr16
mov
add
std
cmpsl
sahf
lock
sbb
add
outsb
pop
ret
test
sub
pop
gs
sahf
adc
popf
sbb
add
pop
mov
ljmp
pop
or
xchg
pop
addl
xchg
sarb
out
pop
aas
loopne
les
adc
add
push
ljmp
int3
test
aad
pop
xchg
xchg
mov
pop
add
inc
jecxz
pop
jmp
lds
ja
xchg
loope
inc
std
xchg
addl
add
and
jle
in
lfs
add
je
sbb
xchg
mov
xchg
xor
cs
stos
ficoml
add
std
lea
sub
mov
pop
jmp
jecxz
mov
or
inc
sub
mov
add
jb
imul
rcrl
push
cmp
aad
add
popf
inc
jae
data16
aas
fidivl
add
sub
lock
push
movups
add
pop
jmp
inc
sahf
test
dec
sbb
roll
outsb
stos
test
std
jbe
enter
jmp
and
and
cmpb
jne
inc
loop
add
ret
iret
xorl
cwtl
add
lret
add
test
add
or
sahf
lret
add
push
mov
into
push
cmp
inc
adcb
push
add
shlb
shlb
add
inc
fcmovne
incl
out
stc
lock
jge
repnz
pop
pop
adc
clc
std
fs
cltd
rorb
data16
das
int3
add
cmpsb
pop
inc
xor
cmp
pop
sbbl
out
std
adcl
inc
arpl
sarl
jecxz
adc
pop
mov
psubd
loop
and
mov
mov
pop
add
dec
les
sub
movsl
cmp
cwtl
ljmp
jo
jne
push
inc
and
ss
pop
lahf
adc
cmpsl
ret
jge
call
rcrb
mov
aad
add
scas
pop
push
nop
mov
rolb
daa
push
mov
or
out
or
orb
add
jns
add
mov
mov
xchg
jne
test
sti
sbbb
ss
push
jo
test
pop
in
pop
adc
loope
paddd
aaa
insb
sbb
pop
subb
xchg
pop
add
bound
pop
and
pop
adc
sub
idiv
cmp
ficomps
sahf
jo
mov
or
add
pop
mov
dec
jno
mov
xor
jne
jge
add
xchg
je
add
cmp
mov
xor
push
jno
ret
mov
dec
mov
clc
jbe
pop
outsl
sti
push
jnp
aad
add
test
mov
iret
mov
ret
jmp
dec
orb
add
and
in
pop
sub
cmp
add
pop
jno
add
arpl
subl
repnz
stos
std
ljmp
or
hlt
dec
mov
insb
cmp
arpl
mov
shl
pop
and
push
xchg
and
xchg
movb
push
mov
int
sub
enter
fstps
call
in
jecxz
xchg
testl
sub
ret
fwait
cmp
aas
add
shlb
hlt
cmpsb
sbb
cmp
pop
and
add
sarl
pusha
jp
cmp
in
test
roll
adc
add
sub
stos
add
test
inc
pop
pushl
fidivs
jbe
push
adc
orb
movsl
pop
popa
inc
cmp
xchg
pushf
jecxz
pop
mov
je
push
clc
shlb
inc
and
loopne
addb
shr
pushf
add
hlt
sti
dec
fwait
mov
ficomps
add
dec
adcl
pop
in
dec
lret
test
mov
xchg
insb
rorb
and
enter
lret
ror
jmp
pop
pusha
push
cmpsl
mov
add
ja
sub
clc
cmp
mov
or
and
mov
lahf
add
stos
mov
sub
int
mov
xor
mov
push
mov
mov
negb
sbb
xor
gs
lcall
loope
cmp
adc
sub
ss
sarb
add
lds
mov
cmp
sub
mov
jp
push
addr16
call
mov
sbb
adc
xchg
mov
mov
sbb
pushf
add
adc
les
lods
sub
adc
test
enter
xchg
je
arpl
cli
das
pop
test
pop
lahf
add
add
outsb
inc
filds
addl
scas
mov
add
pusha
inc
xchg
or
stc
lods
add
hlt
cmp
xchg
ja
pop
shlb
adc
adc
jg
mov
pop
and
add
inc
cmp
cmp
imul
test
popf
or
add
sbb
div
add
pop
cmp
push
and
add
adc
std
aad
fisubl
pusha
sahf
dec
dec
mov
repnz
jmp
pop
cmpl
jo
add
push
cmp
mov
popa
or
lahf
xlat
pop
or
cs
in
bound
loopne
and
push
pop
mov
adc
add
push
mov
add
scas
mov
add
lret
ss
fwait
add
por
lcall
and
sbb
pushf
addr16
cmc
loopne
lahf
add
jle
add
stc
daa
leave
in
repz
add
stos
mov
std
fdivrs
and
xchg
jecxz
les
pop
out
movsb
shlb
push
xchg
push
andl
cmc
xor
and
adc
push
fists
add
sbbb
subl
pop
dec
sbb
aaa
cmp
fldl
popf
sbb
jns
sub
sub
inc
and
ja
andl
mulb
add
lods
or
adc
in
test
lret
ja
xchg
cwtl
fldt
and
popf
jge
push
cmpsl
dec
dec
mov
jnp
out
mov
pop
push
sbb
pop
cltd
pop
popa
mov
xorb
mov
xor
repz
mov
push
jno
int3
jle
outsb
and
fs
cmp
aad
insl
push
dec
scas
jp
mov
push
lods
lret
pop
push
add
pusha
test
sarb
nop
mov
aas
in
mov
ljmp
pop
cmp
jmp
and
mov
cld
pop
insl
loope
add
out
addl
pop
sbb
lahf
dec
mov
mov
pop
dec
dec
add
lea
add
mov
add
mov
jnp
ret
into
pop
mov
add
test
fwait
enter
push
and
jns
xor
xorl
add
pop
ja
add
adc
sbb
mov
add
test
jl
or
add
repnz
lods
push
cmc
pop
pop
jp
adc
bswap
adc
shlb
test
push
lret
jo
xchg
sub
mov
adc
arpl
aam
pop
inc
xlat
jnp
sbb
cld
add
adc
sub
data16
or
fcmovnbe
xchg
push
fisubrl
out
add
test
cli
pop
cmpsl
dec
rcrl
xor
mov
ret
sub
lea
rclb
pop
pop
or
jbe
nop
push
loop
sbb
cmp
xor
add
jb
xor
pop
inc
icebp
jns
pop
mov
cwtl
dec
cmpsl
rcrl
mov
iret
les
or
adc
cmpsb
aam
cmp
adc
jg
jno
mov
subl
sbb
jno
loop
icebp
shlb
and
ret
cmp
and
push
pusha
lds
cs
and
add
fisttpl
je
adc
je
loopne
aas
aas
inc
adc
movsl
jecxz
call
test
mov
aas
cs
into
movsb
cmp
mov
add
pop
fsts
call
adcb
cld
jg
das
add
lea
addr16
or
es
rcll
mov
mov
stos
aas
add
and
mulb
js
shlb
scas
sbb
ljmp
addl
dec
lret
add
stos
je
push
jb
cmpsb
xchg
jae
hlt
in
icebp
add
xorb
dec
pop
dec
shlb
mov
cli
dec
xor
dec
jl
add
and
cmp
fcoml
shl
or
and
lret
pop
jbe
mov
jns
add
repnz
js
std
jbe
add
jl
cli
fldt
add
dec
and
sbb
and
movb
lock
push
add
pop
mov
mov
pop
orb
loopne
popa
add
fstpt
push
fdivrp
in
adc
aad
inc
xchg
sbb
jl
mov
ficompl
mov
pop
inc
js
imul
out
nop
jge
fdiv
cltd
push
sbb
xchg
sbb
push
iret
inc
les
or
jne
jg
pop
mov
inc
push
and
in
push
pop
xchg
push
adc
out
rcrl
or
mov
aaa
or
pusha
push
and
in
xchg
adc
sbb
add
call
ret
and
into
push
pop
add
jle
mov
scas
jns
mov
and
faddl
sub
lahf
jnp
loope
mov
add
adcl
cltd
jne
pop
and
add
pop
mov
dec
int
push
popf
pop
add
adc
jge
cmp
pop
ja
dec
ljmp
js
js
sub
pop
rolb
out
jl
or
ljmp
inc
sub
arpl
xor
jmp
loope
jle
add
or
ja
sbb
jge
pop
and
jbe
adc
leave
mov
imul
pop
movl
adc
mov
popa
jg
aaa
sbb
lcall
adcb
cli
std
hlt
fs
test
ret
inc
add
rclb
jecxz
fmulp
andnps
xchg
out
adc
xchg
jg
mov
fiaddl
cmp
clc
adc
cwtl
mov
add
cmp
add
mov
ljmp
loop
adc
jbe
rcrb
mov
add
xchg
leave
xor
xor
fidivrl
sbbb
inc
or
sbb
xchg
push
pop
sub
pop
mov
add
inc
imul
or
mov
inc
add
and
and
int
test
fwait
ret
ljmp
fdivs
shll
int
shr
sbb
pop
add
hlt
mov
lods
dec
mov
add
data16
sub
jg
fs
pop
inc
cmp
or
test
cld
inc
jo
lock
mov
or
enter
icebp
xchg
ljmp
adc
inc
add
popf
fimuls
mov
lods
cmp
mov
ljmp
or
push
mov
mov
pop
sarl
enter
xor
push
icebp
pop
xchg
adc
adc
push
jmp
out
xorl
ja
je
das
dec
adc
sahf
mov
outsl
sbb
cmpsb
and
jmp
roll
xor
loopne
clc
or
sub
lret
addb
repz
pop
ljmp
mov
mov
jg
add
jbe
ret
add
dec
ds
and
push
sbb
adc
outsb
add
adc
mov
adc
sbb
add
push
cmpb
inc
subb
aad
xchg
sub
ret
pop
inc
xchg
dec
mov
inc
push
aaa
mov
bound
sbb
and
jns
in
add
sbb
pop
mov
add
outsl
or
sbb
jl
xor
and
scas
pop
popa
adc
push
dec
int
addb
fs
loopne
sti
jl
add
cmp
add
rolb
cmp
add
cwtl
paddsw
mov
pop
jmp
cmc
and
cltd
mov
ficompl
int
ljmp
outsl
cld
jl
str
sbbb
push
mov
jb
lods
xor
bound
les
adc
mov
adcb
and
jno
sub
pusha
stos
movl
push
cmpsl
pop
add
add
adc
adc
pop
aaa
mov
outsb
lcall
mov
pop
pushf
dec
sahf
cmpsl
xchg
add
pop
insb
lock
sar
les
add
inc
cmp
sbb
mov
cmpsb
add
fsubrl
or
aas
pop
or
outsb
mov
inc
daa
or
addr16
adc
adc
rolb
pop
mov
inc
inc
push
and
leave
cmp
cld
out
sarb
mov
add
inc
addb
xchg
sbbl
sbb
sahf
sub
push
xorl
insl
add
ret
mov
jbe
les
add
and
jne
loope
jns
jb
sarb
imul
sar
imul
dec
cmp
dec
cmp
mov
add
fistps
int
sbbb
inc
or
into
push
mov
sub
aam
adc
cli
add
addr16
xchg
in
mov
mov
and
popa
enter
xchg
add
dec
jg
or
inc
in
clc
loopne
dec
das
add
mov
lock
add
dec
pop
mov
add
mov
aaa
jno
mov
divb
adc
sbb
jmp
fdivs
sub
into
mov
jae
add
or
dec
jg
aas
and
loopne
jl
mov
sbb
xor
and
jbe
dec
loopne
mov
pop
gs
sbb
pop
add
jnp
andb
mov
xchg
add
adc
jl
shlb
sub
xor
add
jbe
mov
rcll
cmp
leave
cmp
test
inc
out
mov
or
cmp
xchg
add
adcb
and
push
daa
icebp
pushf
sub
test
out
icebp
inc
sub
adc
jae
adc
inc
adc
jbe
fs
ficoml
subl
or
xchg
sub
jne
ficoms
and
sbb
sub
lods
xor
add
fidivrl
notb
and
inc
pusha
outsl
pop
dec
call
sbb
jl
dec
add
rolb
push
cwtl
in
pop
pop
jno
cmp
leave
lahf
nop
addr16
add
sbb
in
push
add
outsl
mov
inc
mov
in
adc
add
je
dec
xchg
add
mov
lea
jg
add
dec
in
sbb
pop
or
sbb
mov
hlt
test
sub
enter
jle
aad
jl
div
cwtl
pop
sub
fistl
inc
out
or
add
mov
daa
add
in
jp
lahf
and
xchg
sub
adc
mov
ret
je
pusha
mov
mov
es
pop
int3
add
push
sarb
add
sbb
mov
xor
test
addl
pop
inc
cli
mov
mov
xor
mull
push
add
jne
and
add
hlt
aas
jae
mov
add
dec
push
mov
out
insl
dec
data16
ret
popa
movl
cmp
cwtl
sub
sub
in
push
xlat
inc
pusha
lods
xchg
aad
hlt
add
js
gs
shlb
cmp
cmp
push
pop
shlb
mov
gs
mov
pusha
cli
pop
mov
pop
add
les
repz
add
test
add
dec
add
imul
jge
or
dec
add
repnz
lds
ret
mov
jl
cs
adc
cmp
fnstsw
or
int3
cmp
add
shlb
jnp
lea
outsl
das
mov
xchg
dec
add
cld
cs
in
add
cmp
mov
dec
dec
scas
lcall
pop
mov
fisubrl
add
push
lea
aaa
iret
mov
insl
nop
dec
jl
ss
add
push
cltd
pop
mov
shld
cmp
jecxz
dec
fs
nop
mov
mov
arpl
add
rclb
push
mov
jle
out
inc
and
xchg
cltd
push
in
cld
outsl
dec
cmp
pop
or
shl
in
outsb
add
addr16
cmp
sbb
imul
mov
nop
dec
add
inc
push
pop
pop
and
addl
mov
aad
add
in
orb
and
lds
or
and
sbb
mov
cwtl
outsb
rolb
clc
mov
loope
je
add
add
pop
jp
leave
xchg
out
push
les
lea
xor
xchg
add
dec
insl
add
add
adc
pop
mov
mov
sbb
cli
xor
sub
sarl
add
pop
outsb
sub
scas
add
leave
mov
pop
inc
push
xchg
add
ds
mov
add
fdivrl
adc
sbb
dec
or
scas
inc
inc
inc
mov
push
loope
xor
jl
fsubrl
aam
pushf
pop
call
or
inc
adc
mov
lret
add
bound
fcompl
add
xchg
call
push
jnp
ficompl
addr16
add
inc
decl
xor
and
insl
add
lahf
aad
dec
jne
cs
test
das
add
jmp
loopne
mov
sub
ret
push
add
xor
mov
movsb
addl
xor
addr16
add
mov
jle
mov
jno
sbb
jl
in
stos
pop
mov
lods
and
jmp
inc
adc
push
rcrb
or
aam
add
outsb
ss
add
mov
xchg
mov
data16
inc
lahf
sub
mov
adc
sub
popa
mov
add
push
pop
aaa
das
repz
cmp
cmp
cmovne
std
sbb
push
shlb
fmulp
rclb
xchg
add
mov
faddl
adc
mov
jns
test
ss
jp
xchg
xchg
dec
and
xor
in
push
cmp
outsl
sbb
test
fimuls
out
or
sti
add
clc
inc
mov
xchg
shl
call
out
adc
roll
push
pop
inc
cmovge
mov
sbb
add
xchg
and
pop
xchg
dec
add
mov
mov
jge
aas
add
mov
scas
jecxz
dec
add
sbb
push
or
add
lods
dec
mov
popa
mov
icebp
jmp
dec
mov
mov
out
cmp
in
scas
xchg
add
adc
repnz
pushf
pop
mov
ljmp
sub
jae
icebp
cltd
in
outsb
add
or
xor
xchg
lret
adc
mov
out
enter
pusha
sub
loope
addl
cmpb
dec
fcoml
add
lret
jb
and
pop
add
pusha
jl
adc
mov
je
in
fadds
shl
enter
inc
fs
cmp
lock
jp
sbb
mov
dec
xchg
xor
pop
mov
xchg
push
push
stos
or
mov
sub
lret
fdivs
ss
and
mov
sbb
pop
mov
cmc
sub
add
fwait
pop
int3
mov
sahf
cmpsl
scas
aas
xchg
lock
ret
add
mov
push
cmp
jnp
popf
push
add
dec
mov
sbb
nop
sbb
add
lods
ja
add
stos
ljmp
into
shlb
arpl
rcll
scas
xor
xlat
inc
add
xchg
fldt
pop
add
dec
or
xchg
test
push
sbb
rclb
push
lret
pop
add
add
sbb
fisubl
or
in
xorb
outsl
pop
nop
push
and
scas
add
arpl
jl
js
add
js
sub
xor
push
lea
add
push
push
cmpsb
xchg
cmpsl
mov
test
and
lcall
xchg
test
insb
lds
scas
iretw
aaa
sbb
sbb
mov
and
lret
movb
notb
jp
push
push
mov
aad
in
jae
xchg
sbb
fs
lahf
loope
xor
inc
out
fstps
sbb
inc
aaa
inc
loop
add
mov
jnp
pop
fimull
cmp
add
out
hlt
xchg
sbb
add
dec
fmuls
xchg
push
add
ja
loopne
mov
dec
data16
sbb
movsb
mov
inc
jecxz
sub
cwtl
pop
jno
mov
flds
or
dec
dec
dec
mull
jmp
lret
lret
or
cltd
adc
push
add
loope
js
add
sbb
sbb
clc
test
pushf
fnstenv
jmp
and
add
in
jl
jb
cmp
push
dec
sti
mov
pop
jnp
mov
sbbb
xor
fildl
outsb
push
bound
mov
addl
aad
add
out
mov
in
add
das
fisubs
adcb
push
cltd
adcb
loopne
jmp
add
mov
adc
inc
cltd
rorb
xor
add
fidivrs
clc
out
jle
data16
or
clc
cmpsb
add
mov
pop
hlt
incb
movsl
les
orb
sbb
pop
add
push
and
scas
add
lods
jl
test
add
sahf
or
lret
clc
rcl
and
add
xor
repnz
arpl
lahf
add
sub
scas
dec
or
filds
cmp
or
loop
in
sub
inc
js
ficompl
add
xor
and
add
daa
dec
jns
rcll
add
xchg
mov
push
mov
cmp
add
mov
sub
adc
nop
add
pushf
add
push
or
filds
and
movb
xchg
pop
push
outsb
mov
dec
out
pop
std
pop
int
mov
mov
enter
jle
inc
in
add
dec
icebp
pop
pushf
aad
cmp
xchg
jge
cmp
sub
or
mov
cmp
add
cmpsb
pop
addr16
sarb
leave
add
jp
ljmp
inc
xchg
pop
repnz
ret
jp
add
push
jns
and
leave
add
std
pop
or
je
nop
cmp
aam
es
dec
push
mov
adc
test
aaa
stos
add
ja
fisttps
imul
std
int
inc
and
fdivl
sub
lods
jp
aad
add
hlt
xor
scas
cmp
jo
hlt
aaa
popl
aas
adc
rcll
xchg
aad
lret
add
jle
add
mov
pop
or
mov
subb
or
add
out
jg
pop
pop
sub
test
jl
es
fidivrs
sbbb
mov
mov
std
sbb
xor
and
jb
push
or
sbb
adcl
imul
add
stos
mov
jo
arpl
push
adc
aaa
sbb
pop
js
or
out
sbb
or
iret
add
mov
out
daa
sbb
xchg
loope
mov
push
popf
arpl
inc
ljmp
xor
jmp
out
push
add
xor
std
daa
inc
cli
push
aam
add
lods
addr16
add
adcl
push
fdivs
cmpps
inc
fnstsw
scas
in
add
shlb
jg
mov
jmp
loopne
popf
pop
add
dec
lea
or
popf
pop
inc
push
lahf
inc
and
add
jb
aaa
xor
mov
add
insb
xchg
inc
and
jbe
adc
sbbb
push
add
pusha
loopne
sbb
add
jp
jne
stc
nop
cs
js
add
into
and
out
das
shlb
mov
sub
mov
in
cmpsb
mov
cmpsl
cmp
nop
cmp
mov
cmpb
pusha
ret
mov
mov
mov
fdivrs
nop
xor
xorb
inc
mov
loopne
test
dec
add
xor
mov
push
jecxz
fisttpl
stc
xor
xchg
inc
dec
rorl
push
test
add
pop
mov
mov
loop
push
cs
cmp
jnp
ret
out
add
adc
add
jmp
add
fwait
cwtl
pop
push
or
andb
lea
orb
xor
mov
sbb
inc
mov
int3
setp
sbb
insl
mov
stc
mov
lcall
dec
ja
add
scas
jae
sub
lret
scas
add
std
stos
sub
and
dec
idiv
les
cmpl
std
mull
add
in
sbb
jecxz
add
mov
cmp
addb
xlat
shll
loope
add
mov
jns
xor
jmp
inc
lret
xchg
dec
dec
sbbl
push
xor
add
dec
iret
pop
mov
or
test
dec
adc
lock
addl
pop
jbe
cld
cmp
cmpsl
xor
aas
mov
es
addr16
enter
loop
mov
int
mov
adc
push
add
in
sub
xchg
dec
es
lahf
cmpb
add
scas
inc
mov
add
and
add
cltd
sub
xor
pop
fs
pusha
test
das
aas
popf
xchg
sbb
xchg
mov
add
sahf
loopne
sbb
mov
add
add
lcall
mov
test
hlt
mov
mov
ds
pusha
loop
add
into
fmuls
mov
jmp
loopne
test
mov
inc
or
pop
xchg
lods
ljmp
add
mov
cltd
inc
jne
add
test
sub
imul
add
or
fisubrs
sub
sarb
loop
or
jo
sbb
add
xor
xchg
rcrb
pop
dec
jb
mov
testl
rorl
add
mov
xor
in
movsl
jnp
sahf
pusha
adc
pop
pop
jp
push
pop
pusha
and
int3
cltd
jo
mov
add
jns
and
imul
je
sti
cltd
mov
add
add
or
xorb
add
fimull
xchg
pushf
jo
divb
call
inc
add
testl
pusha
or
dec
daa
xor
add
jl
mov
jae
add
push
jo
test
jno
scas
jne
push
inc
and
insb
repz
roll
ret
out
in
call
andb
loop
add
notl
or
xchg
fstl
jg
cld
loop
cmpb
jle
xchg
cwtl
xchg
mov
filds
in
xor
pop
add
divl
sub
fsubr
aaa
add
mov
and
repz
xchg
fimull
int
leave
outsl
jg
call
aad
insb
lods
dec
and
cmp
sub
mov
in
pushf
test
pop
adc
add
add
test
dec
add
test
mov
pop
add
nop
push
ljmp
cmp
mov
add
pop
mov
xchg
sahf
add
jb
sub
mov
push
out
mov
popf
ljmp
insb
lcall
jne
cmp
adc
pop
es
add
insl
add
cmp
test
jo
add
mov
jmp
popf
decl
int3
add
and
adc
or
add
xor
dec
and
stc
loop
lcall
cmpb
push
add
adc
add
ds
add
add
jne
out
loopne
cwtl
or
js
push
fistl
cmp
add
test
cmp
xor
jno
mov
repnz
sub
adc
dec
das
jns
dec
js
push
sbb
mov
push
cwtl
jb
fidivl
add
sarb
jae
pusha
jmp
push
cmpsb
aam
adc
sub
mov
push
jb
inc
dec
mov
xorb
lcall
call
imul
lods
dec
or
clc
cld
sub
or
inc
jmp
sbb
cmp
loopne
aad
xchg
mov
int
add
push
cld
cwtl
sub
or
add
cmp
aam
popf
popa
cli
or
mov
lods
cmp
sub
push
mov
sub
leave
ds
cli
add
cli
mov
jmp
inc
inc
shrl
or
bound
aad
ja
pmaxub
mov
jge
out
lods
add
xchg
incl
cli
div
mov
or
ja
clc
arpl
stos
leave
mov
out
sahf
addb
idivb
push
and
mov
add
icebp
les
sbbb
add
sub
adc
or
cmp
fstps
rsm
pop
push
inc
inc
jge
sub
add
cmp
stos
push
movb
cmp
or
inc
jle
mov
jp
add
jns
or
jg
mov
xor
int
add
jno
mov
and
sbb
addl
lock
loope
daa
xchg
stos
mov
scas
inc
jae
jecxz
pop
cmp
enter
inc
cs
add
adc
das
ds
add
mov
and
add
mov
push
idivb
pushf
mov
add
test
and
cltd
xchg
inc
adc
pop
mov
popf
add
mov
insl
sbb
add
mov
inc
adc
xchg
cmp
sbb
xchg
add
test
divl
push
shlb
xchg
dec
add
push
lret
fildl
and
cli
jnp
dec
lods
js
add
cmp
mov
cld
cmp
sti
loop
add
pop
push
push
xor
add
push
lds
fsubs
or
mov
pop
sub
sahf
cltd
adc
push
js
mov
add
sbb
sub
mov
out
sar
cmpb
sbb
stos
aad
inc
in
add
ret
adc
shll
pop
lods
push
push
cmp
xor
ss
pop
pusha
imul
add
aam
sub
pop
pop
jo
shlb
mov
cli
mov
adc
and
xor
je
jecxz
xchg
les
sub
sbbb
cmp
aad
add
xchg
xor
sahf
dec
xor
inc
ja
mov
fnstsw
fwait
or
das
mov
rclb
add
fistl
fstps
add
das
sahf
ficoms
add
and
enter
notrack
insl
pop
sbb
test
addb
lret
popa
and
repz
jo
data16
xchg
stc
sub
js
adc
sbb
in
mov
add
je
cli
adc
ret
add
mov
in
inc
add
or
push
mov
data16
dec
inc
adc
add
rorb
notl
lret
ja
cmp
jae
int
andl
scas
sti
es
cmp
push
and
pop
mov
hlt
sbb
mov
jp
cmpsl
xchg
std
jg
pop
mov
movsb
push
ljmp
nop
jne
int
test
test
dec
sub
inc
pop
and
xor
scas
cltd
add
jecxz
adc
in
adc
pushf
push
inc
cld
add
mov
test
pop
testb
lret
mov
leave
repz
in
lret
rcl
adcb
add
sahf
lahf
mov
or
jmp
add
ret
jp
mov
fisubrl
daa
lret
push
scas
mov
push
sti
sub
push
lods
test
xorb
dec
pusha
dec
push
jnp
scas
call
test
jg
fadd
fyl2xp1
pop
adc
add
in
inc
mov
sbb
adc
add
imul
loop
add
sbb
arpl
int3
adc
fnstsw
add
lret
push
jge
hlt
jnp
add
repz
iret
in
push
fwait
jecxz
sbb
cmc
push
mov
or
lret
pusha
mov
add
pushl
jns
jge
mov
jl
out
mov
lret
js
jp
add
movsl
xlat
ficompl
xor
aam
sub
xchg
add
mov
leave
mov
loopne
daa
int
fldenv
add
cmp
nop
add
pop
fcmovbe
add
xorb
imul
and
daa
sbb
fstpt
loopne
add
outsl
sarl
sbb
add
repz
or
int
jle
sbb
mov
lock
xchg
test
dec
mov
jge
sub
lods
fdivp
inc
std
pop
es
adc
add
push
pop
pop
and
dec
ljmp
sbb
dec
shlb
imul
popf
xchg
and
cmp
add
fwait
mov
jl
pop
add
lock
mov
pop
cli
jo
cltd
and
adc
pop
les
mov
push
jns
inc
mov
stos
lods
data16
in
cmp
testb
scas
cmp
and
hlt
testb
xor
test
cmpsl
cmovbe
ror
into
push
loope
incl
dec
add
sbb
pop
stos
popa
xlat
sub
jle
insb
jmp
xchg
dec
pop
push
roll
fstpt
push
push
xchg
add
or
xor
push
add
pop
dec
js
add
adc
sahf
stos
dec
inc
pop
cwtl
add
mov
jmp
aam
add
dec
jnp
out
add
loop
in
mov
pop
jb
inc
call
rclb
sbbl
mov
pop
test
add
or
sub
dec
sbb
xor
add
mov
or
sbb
pop
mov
add
pop
fidivrl
mov
push
lods
push
or
call
mov
add
fsubr
and
aaa
add
arpl
mov
sub
sub
js
or
xor
stos
std
or
lcall
add
sbb
jmp
int
jo
popf
cs
cmp
jae
mov
stos
nop
adc
subl
loopne
add
mov
add
out
cli
sbb
repz
push
ret
enter
add
dec
imul
insl
adc
fstpl
out
mov
dec
nop
iret
xorb
add
pop
ja
jmp
icebp
inc
js
out
jle
loope
pushf
xor
insb
fcmovbe
or
bound
jg
xor
cmp
dec
inc
rcr
aaa
das
add
cmpsl
in
sub
out
dec
jno
out
arpl
pop
jge
jne
mov
in
adc
add
push
xor
add
cmp
enter
jno
pushf
sbb
inc
xchg
pop
cmpsl
cltd
add
mov
iret
jle
fs
dec
inc
cli
ss
and
cld
or
and
enter
mov
scas
xchg
cs
lret
mov
lds
pop
xchg
stos
push
dec
sbb
xchg
loopne
sub
push
adc
popf
aaa
and
enter
and
incl
pop
lods
mov
mov
sbb
sbb
lock
add
dec
je
xchg
flds
mov
stos
dec
stc
shll
and
loopne
or
mov
nop
or
inc
cltd
pop
sbb
add
into
fnstcw
add
icebp
call
fdivrp
movb
popa
push
push
outsb
inc
xchg
in
test
sarb
jp
xor
daa
add
pop
lret
mov
dec
js
add
adc
add
aas
insl
shlb
mov
pop
les
dec
shrl
inc
notl
filds
mov
fadd
and
cmc
test
jnp
cmpsb
insb
and
movsl
dec
pusha
jecxz
mov
inc
push
pushf
jmp
add
mov
add
pop
addl
pop
movl
fcomp
movb
ja
and
mov
xchg
adc
ret
sbb
jl
mov
xchg
sbb
pop
push
add
repnz
jmp
mov
and
add
xchg
movsl
sub
test
loopne
inc
push
insb
cmpb
fiadds
push
and
in
mov
es
scas
inc
xlat
jnp
mov
cwtl
or
mov
js
loopne
add
aaa
xchg
je
mov
add
jmp
sbb
add
sbb
mov
jbe
xor
cmc
movl
fisubl
xor
cld
or
clc
out
movl
jae
push
jl
sbb
lods
je
cld
pop
mov
add
cmc
insl
lock
shrb
add
push
repz
gs
add
and
jmp
incb
mov
test
mov
dec
xchg
and
sub
insb
pop
add
popa
mov
test
popf
add
ucomiss
dec
dec
xbegin
pop
loopne
divl
mov
sbb
mov
sar
mov
rcrl
cwtl
pop
jmp
sub
add
pusha
add
cld
pop
push
nop
and
add
xor
or
or
lods
dec
cmpsb
cmp
movsb
outsb
sbb
push
jbe
out
dec
add
repnz
sti
xor
add
push
enter
add
adcb
lds
mov
iret
into
out
add
stc
sbb
add
xchg
fadd
cld
mov
jge
lcall
cmp
imul
mov
mov
dec
or
xor
push
xchg
inc
je
cmpsb
jg
add
push
imul
mov
in
loope
test
and
mov
inc
mov
pop
add
fdivr
xor
insl
lret
clc
add
mov
and
dec
inc
rcl
test
hlt
lock
in
add
lock
push
cltd
mov
dec
xchg
shrb
dec
mov
sub
pop
and
xorl
mov
pop
orl
mov
fstpl
cmpb
mov
mov
lcall
inc
cld
inc
test
xor
outsl
adc
and
push
cmpsb
fidivl
hlt
js
push
pop
sub
add
lcall
push
mov
sub
pop
psrld
sets
mov
sbb
shrl
jne
mul
add
push
inc
idivb
xchg
mov
pop
enter
fsubs
add
jnp
les
mov
add
repnz
stc
cmp
add
push
jnp
fildl
push
push
sarb
mov
enter
fstps
aad
jmp
inc
sub
lret
cmp
loop
add
cs
movsl
mov
sbb
stos
fdivl
mov
in
loopne
mov
add
and
out
add
out
xchg
ds
js
jne
das
dec
fbld
pop
mov
cmp
xchg
fwait
jnp
mov
xchg
paddq
mov
lret
ds
sbb
lret
popa
and
out
xchg
jns
sub
test
dec
push
mov
or
inc
out
pop
imul
pushf
test
pop
mov
int3
mov
iret
xor
arpl
fdivp
add
stos
aam
inc
pusha
lods
pop
sahf
xlat
inc
add
lahf
loop
add
das
adc
mov
jno
pop
aaa
xor
add
push
xor
mov
add
loope
shrl
adc
xor
xchg
push
pusha
in
mov
fisubrs
push
push
adc
mov
and
add
push
pushl
dec
push
and
jge
xchg
enter
add
insl
jne
pop
insb
mov
inc
pop
in
xorb
adc
and
pop
xchg
dec
clc
mov
rcrb
sbbb
pop
lahf
orb
push
jecxz
movl
insl
xchg
mov
or
fidivrs
test
call
mov
and
dec
shrl
add
cwtl
jecxz
jnp
lcall
lods
scas
xlat
loopne
pop
and
nop
jge
and
add
repnz
aad
stos
mov
add
push
push
add
add
int
fcoms
cmp
add
lods
mov
popl
dec
mov
loop
cld
rolb
insb
and
jne
mov
mov
mov
testl
fcmovu
pop
mov
add
xchg
fwait
int
loope
setae
dec
mov
mov
push
ljmp
mov
cmpsb
pop
dec
or
popa
and
add
es
sub
adc
add
scas
inc
jnp
addb
xchg
jno
js
push
lock
add
dec
shlb
pop
mov
fmul
adc
xor
in
popa
loopne
ret
adc
test
xchg
add
fmul
out
or
add
jg
push
lds
jo
mov
rclb
xor
outsb
xor
pop
add
out
fwait
cmp
add
push
inc
sub
mov
mov
mov
arpl
mov
cld
cmpxchg
dec
addb
mov
mov
push
add
in
test
add
mov
mov
push
imul
cmp
inc
push
pop
fbld
push
cmpsb
xchg
cli
stc
cld
or
mov
es
lret
mov
inc
and
jb
out
or
imul
push
popa
lock
mov
mov
or
cmp
sahf
push
and
enter
in
inc
and
pop
mov
add
cmp
pop
loopne
xchg
aam
mov
fidivrl
rcr
out
jb
and
add
lahf
icebp
cmc
loope,pt
repz
outsb
test
out
sti
dec
add
loop
mov
shll
arpl
pop
add
add
sti
in
cmp
enter
xor
lods
popa
leave
jmp
idivb
dec
movb
jecxz
pop
cld
add
cmp
jb
aaa
or
pop
repz
mov
sub
fdivr
add
xchg
or
xor
pop
add
bound
mov
add
mov
test
xchg
rcll
cmp
call
sub
lock
into
adcb
inc
add
mov
push
add
call
xor
add
fbstp
jns
lods
add
xchg
xchg
andps
pop
clc
enter
add
cmp
cwtl
bound
shrl
dec
add
flds
mov
cmp
add
push
shlb
pop
add
hlt
add
dec
lcall
sub
mov
stos
mov
in
pop
call
sbb
or
push
setle
cwtl
mov
mov
add
int3
cld
push
aam
sub
jp
stos
aas
mov
cmp
add
enter
movsl
mov
fildl
jmp
out
mov
les
pop
add
lcall
roll
fmul
movsl
ret
cmp
mov
cmpsl
add
dec
push
jbe
mov
xchg
stos
jae
sub
and
jp
sbb
push
mov
add
push
cmpl
push
adc
jmp
test
popa
mov
inc
stc
inc
loope
jo
pop
mov
or
add
aas
mov
mov
cmpsl
pusha
movsb
adc
mov
mov
jno
and
js
push
mov
lret
xchg
rcll
pop
in
or
inc
enter
lods
jp
mov
call
xchg
add
in
jmp
out
adc
rorb
sbb
outsl
mov
imul
add
or
add
push
aas
pusha
jb
sbb
test
mov
pusha
cmpsb
push
add
out
lahf
cltd
add
outsb
dec
xor
lds
int
xlat
mov
mov
pop
pop
out
xchg
adc
daa
sub
out
push
xchg
scas
add
mov
push
adc
push
xor
nop
test
add
jp
mov
sbb
jns
xchg
adcb
xor
add
rolb
fwait
add
pop
popa
mov
jg
lea
sarb
jno
add
enter
and
and
addl
dec
out
fcompl
sahf
add
cmpsb
add
add
addr16
mov
repz
adc
pop
add
sub
loope
imul
adc
inc
hlt
jo
call
int
and
aad
add
in
sahf
outsb
xor
jo
mov
xchg
es
addl
xor
add
jbe
and
sub
icebp
cmp
pop
jns
lret
adc
xor
sti
loope
rolb
jmp
push
and
or
mov
sahf
cmp
pop
dec
clc
push
or
imul
or
mov
gs
mov
xchg
in
mov
add
adc
sub
jle
fisubrl
test
pop
lret
push
pop
aam
insb
ljmp
pop
add
sbb
push
fsubl
into
shlb
add
ror
fldt
add
shll
dec
pop
int3
cmp
pop
js
add
incb
imul
iret
cli
add
decl
mov
sub
dec
cmp
daa
mov
mov
popa
dec
pop
inc
gs
loopne
cmpsb
aam
push
into
notl
push
scas
xchg
add
mov
jne
add
xchg
aas
cs
cmp
pop
and
add
sbb
sbb
jb
setg
mov
out
sbb
loopne
add
ret
xor
push
test
jns
add
and
jecxz
popf
cmp
sbb
and
xchg
jbe
fsub
out
xchg
pop
andl
and
pusha
sbb
test
cli
push
scas
add
test
mov
cmp
scas
enter
add
cmpsl
xchg
pushf
ret
lret
add
mov
dec
add
out
add
movsb
jecxz
pop
adc
add
cs
and
pop
add
stos
loop
int3
aam
in
add
or
add
jb
dec
test
dec
mov
insb
test
xchg
jno
add
in
hlt
stos
push
sar
add
push
icebp
jbe
sbb
cmp
cmp
test
push
cli
repz
fmull
sarb
mov
push
int3
dec
push
mov
sub
and
daa
fwait
gs
ja
add
jmp
inc
push
repnz
inc
fiaddl
sti
jne
and
or
cmp
addl
sub
js
sti
orl
ds
push
repz
rcr
add
dec
mov
in
clc
add
pop
jmp
aaa
mov
add
bound
js
lock
pop
cmpsl
out
push
in
cli
in
add
daa
andb
fldcw
push
iret
adc
lock
sbb
rcl
mov
dec
shll
sub
sub
add
mov
ljmp
mov
ftst
add
push
flds
das
add
dec
pop
roll
mov
xchg
testb
sub
int3
loope
mov
clc
mov
add
into
pop
loop
pop
mov
pop
dec
fsubrp
or
add
lea
clc
lret
icebp
popf
adc
add
mov
fs
lret
sarb
lods
or
pop
jecxz
push
pop
mov
hlt
dec
add
mov
add
lcall
add
insl
sbb
sti
faddl
mov
add
pop
daa
jns
outsl
sbb
xchg
jl
add
rolb
roll
and
data16
addl
mov
out
dec
xchg
push
jns
mov
jmp
cmp
subb
xchg
pushf
shrb
push
add
out
jle
sub
movsl
sbb
es
imul
mov
cmpsb
jns
into
loope
push
mov
addb
xor
adc
cmpsb
jle
or
pop
lret
cmp
lock
jnp
adc
pop
rorb
loopne
push
ds
xor
cmc
fiadds
push
mov
mov
jae
sarl
dec
rcrb
insb
mov
aam
xchg
inc
mov
pushf
mov
out
into
xor
add
add
and
inc
push
push
add
sbb
lret
rolb
add
vpunpckhqdq
loopne
in
xchg
aad
dec
js
stos
in
cmp
adcb
popa
adc
xchg
mov
out
nop
sahf
ficompl
add
rcll
and
fimuls
add
fimull
adc
jnp
inc
add
mov
sub
sub
imul
and
xor
dec
sub
jmp
mov
pop
mov
enter
in
add
pop
ret
cwtl
call
mov
insl
or
add
xchg
add
arpl
lcall
and
add
inc
call
shl
xchg
ja
movsl
xchg
loopne
add
xchg
ret
lds
stos
inc
add
mov
aam
mov
add
mov
jmp
add
cmp
scas
out
push
clc
fwait
add
int
push
jae
in
loopne
loop
and
and
mov
push
add
flds
push
daa
and
rcrb
ffreep
xchg
stc
mov
fsubrs
add
push
inc
iret
clc
lret
cli
aam
les
ret
str
divl
leave
pop
je
xchg
add
icebp
add
mov
inc
mov
fsubrl
jne
dec
lods
pusha
jmp
xor
sbb
dec
sbb
call
cltd
add
push
data16
and
and
pop
sti
xor
pushl
addb
jmp
sbb
pop
sub
rorl
dec
sbb
push
and
test
mov
nop
out
xchg
adcb
add
add
lds
add
add
mov
inc
mov
add
mov
mov
pop
dec
or
jb
inc
cmpsl
stos
push
pusha
cmpsb
or
or
sub
mov
fwait
jns
add
lahf
mov
out
hlt
add
popf
arpl
push
and
dec
push
pop
out
jno
loop
adc
pop
and
rolb
call
dec
add
pop
das
dec
inc
push
xor
xchg
push
sbb
xchg
subb
and
add
or
jae
inc
mov
xchg
mov
pusha
movb
adcl
sbb
test
mov
add
shrl
int3
call
cmp
xchg
sbb
mov
addb
bound
cmp
add
xor
scas
dec
sub
add
sbb
mov
les
pop
jmp
sbbl
cs
add
test
dec
and
add
xor
mov
lret
pop
pop
loopne,pt
out
stos
sbbb
inc
or
into
mov
pop
sub
cwtl
push
xchg
fdivs
aam
dec
out
and
dec
mov
shrl
jle
rorl
fs
sbb
fidivl
cld
mov
popf
rcrl
mov
jecxz
mov
popl
sbbl
pop
repnz
inc
mov
inc
test
add
mov
add
push
mov
mov
push
movsb
lret
add
push
call
or
call
in
add
je
mov
into
daa
jo
ret
and
icebp
cmpsb
shl
mov
movb
lea
ljmp
addb
stos
add
insl
movsl
add
mov
sub
xor
sub
test
insl
xchg
dec
ds
ss
outsl
nop
dec
jg
push
es
fmull
insb
sbb
fildl
mov
dec
js
stc
add
int3
inc
xchg
xchg
loope
xchg
mulb
std
sub
outsl
mov
xchg
xchg
or
in
adc
xor
mov
lret
add
sub
push
add
cld
pop
imul
shll
addl
cmpb
faddl
loopne
gs
push
mov
test
movb
and
mov
pop
adc
orl
addb
test
in
aad
add
lahf
mov
rcll
in
stos
add
fnstsw
pop
fmull
push
inc
mov
pop
mov
aas
rolb
jbe
outsb
fs
in
movsl
mov
jle
sbb
cmp
xlat
cmpsb
repnz
sahf
mov
out
add
cmp
call
add
xchg
div
andb
movb
fcoms
sbb
pusha
lock
loopne
push
dec
hlt
add
cmpb
pusha
push
mov
push
cmpsl
outsb
push
adc
xchg
and
les
xchg
or
daa
inc
test
outsl
popa
mov
adc
and
or
add
mov
dec
int3
xorl
or
sub
sysenter
arpl
or
xchg
sbb
std
jle
push
xchg
sti
in
adc
lret
mov
inc
adc
sub
xor
pop
arpl
sbb
adc
push
adcb
hlt
cmp
inc
fstps
in
mov
or
jno
inc
sbb
xor
dec
lcall
aad
sarl
out
sbb
and
add
jbe
add
dec
push
inc
jno
pop
loope
lods
sbbl
inc
mov
daa
jp
scas
sub
and
and
pop
pop
adc
sub
pop
jmp
inc
imul
mov
mov
fnsave
mov
push
das
mov
jle
int3
and
loope
adc
and
shll
push
mov
mov
lods
adc
xchg
adc
int3
adc
and
loopne
loopne
cwtl
add
jb
adc
inc
nop
int3
adc
and
mov
cwtl
adcl
popa
scas
xor
sub
pusha
call
pop
in
je
dec
sbb
pop
inc
sbb
sbb
loop
xor
or
iret
dec
mov
out
dec
sbb
xchg
js
xcrypt-ecb
cmpsl
dec
bound
out
popf
sbb
scas
adc
inc
loop
mov
js
add
adc
mov
sbb
lret
inc
jns
mov
mov
into
ret
fcoms
xchg
hlt
dec
in
jb
loop
int
or
mov
popf
js
inc
cld
rolb
inc
adc
sub
inc
sbb
rolb
sbb
imul
stc
popf
xor
enter
jg
mov
dec
roll
or
rcrb
sbb
lock
andb
adc
cwtl
xchg
and
cld
xor
cmp
inc
inc
loop
pop
xchg
insb
aas
add
int3
stc
fisttps
cli
inc
ds
stc
push
psrlq
sbb
shl
xchg
aam
loopne
xchg
fst
sub
or
or
push
fsubrs
jmp
insb
ficoms
inc
out
xlat
jp
and
cmpsl
lret
xchg
dec
orl
push
push
push
jae
mov
jp
mov
push
and
stos
aad
or
out
in
jge
mov
cmc
jle
sub
or
mov
adc
push
out
loop
sahf
inc
inc
mov
adc
mov
jae
push
push
fists
inc
mov
mov
mov
push
jbe
les
cmpsl
cmp
inc
lahf
repnz
adc
add
or
lret
jo
imull
out
js
flds
xchg
xchg
das
rorb
test
rorl
and
int3
pusha
jle
inc
push
xchg
pop
adc
test
add
sub
push
inc
push
lcall
mov
inc
jmp
loop
jnp
shrb
sub
out
lods
and
adc
popf
jb
adc
sahf
jbe
shlb
lea
subl
cmp
aas
loopne
popl
ljmp
mov
scas
and
stc
test
xor
sub
cltd
adc
sahf
icebp
xor
stos
loope
popf
push
adc
loopne
int3
or
imull
xchg
sahf
cli
adc
sbb
vphsubwd
sbb
mov
xor
fwait
and
sbb
cmp
add
mov
inc
adc
cltd
xor
and
rcl
and
lret
popa
mov
fs
inc
xchg
loope
push
adc
mov
cmpsb
mov
sub
mov
mov
sbb
insw
inc
ds
mov
cmp
js
rolb
repz
inc
movsb
test
push
push
ds
stos
aam
pop
xor
lods
sahf
lcall
mov
ds
pushf
push
lods
push
adc
xchg
xor
push
mov
inc
xchg
push
jns
gs
or
movsb
and
xchg
mov
inc
cmp
repz
sbb
fsubr
int3
inc
ljmp
sub
pop
cmp
out
punpckhwd
jmp
ds
xchg
ss
sbb
mov
mov
add
xchg
fs
add
frndint
js
rol
sbb
outsl
fsubp
xor
pushf
sub
rolb
in
xchg
in
inc
repz
jecxz
mov
mov
iret
add
xchg
or
outsl
sbb
data16
loope
fadds
mov
xor
pop
xor
dec
loopne
push
out
test
pop
repz
mov
mov
out
adc
sbb
xchg
dec
jae
cmp
cmp
sub
cmp
in
ss
mov
xchg
jb
pop
sahf
scas
fidivrl
sahf
add
repz
push
push
cmp
xorb
add
add
sub
xchg
push
xor
loop
adc
pop
fildl
je
mov
loope
dec
add
aas
mov
inc
add
adc
sbb
xor
or
inc
push
jbe
push
push
inc
push
cmp
inc
jl
add
mov
add
add
mov
jle
pop
lock
pop
add
pop
mov
add
sahf
mov
add
je
enter
jne
mov
pop
pop
cmp
test
lods
outsb
pop
or
hlt
dec
in
data16
or
add
dec
mov
push
mov
call
fsubs
add
hlt
les
adc
clc
pusha
cld
push
and
mov
xor
add
mov
ret
sahf
pushw
xor
mov
mov
sub
mov
jnp
or
in
pusha
pop
dec
add
inc
iret
dec
movsb
pop
pusha
loopne
stos
pop
xor
adc
scas
add
cmp
ret
add
adcb
lods
mov
testb
jge
mov
inc
jecxz
sub
lret
cwtl
ret
ds
data16
aas
add
sbb
int3
clc
sbb
cmp
fwait
js
popf
xchg
and
adcb
movsb
in
adc
push
pop
mov
jne
pop
idiv
cmp
add
inc
arpl
adc
mov
and
orb
popa
test
daa
add
xlat
push
sub
add
movsl
inc
loop
and
jg
mov
inc
sub
das
or
popa
adcb
ja
push
adc
cmpsb
add
add
ds
add
adc
add
add
jmp
xchg
mov
inc
inc
xor
dec
ss
in
outsl
push
aad
xor
cmp
out
lock
lcall
push
in
or
push
les
xchg
inc
adc
add
cli
mov
add
pop
ficoml
testl
cmpsl
lret
fbld
dec
shlb
add
add
dec
hlt
mov
add
outsl
mov
xor
loope
mov
cmovnp
test
add
inc
aas
add
aaa
loopne
add
dec
ja
push
mov
add
mov
movsl
jmp
shrl
movsb
sbb
xor
add
repz
pop
add
dec
out
ds
loop
push
cmpsb
fdivrs
or
add
inc
xlat
popf
add
sub
rorb
push
add
das
fxch
add
or
lret
add
and
and
xor
mov
xchg
outsb
and
add
gs
and
int3
leave
loopne
add
or
bswap
jae
add
cwtl
dec
inc
fsts
add
enter
and
data16
xchg
cmp
test
mov
add
scas
in
stos
ret
add
push
mov
mov
je
sub
jmp
or
add
fcmovnbe
stc
push
mov
aam
xchg
sarl
scas
add
aaa
dec
bound
sub
js
sub
inc
arpl
add
cltd
pop
mov
add
xchg
ret
daa
stc
int
cmpl
sbb
loop
scas
stos
add
and
mov
add
fnsave
mov
add
enter
push
add
leave
add
add
vmovaps
pop
mov
faddl
ret
mov
pop
add
inc
dec
xchg
push
sub
rclb
push
and
ja
pop
cwtl
test
or
ss
add
es
add
mov
in
add
inc
cmp
mov
push
leave
jnp
add
inc
rcrb
cmpsb
jge
or
add
movsl
shll
add
jo
cmpsb
mov
sbb
ret
pop
jno
jmp
jg
repnz
sarl
and
mov
push
test
inc
push
rol
and
in
mov
cmp
outsl
imul
orb
sub
stos
or
roll
loopne
add
rclb
add
cmpsl
out
sub
cmpsb
and
inc
call
sbb
pop
sti
mov
out
cmp
pop
and
cmpb
add
nop
bound
insb
push
sbb
fs
fiaddl
cli
add
popa
add
jmp
scas
out
je
mov
jne
outsl
popl
jl
add
fildl
lods
dec
or
in
mov
sbb
imul
cmp
pop
mov
and
sub
and
iret
sarl
lea
shrl
je
sub
inc
inc
daa
leave
dec
add
notl
arpl
xorl
ficoms
add
push
test
add
jnp
outsb
out
push
xor
adc
cs
std
pusha
add
je
xchg
push
pushl
pop
jmp
scas
sti
adc
jmp
sub
add
dec
mov
mov
repnz
xchg
fisubs
mov
ret
out
ja
icebp
arpl
call
jae
jp
inc
inc
iret
ljmp
arpl
jmp
push
clc
mov
mov
loopne
dec
call
dec
dec
add
pop
pusha
test
cmp
xchg
stc
pop
and
add
shrb
addb
inc
mul
ds
add
push
out
push
mov
push
push
out
stc
inc
cmp
and
and
adc
jnp
add
sar
push
insb
mov
mov
or
xor
sub
jp
lea
cmpsb
fs
fsubl
test
add
std
jecxz
mov
lock
push
add
push
add
push
xor
or
jle
addb
pop
lcall
icebp
cmp
add
das
addb
dec
arpl
js
cmp
add
xor
sub
fcomps
imul
mov
lcall
mov
hlt
sub
jb
test
inc
jp
jno
ds
sbbl
mov
add
and
sti
lahf
rorb
or
sbb
insl
repz
adc
jbe
or
ss
xorl
movsb
mov
adc
or
dec
pop
cmp
sub
mov
mov
hlt
jbe
add
enter
out
add
inc
push
imul
outsl
inc
push
mov
je,pn
pushf
add
pop
inc
push
mov
pop
std
leave
fimull
ret
sbb
pop
div
jp
add
push
jg
sub
out
hlt
cmp
sbb
inc
fcmove
in
and
cs
or
dec
fcomp
pop
cmpsl
hlt
stos
add
addr16
adc
xchg
add
ret
lret
jp
outsl
sti
dec
loope
daa
add
and
add
jae
push
inc
es
cmp
and
scas
cmp
pop
sahf
mov
dec
fdivl
mov
push
ja
sub
add
mov
push
shrl
lahf
sbb
jecxz
and
cld
nop
add
clc
push
add
adc
arpl
dec
fstl
fisubrs
int3
mov
and
mov
jp
push
stos
rorl
rcrl
xchg
pop
adc
add
int3
push
jp
cmp
jl
xor
cli
push
std
and
adcl
sbb
mov
add
xor
arpl
mov
clc
roll
dec
add
inc
dec
fwait
dec
sub
dec
out
frstor
js
call
sbb
push
jle
sub
aad
bswap
movsb
xchg
scas
inc
jnp
clc
sub
bound
or
mov
movsb
add
xor
mov
xor
fsubs
or
fisttpll
mov
push
es
sbb
outsl
pop
xchg
sbb
or
inc
leave
mov
mov
mov
icebp
mov
add
int3
test
dec
add
xchg
xor
popa
leave
dec
inc
int3
out
lock
xorl
pop
mov
xor
int
or
shr
cmpsl
add
dec
adc
repz
popf
add
lret
cltd
or
std
dec
sbb
out
mov
xchg
push
lret
loopne
push
aaa
inc
pop
cmpsb
adc
dec
push
push
enter
pop
push
xchg
mov
sbb
add
unpckhps
sub
neg
outsl
push
leave
push
mov
xor
sahf
push
imul
and
add
xchg
outsl
xchg
and
and
pop
xorl
push
cmp
or
lods
and
lods
inc
cltd
and
arpl
push
outsb
cmp
mov
fs
out
stc
add
add
xor
stos
mov
sub
adc
mov
enter
or
jnp
test
mov
xchg
lret
sbb
enter
aaa
lcall
jp
add
mov
push
and
in
xchg
add
and
dec
add
stc
xorb
cmc
sub
mov
add
push
fisttpll
pop
xchg
jp
and
repz
push
in
cmp
cld
or
pop
add
ja
xlat
jle
sbbl
repnz
and
inc
and
add
inc
clc
push
mov
sbb
push
jmp
cmc
add
cmpsl
sti
pop
xchg
mov
jge
mov
jns
add
add
ret
int
rcrb
add
subl
stos
jne
mov
jmp
add
inc
adcb
add
clc
aam
push
data16
add
cwtl
gs
add
mov
lahf
in
shll
sbb
jb
sub
loopne
cmp
fwait
add
mov
out
ljmp
sbb
arpl
xor
cmp
subb
mov
add
jb
push
xor
pop
cmp
mov
pushf
lock
jbe
std
nop
fwait
pop
cmp
stos
scas
mov
fimuls
jbe
pop
test
movsb
add
inc
add
arpl
add
in
bound
imul
pop
orl
daa
xor
fdivp
pop
pop
xchg
xor
sti
dec
lret
rcrl
fidivs
jb
pusha
jae
sub
xlat
cltd
or
sub
xchg
add
or
fcoms
push
and
pop
fnstcw
into
cmpl
lds
sub
add
mov
xchg
ljmp
sbb
push
xlat
add
scas
mov
jge
rclb
cld
imulb
js
mov
shll
xor
pusha
jge
add
sub
xchg
dec
ss
xchg
or
aaa
or
lret
dec
cli
push
mov
mov
xchg
or
arpl
rcll
mov
pop
test
iret
cmp
xor
jb
mov
stos
in
push
sub
add
stc
adc
inc
mov
sbb
add
pop
aad
ret
decb
pop
popf
pop
loop
mov
mov
jp
cmp
cs
aaa
cwtl
push
jnp
hlt
sarb
or
jns
push
subb
mov
add
sub
adc
mov
sar
jle
loopne
add
lock
jb
add
fstp
scas
add
mov
inc
mov
and
divb
jmp
mov
cvtpi2ps
mov
mov
sbb
sbb
jno
jmp
jge
rol
out
dec
aam
mov
mov
js
add
adc
fwait
add
hlt
jmp
xchg
andb
xchg
mov
mov
popa
movnti
loop
ja
sar
add
mov
je
add
mov
aaa
xlat
lea
rclb
pusha
sbb
loope
dec
push
mov
or
push
mov
sub
je
test
xor
mov
das
pop
jo
cmp
sub
enter
xor
aam
mov
jmp
push
ljmp
push
xor
sbb
jne
insb
mov
jnp
jb
sub
fisubrs
add
stc
push
xor
xorb
mov
add
popf
leave
fists
ja
nop
dec
add
jecxz
cmp
fsubs
fnsave
mov
push
mov
inc
cmpsl
insb
and
jo
faddl
mov
adc
popa
push
test
fmuls
mov
iret
mov
rcrb
faddl
push
clc
jo
loopne
shlb
lcall
mov
adc
xorb
sub
mov
pusha
dec
pop
pop
or
mov
pop
jl
cmpsb
add
mov
lock
dec
jbe
add
cwtl
push
cmpsb
or
sub
enter
imul
adc
pusha
dec
pop
add
imul
movsb
push
inc
addb
lea
orb
cmpsl
fsubl
xor
test
mov
dec
call
mov
je
adc
or
scas
sbb
pop
ret
mov
and
add
ret
addb
lods
inc
and
jg
or
ds
jnp
xor
lods
adc
insl
xchg
jg
std
mov
fmull
flds
out
push
mov
in
inc
jecxz
orb
pop
push
ds
adc
icebp
loopne
and
popa
mov
shr
icebp
dec
inc
add
and
arpl
sar
clc
add
test
imul
icebp
pushf
pop
add
pop
out
push
add
ret
pop
push
mov
adc
orl
or
or
jno
mov
fldenv
and
scas
imul
add
jo
out
pop
aaa
cmp
mov
das
mov
test
push
mov
push
dec
aad
scas
mov
aas
test
mov
punpckhwd
mov
insb
jb
rolb
add
and
shlb
add
jno
add
add
in
mov
jge
add
mov
pop
fldenv
in
and
inc
testb
int3
inc
xchg
mull
cmc
or
xor
mov
or
shl
adc
or
cmp
add
jb
or
xor
inc
add
pusha
xchg
sbb
adc
jmp
jecxz
popf
pop
jo
mov
inc
xor
xorb
and
addb
push
cmp
pop
add
fstps
pop
fadds
out
lods
std
jg
das
movsb
inc
xor
adc
jl
std
or
dec
imul
pop
add
leave
sbb
inc
push
push
lods
xor
jmp
lret
aaa
add
jecxz
lea
jae
mov
add
addl
add
je
jle
dec
push
xchg
adc
or
push
xchg
inc
daa
sub
call
aaa
jle
mov
sub
js
lods
add
es
or
loopne
xchg
lcall
test
popf
sub
xor
fbld
add
xchg
outsb
stos
xchg
sub
and
jge
adc
push
or
xor
push
popf
cltd
nop
in
loop
loope
leave
add
shrb
in
lods
shl
jg
jnp
add
jae
xor
stc
xor
cmp
into
jb
adc
mov
sub
lea
mov
add
xor
ror
push
mov
popa
push
sub
xchg
je
movq
push
sub
sbb
lods
push
leave
enter
fsubl
adc
dec
daa
push
xchg
add
push
cmp
insl
gs
clc
lahf
pop
mov
mov
adc
add
lea
mov
dec
lret
shlb
std
sbb
addb
rcr
pop
xchg
mov
add
xor
xor
xor
fidivl
pop
lock
scas
push
ja
je
pusha
in
pop
xor
lret
sbb
cmp
push
xor
mov
sub
push
repz
out
jae
mov
push
push
add
xchg
push
cmp
dec
sbb
jbe
shlb
mov
stos
add
sbb
xor
inc
mov
sbb
out
ss
add
das
scas
test
xchg
sub
or
cmp
or
arpl
subb
sahf
mov
outsl
sbb
pop
xor
sbb
add
imulb
jo
in
bound
mov
mov
sub
faddl
fildll
sub
xor
or
add
jg
mov
xchg
jb
xlat
xchg
cmp
cwtl
pop
sarl
and
stos
push
test
stos
ret
in
or
mov
lea
outsl
push
pop
imul
jne
push
ds
add
xchg
push
insb
push
aad
jb
clc
fs
popa
movsb
outsl
and
daa
in
push
add
rolb
fsubrl
mov
pop
cmc
repz
inc
push
lea
pop
push
add
xor
leave
icebp
cmp
cmp
orl
fs
andb
xchg
push
shll
iret
enter
push
or
pop
and
add
ficompl
mov
pop
mov
push
cli
cmp
movsl
in
ret
mov
jl
daa
dec
sar
mov
icebp
and
and
sub
sub
pop
add
shlb
add
lock
adc
cltd
aaa
addb
push
or
mov
outsl
jp
push
mov
jo
add
sbb
cwtl
add
pop
push
push
cmp
int3
mov
mov
arpl
ss
dec
mov
add
push
scas
mov
sahf
xor
sbb
pop
xor
mov
add
out
add
dec
add
mov
loop
mov
stc
dec
repz
insl
add
push
add
fldt
scas
or
int3
add
dec
sub
mov
dec
xor
pop
add
daa
jo
inc
call
pop
mov
adc
sbb
fldenv
repnz
ret
cwtl
or
addr16
sub
pop
inc
adc
xorl
add
push
ret
nop
nop
lods
pop
sub
sub
nop
mov
push
or
out
xchg
inc
pop
fists
cmpsb
and
sub
popa
enter
xor
or
data16
icebp
cld
leave
mov
add
xor
adc
and
loopne
xchg
test
cmp
adc
add
int
cld
jo
outsl
add
and
mov
sub
adc
dec
je
and
popa
sbb
imull
mov
push
sqrtps
push
loopne
pop
xchg
sub
outsl
loopne
add
ret
fwait
cmp
xor
mov
lcall
sub
gs
pop
add
push
mov
jae
ds
sub
add
push
push
mov
or
cmp
out
daa
mov
jg
test
cmp
add
adc
xchg
scas
and
add
pop
sbb
sahf
out
adc
es
push
cmp
mov
pop
and
mov
sbb
aas
faddl
or
xor
add
popa
fcomi
cli
fiadds
dec
xor
aas
cmp
sbb
fsubl
and
xor
add
loopne
outsl
add
push
push
lods
loope
or
mov
fldt
rol
into
jns
aaa
shl
ljmp
cli
add
push
sbb
sbb
frstor
imul
imul
imulb
sahf
ljmp
and
pop
or
jge
pop
je
dec
xor
and
loopne
aad
ljmp
cltd
hlt
cwtl
ljmp
aas
sbbl
test
fisubl
sahf
adc
in
xchg
cmpb
add
inc
push
mov
or
out
ret
call
stc
sti
pop
mov
punpckhwd
push
sbb
xor
or
xor
orb
lahf
fisttpll
notl
shll
mov
xchg
mov
mov
imul
pop
dec
add
loop
jg
les
cmp
xlat
push
push
add
or
ss
lods
sub
jo
sbb
movsb
push
jmp
mov
rcrb
mov
movsb
out
hlt
xchg
push
repnz
add
jge
in
inc
fisubrs
and
sbb
mov
push
loopne
push
pop
shl
icebp
or
add
hlt
xor
or
cmp
xorb
test
dec
jl
mov
push
insl
jecxz
cmc
shl
lcall
scas
shlb
push
jmp
popf
sbb
xorb
xor
and
outsl
jo
clc
xchg
test
mov
push
mov
test
and
xchg
xchg
jo
add
hlt
jle
outsb
dec
inc
bound
pop
xchg
orb
cmp
and
scas
mov
mov
je
pop
push
andl
sbbb
pop
inc
add
movsb
mov
pop
cmpsb
push
add
push
pusha
mov
and
dec
or
jecxz
adc
dec
add
testl
out
jge
loop
add
jnp
and
loope
in
fisubrs
out
faddl
mov
add
je
xchg
mov
cmp
add
push
and
xchg
sbb
jl
mov
add
lock
mov
jp
add
cmp
xor
add
inc
mov
jno
add
loop
repz
push
xorb
and
add
add
imul
sbb
in
or
jns
or
and
dec
mov
fadds
inc
inc
inc
mov
popa
sbb
sbb
xlat
or
xor
push
sarb
into
push
ss
or
pop
cmp
and
shl
cs
lcall
push
fidivrl
jnp
popa
lock
sbb
dec
mov
inc
in
inc
xchg
push
or
push
stos
orl
lahf
sbb
out
loope
lock
push
sbb
fs
stos
mov
push
sarb
inc
in
das
jmp
arpl
jl
or
add
iret
enter
adc
push
push
add
mov
test
jae
xchg
mov
ds
shr
out
sub
pushf
imulb
or
push
flds
jno
inc
test
enter
cmp
cmpsl
add
pop
leave
fistps
inc
add
add
sub
jne
ljmp
ret
xor
jns
call
shlb
pushf
or
sub
aad
in
sbb
stc
xchg
and
cld
jmp
pop
mov
add
pop
pop
mov
add
enter
insb
js
add
aam
mov
int3
add
scas
add
jne
add
sub
std
xchg
hlt
mov
cmc
cmp
arpl
lock
cmpsb
loop
add
rorb
cmc
lock
inc
pop
sbb
loope
cmp
repz
iret
xchg
sbb
and
lret
sbb
ss
inc
cmpsb
test
dec
sbb
pusha
incl
cmp
mov
cmp
shlb
popa
nop
push
sahf
add
add
sub
iret
pop
aaa
or
pusha
pop
push
mov
dec
sarb
insb
ja
cld
sbb
movsb
ss
add
imul
ficoms
and
xor
mov
addb
and
and
push
cmp
popl
fmuls
xor
xchg
push
rorl
jecxz
jp
add
loop
inc
add
or
std
add
mov
xchg
adc
pop
fstl
xor
push
daa
repz
dec
sbb
jge
mov
xchg
fcomip
add
pop
dec
shlb
push
add
mov
imul
cmovns
idivb
cmp
add
inc
leave
lea
sub
sbbb
jnp
cmc
insb
data16
inc
int3
xchg
lock
fcomip
sbb
push
sub
pop
cltd
sub
test
add
cmp
pop
fwait
aad
test
inc
jbe
ljmp
mov
adc
filds
pop
add
push
sbb
loopne
pop
add
fisubrs
inc
add
sar
aam
add
or
add
xchg
data16
dec
add
rclb
aas
jge
add
mov
out
rcrl
orl
mov
or
sub
cld
bound
cwtl
mov
cmp
jnp
dec
stos
add
mov
add
mov
jno
sti
mov
outsl
add
stos
rorb
add
sahf
orb
je
dec
repnz
add
jl,pn
xor
cld
cwtl
sbb
push
cmp
test
add
mov
or
sahf
and
andb
xchg
rolb
push
mov
push
sbb
fwait
pusha
dec
mov
nop
jmp
sbb
stos
pop
daa
xchg
pop
iret
add
sahf
lahf
push
xor
or
pusha
mov
xor
int
mov
add
cwtl
rorb
je
add
lret
lods
xlat
jmp
movsb
sbb
rolb
inc
add
ret
testl
jge
subl
add
or
pop
cld
mov
jmp
dec
inc
sub
mov
xor
jg
dec
push
adc
xchg
add
sub
or
jmp
sub
dec
jno
sbb
rol
mov
jne
add
and
mov
inc
inc
add
cmpsb
mov
sub
cltd
add
push
and
jo
sbb
add
imull
cmp
cwtl
and
leave
add
xchg
lds
sub
mov
add
mov
mov
add
cmp
jle
add
pop
lea
ret
test
add
fiaddl
jecxz
repnz
sbb
add
pop
cmpl
test
xchg
pop
add
dec
and
add
jno
xchg
pop
xchg
loopne
add
push
and
xchg
pop
add
int
and
mov
test
loope
cmpsl
popf
cmp
add
lret
push
add
jb
push
test
cmpsb
jbe
leave
loope
cmp
xacquire
add
jge
or
or
add
mov
add
stos
sbb
and
es
add
andb
sahf
movsl
adc
stos
and
call
or
fsts
or
xor
pop
fldcw
add
cld
or
inc
and
loopne
xchg
xor
lahf
test
pusha
dec
mov
and
add
in
repz
cmp
fldcw
lock
inc
add
loopne
mov
pusha
sarb
fildl
loope
add
add
inc
outsl
int3
sbb
andl
xrelease
aaa
push
lea
sub
add
in
adcb
pop
push
mov
sub
aas
xorb
add
sbb
mov
loope
add
xchg
xchg
mov
sbb
jnp
add
int
dec
adcl
orb
xchg
dec
or
mov
cmc
loopne
jb
es
sarl
cmpl
push
add
push
sbb
pop
push
mov
lock
imull
ficoms
adc
test
xchg
add
xor
add
pushf
es
inc
add
mov
xchg
stos
aaa
jb
or
mov
add
push
and
cmp
pusha
incb
mov
ret
jge
ds
es
jo
enter
mov
lds
mov
lar
das
aam
addl
test
dec
inc
cmpsl
sub
inc
jno
add
jle
cmp
pop
dec
jb
jl
add
cli
test
push
adc
popf
pop
nop
mov
xchg
and
mov
mov
sbb
lea
repnz
jp
pushf
add
into
jbe
filds
sbb
pusha
sbb
mov
sbb
bswap
in
inc
jnp
jo
add
jo
xchg
add
add
ja
fdivrl
cmpsl
cmp
and
sbb
pop
fistpl
fistps
jo
and
lret
fwait
mov
inc
mov
pop
mov
mov
pushf
ljmp
lea
add
add
jo
or
cmp
push
and
pop
jb
jmp
test
inc
mov
xchg
rcr
jge
repz
js
cmpsb
bound
jmp
add
lea
cmp
test
mov
imul
adc
sarl
or
cmc
es
jns
xor
scas
shlb
pushf
add
inc
lock
cmp
sub
popa
pop
xlat
sahf
jp
mov
add
rcl
mov
add
sub
xchg
pop
sbb
out
push
add
ss
iret
cmpsl
jne
add
pop
andb
adc
enter
push
add
mov
jno
add
xchg
repz
dec
and
jns
add
insb
pop
js
xchg
jnp
sbb
xchg
inc
dec
adc
test
test
and
add
mov
sub
xchg
jno
jo
dec
pop
addb
cmpsl
fnstenv
add
mov
xor
jno
cwtl
in
adc
bound
adc
mov
jmp
xor
mov
ss
bound
pop
addr16
cmp
mov
aas
inc
lea
add
popf
mov
mov
out
jbe
xor
lods
cmp
push
adc
mov
add
fdivr
adc
xchg
jns
sub
fwait
add
xchg
and
sbb
mov
lcall
sbb
aad
sub
xchg
jae
loop
and
out
push
and
mov
pop
sub
lret
adc
xor
add
push
mov
or
lcall
adc
xorl
clc
lea
sar
lods
or
add
cmp
dec
xor
cld
pusha
fstpt
sbb
add
rclb
add
jb
xchg
in
xchg
subb
push
add
loopne
cmp
repz
test
add
and
mov
pop
cmp
pushf
mov
fisttpl
lods
cmpb
xor
add
rorb
xchg
inc
mov
pushf
or
inc
aaa
aam
int
add
test
clc
ljmp
mov
push
arpl
cmp
xor
mov
mov
insl
sbb
sbb
int3
push
es
mov
push
shll
outsb
dec
xchg
jp
aam
inc
addr16
sti
add
jmp
lods
std
pop
arpl
xchg
scas
mov
push
fildl
iret
inc
popa
xchg
cmp
shlb
jnp
pop
in
sti
add
or
lea
sahf
dec
mov
xchg
jg
fbstp
jo
mov
xor
push
pop
dec
iret
pop
and
jo
and
cli
loopne
add
xor
lods
jo
inc
sbb
mov
sbb
jnp
pop
sti
out
add
xor
sub
push
movsl
in
pop
nop
ds
push
loopne
in
std
das
add
fldenv
push
push
ss
int
cmp
lds
add
xor
mov
sub
ja
jne
jge
xor
push
cmp
push
mov
mov
xor
pop
sub
subl
add
dec
xchg
jmp
out
mov
loopne
jae
aas
and
mov
pusha
push
inc
cmp
lea
jb
icebp
cmp
mov
pushf
test
ret
daa
add
movsb
lock
add
imul
std
dec
rolb
push
mov
pop
sub
in
dec
inc
hlt
or
cwtl
clc
sbb
pop
add
cmpsb
jns
add
ds
in
daa
dec
add
cmp
cmp
pop
jecxz
ret
push
mov
and
outsl
or
pop
push
push
pop
fcmovnb
mov
mov
sbb
std
mov
faddp
cltd
fimull
sbb
hlt
ja
insb
test
inc
andl
movsl
filds
adc
mov
movsl
test
xor
inc
or
sbb
inc
dec
sub
cs
push
sbb
push
and
adc
test
or
pop
push
cmp
movsb
and
aaa
fsubs
dec
cmp
gs
outsl
fisttpl
add
or
xor
test
loopne
sub
and
mov
adc
jns
xchg
stos
jle
aas
mov
sbb
xchg
out
push
fldenv
rorl
rolb
xor
mov
add
pop
lods
mov
add
or
hlt
xor
xlat
mov
pop
stc
jl
nop
push
negb
lret
call
leave
sbb
pop
push
cmp
adc
mov
je
add
in
push
ret
dec
pop
xor
or
xor
rolb
cmp
push
ss
push
pop
adc
popa
repz
mov
push
pusha
adc
or
jmp
xor
sub
push
idivb
ret
sbb
lock
in
sub
jb
clc
sarl
cmp
ss
adc
les
repz
jae
ja
int3
xchg
test
sbb
repz
subl
mov
fcmovb
insl
add
cmc
pop
rorl
xchg
xor
outsb
mov
mov
inc
rolb
adc
and
cmp
popa
dec
inc
dec
mov
mov
push
int3
xor
mov
mull
xchg
sbb
mov
jne
int
inc
push
xor
test
clc
into
gs
in
add
add
mov
xor
fs
sbb
cld
in
icebp
in
cmpsl
addl
dec
addb
adc
aam
dec
adc
add
les
adc
in
or
xor
int
mov
hlt
push
ret
add
adc
lock
xchg
or
insb
flds
add
mov
lods
cmp
add
jns
in
cmc
adc
sbb
mov
int3
and
rcl
jno
jns
dec
cmp
or
lcall
fs
fs
xor
mov
lea
mov
pusha
mov
pop
xor
and
inc
bound
sbb
insl
test
ret
xor
out
into
add
lret
dec
inc
adc
adc
pop
pushf
add
cmpsb
inc
dec
int
fwait
add
fdivrl
jbe
mov
subb
jg
sub
fnsave
or
fsubrp
shlb
push
pop
or
jne
loopne
aad
cwtl
jno
addb
xorl
sbb
dec
in
mov
out
inc
jl
sbb
sub
pop
sub
push
cmp
lret
fmuls
pusha
mov
testl
jo
lea
cwtl
xor
pop
add
dec
stos
xchg
xor
test
cwtl
adc
sbb
add
sub
insl
ljmp
push
push
pop
mov
subl
jns
sarl
xorb
add
sbb
adc
out
adc
xor
sbb
inc
cmpsb
rcll
imul
shrb
enter
dec
pop
jb
dec
ss
sub
enter
xor
adc
sbb
mov
or
and
in
and
jmp
add
and
and
psubsw
scas
add
and
adc
add
rcrl
mov
or
decl
shll
fisubl
in
imul
push
add
cmpsb
xchg
pop
ret
cld
lcall
jbe
cmp
int3
push
mov
or
push
and
repz
ficoml
and
test
ret
inc
cmpb
test
clc
xor
arpl
and
push
inc
stos
add
push
shrb
rclb
ds
mov
mov
lds
pop
and
fsubs
or
push
push
mov
pop
out
inc
pusha
push
dec
jns
pop
xor
cld
notl
cmp
and
sub
sbb
std
xchg
sahf
add
fidivrs
dec
out
pusha
jge
lcall
scas
mov
add
push
push
stos
iret
jns
cld
test
hlt
orb
jne
mov
cmp
and
adc
aaa
fildl
data16
sbb
lea
lahf
adc
adc
loop
lods
sub
cmpsb
mov
aaa
icebp
and
ljmp
repz
cmp
adc
shlb
imul
dec
jo
lahf
inc
mov
out
add
dec
add
js
mov
imul
rcll
nop
jo
daa
jae
xor
push
cwtl
add
shl
cwtl
xlat
movsb
or
mov
dec
add
lret
cld
and
jg
mov
or
mov
sti
and
mov
xor
popa
int
insl
push
and
lods
je
sbb
scas
lock
dec
and
stos
fcomps
pop
xor
andl
xlat
dec
push
outsb
sbb
test
sub
add
pop
lret
or
or
mov
in
mov
scas
nop
add
xor
mov
daa
mov
dec
loopne
pop
push
inc
imul
insl
mov
add
dec
lock
xor
rolb
pop
inc
clc
addr16
jnp,pt
jp
inc
addl
mov
inc
sahf
iret
int3
jp
xchg
int
inc
and
jbe
loope
xchg
popa
lods
inc
pusha
rorb
lea
adcl
pop
adc
repnz
xchg
lock
fs
sbb
shll
out
daa
or
xchg
clc
mov
xchg
xor
loopne
test
and
mov
clc
cmc
ja
icebp
call
js
sahf
and
rorb
inc
dec
lea
rclb
test
inc
std
rorb
dec
movsl
popl
orb
pop
xchg
push
out
mov
cmp
pusha
and
inc
out
pop
pushf
xor
cmp
sbbl
leave
mov
xchg
int
push
mov
std
push
push
xor
mov
cmp
pop
dec
xor
sub
cmp
or
mov
push
clc
sbb
inc
pop
sbb
xor
int
pusha
pusha
dec
cli
jo
mov
lret
cmc
mov
lea
pusha
and
push
xor
lods
pusha
sahf
filds
add
sub
int
add
sar
js
sti
shlb
inc
sti
subl
in
push
or
mov
pusha
ss
sbb
shrb
movsb
scas
adc
mov
jl
enter
shlb
pusha
loopne
push
cmp
les
sub
loopne
adc
add
rcll
loopne
or
into
xor
cmc
shl
shlb
xor
or
mov
inc
lods
loope
add
bound
push
flds
lea
or
insl
and
fs
sub
inc
ljmp
lds
pusha
pusha
cmc
movsb
test
inc
jmp
inc
push
sar
mov
add
jnp
xor
cmp
cs
mov
lds
lods
push
pusha
pusha
xchg
js
movsb
rolb
lcall
jge
jmp
push
pop
add
jmp
add
js
sbb
inc
dec
xor
or
popa
pop
mov
es
inc
lea
and
adc
mov
mov
fs
jno
push
push
lock
popa
lods
push
dec
icebp
cmpsl
jbe
imul
mov
inc
push
mov
sti
cwtl
outsb
adc
xchg
adc
dec
mov
cmpsl
inc
test
sub
popl
xor
aam
pusha
cltd
dec
adc
inc
dec
fs
xor
push
pusha
lock
mov
inc
dec
lods
inc
pop
shlb
mov
pusha
shll
insl
pop
pusha
fadds
pop
adc
ljmp
mov
sub
out
lds
or
sbb
lds
xchg
in
push
stos
fisubrl
popa
int
pusha
xorb
sbb
lods
push
test
clc
stos
push
insl
pop
pop
pusha
sbb
sub
inc
pop
sarb
imul
mov
xchg
dec
test
add
mov
adc
lock
lcall
jno
imul
adc
sub
rcl
dec
pop
enter
push
cli
loopne
or
out
mov
popf
call
sub
ds
test
cltd
jl
or
cld
call
lock
sub
xchg
rcl
out
clc
mov
dec
sar
and
jl
sbb
adc
pusha
in
clc
xor
clc
out
loope
xchg
and
fwait
loopne
pusha
xchg
out
and
adc
inc
enter
orb
sub
and
fcoms
popa
dec
sub
add
sub
sbb
adc
xor
xor
sub
sti
inc
xor
xchg
call
or
repz
lea
add
mov
lods
push
mov
xor
es
mov
dec
xchg
or
push
mov
or
mov
insb
inc
xor
popa
sub
call
or
dec
aaa
xchg
call
sub
dec
fmuls
xor
mov
dec
add
add
push
test
mov
xchg
push
sub
lods
pusha
popf
ja
pop
xorb
mov
pusha
or
or
sub
xor
xchg
insl
pusha
fsubl
push
out
test
push
xor
mov
test
popl
adc
mov
and
xor
dec
inc
push
outsb
adc
imul
dec
mov
fcmovne
rcrb
push
jb
or
xor
pusha
js
jbe
sbb
xor
xchg
pop
pusha
pop
outsl
and
sbb
xchg
xchg
repz
mov
mov
pusha
add
push
out
xor
cwtl
push
icebp
ret
cltd
int3
popa
sub
mov
movsl
xor
adc
pusha
iret
sbb
xor
pusha
sbbl
fldcw
call
cli
or
lock
aam
xchg
test
idivb
or
push
clc
lock
mov
mov
jg
sub
pusha
outsb
and
movsl
adc
loopne
add
sub
test
mov
xor
cmpsl
and
xor
or
enter
les
and
loope
xchg
or
adc
xor
add
mov
rclb
outsb
mov
xchg
loopne
testl
ret
ss
sub
inc
lcall
clc
jle
mov
enter
mov
lods
pusha
xorl
mov
mov
mov
enter
mov
or
mov
xor
es
jo
test
sub
jl
sub
daa
pusha
pusha
xor
adc
cmp
enter
ss
mov
or
mov
dec
inc
jbe
mov
adc
test
clc
loope
inc
test
popl
test
mov
mov
sti
or
sub
inc
mov
inc
popf
sar
ljmp
int3
xchg
lcall
or
and
xchg
sub
jmp
mov
or
jl
or
or
mov
inc
int3
fnstsw
loop
push
in
lahf
clc
sar
push
adc
icebp
cmp
jl
push
add
and
sarl
popl
adc
add
jl
clc
in
and
ret
inc
movsb
rcr
enter
sbbl
sbb
and
test
xorl
xor
push
pop
shll
dec
sahf
jg,pt
xor
xchg
xchg
sub
outsb
sbb
sbb
mov
lcall
sahf
cmpsb
and
andl
andb
bound
outsb
pop
add
xlat
ret
push
mov
push
adc
int
and
inc
xor
add
cmc
adc
stos
sub
push
inc
inc
mov
lds
dec
xchg
xor
imul
or
stos
pushf
dec
xor
mov
adc
sub
cwtl
or
xor
js
cld
out
and
popa
jmp
pop
push
push
outsb
pop
pop
xor
lret
daa
loope
andl
pop
push
add
push
scas
adc
mov
xchg
clc
pop
adc
ficoms
sub
rcrb
fisubrs
orl
push
adc
jmp
loopne
outsb
stos
dec
mov
popl
adc
stos
cltd
pop
js
sbb
popl
adc
imul
xchg
andb
xor
imul
sub
mov
or
jecxz
imul
mull
xor
xchg
clc
sub
and
and
dec
or
fmuls
stc
and
or
das
rcl
xchg
dec
xor
cmp
pop
inc
pop
sub
rclb
shl
test
rcrl
jmp
loopne
xchg
or
inc
out
lret
inc
aas
roll
dec
jl
not
sub
shll
imul
cs
and
shrb
inc
popl
sub
or
mull
push
lret
les
jmp
jl
or
mov
or
inc
clc
push
jae
fsubl
push
lock
lods
jge
lahf
test
inc
aaa
rolb
shlb
jne
cltd
or
xor
loop
mov
add
dec
or
or
clc
imull
and
push
and
cmp
popf
stos
test
inc
out
lret
inc
das
ror
push
mov
sarb
cmp
adc
int3
lea
enter
lods
sbb
and
or
rcll
or
xor
repnz
mov
mov
xor
inc
inc
rorl
cmp
lret
aaa
pop
add
mov
inc
jl
or
mov
push
nop
loopne
mov
lcall
add
cmp
testb
lock
dec
jg
inc
or
push
cmp
test
shlb
add
jecxz
xchg
sub
dec
or
lret
sub
dec
ja
shll
xlat
cmp
adc
mull
mov
xor
dec
push
fdivrs
and
sarl
push
iret
adc
dec
mov
fadds
fstl
mov
mov
je
xor
sub
add
inc
mov
add
xchg
pop
add
mov
enter
add
ficoms
and
xchg
sub
mov
pusha
sbb
repz
adc
lock
xor
dec
test
stc
jge
icebp
sub
aam
push
call
pop
jns
and
rcll
enter
ret
xor
or
lods
jnp
lds
mov
test
xchg
push
icebp
xor
adc
lea
lock
int
lds
sub
push
jmp
or
xor
clc
adc
and
and
xchg
rsm
ljmp
fldl
sub
dec
lock
ljmp
pop
sbb
and
xchg
rcrb
xchg
inc
and
cs
shrl
fcoms
in
xchg
or
adc
pusha
pusha
lret
mov
mov
sub
rolb
aaa
leave
and
add
adc
cmp
enter
mov
mov
popa
dec
push
add
mov
loopne
lret
test
lahf
cltd
int3
scas
ds
dec
mov
cwtl
mov
pop
mov
cmp
add
div
enter
clc
pushf
inc
xor
pop
pusha
add
and
mov
add
scas
push
mov
push
repz
sub
adc
test
ret
les
stos
or
loopne
mov
and
xchg
adc
decb
js
or
fs
mov
mov
inc
xchg
add
xchg
add
pusha
add
int
pop
inc
call
clc
jge
lret
xchg
js
or
out
mov
test
sar
ficomps
adc
shll
and
iret
ret
mov
mov
inc
pusha
rorl
dec
jmp
sti
adc
scas
adc
push
lock
lret
xchg
xor
inc
pusha
and
dec
lods
pusha
subl
mov
pusha
or
mov
rcr
cltd
rolb
arpl
push
cmp
cmp
push
mov
mov
movsl
adc
pusha
add
insb
notb
adc
lock
push
pusha
lock
lret
and
popa
out
arpl
enter
sbb
inc
popa
test
lods
pusha
mov
inc
mov
shll
jge
fsubrs
pop
pusha
push
arpl
dec
lods
pusha
cmpl
add
add
cmp
or
push
int
call
scas
shl
rolb
mov
or
loopne
lds
xor
js
mov
mov
mov
stos
push
pusha
pusha
jmp
lods
mov
pusha
pusha
cld
lcall
inc
orl
sarb
nop
push
sub
popl
sbb
enter
push
or
add
xor
pop
roll
mov
and
call
or
mov
push
push
push
test
or
not
cmpsb
jl
adc
out
push
rcll
xor
push
cmp
push
inc
xor
in
xor
sbb
ljmp
daa
sbb
jmp
dec
leave
stos
add
xor
loopne
jb
bound
call
and
jmp
xor
mov
sub
clc
adc
push
cmp
pop
or
sarl
xchg
loope
xchg
jmp
xchg
or
lret
dec
xchg
sbb
push
out
xor
inc
sbb
and
rcrl
imul
mov
jbe
mov
mov
sub
fsubs
pop
or
int
popf
add
dec
lcall
xor
fiadds
ficompl
jl
push
mov
fdivr
dec
xchg
loop
lret
xor
stos
sbb
fld
xor
insl
js
pop
mov
mov
or
in
fisttpll
icebp
sub
sbb
push
movsb
dec
dec
orb
lods
pusha
andl
jmp
pop
sbb
and
loop
add
fldcw
pop
dec
test
stc
xorl
and
mov
and
mov
ja
out
push
nop
dec
xchg
add
cmp
push
add
xchg
or
das
incl
lock
fsubs
pop
loopne
sub
xor
jge
xor
xchg
lret
mov
xchg
adc
stos
mov
mov
push
cld
call
mov
adc
popf
adc
ljmp
mov
lods
jl
pop
aad
nop
fimuls
push
ret
cs
or
xor
pop
cmp
shl
out
nop
add
cld
mov
mov
inc
je
and
add
cmpl
test
push
push
mov
rcl
out
sub
xchg
add
cwtl
push
sbb
clc
mov
add
jbe
inc
add
imul
pop
ret
aaa
daa
pusha
sub
add
xchg
out
into
outsb
shrb
push
call
jns
xchg
inc
rolb
pop
dec
push
cmp
jo
add
jb
xchg
idivb
xchg
in
pop
mov
jae
push
andb
xchg
sub
rolb
push
add
movsb
cmp
adc
push
inc
popa
xor
push
push
xchg
jb
add
int3
mov
loopne
cmp
push
pusha
sbb
sbb
inc
push
mov
add
push
jb
adc
fistps
aad
and
cmp
ljmp
ss
cmpsl
ljmp
push
aaa
int3
nop
orb
into
pop
movups
mul
lock
push
fisubrs
arpl
adc
or
movsl
inc
jns
jp
clc
jnp
mov
rcll
cmp
add
sti
inc
out
pop
push
xchg
loop
push
test
ds
sldt
imul
add
iret
sbb
jmp
xchg
hlt
mov
dec
notb
popa
shld
adc
xchg
add
inc
push
xor
jnp
mov
dec
jbe
cmc
mov
cmp
jo
xor
bnd
dec
and
testl
and
sub
aam
adc
clc
mov
add
adc
pusha
je
add
pop
inc
iret
movsb
adc
add
imul
mov
xchg
mov
sbb
mov
inc
push
out
push
stos
inc
dec
std
sub
inc
mov
dec
lods
lock
inc
int
stos
xchg
jle
mov
fdivs
addr16
loopne
sbb
add
cs
adc
xor
faddl
mov
xchg
pop
cmpsb
adc
sbb
add
out
or
adc
rol
jecxz
pop
insl
pop
pusha
aas
mov
sub
les
add
sbb
xchg
add
xchg
pusha
mov
push
inc
push
jg
movl
add
push
xor
mov
mov
icebp
rcr
or
jp
jge
push
out
add
cli
outsb
inc
std
pop
pop
inc
add
jecxz
xchg
mov
adc
subb
xchg
loopne
adc
add
dec
pop
in
aas
xchg
xchg
fwait
lret
repnz
pop
jg
movsl
scas
sahf
add
pop
jle
in
sub
jo
add
xlat
movsb
repnz
jge
ret
push
cmp
adc
inc
push
pop
cmp
hlt
push
add
outsl
mov
add
es
sbb
add
mov
jl
jge
cmpb
stos
out
repz
sti
xchg
adc
dec
mov
stos
inc
sbb
ds
enter
add
aad
or
cmpsl
push
hlt
xor
cmp
sub
push
in
mov
pop
jl
nop
in
add
push
pop
xor
loope
ret
push
push
incl
mov
or
pushf
lahf
add
add
jg
shlb
xchg
mov
leave
xchg
mov
cmp
lock
popf
lahf
push
sbbb
dec
test
jge
aaa
pop
in
push
mov
mov
add
ljmp
in
push
or
push
push
adc
xchg
jecxz
scas
adc
jle
add
dec
inc
mov
add
jns
es
xorb
rcpps
sbbb
push
xchg
add
dec
into
cli
xchg
mov
fcompp
mov
sbb
inc
add
lret
add
nop
jno
xor
lods
addr16
shrb
jo
mov
fwait
pop
aam
incb
or
mov
add
xor
in
cmp
loope
pop
test
js
jo
cmp
cmp
add
mov
inc
enter
adc
xchg
mov
add
mov
cmp
out
jge
inc
clc
test
push
mov
jl
inc
int
sbb
jmp
cltd
push
ds
ret
sti
cli
jbe
in
pop
xor
mov
fldenv
adc
loopne
adcb
mov
pop
mov
jns
push
mov
shlb
add
divl
push
test
pop
cmpb
fwait
jns
inc
mov
mov
repnz
out
xchg
sub
in
jecxz
call
repnz
xor
jp
add
push
ja
add
popf
insb
lods
in
gs
push
repnz
xchg
add
adc
add
ljmp
push
add
and
fadds
mov
pop
shrl
pop
xor
pop
hlt
push
jnp
inc
sbb
fs
xchg
pop
out
enter
jb
pusha
int
xchg
jp
push
stc
mov
push
insb
push
add
jno
inc
js
push
jno
add
leave
adc
and
dec
push
orl
js
gs
sub
pop
std
lds
arpl
dec
xor
cmc
and
jecxz,pn
shll
or
lds
pushf
jmp
fmull
xchg
add
stos
dec
pop
pushf
cwtl
aam
clc
sbb
xor
xor
rorb
inc
mov
outsl
cli
or
push
add
push
lds
jp
je
pop
sub
scas
push
pop
movsl
pusha
and
add
fisubs
fsubs
int
lcall
add
xchg
sbb
add
rcl
mov
jge
add
out
movsb
aas
jg
testb
lret
pop
pmullw
mov
mov
rorb
bswap
sbbb
push
mov
add
pop
add
mov
or
jo
mov
xor
gs
fwait
add
pop
pop
addr16
mov
jecxz
ret
or
and
and
repz
cwtl
arpl
add
imul
jle
inc
dec
mov
add
mov
add
xchg
inc
incb
or
inc
push
pushf
add
mov
test
dec
pop
mov
mov
jmp
xor
jb
test
add
in
mov
push
jne
filds
inc
jmp
pop
sbb
jns
inc
lock
lcall
xor
cld
testl
leave
imul
mov
repz
andb
push
scas
into
shll
push
and
das
pusha
adc
cmp
add
jbe
mov
int
rorb
push
add
jge
xor
pop
lea
pop
inc
mov
pushf
jecxz
jno
adc
fnsave
add
push
sbb
cmp
aad
xchg
call
out
loope
sub
andb
loop
es
test
mov
aaa
ds
nop
add
aas
lock
jecxz
mov
xor
add
jae
into
add
cmpsl
lcall
adc
add
add
mov
aas
pop
movsl
xor
out
lcall
aad
decl
pop
sub
mov
testl
pop
push
addr16
lds
adc
mov
mov
int3
add
jae
inc
adc
ss
mov
negb
push
add
pop
cmp
push
and
rcrb
cwtl
sbb
xor
pop
bswap
xchg
stos
pop
adcb
or
pusha
test
add
or
pop
inc
add
js
ss
movsb
aas
ret
add
pusha
cli
sub
cmp
dec
adc
sbb
push
ja
jb
add
je
add
cmpsb
add
sub
push
subl
testb
and
les
jp
js
out
jp
push
add
inc
fmuls
leave
cwtl
sub
je
xor
or
mov
push
add
scas
xchg
lret
fcoml
cmpsb
mov
mov
je
xlat
push
aad
and
push
sbb
or
iret
cmp
push
popa
in
movsb
imul
dec
add
push
ret
aam
movsb
js
loop
mov
add
sub
aaa
fldcw
in
notl
hlt
fsubrl
add
sub
xor
out
fcomip
lods
test
fs
push
pop
and
dec
shlb
mov
push
repz
ja
sbb
sbbb
imul
shlb
test
and
mov
and
pop
cltd
add
mov
jl
or
inc
sti
sub
ljmp
push
jle
shll
add
lcall
mov
push
xchg
sub
inc
jns
adc
pop
add
fbld
and
and
inc
sbb
clc
push
cmp
nop
aam
push
or
mov
adc
repz
addb
into
and
add
inc
mov
push
arpl
push
sub
jb
aas
stos
das
xor
insb
in
movsb
vmwrite
jg
add
sbb
into
adc
jbe
mov
xchg
fidivs
cwtl
pop
xchg
test
and
or
or
orb
and
or
rorb
data16
add
fidivrs
mov
mov
sahf
ljmp
add
add
push
add
test
xchg
cmp
roll
int3
lock
cs
clc
xchg
and
sub
test
popf
dec
and
mov
jnp
ds
leave
xchg
mov
xor
test
inc
pop
mov
cmp
test
add
xrelease
popa
or
push
int
jnp
leave
mov
dec
js
jno
fisubs
jnp
adc
arpl
jge
jmp
push
and
ss
mov
jl
lcall
and
cwtl
cld
sub
adc
mov
ficoml
dec
mov
inc
mov
scas
sahf
int3
sbb
mov
lds
popa
nop
push
dec
pop
and
lea
and
jno
cld
das
push
lds
cmp
adc
sub
cmp
enter
in
pop
jne
ja
and
lods
loope
movsl
dec
in
add
stos
or
inc
add
mov
jp
cmp
in
add
out
push
inc
sarb
cwtl
mov
xchg
xchg
push
je
inc
add
mov
pop
add
in
mov
into
cmp
cs
sbb
test
sbb
or
push
jle
popa
clc
leave
or
sbb
stos
dec
stos
inc
cmp
ret
nop
in
xor
nop
mov
mov
fiaddl
mov
and
sbbl
mov
and
add
pushf
push
xor
pop
mov
add
popa
jb
insb
rcl
loop
addr16
pusha
cmp
scas
xchg
push
mov
lock
pusha
lods
push
test
push
xorb
addr16
test
fbld
out
and
int3
ja
sarb
lock
sbb
popf
add
mov
les
mov
push
and
outsb
loop
push
cmpsb
lock
and
push
mul
add
xor
sbb
add
mov
add
cmc
nop
push
lahf
push
mov
dec
mov
fldl
inc
push
call
movsl
add
jl
popa
mov
out
stos
jle
fnsetpm(287
ds
add
cli
mov
fadds
mov
repz
cmp
fnstenv
mov
push
test
cmp
jno
jnp
pop
cmp
cmp
ds
sbbl
loopne
sub
add
cmp
xor
dec
inc
xor
pop
iret
push
pop
dec
test
xchg
cmp
add
sbb
and
sar
andl
lret
gs
cmp
rclb
sub
daa
repz
cwtl
rcll
push
add
mov
sbb
shrl
jge
nop
fisttpl
movsb
pop
jae
arpl
in
hlt
sub
aaa
mov
xor
scas
cmp
mov
cli
arpl
jg
repnz
loope
pop
js
cmpsb
popa
xchg
and
jb
popf
sbb
mov
push
add
sbbl
mov
shll
mov
imul
div
pop
jg
ds
pop
rorb
inc
js
push
inc
stos
rcrb
adc
adc
addb
and
cmc
push
ds
xor
lods
pop
test
int
add
adc
push
icebp
add
es
lahf
cwtl
test
test
cmp
jbe
in
out
add
mov
mov
rcrb
xchg
sahf
and
inc
add
pop
adc
int3
xor
jmp
sub
jae
repnz
fsubrs
cmp
imul
add
mov
scas
dec
add
dec
adc
stos
add
push
stos
inc
mov
repnz
aam
mov
aaa
ret
adc
jo
mov
jns
add
ret
pusha
xor
leave
push
es
add
icebp
in
mov
pop
xchg
lods
in
popf
jo
sbb
adc
add
mov
repz
sar
js
repnz
aam
outsb
pop
mov
popf
add
mov
sahf
adc
fists
add
and
jbe
into
sub
or
add
add
add
daa
xchg
mov
mov
sbb
mov
fbld
ret
pop
setg
negl
out
xchg
add
mov
mov
add
push
aad
fdivs
gs
or
xchg
or
push
arpl
xchg
and
and
daa
inc
jg
add
jl
out
pop
push
in
cmp
add
out
int
pop
sub
mov
aas
loopne
mov
pop
shll
mov
test
mov
pusha
pop
jnp
cmp
add
add
adc
inc
pop
aas
aaa
pop
addr16
ds
lcall
push
cmpxchg
mov
fucomp
ffreep
or
fld
test
xlat
sbb
mov
clc
mov
lods
jo
cmp
hlt
sub
add
dec
testb
jle
add
outsb
movl
adc
cmp
dec
push
mov
faddl
jnp
add
mov
and
jno
ss
pusha
rclb
stos
in
and
add
sti
pop
arpl
pop
iret
add
xor
fstpl
shll
subl
test
lock
xor
add
sub
dec
addr16
add
cs
push
lock
adc
dec
add
mov
fildl
push
aaa
in
gs
jbe
in
movsl
mov
mov
ljmp
filds
or
mov
add
imul
add
add
push
cmp
adc
fidivs
cmp
xchg
call
call
aas
push
add
push
lret
xor
fsubrl
cmp
adc
divl
mov
cmp
or
loope
fcoml
add
mov
add
data16
dec
or
dec
jmp
sbb
jns
inc
sbb
out
pop
inc
dec
lods
loopne
popf
lret
xor
inc
sbb
clc
jae
scas
das
int3
flds
pusha
add
addr16
xchg
test
fsubr
xor
test
aaa
jb
add
pop
push
rolb
jno
mov
aaa
aas
fimull
or
mov
lret
in
jl
js
pusha
pop
mov
pop
lahf
nop
scas
addr16
xchg
mov
iret
cmp
xor
dec
mov
push
add
test
lock
imul
insl
add
adc
mov
mov
xor
push
inc
stos
sbb
jmp
jno
outsl
pushf
cmp
push
jb
into
fs
mov
fwait
mov
addr16
lods
pushfw
cwtl
and
jae
push
jmp
mov
add
cmp
mov
add
adc
ret
xor
jnp
cld
popf
cmp
pop
iret
add
es
mov
sbb
loopne
inc
and
add
lahf
adc
xor
add
pop
repnz
mov
adc
dec
daa
arpl
and
call
nop
movsb
ret
sbb
loope
push
out
mov
mov
mov
pop
or
iret
int3
pop
mov
orl
cmc
sbbb
add
cld
add
in
add
add
dec
sub
das
pop
aam
cmp
in
or
lods
pop
je
mov
fmuls
scas
ret
lock
pushf
mulb
add
adc
and
inc
add
inc
mov
add
out
fstps
pop
sbb
pop
add
pop
lea
popa
dec
add
lahf
mov
or
mov
and
cld
pop
fistpll
push
inc
icebp
push
mov
outsb
adc
lahf
int3
in
pop
or
xchg
inc
and
lcall
mov
add
push
in
stc
fcmovbe
or
or
ds
cmp
mov
rcl
movsb
xor
xchg
cmc
call
adc
pushf
add
fists
jge
or
pop
stc
mov
cmc
inc
popa
jl
loop
add
fmuls
jno,pt
movups
shl
push
fwait
shl
sbb
test
jo
dec
cmp
out
js
add
push
lods
inc
and
mov
push
xchg
mov
xor
iret
add
xchg
mov
xchg
add
shlb
cs
aam
add
out
movsb
push
mov
mov
inc
popf
xor
jb
adc
mov
out
or
mov
out
mov
inc
pusha
aaa
mov
cwtl
add
inc
mov
xchg
add
pop
mov
roll
fcomi
push
sarb
daa
call
cmpsb
scas
test
push
in
jg
idivb
dec
lock
cmpsl
sub
loopne
nop
add
test
add
faddp
movsl
stc
das
call
lea
cwtl
lock
mov
add
push
push
add
and
add
pusha
and
push
xchg
popa
add
sbb
pushf
js
movsb
and
jle
add
and
pop
or
xchg
movsbl
mov
xor
xchg
ret
add
aaa
push
paddq
adcb
out
iret
mov
add
xchg
lea
clc
jecxz
hlt
jp
add
not
pushf
cmp
adc
mov
inc
add
xchg
fucomi
movsb
add
out
into
out
cmp
sub
idivb
scas
add
rclb
loop
out
cmc
sbb
sbb
inc
jno
es
movsb
loopne
xchg
jbe
dec
dec
in
or
addl
inc
push
icebp
es
shlb
ret
push
sub
xor
push
sbb
jp
enter
mov
xchg
cwtl
sbb
cmp
cmpl
arpl
add
gs
lock
add
cmpsl
pusha
sahf
push
stc
sbb
xor
add
sbb
cmc
mov
pop
rolb
loop
xor
scas
sub
mov
cmc
jae
aad
jg
loopne
xchg
sbb
je
jge
add
aad
add
stc
sub
adcb
mov
add
jnp
dec
loopne
pop
call
sub
jmp
mov
add
xchg
sub
ret
insl
push
fstl
dec
add
cwtl
xchg
and
lret
popf
pop
pop
std
and
divl
out
mov
xor
xor
sub
popa
or
sbb
adc
fcoms
daa
and
pop
mov
cmp
or
pusha
int3
mov
iret
mov
push
pop
add
ds
lret
andb
es
adcl
out
push
xor
add
mov
loopne
dec
adc
ss
das
mov
test
js
rorl
jg
fisubl
mov
icebp
adc
mov
inc
test
fldcw
mov
pop
out
inc
jecxz
fiaddl
js
add
loop
insl
cmc
imul
jbe
js
je
add
mov
into
lock
pop
imul
add
sti
xchg
and
aad
mov
and
into
in
adc
scas
dec
xchg
hlt
pop
rclb
sub
in
add
pop
loop
insl
adc
push
cwtl
outsl
mov
lcall
insl
lock
sbb
add
inc
pop
cmpl
loopne
sbb
pop
cmp
mov
jo
add
ljmp
lock
popl
cmc
xchg
lahf
xchg
cmpsb
push
daa
pusha
cmpl
or
test
pop
xor
pop
jp
je
or
pop
test
add
mov
addr16
pop
loopne
jg
mov
dec
push
xor
add
xchg
xchg
js
sbb
pusha
std
stc
cmpl
dec
pop
jne
push
adc
repz
ljmp
bound
jle
push
fwait
mov
data16
push
xchg
pop
add
push
in
fiadds
iret
mov
add
add
out
dec
dec
mov
popa
call
adc
es
clc
add
xchg
cltd
inc
pop
xchg
dec
jno
lds
sub
and
and
mov
pop
sub
scas
mov
into
enter
lds
jne
lods
popa
jo
lret
imul
cmpsl
shr
setnp
jg
dec
jl
stos
pop
sbb
jnp
dec
push
pop
mov
add
out
cmp
add
sti
arpl
ficoms
scas
imul
in
cld
ja
cmp
add
add
in
inc
adc
sbb
add
lret
and
movsb
add
mov
push
enter
lret
or
mov
push
stc
inc
xor
add
xor
xor
add
fistpll
es
fcompl
cli
add
scas
push
aas
adc
sub
in
add
dec
jmp
add
cwtl
pop
push
shll
add
pop
aaa
xchg
pop
and
add
aas
nop
lahf
shr
xchg
jge
ds
xorb
flds
jp
dec
push
fsubrl
addb
mov
movsb
xor
xchg
loope
add
jecxz
mov
je
repz
xor
aas
daa
cmp
push
insl
popa
in
cmp
dec
jo
ja
leave
inc
inc
sahf
pmaxsw
rclb
push
repnz
xor
cmp
mov
sub
dec
mov
pop
adc
push
ss
xchg
mov
adc
xchg
out
push
cmpsl
pop
lods
mov
jno
add
ret
int
sub
inc
addl
int3
sahf
push
inc
dec
pop
test
mov
jb
mov
push
sbb
lahf
cmp
add
aaa
ficompl
pop
pushf
faddl
mov
insb
inc
verr
subl
call
mov
or
ja
movsb
ds
into
add
jo
cmp
repnz
pop
aad
sub
sub
roll
lea
xchg
bound
out
add
mov
jecxz
sbb
jmp
add
push
mov
pop
lcall
pushf
mov
pop
and
sbb
lcall
rolb
lahf
push
aas
add
pop
faddl
jnp
add
int
xor
push
add
lret
cltd
dec
addb
mov
imulb
daa
push
push
jno
movsl
mov
loop
outsl
add
or
cmc
aaa
imul
dec
sbb
sbb
add
test
cmp
xor
ds
loopne
cs
add
sub
popa
add
adc
data16
sbb
hlt
mov
lret
stos
lock
jmp
arpl
mov
into
inc
or
pop
mov
js
scas
rolb
mov
add
add
jmp
hlt
rcrb
int
lea
popw
xchg
adc
leave
mov
aaa
pop
pop
jno
mov
gs
shrb
and
and
jle
sub
add
sbb
xor
xchg
xor
enter
push
insb
lea
sub
mov
mov
pop
pop
in
ljmp
stos
add
cwtl
lahf
fnsave
mulb
push
rol
test
jl
inc
xor
mov
push
fcomps
sti
xor
jnp
add
in
ds
or
add
push
sub
fwait
clc
cmpsb
nop
out
cmp
rcll
add
sub
pop
adc
and
sub
in
xlat
or
lock
gs
fldt
iret
mov
stc
xchg
add
aad
loope
xacquire
pop
cmp
cmpl
shl
mov
bound
loopne
cltd
mov
out
das
xchg
es
dec
inc
adc
testl
sub
insl
and
fisubrl
ret
push
shl
pop
popa
add
adc
stos
sbb
pop
popf
sbb
xor
fstpt
in
lds
push
cmp
fisttps
xchg
jbe
fcomps
and
pop
mov
aad
test
pop
xchg
inc
inc
mul
inc
sbbb
out
in
sbb
jnp
loope
mov
ljmp
movsb
in
jae
jmp
cmp
jbe
dec
loop
insl
inc
lcall
pop
aas
lock
repz
mov
jne
add
cmc
jns
push
orl
add
add
in
decb
xchg
jbe
add
mov
popa
into
mov
push
add
jg
cld
dec
cmp
mov
and
movups
pop
sub
scas
ret
outsb
add
xor
fxam
cld
xor
mov
lock
loop
add
xor
cwtl
pop
push
sbb
iret
sbb
sarb
cmp
xorb
fstpl
addl
add
or
in
mov
xchg
jo
pop
add
insb
cmpsl
and
cmpsb
lds
in
push
mov
xor
ret
add
or
rorl
ss
inc
mov
or
loope
cmp
add
jo
jbe
xor
dec
popf
clts
mov
adc
or
pop
inc
mov
shl
xchg
cwtl
jge
add
jns
xchg
lret
jge
add
pop
sub
outsl
xor
roll
mov
stos
in
lods
add
mov
and
out
jbe
scas
ljmp
push
lret
out
mov
clc
jg
add
push
xorb
cld
cs
pop
sbb
out
in
cmp
lcall
adc
add
or
inc
sub
out
mov
loop
fwait
cmp
push
sub
mov
jae
xchg
fwait
jae
add
das
jp
or
inc
add
inc
cld
and
imulb
inc
jle
inc
ja
dec
out
mov
and
xchg
and
pop
rolb
in
out
inc
in
call
roll
cmp
push
orl
loopne
mov
cs
ja
ss
pushf
test
dec
adc
std
add
loop
cmp
test
jno
out
or
out
mov
add
mov
add
popa
aaa
stc
lahf
adc
push
sbb
add
lret
pop
sahf
leave
test
fwait
adc
iret
fcoml
push
jmp
mov
mov
sbb
daa
test
add
sub
jnp
stc
in
mov
dec
pop
int3
lds
lods
gs
popf
test
ljmp
pop
xlat
ret
hlt
int
push
outsl
cmp
sahf
xor
xchg
out
lcall
cli
hlt
add
dec
arpl
cmp
or
shrb
addr16
aas
xchg
out
sub
xchg
incb
mov
mov
subb
adc
and
aam
or
mov
add
cmpsl
sub
scas
cmp
mov
cmp
xchg
xor
in
mov
add
push
lea
cmpsb
lock
or
dec
xor
jmp
or
or
out
jno
mov
mov
mov
cmpsl
add
cli
addr16
test
xchg
sub
das
std
inc
js
and
cmp
jo
outsb
aam
jne
sbb
lods
mov
mov
cmp
and
add
cmpsl
inc
push
mov
xchg
xchg
sarl
or
iret
pop
cld
add
xabort
lret
lods
add
adc
add
pop
sbb
popf
pop
mov
sub
lods
xor
sub
fdivrl
or
mov
cmc
pop
mov
insl
mov
lods
movsb
lds
mov
add
add
xchg
add
jp
faddl
scas
mov
adc
mov
cmp
pop
jmp
mov
push
into
dec
push
push
inc
or
mov
les
es
ret
push
cmp
mov
and
jge
test
pusha
jnp
idivb
sbb
insb
pop
mov
rcrb
lods
addr16
mov
xlat
fcoml
in
js
call
out
jbe
int3
mov
sub
push
subl
xor
cmpsl
xchg
add
and
add
cs
mov
mov
pop
out
fiaddl
cli
imull
fcompl
jl
add
sub
pop
add
scas
adc
pop
clc
add
pop
add
mov
int3
sbb
jno
call
jl
ja
adc
adc
lahf
pop
ds
add
or
add
lds
dec
in
roll
or
popa
test
mov
std
fdivs
lods
addl
mov
pop
mov
shll
jo
sahf
pop
es
leave
or
fsubrs
push
fistpl
push
mov
fldl
mov
cmp
ret
int3
cld
leave
xchg
xchg
loopne
add
mov
mov
pop
dec
dec
pop
or
fdivrs
lds
ljmp
xchg
cli
jecxz
cltd
sub
dec
lahf
xlat
int
or
out
jnp
incb
push
add
cmp
stos
xchg
iret
inc
add
jg
les
jmp
out
pop
or
stc
pusha
jge
mov
cmp
add
jno
xor
add
aad
lock
in
bound
call
push
xor
sbb
pop
mov
dec
add
pusha
sahf
fcmovbe
jge
lock
cwtl
stos
xor
sbb
popf
add
pop
mov
fdiv
js
mov
stos
push
sub
inc
cmp
push
add
outsb
push
fiaddl
jecxz
dec
ds
pop
ret
add
add
or
andb
fsubrs
inc
sbb
adc
ds
cmp
or
xchg
jp
imul
shll
into
push
fidivs
lcall
mov
cmp
dec
int3
or
sbb
in
adc
adc
pop
add
cmp
cmc
cmp
andb
rcl
sub
incl
sub
ret
ja
inc
push
push
sub
cmp
xchg
add
mov
push
mov
dec
sub
mov
mov
cmp
ret
arpl
push
push
dec
or
mov
add
ret
xor
outsl
nop
sub
addb
and
fsubs
adc
stos
adc
stc
das
add
idivl
sbb
pop
enter
push
imul
andl
pop
icebp
mov
sbb
mov
push
ja
xchg
test
call
pop
add
push
push
jo
aas
inc
test
repz
dec
cmp
ficoms
lock
push
addr16
mov
mov
jae
add
mov
add
mov
xchg
ds
aaa
cmc
stos
lock
inc
je
dec
pop
repz
ja
les
cli
sub
lds
cmp
lock
js
cmp
in
push
aam
mov
enter
out
or
xchg
add
push
jg
lahf
in
lret
mov
add
mov
mov
leave
push
cwtl
xchg
je
push
shrb
sbbl
int3
and
repz
shl
loopne
fdivrl
add
pop
dec
dec
inc
ret
std
rorl
inc
loopne
xor
out
pop
cmp
cmpsl
sub
adc
clc
jle
push
jl
fldl
aas
adc
push
or
aam
or
cmp
sbb
add
int3
pop
jcxz
sbb
add
push
push
sub
adc
test
loop
inc
add
adc
ret
xor
jl
xchg
lock
hlt
adc
sub
sbb
mov
add
pop
add
lret
jge
cli
xchg
sbb
add
mov
or
outsl
add
inc
add
xor
cmp
dec
sbbb
lock
addr16
jnp
mov
test
fdivrl
enter
mov
movsl
push
cwtl
fdiv
add
je
add
add
jmp
add
adc
and
mov
jns
inc
arpl
mov
push
ret
add
movsb
cmp
aas
and
test
sub
add
xchg
in
out
stos
sahf
inc
xor
add
aas
sbb
add
mov
sub
add
dec
loopne
xchg
mov
mov
or
outsl
jl
in
or
sub
daa
jnp
pushf
xorl
out
int3
scas
movsb
ljmp
int
or
inc
insb
call
xchg
test
inc
movb
jnp
and
mov
jp
add
nop
cmc
jecxz
add
pop
jno
orb
sub
add
test
das
dec
add
ja
push
or
xchg
repz
orb
shrb
mov
mov
shll
dec
test
and
das
jecxz
push
sbb
lahf
inc
in
out
add
push
push
pop
pusha
sbb
jge
xchg
stc
cli
pop
jae
cmp
out
test
dec
add
mov
sub
rcll
push
std
orb
pop
mov
nop
fsubr
ljmp
pop
add
push
aam
sub
enter
imull
and
pop
andl
jnp
fxch
mov
adcb
xor
cmc
or
int
inc
jne
and
fildl
pop
dec
jb
inc
add
in
dec
mov
mov
mov
roll
or
aad
loope
pop
cmp
sbb
cs
mov
sbb
aad
push
jmp
lcall
mov
add
lods
push
push
add
mov
xchg
dec
jo
cmp
lods
jp
or
scas
sti
fnstcw
mov
jle
adc
and
push
cmpsb
sbb
scas
iret
add
inc
mov
xlat
fnstenv
or
bound
in
cmpsl
inc
lret
add
shrl
xchg
lret
mov
push
mov
lcall
and
in
loop
jns
add
push
sub
loope
mov
pushf
loopne
pusha
push
out
dec
sbb
mov
rorl
mov
shll
test
loopne
xchg
in
pusha
sahf
addl
dec
ror
sub
cmc
andb
mov
shl
ds
aam
lock
push
push
scas
add
repz
mov
add
or
or
dec
fadds
lahf
sbb
adc
movsb
adcb
add
sub
paddusw
lods
push
push
int3
and
pop
fcomip
sti
lahf
cmp
or
bound
add
add
add
aad
sarb
insl
into
test
dec
mov
inc
add
cmp
cltd
je
pop
aas
cli
push
jl
ja
addb
and
mov
xor
fisubl
mov
hlt
mov
arpl
lock
push
lods
add
addr16
add
mov
sub
and
cwtl
pop
add
cmp
pop
pop
mov
push
clc
and
mov
js
pushf
lock
aad
rolb
pop
iret
cmp
dec
inc
inc
add
std
add
fdivrl
sbbb
mov
arpl
scas
adc
dec
aaa
ja
mov
jg
inc
add
adc
icebp
or
pusha
fildll
shlb
add
xor
jbe
xchg
in
in
xor
stos
loope
scas
mov
mov
push
push
add
in
imul
xor
clc
std
add
lds
add
dec
jo
add
repnz
jnp
push
scas
pop
add
insb
push
adcl
aas
inc
loopne
in
add
jge
xlat
es
or
dec
test
add
mov
mov
fildl
xchg
lcall
outsb
mov
ss
mov
xor
lock
mov
jp
sbb
xchg
mov
push
cmp
imul
test
fiadds
sarb
nop
sub
fisubrl
sub
dec
ret
pop
das
add
lock
add
inc
orl
push
iret
lret
cmc
dec
les
daa
add
jo
xchg
call
adc
sbb
or
sbb
enter
xchg
mov
jg
add
daa
xchg
divl
push
or
sti
ds
pop
add
fwait
hlt
and
clc
add
in
int3
mov
pop
sub
jno
ss
mov
dec
mov
popa
arpl
mov
fdivp
pop
xor
pusha
add
out
xchg
push
add
mov
inc
fdivrl
add
daa
add
aaa
add
cmp
lahf
lock
es
movsl
add
pop
andb
lds
clc
inc
xchg
sbb
inc
cli
push
jae
adc
and
adc
lret
shlb
cmp
jp
cmp
fucomp
rorl
fwait
or
mov
test
add
add
outsb
mov
cmpb
push
je
sub
test
mov
add
or
add
movaps
add
fidivrs
mov
aaa
pusha
dec
nop
sub
pushf
mov
sbb
jle
xlat
add
adc
out
dec
sbb
pop
sbb
mov
dec
cltd
test
pop
pop
loopne
inc
mov
add
add
mov
lcall
std
pop
cltd
mov
add
cld
xchg
jge
mov
repz
enter
lods
mov
or
cmp
xchg
mov
leave
xor
in
push
jge
fwait
lock
fdivr
test
pop
pop
adc
mov
cmp
or
int3
aaa
mov
xchg
add
push
mov
push
inc
fnstcw
add
cmp
addl
or
xchg
pop
pop
dec
add
mov
dec
out
aad
pusha
addr16
add
mov
xchg
mov
sbb
stc
mov
movsb
mov
insl
int
outsl
test
ret
push
addl
dec
pop
outsl
mov
test
xor
add
mov
push
cmp
xor
add
jle
mov
or
gs
add
shlb
jg,pt
mulb
push
ror
cs
lret
les
mov
mov
adc
in
cmc
hlt
outsl
sbb
jae
loope
js
lret
xor
push
lcall
aam
jp
addl
mov
out
xchg
mov
xor
add
fidivrs
or
add
jmp
sbb
jno
add
or
dec
loop
inc
subb
adc
or
pop
inc
xor
pop
sbb
mov
pop
dec
shll
cmp
leave
loopne
and
add
dec
aam
into
negl
xchg
cs
ds
add
out
mov
std
add
push
jmp
cmp
push
iret
add
cmp
fsubrs
and
add
pop
in
fists
aam
adc
add
adc
outsl
cmp
adc
stos
or
cmp
sub
loope
push
daa
add
add
cld
sbb
pushf
jmp
inc
xor
aam
adc
daa
fstps
inc
out
mov
fdivrs
js
cmp
add
lret
add
mov
daa
scas
imul
addb
sbb
xchg
cmp
jge
add
popf
lea
rclb
jecxz
add
mov
arpl
loopne
movsl
sub
jo
mov
orb
daa
push
jp
mov
jns
lock
push
or
push
push
pop
popfw
daa
pusha
sbb
and
addr16
or
push
add
jns
dec
loop
jl
add
add
jnp
add
and
and
xor
movntps
add
btr
jl
add
and
cmp
pop
gs
fldl
clc
icebp
sub
imul
jno
in
fsubl
pushf
sahf
pop
ds
cld
inc
push
add
fistpl
xor
jp
ret
add
adc
add
pop
iret
xor
cmp
arpl
jbe
or
mov
lret
cmpb
add
cmpsl
outsl
or
xor
mov
dec
mov
pop
test
pop
loopne
add
fcoml
add
gs
sbb
aad
mov
dec
add
cmp
sbb
insl
stos
jle
lods
mov
lock
or
pop
addr16
orb
aas
fisttpll
ljmp
loope
popf
adcl
shlb
push
push
cld
jl
in
add
push
std
push
icebp
mov
rcll
negb
jg
push
add
aas
dec
and
iret
inc
pop
outsb
es
dec
stc
pop
in
add
jmp
adc
dec
dec
repnz
mov
lock
push
repz
shlb
add
jnp
cmp
pop
test
add
mov
fucomi
push
movsl
ret
mov
add
cs
push
mov
or
test
fildl
pop
cmp
daa
add
lret
rclb
add
out
pop
xor
pop
loop
mov
mov
and
mov
sbb
sbb
cmpsl
mov
lret
add
xor
int
fcomps
add
je
inc
mov
pop
push
and
dec
outsb
add
jle
xchg
and
mov
mov
iret
adc
out
inc
fisubl
mov
sub
ret
sbb
cmpsl
cltd
cmp
add
jmp
ja
push
adc
add
pop
push
mov
inc
pop
clc
add
sub
xor
addr16
adcb
or
add
jae
aaa
cmp
testl
add
and
add
cmpsb
sub
sub
js
ficoml
pop
xor
pop
sahf
add
mov
add
push
mov
jae
xchg
add
xchg
add
mov
stos
daa
add
outsb
or
add
hlt
pop
pop
shrl
or
repnz
and
jb
mov
popa
xor
cmp
clc
imulb
dec
sub
pushf
sub
shlb
inc
mov
std
les
add
mov
inc
popa
arpl
adc
adc
jl
jle
or
ja
test
push
cmpsl
sub
loopne
xchg
sub
psubq
push
push
loopne
dec
movsb
push
in
sbb
call
ficoml
inc
add
sub
test
add
das
mov
clc
jle
rcrb
roll
inc
pop
mov
pusha
cli
fwait
add
call
jo
shlb
call
push
popa
pop
jno
nop
aaa
add
mov
adc
cmp
cltd
clc
fildl
jp
mov
add
imul
insl
mov
push
pop
divl
push
outsb
adc
int
jns
and
call
xchg
insl
dec
add
movsb
jb
cmp
xchg
dec
inc
hlt
jns
add
and
ss
inc
add
add
aad
and
mov
daa
inc
add
popa
or
push
adc
dec
movsb
add
mov
int3
add
mov
jecxz
add
dec
ljmp
cmp
int
mov
out
push
lods
lods
cmc
adc
mov
xor
scas
lock
lcall
or
mov
repz
pop
jge
ret
loope
ret
mov
aam
fldl
and
pop
sub
xchg
push
mov
js
loopne
adc
sbbl
inc
lea
sbb
lret
and
add
das
pop
jmp
lock
mov
int
hlt
mov
dec
xor
cmp
and
pop
and
inc
pop
lret
cmpsb
loopne
add
mov
or
push
and
cmp
cld
xlat
add
dec
push
das
int3
sahf
ret
push
adc
inc
xor
mov
fadds
jmp
push
xor
add
mov
out
mov
lret
lcall
das
xor
test
sbb
sub
iret
mov
in
pop
enter
push
mov
add
enter
test
in
lret
push
inc
mov
adc
dec
call
jl
add
sub
in
push
push
daa
add
repz
push
xchg
mov
xor
add
es
xor
fsts
push
pop
sub
mov
cmp
inc
and
and
es
fisttpl
lock
adc
pop
add
add
sbb
adc
mov
add
jae
xchg
roll
pop
popa
pusha
or
data16
mov
orl
push
inc
pop
stos
daa
pushf
pop
lods
repnz
add
jp
std
and
paddusw
inc
rcrb
inc
test
loop
andb
inc
aad
ficompl
sahf
aam
nop
jo
mov
inc
mov
rorb
add
sti
xchg
sbb
popf
movsl
xchg
cmpsl
inc
pop
and
and
add
loop
lcall
xchg
aaa
andb
adc
inc
add
pop
in
lsl
scas
jp
add
mov
sbb
jne
fwait
das
orb
iret
shrb
addl
fcoms
add
std
adc
iret
mov
mov
call
add
fdivrl
pop
test
adc
jbe
adcl
loope
add
bnd
mov
pop
pop
xchg
pop
repz
arpl
xchg
fldcw
mov
sub
pop
mov
fisubrl
inc
mov
add
les
push
das
jnp
clc
pop
add
adcb
ds
add
pop
cmpsb
in
mov
ficomps
add
xchg
repnz
hlt
pop
jb
add
mov
movsb
jmp
jns
pusha
sub
mov
sbb
mov
sbb
cltd
cmpsb
test
cmc
stos
out
shrb
aad
add
jae
add
mov
nop
fisubrs
inc
add
add
pop
rclb
mov
sarb
repz
lret
roll
push
nop
add
or
ret
sub
cmpsl
nop
adc
iret
idivb
lea
mov
daa
add
xchg
pop
mov
test
xor
xor
push
jne
cmp
mov
inc
push
dec
adc
inc
jns
mov
sbb
inc
push
lods
add
sbb
lcall
sbb
fcomps
add
add
push
fwait
idiv
inc
pop
pop
arpl
andb
ds
cwtl
add
sbb
dec
test
add
ret
jne
or
gs
lods
jae
add
repz
lahf
cmp
sbb
add
rcrl
add
arpl
mov
add
pop
push
movsl
sub
out
mov
fstp
arpl
add
mov
sub
mov
cmp
push
add
adc
mov
inc
and
xlat
add
sbb
sub
dec
mov
mov
xchg
lahf
mov
dec
pop
add
fisubs
inc
xchg
out
stos
fldl
int3
pop
or
jae
popl
mov
push
add
xor
loope
ret
or
call
xchg
xchg
aam
add
cld
loopne
dec
pusha
popf
mov
pusha
pop
sub
pusha
mov
mov
dec
imul
mov
mov
ljmp
sbb
into
out
mov
enter
inc
insb
sti
push
pop
push
lods
dec
adc
cmp
stos
jp
aaa
mov
jo
nop
cmp
fisttps
outsl
rolb
lahf
add
cmp
fsub
jecxz
add
daa
lods
sbb
cmpsb
leave
lds
sub
mov
add
inc
add
sbb
shlb
pop
mov
cmp
push
icebp
jnp
adc
sbb
shll
xor
sti
or
arpl
sub
sub
add
mov
adc
adc
ds
add
enter
call
push
mov
mov
test
sub
cmpb
xor
or
inc
add
bnd
jae
add
pusha
and
outsl
add
push
je
add
mov
inc
push
mov
lret
pcmpeqd
add
mov
pop
or
push
pop
insb
or
push
xchg
push
add
jne
or
fistl
or
aad
xchg
dec
and
aam
push
add
sub
idivl
les
pop
jp
repnz
jae
push
inc
adc
mov
mov
lods
int
sbb
mov
out
jg
mov
jno
hlt
inc
sub
add
jp
pop
stos
mov
dec
pop
insl
sbb
outsl
orb
push
cmp
imul
cmp
xor
inc
or
shlb
xor
loopne
adc
add
popf
dec
xor
jo
clc
call
imul
js
lret
clc
repz
shrl
and
jno
jecxz
loope
adc
cmc
inc
push
mov
loopne
adcl
imul
sti
fsub
push
clc
pop
jecxz
xor
add
or
test
add
scas
mov
sub
pop
lretw
push
inc
cld
icebp
add
ljmp
add
orb
addr16
jo
cmp
push
andb
pop
lds
jae
xor
popf
push
sbb
inc
scas
inc
jno
pop
lret
imul
nop
add
jmp
or
ficoml
cmpsb
ljmp
sbb
popl
aam
add
mov
jo
cs
in
dec
imul
notl
add
lahf
pop
xchg
push
pushf
out
fldl
jmp
cmp
xchg
test
xlat
adc
mov
in
pop
sti
or
test
add
stc
unpcklps
mov
xchg
mov
xor
cmp
sub
add
xchg
pop
and
xorl
dec
pop
cmc
mov
cmp
popa
push
xor
rorl
pop
jno
daa
ja
jnp
decl
add
out
out
stc
loope
mov
cld
cmp
mov
jno
int3
lock
sbb
fnsave
or
out
into
add
inc
pusha
add
insl
sbb
add
jbe
xorl
fmuls
mov
fstpl
stos
lret
pop
jnp
leave
xlat
into
loopne
arpl
jg
addl
sub
cli
test
gs
lock
insl
stc
add
bound
inc
dec
inc
mov
jge
fldt
orb
push
icebp
fwait
lret
psubsw
jnp
jg
pop
stc
popf
pop
pop
add
mov
in
mov
dec
add
arpl
xor
inc
addb
enter
and
xchg
push
cltd
sbb
and
mov
loopne
test
popl
adc
add
sub
jmp
dec
mov
cmpb
fwait
add
daa
aaa
movsb
test
cmp
push
xchg
mov
fiadds
addl
clc
rcrl
add
push
dec
es
xchg
sbb
nop
fs
xchg
xor
xor
push
add
jge
add
call
or
xchg
les
lret
add
pop
sbb
dec
rorb
and
ret
and
add
jns
andl
dec
mov
sti
jb
lock
cwtl
movsb
add
lods
pop
add
add
adc
out
add
mov
adc
add
cmp
mov
sub
cmp
pop
and
dec
test
ja
cld
fsubrl
xchg
xor
cmp
cmpsl
pop
ret
aas
mov
fwait
push
dec
push
in
or
adcl
or
rolb
icebp
rolb
addb
xor
add
cs
out
jno
daa
enter
out
pusha
mov
adc
mov
and
add
inc
inc
jp
and
iretw
xchg
dec
inc
insl
rorl
pop
testb
loope
popa
adc
fldl
lret
test
push
add
divb
add
fsubl
inc
cwtl
icebp
add
lds
fimull
lock
push
imul
dec
add
jl
or
and
pop
pusha
inc
dec
mov
nop
sarb
aas
addb
mov
rorl
push
scas
and
mov
fs
inc
sbb
xorl
je
xchg
ret
shll
push
mov
xchg
xchg
push
cmp
mov
leave
aad
mov
mov
in
xor
or
shl
xchg
push
mov
sti
pop
ja
loopne
testl
out
sub
cmp
mov
add
mov
lock
add
add
in
ret
cmpsl
jp
add
std
mov
and
ja
lahf
cli
rclb
add
idivb
cmpsl
cld
add
mov
push
adc
roll
or
inc
push
and
sbb
ss
pop
fs
push
imul
jae
cmp
push
jmp
push
adc
test
jecxz
xchg
js
jbe
popa
jne
fldenv
test
adc
adc
sbb
push
mov
cmp
mov
stos
xchg
jle
jnp
push
enter
add
mov
dec
cmp
push
jns
push
pop
lods
jae
add
jge
mov
push
inc
push
ljmp
pushf
cmc
jbe
pop
cmp
mov
cmc
sti
sub
and
and
mov
xchg
xchg
push
out
add
mov
dec
mov
fstp
xgetbv
mov
adc
add
lea
ficoml
test
add
fcompl
mov
add
ja
mov
adc
and
aad
add
je
dec
std
pushf
add
into
ret
fwait
add
out
push
sub
int3
sbb
jg
mull
iret
add
adcb
imul
push
out
xor
jle
or
adc
adcl
aas
pop
insb
scas
call
mov
bnd
mov
jnp
scas
out
sbb
sbb
mov
in
aam
sbb
xchg
xchg
insb
add
mov
cld
fildll
sub
sbb
xor
mov
in
inc
ficomps
and
adc
les
or
xchg
adc
mov
bound
xchg
sub
xor
out
out
push
or
mov
xchg
xchg
and
lods
inc
divb
ljmp
pop
popf
hlt
jl
xor
das
loopne
fsubs
mov
mov
test
shrb
call
clc
sbb
cmp
add
add
mov
ss
sbb
dec
add
scas
popf
jl
push
mov
jo
pop
xor
stos
icebp
and
nop
or
pop
std
repnz
dec
sbb
cmpsb
add
inc
orb
movsl
sar
xchg
jae
add
fidivrl
insb
jle
jmp
subb
je
int3
xchg
pop
cli
jl
and
cmpb
insl
xor
cmp
cmovl
aam
nop
cltd
push
fdivl
outsl
push
movsl
adc
mov
mov
add
xchg
add
sub
add
mov
fs
in
cmpsb
pop
add
stos
jg
pop
ds
jecxz
bound
sbb
sbb
xlat
std
loopne
push
sbb
rolb
mov
pop
inc
dec
jb
push
nop
popa
pop
pop
inc
adcb
or
stc
mov
mov
xchg
out
outsb
inc
dec
shlb
mov
add
jge
jle
out
js
mov
xor
or
xor
mov
sti
ja
out
lahf
pushf
mov
addl
sbb
and
push
xor
pushf
push
ror
hlt
xchg
out
pop
in
in
pop
daa
and
push
imul
int3
or
in
xor
inc
in
test
scas
xorb
jmp
dec
push
push
sub
pop
rcrb
adc
popa
xchg
aam
insb
pop
xchg
inc
bound
stos
int3
inc
or
add
add
add
add
shll
push
xchg
call
push
loopnew
stos
xchg
and
mov
sub
and
mov
dec
outsb
cwtl
lods
pop
insb
loopne
pop
outsl
adc
scas
push
and
mov
add
das
dec
sbb
sub
test
int
and
nop
cs
out
test
mov
and
jecxz
mov
fs
inc
or
adc
and
repz
or
sbb
lock
push
jg
or
sub
cs
int
jge
add
cwtl
xor
stos
hlt
jge
movsl
cld
js
xorl
push
shlb
jg
roll
adc
sub
sub
sub
cmp
shlb
nop
jp
inc
or
xor
and
xlat
nop
mov
adc
or
xor
inc
decl
cmp
cltd
cld
sub
cs
addb
sti
mov
lea
sbb
add
xchg
lea
cmp
xchg
xor
roll
push
add
out
adc
hlt
push
add
je
or
scas
arpl
mov
enter
in
insl
mov
iret
mov
divb
sbb
es
rorb
jg
fmull
sar
xchg
arpl
push
js
sub
fcoml
xor
jb
fldl
jo
xchg
push
xchg
enter
icebp
sbb
sbb
jno
dec
mov
cmp
cmc
adc
push
sbb
sub
roll
imul
addr16
je
sbbb
icebp
daa
add
loopne
insl
mov
and
std
add
popa
mov
or
mov
and
shll
lahf
repz
test
ret
jne
add
or
ficomps
ret
xor
sarb
in
repz
dec
xlat
push
addr16
mov
in
jae
add
add
ja
js
xor
sbb
in
add
es
adc
sub
add
mov
mov
add
or
or
jbe
add
aam
pusha
in
add
add
lret
mov
adc
jl
lock
aas
cli
imul
add
movsl
lret
out
mov
push
dec
adc
test
adc
adc
and
cmp
mov
push
aad
and
ss
add
pop
andb
and
and
mov
add
fldt
or
cmp
lret
xchg
into
pop
add
sbb
cld
dec
add
mov
dec
add
mov
pop
ret
and
or
sub
cmp
ror
cmc
add
push
stc
subb
mov
sbb
mov
adc
mov
cmpb
or
sub
mov
test
add
fwait
dec
clc
add
push
mov
add
nop
mov
push
cmp
movsb
mov
lods
cltd
inc
xchg
mov
loopne
add
pop
test
push
pop
cld
adcl
fdivrl
loopne
daa
xchg
loop
xor
cmp
into
nop
pop
xchg
testl
mov
xchg
jns
out
xor
cmp
xchg
nop
sub
cltd
xor
dec
loop
mov
pop
jnp
push
mov
and
pop
push
or
lea
mov
and
add
pop
out
test
mov
add
loop
cmpsb
mov
enter
push
adc
push
aam
leave
popf
js
pop
sarl
movsl
jb
shrl
push
jge
cmpsl
push
int
add
out
nop
test
xor
cltd
sbb
clc
adc
jo
cs
lcall
jne
mov
hlt
jmp
pop
mov
int3
inc
shl
add
std
xchg
sbb
sub
mov
mov
pop
add
push
iret
lret
enter
cmp
jnp
jne
inc
sarb
pushf
fs
push
js
cltd
in
cwtl
push
mov
movlps
cmp
push
rclb
add
ret
sbb
mov
push
xor
or
inc
xchg
xchg
pop
es
cmp
jb
add
xor
testl
mov
clc
loop
xchg
test
hlt
add
xchg
jno
ljmp
iret
test
hlt
inc
push
jl
add
cmp
jg
cmp
mov
fldl
xchg
cmp
cvtps2pd
addr16
add
js
xchg
dec
xchg
add
int
sbbb
ret
jg
sbb
repnz
div
in
sbb
ds
adc
push
int3
sub
xor
in
incb
cld
sbb
bound
mov
xor
fidivl
cmp
jecxz
aam
inc
xor
add
rol
das
mov
mov
mov
mov
es
arpl
jmp
sbbl
inc
data16
ret
add
inc
jecxz
in
lcall
loope
xchg
fcomps
cmp
add
subl
scas
add
call
mov
in
and
imul
sub
cmp
push
lahf
popf
pop
ficomps
add
movsb
mov
fcoms
fwait
adc
stc
addl
xchg
mov
mov
test
adc
repz
jns
jno
add
inc
lods
testl
cld
add
ret
adc
ficomps
scas
and
pop
shl
iret
push
add
popf
add
mov
js
pushf
sahf
add
jmp
pop
dec
pop
lods
pop
add
into
aam
pop
in
pop
sub
mov
push
popa
adc
push
adc
negl
lds
cmp
cmpsb
push
add
jge
xchg
add
pop
je
sbb
clc
int
into
dec
das
es
out
or
xchg
jl
outsb
push
adc
dec
pop
sbb
adc
fnstcw
imul
mov
jno
fwait
dec
je
xor
cltd
insb
sahf
stos
add
jnp
daa
dec
jecxz
jg
stos
in
adc
int3
pop
test
add
repz
ret
jmp
sub
dec
mov
mov
cli
and
and
xchg
std
pop
pop
lea
pop
mov
stos
aam
pusha
mov
add
jae
push
sbb
pop
arpl
daa
je
mov
sbb
mov
xchg
cwtl
in
ss
imul
add
pop
mov
shlb
sbb
jg
mov
jb
cmp
mov
stc
add
mov
push
push
aas
das
subb
pushf
subl
sarl
add
mov
inc
add
clc
pop
das
jbe
add
or
jge
mov
test
fimull
mov
and
out
dec
mov
rsm
jne
cmp
mov
sahf
sbb
loope
pop
add
dec
into
xchg
aam
xor
fildll
aaa
iret
jle
cltd
add
mov
loopne
std
xchg
lock
test
insl
sbb
add
cmp
ficoms
mov
cmp
mov
sbb
push
in
jnp
lret
pusha
xor
fldt
test
add
dec
shll
and
sub
mov
push
push
xor
dec
repnz
jp
pop
popa
xchg
xchg
add
pop
jmp
add
jne
cmp
shlb
aas
movsb
cmp
and
cmp
mov
add
sub
push
add
insl
add
inc
jge
add
push
faddl
mov
aad
call
ja
xchg
ss
add
adc
and
lock
out
dec
push
mov
outsl
cwtl
xor
sbb
mov
add
scas
lods
mov
and
out
ret
out
add
fs
sahf
into
xor
or
out
test
testl
dec
andl
fucomi
mov
mov
jmp
test
push
out
inc
aas
jle
subb
xorb
mov
add
adc
cmpsb
sbb
add
sbb
xchg
shlb
jge
outsb
add
out
dec
dec
icebp
inc
xor
jne
xor
adc
mov
lea
sub
popa
aad
push
cmpsb
sub
and
test
leave
pop
and
ds
into
jo
or
adc
call
mov
pop
adc
nop
aas
mov
lahf
add
in
test
add
add
jae
jge
xor
loop
cmp
add
fildl
push
cmp
push
arpl
clc
dec
add
mov
lods
add
pop
xor
pusha
mov
and
inc
stos
add
sub
jle
xchg
sti
stc
flds
add
lods
mov
cmp
add
ss
iret
add
sbb
mov
pushf
test
add
in
mov
scas
psllw
lock
mov
cld
xor
lea
aas
cwtl
pop
add
mov
dec
xor
inc
add
stc
fs
xlat
and
xor
pop
cmc
pop
orb
push
loopne
pop
push
fdivl
repz
jae
mov
sbb
mov
dec
pop
and
pop
push
dec
jg
mov
push
addl
push
or
fistps
and
push
or
ljmp
adc
lds
iret
rcll
into
push
inc
js
and
mov
jo
aas
inc
push
or
jp
ss
shll
jo
or
pop
lret
enter
dec
ds
push
mov
pop
mov
stc
sub
xor
dec
repnz
mov
lea
scas
add
mov
jmp
test
in
add
cmpsl
movsb
sbbl
jbe
mov
sbb
dec
mov
adcb
das
mov
and
add
mov
les
jo
sbb
adc
sub
jecxz
push
add
xchg
jp
add
push
mov
inc
adc
cwtl
std
add
fsubrl
test
pop
arpl
mov
notl
scas
into
pop
loopne
mov
xchg
add
mov
shr
pop
add
cli
fdiv
jle
fcomps
pop
test
imulb
dec
push
dec
jne
addb
dec
out
sub
mov
call
mov
outsl
sahf
cmp
dec
xchg
or
pop
add
sbb
pop
cld
add
mov
and
xlat
icebp
add
test
jp
pop
add
fs
pop
adc
add
inc
mov
jbe
and
pop
lret
mov
push
mov
pop
shlb
sbb
ret
sbb
enter
sub
mov
push
std
mov
mov
jb
ss
les
dec
add
andl
push
push
fnsave
sbb
or
inc
fs
adc
sbbb
add
xor
sub
pushf
bound
mov
punpckhdq
rclb
cmc
mov
cwtl
sub
or
mov
pop
loopne
stos
pop
add
sti
adc
lret
pop
add
mov
dec
pop
add
lahf
aaa
mov
jo
adc
lcall
imul
ret
jbe
mov
push
daa
xchg
push
in
add
dec
sub
lods
leave
push
ds
pop
pop
or
std
jg
in
jnp
in
lds
les
bound
in
add
stc
sbbl
cmp
daa
sub
mov
sub
into
or
ljmp
cmp
popl
aaa
cltd
inc
mov
in
mov
xor
or
adc
mov
push
scas
and
pop
aaa
or
aad
test
xchg
popl
arpl
sbb
pop
test
mov
enter
iret
push
mov
jp
sbb
jno
mov
cltd
test
icebp
or
or
popa
jg
lods
mov
sarb
fwait
push
xor
xorl
add
data16
push
or
insb
arpl
cmpsl
out
cmpsb
or
add
mov
and
gs
fsubrl
in
outsl
dec
cs
les
add
mov
inc
dec
test
call
daa
jg
add
ret
pop
dec
pusha
push
inc
hlt
push
faddl
xchg
lahf
inc
fwait
pop
fistps
pusha
xor
adc
jbe
jbe
add
mov
dec
into
add
xor
das
pop
push
inc
pop
call
mov
adc
and
jne
and
push
sub
outsb
adc
add
push
or
fs
imul
lret
lock
jo
out
mov
aad
call
add
in
xchg
push
pop
mov
clc
sbb
dec
mov
sub
dec
sbb
dec
inc
ljmp
add
jge
in
add
repnz
jmp
mov
pop
leavew
addl
loopne
hlt
repz
xchg
sbbb
mov
pop
push
fs
mov
cmc
fwait
xchg
call
mov
add
js
mov
adc
mov
pop
das
add
aad
mov
dec
lock
iret
or
and
add
jno
mov
jge
mov
pusha
ds
sbb
mov
jmp
clc
add
js
test
jl
inc
pop
xor
cld
xchg
std
cs
mov
and
iret
add
cmp
test
fisubrs
cmp
test
testb
mov
and
sub
loop
mov
xchg
adc
add
and
cmp
imul
jnp
stc
fistpll
cmp
aas
mov
jne
push
jp
ds
dec
repnz
pop
and
dec
subl
in
dec
out
cmc
pop
ljmp
pop
or
ret
leave
rorl
sbb
popf
cld
cmc
outsl
cld
sarb
cmpl
mov
mov
jp
addr16
sub
push
js
insb
gs
xor
and
lret
xor
push
push
inc
add
mov
sahf
stc
lahf
popf
xor
jg
dec
sti
jb
notb
ja
pop
sbb
add
clc
mov
pop
cmc
inc
andb
push
loope
add
xchg
pusha
mov
add
add
testb
shrl
scas
scas
sub
sbb
mov
mov
dec
add
iret
and
mov
test
cmp
and
cli
sbb
in
sbb
mov
cwtl
push
testl
add
cld
pop
add
lcall
mov
lds
mov
mov
enter
pop
xor
cmp
cmpsl
push
lds
inc
push
rcrl
add
mov
xlat
dec
xor
jle
inc
js
ret
jbe
popa
xchg
add
stc
sti
out
scas
int3
icebp
pop
jge
add
mov
add
jl
in
cmp
fnstsw
enter
subb
add
cmp
xor
sarl
add
mov
rorl
push
insb
clc
xor
add
xchg
mov
addl
adcb
cs
dec
add
repz
xor
mov
add
fistpl
add
mov
sbbl
scas
btc
lret
out
inc
mov
cwtl
mov
fcomip
cmpsb
mov
test
xchg
out
adc
jbe
xchg
xchg
aam
mov
dec
test
mov
inc
add
sub
loop
mov
dec
hlt
sbb
scas
lea
outsb
enter
daa
adc
js
ja
add
jbe
cmpb
rolb
bnd
scas
mov
popf
call
mov
imul
add
dec
insl
mov
cli
pop
xor
mov
inc
dec
sub
nop
adc
and
lea
imul
jecxz
push
fists
testl
cmp
shrl
in
push
add
lods
imul
jne
add
jle
jecxz
xor
test
add
cmp
les
mov
add
bnd
clc
shll
sbb
sbb
adc
out
pop
mov
xchg
cwtl
jge
in
hlt
add
fsubs
add
scas
cmp
add
mov
push
out
icebp
mov
cmp
mov
out
push
in
shlb
lds
inc
mov
and
pop
repz
add
sub
loop
add
int3
leave
mov
mov
flds
xchg
cwtl
or
xchg
xorb
push
pop
pop
add
insb
and
push
cmp
sbb
sbb
lods
cli
sbbb
xor
mov
inc
fistpl
add
push
loop
cmp
add
jo
in
dec
or
es
add
shlb
out
adc
in
les
inc
add
rcll
or
lret
push
jo
dec
push
cltd
lods
add
push
xchg
loop
test
jmp
xor
xchg
int3
clc
rcr
sbb
inc
aaa
pop
lret
xchg
inc
cmp
fmuls
add
shlb
mov
or
mov
jg
add
mov
pop
imul
inc
iret
lods
add
or
frstor
test
hlt
cmp
outsl
sub
mov
add
add
cs
clc
pop
add
sub
pop
shll
pop
pop
add
in
subb
add
push
shll
add
xlat
stos
mov
mov
and
and
repz
and
pop
mov
fwait
imul
mov
dec
out
aam
popf
rol
add
dec
mov
inc
std
mov
add
mov
sub
push
mov
add
fs
xchg
xor
and
add
aad
inc
sub
mov
aaa
addr16
add
sub
mov
les
ltr
sub
mov
inc
push
shrb
insb
ja
sub
pop
sub
mov
cmp
test
aaa
cs
mull
push
add
enter
cld
cs
xchg
leave
dec
pusha
jecxz
push
xor
inc
mov
testb
push
xchg
dec
int3
and
mov
xor
inc
mov
testl
roll
fcomp
add
popa
fcmovbe
and
xor
mov
xchg
xchg
add
rclb
pop
popa
sahf
movsb
adc
lret
add
jnp
popf
add
nop
or
decl
push
test
nop
leave
pop
sub
es
mov
add
cmc
adc
jbe
fstpl
mov
and
xchg
out
add
inc
cmp
xor
sbb
xchg
orl
ror
and
pop
push
into
inc
xchg
mov
add
push
inc
mov
mov
addb
add
mov
add
rcr
lahf
mov
ret
jbe
pop
idivl
in
add
dec
push
loope
addr16
push
and
mov
add
enter
lcall
sbb
add
mov
mov
aam
shlb
xchg
lcall
add
lods
mov
jns
out
xchg
stos
sub
addb
mov
dec
lcall
test
lods
inc
sbbb
jg
mov
fmuls
fimull
xor
add
aad
fmuls
xchg
add
roll
push
mov
dec
push
cmpb
xor
fdivs
or
mov
mov
in
mov
scas
add
pop
inc
adc
add
cmp
cld
aam
fstl
sbb
test
sub
shrl
xor
add
movsl
jge
mov
xchg
in
nop
in
jne
mov
inc
orb
jl
xchg
mov
inc
and
popa
or
mov
cwtl
add
lock
mov
pop
add
inc
sub
inc
cmpl
push
add
aaa
mov
pop
xlat
repz
add
cli
push
jmp
out
pop
add
add
xchg
mov
cmp
xchg
pop
movsb
sbb
add
mov
add
mov
inc
pusha
add
jae
add
xchg
es
sub
pop
sahf
shlb
add
icebp
jb
adc
pop
adc
mov
es
out
and
pop
shrl
xorb
xchg
lcall
mov
xor
cwtl
jb
mov
cltd
call
xchg
pushf
xor
jecxz
pop
cmc
int
cmp
sbb
fs
or
xchg
jecxz
sbbb
mov
push
mov
leave
into
mov
sub
sbb
lock
add
jns
cmp
ret
lret
test
or
push
mov
pusha
jge
in
mov
dec
dec
and
dec
jecxz
add
push
ja
and
sti
xchg
sbb
add
out
jno
stos
pop
mov
add
repz
sub
pushf
add
push
in
add
adc
cmp
int3
sub
jge
xor
out
insl
fmuls
or
or
cmpsl
pop
in
outsb
pop
into
lcall
lahf
adc
mov
mov
cwtl
pop
add
shrl
repnz
sub
ja
or
es
sbb
addr16
sub
movsb
add
sti
pop
xor
dec
inc
inc
sub
loopne
xchg
mov
scas
dec
cmp
sarb
pop
adc
je
ljmp
std
shlb
pop
xor
mov
mov
mov
pop
jo
cmc
orb
test
lret
mov
sarb
mov
add
test
push
adc
mov
lea
jns
adc
jl
mov
lcall
insl
pop
xor
sub
cmp
js
sub
movsl
pushf
ds
jle
add
or
out
jl
or
je
push
popf
addl
sbb
add
and
mov
cmp
pop
xor
rol
sti
rorb
xor
cltd
or
sbb
add
push
out
int
loope
pusha
xor
adc
fwait
aas
inc
sub
sub
mov
push
mov
xchg
outsb
repz
add
stos
movsl
aaa
dec
or
orl
xchg
pusha
dec
pop
pop
dec
add
lea
orb
lahf
add
insb
adc
pop
push
mov
inc
jmp
mov
mov
loop
int
movsb
into
adc
pushf
imul
aaa
out
dec
add
out
or
clc
rorb
je
add
divb
lret
mov
stc
jns
in
sbb
push
add
jbe
fstl
jo
int3
push
icebp
or
sarb
sub
dec
jl
inc
mov
cmpsl
mov
add
xchg
scas
mov
push
inc
ljmp
add
lret
mov
cli
adc
nop
xchg
les
mov
out
dec
adc
mov
pop
dec
add
push
popa
xor
cmp
push
add
or
ds
lock
and
add
imul
pop
mov
inc
mov
pop
mov
aas
or
in
pop
or
cmp
imul
pusha
add
inc
adc
andb
lret
addr16
mov
and
js
shll
mov
cmp
mov
xchg
es
mov
outsl
fwait
add
jnp
int
jle
arpl
or
and
pusha
lock
out
cmp
movsb
lahf
cld
add
add
dec
jne
inc
jns
or
jge
add
aas
jle
stos
xor
sbb
stos
loopne
es
andl
sbb
lea
decb
jae
jmp
test
jbe
pop
rcll
dec
sbb
aas
xchg
das
testb
call
mov
xor
or
cmp
and
mov
jae
loop
lcall
shll
and
sub
pop
and
or
cmpsl
and
cmp
mov
cmp
cmpsb
in
ja
and
and
rcl
es
add
add
test
fldl
repz
rcll
roll
add
mov
mov
into
leave
lods
fadds
push
in
lret
push
lea
push
pusha
mov
sub
call
scas
setb
loopne
push
fucomi
dec
push
pop
cmp
ds
pop
add
ret
shl
or
and
add
mov
nop
ljmp
xchg
cmp
stos
xchg
cmpsl
test
push
cmpsb
out
call
and
pop
add
xor
mov
cmp
daa
mov
jo
push
jno
clc
push
add
or
jne
and
mov
push
mov
add
leave
and
cld
daa
loop
add
dec
lods
mov
sbb
inc
adc
ss
jae
lock
push
add
les
hlt
mov
jns
or
mov
and
roll
std
sti
pusha
xchg
xchg
add
push
xchg
lcall
dec
or
mov
jmp
jns
rolb
sbbb
es
ret
and
sbb
nop
push
cs
add
jae
cmp
loope
mov
dec
mov
sbbl
loop
sbb
fadds
inc
lock
rorb
lods
or
inc
fcompl
mov
adc
and
dec
mov
shlb
aam
cmp
filds
test
repz
rolb
loopne
xor
adc
jo
sbbl
add
sbb
xchg
xchg
ficoml
add
movsl
xor
adc
lret
incb
into
nop
es
pop
inc
in
and
mov
adc
push
dec
dec
packuswb
push
or
jno
adc
adc
test
mov
cmp
or
or
shlb
repz
cmp
stos
add
iret
rolb
repz
data16
mov
add
lock
test
cmpb
push
mov
adc
add
leave
pop
adc
add
cld
scas
cmpsb
mov
ja
xchg
cmp
test
and
lods
push
sub
dec
or
xlat
cmp
inc
sarb
xor
cmp
pop
in
fildll
dec
sbb
pop
adc
inc
add
inc
push
or
push
add
cli
movsl
ror
xor
push
add
and
xchg
in
jnp
sub
pop
pop
mov
inc
cmp
push
add
cltd
jo
fadds
adc
mov
cmp
cwtl
int
pop
imul
add
mov
adc
test
add
int3
add
mov
scas
in
js
nop
cltd
xchg
insl
pop
ja
imul
cmp
enter
add
clc
ss
cwtl
xchg
aas
lock
incb
iret
imul
sbb
xchg
mov
sarb
inc
xor
sbb
mov
pop
adc
ret
mov
shlb
mov
adc
xchg
jmp
mov
add
jle
out
mov
fstpt
fmull
pusha
add
mov
inc
or
or
lcall
testb
dec
shlb
xchg
je
push
cmp
cmp
sbb
incl
popa
jo
cltd
mov
jb
mov
mov
xchg
subb
aad
stos
mov
aas
xchg
push
add
scas
mov
cmp
pop
sbb
jmp
push
pop
sbb
in
addb
push
sub
addps
jns
adc
dec
add
std
add
push
pop
push
xor
scas
pop
aad
mov
inc
cmp
inc
and
js
iret
xor
into
mov
popa
add
int
leave
popf
pop
lahf
xor
je
mov
add
push
and
or
jno
sub
dec
inc
add
push
dec
sbb
jb
in
add
imul
in
addl
lods
xor
fsubrl
shrb
or
push
int3
cmp
stos
popa
sbb
es
mov
adc
ljmp
cmp
and
sub
sti
ret
cli
mov
jecxz
push
fs
xchg
arpl
popa
and
cwtl
enter
lods
aaa
nop
adc
packsswb
pop
lock
ljmp
push
and
and
xchg
mov
daa
xor
in
adc
lock
mov
sbb
in
ret
jb
add
mov
int3
xchg
sarb
data16
fldcw
mov
mov
sbb
insb
jne
std
test
inc
addl
mov
pop
cwtl
lds
xchg
cmpsl
add
out
sbb
sarl
in
sbb
pop
add
xor
mov
mov
cmp
ficompl
add
jae
repz
mov
sbbl
rcrb
push
add
fmuls
scas
rclb
add
test
and
cmp
adc
fs
shl
xor
sbb
xchg
or
sub
lret
lret
dec
sub
jae
jae
clc
inc
hlt
repnz
sbb
outsb
xor
mov
add
sub
or
fs
je
subb
lahf
xor
enter
add
sub
adc
push
add
cwtl
ja
add
mov
or
movsl
add
scas
sub
dec
leave
in
push
push
add
dec
mov
cmc
jo
mov
push
enter
hlt
xchg
add
fldt
xchg
pusha
fdivrs
stos
call
dec
sub
dec
adc
add
dec
jae
add
xchg
fmull
hlt
adc
push
leave
inc
loopne
adc
sub
sbb
stos
mov
add
popa
orb
pushf
testl
dec
and
orl
adc
fldcw
inc
out
jecxz
sub
sbb
andb
cs
fstpl
push
je
leave
pop
lea
lods
incb
clc
add
and
out
cwtl
in
imulb
lahf
jo
mov
int
push
mov
dec
enter
xchg
jbe
add
push
push
sub
push
pop
ret
sub
mov
iret
cli
add
stc
push
icebp
sbb
test
inc
enter
cmpsb
sbb
mov
addl
push
lock
cmp
mov
mov
sarb
jae
mov
xchg
fstpl
mov
jo
scas
and
or
inc
jmp
mov
xchg
pop
addr16
xchg
loopne
cmp
inc
mov
int3
test
icebp
outsl
aad
or
or
push
and
xor
in
iret
inc
pop
int
push
adc
movsl
ljmp
add
mov
adc
test
mov
fsubr
adc
andl
add
je
adc
mov
jne
mov
loopne
and
add
ja
imul
xchg
loope
xor
test
push
cmp
out
mov
in
sbb
pushf
mov
sub
sub
cmp
dec
pop
out
or
xchg
sbbb
add
arpl
xchg
test
cmp
add
inc
movsb
push
iret
mov
repnz
pop
cmp
sahf
inc
adc
mov
cwtl
sub
orb
xlat
mov
sbb
imul
popa
arpl
dec
dec
rcrl
fld
loope
cmc
cwtl
add
insb
sub
andb
out
outsb
mov
fsubr
loopne
xor
dec
out
xchg
popf
pop
add
test
enter
fists
sub
cmp
fcomp
jnp
push
cmp
iret
sub
lods
adcb
xor
dec
pop
out
push
shlb
push
adcb
sub
or
dec
jmp
adc
subb
daa
and
cwtl
fcoms
test
jmp
mov
repnz
push
push
in
jmp
out
cmpb
ljmp
xchg
icebp
rclb
dec
add
mov
shlb
cmpsl
or
xchg
ljmp
cmp
mov
orb
push
pop
or
jno
mov
cltd
nop
gs
daa
jbe
lret
lods
fimuls
mov
add
jp
in
mov
sub
push
out
and
mov
push
cwtl
adcb
push
xchg
dec
decl
sbbb
cmp
xchg
xor
or
and
pop
lods
cmc
hlt
xchg
lods
dec
insb
inc
or
in
inc
inc
cwtl
nop
dec
mov
sub
pusha
popf
cs
addr16
sbbb
add
repnz
sub
mov
adc
sbb
add
cwtl
or
pause
mov
icebp
adc
mov
jne
scas
pushf
cld
inc
es
add
add
push
je
xchg
pop
xor
lock
add
pop
mov
adc
push
add
mov
xchg
jmp
mov
or
notb
shl
inc
add
jg
ss
mov
pushf
lock
push
sbb
and
inc
sbb
mov
fstps
add
fucomip
enter
push
jae
add
cmp
inc
pop
pop
orb
add
sahf
and
mov
mov
inc
add
adc
pop
out
mov
adc
lods
lahf
clc
add
fstpt
les
repz
aas
mov
mov
and
call
pop
sbb
loope
add
push
jl
mov
or
add
push
add
lods
inc
pop
inc
cmp
aad
xlat
jno
jns
pop
xchg
stc
sahf
or
mov
add
outsl
push
and
insl
xchg
pop
nop
add
rol
int3
fs
mov
push
pop
add
xorb
sub
mov
out
adc
dec
xor
lahf
mov
ljmp
je
or
push
mov
stos
cmpb
pop
xchg
jo
or
test
in
subb
pop
mov
rclb
cmp
call
or
nop
jns
push
loopne
int3
add
cli
inc
adc
and
jg
jb
inc
test
arpl
stos
stos
lock
hlt
add
sub
dec
ja
adc
lret
insb
xchg
stos
pusha
mov
sub
loopne
or
mov
adc
add
enter
addb
test
pop
nop
pusha
and
add
jle
fildll
cli
mov
xchg
lock
popa
add
ljmp
or
sbb
or
pop
sub
inc
leave
pop
jle
xor
push
orl
adc
cmp
add
ror
scas
nop
insb
bound
sub
inc
clc
icebp
mov
jbe
add
into
aam
jmp
pop
cmpb
call
fdivl
pop
rclb
pop
loop
add
inc
nop
add
addb
call
aaa
mov
test
cwtl
sub
lods
mov
lret
pusha
or
xchg
adc
repnz
add
xor
add
jns
lods
icebp
mov
jle
jo
movl
xor
adc
xor
lods
shl
enter
popf
jno
sub
lock
mov
movsb
dec
mov
in
add
sbb
jle
or
pop
shlb
adc
scas
push
pop
fildl
popl
xchg
sbb
push
xor
add
sub
outsl
mov
push
jge
rcrl
scas
mov
add
adc
outsb
push
repnz
test
push
xchg
mov
adc
add
or
adc
fiaddl
cmp
pusha
test
andl
sti
lret
in
or
loopne
xor
cld
push
test
jmp
sbb
clc
cltd
call
add
xorb
cmp
outsl
adc
cmpsl
leave
adc
roll
hlt
mov
jae
pop
pushf
add
jecxz
daa
rep
pusha
inc
movsl
mov
dec
test
push
popf
in
add
ljmp
cld
add
xchg
inc
jo
add
es
shl
xchg
ss
pop
add
pop
jle
mov
fcoms
andb
fidivrl
enter
mov
cmp
stos
jno
movl
leave
add
mov
jge
stos
add
call
pop
test
loopne
dec
repz
push
lods
pop
or
pop
pop
mov
fisttpll
pushf
lods
or
sbb
xor
mov
add
add
mov
fisttpll
std
sub
insb
enter
dec
pop
cmp
popa
add
cmp
cmp
pusha
mov
int
mov
cmp
pushf
fs
orb
shrl
adc
lock
dec
dec
pop
faddl
and
faddl
pop
xor
sbb
jo
push
insl
dec
pusha
clc
sbb
mov
jmp
repz
pop
add
jo
pusha
fwait
xor
dec
dec
in
mov
les
int
arpl
arpl
bound
pop
pushf
xchg
sbbb
movsl
rorb
jmp
sub
sbb
lcall
mov
push
dec
loope
pushf
pushf
or
repnz
lock
es
cs
rcrb
iret
cs
mov
xchg
js
dec
pusha
inc
enter
inc
mov
loope
out
mov
dec
repz
add
dec
jl
les
jne
in
pop
jbe
mov
xor
mov
xchg
add
mov
aam
ficoms
lea
mov
scas
popf
dec
rolb
ret
ret
jne
pop
hlt
popa
push
fistl
and
pushf
std
fisttps
dec
inc
pusha
jmp
mov
jo
jle
xchg
pushf
aad
sub
mov
dec
add
mov
stos
cmc
jb
pop
xchg
cmp
dec
test
mov
popa
popf
repz
cwtl
xchg
dec
sbb
mov
rorb
push
dec
jg
mov
inc
adc
popf
js
inc
xor
pop
or
jmp
pop
sub
pop
push
cs
push
mov
or
out
pushf
sarl
mov
imul
lock
add
jmp
add
add
movsl
inc
std
lods
dec
jo
push
and
pop
add
sbb
bound
sarl
dec
pusha
mov
xchg
cmp
pop
push
add
dec
sbb
push
mov
int3
adc
add
loope
jl
jp
or
test
pop
and
fcoml
cltd
shrb
mov
inc
enter
cwtl
dec
ljmp
pop
sub
pop
lds
sub
call
xor
int3
pop
pop
ja
adc
jno
out
sub
sbb
nop
in
loop
add
rorb
inc
mov
lods
call
aam
out
push
fmul
push
jo
adcb
jl
clc
outsl
or
str
dec
and
fadds
jg
jmp
add
and
add
add
and
jno
sbb
sbbl
pop
and
arpl
sbb
add
push
add
jae
out
adc
inc
in
jmp
cmp
or
ds
test
jle
adc
or
rorb
xor
leave
or
clc
xchg
icebp
xor
cwtl
adc
arpl
lds
nop
jge
add
out
pop
cli
ja
dec
xor
lahf
in
push
mov
or
jne
xorb
out
add
fs
pop
xchg
pusha
add
mov
add
xchg
xlat
sbb
dec
icebp
inc
je
lds
enter
aam
add
cmp
cmp
inc
mov
xchg
andl
jo
xchg
xchg
incl
loope
jl
mov
mov
add
mov
ficoml
ljmp
pop
lret
jmp
dec
add
leave
test
adc
adc
loope
xor
shll
xor
cli
lock
ret
adcb
imulb
fs
add
cwtl
mov
popa
mov
mov
adc
jg
or
mov
push
jno
je
mov
dec
add
push
adc
push
rcll
es
loope
inc
outsl
sub
cmp
out
shlb
mov
push
dec
or
les
dec
mov
test
add
shr
sub
into
push
or
pushf
jns
add
inc
fmul
and
mov
pop
addr16
test
movsb
mov
gs
dec
jb
add
imul
lret
in
push
mov
shr
cmp
mov
hlt
fcmove
jo
icebp
fwait
sahf
jl
ret
inc
mov
and
dec
push
mov
cmpsb
hlt
sub
dec
sti
jmp
add
repnz
andb
and
add
jg
clc
jo
and
inc
out
push
fsub
xchg
pop
push
shrl
jl
cmpsb
lea
leave
lock
pushf
push
je
bound
cmp
std
jnp
into
xor
mov
xchg
aas
adc
in
je
mov
in
mov
or
into
sub
add
cmp
call
pop
aad
test
sti
insb
and
adc
adc
addb
jnp
mov
shrb
rorl
dec
int3
cltd
and
aam
xlat
sbb
pop
fcmovb
repz
out
sahf
xchg
add
arpl
lds
je
fsubl
pop
leave
add
outsl
adc
and
inc
pop
add
adc
mov
inc
and
popa
ja
add
jg
mov
pop
aam
loopne
in
in
add
movsl
push
dec
pusha
xchg
cmp
fnstsw
ret
mov
cwtl
int3
pop
mov
lret
add
xor
pop
faddl
inc
dec
popa
test
add
int3
aam
dec
cld
adc
dec
pop
and
jo
add
mov
repnz
lods
or
add
adc
push
jne
dec
add
jo
add
inc
mov
inc
dec
add
inc
xor
clc
add
rcr
rcrb
lds
add
lcall
adc
test
push
adc
push
xor
add
jmp
aas
jl
aaa
cmpl
pop
clc
cmp
test
add
loop
cmp
xor
sbb
mov
add
out
add
das
es
insl
add
push
shlb
xchg
mov
pop
shr
test
iret
jmp
call
test
bound
xor
pop
mov
fimuls
add
jmp
add
test
mov
sbb
ljmp
mov
mov
lret
das
fisubrl
cmp
pavgb
mov
or
adc
icebp
mov
cli
dec
rcll
inc
fsubl
dec
in
roll
outsl
jmp
xchg
addb
push
lock
jmp
adc
adc
inc
sub
inc
mov
mov
add
xchg
in
pop
ret
push
xor
fisubs
das
sbb
adc
cmp
push
jmp
mov
dec
dec
add
adc
inc
and
ret
loopne
xor
mov
cmp
push
push
shrl
push
je
sbb
test
ret
jl
xchg
inc
test
adc
test
cli
subb
dec
inc
faddl
stos
mov
das
xchg
add
bound
pop
sahf
faddp
outsb
jecxz
je
fcomp
lret
and
mov
out
and
into
fistpll
fsub
mov
sbb
nop
dec
out
pop
sub
add
cmp
dec
pop
sbb
jnp
cwtl
std
xchg
mov
add
fisubl
cmp
adc
call
outsl
pop
xchg
xchg
or
and
push
pop
sbb
pop
pop
inc
into
sbb
pop
add
cwtl
cltd
movsb
rol
int3
xchg
cmp
lret
ret
add
fcoms
dec
pop
cmp
jae
dec
outsb
pusha
mov
lea
add
test
inc
mov
add
pusha
imul
mov
xor
subl
adc
pop
test
jns
xor
xchg
and
jne
or
sbb
nop
gs
fdivl
pop
and
push
ret
xchg
jns
add
jl
add
icebp
xorb
adc
int
adc
mov
add
out
pop
nop
add
xchg
bound
call
cmp
lret
mov
cmp
daa
jo
mov
pop
xor
pop
add
dec
imul
inc
jp
push
aas
xchg
mov
xchg
insb
add
jbe
inc
and
xchg
add
adc
hlt
and
iret
xor
sub
ror
push
add
xchg
mov
cmp
jle
xchg
push
xchg
test
add
test
pushf
add
xor
mov
in
or
lcall
stos
fiadds
or
pop
cs
test
sbb
das
xchg
jmp
push
sbb
sub
subl
int3
hlt
push
stc
dec
adc
testl
inc
lret
xchg
dec
test
rclb
jne
xchg
rolb
push
aad
push
sub
rcl
cmp
aaa
xlat
les
test
mov
js
inc
add
sub
and
or
cli
jg
xchg
jl
jo
enter
mov
inc
push
pushf
rorl
add
mov
into
pop
loopne
fcomps
mov
mov
and
ret
popf
fnstenv
call
mov
jns
add
xchg
inc
adc
add
push
out
fcomps
sbb
rclb
dec
pop
ljmp
scas
es
mov
in
orl
sahf
or
pushl
add
scas
xchg
loope
mov
add
ljmp
repz
and
pop
pop
mov
stos
mov
inc
inc
or
sub
pop
test
push
repnz
mov
jge
lea
jne
xor
mov
sbb
sub
push
adc
in
lret
push
sbb
cmp
loope
shlb
mov
and
loop
add
push
data16
fdiv
sbb
xor
pusha
hlt
xchg
pop
jbe
pop
rclb
es
mov
lods
call
pop
loope
sub
lods
xor
movsb
js
pop
fdivp
popa
inc
cmp
adc
shlb
jle
loopne
shll
outsb
xor
hlt
add
mov
add
mov
mov
inc
xor
or
push
shlb
add
insb
fabs
add
mov
inc
enter
jno
decb
icebp
sbb
nop
insb
rcrb
xchg
fnsave
add
mov
aam
dec
pusha
xor
ret
pop
nop
rolb
sbb
ljmp
inc
mov
js
add
or
pop
add
push
les
xchg
xchg
cwtl
add
shrd
out
add
or
and
xchg
dec
add
adc
ljmp
into
sub
sbb
cmp
inc
cs
add
jo
pusha
loopne
inc
outsb
add
inc
addr16
jmp
jno
andb
xchg
dec
fmull
icebp
out
pop
mov
je
xorb
mov
add
outsb
popa
sub
shll
or
jge
test
jg
mov
addr16
pop
sbb
rolb
pop
push
fwait
ss
inc
xor
xor
arpl
scas
inc
sbb
lahf
add
stos
pop
jg
aas
shl
mov
and
sbb
clc
xchg
xor
sub
push
out
enter
mov
adc
mov
xchg
push
pop
push
icebp
arpl
jmp
and
test
mov
in
push
outsb
cmp
in
add
cs
aam
cmpsl
movsb
add
cmp
mov
mov
call
cmp
mov
shlb
lret
add
mov
adc
cltd
lods
xchg
add
jecxz
out
cmp
lahf
lds
repnz
inc
push
and
pop
add
lods
mov
pop
pop
add
das
les
inc
mov
mov
loopne
cmp
pop
dec
iret
and
mov
movl
sbb
ds
add
inc
in
js
sbb
loopne
ja
test
dec
movsb
mov
mov
mov
cmp
aad
sbb
nop
inc
fildl
sbb
mov
pop
lahf
push
ss
loopne
pop
maxps
insl
mov
pop
mov
aad
or
in
inc
mov
jo
add
dec
add
addr16
aaa
add
add
xor
adc
or
xor
xchg
test
add
sub
push
pop
into
jge
and
pop
pop
push
adc
fwait
xchg
fstl
add
loope
dec
sub
or
into
loop
add
sub
or
adc
xor
shrb
call
daa
movsb
dec
jp
xor
inc
js
sub
nop
sub
std
xchg
shlb
addr16
inc
lcall
iret
sbb
sub
add
lcall
les
repnz
xchg
dec
loopne
xchg
js
or
in
or
xor
jmp
push
dec
mov
shlb
mov
mov
lods
addb
dec
mov
sub
je
jb
and
xchg
mov
add
or
fxch
push
jo
sbb
jbe
mov
mov
add
sahf
test
inc
pop
lea
xchg
adc
js
popf
inc
jo
and
xor
nop
imul
push
pop
gs
fwait
je
repz
nop
pusha
mov
and
outsb
add
and
pop
rolb
jg
hlt
cs
mov
aaa
jae
add
fistl
dec
aas
push
pop
sub
aaa
ljmp
fwait
js
or
inc
clc
inc
jecxz
fsts
mov
aam
inc
lret
push
add
lods
push
enter
das
imul
pusha
dec
xor
addr16
sbb
sbb
push
or
add
outsb
out
xor
xor
push
in
push
add
fisubl
ja
rol
adc
sub
dec
lahf
sbbb
neg
fs
inc
mov
cmp
cmpsl
pushf
sub
mov
rolb
addl
inc
loope
mov
mov
sbb
das
inc
mov
add
mov
xchg
dec
call
pusha
xor
or
sub
cmp
push
inc
sbb
mov
test
inc
pop
dec
push
mov
sbb
repnz
adc
adc
mov
jg
js
leave
adc
push
hlt
adc
push
aaa
or
xchg
repnz
adc
testl
adc
nop
push
arpl
pusha
xchg
pop
adc
insb
popa
xor
push
stc
enter
mov
repz
scas
nop
jae
sbb
in
inc
sub
sti
ds
sbb
mov
mov
add
dec
shll
inc
pop
or
add
pop
cmpsb
pop
add
inc
mov
and
mov
push
mov
sub
xor
daa
ret
lds
mov
push
jle
pop
push
cmpsl
out
inc
mov
inc
in
imul
sbb
in
inc
push
cmc
jge
rcll
xchg
lret
std
shrl
shrd
mov
ret
insl
hlt
or
iret
das
push
inc
mov
loop
je
adc
add
xor
clc
push
cmp
inc
mov
or
sub
out
add
xor
inc
and
les
aas
add
aas
jb
loopne
xchg
cmp
fmuls
inc
push
cltd
xor
add
ja
daa
iret
xor
lock
leave
and
sbb
clc
cltd
dec
push
push
dec
fadd
dec
out
in
lods
add
repnz
js
mov
adc
popf
or
es
and
aas
lods
loope
xchg
jno
xchg
std
xor
add
fcoml
mov
sub
xor
mov
pop
fwait
adc
sub
aaa
movsb
pop
fstpl
rcrb
xor
mov
andb
bound
ror
cmp
std
mov
stc
cltd
mov
inc
dec
cmpsb
fadds
add
cmpsl
inc
cmp
mov
add
inc
mov
int3
movl
fsubs
dec
jmp
xchg
add
jae
loopne
out
xchg
mov
cmp
push
mov
sub
outsl
push
je
add
mov
xchg
test
and
bound
add
mov
jp
inc
clc
sbb
add
pop
sub
imul
decb
mov
inc
ret
in
push
xor
test
push
int3
xchg
outsl
add
xchg
dec
and
jg
test
out
add
xchg
or
xchg
mov
es
or
imul
inc
test
call
pushf
cmpb
mov
icebp
mov
cmp
fnstenv
cmp
jecxz
cwtl
jle
jno
fildl
imul
rolb
pop
iret
andl
xor
and
or
and
call
pop
and
jns
inc
xchg
add
sbb
loop
inc
inc
add
outsl
xor
xchg
mov
push
sti
movsl
add
sbb
in
pop
neg
mov
dec
inc
addr16
aam
mov
ret
and
mov
cwtl
push
jg
add
data16
sub
adc
adc
push
ficoms
in
aas
cmc
inc
push
les
mov
cwtl
dec
dec
clc
xchg
add
mov
xchg
adc
dec
push
xor
xchg
adc
jmp
test
hlt
xor
icebp
icebp
cmp
sub
sarb
cwtl
xchg
xchg
pop
pop
push
xor
and
js
repz
fwait
and
inc
insb
dec
into
inc
insl
lret
setg
hlt
les
and
fmul
inc
cld
lods
call
or
add
aam
mov
js
add
mov
dec
lods
decb
fwait
mov
xor
mov
add
xchg
imull
loop
mov
dec
push
ljmp
mov
and
mov
sbb
icebp
mov
add
xchg
mov
dec
add
xlat
cmpb
sbb
jmp
add
adc
inc
sub
add
ljmp
lds
sub
add
sbb
jl
pop
jge
mov
jg
adc
add
lea
lock
adc
xor
inc
xor
dec
aas
add
or
movsl
or
xchg
mov
es
push
pop
mov
addl
lods
nop
sub
xchg
dec
inc
out
and
test
mov
ljmp
div
push
stos
in
or
les
mov
jae
sbbb
aam
add
mov
mov
sahf
xchg
mov
icebp
int3
and
add
push
aaa
xlat
movb
stc
add
push
inc
fadds
rcll
add
jp
add
stos
sbb
pushf
and
inc
lods
push
xor
pusha
imul
jle
lock
mov
insb
lret
jne
dec
or
inc
adc
les
dec
aam
sub
add
shlb
test
inc
out
fs
mov
bound
es
cmp
and
add
in
insl
xchg
cmpl
mov
adc
addr16
mov
jnp
and
arpl
movsb
scas
roll
pushf
cmp
or
jb
mov
mov
cmp
test
mov
or
inc
les
je
sub
shrl
or
adc
xor
lock
les
inc
les
fnstenv
aam
adc
mov
nop
in
xchg
cmp
clc
xor
pop
bound
mov
push
xlat
add
insl
inc
mov
test
mov
je
mov
int
xchg
mov
mov
cli
imul
mov
test
add
push
or
scas
cmp
add
cli
sbb
xchg
inc
fstps
and
cwtl
and
push
cltd
decb
and
push
xchg
clc
nop
mov
popf
iret
mov
mov
sbb
sbb
mov
imul
incb
inc
mov
and
in
xchg
lds
in
movsb
fcoml
jl
push
or
scas
pop
mov
adc
mov
aam
pop
pushf
add
cli
daa
mov
rcll
fisubs
jg
mov
xor
or
jl
fisubl
test
arpl
xor
xchg
mov
adc
push
push
bound
clc
cld
or
pusha
push
xchg
add
mov
data16
push
sbb
imul
sbb
aam
add
or
outsl
lret
fcmovnu
pusha
jmp
cmp
add
pop
add
and
inc
aas
mov
sub
flds
jns
movzbl
xchg
jge
pusha
and
sbb
roll
test
push
mov
adc
pop
add
sbb
loop
add
pop
inc
add
inc
cwtl
mov
nop
add
jno
outsl
jge
add
dec
addr16
pop
xchg
pop
insb
sarl
push
in
add
lahf
cmp
add
inc
test
inc
sti
and
xchg
sbb
push
xchg
dec
loop
inc
cmovs
and
dec
test
scas
xor
or
fildll
scas
je
dec
adc
add
bound
adc
jnp
iret
add
mov
js
gs
movsb
adc
mov
or
flds
xchg
jecxz
push
sbbb
fldt
dec
pop
scas
inc
push
stos
cs
and
push
push
shl
sti
in
and
lods
mov
fadds
sub
mov
push
mov
enter
inc
xchg
divl
push
lea
pop
out
add
or
addl
aad
addr16
dec
iret
cmp
insl
enter
pop
cld
les
movsb
clc
adc
movsb
addb
sbb
dec
or
cli
cwtl
aam
in
pop
pop
jne
repz
pop
push
add
jecxz
cs
stos
imul
xor
push
lock
cmp
sarl
pushf
fmull
or
cmc
add
fcmovne
sbb
leave
mov
cmp
stc
or
sbb
fcoml
and
or
jg
jno
add
fwait
and
xadd
cli
push
sahf
pushf
inc
sbb
mov
add
loope
pop
jle
dec
daa
cld
adcb
pop
mov
repnz
add
dec
xor
test
mov
and
sub
aam
push
ja
xchg
lcall
cmp
or
popa
or
add
inc
cmpsb
dec
insl
push
add
es
popa
addb
push
or
repnz
jb
add
mov
and
adc
shll
stc
ljmp
pop
into
xor
mov
sub
pop
fmuls
adc
xchg
add
or
jbe
mov
xchg
pushf
int
push
mov
add
push
movsl
ret
mov
pushf
hlt
lock
sub
insb
mov
daa
or
xor
add
insl
pop
add
jge
dec
movsb
mov
pop
add
subl
insb
jnp
in
sub
repz
aam
mov
add
xchg
fidivrl
add
pop
xchg
mov
movsl
shll
mov
add
bound
adc
xor
add
add
out
and
adc
pop
add
jmp
rorb
and
sub
addr16
or
add
and
mov
fsubl
inc
fimull
xor
mov
xchg
bound
cmpsb
push
mov
xchg
lea
dec
mov
test
lds
test
mov
into
push
dec
adc
hlt
jecxz
andl
jb
aaa
popa
pop
sub
pop
bound
mov
jmp
xchg
dec
xchg
rorb
hlt
enter
in
mov
pop
lea
fcoml
adc
daa
movl
mov
pop
adc
and
pop
ja
scas
pop
and
or
in
cs
neg
or
lds
jmp
sbbb
out
push
mov
add
ret
xchg
rcll
xlat
ror
or
pop
sbb
loope
cmp
push
shlb
and
fiadds
push
stos
cmpsb
push
sbb
push
inc
add
fildl
out
movsl
stos
jns
add
push
and
add
mov
pop
inc
push
jb
jmp
mov
push
inc
sub
pop
push
nop
jp
repz
pxor
jb
adc
adc
je
dec
shrl
mov
mov
sbb
add
mov
pop
add
pop
shl
sbb
clc
xor
stos
loope
setae
adc
mov
or
and
pop
dec
sbb
dec
ljmp
in
add
jl
adc
jb
add
lods
pop
cmp
fmul
nop
fsubl
inc
and
xchg
ja
cmpsl
cld
add
xchg
dec
cmpsb
das
je
and
push
inc
lods
mov
dec
sub
mov
mov
jbe
sahf
test
mov
add
push
je
inc
or
pop
mov
sub
add
xor
mov
add
addr16
test
push
push
test
imul
add
jg
adc
xor
cmp
mov
movsl
adcl
jge
clc
xchg
mov
jl
xchg
mov
sub
xchg
cmp
sub
lods
push
mov
fwait
add
push
or
add
in
cmp
jle
jl
orl
cmpsl
mov
jo
push
xor
inc
lret
xor
lea
pop
add
enter
in
cmp
repz
jo
or
pop
fisttps
sbb
loopne
mov
rcrl
cmp
rcll
mov
jmp
add
aad
pop
repnz
inc
cltd
enter
add
jle
mov
jne
add
fistl
and
jl
push
pop
adc
addr16
jle
les
orb
and
rclb
fbld
cli
mov
push
pop
loope
dec
xchg
dec
shrb
xor
sub
jo
xchg
mov
pop
adc
hlt
mov
nop
add
iret
mov
cld
lods
add
cmp
or
enter
xchg
fdiv
add
pop
push
inc
sbb
lret
dec
sbb
dec
data16
ja
xor
cld
movsb
clc
xchg
cmpb
ret
add
pop
xor
add
lods
and
sbb
movsb
popf
mov
and
add
mov
push
hlt
adc
pop
jmp
sbb
mov
dec
pusha
hlt
bnd
lret
or
pop
xchg
inc
jge
data16
faddl
imul
dec
dec
inc
xor
inc
add
xor
test
jge
dec
inc
popf
xchg
enter
push
gs
sbb
into
or
movsl
pop
and
mov
adc
pop
dec
or
xorb
ret
in
aad
add
dec
ljmp
lret
adc
sbb
push
xor
cmp
in
dec
ljmp
sbbb
testl
ds
jp
cs
pop
adcl
push
mov
daa
arpl
lret
push
add
mov
dec
jo
ds
es
mov
psrad
nop
xor
dec
fldl2e
js
add
push
aaa
xchg
add
jb
cmp
and
lods
add
jnp
xchg
and
sbbb
xchg
js
std
push
movsb
mov
mov
adc
inc
xchg
sbb
roll
or
data16
lret
ror
bound
push
or
add
xorb
subb
cltd
mov
sub
adc
mov
xchg
and
dec
push
add
xor
shl
inc
jo
fcompl
fnstcw
ljmp
pop
and
int3
jae
cmp
popa
push
cmp
xor
fwait
push
add
cwtl
dec
add
nop
pop
mul
leave
or
adc
adc
mov
jl
mov
adc
ljmp
or
mov
add
mov
aam
dec
data16
stos
push
orb
fcmove
aas
pop
fs
roll
popf
jp
pop
mov
test
sbb
xorb
cli
inc
push
in
imul
add
repz
shlb
push
pavgb
and
add
test
fcoms
jge
rclb
cs
insb
sbb
add
orl
mov
or
sub
xchg
or
nop
pop
xchg
movsb
ljmp
xchg
pop
ljmp
fcmove
mov
mov
insl
xchg
adc
push
mov
jecxz
sub
mov
add
jb
std
cmp
adc
dec
push
test
pop
and
outsl
xchg
fwait
or
jmp
add
gs
das
in
aas
cmc
dec
mov
sub
rorl
test
adc
addb
pop
sbbb
rcr
inc
xor
dec
jae
aad
jns
inc
add
add
mov
add
sub
push
jb
add
mov
adc
or
sti
mov
and
mov
fwait
psraw
in
sbb
jl
rclb
rolb
xchg
mov
pop
test
sbb
mov
pop
xchg
cltd
pop
imul
push
dec
push
out
add
dec
loopne
rclb
inc
addr16
lahf
ret
loope
in
cld
cli
cmp
add
cmp
adc
rol
xchg
icebp
pop
jo
shrb
jmp
rorb
push
add
jp
fs
arpl
int3
pop
gs
ret
or
xlat
mov
inc
popf
mov
pop
add
mov
jge
and
dec
incb
movsl
mov
inc
add
decb
add
push
out
icebp
cmp
test
add
into
jno
cmp
loop
push
shr
pop
aad
add
xchg
or
dec
aaa
test
push
ret
mov
add
jmp
sub
add
insb
cmp
test
pop
xor
fdivl
jo
or
mov
cmp
mov
mov
add
lret
loope
outsb
mov
cli
pusha
add
or
inc
cmpxchg
orb
adc
mov
outsb
xor
lahf
lods
cwtl
inc
ss
jp
add
mov
loopne
push
mov
adc
add
mov
xor
aas
ljmp
mov
add
jecxz
notl
fs
add
cwtl
push
mov
xor
xor
data16
pushf
add
ja
adc
loopne
pop
xor
stos
lods
leave
push
or
inc
orb
in
in
loop
js
es
addr16
add
dec
sbb
push
lret
inc
and
sbb
icebp
mov
xor
lods
fildl
in
and
in
push
mul
xchg
pop
je
jae
jb,pn
jmp
inc
lock
mov
and
jp
add
or
bound
or
add
add
pop
fs
fmuls
hlt
jnp
dec
cmpsb
test
icebp
dec
fdivr
loopne
fucomi
repnz
pop
rol
and
pusha
lods
push
and
in
jge
mov
inc
dec
xor
pop
movsb
call
or
pop
pushf
ss
stc
jmp
jmp
loopne
cs
xchg
jno
movsl
xor
mov
mov
pop
add
mov
cs
clc
pusha
pop
xchg
cmp
or
fs
aam
sub
cmp
rolb
mov
inc
add
push
xor
and
push
ficomps
movl
sbb
fsub
nop
add
mov
ja
dec
sahf
popl
cmp
jne
xchg
sbb
sub
in
push
hlt
mov
js
add
mov
pop
cs
loope
add
popf
mov
faddl
js
jno
and
lock
iret
xchg
mov
add
adc
out
and
jge
inc
mov
pop
fstl
and
scas
dec
hlt
mov
imul
xor
mov
mov
cmpl
test
iret
adc
ret
fdivrp
pop
xlat
test
pop
sub
pusha
lea
xchg
jo
or
clc
ret
js
dec
jg
movsb
xchg
add
imul
sub
adc
xchg
add
cmp
dec
ret
ret
jno
mov
repnz
mov
and
push
ss
out
add
repnz
jecxz
push
sub
cmp
scas
pusha
add
rolb
cld
inc
mov
mov
outsb
sbb
dec
stos
mov
outsl
and
cmp
add
scas
aam
or
inc
add
cltd
mov
lds
mov
and
inc
sub
cmpb
mov
and
add
xor
mov
imul
shl
push
xchg
test
frstor
lods
icebp
dec
sub
mov
lret
arpl
xchg
cmp
stos
pusha
dec
orl
clc
and
fiaddl
test
or
movsl
sub
cmp
fisubrl
fmuls
daa
push
xchg
push
adc
nop
adc
dec
or
pop
add
outsl
enter
setle
repnz
loope
pusha
sub
mov
jno
jl
lret
mov
jb
in
dec
cwtl
pop
xor
push
aad
testb
in
ficompl
add
out
jns
loopne
aaa
xchg
cmp
clc
les
or
lea
pop
cmp
push
into
mov
push
mov
loop
adc
push
cmp
mov
jge
in
mov
ret
fwait
pop
imul
dec
jge
test
in
fsubs
dec
adc
add
data16
rclb
mov
testb
cmp
xchg
push
out
imul
andl
adc
je
sbb
pop
fisubrl
data16
loopne
inc
orl
icebp
sbb
jb
inc
and
rcrl
sub
sbb
scas
and
insb
mov
lret
es
addr16
jp
mov
mov
and
add
inc
out
mov
sub
fdivrl
mov
loopne
int3
inc
add
lret
sbb
lcall
cmp
scas
fisubl
test
int3
jb
shrb
lea
xchg
sub
mov
leavew
cwtl
add
mov
xor
lret
add
mov
or
xchg
add
in
mov
enter
nop
fimuls
pop
adc
neg
add
mov
out
sub
xchg
and
pop
shlb
std
fmull
mov
in
negb
decb
rorb
adc
js
and
outsb
lret
dec
rcr
add
or
in
sub
mov
jp
push
mov
les
or
adc
ret
subb
nop
jg
in
or
insb
pop
insl
xchg
gs
test
loopne
sbb
sbb
add
in
dec
mov
pop
mov
ret
push
jecxz
cmpb
cli
inc
inc
inc
shlb
repnz
ja
out
movsl
adc
pop
call
das
xchg
and
lods
pop
cmpsl
or
mov
sub
fcomps
pop
pop
ss
sub
pusha
stc
push
add
pop
test
cmp
mov
pusha
sti
dec
lods
adc
pslld
sbb
je
bound
pop
ljmp
test
xchg
call
and
loopne
data16
jo
in
aad
adc
or
lahf
and
xchg
enter
mov
dec
sbb
mov
sub
pusha
mov
test
sti
jmp
and
xor
dec
shlb
pop
aas
dec
shlb
mov
xor
jae
xchg
xor
pushf
or
xchg
inc
dec
cmpsl
lret
insl
inc
adc
and
stc
getsec
pop
orb
inc
in
sbb
inc
cmp
mov
mov
xlat
rorb
aaa
sub
test
xor
sub
aam
js
add
dec
vxorps
sub
push
nop
inc
sub
enter
imul
loope
xchg
hlt
pop
mov
push
rolb
fimuls
mov
pop
lret
xor
push
mov
setns
addb
mov
sbb
les
mov
dec
and
clc
arpl
push
cmp
and
jno
das
shll
jp
sbb
in
addb
add
imul
shlb
icebp
pop
or
cmpsb
imul
add
aam
pop
shlb
into
stc
es
add
jne
addr16
pop
out
pushf
pop
dec
jl
orb
fldt
add
cltd
or
sbb
jae
dec
xor
add
mov
xor
mov
or
xor
mov
add
xchg
jo
xchg
or
mov
sub
les
push
push
cld
cmp
inc
fwait
lods
push
push
mov
cmpsl
cltd
rcrl
adc
or
in
mov
lods
int3
add
mov
mov
adcb
lock
pop
popa
sbb
cmp
jb
jmp
test
stc
add
push
sbb
data16
pop
out
add
inc
pop
lods
add
push
adc
mov
inc
inc
and
nop
pop
pop
adc
adc
addr16
and
inc
cmp
dec
and
mov
push
pop
mov
imul
cmp
das
clc
loopne
cli
repnz
into
push
shll
int3
and
add
push
pop
dec
or
fadd
and
push
bound
or
or
xchg
or
pop
or
add
xchg
jl
popa
pop
push
xchg
xchg
or
adc
mull
mov
lds
mov
add
test
push
adc
stos
addl
out
aam
fwait
and
mov
mov
mov
mov
scas
dec
jge
push
loopne
nop
test
jle
pop
add
and
icebp
pop
push
mov
or
mov
addr16
add
dec
push
and
dec
mov
sti
stos
sbb
sbb
bound
mov
cmpsl
popa
dec
add
out
sub
in
pop
add
pop
mov
loop
xor
ss
je
lods
add
add
sub
sub
addr16
and
jo
clc
add
in
aam
inc
das
loopne
in
cmp
dec
pop
mov
cmpsl
and
inc
out
jnp
add
push
fs
inc
mov
cmp
scas
xor
mov
pop
repz
jecxz
and
into
or
mov
add
jno
cmp
pop
cmp
call
cltd
negb
pop
xor
mov
imul
xor
xor
and
jl
adc
push
mov
pop
add
and
inc
mov
add
add
or
push
andb
clc
out
mov
aam
mov
in
test
push
icebp
lods
repz
dec
loope
xchg
loopne
add
mov
sub
mov
sub
pop
arpl
mov
insb
mov
inc
jecxz
loopne
cmp
pop
ljmp
clc
or
movsb
fsts
iret
mov
or
xchg
jg
cwtl
xchg
and
add
adc
jo
mov
addr16
or
pop
jge
mov
sub
jne
sub
jb
add
mov
sti
fs
sub
mov
or
inc
movsl
adc
movsl
jno
or
pop
inc
aaa
and
dec
test
jno
in
cmp
adc
sbb
push
add
push
loopne
loopne
add
in
loope
jecxz
or
sahf
je
xor
sub
int3
inc
dec
add
cmp
mov
test
decb
pop
xlat
adc
jl
adc
les
cmp
push
stos
pop
jg
pusha
and
fildl
mov
mov
pop
add
xchg
filds
cmp
flds
push
pop
pop
sbb
adc
outsb
mov
pusha
aaa
dec
jp
add
mov
out
cmp
pop
clc
bound
lcall
js
in
lahf
xchg
jo
scas
jg
add
stc
inc
lods
pushf
sbb
dec
adc
xor
faddl
mov
inc
inc
sub
or
and
fadds
inc
pop
in
imul
add
adc
add
push
adc
repnz
les
dec
xchg
push
call
jae
sbb
adc
daa
jl
push
rorb
lret
loopne
subl
cmp
xchg
fnstsw
andl
dec
jo
or
push
inc
jp
or
push
stos
lods
push
movsb
inc
insl
xor
mov
add
xchg
iret
out
cmp
pop
jns
stos
and
dec
movsl
adc
xor
inc
adc
jb
cmp
jecxz
jno
mov
mov
dec
or
dec
push
lods
sub
call
addr16
inc
aad
repnz
dec
add
shrl
fsubrl
jecxz
xor
fbstp
fisubs
mov
xor
enter
xchg
popf
mov
sbb
pop
scas
inc
sub
sub
pop
jae
or
ret
add
mov
out
loope
or
sub
cmp
out
mov
andl
lret
xor
adc
inc
in
lods
dec
adcb
mov
cmp
add
mov
ds
jne
cmp
mov
insb
sbb
jl
pop
sub
pop
xchg
mov
or
push
add
inc
iret
fs
xor
sub
and
jnp
or
xchg
and
mov
xor
icebp
scas
dec
rolb
cmp
xor
mov
loope
js
adc
aam
xlat
add
adc
cmp
lock
push
movsb
add
es
push
cld
add
pusha
sub
dec
in
arpl
in
jno
mov
add
inc
stc
cmpl
ss
add
pop
aad
xor
or
imul
push
add
or
xchg
dec
xchg
push
dec
mov
call
cmp
loopne
adc
outsl
inc
pop
cmp
enter
add
cmp
add
inc
shr
sti
add
adc
add
sbb
pop
inc
and
xchg
call
imul
ljmp
mov
dec
popf
push
enter
fdecstp
push
add
mov
imul
cmp
dec
cli
ror
arpl
and
pusha
fcompl
push
pop
arpl
and
add
jmp
jne
test
lds
divb
sbb
sub
mov
cmpb
inc
mov
jecxz
hlt
adc
add
lods
mov
imul
lret
mov
sbb
inc
gs
decb
add
popf
cli
call
repnz
nop
imul
jg
arpl
in
jb
mov
jne
fcmovnb
pop
rclb
cmc
mov
hlt
in
jecxz
adc
cmpsb
xchg
sbb
mov
cmp
jns
add
das
or
fcmovnb
inc
cmp
add
xchg
sbb
mov
xor
les
fs
inc
pop
add
mov
cli
push
cs
mov
push
mov
out
push
adc
pop
sti
call
push
mov
test
pusha
or
mov
or
pop
bound
pop
mov
sbb
in
jb
or
xor
cs
jecxz
inc
sbb
mov
add
ror
xchg
lock
pop
sti
pop
jle
das
mov
or
mov
cli
mov
ljmp
sbb
ds
inc
sub
push
adc
and
dec
fiadds
and
mov
scas
push
inc
hlt
add
repnz
les
dec
pop
add
mov
dec
in
rcrb
mov
adc
andb
les
mov
push
sub
pop
or
mov
movb
pop
mov
call
sahf
adc
rol
jo
jmp
inc
mov
ds
dec
mov
and
jle
fs
inc
test
mov
jo
mov
xchg
xor
adc
insb
in
xor
lods
mov
lcall
rolb
test
cmp
jp
push
xor
pop
in
sbb
mov
sbb
pop
out
lock
xchg
mov
add
rorl
add
jecxz
jne
out
addr16
shrb
enter
sbb
sbb
lahf
insb
sub
mov
jne
lock
mov
mov
sbb
pop
pop
fisubrs
insb
hlt
insb
push
pusha
jo
sysexit
adc
insl
cmp
add
test
jecxz
mov
roll
repz
cmp
sbb
movsb
insl
cwtl
mov
cmc
ds
unpcklps
cmp
lret
add
add
pop
addr16
outsb
lahf
xlat
adc
mov
add
sbb
mov
loope
imul
add
cmp
popa
lea
inc
aad
pusha
lock
add
or
fildl
je
test
and
push
nop
mov
popf
sahf
icebp
jo
ljmp
test
push
jb
jb
push
nop
mov
or
pop
mov
pop
and
jmp
adc
cld
sti
add
das
pop
dec
outsb
push
cmp
cmpsb
cmp
sbb
insl
dec
test
or
and
out
and
push
mov
mov
sbb
add
clc
in
pop
sbb
rclb
mov
push
stc
ret
inc
loope
jbe
stc
js
cmp
push
mov
dec
jns
add
jo
dec
lods
mov
xchg
add
sbb
test
sbb
fistpl
jmp
aaa
or
add
scas
push
or
out
in
nop
invd
enter
inc
cli
add
test
fsts
imul
inc
in
sbb
fsubrl
js
lcall
movsl
add
add
and
mov
lea
mov
push
or
repnz
std
test
in
or
sbb
push
add
add
xchg
adc
push
and
cmp
nop
sbb
cli
pop
sbb
std
cmp
repz
aam
pop
iret
xchg
inc
mov
mov
add
imul
push
loop
jge
cmovb
inc
push
mov
mov
mov
adc
add
cmpsb
addl
add
pop
add
insb
cmp
sub
ret
inc
pushf
rcrl
mov
or
push
das
sarl
or
pop
addr16
inc
add
repnz
loopne
jp
xchg
les
jns
push
sbb
mov
add
adc
in
test
xchg
xchg
sbb
addl
jne
outsl
and
adc
fadd
xchg
xchg
in
lea
pop
mov
sbbl
pusha
mov
fnstsw
add
rclb
mov
mov
stos
push
add
cmc
fadds
pop
pusha
xorb
pushw
jbe
cwtl
dec
inc
insb
inc
or
outsb
repnz
test
lcall
enter
movsb
mov
xor
imul
mov
call
jne
jl
inc
cmpsl
loope
or
adc
mov
fisubrl
jle
arpl
add
mov
and
scas
xlat
add
dec
adc
and
sub
addl
adc
lret
cmp
inc
add
mov
loope
repnz
jo
outsl
jbe
sbbl
test
jmp
repz
lods
add
inc
xchg
ss
or
loope
xor
js
or
popl
imul
repz
add
mov
ljmp
mov
jno
cs
fisubs
pop
cltd
dec
ss
push
stos
ret
arpl
mov
mov
sbb
insl
shlb
xor
dec
jmp
xor
push
fcomps
or
arpl
aam
push
or
int
adc
xchg
cmc
dec
scas
shrb
fs
pop
and
jmp
mov
mov
popa
push
nop
lret
or
je
or
in
push
mov
icebp
ret
fisttpl
xchg
mov
add
jg
testl
fs
sub
shlb
jbe
lret
add
adc
aam
pop
xor
shl
cwtl
adcl
sbb
adc
xchg
sbb
pop
repnz
inc
out
out
pop
push
add
mov
cli
in
adc
shl
hlt
and
enter
cmpb
movb
cmpsb
std
sbb
sub
adc
ds
dec
adc
lods
inc
sbb
adc
mov
adc
pop
pop
or
add
mov
arpl
leave
cmpsb
cld
push
out
shll
sub
mov
fisttpl
nop
test
and
enter
mov
xor
fsubl
inc
push
sub
mov
sete
add
mov
xor
scas
js
xchg
loope
add
les
fmulp
nop
cwtl
shlb
sub
shlb
adc
pop
imul
mov
pop
adc
add
loopne
sbb
inc
xchg
pusha
cmp
bound
leave
loope
das
cwtl
cmp
jl
jbe
rcl
xchg
add
lea
outsb
adc
ret
inc
inc
icebp
xchg
add
stos
nop
cmpsb
popa
inc
outsl
adcl
add
repnz
fs
in
jmp
fwait
inc
dec
add
xchg
fmuls
add
push
add
into
enter
cmpsl
loopne
cmp
in
sub
pushl
push
pusha
aad
shll
dec
and
add
add
pop
imul
int
jle
dec
mov
or
sahf
add
cmp
cmp
das
mov
aam
loope
scas
and
lock
xorb
dec
jbe
sbbl
inc
adc
pusha
pop
aas
adc
shll
je
mov
mov
xchg
fs
cmp
test
pause
inc
stos
mov
fildll
test
adc
fsts
in
mov
inc
fildl
int
mov
push
or
enter
mov
fldcw
dec
xchg
add
inc
lock
cmp
rcrl
ret
or
xchg
psllw
addr16
in
ds
cmp
rcl
loop
sti
scas
pop
push
sbb
jle
push
or
sub
cmp
inc
sub
mov
add
fdivr
adc
xchg
in
popf
adc
cwtl
pop
in
scas
in
xor
jo
pop
pop
and
mov
lea
fs
test
xor
add
dec
adcb
inc
mov
jge
lcall
insl
jmp
cld
mov
mov
add
sbb
or
std
inc
ja
sbbb
add
mov
adc
or
mov
inc
inc
ret
pop
lods
pusha
or
mov
mov
add
mov
and
push
adcb
rolb
out
shll
push
cmp
test
mov
adcl
inc
or
mov
dec
sbb
mov
mov
adc
out
adc
in
lods
js
mov
mov
push
jne
xchg
mov
lods
adc
add
or
int3
mov
sbb
leave
orl
and
mov
ss
add
addr16
call
pop
inc
sbbl
and
and
fwait
add
popf
aad
push
push
sti
ds
dec
popa
stos
cli
imul
mov
cmp
adcb
movsb
popf
cld
lock
inc
fnsave
sbb
cltd
leave
arpl
mov
pop
lret
mov
add
icebp
fninit
sbb
sub
stos
fsub
sbb
mov
loopne
or
mov
loop
sbb
pop
iret
cs
aaa
push
cltd
adc
cmpb
cmp
mov
andl
push
xor
ja
add
fwait
xchg
xchg
jnp
inc
or
add
jno
cmp
sub
shrl
and
lret
in
les
add
andb
inc
add
or
int
and
lret
pop
xchg
add
or
mov
sbb
or
enter
jmp
mov
pop
outsl
sub
mov
jg
pop
movsl
mov
cli
add
lods
dec
ss
adc
pop
push
xor
jle
adc
ljmp
fstpt
into
ret
enter
add
and
lds
push
lret
dec
or
push
jecxz
xchg
mov
add
in
xor
fcompl
jmp
lods
mov
or
push
sub
sbb
popl
mov
rolb
mov
insl
jb
in
in
int3
add
adc
cmp
pop
fistpll
add
adc
outsb
inc
sub
adc
rorb
cmp
outsl
xchg
mov
mov
pop
pop
mov
clc
or
fidivrl
jl
loop
sub
sub
test
pop
lahf
add
mov
adc
or
mov
std
add
filds
jmp
or
cvtdq2ps
sbb
add
in
nop
scas
daa
jb
mov
mov
movsb
outsl
sti
sarb
or
scas
rclb
add
test
stos
es
sub
cmc
adc
addl
cmp
mov
lea
aam
pushf
sti
xor
scas
add
add
adc
sahf
ss
mov
lahf
sub
aam
pop
xchg
mov
es
push
dec
lods
push
ljmp
ret
orb
lahf
orb
cmp
push
sarl
insb
out
lds
lret
mov
loopne
mov
pop
dec
int3
adc
inc
loopne
aaa
cmp
push
decl
imull
fistpl
push
add
pop
jae
fidivrs
sarb
xor
jno
adc
andl
mov
fwait
aas
add
pop
cli
add
pop
leave
enter
and
int
add
push
addl
push
test
xchg
cmpsl
mov
arpl
adc
dec
add
sub
cmpsl
sbb
mov
jae
xor
or
add
fnstcw
arpl
inc
nop
clc
add
outsb
jno
and
xchg
xchg
jp
mov
clc
mov
jns
stos
inc
push
push
xchg
jecxz
aad
or
das
lock
pop
or
cld
fisubrs
pop
sbb
or
fldl
test
std
add
ja
int
mov
mov
stos
scas
mov
push
dec
xlat
andb
adc
popa
pusha
pop
add
rclb
pop
in
aam
mov
int3
addr16
xor
mov
sub
loop
inc
inc
and
rclb
in
add
mov
int3
cli
movsl
repnz
cmp
add
jno
sbb
xchg
scas
or
int
xor
fcomps
lahf
mov
clc
or
add
mov
inc
das
jns
mov
andb
add
cld
mov
js
add
daa
rorl
pushf
mov
cld
or
pop
xor
cwtl
pop
add
je
add
lds
sahf
adc
or
addr16
add
pause
movl
hlt
mov
mov
ljmp
stc
cmp
ds
add
adc
mov
out
push
lock
nop
insb
adc
pop
push
and
nop
mov
mov
jbe
add
data16
mov
ret
enter
pop
cwtl
dec
mov
lcall
xchg
mov
rorb
mov
in
rcrb
daa
push
sahf
sub
jl
inc
cmpsl
js
clc
adc
stos
in
jno
xchg
fsts
xorb
repz
dec
jmp
ret
or
nop
mov
loope
adc
mov
inc
out
fisubl
enter
lods
enter
or
sub
add
in
filds
flds
or
xchg
in
adc
xchg
aam
dec
sbbb
cmpsb
repnz
jno
arpl
xchg
xor
std
das
sbb
dec
cmp
and
lret
loope
dec
fprem
or
imul
nop
sub
pop
out
or
insb
fcomps
push
mov
adc
cmpsb
xchg
jge
mov
mov
or
pop
jnp
subb
insl
sub
xor
pop
ret
adc
mov
enter
add
pop
cld
sti
mov
xor
lret
xor
mov
popf
add
scas
cwtl
jg
xor
shlb
or
clc
inc
mov
mov
test
or
add
dec
sahf
jb
push
sbb
fbld
pop
sbb
int
sub
pop
leave
test
ficoml
add
scas
fisttpll
out
jmp
fcomps
stos
mov
pop
adc
cmp
data16
andb
ss
or
iret
enter
pop
add
sub
mov
push
sti
mov
pop
sahf
lods
inc
xor
xor
xor
imul
lods
mov
jg
inc
or
loopne
cwtl
pop
xchg
hlt
sub
push
mov
outsl
add
gs
lret
adc
cmpl
jge
subl
or
test
adc
add
add
aam
jl
mov
dec
out
js
and
lret
sahf
pop
sub
sbb
mov
mov
arpl
imul
mov
aad
test
mov
push
ret
repnz
adc
pop
test
xor
mov
pop
xchg
insb
das
xchg
repnz
in
mov
jb
xor
inc
adc
fwait
lret
mov
add
cmp
or
sbb
fiadds
addl
sub
add
cld
mov
test
sub
add
mov
cmpsb
aam
popf
mov
adc
pop
ljmp
ss
test
or
dec
xchg
jmp
in
data16
andb
inc
push
dec
loop
mov
inc
cmp
dec
cmp
add
mov
bnd
xor
push
cmp
lahf
lds
xor
inc
add
xor
jne
scas
adcl
repnz
pop
mov
push
xchg
fsubs
inc
imul
scas
ret
lahf
jno
push
cmp
push
sub
or
inc
pop
loope
enter
leave
rorb
jne
sbb
hlt
and
pop
sub
repnz
fs
dec
pop
and
stos
adc
icebp
cmp
dec
shlb
dec
aas
dec
sub
jg
cltd
pop
pop
jle
xor
idivl
and
sbb
and
icebp
jns
xchg
cld
add
int
loope
xor
jb
pop
inc
popa
inc
daa
jae
add
xor
add
or
lods
dec
xor
push
xchg
add
icebp
insb
cmpsl
xor
iret
xchg
push
inc
rcll
fnstcw
push
lods
add
pop
push
mov
fisubrs
mov
ret
mov
jns
ja
cwtl
xchg
sbb
ljmp
xchg
cld
add
pop
lods
lods
into
fs
mov
test
cltd
inc
testb
push
cmpl
or
shlb
hlt
cs
sbb
stc
leave
pop
or
dec
push
add
sbb
adc
inc
xor
iret
imul
inc
mov
sub
and
ficomps
outsl
jge
in
sbb
decl
pop
sub
pop
adc
or
jae
cmp
fwait
mov
insl
jp
or
add
filds
rcl
mov
and
int
in
add
pop
add
faddl
je
dec
insb
add
and
mov
subb
push
loopne
leave
arpl
xor
inc
add
iret
popa
pop
add
mov
out
and
pop
pushf
xorb
call
xor
mov
dec
cmp
push
cld
push
add
xor
and
or
js
cmp
push
inc
mov
lahf
adc
adc
aas
movsb
mov
popa
fwait
outsl
mov
stc
insl
mov
mov
inc
xchg
outsl
out
stos
sbb
cmpsb
into
add
or
jnp
fstpl
enter
arpl
repz
subb
adc
cmp
sahf
add
test
sub
scas
cmpb
and
xor
test
jge
add
jns
sub
and
pop
dec
pop
nop
add
add
outsb
fiadds
xor
ljmp
inc
adc
pop
mov
outsl
outsb
stc
sub
sti
fs
xchg
add
dec
lock
inc
mov
aas
or
mov
scas
adc
divb
lods
add
cwtl
cmpsl
sub
add
sub
test
adc
cmovae
test
ja
add
sbb
pop
pop
jg
loopne
movsb
popa
adc
fcmovnbe
cwtl
and
lret
xchg
add
mov
cmp
aad
and
jmp
or
bound
inc
jmp
adc
ret
xchg
dec
insb
test
cmpsl
mov
cwtl
inc
xorb
inc
sub
repnz
add
in
or
das
mov
mov
mov
cwtl
inc
sahf
xchg
fldcw
les
js
mov
mov
sub
or
shll
xchg
in
ss
inc
fwait
mov
pop
clc
xadd
inc
sub
adc
push
or
roll
jb
fmuls
mov
js
shlb
inc
adc
scas
sub
or
in
pop
add
sbb
addl
push
pop
cmp
adc
ds
add
shrb
movsb
pop
inc
loopne
pop
scas
movsb
xorb
cmp
inc
arpl
pop
stos
sti
push
movsb
movsl
into
test
pop
xchg
pop
sbbl
mov
add
movsb
js
add
in
inc
push
dec
or
and
in
cwtl
inc
fcmovu
je
pusha
xchg
sbb
test
cmp
xchg
inc
push
dec
pusha
or
jp
xor
xchg
add
push
jns
cmpl
loop
and
mov
mov
dec
std
notb
push
mov
inc
jl
add
aam
loop
mov
and
rcl
fadds
adc
aaa
popa
subl
aas
adc
dec
icebp
add
dec
popf
xor
rorl
aad
mov
mov
pushf
cmp
add
mov
or
lret
pushf
jbe
stos
mov
shrb
stc
psraw
les
fildl
dec
addr16
fcoml
push
push
and
movzbl
mov
pop
scas
mov
pop
xlat
add
dec
cmp
push
insb
pop
xchg
sbb
lock
and
push
xor
lcall
xchg
lock
repnz
pop
in
push
int
loope
xchg
mov
orb
sti
cli
push
loopne
into
cmpsl
or
jno
inc
dec
hlt
push
push
adc
add
or
cmc
add
or
xchg
add
push
rorl
xchg
int3
adc
add
ljmp
lret
inc
xor
add
inc
aas
test
inc
enter
ret
mov
aam
nop
xchg
xor
xor
adc
add
popf
xchg
jnp
mov
pop
repz
xchg
cmp
xchg
sub
pop
and
xchg
add
and
add
lds
stos
lock
xchg
inc
jmp
jo
add
adc
leave
repz
rcrb
outsb
popf
aam
push
sub
ds
insb
cmpl
rcl
mov
pop
mov
inc
xor
push
xchg
into
sub
stc
and
movsb
faddl
inc
sbb
adc
cmpsb
flds
push
int
xlat
lret
add
mov
jecxz
xchg
cmp
xor
inc
cltd
addr16
adc
add
xchg
sub
or
andb
pop
mov
call
dec
lock
enter
ljmp
add
addr16
add
pusha
inc
add
push
shrd
sbb
icebp
push
cmpsl
push
sbb
xor
adcb
cmp
push
movsb
cs
sub
sarb
sar
xor
inc
jns
sub
pop
and
rcrb
or
int
andb
mov
cwtl
cmpsb
nop
jne
les
xchg
push
lods
sub
out
and
into
add
int3
aam
or
fdivr
mov
mov
lods
and
push
jle
jg
xchg
in
add
sbb
sbb
stc
mov
lock
add
lret
fs
out
mov
inc
icebp
testb
cmp
int
test
add
popf
pop
les
and
fldcw
and
test
inc
mov
movsl
lock
sti
and
jmp
xchg
les
mov
pop
xor
sub
lret
jl
xchg
clc
and
gs
mov
adcl
adc
or
and
imul
out
jbe
jecxz
xchg
push
outsl
push
sbb
push
stc
sti
xchg
inc
inc
and
out
mov
cli
mov
or
pushf
cld
fs
popf
ret
adc
pop
cmpb
dec
decl
sub
cmp
add
inc
pop
aad
inc
cmp
repnz
loopne
jo
sbb
add
push
or
add
out
pop
out
addb
sbb
fadd
fisubrl
inc
into
mov
sahf
xchg
mov
pop
lret
add
push
mov
pcmpeqw
pushf
std
pusha
insb
in
cwtl
adc
pop
xchg
jl
dec
aam
adc
xchg
div
andb
adc
jae
xchg
cmp
add
dec
lods
adc
inc
mov
les
setne
xor
mov
push
add
sbb
mov
jl
add
mov
aam
mov
or
jae
call
cmp
fstl
lret
xchg
jo
dec
jbe
js
fistl
cwtl
repz
jb
sub
lock
cmp
inc
inc
cmp
lock
adc
cmpsl
je
mov
es
add
xor
mov
cmpsl
cwtl
sbb
leave
sub
imul
cmpsl
xchg
push
inc
fwait
stc
push
pop
xchg
cwtl
xchg
xor
mov
fucomp
adcb
mov
pop
mov
xor
adc
adc
xchg
xor
rclb
mov
sub
add
jns
into
rorl
mov
cs
or
push
cmp
and
xchg
pop
add
and
es
sub
sub
add
enter
in
mov
sbb
and
add
ret
pop
mov
jb
jge
cmp
repz
adc
or
mov
arpl
dec
cwtl
nop
xorb
xchg
xor
add
push
movsl
jns
sub
add
mov
lods
or
sbb
xchg
in
data16
and
push
inc
and
or
sbb
loopne
in
xchg
sub
xchg
jl
push
inc
pusha
inc
negl
and
mov
and
sub
sub
lahf
mov
imul
sbb
and
clc
in
pop
dec
add
cmpsb
adcl
jne
add
push
push
fwait
in
xchg
mov
test
fldcw
scas
fldl
in
inc
iret
cmp
or
fchs
into
sarb
insb
cmpsl
xor
rolb
in
pop
aad
mov
xchg
loop
into
inc
add
movsb
lcall
test
pop
repnz
cwtl
call
add
test
cs
add
lret
dec
loop
pop
add
rorl
cmp
rorl
sbb
cmpsb
shlb
push
xor
xlat
adc
fst
fmuls
not
mov
xchg
sti
mov
add
push
fucom
jmp
pop
jb
add
mov
fs
ja
xchg
movsb
es
xlat
pushf
dec
mov
xor
push
pop
mov
jecxz
fwait
insb
int
push
or
push
jp
lret
xorl
mov
nop
dec
lock
xor
aam
fdivl
ret
loope
add
mov
cld
xor
pop
sub
fiadds
nop
xor
cltd
fcoms
icebp
xorb
lods
popf
scas
rolb
sub
outsl
adc
rorl
shlb
dec
mov
in
outsl
adc
xchg
pusha
push
stc
jns
sbb
adc
in
or
xchg
pusha
fnstenv
xor
aaa
test
icebp
test
inc
fstpl
add
popl
incb
es
mov
pop
andl
enter
ficoms
inc
punpckhwd
fisttps
mov
stos
xor
adc
into
test
sbbl
inc
add
pop
jae
add
push
push
push
pop
inc
dec
rol
inc
lret
mov
and
adc
icebp
cmp
cmpsl
cwtl
sbb
add
xchg
inc
cmp
jp
mov
cwtl
nop
outsb
sbb
push
push
dec
adc
add
ret
dec
test
mov
fmuls
sub
lods
inc
push
cld
lea
ret
add
scas
xlat
push
or
inc
and
adcb
inc
pop
sbb
fnstcw
shll
add
mov
sbb
fwait
xlat
add
mov
pop
pop
idivl
orl
lret
sbb
outsb
and
arpl
sbb
sub
push
cmc
cmpsl
mov
dec
mov
fwait
jbe
pop
add
insb
xor
inc
add
dec
popa
adc
loopne
arpl
push
iret
adc
adc
cs
enter
dec
sub
push
jb
xor
out
mov
pop
std
add
cmc
stos
xchg
sub
out
pop
push
xor
mov
push
mov
ja
sbb
and
jmp
dec
lret
inc
rcll
sbb
call
push
sbb
cld
sbb
fidivrs
out
je
pop
aaa
push
add
test
popa
push
aas
add
cmpl
iret
dec
push
dec
negb
push
adc
inc
jns
jns
daa
dec
insb
sbb
dec
mov
adc
cmc
jg
stos
sbb
fisttps
negl
test
in
insb
add
cli
fcom
pop
and
cltd
pop
shl
jecxz
test
push
or
cmp
cmp
mov
or
inc
pushf
adc
mov
add
push
add
lock
imul
cmp
dec
into
add
mov
leave
gs
adc
mov
lock
ss
sub
and
nop
and
sahf
sbb
sbb
dec
or
xchg
or
shll
adc
xchg
add
jl
adc
leave
pop
test
aad
xchg
cltd
mov
xchg
dec
mov
pushf
dec
xchg
add
dec
test
bound
insb
push
sub
in
add
sbb
popa
nop
mov
inc
add
aad
sbbb
jbe
roll
mov
out
fwait
add
negb
adc
push
incl
out
testb
iret
jg
and
xchg
sarl
nop
xor
ds
pop
ret
adc
pusha
xor
scas
pusha
stc
jns
sbb
jae
fucom
or
or
lret
adcl
xchg
mov
inc
xchg
push
in
push
fs
test
aas
jns
popf
stc
aas
addl
loopne
dec
in
add
test
add
adc
scas
jbe
in
add
in
leave
nop
adc
jp
or
xchg
adcb
hlt
add
lahf
and
orl
sub
mov
aam
xor
popa
add
xchg
mov
and
les
cs
shrl
hlt
pop
out
fldl
notb
scas
repnz
mov
enter
cld
xchg
repnz
cmp
add
movsb
dec
lcall
neg
push
outsb
in
add
movl
cmp
cmc
add
vmwrite
ds
push
xchg
icebp
add
xor
sbb
js
lcall
add
clc
popf
test
cmp
mov
add
cmpsb
sahf
push
mov
movsb
mov
pop
enter
loop
sbb
push
mov
pop
sbb
add
pop
or
movsb
xchg
add
arpl
lret
fidivrs
jp
sahf
sub
loop
cwtl
out
pop
rolb
xchg
arpl
push
jl
out
ljmp
call
lods
mov
jl
in
lds
int
insb
mov
add
xor
nop
cmp
push
push
mov
cmpsb
ret
shlb
enter
xor
sbb
push
into
jl
push
mov
push
and
nop
push
xchg
ret
or
lret
add
ja
adc
jp
add
push
into
js
mov
xor
lods
test
faddl
jmp
mov
int3
pop
ret
inc
push
fstps
jmp
cmp
add
sub
dec
sbb
mov
and
mov
sub
cmp
hlt
je
loopne
repnz
adc
push
jnp
ja
xchg
scas
push
push
mov
sar
xchg
add
push
adc
mov
andl
adc
or
jns
xchg
sbb
cli
lcall
or
jae
cs
sbb
nop
aaa
xchg
push
dec
dec
cmp
je
test
or
pop
rcll
ja
cli
iret
jge
les
sbb
xchg
jl
cmpsb
mov
adc
fs
mov
dec
nop
int3
shl
test
add
mov
mov
xor
cmpsl
pop
add
fs
out
cwtl
inc
pop
pop
xchg
xor
lret
and
int
sbb
popa
xchg
repnz
unpcklps
movsl
mov
mov
or
mov
es
adc
pusha
scas
cmpl
int
cmp
add
addl
lds
xor
cltd
add
sub
mov
pop
lcall
add
movsb
mov
leave
stos
aam
pop
cmp
mov
jnp
loopne
sti
into
cltd
push
enter
cmp
jg
push
mov
dec
cmpsl
ficompl
mov
or
push
adc
hlt
or
adc
popa
pop
inc
test
pop
lods
and
jns
or
push
mov
mov
pop
add
stos
xchg
sub
popa
mov
xor
xchg
xor
cli
dec
movsb
push
cld
mov
es
and
mov
or
loope
inc
call
add
push
mov
hlt
fadds
cmp
add
in
pop
pop
sahf
adc
push
data16
pop
cmp
xchg
push
cld
mov
int
sub
fwait
clc
jne
add
and
push
pusha
into
sqrtps
or
rolb
cli
jbe
sub
bound
dec
orb
fcomps
adcb
icebp
push
ja
nop
sbb
xor
notl
iret
arpl
dec
pop
gs
sahf
adc
in
and
es
inc
popa
push
pop
cmp
add
and
adc
in
adc
mov
lret
cli
jmp
je
jbe
push
aaa
add
and
xchg
leave
adc
add
add
lahf
in
dec
pop
je
data16
pop
sub
test
sub
call
jbe
inc
in
je
pop
push
mov
jnp
into
sarl
add
out
outsl
test
or
push
pushf
push
pop
push
xor
sbb
subb
xchg
out
lea
mov
and
lret
dec
movb
jb
mov
jmp
mov
add
and
or
sbbb
mov
inc
lret
add
jecxz
mov
ret
add
bound
mov
jo
xor
scas
int
imull
orb
push
sbb
orl
cwtl
imul
dec
jle
add
rsqrtps
adc
sub
jge
add
lahf
or
add
in
iret
addr16
push
fs
movsb
int
mov
adc
xor
enter
sbbl
faddl
aas
cmpsl
incl
dec
mov
add
xor
add
jle
mov
mov
xor
mov
jb
sub
inc
lcall
lock
lds
jge
mov
hlt
fs
xchg
cwtl
adc
arpl
movsb
dec
test
dec
leave
adc
adc
aam
add
arpl
add
stc
int3
pushf
sub
xchg
add
pop
sub
popa
movhps
ss
stc
cmp
or
lret
pop
das
dec
or
and
mov
lcall
mov
pop
lds
dec
loopne
iret
or
adc
cltd
mov
or
call
xor
lds
mov
movsl
mov
stc
push
in
loop
shr
and
xor
push
decb
mov
rcrb
idivb
and
xchg
fdivrs
ja
sbbb
dec
cmp
pop
pop
xchg
stos
push
jmp
out
mov
xor
icebp
shll
movb
int3
fisubl
pusha
sbb
leave
cmp
or
jns
push
sub
pop
pop
aad
imulb
sub
jo
out
movsl
mov
cmpsb
lcall
or
mov
cwtl
dec
stos
mov
jmp
js
cmp
jns
ljmp
push
mov
xor
sbb
xchg
mov
aam
xor
adc
aad
jg
cld
shrl
xchg
ret
push
push
mov
or
es
and
ret
popa
and
or
jb
add
cmp
sbb
sub
movsb
mov
add
loope
pop
repz
xor
jle
adc
add
imul
ja
fsts
pop
lock
popf
or
sarb
push
sub
xchg
or
mov
mov
inc
mov
addr16
outsl
outsb
fildll
bound
wbinvd
sbb
pop
lahf
adc
and
negb
add
scas
push
lock
call
adc
add
add
sub
cwtl
lcall
xchg
or
imul
cli
clc
je
xchg
loope
mov
xchg
dec
call
das
push
int3
aaa
out
mov
dec
sbb
xchg
add
dec
test
dec
ret
adcb
mov
mov
add
test
mov
push
add
fmul
cmp
ror
add
jge
cltd
adc
push
push
imul
bound
sub
add
flds
cltd
out
sub
or
hlt
sahf
test
adc
int3
pop
movl
or
add
outsb
jmp
pop
xor
call
je
add
push
jl
sbb
jle
mov
lock
adc
xor
clc
xor
popf
cmp
mov
inc
push
gs
in
cwtl
mov
sarb
aas
push
dec
scas
jbe
testl
xchg
cwtl
push
aam
add
sbb
adc
clc
add
pusha
cltd
add
test
cmp
xchg
pop
inc
test
in
into
mov
pop
xorb
cs
cmp
jge
es
dec
mov
cmp
or
push
push
xor
mov
cmp
lds
cld
out
and
clc
jae
xchg
out
pusha
cmp
dec
ds
sbb
daa
mov
inc
pop
mov
clc
or
ss
add
jnp
xchg
inc
rorl
xor
add
mov
adc
nop
and
and
test
dec
movsb
add
icebp
add
or
imull
outsb
aaa
sbb
sub
xlat
fwait
movl
repz
or
sbb
daa
add
add
lahf
repz
lock
out
in
es
or
inc
cmp
shlb
ljmp
out
and
mov
call
add
jne
mov
imul
das
out
dec
pop
dec
loopne
or
movsl
mov
pop
sub
jmp
add
ficoms
int
loop
es
andl
push
test
inc
sbb
addl
loopne
inc
xchg
cmp
push
cmp
mov
sbb
int
adc
xchg
adc
inc
lods
dec
mov
js
ret
xorl
jecxz
shufps
and
add
push
adcl
jnp
mov
lea
das
addr16
mov
sarl
add
fs
gs
xchg
lcall
jae
push
out
add
test
and
lods
or
lcall
clc
shll
add
xor
aaa
mov
pop
add
lds
popa
add
ds
and
iret
add
into
mov
mov
dec
pop
dec
loope
lods
cli
arpl
repz
push
stc
add
rcll
xchg
pop
mov
sub
fisubs
mov
add
clc
mov
jge
sbbb
movl
loopne
mov
popf
stos
mov
add
cmp
mov
add
ret
dec
inc
popf
and
pusha
fisubrl
aas
adc
movsb
add
and
xchg
test
test
mov
xchg
dec
mov
jo
jecxz
and
out
cmp
cltd
aaa
mov
es
call
adc
add
or
fcomps
push
sbb
lds
add
mov
sbb
add
pop
inc
iret
xor
sub
adc
shll
loop
and
pushf
dec
jp
test
sub
xchg
and
adc
mov
into
xchg
xchg
sbb
push
adc
sub
jno
lods
sbb
cmp
xchg
jmp
jns
jle
and
xor
out
repnz
ljmp
std
es
pop
and
popa
add
cmp
subb
mov
pop
andb
xor
mov
test
sbb
sub
inc
adc
xor
cmp
and
ja
call
xor
fnstenv
popl
cs
add
jb
imul
dec
pop
inc
jae
ret
jle
jg
sub
pop
or
mov
xor
jecxz
sbb
xor
lahf
add
sahf
dec
jle
pop
cli
mov
popf
push
jl
shrb
pop
lahf
call
arpl
fadds
jg
cmp
or
xorl
movaps
adc
xchg
and
call
pusha
frstor
lahf
or
mov
inc
pop
xchg
outsb
add
icebp
push
sbb
and
ffree
add
iret
push
add
jb
dec
sub
movsl
push
xchg
rolb
xchg
enter
xchg
std
jae
mov
xchg
nop
cmp
out
sbb
jns
xchg
jge
pusha
stos
xchg
lods
or
add
stos
xchg
mov
hlt
mov
sub
into
mov
jle,pn
jno
sbb
push
and
mov
mov
push
cmpsl
insb
jl
mov
inc
dec
jb
inc
test
xchg
daa
or
xor
inc
aas
jo
add
mov
ficoms
or
or
inc
and
adc
mov
int3
repnz
sub
mov
push
push
sub
cmc
movsb
or
cmp
sub
pop
popa
xor
clc
fcomip
inc
adc
rolb
add
or
pop
cmpsb
add
mov
in
and
pop
push
sub
sub
insb
js
jecxz
test
nop
mov
sbb
add
lcall
sbb
sahf
arpl
push
inc
add
imul
cli
add
and
add
sbb
sub
jge
pop
inc
mov
fdivrl
fiadds
xor
add
or
jmp
js
add
xchg
adc
xchg
inc
aam
loopne
xchg
nop
sbb
es
or
icebp
hlt
iret
fimull
add
imul
pop
or
movsl
push
mov
call
adc
pop
testl
push
scas
add
or
es
dec
into
fmull
ret
dec
jmp
loopne
jae
adc
lods
inc
pop
and
cmp
cmp
mov
in
adc
xchg
stos
testb
or
js
test
add
lock
loopne
mov
add
push
or
rclb
jae
les
and
xlat
jl
rcr
xchg
and
nop
push
adc
movsl
and
lea
mov
stos
jae
inc
adcb
je
or
dec
mov
cli
jge
jmp
add
in
jg
daa
jo
ja
insl
lret
test
insb
inc
adc
adc
into
lcall
pusha
jne
cmp
add
imul
sub
pushf
add
adc
cmp
xorb
cs
pop
sbb
stc
xor
pusha
add
mov
xor
aad
xchg
inc
out
mov
int3
mov
jo
out
inc
fcoml
sub
push
jg
in
add
int
push
jl
xor
xor
sub
sub
add
js
int3
ljmp
dec
adc
pop
mov
movsb
sub
mov
fcoms
sbbb
nop
add
adc
int
lock
or
enter
nop
and
nop
xchg
push
push
mov
dec
and
dec
push
add
or
sbb
lds
clc
movsl
jno
add
enter
jo
adc
xchg
aas
sub
pop
mov
icebp
sbb
dec
adc
sub
adc
dec
dec
add
test
pop
inc
fs
and
cld
push
add
call
test
das
adc
lock
xchg
add
sub
xlat
mov
jge
lods
add
je
daa
and
sarl
movsb
xchg
out
sti
adc
adc
test
and
das
pop
add
idiv
mov
es
jo
jno
fcomps
std
jae
loopne
movsb
pop
add
adc
cld
pop
mov
movsb
inc
pushf
pusha
mov
dec
repnz
lods
rcll
or
orb
cwtl
xchg
push
xchg
and
bound
pop
aaa
inc
lods
out
enter
movl
inc
add
out
inc
xlat
bnd
hlt
outsb
xor
or
lock
int3
cmp
sub
jno
addr16
mov
push
movsb
test
loop
jns
add
mulb
out
jle
add
nop
ljmp
jo
lahf
pop
orl
jecxz
in
push
fsubl
push
mov
sbb
and
pushf
push
add
loopne
int
sub
pop
add
adc
jg
inc
pusha
add
ret
enter
sbb
add
rorl
arpl
inc
je
mov
dec
test
sarb
in
jne
add
mov
bound
jb
jno
test
psubusb
jle
add
push
add
mov
andb
sbb
add
xor
or
out
jbe
xor
pop
ret
fcompl
dec
stc
mov
rep
cmp
and
int3
add
ret
add
cwtl
pusha
clc
ds
cwtl
jo
fwait
sahf
mov
into
add
push
cwtl
int3
cltd
mov
test
es
sbb
push
or
or
sbb
or
push
add
data16
call
inc
out
stos
add
add
push
mov
aaa
add
xchg
sub
shlb
arpl
lcall
mov
xor
push
cmp
xchg
jp
ljmp
sahf
add
jne
and
das
and
inc
ds
sbb
mov
mov
lahf
push
in
add
pop
ja
popa
cmp
call
mov
pop
mov
pop
xor
test
and
cwtl
inc
xlat
push
pop
mov
shll
out
add
faddl
sub
in
ret
pop
lods
dec
push
lods
nop
and
pop
aad
or
mov
jbe
mov
xchg
add
add
aas
push
xchg
add
xor
sbb
cmp
jg
pusha
mov
lea
xchg
add
mov
or
or
loopne
repz
lcall
push
add
xchg
adc
iret
inc
jl
sub
test
fcoms
inc
mov
das
xor
mov
xor
cmp
xchg
sbb
pop
pop
int3
jb
cmp
jle
test
adc
je
lods
jge
add
add
rcrb
add
cs
pusha
push
xchg
xchg
rcll
adc
add
or
push
mov
insb
leave
add
mov
or
sti
es
fwait
pushf
xchg
mov
stc
int
ret
xchg
mov
inc
or
das
cltd
inc
loopne
adc
or
mov
mov
loope
rorb
add
add
inc
mov
xorl
cwtl
pop
test
lahf
loopne
sub
xchg
ja
jo
and
leave
nop
loope
sbb
mul
repz
jg
pop
rcrl
sub
sbbb
jb
loopne
dec
or
add
stos
inc
iret
sahf
out
sbb
add
scas
add
jge
pop
and
xor
sub
out
mov
rolb
ja
not
loop
insb
xor
fcompl
popa
cltd
out
mov
mov
add
or
enter
jg
cmc
in
dec
divb
add
and
lods
jp
and
sub
ret
push
jl
mov
jecxz
in
push
ffree
fdivrs
loopw
xor
add
popa
cmpsb
ret
enter
xor
dec
inc
xchg
xor
mov
out
stos
pop
fisubl
cmp
lds
xor
and
xlat
mov
outsl
out
add
jecxz
add
xorb
shl
pop
cmp
fildl
sub
or
shrb
add
mov
loopne
adc
mov
inc
ret
add
test
jbe
pop
xchg
enter
pop
ror
mov
inc
into
inc
les
les
movsl
mov
and
test
mov
push
add
dec
data16
adc
jg
xchg
sub
and
and
mov
push
jnp
in
and
xor
inc
and
jbe
cmpb
jo
pop
outsb
cmc
ret
nop
sar
mov
das
dec
dec
in
sahf
inc
cs
push
fs
pop
rolb
xchg
mov
adc
rclb
dec
fstpt
inc
add
jns
arpl
pop
fdivrl
mov
jp
std
sub
push
xor
push
and
adc
xchg
inc
mov
pop
mov
stc
pop
xor
and
les
mov
add
sarl
jae
enter
add
inc
mov
cld
in
mov
jle
gs
jo
lea
sub
ds
pop
repz
ljmp
cmp
mov
push
pop
jl
fs
jp
pop
mov
rcrb
or
sbb
sub
jle
mov
in
or
sbb
inc
inc
inc
jle
test
jmp
rcrb
lods
fisttpll
xor
pusha
jge
push
jg
dec
xchg
adc
inc
mov
add
addr16
fsubl
adc
cltd
jp
fdivrl
nop
pusha
xchg
inc
mov
jne
jmp
mov
mov
push
lock
ret
xchg
or
adc
roll
insl
pop
ret
cmp
sub
loopne
xor
ds
add
mov
push
xchg
xchg
je
addl
cwtl
es
jg
sub
movsb
sbb
xor
mov
cmp
inc
xor
add
sbb
jg
add
dec
repnz
push
mov
or
push
int3
cltd
dec
mov
jo
dec
jmp
imul
cltd
pmulhuw
sub
sarb
inc
icebp
mov
testb
lcall
or
sbb
popf
int3
add
jno
jmp
mov
mov
jno
add
mov
pop
jp
pop
and
jo
shll
js
sub
mov
lods
sbb
sbb
shrl
sbb
fnstsw
addb
mov
xchg
or
cld
jo
mov
or
lods
stos
andb
orb
pop
test
mov
add
and
popa
inc
jge
clc
lret
femms
out
jb
adc
es
xchg
mov
push
cmp
les
cmp
pop
mov
sub
movsb
in
mov
in
cltd
sbb
jno
add
mov
dec
das
lock
sbb
adc
lcall
push
jnp
pusha
dec
mov
xor
jle
arpl
test
pop
repnz
cmp
adc
cltd
leave
dec
movsb
dec
mov
or
add
jle
mov
xlat
sbb
add
or
popa
mov
adc
add
dec
imul
and
in
push
or
adc
sbb
mov
xchg
insb
mov
sti
mov
mov
and
popf
imul
cwtl
sub
sub
pop
and
bound
fcompl
cmp
or
lcall
shll
sub
add
push
outsb
cwtl
xchg
fcoms
mov
and
xchg
jge
es
xor
inc
ds
fisubrs
andb
bound
cmc
xor
ret
adc
xchg
mov
hlt
lea
xor
add
and
in
les
or
dec
pop
xor
pusha
ret
sub
popf
out
loop
fs
push
pop
sub
int3
loopne
sete
add
dec
jo
pop
or
or
rclb
mov
adc
fwait
push
jnp
cli
xlat
adc
push
movsb
and
xorl
inc
mov
mov
mov
aaa
insb
flds
inc
aam
dec
hlt
and
pushf
in
adc
movsb
loope
cs
cmc
inc
sbb
xchg
stc
repnz
xchg
in
xor
push
add
sub
jae
leave
add
mov
rclb
cmp
lea
add
sbb
and
bound
stos
ret
sub
fsts
adc
xor
lea
lret
lods
pop
add
dec
in
add
push
add
pushf
inc
pop
test
outsl
int
adc
add
inc
ja
sub
add
jae
int
movb
shlb
xchg
scas
pop
in
gs
in
movsb
add
inc
decl
jl
cld
out
pop
adc
leave
add
xor
add
in
add
pop
clc
bound
cmp
out
add
fisubrl
xchg
add
lahf
sarl
jle
mov
add
cmpsb
shrl
xchg
jmp
adc
loop
repz
stos
out
dec
cmp
movsb
loope
out
xor
aaa
outsl
add
push
or
add
out
inc
inc
enter
nop
add
jge
insb
xor
gs
mov
sbb
adc
je
test
stc
orb
shl
je
inc
or
push
rol
inc
out
daa
in
dec
cmp
sahf
mov
lods
push
add
popl
add
rorl
iret
adc
subb
mov
mov
xchg
rcll
mov
cmpsl
andb
add
sarl
dec
jo
pop
lock
dec
fsts
dec
xor
mov
mov
pop
add
mov
insb
add
jno
test
mov
add
xor
cmp
lds
jmp
push
inc
negb
ja
dec
add
arpl
mov
sbb
jo
sbb
mov
pop
or
mov
jo
subb
shlb
xchg
inc
ret
jg
fadds
scas
jge
mov
mov
push
jne
es
mov
add
sarl
dec
sti
clc
sbb
ja
ret
pop
sahf
xor
xchg
fdiv
call
js
dec
mov
fsub
ret
fsubl
adc
sub
or
es
cmp
sbb
fld
in
leave
dec
add
addr16
jmp
sbb
xor
mov
lahf
sahf
mov
fdivs
pushl
loope
fldt
pop
xchg
and
daa
hlt
adc
rolb
xchg
std
mov
mov
cmp
or
sub
jno
pusha
add
ja
pusha
mov
pop
or
jecxz
rep
or
mov
sbb
and
adc
jle
inc
sub
pop
test
mov
jg
mov
movsl
push
inc
lret
loopne
repnz
sub
push
inc
sub
lock
inc
xchg
loope
mov
push
movsl
mov
jbe
add
roll
push
inc
add
sub
inc
out
add
dec
and
inc
rcr
iret
xchg
or
popa
outsb
and
shl
mov
inc
ret
cwtl
dec
pushf
test
xchg
push
or
pop
divb
movsb
push
xorb
popf
or
jge
push
in
or
lret
and
cwtl
pop
push
adc
sub
pushf
pusha
jp
int
or
jl
mov
cld
mov
or
out
or
lods
lods
xchg
popl
test
lret
insl
xor
push
adcb
push
add
or
fwait
mov
mov
or
data16
adc
jo
pop
xor
mov
xchg
daa
es
in
inc
or
xchg
pop
sti
or
cmp
jl
movsl
cmp
jns
add
pop
in
mov
cwtl
add
rorb
int
sub
sub
mov
loop
mov
jle
cwtl
dec
cmp
sbb
loope
inc
or
xchg
cmp
inc
fisttpl
xor
sub
sub
out
out
and
dec
out
les
add
loopne
mov
lahf
xchg
ja
push
sbb
mov
xlat
test
or
mov
jo
inc
jl
inc
popf
ret
jne
xchg
mov
mov
mov
and
inc
pop
jno
jb
add
lea
mov
adc
popf
addr16
dec
scas
enter
inc
inc
pusha
pop
sti
movsl
or
jle
fs
adc
repnz
rol
push
add
fildll
add
push
nop
jnp
sbb
add
xor
shrl
push
mov
jle
aam
cmpb
xor
inc
xor
dec
test
mov
sahf
pop
and
cwtl
in
adc
frndint
sub
cmp
xor
mov
xchg
mov
push
dec
xchg
and
push
add
sbb
nop
push
or
xchg
adc
adcb
imul
and
adcb
sub
je
sub
cmp
mov
enter
cwtl
xchg
mov
sbb
arpl
mov
xchg
and
movsl
mov
mov
outsl
imul
repnz
add
icebp
ret
mov
mov
or
sar
add
in
or
stos
aam
mov
mov
es
sbb
push
hlt
test
xchg
adc
lods
lock
icebp
fmull
add
stos
push
inc
push
movsb
xor
and
pop
jg
aaa
idivl
stos
sub
lods
addb
pop
cmp
cwtl
mov
mov
push
inc
inc
nop
mov
pop
inc
mov
mov
add
std
cmp
pop
mov
or
movsl
scas
test
in
rclb
cmp
lods
mov
lock
or
es
jp
pop
mov
popa
sahf
dec
pop
cs
jg
mov
cmp
pop
and
add
jp
fidivs
inc
pop
pop
cmp
mov
mov
test
push
in
mov
pop
out
test
lock
add
sbb
dec
pop
pop
dec
and
xchg
mov
stc
sbb
add
xor
test
ds
inc
adc
nop
lods
inc
mov
and
sbb
rol
cld
xor
les
inc
test
push
mov
pop
push
cltd
pushf
aam
and
insb
xlat
xor
xchg
or
je
mov
mov
mov
sbb
rcl
lods
cmp
add
jl
andl
and
int3
and
mov
enter
mov
lret
rcl
insb
rcl
sub
mov
or
or
add
mov
push
cs
adc
or
xor
sub
aaa
fistps
or
loope
gs
mov
dec
jge
push
nop
das
and
cmp
jne
jbe
jnp
add
xchg
xchg
inc
lods
movsb
or
xchg
jb
les
mov
cmp
inc
adc
in
mov
xlat
adc
lret
pop
leave
mov
pusha
cld
xchg
inc
mov
inc
loopne
daa
or
xor
fwait
add
jno
icebp
mov
popa
es
loop
add
dec
adc
xchg
out
sbb
push
loopne
push
jo
les
sbbb
aaa
mov
xor
aas
push
add
scas
fadds
add
push
xor
xchg
faddl
gs
sub
cmp
in
in
xor
andl
jecxz
and
nop
xchg
inc
add
lods
sub
fdivs
cmp
pop
out
add
aam
kmovw
mov
nop
call
clc
add
in
int
dec
push
xor
xor
arpl
or
jne
jns
add
insl
jnp
or
sub
xor
adc
div
dec
jg
push
xchg
lock
cmp
add
pop
cmp
les
add
lods
jae
pusha
cmp
dec
xchg
mov
lods
push
xlat
clc
dec
xor
add
mov
mov
push
int3
add
push
cmp
push
and
cwtl
sti
xchg
mov
inc
inc
scas
xor
and
mov
loopne
add
fmull
jmp
pop
adc
push
mov
add
xlat
and
sub
cltd
pop
adc
or
and
iret
in
add
mov
cwtl
clc
inc
test
in
dec
and
inc
pop
lret
add
stc
lea
mov
clc
sbb
cwtl
jbe
xchg
out
cld
imul
cmp
add
or
fwait
cltd
mov
add
and
xor
jecxz
in
rolb
addb
loopne
pop
or
xchg
adc
mov
flds
sbb
mov
add
out
sti
jbe
test
jg
sub
out
xchg
add
aas
out
cltd
xchg
or
and
pusha
std
pop
adc
or
inc
repnz
inc
fs
cwtl
adc
ror
push
pusha
add
pop
ret
push
cmp
sbb
sub
sbbb
mov
mov
pop
dec
adc
push
adc
sbb
cmp
mov
cmp
sti
sbbb
jae
xor
adc
nop
jl
ljmp
mov
shrl
or
push
inc
dec
mov
lods
sub
add
mov
rol
push
xor
movsb
loopne
add
sbb
pusha
cltd
call
repz
bound
daa
adcb
jecxz
rorb
inc
jmp
push
jbe
cwtl
mov
sahf
jno
daa
ret
jo
push
sbbl
sbb
sbb
es
enter
xor
push
add
pop
mov
call
mov
cmp
in
mov
into
test
cwtl
adc
push
add
adc
outsl
inc
mov
add
aad
or
mov
gs
jno
shrb
repnz
mov
push
enter
fwait
or
sub
and
mov
sbb
cwtl
inc
cs
movsb
andb
mov
cmpsb
cwtl
inc
mov
int
cmp
and
out
add
stc
cli
outsl
pop
fs
fisttpll
push
jbe
imul
lret
bound
clc
mov
and
and
push
out
out
jo
xchg
and
popf
mov
add
cltd
sub
cmp
adc
add
sbb
jne
or
addl
imul
adc
pop
dec
add
jne
sbbb
gs
in
mov
popf
pinsrw
jnp
xchg
das
dec
sarl
or
jg
pop
es
inc
daa
and
mov
mov
daa
pop
inc
add
in
les
xchg
and
int3
xor
dec
daa
in
and
add
cld
mov
pop
addr16
or
lods
test
popa
add
xchg
mov
dec
adc
xlat
nop
insb
and
add
icebp
inc
out
sbb
lret
fcomps
repnz
add
out
popf
nop
xchg
fimull
sub
loope
push
adc
push
adc
sub
xor
dec
mov
jecxz
fwait
rorb
call
test
fs
inc
jecxz
nop
out
cmp
push
sbb
add
push
or
push
sbb
out
flds
mov
mov
insl
inc
sub
add
fwait
xchg
sahf
mov
daa
popf
add
imul
movsl
jo
cltd
add
pop
sbb
insb
call
test
lcall
ret
xor
cmp
add
repnz
pushf
ds
cmp
add
ret
cmp
popa
daa
call
fwait
jns
enter
ja
pusha
fimuls
leave
sbb
incl
jne
fs
movsl
test
sub
jl
pop
xchg
subps
cmp
add
das
add
test
scas
mov
jle
and
enter
fisttpll
pop
or
lahf
inc
and
pop
add
xchg
clc
or
mov
dec
and
call
mov
push
sbb
jle
mov
add
mov
adc
les
ret
cs
les
sub
add
or
scas
add
hlt
testl
popf
test
inc
lock
xor
xchg
xor
mov
rol
aam
test
xchg
test
int3
mov
sti
in
lock
test
xor
xor
jl
and
dec
push
mov
ds
movsl
pop
rcrb
jns
add
sbb
ret
sub
rcll
lock
jp
call
outsb
lcall
repz
out
jnp
xor
andb
or
mov
ljmp
xor
sbb
jmp
jae
pop
add
add
mov
xchg
pusha
shrl
movb
cmp
stc
xchg
add
cmp
and
out
js
mov
jbe
fstps
xor
lods
inc
pop
cmp
sub
shll
add
sar
pop
sub
add
cmp
push
dec
jbe
or
jle
les
add
mov
jge
sub
push
sub
daa
lods
adcl
push
daa
cwtl
xor
pop
push
pusha
test
xchg
icebp
adc
imul
in
sub
jbe
inc
test
clc
or
dec
add
and
cltd
mov
ret
lret
sub
pop
aaa
add
sub
xorl
and
ret
arpl
stc
adc
hlt
push
movsl
gs
sbb
mov
push
xchg
dec
ret
add
rorl
inc
dec
add
repnz
loop
mov
push
and
cmp
in
jae
add
jo
xchg
cmp
shlb
enter
test
in
inc
in
por
sub
or
fdivs
shll
outsl
in
addb
addr16
xchg
sahf
pop
cld
stos
xor
mov
out
xorb
mov
xorl
sub
push
or
mov
mov
ds
fldl
push
push
xchg
mov
pop
or
push
mov
pop
sub
sub
jo
lods
outsb
cli
leave
inc
pop
lcall
mov
rcrl
jnp
das
stos
repnz
jbe
xchg
adc
lds
sub
or
lret
sbb
out
test
lods
push
mov
add
dec
fs
mov
add
add
cs
flds
mov
push
sub
xchg
call
inc
or
add
xor
arpl
sub
xchg
imul
in
mov
testb
push
arpl
xor
dec
test
mov
and
or
inc
repnz
xchg
mov
jbe
out
cmp
movsb
cmp
push
sti
sbbb
push
imul
aad
adc
popa
jmp
pop
es
inc
push
and
push
xchg
fdivr
and
or
pop
mov
inc
out
and
stc
mov
popf
lds
repz
jne
push
add
pop
popa
nop
and
pop
imul
and
bound
push
jle
rolb
cmp
leave
aam
lock
call
sarb
js
ficompl
add
push
pop
inc
hlt
pusha
js
or
popf
adc
mov
inc
je
and
test
cmp
cmpsl
arpl
sub
add
sub
dec
repnz
cmp
int3
jbe
pusha
lods
push
pop
push
nop
or
int
insb
add
js
clc
jl
add
fs
cli
lods
test
adc
dec
adc
sahf
inc
mov
sub
ret
lahf
sbb
cltd
add
sub
xchg
psrlw
or
mov
enter
sarl
mov
shrb
addb
add
jno
or
sbbl
mov
pusha
mov
les
push
vcvtsi2sdl
and
loopne
shll
repz
in
sub
dec
and
and
lea
popa
mov
lahf
gs
sbb
fimull
push
fwait
in
and
and
mov
dec
sub
adc
test
inc
scas
sub
adc
sub
bound
mov
sbb
adcb
cld
lds
loop
lock
aad
mov
inc
xchg
js
xor
and
in
pusha
mov
sbb
ja
add
sub
sbb
movsl
dec
ljmp
cmp
and
jg
fcmove
in
ret
cmp
xchg
push
lcall
pop
sub
push
ds
xor
data16
cwtl
mov
mov
mov
dec
xchg
jle
xor
negl
jg
ds
add
pop
aad
mov
popf
adc
adc
mov
push
les
add
cmp
pop
std
sub
cmp
pop
add
xchg
or
mov
dec
sub
adcb
inc
push
pusha
gs
cld
mov
pop
daa
loop
cwtl
sub
in
aad
repz
mov
lea
fs
jmp
popf
out
add
mov
nop
jl
push
in
xor
jnp
sarb
into
hlt
sub
in
dec
fcompl
sbb
xlat
fldenv
add
or
dec
clc
ss
or
or
dec
pop
cmpsb
cmpb
push
pop
sbb
and
ja
add
push
mov
mov
jno
test
or
orb
xorl
inc
pop
call
je
scas
aaa
push
xor
xor
lret
ds
xchg
dec
inc
cld
mov
les
cwtl
pop
jo
jne
data16
xchg
inc
clc
cmp
scas
pop
mov
popa
mov
and
js
mov
push
es
popa
jb
sub
and
pop
int
push
jo
mov
out
mov
inc
push
sub
aaa
aaa
and
mov
addl
ljmp
pop
les
and
cmc
add
flds
pusha
pop
xor
xchg
pop
lock
push
sbb
pusha
stc
jnp
mov
fucomi
rol
dec
fs
dec
add
pusha
sub
sbb
mov
add
push
adc
rcrl
xorl
add
gs
lahf
cwtl
jbe
daa
imul
fs
add
aaa
iret
mov
xor
addr16
dec
or
rcrb
mov
clc
push
ret
sub
aaa
add
push
or
push
cmp
inc
enter
sbb
mov
and
fdiv
and
push
xchg
mov
nop
add
stos
loope
inc
movsb
addl
pop
inc
pop
inc
dec
mov
nop
pop
or
pushw
stc
or
sbb
dec
push
ret
or
test
stc
mov
orl
call
out
xchg
inc
in
outsl
mov
inc
lret
inc
pushf
adc
inc
jp
or
sbb
inc
mov
pop
clc
sub
popf
mov
add
jmp
xor
and
mov
nop
cmp
add
push
ss
add
mov
in
dec
adc
sub
mov
dec
add
cs
mov
adc
test
jbe
mov
repz
sahf
sbb
jecxz
add
mov
add
pop
shlb
and
scas
incb
jno
mov
clc
inc
lock
push
add
ror
add
movsb
in
xchg
pusha
orl
or
xor
sbb
cwtl
dec
push
push
insb
cmpsl
fnstenv
push
aam
xor
mov
icebp
js
sub
xchg
mov
pop
or
adcl
mov
mov
insb
inc
or
push
ds
ljmp
or
add
add
pop
xchg
push
cli
aam
and
addb
rcrb
pop
jne
jb
inc
dec
nop
xor
inc
sbb
mov
add
add
stos
je
nop
pop
add
jecxz
jge
dec
push
dec
lock
rcrb
fdivl
mov
es
call
pop
sbb
sub
ret
add
fmuls
notb
outsl
jno
adc
scas
adc
cmpb
inc
dec
add
push
sahf
jno
cwtl
adc
jle
mov
pop
and
cmp
in
cld
cvtdq2ps
jmp
test
nop
out
add
xor
cmp
dec
add
pushl
ret
add
adcb
xor
lret
loope
add
xchg
sbb
cmp
faddp
out
cs
gs
cli
cmp
jnp
add
int3
ds
aaa
cmpsl
mov
pop
cltd
aas
dec
xchg
pop
test
dec
outsb
fidivrs
shrl
mov
and
add
ljmp
jae
test
inc
fwait
add
xor
jge
sarl
and
repz
push
sub
out
adc
and
addl
push
pop
fwait
sahf
mov
mov
or
cmpsb
shrb
jecxz
into
push
daa
loop
inc
add
fldl
cmp
pusha
loope
gs
add
mov
jl
ds
rolb
mov
cmp
fcoml
leave
cmpsb
out
cmp
loop
imul
movsb
push
and
cmp
rclb
sub
jnp
mov
add
enter
ss
add
add
fidivrs
xlat
add
or
pop
imul
ficompl
jnp
adc
shlb
mov
leave
andb
call
cli
xchg
cmp
push
mov
incb
scas
add
in
lods
cwtl
sub
or
movsb
push
add
pop
outsb
shrl
mov
add
xchg
jmp
loope
roll
mov
out
add
mov
scas
push
dec
mov
add
insl
aas
jb
or
dec
add
stc
imul
mov
jbe
sahf
in
int3
out
pop
add
dec
inc
push
lods
or
mov
sub
add
xchg
or
cmp
xor
jns
mov
mov
mov
hlt
aad
jbe
xor
cmp
fimuls
push
movsb
test
xor
pusha
mov
pop
leave
in
jp
xchg
push
mov
mov
mov
gs
fucomp
lea
add
in
push
or
scas
sbbb
pop
jb
cmpsl
dec
cmp
jne
jmp
ficomps
jnp
jae
push
jle
test
pop
pop
pop
stc
xor
enter
out
andb
adc
xor
insl
mov
ret
dec
xchg
pshufw
mov
xchg
ss
add
ja
aas
mov
cld
xor
adc
jo
leave
jp
add
mov
aam
ss
pop
add
adc
or
push
rclb
in
jns
aas
rclb
xor
int3
or
into
cmpb
adcb
imul
in
push
push
mov
add
inc
fldcw
sbb
push
jecxz
gs
xor
ret
nop
add
test
test
out
xor
lds
adc
mov
pop
cwtl
jge
call
hlt
or
sti
xorb
sbb
lds
test
pop
sub
shlb
movsb
jnp
movl
jl
std
popa
jae
push
shlb
out
ja
in
insl
fldl
fdivrp
jl
add
mov
sub
cltd
pop
lret
loopne
add
cmc
push
sti
test
std
cmp
cs
sbb
add
sbb
inc
movsl
ret
and
mov
call
ds
adc
xor
pushf
add
mov
imul
mov
mov
add
jp
loopne
mov
dec
in
mov
mov
inc
add
std
sbb
add
sub
push
pop
jg
add
mov
test
mov
pop
and
inc
int
mov
mov
daa
xor
sub
jns
mov
js
mov
loopne
push
insb
cmpsb
or
popf
and
push
and
sbb
push
cmc
lea
sbb
aam
lock
loopne
jge
sbb
push
shll
fsubl
add
or
loop
pop
add
repnz
clc
xor
mov
lds
test
mul
iret
dec
daa
xchg
add
clc
pop
mov
rorb
out
or
test
jo
mov
pop
mov
cmc
in
push
xor
mov
xor
in
loop
push
mov
push
dec
addr16
push
aas
add
push
andl
movsb
pop
xchg
jo
push
jbe
cmc
orb
lds
add
mov
shlb
mulb
sbb
rcr
xor
stos
insb
jge
mov
and
into
or
add
xor
cmpb
mov
inc
rolb
je
in
stos
jge
js
jnp
add
push
inc
jmp
xchg
mov
roll
std
es
pop
iret
dec
sbbb
add
stos
pop
sbb
xchg
call
push
imulb
fldl
in
add
add
lret
push
repnz
clc
add
js
pushf
stc
std
ret
sbb
ja
push
cmpsb
fcoms
inc
mov
mov
stos
jmp
inc
and
inc
add
inc
adc
cmp
inc
rclb
mov
pop
ljmp
das
push
addr16
add
loope
mov
mov
clc
cmp
lret
mov
daa
push
pop
xchg
shlb
mov
add
add
sbb
hlt
jae
add
push
dec
dec
add
sub
mov
add
jo
xor
fists
xor
gs
jne
es
add
dec
dec
sbb
add
push
je
cli
jno
add
fisttps
push
jmp
push
push
fadds
mov
mov
nop
add
orl
mov
add
mov
cmc
sbb
push
js
mov
sbb
jmp
shlb
add
fs
cmp
add
ret
out
ljmp
pop
add
mov
push
xchg
fwait
and
mov
es
lods
sbb
adc
pop
sahf
or
add
push
sub
sbb
cmp
and
add
xchg
inc
das
cwtl
data16
pushf
mov
lods
fprem1
or
shlb
or
bound
call
sub
push
xor
xorb
movsb
adc
sbb
inc
roll
fs
outsb
push
or
push
mov
stc
or
stos
loop
sbb
pop
in
add
cmp
testb
nop
jbe
popa
shr
xchg
dec
lods
add
in
adc
sbb
sub
and
hlt
pusha
ss
into
popf
pop
cli
inc
rcr
cmp
enter
aas
jnp
xor
sbb
push
icebp
adc
or
lcall
dec
add
ret
imulb
cwtl
inc
pop
neg
and
call
mov
cmc
loope
sti
je
scas
cmp
fstps
mov
and
add
push
in
dec
fiaddl
outsl
xor
add
sub
and
clc
inc
insl
fdivr
add
cmp
cmp
jae
dec
adc
call
inc
xor
cmp
add
inc
ficomps
xchg
dec
xor
or
mov
cmc
cli
ret
add
notl
ja
cmp
inc
fcmovnbe
shl
add
stos
xlat
fcom
sub
add
cmp
and
movsl
insl
dec
push
dec
das
add
or
lahf
pop
add
inc
scas
imul
outsl
xor
or
nop
stos
jl
mov
mov
dec
push
add
mov
dec
pop
jne
inc
and
or
inc
lds
mov
es
and
jnp
das
mov
pop
movsl
pop
inc
or
out
mov
cmp
mov
mov
push
add
movl
pop
sbb
pop
and
pop
pop
insb
mov
nop
mov
icebp
aaa
push
test
and
das
test
or
call
lahf
enter
sub
jg
dec
cmpsl
jl
pop
les
mov
or
popf
dec
int
xor
aad
add
into
ljmp
shlb
push
xchg
popf
push
xchg
adc
nop
movsb
sti
addb
add
imul
jnp
int3
sti
divl
int
fwait
loopne
insl
push
cmp
ficoml
jmp
std
int
repnz
lds
mov
fwait
stos
add
shrl
test
sarb
xchg
adc
cli
fisttpl
mov
and
bound
ret
adc
sarb
clc
in
popf
jo
add
dec
jae
dec
negb
out
and
loop
mov
lret
fcmovbe
xor
cmp
xorb
xchg
jno
pop
imul
and
dec
insb
mov
adc
das
add
decb
add
addl
mov
aaa
push
push
out
cmp
mov
cmp
jns
mov
push
outsl
jecxz
jge
out
andb
outsb
mov
std
sub
xchg
xchg
cmc
mov
out
shll
dec
out
mov
cwtl
repz
les
cmp
mov
out
into
rcl
sub
dec
add
imul
bnd
sbb
and
push
push
popf
mov
add
cld
aas
dec
xchg
pusha
jp
or
jo
push
repnz
mov
add
mov
fldenv
pusha
cli
xlat
add
sbb
pop
mov
jo
push
adc
and
testl
adc
repz
push
rolb
stc
push
lock
movsl
subb
adc
leave
add
jmp
ja
or
pop
add
lahf
cmpl
movsl
jo
xchg
add
push
inc
xor
cmp
sarb
xor
dec
cmpl
mov
cmc
cmp
mov
into
jns
xchg
sub
adc
adc
mov
lret
dec
das
lock
sub
lods
and
xor
cmpsb
adc
sbb
sub
and
push
inc
les
sbb
mov
arpl
pmulhw
sbb
inc
sub
fcomps
scas
add
hlt
insb
pop
mov
mov
push
test
fisttpl
sarb
add
out
mov
cmp
mov
mov
sbb
and
jo
add
xor
push
int
sub
imul
dec
enter
jecxz
flds
xchg
int
add
xorl
xor
repnz
mov
adc
andb
mov
rorl
xchg
push
and
out
push
iret
js
mov
sbb
pop
loope
ret
sahf
shrb
push
pop
rorl
inc
ret
pop
inc
push
rcrb
add
fwait
leave
rorl
nop
pusha
dec
add
fildl
fwait
or
pop
add
addr16
pusha
andl
fdiv
cmp
sahf
sbbb
cwtl
mov
shll
xchg
push
jg
add
sti
jnp
aas
xchg
cmp
sarb
out
sub
jno
jp
adc
pop
sbb
mov
in
shll
adc
or
add
inc
mov
xorb
add
push
fcmovnu
sbb
inc
mov
jo
adc
lods
xorb
into
aaa
inc
insl
mov
imul
ljmp
js
add
sub
iret
orb
inc
mov
pop
in
cmp
test
inc
rcr
lods
inc
hlt
popa
mov
jo
jl
sub
test
xor
jne
add
leave
mov
xchg
mov
sbb
stos
adc
in
ret
cmp
rorb
and
pop
add
sbb
sahf
cwtl
icebp
in
add
cld
sbb
out
sub
pushf
lods
ss
rcrl
or
sarl
subb
nop
inc
add
pop
stos
mov
or
pop
mov
mov
iret
rolb
dec
popa
scas
ficoml
dec
add
call
ret
sysret
shrb
dec
add
pusha
aad
lock
jno
xchg
iret
stos
adc
add
lea
jbe
jb
rorb
mov
and
add
push
lea
aaa
add
in
arpl
clc
xor
loopne
out
loopne
lds
lock
mov
and
jae
sbb
insb
cmpsl
test
jmp
mov
js
cmpb
rcrb
pushf
mov
shll
pop
jbe
add
push
shlb
cmp
mov
jnp
std
shlb
add
aad
fdiv
sbb
loopne
add
mov
xchg
cmp
ss
das
scas
add
inc
loopne
add
ret
and
push
fdiv
ss
mov
int3
pusha
test
or
mov
divb
jne
enter
ret
xor
jmp
loop
clc
mov
dec
movsb
cmp
js
add
int
mov
sbb
inc
add
push
insb
add
add
pop
loopne
mov
cmc
mov
or
add
mov
sub
push
loopne
jmp
ret
gs
or
xchg
mov
dec
sarl
mov
enter
test
iret
mov
cli
loop
push
sbb
cwtl
mov
push
aam
fdivl
ljmp
test
and
jge
add
test
iret
add
mov
push
in
ds
dec
mov
sub
jmp
add
cmp
add
enter
mov
adcb
test
add
push
adc
and
jle
andl
jmp
xchg
test
mov
cmp
add
repnz
pop
xchg
mov
add
popf
les
add
inc
adc
add
mov
roll
shrb
arpl
loopne
add
lods
insl
aaa
les
push
add
push
pop
in
loop
pushf
cmp
imul
sub
xchg
subb
outsb
aas
jo
fidivrl
decl
xor
test
pop
icebp
inc
int3
aam
sbb
xchg
je
inc
xchg
fldl
push
mov
push
pop
hlt
mov
add
add
xchg
out
enter
jae
stos
or
ror
mov
mov
xchg
dec
orl
push
fadds
lock
data16
dec
aam
ficoml
add
adc
nop
repnz
xchg
push
jmp
int3
add
stc
sub
cmpsb
xor
clc
pop
insb
imul
popf
pop
sbb
gs
ds
mov
ret
pop
dec
out
sbb
xchg
add
mov
jns
jle
setne
int
mov
mov
push
loop
add
ss
enter
mov
inc
push
and
sarb
fwait
and
add
mov
cmp
add
movb
add
cmp
pop
mov
add
inc
add
pop
orl
pusha
mov
into
adc
ret
and
out
out
jbe
add
test
dec
add
jecxz
jb
in
and
add
sub
xchg
mov
ss
mov
mov
push
insb
ret
movsb
push
shlb
scas
lret
stos
into
xchg
cmc
add
inc
push
xorl
int
scas
adc
sub
bnd
cmp
push
adc
repz
testb
mov
add
mov
hlt
aaa
aas
dec
lret
dec
aam
arpl
jmp
mov
imul
add
testl
push
add
fsub
out
cld
inc
addb
adc
insl
push
lcall
leave
mov
dec
mov
adc
aam
mov
hlt
sbb
push
jmp
add
in
xor
cs
sub
push
and
dec
add
push
xchg
bound
mov
pushf
and
shrb
shrb
mov
fnstsw
jns
mov
sub
sbb
jbe
insb
pop
sbb
jp
pop
mov
flds
sahf
xchg
or
mov
iret
pusha
stos
push
jg
add
divb
lock
out
sbb
push
add
psubsb
in
jb
dec
jns
mov
dec
and
cmc
pop
pop
pop
push
jo
or
add
aas
pop
push
stos
or
insl
pusha
incl
dec
jg
xor
xchg
push
in
andb
adc
cltd
inc
jns
lcall
cmpsl
stc
add
push
cmc
gs
dec
lahf
js
es
sub
add
gs
push
add
pushf
xchg
loopne
cmpsb
jp,pn
add
jle
mov
loopne
add
fistpl
sbbb
shlb
cmp
jne
lret
or
es
add
cmp
aad
push
cmp
fidivs
or
xchg
stos
lods
outsb
pop
jbe
js
nop
cwtl
add
repz
cmp
jl
pusha
ss
popf
bswap
inc
leave
push
repz
in
jb
add
jae
mov
leave
jle
rcrl
aam
jne
adcl
mov
inc
sbb
dec
clc
jo
dec
add
xchg
add
push
mov
push
stos
add
adc
call
and
ja
add
xor
or
into
jl
test
rcll
and
out
lret
sub
sbb
ljmp
jmp
sbb
push
pop
xor
mov
add
aas
ds
cmpl
imul
dec
jl
add
xlat
xchg
push
shl
or
adc
add
cmp
out
inc
cmpsb
dec
mov
add
push
icebp
sbb
mov
hlt
pop
add
dec
push
loop
arpl
jg
add
jge
vrsqrtss
bound
pop
gs
dec
mov
les
fstpl
push
das
imul
mov
ret
cmp
addl
add
pusha
test
cmpsb
add
nop
dec
add
repz
xchg
jl
add
push
mov
daa
jo
add
enter
mov
xchg
pusha
add
pop
shlb
fisubl
xor
xchg
xlat
stos
leave
shl
clc
popa
mov
pop
xor
push
sub
sub
test
jle
iret
imul
fldenv
add
add
mov
mov
or
clc
add
movsl
aas
shlb
push
add
add
mov
in
add
sbb
ds
fadds
push
inc
je
leave
inc
pop
add
in
bound
fstpl
xor
dec
pop
ds
test
faddl
aad
mov
and
in
xor
and
push
jmp
std
mov
and
dec
push
pop
rorl
xchg
jo
add
pop
insl
cmp
clc
mov
in
lods
mov
gs
add
imul
dec
dec
mov
pusha
andb
and
mov
add
cmpb
js
add
mov
subb
mov
lahf
add
sti
push
cmp
sbb
add
dec
add
push
int
mov
popl
sbb
in
sbb
xchg
fcomps
and
enter
fbld
inc
loopne
add
imul
pop
in
jecxz
mov
cmpsl
daa
sub
ljmp
repnz
mov
arpl
cmpsb
scas
adc
xchg
ror
jg
dec
add
or
add
mov
mov
jmp
add
shll
mov
cmp
xor
xchg
hlt
sub
mov
add
iret
das
test
mov
fiadds
test
or
inc
dec
cmc
shl
lods
add
xchg
push
test
add
je
not
test
cmp
cmp
pop
push
jl
push
pop
adc
add
push
pop
jnp
add
jo
adc
lods
pop
lock
fstpl
ret
dec
or
clc
jl
mov
cld
popf
daa
cwtl
adcl
xchg
add
enter
push
xorl
aad
int3
lea
test
cmpsl
adc
imul
filds
nop
insb
adcb
in
sti
or
flds
inc
xor
cmc
insb
sub
sti
outsl
imull
ja
bound
add
xchg
loop
xor
decb
mov
mov
add
out
lret
out
add
inc
loope
and
xchg
scas
xor
shlb
adc
lcall
xor
jae
test
rolb
pop
ficompl
mov
ja
mov
sub
in
jbe
or
sbb
movsl
mov
add
xchg
jmp
testb
adc
cmp
into
mov
inc
test
loop
rorl
add
imul
add
cmp
sub
pop
inc
fyl2xp1
decl
xor
enter
add
and
je
pusha
bound
stos
xor
out
add
pop
imul
je
add
mov
xchg
in
out
in
push
repz
adc
pushl
pop
jmp
aaa
dec
sbb
add
movsl
ret
dec
jg
add
and
mov
or
adcb
fisttpl
int3
in
sub
add
push
or
les
sbb
or
mov
sbb
inc
mov
push
or
rcl
mov
cmc
push
cli
add
mov
insb
repnz
in
jge
jg
pushf
pop
sbb
jp
cmp
dec
mov
enter
jmp
jb
dec
lods
sbb
test
es
rcrb
inc
mov
pop
push
ret
es
loope
and
repz
popf
orl
out
loope
out
addr16
and
dec
jne
add
cmp
movsbl
daa
xor
repnz
adc
and
cs
mov
mov
adc
add
push
mov
cmp
movb
icebp
std
fstl
or
sub
sub
pop
dec
mov
enter
xchg
cwtl
cmp
add
add
shlb
add
aaa
int3
out
mov
xor
scas
push
aas
outsb
insb
add
fsubl
mov
or
cwtl
rcrl
int3
lret
test
cmp
dec
movsb
addr16
jno
loopne
xchg
pop
cmp
lods
nop
lea
sbb
pop
clc
xchg
push
jno
pop
xor
add
movsl
dec
dec
lea
lret
cmp
pop
fstps
stos
js
fcoml
enter
pusha
bound
cmpsb
mov
push
es
jns
loope
inc
jno
xchg
dec
add
xchg
mov
add
push
xor
das
cmpsb
push
xorb
jmp
add
mov
cmpb
inc
add
cmpsl
mov
sbbl
xchg
int
movsb
jnp
les
mov
out
sbbb
xchg
pop
mov
fwait
push
stos
mov
jg
fistps
dec
sbb
faddl
es
mov
or
sbb
add
cmp
dec
roll
into
add
outsl
out
mov
fcmove
add
inc
jns
inc
mov
jge
inc
add
lods
scas
lahf
push
mov
das
or
xor
pusha
int
add
scas
push
add
or
inc
mov
pop
testb
imul
mov
mov
sarb
movsl
call
jno
mov
pop
bound
test
imul
in
jo
jle
sahf
cld
mov
add
add
push
lret
inc
fiadds
pop
sti
jp
adc
cmc
ja
jae
pop
pop
js
sbb
mov
roll
test
les
movsb
orb
icebp
mov
sbb
cmp
add
jne
add
xorb
mov
lret
inc
inc
xchg
psrlq
loope
and
mov
push
cwtl
dec
sbb
xor
mov
dec
adc
xchg
jecxz
push
daa
add
mov
pop
mov
rorb
sbb
cld
lea
pop
outsl
shlb
and
and
add
push
cltd
shrb
add
incb
outsl
add
xor
jno
xchg
add
shll
insb
dec
pop
mov
xchg
rolb
mov
xchg
dec
inc
sbb
xor
add
dec
out
loope
add
insb
filds
outsl
cmp
lock
push
mov
xchg
mov
mov
dec
outsb
test
and
cmc
dec
and
lret
add
add
test
sbb
add
addr16
mov
xchg
add
cmc
mov
mov
out
and
fisubrl
add
cli
mov
insl
inc
push
mov
test
test
or
or
pop
movsl
loopne
xchg
lcall
xlat
xchg
insl
test
sub
rclb
daa
fwait
sub
mov
lods
hlt
stos
cmp
cmp
add
sbb
fs
mov
add
in
add
and
daa
bound
add
and
add
jg
xchg
jbe
loop
xchg
subb
and
clc
add
add
sbb
adc
adc
inc
ret
jae
pop
loop
les
icebp
stos
add
sar
test
add
lret
pop
cmpl
hlt
pusha
mov
das
test
sbb
push
mov
test
int3
pop
lret
add
jg
add
mov
xchg
push
xor
ljmp
dec
repz
mov
and
jns
cmc
push
push
test
aas
pop
call
in
jne
daa
clc
inc
add
push
shrb
adc
xor
sar
sub
cmpsb
xor
add
std
shlb
add
or
pop
xor
data16
imul
rorb
jb
pusha
mov
test
lcall
ret
and
sbbl
or
pop
sub
outsb
xchg
loopne
stos
jg
add
or
pushf
cmp
push
out
loope
push
insl
insb
add
int
and
or
inc
add
jnp
arpl
fcoms
add
fisttpl
cltd
jmp
int3
fisttps
cwtl
push
data16
pop
pusha
jecxz
jb
rcl
in
mov
movsb
add
sar
aas
dec
mov
dec
out
lret
cmc
mov
mov
pusha
or
jle
mov
cmpsb
fdivr
jns
inc
mov
sbb
push
dec
mov
adc
and
add
imull
repnz
rorl
jae
sahf
push
pop
inc
mov
inc
mov
mov
push
inc
or
mov
dec
std
sbb
mov
arpl
mov
jle
add
dec
jbe
test
pop
pop
add
push
mov
in
jg
push
sub
or
inc
stc
pop
mov
add
in
sub
icebp
jge
add
out
lahf
imulb
pop
xor
adc
sbb
out
add
mov
add
idivl
and
adc
jmp
mov
mov
shr
add
push
jecxz
pop
xor
movsl
xor
icebp
gs
mov
es
jne
mov
add
sub
rcrb
adc
add
mov
mov
mov
xor
add
xchg
dec
or
push
mov
sub
pop
and
xchg
pop
add
inc
lret
jae
jne
iret
shll
mov
lea
ficomps
rorb
mov
and
jo
test
ljmp
add
fildll
faddl
add
sar
push
aad
cmp
add
xorl
roll
dec
cmp
subl
test
or
dec
push
dec
mov
sbb
stos
jbe
in
shll
and
xchg
xchg
cmp
push
xchg
insb
ficomps
cmp
daa
add
sub
movsb
or
mov
mov
jge
add
jns
jno
in
loope
add
and
mov
lds
sub
ds
std
add
imul
add
and
sahf
movsl
or
push
cmp
ror
pop
and
bound
ret
ja
fisubrs
mov
shr
adc
push
add
lods
push
movsb
out
adc
test
popa
sub
lods
adc
push
sti
rcr
push
sahf
enter
int
push
add
jne
repz
jae
cmc
jns
enter
add
loop
popf
mov
rolb
jb
adcb
xchg
lcall
dec
clc
or
sbb
dec
popf
cld
or
xor
fcoms
lcall
jb
popf
stos
add
cmp
call
add
inc
dec
jno
push
add
jbe
adc
push
add
sub
mov
jno
sbb
and
data16
in
add
cmc
jno
lods
adc
or
fmuls
ret
xor
add
inc
adc
cmpsb
pusha
loopne
mov
xchg
into
mov
add
test
test
push
add
popf
mov
add
int3
xor
nop
rolb
imul
mov
stos
sti
add
insl
mov
bound
mov
dec
push
or
mov
psraw
cltd
and
inc
icebp
add
and
ret
ret
movsb
test
dec
sti
fldenv
sbb
add
pop
shrb
dec
cmp
leave
mov
add
and
pop
sub
mov
negl
add
push
out
add
xchg
dec
cli
adc
add
pusha
jns
je
jne
add
std
inc
jg
mov
int
xor
add
add
ja
lret
dec
mov
shr
subl
add
add
add
subl
int3
inc
sti
xchg
cmp
bound
movsb
sbb
add
fs
sub
jg
loopne
jnp
sub
fnstsw
add
and
fs
pop
cmpl
xor
add
gs
inc
add
add
mov
popf
fsubl
out
add
cwtl
loopne
inc
lahf
add
fcmovnb
add
xorb
repz
fnsave
lcall
push
cmp
or
mov
pop
add
loope
das
mov
push
sbb
add
sub
fcmovnb
icebp
push
cwtl
adcb
jne
add
js
int
ret
data16
jecxz
add
sbb
mov
and
cmovs
or
mov
insb
and
add
xor
call
xchg
pusha
enter
icebp
add
jp
add
scas
scas
cmp
dec
inc
add
mov
fldl
pop
xchg
xlat
shrb
push
add
dec
mov
add
je
ret
mov
or
pop
std
xchg
andb
icebp
in
cs
sub
dec
xor
push
push
insb
mov
roll
pop
sbb
je
cwtl
add
push
pop
in
dec
adc
push
pop
pop
inc
jnp
pop
adc
aaa
push
xchg
cwtl
cltd
mov
rcrb
hlt
setno
fdivrl
jo
pop
mov
inc
jl
mov
jno
sbb
dec
pop
adc
sub
pop
mov
mov
sbb
dec
jne
mov
scas
add
xor
addl
jae
clc
push
dec
add
rcrl
aas
repz
adc
sbb
inc
clc
inc
mov
adc
lret
xchg
dec
push
mov
or
dec
int3
lret
psubusw
mov
std
enter
dec
out
mov
xor
inc
xlat
dec
add
mov
xor
pop
stc
add
xchg
pop
add
mov
xchg
ret
cmp
int3
add
sbb
sub
dec
sti
push
mov
xorb
mov
jno
int3
jmp
pop
add
xorl
xchg
cmpsl
add
hlt
cmp
add
pop
pop
sahf
jg
add
out
push
jg
add
adc
cwtl
pop
sarl
add
sbb
jl
mov
add
into
cmpsl
fdivrp
dec
in
roll
inc
inc
mov
fistl
cmp
sbb
icebp
cld
cmpsl
incl
sbb
pop
movsb
test
pop
fisttpll
dec
sbb
and
ss
popf
pop
sbb
xchg
aaa
xor
sub
mov
or
inc
mov
dec
add
popf
aaa
cmp
mov
ror
adc
inc
std
add
enter
arpl
and
cmp
pop
cli
rol
xchg
clc
lcall
dec
lret
andb
xor
jmp
push
cmp
dec
xchg
hlt
repz
lret
rclb
add
sbbb
inc
sbb
icebp
leave
sbb
pop
mov
je
mov
jb
sbbb
sarb
add
push
mov
out
lock
add
pop
dec
jg
push
lods
sbb
loopne
xchg
in
rorl
lds
ffreep
xchg
std
add
dec
add
dec
decb
add
shll
add
out
es
push
pop
push
orb
mov
roll
pop
popa
jae
push
scas
xor
movsb
clc
ficomps
cmp
rcll
adc
std
jl
sub
or
pop
ss
lods
cmpsb
add
pop
clc
and
fildl
pop
xor
in
sar
adc
pop
cmp
mov
and
js
add
mov
loope
push
push
test
add
add
out
cmpsl
add
mov
push
dec
pop
lds
addb
jae
ljmp
jecxz
inc
mov
test
mov
aam
jl
mov
hlt
sbb
sub
out
lods
and
cmp
call
pop
cld
or
fsts
mov
add
add
and
stos
out
mov
pop
dec
xchg
add
int
pusha
lcall
cli
lret
test
add
mov
add
jge
and
je
movb
lret
mov
nop
cwtl
cmpsb
mov
cmp
fwait
in
or
pop
add
inc
pop
jmp
add
mov
outsb
ret
filds
pop
jmp
or
inc
test
out
mov
in
add
scas
cmp
loop
push
insl
rol
add
xchg
push
pop
push
int
xor
rclb
imul
jge
add
out
add
rcrl
xor
outsl
adc
add
inc
std
rorb
mov
sahf
cs
fnstsw
hlt
and
or
call
xor
or
int3
adc
add
loope
mov
push
pop
or
push
and
xchg
xchg
mov
add
rorl
out
add
sub
fisttpl
jecxz
lock
loope
pop
jo
scas
add
lret
xor
add
xor
sti
rcl
lcall
mov
outsl
arpl
or
ljmp
jno
incb
imul
adc
pop
xor
rcl
sti
leave
shl
push
push
loop
mov
or
sbb
mov
inc
loopne
mov
pushf
out
cld
sub
sub
or
or
cmp
mov
rclb
add
fiadds
inc
lea
decb
and
test
insl
std
pusha
sub
push
mov
jne
arpl
mov
xchg
add
out
jge
cwtl
mov
arpl
test
insb
add
dec
sub
jo
flds
jmp
mov
aad
or
jg
and
and
shlb
cmp
rcll
shlb
mov
ret
sarb
add
dec
pop
lret
bswap
push
add
iret
lea
mov
adc
sbb
das
flds
lret
cs
pop
add
js
or
push
jg
push
shll
rcrl
add
outsb
xor
inc
mov
sahf
sarb
divb
dec
dec
adcl
add
sbb
loopne
hlt
shlb
cmpsb
pop
adc
mov
lds
movsb
imul
dec
adc
inc
pop
sbb
mov
leave
addr16
jnp
add
cmp
pop
push
std
dec
lcall
cmp
cmp
and
adc
repnz
ret
leave
testb
sub
or
or
test
jmp
sub
dec
shll
mov
out
movsb
inc
js
adc
xchg
mov
insb
pop
cmp
test
clc
add
cmc
rclb
jbe
pop
jmp
stc
aas
xor
jp
cmc
and
sub
sbb
xor
loopne
mov
pop
in
sbb
push
or
fsts
pusha
jnp
test
addb
out
addl
mov
push
daa
testl
push
nop
xchg
lret
push
add
iret
fidivrs
pop
add
mull
js
loopne
cmp
cli
les
xlat
cmp
dec
lret
je
add
insb
or
nop
test
sub
sub
jl
mov
incb
jbe
xchg
int
fimull
cmpsb
adc
add
inc
mov
dec
dec
rcrb
sbb
clts
iret
adc
shll
or
push
and
pop
jle,pt
xorl
jp
cwtl
in
aam
and
mov
cld
add
ds
pop
pop
add
sahf
jmp
or
popf
xor
push
cmp
lcall
shll
xchg
sbb
jb
sbb
mov
lcall
xchg
fsubrl
mov
pop
icebp
add
jo
mov
mov
fmuls
aad
add
jmp
pop
inc
cmpb
enter
fadds
loopne
test
ss
inc
mov
fildl
je
push
lock
and
add
jae
xor
and
add
and
inc
add
iret
push
push
inc
testl
imul
loop
dec
in
popa
dec
xchg
push
subb
daa
lcall
fisubl
adc
dec
test
scas
mov
pop
call
add
dec
mov
or
jle
mov
jmp
call
int3
mov
cmp
sub
mov
in
shlb
dec
enter
add
hlt
xchg
sahf
ss
pusha
jo
cmp
adc
clc
arpl
xacquire
dec
mov
lcall
les
sub
or
and
push
sub
lods
sub
fisubl
es
test
or
or
add
cmp
leave
add
out
std
rcll
ret
add
mov
out
decl
add
sbb
fistpll
fadd
nop
clc
xchg
sbb
out
xor
and
mov
add
arpl
adc
insl
cmpsl
test
xchg
xchg
std
pop
add
jne
jmp
mov
cld
push
inc
test
xor
rolb
hlt
int3
add
add
adc
add
fidivl
into
hlt
mov
cld
jns
add
ret
add
nop
sub
adc
daa
mov
pusha
test
incb
cli
aam
pop
in
xor
fsubrp
push
dec
jecxz
fdivrs
cmp
sub
dec
add
mov
roll
mov
stc
inc
ja
repnz
push
dec
push
orb
pop
pop
hlt
roll
mov
lds
xor
scas
gs
xchg
push
mov
xchg
aad
test
fcomi
aaa
xlat
mov
adc
inc
dec
shr
pop
add
mov
js
and
mov
push
xor
adc
lret
nop
ror
add
andl
xchg
add
out
add
repnz
sub
pop
and
in
sbb
adc
ret
cmpsb
cmpsl
jl
pusha
xor
lret
add
pop
and
testb
inc
xchg
lret
dec
dec
outsb
pop
lock
popa
stos
cltd
dec
add
in
pop
cmpsb
notl
fisttpl
and
push
add
jl
test
jns
xor
dec
fcoml
add
mulb
pextrw
dec
sbb
or
clc
sub
daa
stc
or
dec
pop
ret
clc
lea
add
call
jns
out
pushf
cmp
mov
pop
push
js
sub
xchg
sbb
jp
testb
inc
pop
cmc
push
pop
push
clc
add
test
lock
mov
add
shll
outsb
xor
lods
add
mov
push
add
mov
loopne
cmp
aam
call
bound
add
or
iret
xchg
fidivs
shr
daa
mov
xchg
mov
xchg
pop
mov
add
out
push
mov
aam
add
and
add
cmp
test
or
and
shlb
pop
cltd
lods
aad
xchg
stos
xlat
fsts
add
inc
xchg
mov
adc
lret
lods
cmp
or
inc
mov
inc
adc
fcoms
aam
add
push
or
xchg
loope
pop
mov
repz
icebp
lock
mov
shlb
jb
add
addl
sahf
adc
push
pop
fwait
rorb
xchg
adc
imul
outsb
jns
div
sbb
sarb
sbb
mov
jo
sar
pop
or
sub
mov
loop
subb
ficoms
adc
addb
loop
add
sbb
dec
movsb
call
stc
je
mov
mov
cmpsl
outsb
pop
and
add
int
adc
sbbb
sbb
push
scas
iret
rcrl
add
cmp
add
mov
or
es
jo
idivb
push
incb
cld
add
ret
insl
cmp
mov
mov
add
stos
andl
add
sbb
sbb
test
cwtd
jno
push
add
in
fisubl
sarb
ret
daa
cli
jo
fcoml
or
push
inc
mov
fadds
xlat
sarb
pusha
dec
and
imul
cltd
jne
add
xchg
add
mov
dec
sbb
add
jb
lock
jbe
sarl
lcall
or
pushl
mov
cmc
xor
je
sbb
lds
loopne
adc
sbbb
inc
adc
xlat
and
rorl
repnz
stos
add
pop
les
test
repnz
mov
xchg
fiadds
mov
adc
adc
adc
orb
cs
cmp
push
test
adcb
mov
add
outsl
cs
push
push
js
or
sub
loopne
add
lahf
mov
push
pop
cmp
ret
insl
and
sbb
in
out
not
fdivl
pop
sub
fcomi
pop
test
scas
adc
jnp
dec
jae
imul
adc
enter
push
pop
push
xor
mov
iret
add
or
jle
jb
jp
jnp
sahf
pop
add
push
rolb
sub
push
daa
jge
add
insb
pusha
dec
add
mov
clc
lret
rol
push
and
mov
in
mov
test
adc
inc
or
add
add
test
jnp
js
jle
and
mov
jecxz
mov
fsubrs
xor
jmp
and
clc
push
adc
dec
hlt
loopne
icebp
sbb
in
add
int
jge
add
insb
add
mov
ljmp
test
data16
inc
in
add
lods
andb
dec
inc
jl
push
push
lock
add
or
lds
add
mov
mov
pop
xchg
add
inc
or
add
sbb
add
rolb
lret
mov
add
sbb
test
cmp
enter
sub
fsub
aaa
jno
scas
push
int
adc
ljmp
sarl
pop
jle
mov
into
cmp
add
cmpsl
pop
outsl
jo
add
xor
jae
dec
add
inc
popa
lds
mov
scas
pushf
cs
clc
add
jnp
lcall
jle
inc
imul
into
jle
or
and
cmpsb
adcl
cmp
cmp
lea
inc
je
std
xor
sbb
jnp
xor
xchg
fwait
ds
dec
add
mov
xchg
movsb
jb
add
in
mov
in
je
pop
lods
pusha
test
push
jns
sbb
adc
cmp
dec
and
adc
sub
shrl
sbb
mov
mov
jge
xor
xchg
test
cli
mov
add
dec
in
adc
popf
ret
stos
add
pop
jecxz
mov
int
out
clc
and
cmp
sbb
addr16
in
push
in
mov
rclb
pop
insl
lock
lret
aas
sahf
push
sub
lcall
popa
mov
mov
out
ret
mov
cmp
addb
inc
das
mov
jge
cli
cmp
jne
inc
scas
and
andb
movsb
mov
data16
nop
adc
mov
add
xchg
cmp
mov
outsb
adc
xchg
add
pusha
mov
sbb
test
add
pushf
ret
cli
adc
pushf
pop
pop
or
inc
mov
lds
daa
call
roll
fistpl
adc
push
cmpsb
add
and
fstl
and
push
std
cmp
ja
mov
aas
insb
add
test
mov
sbb
popa
sub
imul
push
fs
xchg
nop
out
daa
and
add
mov
add
insb
mov
or
cmpsl
add
xchg
lods
push
rcr
sbb
movl
std
mov
fsubrl
inc
add
sahf
xchg
iret
xchg
fs
imul
loope
push
addb
adc
int
xchg
nop
enter
add
xor
int3
add
fdiv
xor
aam
add
mul
mov
scas
ja
mov
aad
add
mov
dec
arpl
cmc
add
xchg
mov
or
call
xchg
rolb
or
sti
mov
or
inc
loope
call
incb
xor
add
mov
add
jae
dec
push
or
add
icebp
pusha
xchg
inc
cmc
adc
mov
mov
lds
les
cmp
call
scas
cmp
mov
sar
ds
add
fwait
sbb
and
clc
sub
mov
sub
ret
aaa
mov
add
jo
mov
sbb
xor
loopne
int3
cmp
push
cmp
dec
pop
cld
out
testl
sahf
jmp
adc
call
dec
jae
adc
jne
add
add
out
add
repz
mov
or
cmp
or
mov
jnp
jmp
adc
sbb
loopne
adcb
cld
pop
and
or
popa
mov
jne
xor
inc
test
imul
lret
es
test
insb
neg
mov
int3
das
in
mov
add
push
mov
insl
sbb
sahf
enter
data16
add
mov
add
sub
and
cmp
in
add
mov
out
fnstsw
stc
xor
or
rep
xchg
add
stos
jge
add
sbb
jo
call
mulb
int3
jnp
add
adc
cmovae
insl
jg
fdivrl
lea
test
clc
add
xchg
mov
cld
sbb
jmp
jns
pusha
mov
jae
pop
xchg
es
pop
fidivrs
mov
jl
push
in
add
cmc
xchg
pop
jno
pop
data16
movsl
filds
rol
inc
mov
in
pop
js
and
in
push
xchg
push
addb
add
xor
es
stos
mov
add
and
jo
sbb
sti
xchg
faddl
add
add
repnz
add
lret
mov
xor
add
xlat
cwtl
arpl
vpmulhuw
or
and
leave
test
sti
repz
sub
push
mov
xchg
push
jb
mov
in
dec
dec
sub
push
shr
lds
test
ficompl
push
add
push
test
addb
roll
push
jb
enter
test
sahf
or
loopne
push
fldl
jmp
mov
test
adc
sub
stc
cmp
outsl
mov
es
cli
pop
mov
orl
add
fidivl
add
jbe
lea
das
pop
loope
data16
gs
adc
push
add
leave
insl
loopne
or
adcb
xchg
inc
ss
add
ror
roll
add
lret
cld
ljmp
or
in
or
lods
pop
sub
inc
cmp
dec
push
jecxz
jb
std
mov
jge
mov
adc
push
addl
iret
jbe
add
ljmp
inc
mov
pop
lock
fdivl
insl
lcall
and
and
lcall
cli
enter
xchg
add
imul
jae
inc
mov
in
call
dec
movsl
aam
fistl
insl
mov
mov
add
mov
daa
in
jge
add
xchg
push
lret
pop
cld
verw
sarl
add
xchg
test
dec
imul
aas
cmp
adc
pop
jnp
arpl
add
dec
aad
cmp
in
cwtl
fs
stos
rolb
xchg
and
add
xor
mov
lcall
push
inc
push
xchg
add
test
jnp
mov
addl
rcr
popf
cmp
loop
andl
sbb
sub
inc
xchg
add
ljmp
and
mov
subb
pushf
and
hlt
push
add
ja
fidivrl
dec
imul
or
jae
mov
inc
jl
jg
test
xor
adc
ret
pop
fistpl
in
cmp
mov
push
fwait
pop
mov
adc
cmpsb
inc
push
es
daa
test
test
mov
mov
cwtl
mov
jg
and
pop
rcll
stos
stc
add
add
jmp
cmp
push
shl
mov
imul
mov
cmp
add
imul
xor
push
pusha
out
push
pop
add
cmp
aaa
lret
add
pop
jmp
pop
mov
dec
jno
push
dec
das
jge
xchg
add
adc
push
pop
pop
fsubl
cmc
or
add
idivl
in
movb
aas
or
lret
sub
pop
loope
jp
nop
je
cltd
lods
push
add
sbb
sti
pop
negb
add
xchg
fisttps
sbb
or
mov
push
sbb
fs
add
cmp
mov
scas
add
push
loopne
out
je
add
rorb
dec
push
rorl
out
pop
add
push
pop
addl
sub
cmp
add
add
add
push
add
in
inc
int
xchg
imul
adc
xor
jmp
and
je
gs
pop
pop
inc
pushf
out
scas
icebp
dec
out
popa
shlb
lea
das
inc
enter
lods
mov
sti
rcll
ljmp
mov
outsb
add
mov
xchg
add
or
lds
icebp
or
xor
fidivl
rclb
mov
sub
cmp
xchg
aam
pop
push
inc
aam
mov
mov
adc
rolb
testb
fiaddl
push
mov
fiadds
cmp
jae
pop
jb
add
or
mov
add
pop
in
jae
setne
outsb
xchg
pop
mov
mov
add
stos
mov
cmp
fs
adc
pop
std
fldl
push
test
dec
and
cmp
pusha
xchg
outsl
jmp
add
aad
mov
cs
add
cmp
push
adc
mov
cli
sub
ss
ret
push
gs
sbbb
iret
test
nop
jns
fstps
pop
ret
fstpl
pop
shl
add
mov
insb
add
pop
jmp
rclb
mov
pop
cmp
adc
xor
pop
leave
mov
insb
flds
inc
push
push
pop
inc
adc
push
sarb
pop
shrl
add
cmp
fmul
jns
dec
mov
or
adc
inc
sub
push
add
adc
adc
xor
movsl
cmp
es
and
popa
add
add
stos
pop
arpl
sub
pop
lcall
fsubl
adc
out
cmp
rolb
fucom
lahf
shl
mov
int
jne
in
xchg
clc
pusha
push
sub
xchg
jle
in
and
or
fidivs
ror
mov
movsl
sub
cmc
pusha
cmp
add
adc
adc
stos
mov
jns
clc
xor
sbb
nop
nop
ret
dec
jb
add
cmpsl
std
jae
inc
das
ret
jo
fsubr
ja
in
jnp
xchg
stos
cmp
hlt
dec
jne
lods
cltd
mov
daa
les
add
ds
cmp
sbb
and
pop
std
js
out
movlps
xor
adcb
add
dec
jge
push
aam
imul
sbb
loopne
mov
push
roll
hlt
and
add
test
inc
sub
addr16
sbb
js
add
add
adc
xor
pop
add
pop
xchg
adc
cmp
shl
mov
iret
xor
mov
mov
cs
add
inc
xchg
pop
outsl
inc
insb
ficoml
or
icebp
and
fildl
fs
data16
adc
adc
bound
push
test
sbb
fstpl
jb
sbb
scas
cmp
xorb
pop
pop
mov
inc
mov
rolb
arpl
xchg
adc
rcrb
push
xchg
movsl
push
pop
ds
add
pop
jp
ja
or
data16
xor
add
mov
mov
insb
pextrw
add
call
cld
add
xchg
roll
inc
imul
cmp
add
push
pop
icebp
pop
pop
or
xchg
sti
sub
js
fwait
add
xlat
out
inc
in
add
pop
mov
insb
mov
lods
dec
and
loopne
add
dec
in
add
mov
xchg
mov
pop
xor
addb
cwtl
inc
jmp
push
add
pop
cmp
cmp
adc
loope
stos
cmp
mov
mov
test
into
inc
rorl
pop
fildl
lods
add
jecxz
dec
ret
push
add
gs
jle
jg
ds
rclb
fsubrs
test
test
sub
shrl
negl
mov
add
add
mov
scas
lea
adc
jp
sahf
dec
imul
pushf
cmp
inc
push
sahf
lret
push
and
or
scas
mov
mov
scas
pop
adcb
incl
jae
xchg
sbb
mov
cli
lahf
add
out
lea
mov
jp
push
mov
pop
popl
ljmp
cli
hlt
out
clc
sub
inc
das
xchg
pop
movsb
mov
or
mov
mov
movsl
mov
add
push
sysret
scas
inc
dec
add
cmp
sub
xor
adcb
xor
int3
inc
xchg
add
loopne
aas
pop
cmc
subb
das
stos
sbb
xor
ja
pop
gs
cwtl
out
or
fwait
test
data16
cld
mov
mov
or
or
mov
add
xor
jae
fwait
xchg
push
js
sbbl
add
das
dec
sbb
mov
jne
mov
ja
sahf
and
sbb
or
jns
outsb
loop
es
push
ret
iret
loopne
int3
movsb
call
pop
cmp
mov
rorb
or
lea
inc
add
fnclex
aam
push
add
scas
daa
add
test
add
int
jp
aas
add
aaa
int3
xor
xor
cld
pop
push
or
add
mov
outsl
xchg
jge
jnp
sbb
mov
add
call
popa
fadds
aad
mov
add
lret
or
xchg
cmp
add
js
popa
out
xchg
add
adc
mov
adc
push
mov
js
dec
and
call
pusha
popa
mov
sbb
leave
fisttpl
add
jg
or
mov
mov
clc
and
lcall
mov
mov
ds
xchg
lock
out
push
andl
movsb
cmp
ret
inc
xchg
pusha
mov
add
mov
stc
add
mov
push
out
cmp
mov
pop
adc
gs
jno
sub
roll
xor
fldenv
xchg
jb
add
jae
fcom
nop
or
popa
not
mov
ret
xchg
cmp
mov
lcall
mov
in
arpl
xchg
mov
pushf
lret
add
dec
push
pusha
test
roll
lcall
lcall
or
mov
outsl
or
add
sbb
divl
adc
or
add
sub
or
inc
xlat
mov
mov
cwtl
test
idiv
jl
mov
icebp
enter
pop
insb
or
pop
sbb
mov
popa
shrl
jns
sbb
adc
add
or
rolb
and
arpl
shrb
cmpsb
fcmovb
add
or
subl
insb
dec
inc
mov
add
pop
incl
gs
xor
lock
lcallw
je
or
insb
or
cmp
push
incl
pop
pop
fwait
lock
rorb
jns
test
sub
mov
in
sahf
xchg
repnz
cmp
push
add
loopne
sub
sar
pop
push
inc
mull
insb
outsb
dec
imul
cltd
jb
flds
clc
sub
add
fldz
rcrb
or
add
xlat
in
insb
inc
add
lcall
fsubs
pop
xor
inc
adc
jnp
push
es
sub
std
in
xchg
fimuls
insb
push
test
jl
icebp
fstpl
movsl
cmpl
add
xchg
dec
jo
pop
mov
cmpb
fidivrs
roll
dec
lods
add
imul
mov
int
cwtl
andb
adc
add
aad
sbb
push
test
mov
push
sub
clc
popa
pop
lock
mov
inc
insb
imul
loope
popa
mov
jno
enter
jo
dec
and
pop
push
push
fsub
add
repz
imul
and
mov
ret
mov
and
push
je,pt
add
cltd
in
call
adc
popf
test
sub
loopne
adc
jg
fimuls
inc
negb
or
loopne
cmp
fldl
addr16
ret
xor
mov
mov
out
push
jmp
insb
movsl
mov
imul
pusha
notb
xchg
push
inc
add
and
mov
add
dec
daa
sbb
mov
dec
add
dec
hlt
cmp
or
test
lret
adc
cld
fiaddl
inc
cmp
and
js
int
fsubl
mov
popa
push
or
add
ret
cmp
mov
popa
daa
sbb
mov
and
cmp
addl
mov
xor
mov
add
or
bound
lea
cwtl
or
sbb
cmp
push
negl
cwtl
pop
cmp
popa
mov
adc
sub
clc
jle
add
movsl
loop
ja
rclb
jmp
out
cmp
insl
mov
lcall
add
popf
fmul
jmp
ret
jmp
or
popa
outsl
aam
je
mov
idivl
pop
jle
inc
call
sub
test
pop
enter
in
xchg
dec
js
mov
add
repnz
lahf
add
adc
movsb
les
inc
sub
or
dec
jb
arpl
sub
pop
jecxz
add
inc
je
cmpsb
pop
call
pop
dec
pusha
loopne
pop
sbb
je
hlt
sbb
push
cmp
das
lods
loopne
shll
sub
cmp
phsubw
bound
je
and
fadds
mov
orb
cmp
and
ror
imul
mov
cmp
inc
iret
dec
mov
lahf
and
xchg
add
sbb
popf
cld
hlt
mov
out
add
jmp
mov
mov
cmp
movsb
adc
or
jmp
rolb
movsb
js
add
sbb
clc
jae
adc
adc
fimuls
outsb
jmp
sbb
test
movsb
mov
shrl
add
xchg
pusha
sbb
mov
dec
add
mov
fisttpl
push
out
fdivrl
pop
call
rorb
and
adc
loopne
sbb
in
mov
cli
mov
lret
sbb
mov
popa
and
xor
sub
mov
sbb
push
hlt
ret
fidivrs
stc
inc
mov
mov
push
or
push
xorl
stos
push
jg
mov
push
push
cmpl
call
lcall
call
sub
inc
fiadds
decb
pop
cli
aaa
imul
outsl
mull
jae
out
dec
dec
mov
ret
pusha
and
mov
xchg
mulb
or
pop
frstor
xor
jmp
lock
add
fcoms
rcll
mov
jmp
push
dec
sub
lock
push
push
loop
add
xchg
fcoms
adc
ljmp
xor
mov
mov
negb
or
adc
sbb
sub
or
pusha
add
mov
sub
dec
loope
enter
pop
int3
xor
dec
cwtl
xlat
push
in
add
and
push
xchg
lock
mov
pop
add
or
dec
pop
add
add
movsl
call
mov
add
mov
adc
or
fnsave
sbb
rorb
add
nop
xchg
dec
inc
mov
add
push
pop
jo
dec
sbb
decl
inc
es
push
fadds
ret
dec
lock
dec
nop
mov
xchg
lcall
mov
mov
and
or
imul
hlt
repz
pop
inc
mov
lahf
adc
add
and
shlb
rcl
enter
mov
repz
xlat
pop
cmp
mov
lods
mov
sub
les
push
mov
and
in
imul
popa
pop
jle
call
mov
call
ret
je
cltd
cmp
adc
adc
in
es
movsl
sti
into
or
sbb
push
ret
cs
xor
sbb
cmp
add
mov
outsl
out
sahf
popa
xorb
xorl
dec
popa
call
cmp
subb
mov
sub
in
pusha
fs
sbb
mov
cmp
rcr
out
sbb
and
fs
aas
cmp
jae
mov
push
nop
and
lcall
sbb
and
pop
push
add
je
mov
xchg
pop
and
call
rorl
faddl
ds
out
dec
mov
fs
arpl
mov
clc
pop
add
popf
gs
repnz
aam
jo
out
mov
sbb
popf
loopne
mov
sbb
jae
push
mov
and
mov
dec
xchg
outsl
xchg
or
push
lods
inc
outsb
sahf
mov
sar
dec
adc
add
hlt
jp
jb
push
shrb
sbb
push
adc
and
mov
pop
and
clc
inc
jb
rcrb
fisubl
sub
cmpsb
xor
pop
ds
xor
xchg
js
lods
add
or
sar
test
jecxz
mov
ret
mov
push
xor
push
jecxz
sbb
jp
lods
clc
gs
or
decb
pop
xchg
addr16
ds
mov
lods
adc
sbb
pop
push
pop
cmc
sbb
xchg
mov
fldcw
lahf
aad
add
icebp
mov
loop
aaa
arpl
int3
jmp
fiaddl
test
mov
rclb
sub
iret
add
sbb
xchg
rcll
cltd
pop
add
jb
lahf
mov
pop
flds
jae
push
and
inc
adc
hlt
test
into
push
repnz
pop
mov
sahf
sub
lret
adc
pop
movsl
pop
add
nop
daa
inc
inc
call
je
xor
cmp
sbb
jge
mov
aam
pop
jp
mov
ficoms
push
cld
sub
jmp
mov
icebp
cmp
lcall
mov
xchg
stos
or
sub
mov
inc
sub
cmp
test
mov
cmp
adc
int
ja
pop
std
add
add
decl
add
call
enter
vpackuswb
stc
xor
mov
mov
add
add
sbbl
aas
and
daa
sbb
rcl
sub
add
stos
mov
add
fwait
into
cmp
lock
push
add
jnp
insb
lods
das
xor
testb
scas
out
aaa
pusha
pusha
lods
pop
add
dec
adc
sub
aas
pop
int3
sbb
ret
imul
mov
outsl
mov
and
mov
iret
ljmp
inc
out
push
xchg
in
fwait
cmp
pop
pop
sbb
jle
mov
ret
add
inc
or
outsl
adc
fdivs
jno
add
setb
jne
add
sbb
popf
cmpsb
push
popa
jge
add
mov
xor
sbb
je
add
cltd
mov
lsl
jo
mov
inc
ss
and
mov
mov
push
test
mov
adc
adc
add
repz
add
cmp
xchg
inc
xlat
mov
js
inc
int3
inc
jecxz
in
add
push
loop
shlb
xor
cmpsl
and
xchg
mov
adc
mov
test
adc
push
add
xlat
sbb
xchg
mov
jg
orb
adc
cmp
push
xor
inc
cmp
xor
or
and
sbbb
iret
add
loop
cwtl
xor
push
jno
movsl
orl
add
cmp
inc
dec
les
add
aaa
add
maxps
sub
bound
aaa
out
mov
mov
sub
imul
sub
fdivr
pop
addr16
add
sbb
pop
add
mov
ljmp
decl
daa
lds
cwtl
jne
sub
push
scas
inc
pop
or
mov
aas
movnti
sub
adc
cmp
cld
sub
repnz
pusha
cwtl
rcrb
je
or
pop
dec
mov
int
mov
push
cld
sahf
add
repz
sbbb
cmpl
insb
cmp
ja
xchg
sbb
arpl
mov
subl
test
inc
int
shlb
mov
lret
insl
sub
add
mov
mov
xor
mov
rolb
jp
add
add
pusha
pusha
aam
fisttpl
jb
sarb
xchg
inc
in
popa
cmp
pop
pop
add
jl
adc
push
test
pop
push
stos
ret
fnstenv
mov
add
adc
xchg
cmp
ljmp
sbb
adc
mov
and
loop
inc
jecxz
out
inc
adcb
ljmp
xchg
repz
mov
ret
add
test
orb
imull
outsb
push
and
adc
mov
insb
inc
xchg
fimuls
jae
jns
shl
inc
shr
or
push
xchg
cmpsl
and
ret
xor
in
loop
fsubs
stos
mov
mov
xchg
pop
mov
jl
shrb
cmp
mov
adc
loopne
outsb
das
add
movsb
decl
add
rorl
pop
shl
sub
andb
push
aas
xchg
sub
mov
jns
adc
add
inc
test
mov
jne
add
lret
lcall
and
jecxz
dec
jg
add
inc
pushl
aad
xor
in
jae
lcall
ret
push
mov
adc
add
adc
jl
add
aas
outsb
in
cmp
int
sub
sbb
sub
into
sarl
out
cwtl
cwtl
add
rolb
and
mov
jne
js
ds
mov
sbb
xchg
add
stos
mov
pop
jae
pop
pop
xor
ficompl
ljmp
ja
data16
movsl
jae
rorb
lret
aas
xlat
pop
dec
xchg
or
xor
add
push
lar
inc
mov
add
xchg
mov
add
jecxz
pusha
cmp
add
out
repnz
xor
add
in
or
add
ja
jmp
loop
pop
mov
add
addr16
repnz
pusha
ror
pop
nop
or
call
or
in
cmc
adc
add
mov
arpl
mov
repnz
in
push
inc
mulb
int3
flds
dec
or
sahf
jle
cmp
loope
in
mov
add
rcrb
mov
test
mov
or
cld
dec
cwtl
nop
add
inc
xchg
imul
mov
add
arpl
mov
movsl
fistpl
lods
cmp
push
test
adc
in
mov
add
popa
jecxz
mov
cmp
cs
rcrb
xchg
add
jg
movsb
jl
dec
movsb
xlat
xor
add
and
mov
add
jns
xor
add
cmp
inc
push
lret
rcl
test
repnz
and
sub
add
es
inc
jge
inc
add
mov
cmp
stos
cmpb
lock
add
cmp
sub
push
cmpsb
pop
and
dec
aam
cwtl
shl
outsb
jne
add
inc
imul
divl
pusha
or
xlat
add
sahf
incb
shlb
xor
or
jecxz
inc
pop
dec
cmp
cmp
add
dec
pop
jecxz
sub
fbstp
xor
xchg
cmp
sbb
dec
sub
gs
cmpsb
or
xor
nop
dec
push
add
sar
mov
arpl
jecxz
dec
mov
xchg
xchg
loope
mov
add
push
std
add
dec
mov
jmp
sbb
or
mov
push
add
shrb
je
mov
nop
push
add
add
nop
sub
clc
xchg
not
test
adc
add
sbb
jbe
test
push
adc
cwtl
aam
incl
fadds
cmp
dec
fwait
adc
or
cmp
mov
cmp
xor
xchg
imul
test
push
mov
fdivl
jecxz
insl
ficoml
pop
rorb
sub
add
and
mov
outsb
and
or
add
jno
jne
sub
add
fwait
arpl
es
mov
add
cmp
sub
rolb
xchg
icebp
int3
popa
cmp
pop
and
xchg
mov
scas
lock
xor
int3
addb
add
mov
xor
cwtl
add
add
mov
sub
add
in
fcomip
inc
push
imul
add
cmpl
adc
and
pushf
out
xlat
push
jne
repz
daa
mov
pop
icebp
test
jl
mov
int
aam
jae
inc
inc
pop
cmpb
ret
xchg
mov
jl
adc
aas
xor
imul
lods
or
and
loope
pop
shr
pop
mov
add
mov
add
inc
xor
out
add
xchg
cmp
mov
push
fdiv
in
mov
xor
aaa
adcb
inc
add
and
jb
jns
mov
push
cltd
fucom
lcall
or
xchg
movsl
jg
andl
and
add
fcmovb
stos
repz
dec
xchg
cmp
xchg
scas
jecxz
add
call
clc
inc
inc
push
roll
movsb
fisttps
inc
add
jbe
mov
push
sub
lods
sbb
movsb
sub
pop
int3
sbb
in
pop
mov
adcl
push
dec
mov
pop
gs
dec
loop
xlat
push
pop
add
sahf
xor
lods
cwtl
sldt
and
stc
fs
popf
jle
cmpsl
add
fstl
pop
mov
loopne
add
add
adc
int3
clc
push
add
xchg
mov
sbb
fisubrs
stc
add
adc
xor
lock
inc
pop
add
xor
gs
xchg
lds
pop
mov
call
and
push
cwtl
jbe
xchg
jge
cmp
add
arpl
ret
out
push
xchg
pop
add
les
jl
hlt
cmp
roll
mov
sbb
push
imul
cmp
inc
clc
xor
mov
cwtl
mov
sbb
call
dec
xchg
std
adc
add
fidivrs
xchg
or
or
imul
les
in
test
andl
mov
mov
add
mov
enter
cs
data16
jo
out
cmp
andb
push
add
sub
mov
ja
add
push
adc
add
insb
inc
adc
jp
or
shll
jb
jle
js
mov
test
cmp
dec
daa
xor
sbbb
xor
lods
cmp
hlt
dec
test
sbb
and
sbb
jo
out
sbb
add
jg
xor
push
fsubs
es
clc
sbb
imul
movsl
xor
jb
sub
mov
push
dec
xor
divl
mov
aam
cs
xchg
rorb
sbb
mov
pop
shrb
add
mov
inc
call
fstpt
sbb
test
xchg
mov
mov
shrl
pop
adc
ror
test
mov
adc
nop
xor
shlb
dec
mov
shlb
arpl
pop
test
add
mov
jo
ds
je
insl
es
pushf
repnz
add
dec
jns
in
in
xor
add
popa
roll
hlt
adcb
enter
dec
jmp
fdivrs
lock
orl
push
adc
cld
sar
mov
adc
clc
adc
repnz
adc
scas
sbb
loopne
push
mov
dec
sbb
pop
int
clc
xchg
test
dec
pop
imul
cmc
jmp
test
sti
ja
push
das
cmp
mov
ficompl
out
xchg
notl
add
cmp
jl
xor
into
mov
enter
lods
or
aas
mov
fidivl
or
pushf
mov
push
faddl
mov
das
test
cmp
popf
cmp
mov
xchg
repz
jns
outsb
push
icebp
mov
cmp
sahf
mov
mov
pop
pop
or
inc
out
push
add
and
mov
add
lret
test
fsubr
and
or
sub
ror
cmp
jp
test
pop
push
int
or
push
add
imul
mov
and
mov
out
lods
lds
add
les
or
jg
push
movsl
add
movsb
hlt
out
xor
into
pusha
push
mov
cwtl
xchg
inc
addb
pop
xchg
jbe
flds
hlt
jb
jl
xor
xchg
cmp
imul
daa
add
inc
aas
xchg
fldt
mov
add
ljmp
jp
mov
sbb
xchg
je
push
int3
aaa
cmp
out
add
mov
aaa
inc
add
cmc
imul
xor
add
or
pop
divb
jmp
dec
int
adc
or
add
mov
jns
and
jp
add
sub
add
mov
mov
addr16
add
add
dec
cmp
sbb
int
inc
cmp
rorb
mov
sbb
push
jne
fwait
mov
in
lock
cmp
push
push
add
jno
imul
mov
fisttps
and
jl
adcb
sbb
jns
add
adc
add
nop
jg
cmp
jne
cmc
pop
pop
cwtl
cmpsl
arpl
loopne
inc
mov
push
and
out
sub
push
sbb
sbb
test
call
rorl
and
or
hlt
and
orb
or
jecxz
inc
aaa
add
push
addr16
cmp
sub
sub
add
mov
ret
std
add
jns
stos
clc
add
stc
test
ret
push
add
adc
sbb
cmp
add
cmp
icebp
add
outsb
dec
mov
in
jecxz
cwtl
or
lcall
mov
test
ficomps
fcomip
xor
add
ds
push
mov
imull
pop
call
cmp
jns
cmpsb
rcrb
mov
mov
je
bound
packuswb
jbe
and
jae
nop
mov
add
sbb
scas
in
adc
stc
dec
push
pop
addb
and
dec
clc
xor
xor
inc
cmpsl
inc
iret
loopne
jnp
ret
add
ja
lret
inc
rcrb
xor
ror
and
fstl
and
add
push
aas
add
jecxz
or
insb
lcall
movsl
push
lea
add
sahf
shll
lock
cmpsl
popf
add
out
out
pop
repz
int3
push
push
and
adc
loop
dec
mov
iret
sti
les
aam
xor
xchg
imul
inc
mov
jecxz
inc
pusha
mov
jl
sub
xor
pop
pop
pop
shll
sub
jb
push
popf
out
adc
mulb
push
add
xchg
add
sahf
and
or
lahf
dec
sub
stos
call
cmpsb
divb
adc
mov
cmp
add
dec
in
mov
testl
insl
jmp
rcl
jae
mov
cmc
add
mov
fdiv
in
lret
out
daa
push
push
pusha
add
push
pop
add
mov
int
adc
aas
xchg
push
adc
rorl
cli
inc
aaa
add
mov
mov
mov
cvtpi2ps
adc
in
xchg
add
js
or
push
loope
pop
data16
rorb
in
xor
xor
mov
jg
xor
leave
add
mov
rorl
sub
sbb
or
dec
jae
mov
iret
fcomp
jp
add
movb
add
or
xchg
repnz
in
mov
insb
xchg
aam
ret
jmp
ret
cmp
xchg
enter
push
inc
cmp
out
jnp
push
insl
lret
add
icebp
andl
imul
xchg
mov
loope
mov
jnp
push
ror
das
adc
mov
mov
rolb
and
daa
or
inc
mov
and
jge
and
cld
pop
leave
add
inc
pop
push
aam
int
gs
insl
shlb
add
pop
add
pop
pop
cmpb
ss
add
fldl
mov
xchg
icebp
dec
add
sbb
push
pop
add
push
pusha
and
scas
lcall
test
fimull
add
lock
stos
xchg
inc
int3
push
add
in
sbb
or
xor
outsl
filds
and
jbe
fwait
call
add
shlb
adc
mov
xlat
mov
shrl
jp
add
imul
loope
shll
outsb
addl
ds
in
movsb
les
repnz
push
add
stos
or
test
mov
orb
pop
loopne
xchg
scas
mov
cmp
leave
jg
sub
add
in
movsl
int
xor
add
add
out
xor
add
insb
inc
fildl
mov
mov
add
mov
jg
lock
mov
xor
dec
mov
add
outsl
sbb
cwtl
nop
data16
dec
testl
cmp
aaa
adc
adc
scas
cmp
js
jmp
stos
adc
in
add
lcall
xor
sbb
mov
or
and
add
sub
jne
xchg
ja
imul
add
add
jl
jge
mov
aas
loop
mov
mov
lods
jb
mov
pop
addb
out
sub
sub
test
lea
cmp
mov
add
test
sarb
stc
jg
adc
in
ret
add
enter
push
jno
dec
mov
mov
mov
jecxz
push
jnp
add
push
push
leave
or
adc
dec
add
dec
rcll
add
sbb
pushf
flds
pop
jb
ljmp
int3
movsb
pop
inc
sub
or
inc
jo
cmp
mov
inc
and
add
lds
jge
bound
mov
movd
xor
fnstenv
aas
adc
cli
inc
sub
aam
stos
add
xor
lds
xorb
aas
ret
pop
mov
mov
test
adc
xorb
mov
movb
mov
add
push
lret
fstps
add
xchg
add
pusha
fdivrs
sub
sbb
sbb
insl
addw
outsl
push
dec
mov
into
ret
sub
sbb
dec
adc
mulb
or
lods
mov
add
xchg
mov
punpcklbw
mov
xchg
inc
sub
out
xchg
lahf
out
mov
shr
jmp
mov
inc
lret
pop
int3
mov
sar
or
fs
pop
xor
shrl
add
adc
add
jg
sbb
add
movsl
lea
xchg
lock
add
inc
xor
xlat
cs
ret
cltd
add
cmp
xchg
or
xor
js
inc
add
pop
pop
shlb
sbb
data16
cmc
inc
mov
add
push
add
lods
ret
cwtl
clc
shlb
into
add
jge
pop
pop
sbb
pop
add
pop
mov
lods
add
lret
rclb
add
enter
adc
je
into
test
xlat
add
fs
xchg
mov
add
js
dec
popf
or
pop
cmp
xor
lret
mov
add
mov
sahf
gs
add
in
stos
ja
xchg
test
add
mov
popf
insl
mov
pushf
pop
pop
push
out
lret
scas
cmpsl
in
adc
and
pop
sbbb
fnsave
xchg
mov
add
aas
xor
xchg
test
add
xor
push
ds
lods
dec
add
sti
addr16
rclb
scas
adc
cmpsl
dec
push
mov
mov
imul
add
repz
dec
pop
mov
in
jmp
lods
cmp
push
xchg
stos
add
sub
inc
add
jmp
mov
xchg
ja
pop
dec
mov
cs
inc
add
add
mov
dec
adc
aas
jbe
mov
pushf
fidivrl
pop
cmp
jno
inc
insl
into
xorb
in
jge
sbb
pop
nop
ret
pop
or
sbb
mov
cwtl
cmpsb
mov
movsb
nop
in
pop
adc
add
mov
or
dec
inc
inc
add
pop
mov
movsb
xchg
pop
rol
decl
out
popf
or
out
push
fmuls
les
sti
xchg
jg
add
js
mov
es
or
add
enter
add
btrl
dec
les
adc
shrb
mov
int3
add
pop
js
loopne
jecxz
leave
xor
push
add
push
cmp
flds
out
mov
cli
fsubrl
add
int
popa
mov
xchg
adc
pop
movsl
mov
jle
mov
pop
pop
and
movsl
adc
sbb
test
add
mov
mov
xchg
add
jne
lea
aas
push
add
insb
add
test
lods
scas
fmull
jp
push
jge
mov
mov
add
add
into
pushf
std
fucomi
sub
push
xor
sahf
xorl
iret
add
ja
ds
pushw
cmc
sub
mov
adc
pop
mov
dec
lods
push
mov
pop
les
cwtl
cmp
and
pusha
jo
test
fmull
mov
gs
add
neg
mov
dec
xorb
cmc
filds
jp
loopne
js
xor
outsl
repz
adc
jmp
or
pop
test
pop
test
add
adc
pop
add
sub
ret
in
fcmovb
and
dec
push
jle
sti
test
ljmp
fidivs
add
mov
enter
movl
ret
andb
dec
shlb
daa
notb
sub
pop
pop
popa
les
in
sub
xor
adc
add
jmp
idivb
inc
imul
rolb
loop
cli
pop
nop
add
dec
jge
imul
add
js
mov
out
dec
add
cmp
sub
outsb
jmp
mov
push
xchg
out
add
jns
cmp
inc
mov
or
sbb
sbb
stos
mov
push
cmpsl
inc
lcall
or
ret
mov
xorb
scas
and
clc
push
add
mov
jl
mov
jno
pusha
int
psubsb
shll
push
add
gs
jmp
mov
mul
add
out
add
sub
xchg
or
lret
xlat
addb
addr16
dec
pop
push
add
push
pop
push
aam
mov
or
mov
outsl
and
mov
mov
je
add
stc
arpl
jae
add
cmp
sbb
xchg
aam
cmpsl
jns
js
cwtl
mov
fcomps
cld
repz
lea
cmp
mov
and
and
lock
mov
lods
pop
add
out
jbe
loopne
mov
iret
ss
cmp
outsb
sbb
stc
mov
gs
add
cwtl
clc
mov
or
xchg
pusha
lret
inc
insb
dec
push
es
mov
out
out
sbb
ds
pop
xchg
nop
roll
mov
add
mov
jae
fdivs
xchg
jl
xchg
popf
push
add
pop
imul
sbb
xchg
inc
and
gs
jns
mov
adc
shrb
mov
pop
xor
je
inc
xchg
inc
sbbb
icebp
push
in
xchg
jno
add
gs
xchg
jne
or
jae
inc
test
push
jns
cmp
add
sbb
xchg
jb
pusha
add
cmp
mov
lret
nop
jnp
cmp
sbb
mov
xchg
push
pushf
test
imul
loope
jno
or
popa
mov
mov
roll
pop
or
ds
pop
and
mov
mov
ficoml
scas
outsb
sbb
sub
popf
adc
push
mov
repnz
adc
mov
jne
inc
pop
insb
add
mov
lock
lret
sbb
enter
aaa
pop
mov
xlat
fcoms
and
xchg
into
push
lret
add
mov
lea
lods
and
jnp
loopne
js
cltd
dec
sti
les
cmp
scas
xchg
cmp
sub
mov
dec
add
sub
sbb
and
jno
jne
lret
loopne
xchg
inc
lds
add
or
les
add
aam
push
adc
pop
jp,pt
stos
add
dec
outsb
sub
cltd
inc
and
popa
repnz
adc
sub
cs
aam
xchg
lahf
sbb
cmpsl
xchg
jecxz
xor
xchg
mov
in
pop
cwtl
int
mov
repnz
popfw
add
outsl
lcall
jecxz
push
xchg
inc
or
mov
push
addb
mov
movsb
adc
sbb
in
ds
lcall
test
adc
sbb
xor
push
jo
and
jb
add
into
mov
push
clc
inc
addr16
push
xor
clc
mov
out
shr
jecxz
and
imul
xchg
sub
and
push
add
push
test
jg
add
bound
shll
in
dec
test
fnstenv
jl
sbb
sub
cmp
lahf
pushf
mov
pop
mov
ret
lret
in
fmuls
test
subl
roll
sub
nop
inc
ret
add
add
out
rorb
pop
xlat
and
xor
cwtl
cmpsb
xor
mov
jl
or
ja
and
push
add
call
sti
subb
adc
dec
bound
into
mov
and
jbe
out
add
cwtl
jge
adc
jge
cmpb
sbb
pop
dec
sbb
imul
in
add
test
dec
inc
clc
sub
stc
dec
inc
bound
lds
out
aam
dec
adc
mov
jno
jmp
lret
cltd
pop
data16
add
shlb
add
mov
xor
push
clc
jmp
fmuls
out
mov
scas
add
pop
in
or
and
adc
adc
sub
aad
add
pop
jl
pop
aaa
mov
add
xor
push
add
adcb
pop
sub
and
or
addr16
xor
cmp
int
dec
cmpsl
aam
or
popa
adc
xchg
out
scas
orb
or
cwtl
add
std
sub
add
sub
jb
inc
faddl
cmp
sbb
hlt
add
or
adc
cwtl
pusha
cmp
inc
add
push
mov
fsubrl
xchg
loop
shrb
mov
xchg
add
cmp
fs
imul
pop
mov
leave
es
loopne
push
lret
out
imul
in
or
dec
int
lret
ficoms
mov
cmpsl
dec
dec
pop
inc
add
adcl
insl
inc
nop
dec
xchg
cmp
out
adc
cmpsb
cld
or
lret
addb
lods
test
or
cmpl
cmp
test
dec
push
add
gs
ret
push
xor
xor
xchg
jno
leave
dec
dec
hlt
jl
mov
push
sub
xchg
mov
mov
loope
push
test
fbstp
enter
test
inc
sbb
push
mov
out
or
call
cli
and
in
lods
fs
xchg
sbbb
push
xor
adc
jbe
cmp
test
mov
and
es
mov
xor
or
repz
add
sahf
psubw
or
ret
mov
inc
xchg
arpl
xchg
push
pop
mov
sbb
je
lock
cmp
test
ret
js
mov
add
or
mov
pop
loopne
dec
out
or
icebp
xor
add
jo
or
lret
cmpsl
addb
add
cmp
sbb
push
jecxz
push
add
out
xorb
pop
xor
pop
xor
incl
mov
adc
xchg
push
and
jne
les
stc
push
insl
add
out
lods
jle
scas
and
add
clc
mov
andl
loope
mov
loop
dec
gs
add
xor
xor
loop
andl
test
mov
jno
mov
aad
mov
call
fnstsw
out
dec
pusha
cmp
out
icebp
fs
lods
rcrb
scas
pusha
cli
cwtl
and
xor
mov
add
cmp
popf
sub
add
leave
andl
xor
lret
and
or
cmpb
sub
adc
stc
out
and
pop
push
fcoms
jns
dec
popa
sarl
sub
pop
pop
fisubrl
shrb
aas
add
xchg
idivb
rorb
fildl
push
dec
pop
add
bound
and
pop
cld
mov
dec
inc
pop
adc
pmaxub
cmpb
sub
dec
or
fisttpl
mov
pusha
jp
sbb
std
sbb
ja
mov
adc
add
gs
xor
js
les
xchg
lock
dec
lahf
fldcw
inc
sbb
add
push
mov
mov
sub
incb
sub
fcmovnb
fnstcw
jle
push
add
push
daa
push
cli
xchg
add
or
fdivrl
xor
xchg
jbe
mov
or
sub
subl
es
leave
mov
or
push
pop
inc
arpl
add
les
cltd
or
adc
andb
sbbb
ficoml
rcrl
push
pushf
loope
xor
fistl
add
sti
stos
jne
decl
sar
pop
push
xor
sti
push
jp
mov
mov
add
dec
push
fstpl
aam
or
fisubl
icebp
test
flds
test
add
mov
incb
pop
dec
mov
jnp
xor
add
sub
pusha
add
xchg
add
mov
jp
cmpb
cmp
es
test
push
popf
std
jp
mov
add
sbb
push
push
out
pop
clc
inc
dec
dec
clc
daa
and
cld
push
cmpb
sbb
inc
adc
jge
adc
nop
mov
push
pusha
flds
sbb
notl
ss
xchg
sbb
inc
push
add
fdivrl
mov
cmp
testb
fnsave
enter
adc
rcll
sub
mov
inc
call
movsb
add
dec
cmc
fistps
mov
cld
add
add
adc
push
and
or
add
xchg
push
and
mov
sub
in
test
out
insb
pop
sub
rcr
and
int
add
fistl
mov
ja
or
add
fs
pop
sub
dec
movsb
sbb
push
or
fdivl
pop
cmp
jmp
and
mov
or
jno
lock
or
add
not
subb
and
jo
movl
jns
ja
pop
clc
lds
and
test
in
js
push
iret
jp
xchg
inc
xor
cli
sub
loope
push
aam
dec
loopne
xor
andb
loopne
push
and
sbb
pop
je
dec
mov
mov
aam
dec
lds
lret
leave
testb
push
or
cwtl
or
leave
add
insl
imul
add
adc
ret
scas
cmpsb
add
or
js
jb
inc
adc
push
jecxz
add
add
sarb
mov
rorb
enter
cmp
sar
push
pushl
push
fbld
pop
xchg
adc
pop
push
hlt
outsb
mov
or
xlat
mov
pop
adc
insb
nop
and
scas
jo
dec
or
lock
not
pop
push
dec
mov
pusha
ja
mov
inc
popa
and
push
xor
or
fidivl
int
add
xor
inc
rcr
xchg
pop
call
dec
adc
push
inc
mov
jns
jb
shrl
test
neg
jecxz
pop
les
add
pusha
sbbl
roll
rcll
or
fidivrl
arpl
testl
popf
es
add
jb
inc
jbe
shlb
add
sahf
xchg
outsl
sti
fildl
sub
push
xor
outsl
pop
dec
add
icebp
mov
pshufw
incb
js
sub
add
mov
pop
loopne
push
and
pop
dec
pusha
xor
das
outsl
add
hlt
js
sbb
cli
push
add
test
push
push
add
mov
dec
fsubrl
in
popa
add
adc
stos
scas
jecxz
pop
add
andl
decb
push
popl
js
xor
or
fwait
sbb
fcomp
inc
pop
add
leave
sub
push
shrl
sbb
add
or
xchg
into
fcomip
fisttps
movb
sub
roll
cld
lret
add
or
imul
and
fistpll
mov
mov
inc
xchg
inc
nop
hlt
add
jg
sub
push
pop
fiadds
dec
test
scas
jecxz,pn
inc
add
stos
out
dec
fwait
or
sub
mov
ret
popf
sbb
cmp
sub
pop
add
test
and
pop
jae
jns
into
xor
jg
inc
push
outsb
push
add
fstpt
adc
mov
lds
jg
jnp
cmpsl
jae
add
mov
add
cmp
add
mov
push
aad
or
insb
addl
fisttpl
xchg
mov
push
loopne
enter
push
jns
inc
cmp
or
aad
mov
and
imul
outsb
popa
jo
pop
shlb
jl
nop
loopne
pop
shlb
sbb
int3
sbb
mov
sbb
cmp
mov
popf
add
mov
adc
push
push
add
pop
dec
dec
test
sub
push
movsl
test
pop
jns
inc
mov
inc
and
add
pop
lods
push
jl
sbb
mov
pop
sub
jno
sahf
add
xorb
add
adc
mov
xor
mov
mov
jecxz
xsavec
mov
mov
push
add
or
adc
popf
pop
ja
pop
les
fstpt
stc
sub
cmp
cmc
lahf
xchg
test
dec
sub
sbb
cmp
adc
enter
lea
and
or
subl
push
fstpt
add
dec
jle
adc
in
es
mov
cmp
push
push
sbb
and
jp
test
ret
add
dec
push
xchg
ktestw
jo
jecxz
push
adc
and
add
or
pushf
cmpsl
lahf
mov
enter
inc
push
pop
add
insl
and
imul
orb
push
push
rcrb
clc
addb
pushf
ja
sbb
add
jp
push
aaa
out
sbb
xor
push
shrb
jo
pop
inc
dec
adc
adc
pop
cmp
inc
add
lahf
add
stos
adc
or
mov
loopne
cmp
fldcw
inc
in
mov
dec
cltd
or
pop
add
fs
enter
xchg
add
lret
sub
pop
ret
jbe
add
jae
dec
xchg
rorl
jae
add
sub
xor
loop
rol
int
daa
jecxz
pusha
push
cs
lret
sub
push
and
xchg
mov
out
push
push
push
jo
lock
aas
imulb
dec
add
fdivrp
and
add
cwtl
out
pause
add
mov
xchg
add
push
in
inc
add
sub
andb
push
sarb
jo
iret
mov
hlt
pop
push
mov
ja
enter
rorb
inc
lret
push
add
adc
sub
int3
pop
push
add
repz
mov
add
fwait
lods
movsb
daa
jmp
outsb
out
fcoml
pop
sbb
add
jae
loop
call
lock
pop
repnz
pop
add
mov
mov
inc
cmpsl
daa
shlb
cwtl
mov
stos
imul
scas
pusha
push
outsb
jp
popl
pop
or
add
mov
scas
mov
jl
outsl
inc
dec
dec
push
test
vaddss
pop
hlt
je
push
loope
stc
or
jmp
xor
iret
divb
outsl
xor
outsb
out
inc
add
lds
test
and
aam
push
xchg
and
cs
add
jmp
subb
adc
xchg
js
mov
or
lock
test
adc
add
xchg
in
leave
jns
add
loope
pop
inc
clc
sti
jnp
add
movsl
mov
add
popa
lock
ret
arpl
push
dec
mov
jns
inc
and
push
mov
pop
lods
sbb
add
lock
out
pop
addl
fldt
insb
jl
push
into
jo
add
test
fs
adc
mov
cmp
cmp
outsb
add
adc
xor
in
and
ret
sub
lret
fldl
mulb
shll
and
sub
xchg
cmpl
cmc
add
aam
adc
or
and
fldenv
pusha
mov
push
out
push
popa
mov
mov
dec
xchg
pop
cli
sub
add
leave
lock
cmpl
mov
mov
add
jbe
pop
out
push
cmp
cmp
mov
add
adc
test
add
xchg
add
inc
loop
sbb
ljmp
mov
cmpb
push
cmp
jge
dec
das
loopne
in
and
test
test
sbb
daa
fstpl
mov
and
or
push
ljmp
sar
adc
inc
js
bnd
xchg
lahf
sbbl
in
push
pop
sti
mov
mov
imul
pusha
loopne
cli
and
jnp
roll
inc
aad
int3
xchg
push
add
jno
mov
iret
add
inc
gs
push
ljmp
loopne
inc
add
out
jbe
loope
addr16
ljmp
push
rcr
adc
nop
popf
push
ret
sbb
add
sbb
andl
leave
cltd
pop
ja
cld
pop
xchg
or
je
subb
imul
and
push
sub
xchg
or
loopne
lock
adc
lods
adc
cmpsb
add
inc
add
xor
adc
push
adc
sbb
icebp
in
popa
popa
in
add
inc
mov
sub
add
sbb
jle
insb
mov
mov
je
push
test
pop
add
ret
es
and
dec
testb
movsb
dec
in
aas
pop
orl
mov
test
mov
jno
add
pop
jl
out
aaa
bound
aas
cmpsb
mov
cmp
daa
addb
les
and
test
add
xlat
or
adc
xchg
add
mov
repz
cmpl
in
lds
pop
imul
or
cmp
add
fcomp
xchg
xor
mov
outsl
shlb
mov
dec
pop
mov
xorb
cmpl
fisttpl
inc
hlt
rdmsr
inc
sub
push
sub
inc
adc
sahf
loop
add
xor
cmp
outsb
push
outsl
lea
or
push
add
and
and
sub
into
sub
adc
add
add
add
pusha
das
shlb
inc
repnz
sbb
pop
mov
scas
add
and
xchg
adc
test
mov
les
daa
jp
ret
insl
push
push
hlt
adc
loope
xchg
insb
add
add
or
sub
pop
loope
loope
inc
in
sbb
lret
lret
mov
and
popa
add
sub
jl
cmp
push
jne
mov
jo
rcrl
or
or
jo
cmp
lods
cmp
fisubs
enter
add
inc
in
stos
ss
cmp
es
dec
sub
add
lret
aam
inc
add
push
add
rol
or
loopne
adc
cmpsl
loope
orb
nop
or
lcall
movsb
pop
lds
ficoml
shll
call
cmp
sub
outsl
push
nop
cmp
push
mov
jl
dec
mov
jg
add
js
push
fsubrs
cmp
lds
xorl
xor
in
dec
test
pop
enter
movsl
repz
mov
jmp
or
xor
jmp
sbb
enter
mov
pop
cmpsl
or
icebp
xor
andb
test
decb
aam
inc
sahf
clc
pop
inc
call
add
jae
cwtl
or
fcoms
mov
cld
xchg
adc
add
and
inc
dec
sub
out
sbb
pop
pop
jae
pop
inc
jns
sub
add
inc
fmuls
sbb
ja
xor
fmul
mov
imul
lds
popa
mov
push
imul
mov
test
adc
push
xor
mov
je
add
pusha
jp
aam
outsl
and
cmpsb
xchg
push
xchg
jle
movsb
and
stos
arpl
loop
add
xor
dec
bound
insb
or
rclb
inc
call
push
test
sbb
adc
xor
andl
das
shl
push
mov
jb
add
sbb
nop
rolb
movzwl
push
adc
or
cmp
or
pop
sbb
out
inc
lock
sub
jle
add
jnp
xor
out
pop
add
outsl
addr16
js
aaa
and
xor
dec
add
cli
add
jnp
xor
inc
sbb
inc
push
loop
mov
push
xorb
pusha
scas
xchg
pusha
mov
out
push
fistl
cmc
push
xchg
xor
sub
sbb
ret
int3
mov
in
lahf
push
test
add
popa
xlat
add
mov
sub
add
aad
mov
sub
and
sbb
rclb
sub
add
mov
add
int3
aas
cmp
add
imul
ja
jge
pop
pop
jno
icebp
mov
pop
dec
mov
mov
xorl
mov
and
and
pop
cmp
adc
nop
xchg
push
add
add
popa
out
jle
inc
iret
pop
or
dec
mov
pusha
jmp
jmp
test
mov
in
add
movsb
dec
jo
and
nop
pop
xor
cli
xlat
or
and
pop
mov
add
subb
fwait
jbe
adc
int
or
push
sbb
dec
ror
test
ret
inc
mov
cmp
jg
sbb
xchg
sbb
outsl
cli
dec
pop
jge
dec
enter
insl
sbb
lahf
lcall
incl
pushf
sbb
xchg
iret
adcb
and
testl
dec
jle
cmp
mov
dec
push
push
jmp
loope
lods
add
movsb
jnp
in
xchg
pop
adc
jae
mov
add
sub
lcall
xlat
lea
mov
cmp
sub
or
pusha
and
movsb
pop
add
mov
cmpsl
rcll
lods
push
pop
pop
cmp
or
add
xlat
dec
icebp
push
xchg
sbb
cmpb
inc
xchg
add
and
xlat
inc
sahf
inc
adc
incl
sbb
iret
add
push
mov
jmp
add
ljmp
addr16
andb
jns
hlt
jp
cmp
mov
daa
cmp
subb
lret
shlb
dec
push
mov
scas
xchg
and
ret
add
mov
fldcw
loopne
shlb
aaa
mov
jno
sbbb
push
incb
jp
cs
stc
push
outsb
add
into
pop
sti
rcr
mov
add
fiadds
push
and
aam
mov
mov
add
mov
sbb
and
sarb
sub
adc
wbinvd
sbb
or
adcl
lea
mov
aaa
or
inc
movsl
daa
adc
in
ja
stos
and
dec
push
add
movsb
std
addb
out
test
and
xor
inc
mov
shrb
jnp
pusha
add
nop
std
dec
mov
pop
stc
fsubrl
aaa
cmp
aam
add
dec
pop
and
pop
sub
loopne
jae
enter
mov
xchg
mov
add
push
andb
and
outsl
mov
push
out
movsl
pop
movsb
pushf
cmpb
xor
fisttpl
push
fstpl
shrb
out
pop
push
xchg
int3
adc
nop
adc
xchg
add
push
lock
add
sbb
loop
cmp
push
push
mov
or
mov
fsubs
add
inc
jno
dec
test
faddl
daa
hlt
cmp
add
sbb
pop
push
pusha
jmp
mov
xor
sti
or
mov
mov
jnp
test
jl
cmpsb
cld
sti
inc
jns
stos
mov
cwtl
sbb
ret
add
inc
cmc
movsb
mov
inc
jmp
rcrb
or
dec
jp
sub
pusha
xchg
adc
call
clc
cmc
int
je
add
or
ljmp
inc
int3
and
fistpll
push
push
lcall
push
out
or
sub
fwait
rcll
push
dec
ja
inc
adc
int3
sbb
jle
xor
dec
aaa
enter
sbb
nop
add
lahf
jp
add
fadd
movsb
sub
cmpb
jb
ja
call
add
es
js
push
xchg
enter
xchg
dec
mov
mov
jnp
pop
lahf
cld
jle
mov
outsl
sub
push
add
adc
inc
pop
cld
pop
dec
dec
push
outsb
and
jl
inc
xchg
lea
cltd
sbb
pusha
outsl
add
int3
push
aad
and
jge
cwtl
sahf
daa
orb
inc
push
inc
and
mov
cmp
xchg
add
nop
stos
mov
nop
pop
push
cmp
in
fadds
jl
mov
mov
jns
idivb
adc
int
pop
adc
inc
and
bound
jae
xlat
jns
es
shlb
jmp
shrl
aam
mov
mov
shr
out
adc
aas
sbb
inc
loop
inc
cld
std
in
add
xorb
push
ds
xchg
or
daa
jge
nop
jl
ret
outsb
and
add
icebp
add
push
xchg
add
test
jae
repnz
ret
dec
lret
loop
jbe
inc
mov
sub
and
pusha
add
jle
cmp
lahf
xor
mov
push
loop
dec
mov
test
sahf
pop
clc
addl
sub
lods
lds
repz
lret
int3
cwtl
mov
add
adc
test
lds
aad
xchg
xor
mov
push
das
cmp
incb
xchg
fistpll
addl
mov
xor
mov
int3
add
mov
mov
popf
scas
add
ja
inc
sar
mov
push
inc
cmp
clc
mov
sub
mov
pop
xor
out
shlb
scas
pop
dec
jg
mov
ljmp
pushf
cmp
mov
xchg
xchg
notl
and
loope
adc
sbb
inc
call
mov
sub
test
push
lock
and
push
mov
int
sub
sbbb
xor
mov
push
xchg
mov
out
inc
into
push
push
leave
mov
add
jne
inc
inc
iret
and
pop
sbb
mov
insb
pop
xor
loopne
imul
fidivrl
cmc
outsb
and
sbb
rolb
add
or
pushaw
push
popa
push
inc
sub
dec
jbe
sbb
mov
xchg
orb
jmp
fcoms
and
add
ret
shrb
adc
mov
add
or
cmp
add
inc
inc
faddl
icebp
xlat
xor
mov
xchg
sub
mov
add
mov
inc
add
shll
adc
leave
add
jg
icebp
xor
gs
inc
xor
jne
add
pop
push
sub
fisubl
das
scas
pop
push
lods
push
sbb
pop
js
add
ret
mov
fdivr
cmp
jg
add
mov
repz
xchg
dec
test
pop
sub
iret
inc
jne
sbb
cmp
or
popa
push
pop
test
mov
out
add
cmp
push
mov
test
imul
aaa
mov
jnp
jbe
stc
pop
xchg
idivl
or
into
jns
add
in
daa
add
cmp
hlt
add
insl
adc
or
fnstenv
mov
mov
sbb
dec
in
rorl
ret
add
dec
adc
inc
cmp
sub
popf
int
loopne
movsl
inc
mov
fcoml
inc
mov
sbb
loopne
icebp
xchg
add
mov
iret
and
push
leave
cmc
lock
push
incl
sub
test
arpl
xorb
into
sbbb
in
cmp
lods
clc
test
js
mov
pop
sbb
loope
test
mov
add
mov
ret
inc
aas
inc
out
nop
cmp
pop
das
add
inc
push
or
xor
cmc
pop
inc
enter
stc
mov
adc
hlt
aad
in
lds
pop
je
mov
adc
daa
mov
xor
xchg
mov
sub
iret
test
inc
xchg
adc
inc
or
jnp
pop
adc
add
jne
xor
or
leave
xor
sub
lea
mov
sbb
ret
test
cld
andb
push
or
mov
aas
leave
or
xor
add
les
sbb
cmp
cmp
cmp
sbb
sub
pop
lcall
pop
addb
sbb
add
mov
ljmp
mov
out
sub
repz
jae
add
jne
add
mov
repz
shl
fisttpl
mov
pop
jo
add
cld
pop
adc
xor
nop
mov
jmp
mov
jne
cmp
cmp
outsl
mov
cwtl
add
fwait
push
es
mov
loope
imul
daa
dec
inc
es
fdivrl
dec
add
sbb
sub
mov
cs
or
incl
push
sbb
ret
xor
inc
dec
lock
ret
movl
adc
mov
in
or
sbb
adc
into
sub
or
push
and
popa
fiadds
dec
loop
cmp
dec
stc
mov
pop
xchg
xchg
rcr
pop
adc
mov
dec
sub
add
mov
stos
and
mov
mov
or
adc
push
or
add
fsub
xchg
push
mov
mov
mov
xchg
mov
push
inc
cmp
ret
jp
adc
stc
test
add
movsl
or
sbb
adc
add
mov
xchg
and
popa
push
je
mov
stos
fidivs
dec
in
push
sub
pusha
enter
mov
pop
and
nop
dec
and
mov
inc
inc
xchg
sub
jno
jmp
repnz
sbb
add
ret
imul
pop
sub
add
xchg
and
movsb
add
push
mov
or
and
hlt
mov
sub
test
clc
push
push
scas
in
shlb
xor
aas
mov
push
and
cli
push
mov
je
nop
je
mov
xor
adc
jl
cmpsb
cld
push
and
enter
dec
inc
inc
cmp
aas
sbb
call
cli
and
mov
xchg
gs
stc
push
or
lods
enter
fisttps
lahf
divl
ucomiss
jl
sub
pop
pop
icebp
mov
loopne
aad
int3
pop
add
arpl
cmp
in
fisttpl
adc
adc
int3
cli
sub
add
mov
mov
mov
and
inc
jae
add
cld
xchg
mov
mov
pop
ljmp
and
int
mov
dec
rcl
push
out
pop
mov
push
inc
add
sbbb
xchg
add
out
add
lds
in
adc
inc
shll
movsl
dec
imul
cs
aas
or
adc
mov
inc
movsb
dec
mov
xor
xchg
mov
jo
lods
test
push
cmp
pop
mov
or
adc
and
test
push
enter
mov
hlt
sbb
addb
mov
mov
rcrb
popl
jp
adc
cmp
jbe
enter
adc
push
shl
sahf
sbb
setns
adc
imul
sub
hlt
jb
xchg
fcmovne
inc
add
adc
pop
adc
adc
aas
xchg
xor
insb
fcompl
adc
cmp
mov
movsl
shlb
push
mov
js
pushf
add
xchg
mov
push
push
insl
add
neg
ret
and
mov
push
rolb
inc
xlat
add
and
add
lcall
nop
jne
addr16
dec
les
mov
aad
lods
aaa
inc
inc
sbb
out
cmp
ja
or
jbe
dec
push
cwtl
mov
push
ljmp
push
adc
into
sub
enterw
xor
add
enter
push
pusha
and
cld
in
or
adc
out
or
mov
test
out
ret
fs
pop
mov
bound
movb
fldl
xor
pop
jb
clc
sbbl
nop
mov
dec
mov
in
cli
cmc
fmulp
imul
add
pop
test
ret
xor
add
and
add
inc
mov
dec
imul
add
jl
inc
test
cli
mov
dec
push
test
jl
jg
out
cmpsl
shlb
xchg
mov
mov
out
fs
pop
lock
jmp
adc
add
stc
inc
in
andb
xchg
add
sub
adc
das
xchg
lods
mov
inc
lahf
pop
and
aad
xorl
add
aas
movsb
xchg
hlt
inc
push
flds
push
dec
cwtl
mov
add
movsl
jle
hlt
popa
add
cmpsl
jne
rcrb
loopne
cmp
movsl
sbbb
add
xor
xchg
jo
pop
ret
pop
sti
enter
inc
xor
add
xchg
dec
mulb
jg
enter
cmp
out
add
sub
scas
pop
fistpll
mov
int
adc
mov
jno
add
mov
add
jae
ljmp
push
dec
leave
mov
out
add
adc
into
fsts
xor
les
sbb
lods
lret
xchg
add
les
in
or
xchg
cmp
les
das
cmp
test
out
call
add
xor
mov
and
cmc
xchg
clc
repz
jns
test
jmp
and
add
into
sbb
bound
dec
mov
cmp
shrb
cld
xor
jg
xchg
rorb
out
add
ret
cmp
adc
push
cmp
sahf
cmp
push
pop
cmpb
inc
mov
and
pop
push
mov
and
jl
fwait
cli
xchg
push
cmp
inc
xchg
and
cmp
adcb
repnz
add
dec
mov
sbb
lret
add
pop
std
or
adc
ljmp
int3
psllq
push
stos
add
mov
push
loop
cwtl
inc
sub
or
pushf
and
test
add
or
jo
and
sbb
sub
mov
sub
mov
insb
in
rorl
adcb
mov
test
xchg
mov
fimuls
sub
xchg
sub
pop
or
and
inc
sub
out
fincstp
ficomps
push
mov
push
std
inc
mov
test
add
push
pop
aaa
add
stos
insb
cmp
push
and
mov
test
or
xchg
add
jmp
sub
popl
aam
jp
loope
dec
push
jmp
cmp
add
mov
rcrl
xor
es
mov
lods
imul
add
scas
jmp
adcl
les
xor
adc
test
enter
cmc
fnsave
adc
cmp
rorb
push
bnd
xchg
stos
fs
lock
lea
gs
mov
sbb
and
sbb
xchg
mov
cmp
dec
mov
mov
add
or
pop
inc
dec
xchg
adc
inc
mov
hlt
push
and
rol
add
je
aas
pop
and
add
lods
sub
and
outsl
mov
xor
jl
js
rclb
test
jg
fs
addr16
test
out
stc
jmp
pusha
dec
mov
test
or
add
loop
sub
dec
sub
jno
gs
aas
bound
addl
add
sti
das
jle,pt
sub
jge
stos
jecxz
dec
jmp
add
lahf
shlb
add
out
inc
lock
add
and
lods
sarb
dec
xchg
push
or
pop
in
xor
xchg
and
add
jbe
fcmovnb
popf
dec
push
call
stc
sub
loopne
jle
fcmovbe
jp
add
cwtl
faddl
pop
add
mov
mov
lods
call
int3
sub
dec
mov
in
pop
les
pop
add
hlt
jle
mov
cmpb
pop
cmp
sbb
std
repnz
mov
adc
adc
out
xor
negb
int3
sbbl
mov
cli
enter
jae
or
lock
fbstp
xor
mov
dec
pop
xchg
lods
sbb
lds
icebp
nop
pushf
fidivrl
add
xlat
xchg
mov
add
inc
adc
push
clc
cmpsl
xchg
mov
add
mov
mov
ret
and
xor
xorl
mov
mov
or
cmp
verw
mov
testl
xor
jle
and
add
dec
ror
stos
pop
add
push
add
inc
xchg
mov
jno
cmovs
or
clc
and
inc
sub
lods
test
pop
and
loope
xchg
dec
pusha
fwait
pusha
jns
or
add
cmp
mov
cmp
xor
loopne
decl
dec
inc
and
pushf
xor
add
dec
ss
clc
xor
push
inc
enter
fs
push
jp
xchg
sbb
sbb
add
popa
cwtl
imul
stc
fs
clc
sub
insl
add
jl
rorl
xchg
add
scas
iret
lock
je
sti
add
test
push
push
cmp
push
mov
ret
test
push
add
outsb
xor
sub
fadds
cwtl
dec
pop
pushf
push
mov
mov
mov
add
push
loop
add
jge
aad
pop
lock
pop
ljmp
mov
sub
adcb
add
sahf
insb
popf
push
iret
mov
loopne
adcb
xchg
add
fsts
xchg
sub
imul
imulb
xor
sbb
lds
iret
repz
add
aad
mov
insb
mov
in
inc
rol
inc
shll
push
mov
or
call
push
cld
aaa
std
dec
add
inc
mov
lods
shrd
mov
and
mov
mov
sbb
add
and
pop
cld
in
test
adc
mov
int
or
mov
or
xorb
xor
jecxz
jg
fnstsw
or
adc
xlat
call
add
fwait
inc
push
js
mov
xchg
dec
int3
aad
lock
lock
sbb
add
test
dec
xor
or
sub
adc
xor
push
sbb
inc
addb
call
test
loope
pusha
xchg
mov
sub
pushf
dec
push
pop
sbb
sbb
lret
rcrl
pop
loopne
int
or
test
add
arpl
add
in
cmp
mov
xchg
jno
das
inc
fstps
test
mov
test
je
or
pushf
hlt
push
push
insl
inc
xor
inc
sbb
add
ficoms
pop
test
iret
pop
sbb
xchg
mov
pop
nopl
call
add
or
ffree
adc
push
or
gs
push
add
push
or
xchg
mov
lahf
sbbl
jns
add
or
add
and
or
inc
cmp
pop
xor
adc
lea
addl
inc
inc
xchg
jl
inc
aaa
push
add
push
pop
pop
sbb
mov
adc
pusha
xor
in
sub
or
push
pop
or
and
repnz
enter
mov
and
and
add
add
call
mov
cmp
jb
andb
pop
cmp
cmp
in
sahf
loopw
jb
adc
cmp
pusha
adc
fs
add
sbb
pop
pop
out
mov
push
add
inc
push
mov
jnp
lret
mov
fstpl
addb
xor
sub
ret
inc
bnd
xchg
push
add
fsubs
out
adc
jle
pop
data16
and
jge
sub
aas
push
adc
and
add
lret
pop
scas
inc
adc
or
add
pop
test
movsb
outsl
cs
out
adc
aas
rorb
dec
nop
pop
add
sub
add
cli
notl
arpl
mov
movsl
aaa
or
pop
sub
and
add
mov
mov
push
fmuls
add
andb
lret
insb
pop
push
xchg
lock
cmpsl
pop
pop
mov
or
fldenv
add
stos
push
cwtl
inc
add
nop
xor
cmp
adc
imul
call
and
pop
add
ret
mov
inc
mov
sub
and
adc
adc
hlt
aaa
adc
nop
pushf
inc
or
pop
cld
arpl
push
inc
enter
repnz
cmp
cmp
sbb
scas
insb
add
jecxz
push
sub
mov
in
stc
cmpsl
fdivrs
cmp
pop
insl
dec
das
nop
test
jnp
loop
add
push
leave
aad
sub
out
inc
mov
jne
ret
faddl
into
jle
xchg
sub
pusha
add
sbbl
test
test
rorb
loopne
adc
stos
push
xchg
dec
mov
mov
mov
add
stc
bound
sub
aas
xchg
mov
mov
mov
xchg
mov
cmp
fs
and
mov
call
mov
cs
cmp
sbb
sub
add
add
pop
cmp
pop
ret
mov
pop
mov
add
out
out
mov
incl
push
dec
push
shlb
frstor
pop
sub
xchg
shlb
inc
adc
loope
cmp
inc
cwtl
pop
sbb
into
push
movsl
xchg
in
xorb
cld
mov
or
push
ret
stc
adc
mov
clc
add
dec
jne
in
repz
add
cmp
insb
test
loope
daa
xchg
mull
or
or
sbbb
push
mov
jo
addl
cltd
or
jno
loopne
inc
mov
pop
cmc
cmp
das
and
sub
xor
movsl
mov
ret
xchg
lret
add
sub
inc
pop
jno
and
add
adc
fxch
dec
adc
pop
lcall
jns
js
mov
mov
add
or
mov
or
or
xchg
mov
cmpb
mov
add
out
pop
fsubrs
js
mov
pop
into
js
sub
mov
mov
and
or
sub
or
es
push
adc
addb
notl
inc
sbb
jnp
pop
adc
push
stc
pushf
add
inc
mov
pop
dec
sbb
repz
aam
std
aam
mov
test
mov
or
int
das
cmp
out
lods
nop
rclb
dec
add
inc
inc
movsb
cld
mov
inc
ret
pop
loopne
mov
add
das
xchg
hlt
xchg
mov
fsubl
sbb
adc
xor
cmp
loope
inc
pop
je
adc
pushf
push
fimull
jge
cmp
nop
xor
sub
pop
insb
pusha
iret
mov
popa
add
adc
rorb
mov
lret
mov
mov
push
cmp
jecxz
sub
xchg
add
xchg
movsl
or
and
in
adc
pop
adc
loope
into
sub
adc
inc
data16
cld
enter
sub
cmp
cli
fiaddl
push
dec
loope
sbb
mov
inc
cmp
dec
pop
cmpsb
ret
inc
das
mov
subb
mov
sti
adcb
lods
ret
je
jmp
sbb
test
cmp
js
and
mov
dec
adc
or
and
adc
sub
adc
mov
gs
pop
aas
pop
mov
adc
mov
add
aaa
adc
add
and
push
movsb
mov
fmuls
or
lea
roll
sbb
mov
jl
leave
js
cwtl
add
mov
pushf
rolb
pusha
lock
mov
sbb
lds
xchg
mov
movsl
out
cwtl
jno
xorl
icebp
xchg
inc
stos
or
gs
or
mov
add
mov
shlb
loope
ud0
mov
dec
std
add
scas
in
flds
xchg
pop
cmpl
jmp
in
pop
mov
cmp
xchg
dec
add
mov
add
subb
pusha
int3
adc
or
hlt
cmp
adc
jle
sbb
xchg
push
jnp
fdivrs
or
add
add
aam
sbb
aas
or
inc
test
mov
inc
movsb
cmc
sbb
add
lahf
outsl
icebp
fisubl
jo
dec
gs
adc
pop
xor
sub
popa
and
xchg
sub
imul
filds
movsb
mov
pop
jns
rorl
rcrb
xor
test
jle
popf
xchg
nop
xor
dec
pop
sub
adc
add
push
push
fisubrl
mov
adc
add
add
stos
cli
nop
rol
lods
and
mov
push
dec
or
mov
push
stc
shlb
sub
lock
out
test
adc
orl
pusha
add
mov
mull
cmp
js
inc
dec
int3
enter
insl
sbb
fcmovnbe
or
add
push
add
pop
test
add
cld
rcll
rorb
pop
and
sbb
pop
enter
jecxz
add
dec
xchg
adc
add
or
mov
mov
js
push
jecxz
mov
shrl
cli
pop
out
dec
pushf
add
inc
cmc
or
mov
push
or
add
mov
mov
dec
add
fiadds
cld
add
mov
dec
add
xor
movsb
xchg
push
push
mov
xlat
add
lea
cmpsl
xchg
rolb
jecxz
cmp
popl
mov
sub
filds
add
std
in
dec
xchg
sub
rorb
nop
and
mov
addb
ror
dec
jmp
push
xchg
mov
sbb
enter
adc
ret
push
daa
mov
jle
or
xorl
inc
in
mov
call
add
jg
cmpsb
inc
lea
add
aad
push
xchg
int3
sub
push
sti
xchg
test
subb
cmpsb
sub
jg
add
pusha
cmp
inc
mov
jne
pop
mov
jl
xchg
push
dec
jbe
cltd
mov
pop
add
jecxz
mov
add
jg
inc
push
push
and
sahf
mov
daa
lahf
nop
test
adc
stos
testb
test
add
xor
sub
dec
orb
mov
lcall
sub
enter
pop
add
pop
and
movsl
mov
enter
cmc
out
in
or
sti
mov
mov
sub
adc
rolb
sbb
dec
push
ret
lock
mov
cmp
inc
cld
sub
or
add
ja
sbb
out
add
xchg
jmp
repz
or
push
sbb
pop
adc
rolb
idivb
inc
out
and
call
xor
jg
jl
pushf
cs
cmp
add
xor
fisubs
fs
loopne
adc
pushf
daa
xlat
pusha
mov
pop
add
push
add
dec
cmp
inc
cmp
fbstp
cmp
jle
cmp
leave
xchg
mov
loopne
jb
and
hlt
cmp
lcall
push
ljmp
sbb
into
mov
in
cld
add
rorb
add
mov
mov
mov
aaa
sbb
adcb
sub
testl
or
pop
jb
add
pop
pop
bsf
add
hlt
std
adc
dec
cli
or
data16
and
mov
adcl
sbb
movsb
int
sbb
xor
scas
outsb
xchg
add
mov
sub
and
sarl
pop
mov
push
xor
adc
mov
or
sub
cwtl
add
sub
leave
cs
add
mov
adcl
loop
pop
enter
insl
lock
cmp
lret
adc
and
or
testb
mov
fadds
aaa
add
nop
cmpb
cmp
sub
and
add
sub
enter
add
sbb
pop
xor
test
cmpsl
loop
pop
xor
mov
xorb
fwait
clc
scas
push
mov
mov
pop
xchg
nop
dec
adc
add
fwait
push
sub
dec
loop
or
in
inc
cld
fisubrl
lcall
pop
inc
leave
jne
add
or
arpl
in
mov
es
dec
xor
inc
and
jno
imul
mov
and
cmp
add
xchg
mov
mov
loopne
sbb
ds
jnp
clc
pop
icebp
cli
in
add
dec
addr16
les
mov
jle
push
add
cmp
adc
scas
inc
cld
xchg
sub
dec
outsl
dec
adc
test
add
nop
mov
jo
out
sbb
pop
mov
jg
push
test
push
xor
inc
mov
mov
or
xchg
mov
mov
jle
cli
mov
jno
xchg
mov
fs
icebp
movsl
imul
test
mov
pushf
jl
lahf
xorb
mov
add
or
jbe
push
in
pop
mov
or
xchg
pop
call
push
in
add
mov
cmp
das
and
in
fdivs
fiaddl
in
mov
or
sub
add
push
sub
orl
fcom
mov
cmpl
sub
out
inc
dec
fldcw
add
mov
das
ret
adc
nop
pop
mov
scas
add
xchg
jg
pushf
imul
mov
add
xor
or
jno
aas
push
into
jl
sub
imul
in
inc
inc
mov
pop
mov
or
xchg
add
or
cmp
lds
ljmp
add
out
dec
adc
add
mov
mov
fchs
push
repz
or
mov
add
enter
pop
outsl
xchg
jbe
sbb
lods
adc
ret
sub
add
jno
clc
cwtl
mov
and
sbb
dec
loopne
cli
fidivrl
loope
inc
clc
mov
mov
xchg
mov
mov
call
mov
push
sub
xor
jg
je
adc
xchg
mov
or
test
pusha
cmc
pop
int
hlt
dec
int3
das
add
pushl
add
push
dec
add
dec
