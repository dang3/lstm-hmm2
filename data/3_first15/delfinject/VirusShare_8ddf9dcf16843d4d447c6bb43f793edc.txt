mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
scas
adc
sti
ja
mov
jg
mov
or
jae
jb
or
push
int
pop
push
movsb
ds
lahf
out
push
mov
lods
or
sub
fdivrp
repz
push
dec
bound
arpl
pop
sbb
push
push
jns
pushf
insl
xor
dec
fwait
insl
clc
push
jmp
arpl
rcrb
jo
inc
add
clc
jmp
fdivrp
and
int3
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
sbb
or
mov
fsubs
cmp
dec
call
std
popa
inc
andb
adc
push
inc
popa
movsb
fldcw
insl
cmp
sbb
dec
add
push
sbb
in
in
adc
or
nop
aaa
in
in
or
cld
leave
leave
leave
in
mov
clc
hlt
lock
leave
leave
leave
in
call
leave
leave
aam
leave
leave
leave
leave
mov
enter
leave
leave
js
jo
leave
leave
leave
leave
mov
leave
leave
leave
mov
pop
cld
lret
test
add
mov
loop
mov
mov
fwait
imulb
je
movzwl
mov
ss
pop
ret
movsb
pop
cmp
test
pop
jne
push
pop
popa
lcall
fwait
scas
inc
and
je
outsl
outsb
and
xor
or
and
nop
jb
and
imul
mov
data16
push
mov
push
push
je
popa
inc
inc
gs
mov
outsl
jo
repnz
cmpxchg
ret
cmpsb
mov
mov
mov
mov
dec
add
inc
or
and
imul
adc
sahf
fldl
cmp
inc
adc
mov
xor
sbb
fildll
fildll
add
pop
mov
sbb
cs
jp
add
jp
cmp
inc
and
and
sub
inc
dec
sub
mov
push
lahf
push
pop
aad
xor
xor
cmp
xor
cs
cmp
imul
jmp
lret
jns
fistpll
fildll
jl
push
cmp
add
js
and
mov
xor
add
dec
mov
js
mov
add
nop
call
cmp
mov
icebp
ljmp
mov
jmp
mov
shr
movzbl
mov
call
shlb
xchg
and
jne
pop
mov
and
jecxz
xchg
sub
ljmp
outsl
ret
and
add
xchg
mov
cmp
mov
scas
sub
add
mov
shl
or
sbb
push
mov
cmpl
sbb
inc
cld
mov
push
cld
add
orl
adc
dec
add
out
sbb
loopne
cmp
dec
pop
mov
out
rcr
push
cld
sub
test
fimuls
mov
inc
push
and
add
cltd
add
pusha
push
add
js
rclb
neg
mov
movl
mov
ret
dec
lock
mov
loop
mov
sarb
add
std
push
cmpb
mov
mov
ja
sti
push
sub
sbb
xor
mov
fistpll
cmp
cmp
frstor
insb
pusha
mov
add
test
sbb
push
xor
jle
push
push
mov
sbb
push
loopne
mov
mov
and
cmp
test
je
outsl
shrl
sti
mov
or
ja
pushf
pop
or
out
movl
pop
mov
sbb
add
pop
outsb
ret
adc
pop
pop
mov
mov
sub
jae
jle
adc
mov
mov
and
or
test
jne
in
outsb
loop
imulb
sarl
add
jmp
or
cmp
in
push
mov
sbb
cmp
push
inc
or
push
std
fistpll
mov
cmp
jbe
sub
add
jmp
test
jne
pushf
adc
fimull
pop
add
mov
sub
dec
outsb
idivb
nop
inc
loopne
repnz
sub
pusha
cmp
and
fcmovnbe
or
cwtl
fidivrs
loope
pop
shll
scas
fdivrs
add
cmp
jbe
ljmp
adc
loopne
add
xchg
xor
push
mov
lret
clc
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
add
mov
ja
dec
and
jae
fdiv
and
lods
iret
lea
sub
pop
push
mov
xchg
jecxz
pushf
rolb
pop
or
pusha
or
repnz
mov
push
std
sub
add
jbe
ret
pop
pusha
sbb
addr16
mov
xchg
std
xchg
sbb
sub
shr
cmp
jb
cmp
icebp
mov
sub
ja
jmp
dec
and
fwait
out
mov
subl
cwtl
and
cmp
add
or
les
je
mov
dec
nop
ss
mov
orb
inc
or
mov
mov
dec
idiv
je
and
lcall
adc
mov
add
sarl
or
jbe
mov
or
dec
aas
adc
es
pop
push
mov
popa
mov
lahf
mov
cltd
push
or
sbb
xchg
inc
pause
jns
aas
je
pop
sub
lods
cmp
mov
xchg
sbb
pop
ss
enter
xchg
movsbl
cld
mov
sub
mov
add
int
mov
leave
cld
mov
cmp
pop
inc
inc
pop
add
push
test
add
cmp
fistps
mov
push
jne
btr
out
push
sarl
or
jb
cmpb
jnp
sub
lea
mov
inc
jmp
sbbb
das
cmp
sbb
out
jb
mov
xchg
iret
mov
jb
mov
sub
sub
cmp
and
inc
sbb
mov
rclb
mov
ljmp
andb
lea
mov
xor
das
mov
mov
movl
sbb
lea
imul
add
sub
mov
addr16
fisttps
dec
sub
jge
sub
mov
movsb
or
fsubr
test
jecxz
jecxz
mov
lea
shl
loopne
or
pushl
fwait
jle
loopne
push
je
loope
rol
mov
jmp
mov
cmp
int
rorb
rol
loopne
push
xor
add
adc
fcomps
or
push
mov
jmp
and
xlat
ret
mov
dec
mov
or
xchg
inc
inc
cmp
pop
and
cwtl
cmp
test
push
pop
sbbb
jb
xchg
or
pusha
enter
mov
ffreep
pop
shl
mov
test
sub
nop
test
ret
mov
test
roll
mov
lret
inc
add
mov
jne
subl
jl
dec
ljmp
inc
inc
imul
data16
xchg
dec
cmpsb
xor
cmpsb
pop
mov
push
dec
cmpsl
ficoms
push
mov
xchg
inc
adc
cmp
jne
sbb
or
mov
iret
cmp
push
sub
xchg
scas
ljmp
cmp
xor
xchg
mov
dec
jmp
aaa
inc
inc
inc
inc
xchg
call
rorl
loop
fmull
scas
testl
sub
xor
testb
daa
cld
cld
or
cmp
inc
mov
mov
lock
pop
xor
xchg
mov
xlat
mov
arpl
rcrb
je
add
cmp
das
ret
pop
dec
clc
sub
out
jmp
js
test
xchg
mov
pop
sub
mov
lahf
mov
stos
flds
or
sbb
lea
cld
loopne
ret
movl
loopne
add
add
stos
inc
ret
loopne
pop
push
in
or
in
mov
enter
sub
sbb
lret
jb
jns
jb
loopne
mov
mov
ret
jg
or
lahf
push
lea
push
mov
sub
mov
sar
and
add
hlt
fwait
mov
lock
mov
call
test
mov
xchg
xor
dec
xchg
sahf
mov
mov
add
jecxz
cmp
cld
dec
aad
push
xchg
cvttps2pi
cmp
jb
sbb
ljmp
cmc
add
sub
add
and
stos
scas
sarb
in
xor
cmp
cmp
push
add
cmp
cmp
fdivrs
and
or
mov
push
mov
add
or
lret
jmp
data16
mov
push
mov
xlat
sub
clc
sbbl
or
lea
mov
out
call
stc
out
lds
loop
imul
add
roll
dec
fistps
cmpsb
or
or
xor
cwtl
sub
ret
jle
sbb
iret
ja
cwtl
loopne
je
xchg
pop
mov
pop
mov
shr
add
xor
sub
adc
fiaddl
add
lea
ja
andl
inc
add
adc
jle
outsl
push
jp
jl
mov
push
pop
add
add
or
mov
rcll
mov
pop
rcl
test
lock
iret
push
gs
shlw
mov
clc
jge
sbb
imul
negb
dec
outsl
shll
pop
push
jecxz
mov
adc
or
jae
neg
fldz
fstl
add
js
sbb
fsubrl
enter
mov
cli
lahf
xor
mov
or
test
jne
xor
lods
sbb
inc
iret
je
mov
push
jecxz
jb
scas
cmp
jae
rclb
mov
cmp
je
sub
test
mov
mov
cmp
jne
mov
mov
in
cmp
jbe
mov
mov
sub
sbb
add
mov
inc
add
fmuls
mov
loope
push
into
cmpsl
push
mov
mov
mul
or
mov
push
mov
loop
pop
shr
mov
add
in
clc
or
xor
rcr
mov
sbb
wbinvd
shrl
xchg
dec
aaa
in
mov
inc
cs
enter
lret
cmp
add
adcl
mov
xor
and
aaa
cmp
add
icebp
mov
inc
pop
push
and
addr16
mov
push
inc
cli
ret
sbb
pop
mov
arpl
mov
cmp
ja
pop
or
push
lock
sti
fcomip
sahf
push
jae
ss
mov
push
adc
out
fcmovnbe
mov
inc
sbb
add
push
adc
mov
testb
je
adc
notl
or
jmp
mov
pop
pop
push
nop
neg
pop
mov
les
call
or
ss
data16
ja
mov
and
xor
arpl
cmp
jne
test
daa
dec
movb
lea
jmp
push
and
rcll
pop
testl
and
shlb
pop
mov
and
jb
scas
mov
mov
sbb
or
cltd
dec
push
outsl
outsb
mov
aaa
div
out
fildl
mov
aas
inc
sbb
lds
mov
pop
addb
mov
push
add
adc
mov
push
fwait
mov
mov
pusha
jl
inc
jbe
mov
je
add
lods
add
push
mov
or
cltd
add
sbb
or
jne
mov
sbb
adc
mov
call
sbb
or
lea
lea
fisttpl
inc
in
adc
add
mov
push
call
test
add
push
adc
rorb
ficompl
inc
je
aaa
adc
lcall
jbe
xor
sub
inc
negb
or
cmpl
scas
shll
inc
add
or
insl
xor
or
dec
fs
test
jle
sbb
cmpb
mov
sbbb
idivl
and
jo
push
lcall
jl
and
dec
loopne
push
ret
jmp
mov
je
add
enter
cmp
jg
iret
movq
incl
pop
js
inc
jo
push
adc
in
xchg
pop
jb
aam
scas
xchg
push
mov
daa
push
add
push
dec
jne
data16
sub
sbb
inc
ret
xchg
fildl
cwtl
push
and
js
test
test
inc
adc
test
cmp
paddusb
xchg
add
mov
pop
xor
rcrb
xor
mov
daa
rcrb
lods
je
push
outsl
in
loope
insb
pop
jmp
mov
and
fnstcw
mov
and
nop
mov
int3
loope
xchg
cmp
xchg
and
and
mov
jg
test
jle
ds
cmp
ss
aaa
adc
cmp
es
in
xchg
mov
mov
xchg
sti
mov
je
dec
jl
cmpb
sub
xchg
negl
xchg
mov
sub
push
mov
cmpsl
fnstsw
movl
loop
mov
loopne
shrl
mov
add
in
scas
mov
mov
xlat
mov
or
adc
ds
cmpl
xchg
or
add
in
daa
cmp
adc
dec
movb
inc
push
or
ds
push
pop
inc
dec
adc
and
loopne
push
add
in
shrb
fs
mov
xchg
je
jmp
mov
jmp
mov
fidivrl
and
xchg
xadd
or
mov
sbb
das
adc
push
pop
dec
pusha
or
incl
pop
inc
and
xor
mov
sbb
push
lcall
jle
arpl
sbb
fmuls
mov
push
fdiv
imul
loopne
ret
ja
inc
mov
je
jnp
push
roll
or
imul
pushf
dec
jne
mov
jp
in
aam
adc
push
push
jg
mov
xor
insb
push
ss
outsb
and
gs
sbb
and
insl
outsl
jb
lods
add
scas
pop
popa
imul
popa
jae
outsl
arpl
jl
cs
mov
rorb
insl
popa
insb
insb
stos
add
and
dec
imul
cmp
or
les
addr16
outsb
imul
out
xor
outsb
add
xchg
jp
mov
mov
js
cltd
addl
nop
outsb
ja
jnp
and
lahf
mov
add
dec
dec
cs
fucom
mov
xor
mov
mov
testb
jne
repnz
out
add
cmp
outsl
add
clc
jbe
mov
cmc
pop
and
mov
add
cmp
jne
es
mov
mov
cmpsb
push
movl
mov
mov
or
sbb
movl
jmp
add
mov
xor
dec
lods
jae
mov
and
cvttps2pi
call
jbe
ja
mov
shl
mov
push
lods
std
in
loopne
add
mov
shrb
outsl
xor
loope
lea
add
shll
jno
jmp
jae
mov
mov
mov
cmp
xlat
mov
xor
div
outsl
jo
in
imul
mov
or
das
scas
test
in
dec
inc
xor
lcall
adc
mov
push
mov
mov
jae
mov
or
repz
cmp
out
push
push
mov
jne
mov
jmp
mov
rcll
mov
cmp
jne
mov
push
out
cs
dec
adc
add
inc
or
aaa
pop
mov
dec
or
and
stos
sbb
fucomp
enter
rorl
repz
jnp
repz
cmp
mov
mov
loope
js
or
adc
sub
mov
fsubrs
in
pop
sub
mov
jl
jl
int
sbbb
sbb
sbb
add
call
add
ret
mov
xchg
mov
pop
call
sub
rclb
sub
add
or
shlb
mov
inc
xor
ficomps
add
adc
jae
int
fldt
jne
test
arpl
clts
out
ss
pop
js
mov
adcl
lret
xchg
lret
enter
inc
sbb
pop
or
dec
enter
aas
jl
out
adc
insb
jle
push
and
sahf
or
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
loopne
mov
push
push
push
xor
pop
pop
jne
popl
sbb
pop
out
call
in
testb
inc
or
je
xchg
xchg
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
cld
fists
decl
jmp
mov
jmp
mov
jmp
mov
rorl
jne
ret
pop
repz
mov
shlb
stc
sahf
add
jmp
ja
sub
jg
jmp
sub
dec
or
adc
or
push
mov
sahf
notb
dec
inc
xor
dec
dec
jns
out
pop
popa
insb
jns
sti
jbe
in
push
mov
or
adc
flds
xor
jl
pushf
sbb
push
mov
cs
shrl
lret
adc
jbe
adc
jnp
std
syscall
add
and
sub
pop
inc
cmc
pop
pushl
test
or
push
or
fisttpll
inc
add
mov
push
and
add
out
je
add
pop
cmp
push
scas
cmp
dec
add
ret
mov
bound
push
add
scas
negb
jbe
and
cmpb
add
incl
jmp
xor
mov
jmp
sub
fwait
ljmp
call
lods
imul
sbb
mov
mov
inc
inc
mov
cs
imul
pop
jne
imul
in
das
fsub
jbe
out
add
inc
sbb
iret
roll
mov
frstor
arpl
mov
lock
lahf
add
jmp
cmp
divb
push
mov
mov
pushf
mov
aas
cmp
jmp
mov
adc
mov
jle
push
xchg
dec
add
dec
jmp
mov
std
mov
inc
mov
or
or
ljmp
dec
sbb
xor
imul
inc
mov
cmp
sbb
jp
add
call
fnclex
fldcw
rcrb
fnstcw
pop
push
sub
adc
pop
pop
out
or
fldcw
fwait
orw
push
and
insb
or
push
add
fldcw
pop
inc
add
push
repnz
push
or
js
test
add
jmp
scas
xlat
mov
data16
jae
cmp
rcrl
out
mov
pop
cmp
cmp
sub
call
addr16
outsl
cli
mov
adc
mov
sbb
cwtl
imul
inc
cmp
insl
jb
or
and
jne
lret
mov
and
idivl
je
xor
dec
shr
or
lret
ds
ss
cmc
incl
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
add
xlat
mov
in
mov
sub
jbe
mov
sub
dec
aas
push
inc
xchg
xchg
dec
mov
lock
sbb
cmp
jbe
mov
mov
inc
sbb
xor
subb
lock
loopne
xlat
imulb
add
ret
ljmp
je
mov
mov
cmp
jne
dec
je
mov
mov
sbb
shrl
inc
movl
add
in
mov
add
push
cmp
jne
push
adc
add
mov
cmpsb
imul
add
jmp
pop
cmp
cmp
mov
xor
jne
shr
sarl
add
sahf
out
ljmp
loopne
sbb
inc
dec
dec
sub
push
imul
sub
mov
loopne
mov
cmp
jne
dec
lcall
dec
dec
dec
add
add
rcrl
jb
lock
into
cmp
int
cmp
mulb
adc
add
adc
fstl
mov
sbb
or
mov
dec
bound
shl
fisubrl
ffree
subb
mov
imulb
mov
cmp
push
sub
xchg
jmp
cs
sahf
notl
push
adc
out
sahf
adc
push
or
inc
icebp
pusha
sar
push
or
ret
pop
push
fistl
dec
mov
mov
push
inc
cmp
je
mov
imul
bound
sub
js
pop
sub
fstp
pop
je
xor
dec
and
test
fcmovnu
inc
dec
and
add
sub
or
cmp
ja
lea
testb
push
add
push
mov
dec
je
sarb
push
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
jmp
mov
notb
filds
outsl
ficompl
cltd
jbe
push
adc
or
data16
add
aad
cwtl
pop
xor
mov
xchg
popf
adc
mov
jb
fstl
notl
cmp
sbb
push
inc
adc
dec
jne
pop
testb
sub
loope
repz
mov
add
mov
jl
mov
add
lea
int
adc
in
fldt
leave
pushf
pcmpeqb
cmp
add
popa
daa
js
push
push
and
jmp
pop
xchg
sub
mov
xor
jmp
jmp
fstp
fldt
test
call
mov
cmp
jg
aas
mov
cmp
in
cli
or
or
and
stc
cmpsb
mov
and
adc
xchg
jl
mov
out
sbb
add
mov
adc
movsl
aam
push
lret
in
xchg
sub
sub
pop
jecxz
cld
iret
scas
cld
add
leave
sbb
mov
cmp
fidivrs
iret
call
mov
bound
cmpb
es
adc
out
fadds
outsb
xor
xchg
push
or
mov
adc
ret
inc
mov
push
pop
test
enter
mov
outsl
movsl
push
inc
dec
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
pushl
test
lds
iret
decl
js
inc
mov
stos
mov
cmp
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
clc
jmp
int3
repnz
test
nop
fcmovnb
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
das
sar
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
pushf
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
sub
mov
loop
sbb
add
and
or
adc
fdivl
hlt
movzwl
mov
lea
push
push
inc
fwait
mov
mov
int3
jne
sahf
clc
mov
push
xor
movl
fistpl
push
data16
add
mov
gs
pop
pop
pop
pop
push
adc
cmp
in
ret
push
ljmp
out
jecxz
and
sub
dec
pop
aas
or
cmpl
cltd
mov
push
dec
inc
push
push
inc
push
inc
pop
ret
pop
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
lahf
icebp
ljmp
mov
mov
lret
aas
xlat
mov
aam
leave
mov
inc
out
ds
lods
cmc
add
dec
cld
mov
leave
out
cmp
mov
push
lea
inc
sbb
mov
std
sbb
aas
call
frstor
adc
mov
mov
int
sbb
dec
add
xchg
ret
and
out
ret
and
fnsave
rolb
out
add
je
std
sub
or
cwtl
pop
adc
aaa
stc
push
sbb
jnp
mov
rcr
test
out
loop
std
add
das
jl
movups
fs
pop
xor
jle
loopne
mov
int3
ja
mov
or
push
cld
ret
mov
stos
mov
xor
push
shr
dec
rep
pop
clc
or
rep
mov
mov
sub
pop
fadd
scas
add
lods
jp
in
cmp
je
jbe
das
les
add
jae
ss
mov
mov
push
sbb
mov
fisttps
cmp
lods
mov
mov
dec
subl
inc
lods
mov
sti
dec
cld
adc
roll
lar
je
jb
shufps
and
loope
test
roll
lods
mov
test
out
pop
clc
mov
mov
clc
addl
mov
mov
shrl
inc
adc
mov
and
shlb
push
lea
push
add
pop
lea
push
sbb
clc
xchg
pop
mov
insb
clc
mov
sbb
inc
aaa
mov
in
dec
jns
inc
ss
les
pop
add
cwtl
sahf
xor
xor
mov
mov
movsb
jb
jo
jne
push
or
jne
js
inc
rorl
push
inc
inc
fdivrl
mov
lds
mov
and
scas
add
movsb
fildl
jge
out
and
shll
dec
jle
jne
mov
leave
lock
nop
push
xchg
jmp
lret
test
test
clc
mov
movl
or
negb
pop
add
pop
inc
sub
mov
pop
cs
xchg
add
cmp
pop
inc
ja
sbb
mov
jl
mov
jecxz
call
idivb
loop
sbb
push
pop
pop
push
cmp
andb
or
pop
cmp
adc
test
fldt
pop
mov
popa
lock
gs
pop
push
xor
mov
sar
notb
int3
bound
mov
cmp
fbstp
into
dec
jne
icebp
fucomi
sbb
add
sbb
ffree
icebp
std
and
jne
dec
cmp
scas
lahf
push
lds
adc
sbb
pop
pop
lcall
xor
call
mov
shlb
jl
jmp
hlt
xor
lea
mov
mov
mov
movl
cmp
inc
or
or
pop
stc
xor
rorl
mov
adc
div
hlt
or
test
mov
call
aaa
push
xor
xor
dec
pop
inc
xor
sti
test
jnp
inc
in
inc
or
sbb
sub
or
push
aad
jg
push
mov
sub
add
jecxz
rolb
sbb
cli
in
push
call
jae
aaa
notb
push
xor
fisubrs
cmp
ficompl
cs
lret
and
scas
dec
sti
addb
je
pop
push
push
xlat
and
sbb
jmp
jne
sub
rolb
add
addr16
data16
aam
shll
mov
jecxz
cltd
sbb
adc
loop
xchg
adc
jecxz
pop
or
inc
add
push
std
add
jne
fiadds
pushf
orb
push
int3
adc
outsb
and
adc
test
ffreep
pop
xor
jbe
xchg
sbb
fisttpl
addb
je
dec
push
out
sbb
jb
jbe
test
lea
or
clc
add
stos
mov
xchg
cltd
cmc
in
xor
jne
push
jne
push
aas
or
cmp
push
jns
je
orl
and
add
inc
rcl
sbb
pop
sbb
cmp
sub
push
cmpsl
rorb
into
sub
mov
sbb
rol
add
push
add
pop
mov
xchg
jp
xor
scas
mov
mov
loopne
jl
sub
push
xchg
popa
js
outsl
je
dec
or
test
enter
ret
xor
or
mov
test
ficompl
lea
mov
orb
mov
fisttps
pop
lods
aas
jb
rorb
cmp
call
inc
aam
push
clc
negb
adc
or
and
frstor
pushl
ds
jne
in
icebp
mov
adc
inc
pushl
mov
out
daa
mov
inc
mov
or
add
adc
mov
mov
push
setl
pop
and
dec
test
xorl
inc
mov
arpl
in
lret
test
inc
and
mov
adc
aaa
add
dec
add
jne
jmp
aam
rorl
lods
adc
xchg
jecxz
and
shr
dec
in
dec
lock
dec
test
in
loopne
mov
or
mov
pushl
or
fmuls
push
push
sub
push
inc
leave
in
ret
add
mov
dec
jbe
mov
adcb
mov
sahf
insl
imul
jge
fadds
inc
or
pusha
add
inc
or
inc
aaa
cwtl
fbstp
test
adc
orb
mov
mov
cmc
lea
stc
pop
mov
push
cld
pop
lea
jmp
ret
xor
add
xor
xor
xchg
ret
ja
ja
aas
xchg
cmp
je
cmp
adc
push
sub
je
jmp
add
or
je
jmp
cmp
fistps
ss
adc
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
sub
pushl
fsubr
push
mov
jmp
mov
fcmove
add
xchg
cmpsb
decl
mov
push
or
sub
xchg
mov
xor
push
mov
cmp
lret
add
inc
pop
clc
cmp
jno
js
push
outsb
inc
sbb
cli
testl
pop
out
push
inc
incl
add
or
and
lock
fld
stos
das
pop
mov
lods
fidivs
inc
inc
test
push
scas
push
inc
or
enter
push
xchg
fwait
mov
sbbb
enter
adc
push
repnz
cmp
jne
aas
add
mov
mov
push
dec
mov
lock
lahf
mov
fstpt
dec
mov
je
add
mov
mov
jg
mov
adc
mov
sbb
dec
leave
ficoms
mov
outsb
jge
pop
repnz
sti
jle
jbe
fadds
push
xchg
xlat
iret
sub
jmp
stos
adcb
adc
mov
or
popf
mov
sub
jmp
ss
add
jl
dec
jg
or
sbb
mov
mov
adcb
add
pop
inc
mov
pop
in
pop
in
pop
pop
dec
add
mov
dec
or
js
xor
fidivrs
mov
xor
push
in
pop
or
cltd
idiv
add
push
cs
in
dec
cld
and
dec
mov
mov
push
add
loopne
stc
in
mov
inc
addb
mov
imul
scas
adc
add
rolb
mov
jl
adc
test
sbb
and
movsl
push
leave
fadds
sub
adc
add
xorl
sbb
cmp
mov
aam
or
inc
lea
cmp
push
sbb
jmp
xor
inc
pop
ret
fnstenv
movsl
inc
xor
mov
xchg
icebp
mov
out
out
mov
ss
sub
adc
adc
mov
ret
out
and
clc
sbb
icebp
cmp
adc
test
cmp
cmp
daa
data16
outsb
inc
xlat
ds
lcall
xor
jnp
or
sbb
push
fmuls
mov
jne
je
mov
aaa
test
pusha
in
lock
sbb
fidivrs
pop
or
inc
push
pop
mov
jge
mov
add
int
mov
add
rcl
mov
aam
nop
popl
scas
mov
and
mov
aad
push
mov
cwtl
lods
sub
int
mov
push
sub
add
push
push
daa
xchg
imul
pop
pop
mov
xchg
add
mov
push
mov
test
into
xor
inc
loope
jns
or
jmp
mov
dec
jmp
xchg
jle
rolb
or
push
mov
ds
loop
push
push
sub
push
movsl
cmp
mov
fmull
lahf
adc
imul
inc
dec
clc
daa
push
jle
dec
jl
lock
clc
pop
in
pusha
and
adc
push
sbb
add
or
dec
jne
out
cmp
and
inc
jg
xchg
testb
sbb
cmp
mov
pop
push
dec
and
add
push
insb
xchg
pop
in
mov
xchg
xchg
jle
fwait
jle
test
jle
push
add
ljmp
inc
pop
movw
or
sbb
dec
pop
movl
or
iret
mov
das
andl
push
js
nop
or
ljmp
dec
test
lea
fcoms
mov
aad
jns
lret
test
in
orl
rorl
add
jg
xchg
jmp
fsubl
cld
lea
cmp
push
adc
add
add
decl
add
cmp
clc
add
mov
aam
js
popf
sub
fldl
fistpl
pop
push
movsl
cmp
sbb
add
cmp
clc
lock
push
mov
mov
push
aad
nop
inc
ret
cmp
je
lcall
add
mov
cmp
call
pop
sub
jmp
pop
pop
sub
and
out
pop
aad
pop
pop
or
push
or
addr16
in
into
pop
or
add
add
inc
xchg
push
push
in
pop
add
push
repnz
rcl
add
pop
pop
xor
xlat
sub
outsl
push
mov
mov
repnz
fnstcw
mov
inc
mov
fmull
out
xchg
aas
mov
cli
insb
push
pop
inc
repnz
and
je
clc
aaa
cmp
jns
push
cld
add
jo
cmp
push
sub
adc
xchg
adc
pop
iret
cmp
clc
dec
mul
sub
arpl
pop
cmp
jge
popf
and
lahf
cmp
icebp
push
fdivrl
inc
cld
add
jo
popf
out
inc
add
rorl
mov
add
pop
push
xchg
inc
jae
sbb
clc
sub
fcomps
fldenv
jmp
lods
mov
adc
or
inc
outsl
outsl
xchg
mov
dec
jmp
jbe
or
push
jo
cmp
sub
or
push
dec
jne
mov
testb
adc
ja
popf
cmp
pushl
add
dec
jmp
xor
fisubrl
jb
loopne
aad
adc
dec
dec
jne
mov
call
loopne
push
and
aas
dec
ret
xor
lea
jmp
and
push
in
and
xor
or
mov
pop
cld
sub
push
adc
and
sub
dec
mov
add
sbb
je
js
decl
mov
shr
add
jns
mov
cmp
pop
stos
ss
and
or
cmp
ljmp
inc
loopne
popl
dec
scas
lds
and
dec
cmp
xor
movsl
bound
push
sub
jo
pop
adc
push
inc
lret
shl
aas
jo
xchg
xchg
lock
mov
dec
jl
cmp
jge
sub
dec
cltd
push
je
sbb
jg
add
loope
mov
clc
adc
shr
in
jmp
and
scas
xchg
push
int3
inc
inc
or
xor
sub
jge
mov
loop
sub
ss
stc
add
lea
inc
ret
xchg
pop
cli
inc
cltd
xlat
add
cltd
fisttps
push
cmove
lods
cmp
adc
mov
cld
mov
ljmp
push
mov
lea
or
lock
push
add
mov
mov
pop
hlt
push
mov
cmpsl
mov
cld
cmp
enter
cld
fdivrl
fidivrs
fisttps
add
add
mov
fcoms
loop
adc
fldt
jge
test
or
inc
lock
rclb
movsb
cmp
jb
or
jb
in
mov
jmp
outsb
and
xchg
sbb
dec
add
ret
in
mov
sub
adc
add
pop
scas
cmp
xor
jne
push
cltd
or
dec
push
add
daa
and
xor
mov
lods
das
rcrb
pop
xor
jne
mov
call
sbb
jne
push
icebp
push
in
shlb
pop
push
addb
xchg
rclb
fidivrl
scas
sbb
dec
in
shrl
or
xchg
in
inc
adc
in
sub
arpl
out
push
cmp
mov
daa
dec
jno
loope
cmpsl
jle
loop
xor
aad
pusha
mov
or
push
out
lods
fnsave
cmp
in
iret
push
jo
dec
cmpsl
push
push
das
and
mov
push
push
sub
jo
cmp
add
dec
sub
or
frstor
xor
sbb
insl
repnz
iret
inc
cmp
pop
dec
sahf
lret
add
cwtl
jle
jb
cld
inc
sub
sub
cwtl
ret
and
adc
shlb
dec
push
xor
aaa
enter
xor
xor
mov
xor
add
or
pushf
sarl
pop
add
push
mov
adc
mov
call
nop
das
je
les
xchg
mov
fs
or
ds
jle
ret
pop
inc
and
adc
pop
das
or
jae
cmp
sbb
gs
mov
cmp
jge
pusha
clc
movsl
adc
dec
cmp
nop
pushf
lcall
jle
outsl
pushf
or
ret
cmp
push
lods
add
add
mov
flds
scas
dec
je
daa
mov
sti
cltd
inc
adc
adc
lock
mov
add
xchg
scas
dec
inc
lea
sbb
cwtl
shl
mov
inc
and
cmp
push
mov
or
adc
mov
mov
xor
test
sbb
cwtl
scas
cs
mov
add
or
or
aaa
std
out
fs
je
cmp
je
cmp
push
cmp
je
mov
js
dec
push
rcrl
cwtl
clc
jmp
adc
dec
imul
out
jmp
push
mov
mov
pop
mov
mov
add
dec
cs
adc
cmp
pop
jmp
lahf
sub
sub
cltd
add
cmpsl
xchg
jecxz
jno
andb
scas
add
jb
adc
lock
call
shl
jns
adcl
and
cltd
out
jbe
test
mov
mov
push
mov
rcrb
out
mov
mov
fisttpll
aaa
aad
cmp
dec
ja
inc
push
jmp
es
push
pop
push
xlat
loopne
repz
cmp
xchg
or
inc
inc
lods
cmp
pop
jmp
test
test
pushf
cltd
add
icebp
jmp
in
adc
fstl
pop
shr
clts
imul
adc
popl
push
sahf
push
mov
sub
jns
pop
outsl
jp
push
cmp
mov
xchg
fsubrs
inc
test
sub
and
pop
inc
add
xor
xchg
inc
lock
push
mov
ret
sbb
and
les
lea
outsl
cld
xor
clc
push
test
cs
sub
jle
ret
cld
fdivrs
stc
push
inc
add
mov
cmp
pop
adcl
xchg
push
or
jo
jo
xchg
dec
mov
or
cld
fcoms
jmp
and
aas
cmp
je
lea
mov
pop
cltd
cli
mov
addb
or
jle
push
dec
nop
or
sub
jmp
aas
cs
sbb
add
shll
dec
adc
mov
pusha
loopne
cwtl
lea
ds
add
cwtl
xor
jne
jo
in
rorb
sbbb
ja
mov
cmpsl
adc
paddsw
push
test
xchg
rcll
sbb
add
out
sub
sbb
cwtl
pusha
imulb
push
lcall
les
push
loope
xor
add
or
pushl
lock
pop
add
inc
call
out
js
cmc
mov
cmp
add
je
cmp
push
iret
test
test
adc
adc
xor
jae
popa
push
sub
pop
mov
les
dec
pop
clc
sahf
sbbl
adc
lock
xchg
inc
cld
mull
mov
sub
fs
add
push
adc
pop
pop
ret
inc
test
rolb
push
in
sub
ret
lock
and
or
inc
cld
out
and
sub
dec
mov
jl
out
lods
pop
xlat
ljmp
sub
mov
jmp
cmp
jne
mov
inc
and
sub
add
ds
xor
xor
das
and
aaa
je
xor
roll
or
add
jle
std
sub
jb
add
or
jmp
xor
sub
jmp
getsec
jmp
sub
es
push
cmpl
add
push
jl
andl
mov
pushl
jmp
jg
mov
cltd
sub
ret
sbb
mov
adc
test
push
sub
xorl
push
data16
xor
enter
xchg
push
mov
sbb
divl
rolb
neg
push
pop
jb
fadds
pop
mov
adcb
sub
dec
inc
setle
mov
adc
int3
and
jg
inc
push
test
add
and
dec
cmp
adc
push
ds
daa
jmp
or
sbb
add
je
sbb
setb
jmp
setl
cmp
jmp
in
je
dec
int
or
xor
movsl
jmp
sbb
loop
add
pop
aas
leave
adc
add
ljmp
bswap
add
aam
add
mov
ficoml
enter
dec
cmp
xchg
roll
pop
mov
hlt
ss
inc
xchg
xlat
lods
les
mov
dec
add
push
cwtl
add
add
ljmp
sbb
mov
xchg
push
testb
dec
scas
or
cltd
idiv
cmp
je
andl
mov
cmp
jne
mov
cmp
jge
inc
sbb
jbe
add
xlat
imul
sub
outsl
lods
icebp
iret
mov
push
in
mov
pop
decl
add
mov
stos
add
pusha
imul
xchg
jge
or
icebp
jae
fwait
xor
jge
in
push
adc
in
push
repnz
into
stos
lods
inc
inc
xor
dec
roll
xchg
movl
test
sub
lahf
test
fwait
or
add
cmpsl
cmpl
jle
cwtl
or
cmpb
and
sahf
nop
xchg
or
push
adc
out
jbe
out
sar
int3
lcall
dec
jne
enter
scas
lea
in
push
andl
cmp
sar
mov
clc
jne
ds
inc
sbb
scas
push
mov
xor
adc
jmp
test
sbb
pop
jmp
dec
push
push
push
mov
incl
out
push
jp
pop
pop
jo
pop
shll
adc
adc
in
andb
test
jne
lods
ficoml
xor
dec
aam
sbb
popa
cmpl
sbb
jne
out
adc
sbb
mov
repz
ret
mov
xchg
pop
ret
les
mov
test
dec
mov
lcall
cmp
or
xor
mov
jl
push
mov
clc
jmp
sbb
int
leave
push
out
nop
lahf
insb
sub
push
jl
mov
test
sti
pop
jne
shr
lods
shlb
je
cmc
push
clc
jnp
cmp
xchg
jl
dec
fsubrs
gs
aaa
cmp
out
inc
push
adc
imul
lods
addb
add
jne,pt
push
cwtl
sub
sbb
push
ret
sbb
js
pop
mov
sbb
cmpb
xor
push
cs
sub
or
xor
insb
jnp
pop
fimuls
inc
add
xor
jno
out
mov
cmp
and
push
addr16
lret
sub
imul
inc
xchg
ss
xor
je
fnsave
data16
leave
fdivrp
fmull
jg
movb
pop
mov
push
push
movl
jg
add
imull
ret
dec
dec
pop
or
decl
ret
imul
gs
xor
cs
insb
mov
je
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
and
mov
and
scas
xor
int3
push
imul
je
add
and
mov
popa
and
mov
arpl
push
add
cmpl
addr16
jmp
int
jmp
iret
fdivrs
or
sbb
push
repnz
js
inc
daa
sti
loope
cmp
das
rcrl
jne
repz
mov
cmpb
mov
jge,pt
movsb
or
aad
cmpsl
je
pop
jnp
je
hlt
sub
sbb
add
cmp
lock
ja
or
cmp
jne
adc
inc
xorl
shrl
rcrb
add
lods
les
push
andl
repz
mov
xchg
adc
add
pop
push
mov
mov
pop
adc
pushf
add
inc
cltd
push
call
and
mov
adc
adc
pop
lea
mov
sbb
jbe
mov
lds
mov
mov
jp
xor
mov
mov
mov
shlb
inc
pop
adc
push
mov
dec
loop
pshufw
fnstcw
out
adc
popl
mov
cmpsb
sbb
push
aam
jae
subl
mov
inc
cmp
inc
sbb
icebp
xor
jne
fsubl
movsb
cmp
or
mov
inc
data16
and
or
add
mov
adc
jmp
mov
daa
mov
or
fs
ja
adc
ljmp
rcrl
add
xlat
or
test
push
lock
mov
adcb
sbb
add
ss
inc
popa
sahf
je
sbb
es
pushf
inc
pop
push
stos
sarb
pop
pop
sbb
ret
xor
dec
lea
lea
xor
js
add
loope
pushf
jl
pop
sub
movsl
xchg
pop
divb
dec
adc
inc
push
add
sub
movsl
test
adc
pop
rolb
mov
out
adc
push
or
movb
push
ja
xor
and
dec
test
loope
dec
pop
inc
shrb
lea
sub
test
leave
bound
or
add
inc
cmp
ja
mov
inc
jmp
cld
pop
jmp
cmp
pop
add
pop
cld
ja
fcmovb
jmp
outsl
out
decb
lret
loopne
sbb
adc
sbb
and
lret
sti
aaa
push
xor
add
jmp
pusha
add
dec
mov
rolb
dec
or
cmp
pop
test
cld
jb
or
dec
movb
and
sbb
or
add
cmp
lea
ret
loopne
pop
out
lock
and
push
mov
movsl
das
cmp
sbbb
cmp
or
rolb
sub
mov
out
push
hlt
movzbl
inc
test
je
add
jae
and
and
adc
fstpl
jp
rolb
cmp
pushl
js
xchg
cmp
shl
or
mov
push
sbb
or
inc
dec
cld
mov
jl
fsubrs
inc
inc
nop
or
xorb
xchg
xor
add
dec
cmp
subb
mov
ret
sub
sbb
adc
push
loop
xorb
sbb
or
cmp
inc
adc
sbb
mov
inc
divb
cvttps2pi
mov
andb
mov
aad
adc
jb
and
sbb
fisttpl
cwtl
mov
sbb
push
jo
jecxz
aaa
or
jmp
cmp
push
sbb
aam
sub
jns
push
fs
push
sahf
xchg
out
mov
cmp
mov
dec
add
faddl
cmpsl
aam
loopne
or
mov
jecxz
inc
rorl
dec
push
je
dec
jae
xchg
inc
push
rol
inc
je
ret
jo
jne
sbb
push
out
icebp
popa
aaa
imul
mov
mov
jns
or
imul
into
inc
mov
inc
cmp
inc
xchg
cmp
mov
push
mov
rorl
push
push
xchg
int3
or
push
pop
jo
add
cmp
decl
cwtl
iret
pop
dec
clc
mov
add
mov
sbb
inc
rcrb
mov
sub
inc
cmp
mov
add
cs
pushf
fsubl
and
mov
adc
mov
push
mov
sahf
iret
xchg
sub
andl
push
loop
add
mov
sub
sub
push
push
aaa
sbb
gs
lock
or
enter
adc
jns
push
pop
adc
inc
add
ret
mov
inc
mov
pushf
inc
xchg
enter
jo
xchg
mov
mov
ja
or
or
rolb
push
aaa
in
daa
pop
mov
decb
add
xchg
or
outsl
roll
mov
dec
ljmp
and
call
bound
das
ja
enter
jp
or
insl
adc
add
testb
inc
dec
mov
add
xor
mov
js
or
push
gs
jecxz
adc
jb
imul
es
imul
inc
push
mov
arpl
inc
gs
jne
je
dec
outsl
je
in
fucomip
out
imul
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
add
jnp
xor
xor
outsl
insl
bound
outsl
js
loopne
dec
into
pop
push
imul
sub
cmp
andps
outsb
fldl
cs
push
je
add
fistpll
push
push
prefetcht1
daa
daa
daa
adc
add
cmp
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
leave
enter
cmp
hlt
leave
leave
leave
leave
lock
call
leave
loopne
fcom
leave
leave
leave
leave
ror
enter
leave
leave
sarb
lods
movsb
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
cmp
in
fs
hlt
lock
in
in
call
in
in
aam
int3
in
in
shlb
movsb
mov
in
in
mov
in
in
nop
mov
test
in
je
insb
push
fs
pop
pop
in
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
xor
in
add
cld
cmp
jb
jb
hlt
lock
call
in
in
jb
aam
int3
mov
in
sarb
mov
test
in
in
mov
in
xchg
nop
mov
test
cmpb
pushf
pushf
je
insb
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
cmp
in
fs
hlt
lock
in
in
call
in
in
aam
int3
cs
in
sarb
mov
dec
dec
dec
dec
test
mov
dec
cwtl
xchg
nop
mov
dec
dec
mov
dec
js
jo
dec
dec
dec
dec
push
dec
dec
dec
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
mov
pop
psllq
adcb
roll
and
mov
or
out
mwaitx
or
adc
out
sahf
sbb
and
inc
mov
push
dec
cltd
and
imul
mov
jg
jno
pusha
pop
add
and
push
call
push
cmpsb
mov
push
cmp
mov
push
andb
sahf
sbb
or
dec
xlat
or
push
gs
push
mov
lcall
add
or
movl
imul
gs
mov
dec
inc
inc
dec
add
mov
rcrb
and
dec
ja
out
imul
push
dec
pop
and
push
push
dec
push
push
pop
sub
fsubr
mov
pop
dec
dec
dec
inc
push
das
sub
and
jne,pt
mov
clc
or
pop
pop
pop
pop
add
jno
lock
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
ffreep
rol
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsl
test
stos
jl
dec
dec
stos
lods
lods
movsb
jl
lods
mov
dec
push
push
inc
rcrb
lods
fwait
or
outsl
shrb
or
push
je
insb
jae
xor
or
push
inc
sbb
nop
fdivl
cli
jg
push
or
popa
jb
push
fwait
sub
pop
enter
inc
jge
adc
ret
adc
push
inc
fldl
ja
jg
scas
jnp
mov
inc
js
pop
in
xchg
shlb
lods
mov
cmpsl
xchg
daa
add
xchg
push
jb
nop
add
aas
adc
aam
inc
dec
inc
jo
repnz
cmp
mov
mov
xchg
adc
je
data16
mov
cmp
inc
dec
outsb
mov
shll
scas
ds
add
lds
in
data16
es
push
pop
push
ss
or
sub
loopne
leave
subb
ds
jle
stc
outsl
jl
or
imul
mov
scas
js
mov
popa
outsb
shrb
adc
dec
jbe
aas
xor
sub
inc
or
dec
xchg
mov
inc
inc
dec
pushf
gs
test
test
orb
adc
jbe
imul
and
fadd
mov
pop
insl
jle
gs
scas
loopne
inc
pusha
ds
jb
cmp
rcl
scas
mov
mov
outsb
fs
in
adc
mov
ds
rclb
imul
inc
xorl
and
inc
inc
fiaddl
pushf
test
scas
scas
or
scas
or
insl
clc
mov
xchg
add
add
push
adc
popa
sbb
test
sbbl
fcmovnb
insb
xor
mov
sbb
push
inc
repnz
add
test
dec
inc
pusha
ds
je
popa
or
fs
dec
or
pop
ds
push
push
sbb
shlb
mov
ret
mov
popa
fsubl
pusha
mov
and
cwtl
and
fisubrl
rolb
xor
mov
and
ds
or
mov
repnz
push
xor
pusha
pop
adc
popa
data16
fwait
sub
add
xor
cltd
mov
out
pusha
das
xor
xor
sbb
jg
fs
xor
inc
push
add
gs
outsb
addr16
inc
or
adc
adc
cmp
cmp
sbb
call
test
push
pop
push
je
repz
sub
and
adc
xor
outsl
dec
psllw
inc
inc
cmp
into
sbb
loopne
fnstsw
add
inc
out
imul
dec
nop
ljmp
gs
fs
jl
sub
int3
add
sbb
sti
mov
cmp
das
js
fstps
hlt
push
sbb
mov
icebp
sti
push
add
sarl
push
loope
xchg
adc
sbb
fisttpl
push
loopne
sbb
ja
pop
inc
call
aas
xor
dec
push
ss
xor
pop
push
push
dec
cmpsb
imul
loopne
jne
xchg
push
mov
add
add
lods
outsb
arpl
ljmp
fiaddl
ret
ret
adc
repz
add
inc
repnz
lretw
mov
mov
pop
cs
ret
push
int3
pop
ret
push
jbe
push
idivl
push
aas
nop
adc
sub
add
push
pusha
cmp
or
or
push
fwait
ret
fidivl
and
mov
adc
xchg
adc
mov
fsubl
push
push
pop
movb
inc
nop
mov
cmp
mov
or
out
pop
mov
lret
data16
shlb
cmp
mov
sub
or
das
mov
lea
outsl
or
in
aam
or
pop
add
cmp
outsl
outsb
push
dec
add
or
adc
ret
cltd
loopne
jle
xor
pop
or
cwtl
outsb
push
dec
mov
sub
pop
or
mov
sub
adc
cld
out
or
mov
add
or
inc
sahf
cmp
push
movsb
sahf
add
fnstcw
sub
pop
add
mov
pop
adc
pop
sub
add
adc
jg
aaa
sub
stc
push
jg
and
sbb
rorl
jg
ss
pop
cmp
jne
dec
jge
cmp
pop
loopne
and
dec
inc
neg
ret
sub
jle
pusha
add
push
push
mov
dec
sub
test
mov
mov
add
mov
arpl
cmp
je
cmp
sub
adc
pushl
jl
cmp
jg
dec
cmp
fsubr
lods
push
or
sbb
and
fdivs
pop
cmp
je
loopne
xor
or
loopne
add
pop
jl
mov
pop
pop
das
sbb
push
fisubl
and
or
jp
dec
cld
jne
jl
push
add
testl
mov
clc
mov
or
lock
adcl
push
sbb
ffree
popa
addb
push
fistps
cmc
test
adc
ss
jnp
or
lds
push
xchg
roll
js
dec
in
cmp
adc
int3
mov
inc
aas
mov
shl
add
repz
jl
dec
outsl
sti
pop
jmp
jbe
adc
or
jl
dec
sbb
fcmovnbe
sub
clc
jb
sub
inc
push
shl
ret
inc
push
loope
fists
push
sub
mov
sbb
repnz
data16
jne
arpl
imul
mov
lcall
adc
adcl
cmpsl
xchg
push
mov
pop
mov
mov
aaa
and
mov
fists
jmp
sub
adc
inc
das
sti
jmp
test
in
or
mov
dec
fstpl
loopne
xchg
jle
aad
hlt
jg
in
std
add
mov
dec
add
mov
jo
push
sub
cs
call
repnz
sub
mov
sub
mov
xor
mov
add
sub
aaa
sbb
cmc
and
push
aas
sub
imull
test
sub
adc
add
mov
add
sub
jb
or
or
xorb
incb
leave
jmp
ds
stos
inc
and
push
test
mov
ljmp
inc
mov
js
je
push
ficoml
mov
negb
jae
inc
dec
jne
jmp
test
out
imul
addb
sub
jo
shrb
loopne
orb
push
ret
push
push
aam
cmc
push
push
xor
ja
cmp
jb
push
pop
mov
mov
pop
add
sub
cli
jbe
add
mov
sub
loop
ja
fiaddl
lcall
in
adc
leave
push
outsb
cltd
js
bnd
movsb
mov
aam
mov
push
out
xor
xlat
sbb
pushl
pushl
mov
negl
orl
xor
pop
push
sbbl
dec
inc
inc
inc
xor
shlb
xor
jl
adc
and
out
data16
sub
je
push
outsl
jg
push
and
fistps
ret
add
stos
add
cld
ret
rorl
fists
in
xor
stc
mov
xor
add
loopne
or
fnstsw
sahf
jae
cmp
jmp
push
ffree
ffree
ffree
ffree
pop
aad
add
inc
int3
aam
aad
jle
push
daa
imul
and
add
mov
push
inc
push
inc
push
push
dec
aaa
sub
xchg
sub
dec
add
es
add
test
lea
and
or
push
dec
loopne
mov
inc
jns
jnp
push
mov
or
push
and
insl
imul
repnz
mov
pop
jns
push
sete
pop
outsl
dec
cld
cltd
cli
ja
push
sbb
mov
orl
adc
incb
scas
addb
mov
lahf
mov
add
sarb
stos
mov
xchg
xorb
jg
mov
lods
mov
lret
inc
adc
push
xchg
push
daa
pop
and
addr16
xorl
pop
xor
xchg
mov
movsb
add
inc
dec
jl
and
addb
xorb
pop
adc
mov
mov
scas
add
or
out
js
push
xor
push
adc
jo
movb
sub
mov
dec
pop
decl
jne
les
pop
xor
adc
fisttps
pop
lcall
mov
out
jnp
fldt
fcomps
setne
jmp
cmp
test
xchg
movsb
dec
pop
cmpl
imul
and
in
add
dec
add
xor
or
idivl
fsubs
in
mov
and
adc
inc
xchg
out
jmp
and
test
dec
mov
xchg
xor
loopne
lock
hlt
or
mov
pop
clc
fbld
cmp
ja
mov
and
inc
dec
jecxz
ja
adc
push
fldl
and
test
xchg
in
mov
mov
mov
pop
cwtl
push
sbb
jo
test
push
adc
dec
lahf
shrb
add
mov
adc
mov
mov
je
jno
int3
ds
rep
pushf
into
xchg
divl
and
outsb
imul
sti
sub
loopne
mov
adc
push
cmp
shlb
dec
adc
lods
insb
popa
pop
pusha
or
aaa
pop
sti
hlt
sti
add
add
mov
or
movsb
imull
add
out
pop
add
lea
pusha
mov
push
push
add
xor
cs
pop
sarl
js
add
jne
mov
mov
jle
movl
sub
sbb
fs
in
pop
add
addl
jge
mov
dec
xchg
pop
sbb
mov
sahf
push
adc
xorl
or
mov
inc
and
int3
fistl
inc
dec
repnz
jp
lock
ror
jmp
mov
dec
roll
insb
push
shll
xchg
mov
mov
push
test
icebp
enter
sbb
fwait
inc
sbb
pop
call
xlat
jle
into
xor
inc
sbb
push
inc
xor
rclb
add
or
mov
xor
push
cmp
or
jp
or
inc
or
or
inc
add
or
pop
inc
mov
lea
mov
mov
inc
outsb
pop
pop
out
xor
clc
not
and
pop
sbb
cmp
dec
push
shl
sbb
mov
das
fldl
push
loop
loopne
inc
jmp
movsb
aas
lea
or
xchg
or
xchg
sbb
adc
aam
call
push
int3
insb
cmp
repnz
call
fbstp
mov
sti
enter
mov
notrack
jmp
sarb
and
and
ja
in
fcmovnb
pop
pop
mov
adc
mov
lcall
addr16
mov
push
in
or
outsl
pop
sbb
test
rclb
cwtl
sub
ja
enter
pushf
mov
lahf
sub
ja
rorl
push
hlt
clc
cld
inc
loope
mov
cld
imull
into
inc
divb
cli
inc
call
and
pusha
faddl
inc
xchg
mov
adc
xchg
insw
xor
adc
shlb
ret
test
mov
inc
pop
adc
add
neg
add
mov
cmp
data16
jg
add
je
test
jne
mov
test
in
mov
mov
mov
cmp
inc
decl
adc
add
faddl
sub
test
lahf
mov
cmp
inc
adc
notb
mov
mov
sbb
loopne
clc
ja
pop
ret
mov
pop
arpl
mov
xchg
inc
sub
mov
mov
ljmp
rep
or
movsb
inc
pop
call
pop
push
repnz
fidivs
lret
test
cmc
jmp
pusha
das
or
sarl
data16
jecxz
or
or
cli
jb
xchg
notl
fiaddl
add
dec
add
sbb
dec
sbb
xchg
xlat
repnz
sbb
add
fdivl
cmp
pop
jno
sbb
sbb
sub
pop
or
jae
mov
add
sub
and
test
pusha
sbb
das
or
cli
pop
and
je
mov
push
mov
sbb
cli
sbb
or
sub
sub
je
xor
sub
add
out
fists
icebp
es
mov
rclb
inc
inc
cs
in
ret
mov
cs
mov
pop
cld
vmovaps
jbe
sbb
pop
mov
mov
push
rcrl
add
pop
mov
jne
call
lcall
shrl
mov
or
add
loope
pop
cmp
inc
inc
or
mov
mov
popa
pop
and
push
pusha
fldcw
loopne
roll
pop
sub
mov
cmp
rol
into
inc
xchg
sar
mov
add
cmp
insb
and
jecxz
sub
and
aam
mov
test
lcall
cmpl
in
and
add
sub
jo
push
fcomip
mov
adc
adc
or
mov
fcompl
daa
pop
add
bound
sbb
cmp
movsb
adc
outsl
mov
repnz
and
lcall
imul
sub
jmp
scas
push
jp
mov
in
sub
lods
rorb
imul
lret
lods
jmp
mov
mov
sub
sub
jne
cmp
mov
push
fildl
sub
jae
in
popl
dec
roll
mov
rep
orb
fistpl
xor
or
cmp
lea
pop
pop
mov
decl
push
sub
xor
cmp
ja
imul
fsubrs
fs
jo
outsb
jae
add
pop
dec
sahf
dec
cmp
or
cmpb
jo
mov
ret
je
xchg
ret
and
lcall
cmp
pop
ret
fildll
fimuls
and
mov
jns
dec
lahf
push
std
push
orl
sub
cmp
or
out
push
inc
pusha
mov
addr16
adc
in
sbbb
xchg
fsubrs
rorl
out
popa
mov
mov
fdivrl
sbb
cmpsb
ret
inc
je
test
sbb
jae
mov
pop
jb
lahf
shrb
imul
jg
sbb
bound
mov
cmp
inc
mov
daa
ret
sbb
bound
cmp
jbe
mov
aad
mov
jmp
xor
inc
inc
cld
lods
out
sub
mov
mov
mov
stc
mov
je
scas
insl
aas
sub
call
pop
js
mov
add
js
cmpb
fmul
cltd
sub
jmp
inc
ds
dec
mov
fcomps
push
leave
xchg
push
mov
test
adc
mov
mov
outsb
mov
repz
sub
inc
je
mov
or
je
mov
inc
je
mov
jo
fcmovu
dec
je
dec
jl
mov
mov
or
pop
cmp
jbe
mov
mov
cld
or
inc
fdivrl
mov
ficoml
xchg
mov
cltd
or
iret
dec
xchg
add
cmc
push
mov
xchg
ret
xor
and
lds
jle
nop
sub
xchg
adc
or
xchg
movsl
inc
out
xchg
push
in
enter
xchg
push
daa
inc
leave
leave
or
or
cmp
mov
in
jge
pop
mov
mov
sahf
ja
ss
cmpb
inc
out
nop
add
ss
sub
add
and
inc
add
lret
xchg
xchg
jno
pop
popa
es
push
add
inc
pop
dec
mov
testl
lea
les
leave
sbb
push
push
cmp
fimuls
stos
lea
xor
push
lods
jno
fs
sbb
test
cmpb
aam
mov
cmpsb
xchg
daa
or
lods
ja
das
loopne
das
int
andb
hlt
jge
call
cwtl
push
ret
ret
cmp
cmp
sbbl
dec
cld
lea
inc
mov
shrl
mov
adc
or
push
xchg
mov
dec
cmp
add
loopne
or
mov
imul
pop
movsl
cmpl
mov
xchg
repz
mov
adc
xor
nop
fmull
inc
push
dec
push
jmp
or
adcb
lods
mov
adcb
stos
or
jne
clc
lcall
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
add
mov
sahf
mov
int3
out
add
movsb
mov
inc
dec
cwtl
in
or
jg
dec
mov
stos
cmp
jne
arpl
clc
pop
pop
aaa
aam
inc
cld
mov
or
inc
sti
mov
add
popa
jp
jb
mov
repnz
adc
xchg
push
add
test
mov
fisttpl
andb
lock
loopne
fidivrs
pushf
mov
jge
andl
adc
jae
mov
mov
cld
cmpsl
inc
lock
in
rcll
sub
sti
jo
in
filds
je
add
or
mov
mov
aad
mov
popf
call
or
aam
call
jo
add
aaa
dec
pop
sti
cltd
aad
test
jno
test
test
clc
sbb
dec
inc
dec
lods
or
in
insl
xor
jo
ret
std
mov
push
cmpsb
xchg
push
cmp
jl
pop
sbb
jo
aad
stos
push
je
mov
stos
neg
out
pop
inc
mov
sbb
mov
loop
xlat
mov
inc
stos
pop
pop
inc
clc
dec
pop
and
jmp
mov
decb
jne
push
dec
sbb
sub
rcll
mov
mov
in
jnp
push
aam
cmp
sbb
cld
cli
adc
mov
lcall
xabort
sub
enter
div
mov
cld
inc
test
jne
sbb
mov
imul
jmp
adc
sti
add
js
js
je
inc
jne
pop
fdiv
ret
xchg
repnz
ret
inc
repz
or
repnz
test
cmp
lret
add
lea
add
iret
mov
je
push
sub
loopne
cmp
add
sbb
jmp
gs
fadd
push
test
test
dec
hlt
fimuls
and
inc
add
and
and
adc
and
sub
ja
mov
and
or
sub
iret
jne
xor
or
sub
sub
orl
sub
arpl
cmp
cmpsl
adc
cli
call
adc
stos
iret
dec
imul
or
pop
and
inc
adc
lcall
stos
adc
adc
nop
daa
shrb
rorb
ljmp
cld
scas
adc
mov
sbb
dec
sbb
or
scas
sub
push
dec
or
test
orl
inc
push
dec
lods
pushf
cmp
sub
adcl
jne
data16
dec
cmp
sub
pushf
loope
mov
ret
fists
or
inc
push
add
ss
adcb
jne
cmpl
add
movb
popf
in
cs
aas
imul
adc
sbb
out
clc
call
push
repz
inc
pop
frndint
rcr
scas
pusha
sarb
fstsw
fwait
mov
testb
je
fidivl
loop
pop
fbstp
lea
mov
inc
sub
mov
shr
adcb
xor
pop
add
push
mov
jns
mov
or
jge
pushf
or
jg
call
jae
cmpb
jb
movb
js
decb
and
cmp
jmp
data16
pusha
xor
jmp
mov
outsb
dec
sbb
je
notb
lcall
ljmp
inc
out
scas
inc
shlb
mov
adc
lahf
sub
jp
rorl
je
sarb
push
neg
mov
fisubrl
or
or
sbb
adc
jl
mov
mov
fidivl
repnz
add
outsl
mov
fildll
cli
jecxz
cmp
movsl
fimull
cmp
mov
rep
cmp
mov
sbb
xor
sub
mov
and
jne
dec
sub
cmp
enter
and
pop
lock
push
ljmp
enter
cmpb
pop
xor
divl
pop
jmp
loopne
rclb
sbb
inc
mov
subl
mov
push
mov
mov
fwait
nop
jo
fldz
jg
cmc
pop
cmpsb
lahf
xchg
mov
cmp
ljmp
icebp
fisttpll
mov
inc
fnstsw
cmp
je
and
fistpll
sub
pop
add
jg
test
mov
sahf
xchg
push
mov
add
push
mov
add
loopne
adc
aas
jmp
fstpt
ret
pop
xor
test
add
insl
and
add
popa
jmp
jl
cmp
mov
add
or
fimull
jbe
fiaddl
jmp
aaa
mov
negb
jg
movsl
stc
es
push
inc
imul
push
adc
cmp
aaa
add
js
insb
sub
rolb
sbb
jmp
setl
inc
jmp
lods
rolb
insl
sbb
pop
inc
add
enter
push
shlb
sahf
repz
push
stos
sbb
mov
loopne
sbb
test
sarb
xor
fwait
mov
mov
out
out
pop
in
lea
inc
or
inc
mov
adc
frstor
divl
push
adc
push
popa
push
and
add
jg
push
loope
xchg
or
cmp
jae
push
cli
cmp
inc
stc
inc
imulb
jae
movzwl
data16
add
xor
cmc
shrb
pusha
and
ret
cmp
mulb
adc
add
xor
clc
xor
or
sbb
pop
mov
jecxz
lret
movsb
dec
fcomip
test
clc
shrb
lret
mov
sbb
aam
push
jns
push
aad
pop
adc
push
faddp
xchg
jg
lods
fbstp
adc
in
cmp
mov
mov
jl
push
cmp
mov
fwait
jecxz
shlb
and
mov
loopne
enter
add
adc
sub
js
and
jb
and
sbb
nop
add
mov
add
lahf
dec
xchg
sbb
imul
in
jae
idiv
add
les
sub
or
nop
aam
dec
fidivs
lock
addb
ja
xor
push
jb
or
jb
sti
insb
cmc
pop
sub
ja
adc
aaa
inc
pop
dec
push
daa
add
inc
dec
jne
sarb
sub
dec
mov
aas
cltd
idiv
imul
xchg
adc
jns,pn
ret
cli
add
repnz
insb
in
jbe
ds
ds
add
pusha
ret
or
pop
sti
jne
inc
std
sbb
inc
std
mov
rcll
sub
ljmp
pop
call
aas
dec
sub
loope
sbb
dec
in
test
jg
mov
fidivl
push
xchg
push
clc
hlt
or
in
pop
sbb
inc
movsb
stos
cmpsb
pop
adc
out
data16
lods
sbb
stc
mov
add
jl
addl
add
jge
shl
lock
lods
mov
ret
mov
decl
cmpl
sub
imul
fcoms
and
ret
repnz
mov
pop
sbb
add
adc
add
xchg
sub
lock
xor
shrb
rcpps
stos
cmpsl
mov
add
dec
cmp
dec
cmp
jb
test
jp
sbb
filds
imul
hlt
add
pop
hlt
mov
add
loopne
jbe
sbb
es
insl
mov
xor
cld
mov
fs
inc
xlat
nop
cltd
fildl
sub
push
or
mov
mov
cli
sbb
fnsave
or
sbb
mov
jo
lret
push
mov
or
push
xchg
and
jg
add
sub
pop
sbb
mov
mov
and
inc
lea
mov
out
add
sbb
ret
pop
push
dec
movsl
fs
aaa
fsubp
pop
push
hlt
and
add
loopne
in
sub
lcall
and
mov
mov
pop
cmp
ss
mov
lea
call
xchg
sarl
sti
je
dec
xchg
icebp
mov
inc
addb
lea
in
add
std
ficoml
add
push
lea
or
xchg
or
mov
mov
add
jecxz
fistl
shlb
push
in
jge
js
lahf
lret
call
nop
in
cmp
in
adc
pop
xchg
dec
fiaddl
sbb
inc
jo
xor
push
repnz
adc
add
out
repnz
sub
lea
popa
jg
stos
scas
test
jmp
rclb
mov
or
push
mov
popf
adc
popf
mov
sub
je
or
sbb
dec
into
dec
mov
add
inc
push
jmp
cmpl
sub
pop
jae
jmp
add
lcall
jl
int
add
dec
adc
shl
push
cmp
jecxz
or
mov
subl
ljmp
frstpm(287
sub
addr16
imul
push
inc
and
daa
cmp
mov
icebp
and
je
or
mov
cmpb
jne
lahf
or
cs
sbb
dec
add
and
sub
pop
jno
idivl
add
add
pop
push
and
aam
fsubrs
andb
xchg
rol
or
cmp
clc
adc
lods
mov
pop
dec
mov
cmp
sbbb
mov
push
jecxz
sbb
jne
mov
pop
or
repnz
add
jae
pop
mov
scas
gs
xlat
rclb
xchg
and
pop
xchg
sbb
int3
sti
push
add
cmp
sub
sub
jae
adc
and
dec
jne
jge
dec
rorl
pop
pop
dec
mov
dec
xchg
ficomps
adc
into
cmp
xchg
test
xor
mov
jo
push
and
insl
or
or
and
push
or
or
push
shrb
xor
push
pop
add
or
or
stc
faddp
or
push
sub
lahf
mov
popf
into
jnp
ds
mov
push
and
push
loop,pn
rcll
adc
cmp
pop
loope
push
sbb
mov
sti
inc
ret
les
mov
add
inc
mov
inc
mov
dec
push
lea
and
fcomps
aam
adc
aam
dec
cs
sbb
xor
lock
mov
outsb
inc
sub
pop
push
xchg
xor
or
test
sub
insl
jmp
out
aad
mov
sub
xchg
xchg
xlat
mov
out
mov
pushf
popf
xchg
movsb
mov
adc
das
xchg
loopne
jecxz
sbb
lods
adc
lahf
out
pop
mov
xor
jnp
and
mov
outsb
or
push
jmp
or
je
or
je
jmp
push
outsl
mov
dec
mov
shrl
sub
pop
dec
add
xor
je
sbb
add
push
cs
arpl
mov
loopne
jmp
push
pop
pop
push
jle
ds
adc
mov
and
or
and
jmp
sbb
enter
insl
sbb
mov
xchg
or
mov
pop
popa
call
out
add
movsb
test
xchg
pop
lret
in
or
pop
push
sub
add
xchg
sub
jbe
js
into
in
jge
cmp
xorl
rorl
jb
add
add
cld
scas
mov
lds
jmp
and
mov
ss
leave
and
xor
fldenv
cld
add
push
and
scas
cmp
sti
out
cmpsb
test
or
add
dec
repz
or
mov
mov
sub
negl
jo
xchg
pop
and
inc
sbb
fdivs
pop
jbe
sbb
jmp
pop
sbb
mov
psrad
add
xor
inc
mov
mov
sub
mov
enter
dec
jmp
inc
push
mov
cld
sub
push
sysret
jo
xlat
lock
add
push
adc
out
dec
das
push
dec
bound
adc
push
add
adc
and
fsubl
aam
test
sub
xchg
pop
scas
loope
lea
mov
sbb
aas
or
mov
aas
ss
orb
in
mov
inc
mov
pusha
or
push
ffreep
aaa
repz
lods
lret
and
mov
sbbb
cmp
add
mov
pop
sbb
sbb
pop
and
jl
pusha
jb
mov
jle
xchg
adc
ret
add
sar
nop
mov
testl
ja
ficoml
cld
jae
fstps
pusha
repnz
dec
xchg
jbe
dec
into
or
push
push
repz
retw
insb
push
loope
scas
into
cmp
and
lcall
or
mov
aaa
lock
mov
in
iret
mov
jge
in
in
popa
movsb
and
mov
mov
or
dec
ds
loopne
fs
cmp
jl
sub
push
cmp
jne
sub
ljmp
inc
lcall
shrl
inc
notrack
sub
je
dec
mov
or
jmp
mov
jmp
push
push
push
mov
jmp
inc
out
clc
jle
add
mov
aad
xor
aad
or
cli
iret
sbb
add
mov
pop
mov
das
mov
mov
fdivrs
mov
or
xchg
xorl
shrb
push
jmp
add
or
dec
jne
jo
test
sub
das
lods
incb
xor
cmp
jg
sbb
xchg
adc
mov
ret
ljmp
mov
shlb
push
add
testl
popa
dec
cld
gs
lcall
fadds
loopne
aaa
mov
sbb
xchg
gs
mov
out
jl
call
dec
or
add
mov
dec
pusha
fwait
mov
dec
addr16
push
call
je
mov
dec
xchg
hlt
cltd
or
jge
jne
mov
jbe
adc
jge
lods
in
cmp
or
jg
mov
shrb
rolb
and
or
push
das
mov
and
jb
dec
out
or
dec
in
add
in
fnstcw
push
add
and
sarb
es
in
inc
and
push
mov
jmp
cmp
lock
nop
out
out
cmpl
shlb
clc
jmp
cmpb
mov
loop
ja
flds
jno
rclb
pop
data16
jg
push
xchg
out
ds
add
cmpb
jle
xorb
outsl
and
fs
jne
mov
add
or
repz
popa
or
mov
xor
popf
inc
cs
mov
stos
and
stc
ljmp
jne
adc
sbb
ret
cmp
mov
and
ficoml
xchg
jl
push
fdivrs
fsubrs
push
jne
fcmovb
sbbl
test
push
out
add
mov
mov
sbb
xchg
cwtl
test
nop
add
int
in
mov
mov
gs
adc
repnz
pop
sbb
decb
outsl
dec
and
and
movsb
leave
inc
and
push
and
pop
jb
add
or
hlt
or
imul
jge
and
add
push
or
or
dec
mov
fs
cmpb
dec
enter
or
add
jo
sbbl
test
mov
cmp
and
add
ret
xchg
aas
ja
jne
adc
mov
or
outsl
popf
pop
xor
and
lahf
jl
pop
pop
shlb
or
mov
sbb
add
loop
into
add
mov
mov
adc
jo
cmp
pushf
rolb
or
sub
sbb
hlt
mov
jns
mov
adc
adc
jno
push
pop
pop
mov
sbb
and
add
cltd
lret
test
adc
xor
out
arpl
test
fst
std
add
add
sbb
or
and
fstpl
fwait
jmp
sbb
ja
orl
push
shlb
push
push
push
push
sbb
scas
std
cmp
mov
adc
add
sub
jb
or
mov
lea
insl
add
fwait
add
mov
inc
mov
adc
mov
adc
or
cmp
pop
mov
cwtl
pop
out
subl
loopne
ret
sbb
push
pop
outsl
adc
leave
lods
and
shlb
fiaddl
fstps
loopne
add
test
fwait
int3
loope
cld
push
in
and
mov
or
or
pop
sub
rorl
jo
shr
inc
inc
dec
push
mov
nop
inc
lcall
or
movl
or
sti
or
test
fadds
pop
add
dec
rcll
int
sbb
shlb
in
dec
call
and
jne
push
ret
sbbb
xchg
dec
xchg
mov
loop
roll
jl
je
xchg
cmp
and
sbbl
mov
mov
cmc
js
pusha
inc
jbe
out
dec
int
mov
dec
in
in
incl
mov
repz
and
pop
out
cmp
divl
outsb
jmp
out
in
pop
imul
adc
mov
sbb
aam
fidivrl
std
andl
cmp
add
push
mov
xor
or
push
lret
hlt
push
push
call
push
dec
sbb
aam
ret
jg
mov
add
iret
nop
nop
js
pop
arpl
clc
clc
iret
or
es
and
jb
jb
fwait
or
repz
lods
test
jmp
mov
ljmp
je
sub
je
test
pop
mov
push
add
rcrb
rclb
mov
cwtl
mov
cs
and
into
loopne
lock
lock
add
jge
mov
xor
push
mov
pop
pop
adc
or
xor
push
cmp
pushf
mov
add
sbb
aad
addl
and
mov
loopne
jmp
icebp
pop
je
jne
add
in
cmp
or
lods
and
in
jle
or
iret
in
or
addr16
mov
into
fldl
add
sub
push
or
xorl
xchg
inc
test
sub
push
test
mov
fst
cmpl
popa
out
mov
mov
nop
and
or
xchg
push
rclb
or
popf
gs
dec
outsb
je
mov
nop
or
rclb
inc
sub
out
mov
mov
or
jae
loopne
into
fdivr
pop
sbbb
push
mov
subps
and
ljmp
not
bound
and
mov
cmp
inc
inc
loopne
inc
add
movsw
add
jo
pop
out
fldl
or
lods
or
mov
jae
and
mov
inc
push
mov
mov
cmp
mov
cmp
int3
sahf
stc
push
lea
lock
xchg
cwtl
psrad
add
push
push
rorl
mov
or
loop
mov
loopne
int3
pop
mov
or
test
add
sub
mov
pop
negl
dec
mov
loope
lahf
test
pop
test
call
aas
cwtl
inc
xor
xchg
inc
and
jo
mov
mov
adc
inc
pop
adc
sub
push
mov
adc
add
sbb
fldcw
rolb
sarl
pop
add
test
lahf
cmpsl
xchg
fadds
push
mov
pushf
add
cmp
sti
or
mov
mov
ja
mov
aam
dec
movsb
test
stos
xchg
jns
and
clc
and
and
clc
cmpb
sub
ret
cmp
sbb
push
mov
and
stc
push
inc
adc
fstl
lock
jg
cmp
ret
insb
sbb
cltd
iret
clc
pop
test
ret
sbb
push
inc
pusha
pop
inc
adc
hlt
mov
add
mov
adc
push
inc
call
push
sar
lret
adc
ljmp
mov
adc
push
sbb
insb
sbbl
cmpl
rolb
outsb
cmpsb
fildl
les
mov
jmp
pop
loopnew
ud2
xchg
ret
or
add
enter
jg
sbb
cld
mov
dec
sub
push
in
inc
call
or
cs
in
xchg
ud1
fmull
sub
jne
mov
scas
adc
adc
ret
mov
test
pop
cmpsb
addl
movmskps
push
dec
mov
icebp
movsb
push
test
aad
daa
sub
or
aam
push
repz
lret
in
pop
push
push
cmp
je
jmp
mov
inc
mov
xor
and
sbb
mov
add
push
pop
xor
shll
or
or
sub
rorl
push
ss
test
dec
mov
out
nop
adc
lret
or
pop
dec
addr16
pop
cld
cmpl
es
je
movaps
inc
cmpsl
inc
cmp
in
jae
pop
outsb
sub
pop
aam
adc
sbb
mov
fcmovnbe
adc
daa
in
xchg
or
sbb
aas
clc
or
add
mov
and
out
jnp
jae
or
enter
jb
mov
mov
mov
mov
imul
sbbl
jge
mov
lret
enter
movsb
test
and
push
lcall
mov
outsb
int3
jb
lods
push
pop
mov
jge
dec
aad
ret
outsl
leave
sub
xor
data16
inc
xor
std
rolb
or
push
lods
stos
fistpl
and
cmp
cmp
in
arpl
jp
outsl
lcall
adc
lock
push
movl
add
rolb
rolb
pop
xchg
push
mov
mov
ss
mov
cwtl
subb
xchg
add
xor
lcall
mov
lahf
ret
push
cli
enter
jge
sahf
fcoml
sbb
fistps
test
add
sti
and
push
cmpsl
in
mov
mov
adc
test
inc
sbb
xorb
icebp
adc
aaa
ja
adc
mov
adc
and
adc
lods
jle
or
test
in
push
mov
adc
daa
cmp
sub
and
xor
leave
cmp
mov
insb
loop
xchg
cmp
pop
loopne
inc
mov
mov
rorb
les
jne
add
and
mov
adc
out
rorb
adcb
add
int3
mov
cmp
jne
cmp
push
jle
mov
das
call
cld
pop
lea
inc
sbb
cmp
jno
adc
and
cmpb
popa
dec
out
in
xchg
leave
push
jae
or
imul
and
repz
xor
mov
movsl
push
clc
das
rolb
mov
dec
adc
addr16
push
jb
fstpt
jle
test
pop
push
rcl
bound
daa
xor
pop
sbb
jmp
mov
dec
jmp
dec
test
jl
shlb
leave
or
sub
lods
call
ret
enter
or
inc
pop
imul
adc
add
adc
cmp
fmuls
add
in
mov
inc
test
and
clc
add
cmp
daa
xorl
lret
in
xor
mov
cmp
jle
push
sbb
xor
xlat
adc
cli
xor
test
jg
adc
ret
jmp
lds
adc
mov
ret
add
xor
pop
cmp
jl
lods
adcl
lods
sbb
inc
inc
jge
mov
mov
or
jg
dec
scas
hlt
dec
mov
mov
hlt
jge
enter
jl
jne
sbb
xor
out
in
lods
inc
ret
xchg
inc
dec
lcall
mov
lods
inc
mov
data16
cmp
add
insl
icebp
sti
dec
xchg
xor
out
sbbl
sahf
jp
loope
sub
mov
add
bound
push
stos
mov
and
repz
test
ret
cltd
sarb
sub
stc
loope
repnz
fwait
adc
mov
adc
ds
mov
mov
mov
adc
add
ret
mov
out
pop
and
push
xor
and
rclb
ret
pop
cltd
inc
nop
addr16
inc
subb
mov
in
adc
push
outsl
mov
std
adc
sub
popf
pop
mov
xor
mov
pop
adc
add
or
into
sbb
test
ret
push
test
cs
pop
and
push
lods
or
inc
cs
xchg
in
jae
sbb
xlat
xchg
je
jo
xchg
roll
pop
add
mov
ss
sub
add
ja
shlb
pop
add
hlt
fcoms
add
mov
and
aad
je
cmpsb
jl
je
cmpb
sbb
jb
add
lods
sarl
sahf
dec
push
push
out
ja
nop
mov
andb
shll
mov
add
sub
aaa
cwtl
mov
inc
add
mov
mov
ret
sub
push
ret
mov
jle
sarb
cli
jbe
sub
out
xor
lods
mov
xor
out
mulb
das
and
and
and
clc
mov
jbe
dec
xchg
adc
repnz
aam
inc
inc
jne
jg
or
adc
jge
add
jbe
in
push
and
ja
cmp
aaa
pop
sub
jb
inc
mov
cs
stos
sbb
lret
jne
fdivrs
decb
pop
jne
cmp
xlat
fdivrp
lock
popl
les
or
inc
add
add
loop
arpl
jg
add
data16
shll
and
js
push
add
jp
add
mov
mov
incl
movsl
pop
cmpl
push
mov
adc
faddp
inc
or
cmp
mov
xchg
rorb
mov
cwtl
pop
aam
imul
add
xor
and
stc
push
subb
cwtl
outsl
in
dec
stos
les
lods
movsl
cmp
movsb
mov
adc
mov
test
mov
sti
sbb
inc
sub
faddl
inc
inc
push
in
call
adc
sub
mov
cs
or
outsb
nop
in
insl
das
mov
dec
jae
nop
pop
fsubl
nopl
mov
int
push
fcmovbe
pop
mov
ds
adc
cmp
mov
mov
fwait
in
mov
sub
mov
loopne
push
hlt
enter
test
enter
test
sbb
push
in
les
ret
nop
dec
sahf
add
call
clc
mov
mov
or
push
push
hlt
mov
scas
mov
in
cmp
lock
lahf
ret
test
rcr
jbe
sarb
out
outsl
add
inc
bound
fs
add
jmp
fildll
sub
fimull
aaa
jp
insl
pop
jo
imul
push
fstp
add
stc
pop
sbb
or
add
cmp
xchg
test
and
in
bound
jne
movsb
xchg
mov
or
pop
dec
adc
xor
lods
inc
outsl
lock
jbe
pop
sub
adc
push
lahf
jns
xlat
xor
dec
std
xor
xor
and
pushl
xchg
ret
mov
mov
xor
rolb
in
or
lods
pop
jnp
pop
jno
pop
cltd
jo
pop
arpl
push
mov
call
adc
sti
mov
call
adc
dec
stc
add
push
lock
xchg
xor
or
pop
or
jl
adc
push
push
outsb
imul
popa
jae
inc
jb
sbb
es
movswl
mov
push
dec
outsl
fs
gs
outsb
outsw
jmp
call
xor
rol
mov
call
adc
inc
mov
decl
or
xor
inc
jmp
pop
pop
ret
into
or
hlt
mov
xor
adc
cmc
dec
push
add
adc
sbb
fcoms
cs
cmp
pop
adc
or
iret
mov
adc
dec
pop
std
outsl
stos
add
pop
call
fisubrl
xor
lea
cmpl
adc
dec
roll
adc
outsb
sub
dec
cmp
mov
ss
ret
enter
or
in
fstpt
inc
cmp
ret
popf
mov
jecxz
add
xchg
cmp
xor
lods
imul
rcl
jo
dec
faddl
jl
sub
sub
test
inc
dec
and
sbbb
add
add
stc
into
jl
xchg
xor
mov
fstps
in
pop
in
in
sbb
stos
jmp
mov
jne
hlt
cli
cmp
test
cmp
push
add
lods
add
mov
mov
sub
adc
jl
jmp
ret
fsubr
aam
mov
jmp
xlat
or
sub
loop
bound
dec
xor
call
push
mov
pop
inc
rolb
icebp
push
loop
sbb
adc
xor
test
add
imull
ljmp
cwtl
dec
mov
mov
sub
mov
pop
sbb
mov
mov
gs
jo
inc
js
pop
push
jmp
addr16
lock
inc
in
mov
dec
ret
xchg
xchg
aaa
popa
and
xchg
popf
test
call
dec
push
push
xlat
rorb
sbb
jns
decb
push
insb
cld
icebp
inc
cmp
jne
movzbl
cld
icebp
jnp
dec
pop
sub
cmpb
sbb
int3
sbb
cmp
pusha
push
xor
and
roll
inc
out
mov
sbb
out
in
push
bound
subb
insb
xchg
add
inc
dec
add
in
jne
push
cmpsb
adc
rcr
mov
jne
mov
jne
push
mov
inc
or
fs
inc
rorl
mov
stos
jl
orl
push
mov
xor
pop
arpl
push
add
lock
repnz
and
lea
sub
and
sbb
push
or
mov
lret
jg
lea
jp
pop
shlb
inc
jno
das
xchg
mov
push
loopne
dec
nop
mov
mov
mov
dec
sbb
loopne
jne
in
cmp
and
jbe
out
fmul
mov
dec
lret
jle
pop
in
pusha
mov
mov
jo
adc
shll
dec
mov
pusha
pusha
pop
popa
dec
jb
adcb
push
aaa
ja
enter
adc
call
sbb
clc
cmp
roll
cmpsb
sub
xchg
jbe
add
or
ret
les
lock
rcr
or
fs
adc
add
std
pop
test
sahf
xor
test
jo
jge
sub
in
sbb
sub
inc
sbb
push
in
adc
fimuls
decl
cmpl
add
mov
inc
stc
ret
push
sub
or
pop
insl
sbbl
pop
mov
clc
mov
loope
lock
inc
or
add
cmp
je
push
cmp
in
shl
fsubrl
cwtl
sbb
daa
push
dec
sub
sub
jg
sbb
cmp
fldenv
test
enter
sbb
or
test
fsubr
sbb
push
push
pop
xor
inc
rorl
imul
test
mov
sbb
inc
jge
and
push
dec
out
cmp
add
mov
addr16
fidivs
ret
xchg
adc
repnz
cld
xor
popf
dec
xor
push
arpl
movsb
sti
nop
push
aaa
loop
jge
and
push
fwait
xor
pop
adc
fnstsw
push
jmp
mov
jmp
es
imul
sbb
rep
je
xor
loope
cwtl
fs
inc
adc
inc
push
mov
loope
sub
in
hlt
cmp
je
in
mov
rorb
fmull
adc
sub
out
jns
mov
mov
mov
pop
mov
mov
push
xor
xchg
adc
iret
jnp
mov
test
jl
push
je
lock
fisttps
fs
xor
iret
cmp
out
push
dec
push
adc
mov
mov
pop
dec
push
pushf
add
hlt
push
and
inc
out
mov
out
es
xchg
scas
cmp
adc
and
and
aam
add
cmp
push
les
inc
in
xor
mov
hlt
nop
mov
iret
lock
call
js
in
push
mov
or
jbe
mov
jl
mov
dec
fmulp
or
pop
pusha
les
ja
inc
jo
cs
mov
pop
enter
inc
pop
daa
iret
lods
cmp
movsb
iret
leave
cmp
dec
mov
in
jae
cwtl
cmpsl
pop
xchg
and
daa
iret
enter
mov
xchg
ja
inc
xlat
test
leave
xor
popf
pop
out
cmp
pop
sbb
cmp
adc
cli
rorl
pop
add
or
dec
add
loope
mov
mov
addr16
lock
ftst
leave
sarb
addr16
mov
mov
movsb
in
mov
adc
cmp
nop
inc
and
cmp
mov
sbb
scas
sub
mov
mov
test
add
aam
dec
xor
pop
cmp
nop
inc
cmp
inc
pop
enter
xor
sub
dec
gs
push
mov
and
mov
jg
dec
jb
rcrb
jo
pop
ret
adc
je
and
jmp
mov
mov
adc
fnsave
dec
pop
ret
dec
pop
xor
mov
sub
add
or
xor
enter
or
sarb
push
test
jp
sbb
leave
popa
lds
add
fs
sarb
push
repnz
leave
adcl
inc
xchg
mov
and
dec
push
and
or
imul
xchg
iret
daa
clc
lea
cmpl
in
in
pop
je
mov
std
mov
adc
sbb
test
hlt
pop
sub
enter
mov
and
sbb
adc
xor
jecxz
jns
lcall
popf
xor
mov
cmp
insl
clc
loope
pop
inc
adc
clc
addb
rcrl
mov
in
out
in
xchg
sbb
dec
jmp
pop
in
jmp
push
or
data16
daa
daa
pop
into
cmp
sub
mov
jmp
jns
clc
adc
sti
sub
add
jne
cmp
test
out
push
push
jnp
or
mov
pop
mov
add
in
leave
and
adc
xchg
dec
xor
sbb
xor
and
and
and
and
sub
dec
mov
xor
and
xor
movsb
cmp
lods
xchg
push
cs
cmp
mov
cs
cmp
fs
les
das
xchg
push
aam
cmp
in
push
cs
dec
test
push
xchg
inc
ds
adc
add
push
xchg
sahf
xchg
dec
sub
add
and
sub
addr16
push
pusha
mov
aam
je
mov
xchg
push
fmul
xchg
fistpll
daa
dec
add
outsl
je
fs
and
btc
and
cmovns
iret
mov
aam
pop
outsb
dec
jb
pop
outsl
jb
std
and
inc
insl
jo
inc
jb
insl
push
je
pop
push
test
xor
and
and
mov
jae
rcr
int
dec
add
pop
sbb
inc
mov
fs
loope
cld
popa
cmp
xor
daa
fstp
lea
jmp
sbb
add
pushf
adc
jnp
addb
cld
sub
or
and
cmp
add
jns
lds
mov
inc
in
push
inc
js
jl
out
xchg
inc
mov
in
cmp
inc
xorb
pop
test
mov
es
popa
xor
push
adc
sub
sbb
testb
adc
mov
test
add
pop
xchg
cs
xchg
jnp
or
push
inc
mov
ret
mov
iret
inc
ds
and
cs
inc
test
movsb
movsb
sub
add
jmp
dec
and
or
ds
mov
inc
jb
lret
insb
cmp
insb
inc
popa
fs
and
xlat
ficompl
rcl
jo
pop
adcl
push
xor
inc
and
adc
ds
sbb
popa
inc
imul
mov
iret
pushf
sbb
cli
mov
gs
iret
add
sub
sub
ds
popa
scas
inc
nop
adc
dec
insl
jo
lods
inc
cs
push
xor
iret
add
shrb
add
mov
incl
sub
sub
lret
fimuls
ret
out
clc
sarb
cwtl
adc
retw
dec
cld
pop
and
pop
fdivp
std
aad
fdivrs
pop
lcall
in
add
in
dec
jnp
mov
lock
cmpb
or
call
xchg
inc
pop
adc
in
les
in
ss
xor
jmp
push
inc
push
rcr
add
push
xor
fists
xchg
add
jns
cmp
mov
enter
jbe
push
add
push
or
in
add
sub
push
scas
cmp
clc
add
cmpb
add
cwtl
adc
es
jae
inc
cli
sub
push
scas
ficompl
sub
dec
je
sbb
xor
jno
fs
push
cwtl
insb
xchg
xchg
es
jbe
add
repnz
adc
out
add
pop
repz
mov
pop
and
hlt
mov
fidivs
lock
call
in
mov
push
stc
ror
mov
mov
jl
add
sub
xor
enter
mov
mov
loopne
dec
roll
hlt
jmp
mov
enter
test
or
xor
sarb
stos
les
fcomp
enter
shr
rolb
ret
jno
or
jb
nop
bound
sub
mov
pop
fidivrs
push
hlt
jl
dec
jns
push
dec
sub
int
push
je
xchg
mov
aad
and
jbe
jmp
adc
mov
add
iret
pop
pop
mov
cmp
add
aad
test
cmpsl
stc
stos
add
mov
add
mov
add
push
xchg
adcl
dec
add
lahf
ret
add
sbb
mov
jecxz
push
push
repnz
add
incl
in
mov
and
pushf
xchg
jne
pushf
mov
mov
shr
jnp
lods
cmpsl
les
subb
lcall
shrb
stos
mov
call
cld
jnp
aam
testb
dec
sar
pop
ficoms
pop
andb
sub
sbbb
les
inc
out
dec
jp
jne
les
lods
int
lcall
jmp
mov
lret
and
lock
or
jl
inc
xor
lea
push
call
push
add
push
jno
cmp
and
lock
mov
push
and
clc
pop
addl
sub
inc
pop
dec
inc
sbbl
sbb
lea
inc
pop
xchg
pop
outsb
sbb
dec
repz
dec
in
pop
rclb
jnp
js
sub
in
fwait
mov
in
jmp
in
test
push
insl
test
mov
cld
xchg
daa
push
das
cmpsb
push
add
or
push
aas
jmp
mov
imul
out
xor
inc
sub
cmpl
xor
fidivrs
or
js
xor
je
clc
add
and
aas
add
fcompl
and
add
xor
or
sarb
push
jns
mov
mov
subb
jne
aas
jno
and
sub
adc
test
mov
cmp
add
mov
inc
pop
aaa
jmp
sbb
add
adc
inc
push
in
in
in
add
or
push
xchg
or
imul
jno
lds
sub
adc
pop
or
adc
mov
dec
pop
inc
push
in
cmp
fcomp
cmpsb
mov
xor
aas
pop
and
pop
aad
aam
jmp
push
adc
jb
fistl
adc
adc
add
call
decl
push
adc
in
jns
pop
add
je
or
sti
add
cmp
dec
mov
lock
cmp
xor
push
lock
stc
daa
mov
lret
cli
movsb
jmp
and
sbb
and
shrb
aam
dec
dec
cmc
pop
pop
xchg
orb
cmp
je
pop
jne
push
sub
cmpsb
shll
or
or
jecxz,pn
loop
daa
cld
js
or
push
push
pop
sbb
add
jl
adc
jo
mov
fcompl
mov
mov
pop
es
nop
loopne
jns
xchg
push
and
sti
lds
xchg
or
pop
push
and
mov
sbb
add
add
and
inc
out
push
adc
sarb
imul
mov
es
lock
sbb
dec
repz
hlt
add
adc
and
push
or
lods
out
out
nop
outsb
push
call
xorb
js,pn
inc
push
mov
add
push
ret
ret
lcall
std
int3
addl
bound
dec
jg
xchg
pop
sub
mov
dec
shlb
out
push
mov
or
loopne
adc
shll
xchg
ja
mov
mov
add
andb
insb
and
or
lds
rclb
add
jo
adc
andb
ss
bound
in
dec
or
adc
mov
bound
add
mov
fwait
push
pop
orb
push
lea
mov
enter
adc
sbb
adc
xchg
mov
iret
jnp
ljmp
repz
out
xchg
mov
lods
adc
jl
fwait
adc
jns
inc
pusha
jle
inc
jg
leave
add
stos
movsb
or
rcl
push
fstpl
dec
lock
cs
lods
mov
push
sub
add
cltd
add
xor
adc
inc
fldcw
fldt
or
dec
cs
lock
jae
add
xor
test
push
pop
add
call
rcrl
dec
sti
shl
loopne
ja
fdivs
nop
and
fmull
cmp
fadds
add
mov
mov
or
not
rolb
rcl
int3
cmp
jne
and
int
adc
mov
jbe
inc
ljmp
dec
jmp
xchg
fildl
dec
cwtl
xor
out
inc
inc
lcall
sub
in
int3
and
out
mov
test
adc
adc
jnp
out
jb
popl
stos
into
icebp
adc
fstl
inc
inc
push
in
pop
pop
cmp
repz
xchg
mov
aaa
je
add
mov
add
and
icebp
bound
flds
jno
mov
inc
fnsave
imul
sbbb
mov
pushf
or
cmp
sbb
fwait
test
aad
movsb
fwait
nop
inc
movsb
mov
or
mov
ja
xor
stos
cwtl
jno
jb
andb
push
jmp
mov
mov
inc
sub
xchg
adc
mov
adc
cltd
divb
test
leave
test
add
or
imul
and
mov
loope
in
repnz
push
and
test
mov
or
sub
es
dec
and
in
push
adc
mov
mov
pushf
dec
pop
js
push
inc
test
pavgb
loopne
push
test
mov
inc
sbb
enter
jne
cmpsb
loope
fists
loopne
mov
push
pop
or
seta
jae
push
or
out
xor
sub
repz
push
adc
imul
out
mov
push
lods
sbb
pop
and
je
out
jb
lods
sbb
ss
dec
cmp
inc
push
mov
mov
xchg
lcall
ss
ret
cmp
mov
inc
je
cmp
loope
aaa
pop
in
add
dec
and
gs
sbb
cmp
test
ds
inc
mov
and
and
aam
add
jne
add
push
int
icebp
add
or
and
inc
mov
enter
enter
add
xor
repz
sbb
test
mov
imul
push
jns
jmp
pop
outsl
push
mov
test
lock
and
les
test
aaa
insb
in
inc
and
pop
sbb
cwtl
add
mov
cwtl
xor
cmp
xchg
orb
pusha
dec
adc
rolb
addb
insl
dec
daa
pop
mov
mov
fnstcw
mov
arpl
imul
aaa
dec
mov
and
ja
dec
gs
in
daa
and
mov
jmp
mov
or
cwtl
mov
rol
test
es
and
movsl
sub
mov
pop
aas
enter
mov
loopne
dec
push
add
sub
dec
sub
movw
imul
sbb
mov
movsb
inc
cmpsb
inc
es
and
mov
or
test
loop
xchg
pop
inc
xchg
seta
pop
sub
fstpl
fwait
mov
pop
in
xor
push
add
js
sub
inc
cmp
hlt
and
cmp
mov
push
push
or
add
pop
repnz
sbb
enter
not
movsl
lret
dec
adc
mov
cmpsl
ret
cli
mov
je
aas
dec
jne
sarb
mov
popa
jmp
mov
in
cmp
ds
add
fnop
aaa
stc
inc
outsl
jne
xchg
add
xadd
dec
pusha
push
or
dec
addr16
inc
and
movnti
and
fldt
inc
arpl
push
lock
and
inc
iret
push
mov
mov
sub
sbb
and
imul
ret
rcl
mov
js
fcoml
and
lods
aas
mov
and
ss
ss
or
adc
xor
aad
xchg
pop
adc
sti
inc
jae
pop
sub
mov
dec
call
jmp
push
inc
add
add
jb
inc
out
stc
jb
inc
sbbb
stos
xor
aas
cmp
inc
lea
sub
add
or
ljmp
pop
adc
test
inc
inc
ds
and
daa
in
mov
mov
xchg
in
add
inc
bound
popl
jns
sub
or
push
or
sbb
lret
jle
jno
mov
outsb
sbb
inc
test
xor
add
nop
xor
pusha
std
inc
pop
xchg
mov
push
xchg
pop
mov
mov
xor
push
out
fcomps
mov
dec
xorl
sbb
add
cmp
test
jne
out
mov
jb
je
out
dec
sub
push
fs
ret
fsubrs
sub
push
xchg
add
stos
push
xchg
xlat
or
icebp
sbb
pop
lds
cli
or
push
js
jge
cmp
je
jbe
mov
pop
adc
into
xchg
add
or
pop
fstpl
mov
mov
pop
inc
sbb
pushf
adc
xorl
fidivs
add
addb
mov
fs
pop
mov
call
mov
add
lods
or
ret
call
mov
sti
fsts
pop
and
andb
sbb
loop
adc
repnz
cmp
push
and
addb
mov
mov
mov
jle
sbb
imul
orb
rorl
ss
lods
add
cs
in
mov
add
repz
notl
addr16
add
mov
imul
adc
push
jg
shll
std
add
xchg
pop
bound
pop
or
inc
and
xlat
pop
inc
adc
jle
push
and
cmp
mov
mov
mov
lahf
jno
inc
push
pop
jo
mov
mov
jne
sub
cmp
loope
and
in
sub
ja
lock
in
push
lock
lock
inc
mov
inc
nop
addr16
and
add
jl
inc
xor
dec
sbb
add
test
adc
cmp
mov
jecxz
pusha
cwtl
and
repnz
and
or
inc
lock
push
inc
dec
jne
cltd
pop
pusha
mov
movl
daa
mov
pusha
test
jg
sbbb
sbb
adc
leave
jecxz
iret
ds
push
pop
and
lcall
push
lock
getsec
or
cmpsl
add
inc
in
xor
scas
scas
seto
in
in
xchg
xchg
xchg
in
in
xchg
xchg
xchg
cwtl
in
in
cltd
lcall
popf
sahf
lahf
and
in
addl
xchg
mov
in
lea
ret
and
addb
xchg
adc
notb
lea
mov
dec
add
test
je
mov
add
or
push
jb
mov
fisubrl
inc
jg
xor
ret
fbstp
adc
push
cs
mov
stos
fisttps
add
clc
jle
mov
sub
int3
sbb
pop
adc
jp
mov
cmp
js
jge
scas
pushf
in
push
movsb
jne
cmp
sub
mov
sti
mov
test
jp
jo
pop
inc
gs
or
es
add
rorb
cmpsb
fisttpl
mov
add
or
enter
out
decl
and
cmp
je
mov
and
sbb
mov
mov
mov
fbstp
clc
sbb
loop
mov
insb
sbb
test
out
jne
push
sbb
push
dec
ss
sub
ffreep
orb
or
stos
mov
push
mov
inc
push
or
or
dec
sbb
cmp
out
or
bndstx
jmp
mov
adc
jmp
cmpsl
mov
mov
mov
subb
icebp
aas
pop
je
das
mov
scas
or
outsl
and
decb
ja
mov
push
pop
sbb
jmp
mov
mov
cmp
movsb
push
dec
push
out
testl
sbb
in
push
sub
movsbl
and
push
sarl
pop
aaa
sahf
loopne
rol
aaa
add
rcrb
in
push
push
adc
inc
or
mov
mov
cmpb
ja
jb
add
add
inc
mov
out
mov
mov
mov
scas
xor
adc
sub
push
add
stc
mov
add
mov
adc
por
enter
sub
jmp
xchg
mov
push
jne
dec
jae
adc
jg
push
sub
stos
xchg
lahf
inc
mov
test
hlt
xchg
and
adc
incl
cmp
pop
sar
xlat
or
roll
rol
ljmp
sub
cmp
fimull
dec
shlb
fcoml
jl
nop
sti
sti
les
test
and
adc
sub
lahf
or
mov
adc
clc
jle
mov
mov
stc
xchg
sub
mov
cli
jno
lock
sbb
ret
loop
cmp
adc
push
push
in
mov
incb
orb
movsl
adc
enter
sbb
shlb
fcomip
or
jecxz
mov
cs
xchg
or
xor
jp
clc
inc
js
xlat
out
dec
hlt
add
pusha
jmp
movl
jne
and
sub
fidivrs
clc
push
aaa
mov
push
loopne
rorb
add
add
mov
xchg
cmp
jecxz
pop
cs
xor
xchg
xchg
pop
iret
lods
pop
ja
sub
dec
sbb
and
outsl
push
scas
mov
sbb
xor
or
inc
cmpsl
xchg
pop
inc
or
add
pop
inc
xlat
lcall
xchg
cmp
leave
push
aam
testl
std
fldt
fstps
fcompl
push
adc
mov
movsl
sub
jo
add
or
pushw
in
jle
mov
inc
fistpll
pop
fmuls
dec
test
lret
adc
mov
push
pop
inc
mov
dec
jge
cmc
xor
add
stos
xchg
aaa
or
ja
gs
jp
movsl
mov
aaa
js
enter
inc
pop
out
sub
fstl
adc
add
cmp
jg
sbb
and
and
loopne
fdivp
clc
or
push
das
inc
addb
and
cmp
or
add
jmp
or
push
push
inc
adcl
std
and
jmp
mov
jp
cmpsb
jg
push
enter
pushl
int3
fildl
sbb
adc
push
roll
adc
pop
add
mov
cmp
insl
mov
ja
jae
jne
xor
cld
inc
pop
adc
push
dec
or
dec
add
repnz
mov
mov
mov
pusha
jb
lret
push
out
cmp
cmp
or
notb
mov
std
inc
lcall
push
call
adc
xchg
leave
lcall
jae
cmp
out
test
mov
cli
sbb
aad
das
nop
hlt
push
outsb
jecxz
sbb
or
inc
imul
inc
outsb
lock
data16
in
fstl
outsl
push
mov
nopl
adc
movsb
insb
and
subl
sbb
push
cwtl
les
insb
jns
inc
insb
popa
xor
sub
xor
jbe
push
jp
or
pop
ss
push
add
or
jb
sti
in
cmp
mov
cmpsl
or
dec
imul
imulb
test
or
sub
test
sbb
or
dec
adc
mov
imul
sub
in
wbinvd
aaa
out
mov
call
gs
ja
jbe
cmp
jae
and
cmpsb
push
aam
outsb
in
jne
jo
testb
or
jbe
add
push
push
gs
adc
add
push
push
outsb
adc
push
or
or
loop
insl
aaa
dec
fisubs
or
ds
xchg
fs
es
jno
inc
jl
insb
sub
mov
push
sbb
or
pop
mov
mov
or
in
push
rorl
outsb
mov
xor
ds
or
xchg
daa
pop
leave
js
aam
pop
inc
dec
cmpsl
or
pop
shlb
jb
scas
rcr
iret
xchg
test
mov
xor
cmp
push
inc
pop
movsb
cmp
fiadds
enter
add
mov
cmpsl
inc
sti
sbb
push
mov
loopne
les
dec
imul
xor
xchg
subb
inc
cs
nop
nop
mov
add
mov
jnp
lock
les
insl
jo
mov
mov
sbb
jle
push
sub
and
shll
or
and
xchg
pop
es
jle
aaa
ljmp
xchg
sbb
and
adc
je
dec
pop
data16
cmp
push
add
sub
fisubs
adc
push
pusha
or
les
inc
enter
popa
push
pop
mov
sbb
inc
pop
and
xor
stos
loopne
add
pusha
arpl
push
js
pop
loope
mov
add
ljmp
push
adc
jae
test
movl
or
mov
scas
xchg
aam
out
or
mull
aad
jl
pushf
int3
int3
imul
push
in
lea
pop
mov
inc
pop
or
sbb
sbb
inc
push
pop
sub
int3
add
push
xchg
aaa
xor
nop
rorb
int
ljmp
lcall
sub
adc
mov
nop
mov
fdivl
ljmp
cmpsl
jne
shll
nop
pop
push
adc
cwtl
in
outsw
insb
sbb
fidivs
repnz
mov
test
lock
xchg
jnp
dec
pushf
push
fcomps
scas
enter
rcrl
sbb
mov
iret
repz
pushf
insl
push
mov
insb
and
push
push
sbb
add
cld
sti
stos
test
lock
lods
push
mov
inc
pusha
or
cmpsl
xlat
mov
cmp
nop
pop
jo
in
jnp
js
sbb
sub
std
mov
and
or
fdivrs
inc
xchg
fs
adc
inc
push
incl
xor
adc
jns
mov
sbb
inc
fs
jo
push
add
testb
push
rclb
sahf
cmpsb
nop
scas
cmp
dec
shl
outsb
cmp
mov
add
outsb
add
cmp
adc
and
sbb
jo
outsl
daa
insb
jae
int
cltd
paddq
push
fs
add
mov
jge
sbbb
push
mov
jecxz
dec
xchg
add
cmpsb
outsb
lock
outsl
imulb
jbe
aaa
test
mov
or
clc
xor
push
push
dec
jp
pop
jnp
cmp
add
mov
testb
xor
mov
and
mov
cmp
sbb
je
add
loope
fcomps
pop
or
outsb
lock
in
call
aam
cmp
out
faddl
mov
js
outsl
xchg
xchg
inc
addl
orb
cmp
push
outsb
test
mov
push
fadds
out
mov
cmp
cmpsb
sbb
xchg
ds
dec
xor
idiv
movl
pop
mov
pop
mov
lock
cld
fistps
aas
outsb
push
lea
inc
inc
ds
fnstsw
cmp
push
push
lock
ss
push
dec
stos
sbb
scas
nop
out
dec
and
xor
lcall
mov
mov
adc
paddb
incl
decl
popa
add
dec
and
fbld
cmp
negl
adc
aas
cmp
pop
xor
nop
xlat
push
sbb
repz
hlt
notl
inc
lock
addb
es
imulb
pop
dec
xchg
jo
push
mov
xchg
mull
or
ret
pop
jl
sbb
enter
insl
dec
into
pop
clc
xchg
andps
out
jg
or
in
push
in
adc
in
push
sbb
inc
push
in
and
push
add
enter
in
in
inc
inc
out
cmp
lcall
inc
sahf
out
sahf
mov
shl
out
std
inc
jle
jnp
sbb
or
jbe
outsl
bound
adc
or
and
test
movsl
cmpsl
sbb
aad
fisttps
cmpsl
stc
push
sub
nop
adc
js
fistpll
imul
push
push
jmp
or
or
mov
out
push
xor
nop
mov
mov
xchg
pop
xchg
push
movb
insl
xchg
add
pop
daa
xorl
mov
enter
push
faddl
lods
lahf
push
fcomps
mov
enter
add
mov
push
leave
dec
cmp
inc
mov
ja
inc
or
cmp
inc
ds
mov
int3
pop
mov
cs
mov
cmpsl
jbe
xor
imul
inc
inc
nop
push
mov
mov
test
inc
pop
call
mov
stos
mov
dec
mov
mov
push
fsubs
enter
and
adc
aam
aam
sub
repz
push
mov
mov
cmp
add
xchg
pop
inc
int
dec
orb
stc
inc
push
in
loope
add
icebp
ret
ljmp
inc
bound
mov
lret
xchg
sub
xor
rolb
mov
mov
mov
push
push
neg
sarl
jbe
test
mov
cmpsb
add
and
ja
inc
mov
jb
add
stc
clc
push
push
push
push
push
push
out
out
mov
cmp
inc
push
dec
pusha
mov
fs
jo
fisubrs
cmp
push
pop
into
push
test
cmpsb
loop
or
adc
mov
xchg
dec
pop
mov
incb
fldenv
leave
pop
add
cmp
pop
testl
test
jnp
cli
add
lahf
add
negl
int
or
cwtl
fdivrs
int3
sub
add
roll
push
cmp
push
inc
push
ljmp
cli
imul
pop
and
fidivs
mov
push
jb
f2xm1
flds
mov
mov
call
cmp
sarl
push
or
add
or
aaa
pop
sub
imul
sub
bound
pop
stos
dec
dec
fs
lock
jns
inc
or
add
aas
test
push
data16
push
add
push
in
add
pop
push
or
dec
sahf
push
call
inc
cmpl
jne
adc
pop
sub
pushl
push
leave
add
or
mov
addr16
jb
jne
outsb
dec
scas
testb
pop
ds
in
scas
and
hlt
nop
or
cmp
dec
xor
mov
jo
in
push
mov
out
data16
xlat
bound
pop
dec
xchg
rorb
je
loopne
inc
ret
dec
dec
insl
and
jmp
inc
rorb
add
fsubp
sbb
dec
mov
cmp
adc
add
add
je
dec
shlb
sti
sub
sub
fldt
test
sub
xor
sbb
outsb
xlat
mov
pop
add
and
gs
test
stc
mov
stos
add
push
cmpsl
cmc
sub
outsb
add
es
stos
pop
test
popa
pandn
xlat
and
adc
xchg
addb
xchg
orl
and
adc
sub
jnp
and
dec
cmpb
xchg
shlb
xbegin
jo
adc
fs
sar
or
jne
pop
or
mov
push
push
push
or
sbb
in
shll
out
cmp
orb
jle
or
adc
adc
int
dec
pop
xchg
push
pop
dec
jne
pop
and
sbb
hlt
pop
leave
cmpl
pushf
shrb
push
pop
push
call
push
or
sbb
adc
pop
add
in
sbb
xorl
clts
mov
aas
pusha
sbb
sbb
adc
xlat
adcb
outsl
jae
pop
arpl
fcoms
in
dec
in
push
sub
mov
mov
cmp
mov
pop
outsl
loop
inc
cmpl
cli
or
icebp
pusha
sbb
cmp
cmp
push
fistl
imul
jo
xor
add
dec
cmp
mov
fnsave
mov
dec
jne
rolb
dec
jne
shrb
aas
inc
and
xor
adc
add
and
or
pop
mov
dec
mov
sub
inc
adc
jecxz
leave
xchg
or
js
mov
jo
mov
pusha
or
pop
pop
xchg
cmpb
fdivr
loop
pop
cmc
sub
movb
fwait
push
int3
adc
dec
mov
pop
pop
mov
xchg
push
sbb
ja
pop
pop
rorb
and
roll
aam
mov
aas
call
pusha
addr16
push
push
jae
push
mov
xor
pop
push
inc
fidivrs
xor
jmp
js
lsl
test
std
xorl
outsb
add
xchg
scas
into
cmpsl
and
sub
rcll
add
jmp
aaa
add
dec
in
in
mov
outsl
mov
dec
insl
jb
lea
inc
gs
push
mov
adc
adc
orl
mov
jne
push
sbbl
call
xor
or
xchg
js
sub
jl
push
call
sbb
push
in
int
pop
lock
dec
or
mov
fisubs
inc
inc
fldt
insl
jne
push
stc
cmp
in
mov
lock
push
mov
and
loop
dec
call
out
adc
idivl
adc
mov
push
cld
adc
inc
inc
cmp
or
test
adc
xor
pop
aad
into
shl
jge
and
int
shlb
mov
rorb
jg
mov
lock
stos
loopne
leave
cmp
js
add
xchg
call
lahf
ljmp
sbb
or
pop
pop
sub
js
push
mov
ss
cmp
or
pop
or
shlb
mov
adc
add
xor
insl
enter
fmull
xor
cmpb
xchg
sub
ss
xor
push
dec
movsb
xor
fmull
jecxz
jae
lret
pop
pusha
test
lods
or
lahf
mov
cmpsl
iret
test
adc
sub
sarl
cmpsb
arpl
push
sub
orb
xor
fisubl
push
push
clc
mov
inc
enter
ret
add
cli
cwtl
xchg
pop
dec
mov
pop
mov
jne
push
pop
lret
fdivl
mov
xchg
push
popa
cmp
adc
xlat
enter
sbb
aas
test
nop
and
popf
in
pusha
mov
ret
inc
xchg
or
jmp
jnp
sbb
mov
in
push
imul
fnstcw
pusha
add
xchg
loopne
ficompl
and
or
cmpsl
fbld
xchg
call
nop
lds
and
adc
pop
pop
adc
sbbb
into
mov
push
fs
enter
mov
jp
cmp
and
roll
xchg
xadd
rolb
decl
jbe
or
mov
add
mov
or
ss
sbb
mov
pop
or
les
inc
sbb
mov
fcoms
push
push
add
leave
ljmp
call
js
jne
fs
mov
cmp
xor
icebp
js
mov
sub
sub
sbb
or
lea
ja
sbb
mov
jg
add
jg
aam
dec
cld
mov
add
loope
and
inc
add
and
push
cmp
jne
sbb
orb
sub
xor
out
jmp
or
sub
or
nop
test
xchg
jp
les
sbb
fcoml
sbbb
daa
mov
jecxz,pn
pop
cmp
mov
mov
dec
push
jbe
jb
push
mov
data16
lahf
pop
mov
pop
jge
call
push
push
adc
cmpsl
sub
jo
iret
adc
adc
xor
gs
popa
xor
lret
test
xchg
push
bswap
or
pop
lock
dec
sub
xor
xor
pusha
je
shlb
cmp
jnp
mov
test
mov
mov
xchg
jo
or
push
inc
sub
nop
rorl
dec
cmpsl
push
add
movsb
add
sbb
mov
and
sbbb
or
mov
inc
setns
insl
xchg
or
xchg
sbb
add
addb
xor
dec
cmpb
movsl
push
or
dec
push
pop
js
cmpl
and
fcoml
arpl
les
mov
xchg
lahf
sbb
pop
xor
cmp
dec
push
inc
out
je
popa
xchg
dec
mov
sub
push
inc
cmp
pop
dec
pop
push
dec
xchg
nop
sbb
xor
cmp
and
push
repnz
pop
mov
lods
mov
push
pop
fcoml
fwait
pop
clc
xchg
or
adc
adc
cmp
cmp
mov
imulb
cmpl
jnp
mov
cltd
adc
dec
dec
mov
push
dec
adc
mov
ror
loop
inc
pop
aas
or
cmpb
shrb
cmpsb
jecxz
jg
add
push
sbb
lahf
pop
inc
movsb
inc
mov
cmp
imul
lods
adc
dec
std
enter
incl
or
leave
push
fwait
in
dec
jge
insb
lahf
and
in
ljmp
add
mov
cwtl
or
sbb
rolb
xchg
test
mov
or
sbb
add
lea
or
cmovns
and
xchg
jmp
xchg
xlat
inc
rcr
lods
je
xchg
cmp
mov
mov
pop
pop
mov
aas
add
pusha
pop
les
adc
test
dec
addr16
xchg
dec
sarb
inc
inc
xor
pop
aas
push
mov
aam
add
aaa
adcb
push
mov
aaa
int3
lret
test
add
stc
add
adc
shll
dec
jmp
lea
add
mov
int
cmp
or
inc
cmp
jge
fs
mov
repnz
jp
lret
dec
scas
loop
adc
cmpsl
cwtl
sub
sbb
sbb
add
inc
or
push
hlt
jecxz
clc
outsl
call
je
or
jl
call
pop
scas
out
and
decl
sub
lahf
lahf
movsl
sub
cli
sub
mov
pop
and
and
xor
adc
mov
pop
aaa
or
mov
js
ljmp
mov
pop
mov
dec
jbe
push
mov
add
sub
add
cs
push
mov
jns
jns
mov
aas
sub
sti
jle
pop
dec
sub
pop
addb
or
sub
pop
dec
dec
mov
sub
jg
dec
cmpsb
dec
and
inc
xchg
cmp
sbb
sysret
push
push
sub
daa
mov
jbe
and
adc
aaa
mov
push
push
mov
lock
mov
lea
test
add
in
daa
inc
fucompp
dec
popa
enter
cmpb
mov
popf
inc
jne
in
test
dec
add
or
repnz
pop
push
adc
or
push
jne,pn
inc
pop
and
rcll
sbbl
ret
mov
fisttps
add
mov
out
lock
in
out
enter
orl
xchg
movsl
add
test
jge
push
lock
call
push
xor
rcrb
clc
add
add
sbb
call
out
je
mov
dec
and
cwtl
or
jb
mov
pop
js
mov
loop
fidivs
xor
xorb
sbb
mov
aas
dec
xor
push
testb
add
leave
je
stos
adc
btr
adc
cmp
cmp
jl
sbb
inc
cmp
cmpsl
inc
rorl
fmuls
test
add
dec
mov
test
pop
jo
mov
mov
xor
lock
das
mov
pop
ja
and
bt
jb
add
shl
mov
cmp
cld
cmp
jl
adc
push
inc
cmp
jne
inc
decl
dec
sbb
and
mov
nop
das
push
aaa
xor
sub
xchg
notb
ret
dec
shlb
push
pushf
push
push
or
and
mov
and
insb
pop
jno
inc
or
popa
outsb
fisttpll
add
pop
imul
sbb
lock
pushf
push
and
arpl
sbbl
insb
add
mov
mov
int3
adc
cmp
inc
adc
ret
mov
xor
inc
push
mov
push
jp
cmpsb
pusha
sbb
in
pushl
js
push
sub
out
and
nop
xlat
pusha
leave
inc
jo
inc
lods
add
push
adc
jo
sarl
mov
mov
pop
pop
fsubs
cmc
push
pop
or
push
add
aas
push
je
out
xadd
adc
aam
int3
aad
and
jne
sub
neg
pusha
das
inc
testb
je
addr16
push
es
and
jmp
pop
daa
adc
jnp
xor
push
in
xchg
jp
bound
xchg
mov
or
xchg
xchg
xor
sub
or
mov
inc
adc
mov
and
push
shll
mov
cli
inc
adc
add
adc
mov
add
pop
mov
jg
xor
cmpl
out
pop
push
add
jne
pop
sbb
imul
inc
and
or
mov
xlat
adc
jns
adc
lahf
xor
ss
ja
add
enter
push
cltd
jnp
cmp
cmp
and
mov
push
je
sbb
imul
addb
dec
xor
in
ja
lea
les
lods
jg
and
pop
and
dec
and
sbb
or
cmp
fisttpl
mov
mov
aam
add
pop
mov
add
pop
dec
cmp
dec
into
jne
jl
jo
inc
out
pop
das
dec
sbb
js
dec
add
or
or
jnp
push
out
push
inc
xchg
ret
xchg
adc
pop
insl
pop
xor
jno
cmp
cmp
repnz
sbb
cmpsl
movsb
daa
add
pop
or
lea
xchg
xchg
push
dec
lods
gs
xchg
sub
push
imul
xchg
loopne
nopl
ljmp
sub
subl
push
fsubr
pop
mov
inc
push
cmpl
mov
rorb
mov
outsl
clc
add
push
jle
sub
jmp
cmc
js
das
inc
cmp
or
jg
sbb
xchg
and
xchg
testl
lea
push
idivl
pop
mov
xor
fcomps
test
xchg
aad
add
popf
push
sbb
aaa
xorl
xchg
add
cmc
mov
in
clc
inc
sbb
pop
mov
pop
pop
adc
movb
test
cwtl
mov
lods
pop
xlat
iret
shlb
push
adc
inc
jo
jecxz
sub
cltd
les
mov
test
int3
xor
xchg
cwtl
cmpsl
xor
data16
rclb
cmpsb
data16
ficomps
out
fwait
out
fs
and
insb
ds
mov
push
pop
je
aaa
inc
decb
add
cwtl
repnz
jne
movb
fs
mov
mov
adc
push
sbb
inc
dec
jne
inc
push
mov
sbb
test
and
xchg
adc
mov
leave
sbb
aad
xlat
clc
xor
mov
adc
jnp
idivb
decl
sub
sbb
call
push
ss
push
adc
and
jmp
out
iret
pop
push
mov
in
xchg
push
xor
add
or
rcr
xchg
xchg
addr16
mov
aaa
pop
cs
inc
std
sub
jb
xor
test
pop
ret
gs
and
adc
cmc
sbb
daa
pop
int3
cmpsl
arpl
fnstcw
sbb
xchg
imul
ret
pop
mov
aam
popa
push
sbb
pusha
pop
lock
dec
or
cmp
shlb
stos
and
popf
nop
outsl
pop
hlt
sub
clc
test
lods
sub
mov
sbb
sbb
enter
ja
fbstp
cmp
dec
jne
scas
sbb
xchg
dec
adcl
pop
mov
mov
fisttpll
imul
imul
sbbb
lret
jae
sbb
adc
or
repnz
sub
sub
cs
adc
loop
add
adc
shll
and
roll
and
adc
popl
jo
mov
inc
imull
mov
fnsave
pop
cmc
dec
clc
rol
loop
sub
and
mov
loopne
stos
idiv
or
movb
scas
adc
mov
add
sbb
jnp
sbb
inc
js
push
mov
adc
fwait
cmp
xor
dec
sbb
push
pop
jno
sbb
fdivl
inc
shll
cmp
jge
je
and
pop
jge
push
sahf
in
fcoms
rclb
jne
cmp
clc
adc
fs
push
pop
je
aad
mov
cwtl
nop
daa
popa
insb
inc
test
or
sub
sbb
mov
jno
jp
dec
iret
or
lock
aaa
dec
mov
dec
rcr
jb
mov
sub
cld
rorl
xchg
xor
stos
pop
fcomps
dec
xchg
and
xor
fsubs
sbb
fnsave
push
hlt
sbb
add
sub
cmp
inc
sbb
pop
adc
pop
rcll
xor
mov
xlat
jo
mov
mov
cmp
adc
dec
test
xor
push
ret
adc
data16
hlt
adc
and
xchg
push
cwtl
xchg
lds
clc
mov
popl
inc
in
inc
mov
in
lret
int3
clc
and
test
mov
je
sbb
test
mov
outsb
and
addl
pop
pop
cmpl
add
jbe
enter
shll
push
push
aam
fidivrl
test
mov
inc
adc
test
les
gs
stos
inc
sub
test
lods
sarb
jp
rolb
dec
sub
jle
lock
les
cmp
xchg
fcompl
mov
cld
and
je
cld
add
jno
adc
loopne
roll
pop
das
leave
add
clc
inc
clc
stc
bound
pop
jne
scas
enter
jecxz
fcomip
xor
adc
mov
loope
addr16
pop
cmc
jl
inc
mov
lods
jne
cmp
xor
xchg
push
add
adc
sub
push
movsl
mov
lock
cwtl
mov
iret
popa
dec
daa
push
leave
push
ret
xor
je
and
and
xor
popf
fcompl
and
or
jbe
dec
popa
and
rolb
push
adc
stc
loopne
mov
aas
ja
psrad
addr16
hlt
push
or
ret
popa
jo
ror
in
push
arpl
and
ret
or
jmp
clc
test
outsb
mov
jle
movsb
les
inc
ja
imul
scas
jecxz
rcrb
movsl
mov
in
outsb
adc
mov
inc
dec
adc
out
or
cltd
lods
sbb
add
sbb
cmp
pusha
jp
and
inc
popa
xchg
jmp
push
cmp
outsl
xor
mov
jl
push
movsl
popa
and
cld
jae
and
sbb
insb
xchg
add
sub
add
push
jb
adc
movsl
js
pop
jle
imul
pop
aad
shrb
into
xor
ret
pop
pushf
cmp
add
sub
js
push
je
lods
js
and
pop
mov
adc
in
mov
jns
test
push
bound
dec
push
adc
add
aas
jns
jns
cmp
sub
pop
daa
jmp
fstl
adc
adc
mov
sbb
sbb
mov
jp
push
ret
inc
adc
movsb
pop
jno
int3
jle
cmp
push
jb
insl
push
jp
jl
lods
in
cmpsl
inc
jp
and
push
pop
daa
push
xchg
cmp
jp
lcall
add
jp
or
movsl
mov
enter
inc
or
push
and
jp
call
sub
outsl
in
mov
popf
arpl
xor
insl
push
inc
sub
pushf
sub
adc
cmp
jb
mov
fldcw
jbe
sub
pop
xlat
cltd
push
lret
pop
repnz
jnp
and
or
adcb
loopne
leave
test
jge
outsb
mov
xchg
jge
sub
movsb
sbb
xchg
out
xor
outsb
dec
push
pop
dec
add
mov
repz
cwtl
clc
ret
aam
or
cmp
jne
aad
sub
lret
sub
jns
call
cmp
or
add
test
lock
imulb
sbb
pop
push
mov
xchg
idivb
jo
adc
call
xchg
test
repz
loopne
push
ret
call
inc
mov
dec
sub
cs
divb
call
je
add
test
push
sub
adc
cmp
stc
inc
sbb
xchg
and
inc
das
mov
lret
jl
pop
dec
mov
rorl
std
jnp
cmp
fst
shrb
xor
and
lock
cmpsb
data16
sub
enter
mov
add
shl
adc
cli
adc
nop
jno
test
sub
jb
jmp
fcomp
push
mov
pop
sub
aas
imul
jle
jmp
mov
jge
jnp
xor
ja
xchg
and
stos
jo
pop
cmp
jne
bswap
andl
mov
sarl
inc
shrb
sbb
or
in
adc
test
add
and
jg
sbb
loop
dec
testb
scas
and
in
inc
add
outsb
xor
mov
rorb
popf
scas
add
mov
xchg
add
out
test
or
adc
jmp
stc
das
push
push
das
cmp
jne
testb
into
dec
or
or
add
addl
push
orb
jb
data16
or
mov
lahf
aaa
push
mov
out
adc
push
fisttps
add
mov
es
ss
enter
dec
jae
out
add
or
scas
clc
sub
wrmsr
mov
jl
inc
jmp
mov
adc
mov
add
inc
scas
push
sbb
sub
icebp
inc
mov
test
dec
cmp
xchg
push
sbb
js
cmp
nop
pusha
loop
das
dec
ret
rcll
add
pop
add
jmp
in
test
inc
leave
jnp
xor
add
jbe
xor
pop
aaa
xchg
mov
pop
fimull
or
repnz
lods
mov
push
enter
aaa
xor
xchg
pop
out
sbb
pop
shrb
xor
test
dec
gs
inc
ret
push
adcb
and
inc
sbb
pop
andb
lea
outsb
shr
inc
in
les
xchg
sbb
dec
adc
or
or
xlat
flds
fldl
and
sub
pop
idivb
lock
sbb
add
pop
adc
inc
lods
dec
es
cli
dec
jnp
ret
test
je
jg
mov
xchg
jnp
jmp
mov
or
push
add
inc
adc
call
add
sbb
imul
cmpb
stos
repz
adc
testb
xor
into
ficomps
repnz
cmp
push
mov
outsb
sbb
push
pop
mov
ret
in
in
add
dec
push
and
repnz
mov
mov
mov
call
push
mov
rcl
push
lret
push
or
xlat
pop
cli
and
int3
pop
call
mov
xchg
roll
xchg
inc
mov
push
lods
and
sbb
es
or
jg
add
and
or
repnz
nop
cmp
cmp
xchg
jno
in
jae
or
push
incl
scas
stc
nop
cltd
inc
xchg
movsl
lcall
nop
pop
add
les
cmpl
shlb
adc
int3
add
rorl
je
loopne
pop
nop
or
dec
in
ljmp
push
and
scas
sbbb
jne
adc
lods
mov
inc
dec
inc
xchg
push
shrb
mov
clc
jle
dec
ficompl
adc
pusha
hlt
jl
inc
fwait
lea
and
pop
and
and
adc
imul
cwtl
adc
push
test
and
in
and
adcb
shrl
insb
orl
cltd
adc
inc
ljmp
fsubr
cmp
xchg
pop
popf
sub
jo
or
push
cmp
nop
xchg
adc
cli
mov
push
enter
add
aaa
cwtl
je
adc
mov
push
jo
push
push
loop
inc
rclb
dec
shlb
iret
xchg
es
aas
or
insl
stc
push
xchg
cmp
mov
add
incl
ret
add
mov
aaa
mov
out
pop
jecxz
sub
cmpl
cmpl
xorb
adc
in
mov
add
fadd
test
xorb
sub
js
jecxz
inc
push
fwait
insl
inc
or
mov
mov
or
das
lahf
or
lods
dec
inc
out
lea
daa
pop
in
inc
stos
mov
ss
adc
inc
mov
add
or
cmp
sahf
push
lods
pop
push
add
sti
xor
jne
cmp
xor
push
add
out
aam
ret
movsb
cmp
adc
push
ror
daa
dec
daa
lret
adc
movsl
add
push
mov
dec
sbb
movsb
and
cmpb
pop
leave
sub
das
xchg
and
in
out
outsl
adc
test
push
xchg
or
pop
pop
pop
or
int
ja
sub
pop
adc
cld
push
std
jmp
or
push
add
clc
pop
add
cmpsb
xchg
add
adc
add
or
or
call
ret
cmp
add
jbe
add
mov
das
sub
stc
jns
adc
mov
mov
push
mov
mov
mov
mov
push
test
sub
push
mov
std
jnp
pop
dec
add
add
loope
or
and
jp
and
in
mov
mov
sbb
rcr
xor
mov
sbb
jmp
adc
ljmp
enter
pop
test
es
add
call
jecxz
fwait
xchg
out
pop
lea
adc
in
jg
adcl
jmp
fisttpl
ret
dec
pop
push
sarl
push
push
faddl
in
sbb
mov
add
cli
jne
mov
divb
pop
adc
imul
and
pop
movsb
inc
mov
jmp
mov
jge
cmp
mov
mov
test
insl
bound
or
in
inc
and
stc
sbb
jae
nop
xchg
or
adc
adc
test
mov
enter
and
mov
push
sub
xchg
sbb
dec
inc
xor
adc
cmpsl
jle
pop
jno
add
or
adc
or
and
cmpsl
shll
sbb
subb
rorl
or
pop
cmp
in
icebp
hlt
and
cmc
dec
add
into
test
xorw
je
dec
or
adc
movsb
sti
push
add
sbb
stos
jno
ss
jle
ss
push
add
scas
fwait
imull
add
in
jno
les
push
sbbl
and
jg
cmp
testl
inc
adc
inc
dec
sub
sub
pop
mov
pushl
add
mov
movsl
in
nop
cmpsl
fwait
jo
icebp
jns
sbb
dec
or
push
or
pusha
in
adc
mov
scas
movsl
sub
mov
jge
data16
dec
sbb
cld
lods
orb
aas
fidivrl
mov
dec
push
push
stos
adc
andb
push
shl
dec
adc
jmp
or
adc
lret
nop
psraw
dec
adc
mov
lcall
sahf
push
cmp
push
jl
jne
js
xchg
js
pop
repz
jno
test
lods
ljmp
xor
int
add
sub
jnp
or
mov
xor
lods
xlat
xchg
and
inc
mov
lds
and
movsb
xor
or
movsl
add
stos
and
jg
dec
xchg
addb
xchg
stos
xlat
jge
push
mov
or
jbe
inc
pop
inc
js
lea
inc
mov
mov
fisttpl
sbb
adc
cmpsl
sub
jno
cli
push
push
and
jbe
pop
sarl
and
bound
dec
add
daa
lret
arpl
adc
pusha
mov
jne
pop
add
pop
in
out
enter
add
pop
xchg
xchg
aam
rolb
mov
dec
xchg
pop
add
mov
les
xchg
in
jmp
inc
ret
sub
test
pop
mov
inc
rol
mov
inc
pop
ret
xchg
fstpl
jmp
aaa
scas
daa
or
repz
lea
inc
inc
pop
jle
test
cld
adc
cmpb
nop
lret
adc
jl
cmc
add
and
and
pop
add
xchg
jno
fbld
dec
pop
and
push
vpmuludq
mov
xchg
dec
jnp
cmp
inc
lds
inc
sbb
xor
pop
pop
rclb
push
add
mov
jbe
sarb
sbbb
rclb
sbb
add
pop
cld
xchg
das
loopne
pop
pop
sbb
push
dec
sti
sbb
js
jo
push
dec
add
cmp
add
test
or
out
mov
cmpsb
ret
out
or
adc
mov
inc
inc
fimull
xchg
add
push
test
xor
or
or
fimuls
lret
ljmp
adc
mov
sub
mov
aam
add
and
push
int
sbb
jmp
adc
nop
mov
mov
pop
ret
add
add
jo
rcl
xor
andl
arpl
nop
cs
sbb
sti
dec
outsl
add
push
aaa
insb
inc
jge
in
pop
mov
add
push
push
xchg
mov
sub
xchg
adc
mov
inc
popa
push
cmp
sbbb
jmp
lock
pusha
cmp
add
sub
jae
pop
lock
adc
hlt
dec
cmp
imul
jl
mov
push
xchg
or
add
sbb
pusha
out
jae
or
mov
rcrb
in
inc
xchg
cld
jae
xor
movsb
mov
mov
inc
rcr
inc
mov
clc
jl
inc
sub
outsl
mov
or
xchg
leave
enter
mov
xorl
cltd
jmp
cmp
sbb
xor
jg
icebp
pop
dec
fmuls
fmuls
lret
pop
dec
cmp
js
xchg
xchg
xor
inc
sbb
popa
ljmp
in
lods
ret
mov
fidivl
sbb
sub
testb
dec
sub
or
xchg
mov
in
jmp
push
imul
shrl
jnp
or
ja
pop
and
jo
setns
test
test
xchg
sub
cs
cs
inc
push
pop
les
jg
cs
ret
mov
mov
push
movsl
sbb
in
dec
cmp
jbe
out
sbb
stos
cmp
cmp
xor
imul
or
lock
or
fisubl
test
push
hlt
daa
and
and
xchg
dec
lcall
xor
orb
inc
lret
xchg
andb
inc
or
xlat
rolb
lret
xchg
dec
test
or
mov
mov
push
aam
sub
sbb
or
mov
add
je
push
inc
mov
add
jg
dec
mov
mov
mov
push
adc
push
clc
xor
xchg
pop
add
xchg
dec
repnz
jo
lods
inc
cmp
decb
sbb
test
out
lods
push
ret
ja
mov
push
mov
inc
mov
sbb
add
out
shlb
adc
push
adc
cmp
dec
out
xor
fimuls
jmp
nop
add
mov
mov
sub
adc
clc
push
iret
dec
lret
push
movb
add
inc
inc
roll
inc
jmp
pushf
in
mov
fwait
nop
faddl
cltd
push
loopne
hlt
aaa
scas
stos
addl
cmp
cmp
pushf
add
nop
int
out
and
pusha
jne
decl
xorl
shrb
push
inc
lret
sbb
or
inc
jmp
jge
lods
push
pop
push
mov
jnp
inc
stos
cs
imul
adc
test
fdivrl
add
sbb
xchg
inc
notl
aaa
in
subl
mov
jmp
sbb
jg
cmp
jge
sahf
push
jbe
loope
cmp
scas
jp
adcb
jmp
inc
imulb
push
push
pop
jecxz
adc
and
add
cmp
add
out
cmp
sbbb
dec
add
stos
data16
clc
sbb
pop
sahf
sub
pusha
cmp
jne
push
or
jne
pop
xchg
shll
sub
nop
sahf
out
lock
imul
subl
xor
pop
xchg
jmp
adcl
jno
xchg
xor
subl
push
xchg
pop
cmpsl
sub
pop
push
outsl
jl
jnp
mov
jle
sbb
packuswb
hlt
fbstp
pop
aad
jl
js
or
add
pop
mov
mov
inc
mov
adc
xor
dec
aam
in
dec
mov
mov
xchg
daa
scas
outsl
mov
into
cli
pusha
test
nop
mov
adc
or
aam
adc
into
xor
xlat
es
out
pop
and
inc
or
pop
or
hlt
inc
jp
loopne
ret
call
xchg
fsubrs
inc
sbb
xor
mov
cli
xlat
aas
mov
push
lods
pop
and
xchg
loop
repz
idivl
dec
jne
jp
cld
pop
shlb
sub
sbb
cmp
mov
addr16
inc
xchg
mov
outsb
jmp
ja
jg
rcr
into
sub
sub
xlat
add
sub
in
fisubrl
or
out
pop
sub
jl
pop
dec
lret
mov
jmp
mov
dec
adc
mov
add
sti
fcoms
out
fsts
lret
int3
pushf
push
adc
add
add
cld
add
pop
or
jne
pop
ja
sub
fmuls
adc
les
dec
adcb
jne
or
cmp
push
popa
pushf
pop
jns
inc
int3
adc
shll
mov
es
popa
mov
mov
mov
stos
pusha
fbstp
mov
fs
cmp
add
mov
ss
cmc
fmul
mov
jne
push
jmp
jge
pop
or
add
sub
jae
pushf
les
out
push
inc
mov
bound
loopne
je
cmp
shll
mov
ret
leave
fbld
sub
push
xchg
xor
cmp
xor
out
gs
mov
shrb
mov
lea
lods
mov
xor
adcl
daa
test
xchg
pop
jg
xor
inc
scas
cmp
inc
mov
orl
or
fadds
imul
cmc
pop
xor
cld
out
cmpsl
jl
add
movsl
decl
or
inc
add
jge
enter
mov
inc
sbb
or
fs
outsl
mov
shlb
not
and
aaa
int3
ret
inc
mov
divl
add
fs
cmpsb
shlb
pop
movsl
mov
gs
sahf
mov
cmp
setbe
test
xchg
jmp
push
popf
hlt
pop
js
iret
scas
dec
jae
sub
roll
xchg
xchg
pop
outsl
mov
jb
and
inc
pop
js
and
sub
jb
xchg
sub
in
xchg
jo
imul
je
jo
in
xchg
add
hlt
mov
iret
push
pop
mov
xor
fsubrl
sbb
adc
pop
ret
xchg
pop
dec
sub
lret
push
leave
mov
sub
add
notl
in
fidivrl
cmp
xor
addr16
xchg
add
addr16
jmp
cmpsb
adc
clc
jo
aam
fstl
insb
insb
xor
outsb
int3
adc
in
or
inc
adc
ss
in
push
enter
iret
cmpsb
enter
pop
sub
adc
daa
pop
sub
repnz
push
sub
sub
prefetcht1
insb
dec
sub
inc
sub
nop
xchg
xor
psubw
daa
inc
in
lock
inc
cmpsl
mov
cmp
les
sub
push
dec
in
sub
fcoml
xchg
or
imul
test
icebp
mov
push
mulb
or
std
pop
mov
push
pop
jmp
xchg
mov
stos
sbb
cmp
lock
jno
inc
xchg
test
xchg
adc
fwait
or
sbb
xor
xchg
xlat
in
das
mov
xchg
mov
and
sub
cwtl
out
js
sbb
sub
in
push
sbb
add
cmpsl
sbb
in
call
call
inc
jecxz
adc
out
sahf
push
fbstp
or
sub
xor
orb
inc
dec
xor
inc
lods
aaa
out
xor
and
or
movsb
jmp
adc
adc
sub
int3
xor
jo
jae
stos
and
in
sub
fs
fst
inc
jge
mov
mov
lcall
inc
jp
inc
int
xchg
xchg
xorb
jle
fidivrs
movsb
sub
pop
or
out
ja
imul
or
inc
cmova
jmp
ljmp
xchg
mov
mov
es
sub
stos
or
imul
jge
popa
sub
adc
out
or
enter
jno
sarl
adc
sub
push
xchg
mov
movsl
sub
lahf
adc
addb
push
movsb
pop
lcall
sub
ret
outsb
lock
mov
sbb
or
nop
cmp
jl
ja
lahf
iret
or
flds
adc
andb
test
and
dec
mov
inc
andb
cmp
or
ret
sub
add
mov
fdivr
add
and
push
dec
in
cmp
pop
addr16
add
adc
sti
or
fcmovnbe
sub
jnp
fnsave
sub
sbb
jae
movsb
and
shl
aad
loope
out
mov
ret
pop
sub
and
jle
sub
jo
hlt
jmp
and
ss
enter
inc
xchg
mov
xchg
cld
xor
mov
push
popa
shl
and
adc
xchg
cmp
mov
test
mov
and
mov
lock
mov
clc
test
fisttpll
lret
mov
in
fbstp
adc
mov
mov
jne
ret
ljmp
testb
mov
pop
jecxz
push
dec
aad
fcompl
scas
mov
inc
fists
adcl
or
dec
inc
jne
aad
fstpl
frstor
outsl
clc
push
ds
clc
lret
sarb
in
pop
daa
xchg
or
dec
xchg
add
fsubrl
popl
stos
mov
je
xchg
hlt
add
cld
mov
push
pop
xlat
into
cld
shl
les
mov
fidivs
popa
mov
or
shlb
mov
test
inc
and
hlt
pop
movb
or
sbb
jne,pn
cmp
inc
call
xor
sub
xchg
ss
jl
adc
mov
mov
fistpl
and
mov
add
adc
cltd
inc
bound
jmp
sub
pop
lahf
nop
enter
adc
je
mov
and
cwtl
cmpsb
dec
iret
pop
add
jg
push
aad
les
adc
testl
imul
jno
or
sbb
cli
and
enter
mov
sub
add
cmp
mov
jp
aaa
sbb
xchg
mov
or
pusha
xchg
int
add
cmp
mov
push
dec
or
push
mov
jl
sbb
call
mov
lahf
inc
adc
pop
test
fadds
mov
add
lock
add
faddl
and
cmp
aaa
imul
or
repnz
rclb
mov
pop
pop
lret
shlb
iret
inc
pop
inc
lods
push
je
mov
inc
add
cli
adc
mov
lods
rolb
paddw
jo
fisubrl
aad
inc
loopne
xor
in
xchg
lock
clc
jge
or
clc
popf
mov
add
inc
cmp
mov
and
jno
call
jo
and
xchg
push
mov
outsl
ljmp
add
lods
andb
add
or
xor
push
jmp
ret
cmp
ja
pop
jae
outsl
mov
mov
push
sub
rcll
lret
cmp
iret
in
jns
adc
xchg
push
xchg
mov
roll
mov
add
xor
ja
call
cmp
xor
out
xor
xor
xor
mov
adc
jno
jge
mov
gs
mov
addr16
jle
sbb
imul
lds
test
or
cs
and
mov
sub
clc
into
push
mov
inc
push
fimull
imul
add
fwait
mov
cmp
push
hlt
pop
mov
nop
aam
dec
inc
or
ret
sbb
or
aaa
les
or
add
adc
xchg
aas
in
imul
add
repz
fcompl
mov
and
adc
cmovns
push
cmc
jmp
inc
jge,pt
add
aas
mov
push
mov
test
andb
repz
xchg
lock
shl
and
dec
sbb
add
rcl
add
fmuls
jp
imul
in
lock
jns
and
in
and
popa
push
dec
sbb
rclb
sbb
sbb
sub
add
cwtl
call
lods
repz
pusha
jmp
cmc
sbb
repnz
aam
fdivl
aaa
or
in
daa
jmp
sub
lar
fbld
rcl
int3
mov
hlt
aam
jnp
cmp
push
push
jle
dec
popf
sbb
cmp
adcb
mov
mov
sub
or
adc
xor
lcall
push
mov
sub
lea
enter
add
xchg
pop
xor
ss
test
jbe
lret
inc
ret
sbb
pop
lcall
mov
sbb
orl
mov
lods
pop
xor
fistps
or
jae
nop
push
xlat
sub
xchg
push
add
xchg
xchg
jge
cld
xorb
jmp
mov
daa
pop
adc
dec
out
movsb
mov
js
pop
mov
adc
cmpb
addb
xchg
or
mov
pop
cmp
aaa
pop
or
pop
push
push
fldl
jbe
sub
pop
inc
movsl
mov
in
inc
add
and
clc
pop
ja
bts
jmp
push
ret
or
into
les
push
lret
arpl
test
cmpb
or
or
pop
ret
addr16
lock
and
aaa
in
pushf
xor
mov
cmc
adc
jne
cmp
ss
jmp
adc
xor
xchg
and
mov
cld
inc
push
je
push
adc
mov
cmp
in
stos
sar
stc
xchg
les
les
jmp
mov
sbb
movsl
jg
push
sahf
and
cmp
xchg
push
pop
orl
dec
ja
clc
movb
sub
pop
push
clc
in
fbstp
fmull
push
cmpl
push
mov
cmpsb
pop
inc
in
mov
inc
add
add
cmp
imul
pop
adc
iret
push
aas
mov
cwtl
mov
leave
and
lahf
mov
lcall
add
incl
push
ja
adc
pop
inc
mov
and
loope
insl
and
scas
rcl
mov
scas
fsubs
sbb
xor
xchg
mov
repnz
and
pop
mov
pop
adc
mov
inc
adc
scas
std
gs
mov
push
clc
push
in
jns
or
cs
out
popf
cmp
push
push
popa
imul
sahf
out
sahf
xchg
mov
jp
or
scas
jecxz
jmp
pop
pop
fs
mov
mov
dec
mov
jae
dec
js
pop
mov
inc
movsb
enter
jl
sti
rcrl
clc
gs
jmp
mov
and
inc
cmp
insb
sub
sbb
or
push
cmp
pop
dec
push
inc
mov
or
inc
inc
and
or
hlt
mov
push
push
push
mov
dec
cmp
lock
fucomi
xor
lods
jmp
cmp
mov
inc
cmpsl
out
mov
add
xchg
jns
xor
mov
lock
jae
cli
or
sahf
movb
adc
lods
cli
jle
inc
roll
push
pop
cmp
rol
adc
mov
mov
arpl
dec
xchg
je
pusha
js
clc
lret
push
pop
in
push
rclb
add
loopne
loopne
push
mov
adc
dec
call
adc
mov
into
xor
pshufw
test
movsb
sbb
push
xchg
cmp
inc
sbb
push
sbb
and
push
sub
insb
push
push
mov
rolb
stos
push
or
sbb
subb
cld
addr16
mov
dec
push
fs
stos
fs
mov
dec
outsb
sahf
and
insb
pop
jg
jmp
pop
test
jp
ret
sub
dec
xchg
push
dec
insb
dec
ja
pop
xor
jo
rolb
insl
test
inc
push
inc
iret
mov
inc
and
sbb
popf
push
in
mov
ret
sub
cwtl
sub
leave
rol
ret
lock
cmp
and
ljmp
test
lea
sbb
inc
in
movsb
icebp
lds
stos
xchg
icebp
sbb
adc
and
pushf
inc
cmpsb
cmp
add
dec
cmp
mov
sub
aas
sbb
xor
sub
xchg
xchg
xor
ja
xchg
dec
lcall
push
les
dec
pop
sub
inc
push
pusha
js
divl
fsubrl
or
and
pop
addr16
repz
mov
ds
les
je
call
cwtl
mov
leave
mov
js
movsbl
mov
xor
int3
pop
add
cld
or
ja
lcall
inc
dec
leave
xchg
lods
fwait
xor
test
inc
test
fists
inc
aaa
movsb
or
cwtl
jmp
divb
je
ret
adc
jmp
daa
hlt
mov
inc
aas
ret
jmp
push
cli
mov
cmp
sbb
std
and
sub
shrl
push
das
push
or
add
ret
lods
lds
daa
mov
shl
data16
negl
out
dec
or
dec
cs
sbb
add
adc
lret
faddl
add
add
adc
data16
pop
sbbl
subl
shl
push
jge
mov
mov
sbbb
scas
cmpb
inc
cli
or
sbb
cmp
sub
mov
test
add
insl
dec
xor
sbb
mov
add
mov
mov
or
imull
imul
mov
cmp
fs
mov
cs
mov
or
push
adcl
or
pusha
push
or
aad
nop
push
fidivrs
add
jp
and
mov
push
nopl
or
daa
dec
inc
push
int3
mov
or
out
mov
mov
cmpl
pushf
add
addr16
mov
push
xchg
sbb
ss
pop
cmpl
in
pop
dec
or
push
ret
nop
pop
add
inc
sahf
out
call
sarb
add
dec
add
mov
adc
inc
gs
and
clc
jmp
add
add
jnp
popf
inc
dec
repnz
add
push
push
add
inc
inc
jns
mov
adc
je
jg
add
mov
aam
jle
mov
fimuls
sub
sbb
and
nop
out
or
mov
addl
outsl
rclb
pop
mov
mov
lods
mov
pushf
pop
or
test
push
add
jmp
jmp
sbb
mov
jge
frstor
sbb
and
shr
lods
dec
insb
seto
or
mull
mov
icebp
daa
repnz
inc
sub
stos
lret
pop
add
xor
call
call
stos
cmp
in
ss
mov
lea
jne
adc
cmc
ret
cwtl
adcl
mov
add
xchg
add
je
push
cmp
sbb
sahf
xchg
bound
addr16
insb
jmp
andl
lret
mov
and
or
push
push
sarb
push
and
pop
ds
or
data16
pop
lock
loope
pop
ror
lock
mov
pop
sar
call
push
xchg
push
ret
icebp
out
sub
dec
shll
cmpb
call
mov
in
popf
add
mov
outsl
loop
cmc
jmp
dec
or
je
cmp
sbb
jo
std
aad
pop
inc
scas
jae
ret
lahf
or
sub
shlb
aas
data16
inc
cmp
add
xchg
or
jl
daa
bound
popf
push
inc
mov
xor
mov
mov
sub
mov
and
imul
and
jns
xlat
mov
int
cmp
mov
jno
mulps
jb
iret
je
xchg
xchg
or
pop
pop
stos
mov
cmp
shr
xchg
push
sbb
push
jbe
jne
jno
sub
test
pop
xchg
popf
sbb
and
push
jecxz
xchg
call
mov
or
loope
pop
lahf
adc
sbb
movsb
mov
pop
pop
mov
push
jl
or
adc
pop
mov
inc
or
addr16
bound
xlat
das
pop
ret
push
mov
jns
jae
add
inc
vpmullw
pop
adc
pop
xor
movsl
loop
adc
inc
add
sti
push
call
fldl
cmp
fdivrs
lods
in
loopne
gs
mov
iret
icebp
mov
pusha
jno
or
dec
lret
add
daa
xor
jo
adc
aaa
add
push
mov
jae
rolb
xor
bound
push
sbb
and
in
test
fsubr
daa
jecxz
aad
pop
setge
add
dec
jne
movb
outsl
lret
push
fsubs
mov
pop
mov
add
and
pop
in
cmp
adc
negl
data16
inc
push
clc
and
test
xchg
out
sbb
pop
sbb
and
movsb
mov
out
lock
or
movsb
mov
add
pop
pop
fcmovbe
inc
imul
sub
bound
jno
push
adc
rcr
dec
sub
sbb
sbb
add
jge
shlb
sbbb
in
push
push
mov
shll
popf
mov
push
jg
cltd
test
add
sub
add
cmp
jbe
or
aaa
push
pop
nop
dec
lret
ret
pop
pusha
mov
add
hlt
das
add
inc
call
jbe
rcrb
adc
adc
test
sarl
adc
cmpsl
movb
jp
sub
sbb
adc
sbb
pop
nop
addr16
sbb
adc
and
adc
adc
xor
dec
mov
in
mov
or
push
adc
xlat
mov
pop
outsl
sbb
pop
pop
xchg
xchg
loope
adc
pushf
push
sub
adc
ficoms
mov
xor
pop
pop
add
or
or
ret
data16
adc
lock
ret
mov
lock
mov
clc
rcrb
mov
imul
adc
cmp
jne
ret
add
sbb
pop
jmp
mov
inc
das
int
pop
adc
xor
adc
mov
adc
sub
dec
or
gs
lcall
lea
and
or
pop
sbb
pop
adc
mov
or
insl
ss
adc
rorl
or
add
jbe
adc
and
je
pmaxub
xlat
adc
cmp
mov
pop
push
push
jge
vpmacswd
jnp
sub
and
out
push
enter
push
jo
popa
fisttps
addl
int3
xchg
sarl
movsl
dec
pop
add
pop
jl
incb
and
mov
jno
mov
inc
sub
enter
push
push
outsl
jo
movl
pop
pop
pop
adc
aaa
popa
pop
fcomps
dec
cmp
pop
arpl
xor
das
cltd
xor
dec
and
adc
inc
or
jne
cmp
jne
das
or
cmp
and
jne
mov
mov
add
movsb
xor
mov
cmpb
dec
in
dec
inc
sub
ret
push
inc
lcall
imul
push
notl
subb
inc
xor
sbb
adc
pop
arpl
inc
dec
jne
int3
mov
decl
je
mov
xorb
jg
lods
outsb
and
xor
loopne
stos
test
sahf
cli
push
das
ljmp
sbb
xor
pop
mov
dec
jmp
push
push
adc
inc
adcl
and
mov
loope
jo
stc
aas
int3
mov
xor
and
stos
inc
inc
push
mov
movsb
or
idivb
jg
push
dec
cmp
xlat
lahf
mov
gs
int
jb
cmpsb
add
in
js
mov
lea
sbb
subb
sti
scas
iret
adc
xor
and
inc
add
addb
and
dec
jne
sbb
test
scas
or
test
ja
sub
les
sub
mov
sub
out
andl
lods
rolb
sub
shlb
inc
nop
mov
dec
call
adc
and
adc
popa
dec
pop
pop
imul
test
scas
jnp
jne
sub
addr16
mov
adc
or
ljmp
dec
pushf
mov
aas
daa
insb
cmp
jo
outsl
or
and
aas
or
push
inc
cmp
push
cwtl
cmpsl
adc
and
sbb
addr16
mov
test
out
int3
test
push
or
ljmp
cmc
lret
pop
xor
mov
xchg
cmp
sbb
rol
ret
ret
or
shlb
pusha
or
bound
lea
fldl
and
push
jbe
sub
jge
and
aam
push
cmpsb
lods
loop
sti
test
dec
sub
xchg
bswap
cmp
lea
xor
or
inc
movsb
jle
cltd
lds
sub
dec
or
ja
push
or
fmul
fisubs
sahf
inc
sub
movsb
xchg
rolb
dec
dec
adc
mov
cmp
insb
or
inc
je
dec
cmpsl
cmpsb
inc
push
pop
sbb
ret
aaa
xlat
sub
jbe
enter
fildl
sub
shlb
push
sbb
loope
lret
test
sub
mov
adc
rcrl
adc
lret
cmp
jne
jo
and
test
and
xor
fwait
sbb
dec
pop
test
test
imulb
dec
scas
or
adc
lret
sub
insb
movsb
mov
pop
adc
adc
mov
xlat
outsl
xor
mov
fdivl
xor
sbbl
jne
das
xor
inc
lret
jmp
adc
or
inc
lods
out
add
sbb
jno
bswap
cmp
das
dec
addr16
out
add
ror
ja
inc
push
pop
add
cmp
xchg
int3
cmpsl
pop
adc
or
or
hlt
nop
fdivrl
jle
add
inc
lret
add
inc
cmp
out
push
or
adc
movsb
add
mov
sub
adc
pop
fstp
xor
mov
push
leave
shlb
push
bound
add
add
lret
and
pop
mov
aam
jmp
ljmp
and
jge
imul
movl
movsb
and
pop
inc
cmp
push
inc
lret
push
adc
xor
add
sbb
push
or
pop
clc
jne
add
fsubrs
cmpsb
into
xlat
jg
pop
outsb
shll
or
mov
mov
mov
ljmp
icebp
cmp
ljmp
adc
mov
shrb
add
jp
movsl
mov
xchg
push
addl
sarl
push
insb
aam
pop
loopne
sar
jp
aas
push
and
fsubs
cmp
das
rcll
sub
ja
sbb
mov
push
divps
add
jo
or
xchg
push
adc
adc
add
dec
cmp
xchg
dec
movsl
cltd
jecxz
pop
sbb
in
cmpsl
sbb
xchg
sub
or
mov
adc
jae
test
fbstp
or
or
cmp
rcrb
es
mov
and
pop
xchg
pop
aaa
fsubs
jns
mov
adc
cmp
lods
mov
testl
pop
inc
or
or
roll
mov
bound
imul
leave
mov
adc
or
and
ja
inc
sbb
cltd
test
lods
push
jnp
push
and
loopne
jno
dec
and
icebp
repnz
xchg
js
rorb
sub
cmp
push
or
add
adc
sbb
cmp
test
ret
aaa
mov
cmp
or
sub
adc
push
rolb
lea
mov
dec
cmpl
rcl
mov
pop
or
out
dec
fsubs
or
out
in
pop
xchg
cmpsl
cmp
fisttpl
aaa
sbb
push
and
xchg
scas
add
movsb
add
rclb
push
push
fiaddl
jbe
cmp
push
add
scas
in
sti
or
loop
or
sub
push
jae
xchg
mov
and
jp
pop
ds
notl
mov
push
loopnew
in
dec
mov
xor
push
mov
dec
loop
adc
adc
dec
push
ret
icebp
fcoml
push
test
js
aaa
add
jl
and
ss
jo
pusha
psubb
lock
sti
xor
adc
scas
sbb
jno
lock
jge
lret
sub
inc
aas
sub
mov
mov
into
les
in
jge
mov
in
mov
pop
test
push
loopne
inc
outsl
add
or
les
sbb
or
cs
je
and
stos
inc
movl
nop
push
jl
and
jg
or
dec
jb
gs
into
fsubr
push
or
push
cmp
shlb
push
outsl
nop
push
pop
mov
push
xchg
mov
xor
pop
sbb
movl
xor
push
or
or
or
xchg
or
es
pusha
cmp
sahf
mov
clc
scas
prefetchw
call
add
cld
mov
sub
jge
pop
rcll
mov
lods
cmp
inc
sub
outsb
adc
out
fiaddl
push
imul
jge
push
sub
adc
int3
mov
imul
shr
or
adc
dec
mov
jnp
xor
data16
inc
add
mov
nop
addb
in
les
inc
jnp
mov
out
subps
mov
adc
cmp
push
les
dec
in
paddusw
mov
and
dec
in
cmp
fcoms
leave
sub
add
adc
mov
adc
sbb
repz
xor
cmp
repz
inc
dec
push
pop
repz
repz
cltd
mov
lods
xchg
rorb
ret
incl
cltd
icebp
sbb
xchg
cmp
and
outsb
xor
dec
loop
cmp
out
incl
inc
mov
movsl
leave
aam
sub
incl
push
aaa
mov
stc
dec
and
pop
and
loope
nop
js
xchg
out
cmp
push
push
add
add
push
add
pop
mov
mov
rorl
fldenv
dec
popa
outsb
popa
push
nop
dec
jl
pop
add
aaa
mov
cmp
notl
push
mov
pop
pop
cmovl
bt
dec
pop
adc
jo
daa
popf
push
je
jno
jae
push
xor
je
hlt
push
jnp
push
pop
loop
out
fnstcw
and
jge
jecxz
sub
mov
sub
pop
add
mov
add
push
mov
jle
mov
cltd
enter
add
rclb
nop
or
add
cmp
es
sbb
sbb
jae
push
mov
ja
and
inc
pushf
js
and
add
addr16
lods
pop
insb
addr16
push
and
loopne
jne
xchg
or
and
xchg
adc
push
mov
filds
lds
mov
hlt
or
pop
loopne
hlt
pop
sbb
ret
dec
lea
add
test
fidivs
xor
pop
ret
mov
sbb
xchg
xor
pop
mov
xchg
test
sbb
sub
or
mov
pop
xchg
xchg
icebp
arpl
in
mov
cmp
and
sbb
add
and
loope
imul
adc
dec
cwtl
or
sti
and
outsl
cmp
inc
mov
movsl
dec
or
and
jl
dec
inc
dec
mov
into
call
je
sub
sahf
lods
arpl
popf
xchg
inc
jb
test
mov
sbb
push
mov
pushf
shl
mov
je
in
cmp
and
xor
inc
jg
in
push
outsl
sub
lea
test
xchg
dec
jo
jmp
push
fistpll
mov
fwait
inc
cmp
and
lahf
jne
cmp
inc
mov
shr
mov
repnz
and
ljmp
frstor
jnp
scas
push
adc
cmp
clc
divl
loop
cmp
rcl
movsb
fldenv
je
in
fucomip
data16
sub
add
pop
and
pop
fdivl
add
inc
inc
ss
mov
mov
mov
cmpsb
arpl
pop
loopne
ja
roll
fdivl
push
mov
push
push
adc
xor
aas
shll
into
fcoms
mov
stos
adc
ret
mov
hlt
data16
and
sub
popf
out
sahf
adc
mov
ja
xor
in
xchg
add
and
sub
sarb
inc
xlat
jmp
call
enter
or
mov
popa
jp
inc
addl
sub
imul
scas
call
sbb
adc
cld
jmp
pop
add
sbb
jne
add
movsb
out
call
mov
loopne
out
adc
imul
inc
clc
fnstcw
sbb
jl
js
je
das
and
stos
push
jb
sbb
adc
movsb
ds
jl
int3
int3
jge
dec
sub
int
bound
stos
xchg
adc
imul
orl
popa
cs
pusha
and
jns
sbb
pop
xor
fcomi
in
dec
inc
lock
shr
sub
cmp
mov
push
inc
jne
mov
adc
adc
je
ret
jo
fucomip
jl
ficoms
sub
fmuls
xchg
sbb
dec
loop
inc
inc
leave
pop
mov
insb
cmpsl
and
and
arpl
ret
faddl
aam
sbb
test
cmpsl
pop
inc
adc
sub
mov
cmp
aaa
jne
cmp
fcom
push
in
xchg
int3
int3
pop
cmp
shll
repnz
insb
mov
push
jno
shll
add
loop
fs
fwait
inc
clc
xor
xorl
jmp
push
idivb
lret
stos
sarb
ret
sbb
jge
fistl
push
cwtl
or
or
lds
loope
dec
movl
adc
add
popa
ficoml
xor
sbb
sbb
mov
pop
push
test
or
add
enter
shlb
jno
pop
cmp
jo
ret
push
imul
sbb
movsl
or
mov
pop
sub
aas
add
enter
sub
pushaw
add
sub
adc
xor
aas
xor
xor
jmp
sbb
and
mov
pop
frstor
jmp
push
mov
and
push
enter
adc
bound
test
push
pop
xor
aad
ret
icebp
cmp
cmp
add
out
mov
xchg
mov
insl
add
loopne
in
je
inc
mov
cwtl
aad
or
dec
sub
lods
adc
add
jbe
push
call
xchg
cld
out
lock
add
xor
jo
adc
mov
mov
mov
xor
out
insb
inc
jo
adc
cmp
lcall
dec
inc
testb
or
dec
pop
cltd
dec
sahf
adc
popw
jmp
and
push
pop
add
repz
push
mov
loopne
decb
movsb
mov
fistps
sub
cli
aam
sub
xchg
xor
stos
inc
iret
and
xlat
adc
outsb
stos
mov
icebp
sbb
inc
mov
push
jg
dec
dec
xor
inc
aam
pop
rolb
jne
and
dec
enter
xor
hlt
test
sbb
pop
aas
fsubl
and
xchg
mov
loopne
xchg
int3
add
imul
or
jmp
or
movb
mov
imull
bswap
popa
add
aas
dec
andb
pop
xor
lret
cltd
orps
and
xor
pop
or
and
adc
and
je
inc
pop
rcll
sbb
jae
std
jmp
add
sbb
scas
push
push
push
push
addb
aad
icebp
negb
adc
dec
adc
arpl
pop
sub
jg
sbb
xchg
dec
in
jno
mov
rolb
xor
sbb
fisubrl
pop
cs
or
std
or
push
popa
cmp
jle
push
pop
inc
add
add
mov
sub
xchg
test
sub
inc
in
adc
mov
mov
pop
movsl
add
scas
dec
jmp
jmp
test
cmp
cmp
pop
shr
sub
fsubr
popf
icebp
adc
mov
lods
inc
or
lock
adc
enter
daa
adc
test
xor
xchg
push
dec
cmp
add
testl
arpl
xor
inc
xchg
mov
ss
sbb
sbb
pop
and
cmp
sbb
push
inc
or
or
or
adc
and
mov
jge
adc
testl
or
call
jne
or
or
xchg
and
jb
xor
xor
or
addr16
or
insl
ss
clc
sti
jg
adc
jle
lea
movsl
add
inc
and
ds
jb
les
sti
mov
jmp
mov
cld
insl
and
daa
push
push
inc
dec
push
push
dec
inc
pop
in
xor
add
leave
dec
add
inc
xor
iret
push
sahf
dec
adc
and
sbb
adc
daa
sar
mov
jge
cmpsb
daa
cs
push
sub
pop
js
pop
push
jae
push
push
push
or
lea
pop
lods
ret
inc
push
xchg
jo
mov
gs
popa
mov
cs
mov
ja
imull
clc
or
ja
in
push
push
cmc
bound
sub
cmp
xchg
xchg
jle
aaa
js
repnz
add
adc
jmp
mov
adc
daa
inc
mov
insl
inc
insb
popa
jns
adc
pop
jae
push
mov
rol
add
cld
jp
push
ds
rorb
mov
or
dec
cli
or
sti
shll
sub
hlt
xchg
enter
jg
ret
push
push
inc
push
dec
inc
dec
dec
loope
cmp
decl
mov
xor
nop
jb
sbb
cwtl
xchg
jb
jb
nop
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
and
jb
jle
jbe
dec
dec
outsb
emms
js
jp
dec
dec
dec
jnp
jge
dec
dec
dec
dec
jg
popa
bound
dec
dec
arpl
dec
dec
dec
dec
addr16
dec
dec
imul
dec
dec
dec
outsl
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
xor
jne
sub
fldenv
jns
nop
inc
sub
adc
or
sub
pop
push
ds
arpl
cs
adc
pusha
xchg
addr16
jns
xchg
testb
daa
push
popa
loopne
push
setb
or
and
inc
pop
add
adc
push
jecxz
add
lods
xorb
or
sbbb
or
loop
push
add
cmp
dec
jnp
add
adc
add
jmp
add
filds
test
ljmp
repz
or
inc
lods
adc
mov
ss
add
repnz
scas
and
adc
jne
push
and
cld
pop
clc
adc
add
inc
adc
ret
or
or
andb
inc
push
mov
add
stos
loopne
out
mov
insl
sub
or
add
ss
orb
mov
mov
adc
imul
adc
or
pop
inc
jecxz
xor
out
inc
loopne
pusha
jg
or
push
faddl
loop
or
xchg
dec
enter
pusha
call
or
pop
mov
test
je
pushl
push
push
rclb
push
and
mov
loopne
sub
mov
and
or
or
data16
adc
or
scas
mov
cwtl
add
mov
pop
mov
and
jp
pop
lds
or
add
xlat
adc
sub
sbb
adc
inc
or
dec
ret
inc
inc
push
fisttpll
cmpsb
fimuls
cmc
lods
add
nop
or
xlat
cmpsl
ljmp
cld
xor
sbb
das
push
sbb
add
pop
jbe
into
push
lea
pushf
adc
pop
pop
cmp
add
jecxz
jle
fldl
jns
xor
mov
jg
sub
push
sbb
movsb
push
push
mov
cmp
leave
pusha
ljmp
mov
dec
mov
cmpsb
loope
or
push
sbb
in
enter
xor
dec
enter
js
add
es
cmp
mov
add
push
rorb
mov
out
xchg
push
xor
mov
movb
mov
std
sbb
push
mov
or
push
adc
add
clc
pop
and
jo
sbbb
add
data16
testl
cwtl
xchg
or
imul
test
add
test
rorl
push
je
insb
or
inc
or
jae
enter
int
or
je
arpl
adc
jno
pop
ret
adc
gs
mov
gs
int
divb
adc
insb
or
sub
ja
cmp
outsb
int
negb
ucomiss
jo
outsl
sbb
sub
push
push
inc
xchg
add
in
fstl
add
inc
jl
lods
rorl
or
push
rorb
adc
les
sbb
jb
int3
xchg
add
or
lods
decl
les
cld
test
inc
insb
mull
adc
push
push
push
push
jo
mov
push
inc
jns
sbb
adc
pusha
xchg
out
loop
pop
push
jo
nop
and
xor
sbb
adc
xor
popf
lret
mov
adc
loopne
testl
cmpsb
jns
or
inc
jb
or
in
dec
pop
or
mov
xor
dec
jl
jp
data16
lods
mov
sbb
je
adc
inc
inc
fiadds
cs
inc
outsl
jb
jae
shrl
out
es
out
ret
mov
adc
push
add
fimull
inc
push
jno
test
decl
jbe
push
aad
mov
pop
sub
or
in
jecxz
test
xor
subb
leave
inc
ja,pt
insb
hlt
mov
fcom
cld
and
mov
cmpsl
inc
xchg
insl
mov
nop
add
or
xor
loope
scas
pop
push
es
loopne
enter
sub
inc
insb
and
jo
addr16
outsb
cmp
xor
sub
push
dec
or
mov
push
lods
es
mov
inc
mov
and
pop
outsl
cld
push
push
test
inc
push
add
sbb
and
or
dec
sub
addb
inc
inc
push
mov
sbb
movsb
in
sbb
add
je
jl
push
pusha
pop
add
rclb
xlat
ficoms
ds
push
push
cs
xor
in
jl
cmp
pop
mov
aas
mov
mov
sahf
lods
sbb
pusha
daa
jne
lods
fimuls
lahf
pop
mov
das
out
sbb
or
or
test
mov
jl
fcmove
or
add
add
mov
rcr
cmp
in
mov
ds
orb
test
pop
shlb
sub
mov
sub
push
test
xchg
mov
add
xor
xor
mov
mov
sbb
sub
xchg
or
in
add
fs
lds
orb
mov
jl
or
push
pop
outsl
cld
sub
jns
xor
push
add
push
inc
popa
nop
loop
ret
mov
sbb
push
cmpsb
dec
lds
adc
xor
add
pop
pop
loopne
xor
push
int3
push
or
pop
enter
sub
test
add
mov
xor
mov
popa
incl
push
sub
xchg
ret
sbb
push
adcb
insb
xor
adc
mov
scas
push
push
pop
sub
adc
mov
dec
mov
sbb
pusha
mov
push
xchg
jecxz
push
jl
add
add
sahf
imul
and
subb
fnsave
fdivl
push
push
in
sysret
cmp
outsl
mov
dec
test
pop
les
sub
dec
insl
scas
stc
int3
pop
pop
clc
inc
inc
sarb
js
mov
bound
sbb
and
movsb
add
popa
mov
add
ds
loopne
xchg
push
mov
popa
lods
inc
jae
hlt
dec
insl
popa
addr16
cmp
test
je
mov
add
fiaddl
ds
push
or
enter
mov
mov
cmp
les
or
cli
push
pop
push
test
sub
inc
push
push
push
dec
pop
enter
pop
jge
mov
pusha
push
int3
push
mov
jecxz
insb
push
insl
push
sub
push
push
les
cmp
or
adc
fidivrs
push
loopne
inc
test
pop
sbb
test
sbb
outsl
adc
test
sbb
cmc
aaa
ds
or
add
nop
fdivl
push
adc
inc
xor
mov
jb
push
out
jnp
sbb
jae
test
mov
out
jb
sbb
push
out
jbe
cld
push
add
dec
repnz
out
jb
jne
sbb
sarl
push
push
fmull
jg
sbb
pop
add
sbb
out
add
jp
dec
popa
int3
adc
movsl
sbb
je
push
mov
insl
sub
sbb
inc
jecxz
adc
aaa
cmp
iret
sbb
inc
js
or
add
rorl
inc
data16
push
dec
jne
mov
pusha
and
int
js
inc
punpcklwd
push
inc
arpl
aas
push
frstor
aaa
mov
rol
movzwl
and
idivl
adc
add
lret
add
mov
inc
xor
or
fsubrp
shll
data16
ret
jne
movsl
das
or
jnp
push
fisubrs
inc
cmp
xor
outsb
leave
push
xchg
inc
test
inc
dec
cmp
and
ficompl
dec
or
addb
pop
ret
loope
and
mov
or
push
cmp
sub
movsl
lahf
dec
loopne
rclb
pop
adc
adc
pop
inc
inc
adc
xchg
dec
enter
or
js
lea
inc
sub
cmp
ror
add
pop
push
sbb
mov
das
push
pop
xchg
daa
pop
and
loop
or
jb
mov
adc
je
aaa
mov
push
aam
outsl
popf
mov
jnp
mov
sub
cmp
je
inc
cs
sar
cmp
rolb
dec
clc
test
dec
mov
cmpsl
mov
pop
int3
ret
sbb
sti
je
rcrl
xchg
fst
inc
add
addr16
add
enter
sbb
or
sbb
jbe
lock
xor
adc
ljmp
repz
adc
or
pop
or
or
xchg
or
in
jmp
iret
mov
sub
fisttpll
dec
out
lea
jmp
cmp
gs
cld
aam
cmc
mov
adc
pushf
inc
or
out
or
test
mov
nop
lcall
les
cmpsl
dec
and
add
pop
in
or
shr
xlat
shlb
add
or
push
rorl
outsb
or
sub
mov
fsubrl
dec
insb
xchg
cld
idivl
dec
popa
jbe
add
insl
mov
xchg
gs
insb
pop
jge
add
imul
addr16
inc
or
dec
insb
imul
pop
gs
fs
stc
das
mov
lahf
jne
or
arpl
imul
jno
popa
mov
mov
or
shlb
out
jns
add
in
mov
pop
ja
insl
inc
enter
dec
data16
push
xorb
pop
inc
outsl
or
inc
popa
dec
mov
out
pop
jo
push
pop
imul
or
push
addr16
and
adc
test
xchg
dec
lods
insb
xchg
or
sbb
mov
fidivrl
js
pop
pop
mov
jg
sub
push
push
fdivl
sub
daa
pop
xchg
fcoms
fs
sbb
imul
add
or
push
adc
movsl
pusha
andl
negb
inc
lods
loope
mov
adc
rep
andb
adc
adc
add
out
or
cltd
push
out
push
adc
push
pop
outsb
jne
nop
outsl
mov
daa
punpckhbw
ror
das
lahf
mov
ret
push
arpl
lds
inc
xor
shll
cmp
in
daa
or
jne
or
insl
les
hlt
notl
or
imul
push
mov
mov
mov
inc
clc
push
xchg
cltd
movsl
ret
mov
push
rol
xor
push
adc
repz
mov
mov
cmovno
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
sti
inc
xor
inc
push
dec
push
xor
inc
dec
dec
arpl
popa
dec
pop
dec
inc
inc
push
adc
add
scas
dec
dec
inc
push
dec
dec
push
mov
push
mov
sbb
xchg
inc
dec
dec
and
inc
inc
mov
inc
inc
xor
xor
das
dec
rorb
pop
enter
inc
xor
inc
dec
divl
adc
push
push
push
dec
sub
dec
mov
pop
imul
das
sbb
mov
xchg
inc
inc
das
mov
ret
push
push
test
mov
push
adc
push
push
vmwrite
push
dec
push
inc
scas
dec
inc
dec
push
jbe
lods
jecxz
lock
nopl
cli
cmp
mov
mov
push
enter
push
ss
cmp
rolb
cs
sbb
or
fstpt
dec
or
jne
add
inc
sahf
xchg
adc
dec
loopne
pop
mov
push
xchg
test
adc
mov
jnp
sbb
inc
cmpxchg
sbb
dec
sbb
dec
push
jo
out
pop
aas
mov
or
add
add
mov
sbbb
pusha
in
sbb
mov
les
daa
fidivrs
add
adc
inc
mov
fisubl
sbb
mov
adc
adc
xchg
pop
inc
push
test
std
nop
rolb
push
and
push
inc
shl
les
pop
adc
xor
xchg
cld
or
ret
das
add
push
or
sbb
dec
nop
and
ja
add
nop
sbb
adc
mov
ljmp
lcall
loop
sub
daa
push
repnz
adc
imul
daa
insb
inc
adc
dec
sbb
pop
shll
jne
lret
jae
and
jmp
pushf
xor
pop
je
cmp
je
or
popl
sub
test
add
sub
lea
or
dec
mov
outsb
or
divl
enter
mov
and
inc
adc
test
into
mov
dec
fsubl
jno
dec
dec
jge
mov
daa
fidivl
les
int
dec
stos
and
push
int3
sbb
mov
and
aaa
jmp
adc
xor
dec
inc
aam
add
or
sbb
je
push
inc
push
cmp
adc
out
jbe
xor
cmp
jmp
or
add
loope
cmc
add
arpl
sarl
add
mov
sbb
jmp
lsl
mov
mov
jmp
xchg
push
loope
add
cmpl
sbb
test
mov
cmpb
adc
adc
insb
addb
sbbb
int3
sbb
pop
mov
repnz
cwtl
cmp
flds
push
stos
popa
push
jo
push
push
or
or
fisttpl
push
dec
fistl
sub
aas
or
bound
push
cmp
repz
push
imul
test
xchg
adc
xor
mov
adc
cmp
sbb
mov
adc
adc
push
xor
testl
jns
push
jmp
pop
fwait
sbb
push
pop
cmp
jne
arpl
push
aas
adc
mov
jg
inc
xchg
and
and
rolb
xor
es
pushf
xor
orb
or
aam
inc
adc
not
pop
xor
fsubs
mov
xor
push
das
outsb
neg
push
dec
nop
jnp
loopne
into
cli
push
sbb
adc
pusha
add
cmp
incb
or
sbb
inc
pop
adc
pop
cmp
push
mov
mov
fcoms
mov
mov
xor
movsb
fs
xchg
push
sbb
loopne
push
ffree
dec
jg
popf
mov
dec
pop
addb
add
in
addl
sub
or
rclb
in
loopne
cmp
je
adc
add
sub
sub
ljmp
call
test
push
xor
or
loopne
nop
dec
sbb
adc
in
jp
sbbb
sub
cmp
sbb
aam
loop
nop
loop
movsl
pop
cli
jo,pn
sarl
fsubrs
nop
dec
add
in
push
push
repnz
pop
jb
push
outsb
cmp
pusha
das
lock
and
popa
or
in
aas
sbb
push
mov
and
movl
add
js
sbbl
sub
push
nop
or
nop
mov
popa
and
or
or
es
inc
js
push
out
mov
fisttpll
cmp
cmp
sub
jecxz
pushf
mov
pop
icebp
mov
xor
adc
or
fcomps
add
das
test
mov
add
mov
movsb
mov
sub
jl
je
nop
sbb
add
andb
loopne
jle
lea
jae
jg
inc
and
adc
lock
jbe
adc
add
test
dec
fwait
in
nop
dec
jae
hlt
lock
sub
lahf
mov
dec
cmp
inc
ret
cmp
cmp
ss
stos
jo
jne
xor
mov
inc
setnp
mov
pusha
jecxz
and
test
sar
pop
ja
sbb
fnop
xor
inc
adc
dec
in
int3
inc
pop
sbb
lock
mov
adc
xor
movl
sbb
inc
mov
mov
pop
movsl
iret
jmp
aam
or
add
push
adc
cmp
test
inc
sbb
xor
popf
jge
test
outsb
rcl
cmp
sbb
cmp
push
mov
sub
or
sub
or
or
xor
push
sub
out
out
cwtl
push
sub
push
push
icebp
fiaddl
mulb
mov
mov
test
or
add
xchg
sbb
mov
das
lea
psrlw
es
movb
test
and
cwtl
cmp
sbb
xchg
nop
iret
add
inc
cmp
xchg
and
sub
insl
adc
add
adc
pop
out
inc
xor
shl
rol
mulb
fmuls
mov
cmpsb
lods
addr16
push
insl
pusha
or
in
bound
repz
mov
movsl
cs
incl
sbb
loop
mov
cmpxchg
dec
loopne
cmp
cmpsl
jo
imul
jo
push
ret
imul
adc
jge
mov
pop
dec
in
aam
fs
push
xor
sub
mov
inc
rcll
iret
bound
rolb
mov
mov
add
jae
sarb
imul
pusha
xor
fs
rolb
in
pop
xor
fisttpll
cmp
test
xor
icebp
dec
push
je
popa
outsl
sbb
insb
punpcklwd
cltd
mov
cmp
pop
sub
xor
popa
test
add
mov
rcll
lock
movsl
movsl
loope
and
mov
mov
xor
jno
loopne
add
aad
cmpsl
fnstsw
xor
cmp
iret
filds
fcoms
aas
fisttpl
add
inc
jmp
push
dec
push
or
shlb
inc
mov
push
ret
pusha
mov
dec
push
ss
jnp
add
adc
rcrb
rorb
lea
popa
and
aas
mov
rol
sbb
add
arpl
decb
orb
sbb
push
in
sub
mov
not
and
dec
das
pop
dec
pop
out
ret
je
testb
xchg
dec
adc
jl
jne
aas
sbb
pop
ss
push
add
add
push
add
cmp
and
or
mov
add
in
jmp
dec
adc
dec
xchg
sysret
or
adc
pusha
in
sbb
push
adc
fdivl
dec
xor
adc
pop
mov
pop
and
sbb
popa
jne
data16
push
iret
push
movsl
js
xor
dec
add
idivb
insb
adc
dec
idivl
add
jnp
pop
in
jno
or
mov
subb
aam
sbb
mov
jo
mov
cmp
test
ljmp
push
movb
pop
ss
and
out
pop
push
dec
push
fwait
or
mov
aam
test
xor
push
push
ret
test
adc
stos
cmp
aaa
jmp
call
and
test
inc
xor
ja
enter
push
push
jge,pt
jmp
adc
fldenv
sbb
cmp
in
jno
call
jl
xchg
ds
push
push
aas
rolb
sbb
add
hlt
sub
fs
je
sub
or
fwait
inc
lcall
xor
sbb
aas
ja
stc
bound
data16
je
cmp
fcomps
leave
rcrl
in
push
jbe
aam
jle
push
out
pop
lea
mov
rolb
jle
or
adc
xchg
xchg
insl
mov
adc
mul
rol
mov
or
add
xchg
mov
enter
movsb
test
in
inc
bound
ljmp
shll
flds
out
aaa
pusha
dec
arpl
xlat
fdivl
aam
pop
pop
setne
sti
aam
add
test
adc
lcall
cmp
jge
adc
mov
push
jecxz
or
ljmp
jmp
sub
sub
adcb
cmp
mov
dec
jbe
sub
scas
lea
pop
lock
mov
cmpsl
je
fildl
and
push
mov
ss
jmp
jns
push
push
pop
ret
pop
inc
dec
add
xchg
inc
inc
pop
ret
stc
shrb
inc
das
inc
cmc
add
push
sti
subl
loopne
movb
mov
movsl
movl
and
dec
jmp
test
or
mov
dec
ficomps
faddl
adc
and
mov
push
and
dec
and
sbb
fidivs
push
add
dec
pop
add
mov
or
jbe
orb
movb
adc
sub
inc
pusha
jmp
cmp
aas
dec
xchg
mov
mov
mov
xor
add
mov
ret
sbb
inc
dec
jne
mov
jg
lea
adc
adc
adc
sbb
sbb
add
add
pop
pop
adcb
aaa
and
cmpsb
mov
lock
or
dec
js
adc
push
sbb
push
bndstx
loope
pop
or
fidivs
fldt
mov
mov
sub
shl
mov
mov
jmp
inc
movw
add
cli
sub
bound
fists
xchg
sbb
mov
mov
dec
loopne
or
mov
test
jle
outsb
in
xchg
cld
rolb
jne
ds
cmp
xchg
lock
xchg
sarb
inc
movzwl
lea
fiadds
push
cmp
cs
push
addr16
data16
sbb
and
sarb
jge
pop
icebp
push
pusha
sub
mov
and
sub
test
cmp
add
add
mov
icebp
lods
inc
mov
xchg
outsb
movsl
add
and
or
inc
fnstsw
add
or
or
push
scas
mov
sub
loop
inc
sub
and
adc
pop
push
push
pop
clc
sarb
cmp
sarl
and
add
int
es
mov
mov
pop
int
sub
fdivp
sub
adc
subb
add
sbb
sarl
sub
sub
inc
add
sub
add
jne
js
cli
jle
ss
push
in
lods
les
dec
out
dec
add
inc
push
outsl
cltd
xchg
adcb
mov
shll
in
insb
inc
jl
shrl
stc
push
push
xor
testl
enter
xlat
adc
add
das
xchg
push
cs
loopne
cmpl
ret
inc
adc
jno
push
jge
add
ret
out
ret
push
mov
add
xlat
mov
or
sbb
and
aas
fsubrl
cmp
fstl
ds
sub
lock
imul
add
cli
and
push
addr16
cmc
inc
rcl
movl
repnz
in
dec
fldcw
cld
push
pop
in
cmp
mov
or
mov
test
jae
inc
add
clc
insl
sbb
mov
inc
call
mov
adc
stos
and
mov
divl
add
jne
add
sbb
lods
ret
cmp
ret
mov
adc
cmp
jg
test
jle
cmp
jl
jnp
enter
sbb
mov
or
pop
clc
jle
push
lds
sahf
push
mov
and
jecxz
pusha
mov
sbb
inc
jge
ret
dec
imul
push
call
dec
xchg
sbb
mov
rclb
pop
and
adc
mov
inc
lcall
add
add
pop
and
imul
cmp
or
push
shlb
and
or
mov
dec
sbb
das
addb
das
ds
jns
push
sub
xor
xor
mov
mov
in
fidivrs
inc
ret
std
push
sub
loopne
es
fstpt
mov
mov
loopne
mov
pop
ljmp
push
inc
dec
jne
cmp
loop
mov
pop
xor
cltd
xor
cld
ficoms
ss
repnz
add
sub
scas
lods
adc
int3
pop
aam
mov
lea
inc
or
add
in
pop
fcmovbe
sbb
dec
inc
inc
mov
nop
pop
or
loope
mov
insl
mov
push
mov
test
sti
les
ret
ja
jp
movsb
jb
jbe
xorb
repz
ficomps
push
mov
xchg
mov
or
je
add
pop
fdivrl
iret
imul
jae
jae
cmp
add
mov
push
movsb
inc
aam
test
imul
test
je
inc
and
xor
rclb
pop
mov
pop
and
repnz
jl
ret
sbb
xor
lea
or
in
or
add
mov
movl
adc
mov
inc
je
dec
or
jle
lock
add
jg
jb
jmp
add
test
pop
mov
jo
add
or
push
fistpll
and
sub
jbe
rorb
jae
mov
shlb
and
and
push
sub
push
std
rolb
mov
sahf
adc
or
mov
pushf
outsl
test
cmp
jl
clc
shlb
enter
adc
add
add
add
es
xor
mov
leave
in
xchg
sbb
jb
mov
add
and
data16
in
add
fcomip
loope
and
sti
mov
add
or
mov
sbbl
push
lea
push
ret
clc
pop
push
addr16
xor
clc
mov
mov
sbb
cld
dec
inc
incl
inc
clc
leave
addr16
mov
pusha
or
inc
popf
cmc
rcll
xchg
inc
xchg
add
xchg
test
call
push
in
testb
lods
adc
in
lods
dec
mov
call
xlat
call
jo
adc
push
in
lret
lcall
inc
fwait
loopne
add
dec
stos
xchg
call
dec
jae
hlt
loopne
xchg
ss
fsub
loop
imul
lods
push
rclb
push
lock
sub
lock
xor
inc
fmuls
mov
xor
mov
inc
mov
mov
or
lods
inc
adc
jp
orb
scas
mov
mov
mov
mov
and
jl
or
sahf
push
sbb
sbb
in
in
jne
adc
sbb
inc
fldt
loopne
fcoml
clc
call
xorb
sub
mov
lds
sbb
xorl
inc
and
sahf
adc
pop
push
push
jl
lods
mov
aaa
pop
or
das
loopne
pop
ficoms
sub
ror
sbb
xlat
mov
inc
frstor
pop
nop
sti
add
xor
iret
pop
orb
push
jb
cmp
push
lret
inc
or
dec
aad
popa
xchg
inc
mov
jns
or
adc
sbb
cmp
adc
and
je
mov
int3
add
es
popa
jle
int3
push
mov
sub
dec
gs
lcall
hlt
push
mov
or
adc
inc
addr16
loope
and
mov
jne
sub
mov
cmp
dec
push
sbb
push
xor
pop
or
nop
outsl
mov
sub
clc
adc
lahf
or
fadds
cwtl
and
mov
sub
push
pop
cmp
adcl
xor
add
adc
lock
xlat
imulb
mov
and
cmp
sbb
push
sbb
movsl
lea
pop
loope
inc
jg
dec
iret
je
das
cmp
and
loope
popa
daa
pop
pop
sbb
xor
pop
enter
push
and
test
inc
push
fs
xor
or
mov
or
sub
adc
pop
daa
mov
or
adc
and
shll
sub
movb
loope
adc
insl
jbe
outsb
mov
xor
insb
or
add
dec
pop
imul
jne
dec
movsl
sbb
lahf
rorb
shlb
push
imul
xor
lea
cmpl
cmp
and
add
xchg
or
movsl
cwtl
test
sbb
xlat
dec
mov
xor
test
sbb
push
mov
jl
pop
fwait
rorl
orl
xchg
insl
add
push
adc
in
daa
push
punpckhdq
xor
xor
notb
rcl
add
loop
adc
pop
popa
and
jns
inc
pop
rolb
cmovg
aad
and
pop
xor
adc
add
xchg
and
aaa
push
push
push
ret
decl
dec
sub
insl
push
adc
push
pop
dec
and
shll
int3
push
xorb
mov
pop
jl
loope
nop
push
adc
push
enter
and
out
dec
lahf
fwait
adc
call
decl
mov
push
dec
jne
jno
adc
cmc
inc
aas
inc
mov
mov
imul
cmp
mov
lea
add
xchg
xchg
ds
cmpsl
add
xor
xlat
orb
pop
sub
mov
push
lock
or
ja
adc
lahf
cs
mov
psubw
add
push
arpl
fbstp
repnz
lock
mov
xchg
push
add
fnsave
dec
xor
sahf
dec
pushf
lock
nop
or
fnsave
aam
je
fiaddl
jne
cmc
adc
scas
adc
movl
push
or
loopne
dec
pop
mov
sti
push
xchg
sbb
and
add
insl
ret
or
stos
mov
es
sbb
mov
pop
ficoms
sbb
and
sbb
sbb
jl
mov
sbb
add
sub
sbb
js
xor
fidivs
adc
inc
pop
xor
insl
mov
fs
insb
jne
mov
push
popa
mov
jae
add
or
data16
sub
cmpsl
mov
or
out
or
bound
and
inc
dec
fdivs
inc
mov
fcoml
mov
add
sti
adc
xchg
cwtl
add
addb
sub
or
pop
jle
call
insl
push
sbb
dec
push
jge
scas
cmp
or
lea
mov
in
repz
inc
adc
popf
push
fisttpl
lods
ss
fistpl
ret
fiaddl
push
or
lock
push
mov
bswap
mov
push
je
inc
cmpsl
xchg
fsts
punpcklbw
fdivrs
cmpsl
mov
cmp
pusha
stos
aad
and
nop
add
add
scas
adc
mov
sbb
loopne
ja
insl
push
and
mov
mov
loop
cmp
je
mov
pop
imul
mov
sub
push
adc
mov
sbb
inc
mov
mov
push
nop
mov
cmp
xchg
inc
push
mov
test
or
inc
xorb
outsl
inc
jo
jbe
xchg
test
or
js
inc
inc
call
xor
jl
inc
and
lock
repz
dec
or
push
adc
pop
rcrb
fiadds
out
fcom
test
outsl
jg
xor
xchg
inc
imul
mov
gs
mov
out
iret
sbb
dec
in
jb
fs
or
mov
fstl
shrl
pop
sbb
pop
adc
adc
aam
inc
mov
call
and
cmp
dec
je
inc
or
xchg
xchg
shrb
bound
fisttpll
hlt
ja
aaa
push
in
xor
je
std
loopne
or
out
adc
sbb
sbb
shll
push
inc
fsubp
cmp
xchg
cltd
mov
test
je
icebp
sub
pop
mov
push
jecxz
in
adc
push
sbb
xor
lock
insb
push
dec
adc
cmp
add
daa
mov
xor
mov
or
sbb
and
mov
add
xchg
mov
lret
xor
or
std
inc
add
mov
jns
xchg
rclb
pop
dec
imul
jae
cmpsl
nop
scas
add
popa
sbbl
popf
nop
dec
fistl
push
pop
push
leave
test
mov
pop
adc
js
add
mov
add
pop
lods
loopne
ds
pop
xchg
jo
cmp
jne
ret
inc
addr16
push
and
cmp
xchg
insb
xor
movsb
mov
test
adc
in
test
xor
loopne
out
push
sahf
nop
xor
jmp
mov
pop
pop
sbb
push
leave
sub
rclb
pop
lods
es
lock
stos
imul
sub
xorb
pop
inc
js
in
or
into
mov
mov
cmpsl
xor
lea
aaa
dec
test
cmp
cmpsw
add
hlt
movl
and
call
mov
aas
sbb
mov
jo
lods
pop
test
and
lea
sub
mov
decl
inc
sbb
test
adc
dec
adc
ret
scas
fwait
mov
cmc
sub
loopne
idivb
adc
popa
test
cmp
sahf
dec
stos
xor
and
and
xor
loopne
push
pop
mov
dec
add
inc
dec
mov
xchg
xor
movb
push
out
mov
mov
stos
lods
and
movsl
mov
cs
and
stos
test
adc
aad
rol
cmpl
hlt
cmp
add
inc
push
enter
movsb
subb
jns
fisubs
movl
mov
movsb
fadd
or
lock
dec
fdivr
cld
sbb
mov
les
mov
push
or
or
mov
cmpsl
addl
lods
pop
psubusb
lea
mov
and
sub
lea
outsb
push
add
pop
adc
rcr
sub
lret
cs
push
scas
push
pop
test
sub
inc
add
in
jae
cmp
leave
push
mov
rcr
test
lds
inc
adc
and
sbb
add
and
pop
and
rcrb
ljmp
movzwl
push
dec
in
scas
shll
mov
daa
sub
sti
mov
adc
out
lds
push
ret
xor
repz
dec
bound
push
adc
scas
popa
xchg
popf
loopne
jl
push
mov
js
lcall
xor
or
sub
pop
addr16
pop
xchg
mov
dec
in
cld
rorb
mov
sbb
xchg
and
inc
push
scas
call
call
or
inc
lret
outsl
imul
push
pop
and
inc
orb
pop
movsl
ja
push
xchg
mov
mov
add
mov
or
andl
addb
adc
fstl
pop
lea
sbb
xor
je
adc
mov
jmp
enter
bound
jne
or
add
es
or
mov
rolb
push
adc
push
fcoms
imul
or
aam
ret
and
sbb
xor
test
mov
in
jcxz
popf
mov
mov
lret
and
sub
clc
das
mulb
sbb
fs
cmpsl
cmp
mov
mov
sarl
call
xor
inc
xor
call
ret
push
rorl
adc
ss
sarl
mov
pop
sbb
shll
loopne
test
aam
pop
in
sub
push
push
inc
out
shll
sbb
add
sub
push
lods
sub
adc
xor
dec
jne
jmp
and
add
jmp
test
and
clc
pop
push
add
xor
das
xor
mov
sbb
mov
pop
fists
stos
sbb
lds
adcb
lock
push
sbbb
aam
imul
or
bound
mov
push
movsb
adc
push
sbbb
jnp
dec
jae
or
mov
push
xchg
inc
mov
cmovg
jne
jl
mov
insb
pop
sub
cs
inc
cli
push
lock
inc
dec
adc
fldenv
int3
in
pop
cmp
xchg
dec
insb
fcompl
loop
sub
add
test
pop
test
jmp
inc
sbb
cli
fidivl
imul
or
xor
ret
test
lock
mov
divb
adc
dec
movb
push
std
ja
shlb
out
mov
cmpb
push
cmp
in
mov
lock
iret
out
mov
jmp
fmuls
dec
test
call
sub
add
mov
cli
sub
daa
push
push
loope
shll
cmpl
jl
xor
jno
inc
pop
xchg
push
adc
push
mov
ret
into
movb
cmpsl
sub
xor
pop
add
or
jae
jae
inc
aas
sub
lods
jecxz
shlb
or
and
dec
jg
mov
movb
orl
and
fsub
das
rcr
sahf
cltd
rclb
pop
sub
lea
inc
addl
arpl
cld
roll
xchg
push
xchg
push
aad
push
push
or
shlb
xor
jp
or
nop
ret
adc
jo
mov
push
test
fmull
adc
and
insb
insl
mov
dec
bound
xor
cmpl
sub
cwtl
or
xor
xchg
jmp
cmp
or
pop
lods
in
and
push
repnz
add
add
jmp
cmp
ficoms
nop
cmp
rorb
insl
or
xchg
mov
inc
xor
rcrb
add
add
loopne
loopne
fisubrl
xor
nop
or
push
aam
insb
pop
nop
imul
mov
xlat
lds
out
test
pop
mov
out
lahf
or
pushw
or
push
sub
and
push
outsb
push
js
lock
mov
cltd
sub
call
clc
add
pop
call
lret
sub
lods
push
sbb
add
repnz
push
aam
inc
dec
pop
addl
enter
sbb
mov
or
mov
rcll
andb
loop
add
fbld
testb
sub
fidivrl
inc
adc
pop
test
mov
loop
call
jl
inc
in
or
je
mov
push
xor
sub
repnz
fdivrs
stos
mov
push
push
sbb
pushf
mov
pop
push
in
test
cmp
or
std
and
popa
mov
fiaddl
dec
and
test
loopne
nop
jb
es
ret
cs
ret
mov
enter
push
lds
call
cli
sahf
cs
mov
mov
loopne
lods
inc
jp
dec
mov
pop
dec
addl
push
rolb
dec
or
frstor
mov
shlb
push
leave
inc
imul
aam
jo
cmp
mov
es
enter
scas
shlb
enter
mov
cmp
dec
or
add
adc
ja
adc
cmpsl
mov
pop
ja
push
int3
add
adc
inc
rclb
cmp
imul
fucom
and
sbb
cmp
adc
inc
sahf
inc
in
sbb
sbb
inc
push
imul
pop
fcomps
adc
hlt
add
push
or
adc
mov
rolb
xor
and
push
xchg
rcrb
shrb
xchg
adc
dec
jae
cwtl
and
add
pop
rorb
push
call
out
fists
push
fisubl
jmp
push
inc
jmp
inc
negl
je
nop
push
lds
ss
jb
add
aad
mov
xlat
pop
gs
dec
es
ror
push
push
fadd
xchg
movsl
test
and
cmpsb
movaps
jle
cmpsb
mov
and
sub
and
or
push
pop
push
jle
xlat
add
inc
adc
icebp
pushf
or
in
or
xor
jns
imul
popa
xchg
jge
inc
sbb
pusha
or
insl
push
popa
mov
lods
aas
iret
jb
pop
push
add
fsub
lods
jle
in
mov
sub
jne
or
rcl
sbb
mov
pusha
inc
sbb
push
addb
lock
imul
jbe
or
inc
add
lock
js
push
or
fcoml
jg
push
test
icebp
fldl
outsl
adc
adc
push
jo
or
int
xchg
mov
test
adc
xchg
add
in
or
xchg
lea
or
loopne
imul
xchg
and
test
or
pop
push
nop
inc
adc
add
lahf
inc
mov
popa
inc
sub
push
test
pop
and
stos
iret
inc
cmp
in
aaa
lods
js
shrb
mov
lea
and
add
pop
shll
je
push
jbe
fldl
and
es
adc
lods
add
xlat
adc
sti
das
inc
js
enter
xchg
lock
jno
push
cmpsb
adc
or
int3
repz
sbb
subb
push
add
pop
and
insl
stos
movsl
les
fdivrp
iret
movsl
push
and
mov
inc
inc
lea
mov
and
inc
and
push
jbe
xlat
xlat
mov
xor
sub
dec
pop
aam
sbb
adc
popa
ljmp
add
push
es
mov
int3
inc
lock
out
and
add
and
pop
insb
outsb
adc
paddq
add
mov
jmp
outsb
sub
adc
mov
test
push
push
push
inc
call
or
cmpb
or
or
lock
and
popf
push
ja,pt
and
jb
cmp
xorl
lcall
lods
add
out
sub
sub
mov
xchg
xlat
mov
js
jl
sub
in
lods
fs
popa
mov
lods
inc
sbb
ss
inc
cmp
jne
mov
addl
mov
fildll
test
xchg
or
inc
xor
into
jno
or
adc
or
dec
stos
push
inc
push
adc
lds
out
sbb
sub
cld
mov
and
jnp
and
or
or
ljmp
xor
xchg
testl
loopne
cli
movsb
es
inc
push
outsl
sub
cs
or
int
push
push
fwait
dec
sti
ror
pop
jmp
inc
push
xor
sti
daa
fistl
je
ss
jns
xchg
fmuls
in
pop
or
sub
xchg
and
sbb
sub
jg
rorl
test
jbe
subl
push
pop
pop
pop
cmp
add
iret
xor
clc
rolb
jg
aam
sub
jno
push
popf
mov
add
enter
adc
mov
enter
add
imul
inc
add
addr16
dec
or
mov
les
push
lahf
sbb
push
jl
and
xor
and
loope
mov
xor
shlb
or
xor
pusha
rorb
out
orb
aaa
xchg
jmp
pop
adc
nop
mov
xor
rcrb
inc
add
push
xchg
jmp
xor
rclb
xchg
push
mov
xor
jae
aas
mov
and
jnp
adc
sbbb
inc
mov
pop
xchg
outsb
add
arpl
xor
sbbl
adc
in
sub
inc
daa
adc
add
xor
mov
mov
pop
pop
and
cld
xchg
in
fildll
sub
adc
inc
add
loop
sar
or
lock
adc
and
xchg
add
cli
dec
jp
pop
mov
and
xor
inc
xchg
testl
popf
push
and
cld
aas
fnsave
clc
loope
pop
cmp
cmp
inc
imulb
pop
xchg
insl
insb
push
adc
rorb
jecxz
aad
hlt
adc
jmp
mov
das
push
dec
pop
add
jecxz
add
add
mov
cmp
rolb
xor
stos
pusha
stc
xor
call
outsl
cld
sbb
inc
loop
or
ret
leave
dec
add
inc
insb
adc
cmpsb
dec
push
pop
aas
rolb
leave
mov
mov
dec
dec
xchg
push
ds
lods
jbe
ss
cli
cmp
adc
outsl
inc
adc
icebp
or
or
mov
sbb
cmp
clc
inc
movsb
cmc
orl
mov
ss
mov
fcmovbe
sub
sti
pop
mov
dec
xor
and
ja
int3
cltd
lods
das
std
fs
or
or
insb
dec
hlt
ret
fbld
mov
push
pop
add
pop
mov
adc
mov
push
and
add
inc
sarb
sub
add
push
stos
lret
xchg
dec
inc
cmp
rorb
mov
mov
xor
xor
or
jbe
xchg
xchg
dec
imul
popa
mov
fcmovnbe
fs
jecxz
insb
or
outsl
add
xchg
and
add
fmul
js
or
inc
inc
shll
sub
outsb
mov
sub
ficompl
imul
xchg
xchg
add
jbe
nop
dec
clc
sbb
add
and
dec
cmp
sbb
pushf
fldcw
test
outsl
insl
popa
pop
cmp
push
xchg
dec
imul
sbb
int3
xchg
push
and
pop
test
shlb
je
or
adc
pop
fwait
jne
fisubrs
imul
push
testl
cld
add
inc
insb
and
rolb
add
and
stos
addb
jp
adc
mov
cld
and
adcl
adc
add
xor
or
sub
pop
loopne
jnp
outsl
push
sbb
shrl
adc
xchg
add
jne
icebp
cwtl
add
ss
mov
into
xor
inc
and
imul
pop
in
push
pusha
inc
popa
mov
push
fcoml
adc
xsha256
cmpsb
adc
xlat
mov
or
add
or
pop
add
sti
jno
arpl
cmp
xor
pop
clc
loopne
sub
out
loopne
sbb
test
movsb
dec
outsb
push
loopne
push
jbe
insb
xor
push
jg
add
mov
fcmovnbe
jg
andl
fxch
inc
sbb
inc
cmp
mov
pop
stc
and
daa
push
jne
inc
cmp
ret
push
movsb
or
jne
ret
xchg
mov
dec
and
xorl
fadds
mov
push
add
cmp
push
add
mov
iret
xchg
push
add
nop
mov
and
ret
cmovne
sbb
xor
fs
pop
insb
adc
das
and
jge
xadd
or
repz
data16
aam
cmp
mov
dec
xor
imul
xchg
sbb
loope
mov
xor
xchg
lret
mov
sbb
addb
daa
hlt
push
add
push
mov
outsl
add
je,pt
push
js
outsb
inc
clc
push
push
push
cltd
jo
std
fmuls
pop
jle
pusha
jle
dec
ds
test
mov
fsubrp
push
clc
adc
imul
iret
xchg
rolb
incl
and
mov
lds
mov
push
shlb
ss
mov
mov
lods
daa
mov
inc
or
sub
xchg
jo
repz
dec
inc
add
sub
icebp
xchg
gs
jbe
push
scas
sub
sbb
dec
orb
xchg
pusha
pop
daa
sbb
mov
push
mov
gs
adc
nop
in
fs
sbb
repnz
aas
xchg
xor
cmp
inc
adcl
cmp
adc
adc
data16
popa
sub
aas
xchg
and
ss
pop
dec
je
mov
sti
xchg
fs
ret
inc
outsb
sarl
insb
or
rcr
insb
call
push
jae
dec
jno
mov
daa
loope
je
push
rorl
mov
push
outsl
out
xchg
fnstcw
sbbb
adc
or
je
das
add
andb
in
sbb
enter
lods
mov
enter
mov
enter
int3
ror
enter
fcomp
loopne
enter
call
enter
cld
add
enter
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
xor
enter
dec
sbb
xor
lea
adc
pop
mov
adc
mov
pop
mov
xchg
push
mov
stc
add
xchg
mov
push
rorb
push
movsb
xor
cwtl
loopne
leave
lret
hlt
mov
inc
jb
test
test
cmp
add
movsb
jl
xchg
push
sbb
mov
inc
sub
enter
lods
or
lock
mov
dec
gs
sub
fsubs
xchg
add
cmp
movsb
xor
in
call
fs
je
add
lock
xchg
or
gs
clc
movsb
cld
enter
mov
add
hlt
pop
mov
and
mov
and
sub
push
movsb
xor
cmp
push
sbb
and
sub
push
jo
jl
or
gs
xor
xor
cmp
cmp
movsb
jb
lret
mov
adcb
dec
xlat
test
xorl
hlt
dec
add
lods
sub
test
xchg
adc
mov
pop
lods
std
adc
inc
insb
outsl
jae
and
test
or
inc
sarl
or
jle
popa
or
push
popa
jb
out
or
add
daa
or
bound
lods
mov
sbb
xchg
inc
push
aas
addr16
fs
popf
jbe
pop
dec
arpl
jae
and
bound
inc
xchg
sbb
mov
imul
add
outsb
cmp
rcrl
push
rclb
lods
pop
pop
pop
dec
add
xlat
pop
test
dec
lcall
inc
fcoms
adc
fsubl
sbbl
pop
dec
test
imul
cmpsl
and
add
fisubrl
test
add
out
out
iret
stos
pop
lock
outsb
popa
and
push
push
mov
fcmovb
fiaddl
pop
in
pop
insb
ret
fcmovb
xchg
pop
pop
xchg
inc
xor
jl
push
add
psubsw
sbb
sarl
push
jg
das
adc
outsl
addr16
in
fcompl
xchg
jne
insl
outsb
das
pop
rorb
mov
imul
das
pop
inc
push
adc
jo
inc
or
cwtl
push
hlt
xor
insl
loope
push
xchg
enter
pop
outsl
pop
and
in
sbb
adc
sbb
adc
add
mov
adc
les
pop
or
xchg
mov
sbb
pop
addb
ficoms
and
xchg
in
jb
js
dec
sub
les
loope
inc
mov
je
enter
push
je
cmp
out
lahf
aaa
js
mov
pop
clc
push
dec
inc
push
dec
iret
inc
ja
ret
add
adc
cld
outsl
sbb
andl
cli
xor
cmp
inc
jl
jl,pn
inc
sahf
inc
fsubs
push
fdivrl
or
jg
jl
push
or
por
push
mov
jl
dec
dec
jecxz
push
push
in
mov
push
mov
pop
mov
bound
xchg
or
jb
sub
and
mov
shr
xor
sbb
pushf
mov
jmp
bound
adc
adc
popa
cmp
icebp
and
jbe
fstl
loop
insb
aaa
or
fdivs
cmp
or
add
pop
jns
or
xor
push
or
sub
gs
adc
imul
and
adc
xchg
pop
push
inc
or
in
inc
cmova
je
inc
repnz
cmpsl
or
push
mov
aas
fiaddl
push
lods
lods
pop
xchg
jo
jns
enter
mov
addr16
popa
push
stc
iret
or
mov
dec
inc
arpl
cld
popl
add
lcall
pop
shrl
inc
jp
push
mov
push
pop
dec
cmpsb
arpl
ss
mov
movsb
rclb
xchg
outsb
pop
xor
ficompl
inc
data16
mov
adc
enter
ret
fs
or
inc
mov
imul
data16
or
xchg
fcoml
jg
jnp
lock
inc
popa
jb
dec
int3
sbb
movups
xor
insl
push
cs
in
dec
add
movsl
das
test
rorl
popa
mov
imul
pop
xor
test
iret
push
mov
adc
push
inc
insl
jae
mov
and
outsb
ja
add
test
xor
sub
popa
jmp
rorl
pushl
jno
dec
in
sbb
xchg
push
daa
test
inc
imul
pop
inc
out
in
push
jg
dec
jle
sub
pop
or
movsb
or
add
mov
push
xor
lahf
pushw
xchg
in
loop
mov
andb
add
iret
ret
jo
mov
jo
iret
aaa
push
pop
push
mov
cmpb
fisubrs
jno
call
insl
shrb
pop
fists
push
fisttps
imul
lds
push
mov
sub
xor
mul
addr16
mov
pusha
out
das
adc
inc
lret
mov
lds
adc
adc
xchg
jbe
movsb
pop
test
adc
push
xor
addr16
fisubl
test
or
push
jo
fisubl
cmp
aaa
push
xchg
inc
mov
and
call
xchg
push
mov
stos
adc
cmpsl
sub
jne
xchg
jae
and
push
push
jg
xor
test
iret
lds
movl
pop
pop
ja
imul
or
outsl
jb
arpl
pusha
xor
xor
lea
sbb
push
adc
lods
pop
pop
test
mov
xor
pop
andb
adc
and
loope
outsb
push
dec
push
inc
imul
mov
arpl
pusha
rorl
out
lea
out
js
pop
in
and
or
adc
dec
arpl
outsl
sbb
or
or
in
jae
add
fldcw
push
imul
test
cmpsl
adc
adc
in
add
imul
addr16
dec
test
mov
push
nop
fmuls
xchg
and
sbb
daa
push
dec
rorb
cmpsl
push
push
dec
sub
mov
adc
je
xorl
sbb
lock
out
pop
test
sbbb
das
movsl
loopne
test
es
das
xchg
sbb
inc
push
rcpps
imul
cmp
imul
push
push
test
addr16
aam
xchg
imul
movsb
outsl
pop
mov
scas
into
rcrb
lcall
inc
adc
lret
mov
adc
mov
in
push
in
adc
fs
add
pop
xchg
push
pushf
push
inc
mov
push
movsl
idivl
imul
pop
mov
js
in
pushf
ficomps
insb
fldl
jb
testl
scas
and
or
dec
adc
or
add
and
pushf
outsl
and
inc
and
inc
xor
rcll
sbb
pop
insb
pushf
cmp
stos
cmp
mov
pop
add
dec
outsb
into
or
mov
movb
hlt
movsl
dec
push
fnstsw
push
push
cwtl
mov
ja
scas
sar
jne
ljmp
mov
push
push
adc
xchg
jl
push
pop
jne
xchg
out
fwait
test
lds
iret
pop
cmp
pusha
in
mov
dec
and
add
sbb
sbb
jno
call
inc
jmp
pop
pop
add
aaa
fmul
cmpsl
pushf
stos
imul
rclb
outsb
inc
cmpb
mov
dec
cmp
ljmp
jo
aam
and
scas
enter
push
inc
or
or
in
mov
push
xor
popa
arpl
cmpsb
negb
push
or
push
imul
mov
gs
and
dec
cwtl
sub
mov
ffree
das
jl
add
pop
jl
hlt
faddp
push
loopne
pusha
das
int3
lahf
inc
int
nop
xchg
lahf
fcomps
test
push
aaa
incl
out
lcall
xor
imull
jo
mov
insb
or
inc
andb
lock
pop
pop
sub
push
xor
jae
in
sbb
pop
mov
add
lock
xchg
pop
pop
pop
sahf
or
sub
sub
mov
or
inc
pop
pop
lods
push
inc
or
ja
fistpl
mov
pop
dec
push
or
imul
push
sbb
dec
add
inc
push
sbb
xchg
dec
inc
adc
test
push
insb
je
orl
push
out
mov
lret
fwait
addr16
pop
mov
mov
dec
or
pop
xor
pusha
mov
jmp
or
addl
sub
sbb
cmp
fsts
cmp
movsl
push
add
rol
xchg
push
add
mov
or
dec
and
clc
dec
dec
xor
negb
adc
pop
xchg
mov
jg
ret
sbb
test
test
sarl
ficoml
dec
dec
pusha
pop
pop
pop
push
jmp
cmc
sbb
aas
movsb
add
ret
pop
and
adc
mov
lahf
loopne
mov
xchg
xchg
inc
out
movsb
add
inc
sbb
mov
pop
in
ret
adc
out
sbb
mov
rolb
movsb
push
sbb
jmp
test
pushf
or
xchg
pop
sub
jb
dec
daa
sbb
pop
push
mov
push
cmpsl
pop
gs
and
sti
ret
pop
dec
dec
pop
adc
bound
inc
popa
dec
negl
add
sub
addr16
rcr
pop
dec
outsb
js
jae
lea
cmp
pop
sbb
in
push
outsl
pop
or
and
xchg
sti
hlt
xchg
adc
shrb
mov
jl
insl
punpckhbw
sarb
pushf
or
mov
cmp
sub
outsl
dec
fst
push
and
lods
pusha
lcall
pop
and
mov
wrmsr
test
and
pop
push
imul
insb
roll
push
push
adc
arpl
test
cmp
inc
in
mov
out
sbbl
mov
in
mov
cmp
iret
fcompl
iret
enter
mov
xor
cmp
enter
cmpsb
les
push
orb
jns
mov
movsb
lods
push
cmp
out
lret
mov
push
push
inc
outsb
sub
mov
nop
outsb
adc
cmp
filds
push
lods
mov
pusha
ja
loope
movsb
mov
lock
insb
rcrb
mov
out
jge
cmp
mov
add
push
out
andb
aad
jo
mov
movsl
inc
dec
fisttpl
and
and
cmp
dec
js
lods
shll
inc
add
jns
jle
ret
fs
mov
pop
jl
jno,pn
mov
pop
jg
add
jbe
movb
mov
fstps
or
xor
call
xor
clc
neg
sbb
mull
dec
sub
mov
push
sar
or
push
push
ret
sub
and
gs
lret
fcoms
xor
xchg
mov
mov
notb
int3
sbb
mov
inc
mov
adcl
dec
in
enter
mov
sbb
or
enter
add
sbb
fmul
fs
xor
adcl
movsl
int3
or
xchg
insb
sbb
iret
dec
orl
imul
jmp
daa
push
sub
dec
or
popa
pop
insb
mov
push
push
das
push
xchg
ret
sbb
and
xchg
inc
push
pop
addb
stos
das
pop
pop
push
dec
add
daa
cltd
adc
lds
fistpll
inc
pop
jb
inc
test
dec
test
sub
out
pushf
push
add
dec
loope
pop
iret
or
lahf
or
test
add
jb
ret
inc
scas
test
push
insl
bound
pop
or
or
mov
leave
jge
add
addb
lret
or
fistpll
add
add
pop
pop
cltd
or
clc
mov
bound
insb
sbb
rolb
shrb
inc
test
int3
popf
inc
popa
mov
pop
inc
dec
adc
add
shll
notl
adc
or
repz
mov
aam
mov
sbb
jbe
test
out
push
jo
jnp
roll
outsb
sub
adc
mov
adc
les
les
or
fcompl
xchg
xchg
jno
mov
outsl
cmp
in
jne
out
or
das
or
xchg
ret
adc
in
loopne
or
xchg
dec
push
stos
pusha
in
and
ds
inc
cld
add
add
cmp
push
scas
fdivrl
or
pop
inc
push
jo
inc
mov
shrb
sahf
out
sahf
push
je
test
shlb
jns
jns
enter
rcl
push
mov
les
in
loopne
test
loopne
test
lods
repz
jnp
scas
jo
les
mov
lods
xchg
mov
sbb
xor
jg
movb
mov
cld
inc
jg
cmp
fstpt
jmp
into
hlt
div
mov
aam
nop
cmc
inc
aaa
inc
and
pop
xchg
addb
adc
in
jnp
mov
sub
pop
sub
push
clc
xor
clc
push
mov
icebp
cmp
imul
push
jo
sbb
pop
movsl
push
mov
js
dec
xchg
xchg
test
imul
cmp
rcrb
dec
les
inc
scas
add
out
or
jns
dec
cmp
add
add
movswl
jle
jmp
adc
imull
push
sbbb
sbb
scas
dec
cwtl
test
inc
mov
add
push
cli
inc
orl
fistpl
cmp
repnz
mov
inc
lea
sahf
or
gs
xor
add
pop
cmpsl
adc
mov
cmp
push
hlt
or
insl
movsb
pusha
xchg
inc
cmp
mov
or
inc
outsl
push
xchg
aam
or
outsl
add
xor
pop
lods
push
pop
hlt
cmp
xchg
scas
gs
lods
arpl
push
rorb
aam
paddsb
std
mov
mov
adc
cmp
lods
or
stc
sbb
cmp
stos
inc
mov
push
push
outsl
cltd
and
out
cmp
fs
adc
push
or
pop
lea
aaa
push
lock
js
sti
out
adc
jae
out
subl
mov
je
pop
push
mov
push
adc
xor
mov
inc
test
sbb
inc
test
inc
or
rclb
cmp
popa
cmp
pop
and
mov
test
ficompl
outsl
mov
mov
mov
rolb
sahf
imul
mov
fildl
jns
iret
push
push
inc
adc
inc
mov
sbb
rorb
cmp
jp
cmp
inc
enter
xor
add
dec
pop
or
out
add
cmc
inc
mov
cld
add
out
add
iret
lds
or
xchg
pop
test
inc
shrl
testl
push
sub
rolb
mov
xor
or
mov
push
mov
and
dec
in
mov
jo
add
imul
jmp
add
xchg
add
sub
dec
sahf
aam
inc
jbe
rclb
jo
cltd
dec
ljmp
mov
enter
cwtl
or
add
lods
inc
jmp
or
xchg
inc
mov
call
sub
adc
xchg
ret
nop
loopne
decb
jo
pop
outsl
mov
fdivrl
push
cmpb
jo
out
or
inc
inc
adc
es
jle
push
orb
adc
mov
xor
je
imul
cmp
inc
pushf
sub
push
xor
add
and
jecxz
mov
fcomps
popf
sbb
mov
adc
inc
outsl
mov
sbb
sub
sbb
int
enter
enter
add
sahf
mov
pop
jo
in
push
scas
inc
sbb
inc
sti
es
xor
push
or
push
nop
pop
pop
and
mov
or
inc
xchg
xchg
pusha
mov
xchg
aam
or
enter
pop
and
cwtl
mov
pop
adc
nop
sbb
sbb
or
mov
imul
and
mov
pop
or
je
rcrl
xchg
jo
out
or
jo
jo
add
xchg
outsb
sarb
inc
mov
in
adc
dec
pop
dec
mov
inc
xchg
mov
pop
out
fstpt
mov
dec
bound
mov
js
adc
loopne
inc
in
clc
jg
xor
xor
sbb
pop
and
sbb
inc
dec
dec
dec
dec
dec
dec
dec
dec
test
sarb
push
push
pop
pop
pop
lahf
dec
adc
sbb
testb
in
fsts
inc
jge
cmpsb
or
std
or
mov
movsb
fcompl
inc
adc
push
add
mov
xchg
inc
jnp
xor
dec
dec
xor
test
jne
push
testb
repnz
add
pop
dec
or
fimull
xor
jb
stc
sub
jmp
shl
and
or
jbe
xchg
push
push
xor
sbb
jno
xchg
pop
sbb
test
in
mov
rclb
clc
sub
push
or
je
push
xor
sti
or
orb
test
sbb
sub
or
cmpsb
jge
fwait
jns
mov
sbbb
nop
test
mov
outsb
nop
jno
inc
jne
xlat
cmp
mov
add
jl
cltd
jg
jmp
sub
xchg
js
or
ja
ret
cmp
inc
sbb
dec
pusha
sub
call
outsl
test
clc
pushf
mov
mov
fimull
clc
mov
test
adc
dec
push
and
mov
in
sub
ds
inc
add
orb
sti
fstps
cmpsb
adc
pop
xchg
sti
nop
dec
dec
ss
hlt
sbbl
imull
dec
cmp
push
cli
xor
test
add
nop
dec
loopne
jae
leave
imul
rclb
mov
add
sbb
add
mov
movsb
add
jae
add
nop
ret
adc
sub
jl
movsl
outsl
mov
imul
fs
orw
out
dec
in
mov
int
in
mov
stos
xor
popl
mov
push
lods
dec
fcmovnb
test
ret
mov
jne
cmp
inc
pushf
and
sub
test
or
adc
jge
pop
cli
idiv
jmp
inc
call
jne
out
pop
adc
jno
clc
mov
inc
xchg
sbbb
sbb
dec
loopne
popl
push
in
shll
add
mov
push
rclb
inc
mov
jmp
mov
cmp
fists
push
out
sub
cmp
clc
fnsave
sbb
pushl
fdivs
mov
clc
add
or
cmp
jg
pop
sub
adcb
push
and
add
imul
rolb
jnp
push
mov
outsb
ljmp
mov
adc
adc
jl
xor
insb
jmp
das
add
pop
cmp
adc
jmp
jecxz
add
cmp
adc
fisttpl
pusha
insb
les
push
pop
xor
jmp
push
fidivrs
xor
dec
aaa
sub
lcall
xchg
mov
in
in
fists
in
aam
and
leave
jbe
adc
dec
adc
jmp
add
pop
add
push
dec
fadd
test
add
outsl
or
stos
adcb
or
push
sbb
and
inc
les
dec
in
enter
mov
and
ret
mov
push
sti
add
js
sub
mov
adc
add
ss
push
inc
cmp
leave
in
cmp
cmp
sbb
ss
dec
jl
cmp
nop
pop
fs
and
mov
jl
pop
bound
add
cmpb
leave
repz
out
fldcw
sbb
insl
cmpb
ret
gs
inc
pop
adc
push
xchg
or
sbb
inc
scas
xchg
fistpl
pusha
push
lock
js
movsl
xchg
pusha
shl
push
aaa
add
popf
adc
lock
movsl
and
aam
aad
jb
adc
clc
inc
sbb
sub
lret
pop
imul
pop
cmp
mov
in
jbe
loop
sub
jnp
dec
mov
jo
aaa
adc
jns
cmp
cltd
or
sbb
cmp
pop
cmp
jecxz
xchg
pusha
aas
dec
rolb
cmp
jg
adc
ffreep
nop
fwait
adc
ja
clc
in
pop
addr16
cmp
pusha
jo
inc
jl
lahf
inc
clc
inc
add
cmp
add
lock
aas
jp
add
lock
movl
pop
jb
arpl
pop
loopne
insl
dec
lods
mov
inc
and
push
outsb
addl
mov
out
sbb
add
ljmp
and
or
dec
jg
cmpl
lock
fcomps
cmp
fadd
test
mov
movsl
jo
push
js
inc
push
data16
adc
adc
lods
jo
dec
and
adc
xor
idivl
adc
pop
cmpb
clc
sub
xor
pop
lock
arpl
imul
mov
cmpb
cmpw
inc
mov
or
pop
jnp
js
xchg
cmc
mov
adc
and
out
or
adc
mov
sub
and
cmp
es
cmpl
andl
popf
fldl
js
sub
or
in
mov
pop
lea
pop
fidivl
inc
sub
mov
push
dec
adc
or
or
inc
jge
lret
mov
ret
subl
aas
repnz
ror
das
out
addr16
stos
xor
fidivl
cmpsb
shlb
dec
inc
ret
adc
dec
subl
xor
pusha
or
add
add
add
pushf
loopne
mov
or
lea
ja
in
or
cs
testl
adc
sbb
je
xchg
fwait
mov
cmp
int3
jb
add
pop
pushf
shlb
inc
fcompl
adc
inc
push
and
adc
push
mov
or
gs
mov
jae
test
sbb
push
cmp
aaa
cwtl
orb
fadds
lcall
push
or
push
in
jmp
gs
rcrb
push
aaa
add
sbb
mov
das
sub
arpl
mov
scas
dec
sti
mov
fadds
fdivl
repz
data16
lds
mov
adc
nopl
in
out
sbb
hlt
add
and
add
jb
cmpl
mov
push
cmc
mov
nop
jmp
movb
jmp
in
inc
dec
sbb
cmc
xor
nop
pop
push
testb
adc
je
out
or
stos
insb
shlb
cltd
rcl
hlt
mov
addr16
adc
mov
addr16
test
push
insb
outsl
adc
push
adc
icebp
jo
insl
cmpb
pop
subb
mov
testb
add
in
movlps
movb
nop
mov
xchg
insb
push
mov
jae
pop
and
add
xor
mov
pop
push
adc
or
jnp
dec
add
mov
inc
fsubrs
sub
pop
scas
dec
data16
push
dec
ss
mov
movsb
xor
jo
and
mov
dec
or
inc
addr16
cmpsl
or
sub
gs
rclb
mov
pop
add
sbb
fldenv
loopne
or
dec
adc
push
lods
inc
cmp
jge
aad
mov
pop
aas
jae
mov
repnz
shll
or
mov
leave
add
cmp
sub
or
mov
or
cmp
ja
add
or
xor
mov
lock
data16
adc
push
in
xchg
mov
jecxz
sbb
and
pop
fstl
repnz
in
inc
adc
fs
rclb
sub
cmp
loope
divb
jecxz
mov
ds
push
and
dec
sub
cmpl
movl
or
push
js
dec
jl
jnp
ja
rcrl
mov
pushl
outsb
fwait
mov
mov
lock
loopne
jge
movsl
add
push
dec
loopne
cmpsb
call
inc
and
sarb
ret
leave
pop
mov
sbb
js
stos
popa
fstpl
mov
sbb
jl
cli
push
outsl
sbb
add
dec
sbb
sub
sub
dec
mov
push
pop
push
xchg
fistpl
shl
push
pop
mov
pop
jmp
je
mov
mov
and
mov
iret
imul
inc
and
adc
inc
push
and
sbb
sbb
lods
insb
xchg
cmpw
inc
sbb
push
movzbl
push
add
popf
adcl
nop
or
sbb
test
push
clc
rorl
and
test
pop
mov
pop
nop
and
inc
sbb
or
adc
addl
mov
or
push
jg
addl
dec
mov
imul
cmp
inc
mov
into
or
les
pushf
int
inc
mov
mov
dec
pushf
lret
pop
and
mov
inc
xchg
int3
adc
sbb
pop
jg
and
movsb
dec
pop
cmp
fs
mov
xchg
mov
es
lock
sub
mov
inc
rolb
or
adc
in
enter
lds
push
scas
arpl
and
outsl
push
sbb
push
addr16
lock
aad
pop
addr16
movsb
mov
je
dec
imul
ret
cltd
jbe
roll
push
adc
rcl
lret
sub
jmp
pop
test
jp
call
jno
or
jmp
mov
inc
int3
pushf
adc
fldpi
imul
cmp
cmp
adcb
add
fmul
push
rolb
lret
mov
mov
test
xor
jecxz
push
clc
xchg
cmc
aam
adc
lsl
add
mov
sub
outsl
jmp
adcb
push
movsb
add
fisubrs
int3
push
jle
ret
ljmp
test
push
jle
jmp
aam
mov
in
cmp
inc
fsubl
cmpsb
add
xor
jno
xor
jle
mov
xchg
scas
loop
inc
call
sub
popa
mov
sbb
sar
mov
lahf
and
mov
and
jo
mov
loop
mov
sbb
pusha
js
lock
in
push
adc
or
mov
add
mov
jmp
and
sub
aam
rol
sub
mov
push
mov
jle
aam
movb
sarb
pop
pop
and
sahf
adc
imul
mov
push
mov
jo
mov
pop
xchg
pop
cmp
push
inc
jle
jbe
hlt
pusha
aam
pop
cmp
into
jg
xchg
lods
shlb
cmp
dec
mov
dec
adc
dec
jne
imul
push
push
ret
sub
dec
pop
push
leave
in
outsb
jnp
dec
cmp
out
jnp
shlb
imul
in
or
fmull
mov
adc
sar
add
aaa
shll
add
inc
inc
push
stos
push
pop
out
popf
bound
aad
enter
xor
stc
push
dec
movsl
ror
enter
ret
pop
sub
ret
inc
xchg
add
cmp
fldcw
aam
cmp
int
cmpsb
mov
adc
push
xchg
xor
xchg
push
aaa
dec
add
add
xchg
sub
je
dec
out
rclb
sub
sub
jnp
sti
in
sub
jle
sub
jb
add
add
jp
int
int
jne
in
and
pushf
aaa
je
jo
out
cmpsl
movsb
dec
dec
lea
dec
clc
xlat
int
add
add
sbb
sub
jp
and
stos
sub
pop
lods
and
lcall
xor
ljmp
push
fidivrs
xchg
lds
lret
je
cwtl
mov
and
fisubrs
pop
addl
pop
mov
dec
dec
pop
add
pop
push
push
push
popf
inc
dec
xchg
mov
inc
dec
or
or
push
rol
dec
jg
jbe
or
dec
enter
cpuid
inc
mov
lea
adc
pusha
ss
jg
cmpsl
enter
loop
pusha
or
push
xor
mov
pop
loop
lock
or
sub
sub
dec
mov
addps
cmpl
add
push
ficoml
xor
inc
fisttps
or
ds
and
sub
xchg
out
fsubs
xchg
adc
add
push
fadds
mov
sub
js
aam
pop
inc
and
sub
clc
por
fsubr
jae
lods
rolb
jl
mov
pop
ud2
adc
bound
mov
rorl
cmc
out
mov
inc
repnz
addb
add
mov
adc
add
mov
jno
dec
add
jns
push
ss
dec
aas
adc
push
mov
mov
sbb
pop
sbb
pop
adc
das
push
xlat
dec
mov
push
adc
xchg
lock
xchg
out
pop
add
call
xchg
insb
fbld
call
movsl
test
cld
dec
mov
mov
or
mov
cltd
pop
inc
cmp
test
jge
jl
or
aas
test
push
jo
push
lcall
and
and
ret
xor
add
cltd
mov
ret
push
add
sub
inc
mov
inc
xor
loopne
fsubrl
fsts
push
lods
movsl
pusha
pop
pusha
dec
sbb
adcl
int3
sahf
jns
popf
sub
or
jo
cmp
arpl
add
mov
cwtl
pop
insb
clc
dec
js
push
lea
adc
pop
and
push
and
imul
loope
jo
mov
movsb
inc
fmuls
fmull
xchg
jo
push
dec
jge
pop
push
fisttps
inc
adc
adc
test
xchg
lret
cltd
leave
push
lret
fldcw
gs
pop
lods
dec
jg
clc
jg
lahf
outsb
js
inc
sbb
lods
pushf
pop
mov
add
rcll
push
or
and
jno
sub
lret
and
mov
inc
push
sub
pmulhuw
rcl
inc
aad
xorb
pop
cmpsb
push
fmull
adc
cltd
inc
push
popf
fldt
sub
inc
lods
or
fwait
mov
inc
fsubs
push
inc
sub
inc
pop
sbb
mov
imul
imul
insl
bound
iret
pop
and
push
sbb
fsubrl
mov
inc
sub
add
int
fdiv
imul
scas
cmpsb
mov
loopne
repnz
jnp
and
add
add
jmp
aas
push
in
outsl
leave
fmuls
dec
add
in
and
xchg
pop
mov
popf
data16
pand
push
les
out
add
fucomi
jno
rolb
orl
aad
inc
nop
sub
sub
shr
cmc
pop
loope
sbb
ss
gs
push
mov
jmp
pop
or
mov
inc
fcmovne
shlb
in
dec
and
jns
mov
les
pop
xchg
pop
lcall
jl
lock
lea
lods
adc
add
js
mov
inc
ret
sbb
mov
pop
cld
push
mov
pop
hlt
arpl
adc
push
test
sbb
xor
pop
adc
adcb
mov
sti
je
loope
addr16
add
jne
mov
add
fsub
and
jnp
sbb
jne
add
adc
sbb
mov
in
sub
xor
out
call
adc
or
sub
xor
push
mov
mov
loopne
aad
cs
and
mov
mov
xchg
inc
pop
mov
push
inc
enter
fmuls
pop
enter
sbb
xchg
mov
in
sbb
fcomps
sub
push
xor
adc
lcall
xchg
subb
jmp
inc
cs
sub
sbb
xchg
lret
dec
clc
inc
and
ret
decl
jmp
push
orl
xchg
pushf
or
jns
jp
push
pop
lds
shlb
enter
or
jg
push
push
mov
sub
das
cmc
js
sub
movsl
inc
div
mov
ja
bound
sbb
mov
sub
add
inc
int
add
sbb
mov
pusha
mov
test
stos
cmp
adc
cmp
iret
mov
cmpb
inc
xor
es
sbb
je
fcoml
inc
mov
and
mov
jge
insl
fs
and
sbb
and
cmp
pop
jle
xchg
or
add
xor
mov
bound
les
xor
adc
popa
cmp
pop
mov
push
mov
and
sbbl
inc
xor
pop
adc
or
test
arpl
xchg
and
aas
and
loop
shrb
mov
and
adc
repnz
clc
add
jo
mov
push
out
and
mov
fs
sarb
js
subl
or
pop
mov
pop
addb
test
movl
mov
daa
sbb
xchg
inc
xchg
out
mov
dec
mov
jg
fsub
pop
jp
jns
dec
icebp
out
loopne
dec
add
jg
adc
mov
adc
add
sbb
inc
jne
loopne
ret
and
push
jle
sbb
inc
inc
bound
and
fcomps
push
jl
movsb
lcall
add
pop
or
clc
insl
or
pop
or
test
ret
mov
pop
hlt
xchg
loopne
or
pop
test
cmpsb
std
dec
arpl
add
loopne
push
test
movsl
mov
add
inc
or
dec
inc
pop
test
jecxz
dec
pusha
loopne
imul
and
jp
out
adc
push
xor
xor
jg
mov
loop
sbb
mov
mov
fmul
xchg
pushf
pushf
xlat
fcomp
lock
pop
test
jo
jmpw
adc
pop
add
mov
mov
test
xor
es
repz
xlat
jg
xlat
in
inc
cmp
and
push
add
lock
nop
loopne
addr16
pop
int3
add
lds
jg
push
enter
inc
pop
sti
cs
in
xchg
cmp
lds
fsubr
sub
les
add
and
push
ret
fs
in
les
imul
prefetch
or
pop
pop
fwait
fwait
cmp
sub
push
das
loopne
loop
icebp
rorb
push
packssdw
push
rcr
cltd
fldt
lret
inc
idivb
icebp
push
lcall
cld
mov
stos
jno
les
pop
jo
popa
stos
jg
inc
jne
and
imul
and
inc
lret
or
lea
loopne
dec
add
jecxz
add
gs
out
gs
inc
sbb
mov
ja
xor
push
sub
cmp
loope
mov
xor
loop
hlt
push
rorl
or
cmp
inc
mov
xor
or
adc
mov
inc
outsb
addr16
test
sahf
mov
cmp
fadds
subb
cmc
orb
cld
adc
pop
in
enter
jbe
andl
out
cmp
and
add
add
jmp
xchg
sahf
push
rolb
dec
jbe
stos
scas
inc
mov
add
cmp
ret
and
dec
jae
movsl
xor
dec
aam
xor
fs
sbb
or
sbb
push
mov
jb
cmp
inc
rcl
jo
inc
mov
mov
adc
cmp
or
testb
nop
jecxz
sbb
jbe
movb
add
insb
xor
stos
mov
stos
or
xchg
xchg
daa
loope
cmpsl
cmp
adc
push
lock
xor
adc
adc
jmp
add
rcll
pushf
outsl
inc
int3
mov
je
adc
add
cltd
inc
out
in
roll
jbe
mov
push
add
subl
cmpb
cs
xlat
pushf
add
imul
test
pop
push
dec
mov
or
cmp
mov
outsb
mov
xchg
mov
ds
inc
cvtdq2ps
push
inc
inc
xchg
and
mov
dec
je
outsb
stos
lods
ret
pop
push
sbb
mov
icebp
jg
push
xchg
and
dec
add
lock
lret
add
mov
inc
jb
add
dec
loopne
jae
or
inc
mov
and
imul
lret
popf
movsl
xlat
pop
pop
lods
pop
shll
aaa
ds
dec
pop
cmp
adc
push
lret
inc
xchg
and
test
int
cmp
movb
mov
add
mov
push
daa
test
loopne
inc
mov
cli
jle
cld
rcrb
inc
sub
out
xchg
push
pop
mov
xchg
xor
adc
pop
jnp
sub
inc
aas
jbe
and
push
and
adc
ss
stos
jg
das
inc
dec
add
pop
loop
inc
jge
das
pop
movl
push
js
pop
mov
lea
dec
adc
push
out
push
push
sbb
push
mov
or
lods
out
jmp
js
mov
lahf
jp
or
sahf
cmpb
jp
xchg
jne
xor
push
insb
xor
pop
iret
inc
mov
mov
test
sub
faddl
cmp
subl
out
mov
pop
jmp
add
sti
ret
call
sbb
loopne
and
push
cmovno
jo
pop
push
js
add
or
lret
insb
sub
stos
xor
lock
add
xor
jo
add
jo
test
test
xchg
pop
or
xor
xor
addb
lock
sar
xchg
jmp
or
test
push
ror
sbb
push
adc
mov
pop
push
xor
rcr
addr16
or
sbb
add
andb
inc
fwait
xlat
js
cs
je
fldl
adc
popf
pop
cmp
push
jg
incl
ljmp
inc
mov
std
and
call
mov
adc
ja
or
mov
inc
push
xchg
or
xor
dec
or
xchg
sarl
sbb
out
push
xchg
addr16
inc
dec
push
or
lea
mov
add
sbbl
clc
or
add
jo
add
xlat
aad
lret
push
fadd
and
enter
shlb
adc
lods
jmp
or
cmp
scas
test
in
ja
inc
lret
push
cmp
cmp
xchg
dec
nopl
fstpt
or
adc
mov
add
or
dec
xchg
mov
mov
push
xor
add
push
fs
xchg
pop
aas
loopne
cli
jne
aam
imul
cmp
push
jnp
fildll
fcoml
jb
inc
imul
pop
mov
test
aas
insb
jg
ljmp
xchg
jge
test
xor
sub
jle
add
xchg
nop
mov
xor
add
mov
xchg
xchg
stos
out
or
push
adc
shrl
adc
orb
mov
and
lods
inc
int3
add
dec
dec
in
or
cmp
sbb
aas
and
and
leave
inc
cmp
inc
jb
pop
cmp
and
leave
inc
or
cmp
pop
mov
xchg
jnp
jns
mov
jecxz
sarb
dec
adc
jp
adc
cmp
iret
fimuls
js
push
mov
mov
insl
icebp
xor
dec
jno
xlat
push
insb
jg
or
sub
lcall
out
jmp
cmp
daa
je
arpl
in
pusha
jmp
push
push
jmp
imul
and
rolb
into
sub
adc
inc
test
orb
pop
cmp
pop
add
sbb
vmread
push
push
adc
jb
mov
inc
enter
inc
or
pop
ficompl
or
inc
pop
sbb
xor
sub
pop
push
lcall
lods
cwtl
ret
adc
rorl
inc
dec
xchg
movsl
in
sbb
cmp
push
sbb
insl
pushf
xor
inc
and
sarb
inc
add
in
add
sbb
push
dec
test
fists
jno
incb
stos
shlb
dec
add
insl
sbb
pusha
and
lcall
jae
jae
rclb
addl
loope
sub
pop
pop
mov
sbb
xor
and
inc
xor
pop
movsb
scas
xchg
hlt
incb
dec
loope
ret
call
xlat
mov
imul
push
out
mov
fcompl
sbb
pop
push
fucomi
aaa
pushl
dec
inc
add
adc
inc
loop
mov
mov
add
icebp
mov
lods
nop
xor
pop
dec
mov
adc
and
sub
iret
lock
xlat
movsb
add
push
jne
xor
xor
add
mov
push
hlt
mov
sbb
jnp
adc
shrb
fcoml
adc
and
clc
or
fdivl
add
int3
xchg
ds
and
or
scas
les
dec
jnp
pop
mov
jp
push
xchg
stos
enter
add
jp
call
and
pop
dec
xor
jo
arpl
push
mov
pop
je
push
add
in
in
sbb
loop
repz
insb
and
pushf
les
or
mov
add
add
adc
cmpsb
dec
ds
aad
dec
pop
sub
fldcw
stos
out
inc
push
outsb
out
jp
push
ret
fnstsw
cld
xor
fnstenv
repnz
loopne
inc
sbb
mov
js
sub
sbb
fwait
shlb
sbb
loopne
dec
jae
mov
mov
in
cwtl
inc
and
mov
sbb
mov
fwait
cmp
xchg
in
xor
bound
insl
sub
enter
sbb
mov
pop
sub
imul
loopne
shr
adc
aad
test
mov
xor
mov
adc
pop
and
fldenv
ret
rcrl
cmc
mov
xchg
std
mov
xor
lds
jp
insb
or
push
pop
stos
add
pop
outsb
into
cli
arpl
lret
jne
push
sub
xor
dec
inc
cwtl
imul
call
push
mov
sub
movsb
adc
xor
into
or
out
mov
stos
pop
or
xchg
inc
je
mov
fisubl
push
aam
jo
pop
pop
jns
imul
mov
outsb
popa
fwait
lods
add
jg
repnz
xchg
cmp
mov
add
push
xchg
mov
shrb
push
and
inc
pop
movsl
repnz
mov
sbb
and
and
xor
cmpsl
sub
jl
inc
shll
je
sbb
mov
adc
inc
rolb
jmp
mov
push
ret
adc
pop
inc
sbbl
or
out
push
cmpb
movb
ret
subb
add
pop
jne
daa
push
sub
outsb
loope
movsb
pop
pusha
or
jle
aaa
dec
xchg
sbb
test
adc
dec
inc
jne
enter
bound
idivb
dec
pusha
adc
cmp
adc
or
aam
add
mov
adc
inc
cld
push
adc
mov
and
push
cmpsb
pop
cmp
adc
or
pop
cli
cmpl
or
mov
add
xor
outsb
jmp
mov
pop
jo
pop
imul
inc
inc
nop
inc
inc
adc
popa
push
mov
cmp
add
push
rclb
outsl
shrb
insb
and
and
fnstsw
pop
push
or
into
dec
push
inc
xor
fidivrs
pop
push
and
xchg
pop
push
inc
pop
inc
stc
inc
repnz
jo
pop
faddl
inc
or
mov
push
mov
lods
ret
xor
dec
loopne
iret
push
std
and
into
mov
pop
dec
sub
adc
xor
lret
sub
or
lock
mov
arpl
mov
xchg
jmp
adc
out
xor
add
and
xlat
pop
inc
and
shll
negl
fs
add
dec
fildll
shlb
jb
push
shrl
orl
pop
daa
cmp
pushl
mov
scas
je
add
or
out
rorl
xor
call
test
jg
ret
add
imul
sbb
fwait
adc
inc
aam
sbb
sub
shlb
ja
ret
inc
or
inc
xchg
add
cmp
aam
pop
add
add
dec
mov
out
out
mov
mov
push
cmp
xorl
into
aas
add
es
ret
cmp
ret
add
adc
or
dec
iret
loop
cltd
in
sbb
push
ljmp
inc
add
icebp
cld
sub
addr16
pop
xor
daa
popa
leave
or
fdivl
pop
xchg
ja
daa
sub
bswap
in
out
push
stc
mov
or
fsubl
aas
mov
pop
hlt
notb
mov
dec
lea
xchg
mov
pop
xchg
insl
testb
push
sarb
fwait
or
push
fsubl
rcrb
and
mov
fildll
cmp
pushf
xchg
mov
fdivr
roll
sub
add
insb
or
mov
movsb
imul
pop
add
sbb
xchg
jno
popf
xchg
dec
inc
mov
inc
imul
inc
aaa
pop
push
pop
nop
dec
sub
bound
bound
xor
adc
or
outsb
popa
jbe
jmp
dec
popa
jns
jne
jae
ja
and
add
add
fs
push
ret
gs
jb
jo
cli
ss
dec
popf
loopne
movsl
or
and
push
mov
cmp
sar
dec
dec
cmp
pop
and
inc
fwait
inc
popa
jl
jbe
inc
mov
cmp
fadd
adcb
add
les
nop
and
and
sub
push
decb
and
ret
sbb
xchg
xchg
les
jle
pop
hlt
daa
rcl
push
cmpsl
repnz
rorl
arpl
rorb
adc
mov
or
dec
sbb
jo
sub
push
add
jbe
rclb
test
daa
rorl
cli
mov
push
cli
and
add
lcall
jne
incl
cld
dec
mov
in
pop
push
mov
add
xor
test
add
popa
cs
jp
pop
nop
out
mov
shl
inc
mov
add
dec
sbb
xor
js
inc
pop
or
add
sub
xor
subb
push
lea
or
push
in
add
cltd
clc
cmp
cli
in
loop
loope
inc
pop
mov
loopne
push
hlt
push
adc
in
xchg
insb
cmc
int3
jae
shl
jge
or
outsb
mov
push
cli
bound
dec
dec
mov
cld
mov
add
xchg
fnsave
pop
arpl
adc
addr16
leave
mov
repz
mov
mov
push
or
and
mov
adc
add
add
mov
ja
sub
cmpl
rorl
loope
shll
and
cmpsl
mov
or
rep
or
sahf
sub
xchg
add
in
div
stos
nop
adcb
std
inc
jbe
ret
xor
pusha
loopne
mov
stos
xor
lahf
ss
ret
mov
cmp
or
xorb
cmpsl
fisttpll
call
imul
imul
mov
ret
aam
adc
orb
loope
add
mov
sbb
push
lahf
fdivr
xchg
movsb
dec
dec
pop
movb
inc
push
mov
sbb
add
mov
inc
or
mov
adc
outsb
loope
mov
or
sbb
test
sbb
adc
jecxz
inc
ret
sbb
xchg
pop
cmp
cmp
pop
testl
iret
mov
sbb
mov
mov
mov
testl
push
js
je
in
mov
push
adc
mov
and
das
fwait
js
or
inc
jecxz
fisttpll
and
pop
aam
test
hlt
inc
icebp
imul
mov
popf
lcall
sbb
sti
adc
cmpb
xchg
jmp
dec
int
pusha
xor
lock
or
jne
and
ds
arpl
xor
xor
pop
hlt
xor
sub
stos
pop
sbb
adc
and
pop
mov
aam
add
push
dec
mov
add
inc
dec
xor
gs
inc
dec
inc
dec
xor
sbb
pop
loopne
imulb
cmp
push
rolb
push
pop
sbb
sub
adc
mov
jnp
xchg
xchg
popa
pusha
std
test
je
push
or
mov
add
fldenv
add
xor
adc
add
cmp
pop
hlt
push
xor
movsl
mov
pop
push
cwtl
xchg
xchg
sarl
testb
push
add
sub
fadds
gs
outsl
jge
dec
xlat
lea
stos
xor
xchg
pusha
sahf
push
jg
lea
clc
xlat
and
adc
jne
mov
pop
jmp
pop
imul
xor
or
mov
or
sbb
adc
inc
mov
sbb
add
ds
xor
ljmp
sbb
clc
movsb
sbb
cli
dec
or
insb
jg
add
or
xchg
xchg
sbb
lock
loop
lahf
es
dec
test
push
js
mov
add
cltd
and
cmp
cmp
inc
sbb
dec
fildll
movsb
jmp
sbb
add
add
push
rclb
pop
sbb
jne
icebp
or
jl
adc
cltd
ja
cmp
jne
decw
scas
add
in
or
gs
jb
jnp,pt
rcr
popf
jmp
and
sub
or
adc
add
xchg
sbb
push
fwait
js
adc
push
in
inc
imul
aaa
in
mov
cmpsl
xchg
les
mov
int3
mov
stc
and
lea
mov
ja
clc
jmp
xchg
inc
cwtl
cmp
cltd
jo
enter
popa
adc
sbb
push
mov
fsubrl
ds
or
cli
or
mov
jmp
sub
pop
popf
xor
pop
movsl
loopne
xlat
test
xor
mov
add
fsubs
dec
add
cmc
mov
add
sbb
cmp
movsb
mov
mov
pop
cmove
loopne
pop
push
sbb
push
test
adc
inc
rcll
rorb
push
cmpsb
cmp
push
jo
into
cmpsb
pushw
xchg
hlt
xor
xor
cmp
xor
jg
adcb
fiaddl
inc
cmp
punpcklwd
cwtl
push
push
xlat
push
inc
rorb
mov
add
push
cmp
mov
rcr
inc
xchg
jne
arpl
cmp
jno
mov
lods
loopne
loopne
and
pop
lcall
or
std
push
cmp
mov
adc
outsl
inc
aam
dec
push
or
dec
fadds
movsb
cmp
add
cmova
stos
jp
mov
adc
and
inc
adc
pop
adc
shrb
xchg
cmp
inc
and
call
cmpsb
lods
fimull
aas
xchg
daa
sub
in
mov
inc
sub
sub
je
inc
pop
add
out
and
xchg
es
in
ret
fidivs
push
add
clc
push
cmp
rcrb
push
cltd
or
loop
lcall
pushf
add
add
jl
jl
add
inc
xlat
test
inc
jno
out
push
pop
movsl
or
adc
scas
adcb
cmp
add
push
adc
lahf
movsb
push
pop
dec
jecxz
and
xor
shr
pop
sbb
push
sbb
adc
mov
mov
pop
and
sub
sub
jmp
add
cli
or
or
sub
shl
and
xchg
mov
ret
xor
sahf
inc
push
loopne
pop
jge
popa
cmp
adc
psubusw
xchg
push
sbb
sub
mov
or
pop
testb
inc
or
call
shlb
ds
pusha
ret
cmp
testl
pop
lcall
cmc
mov
ret
daa
popf
add
fdivr
stos
sbb
lods
daa
test
push
pop
cmp
mov
lock
push
sbb
or
adc
out
testl
sub
loope
add
lea
xchg
add
lods
out
cwtl
and
mov
xor
mov
jmp
ficomps
popa
push
add
test
in
pop
rclb
add
cli
aam
mov
pop
leave
jbe
test
out
sbb
dec
leave
cmp
dec
lods
push
or
inc
inc
repz
pop
inc
fmuls
xchg
xchg
cmp
pop
ret
xchg
in
loope
xor
push
outsb
cmp
call
stos
scas
push
dec
mov
jo
movsb
cmpsl
push
xchg
pusha
jo
les
mov
movsl
jbe
sbb
add
push
dec
push
push
lds
xchg
outsb
fninit
inc
cltd
and
addl
push
push
xor
out
ret
pop
push
push
push
jo
jmp
std
rorb
pop
out
dec
and
mov
xor
inc
pop
divl
les
inc
pop
push
inc
pop
lcall
push
nop
jo
loopne
cmp
push
lock
movb
sbb
imul
lods
add
adc
add
fs
mov
fidivs
pusha
pusha
push
ja
inc
push
sbb
sub
lahf
mov
lock
cmp
cmp
xor
loope
cmpsl
test
adc
in
jg
xor
push
or
sahf
cmp
movsb
cwtl
sub
adc
cltd
or
shr
add
call
adc
pop
mov
inc
int3
testl
lock
or
inc
xor
push
cwtl
add
mov
xor
mov
gs
popf
cmc
aam
add
or
push
xchg
or
sub
push
sbb
test
in
daa
mov
sbb
shl
or
inc
xchg
push
push
add
dec
movsl
and
pop
cmp
or
pop
out
adc
in
adc
mov
pop
pop
inc
outsb
pop
xchg
cmp
add
or
dec
push
sbb
fs
nop
pop
call
jmp
jbe
inc
pop
sbb
jne
xchg
or
and
movsl
push
jmp
or
and
sbb
inc
or
xor
fwait
jmp
into
and
sbb
dec
add
or
mov
aaa
pop
push
and
sbb
jmp
sbb
add
pop
xchg
out
std
dec
js
mov
cli
shld
fdivrl
push
inc
scas
push
gs
stc
bnd
fsubs
mov
xchg
pop
test
sub
ret
aad
dec
insb
sub
dec
push
sub
rclb
aam
insl
add
out
cmp
setge
mov
fadds
shr
push
sub
xor
push
add
imul
add
mov
xlat
inc
mov
das
test
push
sbb
pop
inc
push
repz
cmpb
jle
cwtl
aam
nop
and
int3
pop
mov
scas
sti
jl
mov
popf
pop
adc
and
es
test
push
xchg
rorb
cmp
push
jbe
push
or
jge
mov
and
fsubrs
push
pushf
pop
and
xchg
in
clc
jle
lock
cmpsb
sbb
jge
dec
lea
push
mov
loop
and
adc
inc
rclb
testl
mov
inc
push
repz
cmp
add
jns
xchg
lods
sub
les
rorb
insb
and
jnp
jns
dec
sbb
sbb
dec
jle
dec
iret
repz
in
pushf
or
or
out
push
js
in
loopne
in
fildll
and
cmp
imul
enter
pop
mov
add
adc
outsl
loopne
jno
cmp
add
push
cmp
outsl
jb
xchg
sbb
push
add
push
xor
adc
sbb
sub
popa
or
cmovp
add
stos
jbe
or
add
or
or
or
fisttpll
out
ja
cmp
push
push
lock
inc
mov
les
jl
sarl
push
lods
dec
push
or
push
cwtl
push
imul
push
sbb
or
cmp
pop
and
movl
cwtl
dec
add
cmp
mov
ds
test
inc
test
cmpsb
in
xor
pusha
adc
xor
gs
sbb
pop
xor
push
and
test
pop
push
into
pop
and
loopne
dec
xchg
push
leave
xchg
adc
cld
push
loopne
sub
adc
pop
ret
repnz
adc
adc
dec
and
push
cmpsl
fs
js
xor
add
mov
pop
mov
cld
push
jnp
dec
leave
mov
cs
push
aam
cmp
iret
call
inc
jnp
adc
pop
imul
pop
sub
adc
leave
inc
dec
adc
dec
inc
daa
popl
add
ret
inc
push
add
rorb
loopne
sub
add
mov
ds
push
ss
enter
cs
push
and
mov
movl
orl
inc
pop
mov
lock
aam
mov
pusha
adc
jns
xchg
adc
cmp
addl
mov
dec
pop
cmp
jo
rcll
push
outsl
in
cmp
shrb
imul
push
cld
das
int3
imul
push
sub
push
sub
iret
imul
push
jo
fdivp
cmp
xchg
enter
push
jnp
jns
sarb
fcoml
inc
jle
fidivrs
mov
aam
push
lock
jecxz
adc
popa
adc
nop
adc
xchg
lcall
add
test
int
rclb
in
or
or
push
jmp
insl
push
jg
or
push
pop
lods
mov
inc
std
xchg
push
cmp
insl
popa
pop
push
dec
sbb
inc
adc
repnz
or
rcrb
xchg
les
mov
or
mov
fs
das
or
xchg
pusha
adc
xchg
mov
dec
into
add
jbe
scas
popf
and
icebp
sar
data16
or
pop
repnz
negl
inc
testb
fcoms
inc
lock
aas
dec
sub
dec
in
add
cmovs
push
fs
pop
cmp
or
cs
cwtl
pop
push
nop
int3
add
push
or
pusha
cmp
popa
imul
out
jne
or
pop
or
jne
rcll
pop
fcomps
ret
mov
nop
in
or
psraw
mov
mov
sbb
cmp
sbbb
and
movsb
sbb
fsubs
int
pop
subl
std
shrl
dec
movl
inc
xchg
add
adc
xor
push
and
xor
les
pop
sarb
inc
or
push
or
lea
cmpsb
fnstcw
mov
adc
mov
ss
lea
jno
jbe
sub
lds
xchg
mov
js
int3
pop
mov
fbstp
cmp
push
in
push
fdivs
fimuls
std
xchg
movl
roll
cmp
or
subb
push
mov
add
cmp
jnp
push
add
cmp
dec
ja
jmp
aas
adc
and
push
inc
pop
fwait
sbb
outsb
pmulhuw
aam
sbb
cs
push
xchg
das
push
in
mov
fs
fisttpll
adc
movl
xor
enter
dec
es
add
add
das
in
add
and
add
add
push
sbb
pushf
and
add
lods
dec
adc
pop
add
pop
movl
xor
mov
setg
and
jno
inc
push
andl
pop
movl
pop
mov
mov
jmp
daa
and
pop
inc
outsb
sbb
or
jo
rclb
inc
jecxz
add
mov
aas
mov
mov
mov
and
pop
jae
add
int
lods
insb
jnp
jg
ja
dec
mov
imul
inc
fadds
pop
or
sub
or
cli
xchg
sbb
mov
sub
es
or
push
in
pop
mov
mov
xchg
es
or
cmp
je
sub
xchg
inc
call
es
ja
mov
enter
in
adc
push
add
or
iret
sbb
adcl
loopne
lea
or
bound
and
jmp
ja
and
bswap
mov
fildll
push
xlat
pop
xchg
push
dec
cmp
adc
stos
jb
or
sbb
movsl
or
bound
xor
fsts
mov
or
sub
bound
mov
jo
cwtl
mov
or
popa
add
push
dec
das
mov
add
xor
mov
sahf
lea
xchg
add
push
mov
cmp
aad
mov
xor
xchg
dec
xchg
call
xchg
fists
dec
and
out
add
daa
out
and
fs
and
dec
pop
rcrl
or
loopne
ja
gs
fists
add
or
stos
and
popa
add
lret
cmpxchg
add
iret
push
lods
shlb
sub
push
mov
push
push
jo
ja
adc
repz
out
rorb
jb
insb
add
sbb
lea
push
dec
cmp
jns
pop
outsb
ds
add
inc
loopne,pt
or
cmpsb
dec
cmp
mov
movsl
or
lods
xchg
jno
inc
mov
cmp
inc
xchg
clc
mov
outsl
lods
js
enter
jge
dec
sahf
fadds
cwtl
cmpsl
jbe
adc
jo
repz
push
js
cmpb
int
insb
mov
or
sbb
jb
push
cmp
test
adc
xor
call
add
add
push
add
inc
add
add
incl
or
pop
add
or
or
mov
mov
mov
mov
mov
mov
mov
mull
mov
mov
mov
mov
mov
dec
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fadd
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
loope
fwait
mov
int3
dec
dec
mov
mov
ror
dec
inc
bound
pushf
fwait
out
jns
xchg
inc
push
push
or
mov
jns
jge
mov
int3
test
int
mov
push
sbb
negl
sub
push
je
cmp
out
inc
add
sbb
jle
test
sahf
in
fnstenv
jp
xchg
push
nop
lcall
mov
mov
ja
cld
int
jge
push
rorb
push
fsubl
jno
out
ds
mov
push
inc
movsl
call
imul
in
pushf
push
popf
push
imulb
dec
nop
sbb
and
lock
subl
xor
or
ss
push
cs
xchg
ja
jbe
jo
es
lea
sbb
dec
sbb
decl
repz
push
mov
add
adc
nop
inc
jg
xchg
out
sbb
in
jne
add
sahf
inc
jo
and
cmp
add
inc
aas
dec
fadds
out
lock
push
leave
xor
ret
sub
addb
xchg
mov
mov
test
add
or
jo
pop
mov
and
scas
pop
mov
mov
pop
aaa
sbb
out
nop
pusha
dec
xchg
inc
pop
pop
or
mov
mov
nop
test
cmp
xor
xchg
enter
cmc
ds
sbb
inc
adc
xor
xchg
les
leave
and
adc
push
popf
rcll
mov
dec
fsubl
hlt
xchg
dec
pop
pop
mov
addb
or
imul
adc
ret
jns
sbb
adc
jo
movsl
push
cmp
xchg
andl
mov
add
mov
popa
enter
xor
fcoml
mov
rorb
cmp
ss
sub
pop
adc
pop
push
js
dec
xchg
inc
sbb
pop
pop
movsb
xor
and
js
mov
or
sbb
or
cmpsl
call
nop
les
pop
pushf
aas
iret
xor
add
pop
mov
dec
adc
decl
lock
pop
adc
mov
push
es
mov
lock
incl
mov
or
push
pop
outsb
push
incb
mov
cli
call
mov
jb
inc
hlt
int
sti
push
cld
push
cld
divb
mov
jl
push
les
fldcw
inc
mov
dec
mov
ret
xor
adc
aad
clc
outsb
mov
shld
es
cld
pushf
data16
or
mov
push
loopne
mov
rorb
adc
dec
add
cmp
sub
sub
xchg
mov
add
add
add
sahf
pusha
and
add
jo
jp
adc
sbb
sbb
loope
fbld
add
mov
mov
mov
mov
mov
or
adc
mov
dec
mov
mov
mov
mov
mov
ljmp
cs
mov
mov
mov
incl
mov
sub
dec
mov
mov
mov
mov
dec
adc
decl
dec
in
inc
inc
inc
inc
inc
inc
inc
jg
out
and
mov
pop
test
inc
aam
push
mov
stc
ret
fbstp
pushl
sbb
fcomi
cmp
imul
dec
jo
loopne
jns
out
fbld
insb
shl
lcall
lods
enter
int
jmp
pop
in
jl
in
mov
mov
pushw
hlt
adc
jle
fcomi
pushf
cli
aam
xchg
push
xchg
push
or
adc
lahf
negl
fisubs
fdivrs
jecxz
push
push
push
dec
inc
icebp
out
sahf
not
push
insb
je
test
repz
fsubl
dec
enter
fidivrs
repz
mov
push
mov
push
adc
repz
idivb
hlt
push
nop
cwtl
push
mov
test
in
cmc
sbb
push
enter
testl
idiv
push
add
lock
out
ds
inc
cmpsb
in
sbbb
xchg
neg
mov
mov
and
out
push
cmp
push
cmp
dec
push
insb
inc
mov
out
jns
aam
js
xor
lcall
in
inc
mov
in
jnp
ds
cli
outsb
pop
cld
mov
mov
push
fsub
xchg
add
call
or
pop
stos
shlb
cmp
daa
aam
addr16
mov
push
push
push
test
push
ds
inc
jo
and
loopne
inc
mov
mov
sbb
cmp
ss
lea
pop
pop
sub
adc
loope
dec
dec
pusha
inc
xor
dec
push
pusha
dec
dec
add
mov
adc
add
mov
inc
negb
xchg
push
adc
add
negl
es
add
jnp
rolb
int3
push
dec
dec
dec
sbb
movb
or
pop
and
icebp
enter
incb
xchg
xchg
jo
ds
cmp
test
jg
jb
xchg
jbe
sub
cmp
adc
syscall
lods
jae
fcoml
mov
or
adc
xor
add
cmp
outsl
xor
xor
das
in
imul
xor
mov
inc
jns
jns
in
cmc
add
clts
sbb
jl
out
ss
push
inc
mov
sbb
inc
in
lcall
add
outsb
dec
js
jl
ss
pop
les
inc
push
mov
imul
dec
push
int3
fnstcw
int
xor
push
xor
hlt
cmp
data16
dec
push
cmp
inc
push
mov
or
and
jno
xor
das
push
rcrb
and
rolb
mov
lock
scas
push
and
aas
lea
mov
ret
mov
xchg
xorl
in
sahf
dec
xor
sbb
subb
push
clc
je
push
and
fwait
and
js
xchg
mov
pusha
xorps
test
push
outsb
push
sbb
inc
push
sbb
sub
adc
aad
sbb
notl
nop
fcmovnb
mov
adc
test
out
push
push
jmp
nop
sbb
fsubs
jne
lret
es
sbb
lock
insb
mov
fwait
rcl
push
gs
jne
xchg
dec
faddl
jg
xor
adc
imul
cmp
adc
insl
lods
shrb
pop
mov
cmp
fstl
adc
or
adc
orl
dec
mov
push
imul
pop
fcomp
nop
out
mov
daa
pop
imul
add
pop
fs
push
add
or
nop
mov
push
xchg
daa
push
cmp
in
dec
dec
push
push
inc
push
inc
fmull
pop
xor
push
jo
daa
or
mov
inc
insb
popa
clts
sbb
add
xchg
dec
outsl
stc
mov
add
push
jo
imul
movsb
loopne
lret
xadd
popa
push
movl
dec
in
movsb
adc
lret
rolb
push
insl
inc
adc
imul
mov
daa
outsb
adc
fcomps
clc
push
paddq
out
mov
mov
insb
xchg
jmp
inc
lret
dec
lods
mov
inc
enter
xchg
dec
lea
cmp
mov
xchg
inc
test
adc
gs
insl
mov
inc
inc
push
punpckldq
add
push
push
mov
enter
xchg
inc
mov
pop
push
push
inc
xchg
and
sbb
push
insb
adc
adc
inc
mov
mov
andb
mov
int3
push
minps
push
mov
inc
push
sub
sbb
lahf
and
adc
dec
les
jg
dec
inc
mov
push
xor
aaa
xchg
or
sbb
dec
mov
sbb
push
push
mov
mov
insb
insb
xor
jl
push
mov
dec
and
jb
repz
or
test
xchg
in
or
test
lock
inc
or
mov
push
cmpb
pop
inc
add
lock
fnstsw
ss
add
aad
ljmp
add
shlb
test
push
jmp
sbb
xor
and
or
imul
and
dec
sbb
js
ljmp
jne
ja
insb
lock
sbb
jmp
iret
pusha
push
cmp
or
icebp
jae
bound
cs
or
aad
add
or
or
movsb
jle
cmpsb
imul
or
cmpsb
imul
cmpsb
imul
imul
xor
scas
push
push
push
mov
pop
add
inc
lock
mull
fidivl
cs
mov
push
add
je
sub
cwtl
je
stos
je
fisubl
jecxz
dec
inc
cmp
mov
and
imul
call
repnz
jmp
and
js
mov
sub
jg
xchg
and
dec
and
outsb
hlt
adc
jmp
andl
mov
or
int
sar
add
jne
mov
sub
sub
xor
mov
add
sbb
and
stos
xchg
mov
sbb
es
pop
aam
push
mov
ficoms
movsb
jmp
nop
hlt
jmp
loope
adc
or
lcall
lahf
push
add
xor
test
push
or
xor
and
dec
sahf
aaa
js
mov
movb
loope
imul
ds
mov
and
sbb
inc
push
inc
test
jle
pusha
shlb
cmp
int3
fstl
outsl
sar
add
stc
cltd
mov
js
fisttps
loop
andl
pop
pop
cmpsl
cmc
xchg
xchg
push
jge
test
pop
inc
push
divl
pop
bound
xchg
ds
aas
push
add
add
loop
inc
push
add
dec
and
pop
inc
test
movsb
cmp
xchg
mov
jno
and
xchg
xchg
push
or
sub
cmp
nop
outsb
dec
jg
mov
pusha
mov
fiadds
test
rorb
dec
xor
or
inc
push
fs
mov
or
in
lds
mov
fld
pop
enter
sub
cmpsb
pushf
xor
test
and
pop
push
repnz
or
xor
or
ljmp
sub
add
ds
mov
jle
or
pusha
and
add
fimuls
aam
outsl
stos
pusha
sbb
inc
push
rclb
daa
fisubl
fwait
sbb
out
lods
imul
jo
aaa
stc
test
clc
mov
cmp
imul
and
int
in
pushl
add
pop
add
outsl
pusha
sarl
jb
outsb
pusha
movb
push
push
cmp
sbb
jnp
fistps
and
xlat
les
pop
neg
pop
sub
push
shl
ret
push
sub
and
in
mov
repnz
xor
outsb
hlt
jne
shl
loop
xchg
inc
aam
fnstsw
mov
inc
mov
cmp
xchg
inc
pop
movsl
inc
inc
pop
fdivs
movsl
in
test
mov
push
dec
mov
fwait
cmp
sub
or
lods
dec
mov
sti
je
sbb
jp
mov
mov
clc
add
aam
or
inc
add
hlt
add
xor
xchg
fiaddl
push
mov
dec
sub
rolb
sub
cmpb
ja
sbb
je
cmpsb
fiaddl
dec
sub
pop
add
in
gs
in
leave
addl
fdivrs
xchg
fdivrs
cwtl
push
sub
negl
push
loope
cmp
add
aaa
push
cmpsl
cli
and
test
inc
popa
xlat
xor
test
jns
in
pop
mov
add
test
sub
inc
adc
mov
out
out
cltd
push
cmpb
lea
adc
push
mov
jno
add
loop
push
les
xchg
mov
push
cmpsb
lock
pop
dec
xchg
mov
loop
insb
idiv
fadds
add
mov
ret
shlb
dec
lods
push
sti
add
and
or
aam
in
adc
inc
and
sbb
sarl
ds
xor
fldcw
jl
xchg
adc
popf
call
js
mov
test
inc
and
in
inc
jne
and
loope
stos
rolb
sub
arpl
push
push
inc
cld
pop
js
or
pop
into
sbb
pop
cli
dec
nop
pop
in
cmp
jnp
inc
pop
or
lock
push
fadd
mov
sbb
push
inc
sbb
das
cmc
pop
dec
pop
jne
iret
mov
imulb
push
push
mov
adc
jne
xor
imul
mov
or
les
sub
addb
out
mov
subl
stos
adc
jmp
out
lock
sub
mov
imul
gs
daa
adc
icebp
mov
ljmp
int3
adc
or
pop
adc
movsb
inc
jg
insb
les
add
push
xchg
mov
outsb
ja
pop
or
mov
xchg
push
cltd
dec
push
jp
cmp
mov
aaa
imul
out
rorb
iret
rcrb
xchg
cs
and
cmc
add
ret
xchg
push
and
cmpsb
push
in
push
subl
test
xor
push
or
jne
loop
in
xchg
push
xchg
fcomps
loope
jecxz
shrb
add
movsl
in
push
inc
cmp
mov
sub
pop
cmp
insb
mov
adc
dec
xor
push
push
in
test
mov
sbb
or
arpl
xlat
mov
inc
or
lcall
movb
xchg
jl
popf
arpl
sbb
add
fdivs
dec
inc
out
mov
xor
mov
pop
test
cmp
ret
les
dec
les
pop
je
ficomps
sub
xchg
rcr
addr16
mov
push
sbb
sbb
loopne
xchg
into
mov
mov
or
mov
cmpb
inc
notb
testb
jne
je
jp
xor
xlat
pop
fs
xor
or
adc
jne
sahf
les
xchg
push
jmp
fadds
and
sbb
pop
pop
aad
sub
mov
mov
stos
add
movsb
rcrb
js
sbb
ljmp
push
inc
xchg
cli
out
pop
rcrb
add
movsl
orb
loopne
andb
hlt
daa
pop
popa
imul
mov
imul
cmp
dec
add
scas
hlt
sbb
push
push
pop
xor
lret
sbb
xchg
dec
not
mov
cmp
xor
and
jae
cmp
adc
fcmove
add
es
pusha
aam
push
out
popa
aam
or
adc
outsb
sub
xchg
call
inc
dec
les
aas
mov
lea
mov
or
stc
dec
outsl
stos
aam
inc
jp
adc
mov
or
stc
fstpl
fwait
jmp
jl
add
mov
and
sub
fcmovu
inc
xor
adc
cli
imul
add
pusha
andl
add
jne
adc
out
lods
test
in
jmp
pop
js
pop
icebp
sbb
sub
mov
outsl
inc
adc
pop
and
adc
inc
lods
sub
pop
aam
nop
sub
xor
sub
loopne
cvttps2pi
jg
and
add
and
inc
sbb
inc
pop
lret
fsubr
loop
mov
add
clc
xor
test
scas
iret
xor
inc
popa
popf
mov
dec
push
xchg
jecxz
xchg
xchg
fbstp
hlt
es
sbb
popa
icebp
sbb
jo
mov
jecxz
aas
dec
push
outsl
sub
dec
stc
pop
popa
pop
lods
pop
pop
sub
and
cmp
xor
mov
jmp
sbb
nop
push
pop
mov
adc
mov
cmp
in
out
or
push
sub
add
xchg
inc
dec
pop
jno
push
pop
adc
dec
rcrl
mov
inc
add
das
test
mov
inc
push
sub
fwait
add
add
test
add
pop
stos
inc
dec
dec
insl
jne
lea
pop
mov
add
jecxz
cmp
xor
mov
aas
cmp
sbb
mov
adc
adc
or
cmp
mov
cmpsb
lcall
cmp
and
pop
add
add
arpl
fisubs
in
das
push
movb
adc
decl
and
fwait
aas
xor
shr
mov
aaa
dec
add
and
mov
or
mov
and
es
ds
adc
mov
into
in
rorl
sbb
jmp
and
icebp
xor
cmp
scas
stc
push
sbb
adc
adc
movsl
inc
lods
in
clc
imul
arpl
mov
sub
pop
outsl
je
movb
adc
sbb
popa
nop
push
and
jl
mov
mov
push
inc
sub
jmp
testl
sub
mov
orb
repz
dec
shl
fldenv
sbb
sbb
mov
mov
xor
dec
imul
decb
repz
ds
xchg
bound
ror
adc
push
daa
loopne
into
mov
adc
mov
shlb
cs
add
cmp
xchg
movsl
out
pop
frstor
inc
movsb
ud2
push
js
test
insl
mov
inc
cmc
ds
fnstsw
pop
notl
push
ljmp
inc
adc
xchg
push
pushl
pusha
jbe
sbb
imul
cwtl
xchg
dec
adc
ficoms
int
daa
dec
lods
shrb
outsl
ret
cmp
rcrb
popa
xchg
sbb
adcl
add
add
and
cmc
push
adc
pushf
jl
jle
loope
jge
sbb
test
test
pop
xor
js
addl
pop
mov
push
sbbb
into
add
or
push
inc
and
lcall
sub
push
or
inc
inc
push
lock
push
cwtl
gs
clc
adc
push
push
cwtl
cmp
dec
cmp
xchg
je
inc
fnstsw
jnp
push
and
mov
js
inc
dec
fmuls
inc
cmc
mov
cwtl
lahf
dec
lahf
cmp
repz
sub
and
inc
inc
rol
stos
sbb
imul
and
inc
and
push
test
mov
add
addb
jmp
gs
pusha
repnz
out
test
fiadds
dec
push
in
lea
dec
loopne
negl
cmp
jnp
add
jge
fisubrs
hlt
pop
push
mov
and
push
insb
iret
out
add
dec
daa
jmp
push
and
pop
sbb
ret
cmp
clc
sub
adc
mov
aaa
fwait
push
negl
add
enter
inc
orl
outsl
mov
arpl
pop
pop
sbb
inc
dec
xchg
mov
shlb
fldcw
sub
and
insb
enter
or
or
add
cltd
unpckhps
das
sub
dec
hlt
dec
adc
adc
jmp
cmp
je
mov
test
jbe
push
out
xor
pop
xor
pushf
jge
cmp
push
or
and
pop
je
xchg
out
pop
xchg
xorb
sarl
adc
sbb
or
aam
add
push
xchg
dec
adc
inc
dec
negl
loop
orl
in
imul
push
cmp
jg
push
rcrb
jl
push
inc
movsl
or
cmp
test
or
inc
cmc
inc
pusha
push
stos
pop
inc
sahf
in
or
xchg
inc
add
mov
push
mov
out
sub
mov
or
cltd
sbb
inc
mov
movsb
ret
sub
clc
xchg
xor
cmp
and
sub
xor
xchg
fidivrs
mov
addb
outsb
mov
xor
xchg
orb
in
clc
lea
lret
daa
into
mov
fcmovnu
fimull
push
push
popl
dec
add
and
xchg
mov
ss
popf
sbbb
ror
xor
cmc
dec
mov
cmp
xchg
and
aad
bound
mov
dec
and
xchg
pop
imul
inc
jae
add
push
dec
scas
mov
shlb
in
scas
adc
cmp
push
or
xchg
sbb
xchg
std
push
popa
loop
aad
jo
xchg
dec
or
cmp
pop
xchg
les
movsb
aas
les
bound
xor
int
rclb
push
pop
out
add
mov
sbb
cmpb
sarb
mov
mov
push
push
shl
in
rclb
sti
and
or
inc
popa
fldl
push
mov
sbb
cwtl
dec
je
add
xor
sbb
adc
push
lea
inc
dec
js
imul
jo
inc
inc
push
add
pop
mov
lcall
lods
in
notl
push
pop
add
jle
xchg
or
stos
enter
ds
mov
xor
repz
stos
or
dec
and
iret
pusha
insl
mov
jg
adc
cmp
mov
inc
pop
xchg
inc
and
cwtl
outsb
fs
bound
pop
inc
mov
insb
or
or
xor
mov
popa
mov
int3
adc
jmp
push
inc
insb
cmp
mov
push
push
xchg
out
lods
js
add
lods
inc
rcrl
nop
aaa
pop
inc
push
push
nop
dec
jg
js
mov
adc
nop
test
shlb
shlb
cmp
adc
ret
dec
out
clc
pop
dec
adc
adc
mov
xchg
dec
add
push
mov
push
push
push
sti
mov
push
leave
call
sbb
testb
dec
sbb
pop
insl
jbe
stc
xchg
xchg
ret
cmp
dec
mov
pop
sbb
and
add
pop
mov
jo
pop
adc
adc
xchg
cmp
jne
adc
movsl
stc
sarb
push
mov
or
pushf
sub
or
pop
or
outsb
mov
test
popa
arpl
outsl
icebp
mov
adc
add
or
push
and
inc
or
xor
stc
xor
dec
insb
insb
insb
sbb
inc
fwait
cltd
shrb
pop
push
push
cmpsb
outsb
popa
subb
cmp
shlb
scas
movsl
cmp
lods
sub
mov
call
fmuls
fadds
or
push
data16
push
fcoms
dec
sbb
inc
jb
sub
and
loop
xor
sub
xor
in
push
mov
or
int3
add
or
add
sbb
xchg
les
div
lods
push
push
nop
out
in
or
nop
or
adc
xchg
cmp
mov
mov
out
es
dec
imul
pusha
inc
jmp
push
xchg
xchg
push
jge
xchg
iret
mov
push
loopne
sbbb
jno
je
or
ret
test
xchg
push
or
xchg
add
lods
test
das
add
xchg
adc
rorl
mov
adc
xchg
push
push
sarb
mov
out
std
sub
ret
jne
xor
add
clc
adc
jbe
dec
fwait
sub
dec
sbb
sbb
fs
cmp
adc
lret
gs
xchg
pop
dec
and
mov
jmp
gs
mov
push
sub
or
mov
jl
adc
fsts
test
push
adc
push
xor
pop
push
jo
into
cmp
ja
mov
inc
mov
jle
xlat
or
or
inc
mov
jmp
pop
xorb
iret
mov
cmpb
into
or
cmp
adc
js
and
fwait
clc
mov
int
loop
clc
sahf
inc
add
dec
xchg
sub
mov
icebp
lods
pop
sbbl
dec
sti
xor
jne
cmc
xor
and
jne
vmwrite
jmp
add
xchg
jne
sub
adc
lret
jmp
jmp
test
mov
das
test
enter
imul
sub
daa
fcoms
sti
add
mov
push
loop
mov
cmp
push
ret
add
cmp
and
inc
sbb
pop
loope
lea
xchg
stos
orb
mov
cmp
insl
bnd
addr16
inc
imul
mov
push
leave
arpl
pusha
inc
rorb
mov
shrb
or
add
out
popf
call
js
add
adc
ljmp
sub
and
loope
xchg
cmp
inc
and
outsl
sarb
shlb
cmpl
sbbl
mov
sub
add
or
gs
xlat
xor
mov
push
pop
push
dec
xor
mov
ja
aam
fs
les
inc
loope
loope
lock
add
add
mov
int
mov
popa
push
push
sti
inc
sub
sbb
xlat
mov
imul
scas
or
sbb
fld
or
adc
dec
js
pop
mov
inc
mov
xchg
mov
dec
movb
dec
mov
aaa
xor
or
movl
dec
add
dec
cmp
fcomps
dec
or
pop
and
dec
and
sub
push
or
mov
sub
adc
sbbb
mov
or
cmpl
jo
imul
cs
pop
adc
adcl
adc
and
insl
sub
xchg
dec
fiadds
and
nop
push
out
cmp
hlt
pop
xchg
sbb
sbb
adc
inc
inc
je
push
enter
mov
ljmp
jge
push
add
lock
mov
adc
xor
lds
add
add
pop
insl
add
add
mov
add
popa
sahf
adc
clc
call
je
imul
add
fstpt
mov
cmp
sahf
add
adc
scas
cmp
sub
jo
dec
jbe
lods
sbb
mov
sub
pusha
das
popa
stc
sbb
fbstp
lods
inc
xchg
iret
mov
adc
and
inc
adc
inc
lods
jp
inc
inc
add
dec
adc
mov
or
outsb
dec
lret
mov
xchg
shlb
outsl
push
and
es
sarb
adc
sti
fwait
xor
or
lock
mov
sbb
inc
add
adc
nop
insb
or
xor
adcb
jge
adc
inc
jo
ja
mov
sbb
jo
cmp
mov
inc
jmp
dec
pop
sub
out
mov
xor
daa
xchg
sbb
out
or
xchg
imul
inc
xchg
mov
jns
or
daa
mov
add
adc
imul
sub
clc
test
mov
and
push
loop
adc
sub
lods
pop
push
mov
jns
cmpb
mov
pop
mov
add
iret
jp
pop
push
sbb
xchg
add
xchg
adc
ficoms
push
add
into
sahf
cmp
and
mov
fwait
xchg
pop
lret
mov
xchg
test
sarl
jge
sub
lahf
clc
inc
push
and
jne
jno
dec
fbstp
int
shrb
and
clc
js
popa
cmp
daa
mov
sbb
sbb
push
mov
jmp
or
call
fcomp
popf
or
adc
test
sbb
or
adc
lock
ret
leave
sarb
je
cmp
inc
pusha
dec
jle
dec
mov
cmp
add
mov
bts
pop
clc
cmp
test
sbb
lock
push
push
les
dec
xchg
or
cld
or
mov
push
mov
xchg
jl
sahf
pop
push
add
ljmp
mov
mov
cmp
es
dec
iret
mov
mov
xchg
inc
sbb
insl
mov
lds
enter
mov
inc
mov
bound
or
jmp
mov
mov
leave
adcb
push
or
cmp
fildll
aaa
jl
add
or
popa
inc
dec
jbe
je
mov
movb
movsl
push
dec
jg,pt
cmpsb
inc
dec
test
pop
add
push
shrb
pop
xor
test
sti
adc
mov
push
dec
or
ljmp
mov
sub
js
or
call
fnstenv
adc
adc
jnp
je
mov
out
in
daa
inc
push
aas
or
nop
lea
xor
sti
mov
dec
and
xor
add
or
dec
add
enter
test
and
pop
pop
or
cmp
cmp
sub
jl
mov
xor
xchg
arpl
setg
cmp
cmp
add
xor
rcll
pop
add
iret
sbb
cmp
jmp
adc
cli
sbb
dec
xor
jne
orb
pop
xor
mov
arpl
jno
mov
imul
add
mov
push
test
or
shl
scas
mov
leave
je
pop
adc
inc
jl
orl
sbb
adc
aaa
mov
pop
add
lods
shll
dec
dec
pop
xor
inc
xchg
and
xchg
ret
mov
and
popa
subb
ret
xchg
rol
rcll
mov
push
shlb
jle
dec
jnp
pusha
test
cmpb
into
js
sub
xor
mov
andl
enter
ret
add
mov
ljmp
mov
xor
mov
and
and
cmc
mov
imul
pop
mov
push
lock
loopne
xchg
push
in
and
in
lods
insb
xchg
push
je
or
insb
mov
pop
test
daa
out
push
daa
mov
push
push
dec
push
inc
pop
add
xor
mov
insb
incb
add
and
xor
jnp
inc
and
adc
xchg
test
sub
sbb
sub
enter
inc
insl
sub
enter
cwtl
out
dec
cmp
sbbl
inc
aaa
add
xchg
inc
push
mov
ficoms
xchg
cmp
fstl
lds
inc
lahf
mov
dec
stc
pushf
dec
fdivl
inc
int
insb
call
xchg
and
arpl
add
xor
or
outsb
xor
dec
decl
sub
loop
lock
xor
pop
test
rcrl
add
push
test
ltr
std
std
std
pop
cld
add
push
popa
inc
mov
sbb
enter
test
cmova
out
outsb
cwtl
dec
fldcw
outsb
sbb
jecxz
mov
sub
mov
mov
cmp
je
lcall
jb
xchg
mov
insb
mov
test
punpcklwd
mov
cmp
cmp
pop
xor
sub
test
fsts
jecxz
adc
dec
loope
jne
iret
loop
js
arpl
push
dec
aam
rolb
call
out
push
xor
adc
adc
roll
add
mov
loopne
inc
daa
je
gs
js
cmp
cmp
sub
inc
dec
add
add
mov
sbb
jnp
jl
xor
mov
adc
in
lret
mov
lret
iret
push
fsubl
popf
mov
aad
pop
cmp
adc
push
cmp
add
outsl
dec
or
or
xchg
pop
aam
push
mov
jg
add
mov
insl
ljmp
clc
adc
mov
xchg
mov
dec
sub
inc
popa
loope
fsubp
into
mov
outsl
js
xor
mov
fnsave
and
ffree
adc
dec
mov
xchg
add
outsb
or
cld
sbb
push
xchg
sub
inc
add
clc
jns
mov
cmp
mov
xchg
pop
push
mov
push
mov
fmuls
and
rolb
xchg
bnd
leave
or
cli
enter
cld
clc
repnz
clc
sbb
dec
push
or
mov
pusha
jnp
pusha
inc
stos
dec
or
inc
pop
sbb
ss
cmp
mov
pop
das
hlt
xor
ds
js
pusha
not
clc
loopne
inc
lds
push
cwtl
fsub
addl
xchg
inc
inc
mov
jne
add
sbb
psadbw
ret
adc
sub
mov
mov
imul
cs
add
neg
xor
lea
in
loope
in
push
fsubr
adc
xchg
flds
clc
js
mov
mov
hlt
xorb
push
pushf
andb
imul
push
or
inc
loopne
push
jo
adcl
pop
sbb
das
mov
test
jb
push
push
push
es
inc
mov
sub
stos
push
loopne
and
fistl
jmp
sbb
popf
add
push
fs
imul
orl
stc
imul
mov
loopne
sub
push
push
sbb
dec
cmp
pop
fisubrl
push
aaa
call
aam
ja
inc
loopne
in
or
inc
in
add
lods
mov
xor
sbb
xor
rolb
inc
iret
mov
call
orps
add
decl
ja
mov
add
xchg
mov
adc
mov
pop
jle
or
mov
pop
je
pop
jl
out
loop
mov
mov
cmp
add
adc
inc
or
ret
std
and
dec
mov
cmp
or
xor
mov
xchg
or
jbe
shlb
lret
lea
int3
mov
insl
mov
xor
and
push
das
add
testl
loope
imul
movb
inc
adc
mov
adc
mov
lcall
inc
mov
pop
mov
aas
nop
std
ljmp
pop
out
imul
clc
pop
outsb
sbb
inc
jle
or
push
sbb
jmp
shrl
mov
push
sbb
in
js
sbb
and
push
dec
lret
sbb
or
test
mov
or
inc
adc
mov
popa
js
sbb
and
lea
mov
scas
sbb
dec
mov
hlt
testl
add
mov
es
lods
jp
call
loope
fisubrl
xor
cmp
insb
sti
mov
loopne
mov
sub
add
mov
push
cli
mov
test
xor
push
ss
adc
sbb
sub
les
pusha
dec
xor
scas
int3
and
rcrb
xor
mov
dec
aaa
into
push
rcl
adc
or
test
or
xchg
pop
dec
fsubs
sbb
fwait
shrb
pop
add
lods
dec
push
loopne
jne
rcll
or
mov
nop
adc
jp
pop
cmpsb
test
add
dec
xor
subb
cld
xchg
pop
outsl
call
hlt
mov
adc
loope
cmovbe
lock
add
pop
cltd
xor
mov
test
test
mov
xchg
cltd
mov
jmp
mov
dec
jmp
js
and
stos
icebp
or
dec
dec
push
sbb
xor
imul
adc
or
adc
pop
dec
fsubl
lret
je
xor
jbe
stc
scas
sbb
insb
mov
or
adc
frstor
push
mov
push
sub
sub
cs
daa
or
or
and
rcll
fstpl
and
sbb
stos
adc
cmp
hlt
ret
ret
sub
add
adc
data16
repnz
mov
add
jge
pop
sub
adc
or
add
or
dec
or
daa
fsubl
lods
cmpsb
movsb
pusha
lods
pop
cld
sub
inc
rolb
push
rorl
lea
mov
lods
cmpl
lods
mov
subb
popf
mov
aaa
push
fldcw
pop
jae
imul
adc
std
dec
les
jo
pop
add
push
out
xchg
lar
xchg
sbb
mov
add
test
in
pop
flds
ret
je
jge
orb
cmc
push
fildl
sahf
clc
adc
sbb
sub
cld
and
iret
fdivrs
jo
add
or
push
pusha
insl
test
inc
add
mov
pop
jns
insb
out
loopne
test
adcl
addb
pop
mov
cmp
sub
jne
sub
push
fisttps
out
or
adc
add
xorb
add
xchg
push
xor
push
xchg
cmpb
jbe
inc
or
adc
pushf
add
push
loopne
lret
popf
mov
add
add
rorb
xchg
dec
xorb
xlat
and
or
mov
je
sbb
arpl
in
inc
xchg
into
add
ret
xor
fisubrl
push
insb
sbb
pop
in
cld
xor
sub
push
mov
pop
out
sub
mov
sbb
dec
adc
popa
test
push
out
dec
subl
fidivrs
hlt
lea
into
or
cmp
outsl
sub
push
add
jle
push
jmp
fbstp
insb
popf
sbb
pop
dec
rcll
and
push
lea
pop
cmp
test
add
movsb
clc
inc
hlt
mov
sub
fisttpll
cwtl
inc
jne
xor
in
push
out
shrb
pop
jnp
inc
lods
inc
push
fsubs
sarb
je
iret
outsb
mov
add
jmp
jne
jl
sbb
mov
mov
jge
lods
or
dec
adc
inc
ja
add
sbb
add
and
and
clc
xchg
mov
mov
pop
or
xchg
lods
sub
insb
pop
int
movsb
lock
shll
adc
clc
xchg
adc
fsubrl
rorl
mov
enter
push
fs
dec
push
add
or
inc
popa
jmp
in
jmp
sbb
cmp
imul
jne
ret
cmpl
push
sbb
popa
and
jge
stos
hlt
or
shlb
xor
in
inc
inc
dec
jmp
mov
repz
enter
clc
test
mov
dec
cld
inc
mov
inc
dec
insl
nop
dec
cs
jle
mov
cwtl
or
bound
mov
jne
push
mov
xor
test
mov
pop
mov
push
push
pop
out
movsb
movb
lods
out
sbb
lcall
clc
stos
nop
minps
into
aam
loopne
daa
pop
cmp
stc
mov
cmp
pop
cmp
add
mov
xorb
xchg
add
test
pop
movsb
aam
sub
mov
mov
arpl
scas
addl
stc
int3
add
daa
or
in
push
push
and
add
push
adc
std
xchg
mov
jnp
xchg
lods
rcll
rcll
add
outsb
push
loope
pop
push
shrl
inc
inc
insb
popf
push
arpl
and
mov
sbb
push
add
pop
sub
add
or
or
rcrb
pop
add
xor
das
js
inc
push
xor
jg
push
jg
js
mov
adc
mov
add
jp
pusha
fimull
sahf
add
cmp
scas
and
sbb
int3
or
dec
add
sub
mov
scas
es
shll
adc
lock
loope
test
xor
out
jo
sbb
sub
add
int3
insl
aam
jmp
mov
mov
enter
xchg
rcl
mov
and
jmp
xchg
xchg
xlat
adc
xchg
fidivs
and
xlat
test
arpl
fdivrp
xchg
pop
clc
add
inc
outsl
in
sbb
scas
mov
add
cmp
add
imul
loopne
mov
add
cwtl
pop
pop
dec
sti
popf
mov
xor
int3
sbb
repnz
rorb
pand
sub
nop
jns
nop
test
xchg
xchg
test
add
mov
scas
xchg
push
shlb
pop
sub
sbb
xchg
ror
mov
add
sbb
ds
jnp
pop
cmpl
sub
push
cmpsb
adc
dec
sub
mov
pop
orl
dec
or
out
xchg
lret
adc
push
dec
adc
and
or
mov
sbb
inc
jnp
push
push
sbb
ret
inc
push
loopne
std
mov
lods
nop
mov
neg
add
or
adc
pop
movsl
dec
mov
repnz
push
test
mov
lea
sbb
aaa
inc
pop
enter
aas
add
jo
push
ud1
push
cmp
add
fimuls
and
inc
mov
les
shll
jne
and
lods
dec
xchg
jmp
xchg
sbb
movb
les
push
movb
pop
ret
aad
outsl
cmp
push
bound
or
adc
jle
mov
pop
subb
stos
or
lahf
cmpsl
sbb
or
adc
cmpsb
xor
dec
or
adc
sub
dec
es
push
sub
push
add
and
scas
inc
sbb
or
jne
add
cmpsl
add
push
mov
inc
xor
push
inc
and
mov
inc
pushf
adc
jo
das
mov
mov
push
pop
cmpsb
data16
je
adc
adc
dec
pop
rcl
dec
js
test
insl
aaa
nop
shl
push
dec
je
dec
or
sarb
inc
nop
push
push
inc
sarb
sahf
add
repnz
cld
dec
and
les
xor
sbb
adc
je
jns
add
in
iret
jne
inc
sbb
mov
push
lods
mov
sbb
push
loop
or
lods
push
pop
js
pop
push
in
js
scas
shll
mov
dec
adc
cmp
adc
sbb
push
js
iret
mov
push
push
xor
inc
adc
sbb
jns
in
cs
outsl
lock
mov
inc
xchg
jmp
out
je
ds
test
pop
push
ss
adc
test
shlb
jmp
das
mov
mov
cmp
sub
cmp
mov
das
ja
bound
in
xor
xor
les
pop
cmpsl
mov
js
mulb
popa
daa
xchg
add
inc
push
cmpxchg
push
and
sub
mov
adc
inc
sub
cmp
mov
cmp
sub
orb
inc
sub
push
pop
cld
addb
or
adc
subb
das
int3
dec
stos
jecxz
jle
mov
loopne
mov
add
sub
outsl
aaa
inc
enter
add
jno
dec
pusha
push
or
add
sub
jo
pop
aam
ds
loope
mov
dec
adc
es
adc
rorl
test
insl
adc
push
inc
xor
out
sub
add
pop
loopne
popa
mov
das
jge
lret
ret
and
ficompl
dec
and
pop
xchg
fmuls
pushf
or
jecxz
xor
xor
mov
icebp
and
xchg
mov
push
clc
fstl
dec
loop
push
pop
xor
fmull
adc
movsb
mov
cmpl
and
mov
and
mov
pop
dec
fmull
rcrb
and
lock
sbb
or
cli
dec
cmp
lds
mov
dec
loop
daa
insb
xchg
mov
pop
aas
cmp
dec
rorb
inc
inc
xchg
mov
inc
push
es
mov
dec
and
mov
jmp
loop
push
cltd
push
and
jno
pop
xchg
and
movsl
mov
stc
mov
xchg
stc
push
push
daa
or
in
mov
xor
test
dec
lea
nop
xor
push
mulb
adc
ret
add
push
mov
mov
sbb
xchg
insb
or
insl
push
fiadds
dec
aam
dec
outsl
xlat
addr16
jo
js
aaa
mov
pop
mov
push
cli
pop
push
xchg
mov
lock
mov
jmp
aas
test
push
add
insl
cmp
sub
test
gs
movb
test
scas
lock
movsb
or
adc
sbb
add
iret
jnp
xor
xor
lock
push
cmp
mov
movsl
add
insl
mov
cwtl
or
je
add
jmp
bnd
in
aam
dec
mov
gs
or
jne
sub
or
jecxz
outsl
pushf
dec
inc
or
mov
dec
push
push
or
inc
cmp
push
dec
cmp
inc
inc
rorb
pop
mov
rorb
push
clc
in
jp
test
xchg
test
test
scas
test
mov
mov
add
repz
loopne
inc
push
mov
and
dec
xor
lods
adc
adc
adc
jmp
inc
out
test
push
mov
cmp
or
mov
pop
xor
insb
arpl
aaa
cmc
add
pop
adc
ret
sbb
jo
push
adc
imul
xchg
cmpb
dec
cmpb
add
mov
inc
ja
xorl
mov
mov
xor
add
cmp
loope
push
add
movl
inc
lret
xor
pop
lock
and
daa
insb
flds
ficoms
lods
outsl
je
inc
loop
pop
cs
jp
and
lret
push
inc
xor
mov
std
outsl
js
and
shrb
ret
push
adc
aas
int
add
orl
pop
xor
test
sbb
inc
outsb
push
inc
jne
pop
jmp
inc
cltd
and
mov
cs
inc
test
dec
rcrl
sub
and
pop
mov
add
subb
dec
mov
and
test
mov
sub
hlt
xchg
dec
pop
mov
ja
js
jns
inc
pop
lods
or
rcrl
adc
pop
or
popf
cwtl
push
andl
mov
xchg
nop
xor
fstpl
movl
andb
push
adc
jno
add
sub
test
pusha
rcll
mov
lods
jbe
push
test
mov
in
sbb
xchg
add
xchg
cwtl
or
xchg
cs
je
es
loopne
data16
movsb
xchg
sbb
lods
add
filds
sub
pop
mov
cmpb
jbe
sbb
sti
or
into
mov
adc
sub
in
mov
stos
sbb
mov
clc
sub
cmp
lods
hlt
popa
push
roll
sub
dec
pop
mov
inc
imul
stos
push
jne
enter
push
push
adc
femms
xorl
mov
lsl
push
pop
bound
jbe
add
mov
sbb
xchg
in
push
loope
mov
pop
and
inc
sub
jl
add
xor
inc
xor
sbb
dec
jne
add
nop
dec
and
cmp
jo
rcrb
add
addr16
aam
scas
jb
insb
shrl
xor
testl
inc
jb
ja
scas
jp
push
rol
test
loope
shrb
push
or
add
lahf
orl
lahf
pop
popf
fs
sub
xor
mov
out
adc
mov
negb
add
adc
pop
sbb
les
sub
adcb
adc
sub
faddl
setl
jbe
dec
adc
push
adc
and
aaa
ret
cmpl
xchg
enter
ret
adc
iret
xor
jnp
lock
mov
sbb
xchg
cmpsl
divb
leave
sub
jmp
sub
jmp
push
sbb
xchg
popf
fidivl
xchg
adc
or
idivl
add
pop
push
or
es
jbe
add
add
jns
arpl
aad
loop
sub
jmp
arpl
mov
inc
imul
hlt
jmp
andb
int
mov
jo
mov
add
jb
es
xchg
shl
mov
add
lods
xchg
sbb
mov
inc
pusha
nop
cmp
xor
dec
pop
sbb
or
out
jl
mov
jb
sub
test
or
cmp
pop
or
dec
push
add
xlat
dec
cmp
ja
iret
sub
and
mov
mov
out
cmp
andb
pop
add
pushf
xor
sub
loopne
inc
test
fbld
lret
sub
inc
addr16
inc
fcomi
and
ret
imul
xchg
pop
and
adc
push
add
in
js
dec
adc
faddp
rorl
lods
push
daa
jbe
out
ds
imul
and
shrb
push
movsb
outsb
sub
add
jmp
add
pop
jmp
fsubrs
or
sub
mov
pop
xor
mov
dec
push
addb
lods
add
shrl
mov
dec
push
cltd
popa
pop
sub
push
sbb
adc
jbe
push
add
pushf
je
or
push
jnp
int
je
sti
cmp
or
dec
cmpsl
push
xchg
xorl
popl
fdivr
daa
cmp
out
xor
js
and
and
pop
pushf
and
dec
sbb
mov
add
fisubs
adc
dec
inc
lock
push
loopne
or
fnsave
ds
lret
scas
mov
xchg
adc
pop
ret
and
xchg
into
xor
lahf
faddp
jno
addr16
mov
mov
test
add
outsb
mov
fcomps
out
or
inc
xor
lock
add
jns
pop
ror
lea
pop
jne
movsb
xchg
dec
test
lock
aad
outsl
push
gs
mov
clc
cmp
ret
jmp
xchg
imull
jne
mov
or
and
adc
leave
js
jmp
or
pop
mov
ss
mov
xchg
je
sbb
inc
jbe
inc
sbb
dec
jge
adc
sbb
sub
add
jmp
pop
dec
adc
push
js
insl
inc
shlb
sub
outsb
inc
push
mov
int
in
das
enter
enter
cmpsl
imul
out
sbb
addb
or
and
mov
das
loope
pop
fcmovbe
inc
and
rcrb
sub
jg
cmp
jne
sbb
push
sub
add
pop
inc
popa
div
lret
notl
push
sarl
dec
dec
pushf
sbb
clc
pop
adc
sub
sbb
pop
xchg
push
xchg
inc
or
cwtl
sub
cmp
push
sbb
adc
add
fs
inc
add
mov
aad
pusha
and
bound
adc
or
cmpsl
add
mov
shlb
jbe
iret
insl
gs
std
sbb
sbb
adc
xor
jecxz
mov
rolb
insl
adc
es
cld
fisttpll
pop
pusha
push
out
adc
add
ret
push
mov
sbb
std
jne
and
pop
or
insl
lock
outsl
lods
xchg
les
js
in
mov
mov
ss
test
sbb
pop
shll
inc
andb
adc
sub
sub
add
lock
xchg
cmpb
adc
shlb
dec
push
in
adc
mov
adc
imul
mov
mov
imul
inc
clc
rcrl
or
nop
pop
add
or
call
sub
pop
add
add
add
test
lcall
out
jbe
test
rclb
inc
or
std
fisubs
adc
filds
rorb
and
adc
test
js
test
dec
mov
sbb
movsb
jne
push
mov
mov
pusha
test
dec
cmp
xor
cmc
sub
cmp
aad
lea
pop
push
push
insb
sbb
jmp
sbb
mov
jmp
mov
pop
fadd
cmpsb
movsl
jne
test
push
cwtl
xchg
cmp
popf
dec
dec
or
mov
push
ds
test
sub
mov
or
stos
nop
ljmp
push
orb
dec
mov
inc
adc
jmp
jne
mov
or
sbb
jmp
sbbb
ss
out
mov
pop
nop
fcomp
in
inc
decb
movsl
mov
add
icebp
dec
dec
icebp
jmp
das
add
aam
mov
into
movsb
inc
jns
shl
mov
pop
xor
mov
scas
movsl
sbb
mov
add
dec
stos
popa
mov
mov
ds
mov
cmp
jle
movsl
mov
jmp
adc
and
mov
je
add
and
sbb
ret
mov
call
adc
add
addr16
int
call
fldenv
roll
rorb
add
cmp
pop
sbb
out
lods
xchg
sbb
mov
mov
jo
sbb
jne
mov
lahf
and
lods
adc
dec
clc
sub
test
pop
fsubl
movsb
inc
nop
out
test
sub
sbb
pop
cli
inc
adc
sub
xchg
push
nopl
stos
add
fiaddl
sbb
shl
mov
mov
inc
and
movl
lea
fisttps
je
orl
or
jnp
es
lock
dec
loope
cmp
pop
add
mov
pop
dec
lea
or
adc
mov
xchg
or
out
jbe
sub
les
js
or
and
mov
loopne
sub
inc
mov
cmp
inc
jae
les
push
inc
xor
push
orb
and
add
pusha
and
sbb
lods
enter
aas
inc
jmp
adc
shll
clc
add
xchg
je
sbbl
test
inc
rcr
adc
dec
mov
out
filds
cmp
scas
mov
test
dec
aam
inc
aam
jecxz
mov
sub
lea
fisttpl
insb
xor
dec
inc
push
test
daa
push
xchg
or
xchg
push
cltd
fistpll
testl
loopnew
inc
inc
mov
aas
push
testl
adc
js
push
add
pop
adc
imul
pop
xchg
jne
jo
popa
and
sub
mov
add
repz
dec
shlb
mov
lock
inc
push
xchg
inc
xor
jecxz
leave
orb
ret
push
and
mov
xor
or
aas
popf
in
insl
test
dec
fwait
addr16
or
into
repz
adc
nop
rcrl
push
cli
push
daa
inc
clc
xchg
or
add
je
push
ret
lds
sbb
or
stos
adc
dec
jl
mov
dec
sbb
ja
cli
insl
pop
dec
jae
mov
xchg
inc
sbb
inc
jecxz
lea
test
or
or
add
push
dec
ficoml
mov
sbb
out
test
adc
pop
add
mov
pop
cmpb
int3
add
pop
test
cmpb
pop
push
and
rol
adc
jne
in
sbb
aad
rcl
adc
fldl
scas
or
jmp
orl
add
es
mov
mov
lock
stos
and
dec
icebp
out
pop
dec
les
subl
push
or
test
sbb
mov
xchg
mov
sbb
movl
je
jb
add
jno
adcb
popa
sub
add
sub
push
shll
addb
cmp
cwtl
loope
in
dec
pusha
dec
push
std
mov
insb
sbb
inc
pop
ret
out
pop
push
sub
cmp
incl
fiadds
ljmp
aas
dec
stos
inc
jl
loope
mov
xchg
and
lahf
mov
ret
and
adc
cmp
mov
dec
nop
mov
or
sbb
popf
dec
out
and
xor
inc
cmp
imull
fildl
cmc
inc
lock
mov
push
or
popf
push
jle
mov
xchg
xchg
xor
rcll
and
fsubr
cmp
fdiv
adc
inc
hlt
jne
push
fwait
cmp
arpl
adc
dec
fidivrs
mov
push
imul
leave
into
adcb
inc
and
ficoms
outsb
cmp
sub
and
lock
call
testb
push
mov
xchg
hlt
pop
jle
push
lret
lods
cmp
pop
loopne
mov
or
mov
push
nop
xor
sbb
cs
add
cmp
add
lods
xor
mov
jnp
cltd
sbb
add
out
and
add
pop
bsr
mov
jo
or
pop
xchg
xor
shlb
jle
sub
jne
or
pop
push
and
inc
pop
and
movsl
or
push
push
rolb
xchg
into
and
nop
sub
loope
in
insb
add
mov
xchg
or
dec
cwtl
xor
cli
cmp
and
leave
ud1
nop
sub
je
test
mov
or
cmp
xchg
je
xchg
sbb
out
sbb
or
mov
jl
in
xor
push
or
push
hlt
xor
mov
or
mov
clc
pop
xchg
les
scas
test
movsl
mov
push
imul
lahf
jge
ret
ds
mov
gs
and
movb
cmp
les
cmp
shlb
ret
or
ss
adc
xchg
jne
jae
arpl
rorl
int
arpl
mov
inc
xchg
sub
repz
call
lahf
dec
adc
in
jp
push
mov
inc
add
adc
add
jecxz
add
pop
shll
daa
add
jmp
shll
fcmovnu
and
push
call
add
pop
or
sbb
loop
ja
adc
mov
pusha
lret
popa
cmp
jo
mov
pusha
xor
aas
adc
push
add
push
inc
and
or
arpl
ret
jmp
fstpt
or
sti
clc
pop
lret
inc
push
hlt
outsl
test
jo
fwait
arpl
xor
push
ja
add
mov
mov
jmp
es
cmpsl
mov
data16
adc
mov
out
or
adc
push
adc
lods
pop
pop
je
in
pop
pop
mov
repz
cmp
cmpsb
xchg
iret
pusha
andl
loopne
mov
sub
bound
movsb
add
fdivrl
jns
or
adc
mov
push
jnp
xor
in
imull
mov
jne
xor
nop
outsl
fdivs
sub
insl
int3
mov
adc
loop
cmp
fdivr
mov
hlt
call
ljmp
or
dec
sub
sub
lea
push
push
pop
xlat
fneni(8087
dec
arpl
or
shlb
pop
jns
jecxz
push
call
add
mov
or
and
dec
sbb
ljmp
push
xchg
mov
add
adc
rclb
and
cmp
lcall
or
push
es
or
jb
fnstsw
add
sbb
mov
xchg
adc
fcompl
sbb
adc
mov
aaa
fs
loopne
testb
and
xchg
inc
das
dec
jle
js
mov
xchg
mov
dec
pop
mov
cmpsb
push
inc
pop
shll
call
mov
sbb
adc
xchg
cmp
or
loope
adc
lods
mov
fwait
call
lret
mov
movsb
lods
sbb
lcall
and
mov
push
jne
das
jmp
inc
repz
int3
add
mov
xorb
shrb
push
ds
clc
cltd
push
sub
xor
notb
aam
ds
ret
and
roll
push
movsb
push
arpl
jl
push
sbb
les
inc
add
jbe
rcr
add
mov
ljmp
and
push
call
movsb
out
adc
insl
and
push
movsb
or
pop
mul
dec
xor
adc
inc
or
xchg
shl
ja
mov
call
mov
dec
add
cwtl
imul
mov
adc
sbb
cmpsb
sahf
inc
cmc
addl
orl
lcall
dec
cmpsb
pop
jnp
ja
add
xorb
incb
xor
adc
pop
loope
ja
cmp
adc
and
push
or
out
dec
clc
inc
or
dec
int3
jnp
aad
daa
push
adc
inc
sbb
sbb
ret
add
ret
push
jp
and
cmp
xchg
loop
or
icebp
jp
add
push
in
addr16
and
or
adc
xor
add
or
cmpsb
dec
push
and
cmp
cmp
pop
dec
lock
test
andb
inc
adc
push
pop
outsb
rolb
sbb
test
adc
ret
mov
add
cmp
sub
or
sub
nop
sbbb
lds
push
xchg
or
dec
in
mov
subb
inc
push
sbb
jecxz
lds
adc
push
add
inc
aam
or
inc
insl
dec
lods
cmp
fsubl
loopne
cld
sbb
repnz
out
xor
jecxz
jecxz
cmp
xor
pop
inc
cmp
insl
mov
push
sub
add
mov
js
adc
xor
lock
add
add
mov
push
popa
sbbl
int3
jl
xchg
into
test
sub
fdivs
adcl
shrb
xor
mov
push
jno
pusha
les
push
psrad
lea
lea
sbb
in
push
cmp
fildl
adc
jbe
and
pushf
aam
xchg
pcmpeqw
cmp
fistpl
fwait
sub
xlat
adc
push
push
adc
adc
sub
rcll
add
jb
add
add
adc
pop
inc
push
xchg
sub
scas
add
sbbb
dec
imul
out
fisubrl
cmpl
outsb
clc
jge
cmp
push
mov
jae
pop
xchg
push
in
mov
jns
loope
pop
dec
xor
xabort
cmp
push
or
add
jmp
fistl
loope
adc
clc
scas
ret
in
test
bound
mov
scas
add
sbb
adc
inc
les
scas
aad
add
rclb
int3
adc
xchg
les
daa
mov
add
sub
inc
cmpb
pop
xchg
sub
pmaddwd
push
sbb
pop
aaa
inc
cmp
popa
sub
and
fistpl
mov
adc
push
push
push
add
add
les
and
in
popf
dec
je
push
xchg
pusha
jb
fnstsw
outsl
lret
jp
or
mulb
pop
mov
push
add
adc
fdivrs
cltd
loopne
cwtl
or
sbb
int3
dec
mov
insl
mov
and
fnstenv
xchg
dec
scas
dec
fldcw
sbb
fstl
repz
and
loop
xor
nop
data16
xor
arpl
adc
push
adc
mov
or
sbb
xor
xchg
test
loop
xor
inc
daa
and
sub
in
pusha
sbb
xlat
mov
xchg
popa
test
pop
scas
loop
pushf
mov
and
jle
push
lret
sub
loope
cmp
iret
dec
fstpl
inc
rclb
pop
addr16
sub
pop
jnp
jb
pop
xchg
xlat
call
pop
cmp
push
mov
inc
in
sarl
lock
test
push
inc
dec
inc
lds
test
or
add
and
mov
lods
sub
sub
mov
adc
push
sbb
test
push
push
dec
sub
xchg
xchg
imul
push
push
sub
lock
pop
or
sbb
inc
rcll
inc
inc
inc
inc
rorl
pusha
int
fnstcw
dec
sub
mov
adc
pusha
aas
pop
mov
inc
mov
dec
pop
xchg
dec
faddl
dec
push
and
dec
mov
lea
fldcw
enter
adc
dec
xor
add
cld
or
adc
or
sub
or
sbb
push
fisttpll
dec
rcl
frndint
mov
incb
mov
cwtl
pop
ss
jecxz
dec
or
adcb
jne
adc
in
jno
inc
add
clc
test
in
mulb
insb
pop
mov
push
inc
or
mov
xchg
aam
pusha
sti
or
mov
push
dec
cmpsb
testb
movsb
add
mov
popa
addr16
addr16
sti
xorl
or
jmp
push
ljmp
pushf
movsl
scas
pop
push
sahf
cmp
imul
mov
in
in
jo
lock
sti
inc
pop
jo
or
push
movsb
push
and
out
adc
arpl
lea
fs
and
insl
add
test
mov
punpckldq
mov
leave
je
xlat
cltd
mov
cld
push
adcl
sarb
mov
jge
pusha
add
clc
push
push
mov
jne
dec
pop
sub
les
mov
sbb
add
push
xchg
je
mov
mov
out
repnz
loope
lods
dec
jae
fcmovnu
push
xchg
nop
xchg
mov
sub
sbb
jmp
xor
inc
jo
push
loop
or
js
add
dec
leave
and
es
movsl
out
scas
mov
sub
cmp
jle
or
push
divl
out
push
fisubrs
push
shlb
cmp
push
xchg
adc
pusha
scas
in
dec
or
sbb
xchg
mov
mov
sbb
pop
or
push
jge
shlb
or
inc
orb
enter
nop
movsb
loopne
add
out
lock
xchg
fcoml
jmp
popa
js
mov
outsl
sub
scas
or
sbb
mov
aas
mov
inc
push
add
fistpll
or
dec
sub
nop
and
push
push
adc
sbb
and
test
es
pop
daa
loopne
pusha
adc
xchg
insw
subb
dec
scas
adc
pop
pop
ljmp
mov
mov
pop
add
mov
movsl
inc
daa
outsb
dec
pop
sub
cli
jl
push
sub
cmp
inc
push
add
xor
xchg
sub
cmp
bound
push
ja
push
mov
orl
pop
or
icebp
sbbb
cli
addl
loope
push
movb
mov
inc
fiaddl
push
hlt
stos
and
pop
dec
clc
cmpb
fwait
xchg
ss
adc
push
xchg
stos
stos
add
das
or
outsb
xchg
sub
xor
add
or
add
add
and
push
lods
fisubrs
and
pusha
push
sbb
addb
shlb
pop
sub
loope
add
cmp
fiaddl
inc
cld
adc
inc
adc
mov
inc
adc
orl
pop
cwtl
and
sarb
push
add
sbb
lahf
mov
and
lods
cmc
arpl
ja
pop
or
pop
cvtdq2ps
mov
fidivl
add
incb
mov
add
add
js
data16
xor
imul
movsb
add
aam
lret
adc
or
cmp
jbe
lcall
jl
sub
popa
gs
jnp
pop
loopne
and
popf
inc
jmp
cmpw
sub
arpl
ds
or
popf
mov
jo
hlt
mov
lods
pop
inc
cmp
aaa
shll
cmp
jmp
aaa
aam
jge
movsl
push
scas
aaa
movb
push
seta
add
dec
movmskps
clc
clc
mov
ds
mov
push
mov
mov
rcll
inc
sub
xchg
fstpl
mov
xchg
loope
sub
xchg
cmpsl
popf
mov
sub
movsl
je
lahf
je
js
cmpb
in
dec
xchg
movsl
or
push
adc
or
fcoms
jo
mov
xchg
xchg
jb
or
or
in
enter
pop
push
mov
in
mov
je
push
mov
xor
push
adc
pop
add
push
inc
cmp
mov
cmp
jne
stc
sub
leave
inc
cs
sub
add
aam
pop
xchg
repnz
xchg
lret
cli
sbb
xchg
cld
clc
addb
sbb
push
cmp
pop
xor
scas
cmp
popf
shrb
lea
sub
out
jg
and
repnz
and
jo
jmp
sub
sub
out
outsl
rorb
aad
in
sub
test
adc
insb
xchg
pop
cmp
xchg
add
mov
push
iret
add
push
push
add
mov
adc
cmp
mov
jmp
adc
adc
jnp
cmp
js
lea
jae
rclb
or
and
adc
arpl
xlat
sub
mov
icebp
addr16
and
inc
push
inc
or
pop
test
push
xchg
mov
sbb
push
fs
and
or
das
mov
rclb
inc
filds
loope
push
pop
daa
and
add
mov
inc
mov
xchg
mov
mov
mov
xor
dec
daa
adc
test
adc
and
call
xchg
test
addr16
pop
cwtl
lcall
inc
xchg
nop
or
mov
leave
and
sbb
jle
das
mov
ja
push
mov
dec
add
lock
fimuls
ud0
sbb
xor
and
sbb
insl
sbb
inc
shr
outsl
jne
or
ss
cmp
sbb
xor
push
jecxz
adc
and
pushf
and
imul
sahf
or
inc
cmpsb
into
bound
stc
testl
clc
xchg
sub
lods
aad
and
loopne
pusha
push
mov
dec
pop
or
mov
lods
xchg
add
jb
mov
dec
and
cmp
aam
addl
add
pop
out
inc
or
xchg
mov
xor
les
xchg
test
dec
movsb
xchg
add
popf
push
adc
dec
lea
add
out
or
jae
dec
shl
jo
pop
dec
jg
ret
ljmp
pop
rclb
lret
xchg
sbb
fcomps
inc
or
gs
or
addb
mov
jecxz
push
cmp
mov
mov
cmp
mov
gs
pushf
sbb
arpl
jmp
cmp
data16
and
nopl
sub
or
mov
ret
sbb
pop
mov
dec
jmp
mov
mov
mov
and
lea
dec
push
sub
enter
sbb
push
push
nop
cmp
xor
push
sbb
mov
fcomi
fstpt
fnstcw
cmp
mov
jns
aas
sahf
adc
inc
jo
xchg
adc
jle
out
add
fdivrl
sbb
and
pushf
aam
in
xchg
pop
pop
mov
in
mov
orb
mov
test
bound
loope
arpl
cmp
je
pusha
add
adc
dec
cld
jecxz
loope
and
add
and
push
add
fldl
gs
inc
jnp
mov
jmp
out
dec
aam
in
and
xor
xor
jnp
les
dec
or
lock
js
sarb
adc
and
inc
inc
adcb
push
scas
push
add
fisttps
push
lock
pop
pop
orl
je
push
scas
mov
push
or
dec
cmpsl
mov
stos
lahf
cmpsl
scas
fsubl
int
lock
int3
je
inc
inc
es
scas
cmp
lcall
mov
dec
cld
xor
jecxz
arpl
jne
xchg
jge
gs
cld
sarb
std
xor
xchg
cmpsl
jo
mov
lds
pop
sub
xor
xchg
dec
out
aaa
and
jo
or
pop
mov
test
inc
fstp
fistps
add
push
or
daa
add
or
inc
sub
or
cmp
mov
mov
fists
or
or
xchg
ret
adc
sub
or
jno
insl
es
fsubl
xor
ja
mov
inc
mov
jmp
dec
cmp
dec
imul
inc
xchg
rcrl
in
es
mov
stos
scas
or
pop
inc
dec
fsts
js
jno
daa
pop
push
mov
lea
push
or
add
sahf
hlt
stos
jo
adc
jp
movsl
dec
mov
xchg
xchg
push
out
push
call
sub
loope
fisubrl
lods
mov
mov
push
push
loope
popf
xchg
popf
arpl
in
nop
pop
sub
movsb
push
or
dec
mov
lock
cmp
js
aam
pop
loope
js
mov
mov
ja
imul
and
and
mov
imull
push
xor
pop
adc
iret
shlb
je
dec
movsl
and
and
dec
aam
cmp
loop
sbb
mov
cmp
iret
insl
loopne
push
shrb
lods
adc
and
test
sbb
inc
lock
and
les
add
test
dec
ss
jmp
cmpl
or
add
add
jmp
les
clc
push
sbb
jne
inc
xor
dec
pop
xchg
cld
adc
jne
pop
cs
test
adcl
push
mov
and
push
cmpb
dec
or
or
test
push
inc
mov
mov
or
loope
loope
andb
sbb
ja
incb
pop
cmp
daa
inc
or
mov
rorb
in
xorb
xchg
push
dec
cmpps
and
fdivr
or
xor
xchg
cmp
mov
push
cmp
lea
lods
pop
es
cli
push
mov
fistl
jb
ljmp
jmp
mov
jle
arpl
jne
dec
cmp
cmp
mov
add
adc
mov
popa
out
imul
xchg
xor
fiaddl
jle
dec
push
out
dec
movsl
sbb
jmp
add
adc
adc
mov
push
nop
inc
roll
push
insb
imul
loope
xor
out
cs
jne
add
lock
das
cmp
pop
and
mov
stos
sbb
gs
or
test
and
jmp
xorb
push
shlb
cmp
gs
pop
mov
loop
xchg
cmp
mov
cmpsl
jo
mov
aad
jne
sub
inc
mov
aam
push
pop
cmpsb
jbe
dec
pop
sti
mov
xor
and
mov
mov
rorl
jne
adc
icebp
int
push
into
jne
cli
adc
cmp
incb
add
xor
popa
adc
add
cmc
sbb
int
sbb
push
pop
and
js
pop
xor
out
add
jo
xchg
xor
or
mov
lcall
push
lcall
xchg
sbb
dec
imul
or
sub
inc
inc
push
or
jmp
sar
clc
lret
jne
inc
ret
es
rclb
inc
rcl
mov
les
cmp
out
or
jg
loope
int3
add
loopne
sbb
jmp
add
stos
sub
movsl
pop
cmc
add
jb
sarl
mov
jl
push
inc
sub
inc
or
outsl
test
jne
sbb
xlat
jnp
xchg
and
mov
cmpsl
xor
jae
cmp
test
js
mov
and
mov
jge
dec
negl
jmp
sub
and
daa
aas
or
add
inc
cmovne
sub
sub
imul
mov
cmp
and
push
or
add
mov
mov
sahf
inc
or
rorb
push
sahf
pop
cmp
ret
out
lds
push
das
add
push
sti
mov
jno
lods
push
sbb
flds
push
test
add
fists
testl
pop
fldenv
dec
mov
add
pop
or
and
decl
rol
movsl
xor
and
xor
rolb
xor
mov
xchg
sbb
pop
or
addr16
arpl
jae
add
or
popf
push
adc
pop
add
mov
scas
push
add
add
mov
jmp
lock
jne
fbld
jae
movsl
cmp
inc
jo
xlat
gs
unpckhps
call
or
xchg
xchg
push
sub
adc
insl
push
cmp
mov
das
sub
add
sbbl
cmp
addr16
scas
movsl
aas
mov
lods
mov
inc
sub
pop
jo
inc
sub
adc
xchg
adc
mov
test
or
mov
sarl
xchg
std
cmp
jge
and
pop
mov
lcall
call
push
aas
mov
mov
fcom
ds
and
xchg
and
sets
cmpsl
cmc
add
rcll
push
sbb
imul
ret
jae
fstl
sbb
push
call
pop
lods
jg
adc
ja
pushf
in
mov
sbb
cmp
push
shufps
dec
adc
sub
cs
pusha
or
mov
call
dec
xchg
rorb
cs
js
icebp
out
sub
push
ds
arpl
push
and
cmpsb
out
xor
cmp
or
cmp
pop
adc
cmp
rcrl
stos
ret
xlat
xchg
push
roll
pop
lret
stc
pop
loopne
push
addb
add
repz
enter
xchg
test
je
ds
inc
fcoml
or
ret
pusha
lcall
adc
je
scas
adc
push
mov
pop
andb
jmp
push
xor
xchg
je
lock
clc
inc
loop
pusha
sub
lcall
aad
mov
je
and
or
sub
dec
mov
sub
sub
and
fistpll
jo
mov
test
es
mov
sub
xor
inc
fnstenv
inc
mov
shrb
mov
xor
pop
icebp
cmp
in
dec
add
add
cmpsb
mov
mov
scas
xlat
sbb
and
jne
aam
add
sub
adc
dec
loop
mov
add
mov
xor
inc
loope
js
aaa
or
out
xchg
movsl
pop
popf
movsb
js
mov
and
sbb
push
or
mov
adc
push
sub
loop
inc
pop
add
test
jle
or
cmpsb
mov
hlt
or
mov
push
and
cmp
aad
dec
or
notl
orl
jne
and
push
fs
loop
pusha
inc
das
aaa
dec
sbb
shlb
xchg
pop
loop
xor
or
sbb
jg
add
inc
inc
je
pop
fdiv
xorb
je
pop
je
jmp
push
movsb
cltd
cmp
adc
mov
sbb
fs
rorl
movsb
add
xor
mov
xor
xchg
fs
add
test
shlb
sbb
dec
xor
js
pop
imull
dec
jb
add
add
jb
stc
mov
sub
cmp
inc
cmp
or
popl
rol
cs
dec
mov
adc
scas
jnp
mov
cmp
imul
mov
cmp
stos
scas
adc
or
loop
insl
pop
xchg
sub
sub
repnz
sub
and
lods
shlb
icebp
enter
cmp
push
sbb
xchg
push
sub
push
clc
or
dec
jae
lock
dec
jae
cltd
je
or
call
mov
fnsave
rorb
fmul
or
fmul
les
je
dec
test
add
stos
mov
mov
popf
pushf
das
add
fisubl
cmpb
add
add
shrl
rclb
andb
das
imul
lcall
jmp
cmp
into
fs
adc
outsb
dec
inc
cmpsb
push
xchg
mov
xchg
cmpsb
cltd
rorb
add
mov
mov
inc
mov
add
xchg
or
or
nop
in
lret
add
mov
push
mov
cmp
mov
movsb
or
xchg
dec
rorl
mov
lock
jo
mov
dec
lcall
jbe
cmc
mov
mov
jge
dec
jno
jo
scas
adc
loopne
add
cmp
cs
jle
das
ficomps
and
jle
adc
sbb
sbb
xchg
lret
and
clc
mov
adc
sub
or
push
pop
movsl
mov
push
mov
aam
movsb
rolb
pop
test
mov
jmp
imul
sti
or
leave
rolb
jle
sbb
sarl
fsubl
rcl
mov
dec
int3
or
dec
fcomp
and
xchg
cmp
clc
sbb
aam
aam
les
je
rclb
sub
cmpsb
lds
repz
inc
cs
add
push
jbe
push
or
out
mov
and
push
sub
jge
or
pop
test
call
mov
je
addr16
sub
aam
inc
add
cld
test
pop
mov
pop
dec
je
sbbl
hlt
das
sbb
fs
mov
jae
add
shlb
mov
xor
xor
sbb
hlt
sbb
das
adc
fnstenv
or
ret
js
xor
insl
ret
in
sub
call
arpl
adc
adc
jl
jg
inc
jne
sub
mov
push
and
sub
adc
jge
cmp
push
sub
in
outsb
or
sbb
dec
jmp
dec
sbb
movsb
jne
inc
xor
adc
or
orl
mov
adcb
dec
cld
add
or
sub
ss
fsubrs
rorl
add
lock
cs
lcall
add
loopne
imul
movsb
add
add
xchg
pop
aas
pushf
adc
push
inc
call
aaa
or
adc
aaa
shl
push
addl
rorb
push
ficoms
push
add
xorb
sbb
mov
imulb
mov
push
push
add
adc
pop
lret
test
or
mov
add
add
in
adc
popf
roll
in
adc
inc
sbb
rorb
push
notb
imul
aam
popf
add
or
mov
decl
jge
js
lcall
pusha
cmp
aam
mov
push
mov
push
push
pushf
adc
fsubrs
popf
arpl
add
sub
adc
loopne
movsb
mov
jno
out
or
sbb
mov
sub
adcb
or
sbb
xor
add
sbb
or
dec
movsb
mov
mov
inc
outsb
mov
or
adc
add
or
leave
sub
fimull
mov
lock
test
or
hlt
inc
sbb
add
xor
xor
les
clc
add
and
aam
dec
add
pop
mov
in
test
fsubl
ja
jecxz
and
push
nop
or
or
mov
xchg
clc
pop
js
imul
cltd
in
xchg
xchg
addr16
aaa
push
rorb
adc
add
xor
leave
rcr
popa
xor
nop
pusha
mov
pusha
cmpsl
mov
dec
pusha
inc
adc
lock
xchg
scas
mov
mov
or
aas
roll
cmp
or
sbb
lds
adc
pop
sub
pop
and
push
out
cmc
and
add
mov
xchg
dec
js
enter
enter
xor
dec
cltd
pop
movsb
and
je
lret
cmp
addr16
hlt
mov
sahf
cmp
xor
adc
repz
xchg
inc
sbb
pop
lcall
mov
push
cmp
push
mov
dec
xor
and
dec
call
sbb
inc
and
cmpl
lods
pusha
lods
push
xchg
out
or
aas
ljmp
push
and
push
nop
test
fadds
push
aad
data16
or
fucomp
add
cmp
add
xlat
fs
jg
dec
add
imull
adc
mov
hlt
jb
mov
sbb
fisttps
sbb
and
mov
sub
add
daa
sar
and
jno
shr
sbb
or
adc
frstor
ror
pop
fxch
dec
xchg
lock
fwait
lods
out
movsl
xorl
repnz
or
and
xchg
adc
test
mov
mov
push
inc
push
and
mov
call
in
insl
je
cmp
shll
call
sbb
or
lret
rcrb
xchg
orb
cmp
add
dec
jmp
inc
xchg
shll
stos
pop
mov
sbb
addb
cmp
push
scas
sub
leave
or
lret
dec
push
cmp
sbb
mov
cltd
inc
dec
sub
mov
andb
and
dec
xchg
sub
adc
cmpl
pop
leave
scas
test
adc
loope
popa
ret
and
js
je
cltd
jp
aas
sahf
or
xchg
add
loope
or
add
add
dec
sub
sarl
push
popf
cmpsl
inc
add
push
ds
cmpsl
pop
jbe
scas
inc
andb
je
bnd
imul
add
adc
pop
mov
lods
cmpsl
sub
cwtl
inc
jb
scas
sarb
push
or
mov
add
or
mov
aaa
sbb
xlat
fwait
call
cmpb
add
dec
mov
aam
imul
clc
or
xchg
dec
lock
or
sub
ja
aam
cwtl
dec
add
pop
repnz
das
pop
mov
cmp
dec
pop
in
rclb
lds
jl
dec
push
imul
fsubs
mov
add
incb
les
add
insl
dec
jge
sbb
rolb
push
aam
cmc
sbb
adc
xor
clc
jns
mov
clc
jge
cmp
in
lcall
dec
call
cmp
fistl
lods
mov
pop
bound
fsubrl
test
test
popf
sbb
shrb
cltd
outsl
outsl
xor
lretw
or
or
pop
adc
jbe
ret
pop
cmp
setl
lret
jo
inc
fidivrl
insl
or
xchg
cmp
cltd
and
pop
das
sbb
sbb
push
imul
dec
xchg
inc
and
inc
or
repnz
call
pop
or
xor
jno
pop
cmp
add
push
rorl
add
xchg
mov
inc
sbb
insl
lods
add
aaa
outsl
iret
js
cmp
jg
dec
or
std
inc
jle
fbstp
xchg
xchg
xchg
mov
or
mov
and
dec
je
arpl
push
dec
dec
mov
sbb
jne
jne
push
mov
pop
hlt
push
ret
out
daa
cmp
mov
inc
add
bnd
ret
subb
cmp
popa
leave
je
adc
subl
lea
xor
push
xchg
xchg
rolb
call
or
cmpsb
sbb
in
push
xchg
ss
mov
mov
inc
mov
sbb
push
clc
dec
bound
leave
je
adc
push
or
cmp
mov
cwtl
inc
push
sbb
xor
mov
adc
mov
xchg
movsb
rolb
mov
inc
scas
mov
xchg
add
dec
adc
xchg
dec
fistl
fs
dec
cmpb
inc
je
ret
and
push
js
or
fistps
or
push
pop
fldl
faddl
sbb
push
push
push
inc
outsl
ljmp
cmp
ja
je
pop
or
mov
mov
lock
pop
add
xor
adc
push
mov
jo
addb
xchg
inc
insb
rep
ret
inc
inc
jmp
jne
das
or
adc
mov
xor
out
popa
or
insb
out
jge
mov
and
push
addb
push
add
lret
xchg
mov
pop
js
or
add
sbb
cmp
mov
mov
push
imul
jl
clc
fwait
jl
xor
dec
cltd
es
and
sub
inc
iret
xchg
ror
shrb
leave
add
jno
or
cmpsl
repnz
add
aas
xchg
rcr
cmp
stos
popa
xor
push
loope
mov
pop
cld
mov
and
and
pop
orb
add
fsubs
add
adc
sahf
push
xchg
xor
ljmp
adcb
mov
clc
sbb
les
and
aam
jp
dec
pop
mov
jp
push
add
ja
push
sbb
inc
fs
adc
rorl
sbb
and
push
or
xchg
repnz
sbb
mov
xor
sub
push
sbb
inc
or
add
add
cs
jmp
mov
popa
pop
pusha
ffreep
mov
push
mov
lea
mov
or
notl
add
and
xchg
adc
xchg
xor
add
jne
fistps
jmp
fcoms
clc
jl
mov
sbb
push
and
pusha
pop
mov
push
push
dec
jge
fidivs
jp
inc
adc
icebp
cmp
sbb
hlt
push
dec
inc
xchg
lods
inc
jecxz
push
push
jp
fnstcw
push
pop
imul
inc
out
stos
lods
xchg
cwtl
out
je
push
jne
ja
popf
cmpl
add
mov
jmp
adc
popa
pop
or
roll
jo
cmp
jne
mov
cmpsl
arpl
sar
mov
jne
lock
outsb
imul
cmp
sbb
loope
insb
pusha
shr
mov
cwtl
int
call
xor
or
push
inc
pop
cwtl
push
call
aaa
shl
dec
jbe
sti
ljmp
cmc
notb
cmp
add
ret
cwtl
xor
les
xor
add
xor
add
addr16
movsb
dec
test
mov
movb
dec
xlat
adc
and
and
push
inc
pop
insb
mov
or
lret
add
push
aaa
mov
lods
xchg
xchg
loopne
call
mov
or
stos
push
cmc
pop
leave
pop
fistps
das
imul
dec
or
xor
mov
cmc
ss
lods
rcrb
sbbl
and
ds
sub
mov
cmp
dec
dec
sub
ja
cmp
push
pop
in
and
or
mov
lret
jl
sub
movsb
mov
sub
les
mov
or
mov
pop
jecxz
rorl
push
dec
outsl
in
daa
and
insl
rorb
ficomps
les
dec
push
sbb
jp
mov
fstps
test
sub
adc
mov
fdivrs
lea
scas
sbb
push
and
lods
push
clc
rcll
pop
sbb
pop
or
loopne
cmp
imul
scas
sub
sbb
ljmp
sub
imul
push
push
xor
sub
pop
xchg
add
aaa
jo
mov
and
push
mov
lock
mov
pop
addb
dec
movsl
and
and
and
loope
mov
data16
pusha
adc
push
jecxz
mov
inc
and
adc
lds
jno
xchg
insl
or
in
jmp
pop
or
and
loop
add
pushf
mov
test
jle
add
xor
imul
out
sbb
adc
jle
mov
push
jle
add
jle
push
push
and
mov
jo
rol
lret
mov
adc
iret
sub
sbb
dec
or
mov
and
arpl
lock
jo
cld
push
push
scas
cmp
or
fsubs
adc
cmp
cmp
mov
mov
jmp
add
xor
aad
sar
js
fs
adcb
aad
mov
pop
adc
das
in
fsubr
adc
jmp
and
scas
mov
jno
mov
movsl
add
fs
mov
xchg
mov
dec
movsl
jo
mov
jge
out
mov
bound
or
pop
sub
add
ljmp
fwait
adc
addr16
ret
or
mov
mov
fs
popf
ss
xor
sbb
sbb
add
scas
push
xor
ret
decl
xor
pop
fidivrs
imul
loop
test
and
or
or
clc
add
nop
adc
loope
add
lock
aaa
or
and
inc
and
out
gs
or
cmp
push
fisttps
fiadds
pop
mov
icebp
inc
add
push
aam
mov
inc
xorb
and
adc
lods
cltd
xor
add
ret
sbb
cmp
mov
sub
es
sbb
jmp
fwait
xchg
jmp
pop
cmp
xchg
and
lds
dec
lea
pop
sar
sub
dec
and
mov
dec
cmp
rolb
scas
rolb
mov
lods
adc
cmpb
and
push
es
mov
cwtl
dec
pushf
push
insl
adc
imul
mov
lock
inc
pop
sub
test
je
daa
ror
pop
rorl
sub
aam
call
push
icebp
pop
fbld
jg
lea
or
dec
in
mov
ljmp
mov
adc
xorl
xor
or
push
pop
pop
xlat
sbb
sub
filds
fistpl
pop
lea
popa
sbb
dec
sub
sbb
adc
sub
dec
mov
inc
inc
dec
ret
daa
test
fnstsw
testl
scas
sub
mov
fldl
or
or
cs
pusha
nop
lcall
cltd
xor
addb
mov
cmp
clc
adc
add
sbb
xchg
cmp
or
sbb
lds
divb
notl
sbb
fwait
rorb
je
or
mov
add
sub
and
pop
bound
push
xlat
cmc
push
sub
inc
dec
dec
mov
or
dec
loopne
add
jns
inc
int3
or
pop
and
or
push
and
fcom
cmpsb
push
lcall
add
jmp
jb
fdivs
sbb
dec
add
js
jle
cld
test
cwtl
lret
or
stc
ja
ss
push
push
movl
rorl
sbb
sbbl
lcall
push
adc
jne
divps
adc
aas
pop
adc
push
loopne
inc
or
mov
bound
js
jmp
mov
aad
cmp
or
fsubs
popf
pop
add
imul
xor
fldenv
les
jb
test
xchg
mov
negl
and
add
push
push
dec
shll
inc
xchg
mov
fsubr
and
rorb
cld
sub
sbb
or
or
adc
adc
or
and
sti
xchg
sbb
int
sbb
add
fstpt
xchg
dec
sti
dec
add
jp
cmp
and
add
adc
xchg
adc
leave
enter
pushf
add
xchg
xchg
pop
dec
cld
sbb
arpl
dec
sub
cmp
jge
rcl
add
sub
popa
adc
mov
or
sbb
push
xchg
jg
idivb
jmp
jg
imul
and
sub
sbb
push
inc
add
ret
xor
movsl
add
xlat
dec
or
cmp
in
inc
gs
fisubrs
push
insb
pop
dec
or
loopne
mov
push
push
adc
dec
in
roll
pop
int3
gs
or
and
jo
adc
xorb
sub
or
icebp
sbb
inc
push
das
and
sub
adc
cmp
jg
mov
mov
rcrl
aas
add
jmp
add
xor
frstor
sub
ret
inc
adc
call
jne
std
mov
sbb
adc
or
pop
sbb
clc
pop
dec
add
nop
cmpsl
mov
aam
ja
fimuls
mov
aad
sbb
loop
xchg
insl
xor
call
push
dec
insl
jns
push
and
pop
mov
xchg
add
call
aam
lods
jge
adc
push
lock
adc
inc
add
or
test
or
jle
ds
or
ss
popa
and
xchg
movsb
xor
leave
mov
cmp
loop
dec
fmuls
and
and
mov
mov
and
push
dec
and
pop
orb
add
dec
pushf
roll
in
popf
jbe
outsb
loopne
fisubrs
stos
test
in
lods
lods
mov
mov
pop
pop
sub
push
jmp
pop
xor
jl
sub
fs
xor
ret
arpl
movsl
mov
xor
mov
add
ret
or
mov
dec
pop
shr
push
lea
xchg
orb
mov
cmp
xchg
es
jo
js
jg
xorl
sbb
lock
xchg
fistpl
in
rcll
decl
jne
test
adc
hlt
cld
je
pop
xchg
cmp
jecxz
subl
lock
inc
push
inc
imulb
adc
inc
movsl
mov
into
add
xchg
xlat
fsubrs
push
and
pusha
push
add
mov
push
add
orl
adc
fld
pinsrw
sbb
fmuls
sbb
lcall
mov
iret
aas
outsb
mov
or
cmp
push
mov
lret
fsubs
jbe
daa
addr16
shlb
mov
inc
fsubr
push
pop
jle
rorl
jae
inc
jge
data16
cmpsb
pop
or
sbb
fmull
jb
leave
out
and
jge
push
or
cmp
mov
inc
out
pop
les
mov
sbb
fcoms
xor
sti
shrl
arpl
adc
mov
adc
xor
in
jmp
push
movl
push
lea
iret
add
mov
adcb
xor
ss
scas
inc
cmp
push
xchg
ja
pop
add
inc
pop
gs
scas
insl
outsl
pop
ljmp
mov
cwtl
inc
add
or
in
dec
adc
and
fcompl
and
pop
les
jns
cmp
adc
jns
lret
dec
and
mov
aaa
stc
xchg
dec
or
adc
xor
or
adc
dec
outsl
pop
popl
sbb
cld
xor
sub
and
sahf
inc
jb
push
pop
out
ss
inc
sti
and
or
or
testl
dec
sbb
inc
mov
insl
or
and
and
inc
fs
push
sbb
mov
xor
jg
adc
xchg
dec
sub
inc
out
pop
add
xchg
or
lahf
mov
mov
add
push
aaa
add
jo
jo
and
add
add
cmpsl
add
cmp
xchg
lods
pop
pop
bound
inc
sub
inc
xor
push
adc
roll
sbb
inc
or
das
or
and
inc
iret
pop
ja
in
in
add
hlt
pop
sub
and
cmp
cmp
mov
xor
cltd
jle
les
rorl
lret
les
mov
dec
and
stos
loop
pop
pusha
mov
loope
push
andb
cmp
dec
inc
ljmp
sbb
adc
xlat
xlat
cmpsb
push
mov
lcall
lret
les
dec
inc
imul
imul
push
fsubs
or
js
xlat
pusha
inc
push
push
or
cmpsb
es
test
adc
pusha
cmc
cwtl
fmuls
and
xor
or
push
jnp,pn
xchg
mov
pop
or
inc
add
adc
loopne
push
lcall
mov
cwtl
ficoml
fwait
fwait
js
or
or
sar
jns
andl
dec
sub
fmuls
orl
hlt
xor
fs
jne
add
adc
sahf
dec
hlt
add
shll
pusha
pop
fdivrs
add
pop
xlat
sub
js
dec
jnp
push
push
pop
repnz
xchg
es
and
ret
lea
in
push
pop
push
dec
sbb
or
add
leave
sbb
out
adc
inc
jmp
fs
pop
xchg
xchg
pop
pop
dec
or
add
daa
cmp
fisubrs
xchg
ds
xchg
movb
mov
and
dec
test
xor
dec
jne
cmp
hlt
faddl
mov
jne
add
sbb
add
xchg
mov
popf
adc
in
aas
lock
test
xchg
orl
dec
cli
mov
sub
add
mov
adc
sub
clc
mov
test
jne
mov
add
mov
gs
push
in
mov
arpl
mov
shrl
sarb
sub
mov
pop
adc
xor
adc
pop
lea
xchg
mov
testl
arpl
and
cli
or
movsb
mov
xchg
cmp
xchg
ljmp
fdivrl
sub
mov
outsb
out
cltd
add
js
dec
add
and
push
lods
rorl
ss
mov
mov
pop
mov
inc
aaa
inc
sbb
pop
or
mov
shlb
sbb
ja
adc
inc
jns
movsb
xchg
sbbb
lock
stos
ja
mov
nop
leave
add
xor
mull
std
mov
mov
cmp
pop
add
js
dec
cmpsl
jne
in
fistl
fldenv
unpcklps
sbb
push
lea
mov
sbb
ret
mov
adc
lret
sbb
xor
inc
sub
sbb
push
or
arpl
fsubp
and
xchg
sbb
push
sar
inc
das
sub
jne
sbb
and
mov
inc
cs
sub
or
inc
dec
scas
ret
into
outsb
push
add
inc
mov
and
push
mov
lds
and
cmp
xchg
sub
adcl
cltd
scas
xor
xchg
or
fimuls
or
sbb
adc
cmpsl
jnp
rol
in
cmp
mov
scas
adc
mov
das
outsb
sbb
jp
scas
adc
outsl
fs
outsb
and
sbb
pop
mov
jecxz
les
push
rorb
push
and
jecxz
mov
fldl
or
insb
repnz
inc
sub
or
daa
xchg
xor
xchg
jmp
jne
les
pop
sub
mov
repz
lcall
or
imul
shlb
add
inc
push
xor
mov
xor
cmp
add
outsb
jne
sub
aam
or
cmp
jmp
jo
xor
popf
or
dec
pop
lock
es
or
mull
cmp
iret
stos
lahf
pop
xchg
sub
aam
loop
sbb
rcll
mov
clc
stos
hlt
dec
adc
mov
inc
or
cmpsb
push
sbb
dec
mov
repnz
ds
pop
divb
aam
in
jne
jae
ds
pop
inc
jbe
sub
adc
jne
pop
ret
pusha
pop
aaa
adc
add
jg
movsb
pop
and
or
aas
cs
push
or
inc
test
imull
xorl
fs
shlb
insb
jb
pop
lahf
adc
add
cmp
jg
divl
insb
xchg
arpl
xchg
pop
adc
daa
lcall
adc
dec
push
push
jns
pop
adc
out
rolb
shrb
cs
xor
pop
rcrb
inc
jnp
adc
cmpb
inc
rolb
int
push
push
fnstenv
mov
fildl
push
jo
les
and
rcl
add
scas
pop
cmp
mov
lock
xor
xchg
xor
pop
aam
inc
cmp
jp
psraw
outsl
inc
pop
push
popa
jae
mov
leave
test
xor
adcl
inc
mov
shll
inc
xchg
adc
and
add
pop
das
stc
inc
addr16
adc
lods
movsl
pop
adc
mov
pop
xchg
cltd
xor
jo
ss
popf
xchg
xor
rclb
pop
or
push
adc
xor
arpl
xlat
pop
cld
je
xchg
popf
test
adc
popf
inc
adc
and
fists
cmp
out
jle
or
mov
ficompl
inc
push
popa
js
sbb
js
push
hlt
clc
rorb
andl
insl
lods
add
jo
push
or
or
mov
cli
pop
adc
push
and
or
xor
mov
mov
lea
sbb
mov
pusha
in
push
mov
outsl
pusha
movsb
outsb
popf
xchg
or
or
nop
jl
lcall
loopne
sarl
ss
ss
es
inc
push
sbb
or
push
inc
mov
adc
and
cmc
add
push
push
inc
and
sbb
nop
push
lods
sbb
or
jne
xor
pop
xchg
loop
mov
bound
lret
hlt
sbb
bound
jno
mov
mov
and
jo
divb
inc
fst
inc
cwtl
pop
adc
xchg
add
cs
and
mov
sbb
sub
cmp
inc
sbb
add
fistl
pop
mov
pop
adc
sub
push
stc
or
cmp
mov
popf
jbe
sub
addr16
pop
and
mov
cltd
mov
outsl
jnp
cli
aaa
adc
inc
aam
mov
flds
rcr
mov
pop
or
and
mov
and
popf
loope
outsb
push
pop
jmp
adc
add
sub
inc
cmp
cld
push
mov
stos
filds
pop
int3
push
push
mov
xchg
fisubrs
xor
dec
jg
push
sbb
clc
and
push
cmp
mov
cmp
sar
mov
cs
loopne
ret
pop
insb
aaa
lret
sub
lods
loop
mov
fwait
nop
fwait
sub
add
adc
test
loop
cmp
fcmovbe
push
sbb
dec
mov
sti
popa
or
xor
lea
dec
shlb
xchg
rorl
adc
sbb
push
adc
dec
testl
in
mov
stos
dec
xchg
lahf
sbb
and
mov
sub
inc
inc
jne
cmp
inc
pop
ja
inc
adc
jp
inc
dec
cmp
mov
insb
cmp
mov
jne
sbb
push
mov
jle
push
insl
cld
add
adc
adc
inc
or
sbb
sbb
xor
test
daa
cwtl
mov
lahf
data16
push
xor
add
mov
insl
xor
inc
sub
ljmp
movsb
imul
sub
fdivs
popa
mov
jg
xchg
xor
or
add
pushf
ficomps
jl
mov
mov
fmuls
shrl
mov
outsl
cmp
push
and
hlt
mov
push
jg
push
mov
add
cmpsw
lods
clc
inc
inc
add
sub
inc
add
inc
push
adc
dec
sbb
dec
sub
and
or
mov
inc
jl
push
dec
mov
pop
add
ret
or
inc
aam
ficoms
icebp
call
add
or
cmpl
mov
push
xchg
aam
and
or
push
mov
push
xchg
ss
adc
jge
js
jg
popa
push
aam
add
in
adc
mov
mov
inc
mov
out
aas
jno
adc
test
shll
icebp
inc
xor
mov
or
sub
fsubrl
test
fs
je
test
or
popf
adc
adc
sbb
cmpb
adc
add
or
test
and
mov
xor
or
outsb
les
aaa
mov
mov
movsb
pop
push
jl
or
dec
push
pop
add
or
int
xor
xor
xor
add
das
inc
fimull
jg
test
xor
aas
fnstcw
xor
jmp
inc
adc
or
ret
add
push
push
movsb
aam
sti
insb
cmp
pop
push
sti
mov
add
cmpl
dec
lea
mov
frstor
pop
cmc
dec
sbb
das
test
scas
insl
xor
pop
xor
dec
cmp
mov
jl
insl
xchg
leave
les
ds
or
pop
loop
outsl
jl
adc
and
andb
add
mov
inc
sbb
xor
stos
cmp
sbb
rcrl
add
jo
pop
add
mov
xor
pop
push
jo
inc
xor
ror
dec
push
adc
push
push
leave
dec
loop
arpl
cmp
call
rcrb
in
and
xor
loop
lea
or
mov
push
push
xchg
test
vpshad
ja
sbb
pop
ret
out
jle
or
or
subl
lock
call
or
xor
pushl
test
adc
mov
subb
call
mov
inc
sub
inc
sub
inc
stos
adcb
addr16
clc
mov
imul
jecxz
inc
ret
xlat
rcr
mov
out
xchg
and
test
mov
or
lock
orb
cmp
inc
mov
jecxz
je
sub
push
sbb
add
lea
adc
sbb
push
data16
sbb
mov
pop
and
movsb
xlat
leave
rolb
imul
js
cmpsb
push
sbb
popf
or
sub
push
fsubl
imul
in
addl
or
and
push
mov
test
mov
cmp
cmpb
test
loopne
inc
loope
nop
cs
adc
pusha
cltd
stc
adc
push
add
push
cltd
shr
sub
loopne
orb
rclb
dec
sbb
add
and
cld
es
iret
dec
inc
push
or
sub
mov
rcrb
cmp
fdivrs
aaa
and
int3
lods
jnp
and
pop
sub
in
sub
pop
inc
pusha
or
je
jb
xchg
push
test
mov
nop
aam
loopne
inc
xchg
push
push
shlb
test
inc
push
call
jle
dec
dec
dec
dec
push
dec
dec
dec
inc
add
xor
dec
push
inc
gs
and
sub
push
gs
insb
xor
sub
ret
and
jae
push
movsb
test
push
or
or
cmp
inc
out
adc
inc
xchg
dec
sbb
loopne
jae
pop
test
imul
pop
jno
test
das
cmp
sbb
push
sbb
movsl
flds
dec
rclb
adc
pop
popl
inc
in
mov
sub
inc
loopne
mov
daa
push
stos
test
pushf
mov
cmpl
push
sub
adc
maxps
cmpsb
xor
sbb
xchg
in
subb
das
push
stos
aam
loopne,pn
popf
xchg
push
or
sbbl
jbe
dec
mov
push
add
mov
shl
inc
scas
fdivrs
or
lods
loope
subb
pop
sub
and
xor
jecxz
in
xchg
or
sub
fs
or
or
inc
pop
add
mov
push
inc
or
add
nop
fldl
push
push
mov
push
dec
ret
mov
dec
jns
pop
cmp
pop
stos
into
inc
test
inc
sbb
cmp
dec
mov
mov
repnz
not
add
sbb
popf
inc
bound
inc
add
je
loope
clc
mov
jp
fldcw
jno
adc
flds
add
cmp
aaa
loopne
sub
aas
xor
pop
fdivrs
insb
or
fists
aam
cmp
inc
push
push
and
pop
cmp
pop
and
jno
or
adc
sahf
leave
pop
push
xor
daa
inc
test
bound
js
xchg
ret
or
das
aaa
outsl
push
aas
inc
pusha
cmc
gs
mov
das
sub
or
mov
outsl
push
sub
arpl
xchg
imul
inc
or
or
pusha
dec
sbb
or
xor
xlat
sbb
daa
add
jmp
jge
sbb
cmp
rcl
or
xor
add
ljmp
push
jo
xor
js
mov
or
inc
fimull
fwait
push
aas
push
add
and
jnp
clc
dec
sbb
push
inc
pop
mov
or
jo
out
push
and
hlt
mov
adc
test
push
stc
sbb
das
pop
addb
jecxz
inc
adc
jno
xor
push
add
and
fisttps
or
fisubs
int
cmpsl
dec
outsl
xchg
jns
iret
repz
mov
andl
loopne
aad
inc
cmp
mov
clc
rcll
or
dec
lcall
mov
sbb
imul
movsb
imul
rol
and
andl
mov
jmp
adcb
inc
fisubl
das
sbb
pusha
cltd
mov
sarb
out
ja
inc
divl
cmp
rclb
sbb
loopne
shrb
mov
cmp
jle
ficompl
sbb
push
hlt
push
aam
jo
or
pop
dec
and
push
push
push
enter
lods
xchg
movsl
data16
jle
daa
sub
insl
mov
cld
inc
dec
jge
sub
and
imul
arpl
add
sbbl
add
arpl
insb
push
fdivp
fisubrl
imul
insl
inc
outsl
pop
js
out
jnp
fsubl
add
es
jb
jb
ja
jnp
popa
or
pop
fidivrl
jae
jbe
es
int
sti
pop
gs
pop
jo
addr16
jb
sbb
out
sahf
addr16
pop
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
imul
daa
mov
cmp
pop
je
jo
jb
sbb
jns
outsl
dec
data16
sbb
das
add
or
imull
scas
inc
sub
and
insl
xor
adc
sar
push
pop
inc
loopne
and
fs
mov
jle
add
jmp
inc
push
push
outsb
je
add
cmp
mov
inc
movsb
nop
test
movsl
mov
mov
mov
addl
add
adc
or
in
xchg
shrb
test
insl
push
cmp
sbb
sub
movsl
inc
lea
xchg
sbb
cmovge
popa
orl
dec
jl
or
add
xor
and
fs
je
fs
mov
push
into
jp
rol
or
test
gs
xchg
push
shlb
mov
mov
into
mov
push
pop
mov
mov
inc
push
jne
mov
ret
xlat
sbb
lcall
enter
push
sbb
add
push
addl
inc
or
mov
mov
fcompl
add
jne
into
add
xor
subl
es
xchg
xchg
mov
dec
or
and
movsb
add
or
cmp
movb
stos
add
jmp
xor
sub
sbb
or
mov
mov
mov
sub
inc
mov
jbe
inc
xchg
mov
ja
mov
lcall
out
mov
repz
xor
push
or
ror
push
sbb
daa
fistpll
push
sub
add
xor
add
push
push
test
add
subl
mov
gs
add
add
add
iret
repz
add
pop
or
or
or
or
or
or
repz
adc
adc
cmp
repz
std
cmp
sbb
sbb
push
pop
and
and
and
shlb
sahf
mov
pop
push
ja
cltd
stos
lahf
out
sahf
mov
adc
iret
repz
xor
gs
repz
cwtl
test
iret
lret
fsubr
decb
into
and
cmp
repz
xor
pop
insb
loope
cmp
jp
xchg
movsb
mov
ret
mov
mov
ljmp
xchg
imul
or
insl
lds
pop
push
mov
or
or
or
or
in
lret
or
jb
and
sub
pop
adc
xor
xor
cmp
xchg
lret
cmp
mov
push
inc
pop
cs
dec
sbb
xchg
push
push
sbb
and
pop
sub
pusha
ja
push
popa
dec
movsl
repnz
imul
pop
push
sub
adc
sub
and
and
pop
inc
and
push
adc
jmp
mov
jne
lods
cmp
movsl
mov
mov
push
push
das
arpl
fdivs
pop
js
add
mov
popa
xor
xor
add
pusha
aam
ret
add
fdivrs
icebp
fwait
call
or
sub
mov
pushf
lock
and
adc
mov
test
xchg
mov
loopne
rorb
fmull
sahf
or
sub
shrl
or
mov
arpl
cmpb
and
push
mov
out
addr16
push
loopne
sub
sbb
shlb
je
xor
cmpsl
xchg
xchg
ret
or
aam
imul
xor
cmp
dec
inc
xchg
sbb
xchg
fs
push
movsl
fadd
insl
sbb
xor
out
dec
ret
mov
insb
loope
sbb
jp
test
jl
pop
rorb
push
out
out
mov
repnz
jle
and
or
loope
pop
insb
mov
gs
add
fwait
sarb
push
push
dec
fmuls
jo
mov
fists
push
imul
insb
push
inc
data16
and
je
enter
jg
incl
mov
imul
fiaddl
xor
mov
and
ret
sub
hlt
pop
je
dec
sbb
cmp
and
dec
mov
inc
mov
cmp
in
andb
orb
subl
xchg
call
sub
cmpsb
mov
add
mov
pop
cmp
or
cwtl
sbb
or
inc
mov
dec
lods
cwtl
jecxz
fwait
cmp
icebp
mov
inc
cmpsl
push
aaa
inc
dec
stos
push
push
jo
jno
or
add
sbb
add
push
mov
pop
movl
pop
xchg
insb
lds
cmp
mov
sbb
inc
jne
xor
movsl
or
push
daa
lods
xchg
inc
push
icebp
sub
push
or
lods
and
outsb
orb
add
xchg
pop
ja
ret
pop
pop
mov
xor
xor
adc
dec
push
popa
test
cwtl
push
sbb
inc
xor
pop
adc
imull
gs
pop
mov
icebp
push
daa
lods
icebp
aas
or
imul
push
mov
fs
pop
ret
out
cli
les
lret
mov
adc
popf
rcrb
jg
sbb
rorb
mov
or
scas
scas
push
fs
mov
pusha
loopne
das
mov
out
loopew
mov
jmp
scas
or
pop
cmp
adc
daa
hlt
jmp
jnp
mov
bound
xor
pop
add
dec
jo
mov
jae
push
or
cmpsl
in
xor
fsubrp
push
and
push
lahf
nop
fwait
pop
and
fucom
jne
add
dec
jecxz
icebp
pop
clc
jmp
inc
and
xor
xor
hlt
and
cmp
adc
push
push
sub
stos
cmp
dec
hlt
dec
cmp
sbb
scas
adc
or
mov
lock
bound
xchg
cmp
iret
and
bound
cmp
rorb
movaps
and
and
push
dec
imul
scas
fadds
ret
sub
stc
ljmp
push
mov
out
mov
push
or
inc
cmp
jmp
mov
out
jb
jb
sarb
pop
dec
cmp
mov
jecxz
add
dec
add
xor
inc
enter
icebp
inc
pop
xor
sbb
adc
cmc
das
mov
pop
and
andl
adc
clc
int
pop
lock
xor
xchg
fwait
push
popf
adc
pop
adc
push
inc
rcrl
and
pop
add
xor
push
pop
cmp
aaa
mov
adc
inc
sarb
addb
inc
adc
mov
rcr
mov
mov
test
mov
and
and
cmp
mov
or
test
pshufw
loop
cmp
inc
pop
inc
dec
mov
adc
movsl
int
cltd
xchg
xlat
jbe
lret
xchg
pop
inc
pop
fnop
jmp
sub
and
add
push
roll
add
mov
push
xor
movsl
mov
aam
add
dec
cmp
adc
insb
cmp
sbb
mov
lods
fcomps
adc
pop
or
in
push
mov
mov
mov
sub
pop
mov
jg
pop
jb
mov
xchg
jmp
ss
fs
cmp
jne
int3
ljmp
jecxz
out
mov
mov
sbb
pop
and
and
jne
xchg
je
cwtl
and
jns
test
insb
xchg
or
nop
out
or
cmp
inc
cmp
pop
leave
push
mov
xchg
pop
fwait
and
add
xchg
mov
xor
es
das
out
shr
das
in
xor
inc
inc
or
lcall
add
inc
inc
adc
adc
sbb
pop
cmp
sub
je
adc
jg
dec
mov
pop
dec
inc
or
push
mov
imul
cli
pop
and
ja
push
inc
xor
pusha
jb
inc
call
dec
add
and
mov
loope
dec
jl
pop
sub
in
and
fsts
or
mov
sub
popa
pusha
or
lret
rcrb
pop
aaa
fsub
xchg
rcrb
int3
jg
or
and
inc
cmpsb
sbb
shlb
xor
or
xchg
call
jmp
xchg
inc
int3
shrl
jno
das
ljmp
cs
in
es
fmuls
jbe
mov
inc
dec
sbb
cmpsb
xor
dec
and
test
mull
sub
or
pop
inc
push
jbe
adcb
stc
push
add
or
lea
loope
mov
sbb
ds
dec
pop
sub
fidivrl
jmp
sub
cmp
adcb
lret
xchg
xchg
in
shrl
dec
hlt
das
sub
and
scas
xchg
adc
lahf
bound
push
ss
jo
pop
sbb
push
mov
or
ret
dec
das
pop
insb
xchg
xchg
das
adc
clc
setg
jg
adcl
or
push
adc
test
pop
nop
aam
jle
or
inc
flds
or
cs
jp
scas
subb
push
in
mov
sbb
loop
jbe
sbb
mov
addr16
or
imul
jnp
and
popa
jns
lock
jl
and
in
imul
sbb
shlb
loopne
pop
xor
and
dec
and
call
xor
in
xchg
flds
addr16
sub
ja
imul
or
lret
movsl
add
pop
jp
scas
xlat
adc
clc
or
out
movl
dec
subl
jne
push
mov
in
jge
lock
dec
in
jae
dec
in
les
or
push
dec
inc
pushf
cmpsb
jnp
cmp
cmp
adcb
es
xorb
jmp
cmpsl
or
mov
in
pop
push
mov
in
mov
dec
jb
or
test
clc
sub
in
rolb
and
leave
emms
andl
ds
pop
mov
inc
aas
js
xchg
sbb
xchg
out
sbb
fistpll
push
ret
mov
out
aas
inc
loope
shl
add
dec
cmp
or
push
mov
cmp
jne
xchg
out
daa
mov
or
test
les
jl
mov
enter
lock
pop
adc
sub
inc
cmp
das
pusha
shrb
push
xchg
xchg
nop
popf
in
push
adcb
inc
xor
movsb
push
xor
xchg
pop
and
and
push
subl
inc
mov
or
test
xor
add
cmp
jne
mov
dec
jne
data16
add
adc
sbb
scas
adc
mov
add
stc
xchg
fiadds
pop
cmp
jmp
jmp
cld
jb
bound
jp
testl
dec
cwtl
dec
adc
inc
into
inc
repnz
dec
add
scas
les
mov
cmp
cmp
or
adc
dec
inc
mov
out
jmp
outsl
out
sub
pop
imul
and
pushf
pop
pop
xchg
or
cli
inc
loope
pop
dec
incl
ret
push
cmp
pop
sahf
jle
decl
cmpb
adc
in
ljmp
popa
mov
adc
pop
and
dec
out
and
pop
jnp
add
jle
fwait
repz
pusha
jbe
dec
ret
dec
sarb
sbb
mov
add
mov
bound
pop
clc
out
negl
pop
pop
adc
cmp
and
xor
adc
bound
add
sbb
in
pop
xor
enter
adc
and
add
xor
xchg
sbb
sti
ret
push
or
test
pop
sbb
mov
dec
jl
adc
pop
test
sahf
jl
inc
push
add
inc
push
push
adc
imull
andl
into
rcr
dec
sbb
rolb
push
add
xchg
lock
or
sub
adc
push
xor
icebp
shll
inc
pop
sub
scas
and
les
jge
insb
pushf
mov
pop
sarb
in
data16
lea
push
and
nop
pop
pop
sub
ficompl
cwtl
push
fcompl
add
sahf
out
enter
add
xchg
jp
popf
int3
mov
add
lahf
sbb
jbe
mov
js
pop
testb
and
push
lahf
pop
sub
js
in
pop
add
dec
psraw
fidivrl
aam
sbb
mov
xchg
push
sub
push
push
sahf
nop
movsb
mov
sahf
out
enter
fsubs
sahf
out
loopne
or
rorb
or
loopne
add
sbb
add
push
pop
fadds
jns
pop
xor
push
push
mov
les
test
insb
test
sbb
pop
sbb
cld
jnp
insl
xchg
adc
in
addr16
xchg
and
sub
repz
mov
and
cmp
cmp
or
xchg
repz
loopne
inc
dec
push
jno
lea
je
xor
fcomp
sbb
pop
pop
push
push
and
sbb
inc
dec
iret
sbb
cs
movsb
jnp
nop
cwtl
xchg
rclb
and
xor
je
sub
and
lret
sub
mov
mov
dec
jb
or
movsb
xor
dec
xchg
or
jno
rolb
cmp
jo
push
add
mov
push
lahf
das
mov
daa
jmp
ja
aaa
rcrb
or
jmp
xor
shll
or
lock
or
sete
jg
xchg
add
xchg
adc
aad
push
leave
jo
push
lock
rorl
sbb
jb
cmp
cmp
dec
or
xor
addr16
push
cmp
jle
shlb
sub
cmp
push
popa
sbb
adc
inc
imul
arpl
inc
shlb
rorl
and
cmc
jno
lods
push
pop
cmp
and
inc
lret
sbb
or
lret
inc
scas
mov
dec
lret
or
push
fwait
adc
mov
aad
adc
test
push
push
adc
adc
adc
inc
and
push
inc
or
push
cmpsl
pop
call
pushw
ret
sbb
or
ret
lahf
outsb
cmpsl
sub
stos
test
sbb
lret
xor
push
aad
xchg
sbb
mov
add
cmp
mov
aam
lods
inc
loopne
sbbl
popf
xchg
push
inc
and
push
push
push
flds
push
sub
and
cmp
sarb
inc
mov
xor
shrb
push
ja
pop
in
sub
test
sub
movsl
and
rorb
ret
repnz
xor
or
mov
adc
xor
mov
jmp
inc
sbb
mov
xchg
dec
add
outsb
mov
xor
or
in
inc
pop
rolb
ss
add
push
mov
or
test
and
inc
sub
aaa
lcall
sub
or
and
ud2
lea
imul
outsl
int3
or
sub
out
mov
cmp
loopne
sbb
cwtl
push
fs
outsb
or
cmp
insb
push
mov
xchg
scas
add
jae
add
fisubl
or
das
cwtl
inc
dec
or
cmpsb
imul
outsb
or
push
stos
dec
cltd
arpl
ds
sub
adc
xor
xchg
lret
daa
push
adc
sbb
push
dec
push
fmull
inc
sbb
aas
xor
in
dec
loopne
sbb
push
mov
jp
iret
push
xchg
mov
pop
imul
push
icebp
sub
cltd
and
aas
adc
adc
push
neg
sti
inc
popf
jns
mov
lret
out
jl
mov
jnp
loopne
xorl
movsl
inc
pop
rorb
mov
and
and
push
imul
leave
or
cmp
addr16
rcrl
mov
dec
jmp
pop
and
or
fadds
je
mov
sbb
enter
loope
mov
add
push
jno
xchg
sub
or
sub
sub
call
dec
xor
pop
mov
notl
xor
adc
jno
leave
pusha
lock
js
aad
xlat
mov
pop
iret
xchg
cmp
je
cwtl
cmpsl
sbb
lea
pop
roll
jl
mov
push
pusha
outsl
adcl
jne
sbb
sbb
mov
cmpb
sub
test
scas
mov
test
inc
sbb
je
test
aas
sbb
push
inc
je
jne
adc
movb
or
gs
ret
jnp
adc
inc
add
aas
add
xchg
push
sbb
add
sbb
or
rolb
dec
daa
or
xor
inc
addb
jg
sbb
or
and
lock
stc
sti
push
cltd
imul
jbe
jecxz
cmc
pop
xchg
int
pop
lret
jne
push
fdivrl
pop
or
imul
movsl
pop
push
pop
rcll
xchg
push
jno
cmpsb
push
loope
jmp
enter
sbb
push
mov
mov
lahf
and
stc
dec
mov
add
xchg
add
or
aaa
inc
xchg
mov
jne
xchg
push
dec
daa
adc
add
jle
and
dec
outsb
arpl
pop
in
cmpb
aam
xchg
sub
pop
loopne
cmp
jo
addr16
fidivl
ss
adc
or
pop
add
lds
jbe
add
pop
les
shrb
cmp
and
scas
and
xchg
xchg
add
jmp
pop
xor
xor
les
or
mov
xor
lret
and
mov
mull
fnstsw
lods
or
ret
xchg
pop
sbb
aas
or
or
jb
out
shlb
sub
test
xchg
sbb
mov
push
dec
add
enter
adc
add
cmp
pop
or
or
in
add
cmp
inc
adc
mov
pusha
ret
inc
push
dec
lods
int3
test
adc
pop
pop
pop
test
adc
push
inc
ds
mov
sahf
add
xor
nop
mov
inc
cmp
test
out
fildl
jne
bound
test
mov
sbb
nop
inc
inc
pop
mov
xor
nop
cs
pop
ja
adc
mov
xor
or
or
dec
into
add
fnstcw
imul
cmp
in
enter
xchg
pop
js
pop
push
pop
out
dec
cmp
pop
push
decl
ret
inc
test
ret
gs
pop
cmp
ret
insl
f2xm1
push
pop
pop
push
das
mov
test
xchg
stos
mov
dec
idivl
in
scas
cmp
cmc
fdivp
fisubrs
lret
lock
jo
adc
mov
fsubs
add
pop
xchg
inc
stos
mov
cmp
fdivs
pop
add
jo
dec
outsb
test
push
xor
add
inc
fadds
cli
dec
call
xor
nop
and
scas
jp
dec
push
clc
inc
pop
jae
push
in
dec
dec
xchg
push
adc
add
adcl
or
inc
xor
push
bound
or
or
fcompl
fisttpll
adc
es
add
mov
popf
or
nop
insl
cmp
or
fcos
mov
xor
sbb
out
mov
das
mov
pop
xor
or
fisttps
sbbb
int
jl
mov
pop
add
test
cmpsb
push
imul
aaa
or
shll
inc
xchg
out
or
rorl
xchg
movsb
mov
in
data16
dec
inc
jnp
test
rorb
pop
push
test
mov
or
xchg
pop
push
rcrb
push
xchg
ss
fisubs
ret
cmp
imul
push
fnstenv
sbb
mov
gs
aas
in
mov
or
add
inc
cmp
sbb
and
or
mov
cmp
adc
push
or
data16
adc
roll
push
gs
std
adc
mov
lea
mov
pop
es
loope
xorl
add
rorb
test
mov
or
xchg
cmp
fs
mov
push
jb
int3
scas
xchg
or
jns
adc
dec
or
sbb
xchg
popa
ja
and
fwait
call
cmpb
pop
and
xor
pop
ds
add
sub
fistpll
jle
ficoms
xor
mov
or
imul
or
add
iret
jl
or
pusha
flds
fcmovnu
jnp
sarb
shlb
mov
jne
jns
add
adc
aas
or
mov
mov
push
pop
adcl
dec
jae
push
clc
addr16
push
push
dec
adc
mov
js
ja
add
neg
sbb
test
pop
xor
popa
pop
push
and
adc
pop
xchg
fldl
cmpsl
add
setl
scas
pop
add
pop
ds
cwtl
xchg
lret
jo
xchg
lods
subl
and
das
sahf
addr16
lcall
xchg
mov
pop
add
inc
jl
enter
add
js
inc
aad
add
lods
jo
pushw
adc
inc
mov
xchg
mov
fldl
outsb
or
repnz
xchg
sbb
inc
dec
add
fdivl
xchg
call
pop
xchg
sub
inc
cld
in
or
int3
stc
add
add
aam
outsb
push
les
inc
mov
add
and
xchg
rclb
fsts
xchg
iret
adc
enter
push
pusha
and
mov
ss
add
or
lock
add
adc
fldt
shll
test
add
add
add
adc
pop
adc
pop
add
add
lcall
adc
sbb
and
sub
add
push
pusha
adc
orl
add
add
xchg
add
xorb
mov
mov
incl
push
mov
mov
mov
pushl
adc
scas
repz
ljmp
ljmp
push
sbb
test
cmpsl
jmp
add
in
movsl
dec
es
repz
or
push
in
xor
cmpsl
mov
inc
int3
pusha
adc
in
adc
adc
xor
out
test
int
mov
add
js
movsb
sub
sbb
fidivrs
sub
push
sub
push
add
hlt
cli
cmc
push
sahf
idivb
dec
jl
xor
jbe
push
int3
jns
call
out
push
mov
cmp
or
sbb
mov
push
cld
hlt
int
pop
jl
test
xchg
ficoml
out
sub
add
push
push
mov
lcall
hlt
push
or
in
or
shrl
mov
and
imul
cs
or
clc
mov
mov
clc
icebp
call
fwait
sahf
mov
pop
mov
lahf
not
xchg
add
sub
pop
sbb
lock
xchg
mov
sbb
xchg
incb
and
cmpsb
test
push
mov
sbb
adc
or
pop
inc
pop
pop
nop
pushl
jb
inc
dec
fadds
adc
jnp
testl
dec
adc
loop
out
pusha
outsl
inc
inc
insb
lock
dec
sub
jp
xchg
sub
cmp
push
mov
fsubl
push
or
jbe
sub
aam
jbe
push
je
pop
jo
les
mov
mov
std
leave
inc
inc
call
orb
imul
dec
out
ret
adc
je
jg
enter
sbb
les
inc
shr
inc
sbb
and
cmpb
in
nop
jno
mov
sbb
out
lock
pushf
add
incb
insb
inc
sbb
insb
cmpsl
cmp
movsb
jle
aam
adc
mov
imulb
cmp
flds
jmp
jmp
dec
testl
jmp
dec
fisttpll
sub
push
fs
dec
and
mov
sub
and
xchg
or
xchg
push
push
cmp
enter
push
push
xchg
cli
ds
inc
les
xor
repz
fldcw
and
inc
xor
xchg
in
sahf
fldt
bound
jo
jp
shrl
pop
rorl
xchg
jbe
jno
mov
dec
mov
daa
sub
hlt
add
loopne
sub
jmp
jo
stc
js
pop
negl
cmp
sub
mov
push
loope
movsl
inc
aas
sub
pop
pop
inc
pop
mov
jg
sub
xchg
sar
lock
mov
dec
cwtl
test
push
mov
es
mov
out
xchg
test
sti
or
js
pusha
push
sti
shlb
sub
add
jnp,pn
xchg
and
les
mov
add
fisubs
pop
cltd
add
jne
hlt
mov
inc
or
jbe
loopne
mov
dec
out
inc
movsb
adc
and
add
jb
push
mov
test
sbb
icebp
push
mov
dec
lret
jl
jl
and
xor
aad
add
push
and
aaa
and
test
lock
mov
rcrl
ret
popa
adc
ffreep
inc
mov
jae
lret
mov
repz
fidivl
imul
jl
push
pop
pop
mov
adc
outsb
mov
push
inc
cmp
xor
add
test
loopne,pt
sub
push
mov
cmp
xor
js
in
cmp
es
jge
push
sbb
cmpsl
mov
les
dec
cmp
addl
aas
movsl
dec
sbb
rorl
fld
jne
mov
hlt
in
mov
jo
movsb
hlt
mov
ds
ja
pop
repnz
dec
or
test
push
mov
or
insl
sbb
je
push
js
test
fistps
inc
inc
dec
movsb
ss
inc
jg
in
mov
jae
mov
push
lret
mov
lock
dec
test
cmp
dec
pop
xor
hlt
les
mov
mov
and
stc
push
pusha
push
bound
push
loope
adc
push
push
inc
ret
inc
jg
aaa
sub
js
fadds
sub
inc
lret
mov
test
inc
add
ja
sbb
and
push
xlat
dec
and
aaa
dec
sub
pop
add
dec
pop
outsb
in
push
or
je
sti
mov
ret
inc
mov
push
cmovnp
fldl
and
and
aad
add
cmpb
cmp
inc
call
adc
loop
popa
movsl
in
jbe
loopne
add
dec
fisttps
inc
sahf
jbe
xor
call
ror
xchg
fadds
mov
nop
ja
sbbb
fmull
into
roll
clc
mov
sbb
push
fstl
inc
bound
outsb
jo
jecxz
xor
mov
add
xlat
add
push
mov
nop
bound
clc
sbb
push
lods
nop
ja
inc
xor
lock
lock
sarb
or
or
cmp
fs
adc
pop
roll
push
nop
mov
sbb
sbb
jmp
push
jo
xor
pop
loopne
ja
push
inc
pop
push
imul
push
nop
mov
push
sub
sbb
repz
dec
or
nop
cmpsl
xor
pop
cmp
addl
out
enter
test
jbe
sub
ret
popf
rolb
pop
pop
inc
pop
mov
dec
into
and
inc
loopne
jae
shl
mov
sbb
in
dec
dec
dec
pusha
pop
jne
orl
push
xlat
into
test
push
add
add
or
loopne
mov
jno
push
xor
arpl
add
addb
fstl
rcll
adc
lock
lock
ja
push
mov
jecxz
sub
jge
mulb
push
addl
sbb
and
mov
mov
jge
xchg
mov
xlat
mov
inc
mov
orl
mov
sub
inc
lcall
les
stc
cmp
stos
sub
mov
xor
dec
mov
xor
mov
sbb
or
setge
mov
lods
pop
sub
sub
dec
push
stos
cmp
sahf
nop
or
nop
jo
fs
aaa
push
push
rcll
cmc
fbstp
clc
push
sbb
outsl
or
mov
cmp
ss
fs
inc
idivl
and
pop
sbb
dec
mov
or
jmp
decb
add
fadds
ds
or
dec
pop
adc
addr16
nop
mov
adc
ja
out
push
push
scas
pop
ds
dec
xor
pop
add
leave
and
in
pop
shld
mov
hlt
dec
iret
ror
push
andps
inc
adc
sahf
icebp
repnz
push
or
xchg
mov
cmp
mov
mov
dec
les
cmp
jle
push
lock
subb
scas
pop
and
xor
and
sub
scas
test
je
adc
and
push
inc
jg
insl
imul
jo
adc
sarb
cmp
mov
jnp
lcall
popa
jns
flds
rorl
inc
push
mov
imul
cwtl
adc
add
out
arpl
mov
adc
or
xchg
mov
inc
add
sub
xchg
lock
mov
ja,pn
push
push
jmp
ljmp
loopne
sub
dec
jmp
push
je
and
mov
xchg
pusha
lods
push
mov
cmp
cltd
mov
pushf
or
mov
je
push
adc
mov
cmp
sti
and
mov
mov
pop
data16
or
xor
xchg
push
das
jmp
pop
sbb
inc
into
sti
jmp
test
xor
or
jb
iretw
cmp
pop
sbb
jmp
push
and
lcall
sarb
mov
out
sub
sbb
insb
pop
pop
fdivrs
mov
je
clc
push
out
sbb
movsb
fnstsw
adc
pop
aaa
sub
cmpsb
sbb
dec
arpl
xor
xor
jg
or
add
adc
mov
jae
hlt
mov
mov
mov
add
out
and
cmp
or
cmpsb
sbb
mov
add
test
sub
lret
pop
inc
call
mov
pop
vpmaxuw
mov
sub
ficoms
call
repnz
sbb
sub
mov
sbb
push
scas
and
cmp
inc
stos
ss
sub
sub
pop
pusha
test
insl
mov
sbb
bound
sub
sbb
add
mov
mov
push
repnz
mov
test
ret
mov
add
sarl
dec
push
add
jnp
jns
daa
pop
test
adc
adc
enter
xchg
decb
in
mov
std
mov
xor
cli
xor
cmp
mov
cli
and
test
lret
das
sub
dec
sbb
jg
add
mov
arpl
jmp
xchg
xor
jbe
dec
mov
mov
adc
xchg
pushf
mov
es
cltd
sub
icebp
sbb
cmp
daa
lret
sbb
lds
je
mov
cmp
xchg
ret
jae
enter
mov
push
loopne
test
xlat
or
aaa
sub
sub
sub
or
repnz
sahf
add
or
adc
mov
mov
sbb
or
xchg
orb
mov
inc
cwtl
rcrl
mov
inc
adc
ficoml
adc
add
or
adc
fisubl
cltd
xchg
and
jne
cmpsb
stos
lret
mov
sbb
and
loope
and
pop
addr16
mov
mov
shll
bound
imul
jbe
push
bound
or
sub
loop
or
mov
call
push
sub
pop
sub
fwait
sbb
add
or
test
inc
mov
je
mov
or
dec
rclb
in
movsb
stos
out
clc
sbb
push
xchg
mov
push
sarl
icebp
push
inc
or
jae
mov
and
or
ret
inc
add
or
sbb
push
or
push
inc
add
pop
sub
sub
add
insb
mov
cmp
incb
movsl
cltd
insl
clc
popa
scas
sub
adc
or
pusha
dec
call
inc
or
jb
adc
rcrl
sub
pop
ss
sub
jns
bound
ljmp
push
adc
aas
cmp
mov
or
or
int
cmp
inc
cs
add
iret
jbe
adcb
and
adc
pop
mov
js
out
add
add
dec
cmp
jl
imul
mov
shlb
add
add
fists
cs
mov
add
xchg
test
xchg
dec
mov
jo
leave
pop
add
adc
pop
jno
dec
jmp
push
fsubrs
xor
dec
hlt
rclb
js
in
cmp
adc
push
mov
nopl
cmp
popa
add
adc
test
mov
mov
sub
mov
sti
and
add
faddl
rclb
fwait
mov
add
fdivrs
mov
sbb
lock
in
test
repz
add
xlat
lahf
mov
xchg
add
sub
outsl
push
sub
mov
movsl
push
mov
pusha
or
sbb
ds
inc
mov
sbb
push
std
or
sub
neg
jmp
pusha
mov
arpl
movsb
xchg
adc
push
and
add
push
test
mov
hlt
adc
and
mov
or
cmp
cwtl
pop
stos
insl
push
addr16
aas
adc
movsl
sbb
test
fwait
add
or
stos
adc
or
ror
ljmp
sarb
jnp
sarb
add
movsl
and
adc
inc
rorb
add
jne
xor
in
cmp
call
cmpsl
cmpsb
aas
pop
subb
call
addr16
lcall
fs
mov
cmpsb
inc
cmp
movlps
or
jmp
inc
inc
or
sbb
cmp
adc
pop
mov
sti
jmp
lret
or
xchg
test
lock
repz
clc
ret
mov
and
test
sub
xor
sub
ss
in
xor
xor
test
subb
cmp
dec
push
dec
cltd
jge
mov
add
leave
aam
and
adc
mov
mov
mov
jge
xchg
sbb
pusha
mov
orb
inc
jmp
sub
xlat
sub
push
mov
gs
mov
inc
mov
push
es
jns
out
arpl
adc
icebp
cmp
sar
adc
insl
aaa
add
adc
sti
mov
push
in
sub
add
cmpl
dec
lods
pop
dec
jge
xor
out
roll
lcall
sbb
dec
sub
sahf
pop
stos
adc
inc
gs
adc
jg
mov
add
repnz
hlt
xchg
sbb
or
sbb
or
add
dec
loope
mov
push
test
scas
cmp
je
mov
movb
in
sub
push
dec
inc
or
xchg
cmc
outsl
sub
sub
mov
xlat
cld
push
lock
jae
mov
push
sub
add
lcall
push
ljmp
jo
mov
or
dec
pop
das
mov
adc
sahf
push
or
sub
movsl
adc
fstps
insb
pop
mov
arpl
clc
test
or
outsl
inc
push
xchg
mov
cmp
mov
pop
or
xchg
or
xor
pop
inc
push
add
xor
adc
in
je
mov
outsl
outsb
rcrl
lcall
das
dec
jecxz
bound
test
sbb
clc
dec
push
arpl
sahf
movb
bound
add
sub
add
mov
pop
test
lods
cld
pop
or
xchg
xor
inc
cmp
pop
and
inc
in
sbb
add
or
insb
sarl
and
xor
enter
and
cmp
test
xor
int
enter
sub
pop
sub
ret
out
call
repz
push
loope
push
je
adc
push
ret
inc
mov
pop
sbb
dec
dec
out
push
mov
dec
ret
push
mov
sbb
xor
ja
sbbb
pop
loop
xor
fwait
sbb
or
cmp
or
movzbl
or
add
push
mov
ret
jle
mov
pop
push
sbb
lds
lods
adc
mov
popa
mov
loopne
shlb
xchg
adc
or
jmp
ljmp
inc
aam
adc
nop
lcall
xchg
jecxz
enter
add
nop
mov
adc
inc
loop
mov
add
push
movb
sub
iret
mov
in
xor
push
es
cmc
andl
sbb
cld
lahf
scas
pop
es
mov
jne
out
jmp
xor
cltd
js
aam
dec
femms
xor
cmpsb
js
pop
and
fimull
push
movsl
push
lret
addr16
inc
jle
movsb
lock
inc
xor
sbb
cwtl
out
andb
out
cmp
cmovl
mov
sbb
pusha
mov
sub
xchg
lcall
inc
add
lock
int3
and
pushf
shlb
xchg
pop
andb
mov
dec
cmp
push
in
push
jno
xchg
jp
cmpsl
insb
mov
daa
push
in
int
mov
adcb
jecxz
and
xchg
pop
je
mov
dec
psrld
push
sbb
or
emms
xchg
jl
push
cmp
mov
ret
mov
fcmovne
sbb
repz
pop
add
xor
mov
or
jnp
mov
fbstp
inc
fstpt
jmp
dec
outsl
push
bound
jb
and
dec
or
xor
cli
pusha
push
das
test
ret
mov
sbb
sbb
jb
and
cmp
loopne
cld
sub
push
xchg
int
rcrl
pop
add
mov
xchg
xlat
sbb
movsb
imul
sbb
sbb
adc
pusha
xchg
mov
xor
dec
xchg
lea
push
push
add
mov
jne
adc
inc
in
fbld
inc
outsl
or
lds
sbb
mov
sbb
pop
mov
adc
push
jle
mov
ja
lcall
push
jnp
sbb
nop
outsb
jnp
aaa
mov
pop
mov
mov
das
jns
jge
or
adc
enter
inc
std
adc
lods
xchg
sbb
cmp
mov
adc
push
in
daa
sbbb
add
shlb
mov
sub
mov
call
inc
nop
jg
xorb
push
xchg
and
jp
jo
add
es
in
pop
dec
je
lods
pusha
or
sub
mov
and
frstor
mov
xchg
lea
sbb
sub
sti
pop
repnz
dec
mov
in
cwtl
ss
popa
cltd
popa
and
repnz
push
shlb
jo
out
scas
leave
ret
fimuls
mov
stos
or
into
mov
xchg
push
fdivr
nop
xor
aaa
arpl
xchg
xor
inc
repz
repnz
lahf
xchg
out
push
jle
cli
push
cmp
dec
add
insl
cmp
negl
or
push
nop
mov
arpl
or
jns
sahf
mov
adc
scas
scas
cmp
and
lret
out
and
or
scas
or
je
loopne
ret
pop
dec
jo
pop
jb
inc
add
and
ret
pop
mov
or
and
sbbb
pop
sti
aas
in
into
inc
xor
mov
and
add
mov
fistps
xor
mov
inc
pop
add
pop
push
mov
stos
push
mov
sbb
mov
mov
add
adc
and
mov
xor
mov
insb
cmp
inc
cmpl
loopne
xchg
faddl
mov
push
xor
jl
out
xchg
push
es
in
sbb
jmp
imul
inc
mov
lods
mov
repz
icebp
testb
push
xchg
pop
mov
xchg
ljmp
sub
leave
in
cmp
cmpsl
sub
insl
mov
or
push
and
mov
jnp
pop
mov
ffreep
pop
xor
mov
adc
push
mov
les
mov
or
jae
fadd
daa
orl
mov
sub
je
adc
cmpsl
mov
jle
cmpl
add
andb
xor
cmovle
xor
jae
or
inc
or
add
mov
adc
pusha
inc
or
loopne
sub
stos
jo
insl
loopne
cmp
cmpsb
imul
and
jno
or
mov
pop
and
cmp
ret
test
je
add
inc
mov
sahf
outsl
int3
ficoml
out
test
jno
dec
sarl
dec
push
imul
inc
xchg
lock
adc
and
sub
xlat
dec
dec
movsl
push
jl
mov
sub
fsubs
mov
andl
mov
xlat
adc
sbb
adc
dec
sub
fnstsw
shlb
sub
push
push
nop
iret
dec
mov
sub
or
stc
push
ret
popf
mov
inc
mov
pop
repnz
movb
add
push
push
imul
inc
mov
mov
mov
popf
cltd
lret
push
push
mov
sbb
mov
stc
sbb
and
sahf
add
aad
gs
pop
nop
mov
es
or
out
pop
adc
stos
pop
cmpsl
iret
push
push
addb
jg
arpl
in
mov
and
pop
xchg
and
cltd
ret
pop
cltd
and
jno
jg
rol
jecxz
les
xor
jbe
rorb
push
dec
mov
push
xchg
or
mov
hlt
push
int3
xchg
fsubp
xor
push
push
es
pop
inc
js
mov
out
aam
hlt
dec
xor
pop
mov
negb
jle
adc
xlat
adc
mov
adc
cmp
fldt
in
test
fs
enter
repnz
rolb
outsl
ja
adc
xor
lods
aaa
sub
nop
mov
outsl
push
cmp
mov
fimull
inc
mov
adc
les
adc
in
cmp
fs
mov
inc
scas
repnz
sub
add
aam
jb
jae
mov
mov
daa
or
pop
jne
inc
cld
in
test
adc
cmp
in
imul
nop
mov
sahf
cmp
movsl
mov
cmpl
mov
divb
mov
shlb
push
insl
sbb
push
sub
push
mov
jmp
dec
popa
mov
sub
sub
cmp
cmp
sbb
sub
lods
mov
cmpsl
mov
cmp
mov
mov
sbb
out
out
je
mov
push
push
lds
sbb
repnz
inc
inc
dec
int
mov
and
add
pop
push
or
jmp
xor
cmp
mov
xchg
or
jbe
mov
fld
and
push
push
cmp
and
sub
pop
mov
or
aam
add
mov
imull
mov
into
push
loop
or
mov
das
lret
fs
adc
xor
sahf
sbb
adc
ljmp
sub
lods
outsl
lods
rorb
cmp
inc
std
movb
shlb
push
aad
xor
xor
scas
or
inc
cmp
xorl
cwtl
fwait
mov
jge
sub
les
cmp
push
jle
movsl
add
les
xor
pop
add
xlat
add
leave
cmp
and
dec
xor
jl
nop
daa
adc
add
xor
cltd
nop
inc
cs
jb
enter
sub
xchg
and
cmp
xchg
nop
push
mov
xchg
or
sub
adc
mov
pop
pusha
cltd
aaa
adc
loop
cmp
jecxz
mov
inc
aaa
psubw
inc
or
adc
mov
or
lahf
pop
enter
jns
push
push
xchg
mov
cmpsb
les
mov
ret
add
fbld
mov
leave
aas
add
add
rorb
cmp
and
je
cmp
xor
mov
mov
jle
inc
pusha
stc
ss
ret
nop
aas
adc
jnp
sbb
loopne
cmp
test
fs
xchg
mov
push
pop
mov
push
repz
pop
mov
dec
test
je
xor
call
cmp
xchg
add
in
sbb
inc
push
imul
mov
push
or
push
jecxz
or
cwtl
mov
imul
xchg
inc
cmpb
aas
movsl
cli
fmull
sub
cmc
fistpl
mov
xchg
lea
dec
insl
inc
scas
cmpb
jmp
cvtps2pi
sbb
test
lea
add
mov
sub
push
cmp
or
movsb
rcl
fcmovu
outsb
inc
iret
push
fdivrs
fiadds
movsb
fists
pop
imul
or
xchg
arpl
dec
add
or
xor
test
push
sub
xchg
lock
imul
xor
movsb
add
or
mov
mov
sbb
pop
sub
add
popa
mov
bnd
add
pop
and
add
xchg
popl
icebp
movsb
xchg
add
lods
fcmovbe
add
aad
addr16
fwait
dec
icebp
jmp
imul
int
lock
popl
or
push
lds
sbb
add
rcrl
inc
out
xor
adc
adc
lds
mov
sbb
test
xorl
add
sbb
pop
leave
mov
xor
xchg
sub
dec
insb
jmp
cmpsl
mov
jle
jno
mov
outsl
mov
or
xor
jne
ja
bound
mov
push
add
add
xor
fwait
xchg
fadd
in
test
add
inc
scas
gs
sub
je
je
inc
orb
jo
popa
pop
testb
fwait
orb
adc
test
xorl
push
sbb
rorb
dec
add
stos
outsl
pop
mov
in
and
fs
fdivr
jne
and
sbb
daa
xchg
push
and
add
pop
and
mov
inc
dec
add
out
ss
xchg
add
subl
push
push
shll
fisttpll
and
mov
add
lock
mov
dec
push
sbb
sub
jecxz
or
mov
rorb
pop
icebp
mov
xor
das
movsl
test
faddl
loop
pop
sti
add
hlt
mov
sbb
loope
xchg
dec
pop
add
fisubrl
mov
and
jl
or
add
sbb
hlt
add
ret
lcall
test
lcall
lret
push
xor
sub
into
gs
push
and
adc
push
inc
aas
sbb
xor
jno
add
push
xchg
push
fistps
cs
fcomps
in
pushf
and
adc
inc
mov
mov
ficomps
cmp
insl
mov
pop
sbbb
dec
add
sbb
insl
aaa
mov
add
fcompl
insl
test
sub
roll
ja
cmp
out
adc
inc
jp
mov
xchg
data16
add
and
mov
push
xchg
push
mov
pop
inc
xchg
cltd
leave
xor
jecxz
or
push
mov
cmp
cmp
mov
cmp
sbb
stos
mov
jbe
jne
xor
mov
pop
adc
clc
aad
loope
rclb
xchg
cmpb
repnz
scas
inc
push
inc
push
cmp
mov
mov
jecxz
adc
mov
lsl
adc
mov
xor
push
lret
scas
jae
adc
dec
sbb
inc
sub
or
test
fwait
dec
outsb
lret
add
andb
sub
out
nop
add
les
and
xchg
xchg
push
nop
cltd
jo
mov
pop
cmp
or
push
sbb
test
jle
es
xor
cmp
cmp
std
xor
or
shlb
lods
out
lcall
or
aaa
push
dec
loopne
and
es
ret
jae
ds
pushf
add
push
out
outsl
add
sbb
loop
leave
stos
popa
sub
jo
shll
xor
and
add
lea
adc
mov
push
cmpsb
lock
loop
and
and
inc
lock
ljmp
outsb
cmp
daa
pushf
push
and
and
inc
or
or
lret
and
out
insb
nop
popa
ret
arpl
add
adc
popf
mov
aaa
enter
and
adc
mov
add
sub
sub
fwait
sti
jge
inc
test
aas
sbb
pop
test
dec
sub
pop
push
xchg
add
push
xor
sbb
scas
add
movsb
addr16
pop
adc
rorl
stos
add
pop
inc
sbbb
inc
aad
sub
int3
sbbb
xor
xchg
adc
pop
addr16
popl
dec
insl
cmp
pop
pop
dec
movsb
add
push
cmp
rolb
and
xchg
sarb
les
inc
fsubs
or
cmp
cld
fs
sbb
or
ret
push
jo
insl
mov
sub
test
call
add
pop
inc
xchg
inc
xor
dec
mov
movsb
mov
ror
pusha
push
out
inc
or
neg
cmp
neg
in
jmp
mov
clc
lret
cmp
or
iret
jmp
out
xchg
je
mov
and
add
bound
push
push
jo
jle
jp
test
push
xchg
push
push
push
out
adc
sbb
xor
push
popa
inc
dec
mov
inc
jmp
or
add
push
adc
incl
dec
movsl
or
mov
dec
shll
icebp
addr16
adc
popa
or
das
add
fcmovb
adc
push
addr16
mov
mov
cld
add
movzwl
add
and
add
add
xchg
in
mov
jmp
sbb
das
inc
nop
pop
jno
jo
fs
sbb
push
push
scas
iret
and
or
mov
lods
mov
cmp
add
clc
lret
mov
insb
mov
test
or
add
clc
sbb
clc
jno
loope
or
incl
push
test
xchg
xchg
cmpb
adc
push
lods
add
sahf
cwtl
pop
rcrb
pop
or
les
fisttpl
mov
sbb
adc
out
scas
addr16
jmp
sbb
add
add
test
or
bound
iret
dec
pop
int3
adc
add
mov
dec
or
xlat
orl
pop
jg
lock
add
sub
cmpl
pop
pop
jno
insl
sbb
xor
ss
fisttps
sbb
or
jne
push
loop
xor
jl
mov
jmp
mov
push
xor
dec
lret
stos
inc
mov
sti
pop
push
insb
lea
test
push
nop
jmp
lds
popa
subb
cld
and
cmp
jle
push
xchg
andl
or
push
xor
sub
movsl
add
cmp
scas
jns
imul
sub
jmp
pop
push
test
test
jne
cmpl
sarb
push
inc
push
je
add
mov
or
test
jnp
push
jae
mov
mov
out
cmpsb
dec
clc
or
or
dec
push
or
lret
mov
pop
dec
adc
lret
rolb
lods
and
inc
jl
pxor
cmp
mov
pop
inc
jo
cmpb
test
xchg
gs
ds
mov
or
mov
push
cmp
push
pop
faddl
loope
movl
imul
insb
sub
push
xchg
mov
push
cmp
xchg
nop
jl
jge
push
pop
ss
adc
les
movsw
cmp
push
push
cmp
xchg
hlt
das
adc
push
mov
dec
pusha
adc
lea
scas
adc
imul
cmpsl
pop
rcrl
mov
mov
data16
adc
cmp
je
adc
push
or
cmp
pusha
jbe
daa
sbb
push
push
shlb
enter
js
jmp
jns
enter
fucom
add
pop
test
lea
cmpl
sbb
icebp
adc
adc
pop
mov
daa
aaa
and
dec
test
shlb
sbb
clc
daa
add
dec
pop
sbb
enter
xor
adc
pop
and
lcall
xchg
aad
and
call
rclb
shl
push
or
add
aaa
dec
ret
mov
aas
mov
fdivl
in
add
and
pand
dec
push
push
and
sub
add
or
add
sub
pop
or
mov
xor
shrd
test
inc
rcrl
clc
jmp
cwtl
ja
push
add
or
dec
cmp
push
adc
notl
fdivs
and
cmpsb
dec
or
dec
or
xor
test
or
loopne
lret
js
cmp
push
and
test
cmp
lock
or
cwtl
mov
outsl
push
sbbb
add
push
fnstsw
xchg
cltd
fldcw
popf
in
ret
push
jo
xchg
mov
jmp
sub
lea
outsl
cmpb
add
test
dec
cmp
xchg
and
test
sub
ja
lds
jo
xchg
push
push
lods
sbb
loop
push
arpl
xor
inc
adc
shl
insl
cmpsl
movsb
imul
mov
mov
jl
ret
xor
inc
cmp
cwtl
sub
js
aaa
lock
ja
jne
repz
icebp
add
xorl
mov
hlt
pusha
mov
je
popa
call
dec
push
inc
inc
stc
lock
jne
shlb
and
mov
lea
adc
gs
es
mov
jae
jmp
adc
push
or
fs
je
test
or
push
cmp
inc
mov
mov
sub
sbb
add
sub
push
mov
sbb
sub
jmp
cmp
pop
test
outsb
pop
sub
xor
sbb
jbe
mov
sahf
sbbl
jge
and
pop
cmc
mov
lea
leave
ud0
and
loopne
lock
push
insl
jne
push
pop
sbbl
sbb
sub
test
dec
cmp
mov
or
outsl
jle
in
jmp
jl
dec
xor
xchg
fs
adc
aas
pop
mov
push
enter
cmp
add
aad
pop
xchg
add
xchg
xor
jae
lar
xor
jb
js
push
ret
pop
cmpsl
cmp
stos
lock
sub
adc
pop
addl
dec
sub
adc
sub
rorl
inc
aaa
xlat
push
inc
or
mov
adc
cs
stc
test
xchg
js
sbb
pop
loop
das
adc
dec
stos
orb
addb
movsb
pop
jne
lock
mov
out
ja
add
inc
xor
cmp
jo
daa
xchg
ljmp
mov
inc
xchg
fcoms
xor
push
cmp
cmp
pop
div
mov
sbb
jo
mov
sahf
jae
cmovns
dec
mov
and
icebp
pop
outsb
add
lds
loop
test
dec
and
nop
push
inc
js
mov
xor
es
fldenv
hlt
push
outsw
mov
cmp
in
jo
xchg
xchg
pushf
push
or
cmp
aas
push
loope
ja
sub
test
popf
or
inc
adc
rcrb
test
and
push
je
and
fisubl
mov
cmp
jnp
inc
fwait
adc
sub
dec
push
loope
inc
jmp
add
mov
lds
push
cwtl
fldt
push
mov
jnp
cmp
and
add
dec
jp
call
popa
xor
cmp
sti
and
xor
xchg
jae
sub
sbb
xchg
popa
inc
shrb
add
sub
shrb
imul
mov
lcall
imul
pop
push
pop
sbbb
xchg
test
and
adc
push
dec
mov
popa
pop
jae
je
inc
jno
xor
mov
mov
adc
test
or
outsl
inc
push
xor
or
ret
mov
rolb
and
loopne
cmp
scas
cmp
pop
inc
inc
and
pop
push
loop
rclb
dec
fcomp
movsl
pop
sub
pop
into
adc
xor
iret
dec
mov
adc
setb
fwait
jne
mov
negb
clc
ret
sub
or
add
add
leave
test
pop
cmp
sub
add
stos
test
mov
cmpsl
dec
jae
sbb
adc
sbbb
loopne
add
gs
ret
push
and
jge
ljmp
pop
les
inc
in
fcmovnbe
sbb
sbb
mov
loopne
outsl
dec
xchg
shr
cmpsl
imul
call
pushf
pop
jcxz
fldcw
das
dec
xor
push
scas
in
push
inc
imul
xor
xlat
and
pop
pop
pop
and
mov
ljmp
mov
sbb
pusha
mov
jmp
pop
push
push
faddp
fstp
jne
mov
pop
dec
adc
pop
test
mov
insb
cmp
add
fbstp
xchg
popa
sub
push
test
jmp
cmp
test
push
mov
push
or
fmuls
mov
xchg
mov
scas
je
pop
jle
jl
xchg
inc
or
cmp
cmp
jmp
fildl
lret
sbb
mov
sbb
mov
and
lahf
mov
imul
xchg
andl
inc
movsl
lock
and
add
iret
mov
adc
sbb
jg
imul
or
lea
push
lea
rol
popf
hlt
test
pop
cmp
pop
add
sbb
pop
fwait
xor
pop
xchg
xor
push
lcall
sbb
push
add
cvtpi2ps
je
and
push
leave
fstps
and
lret
test
push
pop
jmp
mov
adc
sub
mov
sbb
aas
pushl
mov
pop
mov
sub
shll
int3
xchg
inc
mov
and
add
or
add
add
push
or
mov
jmp
adc
nop
cmp
leave
stc
dec
sub
pop
rolb
movsb
mov
lock
xor
cmp
cmp
inc
rclb
push
pop
mov
xor
mov
gs
xor
add
or
or
inc
xchg
jne
or
mov
cmp
push
push
push
adc
jge
mov
jns
es
std
lods
xor
mov
pushl
push
or
dec
dec
sbb
lds
stos
add
ljmp
mov
pop
xchg
imul
adc
enter
nop
mov
rcll
or
lret
call
push
push
inc
mov
xor
push
cmp
dec
inc
dec
push
and
dec
call
cmp
sub
shlb
clc
mov
jo
jne
lea
xchg
xor
pop
mov
test
or
inc
mov
or
jae
jle
rol
or
call
adc
adc
sbb
fiadds
add
and
mov
dec
enter
fbstp
shrl
addl
or
sbb
mov
divl
movsl
pop
incl
idiv
add
add
sub
and
inc
push
das
inc
dec
lahf
mov
cld
outsl
inc
push
sub
mov
add
mov
iret
and
lods
sarb
imul
aam
pop
ret
dec
pop
jo
shll
shlb
fsts
xor
jmp
mov
push
push
clc
adc
or
loop
test
push
mov
cmpsb
push
cmp
xor
pop
jge
fucomip
inc
ss
xorb
and
call
jo
enter
pusha
sub
std
push
jmp
mov
cwtl
movsb
mov
adc
sbb
push
shrl
and
dec
out
mov
mov
sub
cmova
mov
adc
jne
cmpsl
test
test
cmp
jnp
inc
inc
shll
xchg
ret
adc
ss
cmp
cli
fwait
sbb
cmp
sub
mov
je
in
push
pop
mov
fbstp
mov
ss
push
cld
adc
enter
or
mov
jbe
jnp
ja
ja
adc
xchg
push
clc
cmp
scas
mov
or
push
mov
add
pop
jo
xchg
insb
fucomi
pop
and
stos
pop
shll
mov
imul
sbb
sahf
jbe
xor
inc
xchg
es
lods
call
cli
or
adc
add
fdivrs
sbb
jge
sub
jo
repz
leave
andl
fbld
js
sbb
add
iret
sbb
dec
loop
adc
cmp
jno
dec
dec
inc
inc
out
and
or
sub
aam
xchg
sar
add
add
rcrb
adc
inc
jne
js
push
hlt
arpl
xor
cmpsl
mov
xor
and
add
outsb
es
mov
sarb
add
xchg
or
pop
sub
loop
xor
insb
lret
ds
and
sbb
imul
mov
clc
cmpsb
lea
inc
sbb
ret
mov
ss
dec
enter
pop
xor
lahf
inc
nop
or
cltd
fcoms
dec
sbb
loope
add
jne
cmpsl
ret
mov
fimull
or
mov
int
ljmp
push
mov
mov
lods
mov
sub
mov
dec
sub
inc
not
and
mov
pusha
add
mov
xor
test
pop
sarb
pop
or
sub
mov
push
xchg
and
lret
jbe
and
cmovp
cmp
dec
mov
imul
imul
dec
dec
mov
aam
xchg
cs
jmp
xchg
cmovb
cwtl
add
sub
rcrb
scas
dec
aaa
cmpl
adcb
or
rolb
sub
sahf
mov
or
sbb
jo
pop
pop
adc
add
shl
test
rclb
xor
adc
pop
add
push
jmp
movsl
pop
daa
xchg
or
or
jns
pop
mov
jle
in
mov
cmp
je
movsl
fbld
out
je
dec
cmpb
roll
arpl
mov
or
mov
test
add
shlb
ds
sbb
push
andb
pop
xchg
adc
test
cld
nop
push
push
cs
fiadds
clc
pop
pop
push
adc
sti
add
and
or
mov
fmul
xchg
sbb
add
leave
sub
push
adc
inc
arpl
add
aam
jb
mov
rcrb
ljmp
xchg
movsb
jb
add
shlb
mov
dec
push
cmpsl
in
xor
fs
pop
mul
or
or
xchg
cmpsb
xchg
je
es
xchg
xchg
dec
jl
out
xor
shr
dec
ss
or
fimuls
sub
sbb
in
adc
xor
pop
cld
xor
test
imul
or
dec
dec
dec
stos
adc
or
shl
or
jmp
outsl
mov
push
imull
jne
push
inc
lock
adc
js
jmp
mov
adc
xor
and
sub
cmpsb
sahf
mov
add
push
jnp
xchg
bound
sub
cmpsl
mov
pop
mov
xor
push
inc
popa
cmp
sub
sub
jmp
cmpsb
pop
mov
xchg
leave
cltd
rcl
ficoml
decb
sub
sbbl
cwtl
dec
jb
jne
add
or
cmp
inc
mov
add
mov
cmp
test
fiadds
roll
fildl
push
mulb
push
mov
fdivp
mov
sti
orb
gs
lods
pop
xchg
addr16
mov
stos
lea
and
dec
cmp
adc
or
mov
add
test
scas
das
dec
insl
iret
xchg
cmpsb
xor
xor
mov
or
add
mov
inc
mov
push
sti
pusha
dec
or
or
adc
repnz
sub
in
sub
adc
mov
add
cltd
jmp
sbb
mov
shll
or
scas
cmpsb
mov
iret
mov
push
cs
mov
scas
push
out
or
addr16
insl
and
int3
nopl
xor
fldt
dec
mov
pop
add
and
icebp
outsb
shlb
aad
pop
sbb
dec
mov
sbb
lock
add
fwait
jmp
out
pop
push
dec
call
sub
add
rorb
xchg
mov
and
or
sub
cmp
or
fsub
push
push
imul
nop
mov
adc
push
popl
loopne
mov
push
aaa
adc
sbb
push
sub
push
and
push
repnz
push
inc
cmpsl
shr
sbb
mov
xor
ss
push
fiadds
or
sbb
pop
xor
test
stos
xor
pop
mov
sbb
inc
adc
in
mov
jge
or
inc
jl
jle
loopne
jmp
add
jne
xchg
orb
test
pop
add
orb
inc
sbb
cmp
inc
push
and
adc
dec
int3
xor
push
iret
subb
push
aaa
jmp
inc
mov
shll
sbb
or
add
test
inc
mov
mov
adc
adcb
aam
jb
adc
xchg
mov
leave
sarb
roll
insb
mov
or
add
or
and
lds
es
ljmp
sub
sbb
push
ja
push
cmp
arpl
push
out
add
sbb
dec
pop
loopne
jecxz
nop
jo
loopne
mov
out
pop
adc
jo
in
adc
sbb
mov
in
adc
in
xchg
cmp
dec
sub
pcmpgtd
hlt
leave
xchg
ret
in
xor
push
scas
aad
push
mov
cmp
xchg
jae
cli
sbb
or
add
and
movb
test
pop
adc
arpl
mov
cmp
xor
or
push
mov
adc
sbb
cmpb
adc
push
ret
pusha
or
xchg
jle
xchg
test
loopne
pop
dec
movsb
int3
push
and
arpl
or
or
xlat
lock
mov
sbb
pop
mov
add
push
xchg
adc
ret
in
add
fldenv
cltd
cmpsl
call
mov
or
add
or
and
insb
das
or
jmp
addl
xorl
xor
fcoms
add
daa
or
and
dec
adc
sbb
mov
lea
adc
roll
dec
pop
inc
movsl
cmpsl
push
pop
dec
mov
ret
jns
js
inc
or
call
add
jp
ret
adc
stos
shll
dec
or
ret
pop
dec
push
aad
dec
mov
sbb
aad
push
push
dec
pop
movsb
push
pop
dec
fwait
pop
fwait
pop
mov
cmc
add
push
in
dec
mov
rcr
pop
lea
scas
sub
or
outsl
dec
sbb
or
scas
pop
and
lret
adcl
inc
sub
push
movsl
or
shlb
movb
jne
outsb
adc
mov
sbb
push
mov
popa
sbb
repz
push
pop
inc
nop
sbb
sub
add
mov
call
popa
fsubr
jl
insl
mov
add
jmp
xchg
xor
dec
sbb
cmp
sbb
mov
jp
jge
out
cmp
or
push
jmp
jecxz
cmp
fisttpll
out
jmp
incb
ja
icebp
jge
adcb
adc
xor
fadds
pop
sub
push
mov
xlat
fisttps
cmpsl
jns
xlat
testb
sub
add
out
movl
shlb
mov
cmpb
cmp
adc
sub
pop
or
sub
inc
jno
and
inc
or
pusha
outsl
lock
jl
push
cmp
test
jg
je
push
add
rolb
cmpsl
fisttpll
adc
mov
sub
rolb
and
inc
mov
das
xchg
inc
cmpsb
adc
xlat
add
add
shrl
out
hlt
icebp
roll
push
jge
sub
mov
test
fbld
in
or
add
and
dec
cltd
movsb
xchg
jmp
popf
rclb
mov
inc
adc
xchg
mov
dec
jne
adc
dec
jne
xor
std
jge
add
or
lea
mov
pop
sbb
shr
jp
cwtl
dec
dec
inc
and
adc
dec
and
les
or
sbb
dec
andnps
pop
addr16
movsl
imull
jp
in
in
add
addr16
sbb
lods
jne
and
sbb
inc
sbb
shlb
data16
sbb
movsb
inc
sub
lods
mov
in
jp
sbb
xchg
sub
sbb
xor
test
call
insb
jle
mov
pop
pop
push
mov
or
outsl
push
inc
mov
add
inc
dec
add
add
add
in
sbb
jle
sub
bound
insl
sub
cmp
fsubrl
push
nop
inc
sbb
fdivrl
sub
cli
sarb
mov
inc
xor
je
inc
ret
adc
mov
inc
add
ret
xchg
pop
and
xor
mov
pop
in
and
adc
stc
add
push
jl
cmp
or
sub
lahf
inc
adc
xor
addr16
inc
pop
push
cmc
mov
in
sbb
popf
rorl
dec
cltd
xor
aad
mov
xor
movsb
push
push
clc
cli
daa
je
or
je
or
imul
push
pop
imul
sub
hlt
add
and
clc
push
push
dec
mov
jge
cmp
test
mov
add
js
add
adc
pop
dec
pop
add
dec
shlb
sbb
stos
sbb
push
push
cmovl
pop
push
and
inc
fisubl
es
jecxz
pop
fwait
lock
mov
pushl
pop
dec
sar
ret
aaa
xor
mov
jo
sar
jns
adc
jmp
push
fisubl
xor
pop
xor
movsb
ds
sbb
cwtl
cmp
scas
sub
pop
push
push
xchg
insl
cltd
pop
aad
lea
sbb
icebp
in
ficoms
cs
push
cli
or
lcall
ss
inc
pop
jne
mov
adc
rorb
sub
cmp
mov
ss
xlat
dec
addr16
xor
sbb
add
or
dec
jne
js
xchg
or
dec
test
dec
mov
add
nop
lret
mov
or
and
inc
sub
xor
not
cmp
dec
lock
push
add
jae
cmp
xor
xor
mov
ss
sbb
movsl
adc
jecxz
imul
js
pop
inc
xchg
mov
nop
jbe
dec
shl
or
jbe
shll
btc
test
icebp
incl
adc
add
jmp
mov
adc
or
insb
mov
or
xchg
inc
nop
dec
jecxz
jg
insl
fucom
add
and
sub
sbb
and
add
xchg
sbb
sbb
adc
stc
mov
lods
xchg
pop
mov
push
sub
sub
xor
das
inc
fiaddl
sub
or
mov
xor
mov
pop
add
add
mov
sti
fs
pusha
fistpl
pop
fs
leave
sub
lods
and
adc
das
xor
cmp
pop
cs
jno
adc
sbb
popa
into
iret
add
ds
push
mov
push
movsl
push
scas
pop
or
pop
push
or
popa
adc
sbb
pop
push
cmp
and
roll
dec
ds
xchg
popa
pop
xchg
das
pushf
fidivs
movl
push
test
fidivs
frstor
push
ss
jmp
or
icebp
adc
xchg
pop
enter
paddusw
or
daa
ss
or
daa
les
xchg
add
sbb
in
mov
push
or
xchg
lcall
push
lock
je
and
jmp
sbb
or
add
int3
push
add
or
xor
sbb
adc
sti
sub
and
iret
cmc
por
dec
stos
sbb
std
inc
movsl
or
xchg
add
inc
add
cs
push
sub
or
add
jne
stc
or
cmp
xorl
adc
sbb
and
xchg
adcl
mov
mov
sbbb
and
gs
repnz
mov
loopne
inc
sub
cmp
or
jmp
or
out
cmp
mov
sarb
insl
push
out
mov
sbb
mov
sti
mov
mov
fildl
pop
in
push
pop
cmp
adc
test
push
cmp
clc
ret
mov
out
mov
fs
add
or
sub
xor
sbbb
add
xchg
gs
stos
nop
push
inc
inc
xchg
hlt
inc
pop
or
sub
add
add
dec
sub
push
or
pop
pop
cs
movsb
or
orb
inc
sbb
rcll
inc
mov
sbb
flds
movl
sbb
pop
jo
sbb
jge
cmp
mov
std
pusha
adc
or
xor
imul
fcom
in
mov
jle
icebp
nop
test
dec
dec
adc
jo
dec
pop
sub
mov
movsb
mov
or
sahf
stos
sub
sbb
jbe
inc
cmp
popa
arpl
popf
push
dec
sub
and
ret
lcall
adc
adc
or
cs
test
test
clc
les
add
rcr
adc
insl
stc
push
or
mov
roll
sub
lret
jo
and
out
or
adc
add
mov
fcmovnbe
push
jne
xor
lret
jb
ret
addb
jae
jo
inc
xchg
movsb
inc
xchg
dec
insb
adc
es
mov
add
xor
or
pop
mov
in
push
adc
xor
add
outsl
into
mov
das
jne
inc
push
add
aaa
loopne
add
sbb
inc
push
lcall
nop
dec
dec
adc
push
clc
sbb
sbb
pop
add
adc
lock
lds
xor
in
dec
mov
push
ds
mov
sbb
sbb
push
sub
or
mov
idiv
lock
or
sbb
sbb
or
sbb
push
mov
das
xchg
push
xor
dec
xor
loope
es
pop
addr16
es
lahf
push
je
insb
sbb
or
adc
sbb
adc
repnz
jne
mov
pushf
mov
and
mov
lea
aas
rcrl
dec
or
or
lret
push
test
mov
adc
adc
dec
add
icebp
sti
push
add
icebp
xlat
push
ret
sub
and
pusha
add
add
xorl
and
enter
xchg
or
or
or
xchg
insb
lods
push
mov
adc
push
add
bound
sbb
dec
jge
xorb
rclb
xchg
jge
fwait
xchg
or
xchg
xchg
mov
push
inc
in
push
pop
pop
sbb
xchg
adc
or
testl
cwtl
setge
push
sub
xor
jo
cmp
mov
or
or
pusha
cld
and
out
mov
adc
cwtl
iret
sbb
hlt
mov
pop
jb
cmp
cmp
mov
daa
lahf
mov
js
push
xor
push
push
mov
xchg
sbb
mov
add
xchg
lock
add
and
popa
sub
dec
mov
xchg
mov
cs
sbb
xor
lret
testl
je
sarb
or
mov
xchg
test
push
jae
pop
and
dec
xor
inc
or
ret
rcrb
jle
push
iret
loopne
xlat
mov
adc
mov
mov
inc
mov
xchg
push
mov
xorb
or
ret
ja
xchg
mov
push
enter
adc
lret
imul
adc
pop
repz
sub
test
fldcw
xor
mov
add
dec
pusha
add
fcomp
inc
jg
mov
aad
aam
push
sub
or
inc
jmp
or
nop
inc
sbb
inc
adc
movsl
outsl
lock
faddl
imul
inc
xor
or
insl
rcrl
jl
pop
add
in
imul
fsubr
pop
xor
pop
mov
and
sbb
pop
enter
neg
xchg
and
sub
jl
jae
sub
and
jle
loope
dec
shll
jmp
or
fsubrs
mov
cmp
and
add
inc
or
xchg
xchg
clc
cmp
mov
xchg
pop
inc
and
scas
xchg
jno
lea
adc
and
adcb
adc
mull
add
sarl
jmp
push
insl
sub
push
int
inc
mov
insl
push
mov
insl
pop
shl
and
outsb
aaa
sbb
out
fnstcw
xor
movsl
in
outsl
mov
movsl
ja
cvtdq2ps
orb
popf
lods
sbb
push
push
pusha
xor
mov
or
jp
mov
mov
and
mov
mov
push
mov
pop
cmp
das
or
jecxz
nop
ficompl
movsl
adc
sub
mov
aas
sti
movsl
js
jmp
fmuls
mov
push
testb
mov
push
ret
daa
movsb
outsb
or
mov
ret
mov
sbb
adc
ss
sbb
sbb
lods
cltd
nop
mov
cwtl
nop
or
mov
sbb
push
push
jne
inc
fisubl
inc
pop
inc
jnp
mov
in
inc
add
mov
inc
xchg
aad
xor
push
fisubrs
xor
sub
aaa
clc
cmpb
orl
ffree
pusha
sbb
test
xchg
mov
adc
leave
leave
in
inc
push
dec
xor
ror
leave
xor
pop
cs
xor
pop
lds
pop
sub
sbb
test
add
inc
jge
sbb
shlb
push
ret
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
negl
pop
pop
testb
push
push
xchg
pop
or
dec
or
je
dec
outsl
push
sub
aaa
push
dec
inc
push
sbb
xchg
jns
dec
fs
xchg
mov
pop
iret
je
fcmovnb
dec
xor
aaa
mov
cmpsb
in
mov
outsl
fmull
dec
xchg
jb
cs
inc
pop
add
jge
out
xor
add
cmp
iret
loope
das
pop
xchg
loopne
andb
call
js
pusha
mov
sahf
in
pop
mov
or
jle
adc
or
sub
les
pop
push
cmp
inc
sub
jmp
mov
pop
lcall
mov
cltd
decb
rcll
or
jbe
add
cmp
arpl
cmp
dec
push
int
adc
add
mov
pop
addl
enter
mov
xor
aam
mov
in
popf
push
mov
es
xchg
loopne
xchg
pop
test
lret
xchg
xchg
push
popf
push
pop
mov
add
pop
rolb
test
mov
mov
cmp
xor
rcrb
push
push
fstl
cmp
test
adc
imul
lods
pop
data16
push
mov
add
inc
loopne
jmp
lods
das
leave
inc
test
xlat
clc
add
mov
mov
xor
leave
or
nop
mov
adc
mov
add
push
lret
mov
jl
mov
lahf
testb
inc
insl
sbb
loopne
shlb
mov
sarb
lea
imul
ret
or
pop
inc
cmp
cmp
push
cwtl
inc
push
arpl
jno
cmp
inc
sbb
xchg
in
shlb
inc
and
and
cmp
pop
push
push
cmp
add
lock
in
pop
pop
mov
loope
call
shrl
ja
dec
cmpsb
push
js
sub
lods
lahf
data16
mov
jo
pop
je
mov
loope
sub
das
cmpl
add
sbb
mov
call
xchg
dec
sbb
push
push
xor
or
stos
dec
pop
aam
or
inc
mov
flds
adc
es
mov
dec
adc
dec
or
incl
xor
jae
je
mov
mov
fcompl
divb
gs
inc
divps
sbbb
mov
pop
fldcw
jmp
and
mov
or
rorb
xchg
in
sub
and
mov
inc
loope
inc
dec
fld
dec
add
dec
xchg
pop
sbbb
pavgw
dec
mov
push
fistpll
dec
movl
ret
pop
fcmovnb
add
rcrl
ret
jo
adc
sub
dec
mov
push
sub
movl
or
int
dec
sbb
sbb
and
inc
rolb
ss
inc
pop
sub
or
push
pop
aam
or
mov
cld
icebp
push
or
or
scas
loope
pushf
fistl
insb
push
mov
dec
push
sahf
add
testb
iret
roll
adc
js
shll
leave
adc
sahf
addr16
and
dec
jmp
rorb
sub
imul
insl
lahf
sub
pop
dec
inc
fwait
test
xor
lea
add
sbb
addr16
imul
add
lds
xchg
add
mov
xor
pusha
stc
mov
xchg
ss
daa
or
jecxz
xor
xchg
fmull
dec
push
dec
dec
aaa
push
sub
jne
push
data16
outsl
or
cmc
nop
push
in
jmp
out
cmp
test
pop
mov
inc
int
data16
push
sbb
mov
repz
inc
sbb
push
dec
imul
or
fisttps
inc
jbe
pop
sbb
xor
fisubrs
cmp
sub
pushf
rclb
inc
push
add
add
jne
add
add
mov
cmp
adc
adc
add
cmp
ljmp
adc
sarb
and
cmp
xchg
les
es
pop
add
jmp
sub
inc
sub
pop
vmovshdup
inc
jmp
sbb
test
mov
mov
mov
hlt
add
inc
or
pop
call
pop
sub
and
jbe
mov
mov
xor
sarb
inc
stos
cmpsl
lock
mov
sub
call
dec
sbb
xchg
inc
movsl
mov
hlt
arpl
rcrb
dec
pop
push
lock
pop
pop
lods
in
cmp
hlt
je
clc
push
adc
scas
mov
mov
xor
cmp
sub
sbb
scas
loopne
mov
xor
sub
xchg
dec
fidivl
push
jnp
sbb
subb
outsl
fsubrp
mov
xor
test
cmp
pop
mov
scas
mov
add
pop
outsb
xchg
add
int3
dec
inc
pop
movsb
out
daa
test
xchg
push
shl
jo
xor
mov
addb
fs
testb
add
and
test
shll
or
pop
push
lock
sbb
addb
call
and
in
add
or
cltd
jmp
repnz
mov
in
fisttpll
fisubs
xor
xchg
add
pop
push
lds
ja
xchg
pop
lret
es
inc
add
loope
adc
xlat
add
ljmp
xor
nop
push
push
jne
cltd
lods
lds
mov
inc
push
out
rorl
shrb
cmp
jmp
call
xchg
pusha
lods
mov
pop
pusha
nop
ret
mov
ss
enter
bound
jmp
mov
add
mov
out
mov
stos
dec
rclb
rclb
add
xor
bound
rorb
adc
adc
mov
out
addr16
les
lods
bound
sbb
push
jbe
sub
add
addr16
mov
and
mov
mov
mov
sti
jge
sarb
inc
test
cmp
fwait
mov
or
add
mov
cmp
rdtsc
xorb
andl
loope
sbb
sub
lods
and
nop
sub
or
aaa
or
pushf
cltd
or
xor
cmp
pop
cmp
fidivs
insl
add
push
cmp
popf
jne
addl
sbb
cmp
mull
mov
dec
aaa
test
cli
cmp
in
jbe
ss
fbstp
sbb
pop
sub
rcrb
sbbb
or
pop
cwtl
aaa
sbb
cwtl
inc
sbb
sub
hlt
sub
inc
scas
push
in
mov
pusha
mov
cs
push
hlt
or
mov
sbb
lds
add
sub
loopne
xchg
push
push
adc
mov
jmp
movsb
lods
jne
pop
and
fs
movsl
cmp
loopne
mov
adc
mov
cwtl
test
ljmp
movl
hlt
mov
test
add
xorb
xchg
out
xchg
cmc
or
add
mov
or
xchg
pop
mov
negb
data16
mov
mov
push
jnp
adc
int3
sahf
jmp
nop
daa
adc
mov
pop
mov
movsb
pop
lds
push
cmp
cmp
je
inc
add
mov
out
imul
imul
ret
add
rcll
pusha
pop
inc
pop
inc
adc
add
lods
stc
cmp
inc
or
add
ds
cmpsb
dec
test
pop
les
sub
fidivrs
xlat
dec
inc
dec
dec
dec
inc
dec
dec
icebp
jp
xor
mov
dec
push
dec
stc
or
pop
or
xor
or
jb
mul
or
sbb
xchg
cmp
xor
movsl
out
mov
lret
bound
dec
add
adc
cli
mov
sub
add
inc
popa
push
mov
sub
mov
and
or
fdivrs
pop
sub
push
cmc
js
rcr
push
pusha
and
int
sahf
inc
dec
sub
dec
inc
dec
fldt
xor
dec
repnz
xor
das
pop
add
paddq
pusha
enter
dec
inc
adc
iret
aam
icebp
sbb
je
inc
add
dec
or
dec
and
jge
addl
sbb
lock
ss
rorb
jno
inc
test
mov
or
lret
ficoml
inc
inc
add
or
test
jo
cs
insl
addl
rcr
inc
and
popf
imulb
mov
sub
sub
es
bnd
mov
imul
add
and
movsl
fcoms
push
aam
addl
inc
inc
pop
push
mov
adc
andb
fs
lods
outsb
jae
sbb
sbb
insb
imul
jp
cmpsl
add
dec
add
push
push
popa
into
stc
pop
fldl
jno
and
inc
rolb
shlb
je
add
xor
ret
mov
or
nop
cmp
pop
sbb
pop
dec
mov
or
inc
lods
mov
xchg
mov
imul
adc
push
xchg
inc
inc
dec
inc
xchg
arpl
daa
sbb
addl
xor
lea
xchg
cmp
orl
iret
cmp
jmp
mov
popf
icebp
dec
movsl
aad
std
sbb
or
add
or
cld
or
leave
dec
adc
push
mov
add
addr16
aas
cmp
mov
or
jno
add
addl
xor
mov
xor
mov
mov
or
insb
dec
mov
pop
movsb
xor
rorb
movsb
xchg
addr16
popa
jno
nop
cmpsl
jle
and
inc
cmp
js
pushl
fsubrs
jnp
js
push
dec
inc
movsl
sub
inc
mov
dec
adc
insl
inc
aaa
mov
pusha
punpckhwd
and
pop
loope
xor
or
or
jg
sbbb
sbb
sbb
mov
mov
das
add
aad
jne
je
push
cmpl
outsb
add
mov
push
fs
mov
cmp
flds
adc
or
lea
dec
add
push
pop
and
inc
dec
nop
rcll
or
imul
mov
int
movsb
mov
inc
inc
jecxz
sar
or
cmpb
adcb
sub
test
pop
pop
lock
incl
pop
jle
xor
mov
and
xchg
mov
add
xchg
mov
jg
jb
shll
leave
xor
int
icebp
fs
or
inc
sbb
cmpb
cwtl
idivb
or
mov
lock
mov
bound
push
xor
or
sbb
and
xchg
rolb
out
pop
add
adc
pop
fwait
lock
fstl
add
bound
push
add
or
pop
mov
pusha
fcmovnb
pop
test
dec
push
addr16
lock
inc
ja
fimull
bound
dec
inc
ret
call
adc
shlb
dec
repnz
xchg
push
pop
adc
push
push
les
inc
inc
xor
jno
push
sbb
pop
mov
mov
jb
daa
mov
movsl
sub
cmp
add
add
xor
cmp
cmp
sbb
adc
push
push
lcall
ss
hlt
add
in
test
pop
ja
daa
notl
sahf
test
test
push
mov
int
es
adc
pop
pop
push
fstps
add
sbb
sub
dec
add
movsb
xchg
add
add
or
sbb
xchg
sub
cmp
shl
pop
jb
insl
pusha
or
cmpsb
sbb
inc
ss
add
pop
cltd
lret
imull
sbb
add
pusha
jge
addr16
lret
xorl
pop
shlb
pop
test
pop
lods
push
xchg
mov
inc
dec
dec
or
dec
sub
adc
pop
xor
push
fsubrs
jmp
movsl
and
fidivrs
pop
dec
shrl
das
xor
or
sbb
and
scas
movl
sub
push
data16
aaa
lcall
push
inc
jne
pop
add
mov
xchg
lods
sahf
pop
mov
movsl
scas
or
sub
test
pop
ds
mov
repnz
add
cmp
adc
cltd
and
push
dec
inc
adc
in
daa
subl
xchg
or
adc
in
out
pop
xorb
or
sub
mov
and
push
ds
lock
xchg
push
push
mov
mov
les
test
mov
mov
lods
cltd
movsl
push
das
imul
rclb
and
jecxz
in
mov
adc
cmp
int
sub
add
adc
sub
dec
xchg
and
leave
add
add
pop
and
mov
xor
add
call
pop
or
push
inc
pop
adc
inc
xchg
push
outsl
or
and
pop
sub
inc
jp
add
dec
and
icebp
dec
lock
sub
xor
cmp
aaa
sub
movsl
cmpsb
je
stos
movsl
test
incb
sbb
cmp
and
shlb
fcoms
ds
xchg
ret
pop
inc
mov
jo
imul
xchg
mov
pop
stos
inc
push
xor
mov
std
loope
movsb
jmp
xor
ja
arpl
jmp
je
imul
mov
fnstcw
sub
sbb
hlt
adc
mull
adc
jmp
cmp
fsubl
dec
xor
push
sub
shl
gs
test
mov
fldl
lahf
or
into
sub
adc
jle
or
loope
jne
and
mov
outsl
adc
je
pop
fdiv
pop
addr16
and
add
fcoml
inc
fmul
inc
mov
shrl
enter
mov
push
jb
stc
nop
lods
int3
lds
sub
sbb
push
push
mov
xchg
push
inc
inc
or
mov
mull
roll
inc
shll
adc
and
shll
sub
pop
push
icebp
or
add
and
and
mov
faddl
cmp
pusha
loopne
jp
fiaddl
or
int
pop
mov
or
and
pusha
dec
fwait
nop
and
sbb
je
pop
int3
or
xlat
or
jmp
test
jnp
popa
or
popf
pop
aaa
and
jo
jmp
push
sbb
jge
cmpsl
popf
std
aam
int
push
leave
jne
pop
sbb
pop
mov
mov
adc
mov
xor
mov
stc
jne
movsb
mov
sbbl
sbb
pop
inc
bound
mov
xor
lret
adc
cmp
and
subl
and
adc
clc
adc
fdecstp
or
enter
sbb
test
les
xchg
inc
testl
int3
cmp
pop
pusha
xchg
and
ja
outsl
jno
mov
mov
sbb
test
lock
adc
push
dec
clc
mov
cmp
and
pusha
jmp
pop
mov
pop
pop
imul
add
fstl
pop
pop
pop
cmp
lock
cmp
push
add
cmpsb
push
inc
nop
movsl
sub
jns
lods
inc
push
scas
in
add
dec
pop
loopne
and
add
xchg
insb
adc
pop
mov
cmp
das
pushf
insb
cmp
add
sbb
and
pop
stos
loope
jne
jnp
and
cmp
push
mov
xchg
adcb
push
popa
dec
lahf
pop
orb
mov
mov
mov
push
ja
mov
adc
jl
cmp
mov
and
push
decb
cmpl
ljmp
or
adc
and
lahf
add
pop
xor
insb
adc
mov
shll
hlt
popa
ucomiss
push
sbbb
jl
adc
xchg
mov
mulb
push
ret
xor
add
shrl
js
adc
jo
sbb
cwtl
jle
adc
clc
adc
test
pop
clc
lock
cli
mov
sbb
aad
sub
call
mov
sbb
ljmp
je
daa
inc
sahf
popa
iret
dec
js
sbb
xor
orl
shlb
pop
arpl
jo
adc
dec
test
in
aad
push
or
xor
loopne
add
iret
lods
push
add
lea
inc
or
popa
stc
sub
adc
xorl
push
xchg
dec
push
or
xchg
ficompl
pop
lret
rcl
sub
sbb
inc
data16
cmp
or
shlb
cmp
xchg
inc
insl
jne
test
push
out
cmpsl
mov
addl
in
iret
dec
jl
pop
jmp
xchg
or
sub
jo
push
and
dec
jne
std
add
add
mov
hlt
scas
rorb
xor
cmp
lahf
lret
les
shlb
mov
or
imul
loope
push
insb
push
sub
jmp
mov
cmp
hlt
jae
bound
pop
les
or
inc
xor
push
adc
cmpsb
gs
in
dec
out
push
mov
fs
or
jne
pop
jg
pop
leave
mov
fcomps
lods
roll
push
movsl
or
fs
pop
ljmp
lods
orb
adc
in
lcall
jl
or
xchg
mov
inc
pop
cmpsl
nop
xor
sbb
sbb
jl
cmpb
movsb
mov
jno
mov
daa
aaa
xchg
fs
inc
xchg
call
ja
ja
mov
sbb
les
push
sub
dec
mov
xchg
sub
aaa
xchg
cmpsb
sub
dec
xchg
je
jmp
xchg
add
inc
or
sbb
mov
and
in
push
lret
int
pusha
xchg
and
or
xlat
sub
stos
je
cmp
in
xor
daa
pusha
jge
inc
mov
push
cmp
int
cmp
xchg
sbb
jmp
sub
shlb
ljmp
rolb
mov
inc
jmp
fimuls
cli
jg
pop
dec
dec
loopne
xor
nop
inc
cmpsb
mov
ds
xor
or
lods
imul
and
sub
add
pusha
movl
adc
pop
les
add
add
add
mov
jecxz
add
loope
jp
sub
lret
rolb
inc
les
outsb
mov
rorb
push
sbb
loopne
inc
rol
sub
fsubl
add
es
push
es
inc
es
xchg
mov
fsts
loopne
adc
inc
lcall
dec
add
test
add
sub
sub
movsb
push
xor
or
dec
clc
adc
negl
les
sti
cmpsb
inc
push
pop
cmp
pop
push
out
into
adc
and
jbe
mov
jp
mov
ds
adc
adc
dec
mov
and
adc
cmp
jmp
jl
clc
shll
add
aaa
test
loope
add
adc
xchg
mov
pop
fcompl
mov
sahf
or
or
dec
and
lret
fadds
dec
adc
mov
and
fidivrs
push
pop
addr16
xchg
pop
inc
loope
dec
test
and
pop
jge
push
in
pop
fnstcw
ret
ljmp
inc
dec
in
push
cmpsb
paddq
jle
outsb
cmp
or
inc
bound
out
xchg
dec
push
adcl
cli
aam
jbe
mov
push
push
adc
ljmp
push
es
stc
push
mov
movsl
push
adc
lea
and
sub
daa
add
rolb
mov
je
rcrl
outsb
je
xchg
icebp
lock
jg
sub
into
sub
inc
sub
int
dec
dec
xchg
or
dec
mov
jp
and
pop
out
jno
sub
mov
insl
hlt
adc
icebp
mov
or
sub
add
xor
movsb
sbb
add
imul
repnz
cwtl
add
xor
clc
pop
adc
mov
adc
adc
enter
mov
ret
push
and
cmp
popa
loopne
cld
je
mov
jb
fsub
sub
xchg
les
loope
pusha
pushf
adc
in
jmp
jecxz
push
pop
stc
adc
in
xor
pop
adc
leave
dec
lahf
sbbl
dec
out
push
adc
jecxz
popf
jne
cwtl
addb
sbb
inc
std
cmpsb
add
nop
pop
sbb
and
xchg
mov
xlat
in
xor
outsl
push
stc
imul
into
sbb
dec
shl
dec
test
pop
sub
ret
pop
js
test
imul
pop
lea
mov
dec
cmpsl
cmp
and
repz
and
push
and
dec
inc
cmp
push
hlt
and
cmp
mov
jmp
or
dec
and
pop
mov
mov
dec
arpl
or
adc
aas
addb
lock
mov
xor
sysenter
push
outsl
addr16
sub
cmp
pop
jecxz
adc
xchg
xor
outsw
mov
adc
add
sahf
dec
or
and
dec
ret
jno
xor
sbb
clc
arpl
adc
jae
adc
xor
jmp
jae
mov
mov
pop
je
rolb
dec
fucomip
dec
xchg
mov
dec
jbe
pop
sbb
push
adc
aas
mov
push
mov
movsb
inc
push
pop
adc
xchg
add
movsb
and
mov
inc
mov
mov
xor
sbb
jbe
cld
cmp
cmp
mov
not
sti
sub
les
sbb
xchg
jbe
ja
ret
cmp
test
jmp
add
dec
rcrb
and
push
mov
aaa
mov
jo
xlat
and
mov
or
pop
mov
push
mov
or
jae
les
dec
ret
cmp
fdivs
xor
cld
nop
cmpsb
outsl
aaa
pusha
sub
inc
sub
mov
imul
push
adc
call
xorl
jbe
iret
data16
jne
xchg
lock
les
dec
jmp
and
mov
inc
imul
loope
sbb
ss
andb
pop
pop
inc
push
jo
inc
lea
aaa
add
mov
dec
popa
push
aam
pusha
mov
mov
sbb
leave
push
jns
sbb
sbb
out
stos
lea
outsl
nop
add
loop
in
shlb
subb
or
clc
jle
push
rclb
add
lock
inc
gs
outsl
int3
daa
dec
and
or
push
mov
or
cmp
sub
add
fs
and
mov
in
mov
adc
cmp
cmpl
popa
test
lidtl
jecxz
or
es
mov
pusha
test
push
xlat
addl
sub
pusha
movsb
lock
push
movsb
mov
cmp
adc
adc
jno
dec
mov
pop
out
rol
scas
xor
and
cld
sbb
or
xchg
fsubr
pop
repz
mov
mov
inc
shrb
imull
push
arpl
and
fisubrs
sub
mov
dec
sarl
xor
mov
pop
in
inc
bound
arpl
jo
sub
js
mov
iret
jne
pushf
shrb
or
xor
push
xor
les
push
add
pop
sar
mov
jge,pn
test
mov
scas
sbb
icebp
and
inc
aaa
adc
inc
call
add
in
loop
dec
sub
movsb
xlat
inc
xor
dec
and
movl
subl
cmpsb
rorl
pop
lock
add
mov
mov
xor
fimuls
xchg
add
fildl
cmp
ficoms
xchg
fdivs
sahf
push
or
clc
add
add
adc
xchg
outsl
xor
rorl
popa
mov
test
into
fsubs
push
cs
dec
call
pop
movaps
inc
stos
leave
xchg
add
arpl
inc
lods
outsb
adc
fiaddl
notl
and
int3
sbb
or
push
xchg
mov
jmp
jbe
lods
shll
push
fsts
mov
add
xor
adc
adc
add
or
sti
xor
fsubp
jo
or
add
mov
dec
sbb
push
fldl
test
out
pusha
sbb
sub
xchg
enter
push
xor
int3
push
pop
sub
xor
movsl
in
addb
mov
or
sbb
mov
daa
sub
aas
jmp
jo,pn
lcall
push
loope
pop
in
xchg
adc
sbb
sarb
ror
movsb
or
cmp
jno
lea
scas
mov
int
test
call
add
in
leave
inc
mov
pop
mov
mov
mov
push
je
data16
clc
mov
xchg
rolb
inc
xor
sub
ja
mov
push
pop
out
push
inc
pop
popf
pop
xor
cmp
mov
xor
push
jp
popa
mov
adc
pop
sbb
xor
imul
push
adc
sti
jbe
lods
pop
repz
push
sub
mov
fs
arpl
jb
xchg
push
sub
int3
lret
pop
push
mov
pop
xor
les
out
sbb
fsts
hlt
inc
and
add
pop
or
push
sbb
cmpsl
aam
fsubs
stos
push
adc
pusha
nop
add
jo
rolb
push
shlb
adc
xchg
popa
in
dec
mov
dec
outsb
xchg
or
jo
dec
mov
push
xor
js
stos
int
adc
lea
lods
mov
bound
test
add
add
dec
iret
inc
pusha
or
mov
icebp
push
push
jo
insb
mov
add
push
shrb
dec
iret
and
sbb
sbb
jnp
rcrb
aaa
call
cmp
loope
sbb
mov
and
push
lods
lea
clc
insb
and
pop
mov
xor
cwtl
adc
mov
xchg
hlt
mov
std
mov
ljmp
and
adc
mov
mov
mov
lret
sbb
popa
jecxz
mov
mov
cltd
xchg
push
repnz
pop
mov
outsl
add
or
and
xchg
mov
cli
cld
clc
fwait
je
push
adc
outsb
pusha
aaa
fstps
dec
cmp
and
push
call
jl
dec
cmp
inc
dec
mov
test
aaa
lds
dec
insl
lcall
loopne
jecxz
clc
ret
imul
fstps
dec
jne
inc
jns
xorb
insl
cmpsl
cmpsb
fcmove
mov
xchg
dec
loop
add
hlt
jp
xor
add
mov
inc
add
dec
push
movsb
pop
mov
inc
gs
inc
je
bound
dec
leave
dec
sti
mov
rol
dec
sbb
jge
mov
add
ret
mov
push
aad
popf
cli
sbb
xor
add
adc
xor
pop
jnp
and
loopne
xor
pop
xor
psraw
add
pop
testl
sub
daa
bound
pop
xchg
fs
xor
mov
outsl
or
test
adc
sub
mov
jp
pop
dec
push
xchg
pop
xor
inc
inc
lret
xor
xor
fs
adc
mov
add
adc
and
cmp
leave
in
and
or
add
stos
inc
jmp
in
jge
sbb
sarl
mov
xchg
jl
mov
adc
push
mov
push
adc
mov
fidivl
test
jb
and
mov
outsl
or
nop
mov
cmpsb
adc
xchg
or
adc
xor
or
or
xchg
fstl
or
movb
arpl
add
sub
ficoml
aaa
xlat
mov
insl
push
or
adc
xchg
push
sbb
inc
sbb
push
inc
sub
pop
sbb
mov
fisubs
and
cmp
xor
and
jne
rcr
shlb
dec
shll
adc
lcall
outsl
mov
cmp
je
sbb
shlb
sbb
adc
cmp
or
pop
jg
dec
push
fdivrl
aaa
movb
imul
xchg
aam
es
sbb
adc
lods
mov
mov
push
dec
add
rorb
mov
sbb
jle
inc
je
or
adc
mov
sbb
mov
inc
or
fadd
sbbl
push
xlat
mov
pop
pop
inc
loop
orl
hlt
inc
inc
inc
jg
test
enter
sarb
hlt
add
cmc
add
sub
mov
sbb
mov
mov
mov
push
dec
fs
xchg
shrd
out
or
ret
mov
adc
inc
popa
xchg
xor
les
nop
xchg
arpl
push
nop
inc
push
fs
inc
push
nop
inc
inc
xchg
inc
push
nop
test
push
push
nop
inc
les
inc
push
nop
in
add
pop
enter
and
and
enter
enter
outsl
test
enter
movsb
jno
pop
enter
in
pop
enter
addl
nop
add
add
nop
jne
jbe
nop
add
fs
add
nop
add
nop
add
nop
jns
cs
add
in
add
add
add
and
add
cmp
add
pop
test
jb
add
add
das
les
jns
add
xor
xor
add
in
inc
xor
in
cmp
add
in
xor
in
les
cmp
add
in
add
sbbb
cmp
sbbb
inc
inc
sbb
sbbb
test
movsb
jb
sbb
inc
les
jb
sbb
inc
add
inc
push
sbb
and
inc
push
cmp
dec
push
cmp
fs
test
cmp
movsb
cmp
cmp
push
inc
push
in
add
and
sbb
xchg
inc
push
xchg
xchg
and
pop
xchg
insb
sbb
ja
mov
mov
imul
movsb
ret
pop
scas
and
xor
cs
mov
push
pop
js
push
adc
jbe
inc
push
push
adc
push
add
dec
pusha
add
fildl
js
pop
pusha
enter
add
add
jne
popa
mov
push
fdivl
lods
test
iret
lds
cwtl
dec
inc
mov
mov
add
xchg
fldl
push
sub
call
inc
inc
enter
inc
jmp
adc
add
xor
push
inc
dec
xor
or
mov
cli
addb
jmp
fistps
arpl
or
rcrb
or
cmpsl
fiaddl
ficompl
and
add
pop
mov
daa
ret
sahf
dec
in
push
aaa
into
mov
imulb
test
xor
test
dec
int
jns
movsb
loopne
mov
sub
mov
add
ss
add
aam
add
test
sti
sbb
mov
inc
lock
xchg
mov
add
mov
push
dec
and
call
pop
push
lods
mov
outsl
pop
repnz
addb
inc
xor
cmpl
jecxz
and
sub
push
sub
and
push
scas
sbb
mov
sbb
add
aaa
sbb
mov
pop
mov
push
or
movsb
outsl
or
ret
sub
inc
sub
mov
mov
inc
lods
in
xchg
js
mov
or
and
out
and
out
xchg
mov
ss
shrb
and
enter
inc
dec
scas
or
xchg
cli
sub
orb
and
push
add
cmp
fisttpl
inc
push
adc
adc
and
jnp
mov
and
repnz
in
and
pop
sbb
mov
or
mov
jns
daa
jns
mov
cmp
dec
daa
jns
daa
inc
mov
dec
mov
insb
dec
mov
adc
es
mov
enter
pop
mov
fs
adc
in
sbb
cmp
push
lock
hlt
in
je
add
js
or
mov
jnp
cmp
test
dec
sub
xchg
lret
nop
je
andb
cwtl
test
movsb
movsb
mov
xchg
push
es
lods
aam
and
dec
mov
mov
arpl
cld
mov
sub
mov
dec
popf
dec
testl
and
sub
dec
andl
aam
rolb
dec
pop
xchg
and
das
or
enter
xchg
dec
popa
outsb
pop
inc
bound
imul
fisubrl
jns
jne
pop
insb
pop
repnz
cmp
pop
push
gs
arpl
es
dec
outsl
jbe
ss
pop
jne
or
mov
addr16
in
arpl
imul
das
add
insb
jg
aas
movsb
roll
das
mov
mulb
rcrl
and
pop
pop
in
inc
daa
outsl
push
daa
push
xchg
shrb
push
jne
push
add
cmp
gs
inc
mov
cmpsl
push
fs
mov
scas
pop
pop
mov
and
or
push
into
jb
mov
insl
and
out
pushf
lock
inc
mov
cmpsl
movsl
fldenv
notb
mov
xchg
and
orb
inc
popf
add
cmpsl
add
dec
arpl
inc
jecxz
cmp
loopne
jle
adc
out
pop
add
cld
insb
xor
lret
sahf
iret
cwtl
add
out
dec
or
sbb
mov
pop
dec
xor
imul
dec
cmc
mov
mov
adc
pop
arpl
dec
dec
xchg
jo
xchg
daa
in
lods
out
or
sbb
or
fcoms
outsb
and
lea
aas
pop
add
sbb
movsl
pop
add
and
jbe
adc
push
xchg
lods
add
and
cmp
xchg
pushf
sbb
mov
sub
mov
jp
addr16
das
test
pop
xor
push
push
aas
fldenv
test
inc
movsb
xchg
popf
movsb
and
imul
cmpsb
xorl
aam
push
mov
xor
dec
fistps
cmp
sub
mov
fisubs
add
scas
dec
mov
rcr
sti
inc
ss
adc
add
jle
es
cwtl
xchg
insb
jnp
or
or
xchg
and
push
hlt
dec
je
ret
and
xor
and
into
and
roll
sbb
adc
aaa
jg
jl
add
mov
push
adc
push
cli
ror
xor
push
lods
pop
pop
mov
loopne
dec
sti
pop
push
adc
xor
cld
sub
fdivr
xor
hlt
mov
out
add
enter
jo
add
ret
inc
loopne
sbbb
xchg
les
loopne
scas
mov
dec
and
and
or
out
xchg
push
cmpsb
lock
dec
push
pop
push
sub
inc
pop
sti
and
jae
xor
cli
jae
mov
sub
outsb
xchg
xor
lods
fldl
add
or
mov
out
cmp
ja
push
add
xchg
dec
popa
xor
mov
shlb
ret
je
and
pushl
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
cmp
pushf
pushf
pushf
and
and
pushf
pushf
pushf
and
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
sub
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
adc
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
sbb
pushf
pushf
pushf
add
add
pushf
pushf
pushf
add
pushf
pushf
pushf
or
or
pushf
pushf
pushf
or
dec
dec
dec
inc
icebp
repnz
jl
dec
dec
cmc
div
adc
notl
jb
inc
xor
xor
push
inc
incb
push
sbb
jo
sbb
lcall
adc
je
jns
rcrl
nop
aam
fsubs
nop
in
cltd
add
inc
scas
insl
sub
mov
fsubl
jns
pushf
xchg
je
inc
dec
inc
pushf
adc
lock
test
or
movsl
outsl
nop
jb
lret
adc
add
inc
dec
mov
iret
or
push
pushf
nop
fs
adc
mov
out
inc
imul
xchg
je
push
pusha
lret
ljmp
inc
sbb
push
or
loop
in
fcoms
jmp
rorl
mov
ss
iret
inc
sahf
ljmp
push
push
ds
and
pop
outsb
test
adc
xlat
lods
adc
lods
push
lods
xchg
ror
or
enter
lahf
adc
and
dec
push
add
add
loope
mov
inc
movsl
push
and
push
add
dec
sbb
jo
fidivl
arpl
or
or
cmp
mov
repnz
jne
test
inc
jmp
jg
call
sbb
jp
xchg
ret
ja
into
jo
inc
fiadds
dec
xor
add
aas
jb
mov
or
fimull
lods
scas
mov
mov
inc
pop
fistps
dec
xchg
sbb
cmp
sbb
sbb
gs
loope
dec
jno
pop
cmp
adc
mov
adc
je
and
sbb
sub
dec
je
jmp
inc
xor
inc
lea
jo
sbb
pop
inc
stos
ret
mov
xor
inc
mov
mov
movsb
cmp
mov
inc
add
inc
pop
mov
das
arpl
mov
inc
lret
mov
pop
mov
or
fsubl
inc
mov
icebp
es
add
fldl
dec
xor
or
or
jmp
jae
inc
sub
inc
xchg
addb
test
mov
in
sarb
mov
cmp
out
pop
jb
lret
jp
movb
adc
rcrb
push
and
jne
int3
dec
jne
lret
mov
add
fcmovnb
test
xchg
mov
sub
mov
cmc
push
or
add
inc
cmp
jge
cli
daa
fs
xchg
inc
cmp
jae
push
jo
sbb
xchg
mov
adc
sub
les
sbb
clc
inc
or
push
jo,pn
jae
xchg
outsb
lret
cmp
adc
and
jne
dec
subl
xor
mov
enter
and
sti
or
testb
pop
adc
push
jge,pn
mov
ljmp
jg
movsb
add
mov
ljmp
xchg
mov
test
and
andl
mov
or
jbe
and
es
mov
pop
adc
pushf
mov
cmpsb
pushf
mov
adc
push
nop
adc
scas
jecxz
xor
cmp
inc
cwtl
and
pop
push
mov
or
insb
outsl
fisubl
pushf
scas
pushf
fdivrl
xchg
in
mov
fadds
xor
xor
outsl
shlb
and
push
sbbb
dec
push
or
add
cmp
js
mov
dec
push
jns
aam
sbb
push
sub
dec
cmp
xchg
xchg
dec
cmp
dec
adc
jne
push
das
pop
daa
or
dec
dec
xchg
clc
add
sbb
adc
les
mov
inc
cltd
xlat
or
out
push
and
xchg
ret
shlb
add
inc
sti
sbb
enter
pop
stos
leave
out
lcall
lock
ja
push
jmp
mov
push
push
push
cli
lea
cmp
outsb
or
xor
cmp
push
data16
sbb
cld
rclb
rcll
sub
push
fisubrs
adc
sti
jne
lds
test
mov
jle
push
sti
adc
dec
movsl
mov
sbb
adc
insb
and
clc
fisubs
gs
dec
sbb
in
shlb
mov
stos
inc
sub
mov
adc
add
or
or
cwtl
adcb
add
pop
mov
sbb
pop
test
subl
lea
mov
cmp
xlat
and
pusha
sub
fadd
dec
leave
gs
cmp
into
sbb
inc
sub
pinsrw
xchg
or
pop
test
sbb
pushf
mov
cmp
adc
adc
loopne
add
dec
lods
mov
jecxz
pop
rclb
js
sbb
jmp
or
movsb
mov
cmp
ja
push
inc
cmp
repnz
adc
adc
pop
or
gs
inc
mov
xlat
pop
dec
pop
cmp
jbe
sbbb
outsl
mov
sarb
mov
dec
xor
jo
sub
mov
pop
mov
popf
mov
imul
addr16
xchg
cmp
cmp
push
inc
jbe
cmp
mov
leave
mov
add
pop
mov
test
add
pushf
dec
inc
cmp
xchg
mov
push
dec
popf
sbb
xchg
sub
mov
mov
push
push
into
adc
in
inc
aas
stos
and
dec
outsl
cmp
shrl
mov
and
sbb
std
cmp
arpl
jmp
mov
add
dec
xor
push
mov
mov
push
xchg
jge
jecxz
jl
decl
ret
dec
adc
inc
and
hlt
inc
adc
jle
int3
mov
lds
cli
cmp
je
sub
fidivrl
decb
or
stos
mov
mov
mov
jb
push
out
sub
or
add
lea
sar
mov
inc
xchg
mov
hlt
or
hlt
pop
or
sub
repz
inc
decl
jne
cmp
imul
add
jo
sar
rorl
bound
in
rcrl
dec
je
jmp
inc
je
push
push
cmpsl
add
dec
int3
and
adc
xchg
dec
mov
nop
movsb
inc
push
mov
sub
jmp
pushl
pop
xchg
mov
aas
xlat
or
fcmovnbe
mov
fiaddl
pop
nop
push
add
add
jecxz
lods
xchg
inc
pop
pop
int3
xchg
mov
push
js
mov
cmp
jne
aam
pop
shll
or
inc
fs
jge
fildll
outsb
push
jle
jp
adc
cmp
add
sbb
dec
ret
cmp
lods
roll
add
mov
lods
mov
loopne
es
or
or
test
test
stos
push
sub
enter
xor
cmpsb
lds
jle
mov
jmp
movsl
inc
lret
push
mov
movsb
movsb
and
xor
mov
nop
xchg
fmul
xor
and
dec
ret
adc
add
xchg
cmpsb
and
xchg
add
cli
cmp
scas
les
sbb
xlat
mov
dec
inc
push
mov
fdivs
and
dec
mov
add
test
cwtl
insb
in
orb
push
mov
bound
mov
mov
sub
fwait
mov
adc
test
insb
dec
loop
push
push
pop
xchg
mov
dec
jmp
mov
sbb
xor
and
lret
xchg
inc
add
dec
bound
ret
popf
mov
out
push
push
fwait
inc
jo
clc
add
hlt
mov
stos
mov
xor
data16
pop
jge
ret
dec
xor
pop
xchg
filds
je
and
mov
mov
inc
in
mov
or
call
and
or
inc
dec
mov
add
dec
and
dec
inc
fadd
adc
pop
xchg
jecxz
mov
shrb
repz
cmp
adc
add
or
test
inc
push
xor
aam
adc
lods
lret
movsb
pusha
mov
inc
mov
and
xchg
or
and
xchg
testl
and
adc
xchg
dec
imul
data16
ret
sarb
les
jae
and
mov
sub
frstor
add
ret
sub
repz
and
lahf
push
push
and
outsl
and
inc
inc
inc
into
jbe
cs
cmp
outsl
cmp
push
mov
addr16
pop
add
faddl
insl
mov
jbe
pop
or
add
mov
cmpsb
inc
mov
xchg
add
or
ret
sub
and
rcrb
scas
sarb
popa
cmp
mov
or
int
lret
fdivl
lahf
pop
mov
inc
rcll
sub
sub
dec
dec
inc
xor
lret
test
pop
add
inc
sub
or
lods
in
add
push
mov
and
and
lret
adc
mov
adc
mov
addl
or
out
add
push
jns
pop
rorb
mov
sbb
nop
push
push
lret
adc
sub
sahf
xchg
ss
mov
sbb
sub
push
imul
adc
xlat
aam
ja
enter
add
nop
jecxz
mov
adc
lods
sbb
pop
cld
sub
add
lock
cmp
imul
cmp
xor
pop
mov
aad
movsb
adc
movsb
dec
add
rorb
push
push
xor
movsl
push
adc
sbb
and
outsl
data16
sbb
cs
js
daa
scas
hlt
loop
pop
adc
jl
shlb
andl
mov
adc
or
inc
dec
cmpsl
mov
mov
mov
sahf
xchg
rorb
mov
inc
repnz
add
mov
js
sub
test
notl
lock
inc
adc
mov
or
enter
ret
daa
popa
mov
push
push
dec
popf
int
pop
shrb
mov
jno
loop
rolb
pop
and
inc
or
imul
xor
aas
cmp
jg
mov
sti
aam
gs
repz
dec
mov
sbb
fcomp
mov
mov
sub
pusha
inc
inc
iret
push
popl
add
jae
je
jo
test
lods
push
cwtl
imul
add
xor
popa
push
ss
push
daa
push
jmp
cmpl
adc
clc
std
push
push
push
adc
pop
dec
hlt
jno
xchg
mov
movlhps
mov
xchg
pop
cmp
inc
bound
mov
ret
mov
gs
daa
or
icebp
outsb
or
mov
data16
inc
lock
push
or
push
xor
cli
insb
mov
cmpb
dec
mov
dec
popa
cmpsl
inc
orb
ror
pop
inc
mov
push
pop
ret
in
adc
ja
push
bnd
jp
push
jne
mov
je
les
lods
xor
xchg
or
and
or
in
leave
lret
mov
sbb
bt
pop
jb
lods
push
mov
outsl
in
mov
in
out
fdivl
fnsave
fdiv
insl
inc
fildl
add
nop
insl
gs
sbb
hlt
jmp
clc
cmp
cmp
xchg
adc
inc
jbe
mov
cld
nop
mov
cld
mov
leave
loop
add
sbb
cmp
mov
sub
cmp
hlt
movl
aas
pushf
sub
and
pop
popa
shlb
sub
xor
mov
shlb
or
jb
imul
cltd
pop
inc
sbb
adc
sbb
push
adc
adc
adc
sbb
rolb
cmpsl
dec
ds
adc
dec
in
sub
ja
inc
sbb
leave
in
mov
or
rcl
data16
lods
mov
push
and
xor
lea
sti
xor
les
mov
mov
and
adc
mov
dec
roll
sbb
jae
and
jecxz
aas
add
orb
out
or
jne
in
outsb
jg
mov
roll
pop
addl
sub
adcl
push
das
mov
inc
xlat
pop
cmp
sub
cmp
mov
sub
cmp
inc
or
lahf
inc
outsl
mov
inc
out
dec
flds
xor
sub
movsb
mov
dec
enter
pop
dec
iret
adc
xchg
add
lods
xor
inc
pushf
sbb
mov
ja
push
push
test
jmp
loope
or
sbb
dec
adc
ret
out
add
push
xchg
add
pop
call
pop
or
lcall
pusha
fs
inc
push
sbb
pusha
adc
push
outsb
bound
addr16
push
add
fs
les
ss
jns
push
mov
sub
pop
lds
pop
mov
loopne
inc
sti
mov
insb
cmpsl
inc
jae
test
push
fs
leave
dec
push
inc
jns
jo
xor
mov
aaa
in
fldcw
ja
lds
and
es
lret
lahf
js
js
and
xchg
andl
sub
jl
pop
pop
or
cmp
out
sbbb
or
mov
cmp
mov
mov
rclb
jno
pop
mov
test
mov
mov
adc
push
pop
mov
dec
mov
out
mov
pop
pop
jp
inc
ljmp
nop
cmp
in
nop
or
das
xchg
xchg
shrb
adc
add
adc
arpl
in
xchg
stos
pushfw
inc
enter
ficoml
mov
enter
xor
stc
push
adc
pop
gs
inc
xchg
movsb
push
cmp
cs
leave
test
cmp
adc
lods
in
or
lret
pop
loop
stos
push
ja
imul
and
xchg
mov
jecxz
leave
adc
push
outsb
sbb
jae
xchg
mov
add
lret
dec
and
mov
dec
aas
adc
pop
inc
test
sar
aam
inc
dec
insb
popa
jo
les
and
les
pop
adc
pop
enter
jg
xor
enter
and
add
bnd
jo
sarb
jg
movsb
xor
jae
les
rolb
prefetch
dec
mov
stos
popa
cmpsl
aam
int3
lahf
xor
dec
aam
or
mov
pushw
nop
xchg
fcoms
fsub
nop
dec
dec
push
fs
int3
fdivrl
add
aas
loopne
fmul
sbb
push
xchg
iret
add
adc
sub
in
in
or
lds
cltd
insb
pop
arpl
adc
call
or
in
mov
mov
mov
lock
add
lock
jo
xchg
cmp
hlt
xchg
xchg
and
into
hlt
addr16
push
mov
daa
clc
or
mov
push
clc
or
loopne
lret
into
inc
daa
xchg
fdivs
pop
test
into
dec
fisttps
sub
into
sbb
popl
sbb
sub
test
or
or
rolb
dec
inc
andb
and
icebp
rolb
emms
adc
sub
adc
and
adc
das
dec
push
mov
adc
rcll
adc
das
and
mov
enter
in
fldcw
or
sbb
stc
outsb
xchg
test
cs
leave
inc
and
push
xor
pop
inc
sub
in
cs
xchg
jbe
sub
dec
add
dec
fcmovne
or
ja
nop
xchg
pop
inc
sub
shrb
inc
push
inc
push
xor
xor
push
or
xor
shlb
and
adc
adc
fmull
cmp
leave
push
jb
cmp
cmpsb
nop
lret
cmp
dec
cs
adc
inc
cwtl
in
jmp
adc
add
ja
xchg
or
mov
in
pop
js
push
mov
jg
adc
in
in
dec
push
pop
fwait
nop
lret
dec
call
jmp
jg
jns
jo
daa
out
xchg
cwtl
pop
cmp
jge
or
andps
aam
or
mov
fiaddl
inc
out
pop
sub
cmp
cmp
push
xchg
sub
xchg
and
push
add
mov
fimuls
and
xchg
push
sbb
or
lcall
aam
fs
xchg
xchg
and
and
xor
scas
xchg
or
loope
add
mov
and
in
jo
orl
push
dec
leave
and
je
xor
push
out
xlat
pop
xor
cmp
scas
sbb
rorl
push
xchg
jl
in
jmp
nop
xchg
xchg
push
sbbb
aaa
test
aaa
test
fadds
add
lret
add
and
mov
xchg
popa
add
insl
or
adc
repnz
push
xchg
push
ds
out
int3
in
mov
repnz
jo
lods
xchg
iret
in
hlt
call
jl
shlb
lock
adc
lret
int3
or
mov
repnz
adc
arpl
sbb
lahf
iret
arpl
sbb
shlb
repz
sub
sub
cs
in
shll
xor
sub
cmp
ret
lret
jae
cmp
je
mov
out
pop
dec
in
push
sub
out
pop
sahf
push
pusha
pop
cwtl
pop
repnz
clc
fs
mov
insb
insb
movsb
jo
repnz
ds
adc
js
test
lock
movb
fmuls
push
nop
pop
xchg
mov
cwtl
jns
lahf
lret
aam
and
mov
jae
xchg
test
adc
leave
adc
jl
iret
mov
sarb
jo
ror
lret
cs
in
int3
cmp
jl
dec
in
jns
fsubs
int3
fcompl
jns
loopne
in
jae
sub
js
stc
pop
sahf
lret
mov
clc
clc
cmp
out
inc
lret
push
cld
mov
adc
sub
push
or
pop
sahf
lret
cwtl
adc
adc
rcrb
push
sbb
push
stc
sbb
and
sub
cld
xor
repnz
sahf
xor
cmp
cmp
pop
sahf
lret
inc
jo
lods
push
ds
out
in
dec
sub
push
bnd
repnz
push
dec
adc
ja
mov
adc
fs
test
and
insb
push
jo
je
xlat
js
cs
in
jl
sub
dec
in
test
mov
scas
cwtl
inc
stc
xchg
mov
fldl
push
add
or
sbb
push
pop
mov
bound
repz
mov
or
jo
add
fidivrs
push
and
cmp
mov
inc
jae
in
dec
repnz
pop
mov
stos
mov
test
imul
pop
push
insl
mov
xor
imul
push
and
dec
add
add
pop
pop
outsb
push
mov
jo
dec
jae
adcb
idivl
addl
pop
enter
adc
jae
and
add
ret
cmp
in
add
in
fildl
repz
cmp
lcall
dec
xor
xchg
cmp
ret
out
mov
ret
dec
call
addb
push
mov
sar
mov
adc
scas
jae
or
ja
sar
push
adc
cmp
inc
jmp
push
lea
pop
fcoms
fdivrl
or
mov
xor
iret
adc
mov
loope
push
rcr
js
or
xchg
rcll
pop
out
sahf
out
adc
and
pushf
out
sahf
cs
fiadds
dec
mov
mov
out
jle
cmp
sti
sbb
loopne
fcompl
sub
mov
aaa
sbb
xor
add
adc
mov
dec
add
lods
push
cmc
or
push
and
mov
dec
hlt
cs
out
sbb
push
ret
inc
push
mov
repnz
loope
or
jl
sbb
inc
xor
movsb
pop
dec
cmp
in
mov
dec
mov
push
icebp
jecxz
and
mov
push
add
jae
inc
mov
xor
jb
pusha
push
filds
push
rclb
pop
jno
outsb
pop
xor
mov
dec
xchg
cmpsl
popf
shrb
loopne
add
ds
int3
adc
push
sti
test
fidivrl
sbb
mov
adc
out
inc
fiaddl
shr
inc
and
push
xchg
call
jnp
pop
inc
test
fdivs
out
dec
mov
push
pop
lock
mov
sbb
inc
add
xor
test
clc
lcall
jecxz
cmp
nop
idivl
les
sub
mov
and
fistl
in
inc
in
enter
jecxz
add
fs
mov
mov
mov
add
mov
pop
gs
rolb
sbb
iret
popf
inc
enter
mov
and
push
outsb
jae
jo
and
leave
mov
cs
jno
pusha
inc
test
out
jmp
ljmp
mov
mov
cmp
adc
inc
pop
cmp
xor
push
movsb
mov
in
push
call
or
addr16
sbb
clc
and
dec
jecxz
cmpsb
push
adc
addl
push
or
add
faddl
add
inc
sbb
push
fists
push
add
fnstsw
jne
add
sub
add
cmp
inc
push
shlb
add
hlt
push
pop
cld
shr
out
pop
cmpsb
es
mov
mov
out
ret
dec
clc
add
imul
ret
push
je
ds
add
mov
pop
hlt
je
nop
sub
inc
add
sub
xchg
lock
loope
fs
in
add
sub
clc
ds
mov
pop
mov
jne
lea
add
movsl
add
or
lret
lock
test
popa
xor
pushl
or
movsl
fcom
out
rclb
add
xchg
nop
or
inc
out
inc
jne
mov
jl
shr
mov
leave
jl
cmp
jle
jl
aam
add
add
int3
jmp
fidivrl
cmp
data16
test
aam
mov
arpl
fprem
mov
xchg
hlt
xchg
adc
fs
into
adc
or
rclb
pop
xor
clc
in
xor
cmp
dec
andb
inc
call
or
adc
fldcw
sbb
jmp
int3
ret
lret
movsl
or
mov
sbb
inc
mov
int3
fcomps
fistl
loop
cs
lods
ljmp
and
daa
cmpsb
mov
aas
add
pop
iret
repz
push
and
xor
push
cmp
repz
js
lcall
int
out
add
out
sahf
cmpsl
adc
xor
out
sahf
data16
xchg
movsb
mov
sahf
out
ror
ljmp
inc
sahf
xor
mov
mov
mov
mov
and
sbb
mov
inc
sbb
mov
add
mov
xchg
and
and
jb
inc
xor
inc
shr
inc
jb
inc
xor
inc
lods
nop
roll
mov
fdivrs
in
in
jmp
les
or
sbb
mov
in
inc
mov
ss
in
sub
and
jae
les
cs
sarl
in
mov
adc
add
clc
xchg
inc
jecxz
add
in
and
add
sub
inc
or
mov
std
or
cmp
int
cmpb
or
mov
ret
jbe
and
jecxz
push
or
adc
add
insl
xor
mov
call
mov
pop
mov
cld
jb
or
lea
movsl
mov
xchg
pushf
pop
orb
sub
jge
push
adc
cs
mov
aad
test
mov
xchg
push
es
mov
rorl
nop
subb
popa
dec
adc
mov
jmp
scas
rorb
jmp
test
mov
arpl
sahf
pop
fs
push
push
push
lret
sahf
or
bound
xor
xchg
pop
or
mov
jb
iret
mov
rorl
xor
jnp
cmp
adc
jns
mov
mov
orl
sbb
ss
stc
xchg
and
or
jno
or
lcall
jnp
in
or
clc
and
add
mov
cmp
xlat
loope
jg
xchg
xor
or
push
jp
in
in
sub
test
pop
icebp
xlat
push
mov
or
mov
popa
jbe
bswap
inc
sti
xchg
nop
rol
loopne
fidivl
dec
imull
or
push
sbb
data16
push
pop
add
cld
pop
mov
push
sub
fbld
push
inc
add
lea
hlt
and
add
out
repnz
das
pop
sub
clc
loope
dec
sti
mov
fimuls
jo
push
jl
sahf
dec
pop
cmpsl
sar
hlt
cli
push
cs
ss
or
xchg
rorb
add
adc
shl
std
push
les
das
popf
fcoml
lods
xchg
mov
push
rolb
sub
push
sbb
pop
popf
mul
shlb
pop
out
imul
add
adc
lods
stc
adc
dec
orb
repz
push
sti
push
insb
cld
ss
xor
mov
mul
imul
pop
scas
cmpsb
sub
pop
insl
push
mov
adc
sbb
test
fdivrl
inc
int3
cmpb
mov
jb
jo
xor
mov
mov
inc
push
xchg
add
movsb
shll
pop
lods
ja
hlt
jecxz
add
cwtl
test
jecxz
out
insb
xchg
rolb
or
inc
xchg
pop
jne
pop
adc
inc
push
add
lcall
test
icebp
inc
inc
cmc
mov
or
add
inc
loope
mov
xchg
aad
daa
testb
cmp
push
mov
pop
push
inc
fisttps
mov
lret
sbb
call
std
sbb
in
xor
das
stos
in
or
add
or
jl
cs
push
ror
movsb
and
shl
jle
push
stos
push
mov
por
aam
pop
xchg
xorb
push
movsb
data16
movsb
jns
fnclex
add
inc
add
fsts
out
mov
insb
sbb
pop
das
aam
inc
jle
das
sahf
pop
imull
fisubs
lahf
dec
out
xor
sub
fisttpl
ret
mov
int3
and
mov
jne
inc
insl
cmp
mov
aas
adc
inc
pop
test
mov
xchg
icebp
xchg
inc
adc
js
or
add
insl
sbb
popl
or
xor
mov
dec
sarb
iret
rolb
jmp
push
mov
push
mov
xchg
xchg
pop
or
movsb
xchg
xor
cmp
out
aad
xchg
cwtl
mov
inc
loop
pop
lods
cltd
or
lds
dec
xor
cli
js
inc
iret
cli
add
mov
jnp
fsubrl
cmp
in
and
jo
push
push
mov
aam
xchg
and
push
dec
fs
daa
inc
insl
xchg
push
test
add
mov
xor
call
add
in
add
nop
stos
popa
stc
lock
jns
test
push
adc
aam
inc
push
ror
xchg
or
push
stos
lods
enter
jge
or
testb
iret
and
inc
xchg
dec
dec
and
xchg
xchg
nopl
mov
enter
cmp
cli
arpl
and
xchg
xor
jae
adcb
and
mov
push
pop
inc
mov
push
ret
mov
xor
rclb
add
xchg
sarb
xchg
mov
jp
cmp
andb
sbb
fs
insb
dec
push
add
pusha
enter
enter
and
mov
sbbl
sub
or
in
xor
cmp
dec
pop
or
push
inc
or
adc
add
sub
jge
shlb
or
add
mov
pop
mov
frstor
ja
jns
inc
add
mov
mov
leave
cld
insl
fs
adc
lods
push
iret
jns
mov
sti
push
jecxz
add
mov
inc
fstl
sbb
mov
pop
shl
addl
mov
sub
movl
add
xor
inc
dec
push
gs
pop
adc
sub
mov
subl
cmp
dec
push
push
xor
dec
clc
push
sbb
loopne
push
jb
mov
subl
das
inc
fisttpl
xor
inc
xlat
xchg
pop
sbb
jge
adc
ja
add
jnp
push
out
scas
pop
pop
sub
jb
cmpl
xchg
test
sub
cmp
stos
mov
mov
jmp
fstl
out
enter
push
call
mov
insb
pusha
lods
mov
mov
sbb
es
and
hlt
pop
add
mulb
xchg
push
aad
inc
popl
mov
mov
inc
rclb
pushf
imul
aas
push
mov
loopne
fadd
imul
xor
jge
loope
xor
adc
cmp
pop
popa
cmp
mov
xor
and
test
adc
and
or
inc
std
or
testb
mov
xchg
iret
sub
jmp
inc
outsl
add
sub
cmp
cmp
inc
pop
jo
mov
and
mov
pop
sarb
ja
addl
lods
adc
add
xchg
cmp
stos
or
movsl
std
sti
pop
je
or
pop
fmull
adc
fsubrl
mov
mov
dec
call
fsubrs
loop
pop
jo
mov
inc
sbb
add
addr16
adc
mov
push
inc
xchg
mov
sub
movaps
movsb
dec
xchg
cwtl
ja
pop
inc
out
add
inc
jl
and
jo
pusha
mov
dec
dec
sub
clc
aas
outsl
fs
das
adc
orb
outsb
out
inc
mov
stc
jecxz
sbb
imul
mov
sub
dec
push
pop
cmpl
push
and
sub
add
setns
or
lods
in
daa
xchg
mov
popa
jg
scas
test
cli
sbb
add
pop
sbb
pop
hlt
mov
rolb
fwait
xor
dec
xor
jge
cmp
nop
mov
jne
inc
cwtl
or
jmp
hlt
jb
and
hlt
inc
mov
push
mov
test
sbb
sub
adcb
les
cmp
andb
ss
mov
jne
shlb
jl
cmp
fnsave
dec
mov
jns
add
mov
sbb
dec
cld
push
pop
xchg
or
push
dec
push
inc
xchg
leave
xchg
orl
mov
cmp
sub
cli
jne
in
test
jmp
aad
fldcw
jo
inc
add
addb
adc
xor
divl
subb
add
cmc
je
xchg
cli
and
adc
cmpsl
pop
loope
incb
push
push
or
data16
call
dec
divl
mov
out
sti
imul
pusha
sbb
sub
adc
jbe
rcrl
add
or
push
mov
aam
cs
push
clc
sub
xchg
xor
mov
lret
add
pop
mov
push
dec
in
mov
ja
stc
pop
insl
test
push
xor
or
or
iret
cmpsb
mov
push
lock
mov
push
mov
addl
pop
cwtl
and
imul
cmp
repz
jle
and
xchg
adc
in
and
iret
cmpb
inc
fiadds
repz
mov
add
jns
pop
movsl
test
and
adc
sti
cmpsl
lock
sbb
icebp
add
call
adc
clc
adcb
rorb
fisubrs
je
adc
adcl
inc
cmp
mov
inc
cmpsl
push
or
push
lret
mov
push
inc
push
es
pop
and
ror
xchg
push
out
test
out
inc
rorl
lds
jo
lret
mov
inc
shlb
adc
mov
add
inc
add
pop
mov
push
adc
test
imul
mov
sbb
into
test
jo
push
lock
ret
mov
sbb
jne
push
test
inc
mov
sarb
or
adc
jmp
adc
out
push
inc
cmpsl
push
fwait
push
cli
mov
lock
mov
les
pop
sub
popa
mov
cmc
xorb
faddl
xchg
add
lods
dec
adc
push
adc
lods
or
sub
sbb
add
cli
dec
jecxz
add
lock
xchg
cwtl
add
xchg
inc
sbb
xchg
add
les
push
pop
pop
ja
push
mov
push
add
dec
dec
repnz
add
mov
aaa
int
and
mov
shll
jp
xchg
pop
in
or
add
rolb
mov
push
sub
sub
sarb
jp
pop
xchg
or
lret
sub
cs
mov
mov
movsl
push
orb
mov
mull
add
xchg
pop
movsl
popf
adc
int
sub
jne
cmp
or
adc
or
sub
and
aaa
lea
inc
jecxz
loopne
push
pusha
and
and
mov
inc
pusha
inc
loope
mov
sti
fnstcw
movsl
adc
adc
or
enter
mov
adc
add
add
pop
xor
and
xor
loop
jae
dec
das
mov
icebp
nop
or
push
inc
call
push
and
scas
xchg
decb
das
mov
jo
pop
dec
adc
popf
and
shl
cmp
push
outsb
and
std
adc
ret
push
sub
orb
dec
jge
or
icebp
outsb
sbb
je
add
test
mov
push
fisttps
addl
fcmovnb
adc
repz
rorb
mov
push
mov
sub
xor
add
add
dec
add
inc
lods
mov
add
cmp
adc
push
mov
mov
add
mov
sahf
mov
and
mov
mov
adc
rorl
inc
sahf
addb
dec
mov
stos
xor
xor
jle
arpl
xor
mov
cmpb
sub
gs
call
adc
lea
in
nop
inc
jae
push
aaa
dec
sub
fisubrs
clc
or
movsb
xchg
push
inc
and
outsb
enter
cmp
rclb
aas
xchg
xchg
add
stos
inc
dec
add
xchg
hlt
mov
and
lret
addb
test
cltd
fsub
rcll
out
test
inc
jb
xor
or
or
sahf
fistpl
mov
and
add
incl
sub
je
or
imul
and
loop
js
pusha
loopne
sarb
movsl
out
or
pop
rol
rolb
add
push
cmp
fidivrl
pushf
dec
adc
sub
inc
sbb
add
stos
call
push
cmp
cmc
in
cli
adc
pop
in
sbb
popa
imul
clc
mov
fwait
stos
xchg
mov
cmpsl
mov
ret
adcb
push
cli
test
adc
fimull
ret
pop
cmp
cwtl
inc
xor
popf
xor
add
stc
push
pushf
adc
or
or
enter
outsb
prefetcht1
add
adc
outsb
push
imull
add
fwait
xor
test
fisttpl
add
inc
sbb
sub
sbb
movsb
aaa
or
ja
add
pushf
pop
lcall
add
jg
inc
popf
xchg
mov
cmp
and
sbb
pop
in
push
mov
mov
xchg
and
orl
push
push
lods
popa
push
sub
mov
inc
adc
or
scas
fdivrl
imul
outsb
js
inc
das
nop
push
mov
cmp
and
add
mov
lcall
nop
xor
xchg
sub
inc
cmp
lret
cwtl
jae
sub
and
jle
sbb
cltd
xchg
outsb
mov
jae
hlt
bound
push
or
adc
mov
nop
sub
in
incl
push
xor
adc
jge
popa
adc
add
shlb
idivl
test
push
inc
and
in
jo
pusha
pop
mov
pusha
sar
fstpt
es
sbb
inc
das
sahf
enter
pop
inc
dec
fildl
rol
fldenv
ret
jo
arpl
pop
cmp
sbb
mov
movsb
and
jo
inc
gs
mov
and
cld
pop
push
sub
or
shrb
and
push
fstpl
mov
out
xchg
mov
pop
sub
sub
insl
insl
add
daa
imul
je
mov
hlt
or
hlt
pop
or
inc
xor
push
mov
popf
fs
add
test
add
flds
adc
enter
sub
push
push
sbb
sahf
nop
push
or
addb
adc
add
ret
mov
push
add
jo
inc
inc
pop
add
inc
or
lea
add
mov
push
sbb
xor
jbe
inc
jecxz
test
push
das
or
cmpsb
or
pop
in
cwtl
sub
cmp
pop
pop
orb
jmp
dec
inc
sub
sub
and
xchg
xchg
xlat
add
sbb
movb
loopne
jo
adc
popa
loopne
lret
pushl
adc
mov
mov
inc
or
xlat
add
adc
sbb
sbb
add
inc
aas
add
sbb
add
and
pop
mov
mov
add
je
into
fnsave
pop
sub
lret
adc
pop
enter
cmpsl
ret
xchg
insl
adc
inc
add
add
push
adc
push
ftst
xor
sbb
adc
adcl
add
or
dec
rcll
adc
sbb
mov
rcrb
fisttps
xchg
orl
fs
push
dec
lret
dec
jb
fwait
jo
pop
dec
data16
ret
xor
mov
dec
cs
mov
sbb
add
ret
dec
and
mov
and
push
dec
fcmovne
es
jge
mov
pop
test
push
jge
in
into
jnp
push
lock
push
lret
adc
sub
and
clc
add
sub
mov
das
and
dec
dec
dec
inc
inc
dec
dec
dec
push
push
daa
xor
aaa
xor
xor
xchg
add
push
lcall
xchg
xchg
test
into
out
test
int3
pushf
xchg
cli
ret
addl
or
mov
je
pop
dec
sub
sub
orb
sbb
out
mov
push
jo
push
wbinvd
ret
and
add
mov
roll
or
add
lods
dec
sub
fs
xchg
sbb
sbb
add
add
imul
or
enter
and
push
lea
pop
xchg
xchg
and
mov
lods
imul
cli
adc
inc
lds
mov
inc
inc
movb
adc
dec
stos
ljmp
lea
inc
sub
sarb
dec
arpl
mov
dec
sbb
mov
fwait
add
cmp
mov
pop
push
inc
orl
bound
xchg
or
in
mov
jnp
adc
pop
dec
loop
outsb
or
sbb
adc
pop
in
add
inc
inc
push
cmpsl
push
lret
inc
inc
xor
hlt
add
adc
dec
std
sub
fdivs
ss
and
xchg
cwtl
sarb
movsb
fwait
xor
out
jge
cmp
arpl
out
imul
ret
fcoms
mov
not
xchg
push
fldenv
and
pop
inc
push
jb
call
adc
pop
in
mov
insb
xor
push
pop
fbld
enter
daa
push
pop
jmp
and
push
jb
fidivrs
add
out
pop
cmp
test
shlb
xor
das
ss
push
or
add
inc
or
ret
add
in
push
cmpsl
mov
push
xor
push
sub
mov
pusha
es
pop
xor
sbb
adc
xchg
xchg
addl
sub
and
fbstp
addr16
and
daa
movsb
pusha
jnp
inc
mov
out
push
mov
dec
mov
std
jle
daa
out
jns
scas
jge
pop
sbbb
ds
shlb
sub
js
mov
sub
push
adc
roll
and
mov
ss
push
test
push
mov
add
inc
call
xchg
mov
add
std
rep
mov
dec
cwtl
push
jb
add
jns
pusha
xor
and
mov
push
adc
cld
insb
mov
lods
cmp
jo
addb
mov
adc
mov
test
sbb
push
popa
mov
inc
jb
fidivl
outsb
sub
xor
xchg
rorb
jne
cmp
imul
mov
sbb
lahf
sub
add
scas
mov
pop
add
lcall
jnp
loope
xchg
movsb
mov
out
jo
sbb
inc
xor
sbb
sub
cmpsb
mov
inc
data16
add
orl
mov
addb
hlt
or
push
insb
jbe
add
push
xchg
bound
ja
xor
push
mov
xor
pop
iret
mov
mov
or
je
fldz
add
cld
jns
adc
mov
pop
jo
out
push
sub
or
or
popa
push
pop
inc
add
add
inc
lea
inc
jmp
mov
movsb
mov
jo
out
push
xchg
jno
loop
xorb
ja
xor
or
adc
fildll
nop
in
adcl
int
cmpsb
andb
popf
push
lret
add
cmpsl
mov
fs
mov
cmp
or
insb
add
add
add
or
or
and
xor
add
fwait
test
jo
aaa
fistl
stos
shrb
push
shrb
pusha
fmuls
addr16
xor
pop
pop
sub
mov
xchg
adcb
dec
mov
xchg
and
jnp
xchg
cmp
and
jp
loope
shlb
test
sbb
push
mov
jle
sub
add
ds
add
aaa
sbb
or
inc
mov
mov
subb
add
jg
xor
push
xor
sub
movsl
mov
pop
lock
aam
movl
sbb
xor
adc
sarl
jle
popf
data16
rolb
inc
shll
xor
ret
pop
jl
inc
push
push
rcrl
in
rorl
pop
movl
dec
mov
add
and
sar
cmp
pop
je
pop
ss
push
sahf
sub
pop
cmp
dec
lock
aas
sti
xchg
add
mov
adc
out
fdivrs
sbb
mov
xchg
adc
lahf
sub
stos
xchg
lret
jns
cmp
xor
xchg
shl
loop
test
outsb
ds
out
dec
dec
subl
rclb
mov
mov
movsb
divl
repnz
pop
lods
push
sbb
repnz
or
cmc
mov
mov
dec
mov
sets
ds
in
mov
and
test
test
sbb
scas
inc
push
jo
lods
xlat
lods
pop
add
cmp
jo
mov
inc
and
int3
xor
xchg
xor
adc
loopne
inc
push
cmpsl
rorl
imul
pop
sub
imul
sub
inc
cs
adc
add
leave
test
add
cmp
jle
sbbb
loope
add
sub
add
push
xchg
int3
aaa
push
aad
in
cmpsb
adc
shll
and
push
sahf
and
lds
xchg
and
and
push
loope
fs
xor
xor
adc
sbb
sahf
add
xchg
nop
pop
push
daa
mov
pop
xor
filds
and
push
ret
add
dec
inc
movb
push
and
bound
sub
ficompl
or
pop
push
mov
sub
sbb
cmp
adc
jns
xor
mull
jo
enter
mov
test
movb
push
xor
add
and
mov
dec
adc
or
and
in
je
call
lret
outsl
pop
sub
movsb
push
and
add
mov
lea
xor
cmp
push
adc
mov
add
stos
jne
jle
cmp
out
mov
pop
or
pop
cmc
dec
adc
add
sbb
pop
sahf
or
pop
add
and
ja
aas
fstl
inc
jns
in
mov
stos
in
in
lock
inc
inc
dec
scas
es
nop
push
inc
fsubl
sbb
nop
mov
xchg
inc
sub
and
lret
cmpsl
adc
push
fisubs
cld
adc
sub
cmpsb
push
or
mov
xchg
xor
jns
sbb
es
cli
dec
pop
cld
jno
xor
movl
inc
push
sbb
and
sbb
inc
inc
pop
xchg
cwtl
cld
dec
cmp
sub
adc
jp
xchg
sub
das
or
cld
mov
fs
mov
test
aaa
mov
dec
daa
or
ret
icebp
lret
cmp
push
insb
pop
push
dec
idiv
daa
sub
scas
push
and
jmp
sub
mov
lahf
cmp
jle
adcb
dec
push
jne
push
pop
xor
sub
daa
mov
push
or
ret
jae
sub
push
sbb
rcrb
rcl
inc
and
and
and
inc
xor
add
mov
push
push
and
in
mov
and
xor
add
das
mov
lea
cmp
pop
pop
jl
sbb
mov
mov
sub
loopne
ss
jg
pop
sub
pop
add
mov
add
sbb
test
xor
or
test
cmp
or
idivl
fcmovbe
icebp
pop
dec
mov
lds
add
inc
fdivl
cwtl
sub
mov
js
jl
xor
xor
mov
xchg
sbb
inc
push
ret
test
sbb
ljmp
sbb
cmp
dec
mov
jno
or
rol
mov
adc
inc
xchg
push
pop
cmp
je
sub
cmp
rcrb
and
sub
sbb
popa
pop
idiv
stc
jb
jb
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
or
xlat
fdivr
xchg
jmp
fisubs
rclb
lock
add
push
popf
mov
cmp
cmp
xchg
lock
cli
into
ja
xlat
push
mov
push
cmpb
in
mov
or
jl
je
adc
mov
scas
inc
sub
mov
lahf
cmpb
pop
sbb
or
add
and
addr16
cmp
xchg
cmc
push
inc
cmp
or
cmp
cmp
add
cwtl
adc
rolb
add
dec
or
xor
aas
out
or
out
mov
aad
cmp
mov
fs
pop
andl
mov
mov
mov
out
mov
push
cmc
jae
pop
or
enter
xor
mov
ret
inc
push
and
nop
sbb
adc
or
and
adc
pop
nop
xchg
sbb
cmp
inc
jmp
fsubr
es
mov
mov
push
push
sbb
sub
pop
pop
mov
or
bound
mov
or
mov
xlat
loop
add
xor
enter
dec
popa
stos
xor
outsb
pusha
iret
xchg
adc
xchg
xchg
adc
pop
mov
int
dec
ja
push
push
cmp
or
inc
aas
xor
or
andb
ret
imul
xor
fnstcw
and
jns
xchg
pop
push
inc
lock
mov
cltd
test
sbb
add
mov
dec
ret
lock
sub
inc
cmp
mov
loope
inc
sbb
xlat
push
jl
adc
aas
xor
sub
sub
or
out
aas
and
jb
and
dec
mov
pop
ret
mov
jecxz
adc
into
test
mov
enter
int3
in
mov
push
cs
es
dec
je
call
pop
add
inc
outsb
outsl
jne
push
sub
jnp
inc
cmp
outsb
aas
xlat
push
aas
dec
adc
push
js
push
in
dec
jne
rcll
mov
sbb
xlat
sbb
iret
jbe
push
sbb
lcall
cmp
sbb
mov
imul
daa
add
pusha
adc
mov
ret
pop
inc
inc
daa
negb
out
add
or
mov
mov
leave
mov
shr
ds
test
jo
pop
push
push
mov
out
pusha
dec
xor
mov
push
push
orb
lahf
cwtl
adc
mov
or
jb
mov
das
cmpsl
popa
pop
lea
scas
ret
add
xor
sbb
and
push
inc
dec
movsb
lret
sbb
dec
and
repnz
and
push
xor
les
dec
movsb
pop
dec
push
inc
clc
push
add
add
push
xchg
jle
jo
ljmp
xchg
jle
pop
push
lea
push
mov
sarl
lea
scas
arpl
seto
enter
rolb
and
ret
and
sbb
sub
or
sbb
cli
cmp
mov
inc
loope
push
enter
cmpsl
data16
xor
movb
mov
jmp
xor
xor
mov
pusha
add
outsb
or
pop
push
cmp
xchg
push
test
clc
sub
fcomps
add
cmp
xchg
push
xchg
mov
hlt
icebp
sbb
xchg
inc
sbb
cmp
add
and
jecxz
movsb
mov
cmp
mov
xor
movsb
pusha
les
hlt
dec
push
ss
addb
in
pop
and
fwait
mov
mov
xchg
or
dec
inc
or
gs
cmpsb
pop
add
or
ds
add
add
adc
add
jne
inc
mov
sbb
cmp
outsb
jp
cmp
ja
adc
and
dec
sub
inc
popa
in
pushf
scas
insb
fimull
int3
ret
rol
jmp
pop
cmp
inc
shrb
test
aaa
adc
push
or
ret
insb
addr16
ss
rcr
inc
xchg
push
sub
sbb
push
aaa
fsubrl
aaa
testl
pop
mov
in
test
jae
fwait
xor
jmp
out
rcrb
fadd
test
inc
fildl
sub
test
xor
lcall
loopne
inc
or
mov
mov
jle
push
push
mov
loope
aad
enter
outsl
and
lea
jb
adc
push
xchg
mov
or
lret
sbb
sbb
ret
rol
xchg
movsl
inc
jmp
lahf
sub
fadds
add
mov
icebp
pop
lock
pop
bound
dec
loopne
int3
adc
notb
clc
sub
jae
aam
sbb
rolb
ss
test
aaa
pop
shrl
push
adc
xchg
or
mov
push
push
jne
push
ja
pop
or
cld
andb
ret
add
inc
xor
or
into
aam
sub
sbb
pop
pop
mov
jg
shlb
fs
repnz
add
pop
pop
inc
inc
inc
cli
imull
ror
insb
ret
xor
and
aaa
or
add
cmp
sbb
mov
or
cmpsb
mov
test
int
sub
mov
lret
sbb
jle
add
sarl
mov
sbb
cs
cmc
add
mov
adc
pop
xor
lret
adc
sbb
cmp
mov
mov
xchg
dec
mov
inc
and
les
sub
enter
imul
sti
push
ficoms
inc
xor
inc
imul
ja
movhps
sub
pop
add
mov
dec
test
xchg
loopne
ss
add
das
push
das
test
mov
mov
dec
pop
or
push
inc
ret
mov
stos
pop
test
addr16
cmpsl
jge
lods
ds
push
or
mov
shll
das
pop
cmp
pop
pop
pop
cmp
jbe
add
out
shlb
push
out
jnp
dec
inc
inc
pop
inc
add
add
xlat
inc
dec
push
inc
rorb
in
sbb
or
scas
or
adc
mov
jp
push
adc
or
movsb
addl
insl
cmp
imul
push
pop
xchg
or
outsl
jns
dec
xchg
push
xchg
das
push
test
les
pushf
push
adc
pop
inc
dec
pop
ja
jno
dec
add
lea
mov
and
mov
mov
pop
xchg
adc
in
movsl
add
jg
jns
cmpsb
xchg
xorb
repnz
pop
cmpsl
lcall
xor
daa
dec
insb
jne
mov
movsb
gs
test
sbb
in
inc
dec
leave
and
nop
test
adc
daa
xor
faddp
imul
push
pop
popa
inc
dec
je
and
dec
or
xchg
sahf
sub
mov
fadd
pop
insb
dec
pushf
mov
adc
shlb
in
pop
mov
icebp
push
sbb
nop
sub
mov
leave
inc
push
dec
outsb
bound
aaa
dec
xor
je
add
nop
pushf
fbld
pop
mov
mov
push
mov
jb
cld
mov
les
lock
ds
inc
fwait
add
xchg
iret
inc
fs
enter
sbb
les
adc
add
stos
pop
xor
push
hlt
es
or
dec
imul
pop
lods
addl
pop
pop
and
addr16
push
outsl
out
mov
or
cmc
pop
push
mov
cs
xchg
push
and
in
mov
lock
push
push
dec
or
movb
push
xlat
sub
mov
mov
mov
mov
insl
sub
in
cmp
and
lock
nop
add
inc
jbe
jns
adc
add
pusha
adc
mov
push
out
mov
cmp
mov
in
enter
loope
and
push
sbb
inc
sbb
add
mov
nop
popa
or
pop
in
insb
dec
aad
clc
xlat
cld
subb
xor
cmpsl
xor
jb
push
xchg
test
enter
inc
fwait
pop
mov
int3
xlat
xor
pop
inc
cmp
pop
inc
push
push
iret
fs
inc
cmp
mov
cwtl
pushf
mov
adc
ficompl
or
outsl
add
xlat
or
and
and
test
insl
imul
and
pop
and
in
test
fs
arpl
mov
or
aam
cmc
mov
in
and
ficoml
or
jmp
fadds
pop
out
sbb
mov
xor
jne
out
out
mov
lahf
adc
clc
push
push
dec
inc
pushf
test
ret
shlb
sbb
xchg
or
mov
mov
mov
das
xlat
sbb
jns
test
and
push
xor
and
jne
loopne
push
xlat
mov
lahf
mov
jb
push
cmp
mov
js
pop
pop
pop
mov
loope
dec
dec
rcll
lahf
sbb
js
cmp
push
shl
inc
mov
dec
in
mov
and
xchg
js
inc
cmp
lahf
data16
pusha
push
fs
loopne
push
clc
test
mov
test
fists
push
add
out
cwtl
scas
cwtl
fidivs
jle
jne
push
adc
jge
idivl
fcompl
popa
push
js
arpl
sub
or
mov
jae
push
cmpsl
cmp
addr16
mov
inc
pusha
jl
push
nop
push
pop
pusha
mov
xor
enter
add
dec
pop
and
adc
sub
jg
push
stos
push
lcall
or
and
decl
add
mov
cmp
add
xor
test
hlt
push
add
jae
ljmp
jne
pusha
icebp
lahf
mov
push
scas
cmp
cs
cmp
sbb
and
std
push
cltd
or
push
les
push
imul
lret
lret
les
dec
push
push
fisttpll
aam
imul
enter
or
push
sbb
adc
pop
lea
adc
xor
or
aam
xchg
fsub
adc
push
cmpsl
cmp
adc
movsl
mov
jbe
test
mov
pop
lock
lret
push
cmovs
sbb
sub
lock
cmpsb
movsb
mov
dec
fsubrs
inc
mov
pop
lahf
inc
or
test
jo
shlb
pushf
adc
or
add
xchg
adc
pop
mov
lea
imul
sarl
pop
adc
add
cld
push
or
xor
mov
daa
add
pusha
addr16
out
cmp
aad
sub
mov
outsl
frstor
cmp
out
add
adc
and
in
add
js
cmp
pusha
jno
enter
adcl
mov
pandn
enter
push
inc
jo
pop
mov
push
pop
fld
movsb
nop
inc
sbb
je
test
sub
fisttpll
stc
roll
adc
stos
mov
cmp
sbb
and
push
or
cmpsl
cmpl
xorb
fs
sub
mov
es
aas
outsl
divb
xor
fildl
lret
adc
cmp
popa
das
test
jo
sub
mov
mov
pop
inc
cmpsl
inc
xor
arpl
shrb
test
or
out
dec
push
and
add
push
adc
add
xchg
or
xchg
lret
add
cmp
stc
enter
fstl
fwait
int
mov
xchg
mov
and
xor
and
xchg
sub
loop
mov
popa
xchg
mov
movsl
jo
dec
push
xor
mov
xchg
fsubs
mov
cltd
nop
gs
adc
push
nop
cmp
sub
out
hlt
lock
aaa
or
gs
dec
enter
push
push
jo
or
mov
add
stc
movsb
jg
push
mov
popa
movsl
mov
xlat
jecxz
addr16
or
jge
mov
add
and
fldl
lret
or
mov
sub
movb
inc
outsl
sbb
jbe
aam
jo
int
jg
sbbb
cmovl
and
xor
mov
int
inc
jno
inc
sub
mov
in
cmpb
aas
loopne
popa
out
push
or
lahf
in
fiadds
mov
cs
pop
xchg
lods
inc
loope
scas
and
dec
or
call
push
loope
mov
pop
inc
pcmpeqd
mov
xchg
ret
dec
jl
or
cmp
lea
mov
xchg
dec
add
mov
pop
mov
insl
outsl
mov
outsl
add
add
dec
ror
jle
fdivs
push
sub
sub
jecxz
popa
aaa
cmpb
inc
push
dec
add
fisttpll
lahf
movl
imul
inc
or
fwait
clc
xchg
xor
pushf
sbb
and
sbb
and
add
daa
andb
or
push
sbb
lods
addr16
lcall
mov
inc
cmpsl
inc
inc
adc
add
lds
xorb
cld
dec
mov
xchg
cwtl
or
cmp
ffree
jo
int
push
ficomps
and
pop
pop
cmp
nop
dec
stos
jae
data16
sbb
or
adc
clc
movsb
nop
addb
push
xor
inc
adc
rclb
and
add
and
sti
sub
imul
adc
xor
xlat
ss
lcall
add
dec
adc
dec
setne
dec
push
ret
sub
cmp
je
cmp
and
aas
or
sbb
cmp
add
fnstcw
mov
sarb
pop
imul
add
push
loop
jb
push
inc
filds
pause
lods
repnz
imul
aam
pop
mov
cmp
or
jg
xchg
enter
push
ror
sub
clc
jmp
inc
jne
inc
mov
push
test
mov
jno
xor
pop
push
lahf
das
push
mov
pop
aad
mov
cmp
mov
jg
sbb
lahf
ret
dec
cwtd
in
iret
adc
or
lret
jno
jbe
mov
nop
xchg
or
add
and
rcrl
mov
jg
cmpb
push
cmp
push
adc
orb
push
daa
daa
inc
subb
insl
mov
inc
xor
add
je
xor
clc
xchg
enter
loopne
sbb
loopne
hlt
xchg
inc
loop
mov
repnz
in
dec
inc
add
xor
add
or
and
mov
push
mov
popf
adc
sub
and
jl
jbe
jb
xchg
imul
adc
std
sub
push
push
xchg
push
push
xchg
loopne
mov
call
aaa
jmp
neg
jmp
jne
loopne
jl
imul
adc
mov
jnp
and
insl
jbe
dec
stos
inc
scas
ljmp
push
nop
nop
pop
xor
add
pop
inc
in
mov
nop
pop
fstps
sbb
rcrl
inc
orb
cmpsl
aam
pushf
jae
cmc
mov
enter
xchg
shrl
rorl
and
das
mov
push
stos
lea
mulb
inc
repz
or
push
sub
dec
addr16
push
push
cmpl
dec
dec
jle
cli
mov
es
pop
dec
rcl
mov
lret
cmpsb
add
push
outsb
in
loopne
jae
sub
or
mov
push
mov
push
xor
jae
jmp
or
xor
dec
cmp
adc
popa
es
outsl
or
mov
aas
punpckldq
mov
pop
shrb
jnp
jl
xchg
dec
iret
mov
or
jp
in
scas
rcrl
inc
pop
subl
cli
push
jno
rcrb
sub
xor
sbb
movsb
and
and
mov
out
sbb
sub
roll
ja
or
lods
push
sbb
test
testl
inc
cmp
mov
add
dec
enter
je
js
jae
push
pop
sub
std
shrl
add
fucomip
xor
inc
add
es
pop
mov
sbb
repnz
pop
out
and
out
jmp
or
xchg
mov
add
bound
push
bound
shl
and
or
in
mov
and
rcrb
aaa
add
les
sarl
movsb
push
addl
push
jl
sbb
xchg
push
popa
cmc
dec
sbb
nop
jg
mov
cmp
and
add
rorb
enter
push
je
push
jg
xchg
fcompl
or
fisubl
lods
mov
xchg
xchg
frstor
cmp
jp
and
ret
xor
add
push
or
cmpb
add
shlb
das
xor
add
or
or
adc
cmpb
rorb
out
lock
jle
add
and
pop
jnp
into
pop
cwtl
ficoms
jae
and
xchg
mov
mov
clc
sub
lret
inc
add
popfw
push
adc
mov
xor
or
push
pop
fcoml
sbb
fs
imul
xor
mov
push
dec
sti
or
dec
sub
push
enter
call
call
mov
push
into
hlt
addb
xchg
jecxz
push
xor
je
inc
in
jle
xor
js
sbb
pop
add
fprem
ljmp
je
push
arpl
mov
scas
mov
pop
insl
mov
push
or
dec
or
adcl
or
or
arpl
and
fs
mov
in
nop
leave
sub
jle
add
push
add
inc
mov
movsb
add
dec
sbbb
ss
loopne
xchg
and
jo
xchg
adc
jmp
jbe
pop
pop
and
in
lock
ja
pop
scas
or
push
pop
adc
retw
pop
push
or
sbb
push
orb
lods
movsb
mov
clc
ds
pop
movsb
xor
jnp
iret
stc
jbe
mov
loopne
lret
sub
or
or
add
sub
cs
push
jmp
and
addr16
lea
stos
scas
and
dec
pop
pop
and
inc
sbb
xor
sbb
pop
push
test
ret
mov
mov
push
lcall
xchg
adc
fwait
mov
dec
mov
pop
outsl
divb
jb
loopne
push
dec
insb
test
sub
push
daa
dec
js
in
mov
push
js
lods
in
and
push
loop,pn
push
inc
push
add
jnp
out
push
aam
add
adc
add
adc
inc
sarb
or
xor
jnp
inc
or
jl
push
rol
jo
push
fs
imul
xor
mov
pop
fadd
enter
and
mov
cmp
adc
mov
add
mov
mov
sbb
decb
or
xchg
and
lds
xchg
jbe
aaa
push
cwtl
cwtl
inc
loop
test
decl
jecxz
xor
nop
int3
inc
cmp
rorl
and
add
push
xchg
pop
dec
push
jmp
aaa
add
das
jns
and
push
push
ja
push
inc
inc
outsb
sub
pop
jnp
scas
rol
scas
mov
pusha
add
lret
push
cmp
js
out
nop
fisttpl
mov
cmpsl
lock
sbb
sbb
cltd
fistps
fcoml
nop
cmpsb
leave
cmp
pop
hlt
lock
add
mov
mov
jecxz
lret
addr16
sbb
and
lock
and
je
jb
fdivrl
pushf
or
or
mov
pop
jge
pop
test
scas
mov
or
cmp
add
jle
cmp
add
movsb
xor
push
test
or
mov
mov
adc
dec
jg
inc
or
aam
inc
mov
push
add
or
push
xorl
push
inc
xchg
fucomi
cmp
add
or
jg
dec
push
adc
ds
add
je
pop
inc
inc
lods
and
ret
xchg
nop
inc
aas
sbb
outsl
movsl
out
adc
sub
inc
and
cmp
cmp
movsl
adc
mov
les
movsl
lret
adc
add
sti
sbb
movsl
lahf
add
test
daa
test
jg
sbb
add
xorl
scas
mov
or
scas
mov
orl
rol
cmp
pop
sbb
push
sbb
mov
dec
pushf
idivb
out
push
orb
in
and
sarl
in
popa
add
adc
sub
in
mov
and
je
arpl
jg
ret
sbb
mov
push
mov
or
shrb
or
inc
imul
sbbl
ret
push
rorb
incl
fcmovb
ss
movsb
fsubs
imul
dec
iret
shll
mov
lock
test
push
mov
adc
fsubs
dec
addb
scas
sub
in
sbb
daa
in
jae
push
xorb
aaa
jp
adc
aam
cmpsl
jg
adc
mov
and
mov
repnz
lahf
xchg
daa
pop
mov
ret
data16
mov
roll
ret
lds
das
fiaddl
adc
xchg
cmpb
sti
add
mov
sbb
sbb
add
imul
or
fs
pop
cwtl
fidivs
push
leave
orl
in
test
je
outsb
ds
sti
mov
mov
pushf
out
jecxz
pushf
in
sti
cs
in
push
cwtl
cs
in
xchg
cmp
sti
fidivrs
xor
fcoms
inc
push
mov
jbe
clc
sahf
cmpsl
sub
cwtl
rol
mov
add
lahf
xchg
xchg
rcl
adc
insl
jge
sti
int
pop
xchg
aas
pop
xor
js
outsb
or
les
fmuls
xchg
add
mov
or
nop
xchg
inc
adc
pop
incl
std
insl
cmp
sub
push
cmp
ss
out
lods
xor
or
loop,pn
jnp
lods
or
sub
and
cwtl
in
rorb
add
out
test
cmp
or
and
test
cmp
sub
jmp
dec
mov
pop
add
xchg
cs
nop
mov
aad
cmp
sbb
out
insb
sbb
pop
ljmp
call
jg
pushf
xchg
mov
movl
mov
mov
xor
adc
inc
xor
mov
mov
hlt
shrb
mov
xor
pop
xor
aam
cmpsl
fs
jnp
movsl
in
aaa
pop
shlb
dec
orb
clc
nop
mov
inc
push
add
decb
dec
jae
pop
nop
pop
mov
xor
rolb
inc
rcll
ja
dec
das
fcomps
ret
mov
dec
lea
enter
push
xchg
lods
mov
fdivs
inc
mov
rcrl
notl
add
call
push
in
add
loopne
in
hlt
stos
insb
jl
enter
sbbb
mov
andb
adc
lock
sub
test
inc
and
sub
out
sbb
dec
lods
js
fs
dec
movsl
dec
loope
or
push
mov
aaa
pusha
lods
aas
jnp
and
stc
movsl
aas
test
sar
ss
sbb
mov
cmp
mov
xor
lret
adc
xor
loopw
mov
mov
xchg
pop
dec
fmuls
movl
mov
ret
aam
enter
mov
sub
orb
fcomi
jnp
xor
mov
inc
jne
pop
mov
aas
push
aas
les
add
mov
xlat
fisttps
mov
sbb
dec
mov
mov
outsl
enter
call
dec
xor
pop
dec
lock
push
rorb
dec
cmp
js
or
pop
adc
fstpl
xlat
je
iret
xchg
leave
shll
mov
xor
xchg
mov
xchg
jb
pop
out
xchg
cmp
xchg
lret
in
lahf
nop
xchg
nop
movb
clc
testb
dec
enter
xchg
adc
mov
xor
insb
ds
and
add
push
test
adc
mov
jne
mov
es
cltd
adc
repnz
push
inc
or
rol
mov
mov
inc
lods
fstpl
xorl
sbb
mov
mov
stos
cs
addl
mov
mov
nop
cmp
push
add
inc
adc
clc
and
xchg
jno
add
xlat
popa
sar
jmp
push
jne
push
sbb
sti
fistpl
pop
xor
imul
mov
loopne
lea
and
mov
sbb
dec
je
dec
jne
and
mov
xchg
push
fwait
jmp
and
pop
lock
aaa
xor
xchg
movsb
pop
or
out
push
xchg
xchg
lock
icebp
clc
addl
int
clc
sub
sub
adc
loopne
pop
push
push
mov
out
add
loope
or
add
loope
push
movsb
sub
sub
or
mov
ficompl
xchg
jmp
adc
test
xlat
xchg
lahf
pop
jg
add
jmp
jno
mov
dec
mov
push
or
jge
popf
pop
fisttps
push
push
movl
orb
subl
cmp
or
pop
xchg
out
js
mov
xchg
xor
fcompl
test
mov
xchg
push
sub
popa
and
or
sub
dec
hlt
jno
add
test
clc
sub
mov
cs
xchg
mov
jecxz
cmp
push
add
mov
jg
sub
xchg
rcrb
jle
jl
pop
xor
jg
pop
xor
test
push
xorl
add
xchg
icebp
jbe
xor
add
dec
jg
or
mov
dec
or
adc
int
data16
adc
or
dec
or
xor
enter
add
nop
cwtl
pop
inc
and
ja
dec
xchg
xchg
int
push
or
mov
stos
add
and
in
add
push
pushf
nop
xchg
add
push
add
mov
add
or
xchg
adc
add
cwtl
jns
orl
and
and
test
xor
test
inc
test
sub
mov
add
adc
mov
and
and
xchg
scas
adc
cmpsb
dec
or
lea
mov
fnstsw
inc
es
inc
popf
cmp
popf
push
add
stos
pop
rolb
pop
or
imul
mov
pop
test
roll
je
dec
or
fsubrs
inc
add
and
adc
cs
inc
sub
test
inc
and
lock
out
add
outsl
jmp
cltd
and
pop
jns
jns
nop
out
cmp
dec
inc
dec
push
jnp
shlb
lock
ret
cmpsb
push
sub
fldcw
add
or
jl
or
jle
xor
adc
xor
pop
imul
lods
jne
das
xor
jmp
subb
sub
xor
test
lods
bound
jb
lcall
mov
add
lret
inc
fwait
out
or
nop
stos
push
lock
mov
push
dec
ror
pop
insl
ds
push
mov
mov
mov
addl
xorl
fisubl
push
pop
pop
sub
roll
or
rcrl
push
aaa
mov
incl
mov
mov
jl
or
and
add
mov
shll
xchg
and
outsb
pop
pop
test
xchg
lret
and
mov
cmp
pushf
pop
loopne
push
nop
lock
push
or
loopne
cltd
sub
test
gs
jns
mov
sbb
jnp
dec
das
or
loopne
movsb
pop
push
sbb
hlt
stos
sbb
sahf
push
clc
adc
arpl
pusha
inc
add
addb
test
jo
ret
push
in
sbb
mov
push
shl
in
adc
mov
testl
fmuls
cli
mov
and
xor
sbb
jb
add
sbbl
adc
imul
fcomp
enter
ror
sbbb
orb
int3
add
lret
add
jae
dec
pop
pop
sarb
fcmovbe
popa
sub
imul
dec
jb
mov
mov
jns
cs
ljmp
test
pop
xor
int3
mov
inc
outsb
add
sub
fcom
dec
push
in
loopne
mov
sbb
inc
pop
inc
fisubrs
lock
add
xor
cmp
adc
lret
mov
cmc
movsb
adc
inc
pop
mov
andb
ja
add
pop
sbb
adc
push
dec
jmp
lods
popf
add
inc
sbb
add
insb
push
jmp
out
mov
inc
rcrl
mov
lock
push
inc
sahf
imul
ret
cmp
in
adc
adc
cmp
fldcw
or
inc
pop
in
popa
add
test
adc
xchg
or
cwtl
inc
pop
push
lods
loope
mov
sti
mov
mov
lcall
add
addb
insl
mov
movsl
daa
jge
ljmp
aas
mov
dec
or
and
ret
push
add
out
dec
sub
loopne
pop
sahf
pop
adc
xchg
mov
es
add
dec
and
xchg
mov
nop
inc
pop
leave
lock
sbb
inc
adc
add
sarb
ja
dec
ret
ret
ss
pop
mov
int
xor
daa
das
adc
mov
or
inc
cmp
test
rcrb
xchg
push
test
sub
xchg
idivl
movsl
sbb
das
sub
or
adcb
dec
pop
push
and
cmpsb
mov
js
int3
push
adc
int
and
cmpsl
cmp
dec
sub
inc
add
cmp
pop
arpl
inc
or
int
nop
add
cmc
std
inc
push
loopne
lret
lea
enter
ja
mov
inc
inc
scas
scas
mov
ja
inc
iret
push
movsb
mov
movsl
push
jnp
mov
adc
repz
cmpsb
xchg
mov
and
mov
nop
fisttps
mov
leave
addr16
pop
in
pushf
in
pop
nop
out
pop
loopne
and
loopne
in
enter
lock
mov
pusha
mov
xor
jo
aam
xchg
aam
jle
sub
pop
shlb
and
int3
push
lds
and
pop
inc
or
sbb
mov
imul
inc
test
shlb
repz
movsl
pop
sbb
add
sbb
mov
test
enter
dec
xlat
and
rol
or
stos
nop
push
sbb
lcall
les
movsb
aad
add
pusha
dec
lahf
fcomp
rorb
add
sub
push
push
mov
addl
pop
mov
and
nop
call
push
and
xchg
cmp
add
push
mov
add
hlt
hlt
lock
lock
in
and
inc
call
add
sub
inc
fildll
and
clc
loopne
and
loopne
dec
push
pop
add
push
enter
add
adc
xor
fadds
aam
and
cmp
sbb
mov
mov
popa
inc
or
jae
add
js
add
push
and
and
jb
mov
rorb
stos
sbb
test
subl
les
cmp
push
sub
outsl
je
enter
shlb
sbb
test
popf
push
pop
push
out
jno
push
fidivl
push
orb
and
fnstcw
jbe
movb
fldenv
pusha
daa
loopne
xor
inc
jecxz
rcl
push
test
popl
cmp
mov
inc
sub
cmpb
mov
call
dec
bound
lahf
addr16
xor
pop
inc
movsl
cwtl
adc
lret
js
aad
or
aaa
fisubs
push
inc
shlb
inc
mov
out
dec
pop
add
andl
jnp
dec
testl
xor
cli
xor
adc
addl
push
stc
add
outsl
or
and
add
cli
mov
xor
sbb
loope
fcomps
dec
test
popf
loope
pop
pop
orl
loope
lods
or
mov
add
dec
shll
adc
call
xlat
scas
call
daa
stos
lods
movsb
inc
sub
in
inc
and
and
sbb
je
loopne
xchg
loopne
xor
in
sub
push
outsl
jle
xchg
test
test
or
mov
mov
test
sub
mov
inc
mov
adc
mov
popa
lock
xchg
inc
cmpsb
or
and
pop
xchg
lock
push
add
imul
mov
call
add
mov
add
xor
or
mov
jns
push
xor
push
push
jge
lods
icebp
jns
leave
out
adc
scas
sbb
repnz
sbb
dec
fsubrl
dec
mov
fsubrs
mov
aam
aam
pushf
in
xor
stos
shrl
add
xchg
add
enter
xchg
sar
or
rorb
sbbl
js
hlt
pop
mov
rcr
loope
scas
aad
aaa
push
push
rolb
xor
pop
movsb
dec
les
add
pop
mov
inc
and
pop
negl
enter
mov
mov
push
loop
mov
lods
xchg
push
and
push
cmc
daa
cmc
adc
cmp
mov
xchg
sub
inc
mov
or
sub
addb
and
inc
xor
ss
nop
test
js
ja
arpl
sahf
test
mov
imul
jb
inc
lds
mov
enter
mov
lock
ljmp
mov
xchg
mov
dec
and
jg
xchg
cmpsl
mov
fildl
sahf
push
or
movsb
je
icebp
mov
jmp
mov
inc
stos
orb
sbb
sbb
inc
dec
or
loope
shll
mov
mov
enter
movsb
lahf
sbb
and
add
adc
fisubrs
or
push
ss
pop
push
subb
hlt
ss
cmp
in
dec
scas
add
repnz
add
dec
in
or
dec
mov
call
inc
mov
in
in
pushf
in
xor
cmp
lods
dec
fmull
faddl
in
add
fcoms
aam
sub
and
shl
xchg
mov
or
xor
dec
adcl
loopne
mov
or
shl
dec
and
enter
xor
mov
les
add
or
adc
rolb
sbb
aad
mov
mov
int3
popf
push
loopne
mov
cmp
jb
xor
mov
inc
and
mov
pusha
push
mov
mov
and
addl
mov
pusha
rorb
add
inc
sbb
pop
mov
adc
add
push
add
aas
and
sub
fwait
push
shlb
in
inc
xor
in
and
cli
pop
add
pop
add
lds
adc
xor
call
inc
js
mov
and
mov
add
fbld
pop
xor
ss
lods
ret
add
sbb
icebp
push
loopne
mov
cmp
mov
xor
adcl
mov
leave
fstpt
sarl
add
movsb
aam
inc
mov
mov
push
jmp
add
mov
xor
pop
pop
jmp
inc
nop
inc
lcall
and
lock
sub
inc
inc
aaa
xchg
stos
sbb
mov
in
jmp
adc
cmp
stos
rcrb
ds
mov
jne
cltd
inc
mov
dec
add
inc
sbb
cmp
scas
adc
repnz
adc
xchg
sub
fdivs
sub
aam
dec
push
nop
dec
ror
xchg
dec
push
nop
int3
enter
pop
adc
fwait
mov
and
adc
jmp
xchg
pop
and
adc
push
daa
xchg
or
mov
icebp
xchg
sbb
in
mov
sub
add
rolb
pusha
and
shlb
shrb
sub
push
add
rclb
inc
shl
ret
xchg
cmp
lock
adc
xor
xchg
jl
sbb
xor
xor
add
adcl
dec
sub
jmp
stc
dec
xchg
into
shrb
xchg
add
push
ret
mov
nop
sub
adcb
fmuls
sub
ret
dec
or
enter
fs
js
dec
fs
jl
dec
testb
movl
mov
xor
enter
xchg
fsubr
and
pusha
fcoml
mov
jb
fdivrs
xchg
jl
mov
mov
jmp
mov
jae
sbb
add
xor
rolb
ret
add
inc
test
pop
pop
jo
xchg
bound
aam
lods
mov
enter
xchg
mov
je
mov
sti
ja
adc
adc
mov
xor
clc
loop
lret
in
xchg
das
add
jl
mov
mov
xlat
jo
or
sub
subl
inc
sub
adc
add
daa
xlat
lea
push
or
xchg
lcall
add
push
or
jecxz
nop
lahf
ret
and
mov
les
add
inc
das
ret
adc
leave
jnp
les
inc
pop
sbb
in
mov
or
sbb
lock
inc
add
bound
hlt
mov
xchg
hlt
xchg
les
ret
das
in
call
das
mov
jmp
or
dec
adc
leave
mov
in
jo
add
imul
add
call
jo
dec
aas
and
pop
jne
or
cs
jmp
mov
in
pop
inc
add
fisubl
mov
fdivl
jo
clc
mov
sbb
and
fwait
xor
subl
add
or
pop
divl
mov
aaa
leave
leave
rcll
or
loop
push
add
inc
add
mov
das
add
jmp
jae
test
scas
sub
inc
test
les
popf
ret
sldt
add
inc
mov
adc
test
dec
shr
push
insb
jmp
xor
sbb
push
fcoms
cmc
and
push
push
dec
pop
test
xorl
jo
or
adc
pusha
adc
rorl
aam
push
xchg
push
aas
sbb
add
and
push
adcl
sbbl
movsb
adc
and
and
pop
add
inc
or
in
mov
or
or
icebp
cmp
xor
js
cmp
push
or
inc
mov
dec
iret
pop
popf
and
ss
rcrl
jns
add
cld
rcrb
jo
nop
pop
enter
lock
out
mov
into
rolb
sbb
shlb
lock
mov
add
jo
xchg
mov
jg
xor
iret
inc
pop
push
adc
aaa
es
push
cmpsl
incl
cmpsl
inc
or
mov
pop
out
or
xchg
and
into
in
lea
sbb
imul
pop
pop
adc
fsts
js
sub
xchg
inc
lea
adc
loopne
rorl
insb
scas
shlb
dec
xchg
mov
scas
push
outsl
mov
sbb
insb
in
xor
or
scas
inc
jecxz
xor
pop
divb
sbb
dec
dec
pop
cmpl
push
sbb
xchg
push
sbb
adc
pop
lcall
loopne
fcoml
enter
test
sub
add
pop
call
aam
adc
int3
add
sub
aas
xor
adc
add
lods
push
or
dec
push
pop
sbb
sbb
push
dec
lahf
inc
sbb
cs
ds
lock
add
daa
imul
cltd
xchg
xchg
inc
mull
push
mov
cmp
mov
subb
pushl
add
sub
adc
pop
or
mov
rolb
pop
or
jne
sbb
xor
push
xchg
lahf
in
sub
int3
das
subb
enter
rolb
dec
es
imul
adc
adc
fmuls
jge
push
sub
ret
sti
xchg
mov
inc
pop
push
and
loope
mov
sub
rcrl
clc
stc
jo
adc
pop
imul
add
pop
dec
sbb
imul
and
xlat
cmp
and
push
pop
shll
sub
insb
sbb
mov
xor
add
into
push
sbb
or
push
pop
inc
loopne
and
int3
cmp
or
adc
test
arpl
adc
adc
mov
cld
push
mov
fs
fisttpll
je
rcrl
jo
lea
xlat
gs
inc
in
sbb
mov
mov
xchg
sub
push
jge
jae
imul
adc
lahf
dec
in
pop
sbb
adc
inc
push
sbb
push
mov
sub
adc
cli
push
push
adc
in
movsl
loopne
xchg
pop
or
jne
add
mov
fwait
rcrl
adc
push
test
push
xor
les
jo
push
popa
mov
das
lea
outsb
sbb
in
add
out
aaa
movsl
cmpsl
aas
addr16
sbb
or
push
popa
add
dec
addr16
addr16
push
push
js
aad
clc
aam
insl
in
dec
mov
inc
loopne
push
adc
stos
jo
fldl
jns
repnz
enter
push
loope
sub
xorl
xor
int
adc
mov
inc
imul
xchg
add
lods
pop
daa
into
dec
push
sbb
imul
inc
inc
movsb
fisttpll
push
pop
and
dec
fcmovnbe
add
bound
dec
xor
sub
mov
jle
mov
fsubs
push
jne
mov
pop
or
jbe
mov
jg
out
mov
pop
sub
lret
mov
inc
imul
or
inc
cmp
scas
popa
test
sub
jge
lock
lea
ret
lea
pop
insl
into
mov
add
cmp
xchg
mov
add
jns
mov
mov
daa
andb
jge
imul
inc
xor
sbb
or
shr
sbb
mov
push
les
xchg
sahf
daa
in
jmp
in
jo
scas
inc
jl
lahf
and
insl
pop
dec
mov
ret
cmp
mov
test
xlat
cmp
xchg
in
and
jo
testl
fiaddl
mov
stos
or
mov
jecxz
sub
xor
jl
jbe
jns
xchg
fwait
jmp
dec
xchg
xchg
cmp
xchg
mov
push
mov
or
fsubs
push
add
or
aas
test
xchg
xor
sbb
inc
shrl
and
xor
sbb
pop
into
mov
paddq
popa
cmp
or
jne
test
rol
mov
imul
in
xchg
arpl
lea
and
stos
and
inc
and
mov
pop
jne
mov
pusha
pop
push
push
mov
mov
push
mov
push
mov
popa
pop
pop
aaa
leave
xor
mov
xchg
xorb
mov
xor
xchg
pop
or
lcall
push
out
es
sbbl
cmc
rcrb
and
into
sbb
mov
mov
adc
gs
and
dec
aad
adc
pop
cltd
mov
cmp
mov
ss
pop
aam
mul
je
jl
stos
adcb
int3
push
inc
fs
sbb
sti
add
pop
sub
pushl
orb
adc
adc
mov
mov
add
push
pushf
js
add
ss
pop
pop
nop
xchg
call
rcll
repnz
or
loopne
add
stc
adc
negl
push
repnz
or
out
addl
scas
xor
movlps
cmp
jg
adc
pusha
jg
inc
push
add
fadd
xorl
subb
and
and
dec
add
pop
loopne
add
push
sbbl
ret
or
outsb
inc
insb
rol
pop
mov
and
or
lock
ss
mov
cmpsl
test
push
mov
outsb
and
and
dec
repz
flds
push
lret
sbb
adc
out
pop
cmpb
ficomps
mov
dec
aam
pop
add
cld
inc
cmpb
cmp
xchg
hlt
cltd
imul
std
pop
adc
ja
pusha
adc
xor
add
pusha
orl
pop
aas
nop
fucom
sbb
ficomps
or
and
rol
cs
mov
lock
pop
cmp
movsl
sbb
add
jb
inc
sub
mov
sub
lods
add
dec
jno
add
mov
lds
and
pmulhw
das
popa
lods
or
push
fiadds
jns
and
mov
fistps
fs
stos
add
cmpb
sbb
sub
and
loop
loopne
cwtl
sub
push
or
mov
lahf
pop
xor
pop
int3
add
and
ds
cmp
ja
sub
ret
add
or
and
adc
int
bound
cmp
loopne
aaa
push
sbb
add
fwait
xor
sub
sbb
cmp
ljmp
xchg
mov
test
testb
pop
mov
test
pop
adc
xlat
push
flds
pop
sub
xchg
mov
vphsubbw
add
adc
mov
add
mov
xor
cmpb
xlat
dec
mov
aas
fldl
pop
insl
cmpsl
inc
aas
mov
pop
test
lcall
or
cmp
adcl
and
and
imul
shlb
out
loop
jmp
dec
int
pop
cli
xchg
nop
dec
fldl2t
arpl
adc
adc
aam
cmp
aaa
add
cmpsb
aas
jecxz
add
dec
outsl
pop
inc
insl
cmp
xor
ds
mov
dec
mov
mov
sbbb
out
xchg
mov
mov
adc
setge
icebp
insl
cmp
ja
xor
sbb
rcl
nop
mov
jecxz
in
sbb
in
mov
dec
repnz
imul
out
dec
stos
adc
mov
pop
dec
inc
ss
das
jmp
add
aas
inc
shr
and
jb
cld
cld
lock
add
addb
and
cmp
imul
add
inc
in
es
jb
push
cmp
jne
filds
jnp
jne
jne
leave
les
arpl
inc
adcl
mov
and
cmp
sub
inc
out
adc
mov
test
pop
pusha
insb
cmp
push
or
lea
mov
jo
and
and
add
stc
xor
xor
mov
imul
pop
lods
loopne
roll
dec
clc
pusha
mov
adc
in
ja
loop
adc
clc
pusha
and
inc
or
mov
dec
sub
sbb
je
mov
cmp
ret
outsl
mov
sbb
ret
das
dec
imul
xor
and
sub
rorb
into
shll
fstpt
and
lods
sub
or
inc
loopne
dec
incb
bswap
leave
leave
leave
fcmovu
or
leave
leave
sar
xchg
inc
scas
push
push
sub
dec
inc
sub
push
push
cs
stc
dec
sti
sub
push
imul
ss
frstor
dec
push
dec
pop
ss
push
xchg
fidivl
xor
xor
adcb
mov
push
or
fsts
aas
ljmp
xor
aaa
jg
jo
repnz
dec
xchg
sahf
decl
repnz
push
inc
adc
leave
add
fnsave
xor
xor
rorl
bound
filds
loopne
xor
jb
data16
or
mov
xchg
fstpl
decb
inc
push
dec
sbb
pop
sub
stos
and
sarl
xor
dec
call
and
cwtl
sbb
pop
loope
incb
pop
xor
xor
lahf
xor
xlat
xchg
imul
inc
addr16
out
imul
mov
fbstp
arpl
cmp
repnz
insl
mov
mov
jb
inc
inc
out
ret
cmp
daa
xchg
pusha
cmp
bnd
hlt
inc
inc
jg
dec
dec
sbb
push
jg
jmp
mov
cmp
pushl
and
movsl
cmp
push
icebp
add
pop
cmp
lea
inc
mov
mov
mov
lea
daa
movsb
addr16
mov
push
ja
pop
add
or
push
mov
xor
xor
xor
dec
push
dec
and
mov
dec
push
pop
xor
aaa
mov
pop
or
push
das
adc
mov
or
xlat
imul
xor
fisttps
int
or
xor
daa
iret
pop
and
push
inc
pop
xchg
push
mov
dec
in
xchg
daa
or
pop
push
in
sub
inc
dec
cmc
or
daa
cvtps2pi
push
popl
ss
mov
mov
aaa
jno
push
lds
xlat
pushw
add
outsb
popa
pop
js
or
pusha
fsubrp
aaa
addr16
adc
jb
je
mov
js
mov
push
bound
xlat
xor
in
insb
or
xor
pop
dec
out
xor
inc
inc
xchg
push
loopne
jb
ss
add
in
push
or
push
adc
dec
cmpsb
aaa
dec
aaa
lods
stos
add
cli
sbb
aaa
sub
shlb
enter
pop
dec
pop
xchg
fimuls
shl
sub
roll
pop
dec
pop
scas
loopne
addr16
dec
ss
in
cmpsl
mov
cmpsl
xor
fs
inc
ffreep
bound
mov
sub
cmpsb
pop
mov
add
xchg
jge
inc
pop
pop
lock
add
sub
dec
shll
notl
jg
pop
adc
loopne
decl
or
xchg
aaa
popa
adc
pop
iret
push
movsl
mov
lds
push
in
out
fnsave
arpl
or
fs
xchg
insb
adc
pop
and
add
ret
ss
mov
pop
lods
in
mov
dec
mov
push
sub
mov
loope
lds
push
push
pop
ja
test
xor
sub
sbb
and
xor
mov
arpl
test
cmpsl
jecxz
pop
xor
inc
inc
pop
jp
sub
cmpb
arpl
inc
or
lods
xor
pusha
addr16
mov
inc
je
data16
cmp
jnp
iret
subb
pop
mov
mov
fcomps
xchg
adc
push
pop
cltd
mov
and
ja
push
aas
adc
pop
xchg
adc
fiadds
adc
ja
xor
pop
jnp
sub
add
xor
xor
outsl
sub
mov
pop
andl
mov
pop
push
add
sbb
pop
insb
xchg
aaa
out
mov
and
push
bound
incl
xor
cs
dec
push
fidivl
push
dec
pushl
lahf
push
add
inc
push
dec
sbb
vmaxpd
mov
dec
push
mov
aaa
cmp
insb
xchg
outsl
mov
das
push
jne
cmp
popa
jb
das
cmp
sbb
add
jae
pop
daa
ja
aaa
add
cmp
test
xchg
mov
or
xor
roll
xor
mov
lea
popa
aam
jae
mov
movsl
mov
push
movsb
lahf
push
and
adc
xor
int3
mov
iret
or
outsl
arpl
daa
dec
xchg
mov
xchg
aas
bound
push
add
movq
sbb
mov
sub
xchg
xchg
xor
aas
testl
call
mov
push
push
xlat
jmp
mov
mov
mov
xchg
xor
dec
movl
cltd
fisubl
dec
iret
xor
or
xlat
xor
inc
cmpsl
and
insl
movsb
xlat
ss
pop
imul
enter
cmp
cmpsb
dec
xchg
xor
xchg
cmp
xor
push
mov
xchg
sub
jns
adc
xor
movsl
call
insl
cmpsl
cmp
inc
push
inc
pop
push
xor
insl
pop
out
push
push
dec
push
push
adc
inc
outsl
jb
filds
shl
push
xor
mov
aaa
jmp
push
mov
jg
mull
push
aaa
cmpsl
xor
add
cmp
push
sarl
xor
add
jo
test
xor
jno
inc
pop
push
push
cs
test
aam
jle
mov
cmp
pop
frstor
cmp
jg
add
add
sbbb
mov
xchg
dec
dec
cmp
xor
xchg
pop
xor
xor
push
xor
push
and
pop
xor
and
inc
push
inc
inc
dec
inc
cs
xor
push
or
xor
xor
or
mov
adc
mov
popa
aaa
jo
popa
and
addb
out
sbbb
xor
mov
sbb
divl
xor
stos
or
adc
and
jb
push
stos
cmp
frstor
outsb
insl
xor
inc
xchg
inc
scas
fs
cmp
pop
jg
mov
or
xor
and
adc
push
mov
inc
xor
testb
or
inc
das
pop
mov
inc
dec
out
ss
xchg
nop
add
scas
fs
dec
pop
aaa
aaa
xchg
mov
sbb
dec
push
pop
cmp
xchg
pop
ret
dec
sbb
iret
jg
movsl
push
mov
cmp
rol
push
or
xchg
pop
lods
sub
scas
mov
pop
leave
aam
xlat
and
pop
cmp
sbbl
adc
ja
bound
push
lds
inc
testl
pop
and
cmp
cmp
ljmp
cmp
dec
pop
xor
cmp
push
push
ror
cmp
cld
aas
insl
cmp
fisttps
push
pop
dec
cs
xor
xor
mov
inc
fisubrl
sbb
jae
jns
out
xor
jp
dec
mov
jns
push
cmp
in
inc
loop
aad
xor
rorb
jbe
inc
imul
pop
push
xor
test
lods
out
and
xchg
test
xor
add
xor
and
adc
sbb
adc
sub
inc
mov
pop
jnp
sub
mov
push
das
adc
movsl
frstor
scas
sbb
rcl
add
outsl
xor
ja
test
cmp
test
pop
cmp
xor
adc
xlat
mov
lea
ja
mov
mulb
daa
adc
inc
out
daa
lock
dec
push
push
iret
lods
add
mov
sbb
cmp
add
sub
xlat
notb
mov
push
dec
dec
inc
jg
jbe
mov
scas
imul
inc
pop
xchg
sub
mov
ss
cli
lods
in
push
aaa
xor
sub
push
xor
cmp
add
mov
pop
lds
pop
and
sub
mov
lods
pop
push
lcall
sbbl
rorb
clc
bound
scas
mov
or
pop
sbb
or
lahf
and
push
aaa
scas
fistpll
imul
ss
or
sbb
test
mov
and
lahf
loop
xor
add
lods
out
es
cmp
fcompp
loop
and
shr
inc
inc
push
mov
push
xor
pop
sbb
pop
pop
lahf
imul
sub
inc
jmp
dec
ss
daa
inc
enter
fldenv
xchg
out
divb
in
push
xchg
pop
mov
dec
popa
insb
and
or
das
dec
dec
scas
sub
add
or
dec
push
cmovnp
xor
inc
push
cmp
push
sbbb
push
xor
push
xor
push
xor
cmp
xlat
movl
mov
rcr
fistpll
cmp
push
add
cmp
inc
mov
aas
and
jb
xlat
movsb
aas
push
push
push
aas
or
data16
outsl
divb
out
daa
xor
in
cmp
dec
inc
inc
das
push
or
sbb
scas
bound
push
sub
xchg
jne
ljmp
je
or
lock
pop
add
mov
add
adc
or
dec
dec
push
dec
cmp
fisubrs
and
in
inc
mov
addr16
testl
xor
mov
xor
push
mov
jbe
dec
xor
cmp
lods
push
cmpsl
aaa
adc
rcll
daa
nop
pop
imul
nop
inc
ret
idivl
xor
xchg
imul
xor
or
outsb
or
inc
xor
inc
shll
xor
mov
xchg
nop
or
xchg
xor
xor
addr16
setle
fisttps
mov
outsb
push
test
xchg
lahf
sbb
or
sub
inc
dec
add
xor
sbb
xchg
or
test
pop
fisubl
xchg
seto
cmp
push
and
loopne
sbb
sbb
push
inc
cmp
push
adc
fildll
js
jns
xor
hlt
bound
arpl
xor
jp
cmpsl
aaa
outsl
repnz
push
sbb
adc
in
popa
insb
je
outsl
loopne
jl
sbbb
sbb
fwait
push
cltd
cltd
cwtl
sbb
xor
cmp
es
jg
xor
in
xor
cmp
pushl
jb
xor
inc
es
aaa
and
ret
and
in
jg
jg
jg
testb
jg
jg
aaa
jb
and
imul
inc
xor
adc
pop
nop
or
lea
xor
xor
push
pop
sbb
push
mov
xor
and
xor
ss
inc
pop
sbb
mov
xchg
orl
sub
fdivrs
lahf
cmp
sbb
xchg
mov
dec
les
push
xor
test
adc
push
mov
daa
pop
cmp
cmp
jbe
sbb
cmp
addr16
and
in
inc
and
push
in
push
fcompl
sbb
inc
test
ficomps
out
dec
cmpsb
and
ficoms
xor
mov
mov
in
push
xchg
pop
adc
insl
add
sbb
rorl
popf
fisttpl
xor
rclb
pop
push
or
or
mov
pop
lods
das
pop
xor
pop
in
cmp
xchg
xor
fdivs
push
pop
pop
lcall
dec
mov
mov
and
xor
push
pop
sbb
pop
insl
mov
sbb
or
push
repnz
push
cmpsl
add
push
push
inc
push
add
outsb
and
pop
fildl
cwtl
daa
dec
inc
leave
mov
out
push
dec
andb
sub
loop
pop
sub
push
dec
pusha
push
dec
sub
sbb
xor
xchg
popa
xor
cmovge
dec
dec
dec
xchg
mov
push
lods
imul
out
je
pushf
mov
pop
push
dec
jno
fcmovnb
sarb
push
xchg
aas
dec
dec
dec
cmp
sub
loopne
inc
dec
pop
xor
or
and
inc
sub
mov
fists
les
mov
sub
xor
mov
and
cmp
jp
outsl
mov
sub
hlt
fists
inc
cmp
adc
cmpsl
cmp
cmpsl
repnz
and
dec
xor
aaa
push
cmpsl
xchg
add
xor
xor
fs
jb
cmpsl
xor
or
xchg
or
imul
push
push
xor
enter
cwtl
inc
sahf
inc
imul
and
jae
pop
jnp
fbstp
imul
xor
dec
xor
add
xorl
or
bound
and
inc
es
aaa
inc
xchg
cmp
xchg
add
xor
push
inc
xor
or
cmp
cmp
imul
test
sub
sub
push
cmpsb
mov
ret
daa
mov
adc
push
jg
adcb
xchg
aad
pop
adc
mov
push
or
nop
ss
xor
mov
and
xor
in
lods
scas
pop
xlat
xlat
or
adc
adc
add
adc
xor
scas
clc
push
fwait
stos
xor
daa
xor
cmp
lahf
cmp
cmpl
inc
fcmovu
int3
scas
aaa
out
xchg
dec
jnp
pop
cmpsl
arpl
andb
cmp
mov
xor
sub
fnsetpm(287
mov
scas
pop
dec
push
jg
out
mov
ja
sub
push
enter
mov
test
inc
shll
xor
jns
rcrb
mov
pop
and
pop
outsl
stos
push
lods
dec
popa
outsb
push
dec
adc
xchg
fbld
and
pop
pop
rcrb
nop
rorb
shr
pop
data16
popa
xor
mov
sub
addr16
push
imul
lods
add
lea
cmpsl
sub
add
test
lahf
dec
inc
aaa
add
inc
test
bnd
and
sbb
sub
jmp
fiaddl
popa
xchg
fwait
dec
dec
push
das
adc
cmp
adc
add
aaa
ja
in
jb
cmp
ss
mov
ss
xor
jb
scas
xor
xor
aaa
push
xchg
sub
movsl
clc
xor
xor
es
mov
cmpsb
insl
cmp
xor
int3
xchg
rdmsr
jg
enter
xor
daa
xor
xor
bound
je
and
inc
cmc
jb
sub
or
inc
aas
call
mov
popa
mov
out
sub
dec
adc
dec
popa
lds
loopne
inc
inc
xlat
jle
lds
jp
fildll
lret
aas
mov
or
push
in
jbe
mov
sub
mov
push
xchg
push
jns
fsubrs
insl
and
push
sub
and
push
mov
es
mov
and
in
loopne
outsl
mov
sub
push
imul
xorl
xlat
cmp
lahf
sub
adc
and
push
imul
inc
xchg
mov
in
dec
pop
pushf
outsb
xor
sub
mov
fs
jnp
xor
inc
shl
jo
les
insb
call
adc
push
or
push
xor
xor
jne
sub
fildll
shlb
xchg
or
inc
sbb
pop
enter
xor
jb
pop
and
xor
pop
enter
jo
sbbl
push
cld
xor
fistps
cmp
dec
outsb
sub
xchg
addr16
inc
mov
and
sub
mov
out
es
add
das
sub
and
cmp
adc
andl
cmp
mov
push
test
add
mov
faddl
mov
sbbl
jle
in
xlat
movb
adc
jecxz
push
loop
mov
jno
adc
in
cmp
jo
cli
call
cmp
rcrb
loop
mov
dec
sbb
nop
or
cmp
xor
clc
mov
mov
cmp
cmpb
dec
inc
adc
mov
add
pop
imul
or
dec
jo
push
push
loop
xor
add
adc
jmp
jl
xchg
adc
mov
in
jns
cmp
int
punpckhwd
jne
dec
xor
aam
mov
insl
inc
std
pusha
push
adc
pop
jecxz
pop
jmp
inc
pusha
mov
and
push
pop
mov
xchg
shlb
cmp
adc
daa
or
mov
imul
add
mov
lods
lret
add
fdivrs
mov
dec
in
rorl
and
and
int3
cmp
and
xchg
enter
cmp
jne
jmp
jno
dec
inc
das
xchg
jg
mov
dec
push
in
or
les
ja
outsl
adc
or
stos
jl
xadd
loope
nop
xchg
test
dec
mov
std
push
shlb
adc
popa
shrb
inc
mov
sub
cmpsb
fdivl
scas
pop
and
or
adc
adc
or
sbb
sub
or
ret
jb
cmpsl
mov
xchg
je
icebp
xor
repz
xor
lret
jne
xor
xchg
pop
xchg
sbb
fsts
scas
mov
and
lods
inc
mov
push
add
les
add
adc
jnp
xor
mov
loopne
adcb
movsl
sbb
mov
and
add
adc
rclb
imul
xor
cmp
fnstsw
push
xor
cmp
add
xor
das
xorl
gs
lahf
adc
xchg
jecxz
mov
mov
pop
sbb
and
iret
cmp
aam
add
mov
les
adc
in
sarb
sub
and
adc
scas
cwtl
adc
ljmp
jne
cmp
dec
imulb
lock
call
dec
jle
daa
gs
into
push
int3
or
roll
por
mov
movsb
stos
in
or
into
add
mov
sti
pop
mov
jbe
push
adc
pop
or
inc
pop
jmp
adc
subl
lock
inc
les
mov
add
sbb
inc
push
dec
iret
sub
stos
mov
bound
push
insb
rolb
mov
push
nop
out
jae
insb
push
inc
add
scas
test
imul
fstpl
fwait
dec
cld
pop
movsb
roll
mov
ja
sub
in
fisttpl
xor
outsb
cs
insl
mov
adc
sbb
cs
push
daa
mov
sahf
in
adc
xor
sub
adc
gs
add
frstor
inc
out
mov
addr16
mov
or
jae
rcr
cli
decl
pop
jae
adc
or
xchg
rorb
and
xchg
fs
push
cmp
aas
test
sub
sbb
jno
stos
xchg
dec
mov
fisttps
push
sub
mov
pop
test
push
xchg
add
stos
fcmovnu
js
adc
pop
sub
mov
daa
in
inc
inc
cmp
add
je
add
fisttpll
orb
push
ret
repnz
mov
rcll
loope
adc
jno
lahf
int3
popf
pop
mov
leave
pop
sbb
gs
xor
fs
add
adc
add
xchg
or
jge
jmp
inc
or
add
ss
and
mov
pusha
and
sti
mov
es
fwait
add
cmp
add
ja
mov
xor
dec
xor
xlat
jmp
inc
dec
cs
test
xchg
adc
pop
inc
sub
adc
or
orl
cmpsl
leave
or
imul
shlb
jecxz
mov
jl,pt
pop
inc
ss
cwtl
call
pop
mov
mov
clc
jge
sub
bound
push
adc
lock
xchg
inc
dec
xchg
lods
fwait
dec
imul
adc
sub
inc
push
repnz
push
dec
dec
dec
and
jns
push
inc
inc
inc
dec
push
cmp
push
dec
inc
push
shll
or
dec
lock
dec
xor
rdpmc
cld
repnz
mov
fdivrl
jb
enter
adc
sbb
and
xor
int3
mov
push
mov
stc
fcoms
dec
inc
push
inc
push
lods
and
xchg
push
pop
ja
and
cmp
inc
pop
push
inc
push
xor
pop
repnz
inc
push
dec
dec
push
nop
push
sbb
pop
neg
in
dec
or
or
aaa
cmp
pop
nop
into
xchg
stos
dec
or
push
cmp
je
and
mov
fwait
mov
add
sbb
sub
or
jo
int
lcall
add
shll
xchg
or
sub
add
adc
and
pop
or
add
fwait
mov
xchg
or
fnstsw
fchs
dec
pop
sbb
pop
xor
inc
xor
pop
xchg
or
andb
inc
and
xor
mov
jmp
and
jg
pop
sbb
inc
pop
add
aas
xor
es
sbb
fcomps
test
loope
xchg
jnp
or
fsubl
pop
inc
mov
push
dec
nop
int3
cmp
xchg
and
xchg
xchg
cmp
andl
cmp
test
lret
add
bound
mov
cmp
fadds
cmp
icebp
add
fwait
and
iret
xor
add
jb
xor
pop
outsl
inc
cli
jl
cwtl
stc
add
cmp
repnz
das
jge
into
or
pushf
mov
test
fwait
cmp
ja
sbb
mov
sarl
nop
xor
and
adc
mov
sbb
pop
std
cwtl
adc
stos
lds
mov
inc
sbb
je
stc
test
es
dec
insl
ja
in
outsb
sbb
lock
cmovno
test
divl
cmpsl
push
sbbb
add
xor
adc
mov
adc
pop
push
add
sbb
mov
sbb
lea
adc
nop
pop
xchg
jne
sbbl
inc
sub
ljmp
rclb
mov
jbe
test
into
loopne
or
scas
test
les
gs
lcall
fmull
inc
fsts
mov
jbe
insl
push
insb
pusha
sbb
and
pop
sub
sbb
rclb
jmp
push
int3
push
movsb
dec
cs
ret
ret
push
rcrb
xchg
dec
sub
xchg
shlb
and
enter
inc
enter
add
dec
in
shl
add
loope
insb
rep
jno
dec
sbb
in
pusha
insb
popa
jp
mov
cwtl
mov
dec
ficoms
mov
mov
mov
into
and
enter
pop
mov
push
int3
nop
dec
cmp
stos
sbb
sbb
and
push
dec
xor
daa
jp
out
rolb
in
loopne
xchg
dec
loope
inc
add
clc
push
push
add
push
dec
decb
dec
rolb
aam
outsl
xor
mov
push
inc
add
daa
les
inc
xor
negl
mov
das
les
mov
mov
mov
dec
sub
push
cmpsb
adc
test
or
or
dec
push
mov
fcoml
pop
jne
dec
mov
nop
das
dec
xchg
imulb
xchg
add
jp
fists
lock
out
push
push
mov
xor
push
adc
shll
pop
je
push
mov
cmp
addps
jb
or
adc
jb
sbb
and
sub
and
movb
push
push
movsb
dec
inc
shrl
sbb
pop
popa
lcall
xchg
adcl
mov
xchg
push
sarl
pop
pop
inc
mov
cld
mov
fwait
mov
mov
ds
inc
ficomps
jo
hlt
mov
out
psllq
aad
jl
sbb
jl,pt
sbb
imul
shrb
mov
add
add
and
sbb
jl
call
push
fsubs
sub
in
in
and
je
sbb
fidivrl
cmp
adc
and
mov
out
push
mov
adc
sub
or
dec
loopne
jecxz
dec
lods
jnp
xchg
inc
jecxz
nop
cmpsb
sbb
xor
jmp
fmull
push
sbb
rclb
outsb
xchg
xchg
mov
inc
lods
fsubl
push
in
lds
sbb
aaa
pop
jp
add
mov
dec
leave
and
and
fcomp
out
add
lods
aaa
cmp
mov
mov
das
insb
add
xchg
dec
inc
pop
xchg
dec
cs
cs
and
mov
mov
mov
js
call
add
xor
mov
mov
or
sahf
incl
insb
push
add
enter
pop
inc
jge
cmp
stos
inc
mov
cmp
ss
cwtl
mov
mov
fiaddl
sbb
outsb
pusha
pushw
aaa
inc
xchg
cmpsb
push
push
and
adc
inc
ret
hlt
push
sub
mov
mov
sbb
mov
lahf
jo
dec
mov
sub
es
pushl
xor
sub
and
insb
add
pop
inc
nop
push
jl
sti
push
mov
inc
and
pop
cmc
and
push
insb
test
scas
mov
mov
pop
adc
lods
popf
cmp
push
imul
mov
sbb
fcomps
jae
xchg
xchg
xor
sbb
cs
sbb
lock
sbb
outsl
mov
popa
pusha
cld
and
mov
inc
scas
cmp
or
lods
and
add
xor
add
mov
sub
push
add
sbb
fld
inc
jge
movsl
mov
in
mov
xor
daa
lcall
xchg
cmp
lahf
in
cmp
dec
dec
mul
push
or
xor
mov
testb
dec
adc
and
inc
scas
subb
xlat
lcall
lcall
and
imul
and
cmp
dec
int
pop
movb
push
cmp
orb
movsb
push
adc
xor
mov
daa
and
hlt
adc
jge
cltd
insl
add
arpl
dec
add
mov
sub
cmp
pop
insl
popa
xchg
sub
xchg
les
lret
adcb
xor
sbb
mov
mov
push
rol
add
jno
dec
push
out
or
mov
daa
jg
rorb
les
lea
fwait
andb
mov
dec
jmp
aaa
cmp
cltd
inc
mov
pop
mov
push
enter
mov
add
andb
push
clc
cs
jp
insl
leave
dec
inc
cmovns
mov
cmp
add
lahf
pop
pop
xor
cli
pop
xchg
jo
jnp,pn
mov
pop
shll
inc
sbb
in
loopne
sub
sub
cmpl
call
or
adc
lcall
add
inc
mov
dec
sbb
jnp
ret
das
push
lods
les
rorb
aaa
jb
dec
das
sbb
xor
shrb
movsb
clc
rclb
fstpt
jne
or
jecxz
fs
and
mov
mov
add
jne
out
add
mov
or
sub
or
shlb
sbb
orl
lds
jle
jne
sbb
outsb
movsl
insb
sub
loop
push
push
cmp
mov
outsb
adc
out
ss
mov
mov
or
adc
mov
dec
pop
aas
sbb
mov
pop
mov
aaa
lahf
insl
nop
adc
add
stc
dec
cmp
dec
cmp
mov
test
jbe
xchg
mov
push
jno
imul
xlat
pop
ljmp
dec
cmp
xchg
cld
arpl
jbe
mov
pusha
inc
adc
je
aad
xchg
or
sbb
je
push
das
sub
addl
pop
dec
cmp
in
adc
or
mov
push
popf
test
xchg
adc
xor
outsl
pop
arpl
mov
jo
or
mov
cmp
push
or
daa
hlt
fcmovb
adc
mov
pusha
mov
mov
mov
stos
sub
sub
insl
push
test
nop
push
xlat
outsl
aam
jmp
or
sub
xor
push
pushl
sbb
jecxz
add
insb
aas
cmp
jmp
inc
mov
test
or
push
rcrb
lods
or
and
adcb
fcomps
and
add
xchg
sahf
adc
pop
xchg
adc
add
xchg
mov
outsl
bound
sub
cmp
pop
and
push
push
add
jne
arpl
pop
enter
push
addr16
fcomps
repnz
out
inc
sbb
inc
gs
and
imul
ja
cwtl
add
mov
roll
mov
nop
push
pop
test
inc
lods
push
or
ret
jb
sar
sub
ja
jbe
mov
dec
inc
scas
rolb
fadd
out
sbb
push
push
add
push
add
dec
push
incb
xor
inc
orl
lret
push
icebp
xor
dec
shlb
push
das
pop
sub
and
mov
pop
sub
mov
mov
std
or
imul
es
out
daa
orb
cmpsl
or
pop
ret
pop
addb
lock
xor
pusha
xlat
push
pop
push
add
mov
adcb
xchg
push
add
xor
pop
in
shll
fmuls
nop
cmpsl
orl
es
add
mov
and
movb
jb
sbb
movsb
stc
fists
dec
jo
js
shll
rolb
xchg
shll
jle
inc
test
and
push
sub
mov
ja
add
bsf
lds
pop
xor
inc
inc
or
mov
loopne
gs
enter
xor
xor
pop
test
bound
fnsave
jl
jne
in
loopne
shll
sbb
shrb
js
dec
xchg
jne
push
sbb
or
xchg
and
iret
popa
add
clc
add
mov
inc
or
imul
pop
cmp
and
test
imul
ret
and
out
adcl
pop
andl
les
mov
out
lock
mov
xchg
dec
enter
push
repz
test
and
fstpt
adc
shl
cs
icebp
jnp
sbb
dec
cmp
push
pop
loop
or
xor
mov
repz
mov
cld
adc
xor
xor
divl
fs
cltd
aas
pop
popa
lds
fs
shlb
and
add
mov
cmp
insb
orl
pop
hlt
jg
das
and
mov
flds
movntps
or
jne
clc
loope
lea
or
in
imul
or
loope
inc
cmpsb
adc
dec
rolb
scas
lods
and
movsl
add
nop
mov
rcr
add
mov
aad
pusha
mov
cmpsb
dec
add
push
sbb
cmp
and
jo
mov
addr16
cmp
pop
push
jnp
pop
push
xlat
push
loope
push
or
add
dec
add
jecxz
shll
pop
imul
out
and
mov
les
lea
pop
and
push
pop
xor
mov
jecxz
mov
xlat
xchg
shll
enter
cmp
jmp
out
add
dec
and
sahf
xchg
dec
or
mov
dec
and
add
mov
or
js
repz
imul
mov
and
in
or
cmpsl
mov
imul
mov
sbb
jg
mov
mov
jo
push
jle
call
loop
loopne
and
aad
xlat
push
pusha
rolb
call
in
les
push
fiadds
shr
pop
outsl
ret
jp
fs
or
push
pusha
sub
out
in
and
dec
int
les
push
out
and
dec
jl
pop
sbb
rorb
les
rorl
add
xor
sbb
fcom
arpl
out
lea
iret
adc
sub
shlb
data16
lret
cmp
fadds
mov
sub
shrb
sub
or
and
inc
sbb
cmp
cwtl
aas
nop
push
in
adc
xor
sbb
dec
add
jb
out
das
sbb
into
out
shr
add
ja
and
add
dec
xor
and
push
add
negb
mov
add
sub
xchg
inc
jb
mov
cld
les
in
les
popa
rol
pop
adc
push
mov
inc
push
ret
enter
mov
rol
xchg
outsl
lods
pop
shlb
sysenter
push
shlb
push
stos
xor
sub
addr16
orl
cs
cmp
inc
dec
or
insb
loopne
dec
addr16
cmp
gs
sub
add
mov
inc
sub
popa
enter
add
addr16
add
data16
sub
xchg
data16
inc
dec
xorl
rcll
in
outsb
outsl
mov
or
sbb
loop
pop
xchg
fcmovnbe
das
xchg
mov
pop
shrl
out
movsb
add
in
popa
test
je
mov
dec
sbb
pop
lods
inc
nop
pop
pop
sub
push
and
scas
inc
dec
push
dec
mov
push
arpl
addr16
insl
bound
xor
je
jbe
js
jp
or
lret
das
xlat
or
adc
enter
xor
lahf
idivb
in
mov
bound
xchg
sbb
int3
bound
js
arpl
frstor
icebp
adc
shlb
ja
jl
in
aaa
clc
push
push
fsubl
mov
mov
add
mov
push
testl
push
inc
xchg
adc
sbb
xor
cmc
icebp
or
pop
push
sub
jl
jbe
out
jg
test
xor
push
imul
jnp
jg
push
movsb
push
cmp
mov
pop
or
rcrl
xchg
mov
add
pusha
jg
push
mov
mov
cmpl
lahf
add
jl
xchg
push
or
cmp
mov
xchg
outsl
rcrb
and
test
sbb
push
pop
push
shlb
pop
mov
xor
hlt
dec
or
dec
mov
dec
in
pusha
in
scas
jne
pop
pop
add
enter
mov
cltd
jae
arpl
jbe
insl
mov
pop
sbb
and
inc
jb
adc
test
xchg
inc
lds
test
add
xchg
sbb
daa
or
testl
jb
shll
scas
shll
pop
sbb
push
cmp
imul
push
inc
pop
push
or
adc
sbb
mov
insl
aaa
in
stc
es
jge
mov
xchg
mov
pop
popa
rolb
cmp
xchg
inc
imulb
je
lret
inc
sub
mov
icebp
sub
adc
and
sahf
enter
lea
in
popf
or
lret
xchg
add
push
inc
out
dec
push
adcl
fidivrl
aas
into
mov
jno
xor
jle
mov
gs
out
push
movsb
gs
xorl
push
mov
mov
push
pop
jb
adc
lods
lahf
push
inc
dec
imul
push
pop
push
or
ss
pop
push
fmuls
mov
test
hlt
imul
cmp
cmp
inc
push
iret
sub
pop
pop
cmpb
dec
orl
adcl
sbb
push
dec
jl
mov
dec
or
bound
sub
mov
xor
xchg
cmp
in
aaa
and
inc
mov
push
adc
push
cld
ret
dec
pusha
ret
mov
mov
enter
mov
hlt
je
mov
pop
or
popf
xlat
sbb
in
in
sbbb
cmp
mov
pop
imul
mov
push
call
ds
xor
xor
test
inc
cs
and
mov
outsb
ret
adc
enter
or
in
test
push
add
xchg
add
pop
add
aaa
mov
xlat
addr16
and
insb
insl
dec
cmp
into
adc
in
push
cwtl
mov
insb
popl
shlb
jmp
loope
mov
inc
sbb
xor
ret
mov
sub
loopne
sbb
mov
pop
cwtl
adc
cmp
insb
out
insl
inc
les
sub
ja
ds
insl
fsubs
sarl
cmp
scas
pop
sbb
push
das
xor
add
pop
xor
mov
ja
or
in
add
sbb
mov
adcl
mov
xchg
nop
pusha
dec
jno
das
mov
and
cmp
addb
adc
loop
movsl
addr16
outsb
cwtl
mov
xchg
pop
in
adc
mov
jmp
imul
sbb
sbb
push
push
and
push
lock
add
push
sahf
in
shrl
cmp
and
repz
dec
add
fdivs
dec
cwtl
loopne
mov
dec
jne
push
and
adc
sbb
lock
jae
or
mov
shll
jo
lods
mov
pop
add
inc
push
sbb
test
jnp
jge
jl
adc
shll
push
sbb
add
lds
adc
and
cld
xor
or
in
adc
loopne
mov
clc
sub
add
and
and
jno
xchg
pop
outsl
push
dec
sbb
pushf
nop
int
jg
jg
jg
or
dec
cmp
xor
push
aas
pop
sub
inc
jo
incl
xchg
js
adc
mov
enter
les
rorl
jae
filds
and
mov
add
lret
dec
xor
cmp
aaa
cmp
jae
mov
fwait
clc
mov
pop
or
or
pop
sbb
clc
xor
outsb
rorl
sub
dec
mov
adc
xchg
push
rorl
fnstcw
add
xchg
je
push
inc
pusha
inc
insb
mov
xchg
xor
fscale
adc
lods
loopne
aaa
scas
addl
pop
sbb
adc
push
call
insl
xlat
js
mov
xchg
call
stos
ljmp
xchg
mov
pusha
jne
xlat
insb
sti
pushf
sub
add
and
adc
push
stos
sub
or
pop
cmp
mov
cmp
loopne
in
call
fs
inc
and
push
cmp
addb
xor
or
and
movl
add
test
sub
outsb
xchg
pusha
in
sub
lcall
and
icebp
mov
jbe
imul
loope
adc
jmp
cmp
dec
jbe
aaa
xor
dec
lea
je
pusha
sahf
mov
gs
test
mov
and
pop
inc
jbe
ret
xor
insl
lea
lret
xchg
jbe
push
jecxz
pop
test
idiv
jae
push
sub
xlat
pop
or
imull
popf
mov
push
xor
cwtl
cli
add
jp
pop
bound
inc
push
and
mov
and
xor
sbb
dec
mov
jle
lea
xchg
jl
mov
xchg
or
push
mov
or
adcb
sbb
ja
inc
cmp
and
gs
and
arpl
xchg
jbe
inc
outsb
inc
or
pushf
andb
out
and
ss
jns
and
mov
lea
movb
xchg
fwait
movntps
mov
test
xchg
sub
fnsave
mov
push
sub
loopne
dec
outsl
cmc
je
clc
mov
sub
or
and
mov
dec
add
adc
mov
dec
mov
mov
jp
lea
leave
adc
push
inc
push
push
mov
div
or
cld
inc
pop
push
dec
push
inc
pop
inc
dec
jge
dec
cmpsb
mov
push
inc
inc
push
or
xchg
ds
dec
aad
rcrl
rolb
dec
mov
jge
ret
push
popa
test
jnp
jae
icebp
fsubs
cld
sub
add
test
adc
ss
adc
std
mov
daa
aaa
sbb
insl
push
sub
fsubr
insl
xor
or
dec
sub
dec
sbb
loopne
rcll
stos
mov
push
jbe
xor
xchg
sbb
push
and
imul
aad
mov
jmp
pop
jb
mov
mov
sub
scas
xor
mov
les
aaa
les
push
movsb
mov
dec
mov
mov
dec
push
xchg
fisubrs
xchg
xchg
jbe
mov
adcb
lods
jnp
jnp
xchg
icebp
sbb
push
or
cmpsl
cmp
arpl
dec
push
lcall
add
add
je
mov
fnsave
push
xor
xlat
sub
insl
lock
cld
jl
add
stos
js
stos
sub
inc
xor
ret
notl
xchg
mov
pushf
imul
mov
iret
jnp
shrl
jge
inc
mov
andb
pop
jbe
ljmp
mov
mov
pushl
jae
ja
sub
repz
lods
push
mov
cltd
add
and
and
xchg
lock
and
loop
add
pop
js
adc
mov
lods
iret
dec
inc
push
adc
pop
jbe
imul
or
inc
cmp
cld
rorb
in
pusha
jg
push
mov
or
js
push
xor
jo
pop
inc
jns
jb
mov
inc
cmp
jle
inc
sub
lock
jb
jl
outsl
cmp
and
jno
call
daa
lods
push
xor
mov
mov
shrb
fildll
lret
fiaddl
lock
faddp
add
cmp
inc
repnz
jg
std
roll
sub
push
inc
dec
les
stc
push
push
dec
dec
dec
inc
dec
dec
dec
cmp
pop
daa
imul
addl
or
iret
adcb
mov
lcall
loope
xor
nop
lahf
push
adc
les
subl
xchg
dec
and
xchg
fiadds
rsqrtps
dec
and
test
adcb
mov
lea
inc
in
inc
imul
rclb
xor
mov
fsubr
xchg
mov
addl
pop
and
xor
mov
cmp
iret
ja
clc
mov
push
pop
inc
xchg
test
push
push
dec
push
adc
mov
inc
push
inc
orl
cmpsl
dec
les
in
aad
rol
jle
jmp
jg
push
mov
mov
and
dec
imul
outsb
dec
and
push
sbb
lods
cltd
jo
mov
sbb
subb
ret
pop
enter
xor
inc
ja,pn
and
test
jmp
mov
sbb
fistpl
dec
mov
cmp
mov
mov
push
add
sbb
add
ja
sub
dec
mov
xor
and
ss
mov
sbb
pop
cmp
test
sbb
or
in
scas
hlt
out
sar
push
test
pop
adc
repnz
mov
sbb
jbe
dec
mov
rclb
sbb
frstor
and
fisubl
loope
inc
into
adc
cmp
loop
push
sbb
push
sarb
push
fcmove
sbb
adc
js
pop
adc
ret
nop
pop
jno
mov
and
mov
jmp
adc
adc
rcr
cwtl
sbb
inc
jbe
add
fidivrs
ret
adc
js
outsl
aad
dec
scas
in
mov
mov
sbb
xchg
faddl
mov
iret
push
rcl
dec
outsb
fdivs
mov
enter
pop
push
mov
scas
and
in
inc
dec
xchg
int
dec
leave
sub
add
mov
dec
or
dec
test
sahf
iret
les
dec
das
xchg
and
xor
addb
xchg
fmull
ret
pusha
and
lods
shrl
ficomps
pop
xor
add
sbb
cmp
or
inc
ss
mov
ja
and
xchg
jg
and
pop
add
pop
cwtl
sub
adc
xor
aaa
pop
jl
in
lods
push
cmc
lea
mov
mov
loopne
cmpsl
loopne
or
mov
mov
addl
shlb
mov
jge
adc
push
test
loopne
fnstenv
rol
inc
jmp
sbb
sbb
jb
push
es
dec
dec
lea
cs
mov
nop
mov
mov
inc
in
or
imul
push
xchg
sbb
adc
dec
jne
xor
cld
and
xchg
push
inc
mov
and
jg
add
inc
stos
push
sbb
mov
fnstenv
mov
cmpsl
inc
jne
jl
shrb
lahf
and
aad
cld
pop
cld
mov
movsb
and
imul
xor
and
mov
mov
nop
out
push
mov
sbb
add
pop
frstor
addr16
pop
jo
adc
add
add
dec
inc
and
sub
pop
and
jno
mov
ret
xchg
mov
or
arpl
sbb
loopne
orl
aas
and
mov
sub
push
adc
fsubp
or
dec
cmpsb
je
mov
dec
pop
push
ret
ret
dec
scas
add
and
xchg
pop
or
or
pop
mov
push
lods
mov
pop
and
sbb
clc
push
sub
cmp
sarl
mov
mov
nop
mov
pop
mov
and
mov
jmp
leave
adc
add
out
or
add
cmc
nop
das
cmp
pushf
inc
cmp
and
cld
mov
shlb
mov
add
mov
dec
pop
or
pop
mov
sub
in
mov
xlat
add
adc
xchg
movl
adc
push
insb
sub
jo
mov
sbb
movb
clc
mov
test
pop
clc
inc
add
nop
jne
dec
cmp
inc
nop
inc
cmp
inc
test
aad
int
inc
cmp
iret
mov
hlt
jae
cwtl
pop
push
inc
push
xor
dec
mov
lds
es
pop
mov
push
out
push
js
les
cmpsl
mov
rclb
decb
pop
dec
imul
insb
outsl
jb
xor
push
dec
pop
cmp
aad
cmp
pop
std
or
dec
add
mov
adc
rcrb
ret
xor
xchg
push
dec
pushf
pusha
xorb
mov
push
and
sub
push
add
inc
rcl
mov
cmp
jne
or
add
hlt
bound
fmuls
adc
add
jne
dec
or
cmp
add
stos
nop
inc
or
jns
add
mov
js
mov
mov
orb
sbb
xchg
cwtl
xlat
std
dec
add
stos
test
sbb
or
pushf
movsb
adc
xor
ss
sbb
mov
add
cld
dec
into
sub
sub
stos
inc
bsr
dec
dec
and
xchg
add
movsl
push
outsb
or
dec
xor
or
xchg
add
inc
cmpl
lock
xchg
es
gs
movb
test
out
mov
cld
or
dec
mov
adc
orb
inc
add
push
add
xor
cltd
inc
into
mov
loope
sbb
mov
xchg
or
sub
jo
add
sub
nop
sub
aas
pop
les
sub
add
ret
cmp
lds
sbb
leave
scas
aas
pop
sub
xchg
add
jl
shl
sbb
pop
or
das
push
addb
lds
out
sub
inc
movsl
adc
push
aam
scas
mov
add
mov
xchg
inc
out
mov
mov
sub
sub
mov
xchg
cmp
fidivs
and
mov
data16
in
push
mov
push
and
xchg
les
adc
sub
ss
jno
dec
add
sahf
inc
mov
dec
punpcklbw
dec
je
xchg
adc
add
cmpsl
sbb
nop
scas
xchg
addr16
and
xor
ficompl
push
xor
dec
lcall
adc
adc
movsl
dec
sbb
dec
or
push
or
adc
adc
push
push
adc
add
test
dec
test
iret
stos
push
jne
xchg
push
sbb
out
inc
popa
pop
xchg
pop
or
sbb
dec
and
and
mov
jl
dec
sub
push
add
xchg
jae
and
ljmp
xor
push
test
pushf
sbb
mov
imul
dec
cmp
bound
fmuls
loope
dec
addr16
pop
adc
sub
sbb
xor
adc
inc
mov
mov
inc
leave
andl
mov
pusha
lret
sbb
add
push
mov
repnz
test
cmp
pop
mov
sbb
rorb
insl
popa
fidivs
push
test
out
shr
add
test
and
cmpsl
jne
push
rorl
ja
dec
and
pop
sub
pop
pop
pop
cmp
pop
inc
add
pop
add
cmp
or
icebp
adc
mov
stos
inc
xchg
add
movsb
jmp
test
inc
cld
inc
les
cltd
add
das
mov
push
jbe
and
fwait
push
pushf
push
add
push
movsb
idivb
or
outsb
lods
xlat
aam
pusha
scas
mov
lods
or
add
cmp
je
add
movsl
jo
push
nop
inc
and
push
xchg
xchg
or
pop
fnstenv
fisubl
sbb
xchg
sub
push
xor
jecxz
imul
or
rcrl
and
lods
cmpsl
cmp
scas
add
and
pop
repnz
je
pop
repnz
pop
sbb
and
ja
xchg
scas
adc
jl
flds
rcrb
mov
mov
test
fimuls
xlat
mov
inc
dec
or
rclb
cmpsl
movsb
outsb
jno
in
mov
filds
sub
setg
xor
cmp
sbb
adc
outsl
clc
popf
out
sahf
inc
push
stos
cmpsb
aaa
mov
ds
addb
mull
or
outsb
mov
stos
fs
int
mov
mov
loopne
dec
add
fmuls
leave
mov
push
cltd
mov
xchg
cli
adc
jae
or
pop
inc
cmp
adc
sbb
sbb
in
out
je
outsl
and
push
sub
mov
push
lahf
cs
cltd
jl
adc
push
add
nop
orps
adc
cwtl
cs
inc
aad
pop
pop
outsl
inc
inc
in
push
test
push
or
xchg
sub
inc
jno
inc
inc
mov
xor
popf
sub
or
or
imul
adc
cmp
xchg
cmpb
mov
or
or
and
xor
shll
and
sub
dec
shll
xor
xor
shll
dec
dec
dec
push
shll
pop
pop
inc
inc
add
pop
jmp
or
lods
push
xlat
push
add
adc
gs
cmp
sbb
and
mov
or
sbb
sbb
and
xor
xor
or
pop
movb
or
aas
xchg
push
inc
mov
movsl
jo
sub
or
inc
and
or
mov
cltd
test
xor
cmp
mov
sub
in
mov
adc
mov
int
cmp
mov
sbb
mov
ret
push
add
adc
sbb
push
ds
popf
dec
rcl
pop
subl
jb
jmp
xchg
dec
mov
sub
shlb
add
push
fcoms
test
andb
or
daa
test
ficoml
xor
pop
ljmp
and
mov
adc
dec
inc
int3
pop
pop
dec
fwait
push
jbe
or
and
enter
dec
pop
les
movsb
jge
inc
je
inc
rol
add
adc
cmp
jge
fildl
fdivs
mov
fwait
jmp
jbe
bnd
xchg
lock
push
add
mov
xor
cmpl
inc
jg
outsb
int3
lea
adc
pop
das
adc
aaa
arpl
ret
push
pop
jb
add
push
fs
and
test
testl
adc
xchg
aad
outsb
jl
sub
jge
sti
push
mov
out
pushf
push
add
push
mov
decl
lock
mov
mov
jl
jnp
lods
xor
cmp
dec
leave
cmpb
mov
cmpb
cmp
mov
xchg
ja
jb
mov
movsb
and
sub
stc
xchg
sbbl
mov
daa
fldl
fcomps
outsb
dec
out
dec
jecxz
mov
call
enter
fcom
sub
popa
hlt
mov
xlat
stos
cs
cmpsb
test
inc
or
out
adc
cmp
jb
in
dec
ret
inc
sub
sub
add
xor
sub
jmp
ja
outsb
dec
inc
add
sub
sbb
jns
jns
imulb
jmp
cmp
in
fwait
cmpsb
or
xchg
rol
lahf
push
daa
xor
push
sbb
cs
sub
push
test
pop
lcall
out
push
mov
add
push
add
movsl
push
and
push
adc
dec
imul
add
push
test
clc
xchg
xor
mov
fucomp
ret
push
mov
sub
scas
push
add
xor
xor
daa
rorl
jmp
push
or
fcmovb
jmp
gs
jp
sub
subl
cmc
fs
nop
subb
mov
sub
inc
inc
sub
stos
scas
add
mov
movsl
or
jbe
sub
out
and
add
mov
mov
lods
fldt
push
mov
dec
pusha
inc
mov
xor
lods
sbb
xchg
push
jle
push
lods
sub
jns
movsl
ljmp
jb
insb
js
jo
inc
push
in
lods
je
xor
adc
mov
cmp
mov
or
aas
dec
xor
fmuls
xchg
in
cmp
mov
xchg
mov
lods
test
and
inc
lods
test
or
nop
fstps
push
sub
ljmp
paddsb
add
addl
cmp
xchg
dec
addr16
sub
inc
cmpsl
je
add
and
test
jns
xchg
mov
push
aaa
adc
imul
je
test
jl
xchg
lret
mov
xchg
addb
test
test
xchg
push
inc
sahf
pushf
xchg
pop
nop
sbb
shll
inc
outsl
mov
adc
cmp
push
jl
das
stos
add
inc
mov
les
insb
loopne
jg
adc
pop
mov
push
and
das
sub
mov
cmp
das
in
jbe
dec
and
mov
movsb
or
jbe,pn
and
lock
dec
and
jb
stos
les
pusha
jns
decl
cmpsl
mov
push
fdivrl
adc
mov
divb
lods
pop
inc
sbb
mov
mov
in
xor
mov
jo
adc
leave
cmpb
mov
or
mov
xor
add
sbb
mov
cwtl
and
cs
and
mov
enter
jp
mov
fcomps
mov
add
jnp
ret
pop
mov
or
jl
jae
jns
pop
jmp
cmpb
je
int
mov
call
out
popf
shlb
and
test
rorl
and
xor
scas
mov
push
mov
add
and
inc
addr16
or
push
pop
pop
push
adc
dec
jne
imul
loope
dec
data16
push
imul
roll
sub
add
icebp
sbb
mov
push
daa
loope
xor
fdivl
je
and
or
mov
pusha
sarl
xlat
mov
pop
fistpll
movsb
or
push
jl
jns
inc
sbb
mov
pop
jl
or
push
lods
in
mov
clc
mov
imul
mov
pusha
adcl
jo
xor
mov
xchg
adc
mov
inc
cmp
sub
js
and
pop
js
es
repnz
push
push
loopne
push
push
cmp
add
aas
mov
outsb
test
es
add
sub
pop
push
outsl
cmp
or
mov
lcall
fiadds
adc
mov
or
cwtl
dec
or
ljmp
push
mov
dec
jns
xchg
inc
fadd
inc
loopne
push
in
aam
pop
call
imul
flds
mull
stos
mov
cltd
int3
clc
push
xor
sqrtps
jbe
bnd
and
push
and
adc
int3
xchg
scas
push
dec
push
iret
inc
add
adc
aaa
je
bound
fbstp
cmc
sub
xor
add
test
fildll
and
stos
aaa
das
pop
aad
shrl
dec
and
lret
nop
jnp
push
mov
shrb
repz
pop
rorb
jl
add
aaa
leave
test
jle
or
cltd
dec
inc
sbb
fldl
inc
inc
add
punpckhbw
outsb
and
and
push
dec
add
dec
jb
xor
and
inc
pop
cmpsb
gs
mov
sbb
mov
mov
push
push
jae
fsub
sti
jb
pop
inc
add
fwait
ja
pop
inc
fstpt
and
idiv
add
xor
xor
mov
sbb
movsl
inc
cltd
lret
roll
add
jae
add
xorb
and
out
mov
xor
push
rcrb
pop
mov
and
push
sbb
gs
push
mov
xchg
inc
or
push
add
push
push
shlb
or
ror
cmpsl
pop
or
es
xlat
sbb
pop
xchg
sbb
mov
add
daa
rcll
testl
sub
and
sub
sbb
clts
hlt
adc
inc
fwait
nop
pop
or
adc
rolb
roll
mov
mov
jg
mov
and
pop
lods
popf
push
add
jg
adc
inc
jmp
stos
or
incl
sub
dec
push
sahf
and
fisubs
dec
add
adcb
dec
ret
pop
add
test
adcl
sarl
jmp
add
pop
sub
push
cwtl
fwait
jl
mov
and
insb
adc
out
jbe
mov
cmp
add
bound
sub
adc
cli
test
push
cmp
cmp
fldl
lock
adc
sub
xor
out
pusha
es
pusha
repz
dec
loopne
loope
clc
cmp
pop
imul
out
pop
sub
dec
or
dec
lods
mov
xchg
cmp
xor
fdivs
adc
pop
outsl
lock
cmp
sbb
ret
inc
adc
rcr
and
adc
incb
push
lret
jns
cmp
or
or
xor
inc
push
and
cmova
jae
adc
sub
or
mov
sbb
sbb
dec
and
cmp
fwait
cmpb
sbb
cltd
cmpsb
sub
and
in
or
imul
push
sbb
and
or
push
inc
adcl
add
push
adc
sbb
insb
mov
inc
adc
adc
add
mov
mov
adc
sbb
imul
imul
push
test
sub
data16
lret
adc
mov
test
push
sub
clc
xor
adc
mov
or
lea
sarb
and
aaa
in
mov
push
push
mov
and
jbe
adc
lret
mov
adc
popl
ss
sbb
addl
add
movb
mov
rcr
ja
cmpsl
pop
sbb
shlb
pop
inc
jp
mov
or
es
sub
and
gs
or
sub
dec
pushf
pop
and
jl
add
and
adc
and
or
ss
add
ret
arpl
sub
in
cmp
loop
sub
pusha
aad
add
add
sub
loope
shrb
inc
das
xchg
inc
ret
daa
lahf
xchg
add
pop
ret
xchg
ret
test
xchg
mov
pop
xchg
rdtsc
pop
mov
adc
push
push
scas
addr16
cmpl
pop
and
cli
out
mov
adc
es
pop
and
scas
add
rorb
dec
ret
adc
rolb
bound
sub
and
movsb
inc
pop
pusha
push
push
xchg
cld
sbb
les
clc
call
jl
shrb
push
in
movsb
hlt
jge
rclb
cmp
xor
rcrl
and
insb
call
outsb
add
xchg
inc
rcrl
add
in
xor
push
call
mov
jbe
mov
or
xor
pop
and
or
sub
jno
xor
inc
imul
call
mov
xchg
mov
push
popf
or
mov
cld
add
push
push
xchg
les
insl
push
dec
loope
mov
jmp
push
pop
sbb
pop
hlt
adc
pop
add
push
cmp
lds
stos
push
nop
mov
es
inc
or
fildll
and
and
add
js
jmp
das
xlat
shll
sbb
daa
or
cli
mov
sub
shrb
mov
or
aaa
xor
test
add
je
sub
pop
mov
cmp
xchg
pop
inc
add
inc
movsl
fildll
les
push
sub
hlt
cmovg
and
and
cmpsl
das
js
ja
ret
and
jb
sub
call
add
ljmp
xchg
iret
push
sub
lcall
insl
push
jns
sbb
mov
push
inc
push
loopne
dec
xor
dec
rcr
add
jo
test
sbb
mov
cmp
inc
or
dec
jmp
cmp
inc
push
xorl
leave
push
adc
shrb
and
pop
pushl
sbb
xor
mov
xor
push
push
mov
ja
push
lret
jp
sbb
movb
adc
push
dec
imul
js
fists
fstl
mov
xchg
orb
outsb
sbb
jbe
ret
dec
mov
dec
aam
dec
xchg
int3
push
push
insl
mov
push
xlat
fmulp
in
push
adc
rcrb
pop
or
xchg
xorb
jno
arpl
push
dec
out
cwtl
pop
lahf
dec
lret
sti
rol
add
insb
and
mov
fdivs
outsl
or
sbb
fadds
push
enter
add
in
std
sub
mov
mov
hlt
dec
mov
pop
xchg
fwait
sub
nop
ret
and
and
push
sub
xorb
and
xor
or
and
lock
cmp
xorb
xchg
adc
sbb
pop
ret
lret
sbbb
fildll
mov
dec
and
pop
inc
push
adc
fwait
push
pushf
int3
shl
xchg
pop
fcmovnb
daa
sahf
inc
mov
movsb
das
mov
int
mov
sar
mov
adc
das
xchg
inc
mov
sbb
scas
sarl
mov
pop
sbb
pop
int
sbb
and
leave
xor
pop
inc
or
and
fadds
add
mov
dec
xorl
push
mov
cld
cmp
ret
inc
sbb
mov
nop
mov
mov
xor
pop
add
nop
dec
xlat
pop
add
and
jle
cmp
popf
cwtl
dec
jmp
or
pop
cwtl
repnz
mov
sub
or
test
cmp
in
add
mov
add
mov
movsb
add
pop
and
cmp
pop
lcall
test
nop
neg
sub
fadds
mov
and
or
mov
dec
orl
push
dec
dec
lahf
rorl
inc
pushl
mov
sub
cmp
jle
call
addb
sbb
mov
mov
mov
mov
adc
lock
fdivrl
mov
popf
movsb
negb
sbb
push
lock
mov
xchg
imul
push
shr
popa
dec
sub
leave
in
xorl
sub
dec
clc
fucomp
addr16
jo
dec
bound
or
xchg
jne
pushf
es
sbb
arpl
add
fmuls
mov
mov
cli
inc
adc
dec
push
add
adc
xchg
scas
jo
in
test
mov
lcall
movsl
sarl
inc
popa
and
xchg
stos
test
push
and
and
mov
sub
cmpl
daa
mov
sub
mov
mov
push
adc
lret
test
test
fdivs
addr16
add
pusha
mov
sub
pop
xchg
inc
sbb
xor
and
flds
sub
mov
adc
fldenv
sub
adc
adc
les
outsl
mov
repz
outsl
and
int
outsb
mov
mov
and
jno
enter
lock
push
nop
pop
xor
cmp
push
fs
sarb
or
ja
add
sbb
loop
sti
sbbl
cmp
jne
cmp
pop
repnz
in
imul
push
add
sub
xchg
inc
lds
aam
or
in
aad
pop
in
or
fists
dec
outsl
mov
out
rcrb
sbbb
add
or
push
pop
dec
pop
mov
pop
mov
clc
cmp
pop
cwtl
sbb
or
sbb
xchg
push
push
aam
jne
xor
mov
sbb
nop
cmpsb
popa
cmp
adc
mov
and
jns
push
arpl
inc
sahf
pop
aam
and
mov
adc
daa
fbstp
pop
pop
xor
push
push
jns
push
add
push
ja
push
sub
das
push
push
inc
inc
inc
push
les
xor
dec
inc
push
inc
add
pop
bswap
xchg
mov
insl
mov
xchg
int
aad
aam
cwtl
xchg
mov
pop
push
pop
popa
cmpsb
imul
insb
adcb
pop
or
inc
cmpb
lods
daa
pop
xchg
mov
insb
mov
and
pusha
shlb
sbb
in
rolb
cltd
movsl
pop
repnz
or
adcl
in
dec
push
cmp
jmp
lock
dec
pusha
xchg
and
add
sbb
pop
adc
je
pop
lret
out
aaa
scas
push
das
jmp
outsb
cs
jne
aaa
jne
dec
jg
jmp
adc
sub
sub
sub
pop
and
test
ja
push
das
xchg
pop
sub
fidivl
inc
push
sbb
pushf
adc
or
mov
xor
inc
push
sbb
cmp
xchg
in
pop
sub
pusha
mov
xlat
pop
sub
add
mov
mov
xchg
insl
xchg
or
or
nop
nop
fs
outsl
and
inc
cmp
pop
push
mov
pusha
imul
in
sub
adc
pop
sub
jnp
sub
insl
sti
lret
movl
subb
fstps
lcall
pop
lds
pop
pop
add
mov
enter
adc
add
push
cmp
or
inc
push
popf
sub
jmp
nop
clc
rcrb
nop
dec
dec
or
mov
mov
lret
dec
jae
or
cmp
insl
pop
imul
adc
addb
clc
mov
mov
jp
lahf
or
mov
and
outsl
mov
sub
call
xchg
nop
lock
popa
cld
cmpl
adc
inc
fnsetpm(287
aaa
add
push
mov
rorl
add
dec
and
mov
adc
imul
pushf
push
out
adc
add
daa
sub
sbb
pushl
jmp
mov
lea
cmp
xor
out
push
adc
dec
int3
push
enter
scas
comiss
adc
dec
dec
movsb
or
insb
jge
cwtl
jg
nop
or
enter
inc
in
add
lcall
stos
and
shrb
mov
aam
jne
or
cli
mov
loope
pop
xchg
sahf
gs
out
pop
nop
je
add
push
sub
inc
clc
and
mov
push
or
fcmovnu
pop
push
test
outsl
mov
mov
cmp
dec
sbb
clc
inc
jnp
cs
dec
mov
xchg
clc
in
clc
inc
in
dec
in
mov
dec
enter
fdivrl
fdivrp
jmp
push
les
pop
dec
and
or
add
push
sarb
inc
bound
xchg
jmp
and
enter
jmp
inc
cld
or
inc
stos
cld
out
adc
ret
je
xchg
lods
adc
out
fbld
out
add
dec
popa
mov
pusha
jo
repz
test
scas
or
or
ja
loopne
xor
or
stos
inc
enter
add
add
push
outsl
lea
jns
and
sub
and
test
or
cmc
xor
push
xchg
in
ret
pop
or
cmpxchg
push
push
imul
adc
rcrl
clc
inc
xchg
lret
in
sub
xchg
inc
jb
jnp
hlt
call
insl
push
shll
sbb
mov
jg
loopne
pusha
or
repz
push
cmpsl
or
int3
fiadds
sub
sbb
enter
ret
cmp
pusha
xchg
push
test
mov
and
mov
xchg
icebp
fs
add
pusha
sub
fs
call
loope
je
jmp
mov
push
out
loopne
repz
call
inc
arpl
dec
inc
mov
insb
test
shl
aad
imul
push
xchg
inc
xor
in
shlb
ret
or
loopne
lds
mov
sbb
and
inc
mov
add
sbb
mov
stc
sbb
addb
out
push
fcoms
lahf
sbb
icebp
js
inc
add
mov
nop
xchg
add
or
mov
mov
mov
insw
das
sub
pop
in
xchg
inc
ja
mov
js
inc
adc
pop
icebp
sbb
mov
cmp
dec
mov
mov
cltd
cmp
jnp
adc
cmp
arpl
push
pop
lods
and
xchg
cmp
adc
js
push
in
push
dec
inc
inc
add
mov
mov
stos
adc
mov
sub
shll
imul
dec
add
pop
jne
pop
push
sub
pop
cld
or
fldt
fdivrl
aam
or
leave
and
sub
in
add
mov
movb
popf
scas
push
shr
or
sbb
pop
or
test
and
shll
pushf
insl
pop
lea
pop
or
pop
adc
lock
add
and
xor
divb
pop
jg
jo
nop
mov
fstps
xchg
adc
and
pop
andl
mov
adc
decb
xor
rol
pop
and
ja
rcl
aad
std
inc
pop
jg
mov
addb
and
fxam
pop
test
mov
mov
dec
and
fstpt
pop
mov
lea
push
xchg
clc
subb
pop
out
inc
addr16
pop
fiadds
add
test
shlb
jb
out
ds
aaa
cmovno
jmp
push
pop
bound
mov
push
or
rcll
hlt
mov
mov
iret
and
lock
adc
or
fcomip
jmp
mov
xor
lcall
call
call
add
inc
mov
sbb
inc
push
loopne
fiaddl
push
mov
cmovnp
push
sub
out
dec
dec
push
sub
scas
out
sbb
jo
mov
lcall
inc
pop
lock
xchg
adc
and
cltd
mov
sbb
rcrl
scas
je
stos
xchg
cltd
ljmp
xchg
lock
in
lods
lods
xchg
adc
enter
pop
mov
shl
adc
push
inc
mov
and
add
cltd
adc
pop
push
add
mov
mov
mov
je
or
scas
sub
sub
xor
out
dec
ficompl
mov
fstpl
ds
or
xor
sub
es
movsl
adc
mov
movsl
jmp
xor
jmp
les
sbb
xor
sbb
adc
mov
lods
shlb
lock
fidivs
popl
pop
inc
push
cs
out
inc
mov
les
inc
mov
cmpsl
rclb
jl
repnz
sub
push
in
jae
adc
shlb
ljmp
addr16
cmp
test
ja
cwtl
cmp
jg
adc
xlat
fisttpll
dec
ret
push
xchg
push
adc
add
in
xor
inc
push
xchg
aad
ljmp
lret
inc
test
js
pop
rcl
roll
dec
push
jns
ljmp
or
mov
ja
in
rcl
or
int
xor
add
test
sbb
pop
js
rcr
pop
fcomps
mov
nop
aad
pop
or
cmp
cs
daa
inc
xchg
inc
inc
dec
push
xor
movswl
cmp
jne
orl
arpl
sar
outsl
dec
testl
cmp
mov
xorb
lock
or
add
fldpi
in
pop
call
pop
inc
cld
jnp
cs
clc
cld
jnp
in
sub
mov
in
jne
dec
xchg
inc
adc
loop
or
testl
je
nop
dec
fldcw
dec
test
jnp
dec
or
iret
ret
xor
mov
adc
add
daa
xor
pusha
jmp
sbb
in
data16
mov
push
inc
pop
fdivl
test
les
fwait
dec
add
cltd
test
pop
in
das
or
adc
add
adc
mov
je
sbbb
sahf
adcl
daa
enter
cmpb
add
scas
add
sbbl
mov
test
jne
and
ror
pop
ret
or
inc
and
mov
push
lahf
outsl
xchg
and
je,pn
das
and
jmp
and
shrl
outsb
or
mov
fisttps
jmp
push
cs
or
mov
mov
pop
cmpb
lock
sub
sub
push
mov
push
pusha
int3
add
mov
in
dec
out
nop
cmp
lock
out
mov
fcompl
mov
adc
mov
movl
xchg
lahf
fldt
dec
dec
or
dec
ljmp
xchg
or
mov
and
sub
and
enter
sub
xchg
jp
jno
push
aas
mov
add
add
sbb
add
jle
hlt
jbe
mov
movsb
cmp
fistl
fisubrl
jmp
aad
dec
ds
or
dec
lods
and
jecxz
adc
rcll
or
mov
sbbl
xchg
loopne
sbb
mov
push
pop
jae
fmuls
adc
xor
inc
fimuls
iret
cmc
int3
sub
cs
shrl
mov
inc
sti
mov
mov
movl
adc
pop
dec
and
push
xabort
lahf
pop
cwtl
js
popf
roll
test
pop
inc
adc
add
adc
inc
loop
adc
and
cmpsl
dec
repnz
orl
mov
int
sub
pop
daa
mov
push
jg
or
int3
les
cmpsb
lock
ss
repnz
pushl
hlt
push
xchg
pop
xor
aaa
outsl
push
incb
testb
mov
push
mov
roll
and
pop
or
inc
repz
push
or
and
mov
cmp
sbbb
ds
adc
dec
clc
push
jne
rorb
jo
sbb
sbb
inc
add
adc
mov
idiv
add
sbb
jo
adcl
add
adcb
fdivs
clc
cmp
sub
insl
mov
scas
daa
inc
adc
clc
mulb
lds
sbb
mov
rclb
shrb
mov
adc
inc
cmp
and
push
jbe
sbb
loopne
push
movsl
pop
rcrb
or
adc
and
jg
or
movsb
aaa
or
pop
jne
mov
daa
nop
inc
in
sbb
adc
inc
cmp
xor
je
mov
jnp
dec
xlat
push
xor
out
int
je
test
cld
mov
push
sbb
push
pop
mov
jmp
sub
push
fbld
sub
mov
lret
test
in
and
loope
les
arpl
mov
inc
popa
or
ljmp
add
in
imul
adc
xchg
or
pop
in
cmp
lock
repnz
shrb
outsb
mov
adc
adc
testl
inc
div
lahf
pop
cmp
sbb
push
push
aam
jmp
pop
adc
dec
pop
aaa
testl
adc
mull
or
aad
xchg
fidivrs
dec
cmp
clc
jns
mov
mov
mov
or
add
nop
sbb
sbb
sub
sbb
adc
xor
les
inc
jbe
test
add
mov
inc
sbb
test
add
jne
mov
cltd
es
dec
dec
jbe
pop
outsb
sbb
dec
xchg
mov
popa
dec
add
jae
rcrb
mov
jno
lods
imul
and
jo
add
movsb
mov
mov
test
pop
push
nop
out
mov
cwtl
in
nop
dec
jae
fs
xchg
in
stc
sahf
inc
cs
jae
dec
mov
mov
dec
mov
jno
test
and
jl
sbbl
jl
je
repnz
inc
push
push
je
popa
jo
nop
pop
add
insb
inc
in
and
loop
stc
push
fs
pusha
mov
repnz
pop
jo
pop
pop
lcall
jae
push
and
sbbb
dec
bound
int
dec
dec
dec
or
push
pop
push
int
xor
gs
cmp
mov
xor
in
and
sub
nop
lret
sbbb
mov
inc
inc
and
and
sbbb
sbb
jb
nop
lret
sbb
adc
add
or
add
add
or
addl
jae
mov
inc
rcr
dec
clc
hlt
xchg
sbb
aaa
in
in
std
lock
in
mov
sbb
dec
jle
or
std
nop
outsl
inc
mov
dec
fsubrs
and
sbb
popl
mov
jb
std
sbb
std
add
and
or
mov
repnz
sbb
std
sbb
int3
std
push
jb
das
outsb
enter
sbb
std
xchg
add
lods
test
in
and
sbbb
add
pushf
cwtl
cwtl
xchg
or
gs
xchg
nop
nop
and
mov
in
mov
sbb
adc
add
lock
out
pushf
mov
push
jne
pop
jl
jnp
jge
mov
jb
or
and
adc
add
pushf
pop
inc
lret
sar
pop
ss
cmp
jbe
lea
mov
and
inc
jae
lods
enter
fistpl
cmp
xor
push
cs
mov
js
jnp
int3
push
push
sub
mov
xlat
jl
mov
enter
notl
cmp
and
cmpl
cmpb
or
lea
inc
adc
and
mov
sahf
dec
add
push
pop
pop
shrb
and
sub
ja
mov
pushw
push
push
in
or
pop
mov
add
mov
mov
cmp
cmp
pop
sti
cmpl
fwait
mov
cmp
aad
xor
incb
in
push
push
lods
inc
out
les
pusha
cwtl
pop
push
insl
pusha
and
out
sub
jns
cmp
ret
mov
cmpsb
dec
or
in
sbb
and
xchg
cmp
sbb
or
sub
lds
adc
inc
rcrl
repz
cmp
mov
adc
push
mov
inc
add
add
repnz
ret
rorl
pop
shlb
jg
inc
xor
loopne
inc
dec
popl
pop
fcompl
or
pop
mov
and
dec
fsubl
pop
notb
push
sub
imul
rorb
pop
jne
push
push
mov
and
pop
cmc
loopne
or
mov
lods
subl
jl
inc
push
mov
sub
pop
sbb
lods
enter
mov
cmp
add
cmp
xchg
test
in
aaa
leave
add
loopne
in
sbb
pop
pop
jge
mov
mov
clc
jmp
inc
mov
push
testl
xor
nop
xor
or
or
mov
dec
push
jg
inc
push
add
xor
popf
daa
jns
int3
aam
test
mov
lock
inc
push
lock
push
nop
jo
dec
push
dec
or
int
fildll
fxch
int3
enter
int
int3
mov
sarb
push
mov
outsb
sbb
ficomps
call
nop
dec
xor
out
mov
lods
lods
out
push
in
mov
xchg
rol
loopne
in
test
inc
mov
dec
jae
test
cwtl
enter
xchg
notl
mov
les
pushf
xor
dec
leave
pushf
mov
test
xchg
pushf
xor
mov
es
inc
data16
insl
mov
rcrb
insl
inc
xor
adc
sbb
fs
pusha
cs
sbb
pusha
push
dec
insb
pop
push
and
int
jno
push
push
in
and
fs
pop
pop
fs
cltd
pop
dec
inc
cmp
and
inc
test
dec
dec
dec
xchg
xor
mov
xor
cmp
out
xchg
add
and
nop
out
xchg
and
les
orb
sub
rcrb
jb
adc
adc
rcrb
adc
adc
push
nop
dec
cs
or
inc
inc
add
lea
mov
cmp
or
nop
subl
xor
iret
out
and
and
repnz
stos
push
pop
cmpl
mov
lea
inc
in
push
add
sub
or
pop
repnz
or
ret
je
sbb
pop
imul
mov
loopne
sahf
imul
ja
jne
rcrb
int3
mov
js
pop
or
cmp
sarb
enter
xor
pop
rorb
add
mov
outsl
mov
add
pop
mov
mov
imul
xchg
cwtl
mov
sub
cwtl
cmp
fldl
es
xchg
xchg
out
xchg
test
xor
inc
lcall
dec
lcall
pop
add
or
sbb
push
enter
push
add
cltd
nop
out
dec
test
orb
lods
and
cmp
add
dec
dec
mov
addr16
push
jo
lea
ss
test
add
jp
aaa
test
je
lea
sbb
add
es
inc
adcl
imul
and
and
sub
sbb
and
orb
nop
dec
cs
adc
sbb
add
add
mov
fdivrp
mov
pop
mov
outsb
sbb
sub
adc
adc
clc
cmp
add
pop
rcrl
pop
lock
sub
sti
sub
testb
xorb
dec
rcr
cmc
cmp
add
or
jmp
pop
outsb
xor
pop
rorl
lock
es
mov
push
dec
mov
ret
jmp
call
lods
cmpl
orb
add
es
xor
pop
adc
ja
xor
rclb
movsb
pop
inc
mov
or
push
dec
push
popf
and
fimuls
movsb
cmpb
nop
imul
mov
mov
ds
and
sbb
cli
icebp
jbe
lcall
test
test
adcl
pop
jb
je
outsb
jb
adc
jae
iret
ljmp
xor
out
push
rcrb
sbbb
nop
subl
push
jo
test
xchg
push
sub
je
or
lock
sub
fistl
data16
jo
and
dec
insb
push
sub
cmp
sbb
sbb
pusha
pop
add
cwtl
lahf
pop
sbb
imul
inc
outsb
icebp
mov
jns
lods
ret
push
xchg
arpl
sbbb
dec
dec
jno
and
inc
inc
jnp
mov
jae
jno
addr16
cmp
adc
rolb
jo
std
xchg
mov
jns
sub
and
push
inc
ds
and
xchg
sbb
jl
inc
pop
dec
adc
cmp
or
movsb
and
adc
aaa
or
or
dec
or
inc
andl
pop
nop
out
jno
and
les
mov
jae
movsl
sbb
sbb
outsb
leave
cmpl
sbb
in
cmpb
loopne
in
fdivrl
sbb
daa
mov
popf
pop
aad
xchg
cmc
pop
fcomps
mov
add
cmp
jge
inc
testl
out
xor
pop
xor
push
sub
or
push
test
int3
or
imul
repnz
add
in
in
sarb
mov
dec
sbb
mul
adc
ret
aam
pushf
and
nop
or
outsl
test
or
pop
cmc
mov
jl
lods
inc
mov
pushf
jno
jb
or
loope
inc
imul
dec
and
lds
in
jb
loope
add
dec
mov
and
and
or
leave
ja
stos
sub
push
lods
and
and
mov
outsb
mov
fimull
adc
adc
jl
outsb
lods
xchg
add
test
ret
mov
add
and
push
movsb
jo
inc
dec
inc
xorl
dec
pop
dec
push
sub
cltd
inc
push
pop
push
and
xorb
movsb
add
push
lods
push
mov
and
and
adcl
ja
jno
or
fsts
movsb
sub
xor
inc
and
xchg
sbb
jbe
dec
xorl
adc
pop
sti
jns
and
xor
dec
pop
add
mov
into
lea
sbb
cmp
xchg
push
or
sar
sbbb
sbb
sub
or
movsb
adc
cmp
imul
adc
add
cmp
add
in
push
cmp
jmp
fsubs
sub
sbb
mov
imul
in
sub
out
imul
sbb
push
pop
add
outsl
push
lods
pusha
add
outsl
mov
orb
nop
jl
and
pusha
dec
sbb
adc
je
pop
inc
cs
and
jo
inc
mov
std
insb
dec
push
inc
sbb
leave
aam
call
icebp
std
pusha
pusha
pop
sbb
pop
dec
movsb
roll
pop
or
push
push
jno
jle
pop
nop
pop
dec
dec
sbb
rclb
int
cmp
enter
xor
xor
sub
sub
in
and
and
nop
lret
sbbb
add
sbb
sbb
enter
adc
and
cmp
cltd
in
cmp
inc
or
nop
pop
add
jmp
add
insb
jo
in
jo
xchg
cld
pop
repnz
sbb
cld
sbb
and
cld
sbb
lock
lock
sub
fs
dec
inc
or
or
sbb
mov
sbb
sbb
call
cld
sbb
aam
jbe
mov
int3
cld
ja
mov
mov
and
xorb
les
test
std
mov
lret
mov
ffreep
sub
sarb
inc
rcrb
imul
jmp
push
ret
sbb
inc
cs
and
pushf
mov
fists
es
mov
cmp
rcll
cld
pop
bnd
cld
mov
inc
push
mov
addb
loopne
cld
subb
jl
mov
sbb
test
xchg
test
shrb
jl
rclb
mov
pop
insb
or
out
or
sbb
bound
sbb
jo
fs
loop
bnd
sbb
pop
cld
xchg
lret
pop
sbb
xchg
fs
clc
and
cld
or
add
ja
inc
sbb
xor
fdivl
cmpsl
jbe
push
loop
call
xor
pop
xchg
cmp
xor
sub
or
movsb
xor
pop
and
pop
sbb
jne
outsl
nop
scas
push
adc
nop
outsb
sub
or
adc
imul
sbb
mov
out
sub
xor
and
or
fucom
and
in
adc
or
add
jns
push
pop
pop
sahf
in
stc
jne
and
stos
sahf
call
adc
les
jbe
fdivs
push
cmp
add
sbb
leave
xor
les
inc
xor
adc
dec
lcall
aaa
and
pusha
mov
leave
add
inc
imul
mov
or
and
mov
pop
lea
mov
jno
leave
repnz
pop
cwtl
dec
ret
loope
mov
xor
mov
mov
push
push
mov
movsb
leave
mov
inc
jmp
mov
call
add
rcrl
sub
aaa
popa
xchg
imul
es
sbb
dec
sbb
adc
ljmp
add
sbb
fldcw
dec
in
leave
dec
fisttpll
sti
mov
loopne
sti
in
lret
in
pop
sti
push
test
xchg
sti
and
mov
aam
aam
sbb
dec
int3
int3
and
cmpb
push
aaa
les
aam
filds
dec
mov
sbb
mov
in
cmpb
mov
add
pop
rcrl
pop
and
cmp
mov
mov
push
cwtl
xor
xchg
mov
jl
movsb
sbb
sbb
jne
xchg
push
cmp
dec
clc
pop
cmp
clc
addb
insb
push
fs
mov
lods
inc
ja
xor
jbe
mov
pop
xor
adc
push
test
bound
inc
or
test
ret
lret
test
xor
add
add
test
inc
add
ret
ja
push
test
dec
push
lret
addb
xor
and
orb
pusha
add
push
add
test
xchg
pop
in
adc
xchg
iret
nop
add
nop
orb
mov
mov
test
add
scas
lea
stos
subb
scas
lret
push
shrb
push
scas
add
adc
sbb
add
imul
loopne
stos
addb
jns
test
push
push
jns
jns
dec
xchg
les
cmp
loopne
fisubrl
enter
in
insb
and
mov
dec
cli
add
lods
or
and
push
sahf
push
dec
test
aad
push
add
or
pop
sub
add
mov
or
addl
popa
mov
ret
sub
or
ss
mov
cmp
ret
dec
aas
imul
and
in
xor
daa
mov
inc
push
and
or
mov
out
jge
or
mov
or
dec
rolb
xor
dec
xchg
fsubrl
jl
mov
push
pop
and
rcll
or
add
add
add
or
adc
cmp
jl
mov
sbb
sub
and
mov
and
cmpl
insl
sub
insl
or
mov
adc
adcb
cmp
jmp
pop
lock
mov
ret
leave
imul
mov
bound
fisttpll
fwait
pusha
mov
mov
rcrl
push
pop
push
stos
xor
add
icebp
jbe
les
cld
adc
sbb
test
mov
std
xchg
sub
mov
pushf
dec
xchg
cmpsb
push
lods
in
in
adc
xor
adc
popf
jle
push
push
xor
lret
push
inc
sbb
mov
sbbl
pop
mov
cwtl
fs
dec
rorb
or
sarb
data16
push
add
pop
cmp
sbb
fldl
bnd
cs
andb
enter
loopne
jo
ficompl
pop
cs
test
xchg
call
pushf
add
movsb
jnp
je
sub
mov
adc
jecxz
stos
and
push
clc
adc
xlat
stc
or
or
aam
fisttps
adc
dec
bound
dec
out
adc
xor
dec
dec
mov
in
mov
add
nop
das
jmp
mov
popa
mov
int
iret
sbb
dec
xchg
clc
jmp
adc
test
aas
mov
dec
push
in
add
ja
call
int
jo
leave
xor
xchg
sbb
loope
push
mov
and
punpckldq
jb
data16
data16
sub
sub
adc
sub
pop
and
cli
sub
and
fisttpl
sub
sub
mov
add
mov
push
data16
xchg
imul
adc
sbb
pop
and
imul
les
mov
xchg
xor
leave
push
imul
mov
cmp
adc
pop
add
filds
fistps
mov
add
fcom
and
xchg
mov
dec
fists
pop
xchg
sbb
and
jne
inc
test
sbb
outsl
pop
arpl
shlb
aaa
mov
ret
das
add
lods
push
xor
aaa
popa
pop
mov
adc
mov
aaa
xchg
sbb
mov
sub
sub
sub
scas
mov
inc
enter
daa
add
fdivs
mov
fmull
dec
fwait
je
and
xchg
inc
xchg
lock
fwait
xchg
fwait
je
nop
sbb
les
mov
cmp
push
je
xchg
test
mov
leave
fs
xchg
or
push
xchg
mov
xchg
adc
and
rcrl
dec
fcoms
shll
pushf
mov
scas
mov
push
imul
add
sub
stos
push
jmp
pop
xorl
adcb
test
ret
xchg
jo
or
jnp
jmp
cmpsb
mov
scas
pop
addr16
xor
imul
leave
add
jmp
and
ret
test
pop
pop
jmp
xchg
dec
or
and
xor
dec
leave
adc
or
shr
sarl
xchg
and
and
jo
ret
push
rcrl
outsl
jno
jae
in
and
jno
sub
mov
loop
jne
mov
sbb
xchg
stos
icebp
and
leave
sbb
adc
hlt
push
out
test
or
mov
test
lret
cmp
jg
jnp
add
and
sbb
in
mov
test
mov
test
daa
loope
xor
lods
rorb
inc
popa
leave
inc
sub
xchg
enter
dec
sbb
std
or
ret
or
mov
mov
xchg
mov
jae
dec
leave
xchg
jno
fimuls
add
jo
sub
mov
cmpsl
adcb
or
gs
jl
xchg
or
pop
test
sbb
mov
and
das
sti
fs
mov
rcrb
mov
pop
jae
and
dec
cs
mov
jg
jb
movsb
jb
or
inc
in
add
pop
push
in
cmp
cmp
and
mov
test
push
mov
or
xchg
push
and
cs
and
inc
inc
in
and
pop
adc
adc
cs
push
adc
add
test
and
inc
shll
mov
inc
mov
and
and
mov
pop
mov
add
call
pop
inc
sbb
pop
outsb
leave
lret
or
cld
sbb
cld
inc
pop
sub
sbb
mov
out
aam
pop
jb
push
jae
int3
cmp
jae
ret
pop
repz
mov
sbb
insb
xor
movsl
repnz
mov
jno
mov
dec
test
seta
push
movsb
mov
mov
cs
cwtl
sbb
xor
and
push
leave
shrb
xchg
and
mov
popa
and
xchg
dec
xchg
movsb
jb
nop
je
pushf
or
add
pushf
insb
insb
jo
and
jo
sbb
mov
xor
sbb
cld
jmp
cld
mov
push
aas
push
movsb
mov
decl
in
and
inc
nop
lret
sbbb
add
cmp
cmp
repnz
push
in
cs
sbbb
sub
sbb
jg
xchg
push
les
add
loope
xor
adc
gs
adc
sub
sub
xor
xchg
dec
sub
add
dec
push
in
add
push
or
adc
xchg
mov
and
mov
mov
and
mov
mov
push
mov
insb
pop
pop
mov
movsl
mov
xor
fstps
popa
and
mov
ret
lods
stos
sbb
add
xor
call
jae
cmp
enter
lods
aad
test
gs
ds
movsb
movsb
mov
mov
in
and
out
shl
nop
imul
loopne
loop
dec
push
in
mov
cmp
cs
mov
adc
in
mov
xchg
je
addb
dec
jl
js
xor
fistpll
je
and
out
add
fisttpll
ds
bound
fs
mov
pusha
jecxz
inc
add
pusha
pop
mov
cmp
nop
push
push
mov
lret
push
dec
dec
jecxz
xor
pop
push
dec
cmp
mov
cmpsl
cltd
inc
sbb
mov
nop
cmp
sbb
add
and
push
xor
pusha
inc
mov
push
sub
cmpb
sub
jns
rclb
inc
mov
sbb
sahf
add
nop
sbb
cwtl
pop
adcb
and
lcall
es
sbb
ja
rorb
lret
aaa
in
nop
add
and
mov
out
cli
jmp
mov
jae
loop
cli
sbb
mov
out
cli
and
repnz
shr
in
and
sbb
and
cmpb
dec
fcoml
nop
outsl
test
dec
fcomps
xchg
dec
sub
adc
adc
loope
dec
ss
rclb
or
lods
pop
push
jno
mov
cltd
fcom
das
xor
cli
xchg
mov
sar
pop
repnz
add
cli
sbb
outsb
leave
mov
les
shlb
pop
xchg
lods
fmull
call
sbb
push
in
xchg
cli
add
add
xchg
pushf
pushf
push
cwtl
sbb
xchg
xchg
inc
add
nop
mov
mov
cli
lcall
int3
sbbb
inc
addb
enter
cmp
xchg
in
movsb
cwtl
bound
cld
push
add
or
push
mov
rcrl
es
or
cmpsb
inc
call
or
inc
bound
pop
and
movsb
cwtl
push
push
cmp
lahf
test
dec
incl
or
enter
outsb
push
bound
push
out
push
data16
inc
cmp
push
cld
cmp
adc
shr
arpl
jno
jo
sub
jne
dec
pop
bnd
movsb
add
or
push
adc
aam
dec
cs
cmp
xor
xchg
je
les
xchg
jae
aaa
pop
enter
enter
cwtl
sub
push
sbb
jae
cwtl
and
shrb
add
or
lods
sbb
lods
mov
ds
shlb
xchg
shll
xchg
jmp
jb
pop
enter
mov
mov
rorl
bnd
jae
pusha
and
adc
inc
and
sbb
sbb
and
xorl
nop
or
push
test
rorl
or
xor
pop
jb
xchg
pop
call
inc
xor
loop
and
pop
xchg
daa
xor
daa
mov
nop
es
cmp
dec
dec
cmp
in
inc
xor
sbb
push
lods
pop
daa
pop
pop
mov
and
sbb
or
xchg
and
pusha
aad
daa
arpl
jo
daa
sub
shlb
daa
add
nop
inc
dec
or
test
bound
mov
xchg
sbb
out
outsl
push
cld
js
push
cmp
int3
mov
cmp
nop
inc
fsub
in
nop
inc
push
call
push
cmp
clc
lret
jbe
ret
out
xchg
push
les
add
push
push
jl
pusha
call
mov
inc
and
dec
pop
shlb
pushf
pushf
pushf
pushf
jo
js
pushf
pushf
pushf
pushf
orb
pushf
xchg
cwtl
pushf
mov
movsb
test
add
shrb
or
cli
pop
fadd
or
dec
cmp
jnp
mov
pop
filds
pop
sbb
add
popa
insl
bound
add
add
gs
aaa
cmpsl
sbb
sub
sbb
mov
sbb
mov
push
push
shlb
rclb
mov
ds
mov
xor
xchg
cmp
loopne
xor
xchg
out
pop
cmp
cmp
in
dec
jnp
pop
dec
pop
shlb
lea
in
and
jne
lock
jb
pop
repnz
inc
iret
dec
sahf
pop
adc
inc
insb
push
inc
dec
loopne
and
jne
adc
pop
dec
pop
sbb
out
adc
mov
loope
push
insl
push
arpl
and
cmp
mov
jmp
adc
ret
push
ret
sub
fimuls
cmc
enter
arpl
sbbl
stos
jno
shll
in
sbb
cmp
push
adc
or
jg
inc
ja
mov
pushl
jno
leave
movsb
adc
or
rcrb
mov
loopne
jne
movsb
push
pop
cvtps2pd
push
test
les
in
roll
lods
or
mov
cmpl
pop
fimuls
sbb
sti
and
adc
ljmp
pop
push
ss
or
enter
test
xchg
mov
pop
xor
adc
dec
push
add
iret
pop
lds
cmpsb
gs
pop
repnz
xor
fs
inc
xchg
xchg
ja
jne
inc
dec
cmpsb
sbb
mov
ja
int3
in
add
or
test
mov
cwtl
dec
cld
xor
pop
les
sbb
and
cmpsl
nop
pushf
in
xchg
rcrl
mov
and
xchg
loopne
mov
pushf
jnp
and
lret
inc
ret
add
loop
and
xchg
scas
lret
jae
xchg
dec
jno
int
mov
jecxz
out
cwtl
or
cltd
rclb
mov
adc
xchg
adc
int3
adc
inc
aaa
fadds
add
xor
aaa
int3
fcompl
xchg
cmp
add
dec
jmp
add
or
inc
imul
test
mov
in
popa
mov
pop
and
out
fwait
cmpsl
cmpsb
add
cmpsb
lds
mov
or
xor
dec
push
int
jbe
cmp
add
fcoml
and
dec
aad
in
aad
add
dec
adc
inc
dec
mov
push
enter
daa
repz
or
pop
sub
fs
rorl
and
xor
or
add
imul
mov
stos
shlb
std
or
leave
addl
xor
mov
nop
push
mov
pop
in
jbe,pn
and
push
mov
sub
xor
movsl
test
movsl
push
jno
or
mul
in
jne
mov
shrb
int3
int3
popa
xor
adc
imul
movsb
mov
jmp
sub
sub
push
and
pop
stc
pop
rolb
jmp
inc
cmp
pop
imulb
test
outsl
ret
jae
fs
je
je
push
mov
adc
je
add
adc
add
push
outsl
popf
mov
pop
jecxz
mov
pop
in
pop
xor
add
xor
hlt
dec
icebp
ja
xchg
andb
jb
xor
ja
cs
fbstp
addl
lcall
movsb
pop
loopne
ljmp
xchg
inc
push
jmp
shlb
adc
and
loop
jbe
mov
pop
int
je
mov
in
into
add
inc
je
xor
loopne
xorb
mov
and
push
mov
xchg
pop
xchg
xchg
js
and
fsubp
jbe
test
ficoms
xchg
mov
xchg
or
and
and
dec
sub
dec
push
mov
test
push
sub
mov
sub
inc
xchg
loope
pusha
lea
dec
sub
dec
adc
and
popa
and
jno
pop
jmp
and
in
in
pop
dec
dec
ja
movsb
in
xor
in
dec
pop
adc
sbb
cwtl
pop
clc
mov
jne
and
xchg
mov
xchg
inc
add
les
hlt
test
xchg
dec
in
cmp
fsubrl
xor
and
fs
stc
mov
sarb
sbb
mov
and
std
repz
inc
orb
popf
mov
sub
in
xor
enter
dec
mov
les
xor
movsb
mov
sarb
mov
pop
mov
fidivs
subb
adc
mov
push
sub
or
lods
and
and
adc
sbb
clc
xchg
and
in
mov
ds
movsb
fs
test
jg
sbb
int
int
inc
and
and
sbb
mov
pop
jb
push
mov
jb
xchg
in
rorb
sbbl
mov
cmp
or
inc
jb
inc
cld
out
add
mov
pop
cwtl
mov
pop
xchg
popa
mov
cmc
lds
jb
nop
dec
add
je
dec
js
push
ret
sbb
fadds
test
stos
in
aaa
jno
jo
sbb
inc
or
inc
mov
ljmp
mov
pop
ret
cmp
mov
xchg
nop
loope
cmp
push
xchg
xchg
ja
fs
call
push
sbb
push
leave
clc
les
jne
sbb
pusha
mov
jmp
adc
and
jne
sub
test
dec
pushf
outsb
inc
mov
adc
sbb
sub
sahf
lods
or
rorl
push
psubsb
push
jne
sti
hlt
lret
jmp
into
jnp
clts
push
and
jo
shll
add
nop
cmpl
pop
cli
fdivr
orl
enter
dec
std
cld
xchg
outsl
inc
gs
pop
xor
and
add
icebp
lods
mov
popf
add
addr16
test
or
add
outsl
mov
adc
and
push
lea
sti
xchg
mov
xchg
imul
mov
sidtl
in
mov
scas
pop
iret
orb
aad
pxor
lahf
add
ds
dec
add
fs
not
or
movl
repz
stos
mov
movups
and
cmc
call
shlb
add
inc
pusha
or
jg
inc
stos
movsl
adc
add
in
jo
into
in
popa
adc
les
cs
fdivrs
mov
xchg
lret
jo
test
add
push
data16
shlb
mov
dec
aaa
ljmp
dec
cs
pop
and
xchg
inc
movsb
scas
lods
loopne
aaa
or
jbe
test
or
sub
add
add
sbb
or
or
mov
cmc
sbb
mov
jno
xor
inc
subl
push
sbb
adc
nop
cmp
adc
and
outsb
js
xor
mov
push
lock
xor
sub
mov
sub
out
jecxz
pop
adc
adc
mov
insl
ret
popf
jb
shll
or
aas
xchg
pop
sbbl
mov
cmpsl
xchg
in
or
and
xchg
add
mov
cmp
and
in
inc
jno
jb
or
mov
xor
xor
adc
add
adc
pushl
cltd
cmp
sub
orl
stos
add
cmpsb
fs
imul
pop
aaa
push
cmc
pop
cmc
lea
inc
movsb
cltd
ret
mov
sbb
mov
or
adc
scas
or
std
jae
mov
xor
mov
sbb
aam
or
aam
inc
pop
add
push
icebp
or
adc
mov
sarb
movsl
inc
sub
sub
lods
shll
xor
pop
mov
xchg
loope
cs
shll
icebp
cmpsl
mov
cmpsl
xchg
sbb
nop
into
js
in
out
cwtl
cs
jl
cwtl
sbbl
mov
test
mov
xor
mov
dec
je
sbb
insb
in
test
pop
jl
dec
sub
xchg
push
adc
lock
mov
jno
inc
xchg
mov
pop
cli
inc
mov
pop
sub
test
and
mov
in
imul
jne
adc
jnp
or
push
scas
xor
fisubl
pushf
sbb
dec
push
adc
shll
call
and
pop
daa
pop
push
or
jmp
inc
push
pop
sbb
pop
xchg
scas
aas
fs
lods
ss
rolb
cmp
sub
adc
pop
push
in
pop
cmp
dec
inc
mov
push
cmp
inc
aad
xor
mov
addb
push
jb
push
inc
js
aas
in
and
inc
aas
leave
mov
jo
push
js
or
sub
push
faddl
sti
jne
pop
outsb
and
jp
and
lods
imul
xlat
dec
lea
dec
dec
xchg
pop
or
sbb
push
sarl
jne
test
xchg
jne
fistps
cmp
fdivrs
adc
in
inc
and
jns
adc
sub
xlat
cld
jne
sub
dec
pop
sub
pop
push
packsswb
and
decl
enter
push
inc
dec
push
dec
push
push
dec
dec
inc
dec
push
dec
dec
pop
sub
shl
pop
sub
pop
and
sub
or
or
jbe
outsl
imul
data16
jp
mov
mov
xchg
adc
cmp
sub
clc
mov
cmp
cltd
or
je
pop
and
sbb
mov
jb
add
jo
popf
les
pop
dec
pop
je
imul
jmp
lds
jb
lds
xor
xchg
and
test
in
roll
inc
or
aam
shl
jb
outsb
mov
add
mov
idiv
sbb
push
adc
jl
add
mov
mov
mov
rolb
stos
jo
push
push
mov
imul
icebp
pop
in
call
push
push
push
inc
push
push
pop
push
sbb
dec
dec
inc
inc
inc
cs
aad
lock
dec
sti
jg
push
inc
inc
push
inc
pop
pop
pop
inc
push
inc
dec
pop
inc
dec
jnp
fnsave
cs
push
cmp
dec
dec
bound
cltd
fnstcw
dec
jl
js
out
imulb
mov
mov
xchg
mov
fldl
idivl
aaa
lahf
jecxz
inc
xorb
fucomi
jp
sti
adc
inc
hlt
and
iret
mov
adcb
imul
insb
jns
out
adc
ds
repnz
xor
xor
push
inc
cld
inc
mov
jl
stc
push
mov
movsb
sbbb
sahf
cmp
push
sub
test
push
mov
aam
inc
imul
dec
jl
xchg
cs
cmp
clc
data16
mov
push
test
sbb
mov
test
inc
dec
pusha
les
inc
push
iret
repz
jle
not
outsb
fs
and
test
fsubl
fwait
leave
jl
mov
sub
repz
mov
push
aam
pminub
mov
addb
add
outsb
in
xchg
mov
test
fistps
xchg
icebp
dec
leave
sub
lods
mov
sbb
ds
jle
or
push
enter
dec
cmp
pushf
mov
inc
pop
iret
mov
adc
scas
cmp
inc
pop
sbb
or
adc
ja
mov
fistpll
mov
xchg
inc
cwtl
xchg
int
das
sub
aaa
test
test
stc
mov
sbb
push
ljmp
dec
les
insb
inc
orl
xchg
add
push
loopne
addl
or
and
mov
add
rolb
lock
jmp
mov
stos
sub
jl
imulb
sub
cmp
xlat
adc
call
push
jbe,pt
mov
mov
pop
pop
cwtl
mov
mov
iret
subb
divl
es
sarb
xor
adc
dec
mov
and
adc
adc
adc
xorb
and
cmp
adc
push
call
lea
or
jb
jne
add
in
sbb
pop
sbb
in
or
and
test
mov
mov
add
jl
adc
mov
or
shlb
adc
inc
mov
cmp
push
sbb
sub
xor
pop
adc
sarb
add
mov
xor
fucomip
adcl
orb
gs
mov
add
aam
aam
pusha
cwtl
inc
arpl
cli
dec
xchg
idiv
ds
mov
es
mov
popa
sbb
lock
mov
sbb
add
fisubrs
mov
insl
fs
xor
cmp
cmp
add
popa
xor
pop
inc
cmc
data16
push
fsubl
popa
lock
xchg
xchg
add
mov
dec
jae
insb
xor
xor
mov
adc
mov
jbe
sub
test
repnz
inc
mov
nop
jns
call
les
dec
and
hlt
mov
pusha
mov
lahf
out
push
cmpsb
mov
add
movsb
or
sbb
aaa
adc
out
adc
es
jo
jb
outsb
xor
orb
mov
in
and
mov
orb
and
sub
orb
xor
jmp
scas
js
add
or
das
add
push
xchg
dec
inc
sub
xchg
test
aas
mov
add
test
enter
lods
xchg
mov
cmc
inc
mov
bound
mov
mov
test
mov
and
mov
jge
std
fwait
mov
sub
shrl
push
cmpsb
pop
stos
test
cmpsb
and
arpl
xor
and
pop
das
fisubl
inc
das
aam
ja
xchg
adcb
xchg
cwtl
lock
jnp
xor
fwait
mov
fsubrl
jns
mov
inc
or
xchg
lods
aaa
test
mov
test
xchg
call
mov
shll
xchg
or
testl
cs
push
enter
inc
jl
cmpsl
loopne
jae
fdivrs
and
fnstenv
jnp
jb
nop
inc
sbb
or
rolb
xchg
cltd
in
xchg
ret
push
cmc
sbb
test
xchg
jno
sbb
int3
mov
push
cmpsb
mov
imul
dec
inc
insl
add
mov
mov
fisubs
xor
cltd
insl
lods
cmp
ds
pop
dec
add
adc
iret
push
stc
fs
jbe
push
add
gs
cmp
xchg
pushf
daa
mov
jno
adc
loopne
pop
xchg
cld
mov
mov
add
iret
movsb
addr16
pusha
sti
sbb
je
gs
push
jg
cmp
rcrb
cmp
or
es
inc
enter
aaa
jecxz
les
idivl
jle
lahf
mov
mov
mov
add
mov
inc
sbb
movsl
push
out
inc
pop
out
sub
iret
add
cmpsb
lcall
loope
mov
sub
mov
imul
adc
mov
mov
dec
int3
lods
sub
cmpsl
ret
pop
add
adc
xor
test
mov
and
enter
sub
lea
dec
add
inc
add
cli
add
inc
ss
push
stc
mov
test
adc
jp
add
stos
inc
mov
call
mov
push
cli
pop
push
inc
pop
idiv
aaa
mov
sbb
jle
mov
mov
adcl
mov
lods
loopne
ret
pop
movsb
das
fbld
pop
mov
test
fstpl
fsubl
mov
paddb
sub
lock
mov
test
pop
push
or
movb
shlb
into
clc
clc
and
addr16
inc
and
pop
sbbb
push
iret
cmp
or
pop
pusha
cs
push
aaa
xor
mov
call
pop
inc
movsb
adc
adc
inc
add
add
aas
sbb
adc
sbb
cmp
xor
cmp
and
dec
mov
adc
inc
jb
aas
pusha
push
jo
push
leave
inc
jb
mov
fiaddl
sub
and
cs
mov
loopne
repnz
and
leave
adc
xor
inc
jb
inc
pusha
xchg
pop
and
andb
loopne
mov
inc
jo
mov
and
dec
pop
and
aas
dec
and
xchg
shlb
and
jb
lock
add
loopne
push
and
rorb
push
or
push
enter
sbb
insb
mov
cmp
and
and
sbb
out
lret
int3
enter
enter
fcomp
fxch
insl
adc
cld
loopne
jecxz
in
dec
dec
add
jg
mov
push
jne
pusha
pop
xlat
and
gs
and
add
ds
pop
cmp
sarb
sahf
pop
orl
adc
push
or
mov
cmpsb
add
cmp
xchg
pop
push
lock
xchg
inc
das
adc
sub
push
push
adc
push
or
gs
es
and
jnp
push
js
repz
xrelease
repz
mov
ror
fdivrs
iret
repz
call
jns
out
or
sbb
sub
jns
out
cmp
push
sahf
out
sahf
pop
pusha
push
pop
out
mov
test
dec
fs
or
gs
dec
mov
test
fdivl
mov
in
leave
enter
pop
test
or
fs
fs
test
rol
push
ret
ret
jg
xorb
lds
clts
jmp
or
adc
loopne
or
sub
repz
dec
pusha
jo
cmp
repz
movsb
mov
fdivrs
iret
repz
sub
jns
out
dec
pop
push
addr16
into
sbb
pusha
xor
push
push
loope
rorb
rorb
rolb
mov
dec
jp
inc
push
inc
pusha
push
sbb
sub
mov
add
mov
cmpsb
ljmp
cmpsl
outsl
or
sbb
mov
jnp
cmp
push
fcomps
and
aas
add
fstps
aas
push
or
push
sbb
add
push
add
adc
out
mov
pop
and
test
imul
fdivrl
cmpsb
lret
das
sti
push
in
mov
sti
sahf
hlt
or
sbb
add
or
cmp
repz
push
punpckhbw
repz
adc
adc
cmp
mov
repz
jns
sbb
sbb
adc
repz
or
insb
cmp
repz
addb
adc
cmp
repz
repz
roll
push
push
adc
and
cmp
fistps
push
push
jns
out
and
adc
jns
out
mov
sarl
mov
pop
negb
push
add
cmp
repz
dec
nop
andb
sbb
imul
jns
out
mov
out
sahf
mov
mov
sahf
out
fidivs
sbb
call
loopne
es
add
faddp
jne
and
or
dec
push
dec
or
punpckhdq
pop
bound
cmp
or
popa
icebp
fsubrs
or
mov
aad
sbb
push
cli
cli
mov
scas
mov
push
std
cmc
out
lahf
jecxz
jmp
clc
fdivrl
push
cmc
cmc
mov
std
xor
cli
jmp
push
pop
fidivs
fimuls
lock
sahf
jl
clc
xchg
out
jb
mov
cmc
cmp
lea
or
out
aad
pmaxub
mov
loopne
addr16
fidivrs
cs
push
cmc
inc
jo
mov
jle
pop
decb
ret
scas
push
mov
por
jg
dec
mov
pminub
push
cmpsb
fwait
test
out
mov
jl
inc
decb
mov
aas
iret
addb
xorb
imul
add
jg
pop
inc
std
sub
or
push
fcoml
mov
out
sub
push
shrb
mov
outsb
xchg
sub
push
xor
push
lock
jle
out
mov
cmovne
hlt
sbb
aam
mov
mov
cld
push
int
aas
sahf
xchg
jle
xchg
sbb
mov
out
add
out
call
rolb
fs
mov
scas
xchg
xlat
mov
and
ljmp
add
int
es
aam
out
nop
dec
aas
aad
sti
pop
aam
xchg
mov
push
fisubl
into
add
adc
mov
iret
mov
add
lcall
cmp
cld
test
sti
cwtl
outsb
push
data16
sub
adc
fmuls
cmp
jno
push
mov
jo
xor
ds
imul
push
sbb
fs
xor
loopne
jbe
movq
push
cmp
daa
xorb
inc
cs
out
mov
loop
sbb
loopne
cmp
lods
fdivrs
push
push
xchg
out
push
ds
cli
scas
faddp
add
push
dec
push
push
dec
sarl
imul
push
inc
loopne
fidivrs
jle
xchg
lahf
mov
sbb
imul
push
xchg
jg
pusha
push
sbb
jo
jmp
cmp
into
sar
push
pop
sahf
mov
pop
jmp
pop
enter
movswl
xlat
xchg
out
adc
cmp
je
lahf
loopne
add
dec
push
cltd
xor
push
jmp
orb
add
ds
aas
ret
dec
icebp
cs
mov
loop
push
mov
aaa
pop
xchg
xchg
jo
push
dec
mov
sbb
push
ljmp
addr16
out
subb
push
fidivl
sahf
push
jbe
lahf
jmp
push
fdivrs
mov
clc
fxch
push
xadd
scas
push
mov
fdivrp
cwtl
outsb
push
addr16
push
ja
cltd
scas
push
mov
pop
push
roll
mov
pop
mov
popf
mov
jle
push
push
mov
jo
mov
inc
fmulp
push
cmc
add
push
push
cmpl
mov
mov
push
dec
cmp
dec
dec
scas
push
jnp
jnp
faddl
sahf
push
test
sbb
push
out
test
repz
add
fiadds
sbb
sahf
ja
movsl
jns
out
mov
jns
jnp
or
xor
cmp
out
jns
out
pop
fs
je
jl
ret
dec
pusha
mov
add
nop
add
shlb
mov
mov
shll
pop
pop
and
fcmovne
in
inc
pusha
dec
add
dec
in
mov
xchg
fcmovu
in
add
add
xor
or
or
sbb
lar
or
lsl
pop
enter
push
std
stc
cmp
repz
cld
cld
cli
or
out
sahf
cmpsl
stc
and
xor
sahf
out
sahf
dec
negb
hlt
jns
out
test
xchg
repnz
jns
out
mov
out
sahf
in
clc
in
or
cmp
repz
jmp
ljmp
add
xchg
xor
or
ret
aad
xor
cmp
push
addb
mov
mov
push
pop
jnp
add
jbe
inc
or
or
add
int
pusha
dec
mov
push
adc
and
iret
repz
inc
push
push
repz
sti
cmp
fsub
cld
or
jle
sub
cmp
repz
insb
test
pop
cs
cwtl
lahf
adc
inc
inc
inc
scas
xlat
scas
jecxz
outsl
adc
jne
xor
adc
int3
cmpsl
and
jae
fldt
cmp
outsl
push
xchg
mov
inc
pop
pop
int
cmp
mov
xchg
stc
mov
mov
sti
cld
std
cmp
repz
add
cmpb
repz
mov
lea
inc
jp
addr16
pop
inc
ljmp
inc
jb
xor
sbb
int
xchg
add
clc
jns
movl
cs
sub
xor
out
and
cmp
dec
push
mov
xor
lock
sti
xor
inc
shlb
test
push
add
adc
mov
rcrb
push
mov
xor
int
in
mov
mov
dec
xor
mov
and
pushf
aam
rclb
push
daa
lods
enter
inc
imul
add
std
mov
shrl
outsb
imulb
rorb
sbb
inc
push
and
sar
and
or
xor
movl
mov
mov
dec
mov
mov
jne
addr16
add
js
xlat
lahf
xchg
clc
shl
jne
popa
icebp
rol
push
xchg
ja
pop
ss
out
lcall
sub
mov
fisttps
pop
mov
push
mov
popa
lock
shlb
jno
ret
imul
out
insb
adc
fwait
jne
and
ficompl
add
dec
movsb
mov
fisttpl
jp
xchg
loop
xor
cmp
add
inc
lock
inc
pop
imul
movsl
mov
sbb
add
mov
mov
adc
add
fsubrl
inc
fidivs
fisubrl
and
lcall
sub
lea
mov
nop
dec
testl
or
mov
dec
iret
mov
push
das
xlat
hlt
pop
sbb
add
unpcklps
jbe
lds
mov
lods
rol
pop
or
cmp
aam
jge
adc
stos
mov
inc
sub
fisubl
sub
dec
mov
lea
cmp
pushf
and
sub
xchg
mov
jbe
repnz
jecxz
and
add
mov
lret
and
or
xor
fsubrl
and
push
daa
enter
insl
add
sub
loope
lock
inc
gs
dec
dec
inc
dec
movsl
xor
sti
in
lcall
push
sub
popl
pop
in
imul
icebp
out
loopne
rorl
inc
loopne
ds
xor
cwtl
mov
adc
mov
mov
das
push
insl
gs
adc
int3
cltd
sub
xchg
mov
push
xchg
neg
sub
int3
jmp
pop
ja
outsb
insl
popa
mov
dec
data16
movsl
fnstcw
enter
jo
inc
cmc
out
mov
mov
jmp
pop
enter
loope
push
and
jmp
cwtl
pusha
fsts
dec
pop
clc
push
add
adc
cmp
repz
inc
dec
pop
fs
repz
mov
lods
mov
mov
pop
popa
xor
inc
mov
dec
jecxz
ret
and
mov
inc
add
pushf
cld
push
iret
repz
adc
sub
insb
cmpb
cmp
pushf
lods
mov
repz
or
pushw
xor
iret
repz
mov
repz
clc
add
and
jns
out
dec
pop
je
lahf
out
sahf
mov
or
out
sahf
ja
push
cmp
sahf
out
sahf
orb
repz
adc
sub
repz
repz
shr
cmp
enter
push
sbb
repz
xor
nop
movsb
lcall
add
adc
sahf
out
and
pop
jo
jns
out
pushf
test
sarb
stc
sahf
in
clc
data16
push
cmp
sahf
out
jl
movsb
sarb
sahf
aam
hlt
or
pop
push
cmp
jns
out
fs
movsb
sarl
rcl
push
add
sbb
repz
xor
nop
mov
mov
fsubr
lock
icebp
iret
repz
push
xor
xchg
ds
repz
rcr
add
jns
out
or
cmp
jns
out
mov
sahf
shl
pop
repz
xor
out
sahf
out
jo
cwtl
lods
int
jns
mov
hlt
sub
repz
push
insb
js
repz
repz
cmp
repz
add
pushw
xor
pop
jo
cmp
xrelease
popf
iret
in
cld
cmc
testb
sahf
out
sahf
dec
push
cmp
out
loopne
or
sub
repz
repz
js
mov
out
ds
fdivr
sbb
xor
out
sahf
insb
mov
idivl
or
testb
push
sahf
out
sahf
fs
test
shlb
out
loopne
cld
or
and
cmp
repz
pusha
je
iret
repz
nop
movsb
mov
out
ds
sbb
dec
pusha
jns
out
je
cwtl
movsb
mov
int3
in
or
pushw
sub
out
cmp
push
sahf
out
int3
fsubr
add
iret
repz
and
pop
je
ds
repz
fdiv
add
jns
out
sbb
push
insb
out
sahf
out
pushf
mov
loopne
sahf
ja
hlt
or
mov
xor
pop
out
sahf
out
adcb
sahf
shr
cld
iret
repz
cmp
push
cmp
lods
fdiv
jns
cmpsl
stc
add
sbb
pusha
out
sahf
out
orb
aam
add
adc
inc
cmp
repz
insb
adcb
loopne
or
and
jns
out
dec
push
jns
test
int3
fadds
mov
sahf
ja
sub
sahf
out
sahf
adcb
sarl
and
push
jl
test
aam
imul
push
and
sahf
out
sahf
dec
pusha
je
xchg
test
lahf
out
rcl
add
adc
cmp
repz
inc
pop
insb
iret
repz
jl
pushf
mov
fcompl
mov
or
sub
jns
out
pop
push
jns
out
mov
repz
cld
adc
and
dec
pusha
cmp
repz
nop
movsb
mov
out
ds
repz
cld
or
pushw
xor
repz
push
push
iret
repz
mov
fdiv
out
sahf
out
or
cmp
sahf
out
sahf
push
les
out
fsubr
cld
or
sbb
cmp
repz
pop
push
iret
xchg
movsb
mov
loopne
sahf
out
add
jns
out
fs
cwtl
mov
jns
out
aam
cld
adc
iret
repz
and
cmp
push
cmp
test
int3
fdivrl
out
hlt
add
adc
cmp
jns
out
pop
push
jns
pushf
test
int3
fsubr
cmp
repz
or
sbb
cmp
cmp
repz
pop
push
cmp
pushf
test
int3
fsubr
sahf
cmpsl
stc
cmp
adc
and
inc
jns
out
push
fs
cwtl
out
sahf
out
mov
fsubr
iret
repz
hlt
or
sbb
cmp
repz
insb
js
pushf
stc
cmp
rep
mov
out
sahf
cmpsl
adc
cmp
out
sahf
insb
test
popf
out
fcoml
outsb
adc
and
inc
push
pusha
js
jns
out
pushf
lods
fsubr
repz
out
or
and
push
iret
repz
insb
test
sti
cmp
adc
mov
repz
jo
cwtl
lods
rcl
out
repz
cld
adc
mov
cmp
repz
dec
pusha
je
pushf
mov
mov
pop
out
sbb
out
push
and
dec
pop
push
js
pushf
mov
iret
sarl
clc
or
sbb
dec
cmp
repz
jo
mov
repz
loopne
or
sbb
jns
out
push
fs
lahf
out
sahf
movsb
rcl
clc
adc
cmp
repz
cmp
push
pause
mov
jns
iret
hlt
adc
cmp
out
sahf
jo
cwtl
test
fcomps
out
cmp
jbe
sbb
cmp
repz
pop
push
cmp
mov
data16
repz
cmp
xor
fs
repz
mov
into
sti
cmp
cld
push
pop
push
cmp
repz
push
fs
pushf
aam
cmpsl
stc
cmp
and
inc
pop
je
sahf
out
cwtl
mov
fdivr
sahf
out
negl
and
mov
int
jns
in
or
xor
iret
repz
mov
hlt
cmp
repz
adc
ds
push
fs
imul
clc
or
and
jns
out
push
fs
lahf
out
sahf
mov
adc
pop
push
cmp
lahf
out
sahf
pushf
mov
es
repz
sub
pop
je
cmp
repz
sahf
out
daa
adc
nop
pushf
sahf
out
sahf
test
ror
in
fucom
jns
cld
or
pushw
and
cmp
xor
push
or
movsb
iret
repz
mov
enter
sahf
cmpsl
stc
cmp
add
adc
jge
out
xor
dec
pop
cmpl
pop
pushf
lahf
or
ss
dec
mov
mov
sub
mov
push
call
clc
das
adc
loop
cmp
rorb
sahf
jmp
rorl
cld
inc
mov
adc
push
xor
jl
sub
or
and
lock
jo
push
adc
dec
pop
jnp
mov
sahf
dec
adc
or
fimuls
js
js
jbe
cmpsb
inc
in
pop
or
push
add
jle
incl
sbb
popf
cs
mov
rcrl
mov
push
add
sbb
mov
ficomps
xchg
pop
sbb
fidivrs
push
inc
push
push
pushf
ss
xchg
cwtl
test
sub
fcompl
outsl
loopne
hlt
push
rol
jo
sahf
sbb
xor
loope
negl
ss
mov
rcr
cmp
es
es
fdivrl
push
inc
or
add
xchg
ja
scas
dec
mov
sarb
sbb
mov
push
fdivrl
mov
out
loopne
insb
cs
push
xchg
push
mov
push
enter
pusha
icebp
fimuls
jle
aas
dec
and
out
mov
push
and
int3
push
fs
loope
pop
mov
incl
sub
sub
inc
cs
into
jnp
cmc
out
sub
aam
fbstp
push
lock
sbb
jnp
shl
xchg
iret
push
test
push
fadd
rol
data16
mov
subl
push
push
mov
jo
mov
mov
icebp
dec
loopne
push
fcoms
and
xor
xchg
mov
dec
pop
cmp
sbb
idivl
cwtl
sbb
push
out
mov
ss
push
xor
cmp
inc
imul
mov
fcoml
inc
xor
cmpl
cld
scas
sahf
out
xchg
mov
and
aam
xor
or
push
fsubr
mov
xchg
push
or
jne
out
fsubs
or
cmp
sbb
pop
pop
iret
jmp
outsb
mov
mov
adc
dec
out
cmp
cmp
adc
inc
or
loopne
in
jo
sti
cmp
movsbl
xchg
xchg
push
clc
jns
or
mov
cmp
pop
mov
into
imul
clc
fiadds
dec
jp
sbb
je
jle
ss
jnp
mov
push
xchg
test
or
mov
push
loopne
mov
xchg
loopne
mov
or
jnp
out
cmp
push
mov
scas
sbb
pop
inc
xor
xor
in
sub
shl
mov
jbe
pop
pop
out
fldl
jns
push
xor
add
sub
fidivrs
xchg
in
lods
xchg
push
les
mull
insb
inc
test
dec
or
inc
dec
inc
pop
cs
cmp
dec
scas
mov
out
xchg
sete
into
fisubs
js
sub
into
sub
pop
test
jnp
pop
push
and
insb
loopne
dec
lods
push
stos
dec
mov
hlt
out
adc
loop
inc
outsl
hlt
cmpsb
testl
xchg
cmp
inc
fidivrs
adc
mov
push
out
shl
lcall
ds
sbb
cs
out
out
sbb
loopne
js
mov
sbb
pop
lock
mov
mov
sbb
sub
fidivrs
js
test
les
int3
push
in
or
mov
pusha
sub
push
clc
sbb
mov
cmpsl
push
pushf
adc
mov
adc
cld
push
inc
ljmp
fisubs
adc
lahf
dec
sbb
int3
mov
and
shlb
push
aas
shl
addr16
pushf
jle
push
xor
mov
mov
mov
mov
dec
ja
add
inc
loop
jp
int3
incl
rorb
pop
and
inc
enter
add
adc
add
and
inc
adc
mov
dec
adc
push
mov
adc
stos
mov
adc
nop
inc
add
add
add
scas
adc
push
loop
add
or
push
dec
xchg
jp
push
sbb
mov
inc
jnp
out
inc
sahf
push
add
add
push
das
dec
repnz
dec
push
dec
cmp
aaa
cmp
cmp
ss
pop
movsb
inc
or
inc
dec
dec
scas
and
out
push
dec
push
add
add
and
add
cmpsl
add
add
mov
add
push
sahf
add
add
incb
rolb
sbb
mov
mov
addb
inc
leave
call
faddl
jl
repnz
jg
clc
aas
push
pop
jmp
fcmove
jae
rol
add
pop
or
cmp
jnp
push
aas
jg
ret
addb
add
inc
addr16
mov
jnp
pop
shrb
cmp
jo
pusha
dec
add
imulb
inc
add
psubb
mov
dec
outsl
add
push
out
lahf
cmpsl
fldcw
neg
out
cmp
cmp
or
loopne
lock
and
clc
pop
push
aas
aas
pop
xchg
addr16
lock
pushl
push
pop
std
fiadds
gs
push
fnstsw
add
roll
insb
jl
push
data16
jl
jns
jg
sbbb
add
repnz
cmpsb
jo
iret
rolb
jae
pop
pop
mov
lock
mov
push
xor
push
ficompl
xor
jg
ja
inc
push
add
cmp
adc
repz
inc
or
fwait
int
dec
add
add
and
ficompl
add
add
bsr
fisubrs
aas
dec
pop
outsb
daa
ret
push
push
sbb
fs
cmp
lock
aas
rcrb
push
dec
add
push
inc
jmp
outsl
clc
popl
adc
push
andl
mov
sahf
push
add
xlat
pop
sbb
fisubrs
mov
pop
addr16
pop
jle
xor
pop
inc
data16
in
les
test
xchg
fidivrl
nopl
aas
addr16
push
add
dec
out
inc
or
pop
cld
push
push
stos
enter
fsubrl
aaa
inc
pop
sub
pop
lock
push
gs
cmp
les
iret
inc
fldcw
jge
cmp
sbb
push
fwait
int
mov
add
inc
add
inc
ror
mov
popa
push
pusha
xor
sbb
push
xchg
orb
push
sbb
push
shlb
jne
ret
jbe
push
roll
lock
jl
data16
push
sbb
push
sbb
or
test
shlb
loopne
shl
xchg
and
stos
push
and
adc
inc
addr16
inc
outsl
andl
or
test
imul
and
insl
and
jns
adc
test
sbb
fnstsw
insb
jbe
jb
gs
add
notb
fs
movsbl
push
inc
imulb
arpl
je
mov
and
jne
dec
inc
xchg
jb
mov
xor
imul
and
punpckldq
sarl
push
insb
sub
cmp
div
lcall
add
add
shrl
fdivp
outsb
sarl
add
bound
sbb
push
jle
push
dec
aaa
faddl
jb
jb
pop
jo
loope
xchg
adc
push
out
jge
je
insl
ret
popa
sbb
jl
push
sub
lret
jo
imul
xchg
and
js
jo
xchg
imull
sti
lock
jo
out
lret
jbe
imul
insb
arpl
fadd
imul
arpl
ss
sbb
pop
jb
jne
xchg
xorl
lret
xor
push
call
push
stos
xor
ret
idivl
ret
adc
push
loope
lock
cmpsl
push
scas
xchg
jb
sub
lds
das
jb
pop
pop
or
dec
sbb
sbb
xorl
pop
xor
push
fstl
inc
cmp
inc
fcomi
jno
inc
mov
fisubl
pop
addr16
out
jmp
ja
xchg
mov
js
jae
popa
cmpsl
fisttps
pop
fldt
sbb
out
mov
rcll
das
orl
imul
jle
mov
bound
mov
lcall
cmpsl
pop
sub
loop
push
mov
sbb
adc
push
jp
rcll
pop
sub
dec
divl
scas
repz
xor
subl
and
imul
xor
fs
stos
test
outsl
jbe
shr
mov
sub
xor
mov
dec
imul
cmpsl
add
xchg
clc
icebp
bound
fs
xchg
sbb
sbb
xchg
jmp
stos
loopne
orl
and
cli
scas
daa
data16
imul
cwtl
pusha
push
or
push
push
sarl
and
mov
add
xchg
push
cvttps2pi
ja
push
subb
icebp
cs
adc
addr16
out
jmp
and
sub
outsb
adc
cmp
fimuls
notl
ficoms
lock
aas
popa
pop
outsb
dec
sbb
mov
push
scas
mov
clc
jne
mov
lret
gs
subb
cs
notl
adc
inc
cmp
push
aas
adc
js
mov
jns
push
push
cmp
adc
sbb
adc
pop
sbb
push
mov
aaa
sbb
inc
and
push
mov
inc
inc
aas
push
mov
xorb
lods
push
add
and
test
sub
or
outsl
add
popa
lret
adc
ret
outsl
mov
imul
aaa
imul
mov
and
sahf
sarl
fistpll
mov
scas
fwait
cmp
jne
ds
jae
adc
sbb
jecxz
fadds
mov
sbb
fsubrl
xlat
ret
stos
cmp
dec
pop
and
mov
and
cmpsl
cs
inc
das
push
shll
ret
jae
stos
xor
add
data16
loop
xor
sub
mov
insb
notl
lcall
sub
cmp
adc
push
cmp
xor
outsl
pop
jmp
dec
push
pop
faddp
push
js
mov
and
nop
arpl
insl
or
jb
jb
xorl
mov
iret
inc
repz
mov
mov
je
in
bswap
jmp
sbb
xchg
adc
ds
mov
push
xchg
sub
dec
sub
scas
jmp
pop
aad
fmuls
xchg
add
addr16
stos
add
inc
lahf
inc
arpl
or
mov
push
sbb
xor
les
es
stos
add
ret
mov
ja
daa
and
outsb
inc
sub
and
arpl
nop
or
sbb
rol
popa
inc
dec
iret
sub
les
mov
push
adc
mov
ja
adc
sub
push
pop
arpl
test
mov
push
psrad
xor
sbb
cs
push
adc
and
stos
jl
fisubrl
iret
ja
push
jo
jmp
push
adc
jae
ret
sbb
pop
and
cltd
mov
mov
pop
inc
je
xor
and
pop
repnz
ja
pop
test
adc
pop
inc
insl
pop
fcompl
and
mov
roll
sub
loope
stos
pop
dec
or
out
ja
xorl
mov
daa
jecxz
pop
cwtl
gs
xor
push
xchg
test
push
mov
mov
jae
negl
fbld
rcrl
xchg
xchg
jbe
scas
mov
popa
mov
fnstcw
imul
inc
arpl
or
aaa
push
push
decb
push
sbb
mov
rcrl
jecxz
xor
out
insl
shll
jecxz
xchg
jbe
lods
push
addl
aaa
ljmp
cmp
sub
sub
jmp
xchg
inc
mov
jg
mov
jnp
outsl
mov
ds
jae
push
and
test
roll
inc
sbb
inc
cmp
cmovnp
push
imul
mov
push
outsl
xchg
shl
pop
cvtps2pi
mov
cmc
mov
cmp
imul
test
inc
fs
xlat
dec
cmp
jnp
add
pop
fbstp
mov
dec
or
adc
popa
stos
xor
mov
xor
sub
out
fs
mov
dec
mov
cs
mov
mov
lret
out
add
mov
mov
fst
push
inc
jmp
add
mov
add
addl
je
das
and
mov
setg
loope
jl
insl
or
jecxz
ss
ja,pt
out
inc
xor
push
mov
or
sbb
sub
dec
arpl
jle
lods
jbe
pop
fs
addr16
jae
pop
cs
jo
xchg
inc
add
fisubs
mov
xor
xlat
push
cmp
imul
jno
push
pop
imul
mov
sub
and
or
jmp
pop
int
xor
bound
shll
xor
popa
mov
stos
mov
push
sub
shrb
loop
rcr
loopne
xchg
jp
mull
fildll
push
jae
pop
loope
add
imul
lods
and
inc
or
dec
lds
and
arpl
or
scas
add
add
push
pop
push
push
mov
js
pop
sbb
push
push
adc
mov
and
out
adc
mov
push
xlat
push
cmpsl
add
ja
dec
xchg
add
xlat
sbb
into
pop
outsl
sub
add
popl
insb
push
add
sub
or
jge
fiaddl
add
pop
cmp
adc
ret
jae
xchg
dec
jle
fiadds
sti
add
call
push
inc
inc
sbb
dec
fdivrl
out
outsb
cmp
mov
inc
or
popa
fldt
or
sub
add
outsb
inc
jle
sub
sub
dec
and
fistl
add
outsl
pop
stos
jne
xlat
iret
fwait
sbbl
mov
sbb
ja
imul
push
out
inc
dec
sub
mov
pop
add
jecxz
mov
mov
sub
xchg
lock
jecxz
dec
das
mov
mov
jmp
mov
aaa
sub
or
mov
mov
mov
dec
out
xchg
and
cmpsl
insl
adc
loopne
or
rolb
rolb
sbb
js
jl
mov
pop
adc
div
dec
xchg
push
and
push
inc
cli
sub
jo
and
cmp
imul
addl
xor
jo
or
push
sbb
test
push
and
pop
mov
mov
loopne
mov
xlat
test
pusha
outsl
daa
das
xlat
xor
aam
mov
fldt
xor
js
inc
mov
mov
dec
je
adc
jnp
pop
orps
mov
mov
js
adcb
fbld
jbe
pop
sub
push
outsb
pop
imul
adc
cmp
push
aas
add
divl
add
sbb
add
fwait
add
mov
push
xchg
inc
inc
xlat
xlat
sub
popa
fimull
dec
je
pusha
daa
pop
push
sbb
inc
or
addr16
jo
rcrb
cmpsl
mov
imul
cmp
repz
adcl
shlb
fistps
cmpsb
loop
pop
xor
sarl
mov
dec
aad
or
xor
stos
pop
dec
jnp
rolb
jae
sbb
adc
mov
ret
cmp
or
lahf
xor
inc
ret
fisttpl
sbb
jmp
push
mov
pop
aad
out
sub
adc
sbb
stos
arpl
mov
cmpsl
pextrw
outsb
aam
bts
testl
inc
icebp
movsb
fwait
dec
out
inc
add
sub
mov
fst
addl
jecxz
ds
sahf
icebp
mov
xlat
dec
fdivs
xor
mov
andb
and
aaa
popa
repz
xor
fcmovb
dec
arpl
jg
sahf
je
inc
inc
adc
xchg
stos
mov
loopne
sub
mov
inc
mov
dec
sub
ja
scas
push
and
lods
or
out
orb
adc
mov
add
adc
insb
dec
xchg
and
push
popa
inc
adc
mov
lahf
out
mov
cmpsl
and
pusha
cmpsl
adc
stos
pop
sarl
sbb
push
cmp
xchg
imul
stos
sbb
unpckhps
cmpsb
shrl
inc
inc
imul
pusha
les
jae
sub
aaa
add
daa
addr16
or
out
popa
xchg
fwait
mov
adc
jno
add
jns
or
or
adc
sub
dec
jnp
mov
jecxz
ret
dec
jbe
scas
mov
ljmp
pop
outsl
pop
imul
lods
dec
jge
ret
negl
pop
mov
push
jne
lahf
les
xor
cmp
pop
mov
and
popf
mov
sbb
loope
push
adc
cs
mov
and
mov
mov
lods
mov
jmp
push
cmpsl
jo
dec
daa
dec
jne
addl
or
pop
bound
mov
rorb
xor
adc
sbb
or
dec
stos
cmpsb
ds
out
call
jbe
jp
mov
inc
adc
push
fwait
out
test
repz
sbb
xchg
pop
or
insl
aas
iret
mov
jno
inc
and
imul
ret
add
daa
pusha
subb
lahf
sbb
stos
andl
out
push
imul
dec
sti
add
ret
xchg
ljmp
lahf
jne
cmp
or
add
ret
push
inc
jnp
xor
pop
outsb
or
adc
ret
inc
jecxz
or
adc
aas
xlat
pop
jo
loopne
pop
outsl
pop
or
inc
adc
inc
and
mov
xor
mov
roll
out
fwait
nop
es
outsl
popl
sahf
imul
inc
bound
or
les
mov
das
push
scas
pusha
loop
outsb
jmp
imul
daa
and
mov
pop
jmp
pop
fisubl
xlat
cmp
mov
sbbb
inc
jno
pop
aaa
push
xor
add
cmp
or
outsl
sub
pop
xchg
mov
or
fwait
add
mov
scas
add
movl
arpl
lods
push
call
xchg
fildll
mov
popa
mov
sub
sub
xor
adc
rcrl
bound
pop
cmpsl
inc
insb
rolb
aas
rolb
test
add
jg
rorl
inc
and
stos
sbb
ja
scas
arpl
or
inc
push
add
call
jmp
cmp
push
cmpsl
popw
jmp
mull
pop
adc
mov
adc
and
or
sti
orb
popa
sbb
orl
rol
pop
cmp
fwait
outsb
sti
dec
movsb
push
fdivrl
pop
xchg
pop
add
out
inc
shlb
fimuls
iret
daa
lods
pop
pusha
push
fwait
adc
js
adcb
jae
pop
pop
jg
push
pop
mov
sahf
imul
inc
dec
dec
xchg
dec
dec
inc
imul
xchg
aaa
arpl
sbb
jmp
mov
ret
mov
repz
sub
scas
add
push
dec
dec
nop
movsb
pop
das
cmpsl
addr16
cmp
mov
dec
and
jp
xor
loop
sub
push
filds
pop
adc
ret
adc
push
and
xchg
addr16
jbe
test
lahf
out
sub
daa
pusha
xor
pop
add
and
pop
inc
xlat
add
aas
mov
cmpsl
daa
pop
cmp
push
stos
sbb
mov
insb
or
or
adc
inc
in
xchg
jg
xchg
stos
jg
sti
add
rcll
das
sub
mov
mov
push
inc
push
iret
loope
insl
shl
notl
jo
add
adc
popa
sbb
adc
mov
mov
and
or
mov
xor
pop
cmc
fdivs
xor
arpl
jo
adc
mov
jp
mov
test
xchg
dec
push
mov
sbb
test
pop
aas
insl
pushl
cmp
xorb
repz
add
fwait
cmp
jecxz
shrb
add
push
add
push
adc
insl
outsl
jae
inc
jbe
push
mov
mov
rcrl
imul
and
fsts
arpl
mov
sbb
push
jmp
int3
orl
adc
push
xor
adc
dec
loope
push
mov
in
sub
push
push
dec
push
jae
mov
add
dec
ss
mov
jbe
bound
loopne
add
push
movsl
or
rclb
mov
repz
dec
subl
mov
fldenv
or
cli
in
dec
and
pop
mov
add
add
or
xor
jl
shll
mov
inc
mov
jns
adc
shll
cltd
shlb
inc
cs
divb
das
ja
les
fnstsw
and
adc
mov
dec
sub
xor
loopne
test
mov
daa
pop
sbb
add
jb
push
shlb
imul
es
lcall
mov
movsl
mov
pop
in
inc
les
insl
sbb
jns
mov
pop
sbb
and
fbld
cmp
pop
inc
jae
sbb
xchg
movsb
jge
je
adcb
jnp
sarb
or
ficoml
ret
shll
xchg
push
lret
js
lods
iret
sbb
lret
push
mov
scas
mov
insb
mov
adc
iret
xor
or
adc
sti
add
test
sarl
sub
and
or
aad
sbb
sahf
adc
lea
cmpsb
or
cltd
mov
movl
pusha
jl
lods
xlat
sbb
nop
dec
inc
xchg
imul
adc
push
and
or
hlt
mov
cmp
add
mov
pop
test
outsl
call
cmp
inc
enter
ja
inc
jo
xchg
push
fisubrs
xor
insl
mov
and
test
sahf
scas
cmp
imull
add
sbb
adc
jbe
sti
imul
xchg
pop
cltd
insl
outsb
jb
sbb
push
add
insb
or
outsb
push
push
shrl
adc
push
add
sbb
js
push
sbb
cli
adc
pop
insb
or
inc
push
and
rcl
push
rcr
mov
push
fldenv
mov
sbb
inc
insb
inc
xchg
pop
or
lds
cmp
cli
fs
cwtl
lods
fmulp
push
addr16
rolb
xor
lcall
cwtl
push
lds
in
arpl
pop
xor
xor
ja
arpl
imul
ror
push
aaa
pushf
jne
into
or
out
aas
push
jae
mov
mov
adc
sbb
inc
shrb
add
add
push
pop
pop
adc
add
imul
cmp
jge
add
add
cmpb
pop
inc
push
or
add
push
add
push
pop
seta
lret
or
addr16
in
pop
add
cmc
or
dec
clc
inc
add
push
loopne
jbe
mov
or
mov
xor
insl
add
cwtl
cmp
or
add
pop
scas
out
orl
testl
fcoms
or
dec
add
or
shlb
push
daa
mov
orb
and
test
xor
ljmp
dec
rcrb
scas
in
daa
add
in
scas
in
add
scas
pop
sbb
pushl
mov
add
dec
add
je
mov
inc
push
fidivs
push
push
cwtl
fimull
adc
inc
subb
sbb
jo
cwtl
daa
or
inc
push
das
insl
stos
mov
add
sbb
add
arpl
add
test
and
jnp
xor
sbb
push
daa
sub
cmp
cltd
mov
ret
mov
adc
or
sub
ds
loopne
push
outsl
sbb
xchg
xchg
lods
xor
sbb
xor
ret
cmp
inc
adc
jns
sub
adc
inc
fiadds
pop
and
xchg
ret
inc
pop
ljmp
add
push
add
add
xchg
mov
loopne
adc
add
int
push
push
jb
addl
cmp
dec
mov
negl
push
sbb
lea
pop
cltd
sbb
dec
xchg
xor
nop
test
pop
fmull
xor
xor
mov
cmp
adc
imul
fmull
sub
jne
ret
shlb
stos
lcall
stos
xchg
es
or
inc
sbb
loop
movsl
lds
dec
int3
sbbb
mov
outsl
data16
xor
inc
test
lds
push
and
xchg
pop
add
cmp
or
adc
and
xchg
scas
fwait
inc
adc
mov
ficomps
jnp
or
jnp
insl
adc
mov
push
cld
jno
adc
pop
cmp
jge
inc
imul
imul
or
cltd
shr
push
adc
add
adc
fimull
jne
mov
dec
mov
add
lock
jbe
inc
mov
sbb
pop
loope
lret
mov
stos
push
pop
xchg
push
mov
mov
sub
fimuls
test
pop
std
push
lret
pop
cmpsb
pop
push
in
mov
sti
aad
jecxz
sub
daa
sbb
es
imul
mov
mov
faddl
mov
push
inc
pop
and
rolb
inc
lahf
sbb
sub
je
jb
fldt
test
sub
adc
xor
push
add
adc
jns
pop
fadds
and
jns
sbb
dec
jo
aad
or
and
mov
jbe
subl
inc
push
push
sub
push
imul
int
sub
xchg
arpl
xorl
or
sbb
sbb
xchg
push
xorl
jns
adc
faddl
ljmp
push
sbb
ljmp
std
add
aam
gs
inc
mov
push
sbb
not
adc
cmp
cmp
jo
pop
rcll
mov
test
pop
inc
add
pop
xchg
subb
and
xchg
xor
inc
daa
inc
add
sub
inc
and
and
rcrb
aaa
add
outsl
xor
daa
add
in
sub
cmp
sub
dec
icebp
sub
insl
inc
push
movsb
and
sbb
pop
inc
imul
push
lods
mov
xor
insl
add
sbb
cmpsl
xor
and
repz
or
popa
sbbl
and
mov
insb
xor
ret
dec
jb
js
sub
cmp
mov
dec
and
adc
in
push
ja
jge
jg
sar
dec
push
xor
ja
inc
dec
inc
cmp
fdivrs
and
popa
mov
and
test
sbb
stos
int3
mov
je
sbb
insl
mov
inc
movsl
and
jbe
adc
and
out
cmc
cmp
lds
loop
and
pop
add
enter
mov
cwtl
and
push
ret
jno
adc
mov
test
xor
out
and
mov
jmp
outsb
inc
outsl
mov
sub
gs
enter
gs
jo
or
adc
movsb
mov
fisttpl
fstpt
adc
ret
inc
pop
mov
and
mov
push
cmp
xchg
sbb
mov
sub
jmp
popa
rcrb
sub
cs
or
insl
sbb
and
and
cmp
dec
xor
or
adc
mov
sub
jnp
push
or
push
cmp
push
jp
push
push
mov
push
add
jecxz
ds
data16
push
sub
push
dec
daa
mov
cmp
mov
imul
data16
add
mov
push
and
cmp
mov
xchg
int3
pushf
mov
and
fdivs
hlt
sub
push
addb
nop
jns
adc
idivl
jno
ror
xor
test
das
push
jp
adc
imul
sub
movsb
lea
arpl
pop
mov
movsl
xor
sub
xchg
jb
sub
xchg
adc
inc
lock
add
outsl
xor
pushf
lds
fsubrs
inc
and
add
and
lret
orl
mov
dec
dec
pop
mov
jno
or
add
xorb
mov
xchg
iret
and
loopne
or
inc
daa
repz
int
add
and
rclb
adc
cmpsl
lock
pusha
push
pop
push
and
jno
and
cmpsb
cmp
outsl
andb
mov
mov
add
sbb
insl
dec
pop
jnp
adc
cmp
shrl
mov
and
in
mov
xor
test
push
fs
mov
adc
aam
push
jne
and
mov
mov
clc
imul
aaa
cwtl
jns
dec
mov
and
jae
add
mov
rcr
jo
insb
xchg
jns
dec
jmp
jns
jae
lret
adc
pop
xchg
or
mov
jmp
sub
mov
mov
xchg
sub
or
sbb
sbb
sbb
dec
jae
nop
pop
test
fs
and
and
xor
xor
jmp
out
push
ja
sbb
push
pop
andl
cmp
dec
adc
jo
inc
pop
xor
dec
sbb
cmc
add
incw
iret
cmp
testl
jno
inc
pusha
adc
pusha
pop
test
or
scas
mov
jge
rcrl
shll
rcrl
and
scas
in
insb
sbb
push
xor
inc
inc
inc
and
xchg
in
adc
fimull
pop
mov
jnp
mov
fdivrs
xchg
and
fwait
inc
sbb
pop
movsb
push
mov
insl
ret
xchg
and
rol
sbb
sub
push
mov
aaa
cltd
or
sti
inc
adc
rorl
lods
add
mov
ja
adc
movsl
cltd
jns
xchg
imul
sbb
inc
inc
inc
mov
sub
push
sub
jno
inc
ficompl
adc
mov
add
mov
lcall
push
fs
and
push
sub
adc
loopne
sbb
dec
pop
adc
test
fs
and
inc
jge
nop
pop
sub
xor
and
sbb
mov
rcrl
sysret
and
xchg
orl
lahf
in
xchg
add
pop
mov
and
orl
and
jmp
aad
fwait
push
sbb
pop
sbb
push
push
repz
mov
push
pop
loope
or
fistpl
xor
insl
sbb
out
jo
es
loopne
add
inc
fs
jns
push
pop
outsb
movsl
mov
rcll
sub
jae
sbb
sub
cmp
cmp
lcall
xor
jg
lods
hlt
hlt
lods
sti
data16
xorb
add
xchg
dec
add
imull
js
idiv
or
add
add
add
mov
adc
nop
push
mov
add
stc
mov
movl
iret
insl
fbstp
adc
imul
testb
push
jmp
jbe
inc
sbb
sbb
lods
sub
push
insl
fdivs
loopne
scas
mov
sahf
ja
cltd
and
imul
dec
inc
test
mov
into
xor
xor
pop
add
bound
xchg
mov
mov
aaa
inc
dec
sub
je
cmp
or
pop
jb
dec
jo
jo
fimull
inc
dec
gs
xchg
out
out
dec
lcall
jae
dec
data16
or
ss
das
push
mov
add
add
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
stos
dec
add
stos
dec
add
