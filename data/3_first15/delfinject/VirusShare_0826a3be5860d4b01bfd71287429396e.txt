jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
cmpl
jne
push
push
call
mov
test
jne
xor
pop
pop
ret
mov
mov
mov
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
pop
pop
ret
nop
mov
mov
ret
mov
push
push
mov
mov
call
test
jne
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
call
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
add
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
cmp
jb
mov
add
mov
add
cmp
ja
cmp
jne
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
sub
jmp
mov
add
mov
mov
add
sub
mov
sub
mov
mov
mov
call
test
jne
xor
jmp
mov
jmp
mov
cmp
jne
xor
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
mov
add
mov
mov
jmp
mov
mov
cmp
ja
mov
add
cmp
ja
cmp
jae
mov
mov
add
cmp
jbe
mov
push
push
push
call
test
jne
movl
mov
call
mov
cmp
jne
mov
xor
mov
cmpl
je
mov
mov
mov
mov
sub
mov
mov
add
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
and
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
cmp
jbe
mov
cmp
jbe
push
push
sub
push
push
call
test
jne
mov
xor
mov
jmp
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
sub
mov
mov
jmp
mov
mov
add
cmp
jae
mov
cmp
jae
mov
cmp
jbe
push
sub
push
push
call
test
jne
movl
mov
cmp
jne
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
add
and
mov
jmp
cmp
jg
mov
mov
mov
call
cmpl
je
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
cmp
jne
mov
mov
call
cmpl
je
mov
mov
mov
call
cmpl
jne
mov
mov
mov
call
xor
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
jmp
mov
cmp
je
cmp
jne
cmp
jne
cmp
jle
lea
mov
sub
mov
add
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
cmp
jne
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
add
mov
mov
sub
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
lea
and
mov
add
and
cmp
jae
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
ret
push
mov
push
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
jmp
push
push
mov
push
call
mov
cmp
jne
mov
call
mov
call
mov
call
mov
test
je
mov
mov
push
call
mov
test
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
ret
push
cmp
jne
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
lea
mov
jmp
mov
cmp
jb
add
cmp
jb
mov
cmp
jne
movl
xor
mov
ret
nop
push
mov
sub
lea
cmp
jl
movl
mov
call
pop
ret
cmp
jl
mov
or
mov
mov
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
cmp
je
movl
call
add
mov
pop
pop
ret
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
xor
test
jns
add
sar
cmp
jg
mov
mov
test
jne
inc
cmp
jne
mov
ret
push
push
push
push
mov
mov
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
cmp
jg
mov
mov
cmp
je
mov
jmp
cmp
jg
mov
call
mov
test
jne
mov
call
test
jne
xor
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
incl
sub
add
jmp
mov
call
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
cmp
jne
mov
mov
mov
add
andl
mov
mov
or
mov
add
incl
sub
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
sub
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
cmp
je
movl
jmp
add
mov
call
and
mov
add
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
test
je
and
cmp
jge
movl
jmp
orl
jmp
mov
cmpl
je
cmpl
je
cmpl
jge
movl
jmp
mov
add
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
mov
sub
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
mov
sub
mov
add
cmpl
jge
mov
add
mov
sub
mov
jmp
mov
testb
jne
mov
mov
add
call
cmpl
jl
mov
add
mov
or
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
mov
cmp
jl
mov
sub
mov
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
and
or
mov
mov
jmp
call
mov
add
testb
jne
mov
mov
mov
mov
mov
cmp
jge
add
mov
mov
sub
jmp
call
mov
sub
cmpl
jl
mov
add
mov
call
jmp
add
mov
add
andl
jmp
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
jmp
xor
jmp
mov
sub
add
mov
and
or
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
test
je
mov
mov
xchg
call
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
test
jle
call
mov
test
jne
mov
call
jmp
xor
mov
pop
ret
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fnstcw
fnstcw
fwait
orw
fldcw
fistpll
fldcw
pop
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
xor
imul
inc
mov
mul
mov
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
push
push
push
mov
mov
test
je
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
je
mov
xor
mov
xor
push
push
pushl
mov
cmp
jle
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
mov
call
mov
test
jle
mov
mov
mov
and
mov
mov
and
and
xor
mov
lea
call
mov
mov
and
mov
add
mov
inc
mov
call
cmp
jle
mov
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
je
jae
add
add
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
inc
jb
popa
je
inc
imul
jb
insl
inc
add
jne
gs
xor
add
gs
je
inc
imul
jb
insl
push
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
inc
jb
popa
je
inc
imul
add
inc
jb
popa
je
inc
imul
add
inc
jb
popa
je
inc
imul
imul
add
inc
jb
popa
je
inc
imul
imul
add
inc
imul
js
popa
jb
insl
inc
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
push
add
insb
outsl
addr16
outsl
js
add
inc
imul
js
add
inc
imul
js
outsb
imul
add
insb
outsl
addr16
outsl
js
outsb
imul
add
fs
imul
add
je
insb
addr16
je
insl
add
push
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
gs
insb
addr16
je
insl
dec
outsb
je
add
push
gs
insb
addr16
je
insl
push
gs
inc
add
je
insb
addr16
je
insl
push
gs
push
add
je
insb
addr16
je
insl
push
gs
inc
add
je
insb
addr16
je
insl
push
gs
push
add
arpl
insb
addr16
jne
je
outsb
add
inc
push
popa
imul
outsb
add
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
je
gs
inc
insb
addr16
popa
bound
gs
and
add
je
insb
addr16
je
insb
dec
inc
add
add
inc
gs
insb
addr16
jb
arpl
inc
gs
insb
addr16
jb
arpl
push
je
jb
inc
outsl
arpl
add
incl
popa
push
add
add
popa
jb
inc
outsl
arpl
add
inc
outsb
fs
outsl
arpl
add
popa
jb
push
popa
add
add
fs
popa
add
outsl
jb
inc
outsl
arpl
add
add
je
bound
je
jb
arpl
add
add
outsl
jb
push
popa
je
add
add
arpl
add
inc
imul
add
inc
insb
outsl
jae
inc
imul
outsb
fs
popa
je
add
insb
insb
push
popa
je
add
add
inc
insb
popa
je
outsb
push
popa
je
add
je
popa
je
add
je
push
outsl
push
imul
push
outsl
insb
jns
jb
ja
add
add
insb
arpl
imul
add
je
jb
inc
imul
outsb
add
je
imul
je
add
push
je
outsl
imul
fs
imul
add
push
je
outsl
imul
je
add
push
imul
add
add
je
jb
popa
je
push
outsb
add
add
inc
gs
imul
je
add
inc
gs
jb
inc
imul
outsb
add
je
bound
arpl
add
je
bound
arpl
add
jbe
push
outsl
inc
js
add
add
je
jne
inc
add
add
push
gs
dec
jne
push
add
add
inc
js
push
gs
dec
jne
inc
add
je
gs
dec
jne
push
add
insb
jns
gs
dec
jne
inc
add
add
push
outsl
insb
jns
gs
dec
jne
push
add
add
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
inc
push
je
dec
push
add
dec
push
je
inc
push
add
push
outsl
insb
jns
outsl
outsb
add
insb
jns
imul
push
outsl
insb
jns
gs
gs
add
insb
jns
gs
gs
outsl
add
add
push
outsl
insb
jns
imul
push
gs
imul
inc
js
inc
js
add
add
je
imul
dec
jb
inc
js
add
add
je
imul
je
js
add
je
imul
addr16
js
add
data16
je
imul
dec
jb
inc
js
dec
data16
je
imul
addr16
js
add
push
arpl
gs
imul
inc
js
inc
js
add
popa
insb
gs
imul
je
js
add
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
add
inc
gs
gs
inc
popa
arpl
add
add
inc
gs
gs
inc
popa
arpl
add
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
add
mov
push
lea
push
push
push
call
cmp
sete
test
je
mov
mov
call
pop
pop
pop
ret
push
push
push
add
mov
mov
mov
mov
call
mov
mov
call
mov
mov
movb
mov
movb
xor
mov
mov
inc
inc
test
jne
xor
xor
mov
mov
cmp
jge
mov
mov
add
mov
jmp
movb
cmp
jge
mov
mov
add
jmp
xor
inc
cmp
jl
xor
mov
add
add
add
add
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
add
mov
mov
inc
dec
jne
add
pop
pop
pop
ret
mov
xor
mov
call
ret
lea
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
dec
test
jl
inc
mov
mov
mov
mov
incb
xor
mov
mov
add
xor
mov
mov
shl
lea
xor
mov
mov
xor
mov
lea
mov
xor
mov
add
lea
call
lea
call
lea
call
lea
call
xor
mov
mov
mov
and
and
and
and
and
and
mov
xor
xor
mov
mov
incl
incl
decl
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
mov
call
mov
test
jle
mov
mov
mov
and
mov
mov
and
and
xor
mov
lea
call
mov
mov
and
mov
add
mov
inc
mov
call
cmp
jle
mov
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
je
jae
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
mov
call
mov
test
jle
mov
mov
mov
and
mov
mov
and
and
and
and
and
and
and
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
lea
call
mov
mov
and
mov
and
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
inc
mov
call
cmp
jle
mov
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
je
jae
add
add
push
add
mov
push
lea
push
push
push
call
cmp
sete
test
je
mov
mov
call
pop
pop
pop
ret
push
mov
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
decl
add
add
pop
push
inc
pop
insb
inc
pop
pop
pop
inc
inc
jnp
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
call
add
add
dec
popa
pop
dec
pop
push
push
jns
pop
inc
pop
inc
inc
add
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
call
add
add
pop
push
gs
push
push
push
dec
dec
js
push
push
inc
dec
add
add
decl
add
add
jno
popa
imul
add
in
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
call
add
outsl
dec
imul
pop
dec
jp
imul
add
add
outsb
je
insb
insb
add
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
decl
add
add
dec
inc
inc
pop
push
je
push
push
push
jo
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
call
add
add
push
inc
push
push
pop
push
pop
dec
inc
js
push
pop
inc
inc
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
call
add
add
dec
popa
pop
dec
pop
push
push
jns
pop
inc
pop
inc
inc
add
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
decl
add
addr16
dec
inc
pop
pop
push
push
add
add
decl
add
add
jno
popa
imul
add
in
push
push
push
xor
push
push
pushl
mov
lea
call
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
add
decl
add
add
dec
inc
inc
pop
push
jae
pop
pop
add
decl
add
add
jno
popa
imul
add
in
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
add
call
add
add
dec
pop
pop
push
pop
inc
push
push
pop
push
pop
dec
inc
add
add
decl
add
add
jno
popa
imul
add
in
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
decl
add
arpl
inc
inc
pop
push
je
push
push
push
add
add
imul
gs
xor
add
add
push
mov
add
push
push
mov
mov
mov
cmpl
jbe
mov
add
jmp
add
mov
mov
add
mov
sub
mov
xor
mov
fildll
fdivs
call
dec
test
jb
inc
mov
movzwl
shr
and
movzwl
cmp
jne
mov
add
mov
add
add
dec
jne
mov
add
mov
mov
test
ja
pop
pop
mov
pop
ret
add
add
add
inc
push
push
push
add
mov
mov
mov
mov
add
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
dec
test
jb
inc
mov
xor
mov
mov
mov
add
add
movzwl
shl
lea
add
mov
add
add
mov
xchg
call
inc
dec
jne
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
call
mov
mov
cmpl
je
jmp
inc
mov
mov
mov
and
test
jne
pop
ret
mov
push
mov
push
push
mov
mov
mov
push
mov
mov
mov
push
mov
mov
push
call
mov
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
cmpl
je
push
pushl
push
pushl
lea
mov
call
xor
mov
cmpw
jne
mov
add
mov
mov
cmpl
jne
lea
xor
mov
call
lea
xor
mov
call
movl
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
lea
call
mov
cmpl
je
mov
movl
mov
push
mov
push
call
test
je
lea
push
push
lea
push
mov
mov
add
push
mov
push
call
mov
mov
cmp
jne
mov
mov
push
mov
push
call
test
jne
push
call
pop
jmp
push
call
pop
jmp
push
call
pop
cmpl
je
mov
call
mov
mov
mov
mov
cmp
je
sub
push
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
call
lea
push
mov
mov
push
push
mov
push
mov
push
call
lea
push
push
lea
push
mov
mov
add
push
mov
push
call
mov
mov
add
mov
mov
mov
push
mov
push
call
mov
push
call
mov
push
push
mov
push
call
test
jne
push
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
and
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
add
mov
mov
call
movl
push
call
cmpl
setne
add
ret
mov
push
mov
add
sidtl
movzwl
shl
movzwl
or
pop
pop
pop
ret
nop
push
mov
add
sidtl
movzwl
pop
pop
pop
ret
mov
push
mov
add
sgdtl
movzwl
shl
movzwl
or
pop
pop
pop
ret
nop
push
mov
add
sgdtl
movzwl
pop
pop
pop
ret
mov
push
mov
push
sldt
movzwl
or
pop
pop
ret
push
push
add
mov
mov
push
call
cmp
ja
push
call
push
call
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
xor
mov
xor
mov
xor
mov
movw
movw
add
pop
pop
ret
push
push
push
add
mov
lea
movsl
movsl
movsl
movsl
mov
xor
cmpl
jne
cmpw
jne
cmpl
jne
cmpl
jne
mov
jmp
cmpw
jne
cmpl
jne
mov
jmp
cmpw
jne
cmpl
jne
mov
jmp
cmpw
jne
cmpl
jne
mov
jmp
cmpw
jne
cmpl
jne
mov
jmp
cmpw
jne
call
test
je
cmpl
je
call
test
jne
cmpl
jne
mov
jmp
call
test
je
cmpl
jne
cmpw
ja
cmpw
je
call
test
jne
cmpl
jne
cmpw
ja
cmpw
ja
mov
mov
add
pop
pop
pop
ret
push
add
mov
mov
mov
call
mov
call
add
pop
ret
nop
push
push
push
add
mov
movb
lea
push
call
mov
test
jle
mov
test
je
mov
call
cmp
je
test
jne
mov
call
cmp
je
mov
call
cmp
jne
movb
jmp
inc
dec
jne
mov
add
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
add
mov
push
lea
push
push
push
call
cmp
sete
test
je
mov
mov
call
pop
pop
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
mov
call
mov
test
jle
mov
mov
mov
and
mov
mov
and
and
xor
mov
lea
call
mov
mov
and
mov
add
mov
inc
mov
call
cmp
jle
mov
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
je
jae
add
add
push
push
call
push
call
mov
ret
add
je
outsl
fs
gs
imul
add
imul
gs
xor
add
add
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
ret
add
gs
je
inc
imul
outsb
gs
xor
add
add
push
gs
fs
imul
gs
imul
push
mov
push
push
push
mov
push
push
push
push
call
mov
xor
push
push
pushl
mov
call
mov
add
jmp
call
mov
sub
test
jle
push
push
push
lea
push
push
call
cmp
jne
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
push
mov
mov
call
inc
dec
jne
pop
ret
mov
push
mov
xor
push
push
push
push
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
lea
mov
call
mov
call
push
lea
mov
call
mov
call
push
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
decl
pusha
fs
je
insl
dec
popa
jl
jl
add
add
decl
add
add
jne
je
xor
add
add
call
add
add
fs
jno
jno
push
outsl
jno
inc
jnp
add
add
decl
add
add
fs
push
pusha
jp
push
mov
mov
push
push
dec
jne
push
push
push
push
xor
push
push
pushl
mov
call
mov
call
mov
lea
push
push
push
lea
mov
call
mov
call
push
push
call
movl
lea
push
mov
push
push
push
push
mov
push
call
mov
push
call
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
xor
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
ljmp
add
add
gs
fs
pop
dec
push
jbe
jo
bound
push
insl
imul
jbe
inc
jno
jno
push
push
popa
jbe
push
push
add
push
jb
fs
je
add
add
call
add
add
xor
cmp
sub
xor
xor
aaa
xor
xor
cmp
xor
call
add
add
xor
cmp
sub
xor
ss
xor
call
add
add
xor
cmp
sub
sub
xor
xor
xor
sub
add
call
add
add
aaa
xor
sub
xor
cmp
cmp
sub
cmp
call
add
add
xor
xor
sub
xor
xor
xor
sub
ss
call
add
add
aaa
xor
sub
aaa
xor
xor
xor
xor
aaa
ss
add
addr16
add
addr16
add
mov
call
mov
jmp
ret
add
gs
imul
imul
gs
xor
add
add
push
push
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
cmp
jl
mov
mov
inc
dec
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
xor
push
push
pushl
mov
lea
mov
call
mov
lea
call
mov
call
push
call
mov
test
je
mov
jmp
xor
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
add
decl
add
add
pusha
sub
inc
popa
push
push
add
in
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
call
lea
push
push
push
push
push
call
cmpl
je
mov
jmp
xor
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
xor
sub
xor
xor
cmp
ss
sub
xor
xor
cmp
sub
add
add
in
push
xor
push
push
pushl
mov
lea
mov
call
mov
call
push
push
call
push
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
decl
add
inc
pusha
ja
ja
jno
gs
add
popa
fs
jo
xor
add
add
push
mov
add
push
push
xor
mov
mov
xor
push
push
pushl
mov
xor
mov
call
mov
movl
push
call
pop
lea
push
push
call
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
decl
add
add
jno
popa
imul
pusha
jno
push
mov
add
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
call
lea
xor
mov
call
push
lea
push
push
call
lea
lea
mov
call
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
lea
mov
call
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
lea
lea
mov
call
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
decl
aas
pop
ja
push
data16
add
add
jmp
add
add
pop
jae
imul
jbe
ja
jbe
popa
imul
outsb
je
pusha
pop
xor
add
add
call
add
add
pop
jae
ja
je
fs
popa
pop
push
inc
dec
push
dec
inc
sub
inc
add
in
add
push
xor
mov
mov
mov
xor
push
push
pushl
mov
call
lea
xor
mov
call
push
lea
push
push
call
lea
lea
mov
call
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
jmp
xor
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
call
add
add
pop
push
inc
push
push
pop
ja
outsb
je
pusha
sub
add
in
add
push
mov
mov
pop
mov
mov
mov
mov
mov
cmpb
je
mov
jmp
xor
pop
pop
pop
ret
mov
xor
push
pushl
mov
mov
mov
mov
mov
in
mov
jmp
mov
movl
xor
ret
xor
xor
popl
add
ret
push
mov
mov
push
push
pushl
mov
mov
mov
pop
or
mov
mov
add
test
sete
lea
mov
mov
add
ret
mov
movl
addl
addl
xor
ret
ret
mov
mov
mov
mov
add
inc
mov
cmp
jne
ret
lea
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
mov
ss
add
xor
add
inc
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
dec
inc
add
inc
add
push
inc
add
pop
inc
add
pop
inc
add
inc
add
pusha
inc
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
call
mov
xor
mov
call
push
push
push
call
call
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
call
mov
cmp
je
push
push
call
mov
sub
push
push
push
push
call
mov
call
mov
push
push
push
push
push
call
push
call
mov
call
call
mov
mov
mov
call
push
mov
mov
mov
call
mov
call
call
call
call
test
jne
call
test
jne
mov
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
call
call
call
call
call
call
call
call
call
call
call
call
mov
test
je
lea
mov
mov
call
mov
call
mov
lea
call
mov
mov
xor
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
decl
gs
jo
imul
cmp
add
add
decl
add
fs
jo
imul
cmp
add
add
add
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
inc
inc
add
nop
add
add
add
in
add
add
add
movsb
loope
add
add
add
add
add
add
add
je
jae
mov
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
hlt
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
inc
add
imul
and
xor
xor
and
inc
add
inc
add
add
add
add
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
add
add
jb
popa
add
add
add
outsb
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
add
add
add
jb
popa
add
add
outsb
add
imul
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
insb
add
add
popa
add
add
outsb
add
imul
add
add
outsb
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
xor
xor
xor
xor
sub
add
add
sub
and
add
add
add
jb
popa
add
add
add
outsb
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
adc
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
add
jb
popa
add
add
outsb
add
imul
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
inc
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
add
add
add
jb
popa
add
add
outsb
add
imul
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
xor
add
add
or
idivb
mov
adc
incl
roll
int
jecxz
mov
jnp
jae
inc
mov
mov
or
mov
arpl
stos
jmp
cmp
cld
in
nop
mov
mov
sbb
loop
mov
ds
pop
mov
jl
or
mov
mov
xor
mov
jae
pop
mov
push
stos
cmpl
scas
cli
and
sbb
faddp
push
mov
cmp
adc
in
push
sub
and
int3
sbbl
mov
jge
xor
lcall
fsubl
in
movsb
pop
xor
stc
fcompl
mov
loop
test
mov
fdivrs
cld
push
push
ljmp
or
push
ret
fwait
arpl
push
shll
push
adc
pop
adc
push
ret
jecxz
adc
loop
lret
sbb
sbb
in
adc
aam
xchg
or
rcll
inc
sub
stos
fsubp
adc
cmp
add
imul
adc
jecxz
out
jecxz
shll
cmp
jmp
push
adc
adc
sti
and
xchg
lods
in
dec
push
push
repz
sbb
add
push
adc
inc
mov
pop
repz
adc
add
dec
jecxz
outsl
test
jecxz
cmp
adc
jnp
adc
push
rcr
rcll
adc
adc
cmp
insb
adc
jecxz
cmp
dec
adc
adc
adc
insl
aas
mov
mov
sti
mov
shl
stos
lcall
adc
sti
fistl
or
mov
mov
rcll
lea
in
jecxz
lret
fninit
jecxz
rcll
adc
in
repz
or
adc
mov
cmpsb
adc
mov
lods
lret
sti
rcll
adc
pop
shl
adc
sub
adc
ret
jecxz
or
adc
adc
stos
sahf
repz
adc
lods
sub
and
pop
rcll
adc
adc
lret
adc
shrl
lahf
cmpsl
imul
rcll
xchg
rcll
jnp
adc
rcll
adc
movsb
adc
shr
adc
rcll
adc
adc
adc
lods
lret
cld
pop
adc
rcll
adc
lret
adc
and
adc
sbb
inc
inc
sub
adc
insb
mov
lods
pop
and
mov
outsb
in
insb
adc
outsb
lods
lret
insb
insb
lret
lret
mov
adc
xchg
pop
inc
lret
lret
jecxz
insb
adc
shrl
sub
mov
insb
lods
adc
inc
lret
mov
adc
mov
lods
lret
adc
insb
sub
outsb
xchg
lret
xchg
lret
outsb
push
es
xchg
insb
lret
adc
fwait
adc
insb
lret
in
adc
icebp
rcll
shll
outsb
mov
scas
outsb
in
sbb
xchg
adc
sbb
mov
sbb
sub
mov
push
sbb
and
in
outsb
adc
out
in
cmpsb
repz
lret
or
mov
sbb
lret
or
adc
jae
mov
adc
xchg
in
sub
insb
in
in
adc
in
adc
insb
adc
or
or
adc
inc
adc
lret
sbb
sbb
mov
adc
in
shrl
inc
outsb
push
cs
mov
stos
xchg
xchg
adc
rorl
adc
push
push
adc
sub
adc
dec
insb
stos
mov
insb
mov
xchg
adc
fwait
xchg
and
int
rcll
in
adc
out
sub
adc
rol
lds
adc
adc
mov
dec
or
shrl
lret
and
sbb
xor
rclb
xor
call
pop
fsubr
fwait
shrl
sahf
notl
loope
aam
clc
jle
push
xchg
imul
pop
movsl
iret
and
push
cli
fcomps
mov
jae
push
popf
adc
aad
cs
loopne
mov
and
mov
repz
shrl
negb
jge
push
push
loopne
in
mov
test
mov
pop
adc
inc
add
std
sub
jb
xor
movq
daa
pop
sti
jecxz
cmpsl
test
mov
cs
cmc
fld
mov
jo
xchg
sbb
test
or
int3
jnp
hlt
mov
movl
jle
mov
sbb
add
outsl
pop
scas
in
jbe
and
dec
xor
test
jno
jmp
xlat
or
pop
cmp
pop
mov
daa
pop
pushf
xchg
stc
das
pop
lds
call
xchg
stos
jno
ljmp
or
ret
daa
sbb
add
dec
scas
mov
push
pushf
fcomps
cmp
inc
pusha
mov
mov
fists
adc
push
adc
cmp
bound
add
imul
jne
call
lods
add
scas
xor
push
jecxz
das
fsts
push
inc
or
fwait
jg
loope
pop
movsl
cmp
push
xor
dec
mov
inc
inc
idivb
iret
es
push
int
add
add
leave
cmp
jnp
out
mov
or
pushf
lea
mov
and
pop
jle
lods
sub
jbe
fsqrt
arpl
xchg
push
jne
mov
mov
andb
test
and
mov
mov
cmpsb
ret
fildl
cmc
mov
jge
mov
ljmp
cmp
mov
cmp
mov
and
pop
sub
enter
xchg
ja
sub
mov
mov
icebp
jmp
stc
jmp
in
fs
add
jne
add
das
mov
cs
and
pusha
dec
adc
or
in
loopne
xor
pusha
incl
cltd
sub
sbb
stc
int3
mov
mov
or
lret
or
lods
mov
dec
ret
stos
ja
sub
into
inc
mov
repz
sbb
sahf
mov
cmp
mov
jne
add
or
jne
fucomip
jl
lret
aam
push
aas
dec
nop
jbe
mov
push
sbb
xchg
jo
cs
test
xor
mov
pop
lods
iret
in
pusha
add
and
pop
insb
dec
add
dec
cmp
nop
inc
sbb
and
outsl
dec
mov
mulb
add
pop
stos
fsubrs
std
mov
lea
lcall
cmp
insb
repz
aam
xorl
fstpl
or
imul
jle
repnz
icebp
mov
pop
shrb
fcomps
jne
jge
jb
add
cld
xor
mov
push
lret
hlt
mov
loopne
mov
mov
out
cld
dec
or
faddl
insb
out
add
jecxz
fcomip
add
lods
mov
sar
mov
mov
cmpsl
mov
cmp
inc
adc
or
repz
inc
aad
rcll
inc
xchg
iret
dec
call
adc
jmp
mov
icebp
push
push
sahf
push
cli
lcall
outsb
lcall
xchg
adc
push
xchg
inc
pop
ljmp
mov
pop
cltd
inc
pop
ja
andb
or
mov
mov
xor
rcrb
jb
push
or
stos
aaa
xor
jbe
movsb
test
xchg
and
ja
je
and
or
fwait
les
cwtl
adc
sbb
outsl
dec
and
imul
adc
fwait
stos
call
outsl
aam
adc
clc
cmpsl
sbb
jp
push
mov
cld
enter
aaa
mov
adc
sub
outsl
add
pusha
jle
mov
pop
div
inc
test
pop
add
push
add
aas
lea
or
sbbb
cmp
fidivrs
xor
xor
sbbl
or
lods
into
mov
jl
or
lods
adc
cmp
outsb
out
push
sub
cld
gs
cmc
mov
and
in
inc
xchg
jo
sbb
ss
fcmovbe
aaa
cmp
and
push
and
inc
jg
or
lahf
pop
outsl
dec
fwait
push
loop
add
imul
adc
popa
or
or
adc
enter
push
jecxz
lret
enter
inc
mov
mov
js
cmc
scas
iret
xor
xor
bound
loope
jle
pop
ja
sbb
mov
repnz
inc
push
int
gs
lods
inc
xchg
cli
idivl
adc
mov
adc
dec
inc
mov
aad
lret
adc
and
arpl
hlt
insl
rcl
jecxz
and
sub
xor
cmp
inc
pop
repz
pop
dec
bound
add
and
push
ljmp
or
adc
jb
mov
add
js
add
push
roll
mov
mov
stc
push
bound
ljmp
ja
lret
idiv
fadds
outsl
xor
stos
data16
mov
xor
movsb
dec
mov
orb
insl
fwait
sbb
adc
xchg
enter
pusha
inc
nop
adc
clc
jmp
popf
fldenv
cs
loopne
xor
pop
test
sub
ficoms
cmp
rorb
iret
jecxz
lds
sub
xorl
jne
call
dec
std
or
push
call
adc
cwtl
mov
xchg
cmp
push
repz
cld
flds
test
and
rorl
dec
or
push
xor
and
xchg
jnp
sbb
pop
jl
in
push
nop
cltd
mov
dec
jnp
mov
mov
sub
mull
rcrl
mov
daa
mov
loop
or
and
jecxz
mov
push
in
push
sub
push
mov
mov
add
xlat
sbb
mov
mov
into
adc
and
pop
or
inc
mov
or
adc
gs
fisttpl
jp
call
shl
sub
loope
jno
sbb
hlt
fbld
or
in
sbbb
add
sub
dec
fwait
push
repnz
jp
mov
sub
push
push
xor
mov
cmc
push
pop
fcoml
jbe
fwait
sbb
fdiv
into
mov
mov
mov
xchg
jno
push
adc
outsl
cmpsl
and
inc
clc
mov
sub
push
adc
inc
jge
movswl
inc
cli
call
cltd
outsb
test
push
sbb
lds
repz
shlb
xchg
mov
pop
pop
xchg
in
mov
loopne
cwtl
jmp
sbb
cmp
mov
xchg
cmp
loope
addr16
leave
inc
les
insb
push
arpl
mov
fldt
es
jo
rcrb
mov
int
push
dec
enter
arpl
inc
xchg
shll
inc
mov
repnz
fdivrl
mov
enter
nop
jle
aaa
test
adc
cmc
ret
and
jg
int3
sub
test
enter
or
mov
call
fs
xor
fbstp
sbb
jg
leave
mov
movsb
or
pop
sar
insb
cld
ljmp
sahf
push
jno
into
inc
and
gs
xchg
out
mov
mov
mov
xchg
out
cmp
rorl
adc
fbld
xchg
and
jl
mov
push
int3
push
ja
lea
jmp
sbb
jo
add
fnclex
pop
or
add
ds
cvtps2pd
insl
xor
cs
std
push
fiaddl
mov
mov
add
or
adc
add
addr16
movsb
mov
jnp
cli
fisttpl
ret
pop
lock
xchg
rcr
xchg
mov
jl
stos
jp
pop
mov
jmp
jle
nop
xor
pusha
push
loopne
dec
xchg
push
roll
repnz
mov
lea
ja
or
dec
xchg
loop
fidivs
mov
lahf
call
cmp
aas
ds
imul
fsubrl
xchg
inc
xchg
and
mov
inc
iret
jle
lea
lret
and
fistl
jnp
or
movsb
lds
push
mov
insb
sub
repnz
xor
shll
test
addl
cmpsb
cmc
jl
lods
sub
jbe
xor
sub
popf
mov
leave
xchg
icebp
cmovns
arpl
bound
movsb
sub
lods
sub
pop
fildll
imul
push
cmc
pop
daa
adc
dec
clc
xor
addr16
jmp
test
insl
imul
enter
jmp
mov
mov
add
insb
roll
dec
cmpsl
cmp
xor
lds
xchg
testb
add
mov
mov
dec
cli
xor
lahf
stos
mov
rorl
sbb
cmc
mov
add
add
pushf
xchg
outsb
aad
adc
fldenv
insb
ret
scas
inc
add
int
scas
push
in
mov
sbbb
sub
mov
aam
jns
sti
xchg
cmp
or
int3
ljmp
icebp
jne
outsb
push
leave
cmpsb
fs
sub
repz
in
mov
xchg
movsl
lret
in
out
mov
add
out
xchg
lods
push
mov
test
push
jbe
arpl
mov
jp
sub
mov
ds
push
push
jae
xchg
push
aas
test
fwait
aaa
pop
and
in
cmp
push
pop
addr16
push
add
test
sub
mov
sar
popa
xor
movb
mov
lahf
sbb
nop
adc
nop
test
pop
sbb
cmp
or
gs
es
inc
ja
and
aad
ja
cmp
xor
mov
enter
adc
add
fistl
aad
xor
lret
add
jl
jmp
das
insb
pop
mov
cmpsl
cli
or
rorb
test
lock
add
mov
jbe
bound
cmp
roll
pop
lahf
inc
lcall
mov
das
daa
mov
mov
imul
in
out
sub
in
cwtl
pushf
and
pop
or
int
cmpsl
mov
idivl
or
mov
out
xchg
dec
in
pop
rep
add
xchg
in
pop
ret
sbbb
stos
out
fisubrl
push
cmp
sbbb
sub
cmp
pop
inc
mov
popa
int
lock
or
enter
into
dec
and
pop
clc
pop
xlat
mov
jecxz
sbb
hlt
shlb
cmpb
xchg
bound
inc
xchg
mov
jns
jb
mov
outsb
test
nop
adc
cld
xor
mov
push
loop
jl
out
sub
mov
mov
add
jmp
dec
adc
and
cmpsl
push
loopne
rcrl
loope
movsb
das
mov
outsl
xor
xchg
cmc
xor
sbb
push
add
out
dec
add
xchg
push
jge
xor
dec
arpl
mov
jmp
loopne
push
push
andb
mov
imul
mov
lds
loope
call
shlb
jne
cs
andb
pop
mov
sub
push
dec
mov
pushf
jmp
push
dec
cmp
pop
aaa
sub
xor
and
xorb
or
das
mov
xchg
jl
pop
movsl
add
dec
lods
mov
adc
jl
or
adc
or
push
sub
mov
nop
xor
cs
les
pop
sub
xor
jne
mov
pusha
loop
bound
pushw
jge
push
ljmp
ret
jle
sbb
push
jo
scas
lods
jae
mov
mov
lahf
pop
cld
and
jnp
sahf
pushl
push
jae
popf
pop
mov
repz
sub
xor
inc
pop
dec
fstp
xchg
leave
sub
je
mov
in
lock
sti
mov
and
dec
aas
dec
cwtl
xorl
pop
int
dec
inc
addr16
mov
ja
mov
jbe
sbb
xor
stos
ret
movsb
lea
loope
call
clc
gs
push
cmp
sub
dec
mov
push
call
xchg
dec
pop
mov
push
mov
push
inc
and
stc
mov
rcr
pushf
and
mov
mov
jns
mov
inc
movb
xchg
adc
jnp
sub
adc
cmpl
aaa
scas
test
jnp
add
sbb
shll
inc
pop
rorb
fstpt
xchg
enter
int
push
sub
pop
fcoms
and
dec
roll
pop
mov
sbb
ret
adc
lods
ror
jns
ss
out
shrl
popa
adc
aaa
ds
std
mov
xlat
mov
pop
pop
mov
sub
jae
push
jmp
mov
adc
ret
aad
fs
iret
sbb
adcb
ds
xchg
mov
imul
dec
in
and
icebp
insl
dec
test
mov
fisttpll
fwait
out
out
pop
faddl
and
and
push
mov
push
mov
sbb
mov
xor
std
movsl
mov
or
icebp
lods
popf
jne
mov
sub
jge
push
sub
mov
sar
xchg
or
ss
sub
out
push
push
cwtl
mov
mov
add
jp
dec
cmp
jmp
sbb
test
adc
sbb
mov
adc
mov
and
ss
in
fcoml
xor
mov
mov
or
add
pop
aas
lods
ja
mov
aad
movsb
jg
mov
mov
mov
sti
inc
fsubl
imul
loop
push
push
jo
outsb
adc
dec
stos
daa
xchg
outsb
dec
xor
imul
and
or
lea
mov
mov
or
lahf
outsb
dec
ljmp
pop
je
jge
dec
aam
cld
shll
vpandn
and
sbb
fisttpl
jae
lahf
imul
and
push
icebp
pop
clc
mov
mov
flds
icebp
xchg
fnstenv
pop
jnp
mov
leave
clc
mov
xchg
insl
adc
ret
cmp
out
mov
jle
sbb
lods
outsl
pop
xor
movsb
clc
and
sahf
sbb
outsl
test
mov
shl
repnz
sub
pop
push
inc
lea
scas
push
mov
fwait
mov
cli
xchg
cltd
roll
mov
xchg
sahf
lods
lods
adc
add
xchg
dec
aad
mov
repz
sub
sbb
dec
mov
call
xor
jecxz
int3
inc
cli
xlat
pop
mov
mov
dec
cli
aaa
pop
mov
xchg
fstp
lret
cmpsb
stos
int
add
adc
and
jno
sbb
sub
inc
mov
scas
jecxz
cmpsb
pop
setle
div
mov
dec
xor
leave
pop
insb
add
xor
lock
scas
in
jecxz
jg
clc
adc
or
aam
scas
dec
or
jns
loopne
pop
gs
mov
or
cmp
mov
es
test
gs
pop
dec
jge
imul
sub
mov
xchg
jp
mov
add
inc
or
call
imul
shll
movsl
adc
pop
push
fcomps
pop
shrl
add
mov
push
mov
fisubrl
push
mov
xor
jbe
jge
pushf
jmp
pop
push
addr16
scas
adc
inc
mov
adc
test
es
adc
insl
shrb
test
mov
sub
repnz
test
ror
xor
xchg
cmp
xor
mov
mov
xor
add
sub
cmc
ficoml
inc
mov
cltd
adc
fldcw
cs
add
or
shl
pusha
hlt
mov
xchg
mov
fildll
mov
ds
fdivl
iret
sbb
lret
inc
lock
xchg
add
js
rolb
loopne
popf
fidivrl
push
in
xchg
sub
sub
mov
rcl
mov
loope
sbb
xchg
aaa
xchg
jno
adc
icebp
inc
sarl
xorl
fdivs
into
jecxz
movsl
dec
push
sbb
jle
fmull
adc
lods
iret
dec
movl
mov
pop
xor
mov
inc
cwtl
mov
push
cli
orl
push
or
cmpsl
loope
or
push
and
mov
pop
add
out
sub
aas
cli
popa
test
neg
jb
loop
hlt
mov
adc
andps
xor
jp
cltd
pop
and
mov
mov
mov
xchg
lds
sbb
or
aas
mov
in
ret
enter
sarb
jle
outsb
lds
bound
jne
jecxz
ja
aas
popf
jg
mov
adc
and
lods
add
test
sub
jnp
mov
xchg
mov
insb
fs
iret
adc
mov
cs
add
mov
rclb
mov
imul
daa
cmp
test
xchg
sbb
cli
and
mov
sbb
xchg
inc
sub
inc
mov
enter
dec
xchg
dec
jp
mov
mov
xchg
xchg
lcall
in
and
test
andl
das
std
rol
movsb
or
jp
sub
dec
imul
inc
aas
push
dec
push
sahf
mov
lret
xchg
cs
xlat
sbb
sub
or
popa
cmc
cs
push
lret
push
jp
sub
jp
mov
mov
cltd
leave
push
and
std
outsl
inc
cwtl
icebp
subb
dec
cmp
mov
incb
jg
into
jp
imul
mov
cmp
dec
stos
mov
push
xor
addl
inc
dec
push
adc
loop
add
aam
mov
jb
out
arpl
enter
xchg
push
scas
dec
jg
in
pop
das
std
idivl
adc
mov
inc
adc
notl
mov
call
cmp
lea
cmc
mov
xchg
inc
aaa
ljmp
push
sbb
push
std
mov
xor
lea
inc
xchg
sti
cmpsb
arpl
add
shlb
dec
insl
mov
xor
pop
push
loopne
out
iret
add
aad
nop
add
and
lds
enter
cmp
adc
cs
add
mov
dec
aam
sub
add
mov
roll
fstps
cltd
jnp
bound
push
jne
sbb
fimull
into
xor
stos
and
jge
push
push
loop
xchg
or
cmp
sub
and
aas
stc
jno
ret
into
test
sub
rolb
jle
subw
jp
mov
stos
sti
leave
xor
push
ret
pop
mov
adc
sar
ss
arpl
jecxz
pop
mov
mov
add
shll
push
add
test
js
loop
outsl
add
xorb
push
shrl
cmp
lea
hlt
dec
jno
push
jns
out
cmp
int3
push
or
fistpll
shr
out
mov
pop
pusha
lret
xor
or
fnstcw
mov
push
or
sub
loopne
mov
loopne
add
xchg
add
data16
sub
cmp
xchg
push
jge
in
lods
pusha
mov
ficomps
jle
dec
mov
in
outsl
cmp
in
call
inc
or
pusha
jge
jae
add
mov
or
dec
repz
add
dec
sahf
scas
push
repnz
adc
inc
cmp
push
sbb
jle
out
sbb
xchg
in
outsl
adc
vpsrlq
jge
push
pop
test
mov
xchg
add
icebp
fnsave
sbb
out
mov
lock
jbe
dec
pushw
enterw
lods
cwtl
stos
pop
push
dec
xchg
cmpsb
test
mov
dec
pusha
mov
sbb
xor
mov
daa
ret
pop
inc
inc
dec
pusha
adc
push
mov
xchg
push
push
xlat
mov
out
js
ret
fdiv
fimuls
into
lahf
mov
out
mov
fnsave
or
mov
mov
lds
inc
inc
pop
mov
cmp
mov
pusha
popl
mov
jge
std
imul
repnz
lock
push
mov
jae
mov
mov
repz
dec
xor
stos
dec
fmuls
dec
shl
add
in
adc
mov
pop
sub
xchg
dec
arpl
test
cmp
cmp
push
fdivrs
pop
mov
sbb
mov
ss
pop
pushf
stos
mov
jne
jne
out
and
rcrb
mov
cld
stos
aaa
nop
lock
cmpsl
repnz
lret
mov
lret
xchg
push
push
and
jns
std
in
popa
pushf
pop
andl
sub
sbb
sub
pop
mov
fnstcw
stos
aas
mov
adc
jbe
hlt
xchg
xor
dec
mov
jbe
push
sub
mov
ja
fwait
hlt
pop
mov
push
sub
push
jl
pusha
stos
inc
mov
int
fcompl
jecxz
jnp
pop
jge
inc
adc
aad
movsl
sub
dec
aad
or
jg
add
rorl
or
add
push
add
cs
push
daa
lods
xchg
loopne
out
leave
xlat
mov
inc
inc
mov
ljmp
pusha
in
lods
inc
or
scas
js
pushf
mov
and
andl
sub
pop
or
aad
xchg
ds
xchg
xor
push
out
sub
fcomps
fldl
push
out
sbb
pop
jnp
in
es
jl
cld
hlt
ds
loop
jle
mov
movsb
mov
add
dec
and
jae
inc
inc
sub
cwtl
lcall
adc
ja
mov
shlb
ret
ds
push
dec
icebp
push
sub
cld
mov
stos
mov
sbb
xlat
or
push
mov
add
mov
pop
cmp
pop
in
add
pop
pop
and
and
lahf
icebp
push
xor
jmp
jo
clc
inc
sti
pop
dec
and
xchg
ss
jo
cwtl
pop
mov
pop
hlt
sti
mov
in
sbb
in
loope
jae
xchg
add
push
mov
repnz
xorb
or
mov
and
sarb
es
sub
cmpsl
add
or
mov
mov
add
or
push
into
movl
lcall
cmc
xor
sbb
mov
jo
cmp
cmp
cwtl
call
frstor
xor
inc
leave
shrb
lods
ret
xchg
in
pop
rorb
dec
inc
xchg
sub
sbb
insb
and
jmp
push
push
jae
jo
test
pusha
fwait
in
mov
pop
xor
push
ds
mov
mov
cmp
hlt
fildl
out
test
push
or
mov
jmp
shll
js
mov
and
jae
dec
sub
fistpll
shrb
mov
push
std
mov
loop
rolb
cld
js
mov
mul
mov
dec
jecxz
inc
out
push
mov
data16
xor
pop
add
rcl
jae
lea
lret
pop
iret
dec
xchg
or
adc
popf
push
outsl
or
sub
pushf
push
aad
test
cltd
es
xor
mov
adc
mov
mov
lcall
jbe
inc
mov
int
ss
les
or
cmp
adc
push
sarl
lods
lret
aas
push
stc
mov
xchg
ret
sub
out
rclb
fs
xchg
pop
mov
fdivp
xor
xchg
sbb
sub
lcall
in
push
ffreep
rorb
movsl
aaa
in
fcomps
fdivrl
scas
in
iret
jle
jne
jmp
jb
out
aad
xchg
js
cmpsl
pop
fnsave
pusha
test
xchg
sarb
xchg
dec
jno
leave
jns
mov
ret
ror
push
xchg
jo
and
xor
add
aaa
outsb
or
push
add
cmpsl
mov
sbb
imul
lahf
inc
sbb
and
sbb
xor
pop
mov
jno
test
aas
lods
jb
pop
jns
push
jmp
jne
cmp
aam
mov
lods
nop
dec
xchg
loop
mov
pushf
xchg
icebp
inc
movsl
or
in
mov
cmc
jp
or
test
mov
pop
and
and
ret
stos
jmp
xor
cmp
data16
neg
jl
inc
cmp
adc
imul
dec
pop
add
xchg
sub
sub
insl
imul
xchg
push
add
int3
mov
das
adc
addr16
rolb
add
das
scas
push
or
xor
in
xchg
loop
cmp
xor
leave
mov
fs
dec
repz
out
push
jae
jno
xor
ret
scas
mov
ret
jge
test
or
mov
dec
cld
jns
mov
or
or
sti
pop
add
mov
data16
inc
scas
jb
adc
dec
cmp
mov
cwtl
and
neg
mov
mov
loop
or
sarb
pop
add
fwait
push
loopne
movsl
dec
addb
test
jns
ss
addr16
insl
add
test
sbb
cmp
insb
sti
mov
aam
cmp
pop
or
cmpsl
fs
mov
ret
mov
xchg
xor
inc
sub
lahf
js
mov
fsts
es
pop
sbb
inc
add
jl
sbb
lahf
jp
frstor
mov
jae
xchg
adc
push
mov
pop
lret
and
push
and
inc
dec
xlat
mov
xchg
movsb
dec
sbb
inc
insb
cmp
out
in
arpl
movsb
rorl
mov
test
call
jno
inc
sub
mov
or
mov
les
icebp
jecxz
mov
push
aad
loope
repz
mov
add
push
mov
in
sbb
insl
xchg
movl
adc
or
lahf
cmp
negb
fdivl
push
sub
adcl
roll
leave
or
jne
shrl
jecxz
loopne
or
mov
mov
xchg
cmp
in
fdivl
das
imul
outsl
repz
lods
inc
mov
out
mov
ss
add
sbb
das
das
mov
enter
pusha
bound
push
xchg
pop
jg
cmp
lret
and
lret
sub
or
mov
push
bnd
in
and
mov
aad
and
out
xchg
add
mov
pause
pusha
repnz
mov
adc
cwtl
dec
xor
inc
jno
cmp
cmc
cwtl
cmc
out
btr
xchg
inc
mov
sbb
pusha
jns
mov
jbe
fcomps
movsl
fs
fcoml
sahf
xchg
insb
adc
data16
or
xor
das
insb
iret
loopne
push
and
add
leave
iret
dec
push
cwtl
pop
jle
fs
mov
jne
jno
outsb
mov
dec
ficoml
cmp
xchg
imul
xchg
pop
call
out
mov
stos
repz
mov
lds
xor
jbe
push
mov
dec
aas
xor
inc
sub
testb
pop
insb
xchg
mov
and
and
mov
mov
push
mov
dec
ds
push
out
inc
sbb
jo
lods
mov
repz
in
out
lret
popa
inc
lret
jl
lahf
es
rol
ret
xor
dec
jo
lret
mov
and
mov
add
mov
cmp
scas
enter
inc
add
push
mov
mov
or
out
mov
xor
and
sti
and
xchg
popf
aas
mov
xchg
aas
inc
out
fistps
popa
int
add
movsl
sarb
cmp
and
xchg
xchg
pop
ds
jae
mov
mov
mov
mov
mov
imul
sub
fidivs
shrb
mov
pop
mov
jmp
and
test
xor
inc
int3
cs
inc
out
int3
add
pop
mov
mov
xor
sub
cwtl
mov
loopne
imul
fdivrl
inc
cmc
mov
fstpl
in
cmp
leave
hlt
dec
inc
adc
movsb
add
add
pop
push
jg
or
mov
mov
mov
or
cmp
dec
cltd
aam
cmpl
icebp
lret
mov
ss
out
repnz
inc
lock
pop
push
mov
push
and
sahf
int
push
add
sub
fiaddl
pop
push
jge
arpl
inc
pop
pop
shld
dec
push
push
cmpsb
insl
scas
xchg
inc
loopne
repnz
lea
ja
dec
dec
mov
out
cwtl
push
or
push
cltd
cltd
scas
test
arpl
insl
and
ret
shrb
xchg
pop
mov
xchg
js
aaa
mov
out
lock
or
xchg
mov
aaa
adc
aam
xchg
jnp
push
xchg
jne
repz
and
xor
movsl
pop
mov
lock
movsl
push
add
jnp
cmpsl
push
push
cmpb
sti
sarb
hlt
lods
cmp
mov
jo
insb
add
or
arpl
sbb
pop
mov
cmp
mov
jmp
stos
adc
outsb
test
cmp
jo
add
std
xor
xor
fwait
dec
into
jmp
dec
bnd
mov
out
sub
jl
testb
add
loopne
and
inc
mov
adc
push
je
inc
xor
jle
movsl
in
outsb
mov
xchg
roll
xor
jecxz
lcall
movsl
xor
xchg
pusha
sbb
pop
cmp
inc
aas
or
push
ret
xlat
ffree
push
sbb
mov
testl
xor
icebp
xchg
lock
cmp
fs
add
leave
push
nop
add
sub
add
pusha
pop
xchg
stos
leave
test
sbb
mov
push
daa
cmp
adc
fwait
cvtps2pi
mov
dec
movsl
dec
shll
mov
int
dec
test
pop
mov
pushl
insl
push
or
loope
jp
loopne
shlb
ja
mov
adc
adc
mov
popa
out
mov
mov
inc
fdivs
stos
jp
push
push
loopne
gs
xor
stc
addr16
out
jl
add
xchg
aam
push
adc
mov
dec
push
or
add
mov
lods
aaa
cmpsb
jmp
dec
sbbl
frstor
or
mov
jl
dec
jmp
xchg
imull
pop
pop
mov
push
cs
rcrb
pop
call
mov
mov
add
mov
inc
sub
push
scas
cmp
int3
xchg
hlt
lds
ficoms
and
jne
int3
leave
shll
or
pop
pusha
cmc
into
movsb
xchg
das
cwtl
xor
aaa
je
adc
cs
loopne
xor
adc
xchg
jne
negl
inc
in
imul
jle
loopne
movsb
add
mov
into
arpl
dec
pop
mov
sar
mov
mov
adc
shl
rcl
inc
jne
push
les
aaa
xlat
sub
mov
lret
rolb
jecxz
out
sarb
dec
xchg
xchg
insl
sbb
mov
shll
cmp
adc
je
pop
sub
lcall
test
add
cwtl
dec
adc
push
sbb
jb
addr16
inc
dec
icebp
cld
pusha
adc
jbe
lods
out
push
mov
mov
or
addr16
fadds
rcll
and
push
movsb
lret
jecxz
stos
aaa
adc
aad
data16
push
or
stos
scas
sbb
ret
add
lods
cmpsb
inc
and
test
xor
push
in
xor
mov
jnp
nop
xchg
repz
js
jne
xchg
xlat
push
ret
mov
sbb
cli
lods
repz
dec
cltd
and
addr16
push
ficoml
pop
xor
mov
mov
inc
inc
push
mov
dec
pop
jae
pop
or
popf
out
or
xor
push
jge
fwait
icebp
outsl
mov
test
sbb
ret
xchg
lods
data16
inc
push
mov
mov
imul
and
mov
scas
inc
fwait
cmp
repnz
and
aas
push
into
inc
enter
ss
xor
push
cmpb
xor
xchg
jl
aaa
sub
ret
fadds
sahf
ret
sub
push
xlat
xorb
and
or
ret
pusha
dec
xchg
loop
icebp
dec
xchg
cli
dec
cmpl
es
mov
dec
xor
ret
shl
mov
out
pop
xchg
and
cmc
in
add
xchg
push
test
ficomps
adc
dec
push
in
imul
pop
test
pop
mov
inc
push
fnstcw
inc
dec
notb
loope
mov
jno
aas
cmc
inc
loope
sub
ret
popf
out
stos
mov
add
movl
mov
jns
xor
aad
imul
adc
lock
xchg
pusha
lea
call
adc
hlt
cwtl
push
mov
and
adc
movsl
xor
dec
pop
movsl
mov
cmpsb
daa
out
sti
adc
or
mov
mov
bound
pop
push
push
stc
and
xlat
pmullw
ret
jge
push
aas
mov
xchg
xchg
sti
in
cltd
push
jp
cmp
or
pop
orl
test
imul
pop
fnsave
jno
aas
mov
adcb
add
jg
xchg
adc
out
cmp
mov
mov
inc
sbb
shrb
bound
xchg
insl
fidivl
or
push
repnz
rorb
mov
fcmovnbe
mov
mov
dec
lret
jbe
mov
mov
icebp
mov
dec
xlat
mov
sub
fldl
dec
xchg
call
pop
mov
popf
imul
push
inc
jp
fwait
ret
stc
cmp
add
pop
mov
popa
paddb
cltd
inc
jae
push
xchg
test
cmpsb
aam
daa
ds
push
sub
push
aam
sti
xor
orb
andl
decb
xchg
icebp
jo
cs
aad
push
sbb
dec
pop
fld
cmc
jp
enter
sub
pusha
xlat
xor
ja
inc
or
shl
cmpsb
jbe
xchg
stos
inc
sahf
add
insl
mov
call
dec
and
push
dec
adc
repz
cwtl
cwtl
out
dec
mov
je
mov
push
add
cmpsl
sbb
push
rorb
aam
leave
enter
mov
push
jnp
in
aaa
dec
dec
jmp
repz
dec
jno
cmpsb
and
xor
outsb
add
dec
pop
test
mov
mov
in
std
inc
jmp
fwait
mov
sub
test
arpl
cwtl
add
jg
mov
jno
outsl
xchg
insl
imul
pop
xorb
cltd
subb
xor
and
mov
push
leave
ss
or
ret
insl
cmpsb
lret
jae
inc
cmc
sub
loope
out
clc
jbe
or
xor
jmp
or
and
loop
cmp
jbe
xchg
daa
or
push
jg
mov
fwait
and
add
insl
imul
leave
sbb
xor
daa
ret
test
push
cwtl
enter
icebp
jbe
mov
inc
idivb
xchg
bound
sub
pop
push
popa
test
inc
sub
jns
adc
insl
scas
push
pop
les
push
jge
mov
jo
or
cmp
xchg
subl
sbb
sub
bound
or
icebp
push
xchg
cwtl
inc
jno
sbb
or
nop
mov
jno
call
xchg
dec
incl
ret
pushf
arpl
sbb
in
fs
ret
filds
and
adc
adc
jp
data16
clc
xor
ret
pop
test
inc
adc
cmp
insl
jno
mov
fcomip
mov
mov
pusha
ds
cli
lcall
jg
fcom
out
pop
xchg
scas
orl
loop
cld
pop
mov
shl
popa
leave
mov
iret
fldt
jp
mov
gs
pop
dec
mov
icebp
pop
push
mov
sbb
jb
ljmp
or
push
shrb
sub
pop
jecxz
fdiv
in
inc
or
pop
mov
jge
add
jbe
hlt
cmp
sub
stos
cmp
enter
movsl
aam
push
or
movsb
popa
outsb
xor
sbb
pop
inc
leave
mov
cmp
cmpsb
mov
xchg
hlt
dec
mov
fwait
mov
cmp
ja
pop
je
xor
sbb
cmp
loop
push
ss
or
add
xor
rorl
mov
add
dec
shll
aas
inc
push
lods
in
dec
mov
sub
or
and
and
sub
daa
mov
cmp
mov
fucomi
in
std
mov
push
jp
xchg
movsl
mov
add
mov
sbb
loope
mov
xchg
pop
add
add
push
fidivl
sbb
push
fimuls
jl
sbb
push
mov
sahf
insl
add
jb
xor
cmp
push
mov
imul
call
or
or
mov
out
movsb
mov
mov
sti
cld
lods
xchg
sbb
dec
lret
and
xor
sbb
scas
out
xlat
je
and
std
push
dec
jnp
mov
or
jno
inc
sbb
dec
add
aam
repz
imul
call
push
stos
mov
sub
add
cwtl
jg
nop
xor
push
rcll
outsl
movsb
shl
inc
mov
sbb
sbb
mov
cmpsb
adc
pop
add
cltd
je
dec
mov
lahf
out
clc
js
in
pop
dec
fwait
push
dec
test
push
xor
cmpsl
xor
lret
or
repnz
out
stc
dec
cmp
out
jbe
lock
fildl
mov
out
jne
sbb
xor
dec
jmp
mov
sbbl
add
loope
add
xor
inc
and
mov
xchg
loopne
mov
mov
in
lock
shlb
stc
lret
aam
shl
add
xor
dec
aaa
cmp
sub
jmp
movsb
push
sub
leave
push
sbb
push
rorl
popa
xchg
idivb
loope
aam
dec
lret
loop
xchg
lahf
sub
cmp
and
inc
or
xchg
mov
jbe
sub
mov
cmc
mov
jae
jle
dec
int3
and
sub
rclb
iret
shlb
add
mov
in
ljmp
das
jecxz
outsl
pop
ret
pop
loope
or
rcrb
or
out
and
and
pop
mov
and
in
pushf
arpl
push
push
jp
aam
test
in
in
mov
hlt
add
cs
or
loop
pop
pop
cmp
jbe
rcrl
out
xor
nop
adc
dec
push
repnz
mov
push
test
xorb
inc
mov
lahf
sbb
aad
mov
fiaddl
pop
cltd
cmp
les
xchg
jmp
cmpsb
cltd
pop
shll
push
lds
fnstenv
daa
mov
adc
in
mov
ljmp
test
jae
or
fs
xor
in
out
dec
mov
push
mov
stc
cmp
into
call
xor
lret
xchg
in
sub
cmpb
cwtl
cld
adc
sub
xor
lods
jl
xchg
sub
mov
add
aad
popf
in
sub
fdivrl
pop
cmp
dec
sub
insl
jle
movl
clc
icebp
add
sbb
popf
fsubrl
xchg
sahf
dec
sub
pop
or
jno
cmp
mov
sbbb
iret
cli
inc
and
and
and
in
add
lret
das
pusha
out
ja
sbb
cli
sbb
sqrtps
xchg
mov
incb
test
mov
sub
xchg
jmp
in
cmc
ss
nop
add
jnp
push
je
xor
pop
dec
in
push
sub
aas
adc
xchg
inc
push
add
lds
jno
sbb
cmp
adc
mov
aad
sahf
mov
inc
jno
adc
rcr
mov
cld
or
cwtl
and
mov
push
jns
js
and
idiv
add
mov
xlat
pop
sarb
mov
jo
or
int3
dec
jno
dec
xchg
sbb
gs
fcmovnbe
jbe
mov
adc
outsl
scas
jp
sbb
fisttpl
and
rcrl
xchg
lret
xchg
add
aam
shl
add
pusha
bound
mov
dec
scas
mov
outsb
cmpb
enter
mov
rcrl
jo
mov
out
mov
add
stos
xchg
push
fsubrl
jno,pn
adc
cld
stos
or
and
xor
and
mov
aas
jns
jae
inc
std
inc
add
pop
iret
xchg
daa
xor
push
cmp
xchg
sbbb
cmc
aam
cmp
stos
cli
inc
sbb
add
and
jo
mov
decb
stos
sub
inc
cmp
shll
in
jnp
fidivrs
aas
add
or
mov
ds
adc
ret
inc
stos
cwtl
mov
iret
add
ja
div
cmpsl
or
test
push
test
outsb
int
stos
jbe
nop
and
mov
les
push
int3
lcall
pop
mov
dec
xor
mov
push
ljmp
xchg
ret
pop
jecxz
pop
sub
xchg
lret
ja
sbb
dec
repz
jno
fbstp
mov
test
dec
inc
push
push
sbb
ja
fmul
fadd
out
and
gs
ss
push
leave
fidivrl
gs
stos
out
mov
dec
add
lds
icebp
imull
and
bound
inc
push
cwtl
call
stos
jle
ret
dec
test
ret
xor
or
xchg
push
loop
mov
out
cmpl
xchg
pop
cmp
dec
lcall
bound
or
jmp
mov
sub
jns
bnd
inc
stc
adc
push
outsl
mov
sar
mov
repz
sub
push
add
stos
pop
mov
xor
mov
mov
push
jno
push
in
fidivrl
std
jge
pop
cmpl
sbb
lods
movsl
push
mov
fs
mov
arpl
push
mov
xor
pop
dec
adc
mov
jge
test
scas
adc
fmulp
in
or
adc
hlt
sti
sub
mov
lds
or
call
add
push
in
pop
cmp
scas
pop
adc
outsl
loope
ret
call
add
cmp
and
ljmp
jl
cltd
dec
dec
adc
push
mov
jl
repz
push
stos
mov
subps
push
out
jb
mov
les
cld
vpaddd
ss
mov
push
mov
inc
imul
icebp
outsl
insl
scas
shlb
push
xchg
loopne
popa
push
clc
stos
inc
std
cld
leave
lods
test
jmp
les
or
sbbb
shrb
shrl
pop
mov
lds
adc
push
mov
mov
pop
xor
gs
mov
aad
sub
cmc
and
pushf
movb
dec
sub
push
and
push
lds
add
loop
pop
mov
xchg
lcall
inc
es
pop
xchg
sub
sub
mov
test
and
in
push
dec
outsb
enter
shr
sbb
sti
ds
cmc
aam
dec
add
mov
or
jns
hlt
neg
iret
fs
scas
xchg
pop
into
loope
push
ss
adc
pop
mov
cmp
int
out
sti
mov
hlt
dec
mov
jl
mov
dec
into
xchg
push
push
xchg
call
cltd
cmp
adc
cmp
push
push
and
dec
add
pusha
xchg
addr16
mov
push
adc
jbe
dec
outsb
xchg
arpl
mov
jg
push
jle
stos
sbb
nop
inc
pop
sarl
movsl
pop
sbb
shll
add
inc
cmp
imul
loopne
out
test
xchg
lcall
out
sbb
adc
dec
shrb
mov
mov
imul
or
mov
sub
in
sbb
dec
pop
xchg
adc
cmc
dec
cltd
mov
inc
pop
xchg
negl
jb
xchg
dec
cmpsl
std
flds
aad
js
addb
add
dec
enter
stc
and
pop
jecxz
mov
and
mov
mov
bound
hlt
inc
or
cmp
mov
fdivp
or
add
js
minps
push
and
push
add
test
lea
push
fs
mov
sbb
out
jb
cmc
dec
cld
pop
mov
rol
out
sar
sahf
sbb
jg
and
pop
mov
or
mov
rorb
mov
push
sub
and
scas
xchg
mov
jae
xor
out
lock
adc
sbb
jg
out
xchg
xlat
sar
mov
paddusw
cwtl
jne
iret
enter
in
jno
pop
testb
or
dec
mov
ljmp
movsb
popa
jae
or
fnstenv
push
aam
xor
aaa
pusha
ret
ret
inc
hlt
sti
cld
jle
shl
cmpsb
insl
or
and
adcb
lret
adc
dec
leave
xchg
lret
pop
jns
sti
jne
cmp
rol
add
rcll
data16
stos
loope
idivb
sub
push
stos
sbb
jle
add
addl
out
sub
leave
pop
dec
addr16
imull
mov
adc
sub
xchg
dec
es
loopne
outsl
add
pop
outsb
mov
and
adc
pushf
sbb
mov
inc
popf
mov
or
xor
arpl
jmp
test
sub
pop
xchg
cltd
xor
pop
outsb
xor
adc
xchg
fnstcw
aas
fdivrs
outsl
gs
ja
xor
pop
cli
mov
cmp
stos
leave
sub
dec
int3
push
xchg
ret
jbe
jge
add
mov
clc
sar
xorl
push
stos
cmp
mov
loopne
icebp
repz
add
mov
shlb
sub
cmpsb
cmp
sub
mov
or
cmp
aaa
sub
jle
lea
gs
lcall
fmul
add
cmp
jecxz
cmp
out
jl
push
mov
and
sub
loope
mov
add
lahf
into
hlt
dec
mov
out
rorl
cmp
jge
lahf
lcall
lods
xor
fwait
stos
inc
jl
loop
fstl
pop
shr
stc
lret
sub
pusha
and
mov
ret
fstpt
mov
add
mov
insb
outsl
cld
mov
jge
mov
xor
imul
cmc
cwtl
in
push
jbe
fisttpll
inc
scas
xchg
fs
dec
gs
stos
pushf
sti
sbb
and
in
out
pusha
loope
repz
cmp
in
pop
fstpl
mov
imul
and
xchg
out
xchg
stos
repz
push
cwtl
inc
push
push
xor
pop
iret
push
aaa
mov
xlat
std
data16
xchg
push
cs
pop
js
push
int3
popa
les
add
jno
push
and
cwtl
rclb
imul
push
sbb
mov
test
enter
xchg
lods
mov
add
outsl
and
insb
xchg
mov
aaa
cmpsl
jecxz
pop
mov
popa
cmp
mov
jno
sbb
lret
mov
outsb
xor
or
push
bound
cmp
loopne
add
and
jnp
cmp
jnp
jp
js
jne
cwtl
mov
pop
rclb
sbb
fiadds
adc
cwtl
push
sbb
or
inc
xor
mov
or
mov
push
mov
jbe
addr16
jp
jmp
int3
sbb
xchg
bound
hlt
ja
xchg
xchg
into
out
sti
cmp
loope
pop
xor
jmp
jbe
out
andl
mov
sarl
scas
int
mov
movsb
leave
loop
cmc
lcall
mov
jmp
adc
xchg
sub
movsb
or
jecxz
add
jle
xchg
fstpt
es
xor
jecxz
dec
sbb
popa
stos
cmp
insl
lret
loop
scas
imul
sub
sub
shrl
js
pop
loope
add
int
inc
xchg
faddp
pop
stos
cmp
inc
leave
test
xchg
mov
js
out
or
mov
aas
add
fbld
jl
cmp
data16
pop
sub
dec
add
dec
rolb
mov
fmuls
test
xorl
rolb
in
movsl
mov
lea
xor
dec
xor
mov
outsl
popf
movsb
ja
inc
cltd
imul
inc
jns
loopne
dec
mov
pop
jecxz
pop
gs
pop
aaa
mov
jle
cs
push
insl
lea
xchg
cmp
xchg
insl
jno
or
sub
add
test
fsubl
imul
dec
xchg
pop
fstpt
gs
sub
lahf
adc
xchg
xchg
fdivs
dec
jle
mov
adc
add
inc
or
lods
loope
xor
je
push
enter
test
sbb
loope
lahf
ss
int3
xchg
rclb
in
xchg
xchg
aaa
fisttpll
sub
fsubrs
sub
inc
sub
push
add
mov
out
inc
cmpsb
popf
movsb
int3
mov
xchg
scas
cltd
mov
fwait
icebp
xor
insl
mov
test
sar
jnp
hlt
push
mov
pop
insb
xchg
mov
xchg
push
add
popf
xchg
jmp
add
jp
push
arpl
xchg
mov
mov
push
jmp
mov
add
clc
int3
iret
xor
mov
fsubrl
and
jo
pop
gs
and
cmpsb
push
dec
cmp
popf
sub
xchg
mov
inc
pop
in
sbb
loope
add
ffree
adc
inc
push
inc
inc
jns
and
in
fs
sub
cwtl
adc
movsl
push
lods
jle
cld
inc
in
movsb
out
sbb
push
cmpsl
push
shlb
scas
call
data16
dec
out
cs
cmp
mov
les
in
mov
or
jle
leave
es
push
xor
or
cmp
out
rcll
cltd
adc
shrl
in
daa
les
out
nop
inc
xchg
pop
cmp
xor
inc
dec
or
pop
cmp
fwait
inc
inc
cld
or
leave
loopne
pop
outsl
fcmovne
ret
xchg
add
popf
mov
sti
pop
jle
mov
sti
jae
adc
dec
push
mov
cmc
in
push
push
jno
cltd
lea
es
das
dec
jae
cmp
pop
add
repnz
cmpl
push
jmp
pop
push
sahf
lahf
das
push
jae
in
jns
jne
push
stos
dec
mov
iret
leave
nop
jb
sbb
mov
testb
push
cld
or
add
xchg
mov
sbb
mov
pusha
xchg
lea
xchg
sub
sub
jle
out
add
outsl
mov
mov
xorl
insl
sti
out
inc
jmp
dec
cmp
inc
jbe
and
repz
loope
pop
inc
pop
sbb
mov
mov
push
mov
jle
mov
aas
test
clc
dec
test
jno
shrl
inc
dec
cs
icebp
jle
mov
jo
iret
push
andb
inc
repz
mov
lods
jecxz
daa
push
mov
push
push
fidivs
cmp
lea
outsb
repz
pop
gs
add
push
sub
or
push
pop
sbbb
inc
mov
fildl
fdiv
add
and
push
fwait
aas
xchg
mov
fldt
or
mov
mov
pusha
lret
repnz
mov
cmpsb
sti
bswap
dec
sbb
inc
push
cmp
mov
xor
popa
push
add
lahf
pop
ror
das
pop
inc
xor
inc
loopne
pop
push
adc
sbb
ljmp
fildl
mov
dec
movsb
mov
call
iret
xchg
add
push
pop
xlat
sbb
mull
adc
loopne
cmpsl
inc
pop
out
cli
push
push
out
sub
xchg
push
pop
mov
ja
movsl
ja
les
int
stos
lds
add
xchg
and
std
push
fcoms
sbb
pop
sub
cwtl
ja
cmc
pushl
inc
mov
rcl
scas
or
push
rorb
mov
je
cmpsb
add
sub
arpl
fistpll
inc
dec
and
stos
jae
sbbl
adc
or
adc
xchg
les
cmc
xchg
pop
out
inc
mov
mov
insb
in
sarb
xor
dec
jns
into
mov
sbb
cltd
lea
add
sbb
mov
mov
push
and
pop
xor
shlb
test
mov
pop
push
push
mov
popa
cmp
and
mov
cmovns
or
dec
inc
add
lds
arpl
xchg
dec
add
pop
xor
fst
addr16
nop
mov
arpl
inc
mov
xor
mov
das
or
shrb
xor
lret
or
jo
and
pop
pop
xchg
test
pop
sbb
or
mov
fcompl
cmp
movsb
push
inc
pop
mov
rorb
outsb
pop
dec
jb
sahf
jns
or
jae
or
adc
out
movq
inc
sbb
loopne
bndldx
xor
jno
pop
sub
add
in
les
lret
insl
mov
or
cmp
mov
or
push
sarl
fwait
scas
std
lret
mov
ss
add
aam
loop
dec
je
je
dec
inc
iret
loopne
aam
sub
xchg
hlt
out
icebp
negb
cld
mov
mov
dec
ret
cmp
cmpsl
xchg
sbb
sub
xchg
in
loop
stc
lret
or
cld
mov
mov
mov
cld
pop
inc
iret
or
loopne
fwait
daa
jge
mov
rorl
pop
test
sbb
out
pop
stos
xchg
inc
out
out
lods
push
mov
inc
jmp
lret
jg
popa
mov
and
vandnps
rorl
lds
ficomps
test
mov
lret
in
or
sti
in
xchg
add
test
dec
dec
popa
pop
scas
lds
ja
out
ret
pop
enter
aas
hlt
jbe
pop
cwtl
dec
aad
push
dec
fld
and
and
fistl
aaa
mov
jns
xchg
ss
xor
rorl
xor
orb
ret
lret
stos
sub
ljmp
jg
cmp
in
fsubs
mov
stc
out
lret
fstpl
or
fisubrs
add
pop
mov
sub
hlt
mov
mov
push
jb
jl
movsb
aaa
fwait
mov
out
ret
in
xor
inc
es
clc
dec
push
lcall
add
push
and
insl
ljmp
scas
adc
push
push
fisttpl
push
jecxz
fisubrs
into
mov
or
aaa
int3
jmp
adcl
adc
and
insb
imul
pushl
xchg
leave
sbb
rorl
aaa
rcll
leave
clc
mov
mov
xchg
enter
xchg
fisttpl
shll
pop
test
cmp
out
and
jg
dec
sbb
push
inc
xchg
ljmp
inc
and
idivb
lods
in
test
mov
add
or
fisttps
and
adc
push
test
dec
popf
cmpsb
in
ss
pop
imul
out
pop
dec
iret
mov
mov
mov
mov
xor
scas
das
jg
cs
inc
sti
mov
xchg
and
mov
sbb
pop
inc
les
push
fisttpl
scas
or
movsl
and
rcll
ret
pop
mov
cmp
add
stos
jbe
push
xchg
add
loope
jmp
out
stc
roll
decb
int3
xchg
fmull
jge
cmp
lcall
cltd
add
adc
mov
adc
es
aad
adc
push
imul
jp
xor
sbb
cmpsb
or
into
icebp
cld
dec
jge
jo
jecxz
pusha
sub
dec
movsl
xchg
fs
cmpb
pusha
jmp
push
call
fcomps
enter
pop
jno
cmp
pop
xchg
es
cmp
fcos
xor
popf
mov
mov
cmc
mov
mov
cld
or
jmp
push
xorb
hlt
dec
pushl
cmp
negb
es
xchg
leave
cmp
fimull
pop
mov
add
daa
or
mov
sarb
arpl
xor
jmp
dec
xor
cs
or
mov
fildll
push
outsb
jle
stos
insb
enter
daa
pop
sarb
push
jmp
adc
add
cld
enter
lret
fs
mov
test
popa
pop
stc
stc
rorl
outsl
dec
and
dec
jb
orb
shll
adc
test
sbb
lea
bound
and
pop
icebp
or
rorl
xchg
test
mov
mov
ffree
xor
das
in
shlb
aam
push
adc
mov
out
fwait
jge
movsl
xchg
xchg
xorl
aad
add
jmp
movsl
test
and
jmp
addb
sub
orb
adc
js
outsb
pop
mov
aad
xor
lret
lock
pop
rorl
push
sub
or
dec
jb
push
and
jmp
dec
mov
pop
fwait
daa
xchg
adc
pusha
rorb
dec
arpl
push
scas
push
movsb
aaa
stos
lods
and
jb
xor
stos
mov
pushf
or
dec
in
sub
jno
add
or
push
sub
or
pop
add
mov
outsb
and
shr
mov
and
mov
mov
and
cmp
jb
jbe
jno
xlat
in
icebp
arpl
push
shll
jge
sub
and
mov
addr16
test
push
hlt
dec
xchg
sbb
std
sbb
xor
add
jl
adc
fbstp
pop
sub
mov
mov
movsb
popa
fdivrp
push
popf
cmp
repnz
lods
sarb
xor
pop
sbb
dec
inc
mov
jge
sbb
and
js
imul
mov
add
shll
pop
xchg
js
jae
inc
dec
xorb
hlt
rcl
jno
mov
aam
adc
mov
inc
mov
movl
pop
pop
mov
orl
fisubs
jmp
and
test
mov
push
or
cmp
addr16
cs
push
inc
or
and
mov
js
jmp
movsl
lret
jge
outsb
xor
cmpl
shlb
and
xchg
sub
fildll
negl
jecxz
adc
pop
xor
ret
sbb
lretw
adc
and
clc
in
loop
xchg
adc
dec
popa
xchg
pop
stc
dec
sahf
hlt
fdiv
lret
js
xchg
int
add
adc
shlb
scas
jo
sbb
mov
mov
fisttpl
mov
jbe
jge
pop
leave
roll
decl
push
cwtl
mov
gs
test
test
test
mov
daa
inc
paddw
xor
sti
jne
fmuls
dec
loopne
ret
lcall
and
addb
dec
mov
sub
fdivp
movsl
xchg
inc
xor
sub
loop
mov
xchg
pop
push
outsb
inc
int
pop
add
movsl
sti
mov
imul
repz
lcall
icebp
pop
mov
ficompl
dec
push
test
mov
sbb
mov
repnz
int
loope
imul
repz
into
cmp
loop
adc
cli
pop
mov
sbb
je
scas
iret
mov
or
and
and
scas
sub
sub
fisttpll
arpl
repz
fiadds
stc
inc
sbb
xor
jle
dec
xor
popa
push
sar
movsl
test
jl
jg
addr16
fsubs
iret
sbb
cmpsl
cmp
cs
dec
inc
jecxz
or
int3
call
cmp
repnz
ljmp
out
inc
in
pop
outsb
jmp
mov
adc
addb
cmp
sub
call
dec
loope
or
aam
cmp
pop
cmp
adc
fwait
out
stc
cld
inc
adc
cld
xchg
dec
jmp
mov
icebp
icebp
shrl
shll
jne
pop
jne
fnstcw
popf
cmp
mov
fnstcw
sbb
mov
negl
pop
rol
in
pop
sbb
pop
xchg
test
outsl
fadds
inc
inc
popa
dec
jge
out
pop
pop
je
rcr
xlat
mov
dec
mov
dec
shlb
adc
leave
mov
pusha
dec
pop
out
cwtl
add
stos
xor
int
cmpsl
adc
into
pop
lock
xor
adc
fdivl
jns
int
dec
adc
fwait
or
cmp
js
lods
inc
ret
les
xchg
rcr
cmp
jle
out
cwtl
in
or
in
mov
ja,pt
fcmovne
push
in
decb
and
mov
adc
addr16
xor
ret
jmp
jns
lcall
xor
inc
mov
push
pop
push
sub
xchg
stos
mov
xchg
mov
inc
scas
inc
xor
cmp
pusha
mov
cmp
adc
mov
aaa
pop
fwait
jb
pop
in
xchg
lret
adc
cmc
dec
dec
pop
adc
mov
inc
ret
push
jp
rolb
add
cmpsl
cmp
xchg
and
pop
subl
xchg
pop
sub
arpl
mov
insb
xlat
arpl
rolb
or
aam
dec
xchg
shl
pop
jo
jge
jmp
imul
inc
or
xchg
add
popa
mov
dec
roll
mov
jl
inc
adc
mov
testb
mov
pop
fsubr
mov
mov
cltd
sbb
mov
shll
loopne
fsubrl
dec
xchg
xchg
adc
add
lcall
out
and
add
popf
sub
sub
cmp
aas
mov
sbb
mov
shl
imul
jb,pn
es
mov
stos
dec
jns
repnz
cli
push
in
dec
cmc
bound
enter
insl
pop
call
xchg
dec
pop
dec
std
fs
out
mov
test
icebp
cmc
push
push
cld
mov
out
xor
and
aaa
rorb
jae
test
popa
cmc
jmp
add
in
loopne
call
or
and
pop
movsb
pop
inc
adc
add
and
or
push
pop
cmp
jno
mov
sbb
movsb
lods
ljmp
lods
mov
push
hlt
mov
dec
popa
andb
sub
test
sbb
pop
sub
add
xor
push
mov
and
fisubrs
icebp
jmp
inc
mov
push
loopne
outsb
pop
fnsetpm(287
mov
jle
jmp
icebp
je
out
jmp
hlt
stc
cmc
fadds
inc
push
sar
dec
mov
ja
nop
loopne
and
mulps
fsubrp
shlb
jnp
fmull
aam
shrb
fbstp
stos
mov
mov
xchg
les
ja
ljmp
and
cld
pop
mov
in
mov
xor
test
stos
lcall
push
xchg
mov
js
insl
push
xchg
jmp
arpl
shufps
add
sub
sbb
xchg
iret
leave
sub
or
mov
imul
push
jmp
outsl
adcb
out
sub
sahf
add
in
iret
jb
movb
xchg
insl
jnp
scas
inc
mov
cvtpi2ps
push
push
call
jo
sti
pop
daa
xchg
mov
or
in
sbb
loop
mov
push
dec
movsl
cld
fadd
cmp
pop
or
insb
add
test
push
clc
xor
sbbb
addr16
mov
outsl
adc
jl
add
add
cmpsb
repz
mov
out
outsb
add
dec
je
cltd
mov
xor
jbe
movsl
test
jb
cmp
cmp
push
pop
push
int
jb
jp
and
mov
add
imul
jns
jb
push
pop
mov
or
lret
xchg
sbb
aaa
insl
mov
dec
cs
lock
xchg
mov
push
xor
je
lret
adc
adc
int
push
movsl
dec
dec
test
and
jmp
inc
je
iret
cmpsb
and
jmp
mov
mov
xor
mov
aaa
popf
loop
sbb
clc
sbb
jmp
mov
roll
scas
aaa
aam
das
iret
jae
add
adc
sub
add
cmpsl
push
cmpsl
xor
jge
sbb
add
push
je
scas
push
fwait
pushfw
addr16
inc
jmp
loopne
inc
das
or
outsb
mov
hlt
in
dec
dec
sub
es
pop
insl
or
jns
test
adc
dec
jbe
addb
jno
and
and
popf
jmp
mov
pushf
pop
push
jbe
ret
push
int3
insl
jno
dec
mov
sub
into
add
sti
lcall
rdpmc
lods
dec
movsl
and
mov
cmp
nop
mov
sub
xor
repnz
movsb
test
std
cmp
cmpsl
mov
inc
movsb
das
or
js
scas
lret
or
out
dec
clc
aam
les
adc
or
xchg
mov
bswap
mov
push
sahf
mov
jg
push
test
std
or
inc
fs
sbb
hlt
outsb
or
xchg
lods
or
mov
or
push
dec
fimuls
inc
repnz
sbb
pop
xchg
adcl
lcall
or
insb
add
mov
xchg
or
or
call
lret
cmc
adc
loope
xor
sbb
jo
xchg
scas
aam
cmpsb
inc
adc
adc
stos
push
sub
cld
inc
ret
stos
movsb
or
push
mov
adc
pushf
icebp
sub
and
xor
mov
stos
jl
lods
pop
inc
add
pusha
xlat
in
int
pop
jle
sub
dec
aam
popa
sbb
loopne
and
xchg
jo
aaa
js
push
orb
int
shrl
fwait
cmc
shlb
mov
shrl
ret
pop
mov
xchg
mov
popf
mov
in
out
std
in
scas
dec
or
cmp
mov
mov
push
sti
jle
xchg
dec
mov
mov
jno
sub
rcrb
jle
ret
hlt
xor
and
int3
cmp
sbb
stc
imul
shll
mov
or
daa
addr16
fiadds
int
sub
outsb
inc
mov
imul
jns
es
xor
test
add
rolb
mov
bound
mov
xchg
or
cmp
sbb
push
xchg
cwtl
in
push
mov
inc
inc
mov
lahf
xor
pop
aad
push
xchg
daa
hlt
rcrb
cwtl
imul
mov
leave
jb
stc
pop
in
aad
cmc
pop
pop
mov
push
mov
std
cmp
lods
in
dec
pop
and
bnd
scas
dec
xchg
xlat
aam
mov
loop
lahf
adc
add
repz
lret
in
pop
xor
sub
rclb
mov
adc
inc
lcall
cmp
add
imul
or
inc
jmp
cmp
andl
lahf
mov
cmp
mov
or
shlb
in
cmovbe
cmc
in
mov
cmp
mov
mov
lds
out
fs
mov
jno
dec
rclb
test
fisubs
dec
imul
mov
adc
jmp
in
rorb
jne
mov
and
dec
inc
lock
out
cs
mov
in
data16
mov
fwait
imul
pop
out
lea
and
lahf
xor
pop
cmp
mov
pmaxsw
es
subl
insb
movsb
or
shlb
cmp
addb
dec
pop
bound
mov
icebp
dec
jecxz
daa
call
cmpsb
lds
addr16
cmpb
push
aas
inc
mov
daa
jb
pop
jne
pop
cmc
inc
in
push
lods
mov
or
add
mov
and
or
xchg
test
fisubs
pop
jp
push
call
jp
pusha
orl
pop
in
stos
rcrl
icebp
pop
repz
dec
cmpsb
lret
and
add
ror
dec
sbb
xchg
lock
std
mov
xchg
lods
cmc
add
cmp
inc
mov
jmp
or
adc
cmp
scas
aad
inc
sbb
push
das
dec
test
call
imulb
mov
push
mov
push
sbb
test
out
or
cmpb
icebp
cmp
arpl
jle
sbb
jnp
pop
sbb
push
das
daa
dec
xchg
or
movb
shrb
ds
mov
imul
or
loopne
pop
pop
leave
inc
adc
mov
into
jmp
imul
je
pop
push
dec
mov
int
mov
test
mov
imul
call
dec
mov
adc
sbb
mov
cli
testb
test
push
inc
data16
sti
aad
inc
dec
int3
ljmp
insl
jae
adc
mov
lds
inc
ficomps
dec
push
loopne
imul
outsl
cmp
fstpt
mov
outsl
and
fimuls
add
dec
sahf
and
sub
inc
lret
push
mov
adc
aam
dec
mov
push
xchg
in
dec
mov
icebp
jg
inc
sbb
cmpb
fsubrl
and
mov
add
sbb
loopne
scas
cmp
cmpsb
cmp
mov
aaa
in
adc
nop
jb
adc
jl
cs
mov
dec
jnp
test
cmpsb
push
push
shl
mov
add
jns
out
add
in
adc
outsl
lret
clc
lret
pop
xor
movsb
sub
scas
dec
insl
or
add
mov
mov
clc
pop
jg
loop
jle
aad
scas
test
popa
pop
idivb
pop
sub
adc
inc
mov
add
jno
push
mov
in
xchg
push
cmp
out
adc
jmp
roll
movsb
cmpsb
in
dec
ja
sbb
xchg
or
movsl
js
mov
adc
fistps
push
dec
ljmp
aam
hlt
pop
or
push
call
divb
mov
jo
xor
test
shlb
out
add
sti
mov
pop
cmp
add
loopne
push
pop
cmp
lods
out
lret
imul
ret
dec
push
lahf
pop
lods
sbb
adc
clc
dec
jne
aam
stos
pop
mov
jg
notl
andb
insb
aas
xor
fiaddl
adc
mov
fnstcw
sbb
pop
mov
sub
and
dec
push
sub
stc
jg
mov
push
mov
sub
mov
pop
cltd
push
sbb
add
sbb
push
push
and
out
out
pop
arpl
stc
mov
jno
push
pusha
popa
out
mov
loope
leave
sbb
add
dec
jae
lods
stc
and
adc
out
in
or
mov
lcall
pop
ljmp
jle
movsl
js
inc
lods
push
call
sub
mov
and
aaa
fnstcw
stc
adc
mov
xchg
sub
das
xchg
jle
lret
ljmp
stc
test
add
dec
xchg
jle
js
test
clc
push
xchg
xlat
or
push
mov
imull
bswap
lds
stos
imul
add
ss
add
xchg
insl
dec
data16
scas
mov
movsb
outsb
aaa
test
addr16
mov
mov
xchg
mov
mov
repnz
pusha
mov
pop
mov
mov
xlat
adc
mov
xor
mov
shll
xorb
imul
scas
and
movsl
xor
pop
lea
lods
dec
pop
mov
rcl
mov
fsubs
dec
bound
in
mov
push
xchg
aas
mov
dec
push
fwait
xchg
xchg
imul
test
notl
inc
in
aas
mov
jne
loope
scas
fstl
adc
xlat
scas
sub
pop
stos
xor
inc
loope
mov
xchg
mull
inc
push
cli
pop
sbb
push
dec
jno
xorl
fnstenv
inc
jle
lock
sbb
sub
and
dec
jge
adc
pop
push
sbb
adc
xchg
std
push
pushw
add
pop
cmp
and
mov
flds
pop
cld
dec
fwait
outsb
out
sub
out
ja
inc
jnp
or
fistpl
aaa
dec
mov
add
pop
shll
sbb
mov
push
push
and
lods
pop
jecxz
and
rcrl
mov
adc
jb
xor
sbb
mov
cmp
sub
aam
fistpll
rcrl
push
dec
mov
int
push
mov
sbb
pop
jns
into
sbb
cmp
filds
jb
mov
adc
mov
inc
pop
movsl
sahf
or
movsb
loop
pop
mov
cmpb
sub
insb
leave
xchg
jl
out
mov
jae
or
pop
dec
enter
ret
jl
daa
cmp
pop
repnz
push
arpl
xchg
pop
or
sbb
sbb
lahf
sbb
test
fwait
mov
inc
outsb
mov
pop
adc
xor
sbb
cmp
add
xchg
xor
mov
inc
bound
int3
adc
cmp
jae
test
std
mov
mov
lahf
rcll
xchg
inc
lret
mov
inc
pop
dec
cmp
movsl
aad
test
in
cmpsl
pop
cmp
cmp
push
mov
pop
dec
lahf
cwtl
je
cmpsl
mov
jae
jno
test
dec
in
ss
sbb
leave
add
inc
scas
std
push
xor
push
lcall
lds
mov
push
lret
lret
lock
jmp
int
popf
cmpsl
aaa
xlat
rorb
jg
fmuls
push
pushf
fdivs
call
mov
aas
push
repnz
mov
fdivs
imul
aam
sbbl
mov
sub
movsb
out
mov
ljmp
pop
leave
push
icebp
mov
imul
pop
outsb
sbb
fsubr
into
mov
outsl
aam
xchg
dec
jb
and
mov
pop
pop
xor
adc
mov
push
pop
mov
into
xchg
mov
xorb
loop
jmp
shl
arpl
add
jmp
enter
imul
xchg
cmp
push
dec
jne
inc
daa
jp
rorb
stos
call
jg
jae
adc
dec
imul
xor
hlt
mov
mov
andb
dec
mov
stos
sbb
sarl
add
cld
pop
jmp
cmpsb
mov
mov
movsl
in
inc
and
xchg
stc
push
outsl
popa
addb
sbb
fwait
loopne
dec
lret
pushf
mov
sarl
mov
icebp
jmp
out
sbb
push
imul
xor
ja
pop
and
andl
jb
out
dec
sub
push
xchg
inc
aaa
jl
jnp
cltd
mov
ret
mov
jne
mov
ficompl
xor
and
mov
inc
inc
in
xorl
insb
mov
ljmp
jb
pop
xchg
or
mov
aam
xor
push
sbb
or
iret
mov
sbb
addr16
mov
jb
xor
push
mov
push
lea
sbb
sbb
and
mov
xchg
mov
hlt
jg
pop
mull
jg
fsubs
xor
sub
in
cltd
out
sbb
sbb
popf
jnp
dec
cmp
inc
loope
or
es
xchg
pushf
push
push
sbb
xor
ja
mulps
pop
lret
sbb
mov
mov
jae
divb
outsb
fisubs
cmp
scas
add
sbb
pop
pop
dec
fwait
int
int3
mov
xor
mov
mov
icebp
jo
or
fbld
in
int
fcmovnb
dec
test
pop
xor
jecxz
fs
scas
and
js
lods
dec
cmp
sbb
outsl
inc
insl
stc
iret
adc
scas
mov
cmpsb
imul
jne
movsl
int
mov
movsb
mov
pop
movsl
daa
pop
mov
xchg
adc
sti
xchg
adc
fsubl
pushf
mov
mov
nopl
aaa
inc
stos
or
icebp
lods
xchg
mov
shlb
xchg
outsb
call
xorl
jmp
cli
xor
sahf
mov
or
pop
in
add
movsb
push
dec
negl
add
mov
leave
and
adc
push
xchg
insb
or
fistpll
dec
fs
fisubs
jecxz
inc
pop
aad
sahf
mov
fcomip
movsl
xor
icebp
in
aaa
jp
sub
sbb
loopne
pop
sbb
aas
sbbl
and
in
subl
into
in
mov
pop
ficoml
or
mov
mov
mov
push
in
push
clc
lret
adc
call
sub
sub
pop
xchg
pop
mov
xorb
adc
or
pop
jmp
or
iret
jnp
dec
sbb
mov
add
dec
or
dec
lahf
adc
jp
xor
sbb
aaa
sti
add
sbb
bound
add
stos
fcom
jp
pop
fldt
jge
inc
in
mov
int
mov
and
push
jno
in
popf
xor
fldenv
mov
adc
sti
xor
pop
and
inc
inc
hlt
test
sbb
pop
clc
les
mov
xchg
popf
jae
pushl
pop
aam
mov
pusha
sbb
gs
fwait
in
mov
jbe
xchg
addr16
inc
push
ret
test
mov
mov
nop
cmp
inc
dec
add
cmpsl
add
sti
daa
test
or
aaa
xor
xchg
das
stos
xor
es
in
jae
int
mov
pushl
mov
and
mov
daa
test
cmp
ss
gs
xor
dec
jae
xchg
mov
cmpsb
es
rcrb
mov
push
fmuls
or
xlat
jns
stos
mov
add
mov
aaa
mov
add
xor
stc
out
inc
test
push
push
adc
insl
inc
pusha
or
pusha
call
inc
or
xchg
lods
cmpsb
lods
inc
cmp
test
sbb
or
xchg
cmp
dec
repnz
fisttpl
mov
ja
or
add
pop
pop
out
pop
lods
sarb
cmp
aam
cmp
jl
ds
adc
sarl
add
out
sub
or
jl
test
loop
fistpll
fstps
pop
test
fwait
sahf
add
insl
sub
pop
push
rcl
mov
pop
pop
jae
xchg
stc
lock
xchg
out
imul
sbb
outsb
push
add
test
repnz
pop
inc
cwtl
push
lahf
sub
pop
mov
push
or
fs
cmp
js
jle
jne
mov
sarb
testl
dec
cld
movntq
mov
pusha
mov
shlb
sbb
cs
cmp
in
out
xchg
std
js
push
jne
notl
lea
sbb
sub
adc
cmp
fildl
cmp
push
inc
addb
fwait
inc
pop
and
and
xchg
push
arpl
mul
mov
subb
xchg
or
fmul
add
inc
jp
pushf
in
inc
push
stos
pop
mov
mov
notb
jne
lock
lds
xor
or
sar
cli
xchg
rclb
sbb
fcmovbe
mov
pop
mov
inc
xor
int3
push
push
popa
xor
mov
fmuls
xor
mov
xor
pop
movsb
xchg
push
inc
push
call
filds
movsl
ret
enter
push
loop
cwtl
lcall
arpl
addr16
cltd
lds
loop
push
push
push
push
jp
je
stc
shrl
mov
data16
cmc
insl
shl
and
fstl
mov
dec
mov
pop
cmp
fdivrl
jnp
dec
idiv
inc
push
xchg
decl
push
dec
mov
std
mov
lcall
pop
mov
mov
or
or
ret
mov
dec
fmulp
ja
inc
sub
push
adc
pop
repz
jmp
mov
dec
add
frstpm(287
push
cmp
imul
notb
lds
mov
pop
inc
ja
jle
and
cld
xchg
jno
sbb
mov
push
sub
xchg
aad
inc
xor
dec
xchg
dec
cmp
jecxz
int3
daa
and
pop
dec
adc
das
dec
testl
push
fsubs
testb
nop
popa
jbe
scas
add
sbb
xchg
mov
das
pop
jg,pn
cld
xchg
arpl
xchg
in
iret
push
dec
add
dec
ffreep
ljmp
sti
fidivl
cmp
add
pop
adc
dec
dec
mov
jp
mov
test
jno
mov
mov
adc
dec
or
mov
mov
roll
mov
push
call
jp
cmp
in
movl
adc
andl
inc
sub
loopne
cmp
cmpsl
dec
shll
out
jb
push
adc
je
leave
mov
fldcw
or
cmp
pop
clc
lods
and
aam
jle
aas
cmp
push
or
sub
js
mov
jecxz
adc
xor
xchg
pop
aam
dec
jmp
sub
push
and
xor
insb
adcb
adc
push
mov
cmc
adc
sub
jl
and
stos
xchg
jecxz
sahf
pop
cmp
mov
sub
arpl
jecxz
jne
scas
enter
xchg
int
popa
bound
std
jg
jns
pop
sbb
push
or
andw
sub
in
mov
hlt
aas
out
cmpsb
adcb
push
in
sbb
jnp
clc
mov
push
push
xchg
mov
add
jns
imul
mov
or
xor
clc
icebp
ret
scas
pop
stos
xor
pusha
adc
nop
js
add
cmp
and
stos
mulps
sti
movsl
inc
xor
rorl
or
sbb
jne
pop
sbb
ss
cmp
sub
jl
stos
daa
lcall
stos
jne
inc
dec
lods
push
ror
cmp
sub
sbb
cmp
jae
repnz
stc
cmp
xor
dec
int
mov
ret
aad
lea
and
add
addr16
cwtl
test
and
out
sbb
imul
xor
in
cltd
pop
inc
shrb
stos
mov
imul
sbb
lcall
xchg
xor
xchg
adc
cmp
adc
mov
inc
in
pop
popf
inc
enter
xchg
jl
pop
jecxz
dec
nop
stos
insb
xchg
push
pop
lock
sarb
loopne
cli
cmp
push
adc
out
adc
scas
iret
add
cltd
sbb
movsb
repnz
flds
stc
adc
mov
cmc
xchg
jmp
fdivrl
les
popa
jg
add
inc
lahf
rolb
xchg
out
and
cmpsl
push
insl
mov
test
xor
stc
or
loope
and
jl
and
xor
sti
ja
int3
inc
sub
jge
lods
test
mov
push
mov
push
gs
xchg
xor
in
movsb
add
outsb
lock
cmp
xor
sbb
insl
ret
inc
mov
inc
test
call
jmp
mov
xchg
push
push
jge
lea
or
movsb
xor
aaa
mov
jbe
outsl
jo
into
or
dec
pop
dec
pop
mov
push
lock
and
pop
insl
mov
ss
aad
lcall
stos
xchg
jno
cmpsb
outsb
xchg
insl
dec
or
lcall
test
rorb
push
in
push
lcall
ja
outsb
leave
inc
pushf
popf
sti
ret
popa
push
cwtl
aaa
or
pop
ljmpw
mull
sbb
es
inc
xor
loope
push
outsb
mov
cmp
mov
les
mov
xor
adc
ljmp
imul
test
jmp
and
jmp
lahf
sub
push
adc
mov
jne
push
pusha
ja
fimuls
pop
or
outsl
cltd
push
fcompl
adc
les
sub
lea
in
in
and
xchg
xor
cmp
lds
sbb
ror
add
sub
push
mov
lret
shlb
mov
pop
cld
xchg
add
shll
xlat
fisubrl
inc
xchg
jle
negl
jae
pop
sbb
mulb
dec
ja
ret
aaa
movsb
and
mov
sub
hlt
scas
or
jns
and
repnz
lds
sbb
add
orb
sbb
test
aas
inc
mov
push
xchg
pushf
and
lret
mov
xchg
mov
frstor
fs
mov
xchg
push
push
insb
sbb
jnp
in
test
das
popf
push
fcmovne
pusha
cmp
daa
ss
fisttpll
aas
pop
mov
lods
bound
aaa
sub
mov
cmp
jg
lds
pop
aam
iret
jnp
test
addr16
bnd
aas
xor
push
mov
pop
mov
mov
cld
int3
mov
and
push
cmp
hlt
adc
sub
mov
or
pop
jg
push
js
sbb
fucomp
jnp
dec
xor
inc
js
mov
pop
lods
loopne
inc
and
inc
movsb
xor
push
aas
xchg
mov
pop
mov
lds
mov
clc
and
inc
or
pushl
repz
out
jnp
push
shlb
add
dec
movsb
adc
fnstcw
data16
push
call
push
fisubrl
stos
mov
into
popa
clc
xlat
mov
pushf
jne
push
aaa
cmc
cwtl
sub
mov
mov
das
mov
add
xchg
mov
ja
divl
push
mov
xor
je
ds
pop
pop
addr16
mov
rolb
xchg
sub
out
insb
aam
xorb
push
inc
jb
pop
pop
mov
jge
or
add
lahf
outsb
cmpsl
sbb
push
pop
dec
inc
outsl
int3
adc
add
and
jbe
inc
movsl
fwait
sub
inc
inc
popa
add
stc
daa
mov
popf
call
or
popa
cltd
mov
or
sbb
ret
in
or
cmp
cmp
clc
test
adc
push
pop
cmp
xchg
call
cmp
inc
loopne
push
out
fabs
dec
dec
adc
push
xor
sbb
mov
in
cmp
mov
bound
mov
dec
pop
call
add
mov
xchg
xchg
adc
add
stos
pop
repnz
jbe
add
jns
add
mov
movsb
sti
xchg
lock
jmp
or
insb
push
leave
and
gs
sbb
adcb
idivl
mov
nop
movl
lret
fldenv
push
dec
pushf
mov
pop
pop
pop
es
sub
pop
jmp
dec
sub
fwait
inc
xchg
iret
repnz
add
sbb
cld
xchg
in
push
sub
mov
nop
sub
lahf
add
or
sub
cmp
pop
and
icebp
enter
daa
fld
data16
cmp
jg
sub
inc
pop
hlt
mov
mov
cwtl
xchg
fcmovb
stos
push
xor
cs
fisttpll
stc
adc
mov
push
dec
cltd
and
add
cld
mov
lock
mov
fistl
jo
or
mov
mov
xchg
mov
dec
rorl
cmp
in
mov
inc
jge
add
lea
and
test
mov
mov
xor
jae
mov
pop
jne
fldpi
ret
lahf
fldl
mov
pop
daa
mov
cmp
scas
es
push
ja
aam
inc
popa
mov
push
or
cs
push
jnp
jb
jbe
idiv
sub
pop
cmpsl
bound
shlb
mov
pop
dec
or
inc
jb
jns
and
in
outsl
pushf
xchg
push
lods
pop
xchg
add
and
roll
insb
push
ret
in
test
xor
aad
imul
out
dec
je
xchg
jns
aaa
fistpl
sbb
iret
shll
fcomps
outsl
adc
push
cld
mov
pusha
test
add
lcall
repz
pop
mov
xchg
inc
sahf
adc
das
push
mov
or
fstpt
dec
pop
mov
mov
push
add
xchg
add
stc
add
cmpsb
mov
pop
movsl
scas
sti
adc
dec
xchg
in
loop
jo
and
movsb
cmc
mov
mov
nop
shrb
data16
cmp
sti
jmp
xor
mov
sub
mov
xor
xchg
adc
push
mov
loope
jmp
imul
je
jecxz
lock
xor
imul
decl
imul
push
fwait
nop
sti
in
pop
xchg
adc
pop
cmp
fstps
pop
lods
mov
or
push
sub
into
xchg
dec
call
popf
cltd
pop
sub
nop
or
mov
into
scas
stos
lea
push
mov
lods
sbb
loop
call
ja
mov
sbb
addr16
xchg
cmp
and
cmp
cmp
inc
sub
sbb
jmp
mov
mov
cmpsb
stos
int
fwait
repnz
or
inc
push
imul
mov
and
and
and
push
mov
push
std
add
rcrb
mov
mov
xchg
leave
int
cmpsl
xor
pop
lahf
add
jge
dec
fdivrs
xchg
and
cltd
ds
mov
xor
lods
sub
adc
je
ror
mov
mov
dec
shl
data16
out
adc
push
xor
test
sbb
add
adc
stos
fnstenv
jnp
adc
mov
dec
jp
mov
or
les
sbb
dec
jnp
xor
sbb
sub
jl
dec
jb
inc
dec
pusha
mov
cli
cmc
jp
movsl
sahf
xchg
mov
test
aam
aaa
push
aas
xor
ljmp
iret
dec
scas
dec
int
jmp
stc
insl
adc
dec
dec
ds
dec
sarb
sub
shrl
test
sbb
dec
sbb
xor
daa
imul
into
out
outsb
aad
sub
mov
push
lahf
jecxz
or
sub
cmp
movntq
out
pop
mov
adc
loopne
inc
scas
loopne
adc
adc
pusha
insb
rorl
mov
fsub
mov
sub
incl
incl
gs
out
sbb
or
jb
cmp
pop
dec
and
xor
dec
cmp
js
int3
test
popa
mov
rcr
jbe
add
aas
mov
sbb
cmovg
outsb
pop
das
fidivrl
cwtl
cmp
out
pop
into
pop
mov
cs
inc
outsl
shrb
fsubr
in
ret
dec
xchg
lea
in
daa
subl
outsl
xchg
mov
stos
call
mov
mov
sti
js
imul
aas
in
outsl
dec
dec
cli
inc
sub
cltd
inc
adc
or
dec
mov
xchg
mov
mov
int
inc
std
pusha
loope
mov
xchg
sub
inc
and
mov
mov
mov
cmp
aas
fsubrl
repnz
leave
jb
adc
inc
inc
gs
std
push
out
xor
nop
clc
push
mov
leave
mov
cmp
out
and
test
sub
aad
iret
cmp
sbb
mov
notb
cmc
add
scas
dec
lcall
adc
cmp
fwait
mov
inc
or
cld
clc
cmp
in
sub
push
paddb
iret
jle
pop
movl
inc
mov
push
aam
jmp
enter
jne
push
ret
mov
ret
faddp
pop
or
and
les
aad
in
and
jmp
or
and
sbb
movsl
sub
push
pop
roll
jmp
cld
xchg
es
jle
cmc
jbe
cmp
into
pop
pushf
jl
pop
jge
mov
ret
sub
aas
dec
jecxz
loope
pop
mov
push
jne
xor
ds
scas
out
sbb
es
xchg
cmp
and
and
inc
mov
jbe
inc
js
enter
iret
ja
and
push
test
ret
push
jo
movsb
add
mov
lret
xor
out
adc
xor
aad
lods
aaa
ffree
dec
dec
fs
aam
mov
or
lret
imul
sbb
iret
clc
or
incb
push
sbb
add
pop
add
push
cld
lret
mov
mov
stc
jle
jb
xchg
das
jp
hlt
or
or
mov
sbbb
ljmp
pop
xor
xchg
mov
adc
ja
inc
cmpsb
shll
mov
lds
hlt
adc
enter
pop
inc
xor
sub
mov
dec
and
mov
ja
les
mov
arpl
stos
mov
push
jmp
stc
add
dec
data16
add
cmp
loope
movsb
mov
addr16
xor
lcall
mov
xchg
lds
mov
dec
lods
out
sbb
jmp
hlt
cmp
pop
leave
clc
adc
push
push
and
leave
in
fnstcw
add
inc
sbb
mov
or
sbb
push
xchg
repz
ret
jb
mov
pop
fdivrs
mov
mov
inc
and
inc
cld
sbb
les
mov
jecxz
xor
add
xorl
mov
xlat
lock
call
mov
aam
push
test
fwait
out
sub
pop
cmp
jge
int
cmp
cmp
jnp
push
push
mov
adc
repz
test
ret
cmp
xor
addr16
dec
xchg
fnclex
dec
cltd
jae
fwait
sahf
aas
cmp
or
add
mov
les
loop
pushf
test
adc
or
push
mov
dec
je
pop
ret
aam
mov
fwait
movsl
dec
std
loope
and
ja
push
jne
jb
test
xchg
xchg
cmpsl
cmc
mov
mov
push
ss
dec
mov
jo
ret
imulb
loope
push
jae
aas
cmp
push
sarb
or
jnp
jl
xchg
mov
mov
mov
js
lret
jo
in
aaa
and
enter
aas
sub
aad
adc
xchg
xchg
pop
sarb
or
cmp
into
ret
adc
mov
adc
sub
inc
paddsb
nop
dec
mov
or
push
pushf
cmp
sub
push
sbb
xchg
outsb
jae
outsb
outsb
pop
cmc
sbb
mov
mov
sahf
movsb
pop
mov
cmpsb
std
inc
jp
dec
outsl
jge
sti
mov
sub
xchg
or
mov
in
std
in
fistpl
divl
mov
mov
inc
adc
movl
rcrl
mov
loopne
xorl
cmp
sub
jnp
push
popf
popf
or
aam
push
test
adc
sbb
push
test
sbb
pop
inc
cmpsl
mov
push
and
aam
out
mov
push
xchg
or
stos
test
mov
sbb
jb
addr16
loop
mov
pop
fistl
arpl
mov
mov
lahf
leave
inc
fwait
inc
xchg
sub
jp
mov
adc
jb
dec
ds
mov
add
iret
daa
sbb
fildl
out
mov
mov
jno
mov
out
iret
int3
inc
fdivs
jg
sbb
hlt
jnp
idivl
sbb
mov
out
sbb
push
mov
enter
loopne
push
lea
add
jae
pop
das
int
push
xor
hlt
dec
fistps
mov
stos
daa
xchg
cwtl
jecxz
add
adc
mov
jle
stos
mov
ret
adc
insl
arpl
cld
mov
push
fprem1
cmp
loop
repz
dec
mov
cli
dec
clc
dec
add
sbb
push
fldt
filds
pop
setle
add
jge
mov
mov
or
in
cwtl
lcall
cmc
dec
sub
sbb
nop
aaa
out
js
outsb
inc
movsb
push
cmc
xchg
mov
insl
mov
mov
stos
lret
inc
pop
sub
cltd
xor
pop
aad
iret
aaa
mov
repz
jecxz
inc
test
mov
sub
cld
in
stc
mov
add
das
cwtl
dec
sti
js
jl
add
and
es
out
lods
stc
stos
mov
movsl
add
dec
rcrb
pushf
aaa
lret
mov
cmpsl
sbb
stc
pushf
rcll
inc
pop
inc
sbb
stos
repnz
test
movsl
cld
pop
fistpl
icebp
adc
inc
fldcw
xor
or
lds
ror
aas
pushf
mov
out
sbb
sbb
lcall
lret
sub
pop
scas
rcrl
insb
mov
or
dec
dec
cmpsb
xchg
sbbl
and
inc
cmp
jnp
mov
std
mov
popa
push
inc
mov
mull
in
push
orb
adc
sbb
stos
imul
imul
mov
ret
ror
dec
and
cld
lcall
xor
xchg
sti
push
fstpt
dec
nop
inc
popf
lods
add
xor
int3
mov
pop
mov
cmp
subl
sub
mov
orl
scas
dec
push
pop
pushf
jp
call
mov
jl
mov
mov
iret
xchg
mov
cs
inc
mov
sbbb
movsb
lcall
out
cltd
mov
shll
loopne
js
sbb
sbb
mov
cmp
sub
int
mov
pop
mov
push
xor
js
inc
hlt
lahf
or
popa
jo
loop
stc
push
lret
aad
lods
cmpsl
lahf
test
sub
shr
cmp
rorb
or
push
xchg
incl
stos
push
idivl
mov
and
jle
mov
loop
arpl
lea
sub
js
sbb
cmpsl
xor
dec
movsb
outsb
jmp
loopne
xor
icebp
mov
test
out
cld
cmpsl
insb
pop
lcall
repz
popa
mov
and
sub
mov
dec
push
aad
ljmpw
lods
fimuls
lock
ror
in
stos
addb
push
push
rcrl
pop
mov
sub
pop
fwait
push
jnp,pt
jns
rorl
pop
in
in
std
mov
or
mov
push
pop
rcl
les
addl
mov
gs
xchg
mov
shl
dec
lcall
push
jo
data16
rcll
leave
or
popa
xchg
jns,pn
xchg
xor
mov
xchg
add
repz
rolb
ret
push
inc
pop
jbe
ljmp
hlt
les
mov
arpl
inc
daa
fs
sub
jl
push
push
mov
sub
in
fs
jmp
push
xor
and
sub
fs
loope
adc
cs
movsb
stos
int3
pop
adcb
sarl
xchg
mov
jmp
jbe
nop
or
lcall
mov
inc
xchg
out
movsb
add
push
lods
jae
subb
push
inc
mov
test
scas
jno
ljmp
sti
lret
or
xor
xchg
push
mov
or
mov
scas
cmp
jle
inc
scas
jbe
mov
rolb
aam
cltd
in
pop
aam
pop
sub
out
mov
mov
das
nop
cltd
xchg
call
sub
pop
popf
leave
xchg
xchg
pushf
into
test
xchg
pop
mov
push
lcall
adc
xor
insb
sbb
adc
xor
dec
xor
adc
push
scas
inc
mov
mov
ja
rclb
dec
push
or
stc
adc
cli
int
arpl
adc
pop
dec
xchg
out
mov
hlt
mov
fst
shl
mov
imul
iret
cld
and
mov
pop
mov
insb
fsubrp
icebp
outsl
les
rorl
mov
or
out
xchg
fidivrs
mov
inc
dec
mov
jge
out
adc
sub
inc
add
int3
std
cmp
jp
lahf
cwtl
mov
ror
gs
gs
adc
inc
iret
notb
mov
or
jmp
daa
push
mov
fisttpl
mov
jno
fldcw
stos
mov
pop
or
test
sbb
ficomps
add
testl
pop
inc
rclb
push
pop
mov
jmp
xor
pcmpeqd
cs
and
jnp
test
shl
or
out
ss
out
inc
mov
in
repnz
sub
sub
leave
loop
cli
cmpsb
fisubrs
iret
cmp
adc
lods
stc
sub
sahf
mov
aad
subl
lea
call
xchg
push
cmp
loop
mov
mov
mov
lock
and
xchg
inc
dec
sub
sub
add
loope
cmp
mov
cmpsb
or
inc
dec
ret
jnp
mov
sti
lods
xor
sub
cmp
aam
loope
test
in
sbb
inc
les
popa
loopne
fildl
and
repnz
shlw
lods
call
pop
cld
jnp
ret
mov
jb
dec
out
loop
sbb
add
jmp
adc
int
sub
xor
mov
push
repz
roll
adc
in
xchg
into
ljmp
jns
jle
cmp
mov
rorl
imul
popf
mov
aas
adc
lods
jge
leave
cmp
mov
movsb
fidivs
imul
sub
scas
in
aam
jmp
or
mov
push
pmulhw
push
pop
mov
mov
inc
xchg
inc
addr16
es
pop
ds
test
push
sub
jo
subb
sub
in
inc
das
sahf
loope
mov
mov
xlat
js
push
push
das
pop
repz
jecxz
mov
jge
sub
orb
pop
fldt
fwait
repnz
mov
mov
cmp
in
jmp
xchg
pop
shl
pop
push
pop
loope
xchg
xchg
inc
test
pop
in
fdivs
stos
jp
or
pop
jge
or
or
fstpt
xlat
call
movsb
fisttps
cmp
in
and
popf
jge
xlat
mov
jp
dec
not
mov
pop
xor
repnz
mov
pop
stc
stos
mov
mov
repz
lret
das
jne
in
mov
aaa
sbbl
inc
jmp
fs
fisubrs
cmp
sbb
imul
jns
push
shl
mov
cmp
icebp
add
add
leave
sti
gs
cmpsl
inc
imul
mov
repz
jnp
jcxz
sub
rcll
stc
sub
into
inc
scas
fisubl
pop
adc
sub
mov
sbb
mov
jg
je
xchg
pop
fadd
pushf
in
add
jl
ret
add
aam
xlat
mov
in
fmuls
pop
inc
push
enter
or
mov
cwtl
cmp
push
mov
stos
das
add
loopne
xchg
fidivrl
jg
adc
fistpl
adc
test
dec
out
mov
push
add
inc
dec
ss
stos
jns
cld
pop
mov
jb
sbb
out
rolb
push
and
div
stos
and
test
xchg
fdivrs
cmp
std
mov
add
jo
rorl
arpl
push
cmp
push
fstp
mov
xor
out
jmp
xchg
in
sub
ja
mov
or
mov
addr16
test
lods
mov
out
cmc
es
mov
in
pop
ja
inc
xchg
mov
cmp
fwait
in
stos
repz
insl
insl
push
xchg
jl
add
sbb
shll
jle
clc
sub
jp
cmpsl
into
incl
add
stos
pop
imul
push
les
aam
les
sub
in
add
inc
into
std
mov
or
adc
jge
shlb
repnz
aam
inc
sub
cmp
mov
cmp
xlat
fadd
fdiv
lret
xchg
les
sub
mov
dec
inc
fstps
xchg
mov
test
mov
push
pop
adc
sbb
arpl
hlt
sbb
pop
lret
iret
and
adc
dec
or
and
and
mov
gs
ss
xchg
add
hlt
inc
into
inc
out
enter
lcall
xchg
sahf
sub
loop
mov
and
aaa
in
xchg
jg
je
imul
push
sbb
test
sbbl
jge
getsec
cmp
leave
in
mov
pop
mov
and
xchg
adc
cli
jecxz
aad
adc
jge
or
inc
sahf
sub
sub
xchg
gs
inc
inc
push
test
push
negb
add
outsb
test
sub
mov
xlat
stc
mov
fcompl
movsl
push
sarb
lea
jae
add
in
inc
scas
sub
std
mov
add
xchg
shrl
insb
mov
pusha
xor
flds
mov
data16
es
push
pop
xchg
test
xchg
dec
xchg
rorl
insb
mov
sub
or
jnp
leave
iret
push
or
jns
shl
jg
arpl
jle
pop
jmp
shl
scas
jle
jecxz
add
pop
fildll
sbb
lret
add
cld
in
scas
lahf
in
data16
cmc
lods
pop
adc
nop
enter
loopne
cs
loopne
jecxz
adc
inc
rcrl
jno
out
lret
and
test
in
push
mov
jo
xchg
es
mov
jnp
dec
int
leave
mulb
mov
sub
inc
sbb
dec
rcl
mov
add
jne
mov
nopl
xor
das
jmp
movsl
sub
add
jae
jne
scas
xchg
fwait
sbb
mov
sub
mov
inc
mov
das
insl
xor
pop
xchg
arpl
lock
outsb
push
call
jns
outsb
dec
mov
leave
mov
pop
mov
or
mov
test
dec
pop
cmp
add
adc
lret
add
inc
int3
or
jmp
inc
insb
push
pop
sbb
cld
adc
mov
mov
lret
imull
test
pop
mov
mov
mov
cmp
or
mov
or
in
sbb
dec
xchg
leave
xchg
test
adc
mov
je
mov
or
jge
in
mov
mov
mov
popa
jb
inc
xlat
mov
lods
fdivrl
insb
nop
lret
inc
dec
mov
jbe
cltd
ds
repnz
sub
popl
sahf
mov
fs
inc
jecxz
jo
fnsave
mov
push
push
incl
sub
std
pusha
and
out
sub
inc
pop
pop
sahf
xchg
decb
jno
xchg
ss
outsb
adc
sbb
xchg
or
dec
incl
inc
jbe
push
repnz
sarb
rorl
in
fisubs
rcrl
xor
cld
shll
jle
cmpsb
push
inc
aas
xor
push
cmp
scas
sbb
cltd
push
add
adc
lods
jae
push
in
sub
mov
lret
jb
mov
mov
cmpsl
mov
into
int3
pusha
mov
push
cmpb
je
add
icebp
shl
push
add
in
mov
movsl
jmp
dec
sbb
cld
out
cli
lahf
ret
mov
mov
rcll
mov
dec
sub
cmp
mov
es
loop
insl
mov
mov
in
fistps
addr16
jg
sub
aam
lcall
pop
arpl
loope
or
aaa
pop
insb
shll
xchg
inc
rorl
mov
lea
shrb
stos
filds
lods
jno
test
pushf
das
mov
test
cs
inc
mov
inc
lret
and
mov
in
mov
sbb
adc
cmp
mov
ja
xchg
add
sbb
pusha
dec
adc
xor
scas
ljmp
test
mov
js
add
shlb
pop
sbb
test
cmp
pop
movsl
aas
sub
mov
movsl
ret
add
jb
push
fstps
add
pop
jmp
testb
push
pop
jp
pop
mov
push
std
imul
jae
jo
outsl
into
loope
out
cmp
call
adc
adc
adc
out
fcom
dec
inc
pop
jge
or
in
aas
movsb
pop
xor
add
and
imul
push
lahf
push
aad
xchg
push
jl
mov
xorb
outsb
push
inc
and
lods
scas
repnz
add
or
mov
inc
test
jae
into
sub
jg
imul
dec
xor
push
push
adcb
cmp
scas
inc
add
and
pop
xchg
and
xor
fcompl
cwtl
pop
jno
xchg
icebp
and
inc
xchg
ficomps
or
out
mov
and
testb
shll
stos
dec
jmp
scas
xchg
das
add
push
and
lods
cli
mov
cmp
gs
mov
fs
in
mov
cmp
test
jbe
das
fwait
test
add
mov
sarb
stos
xchg
or
into
lahf
daa
jmp
outsl
mul
pop
dec
add
sbb
inc
pop
outsl
in
rolb
jb
xor
jge
push
pop
mov
lea
in
or
test
pop
add
shl
xchg
push
add
lcall
ds
jo
ret
cmp
clc
cmp
clc
and
lods
int3
shl
pusha
daa
pop
popf
sbb
dec
jne
add
xchg
lret
inc
stos
arpl
je
add
adc
enter
cmp
mov
pop
insl
arpl
jg
jne
mov
pop
jl
js
add
pop
cltd
fmuls
adc
bound
fimuls
fisttps
sarb
mov
cmovae
inc
loope
ror
mov
pop
mov
mov
or
xchg
leave
test
hlt
in
xchg
xchg
jl
mov
je
ret
sbb
mov
add
cltd
ss
sub
and
imul
cmpsb
pop
push
push
xor
in
mov
xchg
pop
sbb
sbb
pop
adc
push
adc
xor
xlat
mov
scas
in
je
add
sbb
gs
dec
jl
pop
aas
stos
push
iret
js
or
inc
cmpsl
fcomps
mov
imull
jo
push
fisubl
nop
out
jge
cltd
test
hlt
mov
add
dec
lcall
xchg
jo
lea
das
fs
mov
ja
xchg
movsl
repz
lods
pusha
mov
popf
movsb
imul
call
cmc
repz
insl
mov
inc
inc
mov
and
into
xor
pop
aad
lret
adc
adc
ret
aaa
pop
or
sub
dec
les
pusha
fmull
jp
fildll
aas
cmpsb
dec
pop
sahf
xor
iret
hlt
lahf
or
inc
jmp
hlt
and
frstor
out
cmpsb
xchg
mov
je
sbb
cmp
orb
mov
jle
mov
and
imul
imul
iret
pop
pop
xchg
mov
aas
sub
pop
mov
adc
jno
mov
bound
add
ds
cmp
fcomi
mov
ss
jg
xchg
mov
adc
push
fidivrl
mov
push
mov
cmp
bswap
adc
lret
pop
mov
adc
test
mov
repnz
xchg
dec
jg
push
inc
mov
mov
bound
scas
lock
jp
mov
mov
insb
adc
push
dec
xor
jnp
or
adc
mov
pop
cmp
jne
aaa
fidivl
jns,pn
leave
xor
push
clc
adc
sti
xor
rorl
cwtl
push
inc
cmp
sub
pop
insb
lods
pop
or
mov
shrb
mov
inc
mov
mov
loopne
push
fs
lods
mov
rcll
pop
jno
ss
gs
jecxz
xchg
andb
adc
add
fmuls
or
or
pop
std
sti
fs
lret
clc
ret
ret
lods
inc
and
jle
jmp
xchg
pop
pop
insb
ret
xchg
cmp
mov
addr16
lret
scas
sarb
jg
push
jg
lods
and
and
xchg
mov
inc
sti
inc
or
jns
cmp
inc
pop
addl
cs
xchg
clc
inc
std
insl
jne
rcll
xchg
addl
push
ljmp
jne
mov
inc
mov
enter
loop
pop
dec
push
fimull
lcall
loope
sbb
fwait
repz
arpl
mov
lret
movsb
out
test
jns
mov
lret
jnp
xchg
mov
push
push
and
jb
mov
mov
test
sbb
pop
push
out
ss
pusha
push
sub
mull
mov
or
pop
repz
dec
sub
not
rorb
test
pop
lret
cli
pop
ds
hlt
cmp
xchg
push
stos
jnp
or
leave
dec
pop
adc
jmp
in
sti
mov
ja
jae
pop
clc
jne
and
mov
insl
adc
inc
jo
int3
push
divb
aaa
stc
cmc
mov
or
call
inc
lock
mov
movsl
aaa
ret
inc
push
es
arpl
test
mov
pop
sbb
sub
imul
leave
xor
push
mov
sahf
and
loop
mov
xchg
out
xchg
test
push
sbb
lods
stos
incl
inc
fnstenv
push
cld
mov
popa
rorb
dec
popf
fisubs
xchg
and
orl
pop
pop
in
adc
xlat
mull
jp
iret
icebp
addl
lret
adcl
int
and
imulb
cltd
add
les
pop
or
lret
lods
outsb
push
arpl
ja
push
mov
inc
inc
sub
jl
adc
in
repz
daa
mov
cli
mov
sbb
sar
aam
inc
jne
mov
sub
ret
mov
es
jmp
in
stos
mov
lods
xchg
shlb
mov
mov
sub
mov
add
cmp
aad
mov
sub
insl
adc
scas
cltd
rcll
mov
fcmove
sbb
movsl
divb
out
xlat
mov
sahf
aas
add
iret
ja
inc
iret
enter
cld
ret
pushf
pushf
out
call
mov
mov
out
enter
in
imul
loope
jo
cli
push
and
jno
daa
cmpsl
test
dec
pop
sbb
sub
ja
sub
int3
jne
popf
push
pextrw
xchg
nop
push
stos
negb
inc
mov
outsb
adcl
push
jno
scas
cli
or
es
imul
inc
pop
cmp
sub
and
aas
cwtl
inc
fwait
mov
outsl
dec
lcall
add
fs
cmp
out
jno
insb
stos
shll
inc
or
jns
das
pop
insb
inc
ficomps
divb
adc
mov
pop
xor
or
and
adc
mov
cmc
int3
sbb
in
bound
lret
pop
loop
mov
fnstcw
lods
out
popf
sbb
fwait
pusha
push
xor
fwait
push
xchg
fs
into
xchg
movsb
jno
mov
aas
mov
mov
scas
sbb
mov
call
popf
xchg
push
in
cltd
jne
out
stos
aas
push
or
xorl
pop
stos
fs
jmp
sbb
xchg
mov
lret
pop
daa
hlt
imul
jl
data16
cmp
movb
sub
or
jmp
jae
adc
dec
lret
in
lahf
jp
movsb
out
dec
pop
xchg
xor
inc
cld
inc
fcomps
xchg
dec
cmp
xchg
xor
mov
inc
inc
nop
popf
pop
xchg
popf
mov
add
and
add
and
int3
or
ljmp
call
clc
mov
mov
sub
jo
mov
ljmp
add
ds
fists
or
aad
fwait
mov
es
dec
popf
mov
pop
mov
mull
and
xchg
pop
andb
sbb
lret
pop
int3
jp
fimuls
cmp
lods
sub
mov
pushf
cmp
imul
cmpsb
repz
mov
push
xchg
sub
sub
dec
das
adc
mov
loopne
aaa
mov
js
mov
push
jno
pop
je
pop
xchg
lods
xchg
mov
ds
rcll
xchg
dec
ss
test
mov
jne
pop
xchg
mov
fisubrl
int
xor
add
std
mov
push
in
aaa
fisubl
dec
jecxz
pop
test
into
sub
sti
mov
inc
push
mov
mov
cwtl
mov
lock
pop
divb
mov
xor
lds
xchg
lock
pop
scas
outsb
and
fs
lret
test
repz
lock
into
popf
outsb
out
lods
sbb
xchg
xlat
mov
xchg
push
push
jl
add
lods
xorl
push
fmuls
cmp
test
jp
adc
pop
dec
jge
mov
jne
and
lret
push
test
fldcw
and
sbb
pusha
mov
xchg
aad
jg
ja
jmp
inc
loopne
or
or
inc
sub
jbe
sbb
or
pop
dec
andl
or
fsubs
mov
mov
jmp
sbb
and
in
or
add
les
adc
inc
es
fsin
lock
sbb
in
inc
fisttpll
mov
sbbl
adc
jne
mov
pop
sbb
sub
and
pop
xor
into
les
out
and
and
mov
lret
xchg
ds
stos
aaa
int
in
xor
in
aas
push
fidivrs
push
pop
arpl
cld
xchg
aas
xchg
mov
stos
adc
pop
hlt
cmc
bound
mov
cmp
ja
loope
pop
call
jae
movsb
push
nop
pop
vpsrad
shrb
add
add
xchg
push
mov
xchg
mov
adc
cwtl
into
push
out
push
fcmovnb
ret
mov
inc
ds
xchg
or
xchg
loope
pop
lahf
dec
mov
cld
call
into
xchg
jmp
jecxz
fs
outsl
sbb
out
mov
out
sbb
add
push
mov
cmp
mov
inc
inc
and
or
cs
dec
cmpsb
sti
adcb
popf
xchg
dec
pop
lss
pop
div
and
decb
mov
dec
roll
mov
sar
mov
adc
loop
push
push
cltd
into
clc
ret
inc
leave
xchg
dec
ret
push
xchg
fldenv
dec
lret
sbb
mov
shll
gs
repz
adc
push
xor
data16
xchg
filds
mov
repnz
in
ljmp
hlt
jo
or
jo
mov
bound
arpl
pop
push
or
daa
std
sub
sub
jns
clc
into
testb
cmpb
repnz
nop
xchg
adc
rorl
cmp
and
inc
jmp
rcll
add
mov
lea
popf
call
add
xor
ficomps
xchg
dec
fs
push
popa
or
pop
jnp
xor
sub
fbstp
insl
xchg
adc
fcomp
sbb
shll
dec
sub
jge
shlb
and
cmp
popa
fwait
sub
adc
and
xlat
adc
cmpl
mov
icebp
jecxz
mov
lods
lds
jecxz
mov
dec
shll
scas
mov
adc
and
dec
es
ds
jb
mov
mov
ljmp
repnz
and
cs
lret
dec
mov
push
mov
frstor
mov
mov
add
inc
shll
sbb
inc
aad
adc
test
add
and
adc
jle
mov
sarl
xchg
jp
mov
test
dec
pop
mov
cmpsb
mov
push
repz
gs
aam
scas
jne
pop
icebp
out
mov
mov
cld
push
dec
shlb
cmp
push
sbbl
out
sub
fs
mov
jb
add
mov
lds
incb
inc
mov
inc
pop
rolb
mov
or
sbb
sbb
data16
mul
imul
sub
adc
mov
and
and
adc
in
jmp
push
jbe
or
rcll
and
in
sahf
jmp
add
cmp
test
sub
mov
inc
in
or
push
or
xchg
out
jg
cmp
jl
xor
gs
push
dec
gs
mov
push
pop
jmp
mov
jg
hlt
cli
mov
out
xchg
and
subl
das
adc
mov
push
xor
pop
mov
or
aaa
dec
inc
andb
pop
and
mov
push
loop
fbld
xlat
daa
xor
push
js
sahf
sahf
lcall
inc
add
xchg
inc
aad
fwait
add
rcl
pop
test
out
dec
dec
xchg
pop
bound
cmp
pop
popf
jae
jmp
addr16
call
insb
xlat
cmp
or
fwait
popf
lea
clc
xchg
sar
inc
lahf
shrl
nop
push
push
movsb
int3
insl
hlt
inc
dec
shlb
rolb
mov
pop
fadds
xchg
mov
inc
jmp
jo
dec
dec
push
sahf
aam
dec
push
dec
push
fwait
push
dec
jnp
pop
ss
js
movsl
sub
mov
jp
je
int
ja
das
xchg
adcl
jne
jae
push
int
in
and
mov
ficompl
test
xchg
add
into
mov
mov
ljmp
in
push
gs
lea
scas
jg
je
mov
push
stos
push
sahf
out
jb
jno
scas
cs
push
add
lods
lahf
pop
bound
fmuls
mov
adc
movsb
idivb
pop
mov
sub
repnz
imul
aam
mov
outsb
sbb
jp
insl
dec
fcmovu
and
or
cmp
repz
aas
in
jae
push
cmp
cmc
fisubrs
shll
and
mov
jmp
mov
mov
jae
mov
cli
inc
imul
call
add
push
dec
sub
hlt
jnp
mov
and
aaa
push
push
bound
pop
ljmp
xchg
mov
cltd
pop
scas
mov
cmc
lret
and
cmp
mov
arpl
add
imul
insb
out
lahf
fdivs
mov
pusha
mov
sbb
add
movsl
adc
lods
das
dec
pop
ds
in
push
jl
leave
dec
inc
sub
jb
push
ljmp
jl
lods
xchg
repz
or
repz
sbb
mov
cmpsl
jne
mov
sub
nop
mov
std
pop
cmpl
loop
in
repz
jae
inc
lods
popa
xchg
dec
add
pop
xchg
cmp
testl
jb
lret
xchg
test
push
sub
add
push
jge
daa
inc
mov
jns
adc
cmp
pusha
xor
cmp
lods
lods
xchg
xchg
jbe
std
add
and
stos
pop
cwtl
push
lcall
stc
xor
mov
mov
or
pop
test
shl
adc
fisttpll
sbb
ficompl
push
dec
mov
dec
push
dec
cmp
int3
dec
mov
add
leave
jecxz
shr
call
test
dec
xor
in
rcrl
test
mov
push
jbe
fwait
cmc
aas
mov
fistpll
lds
sti
lcall
sub
out
pop
mov
ds
or
cmp
inc
cmp
pusha
icebp
test
jns
mov
je
nop
and
das
shrl
and
test
fdivs
aad
adc
scas
mov
mov
jl
adc
sub
mov
inc
outsl
push
push
and
mov
sbb
push
push
clc
push
outsb
imull
sti
imul
jo
mov
push
sbb
adc
fdivrs
add
and
adc
out
push
push
int3
jecxz
pop
xchg
sbb
enter
lahf
adc
stos
aam
into
pop
jmp
sub
xchg
add
lods
cmp
or
dec
sbb
jae
adc
loop
cmp
cmp
dec
data16
jle
negb
leave
sub
adc
scas
stc
popf
dec
movsb
cld
orl
cmp
and
decl
cltd
jno
jg
lds
jg
jp
dec
out
std
mov
push
jae
cli
test
cmpsb
inc
xchg
ficoml
repnz
out
es
dec
xor
cmpsb
clc
in
flds
outsl
jno
cmpsl
push
in
push
int3
leave
jbe
cwtl
fbld
mov
mov
or
repnz
scas
jle
lods
mov
lahf
jmp
into
fistps
mov
sbb
enter
outsl
enter
push
mov
mov
lds
push
test
sti
dec
popf
inc
cmp
int3
sub
fnsave
test
push
in
test
mov
addr16
lods
add
and
xor
js
xor
xor
mov
rorl
movsb
xor
in
out
add
adc
ljmp
dec
mov
lods
mov
mov
xor
cmp
inc
sbb
cmp
and
pusha
mov
imul
xchg
lds
int3
lret
dec
lret
out
mov
out
mov
dec
sbb
pushf
mov
dec
xor
call
jae
pop
out
jb
jle
xchg
adc
shrb
pop
fldenv
test
lods
shll
repz
std
push
pop
push
fcoml
jmp
mov
mov
dec
pop
dec
add
icebp
insb
add
push
or
aaa
in
mov
negl
mov
cmpsb
mov
xchg
adc
xor
cmpsb
xor
stc
inc
inc
stos
jp
dec
push
int3
lcall
hlt
jg
fmuls
cwtl
in
xchg
cmc
sub
push
popf
xadd
fsubr
xor
xchg
loop
jnp
sub
xor
mov
enter
ret
dec
scas
inc
lods
std
jmp
or
push
test
dec
lret
outsb
test
and
jmp
out
mov
sbb
test
insb
add
or
rcll
inc
pop
inc
push
pop
add
push
adc
jbe
xchg
mov
es
mov
inc
shll
push
test
push
je
outsl
cmp
shr
xchg
mov
pop
movsl
inc
je
push
mov
mov
loopne
sub
adc
fistl
xchg
pop
pop
mov
into
mov
xor
gs
sarl
inc
adc
pop
sbb
imul
inc
imul
ficomps
sbb
movsl
or
ss
mov
das
cmpsb
xor
xchg
std
xor
cmc
in
push
xlat
push
pushl
or
inc
sti
inc
icebp
mov
icebp
mov
sbb
adc
stc
and
jmp
iret
jl
loopne
movsb
inc
sahf
mov
jecxz
xchg
in
rolb
cmp
pushf
mov
scas
lahf
push
adc
out
cltd
mov
insl
adc
lock
cmp
fnsave
bound
cmp
in
psraw
sub
out
cmp
xor
insl
cmpl
lds
pop
jae
jge
fsubr
push
clc
hlt
dec
fbld
sbb
outsb
xchg
loope
sub
icebp
or
arpl
fiaddl
mov
inc
testb
ds
pop
sbb
aad
arpl
push
add
dec
sbb
mov
push
mov
out
into
sbb
inc
loopne
pop
inc
or
int
out
nop
jmp
mov
fst
pusha
fucomp
sub
sbb
ljmp
push
mov
add
mov
sbb
out
jns
pop
adc
lret
stos
mov
mov
mov
rcll
aam
lds
mov
imul
icebp
pop
inc
adc
or
fsubl
fsubr
pop
sarl
push
dec
gs
push
mov
gs
push
push
mov
dec
cmp
jmp
mov
push
mov
mov
cmp
out
sub
jb
xchg
out
fidivs
loop
inc
push
imul
insl
xor
jg
lret
test
jecxz
ret
mov
js
cmp
loop
sbb
in
daa
add
daa
dec
bound
sbb
fs
ljmp
movsb
iret
out
pop
mov
sahf
dec
xchg
clc
movsl
scas
add
adc
imul
ficompl
xchg
loop
xor
push
mov
inc
popa
rclb
and
dec
icebp
adcl
mov
pop
ja
jns
in
insb
inc
test
inc
xchg
dec
enter
in
mov
cltd
leave
pop
sub
sub
or
mov
and
popf
xor
fdivr
bound
ja
mov
inc
aaa
jne
or
loopne
aaa
xchg
fs
mov
pop
outsl
and
ret
bound
int3
sub
cmp
fistl
outsb
pop
adc
mov
dec
xchg
and
lret
mov
out
adc
pop
inc
jnp
push
out
loope
cmp
addr16
xchg
push
test
push
in
stos
outsl
mov
leave
jp
loope
loopne
pop
imul
gs
add
mov
cmp
adc
lods
adc
sub
sub
imul
mov
call
jns
pop
adc
mov
stc
testl
or
repz
ss
shl
push
push
mov
imul
imul
out
lahf
ss
lcall
cmp
sbb
jle
sub
sub
gs
lds
or
stos
ret
shlb
adc
les
push
pushf
fnsave
popa
xor
lods
out
popf
mov
addb
mov
ds
push
fcmovne
int3
daa
pop
and
dec
repz
xor
mov
and
popa
push
in
mov
pop
in
clc
add
repz
mov
pop
inc
int3
cmp
gs
mov
cmp
stos
cmp
lds
xchg
ror
mov
inc
test
add
out
cwtl
pushf
sub
jecxz
adc
fucomi
jecxz
fincstp
jl
in
pop
xchg
je
dec
dec
adc
stc
and
add
push
sbb
push
iret
jmp
push
iret
sbb
cmc
sbb
xor
mov
jle
lea
xchg
movsl
adc
hlt
mov
es
popa
cmc
mov
loop
int
lret
inc
xchg
shll
in
and
scas
dec
lds
iret
lret
push
sub
ret
mov
mov
repz
lret
lods
shlb
daa
push
bound
enter
lock
cmp
lds
fmuls
dec
jnp
stc
or
mov
sbb
push
jp
call
test
jp
sub
add
inc
daa
push
pop
cmc
mov
sbb
pop
mov
mov
xor
xchg
ss
loope
and
sarb
imul
daa
leave
or
fsts
pop
icebp
xor
jns
fwait
mov
shr
addr16
adc
inc
mov
fdivp
mov
stc
mov
sbb
jle
push
outsb
sahf
mov
pop
pop
xor
and
pop
scas
adc
xchg
dec
stos
sbb
pop
add
shlb
mov
push
mov
fidivs
inc
mov
jno
cld
je
dec
movsl
xchg
out
aad
mov
jmp
hlt
xor
adc
nop
and
mov
add
mov
pop
cmp
sub
bound
in
ljmp
std
xchg
fxam
mov
inc
cltd
mov
xchg
hlt
into
cmpsl
jle
ds
test
fbstp
or
adc
or
imulb
add
stos
pop
sbb
scas
mov
pop
inc
test
push
out
jge
xlat
stos
in
out
popf
mov
or
in
add
adcl
mov
cltd
iret
adc
cmp
hlt
mov
sahf
cmp
dec
outsb
test
mov
jae,pn
jae
and
xchg
cld
add
pusha
adc
cmp
fsubr
cmpb
dec
jo
clc
insl
xchg
jmp
mov
insb
xor
cmp
sarb
mov
loopne
js
leave
ljmp
stos
dec
scas
aaa
aas
and
sarb
sub
repnz
mov
pop
cmpsb
push
cmpsl
sti
in
cmp
pushf
xchg
xchg
xchg
daa
xor
addr16
mov
pushf
stos
lcall
xchg
jecxz
aad
aas
hlt
out
out
addr16
sbb
add
dec
jb
pop
mov
or
sbb
xor
daa
cmp
and
mov
cmpsl
or
aaa
mov
jnp
ljmp
nop
mov
xlat
mov
pop
jle
scas
cltd
push
lods
sub
lea
mov
jg
jne
xchg
push
movl
jp
std
sub
xor
jp
in
outsb
inc
jb
xchg
or
negl
fcmovu
cmp
inc
pop
push
aas
dec
je
ljmp
mov
push
cltd
aad
setns
sub
mov
movsl
xor
push
sar
dec
cli
mov
filds
fisttps
xchg
ljmp
lret
inc
mov
xorb
lahf
xchg
push
in
aas
out
add
cli
ljmp
lock
pushf
lret
jo
xor
add
or
aad
mov
jmp
add
popl
push
mov
adc
sub
inc
xlat
cmp
repz
inc
jne
sub
inc
adc
lea
stos
lahf
ja
mov
lods
divb
out
cli
mov
subl
stos
es
test
push
repnz
pop
arpl
xor
or
fmuls
ljmp
decl
push
push
mov
dec
xchg
xchg
lds
imul
pop
add
push
movsb
inc
iret
fcmove
xor
mov
mov
mov
xor
xorb
jg
pop
test
in
rclb
orl
lods
push
cltd
clc
in
daa
mov
shlb
stos
adcb
xchg
or
xchg
lea
insl
push
arpl
in
cltd
mov
sarl
ds
mov
or
inc
lods
sbbl
and
loopne
xlat
and
fsubs
or
ds
mov
push
dec
fucomi
sbb
in
aaa
repnz
dec
fwait
pop
cmpsb
jg
dec
out
imul
jmp
sub
cs
test
jns
andl
orb
jp
ret
or
jo
push
popf
jl
adc
or
jmp
jbe
xchg
popa
xorb
stos
cmp
fimuls
ret
ret
xor
lahf
pop
jbe
movq
xchg
inc
xchg
inc
in
repz
fsubl
inc
pop
dec
popf
sarb
cmpb
xchg
sub
sub
inc
or
leave
lret
mov
mov
outsb
sar
or
sub
and
and
sub
push
lret
pop
shr
add
jmp
cmp
imul
sub
cltd
mov
jle
mov
psubw
daa
test
mov
popf
pop
ja
bound
push
push
pop
sbb
xor
cmp
leave
cltd
and
sub
dec
mov
ficomps
push
xchg
and
js
mov
aam
pop
adc
pop
sbb
ss
popf
jmp
cmp
test
jo
insb
cmc
sub
in
xchg
sub
sub
aad
dec
or
pop
pop
cmp
inc
aas
xchg
pop
cli
or
push
mov
aaa
push
push
lock
mov
faddl
arpl
test
out
ret
mov
cmc
cmp
inc
cwtl
ret
test
mov
or
xchg
rolb
push
cmpb
or
call
push
push
add
packuswb
jne
push
cmc
add
sub
mov
pop
xor
sbb
sub
sbb
inc
inc
mov
jecxz
add
add
mov
aam
outsb
enter
les
js
xor
push
es
cmp
adc
sbb
xchg
arpl
inc
mov
mov
dec
and
xchg
in
sbb
xchg
mov
pop
lds
add
stos
mov
xchg
mov
mov
xor
or
pop
out
decb
test
fcmovnb
xchg
jmp
in
and
mov
incb
jmp
fcomps
adc
add
xchg
add
aaa
ljmp
mov
fwait
jle
add
adc
cld
and
ja
and
mov
dec
mov
sub
xchg
out
jnp
add
mov
scas
loop
int
popf
push
cmc
sbb
pop
push
mov
push
shll
sub
mov
clc
jl
sbb
ficoml
imul
jmp
sarl
inc
push
mov
ds
outsl
or
push
pop
and
mov
popf
jecxz
lahf
es
xchg
pushl
add
fsts
lcall
xchg
rcll
sbb
push
fnstsw
inc
hlt
adc
mov
in
push
fmul
mov
mov
outsb
dec
sti
pop
add
in
cli
push
cltd
ljmp
cmp
pusha
inc
xchg
add
popf
mov
push
mull
pop
xor
insl
mov
addr16
push
mov
sbbl
jecxz
int
scas
sbb
ficomps
sub
dec
push
dec
push
add
adcl
out
or
inc
jne
out
outsw
pop
and
in
call
jl
push
xor
pop
cmpsl
cmpb
hlt
scas
jns
insl
popa
push
sahf
mov
sub
call
push
sbb
stos
stos
cmp
jle
sub
cmpsb
cmpsb
pushf
cmp
mov
mov
arpl
aad
stos
cmp
iret
out
xlat
or
mov
fdiv
xor
hlt
xor
addr16
jb
rol
out
out
jae
movsb
out
add
stc
gs
jns
push
cmp
push
xor
insl
jo
mov
enter
jg
cmp
setge
push
or
imul
outsb
insb
sti
fdivrl
adc
daa
or
xor
ljmp
stos
xchg
neg
mov
cld
adc
icebp
in
mov
popa
rorb
push
and
pop
push
out
ds
jmp
inc
push
into
lea
lahf
mov
loope
lret
push
inc
push
lret
imul
ret
or
stc
pop
loopne
dec
mov
jp
jge
fldcw
scas
cmpsb
mov
dec
movb
aaa
jns
cmpsl
ljmp
fcoml
pop
outsb
nop
pop
jns
leave
pop
rorb
push
add
mov
int
shlb
leave
pop
mov
push
dec
mov
repnz
sub
mov
mov
rcrb
out
mov
out
in
mov
lods
stc
dec
push
push
inc
xchg
xchg
orl
jne
ret
sbb
call
and
les
inc
and
and
jns
push
mov
xchg
cmp
inc
pop
loopne
xlat
pushf
jp
inc
insb
test
movsl
mov
pop
insl
jmp
or
mov
cmp
jge
mov
inc
clc
addl
into
out
imul
lret
jno
mov
or
mov
cld
cmp
scas
xor
dec
ret
or
cs
pushl
cmpsb
popf
dec
repz
cmpsl
outsl
sub
mov
and
fnsave
data16
out
fcomps
and
adc
out
sbbl
add
lock
push
lret
sub
xor
enter
arpl
orb
xchg
mov
sahf
adc
data16
pop
cli
dec
dec
pmaxsw
add
pushf
mov
add
sub
ficomps
or
pop
and
test
add
nop
inc
fisubrs
pop
push
js
lods
rorl
mov
adc
popf
pop
mov
jmp
into
add
cmp
cli
jo
and
xchg
inc
sub
add
sbb
xor
push
mov
pop
pop
idiv
xchg
and
mov
cli
push
call
xchg
aad
xlat
sbb
or
mov
es
jnp
sbbb
cwtl
mov
fwait
movsb
movsb
je
cmc
movsb
adc
cmc
cmp
inc
adc
aam
sub
notb
inc
pop
sbb
rcl
push
xor
gs
loop
hlt
mov
cmp
jae
pop
mov
mov
pop
mov
push
mov
mov
mov
mov
outsb
scas
push
lahf
cmp
mov
stos
xlat
fwait
std
addr16
fstpt
mov
leave
popf
xor
lea
in
inc
mov
lock
xor
hlt
pop
daa
and
pop
push
sub
and
les
xor
jmp
test
cmp
ret
lods
movsb
pusha
dec
filds
sub
cmp
sub
mov
dec
xchg
or
mov
lods
daa
or
sahf
test
roll
cmp
addl
inc
mov
inc
and
ret
cwtl
or
and
and
into
mov
scas
xlat
fs
sar
mov
sub
mov
xor
xchg
mov
jbe
out
aad
call
pop
imul
ret
pushf
das
pop
test
movsl
sahf
fs
test
push
rcrb
xorb
subl
push
into
call
pop
cmpl
mov
in
xor
jl
xchg
or
popa
mov
clc
call
xchg
mov
stos
mov
cs
add
fcmovnb
dec
mov
in
shr
dec
repz
push
dec
xchg
inc
cmp
cmpsb
cmp
mov
idivl
adc
jge
stos
call
inc
push
fsub
loop
and
scas
lds
aaa
mov
ficoms
lahf
jge
dec
fcomp
or
out
outsl
jmp
xor
sti
fidivs
nop
add
out
jnp
mov
enter
sub
pop
inc
shlb
dec
ljmp
ss
aas
insl
mov
cmp
pop
cmp
mov
jecxz
insb
adcb
push
test
pop
popf
adc
xor
test
in
movsb
out
jne
and
int3
jno
xchg
pop
push
cld
xlat
in
js
pop
and
dec
popa
daa
movb
add
dec
pop
test
push
clc
pop
or
outsb
inc
push
mov
push
fidivs
mov
mov
in
or
push
mov
sbb
mov
scas
pop
sub
adc
inc
jecxz
or
jl
clc
lods
pop
push
pop
arpl
cmpl
cmc
orl
mov
sub
cmp
fmuls
jno
push
pushf
dec
fisttps
mov
xor
pushf
add
movsl
nop
inc
lock
and
jne
pop
mov
mov
xlat
jle
mov
es
clc
imul
mov
inc
mov
inc
js
xchg
jg
rorb
add
dec
and
cmp
inc
insl
int3
sub
cld
xchg
cmp
or
mov
and
inc
push
mov
pusha
inc
and
ja
inc
cmpb
and
imul
push
stos
scas
pop
mov
inc
inc
lret
mov
jb
adcl
cs
leave
xor
pop
sbb
sbb
push
ret
add
fstps
mov
jne
xchg
shl
mov
jl
enter
pop
push
pop
mov
or
sub
movsb
adc
decb
xchg
dec
shld
xchg
mov
inc
in
push
jp
push
pop
cmpsb
inc
cmc
mov
and
scas
stos
and
mov
push
xchg
push
gs
imul
rorl
ss
mov
push
mov
mov
inc
clc
mov
jno
cmp
mov
and
dec
mov
push
adc
mov
enter
push
js
loope
bound
xchg
fistpl
pop
mov
scas
push
sbb
sbb
xlat
popf
mov
or
adc
xchg
js
inc
cmp
cmc
xor
push
dec
pop
add
loop
xchg
jl
arpl
out
in
dec
dec
sbb
pop
incl
mov
jle
data16
je
popa
ret
test
mov
mov
movsb
pminsw
aaa
cmp
out
sub
imul
sti
pop
or
add
in
xchg
pop
cmp
cmp
add
hlt
mov
insl
xor
mov
in
es
cld
cmc
cs
mov
jge
fs
fisttpll
jns
mov
iret
loop
loopne
jmp
xchg
or
hlt
dec
mov
fldcw
in
mulb
xchg
out
nop
or
xor
push
rclb
jne
mov
xchg
fbstp
pop
int
hlt
push
mov
add
adc
int
loopne
sbb
clc
rcrb
cld
aad
pusha
dec
shrl
imul
sahf
xchg
push
sarl
sub
incl
mov
mov
mov
loop
cmp
adc
push
mov
test
dec
sti
pop
repz
imul
dec
dec
insb
or
mov
adc
movsl
cmpsl
mov
mov
shll
hlt
xor
push
pusha
aaa
dec
xor
dec
or
pop
leave
mov
dec
xor
jo
stos
jge
jae
into
pop
scas
in
imul
lahf
mov
jecxz
adc
cmovge
test
inc
jg
dec
cmp
ret
push
push
shll
cmp
gs
in
xchg
adc
cmp
adc
fsubs
sub
pop
inc
and
int3
inc
push
adc
jbe
mov
test
mov
dec
das
insl
pop
or
jg
leave
in
sub
fimull
nop
mov
add
cmp
and
jb
aad
push
sbb
xchg
in
jo
xchg
fldt
cmp
xchg
push
adc
push
jns
std
and
sub
or
adc
fcmove
fldt
inc
cmpsb
imulb
imul
lock
fimuls
push
mov
inc
xchg
xor
pop
adc
or
xchg
xor
push
jne
ret
aas
std
ss
jge
ljmp
ljmp
push
in
lret
add
icebp
adc
cmp
xor
stc
sbb
sub
popa
out
inc
pop
fists
std
into
insl
mov
aas
add
sti
adc
ss
out
pop
sahf
aam
test
js
cmc
movsl
mov
inc
mov
mov
mov
and
je
mov
popf
lods
daa
sbb
push
movsb
adc
push
lock
sbb
dec
hlt
or
jg
sbb
loopne
dec
push
ds
pushf
inc
inc
push
xchg
add
push
fcompl
fwait
sbb
pushf
mov
fsubl
sarb
fsubr
rorl
mov
cmp
or
inc
adc
mov
cmp
insl
jl
ret
push
shlb
cwtl
pushf
fcomps
addr16
pop
stos
lods
notl
xor
cmpsl
insl
fadds
inc
in
hlt
and
xchg
mov
push
xor
rcrb
push
mov
outsb
xlat
cmp
jp
push
pop
mov
insl
or
nop
jb
cwtl
push
leave
push
cmp
outsl
adc
icebp
or
add
xchg
call
imul
mov
loopne
call
test
sbb
pop
inc
rol
repnz
cltd
cmp
outsb
addr16
cs
push
pop
out
xchg
outsb
cmpsb
cmc
add
daa
sarl
ljmp
mov
xor
outsb
out
xor
pop
and
fdivrs
stos
cmpsl
mov
adc
xlat
jae
xchg
rcrl
ret
arpl
jae
ss
pop
andb
sub
xchg
dec
cmpsl
xor
scas
xor
lret
stc
ja
sbb
cwtl
xor
movsl
in
cmpl
sub
clc
xchg
stc
and
mov
cli
cmp
mov
lods
ljmp
mov
out
xchg
sub
adc
fs
and
sarb
sbb
out
test
add
repnz
enter
xchg
scas
lahf
mov
std
pop
iret
mov
jl
inc
imul
sub
ret
inc
jecxz
or
mov
daa
addr16
sbb
popcnt
imul
lock
fsts
movsl
loope
inc
idivb
add
jo
addr16
mov
and
cmp
in
adc
flds
cmp
xchg
insl
inc
and
mov
addb
mov
out
std
out
lea
pop
inc
jmp
jecxz
pushf
or
dec
lea
push
xchg
xlat
out
cmp
shlb
jmp
sub
or
dec
hlt
adc
in
addr16
aaa
les
dec
icebp
push
xorl
pop
adcl
add
sbb
test
xor
sti
out
push
add
or
dec
dec
xchg
cld
add
js
cmp
popf
cmp
pop
jp
sub
push
aaa
inc
mov
int
push
lret
jecxz
call
pop
add
dec
enter
nop
js
outsl
in
out
call
ja
mov
and
dec
sub
dec
add
into
cmc
mov
movsl
mov
jnp
mov
mov
dec
clc
sub
xchg
addr16
jne
cmp
outsb
rcll
rcrl
mov
push
scas
dec
lret
ljmp
pop
jns
fnstenv
mov
inc
cmpl
inc
pop
xchg
cltd
push
stc
insb
iret
xor
mov
lret
insl
fmul
fcoms
fiaddl
mov
dec
stc
test
mov
xchg
ds
dec
repz
pushw
push
mov
lret
jg
cmpsb
lret
outsb
fsubrl
ret
xor
and
call
and
mov
outsb
hlt
fidivrs
jne
inc
mov
les
mov
dec
jae
test
insl
imul
mov
cmp
outsb
cwtl
pop
xchg
dec
or
sub
add
mov
aaa
xchg
arpl
arpl
hlt
or
fmul
cmpsb
mov
mov
and
je
push
out
dec
xchg
or
test
pop
das
in
xlat
outsl
repz
hlt
push
daa
mov
add
lods
adc
inc
push
paddq
jp
xchg
in
mov
adc
test
jmp
mov
cmpsl
mov
adc
decb
sbb
cmpsl
cltd
mov
lcall
rclb
inc
cwtl
mov
adc
push
and
sarb
add
cmp
mov
or
pop
xlat
mov
fisubrl
push
ljmp
inc
filds
and
sti
orb
fwait
pop
mov
add
subb
testb
mov
leave
pop
test
cmp
adc
xor
jne
push
sbb
ficoms
filds
mov
sbb
inc
xchg
dec
pop
cmpsb
in
sub
push
ret
pop
cmp
scas
lock
scas
or
or
jmp
pop
imul
movsl
pusha
outsl
add
dec
add
pop
xchg
ljmp
or
cmpsl
ja
and
jmp
pop
sub
aas
daa
aas
out
mov
pop
jae
cmpsb
js
push
dec
ret
cmc
adc
pop
jl
mov
inc
out
xchg
mov
jbe
dec
push
ljmp
ret
xchg
dec
cmp
sbb
stos
data16
xor
out
adc
rclb
push
xchg
pop
aad
or
addr16
cmp
xchg
popa
in
leave
xchg
xchg
push
es
das
push
dec
add
push
adc
cmpsl
sub
push
arpl
ja
pop
idiv
cmpsl
mov
xlat
cmp
fidivs
sbb
rclb
dec
mov
hlt
shrl
pop
inc
dec
pop
cmp
sbb
fistps
gs
cld
mov
xchg
data16
sub
out
in
addr16
mov
mov
icebp
movb
fimull
pop
testb
lea
icebp
mov
add
je
push
jae
sbb
repz
pop
or
push
leave
fsub
adc
outsb
pop
cmp
xchg
iret
scas
fisttps
out
pop
jne
jg
sub
scas
je
inc
fwait
clc
push
movsl
adc
and
outsl
pop
cli
mov
cli
lcall
mov
lds
sub
movsb
iret
push
sub
inc
inc
jp
mov
adc
push
pop
cmc
js
mov
xchg
fildll
cmp
and
sbb
sub
loopne
bound
pop
inc
pushf
popf
ja
jle
test
mov
das
sub
dec
imul
and
dec
and
mov
jb
sub
fsubr
mov
and
cmp
ret
push
or
pop
mov
mov
xor
and
andb
xor
and
mov
imul
incl
loope
lods
xchg
outsl
sub
scas
dec
push
leave
and
xchg
std
insb
sbb
pop
test
jns
fs
lds
or
notl
push
out
stos
pushf
adc
sbb
push
into
shrl
xchg
push
xchg
mov
pop
fnstcw
rcrb
call
jae
xchg
or
pop
dec
add
jl
adc
sub
push
or
cld
insb
push
clc
sbb
popa
lcall
cli
lret
test
int3
jge
mov
push
rcrb
push
add
jne
jae
test
fcompl
pop
leave
sub
mov
add
clc
mov
push
inc
xor
mov
cwtl
jecxz
enter
mov
inc
out
adc
mov
lods
andb
dec
cmpsl
inc
int3
fsub
rcll
not
mov
cmpsb
clc
daa
or
or
xchg
jg
das
pushf
sahf
mov
xor
mov
adcb
test
cmc
dec
out
add
lahf
inc
jg
or
arpl
adc
andb
into
mov
jecxz
movsb
je
out
incl
lret
jle
divl
out
bound
adc
mov
sbb
mov
cltd
mov
or
and
and
lds
loope
fwait
push
inc
jp
ds
outsb
jg
outsb
pusha
mov
data16
push
dec
lock
jae
nop
lret
cwtl
inc
mov
imulw
push
cmc
push
mov
cmp
xchg
sbb
jg
cmp
mov
add
aaa
cmpl
push
es
adc
ret
pop
and
mov
xor
lcall
jae
imul
adc
sarb
adc
xchg
or
adc
repnz
in
jne
adc
sub
bnd
ja
mov
adc
sub
stos
aad
outsb
jl
lahf
jae
flds
sub
rcr
scas
mov
lods
test
fdivrs
imul
outsb
frstor
xor
jmp
jp
add
out
mov
pop
jb
push
mov
loope
sub
fsubl
cmp
mov
lds
push
outsl
fmull
call
pop
fmulp
sbb
ret
sub
sbb
inc
loop
pop
sub
and
and
jb
dec
repz
push
xchg
insb
inc
add
call
xchg
shl
test
xchg
jne
mov
xchg
pop
xor
das
out
fnsave
test
into
dec
xchg
popa
aaa
dec
xchg
cmp
mov
cmp
pop
mov
add
sub
adc
js
mov
jbe
jge
stos
dec
mov
jne
test
imul
xchg
ja
test
sbb
xor
sub
imul
add
cwtl
push
stc
adc
out
xchg
lods
add
test
fadds
xchg
fldt
xor
daa
sahf
stc
jmp
xchg
lock
mov
data16
test
pop
mov
push
fistpll
aad
inc
add
cmp
inc
fists
ljmp
data16
mov
push
xchg
mov
inc
fwait
arpl
sbb
dec
add
jecxz
pop
cwtl
in
jmp
mov
push
les
mov
xor
aam
jns
cltd
nop
bound
xchg
push
in
cmpsl
lret
repnz
add
cmpsl
jmp
lret
jns
cmp
mov
dec
scas
xchg
cld
clc
test
shl
jp
cltd
adc
aas
jns
pop
cmp
jae
notl
andl
stos
ffree
dec
lcall
sbb
adc
sub
dec
dec
loop
or
mov
loopne
dec
mov
mov
in
or
out
add
pop
inc
push
pop
xor
es
jb
clc
or
push
testb
popa
jecxz
in
fsts
insl
sbb
sub
push
mov
push
pop
fcmovbe
shrl
rolb
jp
mov
lods
cwtl
mov
mov
inc
and
insl
sub
in
xchg
adc
and
sub
sbb
js
push
das
or
std
shlb
ss
pop
push
mov
inc
hlt
adcl
cmp
push
adc
mov
jbe
pop
add
cmp
dec
push
push
test
mov
movsb
pop
jbe
mov
pop
sub
mov
cmpsb
mov
add
xchg
ljmp
jecxz
loop
add
test
rorb
cli
test
faddl
dec
mov
and
ljmp
clc
lods
or
mov
imull
pusha
shll
andb
pop
jmp
int
xchg
jae
fwait
pop
xchg
loope
pop
int3
mov
loope
xchg
les
or
sub
mov
xchg
sub
push
es
pop
sub
and
ss
inc
ret
jnp
mov
xchg
or
pusha
rcll
adc
xor
cli
inc
out
add
popf
into
lods
out
js
out
inc
shrl
sub
les
loopne
movsl
dec
int3
inc
and
loope
gs
ret
rorb
icebp
push
cltd
jno
mov
sub
stos
sub
int
loope
aaa
mov
sbbb
lods
popa
repnz
sub
outsl
cmpl
popa
std
addr16
sbb
rcrl
sbb
cmp
or
dec
sub
jb
xlat
outsl
add
cld
lret
push
fnstsw
sub
push
cltd
sub
jbe
arpl
cltd
ja
pop
or
in
sbb
mov
jp
daa
nop
push
mov
sarl
dec
sub
shr
lock
jbe
or
jecxz
daa
mov
cli
add
jb
or
into
push
sbbl
mov
test
popf
cmp
enter
inc
neg
fwait
iret
sub
jnp
fwait
push
dec
popf
or
mov
cltd
ljmp
dec
out
test
out
lret
mov
arpl
cwtl
js
xlat
pop
and
sbb
popl
mov
inc
add
ja
xor
inc
jbe
fwait
pop
pop
adc
aam
outsb
ljmp
sbb
or
bound
mov
ficoml
enter
stc
lds
pop
add
jno
pop
ds
mov
mov
js
addb
mov
mov
cmp
adc
add
mov
cmp
jo
lods
mov
jbe
mov
lods
hlt
jno
adc
sub
jp
cmp
mov
lcall
mov
pop
lahf
outsl
sub
leave
dec
rcl
test
int3
mov
add
sub
cmp
inc
adc
xor
mov
dec
adc
xchg
popf
out
mov
notl
inc
fiadds
shl
popf
push
pop
test
adc
jnp
mov
cmpsb
daa
ja
setno
mov
mov
daa
mov
mov
sbb
and
jmp
dec
mov
add
inc
xchg
scas
pop
out
adc
lea
pop
scas
push
ret
movb
jmp
test
mov
lea
rcl
sbb
pop
mov
and
punpckhdq
jmp
fldl2e
mov
rcrb
mov
xchg
xchg
add
sbb
fwait
pop
push
push
sahf
jo
dec
mov
sub
outsl
jecxz
pop
xor
out
mov
xchg
cmp
lods
mov
negl
sub
test
xchg
movsb
inc
hlt
outsl
xor
aaa
jns
call
jbe
rorb
test
jp
cmp
nop
add
sbb
add
ret
jmp
out
lahf
punpcklbw
sti
jl
add
daa
pop
sub
mov
cs
and
repz
mov
xor
das
pop
enter
mov
inc
jnp
inc
nop
push
scas
bound
and
push
dec
out
add
jbe
add
rcl
into
jo
mov
inc
addr16
cmp
ficomps
ljmp
and
ss
xchg
mov
add
shrl
push
out
nop
roll
mov
mov
xor
in
mov
push
sbb
sub
daa
xchg
aam
mov
idivl
cli
out
pop
xchg
xorl
mov
sbb
mov
fisubrl
adc
addr16
stc
xor
stos
push
cld
mov
dec
push
mov
mov
sub
cmc
mov
dec
or
push
adc
lods
divb
mov
stc
sbb
sub
lods
rclb
dec
or
dec
cmpsl
adc
imul
and
ret
sbb
cs
mov
cmp
or
sti
mov
dec
add
sub
xlat
pop
or
and
aam
mov
ficompl
repz
popa
shll
adc
add
and
mov
dec
aam
cmpb
mov
decl
jl
dec
addr16
mov
xor
insb
pop
inc
test
sbb
or
add
fimuls
jo
and
push
cmc
dec
cwtl
add
add
inc
add
sbb
out
nop
and
cs
sbb
loope
inc
movsl
sbb
stos
decb
pop
lods
sub
jp
pop
mov
sub
xor
test
stos
dec
or
cmp
add
outsb
fbld
inc
and
jno
xor
dec
lahf
and
pop
mov
stc
in
jmp
mov
out
fsubs
pop
or
or
xlat
pop
outsb
insl
xor
cmp
pop
test
push
or
cmp
xchg
aam
push
bound
cmp
xchg
mov
test
jmp
push
lds
adc
ret
ss
scas
lods
mov
sbb
int3
stc
xchg
inc
cld
es
cmp
stc
aas
pop
mov
daa
mov
fnstcw
repz
fs
pop
xlat
inc
iret
jns
pop
mov
inc
jae
xchg
inc
add
or
sahf
sbb
jge
int
inc
rorl
xchg
nop
in
jg
call
stos
jbe
cmp
aam
dec
shrl
clc
inc
cli
mov
daa
sbb
orb
xchg
cmp
mov
or
lret
imul
cwtl
and
push
iret
aaa
iret
ss
add
pop
ret
roll
mov
adc
sub
out
stc
cmpsl
push
inc
xor
jl
add
and
ret
mov
in
and
and
push
mov
fcomip
add
push
and
outsl
rorl
mov
jg
mov
repz
hlt
xor
inc
mov
xorb
nop
dec
inc
out
sbb
inc
xor
inc
push
aaa
xchg
std
cli
stc
aaa
inc
fdivrp
xchg
jmp
sbb
inc
vcvtss2sd
mov
mov
das
idivl
or
out
sbb
enter
fwait
scas
dec
sbb
inc
mov
mov
iret
loop
arpl
mov
mov
flds
inc
int3
jo
cwtl
jo
adc
fsubrs
es
fistps
test
fdivl
outsl
pop
ret
mov
imul
sbb
out
cli
out
pop
pop
aas
fldenv
push
jl
std
mov
jmp
mov
pop
movsb
push
or
stc
or
mov
jne
and
or
and
push
dec
into
fxch
sub
cmpsw
push
es
in
int
sub
xor
fwait
call
sti
jb
in
call
popa
jb
jg
or
dec
xchg
in
test
push
push
clc
in
or
bound
add
int3
pop
inc
inc
cli
mov
ds
xchg
int3
xchg
nop
ret
rolb
lcall
mov
outsl
movl
loop
inc
push
mov
xor
decl
sbb
xchg
mov
sti
add
scas
mov
mov
nop
jo
cli
fs
fisubs
jle
ds
inc
fidivl
xchg
mov
imul
push
rcll
test
out
xor
rclb
mov
test
int3
sbb
mov
xchg
out
lcall
xchg
xchg
lret
and
push
bnd
mov
insl
dec
jo
insb
imul
push
lods
lds
jb
push
in
popf
insb
push
xor
pusha
and
rolb
mov
out
push
out
cmp
rorl
stos
mov
pop
mov
mov
add
xor
mov
sub
aas
and
sarl
mov
mov
mov
dec
movsb
outsl
std
ds
les
mov
push
out
loopne
cld
test
mov
icebp
adc
cmp
lock
aad
pop
push
add
mov
out
sbb
lods
add
jmp
mov
cmpsb
xchg
pop
and
dec
and
jo
push
sbb
sbb
add
sbb
jnp
ljmp
rorl
mov
sbb
jg
scas
jmp
jns
mov
arpl
jmp
js
and
jb
push
stos
jno
adc
cltd
sub
fcomi
cmp
lds
inc
in
negb
fnstsw
hlt
pop
aas
mov
inc
mov
js
or
leave
stos
mov
xchg
int
or
and
jge
enter
pop
pop
jnp
cmc
outsb
pop
dec
movb
and
cmp
cmp
es
je
push
ljmp
rcl
scas
fidivl
and
pop
pusha
pop
fisubl
dec
imul
cltd
iret
mov
push
sbb
xor
loopne
and
sub
repz
pop
dec
mov
ret
in
inc
jo
mov
in
sbb
push
adc
lahf
or
mov
loop
aas
scas
ljmp
pop
pusha
dec
adc
push
ds
bnd
lcall
or
data16
outsl
repnz
lods
xchg
inc
jg
jle
push
add
sahf
imul
add
es
call
add
dec
sbb
jmp
out
cli
in
pop
popa
lcall
mov
repnz
cld
ljmp
and
scas
mov
jb
xor
repz
mov
mov
sbb
xor
ret
jge
sbb
push
mov
out
mov
rorl
adc
rolb
xor
hlt
xor
ds
hlt
mov
ja
inc
sub
add
insb
sub
push
or
pop
cmc
sub
decl
inc
xor
inc
sarl
jg
out
sbb
push
bound
adc
pop
out
mov
test
jecxz
xchg
nop
mov
mov
clc
jno
sub
pop
push
cli
inc
jp
loopne
clc
xchg
and
fstpl
pop
test
xor
mov
dec
ret
lea
les
int3
mov
jl
add
cld
les
jp
xor
fistl
push
sub
mov
xchg
sub
aad
push
push
sahf
pop
in
clc
fisubrl
loope
ds
sbb
jno
ja
jmp
push
test
jns
jb
dec
adc
rcrl
pop
cmp
xor
mov
mov
mov
fs
std
cmp
aam
mull
scas
adc
enter
mov
frstor
je
mov
lret
enter
adcb
mov
data16
mov
xchg
adc
cli
fldcw
repnz
daa
aam
out
dec
cmp
cmp
pop
push
jg
xchg
cmpl
push
add
dec
add
xchg
adc
imulb
cmp
cwtl
pop
aad
sbb
jmp
inc
imul
out
orl
pop
add
test
jecxz
sbb
out
jl
jno
cmpsl
inc
das
pop
adc
or
inc
add
xchg
iret
lret
pop
repz
jmp
repnz
fsts
cmp
inc
addb
outsb
cmp
arpl
sub
aaa
mov
pop
mov
call
rolb
jmp
leave
lret
xorb
or
cmp
mov
in
xchg
icebp
sub
outsb
mov
jle
cmp
stos
mov
mov
loop
into
hlt
outsl
push
jne
cmovns
mov
rcrb
out
and
subl
pop
clc
daa
addb
dec
adc
pop
arpl
je
insl
mov
jl
mov
cmpsl
cmc
mov
push
xor
pop
jno
adc
push
stos
mov
mov
mov
or
sbb
int
xor
pop
aas
cmp
push
fnstsw
pop
xchg
outsb
jg
jno
xchg
push
icebp
lcall
jmp
mov
sub
clc
outsb
cli
xlat
jge
das
or
scas
mov
cmc
dec
cmpl
cmp
mov
jg
add
pop
and
push
hlt
sub
dec
leave
mov
mov
mov
in
mov
xlat
push
decl
mov
lods
outsl
cmp
addr16
mov
das
sub
ja
mov
xchg
jae
push
lahf
sahf
aas
jb
mov
inc
enter
and
testl
or
pop
cmp
repnz
dec
lock
les
hlt
gs
jmp
add
int
hlt
enter
mov
dec
test
add
dec
cmp
addr16
mov
test
or
in
xchg
mov
daa
bound
cmpb
pop
mov
mov
lahf
fs
cmovbe
adc
pop
scas
insl
scas
out
mov
and
sub
lock
dec
popf
dec
add
xor
bnd
fs
por
loopne
pop
ret
daa
sbb
push
inc
mov
xchg
popa
test
or
push
std
in
dec
adc
push
push
mov
dec
orl
dec
iret
shr
stc
int3
xor
cmp
les
pusha
push
mov
cmp
stos
ficoml
fildl
lods
cmpsb
pop
mov
call
movsl
mov
out
inc
xchg
insb
pusha
mov
fwait
or
sbb
sub
pop
add
dec
mov
dec
insb
sub
std
dec
ret
dec
scas
pusha
mov
and
into
mov
pcmpgtw
xchg
pop
xor
repnz
insl
adc
jmp
orb
mov
je
push
or
cmp
add
insb
xchg
dec
or
push
xchg
adc
and
xchg
lock
jne
jns
ljmp
shrb
into
add
push
pop
lret
jg
jnp
andb
cmp
cs
jge
and
rclb
adc
mov
rolb
xchg
and
bound
fsubl
pop
xchg
sub
push
mov
mov
push
pop
dec
cmp
pop
sub
in
loopne
addl
xor
into
push
jb
ret
pop
popa
cmpsb
inc
test
xchg
ljmp
cmp
xor
cli
mov
fwait
mov
leave
dec
mov
dec
mov
fimuls
je
push
stos
sbb
xlat
push
jbe
cmpsl
leave
lret
std
xchg
push
mov
stos
push
sub
pop
insb
fsubrs
lahf
sub
loope
iret
arpl
jb
adc
les
mov
jno
adc
pop
in
sub
out
jecxz
hlt
add
int
add
in
shl
push
adc
sahf
xor
jae
push
sub
xor
dec
fs
cmpsl
lods
stos
mov
inc
clc
mov
sub
and
aaa
push
mov
jns
xor
lds
mov
push
xorl
das
popf
xchg
push
cmpsl
add
jp
add
loopne
cmpsb
nop
incl
push
ja
outsl
xlat
cmp
xchg
daa
mov
jno
mov
xchg
sub
xchg
push
xor
inc
jp
scas
dec
sahf
repz
pop
mov
out
xor
rorl
icebp
sti
pop
sbb
push
les
pop
mov
test
dec
cmp
fdivs
scas
inc
loope
cmp
lret
test
mov
jp
jo
nop
clc
aaa
mov
push
loop
cmp
xor
loop
std
sbb
mov
decb
roll
pop
cld
sbb
ret
mov
out
in
addr16
dec
aas
bound
sub
test
xchg
ret
rorb
jmp
cwtl
in
jne
dec
pop
or
aad
repnz
out
xabort
push
adc
pop
dec
jbe
loope
inc
clc
cmp
inc
sub
jg
cltd
aam
cs
cwtl
out
pop
jae
js,pn
mov
jmp
mov
xor
xor
leave
mov
adc
jo
call
jns
mov
and
or
dec
fdivs
cwtl
and
repnz
cmp
iret
inc
out
ljmp
jmp
sub
jmp
aad
xchg
lret
inc
stc
sub
scas
stos
jmp
xchg
mov
jge
pusha
popa
cmpl
adc
add
clc
lcall
sub
xchg
int
push
out
insb
cwtl
add
iret
dec
lods
popf
mov
fbstp
add
std
mov
mov
fadds
notl
sub
lcall
stos
sbb
fwait
push
repnz
in
into
mov
inc
scas
jo
mov
into
std
xlat
in
imulb
clc
ret
ret
pop
in
mov
pop
or
jb
cltd
ret
scas
test
mov
and
std
dec
push
enter
fwait
aad
into
test
add
mov
hlt
jae
jo
out
and
xor
mov
dec
jle
mov
mov
call
xor
je
ljmp
mov
into
cld
dec
dec
adc
imul
daa
gs
xor
loop
out
cmp
stos
test
lret
outsb
mov
clc
bound
mov
aam
xor
adc
pop
xlat
mov
insl
xchg
pop
shl
das
inc
pop
testb
lods
and
sarb
sub
xchg
cmp
ds
mov
pop
pusha
mov
shll
scas
inc
mov
xchg
orb
sbb
mov
dec
jb
out
jmp
mov
rcrb
movsl
int
shrb
lahf
cwtl
xor
ret
jne
adc
test
jp
xchg
pop
lcall
test
fcompl
subl
jmp
imul
mov
std
sub
xchg
outsl
jb
sahf
icebp
push
mov
popf
cltd
pop
jmp
sahf
lcall
movl
scas
fisubrs
mov
daa
dec
frstor
xchg
mov
lret
mov
cltd
add
pusha
and
nop
sub
leave
sahf
and
test
out
mov
ret
shlb
add
rorl
dec
sub
fs
inc
mov
push
imul
loop
mov
lahf
xchg
negb
insl
outsb
sbb
dec
fldcw
dec
and
test
je
aam
call
or
arpl
outsb
packuswb
stc
pop
ds
fcomps
aam
cmc
sbb
int
fwait
daa
push
sub
in
jle
lock
pop
mov
lret
fistps
cmpsl
ss
or
cmp
push
inc
sub
stc
dec
mov
mov
push
xchg
ret
mov
in
xor
mov
iret
sub
pop
fwait
aad
xor
mov
add
icebp
push
sub
pop
pop
push
mov
mov
test
in
fidivrl
pop
ds
mov
loop
ds
mov
jno
inc
adc
or
std
push
fldl
scas
in
sub
ds
mov
mov
stos
loop
jb
int3
aad
inc
ds
pop
addr16
jb
sub
dec
lds
cmp
xchg
jl
hlt
and
xchg
mov
sbb
adc
cmpsb
icebp
inc
jno
adc
sub
add
pop
push
sbb
cmpsl
outsl
je
mov
movl
sub
xor
xor
push
mov
daa
push
sbb
jne
xchg
pop
mov
pop
xchg
cmp
fwait
les
loop
nop
jmp
xchg
aad
add
lcall
hlt
xor
pop
jp
mul
scas
cmp
sub
arpl
mov
mov
inc
dec
loopne
inc
stos
or
cmpsb
orb
scas
call
cmp
or
mov
bound
mov
inc
adc
xchg
sub
jns
ljmp
out
adc
hlt
xchg
loope
std
push
cmp
mov
rolb
jl
lods
subl
daa
outsl
popf
jb
cmc
fldl
mov
adcb
ljmp
aas
fcoml
jbe
dec
repz
dec
xor
cmp
ss
adc
mov
fmuls
inc
movq
push
xchg
filds
lahf
pop
int
mov
mov
mov
xor
add
adc
arpl
jge
adc
sbb
cmp
mov
popl
adc
dec
adc
push
js
adc
test
inc
inc
and
enter
ret
popa
jg
cmp
outsb
in
adc
mov
mov
addr16
xchg
adc
lods
popa
push
sub
insb
out
lahf
push
xchg
or
ss
mov
pop
xchg
les
test
cld
push
jne
outsl
adc
and
adc
add
sar
push
lea
lods
insb
lea
ret
loopne
adc
mov
aam
push
data16
sub
std
add
xor
fidivrl
dec
mov
cltd
imulb
pop
clc
shlb
mov
add
rcrb
arpl
popf
cmp
ds
sar
xchg
ds
mov
xchg
inc
and
xlat
sbb
out
loopne
jbe
or
inc
and
shlb
int
add
jge
fadd
into
mov
inc
repnz
jo
scas
ret
mov
dec
rep
fs
jmp
mov
dec
aas
insl
fidivl
sub
fwait
sbb
sub
inc
cmpsb
adc
mov
daa
dec
lahf
repz
or
sti
jmp
aad
loope
inc
xchg
and
pop
jle
sbb
mov
mov
xor
mov
jecxz
and
adc
jle
xchg
incb
cld
add
dec
lcall
jmp
push
and
fmul
mov
mov
in
adc
jbe
fildll
add
xchg
test
lret
inc
aam
sub
aam
pop
xor
cmp
fistl
pop
dec
add
push
xchg
mov
pop
pop
icebp
pop
outsl
arpl
lret
sbb
push
stos
in
dec
loopne
dec
xchg
xlat
mov
mov
dec
pop
loope
dec
and
xchg
cmpb
dec
lds
jg
xchg
and
sub
mov
int
outsl
es
dec
cmp
xchg
sub
cmp
xor
push
or
ja
jnp
push
mov
adc
movsl
idiv
cs
mov
popa
mov
jns
repnz
adc
cli
cmp
pushf
leave
mov
push
mov
adc
lret
xor
adc
jo
rcrl
cmc
push
push
and
fnstcw
fidivrl
fld
mov
enter
rcrb
adc
dec
nop
sub
mov
addr16
mov
sub
cltd
lahf
lock
cmc
adc
xchg
inc
push
xrelease
test
mov
cld
sub
test
iret
mov
add
mov
pusha
jo
xor
jecxz
and
adc
cmp
jae
div
sti
jecxz
loop
xor
adc
dec
dec
ss
ds
push
popa
push
aam
sbb
and
mov
adc
or
clc
loop
nop
movsb
cmc
cmp
aaa
xor
jae
lcall
sti
insb
cmp
and
lods
mov
mov
lret
mov
mov
dec
sub
out
xchg
mov
push
ret
sqrtps
ret
jne
cmpsb
jb
mov
jae
andl
orb
mov
outsb
ljmp
mov
lcall
mov
arpl
adc
fs
inc
sbb
mov
push
dec
mov
pop
subb
scas
neg
dec
xchg
aad
inc
sahf
inc
stc
xchg
mov
test
sti
push
lahf
aad
jnp
lret
xlat
jge
sbb
xchg
clc
scas
sub
sub
fidivl
cmp
sbb
push
add
xor
sbb
repnz
addr16
sbb
ljmp
pop
xor
repnz
pop
adc
push
xlat
pop
mov
imul
in
dec
pop
stos
pop
call
repz
adc
mov
shrb
mov
mov
std
inc
addr16
jg
pop
cmp
and
clc
dec
cmpsb
xchg
inc
out
push
jge
pop
xor
icebp
lods
sbb
mov
or
pop
fs
cmpsl
mov
lret
push
cwtl
sahf
mov
pop
dec
shlb
and
pop
fistpll
mov
sub
pop
dec
aad
ss
push
add
repnz
daa
dec
adc
push
push
mov
test
cmp
das
mov
jle
adc
dec
jecxz
test
stc
dec
sbb
sbb
push
jo
ficompl
xchg
mov
inc
push
popf
inc
std
cmc
cwtl
pop
int3
test
sub
jne
fiadds
dec
imul
pop
in
lods
add
lret
testb
jge
scas
int3
test
shl
push
arpl
push
sbb
dec
ftst
add
mov
js
in
pop
das
push
push
fwait
xchg
sbb
rcrl
outsb
ljmp
or
sbb
adc
mov
add
adc
cmpsl
pop
scas
mov
rclb
and
pop
loopne
push
mov
push
insl
xchg
stos
jecxz
filds
std
mov
and
dec
add
jecxz
and
pop
inc
jno
jbe
and
sbb
dec
movsl
leave
and
hlt
dec
or
aas
mov
push
mov
push
and
lods
ret
xchg
loop
mov
sbb
aam
je
in
rcrl
pop
mov
jne
int
push
cmp
and
add
outsb
test
int3
rorl
xchg
xlat
jno
stos
jae
bound
ficompl
xor
jb
test
cmpsl
push
fisubrl
add
fcmovb
mov
jle
jge
stc
icebp
sub
movsb
fisttps
mov
push
mov
daa
push
fdivs
leave
test
jns
fwait
imul
mov
xor
out
cld
ss
cmpsl
cmp
insl
mov
out
cmp
fsubl
pop
mov
ret
pop
jbe
push
out
int
add
mov
push
imul
jae
jp
adc
aam
mov
lods
dec
mov
add
ljmp
add
mov
and
push
out
lods
mov
jle
inc
mov
addr16
or
dec
mov
outsl
loop
xor
je
push
mov
inc
xor
hlt
dec
sub
neg
push
arpl
xor
pushf
aad
loop
and
or
add
fwait
enter
pop
stos
adc
shll
push
cltd
jg
xchg
ljmp
mov
inc
pop
loopne
adc
push
testl
xor
jp
orb
idivl
ret
and
test
push
data16
xchg
cmpsl
pop
xor
adcb
popa
dec
test
je
clc
adc
cmpsl
mov
and
mov
jmp
ja
loope
cmpsb
mov
jg
icebp
aam
jno
xadd
jp
ss
int
sub
or
and
sub
cmc
sbb
and
leave
sbb
out
cmp
sahf
dec
mov
inc
cmp
xchg
rcrl
mov
icebp
loopne
shl
scas
adc
das
xchg
dec
mov
rcll
int
cmpl
push
cwtl
mov
jno
jmp
sti
test
sti
iret
xor
stc
pop
push
aas
repz
dec
xchg
lock
lahf
adc
test
pusha
cmp
fadds
cs
insl
idiv
imul
sub
outsb
leave
mov
arpl
pop
jae
lret
out
into
inc
mov
mov
fimull
pop
sti
cwtl
int
repz
or
push
test
repz
jle
fwait
bound
fsts
fs
movsb
pusha
fcmovu
mov
cwtl
pop
push
sbb
cs
or
push
scas
loopne
jg
mov
sub
shr
adc
lods
arpl
xor
adc
lea
mov
xor
jo
out
or
xchg
pop
sbb
or
repz
popf
mov
dec
or
cmp
inc
xchg
jo
aad
push
add
or
mov
xchg
sti
or
daa
in
pop
es
pop
lret
in
insb
push
xor
js
ret
xorl
pop
push
mov
inc
adc
lock
outsl
cwtl
pop
push
stos
adc
jb
in
ret
push
aad
test
sti
mov
xchg
xchg
dec
sub
ficomps
adc
lock
sub
scas
mov
or
bnd
cmp
jmp
incl
movsl
xlat
sbb
sbb
sbbb
lahf
and
and
sar
jno
xor
scas
clc
add
push
xchg
pop
aaa
adc
or
push
mov
stos
mov
shlb
pop
jno
push
push
mov
popf
icebp
imul
pop
xchg
out
adc
sub
lods
in
popf
cmpl
pop
lods
ja
pop
gs
push
mov
or
pusha
and
test
or
sahf
dec
xchg
daa
cmp
loop
leave
adc
es
jg
cld
mov
lret
adc
mov
pop
push
int
sti
or
push
jae
push
sahf
test
cltd
ja
or
mov
add
fneni(8087
lods
or
mov
or
lods
push
js
xor
ret
pop
aaa
std
jmp
imul
mov
or
adc
arpl
jae
inc
mov
and
cld
aad
add
je
inc
sub
gs
or
pause
push
add
jg
fs
inc
inc
repnz
leave
mov
inc
fs
sub
cmp
les
aaa
clc
dec
lock
push
pop
fsubrp
push
popf
jno
adc
out
jp
fcmovne
sti
or
inc
adc
xchg
sbb
leave
test
int
cs
xchg
dec
xchg
icebp
mov
icebp
bound
or
dec
stos
push
push
xchg
fcoml
lret
xrelease
or
adc
adc
adc
cmc
xchg
push
aam
icebp
lods
adc
cs
aaa
shrl
or
cmpsb
adc
inc
add
shrb
inc
and
adc
xlat
xchg
inc
dec
push
adc
lret
push
cmp
addl
inc
inc
lods
aas
adc
or
adc
aam
out
aas
cs
adc
adc
movsl
addr16
insb
adc
sahf
push
xchg
ret
adc
rcl
dec
adc
add
xchg
lret
shl
bound
shrl
mov
adc
das
adc
stos
scas
aaa
jae
rcll
mov
inc
arpl
adc
jmp
adc
dec
mov
or
fs
adc
out
sub
popf
dec
insb
adc
aaa
lahf
pushf
lods
adc
aam
inc
or
shll
lock
repz
fwait
and
pop
out
call
sub
nop
jg
sub
fwait
sub
mov
pop
xor
ret
fs
mov
adc
fidivrs
loop
adc
call
test
lods
and
das
idivl
arpl
push
mov
fs
adc
mov
add
out
add
sub
addr16
sub
xchg
push
out
xchg
in
sarl
mov
or
dec
inc
out
lret
adc
and
loop
adc
cwtl
push
pop
or
cwtl
fcoml
sbb
push
sub
nop
mov
adc
jae
sbb
mov
or
pop
jmp
mov
insb
lret
lret
lahf
outsl
pushf
gs
aaa
out
inc
ret
out
aaa
pop
mov
mov
xchg
es
shll
clc
pop
ljmp
shrb
cmp
in
insl
scas
sbb
push
xchg
subw
arpl
pop
xchg
leave
mov
inc
fisttps
lret
adc
loop
nop
in
adc
out
xchg
ret
push
pop
xchg
out
push
sahf
mov
stos
idivl
popf
jl
in
lret
in
scas
dec
and
adc
mov
aas
lret
jmp
sub
jae
adc
scas
cwtl
add
gs
sub
fldt
jmp
int
mov
sti
sbb
ficompl
sub
lcall
rcll
mov
adc
out
insl
pusha
movq
xchg
dec
cs
inc
pop
jmp
mov
bound
sbb
sub
adc
xchg
mov
lahf
aaa
out
lds
sahf
push
add
adc
push
in
in
in
insb
sub
add
mov
pop
in
push
or
adc
inc
idivl
rcrb
subb
in
cld
mov
push
scas
pop
les
or
shrl
outsl
dec
addl
xchg
aam
test
mov
scas
clc
add
push
or
ljmp
loopne
stos
adc
lret
shl
adc
inc
shlb
leave
dec
in
int
mov
lret
ret
sub
mul
stc
xchg
test
arpl
mov
test
mov
cwtl
cmp
xlat
lcall
sub
push
dec
mov
adc
fisttps
sbb
push
dec
xor
nop
inc
lret
shr
adc
jmp
hlt
sbb
sub
jae
cli
stc
movsb
insb
outsb
out
out
jae
cmp
adc
aaa
fwait
cmp
aaa
and
dec
and
insl
scas
sti
cmc
mov
xchg
pop
outsb
mov
scas
adc
cmpsl
xchg
lcall
inc
mov
xchg
xchg
in
lcall
stos
aam
push
shlb
jne
xchg
xchg
adc
sbb
popa
fdivrl
fcmovbe
lret
sbb
rorl
mov
xchg
mov
push
out
adc
or
push
pop
mov
and
sub
iret
loope
sub
aaa
jae
rcl
js
jae
loop
cld
fimull
mov
dec
jbe
pop
push
sub
stos
lds
adc
adc
test
mov
cmp
pop
scas
sub
cli
xchg
xchg
shr
mov
in
insl
adc
push
cwtl
dec
aaa
xchg
aam
xchg
mov
jb
sub
sbb
jmp
cmpsl
sbb
test
push
sahf
mov
xchg
movsb
xchg
push
pop
or
sub
repz
jmp
mov
mov
daa
mov
sbb
jmp
mov
leave
sub
adc
cwtl
push
push
jae
imul
mov
imull
insb
adc
testl
jmp
pop
sbb
adc
insb
fcoml
cmc
jnp
pop
or
inc
out
insl
mov
and
jb
and
mov
mov
nop
enter
addr16
fildl
dec
pop
push
outsl
aaa
xchg
push
inc
repz
shll
mov
lods
lock
push
mov
in
sbb
push
xchg
rep
lods
dec
push
adc
xchg
xchg
or
lods
jmp
aaa
add
xlat
xchg
iret
aaa
daa
and
sahf
adc
cli
mov
dec
inc
popf
add
or
xor
adc
adc
add
dec
std
adc
sbb
sub
xchg
cmp
shlb
jne
inc
daa
shlb
xchg
bound
scas
lea
adc
jl
rclb
inc
fwait
in
insl
jecxz
sbb
fadds
rol
sbb
ret
sub
xchg
xor
dec
sub
fs
fwait
insb
loop
rclb
sahf
loopne
outsl
jge
sahf
mov
pop
dec
or
mov
dec
adc
jp
aam
pop
in
mov
ret
pop
mov
push
insb
ljmp
jg
out
lret
rcrl
dec
aaa
lahf
test
mov
push
sbb
push
pop
ret
jge
xchg
pop
mov
sub
push
cmp
dec
out
fstpt
outsl
insb
pop
fs
pushf
ret
aam
or
aad
adc
lret
pop
dec
cwtl
jp
imul
sahf
xlat
cltd
adc
mov
lahf
aad
in
aam
aad
ret
or
inc
inc
lret
cwtl
push
out
aad
fs
sbb
fwait
rcrl
push
testl
lcall
dec
int
testl
xchg
or
jae
clc
and
imul
adc
in
and
xchg
aaa
jae
in
in
adc
aaa
data16
mov
adc
jl
and
sub
in
stos
stos
dec
cwtl
cld
ret
sti
sbb
in
sbb
repnz
fimuls
iret
aaa
imul
adc
sbb
sub
mov
lahf
repnz
call
adc
adc
jb
push
mov
pop
adc
in
aaa
inc
and
cmp
outsl
push
ret
or
das
lret
shr
dec
test
negl
xchg
mov
pop
outsl
mov
dec
scas
in
dec
data16
cmc
sahf
shlb
shlb
loop
lds
js
imul
adc
mov
ja
jmp
test
out
mov
and
test
pop
lahf
add
cmp
push
pop
bound
sbb
outsl
jecxz
out
adc
scas
inc
adc
ret
out
aaa
and
or
xchg
fbstp
mov
nop
adc
stos
aaa
sti
sbb
mov
xchg
pop
stc
adc
push
cwtl
mov
fists
pushf
gs
push
push
fs
mov
aaa
and
xchg
xchg
cld
imul
xchg
fsubl
fadd
test
push
testl
sbb
fsts
movsl
lcall
rcrl
fmulp
cltd
stos
stc
std
sbb
and
lods
fdivrl
cmc
loop
jne
lea
inc
adc
push
mov
lcall
filds
stos
adc
roll
cmp
ja
xchg
adc
dec
or
add
jl
inc
adc
inc
xchg
adc
add
stos
adc
insb
call
pop
jae
mov
out
aaa
xchg
lds
jae
mov
sbb
jg
pop
addr16
int
sbbb
mov
lods
in
adc
lret
sub
pop
and
cltd
out
adc
shll
fistpl
nop
fisubrl
push
enter
add
pop
popa
sbb
test
gs
aaa
pop
aad
movsb
insb
lods
cmp
shrb
jmp
lcall
push
aaa
add
add
xor
arpl
lods
cli
shrl
push
shlb
add
loope
push
xchg
pause
xchg
adc
pop
data16
insb
int
adc
in
test
lret
adc
sbb
pusha
dec
jmp
cmovo
aaa
imul
adc
inc
outsl
dec
sahf
push
sbb
cmp
rcrl
inc
inc
xorl
ds
cltd
je
mov
pop
inc
lret
shlb
pop
stos
fsubl
adc
ret
pop
lret
cmp
pop
sbb
loopne
aaa
fucomi
sbb
sbb
mov
mov
fs
dec
push
push
aad
rorl
mov
xlat
dec
dec
adc
mov
out
xchg
adc
stos
adc
adc
aaa
pop
lcall
xchg
outsl
enter
in
sub
pop
mov
xchg
adc
ja
imul
sub
sub
push
aaa
imul
adc
loope
mov
or
push
aaa
pop
pop
jbe
adc
mov
jmp
push
xlat
mov
sub
lds
pop
jmp
adc
add
shrl
xchg
xchg
jne
inc
mov
insb
sbb
push
push
inc
xchg
ljmp
arpl
xor
cwtl
push
xchg
push
mov
aaa
and
aaa
out
rcrb
ljmp
pop
loopne
out
lret
iret
cmp
mov
aaa
mov
rcll
sahf
daa
cmp
xchg
jp
aaa
mov
xchg
mov
andb
les
out
aam
mul
lahf
push
xchg
shlb
or
aad
sbb
shr
in
outsl
jo
in
xchg
insb
adc
fdivp
dec
aaa
xchg
adc
jae
lret
adc
jmp
xor
aas
clc
jae
outsb
inc
les
dec
adc
fistps
cmpsl
fs
cmp
push
arpl
adc
frstor
btc
mov
mov
and
sahf
inc
jo
in
sbb
call
daa
jmp
push
pop
test
dec
lret
mov
in
push
xchg
iret
mov
pushf
mov
arpl
aas
test
fs
jnp
mov
cwtl
adc
scas
scas
sbb
add
aaa
leave
sub
mov
nop
cli
cmp
icebp
jmp
lret
insb
sahf
jne
pushf
sbb
adc
jl
add
xchg
mov
cld
ret
lret
adc
insb
nop
stos
jecxz
test
dec
gs
xchg
adc
in
pop
dec
lcall
push
adc
xchg
mov
push
cmp
or
mov
xchg
sbb
sbb
mov
aad
pop
les
jns
push
inc
mov
adc
lods
xchg
mov
adc
inc
movl
movsl
push
push
leave
xchg
stc
les
rcrb
outsb
in
lods
cmp
adc
adc
add
ret
adc
adc
outsb
inc
add
rcl
inc
mov
adc
and
adc
sarl
lods
dec
add
adc
adc
adc
lods
insb
adc
in
xor
outsb
sub
rcll
mov
pop
insl
in
xchg
xchg
push
xchg
fwait
fwait
adc
rcl
insl
xchg
insb
outsb
xor
ret
in
outsb
shll
scas
rorl
mov
sub
adc
adc
shr
lret
insb
outsb
jae
adc
in
adc
adc
adc
mov
adc
insb
xchg
lret
adc
outsb
outsb
adc
adc
adc
adc
scas
adc
in
adc
and
in
adc
outsb
lret
adc
adc
adc
adc
adc
lret
adc
xchg
adc
in
adc
adc
adc
adc
xchg
adc
lret
test
lret
lret
adc
outsb
adc
mov
fwait
in
adc
adc
insb
sub
xchg
scas
mov
rcll
roll
insb
mov
mov
add
ror
insb
outsb
shr
lret
test
test
adc
push
xchg
adc
add
mov
out
add
lret
adc
adc
mov
adc
adc
adc
outsb
sub
mov
mov
out
roll
rcl
sub
insb
dec
sub
insb
testl
out
add
xchg
in
roll
lret
out
adc
adc
push
lret
inc
stc
push
lret
xchg
sub
sub
roll
push
xchg
pop
in
or
adc
sti
popf
sub
add
ror
adc
add
roll
adc
mov
arpl
lods
lret
out
fwait
mov
adc
add
sub
shr
inc
roll
fwait
pop
adc
pop
mov
pop
cs
and
sbb
pop
adc
adc
roll
xchg
sarl
mov
jnp
sub
jae
mov
ror
rcll
adc
fwait
push
adc
mov
adc
sub
add
xchg
adc
aas
adc
adc
fnsave
mov
adc
mov
mov
and
xchg
repz
insb
cmp
es
in
mov
mov
cmp
cwtl
loope
adc
mov
ret
sub
sti
adc
cld
sarl
fadds
repz
stc
xor
xor
insb
push
push
lcall
daa
jnp
aad
insb
xchg
push
dec
xchg
inc
stos
outsb
inc
inc
subb
push
lret
xchg
mov
xchg
test
jecxz
jne
mov
insb
lret
add
lret
adc
push
lret
adc
jecxz
vdppd
jb
jae
sbb
dec
push
jne
repz
push
pusha
mov
adc
mov
fisttpll
arpl
or
les
adc
xchg
fwait
mov
hlt
sub
aad
adc
jns
adc
pop
mov
shl
aas
mov
lret
fs
ret
mov
xchg
adc
jno
mov
subl
lods
lret
rcr
insl
add
loopne
adc
insl
cmp
test
outsl
sub
lds
mov
daa
sti
leave
shll
out
pushf
sbb
and
ds
mov
adc
xchg
dec
lret
shll
adc
jo
adc
movsb
popa
inc
jae
fisubl
mov
repz
mov
lea
arpl
mov
lds
dec
xchg
rorl
jns
lret
xchg
stos
inc
xlat
outsb
dec
fwait
xchg
adc
outsb
icebp
adc
shrl
cmp
out
inc
into
in
mov
popa
jb
mov
mov
pop
bound
fdivrl
lcall
mulb
mov
shrl
aam
outsb
sbb
hlt
sub
adc
jno
pop
or
adc
dec
shrl
lds
mov
adc
push
xchg
xchg
adc
inc
gs
xchg
xchg
fcmovnbe
sbb
movsb
add
or
cmpsl
shll
pop
mov
or
jecxz
mov
mov
adc
sub
adc
hlt
adc
cltd
out
fwait
mov
mov
adc
imulb
in
or
xabort
push
out
push
lret
adc
or
ret
xchg
test
pop
mov
inc
jge
scas
in
hlt
adc
push
out
sbb
inc
xor
insb
lret
aam
test
push
test
mov
xchg
mov
scas
mov
adc
in
lret
and
shll
scas
test
inc
and
aam
outsb
mov
sub
xchg
add
out
nop
sbb
jae
dec
or
into
pushl
mov
enter
pop
push
mov
or
xchg
mov
cltd
adc
in
adc
popl
arpl
mov
adc
adc
mov
int3
and
push
mulb
pop
shrl
push
and
adc
mov
adc
insb
mov
xchg
adc
inc
scas
lret
adc
js
mov
and
sub
imul
cmp
mov
sbb
out
adcb
in
xlat
mov
mov
sarl
push
jge
aam
push
adc
cmp
inc
out
jae
test
int
test
mov
mov
cs
aam
sbb
jl
inc
scas
mov
fwait
insl
push
ja
push
or
add
adc
ljmp
xor
cmp
and
std
push
leave
lret
aaa
lds
outsb
xor
fcom
call
mov
mov
in
cmp
test
test
rorl
ds
adc
mov
in
lock
mov
ss
sub
rcll
rcll
adc
lret
adc
adc
adc
rcrl
lret
push
xchg
outsb
mov
inc
xchg
fwait
adc
fwait
adc
push
in
jecxz
push
fwait
mov
adc
mov
scas
out
in
out
lret
in
rcl
adc
jecxz
fwait
sub
fwait
adc
pop
dec
lret
lret
jae
adc
jecxz
shr
dec
int3
mov
adc
adc
adc
in
rcrl
or
or
jl
mov
mov
xor
int3
int3
jae
loope
jno
or
cmp
int3
or
fwait
push
adc
push
out
adc
in
adc
outsb
inc
jbe
out
aaa
out
aaa
mov
mov
xchg
out
inc
mov
aaa
dec
mov
aaa
aaa
aaa
testl
aaa
or
rcll
adc
rcll
out
inc
idivb
stos
cld
lds
lds
cmp
cld
cmp
andl
cld
and
movsb
add
jae
adc
jae
pop
dec
fwait
ds
cmp
out
aam
out
out
cltd
push
leave
xor
pushf
into
mov
into
mov
jp
stos
inc
dec
lret
cld
aaa
mov
inc
xor
inc
xchg
inc
adc
adc
pop
mov
test
push
out
daa
daa
sbb
out
push
into
fwait
into
into
dec
mov
repnz
lret
lret
mov
shll
roll
adc
cmp
in
fs
scas
popa
popa
dec
out
dec
scas
gs
push
ficoms
dec
lret
mov
in
rorl
lret
adc
sub
cmp
xor
notl
xchg
into
dec
leave
into
push
into
inc
inc
jp
push
lret
dec
jp
push
adc
lret
inc
insb
push
lds
adc
sbb
test
mov
aas
push
icebp
push
push
stos
lret
stos
mov
aaa
pop
out
insb
push
arpl
sub
push
adc
fs
fs
cwtl
and
into
sti
test
add
rolb
sbb
out
adc
pushf
aaa
dec
out
lret
insb
push
adc
push
cmp
loop
and
pop
xor
mov
repnz
repz
mov
adc
sub
int3
lret
insb
mov
ror
adc
add
mov
cmp
mov
mov
sub
pop
push
jns
dec
jp
and
xor
jae
adc
adc
adc
adc
lret
inc
scas
cmp
push
mov
jp
lds
mov
je
dec
dec
push
orl
scas
out
inc
lret
rcll
rcll
push
fisubl
xor
and
mov
repnz
aaa
mov
or
ljmp
pop
ss
mov
adc
out
adc
lret
dec
adc
mov
call
adc
dec
mov
cld
cmpb
xchg
add
mov
mov
ljmp
jle
cs
int3
rorl
rorl
adc
mov
xor
fs
lret
test
and
ret
mov
sbb
sti
lret
jae
mov
rclb
call
jg
inc
xor
or
mov
sti
cmp
cmp
int
mov
xchg
arpl
insb
insb
sub
rcl
adc
xor
std
cwtl
fstl
and
adcl
mov
mov
into
push
loope
inc
jae
xchg
rcll
sub
inc
xchg
or
xchg
fwait
adcb
push
ret
xchg
loope
add
int3
cltd
cmp
in
ret
xor
rcl
sub
mov
push
xchg
adc
cmp
xchg
dec
xchg
iret
decl
dec
iret
and
xchg
rcr
test
cmp
xchg
subb
into
cmp
mov
inc
xchg
inc
jmp
add
sub
sub
mov
push
mov
jno
mov
dec
imul
addb
fwait
adc
push
test
adc
add
jns
xchg
xchg
xchg
lahf
or
jns
pop
mov
pop
sbb
lret
adc
in
lret
mov
jae
fwait
push
in
arpl
lcall
inc
lahf
shrb
jg
xor
adc
fstpt
xor
cli
insl
test
add
pop
xorl
jge
pop
cwtl
stc
xor
mov
dec
faddp
inc
adc
scas
insb
mov
insb
scas
cmp
insl
jle
gs
clc
add
addw
pop
aas
jge
cmp
js
cmpl
fbstp
out
fiadds
insb
adc
jmp
insb
insb
fstl
stos
lods
mov
add
cmpsb
ret
jbe
jg
jp
jp
jae
ja
mov
lahf
push
aam
cmp
adc
arpl
inc
insb
adc
lods
stos
ljmp
pusha
add
add
mov
pop
push
or
pop
mov
ja
in
sbb
mov
aas
or
adc
arpl
adc
mov
mov
or
cld
ret
jbe
push
pop
jp
test
push
xor
and
fsubrp
and
shrl
mov
adc
jg
in
in
stc
cmp
repnz
mov
jbe
jp
out
jge
inc
fisubrs
push
daa
out
push
ret
inc
mov
push
adc
xchg
sbb
sub
ret
jp
pushf
push
addl
int3
int3
mov
inc
js
or
push
inc
or
test
sub
insb
in
sub
inc
add
fs
outsb
dec
mov
mov
in
outsb
xor
test
dec
jo
jae
insb
jae
adc
xchg
mov
adc
adc
in
xchg
add
xor
ja
and
out
aad
inc
testb
mov
test
sbb
je
mov
xchg
shrl
in
mov
insl
pop
shrb
imul
and
cmp
sbb
or
movsb
in
fidivs
adc
xchg
mov
sub
ror
cld
movsb
int3
cld
cmp
repz
iret
mov
or
iret
pop
mov
inc
or
adc
pop
xchg
pop
xchg
xchg
inc
adc
dec
jp
in
sub
push
add
xor
pop
adc
fisttpll
jbe
aas
lods
push
adc
scas
adc
push
adc
in
mov
in
xor
fldt
pop
jmp
xchg
jmp
pop
sub
cmp
pop
pop
rcr
lret
mov
and
roll
or
pop
stc
xor
mov
xchg
popf
movsl
movsl
in
pop
in
movsl
xchg
xchg
call
call
lret
and
push
ja
and
lods
roll
adc
lret
test
adc
cmpsb
push
in
mov
insl
push
in
popf
in
push
movsl
movsl
sub
sub
call
mov
xchg
mov
mov
mov
adc
shrl
pop
in
xor
xchg
jne
inc
xor
sub
cwtl
call
mov
and
mov
lret
adc
lret
mov
in
sub
inc
in
xor
xchg
xor
call
popl
push
repnz
lods
out
in
push
adc
mov
in
adc
adc
inc
inc
cli
pop
in
xor
in
push
xor
call
outsb
sub
out
mov
in
rcll
lods
lret
fwait
sub
ret
in
sub
lods
xor
xchg
pop
clc
call
movsl
es
sub
adc
sub
adc
lret
push
sbb
in
in
in
pop
sub
push
pop
xchg
push
adc
pop
ret
mov
sub
insb
shrl
adc
adc
adc
pop
push
pop
shrb
xchg
fnsave
in
shlb
in
in
insl
xchg
xchg
push
inc
data16
adc
cs
ror
ror
adc
push
xchg
movsl
rclb
sub
rcl
movsl
push
jne
xor
ret
lret
push
add
insb
mov
test
in
adc
gs
cmp
cli
in
jnp
std
sub
jp
nop
sub
xchg
jmp
xchg
lret
push
roll
and
in
lret
lret
dec
pop
push
into
into
sbb
add
jb
cmpsl
pop
dec
sarb
shrl
adc
add
push
in
in
insb
xchg
in
lretw
xchg
in
in
insb
insb
mov
push
cs
adc
pop
lret
sub
mov
rcll
xchg
xchg
adc
insb
sub
adc
adc
lret
adc
add
inc
shrl
outsb
inc
out
outsb
adc
lret
hlt
jmp
into
in
das
sbb
insb
cld
sub
lds
shrl
adc
aaa
dec
push
adc
clc
push
out
or
inc
pushf
test
xchg
xchg
xchg
insb
inc
lods
adc
adc
jns
push
outsl
add
xchg
xchg
sub
mov
inc
sub
or
insb
xchg
fwait
add
push
xchg
push
xchg
lods
out
lret
rcl
adc
shr
inc
adc
jecxz
adc
adc
sbb
outsb
out
lret
mov
shr
inc
xchg
adc
sub
push
out
mov
adc
fs
add
movl
in
or
nop
adc
shll
adc
ljmp
lret
cwtl
lret
insb
sbb
hlt
add
ror
push
cvttps2pi
fwait
out
inc
fwait
sbb
sub
fwait
outsl
mov
adc
push
lret
inc
in
xchg
jnp
shr
mov
push
insb
out
lret
adc
outsb
jnp
and
insb
inc
lret
xchg
sub
shrl
cmp
das
insb
ror
shr
outsl
cmp
xchg
insb
push
and
adc
adc
mov
out
adc
int3
adc
push
out
in
in
xchg
cmpsb
mov
test
adc
out
outsb
lret
lret
sub
outsb
pop
fucomp
push
mov
insb
std
inc
insl
adc
or
push
inc
adc
dec
insl
outsb
adc
rcll
lret
shrl
xchg
add
insb
in
lret
rorl
and
inc
adc
adc
add
adc
sub
stos
adc
das
pop
ret
adc
xchg
push
lret
in
mov
adc
add
outsb
adc
jae
in
inc
cmp
or
outsb
push
dec
je
adc
jecxz
push
lods
adc
lret
mov
and
pop
lret
mov
mov
outsb
outsl
jl
inc
insl
mov
sbb
xchg
adc
adc
adc
lret
push
mov
outsl
das
cmp
adc
adc
adc
adc
roll
pop
push
rcll
lret
adc
adc
mov
or
sub
das
sbb
xchg
bound
mov
adc
sub
lods
and
mov
ret
lods
insb
outsb
push
lret
daa
insl
sbb
rcr
inc
pushf
repz
adc
pop
ret
jae
mov
sbb
or
inc
in
adc
push
popa
mov
cmp
push
test
mov
pop
scas
popa
mov
cmp
cmp
push
icebp
pop
loopne
cmp
sbbb
movsl
sub
adc
adcb
loopne
cmp
hlt
in
pop
pop
sub
adc
and
lahf
mov
fwait
fwait
insb
lahf
movsb
fdivl
and
popa
stos
rcr
in
mov
and
ja
xchg
adc
cmc
cli
mov
fwait
popa
imul
inc
lret
mov
jl
fwait
arpl
popa
outsl
jb
xchg
jns
mov
mov
mov
call
inc
outsb
mov
idivl
pop
jbe
lret
lret
add
dec
addr16
leave
pop
in
int
lock
adc
mov
cmpsl
mov
cltd
mov
insb
adc
adcl
movb
adc
mov
int
or
add
adc
inc
jbe
aam
popa
add
adc
outsb
sub
sub
dec
lret
adc
lret
add
cld
pop
outsb
sti
adc
sti
sbb
mov
push
add
mov
in
push
add
mov
insb
outsb
adc
adc
fwait
cmp
adc
cmp
adc
shll
lret
fisttpll
push
lret
add
adc
cld
push
arpl
outsb
test
lret
outsb
insb
insb
adc
cmp
adc
fwait
mov
lret
lret
outsb
mov
xchg
.byte
test
.byte
.byte
