xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
push
add
add
ret
add
popl
push
push
pop
push
xchg
add
mov
pop
push
xchg
xchg
xor
xchg
xchg
xor
xchg
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
mov
ret
push
popl
ret
push
push
pop
push
pop
pop
push
xchg
mul
push
pop
xchg
xchg
xchg
xchg
xchg
xchg
add
add
ret
push
pop
ret
pop
push
xchg
ret
add
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
call
push
push
call
push
call
call
push
call
call
call
push
push
push
push
call
pushl
xchg
add
push
call
push
push
push
push
call
push
push
call
call
push
push
push
push
call
push
cmp
jae
ret
pop
call
clc
push
jns
adc
mov
aas
cwtl
popf
addl
cwtl
mov
cmpsl
jbe
mov
shlb
mov
pop
fdivrs
call
cmc
fsubs
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
jmp
frstor
and
xchg
dec
call
lds
jb
mov
push
pop
jmp
ljmp
or
lahf
scas
adc
xchg
pop
insb
mov
cli
lock
ja
or
sbb
jmp
lods
cltd
or
test
push
lods
fs
lret
and
and
xchg
jecxz
xchg
adc
mov
adc
add
pop
and
gs
jo
int
sub
xchg
movsl
add
mov
mov
push
or
in
push
rorb
addr16
push
testb
add
pop
dec
jl
aas
scas
push
mov
mov
ljmp
add
dec
wrmsr
hlt
test
fbld
mov
and
inc
loope
pop
daa
push
mov
cmp
cmp
dec
jnp
add
xor
sbb
sbbl
sbb
mov
gs
and
push
adc
jmp
xchg
sbb
lock
mov
pusha
push
adc
adc
montmul
cmpsb
add
mov
jle
jecxz
jl
loop
push
jl
cltd
jl
mov
stos
pop
mov
insb
insl
dec
iret
imul
sbb
in
call
sti
jp
adc
sub
js
cmc
push
sarb
fstpl
subl
scas
mov
mov
mov
mov
push
sbb
inc
shlb
movsb
sbb
out
rol
sbb
clc
jl
or
ss
arpl
jo
jg
rolb
lods
ljmp
lret
roll
xchg
fidivs
in
jnp
scas
adc
out
fisubl
or
dec
push
push
cmpsl
jmp
pop
into
les
inc
sbb
jmp
xor
add
repz
mov
dec
pop
lods
movb
je
int3
je
dec
data16
inc
out
sub
call
shrb
cld
dec
lock
adc
cwtl
sahf
push
lods
sub
popa
stc
jb
popa
lods
pop
push
test
mov
pop
jge
mov
and
pop
lods
sarl
pop
mov
cltd
jge
mov
fidivl
repnz
dec
mov
fiadds
ret
cmc
push
in
lcall
stos
pop
mov
cwtl
lods
jge
mov
fistl
cli
aaa
dec
mov
popa
outsl
stos
sbbb
mov
adc
addr16
cmp
or
jecxz
cmpsl
ret
icebp
cmp
jne
cmc
in
jae
mov
mov
and
aad
cmp
clc
sub
mov
mulb
outsb
mov
int
sbb
les
xchg
xor
xchg
shlb
xor
or
dec
xor
jno
jae
mov
dec
cs
pop
pop
insb
pusha
sbb
push
xchg
jmp
iret
in
mov
nop
dec
je
btc
lods
lret
cmp
rorl
rdmsr
ficoms
leave
ss
jne
xchg
jns
daa
movsb
fs
fisubrl
mov
ja
and
or
xorl
add
or
in
cs
adc
loopne
outsb
push
xchg
divl
ds
sbb
push
and
fidivl
sarl
test
push
push
xchg
xlat
and
dec
jp
mov
cs
push
sbb
insb
daa
pop
fwait
jae
movsl
jns
xchg
sub
stos
test
in
jo
mov
add
das
popf
jmp
pushf
fwait
sub
js
pop
mov
jnp
xchg
xchg
ficoml
std
jb
mov
scas
dec
adc
in
and
xor
jge
cmp
pop
andb
or
xchg
dec
mov
lock
pop
rcl
sti
roll
fdivl
dec
push
in
push
aas
ror
mov
cltd
and
int
test
bound
push
hlt
enter
fcoms
das
or
push
je
inc
das
cli
inc
jo
and
adc
fiadds
dec
pop
bound
pop
xchg
mov
fcoms
mov
fidivrl
pop
adc
cmp
cmp
pop
dec
or
and
out
test
add
or
add
mov
lahf
scas
adc
jnp
loope
out
push
pop
mov
mov
adc
mov
adc
jno
movd
push
daa
lock
lods
inc
dec
xor
cs
jl
popf
cli
and
shll
rcrb
jp
dec
adc
push
daa
push
movsl
sub
imul
dec
insl
je
xchg
sub
imul
pop
das
icebp
mov
pop
nop
cmp
xorl
test
xchg
mov
cltd
jns
xchg
in
subb
mov
jmp
sub
insb
shrb
pop
sbb
pop
mov
roll
test
popa
push
stos
xor
xor
push
dec
pop
imul
xor
repnz
xchg
fs
mov
mov
aaa
imul
sarb
popa
adc
push
movsb
in
add
movsb
bswap
xchg
mov
push
sbb
and
mov
test
fldcw
outsl
loope
mov
mov
ja
sbb
or
subps
std
cmp
dec
xor
push
and
ljmp
mov
loopne
pop
repz
ljmp
sbb
mov
xlat
shll
push
nop
or
sub
ret
mov
xchg
das
push
xchg
popa
stos
mov
lcall
add
in
call
mov
sbb
je
sbb
stos
ds
cmc
lock
xlat
sub
dec
es
fdivrs
pushf
sub
xor
pop
fistl
rcrb
push
add
scas
add
popf
repnz
jl
aam
xor
lock
sub
sahf
add
mov
xor
add
out
add
sti
jno
mov
xchg
sarb
aaa
and
lahf
leave
xchg
xor
lret
mov
xchg
push
adc
stos
sbb
jge
shrl
mov
adc
push
stc
clc
or
push
lahf
or
stos
loope
inc
aam
push
ret
cmp
mov
add
push
addr16
push
iret
pop
push
dec
mov
push
sbb
je
pop
or
mov
mov
sub
fwait
cmp
or
jae
or
add
fimull
pop
jbe
mov
imul
add
out
push
xchg
xchg
lods
fists
mov
leave
pop
insb
out
cmc
je
cmpsb
repnz
pop
inc
pop
adc
clc
outsl
adc
cltd
jle
adc
push
in
xchg
sub
mov
mov
std
cld
les
and
repnz
imul
sub
or
sub
adc
mov
mov
pop
ret
fdiv
mov
hlt
lds
mov
cli
lahf
stos
sbb
mov
adc
int
sub
cltd
cmp
mov
inc
fucom
jmp
lods
mov
xchg
test
mov
xchg
fbld
push
xor
call
enter
imul
pop
and
dec
xlat
cltd
xor
sarb
leave
adc
clc
sti
gs
or
push
push
inc
cmp
outsl
repnz
sahf
sti
xchg
out
push
jbe
test
in
jbe
adc
mov
insl
cmc
sbbb
jmp
aas
mov
inc
insl
imul
fcompl
push
out
add
lcall
mov
lcall
popa
rcll
pop
xchg
sarb
ljmp
cltd
cmp
push
or
dec
mov
cwtl
fsubrl
sub
or
test
sbb
popa
xchg
lea
lock
cmp
out
ja
popf
adc
outsl
in
dec
jne
out
jl
roll
mov
filds
in
mov
xor
arpl
sbb
call
jae
mov
pop
insl
mov
mov
and
mov
imul
or
mov
xor
add
and
sub
pop
insb
mov
popf
pop
dec
es
aaa
pop
adc
sub
andb
scas
xlat
je
mov
loope
or
cmpsb
sub
pop
repnz
cmpsl
pop
in
movsb
adc
ficoms
sbb
xchg
mov
mov
cli
mov
fwait
jne
fimuls
xchg
das
mov
insl
sbb
in
les
mov
xchg
jb
mov
cmp
jmp
jmp
gs
pop
sbb
lds
and
or
jmp
sbb
adc
sub
xorb
divl
inc
lcall
add
mov
xchg
outsb
nop
into
dec
pop
push
icebp
cmp
jne
shlb
call
and
dec
xor
mov
outsl
loopne
add
mov
stos
jmp
push
lock
stos
mov
xchg
mov
and
mov
int
push
jo
hlt
aam
sbb
fwait
hlt
mov
in
filds
or
addb
fwait
into
aad
loope
push
cmp
inc
int3
in
sbb
sub
ja
push
cwtl
daa
xchg
rol
insl
mov
in
fwait
repnz
add
dec
in
clc
in
and
stos
cwtl
dec
test
jg
cld
mov
fs
shll
add
lret
or
sbb
mov
xchg
add
rcll
test
in
cmpxchg
xchg
mov
xlat
data16
sbb
jecxz
shl
shrb
mov
pop
push
jns
cmpsb
es
inc
inc
pop
add
ja
xchg
inc
idiv
adc
iret
test
or
xchg
xchg
jecxz
push
test
fcomp
icebp
hlt
rclb
xchg
insb
pushf
mov
inc
inc
jg
jns
and
or
jo
je
lret
movsb
aaa
lods
xchg
shlb
ja
loope
cmc
in
arpl
dec
sar
daa
adc
jp
sub
je
cmp
push
rclb
stc
and
das
test
mov
push
dec
mov
sbb
or
jno
decl
sub
ja
sbb
adcl
dec
je
fstp
cmp
cs
jge
out
aam
loopne
call
std
shl
mov
aam
sub
bound
lea
lock
push
dec
popa
movsl
loope
sub
fmull
mov
ret
pop
test
ljmp
mov
rcl
mov
int3
iret
cmp
out
clc
addb
in
xchg
sbb
cmc
jno
and
scas
adc
je
leave
int3
dec
xor
push
dec
insl
out
jo
je
mov
enter
or
xor
loope
aam
int
cwtl
aas
movaps
mov
mov
and
cmc
inc
jmp
adc
pop
cmp
subb
popa
push
mov
out
pushf
inc
ja
adc
xchg
lcall
ret
mov
dec
sbb
jne
sub
mov
test
sbb
push
pop
bound
sbb
xchg
push
xorw
or
addr16
test
out
int
mov
pop
lock
jnp
scas
xor
mov
lods
sub
adc
imul
inc
mov
push
cmp
push
push
mov
ljmp
or
in
mov
negb
fbstp
inc
sub
ret
mov
pop
sbb
mov
out
sahf
pop
cs
mov
sti
cmpsb
and
jne
test
jne
in
loop
sub
jmp
faddl
inc
mov
push
scas
xor
inc
roll
pop
data16
pop
push
call
inc
ret
dec
mov
ret
loop
loop
sbb
dec
pop
xchg
sub
in
out
pop
ret
daa
sbb
in
mov
lret
adc
test
clc
pop
jge
jmp
dec
sbb
gs
pushf
addr16
pusha
xlat
xchg
push
sti
push
jno
dec
stc
jmp
or
imul
loope
xorb
fisubs
and
mov
dec
push
fyl2xp1
fcompl
jbe
test
stos
daa
stos
xor
mov
sahf
mov
mov
sarb
cmpsl
push
jl
popa
stos
xchg
push
xor
inc
add
cmp
pop
dec
fistl
inc
xchg
xchg
jae
add
or
dec
jae
push
bound
pop
fadd
add
scas
in
push
ficoms
hlt
cmp
and
or
xchg
sub
rcrl
rolb
jns
jge
pop
xchg
out
lods
test
inc
xlat
sbb
in
cs
int
push
mov
test
aam
shll
leave
faddl
mov
lock
mov
sbbb
push
lods
mov
sbb
cmp
xchg
or
je
adc
add
addr16
sub
int3
mov
pop
adc
jbe
pop
testl
ja
cs
lcall
aad
jnp
lods
scas
mov
dec
pop
sti
fnsave
pop
insl
lret
mov
imul
sub
nop
pop
cmp
mov
dec
out
xchg
push
ljmp
or
xchg
div
jge
fldl
es
push
test
dec
das
aad
in
les
fcmovb
and
ror
sti
cmc
fwait
xor
sbb
and
add
pop
add
and
inc
and
sub
aad
jecxz
inc
cli
add
xchg
pushf
push
and
and
decb
gs
mov
testb
movsb
push
mov
insb
push
jp
add
adc
fxam
jb
jb
push
add
out
cmpsb
jne
mov
inc
dec
int
xor
inc
std
dec
jbe
push
xor
addr16
pop
cmp
shr
and
out
jne
inc
mov
mov
xchg
in
movl
lcall
in
es
es
es
out
int
jne
shl
dec
xorb
roll
and
lds
std
xor
xchg
aaa
lret
mov
jo
scas
or
jmp
jecxz
jecxz
cmp
lea
push
mov
lahf
shrl
cltd
xchg
in
popf
shl
add
fbld
cmpsl
mov
and
jo
or
push
push
insl
jbe
jmp
mov
movsl
adc
call
shl
fisttpl
inc
push
lahf
jbe
rcrl
and
scas
es
add
inc
xchg
test
sbb
ret
cmp
or
ret
and
stos
xor
outsl
out
sbb
push
in
ljmp
jnp
inc
mov
xor
ds
dec
dec
cmc
pushf
sub
rcrl
xor
out
js
cmp
mov
out
and
out
pop
add
dec
out
repz
imul
mov
aam
call
xchg
pop
inc
push
loopne
inc
hlt
ret
adc
push
stc
push
test
jmp
pop
cld
ja
shrl
shlb
je
fldl
ja
cmpsl
xor
sub
mov
jne
lcall
xchg
pop
dec
inc
jp
out
cmp
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
mov
mov
shrl
cld
push
aaa
or
sub
sbb
test
mov
js
and
and
iret
push
xchg
inc
js
mov
inc
daa
icebp
stc
ret
sub
cmp
into
jno
ficomps
imul
orb
sub
mov
dec
scas
xchg
mov
push
add
add
jo
jb
out
push
add
mov
das
sub
inc
je
arpl
out
pop
int
ror
mov
mov
popf
adc
movsb
repz
out
test
push
in
aas
movsb
mov
loopne
mov
push
inc
pop
inc
and
es
repnz
lret
pop
mov
int3
push
movsl
cmc
repz
data16
stos
lret
lahf
mov
test
pop
arpl
jmp
int3
or
jge
cmp
cmp
dec
mov
dec
dec
add
js
je
lcall
inc
mov
mov
mov
mov
test
fs
xor
inc
mov
cmpsl
xchg
xor
sbb
dec
scas
xchg
jo
dec
or
cmp
jmp
add
cmp
mov
jae
mov
sbb
mov
push
insl
or
aaa
out
or
jmp
cmp
mov
jge
lret
sub
outsb
push
scas
cmp
scas
pop
jns
fdivl
ljmp
mov
dec
mov
neg
nop
rol
adc
mov
pusha
pusha
dec
and
sbb
retw
mov
into
lock
xorl
inc
xchg
jle
jl
push
or
xchg
in
jns
pop
call
xor
dec
repnz
adc
or
pop
movsl
jmp
push
sub
cwtl
adc
icebp
inc
jecxz
or
loopne
call
sbb
fsub
xchg
cld
lret
orb
mov
in
negl
gs
or
adcb
adc
jno
fdiv
sub
sbb
addr16
mov
xor
adc
mov
dec
lcall
lret
lods
xor
loop
cmpsb
leave
dec
popa
xor
outsl
mov
gs
mov
xor
dec
sub
cmp
push
mov
push
lds
movsb
ret
or
sbb
sbb
lods
pushf
cmc
xchg
mov
mov
pop
pop
push
pushf
push
pop
mov
fisubs
in
orl
inc
aas
int
xor
and
movsl
mov
shlb
mov
lods
mov
mov
xor
pushf
arpl
popa
movsb
mov
lods
mov
xchg
push
inc
pop
adc
lods
xlat
pop
in
mov
jb
fcompl
push
xor
loopne
rolb
pop
addr16
cmpb
push
and
loop
loope
rorl
outsl
lds
mov
negl
sar
inc
in
xchg
jg
in
lret
movq
xorl
dec
lock
inc
mov
sbb
pop
imul
mov
pop
push
lock
xchg
iret
and
loop
je
cmp
dec
daa
and
mov
xchg
jo
inc
sbb
push
in
push
dec
jmp
rcrl
iret
insl
loope
es
mov
cld
cli
scas
lret
call
test
in
movsb
repnz
push
add
push
xor
sbb
push
shll
cltd
pop
in
inc
dec
fdivrl
mov
scas
xchg
xor
push
fcomps
arpl
stc
outsb
mov
movsb
outsl
lock
and
jb
mov
and
mov
vcmpsd
sub
jne
jp
out
xorb
out
jecxz
rcrb
fisubs
sahf
cwtl
dec
sub
dec
int3
popa
mov
popf
lret
leave
sub
repz
pop
xchg
and
xor
ljmp
adc
jle
jbe
cmp
and
or
mov
xlat
cmp
ret
clc
inc
push
push
sub
add
dec
and
xchg
inc
mov
jnp
cs
pop
inc
push
mov
pop
out
mov
push
xchg
mov
push
sbb
inc
mov
sub
push
xchg
inc
mov
xchg
adc
and
cmp
xor
jb
sub
daa
jnp
sahf
push
mov
sarb
and
pop
adc
sub
xchg
dec
adc
ljmp
xor
incl
into
xlat
idivb
aas
hlt
xor
mov
repnz
pop
wbinvd
sub
pusha
outsl
pop
mov
sub
add
inc
cltd
insl
mov
mov
mov
lods
mov
jp
adcl
sbb
out
test
mov
mov
divl
lds
dec
and
cmp
xchg
movsb
aas
push
pop
ret
add
lea
outsl
and
dec
mov
sahf
or
cmc
push
push
xchg
stos
movsb
movsb
insl
sub
xchg
test
idivl
std
out
sub
jecxz
mov
imulb
cmp
imul
call
aas
push
int
xchg
sbb
and
xor
into
or
jns
rcrb
jle
xlat
adc
lods
cld
lret
stc
test
sub
add
xor
cmpsl
and
add
jmp
sbb
sbbl
xchg
imul
pop
popf
pop
std
fidivrl
jmp
sbb
pop
pop
adc
mov
cmp
ficoms
xchg
loop
aaa
jb
enter
and
xor
mov
ss
inc
cmpsb
dec
fstps
dec
outsb
enter
pop
repz
cld
iret
cmp
push
hlt
jns
mov
and
loope
lods
push
aas
les
decb
ja
out
stos
sbb
add
mov
jnp
addr16
sbb
pop
inc
popf
or
aad
shrl
fs
shll
adc
xchg
stc
das
xor
mov
sbb
or
and
insl
adc
in
push
iret
mov
sbb
jns
mov
mov
xchg
jge
cmp
outsb
lock
loope
hlt
jb
push
and
lret
in
dec
cmpps
adc
sahf
xchg
inc
fsts
jo
fdivp
mov
dec
jle
imul
fsubl
orl
mov
push
rolb
popa
push
or
aad
pop
pop
sti
push
xchg
adc
dec
insl
xchg
add
fnstenv
cmp
out
xchg
jne
ficompl
xor
fimull
adc
sahf
daa
out
inc
sbb
out
cmp
fmul
jmp
jae
xor
andl
ss
clc
aas
sub
repnz
clc
cmp
pop
mov
and
dec
add
ret
pop
fiadds
cmp
push
push
lods
xor
mov
insb
pop
xor
stos
sub
xchg
sbb
sti
mov
sub
cwtl
push
jbe
cmpsb
cmp
movsl
push
push
xchg
jb
xchg
xlat
push
mov
jmp
xor
jge
and
lret
fcmovne
fwait
mov
lds
out
cmp
push
orps
or
mov
pop
jo
cmp
cmpsl
or
xor
dec
div
sub
arpl
mov
in
jno
and
mov
shlb
iret
mov
mov
xor
andb
jge
jecxz
or
std
and
pop
jmp
dec
inc
das
mov
in
arpl
nop
mov
js
mov
les
stos
data16
movsl
std
mov
add
mov
sub
dec
aaa
xchg
push
in
push
stos
shrl
inc
jmp
xchg
insb
dec
cli
rcll
push
aas
inc
out
push
std
jl
sarb
mov
sbb
je
dec
sub
xchg
pop
cld
jne
out
dec
pop
pusha
loopne
out
lods
pushf
sub
shrl
pop
pop
dec
mov
pop
lock
mov
es
icebp
mov
shll
imulb
or
outsl
mov
mov
push
inc
jl
push
punpckhbw
aaa
adc
mov
cmp
dec
xchg
sbb
sbb
mov
push
out
sub
mov
cmp
aaa
into
mov
xor
mov
in
push
dec
add
xor
add
mov
mov
adcb
add
incb
into
jecxz
xchg
test
add
pushf
jp
sub
or
jge
hlt
arpl
aaa
and
loope
mov
adc
gs
or
push
int
xchg
test
pop
fdivl
mov
faddp
sbb
mul
test
in
sub
test
sbb
ljmp
in
inc
rcll
xchg
outsl
jnp
in
stc
int
aas
lods
pop
mov
push
imul
jbe
lret
out
mov
xlat
and
cmp
inc
fwait
stos
and
add
mov
adc
in
sti
inc
mov
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
test
aam
out
mov
ljmp
repnz
xchg
imul
rorb
jg
test
sub
hlt
pop
and
das
push
cmpsl
nop
nop
pop
pop
idivb
dec
cmp
fsubl
test
test
xchg
daa
pop
aaa
dec
mov
push
enter
push
test
jmp
mov
fistpll
roll
add
mov
cli
xor
xchg
movsl
orl
mov
and
stos
ror
push
xchg
into
vpslld
jge
sub
sbbb
dec
mov
jge
leave
xchg
cld
fwait
or
test
lock
sub
jg
lods
and
int
push
xchg
scas
leave
mov
fidivrl
std
or
sbb
and
cmpsb
jle
xchg
pop
dec
xor
jecxz
or
push
dec
dec
xchg
test
cmp
inc
mov
popa
jns
mov
fistpll
mov
psrlq
pop
mov
xor
sbb
negl
cmc
inc
sub
pushf
hlt
sbb
and
sbb
in
inc
xor
inc
mov
movsl
sbb
lea
jb
mov
movsb
imul
cmp
jo
push
inc
mov
mov
xor
aas
mov
clc
roll
das
inc
popf
lock
sub
dec
test
in
and
or
cld
pop
imul
dec
scas
xchg
decb
aam
cmp
cltd
cmp
movsl
push
push
pop
lods
cwtl
pusha
adc
mov
sbb
in
mov
cmpsl
or
out
mov
lret
or
push
div
xchg
int
lock
lock
das
leave
sahf
movsl
mov
fcoms
call
push
jmp
pop
filds
ret
add
add
lock
adc
jl
arpl
jl
ret
inc
test
sub
je
lds
scas
call
push
and
and
dec
fbld
notl
int3
out
push
add
xor
xor
xchg
mov
lods
inc
pop
fwait
insb
xor
ljmp
aas
dec
outsb
jo
in
inc
addr16
inc
data16
fildll
test
push
cli
subl
bound
jnp
add
push
or
fcoml
aas
ljmp
push
aas
dec
vminsd
ret
addr16
lea
mov
mov
adc
push
mov
insb
jnp
loopne
push
stc
mov
sar
jmp
dec
frstor
mov
shlb
add
push
mov
fdiv
jmp
sbb
sub
scas
inc
cmpl
xor
xchg
daa
iret
and
repz
cmp
fsubrs
and
cmp
xchg
insb
sub
adc
cmp
rclb
ficoml
xchg
inc
pop
std
pop
das
mov
dec
jnp
adc
loope
push
repnz
je
mov
ljmp
insb
cmp
adc
das
lock
jecxz
dec
jb
lret
jo
imul
sahf
push
ja
jp
sbb
push
nop
jo
dec
jns
dec
outsb
roll
pop
lcall
pop
test
inc
test
inc
pushf
ljmp
test
std
xchg
inc
into
mov
insb
add
insl
or
movsb
sub
dec
pop
lret
xlat
cmc
mov
notl
push
add
push
popw
dec
xchg
imul
mov
popa
jl
adc
mov
sub
fs
xchg
outsl
cmp
push
dec
jmp
loop
lcall
sbb
jge
mov
pop
xchg
cmp
adc
stos
jge
dec
sub
hlt
add
gs
subl
lock
imul
sti
test
jg
leave
push
jecxz
jecxz
les
out
arpl
enter
aaa
jnp
lds
mov
push
ljmp
fsubrs
jnp
push
sbb
xchg
sub
mov
mov
imul
pop
sub
stc
pushf
mov
movsl
ret
push
popa
stc
mov
mov
inc
mov
adc
in
or
push
rcrb
jae
rcl
jno
iret
xchg
pop
imul
repz
push
pop
sbb
lret
xchg
ret
loope
dec
push
adc
popa
lea
scas
sub
loop
push
pop
scas
xor
pusha
das
xor
fldl
iret
es
lret
inc
out
lcall
ret
lods
inc
stc
rcr
sub
xchg
jno
in
test
push
int3
jnp
adc
div
push
ljmp
push
push
mov
js
in
push
daa
add
stc
pop
xor
mov
pop
dec
dec
xchg
or
mov
xchg
pop
mov
jl
or
dec
jp
mov
sbb
aas
lock
aas
mov
mov
sub
in
sbb
add
add
inc
jb,pt
push
jg
jbe
ret
mov
mov
jl
cmpsl
pop
lret
shll
cmpsl
xor
fsubr
nop
enter
or
aaa
aam
js
add
rorb
push
jp
cmp
cmovs
stos
sbb
cmpsb
xor
iret
pop
push
or
push
cwtl
fsubs
call
mov
xchg
push
inc
popf
mov
push
inc
in
jecxz
lea
cmc
out
mov
rorl
int
pop
sub
rol
mov
inc
hlt
adc
inc
mov
push
cmp
std
cmp
or
mov
jle
push
jecxz
jns
movsb
jb
cmp
dec
test
fstps
imull
mov
outsl
push
push
and
xor
adc
in
inc
jg
fisubrs
and
mov
xchg
loope
pop
cmpsl
mov
pop
scas
inc
bound
mov
push
mov
sub
and
cltd
fcom
add
lret
pop
shl
pop
mov
ljmp
mov
push
mov
mov
int
test
inc
adc
mov
cmp
int3
es
mov
jle
inc
int3
negl
dec
push
dec
nop
leave
inc
jae
mov
jne
and
cmpsl
push
or
and
inc
pusha
cmpsl
cmp
scas
jne
push
lret
ljmp
out
inc
and
or
cmpsl
loope
das
rorb
add
and
test
xchg
push
mov
xchg
loop
jle
in
daa
fwait
js
push
cmpsb
rcrl
scas
jb
push
jo
pop
hlt
repz
repnz
shl
and
sub
std
or
cmp
ret
adc
mov
mov
shl
cmp
or
lods
xchg
enter
out
sub
jns
ret
xchg
sub
lcall
xor
pop
sub
out
call
ja
aas
add
iret
mov
leave
popf
test
dec
loope
pusha
outsb
sub
add
cltd
inc
lods
test
push
dec
and
mov
cmp
adc
int
xor
pop
pop
pop
test
lods
dec
pop
inc
std
dec
fs
or
pushf
jp
frstor
fmull
in
cs
and
in
cmp
iret
jmp
pop
lock
loope,pt
adc
lret
xchg
ss
in
adc
shl
mov
lret
and
jg
pop
pop
out
int3
mov
jl
into
xchg
mov
aaa
rorb
sub
sbb
outsl
ja
decl
add
inc
aas
push
mov
pop
xor
aad
push
mov
rcrl
fisubl
cmp
sub
mov
mov
jnp
roll
push
iret
inc
xchg
ficompl
shrb
in
sub
mov
jmp
cmp
mov
ret
push
lock
or
mov
sub
pop
je
ret
je
popf
fcmovnu
mov
jp
adc
pop
test
cmp
add
jae
mov
sub
sub
pushf
jp
frstor
mov
cmc
sarb
inc
xchg
or
sti
inc
add
push
add
mov
icebp
and
sbb
and
xor
pop
pop
iret
mov
xor
loop
mov
mov
jl
and
xlat
sbb
lds
test
adc
cmp
sbb
and
cmpsl
jne
inc
cli
inc
cmp
xchg
and
and
xor
push
out
adc
push
lods
pop
push
loope
push
enter
cmpl
stc
mov
mov
cltd
outsl
dec
fisttpll
in
cld
lods
test
loop
test
cltd
out
mov
lods
in
add
les
adc
in
mov
arpl
bound
gs
sahf
iret
add
call
push
jp
xchg
inc
push
inc
mov
and
ss
arpl
xor
pop
and
in
xor
xor
cmc
mov
pop
icebp
mov
cld
into
imull
inc
jno
xlat
sahf
fadd
or
cmp
cli
cmpsl
inc
sti
ds
add
jnp
pop
ret
cmp
xchg
imul
jb
inc
cmp
and
xchg
xchg
leave
pop
mov
fildl
lds
outsl
out
jmp
xchg
mov
in
call
cmp
cmpsl
movsl
xchg
add
or
cmpl
mov
inc
inc
aad
xor
mov
shl
ret
mov
shll
push
dec
dec
mov
aad
movsb
pop
and
cmp
mov
cmp
in
test
mov
lret
push
mov
jge
adc
push
shr
out
aas
imul
xor
orl
sub
mov
jae
addr16
cmp
iret
mov
jl
adc
xor
pop
repnz
imul
mov
sti
ficoml
adc
cmp
iret
icebp
jbe
dec
data16
mov
cmp
lds
pushf
ret
out
sti
cmp
notb
jo
dec
pop
loop
adc
xlat
dec
shr
and
add
xchg
sub
and
jb
cmp
dec
test
xchg
inc
les
fincstp
mov
ja
repz
aam
sbb
lea
lret
pop
stos
lret
xchg
mov
jno
push
and
iret
test
test
sbb
cmp
cs
sub
repnz
push
ja
adc
add
xchg
mov
dec
outsl
ret
subb
fs
mov
dec
push
test
addb
mov
adc
cmp
insb
add
push
mov
pop
fimuls
sub
stos
adc
dec
shrb
iret
cmp
fsubrs
mov
pop
sub
mov
xrelease
mov
imul
inc
inc
movsl
jbe
sub
popl
iret
aaa
mov
or
movsb
pusha
sub
test
cmc
mov
lock
pop
xor
mov
int
out
les
addr16
dec
or
rolb
mov
mov
xchg
adc
mov
cwtl
inc
loopne
imul
add
sti
xchg
mov
pop
loopne
push
subl
add
gs
adc
xchg
mov
dec
cld
and
nop
sub
mov
and
pop
cmpb
mov
mov
pushf
imul
divb
bound
pop
lret
inc
fildll
or
push
pop
scas
nop
inc
jmp
mov
loope
or
mov
shr
into
inc
or
test
jmp
inc
fists
cmp
ja
push
cmp
sbbl
cmp
dec
lds
jne
jno
sub
mov
stos
dec
in
xchg
cld
sub
fwait
push
xchg
sbb
dec
jle
mov
dec
negb
dec
cmp
std
cltd
xor
cmpsl
mov
js
outsl
cmp
movsb
aad
fs
mov
dec
lock
xchg
lahf
ror
movsb
mov
pop
mov
dec
test
dec
jmp
shl
jg
les
add
or
inc
icebp
lods
test
push
dec
dec
dec
lock
dec
sub
std
mov
jne
int
sub
push
orl
mov
sub
push
iret
int
out
scas
inc
imul
insb
scas
cld
dec
xchg
js
sbb
lock
cmpsb
imul
movsb
mov
pop
icebp
shlb
sub
mov
dec
je
adcl
adc
rolb
mov
out
mov
ss
int3
dec
sub
push
insb
and
cmp
and
adc
jo
cmc
sub
jmp
sarl
insb
in
fdivrs
and
pop
mov
xchg
sub
icebp
cmpsl
pop
adc
mov
dec
nop
jo
inc
mov
lcall
and
xor
lds
mov
cmp
pop
push
mov
adc
pop
stos
xor
push
lahf
imul
fs
ja
jp
mov
lods
daa
ss
shr
jge
leave
push
mov
dec
or
cmpsl
add
xor
out
sahf
int
or
push
xor
call
sahf
pop
cli
mov
nop
cmp
iret
mov
dec
rclb
mov
decl
popa
mov
mov
add
dec
push
pop
call
in
pop
push
fdivrl
aaa
and
mov
fprem
jns
pop
mulb
jne
inc
sbb
enter
nop
bound
dec
fstl
and
test
into
jne
lret
xor
mov
adc
std
int
je
aaa
and
lods
test
inc
inc
aam
idiv
pop
test
sbb
push
mov
out
sbb
int
inc
add
rorl
or
imul
inc
daa
cmp
repnz
lea
lock
jne
xchg
shl
aas
incl
in
mov
mov
mov
or
mov
inc
xchg
xchg
adc
cmp
jnp
mov
sti
fistl
dec
inc
lea
adc
add
add
test
dec
pop
repz
mov
loopne
mov
pop
inc
mov
pusha
je
sub
push
sbb
dec
lods
insl
mov
dec
cmp
xor
mov
into
movsl
scas
icebp
mov
sbb
lahf
loopne
jle
dec
push
cs
add
xor
xchg
add
cmpsl
adc
xchg
jecxz
mov
fstpt
and
inc
jo
push
xrelease
sub
sbb
fwait
pop
pop
rcrb
popa
xor
xor
and
stos
insb
cmp
es
jnp
icebp
movsb
jecxz
xchg
gs
dec
js
stc
sbb
mov
stos
fnstsw
push
mov
es
sbb
sarl
mov
ret
bound
bound
jae
aad
adc
aam
lcall
push
loopne
mov
adc
add
push
xchg
dec
scas
dec
and
jl
mov
xchg
fwait
loopne
cmp
fiaddl
iret
fcom
test
divb
sarb
or
xchg
fsubl
cmp
push
int
mov
scas
xor
dec
test
xchg
and
dec
push
cmp
sha256rnds2
add
mov
or
mov
insl
sbb
ret
decb
out
fists
push
pop
fcmovb
outsb
mov
inc
cmp
nop
mov
inc
mov
mov
aas
push
je
das
dec
imul
shll
sbb
push
pushf
lcall
jl
adc
mov
scas
cwtl
jp
js
lea
push
test
xor
fs
pop
rcr
pop
sub
and
jno
jmp
ljmp
hlt
xor
or
scas
push
je
in
cmp
sbb
es
addl
subb
mov
hlt
lcall
mov
sahf
xor
ljmp
notl
mov
xor
xchg
mov
xor
movsb
out
lods
movsl
shlb
dec
sub
jno
mov
pop
sarl
pusha
inc
and
or
lret
cli
push
dec
xchg
and
jnp
cmpsl
adc
gs
popf
cmp
dec
scas
xlat
lds
xchg
cli
xchg
push
clc
mov
lea
cmpsl
and
pop
cmp
jge
scas
jmp
insb
add
mov
shlb
push
fs
adc
pusha
sbb
push
clc
jnp
xchg
or
cmp
and
inc
sbb
push
sahf
mov
imul
cmpsb
out
pusha
mov
mov
fmuls
mov
and
or
gs
inc
sub
jmp
aaa
xchg
push
sub
jo
push
pop
in
mulb
pop
sub
fidivrl
mov
fildl
call
mov
scas
lods
outsb
stos
adc
out
jecxz
mov
shll
icebp
rcl
jecxz
ret
popl
lahf
aam
stc
icebp
cmp
cs
and
adc
mov
or
add
and
les
ret
pop
loope
outsb
pop
mov
lods
mov
xlat
mov
sahf
mov
fwait
lret
iret
std
mov
cmp
frstor
fwait
test
xor
adc
pop
mov
dec
shll
xor
and
das
push
imul
call
push
cmc
movsb
imul
inc
hlt
add
enter
lods
sbb
jne
sti
pop
or
gs
sub
aad
and
pop
pop
out
mov
into
inc
xchg
cmp
push
cli
fisttps
mov
and
xor
inc
xor
cmp
push
out
pop
and
imul
xchg
xor
fnstenv
das
repnz
fcomp
dec
mov
mov
dec
test
jecxz
xchg
notb
int
inc
pop
cmpl
cmp
in
cli
ror
sti
daa
cmp
mov
jns
je
sub
sbb
out
push
cltd
inc
icebp
mov
gs
adc
popa
addr16
add
jb
out
cld
jl
jl
sbb
aad
ja
testb
es
movsb
push
test
or
fwait
aad
jno
inc
rclb
adc
xchg
stc
xor
xlat
arpl
out
arpl
xchg
jo
xchg
xchg
or
lock
insb
lods
jno
jl
jne
push
xchg
ds
pop
lods
push
pop
inc
mov
loope
clc
iret
add
cmp
jnp
jge
scas
mov
cmp
push
es
mov
xor
enter
cs
arpl
repz
dec
xchg
push
adc
cmp
jl
sbb
lods
adc
add
mov
addr16
pop
push
clc
inc
xchg
sbb
mov
sub
outsl
out
daa
mov
mov
int
leave
push
xchg
orl
jp
icebp
xchg
flds
xlat
mov
pushf
dec
sub
imul
xor
cmp
xchg
add
xchg
mov
mov
push
clc
xor
ret
pop
adc
or
cmpl
inc
pop
adc
movsl
or
popa
adc
leave
fs
jmp
pop
jno
nop
dec
repnz
jne
xor
ljmp
pop
jmp
push
in
test
sub
cmc
push
imul
sub
jle
flds
aaa
cmp
loopne
pushf
repz
hlt
add
lret
leave
dec
mov
mov
mov
hlt
xchg
xchg
cmpsl
xchg
movsl
popa
push
xchg
jne
cld
jl
or
mov
test
mov
adc
sbb
push
addr16
push
insb
jp
push
cmpsb
mov
push
xchg
xchg
and
add
loop
les
xchg
scas
pop
push
in
mov
stos
lret
aas
mov
stos
ss
jg
in
cmp
fidivrl
cmp
dec
loopne
jne
mov
aaa
or
or
mov
and
add
push
test
adc
or
outsb
cmp
ds
mov
dec
popa
pop
or
insl
push
imulb
dec
lds
mov
jl
add
pop
push
pop
jg
pop
pop
dec
fcmovne
xor
sub
imul
xchg
sub
cmp
ficoms
dec
fmuls
shrb
loope
xchg
repnz
xor
loopne
dec
orb
cmp
daa
add
loop
mov
and
movsb
fadds
gs
lret
mov
into
je
and
or
push
sbb
gs
data16
loopne
repz
lret
cmp
sbb
ret
stos
or
andl
sbb
sarb
testb
and
out
pop
aas
lahf
enter
inc
fabs
adc
xchg
mov
and
ret
inc
es
mov
adc
test
mov
pop
and
xchg
enter
mov
mov
lods
mov
pop
adc
lcall
popf
push
cmp
cmc
popf
aam
test
and
mov
aaa
mov
sub
fdivrl
fldl
and
pop
pop
je
into
hlt
inc
xor
imul
lahf
dec
shrl
je
xchg
rcr
xchg
loop
cwtl
pop
pop
pop
sti
pop
cmpsb
xor
or
dec
sbb
jp
addr16
mov
mov
nop
outsl
and
and
jne
lret
push
bound
movsl
fwait
lret
fsubrs
je
imul
cmc
mov
sbb
pop
mov
push
int3
jg
ja
pop
inc
stos
cmp
jnp
cmc
push
fimuls
pop
cmp
sub
fsubl
imul
mov
xchg
neg
aas
imul
pop
lods
jno
adc
repz
sub
adc
int3
lods
loopne
fcomps
ret
cwtl
ja
pop
cmp
daa
mov
mov
out
and
shll
imul
push
movsb
mov
pop
push
idiv
xor
scas
subb
inc
dec
lcall
add
pusha
dec
je
mov
jnp
negb
and
fcomip
rcrb
or
fldl2e
xchg
push
inc
mov
jno
xor
es
subb
dec
push
inc
incb
outsl
pop
out
rorb
and
sub
aam
inc
cmp
mov
push
test
xor
out
sbb
rolb
int3
mov
aad
xchg
xchg
fwait
adc
mov
stos
inc
clc
pusha
daa
inc
repz
cmc
daa
mov
jge
cmp
mov
icebp
lcall
mov
jg
adc
out
loop
leave
popf
adc
mov
and
pop
jo
dec
mov
push
rcr
or
and
mov
sub
push
xor
cmc
pop
and
jae
sub
pushl
or
mov
enter
and
test
insb
xor
cmp
lahf
pop
mov
or
fildl
clc
inc
je
leave
or
adc
pop
rorb
in
pushf
popa
lret
add
fsubl
icebp
mov
out
jns
out
push
cmpsl
je
and
subl
push
divb
icebp
push
stc
divb
insb
sahf
in
xor
popa
mov
ret
dec
add
je
out
out
mov
xlat
inc
lcall
mov
lods
xor
std
scas
xchg
mov
mov
xor
subl
test
pop
xor
lcall
inc
stos
imul
or
mov
jge
das
leave
sbb
loop
jbe
stos
adc
int
jb
xor
test
dec
jb
mov
push
mov
dec
adc
icebp
and
xor
xor
ficomps
mov
bound
xchg
or
pushf
cwtl
mov
pop
dec
mov
iret
enter
sub
push
and
fcmovne
clc
nop
pushf
lcall
popf
push
push
dec
aaa
out
inc
test
jmp
sbb
subl
cli
test
ret
popf
fdivl
push
mov
sub
cmc
insb
sub
jbe
push
repnz
or
or
daa
inc
fadd
mov
sub
clc
dec
scas
pushf
fldcw
cmpsl
cltd
jp
pop
aam
jnp
push
pop
cld
dec
out
orb
and
xor
scas
cmp
fdivrl
fcomps
cmc
inc
sbb
mov
fsubl
cmp
mov
or
pop
mov
dec
jo
cmp
xor
dec
or
incl
shlb
sbb
mov
and
mov
mov
sbb
insb
sbb
push
sub
lods
in
sub
mov
or
dec
cmp
adc
cmp
jns
xchg
stos
icebp
mov
xlat
in
lock
xchg
insl
add
testb
test
or
mov
ret
pushf
adc
adc
aam
or
mov
cwtl
imul
sar
mov
push
iret
shlb
loopne
sbb
jg
add
add
inc
leave
insb
stos
and
cmpsb
jle
xchg
pop
dec
xchg
js
ds
xor
and
out
push
add
and
jne
int3
mov
or
repnz
pop
lahf
scas
jle
push
add
inc
mov
or
adc
mov
mov
dec
add
adc
xor
xchg
lods
mov
mov
loope
jle
shlb
fiadds
stos
and
xchg
pop
xlat
mov
lods
cwtl
cli
push
xchg
cltd
sbb
jbe
xchg
or
mov
in
sbb
out
lea
adc
cltd
outsb
stc
das
repz
cmp
iret
out
cmpsl
mov
int3
adc
bound
ds
and
lods
addr16
ss
and
ja
sbb
test
add
cmpsl
stc
push
arpl
cmp
jbe
aaa
mov
mov
sbb
mov
inc
loope
movl
add
adc
bound
mov
cld
jl,pt
inc
jle
cltd
pop
mov
out
push
aad
sbb
lret
aam
inc
mov
clc
or
dec
push
sar
fs
and
mov
inc
pop
cwtl
gs
add
push
push
int3
cmp
insl
add
inc
ret
outsl
dec
scas
je
out
jnp
xor
loop
push
inc
adc
push
mov
inc
xor
inc
cmp
dec
fidivrs
jmp
mov
test
mov
enter
in
lcall
sahf
ja
jns
fucom
sub
stos
in
or
insb
out
xor
cwtl
xchg
inc
out
movsl
fnsave
push
leave
push
leave
add
aam
mov
cmp
mov
shr
js
scas
or
dec
outsl
cmpsb
or
shl
inc
mov
test
shll
pop
addl
xlat
dec
movlps
movsl
pop
movsb
shlb
sub
xchg
addr16
into
popa
js
add
imulb
cmp
mov
mov
mov
jp
mov
mov
pop
jbe
xor
mov
sbb
fs
mov
iret
shrl
mov
jbe
pusha
and
popf
inc
rol
andl
out
dec
or
sbb
popa
movsl
pusha
cwtl
pop
and
push
testl
lcall
xchg
fst
dec
jb
test
mov
mov
movsl
leave
sti
mov
add
or
enter
repz
dec
fistpll
in
push
nop
or
push
mov
dec
fisttps
es
and
ret
sub
push
movsl
ret
jl
jle
pop
shl
insb
mov
jg
sahf
xchg
repnz
push
js
fwait
push
or
push
sub
rcrb
mov
pop
fs
pop
xchg
movsl
inc
inc
lret
sbb
cld
ljmp
jno
add
movsl
jae
test
mov
sar
sahf
sbb
dec
sub
out
mov
out
cmp
vpmaxub
add
dec
or
aad
sbb
pop
imul
sti
jns
pop
dec
mov
xor
or
hlt
cs
jmp
test
jecxz
dec
push
cmp
mov
pop
jmp
movsl
test
rcr
xor
mov
rol
and
add
outsb
movsb
mov
clc
stos
roll
dec
mov
je
mov
inc
negb
cld
mov
push
sbb
aas
fisttps
test
push
cmp
jmp
enter
xlat
fcmovb
mov
pop
bnd
sub
cli
mov
push
mov
in
pop
push
divl
sub
jmp
jp
sub
fwait
jge
add
jb
test
push
inc
in
mov
lret
cmp
jle
sub
sub
sahf
dec
fmulp
push
cmp
leave
mov
shl
jg
jae
sbbl
mov
fbld
pop
jl
jge,pn
push
fwait
jecxz
jno
pusha
add
mov
or
jmp
jmp
inc
out
ljmp
test
adc
jl
jno
rcrl
sbb
lods
in
adc
test
stos
jb
jne
pushf
int
ret
mov
cmp
mov
pop
add
jns
inc
or
pop
push
pop
pop
mov
push
repz
mov
cmp
fnstcw
sub
decl
add
fildl
rorb
testl
mov
sbb
daa
add
es
jg
mov
push
lds
jbe
mov
clc
xchg
aad
mov
or
out
mov
daa
in
mov
cmp
fsubrs
and
jno
sub
fdivrl
xor
stos
rorb
aaa
and
lock
sbb
dec
push
mov
or
fimull
in
lea
xor
jno
pop
aaa
rcrb
hlt
mov
adc
dec
dec
cmp
push
lock
jp
cmpsl
sarl
xchg
hlt
add
les
push
mov
mov
lret
mov
mov
xchg
loopne
out
inc
fisubrs
pop
lret
jae
int3
jp
leavew
aaa
mov
jg
popf
fldt
std
ret
xchg
dec
push
fwait
mov
adc
xchg
rcll
pop
mov
jmp
imul
movsb
cltd
cltd
cmpsl
jnp
scas
xchg
insl
cmp
arpl
mov
mov
adc
stc
filds
dec
das
mov
sbb
cmp
fsubs
push
jmp
stos
mov
push
cwtl
and
loop
lcall
push
xchg
mov
cs
jg
or
mov
sahf
adc
adc
and
imul
loopne
inc
imul
orb
popf
and
adc
pop
sub
cmp
ret
lock
cmp
fistpl
insl
jnp
sub
sbb
dec
xchg
and
xorl
aad
dec
daa
out
pop
test
pop
mov
pop
ljmp
mov
or
imull
movsb
stos
mov
cltd
inc
data16
in
add
std
inc
mov
enter
ljmp
movsl
push
and
jg
push
adc
mov
jne
mov
xor
lock
sarl
jae
xchg
or
mov
or
pop
repnz
repz
loopne
jl
insl
and
sbb
dec
mov
dec
mov
pop
push
lcall
popa
std
and
jno
inc
stos
aaa
and
stos
out
add
mov
xlat
push
mov
sbb
hlt
fmuls
pop
stos
dec
jle
outsl
jnp
out
clc
xor
les
lcall
into
popa
outsl
mov
sbb
test
adc
pop
movsb
mov
test
jb
jmp
iret
mov
sbb
pop
adc
jg
sub
cltd
int
mov
adc
jp
add
adc
jp
lcall
sub
inc
movsb
lock
cld
insl
and
and
sub
je
leave
ret
nop
sub
fmuls
icebp
jecxz
pop
out
leave
test
rorb
popa
cmp
sbb
xchg
push
mov
cmpsl
jge
popa
cmp
int
xor
inc
repnz
adcl
and
je
imul
cli
mov
test
dec
mov
scas
mov
mov
jecxz
sahf
mov
aad
jb
sub
jp
pop
outsl
js
xchg
xchg
xchg
inc
or
push
in
pop
lcall
out
popf
pop
ss
pop
add
fisubrl
lret
icebp
mov
aad
adc
jnp
fmull
enter
mov
mov
mov
sarl
adc
xchg
leave
notl
jl
jo
jmp
or
or
adc
add
mov
cmpsl
les
or
and
push
dec
jo
nop
repnz
repz
or
and
in
clc
mov
or
test
mov
mov
sbb
dec
aaa
int
or
mov
pop
ret
fdivrp
xchg
sub
imul
mov
std
adc
and
add
and
pushf
sub
mov
inc
push
xor
mov
scas
jl
xorl
pop
repnz
lret
dec
lods
push
sbb
int3
jge
xchg
pop
insl
aas
jecxz
aad
popa
jg
xchg
adc
push
shlb
jno
movsb
or
sbbb
lret
fldcw
clc
pop
das
adc
scas
aam
mov
mov
dec
dec
mov
xor
jns
cwtl
or
cmp
jbe
and
out
int3
rcrl
fildll
mov
rcr
push
adc
xchg
dec
lock
andb
adc
cmp
dec
jp
and
inc
aam
or
mov
xor
cmp
jecxz
std
add
mov
push
xor
xchg
mov
sti
gs
sub
push
movsb
dec
sub
bound
mov
dec
jbe
push
test
lds
dec
mov
fidivl
adc
sub
daa
mov
mov
fildll
test
movsl
xor
testl
out
xchg
jne
xchg
mov
mov
push
data16
test
rorb
in
push
jne
or
sti
pop
std
mov
mov
movsl
in
movl
pop
jp
movsl
fistpl
sbb
dec
mov
inc
popf
or
das
add
push
sub
jb
loope
mov
imul
sti
jae
in
sub
jmp
inc
ficompl
lahf
mov
aas
sub
xchg
mov
stc
loopne
push
mov
sbb
mov
adc
mov
add
xchg
and
iret
push
mov
xchg
ret
fists
pop
and
and
xchg
imul
xor
push
jne
xchg
nop
lds
fnsave
inc
mov
or
jnp
mov
jle
xchg
ret
adc
mov
push
xchg
lds
jno
xchg
outsl
lods
scas
insb
lret
xor
add
mov
repz
loop
movzbl
insb
decb
push
std
mov
bound
das
call
jg
inc
cs
lsl
test
pushf
cld
pop
push
xchg
ljmp
rcrl
daa
xor
daa
xor
movsb
hlt
push
leave
bound
out
jo
and
or
sahf
leave
or
shrb
pop
scas
add
pushf
es
mov
daa
or
jo
mov
jae
mov
xchg
gs
mov
popa
xor
mov
xchg
mov
inc
in
and
xor
mov
imul
pusha
ja
or
notb
test
in
scas
xor
lcall
jmp
xlat
into
adc
cmc
adc
aad
lods
mov
and
sub
ror
cmp
jmp
sbb
out
sub
mov
ret
in
inc
mov
cs
add
inc
cmp
dec
jns
xlat
and
enter
cwtl
jae
mov
or
rcr
cld
subl
dec
push
jl
cmc
or
xchg
aas
sarb
mov
push
scas
xchg
and
xchg
sbb
in
int3
fnstsw
lods
fwait
mov
xor
add
add
shll
mov
in
mov
sahf
xchg
int3
outsl
pop
call
inc
icebp
or
mov
int3
add
outsb
cld
test
pop
sub
fcoms
rclb
mov
popf
sub
inc
call
ds
mov
pop
jl
pop
into
clc
lds
jecxz
es
inc
or
sbb
pushf
push
int
jecxz
repnz
mul
add
orb
mov
cld
in
cmc
pop
int3
xchg
repnz
inc
arpl
in
xor
cld
hlt
fs
in
jno
sub
inc
jecxz
int
push
scas
pushf
cmp
out
add
add
push
and
add
sbb
inc
filds
pusha
mov
fisubrs
push
lock
rcl
lea
negl
sub
lock
test
js
les
flds
add
bound
sbb
mov
sti
ja
push
fstpl
xlat
jo
xor
movsl
mov
pop
mov
cmp
dec
adc
mov
push
aam
xor
and
aaa
and
imul
dec
shl
fwait
xor
shrl
notb
fs
int3
iret
stos
icebp
add
lcall
and
sbb
mov
xor
or
inc
ret
mov
roll
test
cmp
mov
lcall
xchg
jg
insb
pop
call
jp
leave
sbb
movsb
mov
add
sub
jae
cmc
std
bound
in
test
jnp
js
pop
add
ljmp
mov
cltd
je
enter
jecxz
rcrb
mov
mov
sub
lret
sub
leave
mov
pop
xchg
or
sub
call
jmp
arpl
pusha
cmp
dec
loop
or
stc
xchg
jbe
and
push
jbe
test
sbbb
mov
cmp
lods
push
imul
push
sbb
inc
and
push
jns
fisttps
test
cmp
dec
test
inc
in
jb
stc
daa
pop
repnz
fdivrs
dec
push
add
repz
xchg
adc
add
adc
and
push
fnstenv
and
push
adc
testb
cwtl
inc
or
mov
cli
pop
ss
cltd
movsb
or
loope
fstl
lods
jp
inc
scas
in
xor
cmp
pop
cmpsl
loop
in
xchg
loop
pop
das
dec
dec
fildl
pop
loop
add
xchg
mov
ret
clc
or
rcrl
jb
clc
or
jl
lds
loope
lods
and
xor
sbb
lahf
pusha
pop
pop
lods
mov
dec
lods
add
sbb
lock
orb
stos
fcoms
push
dec
mov
sbb
xorl
aas
pop
pusha
in
movsb
lds
pop
push
adc
jle
orl
jns
adc
in
sbb
pushf
mov
pop
insb
jae
mov
cli
pop
mov
hlt
cmpsl
xor
pop
or
pop
sub
bound
inc
add
sbb
insl
lcall
xchg
pop
or
dec
xchg
lret
inc
mov
out
mov
lods
or
gs
inc
in
outsl
sti
leave
jns
add
imul
test
ds
push
das
mov
xor
movsb
pop
adc
loope
add
in
stos
adc
fnstenv
xchg
inc
loop
dec
es
push
dec
mov
mov
outsb
imul
gs
test
adc
lahf
dec
insl
mov
and
and
sub
dec
mov
aaa
adc
mov
push
cmpsb
leave
je
cli
mov
fstpl
and
shl
rolb
dec
and
cmpsb
add
pop
pop
lds
jae
sub
lods
cmp
inc
and
mov
mov
or
mov
stos
xor
adc
mov
cmp
cwtl
aam
sub
add
popa
adc
rcr
ret
pop
jp
das
xor
shll
test
outsl
sti
arpl
sub
mov
cs
pop
cs
nop
aam
or
out
xchg
adc
cmp
in
imul
and
loopne
add
lds
dec
bound
gs
push
insb
push
cs
xchg
add
pop
loope
mov
pop
push
or
cmp
hlt
movsb
mov
and
inc
outsb
pop
test
fstps
push
loop
pop
dec
stc
jmp
gs
mov
fsubl
cmc
xor
adc
cmp
adc
mov
stos
and
test
cmp
pop
pop
or
ret
mov
lods
mov
push
jp
sbb
roll
in
push
test
cld
mov
push
clc
add
sub
test
sbb
rcll
push
aad
outsb
cmpsb
imul
stos
ret
lahf
push
leave
fisubl
mov
pop
je
mov
mov
nop
push
mov
dec
ss
mov
scas
imul
dec
or
mov
ss
les
loop
testb
loopne
sbb
inc
in
xorl
adc
data16
mov
jne
sub
push
xchg
pop
repz
mov
scas
dec
or
data16
in
xor
stos
adc
ljmp
xchg
jae
and
stos
shlb
adc
adc
leave
lods
leave
gs
imul
aad
cltd
ljmp
mov
outsb
sub
cmpsb
or
pop
clc
xor
pop
sbb
nop
in
or
int
mov
pop
xchg
pop
sbb
mov
push
sbb
icebp
cmp
mov
push
cmpsl
mov
sbb
into
pusha
cmpl
xchg
fst
cli
insb
lods
icebp
xchg
push
nop
int
mov
hlt
xor
mov
sbb
testw
out
les
imul
bound
cmc
aaa
mov
rol
addr16
pop
and
xchg
je
mov
pop
icebp
sbbb
hlt
fcoml
or
ret
add
jno
lock
xchg
mov
adc
mov
add
xor
jle
jmp
xor
push
jecxz
test
mov
mov
xlat
xor
les
test
fdivl
gs
xor
push
jbe
hlt
in
loope
lods
in
fisttpl
pusha
cmc
jne
fnstsw
cmp
cmp
inc
gs
nop
mov
imul
mov
pop
ja
mov
jp
push
popa
dec
insl
fwait
stc
cli
ror
push
cmp
xchg
lahf
js
ret
push
punpckhbw
in
call
jb
jo
in
cmpl
dec
sbb
mov
jge
lret
jmp
cld
roll
stc
dec
lds
popa
fisubrs
pop
cmc
gs
subb
adc
dec
imul
mov
sbb
lret
lret
jmp
push
jnp
adc
cmp
leave
filds
jb
inc
dec
jmp
lds
divl
js
jno
pop
hlt
adc
push
hlt
enter
mov
pop
aad
popf
int3
dec
mulb
inc
mov
jo
stos
push
movsl
fadds
xor
mov
sbb
scas
xchg
cwtl
and
es
sub
in
jp
das
xlat
cmpsb
roll
shrb
insb
test
addr16
mov
inc
pop
xor
adc
push
je
imul
filds
or
movsb
sbbb
xchg
dec
mov
inc
mov
xchg
loope
cmpsb
jge
jl
in
pop
cmpsl
sbb
lret
lds
in
adc
cmc
lcall
xchg
scas
gs
pushw
shrb
lret
movsb
das
jmp
jns
mov
pop
sbb
popf
or
movsb
into
dec
adc
xchg
push
nop
fildll
stos
stos
xor
data16
rclb
xchg
pop
fs
inc
cmc
cmc
mov
adc
sbb
daa
xchg
negb
aaa
cld
outsl
mov
xor
xorb
or
lods
fisubrl
nop
cltd
push
daa
push
mov
adc
aaa
mov
in
fsts
out
adc
mov
mov
mov
push
shlb
cwtl
jecxz
out
mov
inc
cld
jmp
xchg
push
mov
mov
out
and
aam
push
insl
shrl
inc
mov
dec
adc
cwtl
inc
gs
pop
mov
add
je
dec
push
add
xchg
xor
cmp
sub
cmp
push
test
and
xchg
push
cmp
sub
inc
popf
dec
mov
and
jae
xchg
mov
lret
call
lods
and
or
subb
or
hlt
icebp
call
popa
adc
dec
leave
push
pop
insb
cmp
sarb
inc
jne
inc
ret
ja
fwait
sub
mov
lock
mov
mov
xchg
sbb
jo
cli
xchg
loop
dec
outsl
push
in
outsb
out
dec
lret
fistpl
push
cmp
adc
push
out
fdiv
test
popa
lods
ret
pop
lods
push
xchg
dec
mov
test
insb
out
mov
inc
addb
cmp
addb
mov
fiaddl
icebp
xlat
aad
cmp
aas
jg
test
fisttpl
mov
dec
imul
in
call
adc
mov
icebp
pop
inc
ret
xchg
leave
mov
cli
mov
call
enter
pop
xor
arpl
mov
movsb
inc
fwait
inc
shll
int
xchg
cwtl
adc
jns
push
cmc
out
or
push
push
cmp
mov
push
aam
add
shrb
fnclex
xchg
aad
push
int3
imul
flds
and
jmp
mov
ljmp
stos
xchg
jno
sub
lock
test
ret
cmpsl
sti
test
or
cltd
cmpsb
popf
add
and
mov
test
adc
mov
cltd
mov
push
add
movsb
sarb
repnz
sub
lods
cmp
aas
xor
adc
mov
fs
pop
arpl
insb
fs
fsubl
clc
rcll
xor
shrb
mov
or
ja
dec
mov
push
popa
sar
inc
ss
pop
fwait
sbb
test
sbb
pop
les
sbb
mov
adc
mov
mov
xor
pop
mov
movsb
jo,pt
adc
iret
xchg
nop
ret
add
ss
inc
imul
rcrb
rcrb
test
enter
adc
fwait
inc
push
jp
pop
fcoms
mov
xor
je
and
mov
scas
and
repnz
cmpsl
jecxz
rolb
sub
push
decl
xor
fnsave
das
jo
push
ficoml
insl
cmp
pusha
push
push
cs
rorl
stc
test
or
test
cmp
jbe
dec
xchg
inc
push
inc
out
pop
jnp
mov
loope
pop
out
mov
gs
in
pop
cmp
sbb
fimull
das
adc
cs
fcoms
test
aad
bswap
repnz
push
loop
mov
out
divl
fldenv
or
or
sbb
lea
aam
popa
pop
repnz
test
add
xor
lea
lods
in
scas
imul
or
pop
lock
lds
mov
fistpll
push
nop
cmp
adc
test
mov
mov
call
push
cltd
mov
fwait
mov
icebp
sub
in
add
and
std
in
mov
xor
inc
push
sbb
lds
fcmovb
sub
fsubs
movb
aad
bt
jge
inc
cmp
dec
insb
repnz
int3
out
sub
aas
aaa
ret
movsb
es
test
fildl
lcall
sar
push
sarb
insl
sub
cmp
add
cmpb
in
xor
jb
cs
adc
dec
or
fs
or
leave
jns
inc
sub
or
add
pushf
cs
mov
push
aaa
add
cmpb
jne
xchg
push
arpl
adc
fisttps
dec
inc
aad
add
dec
add
loopne
push
test
xchg
loop
mov
dec
pushf
jae
mov
push
mov
lcall
es
shlb
push
jbe
ret
sbb
pushf
xchg
popf
lret
test
hlt
mov
arpl
and
lods
dec
and
ljmp
repz
add
xchg
pop
adc
fcmove
aas
loopne
push
mov
add
insl
jo
outsb
aas
aad
out
aas
add
inc
aas
sahf
pop
dec
cmp
jecxz
jmp
call
sbb
pop
test
iret
push
jne
push
lods
sub
subl
jmp
stc
test
sarb
push
push
xchg
and
pop
jnp
into
out
icebp
mov
ja
sahf
into
and
fiadds
stos
xchg
out
push
sub
pop
pop
cmp
xlat
adc
mov
cmc
aaa
pop
push
pop
mov
push
adc
das
repnz
or
xor
sbb
mov
dec
imul
js
mov
dec
mov
mov
pop
dec
sub
xlat
jno
mov
in
mov
fimull
and
sbb
push
pop
xchg
xchg
mov
inc
movsl
sub
jns
mov
inc
rcr
mov
adc
shl
inc
push
adc
std
xor
pop
pop
adc
fidivrl
dec
stos
push
ljmp
push
mov
enter
loope
cmp
or
or
pusha
xor
jle
pushf
mov
ret
test
mov
pop
insl
les
jmp
test
xchg
stc
push
xchg
jne
repnz
sahf
dec
xchg
les
dec
and
xchg
mov
icebp
fmull
or
jno
mov
and
mov
and
jne
or
out
data16
mov
pop
test
icebp
jp
adc
subb
mov
fistpll
rcrb
pop
lods
sbb
cltd
inc
stos
ss
xchg
scas
sbb
mov
test
fistl
jnp
adc
addr16
test
pop
lcall
in
adc
add
int3
sbb
cmp
rcl
cwtl
repnz
mov
popf
jecxz
mov
rcl
imul
mov
outsb
inc
add
sub
jns
inc
leave
lea
shl
sub
sub
mov
sub
daa
dec
aas
push
arpl
enter
cwtl
xchg
sbb
mov
lds
outsl
lock
xor
push
sbb
arpl
or
push
lock
lcall
fdivrl
inc
in
cmp
push
sbb
fsubrs
pop
pop
or
push
cmp
adc
cmp
rol
outsl
je
mov
cmp
sub
mov
add
out
je
fists
dec
mov
dec
xchg
mov
lahf
push
dec
dec
aam
and
fmul
ss
push
fs
addr16
test
fcoms
pop
es
lahf
inc
lahf
dec
test
call
cli
pop
les
mov
fdivl
push
ret
lret
fs
mov
incb
push
jl
cmpsb
loopne
stos
insl
loop
lea
cmp
aad
xor
push
or
rcrb
push
cmp
mov
push
clc
dec
sub
test
or
lahf
ret
push
roll
les
and
pushf
xlat
mov
cmp
jge
int3
mov
cmp
int3
movb
mov
jb
ficoms
mov
xchg
jmp
mov
icebp
bnd
shr
pop
mov
mov
repnz
adc
stos
nop
pop
ffreep
sbb
imull
dec
inc
aad
jae
lds
rorl
outsb
aad
pushf
or
cmp
jl
mov
scas
mov
or
jmp
test
in
out
clc
sub
sub
cmpsb
aaa
mov
jae
test
lods
or
xchg
out
jp
mov
dec
mov
jns
dec
ss
loop
mov
inc
xchg
adc
push
mov
ljmp
mov
sti
dec
mov
mov
daa
outsb
mov
pop
mov
mov
popf
push
mov
jl
dec
mov
lcall
repz
pushf
shll
lock
inc
ficomps
imul
jmp
push
sbb
ds
repnz
mov
movsl
stos
pop
jg
sub
test
add
jns
fnstenv
mov
sbb
notb
push
pop
push
mov
stos
push
xor
out
cmc
jle
dec
jg
mov
out
movsl
push
mov
loope
out
dec
movsl
repz
aas
cltd
lods
xlat
fistl
rorl
push
rcll
lock
test
inc
or
leave
pop
mov
xchg
out
sub
inc
mov
arpl
push
shlb
cmp
mov
inc
rorl
loop
iret
jne
lock
and
insb
int3
jnp
and
inc
lods
scas
xor
pop
pop
add
test
test
adc
and
aaa
mov
shl
and
mulb
enter
inc
popf
fists
mov
fwait
mov
mov
orps
mov
mov
sbb
shl
mov
cltd
pop
add
jle
pop
imul
dec
push
lea
in
cmp
adc
in
adc
sbb
stos
and
nop
repz
mov
add
fsubrl
xchg
mov
cmpsb
jmp
xchg
iret
dec
out
mov
addr16
lahf
cmp
xor
lret
jecxz
std
ja
cwtl
outsb
xor
inc
ret
push
jb
cltd
mov
shl
push
cltd
pop
cmp
mov
adc
in
pop
xchg
leave
xchg
lods
adc
popa
cmp
loop
mov
addl
mov
mov
xchg
and
fldl
out
dec
sub
pop
inc
pushf
mov
push
repnz
push
out
inc
sub
sub
mov
push
rcll
pop
mov
stos
jo
daa
sahf
mov
cmp
or
mov
mov
pop
and
xor
cmpsl
xorb
or
hlt
lock
xor
jo
imull
mov
mov
xor
fdivp
jno
or
ret
aas
lea
ret
outsb
jecxz
cs
adc
enter
dec
addl
push
xchg
sub
push
sub
cmp
ret
dec
bound
and
adc
mov
push
xchg
ss
adc
leave
and
ficoms
fisubs
pop
ja
outsl
or
mov
dec
loope
adc
sub
add
cmp
sbb
push
stos
and
lods
daa
xor
fildll
loopne
or
or
lret
cmp
out
inc
xchg
dec
cmp
scas
sbb
push
out
mov
pop
mov
push
into
inc
mov
in
jmp
inc
sbb
sahf
adc
dec
jno
add
ljmp
lods
js
sbb
lret
cld
sub
push
es
insb
jmp
add
jle
adc
mov
xchg
cmpsb
ljmp
test
cmp
xor
test
loope
call
jnp
repz
insl
pop
mov
jge
popf
cmp
sub
out
movsb
gs
cmp
addb
out
sub
sti
ljmp
sub
mov
mov
fidivl
aad
arpl
dec
push
dec
ret
or
cmp
xchg
xchg
xchg
cmp
inc
inc
scas
pop
stos
into
push
movl
jns
aam
out
lahf
cli
mov
test
jne
jp
in
adc
fistps
lahf
fldenv
iret
sub
push
xchg
iret
scas
mov
inc
movsl
inc
or
push
adc
orl
rorb
ja
dec
dec
decl
out
inc
add
mov
sbb
in
cmp
xchg
rclb
mov
cltd
cmp
mov
fistpl
pushf
sbb
lock
push
insb
mov
fstpl
or
les
dec
in
rorb
cmc
aam
and
shlb
xor
pop
sub
in
pop
in
pop
dec
enter
mov
mov
out
xor
out
shlb
jl
add
jmp
adc
cwtl
mov
jecxz
push
dec
gs
je
xor
mov
and
push
xor
xor
jo
mov
movsb
mov
and
xor
xor
dec
pop
test
cmc
cli
sahf
sahf
ret
shl
into
into
jl
add
jbe
shll
xchg
aam
mov
das
lods
imul
adc
pop
mov
aaa
shlb
ficomps
negb
jmp
sahf
jge
adc
shrb
popf
jge
cmp
daa
fs
push
inc
pop
pop
sub
daa
fmuls
stc
pop
out
mov
xor
out
lcall
mov
push
or
lahf
and
les
push
fwait
xor
fisubrl
adc
ret
cmp
sahf
xchg
popf
mov
xor
fcomp
sub
lock
mov
add
lds
sbb
jecxz
and
xchg
mov
and
xchg
adc
mov
adc
scas
scas
xor
les
xor
mov
pop
sbbl
cmpsl
ficomps
mov
inc
in
insl
jae
in
dec
xlat
sbb
add
movsl
cmp
dec
xchg
jo
cs
fs
lahf
or
push
push
jae
cs
xchg
sbb
pop
mov
daa
jl
jae
lret
push
inc
mov
and
cmp
xchg
adc
jns
loop
xlat
daa
sbbl
cli
cli
cld
insl
fs
mov
or
mov
fwait
adc
lock
cmp
push
dec
or
mov
pusha
imul
xchg
in
mov
mov
mov
aad
cwtl
fst
sbb
xchg
cmp
sbb
jmp
fimuls
mov
dec
sub
inc
adc
mov
rolb
lods
sub
aas
push
add
aas
andb
scas
sub
cmp
aad
cmpb
push
daa
cmp
lret
repnz
jecxz
mov
mov
fcmove
pop
leave
jo
ljmp
push
addl
mov
or
push
mov
nop
sarl
inc
ret
cli
and
addr16
fnstsw
jbe
dec
sbbb
ret
xchg
lahf
shll
mov
stos
sub
enter
leave
sub
sbbb
push
fsubp
fs
cmpsl
and
call
push
ja
fldenv
and
push
out
mov
hlt
or
ror
divb
sbb
jp
inc
int
or
xchg
mov
in
outsb
cwtl
or
fldcw
pop
push
mov
shr
add
xor
ret
les
jno
mov
fstcw
shl
iret
sahf
jbe
outsb
clc
test
inc
inc
lea
add
xor
xor
jbe
mov
push
addl
sbbl
test
clc
adc
stos
test
scas
xor
inc
dec
mov
mov
cmp
push
cmp
push
sbb
mov
or
int3
xor
push
push
and
push
insl
mov
sahf
adc
and
xchg
lock
or
push
pop
or
lds
movsl
push
cwtl
jnp
test
sub
ljmp
pop
scas
into
jne
or
imulb
repz
jb
or
ds
mov
inc
ljmp
cmp
in
mov
xchg
adc
push
out
pop
arpl
dec
fwait
repnz
sub
jl
xlat
add
sub
push
fisubrs
push
sub
fwait
adc
subb
fdivl
cmp
add
mov
nop
push
ss
nop
jp
mov
mov
push
icebp
and
pop
sub
xor
add
mov
lods
das
add
add
mov
fisubl
rol
mov
and
mov
dec
pop
shl
jne
xchg
jnp
xchg
lcall
daa
mov
fstps
cmc
cld
js
push
xchg
push
xor
mov
sbbl
in
dec
es
jo
and
mov
lret
xor
xor
cmp
adc
dec
cwtl
push
xchg
mov
flds
ja
push
sarl
scas
movsb
mov
inc
xchg
jg
push
cmpsb
fldenv
pop
data16
pop
and
lods
mov
addr16
lcall
or
cmp
imul
xchg
mov
dec
mov
add
fs
mov
out
xlat
mov
test
push
mov
test
loop
sbb
xchg
jp
in
or
mov
mov
push
add
or
aam
movsb
mov
inc
add
xchg
sti
mov
inc
lcall
iret
mov
mov
mov
mov
iret
lcall
and
cltd
es
mov
stos
mov
xor
jle
test
out
insb
mov
pushf
dec
or
imul
sbb
add
nop
int3
jmp
or
cmpsl
sbb
mov
push
sbb
repnz
mov
pop
jl
psadbw
cmp
nop
dec
xchg
mov
sbb
adc
outsb
and
aad
adc
push
dec
in
das
movsl
repnz
dec
cs
jo
fisttps
mov
jecxz
mov
mov
fsubr
in
mov
stos
mov
and
mov
lods
mov
fcomi
dec
pushf
out
or
adc
or
pop
push
clc
hlt
jns
aad
jb
jg
adc
loop
sbbl
lds
ss
mov
outsl
and
jp
sti
cmc
mov
and
lea
sub
clc
inc
pop
std
jno
clc
or
into
and
test
lock
addr16
lahf
push
mov
mov
mov
add
sbb
pop
movsb
xor
push
pop
cmpsb
mov
pop
enter
mov
jmp
sahf
sbb
andb
repz
sub
inc
sbb
cwtl
dec
dec
inc
stos
aad
arpl
mov
inc
jns
xchg
xor
xor
lds
rorb
sub
in
jae
int3
lods
lds
xor
fsubrs
dec
into
leave
mov
xor
push
clc
inc
xchg
adc
cmp
xor
pop
mov
xor
addr16
adc
or
xor
mov
lret
xor
jbe
inc
cwtl
popf
mov
mov
and
push
xchg
jbe
jnp
fistpl
fwait
cmpsl
shll
cmp
aas
mov
mov
cmp
jg
loopne
adc
jecxz
shlb
jl
pop
mov
mov
jmp
push
outsl
push
jge
cmp
adc
mov
xchg
xchg
fcomps
xchg
sub
scas
aad
in
movsb
subb
test
jmp
fisubrs
jae
je
bound
cmp
mov
mov
neg
mov
sub
adc
pop
inc
outsb
xor
add
mov
loop
adc
pop
sbb
cwtl
lds
outsb
testl
push
out
push
cmpb
jle
mov
cmp
mov
add
pop
xchg
insb
lods
jmp
clc
mov
inc
push
mov
hlt
push
pop
xor
add
std
call
ror
add
push
push
fisubrl
call
jo
aas
jno
cmp
push
and
imul
push
pushl
xor
daa
pop
cmpsl
fsubs
fidivrl
nop
adc
bound
adc
dec
int3
xor
jbe
push
mov
push
testb
or
sub
lcall
cmpsb
bound
jnp
shrl
mov
xor
xchg
mov
lock
movsb
scas
das
dec
ret
sbb
mov
insl
mov
pop
sahf
lcall
and
mov
mov
cli
jp
dec
or
mov
ss
or
cmp
rcrb
lcall
xchg
cmpsb
out
ss
jg
pop
dec
sbb
sub
push
xchg
dec
add
xor
push
inc
cmp
enter
loopne
outsb
dec
cmp
jg
and
arpl
or
lods
or
sbb
repnz
sbb
pop
leave
es
xor
sbb
dec
pop
mov
xchg
imul
arpl
into
fsubs
push
inc
mov
jo
sarb
inc
xchg
xor
pop
out
pop
push
out
adc
jnp
dec
or
scas
sub
std
lcall
lds
mov
xor
iret
pop
cmp
fmul
fisubl
push
or
aad
sbb
in
add
lcall
into
lods
js
cmovns
ficoml
adc
inc
movsb
ja
out
ss
pop
fwait
push
aam
mov
test
dec
push
cmovno
test
sub
int3
aaa
je
xchg
out
daa
cwtl
xchg
and
inc
repnz
pop
dec
jae
outsl
sbb
lods
add
sahf
adc
std
in
and
mov
nop
out
push
add
mov
daa
mov
adcl
movb
scas
jae
inc
push
adc
dec
mov
rcr
and
xchg
gs
xchg
hlt
mov
into
xor
int
rorb
or
and
out
dec
outsl
adc
and
adc
leave
push
cli
ja
lcall
push
ret
pop
mov
shl
push
ja
or
push
push
rolb
sti
cmp
jbe
pop
lahf
scas
mov
pusha
xor
shlb
pop
stos
xor
cli
repnz
xchg
fsts
adc
movsl
push
push
pop
mov
or
sbb
mov
push
rorb
pop
cld
bound
jbe
in
popf
into
pop
insb
mov
je
ss
sbb
push
fucom
sti
and
test
idivl
push
pop
data16
xchg
cmp
and
jb
xchg
adc
mov
adc
mov
and
lret
or
mov
popa
pop
fwait
stos
pop
xchg
stc
mov
and
loop
imull
push
cs
clc
pop
adc
jl
adc
push
mov
push
push
sbb
dec
pusha
or
adc
mov
fisttpl
push
popf
sbb
aad
scas
sbbb
mov
js
loopne
adc
adc
xchg
push
insl
push
mov
mov
xchg
es
fwait
pop
sbb
cmpb
iret
mov
dec
push
mov
xlat
movsl
popa
mov
dec
add
cmp
fcom
jae
sahf
fldl
icebp
loope
add
dec
repz
mov
dec
sbb
aam
push
js
sarb
scas
sbb
mov
mov
pop
jns
popa
mov
movsb
adc
mov
test
andb
je
pushf
pop
inc
or
in
push
daa
jmp
loop
movsb
fistl
mov
jp
punpckldq
fmuls
mov
add
in
leave
inc
add
das
mov
js
jns
lods
ds
xorb
mov
sti
add
cmp
pop
cmpsl
mov
pop
decb
inc
jmp
inc
fadds
fdivrl
es
jb
hlt
push
ret
movsl
lret
jl
fbld
pop
push
push
jno
lret
cmp
ret
mov
sub
lcall
xchg
push
mov
xchg
ss
push
sub
loopne
arpl
mov
js
push
sub
or
fs
arpl
fstps
and
sahf
dec
jb
stos
or
rorl
test
in
push
xchg
cli
cmp
pop
mull
out
mov
inc
pop
and
mov
int3
push
scas
popa
das
jmp
xchg
sbb
dec
inc
fwait
and
jl
sub
fnstcw
aaa
push
inc
mov
push
inc
lods
sbb
lock
rcrb
mov
mov
jne
ds
mov
test
jp
lea
bound
aam
dec
das
out
stos
mov
mov
mov
mov
aad
sbb
xchg
mov
test
inc
test
lods
xor
adc
jno
push
and
jns
fcoml
or
xor
add
xchg
or
push
in
imull
jecxz
aaa
mov
inc
jae
call
mov
cld
cmc
mov
or
xor
push
fildll
in
rcrl
push
mov
xchg
hlt
imul
xchg
fmulp
push
xor
gs
pop
scas
hlt
push
in
add
daa
in
inc
sbb
les
lds
mov
scas
movsl
inc
and
mov
addb
fists
imul
lcall
sub
and
pop
xor
mov
pop
cmp
dec
mov
xchg
push
xchg
xchg
cwtl
inc
inc
push
sbbl
push
and
jbe
sbb
outsb
cli
daa
nop
dec
int
movsl
gs
out
jmp
mov
lret
cmp
jae
mov
push
ss
sti
sub
pop
dec
mov
adc
jo
bound
addb
mov
lret
jg
jl
leave
lea
xor
dec
cwtl
mov
sub
hlt
xor
cltd
lock
nop
fwait
inc
dec
jp
add
loop
mov
sbb
inc
lcall
lahf
mov
sub
fstl
mul
add
xchg
bound
mov
mov
mov
pop
or
shrl
xchg
mov
inc
pop
and
push
jnp
push
jmp
inc
jl
call
jne
push
mov
mov
and
xchg
lock
jb
out
cwtl
stc
popa
es
add
mov
mov
rolb
sbb
mov
cmpsl
arpl
pop
mov
scas
mov
movsl
xor
mov
mov
mov
cmp
stc
ja
jns
in
cmp
jo
lods
pushf
mov
shll
and
decb
call
inc
sbbb
loop
pop
ret
jge
push
add
mull
xchg
adc
cmpb
fwait
xor
pop
jge
mov
fsts
movsb
flds
cmc
jno
sbb
push
test
scas
or
lock
mov
pushf
mov
data16
sub
ds
das
pusha
notl
fistps
loope
mov
push
pushf
cld
xor
cmc
and
jae
outsl
or
pusha
adc
fsubp
rcrl
mov
in
es
cmp
lods
or
adc
push
dec
ror
sub
stos
add
fs
sbbb
mov
xor
shlb
dec
push
loop
push
dec
dec
insb
mov
jmp
aad
call
in
add
int3
xor
mov
std
in
push
or
out
test
aaa
cmp
cmpsb
xchg
int3
and
jbe
ret
scas
pop
cwtl
sti
adc
insl
adc
sbb
in
clc
mov
loope
dec
std
rcr
cmc
or
jle
lea
loope
fisttpll
push
dec
or
mov
cmpsl
test
fsubl
test
cmpb
rcr
outsl
add
push
xor
sub
add
and
xchg
dec
add
mov
jg
adc
shlb
jle
inc
test
jp
jnp
sbb
lcall
mov
mov
mov
push
decb
xchg
add
mov
not
cmp
sub
imul
ret
push
insl
pop
jb
mov
sbb
pop
sbbl
test
mov
push
sbb
pop
push
mov
mov
push
jge
inc
push
loopne
arpl
push
fnstcw
jb
popf
mov
pop
xchg
push
push
push
cmp
mov
sub
in
insl
fcmovnb
lods
out
jbe
or
rorb
test
cli
xor
out
out
cmp
aad
and
lcall
push
test
bnd
out
dec
adc
lahf
stc
cmpsb
cmpsb
fwait
mov
inc
and
addl
sbbb
stos
lods
fiaddl
out
xchg
lods
or
jae
insl
ljmp
es
xchg
cwtl
hlt
mov
sbb
or
add
xchg
sub
add
mov
push
add
xchg
dec
jnp
aas
out
pusha
sub
jns,pn
stos
not
push
loope
mov
mov
test
or
sub
push
mov
call
push
sar
std
repz
dec
test
xor
xchg
jmp
add
lcall
addr16
test
pop
lret
loopne
dec
adc
rcl
das
es
mov
gs
xlat
add
jno
sub
in
daa
mov
adc
mov
mov
xor
sbb
fsubl
sahf
and
push
sbb
mov
xchg
push
sub
jo
rorb
fwait
insl
and
inc
sahf
mov
lahf
and
stc
jb
xor
push
jg
in
sbb
mov
sar
lods
or
push
arpl
je
mov
adc
jge
mov
push
enter
cld
pop
cmp
xchg
pop
jae
jl
sub
adc
push
fs
stos
cltd
mov
mov
popf
add
outsb
mov
mov
pusha
xor
leave
movb
outsl
stc
mov
jle
cmp
stc
xchg
test
call
jne
xchg
or
adc
movsb
push
adc
sub
cs
xchg
push
dec
sti
pop
lds
sbb
sbb
icebp
into
push
test
es
int
ja
sub
and
cmc
pushf
inc
iret
push
xchg
mov
or
fld
in
in
out
adc
pop
sahf
sbb
sarb
inc
mov
xchg
add
mov
and
xchg
mov
bound
push
add
in
shlb
in
mov
out
push
not
filds
mov
decl
jp
repz
fmul
ret
std
lcall
pop
push
xchg
aas
aas
cmp
inc
fwait
jb
and
je
pop
ljmp
test
jnp
and
inc
add
fdivs
pop
in
dec
push
mov
pop
sti
and
fadds
stos
mov
into
out
ja
dec
in
dec
adc
icebp
or
lock
loope
mov
test
adc
adc
fs
fdivrs
mov
pop
pop
cltd
gs
pop
scas
sub
stos
repnz
xchg
mov
push
lcall
lea
cs
adc
test
inc
pop
sti
and
pushf
aas
mov
fwait
stos
cmp
mov
out
pop
jmp
inc
and
pop
data16
jp
jl
pusha
ljmp
xor
jle
pop
scas
xlat
mov
ljmp
adc
mov
inc
cli
mov
push
add
ljmp
mov
xlat
cmp
mov
mov
jmp
popf
cmp
pop
aad
adc
xor
pop
out
and
sub
out
sub
mov
adc
subb
dec
cli
ss
mov
add
outsl
inc
add
and
sti
push
push
int
idiv
mov
lds
fldl
mov
push
cmpl
lods
rorl
out
in
pop
mov
mov
in
lretw
pop
movsl
pop
mov
ljmp
test
inc
or
lret
nop
pop
xchg
sub
aad
cwtl
inc
sbb
or
divb
andb
in
mov
pushf
daa
pop
add
cmp
add
sub
sbb
int
cmc
aam
or
fwait
ret
mov
dec
mov
jne
jle
mov
jp
insl
cwtl
out
ficomps
sub
pop
and
or
cmc
mov
and
insb
mov
mov
xor
out
dec
pop
nop
mov
in
sub
cmpb
xor
incb
fidivl
pop
test
cmp
mov
push
lret
or
lock
insl
cmp
jecxz
sbb
xlat
lea
dec
xor
xchg
add
or
aad
stos
xchg
mov
pop
enter
shll
shlb
inc
aas
mov
or
or
std
dec
xor
aaa
push
xor
mov
pop
mov
cwtl
fisubs
fwait
mov
sbb
mov
loopne
fldt
je
into
push
js
cltd
int
cltd
adc
ret
je
jp
xor
pause
inc
jp
enter
add
lret
pop
xor
outsl
loop
inc
jae
xchg
pop
pop
jmp
scas
mov
push
daa
jae
dec
inc
pop
jge
or
scas
hlt
or
es
mov
out
push
sahf
and
and
ret
and
jg
lret
scas
loop
xchg
fdivl
loopne
and
adc
outsb
test
sbb
jecxz
out
xorb
movsb
mov
cld
fnstenv
lcall
fdivs
clc
mov
out
addr16
inc
lret
sub
fdivrs
addl
repz
aad
adc
push
sub
mov
int
jo
jge
loopne
cld
cltd
fdivrs
rorl
fldcw
and
sbb
cmpsl
mov
or
jne
mov
push
je
jae
sub
fimuls
rcl
in
outsl
xlat
push
adc
notl
out
pop
sbbl
and
cs
pop
test
xchg
jne
outsl
shlb
sub
jmp
movsl
pmaddwd
add
or
adc
cmpsl
sti
test
jno
xchg
adc
repnz
loope
push
fnstcw
icebp
das
ja
jle
cmpl
movsb
js
stc
call
clc
in
sbb
and
dec
outsb
xor
cltd
mov
inc
push
lods
mov
cmpsb
leave
push
inc
bound
dec
pop
and
mov
sbb
dec
pop
movl
mov
xor
dec
mov
mov
push
push
mov
or
and
and
add
mov
pop
push
jg
pop
mov
mov
mov
fcoml
test
add
pop
xlat
cmp
fcmovne
divl
cmpsb
lock
scas
outsl
out
push
mov
xor
push
test
adc
test
ds
jecxz
out
sbb
xchg
imul
adc
push
in
rcll
pop
addr16
loope
cltd
repnz
jbe
out
pop
mov
cmp
xor
lcall
int3
push
xchg
jg
imul
fnstsw
or
inc
jmp
loope
sub
gs
loope
dec
and
dec
stc
xor
ficompl
mov
shrl
lock
xchg
mov
leavew
dec
add
cmpsl
inc
or
push
pop
rcl
jno
cmp
pop
pusha
dec
fistpl
cmp
cmc
fs
outsl
shlb
cld
or
cmp
fwait
stos
popa
mov
cmp
mov
or
outsb
into
xor
push
icebp
cltd
lcall
data16
mov
test
pop
adc
jb
test
loopne
push
adc
jae
inc
lret
movsl
scas
jecxz
jne
inc
movsb
test
out
jmp
jnp
mov
nop
sub
pop
inc
jnp
out
adc
out
bound
and
add
jp
movsb
fucomip
imul
in
mov
jbe
mov
xchg
pcmpeqb
fs
gs
jecxz
jmp
lods
push
xor
fcomps
xor
cmp
jg
fiaddl
mov
in
jmp
push
jo,pt
test
sbb
cmpsb
sub
cmp
stc
fimuls
das
cmpsb
sub
sub
lret
fldl
lods
dec
ret
mov
push
sbb
mov
push
mov
xor
hlt
and
iret
cs
fcmovnu
inc
and
enter
mov
pop
push
mov
jmp
lods
push
lods
call
pop
das
jmp
je
pop
sbb
mov
fstpl
aam
lds
jecxz
lods
push
mov
ret
mov
sbb
sbbl
ret
jnp
cmpb
lea
mov
mov
inc
pop
xor
movsb
movsl
inc
lock
xor
push
cmpsb
mov
jnp
cmp
out
and
imul
clc
fdivs
fildl
mov
stos
test
xor
inc
sbbb
cmp
mov
mov
xchg
fldcw
xlat
and
les
scas
inc
inc
lods
insb
and
clc
loop
xchg
mov
pop
repz
jle
outsb
pop
lds
jb
pop
lcall
mov
mov
sub
xchg
mov
pop
cmp
cmp
stc
js
jns
jae
in
fdiv
test
mov
xchg
sub
sub
mov
sarl
sbb
fdivrp
pop
cmovp
xchg
hlt
sbb
mov
test
into
mov
adc
xchg
sub
notl
imul
test
push
mov
mov
mov
lcall
add
cmp
cmc
scas
ljmp
inc
mov
insl
sub
xor
out
ss
push
addb
xor
mov
pop
es
in
or
cmpsl
xor
add
dec
jmp
out
mov
push
in
test
leave
and
aas
push
repnz
ret
jo
js
sub
lea
jnp
lret
push
dec
outsb
filds
mov
or
cmp
into
xchg
fwait
data16
pop
xor
or
std
dec
or
dec
nop
mov
or
mov
int3
pusha
xchg
js
faddl
jns
jge
repz
inc
pusha
mov
jno
hlt
push
addr16
scas
les
pop
mov
xchg
push
jne
dec
dec
jne
test
jns
movsb
xchg
outsl
addb
adc
inc
push
pop
aam
inc
xchg
xchg
pop
shl
fildll
cltd
out
push
shll
outsb
out
insl
sbbb
pop
add
push
mov
mov
jg
sbb
out
cmp
jno
stos
inc
xor
push
inc
cmp
sahf
and
jae
les
xor
ret
xor
push
pusha
shlb
push
iret
pushf
push
aam
dec
idivb
cmpsl
xor
outsb
ja
push
lcall
xor
popf
xor
enter
push
int
cld
adc
push
xchg
in
in
push
lods
push
popa
sar
inc
ss
fldl
adc
push
lods
int
fldcw
out
cmp
dec
int
dec
in
shll
lret
add
inc
jbe
pop
adc
dec
jmp
stos
test
roll
fistpll
frstor
cmp
cmp
push
and
xchg
push
leave
ljmp
pop
pushf
push
jns
adc
pop
and
fimull
dec
xchg
es
movsl
adc
fwait
les
jnp
mov
lods
test
sbb
call
pop
fnstsw
cld
lcall
pushf
sbb
sub
pop
jmp
lea
mov
mov
notl
cli
mov
dec
sbb
lret
push
mov
mov
add
mov
jns
aaa
dec
jne
xchg
jne
cli
mov
and
mov
mov
xor
in
pop
lret
ja
add
popf
loop
leave
nop
xchg
insb
gs
mov
mov
and
loop
mov
mov
or
fstp
jb
inc
adc
mov
jnp
out
jl
xor
lea
cmpsb
pop
pop
mov
popa
add
inc
mov
sub
push
mov
ret
sbb
ljmp
pop
xlat
lds
push
dec
sub
mov
push
cmp
mov
sub
aaa
ret
aam
mov
mov
jo
cmp
push
jmp
cmpsl
cmp
ror
jns
clc
xchg
rcr
cli
jmp
dec
lea
push
incb
arpl
sbb
in
xlat
icebp
lock
jl
repnz
repz
xor
xchg
mov
ror
and
icebp
fnstsw
pop
sti
int3
mov
dec
or
or
pop
ja
dec
cmp
int3
insb
mov
rcrl
imul
lcall
sbb
mov
out
xchg
mov
loop
pop
pushf
mov
cwtl
adc
sbb
in
push
jmp
xor
cwtl
sub
sbb
cmp
jl
shlb
mov
mov
test
ret
push
lahf
sbb
jg
pop
inc
pusha
mov
mov
loop
adc
rol
push
jle
jns
pop
in
mov
jbe
xor
sbbl
aas
sub
ja
in
es
inc
pop
pop
mov
test
lock
push
faddp
pop
cltd
es
mov
test
xchg
jns
jno
in
dec
lock
arpl
test
negb
add
es
mov
mov
out
das
push
test
xor
enter
dec
cmp
sti
dec
jne
push
mov
aam
enter
scas
sub
daa
dec
out
lahf
int
dec
lahf
rcrl
out
jne
cltd
lea
test
scas
imul
push
jmp
push
mov
xchg
mov
roll
out
fisubl
scas
ja
jl
mov
push
in
fwait
jns
jge
es
nop
dec
mov
sbb
sbb
xlat
inc
loopne
icebp
xor
das
icebp
mov
pop
lods
cmp
scas
mov
ret
xor
cmp
and
adcl
loop
push
popf
mov
je
fwait
mov
clc
pop
inc
inc
in
cmp
out
rcrl
sub
dec
pop
cwtl
jns
jnp
jae
push
dec
push
arpl
lds
xchg
insl
loopne
in
insb
es
pop
mov
stos
xor
push
popf
jecxz
stc
mov
subb
fdivrs
pusha
movl
ljmp
jge
scas
add
mov
rorl
sub
out
shll
aas
addr16
and
push
mov
sbb
add
push
jmp
cmpsl
xor
js
and
jl
aam
dec
rcll
mov
xor
sub
pop
adc
orb
aas
inc
push
cli
lcall
pop
test
icebp
cld
xor
inc
cmpsl
pop
pop
pop
pop
mov
lcall
mov
rcr
and
pop
mov
xchg
jecxz
daa
fldt
loope
xor
leave
fwait
pushf
adc
push
movsl
mov
cld
add
inc
add
pop
push
mov
cltd
pop
jmp
pop
push
fs
jns
frstor
add
mov
push
cmp
ror
mov
dec
pusha
lret
lds
push
fcoms
inc
clc
sbb
in
or
and
cmp
outsb
lret
jb
inc
cmp
loop
and
sbb
je
imul
aaa
mov
lds
cmpsb
inc
xchg
jp
mov
rcrb
clc
ds
inc
adc
pushf
xchg
mov
inc
jno
xorl
les
sub
push
or
add
imul
pop
test
rclb
cmp
cs
out
outsl
mov
dec
push
std
jmp
pop
fdivrl
push
inc
or
dec
pop
es
int3
jp
mov
or
arpl
testb
hlt
not
mov
out
addr16
add
mov
push
sahf
dec
pop
popf
mov
mov
mov
sbb
scas
jge,pt
inc
shr
fs
pop
loop
fcoml
rcll
add
mov
inc
xor
insb
scas
jmp
sahf
leave
pminub
popf
cmp
pusha
inc
sarl
jbe
sbb
mov
or
aad
mov
push
ficompl
or
ds
cld
xchg
shll
daa
add
lret
insl
arpl
inc
mov
push
inc
dec
lret
cmp
orl
dec
or
int3
dec
mov
nop
repnz
subb
sub
xchg
out
std
out
mov
adc
cld
aas
pushw
and
popa
daa
cmp
fucomip
sbb
mov
mov
andb
xchg
out
mov
ljmp
lds
int
push
gs
adc
das
or
sbb
and
xchg
jg
imul
xchg
aas
xchg
mov
cs
repz
out
aas
repnz
mov
loop
shr
jae
mov
test
fwait
adc
rorl
shll
daa
cmp
or
mov
orl
mov
xchg
repz
mov
les
jns
and
stos
out
ds
and
shlb
mov
xor
outsb
aad
push
pop
xchg
xchg
fwait
dec
jb
insl
push
mov
xor
cmc
mov
enter
sbb
xor
jae
or
and
into
enter
jb
jns
dec
sbb
dec
int3
outsl
cmp
leave
xor
out
cmpsl
movsb
or
jle
cli
dec
add
into
xchg
ja
jbe
push
fwait
pop
addr16
fstl
ds
sbb
mov
std
mov
out
orb
pop
jo
pushf
mov
push
jecxz
jle
xor
test
mov
xor
popa
xor
das
fdiv
pusha
add
pop
inc
push
subb
ficoms
outsb
outsb
insb
xchg
inc
fcompp
inc
addr16
jns
sbb
imull
sbb
push
ljmp
int
pop
mov
xor
stos
out
sbb
inc
mov
insl
pop
cmpsb
xchg
mov
dec
addb
lds
aaa
pop
or
xlat
fsubrl
jmp
pop
outsl
or
pop
push
jo
jne
push
mov
fisubl
lods
push
movsl
push
ja
jge
dec
sbb
ret
out
mov
in
stc
pop
leave
pop
fisubs
sub
jmp
add
xchg
dec
iret
into
or
arpl
xlat
lea
testl
jle
les
es
pop
jl
xchg
xor
xor
jae
mov
repz
enter
in
add
incb
outsb
inc
pop
inc
sarb
push
mulb
cld
inc
lret
popf
mov
lea
ret
jge
das
cmp
mov
insl
orl
xchg
mov
fwait
mov
mov
and
adc
push
mov
ret
mov
cmp
adc
sub
add
or
ret
and
dec
ljmp
dec
shrl
test
sbb
xchg
adc
out
jae
mov
fwait
dec
movsl
dec
add
fcoml
pop
jg
inc
xor
xor
xchg
shl
pusha
icebp
and
dec
dec
sbb
sbb
dec
pushf
in
xchg
jge
cltd
jl
xor
add
shlb
xchg
jns
test
fsts
roll
insb
mov
push
xor
or
in
sbb
test
or
or
rcll
mov
inc
std
pop
and
fdivr
pop
or
pusha
iret
dec
adc
daa
ja
push
popf
mov
mov
int
mov
js
push
pop
idiv
jge
out
xor
aas
lock
add
push
nop
pop
mov
scas
aas
xchg
out
in
hlt
dec
frstor
pushf
cmp
pop
jecxz
push
cmp
insl
xor
out
jmp
xchg
or
jnp
push
lahf
test
cwtl
xchg
cmpsl
push
icebp
ss
arpl
jnp
fidivrl
xchg
jo
cwtl
mov
ja
aam
inc
fwait
clc
xchg
or
mov
xor
sbb
in
call
or
cltd
subl
into
popf
push
mov
cmp
repnz
sbb
mov
cmpsb
mulb
outsb
dec
mov
std
pop
xor
inc
sahf
dec
mov
dec
out
fsubl
rol
stos
jno
jmp
sti
scas
imul
shrb
push
and
xchg
inc
sbb
in
and
or
xchg
jg
sub
popf
mov
cli
or
lods
mov
test
pop
pop
pushfw
lock
repz
lcall
mov
push
lcall
es
push
std
cs
inc
jge
call
mov
fisttpl
adc
ds
xlat
adcb
lahf
inc
ljmp
xchg
pop
fsubs
jne
hlt
insb
jo
es
lods
inc
fidivrs
sub
jns
popf
mov
int3
jg
daa
rol
stos
adc
xchg
pop
fldcw
aam
mov
stc
adc
jl
scas
dec
mov
cmp
test
push
xchg
pusha
xchg
mov
jno
lods
dec
add
inc
imul
testb
or
jo
xor
stc
xchg
push
xlat
js
and
mov
dec
icebp
ja
rcl
mov
xchg
in
outsl
jae
mov
in
rol
sarb
sub
cltd
xchg
mov
ljmp
and
ret
xor
roll
mov
jns
adc
mov
cwtl
in
push
xor
and
xor
mov
and
and
test
out
inc
in
mov
xor
mov
add
pop
jno
fidivrl
std
iret
cmp
push
aam
mov
dec
lret
add
dec
into
xchg
icebp
xchg
in
lods
mov
int
jne
or
dec
push
mov
push
xchg
jg
push
sub
push
mov
jp
cmp
jns
mul
cmpsb
insb
cwtl
cmp
push
negb
cmp
test
shll
xchg
push
movsb
es
xor
or
xor
jno
in
sbb
test
mov
addr16
jo
jae
xchg
lret
scas
mov
mov
fistpl
lds
sub
mov
sbb
push
lock
enter
push
sub
sti
xor
rcl
xchg
shrl
sbb
mov
shr
cmpl
pop
dec
jecxz
stos
add
ret
jno
in
daa
test
lods
mov
xor
push
repz
pop
inc
mov
sbb
repnz
in
pop
or
xchg
sub
adc
pop
mov
jno
js
push
mov
push
aam
pop
adc
imul
inc
enter
and
lret
nop
pop
sub
sub
icebp
and
popa
cli
jle
xchg
and
mov
mov
test
pusha
inc
pop
rorl
mov
xlat
inc
popf
mov
mov
addr16
ja
fldcw
xchg
jl
mov
pop
mov
fisubl
int
mov
jge
dec
bound
nop
jge
lahf
and
mov
rolb
fimull
mov
ljmp
push
dec
xchg
fildll
mov
fiaddl
mov
neg
mov
sbb
insl
cmpsb
mov
cmpsl
mov
aas
mov
outsb
clc
in
xor
fs
jp
inc
leave
out
lcall
or
push
orl
jmp
stos
in
sbb
stc
movsb
inc
aam
fidivrs
lock
aaa
mov
sbb
push
popa
sbb
dec
cld
mov
inc
enter
icebp
outsb
idiv
xor
outsl
pop
cmp
dec
leave
popf
fsubrl
out
xchg
xchg
je
pusha
sbb
dec
outsb
int3
jg
rcl
jle
ss
lds
cmc
ss
in
dec
xchg
lret
out
mov
xchg
xor
cli
cmp
jp
mov
fisubs
push
pop
clc
cs
sub
sub
pushf
in
push
mov
adc
sti
pushf
icebp
jae
sub
add
sub
xchg
xor
nop
cmp
add
push
cmp
fnstenv
mov
rclb
fsub
jnp
fidivl
daa
jbe
pop
push
lds
ljmp
dec
aas
cmp
lock
divw
iret
add
fsubrp
lahf
and
outsl
insl
adc
push
rcll
sub
inc
cmp
imul
iret
into
adc
cmpsl
xor
add
cltd
and
lcall
enter
and
adc
and
xchg
mov
sub
sbb
xor
fwait
test
insl
por
ljmp
jae
sub
jbe
out
and
ljmp
adc
pop
add
jno
movsb
leave
jo,pn
movsl
jecxz
add
mov
mov
xor
push
mov
mov
jle
lret
nop
jo
je
lea
sbb
test
inc
dec
movsl
call
enter
test
pop
push
imul
int3
fwait
xor
xchg
sbb
sahf
jae
cltd
int
mov
out
jne
dec
cmp
dec
aad
mov
pop
mov
cmp
and
into
ret
xor
out
mov
jge
in
or
pop
imul
and
mov
je
push
xor
cmpsl
lds
and
lahf
cltd
jecxz
pop
sbb
push
mov
pop
and
mov
and
test
insb
cld
mov
fcompl
add
xchg
lret
mov
fdivr
stos
loopne
pop
inc
in
out
sbb
ljmp
add
cmp
dec
movsl
hlt
sbb
in
mov
pop
repz
sub
test
pop
jecxz
rclb
pusha
stos
cltd
adc
in
cltd
or
pop
stos
mov
aad
testl
and
xor
mov
dec
mov
add
sub
sub
inc
add
ret
push
pop
flds
aam
inc
stos
xor
lds
iret
jb
inc
in
in
and
sub
dec
mov
pop
dec
in
out
ja
or
stos
fmul
dec
enter
loop
bound
testl
add
sahf
test
pop
push
xchg
subl
mov
adc
sbb
mov
xchg
pusha
inc
hlt
cmpsb
mov
es
test
xchg
adc
icebp
imul
ljmp
out
inc
or
and
ret
cmc
cmp
lock
ljmp
and
push
adc
push
fidivrl
shll
adc
mov
aaa
scas
jecxz
rolb
cli
cmp
xor
lds
lcall
cmpsl
dec
dec
jg
fdivrl
out
pop
cmp
negb
aaa
enter
sbb
daa
data16
dec
mov
push
and
mov
fwait
lret
jne
push
call
out
add
repnz
or
push
pop
cmp
or
jecxz
jg
int3
sbb
loopne
fidivrl
lods
outsl
dec
imul
pop
xor
mov
adc
pop
xor
in
pop
pushl
adc
jno
mov
enter
sbb
es
faddl
mov
pop
data16
mov
xchg
leave
rorb
addr16
mov
aam
mov
jae
orb
sub
pushf
or
mov
adc
push
sbb
scas
popf
lret
sbb
dec
mov
out
mov
into
cld
cmp
push
aaa
sbb
mov
std
inc
movsb
cmp
mov
sahf
out
xchg
je
scas
mov
xchg
in
push
fistpl
subb
arpl
cmpsl
dec
and
mov
pop
xlat
divb
lods
ror
aad
hlt
mov
mov
jp
xchg
icebp
and
test
daa
jbe
sub
pop
push
pop
outsl
mov
scas
aaa
outsb
insl
inc
xor
adc
hlt
mov
icebp
ret
ds
jnp
pop
in
mov
sub
adc
and
aam
cmp
add
cld
jl
ret
mov
mov
outsb
push
and
mov
jbe
movsl
shl
jns
sbb
or
cmp
add
or
sub
jae
mov
loope
push
fmull
xor
mov
pop
andl
outsb
out
push
push
test
divb
sub
ljmp
jnp
cs
mov
xchg
or
out
hlt
pop
or
mov
mov
xchg
push
popa
aas
or
and
jbe
lea
jp
loope
mov
in
xlat
out
xchg
fisttps
and
hlt
or
dec
iret
sbb
scas
mov
inc
sbb
in
aas
sub
pop
out
call
sti
xchg
sarb
mov
or
sub
cmpsl
iret
repz
adc
into
push
test
push
add
scas
insb
lret
inc
push
dec
hlt
leave
fsubrp
popa
pop
xchg
sbb
add
inc
sub
pop
jnp
mov
mov
adc
and
mov
movsb
and
and
mov
int
push
cmc
pop
dec
fs
lret
orb
jecxz
mov
aad
dec
sub
inc
push
popf
test
out
jl
into
mov
inc
add
imulb
xor
pop
inc
mov
jbe
mov
mov
sub
into
scas
jg
mov
aas
rcrb
lock
sbb
xchg
lahf
mov
out
filds
xlat
cli
sub
enter
mov
jl
push
in
sub
xchg
xor
lcall
cmp
icebp
insl
inc
in
data16
push
mov
pop
les
neg
rcll
std
loopne
inc
dec
stc
xchg
lret
mov
std
ds
ja
ret
push
imul
lock
xlat
mov
int3
ja
mov
fildl
xchg
jnp
sub
in
fidivrl
mov
iret
pop
cmp
pop
jae
dec
xor
scas
imul
popf
jge
dec
mov
movsb
jo
shll
adcl
test
aam
in
setle
xchg
inc
inc
mov
sub
pop
dec
jnp
jl
jle
hlt
mov
adc
xchg
mov
push
fidivs
cs
insl
sub
into
push
add
or
aas
repz
push
fdivl
inc
sub
je
pop
sbb
imul
ret
test
lds
pop
stos
dec
and
sub
push
in
cmpl
sub
jg
pop
outsl
mov
push
sbb
pop
dec
lds
filds
dec
orb
dec
stc
xor
inc
adc
push
cltd
sub
adc
lcall
hlt
xor
rcrl
shrl
push
pop
and
push
lods
cmp
mov
movsl
js
arpl
jae
imulb
add
xchg
int
aad
sub
imul
sub
inc
sbb
or
mov
fsts
scas
and
imul
adc
cmp
dec
add
add
test
pop
icebp
icebp
out
push
add
pop
or
mov
lea
or
pop
jmp
inc
push
mov
push
iret
jae
loopne
fs
movsl
frstor
mov
adc
push
push
jns
repnz
ret
testb
cwtl
dec
jp
popf
jmp
or
aaa
stos
shll
sub
dec
mov
outsb
push
fsubl
inc
outsb
add
mov
pop
mov
dec
xchg
test
lret
cli
mov
xor
jo
push
push
jae
push
loope
lret
sbb
stos
fwait
jle
in
dec
mulb
aas
sti
testb
mov
adc
jecxz
daa
fmuls
xchg
test
bound
xor
mov
inc
pop
mov
test
dec
xchg
lock
and
gs
xchg
hlt
cmp
add
movsb
aam
push
mov
push
mov
test
insl
cs
inc
push
fwait
int
es
fcmovne
mov
shrl
push
into
sbb
adc
daa
fisubrs
inc
jne
or
sbb
call
movsb
mov
test
push
das
pop
ret
xor
jbe
lods
mov
pop
scas
mov
pextrw
jge
rcrb
xor
fisttpll
jp
fstps
xor
add
mov
call
jmp
bound
icebp
testb
pop
mov
or
scas
das
popa
mov
mov
aaa
cmp
mov
popf
lds
mov
jg
bound
bound
xor
pop
pop
jg
orb
movsb
adc
mov
lock
dec
pop
add
ja
xlat
mov
inc
push
jg
add
lea
out
push
sub
scas
sbb
jno
mov
faddl
sbb
push
ds
fildl
insb
fsubp
cmp
push
outsb
jno
int3
dec
pop
xchg
pop
leave
mov
arpl
push
cli
rcll
mov
jle
sbb
test
or
test
sub
pushf
shl
repnz
inc
loop
adc
or
inc
xchg
or
xorb
enter
jae
out
popf
adc
clc
lock
out
or
fsubrl
pop
push
inc
jmp
test
aam
aad
cmpsl
loopne
jle
mov
push
push
cmp
inc
inc
push
push
push
xchg
dec
adc
outsb
movsb
jne
testl
ja
sub
out
dec
fs
mov
push
inc
sbb
ss
sub
jecxz
jb
and
sbb
idivb
test
mov
mov
psubusb
in
pop
xlat
fwait
pop
adc
inc
xchg
and
sbb
mov
in
cmp
xchg
xchg
out
lret
cmp
mov
maxps
cmpsb
xlat
jg
movsb
das
je
in
adc
jecxz
inc
mov
xchg
and
stos
push
pushf
sub
mov
pop
lcall
ss
stos
lahf
cmp
aad
dec
and
loop
jle
lods
cmp
mov
sbb
movsl
call
mov
and
lds
cmp
cmp
xchg
enter
dec
lods
jbe
das
scas
adc
clc
call
call
inc
mov
insb
iret
popl
leave
jnp
mov
lret
into
pop
cmp
cmc
addr16
scas
js
pop
mov
pop
cltd
push
testb
inc
xchg
push
xchg
pop
pop
cli
mov
subb
mov
das
cmp
sub
in
lods
pop
mov
pop
mov
xchg
adc
dec
sbb
push
test
push
mov
aad
cmc
xlat
pop
divb
in
test
iret
or
movsb
cmp
jmp
lock
xchg
cmp
xor
mov
nop
push
xchg
std
jecxz
cmpsl
jnp
dec
call
add
pop
addb
sub
scas
movsl
push
jmp
pop
add
enter
lret
fldz
xchg
cmpsb
stos
jmp
cmp
mov
push
fbld
bound
insb
ljmp
cmp
fs
aad
xor
cmc
in
loope
in
mov
inc
aam
adc
mov
jns
jo
mov
jno
fnsave
adc
or
stos
stos
ja
xor
js
jle
nop
les
cli
mov
push
pop
lods
dec
loope
aas
leave
dec
xchg
xchg
jmp
add
addr16
hlt
jb
test
adc
mov
lcall
pop
andb
hlt
add
imul
push
icebp
xchg
test
lea
jle
ja
xor
cmp
loop
xchg
pop
pop
xor
cmp
pop
int
jo
movsl
imul
cwtl
xchg
mov
and
stos
out
mov
jp
push
and
sbb
je
cwtl
les
sbb
fst
add
adc
test
into
inc
or
nop
push
and
iret
es
adcl
xchg
push
xlat
out
mov
lods
jge
dec
or
jno
out
dec
push
or
out
lods
add
push
push
out
outsl
add
test
add
push
jnp
shlb
dec
pop
mov
pop
aam
mov
jae
lods
addl
je
push
inc
cmp
fcomi
mov
mov
inc
xchg
push
lds
aaa
sub
test
shrl
das
pop
data16
iret
push
mov
cmc
push
push
pop
loopne
lret
cmp
jg
xchg
mov
add
std
out
adc
adc
pop
inc
adc
jmp
adc
pop
mov
push
xor
jmp
cmpb
adc
pop
cmp
inc
push
push
mov
dec
jp
sbb
clc
data16
lea
fdivrl
mov
xchg
rcpps
dec
dec
sbb
mov
ds
inc
cmpsb
mov
test
xchg
sub
xchg
sub
jge
rcrb
imul
nop
outsb
daa
mov
fneni(8087
cmp
inc
inc
rol
rcl
pop
arpl
sub
mov
stc
push
lret
cmpsl
clc
pop
test
mov
mov
std
push
mov
xchg
cmp
daa
int
jle
sti
add
xchg
cmp
negb
jmp
inc
lds
scas
sahf
sub
cli
mov
inc
dec
lea
mov
scas
push
filds
cwtl
movsb
dec
icebp
adc
sub
inc
cmp
jae
add
inc
mov
jnp
pop
inc
dec
aas
sub
cmp
push
mov
fwait
sahf
push
lcall
add
test
sub
sbb
push
inc
loopne
lds
adc
add
pop
dec
pop
or
rolb
adc
insb
dec
xchg
push
decb
rorb
stos
into
mov
into
add
dec
mov
rolb
in
mov
push
or
and
pop
add
cmpsl
mov
and
mov
mov
into
adc
jl
test
cmp
jmp
push
cmp
rcll
adc
jl
rorl
pop
fs
es
or
mov
or
jns
sbb
fiaddl
adc
adc
aas
add
imul
insl
inc
cmp
scas
subb
ds
xchg
push
xchg
push
adc
adc
fmull
sbb
enter
push
sbb
ljmp
popa
mov
cmp
push
push
cmp
mov
test
sub
cltd
jno
movsb
mov
xor
mov
inc
sbb
mov
adc
jne
int3
fcomip
xor
aam
je
sbb
mov
cmpsl
shr
test
lcall
jb
cmp
add
push
outsb
adc
mov
push
jne
push
mov
push
mov
lea
loope
test
cmc
cmp
popa
js
jecxz
and
movsl
dec
lret
outsb
mov
adc
push
adc
movsl
hlt
pop
shrb
push
test
xchg
in
xor
sub
jle
mov
cmp
or
les
and
sub
cmp
js
sahf
ss
loopne
loop
cmpsl
mov
cmpl
gs
xchg
push
jmp
mov
cmp
lret
mov
cmp
les
scas
mov
imul
adc
jge
cmpsb
and
or
or
mov
pop
psllq
in
stos
jmp
hlt
loopne
cli
mov
jg
fwait
xor
xchg
pop
addr16
popa
pop
pop
hlt
dec
popf
dec
stos
pop
push
push
sbb
push
ret
push
fs
insb
add
mov
xor
sbb
and
lahf
sub
push
mov
lcall
nop
xchg
ficomps
adc
jnp
cld
push
lret
adc
dec
imul
imul
outsl
mov
ret
dec
outsb
cmpsl
dec
or
jge
push
or
jae
inc
jl
mov
xor
adc
cli
push
mov
mov
adc
out
por
rcrb
stos
in
call
test
cli
push
push
repz
lret
es
dec
xchg
sub
jecxz
add
or
loopne
mov
into
or
and
or
sahf
pop
or
pop
lret
les
inc
ret
jae
jo
movsb
lea
mov
lods
xchg
lds
push
dec
xchg
or
fists
and
insl
dec
dec
fbstp
add
push
out
iret
pop
scas
jnp
bound
mov
adc
fstpl
xchg
dec
and
inc
xor
pop
cmpsb
push
jg
js
les
loopne
sub
fistpl
repnz
ja
shll
hlt
cltd
cmp
stos
outsl
jno
data16
jbe
sbb
cmp
or
pop
int3
lock
fsubr
jae
pop
movsb
jns
pushf
call
das
mov
ds
mov
out
jecxz
int3
or
mov
mov
test
jge
inc
or
sahf
outsl
or
adc
imul
mov
test
shrb
aad
mov
xchg
int3
or
jle
enter
push
push
lds
xchg
lret
adcl
rcll
cmp
jp
mov
push
xorb
les
pop
in
aad
and
sub
mov
xor
mov
loopne
repz
bound
xchg
rorb
xchg
mov
push
mov
push
loopne
mov
adc
xchg
stos
jns
xor
sub
add
mov
cmp
fcomps
xchg
clc
jnp
dec
out
dec
add
lcall
mov
loop
cmpsb
adc
popf
fnstcw
push
dec
jb
cmpsb
out
sub
lods
mov
stos
push
pop
or
inc
mov
cmp
lea
cli
shlb
imul
movsl
lods
jge
mov
lock
jg
sbb
xlat
xchg
mov
dec
and
mov
ljmp
rorb
icebp
ds
cltd
fstpl
cmp
xlat
mov
scas
inc
imul
inc
mov
es
sbb
sbb
test
ret
ficomps
daa
incb
imul
push
xor
andl
and
bts
fs
in
pop
inc
ja
xor
and
outsl
mov
cmp
jns
movsb
ljmp
ret
push
adc
aaa
shlb
outsb
and
or
ja
push
inc
std
xor
int3
and
add
pop
mov
jecxz
jp
xchg
mov
testb
xor
ss
add
inc
or
sub
subb
push
test
shl
sarb
or
cmp
mov
ss
mov
pop
xor
push
into
inc
xchg
xor
pop
lea
cmp
dec
dec
test
jnp
stc
mov
stos
js
xchg
lea
jmp
int3
jno
and
xor
nop
dec
das
mov
das
pop
js
sqrtps
negl
and
fistpll
jl
icebp
mov
fcmovbe
pop
jecxz
fistl
cmp
mov
cld
jne
sub
mov
dec
mov
popa
mov
sti
jbe
xor
ds
pop
sub
out
mov
jg
rcr
icebp
ret
pop
test
cmpsb
jo,pt
das
lods
scas
cmpsb
or
adc
lcall
jne
ud2
aas
mov
mov
lds
push
add
ja
dec
fcmove
cmp
or
jg
mov
sbb
into
mov
cmp
jns
mov
stos
lods
add
aaa
stos
xabort
sub
das
rcr
aaa
mov
cmc
arpl
pushl
mov
mov
test
loop
aas
popl
mov
pop
push
cmp
imul
jmp
push
and
sahf
cli
or
sbb
rcrb
push
dec
out
mov
ss
xchg
jmp
data16
add
aad
cmc
cwtl
ds
int3
xchg
dec
mov
or
fisubs
mov
inc
data16
push
pop
into
lahf
outsl
and
xchg
mov
xor
xchg
ss
cwtl
add
stc
xchg
testl
test
dec
and
stos
add
sub
jo
jb
push
xchg
mov
fldcw
sbb
arpl
insl
pop
inc
pushf
cmc
int3
aam
adc
cld
xchg
sub
clc
rcrb
popa
xor
insb
enter
inc
cmc
sbb
xchg
imul
cmp
adc
cmp
jno
xor
push
jbe
sbb
stc
popa
xchg
push
nop
pop
cmp
adcb
testl
in
cmpsl
sbb
jmp
lcall
cmp
ljmp
pushf
stos
pop
lret
loop
jecxz
add
outsb
std
negb
jae
push
hlt
xchg
add
add
loope
mov
inc
lcall
scas
sub
inc
mov
std
xchg
dec
lods
xchg
sub
sub
popl
pop
shll
cmpb
jg
clc
cltd
pop
faddl
push
inc
jle
jae
xor
jo,pt
dec
lock
xchg
sahf
sbb
sbb
mov
test
sbb
loop
lret
push
or
mov
jle
enter
pop
sbb
jmp
ret
clc
push
and
adc
inc
popf
rcr
in
mov
pop
pushf
popf
sub
mov
mov
adc
or
jge
jns
add
outsl
fwait
lea
mov
lret
test
dec
sahf
pop
cmp
vunpcklps
cmp
xchg
push
imul
cmp
jmp
scas
into
push
cld
mov
fwait
js
xor
xor
jg
xchg
push
dec
or
stc
xchg
fldl
inc
aam
pop
sub
xor
movsb
or
pop
es
push
add
imul
push
jno
dec
sub
jne
push
jbe
inc
std
std
gs
gs
incb
jle
cmpl
mov
mov
inc
jp
add
aas
in
fmuls
or
loopne
add
pop
lcall
scas
jbe
loop
vunpckhps
insl
mov
pop
dec
aaa
lret
jge
inc
inc
sbb
enter
clc
or
rclb
xchg
jmp
xor
ret
mov
add
std
mov
out
lcall
push
dec
push
inc
pop
jbe
cli
int
jecxz
cld
pop
add
push
mov
dec
pop
into
stos
cwtl
imulb
fsubrl
add
les
add
aas
loopne
outsl
cmpsb
mov
test
xchg
nop
xor
sub
in
add
xor
jg
jg
jmp
and
mov
mov
push
ja
push
gs
jae
push
inc
lret
add
mov
pop
andb
sub
and
popa
rol
int3
jle
outsl
sbbb
sbb
cmp
push
cmc
mov
pop
add
jbe
cmp
add
fwait
and
push
lea
push
or
push
sub
lret
pop
adc
pop
jae
mov
shl
xlat
fnstcw
push
fs
mov
push
dec
jmp
mov
shlb
mov
aaa
ret
cmpsl
testb
mov
cmp
or
or
adc
add
mov
outsl
into
pop
mov
xchg
jmp
ja
and
jae
jb
cmc
ja
mov
or
mov
out
loopne
xor
or
mov
popa
loop
fwait
and
in
xchg
mov
jge
data16
testb
sbb
out
data16
call
jmp
fstpt
inc
in
sub
jne
sti
mov
out
xlat
imul
pop
mov
pushl
mov
inc
add
cmp
push
dec
cli
daa
aad
mov
test
data16
push
or
jnp
pop
fcomip
daa
ret
jno
jg
fsubrs
outsl
xchg
xchg
movsb
insl
inc
mov
push
data16
lods
sti
sahf
jnp
sub
adc
xchg
cmp
cwtl
clc
es
mov
xor
rcl
rorl
pop
push
in
out
jecxz
loope
mov
mov
out
fstps
pop
or
imul
push
mov
rcl
in
arpl
dec
sbb
fs
loopne
jns
fcmove
mov
outsl
adc
push
or
dec
xchg
mov
add
mov
sar
incb
mov
adc
xor
rcrb
inc
and
sarb
adc
dec
in
sbb
ret
aad
mov
ret
lds
mov
mov
fwait
push
push
mov
sub
jno
xchg
popf
imul
cmp
jmp
outsb
inc
in
clc
out
pop
aas
nop
adc
mov
lahf
mov
cmp
mov
xor
xor
push
jbe
adc
mov
cmp
repnz
notb
push
das
sbb
mov
inc
pushf
movsb
sbb
jb
pusha
mov
sub
cwtl
push
stos
mov
ss
fiaddl
add
pop
movsb
dec
push
dec
pop
stos
in
js
cmc
jecxz
add
xor
xor
push
mov
dec
adc
pop
mov
ret
shll
scas
jmp
fistl
and
dec
push
jbe
pop
fwait
outsl
pop
int
dec
jno
jl
aaa
cmp
dec
aas
imul
push
in
in
jl
incl
cltd
arpl
xchg
jae
sbb
dec
sbb
pop
stos
xlat
mov
fs
mov
sbb
lahf
test
xor
cmp
jnp
xor
xor
cltd
sub
addr16
cmpsl
aam
pop
inc
imul
jg
add
lods
sbb
mov
out
fsubr
and
enter
jno
inc
int
dec
inc
xchg
mov
mov
stos
inc
dec
xor
test
out
xlat
jp
movsb
add
shr
push
mov
out
cmpsl
push
jle
dec
arpl
in
shlb
aam
push
jl
cmp
movsl
loop,pn
aas
fildl
call
jmp
push
xchg
das
and
out
fdivrs
mov
sub
in
dec
pop
sub
cmpsb
in
cs
jg
and
cmp
int3
dec
adc
repnz
lock
push
sti
push
dec
add
jae
pusha
imul
out
je
in
mov
test
push
inc
dec
cmp
xor
inc
lods
in
lock
lret
pop
test
add
mov
out
mov
out
dec
xchg
jae
xlat
sbb
ficoml
jge
add
push
and
cmp
xchg
fwait
popf
dec
addb
cltd
mov
inc
sbb
int
dec
test
sub
out
cmp
ljmp
mov
mov
and
aam
mov
outsb
sub
mov
cwtl
outsl
stc
push
out
pop
mov
je
and
shl
xor
or
fldl
popf
gs
mov
lods
xchg
dec
aaa
faddl
inc
inc
inc
je
push
int3
sub
add
xor
movsl
push
add
jmp
xor
es
xor
rclb
jp
mov
test
xchg
stos
testb
and
add
outsb
das
sahf
fdivrs
outsl
stos
addb
lds
std
lods
insl
sahf
ficomps
sub
jne
aaa
mov
pushf
pop
loopne
sbb
addr16
lcall
fsts
adc
fs
fs
int3
inc
fs
addr16
int
mov
roll
mov
and
pop
icebp
scas
mov
and
test
pop
cs
push
rolb
gs
movsb
xchg
dec
loop
push
cmp
mov
pop
or
ss
mull
push
xchg
decb
enter
fcmovnu
inc
mov
mov
out
xor
mov
sub
stos
sbb
jg
dec
mov
les
in
add
lea
inc
dec
jne
adc
mov
and
popf
mov
inc
jmp
add
js
outsl
cli
cmp
aas
fisttps
out
ror
dec
push
cltd
stc
cmpsb
mov
sub
jne
or
inc
pop
cmp
sbb
sarl
movsb
sahf
add
sub
sub
movsb
add
mov
test
xor
jo
sub
lds
pop
add
sbb
and
jbe
lret
stos
outsl
popf
mov
int
sub
sub
scas
add
mov
mov
inc
dec
jo
push
fdiv
mov
mov
mov
mov
gs
push
mov
xlat
cmp
mov
testb
je
insb
imul
cwtl
pop
fsub
jmp
mov
insb
lea
in
js
notl
inc
jo
int
mov
outsl
std
sbb
or
out
shlb
mov
test
out
inc
push
inc
or
dec
popf
xchg
xor
xchg
shlb
pop
mov
cmpsl
pop
popf
cld
push
cmp
outsb
in
int3
xchg
sub
sub
imul
jge
mov
arpl
dec
fwait
inc
imul
icebp
inc
xchg
dec
imul
or
arpl
dec
call
adc
sbb
nop
std
inc
xor
sbb
repz
fimull
repnz
push
pushf
lret
sti
mov
mov
in
pop
jbe
aad
in
int
jbe
inc
and
into
and
lods
sub
xor
ss
mov
movsl
xchg
xchg
dec
iret
pop
cmp
sub
scas
jnp
jge
pop
pop
sbbb
dec
xchg
jbe
ja
xchg
cmp
add
xor
mov
cltd
ret
mov
adcb
mov
adc
repz
fcoms
fistpll
les
jecxz
fistps
sbb
sbb
push
mov
leave
rcrb
iret
and
invd
cmp
aas
rol
push
mov
push
fidivs
push
cmp
cltd
lds
incl
dec
lds
sub
xor
les
enter
dec
sbb
push
ljmp
xchg
cmpsb
in
xor
loope
pop
pushl
pop
aam
out
pop
negb
ds
subl
and
scas
sub
mov
movsb
xor
and
xor
and
mov
mov
mov
inc
sub
push
adc
test
push
jge
roll
stos
inc
sbb
cmp
mov
lods
jo
jg
mov
or
dec
aas
or
in
inc
cmp
and
rcrb
mov
xor
mov
shl
push
enter
sbb
and
notb
les
xor
jle
jnp
push
int3
je
sahf
frstor
xchg
addb
ret
cmp
jb
sbb
xchg
lock
out
loope
mov
mov
in
ficoms
sbb
or
mov
shr
fbld
rcr
push
clc
std
les
insb
je
test
jle
add
cs
pop
mov
lahf
push
mov
and
xor
mov
inc
sub
cmp
and
stos
or
shll
mov
ficoms
or
rclb
add
adc
outsb
xor
mov
dec
shrb
cmpsl
inc
push
ss
out
mov
cmp
fwait
sub
ret
xorb
add
dec
cwtl
ss
add
fisubrs
mov
or
inc
cmp
shlb
adc
push
add
push
push
aas
test
and
aad
mov
clc
inc
xchg
xchg
adc
pop
push
xor
sbb
push
and
jmp
jno
stos
sub
push
pop
je
dec
or
lret
jle
cmc
aaa
or
jne
negl
es
jl
addr16
xchg
push
xor
dec
bound
mov
sub
mov
lock
ret
mov
jbe
dec
sbb
es
sbb
pop
xor
cli
shlb
incb
andl
push
sub
test
enter
sbb
outsl
fwait
pushf
pop
mov
push
aam
sbb
mov
xor
xor
mov
add
gs
fwait
sarb
xchg
fsubrs
dec
rorl
or
add
cmp
add
cmpsb
push
stos
stos
jnp
andl
inc
mov
shrb
loop
mov
shr
fmul
mov
aam
pusha
cmp
xor
sub
push
pop
jp
icebp
jne
test
add
in
scas
sub
test
and
mov
xlat
in
push
call
lods
arpl
sbb
cmp
push
mov
sub
inc
or
push
jg
ss
out
sub
inc
jne
data16
pop
jp
cmp
cltd
jns
imul
mov
cmp
hlt
sbb
xchg
data16
cmp
jae
or
shl
test
js
or
dec
rorb
ret
pop
cmp
adc
pop
inc
cmp
shll
cmp
mov
jle
movsl
outsb
inc
int
aad
push
mov
mul
cmp
cmp
pop
scas
add
dec
mov
adc
inc
cltd
and
push
ljmp
mov
movsl
test
sub
pop
fdivl
xchg
loopne
jecxz
loopne
aaa
das
xchg
ds
jg
movsb
aas
les
or
xchg
dec
ss
and
jle
inc
sub
sbbb
rdtsc
addb
shlb
pop
mov
cmc
rdtsc
pop
scas
mov
xchg
dec
pop
sub
rcrb
pop
or
and
mov
and
jp
ljmp
and
and
int
cmp
iret
mov
lods
daa
test
je
in
cmp
and
bound
or
xor
pop
ja
jno
fmul
lods
pop
rorb
push
aad
adc
add
nop
loope
clc
stos
mov
cmc
repz
enter
jb
inc
scas
push
cmp
lcall
aaa
ret
cs
xor
adc
xchg
or
jo
jmp
in
lods
lahf
inc
dec
mov
notl
lea
lcall
out
ret
add
mov
fbld
xor
rolb
sahf
pop
movsl
jecxz
or
jae
jmp
push
call
inc
xchg
cld
jno
or
insb
repz
mov
push
in
inc
jo
pop
fs
xchg
ss
lea
xor
vcvtss2si
push
push
es
mov
fwait
addr16
outsb
xlat
pop
dec
dec
insb
xlat
insl
sbb
and
mov
cmp
xchg
jmp
cmp
inc
and
rclb
dec
and
mov
addb
test
cmp
push
sarl
clc
mov
fisttps
cmp
dec
add
popf
aad
in
les
cltd
pop
push
mov
xchg
mov
fbld
mov
repz
fwait
dec
in
fcom
add
fdivrs
mov
sbb
ljmp
pop
push
push
push
es
dec
out
sbb
dec
fisubrs
es
or
cmp
mov
sbb
nop
movsl
addr16
mov
mov
inc
cmp
add
and
fs
in
pop
and
lret
mov
repnz
popf
mov
adc
inc
loope
jp
aaa
adc
ret
mov
mov
ljmp
jg
add
std
lods
mov
imul
jae
inc
ret
fstps
hlt
mov
lret
or
or
mov
jns
sar
mov
and
fldcw
ljmp
mov
in
mov
and
cmp
mov
or
pop
or
lahf
clc
cmpsl
jg
es
add
jl
ret
in
int3
xrelease
clc
out
jae
repnz
xchg
cmp
jb
jnp
mov
stos
add
pop
cltd
adc
sbb
mov
xor
jmp
negb
ret
repz
lods
std
mov
mov
mov
xchg
xorb
push
xchg
clc
jo
leave
jno
int
pop
and
ss
outsb
pushf
or
mov
stc
jne
xchg
fstps
push
fwait
stos
icebp
cld
xor
fldl
xlat
push
insl
and
es
add
mov
dec
push
mov
adc
cld
stos
jg
pop
fstpl
imul
stc
adc
loope
push
cltd
fistl
test
test
pushf
add
es
outsl
mov
jns
jl
mov
repnz
test
stos
mov
mov
nop
arpl
gs
jmp
mov
lea
xor
test
int
pop
xlat
popa
cmp
xor
scas
pop
mov
fdivl
aaa
shll
ret
outsl
out
pop
inc
inc
leave
pop
jne
or
nop
mov
adc
fcoms
into
scas
movsl
in
mov
xchg
jae
orl
gs
mov
or
xor
jne
dec
clc
pushf
add
rep
and
fimuls
lret
xchg
sub
fdivrl
mov
imul
movsl
fisttpll
loopne
sub
outsl
push
test
cs
repz
mov
jns
inc
fucomp
push
js
cmc
idiv
nop
call
adc
rcll
push
shrb
cltd
test
pushf
aas
fisttpll
out
inc
pop
mov
aam
sub
icebp
sarb
mov
nop
pop
jg
sbb
cmp
enter
pop
jl
je,pt
nop
loop
scas
nop
in
mov
out
repnz
jae
das
and
cmp
or
ljmp
mov
mov
das
push
inc
cmp
cltd
out
lahf
xchg
lret
push
mov
xchg
es
mov
or
fwait
sbb
call
fdivrl
les
mov
mov
pop
push
int
adc
jb
xchg
mov
ret
lods
out
int3
dec
add
pop
lret
jbe
mov
icebp
mov
sbb
mov
dec
das
sub
sti
in
xchg
shrb
push
ja
andb
pop
sahf
cli
ficomps
flds
outsb
enter
movsb
js
adc
mov
ljmp
or
setns
imul
fnstcw
test
jmp
push
sbb
sbb
outsb
inc
pop
add
loop
pop
loopne
pop
cs
bound
mov
sub
add
imul
aaa
lods
rcl
mov
xchg
ficompl
dec
movsl
outsl
jns
leave
daa
dec
fs
jbe
and
int3
push
shl
mov
mov
ret
jge
ljmp
fs
xchg
sti
lock
fwait
loop
popa
into
jno
sbb
add
push
das
add
xchg
loopne
mov
push
push
sub
repnz
inc
pop
mov
mov
cmp
xor
loopne
mov
scas
out
inc
sub
shl
xchg
and
jg
icebp
enter
push
dec
aam
cmp
inc
int
and
loop
and
ja
push
mov
xchg
mov
mov
pop
dec
das
popa
mov
mul
les
cli
and
inc
dec
inc
stc
sarb
mov
sub
mov
iret
in
out
cmpsb
rcll
ret
add
cmp
pop
sub
xor
dec
addr16
jp
mov
mov
lret
inc
mov
test
je
leave
xrelease
mov
iret
push
xchg
pop
dec
jecxz
dec
pop
fcmove
rolb
cmp
loope
dec
stos
xor
fdivrl
jae
or
ficompl
lods
sbb
inc
repz
sub
or
insl
ficompl
sbb
sbb
jle
into
insl
push
xor
pop
mov
pop
jle
pop
pop
dec
mov
push
lock
insl
push
popf
ds
mov
stos
icebp
cs
jnp
icebp
xor
mov
iret
mov
mov
xchg
xchg
jecxz
xchg
addl
dec
jle
add
movsb
dec
loope
xor
loopne
mov
mov
xchg
mov
mov
dec
mov
iret
cwtl
jns
xchg
js
arpl
mov
jnp
fcmovnbe
outsb
lahf
push
test
adc
push
jae
daa
mov
inc
in
pop
clc
sub
int3
scas
and
add
or
daa
xor
cld
jae
je
idivb
jne
jp
add
inc
je
lret
and
stos
sub
and
jnp
lods
mov
and
mov
insl
pushf
adc
xchg
adc
mov
pop
iret
or
out
flds
mov
xchg
jl
lret
push
add
jno
add
dec
subl
mov
ja
lahf
sbb
test
jmp
and
mov
int
icebp
mov
jnp
or
pop
push
add
cmp
int3
leave
lret
rep
daa
pop
icebp
and
sbb
jns
out
int
inc
sbb
movl
lahf
jmp
call
push
or
xor
mov
push
and
stc
or
int
dec
push
test
sti
dec
xchg
jb
fists
popa
dec
xor
sbb
sub
lock
test
push
jg
jp
mov
dec
cmpsl
xchg
xchg
test
pusha
dec
cmp
icebp
add
pusha
xchg
sub
pushf
push
aas
inc
inc
clc
push
sahf
aaa
dec
loopne
jo
repz
mov
hlt
test
push
imul
mov
ds
test
popa
mov
fs
daa
out
jecxz
repnz
popa
lcall
mov
mov
add
cmc
bound
lds
xor
lcall
shlb
bnd
sbb
popa
jno
jno
mov
push
sub
adc
add
std
movsl
mov
repnz
inc
sub
sbb
adc
lcall
xor
adc
pop
push
cmp
les
daa
mov
gs
outsl
jbe
out
mov
out
inc
pop
fisubl
lea
push
cmpl
mov
and
movsb
call
jg
dec
ss
pop
imul
stos
or
inc
sub
push
sbb
pop
ljmp
aaa
mov
fnstsw
pop
shrl
fldl
cmp
imul
ss
mov
xchg
out
fmulp
js
xor
jl
sahf
popl
lahf
jno
xchg
pop
fsin
xchg
hlt
cmp
pop
test
mov
mov
pop
mov
lea
mov
mov
mov
pop
add
lods
icebp
xchg
jo
mov
sub
cli
frstor
mov
shl
mov
mov
xchg
dec
fmuls
lahf
test
inc
jo
mov
mov
sub
in
sub
sahf
jbe
std
enter
in
repnz
jnp
jno
jmp
icebp
push
cwtl
lods
daa
and
mov
sub
loopne
nop
scas
rolb
push
jns
repz
rorl
fimull
test
enter
pop
push
push
push
jecxz
and
fidivs
xorl
gs
mov
push
inc
mov
sub
inc
cmc
inc
mov
xchg
insl
nop
xchg
sti
cltd
ljmp
sub
mov
ja
sub
lret
xor
dec
aaa
cli
shrb
pop
push
inc
inc
sub
cmp
xlat
sbb
icebp
pusha
stos
jp
xchg
cmp
mov
adc
je
fsubl
setl
adc
mov
ret
fcmovb
scas
adc
pop
in
into
iret
jp
push
pop
sub
adc
sub
jbe
in
nop
ficompl
test
stc
imul
inc
mov
xor
in
out
in
xor
out
cmp
repz
and
addr16
xor
and
mov
insb
hlt
xchg
or
pushf
xor
bound
sarl
cmc
inc
cli
sub
sbb
les
mov
or
pop
leave
das
outsl
adc
cli
mov
jb
cmp
test
and
cld
in
inc
sahf
shl
icebp
enter
sarb
pushaw
lods
pop
stos
jns
mov
cmpsb
push
mov
mov
inc
xor
pop
push
push
movsl
sub
leave
xchg
push
sbb
sbb
lcall
adc
leave
jmp
int
or
scas
mov
jmp
mov
fistps
sarb
jnp
mov
push
push
fidivrl
aad
mov
xor
mov
push
sbbl
pop
adc
inc
fisubl
lret
mov
sub
imulb
xchg
adc
sub
aam
out
das
cld
jne
ret
xchg
mov
sbb
iret
cli
in
mov
out
outsb
push
lahf
mov
dec
jg
lods
and
adc
fidivrs
jne
cltd
sbb
pop
dec
mov
test
jo
call
cmp
mov
jg
stos
cld
push
sbb
pop
int3
cmc
pop
cltd
inc
push
out
dec
frstor
bound
stos
pop
std
lods
sbb
pop
jmp
mov
push
jb
out
sbb
cwtl
mov
cld
out
jmp
xchg
loopne
insl
mov
xchg
or
lcall
xor
rol
clc
lods
add
pop
jle
inc
stc
sbb
jae
mov
mulb
cmp
or
fisubrs
cmp
in
movsb
push
int3
xor
xchg
repz
jae
pop
scas
arpl
xor
rclb
xchg
fwait
cmp
push
aaa
or
or
js
inc
push
or
lret
adc
xor
pushf
cli
adcl
daa
add
rolb
jmp
subb
jg
js
and
cld
inc
fsubr
repz
fwait
pop
add
adc
xorl
mov
mov
test
inc
loopne
mov
cmp
inc
dec
cmp
repz
in
loope
lea
mov
test
lret
insb
mov
jl
xchg
stc
data16
aas
sub
aad
mov
inc
xlat
push
imul
push
cmc
or
add
fsts
or
out
adc
out
loop
scas
xchg
sub
push
fildl
mov
xor
mov
jns
mov
fwait
adc
fadds
cs
cltd
cltd
pushf
imul
jle
outsb
inc
jecxz
rcrl
andb
cs
ret
clc
es
adc
sahf
lods
out
insl
push
ja
jle
sbb
push
xchg
adc
pusha
jne
dec
sub
sub
out
ret
dec
push
sub
hlt
dec
jnp
lds
clc
call
jbe
pop
imul
add
aad
sbb
jge
xchg
xchg
cmp
arpl
jp
andl
xchg
adc
clc
test
std
jne
fiadds
adc
fcoml
hlt
dec
jb
imul
jno
shlb
daa
add
std
out
arpl
jnp
fistpll
sbb
shlb
mull
jp
in
es
pop
mov
repz
cltd
in
xchg
mov
xchg
push
shll
insb
or
hlt
xor
int
and
dec
daa
fsubr
cs
mov
push
sbb
jl
shl
fld
jmp
out
mov
fwait
xchg
movsl
mov
adc
xor
cmpb
adc
popf
cs
pushf
mov
jo
cwtl
mov
jg
or
andl
jno
dec
and
insb
xchg
cmp
jmp
mov
xchg
mov
dec
dec
fmull
rorl
mov
nop
into
push
les
pop
cli
jecxz
rcrl
lret
and
insb
xor
fnsave
fsubl
pop
stos
inc
fwait
idivb
dec
sub
jge
adc
test
add
shrl
sub
mov
push
mov
and
xor
or
adc
cmpb
add
mov
fs
paddsw
pop
push
push
fstps
xchg
pusha
rorl
ret
test
adc
push
and
pop
roll
std
push
jo
add
sti
jae
sub
push
lock
repz
cmp
jb
adc
nop
dec
popf
push
mov
sub
inc
jae
jp
pop
stos
int3
rclb
stc
out
xor
lods
stc
cmp
push
jbe
pop
xchg
lret
mov
into
xlat
xchg
imul
push
clc
jbe
stos
std
in
dec
popf
shlb
hlt
pusha
inc
call
lret
arpl
test
in
js
add
fs
jno
adc
aad
add
or
push
sbb
dec
pop
pop
push
sub
sub
xchg
mov
sarb
add
mov
sub
mov
xchg
push
push
data16
ret
fdivs
adc
mov
out
adc
jge
rdpmc
add
push
xor
adc
adc
fdivrl
stos
cmpsl
jns
push
std
loop
sub
out
cmc
push
sti
std
in
or
addr16
sbb
inc
sub
popl
pop
shrb
inc
sahf
je
in
mov
rclb
movsb
mov
adc
and
subl
fstpt
dec
mov
pop
dec
mov
inc
add
test
xchg
xchg
inc
xchg
add
ds
in
and
fmuls
in
test
push
inc
and
pop
cmp
dec
rorb
pusha
xor
addr16
fnstsw
and
xor
es
dec
mov
es
icebp
jne
push
jl
shrl
stc
and
mov
xchg
mov
lds
and
enter
cmpl
daa
cld
sub
push
xchg
inc
cmc
xor
rcll
xor
xor
mov
add
pop
push
add
mov
fisttpll
xor
loope
pop
pushl
idivl
mov
adc
aaa
or
scas
cld
sbb
inc
shl
pop
sub
sub
xchg
dec
pop
adcb
dec
aaa
jp
sub
scas
adc
sub
aaa
push
scas
fiaddl
mov
dec
scas
aaa
cltd
fistpl
orl
xchg
aad
add
ss
push
push
das
pop
mov
add
cmp
out
gs
stos
push
xchg
inc
jge
test
fdivrp
mov
mov
rcrl
or
mov
insb
dec
lods
adc
rorl
cli
push
cmpsl
into
popa
jae
and
leave
mov
sahf
add
cmpl
movsb
xor
scas
and
cmp
in
subl
mov
sahf
fnstsw
repz
je
or
out
cmp
pop
or
rcl
wrmsr
fsubrl
and
and
pop
dec
jg
add
inc
test
mov
or
in
aad
hlt
pop
sub
lds
mov
test
dec
jo
rorl
lcall
pop
mov
icebp
jae
pop
mov
mov
pop
inc
ds
cltd
xchg
loopne
jnp
jge
adc
fsub
inc
enter
mov
stos
cwtl
pop
lods
mov
in
xchg
shrb
repnz
in
test
cmpsl
in
ja
leave
arpl
cmpsb
arpl
jp
js
out
int
jno
imul
dec
sub
sbb
cmovbe
aas
jecxz
sub
pop
sbbl
es
inc
shrb
add
xor
mov
xchg
and
xchg
and
mov
or
sub
in
fwait
imul
dec
mov
leave
mov
mov
ljmp
push
jnp
pop
mov
push
aas
push
mov
scas
imull
mov
in
push
or
push
int3
popa
inc
mov
pop
push
xor
adcb
add
cld
dec
ljmp
ret
in
jb
pusha
in
daa
outsb
mov
insl
out
fimull
xchg
mov
sub
fdivrs
cmc
dec
mov
fistpll
xor
sbb
sub
pop
jecxz
nop
jne
mov
in
cmpsl
xchg
cltd
and
dec
mov
and
push
push
dec
sti
jne
imul
jge
clc
aam
into
mov
js
mov
insb
mov
ret
in
dec
lret
gs
scas
fisubs
mov
incb
mov
add
pop
mov
xorl
jbe
out
insl
jne
lds
jae
pop
inc
outsl
out
adc
cmp
das
clc
mov
loop
jmp
pop
test
mov
call
mov
out
mov
test
inc
xor
lods
fildll
mov
fldl
inc
adc
add
mov
dec
add
cmpsb
add
pushf
jp
or
stos
push
popa
es
jns
loopne
lock
in
dec
adc
and
cltd
scas
sbb
push
xchg
out
cmp
add
xchg
rorb
push
rorl
pop
or
push
or
pop
fwait
repnz
out
stos
push
dec
inc
xor
sbb
mov
sahf
fwait
adc
pushf
mov
cwtl
xchg
xchg
loopne
push
test
mov
jg
jno
test
ss
sub
dec
cmp
adc
and
push
fnstcw
ljmp
movsl
cs
jge
gs
xor
cltd
leave
or
add
aaa
pop
sahf
inc
in
pushl
xor
sbb
int3
pop
es
push
jb
outsl
cld
push
leave
add
fisubl
int3
negb
fisubrs
jecxz
mov
movsl
popf
sahf
movsb
jmp
jmp
test
push
std
add
sub
rol
call
adc
jb
add
mov
pop
insl
lea
dec
push
xor
pop
jecxz
jo
addr16
push
aaa
cltd
hlt
sub
sub
cmp
jg
jno
xchg
lods
std
xlat
repnz
sti
arpl
fldt
sub
sarl
jb
jnp
addr16
adc
ss
dec
cltd
or
pop
mov
xchg
imull
pop
sbb
js
and
jle
nop
xor
dec
stc
rcr
outsl
emms
inc
cmpsl
rorl
add
xchg
test
sbb
mov
imul
ja
loopne
repz
add
loope
test
movsl
pop
mull
pop
ss
out
add
or
insl
mov
aad
ss
fbld
pop
imul
inc
repz
cmp
mov
in
add
mov
outsb
adc
loopne
and
shlb
mov
fs
or
inc
or
mov
pop
fstps
fnstsw
cmc
xchg
cmp
fisttpll
lods
jno
aas
cmc
addr16
add
fiadds
call
xor
and
inc
lock
outsb
add
mov
jp
dec
pop
pop
test
mov
xchg
or
leave
les
leave
pop
lods
mov
fxch
fists
clc
push
ss
lods
dec
cwtl
mov
pop
daa
outsl
push
sbb
jae
mov
cmp
jmp
into
xchg
and
jb
and
notl
cmc
jmp
adc
sub
dec
or
outsb
mov
sub
aad
stc
dec
ss
mov
mov
aas
scas
pusha
popf
stc
pop
mov
int
fidivl
out
movb
cltd
push
and
or
pop
stos
xor
xchg
sbb
cmc
pop
xlat
fstl
sbb
cmp
dec
inc
sahf
sti
or
outsb
push
sub
jecxz
out
vorpd
mov
lahf
adc
dec
out
repz
and
push
out
jnp
sarb
push
mov
pop
sahf
or
pop
push
mov
lock
aad
dec
fwait
lcall
aas
pop
repnz
jmp
je
jg
inc
dec
cmc
movsl
cli
or
jae
ja
push
jle
stos
repz
loopne
pop
icebp
sti
sub
dec
negb
ss
xor
sbb
lds
shlb
scas
xchg
mov
jge
fdivrs
pop
dec
push
sbb
xorb
cmp
jle
xchg
mov
jge
pop
test
jge
cmc
outsl
mov
mov
popa
icebp
and
fistl
loop
xchg
loope
les
bound
mov
mov
fdivs
pop
scas
sti
out
fdivrs
loop
imul
pop
adc
fdiv
pop
xchg
cld
sar
sub
cltd
push
dec
cltd
xchg
pushf
or
sub
cmpsb
fcos
pop
adc
xlat
jns
data16
pop
jns
inc
inc
fsubr
mov
dec
mov
xor
call
std
push
fcomps
or
fisttps
cld
jnp
sahf
adc
clc
or
mov
bound
enter
fstpl
out
popf
fwait
les
leave
frstor
testl
jns
subl
xchg
push
sub
nop
mov
mov
aas
dec
aaa
loope
ret
test
cmp
xchg
pop
leave
das
orb
in
jnp
jnp
mov
or
push
scas
fdivl
dec
xor
lret
loope
xor
loopne
inc
movsl
lret
jmp
js
sarl
sbb
out
fwait
sub
add
dec
jns
and
mov
loop
loop
inc
lds
leave
stos
dec
or
xchg
mov
rcl
out
outsl
repnz
repnz
mov
popa
mov
enter
cmp
imul
in
xor
fwait
nop
dec
movsb
in
sbb
movb
xor
gs
hlt
test
mov
pop
lea
or
mov
in
jge
add
add
lcall
sti
inc
mov
imul
xor
scas
cmp
pop
int3
loopne
push
pop
push
sub
inc
jle
aad
inc
sub
jecxz
aaa
int3
cld
inc
cli
adc
jmp
mov
lret
into
dec
gs
stos
pop
and
aaa
dec
xchg
inc
mov
xchg
or
dec
outsb
mov
pushf
push
adc
lods
arpl
xchg
jle
xlat
adcl
leave
and
sbb
das
adc
cmpsl
sbb
xchg
js
push
push
mov
mov
out
xchg
rolb
sub
cmpsb
push
cltd
push
mov
stos
push
clc
pop
jne
xor
lret
mov
jns
sbb
flds
in
or
dec
cwtl
cmc
dec
aam
outsl
xor
gs
paddq
dec
mov
inc
sub
sti
out
cmpl
push
cmc
arpl
sbb
imul
mov
or
adc
sub
mulb
dec
cmp
mov
lods
lret
sti
jb
cmp
rcrl
sub
or
cmc
or
pusha
and
fimull
into
xor
fldl
loop
add
mov
fimull
adc
xchg
or
jne
sub
pop
cbtw
mov
daa
dec
dec
inc
or
inc
ss
push
lds
loopne
cltd
pop
dec
cwtl
inc
add
sbb
andl
cmp
jl
mov
cwtl
mov
mov
add
xor
mov
inc
dec
inc
inc
out
pop
inc
jnp
sbb
test
jg
mov
and
inc
out
xchg
push
dec
cmp
js
cmp
mov
mov
or
clc
xor
cmp
outsl
mov
clc
les
cvtpi2ps
addr16
js
mov
fwait
cld
arpl
into
xchg
outsl
sub
clc
inc
xchg
mov
xor
xchg
mov
ds
loope
sbb
cs
mov
addb
add
sbb
sub
fstpl
push
ss
mov
fwait
and
sbb
sar
mov
ja
rorl
loope
jnp
mov
inc
cltd
mov
mov
bound
movsb
and
dec
mov
mov
int
ss
mov
mov
mov
push
push
lds
out
adc
sub
xchg
mov
jg
xchg
lret
hlt
int
pop
scas
mov
test
xor
cmpsl
and
js
pop
mov
divb
loop
rolb
push
arpl
sti
mov
subl
std
std
mov
pop
hlt
dec
or
inc
ljmp
add
iret
sbb
jp
insb
adc
sti
mov
adc
mov
sbb
jg
dec
out
sbb
sub
stc
push
pop
lds
iret
add
scas
aas
adc
mov
or
push
add
out
jo
cli
xor
mov
xchg
xchg
dec
inc
sub
stos
int
les
push
mov
fstpt
outsb
mov
sub
addr16
pop
or
pop
jecxz
add
lahf
adc
pusha
and
add
pop
push
and
bound
nop
or
sarb
or
jl
xchg
fwait
jle
sbb
out
lcall
xchg
adc
loope
xor
push
addl
add
mov
inc
in
cld
xlat
mov
in
lret
out
jp
aas
push
pop
jnp
shrb
or
repnz
cmpsl
addr16
mov
data16
inc
xchg
sub
adc
in
mov
pop
test
add
movsl
cwtl
push
cld
stc
sahf
mov
xor
faddl
into
ret
and
outsl
int
rolb
push
lods
loopne
push
dec
addr16
xchg
sbb
ret
xorb
dec
stos
lcall
and
mov
jbe
sti
loope
cmp
cmp
sbb
mov
cli
imul
jl
pop
xchg
out
push
sahf
mov
sub
sbb
mov
fldenv
fsts
inc
mov
imul
addr16
push
mov
jecxz
mov
xchg
test
gs
add
lahf
sub
btc
sbb
outsb
xchg
dec
cmpsl
mov
push
jge
popa
ret
jmp
xor
push
int3
mov
icebp
push
dec
xchg
ljmp
jp
out
iret
stos
lcall
push
adc
jnp
dec
push
pop
xchg
or
fsubs
mov
out
jmp
jmp
ss
jbe
out
in
stc
dec
gs
and
xchg
arpl
ljmp
test
jbe
xchg
cs
mov
lods
mov
adc
and
xchg
sbb
xor
and
sbb
xor
stc
mov
xchg
mov
xor
adc
ja
negb
andl
lea
jp
mov
mov
jecxz
mov
sahf
in
xchg
push
fldt
mov
xchg
in
sahf
movzwl
sub
into
push
addr16
iret
fistps
pop
fadd
xor
mov
lods
mov
pop
xchg
mov
mov
int
sub
pop
jp
and
mov
xchg
mov
push
int3
iret
lret
and
into
leave
scas
push
aam
mov
ret
test
xchg
movsb
shlb
inc
and
aam
sbb
dec
cmpsl
mov
dec
push
jmp
mov
lods
imul
filds
sti
inc
pop
lock
cld
adc
xchg
add
push
pop
icebp
push
xor
push
pop
aaa
daa
or
ret
lret
dec
ljmp
xchg
pop
dec
jmp
xchg
xchg
xchg
out
nop
es
mov
mov
fmuls
in
xor
xchg
mov
pop
fdivrl
sahf
popl
lret
or
sbbl
inc
movsl
jl
mov
add
adc
fcmovnbe
lahf
imul
cmp
mov
add
in
test
pushf
sbb
rcrl
jmp
fldenv
cmp
sub
loop
sarl
push
inc
sbb
mov
movsl
orb
jno
pop
lds
jmp
cmp
test
jbe
lcall
popf
shll
jmp
adc
fisubs
fidivl
or
xor
sbb
loope
stos
lahf
jle
sbb
jmp
push
fwait
insb
sbb
pop
mov
out
insl
out
scas
repnz
test
js
fs
out
and
enter
inc
dec
inc
fbld
jmp
fmull
jge
orb
loope
sbb
cmpsb
dec
dec
sti
rcl
iret
mov
and
stc
dec
adc
out
into
iret
out
test
mov
clc
xor
enter
cld
adc
iret
dec
cld
pop
dec
lahf
mov
or
push
repnz
sbb
jo
push
adc
mov
and
cmp
fimull
fs
test
mov
ret
js
andb
fnstenv
sbb
mov
jnp
insl
cmp
adc
pop
icebp
mov
mov
mov
sub
inc
adc
push
sub
addr16
lds
fistl
sahf
mov
add
stc
sub
les
dec
in
mov
xor
shll
sahf
in
leave
aad
push
jo
test
cltd
xor
xchg
or
lcall
inc
mov
lret
mov
out
and
and
push
xchg
mov
js
jecxz
ja
add
push
jne
adc
pop
nop
repz
mov
xchg
and
add
movsb
cmp
push
push
nop
xor
xchg
inc
enter
daa
ret
int
push
adc
stos
negl
mov
lahf
imul
push
jae
or
jne
inc
mov
movsl
jno
xor
pop
xchg
xchg
inc
daa
mov
mov
xchg
or
push
push
shr
adcb
and
lret
dec
inc
in
jle
pop
pop
sub
in
pushl
dec
cmp
cmp
xchg
inc
inc
andb
inc
or
popf
or
pop
jae
mov
add
mov
and
adc
xor
cs
lea
inc
or
adcb
sub
movb
xor
cltd
aaa
xchg
cmp
xchg
mov
jge
ficoms
arpl
pushf
pop
mov
xor
mov
mov
in
in
add
repnz
imul
mov
in
sub
imul
arpl
jle
in
lcall
xlat
xlat
fsubl
and
xor
cs
jae
stc
fs
lret
stos
or
test
mov
push
dec
outsl
jbe
daa
mov
test
mov
or
rcr
xor
loopne
arpl
add
or
insb
xor
and
into
in
sbb
movsb
dec
sarb
iret
test
movsb
lds
int3
cmpsb
or
ret
jns
inc
lahf
pop
push
sub
cmp
out
popa
repnz
dec
inc
or
xor
pusha
pop
sti
xchg
aas
mov
pop
loopne
push
enter
out
xor
movsl
mov
mov
int
div
xchg
fildl
hlt
push
push
nop
push
mov
jle
pop
jns
inc
xchg
pop
sub
lret
cmp
pop
inc
insl
or
xor
mov
mov
lods
jo
popf
jns
bound
push
mov
push
dec
std
dec
and
in
popa
jnp
lret
add
pop
pop
testl
xchg
sbb
mov
addr16
rcll
and
lods
or
sub
xchg
into
or
mov
xchg
aas
or
out
lcall
sti
jmp
pop
xchg
push
test
sub
cmpsb
cmpb
inc
sbb
adcb
outsb
jl
loopne
or
test
jno
inc
bswap
orl
int
imul
xchg
clc
lahf
mov
inc
loopnew
inc
inc
adc
stc
jae
and
in
movsl
mov
push
lcall
das
mov
inc
pusha
and
pop
fdivrl
inc
sti
mov
add
sub
imul
sbb
subb
xchg
xchg
push
lret
pop
cmp
xchg
in
jl
mov
adc
sub
out
fadds
pop
or
stos
dec
pop
ror
adc
lahf
cld
pushf
repz
jl
inc
cld
into
out
stc
stos
cmc
outsb
inc
out
mov
lods
lods
inc
mov
jnp
inc
fnop
sub
mov
dec
xor
xchg
mov
mov
lahf
pop
mov
pop
xchg
adc
je
hlt
fbstp
cmp
mov
cmove
jmp
or
aam
xchg
pop
out
push
push
cltd
cld
out
js
je
fwait
repz
leave
fdivl
sub
jmp
dec
push
cmpl
repnz
mov
xchg
mull
pusha
cwtl
repz
mov
and
outsl
and
stos
loop
fnstenv
mov
cmc
iret
outsb
stc
push
mov
lret
jl
jns
aad
inc
shlb
cwtl
add
cld
sub
into
lock
iret
fdivr
dec
jp
cmpsl
cwtl
das
ror
fiadds
mov
xorb
mov
mov
popfw
dec
dec
mov
pop
les
clc
fidivrs
xchg
daa
cli
add
push
mov
shl
mov
and
or
loop
js
aad
fdivs
movsb
cmc
rorb
into
imul
into
icebp
ss
test
xchg
and
mov
lcall
sbbl
sbb
inc
out
xor
insl
sub
mov
mov
mov
mov
sbb
inc
fisttpl
dec
shlb
rcr
fwait
xor
insl
sub
push
xor
out
mov
push
mov
fwait
out
enter
add
xchg
xor
xchg
mov
leave
xchg
adc
shlb
gs
pop
push
pop
les
add
les
movsl
aam
xchg
roll
xor
cwtl
mov
jae
inc
xchg
int3
sbb
fisubrs
mov
fldt
and
mov
test
addl
mov
imul
shlb
gs
outsb
push
fidivrl
xchg
and
movsl
lods
xchg
jg
xor
aad
lcall
test
fbstp
data16
sub
popf
popf
aam
lahf
repz
fdivl
ljmp
into
es
add
das
jno
leave
js
ja
cmp
int3
out
push
adc
sbb
jle
or
push
aas
cmp
ror
scas
repz
jle
xorb
mov
pop
push
pushf
push
fiadds
and
and
sbb
cltd
mov
cmc
mov
lahf
int3
fdivl
ja
fdivrl
rcll
stc
sub
fmuls
andb
mov
pop
pop
pop
jge
lock
jae
out
push
and
dec
pop
dec
push
pusha
sti
inc
push
jae
jo
cmp
pushf
jbe
imul
popf
lods
push
test
jl
fcompl
fsubp
adc
ret
frstor
pop
sbb
filds
and
sub
push
add
lods
xchg
negl
xor
lret
mov
lcall
pop
sub
int3
lret
and
xor
and
mov
adc
pslld
pop
add
push
sbb
sahf
sub
int
pusha
push
push
bound
les
dec
mov
mov
adc
nop
es
repnz
dec
push
sbb
pop
dec
lret
dec
pushf
adc
andb
std
and
or
imul
xchg
mov
add
jno
xchg
mov
xor
sub
fistps
cld
inc
fmuls
inc
pop
fstpl
or
dec
shrl
pop
int3
jns
ss
popf
or
ss
inc
or
gs
lods
enter
jnp
xchg
cmp
push
aam
fstp
xor
gs
pop
inc
jae
cmp
lds
test
dec
mov
jl
js
andb
fdivrp
adc
push
ja
dec
inc
stos
cmp
int
hlt
xchg
jb
and
mov
in
loopne
or
aaa
test
jecxz
cmp
inc
stos
inc
jb
adc
jb
push
repnz
hlt
les
rclb
cmp
adc
lahf
xorb
cld
out
mov
xlat
pop
lret
dec
adc
xlat
sbb
fidivl
pushf
xchg
leave
test
mov
cwtl
lods
orb
in
adc
mov
mov
pop
adc
fs
lea
mov
popf
fildl
popa
xchg
push
pop
out
and
and
add
pop
push
rorl
and
daa
movsb
adc
lods
loop
sbb
inc
pusha
dec
popf
mov
jns
daa
test
in
xchg
out
rolb
push
sub
mov
xchg
test
pop
xor
fsubl
and
push
ret
loope
pop
pop
adc
inc
stc
sbbb
test
mov
add
push
jns
mov
jb
or
repz
push
and
jns
ljmp
xchg
aad
sub
leave
scas
sbb
mov
out
nop
insb
xor
scas
ret
mov
imul
pop
shrl
mov
test
js
jecxz
mov
sbb
inc
sub
pop
pushf
add
mov
add
dec
push
mov
adc
nop
mov
mov
pusha
mov
scas
sub
adc
sarl
aaa
stos
or
out
dec
xor
daa
into
xor
sbb
loopne
inc
gs
fwait
xchg
iret
mov
mov
adc
shrl
aam
cmpsb
mov
in
inc
rol
test
push
mov
rcll
subb
or
mov
inc
das
repz
aas
popf
mov
addr16
jg
test
ret
clc
xchg
mov
lea
jmp
aam
dec
rolb
mov
adc
cld
mul
mov
xchg
adc
clc
sti
pop
or
jmp
test
sbb
data16
mov
les
scas
pop
aas
inc
aam
std
cmp
mov
jle,pn
jno
out
fmuls
and
sbb
jb
insl
repnz
test
pushf
out
mov
fcomp
movsb
adc
lea
test
into
andb
jnp
push
das
dec
out
xor
nop
movsl
pop
mov
pop
scas
mov
dec
jno
les
loope
std
push
test
dec
repz
lods
shlb
sbb
or
xchg
push
out
je
adc
gs
lcall
and
sti
shlb
lret
xchg
lret
mov
pop
and
add
inc
ss
jo
aas
fldcw
dec
mov
shlb
in
je
das
sbb
mov
pop
outsb
sub
shl
stos
and
fcoms
sbb
or
pusha
inc
cmp
xchg
addr16
inc
push
scas
add
sbb
int3
push
lcall
pop
jp
cmp
sbb
loope
fld
shll
in
test
sbb
std
pop
insb
add
jp
jecxz
sbbl
pop
loope
fiadds
das
popa
arpl
rcrl
bound
aam
aad
aad
ds
sbb
imull
xor
aaa
sbb
inc
arpl
xchg
daa
xchg
sub
jns
mov
push
sub
sbb
sbb
pop
repnz
mov
js
cmp
bound
mov
pusha
shrb
std
push
ljmp
scas
dec
xchg
adc
sti
sub
inc
pop
cmp
std
xor
in
inc
mov
cmp
dec
fwait
test
mov
hlt
scas
dec
or
mov
pop
loopne
dec
inc
push
lahf
adc
or
scas
arpl
xchg
and
lret
mov
mov
dec
mov
jb
jb
popf
shll
jmp
pop
out
inc
push
cmp
outsb
aas
std
pop
xchg
xchg
test
mov
orl
insb
clc
and
sahf
iret
lret
lret
dec
mov
es
push
push
ret
mov
mov
aad
stos
mov
frstor
leave
nop
lea
mov
pop
dec
jns
add
xchg
push
ret
sbb
pop
xor
aam
cmpsb
ret
sbb
jnp
fisttpll
jns
mov
stc
sbb
ds
inc
push
xchg
ret
mov
mov
sbb
and
lret
leave
jecxz
test
and
xor
jg
stos
push
nop
dec
fldcw
out
into
addr16
dec
lock
xor
adcl
gs
stos
and
ss
jnp
add
push
sub
mov
xchg
dec
imul
xchg
out
aas
or
pop
lods
in
sbb
push
add
and
lds
lahf
cld
pop
and
movsl
mov
pop
ss
scas
push
xor
loopne
testl
mov
mov
std
sub
dec
scas
out
jmp
pushf
aaa
push
into
cltd
sbb
adc
and
inc
stos
ret
fidivl
aas
jb
mov
inc
in
inc
outsb
rcl
lods
ret
mov
or
mov
data16
mov
push
pop
cmp
sub
and
jp
dec
pop
cmp
jl
cmp
cmpsb
xchg
xchg
cmc
push
and
and
or
xchg
cmp
jl
jp
or
jno
unpckhps
fbstp
xadd
fsubrs
xchg
rcrb
or
popa
pusha
outsl
sub
pop
xchg
pop
leave
lods
xlat
push
hlt
mov
mov
fisubrl
clc
jle
scas
inc
mov
inc
movsb
pop
pop
scas
inc
mov
inc
movsb
pop
pop
test
popa
shlb
cmp
and
push
std
sub
stc
repnz
cld
push
mov
inc
mov
sub
movsb
pop
dec
push
pusha
out
add
div
cmp
xor
jo
cmp
jo
add
bound
jne
out
loop
rorl
adc
add
sub
push
cmp
iret
or
pop
repz
jp
push
repnz
cs
insl
jbe
sahf
xchg
dec
loope
lret
xchg
xchg
mov
adc
push
daa
xor
aad
xor
pop
jns
jmp
gs
adc
and
pop
or
sub
jmp
adc
cmovae
fwait
lods
sbb
jbe
cli
cmpsl
andb
dec
fidivrs
out
inc
push
mov
dec
sub
mov
sbbb
jmp
sub
incb
rcr
sbb
fwait
xor
add
sarb
jne
push
enter
inc
aam
mov
mov
sbb
repz
fldcw
adc
lods
inc
out
lods
cmp
hlt
dec
addr16
in
mov
movsb
das
imul
imul
push
cmpsb
pop
pushf
add
scas
lahf
mov
movsl
loope
push
mov
xchg
sbb
ljmp
xchg
add
and
mov
sti
icebp
js
loope
cld
fimuls
mov
adc
xchg
pop
sub
stos
sub
hlt
ficoms
sub
xor
lock
fwait
iret
dec
mov
lret
addr16
sti
out
sbbb
push
aas
lea
fmull
lahf
mov
xchg
bound
cmpsl
mov
xlat
cmp
pushf
jb
push
adc
or
xchg
jmp
sub
sbb
pop
repnz
ja
int3
inc
rclb
loop
out
add
xor
mov
xchg
lods
movsb
mov
jns
sbb
fcmovnbe
cmp
mov
inc
inc
out
loop,pt
inc
xor
push
jae
jnp
dec
int3
lods
xor
mov
je
jl
sti
cli
aam
test
shl
adc
lret
mov
nop
dec
mov
fcomps
cltd
addr16
add
xchg
fnstenv
stos
int
stos
xchg
pushaw
jnp
sub
ds
es
fdiv
into
lcall
sbb
xchg
sub
xor
dec
outsl
jge
aam
pop
mov
jle
pop
gs
push
jne
jecxz
cmp
jnp
cmp
mov
ds
mov
dec
pop
pop
cld
jp
pop
add
push
addr16
pop
xchg
adc
dec
pop
jmp
imul
inc
add
cmp
rcr
push
dec
cmp
push
pop
pop
xor
add
mov
outsl
sub
shlb
mov
sub
sbb
push
add
add
mov
mov
inc
inc
stos
adc
cltd
aam
xadd
iret
mov
mov
inc
jle
jl
jo
jne
lret
push
mov
adc
aaa
inc
dec
sub
mov
push
aam
adc
and
mov
ja
fstpt
jne
popa
idiv
dec
dec
aam
mov
jbe
xor
mov
sub
repz
lahf
push
xor
mov
popf
dec
lods
sahf
imul
sbb
test
adc
pop
mov
stos
je
add
or
xchg
sub
ret
sti
in
call
fwait
xchg
sbb
mov
imul
outsb
dec
or
movsl
popf
repz
jecxz
enter
out
mov
stc
pop
cmp
movsb
int3
hlt
test
pusha
sbb
roll
adc
add
divl
roll
leave
arpl
aas
cmp
jecxz
orb
inc
imul
lods
or
xchg
mov
push
mov
mov
lods
aam
mov
cmp
sbb
xlat
lods
inc
jmp
test
cmp
addr16
dec
pop
mov
les
dec
inc
xor
xchg
fidivrl
add
sbb
push
rcrb
ds
lods
fisttps
lret
mov
xchg
cli
pushf
enter
mov
push
mov
loopne
push
lds
inc
mov
fcoml
add
rcrl
sbb
and
mov
pop
cmp
mov
loopne
jge
ret
jne
mov
dec
sbb
xor
push
mov
and
ret
por
xchg
cltd
xchg
add
lahf
sbb
cld
cmp
fisttps
xor
jecxz
insb
mov
or
rclb
test
mov
nop
insl
mov
cmp
and
pop
cmp
mov
xchg
inc
mov
adc
hlt
mov
dec
cwtl
enter
and
cli
ret
sti
dec
and
shlb
movsb
popf
ret
jnp
jnp
inc
imul
cld
pop
or
add
push
mov
sbb
push
mov
rcr
outsb
adc
fucomi
push
xchg
push
fcmovnbe
jo
dec
jne
sahf
rorb
insb
nop
dec
leave
sub
jl
outsl
push
testl
xchg
add
cltd
sub
jle
mov
push
sub
push
gs
xchg
pop
cwtl
test
lods
stos
pusha
cltd
cli
push
ds
adc
dec
pop
lea
add
mov
and
add
mov
pusha
dec
mov
adc
lock
mov
inc
les
jo
cld
mov
mov
popa
xchg
mov
js
sub
push
pop
push
and
push
cs
jno
rolb
dec
inc
shl
mov
sbb
jb
or
or
fwait
mov
setne
js
outsl
add
pop
dec
push
insb
push
pusha
push
in
xor
sub
movsl
loope
jmp
adc
sbb
ljmp
push
fsubl
dec
or
mov
pop
jo
mov
sbb
test
iret
lods
mov
outsb
in
pop
dec
add
rorl
cmc
jp
hlt
leave
stos
cmp
pop
iret
jl
fldlg2
and
push
dec
xor
mov
mov
into
test
mov
inc
test
push
scas
dec
adc
int3
shlb
jle
lret
cmpsb
push
pop
xor
arpl
or
push
sbb
mov
gs
ss
daa
mov
mov
scas
sti
fsubrs
aad
in
jns
push
mov
js
out
arpl
into
push
dec
push
ret
cld
out
bound
test
cmp
xchg
int3
pop
mov
sub
jecxz
pop
and
xor
mov
xchg
cmp
push
inc
jno
imul
negl
pop
out
pop
xchg
pop
hlt
test
mov
sub
aad
dec
push
sub
jp
mov
mov
xlat
icebp
loope
adc
ret
inc
out
test
mov
andb
xchg
jo
pushf
sbb
adc
xchg
cs
and
and
fwait
mov
lret
cmpsb
jbe
inc
xchg
lods
mov
jl
pop
sbbb
lret
xchg
mov
lret
cmp
cltd
mov
dec
xor
je
in
pop
dec
and
xor
fwait
inc
pop
in
add
jmp
pop
jns
pop
inc
fnstsw
in
push
icebp
and
jb
leave
jmp
cmc
and
in
xchg
mov
jl
mov
xchg
jne
paddq
xor
out
mov
jp
push
mov
dec
arpl
cwtl
arpl
fldenv
mov
filds
xor
push
mov
or
out
xchg
movsl
mov
mov
cltd
jo
cwtl
push
push
insl
xor
xor
xchg
jns
cmp
addb
xor
outsb
subb
xor
loop
xchg
aam
js
sti
dec
mov
sbb
imul
jae
dec
in
mov
fmuls
lock
push
jg
stc
lock
ja
cmp
add
insb
mov
add
push
sbb
sti
and
arpl
add
stos
xchg
and
shll
xchg
xor
mov
cwtl
dec
xor
decl
xor
pop
push
xor
shrl
mov
nop
outsb
mov
or
int3
mov
enter
testb
mov
sbb
je
test
dec
jl
aaa
lock
test
ja
sbb
or
addl
out
in
cld
movl
jge
addr16
leave
out
lock
loopne
or
cli
std
lods
subb
mov
pop
cmpsl
rorb
or
jecxz
pop
fiaddl
mov
cltd
mov
dec
dec
popf
push
bsr
jge
out
lock
inc
ja
je
inc
push
out
enter
or
and
enter
sbb
cmc
jmp
das
gs
aam
loopne
in
sub
pop
sbb
movsl
mov
mov
push
fs
adc
clc
dec
push
mov
popa
sbb
in
jmp
aam
jae
out
negl
adc
inc
repnz
pop
or
es
and
cmp
xchg
mov
in
xchg
lods
mov
sarb
add
mov
and
cmp
das
out
jle
mov
mov
sbbl
out
pop
and
sub
push
popa
out
in
js
outsb
or
das
mov
mov
dec
jp
cmp
pinsrw
hlt
mov
add
mov
das
addr16
insl
and
xchg
push
adc
mov
adcb
lahf
frstor
ljmp
push
dec
int
pop
or
jle
push
pop
scas
mov
sbb
mov
adc
xchg
imul
loope
pop
xlat
data16
inc
loope
sti
cmp
xchg
js,pn
lods
mov
sub
loopne
sub
in
leave
cmp
adc
cmp
dec
inc
pop
addr16
pop
xor
inc
sub
inc
xchg
sarl
push
daa
iret
and
clc
sahf
xchg
pop
xor
or
int
sub
stos
lret
mov
xlat
pop
mov
ret
or
ss
dec
sbb
imulb
sbb
or
and
push
mov
test
xchg
loopne
adc
pop
fbld
mov
addr16
jb
lret
add
jbe
jmp
jns
lret
mov
inc
loop
xor
cmpsb
roll
xchg
mov
or
in
cmp
out
inc
divl
cmp
sbbl
mov
mov
dec
sub
push
enter
inc
push
mov
add
je
sub
push
sub
jge
movsl
xor
or
nop
pop
mov
cli
xchg
lcall
jle
mov
scas
push
mov
fwait
aaa
sub
stc
cmpsl
pop
ja
jae
jge
fistpl
push
jae
jns
lahf
aaa
sub
or
jne
inc
or
jl
scas
fdivrl
cmc
ljmp
xchg
js
je
pop
sbb
in
lret
lcall
fstps
pusha
mov
mov
scas
gs
cli
push
movsb
cmpsl
push
sahf
xchg
icebp
xchg
insl
cld
sub
dec
xchg
add
add
mov
fisubs
cmp
std
inc
enter
sub
xor
xor
inc
insb
add
push
jae
mov
pop
imul
mov
mov
loopne
jge
das
mov
in
mov
xor
push
push
pop
sbb
fcomp
sbb
mov
sub
pop
mov
lods
aad
or
sbb
xchg
call
loopne
pop
xchg
test
jg
icebp
sbb
and
cmp
push
outsl
inc
out
and
xor
jge
jg
sub
mov
adc
dec
les
sbb
pop
xchg
in
loop
mov
cs
mov
xor
inc
loopne
mov
xchg
sub
test
jo
fidivl
stc
mov
pop
out
and
xorb
sub
and
pop
loope
mov
scas
scas
xor
adc
jb
imul
sbb
dec
cmp
fnstsw
insb
xorl
lods
push
insb
pop
push
jmp
je
pop
cmpsb
adc
stos
ja
mov
sbb
add
rcrl
pop
sbb
fwait
push
notb
clc
mov
sbb
cmp
xchg
sbb
movsb
dec
dec
repz
sub
jmp
fidivs
call
xor
xchg
sahf
mov
shll
fs
xor
cld
shll
pushf
xchg
sub
xchg
sbbl
jo
lcall
or
pop
test
mov
mov
stc
imul
push
pop
push
movsl
xchg
cld
rorb
fs
cli
xor
mov
cmp
into
pop
mov
inc
stos
mov
cli
xor
jbe
fisubrs
adc
cmp
inc
xchg
icebp
sub
hlt
es
sub
cmp
sub
in
jnp
subb
test
arpl
fcmovne
mov
adc
in
arpl
inc
push
loopne
mov
cmpsl
push
ss
cmpsb
cs
imul
sbb
nop
dec
or
testb
fildll
cmp
xlat
rcll
xor
dec
loop
pmaddwd
xchg
nopl
xlat
push
xchg
jmp
mov
ja
mov
ss
push
xor
cmpsb
test
data16
sub
sbb
lods
movsl
mov
lret
cmp
fyl2xp1
sub
fisttpll
xor
lahf
mov
sub
sub
mov
and
add
ljmp
ja
daa
xor
decl
fwait
daa
cmp
addb
inc
dec
pusha
mov
xchg
mov
into
in
jg
jge
mov
and
pop
pop
int
cli
ljmp
lret
je
jmp
shrl
sbb
fcomps
jbe
sub
add
sbb
push
mov
je
loope
push
rcr
in
pop
pop
dec
lret
shrb
xchg
jg
xor
adc
scas
std
movsl
cwtl
popa
mov
xor
sarl
jecxz
das
dec
sbb
sub
jb
lods
scas
aam
mov
push
icebp
sahf
adc
cld
add
andb
fdivrl
addr16
and
les
ljmp
adcb
js
dec
and
push
es
call
sbb
in
and
cmp
cltd
ja
mov
sbb
sbb
lcall
inc
in
and
rep
push
sbb
xchg
or
inc
sub
out
push
es
into
cwtl
or
leave
pop
std
cli
ret
fdivs
enter
js
adc
push
pop
je
cli
dec
xchg
fstpl
mov
cmp
clc
das
into
rcr
add
and
arpl
push
pop
mov
rorl
test
dec
cmpl
mov
pop
xchg
lods
cld
mul
out
sbb
nop
cmp
add
add
enter
pushf
pusha
imul
in
mov
fimull
mov
jne
inc
cmp
inc
cmc
sbb
fiaddl
popf
fnsave
push
mov
leave
mov
pop
push
pop
daa
lock
sbb
push
dec
xchg
mov
nop
sti
mov
out
xchg
dec
dec
pushf
pop
iret
and
pop
jl
shr
int
lods
xchg
push
push
outsl
pop
and
xor
mov
push
ja
imul
loopw
mov
xchg
cmpsb
mov
rolb
push
inc
jp
push
dec
ret
add
lock
cwtl
mov
fmul
mov
mov
dec
pop
test
pop
xor
test
dec
mov
xor
jecxz
push
jmp
rcrb
call
add
stos
icebp
in
sti
inc
mov
shrb
cmc
out
lods
fistl
addr16
sbb
adc
mov
sub
das
mov
jp
adc
adc
cmp
or
push
mov
ljmp
stc
mov
fdivl
outsl
adc
xchg
popa
or
jbe
adc
inc
mov
cli
movsb
mov
mov
ja
inc
cltd
fildl
mov
fdivr
sbb
push
jg
lods
dec
inc
pop
sti
cmp
in
mov
sbb
out
push
xchg
mul
xor
adc
scas
lods
sbb
xor
scas
push
imul
loopne
sub
and
sbb
add
pop
aaa
aaa
popa
xor
cwtl
imul
in
mov
cmp
idiv
mov
jg
pop
pop
xchg
mov
inc
popf
imul
mov
out
stos
mov
cmpsb
xchg
push
xchg
aaa
adc
push
sbb
enter
and
add
loop
int3
or
sbb
dec
add
out
in
xor
int3
filds
push
push
dec
mov
sahf
jmp
lods
mov
scas
fld
or
sbb
stos
jo
icebp
dec
jge
xor
adc
xchg
idivb
into
or
jnp
lret
test
lcall
dec
ljmp
loopne
subl
lock
xor
jg
jae
test
lahf
add
sub
inc
insl
dec
int3
jno
test
inc
inc
imulb
add
dec
or
jge
push
xchg
testb
lret
fistl
jae
jno
mov
adc
lahf
rorl
fstpt
inc
dec
sub
fisttps
sti
push
dec
aas
pushf
pushf
jbe
push
mov
test
mov
add
and
andb
cli
cmpsb
add
add
daa
pop
xchg
jge
call
mov
daa
mov
mov
mov
sub
pop
das
sub
xorb
dec
cmc
sub
cmp
dec
dec
mov
das
jmp
and
dec
or
xchg
sub
sahf
popa
lret
mov
adc
lcall
dec
sub
popa
mov
addr16
mov
imulb
das
stos
ss
or
fimuls
mov
lock
bound
je
std
xor
jmp
scas
pop
loop
pusha
mov
push
push
mov
ss
popa
pop
and
adc
enter
addl
addl
pusha
xlat
fstl
xchg
sbb
cmpl
stc
iret
jb
jbe
cmp
jecxz
js
ljmp
shr
incl
lods
jae
test
xchg
xlat
inc
inc
out
aaa
shrl
shrl
jecxz
repz
repz
pop
aas
sbb
adc
out
mov
jecxz
or
mov
push
pop
jne
shlb
add
stos
lret
aas
cmc
fbld
sbb
shrb
add
sub
hlt
enter
mov
sub
sbb
pop
adc
mov
jmp
cmp
push
mov
adc
mov
lcall
jmp
int3
cmp
mov
mov
jno
out
and
loopne
sub
push
and
or
leave
inc
scas
sub
xchg
rcl
clc
mov
test
xchg
jecxz
fildll
sub
cltd
ret
lret
psubq
jae
mov
inc
outsl
mov
adc
adcl
xor
cmp
fwait
ds
mov
sbb
pop
imul
jge
push
push
and
sbb
mov
pop
inc
packsswb
sub
cli
lret
xchg
rcrl
cmc
vpor
add
nop
pop
mov
mov
jne
gs
adc
filds
jo
sbbb
sbb
push
adc
inc
es
fmul
aaa
bound
add
xchg
das
sbb
sub
test
push
stc
cmpsb
jbe
xor
inc
lock
push
je
cld
das
xor
outsl
lret
jo
call
es
sub
inc
arpl
lds
inc
leave
xor
mov
pop
inc
cmp
mov
xchg
divb
repnz
movb
push
mov
xchg
test
bound
inc
dec
mov
jb
xchg
mov
sbb
push
mov
pop
aam
sahf
xchg
mov
pop
test
mov
mov
adc
add
xchg
xchg
push
insl
xor
dec
jno
nop
repz
mov
dec
mov
mov
sub
push
stos
jmp
aad
adc
mov
ret
ja
add
pop
xlat
cmp
jge
fildl
sub
fistpl
jbe
xchg
or
adc
pusha
xor
and
mov
or
mov
xchg
mov
push
fldcw
and
cld
mov
ja
pop
pushf
push
aam
movsb
mov
movsl
aad
jecxz
test
inc
cmc
ds
test
dec
xor
fdivl
mov
lret
cmpsl
mov
in
pop
push
mov
int
lods
js
push
fnstcw
lods
js
jb
pop
fxam
xchg
cs
mov
lret
xor
enter
imul
jns
pop
jmp
and
lcall
mov
push
ja
rorb
mov
add
aas
cmp
je
push
sbb
push
jg
and
jge
divl
cmp
movsb
inc
sbb
push
test
push
stc
fs
sbb
fst
add
gs
lock
unpckhps
or
imul
pop
shrb
mov
adc
in
test
icebp
aam
push
or
inc
mov
inc
icebp
mov
jg
std
sbb
xchg
lods
jns
jns
std
dec
lcall
mov
fsub
cmpsb
shll
mov
jae
out
pop
sarb
add
xchg
pop
popf
push
outsb
mov
add
lahf
sbb
je
mov
arpl
lods
rorl
mov
loop
cmp
es
je
stos
and
filds
cmp
cmc
sbb
mov
mov
push
divl
jmp
jp
pushf
insl
enter
inc
outsl
sub
hlt
pop
loope
adc
or
xor
jl
out
scas
outsb
jb
add
inc
cmc
adc
test
xor
fistps
jbe
repz
insb
dec
sub
je
push
ret
push
adc
dec
jg
and
cld
jns
mov
jns
xchg
push
test
add
mov
icebp
adcl
daa
dec
mov
call
mov
jg
rep
xlat
std
jg
icebp
je
push
or
int3
outsl
sub
or
xor
sbb
jmp
aad
mov
pushf
sahf
int
add
mov
in
rolb
aaa
cmpsw
xor
mov
jb
or
xchg
ss
pop
add
int
inc
pop
and
cmp
cmp
les
iret
idivb
bound
loop
adcl
repz
and
adc
out
in
ss
jae
xchg
push
sbb
lock
call
mov
insl
pop
mov
dec
or
movsb
lods
push
inc
jle
scas
test
bound
insb
jle
lahf
leave
rorb
sub
in
push
cmp
hlt
dec
into
push
out
mov
fdivs
imul
lcall
lds
push
out
mov
push
sbb
call
test
push
addr16
jbe
ret
mov
pop
jns
pextrw
scas
sub
add
ljmp
outsl
dec
adc
adc
dec
lds
push
mov
les
xor
and
cmp
xor
ds
inc
cmp
aam
out
push
cmp
mov
cltd
inc
dec
dec
inc
xchg
mov
sub
adc
add
push
jmp
out
fs
adc
pop
xor
add
or
movsb
add
into
mov
xor
or
je
test
insl
add
pop
mov
gs
out
lcall
aam
fmul
bnd
and
popa
jns
pop
mov
fs
lods
addr16
ja
adc
sbb
out
mov
jnp
jb
dec
shr
popa
sbb
push
mov
repnz
pop
je
cld
or
jns
std
movl
or
mov
jle
cltd
and
adc
or
pop
inc
lods
stos
push
repz
insb
push
shrb
mov
inc
addr16
bound
icebp
fldlg2
xor
mov
mov
imul
rclb
imul
mov
dec
pop
pop
ja
jge
roll
gs
dec
dec
mov
and
cmp
cli
pop
jecxz
adc
jp
shll
cwtl
sub
mov
push
xchg
loop
insl
sbb
cmp
data16
int
cltd
scas
mov
jl
lret
fnsave
rorl
sub
pop
xchg
vmread
xchg
mov
dec
icebp
push
add
push
inc
in
sub
movsl
daa
mov
dec
in
mov
icebp
cmc
pushf
ret
fwait
xlat
cs
in
pop
jns
lds
imul
xor
std
jno
push
sahf
in
mov
imul
jp
rcrb
fldpi
cld
hlt
sti
sub
mov
jns
sti
cmp
jp
xchg
les
cmc
mov
aas
sub
pop
push
fucomi
lods
xchg
mov
dec
inc
dec
mov
rol
sub
add
ljmp
hlt
jno
sti
xor
mov
mov
fldz
pop
popa
mov
xlat
push
loopne
pop
out
das
xor
scas
cld
imul
dec
or
inc
in
mov
adc
cli
mov
xchg
pop
jp
jno
cmp
rorb
divl
sbb
sub
cmp
pop
lods
mov
jl
xor
xchg
movsb
jecxz
push
mov
mov
pop
call
mov
lahf
and
mov
pop
mov
loope
push
inc
cmp
mov
cmpsb
jecxz
sbb
add
insl
jp
ret
sub
or
addr16
mov
movsb
cmp
cmp
sbb
stc
add
ret
cmpsb
dec
test
aaa
mov
push
lods
dec
jge
mov
lret
adc
pop
and
test
scas
push
ja
and
adc
pop
push
pop
cltd
aam
add
mov
xlat
sub
and
nop
jg
cwtl
sub
jns
cltd
xchg
adc
gs
sub
in
pusha
xor
mov
sub
outsl
int3
rorb
imul
push
fildl
into
loop
sub
loopne
cli
inc
jo
int3
lret
enter
ror
imul
jno
jo
inc
fadd
xlat
and
inc
ja
pop
or
iret
push
mov
testl
cld
push
jecxz
add
int
js
sahf
in
popf
fdivp
movsl
mov
sub
rep
mov
jg
es
jmp
decl
adc
sbb
filds
adcb
mov
and
or
iret
shll
std
das
mov
stos
add
jp
lds
pop
int
test
cmp
inc
fnstenv
mov
test
inc
pop
cs
test
push
dec
inc
repz
stc
insb
dec
xor
jno
xchg
mov
jl
loop
cwtl
push
cmp
lods
jge
push
or
jns
add
xor
rorb
inc
adc
lods
or
cs
add
cmc
jno
and
add
inc
sub
jb
dec
push
je
sbb
mov
sub
push
fdivrs
jp
pop
xor
test
xchg
pop
aam
sbb
mov
sahf
cltd
rcl
mov
addr16
fsubrl
adc
or
mov
xchg
popf
and
and
push
andb
aaa
lods
mov
and
push
nop
xchg
leave
movsl
push
out
xchg
mov
push
andl
and
adc
fdivs
int3
adc
mov
sub
inc
mov
adc
shrl
scas
mov
sar
pop
inc
in
mov
mov
pop
repz
rcll
repz
std
sbb
inc
mov
xlat
xor
cs
jae
add
ss
cmpsb
loopne
popa
imul
adcb
jns
add
dec
cmp
inc
adc
pop
call
imul
loopne
xchg
bound
movsbl
in
popf
mov
testl
js
int3
xor
orb
or
test
add
push
popf
in
js
fadd
rorb
push
call
movsl
cmp
lea
or
adc
imul
fistpl
pop
pushf
xchg
cmp
or
test
stos
loopne
int3
inc
call
sbb
mov
xor
xor
lods
push
cld
xor
push
dec
aad
test
mov
in
fisubl
sbb
mov
std
fcmovnu
mov
hlt
loop
fnstcw
xchg
jb
jo
pop
pop
xor
jnp
loope
movsb
addb
jle
js
lock
clc
mov
jmp
add
popa
int
cwtl
test
dec
adc
fmuls
sub
dec
jge
mov
imul
cmp
inc
aad
push
dec
mov
and
pusha
and
aas
addr16
pop
out
popa
out
scas
mov
push
cli
jb
xchg
lods
test
add
iret
jecxz
mov
cmpsb
mov
mov
sti
hlt
aaa
popa
push
fwait
shll
adc
ja
test
jge
cld
cmp
stos
xlat
ljmp
cmp
pop
das
jbe
add
adc
js
aam
shl
mov
cltd
or
lahf
int
pop
lahf
xchg
cmp
push
std
leave
cmpsl
mov
mov
rorb
lods
jae
test
lock
xor
imul
jmp
dec
test
js
push
jmp
add
lds
adc
lahf
push
outsb
inc
loope
push
ja
push
dec
jl
jge
rcl
sbb
stos
sub
mov
adcl
inc
sub
mov
int
dec
jns
nopl
adc
imul
in
arpl
data16
xchg
aas
jge
adc
out
cmp
mov
lahf
mov
xor
cmp
dec
mov
sti
mov
xor
movsl
push
mov
sarb
add
shrl
repnz
pop
push
out
mov
icebp
xlat
in
pop
sbb
mov
outsl
in
inc
mov
aaa
popa
fldt
shll
outsb
mov
inc
dec
fiadds
dec
adcb
pop
adc
adc
outsl
dec
iret
enterw
and
sahf
xchg
dec
add
leave
cmpsb
mov
cmp
add
add
mov
dec
scas
xor
testb
sahf
lds
push
int
mov
scas
test
cltd
cmp
add
aas
inc
and
test
sub
imul
orl
mov
in
jb
test
jo
or
dec
jbe
sbb
imul
push
mov
pop
mov
jnp
jae
loopne
inc
sbb
xor
lcall
inc
sub
movsl
cld
dec
lea
push
js
int3
fwait
sbb
jl
dec
xor
mov
sub
xor
mov
iret
arpl
scas
xor
cmp
dec
lock
daa
fistps
add
rorl
and
aaa
push
mov
push
hlt
subl
outsl
sbb
adc
sbb
mov
dec
cmp
mov
mov
adc
cmpsb
and
mov
cmpsb
sbb
jmp
sbb
inc
orl
mov
mov
fisttpll
outsb
idivl
sub
push
loop
in
aad
xchg
out
std
sbb
sbb
adc
xchg
je
dec
fdivl
das
movsb
pop
mov
hlt
leavew
add
pop
fdivrs
stos
loop
add
inc
inc
icebp
pop
fwait
imul
in
or
adc
sbb
cwtl
lret
pop
xor
fisttpll
sbb
and
push
mov
mov
repnz
stos
inc
mov
sarb
mov
out
loop
mov
push
fldt
mov
pop
int
ret
jnp
add
jl
push
scas
in
dec
xor
stos
out
and
pop
xor
or
cmpsb
mov
icebp
fwait
and
push
int
sar
pop
inc
cs
repnz
jae
dec
mov
push
loop
rolb
popa
and
ror
idivl
addr16
jecxz
js
das
dec
into
je
rorl
pop
and
lock
std
sbb
or
icebp
outsl
cltd
mov
fmull
dec
cmp
loopne
pcmpgtw
add
insb
xor
push
test
lock
push
cltd
mov
jbe
adc
add
adc
mov
ficoml
lea
dec
or
jbe
sub
shl
and
ffreep
and
adc
xchg
jno
in
dec
mov
or
in
cmpsb
cmc
mov
sub
popa
push
mov
sub
pop
pop
mov
cmpsb
adc
jle
mov
mov
push
cmpsl
test
into
nop
mov
cmpsl
adc
xor
and
addr16
xor
mov
jne
clc
cli
fcoms
das
adc
adc
and
shlw
pop
loopnew
lea
mov
out
push
test
cli
jge
push
lea
push
mov
push
ret
cmc
subl
mov
orb
ficomps
and
push
lock
jle
popa
jg
mov
inc
push
mov
idivb
dec
dec
mov
pop
aaa
or
ret
imul
movsb
mov
addb
xchg
jl
ror
add
sbbl
mov
xchg
test
inc
rol
orl
jge
mov
jge
and
dec
cmp
pop
sahf
lcall
stc
push
sub
leave
adc
pushw
push
adcl
pop
add
stos
cli
lods
push
test
pushf
mov
sub
dec
in
std
ret
sbb
ret
jmp
lods
push
insb
jo,pn
pop
les
mov
pusha
jg
insb
or
adc
mov
adc
je
out
or
cs
loope
jge
arpl
das
arpl
into
fstps
xchg
inc
xchg
repnz
cmpsl
orb
push
popa
adcl
jecxz
add
sbb
jae
dec
popa
les
sub
dec
jl
js
add
dec
mov
in
adc
push
repnz
push
aas
dec
repz
es
cli
das
shll
ss
push
jae
out
and
jne
inc
mov
fdivl
add
cwtl
jbe
adc
daa
decl
jecxz
int
fistps
mov
das
jns
mov
add
dec
repz
filds
scas
xor
out
ja
cmp
repz
dec
push
inc
pop
mov
mov
outsb
and
divb
cmp
xor
dec
xor
xchg
xchg
push
mov
sbbb
cmp
inc
mov
into
imul
cwtl
pop
add
arpl
inc
into
outsl
lods
sub
scas
sbb
ljmp
push
or
and
sbb
sub
fidivrs
push
push
repz
lock
inc
push
push
sahf
xchg
cmp
sahf
xor
in
mov
sub
jae
dec
add
push
mov
pop
and
repz
mov
inc
mov
dec
subb
and
jmp
lret
out
iret
mul
mov
pop
cmpsl
shl
or
out
leave
cs
xchg
inc
paddsw
xor
push
mov
mov
ret
test
and
js
aad
lret
dec
arpl
lea
out
dec
pop
jl
push
mov
mov
stc
sbb
push
xchg
xchg
or
in
mov
hlt
or
sbb
les
into
sub
mov
add
stos
pop
push
dec
ret
or
mov
lods
es
sub
push
repnz
enter
aaa
popa
in
test
inc
lods
xchg
cmc
mov
outsb
jb
sbb
leave
cmp
mov
test
ficoms
xchg
add
dec
adc
movb
movaps
pushf
jae
and
xlat
mov
jno
mov
cmpsl
or
imull
mov
push
mov
inc
mov
dec
lock
testl
cmp
pop
outsl
and
jp
lock
scas
int
jl
adc
xchg
insb
loop
cli
aas
mov
int
pop
js
mov
adc
mov
xchg
mov
pop
clc
mov
shl
pop
mov
inc
adc
lcall
lcall
pop
lock
xchg
in
mov
fists
or
outsl
je
mov
outsb
sub
jnp
addr16
mov
nop
addr16
mov
inc
loopne
jo
out
pop
or
js
push
data16
mov
test
push
stos
jmp
stos
or
sbb
pop
cmp
adc
mov
mov
add
cmp
in
mov
push
out
add
test
jl
push
test
sets
pusha
mov
and
sbb
adc
jle
push
pop
inc
sub
jno
mov
push
xchg
das
movsb
or
shlb
mov
jecxz
xchg
push
cmp
loope
mov
jns
and
mov
lret
ret
cli
mov
xchg
test
mov
mov
mov
sbbb
or
push
popa
popa
ret
or
pop
mov
icebp
jns
ja
lods
mov
mov
fisttps
adc
fbld
outsb
sti
add
fs
les
repnz
lret
movsl
xchg
or
cmp
and
cmp
sbb
imul
shll
mov
ja
leave
sbb
inc
dec
add
cmc
roll
out
xchg
das
popf
sbb
lods
fwait
outsl
dec
or
or
arpl
inc
pop
ret
in
dec
push
push
in
mov
inc
data16
addb
call
or
adc
mov
adc
cmc
loope,pt
subb
jnp
repz
in
push
sbb
xor
and
loope
and
or
pop
inc
jno
mov
sti
xchg
arpl
or
ljmp
and
pop
fldl
loop
sub
fdivr
mov
cmp
in
test
mov
cli
pop
or
out
inc
mov
or
fdivr
loopne
mov
xchg
lea
gs
mov
rol
fs
ret
dec
jp
mov
je
jmp
add
lea
dec
divb
adc
cmp
scas
cmp
ljmp
push
or
fxch
cmp
add
movsl
into
leave
pop
or
fld
push
es
jns
push
pop
outsb
jbe
push
popa
fnstcw
into
jmp
sbbb
dec
dec
sub
and
loop
test
je
inc
nop
push
rcll
dec
adc
enter
add
mov
jbe
nop
mov
stos
movsb
and
push
xchg
ror
pop
mov
cs
lea
loop
add
sahf
add
xor
out
and
inc
cmp
mov
movsl
loop
sbb
jecxz
gs
aas
and
das
stos
mov
or
jp
xchg
mov
xor
inc
rolb
aas
je
add
out
push
fisubl
sbb
into
test
lock
jae
inc
ret
loop
data16
mov
xchg
adc
sub
std
das
adc
out
sbb
mov
rolb
pop
addr16
data16
pusha
dec
mov
inc
in
dec
leave
loop
add
sarl
movsl
adc
cltd
add
mov
les
xchg
jbe
repz
and
pop
add
adc
sbb
lret
divl
subl
andb
mov
inc
mov
cmp
mov
in
xor
cld
int3
loop
rcrb
cmp
inc
aad
insl
test
call
test
loop
xor
dec
push
scas
cmc
ret
mov
fucomp
jmp
test
mov
shlb
loopne
jns
popf
test
push
pop
shll
repz
subb
push
sub
lahf
add
ljmp
mov
push
push
dec
ljmp
pop
cwtl
push
jmp
and
sbb
mov
nop
rclb
movsb
ret
mov
scas
aas
test
jbe
fsubs
out
push
or
stc
dec
pop
or
inc
lods
fsts
js
pop
or
out
cmc
ror
mov
ret
cmpsl
pop
sbb
or
xor
push
xchg
pop
push
sub
mov
stc
or
sbb
rep
pushf
popa
mov
cmc
push
popa
add
ss
lods
pop
sbb
test
rol
add
jp
divb
lds
adc
push
sarl
adc
push
or
movsb
leave
push
sbb
lods
mov
push
jg
leave
or
push
mov
sti
push
mov
pop
bound
cltd
iret
int3
in
dec
adc
je
adc
test
ss
dec
dec
mov
out
inc
mov
and
fs
outsl
enter
sbb
lea
mov
mov
call
adc
stos
or
js
push
and
repz
xchg
mov
in
adc
inc
mov
iret
push
cmp
sub
mov
adc
sti
cmp
xor
mov
sub
sub
xchg
lock
mov
outsb
jg
std
leave
mov
xor
out
sti
add
inc
call
sbb
enter
lods
mov
ljmp
xchg
add
imul
lahf
mov
pop
jae
cli
mov
lret
iret
rcr
sub
dec
in
iret
inc
negl
arpl
fildll
rcrb
in
shrl
sarl
fisttpl
inc
fs
cmpsb
aam
in
ficomps
gs
sub
cmpsb
or
movsb
cmp
sub
sub
iret
fwait
inc
xchg
mov
mov
sbb
daa
aam
das
popa
sub
in
inc
jge
dec
or
vpxor
cmp
mov
fdivl
mov
xor
ret
sub
pushl
loope
ficompl
sbb
fildll
filds
or
inc
sbb
and
push
cmp
insl
pop
pop
mov
sub
or
pop
mov
ficompl
and
adc
and
or
sahf
xchg
int3
andb
xor
inc
sub
dec
cmp
mov
push
or
mov
and
dec
in
mov
test
int
ja
hlt
cwtl
xor
mov
mov
loope
add
movsb
cmp
fsts
inc
push
ret
stos
jg
je
mov
ljmp
mov
fs
imul
es
mov
dec
or
inc
xor
and
enter
in
int3
mov
jne
pop
fs
sar
jbe
nop
and
xchg
mov
cmp
iret
rcrl
inc
inc
sub
mov
in
fisttpl
rorl
push
mov
xchg
xchg
push
sbb
xchg
fildll
jge
lret
push
loop
push
sbb
push
fistps
adc
repnz
inc
das
mov
dec
lock
pop
gs
xchg
mov
cltd
sti
enter
dec
inc
flds
dec
movsl
pop
dec
dec
in
sbb
fnstcw
inc
insb
pop
fisttpll
out
push
test
sub
lret
jns
or
push
imulb
cli
loopne
jnp
repnz
test
pop
aam
push
jno
pop
ret
shrl
adc
jns
int3
out
xchg
sbb
sbb
repz
fsubr
jp
cs
jo
ret
adc
ljmp
mov
dec
aad
adc
mov
out
mov
push
fdivl
push
mov
and
xchg
loope
cmpl
pop
dec
sbb
inc
push
mov
in
push
inc
add
or
push
mov
sti
sti
in
cmp
pop
mov
loope
fcmovne
pop
adc
mov
insb
mov
mov
sub
inc
or
and
mov
lea
cmp
pop
adc
inc
push
rorl
cmp
adc
jmp
add
fs
fidivrl
orl
pop
adc
mov
xchg
jp
imul
sub
test
js
mov
outsb
jbe
ljmp
lret
mov
je
sbb
or
xor
out
or
mov
in
jne
lock
jae
xchg
and
sbb
sahf
cmp
xor
iret
dec
test
lea
cs
or
fisubl
mov
xchg
aaa
sub
lcall
es
imul
loopne
js
inc
xchg
cmp
or
pop
xor
leave
inc
jbe
xchg
mov
inc
int
push
mulb
jno
movsb
movsl
lahf
outsl
push
sbb
fistpl
push
pushf
mov
jne
inc
push
xchg
bound
outsl
imul
dec
in
std
sbb
mov
rorb
push
in
pop
push
popf
mov
sbb
in
hlt
inc
jno
pop
cmc
movl
aaa
jp
ret
mov
jge
es
jne
jno
mov
imul
and
sar
cmp
loopne
mov
lret
nop
shl
or
cmpl
in
or
sbbl
mov
out
add
pop
and
scas
dec
pcmpgtw
test
addl
add
aad
pop
je
rcrb
in
cmpsl
fs
jle
ljmp
or
cmp
inc
push
jnp
push
ficomps
push
stos
and
or
dec
lods
fs
jae
movl
sbb
add
jae
fnstenv
xchg
add
shl
xchg
in
xchg
pop
js
xor
dec
sbb
xorl
adc
shr
mov
mov
mov
mov
nop
xlat
and
sub
dec
and
and
nop
ret
arpl
ret
or
xor
outsb
mov
outsl
jmp
pop
leave
xor
fs
mov
inc
outsb
jg
sub
or
or
fmul
or
cmp
out
daa
cli
jne
xchg
pop
push
pop
dec
xchg
inc
or
xor
dec
jnp
cmpsl
xchg
movsb
add
cmp
push
out
push
cmp
dec
jae
test
addr16
jg
push
outsb
sbb
add
pushf
jmp
adc
push
adc
gs
jl
pop
imul
scas
imul
xchg
jae
inc
movsl
jo
inc
daa
cmp
mov
dec
insl
loope,pt
jmp
sub
imul
or
in
or
iret
jne
pop
imul
push
sbb
ss
leave
add
pop
mov
jb
fwait
dec
out
vphaddbw
addr16
inc
addr16
dec
sub
daa
push
pop
inc
add
sbb
adc
aam
sub
lock
cld
xchg
addb
cwtl
lcall
leave
jne
js
adc
jbe
push
call
insl
fwait
jb
fsubr
aaa
outsb
fwait
std
in
xchg
jle
sti
insb
push
into
xchg
stc
ja
fisttpl
nop
loopne
stos
in
xchg
repnz
fldenv
gs
gs
stc
inc
adc
mov
je
pop
repz
pop
and
int3
daa
adc
jmp
rol
fidivrl
jne
mov
iret
nop
push
xchg
mov
lods
ljmp
cli
mov
cmp
loope
jo
pop
add
testl
sahf
enter
xor
xchg
xchg
dec
or
nop
push
mov
test
xor
imul
fstpl
or
popf
add
movsb
mov
mov
jnp
out
adc
int3
sub
addr16
inc
shlb
cmpsl
pop
and
rcrb
xadd
das
mov
test
stc
arpl
dec
ljmp
add
notb
inc
fisubs
lcall
mov
adc
pop
cltd
imul
add
std
add
hlt
xlat
lcall
popa
data16
mov
jno
fistpl
jecxz
cmp
mov
jo
mov
test
das
pop
mov
sbb
mov
cmpsb
cltd
cmc
test
adc
mov
and
insl
jge
jo
sub
xor
out
add
aaa
push
mov
lret
mov
cmp
hlt
ret
in
call
leave
mov
dec
aam
push
mov
mov
aad
stos
movsl
les
or
mov
mov
cltd
sub
addr16
insl
push
ljmp
mov
mov
popa
push
insb
xchg
mov
into
sbb
mov
mov
mov
pusha
sti
aam
gs
mov
mov
adc
cmc
fs
or
xchg
rorl
xlat
dec
ljmp
push
test
sti
push
or
and
rcrb
or
fdiv
insl
and
dec
mov
lret
loope
daa
mov
pusha
dec
add
and
in
adcl
mov
out
jmp
mov
push
cmp
pop
mov
sbb
adc
dec
int3
sbb
lea
sbb
push
jl
stos
xor
lds
sub
push
and
stc
mov
ss
out
add
and
sbb
add
clc
dec
xchg
dec
imul
sbb
pop
cld
scas
mov
cmpsl
push
je
imul
test
mov
fdivrs
mov
out
lahf
xor
mov
inc
loopne
sbb
mov
mov
mov
pop
lods
adc
push
fstpl
lret
loope
mov
cli
imulb
into
mov
mov
mov
lret
mov
cmp
pushf
ja
and
pushf
ret
ljmp
inc
push
cmpsl
sub
inc
push
insb
inc
clc
loope
push
popf
cltd
push
adc
test
or
lcall
jge
xchg
popa
add
xor
mov
sbb
fdivrp
add
mov
jbe
das
inc
mov
rclb
adc
jge
and
dec
rorb
int3
push
sub
jo
shlb
push
lret
dec
xchg
xor
insl
cwtl
dec
adc
sbb
ret
in
mov
cmp
out
hlt
sub
pop
test
mov
and
cmp
lock
pop
xchg
lahf
xchg
mov
inc
lret
rcll
sbb
sbb
xchg
jge
push
pop
fsubs
lock
fistpl
scas
pop
add
xor
adcl
sbb
bound
lcall
and
pop
push
push
jl
loopne
arpl
xor
dec
sbb
dec
pop
clc
fnstsw
arpl
pop
popf
imul
lock
in
movsl
inc
mov
push
idiv
cmp
stos
push
fstpt
in
pop
test
out
mov
dec
ds
or
dec
call
lods
int3
gs
pop
ret
outsl
shrb
je
jl
aad
pop
das
mov
ret
jg
pop
imull
push
or
adc
idivb
in
jno
inc
aad
adc
std
and
mov
cmpsb
dec
aam
inc
add
cmpsb
mov
mov
jecxz
inc
fs
sahf
js
leave
insb
dec
sbb
jge
adc
xor
loop
cmp
lods
xchg
fsubl
ja
mov
clc
jo
ficoml
dec
das
or
or
insl
dec
fidivrs
xchg
fildll
inc
daa
cmp
les
mov
jo
pop
test
jnp
push
rcl
pop
cmp
std
inc
cmp
icebp
push
ficompl
and
and
clc
incb
or
mov
in
fwait
xchg
cmp
sub
ret
loope
xchg
mov
jmp
push
cld
sahf
push
cli
push
xor
in
je
movsb
sbb
fisttpl
or
mov
lds
pop
fbstp
in
lock
ja
pop
mov
add
stos
fistl
mov
mov
mov
mov
out
mov
jae
cmpsl
jnp
jle
les
sub
ret
cmpsl
scas
mov
mov
fidivrs
sbb
dec
dec
out
jmp
mov
cmp
inc
in
cltd
push
jnp
in
pusha
arpl
dec
clc
add
jg
cmc
inc
pop
mov
jg
jmp
adc
mov
cmp
es
sub
nop
ja
mov
cmc
or
bound
imul
mov
imul
dec
loopne
pop
in
add
arpl
dec
mov
xchg
into
daa
int
dec
stc
jb
lahf
cmpsl
sub
push
shll
arpl
loopne
mov
dec
cmp
dec
imul
scas
sbb
add
xor
out
shrl
imul
push
and
mov
lds
cmp
ret
add
aaa
lret
adc
in
iret
xor
shlb
andl
or
lods
test
aaa
jp
mov
dec
ret
add
cwtl
out
mov
jnp
xchg
leave
arpl
add
lock
adcb
xor
jns
gs
cmp
enter
rclb
jg
mov
xchg
repnz
push
xchg
fcmove
xchg
xchg
jo
sbb
lds
push
jg
sub
addb
cmc
lds
pop
xchg
xchg
sahf
mov
addl
xor
cld
lods
in
or
inc
lods
rol
movl
and
icebp
jne
test
mov
sub
int3
inc
and
xchg
ret
xor
data16
pop
mov
cwtl
jg
jecxz
or
lock
div
test
sub
je
je
mov
jmp
jae
ss
js
in
sub
lret
stos
push
mov
xchg
pop
arpl
lea
in
mov
sar
or
jns
rorl
jae
daa
jo
mov
mov
fxam
push
sub
push
shrb
and
sub
pop
add
and
sub
out
or
sub
idivw
xor
scas
pop
stc
mov
inc
repz
mov
sub
lods
ret
popf
mov
pop
insl
jne
not
mov
stc
xlat
adcb
fmuls
repnz
push
hlt
enter
scas
cmp
adc
mov
test
or
addr16
cltd
dec
pop
test
inc
xchg
add
xor
jo
sbb
cmpsb
in
xchg
or
mull
popa
cmp
lea
lret
sti
mov
or
jns
cmc
rcl
mov
push
rorl
repz
inc
and
mov
in
in
xor
dec
jb
test
mov
fwait
sub
mov
or
nop
daa
nop
aaa
pop
lret
cmp
cs
xchg
xchg
or
cmpsl
cmpsl
ljmp
push
arpl
sub
and
ror
test
sbb
adc
cs
lods
inc
cmp
ja
push
dec
xchg
outsl
out
adc
fistl
out
xchg
push
cmc
cmp
lods
push
ds
lcall
mov
jge
add
mov
enter
cltd
js
add
and
or
push
dec
xlat
mov
push
loopne
push
popf
pusha
in
repnz
dec
out
lock
and
xor
sbb
mov
and
lea
ss
sub
shl
pop
icebp
inc
cmp
and
xchg
imulb
call
xor
popf
repz
mov
repz
rol
out
dec
loopne
add
sti
sti
in
into
pop
or
sahf
repnz
dec
jl
push
add
mov
pop
jp
and
cs
andb
mov
and
cmp
rcll
idivb
mov
mov
mov
movsl
cltd
aaa
and
adc
jecxz
arpl
cmc
negb
in
arpl
sbb
or
xchg
mov
scas
sti
fs
sbb
and
aaa
cmp
dec
xor
cmpsb
jmp
or
fidivrs
sbb
sub
inc
popa
inc
xor
loopne
pop
pop
jg
inc
inc
data16
push
pop
dec
adc
fxch
leave
xor
fucomi
test
stc
push
pop
fldl
stos
lret
call
mov
xor
xor
mov
add
mov
stos
fstpl
jae
lock
add
or
add
jge
pop
inc
mov
cmp
sub
movsl
in
ss
sub
xor
mov
adc
sub
cmp
adc
dec
dec
mov
cmp
jno
jecxz
jl
or
aam
aam
popf
shlb
fsub
push
sahf
xchg
arpl
call
or
mov
int3
cli
pop
inc
cmpsl
xor
mov
cmc
movl
mov
in
fidivrl
pop
cmp
loope
push
psllq
loopne
inc
iret
movsl
push
push
pop
les
and
cmp
mov
dec
test
xchg
sub
stos
add
bound
xabort
mov
sbb
or
arpl
and
pop
outsl
xchg
fwait
and
out
cwtl
popf
xor
hlt
inc
xchg
push
mov
dec
outsb
cmp
dec
js
xor
mov
or
dec
aaa
add
xlat
outsb
cmc
cli
ja
sub
pop
in
jbe
jecxz
into
sub
pop
aam
fcmovbe
negb
mov
lcall
aas
daa
ret
aas
lcall
int3
sahf
je
sub
sahf
push
cmp
cmp
mov
jne
xchg
xchg
mov
sub
pushf
dec
jbe
roll
adcb
lods
aaa
fs
xor
sbb
xor
sbb
pop
ffree
insl
test
movsl
lods
fisubrl
test
jne
mov
adc
cmp
sbb
sub
nop
jecxz
fcoms
jecxz
enter
xchg
mov
sbb
xor
pop
test
inc
cmpsb
rcrb
cmpsb
and
cli
jbe
mov
mov
ret
or
ja
je
imulb
in
mov
or
sti
shl
subb
adc
pop
repnz
pop
int3
push
sbb
mov
sbb
ficompl
pusha
hlt
loop
xor
fnstenv
mov
jle
xchg
push
cld
les
gs
xchg
andl
push
rcr
and
sahf
push
sub
jmp
jecxz
stos
cltd
roll
mov
and
lahf
mov
xchg
push
pop
mov
push
jae
insl
mov
dec
sub
popf
sbb
xor
push
xchg
sub
xor
setge
es
mov
jge
cmpsb
aam
xor
repz
mov
sar
out
ljmp
or
cs
sbb
mov
sbb
fisttpll
mov
jecxz
cs
inc
std
mov
mov
jns
cmpsb
xor
dec
loop
add
and
push
shlb
xchg
lock
xor
mov
out
and
fwait
andb
daa
xchg
pop
push
inc
mov
ror
cmpsb
popa
fisttpl
adcb
xchg
xchg
pop
mov
jb
jno
mov
sub
pop
lds
loopne
dec
jo
ds
or
rcrl
dec
mov
lods
and
ds
lea
or
mov
or
into
mov
cwtl
jnp
lock
pushf
xchg
and
stos
cmp
stos
outsl
jns
rolb
mov
mov
and
inc
aaa
stos
xchg
out
shrl
divb
cmpsl
mov
negl
imul
jnp
jnp
out
cmp
xchg
mov
pop
sti
std
in
xlat
sbb
loopne
mov
cmp
xor
dec
aaa
repz
test
add
cmp
pop
test
bound
inc
dec
dec
mov
out
xchg
mov
lret
pop
sub
pop
out
push
mov
popa
xor
mov
dec
inc
push
movsb
popa
pop
mov
sub
push
movsl
pop
pop
xchg
pop
push
dec
push
pop
sub
lods
cmp
sub
pop
cmp
inc
jmp
lea
jl
pop
shrb
daa
mov
sbb
adc
mov
dec
daa
data16
mov
dec
shlb
xchg
inc
adc
ja
pusha
mov
mov
shrl
fwait
aam
cli
pop
ret
sub
fwait
mov
pop
jge
pop
jbe
mov
das
outsl
call
jg
clc
jp
jne
push
xchg
xchg
into
es
test
movsl
dec
outsl
push
pop
sub
push
sub
sub
fildll
inc
daa
mov
aad
in
jnp
in
pop
stc
cmp
adc
and
push
mov
aaa
xchg
sbb
icebp
das
shrb
or
mov
pop
xchg
das
dec
push
cmp
add
dec
jno
mov
dec
mov
jb
inc
loopne
dec
or
and
or
test
push
movhps
fcmovnbe
push
ret
push
dec
daa
mov
lods
adc
adc
rorb
jg
fnsetpm(287
push
mov
pusha
adc
xor
jno
xchg
ret
and
mov
movsl
sub
test
xor
lods
aas
cld
fildl
dec
div
adc
movsl
mov
and
mov
adc
bound
mov
push
movsl
insb
lods
lock
cwtl
int3
int
dec
icebp
pop
icebp
pushf
outsb
inc
pop
xchg
or
and
cwtl
inc
and
es
rclb
jle
out
popf
xchg
scas
dec
and
mov
push
mov
add
jmp
push
std
pop
mov
js
inc
nop
or
fisubrs
ret
pop
cltd
dec
jns
cld
ss
stos
movsl
and
insb
ret
mov
nop
dec
test
mov
outsl
inc
pushf
in
push
jo
or
leave
test
add
outsb
push
fdivl
aad
dec
mov
popf
and
imul
mov
pop
in
test
pop
inc
lret
repz
out
ljmp
mov
loopne
pop
loope
cmp
movsl
outsl
cmp
lret
cmp
sbb
jge
push
xor
lods
push
xchg
push
aad
add
dec
push
jg
lret
out
pushf
mov
mov
xchg
mov
mov
clc
in
xchg
fucomi
jns
in
adc
mov
or
xor
xor
leave
adcb
ficompl
sbb
outsb
sbb
sahf
mov
in
lea
inc
test
push
scas
mov
jae
cmp
xchg
imul
pop
xchg
orb
out
sub
test
adc
jecxz
shlb
ds
stos
movsl
data16
push
pop
push
rcl
lea
lods
int3
add
fisttps
add
fxch
shll
sbb
jge
mov
testb
rclb
rcll
pop
cmp
ficompl
stos
jbe
push
xor
aam
lcall
xchg
xchg
jmp
lods
xor
mov
adc
xlat
imul
movsl
sub
into
push
and
dec
add
repz
and
jnp
lret
dec
dec
nop
popa
cmp
cmpsb
pop
pop
fwait
mov
push
jo
test
adc
lret
test
scas
ficoms
into
or
int
or
sbb
push
cli
mov
mov
mov
addb
sub
fsubs
jns
ds
ret
cmpsl
add
pusha
inc
sbb
xor
mov
mov
push
pop
jb
sbbl
shrl
xchg
xchg
stos
iret
insl
inc
ja
mov
icebp
sub
push
icebp
pop
sbb
cltd
loop
adc
fisttps
lahf
mov
mov
sub
ja
sbb
fs
pop
sub
push
push
insb
sqrtps
pop
mov
jns
arpl
mov
roll
xchg
icebp
ss
sbb
dec
or
popf
push
dec
imull
xchg
hlt
jae
add
icebp
xchg
mov
or
add
das
repnz
push
push
xchg
dec
xorb
jnp
xor
cld
dec
movsl
sub
in
sbb
movsl
or
mov
lahf
add
arpl
cmp
pop
clc
push
fidivs
or
mov
and
orb
pop
mov
pusha
shrb
mov
repz
lcall
sbb
jne
mov
adc
sbb
dec
sub
mov
push
arpl
aas
add
mov
shl
pushf
dec
decl
xchg
pop
mov
push
test
adc
sbbb
adc
xor
inc
cmc
lds
xchg
lock
lahf
mov
adc
shrl
jbe
add
mov
fistpll
pop
leave
ret
movsl
ror
push
js
inc
mov
mov
pop
adc
dec
push
lea
out
sub
sub
add
sbb
cmpl
test
les
outsl
push
std
jno
insl
data16
pushf
test
push
push
int3
pop
std
daa
mov
mov
jno
or
andb
jns
fcomps
adc
add
stc
push
int3
push
sbb
dec
mov
cld
ss
pop
pop
xlat
loop
shll
jne
loopne
lret
aad
loopne
pop
and
inc
les
popf
add
scas
pop
repnz
aas
data16
scas
sbb
sbb
je
fidivl
dec
and
cmpsb
dec
das
xchg
xchg
and
mov
fcoms
enter
cmp
and
inc
add
sahf
test
cmp
aam
into
outsl
push
out
dec
imul
xor
test
pusha
and
popa
mov
fistl
test
sbb
das
mul
or
xchg
mov
push
cmp
inc
icebp
ret
out
mov
mov
out
mov
push
dec
cwtl
imul
rcrb
cmp
loopne
mov
pop
mov
clc
xor
xchg
repnz
imull
out
insl
inc
xchg
cmp
fcoml
fincstp
addb
sbb
adc
lahf
fisubrl
mov
pop
in
dec
jnp
xchg
aad
cmp
popf
out
movsb
pushl
loop
scas
into
popa
xor
rorb
in
adc
mov
stos
xor
cmp
fbld
dec
mov
imul
lahf
inc
leave
adc
xor
inc
imul
xor
cs
mov
icebp
mov
rcrl
dec
and
mov
cmp
and
dec
add
aam
gs
test
iret
std
pop
test
pushf
jp
jge
imul
mov
xchg
push
mov
pop
loopne
pop
popa
fneni(8087
cmp
push
xor
adc
fs
mov
mov
xor
dec
sub
push
push
xor
mov
sbb
cmp
fs
mov
pop
cmp
popa
lret
jbe
lods
cltd
repnz
jmp
mov
cmp
sub
push
and
push
jl
xchg
mov
mov
rep
push
and
orl
sbb
clc
rcrb
mov
or
dec
mov
addr16
mov
je
xor
addr16
jmp
push
cltd
sub
sti
out
lret
push
and
or
xchg
dec
inc
cmp
cmp
mov
xlat
mov
inc
repnz
rcrb
or
inc
push
cmpsl
add
popf
mov
or
jmp
lret
xor
hlt
cwtl
jge
mov
cmp
das
test
mov
into
cwtl
dec
mov
mov
add
inc
sub
mov
outsb
mov
movsb
sub
pop
jnp
dec
pop
out
jmp
sub
mov
pop
cld
and
push
mov
and
cmpsl
cmp
subl
sbb
int3
sbb
mov
sbb
ret
mov
and
cmpsl
aad
cmp
lods
lahf
mov
jmp
out
jno
sub
adc
std
lods
popf
push
mov
adc
cmp
dec
and
cwtl
stos
aam
mov
lret
imul
jne
outsl
aad
ret
mov
cmp
mov
inc
hlt
lods
pop
cmpl
xor
lods
pop
jae
lcall
mov
or
mov
jb
jg
pushf
and
insb
gs
ds
das
pop
inc
jnp
stos
xchg
pop
data16
nop
add
mov
jmp
aam
in
roll
pop
fidivl
pop
and
fstp
cmp
pop
jecxz
or
or
fucomi
icebp
sbb
pop
adc
int
push
add
bound
inc
mov
push
xor
add
push
mov
sbb
js
lock
ljmp
mov
pop
daa
sbb
mov
add
inc
cmc
stc
rcll
dec
sbb
jns
mov
inc
pop
cmc
cmp
sti
sbb
and
or
sbb
sub
pop
lds
cmpl
cmp
in
adc
vphaddbd
pop
jge
pushl
mov
pop
push
mov
adcl
pop
pop
jl
pop
clc
pusha
pop
dec
sub
test
inc
mov
dec
jae
mov
fstp
fwait
xchg
sub
dec
nop
lcall
or
or
cmp
lods
rcrb
or
call
fwait
add
scas
jno
add
and
or
add
fcomps
fistl
dec
sbb
sbb
push
jne
stos
lret
mov
gs
cli
add
pop
and
cwtl
in
jmp
inc
pop
xchg
cmpl
arpl
dec
leave
ljmp
cmpsb
inc
push
fs
int3
movnti
xor
pop
fstpt
loope
push
jno
push
adc
inc
push
test
cs
inc
loopne
pop
aaa
out
pop
ds
gs
andb
adcb
outsl
stos
stos
out
ret
pop
insb
fldl
cli
inc
inc
xor
mov
and
xor
mov
mov
test
enter
in
pop
mov
xchg
and
pop
repz
loopne
loopne
pop
cmpsb
jno
test
cmp
mov
jne
mov
sub
mov
jno
dec
add
cwtl
repnz
ret
sbb
lods
ja
mov
icebp
mov
and
xchg
repz
or
xchg
lods
pop
sub
mov
ss
or
cltd
mov
ds
inc
jmp
push
mov
xor
pop
or
sbb
in
inc
add
inc
or
js
pop
inc
imul
cmc
xor
inc
out
jns
daa
fcompl
mov
xchg
popa
int
popf
sti
rcl
dec
add
cmpl
inc
pop
xchg
xchg
ficompl
fstl
sti
add
mov
ja
les
repz
mov
lods
mov
test
adc
xchg
mov
das
cmp
negb
adc
in
faddl
xor
jl
cltd
and
mov
pop
and
dec
outsb
les
shr
ror
out
jo
lahf
sbb
pop
cmp
das
pop
xor
lcall
sarb
iret
sbb
push
add
pop
jns
stos
outsl
add
inc
and
mov
ljmp
push
sbb
jo
mov
push
pop
or
mov
jge
sbb
and
sub
xor
sahf
sub
push
pop
lret
mov
xchg
int3
leave
jle
push
addr16
insb
inc
cltd
lock
nop
mov
rclb
test
cmp
adc
scas
mov
ljmp
and
notb
push
jnp
es
sbbl
loope
ror
and
pop
int3
out
jb
dec
shlb
ficompl
rcl
inc
jae
mov
sti
dec
or
sti
xchg
cwtl
push
mov
mov
jge
int3
add
add
xor
mov
cmp
lods
cmpsl
and
lret
xor
lret
test
out
sbb
fwait
push
imul
adc
popa
mov
pop
fidivrl
rorl
cld
or
and
popf
sub
sbb
push
jmp
pop
les
divb
sbb
aaa
xchg
inc
aad
loop
outsb
sbb
mov
push
cmpsl
stos
add
loop
jge
mov
inc
mov
jg
lcall
inc
push
mov
ja
cmp
repnz
fcoml
sbb
cmp
jbe
rcrl
mov
shlb
out
loope
push
ffreep
lock
mov
cmp
and
idivl
xchg
ds
dec
rcll
dec
gs
ror
dec
daa
xchg
scas
lret
fidivl
and
sbb
xlat
add
sbb
pop
inc
test
xchg
cmp
decl
out
cmp
pop
imul
cld
ret
pop
pop
mov
jne
sbb
outsl
inc
imul
shll
rcrb
jmp
or
jbe,pt
faddl
xchg
pop
xchg
cmp
add
add
imul
lods
and
mov
mov
jmp
lock
je
and
cltd
adc
cmpsl
mov
cmp
push
les
mov
fs
test
shrl
cmpsb
cmc
movsl
xchg
pop
mov
imul
jno
push
add
mov
mov
notl
enter
fwait
xor
lods
dec
adc
popa
xchg
je
or
mov
xchg
scas
lods
or
sub
aad
jecxz
jecxz
dec
lret
rcll
in
popf
jb
or
sbb
cmp
adc
push
push
fs
pop
insb
popl
gs
push
lret
mov
push
js
mov
and
stos
stos
mov
add
xchg
bnd
inc
xor
or
or
in
jno
jno
mov
push
inc
inc
leave
sahf
data16
add
sbb
leave
out
xchg
test
shlb
pop
je
sub
aad
sbb
dec
mov
mov
mov
in
mov
repnz
int3
outsl
add
stos
pop
mov
fstpt
pop
cmp
xchg
test
mov
pushl
nop
or
sbb
data16
or
cwtl
scas
push
push
ss
mov
mov
ds
sti
fs
inc
ret
push
mov
out
dec
fsubs
sub
rcr
sti
stos
pop
aad
mov
in
adc
sbb
jno
mov
or
push
clc
mov
mov
jno
cmp
xchg
aaa
popa
arpl
pop
negl
nop
iret
or
sbb
repnz
pop
push
dec
xchg
daa
mov
shl
call
jns
repnz
shl
in
and
mov
pop
jmp
out
call
push
inc
outsl
cmp
out
lods
fldcw
xor
in
xor
clc
orb
mov
or
mov
mov
mov
adc
movb
push
mov
sbb
cmp
mov
xchg
mov
mov
or
push
std
jns
or
ret
push
push
adc
sub
lods
pop
mov
fs
mov
repnz
mov
repnz
movsl
push
push
in
or
imul
out
repz
xor
mov
lahf
xlat
push
ds
mov
pop
lock
cmpsl
ja
inc
push
inc
out
cmc
cmp
push
lods
leave
jp
push
ja
cmpsl
mov
jns
pop
mov
pop
xchg
jnp
cmp
aas
mov
outsb
cmp
mov
inc
adcb
push
sbb
push
ss
inc
int
enter
mov
js
shlb
adc
xchg
into
mov
movsl
pop
mov
cltd
sete
je
mov
nop
lds
out
cmpsb
inc
dec
cmp
shll
aad
repz
rol
in
popa
loope
pop
adc
outsl
mov
xlat
icebp
rep
mov
out
mov
gs
int3
push
fwait
and
lahf
fsubrs
imul
mov
int
movsl
cwtl
mov
dec
pushl
stc
pop
mov
ljmp
out
xor
push
les
push
cmpsb
mov
out
jg
sti
pop
mov
xlat
xor
pop
mov
cld
enter
repnz
dec
test
push
dec
dec
lods
or
or
xchg
xchg
push
cwtl
out
and
scas
shr
mov
rcrb
jbe
sbb
ja
aad
lock
enter
scas
pusha
js
mov
lds
add
mov
call
dec
add
enter
push
mov
jae
pop
mov
outsb
in
sub
pop
jns
inc
cmpsb
xchg
inc
mov
out
mov
clc
imul
pop
cltd
sbb
push
fxch
sub
sti
sub
daa
or
fdivrs
jg
out
aam
xor
or
hlt
push
inc
aaa
test
sahf
push
es
and
es
movsl
fsubs
inc
lock
pmuludq
cmpsb
sub
add
ljmp
pop
jne,pt
jge
mov
pusha
lret
adc
xchg
iret
and
int3
lods
arpl
es
mov
cld
jae
popa
dec
sub
jg
insl
adc
mov
mov
jbe
pop
ret
adc
pop
scas
mov
ret
testl
sub
jno
mov
popf
movsb
mov
xchg
scas
lahf
hlt
ja
ror
fucomip
push
cwtl
ss
incb
xchg
sahf
inc
push
xor
sti
mov
bound
data16
std
loopne
add
jecxz
std
pop
orb
dec
push
lea
subl
imul
sbbb
jb
test
divl
fs
xchg
or
xor
loopne
cmpsb
daa
pop
mov
test
push
pop
xor
pop
and
imul
or
inc
icebp
repz
cwtl
cmpsb
and
mov
les
push
in
ss
inc
mov
mov
dec
popf
cmpsl
push
jge
gs
in
cmovs
mov
icebp
xchg
scas
push
push
jno
popf
xchg
jecxz
sub
data16
sbbl
stc
lret
cli
push
jo
xor
xor
in
sub
mov
and
xchg
into
aaa
nop
ret
call
shl
mov
mov
test
mov
mov
jmp
loopne
jmp
insb
push
inc
orb
mov
pushf
mov
cwtl
test
test
xchg
pushf
inc
leave
inc
in
jae
push
cmp
mov
cmc
iret
into
push
mov
imulb
call
test
jp
sub
mov
cmp
out
ret
pop
or
xchg
leave
xor
cmp
xor
jne
fdiv
mov
xor
ljmp
add
push
jecxz
ret
mov
mov
push
fmuls
inc
insb
loop
add
xor
addl
pop
cmp
es
sbb
lds
repz
inc
sbb
mov
jmp
mov
in
shrb
sbb
loop
testb
add
xchg
push
adc
sbb
test
cmp
dec
push
loop
jg
aaa
mov
stc
xchg
movsb
mov
adc
mov
cmpsl
sbb
loop
lcall
jmp
push
pop
aaa
call
xchg
xchg
imul
out
je
xchg
pop
rcll
jecxz
aas
in
or
or
xchg
mov
push
pop
in
lock
pop
sbb
sbb
add
jp
shll
or
xchg
inc
icebp
cs
loopne
gs
int3
icebp
pushf
jbe
lock
scas
leave
enter
adc
mov
pop
and
ror
xor
xchg
aaa
gs
jns
push
sub
loopnew
mov
arpl
outsb
dec
jo
mov
or
clc
push
lds
ja
stos
and
pop
mov
adc
push
inc
inc
inc
sbbb
inc
adc
in
jg
es
roll
frstor
mov
fsubs
mov
ret
je
and
les
mov
enter
push
inc
outsl
test
cmp
daa
cmp
outsl
push
dec
daa
dec
jle
mov
mov
or
inc
in
insl
inc
jbe
cld
fdivr
cmp
cmpsl
in
cmpsb
inc
pop
pop
popf
test
and
test
sub
call
punpcklbw
sub
lcall
mov
or
add
xchg
cli
mov
mov
addr16
arpl
inc
adc
pop
fldcw
pusha
push
pushf
ficompl
push
aad
mov
and
push
inc
shrb
div
gs
or
imul
push
xlat
jle
pop
xor
sbb
sub
pop
or
enter
sbb
jmp
jbe
xchg
dec
push
sbbl
and
and
jmp
push
inc
mov
jbe
shrl
pop
or
dec
repnz
rcll
or
cmp
sbb
sbb
fs
mov
dec
pop
lret
adcb
jmp
xor
stc
test
pop
adc
xchg
cmp
test
sub
and
add
pop
cltd
pop
enter
inc
jg
inc
dec
sbb
int3
cwtl
rcr
jns
jg
and
cltd
cmp
roll
imul
and
out
lret
imul
jmp
mov
stos
fwait
xchg
mov
add
mov
mov
xor
or
pop
mov
xchg
aas
dec
lods
push
adc
pop
adc
pop
cltd
ret
inc
and
add
dec
call
aam
push
jo
jecxz
aaa
mov
and
push
je
testl
dec
dec
jle
cld
xchg
leave
mov
mov
popa
sbb
das
in
cmp
cmp
test
mov
in
jmp
pusha
test
rorl
call
daa
pushf
ljmp
insb
adc
jnp
test
jl
out
adc
cltd
cs
pop
inc
sub
dec
adc
aam
mov
sub
jge
push
sbb
les
jmp
fadd
repz
mov
sbb
jns
sahf
pop
mov
fldl
sub
je
mov
into
sub
xchg
jo
sahf
sub
inc
or
sti
or
or
rcrl
bound
in
xchg
rcll
loop
jne
repz
fwait
daa
cmp
pushl
push
loopne
dec
or
aas
adc
fdivrs
add
lahf
or
stos
mov
scas
pop
push
or
jno
shll
jg
lock
popa
mov
cmovl
sbb
and
fadds
sub
push
jl
jmp
cmp
nop
sub
out
cmp
sub
adc
iret
mov
or
mov
adc
scas
insl
push
mov
mov
jno
stos
xor
movsb
bound
mov
pop
sbb
mov
in
xlat
shl
decl
and
ret
dec
icebp
lock
mov
mov
jl
test
jl
hlt
mov
mov
cli
jmp
xlat
pop
lret
sarl
neg
rclb
stos
xchg
loopne
dec
mov
sbb
sub
jb
mov
adc
sti
pop
inc
pop
aam
sbb
jg
sbb
in
push
das
and
xor
mov
out
dec
pop
aad
mov
mov
leave
xor
inc
xchg
aam
cmp
inc
pop
rorb
mov
cmp
gs
pop
xchg
out
dec
insb
add
inc
jnp
movntq
cltd
lds
cs
push
popf
adc
mov
sarl
and
test
test
stos
push
pop
pop
add
cmc
stos
xor
in
arpl
mov
sub
pop
jmp
xchg
out
xor
lock
adc
movsb
in
ss
imul
data16
xchg
popa
out
in
lock
mov
mov
push
lea
adc
repnz
xlat
cmp
aaa
scas
lea
xchg
push
filds
dec
inc
rclb
rorl
inc
xor
daa
or
mov
test
mov
out
mov
dec
jmp
add
push
push
insb
stc
jne
pop
int
pusha
popf
cli
nop
sbb
mov
inc
mov
mov
xchg
sahf
scas
mov
jnp
ficoml
loopne
dec
push
adc
dec
mov
pop
pop
setbe
cmp
pop
scas
sbb
mov
dec
push
push
sbb
mov
lret
iret
fisttpl
imul
pop
jnp
ja
shlb
enter
outsb
push
insb
push
mov
mov
mov
lock
push
adc
add
mov
mov
pop
pop
lds
test
adc
sub
rcrl
dec
movsl
fstpl
jbe
outsl
mov
jno
popf
rcl
push
and
cwtl
sub
jmp
mov
mov
les
ljmp
repnz
pop
mov
xchg
mov
and
sub
and
push
jbe
in
enter
iret
rcll
pop
lods
aam
and
lods
lret
clc
inc
iret
pop
xlat
cmpsl
add
push
leave
cmp
leave
popa
cli
push
fwait
sub
mov
clc
sbb
pop
xchg
cmp
mov
int3
mov
mov
jle
xchg
lea
andb
dec
xlat
daa
or
mov
cmp
jns
pop
mov
cmp
jp
cmp
xor
xchg
push
push
sbb
cmp
loope
and
adc
cmp
loopne
mov
outsb
pop
int3
ljmp
adc
mov
mov
inc
add
imul
sbb
push
mov
cli
sbb
dec
mov
lods
insb
push
ret
push
loope
fs
pop
mov
out
aas
xchg
lahf
cs
mov
test
add
pop
jae
adc
sti
jmp
inc
vhsubps
insl
jp
mov
mov
cmpsb
leave
mov
bound
add
pop
lret
or
xlat
lods
xchg
mov
jno
pop
cmpsl
xlat
out
andl
les
movsl
int
jecxz
ds
int
mov
sbb
and
test
pop
dec
dec
sbb
daa
loope
add
pop
xor
mov
cmp
lahf
aas
loopne
push
fisttpll
repnz
rcrb
mov
loop
dec
mov
add
mov
loop
sub
insb
addb
xchg
mov
mov
jp
jo
add
hlt
mov
andl
addr16
out
jae
js
add
aaa
pop
movsl
incb
push
and
push
cmpsl
jl
adc
int
push
ret
or
mov
jl
fidivrl
mov
mov
cmc
por
pop
and
mov
jns
cmp
popa
jae
and
dec
pop
mov
cmc
and
xchg
adc
push
jnp
mov
clc
xlat
fwait
mov
cli
or
xchg
lds
lock
pop
pop
xchg
popf
lea
adc
fs
xchg
push
push
mov
inc
mov
or
push
mov
adc
mov
push
xor
inc
jg
mov
fnstsw
les
inc
lret
lea
sahf
push
jo
and
adc
mov
cmp
outsl
dec
jecxz
xchg
in
popf
subb
add
and
div
jg
add
push
jne
dec
imul
add
insb
popl
dec
jg
cmp
mov
hlt
jnp
stos
sbb
or
dec
inc
lcall
or
mov
xchg
shlb
mov
in
fwait
cmp
into
arpl
xchg
das
add
mov
mov
cmp
xlat
test
or
and
repz
and
aas
sbb
push
rorb
in
rdmsr
outsb
mov
arpl
fdivl
xlat
mov
fimuls
sbb
sbb
cmpsl
cmpsl
pop
iret
xchg
xchg
pop
in
xor
repz
mov
inc
jmp
mov
jae
push
sarl
jne
xor
lods
add
dec
mov
clc
and
or
cmp
stos
dec
jge
das
dec
mov
add
inc
dec
lock
mov
imul
popw
and
cmp
stos
fsubs
fs
lret
xlat
lock
xor
inc
movsl
dec
repnz
jmp
xchg
add
aaa
ret
jecxz
mov
sbbl
xchg
nopl
cmp
add
sub
mov
or
test
adc
pop
out
mov
push
adc
jb
or
lahf
pushf
push
jb
out
jmp
cmp
mov
js
into
pop
cmp
es
pop
and
mov
aas
fdivrl
outsl
dec
or
jo
notb
or
fisubrs
nop
aas
fcmovbe
sbb
popa
jno
xchg
ficoms
sub
call
push
aad
es
sub
ficoml
lcall
loopne
lret
jl
scas
scas
fnsave
loopne
xchg
call
or
mov
push
bound
stos
insb
xchg
xchg
in
rorb
mov
mov
and
mov
sarb
fcmovb
adc
push
das
adc
test
pop
xlat
outsb
jl
mov
movsb
je
mov
xchg
ret
fldcw
fcmovu
cmc
fs
mov
push
jb,pn
test
mov
lock
aas
sub
push
shrb
and
pusha
nop
movsl
push
dec
and
mov
adc
hlt
push
lds
xchg
push
xchg
xlat
and
lods
pop
adc
call
fbld
ret
lds
ss
mov
or
clc
les
js
mov
adc
sub
jg
pop
mov
mov
in
mov
shl
pushl
adc
in
test
in
push
fimull
cwtl
pushf
push
gs
fstpt
out
push
cltd
add
sbb
lcall
jns
sbbl
and
mov
pop
js
int
ds
or
jmp
cmp
js
pop
int
add
into
sub
repnz
inc
jo
cmpsl
das
stc
jo
sbbb
dec
xlat
fsub
int
int3
movsl
and
mov
lods
bnd
push
and
ds
jb
pop
mov
sbb
popa
aaa
fcomps
int
mov
sub
out
sub
xor
xchg
out
mov
sbb
shll
and
aas
inc
rorl
lret
pop
mov
cmp
es
jg
or
jae
pop
cmpsl
mov
call
cmpsb
cmpsb
lock
push
fidivrl
shlb
adc
cmp
push
ret
push
dec
outsl
pandn
jb
mov
hlt
movsb
sub
cs
orb
pop
insl
push
jp
xor
jo
ljmp
jo
aam
push
jno
fdivl
cmp
pop
cwtl
out
jg
loope
int
les
jo
mov
pop
ret
movsb
das
sbb
push
mov
adc
adc
mov
xor
es
sub
inc
shlb
add
xchg
pop
fmul
jbe
adc
pop
je
mov
sub
insb
inc
xchg
dec
mov
or
dec
cmc
inc
aam
test
mov
adc
cmp
int3
mov
push
fmuls
std
xchg
cld
imul
loopne
xchg
orb
and
sahf
fnsave
shl
movsl
in
into
mov
and
loopne
mov
cmpsl
aas
adc
sub
ret
iret
dec
lods
subl
and
and
xor
xchg
push
dec
sbb
add
testb
add
mov
mov
std
clc
cmp
mov
cmpl
icebp
cmp
adc
hlt
adc
adc
out
sbb
ljmp
dec
or
mov
mov
jns
and
into
lret
ljmp
xchg
mov
jge
cli
mov
imulb
xchg
ret
adc
ret
mov
jbe
outsb
jge
xorl
lret
call
dec
outsb
aam
cmp
cmpsl
ret
mov
or
push
inc
push
inc
mov
or
add
push
dec
dec
ret
into
loop
jg
push
cmp
xchg
adc
movsl
hlt
mov
ljmp
scas
lock
jo
sbb
mov
sub
outsb
arpl
mov
jno
dec
arpl
jae
pop
fsts
aas
add
sub
lret
push
bound
cmp
mov
mov
adc
dec
push
jl
push
adc
sub
gs
and
push
cmp
xchg
mov
insb
fisubs
das
adc
inc
xor
pop
lds
jae
inc
mov
xor
dec
pop
push
les
movsl
adc
stc
hlt
and
dec
push
sarl
fxch
cmc
add
sbb
mov
inc
movsl
lock
add
mov
cwtl
in
pop
mov
jle
icebp
add
rcrb
jne
xlat
adcb
int
mov
call
int3
adc
fsubl
push
loope
pop
out
mov
and
xchg
lock
xor
mov
or
inc
scas
lret
jmp
js
cld
add
ret
sbb
inc
xlat
or
lret
push
les
jae
pop
sbb
out
sub
gs
xchg
enter
stc
pop
sub
out
jae
lahf
aas
lods
lret
adc
cmp
dec
mov
and
xchg
cltd
ss
jae
ret
sti
test
sbb
jl
adc
in
push
xchg
scas
dec
adc
add
rcl
decl
adc
in
cwtl
inc
out
xchg
sahf
xor
or
jns
sbb
sub
aam
mov
fmuls
push
push
jg
stc
adc
fnstsw
les
cmp
filds
loop
mov
sahf
jmp
dec
test
mov
xchg
jae
scas
lods
mov
pop
addb
jmp
addr16
inc
int
movl
or
mov
push
jle
jb
test
xchg
fistps
xor
and
jmp
cwtl
jecxz
mov
add
fldcw
add
ds
insb
mov
mov
cmp
xor
clc
sarl
dec
jb
cmp
shrl
flds
jl
sar
jle,pn
lea
bound
inc
aas
arpl
dec
lock
cli
js
mov
ljmp
pop
push
jnp
xchg
je
in
mov
and
cmp
sbb
je
push
mov
lds
test
fbstp
sub
mov
sbb
cwtl
arpl
aam
jo
mov
sub
inc
test
dec
xor
gs
or
sbb
sub
idiv
and
addb
mov
out
mov
addb
cwtl
aam
jg
pop
call
mov
inc
pop
dec
aad
jp
pusha
push
movsbl
stos
xor
sbb
add
mov
add
xchg
lock
inc
stos
sbb
adc
add
les
scas
pop
shrb
in
je
mov
cld
stos
fistpll
cmpsl
jb
enter
adc
test
mov
enter
push
or
int3
jecxz
fcomps
fs
mov
mov
in
imul
in
or
es
ds
mov
xchg
push
or
cmp
xchg
pop
stos
jb
xchg
test
or
adc
int
pop
popa
sti
fs
pusha
jbe
mov
sbb
adc
pop
sbb
add
ljmp
mov
clc
mov
pop
ds
mov
lcall
add
push
push
and
mov
mov
mov
mov
cmpsb
lcall
int
xor
cmpsl
or
pop
out
bound
aas
adc
popa
pop
pusha
js
cmp
jo
fdivrl
xchg
cmp
pop
jnp
xchg
daa
insl
cmp
and
and
push
adc
push
inc
push
test
aad
dec
pop
fdivs
fstps
jg
test
jp
xor
mov
clc
mov
shrb
or
inc
cs
or
sarb
lea
lahf
pop
dec
out
lock
inc
jmp
xor
int
ds
cltd
daa
pop
xor
fistpl
sub
icebp
scas
in
sub
lret
mov
xor
dec
pop
mov
jnp
mov
nop
adc
mov
scas
aaa
lret
push
jecxz
fstp
xchg
adc
mov
mov
jnp
mov
je
push
add
fsubrs
cmp
mov
cmp
push
mov
sbb
aaa
mov
and
lret
dec
scas
lods
rclb
decl
in
sub
jno
push
leave
in
stos
arpl
cs
xor
faddl
mov
rcl
jns
lea
lods
ret
in
pushf
jge
jae
cld
cli
mov
adc
mov
popl
push
shlb
mov
popa
iret
or
fistl
sub
jb
je
pop
movb
mov
cli
sub
and
push
push
push
dec
dec
enter
push
and
and
pop
out
xchg
scas
add
fildll
ror
dec
sbb
js
adc
jmp
xchg
xor
cmp
imul
test
je
mov
in
pop
imul
mov
jo
jle
cmp
pop
jl
xchg
jns,pn
mov
mov
fsub
in
nop
loope
jp
pop
bound
mov
or
lea
mov
scas
add
sub
and
shrb
clc
ss
xchg
jl
adc
mov
daa
sbb
rorb
lods
into
ret
jbe
xchg
cmovp
jnp
int3
mov
inc
push
pop
xchg
ljmp
mov
xor
data16
fbstp
lock
rcrb
push
cmp
in
sarb
push
mov
pop
sar
push
sub
int3
lds
sbb
mov
mov
sbb
insl
ss
aad
cmp
ret
mov
out
lock
cmp
fimull
test
cmc
dec
xchg
mov
inc
push
xchg
stos
mov
dec
sub
jle
cld
aas
mov
pop
or
or
push
xchg
lods
shll
pusha
out
out
rorb
insl
jl
leave
add
pop
cld
call
aam
nop
bound
sbb
mov
imul
clc
adc
negl
into
xchg
xchg
lods
aam
dec
adc
add
pop
or
mov
icebp
mov
outsl
stos
inc
and
and
int3
cmp
and
sti
repnz
adc
imul
push
jne
test
scas
add
mov
mov
popa
or
scas
cltd
dec
movsl
outsb
gs
push
dec
sti
xchg
push
pop
add
sbb
jmp
jge
lods
outsb
mov
daa
pop
fidivs
daa
mov
or
mov
test
lods
out
lods
jae
cmp
dec
je
jge
mov
dec
imul
pop
lea
lret
mov
xchg
js
lahf
popf
cmp
fidivl
mov
shll
cld
pop
cltd
out
lahf
fldl
ljmp
lcall
sbb
jnp
mov
xchg
in
incl
cmpsl
xchg
pushf
bswap
inc
mov
loope
lahf
pop
and
and
cs
cmpsb
outsb
cmp
cltd
sbb
xchg
pushf
mov
int3
ljmp
mov
push
fisttps
pop
push
fcoml
inc
jnp
shl
sub
in
es
jl
mov
je
seta
mov
push
in
fiaddl
adc
rcll
inc
dec
sbb
pop
jecxz
jnp
cwtl
test
jnp
mov
dec
movsl
sub
outsb
lock
or
testl
push
leave
push
loope
mov
adc
js
dec
test
pusha
or
stos
add
out
adc
mov
jb
test
inc
pushf
gs
aaa
adc
pop
inc
pop
cmp
jecxz
rcrl
xchg
sbb
xlat
notb
xor
fists
out
jp
push
test
adc
cmp
xor
inc
sti
push
lea
jmp
les
pop
and
outsl
ja
mov
fisttpl
mov
pop
adc
popa
in
mov
pop
jns
fldenv
aam
mov
les
popf
inc
gs
and
cmp
jae
pop
imull
jno
jnp
mov
in
pop
adc
dec
in
pop
lahf
test
sbb
mov
sub
dec
mov
negb
mov
fs
movsb
or
das
in
mov
add
or
mov
inc
imul
pop
push
cmp
mov
dec
mov
add
in
mov
test
dec
cmc
inc
push
mov
iret
cmp
div
dec
dec
sub
sub
mov
rclb
das
xlat
pop
adc
nop
mov
je
xlat
mov
fs
mov
and
and
loop
dec
jae
cmp
xor
xchg
pop
xlat
cmpsl
pop
sbb
push
rorb
insl
inc
cs
cmp
mov
mov
xchg
loopne
sub
rcll
mov
push
jns
shrb
inc
xorb
divps
and
out
sbb
fdiv
cmp
iret
cmc
xor
jbe
jle
add
sub
lret
dec
ljmp
push
cmp
out
and
or
xchg
push
sbb
push
and
cmpl
cwtl
mov
mov
dec
pop
cld
hlt
testl
aaa
mov
jbe
dec
mov
out
mov
in
pushw
aad
iret
pop
es
sub
mov
adc
add
and
jne
push
loopne
or
repnz
shlb
negb
pop
jo
mov
scas
cmp
mov
xor
les
add
lods
lea
xor
sub
insl
outsb
nop
lahf
cmpsb
sbb
aaa
xor
stos
sbbl
pop
sub
imul
test
loop
mov
dec
add
push
dec
lcall
jb
cli
cmp
inc
sub
inc
push
pop
mov
ss
and
std
rorb
xchg
outsb
nop
xor
mov
shrb
call
les
jnp
test
dec
mov
inc
xchg
cmp
dec
add
lcall
jns
dec
dec
push
cmpsl
outsl
pop
jmp
jmp
jg
hlt
push
push
pop
lcall
sti
rolb
int3
cs
imull
fisttps
adc
cmpsb
mov
fmull
push
nop
mov
aad
lcall
sarl
sub
popf
mov
mov
or
ror
popf
mov
mov
ljmp
fbstp
inc
sti
ljmp
jmp
cmpsl
push
out
jne
push
cmp
mov
jg
or
push
rorb
mov
adc
jg
sarb
fcomps
sarl
lcall
aaa
adc
test
xchg
pop
mov
jp
test
stos
jae
mov
fistpll
xchg
sbb
int3
inc
mov
cmp
loope
dec
incl
nop
pop
jnp
xorb
lret
sbb
arpl
mov
fisubl
arpl
repnz
js
pop
push
or
dec
sti
cmp
dec
mov
ror
cs
shl
test
cmpsl
aam
pop
mov
jge
rcrl
stc
xchg
test
bndstx
std
insl
out
push
and
enter
mov
movsb
pop
add
push
fiaddl
ret
xlat
ja
popf
mov
rorb
sbb
in
aam
mov
pusha
mov
lcall
loop
lahf
cmp
test
js
iret
out
xor
iret
out
xor
cs
fwait
int
jle
in
ffreep
aad
xchg
loop
xor
cs
add
sbb
pushf
cmp
inc
cmpsb
inc
sub
cld
icebp
jns
sub
and
adc
inc
and
dec
mov
or
push
jns
xor
lea
fs
js
push
out
cmp
and
and
dec
inc
bound
cmpsb
add
lds
add
inc
orb
add
cmp
adc
in
ret
fstl
scas
jo
lds
mov
adc
int3
sbb
lret
or
adc
mov
std
js
xchg
rcrl
ljmp
clc
fists
mov
cmp
loope
test
stos
inc
inc
push
cs
loope
testb
test
inc
dec
push
mov
lahf
cmp
jmp
inc
sbb
lahf
sbb
jl
inc
dec
pop
inc
push
xchg
movsb
cmp
lcall
inc
data16
ds
enter
cs
aaa
ret
jnp
aas
gs
shlb
sbb
pop
jbe
out
mov
add
xor
mov
call
scas
xor
jnp
aad
iret
lock
jo
xchg
and
fisubrl
stos
mov
jmp
lahf
sbb
jecxz
and
stos
dec
mov
pushf
xchg
fwait
loopne
in
leave
mov
cwtl
cs
jecxz
sub
sub
adc
inc
fdivp
push
cmp
lret
sub
jne
sub
mov
loopne
add
push
adc
lret
js
xchg
sbb
cmpsb
lea
outsb
mov
jnp
js
loop
lea
cmp
add
mov
roll
adc
jmp
jle
xchg
mov
lret
das
rorb
lods
and
jg
mov
lods
add
push
pop
scas
adc
leave
push
xchg
mov
stc
pop
das
and
pop
int
rclb
mov
hlt
or
ror
jmp
pop
pushf
add
cmp
dec
aad
nop
xor
js
divl
lock
mov
lcall
pop
xchg
dec
pop
adc
imul
jns
push
push
das
jno
sarb
add
jae
in
jmp
negl
and
insb
cmp
test
jb
dec
scas
adc
inc
sti
pop
push
push
and
mov
mov
out
or
and
push
mov
or
das
lcall
jno
shlb
dec
sub
pop
inc
mov
and
sbb
dec
icebp
repz
xchg
lcall
sbbb
jmp
and
popf
jecxz
inc
adc
dec
xor
push
xor
add
jne
ja
add
in
in
rcrb
fdivs
je
or
in
push
push
sub
xchg
mull
push
xchg
fistpll
or
mov
into
mov
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
pusha
jg
daa
pushf
push
sbb
add
negl
mov
fdiv
adc
lret
jmp
cmp
sub
arpl
test
call
mov
pop
mov
cmpsb
shlb
js
sub
jecxz
repnz
jb
or
dec
mov
es
loopne
clc
dec
fwait
inc
je
in
push
loop
or
sbb
loop
sub
into
shlb
and
inc
inc
cli
in
push
out
movsl
lods
lret
xchg
mov
xchg
stos
ja
mov
xorb
sarb
jb
mov
mov
push
cmp
adc
mov
cmp
popf
xchg
add
rorb
outsl
inc
fbstp
addl
aad
cmp
leave
adcl
dec
rorb
mov
mov
jmp
in
sub
ja
stc
imul
int
call
sbb
cli
xor
dec
je
mov
popa
xor
dec
loope
fcomip
lcall
inc
pop
stos
push
push
fcoml
mov
mov
stos
out
mov
xrelease
sbbb
push
sub
push
lock
cmc
sub
pushf
push
or
outsb
and
jb
aas
stos
or
rclb
inc
jb
xor
mov
cmp
mov
scas
adc
and
lock
sub
lcall
bound
cmpb
add
pushf
decl
inc
pop
fnsave
xchg
in
fimuls
xchg
ret
inc
cmp
cmc
inc
int3
imul
mov
push
iret
and
sbb
popf
mov
aad
imul
mov
sbb
jb
inc
scas
aaa
inc
and
sar
fnstenv
pusha
dec
pop
xchg
adc
ret
inc
mov
pushf
and
in
cmp
repz
and
mov
std
sub
adc
jbe
adc
push
jns
ficomps
cmp
inc
push
lret
cmp
cmp
jns
scas
pop
pushf
mov
js
pcmpeqd
add
ds
xchg
sub
sti
das
cltd
testb
cs
icebp
pop
popf
pusha
or
pop
pop
nop
outsb
xor
cltd
popf
or
mov
sbb
ffreep
imul
xor
into
in
jbe,pt
sub
popf
movsb
and
jbe
lods
pusha
jne
in
pop
pop
sbb
out
adc
inc
mov
sbbb
and
lods
xlat
sbbb
push
stos
push
aad
lahf
ja
neg
js
and
inc
jp
iret
stos
cwtl
rol
or
ror
out
sub
inc
sub
leave
sub
xchg
xchg
sub
shl
inc
frstor
xor
mov
enter
shrl
shl
mov
xchg
lods
inc
jle
jb
mov
incb
cltd
sarl
cmp
cli
jp
out
xchg
pop
test
mov
pop
mov
adc
lret
loopne
fidivl
push
pushl
pop
bnd
sbb
scas
addr16
adc
jo
into
adc
popl
arpl
sbb
dec
inc
mov
loopne
xor
xor
cmp
dec
clc
mov
push
scas
and
dec
mov
mov
insl
mov
loop
pop
cmpb
int
add
movaps
test
call
and
ljmp
mov
push
movsb
test
mov
cld
mov
inc
pushf
sbb
in
push
sub
rclb
sub
sub
mov
mov
pusha
imull
or
push
movsb
adc
rclb
lods
popf
lahf
xchg
jbe
pop
xchg
xor
fsubrs
xchg
add
inc
outsb
dec
das
and
fbstp
cmp
jg
push
jl
fistpl
xor
cs
inc
inc
jns
push
test
cltd
sub
push
xor
mov
mov
aas
test
ret
dec
sbb
xor
andnps
cmc
subl
push
out
cmp
es
push
inc
or
mov
sbb
pop
pop
fdivrl
insl
jnp
xor
dec
adc
popl
cmp
test
repz
addr16
pushl
xchg
aaa
xchg
lods
iret
mov
push
ja
inc
xchg
out
test
ljmp
lahf
insb
xchg
bswap
pop
mov
push
push
and
add
rcll
addr16
xor
dec
mulb
sbb
add
mov
in
cld
add
mov
test
in
insl
scas
ficomps
into
jle
mov
out
xchg
fimuls
lds
cmp
cmp
adc
inc
mov
call
das
adc
cmc
push
popa
fs
int3
stos
jne
and
sbb
fcoml
shrl
aam
mov
pop
fisubs
orb
mov
jecxz
and
inc
in
cwtl
aam
fs
test
jne
mov
ljmp
es
or
das
lea
sarb
pusha
sub
inc
out
outsb
push
inc
mov
in
push
movsl
sbb
xor
or
push
push
movsb
js
jb
out
pusha
ret
sub
mov
push
daa
mov
xor
arpl
xor
aam
jl
or
and
clc
xchg
lahf
icebp
rcpss
xor
inc
and
fsubl
mov
and
jecxz
loope,pn
add
and
dec
adcb
mov
lods
or
pop
movsb
mov
pusha
out
imul
stc
and
mov
sti
int3
leave
or
rcrb
dec
cmp
push
add
xchg
mov
push
test
jp
es
mov
cmp
add
sbb
adc
inc
adc
cmpsl
int
cmp
in
in
push
xchg
pop
movsb
jne
jo
inc
inc
fsubr
mov
dec
stos
mov
das
or
push
out
inc
and
adc
lea
lods
mov
mov
jecxz
add
orl
test
pop
mov
xchg
rcrb
add
leave
or
aaa
mov
mov
sub
lods
ret
jp
or
jecxz
xor
bound
loope
push
cmc
stos
test
inc
xchg
add
stos
ret
inc
popa
mov
mov
dec
test
push
inc
pushl
mov
add
and
stc
or
dec
aad
outsl
scas
and
and
sub
lcall
push
pop
dec
stos
in
movsb
cli
cmp
xchg
push
hlt
or
cmp
pop
add
push
lcall
push
enter
sbb
pop
xor
loop
cmp
push
xchg
bound
sub
xorl
cmp
fldt
popf
push
mov
lahf
adc
iret
daa
in
cmp
pop
test
push
xchg
mov
mov
cld
jg
ljmp
jnp
in
mov
push
inc
rorb
ret
loope
mov
jp
movb
xchg
ss
out
cmpsl
les
fstpl
rcrb
loope
div
inc
cmp
cmp
lcall
and
mov
in
jg
scas
xchg
mov
lret
fidivs
enter
cmp
ret
sahf
les
fdivrs
pushf
pop
sbb
inc
test
jnp
mov
rcr
dec
aad
mov
cmp
adc
pop
add
fcompl
lahf
push
test
mov
cltd
loope
cmp
pop
push
xor
push
pusha
scas
aad
or
setns
push
repnz
push
aas
das
imulb
std
dec
pop
pop
ret
popf
mov
and
xor
mov
pop
jns
push
outsb
add
xor
loopne
ret
idivb
and
lcall
jae
adc
xlat
mov
dec
fistps
mov
mov
mov
fidivs
ljmp
xchg
repnz
lret
mov
fidivl
jl
cwtl
push
shlb
dec
mov
pushf
cmpsl
push
adc
aas
jbe
fstp
data16
mov
cmp
lea
and
jno
daa
imul
push
mov
ficoms
aad
hlt
and
sub
gs
mov
mov
sub
loop
in
test
loopne
sarb
sub
or
add
dec
sbb
xor
xchg
lret
jl
loope
popf
int3
iret
jns
push
xchg
cmp
pop
lock
shl
les
jne
subl
add
lcall
aaa
xor
adc
icebp
push
rcr
dec
xor
int3
xchg
stc
cmp
inc
daa
ret
mov
icebp
fcmovnbe
lock
pop
sub
scas
xor
cli
mov
add
mov
imul
ds
negb
fists
sub
jp
sub
ficomps
jl
mov
in
dec
fimull
mov
aam
lahf
push
xorb
aam
mov
loopne
adc
push
les
outsb
mov
cmp
aaa
sbb
mov
cmc
xor
xor
inc
pop
sahf
jecxz
aad
dec
or
mov
adc
jne
xchg
xchg
or
ret
inc
enter
out
mov
jns
ds
cmp
lcall
out
or
stos
mov
arpl
in
and
aas
push
mov
rcrb
cli
aad
pop
xchg
call
ja
xor
std
mov
lret
jle
inc
inc
daa
or
jmp
prefetcht0
out
cld
xchg
jmp
dec
adc
add
hlt
add
test
in
inc
in
pop
add
adc
andl
jb
lret
jbe
pop
adc
aas
loopne
cmp
push
sti
add
gs
imul
pop
inc
call
jns
xchg
or
or
add
out
and
fstpl
push
popf
loopne
cld
lea
dec
in
adcb
scas
test
pop
dec
pop
cmp
loopne
aam
inc
sub
push
and
sub
in
icebp
xchg
add
xchg
stos
leave
mov
inc
imul
js
into
mov
outsb
adc
cmp
inc
jp
lods
mov
popa
mov
push
xchg
add
shrl
dec
es
loopne
loope
xchg
out
add
mov
adcb
and
test
cmp
lods
mov
xchg
aam
sbb
les
gs
negb
mov
add
nop
dec
xchg
inc
outsb
cmpsl
adc
in
sub
cmp
incl
test
push
pop
pop
pop
ljmp
push
aas
loopne
aas
ds
jae
ss
inc
outsb
test
and
mov
xor
repnz
scas
mov
scas
ljmp
fld
incb
pop
cmp
sarb
in
mov
sbbl
xchg
scas
mov
adc
and
xor
imul
popa
mov
iret
adc
mov
add
sarb
scas
jle
push
fldl
pop
sahf
xchg
test
cwtl
add
jg
mov
jecxz
push
and
mov
shrl
jecxz
sahf
cmp
data16
scas
or
cmpsb
cmc
insl
fnstsw
cmpsb
jae
cmp
fwait
daa
test
dec
and
pop
pop
inc
loope
enter
push
popa
or
inc
and
cmp
sub
inc
ror
cmp
push
lock
and
add
inc
mov
sub
sub
jno
dec
pop
push
movl
jb
pop
xor
sub
stc
jne
push
nop
mov
ret
push
cmp
in
popa
or
dec
sbb
in
sbbl
pop
and
adc
std
mov
push
popa
fwait
and
xchg
mov
mov
pop
jno
les
jae
ja
popa
nop
mov
loopne
bound
inc
mov
lret
add
or
xchg
sub
add
hlt
jne
and
int
mov
xchg
or
adc
mov
in
fwait
pop
add
divl
mov
dec
fpatan
jmp
sub
mov
fadds
jg
lea
xchg
not
sub
mov
pop
adc
fcomps
add
xlat
sarl
pavgb
xchg
push
imul
out
mov
mov
loope
mov
add
outsl
rorb
test
push
aad
fdivs
cmpl
aad
xorl
outsl
imul
mov
adc
adc
xor
pop
sbb
cmpsl
mov
xor
hlt
add
shrl
jne
jno
mov
sbbl
jns
gs
push
ficoms
in
xchg
pop
inc
pop
dec
pushf
and
pop
inc
mov
and
jns
lahf
mov
or
icebp
jbe
ljmp
add
xchg
aaa
cmpsl
push
data16
pop
xor
enter
xchg
lds
test
mov
push
push
adc
jbe
push
mov
fldenv
sbb
pop
push
sub
daa
sarl
rorb
mov
stc
out
rclb
or
sbb
sti
sbb
adc
jp
test
mov
insb
jo
sub
xchg
jb
sub
in
fstpt
push
fsubrp
add
call
fisubs
in
mov
lcall
arpl
lret
scas
lock
dec
cmpsb
jle
repnz
pop
pop
mov
fwait
push
mov
sub
lret
testb
insb
scas
fimuls
jge
pop
in
mov
imul
or
lret
fmul
pusha
or
lret
test
push
sbb
pop
xor
lahf
fdivrl
ds
fisubs
ficompl
push
je
rcrl
mov
aam
ds
mov
ret
adc
mov
jp
jb
mov
inc
and
pop
push
push
scas
cmp
or
loop
out
testl
std
pop
adc
jae
sbb
cmp
adc
mov
cmpsb
cs
jp
fidivrl
mov
into
push
sub
aam
dec
or
sti
pop
jecxz
clc
addr16
hlt
push
fmul
adc
sti
in
jne
sar
out
mov
cld
dec
ficoml
sub
mov
arpl
push
and
cmp
sub
inc
fildl
int
fidivl
into
push
mov
lcall
cwtl
fiaddl
and
js
push
incb
dec
push
cmp
int
pop
inc
pop
inc
push
and
jb
ret
xor
adc
or
movsl
leave
hlt
int3
iret
test
in
insb
cmpsb
cmp
test
mov
pop
xor
and
or
inc
mov
pop
mov
cmpl
fldcw
fistl
shl
imul
call
ja
adc
dec
mov
test
imul
decl
dec
cmp
inc
cmpsb
mov
in
and
in
add
test
jbe
jns
jo
jb
lret
xor
fsubl
or
push
sbb
push
idivb
sbb
cmp
sbb
test
sub
mov
mov
outsl
cmpsb
push
and
sub
pop
dec
lret
les
mov
in
jb
lock
icebp
stos
lret
in
fcmovbe
cli
or
add
pmaxsw
inc
or
xchg
xorl
int
adc
ret
les
fisubs
sti
xlat
outsb
lret
add
call
add
jp
in
dec
int
cmp
fs
pushf
pop
xor
adc
stos
int
lret
data16
push
sarb
mov
cs
lret
int
ss
cmc
insb
pop
test
adc
add
pop
xor
jns
flds
mov
shlb
adc
out
ja
leave
inc
xor
icebp
sti
pop
push
leave
icebp
mov
adc
and
mov
in
hlt
adc
cs
mov
sarb
xlat
push
sti
adc
sub
pop
inc
in
and
sbb
lods
jle
mov
into
movsb
add
lret
rclb
or
inc
cltd
outsb
mov
pop
xor
pop
push
push
int
cld
mov
inc
fisttpll
push
lods
jo
xor
and
cmp
les
aas
lcall
push
stos
jne
mov
add
or
push
inc
jne
fisubl
ljmp
pop
cltd
jne
fbstp
stos
shll
jne
fistl
ds
dec
mov
inc
adc
or
out
add
jecxz
leave
int3
in
ret
popf
and
mov
pop
enter
sbb
sti
xchg
dec
in
aam
scas
and
xor
sub
nop
pop
push
xor
push
popf
pmuludq
jmp
sub
arpl
or
push
push
add
mov
jl
je
aam
stc
pusha
mov
mov
bound
jmp
sbb
lcall
fdiv
mov
mov
shld
mov
xchg
out
mov
dec
iret
dec
test
add
cmpsl
insl
add
mov
ss
shll
adc
xor
cmpsb
les
roll
inc
cmc
mov
pop
lock
adc
sbb
dec
sub
in
or
icebp
cli
popf
fnstenv
jns
pop
std
sbb
and
xchg
pop
jb
add
push
rol
or
mov
pop
in
loope
xor
mov
jnp
and
mov
lea
stc
arpl
mov
hlt
inc
or
mov
push
js
stos
cmpsl
out
imulb
mov
aaa
xlat
push
pushl
mov
and
addb
cs
sbb
scas
loope
pop
xor
cmp
cmp
aam
sarb
das
pop
daa
adc
xchg
aam
fmul
xchg
popa
outsb
outsb
sti
movsl
push
cmp
ljmp
aad
sbb
cmc
les
fs
pop
imul
and
loop
sbb
fldenv
out
or
inc
cmpsl
jns
pop
cmp
jnp
mov
sub
jb
sbb
inc
adc
pop
int
and
sbb
mov
cmpsb
add
cmp
xchg
inc
inc
jnp
push
aaa
jne
or
lcall
imul
dec
sub
aam
nop
and
sbb
jb
push
mov
mov
and
or
loope
push
and
rol
shl
mov
divl
stc
mov
out
mov
pop
mov
mov
pop
orb
lcall
and
test
in
push
div
lcall
movb
fnstcw
dec
mov
imul
cltd
dec
repz
lock
addr16
xchg
inc
inc
jg
sbb
or
mov
scas
sbb
push
adc
lahf
push
icebp
lods
mov
jbe
stos
cmpsb
push
add
mov
dec
cmp
dec
ret
sub
mov
pop
pop
scas
and
jl,pt
incl
cmp
cld
mov
pusha
cmc
daa
fwait
and
sub
xchg
xor
pusha
roll
cmc
fwait
and
pop
subl
call
scas
stc
mov
insl
test
lods
call
adc
sub
lods
adc
inc
shl
movsl
scas
xor
sbb
mov
loop
mov
jg
test
insb
mov
shlb
push
out
jl
aas
je
sub
imul
fwait
pop
pop
mov
call
lcall
arpl
call
aaa
neg
jecxz
jmp
push
inc
aaa
xor
loop
out
rorl
xor
xchg
sub
adc
pop
jp
dec
test
xchg
ret
inc
scas
mov
inc
mov
add
mov
push
inc
test
stos
jge
inc
dec
popf
jae
and
push
insb
ja
gs
push
mov
add
inc
jbe
add
sbb
xchg
add
ret
xchg
fisttpl
push
xor
fsqrt
cmp
pop
mov
das
out
and
xor
bnd
xchg
mov
inc
adc
rclb
xchg
loopne
lret
out
loop
stos
es
mov
lea
sbb
add
add
jbe
mov
xchg
clc
xchg
iret
lods
movsl
add
push
out
or
dec
xorb
mov
sbb
std
in
xor
pop
testl
adc
mov
xchg
jns
int3
adc
adc
push
and
pusha
test
and
or
mov
xor
out
repnz
mov
arpl
lret
mov
lods
mov
and
inc
push
pusha
and
stc
and
mov
lds
lfs
ljmp
hlt
add
arpl
pop
fwait
inc
pusha
int
jl
aad
mov
cmp
xchg
test
and
addl
cmp
cmc
add
jmp
add
push
pop
shrl
dec
inc
rorl
jl
in
pop
mov
xor
add
out
inc
fdivp
in
jmp
dec
dec
cld
cmc
es
mov
cmp
daa
push
rclb
mov
push
sub
lret
out
push
push
or
imull
mov
aad
push
imul
rorl
aam
mov
fsts
iret
mov
jne
sbb
dec
xchg
loop
divb
divl
pop
dec
jb
mov
popa
in
mov
xor
insb
mov
shrb
push
mov
mov
stc
mov
mov
jnp
das
pop
jle
enter
notb
jno
xchg
or
sub
cwtl
mov
xchg
pop
inc
gs
push
inc
jle
xchg
or
sbb
adcb
rorl
xchg
mov
or
push
mov
aaa
aaa
loope
rcl
mov
lods
pusha
testb
sub
enter
cli
pop
jecxz
outsb
mov
dec
clc
enter
lea
int3
add
sub
lcall
push
ja
imul
pop
imul
das
or
fs
pop
and
out
repnz
pop
call
ret
inc
add
imul
dec
cmpsl
push
xor
fsub
sub
arpl
test
cmpl
gs
mov
dec
shrl
mov
repnz
cmpsb
fcoms
mov
fiadds
add
jp
imulb
pop
imul
cld
pop
or
aad
scas
mov
seto
xchg
ja
gs
fidivl
add
push
dec
or
addr16
pop
cmp
iret
loop
sub
inc
or
fst
jg
mov
push
insl
cs
hlt
test
sarb
fs
fsubl
dec
jg
push
or
adc
scas
inc
mov
imul
imul
repnz
orl
int3
test
jecxz
mov
in
mov
out
pop
mov
stc
loopne
and
mov
mov
fadds
sub
out
lret
inc
jb,pt
sub
out
dec
rep
bnd
in
adc
loope
jecxz
dec
inc
sub
inc
push
jp
in
insb
push
adc
or
mov
pop
push
add
lock
push
cmp
mov
jae
push
mov
xchg
fisubrs
addr16
lcall
push
cltd
aas
pop
repz
inc
push
in
gs
iret
fs
std
mov
into
xlat
or
stos
dec
stos
in
jmp
mov
movsb
add
repz
cmp
jmp
dec
lret
insl
ffreep
xchg
xor
dec
stc
jl
cmp
mov
insb
notl
cwtl
mov
test
imul
push
rol
mov
in
push
adc
je
mov
sahf
dec
decb
pop
dec
or
inc
cmp
insb
in
xor
lods
push
push
hlt
ss
mov
mov
inc
aas
bound
popa
xchg
addr16
mov
in
push
lods
in
jne
test
insl
xor
sub
enter
inc
xchg
push
fnstcw
inc
xor
push
sbb
je
mov
lahf
frstor
sti
jo
das
stc
pop
lods
xor
icebp
cmp
jne
xchg
fucomi
enter
mov
test
cmovl
stos
and
and
aaa
arpl
icebp
push
and
aas
jno
and
mov
or
sbb
or
push
in
popa
xchg
lea
jo
dec
bound
inc
mov
mov
das
cmp
mov
and
enter
jl
mov
mov
scas
loopne
fcomi
in
popa
xor
sbb
inc
or
mov
outsl
je
in
lock
lret
enter
sbb
xor
popa
lahf
leave
ja
mov
imul
jbe
push
fs
cwtl
jne
or
cmpsl
outsb
scas
adc
add
cmp
negb
mov
outsl
xchg
inc
popa
in
sbb
push
dec
test
rorb
sub
add
adc
mov
mov
and
add
pxor
flds
das
aam
cwtl
inc
shrb
fcompl
scas
jecxz
fimull
mov
in
pushl
push
arpl
dec
mov
mov
rol
mov
aas
cmp
mov
cmp
aad
adc
xor
xchg
mov
fld
flds
aaa
mov
rcrl
push
inc
mov
bound
outsb
adc
aas
add
addr16
addr16
cmp
pop
xorb
pop
or
sti
jle
iret
sub
jg
fmulp
mov
mov
push
inc
fldt
int
xor
mov
punpckhwd
call
mov
iret
jl
call
imul
xor
iret
je
push
rcrl
xchg
loop
adc
daa
mov
adc
shll
add
cmp
inc
xlat
jmp
mov
mov
and
cmp
pop
imul
add
pop
or
dec
daa
sub
pop
mull
mov
pop
push
loope
loopne
stc
mov
das
call
data16
xchg
lock
mov
int3
faddl
mov
pop
push
inc
daa
aad
pop
push
incb
sbb
push
xchg
inc
jge
dec
hlt
in
mov
lahf
gs
pop
aaa
jmp
mov
mov
mov
js
push
xor
mov
insl
in
ret
in
dec
into
xchg
nop
das
xor
stc
lods
dec
inc
insl
in
js
push
push
daa
mov
mov
jmp
js
repnz
lods
sub
movsb
mov
call
mov
cmp
push
lods
cmp
hlt
or
movsl
ffree
mov
fdecstp
loope
cmp
xor
shrl
popa
repnz
dec
inc
or
xchg
jp
cs
stos
push
xchg
in
movsl
cli
sub
imul
push
or
pop
pop
ret
int
nop
int
cli
out
or
sbb
test
imul
dec
xchg
xchg
jle
xchg
es
or
int
xlat
mov
lret
jle
in
inc
jp
out
sub
pop
xchg
mov
xchg
stos
lahf
xchg
dec
push
pop
push
mov
test
adc
dec
sub
cltd
xlat
add
arpl
dec
lret
js
stc
mov
adc
mov
pushf
cmp
pop
push
mov
push
cmpsb
add
push
add
repz
sub
fs
fnstcw
add
scas
cmp
cwtl
sahf
lcall
or
dec
cmpsb
ret
leave
ja
push
clc
icebp
in
push
lds
test
insb
mov
mov
stc
lock
xlat
xchg
inc
inc
jg
mov
jp
jns
xchg
jbe
scas
sub
adc
and
out
adcl
adc
ss
fists
jae
enter
mov
pop
and
imul
inc
sbb
jge
filds
inc
sub
sub
pop
cmp
inc
dec
dec
sahf
cmpsb
sbb
and
push
mov
jp
loopne
arpl
adc
stos
pop
popf
or
sbbl
fldenv
push
pop
repz
jmp
cmp
in
imul
gs
pop
ss
test
ljmp
cmp
push
mov
xchg
xchg
cmp
push
xor
nopl
inc
dec
jo
lock
xor
jle
aam
imul
shr
mov
mov
push
pop
out
shrb
cmp
in
jbe
repz
or
test
fmull
push
xor
int
sti
jo
push
sbb
popa
jecxz
lret
sub
pop
mov
scas
out
inc
sahf
pop
dec
xor
loope
dec
insb
loopne
mov
adc
lret
iret
pop
out
mov
test
mov
jb
movsl
hlt
push
mov
lret
xor
movsb
sub
test
mov
fists
cmp
pop
xchg
ja,pt
sbb
dec
ja
sub
jbe
mov
out
aam
jge
shll
adc
nop
jecxz
mov
sbb
repnz
stc
xchg
clc
mov
jle
dec
sbb
idivb
fstl
inc
adc
lods
jp
adc
scas
cltd
gs
mov
fucom
out
xchg
xchg
xor
push
dec
cmp
stos
dec
or
mov
std
mov
cmp
sub
lret
cmp
sar
in
loopne
adc
inc
or
ficoml
cmp
ror
paddd
mov
cwtl
or
bound
ss
xor
push
push
loop
stos
and
fwait
lock
push
inc
and
push
std
sarl
movsl
push
pop
es
mov
inc
int
fstps
call
cmp
lret
repz
pop
jmp
inc
sti
pop
test
pop
rcrl
dec
or
enter
push
gs
jne
test
mov
push
test
inc
cmp
aas
cltd
test
js
fstpl
shrl
inc
es
jmp
dec
inc
lret
xchg
push
xchg
rcl
stc
enter
iret
pop
add
dec
lods
xchg
push
sbb
push
add
push
xor
adc
jns
dec
lods
filds
dec
mov
mov
adc
cmp
fcoms
mov
inc
cltd
es
and
sar
ret
push
push
mov
sub
pop
insl
xor
inc
loop
cmp
jge,pn
push
scas
lock
popf
xchg
mov
movsb
push
mov
jns
mov
mov
loopne
dec
push
pop
mov
lock
incl
sbb
outsl
jle
xorb
add
cmpsl
shlb
add
jbe
dec
jle
fbstp
ljmp
shll
js
xchg
fisttpl
mov
das
xchg
adc
sub
mov
aaa
xor
or
hlt
push
push
pop
push
jne
xor
xchg
push
popa
mov
dec
je
add
xchg
sbb
idivl
ss
adc
push
adc
out
cmpb
push
lock
scas
cltd
fisttpll
jns
fdivr
pop
popf
mov
mov
loopne
adc
addl
xor
mov
outsl
dec
into
sbb
inc
lea
ret
mov
xchg
mov
and
sub
in
xchg
xchg
inc
aad
jecxz
imul
push
sbb
fwait
dec
push
mov
pop
dec
std
jbe
or
rcrb
daa
adc
test
shlb
fdiv
hlt
sub
dec
cmp
outsb
mov
mov
push
loope
aaa
subl
mov
pop
pop
jmp
add
data16
jbe
dec
mov
cs
mov
dec
mov
outsb
push
test
dec
mov
mov
ljmp
jbe
mov
push
into
dec
mov
push
jl
xor
std
testb
in
push
ljmp
pop
mov
int
xor
sarl
inc
pop
and
les
sbb
adc
fs
mov
loopne
adc
addr16
dec
mov
sub
mov
popf
add
addr16
out
jnp
inc
test
gs
push
je
bound
inc
fsubrs
jae
or
in
test
insl
jecxz
mov
xchg
dec
outsl
push
sbb
jmp
loope
fxch
ret
pop
or
push
cmp
outsl
sbb
push
sub
adc
movsb
int3
jl
test
movsl
cli
cld
pop
out
sub
roll
mov
cmpb
dec
xchg
ss
jg
pusha
test
out
iret
and
push
mov
idivl
aam
mov
cli
mov
incb
xor
sbb
out
in
sbb
js
mov
jl
outsb
mov
lahf
pop
scas
scas
lods
or
test
sti
mov
add
jl
enter
aad
lret
out
movsl
dec
pop
orb
enter
sbb
lret
or
mov
call
push
lods
imul
mov
mov
sub
mov
mov
xchg
insl
or
mov
pop
stos
inc
fists
lretw
inc
fwait
roll
pop
shlb
sub
jns
xor
loopne
out
xor
cs
mov
xorb
data16
and
test
in
cmpsl
sbb
sub
jmp
int3
mov
dec
cs
mov
mov
clc
fs
push
mov
push
pop
mov
jbe
mov
dec
stos
lods
sbb
nop
push
dec
into
mov
jb
xor
add
out
xchg
movb
and
sbb
mov
loopne
in
jmp
xor
jmp
push
arpl
cmpsb
movsl
call
inc
dec
stos
and
jecxz
sahf
jbe
sub
xchg
test
mov
call
clc
or
xor
sub
filds
push
mov
mov
fs
cmp
stos
sub
push
xor
mov
scas
pop
aam
pop
imul
int3
xor
ss
cmp
mov
repz
xchg
ss
test
cmpsb
inc
cmp
mull
inc
inc
bound
pop
xor
test
add
pop
repz
xor
in
in
insl
ficoml
mov
jnp
int
imul
mov
je
mov
adc
push
xorl
xor
adcb
mov
lret
xlat
adc
in
leave
cmp
mov
mov
ret
in
stc
add
les
loop
or
test
cmp
nop
leave
dec
sub
bound
push
sbbl
mov
adc
cmp
add
cs
insb
pop
addr16
dec
mov
imul
std
popf
lcall
into
sub
push
push
in
sbb
mov
imulb
add
add
xchg
scas
xchg
test
push
andb
das
jp
dec
leave
lods
push
and
adc
pop
sub
sbb
mov
outsb
sub
movsl
mov
cmp
inc
or
daa
notb
adc
outsl
insl
cmc
xchg
mov
jge
jg
lret
fldcw
jmp
xchg
xchg
lahf
jmp
and
push
push
lcall
addr16
je
mov
jecxz
filds
cwtl
popa
enter
adc
sub
cwtl
sub
cvtpi2ps
aas
xchg
movb
and
lcall
mov
out
mov
xchg
aas
and
lcall
mov
pop
ret
in
jle,pn
mov
into
lcall
push
push
push
add
subl
fistps
pop
push
and
pop
movsb
enter
in
cmp
xchg
add
out
adc
or
test
or
popa
cld
pusha
mov
out
int
subl
jg,pt
xor
aaa
xor
xor
out
jo
pop
loopne
cmpsb
lcall
shlb
ljmp
or
or
int3
xchg
push
adc
sarb
iret
sub
iret
pop
imul
sbb
outsl
pop
subb
insb
lock
into
pop
out
push
dec
sbb
in
dec
sbb
ss
or
insl
sub
insl
push
rorb
mov
setnp
sbb
pop
scas
add
repnz
inc
pop
leave
push
mov
testb
int
filds
cmp
bnd
mov
push
and
or
jp
mov
ror
or
or
scas
adc
mov
fnstenv
arpl
sub
scas
loopne
push
jns
and
mov
mov
cmp
or
and
enter
sbb
and
stos
cmpsl
cltd
push
decb
add
inc
xchg
cmp
sbb
test
fcoms
jbe
push
mov
or
sub
les
std
stos
mov
cmp
add
or
mov
stos
adcb
adc
insb
add
and
inc
mov
xor
xor
adc
add
push
push
fiaddl
add
lods
adc
adc
outsl
xor
cmc
fldcw
ds
xchg
xor
mov
dec
add
mov
mov
mov
mov
mov
lods
adc
pop
mov
pop
lods
scas
jge
add
lret
shr
rol
cli
sub
lea
iret
insl
jne
mov
ja
push
inc
mov
rol
dec
lret
and
jae
pop
or
flds
xor
int3
repz
test
cmpsl
shlb
push
aaa
mov
sub
inc
xor
test
bound
mov
mov
je
test
sbb
cmp
push
test
in
lcall
in
popf
lea
sahf
or
push
pushf
xor
icebp
and
cmp
jg
jno
xor
je
push
lahf
movsl
adc
fcompl
lea
xchg
xchg
cs
pop
push
push
lock
enter
pusha
dec
pusha
popl
mov
mov
in
cmp
adc
jmp
xor
popf
popa
js
je
incl
shr
mov
sub
aas
bound
mov
add
jne
xor
mov
adc
insl
imul
sub
lahf
mov
xor
push
jbe
cli
sub
lret
push
mov
add
es
pop
sbb
jl
or
mov
inc
mov
fwait
das
sbb
sub
xchg
fldl
cs
mov
flds
push
cmc
push
arpl
mov
cmpl
fcomi
or
cld
iret
out
stc
xchg
jne
je
mov
aaa
test
rorb
sbb
sbbl
hlt
or
enter
xorl
fsts
or
sti
enter
or
dec
call
and
stos
in
mov
adc
in
mov
daa
push
mov
sarb
fs
insl
ret
movsb
cs
clc
out
pmovmskb
sub
outsl
dec
or
dec
je
mov
pop
repz
jo
std
pop
xorb
xchg
test
and
rclb
dec
stos
outsb
repnz
mov
mov
inc
jno
sub
out
es
mov
pop
xchg
in
sub
dec
push
pop
push
movsl
das
xchg
jge
shll
sub
push
leave
popa
pop
jmp
loopne
fbstp
mov
or
outsb
and
test
adc
daa
iret
cli
xor
enter
lods
ljmp
fwait
test
dec
lahf
cmp
std
imul
mov
es
aas
out
inc
push
and
dec
mov
pop
jnp
xchg
pusha
aaa
int
cmc
push
inc
sbb
dec
es
pop
movsb
jmp
inc
pop
cmpsb
fbld
nop
push
jb
lock
dec
daa
orb
out
mov
repz
sarl
scas
ljmp
push
and
sub
in
pushf
cmp
xor
sub
in
xchg
jg
jge
icebp
popa
out
add
adc
cmpb
and
mov
mov
jno
jmp
lods
mov
jle
es
add
push
arpl
push
rorb
nop
rorl
inc
mov
mov
ror
fstps
pusha
mov
popf
add
inc
shll
sub
loopne
subb
les
xchg
add
popa
fisttpl
inc
mov
bound
sub
cmp
mov
repnz
popa
add
cmp
into
notb
stos
mov
insb
scas
rorb
and
out
push
jb
mov
cli
inc
rcl
push
cltd
fidivrl
jecxz
in
ret
jo
sahf
and
add
inc
scas
push
out
adc
add
adc
popf
loopne
nop
xchg
rorb
dec
lcall
hlt
nop
pop
test
pusha
sarb
cmp
inc
push
in
and
mov
xchg
call
push
push
cmpsl
and
mov
rcr
push
sbb
mov
loop
or
mov
xor
cwtl
pushl
fsubs
add
jae
dec
popf
ret
cmp
and
fstpt
jp
mov
sub
inc
mov
popf
jo
in
inc
xchg
shlb
std
repnz
cmp
and
iret
cltd
sub
test
xchg
mov
sub
xor
jl
bound
or
inc
clc
mov
cmp
cmpsl
and
jnp
xlat
test
inc
aaa
lahf
lret
frstor
mov
leave
int
fidivrs
fildl
jmp
ja
pop
or
aas
mov
add
lea
inc
sbbb
aam
rolb
sub
int3
ljmp
mov
cmpl
push
jp
in
pop
push
into
jo
sar
mov
out
int
pop
dec
dec
out
xchg
loop
jo
mov
xchg
mov
outsl
xor
xchg
jo
repz
xor
ds
xchg
jp
jnp
xchg
push
inc
fs
and
fistps
lods
sub
and
sub
xchg
daa
dec
jecxz
mov
mov
sar
pop
rcll
lahf
xchg
cmp
test
pusha
dec
fadd
lods
xchg
shll
cmpb
std
mov
cmp
cmpb
in
inc
gs
aam
xor
adc
sbb
cmp
adc
sbb
arpl
cwtl
lahf
arpl
cli
in
fisubrl
pop
std
hlt
scas
les
dec
or
outsb
ret
jne
imul
loopne
xchg
inc
jp
and
ret
pop
sahf
or
mov
hlt
adc
sub
inc
stos
mov
push
sub
imul
mov
mov
mov
mov
xor
sbb
lret
xchg
cwtl
push
ret
dec
pushf
mov
dec
xor
cmp
push
aad
inc
call
movsl
xchg
cmpsb
xorl
sbbl
js
shll
push
sub
adc
mov
push
insl
jnp
movsl
inc
push
lods
lods
xor
push
loop
xchg
mov
mov
inc
cli
adc
out
movsb
push
lcall
jo
adc
mov
mov
xchg
mov
lods
sub
addr16
mov
jae
push
inc
push
rcll
inc
cwtl
popa
xor
subb
rorb
rcrb
leave
js
sub
pop
in
xchg
aad
mov
pop
mov
mov
push
mov
dec
inc
scas
dec
push
loop
js
add
ljmp
fidivl
popf
fldl
pusha
lcall
or
cmp
pusha
push
ret
loope
in
jns
inc
insl
bound
inc
xchg
cmp
jae
dec
pop
mov
sbb
push
sbb
shll
add
inc
scas
xchg
ljmp
outsl
sahf
jecxz
test
and
leave
and
and
inc
inc
mov
pop
std
ds
fistl
inc
xor
push
fidivl
mov
cmpsl
jge
inc
insb
jecxz
cmp
out
ss
mov
outsb
outsb
dec
inc
in
or
push
loopne
sar
cmp
and
ljmp
repz
jb
add
int3
stc
adcb
ret
mov
inc
xchg
dec
jb
sub
neg
adcl
jae
aam
sar
jnp
rcrb
inc
adc
xchg
mov
jle
sar
push
xor
outsb
inc
aam
push
popf
leave
pushf
test
fdivl
stc
push
jae
push
sub
push
outsb
jns
add
sahf
xorl
shl
mov
cmp
mov
mull
scas
js
and
cmp
and
mov
xchg
fdiv
out
int
pop
les
lcall
mov
cmp
mov
out
popf
ss
das
sub
ret
mov
sbb
das
xor
mov
xor
imul
xchg
inc
pop
push
inc
jne
add
mov
or
gs
dec
mov
out
sub
in
aas
loop
ja
mov
in
int3
cmpsl
arpl
ds
fidivrs
mull
loopne
lds
mov
xor
sbb
imul
mov
in
nop
jno
cmp
pop
mov
mov
ret
lret
jecxz
sub
dec
enter
xchg
ret
movsl
nop
gs
scas
inc
mov
pop
jne
mov
mov
add
dec
cmp
xchg
xchg
jle
inc
cmc
sahf
imull
jl
jmp
ljmp
sti
fdivl
pop
cli
jnp
popa
adc
clc
cmp
fistpl
xchg
sbb
sub
addr16
or
lahf
loopne
fstpl
xor
pop
je
dec
lahf
mov
into
insb
mov
adc
jno
jge
xor
sub
stos
xor
rcl
not
xchg
mov
push
jmp
push
jnp
xchg
push
ja
insb
dec
push
lcall
jbe
xor
fwait
dec
mov
inc
ret
loopne
and
or
inc
pop
adc
xlat
mov
dec
das
and
push
xchg
dec
and
sti
cs
inc
fisttpl
sub
sarl
ret
mov
insb
rcrl
pusha
push
xor
push
in
jns
push
fcmovnu
loope
repnz
adc
mov
sub
movsb
sti
jl
mov
dec
stos
adcl
jne
or
inc
insb
outsb
in
in
inc
jno
pop
or
xchg
pop
sbb
push
aad
imull
repz
pop
pushf
ret
jg
data16
jge
pop
stc
cmp
jecxz
xor
jne
imul
sbb
jle
out
jl
in
push
xor
mov
int3
out
xor
dec
clc
andb
call
sbb
pop
pop
cmp
mov
jle
ficoml
mov
xorb
clc
jp
xor
mov
mov
mov
out
and
lods
adcb
cld
jno
dec
push
int3
mov
in
xchg
cmp
sbb
sub
sub
sub
pop
xor
dec
adc
sub
cmp
cmp
cmpsb
imul
movsl
dec
mov
lock
stos
add
fistps
jae
scas
loopne
popa
inc
stos
scas
xor
inc
sub
in
xchg
fdivrl
cmpsl
movsb
lret
inc
jnp
pop
into
jge
test
mov
mov
sub
loopne
es
cmp
test
out
sbb
imul
dec
cmpsb
movsl
pop
sbb
in
cmpsl
adc
popa
mov
imul
push
add
sub
sti
shlb
insl
stos
jmp
xor
psadbw
sbb
sbb
dec
push
inc
and
or
push
push
out
test
xchg
pop
inc
cs
out
lcall
mov
lds
dec
stos
cmp
lods
in
test
femms
push
and
ffree
dec
into
int
in
out
loopne
mov
js
int
movsb
sbb
add
cwtl
or
sub
notl
imul
mov
or
test
xchg
mov
lods
cmp
dec
rcr
inc
mov
into
xor
adc
sub
scas
orl
mov
outsb
in
aad
sarb
mov
cs
aam
push
pop
push
jecxz
jp
jge
pop
pushf
mov
or
lcall
or
push
rep
mov
push
mov
xor
xor
sbb
mov
aaa
mov
cmp
and
popf
or
fldl
inc
adc
cmp
or
add
fcoml
jecxz
cltd
in
pop
xchg
add
or
cmpsb
jns
inc
add
push
das
dec
or
xchg
xorl
push
sti
adc
and
mov
sbbb
mov
xchg
test
inc
jb
cwtl
xchg
adcl
cs
jg
fbstp
add
inc
cmp
mov
sbb
jb
stos
testl
xchg
push
cmp
pop
dec
cmpsb
or
outsl
push
mov
jecxz
aad
sub
and
sbbb
xchg
pop
sbb
shrl
mov
xor
push
xlat
cld
push
mov
stc
dec
cld
dec
or
loope
mov
loop
cmp
xlat
ret
fbld
or
mov
rorb
sbbl
adc
mov
faddl
add
loopne
test
dec
imul
dec
dec
xchg
aad
jns
dec
pop
mulb
and
pop
test
jae
sbb
mov
adc
imulb
sbb
mov
xchg
mov
pop
cltd
xchg
mov
lock
rcl
jno
jne
add
lds
lea
adc
xabort
cwtl
in
loop
lds
fnstenv
add
test
sbb
fs
ret
je
mov
sbb
jnp
imul
dec
lds
bound
cwtl
sti
add
mov
sub
mov
fbstp
stos
fcmovnu
mov
mov
jne
and
adc
mov
inc
or
sub
inc
dec
ror
int
xlat
sahf
xchg
add
bound
add
out
fcmovbe
cmp
sbb
push
das
inc
int
lret
push
xor
cmp
add
add
jbe
mov
nop
mov
mov
or
outsl
and
loopne
jb
xor
dec
and
xor
or
mov
test
rorb
and
sbb
add
stc
xchg
test
ret
sub
adc
and
xchg
sub
aas
les
faddp
mov
je
or
mov
shrb
pop
movsl
call
pop
xor
ret
aad
sub
movsb
mov
stos
and
pop
push
add
inc
mov
shlb
icebp
out
xchg
int
fwait
pop
inc
rcl
js
mov
mov
adc
and
push
loopne
add
dec
scas
ss
push
add
and
mov
xchg
adc
aam
test
dec
fsts
cmc
inc
jae
ret
loope
jb
mov
xor
out
sahf
popa
cmp
sub
push
push
repz
movl
loop
cmpb
int
mov
data16
jecxz
xchg
lods
cmp
test
ret
push
push
mov
iret
int3
and
cwtl
push
jae
xchg
fildl
mov
sti
ljmp
clc
add
int
ret
out
scas
jge
push
inc
push
or
xchg
adc
mov
mov
mov
call
cmc
into
hlt
repz
inc
pop
push
fisubl
pop
cmc
xchg
inc
repz
xor
sub
jmp
mov
jecxz
add
fbld
loopne
popf
jo
popf
imul
in
scas
pushf
sub
mov
sub
lods
add
inc
mov
into
mov
cltd
sub
and
push
fstpt
mov
push
lock
mov
pop
out
lcall
xlat
dec
into
mov
aaa
mov
incb
push
popf
sarl
xchg
out
fldcw
push
cmp
cmp
jmp
mov
in
dec
insb
inc
mov
mov
mov
adc
jnp
sbb
lds
je
ret
aas
loope
pop
and
sub
loop
jno
jmp
and
bound
cld
fldt
loopne
leave
and
ljmp
insb
mov
ljmp
lea
dec
stos
xor
or
mov
mov
popa
sub
mov
leave
xor
js
cmpsl
int
mov
jno
movsb
pop
test
cs
daa
pop
mov
fidivl
jge
clc
and
vmread
out
jg
dec
fisubl
jb
cmp
adc
das
test
incl
mov
scas
inc
outsb
insb
xor
jmp
jb
enter
mov
jnp
mov
out
dec
pop
lea
push
jno
aas
addl
into
push
cmp
stos
add
clc
ds
sub
inc
vrsqrtps
sbb
out
jae
dec
xchg
lds
outsb
stc
movsl
or
pushf
jmp
insl
lods
jae
mov
fistpll
lods
out
and
dec
mov
imul
dec
test
and
cwtl
xor
fnstsw
pop
cmc
xor
mov
xor
ret
jmp
jp
cmpb
into
imul
test
adc
arpl
test
mov
das
notb
aaa
insb
add
aaa
test
mov
cmp
cmc
sbb
stos
mov
sbb
scas
enter
cmpsb
push
add
faddl
les
nop
mov
cmpsb
xchg
mov
add
or
xchg
ja
push
fsubl
sahf
xchg
lcall
ljmp
inc
lahf
lods
mov
fnstenv
shlb
outsb
shll
push
stc
outsl
leave
xchg
call
in
mov
pushf
cmp
xchg
loope
push
test
and
add
adcb
sbb
adc
loop
pop
push
sbbl
jg
sbb
inc
push
pop
loope
outsl
out
popa
fcmovnbe
xchg
mov
or
jge
pop
pop
icebp
mov
scas
lods
loopne
adc
das
pop
inc
daa
outsb
sti
jl
movsl
imul
add
out
pushf
frstor
pop
data16
xor
sbb
loopne
psraw
mov
nop
and
in
aas
out
scas
sahf
adcb
mov
xchg
push
sbb
dec
test
xor
orl
mov
or
rclb
mov
shrb
mov
push
leave
adc
push
push
shl
lea
cmp
lock
mov
popa
push
das
sub
push
push
xor
gs
jno
pop
mov
cmp
lahf
std
jge
xor
divb
mov
pop
popl
rcrb
jge
cmp
xchg
adc
sub
and
scas
ret
jl
sbb
test
pop
and
in
push
push
sub
add
jne
jns
inc
dec
dec
je
pop
lods
and
adc
adc
xchg
imul
xor
js
xorl
mov
mov
icebp
jge
jp
mov
stc
and
dec
jmp
pop
xlat
enter
sbb
or
loopne
push
cs
stc
jmp
clc
rclb
pop
fstpl
and
adc
insb
or
aad
xchg
fistpll
icebp
ficoml
adc
inc
add
pop
icebp
mov
and
jnp
pushf
pusha
aad
jmp
adc
mov
push
dec
push
mov
jo
in
in
and
sub
sbb
xchg
sti
or
sub
in
jg
ret
jo
test
ljmp
outsb
ret
ficompl
outsb
push
scas
hlt
mov
sub
cmp
aad
sub
pop
mov
cli
lret
push
pop
cmp
sbb
testl
das
scas
in
add
jnp
or
push
push
jmp
lods
subl
data16
sub
sub
dec
fucomip
and
loop
testb
call
xor
in
jg
cltd
cmpsl
pshufw
jne
jl
pop
outsl
arpl
call
or
repnz
ljmp
loopne
es
fisubl
push
lock
jne
add
psllw
push
fisubrl
stc
test
movsl
inc
inc
push
and
test
lret
and
ret
dec
pop
pop
jae
adc
jge
dec
icebp
add
lds
or
or
mov
push
sub
imul
adc
aas
cmpsl
dec
hlt
subl
inc
outsl
xlat
iret
sti
xor
int
mov
rclb
je
and
jge
int3
addb
arpl
cmp
mov
push
xor
pop
fimull
pushf
add
loopne
mov
repz
les
sahf
push
or
daa
int
sbb
fnstenv
icebp
xor
push
js
add
mov
aas
shlb
mov
clc
aaa
lahf
sbb
push
add
outsl
sbb
clc
jno
jnp
fsubrp
in
int
adc
mov
stc
cmp
out
dec
out
div
ds
push
aam
mov
sub
cwtl
scas
jns
adc
lods
daa
lds
mov
fs
inc
cmp
mov
shrb
or
mov
push
fisubl
out
mov
mov
inc
push
adc
scas
sub
fdivs
fisubs
xchg
push
idivb
pop
inc
mov
fs
mov
cld
lret
cmp
or
pop
ss
inc
pop
jb
xor
pinsrw
dec
ror
xchg
sbb
loope
dec
dec
jne
push
aam
sub
xchg
es
pop
mov
lcall
lcall
lret
repnz
mov
push
insb
aaa
sub
or
aam
mov
xchg
sub
movsb
cmovno
mov
aaa
mov
mov
mov
sub
mov
jl
jp
into
popf
or
jnp
xchg
rorl
dec
sbb
mov
daa
xchg
cs
repz
inc
mov
sahf
cmp
sbb
sbb
jbe
hlt
les
roll
mov
daa
stos
call
leave
mov
lret
cwtl
negl
cmp
mov
dec
lods
andl
push
loop
shll
xchg
adc
mov
pop
cmp
mov
push
and
mov
lcall
cwtl
mov
addl
ja
inc
inc
in
daa
ja
xchg
lods
dec
jnp
shll
xor
jmp
test
js
pop
clc
pop
stos
in
jp
test
xchg
xor
add
shlb
pop
mov
nop
mov
pop
mov
mov
adc
push
fs
inc
mov
gs
sub
aas
push
outsb
cs
scas
ror
negb
es
into
cwtl
jg
and
mov
mov
xor
je
aaa
enter
in
and
je
sub
std
pop
jp
inc
lds
push
test
push
cmp
mov
shll
int3
cmpsb
shll
lea
dec
cs
int
clc
dec
add
enter
imul
fcmovu
adc
jae
push
xor
mov
and
ja
fsubrs
and
fldenv
add
test
mov
add
ficoms
xor
arpl
add
mov
cli
out
mov
addr16
out
xor
mov
xor
dec
stos
cs
rcrl
sbbl
push
and
and
leave
mov
adc
notl
push
fldt
into
push
pop
fs
inc
loop
ss
xor
vpmacswd
xchg
sbb
adc
aam
mov
out
jle
jge
repnz
pop
push
pop
jno
xchg
ljmp
jns
mov
mov
adc
mov
sbb
sub
pop
cmp
aad
sbb
std
cmp
add
jb
insl
sub
jne
or
pushf
mov
iret
ljmp
in
aad
sub
pop
lret
jp
pop
jo,pt
repnz
decl
adc
adc
mov
lods
pop
push
inc
rcll
mov
adc
call
add
mov
cmp
inc
xchg
shll
mov
lcall
mov
fisttps
int
fs
xchg
out
imul
inc
insb
mov
ret
sbb
andps
std
jns
call
sti
ret
es
sub
and
not
stos
adc
mov
cmpl
pusha
xor
push
add
xlat
and
cmp
out
cmp
xor
in
es
cmp
in
push
or
dec
roll
jmp
enter
das
cmp
repnz
aad
sbbb
sbb
adc
push
iret
inc
and
sbb
xchg
cmpsb
movsl
cpuid
and
inc
negl
mov
jno
bound
pusha
cmc
xor
test
lcall
mov
push
xlat
and
out
or
cmpsb
fiaddl
adc
sbb
out
mov
fs
gs
cmp
data16
push
aas
adc
in
add
cmc
es
aas
imul
scas
dec
or
mov
mov
add
movsb
jb
fwait
cmp
mov
fwait
xor
test
push
sbb
int3
xchg
push
mov
add
or
pop
dec
test
lcall
jl
arpl
add
nop
outsb
dec
cmp
orl
icebp
inc
ss
jmp
cmc
outsb
mov
mov
xor
inc
add
pop
cltd
je
lret
call
aas
jle
or
mov
sub
sbb
sub
loop
iret
ss
mov
jl
push
aas
add
ja
out
stos
sub
cmc
push
andl
inc
lods
ljmp
stos
xchg
stc
addb
fdivr
add
mov
mov
insb
xor
gs
pop
push
push
or
mov
push
cld
and
push
subb
call
sarl
jp
add
cli
lret
out
mov
out
fdivr
mov
mov
or
adc
mov
pop
cs
jnp
xchg
jnp
jle
cmp
sub
xchg
mov
xlat
pop
mov
mov
stc
in
xor
mov
int3
jbe
push
lock
or
sbb
sbb
ret
in
jg
and
cmp
inc
xor
push
add
or
imul
push
bnd
sbb
add
test
loope
jbe
aas
lret
adc
mov
lcall
inc
fsubs
adc
outsl
mov
dec
stos
fstpt
mov
cmp
jecxz
mov
cmp
cmp
and
mov
add
jbe
fdivrs
decl
mov
xor
cltd
adc
imul
fbld
mov
les
loopne
jl
dec
shr
and
nop
dec
dec
mov
je
add
mov
rcrl
shlb
mov
ja
pop
hlt
les
mov
insb
cmp
sahf
clc
call
mov
outsl
jecxz
add
stc
sti
sbb
mov
mov
cmp
imul
int3
leave
and
jmp
cmpsl
stc
adc
es
sbb
inc
std
dec
inc
xor
in
jne
add
and
imul
fidivs
adc
cmp
fdivrs
pop
pop
xchg
flds
pop
mov
mov
xlat
jne
std
jbe
fbld
loope
xchg
cmc
push
xor
aad
fisttpll
movsb
std
lret
pop
cmpsl
jmp
xor
jp
repnz
jnp
mov
roll
dec
ljmp
insl
jb
or
dec
scas
add
in
mov
push
jne
sub
sub
mov
scas
aas
push
mov
outsl
scas
jnp
rolb
pusha
xchg
push
loopne
int3
das
mov
cmp
enter
sub
push
test
mov
shrb
les
repnz
popf
outsl
test
mov
push
mov
push
mov
push
icebp
jecxz
mov
dec
sub
int
or
loopne
iret
fdivrl
push
ljmp
mov
fidivrs
pop
xchg
and
sub
xchg
and
adc
mov
push
push
xchg
sti
push
enter
dec
imul
fs
insb
mov
inc
js
js
sbb
fs
cli
inc
outsl
pop
or
mov
cli
mov
jge
ficompl
pop
push
sysexit
xchg
and
add
in
shrl
fbstp
xchg
mov
pop
lcall
xchg
mov
xchg
or
sahf
bound
adc
lea
imul
das
xchg
mov
jo
dec
movd
jl
test
int
cmp
mov
stos
mov
in
mov
ljmp
test
push
push
lea
fwait
das
dec
loopne
sti
jo
aam
out
scas
mov
adc
inc
jg
sub
and
sbb
pop
shll
ret
push
jno
int
push
imul
xchg
lds
arpl
jge
push
cwtl
xchg
push
out
inc
outsb
rorl
cltd
or
mov
outsb
repnz
mov
pop
or
pushf
mov
fists
cli
les
aam
dec
test
xchg
out
jl
loop
push
sbb
gs
xor
fnstsw
push
jmp
adc
jg
popl
shll
inc
test
mov
rcll
pop
loop
xorb
aaa
mov
xchg
jp
jns
inc
jns
push
imul
add
push
pop
cmc
out
adc
xor
jo
lret
std
insb
inc
jmp
inc
dec
xrelease
or
dec
add
inc
dec
add
mov
push
pop
mov
out
mov
jmp
inc
xlat
jecxz
out
or
int
sub
push
xor
imul
mov
data16
and
dec
jb
in
rorl
jp
cli
test
mov
jecxz
lea
mov
or
imul
xchg
fnsave
cmpb
cltd
aam
ret
mov
or
test
test
test
out
adcb
insb
call
sahf
or
fmull
mov
std
cmc
repnz
mov
xor
inc
cli
jecxz
jle
loope
sbb
jmp
mov
xchg
mov
xchg
out
jecxz
notl
sbb
dec
adc
and
push
pop
fwait
pop
ds
inc
mov
test
cltd
nop
mov
test
pop
inc
add
insl
mov
jno
daa
in
fldt
mov
aas
pop
or
stos
jne,pt
sbb
nop
lds
mov
repz
dec
fs
mov
mov
ret
sbb
mov
add
or
out
pop
dec
pop
xlat
inc
add
wrmsr
mov
jge
stos
lcall
push
mov
dec
xor
mov
fstl
adc
push
aad
stos
cld
push
mov
into
adc
repz
in
fldt
pop
fwait
incb
fs
ficompl
xor
inc
cs
movsb
fdivs
mov
mov
mov
cwtl
mov
push
iret
aam
mov
mov
test
popa
lods
xlat
dec
stos
dec
gs
and
sub
loop
out
test
int3
mov
leave
lock
stos
pop
and
mov
negl
sbb
and
xchg
jmp
jbe
and
sbb
sbb
jg
push
pusha
inc
cld
ss
jmp
lret
push
inc
cmp
or
mov
jp
popf
push
iret
push
loopne
lods
jno
loopne
das
push
cmpsb
mov
insb
movsl
push
scas
sbb
outsl
lahf
popf
flds
aad
mov
xlat
mov
add
mov
sub
lcall
out
push
mov
out
mov
xor
push
fiaddl
inc
into
dec
cmp
mov
xchg
cmp
loopne
addl
adc
sahf
repz
stc
movsb
ffree
cmpsl
roll
pop
sub
ror
dec
and
push
lods
pushf
pop
ret
dec
imul
jge
pop
popf
xor
loop
adc
add
pushf
lods
test
mul
cmp
pop
push
fnstcw
jp
repz
nop
pop
sahf
dec
cs
cld
ljmp
mov
mov
cltd
mov
and
dec
push
adc
cmpsl
xlat
add
sub
testl
xchg
add
and
in
add
js
mov
test
das
adc
and
xor
mov
jmp
xor
lret
mov
xchg
dec
repnz
jp
add
jno
adc
jl
sub
lahf
pop
lret
mov
sub
mov
dec
js
scas
mov
fs
ret
sub
jae
sub
movsl
pusha
stos
mov
xchg
inc
scas
mov
mov
push
out
push
enter
lret
xchg
jno
icebp
test
jb
inc
cwtl
repnz
shrb
imul
and
mov
add
jle
cmp
xlat
cltd
fs
jge
pop
dec
ror
ret
mov
movsb
jmp
and
icebp
scas
int
mov
pop
mov
or
mov
movsb
sbb
cmp
stos
inc
cltd
jne
mov
popf
dec
xor
cmp
test
jp
xor
jle
bound
sub
aam
ja
mov
push
pop
and
or
adc
fdivrs
mov
js
pop
inc
sbb
pop
push
lods
mov
xor
loope
add
pushf
mov
push
fwait
cmp
cmp
pop
cmp
test
fcomps
lahf
in
dec
push
jnp
cs
dec
xlat
xchg
div
int3
clc
outsb
fstpt
add
dec
or
in
fwait
ret
jl
sub
jae
lods
cmc
imul
cmp
ss
int3
push
cmp
jle
mov
cmp
jge
mov
sar
gs
mov
mov
cmc
fwait
fsubrs
andb
ja
scas
inc
stc
push
add
rcrb
cmpsl
ss
faddl
loopne
std
dec
popf
movb
push
or
flds
lods
adc
cmp
into
xchg
xchg
in
fsubrl
cwtl
mov
xchg
sub
cmc
out
xor
push
enter
jmp
cmpl
or
pop
test
sahf
push
dec
sub
dec
pop
mov
jmp
cld
mov
jno
adc
je
xlat
and
sbb
sub
mov
jo
or
sbb
in
push
jno
inc
lods
sti
roll
popa
mov
cli
mov
cmpsl
jo
iret
iret
mov
push
mov
and
pop
jno
rcrl
int
lcall
dec
adc
pop
ret
pusha
pop
push
jle
outsl
push
mov
data16
dec
add
gs
clc
xchg
addb
jg
dec
push
add
push
jnp
mov
nop
insb
insl
jno
inc
repz
jle
dec
out
jp
sbb
ja
push
jmp
rorb
int
movsb
mov
jp
jb
stc
icebp
jbe
cmp
pop
cwtl
lods
xor
loop
mov
adc
insl
pushf
sub
dec
out
cmp
aam
std
loope
xlat
mov
jg
sub
stos
push
dec
hlt
dec
cmp
sub
add
loop
cmpsb
cmpsb
xchg
clc
xor
scas
jb
mov
mov
fcoms
inc
stc
push
lret
out
mov
cmc
mov
adc
xchg
jbe
push
in
imul
in
pushf
and
cs
mov
orb
xchg
out
xchg
cmp
xchg
out
dec
cltd
repz
ret
imul
iret
aaa
jo
mov
loop
jae
mov
outsl
loope
fs
imul
pop
call
sub
pop
xor
movntps
scas
mov
lcall
data16
mov
pop
cmc
add
movsb
sbb
mov
call
aas
call
pop
dec
lret
mov
in
push
sbb
fisubrl
jle
rolb
cmp
out
xor
mov
mov
mov
xor
in
insl
mov
iret
leave
ss
mov
test
testl
mov
push
jp
push
aad
pushaw
dec
ret
mov
cli
push
orl
arpl
xchg
or
inc
inc
je
add
leavew
int3
leave
or
outsl
sub
mov
in
mov
xor
jne
lods
push
mov
leave
insb
out
cmp
lds
jb
inc
cmp
sbb
mov
xlat
sub
jmp
mov
das
sbb
add
insl
ret
or
and
cli
xchg
out
pop
jg
daa
cmp
mov
das
xchg
push
jae
std
inc
rcrl
dec
inc
mov
mov
test
cli
pop
push
inc
pop
mov
pop
pop
sbbl
dec
and
and
sahf
psubq
pusha
lods
mov
and
and
pushf
pop
dec
pushf
cmp
scas
test
scas
clc
addr16
fwait
sub
push
sub
sbbb
mov
ss
inc
cmp
movsl
or
bound
sub
fisubl
ret
int3
sti
jb
jae
cmp
movsb
push
mov
mov
jnp
sub
jb
cmp
pop
mov
pushf
stc
xor
jp
dec
gs
mov
pop
out
out
fmulp
mov
sub
jge
inc
push
imul
mov
mov
in
push
mov
ret
add
bnd
inc
jae
addr16
gs
icebp
sub
jo
push
sarb
sbb
mov
push
mov
repnz
and
adc
test
inc
xor
mov
pushf
pop
inc
mov
xchg
mov
inc
pop
push
mov
xchg
xor
sarb
cltd
stos
mov
xchg
sar
xor
test
lods
cmp
or
push
bnd
jno
and
test
cmp
insl
pop
out
add
out
movsb
and
sub
test
arpl
sbb
or
mov
ret
stos
aaa
jo
inc
jmp
mov
mov
ret
cltd
fcomps
pop
xor
pop
cwtl
pop
sub
orb
jmp
and
icebp
pop
add
jo
mov
sbb
mov
ljmp
scas
lods
out
and
dec
pop
xor
daa
or
gs
cmp
pop
mov
out
inc
xorb
jl
inc
fildl
outsl
mov
mov
pop
pushf
xor
sahf
pop
or
cmp
lock
mov
loop
sarb
xlat
mov
jmp
test
pusha
les
push
call
roll
test
mov
push
shrb
jl
push
jno
clc
inc
shrl
pop
mov
aad
hlt
mov
push
xchg
sub
inc
and
push
mov
mov
mov
jae
movsb
insb
dec
mov
int3
daa
inc
or
push
push
add
mov
test
jp
jle
std
xchg
xchg
add
popa
addr16
jno
and
popf
xor
movsb
jb
pop
out
mov
pusha
push
sub
frstor
and
mov
mov
in
gs
lea
out
mov
jno
sub
aas
push
adc
out
sub
fdivl
repz
subl
dec
gs
idivb
pusha
stos
xchg
cld
loopne
mov
pop
lret
std
push
adc
test
aas
ror
inc
inc
leavew
imul
jnp
mov
mov
push
mov
or
mov
and
xlat
jg
xchg
insb
mov
leave
repnz
adc
jecxz
jnp
mov
insb
aad
gs
mov
pop
insl
cmpb
imul
adc
ljmp
dec
mov
clc
jmp
sbb
push
mov
cli
clts
dec
cmp
xchg
fisttpl
adc
lea
cltd
int
dec
fcom
jne
add
cmp
mov
stc
add
ss
fimuls
and
push
dec
test
lock
dec
and
push
jge
int3
push
sbb
push
xor
fadd
xor
jo
jecxz
push
test
pop
inc
popf
outsb
es
loope
mov
subb
sahf
sbb
mov
int
xor
jmp
scas
push
and
jp
repnz
mov
mov
jbe
lods
push
sbbb
gs
fstps
or
add
fisttps
push
sbb
data16
test
xor
sahf
push
lcall
dec
ret
push
fcoms
call
mov
sbb
icebp
and
inc
call
ljmp
pop
pop
test
popf
test
imul
in
jle
xorl
inc
push
lds
sub
mov
mov
xor
jmp
bound
not
xchg
insb
mov
pop
pcmpeqw
aas
xor
cmc
mov
or
les
sub
inc
cmp
cmp
ret
fcmovnbe
dec
dec
jae
out
xor
addr16
cmp
cmp
or
push
out
mov
adc
mov
cwtl
loopne
bound
stos
pushf
mov
or
mov
inc
pop
jb
xchg
repnz
int3
jp
in
clc
add
sarl
in
sarl
sbb
push
push
mov
loop
inc
inc
mov
sbb
out
popa
adc
mov
and
sbb
fisubrs
stos
inc
and
fstl
icebp
add
repnz
mov
les
jns
mov
push
sub
in
pusha
test
xor
sbb
test
xchg
out
sbb
xchg
and
ret
fists
add
js
xor
fwait
int3
hlt
mov
xchg
pop
sub
cmp
dec
or
test
sahf
dec
and
clc
movsl
mov
sarl
rcrb
cmp
inc
sub
sar
pop
inc
insb
adc
mov
mov
fcoml
scas
insl
in
test
sub
stc
push
in
repnz
sub
out
inc
jecxz
bound
out
xor
inc
aas
ds
negl
xchg
aaa
push
pop
cmc
pop
pop
fidivrl
mov
aas
and
test
movsl
adc
cmp
cwtl
int3
pusha
jbe
add
fcomi
xor
les
jbe
pop
popa
cmp
pop
aam
fildl
jmp
cmpsb
add
cld
movsl
mov
dec
mov
xor
imul
scas
or
lods
xchg
fbld
call
leave
jg
sbb
mov
sub
scas
and
cmp
mov
pop
imull
test
jnp
icebp
fimuls
lcall
adc
cli
imul
pop
shll
inc
cmpsw
cmpsl
cld
inc
and
xchg
dec
int
lods
dec
sub
sub
add
jb
mov
mov
inc
adc
fnsave
loopne
xchg
orl
loop
dec
repnz
xor
dec
xor
inc
mov
es
mov
insb
jg
repz
popf
mov
lds
lahf
mov
scas
or
or
jmp
das
ds
fucomi
lods
fmull
dec
pushf
inc
xchg
cmp
pop
test
or
in
xchg
jmp
push
repnz
jle
test
xorb
mov
es
orl
rcll
nop
test
mov
call
push
pop
fisubs
mov
mov
dec
out
jae
inc
dec
sbb
and
test
jp
cmp
leave
and
mov
fs
adc
movsl
imulb
mov
sti
adc
pop
hlt
and
pop
mov
or
sbb
cmp
mov
adc
idiv
into
loopne
in
dec
aas
inc
push
in
sub
movsl
in
jns
in
xor
push
adc
pop
stos
xor
mov
sbb
jne
loop
aas
sub
mov
jmp
xchg
int3
xor
push
outsb
dec
enter
imul
jmp
pop
insb
xor
and
pushf
xor
leave
jo
inc
or
popa
gs
adc
gs
add
xlat
xor
or
daa
push
std
cmp
xchg
cltd
mov
stos
out
ret
rcrl
mov
fcmovu
cld
leave
gs
ficompl
sub
pop
adc
cli
jge
ljmp
add
pusha
call
les
sbb
sbb
push
jo
mov
mov
lahf
aaa
jecxz
or
or
jns
outsl
push
push
push
jmp
insb
add
test
sbb
cmp
mov
repz
mov
fwait
lret
mov
lods
cmp
fs
or
cwtl
shlb
ret
xchg
pop
sub
jmp
movl
shl
dec
aaa
movsl
push
lcall
fbstp
push
mov
or
pop
cmp
push
loope
inc
mov
xor
or
shr
mov
mov
push
and
push
jp
xchg
lret
push
movsb
pop
fsts
je
cmp
inc
movsb
sti
mov
jmp
push
stos
add
mov
jns
stc
xchg
xor
cmp
adc
jecxz
jecxz
in
das
push
lock
insl
nop
mov
sub
xor
fdivs
nop
jo
mov
inc
int
negb
ljmp
push
ret
xchg
out
add
adc
pop
fadds
repz
mov
pop
xchg
push
loopne
sahf
ds
xor
or
test
and
jae
es
sarl
hlt
inc
mov
daa
pop
jmp
js
pop
idivb
cmp
or
jecxz
xchg
imul
cs
dec
xchg
sub
xor
std
repz
and
jmp
add
test
jp
sub
out
xor
loop
into
bound
xchg
scas
sti
sarb
sbb
lcall
xor
inc
fistpl
jl
std
lock
push
dec
stc
jae
mov
in
mov
push
cmp
push
inc
jbe
mov
mov
push
jbe
iret
daa
mov
push
out
push
and
jecxz
roll
mov
pop
fwait
adc
subb
js
push
xor
jno
cmc
adc
out
pop
stos
movsl
xlat
test
clc
dec
shlb
fsubs
mov
mov
lcall
jl
mov
int3
shr
bound
mov
push
mov
dec
lea
lds
insl
inc
push
lock
sbb
mov
in
or
pop
lods
and
cmp
mov
sbb
fidivs
jge
fcomp
sub
pop
test
mov
add
mov
dec
dec
das
leave
mov
fcoml
aad
call
add
in
int
xchg
mov
mov
out
xor
roll
mov
cltd
xchg
insl
or
and
aam
aam
or
adc
testl
clc
pop
ret
clc
and
inc
popa
jecxz
add
cmp
notb
and
clc
xlat
cli
inc
cmp
jmp
loopne
lcall
pop
lahf
inc
mov
mov
add
fcomp
scas
mov
in
rcrb
dec
dec
dec
pop
into
clc
jns
sbb
sbb
in
adc
fadds
nop
jne
jmp
push
insb
jb
xchg
add
leave
jp
mov
or
in
nop
add
stc
sbb
sbb
shl
cmpsb
and
loope
push
int3
dec
xor
pop
mov
push
xor
cmp
sub
movsb
imulb
dec
divl
jle
or
or
mov
enter
repnz
sub
dec
movsb
dec
jno
pop
sub
pop
mov
mov
je
sbb
mov
sti
and
mov
or
int
mov
pushf
fldcw
lock
mov
cmpsl
add
cmpsb
jne
jne
pop
and
and
out
fldenv
aam
pushf
lods
cs
adc
cmc
mov
push
mov
movsl
std
sub
mov
cmp
and
dec
and
and
in
imul
push
pop
mov
fmulp
mov
mov
mov
fwait
mov
jge
addr16
ss
sti
adc
and
ds
jmp
aas
cmp
imul
adc
loop
rcll
dec
out
mov
cmp
sti
lret
mov
popf
leave
mov
fisttps
int
call
jg
mov
test
cs
and
lods
sbb
insb
sub
and
lcall
mov
shlb
in
add
fcoml
inc
fists
into
jae
and
loop
mov
xor
lea
adc
stc
xchg
sbb
jp
pop
outsl
fnstenv
push
test
push
fs
dec
jecxz
mov
xchg
or
into
push
or
fstpt
sbb
add
aam
mov
rol
lea
clc
aad
xor
test
rolb
or
mov
mov
shld
insl
bound
push
clc
loope
outsb
icebp
mov
mov
dec
jp
fmul
push
das
data16
test
repz
popf
fldcw
decb
lret
cld
dec
or
sti
faddl
ret
xchg
idivb
stos
xlat
andb
lahf
sub
insb
stc
lods
xchg
mov
jmp
lret
mov
or
jecxz
xchg
cwtl
aad
movsl
mov
xlat
mov
dec
scas
out
jo
add
daa
shll
or
sub
add
cmp
jp
int3
test
cmpsb
loope
repz
aad
mov
dec
subl
mov
push
xchg
or
or
pop
jo
inc
mov
loop
or
scas
ds
shll
fs
sub
dec
mov
cmp
xchg
mov
mov
push
insl
arpl
lret
pop
and
lea
addb
ror
aas
add
xchg
sahf
push
cmp
fldenv
pop
push
xlat
add
cmp
dec
pop
push
and
sub
mov
es
insb
xor
lahf
mov
mov
pop
cli
cmpl
mov
jmp
mov
inc
data16
cwtl
push
xlat
mov
outsb
popf
sbb
inc
test
mov
icebp
sub
mov
inc
test
jl
scas
cmc
enter
arpl
add
jne
and
or
mov
add
fstpl
out
fwait
push
jp
shlb
mov
xor
xchg
enter
repz
test
sbb
std
adc
dec
mov
jnp
xchg
je
push
adc
aaa
dec
xchg
pusha
adc
into
or
jg
sahf
cmp
push
cmp
mov
lds
mov
jbe
js
add
inc
xor
out
mov
ret
dec
sub
and
adc
sti
cmpsb
push
adc
pop
jns
lods
xor
ret
jbe
and
std
cmp
cmpsl
je
xor
sub
pushf
xlat
nop
and
lret
lds
mov
push
mov
loope
adc
loope
int3
jge
arpl
cwtl
in
cwtl
aam
and
mov
cmp
les
fisttpl
mov
mov
mov
fisttpl
mov
jle
mov
roll
jmp
imulb
ret
insl
pop
jnp
inc
sbb
cs
jne
test
sub
push
push
adc
mull
pop
push
jl
push
icebp
sub
into
mov
mov
inc
push
inc
mov
out
push
mov
xor
jl
jg
jnp
pop
lcall
xchg
dec
mov
sahf
adc
mov
pushf
insl
outsl
jnp
mov
lret
ficoml
push
and
or
jl
dec
inc
mov
call
jge
ret
rorb
ja
enter
cwtl
adc
shrb
xchg
rclb
fs
xchg
mov
mov
xor
je
add
inc
jge
mov
sub
and
je
loope
fwait
enter
das
adc
sti
aad
add
aam
popa
add
enter
shl
push
or
jo
stos
dec
int3
xor
add
cli
jg
setle
cwtl
cmpsl
or
sub
fwait
sub
mov
mov
pop
roll
push
mov
scas
xchg
loopne
jne
cmp
mov
mov
pop
adc
sbb
lahf
push
out
lods
ss
cmpsb
lret
push
dec
ss
xlat
sbbl
mov
or
sbb
push
cltd
or
push
sbbb
pusha
mov
xchg
jns
sub
add
and
jnp
das
insb
push
sahf
nop
fcoms
fbstp
enter
jns
enter
lret
mov
sti
xchg
add
movsb
aas
test
mov
test
test
sbbb
pop
cmpsb
adc
jg
pop
jnp
or
das
jb
xlat
pushf
rcrl
push
cmp
xchg
xor
lret
sarb
bound
incb
mov
mov
jae
sbbb
fisubrl
daa
xlat
stc
jge
sbb
ret
cltd
and
cs
push
jle
cmpsb
lret
sbb
popf
adc
add
pop
mov
and
in
loop
div
sbb
rcll
xchg
mov
push
mov
inc
push
or
mov
stos
into
mov
jmp
ja
mov
inc
mov
xor
popa
xchg
jo
outsb
jg
or
xlat
mov
push
daa
mov
jno
add
add
sub
xor
cmp
dec
inc
rclb
xor
dec
cmp
fwait
add
lock
push
aas
and
ja
subl
daa
sub
pop
outsl
cmpsb
test
jp
cmp
shll
cld
lahf
dec
in
push
adc
leave
dec
inc
xchg
inc
sub
adc
outsl
mov
mov
add
inc
repnz
and
pusha
lahf
fsubl
cmc
pop
rcrb
je
jg
jmp
mov
stos
jmp
outsl
dec
and
sahf
mov
push
fs
sub
mov
cwtl
ret
outsl
rorl
sarl
test
je
aad
dec
inc
cmp
ret
pop
repnz
xchg
enter
xor
test
lahf
sbb
lods
dec
lret
xlat
je
push
ror
ljmp
pop
pop
mov
jae
repz
test
insb
inc
pop
into
inc
cwtl
ss
je
aas
inc
mov
fbstp
pcmpeqw
pop
or
jb
jno
xchg
lcall
call
adc
adc
add
fstpt
sbb
fildl
add
cmpsl
mov
pop
sbb
sbb
aam
in
dec
dec
cmpl
loopne
lahf
lock
aam
xor
lock
lds
outsl
mov
sarb
inc
mov
jo
mov
xchg
xor
shlb
hlt
mov
gs
inc
inc
cli
popa
adc
jle
xchg
sahf
sarb
and
hlt
imul
lcall
sbbl
test
fimull
mov
ds
lahf
int3
xor
mov
xor
movsl
stc
in
shll
push
mov
fmuls
jmp
shrb
sbb
aad
inc
mov
jmp
or
and
cli
das
push
xorb
lods
call
ds
jnp
jle
push
ds
mov
pop
sahf
add
imul
mov
in
mov
push
xor
cmpsl
add
ds
stos
xchg
rorl
fs
stc
icebp
sub
arpl
mov
loopne
notl
or
xchg
fcmovnbe
aam
mov
arpl
add
and
insl
mov
in
stc
lea
add
add
dec
imull
pop
repnz
ljmp
ret
add
xchg
or
pop
adc
jbe,pt
inc
ret
bnd
mov
dec
jmp
adc
xchg
or
lret
cmp
loop
and
arpl
iret
or
clc
xchg
adcl
mov
adc
mov
ret
mov
inc
es
xchg
push
xchg
je
or
dec
les
sbb
inc
out
xchg
loopne
xchg
addr16
shr
mov
jne
imul
lods
movb
push
aad
icebp
mov
fisubs
inc
lretw
push
sti
inc
or
mov
sbb
cmc
int3
in
cmpsb
lea
cmp
test
or
aas
or
sahf
das
xor
in
push
xor
cmpsb
dec
inc
pop
mov
pop
in
cmc
repnz
xchg
mov
mov
mov
and
and
pop
fdecstp
jnp
mov
mov
dec
jno
lea
js
fadds
mov
adc
xor
testb
xchg
push
sarl
cmp
inc
mov
sub
mov
mov
ret
xor
into
leave
mov
sub
xchg
cli
pop
out
mov
jne
shrl
stos
lods
push
pushf
xchg
cmp
pop
pusha
out
call
or
add
in
lock
std
dec
mov
xchg
stos
ja
popf
and
xlat
sbb
test
fwait
sbb
in
movsb
push
pop
sahf
nop
in
movsl
clc
mov
and
shll
pop
mov
sbb
cmp
inc
test
sub
in
in
sub
out
pop
dec
lods
icebp
xor
or
add
sub
mov
inc
push
iret
pop
fdivl
push
mov
lock
mov
mov
or
fmull
sahf
lods
jl
pusha
clc
rcrb
mov
or
mov
push
arpl
push
loop
adc
add
add
add
add
add
adc
add
cmpsb
jle
xchg
pop
dec
repnz
int
mov
jmp
sub
mov
and
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
inc
std
pop
outsb
pop
mov
cwtl
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
mov
add
inc
jp
add
loopne
adc
add
nop
add
add
add
in
add
movl
or
add
add
jno
xchg
jae
and
add
add
add
add
add
rorb
add
xor
add
xor
adc
test
inc
imul
insl
mov
adc
cmp
popf
out
je
inc
loop
pushf
sbb
xor
jmp
cmp
insb
xchg
pop
icebp
fnstsw
repz
mov
inc
in
aad
lds
and
add
lcall
xchg
cmp
repz
fistps
sti
addr16
xchg
in
cwtl
inc
and
sub
ret
lods
dec
dec
test
adc
dec
mov
cmp
xchg
dec
and
adc
rsm
or
mov
or
fldt
outsl
cmc
sub
xor
xlat
push
je
cmp
cmp
test
mov
sbb
je
sti
jns
mov
mov
fdivrs
inc
dec
jo
outsl
cmp
sbb
push
lds
stos
fwait
mov
jo
sub
jbe
push
jle
sbb
or
inc
addr16
test
add
and
xchg
mov
mov
data16
adc
adc
xor
pop
cmp
icebp
lods
cmc
cmp
jne
mov
mulb
fisttpl
cli
or
into
scas
addr16
shl
jg
out
mov
ret
outsl
ds
cmp
loopne
push
sahf
sub
nop
xor
push
sbb
inc
jp
je
filds
mov
mov
call
test
repz
cmp
loope
adc
push
dec
or
das
movsl
test
add
adc
iret
jl
pushf
inc
cvtps2pi
or
repnz
jl
or
cmpsb
into
mov
mov
in
repnz
xor
js
cltd
xor
sub
mulb
test
adcl
outsl
jo
je
push
mov
xorl
sub
lcall
sbb
fwait
mov
push
and
scas
mov
xor
dec
sbb
jne
pop
cmp
andl
cmp
scas
fistpl
or
inc
pop
test
or
or
inc
adc
arpl
pop
iret
fistl
loop
icebp
mov
jg
stos
mov
sub
or
test
mov
dec
dec
sbbl
mov
jg
js
sub
sbb
stos
clc
movsl
pop
shl
pmovmskb
cmc
addr16
nop
cmc
std
and
sahf
add
push
fwait
mov
or
xor
mov
mov
xor
pop
imul
dec
jg
fbstp
sarl
cwtl
mov
cmp
fdivrs
std
call
push
push
mov
cmp
sbb
stos
pop
add
sbb
or
and
outsl
bound
and
inc
popf
ss
pop
mov
jmp
movsb
push
dec
sbb
mov
pop
xor
fbld
jl
jmp
lcall
sti
lahf
add
loop
jne
mov
push
sbb
mov
mov
push
mov
fcmovnb
jne
push
fnstenv
jno
leave
xor
fwait
sbb
test
push
mov
add
es
fcmovnbe
lret
notb
out
xchg
jo
pop
repnz
cltd
shll
lock
push
and
mov
xor
sub
int3
inc
adc
ja
jp
sbb
aam
mov
xchg
xchg
nop
ds
inc
jns
sbb
mov
insb
ret
out
dec
pop
hlt
pop
orb
and
and
jg
ss
pop
adc
cmp
sub
rep
cmp
fisubrl
rorb
out
cmpl
loope
or
mov
sarb
orb
lock
xchg
push
aaa
sub
out
mov
mov
inc
out
xchg
cmpsl
pop
repnz
movsl
mov
roll
and
scas
jmp
inc
xchg
mov
jnp
adc
dec
inc
insl
shlb
imul
fs
das
call
jno
dec
fadds
test
fsubr
pop
repnz
scas
rcll
outsl
inc
clts
jae
jo
lds
lds
or
idivb
push
and
mov
jmp
popa
sahf
out
add
jge
in
inc
adc
mov
sub
andnps
add
cmp
mov
insb
movsb
sahf
pop
cwtl
mov
sub
in
mov
mov
cmp
jae
loopne
jnp
add
addb
movsb
cmp
cmp
shrl
sbb
subl
xchg
nop
js
push
pop
xor
adc
cld
xchg
fdivrp
push
inc
gs
or
aam
push
std
mov
jp
pop
loopne
stos
fdivrs
lds
test
inc
pop
inc
mov
sub
outsl
std
enter
mull
in
cs
data16
mov
lock
stos
add
aas
loop
push
fisubs
pop
jecxz
mov
stc
insl
xchg
jmp
fs
gs
mov
repz
jns
cmp
xchg
push
mov
int3
data16
add
inc
insb
jmp
sti
insl
std
inc
hlt
sbb
lods
cmpsb
dec
imul
out
vorps
dec
xor
sbb
ja
jl
mov
lds
mov
loopne
ljmp
lock
mov
aas
fmull
mov
and
cs
fucom
mov
add
mov
add
cs
cmpl
push
fnstsw
aas
sbb
sub
lods
lds
push
ss
xorb
sti
imul
xchg
adcl
cmpsl
mov
dec
add
sub
mov
mov
or
lock
jno
adc
inc
or
jne
test
insl
jmp
lds
out
orb
jmp
dec
mov
push
xchg
xchg
call
sub
sub
imul
push
add
or
add
movsb
and
cmc
aad
js
xchg
sub
add
cmc
push
xchg
add
push
jo
inc
dec
out
push
ror
dec
inc
stos
push
xlat
arpl
mov
fsubl
fstp
popf
decb
aas
push
push
xchg
jl
loope
pop
or
out
add
mov
pop
ficomps
leave
aam
gs
mov
and
mov
jb
jo
cmc
ljmp
or
push
rcll
dec
repnz
leave
mov
jp
les
daa
das
mov
xor
jge
imul
mov
je
repnz
mov
stos
mov
insl
adc
ss
lods
scas
push
call
iret
and
ljmp
add
mov
adc
fsubrl
nop
and
add
ljmp
mov
and
pop
fldcw
inc
lds
jns
xor
popa
xchg
mov
lods
mov
daa
or
pop
mov
inc
mov
cltd
xchg
rcrb
pop
xchg
cli
int
in
push
and
mov
jb
push
frstor
cs
sbb
mov
inc
xchg
bound
cmpsb
dec
mov
out
xor
jge
pusha
addb
test
cmp
outsb
shlb
aaa
test
jge
xchg
xchg
pop
imul
cwtl
cli
stos
jmp
jns
mov
cmpb
dec
mov
aas
in
cmp
push
pusha
jne
jle
mov
push
rcr
dec
cmovb
and
data16
addb
and
xor
repnz
cmp
mov
cmpsl
mov
cs
or
call
arpl
add
mov
cmpb
ja
jle
sub
xchg
stc
push
cmpsl
scas
lahf
mov
jnp
and
and
push
pop
sub
pushf
mov
mov
cmp
fabs
adc
test
data16
out
pusha
scas
mov
ror
sarb
pop
mov
sbb
ja
push
and
mov
or
pop
mov
dec
xchg
jge
call
jnp
cli
lods
mov
push
jmp
sub
push
shrb
test
push
push
fimuls
mov
bound
js
inc
outsb
into
je
outsb
xchg
inc
push
push
imul
cmpsb
mov
cmp
aad
test
out
mov
push
cmp
push
imul
adc
ds
jae
jb
adc
sahf
aas
ficoms
addr16
jae
dec
xchg
add
dec
ljmp
push
inc
pushf
push
pop
xor
dec
xor
mov
or
in
popf
fistps
aas
comiss
pop
add
rolb
dec
das
mov
cmpsl
int
fisubs
call
or
sub
add
shlb
inc
out
dec
push
leave
or
mov
jg
push
subb
test
add
in
dec
add
xor
xor
dec
test
aam
fdiv
sahf
pop
push
cwtl
roll
loopne
and
dec
mov
imul
test
mov
lahf
push
loop
jmp
mov
das
out
lahf
dec
mov
push
lds
jmp
aad
mov
sub
outsl
out
ficomps
insl
das
inc
jb
iret
pop
jbe
clc
shlb
jns
push
lods
add
out
sub
push
movsl
stos
mov
cli
pop
adc
adc
mov
scas
jmp
pop
pop
stos
pop
scas
sti
mov
fnstsw
adc
adcl
mov
mov
mov
jp
xchg
sub
icebp
sbb
aam
sti
sti
dec
int
dec
je
jo
sahf
pusha
pop
lods
cmpsb
lods
jl
icebp
andl
mov
sbb
imul
cmp
and
stc
insb
or
test
fwait
and
lock
test
add
mov
ret
lret
cmp
shll
sbb
adc
lods
jp
in
outsl
ja
pop
xchg
add
pop
sbbl
jbe
mov
mov
addl
add
ret
xor
lods
or
xor
xchg
mov
dec
pusha
aas
inc
mov
popa
std
and
push
and
mov
in
jno
sbb
bound
adc
sbb
mov
rcrl
sub
jno
out
icebp
sub
incb
mov
faddl
push
repz
inc
ja
mov
pop
gs
daa
mov
popf
dec
dec
inc
sub
xor
je,pn
enter
xor
mov
out
stc
movsl
dec
push
out
mov
xchg
mov
jae
or
jl
mov
sub
popf
and
xor
and
int3
jge
mov
mov
jmp
mov
fdivl
lods
push
mov
daa
fs
call
ret
ds
out
pop
rol
inc
mov
dec
push
inc
inc
loope
lds
iret
pop
mov
dec
hlt
pop
cli
inc
mov
fistps
into
fdivrs
mov
imul
and
adc
push
mov
cmp
add
push
mov
jl
cmp
stc
nop
lods
mov
loope
push
lock
jecxz
inc
outsb
shr
out
lods
or
stc
repz
jno
mov
and
fdivrs
adc
lock
pop
dec
sbb
icebp
and
mov
mov
xor
xor
xor
cld
stos
hlt
xor
divl
jbe
test
cmp
push
push
mov
shl
cmpsl
testb
dec
int
iret
das
mov
mov
cwtl
inc
cmpsl
fidivrs
sub
cltd
jecxz
cmp
rcll
mov
xchg
gs
test
aad
xor
dec
pop
pusha
add
cmp
mov
lods
cmpsb
aas
or
fcompl
imul
push
stc
pop
dec
out
or
stos
popa
push
push
hlt
sarl
or
mov
test
cwtl
cltd
sub
jbe
xchg
or
jle
dec
mov
movsl
xchg
roll
fnstenv
scas
clc
or
leave
xlat
sub
sarl
mov
ret
iret
mov
ds
or
mov
in
add
sahf
dec
aaa
lcall
or
push
jo
push
std
inc
push
enter
adc
xor
imul
jo
cltd
jp
shrd
mov
push
pop
insl
les
xchg
jns
rcl
fildll
mov
fs
jns
pushf
and
cs
repnz
fdivrl
xchg
xchg
iret
ret
fs
aam
add
bt
call
xchg
push
addb
les
inc
jecxz
cli
inc
mov
enter
lock
aad
sbb
dec
dec
fsub
daa
insb
rolb
roll
push
nop
and
cmpsl
clc
rcr
sbb
lods
mov
add
mov
mov
fisubl
jmp
sub
out
mov
in
xor
cmp
pop
insl
call
mov
and
and
push
out
repnz
loop
enter
jbe
xchg
and
pop
cmc
sbb
scas
mov
je
xchg
mov
sbb
dec
xchg
and
mov
jno
lods
gs
or
push
and
es
xor
nop
mov
flds
sbb
jle
repnz
push
dec
sbb
jmp
lret
orb
xor
in
mov
or
xchg
ret
punpckhdq
xor
xchg
adcl
xor
inc
stos
movsl
pop
jne
mov
sub
xor
cmp
cwtl
shufps
xchg
cmp
je
mov
add
ret
outsb
push
fsubs
ds
scas
add
into
inc
test
faddl
mov
jo
xchg
xor
add
lcall
push
or
jb
in
cmpsb
negl
push
push
sbb
cmp
fimull
or
xchg
mov
mov
lea
lds
push
mov
jl
mov
lea
xchg
and
popa
fwait
rorb
fiaddl
rclb
push
mov
arpl
stos
push
push
cltd
daa
inc
mov
mov
lods
inc
ror
cmp
mov
cmp
aam
jmp
andb
jecxz
xor
nop
jns
test
cmpsb
pop
cmovl
sar
lock
xor
out
gs
jg
sbb
movsb
cli
mov
and
sub
push
xor
cld
xor
in
sbb
pop
pop
add
pop
jno
add
mov
pop
in
int
outsl
pop
repz
addr16
ret
xchg
xchg
and
les
fcmovb
pop
data16
sbb
adc
mov
js
jne
sbb
mov
lods
out
dec
sub
mov
popf
cmpl
insl
andb
stc
lea
mov
inc
cmpb
push
sub
push
xchg
aas
mov
mov
push
inc
push
cmp
or
and
mov
insl
lods
dec
ljmp
add
jnp
js
sub
xchg
xchg
imul
push
mov
pop
sbb
test
ds
jne
lds
sarb
hlt
scas
sub
in
jbe
aaa
push
push
adc
jmp
iret
mov
mov
or
shlb
call
push
test
jns
add
xchg
dec
lcall
add
adc
int
push
jb
lods
aaa
and
mov
stc
xchg
adc
leave
call
and
sub
or
mov
mov
xor
xchg
cwtl
out
mov
insl
push
mov
sti
xor
push
loopne
and
mov
scas
lds
out
xor
out
pop
mov
dec
fcoml
stos
sub
push
test
push
cli
add
mov
sbb
in
test
mov
and
xchg
divl
xor
lods
pop
xchg
pushf
inc
mov
cmp
jecxz
xchg
fisttpll
fiaddl
push
mov
clc
dec
xchg
and
arpl
mov
push
xchg
enter
daa
jb
pop
pushf
cld
movsl
cli
add
fs
imul
testb
push
jg
jl
mov
daa
mov
pop
inc
adc
or
sbb
jb
aad
mov
jo
add
ret
mov
add
dec
pminsw
outsl
das
pop
xor
pop
insb
jp
mov
js
arpl
push
jmp
outsb
dec
data16
repz
movsb
movsl
sti
push
mov
add
add
mov
cld
test
xor
mov
in
fwait
shll
lret
or
das
push
xor
dec
xchg
sti
adc
dec
jecxz
lahf
and
in
cs
and
jg
jle
mov
fistpl
nop
xor
adc
arpl
jo
pop
lret
pop
cli
lods
inc
jmp
jmp
shll
cmc
pop
es
dec
jg
adc
cmpsl
fcmovb
ja
enter
decl
incl
jns
inc
dec
jmp
or
inc
mov
enter
clc
cmp
cmp
add
and
ficompl
adc
stos
jle
iret
sbb
jbe
fldt
sbb
rolb
or
fxch
or
cmc
mov
inc
stos
sti
test
or
or
xchg
dec
outsl
adc
xchg
clc
mov
and
stos
cmpsl
pop
fwait
into
ret
lea
cs
aad
iret
es
insl
or
push
cmp
xlat
nop
in
jns
repnz
scas
fistpll
xorb
add
loope
mov
imul
gs
cmpsb
jns
mov
ret
fstpt
stc
pop
dec
leave
call
stos
add
loopne
mov
outsb
dec
shrl
mov
mov
imul
push
mov
dec
in
mov
jnp
mov
fwait
mov
inc
xor
int
imul
lds
pop
nop
and
stos
add
pop
inc
scas
mov
ret
push
and
mov
jno
adc
xchg
xchg
scas
fsubl
jb
lret
pop
xchg
jo
in
mov
popl
pop
lea
xchg
dec
or
or
mov
sbb
sub
scas
movl
dec
call
xor
daa
inc
in
xchg
mov
mov
sbb
xchg
xor
lcall
in
stc
push
sbb
pushf
and
stos
arpl
push
imul
fistpl
in
stos
int3
testl
daa
movsb
pop
pop
repz
in
mov
or
add
push
mov
push
mov
fnstsw
outsb
shr
adc
xchg
jg
stos
mov
inc
cmpsb
or
bound
add
bound
push
xor
jbe
inc
pop
pop
pop
inc
dec
mov
test
cmp
lods
mov
dec
mov
dec
xor
pop
push
out
mov
add
push
out
xchg
mov
add
es
dec
add
cmpsl
outsl
cpuid
out
imul
pop
xor
fidivrl
push
mov
cmp
sahf
sub
popf
je
push
and
jb
xor
fwait
dec
lock
adc
popf
mov
mov
pop
pop
add
cmp
mov
xor
ss
decb
jge
mov
add
movsb
lods
int
xchg
jl
movsb
or
cld
mov
pop
in
inc
fucomip
jg
fiadds
xchg
stos
jo
jle
dec
cmp
pop
pop
ss
adc
ja
lea
fistpl
test
mov
mov
std
mov
fstpl
enter
outsl
inc
mov
pop
inc
xor
push
les
mov
mov
jae
mov
inc
cmp
stos
adc
cmp
sbb
repnz
mov
sbb
mov
out
push
cli
xchg
xchg
out
xor
movsl
push
adc
push
cmp
pop
push
aaa
pushf
sub
addr16
sbb
sub
in
cld
rcll
jle
adc
adc
add
inc
push
and
fcomi
jp
sub
or
dec
jge
cmpsb
pop
xor
pop
js
inc
ss
jae
pop
inc
fnstcw
xchg
and
adc
add
imul
and
cmpsl
dec
aam
mov
dec
movsb
mov
cli
das
arpl
popa
mov
xor
test
inc
stc
sbb
cwtl
xor
jae
repnz
adc
outsl
popf
aam
cmpsb
stos
iret
addb
jo
das
sub
mov
fsqrt
adc
mov
arpl
and
ljmp
repz
rcll
and
out
arpl
jb
xlat
pop
add
mov
xchg
pop
sar
das
icebp
sbb
stos
scas
stos
sub
cmp
mov
mov
jge
pop
enter
cmp
jb
sbb
iret
out
mov
data16
mov
and
adc
cli
pop
and
lods
mulb
jmp
ljmp
or
out
mov
jo
pop
out
andl
scas
stc
sub
inc
mov
pop
repz
repz
mov
add
adc
add
cwtl
sbb
scas
push
out
cmp
xchg
pushf
shl
mov
sbb
dec
movsl
arpl
cmpsl
mov
mov
jmp
dec
xor
and
mov
dec
or
daa
imul
loopne
fmull
xor
mov
icebp
sub
sub
mov
jp
xor
pop
inc
mov
pop
pop
pop
leave
scas
lods
aaa
sbb
mov
insl
daa
fstpt
cmovae
imul
jno
lods
adc
aad
xchg
in
xchg
pop
mov
xor
cmp
rcrl
mov
mov
sub
cs
in
aam
push
adc
rclb
fwait
loopne
loop
iret
icebp
push
lcall
push
dec
movsb
push
rcll
dec
push
sub
leave
bound
fucomp
cld
jmp
flds
pop
cmp
fdivrl
mov
push
push
ja
jnp
js
testb
pushf
lods
mov
or
jmp
mov
or
insl
lods
xchg
mov
nop
hlt
outsb
cmp
jbe
push
out
lea
stos
cltd
inc
lret
lods
mov
add
xor
fistpll
jo
jle
int3
adc
pop
cmp
jecxz
mov
in
mov
repz
pop
repz
or
push
xchg
sbb
popf
xlat
xor
inc
arpl
add
ss
xchg
scas
mov
cli
popa
bound
das
pop
incl
inc
or
mov
lahf
pushf
xor
fdivrs
mov
loop
lea
sbb
scas
jae
push
and
out
scas
push
leave
popf
mov
cmpsb
pop
jp
iret
adc
sbbl
xchg
push
fisubrs
dec
sbb
out
mov
pop
test
adcl
jle
xlat
mov
xchg
stos
icebp
inc
fbld
fcoms
fistpl
fcmovnbe
add
or
lds
jmp
iret
loop
or
hlt
neg
ret
mov
rclb
inc
loope
cltd
or
negb
jle
mov
arpl
sarl
stos
inc
lcall
ret
roll
fists
pop
andb
jl
adc
pop
push
out
out
xchg
cmp
jns
mov
scas
fmul
push
aaa
mov
inc
pushf
sbb
dec
into
dec
xor
xor
mov
sbb
jns
inc
daa
xchg
sub
dec
sub
jg
in
mov
lcall
sub
pushw
and
and
fwait
repz
push
loopne
and
jne
lock
test
xchg
jns
lods
cmp
hlt
mov
and
mov
ret
mov
xlat
push
movsb
jns
pop
dec
cmp
mov
push
into
fnstenv
jo
in
or
mov
outsb
xor
mov
int
jnp
mov
mov
repz
les
push
sti
push
pop
xor
push
xchg
mov
icebp
mov
incb
ret
inc
ret
cmpsl
imul
aad
add
in
je
xchg
mov
pop
in
repz
mov
cmova
scas
jge
mov
mov
leave
lea
dec
pop
and
pop
xor
mov
mov
mov
sbb
rolb
adc
inc
addr16
push
test
mov
adc
test
call
loop
js
imul
add
repnz
loope
jg
rcr
push
nop
fldenv
sbb
xor
xchg
stos
adc
push
pop
fwait
iret
xor
nop
cmpsl
sub
pop
adc
addr16
mov
dec
xor
mov
in
mov
xchg
or
mov
pop
cmp
pushf
mov
dec
int3
jb
sbb
inc
insb
sub
test
cmp
outsl
test
in
xor
outsb
rep
stc
push
test
push
mov
dec
push
pop
pop
sub
mov
fwait
stos
jl
clc
mov
les
dec
push
iret
mov
push
jmp
mov
jge
push
iret
pop
aam
test
mov
cltd
cltd
add
xor
push
dec
loopne
das
jb
mov
outsb
jg
dec
push
push
mov
call
mov
sbb
fldenv
cmpsl
out
mov
data16
cld
mov
insb
ret
fldcw
test
stos
adc
jo
scas
xor
jne
pop
sti
inc
inc
adc
xor
aaa
lea
pop
fstp
and
test
mov
push
ljmp
arpl
dec
jae
insb
pop
movsb
std
or
sbb
les
sahf
int3
fistps
dec
and
or
add
cmp
cmp
fs
repnz
xor
fidivl
and
cs
mov
addr16
sub
in
outsb
cld
mov
inc
mov
cmp
push
mov
insb
dec
dec
rcrl
push
mov
or
shl
push
sbb
fdivr
push
test
xchg
adcl
mov
fidivrs
cwtl
and
add
jg
outsb
ss
iret
inc
or
sarb
or
add
mov
scas
push
dec
lods
sbb
xor
lods
push
out
inc
cli
mov
sbb
imul
dec
adc
and
rcll
ja
add
popf
and
in
and
xchg
cmpsb
cwtl
sbb
imul
mov
pop
mov
mov
cld
mov
mov
inc
in
rorb
fneni(8087
outsb
xchg
pop
xchg
cmp
mov
pop
jg
jle
lret
shrl
jb
mov
pushf
xchg
xchg
mov
test
ljmp
js
xchg
jb
test
in
xchg
and
jae
lcall
nop
mov
sbb
adc
into
mov
xchg
mov
or
fimuls
cmpsb
mov
jge
lret
pop
cwtl
mov
xlat
xchg
inc
insb
add
es
repz
std
in
fnstcw
add
jno
in
xchg
imul
sub
push
pop
mov
das
aas
pop
aas
pushf
lds
mov
sub
dec
mov
ret
pop
mov
iret
orb
mov
das
sub
mov
in
bound
jns
loope
mov
add
cwtl
dec
inc
and
dec
int3
sbb
mov
pop
push
es
ss
push
fimull
test
out
push
pop
mov
lods
or
xor
adc
shlb
aas
sti
push
and
cwtd
adc
rcrb
hlt
outsb
ljmp
jle
sbb
sub
pop
mov
int3
lods
mov
xchg
fisubs
push
lret
xchg
rcll
mov
sub
addl
xor
std
pop
rol
add
add
adc
andl
jo
cmp
sub
sahf
stc
clc
test
sbb
pop
std
loopne
cmc
xchg
arpl
fstl
add
lahf
add
lods
mov
outsl
cli
sbb
cmp
pusha
fistpl
dec
arpl
test
in
imul
inc
pop
pop
js
xchg
mov
jp
hlt
jg
pop
add
stos
mov
cmp
imul
pop
mov
subb
std
or
xchg
pop
fidivrl
pushf
daa
jp
clc
adcl
xor
imul
stos
mov
pop
nop
mov
ret
sub
lret
pusha
into
popf
cmp
aad
sahf
mov
addb
loopne
xor
call
cmp
mov
in
fildl
stos
addr16
sub
js
and
push
addl
mov
cmc
jmp
jo
popf
inc
nop
inc
cmc
inc
test
dec
mov
sbb
inc
cmp
mov
xchg
mov
imul
popa
js
aaa
mov
push
flds
pop
mov
iret
test
je
in
xor
pop
adc
and
xor
daa
orb
add
adc
stos
js
decb
fnstsw
inc
ja
cmpsb
inc
imul
pop
rsqrtps
pop
scas
pop
push
insb
jnp
cltd
in
mov
xor
movsl
bnd
mov
int3
or
orb
aas
hlt
lods
fdivs
mov
sub
movsl
lahf
mov
dec
int
lcall
cmpsl
or
xor
arpl
or
mov
sbb
jp
sub
test
test
cmp
nop
fwait
bound
and
pop
add
mov
mov
test
cmpsl
push
stos
xor
out
ss
dec
imul
and
loopne
jns
sbb
sti
popa
or
stos
in
pop
pop
adc
insb
dec
xor
dec
pushf
aad
xor
pusha
mov
int
mov
arpl
ret
cmpsb
imull
ja
cmc
hlt
sub
jmp
ljmp
or
jne
dec
mov
adc
int
adc
sbb
mov
and
xchg
jb
rclb
outsb
jo
aam
mov
stc
ss
call
inc
jp
mov
jmp
pusha
ficoms
jecxz
or
pop
aad
xchg
gs
in
ja
stc
aam
pop
loope
sub
push
je
int
adc
rolb
inc
adc
dec
mov
pop
aam
dec
pop
or
jae
dec
cmp
adc
repz
sub
or
in
jns
jmp
mov
out
xor
mov
fisubrl
test
leave
fs
adc
cld
fdivl
pop
bound
mov
fstpt
cmpsb
daa
lods
enter
mov
inc
test
sbb
or
sarl
into
mov
and
insb
insb
or
gs
cmp
inc
dec
dec
cli
xchg
test
mov
push
adc
xchg
inc
inc
and
sub
cli
ljmp
shlb
int3
ja
lods
andl
mov
push
aam
sub
incl
xor
pushf
xor
inc
xchg
jle
mov
push
xor
or
pop
ret
cmp
loope
imul
or
cmp
cmp
sbb
ljmp
lock
adc
add
popl
je
mov
gs
jno
or
sbb
in
push
sub
and
js
mov
ficoml
call
xor
sbb
add
fisttps
sbb
gs
addr16
icebp
push
repz
dec
push
sahf
pop
mov
dec
std
lahf
mov
push
sub
scas
ljmp
sub
movsb
cwtl
dec
int
ss
lret
rolb
adc
arpl
cmp
loope
push
out
in
imul
mov
pusha
orb
jp
sbb
sub
cltd
nop
outsl
add
or
pop
test
cltd
addr16
jecxz
out
daa
or
fwait
pusha
mov
paddusw
and
gs
mov
mov
jne,pt
sbb
movsb
daa
inc
cwtl
mov
adc
outsb
test
lods
testl
lds
pop
in
sbb
cli
fbld
push
push
fstpl
int3
and
xlat
jo
dec
xchg
in
out
mov
xchg
stos
sub
mov
int3
cmp
mov
enter
out
into
call
leave
cwtl
ss
dec
ret
test
sahf
fsubrs
ret
loopne
cmpsl
xchg
iret
sbb
dec
jne
mov
jo
stos
and
stc
dec
orl
cmp
xor
lret
jnp
call
or
add
cld
xchg
mov
pop
inc
cmpsb
cmpb
adc
jae
or
js
popf
or
mov
repnz
jp
fdivrl
xor
sbb
dec
mov
imul
aam
xchg
xchg
inc
fsts
xchg
bound
sbb
faddp
xchg
enter
flds
movsl
lcall
imul
sub
lahf
mov
inc
in
aam
ret
xchg
xor
pop
adc
pusha
pop
pop
inc
lods
lret
jns
sbb
sbb
cmp
fistpl
fs
hlt
js
fcmovb
push
add
rcrl
xchg
mov
xchg
xor
mov
jg
and
mov
add
push
adc
pushf
enter
leave
hlt
mov
mov
adc
jg
fs
mov
loop
or
sub
mov
adc
leave
mov
in
lock
sub
jmp
fwait
les
lret
lods
push
iret
xchg
lahf
push
lods
xchg
add
nop
repz
jge
out
push
hlt
dec
andb
sbb
cltd
or
outsb
pop
movsb
into
repz
ljmp
pop
jl
mov
sbb
dec
jmp
pop
cmp
adcl
adc
dec
push
push
lock
add
ja
aas
or
bound
cmp
inc
mov
repz
push
and
xor
sbb
gs
add
outsl
xor
stos
test
dec
addr16
inc
shlb
dec
and
mov
imul
xor
movsl
in
cmp
test
push
push
jl
popf
test
dec
dec
scas
inc
adc
cs
add
pop
push
imul
mov
ds
out
mov
fmul
jns
sub
icebp
lret
mov
and
lahf
cltd
mov
push
inc
pop
arpl
cs
shr
mov
jnp
xlat
jmp
pop
xor
push
jno
imul
int3
icebp
aam
pop
or
popa
lods
out
push
and
aam
pop
aaa
cltd
fsubrl
xor
adcl
sahf
or
xor
cmp
in
push
mov
std
and
std
dec
xor
imul
cltd
xor
aam
lahf
adc
stos
mov
lret
sub
lea
arpl
push
xor
jne
arpl
xchg
pop
sbb
cmc
bound
pop
testb
add
inc
fimull
cld
lret
jbe
icebp
mov
jl
pushf
fdivrs
or
ret
jecxz
push
lcall
pushf
xor
icebp
gs
jne
lods
mov
ja
lret
mov
cmp
stc
mov
or
lods
push
lods
push
adc
test
sub
pop
cmp
cs
or
push
dec
mov
test
negb
mov
scas
arpl
js
xor
mov
cli
fdivl
cmp
sbbl
push
pop
jmp
jne
stos
push
inc
xor
int
pop
loopne
fisttps
sti
pop
dec
push
mov
ret
outsb
sbb
stos
cmp
jnp
mov
pushf
jmp
imul
es
dec
jmp
addr16
rcll
sub
jg
or
ljmp
inc
dec
das
sub
dec
jo
loop
mov
mov
mov
mov
andl
sbb
sbb
aam
adc
push
add
ds
dec
push
cs
pop
xor
cmp
xchg
lea
dec
test
aas
xor
mov
hlt
mov
incl
or
xchg
mov
push
xlat
push
push
shll
mov
push
loope
mov
xchg
js
pop
xchg
mov
mov
jecxz
pop
adc
addr16
fwait
shll
dec
ds
jmp
inc
pop
or
ret
jbe
lock
dec
mov
iret
test
jl
jle
lcall
mov
mov
jl
push
in
nop
xchg
jnp
ja
aaa
sbb
mov
pop
push
pop
jp
sub
inc
mov
sub
jp
sub
fs
push
nop
stos
sti
cmc
and
xchg
jmp
out
sub
sbb
inc
xchg
inc
sahf
push
je
das
pop
mov
ret
mov
push
mov
aad
push
cli
and
lret
aad
sbb
sbb
leave
orl
xor
jno
or
fcmove
and
daa
sti
loopne
cmc
stos
sub
pop
sub
or
sub
lret
mov
fcomps
and
lcall
arpl
xchg
cmp
push
jmp
mov
cmp
and
sbbl
jb
ja
je
fdivrs
mov
shr
add
lahf
loopne
cs
aaa
sahf
push
mov
out
xchg
pop
rcrb
pop
divl
add
mov
adc
sub
mov
es
cwtl
test
pop
cmp
nopl
mov
clc
push
push
sbb
imul
scas
arpl
dec
xchg
mov
gs
mov
xorb
ljmp
xor
das
xchg
pminub
bound
push
add
mov
mov
lock
addr16
sub
cld
lock
in
test
or
insl
loopne
nop
imul
out
lods
decb
call
inc
and
jg
aad
fs
sbb
xchg
bound
test
mov
es
shrl
push
cwtl
sbb
or
sbb
mov
out
shr
push
push
scas
lcall
jns
sahf
xor
dec
xor
push
pop
mov
in
popl
and
xor
iret
or
lcall
insb
dec
jecxz
add
clc
cmp
stos
fiadds
ret
imul
rolb
push
pop
insb
fcmovne
inc
repz
add
jno
mov
pop
jbe
insl
dec
fldenv
jbe
jecxz
xchg
incb
mov
lods
adc
pop
cmp
in
push
mov
mov
sub
into
filds
sti
add
dec
jnp
mov
and
ds
call
stos
icebp
mov
dec
loop
sbb
aad
pop
leave
or
cmp
xchg
fs
rorb
pop
insl
mov
aas
test
inc
sub
fwait
sti
cmp
or
pushf
lds
paddsb
xor
push
leave
add
fsubr
fnstenv
cmc
ljmp
sub
pop
dec
and
cmpsl
jns
inc
aam
mov
add
fwait
imul
lret
sub
addl
and
fbld
rol
fstpl
add
scas
std
xchg
sub
shlb
pop
adc
push
ficoms
je
xor
xchg
fs
or
pop
xchg
scas
mov
jl
aad
sbb
mov
ss
and
cmpsl
cmp
mov
jns
in
jp
dec
das
jns
out
and
repnz
push
imul
jb
cmpsl
mov
adcb
add
mov
aas
adc
cmp
lcall
pop
push
ds
lret
dec
push
das
cmp
lea
cmp
or
pop
out
pop
push
int3
dec
xlat
and
mov
hlt
les
xor
and
xor
mov
push
lea
mov
dec
cmp
and
dec
adc
mov
arpl
test
push
sbb
sub
orl
push
inc
add
dec
aaa
push
ljmp
inc
stc
mov
stos
rcll
dec
repz
fcmovnu
and
mov
mov
pop
repz
repz
xor
sbb
mov
icebp
jmp
mov
popf
aas
or
pop
inc
adc
sahf
inc
mov
js
sub
lock
mov
jl
add
aas
xchg
inc
push
xchg
dec
test
fldenv
fxch
loop
lret
xchg
cmpsb
xchg
test
mull
inc
test
and
addr16
or
imul
popf
add
test
inc
in
ljmp
push
inc
lret
xchg
sbb
mov
test
test
fidivs
mov
and
dec
dec
push
fistpl
mov
fsubrp
mov
in
jecxz
test
cli
aad
jnp
sub
in
dec
pushl
pushl
bound
push
cmp
fnstcw
and
nop
dec
cmp
ret
xchg
cmp
jecxz
sbb
stos
xor
mov
push
out
sarl
jl
push
into
dec
sbb
inc
sbb
adcl
jno
mov
push
xor
jp
outsb
repz
or
push
fcompl
ljmp
cmpsl
jb
test
icebp
mov
and
jmp
es
inc
add
icebp
sti
fwait
xlat
fisubrl
mov
hlt
outsl
hlt
jp
mov
dec
xor
push
mov
mov
mov
adc
dec
pop
xor
adc
jge
mov
xchg
or
cmp
jns
sub
mov
pop
test
popf
adc
loope
mov
ficompl
enter
ficoms
xchg
pcmpgtd
test
mov
rcll
mov
ret
pushf
popf
shrb
adc
lods
scas
jp
repnz
mov
dec
mov
cmp
xchg
cld
in
pop
ljmp
in
insb
xchg
daa
das
and
sti
imull
jno
insb
push
aam
adc
push
loope
mov
sub
lods
mov
div
push
pop
or
pop
pop
shl
jb
arpl
push
pop
data16
xchg
bound
or
sbb
and
add
mov
and
dec
or
int
js
cli
push
incb
xorb
xrelease
mov
addr16
push
pusha
mov
inc
jns
sub
out
xchg
push
and
loope
sbb
mov
out
call
call
xor
les
es
mov
xor
scas
dec
push
xchg
dec
mov
cmp
jle
ficomps
xor
loope
insl
das
cld
in
test
enter
arpl
cwtl
mov
stc
and
jae
out
jno
movsl
xchg
sbb
mov
pop
mov
ja
inc
out
loop
dec
hlt
inc
ret
sbb
pusha
xchg
xchg
notb
dec
push
fnstsw
dec
mov
insb
icebp
clc
push
out
jecxz
ljmp
cli
dec
into
adc
aad
mov
in
pusha
fcompl
mov
ror
xlat
jp
in
mov
fisttpll
push
cmp
and
mov
push
cmp
mov
push
test
lcall
pop
icebp
or
dec
adc
lds
cs
shr
fisttpl
aad
shl
xor
in
mov
inc
iret
movb
mov
testb
lods
xlat
dec
jns
mov
leave
push
cmp
out
dec
jo
lret
rolb
xor
and
mov
sub
pop
movsl
jns
nop
push
jnp
mov
push
pop
pop
push
cmp
mov
xchg
cmp
lret
daa
push
cltd
adc
enter
aad
mov
push
dec
mov
movsl
mov
int
idiv
or
mov
bound
adc
or
lea
data16
mov
movsl
ss
mov
xchg
test
test
or
std
pop
pop
adcl
xor
not
adc
xor
adc
push
cmp
push
mov
xor
addr16
add
push
mov
sbbb
pushf
and
out
lods
cli
int3
out
mov
cmpsl
lret
add
sub
scas
cmp
ss
pop
jg
cwtl
add
add
rorl
mov
js
pop
sub
dec
sub
cld
inc
ffree
pop
lret
push
and
cmpsl
or
push
shll
pop
popa
popa
sub
lret
iret
repnz
jg
std
and
mov
nop
loope
mov
jnp
repnz
dec
cwtl
cmp
movsl
pusha
gs
lock
cwtl
ret
jae
inc
jnp
and
mov
jno
les
jg
lods
stos
xchg
insb
sub
mov
sbb
mov
jno
loope
push
add
sub
sbbl
mov
sarl
xor
adc
lock
dec
daa
or
push
rclb
push
mov
inc
push
pushf
xchg
fbstp
mov
andl
aaa
aas
or
jl
push
scas
loop
or
xchg
xorl
cli
adc
inc
push
inc
cmp
xor
shll
lcall
movsl
in
push
xorl
pop
and
fisubs
inc
leave
mov
push
movsl
adc
sahf
jae
xchg
adc
sub
nop
mov
fldt
jns
add
cmp
inc
mov
push
or
rcll
push
aam
fwait
adc
sbb
popa
loopne
cmpsl
adc
mov
out
test
cmp
ror
outsb
sahf
cmpsl
out
ds
push
jmp
repz
cmpb
movsl
jnp
js
jns
rcl
add
mov
pushf
fst
and
adc
pop
pop
xchg
jg
dec
in
lea
je
jno
fidivs
adc
ret
aad
sub
xor
or
ficompl
jmp
mov
jno
movsb
dec
incb
xor
imul
imul
aad
arpl
mov
addl
sahf
and
out
jmp
sub
cmpb
sbbb
xchg
scas
pop
and
dec
mov
icebp
dec
mov
lahf
xchg
mov
aam
orb
mov
mov
outsl
mov
lahf
cmc
cwtl
and
xchg
in
mov
outsl
bt
je
sub
and
and
add
ret
pop
mov
adcl
in
rcrb
pop
test
andl
jo
push
dec
dec
mov
mov
sub
js
jecxz
push
dec
or
sub
sub
cmc
jb
loop
loopne
imul
xor
sti
cmp
fs
cli
cmp
push
out
lea
inc
je
push
dec
andl
cld
cmp
arpl
xor
inc
mov
xchg
test
addr16
inc
scas
inc
outsl
std
dec
incb
push
xchg
stos
jmp
or
mov
push
xor
in
loopne
sahf
test
add
outsb
sub
dec
adc
lahf
inc
inc
xchg
xchg
pop
lahf
ret
inc
pushf
or
aam
out
fimuls
ret
lods
pop
leave
cmp
push
and
jnp
test
push
push
test
or
mov
and
mov
je
into
or
imul
movsl
popf
icebp
std
add
or
sub
jp
adc
mov
daa
std
sbb
or
orb
and
shr
inc
pusha
leave
lods
lret
rcll
test
mov
adc
in
test
lea
popa
inc
stos
in
push
adc
and
repnz
outsb
nop
test
push
cmp
addr16
decl
stos
xchg
xchg
xor
mov
cli
and
fs
mov
and
repnz
jmp
repnz
lods
rcrl
and
xchg
and
dec
inc
inc
adc
decb
xcrypt-cfb
cmpsl
cmpsb
mov
outsl
or
cmp
and
mov
insl
js
xor
aam
stos
pop
add
xchg
jmp
and
pushf
sub
pop
dec
adc
aas
mov
daa
push
push
icebp
sub
out
insl
sbb
gs
loop
and
and
sbb
xor
or
cmp
or
sbb
icebp
mov
or
sahf
xchg
add
in
mov
outsl
push
clc
cmp
outsl
in
xor
iret
push
mov
push
xchg
or
fcmovnb
sbb
and
cmp
add
int
aad
and
outsl
pop
xchg
rclb
sti
dec
add
dec
in
clc
cmp
pop
or
mov
out
mov
scas
cmp
stos
xchg
add
int
mov
push
gs
call
and
cmpsb
psraw
sub
mov
cltd
idiv
rcrb
imul
lcall
mov
and
rolb
add
pushf
repz
test
cmp
insb
mov
xor
inc
hlt
cltd
adc
out
adc
cwtl
cltd
mov
pop
sbb
adc
mov
mov
aam
das
jae
pushf
rcrb
xchg
fstl
mov
mov
out
nop
cmp
and
iret
popf
or
and
mov
add
sub
xlat
mov
pop
rcrl
sub
xchg
add
inc
loopne
xlat
and
mov
repz
sub
pushf
sahf
or
or
shll
xlat
cltd
aas
inc
jb
push
insb
sbb
insb
aas
test
mov
test
xchg
jl
sti
icebp
mov
fisubl
hlt
pop
and
inc
jnp
xchg
jl
into
pop
outsb
dec
repz
fdivs
mov
or
ja
mov
push
rolb
mov
orl
push
adc
push
cwtl
adc
pop
or
cld
mov
mov
imul
sbb
mov
mov
sbb
lds
pop
pop
push
push
push
push
aaa
jnp
xchg
pusha
mov
into
dec
sbb
inc
inc
es
ret
push
mov
or
or
imul
push
popf
cmp
fsubrl
push
cltd
roll
out
or
jns
daa
outsl
aam
repz
in
sub
inc
mov
ficomps
cli
mov
out
mov
les
mov
xor
out
cs
xor
popf
adc
fcmovnbe
rdpmc
aad
mov
lock
fwait
repnz
daa
inc
outsl
ret
dec
outsb
sub
sahf
lcall
mov
or
leave
les
out
and
out
jp
aam
jbe
pop
mov
lods
cmp
inc
sub
nop
leave
mov
nop
and
pop
mov
mov
sub
xchg
test
pop
ss
das
dec
sahf
fdivrs
mov
jnp
push
pop
out
test
clc
lahf
add
push
mov
and
mov
or
outsl
lods
push
mov
xchg
jg
jge
or
sarl
lds
sbb
add
jbe
mov
jge
frstor
fcoms
jb
pop
add
pop
faddp
in
jge
mov
cmpsb
push
or
sub
and
mov
cmc
repnz
or
sti
lahf
out
rcrb
data16
test
cs
cmpsl
cld
imul
mov
cltd
std
stos
movsb
mov
adc
or
adc
aas
pusha
fildll
ret
outsb
sbb
dec
repnz
aam
je
mov
cmpsl
hlt
pop
enter
jmp
mov
fnstsw
outsl
cmp
in
inc
mov
inc
mov
jb
mov
mov
out
cld
sub
icebp
cmp
test
jmp
data16
ja
pop
in
push
lcall
dec
shrl
jb
lods
xchg
and
push
sbb
out
sbb
mov
dec
xchg
dec
call
pusha
xchg
sub
sbb
push
add
xorb
faddl
int3
mov
mov
lcall
push
mov
mov
pop
inc
aaa
or
loope
mov
out
mov
fsubs
adc
jnp
aas
jno
mov
sub
pop
rcrl
xchg
addb
xchg
movsl
test
jae
pop
push
fnsave
push
testl
jo
sbb
push
xchg
stc
cltd
mov
fmuls
rorb
out
movsl
mov
lock
fwait
stos
repnz
inc
jg
mov
iret
fisttpll
mov
or
into
out
push
or
inc
outsb
add
inc
leave
lock
xor
jb
sbb
and
mov
popa
mov
decb
lcall
mov
adc
in
and
das
ljmp
in
shrl
stos
mov
xor
test
out
jle
ret
cltd
or
inc
ljmp
out
pop
push
add
cli
inc
xchg
mov
aaa
call
and
scas
shr
mov
sub
aas
dec
arpl
pop
adc
mov
adc
sbb
jl
xchg
leave
cmc
sidtl
sub
xchg
mov
faddl
movsl
dec
popa
sbb
mov
inc
lret
cwtl
inc
mov
jbe
cmpsb
adc
data16
call
je
mov
adc
mov
in
xor
shll
xor
dec
jbe
xorb
lcall
test
ficompl
and
frstor
je
ljmp
pop
dec
ficoms
xchg
push
and
and
jo
mov
gs
int3
push
and
les
arpl
scas
add
fldcw
jne
push
xchg
cmp
in
jbe
xchg
lcall
cmp
xor
mov
dec
test
icebp
repz
sbb
js
lea
lods
mov
and
mov
push
mov
mov
inc
dec
pop
aam
push
lea
xchg
in
sahf
stc
bound
ja
orl
in
popf
sti
xchg
cmova
adc
loope
fwait
push
add
and
inc
mov
pop
pop
lahf
dec
out
or
jecxz
leave
mov
jae
pop
sub
fwait
test
pop
pop
loopne
mov
pop
nop
xchg
sub
nop
std
pop
or
push
inc
pop
inc
jae
add
mov
pushl
lds
jle
jbe
aam
push
adc
daa
cmpsl
add
jb
jmp
push
xor
and
loope
xchg
or
jno
pusha
dec
dec
inc
lret
mov
jecxz
adc
out
pop
and
shl
adc
dec
aaa
movsb
daa
clc
test
pop
aaa
push
ror
xor
xor
pusha
adc
push
jle
xorb
xor
in
sub
fcmovnbe
gs
imull
push
push
fimuls
xlat
pop
jns
ljmp
in
test
daa
fildl
in
mov
add
hlt
mov
or
sysret
test
mov
add
shll
movsl
aas
outsl
les
js
jp
mov
inc
test
cmpsb
xor
in
sbb
jne
dec
data16
cmp
xorb
mov
mov
mov
cld
testb
mov
or
jge
es
stc
int
test
pop
or
pop
fcomi
sub
inc
mov
adc
jp
cmp
data16
fsub
jmp
shld
mov
sub
ret
cmp
mov
xchg
cs
push
xchg
rorb
pop
and
jmp
lods
push
mov
lret
lcall
je
lret
daa
inc
mov
add
sub
test
retw
test
jno
sbb
leave
and
popf
es
jb
outsl
or
xchg
call
jmp
enter
and
shlb
mov
inc
test
xor
adc
mov
out
dec
fwait
adc
pusha
sub
in
mov
mov
cmp
daa
and
movsl
push
fildl
xlat
pusha
clc
in
sahf
pop
mov
ljmp
cmp
pop
rorl
aaa
push
ret
jl,pt
lods
push
dec
cmpsl
stos
inc
mov
mov
and
lahf
mul
rcl
scas
mov
sbbl
cmp
mov
mov
cmpsb
push
adc
mov
xor
mov
xchg
rcr
adc
and
dec
cmp
in
pop
add
push
and
dec
insb
ja
cmp
sarb
in
jg
shrl
cmp
adc
pop
mov
out
pop
repz
add
push
out
insl
dec
mov
jae
or
out
call
xchg
fmuls
fucomi
shl
cmp
xor
inc
jle
xchg
sub
scas
jl
dec
arpl
fs
cmpl
push
cmpsb
adc
lahf
jp
pop
xorps
sbb
add
mov
and
inc
repz
xchg
inc
pmaxsw
mov
sbb
ret
xchg
mov
pop
mov
pop
and
out
rorl
add
pushf
xor
or
jl
movsl
imul
add
leave
push
sub
loope
test
pop
call
arpl
mov
mov
in
or
inc
dec
inc
mov
cmp
cmpsb
xchg
or
cmc
test
test
adc
and
rorl
and
and
xchg
je
movsb
mov
mov
and
std
jge
cmp
adc
mov
fimull
data16
addl
insb
cmp
negl
jp
xchg
or
ret
gs
push
int3
mov
pop
ja
xchg
pushf
imul
adc
rol
out
push
popf
movsl
or
ret
and
gs
mov
push
mov
lods
std
mov
cmp
orb
stc
xchg
jns
test
out
int
int3
dec
sarl
out
mov
push
inc
fstpt
mov
popa
popf
test
pushf
mov
mov
aaa
mov
xchg
scas
jno,pt
je
or
loopne
mov
mov
add
jge
mov
or
sbb
cs
mov
pusha
jo
sbb
or
add
mov
std
sub
insb
inc
sub
xor
fidivs
and
xchg
push
addr16
xchg
mov
imul
sub
adc
lcall
and
inc
in
or
add
adc
jle
push
shll
cmp
into
mov
xor
push
mov
andb
idivb
nop
jns
inc
sub
sbb
pop
movsb
loopne
cmp
aaa
out
sbb
loop
jae
in
outsb
subl
mov
add
decb
mov
ret
lret
cmp
stc
bound
add
cmpsb
pop
push
cli
lods
xchg
fwait
jg
int3
and
pop
test
sarb
pop
loope
repnz
add
outsb
cmp
imul
jl
mov
push
push
push
bound
mov
and
cmp
push
sub
popf
sub
int
fcomps
pusha
mov
out
clc
nop
jge
nop
mov
rclb
adc
cmp
stos
imul
scas
adcl
movsb
xchg
stos
push
push
xor
repnz
mov
imul
in
sbb
loopne
and
sub
jb
mov
mov
in
or
rclb
adc
pop
inc
movsb
cli
iret
xchg
dec
sub
mov
insb
mov
daa
mov
in
sub
mov
mov
pop
lods
mov
enter
or
leave
push
roll
outsb
call
and
xchg
adc
lret
repz
test
sub
and
ds
hlt
add
inc
add
add
jbe
repz
lds
jbe
sbb
lods
lahf
xor
pop
jae
outsl
mov
jl
xchg
xor
into
sub
scas
sets
shll
jb
addr16
ds
xchg
fldenv
in
mov
imul
cmp
mov
fbstp
pop
adc
add
sbb
fdivrs
cmc
ret
fidivl
cmp
sbb
jmp
inc
jmp
loope
jge
das
cwtl
call
bound
out
fidivrs
shrl
scas
xchg
je
les
outsl
push
jno
inc
ds
cmp
ds
mov
outsb
mov
fildl
adc
mov
cmp
sub
ja
fwait
mov
or
dec
movsb
fisubl
idiv
adc
data16
out
push
pop
and
add
cltd
push
inc
outsb
push
pmullw
cmpsb
popa
sub
nop
fidivrl
andb
adc
fists
mov
pusha
jns
adc
ss
lcall
jmp
les
xchg
fxch
out
sbb
gs
shl
stos
lret
xor
adc
test
push
js
imul
js
pop
jle
dec
and
punpckhwd
sbb
fdiv
fcoms
inc
xlat
insb
das
sbb
inc
mov
lret
mov
test
inc
jecxz
lahf
or
hlt
lea
sbb
pop
or
loopne
dec
and
mov
ret
fwait
je
dec
lods
jge
out
xchg
sub
adc
lret
mov
test
stos
faddl
incl
imulb
sub
fsubrs
in
loope
cmp
adc
or
and
int
nop
xchg
gs
pop
jecxz
ror
cwtl
mov
adc
je
push
test
or
call
loopne
imul
imulb
notb
dec
outsl
fsubl
bound
sbbl
and
mov
mov
dec
push
jmp
push
adc
test
mov
sub
dec
imul
pop
ror
std
xchg
add
mov
ss
pop
xor
cwtl
enter
sti
lds
test
jle
cld
and
cmp
mov
ss
jg
fsubrp
jo
cltd
push
sbb
sbb
aaa
push
mov
into
cmpsb
push
push
pop
cwtl
pop
add
sbbl
mov
or
fcompl
fsubl
xchg
in
mov
iret
xor
or
out
or
popa
fidivrs
int3
gs
pop
inc
shrb
jbe
adc
pop
test
clc
fadds
or
jne
adc
shl
ss
jmp
out
pop
mov
or
arpl
inc
cmp
ret
les
data16
in
scas
js
mov
push
push
cmp
add
out
bound
inc
xor
out
loop
mov
mov
mov
cmp
mov
sub
jg
mov
lret
dec
sbb
jnp
ret
shr
add
aas
dec
arpl
jae
pop
out
insl
dec
and
fcoms
mov
mov
cmpsl
aaa
adc
cmp
ss
sub
xor
arpl
lods
fcomps
scas
push
jae
lock
mov
ljmp
shlb
xor
pop
cmp
out
jp
and
outsb
xor
icebp
mov
jne
or
insl
mov
push
jp
mov
sbb
adc
xchg
pop
push
movsl
xlat
mov
xchg
pushl
push
jmp
and
rcll
js
xor
loop
lods
inc
xchg
sahf
and
inc
mov
mov
dec
or
and
cwtl
xchg
cmp
inc
pop
fldcw
ljmp
cmp
subb
ljmp
xchg
int
add
rcr
inc
cmp
cmp
mov
out
insb
mov
add
and
stos
out
ja
sub
jge
push
call
mov
mov
addl
in
mov
sahf
sbb
lods
orb
push
mov
mov
sbb
sti
cmp
out
roll
sub
jns
mov
sub
hlt
shll
cmpl
pop
sub
mov
lods
fstpl
push
daa
popf
jb
loop
jnp
stc
test
mov
sub
shll
lds
xor
insb
aas
aad
xor
imul
xor
ja
mov
leave
add
push
pop
mov
lahf
dec
xchg
subl
ret
or
xchg
lock
jle
pop
dec
out
push
dec
das
out
dec
cli
mov
mov
push
or
xchg
loop
xchg
movb
sti
mov
cmp
and
pushf
test
pop
int3
pause
xchg
pop
xor
push
adc
inc
mov
dec
dec
fcmovnbe
in
das
mov
mov
dec
mov
cli
mov
aad
out
jmp
scas
or
jo
lea
sub
add
push
daa
inc
push
fisttpl
iret
push
test
cmp
insl
hlt
xor
lret
mov
sbb
xor
out
int
dec
and
outsb
inc
out
adc
and
mov
xchg
xchg
mov
ret
ficompl
stos
xchg
push
push
rorb
sub
and
cltd
push
xchg
xchg
into
sbb
cmpsb
cld
jmp
arpl
push
xor
xchg
jno
test
xchg
cmpsl
jle
and
dec
jp
sub
sub
cmp
push
in
cmp
fnstenv
mov
mov
push
repnz
ret
inc
mov
fwait
movsl
dec
fldl
stos
cmpsw
popa
icebp
aad
ret
xlat
xor
jp
mov
cmp
pop
je
aaa
xchg
adc
dec
fwait
aas
mov
cmp
fwait
cmp
ds
movsl
ja
mov
fisttpl
mov
mov
xorb
adc
jecxz
hlt
jae
xchg
jmp
dec
fs
test
cli
inc
cmp
xchg
flds
sbb
push
fcmovnu
fcomps
mov
jmp
and
shl
sbbb
cs
inc
es
out
sub
and
inc
xor
icebp
lock
dec
sbb
sbb
imul
mov
addr16
add
xchg
aaa
ret
push
insb
in
cmp
add
xchg
push
xor
add
jo
mov
out
mov
pop
add
xchg
adc
dec
sbb
in
es
into
pop
cmpb
call
test
mov
adc
fs
jo
seto
mov
scas
sbb
nop
movsl
popf
cmp
sub
int3
adc
addb
mov
mov
cmp
orl
xchg
push
push
das
adc
xor
cld
shrl
mov
aaa
mov
out
cmp
rcl
stos
add
fisubrl
lods
out
es
dec
sahf
int
and
scas
jmp
and
xchg
mov
mov
jle
mov
stos
pop
dec
nop
sbb
and
fildl
jp
xchg
inc
mov
enter
popf
cmpb
imul
xchg
cmpl
aaa
addb
movsl
mov
push
aam
mov
popf
add
cmp
js
mov
popa
and
cli
jbe
cmc
cmp
enter
mov
xchg
xchg
imul
cmp
cmp
rclb
dec
mov
mov
xchg
insl
cwtl
les
or
cmp
sub
dec
lret
inc
mov
jnp
test
shlb
in
add
pop
jno
xchg
mov
cmp
and
lret
mov
rol
aaa
scas
repnz
or
cmp
addr16
add
ss
bound
jns
jne
bound
adc
sbb
test
push
lret
mov
mov
movsb
mov
stc
dec
das
inc
mov
lods
jmp
lods
or
out
sub
je
jg
inc
pop
leave
int
mov
popa
jl
nop
and
in
or
xor
xlat
fdivs
repz
xor
inc
loop,pt
rolb
jo
cmp
jns
in
push
nop
bound
sbb
or
idivb
or
dec
push
lock
repz
ret
les
loop
fimull
stc
pop
pop
outsl
repnz
stos
lods
aad
testb
xchg
repnz
xor
fsts
aas
paddusw
in
xchg
mov
sbb
out
or
cmp
mov
repnz
arpl
jae
fistps
xchg
mov
cmpsl
bnd
or
jecxz
push
mov
dec
lret
in
sti
or
mov
add
xchg
jno
aaa
ljmp
imul
cmpsl
mov
pop
rcrl
inc
fcmove
jmp
or
movsl
and
cmp
and
add
or
xor
dec
dec
div
addr16
ret
xor
inc
or
shr
test
cmp
leave
push
or
and
jo
cltd
fmull
inc
pop
mov
mov
xchg
mov
sub
stos
mov
outsb
cs
jo
mov
add
dec
sbb
xchg
xorb
fidivrs
push
fcompl
lods
fisttpll
dec
je
test
jae
dec
cmp
inc
gs
cli
sbb
add
aam
jecxz
xchg
fs
jge
adc
inc
lock
mov
xchg
insb
mov
pusha
mov
in
mov
push
dec
mov
xchg
sub
std
mov
loopne
xor
mov
ljmp
cmpsl
sbb
dec
insl
adc
loopne
fucom
inc
and
push
popf
in
movsl
push
sub
mov
jo
pusha
jae
test
xchg
jle
or
ror
pop
dec
in
mov
and
leave
stos
lcall
cmc
jmp
add
dec
or
mov
mov
stos
rorb
add
iret
dec
add
sarl
aaa
cmp
rclb
and
das
test
jg
adc
data16
gs
mov
lahf
out
in
ror
incb
test
clc
aas
sbb
daa
fsubs
adc
js
mov
pop
xchg
push
jecxz
bound
pop
sbbb
sub
test
pop
ficoms
movsl
addr16
push
push
dec
stos
pop
hlt
sub
dec
out
or
cld
scas
and
jg
or
jge
and
outsl
mov
and
cmp
imul
dec
imul
sbb
in
cmp
jle
rcrb
xlat
mov
data16
scas
ret
sub
mov
dec
mov
xchg
adcl
jno
mov
popf
cmpsb
mov
leave
repnz
pop
or
adc
imul
aas
ja
dec
lods
jmp
jp
push
push
into
jmp
loope
es
xchg
jecxz
inc
inc
add
dec
fiadds
push
iret
dec
mov
mov
and
stos
pop
stos
inc
jg
cmc
cmp
ret
std
enter
pop
lahf
lds
xlat
in
in
orl
jnp
mov
std
sti
imull
jne
dec
xor
inc
shll
add
inc
lods
push
mul
aad
pushf
sbb
sub
add
pop
mov
sub
and
test
mov
stos
enter
dec
inc
imul
mov
and
pushf
jmp
mov
xor
cwtl
leave
adc
xchg
mov
lock
addr16
dec
int3
mov
call
cli
pop
lret
loope
dec
cwtl
mov
cmp
jb
mov
lahf
dec
pusha
pushf
adc
mov
outsb
push
push
sar
repnz
push
mov
mov
push
inc
jmp
xor
mov
inc
and
mov
mov
test
mov
ror
lock
sub
pop
lcall
popa
ja
cmpsb
mov
pop
scas
cmp
dec
add
sbb
dec
xchg
mull
jmp
ds
in
ljmp
scas
mov
adc
or
lods
outsl
test
jecxz
push
mov
pop
andl
leave
xor
dec
sahf
ret
inc
lods
sbb
jnp
movsb
rcr
data16
sbb
into
jnp
xchg
sbb
shr
mov
dec
cmp
mov
add
mov
test
sbb
sub
xchg
ficoms
shrl
es
sbb
and
xchg
paddd
jp
stos
jl
in
sbbb
push
aam
and
in
lret
ja
sbb
dec
mov
pop
lea
push
out
js
frstor
xor
adc
pop
stos
mov
add
pop
pop
movsl
cld
add
int
mov
or
ljmp
fucomip
test
push
jb
lock
sarl
jecxz
jle
test
aas
rcrl
jmp
mov
sahf
loop
or
pop
dec
sahf
jbe
sub
or
lret
or
xchg
mov
outsl
sarl
arpl
mov
sub
cmp
sahf
mov
jecxz
pop
shrl
or
mov
cld
movsl
cs
xchg
mov
cmp
cmp
mov
les
into
push
es
jp
cmp
out
cmpsl
lods
lahf
cli
dec
das
pop
or
iret
cmpsb
xchg
mull
push
ds
mov
sbb
sarl
cltd
xchg
adc
popa
in
jle
dec
mov
ret
lea
negb
sub
neg
or
out
mov
jno
sahf
inc
dec
cmpsb
push
out
push
pop
add
jae
subb
add
cmp
addr16
push
push
mov
and
push
add
aas
mov
pop
pop
push
dec
negb
pop
add
in
imul
imul
push
dec
rcrl
aad
mov
mov
sbb
fsubl
xchg
dec
mov
mov
dec
js
subb
in
sub
mov
cs
add
xlat
jge
sub
hlt
je
xchg
add
mov
ret
mov
adc
mov
mov
jmp
mov
add
push
mov
ss
daa
int3
lret
test
jno
fwait
divb
mov
jmp
cmc
dec
push
mov
test
jo
cltd
jg
imul
imul
pop
xchg
sub
cmp
bound
movsl
in
orl
sub
pop
call
inc
pushl
cld
add
shll
outsl
jle
xlat
mov
lahf
mov
les
in
pop
jne
mov
outsl
xor
iret
test
lcall
dec
leave
fsubl
mull
outsb
je
mov
inc
mov
jno
xchg
cld
into
das
loope
jecxz
xor
xor
popa
fisubrs
jge
mov
add
mov
and
cld
pop
sub
jle
adc
adc
xchg
std
pop
cmp
jmp
xchg
xchg
daa
fidivs
push
iret
cs
out
mov
mov
gs
shlb
xor
jns
xchg
xchg
fwait
je
repnz
mov
icebp
lods
stos
nop
mov
mull
lcall
inc
mov
int
push
mov
push
xor
iret
push
inc
inc
inc
test
in
jnp
add
jo
lods
cmc
sbb
call
std
xchg
arpl
imul
mov
inc
mov
stc
jmp
outsl
xchg
add
inc
dec
push
addr16
rorb
sbb
movsb
sti
out
mov
decl
inc
xor
sub
add
orl
mov
popf
jl
fildll
mov
add
lods
or
jmp
inc
cmp
or
mov
push
outsb
mov
push
jle
push
aas
mov
cwtl
mov
or
xchg
fdivrp
cli
dec
ret
das
cmp
scas
push
jns
pop
sub
out
mov
shll
inc
fisubl
cmp
xor
push
jmp
mov
aad
inc
cltd
out
pop
std
xor
repz
hlt
clc
or
mov
pop
lret
scas
out
mov
jle
push
push
adc
lds
or
sub
inc
xor
loopne
es
int3
movsb
cwtl
call
jge
xor
lock
insb
outsb
ret
xor
xchg
adc
or
imul
inc
mull
jae
aam
fsub
or
jg
mov
dec
push
loopne
jae
in
jo
addb
addl
cmpl
mov
lock
and
cs
mov
dec
testb
mov
cmp
mulb
sub
iret
push
loope
xchg
cmc
fsubl
inc
sahf
ficoms
jae
or
int3
rcr
jle
shrl
inc
push
xchg
sub
imul
aaa
and
jo
dec
scas
mov
mov
jo
mov
jmp
bound
mov
dec
cmp
movsb
jo
sbb
movsl
test
inc
pop
test
imul
xor
fmuls
sub
movsb
subl
mov
xlat
sub
ljmp
sbb
mov
imul
sbb
add
mov
out
subl
adc
xchg
inc
aas
add
fadd
pop
aas
push
jns
mov
xchg
mov
into
imul
jle
jge
lcall
pop
sbb
les
in
or
stos
mov
push
lds
pop
or
inc
ret
mov
jl
ret
push
or
shlb
mov
stc
fdivr
mov
ds
mov
data16
mov
imul
add
cmp
fcoml
dec
sbb
sub
test
mov
push
mov
ret
repnz
or
and
aam
xchg
xor
cmp
cmc
mov
pop
sub
xor
adc
or
mov
lds
mov
inc
mov
xchg
mov
jae
xor
xchg
jp
push
test
cltd
inc
xchg
jne
sbb
data16
cmp
rorl
mov
out
test
jge
cmp
dec
lock
lock
sti
scas
stos
or
xchg
std
push
inc
outsb
push
pop
add
xor
cmp
aaa
xor
sbb
xor
mov
add
aas
inc
xor
add
jns
repz
inc
std
movsb
sub
fldt
repnz
sub
mov
cmpsb
sti
sarl
sbb
push
jmp
jb
jge
cs
stos
pusha
xchg
jo
std
fsubl
pop
dec
out
stos
sbb
gs
ja
into
cmpsb
stos
jns
dec
dec
mov
inc
push
loopne
cmp
scas
outsb
in
add
sarl
enter
in
and
in
pop
inc
jg
adc
jl
or
push
mov
mov
out
sbbb
mov
call
pop
scas
test
mov
mov
aaa
scas
and
push
cltd
subl
or
popaw
sub
mov
out
pop
jp
cmp
arpl
loope
arpl
lds
and
inc
pop
sbb
dec
inc
loop
mov
sti
fbld
aad
cltd
ljmp
or
pop
dec
jmp
adc
pop
mov
push
pop
push
jb
shll
pop
in
sub
lock
faddl
aaa
dec
pushl
xor
add
push
ret
popf
cs
ss
pop
mov
stc
push
cmp
out
xchg
mov
insb
pop
cmp
call
outsl
cs
call
dec
fsubl
in
sub
in
les
mov
jp
sub
rorl
addr16
das
jno
mov
adc
adc
fnstcw
inc
push
gs
in
leave
scas
dec
pop
leave
push
xor
inc
sub
stos
add
dec
push
and
inc
cmp
or
insb
push
add
stos
daa
sbb
fxch
fstps
push
inc
repnz
jle
mov
cmp
out
fs
incl
sub
mov
inc
jns
daa
xor
cs
and
test
aaa
nop
loope
jmp
push
mov
into
in
int3
push
inc
test
cmp
push
push
inc
sbb
test
imul
pop
pop
sub
cmp
add
scas
stos
jle
cs
fisttpll
enter
test
pop
std
inc
ljmp
jnp
lods
clc
xor
ja
int
and
jl
into
fwait
aas
sti
dec
lahf
sti
mov
and
mov
in
lods
insb
mov
imul
addl
scas
out
arpl
xchg
ds
sbb
dec
in
jnp
dec
jmp
daa
mov
push
dec
pop
stos
jmp
out
sub
pop
and
mov
insb
aas
lcall
push
gs
cmp
jp
loopne
in
scas
xor
cmp
xor
and
out
loopne
mov
int3
lret
popl
xor
lock
add
mov
jne
das
pop
xchg
inc
mov
cmpsl
insb
cli
movsb
fcmovbe
xchg
mov
mov
jo
jecxz
jg
mov
xor
popa
or
xor
cmp
jbe
stc
aaa
xor
push
addl
aam
jecxz
mov
inc
sti
fsts
jns
nop
push
jbe
push
insb
or
cmp
test
cmp
dec
push
orl
in
or
xchg
push
xor
jo
cltd
pop
sub
and
push
jle
inc
subl
sub
clc
jp
mov
mov
testb
pop
dec
jo
rcrb
iret
hlt
sbb
dec
or
fld
daa
or
ds
cmp
iret
dec
sbb
mov
add
and
mov
xchg
cmp
sbb
push
xlat
dec
sbb
pushf
push
sti
stc
jecxz
jbe
or
jl
andl
leave
lock
repnz
push
icebp
aam
push
mov
pop
lock
lods
popa
or
ficoms
xchg
andl
sub
bound
jle
and
iret
mov
shrb
test
sub
dec
inc
push
and
int
inc
bound
outsl
pop
mov
xchg
adc
test
clc
lods
lea
ja
lds
fisttps
lret
xor
testl
rol
scas
std
cmp
out
lahf
stos
fisubrs
dec
push
stos
or
out
dec
loop
inc
add
or
stos
bound
sahf
fidivl
or
repnz
fwait
cld
sbb
in
or
hlt
pop
xor
push
clc
adc
push
add
add
sarb
add
xor
ja
jle
inc
aad
mov
sbb
inc
mov
jnp
flds
mov
mov
mov
cmp
jno
dec
cmp
inc
mov
sbb
sbb
iret
inc
mov
cs
xchg
out
jns
test
jb
or
stos
sub
pop
mov
mov
push
lret
cli
xor
xor
fwait
ret
popa
ficoms
mov
jl
out
pop
arpl
into
fcomip
jg
xlat
cmpsb
dec
sarl
adc
mov
loope
lock
imul
clc
movsb
enter
bnd
cmp
adc
jmp
std
cmp
enter
mov
push
sub
loopne
and
inc
xor
jl
inc
mov
adc
shlb
lds
jp
xlat
mov
out
sbb
les
jg
incb
mov
push
adc
and
mov
xor
sbb
lock
push
add
inc
lret
jp
je
and
cmp
push
in
xor
sbb
scas
insb
out
mov
stos
cmp
jmp
jmp
pop
imul
dec
and
cmpsb
arpl
out
int3
cmc
cmp
jecxz
sbb
inc
and
cmp
push
jns
mov
loopne
data16
or
xor
add
out
add
test
outsb
mov
shll
jno
fs
lds
addr16
push
lods
pop
jbe
mov
mov
and
divb
mov
subb
mov
xor
dec
mov
push
pop
cmp
inc
add
aam
jecxz
leave
xchg
mov
inc
andb
jb
push
hlt
or
cmp
jl
cmp
cmc
cmp
add
popf
imul
rorl
adc
jne
dec
mov
sarb
mov
frstor
subb
int
xor
mov
mov
cwtl
inc
repz
inc
push
cs
lods
mov
cwtl
aaa
int3
pop
push
testl
bound
pop
pop
and
fistpll
push
outsl
repnz
or
xorb
pop
mov
pop
inc
mov
add
adc
xchg
lods
hlt
dec
add
cmp
movb
out
pop
cmp
adc
sahf
cmp
call
ror
lret
sbb
xchg
pop
pop
jg
dec
mov
cltd
mov
test
inc
pop
sarb
popf
out
add
dec
out
push
clc
aaa
sub
lret
aaa
push
lret
rorl
inc
scas
xchg
or
arpl
hlt
adc
mov
push
test
jecxz
loope
sub
pop
inc
outsl
das
bound
push
ret
xchg
pop
or
add
sbb
ja
sub
fistl
lods
dec
sbb
daa
sub
std
scas
mov
pop
jae
sti
push
into
popf
daa
call
out
push
sbb
cmp
not
out
sar
or
je
popa
mov
scas
push
jl
dec
es
daa
dec
add
or
mov
mov
pop
data16
movsl
enter
ss
fwait
jb
cwtl
in
push
dec
dec
test
ror
lcall
scas
out
int
inc
cmpl
clc
mov
ret
mov
jp
je
dec
or
xor
in
sbb
pop
xorl
adc
pop
jg
push
push
cmpb
add
pop
mov
shlb
fsin
into
ljmp
ds
cmp
rcll
daa
fbld
adc
ret
cmpsl
jmp
nop
popa
inc
add
cltd
mov
pop
roll
pop
cli
bound
lods
hlt
aaa
xlat
arpl
jnp
mov
fisttpll
jg
fs
xor
mov
xchg
jp
mov
jbe
and
bound
das
ja
xchg
test
mov
jnp
les
and
push
ja
inc
cld
enter
xchg
lods
aaa
sahf
pusha
std
repnz
faddl
sarb
push
xchg
xchg
sub
sbb
inc
xchg
cmove
mov
and
nop
div
dec
xchg
push
out
inc
pusha
mov
popa
push
mov
and
aam
stc
pop
in
mov
or
sub
rolb
adc
jnp
fsubrp
jge
jmp
leave
or
std
fildll
adc
pop
xorb
ljmp
mov
or
mov
push
fs
icebp
js
cld
adc
mov
mov
cmp
icebp
ret
call
ss
es
jmp
sbb
xlat
scas
daa
addr16
cmc
imul
and
imul
jno
pop
dec
jns
push
mov
pusha
test
mov
popf
push
mov
stos
and
cmp
xchg
jle
sub
mov
pop
cld
call
cmp
cmp
hlt
push
test
jns
shll
adc
mov
mov
dec
daa
mov
cmp
mov
scas
loopne
sub
hlt
mov
mov
and
mov
adc
repz
fsubl
in
fisubs
paddusb
into
jmp
mov
add
xchg
jg
lds
sti
inc
pop
popf
or
xor
ficompl
mov
sbbb
dec
jle
pop
xchg
mov
les
jmp
dec
mov
lret
jne
mov
cmp
daa
cli
sbb
pop
nop
out
aad
sbb
sbb
mov
bound
in
ja
data16
loope
std
out
mov
or
inc
repnz
fcoms
sub
push
insb
mov
fldenv
and
mov
fldl
adc
sbb
aam
stc
pop
cmpsb
leave
mov
xchg
or
test
inc
mov
mov
fs
clc
in
out
mov
jo
in
fmull
loopne
mov
pushl
or
or
sub
push
inc
push
sbb
out
testb
cmpsb
and
sarb
lods
push
cmp
aas
xchg
push
test
mov
cmc
xlat
dec
cwtl
mov
add
ja
aas
lds
cs
enter
out
aad
inc
mov
mov
int3
push
shlb
and
pop
push
rol
cmp
and
pop
outsb
mov
push
sbb
fimull
shl
imul
aad
testb
push
mov
jo
sbb
or
push
mov
push
mov
cli
xor
jecxz
stc
mov
lods
jmp
xor
cli
fcomps
mov
lahf
lret
mov
dec
outsb
pop
sub
fnstsw
int3
adc
xchg
int
scas
xor
pop
outsl
lea
adc
jbe
xor
addb
jmp
andb
repz
inc
xchg
sbb
push
in
push
decl
inc
adc
mov
or
stc
mov
jle
dec
in
call
std
jmp
data16
icebp
movsb
sub
lret
add
mov
loopne
es
aaa
pshufw
inc
pop
sub
scas
cltd
je
pop
push
lea
xor
pop
js
jmp
int
mov
push
jle,pt
cld
mov
andl
jp
xor
ficoml
cmp
xchg
dec
nop
mov
inc
enter
jo
iret
mov
push
daa
sub
xchg
mov
inc
jle
push
into
arpl
rclb
sbb
icebp
xchg
jns
xchg
cld
leave
ss
push
ljmp
nop
jns
xchg
pop
mov
std
cmp
and
add
daa
movsl
fistpl
jns
push
or
stos
imul
js
aam
fdivrs
lods
jg
jb
scas
or
rorb
sub
adc
dec
out
mov
outsl
mov
shll
fnstcw
push
imul
ja
mov
movsl
mov
jmp
mov
into
daa
pop
mov
inc
ret
xchg
aaa
vmread
dec
xchg
shll
mov
jecxz
clc
xorl
aaa
or
or
jle
xchg
pop
inc
push
or
int
xlat
lret
lahf
pop
xchg
xor
mov
ljmp
cmp
inc
stos
fcmovbe
lea
orb
xor
unpckhps
adc
pop
shrb
call
rcrl
dec
jl
push
mov
xchg
jle
xor
push
push
jb
std
cmp
inc
or
xchg
inc
lret
and
mov
and
xor
mov
std
adc
mov
sbb
or
xorl
cld
dec
iret
xor
movsb
ljmp
cmp
jecxz
jle
xor
scas
pop
movsb
dec
push
sub
jne
xor
stos
icebp
mov
popf
mov
cmc
xchg
mov
rcrb
mov
and
add
leave
andl
test
cli
jp
aaa
mov
ret
push
sub
jnp
cmpl
cmp
sbb
and
or
push
in
ret
jl
sbb
dec
xchg
mov
and
push
out
ffreep
cltd
mov
aas
js
rcll
fstps
and
clc
call
lret
insl
inc
lret
popf
dec
incl
push
out
xchg
incl
mov
xor
das
movl
adc
add
addr16
dec
inc
mov
fcmovnb
mov
add
push
mov
out
addb
or
subb
data16
adc
rcl
mov
pop
add
xor
dec
lea
nop
inc
add
mov
mov
shr
jne
inc
jl
mov
imul
mov
push
lret
add
push
shll
add
pop
fnstsw
rcl
cmp
push
into
scas
cmp
xor
jmp
sti
movl
adc
test
inc
or
dec
popf
pusha
add
mov
sbb
jmp
lcall
cmp
icebp
pop
daa
xchg
mov
push
into
jnp
cs
mov
inc
test
int3
mov
or
outsb
js
pop
or
ljmp
push
cltd
cmc
out
or
imull
jge
jmp
add
mov
xor
sahf
loop
pusha
or
inc
xchg
mov
movsb
jg
xchg
mov
clc
xchg
outsb
mov
nop
inc
push
hlt
inc
enter
imul
lret
int
jae
inc
xchg
add
xchg
cmpsb
enter
xlat
xchg
xor
stc
pusha
pushf
jnp
in
loope
mov
mov
add
push
cmp
lahf
mov
pop
cmp
popa
fwait
rclb
sbb
int3
xchg
cld
aas
cmp
xor
sub
je
clc
jo
fbstp
test
stos
inc
mov
ljmp
sbb
sbb
pop
push
es
test
xor
xchg
inc
andb
lods
in
fcomps
imulb
mov
fildl
lds
cmp
xchg
test
lcall
mov
shrb
mov
push
int
add
pop
dec
cs
mov
stos
ljmp
cltd
imul
push
inc
pop
in
pop
inc
and
subb
fwait
out
add
test
inc
or
ret
xchg
sti
cmp
lret
cmpsb
cmp
dec
aam
mov
xchg
lods
xchg
xchg
fildl
xchg
cltd
mov
daa
stos
andb
mov
or
scas
fwait
push
xor
add
imul
jl
leave
xor
stos
jecxz
jle
fidivrl
dec
loopne
lds
mov
push
inc
je
pop
les
fcoml
and
daa
sahf
pop
fnstenv
adc
aaa
fwait
icebp
call
mov
cs
mov
nop
mov
idivl
xchg
push
ss
xchg
cmp
jnp
stos
mov
lods
push
jg
sub
in
fnstcw
inc
je
insl
adc
pop
in
sahf
out
ljmp
pop
and
mov
jne
fwait
inc
xorb
call
loop
inc
inc
roll
shl
bound
pusha
or
xchg
rcrl
adcb
push
inc
clc
ret
pop
xchg
xor
adc
mov
mov
cmp
jecxz
sbb
xchg
inc
mov
mov
or
lret
scas
add
js
stos
pop
ss
std
shrl
in
push
mov
add
subl
cltd
mov
inc
stos
aas
dec
sub
mov
sbb
out
or
sti
push
jae
pop
dec
mov
negb
adcl
cmp
aam
imul
adc
test
in
jno
xorb
add
icebp
cmp
push
sbb
mov
cmp
mov
clc
incb
and
push
ret
xor
lcall
jmp
jae
in
js
aas
jbe
add
pop
or
es
adc
pop
sub
jae
xchg
sarb
shll
mov
xorl
inc
cli
inc
sarl
sbb
inc
out
adc
dec
or
mov
test
jp
mov
popf
push
and
jns
cmp
dec
xor
inc
xor
lods
push
es
enter
sub
cmc
xor
sub
clc
jno
xchg
dec
sbb
repnz
inc
ds
push
xchg
mov
and
hlt
pop
aas
dec
pop
dec
jecxz
or
fmuls
cmovge
jne
mov
jae
lret
mov
jnp
xchg
or
pop
xchg
push
addr16
daa
inc
fdivrl
dec
mov
scas
fcomp
xor
addr16
sbb
push
adc
test
insl
fs
and
repz
lret
movsb
push
nop
fildll
sbb
mov
fildll
or
movsl
or
xor
pop
inc
sbb
test
mov
sbb
fs
mov
test
rcrl
test
pop
mov
dec
lea
add
and
test
cltd
movsb
out
sbb
xlat
dec
xor
mov
movsl
cmp
arpl
xchg
decb
mov
push
repnz
xchg
insb
lret
mov
loop
ds
adc
gs
test
je
pop
push
js
pop
lret
mov
jmp
lods
adc
movsb
scas
add
pop
jo
mov
out
repnz
movsl
mov
sub
dec
js
mov
cltd
sbb
sbb
pop
dec
mov
sub
ljmp
fcomps
inc
xchg
dec
mov
sbb
push
xchg
add
pop
fistps
dec
pushf
orb
push
push
popa
cltd
cmp
inc
push
inc
inc
pop
pushf
mov
and
imul
ret
sub
sbb
and
push
dec
shlb
test
jmp
test
sahf
inc
out
mov
pop
lcall
movsl
jno
cli
dec
inc
xchg
push
push
mov
sahf
pop
sub
mov
lods
xchg
push
aam
cmpsb
aad
addr16
stos
xchg
cmpsl
mov
mov
pop
repz
push
ror
stc
out
stos
les
cwtl
add
aas
ret
push
loope
ds
fimuls
shrb
std
add
cmp
adc
mov
ja
enter
sub
pushf
pop
xor
aaa
int3
dec
cmp
and
sub
jmp
aad
cmp
pop
popf
mov
outsl
insl
sbb
mov
jbe
xor
adc
nop
xorl
mov
lcall
lea
adc
adc
mov
repnz
jp
and
push
mov
push
aam
cmp
add
inc
les
cmp
js
mov
xor
shlb
push
cmp
rclb
and
jns
xchg
jle
push
mov
sub
pop
cld
divl
cmp
scas
fdivrl
xchg
testb
mov
jbe
orb
daa
push
jno
and
or
mov
mov
fsts
mov
in
fnstenv
push
mov
cmp
mov
ljmp
aas
sub
mov
jbe
jg
cmpsl
sbb
sub
adc
lea
in
jle
std
mov
dec
mov
out
lea
arpl
add
xchg
push
sti
pop
cli
cmc
mov
incb
es
jp
xchg
mov
std
sbb
lock
in
mov
ret
insb
adc
or
mov
xor
xchg
ret
push
mov
cmp
pop
inc
xchg
mov
cmp
lahf
paddw
or
dec
orl
and
stos
xchg
out
sub
frstor
repnz
sbb
sub
or
sti
or
add
scas
dec
xchg
cmp
push
stc
dec
xchg
mov
cs
sbb
sarl
pop
mov
inc
les
add
and
and
loopne
sti
test
jbe
sbb
xor
popa
popa
inc
adc
pop
xor
push
aam
fldt
test
xlat
jmp
rorb
sub
iret
inc
jmp
mov
jo
sbb
pop
dec
icebp
mov
xor
sbb
cmc
mov
dec
push
test
mov
ja
negb
xchg
loope
arpl
jbe
sbb
daa
ss
mov
adc
adc
daa
and
mov
iret
sbb
and
cmp
inc
mov
inc
mov
mov
inc
cmp
xlat
aaa
shll
mov
lret
movsb
fsubp
cmp
ffree
sarl
sub
jae
inc
out
out
int3
mov
or
or
stc
xor
pop
clc
jg
hlt
add
js
sarl
add
repz
jnp
mov
dec
outsl
cmc
or
aad
add
lds
mov
repnz
mov
lret
and
mov
adc
aad
push
or
add
sbb
outsl
or
dec
ljmp
mov
sbb
xchg
add
xchg
aam
lret
pop
rorl
aas
rolb
mov
mov
into
fwait
in
aaa
mov
lds
jmp
lea
add
mov
negl
lea
adc
sbb
push
push
int3
inc
aam
mov
pop
shll
xor
and
mov
mov
sub
dec
mov
xor
or
fisttpl
sub
int3
ds
sub
ds
push
sti
fistps
cmp
adc
mov
mov
cmp
mov
sbb
adc
jno
adc
push
jb
sahf
loop
loope
push
ret
inc
sub
inc
xor
sub
inc
les
jno
mov
dec
ss
mov
xor
pop
into
icebp
or
xchg
push
sub
jnp
shrb
push
xlat
stc
leave
push
stc
pop
xchg
sbb
push
test
call
or
into
sbb
rep
and
clc
rcl
mov
cmp
inc
jno
jae
rclb
xor
and
inc
jnp
imul
sti
in
into
inc
mov
mov
push
insb
fwait
lcall
lret
xorb
jl
sub
push
mov
inc
mull
add
lea
sub
or
arpl
andb
fidivs
jecxz
testl
and
test
subl
repnz
push
inc
test
pop
adc
lds
pop
add
daa
cltd
leave
or
insb
cmpsb
xchg
jae
mov
test
xlat
xor
or
cwtl
das
add
xchg
dec
add
pop
mov
cmpsb
adc
orb
push
test
sti
movsl
xchg
inc
rcrb
rcrl
mov
dec
pop
mov
repz
std
and
sbbl
std
out
int
push
xchg
arpl
push
clc
jnp
fildll
sub
jecxz
sarl
in
scas
cltd
adc
out
xlat
int
xchg
call
xchg
xchg
rcl
or
xchg
bound
xchg
lods
lret
sub
xchg
add
aam
add
sarl
lret
mov
jg
xchg
add
adc
in
test
dec
mov
cmp
or
roll
mov
cs
iret
shl
mov
cli
movsl
aam
roll
xchg
xor
push
jno
xor
cld
out
lcall
fucom
xor
add
repnz
xchg
lods
push
ja
cli
pop
test
in
bound
out
sbb
nop
movsb
fcomi
scas
je
sbb
subl
shrl
sbb
fcoml
in
xchg
imul
jae
hlt
xchg
ret
inc
lods
add
xchg
xor
pop
ljmp
ja
mov
jno
cld
clc
clc
gs
outsb
arpl
xchg
lock
push
stos
lahf
pop
jl
ja
xor
pop
pop
pop
shrl
xchg
pop
mov
loopne
mov
aaa
repnz
add
inc
pop
dec
outsb
push
inc
lahf
adc
popa
cltd
xlat
sub
movl
jns
fidivrs
lods
dec
inc
mov
rolb
pushf
jecxz
sub
push
sbb
mov
sub
fcomps
jb
add
mov
add
or
cmp
pop
idivb
lret
xchg
in
lahf
sbb
adc
push
rorb
push
adc
xchg
xchg
jl
movsb
inc
sti
inc
cld
dec
jge
mov
xor
xchg
mov
lods
push
subb
mov
inc
leave
push
cmp
xchg
ljmp
sti
cmp
mov
iret
in
cmp
insl
xlat
repz
shrl
mov
cmp
test
xorl
fsub
fistl
adc
jl
or
clc
xchg
ret
cmpsb
repnz
mov
call
popa
stc
jge
push
cmpsb
mov
pushf
js
jns
adc
jbe
repz
shlb
cmp
adc
jmp
sub
inc
mov
fldenv
sbb
mov
lret
mov
fstps
mov
jl
dec
dec
pusha
jb
mov
mov
pushf
push
test
mov
mov
sbbl
imul
inc
pusha
decl
into
dec
ret
dec
insb
aas
ljmp
inc
sbb
dec
js
daa
push
test
hlt
cmp
fcomi
and
sub
lret
enter
add
mov
in
xchg
lea
push
shll
mov
fcomps
popa
and
das
mov
aas
cwtl
test
enter
and
mov
in
dec
xchg
ret
pushf
xchg
int
dec
orb
enter
xor
cmp
cmp
jb
stos
insl
pmulhuw
scas
sbb
adc
jno
insb
insl
arpl
popf
mov
fnstenv
or
dec
xchg
and
insb
stos
sbb
test
sub
adc
stc
pop
cmpsl
jns
aaa
jmp
leave
push
pop
sbb
push
outsb
scas
rclb
pop
dec
sbb
mov
mov
adc
fs
jnp
mov
in
sub
push
jecxz
sbb
and
sti
movsl
inc
in
inc
pop
pop
shrb
mov
test
ret
aas
mov
xchg
aad
stc
push
add
push
test
jl
mov
jae
mov
pop
int3
adc
mov
add
call
movb
enter
bound
sahf
scas
cmpsl
and
mov
movsb
aad
push
lods
cmc
push
popf
pop
and
mov
dec
bound
xor
arpl
in
loope
sub
dec
mov
addb
loope
aas
xchg
mov
lock
push
repnz
jmp
rorb
mov
mov
jb
jne
add
daa
jns
xchg
cmp
mov
inc
frstor
addr16
rclb
jp
stos
dec
sbb
mov
pop
or
or
inc
inc
lods
inc
push
ja
test
pop
mov
jae
adc
xchg
daa
and
or
jl
sbb
idivb
adc
rolb
rep
and
xor
je
and
push
cltd
call
gs
ja
xchg
sub
lahf
and
fisttpll
ja
push
push
arpl
sub
add
mov
or
sub
inc
das
mov
or
repz
stos
xchg
or
outsb
sbb
jb
push
jb
xlat
xchg
push
mov
cld
jo
dec
pop
rcrb
arpl
inc
in
gs
or
fldcw
pop
sahf
mov
xchg
in
push
mov
add
pop
scas
mov
push
shlb
test
xchg
xor
ds
dec
inc
aaa
fnstenv
inc
aam
inc
sbb
sbb
lret
mov
inc
out
push
or
dec
vmwrite
or
int
cmp
cmp
jbe
inc
cmp
loopne
sbb
das
imul
xchg
lahf
inc
mov
mov
push
push
out
gs
icebp
dec
sbb
je
push
xor
jnp
jge
scas
push
aad
jl
out
lds
lahf
loop
xchg
in
aam
mov
fidivrl
xchg
int3
in
daa
mov
lds
add
pop
lret
outsb
cld
cmp
mov
aam
js
fisttps
sub
roll
mov
inc
int3
out
push
pop
scas
xchg
lods
popa
sub
mov
daa
xchg
mov
adc
lret
and
mov
xor
mov
xor
mov
xor
scas
jg
in
out
jl
sbb
adc
push
mov
mov
jmp
pushf
pop
dec
mov
int
xlat
mov
push
add
mov
ljmp
and
fistps
pusha
mov
test
movsl
imul
inc
out
sub
enter
adc
popf
sub
rclb
fwait
movsb
jno
stos
negb
shrb
inc
js
lods
sbbb
test
addl
lret
shll
mov
lds
mov
ja
jb
push
andl
pop
lahf
xor
inc
ljmp
test
xchg
pop
mov
lret
jle
test
es
fdivrl
dec
jnp
loopne
adc
in
lock
dec
pop
dec
adc
pop
pop
cld
xchg
lahf
shrl
cmp
in
ret
lret
mov
decl
adc
pushf
clc
xchg
daa
push
or
jns
fcoml
stos
enter
icebp
or
loop
mov
mov
xor
xor
jecxz
cmp
repz
xor
je
nop
lock
addr16
adc
fdivl
or
and
sbb
sahf
xor
or
stos
or
js
inc
jl
jne
int
arpl
ret
divl
ljmp
inc
sbb
mov
enter
mov
pop
mov
icebp
sbbl
mulb
sbb
scas
test
xchg
sti
adc
dec
jge
cmc
shlb
sub
mov
or
dec
sarl
fsubrl
ret
popa
dec
jns
mov
int3
ret
mov
out
sbb
dec
jae
sarl
js
jg
inc
pop
sub
or
fldcw
mull
xchg
pop
cmp
push
clc
jg
test
sub
xchg
outsb
daa
stos
cmpsl
push
xchg
sbb
out
shl
loopne
in
dec
or
loopne
adc
pop
or
mov
sbb
jecxz
aas
or
jmp
test
inc
insl
lret
loopne
daa
mov
fsubl
lret
sbb
inc
adc
xchg
sub
push
fs
add
jns
mov
push
and
mov
out
es
jge
dec
lods
jne
insl
addr16
add
mov
pop
ds
jns
ss
sub
push
inc
pop
jecxz
push
js
or
aaa
ret
and
out
pop
subb
cltd
lcall
add
cmp
cmp
test
fisubrl
sbb
insl
inc
sub
iret
mov
push
daa
testl
jp
stos
push
inc
movsb
push
imul
ljmp
mov
and
adc
sbb
jae
pop
repz
scas
sbb
out
enter
push
fdivs
cmp
inc
inc
roll
outsl
cmc
pop
inc
xchg
lahf
push
call
je
sbb
out
aad
adc
sbb
mov
and
movsb
mov
sbb
pop
cltd
xchg
mov
and
subb
pop
fldenv
dec
sbb
arpl
je
int
jbe
jbe
inc
sbbb
arpl
scas
cli
outsl
loop
imul
xor
jbe
clc
idivl
nop
add
xchg
mov
hlt
int
jp
movsb
mov
push
cmp
mov
dec
lods
pusha
lock
rol
test
adcl
fstpt
sbb
pop
xchg
das
imulb
das
inc
hlt
pop
push
nop
cld
sub
xchg
or
fiadds
lcall
stos
or
lock
loop
lret
xchg
in
movl
sbb
sti
enter
rorl
push
lret
mov
push
or
inc
js
mov
push
out
dec
dec
loopne
inc
mov
cwtl
shl
outsl
pop
lds
test
xchg
mov
movsb
lods
int
andl
ss
shr
pop
in
jmp
cmp
cmp
lcall
sbb
pop
push
add
cld
shlb
pop
repz
movsb
adc
xchg
add
dec
std
test
rclb
jnp
jne
iret
mov
aas
fbstp
push
scas
push
bswap
ja
icebp
mov
dec
xchg
cli
xchg
and
nop
pop
int
in
imul
rcr
je
loope
out
ljmp
inc
xchg
aaa
std
mov
mov
sub
imul
cmp
clc
inc
gs
or
out
pop
add
out
clc
or
dec
mov
fstpl
sbb
iret
movsb
jl
jecxz
dec
or
push
js
adc
out
mov
js
add
popf
sbb
inc
add
mov
mov
pop
nop
stc
fmul
push
push
cmpsb
pushf
das
pop
loope
sbb
mov
lds
test
xchg
ret
jns
sbb
or
or
test
push
aad
mov
cmp
push
aad
or
div
mov
xor
xchg
xlat
inc
aam
rorl
lods
cltd
outsb
jecxz
movsb
inc
mov
mov
add
jecxz
ficoms
adc
fidivl
adcl
pop
testl
cmp
test
aad
sarl
testl
in
sub
adcl
lods
fbstp
add
xor
mov
rcll
mov
je
lods
out
dec
aas
lock
insl
enter
mov
cld
mov
sahf
insl
mov
adc
jnp
lahf
jl
sahf
cwtl
das
xor
xchg
fildll
outsl
loopne
incl
mov
andl
mov
sub
xchg
inc
fincstp
cmpsl
hlt
cmp
mov
or
lods
dec
out
sarb
mov
mov
adc
jecxz
mov
repz
test
push
inc
aam
and
das
or
xchg
mov
pop
add
orl
insb
sub
jecxz
stos
dec
mov
mov
dec
iret
insl
pop
rolb
scas
jae
sbb
rorb
jae
shlb
sbb
pop
iret
mov
pop
add
jge
pop
xor
add
inc
pusha
int3
jg
mov
ljmp
pop
pop
or
mov
push
lods
fwait
popa
pminub
loope
out
push
sbb
stos
cmp
or
ja
int
or
adc
loopne
pop
sbb
xchg
aad
mov
adc
iret
dec
in
cli
pop
mov
stc
push
xchg
mov
mov
push
fwait
repz
fisubs
arpl
sub
xor
jge
popf
cmpsl
pushf
push
sub
scas
sub
adc
lock
dec
jmp
and
mov
xor
ds
lods
pushf
data16
xchg
jae
mov
dec
jae
into
cmpsl
dec
adc
sarb
cmp
mov
test
lret
push
ficompl
mov
mov
push
aad
fdivl
push
and
mov
jo
pop
neg
dec
mov
sahf
xor
scas
les
cld
add
dec
sbb
cld
or
nop
das
xchg
rorb
jg
fdivrl
das
pop
jnp
mov
jmp
lret
push
push
add
imul
fstpt
add
pop
daa
sbb
xor
dec
pop
push
in
mov
in
sub
lods
cmc
mov
pop
jb
fldt
in
sti
imul
mov
sub
xchg
loope
jg
xchg
popf
cltd
mulb
mov
shll
xchg
inc
nop
xchg
les
dec
dec
jl
je
adc
sub
mov
mov
or
adc
test
cmpsl
outsl
inc
cmp
cmp
cwtl
dec
pop
push
fwait
xchg
add
cld
pop
dec
push
xor
xchg
jae
dec
sub
inc
std
xchg
xchg
pop
jg
xchg
arpl
daa
fucomip
sti
xchg
loopne
in
push
inc
in
or
shlb
sbb
jo
and
imul
pop
mov
xor
or
add
adc
xchg
inc
pop
sub
out
sbb
push
cmp
cmp
lds
mov
outsb
pop
daa
cmpsl
aaa
int
sub
data16
insb
in
xchg
lea
sbb
xchg
gs
int3
mov
mov
mov
addr16
jae
push
jns
cmpsb
cmp
sub
jl
fisttpl
fidivrs
jbe
cmp
mov
cli
mov
xor
call
xor
addr16
and
out
mov
xor
repz
add
xor
push
popa
les
je
sbb
ficompl
jo
cld
in
or
jmp
adc
imul
mov
int
lods
out
jae
dec
lret
adc
mov
adcl
mov
mov
add
scas
lret
sub
xor
sti
or
jae
cmp
jo
mov
push
fmuls
js
add
fldenv
in
and
mov
and
mov
jg
cmp
dec
cmp
pop
std
repz
jnp
jecxz
clc
ja
test
gs
sti
mov
sub
daa
adc
cmp
pop
push
push
outsb
pop
sahf
mov
aam
lcall
test
xor
outsl
les
andl
and
or
bound
push
bound
es
push
dec
mov
call
push
inc
xchg
dec
fs
fldenv
sbb
dec
arpl
push
mov
leave
sti
iret
decb
mov
mov
mov
cmp
cld
jno
cwtl
mov
inc
je
aaa
pop
mov
jns
lret
push
sbb
cmp
fildl
jns
cmp
cmp
arpl
sar
fidivl
jmp
loop
dec
xor
push
daa
jmp
divl
sbb
push
into
in
jb
jecxz
push
jns
mov
stos
dec
movl
cmpsb
cltd
xlat
int
fbld
lock
popl
adc
ficomps
cmc
and
cmp
jnp
in
cld
shlb
subl
mov
sub
sbb
repz
sub
fs
mov
sub
xchg
nop
test
add
into
lret
mov
or
loop
int
fcmovu
dec
jmp
je
out
or
pop
inc
fnstcw
mov
sbb
and
loop
inc
stc
and
or
mov
cmpsl
loope
adc
xor
imul
push
mov
fcompl
sub
xchg
xchg
arpl
imul
cltd
or
stos
mov
popf
sbbb
lahf
bound
push
aam
push
stos
and
js
cmp
mov
push
inc
fisubs
int3
cmp
daa
xor
jno
ret
pop
mov
fistpl
xorl
stc
inc
and
testb
xor
sbb
xchg
or
inc
inc
insl
push
popf
das
cmp
es
dec
inc
jnp
icebp
pop
dec
int3
jmp
stos
lods
xor
jo
in
les
jnp
push
ret
dec
leave
pop
sub
mov
sbb
iret
dec
in
adc
gs
inc
and
push
stos
ds
sub
mov
rcrb
lock
in
inc
sub
dec
das
stos
adc
mov
and
ja
mov
cmp
loopne
lods
jbe
insb
add
aam
es
test
pushf
testb
sub
mov
xchg
sub
scas
jbe
xor
hlt
lea
int3
pop
aas
les
xchg
out
or
jnp
dec
and
xor
pop
xchg
out
pop
lock
dec
lret
movsl
and
inc
dec
jnp
test
in
jp
sti
loope
jne
mov
mov
jne
pusha
mov
inc
sbb
pop
sbb
rcr
sti
dec
add
cld
arpl
jne
add
xchg
ret
iret
pop
aas
adcb
inc
add
shlb
xor
fcoml
add
nop
shlb
sahf
mov
push
rorl
mov
pop
popa
add
pop
xor
jle
aad
cmc
sahf
cmp
adc
daa
repnz
fucom
pop
int
inc
das
aad
cmpsb
ret
push
add
mov
imul
mov
hlt
xor
repz
outsb
push
and
jmp
das
repz
mov
popf
sbb
pop
mov
ss
push
mov
mov
inc
insl
push
fistps
adc
subl
lea
dec
xchg
stc
pop
ds
inc
sahf
mov
adc
div
decb
jg
push
arpl
inc
daa
add
into
mov
fs
rorb
or
gs
or
dec
inc
xchg
mov
aas
aad
je
leave
lahf
xacquire
out
mov
movsb
mov
dec
mov
loopne
test
dec
pop
cli
stos
bound
mov
cmpsl
dec
inc
dec
mov
mov
sbb
orb
movsl
sub
inc
je
data16
mov
jae
shlb
sub
push
pop
mov
pop
dec
xor
insl
mov
xchg
inc
sub
jp
fwait
ss
movsl
incb
xchg
lcall
insl
jb
xor
scas
mov
or
js
mov
add
mov
cmpsb
jno
movsl
sbb
sub
inc
inc
or
aas
add
int3
test
inc
in
lcall
jbe
jge
test
and
in
shlb
mov
lahf
enter
xchg
in
ret
loop
cld
cmp
ficoms
jnp
sub
mov
in
add
jno
xor
dec
cmp
loope
mov
mov
les
mov
pushf
je
fcompl
jno
sbb
or
jmp
mov
jo
mov
test
outsl
cmpsl
dec
cld
mov
inc
cmpsl
cs
ds
adc
jae
cmp
stos
test
insb
jo
fadd
je
rcrb
lods
out
nop
and
push
mov
pop
test
mov
add
jmp
iret
pop
cmpsl
mov
imul
les
insl
inc
fs
adc
add
push
enter
adc
dec
cltd
out
cmp
or
test
cmpsb
or
mov
jb
negb
mov
inc
mov
sbb
lods
insb
dec
cmc
arpl
push
mov
xor
push
and
mov
mov
arpl
sbb
adc
call
fdivr
xchg
xor
sbb
sbb
and
adc
mov
cli
in
push
inc
xchg
inc
iret
jmp
pop
jecxz
test
imull
pop
xor
and
push
lods
pop
jecxz
cmp
lret
imul
pop
sub
mov
mov
int3
call
push
adc
jl
pop
cmp
dec
xchg
adc
cmp
push
mov
pop
shlb
pop
roll
cmpsl
jbe
test
mov
gs
jnp
into
es
int3
cmp
push
popa
and
pop
cmp
mov
mov
aad
jo
shrl
add
xor
leave
pop
add
pop
or
pusha
rorl
fistpll
push
psrlq
subl
fs
popa
mov
nop
lods
cmp
pusha
mov
in
aas
pop
faddl
mov
fisttpl
dec
shr
sub
mov
and
idivl
pop
inc
test
cli
mov
hlt
aaa
pop
inc
int3
out
adc
lahf
pop
jmp
fidivs
xchg
ja
inc
sbb
push
popa
gs
cmp
push
mov
outsl
push
jae
fdivl
dec
and
and
pop
mov
clc
xor
push
lahf
inc
int
mov
cmc
jbe
mov
push
xor
bound
inc
xor
int
cwtl
mov
lahf
and
imul
repnz
jbe
or
mov
loopne
testl
sbb
jns
mov
cmpsb
add
xchg
loopne
outsb
jae
add
ja
shll
sbb
lret
int
cmpsb
call
fsubrl
jb
xchg
adc
sbb
sbb
sbb
and
mov
js
cmp
cmc
cmp
pop
adc
arpl
xor
call
xchg
frstor
rorl
mov
incb
idivl
dec
lret
inc
pop
imul
mov
or
cmp
mov
dec
push
xchg
mov
xchg
xchg
inc
add
sti
in
dec
stos
xchg
mov
push
cmp
notl
call
push
jb
sbb
inc
sub
and
adc
lcall
hlt
xor
add
cmp
push
gs
sahf
inc
int
mov
push
push
iret
mov
in
ljmp
and
jns
adc
stos
inc
fisttpl
inc
push
addr16
xchg
xchg
into
cmp
dec
sub
cltd
movq
dec
xor
push
pushf
xor
cmp
and
push
mov
xchg
add
scas
push
xor
cmp
jne
jo
daa
and
sbb
stos
movsl
sahf
sbb
sahf
fbld
xor
shlb
repz
add
mov
adc
mov
mov
jg
mov
dec
movsl
jae
and
mov
jg
jmp
and
mov
dec
mov
shlb
stc
jno
mov
stc
int3
ss
arpl
jge
pop
add
sub
and
jecxz
mov
push
loope
mov
xchg
adc
pop
xchg
mov
pop
addr16
ret
inc
les
xchg
or
les
cmp
jns
jecxz
cmp
shlb
jp
mov
pop
jno
jno
sub
push
mov
fiaddl
mov
nop
test
xor
pop
test
test
fildll
rorl
ret
mov
and
xor
dec
int
stos
loopne
loope
dec
jo
lcall
xor
adc
cltd
lea
mov
push
jo
ss
repz
into
pop
movsb
cs
pop
jns
negb
xchg
aaa
cli
push
cs
sub
cs
adc
into
add
mov
cmpsl
push
loope
or
xchg
push
call
mov
std
or
dec
notl
and
mov
xor
sahf
pop
movsb
xchg
insb
ds
movsl
add
adc
xchg
fsubrs
dec
and
imulb
cs
leave
ljmp
mov
jno
xchg
lahf
lods
seto
adc
fimuls
cmp
out
out
dec
repz
scas
sub
mov
push
loop,pn
bound
pushf
cmp
lds
jp
testl
call
mov
mov
movsl
inc
aas
lret
cmp
aad
pop
clc
ds
push
and
or
cwtl
pushf
xchg
int3
int3
jbe
stos
sub
in
sbb
js
cmp
movsl
lds
test
push
mov
shrb
adc
push
mov
std
sbb
clc
cmp
out
ss
xchg
dec
adc
shr
rcr
movsl
movsb
mov
add
idivb
mov
lods
push
jl
cmp
mov
xor
push
aas
pop
call
out
inc
mov
jnp
in
jnp
pop
stc
xchg
cmp
mov
shll
xchg
push
adc
mov
jmp
jae
pop
or
std
repz
mov
rcrb
repnz
mov
testb
mulb
into
pop
clc
xorb
fisubrl
int3
inc
xchg
dec
dec
out
mov
cmp
fldcw
pop
lea
cwtl
inc
imul
movzwl
add
xchg
xchg
and
sbb
jecxz
into
int3
add
pop
sbb
push
pop
clc
sub
pusha
lahf
adc
pop
in
iret
shll
cmpsb
cli
lea
popl
ficoml
jb
sub
and
rcrl
mov
decl
inc
movsl
inc
mov
cmp
ret
rorl
test
imul
xor
enter
dec
pop
adc
push
push
sub
cmp
loope
dec
and
bound
pusha
in
dec
les
pop
mov
push
mov
shl
jge
scas
movl
push
sub
pop
out
inc
cmp
in
push
stos
xchg
push
or
cmp
sbb
insb
dec
stc
xchg
pop
arpl
xor
or
out
jecxz
jl
loop
popf
inc
sbb
pop
outsb
dec
pusha
repz
mulb
out
add
lods
mov
mov
lods
pusha
lret
daa
in
push
lock
jae
push
test
loopne
dec
sbb
inc
mov
enter
pusha
repz
ss
jo
mov
stc
repz
imul
cmpsl
stos
xchg
in
scas
nop
pop
dec
xchg
lcall
or
mov
xorb
stos
lock
bound
mov
sub
sti
mov
sub
es
adc
mov
pop
outsb
vphaddudq
mov
cmp
std
jns
sbb
push
int3
arpl
outsb
lds
jp
xor
mov
in
or
xchg
jp
sub
scas
inc
push
insl
inc
jge
mov
out
adc
pushf
dec
repz
mov
call
mov
jo
nop
inc
and
dec
pop
cmp
je
movsb
cltd
out
std
mov
lds
jg
std
add
std
and
aaa
sahf
inc
sub
dec
xor
js
aaa
adc
aad
rcrl
lret
sub
rorl
rcr
push
xor
mov
cld
dec
jnp
mov
loope
xor
add
inc
xchg
push
aas
scas
movsl
stos
fstpt
xor
jmp
push
pop
outsl
stos
subb
pop
into
push
inc
add
xorl
add
add
roll
in
sbb
xchg
sbb
popa
xchg
js
mov
es
push
cld
cld
sbb
sub
int3
das
push
xor
sub
gs
dec
push
fdivs
xor
aas
lods
mov
push
inc
jnp
loopne
cld
imul
insl
mov
jle
xor
mov
mov
pop
popa
push
cmp
data16
inc
xadd
mov
or
xor
sub
movsb
enter
xor
jl
push
sbb
and
xchg
cmp
ja
jae
or
imul
fs
push
incl
xor
push
jae
push
loopne
jbe
jnp
mov
popf
jl
ljmp
jmp
decb
sti
add
and
sub
xchg
mov
xchg
mov
shlb
pushf
data16
ljmp
fcoml
lods
dec
stc
jb
sub
adcl
push
xchg
sbb
imul
inc
iret
lock
hlt
dec
mov
pop
xor
in
jle
movsb
jecxz
mov
mov
je
push
cmp
ficoms
mov
out
xchg
xchg
out
pop
mov
pop
dec
and
sbb
into
idivb
mov
out
mov
ret
sbb
mov
pop
push
pop
lea
mov
add
xor
popa
mov
pop
xor
mov
cmp
adc
inc
cwtl
hlt
cmp
and
cwtl
outsl
lcall
pusha
mov
test
mov
cmc
add
jo
mov
inc
xchg
sbbb
or
push
pop
pushf
xor
xor
xor
outsl
insb
jns
pmuludq
mov
roll
movsl
out
inc
mov
sbb
lods
sahf
cltd
pop
jp
popa
mov
movq
or
jg
lea
test
push
out
cmp
or
inc
sahf
lods
inc
mov
fbstp
mov
jmp
imul
mov
cs
mov
dec
ficoms
mov
into
dec
dec
mov
icebp
xchg
push
xchg
push
push
xor
outsl
mov
jmp
sbb
lret
leave
mov
or
or
cmpsw
idiv
mov
adc
mov
mov
lods
es
adc
in
imul
inc
jl
jge
in
and
shl
push
push
cmc
mov
xor
loope
sbb
ja
mov
aam
mov
test
lret
sub
sahf
ljmp
add
jecxz
adc
dec
jae
js
mov
push
vhsubpd
xchg
xchg
jmp
push
fisubl
mov
pop
dec
add
hlt
ror
scas
adc
lret
outsl
and
push
stc
aaa
inc
or
rorb
imul
mov
idiv
repnz
lahf
imul
add
cs
ljmp
adc
sub
cld
bound
xchg
sarb
addr16
adc
dec
mul
mov
sbb
ret
mov
movsl
cmc
shll
pop
loopne
sti
cmp
enter
bound
addr16
insb
iret
push
dec
push
pop
cmp
addl
jbe
sbb
xor
hlt
sbb
jb
jns
rolb
pushl
leave
out
cmp
dec
fisubs
mov
pop
pop
sub
xor
mov
out
jmp
mov
cmp
fnsave
lahf
pop
sub
push
jns
clc
rcl
pop
mov
mov
push
movsl
mov
fdivrl
mov
stos
xchg
loopne
cmp
fidivl
or
sub
subb
gs
repz
inc
fwait
rcr
repz
iret
or
inc
push
jg
inc
sub
inc
mov
jmp
pop
dec
leave
add
inc
push
in
icebp
adc
inc
mov
repnz
inc
add
aaa
repz
cltd
hlt
and
cmp
sbb
cmpb
xchg
lds
movsb
retw
push
lcall
popa
cmp
sarl
stos
push
addr16
or
pop
pop
mov
push
push
shll
dec
dec
sti
xor
mov
stos
out
push
mul
or
mov
je
xchg
ljmp
jne
cmp
bound
mov
inc
xchg
ret
scas
adc
jns
pop
or
fmuls
adc
mov
loope
jne
mov
divl
imul
sub
leave
mov
or
xor
aas
nop
bound
mov
lea
gs
out
aad
lcall
stos
rol
cmp
or
push
das
shrb
scas
xchg
sarb
dec
fs
and
out
push
jbe
xchg
sbb
loope
lods
mov
push
lret
or
inc
cli
imul
sbb
lret
jle
outsl
pop
xchg
pop
cli
mov
fidivrs
js
insl
mov
scas
add
and
cmp
push
in
fbld
aaa
mov
or
jmp
push
jmp
sahf
addr16
or
push
lds
jne
xchg
stos
sbb
iret
jbe
outsl
jl
enter
loopne
jne
fldcw
shlb
std
popf
add
sbb
lea
cwtl
sbb
int3
inc
inc
psubb
fsub
mov
fdivl
lock
sub
int
aas
bound
mov
sbb
dec
lods
mov
stos
js
call
mov
xchg
outsb
and
ljmp
adc
push
lock
pop
popf
stc
mov
push
pushl
mov
ficompl
sub
mov
and
jmp
popa
iret
dec
popa
mov
push
pop
mov
push
mov
add
nop
js
bound
sbb
inc
mov
std
decl
sub
test
or
sub
cli
sub
je
movlps
push
lds
inc
js
mov
jb
in
cmp
comiss
add
xchg
aam
push
mov
mov
pop
fimull
sub
mov
rorl
jmp
in
leave
js
lahf
out
inc
xchg
jmp
inc
cs
icebp
loope
inc
pop
stos
lcall
icebp
scas
jnp
xchg
mov
mov
add
xchg
scas
xor
mov
mov
lods
add
test
pop
aaa
mov
aad
mov
mov
mov
dec
mov
fimuls
lods
icebp
ss
test
loop
push
mov
or
inc
and
loope
pop
jecxz
cmpsl
and
ja
mov
push
rorl
and
je
jp
lock
cmpsb
sbb
add
out
lea
ja
mov
shrb
cmpsl
div
cmp
mov
shrl
arpl
ret
stc
push
mov
negl
jmp
daa
jge
out
cltd
and
shll
pop
fstpt
push
or
push
js
lret
iret
mov
or
inc
in
rorb
int
cli
pop
testb
gs
mov
mov
or
scas
out
sub
inc
mov
cld
mov
add
pop
fs
dec
sub
cmp
or
push
mov
mov
stos
jae
sub
sub
shll
mov
fldt
mov
xchg
subb
sahf
mov
lea
push
sbb
fstpt
fcomps
idivb
cmpsb
mov
mov
sub
jge
push
repnz
lds
loope
loopne
mov
pop
add
fwait
jae
dec
add
mov
mov
rcl
mov
xlat
nop
push
cli
lcall
xlat
dec
pop
lods
stos
daa
loop
sti
ficoml
cmc
sbb
fwait
daa
imul
pop
notl
repnz
scas
inc
xorb
mov
mov
xchg
rcr
in
sub
and
aaa
xor
push
pop
xchg
imul
mov
inc
fidivrl
stc
sbb
stc
imul
rcll
fcmovbe
sbb
xor
lcall
pop
jecxz
or
jne
movsl
or
cmp
div
dec
sbb
mov
pop
fcoms
push
mov
xchg
popf
mov
addr16
xchg
les
xchg
and
lds
dec
mov
test
fistl
imul
and
repz
scas
fdivrp
icebp
out
repz
xor
aad
inc
fs
cmc
repz
dec
sub
and
addr16
test
enter
mov
lret
push
xchg
inc
dec
movsb
pop
sbb
leave
cli
xchg
cmc
mov
enter
test
mov
jo
mov
stc
into
adc
test
cmpsl
in
mov
adc
mov
icebp
insl
or
rcrb
or
push
jbe
std
test
push
xchg
mov
cmpl
pop
fsubs
lods
mov
dec
push
into
xchg
out
cmp
inc
sbb
rcr
mov
add
xchg
cmp
add
imul
cmp
daa
fstl
popf
gs
outsl
outsb
hlt
cmp
jecxz
leave
lods
fsubr
add
dec
inc
sub
cmp
test
pushw
adc
stc
ret
es
fisttps
aas
xchg
fucomip
test
daa
pop
scas
mov
loop
and
push
aam
negb
add
cmp
cmp
push
sbb
in
jp
cli
jae
sub
inc
mov
mov
stos
jns
test
mov
lahf
lahf
mov
comiss
addb
jb
push
mov
jb
inc
shrb
cld
sub
and
xor
lea
push
dec
add
pop
iret
movsl
js
adc
addr16
mov
insb
movsb
ficoms
jnp
loopne
ret
sbb
in
fs
leave
xchg
xor
inc
mov
cld
shl
mov
add
lret
jp
jle
jae
in
ds
xor
add
jge
xor
insl
lods
xchg
movsl
sarl
cld
mov
pop
pop
cmc
fidivrs
pop
imul
mov
leave
mov
fwait
std
ret
outsl
push
in
arpl
push
fisttpll
fsubr
adc
fcompl
push
xor
add
xor
adc
sub
js
loopne
add
mov
mov
cmpsl
test
xlat
test
push
pusha
fcoms
xchg
jge
std
xchg
test
jb
push
and
add
adc
pop
aaa
movsl
push
aas
in
push
or
pop
lcall
pop
loope
xor
push
mulb
cmpsb
adc
test
rcr
movsl
or
lea
shlb
imul
push
cmp
outsl
enter
mov
jecxz
ror
jae
push
into
inc
dec
mov
dec
jb
repz
jns
fwait
or
jne
fs
mov
adc
fwait
aam
sub
int3
push
mov
ds
push
fld
in
enter
insl
push
xlat
dec
lret
mov
scas
mov
je
aam
ss
mov
enter
lea
mov
pop
xor
pusha
inc
lock
in
mov
out
dec
sub
mov
aam
mov
adc
dec
and
loop
mov
sbb
or
les
push
movsl
pop
mov
add
clc
ficoml
cmp
sbb
into
mov
jl
into
adc
imul
clc
into
inc
call
cmpb
je
mov
jo
call
idivl
mov
stc
jne
and
mov
mov
sub
mov
pop
hlt
or
dec
mov
in
inc
add
lahf
dec
rcrb
mov
stos
dec
dec
inc
cltd
icebp
xlat
xchg
addr16
adcb
push
pop
jecxz
call
pop
lahf
inc
sub
or
sti
fs
jb
nop
sar
dec
sub
xor
mov
sub
sbb
adc
in
or
lret
and
add
xchg
mov
mov
insb
xor
jge
and
sbb
int3
stc
addl
jno
lock
sti
ret
pusha
jecxz
and
iret
pop
lahf
fsts
pop
xor
cmp
lret
adc
or
in
mulb
fdivr
pop
pop
jae
vpackusdw
sbb
xchg
mov
bound
push
push
test
or
sub
or
add
jecxz
rcll
cmp
mov
fstpl
jmp
sti
xor
lret
hlt
lcall
faddp
inc
sub
test
ljmp
ds
lahf
clc
fistpl
insl
or
jbe
xchg
add
mov
jp
xchg
mov
das
dec
movsl
and
fcoms
das
add
add
scas
xlat
rcr
aas
xor
cmp
mov
jmp
push
pop
rcr
inc
mov
jbe
pop
pop
imul
iret
loop
pop
xorb
jge
sub
shlb
arpl
mov
sub
xchg
mov
dec
push
xor
pop
or
cwtl
outsl
stc
mov
popa
decb
push
dec
xor
test
pushfw
aaa
mov
xchg
adc
push
mov
ss
pop
mov
cwtl
outsl
sbb
pushf
xchg
cmp
ss
and
sbb
jae
testb
test
push
loopne
popa
iret
dec
jae
in
rclb
mov
jmp
addr16
xor
mov
mov
lds
xchg
clc
or
addl
ficomps
jo
lret
and
rcrb
outsb
and
pop
fistps
mov
imul
cmpsb
icebp
out
cmp
mov
rolb
mov
xor
add
negb
ja
inc
cmc
mov
mov
push
sub
popa
fstl
insl
mov
aas
stc
mov
clc
dec
movsb
xchg
scas
repz
cmp
aam
std
sub
mov
pop
test
pop
xor
into
xchg
sub
sub
sbb
dec
ds
push
pop
pop
xor
cltd
mov
fimuls
add
sbb
cwtl
xchg
bound
test
sbb
ret
sub
or
cmp
shll
mov
daa
bound
push
add
jg
jno
sbbl
lret
sti
dec
fwait
loopne
in
cmp
lret
shrl
cmp
mov
adc
jg
cwtl
jnp
adc
push
push
push
sub
dec
mov
in
sahf
jae
add
pusha
lret
sbb
ljmp
cmp
in
stc
mov
dec
mov
jo
sbb
leave
hlt
sub
or
jecxz
push
rorl
push
shll
outsl
je
mov
ret
jo
addb
pop
push
inc
mov
lret
leave
scas
in
rcrl
movsb
fildll
jne
cmpsl
add
pop
les
test
call
cmp
push
fstps
int3
stos
into
add
jne
jge
xchg
cmp
ds
pop
fwait
inc
outsl
imul
mov
jb
sub
push
dec
xchg
dec
out
sbb
pop
movsb
pop
cmp
pushf
mov
add
mov
aam
aad
and
push
or
repnz
xor
out
and
xchg
mov
cmp
iret
out
push
cld
enter
stos
jle
jae
test
mov
das
xchg
lahf
mov
add
fsubrs
inc
sbb
inc
xchg
lods
ja
inc
int3
repnz
repnz
xchg
add
push
ficoml
sbb
adc
and
xor
test
cmpsb
pop
xchg
mov
adc
jmp
xor
mov
frstor
mov
sbb
push
pop
inc
push
sbb
xorb
daa
sbb
mov
ret
xor
aam
and
sbb
mov
mov
shlb
xor
mov
fiadds
xor
ficoms
ret
dec
into
mov
sbb
pop
mov
in
mov
add
xchg
ret
cmp
inc
dec
lea
xlat
inc
into
pusha
sar
xchg
pop
test
sub
xor
scas
mov
or
ja
insl
pop
inc
in
insb
pop
and
add
rcr
xchg
movsl
sbb
inc
cltd
pop
rcpps
sbb
mov
imul
cld
test
inc
cltd
fsincos
push
ds
stc
sub
test
orb
push
dec
or
or
cwtl
js
in
sti
push
mov
xchg
rcrl
push
jb
mov
testb
mov
cmp
jb
aad
shll
jle
or
jg
jle
iret
ret
sub
mov
int
mov
daa
xchg
ds
adcb
js
jnp
std
test
pop
cmp
inc
push
adc
not
jmp
pop
mov
push
fdivs
adcl
cmc
inc
js
jno
scas
lcall
jge
out
pop
out
mov
push
jns
popf
push
push
ljmp
sbbl
push
cmp
scas
fmulp
pop
pop
jg
stc
lods
cld
dec
rcrb
cmp
in
sub
pusha
mov
clc
ds
and
mov
push
cmp
test
pop
fs
pop
mull
movsb
daa
dec
sub
mov
les
ss
xlat
xchg
cltd
cmp
dec
add
roll
aaa
pop
xchg
mov
xor
inc
add
mov
daa
pop
or
add
jg
dec
push
jb
xchg
jmp
jmp
andl
lds
xlat
and
push
scas
nop
push
popa
call
outsb
pop
insb
jmp
xlat
sub
pop
test
sahf
add
sub
das
sti
jmp
pop
jp
inc
jmp
jbe
push
push
or
stos
nop
test
adc
add
mov
stc
in
in
mov
pop
jmp
clc
mov
rclb
xchg
ficoms
test
int
lods
loope
daa
jg
xor
loopne
orl
sti
shl
add
out
dec
psllw
jbe
push
mov
mov
dec
and
xchg
sub
call
jbe
push
mov
mul
mov
mov
sub
out
mov
pop
and
inc
fs
push
xchg
and
rol
or
inc
fwait
divl
aad
nop
ficomps
enter
jecxz
sbbb
xchg
jb
rcll
mov
fwait
test
aam
jae
outsl
imul
pusha
imul
dec
dec
inc
movsb
ficomps
nop
xchg
mov
dec
cltd
cld
fcomi
adc
jnp
fdivr
sub
add
rcrb
aas
insl
fcomp
jmp
sahf
gs
jns
cmp
cmp
cwtl
in
dec
inc
insb
push
ljmp
sti
xor
mov
mov
cmp
mov
stos
inc
push
sub
mov
xchg
jae
rol
fidivrl
xor
xor
out
lods
dec
jo
pop
and
sub
mov
std
or
sarl
arpl
lret
fmuls
xchg
and
imul
push
sbb
sbb
loope
pop
xor
test
arpl
fstpl
or
sti
sbb
mov
dec
jbe
fistpl
push
stos
push
les
cmp
push
add
cmp
jo
mov
jg
inc
mov
cmc
pop
shlb
rorl
cwtl
cmp
fadds
popa
sub
mov
xor
fcmovu
bnd
xor
sbb
cmp
xchg
test
test
jp
xlat
fsubrs
rcr
cmp
mov
jl
in
bound
mov
das
jns
hlt
or
mov
push
pop
popa
adc
stos
mov
add
stos
xchg
push
dec
imul
adc
jp
jb
cltd
sub
test
ss
add
mov
sahf
out
roll
ret
loope
movsb
aad
mov
jp
xchg
insb
lds
iret
add
sbb
pop
mov
pop
push
lods
shlb
cwtl
pop
pop
mov
mov
dec
fmul
jbe
int
or
push
or
or
xor
mov
in
mov
mov
push
int3
loope
fstl
inc
push
sub
cli
pop
stc
data16
mov
mov
cs
imul
cmp
ret
test
xchg
and
outsb
adc
or
les
testl
mov
lock
xchg
pop
add
dec
iret
sub
cmp
add
mov
cmp
aaa
clc
xchg
or
call
cmc
inc
or
outsb
sbb
add
scas
mov
outsb
fsincos
or
dec
stc
push
jb
mov
cmpsb
out
sbbb
sub
push
sub
add
dec
test
mov
enter
dec
jne
rorb
subb
sbb
mov
xchg
inc
and
ss
push
jecxz
xor
xchg
loop
je
aaa
enter
mov
fwait
ja
shrb
imul
jne
aam
mov
repnz
or
sarb
out
xor
xor
mov
and
pop
or
lret
repnz
test
or
cmpsb
daa
repnz
lds
out
xor
adc
bnd
dec
mov
das
subl
cmp
mov
add
movsb
test
lea
xor
push
mov
mov
pop
xor
ss
addb
inc
clc
fdivs
lahf
cld
fsubl
push
dec
mov
push
jl
pop
ret
pop
push
or
sub
or
outsl
pop
xor
add
mov
arpl
enter
data16
jbe
mov
pushf
ret
add
adc
cmp
jg
in
inc
in
aam
fld
movsl
sarb
cmp
mov
ds
mov
popf
cmp
and
sbb
jp
rolb
adc
bound
dec
inc
fnsave
cmp
cmp
pop
bound
mov
or
arpl
repz
jne
orb
push
push
cwtl
push
in
adc
push
out
ficomps
lret
out
out
add
adc
out
cmp
ret
out
or
pop
sub
leave
lods
mov
pop
push
shlb
dec
int3
dec
dec
and
or
je
arpl
mov
push
shll
movsb
arpl
inc
adc
scas
push
jge
push
xor
sbb
jmp
es
gs
push
rcr
loope
aas
sbb
add
push
xor
andb
ret
add
pop
mov
xor
cmp
jle
push
xchg
add
test
mov
jle
mov
cmp
mov
push
lcall
mov
xchg
and
xchg
add
adc
popl
sbb
add
add
xchg
pop
in
xchg
sar
mov
fdivrl
pop
enter
icebp
arpl
movsl
imul
mov
aad
rcll
insl
xor
pop
js
shr
xlat
lea
jno
sbb
sub
inc
adc
or
out
lock
and
inc
stos
mov
cmp
mov
call
es
pop
inc
cmpsl
shrb
xor
jecxz
inc
je
jmp
ret
into
aas
xchg
hlt
adc
xchg
sbb
cmp
lds
or
mov
adc
aaa
mov
fcompl
jp
mov
imul
inc
or
sbb
imul
adc
data16
and
xchg
inc
push
testb
mov
push
jne
test
jae
pop
pop
adc
sub
dec
sar
cwtl
sbb
es
and
arpl
enter
xlat
addb
push
pushf
pop
sahf
lret
aas
int
sbb
call
push
sub
pop
jnp
cs
test
inc
icebp
dec
arpl
sub
jae
clc
rorb
or
sti
jg
in
insb
and
push
insb
aad
arpl
mov
xor
mov
adc
out
leave
jp
adc
push
fdivrl
cmpsl
cmc
cld
repz
cmp
add
push
pop
jns
inc
sti
sbb
cld
int
mov
xor
lret
out
sarl
inc
aad
mov
adc
inc
mov
and
iret
add
mov
das
xchg
inc
cmp
testl
or
in
mov
std
les
xchg
fwait
add
inc
mov
jbe
scas
push
cltd
stos
jge
add
add
repz
call
shll
lret
arpl
and
cmp
ss
js
dec
std
ret
mov
lods
add
or
push
movsb
inc
mov
in
lods
fisubrs
adc
mov
mov
es
fwait
mov
popa
or
dec
imulb
ret
and
in
aas
stos
xorb
flds
inc
pop
cmpsl
imull
jnp
sbb
out
push
xchg
mov
rcr
ret
aas
push
adc
pop
adcl
sbb
leave
and
stos
mov
rorb
call
xlat
insl
mov
sbb
cmp
mov
ret
dec
jl
push
pushw
and
push
jne
enter
fmuls
das
cmpsb
mov
sahf
mov
mov
pop
fst
inc
imul
stos
leave
cmp
pop
xlat
mov
addr16
mov
cmpsb
aad
mov
dec
movsl
testb
ret
pop
int
mov
loope
sub
mov
dec
mov
lret
ds
fldcw
and
cmp
pop
or
fnstenv
pop
mov
mov
cmpsl
lds
ret
mov
jle
enter
xchg
arpl
sbb
xor
xchg
jno
dec
fildll
xchg
push
imul
rcrb
out
cmp
aad
mov
movsb
rol
add
mov
dec
sbb
lcall
repz
xor
pop
xor
imul
in
mov
and
push
dec
fstl
adc
pusha
mov
pop
sbb
sub
mov
dec
mov
xchg
mov
lds
xor
movsb
mov
inc
dec
fst
jl
pop
stc
jne
add
in
loop
jle
xchg
xlat
imul
imul
jbe
xchg
cmp
test
jmp
pop
sbb
clc
xor
inc
fisubl
cmp
and
or
arpl
ja
pop
mov
aas
jb
pushl
je
mov
xchg
push
xchg
fcomps
mov
inc
pop
lds
loop
push
dec
imul
lods
ljmp
sbbl
push
lret
mov
addr16
lret
adc
mov
sub
xchg
inc
les
xor
das
xlat
adcl
mov
xchg
movsl
std
or
or
je
in
movsl
push
add
sbb
in
loopne
jnp
xchg
scas
imul
in
mov
dec
mov
insb
add
pop
lock
shrb
sbb
add
aad
shlb
dec
push
stos
rolb
inc
icebp
mulb
lret
sahf
repz
sub
sub
iret
clc
sahf
pop
sub
jle
sti
ficoml
lret
jne
lret
stos
adc
movsb
pop
scas
jle
or
ficoml
stos
mov
ljmp
ljmp
mov
aas
mov
inc
push
or
test
and
testb
mov
enter
inc
xor
test
adc
xchg
add
insl
filds
jno
mov
mov
xchg
imull
xchg
cmpsb
xor
xor
cmpsb
ret
jmp
cmp
adc
xor
ds
mov
popa
mov
cwtl
flds
adc
roll
ljmp
std
jno
ficoml
popa
cmpsl
mov
in
ret
push
movsb
test
clc
pop
sbb
in
add
sub
or
pushf
dec
sbb
inc
pop
mov
mov
push
aam
dec
xchg
pop
xchg
dec
jl
xchg
adc
mov
dec
jg
pop
jno
addr16
lods
mov
push
int
jne
enter
push
cmp
mov
enter
ss
lcall
push
js
mov
incl
bound
inc
jnp
cmp
or
clc
xchg
fsubrp
xor
xor
jo
mov
ljmp
cltd
das
pop
adc
pop
les
sub
pop
inc
loope
sbb
mov
divl
sbb
popf
daa
test
lods
mov
mov
sub
xchg
push
and
arpl
dec
dec
mov
push
xchg
mov
out
pusha
in
jae
mov
or
lds
std
xchg
and
xor
mov
jae
jnp
sub
inc
cmp
push
sbb
rclb
pop
cwtl
sub
sbb
mov
and
aaa
inc
mov
cmp
xor
jmp
pop
adc
outsb
ficompl
movsl
cmp
xchg
mov
and
and
jne
add
das
lcall
pop
add
mov
push
adc
insb
fsubrs
push
or
pop
aas
das
mov
loopne
dec
aas
push
cld
rorl
cmp
out
pop
xor
pop
pop
dec
add
cmp
and
and
jl
mov
aam
divl
lods
lret
arpl
push
adc
repz
mov
and
test
or
ss
addr16
popl
mov
adc
int3
jno
lcall
cltd
repnz
jge
shll
sarl
int3
add
stos
xor
mov
movsl
jb
xlat
mov
push
mov
mov
jg
rolb
icebp
mov
xchg
mov
cmc
jb
orl
cmp
dec
adc
not
cmpsl
mov
or
ds
cmc
out
mov
lods
mov
xchg
adc
ficomps
mov
in
sbb
into
in
mov
cmp
imul
clc
adc
pushf
push
out
les
pop
mov
sbb
push
mov
push
push
iret
cmc
jl
in
sbb
add
dec
push
jle
jle
lods
push
pusha
outsl
orb
pop
pop
fistps
jmp
std
ret
clc
mov
shl
add
mov
push
stos
das
or
loope
xor
cmp
pusha
mov
mov
into
mov
mov
xor
jp
mov
test
jne
cmp
scas
test
imul
sub
adc
mov
adc
scas
lods
fcoms
fnstcw
jne
push
dec
add
push
push
inc
jbe
fs
xchg
mov
int
xchg
jp
clc
jbe
fnstsw
xchg
dec
jae
es
adc
scas
sbb
imul
dec
lods
adc
in
rorb
call
loope
jecxz
mov
jle
stc
mov
sarb
mov
out
outsl
imul
or
or
pop
mov
dec
dec
mov
dec
add
movl
mov
in
dec
cltd
adc
sbb
scas
in
and
mov
fnstenv
mov
lea
sub
je
cmp
mov
mov
xchg
jno
mov
xlat
aam
das
into
and
call
push
sarl
movb
in
push
or
popa
push
push
jb
xor
test
outsb
mov
dec
xor
and
pop
and
push
or
test
ss
push
cltd
inc
out
lds
sbb
data16
xor
mov
jge
cpuid
push
adc
mov
dec
popa
int
mov
popa
imul
das
pop
mov
std
sbb
or
mov
es
xor
fsts
xchg
mov
ljmp
in
add
pusha
stos
pushf
pop
cltd
sub
push
fwait
sub
xchg
xor
sahf
ret
mov
cmc
add
loope
lcall
fbld
push
lret
sub
xchg
out
dec
inc
ds
test
sub
shlb
cwtl
iret
sub
inc
enter
dec
mov
mov
xlat
inc
push
pop
adc
xor
enter
xor
push
xchg
xchg
adc
in
call
jle
aad
xor
ror
pop
mov
inc
pop
test
lret
fiadds
push
jbe
fisttpll
xor
adc
push
adc
scas
out
cmp
mov
sbb
loop
push
push
dec
mov
fucomip
sti
std
push
out
inc
adc
add
push
mov
lock
add
lock
ret
fcompl
inc
out
fisttpl
cmpsl
subb
jae
ja
notb
jb
sbb
shl
mul
into
outsb
or
and
stos
pop
lds
rcl
push
lret
mov
daa
cs
inc
cmpsl
mov
mov
or
fdivl
mov
std
rorb
dec
push
mov
insb
outsl
and
jne
cmp
mov
adc
mov
iret
xchg
jb
or
ret
imul
fstl
xchg
aam
jbe
mov
lock
or
cltd
mov
repz
repz
xor
int
out
popa
les
inc
lahf
cltd
mov
imull
out
testl
and
mov
xchg
orb
cs
add
ds
sbb
out
shl
sub
js
rorl
xor
xchg
mov
pop
add
xchg
dec
push
sahf
inc
pop
sarb
pop
pop
test
mov
cmp
add
cmp
xchg
insb
icebp
pop
dec
add
rorl
ljmp
lds
cmp
and
fisttpll
loop
roll
test
add
xchg
jle,pt
jmp
or
pusha
mov
ret
pop
sbb
loop
mov
ret
adc
inc
push
scas
pop
mov
xchg
jne
mov
sbb
sub
xchg
add
iret
iret
cmp
repnz
in
imul
or
and
in
outsl
sbbb
imul
mov
cld
in
sub
test
dec
cmpsl
jge
adc
push
push
les
in
sbb
jl
adc
sahf
jge
mov
or
jmp
and
jp,pn
or
sti
bound
mov
imul
std
and
adc
movsl
mov
mov
repnz
test
or
mov
and
sbb
xlat
push
dec
mov
push
gs
lods
pop
test
adc
jp
cli
les
test
faddl
dec
ds
jecxz
movsb
bound
adc
push
fiaddl
cmpsb
ret
pop
jmp
jp
or
xor
out
cmpsl
push
jb
jle
cmp
jl
test
sbb
cmp
test
testb
mov
mov
mov
movsb
je
sbb
orl
repz
sbb
push
jl
jmp
push
cmp
jge
xorl
or
adc
inc
movsl
fs
and
mov
dec
std
in
mov
mov
inc
jae,pt
in
fstl
and
fmul
and
call
popf
dec
cmp
sbb
mov
jae
repz
nop
shlb
enter
negb
or
cmp
jae
sbb
jns
pop
imul
cltd
mov
leave
cltd
mov
dec
jmp
dec
clc
ret
mov
fstps
cmp
xlat
fstps
iret
push
dec
push
mov
mov
sti
jmp
xchg
imul
pop
je
int3
xor
loop
imul
add
mov
std
imul
andl
inc
mov
push
loopne
into
mov
fists
pop
cmp
push
mov
xchg
sbb
stos
daa
dec
dec
repz
xor
xchg
scas
repz
xchg
dec
movsl
and
ret
in
inc
mov
adc
lahf
imul
insl
or
cmp
je
out
pop
dec
jne
dec
cmp
and
push
dec
ss
and
cs
fwait
je
cltd
das
repnz
jbe
sbb
mov
enter
adc
push
push
jecxz
add
cmp
test
ret
andb
std
dec
jns
add
fstpl
xor
cld
add
jge
adc
ja
push
mov
sbb
leave
imul
push
xchg
addr16
call
sbb
push
sub
pop
xor
add
sti
lret
mov
sub
lock
sub
mov
insb
int3
ret
or
iret
enter
mov
mov
cmpsl
popf
insl
mov
cmc
sub
cli
pop
jl
mov
scas
xor
in
in
xor
xor
daa
pop
popa
nop
incb
mov
push
lods
push
repz
xor
sub
xor
sbb
inc
out
out
mov
out
rcll
cltd
lods
cmp
pusha
lahf
or
popf
xchg
scas
cmp
pop
push
jae
frstor
xchg
bswap
je
jbe
pop
out
aad
dec
fidivrl
lods
sub
or
mov
repnz
and
cli
mov
stc
xor
xchg
clc
std
xor
jne
xchg
push
mov
bound
fstps
push
into
mov
sbb
or
push
push
pop
cmp
hlt
cmp
imul
movsl
subb
or
pop
es
push
imul
cmpsl
or
sbb
fcmove
ficoml
jae
idivl
stos
push
pop
rcl
out
push
xor
sbb
push
lret
push
rcr
fsubs
pop
leave
inc
and
mov
das
gs
add
das
push
orb
inc
insl
jnp
shlb
paddusb
jb
cmp
xchg
mov
add
push
xchg
sub
sti
not
or
add
insb
mov
or
std
icebp
sarl
fdivl
loope
push
fistpll
arpl
cmp
sar
and
inc
mov
jne
and
add
dec
lock
fmull
pushf
dec
shlb
mov
insb
aas
shlb
cli
cmp
xor
mov
lods
mov
lods
popa
lock
mov
sahf
and
in
clc
test
mov
andl
stc
cmp
cmp
cmp
int
les
sbb
jno
cs
or
mov
push
out
pop
fdivr
jg
xor
fnstenv
fadd
sbb
dec
push
faddl
fdivrs
pop
cli
lret
cld
jno
js
insb
imul
and
lcall
repnz
xchg
lret
fnstcw
pop
pop
push
addr16
pop
and
mov
or
jl
cmpsb
out
stos
std
sarb
shrl
add
cmpl
adc
mov
lahf
xchg
jns
mov
xlat
jl
andb
iret
inc
fisttpl
cmp
cs
stos
mov
dec
or
fdecstp
ja
add
aam
int3
repnz
rcrb
in
movsl
mov
loopne
out
ret
cmp
popf
aam
push
jb
cmp
and
mov
push
or
jbe
cmp
mov
pop
repnz
jp
pushf
pop
xchg
xchg
jne
pop
push
outsb
int
test
stc
ss
in
inc
sbb
xlat
xchg
popa
les
loopne
call
scas
jg
add
sub
aas
lea
fsubrp
sbbl
int
jmp
fidivs
jmp
pop
mov
xor
xor
cltd
jne
std
sbb
pusha
mov
outsl
sub
movsb
test
jge
push
into
sub
test
sbb
inc
repz
outsl
add
aam
in
adc
xor
add
imul
and
push
dec
jge
or
cs
sub
lods
add
std
push
iret
jp
sub
test
cmp
test
gs
int3
in
jb
pop
call
out
mov
xchg
dec
xchg
inc
fdiv
stos
loopne
lcall
sbb
and
js
dec
jmp
cltd
gs
outsb
pop
cmpsl
dec
push
mov
int
push
fnstsw
cmp
jl
inc
mov
mov
jnp
mov
xor
push
out
inc
int3
call
xor
pop
addr16
in
rorb
adc
mov
xor
ja
pop
jmp
movsl
sbb
insl
and
dec
popf
repz
lods
dec
shlb
cmpsl
pop
inc
inc
gs
pop
sub
adc
jmp
mov
mov
mov
pusha
cmp
rclb
mov
out
or
inc
cld
sub
push
test
jmp
cli
out
mov
add
jnp
inc
pop
jge
mov
lret
dec
pop
test
xor
xor
sahf
fildl
pop
inc
cs
fcompl
jnp
jns
in
inc
mov
ja
lods
std
xor
sbb
or
mov
pushf
jecxz
loope
jno
inc
dec
mov
xchg
loopne
repnz
out
jecxz
shrb
mov
add
testl
mov
xchg
lcall
cmp
or
shrb
in
inc
dec
adc
inc
cmp
xchg
lds
mov
testl
xchg
movsb
call
add
lret
adc
sub
scas
xorl
insb
ret
sub
mov
ss
pop
mov
adc
test
inc
push
pushl
jae
js
mov
mov
bound
popa
loopne
arpl
push
adc
add
push
adc
shrb
imul
clc
dec
lcall
dec
jbe
pop
les
push
sarb
pusha
sbb
mov
out
lret
bound
jb
test
jns
adc
adcl
push
cmp
ret
pop
int3
dec
into
dec
cld
mov
jns
repnz
lret
xor
ficompl
xchg
xchg
xchg
aad
mov
and
sbb
mov
add
cmp
jl
mov
dec
dec
sti
loopne
jns
pop
lds
mov
insl
xchg
jge
ss
std
cld
mov
mov
fldlg2
test
and
repnz
cmp
stos
ret
call
pop
fimuls
pop
clc
mov
call
je
push
sbb
dec
nop
xchg
leave
ss
mov
inc
cmp
leave
call
or
mov
fisttps
dec
pop
fimull
lock
push
xor
lods
js
pop
inc
inc
push
call
les
pusha
inc
cwtl
mov
mov
xlat
stos
mov
sbb
gs
xor
std
les
cmpsl
cmc
aas
jmp
dec
lcall
pop
fildll
jbe
hlt
xor
add
aad
pop
xchg
pop
inc
jbe
ret
lret
test
jb
jg
push
push
dec
mov
mov
push
inc
pop
in
aam
jno
movsb
cmp
lcall
or
dec
sti
orl
jbe
test
fidivrs
rcl
popa
movsl
mov
in
inc
lahf
iret
mov
jo
inc
fstl
jbe
fsqrt
in
fldenv
cmp
mov
call
add
loope
cli
iret
or
inc
aas
and
fildll
lahf
dec
push
ja
jo
dec
sub
addb
sub
mov
test
stos
push
pop
mov
or
int
rclb
pop
fcomps
stos
stos
stos
xor
ret
dec
loope
add
leave
outsb
and
insl
inc
cmpsl
inc
pop
xor
mov
movsl
loopne
xchg
repz
outsb
push
ja
gs
jne
xor
cmp
inc
mov
repz
dec
inc
ljmp
mov
cmc
cmp
pushf
jge
xchg
push
push
mov
mov
sub
das
icebp
pop
pop
add
or
jb
jb
mov
mov
sbb
or
out
addr16
sbb
sbb
shll
and
push
sti
xchg
insb
ljmp
ljmp
jecxz
or
jg
xor
cld
imul
dec
and
inc
js
lea
mov
lods
fstl
pushl
and
inc
cmp
shll
push
mov
xchg
dec
sbb
push
jge
xchg
and
xorl
push
mov
jecxz
shll
mov
scas
push
mov
das
sub
cld
pop
xor
mov
ja
scas
add
aas
in
fdivrp
and
lahf
sbb
les
sbb
repz
in
or
sahf
stos
pop
xchg
xor
mov
mov
jecxz
mov
jbe
aas
mov
jo
cs
push
mov
test
int3
pushf
mov
movb
in
push
push
test
insb
or
add
frstor
lods
ret
pop
sarb
hlt
dec
dec
call
push
and
push
iret
xor
inc
div
hlt
xchg
adc
inc
stos
out
outsb
and
pop
mov
lcall
mov
or
add
fistpll
mov
jo
fdivrs
and
mov
cmpsl
cmp
inc
insb
cmp
pop
lea
adc
insb
jae
int
ret
fcomi
mov
mov
mov
pop
daa
jl
xor
loopne
pop
popf
cld
fcomps
call
sbb
push
jmp
loop
aas
pop
mov
xor
dec
cmp
push
repnz
sti
pop
push
mov
loop
divl
ja
movsb
repnz
and
fisttpl
jbe
pop
add
mov
push
lcall
cmp
jno
push
inc
repz
sbb
nop
push
mov
cmp
pop
aam
push
or
cltd
or
loope
stc
add
cmc
push
cli
push
jle
mov
push
mov
pop
jo
leave
pushf
and
fisttpl
push
divl
das
cld
in
push
jle
pushf
ja
xor
in
pop
out
gs
add
pop
mulb
movsl
ds
out
jnp
ficoms
push
jbe
add
int
xchg
xor
mov
loopne
ret
aas
and
loope
push
mov
cmp
out
jnp
sub
add
dec
aaa
ja
ja
mov
or
xor
roll
push
sub
pop
ss
xchg
sub
adc
lods
subl
xor
mov
adc
fnstcw
fucomp
push
shrl
jns
out
inc
xor
pop
arpl
pop
push
add
lea
loope
and
sub
aad
pop
fdivrl
fnsave
cmc
dec
inc
pusha
andl
xor
pop
jecxz
jnp
movsl
sahf
lret
lcall
dec
sub
push
aas
push
shlb
cmc
fucom
mov
stos
arpl
fsubrl
sti
lods
rclb
fldt
mov
add
xlat
add
lods
mov
pop
dec
dec
fwait
hlt
stos
loop
mov
jmp
les
xchg
pop
outsl
or
ret
add
icebp
cmpsl
addb
inc
ds
sbb
add
inc
js
sub
insb
ljmp
xchg
addr16
jo
push
test
movsl
and
sbb
xchg
leave
outsb
push
mov
pop
iret
aas
xchg
pop
or
mov
mov
cmpsl
dec
lret
mov
dec
add
stc
mov
sub
jmp
inc
add
lea
inc
out
cwtl
aad
cmpl
xor
dec
sub
lods
jecxz
fisubl
scas
add
sub
or
pop
and
shrl
xor
xchg
xchg
mov
rcrw
add
xor
nop
pop
sub
add
xor
loopne
outsl
push
push
xchg
push
push
fs
ja
pop
bswap
lock
cld
lock
icebp
or
lret
jne
jg
das
xor
je
xchg
sub
fists
jmp
pushaw
out
or
cmc
adc
push
jmp
push
mov
sahf
push
jns
cmp
flds
or
movsl
lock
lahf
mov
rorl
out
inc
jnp
aas
je
jae
andb
stos
pushl
pop
icebp
fwait
aad
inc
into
push
mov
clc
mov
daa
push
inc
mull
jne
mov
pop
shrl
inc
xchg
ret
out
mov
cs
insl
dec
into
shlb
push
test
mov
xor
push
leave
aad
jecxz
or
into
pop
jae
jmp
sub
push
xor
divl
shlb
insl
in
roll
in
icebp
pop
or
inc
cli
mov
push
mov
mov
push
sbb
outsl
push
mov
sbb
or
xchg
mov
outsl
jns
mov
push
pusha
or
test
cld
daa
fcompl
pop
out
sbb
out
int
scas
push
sbb
das
jle
insl
inc
push
adc
lods
je
out
mov
cltd
add
lret
lea
mov
enter
ja
mov
jnp
imul
or
cli
xor
or
pop
lahf
mov
ret
in
push
sbbl
pop
pop
stos
xchg
out
push
bound
popf
movsl
into
xchg
push
jns
jno
mov
dec
push
aad
cli
cltd
pop
push
inc
and
cli
out
or
mov
lock
cwtl
sbb
mov
and
gs
idivl
leave
push
inc
js
or
dec
and
or
popa
sub
cmpsl
cltd
pop
mov
test
or
sbb
in
dec
pop
cmp
inc
mov
adc
dec
mov
je
inc
int3
int
rclb
pop
iret
mov
fsubl
cmp
push
mov
std
sub
mov
int3
cltd
in
stos
outsl
sub
push
daa
dec
or
add
inc
push
loopne
adcb
iret
addr16
or
fld
out
sbb
pop
pop
in
mov
test
js
int
mov
jae
pop
cltd
inc
xor
je
fidivs
jb
lss
jb
subl
or
mov
push
cmc
ja
mov
sub
leave
pop
je
stos
test
mov
push
aad
outsb
sbb
cmpsb
mov
out
popa
sub
js
push
sti
pop
mov
fisubl
xor
inc
push
xchg
ja
or
adc
mov
xor
imul
ja
cmp
add
push
fnsave
in
inc
dec
mov
imul
jmp
pop
lahf
icebp
push
cli
push
dec
std
in
sbb
lcall
in
cmp
cld
mov
call
scas
test
cmp
jne
jo
out
cli
dec
xchg
ret
into
jecxz
xor
rolb
je
enter
jae
addb
addr16
push
cltd
xlat
in
mov
nop
mov
aad
ret
movsb
insb
daa
shrl
and
adc
movsb
movsl
jae
jnp
int
andb
add
rcl
mov
ljmp
cmp
lcall
loopne
jmp
leave
push
push
cmpsl
inc
in
jae
jns
pop
xchg
sahf
ss
aaa
repz
int3
scas
mov
decl
data16
in
inc
push
enter
xchg
jnp
out
call
daa
inc
pusha
jmp
inc
cmp
and
imull
mov
insl
cmpsl
inc
mov
sahf
inc
xchg
jbe
dec
std
js
sbb
lea
and
dec
push
mov
in
sbb
loop
push
adc
inc
dec
jne
mov
ljmp
loopne
subl
sahf
jg
push
pop
lret
enter
xchg
imul
lock
or
addl
std
cmc
dec
lock
inc
hlt
xor
sbb
or
push
out
push
fdivs
lretw
xor
xchg
cmc
jns
xor
in
cmpsl
add
cmc
gs
sbb
pusha
test
jno
lret
insb
mov
pop
mov
outsb
cmp
fyl2xp1
cmp
mov
cmp
sbb
fcmovne
ret
cmp
fwait
adc
ja
leave
push
sub
push
cmp
jp
push
dec
xor
arpl
inc
jbe
dec
es
dec
nop
stos
jecxz
inc
dec
lret
in
mov
jmp
out
jne
add
adc
roll
mov
cmp
dec
add
mov
psubq
lahf
sbb
xor
mov
cmp
js
dec
pop
push
mov
dec
add
push
fcmovnu
ret
add
insb
and
repz
add
movsb
xchg
out
pushf
and
jp
pop
or
daa
or
xchg
and
stos
cltd
rcrb
out
scas
sbb
out
test
addr16
add
push
imul
and
add
jb
test
or
js
mov
in
pushf
push
test
pop
push
sub
testl
pop
push
dec
fs
js
mov
loopne
xchg
dec
movsl
sbb
dec
push
dec
cld
std
out
repnz
pushf
xchg
pop
adc
add
inc
sbb
in
pop
pusha
test
and
call
xor
sarl
dec
cmp
pop
dec
pop
sub
pop
xor
shll
cwtl
mov
cmpsb
outsl
sub
in
mov
shll
test
cmp
sub
enter
fiadds
xchg
mov
dec
cmpsb
mov
ficoms
std
pop
push
lret
jbe,pt
lcall
ljmp
cmp
xchg
lahf
cs
xor
mov
bound
cmp
ljmp
fcoms
aam
mov
fcoml
out
xor
ds
adc
or
xlat
movsb
js
scas
ret
bound
and
cwtl
faddl
enter
pusha
and
mov
push
xor
pop
daa
scas
outsb
inc
push
xor
and
mov
lret
lcall
sbb
xchg
jne
mov
ret
jo
outsl
cmpsl
pop
cmp
rclb
imul
add
hlt
popf
inc
adc
mov
mov
pop
orl
rorl
fstps
insl
lahf
or
push
cmp
enter
scas
pop
or
push
push
testl
js
push
pop
mov
push
enter
adc
pmaddwd
adc
loopne
mov
mov
jno
dec
in
out
arpl
pop
mov
test
cmc
ljmp
dec
pop
popa
and
dec
dec
jb
pcmpeqd
cmpsl
or
push
push
insb
jns
add
call
int
lahf
jo
push
mov
movsl
push
adc
je
sarb
dec
xchg
mov
out
or
sbb
sbb
adc
inc
in
mov
je
pusha
jo
jb
std
mov
das
psrlq
pop
loopne,pn
sub
sbb
inc
sti
jns
xchg
mov
pop
out
adc
xchg
mov
test
sub
cmp
nop
sbb
pop
cmc
push
roll
mov
adc
outsb
cltd
js
pop
jbe
jl
pop
mov
lods
push
sub
jnp
jl
outsl
jb
sub
mov
inc
int
jecxz
lahf
jp
loop
in
imul
insl
insb
daa
test
cmpsl
ljmp
iret
fcmovnu
lcall
push
adc
or
mov
pop
or
insb
adc
lods
adc
testl
test
dec
adc
mov
pop
jg
sub
dec
mov
fs
sbb
out
lods
mov
sub
imul
add
es
push
or
in
clc
xchg
mov
mov
adc
out
sar
lods
adc
xor
nop
sahf
rcl
int3
mov
xorb
or
mov
dec
addr16
pop
sbb
add
push
sbb
and
mov
jmp
nop
inc
cli
lret
outsb
and
dec
jne
mov
pop
cmpsb
mov
adc
fnsave
and
arpl
in
adc
add
pop
shll
adc
mov
jmp
pop
pop
xor
mov
int
sarb
pushf
or
jnp
sbb
ds
fdivr
dec
fs
in
sub
xor
jne,pt
pop
push
stc
xchg
push
addb
ret
inc
push
das
je
rcl
mov
cli
sbb
sbb
fcoml
stos
ss
out
and
push
shrl
cmp
stc
jb
sub
cmp
and
jmp
clc
fstpl
cmc
pop
shl
nop
imul
cmp
dec
xlat
mov
inc
adc
cmpsb
dec
inc
sbb
shll
mov
icebp
jne
and
mov
inc
xchg
cmp
lods
adc
imul
and
lret
jp
sbb
mov
sti
inc
icebp
or
pop
into
mov
mov
mov
xchg
mov
dec
cmc
jb
stos
popa
mov
rcrl
dec
jl
por
pop
cmpsb
jae
mov
js
mov
fldcw
cmc
mov
jle
add
test
mov
leave
pop
fbld
lods
push
dec
testl
addr16
lods
push
in
cltd
lods
dec
xchg
mov
test
rep
inc
stos
shr
sahf
fwait
ljmp
insl
loopne
jg
fadds
je
sbb
xchg
dec
popf
jge
adc
stos
cld
mov
push
jo
pop
push
jno
mov
outsl
test
fmul
add
pushf
fcmovne
cmp
jns
scas
repnz
mov
les
frstor
test
sub
ljmp
je
inc
push
es
movsb
jnp
repz
test
int3
fadd
push
dec
sub
jb
mov
imul
pop
sahf
and
loope
mov
fidivrs
subb
xchg
push
sbb
mov
push
lcall
or
xchg
dec
ret
jne
jg
push
std
mov
loop
cltd
add
cmpsl
dec
dec
xchg
icebp
jae
xchg
xchg
push
repnz
push
sti
sbb
xchg
mov
shll
mov
jb
sbb
xchg
mov
ret
adc
pop
add
shl
iret
pop
add
jmp
subb
and
lods
int3
out
pop
inc
hlt
adc
clc
cmpsl
dec
lret
repnz
jnp
mov
lods
dec
dec
mov
sahf
sub
fldenv
cltd
jle
xlat
jl
lds
sub
inc
pushf
rorb
jbe
push
sbb
enter
xchg
lods
fsubp
lcall
fsubr
pop
ret
pop
or
sbb
out
sbb
add
ret
ljmp
inc
or
fidivrl
mov
push
test
movsb
dec
and
insb
or
lea
adcl
arpl
outsl
out
and
jp
fucom
push
mov
adc
jbe
pusha
out
jb
out
shlb
fwait
pop
xchg
sub
dec
dec
std
lret
sub
fidivrl
xchg
dec
dec
mov
push
or
sbb
aam
xchg
or
mov
fsubrl
jnp
push
jnp
jne
stos
cmpsl
xchg
adc
int
xchg
shrd
mov
mov
inc
pop
push
mov
repnz
jecxz
sub
dec
jae
sbb
enter
rorb
xchg
out
dec
jns
adc
orl
jp
mov
lea
pop
outsb
sub
and
es
lea
repz
mov
aam
or
popa
xchg
add
adc
clc
jb
mov
jl
arpl
xchg
pop
popf
dec
mov
fs
or
into
enter
fbld
mov
in
sti
inc
dec
pop
xlat
decb
cmp
bound
pop
dec
dec
push
dec
inc
dec
dec
ss
jge
sarb
push
xchg
cwtl
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
push
enter
mov
jns
and
scas
cmp
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
xor
push
xor
int3
dec
jle
ret
lret
jp
aam
mov
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmpsb
jle
xchg
pop
dec
cmp
push
cmp
xchg
.byte
