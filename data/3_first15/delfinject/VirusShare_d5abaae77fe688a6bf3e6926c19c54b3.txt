push
call
ret
ret
sbb
loopne
dec
fwait
out
sub
xor
in
and
adc
in
push
gs
jmp
inc
push
fdivs
sahf
inc
inc
xchg
cli
leave
xor
es
cmp
dec
aaa
adc
sub
das
ljmp
imul
adc
sbbb
xchg
data16
dec
lcall
jp
ret
sbb
stc
jmp
jmp
push
sub
pop
outsb
jle
andb
add
bound
test
test
mov
mov
nop
inc
mov
xchg
sbb
mov
mov
hlt
and
out
shl
xor
sub
fsts
mov
jo
pop
loopne
fisttpl
inc
cld
clc
scas
push
push
pop
adc
orb
jo
inc
call
pop
add
jnp
sti
xchg
cmpsb
mov
or
outsb
pushf
pop
into
mov
in
out
pop
ret
ss
dec
fcmovbe
push
mov
adc
mov
stos
les
sbb
dec
jp
fistpll
adc
aad
dec
pushf
lret
or
push
add
loope
fistpll
mov
das
mov
sub
out
add
jecxz
aas
xor
xchg
xchg
jo
in
aad
inc
mov
sub
stc
sub
sub
movsl
cli
xor
cmpsb
inc
dec
mov
lret
stos
pop
test
inc
je
and
add
aas
jae
adc
out
fisubs
mov
jp
insl
sahf
xor
outsb
pop
pop
push
adc
rorb
and
pushf
mov
lcall
jno
cmc
nop
mov
clc
xlat
lock
cmp
in
in
mov
orl
and
movsb
inc
aas
not
or
adc
cltd
jmp
aaa
in
push
ds
sbb
xchg
test
push
mov
loopne
shll
arpl
nop
inc
mov
and
call
les
xchg
das
and
jno
cmp
imul
jecxz
test
push
stos
inc
sti
insl
hlt
ja
dec
jp
mov
je
mov
add
decl
daa
mov
movsl
imul
xchg
or
pop
hlt
pop
jae
loopne
jg
out
xchg
xchg
cmpsb
and
mov
or
jge
lods
sub
rorb
les
pop
pop
gs
in
sub
push
aad
andb
cmpsb
adc
insb
adc
fst
cmp
cs
jmp
movsb
mov
jg
cmp
inc
cmp
out
dec
push
test
jecxz
sbb
popf
adc
cmp
testb
fiaddl
or
fstps
push
mov
mov
iret
aam
dec
mov
scas
mov
ds
jno
add
repnz
xchg
out
sub
mov
fdivrp
cmp
mov
mov
pop
fistpll
inc
push
cli
push
ret
mov
jns
push
cs
rclb
enter
daa
mov
xor
ret
jmp
fcompl
js
jno
xchg
jl
xchg
loope
out
test
and
pop
inc
mov
rcll
enter
or
mov
add
aas
mov
es
pop
shll
pop
sub
les
fidivrs
mov
dec
cmp
scas
jmp
fldcw
and
push
jp
adc
push
scas
pop
nop
xchg
xor
jb
repnz
and
imul
jecxz
in
repnz
test
shl
mov
mov
scas
arpl
enter
js
notb
ror
loope
mov
lds
mov
jne
mov
fldl
arpl
xchg
ror
add
xor
nop
pop
push
jg
cli
xchg
adc
xchg
fcoml
sbb
inc
ljmp
cmp
sub
stos
push
incl
jp
jb
add
adc
mov
mov
sar
or
mov
cmpsl
push
out
and
inc
adc
pop
fildl
xchg
gs
fidivl
pop
out
les
add
xor
cld
xchg
lahf
jne
loope
fimuls
out
jae
fidivl
pop
nop
lcall
dec
mov
jae
dec
mov
in
mov
jmp
cmc
les
mov
mov
sub
pushl
add
sub
jle
push
mov
push
mov
sbb
inc
jns
sub
xchg
push
jecxz
xchg
outsb
lahf
int
add
ss
or
ss
decb
ret
sub
pushf
imul
or
mov
xor
es
loopne
push
mov
mov
out
out
jne
loop
cmp
leavew
cmc
mov
fwait
hlt
push
mov
cli
xor
pop
imul
ret
xchg
sub
inc
jl
cmpsl
push
sub
cmc
lret
aam
les
push
std
mov
adc
sti
addr16
push
aad
or
mov
jbe
cmpb
pop
cwtl
pop
xlat
sub
cmpsl
adc
jecxz
or
in
or
out
inc
xor
inc
pop
inc
test
sbbl
jno
outsb
pushf
adc
pusha
stc
loope
xor
mov
das
cmp
mov
fidivrs
xchg
test
insl
cmpsl
cld
shrb
icebp
cmp
bound
testl
xchg
xchg
lods
cli
mov
push
mov
ret
add
mov
sahf
jmp
out
test
int
sbb
inc
xchg
mov
rol
orps
jo
lds
aaa
test
xor
mov
mov
dec
clc
adc
jne
iret
outsl
enter
out
js,pt
inc
out
mov
pop
xor
imul
or
push
dec
cs
loop
repz
test
mov
xchg
out
add
jle
test
mov
scas
xchg
es
cmp
out
adc
fisttpll
add
or
aas
mov
cmp
shr
mov
fsubr
mov
dec
push
pushf
add
popf
push
push
push
lahf
adc
lea
das
push
adc
push
inc
es
cmp
jp
jo
adc
cmp
nop
dec
std
gs
ret
mov
mov
js
mov
repnz
cwtl
lods
dec
pop
jg
stos
js
push
jnp
xor
xchg
call
cmp
sbb
fidivs
jecxz
lret
jne
push
andl
rcrb
call
arpl
pusha
adc
addr16
insl
stc
in
cmp
xor
out
cmp
stos
popf
mov
inc
inc
movsl
pop
push
inc
int
outsl
lret
fdivs
les
test
in
popa
xchg
mov
stos
lret
not
push
inc
xchg
imul
mov
notl
stos
scas
or
inc
lcall
mov
push
test
dec
jnp
jge
movsl
imul
adc
cmp
sub
cmpsb
xor
mov
sbb
push
addr16
std
fimull
pop
addb
add
lds
mov
jne
loopne
adc
mov
jnp
sbb
sbb
xorl
jbe
xchg
add
or
cmpsb
shll
sbb
repnz
dec
fildl
dec
mov
or
inc
cmp
and
cmp
cmpl
scas
jnp
push
mov
iret
fdivr
xor
cs
add
ss
dec
xchg
cmpsb
aaa
mov
jg
ss
lods
out
adc
and
out
lret
dec
jle
push
rorb
mov
lret
jl
test
push
sub
loop
data16
sti
mov
or
in
in
push
pop
stos
inc
mov
mov
adc
ss
dec
frstor
incl
je
add
jne
and
xchg
xor
lcall
daa
or
sbbl
sub
xchg
scas
mov
ss
lret
mov
xchg
mov
xchg
lods
or
push
mov
sbb
push
jle
scas
scas
sbb
fs
ljmp
outsl
stc
jbe
or
mov
into
sbb
stos
stos
in
push
dec
xchg
je
popa
push
mov
jmp
or
jg
scas
stos
stos
outsl
cmp
popa
add
dec
js
jno
cmpsb
negl
cld
ret
lock
inc
mov
aas
lahf
push
mov
adc
leave
in
push
sub
push
mov
int3
rcr
xor
and
xchg
popa
add
mov
in
fwait
icebp
mov
mov
dec
test
movsl
mov
push
xor
jne
jns
hlt
aad
mov
add
push
adc
pop
jg
ljmp
clc
push
jb
clc
mov
sarb
loopne
mov
mov
lret
sbb
out
mov
dec
es
xor
and
sahf
xchg
pop
lock
int3
ror
inc
movsb
cltd
mov
mov
rorl
sbb
fwait
mov
mov
test
lret
aas
sub
xchg
jo
cld
cli
test
addr16
fistpll
mov
add
fisttps
pop
fwait
dec
les
xchg
jl
std
add
lods
inc
xchg
lahf
jns
cld
adc
enter
sub
inc
clc
push
leave
cmp
fmuls
pop
xor
jnp
imul
lcallw
and
sub
fisubl
ds
xchg
add
mov
inc
or
cli
mov
lods
test
aad
jne
mov
lods
push
iret
mov
ss
push
pop
jae
jecxz
xor
xchg
push
das
sbb
or
mov
mov
xchg
xlat
jno
out
xchg
mov
push
add
or
pop
ror
ss
imull
inc
inc
sbbl
adc
xchg
insb
mov
or
leave
shll
xchg
idivb
mov
call
std
pop
cmc
iret
adc
repnz
out
pop
jmp
sahf
jg
insl
sub
cs
jecxz
pop
jp
hlt
adc
stos
adc
dec
loop
test
out
mov
or
int
xchg
mov
pop
add
xchg
in
xor
call
repz
idivl
mov
push
sub
jbe
mov
pop
icebp
adc
in
adc
jle
xchg
push
sti
mov
pop
xlat
in
mov
test
pop
fwait
leave
loop
pushl
and
gs
imul
out
and
rolb
or
dec
lret
test
cmp
adc
and
mov
nop
pop
scas
mov
incl
lret
clc
rorl
cli
test
test
adc
add
pop
rorl
std
out
rorl
sub
test
stos
fstps
std
imulb
pop
out
fcmovbe
jns
inc
sub
clc
enter
sar
fsubrl
add
sbb
lods
push
xorl
aad
mov
clc
adc
add
hlt
push
lods
out
dec
dec
out
inc
inc
push
jno
push
xor
push
loopne
cmp
fldl
pop
cwtl
pop
mov
ljmp
testl
aas
enter
mov
ds
stc
outsb
in
rcrb
movsb
jle
and
loopne
test
or
jns
pop
fs
add
loop
pop
or
stos
adc
fcom
cmpsl
cmp
cwtl
push
mov
dec
fisubrl
dec
and
test
fidivs
out
jmp
out
mov
aaa
ror
out
jae
mov
and
and
mov
inc
mov
mov
cmp
and
fwait
dec
lcall
pop
movsl
cmp
mov
stos
mov
ss
mov
or
fbld
pop
les
clc
mov
pop
stos
sub
jno
jg
jne
and
sub
inc
inc
mov
and
push
dec
jno
rolb
inc
insl
mov
or
ficoml
aaa
gs
je
aaa
in
pop
je
stos
bound
mov
xor
add
sbb
pop
cmpsl
sar
sti
jp
or
out
xor
mov
jl
jg
test
sub
push
sbb
ljmp
xor
push
movsb
test
pop
jge
pop
fisubrs
pop
xor
repnz
fmuls
mov
jno
pop
loop
stc
icebp
adc
loope
insb
jecxz
repnz
enter
cmp
rorl
fwait
or
xchg
cld
dec
sub
jge
popf
repnz
push
add
in
movsl
mov
cltd
enter
push
sti
jmp
cltd
adc
pushf
push
fcmovnu
xchg
rcl
int3
adc
push
and
mov
jo
movsb
outsb
sub
aam
fwait
lock
jle
mov
sub
xor
xchg
add
inc
jno
xchg
sub
cmp
pop
sub
mov
iret
and
push
push
mov
out
pmaxub
cli
fisttpl
je
aas
popa
test
push
loope
ret
fcmovnbe
mov
mov
rolb
sti
shrb
inc
xor
mov
fcoml
arpl
ror
pop
sub
std
aas
xchg
rorl
into
imul
push
test
int
lods
dec
mov
jb
lcall
xchg
ja
jle
or
mov
adc
dec
sub
mov
inc
sbb
pusha
subl
dec
mov
push
shl
pop
lret
xchg
sub
scas
cmp
jbe
lods
test
test
loop
mov
or
addr16
inc
out
fsubl
adc
testb
fdivs
sub
pop
add
cltd
sti
push
sub
xchg
in
sub
popa
lcall
mov
inc
mov
clc
outsl
cli
mov
dec
mov
emms
jmp
sbb
jmp
cmp
adc
add
fs
fdivrs
cmpsl
out
xchg
or
divl
xorb
jge
xlat
sub
inc
xchg
test
fistps
jae
mov
inc
popf
xchg
adc
cld
int
testl
mov
push
and
or
cmp
nop
xchg
insb
inc
test
stc
cmp
int3
and
aas
mov
pop
in
leave
adc
aam
xor
inc
test
add
lret
mov
mov
push
mov
scas
sar
mov
push
add
pop
in
repz
sbb
jns
imul
xchg
inc
bound
cmpl
test
cmp
xchg
imul
sub
pop
xchg
out
push
shlb
jle
pop
jns
ds
xor
jecxz
imul
cmp
push
dec
cmp
shll
daa
aam
sbb
aam
aaa
test
add
sbb
pop
leave
mov
mov
xchg
inc
call
out
lods
js
call
jnp
fsubs
or
fistps
jns
jg
jo
ljmp
push
push
xchg
inc
and
les
clc
icebp
jp
rcrl
mull
mov
rcll
insl
inc
aas
mov
mov
stos
and
sbb
mov
mov
jbe
jae
push
icebp
add
pushf
ret
aad
lea
js
data16
loopne
push
push
lcall
icebp
pop
cmp
mov
xchg
fistl
das
cltd
sub
movsb
and
push
pusha
pop
sbb
sub
push
fbstp
mov
add
mov
stos
inc
in
hlt
in
add
and
adc
pushf
xlat
pop
testl
int3
fbstp
or
xchg
shrl
imul
hlt
inc
test
pop
fidivrs
mov
out
js
call
pop
leave
imul
dec
popa
pop
daa
mov
fwait
loopne
dec
jns
clc
jne
lcall
xor
push
push
xchg
sub
aad
clc
movsb
jnp
jo
imul
mov
mov
dec
add
shll
push
insb
lret
mov
cmp
lods
int
mov
fistl
and
mov
lahf
test
mov
or
mov
inc
lds
mov
decb
cmpsl
adc
push
xchg
je
xchg
imul
sub
jno
pop
sbb
std
lods
clc
xor
push
gs
dec
das
jmp
cs
mov
mov
sbb
xor
mov
or
mov
test
cmp
mov
movsb
xchg
call
sbb
cmc
dec
or
ljmp
xchg
jmp
fwait
pop
sub
cmpsb
adc
mov
leave
or
shll
and
aam
aas
cmc
test
sahf
fisttpl
adcl
xchg
lds
jae
data16
test
push
in
push
sbb
adc
call
mov
pop
and
fmuls
jp
ret
and
fneni(8087
cli
jecxz
int
jo
inc
dec
es
fcoml
push
loopne
cs
sub
js
and
out
out
stos
adc
fucomip
lret
push
pusha
cmp
sub
and
js
dec
jp
pop
xor
dec
repz
and
push
adc
mov
leave
xlat
aaa
into
jp
loope
int3
ds
jae
mov
loop
push
popa
lea
clc
stos
jl
pop
repz
call
jmp
mov
out
jo
mov
inc
sarb
enter
push
xchg
lds
push
push
mov
iret
sub
mov
dec
jae
movsb
comiss
popa
cwtl
out
dec
xchg
cmpsb
mov
jne
mov
call
fbld
push
mov
fiadds
lahf
sbb
add
adc
lcall
add
cmp
mov
xchg
cmpl
mov
cld
push
add
xchg
inc
xor
jle
movsl
testl
in
xor
and
mov
xor
inc
cltd
push
popf
daa
xchg
test
mov
lods
jo
pop
insb
and
inc
xchg
lcall
fsubl
xchg
mov
lret
inc
jmp
sub
xor
xchg
fmuls
fsubs
sub
jno
adc
pop
dec
and
sub
mov
inc
lea
and
sub
inc
mov
mov
enter
add
mov
or
popf
arpl
mov
imul
in
cmp
mov
pop
scas
adcb
fcmovnb
sub
sarb
andb
jno
ret
push
ja
dec
rcl
sbb
add
cltd
xchg
sbb
lea
ds
xchg
pop
add
push
call
push
mov
lea
mov
rcrb
in
popf
xchg
inc
inc
cmp
mov
mov
mov
xchg
or
adcl
add
ret
adc
xorl
jg
and
cli
or
dec
jge
outsl
subl
in
and
xchg
pusha
cmp
lds
cmp
mulb
gs
jno
pop
jmp
neg
add
ja
lcall
dec
lds
lods
dec
mov
mov
xchg
lcall
mov
cmpb
dec
mov
dec
pop
call
pop
gs
mov
adc
xchg
out
lods
mov
push
jnp
imul
fildl
psrld
imul
and
adcb
inc
in
or
jg
sbb
and
andb
cmp
data16
dec
dec
jle
mov
push
rorb
test
inc
sbb
add
add
add
push
fwait
push
stos
dec
movsl
adc
push
popa
or
jo
mov
push
mov
loop
xor
cltd
adcb
push
mov
pop
and
push
or
push
xchg
xchg
push
sub
inc
mov
lods
dec
dec
mov
jo
push
fadds
dec
out
imul
lods
add
outsl
and
or
cmp
insl
jno
mov
adcl
in
jg
jae
shr
push
outsl
pusha
addb
jle
gs
mov
je
insl
rorb
xor
dec
xchg
stos
insb
lods
sbb
fs
fs
fnstcw
push
inc
cld
cltd
lds
mov
sbb
mov
xor
rol
std
fwait
push
push
ljmp
mov
xchg
rorb
cmp
sbb
lods
in
mov
loopne
push
lcall
dec
rorl
stos
lahf
aas
dec
xchg
fwait
inc
mov
xchg
cmp
xchg
cmc
jno
sbb
or
sub
scas
mov
fstps
test
jno
mov
mov
movsb
sbb
pop
jns
lods
jb
stc
ret
dec
lea
fst
ret
bound
lea
dec
ror
sub
cltd
add
iret
movsl
mov
xchg
ja
imul
xchg
mov
popf
fcompl
scas
enter
push
addr16
mov
pop
lds
push
jg
or
orl
imul
xchg
mov
outsl
lret
mov
test
xlat
dec
push
mov
imul
int
and
dec
pop
push
bound
lahf
lret
sub
xchg
sti
inc
adc
pop
lods
dec
mov
push
mov
jae
sbb
lret
inc
notl
rol
adc
jle
aam
and
outsb
int
loope
andl
inc
das
push
enter
mov
aas
outsl
in
jmp
ficompl
xor
les
loopne
pop
jbe
inc
je
pushf
adcb
jne
lods
push
js
into
in
rol
insl
cs
shrb
lods
or
pop
pop
decl
xchg
adc
ss
mov
add
xchg
test
push
scas
jmp
nop
scas
mov
xchg
mov
mov
jmp
mov
dec
and
lea
out
les
lods
sbb
inc
adc
dec
lods
push
pop
xchg
leave
sub
sbb
loopne
in
cmp
movl
es
jmp
mov
and
lds
or
ret
cmpsb
in
add
xchg
lds
adc
out
in
add
cmp
push
addl
xchg
mov
lods
addr16
xchg
data16
addr16
push
out
mov
rclb
jbe
jp
mov
sarl
inc
push
mov
or
inc
and
lcall
or
jo
lock
inc
inc
mov
pushf
mov
jnp
aas
out
sub
icebp
or
pop
mov
insb
cmp
mov
push
mov
or
sbb
jecxz
xlat
je
mov
xor
cmp
jle
and
ret
xor
insl
xor
mov
cli
pop
outsl
pop
sahf
out
sar
rorb
loopne
fidivrs
nop
pop
loopne
sti
jb
sbb
pop
mov
mov
sbb
iret
or
cmc
testb
xchg
push
xchg
fbstp
jae
call
mov
xor
sahf
mov
dec
and
push
orl
mov
negl
mov
jae
movsl
lahf
sbb
fs
add
sbb
dec
out
jg
sub
ret
out
jmp
dec
and
jl
jb
shl
shll
repz
jge
testl
jmp
inc
ljmp
jns
fnsave
lds
push
cmp
pop
pop
out
push
pop
jg
insb
lahf
pop
scas
and
mov
and
xchg
data16
test
stc
mov
fistpl
leave
leave
icebp
aaa
in
icebp
ss
shll
jg
outsb
pop
push
into
cmp
jb
cld
scas
add
inc
mov
dec
shll
xchg
enter
ret
fwait
dec
xadd
popf
test
outsb
xchg
cmp
push
hlt
ja
dec
gs
jp
push
sub
inc
in
outsb
cli
pop
mov
int
push
push
mov
jecxz
mov
outsb
test
push
clc
loope
sub
jmp
cld
std
imulb
insb
cs
arpl
icebp
cmp
jmp
mov
negb
fdivrp
push
stos
adc
xchg
cmp
mov
cld
jns
xchg
push
test
popf
or
xchg
negl
xchg
mov
daa
jo
dec
test
fstpt
jno
jns
xor
mov
addr16
cmp
xchg
es
jmp
push
sahf
push
jge
iret
sarl
push
lret
insb
mov
in
jecxz
orb
std
dec
mov
mov
inc
or
aaa
cltd
push
mov
stos
xor
pop
fsubrs
fidivrs
cmpsb
idivb
call
dec
movsl
xor
cltd
scas
out
push
pushf
inc
test
insl
ljmp
mov
into
xchg
leave
xchg
ljmp
fsubrp
std
jbe
pusha
insb
mov
inc
movsl
xchg
pop
push
xor
mov
clc
jecxz
xor
and
fst
jmp
inc
mov
or
popa
cmp
inc
movb
shll
push
test
loop
addr16
mov
mov
xchg
lods
mov
fdivrl
pop
loopne
mov
and
std
push
pop
ja
mov
data16
arpl
cmc
xchg
push
lock
data16
int
and
mov
mov
insb
fucomi
stc
sarb
cmpb
mov
in
lret
ret
sbb
lea
pop
mov
movsb
cwtl
sbb
lret
add
mov
std
mov
xchg
popa
mov
and
mov
gs
fiadds
xchg
je
jl
ret
lods
nop
in
int
bound
out
outsl
mov
mov
js
dec
mov
jns
flds
push
ret
xchg
xor
outsb
dec
xchg
jg
loope
mov
daa
jbe,pt
push
mov
ljmp
sub
inc
cmpsl
popf
sbb
ljmp
aam
nop
sub
add
sbb
stos
clc
jp
add
test
mov
xchg
movsb
push
and
sarb
lahf
pop
jecxz
leave
xchg
sub
iret
or
ror
mov
scas
push
dec
xor
fsubr
ja
cwtl
movsb
popf
sub
adc
mov
pop
mov
push
ret
adc
pop
sbb
cmp
mov
xchg
int3
mov
out
xor
call
pusha
xchg
inc
xchg
mov
add
xor
sub
sbb
stc
dec
dec
aas
int3
adc
jge
fcoms
scas
push
xchg
inc
popf
lods
pop
mov
or
jle
dec
lahf
fisttps
ss
loop
and
leave
mov
in
lods
aam
sub
cmp
push
mov
sub
cmp
imul
test
and
inc
pop
mov
cmc
xor
push
in
sbb
test
cmp
xor
in
sub
outsl
or
hlt
cmpl
jg
imul
jo
les
mov
pop
inc
dec
cltd
xor
fistl
jnp
push
adc
or
in
lahf
lret
adc
mov
daa
fwait
loopne
sub
jo
mov
andl
pop
orb
clc
xchg
cmp
insl
xor
aam
mov
inc
pop
in
mov
imul
mov
pop
out
mov
xor
sahf
dec
inc
jo
bound
fistpl
xor
lods
lds
stos
decl
jl
cmpsb
pop
mov
cltd
inc
inc
cmc
mov
ret
mov
jno
mov
sub
shlb
inc
push
xor
xor
pop
movsb
dec
addr16
dec
leave
popf
incl
or
ljmp
add
inc
mov
aad
sbbb
mov
aam
ret
lret
add
in
xor
jo
orb
pop
mov
stos
add
jbe
add
mov
push
mov
adc
test
mov
dec
loopne
std
inc
push
lods
cmp
fwait
ss
mov
js
mov
lret
adc
fdivrs
pop
je
outsl
and
add
sub
loope
leave
mov
push
dec
sbb
adc
ficoms
dec
cmpsl
jae
and
aaa
movsb
cmp
loopne
jo
push
mov
mov
enter
cli
int
pushf
movsl
mov
inc
and
sahf
popf
add
test
cmp
lahf
or
sarl
sub
add
mov
imul
pop
push
pop
jge
adc
sub
aaa
stos
leave
notb
loope
out
ja
ror
ret
add
and
je
cmp
push
pop
sahf
sbb
vorps
pusha
mov
rcll
jbe
call
shll
inc
jmp
lea
xlat
sbb
pop
repnz
loop
jns
push
mov
dec
xor
pop
clc
xchg
dec
xor
subb
pop
pop
in
adc
xor
pushf
push
stos
iret
jne
std
dec
arpl
mov
pop
and
in
sbb
mov
lret
push
sub
shl
lcall
pop
jmp
outsb
xchg
cld
mov
dec
xor
sbb
fs
stos
ja
fildl
push
hlt
cmp
and
mov
add
into
ds
testl
fnstsw
jle
mov
test
or
jecxz
inc
jmp
call
lret
shrb
push
fidivrl
or
mov
sar
out
dec
enter
aad
adc
rcl
pop
xor
lcall
cli
roll
nop
and
lea
stos
push
add
mov
xor
mov
lods
lret
xlat
and
mov
imul
pop
mov
hlt
rorl
adcl
rcll
shll
cmc
in
xchg
enter
shll
jp
pop
gs
clc
in
cmc
test
push
insl
add
dec
je
xor
push
sub
sub
stos
push
addr16
aas
lret
mov
cmp
std
mov
push
cmp
pop
add
cltd
mov
push
pop
dec
aam
xor
push
pusha
cmp
inc
dec
shll
inc
mov
xor
sarl
cmp
inc
push
jl
mov
cmp
sub
lock
or
fs
and
xchg
lea
dec
inc
lret
jne
rcr
cmpsl
leave
jmp
nop
leave
sbb
mov
test
lock
mov
aas
cmp
ss
cli
mov
jecxz
insl
or
pusha
cmp
pushf
stc
out
pushf
jle
lds
jo
mov
dec
repz
repz
cmp
mov
mov
stos
xor
or
gs
add
fists
out
cmp
loopne
imul
dec
nop
shrl
loope
int3
scas
and
sbbl
dec
data16
pusha
push
lods
sarl
sub
xor
and
fdivl
and
mov
leave
pop
inc
or
mov
aam
rcrb
sbb
jecxz
imul
cmpsb
insl
sub
or
mov
push
xchg
sub
fisttpll
jae
xor
cmp
int
rorb
sub
pop
adc
stos
pop
mov
lock
xor
and
jb
jecxz
imul
mov
cli
aad
aam
and
ret
and
sahf
push
and
stos
inc
sub
adc
and
xchg
adc
dec
sub
fucomip
and
loopne
sub
cmp
addr16
cmp
inc
mov
scas
es
ja
xor
mov
dec
xlat
ret
jns
sbb
mov
or
lods
jg
shlb
mov
sbb
fwait
or
add
stos
push
pop
mov
out
mov
mov
lea
scas
lds
cli
mov
popa
jmp
and
arpl
mov
mov
fistpl
neg
mov
mov
out
std
jb
add
and
roll
xorl
mov
shl
xor
movsb
rcll
enter
dec
inc
xor
mov
push
adc
outsb
in
or
test
cltd
enter
add
add
out
mov
aas
outsl
sbb
mov
sbb
sub
jmp
inc
lret
and
mov
in
sti
je
mov
push
push
or
inc
subb
cmp
cwtl
ds
int3
push
lods
pop
das
aaa
in
dec
fwait
int3
orb
pop
sbb
add
gs
lock
cwtl
push
or
jae
lcall
test
out
dec
lock
insb
sub
loopnew
push
test
lret
add
push
hlt
aaa
or
sbb
outsb
daa
push
test
orl
fisubrs
call
inc
or
rcl
add
dec
push
jle
jl
and
cld
test
jae
aad
inc
pop
sbbl
add
jp
cwtl
sbb
jb
xchg
cmc
adc
dec
lea
out
mov
cmc
dec
mov
and
jle
sbb
cmp
or
mov
int
sub
and
stc
jns
dec
add
int3
cmp
jmp
insl
cmpsb
add
or
out
push
mov
cmpsb
das
mov
cmp
mov
mov
inc
ret
pop
popa
ret
rorb
lcall
cmpsb
es
mov
fsubs
ss
fildll
jecxz
mov
pop
sbb
mov
sbb
mov
xor
rorb
fbld
mov
push
bound
sbb
and
loopne
arpl
and
loop
loop
mov
sbb
into
dec
xor
mov
sbb
int
jb
lret
push
bswap
mov
je
mov
xor
or
int3
lahf
pop
push
je
add
inc
xor
loop
test
outsb
push
es
sub
leave
xchg
outsb
push
pop
mov
repnz
subl
js
xchg
jne
lock
enter
pop
lods
shlb
jge
mov
lods
push
test
sarl
loopne
pop
inc
and
rolb
aaa
jo
or
and
push
insl
pop
jne
data16
cs
xchg
mov
pop
es
dec
xchg
sbb
stc
ss
jae
cmp
movsb
lret
stos
imul
cmpsl
std
sbb
push
in
pop
xor
outsb
sub
sub
sbb
adc
es
ret
cmp
ds
pop
aas
scas
fdivl
or
add
xchg
sbb
pusha
or
fldenv
sar
int3
xchg
jmp
push
repz
adc
pop
inc
cmp
and
sbb
mov
sahf
pusha
mov
in
mov
shll
les
jb
jmp
sbbl
out
push
daa
ljmp
rclb
adc
push
mov
pop
cli
jle
test
dec
mov
addr16
adc
add
stos
cld
outsb
and
jno
outsb
cmp
add
jb
xchg
inc
andb
out
jo
pop
pop
imul
popf
jecxz
insb
cli
dec
dec
arpl
int
xor
lahf
aas
inc
movsl
iret
or
add
les
mov
sbbl
jle
cmp
scas
pop
ljmp
and
push
sub
inc
inc
fsub
push
push
sbb
das
mov
cli
movsb
add
pop
adc
addr16
sbb
movsl
inc
out
loope
imul
clc
dec
pop
cmp
push
test
dec
test
movsl
add
xchg
push
pop
movsb
mov
cmpsl
pop
ret
push
and
and
mov
divb
into
lods
push
int3
fincstp
adc
pop
notl
in
icebp
fcomps
bound
xchg
insb
mov
cwtl
sub
mov
jge
sbbl
repnz
cmp
push
jmp
cmp
mov
test
xorb
insl
popa
ds
cmp
loopne
pop
in
cmp
and
jns
out
testl
ljmp
xor
push
in
xchg
xor
cmp
sub
mov
sub
jbe
sbb
into
stos
push
inc
cmpb
jle
jge
idiv
mov
popa
mov
bound
jne
in
dec
xchg
pusha
xor
pop
mov
outsb
jo
push
push
push
fdivrl
std
stos
lret
push
inc
sbb
in
lock
and
std
imul
test
mov
mov
lcall
gs
sti
dec
push
hlt
int3
push
ds
sbb
cmp
xor
sub
add
daa
push
adcl
inc
and
arpl
jmp
sbb
cmc
push
sub
pop
push
inc
mov
outsb
xchg
cwtl
sub
cmpsl
ljmp
pop
ljmp
cmpb
xchg
mov
loope
nop
arpl
push
scas
notb
xor
cltd
icebp
shll
mov
jl
add
mov
orl
scas
add
es
cmp
rcrb
clc
les
jl
pop
out
mov
xchg
xchg
test
cmp
mov
xchg
aad
adc
jmp
and
mov
jmp
aas
inc
mov
cs
pop
mov
shrl
push
andl
and
cmp
push
ljmp
dec
adc
cmp
scas
xchg
mov
mov
ficoml
and
sub
xchg
and
stc
xor
test
jmp
mov
loope
popf
jno
mov
xchg
aas
jns
pop
es
mov
adc
frstor
jae
daa
mov
jno
loopne
and
mov
pop
push
shl
mov
out
mov
lds
jb
hlt
js
loopne
cmp
lret
mov
jno
mov
cmc
cmpsb
adc
push
cmpsb
cmp
mov
ds
pop
lock
hlt
cmpb
arpl
dec
sbb
jo
or
push
shll
sub
xor
mov
jg
ror
pop
jle
pop
push
dec
mov
out
xchg
pop
or
mov
inc
sahf
jne
rclb
das
scas
jmp
xchg
rorb
cmp
iret
mov
repz
sub
mov
lret
das
das
pop
je
hlt
fists
sub
mov
mov
fsubl
cmp
or
pop
or
lahf
out
mov
mov
mov
mov
inc
in
das
popf
ljmp
cmp
sub
and
repz
or
les
outsl
add
pop
cmp
inc
jmp
sbb
adc
or
cs
dec
fsubr
and
scas
mov
stc
mov
leave
cmp
push
xchg
cld
or
mov
stos
ds
xchg
pop
and
mov
add
sub
fwait
or
repnz
mov
std
mov
mov
push
cmpsb
fsubrl
cmp
push
jne
insb
dec
fidivrs
popa
out
pop
xchg
cwtl
jmp
mov
mov
inc
xchg
sub
insb
out
push
pop
xchg
add
sti
mov
and
pop
jle
rcrb
lods
fbld
in
push
sbb
daa
cmc
or
aaa
adc
mov
clc
inc
fwait
test
popa
jae
cmp
dec
or
mov
mov
decl
push
std
les
call
cmpsb
test
fsubs
inc
lock
dec
push
jbe
mov
inc
daa
out
ret
mov
scas
pop
lahf
and
sbb
or
sti
test
jae
mov
dec
push
xchg
mov
jl
movl
sbbb
testb
or
jl
aam
push
cmp
xor
xchg
jl
and
ret
into
rolb
lock
aaa
test
inc
or
cmpsl
sbb
inc
xor
sahf
xchg
mov
mov
mov
sub
add
insb
xor
sub
or
aaa
mov
jb
fwait
in
mov
pop
rol
cmp
mov
loop
sub
das
add
fcomps
mov
cli
cmp
xchg
daa
sub
imul
mov
pop
xchg
movsl
les
mov
jno
xchg
dec
cli
inc
or
push
push
adc
cmpsl
jae
jb
out
push
pop
xor
jnp
out
xchg
jbe
inc
xchg
cmp
adc
add
insb
add
out
push
fwait
adc
xchg
mov
out
rorb
mov
or
movsb
sbb
adc
cli
in
stc
and
test
inc
sahf
dec
lock
xchg
sub
and
cwtl
loope
sub
jp
dec
and
add
loope
insb
inc
call
ljmp
shll
lret
fwait
clc
lcall
sub
add
and
and
ret
stos
pop
test
repz
jno
int3
lods
dec
js
adc
fsubs
and
testl
sbb
mov
push
test
inc
push
adc
fdivs
aad
push
mov
pop
push
pop
out
clc
fwait
lods
rcll
fnstsw
add
das
and
cs
and
push
mov
outsb
mov
aas
lods
jb
mov
daa
mov
loop
adc
mov
pop
pop
pop
test
jnp
add
pop
in
jns
sbb
or
or
repz
lea
cwtl
popf
jp
cwtl
int3
or
mov
outsl
mov
dec
xchg
fstp
das
fmull
cmp
lds
stos
adc
int
jge
adc
cwtl
hlt
push
push
xchg
or
popf
in
or
std
dec
lea
dec
mov
cmc
loopne
shlb
or
xor
xchg
jo
cwtl
filds
jae
mov
add
pop
cld
sbb
test
js
cmp
in
out
or
adc
in
repnz
cwtl
xchg
ja
lret
jo
popa
fcomps
orl
cmpsb
xor
adc
inc
out
outsb
dec
cwtl
add
inc
pop
sti
jns
push
and
sub
dec
fisubrl
sub
add
das
loop
mov
hlt
xlat
sub
rorb
stos
test
add
push
xchg
les
and
push
and
or
mov
insl
sub
xlat
add
js
pop
push
push
fcomps
cmp
mov
sti
add
lods
jmp
sbb
inc
test
push
push
push
dec
cmp
neg
add
mov
rorb
pop
pop
and
fwait
pusha
mov
inc
lods
xor
cmp
xchg
jg
dec
loop
test
sbb
inc
sahf
in
push
jae
inc
xchg
scas
and
lods
aad
xchg
jno
jmp
mov
lret
jno
aad
je
push
in
inc
xor
ret
add
lods
jg
add
aaa
into
push
add
cmp
movsl
mov
dec
mov
fs
je
push
adc
cwtl
jne
aas
jecxz
daa
ja
sub
or
mov
mov
xor
sub
mov
push
mov
sarl
add
hlt
cld
je
inc
addr16
mov
and
or
hlt
aas
jmp
into
loop
aas
jne
sub
push
sub
loop
xchg
cmp
outsb
add
cvtdq2ps
ja
or
mov
inc
movsl
mov
scas
mov
mov
enter
jp
movsb
andl
jg
ljmp
out
out
inc
sbb
adc
xchg
lahf
sbb
stos
mov
push
and
sub
aam
lock
jecxz
arpl
dec
subl
int3
cs
pop
pop
xor
test
gs
pop
in
lcall
xchg
imul
into
inc
sbb
imul
jge
pop
sbb
mov
and
lds
rcrb
mov
loope
lahf
mov
mov
pop
loop
lock
aas
out
cmp
daa
mov
cs
ja
pusha
jo
cld
mov
sbb
adc
fsubl
add
cli
push
dec
aaa
jno
jecxz
stos
test
mov
jge
dec
cli
dec
xor
pop
xor
mov
dec
popf
fildll
ja
and
cmp
pop
es
leave
xchg
mov
sub
ss
hlt
mov
mov
dec
inc
mov
cmp
dec
cmp
sub
mov
jp
sti
cmp
mov
out
xchg
jnp
sbb
lds
sub
adc
aad
test
outsl
ds
jp
data16
dec
imul
xchg
shll
mov
iret
adc
test
stos
addr16
bound
adc
cmp
mov
mov
ret
fisttpl
or
repz
lcall
incl
ds
rclb
hlt
pop
hlt
push
fsubrs
lea
xchg
adc
push
in
ffree
lahf
mov
xor
mov
out
aad
pop
ds
sub
dec
inc
mov
test
aaa
fldenv
scas
test
lea
xorl
les
xchg
sbbl
call
pop
ret
pop
in
sbb
addl
adc
jne
sbb
inc
xor
pop
jmp
stos
cmpsl
fucom
imul
mov
mov
mov
out
xor
daa
daa
lock
outsl
jae
sbb
shl
insb
or
mov
clc
push
mov
xchg
nop
push
ljmp
jb
mov
outsl
cmp
gs
popf
cmp
pop
addr16
int3
loop
in
cmp
adc
xchg
pusha
fidivl
push
mov
imul
mov
ret
push
mov
mov
testb
cltd
jg
ret
jns
sbb
jl
ja
test
mov
out
sti
mov
or
xchg
pop
jecxz
rorb
scas
scas
enter
into
rcll
imul
mov
cmp
insb
scas
jmp
add
cltd
dec
adc
mov
cmp
mov
mov
arpl
jle
jnp
sbb
je
leave
hlt
push
ret
jecxz
ss
loopne
or
or
sbb
jo
fidivl
cmp
loope
mov
inc
stos
mov
leave
out
clc
xor
dec
cltd
adc
cwtl
das
and
jge
scas
sub
inc
loop
les
jle
outsb
push
cmp
testl
sbb
bound
pop
push
sub
out
mov
cmp
cld
mov
and
addb
mov
imul
dec
stc
cltd
or
jle
sub
jbe
inc
or
in
xor
xchg
cs
shlb
cmp
xchg
inc
cld
jg
add
mov
push
push
out
hlt
fdivrl
adcl
or
sub
and
cmp
or
cmp
add
aam
push
frstor
movsl
cmp
jecxz
cmpsl
pop
xchg
scas
cmp
subb
xor
in
xor
mov
cwtl
mov
cld
pop
jbe
gs
inc
ljmp
push
dec
pop
pop
cmp
out
iret
cmc
lcall
mov
cmp
pop
cli
jle
fldcw
out
push
xchg
push
aam
push
xchg
push
mov
mov
nop
mov
ficoms
mov
jae
fldcw
lret
pop
outsl
or
and
daa
dec
sub
sti
fnstcw
rcrl
jnp
and
and
push
sar
push
or
gs
cli
addl
stos
mov
pop
fmuls
sub
or
xorl
data16
xchg
push
and
mov
popa
dec
jmp
fwait
xchg
movsb
negb
in
test
sub
xor
gs
std
fsts
leave
push
mov
sbbb
mov
test
adc
mov
pop
sbb
jmp
sub
pop
pop
stos
mov
inc
test
adc
pop
xchg
mov
rcll
add
mov
out
adc
sub
sbb
xchg
std
push
mov
add
adc
mulb
loope
lock
cmp
aas
mov
or
mov
cwtl
and
outsl
dec
mov
int
xor
sti
test
dec
sbb
cs
popa
xchg
lcall
cmp
cmpsb
jecxz
inc
adc
push
loopne
add
cwtl
jbe
add
test
arpl
das
ljmp
lods
addl
cld
aad
mov
stc
mov
pop
je
leave
outsb
stc
arpl
sti
or
add
adc
aas
andb
mov
lahf
jno
aas
fisttps
jp
inc
icebp
fcoml
cmp
repz
inc
fiadds
push
dec
cwtl
adc
xchg
fistl
jle
cmpsb
mov
push
cmp
push
call
sbb
sahf
in
clc
test
adcb
xor
push
cmp
mov
stc
lret
mov
pop
adc
leave
and
mov
push
adc
cmp
jg
jecxz,pn
mov
mov
mov
aad
adcl
add
mov
dec
pop
fsubr
pusha
sub
dec
push
mov
jb
sub
dec
outsl
jle
mov
cmc
pop
adc
clc
rcrl
push
push
adc
repnz
mov
sub
push
filds
lods
jge
cli
mov
mov
cmc
cmpsl
xchg
cmp
stos
loopne
out
clc
test
int
pop
out
adc
sahf
sbb
out
andb
inc
clc
jb
sbb
hlt
jbe
and
xor
or
mov
jg
xor
jg
in
movsl
iret
add
cld
mov
dec
ret
nop
xchg
sbb
xchg
shl
ret
adc
mov
xchg
dec
bound
inc
sbb
divl
enter
pop
jnp
fs
mov
mov
pop
lcall
adc
pop
xor
adcl
or
adc
and
xor
jne
ljmp
adc
lahf
xchg
xor
mov
inc
lret
push
aam
inc
cmpsl
fimuls
lret
pop
dec
in
sub
shrl
and
and
int3
icebp
push
mov
imul
pop
cmp
cltd
cltd
cmp
sub
xor
or
lret
jp
orb
sbb
daa
pop
icebp
push
adc
sub
cmp
sarl
and
shlb
or
mov
js
sub
pop
bound
hlt
lahf
mov
stc
adc
inc
ds
rolb
jae
dec
and
cltd
gs
pop
dec
and
mov
cmp
pop
jbe
cmp
jecxz
loop
xor
std
into
stos
or
mov
stos
mov
mov
fwait
lcall
gs
das
jecxz
divl
rcl
mov
orl
mov
push
sbb
mov
sbb
jg
jmp
jge
jno
jne
jge
clc
mov
js
sub
sbb
push
into
pop
xchg
popa
fdiv
lret
lahf
dec
aas
jb
daa
pop
sub
divb
dec
mov
push
push
into
fs
jl
xchg
adc
scas
in
jb
fisubl
aad
sahf
jnp
movsb
or
xor
push
call
inc
inc
inc
out
into
into
scas
cmc
orl
sti
mov
stc
mov
mov
mov
in
xchg
divl
imul
or
xor
out
adc
pop
shll
das
popf
pop
inc
pop
in
mov
mov
push
ret
jecxz
xor
popf
pushf
je
sbb
mov
test
xchg
movsl
add
enter
cmpsb
out
xchg
rcrl
mov
dec
aas
popf
inc
xchg
fsqrt
dec
icebp
bound
push
dec
add
nop
or
bound
dec
cmp
mov
mov
push
addr16
lcall
inc
in
push
sub
push
je
out
dec
inc
pause
push
lret
adc
sub
mov
js
sub
xor
mov
ss
jecxz
inc
sarb
dec
mov
js,pt
and
jecxz
sub
dec
clc
pextrw
jns
imul
push
jp
inc
fldcw
pop
push
mov
dec
jne
pavgw
call
mov
test
jo
sub
in
dec
add
mov
dec
cmc
jge
bound
or
xchg
hlt
jp
inc
je
lahf
lods
mov
test
cmc
jbe
mov
ds
mov
mov
aam
sahf
sub
and
pop
cmc
leave
adc
jle
arpl
add
sbb
push
push
push
jb
fdiv
adcl
je
adc
scas
sub
dec
xchg
repz
js
out
pop
out
ja,pt
icebp
push
xor
imul
xlat
ret
mov
sti
mov
pusha
dec
daa
push
mov
aad
pop
popa
cmp
push
add
test
sbb
mov
mov
mov
call
add
jno
push
xchg
in
ret
adc
cmp
mov
repnz
sahf
cmp
mov
cmp
mov
orb
ss
adc
pop
push
loope
das
fldl
xchg
lods
jnp
in
movsb
hlt
nop
aam
fdivs
xor
cmp
cwtl
pusha
lods
adc
fsubl
rcll
std
stc
inc
rorb
adc
push
adc
dec
aaa
aas
lahf
dec
addr16
sub
loop
xor
xchg
data16
jmp
mov
or
mov
cmp
inc
cli
ljmp
and
stos
outsl
and
dec
ja
enter
xor
dec
dec
fisubrl
es
ja
std
xchg
mov
cmp
jmp
cmpl
and
mov
push
xor
movsb
mov
enter
cmpsl
stos
adc
sti
xor
aad
jno
loopne
push
push
jle
repnz
mov
shll
cwtl
adc
test
leave
rclb
mov
aam
stc
mov
or
iret
jbe
sbb
cltd
inc
ljmp
pop
cli
dec
add
fs
xor
imul
notl
fadds
aad
mov
fdivp
cmp
lret
add
push
test
push
dec
imul
jmp
add
pop
jle
out
xor
jp
movsb
inc
fiadds
xor
mov
outsb
cmpsl
cmp
jl
add
stos
movsb
or
call
push
inc
shll
jmp
and
dec
or
push
sub
pop
mov
jno
xor
aaa
fisubrs
dec
in
lods
adc
sub
lret
sub
pop
andl
add
in
push
aaa
js
mov
loopne
xchg
sub
xor
rol
loop
jg
dec
stc
cmp
fadds
pop
xorb
rcll
imul
push
push
cmpsb
mov
mov
or
mov
les
pop
fdivl
adc
ljmp
fsts
nop
jno
iret
mov
dec
xchg
xor
or
push
inc
sub
push
pop
iret
lods
mov
sub
sar
jne
rcll
ficoml
aas
in
mov
jmp
repnz
xor
out
add
adc
fnstenv
loope
je
cmovo
iret
aad
icebp
push
jg
pushf
push
sbb
incb
push
inc
movsb
daa
adc
mov
sti
sub
lcall
jb
in
mov
jg
pop
sahf
pushf
push
stos
fwait
sub
negb
out
xchg
rorb
ret
jno
fimuls
or
lcall
push
inc
insl
les
pop
int3
mov
inc
movb
ror
or
sub
jno
mov
sbb
jg
jns
scas
push
add
dec
dec
pop
pop
add
sub
pusha
mov
mov
pop
sub
outsb
pop
rorb
bound
icebp
lahf
fwait
cmp
jne
or
or
mov
xchg
push
hlt
sbbb
xchg
mov
mov
jb
outsb
arpl
mov
and
iret
xchg
xor
pushf
mov
sub
fcoms
or
scas
xchg
js
in
adc
test
adc
ret
mov
push
lret
sbb
inc
scas
pop
jmp
ja
nop
pop
xor
out
mov
out
xor
and
dec
lds
repz
insb
xchg
imul
aas
jmp
push
pop
cmp
push
push
push
xchg
push
je
mov
icebp
enter
or
lds
mov
add
loopne
cmc
fsubrl
adc
sbb
cmp
pop
outsb
popa
pop
mov
or
test
stos
or
gs
sbb
lds
cwtl
lret
or
and
mov
push
push
jb
out
sbb
aad
rol
mov
outsl
imul
mov
fldenv
push
pop
in
inc
mov
inc
or
jno
ljmp
xchg
or
rolb
imul
int3
mov
mov
in
jno
xchg
inc
call
ljmp
push
js
mov
stos
inc
xchg
stos
xchg
in
xor
rcr
fwait
xchg
add
fidivrl
jecxz
ret
jmp
mov
mov
jmp
xor
cmp
adc
in
jmp
adc
mov
std
mov
jmp
repnz
jmp
inc
stos
sub
push
mov
lds
lods
inc
mov
leave
xor
int3
push
xchg
es
add
jmp
pop
outsb
sbb
jmp
loope
xchg
scas
dec
in
imul
gs
push
lahf
dec
dec
and
cmc
les
aad
ret
adc
mov
inc
hlt
sbb
lods
popa
out
dec
cmp
and
inc
ret
add
lds
push
neg
sub
mov
ficoml
cltd
mov
jns
mov
or
loopne
cmp
loop
inc
aas
mov
push
decb
xor
lods
repz
mov
cmp
sub
add
cmpsl
bnd
mov
mov
inc
insl
inc
ret
mov
cs
mulb
pop
xchg
ljmp
sub
push
mov
inc
nop
mov
clc
xor
outsb
and
test
mov
pushf
adc
dec
daa
js
faddl
pop
and
rcll
movsb
callw
mov
and
and
call
add
mov
je
and
mov
std
sti
xor
sarl
stos
std
sbb
cmp
int3
and
xlat
jno
mov
pop
or
int
xchg
add
add
mov
cmpb
arpl
push
mov
test
movsb
fwait
dec
jg
dec
out
lcall
jg
push
out
call
out
mov
mov
pop
cltd
xchg
xor
sub
xchg
and
icebp
sahf
aaa
jnp
int
mov
adc
push
icebp
push
inc
lods
cltd
sub
movsb
adc
dec
test
movsl
lea
fildll
lret
popa
or
aas
addl
clc
aad
cmp
pop
leave
jle
bound
fs
pop
or
xchg
sub
jl
sub
add
cwtl
mov
push
mov
rclb
fdivs
hlt
nop
je
insb
lea
fnstenv
inc
cld
sti
inc
dec
fldenv
push
loope
pop
inc
in
shrb
and
movsl
mov
ja
mov
mov
lret
dec
inc
cmpl
pop
out
dec
shrb
popf
adc
movq
sub
ret
mov
stos
loop
fidivl
scas
subl
push
pop
fisttpl
fwait
fwait
dec
cmp
mov
inc
lcall
mov
shll
int
or
mov
fmuls
cmc
add
aas
mov
xchg
and
fwait
mov
lods
pop
inc
leave
fdivrp
fwait
or
xchg
hlt
imulb
xchg
sbb
cld
mov
lahf
pop
xchg
pop
inc
sbb
insl
into
outsl
xchg
jl
mov
aam
mov
clc
shrl
sub
push
mov
mov
push
and
outsl
fiadds
jmp
adc
jo
jno
cmp
mov
fs
out
jl
je
mov
mov
dec
sbb
xchg
insb
xchg
lcall
subl
lods
mov
mov
out
add
jge
scas
fdivr
fdivs
jbe
psubw
rolb
push
cmp
in
cmc
push
jnp
jae
rorb
in
mov
push
fisubrl
outsb
jnp
rclb
mov
cwtl
fnsave
mov
ret
ss
js
cmpsl
dec
test
ret
cmp
sti
adc
std
cmp
mov
sahf
dec
add
mov
lahf
mov
mov
mov
adc
push
dec
sbb
aas
ljmp
add
or
ss
mov
lret
pop
addr16
ds
cmp
push
xor
daa
daa
dec
add
ret
rcrb
cmpsl
int3
fs
push
mov
push
sti
cs
add
pushf
jmp
hlt
nop
xor
movsl
rolb
call
jbe
jae
rcrb
dec
inc
imul
xor
push
push
or
imul
fwait
bound
mov
cmp
arpl
out
adc
mov
push
jge
push
mov
lds
dec
mov
lret
leave
cmp
aaa
pop
popa
stos
imul
pop
ja
sbb
push
stos
shl
sub
rorb
addl
call
negb
jo
fists
cmp
mov
xchg
dec
scas
in
in
sti
arpl
cmc
mull
cld
mov
arpl
out
mov
andb
jno
pop
add
scas
mov
inc
pop
out
dec
aam
nop
popa
push
js
mov
lods
add
jbe
sbb
sub
test
dec
or
mov
mov
aaa
out
cmp
mov
dec
mov
push
scas
movsb
cmp
hlt
sbb
xor
push
adcl
mov
mov
mov
add
cltd
stos
mov
in
jecxz
jle
out
sub
lret
dec
adc
sbb
lcall
das
loop
sub
lods
xlat
inc
popf
push
mov
add
push
shll
sub
loop
repnz
pop
cld
dec
inc
dec
js
sub
and
lret
jae
mov
aad
sbb
aam
sbb
jb
nop
mov
into
cmp
and
into
das
adcl
in
jns
dec
xor
pop
or
mov
aas
sub
jecxz
fptan
mov
mov
lds
cld
push
int3
pop
and
pop
xchg
and
mov
mov
cmp
push
incb
fisubs
and
lcall
cmp
or
ret
arpl
mov
divb
push
imul
lahf
adc
add
sahf
ffree
icebp
divb
mov
mov
cmp
js
sbb
hlt
sahf
ficoms
mov
pop
fimull
push
call
shl
inc
idivb
cmp
cmp
call
push
out
aaa
leave
mov
jns
xchg
fisubs
xchg
int
popf
lahf
sub
andl
inc
jle
in
jnp
hlt
push
inc
and
xchg
sahf
and
testb
sbb
sub
stos
sub
mov
je
dec
int3
ljmp
adc
cli
mov
mov
lret
repnz
sbb
push
mov
inc
and
jmp
jge
insb
cmp
dec
pop
add
js
mov
push
inc
adc
fadd
aaa
test
hlt
xchg
xor
jge
sahf
mov
aad
mov
loope
jae
mov
rcrl
jmp
dec
push
xchg
lret
lcall
test
sbb
cmovb
add
leave
cmpsb
dec
cmp
lods
out
pop
movsl
aaa
pusha
scas
push
sub
push
dec
lret
xlat
push
int3
scas
xlat
inc
jno
push
data16
xchg
loop
sbb
cmpsb
out
mov
pushf
jne
push
adc
iret
add
jne
lds
in
arpl
sub
rorl
xchg
pop
fimull
or
push
pop
mov
pop
dec
pop
pshufw
sbb
lret
mov
pop
mov
orl
and
mov
mov
aam
aad
lods
fwait
cmp
mov
jle
xchg
shlb
cld
test
pop
imul
cltd
scas
fxtract
cld
cltd
dec
imul
aam
hlt
int
fnstcw
push
sub
jmp
mov
shlb
stc
addb
fildl
push
iret
ret
mov
adc
xor
or
popf
cld
add
dec
cmp
or
mov
movsb
xor
mov
cmpsl
daa
sahf
dec
jp
sub
push
nop
sbb
pop
cld
sbb
dec
movsb
loopne
in
mov
push
and
test
cmpsb
cmp
jbe
sbbb
dec
in
arpl
inc
dec
add
es
leave
mov
mov
mov
in
jmp
inc
cmp
sbb
mov
mov
rorb
xor
orb
cmp
push
and
leave
inc
push
addl
fs
dec
push
aaa
jbe
stc
sub
out
xlat
ret
jg
aad
std
jmp
std
pop
dec
daa
mov
adc
leave
or
xchg
cmpsb
or
lea
push
sub
pushf
fcmovu
in
adc
push
push
cmp
es
jp
dec
ljmp
jp
xlat
jge
mov
sarb
sub
filds
lods
mov
inc
jl
aam
je
xchg
les
addb
inc
mov
or
aas
mov
sub
imull
ret
inc
cmp
adc
test
jmp
or
int
ret
pop
insb
mov
cmp
fidivl
push
mov
dec
cli
out
jo
shrl
pop
mov
rcrl
mov
call
lods
mov
cmp
cmp
jmp
mov
cltd
fimull
push
fs
test
aaa
jg
mov
repz
ficoms
es
push
and
mov
xlat
or
lock
push
les
shlb
into
mov
hlt
push
out
addr16
aaa
mov
sbb
adc
shll
sbb
nop
pop
hlt
cmp
stos
xor
mov
pushf
sarb
jnp
inc
testb
call
test
lret
jo
pop
dec
or
push
sub
cli
into
sahf
ret
dec
out
out
fisubs
lret
out
dec
imul
cmp
mov
cmp
sbb
syscall
inc
rcrb
movb
loop
into
mov
xor
scas
push
cmp
lret
addr16
ret
xchg
lock
daa
sbb
icebp
test
adc
nop
mov
imull
lock
jne
inc
out
sub
sahf
inc
cmp
push
pop
lret
mov
scas
push
pop
xor
xor
or
push
fldz
push
mov
cld
scas
push
sti
xchg
and
pop
test
xchg
mov
enter
add
stos
and
mov
pushf
xchg
mov
xor
and
and
cmp
enter
rcrl
adc
sub
subb
mov
adc
pop
mov
jno
stc
mov
mov
lret
lods
inc
or
stos
addl
rcrl
cmp
push
adcb
and
shll
lea
cs
mov
mov
cmp
adc
movsb
pop
push
jbe
std
rcrb
out
jne
adc
in
mov
and
stos
adc
shlb
das
add
insb
mov
mov
and
sbb
in
sti
jp
pop
or
add
dec
das
push
fildl
mov
add
pop
dec
jge
clc
pop
or
xor
bound
enter
in
push
idivb
popa
xchg
ja
inc
andb
inc
xchg
mov
leave
aas
repnz
sub
testb
sarb
lods
and
out
dec
mulb
cld
into
test
pop
add
cmp
sbb
mov
mov
xor
push
mov
mov
pop
and
int
adc
jb
jnp
hlt
jne
xchg
cmc
movsb
jns
ss
sbb
aad
lret
mov
inc
mov
xchg
adc
mov
fucomip
sbb
sub
push
pusha
scas
fists
xchg
jg
inc
inc
and
jp
or
inc
cmp
jno
popa
int3
inc
sub
outsl
aaa
pminub
sub
mov
jne
je
jo
add
sbb
jge
mov
jb
cld
adcb
cwtl
shlb
ja
popa
inc
hlt
pop
scas
mov
in
outsl
xor
mov
stc
leave
push
cltd
loopne
iret
clc
dec
mov
mov
call
lea
rclb
mov
jmp
mov
cmp
mov
out
mov
mov
fiaddl
popf
pop
push
dec
mov
fbstp
jns
out
mov
mov
das
mov
rol
leave
sbb
mov
and
inc
and
cld
push
and
les
mov
and
imul
fwait
addl
add
xchg
testl
dec
xchg
push
inc
cmp
dec
test
in
loope
jo
shrl
daa
mov
aaa
iret
loope
add
maskmovq
divl
sahf
enter
subl
push
addr16
repz
movsl
or
inc
pop
aaa
inc
leave
and
stos
push
out
movsb
cmpsl
jge
xchg
xor
sbb
call
mov
mov
sahf
setb
jl
or
pop
popf
insb
dec
push
cmpsb
loop
add
pop
cmpsb
add
repnz
sti
aas
lock
test
mov
push
mov
int3
cmp
cmp
or
sbb
int
cmp
and
jns
dec
xor
cli
mov
jl
mov
fmull
sub
fildll
cmp
and
jmp
popf
loope
das
mov
rcr
adc
iret
repz
adc
xorb
xlat
jo
add
pop
in
cmp
push
and
mov
add
test
fs
out
xchg
xchg
stc
out
rol
push
test
inc
outsb
pop
xor
cmpsb
or
jne
fstpt
push
daa
out
pop
inc
fnstcw
xchg
aas
fisubl
in
test
popa
cmpsl
xor
lods
mov
mov
popa
adc
adc
in
lods
add
sub
leave
test
fimuls
repnz
std
imul
mov
mov
movl
shrl
jl
insl
push
imul
je
lret
fsub
icebp
jne
rolb
imul
cmp
xchg
fmulp
lods
or
int3
add
cmp
push
leave
pusha
in
adc
pop
pop
add
int
inc
les
jne
xchg
in
mov
add
popa
mov
mov
mov
ror
push
mov
cwtl
sub
iret
mov
sub
mov
daa
stos
loope
sbb
sub
loop
xchg
loopne
addl
cli
hlt
mov
add
addl
xchg
mov
leave
ss
jl
xchg
ds
mov
mov
mov
int
sub
jmp
fidivs
jmp
inc
pushf
rcr
cmp
add
inc
mov
cmp
and
sub
ljmp
mov
mov
sti
in
cltd
shrl
fwait
les
stos
add
cmpsb
rcrl
and
mov
jecxz
lea
data16
xchg
sbb
loopne,pn
lret
xchg
pop
adc
sbb
int3
imul
dec
inc
fbld
dec
iret
add
sbb
mov
dec
or
mov
popf
sahf
xor
adc
xchg
xchg
jg
ss
jecxz
imul
jecxz
ljmp
push
xchg
cli
and
in
add
sbb
xchg
and
ficomps
and
cmp
push
push
push
adc
mov
sub
sbb
jmp
add
pop
mov
test
cld
adc
repz
jle
lret
xrelease
mov
push
testb
mov
in
push
insl
je
ret
pushf
push
xchg
es
xchg
sarb
cmp
mov
fcoml
nop
inc
push
push
rorb
inc
sub
mov
xlat
xchg
lahf
dec
add
push
lea
movsb
push
icebp
popf
dec
sbb
incb
rolb
in
sub
shlb
mov
pusha
pop
lahf
jns
adc
jle
loop
adc
popa
inc
mov
inc
adc
rcrl
jl
daa
fs
mov
push
add
cmp
cmc
pop
dec
jb
loope
outsb
xor
ds
sbb
enter
mov
ss
sbb
mov
scas
setb
inc
jp
mov
jno
lea
or
or
cli
or
dec
sar
inc
daa
inc
scas
clc
cmp
xchg
push
sarb
out
stos
iret
cs
sub
xor
dec
dec
xlat
das
fistpl
and
or
in
into
std
inc
mov
fs
js
push
mov
daa
mov
fnstcw
pusha
sub
sub
jbe
scas
out
pop
rcll
outsl
aam
in
cmp
nop
jl
ja
inc
int3
mov
mov
xchg
fcmovbe
jo
ficoms
fists
cmp
pop
sub
add
notl
sahf
mov
mov
jne
jne
dec
stos
adc
push
sub
mov
add
mov
pop
sub
ss
mov
mov
aam
cmp
cli
in
int
pop
sbb
or
sbb
repnz
push
cld
or
lea
sbb
idivl
and
gs
mov
sub
aam
push
test
jp
clc
jne
stos
inc
jno
ficomps
faddl
mov
jnp
add
test
or
xchg
jle
loope
cltd
jnp
push
jb
cwtl
in
xor
fcoml
sar
in
cmp
mov
rcrl
mov
out
loop
popa
jbe
movsb
fmuls
jl
sbb
inc
jo
jg
mov
push
inc
int3
addr16
mov
dec
and
in
stos
fisubrl
inc
fdivr
int
dec
jbe
rdtsc
ficompl
leave
bound
sbb
inc
sbb
xor
cmp
xor
sub
shr
jns
fdivs
sbb
adc
push
xchg
and
loope
das
out
sbb
pop
jecxz
xor
bsr
mov
and
cli
adcl
repnz
std
add
xor
mov
pop
call
sub
cmpsb
jb
adc
scas
sbb
mov
fcmovne
cmp
out
add
pop
negb
fsubs
mul
add
mov
test
enter
lret
push
insb
jle
or
scas
inc
pop
jge
test
cmp
inc
lods
and
lea
xchg
lds
lods
mov
int
aad
push
sahf
dec
push
pop
les
fs
dec
aad
add
mov
adc
inc
out
shll
fidivs
adc
iret
mov
pop
push
lret
pop
lahf
cmp
mov
xor
insl
popa
int
rcrl
inc
and
lret
mov
jg
push
js
mov
pop
pushf
mov
dec
orl
inc
add
xchg
inc
cmpsb
mov
pop
pop
and
add
push
mov
xchg
jle
fcmovne
testl
in
push
mov
faddl
xorl
mov
or
and
je
push
std
xor
lods
xchg
mov
aas
std
jo
sub
cmp
movsb
icebp
pop
sbbl
and
sbb
ret
fmuls
and
mov
test
vmread
scas
lahf
fbld
faddl
push
pop
sub
fildl
xchg
pcmpeqd
rorb
popf
in
stos
mov
pop
mov
dec
dec
push
mov
rorl
dec
mov
sbb
out
cmp
pop
ja
movsb
inc
cmc
xchg
hlt
call
in
or
loope
cmc
rep
or
loopne
jecxz
fstpl
cmc
add
int3
std
and
stos
push
sub
xlat
int
inc
sarl
int
not
sub
fs
dec
push
and
cmp
clc
nop
jno
or
fsubl
and
nop
ljmp
mov
push
xchg
mov
mov
mov
cmp
xchg
inc
pop
and
out
cmp
mov
jl
pop
adc
mov
stc
dec
or
sbb
out
xchg
leave
push
or
test
sbb
sub
mov
clc
das
mov
bound
in
cld
and
scas
test
mov
or
xchg
mov
push
mov
push
insl
repz
xchg
add
sub
pop
loop,pn
test
push
pop
or
scas
adc
mov
loope
out
and
push
and
mov
fcomps
loope
xor
push
scas
or
sub
push
sti
jae
stos
inc
sub
xchg
add
addr16
leave
cld
pop
lds
bnd
adc
fdivr
imul
fildl
cli
push
mul
dec
rcll
aas
push
xchg
insl
jmp
sbb
cmp
mov
addr16
mov
cmp
scas
dec
nop
jb
rclb
mov
out
cmpsl
jmp
scas
or
dec
iret
and
pop
xchg
jmp
fidivrs
icebp
pop
inc
inc
push
mov
mov
stos
mov
out
cmp
enter
mov
or
mov
cmpsb
cmpsl
cmc
xchg
mov
fimuls
pop
sbb
cmp
cmp
pop
repz
nop
push
scas
add
popa
mov
push
into
cmpsb
add
cwtl
addl
or
dec
pop
pusha
xor
into
jmp
pop
mov
xor
inc
icebp
cmpb
xor
jl
cld
or
cmp
mov
xor
data16
pop
mov
xlat
inc
or
repnz
movsb
dec
inc
outsb
pushf
jp
aad
arpl
imull
negl
adcb
dec
cmp
push
pop
jecxz
push
sbb
les
ss
lcall
inc
je
subb
xor
mov
fadd
retw
pop
popa
adc
jmp
pop
nop
iret
xor
mov
and
ljmp
adcl
sub
roll
rol
mov
add
cld
push
fdiv
mov
inc
mov
aaa
or
or
sub
fldenv
jge
cmp
add
fs
inc
stos
insl
pop
push
and
pop
pop
cmp
sarl
xchg
sahf
lahf
sbb
adc
inc
jno
adc
outsl
xchg
movsl
in
lahf
repz
mov
push
daa
movsl
dec
jl
int
mov
stc
rcrl
popf
scas
mov
in
mov
mov
hlt
mov
push
xchg
std
cs
insb
mov
test
add
jbe
int3
mov
cmp
xchg
ds
mov
push
fcomip
in
ja
inc
cld
pop
pop
out
std
jecxz
and
and
call
addl
das
sbb
adc
in
gs
push
inc
xchg
lahf
outsl
pop
pusha
dec
aas
out
imul
and
or
dec
push
out
mov
js
movsl
mov
fs
jecxz
pushf
jge
cld
adc
and
inc
mov
push
mov
mov
mov
and
imull
fisubrs
mov
int
add
in
movsb
jne
xchg
jae
sbb
jecxz
dec
pop
aas
sbbb
dec
or
sbb
push
setle
push
lret
notl
push
test
xchg
out
seta
pop
inc
fadd
fmuls
push
dec
int3
cmpsl
push
pop
xor
push
rcl
fdivs
mov
inc
jecxz
enter
push
repz
xchg
pop
cli
mov
pop
mov
and
in
mov
outsl
fldl
lahf
jp
int
xchg
dec
or
add
incl
stos
lods
xchg
and
std
xchg
adc
fidivrl
pop
jne
cmpl
aad
je
sub
add
sbb
sti
les
imul
adc
out
mov
xor
sbb
hlt
cmpsb
popa
movsb
lods
and
mov
jns
icebp
jno
icebp
inc
mov
or
lods
aam
jmp
out
es
out
fnstsw
or
xchg
into
pop
test
xchg
stos
rorb
enter
ss
in
lea
stos
mov
mov
arpl
outsl
ds
jecxz
inc
loope
clc
dec
push
addb
jb
sti
pop
mov
pop
pandn
in
dec
lret
inc
jmp
mov
pop
out
js
leave
mov
xor
sbb
frstor
fbstp
push
inc
lcall
xchg
pop
mov
cmp
jbe
daa
jne
scas
fwait
js
sti
mov
sbb
push
imull
test
xchg
or
sbb
gs
push
pop
cmp
pushf
push
pushf
leave
cmp
loop
rorb
dec
aad
lahf
pop
popf
xor
mov
fstp
int
cmp
mov
or
clc
loope
and
test
lahf
outsb
cmp
pushf
xchg
shr
add
int3
pop
scas
jl
xchg
cmp
pop
das
hlt
popa
xor
sti
inc
cwtl
shll
scas
sbb
in
mov
rcl
mov
out
cmc
push
mov
mov
shlb
std
pop
nop
cltd
mov
mov
sbb
cmp
xchg
xlat
rorb
xchg
ds
aaa
xor
out
fistl
imull
mov
or
jns
push
pop
xchg
out
push
or
add
jnp
xchg
pop
in
ljmp
iret
mov
pop
stos
xchg
push
loop
dec
dec
xchg
orl
into
leave
mov
pop
test
inc
repnz
push
push
and
jge
rcll
mov
leave
push
movsl
adc
push
adc
lea
push
sub
nop
in
inc
sbb
jnp
mov
fs
and
ret
and
ds
fwait
cmp
inc
sub
or
or
xchg
push
fildl
adcl
icebp
cltd
sub
add
retw
push
inc
push
xor
in
fistpll
pop
push
movsl
pop
cmp
lods
add
jmp
jnp
es
cld
sbb
out
leave
jbe
push
mov
lea
cmp
dec
inc
adc
mov
lcall
mov
rcrb
pop
test
jle
movsb
mov
sub
jns
mov
sbb
stos
mov
jle
addb
xor
cmpsb
sbb
add
sbb
daa
xor
idivl
mov
pushf
les
es
xor
jb
dec
test
mov
mov
or
scas
push
lock
aas
xchg
divl
popf
xor
pushf
xorb
ja
sub
lods
stc
shlb
mov
ret
adc
sub
rcrb
mov
outsl
push
mov
cmpsl
xchg
mov
lock
in
xchg
mov
jns
adc
cs
mov
mov
lret
push
test
inc
sbb
js
out
ret
mov
dec
cs
mov
and
cli
pop
jns
xor
cmp
in
int3
sub
scas
mov
xchg
pusha
cwtl
cltd
push
fsubs
movsl
daa
fcoms
lret
xchg
sub
push
cmpsb
ret
mov
pop
fmuls
mov
stos
mov
inc
jno
jecxz
dec
shll
or
inc
xchg
lcall
jno
dec
adc
xchg
insb
mov
and
inc
sbb
jnp
stos
push
lods
dec
sub
mov
ja
inc
notl
jp
jnp
mov
std
out
enter
imul
mov
outsb
mov
push
ja
sbb
pop
inc
ljmp
pop
hlt
data16
cwtl
sub
jp
lock
xchg
movl
inc
xor
jecxz
dec
outsl
imul
dec
pop
mov
inc
fbstp
sti
lret
adc
loopne
cmp
mov
stos
mov
and
insl
repnz
js
repnz
push
cwtl
pop
into
push
into
je
das
mov
pop
pop
insl
or
cmc
leave
add
dec
ja
cs
mov
xor
test
iret
dec
inc
xchg
outsl
iret
cmp
in
xchg
push
sbb
or
adc
pop
out
and
adc
xorl
push
fnstcw
jns
push
aaa
mov
mov
pusha
pop
sbb
fdivrl
jecxz
jns
jnp
add
jbe
jp
daa
mov
in
mov
arpl
ret
mov
add
push
cmc
cmp
stos
aaa
mov
jnp
dec
enter
test
loope
dec
or
hlt
fidivrs
dec
filds
int
pop
pushf
sub
clc
push
lods
fildll
mov
test
roll
adc
leave
ret
cmp
sarb
sbb
pushf
jle
jmp
dec
data16
lock
out
lret
or
fcmovbe
cmp
call
mov
fcmove
mov
mov
pop
negl
lret
pop
aaa
sub
push
sub
pop
mov
jb
jmp
xor
stos
negb
lock
cwtl
cmpl
adc
orl
out
test
popl
roll
mov
testl
cli
inc
test
adc
scas
mov
and
push
imul
pop
xor
mov
dec
fbld
mov
les
les
cmp
sbb
fdivr
add
repnz
pop
loope
dec
jnp
fucomp
or
ret
fstpl
mov
cmp
cmpsb
pop
jo
cld
adc
xor
sub
cld
cwtl
dec
sub
pop
cmp
neg
mov
mov
mov
bound
add
fmul
push
push
mov
ds
mov
mov
pop
mov
in
jle
movsb
mov
inc
sahf
and
fwait
push
adc
pop
mov
pusha
rcrb
sbb
jnp
pop
pop
mov
pop
scas
inc
jg,pn
jmp
into
daa
cltd
inc
outsl
jg
dec
xlat
lock
movsl
enter
adc
fisubl
sub
popf
push
xlat
rep
stos
ror
fidivs
movsb
repnz
dec
gs
mov
cwtl
or
jns
fiadds
cmp
pop
loop
mov
fdivr
sub
test
sti
sub
push
inc
imul
fnstenv
outsb
mov
pop
xchg
out
and
cmp
ss
fsubs
push
sbb
add
sbb
mov
xchg
jb
test
sbb
mov
lcall
and
scas
adc
mov
stc
add
fsub
jg
test
into
inc
push
jnp
pop
sub
xchg
mov
inc
mov
xchg
lea
xor
xchg
rolb
gs
pop
jg
sbb
add
es
call
das
inc
xor
mov
xchg
adc
gs
pop
pop
sbb
mov
test
xor
xchg
xchg
jge
imul
scas
insl
in
fdivl
negb
xchg
lock
mov
fnstcw
adc
xchg
push
out
adc
repz
mov
pop
shrl
sbb
test
sub
ja
std
xchg
and
ds
sbb
jecxz
adc
cmpsl
mov
dec
cmp
daa
xchg
mov
xchg
add
mov
push
leave
mov
cwtl
sbb
movsl
sub
jae
cmc
rcll
stos
ds
dec
mov
mov
add
lds
filds
lea
sub
sub
mov
lods
push
push
xor
imul
icebp
mov
jae
jnp
lods
shrl
lock
add
icebp
cwtl
nop
cmp
pop
std
jbe
or
in
jle
out
push
push
cmp
mov
mov
bound
xor
mov
inc
add
bound
mov
das
sbb
lods
xlat
clc
cmc
push
aaa
rcr
ds
mov
rcll
out
adc
cs
call
dec
and
shll
test
mov
stos
xchg
mov
sub
pop
inc
jl
andb
lret
das
xor
fsubp
mov
sub
mov
sbb
add
fs
push
inc
add
imul
notl
or
imul
ret
pop
cmp
mov
daa
dec
push
ret
daa
mov
cmp
xchg
dec
cs
and
push
sahf
pop
orl
add
sub
bound
jno
out
jb
pushf
sub
imul
popa
inc
dec
push
xchg
or
push
xor
in
push
icebp
adc
inc
xor
hlt
push
loopne
in
mov
out
cltd
jne
and
pop
add
jb
push
sarl
pop
mov
xchg
push
sahf
inc
lods
mov
fildl
div
pop
lret
mov
leave
lods
ror
sbb
xchg
inc
cmp
add
mov
adc
mov
sub
mov
push
adc
daa
pop
mov
xchg
mov
repnz
repz
mov
jg
lock
add
adc
loopne
xor
push
cld
imul
jle
in
clc
add
or
dec
pop
sahf
nop
add
sub
xlat
xchg
aas
jne
inc
ret
adc
inc
mov
adc
pusha
loopne
xchg
repnz
cmpsb
outsb
adcl
es
in
push
pop
cli
pop
mov
sbb
insb
pop
cld
adc
lret
lcall
icebp
scas
movsl
jo
aas
lds
add
inc
pop
dec
repz
mov
popa
shlb
loop
sub
out
addr16
or
xorb
or
xchg
lock
dec
lret
sbb
pop
mov
mov
and
sbb
out
xor
fdivl
ds
sub
pop
mov
mov
mov
out
les
into
dec
jl
test
mov
lods
in
gs
mov
pop
fsubs
push
in
pop
mov
pop
push
jmp
mov
and
dec
loope
inc
jmp
mov
push
repz
lahf
ss
cld
js
jne
inc
aaa
in
adc
xor
add
xor
add
jno
jno
lcall
dec
js
test
ds
cmpsb
jp
rcr
sub
arpl
pop
fdivs
inc
imul
add
and
push
sahf
mull
mov
sbb
and
sbb
or
into
jmp
jmp
loope
std
loopne
adc
sbb
or
sbb
loop
adc
shrl
mov
aam
movsb
flds
xor
outsl
lods
push
hlt
fidivrs
sub
movb
lods
mov
out
out
or
xchg
je
lcall
fwait
testl
jl
shll
shrl
pop
cli
clc
lcall
xchg
dec
lea
mov
cmpsl
inc
ret
hlt
aad
mov
lret
and
scas
pop
call
test
mov
test
or
aam
fistps
fcomp
add
or
inc
jae
mov
sbb
adc
and
jae
jp
xor
mov
sbb
aad
test
movnti
je
out
int
jne
push
jecxz
pusha
and
leave
push
outsl
std
icebp
cmp
sbb
inc
sbb
dec
xchg
cwtl
fcmovnu
pusha
fiadds
fnstenv
ljmp
test
mul
jbe
mov
loopne
jecxz
sbb
add
scas
std
ret
adc
loop
add
sbb
hlt
out
adc
insb
cmp
pop
jmp
cli
fptan
mov
push
inc
popa
push
fs
lret
push
mov
shlb
aam
cmp
pop
mov
push
or
add
insl
ds
xchg
or
or
repz
in
repz
idivb
lock
fiadds
aaa
in
xchg
push
inc
jg
or
sub
subl
jno
cli
inc
divb
sub
stc
popa
jecxz
lret
cli
push
or
mov
adcl
mov
data16
push
sahf
fmull
pop
adc
jge
stc
andb
xchg
adc
mov
aaa
shlb
daa
pop
adc
jnp
pop
adc
dec
test
jno
daa
fwait
mov
push
jbe
popa
jb
dec
mov
sti
test
pop
int3
cs
pop
add
fmull
mov
loop
sbb
pop
push
lcall
push
ljmp
cli
iret
popa
push
cwtl
pushf
xorb
inc
jl
add
lea
lock
and
mov
jb
xchg
fldt
ljmp
stc
lock
sub
call
jmp
mov
push
sbb
add
es
add
rorl
mov
clc
and
call
call
add
mov
outsb
in
shrb
xor
bound
mov
mov
and
fxam
in
sarl
xchg
divb
test
mov
sbb
test
push
jp
mov
fistl
xchg
out
inc
fwait
dec
xor
or
jno
cmpsb
add
scas
cli
lret
xchg
inc
dec
repz
or
cmp
insl
cmp
mov
push
fcomip
mov
std
and
inc
jmp
aaa
iret
imul
cmp
call
insb
es
daa
add
daa
es
andb
cmp
dec
sub
cmp
and
es
pop
test
out
ja
cmpsl
loope
das
fcomp
dec
mov
fiaddl
call
cwtl
test
aad
popf
xlat
fistpll
sbb
mov
lods
jb
jo
push
test
mov
cmc
sub
mov
lea
pop
xchg
gs
or
pop
push
push
mov
sbbl
and
add
add
imul
movsb
push
or
push
xor
mov
ficoml
cli
sub
pop
and
ja
jle
or
push
cs
dec
test
imul
adc
sbb
pop
pop
or
int
adc
lret
push
cmp
jmp
pop
shlb
and
imul
xor
cmpb
test
inc
or
mov
mov
jl
pusha
mov
or
iret
arpl
popf
movsl
mov
add
cmp
mov
xlat
pop
inc
scas
xchg
xchg
movsb
jg
lods
jno
or
cmp
sub
lcall
and
aad
push
loop
and
mov
hlt
ja
pop
movsl
xor
dec
mov
shll
fdivrs
mov
and
outsl
neg
ss
repnz
pop
ret
push
sbb
std
mov
xchg
mov
cmp
lock
adc
xchg
fsubrl
insl
mov
pop
shrb
mov
rcrl
test
push
mov
pop
adc
push
jae
xor
sub
jle
inc
ss
jl
mov
and
and
jecxz
pop
inc
sub
sub
inc
cltd
sub
dec
data16
mov
and
mov
int3
sub
sbb
mov
jae
xchg
cs
xchg
mov
aas
loope
out
cld
cltd
loopne
test
sub
sub
cltd
icebp
mov
out
insl
sbbl
sub
jg
insb
xchg
dec
imul
in
mov
fs
insl
das
rclb
or
xchg
scas
ljmp
cmp
test
add
clc
fisubl
and
or
dec
test
es
aas
pop
xor
das
in
lea
xor
pop
inc
dec
out
mov
pop
outsl
imul
jp
leave
les
jle
std
cltd
fs
xor
push
outsl
adc
outsl
rcl
iret
lcall
xchg
pop
add
lret
add
pop
xor
xor
aaa
loop
fcomp
add
scas
xchg
jnp
ja
fstpl
andb
and
add
in
ret
movb
adc
daa
ret
jo
leave
xchg
mov
push
hlt
pop
rorb
js
and
sub
iret
pop
mov
les
insl
stos
cmp
mov
into
leave
pop
in
inc
ficoml
lea
and
or
sub
xor
call
jae
cmp
cmovl
mov
lret
shl
cmpl
repz
or
ss
push
and
fldt
subb
out
sahf
shlb
or
paddusb
push
jb
cmp
int3
dec
in
insb
cmpsb
cs
js
jns
cmpsl
pop
sub
mov
cmp
mull
stos
push
loopne
sbb
add
dec
mov
repz
sbb
pop
lret
xchg
or
mov
and
adc
add
xchg
jmp
fucomp
shl
or
in
add
les
xchg
mov
mov
cmpsb
push
xor
test
mov
xor
test
scas
xlat
idivb
xchg
out
and
sbb
push
insb
lea
add
stos
into
pushf
mov
dec
test
push
rclb
adc
lahf
push
add
cmp
nop
xor
xlat
fs
loopne
pusha
adc
ss
sub
and
in
dec
ljmp
fisttpll
aas
outsl
fiadds
repz
stos
outsl
jne
rcl
adc
pop
pop
cmpsl
add
addr16
insb
imul
xchg
imul
cltd
stos
nop
in
dec
mov
push
xchg
add
cld
test
scas
jns,pn
test
sub
loopne
or
inc
data16
lods
xchg
je
rcll
mov
xor
mov
out
jmpw
cmpsl
push
stos
and
add
cmp
enter
xor
push
jle
jns
cs
fimuls
cmpsl
or
jbe
sbbb
mov
stos
or
dec
popa
mov
sub
rclb
dec
dec
divb
pop
fnstcw
sub
dec
outsl
dec
sarb
dec
inc
shlb
sub
test
lcall
lret
mov
stos
push
xchg
inc
cltd
ljmp
xchg
xor
rclb
icebp
push
mov
lods
and
daa
fcomps
in
jecxz
lret
push
pop
addr16
sbb
rcr
dec
rclb
inc
pop
stos
movsb
loop
jp
add
je
sarl
rolb
out
or
fdivrs
adc
xor
lcall
adcb
ret
fnstsw
pop
mov
les
dec
jge
mov
pop
imul
dec
in
sub
add
inc
mov
pop
out
stos
dec
movl
nop
orl
rcll
lahf
loope
out
in
xlat
mov
mov
mov
pusha
jl
add
rcrb
xchg
cmovp
pusha
inc
int3
or
inc
aaa
std
xor
fucomi
mov
jno
mov
and
stc
push
fnstcw
paddusw
pop
dec
xor
pop
mov
scas
sbb
mov
ret
mov
jnp
lcall
cltd
or
mov
dec
mov
inc
roll
sub
mov
loop
mov
push
mov
or
inc
rorb
ljmp
add
adc
ds
push
and
aad
xor
sti
sub
insb
fs
xor
test
in
lret
gs
dec
pop
jns
jg
imul
ret
mov
mov
mov
lcall
jg
sub
cmp
sar
pop
in
insl
adc
lahf
rorl
in
push
mov
lret
jp
rorb
xchg
into
mov
ljmp
and
xchg
loopne
lret
add
fsts
cs
fbstp
and
push
out
out
ss
fldcw
fistps
je
repnz
xor
push
cli
add
cli
jo
or
mov
jge
add
and
rcll
ljmp
dec
mov
push
mov
push
test
pop
sub
cmp
int3
jge
pushl
clc
insl
sbb
or
cmp
xchg
mov
push
xor
insb
cmp
nop
inc
jne
cmpsl
out
stc
xchg
and
icebp
xchg
sbb
xor
push
mov
mov
inc
enter
clc
mov
dec
imul
pop
jge
cmp
rorb
cmp
pop
ss
adc
pop
or
push
mov
xor
test
dec
mov
sub
cmp
pushf
jecxz
ficoml
scas
call
sahf
push
mov
xor
mov
stc
sbb
cmp
sub
jle
fisttpll
mov
mov
fadds
enter
mov
dec
push
and
lods
xchg
mov
cmc
pusha
mov
xor
in
and
shrb
shrl
cmc
stc
dec
xchg
pushl
xor
adc
pop
std
push
movsl
and
xchg
push
pushf
jae
test
jmp
and
imul
sub
adc
movsb
adc
arpl
jp
push
ret
aaa
lods
xchg
mov
stos
faddp
shrb
call
ljmp
repz
or
rorl
mov
scas
cmp
and
ljmp
push
ss
stos
lds
stos
pop
cltd
std
lret
cli
enter
loop
shl
xor
dec
mov
push
sbb
sbb
bswap
fadd
dec
div
js
add
cmp
mov
mov
mov
cmp
lods
mov
xchg
cmp
sbb
mov
daa
faddl
pminsw
add
and
mov
push
lret
xlat
push
jb
addr16
loop
aad
data16
or
add
in
sub
add
add
into
mov
mov
cmp
lods
fs
sub
rcl
lods
xlat
fcompl
pop
mov
pushf
inc
pushl
movsl
imul
dec
lods
sub
xchg
adc
push
and
jne
add
mov
xor
scas
out
or
mov
and
xorl
fldcw
push
dec
dec
mov
cmp
add
pop
movsl
mov
sbb
jp
xchg
es
call
popa
pop
ficoms
adc
mov
imul
sti
push
leave
je
cmp
jnp
mov
push
sti
push
jae
iret
xor
adc
mov
pop
lret
xchg
pop
mov
add
mov
int
scas
and
test
fbld
mov
jecxz
stc
daa
jmp
insl
aas
insl
sub
stos
cwtl
mov
fnstenv
push
call
repz
mov
popa
fcmovnu
fs
mov
or
sbb
push
pop
or
mov
rclb
sub
cs
mov
xchg
loopne
shll
iret
xor
cld
mov
cmp
jl
adc
inc
out
test
push
movsl
and
cwtl
mov
jecxz
into
mov
jns
sub
inc
push
adc
mov
or
aad
jge
icebp
aam
jne
dec
loope
add
out
add
mov
cmpsb
and
sub
faddl
cmc
inc
push
jp
clc
out
sub
fs
mov
movsb
leave
sub
jbe
lods
mov
add
out
mov
adc
in
inc
inc
xchg
or
and
syscall
je
mov
push
mov
movsl
test
adc
js
iret
rol
jae
push
pop
out
inc
mov
xchg
cmp
popf
push
es
sbb
sbb
bnd
inc
fnsave
enter
movl
rclb
cmp
pop
movsl
out
xchg
add
dec
lock
shrl
mulb
mov
ret
arpl
mov
mov
in
xchg
in
lea
add
popf
push
and
lock
xor
cmp
push
pop
loope
jge
fs
mov
bound
clc
xchg
lock
cmp
pop
cli
and
lock
push
jg
mov
repz
es
inc
push
sub
jae
mov
pop
loope
sbb
jbe
mov
ljmp
push
inc
sbb
add
cmp
pushf
mov
add
pop
ss
js
pop
fwait
out
pop
addr16
mov
xchg
fsts
pusha
icebp
mov
xor
mov
push
rcll
mov
in
xor
dec
sti
adc
movsb
xchg
mov
cmpsl
ss
out
cmp
lea
xchg
dec
sub
sbb
cmp
shll
js
std
std
sti
cmp
enter
cmp
nop
pushf
repnz
ljmp
jl
ljmp
pop
lret
iret
mov
xchg
fisubrs
and
movsl
jecxz
outsb
jge
ljmp
test
sub
test
mov
fstps
rorb
test
fildl
jo
and
shrb
mov
loope
dec
inc
sbb
jmp
inc
and
fidivrl
stos
ret
sahf
xor
jnp
not
js
xchg
sahf
push
xor
div
xchg
scas
movsl
shll
mov
mov
mov
loopne
adc
outsl
lahf
inc
test
rcrl
add
xor
jle
mov
sub
cmp
push
ret
cmp
aaa
cmpsl
mov
hlt
push
xor
pop
enter
add
jnp
pop
scas
idiv
dec
fs
sti
test
int
dec
ret
ss
push
xlat
dec
mov
mov
jnp
pop
movsb
dec
or
jp
pop
push
mov
mov
lcall
pop
jecxz
inc
test
xor
ret
scas
mov
sub
push
and
add
push
sub
cmp
ss
dec
mov
mov
pop
int3
cs
insb
jmp
lret
inc
push
outsl
je
mov
jp
mov
gs
and
addr16
or
test
je
js
xchg
mov
adc
or
clc
loope
push
hlt
out
or
xchg
pop
jp
ljmp
std
mov
xchg
mov
in
imul
jns
jge
dec
mov
pop
notl
sti
push
mov
notl
inc
inc
repnz
adc
push
lret
xor
insb
and
and
ja
stc
inc
cmpsl
pop
pop
cmp
pop
pop
xor
iret
push
cmpsb
pop
adc
sti
je
insb
cmp
in
adc
popf
ret
adc
int3
jno
inc
mov
das
adc
xchg
repnz
scas
xchg
pop
fdivl
movsb
fld1
movsl
aam
push
lods
cmpsl
rcl
inc
imul
sbb
jecxz
pushf
mov
cmp
dec
xchg
jge
jmp
jbe
or
enter
out
pop
add
testb
hlt
lock
add
lahf
arpl
insl
xchg
xlat
test
sub
clc
add
pop
scas
cltd
fidivs
scas
adc
adc
enter
scas
mov
mov
jge
sub
out
xchg
add
and
mov
stc
sbb
cwtl
mov
repnz
addr16
das
dec
ss
and
and
inc
dec
fstp
xor
lock
cmp
push
int
xchg
sbb
cs
and
or
add
lret
mov
or
mov
out
sbb
mov
adc
fsubrs
mov
xchg
jp
pop
shll
mov
push
push
into
imul
cmp
rol
push
mov
imul
pushf
repnz
aas
push
movsl
dec
xor
ss
les
jmp
cmp
sub
lret
rolb
and
jbe
xorb
pop
loopne
ljmp
rcr
loop
fcomps
dec
sub
sbb
fisubs
stos
lahf
imul
push
jg
fistpl
cmp
push
sub
add
test
aad
pusha
clc
dec
rolb
inc
push
or
stos
mov
ss
ret
pop
shll
adc
sub
mov
aaa
inc
fwait
cmp
push
cltd
push
aas
add
push
lds
dec
dec
and
sub
push
cli
mov
jo
lods
stc
dec
push
push
mov
lahf
inc
jmp
push
mov
divl
add
xor
jecxz
stc
inc
fdivrp
sub
inc
lret
lcall
insb
xlat
push
les
rcrl
push
lcall
mov
xchg
push
icebp
push
lret
xchg
sbb
les
and
pop
dec
jne
in
dec
shll
dec
mov
pushfw
negb
jb
jecxz
pop
fwait
scas
sub
or
fists
in
ljmp
mov
stc
or
fdiv
and
popf
lds
rcll
shrb
adc
scas
pop
fcomps
fldl
movsb
dec
xor
lods
sbb
jnp
mov
mov
jmp
dec
add
jb
mov
int3
adc
test
sbb
and
enter
hlt
fimull
xchg
test
mov
sti
test
push
add
jge
cmp
sub
test
or
sub
xor
xchg
aaa
inc
enter
ss
ds
or
imul
lock
xchg
xchg
setns
jmp
test
jp
inc
leave
sbb
andb
push
adc
lret
popa
xorl
mov
lods
adc
cmp
push
repnz
icebp
mov
mov
cmpsb
pushl
mov
in
mov
dec
lea
cmp
js
xchg
roll
int
fnstsw
cwtl
sbb
ret
jno
lods
pop
add
xorl
push
inc
sahf
or
sbb
and
leave
sub
sbb
inc
test
push
pop
xor
sbb
psadbw
enter
clc
aad
mov
clc
inc
lcall
out
popf
and
shrl
push
fidivrl
divps
stos
push
add
push
jge
cmp
inc
cltd
rcrb
in
out
jmp
inc
xchg
mov
add
dec
jno
nop
lods
pop
pop
and
in
xor
inc
dec
mov
add
xor
test
pop
int3
fwait
push
xchg
data16
stos
inc
sub
daa
xor
cmc
pop
icebp
lcall
cmp
mov
sub
cli
push
push
push
push
cs
adc
cld
pop
iret
imul
jnp
in
loope
je
jecxz
lret
out
jg
adcb
lahf
sub
and
pop
mov
maxps
jp
loope
pop
rorb
mov
ror
inc
in
mov
enter
lret
xchg
stc
xchg
repnz
je
xchg
out
sbb
fcomps
xor
rorl
adc
and
pop
add
and
jge
jns
enter
aad
pop
push
jp
mov
lret
adc
scas
loope
sbb
pop
xchg
fcmovnbe
push
popf
daa
shlb
sub
dec
and
xchg
ljmp
or
mov
xchg
mov
mov
inc
fldenv
loope
jns
push
cli
jp
cwtl
pop
jp
mov
pop
sbb
mov
add
or
mov
dec
mov
inc
xchg
dec
mov
mov
mov
inc
push
shlb
and
lcall
cmp
jbe
inc
jp
pop
cmp
in
repz
cmp
outsl
faddl
mov
out
jp
jmp
and
or
repz
mov
sti
fmulp
scas
in
push
jnp
cld
or
cli
xor
push
int
addl
mov
xor
leave
pushl
mov
popa
and
fwait
les
or
outsb
dec
pop
xchg
fwait
or
test
aaa
jne
in
inc
mov
add
data16
lea
sti
dec
subl
lods
xchg
je
lfs
inc
or
xchg
adc
xchg
push
ljmp
out
inc
jbe
sbb
jae
insb
mov
xchg
fwait
adc
js
add
adc
cltd
push
cmp
sub
cmp
mov
add
divb
test
add
repz
sbb
pop
call
shlb
cmp
mov
pop
push
pop
jge
push
lea
or
movb
out
xchg
dec
mov
movsb
mov
lahf
mov
popf
mov
ret
je
push
mov
xor
shlb
dec
orb
mov
mov
mov
inc
movsl
push
aas
stos
fcomip
push
movsl
and
jg
dec
lods
data16
sub
jno
mov
add
cmp
repnz
pop
cli
repnz
addl
jno
cmp
pop
lcall
in
xchg
mov
push
movsl
inc
xor
rorb
sub
negb
loope
test
sbb
stos
cmp
mov
cmp
rcl
inc
push
mov
inc
into
stmxcsr
pop
push
mov
push
js
sbb
sub
jb
lcall
inc
cmp
loopne
fwait
inc
icebp
je
jnp
xor
nopl
idiv
pop
sub
mov
inc
push
ret
cmp
jge
scas
lret
and
mov
pop
sbb
nop
iret
cld
mov
or
fstpl
sub
sbb
mov
out
mov
mov
ja
bound
rorb
clc
es
add
add
lods
les
xchg
shlb
xchg
push
lods
mov
push
fildl
push
lcall
lahf
push
jae
add
xor
mov
xorl
xchg
movsb
movsl
push
in
stos
cwtl
mov
add
pop
idivl
mov
cmpl
jnp
add
int
sahf
jno
inc
pop
cld
xor
pop
sub
mov
sbb
mov
inc
inc
push
push
mov
mov
sub
jo
popa
push
ret
mov
dec
rclb
test
lret
jb
fisubs
push
adc
ds
sti
mov
add
pop
adcb
push
mov
outsb
js
sahf
inc
shll
lret
fldt
or
ret
int3
pop
in
cmp
jmp
dec
xchg
les
jnp
add
and
cmp
push
out
xchg
sbb
sbb
push
std
adc
cmp
sar
adc
fiaddl
fsubrl
popf
mul
rcrb
jle
push
lods
xchg
clc
scas
notl
mov
cli
aad
inc
addr16
adcb
adc
mov
xchg
or
jne
lea
ret
aas
loop
in
and
lea
icebp
mov
sbb
ret
or
aad
sub
sbb
or
stos
pop
sbb
sbb
faddl
mov
arpl
movsl
loopne
popf
outsl
xchg
addr16
ucomiss
movsl
imul
lcall
enter
js
jmp
movsb
push
mov
mov
aam
sub
cmp
test
jb
cmpsl
push
decl
call
inc
movsb
sarb
push
pop
ljmp
or
int3
cmp
add
dec
in
imul
fwait
lds
dec
mov
repz
cmp
cmp
inc
aas
insb
loope
lods
adc
or
jno
in
popa
dec
jno
fwait
mov
add
neg
and
lret
icebp
mov
pop
je
jl
int
adc
inc
mov
aaa
mov
mov
push
into
adc
add
mov
leave
js
mov
inc
dec
mov
jno
jnp
xor
movsl
xchg
adc
rorl
dec
out
movsw
or
into
xchg
decb
cmc
imul
dec
adc
jo
xchg
nop
sarl
clc
ja
jl
repnz
mov
xchg
xor
cmp
cmp
imul
dec
push
dec
xchg
and
fcompl
dec
adc
lock
sbb
xchg
push
sti
movsb
mov
popa
xchg
cmp
shrb
push
dec
cmp
cmpsb
cltd
inc
push
in
nop
pop
outsb
out
cmpsb
mov
rorl
xchg
test
xchg
lock
sub
jg
jmp
xchg
and
in
xlat
jns
fildl
loop
mov
stc
mov
test
enter
aad
mov
les
jns
mov
or
pop
aad
push
or
icebp
jae
int
sub
sbb
jne
cmp
icebp
fwait
ss
lret
ss
sbbb
cmpb
inc
xchg
repz
adc
cli
mov
mov
sbb
gs
sbbl
leave
aad
movsl
xor
jmp
loope
js
iret
mov
cmp
xchg
push
fst
adc
xchg
insb
fidivl
or
lret
xor
or
mov
jg
mov
xor
pop
sbb
fidivrs
or
pop
adc
addl
or
adc
sbb
enter
xchg
pop
mov
aaa
aas
rcr
repnz
adc
sub
push
cmpsl
iret
mov
push
sub
pop
cltd
movsb
and
sbb
testl
fadds
das
push
adc
mov
cwtl
cld
nopl
pop
movsl
stos
push
ss
nop
flds
and
mov
fimull
popa
add
cld
or
adc
mov
push
ret
mov
mov
sbb
mov
mov
movsb
shll
dec
aad
hlt
inc
ljmp
jmp
jb
sub
lidtl
xor
add
mov
jns
sahf
fs
xor
mov
sub
pusha
dec
jno
mov
aad
unpckhps
mov
adcb
adc
cltd
lret
mov
xor
mov
inc
lods
xchg
andl
xchg
popf
cmp
sub
jl
sub
add
xor
rcrb
mov
mov
xlat
stos
leave
addr16
out
clc
xchg
mov
cmp
jnp
and
fwait
in
call
add
jne
jg
rcll
ffree
insl
enter
test
xor
mov
stos
push
lea
lahf
mov
pop
cmp
ficoms
orl
cmpsl
push
jnp
mov
jmp
in
aas
sbb
jmp
add
and
inc
mov
cmc
repz
xor
cmp
adc
int3
mov
push
sbb
and
mov
incb
inc
test
cmc
jo
cmp
insl
pop
push
mov
sti
push
adcl
les
test
mov
lds
inc
mov
shlb
or
fwait
out
or
loop
fsubr
jecxz
cltd
mov
test
fwait
cmp
insl
les
cwtl
lahf
call
dec
jmp
or
mov
cmp
xor
ret
inc
dec
push
dec
adc
lahf
sbb
mov
add
jecxz
and
test
shll
loopne
icebp
adc
cmpsb
loop
inc
faddl
test
cmpsl
and
arpl
pop
and
add
nop
scas
jne
ja
popf
pushf
jo
and
imul
or
or
inc
insl
dec
es
mov
lret
pop
sub
dec
xor
aam
sbb
lds
mov
xchg
lds
and
dec
pop
push
push
fnstenv
pop
mov
icebp
jne
decb
push
mov
mov
std
pop
cmp
dec
pop
inc
adc
imul
dec
or
xor
cwtl
movsb
icebp
inc
rcrl
adc
insl
push
daa
ja
cmp
fld
dec
cmc
xlat
popa
int3
adcb
sti
cltd
or
pop
cmp
lods
xchg
cmp
mov
leave
hlt
addr16
cmp
and
in
push
sub
mov
out
pop
push
and
outsl
ret
mov
sub
cmp
addr16
fldt
fidivs
sub
push
xchg
cmp
pop
xlat
popa
inc
xor
adcl
in
xchg
adc
or
mov
jge
mov
popa
sbb
daa
dec
cmc
ret
jne
mov
fcoml
je
shll
shll
out
into
mov
imul
cmpsb
push
pop
inc
adc
das
lock
add
jp
clc
xor
enter
inc
pop
mov
lret
in
inc
mov
arpl
inc
arpl
pop
sub
mov
cmpl
push
add
pop
add
fcmovbe
sbb
xchg
cwtl
sbb
or
add
shrb
sbb
jae
gs
jp
in
cmpsb
movsb
outsl
push
mov
popa
enter
mov
adc
push
outsl
icebp
shlb
inc
sub
mov
js
mov
cwtl
sbb
stos
mov
es
pop
add
out
mov
inc
xchg
xor
cwtl
fildll
jns
jo
fcoms
std
rcrb
adc
mov
cmp
aas
sti
xor
data16
daa
xchg
lahf
incl
and
dec
insb
and
sub
das
test
in
push
pop
jns
fwait
insl
xchg
mov
and
pop
hlt
gs
int3
call
sahf
mov
pop
fwait
pusha
push
sub
std
dec
sbb
aad
ret
call
shlb
inc
mov
cwtl
inc
sbb
adc
loop
pop
adc
in
nop
movsb
and
xor
xor
push
lahf
mov
cwtl
pop
inc
or
or
mov
daa
test
mov
hlt
lahf
xor
insb
into
sub
pop
push
into
adc
adc
push
fiaddl
mov
bound
dec
add
sbb
in
cli
int3
xlat
push
push
pop
hlt
push
testb
dec
lret
mov
or
jmp
xor
adcb
lret
js
and
fidivl
scas
loope
pop
loop
vaddpd
fwait
inc
out
pop
cld
pushw
xor
popa
imul
jae
rorl
inc
enter
lret
cltd
setno
test
add
adc
out
sub
cmpsl
cltd
xor
imul
stos
scas
outsl
jg
add
inc
mov
cmpl
sbb
inc
adc
mov
js
lock
test
sbb
and
jno
aaa
fwait
aaa
ljmp
fimull
into
mov
in
clc
push
sbb
mull
fildll
js
mov
xor
ret
xchg
faddl
jmp
jae
mov
mov
xchg
inc
cmp
scas
subb
cwtl
xor
cmpsl
or
sub
out
addr16
dec
into
push
or
pop
jecxz
enter
xchg
call
sbb
cmp
into
jno
sub
and
subl
enter
jmp
mov
dec
push
cmc
js
and
bound
pushf
mov
mov
es
sbb
push
xor
sbb
and
mov
arpl
mov
or
movsl
out
lock
scas
clc
cmp
jno
les
dec
push
movsl
mov
dec
sbb
popa
mov
lret
out
rolb
addr16
ljmp
inc
or
mov
fsubl
and
mov
popf
jae
aad
cli
adc
sbb
mov
xchg
and
add
and
mov
insl
pusha
jecxz
imul
cli
data16
mov
rorl
clc
loop
ljmp
pop
pop
cwtl
pop
xchg
popa
xchg
lret
stos
loope,pn
addb
imul
push
xchg
dec
out
mov
pusha
into
inc
cmp
leave
mov
push
push
fnstsw
push
mov
cmp
stos
fisttpll
icebp
dec
cmpsl
mov
cld
xor
pop
mov
pusha
adc
cmpb
js
xchg
or
aas
js
push
xor
lods
ds
insb
and
aad
pusha
scas
push
and
cmc
push
mov
xorb
push
dec
mov
in
subl
in
mull
mov
xchg
sub
xor
and
je
mov
mov
rcl
sbb
cltd
push
aas
xor
sub
mov
xchg
mov
cmp
jmp
jecxz
or
mov
stos
xor
xor
shll
inc
jb
sbb
inc
movsb
out
push
or
xlat
adcl
lcall
inc
sub
jo
and
jns
and
test
mov
daa
inc
aam
stc
and
mov
aam
fld
and
cmp
lret
loope
imull
jmp
js
and
add
jae
rcrb
mov
push
enter
cmpsb
gs
dec
call
stos
imul
daa
pop
mov
xlat
shlb
mov
xor
ljmp
pushf
mov
lock
sub
add
int3
test
and
clc
cmp
jl
in
clc
add
sbbl
add
lea
popa
repnz
or
sub
or
aaa
lods
hlt
or
sub
arpl
leave
imull
dec
aas
sbb
push
sbb
push
jmp
pop
fimuls
test
sti
cmpsb
sbb
mov
daa
sahf
dec
pop
mov
jg
xchg
aad
daa
xlat
sbb
sarb
add
test
clc
push
imul
or
scas
inc
or
push
int3
pop
push
xchg
fs
xchg
dec
subb
lcall
push
icebp
dec
sub
push
loope
mov
xchg
pop
xor
int
mov
jno
daa
enter
add
popa
lock
inc
arpl
js
stos
js
dec
mov
roll
test
ss
mov
mov
test
loop
aaa
mov
sbb
fcomps
mov
or
cmp
dec
sub
arpl
mov
or
cmovg
or
shrl
add
jl
ss
push
jl
push
mov
ret
push
lahf
lea
mov
div
push
xor
sub
inc
jo
cld
inc
adc
push
adc
sub
movsl
repz
sbb
ret
jecxz
ds
push
cltd
popa
ja
insb
rol
sub
xchg
xchg
shll
int
mov
fnstcw
out
cmp
ud1
dec
stos
out
int
adcl
mov
aas
je
jb
lret
imul
jle
dec
sbb
ljmp
jnp
insb
imul
push
mov
loopne
dec
imul
rcl
movsl
in
dec
jle
sbb
imul
enter
jecxz
sbb
add
cltd
cmp
lret
out
mov
insb
jl
mov
xchg
xchg
subb
mov
daa
jp
stos
or
loop
pop
jbe
mov
stos
xchg
cwtl
push
bound
leave
cmpsl
fidivl
roll
ljmp
mov
mov
inc
jg
sbb
stc
add
cmpsb
pop
pusha
repz
test
xchg
cmpb
xor
stc
test
test
enter
xor
pop
xor
mov
sub
mov
popa
call
aaa
cmp
push
add
xchg
enter
and
dec
cvttps2pi
mov
rol
sahf
xchg
out
sub
dec
mov
pop
mov
fistl
or
fbstp
aam
lret
mov
out
inc
and
and
push
add
popa
cmp
ffree
out
sbb
cli
push
mov
xchg
bound
lea
mov
xor
and
inc
jae
push
ljmp
xor
fnstenv
cli
mov
jno
adc
out
sub
jne
jno
ljmp
nop
loope
push
rcll
jmp
adc
scas
sub
xlat
jbe
lods
aam
es
insb
sub
out
lahf
mov
sbb
dec
jbe
mov
cmp
fists
xchg
cli
adc
dec
nop
xchg
test
and
fisttps
xchg
lea
mov
loope
xchg
rcl
into
add
popa
and
inc
movsl
je
sbb
sbb
or
push
cmp
sub
test
imul
pop
adc
sbb
insb
mov
mov
xchg
clc
out
lret
or
fidivs
pop
fistl
push
or
packuswb
inc
mov
mov
and
pop
jge
mov
mull
clc
sub
int3
cs
shll
or
in
push
fwait
loop
mov
pop
outsl
outsb
jle
mov
or
or
jbe
ja
pop
xor
jnp
adc
out
xchg
out
push
subl
lret
aaa
inc
mov
pop
adc
add
out
aas
test
mov
divl
subl
ret
pop
xchg
repz
enter
lods
xor
cmp
sub
imul
xchg
xchg
rorb
inc
pusha
xchg
arpl
mov
cmp
inc
outsl
int
and
loope
push
aad
lcall
push
cmp
cmp
fldcw
inc
gs
out
mov
mov
jecxz
push
xchg
push
ss
xlat
fildll
mov
call
and
push
gs
fcoms
jbe
push
sbb
std
sbb
mov
lretw
aas
xchg
fadds
push
inc
addr16
std
lret
sahf
lock
jle
mov
into
je
out
ds
lds
and
xchg
cmp
fisubrl
xchg
scas
outsl
mov
icebp
jle
jmp
and
xchg
dec
lret
cli
add
xor
push
in
push
sub
dec
mov
cwtl
xlat
mov
pop
mov
add
ljmp
xchg
pop
sub
adc
dec
dec
dec
and
cmc
negl
lret
mov
pushf
jmp
fstl
push
fcoms
int3
lret
add
or
add
cli
insb
mov
cmp
gs
add
sbb
xor
xor
cs
add
movsb
push
xchg
pop
and
scas
mov
cmp
test
dec
cmp
inc
stos
rcl
mov
stos
daa
outsl
adc
push
add
xor
jo
ret
aaa
cmpsb
lahf
rorb
push
icebp
out
cwtl
fiadds
stc
pop
jg
adc
sub
inc
add
cmpsb
je
mov
test
andl
out
in
xchg
inc
inc
and
or
shlb
out
fsts
xchg
daa
testb
in
gs
lock
dec
fwait
jmp
aas
mov
shll
and
jge
adc
or
add
or
jl
mov
adc
je
pop
mov
mov
jmp
add
negl
in
mov
and
xchg
lea
inc
dec
jno
ficoms
xchg
fisubrl
stc
jns
cmpsb
out
scas
xchg
cs
insb
inc
int3
or
pop
aas
shrb
inc
add
xor
mov
orl
shlb
dec
pusha
into
and
mov
add
add
loope
aad
leave
aas
add
xchg
repz
ret
sub
aas
fs
or
dec
fwait
movsb
cmp
dec
mov
mov
das
xabort
fisttpl
push
cmpsl
and
sub
movsl
std
ljmp
out
movsb
hlt
jl
inc
mov
inc
mov
push
shlb
mov
cli
mov
out
stos
cmc
test
xchg
sub
pushf
shlb
shrl
imulb
adc
orb
gs
mov
adc
push
sbb
fld
je
or
jmp
int
scas
dec
mov
vpaddb
int3
cmp
xchg
mov
sub
push
ret
add
movsl
mov
popa
into
loopne
push
cmpsl
push
and
mov
pushl
jnp
in
mov
or
jnp
push
jnp
roll
adc
cli
js
xor
mov
test
and
and
dec
clc
fmuls
stc
repnz
xchg
sbb
jp
push
cmp
fs
jp
nopl
lret
mov
les
inc
xchg
in
lods
shll
loopne
int
sbb
and
repz
jl
push
jae
shlb
xchg
pop
and
imulb
sub
pop
pop
dec
loop
adc
cmpsb
lcall
mov
sub
daa
cmpb
data16
jp
mov
test
mov
mov
outsb
clc
xor
ret
mov
sub
movsb
les
test
dec
jmp
mov
jmp
jge
xlat
andl
cld
lahf
dec
mov
cmp
lahf
xlat
rcrl
push
ljmp
clc
mov
sub
scas
iret
jbe
cltd
stc
mov
cmp
cmpsb
clc
rcrl
mov
pop
rcrl
xor
and
sarb
jge
int
cmp
enter
cmp
mov
cs
lret
imulb
shrb
adc
ja
adc
xchg
jge
std
adc
or
ljmp
in
sbb
shrl
mov
cmp
adc
fstpl
pop
shrl
pop
sub
imul
test
or
lahf
xor
mov
jecxz
inc
mov
test
std
and
mov
test
mov
scas
test
mov
stos
dec
fistpll
dec
cld
in
stc
lods
test
xchg
jno
xchg
pop
jp
adc
inc
test
dec
lcall
test
adc
mov
cli
add
and
test
or
xor
stos
daa
jl
imul
cmpsb
loope
adc
sub
mov
imul
out
mov
or
test
mov
xor
dec
mov
mov
sbb
aas
xlat
shll
clc
addr16
shl
orb
jl
push
dec
lods
pusha
call
rcr
mov
push
imul
mov
sub
cmpsb
ret
and
daa
mov
cmp
inc
dec
pop
fsubrp
jmp
loopne
cmp
jl
pop
or
add
cmp
dec
pop
lock
xor
lock
cmp
out
mov
push
sahf
adc
dec
add
gs
mov
inc
cmp
outsb
jge
mov
mov
mov
cmpl
adc
sub
rcrl
inc
jmp
xlat
xchg
add
pop
ljmp
sub
jb
inc
mov
inc
jbe
pop
adc
loop
mov
cs
movsb
call
fyl2x
sar
mov
inc
orb
jns
push
mov
inc
pop
pop
aam
mov
adc
mov
nop
cmp
mov
jp
pop
inc
scas
fwait
int3
call
div
lcall
mov
scas
aam
lcall
pusha
sbbl
outsl
popa
pop
sbb
push
jmp
frstor
stos
and
std
andb
xchg
xor
push
sbb
sti
lods
ja
mov
sbb
lahf
mov
loop
aad
adc
mov
mov
pop
aam
adc
out
idiv
jecxz
fildll
lcall
mov
mov
sti
hlt
cmp
test
imul
ret
or
andl
out
sub
clc
enter
jo
daa
idivb
insb
pop
inc
mov
ret
pop
call
aaa
test
lods
lods
js
xchg
leave
xor
bound
sub
call
cwtl
sub
lock
and
cmp
adc
add
xchg
sbb
jns
fidivrl
inc
mov
jg
icebp
repz
xor
xor
mov
xor
cmpsb
mov
gs
pop
cmp
add
mov
mov
mov
adc
mov
dec
jno
dec
push
mov
add
cmp
nop
lret
pop
mov
dec
lods
mov
in
dec
faddp
mov
insb
divl
idivb
add
bound
inc
dec
popa
mov
test
loop
test
cmp
push
popf
and
pusha
test
sti
add
push
loop
shl
add
lods
negb
loope
addr16
or
cmpsb
sub
jp
pop
adc
in
pusha
popf
inc
rorl
in
scas
jns
pop
jmp
dec
dec
mov
in
arpl
imul
dec
bound
add
push
lret
adc
outsl
lods
imul
les
cmp
orb
loopne
pop
pop
jbe
xor
mov
flds
in
andb
incb
clc
xchg
loope
jmp
jp
cmp
xor
call
fdivl
push
fstps
popa
xor
or
push
test
mov
xchg
test
lods
pop
pop
int
dec
loopne
push
sbb
mov
out
call
iret
mov
jmp
dec
push
lea
sahf
mov
fmuls
bound
js
cmp
nop
xchg
add
dec
addr16
stos
lods
sti
in
mov
mov
je
ror
dec
pop
lret
cld
jge
mov
pusha
jge
cmp
loop
dec
inc
sbb
dec
loop
and
jns
push
ret
inc
jmp
test
push
out
pop
dec
sbb
xchg
aam
popa
test
in
jmp
aas
mov
mov
push
xor
xchg
pop
sub
sbb
adc
aad
lret
mov
sub
lcall
fcoms
test
push
sub
mov
mov
sbb
jne
push
pop
xor
fisttpl
cmp
inc
popa
mov
aam
mov
mov
sti
mov
and
pop
int3
lods
and
mov
pop
pmullw
in
scas
lock
ucomiss
fdivrs
inc
lea
cwtl
and
lods
inc
sahf
pop
out
jl
xor
movsb
scas
rcr
push
mov
bound
push
xchg
ljmp
aas
jmp
test
inc
leave
daa
push
push
jle
js
or
xor
sbb
xchg
adc
lods
pop
outsb
xchg
std
dec
push
push
or
push
pop
and
sti
cmp
test
sbb
mov
push
bound
jl
int3
adc
ja
sbb
outsl
lret
fcmovnbe
mov
gs
jb
dec
lds
sbb
cmc
add
subl
cmp
int3
sar
shll
insl
out
dec
daa
xor
mov
scas
ja
lcall
dec
repnz
repnz
mov
mov
nop
adc
push
insb
shll
loope
les
xchg
and
repnz
sub
and
shlb
push
leave
mov
jo
add
cmp
jg
xchg
in
jp
cmp
cmc
in
sub
cmp
clc
lods
mov
mov
fistpll
rep
lea
out
xor
aam
sbb
xor
icebp
dec
sbb
mov
mov
and
int
adc
push
inc
adc
adc
imul
repz
stos
pop
jbe
sub
sbb
or
mov
dec
mov
sub
and
rclb
stos
mov
xchg
int
or
inc
push
inc
jge
mov
ljmp
arpl
sahf
xor
sbb
xchg
lds
addr16
adc
jp
loope
or
inc
lret
into
push
movsb
lcall
les
mov
push
loopne
repz
adc
mov
push
lcall
xor
rcll
lds
test
mov
outsl
mov
ja
out
mov
in
adc
cmp
cs
fwait
pop
mov
adc
subl
addr16
adc
fwait
mov
ja
repz
imul
jl
jns
cmpsb
ja
outsl
cmp
mov
cmp
icebp
xor
call
cmp
in
sub
push
call
pusha
jbe
mov
push
pushf
mov
mov
inc
cmc
push
cwtl
pop
jmp
popf
pop
mov
lock
pushf
bound
and
or
jne
ficompl
push
rcrb
rorb
dec
or
or
je
lahf
cmpsl
inc
jmp
mov
adc
das
mov
rcl
scas
ljmp
into
push
out
sbbl
cmc
cwtl
sti
mov
push
ja
lcall
inc
add
enter
aaa
je
sbb
in
xor
sti
fnstenv
push
fs
dec
or
sbb
and
fmull
in
daa
xchg
pop
clc
dec
push
cltd
mov
add
xchg
jae
lcall
js
lret
iret
cmp
test
lcall
xchg
push
inc
mov
jb
cs
xor
pop
andl
cmpsl
sbb
push
test
dec
inc
testl
mov
mov
int
cmp
pop
add
fldenv
rolb
imul
mov
and
xor
mov
ljmp
lods
jne
jno
je
mov
loope
call
mov
fiaddl
jle
sbb
std
lcall
outsl
jp
ficompl
sbbb
iret
lret
or
jne
orl
mov
inc
sahf
jb
push
es
pop
mov
push
lea
rcrb
adc
or
aaa
not
sub
loopne
test
xor
fxch
xchg
jnp
fidivs
sub
daa
arpl
dec
aaa
xchg
pop
stos
outsl
add
jno
xchg
pop
lock
dec
inc
inc
pop
xor
cmp
repz
mov
push
sahf
add
jl
sahf
and
daa
aas
and
addr16
push
mov
dec
out
jbe
in
imul
orb
mov
lods
cmp
jmp
in
mov
xchg
xor
sti
sub
add
or
insb
ret
movsb
cmp
ljmp
jp
fdivl
fiaddl
cmp
daa
ret
dec
jle
mov
xlat
cmp
es
cmp
in
loope
push
cmp
jmp
insb
add
dec
fimuls
mov
adc
jae
test
adc
outsl
dec
jbe
pop
fcompl
mov
cld
mov
dec
sub
cmp
pushf
push
pop
popf
xchg
jmp
xchg
add
testl
out
pop
xor
or
xchg
fmulp
movsb
es
cmp
xor
cltd
xchg
int3
sub
push
mov
std
mov
push
rcr
cmpsb
push
jecxz
gs
lret
xchg
jbe
inc
sti
loop
neg
imul
xchg
divb
call
adc
dec
jnp
xchg
shll
lahf
pusha
out
inc
or
imul
xchg
mov
adc
cmp
jge
setg
adc
sub
mov
fwait
push
sti
rorl
xor
mov
sbb
lahf
fsubs
cmp
js,pt
mov
inc
test
xchg
mov
movsl
sar
and
out
or
jg
sub
call
repnz
fldcw
sti
lahf
ret
push
mov
sub
jecxz
add
pushf
test
popf
push
add
xchg
xorl
mov
mov
lcall
pop
repnz
cli
mov
jmp
adc
add
idivl
in
dec
adc
call
cmpl
cmp
iret
push
es
aas
inc
sbb
cmc
mov
pop
mov
test
and
loope
aad
xor
push
xchg
jae
push
sbb
divl
mov
outsl
clc
cmpsb
lret
and
imul
push
xor
dec
and
cld
orb
push
inc
sti
mov
fxch
jno
loope
mov
xchg
bound
mov
loope
loope
jb
push
xchg
mov
sahf
xor
clc
cmpl
imul
cmp
pop
mov
xchg
imul
fistpll
or
mov
sub
aaa
and
sub
adc
notl
shrb
repz
mov
push
add
mov
and
test
fcomip
mov
lret
ret
inc
cmc
sti
stos
xor
cld
mov
push
cmp
mov
hlt
ljmp
test
pop
or
xchg
cmp
dec
lcall
dec
bound
nop
jmp
and
lock
pop
out
pop
pop
push
fcmovnu
popa
jns
pop
pop
call
loope
lods
pusha
cmp
loope
pop
pushf
inc
les
push
mov
addb
ja
leave
xchg
lods
pop
add
add
addr16
push
sbb
ljmp
movsl
adc
adc
sub
push
out
lods
popa
jmp
inc
sbb
pusha
adcl
mov
lods
int
mov
arpl
popa
test
and
jp
cmp
ret
fidivl
dec
mov
pusha
cmp
ret
add
push
int3
sahf
fldenv
and
fisubs
push
pop
xchg
dec
lcall
xchg
xchg
push
inc
or
xchg
out
jno
adc
xchg
fsin
xchg
test
cmp
push
mov
fsubrl
and
sub
stos
pop
fists
xchg
jge
ja
cltd
pop
cli
das
notl
testl
fstl
xor
sub
jle
shl
pop
loop
pop
lds
inc
aam
xchg
xchg
faddl
out
push
js
jecxz
mov
fnstsw
dec
and
and
cwtl
aaa
jbe
in
mov
jnp
ret
fdivrp
shlb
pop
add
lds
mov
hlt
mov
test
test
adc
or
arpl
mov
ds
mov
dec
ss
shrl
add
lahf
pop
aaa
out
and
lods
outsl
dec
push
cmp
dec
imul
rcr
mov
add
insb
ror
jmp
sarl
add
inc
sbb
or
adcb
ja
insl
dec
and
inc
xchg
or
xor
icebp
jg
xchg
loope
adc
pushf
sbb
imul
sub
inc
dec
pop
repz
push
lret
mov
mov
fiaddl
mov
dec
int3
xchg
sbb
addl
mov
jne
pop
mov
jne
and
out
fcoms
xchg
inc
call
push
test
rcrb
dec
add
xor
movsb
scas
hlt
cmc
enter
sahf
jbe
xor
cmp
lcall
push
cmpsl
jbe
iret
inc
or
lods
out
pusha
or
xchg
mov
sub
mov
and
adc
mov
psllq
mov
aas
dec
mov
enter
adc
mov
fsubs
cli
mov
cmp
jbe
xor
mov
frstor
imul
call
ljmp
test
rcll
jo
mul
fucom
cmp
mov
push
idivl
pop
inc
dec
xchg
rorb
decl
addr16
test
je
idivb
ret
shrb
add
jecxz
inc
movsb
add
xor
adc
outsl
scas
lcall
add
inc
pop
adc
fidivrs
fisubl
repnz
mov
js
adc
ficoml
xchg
std
ficomps
movsl
ficoms
fdivrs
add
inc
icebp
sub
mov
jno
adcb
mov
adc
push
cs
xlat
push
test
sbb
aad
pusha
std
addr16
shlb
fsubrs
mov
sbb
inc
mov
sub
stc
movsb
mov
mov
inc
mov
loopne
dec
mov
loopne
outsl
cmp
and
adc
mov
inc
out
jl
cmpb
push
sub
pop
insl
movsb
mov
je
movsl
mov
push
imul
out
cmp
mov
lock
jo
push
sbb
scas
dec
mov
imul
cmp
or
in
push
or
xchg
femms
cmpsl
nop
loopne
mov
xchg
jbe
mov
mov
faddp
mov
shrb
adc
mov
inc
loope
jp
xor
fs
jb
dec
sbb
push
sbb
xchg
lock
es
shlb
sbb
push
das
mov
dec
xor
es
test
mov
dec
ds
inc
enter
jp,pn
aas
loope
jecxz
adc
fdivrl
adc
mov
rcll
pop
sbb
lret
flds
bound
fisttpll
mov
or
add
loop
xchg
es
push
dec
sub
push
cmp
lods
xchg
xor
cmpsb
cmpsl
jo
fistps
or
std
sahf
and
aam
fnstsw
mov
add
stos
xor
scas
or
xor
aaa
pop
loop
cli
cmpsl
mov
rcrb
adc
int
add
imul
repnz
dec
inc
scas
lods
lods
xchg
pop
mov
add
add
sbb
lcallw
jle
mov
ja
int3
imull
adc
shll
cmpl
cmp
mov
cmp
movsl
stc
cmp
and
mov
pushf
push
sahf
push
cmp
mov
inc
push
xor
fcmovnu
lahf
test
iret
es
xchg
cmpsb
mov
lret
jg
jg
cltd
out
sub
mov
adc
mov
pop
fistl
imulb
dec
lds
arpl
imul
setb
xor
loope
push
push
xchg
bound
into
mov
mov
jmp
daa
or
popf
mov
jg
cmp
and
mov
push
push
addr16
jecxz
pcmpeqw
sarb
inc
ret
loop
lahf
scas
jae
divl
imul
mov
out
adc
sar
add
fdecstp
int
das
xchg
or
mov
xchg
into
test
movsl
mov
jl
push
das
xor
out
pop
cli
xchg
call
inc
je
inc
daa
jp
lcall
add
insb
mov
into
cli
inc
jp
jg
jbe
in
mov
ds
mov
lock
or
mov
and
mov
xchg
idiv
int3
jecxz
lret
cmc
xor
jns
xor
pushf
mov
mov
call
fstpt
cmp
cmp
sub
inc
mov
loop
push
nop
int
push
push
xchg
lods
inc
xor
xlat
sbb
arpl
sub
cmpsb
sbb
imul
cld
lods
jno
jge
lock
add
mov
or
push
sbbl
jno
cbtw
aam
in
inc
push
sbb
icebp
xchg
fistpll
jge
cmpsl
lahf
dec
test
xchg
test
mov
sub
add
jge
xlat
test
test
sti
mov
mov
lods
pop
daa
jns
into
push
cmc
cli
ret
push
jge
jg
jecxz
adc
outsl
jmp
mov
xchg
sbb
lods
fcomps
dec
lods
pop
xchg
inc
push
add
pushf
mov
lret
imul
ficoms
push
xchg
pop
pushf
push
push
jb
push
daa
mov
or
mov
mulb
xor
cmpl
and
add
data16
push
pop
in
enter
mov
inc
cmp
fs
dec
nop
mov
adc
bound
addb
mov
test
dec
scas
cmp
outsl
mov
mov
repnz
fnstsw
xor
jl
idiv
imul
dec
dec
out
pop
out
sub
mov
fsts
popa
dec
mov
xchg
jmp
movsb
sbb
adc
fisttpll
inc
mov
jnp,pn
cs
in
daa
repnz
or
xor
les
inc
test
mov
add
ret
xor
fmulp
sub
test
xor
xor
inc
push
aas
test
or
ret
mul
mov
in
dec
push
and
or
mov
dec
pusha
dec
adc
xorb
xor
dec
pop
outsl
mov
mov
icebp
sbb
xchg
inc
cmpsl
jbe
stos
movsl
jecxz
aam
int3
xor
pushf
repnz
hlt
les
icebp
pop
lret
inc
imul
xor
std
xchg
mov
leave
sub
mov
sbb
jae
ss
ret
pop
ret
xchg
mov
pop
push
lods
pop
pop
enter
jae
enter
test
push
add
pop
test
inc
or
xor
pop
dec
sbb
push
or
std
pop
pop
mov
dec
or
push
pop
sub
inc
xor
mov
cli
mov
imul
mov
sub
xor
cs
mov
aaa
jno
es
out
pop
xchg
ljmp
mov
int
mov
and
fidivrl
sbb
sbb
push
fdiv
lods
lea
push
repz
ss
jecxz
test
in
sbb
add
iret
add
fstp
or
xchg
and
test
dec
sbb
xor
sti
inc
push
inc
stos
adc
iret
ret
outsb
js
test
addr16
fs
imul
xor
loopne
dec
cmp
inc
test
popa
popf
and
call
js
jl
mov
ret
lea
ljmp
sahf
mov
fnstenv
lock
lock
xor
scas
adc
jb
in
sahf
xor
push
cmp
test
xchg
icebp
mov
xchg
mov
arpl
addr16
or
xchg
das
cld
dec
loop
xlat
in
inc
out
fs
dec
fcomi
mov
lock
adc
adcl
fcmovnu
cmp
mov
push
sbb
lret
xchg
test
add
rorb
hlt
outsb
pop
mov
cmp
inc
iret
movsb
loope
pushf
aas
push
in
jg,pt
bound
movsl
sbb
outsb
popf
mov
push
test
clc
mov
pop
mov
xorl
dec
icebp
pop
adc
das
xchg
dec
daa
inc
idivl
dec
inc
into
push
call
pop
in
mov
mov
insl
fistpll
xlat
cs
cmpsb
test
test
stos
lods
and
test
mov
ja
std
pop
add
mov
or
mov
cmpsl
pusha
xchg
jns
xchg
incb
adc
out
mov
aam
cmpsb
outsb
ret
mov
lret
mov
pop
ss
sub
or
ficompl
test
add
xchg
fstpl
inc
aad
mov
imul
daa
push
jo
lods
push
pop
sbb
icebp
cmp
dec
add
push
sti
mov
adc
fisttps
jno
std
arpl
xchg
push
push
rcrl
xor
add
or
mov
pop
ficomps
cmp
cmp
gs
je
ss
lods
push
mov
js
outsb
fbstp
push
pop
dec
fs
jns
mov
jnp
scas
lods
jl
dec
cli
sahf
lret
mov
mov
mov
mov
repz
push
sub
movsl
sub
shrb
lods
push
ret
outsl
test
mov
jmp
pusha
jb
inc
or
mov
lea
and
fdivrl
stc
push
adc
rol
popa
pop
mov
aas
scas
sbbl
test
xchg
outsb
sbb
pop
and
sbb
add
xor
pushf
lods
imul
add
inc
cmp
mov
gs
das
mov
sub
cmc
call
sub
loopne
push
loopne
jg
and
aam
clc
lods
loope
mov
jp
test
test
shll
pushaw
divb
fwait
mov
pop
inc
add
or
insb
repz
sbb
jmp
push
add
pop
jne
dec
cmpsb
insb
or
push
sbb
incb
inc
test
cmp
add
mov
sub
pop
add
jl
pop
cs
inc
xor
test
ja
fildl
push
xchg
sub
adc
xor
xchg
and
or
pop
mov
enter
adc
push
add
add
add
shrl
fldenv
xchg
dec
iret
pop
push
mov
sub
sbb
roll
insb
fbld
rclb
xor
out
mov
cmp
stc
jge
adc
out
mov
cmpsl
push
lret
test
stos
aaa
dec
mov
addr16
dec
add
hlt
aam
std
mov
sub
lods
xor
cmp
push
xchg
dec
jne
or
test
push
loopne
or
xchg
hlt
push
xchg
daa
adc
pop
test
stos
push
push
popa
call
cmp
and
fldt
ljmp
or
push
or
ljmp
cmp
jp
mov
cmp
ds
iret
pop
sti
push
scas
imul
int3
jns
and
cli
mov
pop
sti
sub
xor
or
sbb
insb
nop
inc
dec
xchg
pop
sub
jle
xchg
repnz
aad
loop
pop
imulb
adc
int3
sbb
sti
push
push
xchg
bound
test
or
and
xor
push
std
mov
lods
mov
jns
pop
fcomp
sbb
popf
adc
push
cmp
fwait
out
nop
inc
cmp
add
test
fmull
push
shlb
push
jb,pt
fwait
xchg
test
inc
pushf
pusha
in
imul
test
sub
pop
ficomps
insl
sub
stc
jl
call
bound
mov
mov
out
insl
xor
loopne
aam
inc
testb
xchg
push
les
lcall
sbb
aad
std
adc
aaa
fildl
lcall
ret
mov
jno
jl
movsbl
nop
adc
adc
cli
loop
popf
neg
das
inc
dec
adc
cld
stc
insb
ja
push
lret
add
push
cli
mov
or
and
mov
imul
and
cmpsl
ljmp
dec
loop
in
clc
cmp
mov
in
xor
out
lea
adc
mov
cli
adc
add
xor
insb
dec
pop
fstpl
sti
outsb
cwtl
xchg
xchg
aam
sbb
fidivrl
adc
aas
xchg
pushf
mov
shr
add
into
cmc
cli
gs
adc
xor
sti
jl
jnp
push
mov
or
sbb
inc
fistps
hlt
cmpsl
or
je
mov
scas
ss
iret
dec
scas
lret
or
sahf
rcl
pop
inc
out
outsb
ss
setae
jp
sbb
xchg
rorb
mov
and
add
mov
hlt
add
adc
pop
cltd
adc
jmp
popa
sub
jne
clc
sbb
leave
cmpsl
push
jbe
lods
sbb
ss
stos
xchg
mov
in
sub
push
pop
mov
push
sub
fsub
sbb
repnz
das
outsl
mov
stc
dec
sti
orb
out
ljmp
jge
aam
subl
xor
js
adc
out
movsl
lea
mov
sti
push
fwait
mov
in
jg
mov
arpl
outsl
dec
xchg
cmp
jo
repz
xchg
jg
lcall
outsl
add
dec
les
xchg
push
test
xchg
xchg
push
sub
outsb
call
pop
call
jns
dec
aad
inc
sub
ljmp
hlt
dec
or
fwait
outsl
jmp
adc
into
in
adc
and
jns
pushf
sub
rcll
loope
push
pop
mov
inc
jp
fcoml
push
es
dec
lock
jg
cli
pop
cmp
test
cmp
xchg
cltd
push
scas
stos
dec
pop
and
inc
sub
and
add
xor
adc
pop
rclb
in
pop
mov
cmp
and
sti
pop
jno
xor
dec
jnp
pusha
push
lret
inc
ljmp
stc
sahf
xor
mov
sbb
pop
jmp
mov
lods
push
inc
out
mov
or
jmp
jmp
adc
mov
addr16
fldln2
mov
xchg
rcrb
mov
lea
cwtl
mov
cmp
mov
adc
gs
xchg
sar
dec
or
dec
imull
in
fidivl
mov
sbb
jmp
ds
or
and
movsl
fnstenv
enter
int
cmp
enter
orl
fcomip
cmp
pop
ljmp
ljmp
mov
test
mov
pop
push
or
stos
mov
or
movsl
jo
sub
hlt
push
push
repz
mov
daa
lea
jecxz
adc
es
lock
aad
xorl
pop
xorb
call
inc
xchg
pushf
push
faddl
sbbb
jg
pop
jp
andb
cmp
addb
inc
or
bnd
pop
jno
and
repnz
sbb
mov
lods
shll
jle
ljmp
adc
leave
fdivs
stos
rol
xor
inc
test
in
es
lds
call
mov
jnp
xchg
or
sub
xchg
inc
adc
ds
push
iret
out
push
adc
push
sub
cmp
insl
aad
imul
inc
jg
pop
shrb
int3
cmp
mov
pop
insb
jno,pt
dec
sti
pop
push
imul
addb
mov
in
cli
stos
push
jb
jno
cwtl
out
sti
push
xor
mov
lahf
and
sbb
ljmp
imul
ljmp
fucomip
dec
std
arpl
test
jae
lds
adc
xlat
dec
cs
xor
jns
push
in
mov
clc
push
xor
mov
push
movsl
cs
movsl
adc
mov
test
xchg
inc
imul
iret
bound
loop
and
nop
sbb
shr
jb
in
imul
mull
dec
in
std
nop
aad
aaa
dec
adc
subb
push
cmp
fdiv
pop
pop
lcall
lds
cltd
cmpsl
sub
jnp
dec
fisubs
fdivrl
push
xor
bound
rclb
dec
repnz
pop
cmp
repz
or
fidivl
popf
mov
notl
mov
xchg
lods
or
xchg
icebp
push
adc
sub
rclb
xchg
xchg
lods
push
loope
cmp
lock
loop
pop
lahf
xor
fucom
and
sbb
inc
aad
sbbb
add
movhps
clc
jae
scas
mov
sub
sbb
lret
push
je
dec
leave
or
mov
cmpsb
pop
sahf
pop
push
lds
pop
lret
sub
lods
jbe
mov
sub
movsb
pop
push
aaa
jb
mov
cli
test
push
rcll
outsb
pop
rcll
lods
repz
cli
adc
andb
cs
or
cmp
rcr
inc
stos
orb
sub
jo
fnstsw
dec
nop
notb
insl
mov
adc
mov
push
dec
dec
ret
cmp
sub
adc
jo
cmp
xchg
hlt
sbb
mov
mov
shrb
stc
aas
pop
adc
push
sbb
in
call
sub
mov
and
sub
ljmp
or
int
nop
pop
lea
mov
mov
fidivl
les
hlt
mov
ja
jns
push
dec
cld
cmp
in
mov
pop
xchg
xchg
add
std
in
aas
popa
fdivrs
int3
or
push
mov
data16
rolb
movsl
pop
mov
dec
sub
out
loope
fimull
pop
push
dec
mov
xchg
jbe
inc
fs
stc
push
or
mov
mov
mov
jne
pop
cmp
ljmp
shl
mov
outsl
pop
pop
ljmp
icebp
mov
shrb
pop
mov
add
xor
xchg
pop
pop
into
and
daa
or
mov
loope
aaa
sti
push
fisttpl
inc
mov
jge
mov
enter
pop
out
mov
push
and
pop
clc
loopne
or
add
or
sbb
repnz
sub
lret
cli
repnz
ror
enter
xor
int3
daa
lea
sub
mov
push
sbbl
add
cmpsb
sbb
inc
lret
mov
inc
mov
and
xor
jae
or
inc
push
cmp
dec
sahf
jbe
jp
dec
and
cmp
ljmp
jle
xor
arpl
pop
cmpl
stos
and
ret
push
xor
imul
mov
jecxz
push
xor
jne
sbb
inc
push
dec
mov
mov
loope
dec
mov
sarb
loopew
inc
bound
ret
add
sub
gs
inc
aas
lods
dec
mulb
dec
sub
jnp
sub
jo
in
outsb
mov
lahf
pop
out
fildl
cmp
jle
pop
inc
and
sbb
push
insb
pop
mov
inc
xchg
sbb
aad
aas
repnz
lcall
mov
popa
test
fdivs
inc
mov
sub
addr16
sub
sub
cwtl
sbb
shlb
das
mov
push
stos
and
popa
dec
mov
mov
dec
mov
aad
xrelease
sbbb
cmp
stos
push
mov
fadds
mov
repz
lcall
fmul
fs
negl
je
xchg
test
xchg
test
xchg
pop
stos
fisttps
sub
dec
sub
aaa
cmpl
imul
mov
cmpsl
and
mov
xchg
jb
xchg
xlat
stos
movsb
das
lea
cmc
jnp
push
xchg
std
cmp
mov
aas
andnps
cmp
and
xor
andl
mov
xor
imul
and
es
arpl
out
notb
pop
stos
push
scas
call
cmpsl
inc
lock
pop
xor
inc
aad
cmp
pop
xchg
dec
in
lock
out
pop
pop
add
scas
sub
pop
arpl
cmc
lock
xor
dec
push
shr
cmp
pop
mov
mov
xchg
xchg
xor
mov
mov
adc
mov
imul
mov
inc
out
out
aam
mov
or
mov
push
adc
jae
jo
movsl
mov
mov
push
push
sbb
and
jne
add
outsb
inc
or
rorl
mov
mov
imul
mov
sub
jge
pop
inc
xchg
mov
ds
push
cmc
inc
and
pop
imul
cmpsb
out
lods
loopne
and
inc
mov
rolb
stos
dec
sbb
data16
sub
mov
cmp
xor
nop
mov
jne
xchg
push
mov
int3
sbb
mov
xchg
movsb
xchg
test
sub
imul
fiadds
mov
add
cmc
stos
mov
addr16
sbb
jle
inc
and
divl
cld
jne
and
insl
cmpsb
in
pushf
paddusw
sbb
les
sbb
jp
sbb
jbe
jge
lcall
test
xor
jbe
mov
dec
leave
jecxz
and
push
repz
dec
rcll
inc
lods
mov
int
mov
loopne
adc
ds
cmp
fnstenv
je
test
in
pop
jns
mov
sbb
jne
call
jae
ret
outsl
sub
scas
sbb
inc
iret
int
scas
add
and
cmp
int
sbb
test
ficompl
ljmp
jo
mov
pop
loop
xchg
cmp
mov
fnstenv
push
sub
mov
stos
test
ret
cmp
mov
bound
pop
or
icebp
inc
repnz
mov
rcll
es
scas
inc
addr16
cmp
and
dec
cmp
adc
lods
and
mov
dec
jnp,pn
sbbb
imul
cmp
popa
push
in
dec
in
iret
icebp
push
lds
fistps
ljmp
mov
push
ret
jle
dec
mov
fcompl
repnz
gs
jg
pop
add
push
xor
pop
sub
sahf
scas
add
int
push
mov
inc
fwait
test
sbb
fwait
mov
repz
inc
push
sahf
mov
inc
into
out
pop
jmp
inc
orb
aad
and
fs
sub
and
ret
cs
stos
je
jbe
js
loope
inc
push
xor
mov
mov
mov
pop
mov
mov
mov
lcall
mov
lods
xchg
popf
jo
xchg
lods
inc
jmp
pop
js
jmp
cmpsl
imul
pop
or
fists
jp
pop
in
lods
ds
push
sbb
insl
test
cmp
dec
or
test
push
mov
push
loope
push
or
dec
xor
ja
dec
and
cmc
sbb
sub
xchg
mov
cmpsb
das
xchg
sbb
enter
mov
iret
pop
nop
imul
cli
fstpl
xlat
jb
dec
xor
xlat
lret
push
nop
sub
int3
jmp
lahf
shrl
jmp
pop
jl
pop
push
fs
testb
ljmp
imul
inc
dec
lds
scas
sub
in
call
pop
jecxz
or
jmp
xor
push
push
jno
push
adc
push
movsl
ret
in
dec
cmp
mov
imul
movsb
cmp
loopne
sti
xchg
leave
call
aas
mov
and
mov
xchg
adc
cmp
mov
dec
ljmp
jmp
mov
cmp
shlb
xchg
adc
mov
mov
dec
adc
mov
std
jnp
push
cmp
popl
mov
in
mov
jmp
jg
mov
pop
cmp
nop
cli
xchg
icebp
cmp
cmp
popa
cmp
cmp
dec
jbe
push
push
inc
inc
jne
pop
push
sbb
in
jbe
and
jecxz
cmp
lcall
in
sti
insl
in
fistl
cmp
das
das
stc
add
jge
jbe
sbb
stc
icebp
pop
insb
push
enter
jl
pop
jns
mov
jnp
fisubs
bound
mov
insb
push
pop
xchg
lret
adc
mov
std
outsb
dec
jle
ja
sub
cmpsb
jne
pusha
lret
mov
aad
pop
xor
pop
bnd
iret
scas
add
adc
or
xor
movsl
loopne
arpl
sbb
loop
ljmp
xor
popf
fdivs
hlt
mov
xchg
fsubs
mov
xor
insl
cmp
xor
scas
or
mov
lcall
inc
mov
adc
roll
les
out
hlt
loopne
pop
lcall
adc
in
je
loop
inc
mov
les
and
mov
inc
or
mov
jno
sub
cmp
ds
sahf
call
popf
fstps
adc
inc
cmpsl
mov
pop
scas
adc
xchg
jp
cmc
rcl
adc
scas
sbb
repnz
adc
add
mov
push
imul
scas
cmp
ret
out
xor
outsb
les
sbb
jl
cmp
push
pop
pop
mov
sub
jle
or
repz
addb
mov
popa
push
aad
mov
ja
icebp
shll
sbb
sarl
sbb
aaa
dec
adc
into
repz
fcompl
or
jbe
push
call
push
push
lretw
cwtl
xchg
shr
addr16
inc
and
mov
xchg
xchg
mov
pushf
fldcw
movsb
fcompl
loop
lock
ror
sub
xchg
pop
cmp
xor
push
cmp
loopne
pop
in
test
inc
sub
add
push
pop
movsl
jnp
adc
push
enter
mov
and
adc
in
xchg
xchg
pop
and
fnstsw
addr16
clc
sahf
ss
mov
mov
movsl
or
lret
add
ret
lret
xor
gs
loope
mov
stc
lcall
negl
adc
inc
movsb
insb
and
pop
lds
adc
push
push
ljmp
xor
nop
mov
sub
shl
lret
mov
dec
mov
dec
xchg
push
das
aam
xor
xor
rolb
out
dec
int
je
dec
and
sub
repz
lods
push
cs
lods
inc
ljmp
lea
push
lahf
jae
and
xchg
pop
enter
sbb
jle
mov
cli
cld
fisttpl
mov
mov
dec
ss
xor
sub
icebp
dec
les
mov
xchg
jnp
ss
adc
sbb
adc
sbb
jo
ljmp
xor
shrl
push
mov
in
adc
inc
roll
fidivs
ds
lret
icebp
movsb
pop
pop
sub
mov
shlb
push
jb
mov
fdivr
lret
repnz
ret
daa
pop
cltd
sbb
mov
or
insb
popf
sbb
mov
sub
fcmovbe
out
pushf
mov
xor
mov
xor
rclb
xor
ljmp
push
in
jns
mov
rcl
dec
addr16
inc
sarb
insl
aam
fimuls
adc
gs
inc
sub
pusha
adc
daa
dec
xor
pop
sahf
cwtl
mov
sbb
mov
ret
jge
inc
mov
aas
lret
out
test
jg
rcrl
xor
sti
loope
mov
xor
dec
add
inc
inc
adc
pusha
notb
std
test
push
mov
leave
imul
or
enter
in
lock
cld
lret
lods
shl
pop
gs
hlt
inc
in
push
scas
bound
fidivrs
mov
testl
xchg
add
jle
rcll
push
push
mov
inc
nop
jbe
or
int3
jae
lock
in
mov
push
sbb
mov
xchg
nop
lods
inc
divl
xor
adc
dec
cmpsl
cmp
jecxz
jo
das
nop
jl
and
aam
insb
iret
pop
icebp
inc
icebp
pusha
fsubs
and
aas
jns
pop
rcrl
cmp
loope
bound
dec
jg
dec
daa
cmpsl
mov
roll
push
in
sub
insb
popa
mov
insl
cmc
scas
adc
xchg
inc
mov
or
ret
clc
out
data16
sbb
inc
test
push
stc
or
pop
push
mov
pushf
cmp
and
hlt
dec
mov
cmp
arpl
fldcw
stos
jno
push
jmp
xor
jo
push
dec
push
add
and
out
jle
out
jmp
in
mov
add
mov
int3
cltd
arpl
mov
mov
mov
fisubrl
dec
xor
jmp
incl
inc
sbb
lea
mov
sub
mov
or
clc
test
out
int3
divb
xor
cmp
scas
jne
lods
imull
sub
xchg
insl
xor
icebp
xor
xchg
out
rcrl
mov
pop
mov
xor
movsb
ret
mov
fdivp
sbb
fbstp
pushf
and
jmp
insl
lock
inc
sub
jbe
sub
or
scas
xlat
pop
mov
ss
adc
lea
fs
aaa
adc
lods
or
add
leave
outsl
fdivs
and
fucomip
ss
shrl
repnz
data16
mov
jbe
sub
add
jecxz
popa
out
sbb
mov
mov
ja
stos
ret
test
pop
out
add
mov
clc
cs
pop
cmpsl
mov
xlat
daa
cmp
aad
aas
adc
cmp
roll
add
cwtl
push
rorl
inc
icebp
and
mov
xchg
or
outsl
sbb
mov
fsts
pusha
insb
xor
mov
rorb
inc
outsl
push
rcr
xor
mov
dec
pop
adc
pop
sub
in
push
sub
cmp
lret
fidivs
stc
imul
aam
pop
add
mov
fstpt
mov
enter
jl
pop
dec
movsl
pop
insb
push
xor
mov
dec
lea
add
push
dec
int3
ret
sahf
loopne
test
lods
pavgw
mov
leave
loope
mov
xchg
add
xlat
push
xor
mov
sbb
xor
push
jg
adc
sub
or
jo
cwtl
xchg
aam
hlt
je
mov
dec
daa
mov
pop
cwtl
cmp
test
adc
lcall
outsb
nop
or
rorl
hlt
fwait
into
cwtl
cli
mov
lcall
cmpsb
mov
jno
dec
ret
les
stos
inc
cmp
xchg
jno
lret
adcl
inc
loopne
mov
sub
jmp
iret
arpl
mov
arpl
inc
fildl
and
pop
repnz
jbe
imul
mov
bound
and
loopne,pt
xchg
stos
cmp
cmpb
or
jmp
inc
add
push
adc
insl
push
call
repz
lds
dec
cmp
adc
arpl
shll
mov
sub
mov
add
arpl
cwtl
iret
mov
clc
lds
dec
xchg
mov
test
push
imul
repnz
bound
daa
repz
lock
call
push
clc
inc
add
mov
hlt
jge
adc
shll
sbbl
jbe
dec
mov
sahf
dec
aam
cli
adcl
and
jno
daa
adc
mov
div
push
test
lret
cli
popf
add
call
add
out
inc
or
inc
stos
dec
push
and
xchg
hlt
fcomps
mov
ret
aam
mov
dec
gs
icebp
rclb
sahf
cmpsb
push
loop
out
fisubl
adc
or
sub
xchg
mov
test
and
sbb
cmp
in
test
incb
dec
cmp
hlt
leave
xchg
mov
lds
dec
mov
pop
cmp
adc
and
mov
jp
negb
mov
sbb
cmpsl
add
scas
les
jp
mov
lea
or
ja
fldenv
sti
sarb
inc
mov
test
loopne
aad
mov
mov
and
bound
inc
test
push
into
std
inc
mov
jle
adc
dec
int
mov
loopne
sbb
ljmp
mov
std
fildll
ret
mov
jno
in
dec
sbb
push
icebp
outsb
popf
adc
outsl
repnz
adc
popf
sbb
fists
shll
outsb
sub
cli
fs
test
ss
sub
xor
push
push
mov
leave
push
sub
dec
add
xor
xor
test
dec
shrb
mov
mov
add
xchg
fsubr
lods
sub
mov
mov
or
add
inc
lret
movsb
push
pop
push
pop
lods
ja
mov
lea
xor
fsubrl
mov
inc
es
ficoml
push
pop
add
je
xor
loop
leave
add
add
arpl
cli
sti
lcall
das
sti
or
shrb
dec
fs
sahf
in
mov
ss
jle
sub
fcompl
mov
fcmovnbe
subb
pop
je
push
push
lds
shlb
rclb
xchg
mov
rcrb
push
fidivl
hlt
cmp
adc
lock
testb
repnz
xchg
jo
cmp
aam
push
and
push
sbb
rcl
and
aad
testb
enter
xchg
pop
cltd
jmp
inc
out
sbb
adc
popf
sahf
mov
inc
imul
push
ret
xchg
push
xchg
scas
and
mov
fnop
pop
outsb
xchg
rcll
adc
movsb
mov
add
jb
jle
call
outsb
xchg
mov
jns
jp
adc
cmc
jge
mov
pusha
aam
mov
sahf
std
test
jne
idivb
lahf
cmp
imul
add
or
fsubrs
hlt
add
pop
cltd
mov
je
xlat
mov
daa
lock
pop
cmpsl
lret
pop
popa
push
mov
imul
in
fs
jge
inc
push
inc
enter
jecxz
sbb
ds
xchg
xor
push
neg
fcmovu
fisubrl
xor
cmp
lcall
pushl
loop
into
testl
dec
mov
adc
popf
jl
neg
imul
in
sbb
and
dec
dec
push
cmc
or
pop
sbb
adc
mov
and
mov
movsl
pop
xchg
js
push
fimull
shl
cmc
or
mov
xlat
cld
mov
sbb
cmp
fists
sub
xor
arpl
jb
push
les
lock
sbb
icebp
jecxz
mov
in
test
lock
outsl
loope
lahf
into
pop
or
xchg
rcl
lods
cli
loop
jae
jge
xchg
xor
fisttps
pop
sub
mov
cmp
stos
dec
dec
mov
mov
ret
add
or
lret
sbbb
pop
push
std
test
adc
mull
xor
and
push
std
xchg
dec
push
fimull
mov
inc
push
loope
jmp
adc
push
fstpl
fsts
cli
iret
push
jo
xor
fiaddl
repnz
jae
mov
mov
popf
push
sub
ret
adc
movhps
cmp
add
std
xor
push
push
jae
jb
jns
jecxz
leave
xchg
push
mov
mov
ljmp
xchg
xorb
pop
adc
addr16
pusha
pop
adc
ret
cmpsb
and
mov
ret
outsl
insb
push
repnz
repz
mov
xchg
jae
out
push
popa
icebp
mov
add
push
sub
movsl
adc
stos
cmp
and
pusha
es
rclb
and
jmp
mov
push
or
hlt
rorl
sti
and
lret
sub
sti
pop
pop
or
jo
mov
out
inc
int
ds
stos
inc
jns
cmp
fcompp
mov
addb
jae
scas
and
sub
out
adc
ficoms
test
sub
mov
mov
dec
stos
jmp
sbb
xor
inc
pusha
fstps
js
or
adc
movsb
add
push
in
or
scas
stc
xor
sbb
jmp
mov
loopne
fidivrs
in
out
cmpsb
dec
stc
iret
movsl
pop
dec
stc
pop
stos
inc
mov
xchg
lods
xchg
pushf
lret
lret
mov
shlb
out
or
push
pop
jmp
mov
das
lret
ret
sar
pop
scas
pop
jl
daa
test
std
mov
sbb
sub
call
jecxz
cmp
xor
lock
into
add
cmp
ja
stc
push
dec
pushf
mov
sub
pop
out
bound
cwtl
fidivrs
pop
clc
cmp
fstps
push
mov
jge
sbb
int
sub
lcall
leave
xor
push
cltd
out
ret
jmp
shl
mov
sarb
pushf
ds
testl
nop
pop
push
and
dec
lret
mov
or
xlat
outsl
mov
push
rorl
inc
jg
movsl
out
lea
pop
dec
xchg
out
push
enter
das
pop
das
es
jmp
jl
push
call
cs
pop
fisttpll
loope
cmc
sbb
jmp
or
loop
sbb
sbb
jle
push
daa
lret
mov
pop
mov
dec
rcrl
jecxz
std
fisubrl
jo
fwait
out
cli
das
fwait
andb
jg
cmp
testl
or
loop
scas
fs
push
sti
pop
mov
andb
iret
sbb
arpl
sbb
push
dec
pop
out
push
hlt
push
pop
aam
int3
push
mov
xor
mov
mov
adcb
lcall
or
cmc
mov
mov
addr16
or
adc
pop
insl
out
scas
loope
rorl
inc
add
pop
daa
lods
aas
loope
adc
mov
push
les
push
repnz
ds
cs
repz
mov
sbb
imul
les
mov
pusha
icebp
or
pop
jbe
leave
add
mov
icebp
jl
int3
lret
xor
ja
insb
xor
ljmp
cltd
jg
enter
sbb
andl
cmp
and
outsb
jne
push
jb
pop
stc
mov
shrb
jecxz
js
nop
inc
subl
dec
loop
cmp
fs
ds
sub
sub
sbb
mov
add
nop
nop
test
fldcw
int
mov
out
cld
and
lods
bound
jge
mov
repnz
sub
stc
pop
popa
push
ds
and
lock
hlt
imul
inc
xor
xchg
in
arpl
arpl
gs
mov
push
loope
add
mov
icebp
call
jg
outsl
setle
stos
jg
ficomps
lods
adc
inc
mov
je
push
out
mov
aas
je
scas
pushf
inc
mov
sbb
cmc
mov
insb
inc
cmpsl
stos
frstor
movsb
outsb
pop
sub
movsl
sbb
mov
movsb
lret
pop
out
xchg
mov
xor
leave
inc
push
dec
xor
popa
scas
dec
addb
jg
ds
jg
ss
movl
cs
sbb
push
jns
cmp
add
jno
adc
sti
jge
cmp
sti
sbb
push
jbe
pop
fcmovnu
pop
or
mov
in
stos
imul
ja
sbb
pop
push
xchg
pop
in
test
jne
pusha
push
insl
mov
pop
sub
enter
or
adc
call
adc
icebp
inc
and
fxch
mov
addb
lea
jno
push
test
lods
xchg
and
pushf
or
pusha
pop
mov
outsl
cmpsb
insl
adc
mov
mov
insl
push
dec
inc
sbb
call
jbe
xor
stos
and
pop
cmp
mov
pop
movsb
dec
pop
and
push
xorl
pop
inc
iret
xchg
push
in
jp,pn
cld
jl
inc
addr16
mov
fists
lods
addr16
xor
out
cli
lahf
pop
rcll
mov
push
ret
sbbb
ja
ss
push
leave
add
xor
arpl
xor
push
xor
mov
push
dec
xor
lods
push
adc
test
mov
fidivrl
mov
inc
push
adc
jle
cld
das
pop
bound
xchg
xlat
insb
xchg
cmp
cmp
pop
pop
adc
and
in
cmpsb
sarb
mov
mov
inc
mov
add
push
sbb
popa
push
mov
jo
xchg
test
repz
aam
mov
jl
mov
mov
xlat
scas
out
gs
fstpl
cmp
inc
xlat
mov
jae
cwtd
adc
inc
clc
leave
mov
xchg
mov
ss
imul
popa
arpl
mov
jbe
xlat
call
xor
pushf
lahf
shlb
into
pop
shl
cmpb
mov
pop
push
pop
pop
push
flds
test
insl
mov
mov
es
out
inc
lock
xor
dec
in
daa
es
jl
jge
inc
cmp
rcrb
sbb
repz
pushf
es
lods
or
cltd
mov
push
cmp
or
popf
leave
and
stc
jecxz
in
popa
out
out
or
mov
push
adc
push
je
sahf
mov
dec
cmpsl
and
pop
shl
or
xchg
sub
push
out
mov
jmp
add
mov
and
loopne
ds
push
out
dec
je
jo
or
scas
lock
xchg
rolb
mov
inc
sub
insl
movsb
test
repz
or
adc
test
inc
sbb
lods
pop
fs
mov
out
adc
and
lea
adc
sub
jbe
sti
leave
and
cmc
bound
pusha
pop
les
out
inc
hlt
movsb
xorl
imul
aas
fwait
mov
add
imul
xchg
jge
or
inc
adc
inc
adc
sub
mov
sub
adc
xchg
adc
sahf
sbb
and
add
add
sahf
xchg
lret
f2xm1
xor
dec
sub
pop
dec
xchg
mov
mov
mov
popa
xchg
in
mov
sub
andl
stc
leave
pop
test
mov
test
aas
gs
inc
icebp
idiv
out
inc
cwtl
push
or
imul
shll
pop
test
aam
incl
or
outsl
pop
push
push
mov
or
out
mov
es
lcall
mov
aam
push
nop
arpl
lahf
cltd
pop
js
mov
scas
mov
jne
xchg
sahf
stos
mov
mov
fcomps
mov
sbb
xchg
and
ret
fildl
cmp
mov
dec
xchg
jbe
xor
mov
popf
adc
or
out
fsubrs
int
pmaddwd
mov
pop
xchg
fcoml
jae
sahf
adcl
data16
cmpsl
subb
mov
mov
fs
xchg
imul
cmp
lea
xchg
loope
push
fidivrs
mov
test
mov
jae
sub
push
int
out
push
in
or
shlb
cmpsl
test
mov
adc
add
jp
xchg
or
pusha
pop
inc
jg
xor
jmp
movsl
xor
add
sbb
loope
adc
loope
pop
orl
xor
jns
pop
or
mov
test
sbb
das
mov
inc
gs
or
fldenv
adc
adc
ret
jae
add
sbbb
in
js
dec
inc
ss
push
mov
js
lret
or
ret
ljmp
push
nop
les
mov
sub
cmp
nop
lcall
or
cmpsl
mov
add
popf
cmc
inc
jecxz
loope
xchg
jp
dec
add
leave
mov
fcoms
xor
or
jne
shll
mov
in
mov
mov
sarb
xor
cmc
inc
test
fs
xor
add
mov
jmp
jmp
mov
sub
arpl
add
pop
ficoml
in
push
sbb
ljmp
or
add
rorb
ss
imull
test
shlb
repnz
icebp
xor
mov
test
test
gs
mov
mov
subl
fists
sub
mov
mov
test
insb
sub
inc
inc
lahf
jno
mov
sarl
test
lods
cmp
addr16
mov
lret
inc
les
lahf
mov
popf
stos
in
leave
cmpsl
rcl
aad
aam
scas
pop
jno
daa
cmp
andb
inc
fnstcw
aam
jb
jbe
loope
dec
adc
inc
ficoml
imul
loope
jle
fwait
loopne
mov
aad
pop
call
fcoml
loopne
lcall
jnp
adc
cs
xchg
in
pop
and
cmp
fnsave
mov
cs
or
or
mov
call
adc
in
enter
call
shlb
fstl
and
cmp
mov
dec
es
out
mov
out
imul
xlat
pop
test
adc
outsl
scas
sbb
jmp
mov
sub
sar
fisubs
bound
push
stc
fisubl
and
in
sub
jp
mov
out
sar
cmp
xchg
pop
add
fdivs
sub
dec
rcrl
jne
dec
pop
nop
movb
cmp
xchg
je
cmp
sahf
inc
adc
pop
lret
ja
je
mov
js
jmp
pushf
lahf
add
push
rcr
cmp
xchg
cmp
xchg
out
aaa
xor
mov
pop
pop
shl
and
out
mov
pop
mov
mov
rcl
ljmp
inc
cmpb
xor
lea
ds
or
adc
movsl
and
decl
shl
lahf
fs
lds
pusha
xchg
push
daa
insb
push
mov
xor
xchg
xor
push
popf
pop
mov
gs
stos
fldenv
gs
rorl
repnz
push
mov
add
loopne
shlb
push
cltd
aas
inc
pop
bound
pop
pop
loopne
and
je
xchg
cmc
xchg
stos
pop
das
xor
in
mov
cmp
call
dec
inc
test
test
mov
sub
xchg
lods
sub
sub
push
std
lds
xchg
jb
jecxz
dec
pop
mov
or
adc
outsl
stc
adc
into
mov
dec
dec
test
dec
roll
pop
out
mov
test
rol
inc
mov
mov
in
adc
pushf
ret
dec
les
icebp
ds
std
notb
jbe
in
cs
aam
loopne
and
cs
add
mov
loop
repnz
test
sub
jae
mov
adc
rcrb
lods
push
mov
data16
cmc
in
stos
pop
jmp
sub
jo
dec
sub
scas
insl
jg
stos
push
lods
xor
or
mov
sbb
testb
or
ss
inc
test
test
gs
cmp
int
xlat
push
stc
scas
test
repnz
or
mov
mov
decb
sub
fidivrl
inc
lahf
imul
pusha
scas
test
movsb
xor
mov
stc
add
hlt
dec
mov
adc
insb
stos
mov
lods
lds
popa
cli
adc
lahf
movsb
mov
push
xchg
mov
xlat
pushf
mov
aas
bound
fstps
sbb
mov
xchg
mov
inc
sbb
shr
jbe
xchg
and
mov
add
loop
sub
mov
jl
mov
lahf
mov
shrb
jne
in
mov
push
dec
outsl
shl
cmp
mov
fcomp
cmp
cmovb
lods
test
sbb
in
fdivl
shr
arpl
dec
daa
addl
jnp
push
mov
mov
rclb
inc
inc
xchg
inc
aas
sbb
lahf
mov
or
lret
adc
inc
addb
push
insb
xor
pop
xor
daa
push
imul
popf
xor
add
jo
pusha
fisubrl
in
or
xlat
out
in
jg
inc
shrb
fidivrl
std
getsec
xchg
push
mov
mov
mov
pop
inc
xchg
cmp
add
in
sbb
push
inc
dec
inc
mov
fldl
hlt
dec
xchg
pushf
aam
inc
arpl
test
push
cli
hlt
mov
repz
push
push
cmp
or
leave
pop
aad
orb
dec
push
xchg
scas
push
ss
xchg
adc
rcrl
lea
jns
loop
cmpsb
xchg
loop
emms
xchg
sbb
pop
leave
jmp
cmp
ret
test
test
and
jbe
dec
dec
or
xchg
sub
add
icebp
mov
fdivl
cmpl
inc
mov
push
arpl
sub
jno
and
ss
pop
push
cmp
movsb
out
adc
aam
arpl
stc
scas
pop
and
test
add
push
clc
pop
xchg
jl
mov
inc
adc
test
or
cs
adc
aaa
stos
fs
leave
movsb
rolb
and
outsb
sbb
dec
pop
dec
lcall
pop
sbb
arpl
out
jle
inc
mov
mov
mov
adc
das
inc
mov
in
cld
enter
aam
push
sub
cmp
repz
adc
ja
xchg
outsb
adc
mov
mov
rclb
out
adc
incl
mov
iret
ljmp
jne
xchg
xor
push
cs
js
xor
js
mov
test
mov
mov
lcall
add
inc
fbstp
scas
add
sub
sub
nop
push
and
bound
fmuls
mov
push
inc
orl
cmc
jecxz
or
xor
adc
sub
xchg
out
in
fwait
inc
and
push
adc
mov
fistpll
sbb
adc
insb
mov
mov
sbb
or
mov
aaa
negl
int
xor
lods
fwait
dec
mov
test
pop
sbb
pop
mov
dec
and
mov
mov
stos
xor
cmp
out
xchg
push
push
inc
sbb
sarl
roll
sub
ret
and
xor
push
popa
jmp
mov
fcoml
pop
cltd
inc
pop
sbbl
sahf
sbb
sbb
xchg
cmp
test
stos
pop
inc
sub
fcoml
push
into
sarb
pushf
adc
pop
js
lods
add
sub
cwtl
andb
xchg
sub
pushf
push
ret
or
adc
cld
lcall
push
test
inc
pop
mov
jns
jns
pop
xor
jecxz
scas
mov
test
dec
xchg
adc
mov
adc
push
cmpsb
mov
adc
xor
in
lcall
pop
add
xchg
ljmp
jg
mov
push
push
sarl
mov
xor
jle
in
add
popf
mov
adc
jg
xorb
and
and
pop
pop
mov
pop
inc
into
adc
xchg
ficomps
cmpsb
push
xchg
mov
cltd
xor
in
out
dec
js
inc
or
fildll
fdivr
and
lods
jmp
or
out
mov
adc
push
cmp
adc
ret
fs
aam
add
stos
sbb
cld
scas
mov
pop
xchg
gs
and
jae
cmpb
xor
cmp
push
and
data16
ret
or
inc
icebp
loope
in
insb
pushf
sbb
add
inc
sbb
mov
jbe
mov
js
in
cmpb
rorl
lods
mov
test
gs
dec
jb
ljmp
aam
dec
out
adc
mov
push
aad
and
add
pop
jbe
jmp
sbb
data16
or
mov
push
add
mov
mov
adc
mov
jo
shrb
inc
xor
into
xchg
in
insb
jmp
xorl
daa
add
pushf
mov
and
xor
jecxz
adc
add
idivb
add
pushf
jl
sub
stc
and
dec
adcb
or
mov
push
scas
pop
mov
add
inc
rcrl
jne
mov
push
and
fstps
les
stos
mov
lock
sub
push
enter
loop
popa
cmc
daa
inc
shlb
icebp
pop
jl
out
sub
cmp
ja
stc
mov
sub
and
lret
mov
xchg
lock
mov
cmp
imul
xor
pop
std
cwtl
xor
xchg
scas
push
sub
out
test
cli
lahf
adc
jb
mov
or
insl
xchg
in
and
out
pop
les
and
jmp
push
movsl
into
and
or
mov
in
cmp
popf
cmp
and
xchg
fwait
shr
xchg
sbb
push
jb
ljmp
xchg
rclb
mov
pop
xchg
daa
mov
or
lret
imul
fcoml
test
insb
psubw
push
das
jl
ss
pop
mov
sbbb
stos
inc
adc
push
pop
scas
xchg
insl
sbb
dec
jmp
outsb
testl
mov
mov
mov
loop
add
push
cmp
mov
push
or
mov
addr16
jmp
pop
das
or
pop
dec
sub
jae
fwait
imull
sbbl
lahf
mov
and
cmp
enter
popa
xchg
pop
cmpb
sysexit
jno
sub
adc
hlt
mov
cld
xchg
and
lea
js
repnz
adc
dec
test
imul
sbb
pop
mov
outsl
sarb
mov
mov
push
bound
test
lcall
push
aas
dec
fiadds
pop
mov
cmp
fcomip
sub
scas
or
sub
popa
pop
aas
or
or
adc
adcb
inc
std
mov
enter
movsl
addr16
lock
inc
cmp
push
sbb
sbb
add
push
adc
movlps
aaa
jnp,pn
in
pop
jg
mov
pop
out
mov
mov
and
dec
lcall
jne
xchg
xchg
xor
lea
fadd
mov
mov
pop
fstl
mov
out
sub
iret
sbb
stos
mov
add
jns
cmc
inc
cli
xchg
xor
or
mov
push
test
icebp
imul
dec
sbb
jge
xchg
test
jmp
or
cmc
mov
adc
cmp
les
mov
int
add
ret
cmpsb
mov
mov
test
js
cltd
rcr
cli
das
test
cmp
shrl
or
add
jmp
mov
jns
mov
and
test
ljmp
shll
jp
fnstcw
lock
pop
xor
mov
out
loopne
fst
pop
sub
sub
fwait
insl
in
or
test
in
inc
mov
sub
lcall
icebp
pushl
xchg
mov
xlat
inc
dec
sub
jecxz
in
jle
jmp
popf
lahf
ret
push
bound
sbb
clc
dec
and
mov
in
or
fwait
or
ja
lods
outsl
xor
cmp
ds
into
or
stos
jae
outsl
loope
add
out
lret
rorl
mov
push
jae
jns
jne
pop
stc
xchg
push
in
jno
shl
nop
jae
mov
and
xchg
mov
fistpll
test
out
movsl
and
or
jg
fs
xchg
inc
outsl
pop
pop
test
clc
mov
dec
jmp
jl
and
sahf
mov
mov
pop
add
or
mov
xchg
insw
jne
mov
pop
sbb
push
adc
dec
pushf
cwtl
ljmp
fsubr
data16
clc
xor
fldt
aam
ja
mov
lods
mov
push
scas
cmp
loopne
aam
or
test
les
lock
adc
movsb
mov
dec
or
inc
pop
rcll
add
dec
lcall
inc
in
enter
xchg
pusha
sbb
scas
mov
loope
and
push
fidivl
mov
lcall
dec
cmp
pop
sarl
lds
leave
out
mov
nop
stos
cmp
jge
test
fstps
gs
cmp
xchg
in
sbb
test
sbb
test
aam
add
testb
mov
fwait
lea
mov
xor
lods
inc
pop
jmp
idiv
jg
mov
lahf
out
insl
orl
and
and
and
fsub
mov
push
lret
out
imul
into
or
xchg
stos
sbb
scas
int
lock
fwait
pop
xchg
mov
lods
mov
mov
lock
push
insl
cmp
mov
jno
xor
ror
adc
sub
xor
arpl
pushf
cmp
mov
roll
inc
jmp
lock
jmp
or
jle
std
mov
repz
mov
lods
jb
aaa
cmp
dec
push
movsl
pop
mov
dec
mull
inc
jmp
inc
out
outsb
mov
push
dec
adc
jl
or
inc
mov
fistps
scas
lret
dec
mov
scas
pushf
add
out
mov
das
xchg
out
lret
mov
enter
add
or
hlt
xchg
jno
pop
hlt
movsl
loope
call
cs
add
push
xchg
inc
push
xchg
sbb
iret
out
sbb
mov
push
cwtl
test
dec
mov
jnp
adc
inc
pop
fcoml
push
sbb
lcall
sub
adcl
ret
jmp
jo
js
xchg
test
jmp
arpl
je
arpl
movntps
jae
loop
mov
dec
shl
mov
jno
mov
out
lea
add
out
mov
mov
and
add
orb
pop
sbb
icebp
xor
cmp
in
inc
add
gs
ret
inc
jne
sub
das
mov
fs
test
adc
loop
and
xlat
mov
inc
sbb
imul
jne
dec
push
ja
add
push
jbe
hlt
mov
les
loopne
in
lock
push
xor
fsubl
push
xchg
iret
mov
jbe
int3
pop
sbb
mov
push
incl
clc
dec
stos
cs
mov
retw
or
push
xor
add
sbb
roll
arpl
pop
daa
adc
push
adc
dec
sarb
pop
jae
pop
stos
mov
cli
lock
jns
rclb
adc
lahf
divb
es
sbb
insl
xchg
loopne
adc
fisubrl
scas
cld
sub
inc
and
enter
mov
cli
imull
push
sbb
les
jnp
test
push
bound
xor
push
dec
lock
test
mov
pop
fsubrp
xchg
mov
add
rorb
cs
mov
dec
jle
or
stc
int
arpl
mov
es
dec
repz
add
push
mov
lock
in
std
cld
sbbl
addb
add
das
pop
push
outsl
je
xchg
xor
es
cld
and
dec
test
and
ljmp
cltd
jecxz
dec
es
jl
shl
lret
or
xchg
aas
cmc
xor
xchg
out
xchg
pop
add
xchg
push
test
je
add
mov
test
mov
and
negb
xchg
xchg
push
xor
jnp
scas
mov
inc
mov
data16
mov
sbb
jle
cmp
adc
dec
mov
push
les
enter
scas
or
xchg
and
xchg
adc
adc
jp
mov
adc
push
add
in
jge
cs
cmp
out
mov
je
mov
fnsave
mov
lods
sar
adc
bts
out
mov
icebp
push
xor
dec
sub
leave
adcl
shrl
and
jae
jo
lock
pop
xor
mov
jne
idivl
or
enter
repz
fstpl
imulb
adc
add
pop
ret
pop
inc
out
mov
pop
ja
cmp
xor
xor
sub
lods
mov
xchg
imul
xor
adc
mov
stc
and
sub
adc
in
jae
xchg
sbb
push
xor
lds
fdiv
out
in
cmp
lret
ds
sub
add
sub
std
push
fstpl
out
cmpl
movsb
int
pop
cmpsb
sbb
sar
push
jmp
cli
ret
js
sarl
cmp
cmc
test
mov
fists
dec
shl
pop
adc
out
sbb
fstpl
lret
adcb
cltd
aaa
cmp
jmp
lret
push
or
jae
repnz
cmpsb
mov
mov
rcl
bound
call
jnp
mov
mov
push
fcompl
and
mov
sub
int
push
add
cmp
jbe
cwtl
outsb
jp
xchg
hlt
out
loopne
pop
jmp
pop
adc
lcall
lret
mov
test
into
gs
or
popf
pop
xor
fadds
lcall
movsb
clc
andl
inc
xchg
jb
dec
push
xor
cwtl
push
jl
mov
adc
repz
mov
adc
movhps
cwtl
cld
mov
pop
sub
mov
or
xchg
insl
inc
dec
call
ret
or
add
or
out
arpl
test
faddl
xor
sbb
mov
push
xor
sub
ficoml
xchg
xor
jmp
and
adc
movsl
sub
jo
dec
fwait
push
mov
xchg
pop
lret
out
and
mov
jne
mov
mov
aas
xor
mov
lcall
lret
sub
iret
push
shrl
push
stos
cmp
fisttpl
mov
inc
loope
cmp
push
rep
adc
push
lcall
jo
data16
inc
cmp
inc
jo
cltd
mov
mov
mov
into
jl
popf
add
inc
xchg
enter
das
xor
xchg
and
add
subb
add
clc
cmp
ljmp
pop
fs
decb
push
fwait
outsb
dec
aas
xchg
mov
xchg
jg
pop
pop
push
or
sbb
mov
add
xchg
dec
stos
outsb
mov
pushf
in
jmp
aas
inc
repnz
ficoml
cmp
xchg
adc
stos
dec
insb
mov
cmpsl
add
scas
or
xchg
xlat
adc
inc
xchg
pop
push
dec
cmc
repz
mov
lret
cltd
inc
sbb
mov
cmp
es
jb
xlat
pop
bound
jae
cmp
lcall
test
ja
cmpsb
ds
cmp
jecxz
push
pop
mov
sub
dec
std
add
xor
add
xchg
mov
ljmp
outsl
add
leave
jp
js
pop
mov
std
xchg
std
mov
test
xlat
sti
mov
ficompl
out
fsubrs
data16
leave
in
or
push
pushf
and
adcl
fs
cmp
loope
sub
sbb
inc
push
mov
loop,pt
mov
cmp
dec
ffree
in
outsl
xchg
lahf
ja
adc
inc
xchg
xchg
leave
es
pop
jno
hlt
and
mov
enter
jno
mov
sti
sbb
and
gs
test
add
mov
adc
or
jo
push
add
sub
jne
mov
mov
add
and
sahf
sbb
ja
aad
jno
testb
xor
sbb
dec
aad
das
cli
stos
scas
and
daa
mov
call
mov
cmc
aam
dec
sub
je
call
mov
cmp
mov
xchg
add
mov
lcall
jo
orb
push
lret
sub
jno
mov
sub
add
push
outsb
and
hlt
enter
inc
or
lahf
iret
cmp
insb
aaa
xchg
add
mov
mov
dec
incb
adc
dec
das
or
pop
push
sub
shl
sbb
repz
fs
data16
ja
lea
ds
test
inc
xchg
repz
int
insl
shl
push
pop
je
imul
push
pop
xchg
movsl
pop
jns
rorl
shlb
andb
into
stos
in
sbb
aaa
repnz
jno
pop
cwtl
daa
mov
fwait
inc
and
repnz
out
sbb
add
sub
pop
xchg
lods
loope
scas
data16
shufps
xchg
test
jns
jmp
out
push
in
fcmovnb
outsl
jae
inc
push
outsl
push
push
adc
fs
mov
pop
cmp
daa
fsubs
or
fmull
mov
out
mov
mov
sbb
jmp
dec
es
mov
push
or
cmpsb
movups
jmp
jl
adc
cmp
push
inc
stos
mov
scas
mov
insb
inc
pop
sbb
sub
push
xlat
dec
jae
stos
or
adc
mov
fcmovnu
daa
cmp
outsl
addr16
and
dec
mov
jbe
ret
mov
out
out
ss
mov
push
lahf
mov
or
in
scas
push
add
ja
dec
cmp
push
cmp
daa
mov
aaa
or
cmp
cli
out
inc
dec
fwait
mov
int
pushf
xchg
push
int
push
aad
dec
push
addl
out
bound
mov
lcall
shlb
insb
push
push
inc
sbb
sarb
sbb
test
ficoms
jae
cmp
icebp
in
and
scas
jb
pusha
lcall
jo
in
test
pop
jp
push
test
xor
mov
int3
cmp
popa
aas
or
adc
cmpsl
xor
loope
xor
and
push
in
pop
pop
stc
fisubl
or
sbb
add
cwtl
inc
sbbl
mov
rcr
xchg
or
ffree
jbe
add
cmc
mov
test
or
mov
xor
inc
mov
unpcklps
jae
in
fsubs
jl
test
stc
fisubl
es
jl
dec
mov
je
xor
or
test
or
push
sub
scas
pop
mov
gs
mov
sub
pop
push
cmp
xor
inc
mov
cmp
mov
sub
in
lock
std
cwtl
lods
mov
mov
pop
movsb
pop
les
jmp
adc
mov
jg
in
adc
pop
lods
cmp
jae
insb
add
enter
xlat
pop
in
stos
int
push
mov
test
inc
das
inc
xor
lock
out
jmp
pop
aam
push
sbb
jle
sbb
mov
mov
sbb
pop
data16
lahf
jnp
xor
rolb
arpl
inc
lahf
fsubs
or
aas
outsl
pop
pop
jecxz
push
mov
xor
dec
addl
jae
xchg
lea
iret
hlt
sub
cmpsb
jmp
adc
mov
sub
je
inc
mov
rcll
hlt
lea
mov
imul
sub
enter
fs
hlt
inc
decb
std
sub
test
pop
test
das
ss
test
and
mov
push
sbb
hlt
sub
hlt
or
sub
xor
aad
imul
lods
dec
sahf
aad
fdivr
inc
xchg
mov
sti
inc
fnstsw
push
sbb
pop
mov
push
pop
lods
aaa
add
and
xor
push
and
inc
mov
mov
inc
rcr
mov
adc
hlt
mov
xlat
cltd
push
pop
addr16
jge
or
icebp
out
pop
daa
popf
out
inc
scas
jo
pop
sub
fwait
popf
ss
test
fiadds
lods
adc
test
shl
js
dec
mov
sub
je
xor
dec
loop
jp
shl
cmp
dec
mov
lods
mov
sbb
js
testb
lret
hlt
cmc
mov
mov
jnp
xor
test
or
fadds
cltd
call
loop
adc
scas
dec
and
cltd
inc
call
cwtl
add
cli
and
and
sub
cli
push
dec
mov
mov
push
lea
mov
sti
out
sub
xor
popa
inc
outsl
xchg
mov
insl
mov
pusha
call
ret
mov
xchg
or
lcall
push
xchg
fdivrp
mov
sbb
jnp
jae
or
mov
and
das
loope
jbe
xchg
sahf
mov
cmp
inc
and
push
mov
and
pop
ja
loope
mov
cmpl
and
jmp
jmp
jo
ret
les
adc
jnp
data16
mov
jns
cmpsl
pop
addr16
jno
sbb
cmp
out
daa
push
mov
xor
and
push
jne
nop
lret
push
xchg
aas
enter
sub
repz
stc
ret
outsb
rorb
xor
incl
movsl
sub
push
sbb
jg
pop
xlat
cmc
cmc
cmpsb
testl
loop
sub
imul
mov
dec
pop
lahf
icebp
mov
push
sub
push
push
mov
pop
in
daa
mov
xchg
adc
push
mov
fcmovne
loope
mov
cmp
mov
and
cmp
sbb
dec
dec
mov
out
fucom
push
inc
lods
jecxz
loope
jo
sbb
inc
movsb
enter
and
dec
xchg
add
inc
mov
mov
ret
xor
js
ljmp
test
popa
aam
shrl
xchg
sbb
sar
xor
ret
jae
hlt
xor
loopne
mov
decb
add
into
cmpsl
fists
call
loope
mov
mov
dec
ret
xor
mov
jnp
jo
lods
fmul
stos
or
push
inc
hlt
movsl
fists
ljmp
cwtl
mov
aad
addr16
orl
stos
std
ss
fwait
mov
cmpsb
cmpsb
test
pop
sti
pop
cmpsl
add
and
in
xor
adc
movb
loope
dec
pop
xchg
mov
clc
push
out
adc
mov
jo
es
das
pop
outsl
push
ss
into
je
lret
leave
mov
orb
shrb
lods
stos
and
clc
divl
lahf
clc
adc
scas
dec
xor
mov
mov
xor
aad
outsl
not
sub
test
cld
mov
pop
mov
les
out
pop
out
jg
jb
test
daa
xor
mov
popf
cmp
rol
fwait
or
aaa
sub
bound
fwait
daa
fidivl
push
stos
add
fisubrs
push
pop
loope
das
jae
xor
inc
pop
or
iret
out
cli
insl
push
mov
test
push
movsb
jl
add
push
fwait
arpl
push
pop
notb
ret
sbb
mov
gs
mov
in
xchg
inc
in
sbb
or
inc
xchg
es
pop
cmc
imul
pop
out
fcoms
addr16
pop
or
mov
mov
subl
stos
add
lock
mov
adc
ja
pushf
mov
mov
sbb
push
push
les
pop
xchg
adc
adc
cwtl
push
aam
adc
arpl
jns
icebp
pop
ret
push
push
fs
test
cs
cmp
lret
push
rcl
jns
fimuls
dec
into
loope
cmp
sahf
je
incb
daa
inc
jno
add
in
cmp
and
imul
push
cmp
bnd
xchg
dec
fs
inc
pop
or
ds
cmp
xor
movl
adc
cmp
pop
mov
or
cmp
fdivr
rcl
adcl
dec
inc
add
xor
mov
and
lea
and
iret
sub
xchg
xor
rcl
push
push
test
pop
xchg
das
aad
js
sbb
sbb
add
negb
test
adc
imul
pusha
or
mov
adc
fs
xchg
mov
jbe
cs
clc
jge
mov
sbbl
jl
negl
mov
pushf
and
enter
sbb
imulb
cmp
xchg
add
arpl
mov
pop
add
call
mov
add
lods
lret
mov
xor
and
and
add
push
mov
jnp
mov
or
cmp
jg
push
sti
dec
stos
mov
add
cmc
ljmp
jae
popf
and
stc
enter
add
xchg
push
ficomps
add
xor
insb
push
aaa
rorb
xchg
mov
fiaddl
test
insl
scas
and
add
adcl
pusha
ds
push
xor
addr16
jnp
fwait
push
push
ret
add
cmp
push
imul
shll
or
nop
and
jmp
or
jnp
dec
shlb
mov
jbe
lock
jns
inc
lret
mov
xchg
movsb
add
dec
jbe
add
stos
aam
mov
cmp
cmp
dec
and
sub
xchg
mov
pop
cltd
into
push
adc
add
call
shlb
repz
pop
mov
push
lds
xlat
ja
insb
dec
jne
pop
sbb
cwtl
dec
xchg
test
xchg
pop
adc
and
cmp
xchg
mov
jle
jb
imul
jns
lahf
or
pop
xor
add
adc
mov
sbb
mov
and
and
pop
repnz
cmpsl
push
daa
jbe
repz
js
mov
push
and
dec
addb
pop
mov
pop
int
dec
sbb
pop
rolb
fidivrs
jmp
add
add
loope
call
dec
inc
sahf
les
cmp
add
push
mov
jb
and
lods
ss
and
mov
into
movsb
mov
bound
and
shrb
xor
push
enter
pop
and
addr16
jmp
push
adc
push
jne
test
faddl
movsl
test
adc
jle
mov
sbb
stos
add
mov
cld
call
test
push
iret
xchg
adc
xchg
arpl
jmp
sarb
in
test
cli
icebp
xchg
arpl
and
call
push
push
or
mov
dec
inc
sahf
mov
xor
pop
in
enter
scas
ss
enterw
mov
push
add
sbb
jmp
mov
sti
aaa
rorl
shrl
fisubrl
mov
or
les
jo
mov
or
inc
mov
pop
cmp
int3
jno
push
mov
xor
clc
les
pop
jne
cmp
jle
repnz
cli
icebp
lods
add
punpcklbw
lcall
or
lcall
xchg
in
aas
adc
push
mov
lidtl
and
dec
adc
aaa
aad
pop
sbb
daa
add
sbb
test
pop
loope
stc
mov
icebp
mov
fstl
popa
cmp
out
vpsrad
xor
dec
inc
dec
es
ret
add
int3
rcrb
mov
rorb
aas
in
jl
mov
mov
cmc
popf
insl
push
insb
cmp
repnz
xchg
lock
pop
jmp
cmp
out
popf
sbb
pusha
lahf
dec
iret
and
rcr
test
aam
mov
or
mov
adc
xlat
or
cli
dec
dec
push
ficompl
push
out
test
scas
push
xorl
cmp
sahf
lds
sarb
cwtl
jle
and
fcom
or
add
out
in
push
add
mov
or
dec
jge
cmp
push
ret
fstpl
xchg
xlat
arpl
and
sbb
and
mov
js
dec
and
adc
jecxz
push
inc
sub
mov
adc
mov
inc
cmc
mov
push
mov
and
lods
jbe
and
cmp
push
pop
or
lcall
lcall
jne
sub
sahf
xor
xor
test
ss
xchg
pop
gs
and
lret
adc
jb
insb
mov
fst
mov
sub
sub
ss
aad
shlb
enter
jge
ror
pop
rcrl
sub
addr16
and
jmp
mov
gs
push
xchg
push
sbb
xlat
clc
inc
xchg
push
sbb
sub
dec
jl
pop
fcompl
stos
jle
jmp
mov
add
inc
fisubrl
cmp
mov
fisubs
add
mov
jle
adc
jp
fimuls
sub
or
add
out
subl
dec
shrl
dec
fstpl
pop
mov
cmp
pop
int
xchg
insb
bound
cmp
sbb
stos
movsl
test
shr
stos
les
es
mov
pop
or
cmp
xlat
pop
imul
xor
aaa
mov
adc
jle
pushf
leave
jae
addl
insb
ret
roll
jno
jmp
sti
sbb
and
jmp
les
dec
pop
xchg
fisubrs
and
cmp
out
inc
insl
jns
gs
mov
adc
sub
movsl
mov
dec
push
mov
addr16
push
fcoml
xchg
jnp
scas
les
js
fdivl
pop
faddp
repz
imul
addr16
push
dec
xchg
add
push
pop
imul
push
pop
xchg
inc
sbbb
sahf
inc
pop
lret
addr16
jo
shr
sub
cwtl
add
push
mov
test
arpl
cmc
shl
insb
push
inc
dec
aaa
mov
jge
lods
aas
mov
cmp
mov
sbb
push
je
stos
outsb
fwait
loopne
daa
jno
adc
filds
mov
xor
push
repz
lcall
fistpl
sub
mov
lods
dec
movl
lret
mov
aam
in
cmp
xchg
fcmovne
or
dec
in
js
je
insl
adc
pop
push
push
in
mov
shll
lss
or
out
jmp
xchg
fcomi
pop
and
cwtl
mov
and
roll
fistpl
or
int
enter
nop
pop
pusha
call
mov
push
mov
dec
pop
jmp
inc
test
lods
and
xchg
xor
cmc
push
add
xchg
mull
xchg
popf
test
sbb
fidivrl
pop
xchg
sub
mov
rcrb
or
divl
or
add
jg
sbb
fwait
scas
loop
or
mov
adc
mov
jg
jp
mov
es
jg
outsl
daa
ror
or
mov
mov
ret
jmp
hlt
das
xchg
and
dec
enter
jecxz
testl
icebp
push
mov
jae
adc
addl
adc
mov
cmc
and
movsb
insb
mov
and
repz
lret
add
cld
mov
int
pushf
sbb
mov
and
fdivl
inc
inc
cmc
shrb
jle
sbb
or
insb
movsl
fnsave
inc
or
fadds
movsl
sub
arpl
lret
jb
dec
or
addr16
inc
cs
push
mov
es
inc
push
inc
into
mov
jmp
ljmp
jle
repz
cmp
xchg
dec
loope
in
and
sar
push
mov
inc
jnp
rorl
int
fs
leave
or
psubq
popa
sbb
in
popf
dec
ret
add
mov
jb
mov
sti
adc
push
sahf
sub
add
mov
jge
xchg
lret
inc
add
push
and
outsl
inc
cld
cld
repnz
xor
ficompl
and
adc
mov
mov
mov
dec
fnstenv
and
sahf
loop
rcrb
sub
int3
cmp
call
jbe
out
add
jno
pop
jecxz
push
and
movsl
je
and
dec
cwtl
loopne
stos
xor
mov
bound
test
mov
cli
addb
dec
rcpps
cli
sbb
sti
add
aam
cwtl
mov
dec
shl
fidivl
pop
cli
push
jae
push
fldenv
xchg
add
mov
inc
lock
mov
lea
jl
in
jne
cmp
pop
add
jb
mov
push
dec
lahf
xchg
cmpl
xor
inc
or
test
ja
adc
sub
xor
sti
or
mov
stc
dec
xor
ljmp
daa
mov
imul
shlb
lret
lahf
cwtl
fnstenv
mov
sub
sub
cwtl
stos
imul
adc
sahf
dec
out
stos
and
pop
adc
movsb
sub
in
cmp
arpl
xchg
add
arpl
xchg
aad
push
cmp
ja
lock
pop
gs
add
or
dec
push
push
or
mov
pop
lahf
es
adc
pop
je
inc
not
scas
outsl
mov
outsb
inc
sbb
and
dec
adcl
xor
pop
mov
adcl
mov
orb
js
and
cmpsb
mov
cmp
add
xchg
mov
push
in
cs
or
fwait
shl
inc
xchg
movsl
mov
sub
enter
imul
imul
mov
lcall
icebp
out
jg
and
pop
lds
mov
insl
fisubrs
shll
rclb
imul
mov
sti
cltd
mov
mov
mov
nop
daa
add
or
mov
das
mov
insw
push
cmp
sub
stos
push
and
outsb
leave
inc
jp
sub
cli
data16
outsb
mov
imul
cmp
loop
and
dec
add
loope
jmp
subb
sbb
hlt
mov
out
jle
lahf
or
jbe
cmpsb
push
rclb
adc
cmp
sti
shrb
and
sub
inc
mov
pop
sbb
dec
mov
pop
clc
das
repz
lods
mov
dec
cwtl
sahf
mul
cli
adc
loope
shll
pop
pop
jo
xchg
insl
jne
dec
sbb
jns
mov
jle
les
in
jmp
inc
dec
jno
sbb
inc
mov
repnz
jle
stos
cmp
outsb
and
ret
mov
movsl
add
push
pop
sub
jle
cmp
cmp
xor
in
pop
or
xchg
outsl
xor
jge
dec
push
push
cmp
je
out
das
aaa
sahf
je
cmpsb
cmp
push
inc
scas
nop
lods
pop
inc
cmc
bound
enter
push
push
dec
xorb
push
inc
rcrl
bound
push
pushf
sarb
or
jno
ss
incb
lea
xor
pop
mov
enter
dec
mov
xor
subb
push
shlb
fldt
aaa
cs
push
add
cmp
dec
jbe
cmp
sbb
bound
inc
mov
ror
push
repz
add
loopne
mov
push
sub
test
cwtl
xor
fisubrl
push
sbb
xchg
sbb
push
jp
pop
mov
adc
or
pusha
mov
pop
mov
fsts
es
lods
in
jbe
add
mov
lds
sbb
outsb
out
je
sbb
add
cmpb
mov
lcall
or
fstpl
jg
fmulp
mov
jge
push
mov
or
pop
cltd
mov
loopne
cltd
cwtl
xchg
repz
and
scas
int
jo
aad
je
push
jg
jnp
outsl
or
in
mov
je
icebp
sbb
ficompl
sbb
lcall
dec
push
imul
ret
mov
pop
sub
jg
addr16
andl
push
lcall
and
add
xor
mov
shrl
arpl
dec
lcall
fdivs
or
dec
mov
pop
call
leave
adcb
pop
ss
cli
xchg
xchg
insb
xor
jnp
sahf
fldenv
add
push
lods
rcl
aas
add
xor
jbe
mov
stos
fadds
sarl
pushf
xchg
fdivl
adc
lea
sbb
push
dec
imul
and
ljmp
push
rcrb
call
stc
loopne
negl
sbb
lds
pusha
stos
imul
add
dec
enter
hlt
cmpsb
cld
pop
addr16
fidivs
fdivl
pop
stos
out
jno
cmp
shl
ret
jno
inc
inc
xchg
sbb
pop
fisttpl
jle
mov
cli
push
xchg
jge
lret
adc
cmpsl
lds
jns
xchg
xor
adc
aas
push
cmp
mov
add
into
push
and
jp
fstl
mov
sbb
shrl
fdivrs
pop
xchg
fdiv
sbb
mov
test
rcr
fs
popf
scas
je
sub
push
pusha
mov
cmpsb
mov
ficoms
xchg
int3
cwtl
cltd
adc
mov
std
xchg
test
loop
inc
pop
mov
sub
int
loope
xchg
out
arpl
dec
mov
mov
add
cmp
mov
xchg
cmp
in
pop
inc
into
and
jmp
mov
mov
cmc
inc
jg
ss
call
fdivl
fldt
xlat
add
inc
call
rcrl
xor
out
jno
sbb
enter
mov
aad
icebp
xchg
mov
sub
lahf
stc
jbe
icebp
scas
push
jnp
je
add
cmpsl
pop
shlb
and
fldt
cwtl
in
mov
mov
dec
pushf
xor
push
sub
fldlg2
pop
adc
cmpsl
fdivrp
sahf
lods
or
mov
sbb
adcl
mov
divb
lock
fstpt
pusha
dec
mov
call
loopne
and
sub
lods
jp
enter
shll
es
add
fucomip
arpl
xor
insb
jge
add
fisubrs
push
lahf
cmp
lods
jge
jp
enter
imulb
lods
cmp
clc
sarl
das
je
repnz
stos
cmp
sbb
fnstenv
out
enterw
rclb
push
out
pop
cmp
push
sbb
add
sub
pop
sub
sbb
roll
xorb
in
aaa
popa
sub
popa
pop
mov
dec
out
lcall
leave
dec
mov
pusha
gs
rcll
mov
arpl
cltd
pop
pop
aaa
dec
pop
dec
stos
or
add
push
imul
fldl2e
mov
sti
jae
imul
jp
pop
loop
sub
pop
movsl
aaa
push
adc
jbe
repz
jp
aaa
or
cmp
cmp
dec
in
xor
test
cmp
and
xchg
ffree
add
dec
ffree
sbbl
inc
sarl
jae
mov
xchg
rcrl
mov
add
inc
xchg
lods
adc
jb
and
add
mov
jge
shlb
mov
lea
adc
mov
xchg
jno
push
and
mov
and
pop
bnd
xor
out
pushf
cltd
push
sbb
adcl
push
and
leave
pop
push
sarl
adc
adc
and
or
call
sub
stos
pop
ljmp
into
shl
clc
movb
cmc
mov
xor
fbld
cld
ljmp
test
cmpsl
in
xlat
outsb
xor
test
in
fst
stos
hlt
lds
ror
sub
mov
jge
jmp
xchg
lds
adcl
mov
inc
popf
adc
dec
xchg
push
push
outsb
lea
and
enter
adc
je
je
addb
out
inc
push
fnstsw
xchg
sbb
ret
call
das
psubusw
nop
push
inc
aas
mov
dec
cmpsl
inc
aam
cmp
jge
test
ret
or
in
adc
scas
inc
ss
pop
mov
pop
sti
mov
mov
fs
out
aaa
jge
mov
cmp
xchg
push
mov
dec
mov
push
dec
jno
inc
lret
cs
mov
lods
addr16
loop
adc
pop
sub
jns
sub
mov
sbb
test
mov
cli
xlat
dec
scas
mov
add
fsubp
scas
es
pusha
adc
notb
ja
mov
mov
ds
xchg
push
inc
loope
and
aam
sbb
xchg
adc
and
in
test
inc
icebp
cmc
or
aad
cmpsl
push
sbb
sub
adc
sbb
and
out
cmc
cs
mov
scas
inc
jl
testl
jmp
test
inc
adc
cmp
xor
pop
inc
xchg
xchg
sub
and
outsl
dec
mov
test
xchg
mov
rolb
adc
pop
and
and
repnz
or
sahf
test
push
and
adc
popa
js
ds
mov
clc
inc
cld
sbb
std
and
pushl
subb
mov
push
xor
cmc
insb
add
and
inc
aad
mov
xchg
mov
sbb
mov
xchg
mov
cs
sbb
mov
mov
add
pop
pushf
push
addr16
xchg
and
rcl
adc
xchg
int
dec
in
xor
mov
fdivp
push
shll
das
jmp
xchg
movsl
imul
mov
clc
adc
mov
mov
das
jno
sahf
sahf
inc
add
dec
cmpsb
inc
mov
xor
fstl
xchg
pop
add
adc
movsl
sub
push
insb
nop
xchg
and
aaa
pop
out
jl
jns
mov
fsts
jecxz
bound
adc
push
cmp
jns
add
or
sahf
outsl
dec
cli
push
int
test
sti
js
inc
mov
add
movsl
adc
xor
insb
pop
fnstenv
sbbb
sbb
dec
fnstcw
test
std
dec
cld
mov
inc
rclb
into
xchg
add
adc
jne
shlb
sub
ret
subb
lods
insb
lods
sbb
out
or
lahf
mov
cmp
push
add
popf
mov
jo
mov
pusha
int
inc
mov
andl
arpl
movsb
pop
dec
jne
xor
mov
lcall
pop
xor
pop
mov
xchg
pop
or
aad
subl
dec
fcmovu
cwtl
inc
repnz
mov
pushf
jmp
sbb
inc
lock
jne
dec
subb
test
gs
adc
rcrw
fstenv
mov
hlt
add
and
insb
xchg
repnz
pop
cs
fmull
imul
push
push
pop
push
xchg
daa
mov
push
or
mov
addr16
jo
mov
mov
jnp
notb
lods
cwtl
and
push
dec
xchg
pop
fcmovbe
mov
fcmovu
xchg
sbb
cltd
dec
roll
push
push
cmpsl
or
xchg
in
shl
jge
xlat
out
lock
inc
push
movsl
jno
int3
jno
gs
ljmp
mov
jno
cmp
mov
sarb
jl
add
fmull
mov
mov
cmp
pop
bnd
int3
popf
inc
jle
sbb
and
xchg
ret
mov
sub
dec
push
rcrl
mov
in
mov
jno
les
jno
dec
jl
es
int
insl
aad
jb
repnz
scas
in
dec
jo
mov
rolb
scas
int
lahf
cmpl
xchg
xor
test
test
lea
pushf
lret
gs
push
sub
jb
ja
je
int
push
or
and
popa
or
call
dec
mov
bound
pop
jl
adc
notl
inc
push
mov
add
and
add
aam
mov
into
lods
call
dec
ss
mov
icebp
push
nop
mov
outsb
lea
out
xor
dec
ss
add
gs
andl
add
dec
insl
loop
roll
in
mov
orl
push
in
roll
mov
mov
das
in
rorb
loop
mov
push
fisttps
inc
push
jmp
push
sar
push
push
and
dec
cmova
inc
sahf
cltd
mov
or
aas
pop
mov
xor
jl
push
jecxz
push
adc
ljmp
xor
repz
jmp
adc
stos
idivl
mov
push
xchg
stos
push
addr16
fnstsw
sub
lret
fimull
enter
xor
andl
aaa
pop
add
lock
pop
or
div
inc
pop
dec
popf
fsubs
push
and
sarb
stos
fmull
hlt
jb
cmpsb
or
pop
pop
and
mov
int3
dec
or
mov
std
push
xor
shlb
ror
jl
adc
sbb
lcall
inc
pop
inc
sbbl
mov
cs
xchg
and
adc
aas
repz
in
out
push
pop
lahf
nop
and
sbb
sub
push
sub
mov
add
push
in
mov
add
and
sahf
push
sub
idivl
xchg
ret
mov
jo
mov
lea
and
dec
sub
sar
inc
sub
jge
loop
add
mov
mov
mov
lcall
stc
aam
scas
mov
loope
jns
gs
das
cmp
xchg
xchg
add
and
js
cmp
sbb
test
xlat
pop
lcall
xchg
les
mov
add
ljmp
mov
xor
push
sbb
jo,pt
xchg
xor
les
jnp
or
pop
sahf
cs
and
xorl
jb
xor
mov
cltd
cmpb
fidivs
popa
stos
or
cli
jp
ret
sub
inc
jg
or
psubusb
loop
in
in
xchg
xor
mov
sub
or
movsb
pop
dec
fnstenv
int3
sbb
loop
fcompl
mov
and
mov
mov
and
cmc
shl
dec
xlat
pop
js
test
aas
sub
xor
jge
sbb
xchg
fmulp
cld
xlat
cmp
cmp
aam
mov
dec
xchg
jle
lock
lea
out
xor
pop
sbb
rorl
das
sti
and
je
cmpb
test
xor
push
repnz
stos
ss
mov
out
mov
test
mov
call
xchg
dec
sbb
lods
pop
fisubrs
or
dec
inc
pop
jp
inc
jl
lock
sbbb
sub
sbb
lods
outsb
xor
fisttps
outsb
pop
sbbl
mov
xor
dec
aam
mov
cmpsb
pop
cmc
sub
jo
or
dec
xor
mov
int3
cmp
mov
and
mov
cli
fldl
push
xchg
sti
outsl
and
xchg
rorb
jb
mov
add
mov
negb
fsubl
jae
jp
cmp
and
insb
ror
dec
mov
xor
movsl
mov
mov
jno
mov
sbb
sub
mov
adc
out
jp
or
insl
and
sqrtps
nop
cmp
and
aam
in
adc
jmp
imul
lret
mov
pop
mov
dec
das
stc
dec
andb
adc
out
test
mov
cmpsb
push
xorb
dec
push
ljmp
pop
test
dec
pop
inc
mov
fwait
sub
cmpsl
push
xchg
jmp
aas
push
ss
pop
outsl
xor
jl
test
test
fs
das
mov
dec
push
xchg
push
and
movsb
aad
lea
out
add
outsb
adc
lods
push
cld
xor
aam
cmp
jg
ljmp
sahf
and
into
mov
int
lret
fisubl
lods
lods
jb
roll
sbb
call
xchg
shll
int
sbb
sbb
xlat
xor
into
popf
cli
adc
pop
xchg
sub
add
mov
and
sub
push
mov
dec
mov
adc
and
push
cmc
and
jb
adc
jecxz
sbb
mov
adc
pop
pop
jmp
daa
rcr
xchg
aad
cmp
arpl
add
and
mov
ss
mov
pop
sub
filds
jb
xchg
dec
push
cmp
sbb
lcall
xchg
decb
les
vunpckhps
xchg
inc
cli
xchg
pop
mov
scas
in
idivl
mov
repz
cld
stc
or
inc
jnp
movsb
adc
imul
xchg
fs
stos
dec
mov
bound
movsb
xchg
mov
rcrb
sbb
fmul
pop
push
js
aas
xor
mov
data16
inc
and
mov
adc
cwtl
or
imul
fists
xchg
jo
dec
lea
nop
inc
lds
hlt
pop
and
cmpsl
mov
adc
lds
mov
andb
imul
mov
and
pop
xchg
cmc
xor
les
jecxz
imul
aad
xchg
dec
cwtl
fld1
lods
bound
mov
dec
xor
or
rclb
adc
stos
out
xchg
int3
jbe
sbb
fcomp
add
into
jae
rcr
or
ds
sbb
cltd
push
scas
push
inc
mov
xchg
push
and
dec
push
outsw
lahf
cmpsl
subb
cmpsl
pop
fidivl
call
and
ret
pop
in
ljmp
shr
pop
mov
fbstp
push
dec
or
sub
pop
xchg
fwait
sarb
adc
ljmp
pop
dec
pop
add
cmp
stos
fsubr
cmp
into
add
and
pop
rorb
adc
mov
jae
xorb
pop
push
fimull
xor
jae
mov
adc
dec
clc
test
mov
cmp
insb
sbb
sti
xor
jno
fstpl
adc
jno
mov
jb
lock
xchg
lret
lds
fimuls
pop
test
shll
cmp
add
mov
sub
jl
jne
cltd
into
fdivr
sbb
sbbl
sbb
out
mov
jbe
loope
clc
out
jl
je
pop
idivl
xlat
int
jnp
clc
push
test
mov
pop
repz
inc
jecxz
std
xchg
sbb
xchg
lods
adc
mov
ret
sbb
pop
cmp
popa
les
test
push
inc
arpl
push
int3
or
sub
mov
and
je
mov
adc
add
insb
rcl
xor
out
enter
lret
dec
mov
push
dec
repnz
mov
or
shll
push
mov
mov
pop
mov
daa
adc
add
imul
push
pop
lret
stc
push
pushf
cmpxchg
in
dec
test
adcl
inc
dec
sti
and
pushf
scas
int
test
fmul
mov
dec
cld
jge
cmc
pop
mov
adc
ret
fnsave
mov
push
cmc
ds
push
pusha
jmp
orb
push
cmp
arpl
mov
xchg
dec
jne
movsb
mov
sbb
je
or
clc
and
aam
mov
cmp
sub
bswap
daa
xchg
pop
sub
or
mov
push
les
nop
xlat
mov
push
imul
sbb
and
sbb
orb
cld
jmp
jmp
stos
std
cmp
adc
out
and
mov
outsl
shlb
lret
dec
dec
sub
or
mov
cmpl
and
mov
fiaddl
sub
push
repnz
call
fnstcw
dec
add
ds
or
xchg
sbb
ret
or
ret
daa
cmpsl
cltd
add
repnz
jnp
inc
inc
inc
mov
or
aaa
popaw
jo
stc
xor
jmp
fmuls
add
mov
mov
movb
mov
das
rcrb
adc
and
call
sti
xor
inc
sbb
outsl
jecxz
push
pop
shl
hlt
out
mov
aad
mov
testl
lock
sbbl
inc
sub
repz
xchg
inc
sub
sbb
scas
in
mov
pop
dec
insb
clc
sarl
lods
loop
iret
ss
and
jl
sti
mov
mov
insb
inc
cmpsl
fwait
imul
andl
lods
shrb
inc
xor
xor
test
or
test
lahf
into
mov
into
push
sahf
int3
mov
push
dec
jo
xchg
mov
testb
test
dec
rolb
push
adc
imul
mov
mov
push
mov
into
sub
mov
fwait
shlb
subl
adc
add
cmc
mov
pop
ss
stc
inc
aaa
scas
jb
push
insb
in
mov
add
in
or
mov
test
sahf
out
mov
scas
xchg
ja
pop
ss
outsl
mov
ljmp
xchg
mov
and
pop
popf
dec
and
dec
lods
fs
mov
pop
aam
imul
jge
es
leave
jl
mov
cld
adc
or
add
push
orb
ljmp
ret
mov
jbe
inc
and
jl
add
into
insl
and
lret
mov
inc
gs
aaa
repnz
cmp
push
adc
jns
inc
pop
scas
adc
sbbb
or
hlt
cli
test
dec
push
dec
pop
rcrl
adc
leave
dec
sbb
cld
mov
mov
or
and
daa
loop
int3
loopne
std
bswap
xchg
mov
popa
jge
clc
in
out
insl
mov
and
sub
jnp
repz
add
in
fcmovnb
pop
push
nop
mov
aad
adc
lock
sbb
dec
adc
inc
je
sub
movsl
add
jne
outsb
or
add
xor
jnp
jbe
cmpsl
out
xchg
loope
loopne
and
jl
mov
dec
lret
fiaddl
cwtl
out
gs
inc
aad
std
pop
xor
leave
mov
frstor
in
imul
fildl
je
insb
dec
or
pop
sub
and
rorb
or
clc
loop
pop
xchg
mov
xchg
rclb
inc
inc
mov
ficomps
std
dec
nop
pop
push
mov
inc
sbb
cmc
push
sub
jmp
cs
fistl
in
lret
scas
adc
sbb
xchg
insb
pop
nop
pop
mov
xor
xchg
aas
outsl
push
int
jle
shll
scas
lret
fistl
push
mov
aam
call
sahf
xchg
mov
inc
cmp
test
push
sahf
push
push
push
imul
out
sti
add
push
std
mov
sti
cltd
ja
dec
mov
push
cmp
sub
sti
int3
dec
jo
or
sub
repnz
aas
mov
mov
lret
call
fdivrp
sbb
sub
cmp
ret
pop
fcoms
fidivl
mov
movsl
lcall
mov
mov
push
rcrl
or
add
and
mov
aam
mov
scas
inc
lcall
mov
jne
cvtdq2ps
daa
ja
or
cs
sahf
into
fdivl
pop
mov
lcall
jmp
mov
sub
add
cmp
or
leave
jmp
bound
cmpxchg
jmp
ror
dec
aam
loopne
cmp
xor
add
jg
mov
cld
out
mov
call
cmpl
jp
pushf
cmc
movsl
sahf
push
fisubrs
pusha
clc
mov
sub
inc
cwtl
inc
jl
imul
pop
and
fucomi
mov
fcmovnbe
jg
jmp
adc
test
into
pop
leave
mov
mov
shrl
and
leave
es
stc
xor
xchg
and
popf
jecxz
mov
xor
xor
imul
add
mov
in
fidivrl
fdivl
add
subl
cmp
out
out
es
push
nop
and
push
push
lret
rcrl
cmpsb
enter
cmp
jmp
in
and
mov
dec
ret
mov
je
sub
push
jo
sub
aas
mov
xor
xchg
pushf
push
or
inc
jnp
sbb
out
add
mov
in
mov
adcl
ss
sbb
xlat
cmp
lds
xor
mov
int
mov
daa
jmp
jle
sbb
xchg
pop
das
dec
dec
xchg
cmp
jnp
fnstcw
sbb
adc
std
out
mov
shrb
mov
sub
lret
xor
and
decl
adc
mov
std
movsl
or
sbb
lcall
xchg
or
push
mov
roll
jecxz
bound
push
pop
in
out
push
iret
iret
sub
add
pop
xor
gs
jg
mov
cmp
xchg
or
cmp
jo
cmp
push
je
sub
mov
sbb
scas
fimuls
ja
div
push
fsub
adc
std
mov
stos
rcr
push
div
mov
jbe
push
stos
rcl
add
mov
lds
insl
cmp
push
mov
flds
fwait
sub
lcall
mov
inc
push
cmp
hlt
and
jge
daa
mov
push
xor
add
xor
mov
or
fcmovnb
xor
pop
cmp
loopne
add
jl
xchg
inc
sbb
ja
sbb
push
sbb
jecxz
fisubrs
in
pop
ja
and
je
jo
adc
jne
xcrypt-cbc
cmpsl
xchg
pop
xchg
jp
pop
push
sub
int
dec
mov
fadds
pop
hlt
hlt
lds
popf
jmp
mov
xchg
or
daa
repz
sbb
loopne
fwait
int3
pusha
sbb
and
in
pop
xchg
sbb
adc
pop
mov
pop
aad
enter
jne
fwait
xor
add
pop
fmul
add
cmp
xor
decl
xor
push
mov
push
scas
imul
outsb
add
leave
sub
insl
andb
push
lahf
inc
imul
dec
sti
imul
sti
orb
shl
icebp
push
xchg
call
cltd
sar
lods
mov
xchg
lods
in
dec
xor
cmp
jl
or
jns
call
cld
xchg
lcall
jg
aam
sbb
lea
out
jnp,pt
test
movsb
popf
cmp
inc
loope
inc
push
mov
mov
or
dec
xchg
popa
mov
mov
lahf
xchg
cli
sar
mov
lahf
dec
cmp
into
cmp
pop
xchg
jl
sub
popf
mov
cmp
dec
jo
pop
cmpsb
jo
xchg
arpl
jmp
sub
mov
dec
pushf
mov
addr16
xchg
shr
lcall
pop
fldcw
mov
scas
pushf
mov
loope
aaa
jbe
or
cmp
jp
fadd
mov
fcom
jmp
icebp
sub
adc
jp
mov
pop
ja
jl
xchg
or
mov
or
iret
jno
xchg
jge
leave
push
cmp
cmp
jp
aad
jno
push
pop
push
rorb
dec
sbb
jg
push
sbb
cld
fwait
mul
ja
in
mov
add
adc
out
inc
fwait
inc
ret
mov
push
orb
ss
aas
mov
dec
orl
lahf
cmp
xchg
lret
outsb
xor
inc
test
push
addr16
cmp
push
inc
mov
pop
orl
push
dec
lcall
cli
jae
xchg
add
iret
and
cmp
sub
mov
cmpsl
andl
repz
cmp
in
clc
shll
dec
xchg
mov
daa
or
mov
and
ds
inc
jmp
test
or
fwait
jb
inc
jno
and
aaa
jbe
add
xchg
in
sti
test
fcompl
cmp
out
xchg
push
test
sub
and
inc
scas
fst
pusha
fimull
pop
mov
inc
out
aam
xchg
adc
mov
outsl
push
stos
xchg
pushf
dec
dec
mov
repnz
or
push
outsl
inc
lods
mov
add
xchg
cmp
sub
push
adc
fidivl
dec
jne
sahf
xorb
ljmp
fsubs
hlt
cld
push
scas
and
push
or
test
sti
and
push
icebp
pop
adc
mov
sbb
cmc
insl
and
fmuls
cmpsb
sti
in
sub
movsl
mov
push
std
mov
pop
enter
xor
ror
mov
insb
outsl
pop
push
push
dec
not
lret
inc
sti
add
pop
inc
cmp
fiaddl
mov
jae
or
loop
adc
push
xchg
push
lds
jmp
xor
xchg
push
or
jbe
mov
pushf
mov
mov
arpl
or
popa
ljmp
push
jae
push
adc
imul
adc
pop
xchg
mov
frstpm(287
lahf
mov
and
sub
lcall
inc
cmp
xchg
sub
mov
adc
cmp
push
leave
pop
stos
push
dec
das
mov
push
or
aas
idiv
jl
sti
dec
sub
aaa
mov
adc
jbe
in
idivl
mov
cmp
xchg
xchg
outsb
loope
mov
test
push
and
xor
bound
pop
xchg
stc
imul
loope
mov
push
lret
neg
addr16
pop
out
addr16
scas
dec
mov
mov
adc
dec
add
sbb
sub
aas
roll
mov
aaa
adc
xor
arpl
jne
push
and
test
pop
xor
xchg
pop
scas
sub
jecxz
cmp
fnstsw
dec
push
int
fcompl
popf
ss
mov
sbb
fwait
lock
inc
pop
mov
repnz
js
sub
or
cmp
lds
hlt
add
mov
lahf
push
std
lea
das
lock
fnstsw
sbb
mov
shr
cmp
aas
and
push
shlb
dec
jge
lcall
mov
cltd
ja
jbe
xchg
arpl
cmp
dec
pop
loope
pop
imul
cmp
int3
adc
xorb
in
ret
lahf
push
xchg
and
inc
xchg
inc
js
cmp
movsl
or
jo
jnp
or
mov
add
insl
mov
orb
es
dec
jne
push
inc
insb
add
iret
push
bound
hlt
mov
mov
icebp
faddp
push
mov
xchg
test
data16
into
icebp
mov
dec
sub
std
sahf
sbb
pop
call
sub
add
push
insl
and
push
popf
jnp
push
add
pop
mov
addr16
or
jmp
addl
test
mov
test
orb
push
in
push
push
in
outsb
sbb
into
mov
aaa
add
popa
jecxz
mov
xchg
mov
and
cmpsb
enter
mov
adc
ret
sbb
bnd
sbb
addb
xlat
xor
arpl
pop
shlb
lcall
rcl
insb
leave
ja
shlb
out
sub
clc
adc
pop
and
popf
add
js
addr16
incl
sub
push
lock
shll
lds
mov
sbb
lcall
mov
cmpsl
add
rclb
or
test
inc
jp
or
int3
and
gs
cmpsl
test
loop
xchg
dec
inc
out
push
cmc
xor
add
aas
in
icebp
adc
ret
sbb
fstpt
sti
inc
pop
out
mov
scas
xchg
in
jg
mov
ret
mov
std
jno
xchg
and
int3
sub
or
test
int
xchg
cmp
ja
mov
fstps
rol
mov
ret
and
sub
push
or
adc
ljmp
cmp
mov
cmpsb
add
jl
mov
mov
in
mov
pop
dec
pop
pop
mov
and
cmp
cli
mov
jae
pop
lea
inc
scas
sbb
push
adc
mov
andw
xlat
add
sbb
xchg
sbb
cmc
mov
add
fs
insl
rcrl
mov
inc
into
cli
mov
adc
mov
stc
outsl
shrl
sbb
xor
add
mov
leave
cmp
xor
jae
mov
mov
test
xor
mov
add
ljmp
les
imul
ja
in
addl
sbb
push
fwait
xchg
push
pop
xor
mov
loopne
jp
es
ret
fnstenv
popf
push
imul
andb
ds
add
fiaddl
aad
scas
pop
dec
push
repz
dec
pop
dec
int3
dec
mov
mov
sahf
ja
les
nop
xlat
cltd
icebp
sub
mov
sbb
pop
mov
mov
test
mov
jbe
dec
test
mov
pop
insb
adc
or
iret
daa
sub
fwait
push
cs
data16
and
int
cmp
jle
cs
outsb
cmp
aam
outsb
xor
insb
mov
clc
inc
hlt
movsb
dec
ds
or
std
int3
nop
mov
pop
push
daa
adc
xorl
xor
lret
fisttps
lea
adc
adc
stos
adc
and
shl
xorb
rclb
pop
push
push
mov
xchg
inc
je
stos
pop
cmpsb
test
push
adc
lret
sahf
adc
push
cmp
jae
jns
test
and
les
pop
cli
sub
sub
lods
dec
inc
jle
jle
jle
test
js
sub
aad
cmp
xlat
xor
fdivs
sahf
mov
orb
add
imul
loopne
movsb
fs
cmp
and
adc
jb
inc
pop
repnz
daa
cld
mov
mov
inc
cli
ret
cmc
ffreep
hlt
mull
stos
out
int
dec
mov
rclb
mov
das
sahf
cmpsl
dec
imul
mov
mov
in
inc
lock
sub
add
sbb
pop
lcall
inc
test
or
leave
add
jns
cltd
or
dec
push
mov
dec
mov
sub
xor
mov
mov
sbb
pop
xor
cmc
jo
adc
sub
cmp
or
inc
loop
cmpsl
repz
adcl
subb
jl
fidivl
push
push
or
xchg
ss
je
mov
in
rorb
imul
adc
xor
mov
rclb
icebp
cmp
jae
mov
xchg
inc
mov
lods
mov
cmc
icebp
pop
or
outsb
mov
push
ss
es
inc
int
jae
lcall
add
xchg
sbb
cltd
and
adc
mov
cmc
inc
fmuls
sbb
fnstsw
iret
jge
cli
sub
push
imul
sbb
sub
or
loop
sub
cmp
aad
cmp
inc
cmp
mov
push
filds
pop
rcl
add
or
sbb
popf
icebp
push
addl
jg
or
push
sub
fwait
push
jmp
mov
pop
scas
xor
inc
roll
dec
test
add
or
outsb
es
sbbb
jo
ja
inc
movsl
loopne
pop
outsb
loop
xor
push
int
ret
mov
mov
sub
jns
cwtl
mov
ja
aaa
das
push
sub
int3
sub
pop
mov
pop
push
adc
sahf
fsts
or
ljmp
testb
sbb
pop
scas
adc
cmpsb
test
bound
push
and
and
mov
leave
cltd
leave
cwtl
mov
xchg
mov
loop
jns
pop
push
add
cmp
pop
out
ret
add
jp
and
sbb
mov
xchg
mov
test
lock
dec
insb
jae
inc
into
insb
pop
in
movsl
sbb
sahf
repz
fldcw
xchg
aam
pushf
dec
aad
aad
scas
jmp
repz
xchg
inc
pop
test
movsb
push
nop
mov
jge
sbb
xchg
xor
addb
cmp
adc
inc
imul
or
insl
insl
addr16
cmp
pop
and
jp
mov
fistps
enter
mov
test
mov
cmc
dec
xor
mov
in
sarb
pop
imul
inc
aaa
jns
sub
lods
outsb
add
and
mov
sbb
xor
jmp
inc
adc
adcb
mov
pop
dec
outsb
or
pop
loope
mov
cwtl
and
adc
xchg
xor
insb
shrb
movsl
nop
lea
xchg
jnp
mov
ds
lcall
and
inc
lahf
push
jb
ljmp
mov
mov
sbb
pop
scas
dec
lcall
lods
ficompl
xchg
leave
sub
push
pop
inc
add
push
ja
dec
sub
jge
scas
aas
xchg
fcomip
inc
mov
mov
dec
xchg
arpl
test
sub
adc
mov
nop
jns
mov
add
test
add
sti
cld
mov
xchg
dec
insb
fmul
out
out
fstpl
cli
sti
out
adc
or
test
mov
dec
lcall
or
cmp
ret
cmp
or
jnp
adc
ret
out
mov
mov
aas
test
clc
xchg
icebp
aam
into
aad
inc
outsl
ret
cmpsb
pop
cmp
vphaddwq
imul
outsl
cmp
dec
es
pop
add
push
add
pop
cli
scas
mov
sbb
xchg
mov
call
enter
mov
fiadds
jns
sub
cmp
pop
inc
loopne
loopne
mov
lahf
ljmp
xchg
mov
jp
xchg
cmpsb
adcl
cmp
leave
clc
shll
sbb
rcrl
pop
loop
fildll
clc
or
ja
pop
mov
cmp
lds
jne
pop
xor
or
inc
add
mov
pop
add
dec
mov
push
or
nop
xchg
pop
cld
xchg
mov
and
jno
sti
pop
subl
push
aaa
rcrl
jnp
lock
aas
jne
stos
and
insb
cmp
cmpsb
stos
push
subl
cmpsb
call
repz
insb
cmp
dec
add
insb
fnstenv
loope
in
ffreep
add
xor
hlt
mov
mov
pusha
mov
loop
mov
and
lea
mov
or
inc
jg
xchg
inc
pop
mov
cmp
das
and
jns
mov
outsl
add
xor
xor
rcll
pop
out
lret
mov
xchg
nop
lods
add
adc
jmp
fidivs
mov
cmc
mov
inc
add
sar
iret
xorl
out
sbb
loopne
mov
out
aaa
sub
ret
test
pop
add
cltd
lahf
mov
jne
jle
lret
shl
shlb
dec
ss
xabort
cltd
jle
mov
push
shl
repz
popa
popf
jle
add
in
lcall
aam
fnstsw
jecxz
mov
into
shl
cmc
xchg
mov
mov
cli
aad
jmp
hlt
push
fcmovnb
mov
fiaddl
inc
insb
lods
add
add
andl
xchg
pushf
mov
mov
xor
cmp
inc
jns
mov
push
xchg
addb
lret
aas
pop
jecxz
add
pop
jo
mov
lock
push
aam
jo
hlt
sbb
push
ds
xchg
cmp
into
cld
cmc
repz
lahf
out
fadds
cld
cmp
mov
ficompl
push
hlt
in
xlat
fdiv
adc
lahf
xchg
es
aam
or
adc
xchg
nop
insl
or
pushf
out
mov
inc
xor
adc
sbb
pushf
pushf
stos
or
jno
or
dec
fs
push
and
push
cmp
movsl
adc
sarl
hlt
sbb
pop
repnz
into
fwait
adc
je
test
int3
add
add
incl
push
push
mov
mov
xchg
and
push
lea
das
lahf
jns
push
cld
pop
out
ret
in
xchg
movsl
cmpsb
fsubr
xchg
and
mov
movsb
sahf
cmp
mov
inc
pop
pop
pop
and
jno
and
lods
dec
outsl
or
inc
idivb
out
jae
push
jbe
jae
push
jo
or
push
xor
lahf
sbb
popa
int3
popa
stos
aam
xchg
in
outsl
push
fadds
xor
add
mov
and
aad
lds
or
sbb
jae
or
pop
js
out
adc
stc
adc
aad
jmp
daa
movsb
jecxz
jne
fsubl
dec
mov
movsl
mov
adc
xor
aam
dec
sub
icebp
fimull
add
aaa
and
popa
add
mov
mov
jnp
and
cmp
jg
mov
sarl
pop
lock
js
mov
leave
xor
mov
push
or
insb
xor
sub
test
pop
std
jmp
mov
out
test
outsl
dec
loopne
mov
add
fucomip
fnsave
pop
cmp
test
push
loopne
mov
cli
lret
fldt
aam
fiadds
je
jp
jg
subb
lea
and
aas
int
add
ret
jecxz
mov
sarl
push
push
xchg
popa
pop
or
int3
dec
fsubrs
jp
mov
pop
outsb
adc
in
and
mov
je
xchg
push
adc
out
jb
add
lahf
mov
leave
js
ret
add
ret
addr16
lods
sti
lret
insb
xchg
sub
push
call
xor
imul
test
in
fs
cmpsl
inc
sub
sbb
jno
jbe
cmc
push
mov
push
pop
mov
fstl
inc
mov
xor
jnp
stos
mov
sbb
and
dec
imul
mov
cmp
add
inc
fs
add
jg
mov
out
jg
arpl
jle
test
cmp
jmp
push
inc
sbb
mov
ja
fcomip
call
stos
mov
test
cld
mov
mov
pop
cmp
jb
lds
out
lods
pop
sub
push
xchg
jg
and
pop
lds
xchg
adc
sbb
data16
iret
xchg
stos
mov
or
mov
sbb
xor
inc
fcmovnu
adc
push
push
xchg
movb
fs
mov
shl
test
jo
jne
mov
icebp
jnp
repz
repnz
test
test
and
iret
cmpsb
ljmp
cmpb
subl
rcrl
ficomps
mov
je
sub
das
pop
jae
or
fimull
sbb
pop
dec
decl
dec
je
pop
cmp
inc
mov
enter
aaa
and
lret
nop
adc
andl
sbb
jl
les
and
insb
dec
adc
outsl
jmp
sub
adc
mull
test
sub
sti
adcl
daa
push
cwtl
pop
fdivl
sub
andl
bound
les
pop
xchg
rorb
mov
adc
scas
or
pop
in
lcall
or
and
cmp
cmpl
test
push
mov
cmp
rorb
xorb
and
sbb
out
repz
ds
sub
xchg
shll
lds
popf
sbb
adc
outsl
addr16
sub
out
dec
add
test
out
adc
lret
jge
sbb
mov
sti
cwtl
add
push
add
imulb
adc
jg
mov
aaa
popa
stc
mov
cli
and
cmp
or
mov
lret
push
xor
jno
cmp
jbe
mov
xchg
imul
mov
dec
push
insl
addr16
mov
mov
pop
mov
scas
adc
push
pop
mov
sub
lcall
cmp
push
jno
ljmp
ret
inc
pop
sub
cs
cmpb
or
ja
or
lods
add
imul
loope
lahf
pop
push
fcmovu
mov
mov
xor
hlt
jae
add
inc
push
daa
je
adc
orb
fsubrl
rcrl
jnp
movsl
push
jae
xchg
aad
mov
xchg
xor
mov
lret
xor
xor
mov
pop
jb
scas
mov
xor
mov
push
cwtl
repz
push
in
mov
sbb
mov
orl
xlat
sub
popa
or
push
inc
xchg
add
shr
sbb
cs
inc
or
lock
or
cmp
add
mov
fdivrs
adc
into
adc
bound
and
lahf
xchg
dec
dec
pop
fstpt
pusha
and
cmp
fndisi(8087
je
cmp
aad
movsb
enter
pop
push
push
mov
lods
xchg
imul
mov
cs
aas
js
adc
das
dec
mov
pop
ret
in
cmp
sbb
pop
cmp
jp
jp
mov
push
and
push
adcl
daa
scas
cmp
xchg
and
cmp
ret
and
shlb
fadd
adc
pop
pop
in
repz
ror
dec
push
and
repz
adc
dec
ficompl
js
in
mov
pop
sbb
add
daa
mov
arpl
fiadds
add
dec
cld
xor
cmp
stos
inc
stos
push
sar
add
fs
cmc
repz
hlt
roll
or
icebp
inc
pop
js
pusha
in
cmp
jns
xchg
jne
sub
add
nop
mov
pop
out
pushf
sub
insl
mov
leave
jo
ret
clc
jle
aam
or
adc
fcoml
cld
cmpb
sub
stos
je
xor
mov
mov
and
push
or
fdivrs
das
inc
inc
mov
lahf
cmpl
mov
mov
out
push
adc
sbb
jecxz
inc
jae
cld
fidivrs
cmp
inc
dec
adc
arpl
ret
mov
xchg
dec
dec
push
cmc
jg
cltd
push
rol
mov
or
test
out
stos
sub
pop
test
dec
in
movsl
adc
pop
jb
lret
js
and
arpl
popa
repz
cltd
push
mov
aam
fdivl
sbb
push
lcall
notl
fnstcw
add
cmp
pusha
cmp
adc
add
cmp
xor
andb
scas
call
clc
pop
hlt
fiadds
shrb
das
xor
outsb
stc
lahf
sbb
fwait
mov
lods
inc
aaa
xor
icebp
stos
xor
cmp
xchg
scas
out
xor
cmp
xchg
fsubrl
aam
sub
push
inc
cmpsb
fidivrl
stos
fnsave
sti
xor
int3
push
es
imul
adc
cmp
lods
aas
loop
cmp
jg
jle
lea
mov
cmc
out
push
push
ret
scas
loope
cmp
cli
mov
sbbb
xor
imul
cld
push
sbb
data16
adc
inc
lcall
sub
out
xchg
cmp
aam
push
cmc
stc
and
sti
arpl
mov
jno
lea
bound
cltd
outsl
push
cmpsl
mov
jl
outsb
inc
je
jnp
jg
mov
out
int
push
mov
inc
dec
mov
mov
not
jl
arpl
jae
mov
insb
dec
xlat
pop
mov
scas
xor
arpl
sbbl
ds
dec
jb
dec
push
testb
jp
sbbl
lret
std
adc
test
scas
rcrb
xchg
movsl
fldt
shl
lds
ret
outsb
imul
fcoml
mov
cli
inc
mov
push
cmp
lods
and
pop
inc
and
xor
fisttpl
int3
inc
pop
xchg
popa
js
mov
int3
push
push
pop
xor
push
adc
push
push
push
dec
cmpl
inc
or
pop
mov
ds
xchg
cltd
int
mov
pop
or
sbb
xchg
cmp
jbe
fbstp
in
push
fsubl
jle
xchg
xchg
inc
movsb
ffree
outsb
adc
pop
sbb
je
add
test
stc
sbb
ss
jge
cwtl
xchg
sub
leave
sub
es
cmp
mov
mov
or
sbb
or
mov
outsb
xchg
mul
add
sub
lahf
cmpsl
rol
dec
clc
sub
inc
outsb
lcall
leave
fsubs
xchg
jns
cmpsl
in
mov
dec
adc
xor
leave
or
jecxz
cmp
leave
mov
in
pushf
and
lcall
adc
dec
clc
daa
xor
and
in
xchg
jae
mov
mov
inc
add
cmp
adc
shrl
mov
imul
clc
out
in
ror
outsl
xor
push
pop
arpl
add
enter
adc
cmp
int3
lret
mov
aam
pushf
or
js
mov
mov
ja
xor
add
or
repnz
repz
sub
enter
inc
xor
enter
mov
orl
mov
sbb
out
aas
aas
insl
cmp
popa
fmuls
or
jge
mov
nop
pop
mov
hlt
push
or
xchg
lods
dec
mov
inc
in
adc
cmpl
lahf
or
ljmp
xchg
lods
loop
xor
mov
dec
mov
lock
fs
lcall
pop
test
xchg
int
pop
dec
cli
jmp
aaa
push
push
cmp
lods
bound
shll
addr16
jge
xchg
dec
push
mov
or
jmp
fstpt
mov
out
into
jl
idivb
push
and
out
push
mov
pusha
dec
pop
push
shrb
xor
push
jae
dec
mov
mov
push
pushf
mov
xlat
mov
sub
push
xor
adc
scas
xor
pop
xor
xchg
fldt
pushf
xchg
ds
pop
dec
sbb
int3
mov
add
sbb
adcl
push
lea
xor
es
or
sub
rcrl
mov
stc
cmp
sub
hlt
loop
sbb
mov
sbb
mov
fmull
hlt
out
and
pop
in
jno
sbb
cld
pop
fstps
mov
cmp
call
lret
js
stc
movsb
push
ljmp
mov
stos
sbb
xchg
les
push
add
ret
mov
xor
xchg
repnz
push
jle
mov
nop
and
cld
js
jecxz
jno
and
add
pop
and
pop
lea
shll
rcll
wrmsr
mov
adc
lods
stos
lock
fwait
xor
ss
mov
jo
repnz
out
inc
xchg
add
gs
cmp
aam
sbb
jns
adc
insb
mov
mul
scas
mov
and
pop
push
repz
mov
xor
xchg
sahf
int
ds
lret
or
lcall
pop
pop
popa
sbb
pop
adc
push
adc
inc
test
les
scas
cmp
inc
fwait
adc
sbb
sub
rol
mov
pop
lahf
lods
mov
icebp
and
pop
lahf
es
aam
mov
cwtl
jno
sub
push
push
push
cmp
and
mov
cmp
cmp
imul
nop
jae
sti
xor
mov
jne
mov
mov
and
shlb
mov
js
scas
imul
jmp
mov
xchg
adc
ds
movb
outsb
fdivrl
mov
adc
lock
scas
in
sbb
jno
sub
xchg
jno
popa
das
mov
dec
pushf
popa
or
icebp
jne
cwtl
push
stc
or
sti
xchg
adcb
sbb
add
mov
mov
sti
loopne
xor
aaa
jp
arpl
test
xchg
adc
push
sahf
cmpsl
fistpll
inc
mov
mov
ljmp
xor
scas
ja
in
icebp
fmull
adc
jmp
mov
cs
sub
ficoms
add
sub
mov
mov
sti
cmp
shrb
fcomps
cmp
jge
in
sbb
ja
test
push
testl
xchg
mov
ja
icebp
inc
ds
push
push
sub
fimuls
sti
xor
cmp
mov
xchg
icebp
pop
mov
mov
in
dec
cld
and
dec
lods
lds
js
cwtl
push
xchg
enter
je
xchg
jb
shlb
test
add
dec
adc
dec
or
cmp
sub
dec
or
icebp
add
push
push
pop
add
mov
jbe
call
jmp
pop
sbb
out
pushf
add
fcomip
sti
mov
push
scas
xchg
adcb
ljmp
adc
les
jbe
test
lock
push
push
push
cmc
clc
xchg
movsl
xor
pop
mov
sbb
jo
mov
dec
inc
cmp
fwait
mov
xor
xor
fiaddl
fcompl
jg
push
inc
pop
cmp
mov
sub
cmp
cmp
and
xlat
popf
pop
fdivrs
insb
mov
in
clc
pushl
add
scas
addr16
push
stos
add
cmpsl
loop
add
mov
adcb
mov
cmp
jbe
sti
fs
pop
mov
mov
sub
mov
aas
iret
jle
mov
cmp
iret
xchg
mov
gs
aad
cmc
sub
popf
mov
in
insb
push
mov
xchg
adc
jg
cmp
lods
jo
shl
inc
mov
mov
and
jle
jecxz
and
fs
aaa
fidivrs
int3
inc
aaa
or
cli
mov
push
mov
xor
mov
or
add
imul
adcb
dec
xor
test
lret
xchg
sbb
ret
jb
cmpsl
adc
fimuls
inc
scas
js
mov
inc
fmuls
adc
and
mov
popa
sahf
or
xchg
into
enter
dec
pop
rcr
or
mov
leave
data16
testb
aaa
mov
pop
cmpsb
lcall
mov
add
adcl
out
shl
lock
scas
out
xchg
cs
in
rcrb
les
enter
aaa
mov
xchg
sbb
sbbb
dec
adc
push
xchg
cmp
pop
hlt
pop
test
adc
test
stc
xor
fbld
push
fistl
dec
adc
adcb
inc
mov
test
out
cmpsb
into
cmp
mov
add
or
movsl
nop
stos
sub
and
mov
cmc
cmpl
orl
push
repnz
adc
mov
hlt
out
sub
dec
sub
inc
inc
pop
dec
mov
or
aam
jle
pop
call
cmp
dec
mov
repz
aad
lcall
enter
lahf
sti
dec
sbb
cmpsb
or
mov
fisubl
push
int
out
pusha
push
nop
fucomp
inc
or
mov
jns
leave
inc
dec
and
mov
leave
xor
mov
dec
aam
push
jle
aam
xchg
pop
lods
fcoms
ret
roll
outsb
bound
inc
int3
mov
adc
mov
shrl
mov
fwait
jbe
push
es
pop
aad
dec
sahf
dec
cmp
std
jg
pop
sbb
push
sbbl
sub
add
cltd
out
out
shl
in
adc
imul
xchg
xchg
in
cld
xlat
insb
cmp
imul
gs
xchg
loope
pop
les
das
sbb
in
fisubs
aam
and
xchg
call
fisubs
xchg
xor
mov
test
std
or
hlt
xchg
call
adc
stc
enter
les
out
jmp
ret
lcall
lret
mov
repnz
or
inc
push
jb
xlat
mov
mov
and
lock
push
test
test
xchg
mov
mov
addr16
stos
jle
mov
cmc
outsb
test
mov
iret
mov
pushf
jle
lret
push
jo
dec
mov
addr16
mov
jno
sbb
push
jl
ret
fcompl
dec
xchg
lods
fisubrl
adc
bound
out
mov
lock
dec
popa
xor
cmp
icebp
aam
lahf
cli
jae
mov
in
fsub
jmp
jge
add
movsb
push
jbe
push
in
add
sub
outsb
jne
mov
lock
aas
and
or
mov
call
inc
lds
popf
jbe
or
popl
inc
cmp
cs
mov
add
dec
pop
add
lahf
jnp
mov
mov
add
aad
jbe
add
sti
adc
test
mov
xchg
mov
insl
fwait
pop
push
fsubs
push
fwait
movsl
test
cmp
mov
inc
jge
out
or
ret
icebp
imul
popa
subl
adc
jb
es
add
lods
adc
sbb
int3
popa
faddl
xchg
fs
lods
jns
inc
jnp
out
cmc
fildll
daa
xor
add
roll
enter
jle
sti
mov
pop
andl
xlat
ja
cli
mov
push
push
push
sub
test
push
ds
mov
jl
pop
out
aaa
ret
iret
repz
loope
ss
aas
mov
sbb
cmpsb
in
fs
out
out
and
inc
dec
adc
pop
test
push
nop
fs
dec
rcrl
cmp
call
mov
hlt
test
out
cwtl
sbb
in
mov
xchg
lcall
sbb
inc
dec
ss
sbb
push
jle
cs
movsb
test
mov
aas
daa
xor
xchg
mov
inc
call
push
lods
xchg
cmp
xchg
jno
pop
mov
sbb
pop
in
sbb
pop
push
adc
mov
and
and
enter
lock
jle
push
loopne
test
inc
icebp
xchg
pusha
mov
and
push
add
jae
inc
mov
cs
push
bswap
add
mov
pop
fisubl
or
ljmp
mov
dec
movsl
xchg
aas
sbb
loope
xchg
cmc
popl
xchg
popa
cmp
push
aas
push
js,pn
xchg
mov
in
enter
jns
arpl
sub
imul
je
or
in
push
loop
mov
push
cltd
repz
fildll
nop
xor
mov
add
cmpsb
jmp
jne
je
test
stos
xor
or
int3
pop
lcall
xchg
in
icebp
lret
sub
jmp
out
adc
push
rolb
repz
cmp
insl
inc
xor
movsb
daa
adc
inc
scas
repz
xor
bound
mov
push
ret
lods
sahf
scas
push
or
out
pop
adc
call
cmp
test
into
outsb
dec
out
pop
testl
mov
dec
lea
inc
inc
cld
jbe
orb
hlt
aad
leave
imul
inc
test
jno
adc
sbb
mov
daa
cs
cmp
cmp
lods
jg
push
shlb
xchg
pop
sub
inc
cmp
lahf
add
mov
arpl
imul
mov
loope
pop
aad
leave
pop
xor
add
push
mov
xor
adc
mov
repnz
push
cmovg
sub
pop
mov
test
int3
into
mov
mov
decl
js
xchg
fisubs
fcmovu
mov
push
xchg
xchg
idivl
fadds
mov
ja
inc
sbb
test
scas
push
sbb
test
or
sbb
stc
leave
gs
loope
dec
sub
and
sub
inc
mov
cmp
shrb
imul
mov
pop
dec
lret
xchg
prefetch
sub
jmp
xchg
std
sbb
fdivrs
cmp
sub
inc
push
dec
ljmp
rcr
push
fwait
call
mov
adc
adc
lret
nop
fwait
ret
mull
cmp
clc
mov
sbb
in
pop
or
int
lods
push
bound
cltd
loop
mov
into
cmc
fs
sbb
adcb
iret
faddl
jmp
sarw
mov
out
dec
repz
hlt
mov
test
pop
pusha
mov
clc
scas
les
inc
ds
mov
das
nop
mov
cmp
ljmp
repnz
loopne
add
xchg
dec
and
push
bound
cli
push
lds
and
aas
ret
loopnew,pn
pop
aad
addr16
xor
pusha
sbb
pop
push
inc
bound
add
sub
sub
or
or
xor
add
sub
dec
sbb
das
push
movsb
enter
aaa
lods
jge
test
fcoml
xor
adc
mov
xor
sbb
push
push
inc
xchg
xchg
sub
inc
sbb
sub
cmp
sub
mov
adc
repz
jno
adc
outsb
push
cmc
mov
sbb
adc
pusha
es
mov
in
loopne
inc
aam
aad
mov
or
ror
aad
hlt
ss
pusha
adc
cmove
add
mov
aam
ret
cs
push
xchg
loop
data16
mov
bound
mov
xchg
xchg
rep
cvttps2pi
or
fcompl
dec
xchg
iret
stos
shrl
jge
sub
push
jl
sub
sahf
xor
popf
rorb
or
stos
sbb
in
clc
xorb
loop
dec
mov
iret
xchg
xchg
or
lods
jae
xchg
mov
out
shl
rolb
movb
pop
push
add
call
adc
pop
test
jg
jge
xchg
push
arpl
insl
cmp
inc
test
neg
xor
mov
mov
vpshuflw
jbe
mov
shrb
testb
dec
inc
shlb
and
in
sub
mov
push
jnp
push
mov
enter
rcr
repz
adc
sub
jae
cwtl
ret
sub
rorl
xlat
sub
fcoms
sbb
sbb
add
mov
cmpsl
test
sbb
pushf
out
sbb
dec
pop
inc
imul
outsl
lret
cmp
lahf
and
shrb
outsb
lods
lret
out
inc
insb
sub
cli
negl
and
rolb
push
xchg
or
das
mov
mov
popf
xlat
out
lods
outsl
notrack
mov
in
xor
stos
iret
jno
mov
out
push
cmpsl
lods
imul
clc
sbb
add
flds
adc
cmpsb
call
pop
test
cmp
rcl
fstpt
push
push
or
aaa
loop
adc
add
mov
mov
faddp
jno
pop
sbb
xchg
sbb
mov
adcb
aas
mov
jo
mov
data16
repz
or
mov
xchg
pop
stos
pusha
add
lret
jmp
mov
jge
sub
sar
mov
xchg
xor
mov
fadd
lret
test
mov
test
in
sarb
cmpsb
xor
loopne
fnstsw
or
pushl
push
icebp
mov
or
or
push
cltd
aas
pop
fiadds
test
mov
mov
adc
sbb
cmp
sub
aaa
jge
in
adc
test
loopne
sbb
cltd
add
jo
daa
cmc
or
sbb
push
or
sbb
mov
dec
aad
or
adc
jmp
cmp
loopne
jnp
insl
inc
loope
or
add
cld
push
lods
int
gs
loopne
fidivs
shl
cmp
stos
addr16
clc
std
push
int3
pop
mov
push
xchg
pop
loope
push
and
loope
fldcw
int
jae
sbb
fmull
mov
mov
mov
mov
adc
lret
xlat
or
sbb
arpl
dec
adc
test
mov
add
add
fcmovnb
adcl
dec
pop
and
imul
shlb
inc
fcoms
test
loope
xor
aas
adc
xchg
and
mov
insb
pop
ret
mov
dec
cmp
sti
mov
push
inc
and
fisubrl
jp
jmp
scas
push
pop
cmp
cld
sbb
sarb
fcmovnb
hlt
pusha
icebp
sbb
jmp
mov
out
out
mov
outsb
icebp
mov
subl
push
cmp
mov
rsqrtps
leave
xor
sbb
mov
jmp
ja
fs
mov
rorb
je
int
cmp
testb
xor
mov
movl
mov
inc
cmp
scas
cmp
xor
mov
out
mov
lcall
lret
adc
out
and
or
cmpsl
dec
fst
shll
cmp
loopne
out
mov
mov
mov
mov
jmp
adc
inc
cmp
jl
push
push
mov
ljmp
int3
popf
mov
test
inc
jo
or
scas
adc
sub
cltd
pop
out
jne
outsl
pop
lret
roll
mov
jp
or
imul
xchg
fstpl
test
stc
or
loope
decl
decl
test
cltd
movsb
test
call
testb
push
push
mov
arpl
or
mov
cltd
jle
add
outsl
or
movsl
lock
cmc
sbb
int
shr
inc
sub
scas
xchg
das
mov
pop
jmp
rcll
popa
xchg
aad
sub
in
cwtl
js
or
imul
sub
test
lret
and
or
adcb
outsl
fcoml
mov
or
inc
push
call
fadds
sbb
stos
out
xor
mov
inc
pop
cld
mov
push
out
and
stc
push
lods
mov
pop
leave
dec
sarl
arpl
cmp
test
hlt
aam
push
pop
sub
subl
outsb
dec
dec
xchg
xchg
es
mov
and
into
and
enter
orl
clc
mov
lahf
push
sub
repz
sub
pop
les
mov
add
xor
outsl
or
xchg
inc
and
test
ja
mov
jle
orb
fidivs
int3
movsl
out
xlat
jg
jns
je
adc
sub
pop
shl
aam
fmull
cmp
xor
pop
lea
xor
es
stc
push
xchg
test
pop
mov
jg
inc
jbe
sub
xor
jp
fstps
inc
lret
fdivr
push
int3
jb
idivl
stos
add
pop
and
push
gs
mov
or
addr16
cli
repnz
sbb
push
in
inc
inc
test
add
js
insl
dec
mov
notl
push
loope
mov
inc
cmpsb
mov
dec
xor
inc
js
xchg
insb
aas
dec
rorb
outsb
repnz
fcmovnb
imul
pop
cltd
sbb
inc
push
pop
pop
adc
push
sti
pop
adc
and
gs
sbb
bound
aaa
sub
arpl
fs
mov
fsubs
jl
xchg
ret
or
ds
and
jg
pop
xchg
jbe
push
add
movsb
jne
xchg
lock
bound
add
sub
xchg
pop
mov
and
push
rol
fadds
or
enter
decb
or
push
insb
scas
popa
xchg
sarl
cs
push
fwait
mov
ret
and
xchg
mov
popf
and
bound
call
sbb
mov
inc
dec
in
sub
mov
scas
test
xor
shrb
fidivs
popa
jns
xchg
xor
rorl
out
scas
cmp
xchg
aad
imul
adc
ss
ret
inc
mov
mov
add
cmp
int3
xchg
fsubl
xchg
addr16
adc
mov
lods
roll
fs
dec
dec
pop
mov
push
ret
repnz
xchg
pop
in
xchg
jnp
xor
jo
in
into
shll
je
stos
push
sub
mov
divl
stos
cli
insl
lea
js
dec
sub
mov
add
out
cmpsl
sub
in
or
cmc
pop
aam
add
in
jb
push
lods
loope
rcrb
xchg
movnti
in
cmp
pop
push
jecxz
cmc
and
push
and
cmp
sub
insl
daa
fstl
xor
sub
stos
cmovl
cli
dec
lods
inc
xchg
and
and
insl
cld
scas
gs
mov
mov
fwait
dec
arpl
lahf
push
mov
ljmp
mov
mov
mov
cmpsl
xchg
mov
insl
sbb
pop
test
push
sub
jecxz
aad
adc
jle
pop
cs
jbe
add
insb
push
jp
jbe
mov
mov
jg
mov
jns
dec
pop
fsubrs
loopne
into
add
xor
mov
cwtl
mov
popf
mov
aam
adc
aas
orl
jo
scas
add
mov
mov
inc
enter
orl
hlt
mov
mov
xor
pop
ds
mov
xor
cmpsl
jbe
es
sbb
imul
inc
adc
fmull
cs
pop
call
xchg
cld
imul
xchg
xchg
fwait
inc
rcrb
lret
scas
add
mov
out
mov
lcall
sbb
cwtl
addl
xchg
push
mov
and
jae
adc
mov
cmpsl
push
sbb
or
lret
lcall
test
push
pop
or
sub
mov
xchg
fwait
arpl
xchg
mov
test
mov
mov
fwait
cmpsl
pop
mov
dec
pushl
out
mov
jbe
idivl
les
daa
adc
ljmp
ss
pop
xorb
mov
mov
ja
arpl
int3
sub
adc
pop
add
sahf
in
push
lahf
ret
nop
in
imul
stos
loope
imul
test
sahf
mov
mov
dec
stos
ss
ret
xor
addr16
addr16
je
adc
xor
dec
inc
lods
iret
jnp
jp
pop
mov
mov
ficoml
andb
ficompl
sahf
dec
adcl
pusha
dec
enter
and
cmpsl
js
ja
gs
mov
mov
test
fidivl
sti
addr16
int3
jl
sbb
arpl
clc
sub
jb
orb
xlat
mov
daa
sbb
pop
cltd
cs
bound
std
js
loopne
jg
xor
cmp
inc
les
jecxz
jne
dec
mov
push
imul
mov
pop
sti
sbb
xor
inc
jmp
sub
xchg
xorb
outsb
jmp
cmpsl
or
dec
and
cmp
stc
test
sarl
mov
insl
jg
out
stc
scas
and
push
xchg
clc
mov
inc
xor
lock
dec
mov
xchg
inc
outsl
outsl
push
lock
mov
shlb
ret
int
mov
jl
pop
mov
sub
fwait
xchg
dec
mov
rcrb
adc
in
pop
push
xchg
test
xor
mov
imul
push
out
and
stc
mov
inc
scas
test
pop
dec
adc
nop
test
sbb
shrl
sub
js
mov
fidivs
mov
cwtl
movsl
or
fsub
cmp
xchg
cmp
inc
ret
and
enter
adc
mov
adc
into
sbb
push
les
andl
pop
call
xor
push
dec
imul
orl
fmul
mov
push
aaa
xlat
ljmp
popf
jp
cmpsb
aad
mov
lret
jns
cmp
inc
sub
mov
repz
mov
fcom
xor
dec
ret
push
cmp
iret
push
popa
std
ljmp
sub
mov
in
xchg
aaa
out
mov
push
std
push
push
sub
xor
add
sbb
out
add
push
in
adc
movsb
leave
fcoms
jb
mov
les
ret
add
jbe
aad
scas
dec
paddsw
repnz
mov
inc
sub
fsubs
popf
and
loope
filds
pop
dec
push
add
mov
mov
stos
dec
pop
mov
mov
lcall
adcb
ret
sub
inc
push
or
sbb
inc
mov
frstor
xor
sarl
ret
cltd
insl
nop
clc
rolb
mov
xor
mov
inc
inc
jmp
xchg
outsb
sub
rcll
mov
jp
push
pop
mov
sbb
pop
mov
stos
cltd
mov
shll
insb
add
enter
fcomp
mov
xchg
cmpsl
adc
fisubl
mov
sbb
fbstp
and
roll
mov
imul
add
dec
jno
pop
out
push
imul
pushf
and
mov
stc
cmpsb
lods
lods
in
mov
pop
adc
xor
push
sti
pop
xchg
add
pop
shll
mov
lret
adcl
mov
jecxz
push
sbb
push
mov
mov
dec
xor
ret
xchg
jl
jle
and
hlt
mov
mov
shlb
repz
mov
aam
mov
fimull
sbb
push
xchg
push
out
mov
mov
xchg
or
in
mov
cltd
out
mov
repz
push
ljmp
xor
push
pop
and
jmp
out
cwtl
lock
insl
add
ljmp
jne
mov
in
popa
insl
ret
and
repz
mov
cmpsl
inc
mov
jo
into
cmp
cld
cmpsl
mov
cmpl
sti
fs
jns
daa
mov
jmp
insl
ja
pop
test
lods
int3
stos
cltd
xor
mov
out
es
mov
sbb
xchg
shr
stos
lods
mov
mov
and
cmp
ret
fistpl
sbb
inc
imul
gs
cwtl
push
add
mov
mov
popa
scas
fiadds
fldenv
jae
ds
fwait
jae
mov
mov
stc
cmpsl
mov
pushf
scas
cmp
push
mov
rolb
push
push
in
sbb
jne
aaa
enter
inc
pusha
daa
cltd
add
arpl
mov
aam
rcll
data16
xor
adc
sub
out
mov
aas
das
push
lea
jb
mov
insb
ljmp
imul
xor
xchg
repz
aam
push
xchg
popa
jo
int
cld
xchg
push
mov
ja
jecxz
sub
das
push
add
ffreep
push
iret
shll
sub
xchg
cmp
pusha
sbb
jecxz
mov
daa
sbb
icebp
or
scas
or
notl
sbb
jl
pusha
sub
rorb
movsb
fld
jp
rolb
aaa
pop
scas
cmp
call
xor
push
scas
mov
xchg
add
out
add
sub
cld
jg
loopnew
out
cmp
mov
jp
pop
in
hlt
loop
call
in
rep
test
rorl
jnp
mov
jl
mov
hlt
movsl
sbb
data16
inc
sub
pop
lahf
clc
pop
in
and
mov
push
sbb
sub
xchg
push
inc
test
pop
popf
scas
scas
sub
mov
adc
ret
bound
out
fs
adc
insl
pop
insl
push
cmp
add
or
dec
and
int
lret
daa
icebp
in
mov
or
iret
dec
out
push
insl
mov
stc
ljmp
js
dec
xchg
out
add
shlb
pop
movsl
adc
push
add
test
xchg
xor
mov
cmpb
jo
sbb
lods
adc
and
push
inc
xchg
daa
cmp
mov
mov
lock
fwait
mov
or
popa
cmc
mov
lret
hlt
lret
lret
jle
and
lret
sbb
mov
cmpsl
dec
ss
dec
xor
js
aad
mov
shlb
add
stos
aad
cmp
imul
push
jge
in
repnz
shrb
sub
repnz
adcb
cmp
jmp
repz
mov
sub
xor
stc
out
aaa
adc
into
xchg
jp
divl
dec
push
xor
and
in
std
inc
dec
add
cmc
test
sub
add
sar
orb
pushf
mov
out
ret
test
jo
les
lock
jns
pop
enter
push
xchg
mov
outsb
mov
sbb
bound
xchg
push
nop
stc
loopne
mov
sahf
pop
xlat
jp
xchg
mov
and
dec
cli
mov
daa
add
push
mov
mov
add
xchg
pop
popa
in
add
dec
lock
fidivs
or
dec
inc
out
ds
popa
cltd
lea
and
or
pop
imul
gs
pop
pop
sub
adc
and
and
jmp
sbb
and
jns
test
addl
popa
sbb
adcl
push
sbb
xlat
push
cmpsb
ss
sbb
repnz
sti
in
aad
xor
xor
push
mov
in
cmp
ja
or
lcall
push
jg
hlt
addr16
dec
xor
jle
dec
push
or
std
mov
pop
lods
sbb
sbb
movsl
insb
in
sub
imul
mov
repz
test
sub
lea
jmp
je
cli
shll
pop
fmuls
mov
adc
fidivrs
inc
pop
fwait
or
xor
cld
adc
test
mov
xchg
xchg
lods
jecxz
push
sahf
dec
jp
dec
or
je
mov
mov
in
mov
aam
mov
sub
sbb
mov
imul
mov
aad
mull
shrb
lods
test
ss
in
adc
imul
js
xchg
out
push
xchg
sub
inc
in
lods
outsl
mov
imul
les
cmc
fs
adc
cmp
sbb
shl
dec
mov
xlat
jbe
push
push
mov
cmpsb
mov
and
sub
ljmp
in
fnstsw
lods
sbb
xchg
pop
cmp
dec
arpl
cld
or
pop
imul
mov
mov
aad
mov
cwtl
push
sahf
aad
mov
fiaddl
and
sub
addr16
sahf
std
inc
js
sti
call
inc
test
sub
jbe
and
xchg
aas
arpl
daa
cmp
daa
sarl
adc
cmp
gs
ret
mov
mov
mov
addr16
sub
out
mov
ret
inc
or
les
inc
inc
sbbb
aas
pop
lock
mov
jl
push
add
inc
adc
bnd
out
cmpb
adc
inc
inc
dec
lahf
ds
jge
xchg
jmp
rorl
mov
push
xlat
jo
out
bound
and
dec
mov
mov
and
fdivs
and
inc
pop
in
loope
in
outsb
scas
xor
sbb
xchg
push
adc
fstpt
pop
test
pop
xchg
mov
mov
dec
or
cmp
inc
repz
sbb
insl
iret
jp
cs
jge
mov
pop
into
pop
loop
xlat
and
cmp
inc
loope
imul
xchg
jecxz
xor
ds
jmp
fstps
jno
and
or
inc
sub
push
push
mov
push
hlt
cltd
add
jecxz
xchg
cmp
imul
pop
jl
push
push
dec
repnz
out
arpl
clc
jg
jmp
push
je
rorb
sbb
jmp
cmp
sbb
jl
shrl
xor
lods
xchg
lods
sub
cmp
sti
xor
arpl
mov
shl
add
cltd
sub
xchg
xlat
jne
shlb
cli
data16
push
lods
add
sarl
mov
cmpsl
add
xchg
lods
jne
stos
and
jl
adcl
popa
push
jbe
frstor
stc
cld
xchg
sbb
xor
inc
push
aaa
xchg
inc
and
popa
jno
clc
movsb
out
xchg
add
sub
xchg
mov
pop
lahf
jp
xor
lods
cmp
inc
push
call
sub
pop
xchg
mov
push
stc
dec
cmc
pop
cmp
sbb
int3
lahf
test
cmp
sub
pusha
dec
cmpsb
jmp
imul
mov
xor
aad
pushf
aaa
jl
adc
test
rol
cmp
inc
add
imul
push
loope
pop
cwtl
insl
fldenv
insb
dec
out
xor
gs
add
incb
cltd
and
lret
inc
in
in
outsb
inc
aad
fdivrs
push
push
xchg
and
loop
sub
nop
push
out
push
cmp
shrl
cmp
imul
lods
pop
jno
nop
andb
mov
pushf
arpl
mov
jmp
jno
mov
jmp
lods
in
aas
icebp
int
or
mov
sub
out
stos
fstpl
in
xor
cmp
in
daa
sti
lcall
dec
ds
sti
or
xor
cmp
cmc
dec
movsl
sub
jns
xor
mov
ss
frstor
mov
xor
add
jne
jle
jne
shll
mov
in
ror
popa
fs
inc
push
add
mov
lods
stc
mov
mov
imul
cmp
xor
std
pop
xlat
xor
jne
sub
push
int
scas
sub
int
roll
and
pop
push
iret
jge
fstpt
jecxz
movsb
std
fstl
out
sbb
push
mulb
mov
or
inc
xor
shrb
dec
test
dec
pusha
sub
pushf
std
mov
divb
adc
xor
xchg
mov
xor
jge
cmp
sub
xchg
aas
test
stos
xor
ret
test
sbb
int
push
pop
mov
xchg
std
in
jo
jg
test
insb
int3
sbb
sub
mov
mov
out
jno
orl
fldcw
sub
lcall
fnsave
adc
ja
movsb
sbb
aad
push
sub
push
inc
pop
jae
int
scas
aaa
test
fisubs
icebp
xsaveopt
xor
jne
push
leave
push
enter
out
lret
xor
icebp
sbb
jg
xchg
in
cmp
rcr
call
lret
xchg
cli
mov
xchg
jno
sbb
push
adc
movsl
movsb
push
and
inc
aaa
inc
pop
cltd
cwtl
jp
stos
dec
fcomps
mov
int3
aam
ss
rolb
popa
das
lret
lret
into
sub
in
sbb
lods
inc
int
sub
loope
enter
push
fldcw
sub
lods
in
mov
jle
push
inc
dec
cmc
push
lds
push
and
jecxz
out
loop
cmp
pop
into
sbb
push
out
addr16
test
cwtl
sbb
add
imul
push
mov
cmp
inc
inc
dec
inc
xor
dec
add
xchg
mov
test
jnp
add
jb
es
andl
push
adc
jne
and
or
imul
cltd
pop
fmull
and
cmp
add
pop
ss
ret
lods
movsb
mov
addr16
out
ds
movsl
xchg
js
pop
cmp
push
and
inc
sub
les
mov
xor
ljmp
ljmp
add
add
shrl
sbb
jns,pn
and
xchg
dec
filds
add
add
inc
push
inc
sti
lcall
jo
sub
jb
cmc
xchg
in
xor
sti
das
in
sbb
jmp
mov
xor
fwait
pop
imul
lds
repnz
rcll
add
fs
aas
mov
or
imulb
pop
push
std
fstl
fdivrs
jne
jns
prefetch
add
and
rol
ja
jg
inc
xchg
call
add
or
jae
loop
adc
pushf
mov
pop
pop
and
pop
fimull
dec
dec
idivb
mov
adc
sub
cmp
mov
sub
or
jg
cmp
mov
push
call
jno
adc
lock
aam
icebp
das
jo
lcall
loope
push
cwtl
mov
notl
sbb
push
leave
mov
fxch
jge
lret
push
imul
in
mov
roll
xor
ja
sbb
insl
push
and
and
imul
push
sbbb
inc
outsl
dec
inc
std
pop
in
pop
insb
daa
dec
xor
inc
cmp
xor
xchg
push
xor
cmpsb
or
jae
or
movsl
cmpb
fsubp
dec
pop
aaa
add
xchg
and
loope
add
lea
in
addr16
mov
test
add
out
test
mov
cmpsl
push
shl
or
les
adc
lods
xor
mov
inc
xchg
rorl
push
loope
imul
je
pushf
rcrb
or
out
mov
sbb
shll
aas
cld
sub
test
lds
pop
pop
fimuls
xchg
jp,pn
dec
iret
aas
shlb
adc
pop
cmp
gs
push
push
jae
js
xchg
aam
out
in
xor
mov
cmp
adc
stos
mov
leave
mov
rol
xchg
pop
sbb
sub
mov
fadds
repnz
adc
dec
jp
mov
ja
sti
int3
sub
mov
je
inc
pop
mov
add
inc
pop
jae
iret
cli
push
icebp
cmpsb
pop
add
rcr
add
lods
pop
ret
movsl
pushl
lahf
lret
and
dec
lods
test
mov
or
daa
push
test
push
aaa
jg
rorb
sub
lds
push
fidivl
rcll
sub
and
shlb
rorb
sbb
repz
sbb
xchg
mov
mov
pop
push
mov
xlat
movsl
test
js
leave
lea
inc
daa
xor
xchg
mov
div
sti
pop
shrb
xchg
out
mov
cwtl
sbb
mov
pop
mov
pop
jno
mov
insl
data16
pop
mov
mov
out
mov
add
pop
and
jae
clc
push
in
cmp
in
sbb
cmp
cmp
and
shrb
inc
lods
mov
xchg
jo
mov
xchg
lfs
mov
popa
add
push
out
sub
mov
push
or
mov
loopne
sbbb
fwait
int3
cltd
cltd
out
lods
inc
or
mov
leave
in
mov
popa
sub
sub
stos
setg
sub
sbb
sahf
xor
inc
push
push
in
mov
nop
push
add
in
push
lret
ljmp
push
or
test
sti
lret
mull
and
pop
aaa
push
into
sbb
xor
sub
movsl
or
insb
mov
stc
pushf
mov
jne
and
push
mov
sbb
movb
cmpsb
rcrl
xchg
sarl
stc
xor
shl
cwtl
adc
ds
cmp
dec
loop
mov
mov
xchg
dec
jl
jo
sbb
xchg
xchg
mov
pop
fidivs
ret
push
inc
dec
inc
leave
add
rcll
dec
adc
movsb
mov
dec
sub
cli
inc
inc
and
sbb
in
push
push
sbb
es
pop
rolb
dec
pusha
push
inc
pop
rorl
sbb
repz
xchg
fmul
pop
cmp
data16
stc
pusha
push
xorb
pushf
or
movsl
sahf
mov
and
cmp
popf
test
popa
cli
xor
sub
dec
outsl
sub
adc
dec
fnsave
pop
loopne
repz
cmpsb
ret
gs
insb
test
fists
or
aaa
adc
test
lods
rcrl
mov
push
mov
into
pop
popf
mov
xchg
add
arpl
fidivl
out
sub
jns
adc
mov
adc
xor
mov
movsl
stc
pusha
xor
xor
sub
loopne
or
pop
fdivr
dec
outsl
idivl
add
repz
lods
adc
fiadds
mov
sbb
mov
sbb
call
ret
gs
jb
dec
insb
push
inc
ret
jno
pop
mov
sbb
xor
xchg
ret
inc
test
addr16
xchg
pop
lahf
dec
ror
xorb
jl
cwtl
add
xor
sbb
into
xor
outsl
test
sub
vpshab
std
repz
cs
int3
sbb
lcall
ret
mov
xor
or
cmp
fidivrl
sub
jl
cwtl
inc
push
stos
cwtl
jns
sub
aad
movsb
xchg
aas
movsl
cmp
leave
cmpsb
mov
mov
stc
sbb
dec
je
xor
aad
fwait
imul
mov
je
jno
lcall
addr16
rcrb
rolb
dec
stc
orl
ljmp
adc
dec
mov
out
sub
es
negl
mov
push
push
fisttpll
out
and
fldcw
adc
movsl
test
mov
dec
mov
dec
data16
insb
lcall
jo
and
jbe
aas
push
adc
int3
dec
ljmp
je
stos
cwtl
pmuludq
xor
out
jb
inc
mov
addr16
repz
mov
xchg
pop
xor
push
test
outsl
das
out
jbe
pop
jg
test
stc
dec
sbb
enter
cs
pop
shr
sub
dec
add
mov
out
sbb
in
and
les
das
mov
cmpsl
lret
cmp
push
sbbb
cli
rcrb
fs
fnsave
and
rorl
or
jmp
cltd
decb
test
sub
scas
imull
int3
push
test
in
je
push
adcb
sub
pop
pop
fnstsw
fisubl
inc
divl
out
aas
sarb
xlat
data16
pop
mov
push
fs
cmc
addr16
aad
subb
jbe
fwait
in
xor
iret
mov
cmp
mov
mov
enter
push
push
adc
and
cmp
push
data16
dec
call
je
movl
mov
mov
sbb
fldl
je
push
xchg
or
aad
aad
jle
inc
in
inc
rorb
xchg
repz
xchg
rclb
xchg
cwtl
jne
mov
pop
xchg
or
jne
rcr
movsl
std
shlb
insb
pop
jb
push
jns
mov
jne
call
cmp
mov
or
in
sbbb
lods
push
push
insb
icebp
aaa
ret
lds
ja
mov
push
loopne
or
jbe
pop
fdivrs
pop
jl
xlat
stos
inc
adc
jl
mov
lods
scas
push
xor
sbb
add
fbstp
xorb
xchg
fisubl
rorl
xor
popa
mov
movsl
jne
cmp
pop
xchg
js
stc
pop
push
sbb
add
mov
int3
mov
sub
xor
jecxz
cmc
imul
pusha
out
out
insl
popa
push
scas
mov
adc
xor
aad
xlat
orb
out
sbb
sub
sbb
loope
dec
sub
cmp
xor
dec
or
aam
adc
adc
pushf
daa
dec
adc
enter
dec
icebp
push
cmp
sub
hlt
idiv
daa
fmuls
mov
rcrb
cmp
push
xor
sarb
sahf
dec
mov
icebp
inc
sbb
push
rcrl
xor
or
lret
cmp
and
adc
lcall
xlat
xor
fnstenv
push
cmpsb
popa
xlat
fucomp
movsb
inc
stos
sbb
lds
pop
pushf
into
test
adc
or
push
inc
gs
and
push
mov
aas
pop
cmc
fisubs
lea
push
mov
pop
xchg
push
adc
xor
mov
rorb
das
repz
in
sub
xor
sarl
xor
jge
arpl
enter
stc
dec
jne
rcrl
xor
js
aam
push
adc
loope
scas
sbb
push
pop
mov
mov
cmpsl
jmp
xlat
and
stc
mov
insb
push
inc
push
xchg
lahf
mov
cmp
jmp
dec
daa
sbb
insb
xor
scas
push
xor
insl
sub
push
fsubl
pusha
ss
xor
mov
addr16
sub
outsl
fldenv
hlt
push
pop
push
fwait
addr16
pop
xchg
imul
push
test
gs
xor
std
in
sarb
lds
xor
andb
fldln2
cli
in
pop
jle
subb
xchg
cld
dec
or
leave
inc
mov
jge
imul
jne
push
sbb
xor
dec
mov
leave
adc
fcmovu
adc
inc
mov
out
inc
and
fnstenv
insb
sbb
data16
and
das
addr16
test
test
les
push
xchg
mul
sbbb
push
mov
rolb
sub
xor
movsb
lods
insb
jge
movsl
push
movsl
ret
mov
shlb
popf
xchg
mov
sbb
mov
jecxz
mov
xchg
in
and
fwait
mov
pop
stos
incl
js
push
push
or
mov
outsb
popa
push
mov
pop
ret
cmp
jl
int
adc
xchg
mov
push
ja
scas
jb
mov
das
idivl
and
icebp
mov
sub
jb
iret
js
jns
cld
jbe
es
fmuls
pop
notb
push
dec
adc
addr16
lock
daa
cmp
inc
xor
orb
cmove
ss
aas
int
stc
das
push
lahf
out
inc
insb
sub
or
mov
jbe
in
adc
rorl
pop
sbb
pop
stos
decb
or
pop
shl
lcall
jg
mov
push
int
adc
loopne
out
setnp
ds
fcomi
mov
push
mov
adc
cltd
or
sbb
out
mov
push
test
adc
out
ror
or
gs
sbb
add
xchg
xor
ret
or
and
dec
adc
ljmp
sbb
inc
es
mov
ss
fldenv
push
test
loopne
test
iret
icebp
mov
scas
jns
and
pop
into
and
stos
lahf
repz
les
shlb
xchg
sbb
mov
xchg
cwtl
dec
sub
arpl
cmp
push
std
leave
push
cmp
pop
shlb
incb
jle
push
mov
ret
mov
shlb
inc
cmp
sub
test
push
enter
out
shl
jecxz
xlat
or
jge
sahf
mov
and
mov
push
jo
mov
mov
pusha
shl
pop
scas
cmp
sub
sub
ljmp
pop
fadds
fstps
jle
push
mov
enter
das
cmpsl
in
ret
push
loop
shlb
test
add
aam
bound
push
xor
cmc
inc
xor
sbb
divl
aam
dec
sbb
sub
shrl
flds
jle
movsl
out
fisttpl
imul
xchg
aas
cmp
rcl
dec
ljmp
jbe
lods
pop
lret
nop
sub
lods
jecxz
loop
lea
cmpsb
test
clc
lods
je
pop
testb
in
in
lcall
out
jl
push
jae
loope
add
cmp
and
fisttpll
push
btr
mov
pop
mov
in
jno
imul
aas
add
sbb
hlt
jb
gs
xor
icebp
bound
or
adc
lahf
sbb
adc
jl
mov
push
or
xor
lods
sub
loope
rolb
cmc
mov
cmp
push
test
jmp
in
dec
adc
xchg
mov
pop
mov
add
xlat
in
dec
je
cmp
and
pop
xor
in
jmp
ficomps
test
jne
lcall
or
arpl
outsb
add
ret
fs
mov
aam
adc
pop
in
cmp
adc
int
jnp
sbb
sub
and
or
push
lahf
jl
out
lock
shll
mov
add
icebp
loop
jmp
lcall
bound
mov
int3
sub
movsb
shll
hlt
or
bound
fs
clc
daa
or
scas
fsubl
or
fdivp
or
pop
insb
lea
mov
ss
shlb
js
adc
xchg
mov
xchg
jecxz
mov
mov
int
or
les
push
pop
ret
ret
scas
inc
repnz
sbb
inc
mov
inc
mov
jne
lea
lret
and
into
cmpsb
mov
and
push
mov
push
jecxz
inc
pop
aam
jp
mov
mov
adc
movsl
fdivl
adc
ret
mov
cmp
fbstp
inc
leave
sbbb
push
pushf
ja
mov
add
roll
and
push
jne
inc
addr16
add
paddq
sbb
stos
repnz
jl
das
cltd
aas
push
sti
xor
dec
adc
push
movsb
jecxz
imul
mov
test
pop
je
sahf
or
sub
ret
dec
mov
sub
inc
pop
sub
jmp
jns
lock
je
stos
pop
aam
adc
ret
idiv
ja
adc
adc
lcall
mov
cwtl
pop
push
mov
xchg
cmp
xchg
cs
in
or
xor
sbbl
cli
cld
pushf
cld
lods
adc
idivb
push
dec
cmp
mov
push
jg
mov
aam
push
jmp
dec
jge
ds
mov
shl
cmpsl
mov
cmpsl
xorb
loope
jae
xchg
adc
popf
jo
shl
mov
lock
pop
je
insb
jne
sbb
fdiv
test
mov
les
int
insl
fisttps
add
sub
iret
loop
pop
pop
dec
push
gs
mov
aam
imul
movsb
das
aaa
movsb
fistpl
push
mov
sub
shlb
sbb
and
or
sub
ret
sub
mov
out
push
pop
jmp
into
ss
sub
mov
xchg
lds
sbb
rcrl
mov
mov
call
mov
xor
shlb
mov
pop
sbb
sub
inc
jno
push
rolb
hlt
or
loopne
add
push
add
cmp
push
adc
mov
inc
scas
dec
or
orb
std
scas
mov
jo
cwtl
sar
sub
adc
push
dec
ficompl
xchg
arpl
ljmp
push
mov
push
adc
int3
mov
dec
iret
and
xchg
push
pop
dec
fstps
dec
push
and
in
jp
es
xchg
ret
aam
jne
addr16
sub
sti
mov
jl
icebp
lea
insb
outsb
and
das
imul
jecxz
mov
movsl
fsubr
lret
inc
addb
out
xchg
test
pop
shlb
loope
sub
dec
push
xchg
pop
je
enter
cmp
enter
pop
cmc
and
push
outsb
and
ret
add
mov
popa
aaa
dec
adc
jp
mov
add
sub
mov
addr16
sbb
sbb
xchg
leave
inc
popf
ret
add
fnstcw
in
pop
int
imul
leave
in
cmpxchg
mov
pop
jae
popl
mov
add
outsb
jae
sbb
sbbl
cmp
lods
cs
nop
or
cmp
daa
unpcklps
js
sub
adc
mov
jmp
lock
mov
loopne
xorl
ficompl
out
out
ja
adcb
shlb
adc
sbb
jbe
mov
mov
mov
mov
out
out
jle
cmp
dec
mov
scas
adc
and
jecxz
icebp
jl
cmp
jae
pop
push
or
test
xlat
fdiv
popf
imul
and
fwait
mov
rcr
loopne
sub
cmp
imul
push
inc
jb
cmpsl
loope
fsubrl
add
ljmp
js
icebp
cmp
loope
inc
iret
sbb
fidivrl
xchg
xor
cltd
inc
inc
push
mov
adc
push
pop
mov
or
mov
aam
scas
test
jo
iret
xchg
js
push
jg
inc
cwtl
add
movsl
mov
xchg
pop
push
and
data16
imul
icebp
movsl
or
mov
mov
mov
pop
pop
xchg
mov
mov
inc
stc
cli
and
jb
incl
outsl
push
mov
cmp
cltd
je
pusha
aaa
clc
mov
dec
js
fidivl
sbbl
daa
adc
stc
jl
mov
icebp
int3
es
sahf
mov
bound
xchg
cmpb
aas
dec
out
jo
or
push
lods
lds
jecxz
fisttpll
jmp
arpl
and
mov
les
xor
test
mov
lcall
movb
add
ja
mov
inc
data16
popa
movsb
push
dec
popa
icebp
lds
bound
adc
xor
xchg
out
jle
dec
bound
and
mov
rorb
jae
xor
in
out
inc
jns
push
sub
lcall
adcw
push
iret
lcall
into
stos
lcall
and
inc
jmp
or
mov
movsl
push
outsl
push
cmpsl
jl
inc
xlat
xchg
inc
aad
xchg
stc
add
outsb
mov
sbb
and
orl
fisttpll
mov
rcrb
adc
repz
mov
xchg
sbb
mov
lahf
or
and
fldcw
pop
dec
dec
int3
sbb
cmpsb
inc
dec
subb
call
popf
push
sub
push
in
in
add
iret
jmp
out
mov
xchg
ret
icebp
adc
fstps
cld
notl
test
mov
jo
lock
lret
add
xchg
sbb
inc
movl
fldt
iret
movsb
sbb
mov
in
dec
pop
jno
shll
sub
repz
fisubs
mov
inc
push
cmp
mov
sbb
fcoml
mov
fwait
rorb
aas
mulb
push
jnp
ljmp
mov
or
sub
xor
push
xchg
fisubl
dec
pop
or
push
scas
test
jg
movsb
lcall
rolb
adc
and
jg,pt
adc
xchg
cmp
push
or
lret
xor
sbb
movsb
aas
cmp
pop
or
insl
in
nop
movsl
xor
sbb
xlat
popa
lock
sub
repnz
call
mov
or
or
cmp
lods
insl
int3
test
inc
pop
mov
nop
test
sarl
scas
cld
cmpl
int
ret
pop
pop
subb
outsl
cmp
insl
call
repnz
movsb
ret
inc
lret
rorb
outsl
loop
pop
sub
sub
repz
jecxz
mov
test
in
frstor
scas
cld
jp
sbb
sub
push
stos
pusha
rolb
cld
cmpsb
lods
jmp
hlt
hlt
data16
dec
mov
or
dec
add
jmp
push
adc
mov
movsl
dec
and
dec
pop
outsl
mov
cmc
addr16
xor
aas
cmp
iret
int
jl
scas
jge
popf
mov
push
and
mov
mov
data16
out
aaa
cmc
xlat
push
pop
pop
mov
mov
shlb
into
pause
adc
push
stos
addr16
lret
ret
aas
out
ret
pop
sub
or
inc
mov
jnp
aaa
repnz
mov
push
test
and
insl
adc
ficoms
adc
xlat
out
in
pop
and
les
loope
sub
ret
lret
std
mov
cmp
std
jge
ret
int3
repnz
fsubrs
test
inc
stos
push
dec
jb
cmp
stc
inc
leave
sbb
add
xchg
and
icebp
cmp
xor
dec
dec
ds
shll
roll
frstor
inc
das
call
loop
mov
icebp
or
stos
icebp
and
enter
rolb
jle
xor
sub
and
mov
sub
test
push
dec
xchg
imull
jp
in
test
aas
out
daa
cmp
mov
mov
inc
mov
push
sbb
loop
push
add
mov
sti
and
xchg
icebp
pop
inc
pop
pop
jno
xchg
test
aam
sub
pop
fcoml
xlat
imul
mov
bound
inc
mov
push
mov
negl
mov
xor
cmp
add
dec
and
jbe
lea
sahf
shrl
push
or
xchg
pop
pop
sahf
push
pushf
inc
sahf
xchg
cmp
insb
xchg
cmp
adc
into
arpl
inc
and
movsl
loopne
or
test
int
adc
sbb
insb
mov
adc
push
imul
push
imul
lock
add
mov
jno
or
sub
lods
pop
cmp
inc
inc
and
xor
push
and
lock
mov
lock
cmp
pop
xchg
adc
add
inc
andnps
pop
cltd
push
cmp
mov
sbb
pop
jmp
rclb
adc
fisttpl
xchg
scas
xchg
push
clc
mov
adc
mov
xor
xor
loope
fucomi
ljmp
dec
push
xchg
out
pop
sub
in
int3
out
add
pusha
sbb
mov
add
add
outsb
add
push
fisubs
lsl
mov
add
cmp
ja
pop
ret
xchg
jge
mov
fs
lahf
cld
pop
xchg
adc
test
add
fadds
stos
jg
pop
jnp
ljmp
rcrl
sub
sub
movsb
mov
ss
movsb
in
mov
or
int3
out
jb
push
in
aas
push
mov
mov
int3
mov
dec
rorl
add
jb
xor
mov
pop
xor
and
mov
dec
loope
mov
dec
icebp
lahf
add
outsb
es
das
loope
xorl
add
stc
rorb
pop
cmp
jnp
ja
cmp
test
and
mov
add
jle
rcl
aas
aad
outsb
sub
loope
mov
fcmovnbe
jecxz
arpl
aam
rorb
ret
imul
out
mov
int
jl
sbbl
in
xor
dec
out
imul
pop
mov
fwait
or
sbb
and
not
in
xchg
lcall
adc
and
lahf
inc
subb
pop
ljmp
cmc
pop
inc
leave
dec
lea
lock
sahf
inc
lret
stc
adc
adc
rcr
test
xor
ljmp
add
or
push
sbb
mov
inc
push
ljmp
lock
addb
or
lds
dec
cmp
xchg
pop
movsb
fadd
inc
mov
or
stos
enter
xor
mov
dec
cmp
loope
out
ljmp
cli
xor
mov
pushf
push
dec
sub
cmp
push
js
mov
mov
adc
fwait
mov
xor
pop
lea
xlat
jo
lods
in
js
jbe
xor
or
jp
push
sbb
and
push
add
mov
das
jp
jecxz
das
rorb
iret
jno
cmp
gs
loop
jmp
hlt
imul
test
pop
lahf
or
into
add
icebp
bound
mov
test
sbb
in
dec
sarb
dec
push
das
popl
or
leave
jne
es
or
mov
jecxz
gs
push
mov
in
xchg
xchg
sbbb
inc
cmovg
add
cli
push
sub
adc
pop
mov
xor
push
inc
fimuls
pop
pop
ret
or
icebp
fstps
cli
fs
clc
cld
out
add
addr16
pop
call
sbb
mov
addr16
mov
sbb
arpl
mov
idivb
daa
dec
xor
stos
and
inc
pusha
addr16
xchg
xor
cmpsl
adc
sub
addr16
and
jne
lods
pop
scas
cmp
sbb
xor
popf
pop
cmp
inc
and
cmp
add
aas
push
aas
xchg
jmp
dec
enter
dec
outsb
sarl
ror
test
mov
hlt
dec
and
cltd
in
notl
jecxz
repnz
addr16
sub
pop
in
inc
dec
cmp
xchg
inc
sti
stos
add
adc
push
add
push
out
cs
in
jp
test
loop
inc
mov
push
mov
xor
lcall
mov
pop
xlat
leave
jo
inc
jmp
icebp
pop
or
mov
jae
pop
dec
push
adc
lret
push
xchg
sub
add
ret
xchg
mov
inc
subb
in
jb
idivb
pop
ja
add
loop
lret
push
into
lock
pop
mov
xor
enter
adc
in
push
mov
or
cs
mov
imul
sub
es
xor
xor
inc
pop
stos
jne
inc
add
mov
ss
les
dec
inc
sahf
lea
cmp
daa
lods
gs
dec
andl
popa
into
test
mov
std
inc
xor
out
add
ret
sub
pusha
mov
sbb
push
mov
sub
adc
sbb
add
cld
adc
filds
or
pop
into
xor
mov
enter
mov
or
fsubr
push
pop
cwtl
sbb
jl
or
mov
xor
iret
jne
and
and
sub
pop
out
xchg
push
dec
or
repz
jecxz
fstpt
imul
jp
iret
cmp
and
sbbb
mov
xchg
push
outsl
or
sub
add
mov
lods
stos
pop
add
enter
int3
xor
in
sub
cmp
mov
std
jge
bound
lahf
push
hlt
dec
xchg
pop
mov
inc
andb
sbb
xchg
or
push
arpl
sub
mov
push
dec
daa
mov
idivl
repnz
cld
add
gs
lock
sbb
cmp
jp,pn
mov
mov
shrl
pop
mov
push
sub
rcrb
adc
addr16
xchg
pop
pop
mov
sub
call
push
icebp
inc
and
jmp
adc
jg
mov
jne
mov
pop
mov
cli
cmp
dec
sti
xor
mov
mov
aaa
cmp
push
mov
repnz
mov
dec
add
inc
imulb
data16
out
and
ficoml
faddp
sahf
stos
or
movaps
jns
cmp
xchg
cli
mov
repnz
int
out
aaa
into
ret
mov
aaa
mov
inc
hlt
fadds
or
icebp
repz
mov
push
and
clc
cltd
lret
inc
pop
cld
fsubrl
inc
mov
mov
add
cmp
sub
sbb
dec
out
stos
xor
jae
cmp
dec
xchg
bound
cmpsb
or
stos
mov
test
sti
enter
mov
sahf
stos
dec
mov
xchg
sahf
cltd
adc
fcoms
bound
push
sub
jge
mov
adc
pop
incl
cmp
test
cmp
lods
push
js
sub
add
cs
shl
push
or
call
leave
push
js
mov
cli
inc
lds
hlt
mov
je
fdivs
cmpsb
mov
andb
fdivs
add
mov
xchg
xchg
xchg
push
xchg
rclb
pop
adc
push
test
sub
or
mov
outsb
arpl
jge
cmp
je
cmpsl
inc
xlat
push
sbb
or
decl
sbb
pop
cmp
jge
outsb
nop
inc
fst
aaa
cld
mov
imul
test
xor
imul
push
dec
fimuls
mov
out
insb
and
cmp
pop
loope
call
push
xor
mov
xchg
and
or
cld
shlb
in
out
mov
push
stos
pop
test
popf
aam
aam
push
gs
pop
nop
mov
shlb
jecxz
mov
xchg
ret
or
or
cmp
fs
aam
or
mov
dec
fisubrs
or
dec
xchg
popf
push
nop
inc
mov
push
shll
mov
mov
jae
js
mov
imul
inc
and
mov
pop
pushf
lret
std
sbb
fidivrs
add
add
pusha
add
jne
iret
jno
xor
icebp
addr16
mov
jl
jnp
mov
jae
aad
into
push
mov
faddl
loop
andl
xchg
inc
rclb
or
add
inc
test
jno
cmp
mov
jp
cld
pop
sahf
mov
cmp
sbb
hlt
mov
cmp
mov
aaa
cmp
pop
dec
test
push
adc
xor
push
push
jle
aaa
sub
cmp
dec
mov
xchg
scas
fstpl
subb
ret
sbb
or
pushf
andl
aad
aam
sub
xor
xor
arpl
enter
inc
xchg
pushf
dec
xchg
fs
pop
pop
sar
in
push
inc
pop
mov
js
mov
cwtl
sbb
nop
sub
aam
push
sbb
mov
dec
out
push
movsb
ret
mov
jecxz
call
push
andl
xor
adc
mov
les
outsb
cmp
out
ja
mov
data16
or
enter
arpl
aaa
pusha
jecxz
push
shrl
les
in
add
in
popf
cli
notb
je
cltd
adc
or
mov
xchg
inc
negl
xchg
out
xchg
mov
push
xor
std
les
sahf
dec
imul
call
loop
arpl
loope
sub
xchg
pop
mov
xor
mov
ja
shl
mov
jl
enter
and
jnp
or
fiaddl
and
in
and
js
jp
mov
cs
mov
add
sbb
jns
sbb
cmp
xor
mov
pop
es
sub
xchg
xchg
daa
mov
xor
int
loope
incl
xor
sti
push
xor
sbb
jo
cld
dec
call
xchg
cmpsb
sbb
les
pop
mov
xchg
pop
fstpl
test
add
cmp
adc
sub
fmuls
xor
lods
push
push
pushf
jmp
popf
push
and
cld
push
outsb
lcall
out
mov
or
jbe
rcrb
popa
and
xor
mov
sub
cli
cmc
jg
push
jl
lcall
pop
cmp
jae
leave
stc
cmp
enter
stos
sti
pop
scas
outsl
les
stos
sbb
pop
xchg
fsubs
dec
insl
xlat
fdivs
xor
test
lahf
sbb
into
je
cmp
lret
push
push
imul
sarl
leave
mulb
sbb
movsl
lcall
cmp
sti
fildll
xor
xor
push
js
loope
lcall
adc
jno
mov
or
mov
stos
xor
add
xchg
jl
mov
and
loop
fdivrl
push
mov
mov
xchg
mov
stos
dec
ss
fsubrs
ja
cmp
shl
rorb
insl
xlat
arpl
inc
xlat
int
xor
sub
into
je
ret
inc
ja
cmp
daa
nop
jno
mov
sub
mov
xchg
cmc
sbb
dec
mov
add
das
into
fists
aam
adc
loop
dec
xchg
cwtl
ret
movsl
iret
cmp
test
and
ja
jae
aad
iret
fbstp
add
xchg
cld
dec
repz
cmp
push
mov
lcall
dec
movsb
pop
mov
mov
stos
jnp
movsb
js
sbb
sbb
lcall
inc
mov
push
sub
push
out
stos
inc
cmp
pop
lret
fdivrs
pushf
sub
mov
je
leave
and
ss
pop
mov
cmp
rolb
test
stos
mov
mov
frstor
xchg
dec
push
inc
xor
notb
iret
je
mov
cmp
push
out
sti
push
and
and
inc
cwtl
mov
out
xchg
dec
and
dec
divb
mov
mov
mov
iret
rolb
insb
cwtl
dec
push
sbbb
mov
mov
mov
cmp
test
inc
add
pushw
jle
sbb
and
jp
or
cmpsb
jge
pop
decb
or
lds
xchg
mov
xchg
fldcw
iret
and
xchg
nop
in
or
cld
hlt
leave
sbb
into
test
movsl
cmp
imul
mov
cmp
pop
inc
jne
ds
or
fisubs
loop
cwtl
adcb
pop
and
jge
sar
pop
inc
adc
jecxz
push
inc
outsl
pop
lret
pop
imul
ss
popf
mov
aas
mov
sub
sahf
inc
outsb
xchg
aaa
shrb
jae
dec
in
xor
movsl
call
insb
in
hlt
jb
loopne
mov
lret
flds
icebp
jg
add
icebp
and
inc
enter
mov
cli
adc
das
not
fsub
mov
outsb
das
pop
push
icebp
mov
ficompl
imul
fcoms
lcall
mov
dec
fwait
push
lds
dec
push
xor
dec
leave
mov
jg
pusha
push
lds
push
cli
in
repnz
xchg
lea
pop
aam
cmp
pop
and
cmp
pop
insl
cmp
xchg
fisubl
sti
xor
mov
shl
mov
mov
xor
js
push
lds
jle
xchg
aas
mov
test
fmuls
sub
stos
sarl
cmpsl
or
sub
mov
mov
jbe
loope
insl
insb
cmpsl
je
je
add
or
xchg
dec
and
repnz
sub
push
pop
and
xor
testl
je
mov
push
or
fcomp
cs
xchg
push
adc
pop
pop
popa
hlt
mov
xchg
adc
pop
mov
rcl
cld
add
jp
mov
icebp
fimull
xchg
flds
jo
aaa
dec
xchg
outsb
sqrtps
cmpsl
ja
push
fimuls
xchg
cmp
xor
cwtl
stc
dec
xor
mov
jg
adc
xchg
shl
cmp
push
pop
xchg
sbb
dec
mov
dec
cmp
pop
and
adc
jmp
test
enter
sub
ljmp
push
xor
mov
sub
cwtl
fisubrs
jmp
or
testl
mov
in
xchg
movsl
fwait
jne
jge
xor
iret
cmp
sub
add
enter
lahf
lock
mov
xor
fcoms
mov
test
sbb
lea
lock
stc
xchg
jnp
inc
mov
add
jnp
add
xor
mov
xchg
cmp
shrl
adc
xchg
dec
cmpsb
inc
mov
adc
test
ljmp
sub
inc
lret
test
aaa
pop
dec
mov
rcrl
inc
rcr
push
xchg
jns
iret
jo
jl
shll
pop
or
loop
shl
xor
repz
ja
jg
add
push
push
jp
push
insb
lret
std
add
xor
ret
mov
xor
hlt
push
cli
cs
aam
iret
push
dec
pop
xchg
sub
lock
test
imul
xorl
into
pusha
sbb
popa
icebp
push
test
bnd
arpl
sbb
cmp
jge
mov
lahf
ss
mov
ret
jae
mov
and
cmp
mov
into
call
nop
mov
lods
dec
sub
pushf
pop
mov
xchg
into
pop
mov
push
fimull
outsb
cmp
scas
cmp
cwtl
inc
cmc
data16
call
jle
hlt
dec
jbe
outsl
mov
dec
cli
in
out
inc
jp
sub
data16
lods
addr16
inc
lret
mov
adc
mov
scas
sbb
dec
or
and
je
xor
data16
in
mov
dec
test
dec
xor
sub
jmp
pusha
aaa
jg
and
sbb
mov
in
pop
jns
mov
call
cmpsb
jle
fisttpl
dec
lock
cmp
and
test
mov
imul
cli
pop
hlt
cmp
test
xlat
bound
jne
push
push
cs
into
out
jmp
fs
push
les
and
push
ja
and
mov
cltd
mov
xchg
stos
test
mov
js
adc
repz
push
and
sub
sub
pushf
pop
jae
ds
adc
negb
push
aaa
lahf
js
das
dec
sbb
xor
inc
inc
scas
sbb
jg
gs
sub
jecxz
adc
repnz
repz
fwait
add
gs
mov
bound
dec
push
xor
mov
je
mov
das
andb
imul
iret
xchg
ja
enter
xchg
jl
mov
lock
cmpsl
xchg
mov
sahf
xor
hlt
mov
lods
ficomps
lods
ret
scas
out
outsl
cld
cmp
jle
cltd
movsl
insb
pop
xchg
scas
cmp
cli
and
mov
adc
bound
jecxz
sub
or
shlb
jle
or
xchg
sahf
mov
adc
mov
insl
int3
cmp
ret
imul
cmp
ja
sti
jns
cwtl
xor
cmpsb
data16
clc
cmp
pop
stc
loopne
and
decb
inc
xor
stos
enter
jmp
adc
add
xor
or
pop
cmpsl
sahf
xlat
and
mov
mov
mov
xchg
inc
xor
cmp
push
jecxz
or
cmp
movsl
loop
push
mov
mov
fisubrl
mov
dec
fistpl
leave
jb
mov
fisubs
ljmp
push
xlat
mov
adc
xor
hlt
dec
mov
sbb
sti
mov
pop
dec
xchg
cwtl
adc
cld
rorb
adc
cmp
xor
cmp
cmp
push
repnz
shlb
hlt
mov
push
pop
in
inc
insb
push
jb
sub
mov
test
mov
test
testl
lea
ss
adc
ds
pop
in
adc
xor
add
aas
or
inc
icebp
push
add
gs
leave
xchg
jle
ja
push
jge
jne
mov
pop
mov
cmp
scas
add
adc
or
push
decl
adc
xchg
fstps
adc
mov
loop
adc
test
pusha
in
repz
add
test
clc
pop
nop
pop
test
test
xor
aas
pop
hlt
mov
adc
stc
outsl
pop
fprem
iret
ret
mov
test
rorl
scas
push
inc
stc
in
sbb
out
daa
xor
jmp
xor
out
pushf
cltd
mov
cld
fstpl
leave
ds
jecxz
popa
add
or
xchg
sub
cmp
sbb
sarl
jmp
scas
or
cmp
sub
int
pop
xlat
hlt
aad
insb
or
movsl
gs
jne
xchg
mov
aaa
mov
popa
cmp
adc
aam
fwait
and
clc
or
inc
jle
xchg
add
into
sub
aam
aas
push
add
inc
fnsave
into
rorl
or
mov
xchg
pop
jbe
cld
int3
xchg
xchg
insl
ret
and
aaa
int3
fistl
mov
mov
adc
ss
iret
insb
push
push
mov
cmp
aas
mov
xlat
cmpsb
pop
std
insl
scas
pushf
testb
add
fiaddl
xchg
int3
cmp
stos
push
shld
out
jp
jns
jb
sbb
jnp
repnz
jno
mov
or
jbe
stos
cmp
cld
xor
out
mov
jnp
scas
mov
fiadds
jb
insl
add
sarb
cmp
in
mov
adc
xchg
push
pop
adc
test
pop
jbe
dec
sbb
cltd
jmp
xchg
mov
mov
daa
popa
push
out
test
fs
ret
xchg
fcoml
lods
jb
bound
in
out
cmp
push
loopne
push
xchg
leave
aad
or
push
jge
test
fimuls
pop
sbb
in
aaa
cli
fistl
mov
push
mov
call
stc
xcrypt-ctr
cmpsl
pop
pop
xchg
arpl
loope
inc
dec
pop
jle
pop
sbbl
inc
notb
jle
cmpsb
jg
push
push
loop
push
andl
insb
pusha
mov
loop
in
sbbl
mov
sbb
loop
in
sbb
jp
movsb
adc
xlat
lret
mov
xchg
test
leave
add
lods
sarl
filds
pop
dec
cld
mov
inc
out
jno
in
shrl
jge
addb
and
test
enter
icebp
int
sbb
repz
push
sub
into
sub
outsb
out
pop
cmpsb
pop
or
pop
xorl
ljmp
lea
repz
ja
in
in
repz
and
test
hlt
adc
or
enter
test
bound
or
cli
dec
lock
data16
mov
sbbb
mov
sbb
movsb
pop
sub
and
repz
rep
cmp
cmp
add
sub
aas
arpl
cmpsl
adc
testl
push
addb
and
pop
movb
movsb
popa
jae
jl
sub
loop
aaa
cld
loop
ljmp
enter
xlat
fldt
mov
ds
int3
mov
jae
mov
test
pop
lcall
sbb
add
ljmp
or
mov
or
popf
xchg
mov
jge
xchg
inc
inc
popa
mov
sbb
mov
cmp
jnp
mov
add
sub
cmp
cmp
pop
sbb
arpl
add
je
shrl
cmc
in
pop
pop
outsb
inc
out
mov
cmp
push
add
movsb
cmp
push
and
or
xchg
or
sahf
adcl
and
lahf
adc
pop
pushf
add
aam
addl
cmp
rolb
add
lds
loopne
test
jnp
fadd
fisubs
pop
pop
mov
mov
xor
adc
cwtl
loopne
cmpsl
sbb
push
sbb
ds
pop
es
cmp
push
adc
outsb
stos
mov
jae
mov
mov
imul
lock
mov
test
pop
test
lea
add
out
adc
add
mov
sub
cmp
push
inc
sti
xor
sub
xchg
lcall
cmp
push
arpl
xchg
cmpsl
incl
add
push
and
dec
mov
into
mov
ret
push
ja
ret
xchg
sbb
rcll
dec
test
add
dec
inc
dec
push
subl
icebp
inc
out
sub
push
xchg
xchg
sbb
and
xchg
mov
inc
aaa
sbb
scas
cmpsl
pop
popa
mov
rolb
sbb
mov
mov
pop
xor
fidivl
in
inc
fsts
fidivs
adcl
mov
lret
or
xor
inc
pop
pushf
inc
dec
jns
push
mov
sub
rcl
dec
add
jbe
sbb
jbe
sub
pop
jmp
dec
jbe
sbb
fistl
xchg
out
mov
mov
add
sub
fldenv
sub
movsb
push
add
xchg
cltd
cltd
pop
sarb
inc
lcall
dec
aam
xor
mov
or
movsb
nop
fdivrs
cmc
adc
xchg
mov
mov
int
mov
inc
xor
fmuls
mov
sub
leave
inc
or
xchg
ds
jne
dec
xchg
popa
rorb
lds
daa
icebp
test
cmp
testl
push
or
mov
xlat
roll
std
mov
in
sbb
and
xor
xchg
jno
xorb
test
inc
or
popf
sahf
outsl
xor
sub
adc
fisttps
mov
push
mov
idivb
scas
pop
cmp
data16
mov
int3
mov
int
push
dec
repnz
mov
daa
and
rorl
outsb
loop
fsubs
ret
mov
cli
xchg
fs
mov
pop
in
and
push
sub
inc
push
aad
cmp
dec
nop
inc
loope
cmpsb
jecxz
mov
data16
orl
jno
mov
mov
movsb
lock
jmp
push
jecxz
lods
cmp
mov
sbb
sub
outsl
and
xchg
mov
adc
cltd
sbb
xor
add
dec
pop
pop
xor
icebp
andl
sub
sahf
stc
mov
repz
call
mov
leave
in
cmpl
sbbl
push
pop
test
js
pop
test
test
inc
das
push
faddl
jb
shl
fs
add
pop
adc
mov
or
sbb
popa
mov
lock
out
add
and
jne
dec
adc
cmpsl
mov
cmc
adc
or
fsubrs
mov
jb
aam
inc
orb
je,pn
and
in
test
std
fwait
aam
mov
test
std
mov
sub
fldl
inc
in
sbb
mov
dec
add
mov
dec
mov
jl
pop
mov
push
pop
sbb
inc
stos
add
fcoms
cli
push
hlt
sub
fwait
jae
data16
mov
gs
leave
mov
xchg
cmpsb
inc
cmpsl
fcompl
scas
cmpsl
int3
fsubl
inc
mov
and
inc
aam
imul
lock
mov
andl
out
dec
das
inc
inc
or
xor
pusha
roll
pop
jmp
stc
add
inc
push
cmpb
in
jno
pop
mov
clc
scas
lret
push
jg
call
fistl
xchg
outsl
fsubl
xrstors
add
mov
dec
aad
push
pop
push
imul
push
sbbl
popa
add
stos
adc
arpl
rcrb
push
mov
or
scas
test
das
test
and
call
jb
add
sbbb
push
xor
loop
mov
inc
out
cmp
scas
xor
or
aad
shl
jno
adc
nop
adc
aas
push
icebp
mov
lods
dec
mov
xchg
inc
or
inc
dec
decb
sub
mov
cltd
std
test
lds
fdivrs
gs
cli
cmp
dec
int3
arpl
sub
pop
pop
iret
mov
fadds
cmpl
sub
pop
mov
pop
mov
idiv
xchg
in
leave
inc
jnp
std
sarb
arpl
mov
or
cmpsb
adc
div
pop
adcb
scas
or
in
inc
negb
sahf
mov
icebp
jo
xor
inc
mov
jg
sti
sub
mov
ja
ja
mov
add
sbbb
mov
in
push
int
gs
adcb
mov
stos
xchg
fldl
andl
out
push
xor
je
popa
enter
xor
mov
cmpsb
addr16
adcb
pop
mov
pop
iret
fs
into
jmp
push
iret
jns
cmp
sahf
add
add
dec
and
pop
sbb
js
jno
jecxz
xor
loop
xor
xchg
add
lcall
pop
ss
jnp
dec
mov
aam
push
inc
jne
out
jns
mov
xor
dec
das
mul
mov
xchg
ss
sbb
je
and
mov
test
loop
xor
cmp
mov
les
je
mov
mov
cmp
incb
jle
push
das
sub
push
adc
adc
daa
insl
push
icebp
enter
ficomps
adcb
fnstsw
cwtl
jne
sbb
push
out
cmp
mov
adc
cli
push
mov
jbe
or
adcb
push
out
fildl
mov
aam
jg
loope
pop
cld
popf
mov
cli
mov
sbb
cmpsl
scas
das
cwtl
dec
pushf
xchg
xor
enter
jo
nop
sbb
push
popf
divb
outsl
inc
cmp
mov
xor
push
mov
add
or
mov
cmc
lahf
insl
adc
rcrb
iret
sbb
mov
sbb
mov
or
lret
mov
ret
push
scas
jmp
shr
inc
aam
pminsw
out
cwtl
daa
mov
xchg
shrl
fsub
lret
cwtl
jns
pop
lods
cs
cli
xorb
lock
cmp
xor
sti
stos
dec
dec
cmp
int3
sub
out
xchg
lods
xchg
gs
mov
jl
cmp
test
xor
jecxz
in
das
pop
cld
mov
stos
insl
popl
pop
or
inc
jne
or
dec
adc
sbb
dec
xor
aam
lahf
repz
xor
aaa
fnstenv
shlb
pop
inc
push
es
addb
mov
mov
inc
push
fisubl
das
xor
imulb
jne
mov
mov
mov
xor
push
into
dec
push
sub
cmp
ljmp
jge
jne
shrb
shll
jns
dec
out
inc
sahf
adc
mov
fwait
mov
pop
push
mov
pop
icebp
add
fs
int
inc
mov
sub
xor
ret
dec
call
in
iret
and
loope
mov
sbbl
pop
add
sbb
push
test
lahf
out
notb
jae
aas
cli
popa
cwtl
jg
mov
test
xor
cmp
stc
pushl
pop
sub
xchg
xchg
inc
jae
mov
inc
sbb
lahf
mov
dec
xchg
stos
test
mov
ja
into
sbb
push
je
push
or
push
std
add
std
jle
fistl
into
add
xor
mov
dec
push
mov
ds
aaa
adc
popf
add
cwtl
jge
fadds
jle
ret
push
push
mov
adc
xchg
push
lcall
dec
mov
dec
int
ret
nop
and
stos
icebp
testb
push
mov
mov
cmp
pusha
fstps
sub
int3
std
jbe
push
sbb
mov
xchg
cmp
sbb
jg
or
mov
icebp
pop
jbe
out
incl
test
xchg
mov
in
dec
mov
insb
repz
lds
subl
outsl
jecxz
lret
dec
rclb
jno
mov
insb
cs
lret
push
sbb
jle
push
mov
fistl
xchg
fxtract
imul
std
pop
test
sub
mov
fiadds
pop
or
push
aam
int
mov
fmull
rcr
pop
cs
push
xor
insl
fsubrs
cwtl
pop
or
leave
sub
fsts
outsb
pop
pushf
mov
or
lds
or
push
pop
inc
mov
adc
pop
mov
fldcw
arpl
xor
dec
inc
adc
cli
dec
or
js
jge
aas
test
push
ficomps
fs
sub
jno
orps
outsb
cli
jge
sub
push
and
mov
ds
push
lret
hlt
jne
jmp
scas
xchg
mov
icebp
insl
rol
mov
or
shll
clc
cmpsl
stos
adc
sub
insl
mov
and
pop
lea
jge
das
lcall
inc
or
call
inc
lcall
ret
cwtl
mov
out
scas
xlat
out
adc
dec
push
out
mov
jge
out
inc
ja
insb
sub
sbb
lods
mov
fisubrs
aaa
xchg
xor
daa
ja
mov
mov
push
push
push
in
cmp
pusha
ljmp
stc
data16
cmpsl
inc
test
push
popa
cmc
fld
arpl
icebp
das
sbb
fsubr
gs
cld
xor
pop
daa
insb
iret
adc
sbb
stos
scas
movsl
int3
pop
xchg
sbb
xchg
add
xor
rcr
jecxz
push
in
sub
add
stc
mov
mov
push
in
cmp
insb
cmp
je
iret
pop
add
xchg
and
das
push
push
cwtl
adc
stc
sarl
mov
add
sahf
xchg
mov
pop
xchg
jle
dec
adc
xlat
sbb
js
dec
repnz
mov
ljmp
inc
xor
sub
xorb
xor
dec
cld
or
adc
int
inc
xor
popf
jecxz
jg
lods
pop
inc
inc
lcall
in
movsl
shll
push
cmp
mov
ret
shlb
ss
lret
sub
clc
clc
loop
mov
addr16
sub
adc
out
add
or
sbb
prefetch
or
cmp
mov
push
lods
mov
cmp
or
mov
inc
lea
stos
leave
xchg
add
ret
sbb
push
jno
ljmp
cwtl
rclb
push
push
jb
cmp
push
xor
xor
and
lahf
inc
sub
dec
and
dec
fmul
popa
pushf
push
orl
mov
test
cmpxchg
lcall
sub
subb
push
jge
jge
mov
push
fsubrl
adc
int
mov
xor
cmp
movsl
stc
mov
das
sub
mov
lcall
ljmp
mov
shll
lods
mov
sar
pop
pop
inc
cli
xchg
and
sbb
xor
mov
hlt
and
pop
mov
jmp
cmpsb
out
test
xchg
rcrl
orl
sub
sbb
fisttpll
inc
cmp
int
pop
lock
fnstcw
sbb
jb
adc
push
mov
decb
mov
outsl
das
push
stos
stc
data16
popa
idivl
push
jbe
insl
mov
aad
stos
std
or
dec
addr16
es
add
out
sbb
pop
xchg
fs
cmp
mov
dec
imul
push
jno
xchg
and
bound
dec
pop
adc
inc
mov
lahf
push
pusha
adc
in
je
stc
mov
jg
inc
lcallw
imul
cmc
or
lods
int3
jae
dec
sub
stos
mov
fmuls
pusha
into
repz
ds
add
aam
roll
xchg
cmp
mov
xchg
not
sbb
add
mov
mov
pop
xor
fbld
push
adc
mov
into
mov
push
mov
into
ja
lds
imul
mov
or
aas
gs
ljmp
sub
scas
insb
xchg
lret
adc
cmp
cmp
subl
sarb
dec
cli
mov
sub
dec
cmpsb
int
orl
popa
mov
in
cmp
bound
mov
leave
lock
sahf
stos
dec
mov
and
cmp
cli
aas
test
jle
mov
xor
push
sarb
mov
rclb
lcall
data16
jnp
outsb
pop
jae
jae
loopne
mov
pushf
jns
mov
in
push
fdivs
aad
xchg
inc
push
sbb
sbbb
add
test
test
cmp
je
ficomps
jns
loop
mov
ljmp
mov
fistl
hlt
test
mov
mov
xchg
push
mov
pop
mov
cmp
imul
jg
aam
xor
or
loop
fidivrl
xor
scas
xchg
add
addr16
and
js
mov
add
aam
jmp
xlat
sub
inc
out
adc
loop
mov
je
movsb
inc
push
xor
xchg
mov
stos
jl
in
pop
aaa
aad
int3
pop
pop
xchg
repnz
xchg
adc
and
test
inc
mov
xchg
mov
aam
cmpsl
ret
mov
fistps
shl
mov
cs
and
rcll
inc
pop
imul
dec
jge
negb
pop
mov
imul
mov
sarl
add
repnz
xor
daa
mov
fsubs
andb
aam
mov
leave
mov
adc
insl
mov
jecxz
sbbl
movsb
out
cld
sub
adc
pop
mov
ja
pusha
inc
ss
into
aas
lcall
cmpb
xor
and
push
dec
rol
cmpsb
cltd
push
ja
and
rorl
jb
aaa
loope
inc
push
mov
negl
jmp
add
and
push
sbb
ljmp
sbb
outsb
and
xlat
jecxz
jb
inc
lahf
imul
in
movsl
aad
push
pop
leave
cs
movl
xor
sub
stc
adc
adc
xchg
lahf
pop
movb
sub
mov
mov
mov
imul
cwtl
daa
and
sub
fs
insb
lock
insl
faddl
mov
in
dec
jl
fldenv
fisubrl
dec
int3
movsl
or
mov
mov
xchg
outsb
out
imul
sub
ljmp
jo
and
repnz
jmp
or
push
xchg
packsswb
dec
loopne
xor
les
xor
nop
iret
cs
xor
fdivrl
pusha
ret
cmp
clc
sbb
mov
arpl
sbb
lea
repz
int
aam
fdivrl
sbb
xchg
not
aaa
add
pop
mov
js
inc
fsubrs
cmp
cmp
adc
push
or
sar
or
xor
subb
push
into
dec
pop
mov
loopne
inc
pop
fiadds
and
insl
inc
lahf
mov
inc
fimull
imulb
fsubrs
mov
les
addb
sbb
push
fwait
divl
cld
int3
xor
loope
xor
jmp
sbb
cltd
and
push
push
dec
mov
xor
push
dec
pop
mov
mov
xor
in
jo
cli
push
loopne
cmc
dec
pop
mov
mov
imul
lret
in
mov
addr16
inc
out
out
xchg
mov
hlt
and
gs
bound
mov
lock
ret
mov
cwtl
mov
xor
fdivrp
xchg
inc
pop
dec
mov
push
jle
inc
js
rcr
in
mov
fld
mov
jmp
xor
mov
sti
shl
xchg
pusha
mov
out
xor
add
push
popa
imul
push
jbe
xchg
je
xlat
imul
lahf
xchg
fdivrs
and
push
push
inc
cs
das
aaa
cmp
xchg
pop
sbb
call
pop
sub
stos
cmc
sbb
out
cli
movsb
popf
jbe
iret
leave
fcoms
repz
adc
mov
or
das
das
pop
and
mov
aad
stc
out
cmc
push
mov
movsb
subl
jae
std
pop
rorl
adc
addr16
aas
imul
add
loop
mov
mov
es
xor
mov
jg
data16
cmpsb
addb
pop
in
fldenv
popa
xchg
call
sahf
imul
es
cmp
mov
bound
cmp
xchg
mov
mov
jp
in
adc
jle
pop
inc
mov
mov
mov
lock
cmc
pushl
cmp
xchg
lea
dec
cmpsl
sbb
jmp
mov
jle
ljmp
test
lods
cmpsb
sbb
mov
jl
cmp
mov
ljmp
hlt
xlat
and
cmc
outsb
into
aaa
mov
adc
add
mov
hlt
outsb
cld
push
pop
inc
cwtl
mov
push
jmp
cmc
xor
inc
js
das
or
stos
stos
cmp
push
test
mov
enter
cmp
sbbl
mov
call
fistps
popf
push
test
ret
lret
in
jg
cmp
test
cmp
repnz
inc
scas
mov
add
mov
inc
ret
sub
shll
xor
xchg
jno
jno
inc
xchg
pop
cli
dec
jmp
sarb
sbb
jns
dec
mov
or
xchg
dec
out
xchg
std
mov
gs
lcall
jmp
xchg
mov
adc
cmp
das
ljmp
insl
adc
scas
add
cmpsb
mov
jns
roll
mov
jle
dec
sbbb
hlt
xlat
cmp
inc
dec
call
push
mov
into
push
inc
jp
in
mov
outsb
xchg
mov
push
stos
insl
shlb
xchg
add
mov
adc
ffreep
sbb
or
repz
daa
dec
mov
dec
lret
mov
movsl
mov
dec
xor
stos
rcr
ret
mov
imul
adc
sub
xor
xchg
push
sbb
int
xor
dec
test
cmp
add
inc
pusha
lods
mov
jecxz
mov
push
sub
and
xchg
inc
sbb
stc
loope
pop
cs
inc
adc
jg
xchg
orb
push
cmp
and
int3
cmpsl
ret
pop
ret
xchg
jnp
xchg
mov
inc
mov
ror
and
sub
jo
stos
shll
sbb
push
popf
jmp
cmp
or
outsl
xlat
cmpl
fcmovu
mov
mov
push
out
dec
aad
inc
sbb
insb
jp
add
int3
pop
shll
mov
add
cwtl
jg
int
mov
mov
pop
sbb
push
mov
sbb
icebp
mov
xor
sahf
out
push
cmp
inc
imul
sub
cmp
mov
clc
js
in
inc
mov
nop
out
push
pop
dec
xlat
insl
pop
outsb
add
inc
test
pop
stc
pop
adc
pushf
pop
stos
rcrl
es
mov
or
mov
aad
mov
rcrl
ljmp
test
mov
bound
ds
jnp
sub
int3
fyl2x
ret
push
sub
pusha
mov
es
mov
push
sbb
arpl
mov
cmp
push
cmp
fcmovnbe
fdivrl
xor
in
sub
adc
or
xor
nop
js
mov
loop
add
cltd
mov
dec
repz
mov
adc
pop
outsb
jmp
arpl
xchg
jmp
fs
inc
mov
jo
es
or
add
test
fldcw
inc
cmp
add
push
ret
jmp
in
or
push
repz
sbb
dec
pusha
arpl
aam
xor
adc
loope
dec
mov
and
mov
mov
daa
stos
fwait
in
scas
cli
test
fdivl
mov
push
aad
mov
fdivs
push
mov
cld
and
pop
or
adc
insl
fnstenv
and
add
in
cmp
imul
pop
xor
fwait
xchg
jge
mov
or
lock
push
ss
scas
jne
sbb
mov
dec
out
scas
cmp
mov
jns
mov
push
add
or
adc
enter
hlt
lret
mov
mov
fiadds
mov
and
test
jge
and
pop
flds
lods
mov
cmp
fwait
aad
subb
cmp
sarb
cmp
mov
in
mov
cmc
mov
lods
outsb
notb
in
into
jo
lock
xorb
sbb
mov
xor
jns
sahf
in
dec
mov
out
add
in
fists
sub
pusha
cs
mov
shrl
leave
imul
aas
and
loop
sbb
add
in
and
xchg
incb
imul
insl
adc
jp
lds
pop
pop
mov
xchg
in
mov
scas
mov
sub
xor
mov
je
cmp
push
mov
push
xorl
dec
mov
adc
mov
jmp
cmp
ss
xchg
mov
sti
outsb
lds
mov
gs
sbb
xchg
push
sub
and
shlb
push
test
fimuls
or
rcl
movsb
popa
or
loop
xchg
sarb
xchg
or
pop
and
sub
and
pop
jp
inc
and
iret
cli
add
fisttps
movsl
xor
jge
push
xchg
rcrb
and
and
push
popa
aaa
movsb
enter
add
jle
mov
mov
mov
cltd
sbb
inc
lock
xor
addw
ljmp
jns
adc
inc
popa
push
shl
scas
mov
leave
xlat
fistpl
fisttps
iret
fsubr
scas
cwtl
cltd
aas
aad
aaa
movsl
daa
mov
inc
or
push
adc
pop
jb
jg
fisttps
in
pop
pop
xor
mov
iret
cmp
insl
push
mov
lods
inc
fimuls
rol
jns
push
push
pop
fsub
popf
dec
jo
in
push
xchg
xor
lds
pop
shlb
pop
adc
add
lds
ror
int3
push
mov
mov
out
aas
xorb
pop
cmc
add
add
sbb
lret
inc
mov
xchg
xchg
gs
cmc
sbb
andb
lods
push
cmp
push
or
imul
sub
dec
ret
fsubl
pop
cmpsb
iret
jns
fimuls
add
das
xor
js
int3
mov
addps
clc
into
pop
adc
add
shr
test
mov
scas
pop
push
in
jns
xchg
add
dec
jbe
dec
mov
aas
rcll
cwtl
jb
mov
js
lret
mov
and
fistpll
sub
loope
mov
xlat
mov
xor
and
fs
popa
dec
mov
inc
sbb
stc
jnp
test
shlb
cmp
and
addr16
add
pop
mov
or
into
inc
mov
fstpl
popf
ficomps
aad
cmc
icebp
jnp
jb
cs
loopne
movsb
lcall
sub
out
push
mov
jo
xchg
pop
sub
in
fdivrl
in
test
popa
pop
mov
sub
fwait
lcall
dec
xchg
push
sarl
clc
xor
mov
mov
mov
addb
and
mov
cmp
push
and
dec
in
or
test
rcrb
in
sbb
push
imul
outsb
and
aaa
hlt
xchg
cli
stos
dec
adc
dec
sbb
push
mov
dec
test
popa
xor
imul
in
cmp
lods
push
lods
dec
popf
popf
push
sub
int3
shll
sti
jmp
sti
cmpsb
sub
xchg
cli
adc
and
push
push
adc
mov
outsb
jecxz
sahf
mov
cmp
and
pop
cld
mov
in
hlt
xor
loope
jno
xlat
idivb
cmp
mov
push
fs
jge
sbb
fists
mov
in
cmp
and
push
sbb
stos
or
stc
dec
or
push
xchg
orb
inc
leave
xchg
sub
imul
pop
mov
xchg
test
sub
subl
pop
hlt
pop
lea
jecxz
pop
ds
lods
cmpsl
mov
sub
roll
xor
mov
mov
xor
idivl
insb
inc
scas
add
inc
and
cli
cltd
test
adc
mov
fsubs
cmp
mov
pop
push
pop
add
pop
jae
push
ja
ja
lock
cld
lods
negb
fdiv
adc
jg
add
aam
push
leave
jge
dec
insl
adc
movsl
subl
pop
repnz
or
shlb
decl
pushf
sub
or
bound
popa
cld
and
mov
ret
push
sarl
mov
and
xchg
adc
sub
mov
fsts
xor
bound
inc
inc
dec
xchg
movsl
xor
ffree
sub
inc
out
into
mov
fisubrl
xchg
xchg
stos
mov
dec
jle
adc
imul
push
cmp
inc
xchg
pop
dec
xor
add
insb
dec
mov
add
jge
mov
sahf
pop
inc
mov
pushf
jl
mov
pusha
or
xchg
mov
aad
inc
xchg
negl
xor
add
lock
push
sub
jle
imul
pop
data16
add
or
dec
addb
cmpsb
mov
out
cmp
lret
add
mov
sahf
jno
sbbl
leave
das
pushf
outsl
stc
popf
xorl
sub
test
pop
sub
xor
movsl
mov
ljmp
cmc
mov
mov
cmpsl
movsl
std
fcomps
das
aam
in
push
and
lret
mov
xor
add
and
xchg
pushaw
push
dec
and
xchg
jmp
sub
xchg
inc
xchg
xor
xor
arpl
aad
dec
std
xchg
fdivs
sub
repnz
test
xchg
inc
rcr
sub
subb
in
cmp
adcb
arpl
pop
xchg
push
cmp
ror
int
call
js
cmp
into
xchg
dec
arpl
jae
mov
in
pop
mov
adc
jmp
or
dec
ljmp
lcall
mov
cli
mov
mov
addr16
mov
cmc
insb
sbb
cmc
out
cmp
movsl
dec
sub
test
cli
int3
test
scas
xchg
rcrb
jae
jp
pop
mov
mov
inc
int3
repnz
inc
leave
add
lahf
push
dec
call
mov
cmp
pop
imul
add
aas
push
cmp
pop
add
les
inc
pop
stos
stos
fsubr
leave
mov
repz
cs
mov
clc
je
mov
xor
and
repnz
outsl
mov
jl
add
loop
jno
lods
xor
es
jecxz
inc
dec
jno
xchg
adc
fs
cmpsb
adc
ljmp
mov
outsl
jne
std
inc
cmp
and
aas
pop
lods
lock
movsl
das
mov
test
push
xchg
hlt
mov
pop
jg
lods
addr16
push
jb
xor
aaa
xchg
xchg
push
sub
pop
jo
loopne
mov
push
enter
xchg
xchg
lock
dec
jmp
stos
or
test
xchg
pop
lea
cmp
js
and
dec
mov
and
jg
inc
sub
xchg
dec
pop
mov
mov
push
aad
cmp
mov
xor
jnp
or
xchg
fidivs
popf
loopne
jb
call
push
push
push
mov
cmp
std
pop
xor
xchg
mov
dec
xorb
rcrb
call
mov
popf
mov
movsl
push
sbbl
call
xor
dec
jns
test
loopne
pop
xchg
in
repz
push
sub
cmc
fcompl
mov
or
fnstenv
aaa
inc
roll
dec
fmuls
inc
push
cmpsb
mov
add
filds
sar
mov
mov
xchg
pop
add
hlt
xor
cmp
add
test
addr16
mov
stc
and
pop
xchg
popa
pop
inc
daa
pusha
cmpsl
int3
je
aam
push
xor
sub
out
mov
inc
lcall
out
pop
enter
pop
icebp
pop
xchg
push
push
pop
cld
test
jecxz
jnp
les
dec
cmp
arpl
popf
data16
jae
int
inc
xchg
push
shll
dec
rcrb
shll
repnz
je
adc
inc
adc
xor
xchg
inc
xchg
sahf
lret
mov
inc
inc
adc
push
les
loop
xor
pop
divl
test
adcl
jl
repnz
cwtl
push
rclb
or
pushw
mov
dec
or
jp
mov
aad
push
mov
cmp
in
mov
pop
scas
rcl
jb
test
movsb
sarb
int
pop
ret
or
mov
jno
and
adcl
out
sahf
in
aas
pop
mov
push
mov
mov
mov
aas
push
add
jo
dec
popa
enter
sub
mov
add
fcmovnu
or
dec
insb
inc
sub
imul
jmp
xor
cmp
mov
jns
pushf
pop
push
mov
adc
pop
xchg
pop
cmpsb
ja
lock
data16
in
dec
mov
addr16
outsb
je
nop
ja,pt
out
ja
nop
sub
cwtl
mov
das
testl
stos
mov
mov
and
inc
adc
test
and
xchg
inc
imul
stos
adc
ja
sub
clc
lcall
test
lahf
lock
cmp
adc
push
pop
or
scas
fdivl
out
push
or
dec
jo
or
mov
movsb
mov
sbb
cmp
sbb
in
and
icebp
adc
xchg
push
dec
jge
xchg
loopne
test
popf
fdiv
stc
icebp
jle
push
movsl
in
clc
test
push
jno
sbb
outsb
dec
mov
ss
dec
mov
inc
stos
rep
movsl
sub
or
daa
cltd
adc
addr16
dec
pop
or
imul
lret
add
rcl
out
xor
pushf
shlb
stos
dec
loope
cmpsb
shlb
scas
lock
xor
dec
cmp
lods
xor
cmpsl
fmuls
adc
sbb
mov
cmp
inc
cld
cld
mov
neg
leave
inc
mov
clc
sub
lds
pop
sub
lahf
fidivs
pop
shlb
or
gs
xchg
xchg
jb
mov
shll
stos
and
jmp
fs
bound
aam
rcl
in
loope
fwait
insb
xlat
rcr
push
ss
lret
or
insl
push
mov
out
shlb
fistpl
jae
cmp
stos
addl
out
clc
sbbl
pop
cli
xor
in
fcomps
or
mov
icebp
jae
add
xor
xchg
insl
cwtl
cs
orb
sub
fsubrs
pushf
jmp
int
add
sbb
cmp
adc
pop
inc
sahf
sahf
ds
js
subb
pop
leave
jmp
cmp
pop
and
sbb
inc
nop
bound
ljmp
xchg
cmp
aam
arpl
sarb
and
outsl
sbb
sbb
insl
push
bound
fadds
lahf
dec
xor
xor
mov
gs
and
dec
mov
mov
cmp
movsl
xor
xchg
mov
mov
mov
popf
fs
rolb
je
mov
sub
xor
push
sbb
fisttpl
and
mov
inc
or
xchg
pop
mov
adc
pop
cmp
pop
ret
mov
out
xchg
xchg
lds
nop
and
mov
mov
enter
mov
sbb
out
jnp
mov
das
jle
test
inc
inc
subl
cmpsb
inc
clc
lcall
push
sbb
push
push
mov
nop
pop
sahf
mov
lods
negb
sbb
orb
stos
out
stos
sub
aad
adc
stc
sub
push
jns
fneni(8087
pop
sub
je
ja
adc
incb
mov
sarb
push
xor
mov
sub
mov
ljmp
xchg
popa
into
push
in
pop
fisubs
aam
divb
pushl
pop
negb
leave
inc
sahf
fistpl
pop
movsb
pop
pop
std
cmpl
stos
or
test
scas
insl
inc
jo
pop
mov
xchg
push
jmp
fdivp
mov
mov
clc
leave
jbe
ficomps
dec
std
jns
std
pop
movsl
ja
sub
push
pop
xchg
lret
fistpl
test
dec
dec
pop
add
push
inc
mov
cmp
in
adc
test
dec
pop
mov
cld
dec
aaa
mov
ja
mov
jno
mov
cs
scas
mov
mov
xor
addr16
dec
loop
pop
inc
lret
scas
jne
scas
cmp
add
pop
xchg
push
test
jb
fcomps
pop
int
cltd
daa
add
cmpb
jo
dec
test
cmp
faddp
mov
test
push
cmp
mov
repz
outsl
push
adc
cmp
jnp
pop
stos
leave
test
leave
push
or
mov
es
xchg
sub
mov
push
lods
and
xchg
jecxz
or
dec
aas
or
movsl
icebp
push
push
mov
fiadds
jnp
add
in
push
and
ds
ficompl
sub
bound
es
pop
lret
sbb
aad
sbb
cli
and
pop
cmpsl
add
fcom
dec
xchg
loope
cmpsb
lahf
and
or
mov
inc
jl
and
cmpl
or
popf
loope
mov
fsts
lods
xchg
mov
call
mov
ljmp
add
in
daa
stos
movsb
sbb
push
inc
pop
in
inc
stos
mov
push
add
mov
inc
xor
outsb
pop
jns
fwait
sub
mov
insb
dec
subl
mov
outsb
arpl
dec
shlb
mov
pop
cltd
fs
test
xlat
push
mov
mov
inc
loope
mov
xchg
push
xor
lock
loope
add
xchg
add
pop
out
mov
jmp
data16
push
lock
out
cmp
dec
test
sbb
sub
cld
sti
call
pop
inc
mov
lea
mov
cmp
shlb
inc
inc
push
clc
xchg
addb
je
loop
mov
jmp
leave
mov
and
mov
xchg
aad
shrl
je
adc
or
and
push
xor
in
dec
cli
xor
sbb
insl
inc
cmp
in
and
stos
or
cmp
test
addr16
cmp
mov
xchg
mov
and
fistps
stc
push
clc
notl
rclb
fnstcw
mov
or
adc
pop
or
sbb
adc
arpl
xorb
push
mov
sbb
dec
lea
jecxz
mov
pop
xor
and
xor
adc
mov
stos
add
pop
sbb
mov
lret
jle
and
lret
and
scas
dec
in
lret
dec
cli
add
inc
xor
add
push
not
jae
jae
lods
rol
and
xor
es
fimull
dec
pop
inc
or
sbb
int3
cwtl
gs
xchg
repz
or
mov
cmpsb
lods
sub
js
inc
sub
mov
jmp
xor
fwait
les
mov
insb
in
push
cmp
push
inc
repnz
add
rcl
add
jecxz
mov
cmp
jns
push
fscale
mov
mov
insb
and
dec
push
sarl
in
mov
out
xlat
adc
mov
push
cltd
lock
mov
mov
push
subb
xchg
mov
mov
xchg
push
jmp
pop
je
sbb
mov
aam
add
fdivrl
arpl
jns
lcall
pushf
adc
mov
arpl
aaa
negb
jns
rorb
jmp
in
mov
push
cwtl
xchg
ja
push
mov
mov
adc
sahf
and
mov
mov
out
out
xchg
shlb
and
data16
jmp
ljmp
xor
stos
in
xor
and
lahf
lds
jp
sub
sbb
xor
inc
adc
cmp
mov
xchg
movsl
arpl
xor
mov
cmp
jbe
ret
sti
inc
mov
les
shrl
dec
out
push
or
adc
aas
inc
loop
neg
std
jo
push
jl
fldenv
sub
adc
add
and
and
in
lahf
fsts
mov
inc
mov
nop
loope
sub
mov
cmp
loopne
test
xor
and
repnz
stos
hlt
adc
daa
cwtl
push
mov
sub
xchg
in
ret
repnz
in
ss
iret
or
push
add
shll
and
xor
fsqrt
mov
pop
pop
gs
daa
aam
mov
rolb
loope
push
add
fs
orb
shrl
sub
in
sahf
add
test
mov
push
sub
xchg
iret
inc
sub
scas
cmp
arpl
jg
fsts
scas
fucomp
out
sbb
xchg
inc
ja
pusha
mov
mov
jne
mov
cli
orb
fucomi
movsb
aad
cmpsb
adc
mov
out
xchg
mov
sahf
cld
xor
dec
jl
ret
sub
aam
std
mov
outsb
jecxz
add
shld
mov
mov
scas
mov
out
adc
pop
out
pop
pusha
out
pop
in
sbb
rol
mov
loop
adc
inc
out
jmp
jmp
xchg
ljmp
dec
loop
adc
outsb
div
xchg
push
cltd
cmp
rcrb
rorb
mov
lret
sub
stos
sbb
addr16
mov
xchg
xchg
xor
gs
inc
bnd
addr16
inc
rcl
and
or
sarb
out
pop
js
jae
repz
mov
sub
mov
xchg
push
mov
mov
jae
xchg
push
pop
mov
dec
mov
pop
and
imull
sbbb
aam
inc
cmpsb
in
and
adc
movsl
push
int
test
xchg
out
fbstp
test
les
fs
mov
sub
inc
js
call
lea
cs
adc
jp
fldenv
in
loop
insl
xchg
into
lea
sbb
sbb
push
xor
jmp
js
mov
int3
lcall
mov
imul
inc
mov
idivl
mov
stos
das
push
lfs
mov
cli
aaa
and
sbb
pop
into
mov
or
and
or
bound
insb
and
pop
jbe
adc
xchg
aas
les
imul
jbe
call
lret
push
sahf
lods
int3
idivb
les
lahf
dec
push
pop
loopne
jl
adcl
push
and
call
jne
insl
std
sub
sbb
sbb
cmp
mov
test
jle
push
xlat
jns
dec
aas
xchg
adc
jg
push
sbb
mov
push
push
adc
int
mov
xorl
stc
out
and
leave
adc
xchg
loopne
jp
pushf
push
out
insb
pop
sbbl
sub
sbb
cmp
and
out
out
fidivl
cmc
mov
loope
insb
mov
add
pop
jb
adc
fnstcw
adc
cwtl
cmp
loopne
xchg
cwtl
mov
ret
xchg
movsb
pushw
scas
out
mov
jecxz
mov
xor
fmuls
clc
sbb
xchg
aad
ss
jmp
js
mov
or
aas
subl
dec
mov
lds
lret
mov
jae
popf
pusha
xor
insb
push
xor
orl
out
fidivs
ret
cmp
lods
xchg
inc
jg
cwtl
and
stos
adc
jge
das
fdivl
inc
sub
lods
ret
mov
pop
dec
fldcw
sahf
cmc
data16
out
mov
decl
push
jno
mov
sbb
sarb
clc
xchg
jo
hlt
inc
cwtl
in
pushf
stos
repnz
mov
cld
scas
sub
jne
fnstcw
stc
test
jae
sbb
add
orb
insb
data16
out
lea
pop
and
repz
mov
xchg
mov
insl
sub
lods
aad
fsubr
xor
push
sbb
inc
or
xchg
pop
call
and
cmc
inc
add
jo
nop
sbb
icebp
mov
or
loop
stos
cmovb
dec
dec
jp
dec
or
popa
lcall
cmp
sub
repnz
loope
mov
mov
aad
stos
cmovge
push
push
in
in
std
stos
pusha
jmp
das
dec
ret
push
lahf
sub
push
jbe
add
lods
popa
pop
sub
lahf
jp
aam
sub
cvtpi2ps
mov
inc
fisttps
or
add
or
pop
arpl
inc
mov
cmp
add
mov
or
test
mov
add
push
sbb
adc
pop
popf
mov
dec
xchg
mov
push
lcall
xor
aam
mov
lcall
aas
jbe
xchg
fs
mov
cli
sbb
xor
mov
sahf
pop
ss
xchg
nop
aas
lret
in
ds
frndint
add
dec
or
push
push
mov
lcall
jno
test
into
into
push
push
pusha
jge
cli
cmp
test
ret
jecxz
xor
shrb
xorl
sbb
push
lahf
push
cmp
mov
pop
shrl
or
inc
or
rcr
fwait
jmp
ffreep
fnsave
fcompl
cs
dec
lahf
ret
lret
mov
jb
pop
outsl
insb
nop
div
mov
mov
mov
xchg
jg
dec
push
sbb
in
stos
sbb
out
sub
cmpl
jb
push
jno
fdivs
nop
mov
addr16
sbb
add
mov
inc
xor
lret
push
xchg
test
popf
inc
jl
sub
jb
fcomi
mov
fmull
out
cld
loope
pusha
cmpsl
shl
sbb
sbb
mov
inc
adcl
and
pop
gs
aad
sbb
fdivp
dec
loop
mov
or
jbe
lcall
into
add
push
or
cs
sti
insl
jno
mov
popf
out
sub
jne
cmpsb
jnp
pop
fiadds
lahf
sub
push
mov
pusha
int
cltd
jbe
jmp
imul
sbbb
sbb
stos
mov
add
inc
out
push
mov
js
mov
aas
imul
dec
loope
data16
cmp
iret
insb
mov
sbb
cmp
adc
cli
push
dec
aas
xor
ret
std
lods
loopne
or
lea
xchg
test
sahf
jne
int
popf
or
adc
lret
ret
dec
sbbb
push
xchg
mov
adc
popf
ds
and
in
int3
inc
xchg
jecxz
sahf
mov
add
adc
sahf
out
cmpsl
mov
bound
pop
push
popf
xor
das
hlt
jno
or
lods
and
dec
mov
fists
fists
xor
sub
adc
ja
xor
and
or
fbld
or
push
bound
cmp
in
mov
movsb
stos
xchg
push
push
scas
fdiv
push
jge
xchg
push
addr16
mov
inc
pop
int3
leave
jbe
add
and
adc
test
je
addb
lods
add
xchg
dec
xchg
mov
xor
push
fwait
cmp
xor
jg
jge
ja
sbbl
int3
cwtl
adc
xor
or
hlt
adc
scas
cmp
test
jbe
add
jl
xorb
mov
leave
and
enter
std
imul
mov
flds
imul
aam
jecxz
adc
jo,pt
and
add
insb
cmpsl
jmp
push
pop
cwtl
dec
nop
cmp
pop
out
call
pop
pop
pop
in
xor
xor
cmp
push
rcr
xlat
fdivs
mov
cmpsl
push
dec
arpl
lcall
push
icebp
mov
jp
js
out
sub
insl
mov
outsl
xchg
insb
xchg
xor
push
add
je
pop
popa
lahf
fisttpll
sub
sbb
hlt
loop
sbb
insb
adc
ret
inc
adc
cmpsl
in
add
fbld
clc
arpl
movsl
xor
push
push
imulb
inc
orl
lods
pop
sbb
mov
xchg
pop
xor
mov
sbb
ja
ljmp
sarb
xchg
pop
add
mov
int3
inc
pop
pusha
out
repnz
sub
aaa
les
mov
jmp
sub
iret
mov
aaa
mov
mov
dec
cmpsb
cmpsb
mov
fwait
jo
sub
inc
push
out
jbe
jp
outsb
mov
fwait
aaa
xor
sub
or
sbb
mov
in
mov
push
add
jecxz
sub
test
lret
cmp
push
xchg
mov
call
es
insb
dec
fbstp
mov
push
lahf
push
clc
push
cwtl
push
xchg
pop
mov
ljmp
mulb
xchg
cmp
fsub
imul
in
out
pop
xchg
add
push
ds
call
ja
inc
repnz
cmpsl
dec
mov
imul
andl
jle
push
cmpsb
pop
mov
mov
aad
lret
xchg
addl
ds
sbb
dec
jecxz
imul
mov
repnz
outsl
insl
int3
dec
push
cvtps2pi
jp
shrl
popl
pop
lods
into
sti
dec
arpl
jo
ficoml
mov
repnz
lret
mov
dec
test
aaa
dec
int3
mov
jbe
fwait
mov
lods
popa
mov
popa
sub
fimuls
loopne
ja
dec
push
push
and
clc
mov
adc
movb
dec
pusha
mov
lock
flds
inc
jbe
dec
xchg
icebp
loope
xchg
inc
push
test
mov
cmp
xor
test
out
xchg
int3
roll
fnstsw
bound
and
mov
sub
lcall
fucomp
loop
popa
xlat
mov
mov
jge
pop
lds
test
mov
add
stos
in
push
mov
xchg
push
bound
add
div
mov
popa
xchg
pop
mov
and
aaa
pop
mov
pop
add
jp
xchg
in
and
jecxz
scas
stc
shrl
roll
int3
add
cmpl
cltd
mov
xor
out
clc
jle
mov
mov
add
imul
gs
lock
ljmp
xchg
fildl
arpl
out
imul
int
cli
jno
lret
add
in
push
sub
ljmp
and
in
loopne
inc
clc
popa
call
cmpsb
push
movsl
loope
sarl
xchg
ljmp
rcr
jmp
outsb
outsl
cmc
lahf
movups
mul
and
into
pushw
subl
jo
inc
sbb
xor
les
adcl
and
jbe
rcrb
jae
mov
push
dec
lds
xchg
aam
loopne
pop
mov
and
mov
scas
ffreep
cld
jb
cltd
xor
xlat
movsl
jo
xchg
rolb
dec
mov
iret
les
mov
pushf
insb
or
inc
shlb
sub
std
in
aaa
fwait
inc
push
ljmp
adcl
lds
pop
movsl
jmp
sbb
and
cmp
push
pop
jecxz
test
scas
sub
daa
push
ficomps
aam
inc
xor
dec
out
test
stos
insl
push
push
int
lods
fadd
in
vpbroadcastw
sub
and
push
pop
in
push
jno
cmp
addb
scas
push
loopne
or
jmp
pop
push
outsb
fsubp
fcomps
enter
cmc
fistpl
inc
sti
sub
add
add
lcall
sub
mov
lahf
cltd
rol
mov
xchg
sbb
push
pop
int
sarl
hlt
pop
cmp
shlb
lods
ret
cmp
popaw
cwtl
test
mov
add
push
xchg
jmp
out
pop
clc
cmp
mov
js
out
push
jns
jmp
jmp
xchg
sti
inc
outsb
scas
jno
notb
xorb
jnp
mov
xor
popa
iret
and
jnp
fisubs
nop
pushf
gs
pop
xlat
mov
bound
add
fdivr
cli
insl
stos
int
adc
scas
xor
or
aaa
cmp
xor
cmpsl
add
dec
adc
sbb
outsl
dec
pusha
xchg
shlb
and
sub
jg
lret
inc
jecxz
jmp
mov
cltd
ret
mov
jg
and
mov
lods
add
clc
lcall
push
jbe
and
aam
xor
sahf
popf
xor
outsl
sbb
sbb
repz
adc
insb
fistpll
or
in
xchg
jmp
jmp
push
push
addr16
mov
lea
cmp
lods
adc
divb
cltd
daa
xchg
loopne
lret
jns
insl
mov
jae
jge
in
add
leave
add
pusha
dec
mov
jmp
xchg
pop
cmp
insl
cmpsb
loope
adcl
mov
out
aad
movsl
push
test
out
and
jl
add
aad
dec
out
sbb
xor
mov
scas
scas
mov
fisttps
in
sub
movb
lcall
inc
ljmp
daa
sbb
mov
xchg
js
cmp
dec
loopne
xor
and
xchg
shrl
rcll
pop
mov
sub
push
adc
push
sub
sbb
sbb
cmp
lock
jl
or
mov
jle
xorb
fstpl
mov
pop
xor
or
mov
jg
scas
das
test
sub
cltd
mov
push
xchg
or
xchg
push
jmp
ljmp
jns
or
andb
xchg
jno
testl
and
adc
lock
jecxz
inc
imulb
cld
dec
mov
push
lods
in
xlat
fs
ret
pop
stc
sbb
sbb
mov
jecxz
dec
pop
sbb
das
es
add
out
adc
lock
mov
adc
into
cltd
adc
in
or
ja
pop
pop
into
mov
jl
pop
add
dec
aaa
jno
or
mov
ja
pop
ss
or
cmp
addb
jns
push
shrb
inc
jmp
fwait
mov
inc
movsb
push
imul
jne
mov
xchg
and
lahf
out
push
scas
aaa
mov
test
jbe
xlat
dec
mov
stos
leave
xlat
jmp
aad
pop
sbb
inc
fsts
test
fdivrs
lret
jae
sbb
inc
ficoms
jns
xor
cld
cli
cmp
add
add
cmp
into
nop
pop
mov
scas
xchg
sub
gs
lret
ror
inc
cmp
arpl
pop
mov
and
adc
aas
sbb
mov
mov
xor
test
data16
jecxz
outsl
or
xor
int3
mov
dec
xor
push
jecxz
adc
pop
dec
inc
sbb
repz
gs
push
rolb
and
andl
xchg
xchg
sbb
add
jl
leave
xor
iret
add
call
arpl
adc
pop
jns
adc
inc
mov
cmpsb
or
push
ffreep
cltd
mov
daa
xchg
test
sti
fcompl
mov
jno
or
and
pushf
mov
es
adc
lret
push
movsb
jecxz
pop
mov
inc
les
xor
into
or
push
andl
loopne
lock
cmp
ja
inc
lcall
out
into
adc
fcom
arpl
bound
xor
fimull
jg
cltd
std
fwait
data16
cltd
cmp
and
pushf
mov
or
xorl
jae
adc
popf
sbb
pop
jne
xchg
add
nop
add
cmp
ss
ret
movsb
das
and
or
lcall
fiadds
push
lcall
test
mov
call
xor
push
lcall
sub
mov
fs
pushf
adc
inc
inc
adc
inc
out
push
and
cmp
mov
add
mov
divl
xchg
mov
pop
xchg
sbb
xor
cmpps
fistpll
cmp
xchg
xchg
sarb
xor
inc
pop
out
and
js
cmp
cmp
insb
hlt
mov
std
pop
aas
pop
aas
stos
sub
into
out
jle
imul
les
dec
inc
push
and
jno
add
and
cltd
cmp
mov
push
mov
jo
insb
ljmp
clc
mov
pop
out
add
testl
lods
push
cmp
push
mov
sti
jns
loopne
outsb
lock
loope
xor
adc
pop
dec
xchg
ljmp
lods
push
cmpsb
sub
mov
orl
add
imul
push
cld
jl
mov
pop
jl
test
lods
outsb
xor
xor
scas
scas
insl
sbb
fstl
mov
cld
and
shll
fidivrl
and
sahf
mov
das
icebp
bnd
sub
sub
sbb
ss
pop
dec
adc
push
loope
xchg
cmp
aad
pop
pop
lock
mov
andb
stos
cmp
in
xchg
cmpsl
rcr
outsb
pop
jb
loop
inc
test
aam
add
xchg
addb
xchg
test
shlb
push
pop
jno
scas
movsb
cmc
movsl
pusha
push
push
mov
mov
sbb
mov
arpl
adc
mov
xchg
adc
or
and
in
cmovg
sub
hlt
outsl
stc
xor
mov
fidivl
in
dec
inc
inc
xchg
jo
les
out
fstl
je
out
mov
push
xor
aam
lcall
in
ret
and
sub
or
and
pop
rcrl
das
mov
stos
idivl
jno
hlt
sbb
stos
sub
loop
shrl
pop
inc
sub
pop
dec
xchg
adc
mov
cli
mov
xorb
dec
lods
fchs
mov
rcl
iret
mov
addb
dec
andl
leave
rorl
push
pop
jle
rorl
jbe
test
ds
dec
test
mov
clc
mov
fbld
or
jle
dec
das
dec
fstl
sub
xchg
icebp
pushf
orl
xor
xchg
jecxz
add
mulb
negb
int3
cmp
cmpsb
or
and
jmp
cld
enter
mov
call
jne
dec
sub
es
fiaddl
jns
fisubs
stos
dec
or
jbe
mov
dec
push
push
xor
ss
xchg
dec
xor
add
or
pushf
mov
frstor
jge
out
mov
add
lret
dec
orl
adc
jl
cmc
insl
push
dec
lahf
shlb
ljmp
push
shl
xchg
cmp
adc
mov
jmp
sub
sbb
mov
inc
mov
jno
jno
inc
or
sub
lods
inc
divl
sbb
mov
jno
push
and
jecxz
cld
mov
dec
pop
clc
mov
fisttps
mov
inc
jne
fsts
adc
push
fbstp
addb
dec
pop
mov
xor
not
mov
lahf
es
out
inc
test
sbb
push
pop
test
xchg
push
ss
or
aas
cmp
jle
adc
cli
inc
popf
jb
pop
xor
mov
xor
aaa
dec
out
loopne
push
bound
push
mov
xchg
fstpt
adc
jp
enter
xchg
mov
mov
jae
mov
or
jecxz
pop
cli
cmp
jecxz
mov
dec
adc
leave
xor
movsb
inc
loop
xorps
mov
repz
or
outsb
cmp
dec
pop
lahf
add
sub
gs
inc
or
adc
sub
fbstp
dec
lret
fldt
jo
movsb
js
jns
sbb
pop
adc
lods
cli
jae
or
popa
xor
sahf
cltd
mov
and
outsl
push
jle
sti
lods
call
jecxz
lods
mov
sub
cmp
loop
arpl
cli
fcmove
jns
aaa
sub
cld
jp
cmpb
sub
xor
enter
add
in
test
fwait
push
jb
sbb
jno
loopne
xor
leave
cmpsw
adc
or
xor
inc
dec
aam
cwtl
jecxz
mov
sub
pop
pusha
jl
fs
push
push
aad
mov
rcrl
adc
jb
rorb
pusha
lret
inc
dec
push
inc
fidivs
pusha
ret
sti
adc
and
in
jne
cmp
cmp
add
bound
jmp
addr16
xchg
mov
bound
jecxz
push
jno
out
push
aaa
ret
jae
fdivs
inc
jae
pop
roll
mov
push
inc
movsb
inc
cli
bound
outsl
xor
mov
and
cmp
pop
cmp
in
xchg
sti
push
adc
and
lock
scas
daa
dec
cwtl
mov
cli
stos
sbb
jno
out
cmpsb
push
push
arpl
in
add
daa
mov
in
cmc
in
fldl
popf
ss
loope
push
sahf
adc
pop
add
xor
or
mov
jb
dec
xor
xorb
test
and
xchg
negl
mov
jmp
add
stc
rcr
sbb
xor
cmpsl
aam
dec
push
andb
cmp
ljmp
enter
shrb
jecxz
mov
fstps
test
lcall
loop
loope
mov
pop
push
stos
sbb
add
dec
push
outsl
cwtl
shrl
imul
pop
cltd
sti
mov
inc
push
scas
int
sbbb
xchg
test
jbe
rcrl
in
dec
mov
mov
xlat
das
ja
fsub
imul
stos
jo
jb
push
cld
xchg
stos
lret
rep
sub
scas
xchg
decl
and
mov
push
inc
mov
xor
fwait
out
push
mov
xchg
or
mov
clc
mul
rol
sub
mov
das
fwait
or
lcall
iret
fdivrl
mov
adc
fwait
sub
popf
sbbb
add
dec
addr16
mov
cmp
mov
cmp
int3
outsb
fcoml
loopne
sbb
test
mov
stos
jecxz
inc
sub
dec
test
shll
mov
push
jge
call
mov
xor
or
sar
fstpl
xor
xchg
jbe
icebp
inc
jp
mov
cmp
xchg
sbb
enter
mov
mov
pop
mov
pop
sub
testb
push
popa
popa
mov
test
inc
test
jg
iret
pop
hlt
aam
sub
inc
jle
mov
scas
sbb
jp
mov
addr16
hlt
or
xor
mov
test
bound
movb
je
push
in
xor
and
fdivs
pop
adc
inc
fdivp
int
lea
aaa
jne
ret
pop
jnp
xchg
fs
push
cmpsl
jp
sub
icebp
ljmp
loop
outsl
mov
cmp
sub
fldenv
and
in
andl
ret
inc
cmp
inc
dec
pop
xchg
xchg
add
mov
mov
stos
add
push
je
icebp
add
mov
cmpsl
and
inc
bound
andl
pop
mov
pop
repz
daa
loope
push
mov
imul
mov
inc
loopne
xchg
lds
movsl
add
movsb
add
xchg
push
inc
lahf
sarl
jno
fsubrs
inc
push
mov
in
push
popf
je
push
mov
xchg
in
mov
sbb
fstl
push
mov
cwtl
lods
xor
ss
call
mov
out
mov
mov
or
out
div
ss
cltd
sahf
inc
xchg
idivl
pushl
add
mov
xor
jbe
xor
fstl
cli
mov
sub
mov
adc
stos
jge
jns
stos
repnz
sbb
or
sub
adc
or
lods
dec
sbb
xor
cmc
out
loope
jns
adc
adc
or
in
jno
mov
sbb
pop
outsl
fdivrs
xor
in
fdivrs
sti
mov
out
dec
pop
jle
dec
pop
in
mov
ss
xchg
xchg
sub
push
mov
movsl
mov
pop
xchg
rcrl
cmp
out
adc
in
add
int3
jo
adc
dec
loop
aaa
mov
jne
shlb
mov
arpl
fnstenv
cld
repnz
shrl
pop
fimuls
insb
cltd
test
or
xor
inc
mov
xor
pop
sub
or
jae
out
xchg
inc
adc
cmp
ficoms
rcrl
into
fucom
jno
push
movsl
cwtl
cmp
std
jne
push
mov
cs
jl
ds
inc
and
add
or
mov
push
push
aaa
test
xchg
pushf
pop
arpl
dec
out
dec
adc
pop
je
dec
call
out
or
xlat
jbe
into
rolb
cltd
fs
jnp
insb
test
cs
sahf
mov
out
xor
pop
pop
mov
lock
dec
ss
or
pop
fnsave
or
mov
inc
scas
fldl
out
jg
mov
cmc
push
ret
popa
jnp
and
out
pushf
es
jg
push
insb
cmpsb
out
push
pop
jmp
addb
mov
mov
push
dec
inc
lret
iret
loop
mov
gs
cmp
popa
outsl
out
sti
jg
jmp
dec
push
add
fidivs
push
scas
scas
cld
dec
jg
insl
inc
aaa
and
mov
scas
add
in
add
inc
stos
adc
aad
xchg
jnp
aad
adc
mov
jns
enter
aad
and
sbb
outsb
movsl
stc
push
or
jne
xchg
repz
sub
pop
nop
dec
mov
stos
les
inc
pusha
push
cltd
adcb
das
lds
lds
stc
pop
aaa
aas
repz
lock
sbb
push
dec
stos
add
repz
leave
xchg
jmp
jbe
mov
or
test
and
mov
notb
push
loopne
fidivrs
mov
push
add
andb
mov
push
xchg
imul
sahf
shrl
je
mov
mov
bound
and
cmp
out
stos
ret
cmp
dec
lret
ror
nop
adc
pop
nop
dec
or
mov
sbb
pop
outsb
adc
mov
or
fcomps
jb
scas
outsl
mov
dec
mov
int3
dec
icebp
adc
jl,pn
mov
cmp
mov
and
inc
adc
pop
mov
dec
xor
cmpsl
pop
ficoml
inc
nop
xchg
mov
repz
pop
stos
in
in
inc
hlt
push
and
mov
inc
fisttpl
stos
shll
mov
stos
cld
pop
sarb
movsb
adc
and
cltd
jo
dec
adc
jle
cld
or
shl
add
scas
mov
push
jne
pop
int3
mov
adc
mov
mov
shlb
jnp
cmc
or
inc
dec
icebp
cmp
mov
or
mov
inc
xlat
loop
not
outsl
pop
ror
fidivrl
cmc
xchg
mov
lods
pop
sahf
stc
sar
aaa
stos
cld
mov
mov
mov
ss
xor
loop
sbb
or
outsb
mov
inc
test
xchg
scas
cli
push
jb
testb
lods
arpl
jae
sar
gs
in
sti
add
pop
mov
or
cmp
adc
mul
gs
mov
and
stos
sbb
bnd
mov
mov
mov
out
mov
roll
xchg
add
push
add
sbbl
add
cmp
imul
xchg
out
leave
fmull
sub
xchg
mov
pop
push
or
ficompl
jp
push
mov
jnp
push
rcrb
bound
pop
dec
iret
mov
popa
stos
in
pop
dec
inc
lods
jno
stos
mov
les
cmpsb
in
shll
in
jnp
ficompl
inc
lods
push
int3
and
mov
lock
std
fiadds
fbld
jecxz
dec
or
movsb
add
mov
sub
sub
lcall
add
in
out
bound
aas
add
cmp
cltd
adc
fistpll
mov
push
stos
mov
push
add
daa
scas
jmp
and
pop
stc
add
fstl
cltd
movsl
xchg
movsl
ljmp
bound
int3
mov
pop
stc
jns
mov
rcrb
lcall
mov
out
xchg
movsb
pop
sarl
rcrl
jbe
sbb
xchg
cmpsl
mov
shll
cmp
in
push
mov
xlat
and
pop
mov
outsl
inc
pop
sahf
mov
pop
sbb
mov
sbb
xor
outsl
jns
xor
dec
out
add
push
fildl
ret
lcall
leave
jns
and
test
repz
adcb
or
int
bound
push
add
into
jbe
or
inc
dec
add
cmp
cli
or
jno
loopne
subb
add
out
les
cli
mov
loop
push
mov
sbb
cmp
sub
jge
call
in
sub
gs
es
dec
jecxz
dec
fsub
mov
movsl
dec
sahf
push
xor
add
mov
pop
into
scas
repnz
pop
sbb
cmp
dec
shlb
fmuls
and
hlt
sbb
cmc
test
jno
add
loope
stos
mov
push
out
aaa
fcoms
test
in
fmul
jne
xchg
pop
sbb
ror
adc
cmp
nop
add
pop
and
leave
jb
loope
cltd
cmp
jle
sti
mov
or
mov
test
push
std
sbb
sbb
mov
lret
mulb
push
and
fsubrl
mov
cmpsl
adc
inc
mov
push
dec
mov
lahf
ljmp
xchg
fnsave
add
or
sarl
pop
add
push
out
jb
adc
jp
stos
rolb
lea
sub
mov
loop
mov
loop
ret
repz
mov
cmp
and
xchg
xor
mov
mov
out
enter
push
into
push
sub
inc
sti
test
shlb
lods
in
inc
ljmp
pop
scas
mov
fmull
mov
cmpsl
and
fwait
inc
movsb
lock
or
jp
sbb
in
repnz
lret
inc
out
pop
out
in
pop
cmp
fwait
outsl
cli
mov
cld
dec
push
xor
inc
frstor
loopne
cmp
stos
sub
arpl
jmp
cmc
dec
aam
stos
pop
cmp
loop
sti
cmc
jne
xor
xchg
inc
scas
mov
call
jge
outsl
test
jne
xchg
data16
hlt
out
push
jp
fwait
std
jbe
mov
add
xlat
push
mov
int3
out
das
clc
popf
fmull
mov
ret
pop
ljmp
sub
outsl
xorb
pop
test
es
cmp
mov
dec
push
stos
out
and
imul
xchg
aas
ret
out
push
xor
cmp
mov
jp
cs
mov
cmp
xchg
imul
xchg
xchg
icebp
and
lret
mov
cmpsl
scas
out
xchg
iret
dec
and
inc
lock
jmp
ret
xor
jle
and
xchg
sti
pop
test
xor
mov
fnstcw
pop
push
scas
int3
in
inc
hlt
test
push
jbe
aad
adc
sbb
ficompl
rorb
pop
js
adc
insb
add
xor
push
pop
in
mov
cld
adc
ret
scas
jbe
lret
push
push
lea
jbe
push
popa
pop
adc
and
loop
punpcklbw
in
push
add
push
cmpsl
movsl
jecxz
outsb
fimuls
ja
lock
cli
scas
lret
js
jno
mov
shlb
mov
mov
or
push
mov
adc
fsubrs
psubsb
mov
xlat
cmp
in
mov
cmpsl
jno
or
mov
outsb
clc
xchg
mov
insb
or
add
in
cmp
fbstp
jae
add
lock
sbb
add
faddl
lock
enter
daa
shlb
jns
jmp
lret
sub
out
jne
cltd
jg
jp
loopne
fnstsw
push
jg
fs
xchg
imul
cmc
icebp
pop
fwait
xchg
xchg
mov
jmp
inc
cmp
or
adc
test
push
mov
jb
in
je
in
shll
cmp
movsb
stos
push
mov
sbb
mov
idiv
in
and
mov
pop
push
cld
mov
or
dec
bound
rolb
lods
icebp
in
mov
jle
cmpsb
push
and
pop
push
fsubr
dec
jnp
dec
addb
add
xor
mov
mov
aas
cld
push
adc
je
fstpl
scas
ret
int
push
repz
notb
test
push
mov
sub
daa
push
lahf
dec
icebp
pop
add
or
shll
xchg
add
xor
push
lret
dec
pusha
dec
into
les
movsb
shrl
sbb
inc
ss
jo
mov
pop
xlat
dec
es
cmpsl
frstor
push
cltd
sbb
cmp
mov
mov
cltd
hlt
jae
es
cltd
shlb
mov
arpl
sub
cmpsb
adc
push
inc
cmpsb
push
js
jbe
mov
cmc
out
lret
adc
iret
push
divb
jno
xor
pop
mov
jbe
mov
push
add
imul
xchg
pop
sar
lods
sub
mov
ljmp
xor
aaa
scas
add
push
jl
xchg
and
add
or
enter
mov
loope
test
adc
sarb
mov
xor
frstor
jbe
jne
ljmp
cld
in
das
cmp
lods
jo
addl
jmp
cmc
or
mov
pop
lds
rclb
mov
jge
mov
xchg
mov
aam
in
fwait
sbb
xlat
mov
movsb
insl
icebp
xchg
call
aad
cmp
lock
outsb
pop
xor
fnsave
lcall
sbb
cld
loope
imul
fwait
insl
or
pop
das
cmp
pop
dec
fildl
bound
insb
ficomps
mov
pop
pushaw
inc
ret
pop
movsl
lret
test
repz
movb
fstl
imul
ret
aas
mov
pinsrw
inc
dec
cltd
rcr
ja
jl
lcall
and
inc
xor
int
andl
jmp
jp
or
pop
repnz
int
or
fldt
sub
out
jb
jle
mov
repnz
imul
adc
xchg
or
lds
out
dec
cmp
push
sub
mov
xorb
pusha
stos
adc
dec
aaa
loope
mov
stos
into
into
pop
js
aas
cmp
cmpsb
loop
cli
bound
xchg
sub
aaa
sahf
notl
mov
jae
jecxz
cltd
js
loope
outsb
ss
pop
out
loopne
mov
in
pop
inc
rcrl
cmc
jle
adc
enter
movsl
test
enter
cmp
sub
mov
mov
sti
mov
adc
dec
in
dec
jecxz
adc
cltd
popf
je
jnp
jmp
popf
or
jo
jo
ss
fs
jp
xor
jg
sbb
xchg
repz
jmp
lods
mov
mov
fcmovbe
scas
das
out
mov
lods
insb
cmc
mov
adc
push
cmp
pop
ror
sti
ret
mov
xor
mov
xchg
mov
sub
pop
xchg
stos
jae
movsl
dec
test
and
sub
ss
out
pop
sbb
add
or
enter
pop
jbe
push
loop
xlat
stos
cmpsl
outsl
and
add
sub
repz
push
push
int
cmp
ss
cli
js
mov
test
rcr
xchg
cmp
sbb
inc
rclb
aam
dec
xchg
mov
inc
pusha
shrb
movl
xchg
inc
pusha
imul
push
mov
shl
xor
cltd
mov
leave
dec
push
into
cli
iret
out
in
scas
aas
aaa
mov
jg
dec
inc
dec
dec
mov
xor
inc
movsb
insb
xor
lahf
mov
xor
pop
das
scas
inc
ljmp
cmpsl
addl
iret
aaa
lret
js
pop
dec
push
or
mov
pop
popf
sahf
fiadds
arpl
push
dec
push
mov
jo
sbb
xchg
test
adc
out
jg
push
push
sbb
mov
or
sub
jbe
idivl
cwtl
mulb
aam
lret
gs
mov
push
shl
mov
pop
cmp
mov
bound
mov
aas
rorb
clc
lds
sbb
jp
mov
pop
cbtw
push
stos
push
out
xlat
pop
scas
jb
cmp
or
mov
fistps
out
sub
push
mov
xchg
fstps
leave
and
mov
cmpsb
jmp
cli
pusha
dec
loope
shlb
mov
stc
cmp
mov
and
ja
mulb
nop
shlb
stos
lods
fdivs
int3
adcl
in
out
mov
mov
icebp
xor
mov
push
outsl
leave
adc
or
sbb
rep
mov
gs
cs
insb
inc
lret
pop
adc
dec
inc
ljmp
test
inc
cmpsl
push
dec
mov
lcall
dec
fisttpll
faddp
call
xchg
inc
ss
mov
or
test
fdivr
adc
jecxz
xchg
xor
in
mov
les
mov
icebp
add
dec
xchg
dec
cs
cmp
xchg
insb
xchg
es
sub
pop
cmpl
sti
jae
jmp
mov
mov
outsl
pushf
bound
ljmp
or
mov
out
xor
sbb
push
outsl
mov
xor
imulb
popf
sub
xchg
jg
pop
xor
cmp
adc
push
xor
mov
add
nop
push
movsb
lcall
push
or
lret
sub
pop
xlat
mov
aam
adc
leave
pop
test
mov
dec
dec
push
fsubrs
lods
add
adc
mov
bound
mov
movsl
dec
pop
in
mov
sub
ret
xchg
push
daa
lds
sbb
shl
xor
and
pop
sbb
inc
jge
cmp
mov
mov
test
outsb
xchg
test
ds
xor
movsl
and
rcl
ss
push
nop
push
cltd
arpl
dec
test
iret
aam
ss
cmp
jmp
adc
daa
hlt
lea
sub
push
add
out
lcall
imul
rcr
gs
push
mov
sbb
cmp
jno
lahf
pusha
test
xchg
xchg
push
cmpsl
push
pop
jne
pop
out
jecxz
out
call
cmc
cmpsl
lds
arpl
ss
mov
cs
fstpl
add
nop
or
mov
movsb
in
notl
sub
or
or
movsb
xor
pop
cltd
mov
cmp
js
dec
je
or
pop
jmp
out
xchg
fs
insb
jmp
in
mull
cli
cmp
into
rcrl
inc
jns
pop
sub
mov
lods
insl
gs
fdivp
js
jae
inc
ja
repnz
push
shll
and
inc
pushl
or
dec
lahf
mov
jle
adc
cmp
ss
arpl
jp
out
test
inc
mov
es
sbb
jno
pop
popa
add
jp
push
out
cld
cmp
lss
cld
int3
mov
inc
inc
sub
push
scas
bound
hlt
aaa
lea
loop
packsswb
sbb
pop
jmp
fs
sub
xor
pop
cld
xor
xor
stos
and
mov
dec
cmp
mov
rcpps
jbe
popf
jmp
ds
cld
adc
out
mov
adc
aas
shlb
add
xchg
fdivl
mov
xchg
push
xor
fildll
sti
addr16
ds
incl
push
and
mov
adc
xchg
mov
dec
les
xchg
push
mov
cmpsl
inc
mov
fsubrs
fcoml
mov
fsubrl
test
out
push
mov
jg
mov
imul
fcompl
adc
mov
jg
sbb
cmpsl
test
dec
cwtl
ret
in
arpl
and
push
jne
add
sbb
fwait
imul
lret
fs
cmp
inc
cmpsl
imul
ljmp
adc
loope
mov
icebp
ljmp
mov
and
and
cmp
cmp
adc
shll
push
stc
leave
popa
fdivrl
sbb
movsl
xchg
popa
push
das
sub
xchg
add
dec
stos
jle
lret
imul
dec
jo
push
inc
mov
push
cmp
imul
sub
mov
push
in
inc
cs
jecxz
cmp
rolb
orb
push
loop
push
cld
dec
push
in
in
xchg
and
pushf
bound
mov
rorb
ror
scas
dec
add
sbb
stos
cmp
push
push
sti
inc
mov
dec
fmuls
xor
outsb
push
scas
sub
in
scas
or
add
and
mov
insb
decl
mov
and
push
or
enter
mov
xchg
xor
mov
repz
or
pop
mov
popf
int
pop
stos
push
push
jo
aad
cmp
rorb
sarb
jg
mov
dec
out
imul
nop
jo
test
push
pop
ret
insl
mov
outsb
mov
xor
jo
jl
inc
lahf
ja
sbb
lahf
insb
mov
popf
mov
das
repz
sub
repz
jmp
ja
ljmp
les
jne
mov
pop
sub
xchg
scas
sbb
mov
testb
jmp
mov
jno
insb
add
push
popa
inc
mulb
out
mov
insb
cmpsb
inc
aaa
or
fdivs
lcall
cmp
lock
cmp
sub
movsb
and
test
xlat
jmp
sub
mov
add
push
dec
in
loope
pop
inc
pop
shll
cmp
add
jne
pop
movsb
mov
lahf
jb
out
outsb
daa
loope
pop
xchg
inc
dec
pop
cmp
test
cmc
movsb
lods
in
cmp
xchg
sub
push
jo
lods
cmp
xchg
loopne
test
push
sub
mov
pop
rep
dec
mov
mov
mov
xchg
xchg
xchg
push
rcl
shrb
xor
out
popf
xchg
scas
pop
mov
je
push
popf
pop
popf
fwait
movsl
cmp
shrl
int
jno
jae
sbb
inc
stos
fistl
mov
xchg
ret
int
adc
mov
outsb
fcoml
cmpsl
cmp
fnstcw
xchg
push
es
jl
call
ja
shll
adc
mov
aaa
gs
dec
aaa
outsl
insl
outsl
mov
cmp
xor
scas
popf
jecxz
movb
sbb
adc
mov
mov
jno
lahf
popf
jg
mov
shrb
loope
sbb
jge
addr16
pop
inc
sub
push
lds
cmpsl
and
aaa
mov
jns
int
pop
aas
popa
rcrb
pop
fiaddl
cltd
std
mov
ss
dec
sarl
out
pop
dec
je
xchg
push
sub
sbb
jecxz
cmp
jmp
pop
push
in
and
dec
ljmp
out
jmp
pop
sbb
outsl
jl
ljmp
inc
mov
lahf
daa
pop
je
mov
mov
sarl
mov
jae
pop
push
sbb
mov
mov
gs
scas
es
sti
mov
xor
xlat
ljmp
ret
fstps
cmp
mov
sbb
fidivs
inc
cmp
call
jmp
add
xchg
mov
add
repz
jge
leave
cmp
repnz
and
cwtl
icebp
js
idivb
nop
jno
cmc
adc
mov
popa
cmc
es
js
sar
push
es
or
jbe
lcall
out
loopne
lock
nop
mov
pop
mov
in
cmp
add
inc
shrb
push
dec
sti
cltd
sbb
outsb
xchg
and
testb
mov
movsl
adc
bound
out
mov
sbb
hlt
inc
je
scas
pop
aad
insl
int
mov
xor
in
std
push
stc
pop
adc
and
scas
cmpl
stc
add
xor
add
push
outsl
sahf
push
icebp
int
pop
cmp
or
outsl
outsl
and
stos
mov
rorl
bnd
or
mov
lret
and
subl
cmp
stc
enter
jge
add
jmp
adc
in
fucomi
imulb
lock
mov
push
push
xor
add
and
xchg
fstl
test
repz
cltd
notb
clc
popf
aaa
loope
pop
xlat
sbb
sti
out
push
movsl
mov
add
pop
std
push
icebp
mov
sahf
pusha
mov
ss
inc
mov
cmc
out
cmp
xor
xchg
mov
aas
jecxz
out
call
insb
in
fdiv
enter
or
xlat
popa
pushf
movsl
popf
cmpb
enter
negl
in
add
jle
jae
scas
dec
sbb
xor
bound
fwait
mov
add
fadd
iret
icebp
mov
js
cwtl
cmp
sub
jl
lock
xchg
test
jg
roll
sub
add
sti
jg
test
cmp
lcall
push
mov
mov
add
stos
repz
ret
out
xor
pop
dec
jg
cmp
push
push
xor
int3
les
iret
loop
inc
add
pop
cs
lea
std
int
mov
fistps
jb
dec
xchg
sbb
lcall
jns
ficompl
test
shr
in
add
jg
ljmp
in
test
lock
pop
cs
test
adc
adc
sub
jno
or
xchg
out
xlat
add
testb
cmp
jnp
in
push
test
adc
mov
push
add
js
mov
movsb
xchg
mov
sub
stc
es
or
outsb
pop
mov
pop
push
push
mov
pushf
outsb
cs
leave
lock
lret
scas
jns
xchg
dec
mov
icebp
std
stos
arpl
jo
and
fidivrl
jo
pop
imul
iret
sub
mull
loop
sub
mov
ror
jno
and
insb
adc
dec
inc
inc
ljmp
sbb
and
mov
mov
xor
je
push
xor
and
inc
push
xchg
cmp
pop
push
insb
jne
xchg
cmpsb
repz
adc
movsl
or
shlb
jecxz
pop
mov
xchg
cmpsl
ljmp
or
out
sub
repnz
ds
stc
mov
push
mov
jne
leave
pop
notl
sahf
punpckhwd
sub
cmp
push
xor
mov
cwtl
mov
xchg
sub
xor
xor
dec
adc
scas
test
fmuls
dec
decl
dec
jb
in
push
sbb
mov
sub
stos
mov
arpl
push
inc
into
dec
stos
lahf
mov
push
stos
mov
sub
sbb
cli
stos
decl
repz
or
mov
or
xor
ds
das
or
popa
shr
xchg
mov
out
and
leave
shll
fldcw
cltd
sub
adc
cmp
lock
loopne
ret
es
test
adc
cmpsl
add
lret
lcall
andl
jb
mov
loopne
lods
mov
pop
in
lds
adc
mov
xchg
outsl
sub
aam
cmpsb
inc
jo
fdivl
add
dec
cmp
xchg
es
xchg
add
pop
je
adc
rorb
or
xchg
nop
jne
mov
fwait
pop
adc
data16
pop
addb
pushf
push
add
scas
xchg
pushf
pusha
xor
das
jne
dec
mov
xor
imulb
sti
pop
cld
int
dec
arpl
or
fstpt
or
mov
push
dec
fcompl
enter
lods
mov
push
into
cwtl
icebp
es
xor
ss
into
lods
push
outsb
sbb
lcall
xor
mov
ljmp
lods
or
nop
int
jbe
mulb
inc
nop
cwtl
dec
jmp
inc
das
shll
jg
out
and
cmp
mov
ficoms
daa
xor
enter
lret
je
mov
jnp
push
pop
movsb
shll
je
fbstp
mov
cmc
fdivl
mov
cmp
aad
scas
xchg
lcall
rorb
bound
repz
pop
xchg
fildll
or
roll
cmpsl
pop
int
jns
dec
xchg
fsubrl
dec
outsl
lcall
mov
iret
pop
movsl
pusha
stos
mov
in
push
out
adc
ds
rcl
mov
out
std
in
push
mov
clc
incl
add
out
cs
dec
inc
pop
push
and
lahf
xchg
mov
cmpsb
adc
xor
cmpsl
sub
mov
add
inc
dec
or
loope
mov
mov
into
mov
sbb
mov
cmp
lea
mov
sub
pop
cltd
pop
xchg
sbb
ljmp
mov
sbb
xor
cmp
add
fcompl
fstpl
mov
cld
xor
push
push
mov
xor
das
xchg
cwtl
pop
pop
pand
movsl
inc
xor
gs
push
dec
add
es
push
js
clc
cmp
jb
lret
xchg
push
push
test
test
lods
jne
pop
or
lcall
inc
and
inc
sbb
cltd
pop
xchg
inc
push
fs
call
hlt
xor
scas
int3
push
and
sbb
cmp
int3
in
xchg
or
bound
ja
jbe
pop
sarl
popa
ds
mov
dec
or
and
pop
cmp
mov
or
aam
inc
mov
pusha
pop
add
test
and
sub
scas
ret
nop
mov
jmp
dec
call
add
out
dec
adc
enter
fisttpl
mov
and
xchg
mov
in
bound
ljmp
pushf
insb
mov
jne
jmp
addb
inc
movsl
and
pop
inc
fcmovb
push
xor
scas
enter
adc
cmpb
mov
pop
mov
stos
fists
outsl
data16
addr16
mov
cmpsb
push
or
cmp
dec
xor
je
dec
iret
push
sbb
dec
mov
hlt
cmp
inc
repz
loope
subl
lods
int
push
and
push
lcall
add
xor
add
test
mov
repnz
pop
dec
pop
xor
jbe
test
xchg
jle
xchg
not
jae
and
cmpsl
aad
pop
stos
lcall
popa
inc
xor
or
xor
sahf
mov
imul
ret
divl
and
sahf
mov
rorl
inc
shll
pop
mov
ds
fistpl
sarl
int
mov
jmp
cmc
xchg
xchg
push
cld
or
inc
and
sbb
xchg
xor
mov
les
xor
sub
cmpsb
enter
outsl
xchg
pop
test
lea
sub
push
insb
push
xchg
dec
gs
pushf
push
cld
ret
mov
das
pop
bound
cmpsb
lahf
mov
loopne
push
outsb
pop
xchg
or
jb
adc
arpl
xor
out
and
and
dec
jno
cs
add
pop
jg
adc
jge
loop
dec
sbb
in
js
test
inc
sbb
adc
les
in
pop
mov
lret
push
fcoms
or
fisubrl
lds
popa
js
xor
out
aad
adc
aas
sarb
rclb
in
test
inc
cmc
jo
movsb
inc
adc
mov
test
xchg
or
ret
mov
pop
repnz
fisubl
xchg
clc
pop
fildl
loopne
popf
jnp
data16
push
pop
mov
dec
mov
xchg
push
adc
dec
insl
fstpt
pushf
cmp
jmp
inc
add
inc
mov
inc
dec
pop
jb
cli
loopne
sarb
pop
cmc
cmpsb
and
cmp
jl
sti
push
pop
push
dec
cmp
fstpl
insl
repnz
into
jl
inc
xor
adc
cmp
inc
inc
add
jbe
mov
repnz
add
cmpsb
or
add
test
stos
mov
aas
outsb
cmp
scas
push
sbbb
ljmp
xor
pop
dec
pop
test
mov
in
stos
or
ror
mov
or
bound
js
inc
std
sub
cmp
es
lock
and
xchg
or
inc
inc
outsb
test
sbb
mov
outsb
cmp
mov
aaa
mov
cmpsb
ret
add
and
xchg
push
sub
call
cltd
jl
and
xlat
pop
test
xlat
cmpsb
cmp
int3
setg
in
xor
popf
dec
sub
aam
or
or
and
repnz
sub
int3
push
push
xchg
inc
push
sahf
out
in
data16
fcoms
dec
xchg
imul
and
jmp
outsb
mov
inc
push
cmp
dec
mov
mov
xor
xlat
dec
cmp
sub
xchg
pop
or
mov
dec
andl
mov
fdivrs
stos
sbb
inc
xor
mov
pushl
out
push
in
daa
mov
stc
cmp
xchg
popa
xor
xchg
add
sbb
call
dec
test
xor
icebp
rcll
lret
insw
pusha
shr
test
lock
push
push
in
jns
xchg
les
ss
mov
mov
adcb
and
aaa
nop
dec
pop
xchg
stos
mov
and
and
es
pop
add
imul
lcall
fidivrl
adc
insl
mov
dec
inc
shl
xchg
sbb
out
cmc
lret
push
push
jbe
jns
sbb
test
jb
insb
je
inc
mov
out
mov
inc
je
fildl
jge
dec
cmc
scas
and
sub
jnp
xor
ljmp
flds
cmp
xor
push
hlt
dec
movsl
xchg
pop
pop
xchg
cmp
cmc
jge
call
pop
fdivs
and
mov
js
negb
imul
ja
lods
inc
add
lret
pusha
mov
push
sub
cmp
lret
bound
iret
xor
aas
push
and
les
and
adc
shll
cvtps2pd
stos
jns
dec
loopne
dec
aad
cli
push
clc
mulb
push
mov
pop
rcl
push
or
in
add
orb
shlb
xchg
jnp
adc
loope,pt
rclb
lahf
pusha
dec
jl
add
jns
mov
aam
or
jge
test
fldenv
stc
or
adc
ds
mov
push
cmp
fmuls
dec
jae
sub
xlat
pop
mov
data16
aaa
loopne
mov
outsl
dec
sub
and
xor
mov
frstor
pop
adc
mov
xor
sub
gs
push
in
mov
push
mov
loope
push
inc
addb
adc
pop
ds
sbb
imul
loopne
sbb
jbe
pop
leave
dec
in
dec
popf
mov
icebp
jne
xchg
push
imul
imul
xchg
pop
add
adc
push
xor
xchg
pop
gs
icebp
xchg
std
xor
popa
loopne
jb
fadds
pop
nop
jmp
std
dec
mov
lea
out
jl
adc
adc
sub
out
leave
insb
or
xchg
fisubs
push
imul
cmp
xchg
cmp
daa
pop
mov
mov
icebp
ret
into
push
sub
add
dec
jmp
mov
adc
sub
cmp
mov
enter
bound
pop
rclb
repz
mov
scas
addr16
or
mov
or
sbb
xchg
inc
mov
or
mov
xchg
sarl
je
sbb
push
ds
cmp
inc
dec
repz
es
shll
hlt
test
push
movb
enter
pop
adc
pop
sbb
pusha
lret
jl
jae
dec
sub
pop
or
xchg
in
in
lds
inc
dec
mov
push
pop
push
arpl
jbe
cltd
pushf
mov
jne
repnz
jmp
adc
pop
xchg
fwait
add
outsl
sub
aas
in
mov
outsl
adc
mov
lret
inc
mov
push
daa
and
sbbl
jle
cli
fdivl
cmp
jmp
mov
hlt
cmpsl
push
add
adc
lret
cmc
ljmp
cmp
in
or
out
dec
jnp
push
in
or
xor
jge
pop
pushf
ss
imul
sbb
xor
and
add
push
or
push
loope
jo
jbe
dec
arpl
xor
lahf
mov
mov
sahf
jne
test
ret
mov
dec
je
mov
mov
dec
jae
jbe
and
lret
das
cli
mov
data16
lock
sub
rorb
mov
dec
ja
pop
aad
pop
mov
sbb
repnz
cmc
mov
jg
dec
xchg
fistps
sbb
xor
mov
inc
adc
sbb
cmp
mov
scas
ss
rorb
fsubr
cwtl
rcrl
pop
in
sbb
stos
cmp
jmp
push
in
mov
gs
decl
in
mov
mov
jmp
std
xchg
inc
bound
mov
push
dec
or
inc
mov
in
into
clc
stc
data16
or
pop
xchg
pop
pop
out
aad
sarb
dec
jmp
arpl
aad
inc
mov
dec
cs
cmp
sbb
lahf
pop
sub
sbb
fmull
shr
ret
mov
mov
aad
cmovp
xor
xchg
xchg
addr16
daa
xlat
cmpl
sbb
xor
sub
sub
xor
adc
test
xchg
xchg
adc
pop
sbb
xlat
dec
orb
aam
mov
je
inc
dec
in
insb
xchg
mov
cmp
outsl
mov
aaa
int3
fdivrs
testl
xchg
inc
pop
dec
sub
mov
jle
pop
sbb
in
jge
and
dec
sbb
inc
pop
es
xchg
jle
cli
jle
add
ss
sub
pop
dec
lcall
mov
fwait
stos
imul
push
test
das
cmp
and
bound
xchg
or
rorl
sar
dec
scas
outsl
push
sub
js
cmp
push
inc
adc
add
je
and
mov
dec
jns
cmp
shl
scas
pop
repnz
cmpsb
pop
jno
fisttpl
dec
dec
fdivr
or
icebp
clc
out
insb
stos
xor
or
mov
mov
jmp
fnstsw
aaa
adc
cltd
out
test
dec
dec
mov
push
lds
das
mov
push
hlt
cltd
push
and
pushf
test
and
je
movsl
push
stos
dec
ret
mov
push
inc
fistpl
mov
sti
pop
loopne
ja
or
or
ds
gs
dec
mov
and
shrb
movb
les
jp
enter
lahf
aas
imul
inc
scas
sbb
in
pop
inc
popf
xchg
fidivrl
iret
and
in
inc
fcomps
cld
inc
push
pushf
cltd
cmp
pop
mov
mov
cmp
pop
mov
sti
mov
jge
mov
or
aam
dec
mov
inc
mov
idivl
shl
pop
mov
das
mov
mov
and
jg
sahf
int
sbb
xlat
pop
cmpsb
add
into
jmp
loope
aam
sbb
loop
mov
rclb
jb
lods
aaa
lret
and
dec
xor
in
xor
pop
loope
xor
pop
outsl
xor
aaa
aam
in
sub
leave
mov
dec
dec
arpl
push
push
imul
add
jo
fistl
loope
iret
dec
fimuls
dec
mov
and
std
inc
cmp
out
jp
xchg
mov
sbb
and
or
iret
ss
jo
cmpl
jo
mov
fsubs
sbb
ret
inc
xchg
popa
cld
dec
dec
sub
sbb
and
das
sub
adc
jp
arpl
popa
or
sub
lds
mov
sub
in
dec
loop
mov
lcall
mov
lods
cmp
stos
arpl
and
mov
push
ror
lds
cltd
and
ljmp
cwtl
scas
add
xor
push
dec
jo
xchg
pop
and
lret
cwtl
dec
mov
repnz
xchg
mov
sub
mov
out
dec
xor
int3
or
ja
mov
jne
cmp
fdivrs
lods
push
or
rclb
push
add
mov
dec
shlb
sahf
jne
add
jne
popa
sub
mov
mov
or
fbld
mov
loopne
repz
cmp
inc
jp
test
gs
cmp
ror
add
arpl
sub
push
out
inc
loope
mov
xchg
push
lcall
ds
xchg
inc
in
mov
and
je
and
cmpsb
mov
mov
stos
jbe
dec
loope
and
lret
push
xlat
xchg
loope
jge
icebp
mov
and
sar
or
add
je
xor
int3
add
leave
dec
add
test
mov
std
sub
sbb
subb
in
cmpsb
dec
dec
xchg
mov
sar
std
icebp
sbbl
aam
jge
stc
fcos
or
in
daa
pop
scas
xchg
fwait
insl
lret
lret
movsl
ljmp
mov
and
iret
lds
aas
notl
xchg
fcompl
jle
mov
dec
and
outsl
add
sbb
cmp
mov
loope
stos
push
add
lock
cmp
jg
aam
out
inc
dec
sub
push
aaa
in
cmp
sub
jns
and
push
mov
inc
adcl
arpl
leave
cmp
aam
push
cli
xor
xlat
xor
pop
iret
dec
lret
negb
xchg
xchg
addl
mov
pop
cmp
fs
inc
stos
iret
mov
xor
mov
inc
mov
jle
ss
mov
in
lea
xchg
xchg
rolb
gs
std
pop
or
popf
xor
call
inc
in
lahf
ljmp
fwait
push
bound
inc
sbb
lret
or
jmp
adc
jo
int3
xchg
dec
mov
lret
push
cmp
push
test
sbb
scas
pushf
adc
test
ficoml
arpl
mov
cwtl
movsl
out
add
es
lcall
int3
push
dec
push
pop
cmp
push
sbb
fildll
loope
push
ja
lea
and
testb
lea
mov
xor
aam
xor
loopne
lds
push
cmp
xchg
push
xor
push
dec
ljmp
and
ret
pop
sbb
mov
sub
jge
sub
mov
test
lret
mov
adc
xchg
ja
pmaxub
mov
or
or
aaa
xchg
sub
ss
push
inc
lret
cwtl
rol
add
sbb
cmp
mov
push
call
jmp
cs
sbbb
ror
test
mov
jne
push
xchg
cmp
xchg
cmp
movsb
add
in
jne
pop
je
pop
lods
imul
xor
and
repz
jae
lahf
lcall
daa
xchg
mov
and
movsl
jmp
sbb
jp
mov
repnz
arpl
cmp
gs
jo
in
lds
inc
xor
fimull
lcall
mov
add
add
push
jne
xchg
xchg
and
sbb
pop
gs
xor
adc
sbb
lahf
fwait
jnp
icebp
cmpsb
xor
add
jnp
or
xor
pop
jne
jne
xchg
or
pop
sti
cmp
int3
ret
pop
mov
mov
cltd
in
gs
rorb
outsb
push
adc
sbb
dec
cmc
xor
xor
xchg
jbe
rcll
sub
jge
sub
mov
sbb
movsl
ficoms
arpl
mov
ret
pop
pop
cld
lahf
and
ds
sbb
mov
daa
loope
leave
cmp
in
pushf
or
mov
pusha
jnp
icebp
cld
es
mov
ja
jp
add
sub
data16
xchg
out
loop
mov
mov
leave
cmp
mov
jl
mov
or
or
shll
push
xchg
add
cmp
dec
jns
adc
mov
out
sub
xor
mov
mov
and
insb
xchg
add
ss
mov
int3
insb
sub
jne
pushf
mov
cmp
mov
push
inc
pop
dec
aad
or
sti
xlat
jmp
enter
or
xchg
pop
cld
std
aas
popf
testl
roll
xchg
int
pushf
enter
rcll
andb
push
mov
adc
cmp
add
mov
pop
in
cltd
jbe
mov
mov
flds
jge
movsl
mov
inc
roll
in
fisttpl
fwait
cli
inc
data16
daa
sub
mov
into
xchg
mov
cwtl
js
mov
mov
fisubl
aas
pop
cmp
inc
enter
or
lret
fwait
outsl
inc
clc
sub
cmp
popa
mov
imul
in
mov
test
sub
pop
xchg
jmp
adc
andb
mov
aas
adc
push
adc
xchg
mov
push
adc
pop
fsubrs
inc
xchg
stos
scas
out
clc
inc
jb
into
stos
sarl
xchg
fucomp
xchg
xchg
andb
addb
cmp
xchg
inc
aaa
imul
pop
or
pop
shrb
inc
and
cs
xchg
cmp
mov
jns
fildl
or
outsl
jecxz
setnp
lahf
pop
jnp
jnp
leave
mov
shll
fs
and
dec
pop
int
mov
xchg
and
sub
ficoms
in
jmp
pop
mov
mov
sbb
pop
iret
pop
hlt
xchg
pop
cmp
push
ljmp
inc
negl
or
scas
repz
icebp
icebp
mov
fs
or
cmp
fisubrl
inc
inc
lds
mov
enter
adc
pop
mov
flds
into
fiadds
xor
call
or
out
jl
sub
imul
dec
push
fs
hlt
in
pop
sub
sbb
add
xchg
leave
jmp
pop
and
in
arpl
cs
jb
shlb
push
mov
jne
fisubrs
adc
aad
adc
mov
push
add
dec
inc
jge
xchg
or
mov
cmp
out
sub
sbb
push
pop
cmp
aad
aaa
mov
pop
ljmp
insb
int
jle
divb
and
call
add
and
lcall
test
in
repz
sbb
idivb
add
pusha
orb
pop
inc
xchg
jmp
xchg
mov
cmc
lret
ja
jno
lahf
psubusw
push
inc
mov
inc
popa
rcr
push
rorb
sub
ret
pop
push
stos
sub
sbb
xor
loope
aas
sub
dec
cmpsl
cmp
sub
jmp
adc
flds
out
cltd
jns
and
test
and
or
pop
bound
add
mov
loopne
dec
mov
cmp
popf
movsb
orb
or
aam
jge
es
loopne
rclb
lret
mov
jne
lods
clc
add
or
push
dec
xor
and
scas
mov
int3
mov
inc
sbb
cmpb
pop
jmp
pop
push
push
push
adc
out
and
xchg
sbb
shll
popa
jb
xor
nop
js
or
pop
xchg
notb
xchg
test
or
enter
push
gs
inc
sbb
fbld
push
shrl
out
mov
jle
jecxz
push
dec
movsl
sbb
lods
lret
push
mov
out
inc
mov
mov
popa
neg
loope
int3
cmc
jge
push
or
ficoml
and
adc
dec
lods
xchg
out
js
xor
inc
imul
push
vrsqrt28sd
ret
int
push
mov
mov
cld
js
dec
and
das
xlat
jno
incb
pop
add
adc
xor
adc
stc
pop
cltd
cmpsl
adc
icebp
imul
rcrl
icebp
and
adc
scas
add
sbb
ja
cld
mov
test
xchg
rclb
rorl
lds
lret
pop
add
loope
jb
jp
stos
mov
lds
adc
add
jp
insl
push
dec
add
jle
stc
push
ret
mov
xchg
dec
hlt
inc
mov
jno
rolb
cmp
cs
dec
adc
mov
xchg
push
shrl
out
test
add
adc
sub
lea
orl
cltd
loopne
xchg
cmp
and
nop
repnz
sub
movsb
imul
outsl
lods
and
bound
hlt
ja
lcall
add
and
push
cld
mov
dec
sahf
push
mov
sbb
cwtl
popf
mov
sbb
mov
mov
lea
inc
shrl
push
pop
xlat
or
or
xchg
pop
ljmp
neg
daa
xlat
dec
cmp
pop
ret
mov
cmpsl
mov
sub
sub
xchg
lret
sub
mov
je
daa
movsl
push
push
sbb
ja
add
mov
rclb
mov
xchg
pop
mov
mov
xor
lds
bnd
decb
sti
sbb
stos
aam
dec
scas
jge
mov
.byte
scas
jo
.byte
sbb
cmp
cltd
xchg
addb
clc
and
mov
mov
daa
add
xlat
inc
jnp
xor
clc
push
aas
mov
mov
aaa
daa
in
aam
ljmp
pop
inc
fsubr
dec
ljmp
ffree
fs
mov
cmp
popf
push
aam
sub
xchg
pop
test
in
mov
aaa
xor
lds
call
and
out
in
add
or
aad
rcrb
out
mov
and
mov
cld
and
sbb
pop
pop
shrl
or
push
in
or
jbe
adc
push
rcrl
es
and
lcall
inc
scas
aaa
in
dec
popf
aam
mov
add
pop
adc
sbb
test
bound
sysret
and
sub
add
sahf
js
inc
aam
sub
dec
and
mov
dec
xor
add
lahf
jp
cmpsl
ret
inc
xor
sbb
ffree
lret
xor
xchg
or
jns
xchg
imul
and
and
repz
adc
xchg
mov
push
dec
xor
jo
inc
xchg
lods
out
aas
pop
inc
cltd
aaa
and
sti
sbb
mov
aad
push
fsubp
jno
popa
std
and
push
pop
bound
loope
insl
aas
xlat
lods
add
gs
insl
sti
inc
pop
cld
jl
inc
push
jno,pt
les
cld
mov
push
iret
pop
mov
push
scas
mov
mov
pushf
and
mov
mov
push
outsb
and
int3
push
test
pop
jl
jno
add
and
test
and
cld
lret
fiaddl
loopnew
leave
cmc
push
clc
test
popa
pop
imul
push
jb
push
xor
adc
sub
aaa
adc
inc
lds
ja
repz
scas
cmpsl
lds
je
addr16
xor
insb
and
pop
inc
in
ljmp
xor
andb
lea
add
jl
jp
sbb
dec
adc
neg
into
adc
jl
pop
faddl
jae
push
xchg
iret
adc
movsl
sub
fdivrs
adc
mov
outsb
and
adc
and
xor
inc
shrb
lahf
cmp
mov
add
xlat
sahf
jae
imul
jle
and
cmp
adc
insl
sbb
scas
mov
jmp
lds
pop
dec
sub
mov
mov
xchg
jae
lds
jp
stos
int
aas
jo
adc
insb
stos
cltd
dec
lcall
shl
xor
and
hlt
cmp
cmpb
pop
push
repz
aam
mov
jnp
hlt
ret
mov
lret
xor
mov
push
sarb
dec
mov
loop
jg
add
ljmp
add
sbb
push
dec
into
movsl
xchg
dec
fdivl
bound
outsb
lods
pop
call
mov
xchg
pushl
mov
enter
subl
jae
mov
sub
mov
push
movsb
cli
xlat
sub
das
push
nop
pop
mov
dec
lret
sti
movsb
push
push
xchg
mov
and
andb
xor
cwtl
lret
cltd
pushf
mov
push
mov
add
mov
jns
cmp
or
out
sub
dec
mov
cwtl
add
inc
mov
roll
sbb
rep
jae
sbb
das
xorb
das
mov
jae
fidivs
adc
pop
xor
mov
nop
scas
ret
ror
add
inc
sub
stc
movsb
mov
adc
jne
popf
imul
stos
inc
xchg
add
push
mov
into
mov
rcr
call
out
sub
imul
es
cmpsb
push
push
out
stos
mov
arpl
mov
mov
cmp
sbb
iret
jmp
xor
jno
dec
leave
pop
fwait
roll
movsl
add
mov
cmpsb
sbb
cmp
push
mov
push
ret
adc
sti
roll
sbb
in
in
sub
adc
shll
adc
pusha
jp
or
aam
mov
fcoms
dec
dec
imul
scas
xchg
testb
out
lcall
test
and
lea
addb
pop
xchg
rcl
in
mov
push
mov
movsl
gs
jno
push
inc
imul
adc
push
popf
hlt
sub
es
jg
jb
ljmp
push
dec
outsb
xor
mov
adc
out
outsl
fcmovb
mov
inc
dec
int
cmc
cmp
in
rorl
ret
push
cld
xor
nop
das
or
xor
lea
lea
aad
in
adc
aas
xchg
jg,pn
std
in
mov
mov
dec
int
loopne
mov
movsl
push
int3
pop
movsb
mov
lahf
mov
arpl
mov
mov
mov
pushf
jg
scas
inc
inc
les
lods
pop
cmp
out
mov
test
hlt
or
dec
out
mov
sub
xor
ret
lret
add
clc
lea
mov
xor
movsl
fdiv
cmp
out
pop
mov
xor
mov
mov
je
fdivrl
pop
mov
ds
outsb
and
add
push
repz
cmp
cmp
out
call
xor
push
mov
stos
es
aaa
stc
pop
mov
loope
mov
add
mov
scas
add
cmp
outsl
push
adc
int
fsubrp
sub
inc
daa
stos
fisubrs
sbb
stos
push
call
out
sub
leave
inc
das
cmp
loop
cltd
pop
xchg
pop
fdivrs
addr16
cmc
and
test
cmp
imul
mov
dec
inc
jno
iret
adc
loop
out
int3
hlt
sarb
cmpsb
loopne
dec
add
arpl
sbb
lahf
or
push
inc
sbb
jae
adc
dec
push
or
aam
jnp
out
or
add
out
jo
xchg
clc
sti
xchg
mov
cmp
decl
test
leave
std
scas
popf
aas
loope
xchg
ret
test
sbb
inc
and
lock
or
stos
adc
repnz
lods
or
or
or
cmp
dec
movsl
jecxz
sub
in
iret
pop
jns
lods
xchg
mov
adc
mov
mov
mov
pop
pop
dec
xchg
shrb
jmp
out
lret
es
lods
aas
push
adc
loope
inc
push
insl
test
into
jmp
adc
lcall
pusha
cld
and
in
lock
ljmp
push
mov
pop
adcb
test
jo
jne
daa
cmp
fs
mov
add
stc
ljmp
jl
xor
fidivs
imull
testl
sub
out
stos
and
inc
cmp
mov
leave
stos
adc
or
jne
test
out
cmpb
jmp
roll
push
repz
sub
inc
mov
mov
pop
pop
out
lods
loopne
xchg
lret
mov
repnz
in
xchg
fsubr
jnp
add
outsb
fstl
addr16
lret
jbe
in
adc
rcl
adc
xor
mov
cmp
rol
pusha
repnz
mov
gs
push
loopne
fwait
loopne
mov
ljmp
and
xchg
push
pop
mov
add
and
scas
sahf
ljmp
sub
lret
or
mov
mov
add
mov
mov
bound
or
aas
push
nop
pushf
push
in
sbb
mov
faddp
mov
mov
test
adc
mov
xchg
rcrl
xchg
dec
shr
jl
dec
fiadds
pop
sahf
xor
or
cltd
call
pop
lock
mov
idivl
nop
fcomps
jle
fwait
loope
mov
inc
scas
inc
cmc
xor
lar
inc
and
jmp
mov
mov
out
test
loopne
jmp
lea
cmp
mov
rcl
sahf
sub
inc
cmc
dec
mov
xchg
ss
pusha
add
out
outsb
nop
sbb
jb
pop
dec
cwtl
jecxz
test
xor
scas
cs
mov
movsb
pop
test
fisubl
mov
xchg
popa
sahf
jmp
push
icebp
add
inc
lock
dec
popf
mov
or
xchg
inc
pop
rcl
add
pusha
dec
stos
push
rcrl
jge
mov
sbb
mov
lods
dec
js
sub
xor
add
in
bnd
mov
inc
cmp
movsb
imul
insl
push
mov
gs
lods
push
pop
cld
fwait
sbb
stos
xor
test
mov
mov
inc
fwait
lea
clc
cs
dec
push
in
dec
xchg
jmp
imul
cmp
stc
data16
loop
fwait
add
sub
fdivrp
xor
lods
dec
loop
jecxz
push
subl
data16
mov
inc
loope
fstpt
lahf
ret
loop
pusha
mov
cs
dec
push
mov
roll
ficoms
adcl
rorl
and
mov
notb
or
mov
xor
xchg
dec
cli
inc
pop
rorb
sbb
cltd
lock
and
daa
pop
xor
ja
inc
push
insl
movsl
inc
daa
sarb
aam
pusha
ja
mov
adc
mov
outsb
test
fidivrs
xchg
lods
push
mov
pop
push
js
stos
data16
xor
inc
dec
cmp
cmp
inc
and
imulb
ja
cmp
adc
and
mov
jl
push
sarb
jle
js
mov
in
lret
subl
mov
dec
mov
in
mov
mov
or
xchg
mov
xchg
sbb
sbb
or
jmp
push
popf
jbe
add
ja
push
and
ljmp
lods
adcb
dec
sbb
pop
adc
out
aas
fsub
or
fimuls
and
call
inc
and
cli
les
xor
mov
movsl
in
dec
push
jns
xor
mov
mov
dec
fs
sub
dec
adc
sub
rcrl
sahf
into
push
add
or
mov
fbstp
sbb
cmc
cmp
or
fisubs
jne
push
cmp
xchg
fsubs
xlat
xor
fisttps
cmp
jbe
mov
subb
pop
xchg
fiadds
lcall
push
mov
filds
aad
inc
add
add
leave
insl
mov
hlt
jno
sbb
push
sti
or
inc
pop
lods
or
loopne
fs
or
sar
sub
loopne
rcr
ret
sbb
in
mov
sahf
xor
fistps
xchg
jmp
or
sbb
pop
adc
cli
out
and
sbb
inc
icebp
jecxz
js
dec
std
je
out
xchg
enter
ljmp
adc
xor
dec
xor
cli
mov
pop
cmp
addb
mov
fldenv
mov
adc
stc
or
cmp
sub
in
inc
push
inc
icebp
in
rolb
shll
fmulp
lods
mov
jg
aad
add
mov
cmp
lret
and
add
xchg
imulb
push
insb
sub
push
add
das
repnz
in
mov
int3
push
cwtl
insl
imul
jno
push
fstl
bswap
mov
push
mull
mov
data16
cmp
inc
inc
sbb
inc
or
lcall
xchg
xchg
ficompl
ja
sbb
sbb
mov
xchg
inc
adc
call
mov
imul
mov
sbb
sub
loop
insl
fidivrl
in
cvtps2pi
push
push
jo
out
and
pop
loop
mov
outsl
mov
push
mov
in
lret
rorb
mov
filds
inc
inc
fistpll
shlb
mov
fstp
stos
ss
sbb
or
cltd
lods
adc
je
test
xor
pop
js
cli
out
daa
and
sub
shr
aaa
jns
cmpsl
xchg
add
mov
dec
mov
adc
les
mov
test
fdivl
out
adc
cld
xchg
jecxz
stos
xor
add
mov
addr16
jmp
mov
dec
xor
pop
xchg
in
add
pusha
movsl
fwait
cmc
in
clc
leave
ljmp
dec
sbb
cli
je
lods
cmpsl
inc
out
ret
mov
push
xchg
jae
cmp
aad
lock
lret
in
pop
pop
sbbl
or
sbb
cmpl
outsl
leave
sbb
and
dec
cltd
mov
test
sub
aaa
out
cmpl
jo
cmpsl
mov
pop
shrl
ljmp
mov
fwait
sbb
inc
stc
mov
in
push
inc
repz
sahf
xchg
dec
lods
repnz
push
mov
mov
das
xchg
inc
add
mov
or
push
push
and
mov
push
add
dec
pop
push
cmpsl
aas
jmp
pop
out
jecxz
xorb
lds
in
xchg
pop
inc
pop
cmp
pop
dec
push
or
dec
addl
sar
cwtl
imul
cmp
jle
pop
cmp
divb
out
mov
jne
dec
xchg
adc
negb
xchg
jg
out
push
ficoml
mov
pop
pusha
dec
push
push
inc
cli
shlb
pop
xor
or
or
loope
jb
idiv
fdivl
inc
pmaddwd
lret
aad
cmpsb
cmpsb
and
or
lret
das
movsb
xchg
push
sbb
enter
jg
imul
fstl
jo
xor
jns
lds
xlat
movsl
or
jne
lock
mov
lea
mov
cltd
leave
cwtl
or
add
jnp
mov
mov
sbb
dec
idivl
lahf
and
in
out
xchg
insb
add
adc
adc
fs
sub
sahf
insb
fbld
in
call
pop
int
nop
jp
ret
jo
shrb
icebp
pop
dec
int3
push
loopne
sub
mov
sahf
add
jmp
es
cmp
sub
movsb
insl
jl
and
imul
pushf
adc
popf
fs
mov
cmp
pop
push
ss
es
fists
int3
cmp
dec
ja
cmp
icebp
xchg
adc
test
mov
jp
testb
mov
push
subl
pop
mov
mov
ljmp
cmp
fs
pushf
add
mov
sub
in
adcl
xchg
lret
mov
adc
jno
les
test
std
sbb
test
sbb
das
mov
lds
jle
out
psllw
mov
push
mov
push
pop
mov
cmpsb
inc
jge
imul
add
or
mov
je
out
sub
push
insl
push
bnd
mov
cmpsl
sub
in
xchg
push
sbb
pop
mov
sbb
ja
inc
sbb
fs
out
pop
clc
les
pop
inc
push
push
add
fcoms
or
mov
and
xchg
sbb
int
dec
out
or
xchg
adc
or
ja
loope
sub
lods
sub
sbb
stos
jl
repnz
add
stc
pop
pop
out
jp
mov
jae
lret
add
xchg
pop
sub
jp
jmp
shl
test
add
xor
sbb
xlat
stc
dec
xchg
test
popl
pop
scas
int3
jge
xlat
or
or
subl
mov
xchg
push
jp
insl
cli
adc
jecxz
xchg
push
cmp
andb
add
ljmp
mov
test
aam
cs
sbb
inc
test
cmp
or
pop
repz
shll
imul
mov
dec
jmp
inc
xor
addr16
mov
mov
xchg
inc
out
adc
in
jecxz
mov
lahf
cmp
jne
push
pop
mov
mov
jns
mov
push
push
inc
dec
insl
div
or
out
or
xchg
mov
cmc
in
ret
pop
or
pop
addr16
mov
int
dec
insl
mov
mov
push
mov
cmpsb
mov
adc
push
mov
pop
jp
xchg
pusha
mov
cmp
scas
aaa
jnp
or
or
lods
pop
pushf
sub
sbb
stos
mov
std
pop
sbb
mov
das
lock
iret
aaa
mov
rcr
pop
jo
inc
inc
lret
ss
add
adc
aas
pop
mul
xor
or
cmpsb
sub
repnz
inc
lahf
adc
std
inc
out
test
leave
xorl
pop
loopne
mov
cmc
mov
popf
and
lcall
pop
inc
pop
mov
push
dec
imul
inc
sub
or
and
andl
mov
ja
in
pop
ss
dec
push
xor
mov
cmpsb
cmp
add
mov
lods
inc
or
xchg
movb
cmp
rorl
test
xchg
lret
inc
cmc
xchg
outsb
jb
dec
pusha
es
push
popf
xlat
enter
xchg
jbe
push
lods
das
inc
pushf
fldl
int3
sub
repz
ret
ret
jl
jl
lcall
loopne
leave
inc
scas
xor
cmp
and
add
fcmovnbe
mov
xor
inc
or
outsl
mov
cld
outsb
dec
cli
aaa
and
dec
call
cmp
cmc
or
mov
arpl
aam
pop
subl
pop
jg
cmc
add
add
and
xchg
ret
nop
imul
pop
popa
repz
jns
push
xor
lock
xlat
sub
sbb
ljmp
mov
push
movsl
in
sub
dec
cmp
outsb
add
inc
adc
mov
xchg
in
jle
scas
outsb
test
scas
ja
add
and
lahf
dec
pop
into
sbb
insb
ss
aaa
ds
loope
xor
lea
mov
jb
insb
pop
mov
cli
sbb
xchg
popf
pushf
aam
xchg
adc
mov
xchg
inc
gs
pop
lea
pop
or
jnp
movsl
stc
inc
sbb
adc
popa
sub
cmp
or
sbb
inc
fisubs
imul
test
adc
and
sbb
mov
jnp
bound
icebp
mov
mov
push
fstpt
lcall
loopne
icebp
lcall
cmp
imul
push
push
sbb
idivb
pop
or
dec
test
lret
xchg
adc
xor
lcall
mov
loopne
xor
xor
dec
stos
and
clc
arpl
in
xor
xchg
sub
add
mov
mov
sub
lods
stc
cmp
cmp
mov
testb
dec
jle
gs
inc
adc
jae
jne
rep
adc
dec
inc
jne
adc
inc
sbb
jle
loope
cmp
mov
mov
xchg
pop
jle
stc
and
pop
test
loope
js
sub
pop
in
stos
jg
repz
pop
xlat
leave
sub
jo
push
inc
repz
es
inc
sbb
outsb
mov
jo
inc
in
jo
xchg
mov
sbbl
jge
xor
imul
std
push
jmp
pop
push
pop
shrb
pop
sub
jns
push
enter
sbb
movsl
test
insl
sbbb
xor
loope
adc
mov
sub
dec
xchg
pop
xchg
out
lods
data16
jnp
pop
inc
shrl
repnz
inc
mov
rorb
fs
orl
push
mov
cmp
push
mov
aad
je
dec
sub
push
xchg
mov
cmpsb
push
xor
aaa
jae
test
adc
cmpsb
pusha
lds
adc
mov
aas
lret
mov
xor
es
pop
mov
or
stc
iret
and
andb
pop
sarl
pop
test
pop
cmp
xchg
jp
subl
ret
and
in
fst
fstl
adc
jae
xchg
adc
and
stos
dec
adc
jns
adc
out
xor
pop
lock
sub
sub
cmp
xor
pop
fbstp
sbb
shll
mov
jno
or
fsts
jmp
pushf
into
push
dec
scas
adc
stc
arpl
lea
test
aas
inc
fs
adc
sub
lds
orl
dec
pop
je
push
mov
outsl
mov
inc
std
jecxz
insb
aad
xchg
adc
pop
ljmp
mov
sub
mov
mov
out
inc
cmp
imul
inc
mov
and
mov
mull
xchg
fildl
adc
test
dec
sarl
cmp
shl
das
or
dec
adc
leave
mov
add
jnp
iret
idivl
imul
push
xchg
xor
cmp
fmull
arpl
fdivs
call
or
mov
push
mov
inc
inc
jp
lds
pushf
mov
orb
mov
cmp
pop
fnstcw
mov
cmp
lahf
and
std
push
jl
insb
fwait
inc
scas
mov
stos
fnstsw
xchg
das
daa
inc
push
add
mov
and
cmc
add
mov
sub
mov
test
int
test
xchg
xor
mov
mov
adcb
lea
xor
xor
cmp
xchg
dec
inc
imul
ret
jmp
ja
out
xlat
mov
or
fnsave
xchg
xchg
std
mov
push
or
jae
scas
pop
pop
or
clc
scas
xchg
psrlq
cmpl
subl
jge
add
dec
lret
std
sbb
inc
cwtl
dec
sub
fsubl
cmp
xor
movsb
sub
rorl
cwtd
in
int3
dec
dec
lret
fcoms
mov
sti
jnp
pop
jecxz
mov
and
inc
sahf
jno
imull
jno
jl
enter
repnz
cmp
jmp
loop
fs
cld
or
or
rorb
mov
xchg
mov
jne
jg
xor
in
sbb
aas
enter
mov
aas
js
fcmovne
xchg
jb
insb
sbbl
mov
std
insl
pop
pushf
outsl
and
pusha
insb
mov
xlat
lock
test
mov
into
imul
inc
mov
sti
hlt
jae
or
pop
clc
fnstcw
mov
fdivp
xlat
cmpsl
adc
mov
aam
pop
ret
pop
mov
cli
mov
call
and
jnp
je
call
or
pop
js
mov
jne
fidivl
cli
mov
xor
std
mov
cmp
add
dec
pop
mov
rcl
iret
into
or
jecxz
fdiv
enter
xor
mov
lods
xchg
iret
mov
jne
loopne
clc
test
xor
int
xor
lcall
enter
adc
inc
dec
mov
test
sbb
lds
aaa
jo
mov
and
jecxz
cmp
outsb
loop
imul
jge
push
sub
hlt
jo
mov
pop
jle
or
xor
inc
adc
pop
cli
call
jns
xor
mov
pushf
adc
inc
jle
pop
iret
mov
push
add
cmp
out
inc
out
pop
mov
or
mov
sub
ret
xchg
shrb
ds
imul
loop
dec
mov
adc
cmc
lea
inc
rcrb
loopne
inc
and
and
jmp
jmp
mov
mov
mov
push
jae
jecxz
fisttpl
cld
pop
clc
call
stc
mov
inc
jb
xchg
push
in
ljmp
add
sahf
lcall
movsb
mov
cmc
and
popf
punpckhbw
loope
dec
xor
mov
dec
xorl
aad
or
push
xorl
mov
xchg
sbb
loope
aas
or
adc
mov
aam
xchg
and
mov
mov
or
pushf
add
test
movsl
popf
in
cmp
jns
pop
cmp
daa
hlt
mov
mov
sbb
adc
clc
pop
xchg
sub
xor
int
ja
mov
cmp
popl
xlat
jp
out
and
xchg
out
cmpsl
jns
and
inc
repnz
nop
mov
add
and
jno
mov
push
stos
mov
stos
xchg
xor
outsb
or
lock
ja
aam
pshufw
iret
mov
inc
mov
push
mov
mov
in
icebp
das
sahf
xchg
lret
in
lods
xchg
les
fcomps
mov
sub
test
rol
scas
and
cmp
adc
inc
js
dec
mov
jl
jl
mov
inc
inc
leave
push
imul
dec
into
div
gs
and
imul
pop
pop
test
pop
bound
mov
dec
push
push
xchg
push
and
testl
pushf
fbld
es
js
mov
mov
push
xor
insb
dec
insl
mov
out
xchg
xchg
push
dec
or
bound
lahf
push
jmp
add
inc
or
in
push
fsubl
int3
fnstenv
and
or
lock
sbb
stos
test
fucom
and
jb
roll
arpl
ss
es
add
sbb
lods
inc
sbb
add
adc
rcrl
cmpsl
popf
out
lret
out
mov
sub
sbb
ljmp
mov
sub
push
and
add
test
xchg
dec
out
mov
xchg
mov
cs
mov
inc
mov
stos
and
shr
jae
rorb
fisttps
dec
or
daa
aam
adc
jno
xchg
cmc
arpl
jp
test
jbe
push
jns
mov
aaa
ss
aaa
sahf
adc
out
xchg
add
shr
xchg
daa
sub
mov
cltd
mov
jns
pop
movsl
rorb
rorb
movsl
lcall
adcb
jecxz
cmpl
add
push
inc
jp
jp
loop
inc
cltd
int3
das
stos
ret
fwait
xchg
mov
in
andl
nop
sub
icebp
mov
hlt
repnz
xorb
ficoml
mov
cmpsl
and
in
mov
fdivs
xchg
cs
inc
lret
jae
outsl
sarb
mov
mov
mov
sbb
stos
and
testb
push
stos
mov
sbb
test
pop
out
fisubl
add
mov
mov
addl
xor
leave
ret
mov
mov
push
fcomps
jns
repz
dec
rol
jle
pop
mov
leave
aas
dec
pop
jl
test
int
add
and
dec
mov
adc
dec
adc
enter
mov
es
incl
sbb
mov
push
and
xor
sbbl
loopne
push
lahf
mov
in
mov
sbb
mov
cwtl
ror
xchg
xlat
test
push
dec
mov
push
jne
popa
jmp
add
or
sbb
imul
push
sub
sbb
lcall
fidivrs
mov
cld
enter
loopne
inc
repnz
mov
mov
imul
push
lahf
out
sbb
mov
cmp
mov
call
jg
adc
icebp
sbb
in
daa
mov
cli
sub
es
xchg
test
xchg
test
scas
dec
add
pop
xchg
xor
mov
fisubrl
or
jle
or
mov
adc
jl
stos
lcall
ret
std
xor
pop
flds
aam
push
pusha
std
cmp
enter
xchg
cli
pop
add
scas
xchg
jle
ret
jg
test
jecxz
cmp
sbb
mov
xor
inc
mov
popa
sbb
out
negb
mov
lcall
sbb
cmp
xchg
mov
xchg
outsl
loop
outsl
jge
fstps
mov
repnz
mov
mov
pop
int
test
mov
bnd
dec
imulb
sarb
aad
pusha
jge
cs
scas
fmull
and
lds
cld
sub
inc
call
adc
xlat
imul
push
icebp
or
fsubrl
push
mov
ljmp
mov
repnz
and
hlt
ror
pusha
rcr
mov
jle
mov
scas
lret
out
jmp
popf
and
cld
inc
sub
mov
lret
push
jl
jmp
std
into
outsb
in
mov
out
call
cwtl
pop
inc
clc
clc
test
leave
movsl
sti
and
decb
xchg
mov
jae
test
insl
and
dec
sub
adc
aas
loopne
sub
stos
pop
push
out
lret
addr16
test
xchg
mov
mov
aaa
loopne
adc
in
das
arpl
jne
std
in
sub
pop
sbb
xchg
insb
movsb
fcmovnbe
punpcklwd
das
add
lret
addr16
shl
cmp
pop
fwait
push
insl
das
add
push
aam
bswap
xor
mov
lret
or
cmpsl
std
pop
not
cwtl
jb
lds
inc
inc
adc
ret
ljmp
jp
xchg
inc
shrl
fnstcw
fwait
movsb
movhps
xor
insb
std
sub
imul
mov
adc
faddl
cmp
pushf
aaa
xor
fistps
mov
mov
idivl
xchg
mov
sarb
or
inc
mov
xchg
sbb
push
xlat
pop
imul
inc
andb
imul
sbb
and
or
hlt
hlt
cld
lds
jb
cmp
fs
dec
jns
mov
jl
jae
jnp
xchg
and
repz
in
pushf
mov
mov
adc
sbb
pop
fs
out
add
int3
add
int
in
xlat
scas
mov
fmul
lea
loope
push
sub
pusha
iret
pop
cltd
roll
fisubs
lods
movsl
jb
inc
fs
daa
sub
loopne
shr
icebp
add
ljmp
and
sbb
adc
daa
ret
xchg
xchg
jno
jbe
out
sub
pop
sub
pop
stc
nop
stos
cmp
mov
imul
lds
and
mov
adc
cmpb
popw
pop
push
int
lcall
xor
addr16
rcll
sbb
and
out
imul
inc
cmp
adc
sub
ds
or
push
shll
pop
out
add
xchg
sub
fldl
ljmp
or
sti
and
lret
mov
enter
test
out
push
scas
lahf
stos
cld
out
sub
and
ja
mov
das
rep
adc
das
add
add
inc
add
xor
pushf
loopne
add
inc
inc
add
add
xorl
add
add
add
add
add
add
mov
add
lock
addb
add
or
add
cwtl
add
orb
add
add
add
add
add
add
add
add
add
add
addb
add
sbb
add
xor
add
dec
add
addb
add
js
add
nop
add
addb
add
xorl
add
add
add
or
subb
add
cld
or
sbb
add
lock
sbbb
add
sub
add
or
cmpb
add
push
add
adcb
subb
andb
addb
add
add
add
xorl
add
add
add
add
addb
add
xorl
add
add
add
sldt
enter
repnz
loopne
add
clc
add
xor
add
adc
xor
add
sub
xor
add
inc
add
xor
add
pop
add
cmp
add
jo
add
mov
cmp
add
mov
sldt
mov
sldt
rolb
cmp
add
call
sldt
add
add
sbb
add
xor
add
xorl
add
add
add
add
add
add
add
xorl
add
add
add
jg
add
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
xorl
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
push
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
pop
add
add
add
xorl
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
mov
add
cld
mov
add
xor
add
add
add
cwtl
mov
add
int3
mov
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
int
add
add
add
into
add
add
rolb
add
add
add
add
add
add
add
add
call
add
add
fadds
add
add
add
add
add
sbb
add
add
add
add
add
add
add
jmp
add
push
in
add
add
add
pop
cmc
add
add
add
add
add
add
cld
add
add
add
int3
add
add
add
add
add
add
add
push
add
add
push
push
push
add
add
push
add
add
add
add
nop
push
push
add
add
movsb
push
push
add
add
mov
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
imul
insb
add
jne
data16
add
jae
je
add
add
add
add
add
imul
add
jb
and
push
add
push
add
add
pop
add
add
add
add
add
add
add
jae
je
add
push
add
add
add
jne
outsb
add
add
add
jae
je
add
jb
popa
add
insl
add
outsb
add
add
add
jae
je
add
je
add
je
cmp
inc
add
and
ja
jne
jb
add
outsb
add
add
add
outsb
add
and
push
add
push
add
jae
add
add
add
je
add
and
data16
add
and
add
add
add
imul
add
add
outsb
add
add
add
add
add
add
push
add
push
add
add
push
add
outsl
add
push
add
outsb
add
adc
push
add
push
add
add
jae
arpl
push
add
add
or
push
add
push
add
add
je
add
je
or
push
add
je
add
add
js
je
pop
add
outsl
add
add
bound
add
add
jb
popa
add
add
and
push
add
js
je
sbb
dec
add
jb
jbe
outsl
add
add
push
add
outsb
add
jb
and
dec
add
outsb
add
add
add
jne
outsb
add
add
add
jbe
outsl
add
add
push
add
outsb
add
jb
and
push
add
js
je
adc
dec
add
popa
add
je
imul
jb
and
push
add
push
add
str
outsb
add
imul
add
jbe
add
and
push
add
je
add
add
outsb
add
imul
add
jbe
add
and
push
add
je
add
add
js
je
adc
dec
add
data16
sub
add
je
add
add
jne
outsb
add
add
outsb
add
outsl
add
add
je
str
add
cld
add
imul
add
add
jne
outsb
add
add
add
cld
add
add
je
add
dec
add
outsb
add
add
push
add
je
push
add
add
outsl
add
add
inc
add
insb
add
add
inc
add
add
pop
add
jne
arpl
push
add
or
inc
add
jne
popa
add
popa
add
imul
push
add
imul
inc
add
insb
add
add
add
cld
add
or
dec
add
insl
add
add
add
add
add
add
insl
add
or
dec
add
je
je
add
add
popa
add
push
add
imul
add
jbe
add
and
push
add
push
add
adc
inc
add
je
imul
and
push
add
je
add
add
imul
add
add
outsb
add
add
add
outsb
add
jae
popa
add
bound
add
je
jae
bound
add
add
arpl
push
add
outsb
add
add
add
jne
outsb
add
add
arpl
push
add
add
data16
add
push
add
inc
add
push
add
and
bound
add
insl
add
add
outsb
add
add
jb
outsb
add
outsb
add
add
add
and
push
add
add
add
add
add
add
je
jae
and
popa
add
jae
and
add
jb
and
inc
add
add
arpl
imul
add
imul
popa
add
arpl
push
add
and
sub
add
add
arpl
imul
add
outsb
add
and
outsb
add
arpl
push
add
add
jne
outsb
add
add
sub
and
sub
add
add
arpl
imul
add
outsb
add
and
bound
add
imul
je
and
imul
add
outsb
add
add
je
add
add
add
add
add
je
das
add
outsb
add
popa
add
add
jbe
add
jp
add
arpl
push
add
and
imul
add
outsb
add
add
add
imul
je
and
add
data16
outsb
add
add
and
ja
add
add
outsb
add
add
cld
add
and
and
add
imul
and
imul
add
outsb
add
and
dec
add
insb
add
add
outsb
add
outsl
add
insl
add
je
imul
add
and
jbe
outsl
add
push
add
add
add
add
add
outsb
add
and
imul
add
je
add
je
jae
add
jae
imul
jbe
add
add
imul
add
add
outsb
add
je
popa
add
add
add
je
add
jae
and
imul
and
imul
add
outsb
add
and
je
push
add
outsb
add
popa
add
imul
je
add
add
imul
add
add
outsb
add
je
popa
add
add
add
je
add
add
arpl
push
add
jp
add
add
jne
outsb
add
inc
add
cld
add
or
dec
add
add
add
cld
add
or
inc
add
outsb
add
add
add
add
push
add
jne
jb
jo
jne
jb
or
inc
add
cld
add
bound
insb
add
jne
add
inc
add
popa
add
push
add
imul
add
pop
add
imul
inc
add
data16
add
imul
inc
add
add
inc
add
add
add
add
jb
je
add
add
imul
add
add
popa
add
push
add
add
push
add
add
push
add
add
popa
add
push
add
je
add
add
add
data16
add
inc
add
je
data16
add
insl
add
arpl
push
add
je
jb
add
add
inc
add
add
add
add
ja
imul
push
add
bound
insb
add
add
and
jne
outsb
add
add
jae
je
cld
add
add
add
add
outsb
add
and
push
add
insl
add
outsl
add
add
add
add
cld
add
add
add
add
add
imul
and
bound
add
add
je
jae
and
jbe
outsl
add
and
add
outsb
add
insl
add
add
outsb
add
add
add
and
inc
add
jb
insl
add
insb
add
jb
and
bound
add
jne
je
jp
je
xor
inc
add
add
add
arpl
imul
add
jae
and
push
add
add
add
add
add
add
je
and
insl
add
jae
jae
and
add
outsb
add
outsb
add
add
popa
add
add
and
push
add
outsb
add
add
add
add
popa
add
add
imul
dec
add
or
inc
add
bound
jb
add
push
add
add
add
imul
add
add
add
bound
bound
jb
add
push
add
add
imul
add
push
add
outsb
add
add
add
add
outsl
add
imul
add
add
add
add
or
add
insb
add
add
add
add
outsb
add
add
add
add
and
dec
add
add
push
add
add
imul
add
add
add
inc
add
arpl
add
add
add
or
dec
add
add
jp
add
arpl
push
add
add
add
je
add
add
add
add
add
je
and
imul
add
outsb
add
add
imul
je
and
jae
imul
and
jae
add
add
je
and
popa
add
add
add
outsl
add
data16
push
add
popa
add
add
add
dec
add
or
inc
add
bound
jb
add
push
add
add
add
popa
add
add
imul
add
imul
add
add
add
arpl
push
add
filds
add
or
add
add
outsl
add
imul
add
or
add
imul
add
push
add
outsb
add
add
bound
bound
jb
add
push
add
add
add
and
add
insl
add
insb
add
jb
add
add
testb
add
add
and
outsb
add
arpl
push
add
add
outsl
add
add
and
ja
add
add
outsb
add
add
popa
add
outsb
add
outsb
add
push
add
add
insb
add
jb
or
add
outsl
add
insl
add
je
imul
add
or
inc
add
jae
je
in
je
imul
outsb
add
sbb
push
add
addr16
add
add
add
jb
and
dec
add
popa
add
add
add
je
sub
add
add
cmp
dec
add
popa
add
add
add
je
sub
add
add
and
imul
add
outsb
add
add
and
outsb
add
arpl
push
add
jne
jae
and
add
insl
add
add
je
jb
add
insl
add
add
add
add
add
and
ja
add
add
outsb
add
add
insl
add
add
dec
add
jae
je
sub
add
add
and
imul
add
outsb
add
add
and
outsb
add
arpl
push
add
outsb
add
add
add
and
push
add
add
popa
add
and
add
jae
arpl
push
add
bound
add
and
ja
add
add
outsb
add
add
add
insb
add
jb
and
bound
add
insl
add
add
jb
jae
je
add
add
outsb
add
add
add
and
inc
add
outsb
add
je
add
sub
add
in
je
add
outsl
add
je
add
je
jae
sub
inc
add
push
add
and
bound
add
insl
add
add
jb
jp
add
add
outsb
add
add
imul
jb
and
inc
add
outsb
add
je
add
imul
add
jae
jae
add
inc
add
outsb
add
add
add
imul
add
jbe
imul
je
add
and
outsl
add
add
and
jne
outsb
add
imul
je
bound
popa
add
add
and
inc
add
outsb
add
je
add
and
imul
add
outsb
add
add
imul
je
and
add
outsb
add
add
outsl
add
jne
jae
and
add
push
add
add
sub
inc
add
add
add
je
and
daa
add
add
add
popa
add
add
add
outsb
add
add
add
add
add
outsl
add
add
add
add
and
inc
add
outsb
add
je
add
cmp
push
add
je
add
add
outsl
add
add
add
add
and
dec
add
add
add
insl
add
insb
add
jb
and
imul
add
outsb
add
add
imul
je
and
jbe
add
bound
outsl
add
add
outsb
add
add
add
add
outsb
add
inc
add
add
outsb
add
arpl
push
add
add
imul
bound
insb
add
and
imul
add
outsb
add
add
outsb
add
add
outsb
add
push
add
add
add
jb
and
dec
add
dec
add
add
and
outsb
add
arpl
push
add
add
in
outsb
add
add
je
and
ja
add
add
outsb
add
add
and
add
outsb
add
insl
add
add
imul
je
bound
popa
add
add
and
inc
add
outsb
add
je
add
and
imul
add
outsb
add
add
add
outsb
add
add
outsl
add
add
add
and
add
insl
add
arpl
push
add
add
add
outsb
add
add
add
cld
add
outsb
add
add
and
popa
add
filds
add
push
add
and
add
jae
and
jp
jne
insb
add
add
jae
imul
outsb
add
add
add
add
arpl
push
add
add
cld
add
add
ja
add
insl
add
insb
add
add
imul
add
cld
add
je
sbb
push
add
je
add
insl
add
outsb
add
add
add
jae
je
and
outsb
add
arpl
push
add
insl
add
add
add
cld
add
add
imul
je
and
add
outsb
add
add
add
add
add
add
add
and
jbe
add
data16
add
bound
popa
add
pop
add
jb
outsl
add
jo
dec
add
add
js
and
imul
add
outsb
add
add
imul
je
and
imul
add
imul
jb
and
jae
add
outsb
add
add
insb
add
and
add
jb
and
inc
add
outsl
add
jo
dec
add
add
js
and
add
outsb
add
jae
and
jbe
outsl
add
push
add
add
add
add
outsb
add
add
add
cld
add
insb
add
insl
add
outsb
add
add
dec
add
outsl
add
insl
add
insb
add
jb
and
imul
add
outsb
add
add
imul
je
and
add
jae
je
add
add
add
add
add
outsb
add
add
add
jne
jb
and
pop
add
imul
jae
imul
and
imul
add
outsb
add
and
dec
add
add
add
insl
add
insb
add
jb
add
add
imul
add
jbe
adc
push
add
add
popa
add
sub
add
add
add
insb
add
jb
and
inc
add
add
outsb
add
arpl
push
add
add
popa
add
outsb
add
add
jne
jb
and
add
insb
add
jae
add
and
ja
add
add
outsb
add
add
add
jae
outsl
add
jb
arpl
add
add
add
jne
jb
add
and
outsb
add
arpl
push
add
add
jne
outsb
add
add
sbb
and
add
add
imul
add
imul
je
and
imul
insb
add
insl
add
outsb
add
add
jb
je
sub
add
jb
popa
add
add
outsb
add
add
cld
add
and
jae
outsl
add
je
imul
je
add
add
add
je
add
and
outsb
add
arpl
push
add
jne
insb
add
add
jae
imul
and
add
add
imul
add
add
imul
and
outsb
add
arpl
push
add
outsb
add
add
imul
jb
and
inc
add
jne
jo
jo
add
add
cld
add
and
dec
add
add
jae
add
jb
add
imul
jb
imul
jne
outsb
add
add
pop
add
imul
outsb
add
arpl
push
add
add
add
js
imul
imul
je
and
outsb
add
arpl
push
add
push
add
add
popa
add
sub
add
jb
add
bound
data16
push
add
adc
inc
add
je
insl
add
jo
and
imul
and
jne
outsb
add
cld
add
add
add
add
outsb
add
cld
add
add
add
jae
and
push
add
insl
add
outsl
add
add
add
and
inc
add
testb
add
and
add
outsb
add
jae
and
push
add
insl
add
outsl
add
add
add
popa
add
outsb
add
add
imul
je
and
add
in
outsb
add
add
je
and
ja
add
add
outsb
add
add
outsl
add
insl
add
je
and
add
jb
and
pop
add
imul
push
add
bound
insb
add
add
and
ja
imul
and
outsb
add
arpl
push
add
outsb
add
add
jae
je
cld
add
add
add
jns
jae
je
add
jb
add
jae
outsl
add
jb
arpl
add
and
add
jae
arpl
push
add
je
add
add
add
outsb
add
popa
add
add
add
imul
and
add
insb
add
jne
bound
je
and
imul
add
outsb
add
add
add
arpl
push
add
adc
add
cld
add
add
add
and
inc
add
popa
add
imul
jb
testb
add
adc
push
add
addr16
add
add
add
and
dec
add
popa
add
add
add
je
add
sbb
dec
add
add
jae
add
add
add
imul
je
and
add
data16
outsb
add
add
das
add
insb
add
jae
jae
add
add
imul
add
jb
and
inc
add
jp
add
arpl
push
add
add
add
add
js
imul
imul
je
and
bound
add
add
je
jae
das
add
add
je
add
add
add
je
popa
add
add
je
and
imul
add
outsb
add
and
add
jo
jo
add
add
outsb
add
add
imul
jb
in
add
and
sub
and
xor
and
add
add
outsl
add
jo
outsl
add
add
je
add
add
imul
add
jb
and
inc
add
jp
add
arpl
push
add
add
add
add
js
imul
imul
je
and
bound
add
add
je
jae
das
add
outsb
add
add
add
and
push
add
add
outsb
add
insb
add
jae
je
add
add
imul
and
inc
add
jo
insb
add
imul
add
add
add
imul
je
and
add
insb
add
jne
bound
je
sub
inc
add
je
add
and
and
and
add
add
popa
add
outsb
add
add
imul
je
and
add
jae
je
add
add
add
add
add
outsb
add
add
add
add
add
add
and
and
add
popa
add
outsb
add
add
imul
je
and
add
testb
add
outsb
add
je
and
ja
add
add
outsb
add
add
add
add
outsb
add
cld
add
add
add
jae
and
push
add
add
popa
add
sub
add
insl
add
je
sub
daa
add
add
add
add
add
jae
je
and
imul
add
outsb
add
add
cld
add
add
add
jb
and
dec
add
insl
add
outsl
add
add
je
add
outsb
add
insl
add
pop
add
outsb
add
cld
add
add
add
jb
and
push
add
popa
add
add
cld
add
and
inc
add
add
outsb
add
arpl
push
add
add
outsb
add
cld
add
add
add
jb
and
inc
add
add
outsb
add
arpl
push
add
add
add
je
add
popa
add
popa
add
imul
je
and
add
jb
and
dec
add
jae
je
add
add
jae
je
and
add
jae
arpl
push
add
je
and
sub
and
add
add
jne
and
jbe
imul
add
add
imul
jb
in
add
and
imul
add
jb
and
dec
add
jae
je
add
add
add
add
add
add
je
add
imul
add
and
cld
add
add
jae
arpl
push
add
je
add
add
add
and
dec
add
js
imul
insl
add
add
add
add
inc
add
jo
popa
add
add
add
add
and
add
jae
and
push
add
add
arpl
push
add
add
add
insl
add
add
add
add
and
push
add
add
arpl
push
add
popa
add
add
insb
add
add
imul
je
and
insl
add
add
insb
add
arpl
push
add
push
add
and
bound
add
insl
add
add
add
add
and
jbe
outsl
add
and
and
add
and
add
add
add
add
imul
outsl
add
add
jb
add
push
add
pop
add
outsl
add
outsb
add
add
push
add
outsl
add
je
popa
add
or
inc
add
add
jae
je
popa
add
or
dec
add
je
je
ja
outsl
add
push
add
outsb
add
add
jae
je
popa
add
pop
add
jb
add
je
popa
add
pop
add
popa
add
jae
je
popa
add
pop
add
outsl
add
data16
push
add
cld
add
and
daa
add
add
add
imul
je
and
add
data16
outsb
add
add
and
add
add
popa
add
outsb
add
add
imul
je
and
jp
jne
and
and
add
jne
add
ja
imul
add
and
ja
add
add
outsb
add
inc
add
je
jae
sub
add
add
and
popa
add
filds
add
push
add
and
add
jae
and
jp
jne
insb
add
add
jae
imul
outsb
add
add
add
add
arpl
push
add
outsb
add
add
imul
outsb
add
add
jne
insl
add
add
add
add
and
add
testb
add
outsb
add
je
add
and
push
add
jae
jae
outsl
add
jb
arpl
add
sub
add
add
insl
add
add
popa
add
outsb
add
add
imul
je
and
add
jae
arpl
push
add
bound
add
and
ja
add
add
outsb
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
ja
jne
jb
add
and
jbe
outsl
add
and
push
add
jb
add
add
add
and
add
jne
data16
add
jne
data16
outsb
add
and
add
jb
and
dec
add
inc
add
push
add
add
add
and
dec
add
jne
jo
je
sub
add
add
add
add
jae
je
add
add
add
add
push
add
popa
add
jne
popa
add
pop
add
add
jb
jne
popa
add
add
dec
add
add
jp
add
add
imul
dec
add
imul
jne
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
imul
add
bound
add
or
dec
add
jbe
add
bound
add
or
inc
add
jp
add
bound
add
add
push
add
add
dec
add
add
inc
add
adc
and
add
add
add
add
add
insb
add
and
and
add
add
bound
jae
je
jb
popa
add
je
add
and
inc
add
push
add
inc
add
jne
add
imul
jae
jbe
add
insb
add
je
jp
jne
outsb
add
and
bound
add
and
inc
add
add
jae
jae
add
add
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
outsl
add
and
inc
add
add
jae
jae
add
add
add
jns
jae
je
add
data16
push
add
add
add
add
outsl
add
add
add
add
add
add
cmp
inc
add
outsb
add
add
jne
data16
jne
data16
add
imul
jb
and
inc
add
je
jb
imul
jae
jae
jns
jae
je
add
data16
outsb
add
je
imul
and
imul
and
data16
push
add
jae
arpl
push
add
add
add
dec
add
outsb
add
add
add
add
dec
add
add
add
inc
add
jb
add
dec
add
imul
jne
outsb
add
add
jne
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
popa
add
imul
je
add
add
add
jb
and
jae
imul
add
add
and
inc
add
jb
popa
add
sub
add
add
and
popa
add
filds
add
push
add
and
add
jae
and
addr16
add
add
add
outsb
add
add
add
add
arpl
push
add
popa
add
imul
je
add
add
add
jb
and
jae
imul
add
add
and
inc
add
jb
popa
add
and
imul
and
add
jae
jo
add
jb
je
pop
add
outsb
add
cld
add
add
add
and
push
add
jb
imul
je
sub
add
jne
insl
add
popa
add
add
add
add
add
outsb
add
cld
add
add
add
and
push
add
jb
imul
je
sub
add
jb
popa
add
add
outsb
add
add
outsb
add
cld
add
add
add
and
push
add
jb
imul
je
sub
add
jb
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
popa
add
imul
je
add
add
add
and
push
add
jo
jae
and
sub
and
add
add
outsl
add
outsb
add
add
add
imul
je
and
imul
push
add
jo
and
sub
and
add
add
outsl
add
jbe
add
je
imul
je
and
ja
add
add
outsb
add
faddl
bound
add
insb
add
jne
data16
add
add
and
add
jb
and
dec
add
outsb
add
add
je
imul
jne
outsb
add
and
add
outsb
add
jb
and
push
add
jb
imul
je
add
add
outsl
add
and
push
add
jo
and
sub
and
add
add
outsb
add
add
add
and
sub
and
add
add
popa
add
imul
je
sub
add
jb
insb
add
jne
data16
add
outsb
add
cld
add
add
add
jae
and
inc
add
add
insl
add
outsb
add
add
outsb
add
cld
add
add
add
jb
and
push
add
jb
imul
je
sub
add
sbb
dec
add
add
popa
add
add
outsb
add
add
imul
je
and
jne
outsb
add
add
jae
je
cld
add
add
add
outsb
add
jb
ja
popa
add
je
add
add
and
push
add
jb
imul
je
sub
add
insb
add
jb
adc
inc
add
je
add
outsb
add
and
inc
add
arpl
add
je
imul
and
and
add
jne
jae
ja
add
je
jne
outsb
add
and
jbe
outsl
add
and
popa
add
jae
add
je
and
data16
push
add
jae
arpl
push
add
add
pop
add
arpl
push
add
add
je
add
add
and
outsb
add
arpl
push
add
outsb
add
add
jae
je
cld
add
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
adc
inc
add
add
je
imul
add
insl
add
jne
outsb
add
add
insb
add
jne
data16
add
outsb
add
cld
add
add
add
and
pop
add
imul
jb
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
cld
add
add
add
and
push
add
jo
jne
insl
add
popa
add
add
add
add
add
jne
add
imul
jae
jbe
add
insb
add
je
jp
jne
outsb
add
and
bound
add
and
inc
add
add
jae
jae
add
add
add
add
add
outsl
add
and
inc
add
add
jae
jae
add
add
add
jne
add
imul
jae
jbe
add
insb
add
je
jp
jne
outsb
add
push
add
je
popa
add
imul
add
add
add
insb
add
jne
data16
add
je
jb
add
add
and
add
add
cld
add
imul
add
add
jb
imul
insb
add
add
add
je
add
add
outsb
add
add
jae
jne
outsb
add
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
and
and
add
add
and
add
add
add
outsb
add
add
add
outsb
add
jae
data16
push
add
aaa
add
outsl
add
insl
add
je
and
daa
add
add
add
outsb
add
cld
add
add
add
add
add
jb
and
outsb
add
arpl
push
add
outsl
add
jo
popa
add
add
add
add
imul
inc
add
add
insl
add
outsb
add
add
add
outsb
add
add
jb
add
insl
add
outsb
add
add
cld
add
and
inc
add
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
sub
add
add
add
outsb
add
jne
data16
jne
data16
add
imul
je
and
jne
outsb
add
add
jae
je
cld
add
add
add
add
add
or
push
add
push
add
bound
add
xor
add
insb
add
jb
and
bound
add
insl
add
add
jb
jp
add
add
outsb
add
add
outsl
add
and
push
add
jb
imul
je
add
add
add
jb
and
jae
imul
add
add
and
inc
add
jb
popa
add
and
daa
add
add
add
jae
je
and
imul
add
outsb
add
add
cld
add
add
add
jb
and
dec
add
je
add
add
ja
add
je
sbb
pop
add
and
ja
add
imul
inc
add
bound
add
je
jae
jae
jo
add
arpl
push
add
add
sub
add
insb
add
jb
and
and
add
add
add
and
outsb
add
arpl
push
add
add
jne
outsb
add
add
adc
push
add
addr16
add
add
add
jb
and
inc
add
je
add
outsb
add
insl
add
sbb
pop
add
and
jbe
imul
add
add
gs
add
data16
add
add
add
add
add
add
pop
add
add
add
jp
jne
add
imul
and
jbe
add
ja
add
add
jb
je
and
add
jae
jne
arpl
push
add
outsb
add
add
and
add
insl
add
add
add
add
add
add
and
jp
jne
and
insb
add
jae
add
push
add
jne
and
ja
add
imul
push
add
add
arpl
push
add
insb
add
je
jp
sbb
push
add
addr16
add
add
add
and
outsb
add
insl
add
jb
imul
push
add
imul
popa
add
add
add
add
imul
outsl
add
and
add
jb
arpl
push
add
insb
add
add
add
insb
add
jb
and
bound
add
and
inc
add
jb
add
arpl
push
add
cld
add
jne
outsb
add
str
outsb
add
add
add
cld
add
add
insb
add
jne
data16
add
cld
add
add
add
and
inc
add
add
je
imul
add
insl
add
outsl
add
add
popa
add
add
outsb
add
add
imul
outsl
add
insl
add
add
jbe
imul
outsl
add
and
add
jb
arpl
push
add
insb
add
add
insb
add
imul
outsl
add
insl
add
cld
add
add
insb
add
jne
data16
add
cmp
aaa
mov
pop
fwait
cmp
add
add
cmp
add
add
jae
jb
outsb
addr16
adc
fs
je
insb
jae
adc
inc
outsl
outsb
jae
jae
add
push
jns
je
insl
add
adcl
je
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
gs
adc
push
jns
push
je
insb
jae
or
push
imul
adc
jns
gs
adc
outsl
outsb
jae
add
outsb
inc
outsl
insl
inc
je
insb
jae
adc
je
jb
add
push
imul
add
pop
inc
insb
popa
jae
gs
sbb
dec
gs
popa
addr16
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
jae
arpl
gs
add
sub
popa
jo
imul
outsl
jb
jae
adc
dec
popa
je
add
inc
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
imul
dec
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
arpl
imul
insl
insl
add
mov
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
cld
push
add
jle
dec
inc
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
sub
add
addb
mov
mov
jnp
int
or
adc
add
jns
mov
or
and
mov
mov
inc
add
lock
push
jp
jb
shl
movsb
mov
xor
stmxcsr
rclb
adc
sar
sbbb
or
mov
inc
test
mov
xchg
rcrb
cmp
into
mov
stos
xor
sub
mov
arpl
sub
dec
mov
aam
cmp
imul
sbb
stc
push
mov
shrb
xor
ds
fstpl
fsubp
inc
idivb
daa
gs
clc
jmp
pop
inc
xor
or
adc
xchg
mov
adc
pop
jge
sub
jne
lods
mov
test
hlt
pop
movsl
xchg
pop
out
sub
fcoms
sub
mov
andb
cmp
sbb
jecxz
test
notl
shlb
jecxz
mov
test
andl
xor
push
add
xchg
test
xchg
xchg
aas
and
ret
push
mov
test
mov
xor
mov
xor
sub
sbb
mov
cmp
out
mov
xchg
mov
clc
pop
xchg
sub
lea
mov
jb
pusha
inc
stos
mov
shlb
out
popa
jecxz
test
mov
shrb
ret
xor
in
test
sub
jg
daa
jecxz
dec
fbstp
hlt
out
or
adc
imul
push
jl
sbb
pop
inc
cmp
pushf
out
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jae
call
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
cmpsb
out
cmp
jle
sub
pop
mov
add
push
and
pop
push
call
dec
loope
hlt
sbb
fidivrs
mov
pop
pop
jl
jmp
mov
shll
std
repnz
sar
lahf
in
mov
mov
add
xor
adc
xor
push
mov
pop
mov
mov
sub
sbb
dec
adc
dec
jne
mov
cmpsb
std
mov
dec
jle
mov
fnstsw
pop
cmp
movsl
in
dec
mov
or
int3
push
cmp
mov
adc
leave
jge
push
adc
cmpsb
std
mov
inc
int
xor
sbb
std
mov
or
aam
aaa
loop
push
xchg
das
popa
or
movsb
int3
sub
inc
icebp
inc
repnz
dec
lcall
ljmp
mov
mov
add
push
inc
inc
jg
das
sbb
mov
push
cmp
cmc
clc
mov
mov
std
sbb
in
push
das
repnz
xor
jl
and
mov
stos
push
insl
mov
cmpsb
fiadds
xor
push
paddw
mov
adc
xchg
cmp
mov
xbegin
mov
mov
mov
add
cmpsb
std
sbb
std
mov
sbb
js
push
in
mov
int3
cmpsl
movsb
shlb
mov
cmp
scas
aaa
addb
mov
in
mov
repnz
pop
dec
loopne
sub
pop
out
mov
call
js
aaa
lods
loope
and
outsl
inc
lock
pop
cmp
fidivs
mov
cmp
ljmp
aam
mov
pop
cmp
ret
icebp
inc
xchg
addb
icebp
int3
mov
sbb
lret
jne
test
add
pop
lock
xlat
outsb
ds
jns
out
outsl
jb
pushf
adc
jge
rorb
push
adc
mov
sbb
lret
sub
jl
mov
call
int
dec
ret
mov
bound
fimull
pop
jge
ljmp
jecxz
ret
fidivs
xchg
or
mov
mov
fcom
mov
idivl
jns
xchg
fbld
fwait
icebp
data16
adc
fdivs
mov
cli
xchg
mov
fdivrs
test
mov
rcrb
roll
cld
mov
pop
jecxz
or
jp
mov
mov
or
in
dec
shlb
sbb
xchg
loopne
imul
mov
rclb
jb
leave
xor
push
inc
mov
out
cmp
cwtl
jecxz
ret
cmp
or
fidivrs
or
fldcw
mov
pusha
cld
mov
cld
mov
out
xor
mov
pushf
rclb
sbb
ss
test
pop
lds
iret
cli
sbb
out
xchg
push
adc
mov
cmp
inc
cmp
inc
jae
lea
xor
jl
out
imul
fdivrl
push
mov
out
subb
leave
add
clc
in
xchg
dec
mov
cmp
mov
mov
stc
fldl
push
stc
fisttpll
stos
mov
aaa
and
addb
stc
fstl
stos
stc
push
imul
mov
dec
ficomps
xor
pop
xchg
inc
cld
mov
add
das
jmp
clc
fisttpll
mov
hlt
mov
mov
in
in
stos
lock
fstp
sub
mov
arpl
adc
mov
cld
lea
cmpsl
stc
fnstsw
sbb
mov
and
mov
stc
inc
jae
mov
in
imul
fucom
out
imul
fucom
int
xor
adc
cmp
loopne
hlt
sub
mov
stos
mov
and
mov
subl
stos
stc
cmp
cmpsl
stc
fstp
out
bnd
fdivrp
repnz
test
xchg
or
mov
cmc
repz
outsl
push
jmp
mov
add
cmpsl
stc
fstp
inc
or
stos
stc
push
ficoms
sbb
mov
adc
mov
jae
lea
cmp
jmp
jae
xchg
in
imul
fucom
int
xor
fisttpll
stos
out
inc
ds
push
inc
mov
cld
fnstsw
inc
add
xchg
cmc
fisttpll
stos
mov
mov
stc
pop
ficomps
hlt
sub
mov
mulb
push
adc
sub
cli
sarl
not
jnp
out
cwtl
lret
popf
jne
fdivrl
pop
jmp
out
stos
not
jnp
out
cwtl
lret
popf
xchg
dec
mov
jnp
and
add
jmp
mov
mov
sub
cli
rcrl
test
lcall
jmp
xchg
mov
xchg
push
mov
repz
cli
shll
xchg
xchg
push
aas
xchg
mov
xchg
push
mov
repz
cli
shll
xchg
add
and
in
rorl
pop
mov
sbb
mov
sub
stos
stc
fisttpll
and
add
jmp
mov
add
mov
cld
fnsave
mov
fimuls
inc
sub
in
rorl
lahf
mov
sbb
cmc
mov
pop
ficomps
jge
test
adc
jge
jbe
xchg
ficomps
rdtsc
jb
divb
or
les
stc
fstp
out
ret
stc
add
stos
dec
fimuls
mov
pop
jl
pushf
das
or
mov
xor
movsb
das
repz
fisttpll
stos
stc
xor
mov
fisttpll
lock
fisttpll
stos
into
gs
test
mov
inc
or
and
stc
fstp
call
addr16
movsb
dec
fimuls
xlat
cli
mov
inc
test
or
jmp
pminsw
pop
outsl
daa
daa
mov
insb
jne
das
xor
das
sub
movl
xor
mov
test
idivl
out
xchg
cmc
icebp
pushw
out
jnp
or
mov
loope
push
call
pop
xchg
movsl
lock
scas
fimuls
stos
stc
fisttpll
stos
stc
fisttpll
stos
stc
fisttpll
stc
jmp
cmp
stc
stc
fisttpll
stos
cmp
cmc
mov
fimuls
lds
sti
repz
stos
stc
fisttpll
stos
stc
fisttpll
xor
mov
clc
fst
push
mov
mov
je
xor
cmp
adc
inc
mov
jae
cmp
ljmp
pushf
imul
sub
subb
push
loopne
loopne
imul
movsl
test
mov
dec
movsl
je
mov
add
pop
cmp
lea
xchg
sbb
loop
sarb
mov
js
testl
pushf
je
jp
cmp
push
pop
xor
push
xor
jns
pop
inc
and
arpl
push
ja
adc
or
das
add
xchg
xor
hlt
inc
cwtl
enter
fmull
and
mov
popa
pushf
push
push
xchg
xchg
fidivrl
pop
xchg
ja
adc
push
push
popa
mov
xor
mov
and
inc
pop
gs
cmp
mov
in
mov
add
add
or
add
add
inc
add
xor
pushf
loopne
add
inc
inc
add
sub
add
sub
add
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
push
add
sub
add
push
add
sub
add
push
add
sub
add
push
add
sub
add
push
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sub
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
int3
sub
add
add
add
sub
add
add
add
sub
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
popa
addr16
imul
dec
arpl
push
imul
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
cmp
add
cld
add
or
xchg
add
and
icebp
xor
and
adc
inc
inc
push
rclb
sub
dec
fdivs
mov
js
in
outsl
and
inc
shrb
mov
pop
push
rcrl
or
push
add
int3
sbb
ss
cli
roll
inc
and
add
jb
outsb
xor
add
push
and
xor
sub
sbb
and
rolb
add
adc
sbb
add
push
arpl
je
jmp
mov
add
in
jb
test
movsb
sbb
mov
add
cwtl
xchg
xchg
enter
add
cmp
sbb
jl
push
and
in
push
jo
insb
sbb
and
and
pop
enter
push
jb
cmp
dec
add
orl
and
xchg
add
inc
in
jb
cmp
xor
and
and
add
mov
les
push
add
and
pop
or
inc
hlt
sub
add
mov
pop
sbb
add
lods
or
cmp
gs
or
cmp
sbb
js
and
and
mov
adc
add
push
pushf
int3
push
call
add
test
jne
inc
fistpl
lret
dec
inc
cmp
or
rolb
mov
add
in
add
lock
sbb
inc
addl
fs
stc
jecxz
adc
push
add
pop
nop
arpl
mov
repnz
daa
add
add
mov
mov
push
or
ficoms
add
bound
adc
push
add
mov
mov
or
scas
push
adc
adc
mov
nop
push
push
cmpb
icebp
cld
jne
add
bound
cmp
clc
push
add
nop
scas
cmp
inc
mov
push
or
push
jne
adc
adc
scas
mov
daa
pop
sbb
inc
add
push
add
ret
in
nopl
inc
fisttps
pop
add
clc
or
test
add
push
pop
add
mov
jns
add
mov
mov
jb
inc
into
add
add
call
ja
add
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
add
divb
add
into
fldl
clc
aaa
xor
iret
pop
sub
add
sub
and
sub
aad
xlat
cmp
adc
ds
mov
add
or
sbb
sti
cltd
rcrb
pop
xchg
jl
in
add
in
xor
cmpb
in
jg
cmp
out
add
mov
add
add
and
sbb
push
and
mul
clc
mov
jne
add
mov
mov
adc
mov
add
clc
stos
fs
fsts
in
popa
push
add
push
loopne
pop
jno
add
xor
cmp
sub
movsl
fsubl
dec
adc
dec
in
jae
add
mov
pop
jne
jbe
cmp
adc
rorb
jmp
xchg
repz
nop
out
add
inc
and
add
jg
mov
push
xchg
shll
jp
cmpsb
jne
push
push
jae
xchg
sbb
push
add
cltd
adc
pop
jne
cmpsl
jmp
pusha
add
lock
shrb
psubsw
or
and
sbb
lods
adc
mov
add
sbb
and
aaa
add
xchg
ret
xchg
add
loop
clc
mov
push
dec
dec
sbb
shrl
lds
cmc
xor
pop
roll
push
nop
jbe
add
call
or
pop
inc
adc
movntps
test
add
sub
mov
btl
xchg
add
je
sub
mov
add
mov
push
xor
sahf
jmp
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
xor
and
test
add
je
or
cmp
cmpsl
int3
pop
fiadds
insb
aaa
and
jp
pop
mov
je
cli
add
cmpsl
xchg
add
pop
bound
dec
adcb
test
push
inc
add
loopne
xchg
pop
fimull
test
es
in
call
sbb
test
xchg
leave
movsl
xchg
nop
inc
jne
test
push
mov
insl
add
lods
or
push
or
add
push
xorb
pushw
push
lahf
dec
loopne
dec
sub
sub
cmc
stos
mov
inc
sbb
cmp
test
test
sub
adc
sbb
or
push
inc
adc
push
add
stc
lds
cld
cwtl
add
sbb
or
or
push
out
cmp
jae
rolb
iret
push
je
rorl
int3
inc
mov
add
pop
andb
xchg
mov
ret
mov
loopne
mov
dec
add
push
adc
out
pop
adc
add
aad
lea
addl
push
fs
pushl
int3
andb
xor
leave
cmpb
jle
and
add
sahf
scas
testb
subb
pop
int3
inc
mov
cmpl
faddl
out
popf
adc
mov
rolb
inc
pop
scas
inc
add
mov
adc
add
mov
mov
push
sub
jmp
sub
mov
es
push
cmp
xchg
or
sub
jmp
sbb
jo
xchg
add
call
mov
out
hlt
dec
shlb
mov
pop
mov
out
add
daa
adc
pushf
xor
unpckhps
pop
test
pop
lret
ficompl
adc
in
fildl
pop
inc
loopne
cmp
add
adc
stc
jb
add
subb
test
push
jns
add
add
dec
int
add
jmp
movsl
pop
sub
mov
jp
fisttps
imul
test
mov
test
jb
pop
ja
addr16
push
loope
adc
jns
pop
adc
test
scas
les
mov
xchg
cmp
add
cli
adc
add
lcall
add
mov
jl
inc
or
jb
popa
or
incl
rcrb
sub
stos
add
cld
cwtl
in
jg
add
adc
adc
or
push
test
add
rolb
and
addb
andl
adc
or
xor
or
leave
inc
and
push
mov
pop
add
add
push
sbb
scas
enter
adc
ret
loop
and
mov
testb
test
inc
xor
movb
jo
push
mov
mov
add
add
fidivs
push
xor
mov
or
add
fadds
and
test
jne
loopne
test
pop
xor
lret
push
add
and
movsb
movl
dec
or
xor
aas
fdiv
je
adc
repz
jns
iret
add
lds
adc
mov
loopne
jmp
and
inc
add
jg
sub
daa
in
add
sub
mov
lcall
sbb
pop
or
lea
shr
aas
add
xor
or
mov
pop
pop
into
dec
xchg
xor
mov
mov
roll
and
xchg
add
cmp
mov
ret
add
hlt
lcall
inc
pop
rcrl
xor
jecxz
add
adc
pop
incb
fs
cmp
jl
mov
cmp
pop
ret
xor
add
cs
mov
sbbb
add
sub
in
addl
pop
adc
sub
add
pop
adc
pop
dec
sbb
cmovo
imul
push
in
sbb
cli
movsl
jg
cld
pusha
rorl
inc
mov
inc
and
addr16
cmp
pop
xchg
and
call
mov
inc
jbe
clc
add
or
aam
and
aas
dec
add
pop
sbb
xlat
xor
adc
and
in
sbbb
cmc
outsl
add
push
xor
addl
sbb
adc
xchg
ds
leave
xor
icebp
call
xor
ss
jmp
jne
add
mov
mov
lea
push
push
add
dec
pusha
popa
add
rolb
clc
adc
cmp
push
lea
push
adcb
cwtl
pop
add
mov
cltd
test
cmpb
pushf
ja,pn
jg
test
add
jnp
or
jg
pop
pop
fsubs
je
add
mov
es
push
xchg
fmuls
sbb
pop
mov
addb
idivb
dec
xor
and
jp
jo
sub
mov
add
flds
out
adcb
jmp
dec
mov
mov
mov
add
cs
xchg
dec
gs
adc
add
sarb
mov
cld
cmp
add
sub
mov
pop
mov
or
mov
add
add
add
push
push
add
movups
faddl
push
sti
lock
roll
popl
xchg
leave
int
test
dec
jns
or
add
cmpsl
inc
add
push
shlb
shrb
or
mov
int3
sahf
and
inc
cmp
or
adc
test
push
and
or
mov
rclb
or
inc
sbb
daa
xor
jns
add
loope
jg
sub
in
push
add
sub
xchg
add
sbb
cmc
xor
and
xchg
inc
push
cmpsl
cwtl
adc
and
pop
and
mov
aas
fs
mov
ss
inc
push
sub
lea
lock
add
pop
jmp
jo
sbb
outsl
pop
adc
jne
pop
push
test
add
or
aam
jns
decl
mov
or
add
je
mov
add
addr16
add
loopne
push
int3
aas
enter
or
inc
pop
add
and
cmpsb
xchg
add
adc
mov
xchg
dec
or
xor
push
cmpb
or
jle
lcall
scas
faddl
mov
add
ret
sbb
mov
lret
or
aaa
orl
add
js
push
rcrl
or
icebp
adc
mov
roll
add
test
add
mov
xlat
adcb
in
out
decb
inc
mov
xlat
pop
mov
mov
add
nop
enter
decb
mov
add
fdivrs
pop
add
add
sub
adc
data16
jge
cmc
cmpb
mov
imul
clc
xor
testb
ljmp
adc
push
sbb
mov
push
add
push
mov
cmpsl
cmc
push
xor
test
test
add
lds
jl
in
ret
mov
testl
add
pop
jp
test
int
add
add
or
mov
xlat
jmp
sbb
add
add
ret
pop
pop
in
push
cmp
mov
icebp
add
dec
loopne
in
sub
add
rcll
xor
clc
xor
cmc
dec
loop
sub
add
and
inc
or
lret
mov
push
add
ja
imul
inc
add
sbb
mov
xchg
add
test
adc
cmp
sbbl
add
add
xchg
clc
jo
dec
add
lahf
or
bound
add
cmp
dec
adc
call
jmp
jg
add
inc
clc
pop
lret
sbb
or
mov
bound
adc
ret
dec
test
push
mov
fdivr
mov
sbb
jne
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
push
int3
add
adc
add
dec
dec
cwtl
loopne
lock
scas
add
pop
incl
rorl
xor
mov
and
dec
shlb
test
out
add
int3
enter
jo
adc
into
fcmovnu
add
fcmovu
add
add
loope
and
push
sub
and
pop
cmp
mov
rcrb
leave
push
push
adc
push
pinsrw
or
adc
xor
xchg
xchg
xlat
cmp
testb
adc
pop
sub
js
rep
pop
incb
and
loope
xchg
rcrl
jl
sete
adc
std
sbb
in
lret
add
lcall
add
push
fs
aas
jmp
xchg
cmp
enter
add
and
aam
rol
or
add
out
aas
add
inc
lock
add
push
adc
jg
jo
hlt
or
andb
cmp
add
pop
dec
into
cmc
adc
clc
lcall
mov
clc
lock
mov
push
push
lea
push
lods
and
shlb
enter
mov
incl
adc
roll
mov
jmp
fucom
in
xor
loopne
add
addl
add
mov
lock
pop
cmp
mov
rolb
hlt
add
adc
pop
mov
in
rorb
add
fbstp
pop
add
insb
or
fstps
call
std
fists
add
pop
movsb
sbb
cmp
push
lds
add
mov
dec
nop
mov
ret
and
pop
mov
pop
jbe
cmp
inc
add
jb
and
ja
push
sar
pop
add
pop
add
xlat
lea
sbb
xchg
mov
add
push
jmp
add
sbbl
out
pusha
ret
es
seto
cmp
loopne
inc
dec
xlat
adc
std
pop
jns
cmp
testl
loop
add
push
push
add
outsl
pop
loopne
and
or
or
push
jns
add
sti
fs
mov
xor
fwait
cmp
jp
add
std
xor
movsl
shr
add
sbb
nop
mov
xchg
or
mov
xor
nop
rep
adc
dec
add
adc
add
mov
mov
add
or
xor
push
and
unpcklps
iret
cwtl
push
cltd
rcl
dec
mov
fildl
div
sbb
pop
add
pop
cli
add
jge
add
add
sub
out
dec
adcb
dec
xchg
push
mov
xchg
jnp
or
and
inc
add
dec
jne
inc
leave
sbb
add
push
orb
das
xor
sub
push
ljmp
mov
mov
inc
cmp
and
clc
mov
push
sub
or
shlb
and
add
popa
jg
inc
pop
xor
mov
lock
or
add
lahf
or
xor
mov
add
sub
fcoms
shll
adc
jl
pop
xor
mov
push
mov
push
neg
jle
js
out
add
jnp
sbb
inc
push
add
cmp
xor
mov
popa
pusha
jb
mov
jbe
enter
add
or
add
pop
adc
jmp
test
lcall
in
je
add
jne
repnz
xchg
add
hlt
cli
add
jae
fstl
xor
inc
clc
in
pop
ss
arpl
test
sbb
push
repz
lock
test
cmpb
sbb
lahf
pop
pop
xchg
adc
or
nop
jl
or
cs
pop
pop
dec
outsb
add
dec
add
push
sbb
nop
jmp
mov
frstpm(287
rcrb
push
add
jne,pt
sub
shlb
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
xchg
or
call
out
insb
push
push
punpckhbw
pusha
pop
jb
daa
call
rorb
push
push
cmp
xor
add
jo
frstor
push
or
clc
gs
imul
cmpsl
addr16
push
push
cmp
push
add
push
cld
add
sbb
pushl
and
xchg
ret
sub
mov
dec
inc
push
push
inc
push
addb
add
insb
popa
outsb
js
cmp
inc
gs
jo
mov
push
push
dec
add
dec
popa
jae
imul
jne
sub
push
ret
jecxz
shll
mov
add
xor
mov
cs
cmp
add
call
add
pop
jmp
filds
jnp
jne
jp
icebp
out
cld
jbe
fsubrl
sub
mov
cs
inc
cmpb
mov
sbb
cmovp
add
gs
jns
xor
dec
sbb
mov
test
push
sbb
mov
sub
fiaddl
mov
call
sub
pop
mov
dec
fmuls
push
fcomi
gs
jp
lea
arpl
loop
add
shrl
pop
addr16
inc
sbb
in
cmp
hlt
sbb
jle
leave
sbb
test
lds
xorb
xor
add
call
fmul
adc
sub
cmp
lcall
repz
mov
les
push
cltd
or
push
add
pop
repnz
jno
add
mov
ret
pop
pusha
or
sub
push
pop
inc
cld
repnz
xchg
mov
adc
push
orl
pop
mov
cli
rolb
add
shr
aam
pop
sahf
adc
add
pop
jmp
xchg
lock
inc
addl
jo
xor
outsb
mov
add
imul
and
je
addb
pop
pop
adc
lock
mov
je
and
cmpl
pop
xor
pop
and
or
add
jb
add
xchg
mov
add
call
add
add
add
push
imul
cli
in
add
inc
cltd
or
int3
xchg
sbb
pusha
fistl
push
ret
bound
add
cmp
or
cwtl
dec
add
lret
push
add
sub
mov
mov
jmp
cwtl
jp
push
add
dec
dec
cwtl
leave
js
cmp
inc
add
test
jmp
add
mov
test
ret
add
jl
push
fildll
aam
mov
push
pop
lds
sub
adc
or
loop
mov
aad
push
mov
mov
movsb
and
roll
fistps
adc
and
cmp
xchg
xor
je
or
call
push
or
mov
lock
push
lcall
push
adc
add
hlt
loope
xorb
or
aaa
pop
push
movsl
loopne
or
add
xchg
cmp
push
loop
add
sbb
js
stos
adc
lret
sti
add
dec
cmp
push
mov
adc
add
ja
cmp
outsl
lock
add
xor
shrb
sbb
and
push
popl
pop
push
add
jl
and
and
pushl
add
mov
aad
jo
jae
inc
imul
lret
inc
jmp
sub
ss
add
mov
test
mov
nop
inc
or
jmp
add
insl
sub
outsb
bound
je
inc
adc
clc
add
jne
jmp
sahf
add
dec
adc
cmp
pop
pop
add
setp
pop
sub
je
xchg
clc
adc
orb
pop
sahf
fs
push
push
add
pushf
or
inc
and
into
je
xor
add
jne
push
add
add
mov
adc
fwait
mov
add
dec
sbb
mov
arpl
test
sahf
test
adc
daa
sbbb
test
cwtl
adcb
xor
sbb
xorb
mov
mov
add
jge
loope
dec
add
movl
mov
or
mov
call
shll
subb
push
push
push
push
clc
push
and
pop
add
push
das
fldl2t
jo
push
add
xor
mov
es
mov
inc
or
pusha
and
add
lock
push
mov
stos
addr16
leave
xor
add
sti
and
adc
adc
adc
popf
dec
add
sbb
mov
jne
add
jmp
loope
popa
dec
jnp
xor
add
ret
dec
mov
das
cmp
add
cwtl
dec
add
sarb
jns
push
mov
or
add
xchg
icebp
cmp
jmp
pusha
jno
repz
sbb
xchg
jle
add
adc
cmp
push
cmp
rolb
and
add
std
mov
add
push
enter
xchg
leave
pop
adc
pop
and
iret
sbb
push
and
icebp
xlat
daa
push
inc
into
adc
push
or
push
loopne
aas
add
movsb
lea
pop
add
adc
pop
ret
and
dec
repz
scas
adc
jo
sub
je
add
nop
ss
xor
cmpl
add
popl
je
jae
mov
sti
loopne
mov
mov
sbb
inc
mov
add
xchg
aaa
enter
push
pusha
sarb
push
pusha
icebp
add
nop
je
push
in
outsl
mov
mov
movsb
subb
enter
xchg
cs
add
je
rol
jne
add
mov
dec
test
pushf
inc
scas
mov
or
xchg
mov
add
test
jle
adc
ret
xor
add
xchg
rol
and
out
add
mov
mov
and
or
jg
mov
movsb
call
xor
xor
pushf
add
repz
sbb
roll
sbb
mov
dec
pusha
jecxz
adc
lea
mov
movsl
add
or
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
pop
mov
dec
or
jns
call
or
inc
mov
pop
inc
mov
je
pop
add
xchg
dec
aad
mov
inc
mov
push
pop
or
inc
add
cli
roll
xchg
xor
dec
popa
sub
adc
call
sub
sbb
lahf
add
push
stos
mov
add
out
mov
add
fs
add
in
pop
sub
loopne
mov
xchg
int
add
add
xchg
repnz
cmp
mov
or
xchg
sub
mov
test
mov
push
pop
add
lcall
ljmp
sbb
ja
push
and
add
daa
ds
push
dec
pop
sub
xchg
neg
sbb
mov
hlt
gs
sbb
xor
addb
jnp
ljmp
add
pop
mov
mov
push
call
jne
add
adc
xorb
and
inc
push
or
mov
xchg
adcb
adc
inc
jne
arpl
ds
add
or
mov
es
jo
mov
leave
jge
pop
insb
add
popa
cmp
inc
or
js
push
sub
jbe
adc
stos
rol
pop
pop
mov
sbb
lds
add
cmpb
stos
outsl
sub
ret
dec
mov
and
add
movsb
mov
or
lret
mov
mov
sti
xchg
add
add
mov
jb
je
imul
xchg
jo
jns
mov
sub
arpl
clc
xor
sbb
cmp
mov
mov
jmp
push
aaa
xchg
les
add
fmull
clc
dec
jl
lock
push
lret
sarb
inc
xchg
call
pop
pop
js
pusha
add
movl
sub
sub
in
sbb
test
inc
inc
jg
mov
jne
mov
adc
popf
cmpsl
pop
pop
mov
mov
xchg
jl
dec
sbb
or
sub
fnstcw
jo
sbbl
cmp
cld
les
inc
pop
movb
inc
mov
das
nop
sbb
cs
clc
loopne
stc
jae
add
xchg
or
add
es
femms
cmp
or
lahf
fxtract
ljmp
push
and
add
addr16
add
mov
hlt
or
rcpps
adc
jnp
icebp
test
or
dec
add
shll
xchg
xor
in
test
mov
mov
dec
add
andb
loop
add
stos
sub
push
push
add
push
cmp
test
cwtl
loop
add
call
push
cmp
imul
sub
pop
sub
add
in
xchg
and
xor
sub
rcr
or
pop
cmpsb
or
push
inc
xor
sbb
in
push
mov
sti
and
adc
cmp
jg
aas
inc
nop
repnz
push
push
mov
add
repnz
jle
add
rcrl
add
aam
add
xchg
pusha
and
add
ljmp
mov
aas
nop
add
je
cmp
mov
int3
add
cli
sub
into
pusha
adc
daa
sub
add
push
dec
es
and
xor
pop
adc
add
rcrb
popa
scas
mov
cmp
mov
add
cwtl
dec
add
jmp
pop
sarl
and
add
cld
add
jne
leave
and
fmuls
jle
cli
arpl
stc
dec
add
pop
shlb
mov
dec
clc
call
jno
mov
lret
xor
jle
add
mov
xchg
add
jmp
mov
dec
mov
or
mov
outsl
fbld
add
into
test
dec
jne
jmp
lods
dec
bound
pop
add
xchg
insb
mov
lahf
mov
cld
lret
sbb
jg
imul
pusha
cmpb
add
or
push
shr
dec
jb
push
inc
pop
pop
pusha
dec
dec
sbbl
jae
inc
popa
push
aaa
add
jo
and
cmp
inc
adcl
push
cmp
xor
loope
push
jae
daa
add
pop
pop
lret
pop
or
mov
xchg
nop
mov
inc
add
adc
add
add
jo
mov
in
mov
add
xchg
adc
push
add
push
out
cmpb
lods
add
cld
ret
jo
andb
jl
cmp
fidivrl
pop
sub
lock
mov
hlt
flds
xchg
sub
outsl
cmpsl
xor
inc
cmp
int
adc
insb
pop
add
mov
popa
call
push
dec
xchg
add
dec
add
cmp
pop
movd
sub
loopne
int
inc
add
stc
add
repnz
add
and
cli
add
adc
fisttps
push
jns
xchg
mov
mov
mov
sbb
icebp
or
mov
lret
mov
pusha
je
or
mov
pop
nop
ljmp
clc
and
loop
es
std
add
lcall
scas
pop
and
nopl
dec
add
or
pop
loopne
ja
cmp
add
subb
or
fstl
pop
or
add
jl
cmp
pusha
jae
add
xchg
sub
dec
movsl
aam
add
enter
repz
inc
add
mov
pop
rclb
inc
inc
add
mov
inc
cmp
add
dec
shl
rorb
mov
add
sub
adc
mov
push
scas
pop
sub
mov
mov
loopne
sub
pop
xor
je
test
dec
pop
leave
add
push
pop
insb
inc
fs
pop
sbbb
fsts
fbld
movsl
cmp
mov
add
push
mov
xorl
push
dec
xchg
adc
aam
pusha
test
pusha
xchg
and
jae
sbb
shrl
inc
pop
sbb
nop
dec
add
mov
scas
pop
je
dec
push
adc
dec
add
add
repnz
in
inc
enter
jg
jb
add
add
js
clc
or
leave
ud2
or
sbb
mov
add
cli
add
paddd
adc
jnp
jns
sub
rcrl
or
push
or
pop
jg
add
push
lock
push
cs
add
push
sbb
push
add
shrl
stos
sbb
pop
and
lock
add
fs
leave
inc
jmp
add
cmp
adc
sub
cmp
xchg
fsubl
inc
pusha
pop
or
inc
add
data16
test
mov
xchg
pop
jmp
mov
mov
or
out
mov
rcr
adc
push
or
sub
in
mov
jle
clc
das
aas
or
push
sti
ret
add
and
popa
sbb
adc
push
add
add
aas
xchg
pusha
dec
xor
add
mov
push
icebp
pop
popf
dec
adc
and
jg
in
in
setb
xor
adc
pop
mov
jp
xor
sub
outsb
lods
test
xchg
adcb
add
ret
xor
test
mov
in
and
shll
sbb
sbb
jae
pop
cmp
inc
inc
lea
add
outsl
cld
pop
sbb
add
sarl
ret
lock
loopne
pop
pop
subb
cmp
cmp
dec
dec
fs
push
add
stos
in
cld
xlat
pop
clc
dec
add
and
mov
adc
jg
leave
scas
jnp
in
jmp
jge
adc
sub
xor
adc
loope
cmp
dec
xchg
add
xchg
add
or
and
dec
cltd
xchg
mov
sbbl
lods
and
push
adc
add
sbb
and
pop
aas
subl
adc
stos
cmp
add
mov
out
cvttps2pi
test
xchg
pop
ljmp
push
in
pop
jmp
adc
inc
adc
popa
test
inc
pushf
jns
push
sub
negb
mov
xchg
xchg
xor
lock
cltd
cmpsb
pushl
add
inc
dec
jecxz
and
lar
or
ja
cmpsb
cmp
add
xor
inc
ljmp
stc
and
lds
add
pop
add
je
or
cmp
jmp
sub
inc
xor
mov
xor
test
push
clc
scas
pushf
add
fnsave
push
out
mov
repz
add
or
mov
icebp
cmp
add
bound
in
jl
xchg
shrb
and
int
hlt
das
pop
push
lea
dec
mov
mov
and
or
stos
mov
or
add
or
and
bnd
mov
sbb
dec
inc
mov
dec
or
sub
orps
aam
pop
mov
aad
sbb
pop
and
push
push
das
adc
pop
push
inc
scas
daa
sahf
mov
adc
int
clc
sub
add
pop
les
js
adc
pop
xlat
add
and
jne
sub
cli
push
xorb
mov
push
out
mov
sbb
jmp
cmp
pop
pop
roll
dec
pop
xchg
or
stos
sub
adc
cmpl
subb
push
push
add
add
test
adc
sub
adc
mov
in
pop
add
cmp
jae
jbe
add
dec
mov
or
ret
jo
fildll
hlt
jne
daa
jae
add
mov
cmp
add
or
test
mov
fldl
push
add
mov
or
orb
add
das
fs
lock
jle
jge
push
mov
es
xor
lock
mov
add
sub
push
add
clc
iret
das
addr16
dec
push
test
mov
jge
pop
mov
call
call
cmpsb
add
leave
stc
xchg
and
add
int
push
loop
loopne
enter
jmp
sub
ror
cwtl
cmp
rolb
lret
cwtl
push
sbb
push
fst
adc
add
lods
add
xor
add
and
adc
jmp
sbb
aam
inc
push
daa
push
mov
push
add
push
imul
mov
mov
push
std
add
call
retw
add
clc
and
fdivs
add
fwait
lds
jo
lcall
pushf
add
out
jl
jne
or
orb
out
sbb
popa
aaa
pop
cmp
xor
cmp
test
push
stos
adc
inc
pop
dec
xchg
jae
dec
lret
add
add
cmp
pop
int3
push
imul
or
arpl
add
mov
into
add
push
mulb
imul
push
mov
adc
fdivrs
mov
xchg
sub
hlt
lods
or
loopne
gs
dec
pop
add
xor
jo
and
push
lds
add
cltd
roll
pop
jae
decl
push
jle
mov
cmp
add
stos
or
dec
loopne
push
push
mov
in
pop
push
add
lods
inc
lcall
sbb
jge
mov
add
adc
cmp
iret
jbe
jmp
cld
lock
or
mov
adc
and
add
pop
cli
mov
and
call
mov
xor
jmp
xor
mov
insl
call
mov
xor
cmp
aas
dec
push
addl
and
popl
push
add
sbb
xchg
add
dec
enter
add
scas
push
pop
call
dec
lock
inc
loopne
pop
loopne
cld
push
in
inc
dec
lods
cmp
sbb
dec
jmp
add
mov
inc
xchg
or
pop
and
cld
push
popf
aas
xor
setg
lret
push
adc
into
adc
add
push
lahf
add
or
ret
call
pop
add
and
aam
in
and
sub
sub
sahf
jle
add
fiaddl
push
ret
push
add
push
cs
int
pusha
xchg
dec
and
aaa
jl
and
cmp
add
dec
fadd
push
lea
subl
clc
add
loopne
dec
jne
out
lret
mov
gs
lods
dec
scas
iret
jne
orl
or
jae
add
lcall
frstor
add
or
mov
xchg
inc
pop
fcomps
movsb
lods
add
and
stc
je
add
inc
out
xchg
pop
data16
adc
pop
push
subb
xchg
add
sbb
pop
pop
cwtl
adc
dec
leave
fiaddl
xor
mov
push
movd
mov
add
sbb
loope
sbb
mov
add
dec
mov
lods
pop
or
hlt
add
sbb
adc
adc
jmp
sbbl
and
test
pop
jne
mov
and
mov
loopne
push
mov
mov
cli
in
cmp
fs
xchg
ds
sub
xor
fwait
add
insl
cmpsl
jb
hlt
movsl
add
popa
inc
inc
add
mov
cmpb
fcompl
xchg
sgdtl
out
call
data16
ljmp
adc
mov
or
addb
sub
lea
leave
push
minps
mov
int3
push
sub
add
add
inc
cmp
popa
add
dec
xor
add
xor
repz
add
jecxz
je
lret
addr16
fistpl
and
cmc
push
sub
push
push
add
inc
cmp
sub
test
loopne
sub
add
loope
fisttps
test
add
add
sub
mov
outsb
int3
insb
add
sbb
enter
push
je
outsl
add
push
popa
popf
add
pop
insl
push
inc
adc
add
xchg
cmpsl
pushf
push
jge
inc
add
fcomp
sub
out
addb
clc
icebp
loope
loopne
cld
test
or
or
add
mov
push
dec
in
add
loop
jb
and
and
bound
add
push
mov
cmpsl
mov
sarb
outsl
cmp
add
jp
push
pusha
mov
fsts
push
add
or
out
jp
sub
stos
cltd
add
push
xchg
repz
fadds
or
es
jo
adcb
and
scas
mov
jge
cmp
stc
bswap
or
rcrb
xor
test
test
dec
addb
pop
mov
push
ret
jno
je
inc
cmp
scas
push
mov
scas
inc
pop
xor
aad
lock
imul
outsb
es
jae
cmp
push
cmp
push
cwtl
add
ja
popa
jb
cs
fiadds
aas
arpl
jae
fsubrs
add
jbe
lret
test
stos
sub
mov
sub
push
mov
or
dec
push
shll
add
mov
or
mov
add
ret
aad
xor
add
xor
dec
packsswb
push
pop
iret
rorl
dec
or
imul
cmp
test
cmp
mov
mov
sbb
push
adc
jne
mov
aam
mov
into
sub
pop
xchg
ret
xchg
inc
ja
sbb
jnp
add
jge,pt
pop
sub
mov
or
pop
sarb
sbb
adc
pop
repz
stos
sub
cmp
cmp
lock
add
fwait
int3
mov
stos
push
adc
add
inc
stos
push
add
fildl
dec
aas
daa
js
add
ret
dec
das
hlt
rcrb
xchg
mov
push
or
push
lea
push
dec
rolb
call
pop
add
stc
dec
scas
out
pop
repz
mov
mov
add
shlb
adc
pop
xor
dec
imull
andb
xlat
jp
ret
jne
rorb
sbb
mov
xchg
pop
push
adc
aaa
sub
or
dec
int
test
cs
mov
sar
mov
movl
daa
inc
sbb
str
adc
sub
push
push
cmp
and
mov
nop
test
dec
scas
sub
mov
xchg
adc
cwtl
inc
dec
add
and
add
mov
cmpl
xchg
mov
dec
out
xchg
ss
leave
sbb
or
xchg
in
pop
lea
add
mov
lea
xchg
push
mov
add
pop
sbb
sub
inc
dec
cmpb
pop
pop
inc
and
push
test
or
dec
add
xchg
adc
pop
jmp
test
fidivs
idiv
pop
in
cmc
call
je
xor
pop
outsl
imul
add
pop
cli
call
pop
ret
mov
rolb
and
mov
cmp
dec
cmp
pop
fisttpl
iret
adc
aam
cmp
lret
int3
adc
scas
add
adc
enter
adc
data16
bound
mov
aad
sub
add
addb
int
call
xchg
jb
sub
fnstcw
jnp
sbb
sbb
mov
add
addr16
add
js
cmpsl
and
pop
push
sub
sub
add
sbb
in
or
and
adc
icebp
cltd
inc
es
es
xchg
aas
imul
mov
cmpl
sbb
jae
sahf
sub
jp
adc
sbbb
addl
ret
add
push
pop
mov
push
inc
add
je
jmp
push
nop
jbe
add
dec
and
add
add
sbb
inc
out
lods
add
push
inc
icebp
add
into
dec
cli
mov
stc
out
je
add
mov
xor
cmpsl
add
inc
cli
lds
notb
jae
dec
adc
sub
add
or
fwait
sbb
stos
pop
stos
jns
out
jmp
cmpb
mov
into
mov
aam
add
pop
ret
sbb
iret
ret
pusha
je
xchg
add
xchg
sub
nop
add
sbb
or
or
daa
add
push
xchg
pop
lock
add
mov
adcb
cmp
adc
movb
pop
add
push
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
stc
add
adc
push
mov
xchg
inc
or
push
sbb
sbb
xor
add
jp
or
pop
cmp
pop
pop
popl
push
mov
pop
sub
dec
mov
mov
ja
roll
jno
loopne
mov
cmp
push
jle
inc
jmp
mov
add
jne
pop
add
mov
incl
sbb
jae
movsb
mov
inc
sub
sub
jle
or
ficompl
and
std
pop
dec
sbb
add
faddl
add
fistpl
xchg
loope
cmp
push
or
push
into
pop
pusha
mov
adc
pop
shll
inc
pop
loop
lods
lret
jmp
fsts
cmp
add
pop
push
out
mov
pop
movsb
scas
test
lock
sub
jle
add
scas
mull
mov
pop
sub
push
add
imul
imul
pop
jl
add
add
pop
jg
cli
sbbb
add
sub
in
and
fiadds
add
shr
mov
pextrw
cmp
out
jle
mov
ds
ret
notl
jge
adc
mov
lods
mov
xor
pop
enter
xchg
cli
add
fisubl
fldz
rol
inc
cmp
ja
add
mov
mov
mov
or
pushf
or
push
ret
add
jo
hlt
adc
push
shlb
mov
imul
mov
add
mov
inc
mov
aam
mov
pop
add
out
xchg
dec
adc
xor
pop
out
sub
or
inc
add
leave
sbb
cmp
mov
push
call
or
inc
rolb
dec
add
mov
and
lds
jmp
js
inc
jb
jp
mov
xlat
fadds
add
js
xchg
add
push
mov
push
ret
dec
xchg
push
add
push
call
cmp
clc
dec
shrb
lret
into
pop
addb
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
setbe
add
cld
gs
jo
test
lds
popf
imul
js
hlt
mov
push
stos
sbb
out
cmp
jmp
mov
stos
pop
out
sub
adc
sbbb
maskmovq
testl
xor
cmp
popa
jmp
rcrb
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
cmpsb
hlt
mov
aam
imul
loope
dec
jp
xchg
iret
inc
bound
fdivrs
add
push
cmpsb
add
mov
addl
push
xchg
cmp
add
add
pop
cmp
cmp
pop
cmpsb
lock
push
movsl
mov
popa
out
jo
add
fildl
addr16
repz
mov
jo
or
xchg
and
enter
les
and
xor
xor
jnp
aas
push
dec
mov
jge
cmp
pusha
mov
adc
test
rcrl
pop
ret
movsl
and
sub
popf
and
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
nop
fucomi
pop
sbb
dec
mov
push
not
loopne
rorb
cmp
jb
mov
sbb
sbb
inc
loop
pop
testl
je
inc
imul
loopne
xor
pop
jmp
push
pop
mov
cmp
add
adc
ud2
repnz
add
dec
ret
aaa
shr
push
out
xor
inc
stos
stos
test
in
addl
mov
add
push
repz
and
shlb
mov
cmp
add
pop
hlt
int3
xchg
cmc
cmp
cmpsl
sbbb
aaa
adc
and
das
and
mov
push
adc
stc
daa
cmpb
xor
cs
or
loop
ltr
sub
loopne
sbb
add
sar
mov
mov
sar
cmp
push
jnp
push
clc
sbb
ljmp
cli
je
add
and
xor
cmp
add
mov
or
ja
add
or
adc
cs
adc
add
movsl
bnd
add
pop
pop
fadds
push
pop
push
subl
mov
xor
loopne
sbb
or
fildl
call
call
xor
sub
add
movsb
xchg
jo
fstl
loop
data16
adcb
and
jne
xchg
sar
sub
jp
add
ficomps
add
ja
mov
and
mov
popa
push
inc
repnz
cwtl
orl
pushl
and
push
sub
push
paddusw
sbbb
subb
fsubs
sbb
adc
mov
mov
inc
add
push
addr16
inc
enter
cmp
jge
or
ds
add
sbb
inc
add
decl
cmpsb
jbe
adcb
ret
xchg
xor
daa
lock
sbb
lods
push
dec
or
call
add
push
sbb
popf
pop
enter
repnz
add
jl
dec
enter
inc
jns
pop
mov
sbb
cmpsl
stos
shrb
dec
xchg
mov
lcall
add
sub
jo
cmp
xor
jecxz
jmp
add
lret
mov
sub
cld
pop
xor
sti
add
mov
fsub
add
mov
and
or
mov
orl
movsb
or
or
aas
ds
outsb
imul
mov
jle
add
cmp
push
daa
popf
mov
mov
mov
push
cmp
cmc
js
inc
add
or
call
xor
mov
and
hlt
xor
add
cmc
pop
cmp
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
mov
sbb
stc
sbb
xlat
or
or
add
pusha
mov
push
hlt
cmp
add
mov
call
cltd
xor
and
ds
add
and
xchg
ror
int3
in
jb
les
hlt
push
mov
jb
mov
lods
xchg
test
movsb
in
mov
sbb
andb
and
in
jb
cmp
inc
je
add
insb
xchg
push
or
cmp
push
and
and
les
mov
xor
fadds
xchg
int3
enter
les
or
mov
sub
add
cmp
and
and
jb
sti
je
jo
and
xchg
fs
pop
jb
cmp
push
nop
dec
add
movzwl
add
shl
adc
ret
call
xchg
js
les
loope
in
and
xchg
mov
or
xchg
add
push
and
call
adc
pop
add
xchg
or
adc
sbb
and
sqrtps
adc
loopne
and
bound
lea
xor
fwait
mov
cmpsl
test
inc
icebp
add
repnz
repz
add
cmp
sbb
adcb
sti
enter
or
cmp
sbb
loop
jecxz
in
sbb
out
call
cmp
ljmp
in
jb
or
out
sbb
dec
roll
and
xchg
rcr
pop
adc
in
add
cmp
sbb
add
fcoml
in
jb
cmp
sbb
shlb
and
xchg
lds
enter
jb
cmp
sbb
or
pop
int3
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
in
inc
test
and
in
jb
cmp
cli
add
adc
cmp
and
cltd
ret
adc
dec
sub
or
pop
or
insb
fwait
shl
xor
incb
pop
arpl
push
jp
pop
add
and
lahf
js
xor
out
ds
mov
fwait
sub
mov
loopne
push
cmp
movsb
pop
loope
cmpsb
jle
faddl
arpl
imul
mov
in
and
adc
pop
loopne
mov
ds
pop
adc
int3
mov
mov
dec
jne
pusha
data16
insl
outsl
sbb
lea
popa
mov
scas
dec
add
mov
loope
jb
clc
sbb
scas
pop
inc
or
add
adc
popa
insb
or
jo
divb
push
adc
int3
data16
and
imul
mov
sbb
add
push
popa
andl
nop
inc
inc
add
jns
add
mov
rol
popa
outsb
pcmpgtw
fcomps
enter
or
or
dec
jbe
scas
data16
outsl
pusha
pop
je
adc
stc
movsb
xlat
fs
and
adc
test
sub
stos
sbb
pop
in
in
push
adc
scas
push
mov
add
dec
jo
outsb
in
andl
shrb
add
adc
es
and
mov
inc
push
fmuls
pusha
push
or
push
outsb
movsb
pop
sub
mov
xchg
pusha
inc
push
add
fwait
and
sub
int3
or
cmp
inc
dec
jae
movsl
inc
inc
jnp
and
fimuls
je
or
loop
inc
cltd
int3
pop
fmull
adc
jae
add
mov
mov
pusha
scas
popf
add
rolb
push
clc
sarl
insb
add
nop
push
mov
ret
inc
push
push
je
and
adcl
cmp
add
pop
imul
xchg
inc
shll
inc
enter
add
mov
sbb
lds
gs
add
inc
popa
and
fs
jo
faddl
jle
inc
pusha
jne
push
add
adc
jae
test
nop
test
lods
push
push
cmp
enter
inc
push
mov
popa
loope
call
incl
add
outsb
add
imul
ljmp
push
cmp
stc
add
sbb
inc
lods
lret
mov
mov
loopne
mov
je
mov
push
test
sub
insl
push
adc
lahf
inc
xor
dec
out
dec
cmc
pop
add
sub
add
test
inc
loop
add
mov
icebp
jl
add
addr16
cmc
shr
xor
adc
ljmp
mov
cmp
dec
je
aam
ja
cvttps2pi
mov
inc
inc
dec
add
sub
lods
and
jbe
push
outsl
inc
pop
cmc
fwait
add
push
orb
rorb
cmpsb
je
adc
dec
adc
or
lea
jg
lret
inc
out
pusha
cmp
sti
je
fmuls
mov
push
adc
sub
pop
sbb
movsb
nop
sub
bound
cmp
sub
push
add
dec
les
cld
dec
xlat
mov
leave
jns
push
mov
int
repz
add
and
hlt
push
jge
or
mov
test
pop
dec
sub
inc
aaa
clc
shrl
add
cmc
jae
push
mov
add
shll
push
push
cmp
sti
int3
pop
ret
and
inc
add
loope
movsb
push
mov
and
xchg
xchg
or
insl
cmp
or
or
xor
xor
lock
mov
and
or
dec
adc
jne
xchg
cmp
movsl
orl
sub
rorb
inc
mov
fidivrs
lock
push
test
inc
in
push
inc
xchg
mov
add
mov
push
cmp
jl
dec
inc
mov
or
ja
les
add
inc
sub
js
push
pop
fiaddl
jb
aaa
xor
imul
xor
fwait
test
push
movsb
dec
sti
add
pop
in
xchg
push
test
add
movsl
sub
add
push
dec
das
clc
jo
add
jne
cmp
pop
mov
dec
mov
dec
xor
push
mov
negb
cwtl
sbb
jne
ja
jo
lock
stos
pop
xor
outsb
and
subb
dec
jo
sub
push
cmp
or
pop
clc
xchg
aas
inc
jae
stc
cwtl
or
sbb
cmp
loop
adc
ret
mov
aad
fnstsw
sbb
out
fsub
push
inc
sub
movsb
addr16
adc
stos
xlat
sete
fs
sarb
mov
or
cmp
push
inc
mov
adc
sub
dec
std
add
xchg
or
add
and
push
mov
faddl
adc
jno
or
xchg
mov
movsl
and
cmc
inc
add
arpl
jmp
add
sbb
les
stos
dec
adc
movsb
in
mov
fdivl
add
add
sub
mov
das
mov
adc
add
xchg
cmp
jne
call
jg
sub
pusha
mov
sarl
jp
add
lds
into
mov
in
sub
sbb
cld
nop
jae
aam
sub
jmp
xchg
ljmp
pusha
subb
add
push
mov
shrb
ja
sub
pop
jne
mov
or
adc
add
push
popa
int3
clc
push
and
add
into
sarb
add
arpl
lock
adc
add
lds
jns
add
xor
jmp
lock
inc
dec
jns
in
add
movsl
mov
call
test
add
or
and
clc
dec
cld
orl
push
lock
shlb
xor
push
cmp
cmc
std
call
loop
add
scas
aad
push
aam
sbb
xor
aas
mov
testl
fs
mov
pop
sbb
movzwl
rol
xor
add
bnd
cmpsb
mov
add
fstpl
sbb
or
add
cld
sub
addr16
loopne
test
dec
xchg
call
dec
sub
fsubr
orl
lock
idivb
clc
aad
and
add
xor
xchg
cmp
sbb
sub
mov
cli
pop
fidivs
lret
js
je
add
jmp
rcl
cld
cmp
jbe
mov
and
and
out
pop
ficomps
inc
cmp
or
cld
aas
popa
shrb
add
stc
out
lret
inc
add
dec
inc
pop
imul
lret
rol
lods
sti
xor
push
addl
stos
sub
pop
push
pop
js
jge
add
sub
add
jns
std
shlb
ret
nop
or
out
push
push
adcb
adc
rol
mov
fiadds
adc
rcrl
cli
dec
mov
ljmp
fdivrs
push
xchg
jl
test
add
fcoms
icebp
add
push
inc
pop
add
sarb
jne
cs
dec
stos
push
inc
or
jg
sbb
je
loope
pop
je
cs
in
scas
adc
sub
jbe
push
lea
add
adc
enter
mov
pop
mov
lea
mov
and
add
sub
pop
wrmsr
pop
mov
inc
pop
xabort
sbb
rolb
int3
jns
push
call
xchg
add
clc
addl
pop
jbe
mov
rcrl
sbb
adc
add
popf
dec
out
lret
mov
cmp
ljmp
pop
sbb
push
mov
inc
xor
add
or
nop
or
outsl
dec
push
or
add
add
dec
loopne
test
pop
pop
mov
xor
into
pop
pop
add
dec
rclb
cmc
fs
push
hlt
or
and
push
cmp
inc
mov
lods
inc
je
xchg
adc
stos
add
inc
or
sub
sbb
in
add
xor
push
incb
mov
inc
inc
jmp
sbb
fisubrl
jmp
or
insb
pop
add
lods
jmp
adc
mov
cs
push
mov
push
push
add
popa
jne
push
push
add
pop
lea
pop
mov
add
jae
push
or
cmpb
lcall
jb
addb
or
xchg
push
sub
gs
add
mov
push
sub
loopne
push
mov
in
clc
add
je
ret
jb
loopne
pop
ja
imul
mov
add
mov
add
ret
test
in
pop
jmp
push
pop
cmp
mov
adc
pop
adc
xchg
je
dec
fsubrl
sarl
jae
enter
add
lea
ficoms
push
add
mov
jmp
and
mov
jns
add
cltd
or
cmp
in
mov
or
inc
jns
and
clc
lahf
add
loop
pop
adc
push
mov
fsubrl
shrl
lea
xchg
cltd
pop
add
mov
cmp
inc
je
cmp
push
mov
jne
mov
and
inc
cmp
add
loope
pop
add
call
mov
cs
dec
jl
push
ret
mov
jne
outsb
push
es
add
inc
sub
dec
add
xchg
inc
add
cmpl
push
push
test
dec
dec
mov
fisttpll
rolb
add
loopne
add
jo
faddl
add
jg
movsb
sub
hlt
test
cmp
pop
andb
add
fsubrs
call
cmpsb
pop
gs
jnp
mov
ljmp
mov
push
js
gs
clc
mov
mov
std
inc
add
push
push
xchg
add
inc
xor
leave
xchg
and
pop
inc
mov
mov
sbb
cmp
dec
rclb
ja
add
or
push
jl
or
sbb
je
inc
add
dec
loopne
add
popf
or
push
pusha
xchg
mov
mov
inc
pop
aaa
jle
test
mov
xchg
add
push
inc
add
jmp
mov
and
jo
int3
outsb
mov
inc
cmp
dec
push
inc
and
enter
setg
nop
add
dec
fs
dec
or
sbbl
add
xchg
push
nop
cmp
jbe
btrl
add
add
scas
enter
mov
cmp
jo
mov
jbe
cli
or
mov
inc
iret
add
call
rorl
in
push
push
fnstenv
clc
pop
fdivrl
add
sub
mov
leave
add
add
scas
and
loopne
or
pop
into
jle
add
call
add
and
cwtl
sbb
dec
es
xchg
jae
jle
add
sub
cmpsb
loope
sbb
add
cmp
add
mov
pop
xor
add
scas
roll
sub
cmp
mov
sbb
loopne
lea
cwtl
inc
jnp
or
push
leave
add
cmpb
ret
lock
cmp
fildl
dec
aam
pop
jmp
pusha
cmp
test
push
xchg
inc
sub
inc
arpl
cli
fnsave
or
xchg
xchg
sbb
or
nop
cmp
xor
dec
sub
mov
add
aad
push
xor
mov
andb
add
stos
notl
cltd
lock
sbb
leave
mov
sub
add
popf
fld1
movsb
mov
or
or
gs
adc
in
and
into
out
dec
xchg
push
and
or
sub
xchg
and
lods
xchg
clc
pop
push
add
inc
push
cmpsb
cmp
dec
or
jbe
add
stc
addl
add
loope
clc
xchg
jb
sbb
sub
xor
mov
ret
roll
mov
or
or
pop
sbb
add
fdivs
ret
or
inc
fwait
cmpsl
add
pop
test
lret
movsb
dec
push
jo
xchg
fstl
es
cs
roll
jle
data16
loop
pop
js
iret
add
or
adc
adc
adc
shl
pop
sahf
arpl
pop
mov
jle
hlt
ss
mov
clc
jmp
sub
jge
or
jne
out
add
push
loopne
add
push
mov
xor
push
outsb
lret
aad
add
cmp
sbb
fs
daa
cld
add
and
testl
xor
roll
and
adc
fnstenv
je
dec
xchg
xchg
add
mov
and
pop
sar
int3
lcall
mov
add
cli
add
in
xor
mov
add
adc
sub
xchg
pop
add
jg
add
xor
add
jge
incb
push
xchg
ficoms
in
daa
push
ja
es
popa
xor
or
sbb
sbb
mov
ja
lret
dec
nop
or
cwtl
loopne
add
add
inc
lock
test
sub
adc
mov
mov
imul
rcll
add
inc
mov
out
sbb
out
inc
ret
or
pop
loope
sub
std
add
xchg
pusha
lcall
and
les
pop
cmp
movsb
cmp
adc
rol
loopne
cmp
or
push
std
mov
test
jg
stos
add
sub
aad
fs
xor
cld
dec
xor
and
xor
dec
repnz
xchg
cmp
dec
jl
or
adc
jno
imul
movsb
adc
jge
mov
or
lods
mov
xchg
xor
xchg
lcall
decl
push
cmp
add
cltd
imul
and
stos
sub
add
js
mov
movsb
sub
and
pop
push
dec
mov
dec
out
lret
push
pop
ret
insl
push
adc
mov
add
pushf
dec
dec
mov
pop
in
in
mov
cmp
nop
xchg
push
inc
jmp
jl
and
cmp
and
insl
sub
icebp
dec
add
hlt
dec
mov
push
mov
ja
xor
add
or
jno
inc
nop
jo
sub
mov
divb
addr16
fwait
cmp
cld
mov
out
ret
frstor
dec
sub
dec
jecxz
add
or
mov
enter
stc
fsubrs
sub
movhps
xchg
out
incb
call
faddl
mov
dec
clc
insl
bound
add
push
fwait
dec
pop
and
faddl
leave
push
popa
xor
jg
sti
add
cltd
cld
cmc
and
xorb
jns
or
adc
test
in
adc
roll
sbb
and
jns
adc
cmc
add
and
jmp
dec
add
add
in
pop
in
push
call
jle
lea
cmp
mov
pop
lock
pop
sbb
pop
dec
jo
mov
add
cltd
adc
aaa
add
decl
mov
push
nop
add
ret
add
js
push
mov
sbb
adc
inc
in
add
call
out
push
add
bnd
aad
inc
in
push
je
add
jecxz
xor
adc
aas
and
test
popa
mov
iret
outsb
xor
jecxz
aas
je
sub
or
mov
push
lea
dec
cmp
xchg
pop
jmp
testl
enter
in
cld
or
pop
and
addr16
rolb
insl
call
and
in
mov
daa
xchg
jns
or
or
jmp
xchg
pop
repz
cmpsb
loop
mov
cmp
sbb
test
xor
push
add
call
or
push
add
das
and
ret
pop
cltd
sub
enter
test
inc
cmp
add
xchg
inc
jecxz
pop
adc
xchg
and
int3
call
sub
pop
sbb
inc
cmc
jo
and
imul
add
push
mov
notb
cmp
lahf
inc
test
mov
mov
add
mov
rolb
movsb
insb
sub
push
ljmp
xchg
add
in
and
clc
imul
jmp
test
add
jp
je
push
xor
jne
push
and
inc
dec
xor
add
push
mov
enter
add
adc
xchg
add
xchg
add
jns
in
aam
sbb
add
sti
jecxz
fsubrl
add
jge
adc
inc
or
mov
out
out
add
adc
addb
push
add
sub
jecxz
loop
addb
jge
cmp
xchg
imul
add
push
paddd
push
jb
mov
xadd
add
out
mov
test
mov
jne,pt
add
mov
vorps
dec
or
sysret
xchg
orl
add
and
popa
scas
cvtpi2ps
or
jae
ljmp
add
idivl
add
pop
adc
or
add
pop
test
xor
sbb
add
push
mov
orl
jmp
mov
adc
loope
cwtl
adc
lea
add
imul
pop
and
sahf
jp
icebp
mov
sti
mov
movsl
xchg
shrb
or
mov
add
xchg
add
push
out
jl
xlat
add
push
jne
hlt
aaa
sbb
hlt
dec
add
adc
leave
lock
sub
test
mov
aam
sbb
mov
sub
adc
ljmp
push
addr16
push
jns
fnstenv
dec
push
imul
pop
xor
movsl
jl
mov
adc
sub
cs
and
or
cmpsl
adc
add
xchg
dec
jne
or
ss
loopne
cmpb
scas
add
jl
sbb
mov
pusha
jge
jg
les
mov
or
mov
or
pusha
aad
mov
clc
pusha
add
cmpb
dec
jb
add
ja
ljmp
lock
sbb
js
mov
pop
sbb
or
jmp
add
loope
call
inc
hlt
test
sub
cmp
les
cmp
sti
push
dec
or
mov
inc
sub
or
cmp
movsl
pop
cmpl
add
icebp
cs
push
cld
loop
sbbl
incl
iret
push
jg
fsubs
dec
dec
orb
or
mov
outsl
gs
pop
popa
adc
in
jb
pop
and
add
mov
add
aad
push
add
sbbb
enter
jnp
dec
add
xchg
popf
inc
xchg
mov
sbb
sbb
mov
jae
dec
add
add
mov
hlt
jo
mov
inc
add
das
xor
aam
push
add
lret
mov
and
push
add
xor
xchg
pop
ss
pusha
subl
rorl
scas
icebp
or
adc
leave
xor
add
sarb
cld
add
and
inc
jmp
jne
push
add
pop
and
data16
leave
or
pop
loop
cmp
adc
inc
xchg
mov
jne
cwtl
adc
push
cld
add
loopne
jmp
add
out
in
subl
mov
and
add
pop
dec
daa
sub
cmp
addb
jae
fsubp
ss
add
stos
or
add
outsb
cwtl
xchg
or
call
ret
add
lods
adc
xchg
add
inc
dec
ret
and
mov
mov
jb
repz
xor
pusha
inc
and
js
adc
sbb
aas
pushf
sbb
mov
xor
mov
loopne
sub
or
in
lock
xlat
add
jl
ud0
pop
jmp
bound
hlt
popf
mov
sbb
dec
testl
add
adc
testb
pop
scas
mov
push
add
ljmp
and
add
shrb
add
pop
out
clc
lock
nop
mov
jle
sbb
adc
pop
sbbl
mov
add
mov
mov
flds
xor
mov
hlt
lods
pop
clc
js
call
adc
xor
add
fidivrl
mov
push
xchg
mov
mov
iret
sub
add
sub
pusha
add
and
sub
mov
or
popl
inc
sub
movsb
push
add
lods
add
or
adc
cs
jl
or
ja
pusha
add
jne
add
divb
and
cmpsb
gs
mov
sub
ds
add
fildll
je
add
enter
cmc
pop
in
addb
add
or
push
push
xor
mov
inc
pop
cmp
int3
daa
filds
ret
push
nop
jmp
add
add
add
add
xor
and
addl
jo
mov
add
mov
mov
mov
adc
lds
bound
movsl
or
ret
adc
adc
add
les
rcrl
lock
xlat
sbb
je
test
fadd
adc
mov
adc
in
arpl
sbb
and
in
ja
ret
push
xor
cltd
xor
jb
pop
bound
sarl
shl
sti
fmuls
cmp
jle
adc
pop
mov
dec
sub
add
add
push
xor
enter
mov
loopne
adc
push
sahf
pushf
addb
lahf
add
out
mov
andb
fs
inc
inc
mov
jg
pusha
or
mov
add
addr16
cmp
adc
jae
dec
std
leave
outsb
lock
sub
mov
lea
cmpb
dec
adc
jae
dec
jns
movsb
int3
addl
call
or
mov
add
hlt
push
and
xchg
jle
jno
xor
add
or
ds
sbbb
pop
inc
ljmp
into
loope
jmp
dec
lock
mov
enter
sub
jb
inc
dec
jb
pop
and
mov
es
jmp
xlat
hlt
loop
add
sub
ss
xor
sbb
sbb
test
dec
es
inc
bound
adc
sub
add
ret
add
push
clc
jmp
pop
jge
pop
vpunpckhdq
movsl
dec
out
arpl
add
sub
and
push
mov
adc
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
add
xchg
or
xchg
jge
lods
push
jnp
add
sub
pushf
pusha
adc
sub
xchg
test
or
cmc
mov
add
add
mov
pop
pop
and
or
add
fmul
cmp
fsub
cli
cmp
xchg
sub
push
fcomps
cs
push
ret
je
add
fstl
fsubs
test
add
cli
push
out
icebp
ds
mov
xchg
mul
add
xchg
cwtd
inc
add
mov
test
pop
mov
add
add
test
lret
pusha
add
call
iret
sarb
in
cld
xchg
out
daa
pop
nop
jnp
es
dec
adc
je
mov
adc
sub
add
inc
push
ret
in
mov
clc
cwtl
xor
pop
lds
push
js
je
scas
fmull
pop
cld
movsl
pop
enter
xor
lods
pop
and
add
cmp
and
les
add
inc
or
jl
add
repz
adc
push
ss
push
test
cmp
loope
data16
inc
mov
test
add
popa
jne
dec
cmpsl
loop
paddsw
pop
and
add
add
rorb
or
mov
cld
cmpsl
pop
add
dec
lock
nopl
call
int3
add
adc
pop
cwtl
leave
or
inc
jl
mov
or
add
lea
push
push
leave
mov
and
sub
sbb
prefetcht1
adc
push
inc
pop
sahf
jl
jne
xchg
jbe
adc
das
jl
sbb
jmp
push
xchg
xchg
add
loopne
sahf
jb
mov
push
and
mov
pop
jne
cmp
jo
inc
jmp
icebp
loop
jbe
cmp
cmp
negb
dec
test
adc
rcrb
fsubr
sub
les
mov
leave
sub
mov
clc
push
add
push
and
add
sahf
popf
bsr
test
rol
das
cmp
push
inc
adc
es
cmpsl
add
mov
daa
add
outsb
es
outsl
mov
aaa
nop
mov
nop
mov
cmp
jg
add
out
and
and
out
or
push
jmp
push
add
pop
jg
add
dec
call
pop
sti
push
hlt
xor
and
adc
mov
aad
bound
jp
jbe
or
inc
je
nop
sub
add
ficomps
cwtl
push
add
in
or
orps
dec
sub
mov
inc
rorl
and
dec
andb
add
popf
nop
insb
scas
jae
or
xchg
adc
js
add
popa
lds
shlb
popf
fs
xchg
clc
test
add
xchg
into
or
mov
sub
xchg
and
xor
sub
push
rorb
movsb
sub
lahf
ret
pusha
test
pop
mov
cmp
enter
in
jbe
lds
mov
add
fistpl
popa
push
aam
arpl
or
cmp
xlat
push
push
test
sti
add
dec
cmp
inc
xor
push
push
shl
adc
mov
rcrl
fadds
push
add
or
push
dec
sub
jae
dec
stos
and
jp
mov
push
xor
xchg
mov
lret
mov
adc
das
lods
jbe
repz
jo
rorb
add
cmpb
pop
add
or
std
add
push
mov
nop
jmp
inc
roll
sub
jmp
add
lahf
mov
call
jno
push
sub
adc
mov
shr
pop
mov
ljmp
lret
and
and
add
jnp
daa
jno
hlt
dec
inc
test
repz
mov
add
sub
cmovl
pop
fdivr
add
jle
loopne
es
xchg
mov
push
test
loope
aad
jmp
pop
and
xor
jne
aaa
adc
loopne
lock
mov
push
dec
call
pushf
lock
lcall
pop
mov
aas
xchg
lods
adc
add
rcll
add
push
push
add
mov
clc
dec
push
add
andl
cmpl
dec
push
and
std
fmuls
jno
aas
mov
cmp
sbb
pop
sub
sub
testl
mov
bound
pop
nop
daa
mov
sbb
addr16
repz
adc
ja
add
data16
mov
lods
sub
out
jae
sbb
jne
popf
push
out
xchg
add
pop
fdivs
into
pop
addl
push
xor
das
out
cld
inc
add
inc
add
setno
push
subb
xchg
decb
add
or
addr16
mov
mov
mov
push
imull
adc
mov
add
or
and
mov
lahf
iret
stos
xchg
test
mov
push
sub
test
sub
imul
rclb
rorl
inc
add
sbb
mov
inc
jo
push
pop
push
pushl
movsb
or
pop
out
mov
push
add
ss
xchg
roll
lcall
push
mov
dec
jle
pop
mov
aaa
push
addr16
pop
test
popa
inc
lea
addr16
dec
add
sub
out
add
pop
jb
add
xor
add
add
inc
shrb
hlt
add
mov
test
repnz
je
lret
sub
daa
add
sbb
mov
sub
pop
adc
test
mov
cmpsl
aad
mov
cmpb
and
out
sbb
lea
pop
or
adc
incl
jns
sub
xorb
add
cmp
xchg
sub
sti
push
jg
or
xor
fucomp
inc
shlb
push
adc
lock
int
pusha
push
jmp
add
movsl
xlat
push
add
std
mov
jnp
add
jo
pop
pop
lea
or
int
dec
subl
into
push
xadd
adc
jmp
mov
mov
pop
addb
add
or
lcall
add
fdivl
xchg
nop
ja
push
fstpl
test
das
pop
and
cld
pop
push
popa
mulb
push
or
popl
push
cmp
xchg
mov
sbb
inc
mov
jbe
push
lock
or
and
lods
or
mov
add
ljmp
add
and
loopne
aad
cmpsb
inc
shl
xchg
xor
dec
mov
sub
lahf
cmp
push
mov
pop
xchg
dec
arpl
or
roll
pop
xchg
loope
jns
insb
movsb
lcall
out
xchg
sbb
inc
add
mov
xchg
push
loope
testl
mov
les
sub
add
out
in
push
sub
push
jmp
bound
push
inc
mov
fs
add
or
cmp
or
test
pop
pop
xchg
cmpsb
jns
mov
and
mov
or
xchg
call
filds
mov
dec
ficoml
add
inc
xchg
jnp
ret
cmove
add
sbb
sbb
int3
sbb
cs
add
mov
test
out
or
ret
sub
in
and
std
test
dec
movsb
add
inc
dec
mov
dec
lea
pop
sbb
movsl
push
ficoms
loopne
js
jp
cwtl
inc
add
cmp
cltd
stos
cmp
aas
int3
jge
mov
or
ds
mov
lea
lret
xor
cmp
pop
adcb
pop
jbe
add
test
cld
nop
add
loop
adc
xor
and
mov
add
arpl
mov
aad
mov
push
jo
mov
xorb
mov
jno
cld
xor
rcl
ret
lret
pop
or
rorl
jae
mov
add
out
cmp
imul
xorl
scas
pop
je
lock
xor
cli
or
pop
and
mov
pop
mov
int3
lds
xchg
xchg
push
scas
xor
movsl
add
test
push
call
mov
adc
and
inc
cmpsb
add
cmp
pop
mov
sbb
and
lea
das
add
loopne
mov
test
nop
movsl
rcrb
test
in
adc
adc
or
ret
or
test
inc
and
cmp
jno
cmpsb
sbb
pop
aam
mov
or
add
cli
es
mov
sub
mov
xor
test
sarb
jo
and
loopne
hlt
in
add
insb
lcall
mov
test
mov
imul
test
inc
mov
mov
cmp
aam
or
or
or
xlat
lea
mov
push
adc
add
rorl
xor
data16
and
cmp
add
andl
fwait
and
outsb
add
add
testl
negb
add
loope
and
jb,pt
jmp
into
es
addb
or
inc
test
sbb
push
push
lret
cmp
inc
insb
ljmp
mov
test
psubq
add
dec
jecxz
xchg
xlat
adc
leave
push
sub
adc
lahf
add
outsl
mov
push
roll
mov
lea
and
push
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
pop
incl
and
mov
xor
out
pop
pusha
sub
pop
mov
out
add
lahf
lcall
push
inc
cld
dec
push
add
es
dec
pop
ret
imul
jl
or
sbb
leave
add
fmulp
in
jns
sub
cmp
mov
or
popa
xchg
dec
mov
loopne
hlt
jnp
add
int3
push
cs
lahf
xchg
add
roll
push
cwtl
add
cmp
addr16
ds
mov
sbb
jmp
decl
add
rorl
dec
and
test
add
mov
ljmp
xsha1
cmpsb
or
mov
xlat
lods
in
lds
xor
out
jne
cli
addr16
ret
add
pop
pop
rcll
pop
jp
sbb
push
sub
add
out
sahf
push
das
ljmp
and
push
pop
ja
add
in
js
jge
lea
out
jg
adc
stc
pusha
add
aas
inc
js
add
outsb
fdivrs
mov
rclb
je
fdivl
das
shl
xabort
sub
sbb
add
inc
mov
add
or
sub
xor
jns
add
das
jbe
push
pop
pop
add
jge
aam
lock
adc
pusha
iret
movsl
add
adc
mov
xchg
xchg
add
push
pop
clc
loope
inc
mov
xlat
xchg
lcall
ret
xor
pinsrw
inc
rolb
add
lods
mov
or
call
lds
sbbl
data16
mov
int
add
push
add
aad
push
shr
add
pop
adc
push
mov
decb
add
scas
movq
test
or
add
inc
push
push
shrl
fisubl
jmp
pop
mov
push
aaa
pop
add
sub
jb
out
pop
mov
rol
stos
cld
mov
jne
pop
repnz
or
push
int3
stos
add
mov
push
test
nop
icebp
dec
sar
push
inc
cmc
push
push
scas
sub
iret
iret
and
sub
add
add
mov
enter
add
jo
jno
movsl
jb
cwtl
xchg
jnp
add
loop
dec
ret
xlat
jp
add
sub
lock
loopne
pop
push
insl
test
lock
ljmp
icebp
mov
sub
mov
jg,pn
repnz
loopne
cmp
adc
sbb
and
mov
movsl
aaa
nop
pop
cmc
enter
mov
shll
sub
mov
cmp
mov
add
adc
xor
loope
fdivs
cld
cld
adc
or
pop
in
adc
mov
pop
mov
int3
out
out
out
out
pop
orb
and
mov
xor
mov
mov
dec
inc
icebp
and
xor
push
les
outsl
sbb
enter
push
and
dec
rolb
bound
mov
clc
call
out
add
sbb
push
add
mov
push
sysret
sub
lret
sbb
and
or
lock
pop
add
imulb
xor
push
xchg
roll
and
xorb
adc
dec
or
add
dec
push
push
and
push
sbb
mov
into
add
rcll
push
mov
inc
and
sub
add
lret
add
jmp
inc
push
inc
xor
incl
icebp
xor
cwtl
mov
rorb
test
mov
push
adc
pusha
inc
pop
imul
and
popa
arpl
clc
inc
js
inc
mov
add
hlt
pop
add
loopne
rolb
mov
jo
push
mov
adc
mov
and
je
rdtsc
mov
dec
add
nop
push
xor
inc
punpckhbw
addb
xor
js
fadds
adc
cmp
push
xor
or
inc
pop
shlb
pop
mov
add
sbb
inc
inc
cld
mov
cmp
call
int3
dec
adc
xchg
shlb
mov
jl
cmp
or
out
loopne
add
addl
insl
and
sbb
mulb
add
inc
and
cmc
xchg
xor
push
add
lret
sbb
dec
adc
fmuls
or
fmul
pop
lret
shr
cmp
int3
arpl
ror
push
cld
fs
jge
jns
addr16
mov
mov
inc
mov
int3
cmp
lods
pop
sub
or
test
adc
andb
cld
inc
add
sarl
rorl
loope
not
mov
mov
std
in
mov
cmpsb
push
inc
jl
push
ljmp
mov
enter
push
and
pusha
mov
and
adc
fwait
cmp
xchg
lock
mov
sbb
call
cmp
pop
inc
aas
out
add
dec
dec
inc
add
leave
sbb
add
push
adc
pop
sub
cmp
subb
add
jle
xchg
add
or
lret
loopne
jge
add
jb
ljmp
insl
lock
cld
popf
add
lds
mov
shr
mov
mov
jl
jmp
mov
and
jne
out
mov
adc
or
add
ja
xor
movsb
add
add
fistpl
mov
jg
jg
xor
dec
xor
mov
mov
jne
pop
add
rol
mov
and
adc
stos
add
add
jmp
or
pop
add
sbb
leave
lock
dec
add
cmp
jnp
testl
jmp
mov
pop
xchg
je
mov
push
clc
or
and
or
pop
dec
add
sub
cwtl
add
xor
xchg
add
xor
mov
rorb
adc
xchg
ljmp
push
inc
mov
add
clc
adc
xchg
cmp
loop
add
andl
push
mov
mov
stos
xchg
push
mov
pop
add
shlb
add
or
adc
pop
add
add
cmp
clc
mov
jae
pop
add
cli
adc
je
add
pop
loop
dec
aam
jmp
sub
xor
and
rorl
add
div
mov
inc
mov
mov
add
dec
jne
add
xor
ljmp
jecxz
jae
dec
cld
pop
adc
pop
mov
test
sahf
andl
or
add
add
fnstenv
jmp
pushf
fwait
daa
out
mov
mov
mov
cmp
je
push
push
add
and
sub
sub
or
xlat
movsb
lahf
adc
pop
pop
inc
loop
outsb
mov
dec
sbb
test
dec
cld
nop
enter
pop
repnz
add
jmp
and
paddusw
sub
sub
sub
push
add
dec
scas
out
inc
mov
mov
pop
cmp
and
adc
xor
sub
fnsave
inc
gs
pop
das
flds
imul
or
mov
popa
mov
adc
scas
mov
or
add
push
addb
call
add
jmp
nop
cwtl
addl
cmp
mov
sarb
data16
mov
push
or
stc
add
push
add
push
sbb
adc
out
xchg
nop
outsl
or
scas
jp
add
xor
add
int3
sbb
loopne
fidivrl
pop
mov
ljmp
in
jne
add
sbb
jmp
cwtl
and
and
xchg
lahf
adc
push
out
loop
pop
xor
add
test
pusha
add
lods
cmp
pop
rcrb
add
imul
out
xor
cwtl
mov
push
mov
mov
xor
addb
in
cmp
cs
add
lret
jecxz
and
xor
inc
jbe
add
ss
mov
faddl
jmp
inc
sar
add
fidivrs
lret
fsub
pop
add
arpl
pop
add
mov
jno
sbb
cmp
dec
jl
add
sti
jmp
int3
pop
add
imul
sbb
jnp
cwtl
jns
roll
dec
movsb
jp
mov
or
and
inc
in
ret
and
sub
pusha
sub
jns
nop
push
sbb
xchg
stos
ret
and
add
dec
je
xor
faddl
lock
pop
nop
add
sub
cld
out
les
clc
movsb
into
inc
daa
fisubl
add
xchg
push
and
inc
andb
add
les
mov
add
sub
add
hlt
push
es
inc
or
sub
xchg
jns
push
inc
add
int
add
out
push
add
lea
or
pop
jmp
cltd
movsb
ret
inc
fiadds
fadds
std
fildl
mov
dec
mov
or
xor
les
in
jge
pop
inc
sub
inc
pop
mov
dec
mov
xchg
data16
add
pop
and
push
jno
sahf
outsl
mov
pop
leave
inc
addl
push
jle
mov
enter
cli
jne
push
mov
or
pop
rcrl
pop
add
xchg
cmp
hlt
pusha
add
test
lret
add
or
shlb
cmp
and
es
add
lahf
xchg
cmpl
adc
or
add
xor
jbe
loopne
pusha
or
fldt
xchg
add
adc
lret
inc
lock
xchg
in
dec
loopne
xchg
fabs
cwtl
add
sub
fsubs
fldl
inc
cli
add
or
mov
clc
add
jne
lea
mov
fwait
mov
in
ffree
sbb
verr
xor
mov
iret
xchg
add
mov
or
cmp
or
cmp
jae
pop
incb
aas
xor
push
sarb
mov
adc
ja
jmp
sub
data16
cmpsb
push
xor
pop
push
mov
sbbl
addb
cmp
shll
mov
mov
xor
jle
pop
mov
popf
add
femms
test
push
cmp
ret
clc
pop
ljmp
hlt
shl
add
add
sub
add
or
dec
add
add
es
hlt
fildll
xlat
ja
add
sub
cmpb
test
push
pop
cmc
pop
repnz
mov
sbb
sub
shl
testb
add
push
pop
popa
les
jne
dec
add
in
jmp
cmp
roll
stos
and
lods
aam
add
insb
xor
cwtl
or
add
movb
aad
cmpb
shl
push
mov
jmp
stc
inc
leave
mov
mov
aad
sbb
push
or
lock
jge
adc
fnclex
add
jp
mov
lret
adc
cmp
or
inc
mov
call
sbb
push
cmp
inc
push
adc
add
cmp
je
mov
push
fisttps
sbb
call
add
test
ds
mov
add
ljmp
add
loopne
ds
aas
jmp
neg
call
test
sahf
mov
addb
add
mov
mov
lret
rol
add
sub
add
jae
add
or
cmp
add
test
and
push
add
lret
adc
xchg
sub
rcl
add
cmp
ljmp
call
cmp
pop
mov
add
jne
sbb
and
jnp
lahf
dec
aas
sahf
cld
bound
add
mov
adc
das
je
inc
mov
mov
cmp
pop
aas
jp
inc
scas
pop
loopne
test
nop
push
mov
and
inc
lock
cwtl
aas
test
enter
or
cld
jmp
push
dec
inc
or
or
pop
fcoms
push
fs
and
rol
adc
mov
push
pop
xor
and
lea
loopne
and
leave
lret
pushf
xor
sbb
mov
lea
fwait
xchg
into
or
xchg
adc
xchg
adc
lahf
mov
ss
and
xor
dec
shlb
or
mov
test
or
push
inc
test
repnz
inc
dec
mov
adc
rclb
scas
rorb
lret
xchg
call
xor
jecxz
push
not
mov
inc
repnz
loopne
mov
add
loopne
add
pop
jno
mov
repz
loop
add
mov
loopne
mov
js
jg
stc
in
out
cmp
cwtl
sarb
lea
push
adc
add
shl
std
dec
xlat
cmp
ret
xchg
add
test
add
jno
cmp
pop
lret
jmp
push
jne
dec
mov
decl
add
jge
clc
cmp
add
mov
add
adc
cli
jae
rcrl
add
push
lods
jne
or
add
jmp
xchg
and
jb
cmp
jecxz
adc
int3
orb
mov
test
leave
add
cmpsw
push
cmp
aas
pop
inc
pop
lcall
or
mov
adc
add
sbb
jns
jge
jae
add
sbb
xor
jb
add
lahf
test
or
insl
push
pop
push
add
sahf
mov
fcoms
xor
addl
andb
lea
inc
mov
jg
jmp
addb
shlb
jmp
mov
add
daa
mov
adc
nop
add
rolb
shll
adc
jmp
lods
test
mov
push
das
fmuls
jne
fnstsw
add
cmc
in
mov
push
pop
cmp
jnp
pop
lock
out
add
and
jno
lock
test
test
jo
inc
decb
dec
mov
hlt
rcll
int3
push
dec
add
lret
mov
sub
or
cmovg
jae
shl
push
ret
add
clc
ljmp
jne
pop
lea
in
sub
cmp
pop
inc
inc
inc
incb
xchg
pshufw
mov
dec
mov
pop
jmp
add
sub
or
mov
or
ljmp
dec
add
push
lret
add
mov
add
sub
mov
incl
mov
sub
add
pop
push
or
add
ret
incl
roll
jecxz
add
add
movsl
loop
or
sbb
add
mov
movlps
xor
pop
pop
cs
add
cmpsb
and
and
aam
jecxz
int
add
xor
paddd
sub
pop
mov
imul
dec
add
cld
xchg
mov
add
adc
mov
imul
lds
inc
add
push
shll
insl
enter
std
mov
inc
andb
pop
out
sbb
dec
mov
jle
leave
cld
shlb
dec
sub
xor
mov
dec
je
insb
push
das
pop
ret
daa
ret
mov
fwait
mov
cwtl
loope
cmc
clc
das
ljmp
sarl
mov
adc
pop
fldl
das
jo
jle
and
pop
add
mov
or
aad
dec
mov
and
pop
inc
shlb
int3
sbbb
xchg
xchg
sub
je
jle
add
jl
sbb
fldl
mov
inc
inc
inc
loopne
add
inc
dec
dec
dec
dec
rorb
dec
push
push
push
push
sub
mov
pop
pop
pop
popa
bound
jo
add
push
insl
loopne
add
jno
jae
jne
jbe
add
jp
xor
xorb
xor
cmp
add
cmp
sub
jno
jge
sub
cmp
sub
push
pop
daa
or
or
lea
out
add
stc
sbb
push
test
rol
cs
and
pop
cld
mov
in
ss
xchg
lahf
dec
xor
mov
adc
mov
mov
push
jbe
insl
fimull
xlat
xor
nop
icebp
push
add
nop
adc
mov
hlt
je
fldt
and
cmp
mov
enter
clc
sahf
and
jle
add
or
in
mov
xlat
xchg
mov
jnp
dec
add
jge
inc
mov
fldcw
cwtl
adc
or
scas
shrl
push
aas
rolb
daa
sub
sub
cmp
mov
imul
mov
rcrb
inc
xor
loop
or
sbb
hlt
push
inc
add
jne
movsb
data16
mov
mov
gs
aas
ljmp
jbe
iret
jae
filds
andl
aad
mov
lahf
jg
push
add
pop
inc
repz
sub
in
fnstcw
test
orb
mov
dec
xor
add
pop
jo
push
push
add
or
jl
add
loope
repz
cmp
mov
cli
add
fs
or
jmp
add
cmp
jne
jle
and
imul
orb
mov
lea
hlt
mov
lods
sbb
leave
bound
in
sbb
pushl
aam
jns
addb
add
andb
je
mov
or
or
add
rorb
add
cs
xor
mul
mov
jle
fxam
rcll
dec
cmc
xor
add
mov
add
dec
loop
call
repz
pushf
aas
dec
mov
jno
mov
iret
sub
repnz
cmc
add
xchg
mov
test
push
add
idivl
push
into
inc
les
mov
push
enter
and
cmpsb
ficomps
movb
rolb
test
shll
pop
cltd
icebp
sub
sub
leave
je
mov
push
sbb
or
sub
jbe
pop
inc
or
mov
or
mov
push
sub
insl
lret
icebp
xor
dec
or
rcrb
mov
add
xchg
pop
das
adc
inc
mov
std
les
mov
add
notl
cmp
mov
push
out
cmp
cmp
or
cs
in
push
inc
repnz
ljmp
add
scas
or
inc
ja
cld
enter
inc
ret
mov
mov
out
sub
aas
cmp
ret
lock
shrb
and
add
pop
rclb
iret
xor
mov
or
mov
mov
push
and
lds
arpl
in
or
xchg
sbb
xor
out
mov
xchg
cmp
add
in
pop
add
mov
add
jns
pop
call
imul
add
pop
jne
cld
out
int3
or
cmp
xchg
sub
mov
jmp
mov
hlt
xor
roll
add
out
sub
jns
add
jne
into
les
cmpsl
and
faddl
cmp
pop
mov
sub
in
pop
js
nop
mov
push
cmp
imul
mov
or
xchg
cmp
ss
mov
inc
adc
lock
add
add
sbb
and
adc
mov
adc
pushf
sbb
add
add
les
ja
push
pop
js
loopne
dec
mov
adc
dec
add
and
std
xlat
cmp
and
mov
add
gs
aad
ss
add
mov
inc
sar
dec
loop
add
xor
je
mov
out
lock
pop
mov
sbb
hlt
push
mov
add
push
jnp
dec
jl
add
xor
int
mov
add
xor
cmc
sub
dec
add
cmpl
add
fs
stc
mov
jnp
jns
add
jne
push
out
dec
sub
jecxz
push
sub
lods
in
xchg
loop
jno
dec
adc
adc
sbb
sahf
sub
add
popa
add
faddl
push
add
leave
jnp
inc
fstpl
add
arpl
adc
jo
add
jns
add
sub
inc
add
xchg
push
hlt
jnp
ret
add
adcb
add
lods
fsts
add
inc
int
add
pop
call
pop
add
lea
push
dec
or
xor
add
std
mov
sbb
push
bound
pop
cmp
or
fwait
sub
movswl
dec
add
mov
push
pop
lcall
pop
clc
dec
jns
add
dec
out
fimuls
or
mov
leave
jbe
rolb
sub
jb
adc
jae
or
in
repz
push
mov
jne
pop
add
aas
mov
xor
push
mov
cmpsb
or
jae
cs
push
cmp
int3
scas
sub
or
or
addb
jae,pn
jns
je
lock
pop
ja
add
aaa
cmp
sub
jo
mov
add
leave
dec
loopne
push
popf
jle
add
lods
xor
mov
aad
clc
add
mov
or
loopne
fdivrs
jae
sysexit
and
mov
jne
pop
xor
and
dec
rcl
negl
rorb
jecxz
test
mov
lahf
jno
add
mov
pop
add
fucompp
mov
sub
lods
out
inc
add
jno
mov
add
sbb
incb
xchg
fdivrl
fwait
pop
mov
sub
push
loop
jp
roll
pop
add
adc
and
mov
mov
arpl
pop
pop
inc
in
cli
and
sahf
xchg
sub
sbb
lret
test
fsubs
test
xchg
push
add
imul
sarl
sti
cwtl
pop
into
add
jmp
inc
inc
cmp
in
pusha
icebp
mov
add
ss
iret
jge
add
pusha
mov
mov
hlt
xorl
jl
das
mov
mov
add
test
mov
movsb
adc
addb
sbb
jecxz
ret
add
ret
add
mov
mov
cmp
les
sbbb
pop
pop
add
mov
mov
cmp
shlb
push
add
or
movsb
cmp
pop
mov
fwait
pushf
add
pop
add
add
into
xchg
xchg
sbb
fmuls
jg
shlb
out
xor
nop
roll
xchg
test
fcoms
mov
addb
dec
add
cmpb
jb
pop
push
or
gs
add
add
jae
cld
jb
push
rcrl
imul
jecxz
mov
and
sar
inc
outsl
inc
repnz
loopne
xor
jb
out
cmp
push
inc
push
xor
lahf
dec
push
add
jne
xchg
mov
rorb
pop
xchg
shlb
cltd
subb
jg
mov
adc
jo
mov
jp
adcb
mov
rep
and
out
add
shl
pusha
add
aam
fsubl
cld
add
ds
sub
xor
xor
push
loope
cmpsb
cli
add
push
xchg
mov
push
insb
mov
fwait
push
add
adc
add
lock
mov
adcb
std
add
dec
imul
jl
add
adc
and
bound
clc
mov
push
nop
jg
add
shll
cmp
add
out
int3
adc
xchg
lret
add
push
enter
int
and
pop
mov
add
mov
shlb
roll
ret
sbb
dec
dec
lods
or
add
pusha
xchg
and
add
shll
add
in
repnz
ficoms
lods
les
test
pushf
rolb
hlt
push
in
repz
pop
jo
inc
popa
mull
lret
add
add
cwtl
and
movsb
nop
mov
rcrl
lret
xchg
and
test
aaa
or
mov
inc
xor
push
mov
adc
fiaddl
add
test
mov
dec
loope
push
inc
and
xor
pushf
add
adc
and
xchg
jno
inc
stos
in
jmp
shll
popa
jno
add
loopne
sub
mov
dec
loopne
push
in
push
movsl
cli
ret
adc
add
sub
mov
adc
add
mov
lock
in
push
rorl
adc
mov
les
sub
sbb
pusha
xor
loopne
cmp
pushf
mov
fcoml
cli
mov
cld
mov
sub
add
and
faddl
sbb
rcll
loop
add
lcall
ljmp
frstor
negb
call
xor
out
aam
xchg
fiadds
inc
or
add
aad
cwtl
xchg
add
call
xchg
sbb
lock
cwtl
inc
add
inc
lds
outsb
pop
mov
loop
cmp
or
pop
inc
or
loope
jge
add
cmp
add
shr
inc
push
cs
add
jns
or
push
add
jae
push
add
leave
fdiv
daa
in
test
jge
push
push
fnstcw
xchg
sti
pop
stos
popf
xor
cltd
mov
add
getsec
adc
out
dec
and
mov
add
or
cwtl
add
or
bound
sub
subb
clc
pop
leave
push
pop
xchg
rclb
fwait
and
mov
add
lret
mov
pop
test
hlt
xlat
and
insl
push
test
push
pop
add
or
pop
xchg
repnz
cmp
and
add
insl
dec
mov
add
or
loopne
mov
jmp
ds
incl
xlat
js
addr16
adc
adc
je
add
mov
out
fsts
sub
mov
add
or
mov
push
xchg
adc
add
shrb
or
rorb
mov
mov
fcoms
iret
add
xchg
test
fnstcw
xchg
add
and
inc
add
sub
and
je
mov
add
and
push
add
pusha
inc
jl
mov
dec
test
or
in
jmp
cmp
mov
mul
xor
pop
lcall
jmp
enter
jnp
xorb
dec
add
jl
daa
add
sarb
movsb
lret
ss
mov
mov
add
fimull
addl
and
jae
inc
cmp
orb
mov
push
dec
in
popf
mov
add
dec
inc
pop
sub
cmp
shlb
push
dec
fcoml
add
cmpsl
jne
aaa
call
bswap
xor
int3
hlt
lahf
and
add
stc
das
inc
pop
mov
ret
xor
lods
imul
fdivrl
fdivp
imul
adc
fistl
jo
and
pop
in
inc
fsts
inc
sub
mov
test
inc
inc
fiaddl
add
fsub
dec
fdivs
aad
pushf
test
add
mov
fcompl
dec
add
lahf
push
rcrl
jmp
add
les
daa
ret
into
dec
ja
add
jecxz
fst
sub
cmp
inc
movsb
and
or
rcrl
add
add
sbb
mov
notl
add
dec
push
mov
test
repnz
and
or
add
mov
testl
test
dec
push
call
or
or
adc
mov
ss
divps
xchg
orb
dec
rolb
mov
jge
inc
clc
mov
or
lds
incb
xchg
cs
dec
mov
cmp
push
and
and
mov
xchg
adc
xchg
or
or
jmp
in
leave
negl
in
add
das
push
pop
pop
nop
inc
mov
adc
rclb
lods
pop
in
add
mov
faddl
mov
adc
jb
add
shufps
lock
adc
pop
les
or
mov
fwait
add
ret
mov
and
cmp
push
or
leave
and
xor
loopne
hlt
add
insb
push
lock
jae
leave
add
dec
pop
push
notb
sti
mov
cmp
shrb
and
addb
xor
push
add
js
call
push
clc
lock
inc
xchg
sub
sbb
mov
xchg
push
inc
stc
jmp
cmp
add
iret
or
rolb
pop
negb
jle
cwtl
inc
pop
dec
clc
in
add
pop
call
push
add
pop
mov
mov
loopne
test
add
mov
int
adc
jne
or
and
and
jmp
subb
or
inc
insb
popa
jae
add
inc
and
bound
add
lret
add
or
sub
mov
test
movsb
push
jb
rclb
sbb
pop
mov
inc
ret
add
loope
pop
add
xchg
jns
cs
aam
add
loop,pt
dec
out
xchg
mov
rcr
sub
inc
cmp
movsl
cld
jl
add
adc
std
add
lahf
iret
icebp
in
movsb
arpl
les
xchg
add
jne
sub
push
adc
shrb
dec
int3
sbb
mov
icebp
and
fsubl
or
mov
adc
mov
aam
and
addl
mov
movsl
push
mov
clc
enter
mov
add
leave
mov
scas
add
jae
mov
push
push
lea
fstl
pop
ljmp
ret
je
xor
cmpsb
mov
or
clc
jae
add
in
into
popf
add
mov
mov
cmc
cwtl
add
out
xchg
insw
and
imul
xor
or
aam
add
xor
and
das
imul
push
xchg
xor
fistps
out
sahf
inc
orb
or
in
jb
push
cltd
ljmp
data16
pop
lcall
add
and
adc
aas
add
fldcw
sbb
call
fiaddl
sbb
test
cmc
push
push
cmp
push
jne
loopne
sbb
je
sbb
bound
lods
sarb
stos
push
and
add
lret
hlt
dec
add
lea
dec
clc
into
jg
sbb
out
add
test
push
push
inc
in
mov
push
sbb
aam
daa
and
jle
push
push
mov
incl
push
push
push
mov
aam
pop
dec
in
cmp
movaps
push
insl
inc
popf
adc
pop
add
xchg
and
adc
stos
jns
push
mov
mov
push
xchg
mov
popa
sbb
incb
mov
add
dec
shll
mov
outsl
sub
jae
add
mov
add
mov
in
add
and
pop
movb
cmp
imul
in
imul
sti
call
lcall
in
stc
fcmovbe
mov
test
mov
aad
pop
les
cld
mov
pop
add
clc
adc
in
mov
lcall
dec
addr16
sub
fmuls
inc
insb
aas
test
orb
add
dec
int3
or
adc
jae,pn
sbb
jne
xor
ret
xor
fcoms
pop
and
cmp
add
or
pop
jb
pop
sub
or
adc
iret
sbb
out
or
inc
and
add
popw
adc
test
adc
pop
add
les
subb
add
push
jmp
push
push
mov
add
rclb
adc
movsl
cs
repz
mov
pop
add
push
add
cmpsl
nop
mov
hlt
mov
add
jmp
cmp
and
adc
add
mov
fadds
pop
clc
cmpw
push
jne
add
int
je
movsb
jl
add
adc
dec
pop
out
mov
mov
or
inc
inc
adc
pop
push
add
add
cli
add
pop
ja
fst
out
pop
add
push
push
mov
add
jne
fucomp
add
pop
pop
jae
jmp
or
add
sub
adc
subl
leave
cmp
decl
mov
fcmovbe
arpl
add
lahf
bound
fucomp
fsubs
dec
roll
push
fmuls
sub
add
dec
das
mov
in
mov
jae
or
hlt
sub
mov
ljmp
icebp
jnp
call
dec
lahf
push
scas
in
cli
add
xchg
cmp
mov
and
adc
add
sub
adc
in
dec
add
add
add
ret
mov
jmp
outsl
push
movlps
mov
and
nop
jo
adc
or
addb
daa
inc
xor
inc
or
pop
fdivs
xor
pop
xchg
out
and
sbb
push
addb
and
test
inc
adc
call
push
incl
andb
pop
and
sbb
iret
or
sbb
stos
pop
push
pop
mov
rolb
dec
adc
xor
cmp
repz
or
inc
xor
mov
add
xlat
xor
jl
outsb
mov
imul
adc
rcrb
stos
inc
cmpsb
sbb
add
jl
fldenv
and
mov
movsb
xchg
inc
jb
add
sbb
xchg
rsqrtps
cmp
shlb
mov
xor
lea
fldenv
jne
push
daa
sbb
add
or
insb
pop
sub
and
sub
leave
lods
pop
inc
xchg
gs
and
and
push
les
daa
fcomps
pop
aaa
mov
sbb
push
movb
add
xlat
push
insb
add
dec
xor
push
xor
sbb
pop
imul
notb
jnp
dec
xor
test
rol
ds
add
in
pop
stos
enter
push
aaa
scas
stos
push
test
add
add
or
and
or
call
push
sbb
scas
mov
ror
add
adc
mov
pop
test
cmp
or
mov
stos
add
mov
das
push
add
loop
les
shlb
in
inc
nop
addl
sbb
out
xchg
mov
add
mov
xor
adc
incb
aaa
mov
pop
cmp
push
imul
bnd
mov
adc
out
add
movsb
lock
icebp
xchg
or
int3
divb
pop
mov
pop
or
sbb
adc
sub
and
sbb
xchg
mov
jne
je
outsl
add
outsb
imul
iret
call
mov
lret
and
mov
mov
dec
add
push
pop
add
mull
push
push
mov
mov
add
sub
in
je
add
sub
iret
or
inc
jmp
fiadds
jp
pop
push
loopne
add
cmp
lea
add
push
mov
dec
mov
jae
add
jb
lahf
add
jecxz
add
fisubrs
add
and
pop
add
lds
pop
fimuls
pop
add
adc
sub
pop
push
mov
ljmp
aaa
pop
nop
jno
call
add
popf
aam
mov
sbb
jge
and
adc
add
or
add
jne
jle
dec
push
rorb
jae
mov
jns
add
and
jo
std
xchg
jecxz
lock
in
stos
add
jo
lock
iret
lcall
pusha
and
sti
adc
push
add
jo
sbb
add
pop
popa
push
add
inc
sbb
test
cmp
xlat
pusha
mov
lock
mov
gs
add
xchg
pop
pop
xor
das
sbb
dec
stos
test
push
or
sub
incl
add
xor
cmp
les
std
mov
lret
and
adc
stos
mov
push
adc
xchg
inc
jmp
add
dec
loope
cmp
inc
add
xor
shr
or
add
mov
rcrb
repz
into
sbb
leave
lea
test
ljmpw
insl
punpcklwd
cmp
inc
repnz
ret
hlt
dec
jge
add
in
mov
clc
sbb
cmp
pinsrw
jl
pop
mov
adc
add
push
jle
imul
hlt
xor
pusha
add
cmc
test
pop
outsl
adc
add
and
call
hlt
ret
inc
cmp
insl
mov
adc
les
sbb
out
xchg
pop
jae
jmp
test
mov
mov
xor
in
dec
push
push
pop
jle
pusha
cmp
lcall
jmp
inc
test
sbb
jns
ja
add
dec
inc
enter
add
dec
scas
jge
and
xor
pop
dec
push
jno
jge
add
test
sbbb
sar
add
sub
stc
sub
xchg
pop
pop
movsl
pop
sbb
inc
push
mov
dec
add
pop
decb
cmpb
xor
rcll
adc
cltd
aas
pop
ja
mov
jnp
xchg
pusha
out
xor
add
xchg
test
fsub
mov
notl
sahf
inc
int3
add
add
clc
push
fchs
cli
sti
sar
sbb
or
cmp
dec
nop
insb
cmp
jo
mov
or
inc
add
les
mov
roll
add
aam
and
sahf
and
jl
ds
addl
std
push
rcr
inc
add
inc
or
xor
adc
sbb
and
sub
clc
and
dec
inc
nop
sbb
loop
ds
test
es
inc
rclb
cwtl
or
enter
pop
dec
push
xor
imul
mov
pop
jno
or
inc
adcb
popa
outsb
jae
inc
jb
in
daa
xchg
clc
push
ret
or
bswap
loopne
jcxz
sbb
push
sub
insl
jmp
mov
xchg
rol
add
mov
mov
dec
jne
add
xchg
cmp
adc
xor
add
test
push
jo
ljmp
ja
jmp
push
in
ror
lock
xor
pop
lahf
jbe
inc
testb
lcall
add
inc
xlat
gs
add
ljmp
add
sub
xchg
inc
add
push
or
loopne
push
adc
push
incb
and
mov
testl
and
add
iret
mov
jae
das
jmp
lods
sti
and
jle
push
std
call
cmc
clc
lahf
cmp
add
pop
sbb
and
fimuls
test
jmp
adc
neg
xchg
lock
out
adc
icebp
lods
cmp
mov
insb
fists
jmp
or
push
add
xchg
cmp
je
divl
fdivrl
push
test
jb
xor
mov
and
testl
in
or
test
insl
lock
sub
mov
xor
xor
jns
jb
push
in
add
and
xchg
cmp
add
or
mov
dec
push
fildl
jns
cmp
jg
pop
clc
mov
pop
ljmp
push
sub
mov
add
inc
jmp
ret
adcb
jmp
sub
xchg
dec
mov
testb
or
test
add
ljmp
movsb
push
add
std
out
add
sub
xchg
mov
fmull
imul
and
mov
test
xchg
cli
adc
lods
cmp
push
sbb
enter
lret
mov
push
lahf
add
and
cmp
inc
filds
adc
sub
dec
cli
add
inc
in
or
sbb
jno
xchg
outsb
jl
je
adc
lods
add
clc
cmp
sbb
outsb
xor
fistl
add
add
pop
insb
cmp
jmp
cld
or
adc
pop
add
sub
shlb
or
shl
inc
jmp
adc
xchg
cmp
sbb
sti
mov
sarb
inc
sbb
movsb
outsl
jbe
scas
ret
cmpsl
inc
add
mov
and
add
mov
add
test
aas
pandn
test
rol
scas
cld
mov
jg
jo
sbb
add
pushf
call
ret
clc
jg
in
cmp
pop
xlat
cmp
and
xchg
push
mov
adc
pusha
dec
dec
inc
push
pop
add
inc
push
adc
stos
pmaddwd
dec
mov
daa
add
sub
pop
add
and
push
loopne
pop
and
mov
push
adc
mov
jbe
xor
push
lock
rol
add
and
mov
out
int
and
inc
roll
insb
nopl
rolb
fnstcw
xor
aas
movb
add
subl
sub
rorb
call
clc
xchg
cld
jmp
push
adc
add
dec
add
loopne
dec
ss
pop
or
insb
shr
inc
xor
les
mov
cmp
inc
lret
jg
daa
es
and
in
pop
outsb
add
fucomi
in
add
xor
cmp
add
clc
enter
add
and
test
scas
cmpsb
adc
xchg
sub
sub
repz
push
out
rolb
add
xchg
out
inc
jl
inc
add
cwtl
sbb
jmp
popf
push
sti
mov
dec
add
push
outsl
push
imul
int3
add
xchg
jb
add
call
inc
jbe
lock
add
sti
stc
cli
data16
push
mov
loop
scas
sub
xchg
add
or
js
clc
stc
shlb
orb
jo
and
imul
adc
or
cld
clc
pop
stos
out
add
mov
and
add
cmpsb
ror
fs
or
or
add
lahf
scas
add
js
add
mov
pusha
jge
icebp
pop
bound
cmp
sub
xchg
inc
add
inc
loop
inc
pushl
inc
xor
icebp
sbb
add
sbb
test
jl
add
cwtl
subb
sbb
inc
and
maskmovq
push
add
and
add
lock
mov
andb
mov
shlb
ds
imul
cmp
bound
xchg
jno
std
mov
imul
out
fdivrl
add
cmp
cmp
rorl
jnp
in
jmp
repnz
inc
add
adc
imul
mov
add
mov
xchg
rolb
imul
cmp
mov
xchg
cmc
add
pop
pop
add
push
fisubs
add
cwtl
stos
add
mov
mov
cmp
gs
sti
adc
or
add
and
add
pop
in
push
add
pop
adc
jo
insb
jae
clc
push
hlt
enter
inc
fcom
cwtl
mov
repz
incl
or
add
and
sbb
nop
add
int
and
rcll
in
or
add
aaa
ret
inc
cld
js
xor
or
add
or
fbld
add
and
in
adc
inc
aam
in
inc
es
pop
adc
add
mov
ja
subl
mov
jnp
inc
aas
fst
sub
test
fld
outsl
adc
pop
inc
cmp
mov
dec
sub
cmp
cli
call
hlt
xor
scas
rolb
jno
nop
in
out
cltd
mov
or
mov
adc
popf
insl
adc
cmpsl
mov
sbbl
push
out
and
pop
dec
add
mov
inc
ljmp
push
cmc
mov
add
orl
rolb
xchg
push
sti
shll
inc
add
lds
mov
out
nop
xor
pop
jle
ret
sbb
push
inc
popa
jns
dec
daa
popl
addl
xor
addl
orl
add
imul
cmp
add
fldenv
testb
addb
dec
iret
and
test
pop
mov
or
add
lods
les
in
ds
out
sbb
sub
hlt
inc
ror
gs
out
add
add
add
rorb
mov
xor
and
add
xchg
stos
xor
test
add
xorl
add
sub
adc
cmp
inc
cmp
rorb
lock
inc
mov
jo
pop
and
add
pop
rorb
adcb
rorb
cmp
and
flds
rcrl
sub
test
inc
fdiv
and
outsl
sub
enter
loopne
sub
xor
push
and
push
nop
sbb
inc
add
mov
mov
stos
sbb
or
push
roll
clc
and
push
negl
mov
in
shlb
fdivs
enter
mov
xor
push
mov
nop
ret
roll
xlat
add
xor
jne
aaa
in
lret
add
outsl
arpl
fisttps
add
adc
sub
decl
push
add
jl
dec
push
aas
jle
sbb
lar
adc
mov
testl
sub
mov
xor
mov
cmc
cli
jb,pt
add
movsb
std
pop
jmp
out
sub
xchg
jo
add
popf
sbb
cmp
sbb
jge
fisttpl
aaa
cmovl
adc
cli
sub
andl
xchg
or
push
sti
sub
andb
bound
xchg
xlat
pop
lret
or
and
out
pop
add
and
in
add
mov
cmp
adcl
mov
jae
add
mov
jmp
in
sbb
insb
push
push
and
add
add
sbb
and
lea
add
inc
cmp
les
sub
mov
mov
adc
ljmp
or
pop
cmp
or
lret
pop
dec
clc
mov
daa
out
outsl
dec
insl
mov
aas
dec
mov
shll
xchg
xchg
add
mov
inc
sub
mov
add
fwait
lods
push
out
mov
add
test
xor
or
sti
jb
add
movsl
into
pop
add
or
pop
add
jbe
mov
aad
add
inc
sub
push
cmovns
stos
add
les
js
sarb
push
inc
pop
pop
std
bound
inc
pop
sbb
gs
xor
or
dec
adc
lret
add
pop
sub
xchg
loope
movsb
or
and
push
sbb
pop
or
add
adc
sub
push
xor
sbb
mov
xchg
ret
lret
pop
clc
movsb
loopne
inc
cmp
mov
or
loopne
jns
add
xor
xor
push
pusha
les
mov
mov
or
add
call
add
or
adc
add
rorb
mov
xor
add
xor
xlat
addr16
push
orb
push
jno
add
lret
pop
and
daa
outsb
ja
cmp
movsb
or
shlb
pop
add
cmp
jle
clc
cltd
lock
xchg
add
pop
mov
rclb
pop
ret
loop
rcrb
sbb
pusha
aas
pop
cld
sbb
jmp
cmp
shll
xchg
sbb
inc
aas
sub
insl
inc
clc
adc
setae
fists
les
fnstcw
push
shlb
xor
add
pop
xchg
sub
inc
lock
jnp
cmp
adc
and
fisttpl
xor
jno
push
push
insb
call
add
inc
sbb
out
adc
add
les
add
fdivrl
enter
jmp
mov
aaa
imul
pop
pop
ds
and
add
jns
out
test
push
cmp
and
int3
add
adc
dec
aaa
sub
in
xchg
xor
pop
popa
jb
and
aam
and
push
orl
mov
xor
adc
loop
add
inc
cmp
adc
js
adcb
testl
cmp
popf
in
cltd
hlt
sub
add
jg
icebp
fnstcw
and
sti
push
and
xchg
push
add
jbe
add
mov
les
push
xor
int
faddp
mov
lret
adc
ds
mov
jne
xchg
mov
add
push
test
add
js
adc
cmp
aas
add
jbe
pop
or
push
js
add
lar
cmp
add
xchg
out
add
mov
rcrl
pop
mov
sub
xor
cmpsl
pop
fildll
pop
aam
mov
in
add
cmpsb
xor
jmp
xchg
xchg
dec
inc
cmp
push
xor
dec
loop
add
adc
call
and
sbb
lahf
insl
inc
cld
sub
jns
ss
mov
test
loopne
dec
add
loope
jge
add
std
rorl
mov
jl
xor
ret
xor
push
add
lcall
ds
mov
pop
sbb
adc
add
insb
jecxz
scas
mov
push
fsubs
pushf
or
ljmp
lahf
add
ret
rolb
xor
adc
and
pop
pop
add
cld
inc
out
mov
or
or
aas
sub
fsubs
cmc
call
loope
mov
aam
loop
xor
dec
inc
addr16
push
imul
or
add
xor
test
js
add
fsubrl
xchg
sub
das
cmpsl
add
loope
push
jno
push
jge
jnp
add
addr16
adc
or
xor
inc
pop
jne
pop
xchg
aaa
nop
xchg
sbb
sbb
add
and
les
inc
loopne
pop
xor
rcrb
in
mov
adc
repz
addb
sub
mov
addr16
xor
push
adc
mov
or
jp
add
sbb
jno
dec
pop
cmp
cs
in
jle
aaa
mov
sbb
adc
and
out
or
loope
pop
call
add
sbb
pop
cmp
les
add
mov
add
hlt
dec
sbb
loopne
adcb
xchg
pop
mov
sbb
repz
jns
cmpl
add
mov
or
rcr
aam
push
adc
in
push
mov
adc
repz
xor
inc
fnstsw
mov
call
negb
pop
das
xchg
dec
leave
mov
adc
aad
rolb
aaa
mov
fcmovnb
jecxz
shl
cmp
add
push
pop
mov
add
jb
test
mov
clc
dec
dec
push
std
add
shlb
xchg
setnp
fsubr
andl
or
enter
push
jecxz
pusha
test
ret
lods
push
inc
nop
fucomi
cmp
cmp
inc
push
add
inc
and
xor
push
push
and
and
push
cld
pop
out
push
jbe
repnz
push
and
mov
adc
jecxz
roll
popa
sbb
inc
inc
mov
mov
mov
jmp
pop
dec
adc
outsl
sub
pop
pop
push
add
insl
cmp
sub
clc
and
fs
adc
push
loope
out
repnz
lahf
xchg
and
clc
test
in
lock
dec
pop
std
stos
mov
fbld
adcl
sbb
sbb
loop
and
jl
mov
outsl
xorb
daa
mov
loop
add
jae
outsl
loopne
pop
or
clc
and
or
add
mov
mov
lret
aaa
fs
xlat
imul
inc
test
loopne
shlb
jle
mov
insl
rorb
cmp
mov
dec
and
jecxz
push
add
jl
imul
xchg
adc
adc
mov
or
and
adc
insb
adc
adc
ljmp
add
mov
cmp
and
jg
pop
out
jae
inc
pop
loopne
or
add
and
add
out
fisttpl
inc
jmp
popf
cltd
les
sbb
inc
dec
push
mov
xchg
or
outsb
mov
and
adc
add
and
inc
std
pop
add
out
pop
lcall
and
adc
fcoml
cmp
xor
out
push
push
pop
aas
sahf
lret
pop
inc
loope
fucom
jg
mov
jge
add
add
mov
jl
and
jl
pop
xlat
pushf
in
aam
mov
js
fldenv
es
popa
pop
add
xchg
adc
lahf
or
cmp
mov
fdivrs
repnz
mov
loop
sbbb
aas
and
popa
jmp
out
sar
push
das
adc
sbbb
adc
loop
cmp
mov
add
daa
xor
cmp
jg
add
bound
cwtl
inc
add
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
push
inc
movsl
add
inc
jle
xchg
mov
pusha
lock
push
jge
add
add
mov
adc
xor
push
mov
xor
inc
pop
rolb
xchg
fidivl
add
mov
push
dec
stc
mov
aas
cs
das
xchg
add
sub
mov
cmp
je
std
add
hlt
xor
add
rcll
repnz
sbb
jno
sarb
mov
dec
jo
push
xor
mov
mov
into
push
adc
or
dec
fiaddl
pop
mov
mov
inc
lock
and
out
add
sti
xor
mov
test
pop
add
and
repnz
add
mov
jl
xor
stc
xor
adc
icebp
fiadds
test
xor
outsb
shl
add
test
sti
es
ja
movsb
mov
jb
lods
sbb
fs
shl
add
adc
sbb
je
mov
adc
mov
jecxz
jmp
call
cli
test
and
pushf
adc
mov
rcll
js
xorb
sbb
enter
mov
sub
pop
mov
xor
cmp
xchg
add
and
inc
inc
mov
dec
sbb
push
xor
aad
push
and
pop
mov
mov
xor
push
clc
cmc
xor
add
lock
xorb
hlt
and
mov
jno
lock
jo
jb
fnstcw
mov
jne
add
repz
add
test
mov
mov
cld
je
sbb
xchg
outsb
add
ljmp
jmp
pop
icebp
add
xor
movsb
cld
push
pop
scas
fistpll
mov
or
push
xchg
or
pop
add
inc
jb
jle
cs
xlat
adc
jbe
push
testb
sbb
out
add
add
pusha
xchg
and
mov
cmp
jge
mov
xor
jae
add
in
jb
cmp
fs
xchg
sub
xchg
pop
sahf
adc
repz
enter
sub
in
add
push
and
add
lods
mov
in
mov
out
lret
scas
pop
cli
loopne
cmp
add
mov
es
xchg
ret
xchg
add
sub
clc
add
lret
paddb
add
mov
in
pop
aad
lock
cs
test
imul
rolb
adc
add
sbb
and
sub
aad
adc
and
mov
add
inc
xor
mov
je
mov
sti
add
adc
jmp
dec
sub
imul
cmp
dec
push
push
mov
cld
rcrb
mov
or
mov
mov
add
call
shll
and
fwait
nop
aam
adc
inc
icebp
loop
inc
add
add
dec
scas
loopne
nop
add
adc
out
notb
inc
loopne
cwtl
xor
add
jne
popf
lock
incl
sbb
add
or
add
jecxz
inc
and
inc
mov
sbb
add
call
add
xchg
pop
out
mov
jmp
add
fsts
add
scas
loopne
addb
add
repnz
incb
lock
leave
cli
pusha
fcmovnb
lds
sub
jle
int3
shl
lret
int
sldt
iret
sbbl
or
lret
add
add
rorb
call
fdivr
sbb
sbb
sbb
add
andb
js
leave
ffreep
pop
add
sbb
jo
add
aam
aad
cmp
into
add
inc
loope
leave
adc
adc
sar
adc
in
rcrl
shr
cmpxchg
pusha
xor
icebp
add
shl
repnz
xor
push
lock
add
shlb
loopne
add
cld
cmp
call
aas
cmpb
cmp
cmp
cmp
add
sar
clc
inc
in
sub
mov
inc
sub
jmp
add
subb
inc
ljmp
cmp
add
sub
inc
pusha
sub
in
add
and
daa
add
mov
idivb
jecxz
and
add
shlb
and
int3
mov
cmp
mov
loope
sub
lock
xchg
mov
movsl
shlb
inc
movsb
and
insb
add
scas
sbbb
ret
jb
je
jbe
jl
add
test
push
mov
add
jp
jg
jg
jns
sbb
push
mov
mov
add
add
out
cmp
xorl
mov
jae
mov
jno
jo
adc
adcl
push
inc
xchg
cmp
xchg
cmp
push
ds
push
push
rcll
add
pushf
rcrb
inc
popf
sbbb
sub
cmp
popf
lcall
rcrb
pop
cwtl
decb
cmp
mov
dec
rorl
loopne
lock
mov
rorb
inc
adc
test
add
inc
inc
xchg
and
jmp
add
in
sbb
add
and
jecxz
in
jno
cmp
xor
popf
je
push
enter
sahf
mov
inc
and
inc
add
push
sarb
add
xchg
pusha
add
mov
das
pop
pop
aam
push
add
mov
pop
dec
cs
xor
popa
adc
loopne
jmp
into
xchg
mov
mov
xchg
jle
mov
adc
je
mov
adc
pop
dec
add
mov
lods
pop
mov
add
fistps
jnp
cmp
hlt
iret
add
xor
push
add
verw
adc
jbe
mov
scas
fsubl
push
push
push
add
add
pushf
stos
add
es
or
push
xor
add
push
pusha
mov
lcall
cmpsl
orl
in
mov
cvtps2pd
pushf
movsl
roll
lret
push
pop
adc
in
pfmax
lock
leave
add
hlt
or
cld
or
add
mov
cmp
jae
add
int
add
sub
xor
inc
fdivrp
dec
or
push
adc
jb
mov
lea
nop
add
xchg
jae
jmp
push
test
add
jg
cmpsb
mov
sub
push
lea
jne
mov
cwtl
and
xchg
xchg
push
data16
inc
stos
add
loope
cmp
add
mov
bound
xchg
js
lret
cwtl
scas
inc
xchg
cmp
xchg
int3
cmp
shr
movsl
add
mov
sbbl
push
call
gs
xor
test
ljmp
leave
nop
pop
or
mov
mov
repz
not
add
bnd
sahf
or
add
xchg
push
ret
add
sbb
enter
fs
add
icebp
scas
pop
sarb
rol
add
nop
sbb
dec
or
inc
bnd
rep
xchg
add
adc
call
ret
sub
add
xor
cmp
fdivrs
movsb
ret
push
stos
fsts
mov
and
xchg
push
jno
or
jle
xor
push
jecxz
sbb
push
push
adc
adc
mov
sub
jmp
jbe
xor
subb
add
add
mov
pushl
test
jb
jmp
push
repnz
mov
cmpsb
adc
icebp
push
cwtl
stc
mov
or
xchg
pop
push
repz
push
gs
enter
push
stc
sbb
sub
adc
repz
lods
dec
and
inc
inc
cmp
inc
adc
add
dec
or
mov
mov
roll
lods
sub
adc
movsl
inc
sbb
add
or
xor
mov
lret
int
push
inc
or
dec
lods
incl
mov
testl
loopne
imul
and
leave
lock
or
xchg
pop
loope
aaa
adc
inc
cmp
stos
es
mov
add
leave
push
xchg
lret
inc
adc
xchg
mov
mov
test
popf
jg
xor
sub
and
dec
mov
cmpl
and
xor
pop
lods
int3
adc
pop
mov
adc
mov
and
cltd
or
jns
add
adc
stos
enter
xor
into
jg
cmp
sub
aas
pop
movsb
cpuid
mov
add
adc
sbb
or
mov
mov
sub
adc
fdivrs
inc
loopne
dec
sbb
aad
xor
adc
add
xor
mov
sub
mov
setne
sub
les
pop
push
cmp
push
je
pop
add
cmp
orps
ret
dec
inc
push
dec
inc
cmp
sarb
ja
es
xchg
add
leave
je
pop
push
add
mov
roll
enter
mov
xor
or
sbb
cmp
sarl
add
or
add
call
mov
ret
ucomiss
or
and
sbb
jmp
mov
inc
adc
lock
jne
loopne
scas
pushf
and
clc
push
in
jo
or
xor
xor
clc
jne
push
cld
sahf
aam
mov
jmp
ja
sub
dec
cmpb
mov
or
fnstcw
add
or
cld
push
add
pop
sub
loop
loop
pxor
scas
add
push
xchg
or
mov
add
pop
mov
add
test
sub
and
add
push
or
xchg
add
ds
sub
cmp
fbstp
adc
loop
add
dec
xlat
cmp
sub
es
iret
xchg
add
icebp
ret
int
mov
xlat
and
pop
mov
mov
test
inc
dec
cmc
jb
add
mov
test
sahf
pop
decl
xchg
add
fcoms
mov
shl
icebp
ret
and
add
insl
push
cmp
je
push
lcall
add
sbbl
jo
jmp
cmp
enter
mov
cmp
insb
add
repnz
jne
push
out
add
adc
lock
pop
add
jecxz
mov
ljmp
test
push
mov
fdivrs
dec
inc
cmpsl
hlt
xor
test
xorb
aam
leave
and
jl
mov
sbb
add
add
stc
jns
adc
dec
mov
lea
cmp
add
inc
dec
jne
aad
add
shrl
fnsave
movsl
mov
mov
test
and
push
mov
mov
dec
inc
nop
add
xor
or
cwtl
rorl
loope
and
in
ljmp
add
pop
je
push
in
ret
add
ljmp
add
or
push
mov
in
faddl
jne
pop
dec
imul
xor
mov
mov
int3
or
or
js
add
adc
adc
push
sub
test
xor
rclb
lock
add
mov
jg
loopne
test
pop
add
imul
sbb
push
pop
fsubrp
jns
ret
dec
add
rcl
mov
pushl
pop
pop
push
movsb
mov
adc
jae
add
add
je
mov
inc
xor
push
add
lahf
cmp
jl
sarb
adc
push
add
ss
sub
sbb
adc
shlb
and
add
mov
pop
add
add
add
cmp
or
pop
mov
or
add
sbb
cmc
and
in
ds
add
lret
add
rol
sbb
mov
pop
inc
sub
sub
or
movb
loope
add
add
and
inc
push
xor
pop
sub
pop
je
xlat
inc
pop
sub
adc
lods
inc
push
push
fcmovb
leave
loopne
mov
mov
mov
rolb
sar
add
jmp
sub
aam
popf
cmova
adc
std
add
push
call
jge
push
fwait
jno
mov
daa
and
xchg
push
popf
add
sub
mov
cltd
add
or
mov
test
jecxz
leave
fldl
push
inc
les
or
pop
mov
arpl
out
iret
insb
and
pop
test
sub
cmp
mov
add
test
lods
arpl
movsl
ja
adc
mov
sahf
mov
add
add
mov
sub
inc
mov
scas
cmc
adc
bound
test
test
sub
add
and
or
jmp
jge
mov
pop
or
lea
leave
call
mov
add
clc
lock
mov
ret
sbb
and
pop
out
push
sub
and
dec
js
mov
leave
out
testb
fcom
inc
cli
jns
xor
cmp
repz
daa
fs
pop
jbe
add
ds
popf
enter
xorb
cmp
add
data16
add
push
add
cmp
pop
incb
out
sub
out
push
mov
adc
adc
mov
mov
push
enter
enter
or
sbb
add
rorb
cmpsb
or
dec
push
cmp
add
mov
clc
push
add
je
xchg
inc
xorb
xor
inc
add
push
mov
add
sub
jge
inc
dec
inc
shll
in
imul
test
jne
push
jg
add
mov
adc
add
incb
add
pop
push
dec
dec
cli
icebp
pop
or
lret
pop
repz
sub
add
loope
popa
insb
cmp
or
xor
call
mov
jo
pop
xchg
loopne
loop
fmuls
sbb
add
or
inc
lea
add
xor
pop
or
cmp
cmp
call
adc
add
decb
test
jne
add
cli
cmpsl
dec
pop
out
sub
aam
xor
mov
and
rolb
add
loopne
or
adc
adc
push
add
sti
dec
psubsb
pop
jne
xchg
shl
jl
or
pop
in
mov
add
mov
mov
es
icebp
out
adc
fistpl
add
push
inc
push
fs
or
jne
mov
inc
xchg
jle
jecxz
dec
shrl
pop
push
pop
dec
iret
scas
inc
inc
or
adc
sub
mov
fsts
das
hlt
pop
pop
pop
pop
inc
ucomiss
add
push
repz
adc
shrl
dec
psubusb
xchg
inc
add
repnz
sbb
and
push
ljmp
adc
cmp
push
add
push
pop
adc
pusha
add
std
push
inc
add
pop
outsl
fadds
sbb
stos
add
rclb
in
cmp
pop
pop
add
xchg
outsl
jns
sbb
ds
ja
sub
jecxz
mov
sub
inc
mov
loope
adc
add
sbb
push
cmp
rorl
add
pop
sub
pushf
add
fs
mov
sbb
add
mov
iret
data16
adc
in
add
std
loope
rclb
in
mov
add
int3
mov
or
mov
out
sahf
add
mov
add
fadd
lods
cmp
dec
adc
push
add
pop
push
std
cmp
andl
add
shl
pop
add
push
rorb
pop
movsb
dec
add
outsb
enter
les
clc
push
js
dec
xor
xor
fs
cmp
pop
jb
insl
mov
movsl
add
add
into
je
enter
inc
sarl
jo
imul
clc
add
test
addl
mov
std
and
cltd
jg
jb
add
inc
and
jne
pop
add
pop
inc
inc
subl
mov
pop
shlb
rorb
sbb
xor
cli
mov
dec
es
push
add
inc
cmp
jne
nop
add
in
mov
iret
in
fchs
cs
or
jle
dec
lret
je
inc
pop
loop
pop
pop
inc
arpl
and
testl
outsb
or
push
jecxz
loop
add
sub
xlat
mov
sub
cld
mov
push
dec
jns
add
jmp
out
and
clc
inc
jp
xchg
push
sarb
jg
jne
cmp
dec
mov
lods
lret
mov
mov
hlt
push
push
pop
dec
pop
xchg
and
scas
jp
lock
sub
lock
fldlg2
pop
loop
add
mov
push
mov
ds
push
add
jmp
pop
out
inc
jbe
add
je
mov
push
push
subb
push
pop
bound
data16
cld
push
push
ret
incl
dec
fsubl
mov
pop
shl
ficoms
xor
add
dec
add
pop
popf
or
inc
add
movsl
adc
jl
pop
jns
inc
and
daa
sbb
and
je
mov
popf
cltd
pop
adc
push
cs
int3
push
jne
or
dec
cmc
or
cs
idiv
push
fcoml
add
add
daa
sarb
sub
jno
inc
clc
in
mov
mov
adc
xchg
add
push
cli
pop
inc
icebp
xlat
jnp
rcrb
das
inc
add
js
and
add
ret
outsb
add
inc
cmp
loope
push
pusha
push
add
mov
loopne
jl
add
xor
push
es
add
flds
add
xchg
jg
mov
mov
call
add
imul
mov
dec
add
loopne
scas
xchg
pop
out
mov
xor
inc
sbb
xadd
add
adc
add
jbe
add
sub
insl
in
push
ds
pop
in
jne
pusha
and
and
inc
xchg
dec
lret
faddl
ror
push
and
sub
pshufw
ret
mov
add
sub
pop
je
mov
cmp
mov
hlt
add
fdivrs
add
lock
xor
je
push
dec
rolb
cmp
ret
mov
pop
dec
sbb
xchg
rol
adc
or
loope
xchg
mov
add
mov
sub
pop
pop
fadds
or
add
or
push
sbb
jge
add
nop
loope
add
dec
js
je
jle
aas
fs
adcb
push
pop
mov
add
dec
insb
loope
mov
dec
pop
jae
jb
cmp
mov
nop
add
jg
call
add
pop
nop
pop
fimuls
dec
xor
jno
sarl
in
sbb
adcb
lret
dec
ljmp
std
leave
ss
sbbl
sbb
push
call
dec
mov
test
pop
pop
pushf
jno
sar
mov
int3
dec
cmp
cwtl
out
nop
jb
xor
inc
or
mov
mov
mov
or
ljmp
cld
je
adc
or
aad
mov
mov
jno
dec
add
cmp
test
add
mov
inc
mov
sbb
incl
and
sbb
jns
arpl
add
cli
adc
ljmp
xlat
sar
gs
out
cmpsl
mov
repz
pop
imul
add
inc
outsb
mov
iret
add
jbe
xchg
cmp
pop
cmp
add
push
add
std
shl
rol
inc
sbb
enter
adcb
mov
or
pop
xor
cmp
add
mov
pusha
lcall
push
xor
inc
lock
test
filds
cwtl
adc
sbb
data16
outsl
lods
xor
or
ljmp
dec
ficomps
lds
dec
add
mov
in
or
pop
cmp
rolb
cmpb
fcmovne
out
jl
add
enter
mov
add
test
fistl
xor
imul
clc
in
push
add
rorl
adc
stos
and
push
pop
jno
inc
inc
lock
jne
pop
or
xor
jns
lret
add
test
mov
push
lods
cmpsl
pop
jnp
mov
push
add
test
dec
inc
pop
aad
add
xor
jnp
add
adcb
add
mov
push
pop
ret
inc
dec
xor
push
or
jp
cmp
push
xor
hlt
add
nop
insb
lods
mov
jg
add
xlat
pop
shrb
sub
add
cmpsb
push
lret
dec
push
scas
sbb
dec
pusha
test
xor
andl
xor
call
dec
jne
popf
psubq
mov
push
xchg
adc
sbb
and
push
shr
add
imul
hlt
push
test
call
sbb
dec
popa
rol
add
and
and
rorb
data16
ffreep
mov
add
add
mov
movb
pop
adc
cmpsl
dec
sbb
inc
add
loop
add
cli
mov
add
movsl
test
mov
loope
enter
mov
adc
lods
sub
addb
js
push
or
orb
adc
pop
pop
xlat
gs
push
loopne
cltd
lret
pusha
add
je
sbb
inc
add
adc
dec
jbe
movsl
or
inc
pop
outsb
addb
mov
mov
mov
jmp
add
inc
xchg
push
pop
jne
add
sbb
or
push
shrb
les
dec
or
leave
test
mov
stos
cmp
adc
add
pop
and
add
cs
dec
sub
mov
adc
push
pop
call
out
add
or
and
or
popa
mov
push
add
inc
push
stos
push
lret
iret
add
sub
int
sbb
in
add
faddl
dec
push
add
ret
xor
push
xor
push
cmpsl
and
xlat
jns
adc
jecxz
add
lea
clc
ja
add
imul
jmp
aad
in
sub
and
add
adc
cmpl
mov
xchg
jg
inc
add
iret
push
add
stos
ret
or
add
insl
pop
sbb
leave
xchg
add
adc
nop
adcb
push
jge
sub
popa
nop
movsl
mov
jecxz
imul
push
add
adc
xor
pop
cmp
add
andb
add
inc
sbb
ret
and
add
add
and
stos
adcb
adc
pop
test
es
xchg
int
ljmp
movsl
faddl
adc
test
or
shl
sti
mov
aas
clc
rolb
xchg
mov
xchg
loopne
mov
or
push
pop
aas
lods
mov
add
das
mov
loopne
xor
jg
scas
add
rol
cmp
enter
push
ret
clc
xchg
cmpl
pop
incb
shlb
loopne
call
es
sub
mov
inc
orl
movzbl
roll
loopne
add
data16
stos
sub
xor
add
and
enter
jg
or
imul
cmp
cmp
mov
subl
dec
adc
rorb
loopne
les
jbe
dec
movsb
mov
ja
inc
xchg
push
lods
mov
mov
sahf
pop
subps
add
sub
cmp
add
or
sbb
sub
pop
dec
pusha
stos
xor
mov
mov
push
ret
cwtl
comiss
hlt
rclb
xchg
movsl
add
xor
add
aas
xchg
inc
push
jae
xor
in
add
jbe
pop
sbb
mov
clc
mov
dec
sar
or
dec
dec
add
nop
mov
mov
pop
in
jmp
adc
cmpsl
pop
or
test
clc
or
iret
inc
pop
andb
mov
sub
bound
sub
pop
movsl
insb
add
sbbl
lcall
in
adc
xchg
add
cmpsl
ret
addb
xor
outsb
jl
adc
adc
flds
cmpsb
or
call
jp
stos
pop
pop
imul
adc
and
mov
push
insl
xlat
add
dec
adc
mov
add
pop
sub
arpl
shlb
mov
cwtl
adc
lods
add
lock
lret
xor
mov
inc
pop
pop
add
add
mov
nop
insl
les
push
sahf
xor
and
mov
shlb
icebp
dec
add
add
pop
or
mov
dec
sbb
cmpsb
icebp
push
fs
rcrb
inc
mov
push
dec
in
and
sbbb
aam
or
sub
pop
daa
addr16
cmpxchg
jl
adc
inc
push
push
xchg
push
scas
adcl
test
pop
repz
xchg
or
jns
scas
add
fs
dec
iret
xchg
add
or
outsb
add
arpl
or
xor
push
and
enter
pop
and
and
or
dec
add
test
mov
push
imul
fmuls
or
or
roll
stos
sub
dec
push
xchg
jo
aas
sbb
adcb
xchg
insl
xor
notl
xor
enter
and
add
cmpsb
adc
cmp
cmovnp
fs
inc
sbb
add
addb
lock
add
outsb
jb
dec
aaa
lahf
test
jne
mov
test
notl
repz
push
ror
clc
in
stc
and
les
insb
push
je
bound
fimuls
pop
and
add
cmpsl
sbb
daa
adc
pop
gs
in
and
cs
rcrl
scas
cltd
dec
lock
add
push
insl
cmp
add
xchg
cmpsl
dec
cmp
lcall
add
sbbl
push
pop
pop
ljmp
or
pop
sub
call
dec
sbb
fdivp
inc
pusha
cmp
push
add
cmp
lea
xchg
adc
adc
dec
push
jne
pop
cwtl
popa
ja
movsb
cmpsl
xchg
mov
cmp
inc
lahf
pop
or
pop
jb
sub
add
or
movb
inc
sti
dec
jg
ret
cwtl
lret
add
sbb
dec
mov
cmp
and
jne
sub
fs
push
adc
ret
stos
imul
mov
lods
sahf
add
fsubs
outsl
addl
movsl
mov
push
sbb
sub
mov
push
jle
das
repz
lcall
ds
add
adc
xchg
add
sub
call
push
lret
jno
add
or
imul
add
ret
jnp
and
inc
pop
xor
fstpt
in
add
ret
dec
add
bound
adc
je
pop
push
hlt
xchg
and
cli
sar
cwtl
mov
cmp
push
int
or
add
and
jno
inc
psrld
fs
rclb
add
test
mov
rolb
out
call
ds
aam
mov
cmc
in
enter
inc
add
push
jbe
aas
add
popa
shlb
sahf
notl
test
pop
bound
fcos
mov
sahf
pop
xor
stos
shrl
xor
xchg
add
arpl
add
push
movsb
mov
jae
pop
add
bound
mov
xor
xor
jle
add
subl
sbb
mov
mov
jnp
add
aas
xchg
sub
imul
fs
push
dec
loope
and
or
add
fs
je
enter
xchg
xchg
inc
ficoml
orb
mov
xchg
test
and
movsb
shlb
mov
and
add
xchg
test
xor
or
mov
add
rorb
call
out
adc
ret
jmp
mov
and
lods
out
dec
mov
jp
pusha
jb
call
sbb
loope
rol
mov
test
fisubrs
jbe
stos
mov
mov
lds
add
jb
lock
sbb
fbld
jecxz
mov
ja
in
pop
fadds
mov
repz
add
mov
aas
xchg
add
add
stos
sti
add
dec
mov
gs
mov
dec
addb
pushf
loope
mov
xchg
out
push
adc
add
cmp
subl
aam
adc
scas
push
xor
lea
enter
add
sbb
pop
mov
xchg
cmp
popa
daa
cli
mov
movsb
and
adc
imul
movsl
adc
dec
sbb
pop
and
add
enter
add
dec
aad
inc
and
aas
inc
add
daa
pop
mov
cmp
add
imul
mov
pop
adc
imul
xor
data16
loop,pn
cmpsl
out
scas
filds
fidivl
mov
lea
mov
xchg
por
xor
add
mov
int
shll
cmpsl
iret
testl
sub
push
add
sbb
dec
cmp
xlat
adc
push
into
rcll
out
add
cltd
xor
sub
dec
fnstsw
pop
dec
mov
add
inc
imul
movsb
jg
jnp
sbb
or
test
aas
dec
pop
mov
sbb
sbb
xor
cmp
jmp
dec
and
fs
xchg
xchg
ds
leave
repz
std
mov
mov
rolb
fldl
mov
pop
loopne
popf
push
adc
xor
or
or
jge
sbb
xchg
cmp
dec
inc
sbb
push
cmpb
push
clc
fs
pop
call
xchg
gs
sahf
dec
push
cmp
xor
dec
or
sahf
and
or
mov
and
inc
add
fnstenv
jne
adc
mull
es
or
add
jp
pop
push
cmp
imul
xchg
and
adc
int3
mov
pushf
hlt
add
addr16
pop
or
mov
jno
add
icebp
cmp
mov
xchg
jo
inc
push
inc
outsb
add
inc
jle
popf
sub
int3
shrb
add
inc
arpl
add
dec
or
lret
pop
or
push
pop
aad
jns
rclb
sub
mov
shrd
mov
fs
pop
jg
xchg
or
add
pop
repz
add
dec
adc
add
push
cmpsl
add
jae
out
ret
mov
lea
stos
in
mov
xchg
pop
pop
sti
push
mul
jbe
jno
in
and
mov
cs
lock
movsl
dec
cmpsl
aam
add
enter
mov
sub
sbb
xchg
add
adc
pop
dec
clc
inc
insl
pop
emms
xor
mov
test
adc
arpl
and
jge
data16
cmp
pop
aas
out
add
pop
dec
push
and
mov
outsb
hlt
add
loop
js
cmp
imul
in
ja
dec
jge
jl
inc
nop
dec
add
outsb
lock
iret
ret
loopne
mov
addb
insb
shlb
pusha
push
add
jae
imul
fs
and
adc
adc
jae
pop
ja
outsl
gs
sbb
adc
add
jb
pusha
fsubs
add
cmp
inc
and
cmp
push
jno
flds
iret
pushf
je
ror
negl
clc
dec
push
mov
add
push
or
add
jae
arpl
add
sub
inc
push
push
add
jo
arpl
mov
inc
xchg
addr16
popa
clc
xchg
push
sub
je
add
push
jno
movsl
xorb
outsb
imul
into
scas
add
and
dec
add
imul
shr
xchg
ds
add
jl
mov
loope
xor
loop
inc
adc
add
je
push
addr16
jbe
mov
ja
pusha
in
sub
jge
ljmp
subl
cmpsl
jmp
push
out
jbe
in
inc
jl
add
js
movsl
pusha
sub
cmpb
ja
arpl
xchg
jno
add
rorl
lret
or
jnp
ret
push
stc
addb
adc
jne
mov
push
mov
push
fs
mov
test
mov
adc
cmp
inc
add
xchg
and
fildl
addl
test
int3
daa
lret
js
pop
adc
hlt
and
add
cmpb
push
js
add
inc
fs
inc
jecxz
rol
mov
test
out
cs
pop
xchg
rcrb
rol
nop
or
inc
add
repnz
repz
add
test
jle
testl
shr
add
stos
enter
sbb
dec
imul
add
push
sti
bound
add
in
mov
data16
push
xor
jge
mov
ret
testl
call
mov
out
pop
js
mov
push
add
inc
add
aam
jo
jmp
mov
xchg
pop
scas
clc
faddl
loop
out
and
mov
adc
fs
push
ret
push
cmp
jmp
pop
in
mov
paddd
add
mov
and
push
or
lret
adc
add
mov
rcll
push
xor
and
popf
add
icebp
cmp
hlt
rorl
push
mov
sbb
xor
fisubs
add
adc
adc
push
and
out
outsb
out
and
inc
lret
pop
jge
add
shll
repz
and
mov
pop
stos
push
add
inc
icebp
ss
outsb
add
mov
and
push
add
xchg
push
lahf
rcrb
sbb
sbb
add
push
fsubl
sub
inc
xor
call
inc
xor
sub
out
xchg
add
cmpsl
mov
xchg
lret
test
push
and
popf
pushf
adc
lea
mov
xor
mov
call
cmp
and
insb
fiadds
jo
je
add
mov
cli
call
mov
xchg
adc
push
daa
mov
dec
and
decb
and
cli
int
out
sbb
mov
arpl
mov
xchg
ret
fldl
dec
cmpsb
loop
push
movsb
push
and
leave
pop
fiadds
pop
lds
std
dec
cltd
lods
test
or
cwtl
shl
jg
add
aad
dec
mov
out
arpl
pop
push
insl
xlat
mov
push
pop
inc
mov
and
pusha
mov
push
jg
add
call
or
shrb
mov
subb
scas
and
add
call
pop
cmpsb
mov
add
jp
xchg
fldenv
les
mov
mov
push
lods
cli
je
inc
cld
sbb
cmpsl
psrlw
push
push
dec
lcall
leave
iret
or
push
adc
inc
add
loop
aas
adc
stc
popa
or
in
sub
shll
jle
add
cmp
mov
lds
mov
and
mov
add
inc
ficoms
mov
add
fmul
or
add
repz
shlb
add
cmp
addl
mov
movl
jp
pop
aas
lea
cmp
je
scas
adc
add
dec
pop
adc
mov
shlb
cmp
je
add
scas
xlat
add
jle
test
sub
insb
imul
mov
sbb
movsb
clc
and
pusha
and
add
in
and
arpl
add
mov
add
decl
addb
lods
rcr
jecxz
popf
xor
and
fdivs
jne
pop
pop
pusha
test
je
xor
repnz
dec
add
mov
ret
pop
cmc
push
add
in
mov
add
push
add
push
xchg
lods
cmp
pop
in
aas
cmpb
in
add
push
or
pop
ljmp
jmp
jge
mov
lea
push
cmp
xchg
clc
add
sub
cmp
mov
add
push
movsb
cmp
mov
jge
clc
xchg
sub
repnz
mov
lea
inc
outsl
test
add
pop
mov
pusha
insl
add
pop
mov
cmp
jae
movsl
mov
add
add
push
xchg
jb
mov
or
sbb
add
mov
add
das
mov
lret
pusha
ret
shl
lock
stc
add
std
xchg
sbb
or
int3
sbb
xchg
push
and
cmp
cmp
lock
imulb
inc
hlt
jns
pushf
adcb
inc
imul
test
adcb
add
scas
pusha
mov
lds
fs
shrb
push
push
push
and
fsubrs
testl
jb
mov
cmp
out
psubsw
or
shll
fadd
pop
jae
mov
mov
das
jge
loop
and
adcb
pop
shl
rcrb
rorl
lods
jne
out
inc
add
test
adc
or
out
je
dec
fbld
lcall
add
shl
aas
xlat
xchg
or
fsubrs
add
shlb
and
dec
inc
jmp
aad
or
adc
popf
nop
nop
stc
dec
add
cmp
scas
movntq
or
leave
je
movsb
stos
xchg
repnz
mov
cmp
add
pop
test
inc
lea
sub
pop
sbb
fcmovb
add
cmc
jecxz
xor
aas
mov
loopne
add
cmp
sbb
xchg
call
adc
imul
inc
mov
pop
push
inc
test
push
incl
sub
cmp
mov
add
xlat
pop
inc
jo
xchg
fwait
push
cmp
test
cs
push
dec
add
insb
jo
test
mov
mov
add
dec
movb
add
cmp
scas
das
adc
mov
mov
jae
add
ja
adc
add
pop
leave
mov
clc
dec
roll
add
add
bound
mov
xor
mov
cld
testl
add
dec
aad
and
call
mov
imul
jae
add
cmpb
je
mov
js
and
mov
push
and
sahf
shlb
mov
lock
pop
in
int3
and
in
pop
jge
mov
push
push
rol
add
inc
popa
arpl
cmp
and
mov
test
ret
jns
add
dec
dec
adc
xchg
adc
ret
mov
ja
dec
addl
push
or
fchs
xor
fs
cwtl
add
xchg
cmc
nop
scas
ja
or
push
outsb
xchg
pusha
imul
push
jge
jne
push
icebp
lods
stos
or
lret
jnp
xchg
add
inc
lds
jg
xchg
subl
jl
ja
add
mov
imull
adc
sbb
adc
cltd
or
add
nop
push
sbb
adc
sub
push
ficoms
sbb
add
xor
mov
add
add
add
sahf
out
add
ret
sti
loopne
mov
mov
fbstp
mov
jge
lds
aaa
pop
outsb
add
shr
add
sbb
sub
xchg
shr
fildl
add
jmp
lea
pop
jge
test
clc
subb
adc
iret
add
jae
push
add
and
in
sbb
fiaddl
jbe
sub
outsb
fisttpl
add
fiaddl
inc
mov
jb
sbb
or
dec
add
mov
mov
xor
out
idivb
jne
cmpb
mov
lods
pushf
jp
cmp
jmp
lea
xor
cmpb
pop
es
arpl
cmpsb
int3
adc
add
jne
xchg
jle
adc
inc
cwtl
pop
mov
mov
and
lea
jne
xchg
jle
add
je
popa
jnp
inc
test
inc
fs
add
ja
xor
mov
cmp
push
xchg
shlb
pop
popf
jg
shlb
sbb
cmp
call
lea
cmc
adc
dec
shll
add
add
sbb
icebp
add
lds
cmp
add
inc
test
jbe
mov
mov
nop
leave
and
ss
iret
xor
enter
pushf
pop
push
lret
or
insb
add
dec
fdivrs
add
xlat
out
test
push
jb
inc
xchg
lds
lcall
xor
test
imul
inc
pop
push
cmp
add
mov
lret
sbb
xchg
dec
fisttpll
and
aam
jp
add
add
mov
mov
and
push
add
mov
pop
add
and
arpl
adc
push
lret
adc
es
add
ljmp
pop
or
rcrb
imul
movb
incl
test
sub
adcb
test
inc
adc
xchg
add
fisttps
rolb
jb
inc
xor
in
adc
insb
mov
popa
push
ss
lods
push
sbb
push
andb
add
xlat
nop
adc
lock
lock
and
fwait
sbb
push
ret
loope
sub
jmp
hlt
repz
push
push
sub
imul
aam
pusha
clts
pop
pop
pop
and
dec
cwtl
sbb
cs
nop
sbb
or
jle
jp
inc
roll
loopne
ret
inc
or
mov
adc
fisttpl
ja
add
in
and
and
add
js
mov
mov
xchg
nop
mov
add
fldl
pop
je
jle
test
scas
xchg
mov
cltd
mov
sbb
or
push
ret
inc
out
sbb
xor
popf
push
inc
pop
add
xor
int3
mov
xor
lock
lds
add
cmp
cmovg
sub
mov
push
fdivs
outsl
shll
lret
call
mov
adc
addr16
and
movsl
clc
aam
cmpl
mov
stc
sti
dec
cmp
xorb
nop
rolb
pop
mov
addb
orb
adc
test
inc
into
inc
test
sbb
sub
mov
xchg
push
jae
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
ds
dec
pop
adc
dec
cmp
mov
add
mov
mov
lods
call
dec
movsb
push
mov
clc
dec
sbb
pop
adcl
int
popf
test
dec
mov
jne
pop
inc
xchg
daa
flds
dec
add
and
pop
bnd
cmp
mov
loopne
stos
movl
test
scas
add
push
add
in
xchg
cld
xor
cwtl
lods
mov
jo
add
loop
pop
or
push
cld
add
cli
pop
cld
or
add
loop
jmp
subl
les
pop
add
ss
and
dec
pop
cmp
int
dec
add
pop
decl
mov
ret
push
fbld
in
push
add
xor
sbb
mov
popw
dec
pushf
fucom
push
or
test
and
loopne
mov
push
loope
js
cmp
sbbl
push
and
adc
add
inc
xor
sub
pusha
mov
cmp
ja
lea
loopne
je
xchg
and
sub
test
lock
pop
rorb
sub
lret
filds
sub
add
movzbl
iret
repz
popa
push
add
pop
add
rcrb
add
adcb
jmp
cwtl
or
sub
push
int3
jecxz
nop
arpl
dec
sbb
add
shrd
add
xor
fildl
or
push
adc
add
add
add
jne
movlps
sub
fdivrs
or
cmpsl
add
clc
pop
push
repnz
loopne
cmc
and
scas
das
aas
sbb
orb
test
mov
ljmp
outsb
imul
sub
xor
dec
cltd
inc
add
push
imul
xor
add
add
std
jae
mov
cmp
jo
out
add
or
cli
cmp
sub
add
xchg
cli
test
pop
dec
cmp
lahf
xlat
cmp
int3
hlt
mov
add
pop
pop
sub
ds
fstp
lods
call
inc
mov
testb
mov
das
mov
or
ljmp
push
dec
lret
call
adc
lock
jle
icebp
jne
in
jnp
int3
add
fs
aad
inc
xchg
test
rolb
jmp
jo
xlat
ret
sbb
pop
mov
test
sbb
add
or
xor
add
dec
movsl
rcll
js
xor
test
shll
inc
mov
sbbl
pop
mov
xchg
pop
and
iret
add
mov
push
dec
or
cld
sbb
mov
add
xchg
dec
mov
jle
addb
pop
imul
lret
xchg
mov
fisttps
mov
cmp
fildl
clc
je
sub
pop
add
dec
adc
cmpl
das
mov
clc
popl
pop
cmp
je
lods
inc
push
add
mov
adc
or
rcrl
testl
int3
aam
xchg
push
mov
pop
or
push
add
and
mov
inc
add
ds
inc
push
xor
and
dec
pop
int
mov
enter
mov
jne
es
xor
pop
add
sub
pusha
pop
or
xor
testl
and
mov
mov
sbbb
ret
into
cwtl
test
sbb
push
mov
mov
xor
jne
pop
add
and
inc
or
js
or
xor
adc
sarb
sub
subb
push
xor
sbb
mov
mov
add
es
dec
or
or
mov
popf
js
xor
in
dec
mov
sub
xor
cmp
add
stos
rcrl
dec
in
pop
mov
adc
shll
xor
add
inc
cmc
sarb
inc
add
int3
movsb
lock
add
add
mov
cmp
xorb
popf
fildll
jp
jnp
jl
add
movsb
jns
clc
cmpsl
inc
push
lds
out
aad
push
xor
and
inc
adc
inc
fldl
push
inc
inc
loopne
sahf
xchg
cmpsb
add
mov
or
adcb
aam
adc
dec
sbb
jmp
int
xor
add
ja
jmp
divl
cmp
pusha
lcall
fadds
call
jno
or
icebp
and
lahf
fists
cmp
jb
shlb
xor
sarl
arpl
cwtl
inc
push
add
mov
ret
or
push
mov
hlt
lret
add
mov
mov
leave
jns
add
bnd
pop
pop
pop
add
and
andb
jmp
dec
xchg
xchg
clc
femms
xchg
stos
rcrb
pop
leave
fs
inc
lods
roll
inc
adc
push
shlb
loop
daa
lea
roll
inc
sub
xchg
push
nop
mov
add
subl
add
add
add
mov
into
push
dec
adc
sahf
lods
adc
sub
add
les
fmuls
xor
push
dec
mov
imul
jne
adc
fsubl
das
cwtl
outsl
or
jg
jo
fsubr
add
addl
adc
shrb
insl
aas
addb
addr16
loope
cmp
int3
add
daa
xchg
movsb
push
inc
lods
add
sbb
add
jo
and
ja
aaa
mov
cwtl
test
sbb
or
add
adcb
mov
pusha
mov
fsubl
ljmp
dec
nop
sub
adc
sti
cmp
or
push
hlt
inc
lea
loope
stc
push
imul
ror
add
cmp
push
xor
fmull
sbb
dec
add
xchg
add
jge
jne
cmp
inc
cmc
jle
mov
or
popa
cmp
btc
in
sbb
mov
popa
cmpsl
aam
jno
pop
mov
pushl
adc
push
shl
add
xlat
bound
dec
scas
push
mov
jb
loopne
pop
hlt
out
pop
mov
add
dec
jae
mov
bound
jns
jp
jb
clc
aam
testb
addr16
xor
jno,pn
add
mov
repnz
pop
push
lea
sbb
push
popa
out
int3
sti
inc
add
stos
xchg
push
cltd
dec
insl
popa
jle
add
jg
lret
add
push
ss
sbbl
test
cmp
inc
or
push
dec
add
decl
repz
add
rcrb
adcl
cmpsb
sub
jo
cli
nop
cs
xchg
push
add
ja
or
cmp
sub
mov
add
xlat
inc
jns
adc
or
rolb
jle
ljmp
jo
add
sub
or
inc
mov
inc
add
inc
add
xor
push
add
sub
add
int
add
div
rolb
adc
jmp
mov
cltd
mov
add
and
add
xor
pop
or
jg
add
rorb
add
sarl
out
jo
rol
or
mov
lret
jbe
xchg
add
jno
mov
test
out
incl
sub
mov
sbb
les
cld
jle
loope
aad
hlt
add
ret
mov
les
mov
sub
xchg
push
or
cld
dec
adc
inc
mov
out
jne
into
cmp
fstps
cmp
adc
inc
sahf
sub
dec
add
jae
mov
sarl
addl
fcompl
push
jp
repz
add
jmp
fiaddl
sbb
and
cmp
loop
add
ljmp
or
jbe
mov
pop
je
aam
xchg
ss
xor
or
out
test
cmc
test
jl
pop
cmp
sub
push
lea
pop
add
adc
mov
xchg
stos
add
adc
jno
mov
push
jg
mov
or
in
dec
insb
leave
outsl
add
mov
mov
divb
jo
push
pusha
aam
sahf
cmp
dec
orb
pop
add
movsl
mov
and
adc
loopne
or
add
xor
pop
dec
xchg
pop
shlb
fistps
add
lahf
xchg
mov
out
mov
inc
ret
ljmp
outsl
cltd
push
cmpsl
sub
add
cmpsb
mov
add
dec
and
mov
or
jl
in
jns
jl
jge
test
pop
and
push
jb
add
int3
inc
and
pop
add
or
push
sbb
add
pop
inc
jb
push
adc
rorb
aas
sub
mov
push
outsb
mov
add
adc
call
inc
mov
or
hlt
inc
decb
out
sbbb
cmp
inc
mov
inc
add
mov
push
push
or
cmp
adc
fstpl
aam
lods
popl
dec
pop
lret
or
and
mov
mov
pop
xor
xorb
ss
outsl
dec
add
dec
outsb
je
and
testl
push
and
cmp
arpl
int3
int
sahf
dec
popa
outsl
and
sti
test
jmp
les
cmpl
int
sub
add
je
movsb
add
or
dec
jne
jmp
outsb
fcoms
pop
mov
fiaddl
add
iret
xor
pop
int
add
out
pop
mov
xchg
adc
fs
xlat
cmp
addl
jge
movsl
push
ret
test
mov
push
add
and
and
pop
push
clc
or
lret
add
xlat
shrl
stc
xor
pop
inc
dec
jne
sbb
ret
sub
add
inc
xchg
inc
nop
pop
add
jae
push
and
sbb
mov
jg
jge
push
arpl
jmp
lock
lods
roll
mov
cltd
dec
add
dec
les
popa
dec
addb
jge
fsubr
add
sti
sbb
rcrl
sbb
pusha
xor
insb
add
ret
ffreep
add
scas
loop
and
jl
and
mov
add
mov
sbb
shr
sbb
or
add
ja
cmp
and
lcall
add
or
inc
repz
sbb
shrl
jb
or
loop
add
or
sub
enter
adc
add
mov
mov
pop
shlb
and
add
dec
add
push
xor
shll
mov
add
xchg
push
loopne
jne
ds
enter
pop
sub
fcompl
pop
add
lea
add
scas
ds
shr
mov
movsb
push
pop
imulb
imul
in
add
jae
addr16
rorb
or
ss
xorl
mov
lahf
rolb
sbb
mov
inc
mov
sahf
fdivrl
cmpsb
cmp
fidivl
add
int
sub
call
fsubrl
test
out
mov
in
xor
pusha
popf
hlt
test
add
sub
or
add
jl
aas
std
fs
dec
add
xchg
ret
mov
push
cmp
adc
adcl
xor
dec
inc
fadds
mov
mov
add
push
loope
jne
push
bound
mov
jmp
inc
pop
les
aam
dec
nop
arpl
add
daa
jb
push
sub
loope
add
insl
icebp
push
or
mov
loopne
pop
cld
leave
add
jmp
stc
add
push
shlb
jo
pushf
sbbb
loopne
mov
lahf
leave
lret
icebp
adc
add
sub
pop
cmp
mov
xor
xchg
leave
xchg
add
or
xchg
les
mov
int3
cmp
lret
add
xchg
ljmp
test
sbb
pop
inc
neg
push
add
aaa
push
add
add
sub
and
xchg
fcompl
rcrl
loopne
cs
sbb
sbb
sbb
hlt
mov
push
leave
pop
add
sahf
je
jns
js
pop
sub
lods
adc
jo
mov
pop
add
xchg
dec
adc
mov
mov
push
por
add
sar
add
pop
xor
mov
data16
iret
push
lea
out
lock
pop
ja
nop
mov
fs
jmp
clc
pop
add
mov
sbb
sar
iret
or
fsubrs
or
std
jp
shrb
aaa
icebp
bound
and
inc
push
hlt
lock
add
je
ret
mov
ret
idiv
add
fiaddl
inc
cmp
and
adc
cmpb
cli
xchg
sbb
and
add
mov
push
xchg
add
ljmp
add
cmp
mov
fcompl
and
dec
call
enter
decl
sub
notl
mov
jbe
and
in
insb
and
mov
xchg
cmc
ret
add
sti
or
xor
push
and
xor
movl
jmp
pop
or
inc
jne
inc
fisttpl
mov
decl
or
in
xor
xchg
and
add
je
sub
add
fs
xor
pop
scas
pop
jns
mov
mov
imul
add
add
testl
jne
add
dec
add
add
xchg
adc
lss
xchg
lock
movsl
lods
out
lahf
cvtps2pi
pushf
movsl
mov
add
mov
jle
lods
repnz
jo
add
and
je
or
fadds
jle
pop
add
inc
cld
dec
jg
cmc
jb
sub
sbb
pop
mov
push
dec
jg
mov
addb
repnz
add
push
inc
adc
out
inc
mov
pop
xor
sub
loop
movsl
faddl
dec
lahf
or
cmpsb
sbb
inc
xor
ss
jg
ficoms
into
push
fldl
dec
cmc
or
in
pop
sbb
shl
cmp
pop
add
add
push
ret
leave
loopne
xchg
jmp
out
pop
jns
add
pop
xchg
ds
add
dec
xchg
hlt
mov
xchg
inc
adc
dec
in
add
pop
mov
or
imul
nop
lods
sti
add
push
mov
orb
mov
jns
sbbl
mov
adc
addb
aaa
fwait
push
es
in
rolb
or
mov
adc
and
sub
add
cmp
add
xchg
cmp
jne
clc
inc
push
repz
inc
sbb
out
mov
add
mov
xchg
in
cmp
mov
cmpsl
sahf
sti
popf
cmp
pusha
cld
mov
nop
push
jmp
jno
pop
popa
add
out
repnz
out
push
stos
in
lret
or
add
and
out
xchg
ds
lods
add
aaa
orb
cwtl
jns
outsb
add
aam
daa
jmp
mov
nop
hlt
mov
xchg
movb
ret
cld
sbb
push
sub
shr
jle
dec
cmp
adc
inc
or
xchg
ds
es
add
out
std
jg
pop
sbb
add
mov
popa
and
mov
xchg
cmc
push
push
cmp
insb
mov
push
xchg
sahf
imul
mov
testb
int3
es
out
mov
repz
push
aaa
fimuls
mov
pop
ffree
jle
add
cld
pop
fwait
mov
mov
aaa
sarb
pop
cltd
idivl
pusha
add
fs
jmp
in
ss
jae
jo
lret
mov
mov
add
push
fmuls
ljmp
xor
call
add
push
mov
push
pusha
cltd
and
shr
add
popl
inc
pop
sbb
imul
call
cmc
movsl
sbb
xor
cmp
sub
icebp
mov
xchg
andb
cmp
inc
jo
push
mov
pop
lcall
rol
repnz
pusha
xor
cwtl
jp
pop
aaa
sbbb
test
xor
pop
call
jle
enter
pop
test
arpl
rclb
nop
and
enter
les
or
or
stos
xor
sub
lcall
inc
dec
lret
mov
movsl
pusha
int3
push
mov
cmp
push
inc
mov
and
push
dec
add
add
loopne
xor
mov
sbb
sub
bound
fstpl
adc
pop
sub
mov
pop
pop
nop
addb
fistps
and
aas
lock
xor
sbb
hlt
lods
mov
fs
testl
xlat
sbb
add
pop
fnstcw
movsl
data16
add
sbb
sarl
add
fwait
enter
xor
sbb
adcl
add
inc
mov
iret
repnz
dec
add
ret
aam
jns
mov
call
mov
inc
jecxz
je
fldl
adc
call
mov
inc
out
sbbb
and
jns
adc
mov
push
lods
movb
movsb
ljmp
outsl
testl
xchg
aaa
stos
push
inc
mov
dec
sahf
push
pop
xorb
loopne
cvtdq2ps
popf
push
dec
movsl
add
pop
imul
cs
cltd
subl
outsb
pop
mov
and
cmp
push
add
das
pop
xorb
aas
inc
dec
loope
sbb
or
add
xchg
and
je
sub
leave
add
in
loop
repz
sbb
mov
mov
in
test
jb
cmp
stos
repz
add
push
or
sub
pop
mov
insl
pop
movsb
and
add
inc
sbb
push
mov
out
dec
add
je
popa
jo
push
push
or
rolb
stc
outsl
add
sbb
jne
sub
dec
add
aas
or
adc
add
add
pop
int3
cmp
cld
cmp
push
inc
add
je
xchg
or
mov
add
mov
call
push
add
mov
loop
jle
movl
or
or
sub
les
pushf
and
testl
sub
mov
inc
test
mov
add
push
scas
pandn
ss
sub
loop
inc
lock
loope
mov
rorl
and
fildl
lods
jo
jp
insl
mov
mov
cli
icebp
sbb
or
add
in
add
shr
hlt
and
inc
add
lock
add
mov
in
bswap
aam
xchg
add
pop
adc
mov
cmp
subb
add
add
movsb
lock
outsl
mov
add
aad
in
jb
add
sub
arpl
jb
xor
push
jne
add
inc
sbb
popa
call
jno
subb
test
push
faddl
test
mov
inc
fsubrs
and
in
inc
cld
aam
pop
into
adc
in
shr
add
daa
shr
add
aad
hlt
or
adc
pop
pop
popf
cmp
sahf
fimull
js
add
subb
mov
mov
jne
jecxz
push
adc
add
lcall
pop
mov
in
movsb
imul
mov
mov
mov
fxch
or
ret
add
test
push
ret
pop
mov
inc
adc
mov
or
push
add
inc
xchg
push
sbb
adc
lcall
cmpl
inc
sub
push
mov
dec
out
loopne
lcall
add
dec
stos
add
hlt
lock
mov
rorl
fsubr
xchg
mov
loopne
stos
aaa
or
pop
dec
jo
insb
cmp
rolb
pop
rcr
addr16
mov
pop
jae
push
lock
jns
adc
inc
mov
sbb
or
daa
xor
clc
loope
popa
add
imul
pop
add
movsl
sti
mov
dec
ffree
or
and
daa
mov
xchg
pop
and
xor
dec
pop
sti
loopne
fisttps
push
add
loope
ret
xchg
out
int
jo
pop
je
add
sbb
stc
hlt
pop
stos
pop
imulb
xorl
frstor
pop
add
scas
int3
clc
mov
and
cli
std
dec
cmpsb
mov
push
adc
ret
mov
add
push
adc
iret
test
xor
es
jge
aas
mov
mov
subl
mov
rorb
loop
movswl
mov
xor
dec
add
inc
clc
sti
add
or
pushf
les
sahf
and
adc
in
xlat
jmp
cmpsl
sub
dec
test
arpl
pop
cli
aaa
add
addb
pusha
or
mov
sbb
add
mov
nop
jle
and
int
xchg
mov
mov
std
mov
pusha
test
icebp
adc
or
adc
insb
gs
cmp
aad
jl
sbb
je
push
adc
test
cmp
ljmp
push
clc
dec
adcl
add
push
cli
pop
outsb
mov
dec
xchg
andb
sub
subb
cwtl
out
pop
mov
add
pop
and
mov
pop
ss
pop
or
xchg
add
add
in
rorb
inc
pop
js
add
pop
cmp
push
push
jmp
inc
loopne
xor
cmpsb
jo
pusha
add
out
roll
add
and
mov
dec
loope
cs
daa
cld
xor
add
or
mov
lds
addb
jns
push
loopne
js
add
inc
loope
add
inc
mov
out
arpl
lods
test
add
stos
cwtl
sbbl
inc
or
outsl
lock
fs
jne
jmp
dec
cmp
mov
jnp
test
dec
imul
add
jecxz
ja
add
jne
jnp
je,pn
xchg
sbb
adc
push
inc
sbb
mov
or
pushl
rolb
loopne
jb
xor
xchg
add
sub
sbb
cmp
sti
sbb
inc
or
adc
lcall
and
xor
and
sub
orl
mov
add
mov
gs
das
jle
xor
push
and
mov
sub
or
dec
push
add
mov
fsubrl
call
adc
cmp
jle
cmp
fadds
sahf
enter
xchg
cmpsb
xor
push
pusha
xor
fcoml
add
and
int3
neg
add
pop
das
pop
pop
dec
jge
add
pmullw
mov
jmp
popa
or
lds
ret
cmp
pop
lea
cmpsl
shlb
add
popa
sbb
add
dec
adc
mov
xchg
adc
add
je
clc
xchg
aas
iret
pop
add
push
pop
jb
hlt
add
cmp
sub
xor
sub
cmp
daa
push
add
adc
jo
pop
sbb
in
test
inc
les
xor
cld
cmpb
lret
add
addr16
jmp
loopne
pop
bound
lret
rcrl
pop
stc
fcompl
dec
add
in
xchg
divl
je
xchg
inc
or
fdivl
xchg
jne
xor
cwtl
sbb
imul
xchg
fsubrs
sahf
sbb
jmp
sbb
dec
xchg
and
sub
push
add
cmc
decl
cmp
jmp
ror
jne
inc
add
add
xchg
mov
dec
sbb
add
or
pop
popf
xchg
mov
jg
fisttpl
pop
add
fcomps
daa
xchg
ljmp
int
mov
xchg
aad
int3
cmpsb
enter
sbb
inc
push
inc
push
or
inc
call
mov
push
push
fs
dec
je
lret
push
inc
popa
pop
inc
pop
jl
pop
movlps
adc
inc
outsb
dec
jne
sbb
ja
pop
pop
pop
sub
dec
and
inc
xchg
xor
negl
dec
xor
outsl
dec
or
mov
pop
notb
xchg
and
push
add
add
sub
cmp
inc
out
lret
push
pop
add
dec
adc
mov
clc
mov
pop
sub
cmp
int
mov
add
leave
dec
and
sbb
pop
mov
rcrb
add
idivb
jne
mov
sub
push
stc
pmaxsw
cld
daa
and
arpl
lea
jnp
jno
or
popa
or
fsub
data16
mov
or
das
add
sbb
xchg
insl
jne
jmp
sbb
add
shll
mov
adc
mov
insl
pop
sarl
cmp
add
push
orb
or
sbb
push
verw
adc
pop
sbb
sbb
and
and
and
es
loopne
add
sub
xchg
jo
add
cmp
add
clc
dec
inc
icebp
dec
mov
rorb
add
and
jb
cmp
and
cmp
adc
add
pop
inc
pop
adc
dec
rolb
sub
xor
add
jnp
jge
jns
add
fstl
repz
setno
stc
add
xchg
sti
std
pop
pop
jne
hlt
sbb
and
jmp
add
repnz
mov
test
stos
stos
lods
cmp
hlt
mov
mov
add
mov
sarb
ret
add
enter
lret
int3
int
push
iret
rcl
rolb
rcl
aad
xlat
add
fcmovnu
in
pop
fstp
jo
push
loope
jecxz
in
add
jmp
in
enter
add
repnz
negb
pop
sti
cld
std
jmp
add
add
add
testb
or
or
sbb
sbb
sbb
inc
adc
enter
add
and
stos
std
pop
sbbb
xchg
jg
add
cmpb
pop
inc
add
les
xorl
xchg
add
nop
xchg
xchg
jns
add
cltd
test
lahf
lock
out
xchg
movsl
add
add
inc
call
mov
ret
lds
lret
adc
sbb
rcl
mov
fadd
loopne
lds
roll
in
out
add
div
ljmp
clc
add
stc
incl
push
bound
add
or
or
loope
or
add
cmp
add
shrb
loopne
jo
add
test
mov
lea
xchg
xchg
sbbl
inc
movsb
dec
loopne
add
mov
ret
xchg
rclb
jo
add
call
mov
add
hlt
and
stc
cmp
or
or
pusha
cld
lods
call
scas
aas
incb
ror
mov
test
jle
cmp
mov
mov
mov
mov
inc
mov
test
pop
xor
loopne
add
dec
outsl
mov
xor
sbb
cmp
cmp
pop
rolb
scas
loop
outsl
loopne
or
mov
add
jno
xor
xchg
fisubl
adc
xchg
inc
rolb
loopne
jl
pandn
cwtl
mov
add
sub
fadds
enter
jb
dec
xlat
aad
jo
add
test
sub
icebp
mov
mov
add
scas
pop
adc
enter
mov
adc
add
popf
add
into
test
or
adc
xchg
xchg
mov
imul
out
xor
hlt
mov
popa
pusha
addr16
add
je
roll
ss
aam
push
dec
jmp
sub
idivb
inc
scas
push
pop
inc
mov
add
sbb
jns
add
movl
leave
and
addr16
movsl
xlat
cmp
cmpsb
add
sub
xor
daa
fmuls
ljmp
push
inc
pop
or
add
pop
cmp
jl
and
leave
insl
mov
aas
ja
dec
sbb
cld
shlb
xchg
inc
sub
mov
lods
inc
and
add
cmp
and
sub
add
ss
push
push
push
push
or
add
pop
in
jge
adc
addr16
jns
sub
movsl
add
test
in
sbb
pushf
push
jbe
dec
out
add
xor
adc
xchg
jl
sbb
nop
xor
je
cmp
jo
dec
push
loop
add
jle
inc
fdiv
add
and
jo
add
cmpsl
fiaddl
aaa
or
lock
add
movb
push
imul
sbb
dec
or
pop
adc
and
out
imul
and
inc
jge
cwtl
jmp
orb
and
push
add
in
add
mov
aad
popa
fistpll
cmp
push
or
nop
lret
cbtw
pop
add
sub
and
xchg
fs
mov
add
cmp
jo
push
rclb
push
jmp
enter
inc
movsb
adc
pop
jae
add
push
mov
add
bswap
dec
dec
sbb
pop
mov
cs
les
cmp
daa
xorb
xor
mov
pop
pop
jno
shrb
icebp
jle
mov
movups
das
in
nop
push
xchg
pop
sbb
jo
xchg
or
inc
movl
pop
dec
push
inc
add
sar
mov
xchg
adc
stos
cmp
sbb
mov
jo
add
push
mov
push
pop
add
and
add
fwait
cmp
shlb
int3
add
popf
push
mov
insb
xchg
sub
faddl
push
nop
movsl
sub
push
lret
loop
sbb
and
pop
or
test
add
push
xchg
add
mov
inc
add
jbe
add
jmp
sub
dec
inc
in
push
sbb
sub
or
sbb
je
rcrb
add
subb
cs
sbb
adc
mov
sub
inc
clc
and
add
jg
rcll
xchg
dec
pop
xor
ljmp
mov
add
xor
add
fisubs
out
js
das
addl
adc
std
call
pop
add
popf
loope
or
cmp
sub
jle
pop
lcall
mov
mov
adc
mov
test
add
xchg
xor
stos
ret
jo
cwtl
stc
add
test
pop
call
mov
lcall
movsb
jg
lods
sbb
xorb
cmp
negb
add
repnz
xchg
add
add
push
add
mov
inc
mov
clc
add
lret
data16
or
ljmp
rolb
bound
lods
mov
in
pop
cmp
test
add
xchg
mov
in
or
sahf
pop
int3
and
fadd
xchg
mov
cmpsl
addb
sbb
int
nop
sbb
mov
addb
cmp
mov
jmp
and
sbb
mov
add
loopne
add
rcr
sub
xchg
popa
cld
add
add
push
and
ja
sbb
fyl2x
add
sbb
das
and
out
xchg
add
xchg
sti
lods
pushf
jo
add
sbb
fimull
add
popl
mov
movsl
aaa
jno
cmp
add
pop
jp
mov
add
loope
ficoml
scas
jo
add
in
adc
imul
cmp
mov
and
int
jno
pop
xor
sbb
cmc
add
push
add
ja
cmp
push
cltd
addr16
icebp
add
mov
mov
cmp
test
fs
scas
add
or
in
fsub
push
mov
lret
push
add
add
cltd
push
add
adc
test
out
and
jb
inc
dec
pop
xor
mov
pop
scas
outsl
insb
adc
jo
dec
stos
fadds
and
popf
push
add
inc
sbb
es
jl
fdivrl
add
adc
ds
push
cmp
add
aas
lea
jle
jb
add
and
add
mov
add
push
or
or
mov
add
add
add
mov
sbb
jg
add
in
dec
sbb
stc
filds
jns
add
mov
xchg
sub
or
movb
jno
adc
mov
push
jmp
lds
add
mov
ret
cmp
xchg
inc
add
std
call
adc
push
push
je
jl
outsl
mov
aas
add
or
bound
dec
xchg
and
jbe
sbbb
dec
bound
or
and
enter
imul
cwtl
adc
add
cmp
pushf
test
pop
das
enter
fs
imul
movsb
incl
add
insl
ds
div
aas
dec
pop
adc
shlb
add
cld
fs
sub
test
pushf
pop
add
mov
push
jnp
clc
jo
test
addb
ss
std
pop
xor
cmp
pop
imull
loopne
or
je
fildll
adc
xor
mov
sub
add
cmp
vmwrite
adc
mov
insb
add
cmp
mov
jne
dec
inc
pushf
cmp
add
ficompl
scas
sub
mov
push
adc
adc
add
imul
or
jno
cmp
push
test
mov
pusha
xchg
mov
in
hlt
rcll
lods
xor
mov
add
add
add
adc
adc
test
nop
lods
dec
or
fnstsw
test
jmp
inc
xlat
push
cmp
add
cmp
jl
sbb
xor
clc
shlb
jne
add
or
je
mov
inc
call
and
add
cmp
rcr
in
adc
enter
pop
mov
jge
cld
add
and
xor
add
dec
daa
push
push
push
mov
pop
push
cmp
out
jbe
and
sbb
sbb
dec
mov
cmp
dec
push
cld
xor
and
and
xor
movl
push
pusha
mov
cmp
incl
sub
lock
dec
in
mov
hlt
mov
lahf
loop
jne
or
push
or
jg
xor
mov
mov
adc
mov
in
or
in
cmpb
and
sbb
pop
andl
push
movsb
ljmp
testb
add
data16
jns
pop
aad
clc
pop
ret
add
add
mov
shrl
push
cld
popf
add
xchg
dec
fcomps
sub
shr
mov
and
lock
pop
or
fldl
pop
jo
add
hlt
pop
add
cli
insl
insb
cs
push
or
in
pop
pop
add
lods
jo
cld
gs
cs
sub
imul
inc
pop
xchg
hlt
or
jmp
test
out
loope
add
outsl
jge
push
addb
push
dec
adc
mov
loope
lock
lea
dec
fsubs
sti
jno
int3
jge
add
scas
pop
mov
je
jae
loopne
add
mov
pusha
push
add
push
xor
sbb
test
inc
adc
stos
inc
out
mov
das
or
add
int3
cmpsb
cmp
pop
aaa
add
xor
add
repz
mov
inc
inc
mov
push
push
or
decb
jle
cmp
cmc
orb
push
sub
jmp
cmp
icebp
add
cs
push
or
cli
push
loopne
mov
mov
push
popl
nopl
iret
sbb
or
push
add
pop
add
mov
adc
aam
add
xor
enter
add
rcrb
add
mov
sbb
push
sarb
mov
add
inc
jo
pop
inc
push
je
call
addl
push
sub
daa
js
test
test
add
scas
adc
push
inc
add
add
pop
fs
sub
inc
mov
add
idiv
cmp
add
frstor
pop
popf
loopne
dec
orb
cmpb
xor
mov
loopne
popf
invd
clc
xor
add
je
xor
cmp
aaa
dec
pop
xor
sub
sbb
sbb
mov
and
adc
xchg
nop
int3
push
add
hlt
pop
cltd
fiadds
cld
add
inc
mov
mov
bnd
mov
push
int3
cmc
lret
dec
jge
add
push
jmp
sub
push
add
mov
add
pushf
xor
sub
cmpsb
cmp
into
mov
mov
add
xor
cld
cmp
adc
popf
test
fldt
mov
cmp
add
cmpsb
xor
stos
and
push
dec
notb
push
mov
dec
ret
call
add
orl
adcb
inc
cmp
cli
cld
xchg
cwtl
std
push
add
test
in
jg
jbe
or
mov
fimuls
add
xor
inc
and
or
push
subl
repz
push
add
or
loope
inc
xchg
mov
rorb
aas
add
add
inc
jle
inc
add
dec
pop
nop
push
mov
enter
fisubrs
std
packsswb
adc
popf
aad
xchg
dec
or
in
call
fs
lock
xor
pop
popl
pusha
hlt
mov
outsl
pop
push
sarb
aaa
mov
add
daa
and
add
push
ja
add
and
popl
inc
popf
stos
mov
aad
insb
mov
sbb
sbb
add
enter
sbb
fwait
jns
mov
push
outsl
jb
cwtl
add
xchg
je
lahf
xor
out
mov
inc
fs
add
arpl
and
jo
outsl
insl
shr
fs
pop
cmp
mov
adc
sbb
bound
adc
inc
jb
add
mov
jge
mov
pop
xor
push
cmp
or
sbb
in
int
or
inc
psrad
jo
add
sbb
jmp
sbb
mov
add
or
loopne
es
xchg
xor
out
or
testb
out
push
add
inc
push
or
push
add
jb
add
push
inc
dec
outsl
or
add
pop
xlat
addr16
push
push
lahf
sub
jle
aad
test
cmpsl
pusha
cmp
mov
add
loopne
lret
sub
add
mov
jne
scas
fdivs
dec
out
mov
add
cmp
aad
idiv
add
movb
dec
cmpb
pop
jns
or
out
out
mov
call
cmp
add
sete
mov
add
and
in
inc
push
pop
lods
jecxz
mov
mov
lods
mov
add
jge
cli
ret
sti
jo
jb
lea
add
fdivr
and
test
cmp
jge
or
rorb
mov
and
lahf
js
add
cmp
jne
mov
add
push
pop
outsb
divps
bound
pop
sub
sbb
shr
fwait
les
xchg
pop
mov
fstps
add
xor
rcrb
adc
out
mov
imul
and
pop
dec
adc
loopne
ret
push
fcoms
testl
jbe
sbb
jg
daa
mov
push
fdivs
pop
add
add
test
fisubrl
test
pop
or
sbb
jg
je
push
add
xchg
jecxz
in
clc
xor
mov
call
addr16
fnstsw
add
dec
fistps
sub
xor
adcb
cs
xor
sub
cmp
push
pop
cmp
jb
xor
add
inc
pop
jg
fidivs
push
add
into
and
nop
add
fs
enter
loopne
call
add
mov
loope
adc
sbb
push
loopne
cwtl
inc
push
pushf
vmrun
add
fdivrp
or
fidivrl
push
cld
add
pop
mov
filds
or
and
xchg
int
je
add
scas
sub
jne
xor
repz
cmp
sbb
adc
ds
add
sub
cltd
add
xor
repnz
xchg
dec
data16
push
add
imul
mov
mov
mov
push
scas
mov
ja
fsubr
add
int
lock
rorb
adcl
jl
add
out
roll
lea
pop
add
mov
shlb
sbb
popl
sub
imul
inc
dec
sbb
push
push
or
or
mov
lret
out
xchg
dec
aad
sub
cmp
sub
jmp
call
push
add
inc
jmp
add
add
repnz
xor
aad
add
cmpb
sub
mov
push
or
aad
sub
add
stc
add
andb
or
add
xchg
dec
and
pop
add
sub
jp
addb
add
test
add
or
rolb
add
and
test
int3
repnz
pop
inc
pop
sub
add
enter
cs
jp
cli
add
or
ret
add
dec
inc
nop
cs
cwtl
popf
add
test
cld
add
cmp
adc
sbb
xor
inc
add
lea
mov
mov
jmp
adc
or
aam
mov
andl
jns
sbb
jge
in
pusha
addl
push
leave
xchg
xchg
or
and
out
add
push
std
or
subb
adc
imul
jecxz
mov
lock
adc
add
adc
xchg
test
cmp
sub
pop
pusha
ret
test
xchg
push
or
add
sub
shrb
push
dec
add
push
or
enter
ds
adcb
cli
inc
insl
jl
xor
push
or
dec
test
ds
push
sub
add
cmp
clc
cltd
adc
sahf
mov
lods
sbb
jge
mov
inc
ss
arpl
add
lods
int
or
sub
add
push
push
add
jl
push
adc
inc
add
cmp
scas
and
sub
shll
addl
mov
push
pop
add
popa
push
or
jb
nop
xor
pop
dec
sbb
jl
add
cmp
cmp
pop
mov
push
mov
cmpsb
mov
push
pusha
mov
psubb
dec
imul
push
add
pusha
gs
add
inc
sub
or
inc
int
test
je
add
movl
outsb
nop
stos
xor
outsl
pop
and
popf
or
inc
aad
aam
push
repnz
jle
pop
adc
mov
and
add
popf
add
imul
push
fiadds
cld
add
add
add
or
in
jbe
jne
add
testb
daa
xor
jno
or
add
or
jmp
add
mov
mov
add
adc
pop
test
add
cmp
mov
dec
inc
repnz
in
fdivl
push
inc
jl
mov
mov
loopne
add
out
inc
jns
xor
xchg
dec
add
dec
mov
in
popa
add
jl
sub
jae
in
cmp
sbb
ds
pop
wbinvd
dec
pop
pop
rol
push
adc
mov
into
and
les
mov
push
hlt
mov
pop
test
xor
ljmp
sbb
adc
js
jp
add
add
and
or
jbe
xor
test
subl
sbb
add
imul
add
in
ljmp
cmovl
jl
xchg
lods
xchg
jnp
daa
les
cmp
xor
insb
ljmp
and
ds
dec
cmc
add
insl
xorb
outsl
jb
sbb
or
dec
loopne
aam
pop
xor
add
mov
add
repnz
lret
xchg
add
dec
adc
test
push
and
shr
test
push
outsb
imul
loopne
and
je
hlt
xchg
xor
pop
inc
push
mov
inc
add
out
push
popa
inc
push
or
pop
inc
xor
adc
cmpsb
mov
pop
adc
sti
sbb
jne
outsl
out
inc
xor
jbe
int3
inc
push
ljmp
inc
stos
push
add
enter
push
add
inc
in
add
push
jo
add
jb
je
jne
stc
add
mov
adc
nop
sub
jle
cmp
and
pop
push
xor
jbe
and
int3
ret
dec
pop
pop
movsb
jp
sub
mov
inc
mov
add
outsb
add
sbb
std
imul
addb
in
nop
pop
jo
xchg
imul
pop
push
and
xchg
mov
jmp
mov
xor
dec
js
and
pop
in
mov
mov
mov
add
jmp
push
adc
je
adc
loope
adc
pop
std
and
repnz
hlt
mov
mov
and
cmp
roll
sbb
test
xlat
or
lock
jecxz
je
addl
js
mov
lret
mov
sbb
inc
pop
lea
out
adc
add
jo
push
adc
mov
pop
mov
xorl
aam
fldl
inc
push
mov
add
add
lret
pop
in
xor
sbb
loopnew
insl
in
xor
call
and
cmpb
or
add
test
stc
push
out
sbb
mov
aas
and
mov
or
add
dec
sub
inc
lds
add
or
cli
clc
pop
sub
mov
mov
mov
xchg
adc
and
ror
hlt
add
sbb
cmpsb
dec
pusha
out
and
jmp
adc
pmuludq
xor
add
sbb
and
sahf
orl
mov
test
stc
pusha
lods
ljmp
mov
sub
sub
pmaxub
add
pop
cmp
pop
sbb
add
outsb
xchg
adc
mov
testb
fisubrs
outsl
movsl
stos
ljmp
pop
into
mov
xor
xchg
push
and
cs
add
inc
mov
icebp
mov
les
test
imull
pusha
dec
aam
or
adc
gs
pushf
aam
mov
add
mov
lea
mov
sti
lds
and
lea
add
cs
mov
outsl
jne
mov
sbb
pop
sbb
xchg
push
aaa
and
jb
pop
jae
sub
adc
push
dec
dec
adc
into
cmp
jo
or
pop
rol
addl
movsb
sub
add
lea
and
jle
pop
push
rorb
add
mov
loope
hlt
add
or
ret
push
add
fstps
xchg
add
test
xchg
stos
and
dec
addl
add
das
add
movsb
call
les
mov
push
test
xchg
scas
sub
sbb
add
pushf
arpl
add
decl
jo
adc
and
cmp
push
unpcklps
add
add
add
fs
pop
ret
inc
mov
dec
fcoms
push
sbb
sarb
add
sbb
adc
add
dec
sbb
cmc
lods
xor
dec
stos
fisubrs
pop
dec
out
or
mov
add
mov
adc
or
pop
fs
sub
test
nop
dec
mov
push
icebp
or
inc
clc
cmp
add
jl
add
sub
add
loopne
or
dec
or
mov
xchg
mov
cmp
push
xchg
out
ret
lea
add
pusha
jmp
sub
adc
mov
mov
addb
nop
cwtl
jmp
add
nopl
add
sub
jge
cmpsb
subb
and
fmul
setb
mov
imul
dec
out
sbb
orb
call
mov
add
mov
movsl
push
jge
je
push
mov
mov
add
pop
andb
add
cli
or
addl
pop
mov
nop
add
inc
mov
add
add
add
pop
stos
rclb
pusha
mov
movsb
daa
cwtl
add
add
mov
int3
fmuls
psubb
shr
rolb
jmp
mov
or
xlat
push
add
mov
add
cli
or
fdivr
verr
sahf
mov
nop
sbb
adc
jne
mov
xchg
inc
clc
xchg
test
lcall
call
jle
pop
add
push
or
mov
ljmp
fldcw
mov
mov
xchg
mul
div
inc
add
xchg
addr16
enter
add
xchg
add
addl
sbbb
lret
add
lcall
mov
dec
add
mov
inc
push
movb
adc
push
mov
sbb
gs
pop
add
imul
cld
sub
testl
and
jo
push
ss
cmp
and
fisubs
inc
or
inc
loopne
xor
lods
jmp
push
add
and
cmpb
cmp
sbb
lret
or
push
add
leave
mov
adc
repnz
jmp
std
inc
stc
in
push
pop
mov
add
jb
mov
jnp
les
rcrb
add
repz
nop
enter
add
hlt
inc
je
out
scas
cmpsb
add
js
outsl
add
jmp
push
fs
and
or
push
inc
lock
sub
jo
rolb
mov
push
scas
or
jl
sbbl
sti
lock
xor
and
adc
add
adc
mov
cmpb
adc
adc
xchg
inc
cli
mov
add
or
xor
icebp
repz
inc
lods
jne
lret
mov
clc
add
sar
adc
and
inc
scas
in
ljmp
mov
pop
pop
xchg
add
test
stc
mov
jge
add
lea
daa
pop
push
pushf
mov
push
push
test
and
add
outsl
insl
cmp
add
sub
jl
or
mov
and
fucom
test
and
movsb
xchg
xchg
icebp
filds
into
adc
cld
add
sbbl
sbb
popa
adc
jns
pop
les
sbb
add
and
andb
adc
xchg
fsubl
pop
mov
xor
mov
addr16
loope
adc
lret
xchg
push
inc
mov
unpcklps
add
imul
cld
mov
add
mov
nop
movsb
out
add
loope
sbb
and
pop
int3
push
add
les
cmp
xchg
sahf
ret
inc
inc
imul
cmp
pop
xchg
scas
leave
add
xor
clc
jbe
and
jno
add
add
cmp
andb
sbb
or
dec
adc
sbb
sbb
xor
add
lea
cltd
add
jo
add
add
addl
in
xor
orl
pop
pop
lods
iret
add
add
pusha
jmp
testl
sbb
jg
aas
add
fsubp
mov
repnz
fisttpl
jno
jp
lods
or
cmp
lret
add
xchg
cmc
incl
sub
fiadds
add
push
jne
add
ret
xchg
iret
pusha
mov
ljmp
add
fwait
add
jo
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
or
test
aas
cmpsl
aam
sub
mov
push
fs
cli
lahf
pop
xchg
orb
jmp
sub
fistpl
add
adc
loop
popa
pop
js
cld
cmp
pop
pop
pop
pop
push
push
mov
and
dec
shr
or
and
xor
jg
or
mov
inc
mov
dec
dec
loopne
xchg
repnz
and
mov
add
or
mov
add
dec
sub
or
jecxz
push
adcb
std
icebp
sbb
dec
inc
cmpsb
inc
cmp
sarb
add
and
push
jns
rolb
or
or
je
mov
out
test
shr
inc
or
or
cmp
testl
roll
les
into
or
lods
mov
fcoms
pop
inc
mov
sub
inc
jp
loop
pop
movsl
int3
nop
aam
lock
sbb
lock
jne
xor
or
clc
cmp
mov
add
mov
xchg
mov
push
jne
mov
add
negb
and
push
and
mov
iret
mov
push
inc
or
and
sbb
add
shlb
jbe
adc
mov
sub
das
cltd
jne
outsl
push
cmp
loopne
add
sbb
pop
or
push
out
jns
add
dec
or
add
or
scas
std
outsb
add
mov
push
adc
sub
push
add
xor
add
cmp
inc
xchg
fcom
xchg
push
cmp
and
inc
std
das
pop
mov
inc
jns
jl
add
adc
mov
mov
aas
mov
push
jae
xchg
and
sbb
xorb
inc
scas
adc
add
add
mov
fs
out
adc
inc
add
add
lret
push
inc
push
std
xor
inc
xchg
fdivrs
negl
and
push
repz
movsb
cmp
cwtl
movlps
add
add
lock
jno
jo
inc
add
adc
ljmp
xchg
lock
inc
pushl
call
mov
popf
int3
and
or
or
xchg
ja
jnp
orb
xchg
add
nop
sbb
fadds
jp
dec
mov
ds
lock
and
or
push
or
hlt
sbb
in
into
lock
dec
mov
mov
rolb
add
sbb
push
cmpsb
aad
lret
nop
inc
fdivrs
push
movsb
cmpl
addl
jne
mov
sub
test
ja
outsl
add
or
pop
add
xor
pop
or
inc
add
or
rcll
pop
ds
inc
xchg
mov
popf
jmp
add
imul
stos
mov
shlb
popf
inc
xlat
mov
gs
mov
and
jae
jle
add
pusha
push
and
adc
pop
adc
push
loope
sub
pextrw
add
shlb
ret
mov
rorb
adc
movb
sbb
nop
jle
sbb
mov
xchg
or
inc
scas
sub
popf
sbb
inc
daa
push
hlt
or
imul
enter
add
mov
pop
xor
push
push
mov
xchg
add
adc
fldl
shll
mov
and
add
xor
push
dec
mov
nop
jge
arpl
cmp
xchg
rorb
jno
imul
and
add
mov
in
ljmp
decb
xor
aad
lods
or
xlat
gs
push
add
fisttps
mov
adc
add
add
xor
daa
or
clc
lahf
clc
fcmovb
ja
add
jnp
sub
sub
jmp
jmp
xchg
mov
xchg
push
adc
je
pusha
push
mov
add
jmp
lea
sbb
addb
add
inc
sbb
add
xchg
sbb
aaa
add
xchg
push
jmp
cmp
add
stos
adc
filds
scas
dec
and
std
adc
ja
add
andb
cmpsl
pop
negl
mov
dec
mov
add
popw
pop
and
fnstcw
ja
dec
mov
leave
add
cmp
pusha
add
dec
lea
cld
sub
clc
mov
add
mov
jo
add
and
push
scas
fs
add
sub
add
or
add
cmpsb
paddusw
mov
add
movsb
cmc
jmp
lods
scas
test
lock
push
in
inc
push
sbbb
cmpsl
jg
out
add
stos
add
add
pop
pusha
cmc
push
and
inc
pop
mov
lea
fcmovnu
cmpb
cli
push
jnp
pop
push
andb
out
inc
js
cli
insl
cli
ljmp
cmc
sbb
mov
icebp
or
adc
add
mov
cli
popl
adc
mov
or
rcrb
xor
xchg
pop
outsl
inc
push
cmpsb
sub
repz
lock
aad
cwtl
dec
filds
jo
loopne
add
and
loope
ds
cmp
hlt
jns
add
pushf
and
gs
mov
insb
mov
int3
push
add
std
mov
jae
add
loopne
ret
gs
add
xor
pop
movsl
popa
daa
add
dec
repnz
sbb
dec
add
or
cmp
loop
clc
jecxz
pop
mov
push
outsl
icebp
jo
shrb
or
and
in
push
dec
ficoml
sbbb
addr16
stc
mov
scas
cmp
sbb
nop
popf
cmp
add
lds
add
push
add
loopne
mov
hlt
jo
mov
ret
mov
xor
cmp
add
adc
pop
in
xchg
jmp
xlat
mov
lds
mov
cli
out
and
daa
sbb
sbb
std
lock
cmp
sub
or
mov
adc
jae
push
pop
jp
pop
dec
dec
xchg
adc
mov
mov
addb
rcrl
sub
add
imul
daa
push
filds
pop
jl
jo
aad
xchg
sub
and
call
and
std
rclb
mov
and
jl
pop
or
add
inc
loop
mov
pop
inc
lock
jo
stc
shll
and
ret
test
jnp
lret
push
add
jbe
pop
mov
inc
leave
pop
mov
cmpb
je
cvtdq2ps
mov
dec
jmp
cmpsb
sbb
out
jnp
add
ror
jmp
daa
adc
or
add
pop
xor
pop
ljmp
xchg
sti
in
jg
str
sbb
jne
mov
clc
inc
and
pop
add
pop
outsb
mov
mov
add
repnz
xchg
inc
rcrb
sbb
sub
mov
push
pop
test
aaa
add
scas
imul
xchg
pop
add
push
in
movb
or
jns
imul
sbb
adc
push
adcb
push
movsb
sbb
or
std
dec
jecxz
bound
push
mov
cmc
dec
adc
pop
orb
rolb
push
pop
aad
add
loopne
add
add
mov
add
jl
add
rcll
shlb
adc
adc
inc
sbb
adc
jnp
cmp
push
xor
andl
rolb
inc
mov
jne
dec
mov
fucomi
sbb
xor
sarb
sti
data16
add
xchg
xlat
mov
ds
cmp
mov
icebp
enter
scas
cmpb
adc
mov
push
jne
add
test
sbb
xchg
cmp
add
xchg
xlat
pusha
xchg
js
push
cli
pusha
add
daa
inc
loope
jns
rorl
lret
cmp
in
ja
cmp
xchg
cmp
pop
inc
mov
add
ret
lock
enter
loopne
mov
adc
push
je
clc
lock
push
stos
xor
pop
dec
sub
pop
cmpsl
add
js
sub
cmp
or
mov
rcr
orb
loope
mov
mov
dec
adc
and
push
filds
hlt
js
les
add
cmpl
push
add
adc
pop
add
and
sbb
add
jecxz
xchg
scas
pusha
jb
add
xorl
add
je
call
mov
rolb
dec
loop
sub
and
add
sbb
mov
dec
push
inc
out
sahf
jae
push
cmpsl
lods
aas
push
jp
mov
and
mov
and
xor
adc
clc
lock
sub
push
and
les
test
in
jle
cmp
and
mov
pop
push
pop
int
mov
jmp
or
add
sub
inc
daa
xor
sub
jmp
jmp
push
jmp
mov
iret
dec
sub
in
rorb
adc
arpl
lea
ja
inc
add
push
aam
mov
and
dec
mov
addr16
mov
add
jle
mov
mov
sbb
cmpsb
jp
cmp
jne
mov
sbb
xchg
je
imul
pop
sbb
push
pushf
movsb
inc
std
xlat
test
roll
outsb
outsl
je
xchg
jne
push
sbb
mov
add
dec
and
jae
add
push
imul
dec
mov
sbbl
clc
add
fimuls
mov
repnz
cwtl
cmp
add
xor
mov
sub
add
sbb
jle
leave
push
cmp
pop
pusha
dec
push
pusha
test
movsl
add
ljmp
add
jl
add
pop
pop
push
add
pop
sbb
lcall
addb
jnp
pop
mov
shll
xchg
in
add
inc
dec
pop
dec
and
inc
push
dec
xchg
push
fdiv
testb
or
push
enter
or
jns
push
push
and
clc
add
shlb
in
pop
hlt
sti
imul
cwtl
add
add
rcl
dec
or
xchg
xchg
cmp
movsb
lcall
add
fs
adc
sub
cs
out
ja
add
mov
leave
xchg
jmp
push
xor
mov
hlt
lar
loopne
inc
xchg
je
add
sub
jb
cltd
fadd
push
dec
inc
test
pop
insl
xchg
xchg
loopne
out
shlb
jne
sti
shlb
sub
into
lods
loope
sub
inc
iret
push
js
das
and
imul
add
cmp
cmp
mov
dec
and
add
leave
pcmpgtd
mov
inc
add
arpl
cwtl
jo
mov
bound
mov
hlt
push
cmp
aam
jo
das
mov
scas
jb
cwtl
jne
sbb
test
or
mov
pop
sbb
sub
fmuls
add
pusha
pop
xor
add
mov
rclb
and
mov
shl
and
adc
cmp
add
es
add
fmuls
add
stos
sbb
test
ss
mov
or
data16
add
fs
std
add
xchg
dec
loop
sbb
xorb
pop
cwtl
fldl
insb
cmp
mov
imul
and
sub
mov
movb
jmp
cwtl
pmaddwd
mov
dec
or
stc
lcall
inc
subl
cmpb
push
dec
add
test
xor
mov
lods
dec
imul
mov
adc
je
push
es
lea
cmp
inc
pushf
loope
xor
clc
fnstenv
loopne
jne
xchg
imul
out
cmp
cmpb
js
mov
cmp
push
enter
dec
imul
popf
or
adc
mov
add
and
mov
cmpsl
mov
push
in
xchg
add
xchg
sub
and
push
add
js
flds
inc
push
cmp
movb
aaa
cmp
mov
movsl
mov
sub
in
add
std
addb
dec
push
mov
lret
sub
mov
int3
enter
jns
add
add
lea
mov
xchg
movsl
sar
add
or
test
pop
sti
push
popa
adc
and
add
or
jle
sub
test
add
or
mov
andb
setno
je
pop
adc
mov
out
add
cmpb
cli
aas
inc
add
shrb
add
cld
dec
cmpsb
push
xor
dec
inc
fdivrl
int
outsl
mov
mov
call
mov
or
push
imul
test
int3
push
pop
cmpsl
push
push
jmp
xchg
jbe
push
dec
jns
test
add
push
fidivrl
mov
pop
subb
outsb
cmp
repz
sarl
sub
dec
stos
pop
push
or
and
add
enter
dec
jp
cmp
add
fs
mov
dec
jmp
xor
scas
add
or
add
arpl
cmp
or
mov
std
xchg
in
xchg
pop
pop
jl
add
orb
sub
movsb
push
pusha
and
or
add
xor
xchg
stos
lahf
daa
mov
cmpsl
mov
jecxz
sub
adc
div
pusha
cltd
push
shll
ds
mov
lods
rclb
jl
lret
dec
xchg
mov
jo
add
dec
outsb
and
jnp
add
add
fs
add
mov
push
push
dec
out
cltd
mov
ret
push
sub
mov
cmp
daa
cmpl
add
mov
add
pop
sbb
fstl
nop
sbb
shlb
daa
les
nop
inc
test
int3
add
xchg
fmuls
and
in
call
popf
sub
ror
les
test
roll
push
das
mov
notb
adc
ss
push
jne
add
jo
or
cs
cmp
enter
or
bound
jae
cmp
sub
aas
jns
add
fsubl
in
or
add
push
lcall
mov
add
xor
mov
imul
lds
mov
jbe
add
clc
sbb
push
in
rcrl
add
bound
cmp
mov
mov
aas
push
das
lret
cmc
addl
fnsave
mov
test
jecxz
rorb
mov
mov
add
mov
sub
inc
add
inc
inc
cmp
jno
aam
pusha
add
ds
pop
sbb
rolb
adcb
add
add
sub
xor
xchg
cmp
inc
mov
mov
lock
shrb
cmp
dec
add
push
or
dec
das
mov
mov
subb
movsl
jge
test
ss
gs
inc
push
je
jge
inc
or
cmp
mov
dec
dec
call
aam
data16
enter
inc
cmp
in
movsl
add
mov
call
add
dec
and
dec
inc
in
pop
adc
pop
aas
lods
add
inc
subb
mov
es
pusha
sbb
arpl
or
jo
add
pop
add
repz
jb
sbb
std
xor
js
xchg
or
mov
shrb
add
sbb
aaa
push
mov
lcall
and
fsubs
xor
add
test
aaa
add
sbb
add
or
xor
lods
or
mov
and
fs
mov
adc
inc
mov
int3
sbb
loopne
jge
sbb
add
lds
scas
jnp
mov
mov
add
repnz
add
xchg
inc
mov
dec
pop
xorb
fidivrs
cli
push
cmp
imul
mov
shlb
jbe
rclb
jo
subb
movd
ja
cli
add
arpl
inc
imul
je
push
shlb
sarb
cmp
pop
or
adcb
enter
mov
ds
and
test
int
mov
push
push
lock
cmc
imul
inc
jno
mov
das
loopne
subb
es
adc
lods
pusha
notl
jg
add
add
out
add
outsb
pushl
dec
push
sbb
cmpb
test
std
jle
add
dec
cmp
jg
mov
dec
add
add
lea
ljmp
or
mov
add
int
cmp
test
sub
lds
sub
cwtl
aaa
stc
jg
ljmp
gs
add
mov
mov
fdivrs
test
ljmp
ds
add
roll
lods
jg
mov
adc
adc
cmp
push
add
insb
imul
fs
dec
cmp
lock
and
cmp
sub
fildl
push
add
imul
movsb
jg
movzwl
pop
loopne
or
mov
out
mov
add
or
cs
jae
mov
dec
les
add
jmp
push
xchg
call
jae
and
jno
out
cld
and
divl
add
pushf
imul
and
stos
push
cmpsl
test
sbb
ja
add
add
jnp
add
inc
test
mov
cld
lret
add
sub
cmpl
jb
add
push
jo
bound
add
sub
push
dec
arpl
xor
adc
jb
push
xchg
push
push
js
addr16
in
daa
imul
add
inc
aas
push
mov
cltd
ss
adc
or
dec
insl
add
out
or
sub
js
add
mov
aas
ror
cmp
jno
in
mov
repnz
xchg
and
cmp
add
jbe
jne
imul
nop
repnz
push
push
imul
imul
sbb
cmp
adcb
and
lret
adc
and
ret
cmovo
add
lods
clc
add
jle
les
mov
int3
addr16
add
in
gs
das
lea
add
int
cmpsl
aam
mov
cmp
sub
daa
add
mov
add
fwait
stc
js
mov
jns
insb
jmp
lods
orb
mov
pop
jno
es
jge
add
mov
adc
mov
leave
or
add
cmpsb
subl
push
cmpw
popa
add
push
rcll
and
test
testb
pop
lock
inc
testl
cs
setne
sbb
add
pop
xor
push
in
mov
add
add
mov
mov
sub
adc
adc
pop
inc
inc
jo
psrlw
jae
cmpb
xchg
inc
add
repnz
mov
push
aam
and
xor
fdivrl
jne
add
add
das
xor
mov
int3
sahf
mov
dec
pop
xchg
add
ret
push
add
adc
enter
add
add
add
fcomi
in
sub
roll
mov
mov
inc
add
push
push
adc
push
fxch
jmp
mov
mov
mov
and
xor
push
fdivrs
ret
dec
loopne
add
pusha
enter
je
push
rcrl
mov
shrb
or
imul
enter
add
jmp
fwait
pushl
dec
xor
add
iret
push
push
mov
or
inc
nop
push
pushw
pop
jb
cwtl
push
sub
cmp
xchg
cmpsl
push
push
push
add
mov
pop
add
or
pop
push
jge
dec
ret
mov
loopne
sub
add
std
into
or
adc
imul
shl
add
cmp
out
adc
mov
add
and
pop
mov
addr16
add
loop
push
in
scas
cld
jnp
add
repnz
cmp
test
add
js
xor
sbb
nop
add
cmp
xchg
fdivrl
inc
sbb
sbb
add
dec
hlt
sub
cmp
add
lret
lahf
xor
fsubr
add
xchg
mov
mov
jmp
mov
pushf
xor
add
cmp
add
pop
and
int
jge
push
cmp
pop
loopne
sub
cmpsl
xchg
cld
jl
fs
add
inc
loopne
sub
sarb
add
sub
fldl
mov
adc
pusha
mov
push
sbb
movb
fsubs
sub
stos
test
dec
nop
std
movsb
repnz
add
inc
mov
jg
movsl
add
jne
mov
dec
mov
adc
add
add
or
push
pop
jbe
pop
sahf
inc
mov
mov
int
sbb
in
inc
mov
in
lea
jmp
jo
jns
stos
data16
mov
add
jnp
pusha
movsb
ljmp
inc
aas
or
popf
je
cmp
fcoml
xchg
or
mov
loop
or
pusha
mov
addb
jg
sub
clc
and
inc
adc
add
push
test
and
adc
sarl
and
aad
cmp
daa
push
popf
cld
stc
test
push
lock
pop
cs
and
push
lods
jnp
lock
add
adc
cli
sub
jne
cmp
push
clc
pop
pop
nop
pop
popf
pusha
sub
das
test
stos
mov
pop
cltd
mov
mov
mov
inc
leave
push
jge
mov
or
mov
and
add
jne
lock
jmp
repnz
sbb
add
add
and
cs
add
mov
jge
lahf
les
sub
xchg
in
lock
cmp
rol
or
push
and
adc
adc
cmpsl
rclb
aas
fdivp
add
outsb
fs
mov
and
test
dec
xchg
ds
lock
into
cmp
ja
dec
push
ljmp
cmp
adc
dec
push
stos
push
es
add
iret
shrb
imul
aas
pop
xor
mov
lret
pop
mov
lea
leave
inc
add
dec
cmp
cmp
jge
jo
rclb
mov
lods
in
and
mov
xchg
inc
jbe
add
icebp
ljmp
sbb
sbb
dec
bound
adc
fwait
popa
mov
cmp
inc
hlt
jmp
add
sbb
cmpsl
out
sub
push
push
and
dec
in
insl
mov
pop
mov
stc
out
dec
mov
lret
pop
lods
push
outsl
jl
add
push
push
mov
and
aaa
jb
adc
add
inc
mov
push
flds
mov
mov
jno
loopne
mov
add
cmp
pop
sub
sbb
jp
add
in
bound
stos
roll
add
add
sbb
sbb
or
add
xchg
gs
add
cmp
in
bnd
add
stc
data16
mov
xchg
lods
das
sti
imul
mov
mov
movsl
loopne
sbb
sbb
pop
loopne
add
lret
add
fdivs
sbb
mov
mov
push
sbb
push
test
movsl
sahf
mov
mov
add
jns
data16
add
nop
adc
push
mov
jge
add
pop
inc
andl
add
mov
push
xor
jb
add
ret
jge
jp
addb
lahf
mov
cltd
or
das
sub
int3
xorl
jo
add
jns
cwtl
loopne
add
shll
rcrb
xchg
push
add
fmuls
sbb
addr16
stc
inc
push
cwtl
pop
add
xorb
pushf
arpl
jge
inc
xor
pop
push
fs
addr16
loop
sti
jne
sbb
dec
adc
movsl
out
popa
jecxz
add
mov
sti
inc
lcall
pop
fcomp
mov
mov
movsb
pusha
mov
in
cmp
subb
and
xlat
add
or
mov
jo
add
jp
movsl
aad
inc
mov
sbbl
stos
add
loopne
add
xchg
add
add
arpl
push
fsubr
aaa
pushf
adc
addr16
pop
add
pusha
xor
in
testb
xor
mov
sub
daa
adc
movsb
ja
sbb
or
call
cmp
pusha
test
jb
or
add
jne
mov
add
mov
inc
sbb
sub
xor
cs
orl
pop
add
push
sub
mov
jmp
mov
cwtl
loopne
in
mov
lock
int
pop
push
call
syscall
outsl
lds
lcall
loope
mov
cmp
pop
push
add
jb
or
sbb
das
jmp
push
jg
ja
pop
fwait
test
outsl
add
test
adc
mov
add
sub
lret
mov
cld
std
out
mov
dec
roll
cmp
xchg
add
inc
leave
lea
jge
add
jmp
mov
lret
adc
cmp
dec
cli
jo
push
mov
mov
push
xchg
jl
ss
rcl
or
xor
jg
clc
xor
add
rcrl
inc
pushf
outsb
add
fdivrl
add
jb
mov
jecxz
inc
inc
test
inc
jne
outsl
loopne
hlt
xchg
leave
aam
cs
int3
adc
dec
inc
lock
jecxz
call
adc
push
push
jae
mov
imulb
cmp
xlat
add
mov
andl
fs
adc
dec
add
call
mov
adcb
mov
out
dec
xor
dec
pushf
sub
or
push
jg
xlat
xor
ljmp
scas
adc
bndstx
jmp
push
lods
add
int3
and
inc
mov
jae
ja
push
es
xorb
sbb
popa
add
xor
add
push
cmp
add
daa
dec
sbb
mov
add
mov
add
jge
cs
dec
jb
pusha
fsubrs
test
sub
out
filds
cli
cmc
gs
add
or
or
loop
mov
cmp
push
movsl
and
loopne
push
aad
test
or
clc
fwait
push
ljmp
xchg
loop
pop
jne
cmp
mov
and
xchg
lds
jo
push
inc
add
je
mov
add
jns
fadds
add
xor
inc
leave
je
mov
adc
js
add
stos
popa
test
or
xor
dec
add
negl
mov
cmp
test
pop
pop
add
xchg
es
pop
xchg
add
fwait
add
pop
fidivl
loopne
out
inc
or
mov
dec
subb
push
pop
sbb
jg
add
sarb
call
adc
sub
shrl
lock
add
or
mov
pop
sbb
std
add
lahf
sbb
pop
outsb
push
lcall
and
inc
cli
stc
or
push
shr
pop
dec
xchg
add
cmpsl
addr16
popw
sub
int3
add
movups
shrl
jo
xlat
add
scas
jbe
pop
inc
push
rolb
add
pop
out
imul
repnz
or
sbb
pusha
lds
mov
add
call
shlb
cmpsl
addl
mov
and
mov
jmp
sbb
inc
fldl
pop
insb
mov
sub
lock
sub
add
add
pushf
enter
dec
test
pusha
mov
dec
jne
add
out
push
gs
sub
add
cltd
dec
xor
incb
mov
rclb
andb
pop
jmp
repnz
int3
add
lahf
sbb
rorb
add
add
dec
nop
pusha
das
ret
fmuls
xchg
es
into
xchg
and
aas
jecxz
les
push
add
and
rclb
xchg
xor
cmp
stc
add
hlt
out
add
cmp
stos
and
pop
out
jb
or
cltd
ret
push
jo
add
xor
and
xlat
jbe
icebp
aas
xor
inc
sbb
enter
dec
jns
push
mov
cmp
cmp
add
sbb
push
sub
repz
add
cwtl
sbb
adc
test
add
sbb
inc
mov
std
add
movsb
imul
das
add
nop
pop
or
add
test
inc
jo
or
sbb
sbb
loopne
cmpsl
sbb
aaa
pusha
aad
mov
std
or
sub
les
xor
add
jb
verr
in
out
aas
sub
pop
xor
popf
popa
jae
rcrb
mov
arpl
dec
jno
stos
adcl
sub
testb
push
push
pop
cli
faddl
sub
sbb
movsb
jns
sbb
mov
push
cli
xchg
insb
sub
add
xchg
jmp
xchg
in
imul
insl
xchg
mov
das
ljmp
and
notl
repz
fiaddl
adc
cmpsb
orb
sbb
push
add
xchg
xchg
mov
cmp
repz
xchg
test
aam
jmp
shrb
jnp
add
mov
jecxz
mov
mov
sub
xor
add
lret
cwtl
cmpsl
inc
add
aad
mov
insl
sbb
add
xchg
jnp
xor
rclb
enter
cmp
jle
loopne
add
mov
add
cmp
push
nop
loopne
fnstsw
inc
add
sarl
lret
push
sbb
inc
or
lcall
add
sbb
dec
or
lds
add
mov
mov
insl
js
mov
outsb
jnp
cmp
add
jecxz
and
repnz
cld
sbb
xlat
sbbb
fwait
and
add
dec
ljmp
and
push
cmp
or
sbb
test
jne
mov
xor
divb
inc
add
jb
les
inc
movsb
js
add
adc
sub
jnp
or
add
pop
xchg
mov
pop
xchg
jl
add
pop
xor
out
sub
mov
out
and
jle
adc
in
sub
sarb
iret
mov
lret
cmpsb
shrb
fs
addr16
push
gs
add
and
add
pusha
js
stos
pushf
andl
add
xchg
add
aad
add
push
loopne
cltd
lods
cmovno
ds
pusha
xor
pop
jo
add
scas
add
inc
xchg
or
xor
add
sbb
jle
repnz
shr
sbb
dec
mov
add
mov
push
or
loopne
add
sbb
loope
inc
push
inc
movb
imul
push
sub
lahf
leave
popa
aas
adc
ret
jno
inc
or
enter
mov
or
in
js
loopne
add
repnz
lods
sbb
fsubs
fimull
add
hlt
lret
sbb
orb
sbb
inc
stos
add
or
es
cmpsl
sbb
adc
cwtl
mov
sti
push
inc
or
add
sbb
pop
hlt
add
ret
pop
repz
shl
push
mov
and
popa
roll
push
ret
jb
enter
pop
ficoms
dec
incb
mov
dec
jge
cmp
pop
daa
xchg
lods
dec
fdivrs
add
scas
add
iret
in
jp
mov
push
mov
lock
lahf
push
mov
call
mov
jns
in
cwtl
aas
add
insl
mov
ret
loopne
add
push
loop
pop
loopne
andb
scas
dec
addl
aaa
jo
ljmp
rclb
mov
inc
add
cmp
mov
sbb
cs
pop
add
push
stos
jno
dec
and
sub
sbb
mov
xor
rolb
jne
loopne
and
mov
push
in
dec
lret
add
xchg
jp
loopne
add
popa
pop
jl
movsl
ror
add
ja
mov
jbe
mov
jae
jg
repz
daa
rcr
orb
pushf
add
push
js
loopne
adc
aas
dec
jl
add
repz
sbb
xor
sbb
mov
add
add
ljmp
lahf
aad
xor
loopne
xchg
pop
sbb
stc
mov
cli
add
lods
movsl
fs
cwtl
xchg
inc
xchg
add
sbb
pop
sub
inc
or
cld
cmp
int3
pop
nop
xor
outsl
sbb
popa
add
add
in
mov
mov
add
lds
add
test
mov
push
add
pop
and
add
inc
inc
pop
out
push
add
addl
int3
sub
mulb
add
das
cmp
adc
andl
push
rorl
aas
mov
sub
ret
xchg
enter
js
pop
add
xlat
inc
unpcklps
call
or
mov
ret
push
push
scas
shr
not
mov
sub
mov
ja
je
subb
call
loopne
mov
pop
nop
cmp
int
push
in
arpl
add
add
iret
repnz
mov
int3
lock
fistps
es
add
cmp
repz
xor
testl
dec
inc
push
imul
aam
rorb
add
mov
inc
call
xchg
fwait
cmp
rorb
adc
add
cld
mov
mov
add
or
shl
add
popf
loopne
mov
cmp
add
movsl
lods
or
add
faddl
jnp
into
dec
mov
lods
in
add
test
add
push
sbb
in
mov
push
inc
xor
xchg
mov
or
jp
mov
mul
sbb
imul
jle
int
jns
lock
test
outsb
inc
cs
inc
xchg
add
ret
lcall
sub
das
jle
addb
mov
scas
mov
test
sbb
jne
add
daa
lods
jl
test
loope
cwtl
stos
sbb
jp
test
insb
mov
add
jl
stos
mull
ds
sub
test
int
mov
add
mov
idiv
add
sbb
sar
add
sarl
sahf
call
aam
mov
testb
add
jae
test
iret
jb
add
xor
add
clc
and
add
xchg
mov
add
and
sti
dec
ss
add
notb
jg
cmp
notl
nop
add
push
add
jo
push
push
hlt
cltd
roll
subl
mov
test
add
fistpl
out
sub
dec
add
xchg
stc
sbb
cltd
sahf
add
hlt
sbb
adcb
cmp
push
mov
push
add
or
ret
pop
jl
test
cmp
inc
sarb
sarb
push
add
jne
xchg
pop
sub
sbbl
add
pop
sahf
lcall
cmp
pop
pop
rclb
pop
stos
or
dec
mov
rclb
mov
dec
mov
dec
pusha
xchg
add
xor
ss
nop
rorb
fiaddl
mov
adc
push
mov
add
mov
jno
dec
mov
or
sub
pop
xchg
add
stos
mov
jo
add
sahf
test
sub
cli
and
lret
xor
repnz
ret
cltd
mov
in
push
addb
mov
lock
repnz
int
push
mov
test
daa
pop
add
mov
cmp
rclb
cmc
add
loopne
xor
mov
ja
call
clc
pop
lcall
movsl
cld
cli
add
pushf
dec
jns
mov
push
cmpb
add
xchg
cwtl
pop
sbb
mov
and
cmc
mov
loop
std
add
stos
jp
pop
and
cltd
add
pop
sbb
push
inc
jecxz
jo
add
sub
mov
add
fisubs
sub
push
cmp
jge
add
adc
mov
testl
xor
pop
mov
push
data16
ds
loope
loopne
std
push
shl
xchg
mov
mov
xor
lahf
add
mov
ds
push
pop
jge
jne
and
pop
andb
add
inc
loopne
push
mov
or
hlt
push
push
in
fs
dec
lret
call
inc
sbb
stos
mov
push
add
xchg
pop
add
mov
xor
push
inc
nop
insl
add
cmpb
add
push
mov
jge
imull
pop
pop
add
cmpl
gs
scas
movl
add
xchg
nop
cmp
int
lea
popf
lods
dec
iret
sub
xchg
sbb
cmp
sbb
push
clc
outsb
add
adc
xchg
cmp
nop
pmullw
cmpb
jnp
xor
cmp
xchg
outsl
inc
call
sbb
mov
rolb
mov
rolb
nop
clc
push
std
add
xchg
movsb
jmp
add
call
rorb
lea
inc
pop
add
out
mov
mov
xchg
cmc
push
add
xchg
and
rorb
push
add
jg
inc
sub
shrb
add
push
push
call
jmp
test
test
xor
fbld
adc
add
ds
sbb
mov
aas
and
dec
mov
inc
pop
and
jge
outsl
sbb
adc
add
lret
sbb
xor
test
jnp
add
or
xchg
int3
adc
or
xchg
inc
cmc
add
jp
push
cld
loopne
lods
mov
pop
add
arpl
lret
ret
lock
add
mov
jl
mov
enter
add
add
mov
out
sub
pushf
lods
and
inc
and
jmp
sti
add
push
mov
dec
jns
add
pop
pop
mov
fcomps
add
je
ljmp
push
jb
push
jmp
add
movl
push
add
add
loopne
push
dec
jle
pop
adc
loop
add
mov
push
add
add
pushf
lret
cltd
stos
add
inc
aam
xchg
sub
out
add
std
outsl
adc
out
and
sub
push
cmpl
cmp
mov
xor
in
hlt
adc
xchg
add
xchg
bound
cmp
fiaddl
in
push
ret
push
lea
cmpsl
movsl
sarl
cmp
nop
push
addr16
test
bound
sbb
xor
mov
xchg
test
pop
adc
mov
jg
lea
add
sti
arpl
loopne
push
lock
loop
and
mov
jnp
jo
mov
test
push
mov
enter
add
bound
adc
pop
adc
nop
outsb
lret
dec
ljmp
les
imul
add
ret
test
and
push
hlt
adc
lock
and
push
mov
int
jge
add
out
notb
adc
daa
mov
add
sarl
add
jge
lods
cmp
out
pusha
cmp
cmp
aas
std
test
add
test
add
xlat
out
sub
adc
push
add
sub
add
loop
cmpl
and
stos
mov
push
stc
rcr
cwtl
dec
in
add
sahf
and
aad
pop
mov
ljmp
dec
icebp
add
jmp
xchg
shll
jns
pop
roll
sub
add
mov
scas
out
jae
and
scas
push
push
mov
mov
jmp
sbb
add
jb
fstpl
fwait
add
or
xchg
fidivrl
push
add
and
xor
pop
mov
xor
mov
pop
jne
sub
cld
jno
add
or
jmp
pusha
adcb
mov
pop
xchg
add
popa
and
mov
fimuls
fwait
jmp
or
aam
sbb
insb
dec
mov
arpl
lods
sub
add
mov
push
add
pop
cs
add
nopl
in
xchg
add
cmc
jb
mov
mov
daa
mov
add
mov
sub
or
int3
fisttpl
fiadds
fsubs
add
add
loopne
add
xchg
sub
add
add
inc
mov
xor
andb
mov
cld
hlt
mov
jno
add
or
add
or
or
add
test
inc
mov
dec
faddl
jg
pop
xor
dec
enter
add
push
inc
out
mov
fstps
sub
add
and
scas
leave
call
cmc
mov
xorb
mov
test
das
jle
testb
inc
imul
or
stos
out
mov
jmp
lret
and
roll
mov
add
nop
popl
sbb
push
xorb
mov
mov
sbb
and
cmc
dec
sub
add
sub
cmp
or
cwtl
add
mov
jne
mov
pop
pushf
add
inc
sbb
mov
rorb
add
mov
fs
bound
loope
xor
adc
ljmp
sub
mov
push
sahf
mov
add
xchg
fwait
cmp
add
mov
push
repnz
adc
push
lea
fwait
or
xchg
jp
or
mov
xchg
mov
mov
add
mov
clc
out
out
and
push
add
xchg
cmpsb
mov
std
faddl
mov
pop
lds
mov
adc
addl
cmp
push
add
xor
sub
add
fld
inc
inc
add
out
inc
sti
pop
inc
add
repz
sbb
fstl
imul
jno
out
add
add
test
je
inc
xor
add
add
pop
xor
arpl
jg
adc
pop
add
jb
push
adc
and
xchg
aas
cmp
add
push
cmp
nop
inc
add
test
jle
add
mov
das
xorb
mov
ljmp
mov
sbb
std
out
rorb
mov
daa
leave
outsl
pop
push
xor
and
add
push
add
jno
inc
and
aad
sbb
inc
sbb
inc
mov
add
pop
cli
pop
mov
adc
jle
or
cmp
subb
jo
cmp
lock
mov
mov
jae
add
enter
sahf
das
add
add
or
stc
adc
xchg
dec
mov
add
sub
adc
ja
add
in
jb
sbb
push
push
mov
cwtl
sti
movsl
movsb
lds
lods
popf
push
jnp
stc
scas
xor
add
pop
incb
pushf
or
mov
cmpsb
test
in
and
pop
enter
fists
es
cltd
cs
or
clc
sub
adc
mov
pop
jecxz
xor
nop
pop
or
or
add
xor
add
insl
sbb
pop
mov
or
xchg
adc
mov
adc
add
and
out
xchg
jne
mov
and
icebp
mov
sub
sub
inc
sbb
jo
add
je
pushl
or
adc
lcall
mov
xchg
add
clc
jb
nop
xchg
add
sar
loop
push
mov
add
push
add
push
jne
aas
stc
add
inc
pop
cli
and
inc
add
add
std
or
pop
mov
imul
add
jne
repnz
jo
xchg
adc
stc
ljmp
xlat
je
cli
add
add
sti
xor
or
add
or
les
daa
add
adc
and
lds
cmp
adc
add
xchg
mov
aam
aaa
add
jle
mov
add
jno
sbb
dec
cmpb
add
jne
sbb
imul
les
mov
nop
das
clc
xchg
jns
int3
movsl
ja
insl
push
adc
add
or
sbb
jle
add
gs
jb
inc
push
pop
out
and
push
adc
sti
add
add
add
mov
fisttpll
adc
fs
jle
cmp
xorb
push
add
ja
xor
add
imul
fisubs
xlat
pop
roll
cli
scas
add
cmpsl
push
jge
xor
inc
cmp
je
push
jl
jbe
test
imul
ja
pusha
les
dec
ret
cli
jl
mov
xor
mov
and
mov
rorb
adc
ds
ret
push
sub
mov
inc
or
push
push
sbb
in
pop
sbbb
cld
xchg
add
dec
dec
stos
jg
add
xchg
add
jne
jl
fcompl
repnz
clc
jb
mov
push
daa
repz
stos
rolb
pop
lret
out
sub
pop
or
mov
iret
pushf
jno
jb
sbb
sub
and
sti
add
std
or
cmp
add
out
push
push
add
rolb
jo
inc
out
jne
femms
add
fists
repnz
mov
in
xchg
cmc
xor
xchg
subb
adc
call
or
cwtl
push
data16
flds
dec
lock
add
inc
mov
loop
add
sbb
mov
add
outsb
pushf
add
aaa
xor
and
bound
mov
lahf
fs
or
or
inc
add
adc
jbe,pt
pop
dec
cmpsl
sbb
daa
add
mov
rol
or
xor
addr16
add
push
lret
push
nop
in
addb
daa
xchg
cmpsb
dec
jg
es
cmp
push
add
mov
dec
push
xor
adc
mov
cmp
je
incl
in
adc
adc
std
push
adc
stos
int3
lods
or
mov
scas
cmp
addl
fisttps
xlat
psubsb
xchg
add
lock
scas
add
and
or
add
ret
in
add
jne
nop
mov
xchg
adc
or
mov
mov
insl
lret
dec
add
mov
arpl
jl
add
daa
mov
add
loope
xchg
cmp
or
add
jmp
lcall
mov
bound
cmp
repnz
hlt
xlat
add
or
add
ret
mov
add
loopne
in
add
adc
add
dec
add
mov
mov
add
fwait
dec
jmp
mov
lret
mov
or
popf
push
test
jne
mov
test
xor
pop
or
push
push
adc
shll
sti
inc
dec
call
popf
insb
add
pop
xchg
xor
fcoml
pop
daa
adc
insl
xlat
add
and
es
adc
sbb
and
sarl
repnz
fists
in
jns
xorb
xchg
mov
push
jae
lods
jbe
jmp
shrb
mov
int
cs
or
ja
cmp
cmp
mov
inc
sub
sbb
mov
add
add
dec
sbb
movsl
add
mov
das
xchg
icebp
add
dec
cmc
mov
sti
jnp
or
outsl
jno
cli
movsl
mov
pop
jg
jnp
pop
adc
mov
and
add
sub
stos
out
add
adc
add
pop
mov
mov
pop
adc
dec
fcom
jo
ds
jno
cmp
xchg
sbb
mov
add
push
sub
in
and
inc
data16
outsl
lock
lods
movsb
std
add
fdivrl
sub
jmp
je
push
cmp
cmp
mov
cld
jmp
jnp
insl
dec
rclb
sbb
dec
jo
jae
sub
add
in
test
mov
pushf
cwtl
imul
add
cli
into
mov
add
and
adc
dec
inc
lock
push
fdivl
outsb
add
call
out
mov
nop
mov
jp
dec
push
cmp
pusha
push
pop
xchg
repz
and
fwait
mov
test
orb
and
adc
and
xchg
add
xchg
test
add
or
out
or
mov
addb
push
jno
sub
in
movl
jo
enter
pop
js
mov
dec
addr16
mov
sbbb
sbb
add
adc
cmp
push
jmp
pop
cmp
orb
mov
push
mov
push
rclb
scas
decl
xchg
xchg
add
mov
inc
imul
add
repnz
xor
dec
lods
std
and
subb
jnp
add
sub
or
xor
hlt
repnz
or
add
mov
jp
mov
pop
loopne
repz
test
add
xor
jae
mov
daa
dec
jg
mov
push
lods
cs
pop
xchg
push
sbb
rolb
je
pop
sub
xor
clc
jp
decl
sti
aas
fs
testb
inc
rclb
test
adc
lret
fsubr
leave
xchg
sbb
mov
inc
push
jnp
dec
loopne
inc
jp
cld
add
dec
ret
cli
add
clc
adc
xor
push
xlat
add
jno
adc
outsb
call
add
mov
call
inc
test
pusha
jns
dec
cmp
mov
out
and
mov
cmp
dec
or
adc
addb
add
fs
sub
movsl
mov
push
or
mov
cmp
add
mov
jne
xor
mov
add
shlb
xchg
mov
or
sbb
sbb
fs
add
or
add
dec
jne
ljmp
in
add
push
je
cmp
bound
rcrl
imulb
push
test
add
dec
jb
and
orb
add
adc
xor
bound
dec
loopne
push
add
inc
xchg
mov
jp
xor
add
pop
outsl
xchg
xchg
clc
aad
sbb
adc
fcoms
mov
pushf
mov
xchg
stc
loope
ja
sbb
mov
and
sti
inc
xchg
in
in
sub
add
ds
test
jne
add
jns
mov
xchg
stc
add
jbe
lahf
nop
xor
pusha
inc
sbb
js
and
call
mov
lods
popf
mov
fstpt
jnp
add
add
add
push
pop
pop
inc
ss
incb
fs
test
mov
mov
mov
xorl
imul
lds
adc
or
rorb
add
cwtl
rcl
imul
add
sbb
js
inc
mov
add
jne
outsl
fs
cmp
les
xor
cmp
lock
aaa
dec
mov
cmpl
pop
das
add
jnp
xor
add
in
dec
jl
mov
add
int3
xor
sub
xchg
cmp
cmpb
ja
out
test
jbe
inc
call
sub
or
jmp
out
shrb
xor
insl
mov
push
mov
add
test
push
clc
jbe
pop
cmpb
lock
les
sub
adc
pusha
mov
jle
sbb
xchg
mov
in
xor
jne
pop
sub
jmp
fstps
addl
jbe
add
inc
xor
lea
stos
adc
jecxz
outsb
push
in
lods
addb
sbb
xor
dec
xchg
or
sbb
add
sub
pop
sbb
mov
pop
lds
clc
add
sar
test
and
loopne
add
ss
outsb
mov
pop
test
out
fistpl
sub
ret
xor
in
mov
pop
sub
jp
dec
aaa
pop
mov
pusha
and
or
add
call
add
aad
movsl
xchg
loopne
cwtl
mov
int3
sub
iret
sub
xor
popf
icebp
mov
or
xor
daa
cmc
add
mov
sti
add
sbb
lock
dec
add
xchg
int
cmp
add
push
inc
jge
insb
pop
js
pop
mov
add
mov
scas
add
mov
add
mov
nop
adc
push
fistpl
in
es
dec
ret
pop
pop
rolb
push
push
xchg
cmp
jae
jo
mov
jp
stos
fstl
mov
pop
dec
push
dec
stc
dec
add
test
push
add
jnp
icebp
scas
ficoml
and
cmp
adc
dec
out
icebp
test
movaps
pop
hlt
loope
push
mov
add
sub
inc
aad
sbb
stos
dec
testb
sbb
and
inc
cmp
or
add
add
mov
pop
pushf
pop
or
loop
fstps
mov
aaa
mov
add
mul
lock
push
sbb
mov
pop
cmp
add
in
jp
or
push
add
push
push
dec
stos
insb
movsl
add
ret
lcall
inc
lret
xor
enter
xor
mov
pop
hlt
mov
in
stc
cs
int3
add
xlat
mov
loope
aad
and
or
clc
arpl
into
cmp
scas
leave
into
or
mov
cmp
add
dec
cmp
dec
add
xchg
pop
test
loopne
push
popa
add
cld
ja
cmp
push
aas
and
cld
add
mov
addl
sub
jle
push
sbb
leave
sub
and
inc
out
js
icebp
sbb
jne
or
jmp
cmpsb
outsb
mov
add
call
jmp
dec
xor
add
mov
push
inc
add
xor
adc
mov
call
sbb
andb
xor
pop
adc
dec
xor
add
rol
das
jnp
add
inc
js
cmp
hlt
jmp
push
jno
jle
enter
jge
pop
and
xor
mov
shll
mov
bound
dec
cld
pop
dec
mov
imul
jmp
xchg
sbbb
adc
adc
mov
nop
mov
cld
js
dec
out
add
inc
test
shrl
add
mov
mov
add
jle
xor
movsb
sbb
test
pop
cld
pop
add
add
push
dec
sub
clc
sub
add
ja
test
sbb
mov
rcl
mov
xchg
rorb
push
cld
mov
clc
cmpl
sub
or
push
push
dec
and
mov
fsubr
add
js
loopne
imul
add
cmc
outsb
test
cltd
out
movl
xchg
das
add
inc
lds
lcall
mov
mov
inc
outsl
bound
or
imul
test
shrb
call
rolb
jbe
adc
pop
cld
and
inc
add
push
jge
add
fisttpl
inc
addb
aaa
jo
stos
jecxz
and
in
jno
cld
fnstcw
in
jb
pop
les
or
inc
add
lahf
jo
je
aas
add
jbe
xchg
cmpsb
mov
push
add
les
andb
mov
dec
add
xchg
std
inc
clc
mov
inc
pop
push
add
movsb
inc
push
add
push
loop
xchg
push
adc
mov
pusha
int3
add
insb
int3
lret
or
mov
mov
xchg
dec
ljmp
aam
push
lods
inc
out
jo
cmp
fnstsw
or
and
pop
or
pop
adc
fstpl
orb
xor
add
dec
mov
sbb
add
pop
push
push
push
mov
scas
insb
sbb
stos
fwait
sub
scas
imul
dec
rorb
pop
add
cmp
adc
xor
sub
add
mov
lcall
pop
inc
push
outsb
aaa
sbb
add
add
in
rcrb
shlb
xchg
mov
jbe
mov
mov
add
add
sub
lcall
mov
mov
dec
sbb
cmp
into
add
or
xchg
stos
inc
andb
add
jns
es
test
pusha
pushf
loopne
divb
orb
add
push
fisubs
test
or
sarl
jb
fs
add
dec
scas
inc
stos
or
rcl
add
mov
pop
pop
sti
faddl
add
dec
enter
negl
jle
xor
and
popf
fs
push
scas
sarb
clc
inc
mov
addl
adcb
ja
add
push
xchg
add
push
fbstp
adc
dec
sbb
add
xchg
xchg
jo
cmp
add
fcoml
mov
ja
loopne
imul
cmp
pop
adc
add
add
inc
push
mov
or
ds
pop
imul
add
repz
ja
mov
fmul
add
cmp
mov
mov
push
iret
add
xchg
outsl
fwait
lock
pop
fldt
sahf
into
adc
sub
fucomp
add
push
mov
add
cs
adcb
fmuls
adc
xchg
add
or
addl
stos
push
movsl
stos
add
inc
jne
and
push
cmp
jnp
leave
mov
push
dec
adc
push
pop
scas
pop
add
or
subb
mov
or
pop
jns
rcl
add
xchg
sub
cmp
mov
add
jp
push
push
jae
add
fsubrl
aad
clc
lods
add
and
and
jl
sub
or
dec
and
push
in
and
mov
add
mov
pushf
add
aam
rolb
insl
jl
popf
mov
mov
add
cmpl
push
sub
jne
sbb
rol
xor
lea
add
mov
sarb
or
xchg
pop
jge
mov
adc
int3
push
cmpsb
pop
repnz
mov
add
cmp
mov
cwtl
int3
cltd
enter
push
pop
inc
out
dec
add
pusha
je
repnz
sbb
jae
xor
lds
sub
adc
dec
add
jnp
xor
test
xchg
repnz
cwtl
mov
push
xlat
add
pop
nop
scas
add
scas
sub
add
orl
cli
or
js
push
sbb
mov
movsb
scas
aad
or
stos
sub
add
add
pop
je
add
lea
push
push
and
jne
add
mov
sub
imul
in
add
add
jnp
out
add
mov
pusha
inc
mov
rolb
mov
add
popa
inc
push
push
push
int
les
ficompl
jmp
pop
fadd
adc
sub
xlat
sbb
dec
add
movsl
mov
push
add
pop
xchg
imul
xchg
loopne
dec
push
add
mov
repnz
pop
xchg
xor
push
lea
test
scas
add
scas
mov
add
xorb
or
pop
pop
push
push
add
inc
fs
stos
test
xor
and
rcrb
or
or
cli
pop
add
nop
and
jg
add
mov
add
fst
movsl
fildll
mov
push
aad
push
repz
cmp
add
rolb
push
arpl
fcoml
jmp
incb
add
fsubl
es
xor
sub
and
pop
dec
push
sub
push
addr16
in
cmp
lea
arpl
dec
sbb
call
out
lcall
hlt
add
out
xchg
in
xchg
add
dec
stos
or
or
insb
inc
push
add
mov
ret
roll
push
leave
xchg
sub
lods
add
or
add
lret
pmulhuw
repnz
cmp
add
shrb
mov
cmp
dec
popf
jecxz
jle
or
xchg
add
test
js
lock
add
in
mov
mov
xchg
lret
imul
adc
pop
jae
pop
sub
pop
popf
arpl
mov
dec
add
icebp
lea
imul
movsb
mov
loop
xlat
add
pop
mov
pop
pusha
sahf
stc
add
lds
and
pop
mov
mov
lea
sub
xchg
icebp
mov
loopne
add
inc
add
call
add
inc
jo
sub
mov
dec
push
push
add
jbe
add
cli
add
incl
popf
adc
add
bound
pop
cmp
inc
or
add
add
inc
sub
es
fldl
add
and
pop
cmp
push
add
andb
cltd
or
mov
mov
mov
popa
inc
popl
je
int
ds
inc
add
mov
ljmp
adc
aam
lea
add
std
mov
jp
add
daa
sub
add
pop
ds
enter
sbb
or
insb
ror
hlt
or
add
inc
xchg
sbb
mov
mov
or
in
adc
sbb
cmpsl
inc
cmp
and
adc
push
add
icebp
add
push
data16
sbb
inc
add
add
in
fadds
adc
adc
lahf
xchg
add
add
sub
jge
str
mov
jne
lret
hlt
test
xor
rorb
out
and
add
dec
pop
popa
cmp
pop
push
jo
dec
shrb
add
insl
sbb
inc
sbb
add
test
jo
jmp
bound
hlt
adc
inc
pop
mov
dec
mov
aam
or
push
add
mov
dec
add
rorl
push
fdivrl
adc
or
addb
inc
sarb
hlt
sbb
call
adc
mov
or
lahf
push
push
mov
test
pop
or
add
push
jl
xlat
std
inc
adc
add
jle
add
je
das
adcb
sub
dec
mov
stos
out
fcomi
jmp
mov
add
rolb
fsubrs
xor
adc
cmpsb
sbb
in
pop
in
roll
jge
sub
adc
xchg
in
cwtl
xlat
mov
add
or
loope
inc
pop
xor
pop
add
jb
pop
and
xor
pop
mov
iret
lea
add
xlat
mov
inc
andl
out
xor
and
mov
inc
cmp
xor
mov
iret
dec
fimull
adc
sub
xchg
mov
add
daa
add
fsubl
pop
rol
insb
add
mov
ds
pop
ljmp
xor
outsl
mov
adc
pop
fnstenv
or
loope
push
pop
adc
add
push
lret
push
jp
jmp
add
cmp
jg
dec
pop
psubd
jo
pusha
aaa
xlat
mov
popa
arpl
nop
lahf
sbb
mov
sbb
add
cwtl
mov
and
lret
subb
push
dec
push
pop
inc
push
xor
push
dec
insb
add
in
add
nop
sub
inc
add
xchg
fs
or
fisubl
lock
push
xchg
inc
pop
xor
fs
dec
stos
xchg
psubusw
xchg
aas
sbbb
lods
mov
js
fmul
xorb
test
ret
xor
xor
inc
jge
cmp
sub
out
add
pop
xor
cmp
popf
mov
das
iret
mov
inc
push
mov
mov
scas
add
pop
icebp
dec
and
nop
pop
add
sub
add
je
gs
cmp
setne
sbb
jmp
xchg
push
in
stc
add
lods
xor
fisttps
inc
loop
add
sub
and
shll
jbe
shlb
test
push
add
aaa
fcomps
pop
adc
out
ljmp
sub
mov
lds
orb
mov
je
adc
jg
addb
addr16
add
lock
push
add
or
lock
in
aas
popa
xor
dec
fnstcw
jae,pt
test
mov
pop
xorl
sub
sbb
add
push
push
or
popf
hlt
and
arpl
push
add
and
addr16
cmp
sbb
cmp
jb
push
and
pop
push
jns
dec
call
dec
dec
aaa
sbb
add
inc
jle
xchg
out
sbb
int3
adc
lods
jnp
orb
add
ja
clc
push
and
lods
ret
leave
adc
int
cmp
push
out
nop
sbb
or
andl
adc
xchg
mov
xor
xchg
cld
mov
lcall
cmp
movsl
das
add
addl
imul
pop
and
adc
push
sbb
push
add
dec
jge
cmp
in
cmp
imul
loopne
stos
test
push
adc
je,pn
lds
cld
lock
rclb
inc
mov
fmuls
mov
aad
adc
add
mov
fsubrl
jp
rclb
push
or
mov
sarb
cmpb
mov
mov
jbe
iret
aas
pop
jnp
cmp
push
add
adc
adc
add
cmpb
subb
inc
or
and
adc
xchg
test
rolb
repnz
or
add
lret
dec
loop
and
call
cmp
mov
xorl
popl
push
dec
inc
add
cltd
cmpb
addb
cmp
push
push
lds
dec
repz
xlat
cmc
push
and
mov
cltd
adc
jmp
push
adc
lea
push
adc
and
out
cmp
stc
adcb
ret
inc
das
add
mov
sub
mov
stos
xor
add
mov
loop
adc
rclb
pop
adc
add
cmp
bound
jmp
sub
adc
add
repz
and
cmpsl
inc
inc
push
add
or
imul
mov
xchg
nop
add
sahf
movsl
stc
or
sub
rcrl
pop
repz
push
loop
je
pushw
xor
add
loopne
pop
call
repnz
add
add
lea
mov
jns
outsb
add
xor
or
bound
clc
inc
pop
xor
cwtl
push
cmp
add
rcrb
push
or
adc
add
dec
out
rol
add
jne
lahf
add
lret
push
repnz
mov
push
xchg
or
pushf
add
ds
add
jle
test
icebp
sub
push
dec
mov
adc
lahf
mov
clc
repz
and
cmpb
enter
add
cmp
jne
aaa
test
adc
lret
nop
add
push
xchg
insb
mov
jmp
add
inc
add
and
jl
outsl
push
mov
pop
mov
mov
add
adc
cmp
cmp
fisubrs
icebp
data16
mov
or
sub
xlat
add
sub
sub
add
gs
int
xchg
pushf
add
shlb
arpl
cmpsl
xchg
dec
mov
in
mov
add
add
push
pop
jmp
jle
add
fimuls
imul
inc
in
push
inc
xchg
lret
add
add
out
sub
xchg
cwtl
imul
dec
subb
push
cwtl
scas
lods
add
jl
add
jle
cmpsl
mov
repz
fsubs
cmp
inc
push
cmpb
and
xor
cltd
rolb
xchg
mov
sahf
popa
out
nop
pavgb
or
mov
xchg
call
xchg
lock
clc
jg
and
mov
aad
mov
add
pop
push
mov
pop
aam
and
in
sbb
call
hlt
pop
aad
out
fiaddl
jbe
jmp
int3
addb
jne
rolb
shr
push
xchg
mov
pop
out
dec
aam
mov
add
and
sub
repz
add
push
inc
clc
fbld
add
lock
das
push
sub
sub
push
pop
add
icebp
stc
inc
add
mov
add
sub
je
add
pushf
jg
lfs
sbb
lods
sbb
sbb
cmp
movsb
scas
and
rclb
cmp
inc
cwtl
adc
ret
add
push
pusha
cmc
aaa
mov
dec
push
xor
dec
adc
jno
or
rorb
imul
sub
mov
repnz
inc
xor
sub
add
es
mov
cld
movb
adc
incl
pandn
js
lods
add
dec
jge
xchg
daa
or
and
ja
pop
adc
add
xor
push
movb
in
inc
xchg
pop
xor
in
add
mov
dec
add
xor
mov
push
inc
xchg
adc
mov
clc
jne
sub
or
or
sbb
push
add
cmc
sbbl
pushf
das
xor
cmp
add
or
add
negl
mov
sbb
out
iret
clc
add
out
movsb
push
add
add
inc
sti
sahf
arpl
test
jbe
add
jmp
daa
pop
adc
popf
push
inc
ret
loop
or
add
sub
inc
fsubrl
push
fcomps
sub
addb
cltd
daa
add
push
clc
inc
sub
adc
lea
adc
inc
dec
dec
es
rclb
push
dec
aas
stc
mov
add
sbb
add
add
sub
mov
inc
icebp
fcomi
testb
cltd
push
or
inc
dec
cmp
xchg
sbb
sti
cmpsb
add
pop
sub
xor
adc
mov
sub
jne
mov
push
mov
mov
lea
xor
ret
jns
cs
add
pop
inc
mov
push
jmp
cld
or
push
adc
lock
pop
jae
adc
sahf
mov
movsl
movsb
in
ds
add
lret
cmp
add
or
adc
dec
negb
lea
dec
inc
shl
nop
sbb
hlt
sbb
insl
add
fadds
push
add
cmpsl
xchg
add
fwait
jb
shrd
insl
sbb
jbe
stos
xlat
testb
add
test
jno
pop
sbb
sub
cmp
xchg
jmp
add
adc
scas
and
add
cmc
leave
popf
push
jae
cwtl
lods
outsb
or
rorl
jge
push
loope
pop
push
adc
fwait
add
inc
or
add
enter
clc
out
add
jo
pushf
xchg
add
cmpl
popf
mov
int3
sahf
shll
adc
sbb
shlb
pop
pop
jge
add
orb
pushf
cwtl
inc
adc
jbe
add
and
inc
iret
mov
test
lock
sbb
add
add
test
cmpsb
gs
inc
or
pop
fdivs
loop
dec
ljmp
add
call
inc
push
add
xlat
pop
push
movsl
test
jnp
or
jne
sti
jg
fisttps
sub
stos
dec
add
cmp
je
xor
test
sbb
sbb
or
sub
mov
dec
mov
cmpsb
adc
and
dec
xchg
jno
adc
sbb
dec
push
mulb
mov
jae
push
sbb
cmp
mov
dec
inc
xor
jmp
cwtl
add
add
xchg
mov
insl
add
jmp
sbb
jmp
add
jo
jp
pop
ret
cmp
mov
imul
sub
leave
add
lock
jmp
jle
std
add
add
int
cmp
add
dec
sti
xor
xchg
or
push
adc
inc
pop
push
fiadds
add
setne
icebp
sub
and
or
cmp
rolb
and
xchg
sbb
or
pop
adc
add
jl
ret
adc
sarl
xchg
ss
sahf
and
pop
out
add
mov
mov
xchg
mov
inc
inc
ficompl
xchg
and
inc
mov
in
cmp
add
sbb
mov
lods
or
dec
jle
sbb
add
test
push
nop
and
add
xor
call
into
mov
and
decl
sbb
add
adc
sbb
push
add
xchg
ds
cmp
xchg
cmp
imul
test
or
sub
inc
inc
sbb
call
and
ret
cmpsb
enter
xchg
push
sub
or
cmp
roll
sbbb
sub
ds
pop
adc
popl
push
and
sbb
adc
test
jmp
mov
jo
xchg
jno
add
sarb
add
jecxz
cmp
popa
mov
mov
or
ss
mov
adc
enter
xor
pop
add
sub
lods
testl
jg
hlt
cmp
out
sub
aad
pop
filds
jmp
inc
mov
data16
imul
pop
mov
cwtl
rcr
nop
adc
mov
je
jns
js
jge
mov
call
rorl
mov
add
adcb
sti
mov
addl
pop
ds
sbb
xchg
jne
pop
sbb
subb
sbb
loope
cmp
add
inc
push
subl
add
push
inc
jg
inc
clc
enter
rclb
dec
add
dec
sti
roll
js
mov
xchg
shrb
sbb
and
inc
dec
add
push
cmp
add
stos
push
sub
push
add
iret
jge
shr
fsubrs
sti
incb
dec
enter
sbb
xor
and
stos
mov
push
sub
sub
adc
cmp
add
mov
mov
ja
lahf
xor
add
jno
loope
inc
add
or
cmp
mov
add
jmp
mov
pop
push
and
call
push
cmp
inc
xor
adc
bswap
iret
inc
sbb
xlat
adc
or
test
add
mov
sti
jmp
in
pushf
andb
incb
jo
nop
push
jne,pt
rolb
in
lret
jecxz
out
popa
stos
adc
xor
movsl
sub
add
dec
xchg
cmovnp
into
sbb
stos
jne
jb
add
mov
imul
lock
inc
jge
pop
testl
xor
adc
inc
faddl
mov
jmp
add
add
movb
add
inc
rclb
jo
jl
cmc
sbb
pop
cli
add
aam
or
scas
push
pusha
shll
lock
pushf
dec
add
clc
out
test
cwtl
add
xchg
nop
sub
pop
adc
or
inc
push
faddl
aas
out
cmpsb
inc
xchg
push
insb
bound
mov
out
push
sarb
inc
js
or
lret
mov
xor
dec
roll
rcrb
cmp
mov
je
xlat
sub
add
xor
pop
mov
xor
imul
call
hlt
loope
push
shrl
xchg
and
xor
jo
sbb
push
or
dec
je
test
xchg
add
mov
ficoms
sbb
add
loopne
movsb
adc
sub
movsl
and
ljmp
sbb
adc
adc
pusha
call
movsb
inc
popf
subb
mov
sti
in
add
ret
je
pop
pusha
stos
sub
and
pusha
mov
push
lock
mov
add
fildl
pop
test
outsb
test
sub
nop
pop
hlt
mov
rclb
mov
cmpb
mov
add
add
mov
jge
mov
sub
fisubs
add
push
hlt
pop
add
js
call
adc
add
je
xchg
daa
add
mov
sbb
pushf
nop
add
lahf
movsb
or
push
and
jmp
rcrl
in
pusha
pop
cli
add
leave
xchg
sub
je
nop
add
cli
sahf
inc
movsl
cmp
add
xor
cmp
add
cli
xor
dec
xchg
sub
or
pop
add
mov
adc
call
add
add
sub
adc
jnp
psubd
test
or
inc
mov
jg
lock
shrb
add
fcmovb
sub
inc
add
cltd
into
xchg
in
scas
int3
cs
add
pop
adc
sbb
mov
imull
xor
sbb
nop
loop
test
adc
push
inc
add
jmp
imul
clc
nop
adc
xlat
cmpb
inc
sbb
enter
icebp
cmpsb
dec
fsubl
push
push
rclb
lret
mov
stos
add
and
cmc
push
out
pop
int3
add
mov
inc
jge
test
or
add
lea
dec
sbb
push
outsl
adc
or
sahf
pop
jmp
and
cmp
popa
mov
fs
inc
inc
clc
lahf
je
ja
add
jl
cwtl
test
in
add
jmp
add
pop
cld
ret
xlat
out
or
inc
into
dec
dec
mov
in
xchg
aad
cs
loope
add
cmp
fadds
push
sub
cmp
add
dec
addl
cmp
jne
mov
or
pop
dec
xlat
add
xor
or
sub
lock
jmp
xchg
sbb
sub
push
pop
or
jl
les
pop
sti
test
out
fs
scas
mov
add
mov
and
cmpb
cmp
push
sbb
sbb
decl
jle
fdivrl
int
xor
not
shlb
sub
dec
and
add
add
test
iret
mov
add
xor
jl
ss
jne
jno
cld
push
cs
sbb
je
mov
cwtl
or
push
movsb
addl
mov
cltd
mov
push
mov
or
jbe
adc
inc
scas
push
add
push
popf
movsl
push
push
clc
sub
shrl
xchg
sub
mov
add
call
add
push
cwtl
cmp
out
cmp
les
jne
push
mov
jo
and
mov
add
ja
push
filds
mulb
sub
push
add
adc
lcall
jne
repnz
fadds
addr16
cld
inc
push
xchg
mov
out
pop
add
clc
add
test
push
fadds
ja
jg
mov
lock
push
xor
repnz
add
movb
add
lods
mov
push
mov
add
cwtl
sbb
stos
sub
pop
test
test
sbb
fistps
int3
test
mov
shlb
fcoms
add
repnz
loop
idivb
in
xchg
ja
negb
ret
hlt
push
sub
sbb
pop
testb
mulb
cmpsl
movsb
pop
mov
lret
shll
adc
aad
repnz
xlat
xchg
sbb
mov
dec
sti
cmp
add
pop
ret
test
xchg
add
ret
xchg
ficoml
mov
mov
mov
loop
cltd
hlt
cmpsl
pop
push
xor
or
bnd
add
call
or
pop
inc
rcrl
pop
dec
push
es
iret
inc
fldenv
test
mov
or
je
mov
adc
and
ljmp
adc
imul
leave
push
nop
pusha
mov
int3
pop
mov
or
cmp
andb
cmp
inc
add
outsl
jp
xchg
test
sbb
ss
cmpsb
adcb
mov
add
mov
dec
or
cmp
imul
pusha
pop
sub
enter
jp
dec
rorb
or
inc
xchg
pop
or
push
in
loopne
pusha
int3
fwait
inc
add
sub
and
ret
cmp
adc
mov
das
and
add
add
orl
aad
add
mov
dec
push
jg
mov
xlat
mov
add
dec
mov
jne
daa
lret
inc
shrb
add
movsb
add
rcrb
dec
push
adc
aad
in
lods
adc
sar
cld
std
add
test
inc
mov
hlt
fsubs
add
mov
adc
mov
inc
stc
hlt
xor
and
dec
scas
lret
push
mov
add
xor
jmp
dec
addr16
jae
add
lcall
mov
loop
mov
mov
btc
dec
mov
es
adcb
add
arpl
je
lcall
std
aam
repnz
xchg
leave
ret
pop
dec
loop
sub
jl
jbe
cmpsl
and
jge
cmp
cmp
loop
inc
xchg
and
add
adc
mov
mov
in
in
popf
adc
scas
add
daa
adc
lea
jmp
dec
xor
and
sub
shll
aas
rorb
hlt
add
push
jb
add
mov
scas
or
adc
xchg
adc
mov
imul
add
mov
enter
adc
lods
sub
loop
cmp
mov
nop
adc
mov
stos
ret
push
repnz
or
push
dec
add
sti
pop
ficoms
test
xchg
pop
adc
shr
cld
jl
add
and
cli
add
xchg
test
sbb
mov
fdiv
add
loopne
and
cmp
add
xlat
das
pop
push
stos
mov
outsl
add
pop
push
and
dec
push
pop
pop
sbb
lret
add
jno
jnp
add
test
add
sub
rcll
inc
dec
and
lock
mov
push
pop
enter
cs
add
iret
mov
add
adc
pop
imul
or
mov
das
add
xor
ret
iret
lahf
xor
mov
testl
xor
add
pushf
inc
dec
clc
mov
inc
jecxz
push
scas
repz
adc
mov
mov
and
in
add
dec
add
cmpb
mov
mov
jo
aam
mov
sbb
add
mov
lock
call
rolb
xor
push
or
dec
push
xchg
pusha
mov
xchg
add
mov
enter
or
mov
pop
out
sbb
or
mov
adc
jl
mov
iret
add
dec
punpckhwd
lock
xor
repz
mov
push
xchg
in
adc
imul
adc
and
cmpsb
and
push
sub
jmp
jno
sub
push
cs
pop
cmp
nop
pop
and
loope
and
fnsave
mov
and
or
daa
add
and
loop
rcr
cmp
pop
out
cmpsb
adcb
stc
test
add
push
repz
bnd
es
inc
cmp
cmc
test
les
and
inc
xor
add
jle
and
mov
inc
aad
out
inc
lods
xor
sarl
cmpb
pop
and
or
jmp
sbb
push
inc
jecxz
icebp
add
inc
fwait
cmpsb
dec
add
adc
add
push
jmp
xor
add
sbb
orb
mov
lods
outsl
sbb
push
add
adcl
inc
inc
inc
mov
imul
jle
push
lds
add
or
testb
movsb
push
mov
mov
jmp
add
loopne
movsb
test
pop
ud0
xor
mov
adc
out
ficompl
nop
or
ja
adc
je
int3
dec
pusha
sbb
test
add
orl
mov
jno
and
mulb
in
sub
call
lahf
cmovs
sub
dec
jae
mov
es
add
sbb
add
out
ljmp
push
fs
les
mov
cmpsb
pusha
sbb
add
int3
mov
mov
cmp
mov
push
adc
dec
rorb
adc
in
add
push
adc
mov
daa
fdivs
dec
stc
rdmsr
push
addb
jo
add
xlat
nop
push
bound
push
pop
inc
mov
or
and
enter
xchg
mov
xor
jle
sti
testb
jbe
pop
nop
and
out
test
movsb
xor
subl
cwtl
lods
mov
push
outsl
loop
and
fnstsw
xchg
hlt
mov
rolb
stc
je
mov
repnz
mov
and
movb
subb
stos
mov
add
push
and
cmp
int
sub
push
sbb
fdivp
add
pop
popf
mull
pop
aas
loope
lods
bnd
add
js
mov
push
inc
add
cmp
ret
add
push
or
je
pop
xor
or
xlat
enter
xchg
mov
cmp
add
cld
pop
sahf
pop
add
add
stos
xor
or
xchg
add
mov
mov
mov
dec
pop
sbb
lea
pop
cld
push
and
push
xchg
inc
mov
popf
sbb
loop
pop
or
dec
cmpsb
pop
nop
xor
test
decl
imul
jne
in
pop
ret
pop
push
add
sub
mov
and
gs
cmp
push
cld
push
sub
pop
jo
xor
enter
mov
cmpsb
add
dec
dec
cmc
adc
add
scas
daa
fstps
push
pop
push
add
jmp
push
cmp
and
dec
add
pop
jg
jb
pusha
imulb
add
ljmp
pusha
mov
add
add
insb
jle
out
mov
jns
add
rolb
add
into
add
add
loop
int3
add
or
je
sbbl
mov
add
sub
cmp
je
fdivr
push
testl
loope
pop
data16
and
push
adc
or
jmp
sbb
ret
add
xor
lock
adc
dec
aam
fabs
pusha
rcrb
pop
inc
mov
mov
mov
add
sbb
jne
sbb
out
flds
and
and
cmc
cs
push
decl
jo
add
add
and
ret
mov
jl
dec
loop
and
sbb
cwtl
and
fsubp
inc
insl
hlt
add
imul
sub
test
leave
psubsw
mov
pop
add
mov
inc
addb
add
ljmp
pop
std
pop
pop
add
push
lods
sbb
pop
mov
adc
js
out
jg
fstpt
call
mov
sbb
add
repnz
rcll
and
iret
out
add
and
xor
pop
and
rolb
mov
std
lret
cld
fiaddl
pop
jmp
sbb
pop
rorl
aas
in
lahf
mov
mov
mov
shrl
cwtl
push
inc
sbb
int3
jmp
mov
add
addr16
test
repnz
repnz
repz
cmp
cmp
jns
jns
jns
testl
cmpl
add
leave
stos
add
daa
inc
arpl
orb
incl
sub
add
lock
pusha
add
outsl
enter
movsl
push
fistl
cmpsl
rcrb
jl
mov
sahf
outsl
icebp
bswap
leave
pop
movsl
and
mov
dec
add
repnz
adc
arpl
imulb
jb
mov
push
iret
ljmp
sub
add
cmp
dec
int
mov
add
cs
cld
ret
push
add
inc
jl
mov
adc
add
dec
dec
xchg
push
add
loop
xor
sarb
pop
int
sti
loop
add
xchg
inc
mov
jbe
add
hlt
inc
fwait
add
shlb
inc
pop
nopl
pop
ficoms
pop
add
lock
lea
mov
cmpsl
shl
cmpsb
out
inc
shr
dec
add
insb
mov
sub
out
push
test
sub
mov
add
int
rorl
sub
rol
inc
dec
orl
mov
fisubs
or
xor
push
add
lock
xchg
in
loopne
mov
cs
out
loopne
pop
lahf
lods
insb
cmp
sub
jae
pop
jno
psubusw
cmp
add
cmp
loopne
insb
orl
out
sbb
sbb
mov
push
add
aaa
adc
les
aad
or
add
or
add
lcall
add
and
jne
or
cmpsl
cwtl
or
mov
add
push
push
add
loope
ljmp
and
add
inc
out
pop
in
mov
add
lret
mov
push
jns
adc
cmp
jmp
push
cs
add
and
int
add
shlb
je
shl
aad
or
and
pop
arpl
or
sti
adc
sbb
loope
mov
hlt
inc
sti
fdivr
or
dec
roll
push
sti
outsb
imul
ret
xor
adc
xchg
shrb
sbb
inc
mov
mov
inc
movsl
add
test
je
push
les
hlt
test
repz
mov
xor
jp
jns
cmove
push
mov
cs
lock
add
and
add
mov
pop
mov
inc
cs
adc
add
xchg
push
jnp
sbb
test
add
popa
mov
xchg
mov
jmp
cwtl
add
sbb
inc
loopne
xor
movsl
mov
mov
jb
pop
fcoms
cmc
repz
aas
ret
and
lods
add
fisttpl
aaa
lahf
incl
and
inc
add
sub
je
add
maxps
js
add
jmp
dec
push
aam
leave
add
nop
push
je
outsl
cmp
gs
inc
mov
jnp
aaa
and
shlb
cmp
daa
popa
xchg
add
dec
insl
mov
jo
and
xchg
daa
adc
sub
outsl
clc
or
add
loopne
or
vmovaps
sub
jb
hlt
ss
add
mov
lock
fildl
add
test
xchg
mov
rclb
fdivrl
sub
sbb
pop
or
test
adc
idivb
add
inc
int3
addb
cmp
jbe
movsb
icebp
pop
mov
enter
sub
notl
adc
pop
push
adc
rcrb
repz
ja
add
xchg
or
jnp
or
push
shrb
inc
test
popa
cwtl
das
cmp
jg
aaa
or
mov
out
insb
dec
inc
leave
push
cld
sub
adc
mov
cmp
adcb
icebp
pop
inc
into
push
sub
outsl
nop
push
add
or
cld
cmp
dec
add
xchg
cmp
test
pop
sbb
jmp
push
mov
mov
test
mov
les
dec
add
pop
hlt
push
add
inc
idivl
add
inc
ret
mov
test
aam
js
cld
add
pop
sahf
stc
in
adc
mov
dec
add
and
add
in
scas
add
or
mov
fiadds
and
inc
fists
loopne
out
pop
xchg
in
rclb
pop
shl
jns
call
shrb
add
sarb
mov
xchg
lods
add
inc
lods
loope
jb
jne
pop
sbb
pop
cmp
fwait
mov
hlt
sub
dec
lret
add
dec
mov
or
add
xchg
push
ret
aam
mov
add
add
xor
sbb
push
xchg
adc
mov
addb
adc
add
test
test
stc
jns
mov
mov
jne
add
lock
sbb
mov
jnp
add
andb
push
push
popf
xlat
pusha
sahf
pop
mov
dec
mov
adcb
pop
jg
and
xchg
push
pusha
jmp
pop
pop
dec
in
xchg
pop
add
jbe
incb
dec
in
inc
or
adc
push
or
cmc
mov
push
gs
add
dec
push
push
add
shl
cwtl
mov
jae
mov
jnp
les
cld
scas
cmp
loope
lock
lret
in
nop
mov
add
xor
adc
push
sub
pop
pop
mov
mov
mov
fs
or
nop
xchg
lret
adc
push
jecxz
inc
inc
mov
mov
out
insb
push
lret
push
pop
ja
push
dec
and
call
fdivrp
aam
pushf
pop
or
sub
out
mov
call
add
cmp
and
xchg
cmovno
arpl
inc
xchg
aam
or
add
jle
cmp
or
testb
loopne
call
add
in
aad
mov
add
push
outsl
div
inc
mov
shl
movsb
or
nop
lret
add
seto
adc
ret
push
nop
roll
mull
cmc
cmp
bound
or
jg
lods
fs
pop
in
movsl
jno
repnz
iret
out
dec
sahf
inc
fildl
aaa
mov
insl
sub
or
add
jnp
out
adc
xchg
cld
cmpsl
in
add
jnp
mov
add
jo
mov
cmp
sahf
repnz
dec
push
orb
push
cs
shr
dec
sub
inc
dec
jmp
fists
sub
mov
or
sbb
iret
add
pop
mov
cmpsl
add
test
and
in
push
pop
sub
stos
add
sub
cmpsl
sub
clc
inc
dec
mov
push
or
scas
cmp
aas
xor
mov
lock
add
bound
add
xchg
xchg
mov
cmc
sub
cltd
push
lahf
mov
sbb
or
pop
loope
add
mov
dec
add
add
hlt
lods
imul
jne
add
inc
fcmovnbe
add
jl
testl
add
dec
xor
or
ja
adc
sbb
test
iret
repnz
call
jae
invd
dec
icebp
dec
mov
add
jecxz
pop
es
test
add
xchg
mov
jle
fmuls
popf
add
xchg
psubd
mov
xor
enter
icebp
pop
fwait
dec
fcoml
jnp
xlat
xor
pop
in
pop
xchg
mov
loopne
ss
adc
into
push
push
push
xor
in
call
or
xchg
mov
sub
jno
loope
sbb
jmp
xor
stc
push
mov
loopne
lahf
add
xor
ret
daa
push
inc
rsqrtps
mov
add
rorb
leave
or
mov
adc
and
sub
orb
lock
and
dec
lcall
add
add
and
add
xchg
pop
push
test
jp
add
sub
aam
xorb
dec
xor
xchg
dec
push
in
mov
sbb
pop
inc
iret
das
fwait
dec
push
push
imul
add
jns
rolb
inc
mov
sbb
xor
add
imul
push
sub
clc
or
faddl
test
gs
adc
or
sbbb
pop
jle
movsl
js
or
push
popa
cmpb
cmp
jg
es
inc
add
clc
bound
mov
mov
cmp
movsb
sub
xchg
cmpb
pop
xchg
push
test
adc
and
pushf
dec
jne
pop
jbe
enter
loope
mov
xor
aas
or
xor
add
pop
sub
mov
mov
pushf
dec
lods
fistpll
rcrb
mov
cmp
add
mov
add
fidivl
shll
pop
sbb
out
cld
mov
pop
xchg
test
dec
add
adc
xchg
loop
sbb
ja
lea
cmp
dec
arpl
xchg
add
mov
pop
jae
inc
enter
xor
inc
pop
adc
lock
scas
ret
lea
sub
enter
sub
adc
fs
mov
andb
decb
rolb
sbb
in
sbb
mov
push
add
test
imul
call
nop
or
hlt
subl
ret
add
out
lret
xorl
fidivs
andl
in
xchg
and
cmp
fbld
cmp
lods
rcrl
add
pop
jp
dec
sbb
adc
test
inc
add
mov
push
add
mov
and
add
fs
mov
movsb
push
inc
inc
subb
shl
add
xchg
sbb
call
cmp
xorb
jne
push
cwtl
push
add
add
hlt
mov
and
shrb
mov
cmp
xor
sbb
sub
jle
lods
jno
push
mov
cwtl
icebp
dec
xorl
or
je
sbb
pop
lret
push
pop
aad
shll
in
push
push
decl
and
add
or
inc
lea
add
ja
jae,pn
rolb
push
push
jne
arpl
aam
adc
push
repnz
aaa
test
daa
je
and
inc
push
movsb
rcrl
cmp
or
imul
sahf
movsl
and
mov
pop
in
sub
mov
jge
add
ds
add
push
loop
xor
add
mov
xchg
add
movb
sub
jge
push
push
push
push
sbb
js
mov
loope
add
adc
mov
add
inc
sbb
xor
push
add
fimull
adc
pop
nop
imul
add
add
ret
leave
mov
jbe
cmp
lcall
or
jge
sbb
sub
pop
je
mov
lcall
push
adc
ret
or
dec
test
je
rcrb
adc
push
xchg
jmp
mov
je
sub
iret
dec
cmp
dec
jg
lock
xor
jne
pop
add
sbb
loope
icebp
add
add
adc
and
dec
dec
rcrb
inc
je
cmpl
push
xor
or
mov
cmp
mov
xchg
es
mov
and
xchg
or
mov
mov
icebp
mov
pop
push
pop
inc
mov
out
mov
push
ss
lret
adc
or
xor
mov
sbb
add
test
dec
mov
lret
icebp
test
adc
adc
add
xor
cli
lea
mov
in
bound
adc
iret
add
js
sub
test
jno
and
adcl
jle
shlb
andl
sub
sbb
mov
sbb
clc
nop
gs
add
call
repz
fadds
jecxz
sub
loopne
add
insl
add
orb
scas
add
fildll
and
rcrb
dec
dec
iret
jge
loopne
mov
or
cmp
sti
xor
push
popf
push
push
sub
out
clc
loopne
gs
popa
ret
jo
add
mov
adc
xchg
or
add
pop
add
and
sbb
pop
pop
adc
xchg
enter
pop
xchg
mov
dec
xor
jns
jg
dec
add
inc
aam
jo
popf
cmp
add
cmpsb
ret
test
add
imul
faddl
loope
push
cmpsl
je
inc
pop
add
dec
add
in
fiadds
stos
mov
xchg
sti
sub
sahf
in
movl
dec
shlb
rcrl
push
cmc
cmp
inc
sbb
add
imul
mov
or
mov
rol
cmp
inc
jmp
mov
add
test
add
xor
orb
sarl
inc
dec
in
insl
pop
adc
repz
jecxz
test
push
mov
dec
loop
adc
insl
add
test
mov
adc
xchg
pusha
xor
sbbl
mov
fldenv
add
mov
outsb
add
shlb
pop
add
adc
push
xchg
adc
es
mov
fimuls
adc
inc
and
push
call
pop
sub
adc
cmp
andb
addr16
cmp
fiaddl
cwtl
adc
cmp
pusha
mov
setl
push
shl
add
add
or
iret
xchg
or
pop
ja
lods
xor
sub
js
nop
add
mov
and
add
add
sub
xor
push
inc
jecxz
lods
cmp
inc
cmp
add
push
mov
jle
push
add
jge
out
orl
jle
jbe
je
mov
filds
xorb
jge
mov
mov
test
add
stos
cmp
in
jo
add
scas
enter
cmp
clc
sub
add
xchg
and
adc
sbb
hlt
ds
push
addb
pop
mov
jns
adc
dec
jne
add
mov
mov
mov
inc
or
ja
add
xor
cli
test
dec
mov
push
xor
push
xchg
jae
inc
xchg
add
sub
les
imul
xor
add
mov
hlt
ds
repz
lods
int3
xchg
or
or
mov
add
mov
enter
into
call
cmp
fldl
mov
fistpll
mov
je
sti
rolb
test
repz
or
pop
sub
subb
adcb
mov
or
fisttps
or
jl
je
mov
xchg
sbb
jmp
je
sarl
rolb
sbb
add
nop
loop
stc
cmpsl
push
push
jbe
data16
movzwl
sarl
or
mov
call
es
sbb
mov
inc
cmp
ja
pop
lea
sbb
out
lret
jmp
or
mov
bound
pop
popa
je
jmp
sub
add
mov
lock
test
cmp
xchg
sbbb
pusha
and
out
or
add
lods
add
mov
test
aaa
add
out
sbb
jns
add
mov
mov
lock
adc
or
push
dec
movswl
mov
or
cmpb
mov
aam
push
add
add
leave
jne
and
cld
insl
cmp
inc
cmpl
inc
mov
imul
inc
and
xchg
adc
inc
add
add
movsb
push
adc
sbb
add
lds
stos
mov
dec
aaa
add
inc
or
add
lods
cmpb
decl
jne
gs
add
out
lahf
add
or
jnp
adc
lcall
inc
add
sub
mov
inc
out
dec
clc
ljmp
lds
sub
or
fbld
xchg
cmpsl
cld
jne
mov
mov
call
mov
mov
popf
rep
add
pushf
stc
jmp
cwtl
addr16
or
std
cld
add
lcall
out
dec
adc
sbbb
ffree
lcall
das
in
daa
lock
jmp
flds
test
adc
push
and
sbb
sbb
dec
add
popf
push
lcall
dec
jnp
mov
sub
daa
cmc
mov
cli
iret
mov
test
fdivrp
cwtl
int3
pop
jb
add
loopne
cli
adc
dec
sbb
add
push
call
add
out
xor
in
or
cmp
pop
sbb
sub
fstl
cmp
fcmove
lds
pop
sub
leave
pop
mov
and
in
jnp
add
movsl
nop
dec
dec
mov
push
inc
pop
jnp
test
push
jno
ja
add
jl
push
add
or
add
ficomps
lcall
push
jge
pop
call
jnp
push
cli
add
fistps
cmpsl
cmpsb
add
jo
scas
add
cmp
cmp
inc
addl
loope
int
bound
mov
in
push
rcr
lock
clc
jmp
aam
insb
xor
scas
repnz
add
in
pop
hlt
mov
or
adc
leave
loopne
add
rolb
stos
cmp
add
adc
add
mov
pop
mov
push
mov
push
sbb
shrl
cwtl
testl
outsb
push
adc
jbe
incl
mov
mov
out
sub
add
xor
fwait
add
xchg
push
pusha
inc
aad
add
add
inc
pop
fwait
add
lea
lods
xor
jecxz
ret
mov
add
loope
or
daa
add
xor
jns
sub
mov
repnz
lock
xchg
add
cwtl
ja
or
and
popa
rolb
bound
orl
cmp
pop
add
sbb
jp
out
add
add
pop
das
xlat
xchg
lods
loopne
dec
cmp
lret
cli
add
mov
std
adc
jecxz
loope
adc
nop
adc
or
inc
rolb
es
xrelease
sbb
jo
add
pop
adc
sbb
dec
and
or
jge
mov
and
adc
pop
add
push
add
or
lods
push
lret
cmp
fildl
jg
cld
adc
out
add
out
push
pusha
xchg
loopne
or
sbb
adc
jns
rolb
aas
xchg
pop
cmp
dec
shl
fwait
in
dec
aaa
add
jecxz
ja
inc
push
add
addb
sub
dec
mov
and
mov
mov
add
sbb
or
hlt
dec
mov
add
std
lret
jo
add
in
pop
icebp
adc
loopne
add
daa
xor
gs
mov
loopne
cmp
lret
aad
cmp
fdivl
add
jns
insb
jecxz
dec
cmp
add
popf
xlat
loopne
fs
cs
test
insb
mov
sbb
mov
jg
lahf
pop
loopne
test
andb
xor
jne
fidivrs
pop
call
rol
adc
and
daa
dec
xlat
stc
int
add
iret
ds
mov
test
xor
mov
rolb
std
push
xor
and
mov
add
jbe
nop
dec
add
cmp
ljmpw
adc
lock
xchg
cmpsb
bswap
adc
mov
cmp
pop
ret
xor
xlat
add
adc
data16
lahf
rorb
xchg
mov
jo
nop
jmp
js
jmp
add
or
shlb
je
cmp
xchg
jne
add
test
ds
out
pop
out
in
fsubs
mov
addr16
adc
into
push
add
mov
pop
add
dec
push
jge
adc
or
mov
push
jle
sahf
mov
into
adc
mov
dec
add
push
rcl
fwait
mov
cmpb
add
push
inc
inc
pop
call
dec
pop
shll
repz
mov
lds
pop
mov
sbb
add
imul
jbe
insb
inc
add
jo
gs
jae
pop
movb
jp
hlt
imul
add
push
ja
add
add
or
sub
aaa
das
cmpb
mov
sub
add
call
add
test
add
xchg
and
leave
dec
rolb
mulb
adc
inc
mov
mov
cmp
enter
and
invlpg
or
mov
add
fisttpll
xchg
mov
mov
or
xchg
das
mov
mov
inc
mov
push
adc
movsb
enter
loopne
xor
or
pop
std
jp
add
cmp
mov
call
pusha
mov
mov
xchg
lods
repnz
xlat
ljmp
inc
dec
push
adc
dec
dec
or
inc
push
div
ret
dec
and
rorl
xchg
loopne
mov
cmp
dec
mov
or
add
mov
pop
test
addb
jne
sbb
test
jmp
and
enter
adc
nop
movsb
mov
push
cmp
addb
cmp
stc
add
mov
shlb
pop
xchg
adc
je
mov
push
loopne
cmp
jmp
jg
push
adc
out
sub
add
mov
and
dec
push
adc
cmpsl
or
add
xor
sbb
jmp
push
pop
imul
add
or
cmp
scas
mov
pop
imul
call
fnstsw
sbb
sub
and
test
outsb
in
sub
add
out
cmp
rcll
roll
in
dec
adc
sbb
aad
add
in
mov
jnp
add
call
add
adc
cmpb
cld
mov
lret
mov
or
add
loopne
adc
adc
out
mov
push
mov
add
push
gs
sub
add
scas
add
cmp
sub
dec
push
lcall
add
mov
movb
lret
es
xchg
jg
add
sbb
enter
inc
or
adcb
and
call
rolb
sbb
roll
inc
mov
xchg
jl
stos
ja
add
and
adc
pushf
push
xchg
add
jo
xchg
jle
cmp
jns
loope
adc
dec
push
xchg
mov
pushf
movsb
or
jmp
or
jnp
fists
aam
clc
mov
jecxz
add
ret
stos
mov
mov
jmp
and
xorb
xor
lods
adc
add
test
dec
sub
outsl
xor
mov
jae
inc
push
jnp
mov
mov
rol
mov
or
push
and
xchg
add
popf
aad
sbb
mov
inc
add
mov
push
lahf
cld
xchg
stc
faddl
cmp
cli
or
pop
pop
dec
or
adc
jbe
add
cld
shrb
js
add
adc
sub
mov
jo
inc
sub
xor
dec
add
add
sub
loopne
add
loope
cmp
clc
loop
add
lods
in
mov
mov
sbb
xor
or
cmp
pop
test
mov
cltd
stos
ss
xchg
fucomi
jae
popf
add
xor
inc
in
std
dec
cmp
aad
dec
rcrb
aam
cmp
push
pusha
testb
aaa
add
or
inc
pop
add
pop
iret
xchg
push
stos
ret
je
clc
mov
std
add
movsb
dec
fwait
adc
cld
add
jmp
mov
mov
xchg
stos
pop
andl
inc
fdivr
xor
add
in
out
inc
xor
and
push
int
mov
add
xor
insb
mov
push
sub
loop
mov
add
cmp
add
div
ja
sbb
lock
imul
in
adc
fidivrs
xor
add
call
mov
cmp
add
add
test
in
jmp
add
loop
sbb
xchg
add
jle
pop
jno
out
sbb
add
dec
push
add
ja
push
push
push
insb
jns
shl
xlat
call
or
jmp
out
add
in
push
aad
mov
push
loop
jb
cmp
fildl
add
mov
fs
mov
cmpsl
cmp
movsb
inc
test
sbb
adc
push
push
or
pop
or
or
push
testl
aas
add
movntq
out
and
add
inc
inc
add
out
jle
dec
pushf
popf
in
mov
fimuls
jge
sub
rep
add
jmp
adc
mov
xchg
fcoms
add
pop
pop
xchg
lcall
ja
ljmp
orl
jbe
jmp
or
loopne
push
icebp
out
outsb
or
pop
test
shll
adc
pop
sub
test
jmp
add
shlb
test
xchg
xchg
fcompl
outsl
xor
jl
std
lcall
push
add
lods
add
daa
pop
dec
add
pop
out
xor
jmp
call
in
add
rcrb
push
ljmp
icebp
lock
aam
pop
mov
cwtl
add
jmp
movsb
mov
mov
and
leave
and
jns
push
mov
jb
test
add
sbb
cwtl
xchg
pop
add
dec
jo
add
loope
push
pop
push
ret
add
mov
in
loop
fnstsw
pop
push
pusha
inc
jo
add
pop
lea
lcall
in
out
sub
sub
inc
mov
sbb
cs
mov
movsb
cmp
xor
inc
inc
inc
add
cwtl
mov
popa
js
fcompl
pusha
add
xor
stc
cmc
pop
jnp
add
push
repz
rolb
pop
in
jmp
or
mov
mov
or
jmp
add
dec
test
fnstcw
int3
lret
cmpsb
xchg
nop
inc
mov
addr16
jns
jge
add
adc
dec
dec
add
testl
iret
pop
testb
pop
mov
addb
pop
jmp
jae
xorb
xor
lcall
add
pop
or
adc
or
xchg
push
pop
cmp
add
out
loopne
outsb
loop
sbb
add
cmpsl
jmp
add
cmp
mov
add
inc
jle
mov
int3
add
pop
fcoml
add
out
arpl
cmp
stc
add
jmp
rcrb
sub
and
xchg
test
push
decb
fldl
jmp
lods
lods
xor
test
movsb
sar
cmp
cmp
ror
ja
add
jp
bound
loope
into
arpl
fsubrl
xor
dec
loope
mov
sar
add
sbb
dec
adc
or
in
in
iret
scas
mov
in
lods
hlt
aad
push
add
call
push
add
add
lods
stos
andl
jno
enter
pushf
adc
gs
fmull
lock
pop
mov
pop
or
dec
fsubl
ret
rolb
rol
xchg
add
fwait
pushf
test
add
pusha
mov
add
fcmovu
and
ja
cwtl
das
xor
mov
xlat
add
ret
xchg
outsl
jae
mov
add
test
sbbb
add
call
jns
cli
ds
mov
adc
mov
xor
dec
inc
dec
dec
ltr
icebp
filds
jecxz
xchg
data16
movsb
mov
add
xor
mov
add
add
push
dec
shl
fiaddl
fmuls
in
jo
add
push
dec
push
cmp
sti
jae
add
pusha
stc
add
fs
cld
lahf
adc
cmp
xchg
mov
add
mov
sub
verw
and
jecxz
add
in
or
int
es
xor
std
stos
scas
in
or
cmpsb
mov
push
ljmp
leave
lret
rolb
movsl
pop
add
mov
enter
cmp
add
fiadds
inc
ret
ret
ror
mov
add
lcall
test
in
dec
out
adc
or
add
cmpsb
xchg
fidivs
cmp
inc
lret
add
lds
mov
add
jmp
stos
mov
and
pop
add
jge
inc
and
inc
ja
inc
cmp
add
and
sbb
inc
dec
xor
add
cmp
movsb
movsl
inc
shr
and
add
test
sub
lahf
mov
dec
xchg
dec
push
pop
jnp
fwait
sbb
sub
mov
xor
mov
adc
adc
loopne
clc
sbb
xor
jbe
jp
cmp
orl
mov
pop
lock
dec
jle
popf
mov
add
fsubp
lcall
add
lods
leave
lret
mov
hlt
mov
cmpsb
ret
and
mov
lea
loop
or
lds
push
add
cmp
arpl
shlb
daa
or
loope
mov
jns
stos
pop
add
lods
addr16
dec
xchg
add
syscall
add
ja
adcb
out
dec
loop
xor
std
push
test
cmp
cld
in
cmpsl
add
xor
add
dec
dec
dec
or
mov
cmpsl
add
imul
cmp
and
lock
loope
call
movl
cltd
jnp
mov
add
xor
or
jecxz
movsb
add
aad
add
lea
cmpsb
mov
sub
testb
call
flds
dec
adc
add
enter
push
mov
xchg
insb
lds
lods
xor
inc
push
mov
push
aaa
rolb
call
mov
out
jo
ret
add
lods
or
xor
xchg
jecxz
lock
frstpm(287
cmp
insb
adcl
ja
pushf
dec
add
dec
jnp
fcom
mov
add
ret
rcll
icebp
mov
jns
js
pop
fidivrs
add
subb
add
aas
add
inc
icebp
insb
ret
in
add
xchg
movsl
or
or
xor
mov
push
jle
mov
jns
insb
clc
lods
dec
sub
add
push
jecxz
xlat
aad
add
push
mov
scas
add
dec
rcl
movsl
add
loop
add
leave
or
and
mov
rcl
jge
adc
add
pushf
add
out
decl
push
xchg
push
mov
add
mov
lret
adc
or
pop
cmp
in
rolb
inc
inc
dec
or
pop
inc
inc
inc
xorb
ficompl
out
mov
or
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
faddl
inc
lock
aad
push
subl
dec
push
sbb
filds
ds
push
add
sbb
call
inc
add
lods
mov
pushf
and
in
mov
mov
dec
cmp
add
andb
or
cmp
jno
mov
insb
inc
sbbb
mov
ljmp
sub
push
dec
or
dec
mov
jae
add
in
cmp
neg
int3
ja
push
out
add
js
mov
adc
stos
outsb
mov
mov
popa
sarl
jne
int3
in
add
or
add
rcrl
mov
pusha
mov
add
xchg
xchg
out
jmp
mov
data16
fildl
test
mov
add
adc
or
add
cli
mov
cmp
and
sub
add
fwait
jae
jns
inc
out
add
stc
shrb
add
loope
bound
aam
add
add
xor
aad
push
add
lahf
out
mov
add
cmpsb
lcallw
decb
add
mov
or
and
into
pop
push
shr
ljmp
out
jmp
aas
add
lret
inc
daa
cli
lock
mov
add
sti
dec
add
add
out
in
and
std
pop
sbb
mov
and
sbb
dec
insb
clc
add
lret
lret
jg
cmpsb
add
movsl
repz
push
stc
ss
jle
lcall
insl
mov
push
add
adc
pusha
call
sub
rolb
pop
and
xor
cli
xchg
test
push
pop
and
push
jle
mov
mov
and
fstp
add
lret
adc
and
pop
ljmp
add
andb
dec
add
cmp
xchg
or
or
add
lock
rorl
xchg
lahf
add
stos
add
push
adc
idiv
jns
add
ljmp
mov
or
add
inc
orl
or
push
adc
xor
pusha
push
or
add
add
dec
cmc
addr16
loopne
jo
into
rcr
or
pop
and
popa
push
pop
sub
cmp
mov
sbb
push
xchg
jae
sahf
add
inc
pop
add
addb
xor
icebp
sbbl
adc
lods
push
mov
add
insb
adc
xchg
in
add
aam
enter
lea
arpl
mov
add
movsb
inc
push
lds
sbb
std
mov
pop
addl
mov
mov
xor
add
xor
add
cmp
jmp
loope
cmp
mov
add
push
sub
jno
or
pusha
jne
add
xchg
adc
add
jmp
lds
les
add
mov
xchg
add
pop
in
add
push
fdiv
xor
add
call
pop
sahf
add
jns
cmp
imull
push
add
outsl
jne
cmp
lahf
popa
aad
inc
or
add
xor
pop
jo
fmull
sbb
pop
mov
add
and
push
loopne
push
ds
xchg
sub
jmp
push
sti
lahf
add
push
call
xor
push
xchg
out
add
shrb
dec
cmc
mov
jnp
jb
aad
addl
and
push
lret
loopne
add
call
lock
pop
iret
cmp
out
je
ss
nop
pop
push
idivl
lret
cld
xchg
call
add
clc
nop
inc
sbb
inc
jnp
lea
mov
aam
add
pop
sbb
es
clc
push
es
sbb
sahf
mov
mull
loope
inc
cs
fdivrl
add
cmpsl
xlat
mov
lret
push
pop
mov
cli
pusha
pop
and
clc
in
sbb
movsl
adc
lock
jbe
and
cs
push
lret
fcmovnb
or
adc
xchg
ljmp
je
dec
jne
mov
push
lcall
arpl
inc
adc
aaa
call
cmp
add
push
add
jno
inc
xor
push
or
test
or
jl
mov
add
arpl
outsl
jb
add
push
ret
sbb
aaa
xor
jp
nop
insl
jbe
push
xchg
ds
js
inc
lcall
push
pop
push
add
mov
aaa
hlt
sub
pop
sbb
jge
scas
insb
lds
loopne
pop
mov
pop
xor
roll
jl
test
or
out
movsl
aas
aas
adc
rorb
push
add
lcall
add
inc
mov
push
pop
repz
mov
and
add
fsubr
sub
jnp
add
jae
popa
and
inc
sbb
sub
jmp
inc
xor
jb
out
out
out
cmp
jae
popa
add
sub
in
frstor
xchg
push
cld
jae
aaa
push
insl
lods
add
imul
adc
inc
or
ret
add
dec
pop
ljmp
add
jb
lea
lods
sub
mov
mov
call
push
pop
dec
jmp
test
sub
push
lock
xor
sbb
aam
fmull
psubd
xchg
sti
int3
cmp
lret
pop
or
lods
test
notl
aam
cmc
cmp
mov
insl
add
push
sub
add
into
ds
add
repz
movsb
add
cwtl
stos
or
xchg
jae
xor
jg
cmp
dec
add
pop
adc
adc
push
add
std
and
inc
add
add
into
hlt
mov
and
cmp
mov
add
adc
sub
lock
or
lahf
leave
adc
or
jg
into
xor
add
pop
sub
add
cmp
ret
mov
add
fiaddl
loope
test
out
cmp
dec
xchg
sti
xor
and
sbb
dec
xchg
adc
xor
out
add
js
es
push
adc
rorb
adc
out
xchg
cmp
adc
aas
sub
jae
xchg
add
or
add
mov
pop
lea
icebp
inc
mov
add
lods
sbb
ret
xchg
addr16
add
sbb
add
adc
push
sub
cld
push
movsb
jns
adcb
sub
add
xor
ret
push
std
test
adc
icebp
fimuls
cli
arpl
sbb
addr16
pop
lea
popa
ds
or
shlb
inc
fldl2t
fsubrs
mov
jne
push
and
or
xchg
cmp
adcb
push
add
stc
adc
mov
sub
cld
scas
jo
dec
jno
add
cmp
aas
add
lret
sub
data16
jp
push
lea
popf
sbb
stc
lcall
pop
mov
mov
daa
jo
addl
push
negl
push
ret
inc
rcll
int3
jge
add
xor
pop
sub
ret
add
sub
roll
je
js
add
mov
jl
add
enter
add
mov
cmp
add
xor
push
loop
rorl
push
mov
add
cmpw
jns
cwtl
lock
cmp
add
push
fnsave
add
xor
movsl
push
fwait
push
pusha
add
cmpl
lcall
pop
decl
scas
imul
add
nop
cmpb
mov
hlt
pop
test
iret
cmp
addl
add
mov
ffree
mov
push
data16
testb
add
jo
fiaddl
add
fst
fadds
jnp
jmp
pop
adc
mov
nop
xchg
dec
push
in
xor
stos
add
mov
pushf
pop
push
push
hlt
sbb
jo
sub
pop
cwtl
dec
and
faddl
mov
mov
lahf
sbb
les
mov
sub
mov
push
or
pushf
shl
stc
nop
add
add
loopne
cmp
pop
je
push
mov
push
rorb
xor
add
pop
adc
sub
out
mov
push
outsl
mov
in
add
add
int3
or
fidivrs
and
mov
push
cmp
jae
pushf
popf
pop
add
mov
inc
int
popa
insb
das
add
jo
cld
dec
add
add
cli
or
sbb
add
pop
sbb
jo
pop
mov
mov
nop
pusha
cmp
sbb
and
loopne
mov
jg
movsb
movsl
pop
pushf
mov
add
imul
sub
mov
movb
add
test
or
sub
call
stos
sahf
add
xor
inc
add
lret
popf
mov
add
xlat
inc
mov
add
sub
push
add
mov
mov
shll
push
sti
out
in
xorb
repz
leave
xor
sub
pop
add
lret
fldl
in
jns
leave
int3
add
mov
pop
in
loopne
or
mov
call
arpl
add
test
popa
decl
dec
fimuls
xor
sub
xchg
add
add
push
ret
or
movsb
enter
mov
push
pop
jno
cmpsl
push
ljmp
cmp
ret
or
sbb
add
lock
cwtl
inc
add
mov
cld
lea
add
push
vmread
push
aaa
add
clc
popa
jmp
add
fmulp
inc
pusha
jno
add
xchg
adc
cmp
jb
or
inc
push
in
add
jbe
inc
cmp
fisubrl
aad
int
or
lea
test
pop
lods
dec
mov
add
int
add
and
jl
unpckhps
or
xchg
pop
mov
push
add
pop
imul
jmp
adc
pop
shrb
in
or
push
dec
loopne
lret
cmp
mov
sti
out
rorb
shr
xor
out
xchg
cmp
add
dec
mov
pop
pop
mov
adc
and
jbe
in
cld
idivb
ss
add
xchg
les
mov
push
add
shll
push
and
jns
add
es
cli
xchg
pop
pop
fstpl
inc
add
sub
rorb
cmp
das
jb
pop
stos
push
fiadds
add
mov
cli
in
clc
lock
scas
or
fisubrl
pop
in
hlt
jne
cltd
xor
xor
shlb
ret
loopne
adc
pop
aam
xchg
cmp
hlt
add
jne
cmc
sbb
adc
add
mov
aad
cmp
aaa
add
adc
sub
jmp
and
xchg
adc
cmp
jge
mov
push
fistpll
or
daa
cmc
add
jo
dec
jb
in
mov
xchg
pop
mov
and
xlat
add
sbb
inc
add
adc
je
xchg
movsl
add
sbb
mov
sti
pop
add
or
jl
mov
jge
inc
mov
adc
aaa
add
cmovne
leave
jnp
add
sub
into
jle
nop
insb
mov
add
mov
test
and
xor
push
add
push
out
ret
int
out
adc
js
mov
xchg
pop
add
fstpl
sub
and
jp
mov
mov
push
add
int
and
xchg
pop
add
push
adcl
mov
aas
gs
add
das
inc
hlt
stos
mov
loop
loopne
xor
test
cmpsb
inc
xor
adc
inc
mov
inc
sub
std
shll
pop
inc
xor
lock
es
add
or
push
add
mov
and
jb
mov
mov
mov
stos
iret
loopne
cld
mov
cmp
std
cmp
je
or
orb
dec
sbb
add
lcall
add
aam
pop
dec
jmp
sbb
adc
out
sbb
push
push
xor
push
inc
inc
jns
mov
js
dec
adc
cmp
push
orb
cmpb
dec
lret
adc
sbb
cmp
pop
push
cmp
adc
mov
pop
mov
mov
adc
or
push
sbb
das
aaa
aam
sub
mov
add
mov
mov
cmp
inc
sub
enter
scas
frstor
push
dec
dec
add
add
push
adc
push
xor
xchg
sbb
inc
add
mov
arpl
inc
fs
hlt
jae
xchg
push
popa
add
and
arpl
lods
fcoml
daa
scas
out
add
push
adc
cmp
xor
adc
les
add
add
js
mov
insb
push
add
add
pop
in
out
or
popa
fs
outsb
enter
and
cmp
cld
andb
sbb
cmp
ljmp
push
adc
xchg
jge
cli
pop
pop
jecxz
int3
mov
pop
roll
mov
xlat
or
add
ljmp
add
in
push
clc
mov
stc
cmp
outsl
push
jle
add
jecxz
in
out
xchg
cmp
xchg
and
lock
dec
add
and
push
loop,pt
subb
out
mov
test
push
mov
inc
sub
sbb
movsb
sub
adc
jge
add
lret
cmpsl
lret
loopne
into
sub
xchg
bound
cmp
push
pop
jp
add
push
les
arpl
stos
sbb
loope
add
out
add
shlb
push
mov
iret
orb
mov
mov
xchg
lahf
add
mov
push
data16
add
popl
pop
adc
cmp
sbb
adcb
in
jmp
test
movsl
sub
xchg
or
das
push
pop
out
add
imul
jp
xor
je
or
sbb
add
sti
or
jo
add
pop
pop
ret
jmp
mov
xor
adc
mov
test
jecxz
outsl
add
push
jb
ficoml
fisttpl
xor
sgdtl
mov
repnz
inc
mov
sub
mov
bound
jne
and
push
push
loopne
clc
dec
add
loop
mov
jnp,pt
cmp
jl
js
pop
mov
adc
pop
add
dec
nop
mov
imul
fildl
inc
lock
pop
push
push
dec
aaa
movsb
test
xlat
jnp
popa
push
addr16
xor
ds
sub
in
in
test
add
loopne
push
jp
aam
sub
mov
or
or
add
inc
pop
mov
cmc
jp
mov
movsl
sti
add
dec
jb
in
lods
and
push
add
and
adc
loope
lret
loop
sbb
adc
leave
add
jne
fs
mov
mov
add
arpl
lret
jns
pop
insl
ss
imul
repnz
lds
add
xchg
repz
pop
sbbb
fs
jo
add
adc
sbb
js
les
pop
sbb
push
lea
add
dec
sub
ss
mov
mov
sub
add
jl
pop
push
pop
jge
inc
cmp
jne
pop
cld
cs
xlat
add
test
jge
add
pusha
iret
or
imul
push
push
jne
add
data16
cltd
leave
xchg
add
sbb
adc
pop
cmp
int3
in
adc
and
add
dec
add
adc
sbb
into
je
mov
sbb
aaa
dec
addb
lods
lahf
add
out
push
and
add
cwtl
les
adc
es
movsl
testb
loope
mov
and
clc
adc
add
jae
jmp
sub
mov
cmpsl
fdivrs
dec
xchg
cmp
mov
sbb
push
lret
cmp
add
mov
jl
mov
mov
xchg
loopne
inc
outsb
cmp
add
adc
je
push
lcall
dec
push
add
shl
jbe
add
sub
pop
pop
mov
loop
pop
add
cmp
loopne
lock
ja
and
movsl
adc
add
dec
scas
neg
stc
add
fwait
cmpsb
test
or
add
lock
sbb
add
adc
add
gs
add
pop
out
pop
add
add
sub
daa
in
xchg
add
lahf
inc
aas
out
push
mov
call
mov
adc
roll
dec
iret
subl
cmp
add
dec
adc
in
ret
dec
mov
andb
inc
lea
mov
jmp
add
jne
stos
bound
xsha256
cmpsb
push
push
testb
jp
es
testb
jmp
and
adc
shll
fdivrl
jne
inc
mov
sarb
adc
add
or
add
jmp
movsl
inc
dec
mov
sahf
movsb
nop
dec
add
mov
dec
fistps
cltd
dec
add
clc
pop
mov
push
add
jecxz
test
cmp
movsb
adc
push
push
add
cmp
adc
push
mov
inc
insb
mov
lods
mov
hlt
cmp
add
in
inc
and
je
push
or
cmp
or
movb
xor
xor
jmp
push
mov
push
dec
shrb
add
or
push
xor
out
stos
jecxz
sub
data16
out
sub
or
loopne
mov
inc
pop
dec
imul
shrb
data16
outsb
pusha
call
add
jne
push
cmp
mov
add
xchg
inc
rcrl
test
pop
mov
iret
incb
mov
cwtl
xor
outsb
adc
mov
add
push
fsubr
push
test
dec
add
pop
call
arpl
pop
push
lret
dec
movsl
shll
pop
or
rcrb
jnp
add
fistps
push
dec
xchg
ss
cld
dec
add
popf
ret
xchg
push
dec
movl
cmpsb
adc
lock
aam
int3
add
ret
leave
inc
jge
rcrb
aad
mov
or
push
pop
mov
pop
add
daa
mov
or
add
xchg
cltd
push
clc
push
pop
xchg
subb
mov
andl
and
add
and
xor
cmp
add
dec
lods
jb
add
push
or
add
add
shufps
push
cmp
loope
jo
push
sti
call
dec
into
pusha
imul
xor
aas
fs
cmovb
addl
or
fcompl
cmp
out
jno
xchg
mov
test
mov
js
gs
pushf
mov
mov
shlb
nop
mov
push
stc
repnz
imul
shlb
mov
adc
cmp
call
pop
jb
loopne
addr16
fiaddl
fisubs
nop
aam
inc
push
dec
ss
rorb
sti
add
or
and
cmp
stos
add
sbb
pop
ds
inc
popa
push
sbb
sbb
sbbb
mov
push
jns
hlt
les
xlat
sub
xor
incl
jp
or
sbb
cli
mov
in
xchg
mulb
push
cmpsb
lods
jmp
add
movsb
scas
into
fdivs
lock
jle
pushf
sub
roll
lods
sub
out
cmp
sbb
das
sub
test
inc
cmpb
ja
push
push
dec
mov
sub
sbb
sbb
add
mov
xchg
cltd
cmp
sub
call
adc
mov
add
lds
cwtl
in
add
pop
dec
inc
fsts
push
sbb
or
sub
push
mov
lods
xor
push
sti
push
jmp
mov
xor
aaa
sbb
push
fs
push
push
jnp
cmp
stos
pop
inc
push
adc
or
pop
jb
test
dec
ret
aaa
add
in
test
arpl
push
jbe
adc
clc
sti
add
fs
insb
xor
mov
loope
js
pop
and
pop
mov
push
movsl
jmp
test
sub
daa
aaa
in
jl
adc
xor
xlat
arpl
pop
fistpll
pop
jns
repz
xor
ss
xchg
add
cld
pop
pushl
inc
add
or
inc
hlt
lock
jns
add
sbb
add
xchg
js
xor
popf
adc
mov
xor
adc
mov
test
imul
lods
movb
in
adc
adc
movsb
add
cld
pop
jl
mov
ret
fistpll
add
shl
out
adc
fcmovnbe
or
test
or
notb
jmp
mov
and
adc
adc
shl
clc
ja
and
sbb
pop
cmpl
xchg
pop
push
aam
xor
dec
fcomps
repz
add
out
mov
inc
test
push
dec
xor
xor
sti
adc
je
fstpl
inc
pop
and
xorb
xor
add
ja
je
sbb
cmp
inc
xchg
and
dec
inc
inc
insb
and
jl
inc
mov
add
dec
lret
movsb
mov
call
xor
adc
and
js
stc
in
mov
adc
test
push
add
into
or
adcb
add
xor
mov
pusha
inc
jg
cmpl
mov
stos
insb
sbb
add
aaa
add
or
ret
push
xor
ret
hlt
cld
sub
push
stc
repnz
or
sbb
jg
test
push
das
push
push
sub
xchg
bswap
ja
jmp
adc
cmp
adc
jne
pop
inc
jle
mov
xor
sbb
pusha
add
sbb
andl
stos
or
fdivs
dec
push
nop
cmp
add
mov
pop
push
idiv
add
pop
add
jo
jg
aas
orl
orb
or
add
add
pop
test
sarl
lock
sbb
pop
lcall
testl
das
stc
inc
mov
xchg
adc
fisubrs
pusha
fsubrs
dec
sbb
xor
in
rorb
xor
test
add
xchg
std
add
xchg
add
mov
add
mov
pop
push
adc
jmp
enter
sub
es
fnstcw
cmp
pop
mov
add
movsl
shll
and
adc
add
mov
add
adc
adc
imul
imul
mov
mov
repz
ret
adc
adcb
dec
dec
add
or
cli
inc
cmp
movsl
jg
cmp
sub
test
push
lcall
pop
xchg
aaa
and
enter
stos
das
mov
inc
push
pusha
adc
pop
push
push
jns
push
bound
sub
cmpsl
pusha
add
cwtl
repnz
lea
xorb
pop
test
push
xor
mov
inc
adc
fisubrl
sub
cwtl
ds
test
xor
mov
shlb
adcl
push
dec
jns
sub
xor
add
and
mov
dec
cld
jmp
dec
cmpl
lds
div
add
repnz
hlt
jb
jle
shlb
sub
cmpsl
fcomp
mov
add
sbb
orb
call
mov
or
popf
ficoml
sub
andb
das
clc
push
xchg
push
pop
jmp
call
adc
add
jns
dec
dec
ret
mov
jae
adc
ret
add
and
cld
or
dec
sub
push
jg
or
inc
std
bswap
add
add
adc
adc
rclb
aas
sub
jns
mov
xchg
dec
push
lret
add
inc
lods
daa
xchg
sbb
lock
lret
push
push
in
adc
add
jns
mov
mov
ljmp
nop
jle
adc
loopne
fstps
inc
mov
pop
pop
cmp
mov
add
dec
mov
or
test
rolb
mov
or
pusha
inc
out
loope
dec
repz
adc
sarb
mov
add
jmp
rolb
imul
shrl
sub
add
sub
mov
or
imul
jecxz
mov
enter
adc
dec
lods
xchg
lea
sahf
jo
xchg
cs
scas
loop
movsl
mov
jnp
int3
and
es
jp
add
je
xchg
inc
pop
rorb
push
jno
mov
fsubp
orb
xchg
int3
jo
jl
pop
xchg
sub
pop
push
add
adc
mov
decl
xchg
ja
jae
or
add
test
aam
cmp
and
test
mov
ret
cmpsl
xchg
sbb
sub
dec
and
test
out
shlb
dec
mov
outsl
sbb
add
mov
jb
lcall
mov
push
fsub
sahf
movsb
orb
jp
out
out
jle
jp
push
imul
inc
pop
lea
add
jmp
lds
pop
mov
push
add
xchg
out
test
out
jb
add
xchg
inc
cmp
dec
cmp
sbb
lea
dec
jmp
lcall
mov
movsb
arpl
mov
sub
scas
addb
sbb
or
movsb
or
seta
loopne
adc
add
loopne
outsl
testl
ljmp
in
inc
test
lea
or
sub
notb
test
stos
movsb
cmp
sbb
add
adc
pop
dec
adc
add
xchg
imulb
rclb
int3
jo
push
add
add
andb
pushf
dec
or
mov
cmpsb
ljmp
adcl
popl
pop
nop
and
mov
out
dec
mov
and
add
mov
into
cltd
clts
nop
pop
mov
test
mov
xlat
add
lahf
sub
sahf
les
add
sub
clc
lea
push
add
adcl
xchg
push
xchg
call
push
ret
dec
lret
cmp
out
mov
fstpl
add
pusha
ljmp
decl
sbbb
xchg
paddw
pop
sub
and
and
cmp
lret
into
adc
ret
fdivr
or
mov
lea
add
cmp
or
push
lahf
jmp
jl
xchg
insb
mov
addb
inc
add
pop
repnz
iret
adc
sarb
pop
jle
inc
lds
add
jmp
xchg
mov
or
sbbl
or
or
mov
flds
pop
and
mov
add
push
mov
mov
aam
fsubrp
adc
test
daa
aas
and
push
inc
add
repnz
pop
nop
inc
mov
jno
push
or
cmp
cli
mov
pop
les
rol
sbb
popf
xchg
lret
push
icebp
add
ja
clc
in
pop
ss
mov
push
add
push
fadd
pop
inc
push
scas
in
imul
push
dec
enter
or
dec
add
sbb
out
cmp
inc
mov
pop
orl
out
mov
and
and
decb
inc
dec
adc
fucomip
or
add
push
pusha
xor
sbb
pcmpeqd
cmpsl
cmp
mov
cmp
mov
pushf
add
je
scas
pusha
xchg
aas
add
and
lret
mov
jae
incb
mov
pop
loope
or
xor
jmp
clc
and
pop
dec
and
js
jecxz
enter
sub
loop
inc
and
mov
enter
inc
mov
cmp
sbb
loop
cmp
xchg
mov
lret
mov
je
out
imul
adc
dec
lods
xchg
mov
inc
aas
addb
pop
sbb
dec
dec
and
popf
mov
mov
mov
add
push
jne
jns
cld
addr16
movsl
jno
mov
dec
sub
out
pop
xchg
adc
scas
test
xor
mov
and
out
loop
mov
mov
add
repnz
fnstsw
and
icebp
cld
mov
fimuls
orl
add
add
inc
add
or
jne
add
pop
imul
xor
bound
clc
jle
xor
inc
push
cmp
addl
adcb
sbb
stc
rorl
addb
sub
pop
dec
orl
movsl
sbb
xor
push
and
jp
rclb
nop
cmp
lcall
cmp
cwtl
sti
and
mov
jmp
out
cmp
dec
incl
cwtl
in
and
sahf
and
add
fdivl
loopne
dec
out
add
dec
and
out
mov
add
jo
mov
dec
es
inc
add
push
mov
or
inc
jmp
push
jmp
test
mov
and
das
add
push
dec
jno
ljmp
add
xchg
bound
setns
loop
push
nop
in
das
sbb
push
cmp
mov
imul
cs
push
inc
insb
pop
xor
lret
push
jmp
std
adc
daa
imul
xchg
and
dec
and
enter
xchg
dec
jnp
decl
mov
int3
mov
sbb
sub
adc
xchg
sahf
and
jge
push
or
pop
fdivrs
dec
loope
dec
dec
jne
js
add
xchg
inc
les
jg
in
jb
sbb
rclb
ror
scas
les
mov
dec
das
std
jns
pop
sub
and
loopne
hlt
mov
and
add
or
xchg
xor
push
jmp
clc
in
out
jl
jge
add
adc
cmp
push
xchg
cmpsb
and
add
lcall
or
add
push
icebp
daa
scas
dec
jno
cmp
add
xchg
mov
test
dec
ss
add
cmp
pop
in
outsb
cmp
orl
cmpsl
sbb
cltd
lret
imul
jg
mov
mov
add
jle
fmul
fadds
mov
mov
xor
xor
add
sbb
mov
adc
dec
and
dec
arpl
xchg
fsub
ret
mov
movsb
jne
pop
cmpsb
cmova
nop
fcomi
out
push
jns
add
jmp
inc
or
or
push
inc
inc
sbbb
mov
into
mov
inc
les
cmp
outsl
xor
sub
inc
adc
fmull
xor
xor
push
cmpsb
add
sub
xor
jbe
dec
fldcw
pop
xor
cltd
and
inc
inc
sahf
add
pop
mov
xor
add
out
sahf
add
jp
mov
add
ds
test
or
outsb
das
cltd
ficoms
mov
inc
xchg
xor
sbb
cli
mov
cmp
dec
sarb
add
and
test
lds
dec
xchg
jne
push
sbb
lret
xchg
add
jg
pop
adcl
in
dec
and
or
out
fldl
movb
shrb
in
les
or
movsl
sub
movb
add
and
add
mov
mov
mov
mov
dec
sub
add
je
sbb
cmp
repz
xchg
add
dec
loop
inc
add
sub
or
aas
sti
enter
mov
lods
adcb
das
xorps
xchg
add
jl
cmp
pop
pushf
sub
adcb
test
mov
xrelease
lret
ja
pop
cwtl
ret
nop
aas
add
jae
mov
lds
nop
cmp
push
push
pop
push
add
inc
cmp
and
movl
imul
xchg
orb
dec
adc
jmp
ss
inc
aaa
dec
es
cmp
jg
inc
pop
mov
cmp
inc
jg
add
out
and
arpl
sub
sbb
xchg
nop
push
rolb
or
iret
rcrb
add
and
daa
or
inc
or
lods
xor
shl
sbb
repnz
inc
xchg
test
adcb
out
sub
mov
and
mov
lcall
cmpsl
das
add
cmp
dec
cwtl
iret
mov
jecxz
andb
adc
stc
aam
shl
pop
dec
push
push
popa
add
outsl
or
push
xor
imul
mov
xor
xor
pop
pop
sub
jmp
adc
pop
int
gs
enter
ja
rcr
cmp
cmp
push
pusha
push
mov
mov
pop
add
in
cmp
adc
call
push
repz
test
mov
loop
shrb
repz
imul
add
divb
add
inc
fsubl
std
and
lea
xor
in
sbb
das
mov
fmuls
adc
adc
pop
mov
das
xchg
inc
pop
add
xor
clc
pop
add
push
sbb
out
sub
adc
movntps
pusha
popa
mov
popf
hlt
push
iret
loopne
movsl
xor
mov
filds
imul
hlt
sarb
jge
rdmsr
adc
incl
xor
jg
add
mov
ret
xor
mov
movsb
xchg
lret
outsb
mov
add
popa
insl
pop
fistpl
and
cmp
xchg
add
xor
orb
jne
push
pop
dec
pop
xor
push
aaa
clc
rclb
add
pop
xor
adc
imul
xchg
pop
lahf
add
sub
adc
les
fidivl
sbb
push
ljmp
and
dec
push
xchg
enter
add
ret
fimuls
add
aas
fucomip
das
add
inc
stc
outsb
inc
hlt
fs
sbb
repz
movsl
call
sbb
or
cmp
popa
das
lock
add
push
push
cmp
dec
and
imul
pusha
push
cmp
sub
jne
es
pop
push
lret
iret
jb
mov
cmp
dec
cmc
dec
dec
adc
gs
adc
cmpsb
mov
jl
mov
xchg
sbb
push
push
scas
add
cltd
push
inc
mov
mov
add
xchg
add
andl
addl
movl
push
jmp
mov
clc
cmpl
add
or
sbb
or
pop
dec
push
fnstcw
adc
xorb
mov
cli
jno
mov
daa
rcrb
jl
std
cmp
mov
ljmp
dec
mov
pinsrw
push
repnz
xor
xchg
mov
out
adc
jl
and
jge
jmp
faddl
repz
or
inc
xor
stos
adc
xchg
xor
inc
popl
lret
mov
adc
inc
mov
clc
dec
inc
dec
mov
out
sarb
and
cmp
dec
ficompl
jo
mov
xor
popf
push
push
out
sbb
pop
xchg
icebp
stos
and
inc
jg
sbb
add
sbb
inc
scas
push
jmp
add
mov
inc
roll
or
outsl
ljmp
sahf
sbb
test
divb
in
mov
ds
sub
ds
and
lret
push
cs
adc
adc
xor
xor
and
inc
outsl
xor
inc
pop
inc
mov
adcb
xor
lods
cmp
je
mov
daa
jg
push
dec
pop
icebp
dec
jmp
add
jg
add
jbe
aaa
cmc
fisubrl
daa
add
ss
inc
and
lret
jg
add
push
adcb
inc
rorb
inc
orl
mov
xchg
sub
ja
mov
divl
sarl
jg
xchg
bnd
mov
pop
push
aas
das
testb
jmp
lods
adc
test
xorb
movsl
or
addb
inc
outsl
jmp
je
sub
xchg
enter
add
push
fadds
pop
imul
add
lods
push
add
jo
or
or
push
cmp
jmp
test
pop
mov
rolb
and
movsb
add
test
add
push
fldl
bound
add
mov
ds
in
xor
ficoms
mov
jmp
mov
lock
push
cmpsl
decb
test
gs
adc
lahf
push
add
mov
popl
cs
loop
ret
pusha
cmp
push
inc
filds
inc
pop
or
pusha
and
ljmp
aad
int
add
push
add
test
cmpsl
xor
stos
pop
aam
cmp
and
add
inc
popf
cmp
dec
push
dec
lcall
dec
fstps
add
mov
dec
movl
pop
pusha
pop
xchg
gs
add
or
add
fs
cld
jbe
insb
adc
adc
add
cwtl
dec
pop
add
movsb
test
les
mov
jo
test
lret
xchg
push
lods
push
lahf
push
inc
and
add
rcll
shlb
mov
or
mov
sbb
aam
in
mov
lea
mov
movsb
pop
ja
pop
divb
jne
mov
xor
int3
ja
clc
xchg
mov
sbbb
or
and
inc
dec
aaa
ja
fdivrl
add
shlb
cmp
bound
sub
jmp
push
inc
pop
sub
aam
out
dec
xor
test
cmp
mov
dec
mov
inc
and
stos
into
push
push
inc
call
add
lods
stos
lret
das
cli
dec
adc
enter
cmp
in
mov
shrl
insb
push
push
add
les
add
inc
adc
sbb
push
lock
out
push
pop
pop
push
enter
jmp
cmpsb
mov
pop
cmovg
popa
ret
sbb
fisubl
test
popa
ret
test
rorl
mov
add
or
or
sbb
and
add
adcb
and
and
mov
cmpsb
adc
adc
orl
add
dec
add
fs
lds
jmp
jl
call
test
fdivs
fs
shld
add
iret
dec
out
adc
mov
add
aaa
adc
mov
or
push
and
dec
jae
push
aad
xchg
inc
mov
int
fildl
test
adc
adc
push
sub
pop
add
mov
mov
push
adc
add
and
mov
pop
out
pop
or
inc
pop
push
xor
addr16
add
mov
pop
sub
std
pop
fs
sbb
cltd
jmp
fistpl
add
and
ret
mov
shll
fistps
mov
xchg
xor
xchg
xor
add
adc
add
psubb
adc
sahf
mov
xchg
add
and
call
mov
jp
loope
add
lock
cli
inc
nop
jg
or
je
sbbl
add
ss
incb
push
sbb
mov
cmp
mov
and
loope
ss
stos
cmpsl
push
cmpb
cmp
xor
test
call
popa
mov
nop
add
add
and
xor
pop
pushf
in
dec
adc
mov
adc
jns
mov
add
lds
push
mov
popa
mov
add
orb
mov
add
cmpsb
in
out
outsb
into
mov
mov
clc
cmp
orl
out
adc
add
cmp
and
adc
ret
aad
xor
adc
or
add
test
pop
push
or
in
scas
add
or
faddl
mov
je
fidivrs
or
or
mov
and
fcompl
addr16
nop
push
decl
pop
test
lret
lret
add
mov
xchg
push
js
jl
loopne
push
pop
mov
add
cli
mov
movsl
daa
cmp
mov
fucom
inc
add
push
xor
cs
inc
add
leave
shlb
stc
rorl
add
and
or
sbb
popf
or
dec
xor
xchg
loopne
and
mov
inc
adc
rorl
pop
jg
lret
mov
mov
in
jmp
dec
adc
push
sar
mov
fisttpll
push
enter
jmp
sbbb
fstps
cmp
lahf
pop
and
mov
aas
outsl
addr16
aas
xchg
imul
ret
jno
inc
mov
or
bound
je
std
test
pop
pop
cwtl
sahf
add
push
outsb
pusha
jg
pop
fistpll
out
xchg
outsb
xchg
push
pop
int3
inc
pop
add
andl
add
mov
in
addb
add
push
rcr
pusha
add
adc
cmp
popf
korb
les
mov
add
and
fs
and
mov
je
push
rclb
add
or
add
stos
cmc
jns
shrl
lahf
add
add
cmpsb
ficoms
dec
mov
hlt
mov
sbb
xchg
lea
add
shlb
and
insb
addl
call
pop
loopne
sbb
dec
dec
push
push
or
movsb
mov
bound
ja
iret
cli
dec
pop
insb
push
hlt
jl
inc
mov
addb
test
sar
push
adcl
pusha
or
and
cmp
imul
or
add
add
aas
loopne
sub
add
push
cmp
cmp
jge
adc
add
mov
xor
mov
jmp
or
loopne
or
xor
push
xchg
test
dec
dec
fcompl
add
inc
or
mov
adc
push
and
in
rorb
push
add
add
in
insl
pop
cmp
adc
sbb
aad
add
rcr
notb
pop
cmpl
js
push
adc
iret
ljmp
add
dec
xchg
inc
xor
rcrb
push
cmp
cmp
add
mov
int3
je
pop
mulps
test
and
inc
or
ds
test
jb
fs
inc
sbb
nop
add
shl
test
pop
inc
mov
push
inc
pusha
adc
xchg
ljmp
dec
add
movsb
push
in
add
ljmp
add
sub
xchg
cmp
dec
je
int3
push
adc
pusha
cwtl
cmp
shlb
push
xchg
add
mov
ss
test
ds
cli
adc
repnz
adc
fsubl
xor
loope
push
scas
rol
lret
xor
add
aad
or
popa
outsb
sub
jmp
aam
sub
cmp
sbbb
xchg
aad
mov
inc
adc
push
add
push
sbb
add
mov
push
icebp
call
in
add
sub
cmp
divb
dec
add
add
das
jl
adc
cmc
inc
clc
add
inc
outsl
loop
and
dec
add
roll
mov
shlb
and
add
outsl
lds
inc
or
dec
add
es
cmpl
pushf
xchg
add
fildll
add
and
jo
outsl
mov
pop
clc
push
add
dec
pop
lcall
add
stos
sub
test
xor
xor
add
stos
flds
and
enter
push
in
pop
movb
mov
mov
inc
mov
or
ret
movlps
out
sub
mov
jb
and
cmp
xor
add
add
test
bound
adc
cld
das
jne
fstpl
stos
addb
out
xor
add
cmp
xor
lods
mov
and
sub
cmp
daa
mov
movsb
push
xchg
add
or
cld
or
add
jge
sahf
loope
add
fimull
cli
push
add
xchg
out
sbb
xchg
inc
lahf
sbb
unpckhps
mov
sub
orl
daa
inc
inc
orb
cmp
mov
push
pop
lahf
cmpsb
loopne
es
xchg
sbb
add
mov
add
je
lea
add
and
add
aaa
leave
or
xchg
pinsrw
rorb
dec
add
ja
pop
add
loop
leave
lods
call
js
mov
or
add
movsl
popl
xlat
or
ljmp
mov
pop
lret
addr16
test
jmp
pop
mov
rolb
out
push
enter
ret
into
loopne
mov
add
and
std
adc
loopne
fcoms
outsb
add
sbb
int
subb
pop
xchg
sub
pop
test
test
xor
aad
pop
daa
dec
aaa
add
sub
push
mov
ret
mov
cmpsb
or
or
adc
mov
add
mov
fcoml
add
fcomps
lret
push
add
adc
loope
in
rorb
gs
sub
stc
cmp
scas
cmp
add
pop
or
or
add
int3
adc
test
add
in
dec
out
fdivs
and
out
add
stc
xchg
cld
fistps
icebp
outsb
scas
or
mov
add
xchg
or
repnz
push
unpckhps
add
adc
add
xchg
fbstp
adc
call
jne
add
fistps
add
add
into
aam
inc
pop
popa
mov
fsubl
dec
add
aad
sub
adc
add
jl
andb
fsubs
loopne
add
fildl
and
inc
pusha
mov
xor
push
or
or
add
inc
call
in
bound
aas
imul
test
movsb
sbb
inc
and
imulb
inc
das
mov
sti
adc
test
shlb
clc
inc
pop
adc
pop
jae
sbb
in
push
das
orl
cmp
ja
flds
enter
add
or
add
xchg
add
scas
stc
add
lock
inc
cmp
ljmp
shlb
mov
insb
sub
fs
imul
xchg
pop
add
sub
add
add
dec
jne
add
push
mov
jge
orb
pop
pop
mov
xchg
inc
test
mov
add
sub
and
or
mov
fs
sbb
daa
pop
pop
pop
stos
inc
mov
ljmp
jb
test
daa
xchg
add
ja
out
cli
add
sub
pop
sahf
sub
jmp
inc
fiadds
insl
push
adc
lahf
lock
xor
jnp
add
xor
mov
push
pop
inc
cmp
cld
dec
arpl
inc
fsubs
adc
add
pop
mov
pop
inc
jmp
jb
aas
jl
mov
adc
sarb
adc
add
fcmovu
mov
rcll
mov
and
cmc
les
adc
sbb
dec
jmp
rolb
sti
xor
sub
cmp
adc
push
add
sub
test
das
adc
push
shll
add
sbbl
xchg
jmp
dec
mov
and
sub
loope
loop
add
sbb
ja
and
add
les
testl
add
repnz
pushl
dec
inc
sub
add
int
jmp
lock
xor
arpl
add
jb
add
fs
inc
movsl
jge
add
mov
pusha
add
push
cs
mov
xchg
pop
lds
add
in
mov
jns
add
stos
test
rclb
call
mov
ret
mov
add
push
sub
outsb
call
push
ja
aas
mov
jae
testl
pop
std
sbb
loop
add
push
add
push
dec
and
adc
push
clc
push
dec
and
loopne
test
jne
add
cmc
xor
pop
dec
push
xchg
add
adc
jmp
push
pop
mov
dec
mov
pop
test
or
add
mov
dec
pop
xchg
jb
jnp
add
dec
sub
add
push
dec
jp
mov
cli
lret
call
loopne
sub
jle
adc
insb
cld
add
lcall
bound
das
ds
ret
loopne
inc
pop
test
movl
je
add
daa
mov
add
pop
loopne
sahf
cs
test
and
dec
add
sbb
add
jne
ja
in
sbb
popf
cld
add
xchg
je
dec
and
dec
insb
incb
push
push
sub
jle
jo
faddl
xor
mov
pop
mov
lods
inc
inc
or
add
push
sahf
dec
popf
stos
aam
sbb
push
and
scas
loop
adc
jp
sbb
out
mov
mov
inc
enter
cld
call
roll
jns
rolb
xchg
in
cwtl
fsubr
jbe
mov
addb
add
adc
out
dec
shl
inc
jle
add
mov
clc
pop
movsl
mov
add
jmp
pusha
xchg
add
mov
sahf
inc
push
add
xchg
and
pushf
dec
xor
mov
add
pop
les
jge
ffreep
jo
xchg
or
lock
inc
in
jno
add
xchg
cmc
nop
inc
pushf
add
aad
sbb
adc
lods
inc
daa
in
adc
mov
xor
hlt
add
jle
aam
mov
dec
add
pop
inc
adc
mov
mov
add
rep
push
mov
leave
mov
jb
mov
push
call
push
xchg
mov
mov
adc
pop
add
iret
insb
shr
add
dec
ja
pushl
pop
push
adc
lcall
pop
test
stos
add
xchg
push
xor
push
cmpsb
pop
xchg
loop
dec
sbb
js
jnp
add
sbb
clc
ror
or
nop
cwtl
jle
dec
add
cld
hlt
push
es
sbb
jo
xchg
add
lcall
cmp
orb
int3
scas
adc
imull
pop
pop
std
and
xor
xor
daa
int3
adc
add
mov
jne
sbb
xor
xchg
and
test
lods
arpl
sbb
subb
push
call
add
inc
push
add
push
sahf
aam
sub
add
sub
out
jmp
mov
daa
andb
in
xlat
call
imul
ret
mov
xchg
sbb
ret
out
push
add
js
and
pop
outsl
xchg
mov
cwtl
xchg
mov
inc
dec
or
lahf
cmp
inc
cmp
popf
dec
lock
cmp
adc
mov
pop
pop
clc
cmp
sbb
sub
das
mov
mov
mov
in
push
sub
lods
xor
lcall
push
in
pop
and
add
pushf
test
out
dec
cld
dec
adc
ret
mov
rcr
pop
repz
pop
xchg
adc
inc
xchg
add
sar
pusha
mov
and
or
sbb
add
cwtl
fldcw
add
fsubr
jae
dec
jge
add
lods
pop
or
add
or
sarb
lds
shll
xor
xor
dec
push
add
xchg
pop
mov
xchg
mov
cmpsl
in
pop
cmpsb
add
stos
dec
sar
btc
dec
push
fdivl
mov
pop
int3
sbb
and
jmp
orl
xor
stos
call
je
xor
pusha
mov
add
fadds
cmp
cld
or
stc
bound
dec
mov
push
mov
dec
shlb
sub
jae
dec
cwtl
test
mov
iret
mov
jge
add
cmp
pop
sbb
inc
mov
rorb
pushf
push
add
andb
add
pop
dec
push
cmp
scas
out
adc
mov
pusha
add
in
sub
jb
add
jp
add
dec
out
ret
and
sub
push
incl
and
and
inc
mov
sbb
dec
je
add
dec
jne
cltd
add
cmp
in
add
sbb
addb
cmpsb
add
subl
mov
cmp
int
pop
mov
popa
push
mov
or
dec
jne
gs
dec
rcrb
jo
add
fsubr
add
jge
add
add
mov
clc
xchg
cs
add
push
sub
stos
mov
rdtsc
add
shr
fwait
daa
ljmp
adc
arpl
add
popf
sub
insl
jo
imul
add
and
push
adc
leave
xor
out
push
jmp
repnz
inc
jno
push
jbe
adc
fs
push
out
das
ds
adcb
jb
adc
call
addr16
push
lret
xor
enter
dec
adc
imul
cs
add
inc
cwtl
xor
ret
add
jl
lds
jnp
inc
push
outsl
dec
jne
mov
jo
push
mov
pop
cld
loopne
mov
inc
lret
pop
std
xorb
xor
aad
add
movl
and
jno
imul
arpl
lret
mov
add
jge
out
mov
daa
lock
add
mov
gs
sbb
cmp
add
xchg
and
nop
add
enter
cltd
adc
add
xor
add
les
jp
mov
hlt
jmp
adc
jo
cmp
test
into
in
call
cmpsl
adcb
jmp
daa
mov
insl
push
pop
adc
repz
cmp
data16
or
js
add
je
ljmp
fimull
mov
int
inc
rolb
add
add
xor
inc
add
dec
cmpl
add
popf
or
push
or
cmp
xchg
daa
cli
fiadds
dec
add
repnz
push
shlb
inc
or
jb
fcomp
stc
or
addr16
cmp
cmpb
gs
fstpl
add
sbb
pop
add
sti
or
cmpl
setb
dec
je
add
pop
repnz
jb
pop
or
xor
push
add
lahf
ret
inc
add
jge
out
add
notl
push
dec
inc
stos
add
cmp
aas
add
xchg
scas
xchg
insl
mov
push
and
sub
cmp
pop
jg
movsb
and
sahf
and
iret
add
bound
xchg
negl
jmp
lcall
add
add
sub
mov
xchg
aam
xchg
add
jns
nop
dec
and
dec
add
repnz
xchg
pop
js
add
adc
xor
mov
hlt
or
in
sbb
push
dec
fiaddl
inc
cmp
and
iret
jno
fadds
jns
psubb
mov
add
adc
cmp
add
push
stos
aam
lcall
inc
andb
sub
dec
push
cmpsl
out
call
test
stos
sub
decl
mov
je
inc
push
nop
nop
jb
mov
xchg
lahf
pop
mov
or
add
out
inc
mov
out
mov
push
inc
mov
xor
sub
stos
or
lret
mov
sbb
repnz
es
pop
cli
lret
add
inc
fistl
loopne
cmpl
adc
pop
cli
int3
adc
cmpsl
dec
mov
outsl
orb
cmpsb
mov
xchg
jle
dec
fneni(8087
das
lock
popf
xchg
jnp
pop
je
push
or
in
xor
int3
sar
mov
sub
fsub
add
jp
jnp
mov
or
and
iret
inc
xlat
dec
leave
add
and
mov
jno
sub
add
ss
add
int3
push
hlt
and
ret
xchg
es
ja
inc
adc
pop
push
outsl
add
mov
push
and
xchg
push
xchg
fs
clc
and
cmp
sldt
push
inc
push
jp
xor
shrb
add
rorb
add
add
stc
cli
mov
adc
push
arpl
xchg
lahf
test
andl
pop
push
mov
pusha
xor
aam
popa
pop
and
je
icebp
mov
or
jne
cwtl
xchg
add
or
aas
repz
inc
jno
dec
inc
rolb
inc
adc
insl
jbe
sbb
lock
sbb
pop
or
lods
fs
adc
test
inc
push
sahf
adcl
xchg
add
adc
lret
adc
sbb
nop
add
sbb
push
ret
xor
xchg
loopne
cwtl
test
in
leave
inc
pusha
cltd
cmp
or
jbe
push
mov
bound
jp
test
data16
aam
push
cmp
inc
lcall
hlt
pop
dec
add
sub
cltd
popf
into
punpckldq
ret
pop
test
mov
push
mov
sub
and
in
loopne
fsubrl
mov
fwait
rclb
movsb
ds
add
inc
movsl
jg
xchg
scas
add
fwait
movsb
incb
sub
xor
sbb
xor
mov
add
push
leave
imul
cmp
in
xchg
cmp
adc
jmp
xor
mov
adc
xchg
sahf
pop
fsubl
mov
js
xor
cltd
add
sahf
adc
jnp
out
mov
pop
mov
in
mov
or
hlt
in
outsb
mov
test
add
sub
in
or
pusha
arpl
mul
repnz
idivb
pushf
loop
lret
std
shrb
inc
cmp
das
test
fcmovu
add
sbbl
add
shr
popa
xchg
cmpsl
mov
sbb
movsl
pop
gs
lahf
add
loopne
push
add
nop
push
push
cmp
xchg
das
pop
or
loopne
sti
rcrb
inc
js
adc
rolb
mov
ja
mov
inc
add
fdivrl
scas
cmpsb
adc
add
mov
xchg
ja
xchg
mov
or
ss
ds
add
in
cmc
or
cmp
add
popf
popa
fstpt
aam
jmp
sti
out
add
push
jb
adc
shlb
pop
jno
jo
jne
add
sub
dec
stos
pop
shrl
mov
cmp
ljmp
outsl
xchg
ds
inc
pop
dec
and
mov
push
or
repnz
cmp
sbb
sub
mov
push
int3
lods
add
cmp
daa
fildl
push
dec
jg
fwait
mov
mov
pushf
scas
add
lahf
add
mov
loopne
jmp
add
push
cmc
inc
push
push
mov
add
daa
or
lahf
dec
mov
jp
je
scas
jle
cmp
cmpl
add
and
lcall
cmp
inc
out
add
or
push
and
cltd
add
jae
testb
inc
and
adc
xchg
adc
inc
add
pop
pop
pop
push
bswap
add
inc
repz
sub
or
mov
xchg
orb
mov
les
cmp
ja
insb
into
inc
add
or
add
fnsave
cmp
dec
subb
push
add
mov
adc
jmp
cmp
enter
xchg
in
add
jbe
and
clc
fisubs
cld
test
xor
cs
add
xchg
push
iret
add
or
xchg
push
sub
sbb
pushf
das
nopl
inc
out
out
shlb
jno
lock
dec
add
dec
sub
push
sbb
push
add
cmp
ret
pop
dec
pop
push
sub
add
stc
or
inc
xorb
add
pop
fwait
xor
std
addb
mov
div
mov
cli
hlt
mov
dec
jne
cmp
mov
add
lock
pop
mov
add
sub
std
add
inc
dec
jne
hlt
idivb
add
call
mov
test
mov
xchg
imulb
pop
add
test
mov
sub
xor
enter
and
xchg
test
insb
enter
add
movsb
xchg
push
xor
pop
fsts
adc
cmp
push
test
dec
in
add
cmp
xlat
jb
decb
push
jae
push
cld
lret
jnp
xorl
stos
test
mov
call
xor
xlat
push
add
sub
out
push
sarl
les
jg
or
mov
popa
sti
test
mov
popf
sbb
mov
mov
enter
pop
ljmp
ja
outsl
cmp
jmp
adc
xchg
int3
cmp
popa
and
cmp
jo
mov
add
pop
and
push
mov
mov
add
add
pop
pop
pop
sbb
mov
jge
xor
and
lea
xor
mov
int3
add
jae
mov
outsl
pop
xor
fiadds
mov
sub
adc
dec
cli
xchg
pop
add
enter
xchg
cmp
jmp
add
add
pinsrw
pop
and
loop
rolb
mov
push
out
shlb
dec
nop
icebp
test
push
sbb
mov
or
jl
xchg
ljmp
add
into
mov
pop
lock
mov
loopne
add
add
sub
or
mov
addb
call
rolb
adc
enter
add
rolb
add
jo
test
xor
or
add
addl
call
mov
mov
jbe
cmpxchg
adc
mov
scas
mov
mov
popf
cmpb
mov
push
add
xchg
or
adc
adc
ret
repnz
jne
fbld
fldt
cmp
cmp
and
mov
inc
popf
mov
mov
push
push
int
jl
repnz
rolb
add
cmp
lret
dec
jnp,pn
popf
pop
add
add
call
and
call
add
pop
xor
push
sub
jmp
int
mov
add
cmp
test
mov
cmovbe
dec
in
call
pop
pusha
imul
fisttpll
fisttpl
fs
out
add
call
pop
mov
jmp
das
or
mov
leave
ds
jbe
imul
in
add
xor
cwtl
imul
js
inc
xor
or
or
xor
or
loopne
dec
mov
dec
add
rcr
adc
add
lds
int3
add
cmp
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
add
add
sub
cmp
call
jbe
push
orb
xor
pop
sbb
test
out
sarb
cltd
ror
add
lock
and
adc
hlt
mov
lahf
xchg
test
in
xor
and
dec
sbb
popa
sbbl
add
lods
callw
pop
js
add
adc
out
lea
in
sub
add
shrl
aas
jl
xchg
popl
adc
lret
push
mov
adc
pop
add
mov
pop
mov
xchg
mov
sub
addl
add
add
xchg
add
call
cld
lcall
sbb
or
stos
pop
jno,pn
xor
aad
add
cmc
xorb
add
xchg
into
mov
or
jo
jne
sbb
gs
add
adc
leave
xor
push
xchg
add
push
mov
cmp
dec
xchg
cmp
inc
je
push
xchg
mov
sub
cmp
add
aam
adc
pop
jge
push
cmp
mov
add
sbb
fsub
add
movsl
xor
icebp
shl
mov
ds
ljmp
scas
add
sub
sahf
mov
andb
mov
push
test
jl
lahf
aas
dec
aad
mov
dec
adc
lea
add
jge
js
pusha
stos
add
addb
psraw
stos
cwtl
add
xchg
xorb
lahf
mov
loopne
add
stos
sub
dec
and
loopne
add
popf
jg
pop
push
add
and
cld
data16
xlat
dec
add
mov
add
into
pop
aaa
sti
dec
repz
add
dec
es
ret
cmp
dec
sbb
insb
mov
jne
add
add
sbb
rcrb
dec
or
loopne
sbb
add
cmp
mov
pop
inc
add
add
pop
jb
ret
loope
mov
sub
ljmp
stc
add
xor
mov
cli
adc
aam
adc
add
stc
mov
out
sbb
in
or
ja
cmp
add
stos
ret
outsl
add
push
pop
cld
pop
incl
sarl
add
xor
add
push
adc
call
xchg
fidivrs
push
inc
add
jge
xchg
mov
inc
or
dec
cmp
test
sbb
or
jmp
testl
mov
dec
push
dec
subb
outsl
and
xchg
xor
pop
adc
xchg
les
mov
daa
sbb
mov
sahf
or
ss
xor
pop
outsl
push
mov
xchg
stos
cmc
add
into
add
pop
insl
dec
jmp
lahf
lods
add
mov
push
aam
mov
push
sub
lock
rolb
lds
das
add
addr16
pop
jne
jge
cmp
mov
rorl
sub
cld
push
inc
inc
lods
popf
hlt
add
add
daa
sbb
enter
ffree
add
js
sbb
mov
faddl
clc
jnp
rep
jmp
popa
sbb
rcrb
in
mov
add
mov
inc
push
jle
add
dec
loopne
push
pop
add
mov
test
adc
int3
loopne
add
xlat
data16
add
xor
or
xchg
stc
mov
nop
roll
outsl
sbb
mov
loopne
sub
mov
inc
lret
jo
add
stos
jnp
or
mov
push
daa
mov
outsl
add
mov
adc
rcl
cmp
jmp
movsb
jne
aad
add
into
add
mov
movsl
xlat
add
pop
aaa
call
nop
jmp
mov
loopne
add
bound
out
add
add
add
sub
jo
add
std
adc
loopne
add
in
mov
push
add
dec
cwtl
adc
mov
pop
mov
stos
lods
nop
pop
loopne
mov
xor
cmp
mov
outsl
mov
pushf
lcall
and
rclb
mov
cltd
das
sbb
movb
imul
pop
add
add
push
movsb
add
mov
jl
add
lret
mov
cltd
xor
lods
mov
add
stos
notl
rcrb
jns
push
lret
add
xlat
fdiv
inc
rclb
out
loop
cmp
cmc
rol
add
add
mov
jo
push
add
insb
xor
sbb
push
stos
dec
add
xlat
jbe
cmp
popl
sbb
add
push
xchg
ret
into
add
and
clc
pop
mov
mov
mov
add
shrb
sub
cltd
jle
push
pop
xchg
mov
pop
inc
or
jl,pn
adc
add
and
xchg
sbb
add
push
pop
mov
push
iret
mov
pop
fucom
push
sbb
fldt
or
push
dec
fsts
js
sbb
fidivrl
repnz
add
mov
hlt
lds
lret
fistpl
cmp
mov
dec
xchg
pmullw
push
sub
pop
call
add
enter
xor
loopne
add
rolb
add
cmp
insl
cmpb
ss
mov
add
pop
shr
call
cmp
mov
add
inc
push
fildll
mov
rolb
sub
iret
leave
push
fidivrs
rcrl
fsubrs
jl
ret
add
jbe
imul
aad
pop
cmp
lods
adc
pop
std
xorb
outsb
cmp
inc
add
dec
lea
add
test
push
xchg
dec
jmp
mov
daa
pop
les
mov
lret
sbbb
add
pusha
xchg
add
mov
push
pop
push
sar
push
push
push
hlt
call
add
or
inc
ret
mov
inc
in
loopne
sub
mov
sbb
push
adc
add
lea
daa
aaa
aas
push
and
dec
cmpsl
jo
cmc
cmpb
stos
mov
sahf
iret
or
sarl
mov
pop
aam
add
loope
dec
in
add
pop
inc
dec
dec
ds
divb
cld
fcoms
int
pop
sbb
pop
sub
out
and
add
mov
jb
jno
aam
or
lods
mov
data16
ds
mov
inc
lea
stc
or
mov
sti
test
push
pop
add
cmp
sub
jbe
jmp
and
loope
call
test
push
cmp
subl
dec
or
pop
xor
sub
dec
mov
aaa
int3
push
inc
and
jmp
xlat
inc
add
sbb
testb
hlt
mov
cmc
jg
mulb
aas
enter
and
push
push
dec
push
add
clc
clc
xor
loopne
add
je
js
lods
cmp
add
pop
roll
jo
add
movl
push
push
cmpb
add
pmaddwd
lahf
rclb
pop
fmuls
inc
sbb
jmp
add
adc
inc
xor
cwtl
pop
push
sbb
cmp
leave
pop
jmp
cmpsb
mov
adc
push
enter
cmp
sbbb
or
inc
pusha
push
pop
and
add
push
clc
fadds
mov
pop
push
nop
imul
adc
dec
lods
add
inc
out
mov
jbe
test
mov
hlt
xor
sbb
rdtsc
data16
pusha
adc
test
xchg
pop
cld
add
out
pop
jb
int3
jbe
and
and
dec
lret
dec
pusha
mov
in
push
sbb
cmpsb
aas
mov
cwtl
dec
add
int
mov
add
jb
outsb
inc
inc
adc
mov
add
add
mov
in
lock
int3
hlt
jg
call
sub
inc
rorb
add
movsb
loope
loopne
add
push
mov
jo
inc
pusha
dec
jp
das
inc
mov
testb
dec
mov
pop
and
jo
cs
xchg
xorb
repz
loopne
shlb
add
mov
push
push
adc
adc
stos
cmp
aaa
and
push
aad
pop
or
popf
mov
and
xchg
subb
push
push
insb
inc
sub
add
dec
xor
add
add
aam
shlb
sbb
addb
loopne
fldt
mov
add
js
push
add
xchg
daa
testb
addl
fwait
inc
dec
loop
outsb
inc
push
xchg
dec
rolb
sahf
pop
mov
aam
push
popa
cwtl
xchg
mov
adc
adc
xchg
pop
xor
add
je
lea
sub
and
call
sub
and
cli
ficomps
cmp
add
aaa
mov
fwait
cs
mov
out
pop
cmpsl
and
xorb
pop
push
stos
mov
cwtl
add
and
push
rol
xor
adc
out
ja
lahf
outsl
fcmovnb
jo
add
xchg
mov
xchg
ds
add
insl
addl
xor
lods
add
shrb
xchg
std
add
pushf
sahf
data16
and
add
or
in
jle
faddl
push
push
add
or
test
add
movsl
adc
jbe
testb
jne
add
inc
stos
rcr
add
das
subb
and
xlat
cld
or
ror
add
in
add
lret
inc
in
test
sbb
sbb
add
notl
jp
leave
int3
sub
in
out
test
stos
data16
adc
add
arpl
sbb
addb
pushf
xor
inc
movsl
cli
repz
loopne
sub
sub
out
mov
stc
add
mov
pop
rorl
daa
dec
pusha
and
outsl
pop
and
inc
sub
sbb
add
xchg
clc
imul
push
xlat
cltd
int
xchg
popa
out
roll
enter
cld
or
iret
sub
mov
mov
insb
add
cmp
sbbl
or
add
xor
sub
cltd
add
test
xor
call
ljmp
inc
or
or
inc
je
add
sub
in
mov
sbb
add
cmp
das
rorl
jle
lret
jne
xchg
mov
in
xchg
add
sub
iret
jmp
mov
add
sbb
or
mov
dec
pop
add
add
xchg
xchg
jo
mov
repnz
add
cwtl
roll
cmp
push
add
ret
arpl
xchg
pushl
cli
push
inc
add
lods
pop
inc
push
das
add
ret
int
repz
and
xchg
movb
add
orb
je
dec
sbb
xchg
fs
hlt
cmp
cmpsl
shrl
add
push
dec
cmpsb
fcomps
jo
add
clc
int3
pusha
mov
add
je
mov
add
mov
sarl
mov
es
and
lods
lock
ss
xchg
add
sub
pop
cld
mov
sub
sarb
add
cwtl
and
aas
add
jp
cmp
push
xchg
subb
push
dec
mov
add
jecxz
out
inc
jb
pusha
jo
add
imul
out
add
pop
sbb
loope
xor
rolb
lods
push
fiaddl
push
adcb
nop
lock
in
cmp
add
out
mov
xor
test
jp
or
mov
nop
lods
dec
mov
add
add
and
adc
xor
loopne
add
inc
cmp
xor
rclb
sbb
xor
pusha
sub
adc
mov
cmc
add
dec
popf
push
cli
mov
iret
cwtl
pop
movsb
cmp
insb
fwait
add
pop
jbe
push
enter
and
xchg
push
push
mov
mov
int3
inc
ds
addb
adc
lret
pusha
mov
rorb
stos
jne
push
jbe
sar
add
hlt
add
sbb
add
push
insb
cmpsl
jo
add
movsb
in
testl
or
into
push
sbb
add
sub
icebp
imul
xchg
femms
sbb
and
mov
add
lods
popf
add
iret
or
push
sub
pusha
inc
mov
icebp
pop
sub
gs
sti
add
xlat
in
pop
add
add
mov
and
ret
stos
inc
jl
xchg
addb
dec
jb
cli
int3
fnstcw
xchg
jbe
fsubs
adc
jle
add
lahf
mov
int3
xor
nop
negb
push
add
fstps
cmpb
sahf
sub
cmpsl
fs
and
mov
jo
outsb
in
dec
add
xchg
jae
rorb
add
xlat
scas
add
xchg
out
cwtl
add
push
adc
or
pop
jb
dec
out
ljmp
movsl
pop
add
out
and
and
mov
sbb
xlat
xor
xchg
cmp
add
nop
push
dec
ret
dec
adc
fimull
adc
sbb
cmpsb
mov
dec
add
mov
lea
mov
push
adcb
int3
rcrb
add
out
push
fiaddl
dec
adc
scas
mov
sub
add
pop
in
mov
mov
popa
ss
push
sub
sub
push
dec
pop
addb
dec
in
cmp
cmp
lea
cmpsl
adc
mov
or
and
add
push
pop
fisttpll
sub
sbb
adc
cmp
add
jp
test
sbb
je
mov
pop
movsb
inc
mov
cmp
clc
orb
ljmp
push
lock
lods
cld
pop
pop
in
xor
shrl
add
repz
cmc
inc
leave
fdivrs
add
jge
mov
add
cmp
pusha
lret
push
add
xchg
sahf
cmp
add
push
xor
push
aam
push
mov
sub
call
pop
ljmp
xchg
adc
ficomps
and
add
int3
add
adc
add
sbb
testb
adcb
push
testl
pusha
and
push
add
mov
xchg
scas
mov
inc
mov
addb
add
cmp
aad
dec
push
leave
add
std
jecxz
mov
and
xlat
push
scas
xchg
xchg
mov
dec
and
mov
les
lcall
repnz
sub
mov
xor
lods
and
add
mov
add
movsl
mov
ja
orb
loop
pop
cmp
xor
push
inc
push
jne
je
ficomps
add
decb
fsts
xchg
out
and
scas
xorb
mov
ret
mov
stos
sbb
push
aas
inc
dec
cmpb
pop
out
add
jp
les
adc
daa
jmp
push
in
and
add
add
jns
add
sbb
add
or
or
dec
sub
bound
adc
enter
add
sar
add
push
mov
add
cwtl
jl
mov
cmpsl
jg
add
sbb
mov
mov
cmp
fcmovnb
push
mov
dec
inc
push
popa
sti
mov
and
sub
sbb
pop
cld
incl
sbb
mov
stos
cmp
out
rolb
add
jmp
push
lea
inc
mov
in
out
add
imul
or
stos
xorl
pusha
add
sbb
pop
add
std
dec
in
inc
push
add
adc
or
sti
test
add
insl
pusha
jbe
dec
jne
enter
shlb
add
mov
hlt
lahf
add
enter
clc
dec
fnstcw
cmpsb
dec
add
sub
cld
sbb
pop
test
cmp
push
incl
sub
dec
js
leave
loopne
pop
cmpsl
pop
xchg
mov
push
add
push
addb
enter
mov
cmp
aad
movsl
dec
push
add
in
mov
mov
aam
pusha
cmp
es
clc
xor
jne
pop
adc
push
jo
mov
xor
mov
lret
daa
lds
cmpsl
add
sbb
adc
push
inc
mov
add
pop
xor
or
add
push
and
add
cmp
adc
cwtl
push
xor
lcall
loopne
push
xchg
or
and
or
ror
pop
add
cltd
inc
sub
rol
sbb
push
inc
or
add
psubb
repnz
dec
and
stc
sub
test
ss
xor
pusha
add
pop
push
jmp
call
add
out
jo
mov
cmp
dec
or
cmp
xchg
sbb
jnp
sub
dec
fldl
lahf
sarb
lock
imul
mov
add
or
das
loope
pop
pop
cs
fdivrl
pop
shl
repnz
mov
shlb
cli
add
add
sbb
arpl
add
or
add
call
stos
add
dec
jg
std
clc
in
add
test
pop
mov
imul
dec
add
data16
xor
add
push
out
and
push
aad
sbb
add
push
cmp
push
add
data16
add
cmc
add
js
sahf
add
jns
rcr
add
cmp
add
xor
out
shr
loopne
or
adc
sahf
cmp
clc
and
adc
push
rcl
add
adc
sbb
xchg
mov
cmc
lock
mov
add
int
sbbb
arpl
add
jp
dec
dec
push
shlb
pop
cmp
adc
popf
int3
into
cmp
test
xchg
movsb
cs
jne
inc
add
push
push
xchg
add
dec
mov
add
shlb
enter
out
add
mov
add
in
sub
int3
push
add
push
es
pop
lds
jnp
sbb
jno
in
inc
cmp
sub
pop
mov
mov
loop
mov
push
addl
add
imul
lock
sbb
jne
add
mov
inc
mov
add
ja
sbb
push
and
adc
jbe
icebp
fcomp
xor
add
dec
jg
inc
call
sbb
out
add
jle
jno
verw
jne
fsubl
push
imul
jecxz
push
mov
test
test
popf
sahf
add
pusha
or
cmp
add
mov
inc
or
add
daa
sbb
les
mov
data16
repnz
pop
cmp
mov
add
pop
xchg
mov
mov
add
adc
jo
repz
ret
dec
or
xor
push
cld
sub
mov
repnz
add
pop
orb
pusha
jmp
add
fmull
sbb
pop
and
mov
cmpsl
mov
out
push
insb
add
and
insl
or
sahf
sarb
add
fisubrl
cld
jl
inc
add
xor
std
cmc
pop
clc
add
mov
pop
addl
outsl
mov
fdivr
out
xor
push
mov
pop
insb
mov
add
mov
add
pushf
sbb
popa
pop
lock
in
add
adc
in
push
enter
add
dec
mov
add
mov
jbe
shlb
mov
xor
dec
stc
pusha
adc
push
cmp
or
add
add
mov
in
pop
cmp
scas
and
icebp
add
jne
icebp
jp
sbb
inc
inc
xchg
inc
mov
sbb
mov
jns
pushf
add
call
data16
add
add
push
or
mov
mov
cld
aam
lds
add
int
in
mov
add
mov
xor
dec
add
push
in
push
mov
dec
inc
fidivrs
out
xor
in
cli
mov
mov
mov
jg
cmp
dec
add
xor
pop
cld
stos
ljmp
out
test
and
movsb
push
push
enter
add
adc
mov
mov
mov
fistps
lret
orb
add
iret
mov
add
jmp
pop
in
mov
adc
aad
cmp
sbbl
sbb
subb
xchg
icebp
add
xor
add
popf
mov
inc
inc
in
addr16
ljmp
or
daa
mov
inc
mov
or
xchg
add
ds
dec
hlt
aaa
pop
mov
xchg
xor
add
mov
iret
push
nop
ret
mov
add
pop
in
adc
dec
pushf
add
sub
or
cmp
sub
add
call
push
sub
push
rcrl
jl
adc
dec
adc
enter
jmp
cmp
adc
cwtl
xor
negl
mov
aaa
adc
add
sbb
sub
dec
iret
add
fsubs
dec
lock
imul
arpl
das
mov
jnp
add
push
cmpsl
add
push
mov
fiadds
jbe
add
mov
pop
mov
in
pop
inc
add
pop
dec
pop
out
fisubl
adc
shrl
jno
push
and
xchg
xchg
mov
cltd
add
sbb
mov
jge
fists
cmpl
push
xor
inc
push
enter
and
jmp
out
sub
xchg
sub
or
or
mov
sbb
add
xor
mov
add
xchg
dec
pusha
pop
xor
and
fimuls
sbb
test
outsl
jge
push
jo
iret
add
adc
add
and
sub
cmp
shlb
add
sarb
sbb
adc
push
addb
or
jp
jl
jle
jle
xor
cmpsl
dec
adc
push
add
fiadds
jb
xor
push
or
inc
mov
pop
pop
mov
lret
rolb
out
or
cld
jp
sbb
decb
adc
push
shll
push
jb
daa
adcb
into
add
call
cwtl
jecxz
and
lock
arpl
das
xchg
mov
ja
cwtl
enter
test
or
push
mov
add
mov
popaw
cwtl
pop
sbb
pusha
push
mov
stos
subb
popf
lea
div
stos
loopne
xchg
add
or
or
cmp
mov
inc
cmp
aad
sbb
add
sub
push
inc
adc
decl
push
jbe
add
push
mov
adc
xorb
add
add
push
sbb
push
and
xchg
cwtl
jle
sbbb
add
add
inc
in
and
insb
add
jne
cld
pop
sub
idivb
out
sbb
and
lret
add
mov
add
mov
add
adc
adc
jmp
cli
lret
and
loope
add
inc
push
add
orl
or
nop
cwtl
jge
add
add
rolb
ret
es
dec
pop
dec
mov
push
leave
test
xorb
mov
adc
xor
add
test
add
xchg
ss
loop
pop
sbb
cmp
inc
dec
jle
daa
mov
sub
inc
jl
loopne
jb
cli
add
mov
ja
add
cmp
lods
ljmp
or
xor
scas
pop
js
add
shlb
test
dec
les
ds
jno
sub
imul
add
xchg
mov
add
enter
add
sbb
shrl
les
inc
sub
jae
incl
sbb
ficoms
cli
jmp
dec
jecxz
and
sbb
addb
inc
or
mov
mov
push
cli
mov
inc
sbb
mov
ret
add
pop
call
xor
add
pop
shrb
pop
add
stos
mov
rolb
add
push
mov
shr
add
fsubl
popa
hlt
jecxz
add
jg
scas
cmp
add
mov
push
call
push
pop
sbb
mov
mov
add
adc
rclb
xchg
cld
add
cmc
leave
cvtdq2ps
shrl
push
sub
inc
lock
add
and
inc
push
add
cwtl
push
push
inc
inc
popf
cmp
add
push
test
or
movsb
or
push
inc
nop
cmpsb
cmp
fcompl
daa
cld
out
add
imul
add
mov
mov
test
dec
sbb
add
push
xor
mov
ret
adc
dec
adc
in
lea
mov
filds
fsubr
sbb
fidivl
or
cmpsb
or
ret
inc
xor
sbb
mov
push
call
scas
xchg
mov
inc
xor
inc
add
jmp
jne
push
pop
add
shlb
cmp
add
and
jbe
add
jg
jmp
enter
pop
push
movsl
sub
pop
push
out
add
adc
mov
inc
dec
jno
lahf
rorb
dec
mov
add
movl
popf
add
sbb
and
xchg
inc
xchg
inc
pop
sbb
xchg
add
out
data16
mov
pop
jne
push
lods
add
and
sbb
cmp
add
gs
push
mov
mov
adc
dec
jne
mov
pop
dec
inc
mov
fmul
inc
nop
pop
cld
out
jb
loopne
push
or
mov
movsb
int3
mov
lret
push
mov
and
push
inc
push
cmovle
and
cmp
popa
fildl
mov
cmp
sbb
loope
rorb
sldt
stc
orb
rcll
add
adc
mov
mov
pop
test
rolb
sahf
cltd
lods
test
adc
dec
cmp
incb
popf
cwtl
cmp
scas
fistps
xchg
add
int3
pop
and
insb
rolb
or
lods
adc
cmp
fistpll
dec
mov
add
sarl
pop
addr16
sbbb
insl
push
fimull
sarb
sbb
adc
dec
mov
popa
ja
inc
dec
mov
xchg
scas
push
rclb
jo
ds
je
cmp
cmp
jno
add
cmp
outsl
std
and
loop
add
and
sub
sub
push
mov
shlb
push
hlt
xor
mov
or
dec
aam
ja
andb
iret
push
jns
repz
pusha
imul
es
std
or
int
ficompl
xchg
shlb
inc
add
nop
testb
add
insb
test
test
je
aam
xlat
pop
push
insl
stc
jno
push
push
add
fadds
enter
add
jae
push
mov
dec
xor
in
mov
pop
jmp
xchg
sarl
push
sti
add
fisttpll
add
adc
inc
lea
add
ret
and
cmp
adc
std
cmpsb
and
cs
add
pop
adc
into
xor
mov
cmp
jb
or
sub
add
add
les
sbb
data16
push
lahf
lds
xchg
icebp
jno
sbb
test
test
adc
das
add
sbb
or
fstpl
add
sti
sub
dec
dec
add
in
inc
in
imul
adc
cmp
loope
popf
or
inc
aad
sub
xor
dec
fstl
and
sar
mov
add
out
pop
pop
or
or
push
repnz
mov
add
cwtl
pusha
adc
jl
orl
rclb
cmp
addr16
in
rolb
and
add
dec
loop
outsl
test
lock
pop
movl
dec
aam
dec
lock
dec
or
nop
sbb
mov
push
adc
sbb
push
jp
sbb
clc
pop
fnstenv
enter
pop
and
mov
add
mov
inc
mov
pop
int3
clc
pusha
adc
jg
les
adc
push
or
aas
andl
pusha
xchg
jmp
add
xor
inc
sbb
mov
pop
and
out
adc
sbb
in
pusha
loopne
add
lock
or
sbb
inc
sbb
adc
dec
and
and
nop
loopne
sub
lahf
inc
dec
xchg
sbbb
xchg
xor
xchg
sahf
clc
xchg
fldenv
xor
scas
ret
inc
mov
js
add
fdivr
mov
xor
adc
rclb
and
adc
ret
cmp
push
pop
test
sbb
push
aam
add
inc
and
hlt
sub
mov
xor
movntq
fsubl
add
jns
push
xor
dec
pop
int3
fstpl
push
in
cmp
mov
mov
xor
inc
call
and
cmp
xchg
mov
sub
lods
add
out
imulb
add
movsl
cltd
in
fmul
cli
add
insl
dec
pop
or
fcomps
xchg
sbbl
into
pop
mov
add
les
adc
adc
jmp
jo
inc
nop
and
pusha
mov
add
sub
lret
push
fsubrs
insb
adc
jno
xor
loop
cld
lock
xor
pusha
adc
imul
mov
mov
pop
clc
das
add
aam
and
movsl
push
add
xor
add
mov
push
lea
add
add
mov
sbb
add
or
jo
add
outsb
je
insl
xor
out
addl
clc
ljmp
inc
sbb
xor
xor
ss
loopne
add
inc
inc
inc
inc
inc
inc
push
add
add
or
out
lds
aam
or
test
xor
pop
lods
adc
cwtl
jo
enter
or
ljmp
aad
clc
cld
push
outsb
jo
add
addl
pop
add
add
fs
in
dec
aam
fsubl
in
or
hlt
mov
sub
add
or
sbb
subb
xor
je
aas
adc
xchg
insb
mov
mov
mov
mov
xchg
xchg
and
pushf
inc
movsb
lods
out
mov
mov
testb
fsub
in
scas
call
ret
cld
add
gs
cmp
push
andb
add
push
ds
mov
movsb
or
jns
adc
mov
clc
mov
jo
ret
xor
add
mov
add
dec
dec
dec
dec
dec
push
loopne
add
push
push
pop
pop
push
lcall
dec
dec
adc
adc
bound
addr16
sub
rolb
jno
add
ja
jp
jbe
and
imul
or
cmc
add
push
imulb
stc
and
add
dec
inc
lock
pop
loopne
lcall
mov
shl
jno
data16
inc
shl
mov
orl
dec
js
sbb
mov
add
and
dec
push
xchg
push
ljmp
cwtl
push
add
pop
in
adc
pop
jo,pt
aam
js
or
orl
xchg
add
mov
je
mov
adc
movsb
and
dec
les
or
mov
and
xlat
lcall
add
jecxz
adc
and
add
or
add
push
and
outsl
inc
sub
sbb
add
or
imul
add
mov
or
mov
dec
or
outsb
and
insb
dec
add
ljmp
add
lahf
cmp
pusha
jl
jo
repnz
insb
add
dec
cli
add
add
adc
out
loopne
incb
jo
and
inc
sub
or
pop
xor
inc
sbb
addb
push
nop
jge
mov
cmp
adc
mov
incb
add
or
add
int3
jo
in
adcb
cmpb
add
in
cmp
pusha
cmp
faddl
adc
flds
add
clc
sti
pop
or
or
or
or
loopne
inc
jo
les
pop
cmpsl
clc
cmp
xchg
test
xchg
aam
adc
js
andb
cmp
fsubrs
add
mov
mov
sbb
inc
add
loope
nop
cmp
int3
adc
mov
ret
insb
lods
inc
ret
je
fldcw
cmpsl
nop
adc
cmovl
inc
mov
sub
adc
add
push
movsb
fcompl
cmp
bound
add
inc
and
mov
jo
pushf
push
cmp
addb
dec
and
sbb
dec
repz
insb
or
jl
pushf
lock
xor
push
fwait
or
mov
cmp
data16
dec
cmp
jns
and
fs
mov
cld
mov
adc
add
int3
sbb
incb
adc
rcrl
cltd
cmp
sub
or
sub
add
or
cmp
and
sbb
inc
cli
lret
adc
xor
hlt
scas
test
insb
jnp
xor
jmp
loopne
mov
pop
popf
leave
dec
and
or
cmp
fbld
add
aam
jae
fdivs
sub
push
in
jno
ds
sarb
in
repz
adc
mov
imul
loope
lcall
push
cmp
int3
jp
jbe
add
dec
mov
daa
add
mov
sahf
lock
in
or
sti
xor
sbb
push
or
jno
xor
jno
or
lock
addb
xor
xchg
mov
xchg
bound
mov
aam
fmull
add
mov
xor
and
cld
sbb
popa
clc
and
inc
out
mov
aad
iret
scas
out
add
clc
movsl
add
xchg
add
sbb
xchg
cmpsb
and
adc
ds
add
stc
jbe
in
clc
push
test
mov
and
push
test
add
xor
mov
lock
lcall
loopne
iret
and
call
lock
mov
xor
pop
mov
and
nop
inc
lods
mov
add
dec
hlt
mov
movsl
adc
push
ret
mov
push
mov
out
mov
enter
idiv
nop
or
and
xor
dec
inc
pop
outsb
mov
jp
xchg
cwtl
fildll
aam
mov
add
adc
push
jl
sbb
sub
pop
loopne
push
xchg
lcall
add
xchg
repnz
adc
test
cld
add
mov
adc
push
dec
add
inc
int3
adc
sti
into
sti
fdivrp
out
mov
sbb
cmp
inc
add
mov
cmovs
inc
lock
aas
inc
pop
sarl
xorl
std
mov
jo
cld
pop
stos
adcl
push
jle
add
mov
mov
notb
or
pop
push
inc
shlb
adc
sub
jg
jg
aas
mov
mulb
add
data16
adc
push
pop
adc
jne
xor
xbegin
negb
and
scas
inc
sbb
mov
push
or
dec
jbe
xchg
xchg
repnz
lods
dec
sub
cld
in
pop
aas
adc
sub
aas
dec
add
push
stc
xchg
stos
std
std
aam
out
clc
jo
add
dec
adc
je
pop
test
and
dec
mov
push
add
xor
imul
xor
insb
xor
jne,pn
in
inc
push
adc
je
inc
jno
in
outsb
out
push
sbb
push
lret
fildl
inc
xor
inc
jb
jmp
add
notb
xlat
sbb
fbstp
dec
xchg
add
lods
roll
add
insl
daa
and
stc
jp
xor
add
inc
fsubr
imul
outsl
arpl
pop
sbb
sbb
push
cmp
jns
adc
arpl
call
jne
insb
mov
xor
add
cs
and
jp
fimull
outsb
inc
adc
ret
arpl
jo
out
fsubr
fldl
testb
jae
incb
js
loopne
sbb
rclb
cmp
dec
test
outsw
inc
movsb
hlt
aaa
push
add
mov
sbb
jae
add
jg
mov
popa
outsb
out
xchg
or
mov
inc
imul
pop
gs
dec
adc
xchg
or
into
pushf
sarb
add
push
xor
push
push
fwait
push
sub
or
arpl
mov
cwtl
adc
add
pop
jae
mov
popf
bound
addb
sbb
push
es
cltd
dec
cmp
stos
push
je
push
inc
es
outsl
test
inc
pop
sub
cmp
clc
int
ja
inc
or
xchg
pop
add
mov
test
mov
and
or
adc
sub
sub
add
imul
cld
or
jo
jp
mov
sub
dec
aam
dec
add
adc
mov
jae
pop
and
bound
imul
out
outsb
push
orb
popa
jmp
add
js
dec
imul
je
sbb
xchg
cld
mov
pop
in
add
cltd
inc
andb
in
and
mov
mov
push
je
fwait
jo
push
in
push
fcmovb
lock
les
xchg
add
cmp
movsb
jg
lock
add
adc
and
es
push
test
pop
add
test
stc
movsb
mov
add
into
test
popf
push
lods
adc
je
add
loope
cmc
bound
cmp
pop
ljmp
xor
and
insl
xchg
sbb
cwtl
inc
inc
or
clc
push
add
outsl
data16
add
addr16
bound
cwtl
fsubrl
cmc
xor
cmp
sbb
in
pop
push
lods
movsb
pop
add
lret
mov
cmpsb
subb
add
cmc
dec
pop
push
or
jnp
out
cmp
adc
sbb
or
inc
jne
xchg
out
test
add
inc
push
add
lahf
cwtl
lret
mov
xor
push
add
stos
loop
arpl
test
push
xlat
clc
roll
jae
fnsave
mov
push
add
push
roll
or
sbb
sbb
sbb
jmp
mov
cmp
and
mov
push
mov
add
aas
mov
dec
cs
dec
add
mov
add
push
out
dec
daa
push
fsubrl
add
jo
arpl
and
fs
loop
cmc
imul
pop
inc
movsb
add
gs
cmp
mov
add
lret
add
jns
stos
push
cmpsb
lods
sbb
xchg
outsb
fcmovb
mov
inc
and
and
xchg
iret
cs
hlt
jbe
and
dec
cmc
inc
cltd
push
je
subb
sub
push
dec
or
or
add
xchg
xor
ss
add
rcll
cmp
jmp
inc
cmp
imulb
idivl
jb
mov
faddl
dec
inc
mov
ret
les
mov
out
dec
inc
gs
add
sub
daa
mov
int3
xor
xchg
or
cmpsl
adc
xchg
push
into
dec
je
andb
or
insb
es
add
stos
das
xor
pop
jo
or
es
push
jno
inc
adc
push
pop
push
add
imul
add
adc
lods
in
add
test
pop
push
dec
arpl
call
pop
xchg
aad
shll
subl
imul
rolb
add
pop
imul
arpl
je
add
jae
and
test
aad
mov
cs
imul
jo
xchg
add
or
jp
cmp
pop
and
mov
stos
mov
call
add
mov
sti
in
add
push
add
lea
pop
jo
inc
cltd
hlt
lods
adc
jns
add
and
jmp
movb
lret
pop
push
adc
sub
dec
je
adc
xor
les
push
nop
jno
out
sub
imul
push
adcl
jle
insb
inc
aam
xchg
fists
dec
or
adc
add
inc
loope
push
jle
pop
popa
adc
cli
iret
add
or
or
pop
push
ror
and
add
movsb
les
ja
stos
iret
inc
adc
pop
cmp
mov
ja
jo
loopne
add
or
xor
sub
inc
cmp
xchg
inc
push
dec
out
dec
push
mov
punpckhdq
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
xor
add
adc
sbb
and
sub
xor
icebp
cmp
inc
dec
dec
mov
pop
punpckldq
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
test
clc
push
xor
push
je
jbe
js
jp
das
jl
jle
daa
rolb
sysenter
add
xor
inc
call
leave
add
test
pop
aaa
sbb
add
mov
sahf
aad
push
fstpl
sti
xchg
add
pop
daa
and
daa
push
dec
je
sbb
jbe
sbbb
pop
mov
mov
ret
lahf
leave
lahf
jecxz
ljmp
cmp
pop
pop
inc
xor
mov
push
pop
fimull
nop
loope
add
cmp
xchg
cmpsl
fld
add
xlat
cmp
in
pop
cmp
sarb
dec
push
push
lahf
sbb
jb
jns
fwait
mov
xchg
cmpl
popa
push
aas
sbb
sub
xor
sub
icebp
mov
stc
ret
sub
iret
add
dec
inc
and
sub
jb
je
jbe
add
jp
jl
jle
in
call
dec
shll
daa
out
inc
testb
xor
es
cmp
add
and
lcall
sbb
xor
popf
add
mov
add
xchg
xor
daa
pop
adc
sub
add
popf
mov
push
mov
mov
xor
leave
add
loopne
xor
das
jbe
js
pop
dec
mov
aas
mov
push
fwait
aaa
add
mov
inc
cmp
xchg
int
fnsave
cmp
in
call
icebp
inc
ljmp
mov
rolb
add
in
call
adc
hlt
testl
inc
mov
or
xor
adc
inc
or
pop
dec
add
pcmpeqw
xor
lret
xor
in
rclb
jp
mov
xor
popf
push
sub
jg
pop
jl
mov
xchg
hlt
cmpsl
pop
xchg
mov
aas
xlat
daa
loopne
out
stos
inc
push
daa
pop
inc
push
cmpsl
lea
xchg
out
movsb
inc
iret
shl
loopne
loope
add
or
push
shrl
fldcw
loop
add
fildll
repz
add
loopne
cmp
cmp
push
dec
aaa
subl
xor
cld
cmp
xchg
les
ljmp
mov
clc
pop
cmp
jge
xchg
xchg
aas
cltd
sub
pop
rolb
xor
or
movsl
sbb
or
cmp
and
xor
adc
add
popf
xchg
sbb
xor
mov
leave
cmpsl
sarb
adc
iret
mov
rcr
fprem
jecxz
push
cmc
in
adc
add
sub
xor
cmp
out
popf
pop
sbb
jae
ja
jge
adc
mov
cmp
cmp
fidivrl
out
lock
cmp
in
psubsb
in
es
cs
inc
clc
jno
cld
jge
xchg
cmp
jle
nop
cli
loopne
add
je
dec
dec
pop
loopne
ds
aas
jbe
mov
mov
jecxz
lock
add
or
dec
adc
sub
dec
xor
dec
push
iret
pop
punpckldq
jb
jp
or
loop
add
mov
mov
iret
rorb
fimull
sar
add
or
xchg
adc
sub
xor
jecxz
repz
dec
dec
mov
pop
punpckldq
bnd
mov
ja
lret
stc
loop
ljmp
andl
mov
adc
add
nop
pop
movsl
test
dec
out
push
in
lret
push
lods
or
pop
add
and
ss
inc
lahf
sbb
bound
movsb
je
ljmp
movsb
cmp
lods
cmp
int3
ds
fcompl
aas
in
aas
hlt
add
lock
or
adc
sbb
and
sub
xor
clc
cmp
inc
dec
dec
mov
lcall
jl
test
mov
xchg
mov
jle
or
int3
inc
aam
faddl
hlt
and
les
sbb
lock
cmp
inc
nop
dec
repnz
cmp
or
fs
push
popa
rolb
cld
movsb
dec
lods
mov
int3
aam
fmul
in
add
sarl
mov
pop
cmp
dec
cmp
movsl
cmpsb
adcb
dec
xchg
mov
rsqrtps
cwtl
andps
xchg
in
rcrb
lock
hlt
sbb
ss
dec
sbb
inc
dec
dec
cmp
dec
pop
xchg
ds
sub
fwait
cmp
pusha
je,pt
xchg
aas
pushf
aas
mov
rorl
loopne
repz
mov
call
clc
inc
cld
out
pop
aaa
add
or
adc
inc
cmpsl
adc
inc
cltd
xor
xor
clc
fs
push
cld
movsb
cld
lods
cld
mov
mov
mov
jle
jle
jle
add
out
je
cmp
mov
add
cmp
cmp
jb
je
mov
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
shlb
enter
add
xor
jl
adc
leave
adc
sbb
sbb
and
jmp
sub
xor
push
repz
js
jl
xor
mov
cwtl
iret
mov
iret
enter
ror
aam
fmul
fmul
loopne
lock
sbb
and
and
lods
dec
sub
addb
stc
cmp
push
sarl
jl
sub
icebp
mov
mov
nop
repnz
mov
cld
mov
and
sub
test
enter
stos
cmp
mov
xchg
andb
nop
jle
jle
jle
push
mov
loopne
xchg
call
fmul
clc
sar
adc
cmp
imul
mov
cmpsl
and
xor
insb
in
sarl
sbb
repz
popf
mov
or
cmpsl
pop
enter
lock
repnz
sbb
test
rorl
or
adc
inc
sub
aas
dec
in
nop
xor
and
insb
jl
pushf
adc
rolb
idivl
add
popf
or
adc
lahf
popf
pop
and
push
push
cmp
pop
xchg
pusha
dec
push
lret
js
daa
sete
lods
leave
call
int
fmul
and
nop
add
lods
jns
sbb
cmp
aaa
push
push
add
xor
pushf
cmp
loop
stos
xor
cmp
cmp
mov
xchg
push
cmp
adc
mov
repnz
ret
lret
cmp
call
cmp
ficompl
sahf
fsts
nop
test
popf
xchg
mov
or
inc
je
xchg
jbe
dec
es
lcall
ja
enter
add
call
insl
add
jno
jne
jns
push
sbb
icebp
xchg
stc
xchg
stc
cltd
stc
popf
clc
xchg
sbb
pop
cmp
leave
inc
xor
add
add
arpl
rcr
loope
jmp
sub
ret
and
push
pushf
push
xchg
je
jae
adc
inc
add
mov
dec
cmp
sub
je
jbe
js
shrl
sbb
xor
popf
cwtl
fiaddl
xor
inc
pop
add
mov
addb
sub
in
mov
and
mov
add
xor
jbe,pt
add
add
ja
mov
xlat
cmp
cmpsl
sahf
cs
negl
cmp
daa
insl
dec
mov
xlat
clc
repz
xchg
jb
mov
pop
xchg
lar
mov
cmpsl
pop
add
mov
mov
je
jbe
js
dec
push
adc
ja
mov
rolb
add
out
test
roll
mov
call
add
jb
push
cld
mov
add
adc
xor
mov
pop
add
cld
loope
jmp
xor
leave
add
roll
fidivrl
add
cs
push
xor
psllw
dec
mov
in
call
add
pop
add
push
add
js
loop
pop
jle
jmp
aas
decb
add
cmp
dec
orb
dec
push
es
sub
xor
aaa
xchg
insl
subl
adc
mov
dec
sub
cmp
test
aaa
psrlq
dec
sbb
mov
shl
sub
add
hlt
mov
repnz
pop
cmp
in
fucomip
in
or
or
subb
iret
push
add
pop
dec
jbe
mov
xchg
leave
mov
popa
sahf
faddp
repnz
clc
adc
cmp
cld
jae
ja
add
out
or
adc
dec
sbb
cmp
inc
push
push
aas
es
mov
inc
iret
inc
cmovg
push
mov
mov
lahf
rcrb
dec
lahf
loopne
in
call
push
cwtl
inc
clc
cwtl
inc
mov
jl
pop
add
add
or
loopne
adc
cmp
sbb
dec
and
mov
add
mov
pusha
call
mov
pop
add
xchg
cwtl
andb
stos
int
aad
pusha
push
pop
mov
mov
cwtl
add
xor
add
jmp
inc
hlt
shlb
add
xchg
dec
pop
orb
mov
enter
daa
jo
out
out
loopne
xchg
mov
int3
enter
aam
fdivl
in
push
jl
and
mov
rcrb
sbb
lret
add
xor
into
aas
inc
pop
and
shl
push
mov
add
sub
lds
cmp
mov
cmp
add
aaa
sbb
test
mov
cmp
je
and
sbb
cmp
add
pop
fldenv
outsl
add
jp
loopne
cltd
sahf
add
mov
fadds
xchg
loop
mov
or
adc
xor
cmp
cmp
jnp
and
aad
ret
into
sbb
repz
popf
out
add
repnz
xor
cs
sahf
sub
push
add
pop
dec
insb
mov
jl
rolb
or
inc
xor
and
roll
movsb
cli
shrb
add
pop
aad
cmpsb
rorb
sbb
lea
incl
add
ret
sub
jmp
movsl
dec
cmp
sub
sbb
adc
fdivrs
adc
add
jns
lods
add
into
call
cmp
pusha
cmp
mov
adc
xor
mov
in
inc
add
mov
mov
popf
repnz
sbb
inc
inc
pop
shrb
mov
jb
hlt
dec
popa
mov
add
and
add
mov
adc
xchg
mov
lret
mov
jl
jle
pop
mulb
sbb
push
inc
loopne
leave
jno
add
lock
jb
je
insl
jbe
js
pop
loopne
cmp
cld
pop
add
jns
sahf
cmp
or
inc
daa
push
pop
fs
cmp
call
jns
jmp
add
jae
add
add
cmp
pop
lret
rcll
dec
jns
pause
xor
add
xor
in
cmc
call
ljmp
faddl
outsl
fmuls
push
add
cmp
mov
pop
dec
mov
pop
pop
lock
cvtpi2ps
lahf
popa
or
or
rol
mov
pop
hlt
xchg
clc
or
ds
mov
repz
xor
or
dec
cmp
mov
add
sub
in
adc
bound
scas
add
mov
mov
fidivrs
lods
add
or
or
add
lock
cli
xchg
fcoml
out
leave
push
inc
test
dec
mov
pop
xor
inc
je
jbe
js
adc
add
or
pop
loope
add
push
xor
push
jae
jnp
inc
in
int
decb
test
xor
cmc
add
jle
lcall
mov
pop
xchg
or
aaa
inc
cmpsl
push
pop
addr16
mov
xchg
lock
mov
sahf
push
xchg
call
add
insb
add
rep
cmp
and
inc
cmp
dec
leave
push
loope
pop
cmp
jb
cmp
sub
pop
jle
in
call
cmovle
rol
insb
jl
incl
inc
mov
add
js
xorb
daa
xchg
xchg
mov
xchg
dec
loopne
pop
in
cmp
jno
xorl
inc
dec
pusha
inc
daa
adc
xchg
lcall
add
pop
loopne
add
daa
insb
mov
fadds
push
or
xor
cld
or
js
add
xor
sbb
andb
inc
outsb
sub
add
addl
scas
add
cmpsl
mov
add
clc
inc
rcll
int
jb
jp
mov
pop
jl
ljmp
jle
add
push
shrl
subb
cmp
es
xchg
jo
and
shll
or
stc
or
and
push
add
add
sub
pop
adc
lahf
pop
pop
dec
pop
pop
xor
dec
sub
or
mov
or
or
pop
shrl
adc
stos
sub
cmp
pop
pop
push
je
aam
pop
mov
push
mov
shlb
dec
lock
jl,pn
sub
sub
dec
pop
push
inc
arpl
cltd
jg
stos
js
add
pop
and
cli
dec
das
xchg
xorl
rcl
jle
clc
lock
add
and
shrl
in
es
and
test
add
pusha
adc
pushf
push
ret
xor
dec
pop
add
sub
lret
jp
cmp
jl
dec
rolb
in
call
aaa
add
cmp
add
xlat
xor
xchg
mulb
rolb
push
in
rcrb
pop
mov
and
shrb
add
loop
add
cmp
pusha
mov
dec
add
jnp
bswap
inc
cmp
dec
jo
cmc
sar
fcmovnb
sbb
lds
jp
mov
push
add
test
pushf
test
inc
frstor
xor
pop
loopne
das
pusha
add
add
sbb
push
cmp
cmp
add
inc
shlb
add
xchg
xchg
lcall
push
sbb
cmp
popf
or
pop
sbb
sbb
punpcklwd
cmp
pop
cmp
pop
mov
stos
shrb
add
push
aas
ret
sub
xchg
enter
xchg
popf
xchg
sbb
push
daa
out
inc
xrelease
subb
pop
mov
popa
in
add
shll
add
int
xlat
add
loop
out
push
xor
in
pop
mov
inc
enter
loop
js
ret
clc
out
mov
pop
call
lock
mov
js
add
jl
das
lret
test
clc
mov
cmpb
jg
loop
add
psubd
fcoml
nop
pusha
add
fbstp
jmp
int3
adc
sbb
ret
ret
mov
push
mov
jmp
sub
add
dec
call
call
pop
xchg
mov
mov
mov
push
ljmp
pop
sarl
and
add
je
jbe
mov
icebp
jns
pop
cmp
xchg
push
mov
stc
jo
cmpb
adc
inc
push
inc
cmp
mov
add
mov
pop
pop
adc
call
dec
add
or
popa
sub
xchg
jmp
cmp
xchg
pusha
les
xor
ja
add
adc
add
icebp
test
xor
push
ret
stos
cmpsl
ljmp
int3
xchg
test
add
adc
xor
jbe
sbb
shlb
add
cmp
sub
cmp
fbld
popf
mov
push
ss
dec
push
adc
add
out
mov
mov
sbbl
cmp
fcoms
add
ljmp
sub
add
mov
add
cmc
les
pushf
mov
add
cmp
cmp
daa
add
inc
xor
rcll
add
loope
lock
push
cmp
and
or
xor
popa
nop
inc
add
data16
loop
and
dec
popf
add
jbe
add
testb
fmuls
mov
ret
sahf
push
sti
shlb
jbe
add
adc
push
jp
dec
add
or
dec
movsb
lcall
xor
add
hlt
clc
pop
cmp
je
jo
push
push
ret
push
sbbb
add
xlat
xor
add
pusha
sbb
adc
sbb
mov
mov
roll
rcrl
sub
xchg
add
dec
mov
add
and
lods
or
inc
mov
fs
imul
repnz
xchg
leave
lock
and
loopne
add
dec
cwtl
sbbb
fld
leave
add
add
sub
add
push
stc
cmc
cmp
test
movsb
jmp
sbb
add
push
notl
sti
nop
pop
cmpb
arpl
push
inc
add
xor
daa
nop
mov
mov
push
mov
xchg
in
jg
pop
cmpsl
sub
pop
sub
or
add
jae
push
jnp
jb
in
repnz
xchg
xchg
es
mov
mov
mov
loop
and
ss
add
jbe
sbb
aaa
jg
pop
xchg
adc
xor
dec
cmp
and
shll
scas
les
adc
jno
iret
mov
mov
cmp
movsl
cmp
or
pop
cld
loopne,pt
xchg
in
cs
loope
push
and
shrb
or
xor
mov
adc
add
dec
jo
lret
add
dec
das
or
pop
xor
imul
sbb
add
sbb
pop
loope
insl
sub
add
out
add
dec
sbb
add
add
xchg
loopne
lret
xor
ficoms
pop
mov
shl
jge
test
jl
sub
clc
dec
add
jmp
out
loop
popa
rolb
sti
jl
cmp
sub
xchg
add
hlt
add
test
sarb
aaa
fnstcw
jecxz
repz
insb
cmp
mov
xchg
cmc
fmuls
add
dec
and
pop
test
push
pop
fs
imul
xchg
mov
pop
lret
cmp
xlat
add
xchg
fbld
out
test
in
push
mov
and
cmp
cli
cmpb
cld
cmpsl
inc
scas
mov
sub
lock
ljmp
test
inc
loopne,pn
sub
sbb
mov
jbe
push
lcall
add
mov
les
dec
rdmsr
dec
xor
or
xlat
js
nop
popa
fdivl
inc
xchg
add
loopne
fcoms
sub
mov
movsb
jno
cld
lret
sbb
cmp
test
or
rcrb
mov
fsubl
cmp
ret
mov
mov
cmp
add
cli
inc
mov
jle
sub
loopne
xor
add
mov
push
in
shll
adc
shr
test
cld
iret
lcall
stc
sahf
add
xor
dec
jo
iret
or
imul
loop
repnz
xor
adc
push
push
cmp
cmp
inc
xchg
pop
mov
ss
sbb
push
aaa
jge
popf
add
test
add
xor
add
mov
shrb
add
sarl
cmp
mov
pop
inc
and
js
loope
xchg
ds
inc
leave
lret
or
push
cmp
scas
cwtl
xchg
js
xlat
pop
and
out
pop
mov
dec
dec
dec
ret
jo
loop
mov
xlat
add
aam
and
jbe
pop
ja
out
lock
add
sbbl
daa
push
test
adc
inc
ucomiss
sahf
mov
ret
loope
jl
ds
inc
add
xor
lock
adc
xor
push
cmpsl
sbb
mov
insb
clc
cs
aaa
inc
in
push
push
jno
add
add
cmp
cmp
jo
movb
lock
jmp
jmp
rclb
mov
lods
push
add
xchg
inc
mov
mov
mov
or
pop
or
sbb
loopne
or
ret
add
inc
or
mov
rorb
adc
insl
shr
or
cwtl
roll
add
aas
or
fmull
dec
xor
inc
fcompl
or
pop
clc
insb
inc
mov
push
pusha
pop
dec
inc
mov
cmp
icebp
add
outsb
aas
xchg
sub
lock
les
add
add
xchg
and
mov
add
jo
jl
pushf
adc
pop
push
or
push
lock
dec
adc
mov
hlt
add
xchg
loopne
ss
sbb
data16
and
push
bnd
dec
int3
mov
enter
add
xchg
fildl
and
sahf
push
mov
pop
out
add
add
or
test
rorb
jbe
icebp
inc
lahf
push
enter
outsb
dec
les
and
fwait
popa
push
pop
mov
nop
in
push
adc
or
mov
add
popa
cld
imul
jmp
xorb
add
in
pop
shlb
ret
add
repnz
lret
adc
add
and
sub
ljmp
mov
or
sub
orb
addr16
add
pop
dec
xor
mov
mov
sub
ss
clc
cld
jbe
cld
or
outsb
push
inc
add
and
ret
inc
sti
sarb
add
add
add
je
shr
add
cmp
lock
add
mov
push
ds
pop
xchg
jne
ja
dec
jle
mov
sub
add
dec
dec
add
aam
xchg
add
and
or
mov
cmp
sub
mov
cwtl
enter
sarl
add
cmp
jmp
out
sahf
mov
mov
and
and
dec
add
mov
add
push
rclb
test
add
js
fsin
jne
inc
mov
add
pushf
clc
ss
jmp
jl
sub
imul
lods
jo
adc
pop
out
xchg
pop
add
dec
test
enter
add
mov
and
sub
cmp
and
scas
add
xchg
je
add
pop
in
pushf
add
xchg
inc
sbb
pop
sub
or
sub
leave
push
push
pop
mov
aam
mov
lock
test
cmp
mov
xchg
xchg
push
dec
mov
ljmpw
jo
and
add
dec
dec
shufps
addb
dec
xor
lock
sbbl
scas
mov
add
or
lock
add
push
cmp
cmp
cmpb
outsl
mov
std
cmp
stos
mov
add
cmp
cmp
sbb
mov
sub
xor
pop
add
push
and
loopne
and
add
imul
jge
cmpsl
mov
lock
mov
add
xor
popf
in
or
dec
aaa
pop
or
test
or
and
leave
test
call
push
das
ds
dec
jno
pusha
add
fstpt
ljmp
dec
inc
add
dec
aas
adc
fdivs
and
push
add
mov
xchg
xchg
mov
notl
daa
and
jo
pop
add
rorb
cli
sub
js
xchg
lret
loope
xor
dec
xor
add
inc
cwtl
add
ds
mov
insb
ds
aaa
loopne
xorl
xor
out
xor
dec
cmp
mov
push
mov
xor
dec
sbb
mov
enter
add
aam
ficompl
xchg
and
add
in
dec
mov
add
mov
pushf
jecxz
lahf
sarb
jnp
add
jl
mov
mov
adc
mov
pusha
dec
inc
or
pop
and
dec
pop
aaa
cmp
inc
in
inc
icebp
jge
sub
push
adc
add
add
cwtl
mov
cmpsl
inc
aad
jnp
add
push
ret
aaa
in
nop
icebp
mov
add
stc
xchg
std
pop
and
inc
in
add
cmp
add
or
add
roll
pop
jecxz
cmp
adc
adc
lock
mov
pop
pop
lahf
arpl
pusha
cmpsb
or
ss
and
cmp
lcall
popa
cmp
pop
push
jmp
hlt
sub
dec
sahf
rol
stos
movsl
fmull
call
sbb
pop
mov
adc
add
sahf
pop
xchg
bnd
adc
ja
imulb
call
mov
pop
inc
lock
cmp
aas
push
xor
outsb
mov
in
adc
sub
jmp
out
jbe
js
jp
sti
jl
add
xchg
ss
insb
xchg
and
test
stc
mov
clc
outsb
cs
enter
pushf
roll
movsb
clc
test
dec
mov
add
nop
je
pop
mov
lods
cld
add
push
enter
popf
roll
test
mov
jg
test
leave
dec
and
pop
fwait
add
xor
stos
ret
aam
pop
adc
call
and
loope
add
in
mov
mov
pop
add
add
daa
xor
out
or
lahf
jo
add
cmp
inc
loope
jnp
fsts
mov
addb
outsl
mov
inc
push
sbb
or
imul
pusha
mov
add
pop
testb
sbb
add
add
loope
jmp
or
test
sbbb
mov
pop
cs
push
add
stc
shufps
add
push
pop
mov
pusha
add
dec
or
mov
les
lahf
pop
out
and
add
add
lock
mov
cli
or
xor
add
dec
dec
ret
pop
add
enter
test
fnstcw
add
push
stc
inc
add
mov
adc
jae,pt
add
das
cmpsb
add
cmp
test
add
add
cmp
repnz
test
xchg
and
rorb
jne
sbb
repz
sbb
jmp
or
mov
jl
add
adcb
cmpb
cmp
or
int3
movsl
fs
stos
or
out
push
hlt
jae
cs
add
mov
cmpsb
sbb
lahf
mov
xchg
aaa
adc
sbb
add
icebp
jb
cmp
pusha
cmp
cmp
or
inc
cmp
xchg
andl
xchg
add
pop
add
sbb
mov
add
subb
ja
add
mov
mov
cli
js
insb
jecxz
pop
push
add
sbb
inc
add
das
or
add
ljmp
and
push
add
dec
mov
sahf
add
inc
mov
ret
mov
ret
mov
jp
sbb
cmp
xchg
aas
cli
test
pop
ret
mov
nop
mov
es
dec
decb
leave
sbb
cmp
push
cmp
add
mov
repnz
js
pop
add
xchg
pusha
std
mov
push
cmp
add
xor
dec
test
add
lret
pop
rolb
push
es
aas
xor
inc
or
scas
fwait
pop
mov
jbe
and
mov
mov
lret
ljmp
add
push
pop
push
mov
sbb
adc
ret
test
add
popa
xchg
addw
repz
test
lods
jle
cwtl
mov
ret
jp
pop
mov
inc
fmuls
andb
add
sbbb
pop
add
test
cld
push
mov
lock
cmp
in
mov
addl
and
push
daa
add
mov
in
jg
push
clc
fidivrl
nop
ret
or
das
aaa
roll
add
iret
movsb
je
shlb
lock
imul
popf
test
mov
out
stos
add
push
ret
js
decl
loope
jmp
jo
insb
cli
in
jo
or
sarl
adc
mov
cmp
not
ja
add
fucomi
and
mov
dec
add
adc
pusha
and
loopne
stos
mov
pop
mov
add
sarb
nop
pop
sub
jne
add
xchg
popa
adc
add
repnz
ss
dec
xchg
sub
fcompl
outsl
add
mov
cmp
rolb
dec
mov
jle
sub
add
cmp
xchg
lcall
sbb
mov
mov
add
lods
jnp
or
repnz
subb
and
repz
aad
in
loope
cmc
std
adc
repnz
roll
test
lods
shlb
popf
adc
mov
stos
loopne
dec
movsb
jp
add
pop
rcr
mov
add
pop
push
add
add
ficoml
out
je
pop
out
inc
repnz
shlb
dec
cmp
cmp
cmp
js
je
jbe
add
shrb
push
insb
or
test
lock
mov
jb
add
scas
push
enter
cli
jbe
addb
xor
cmpsb
add
leave
pop
cld
outsl
and
sahf
or
mov
pop
orb
loopne
cmp
int
enter
fldcw
femms
loope
in
pop
shr
icebp
fs
xchg
std
and
mov
in
jmp
test
ret
sar
lock
cmp
orl
adc
xor
dec
sbb
out
subb
pop
ds
insb
add
es
insl
and
repz
add
fcoml
test
fldl
lcall
sub
xor
loopne
xorb
lcall
sub
movb
scas
push
push
int3
pop
add
jle
loope
mov
mov
cmp
addb
push
lock
xor
pop
add
dec
popa
pop
fs
nop
add
ss
fmull
sbb
jge
jle
rcrb
adc
xor
add
push
xor
aaa
test
test
in
or
cmp
or
dec
orb
push
dec
loop
loopne
ficoml
pop
or
lods
mov
add
fs
inc
mov
add
in
push
xchg
or
lock
in
add
fdivs
mov
cmp
mov
jp
mov
and
push
dec
push
int
or
loopne
cmp
adc
sbb
ljmp
jo
je
dec
outsb
or
ret
in
js
add
jg
add
rcrb
xchg
lock
pop
jb
je
add
inc
sahf
sbb
pusha
pop
loopne
jp
xchg
mov
add
test
addr16
add
xchg
lock
xchg
notb
std
idivb
and
sub
daa
add
scas
imul
jo
dec
lea
add
leave
add
lret
inc
push
xor
jno
add
jp
in
mov
hlt
push
insl
test
push
outsl
dec
pusha
add
mov
or
dec
sbb
push
fisubl
xchg
les
add
ss
ds
pop
imul
push
add
lret
repz
dec
cmp
push
mov
add
mov
add
pushf
sbb
add
add
jbe
add
cmp
xor
aas
jl
xchg
and
jle
add
dec
int
lret
add
pusha
jp
cmp
das
cmp
xor
and
stc
shrb
add
xlat
sub
mov
and
popf
xchg
inc
cmpsb
mov
jnp
roll
add
loopne
sbb
movl
pop
in
add
mov
push
sbb
jno
or
setg
movsl
push
cmp
dec
lret
push
fdiv
cli
repnz
sbb
arpl
push
loop
mov
jle
add
or
cmp
insb
push
je
and
orb
repz
repnz
pop
in
add
xchg
aas
mov
jo
pop
xchg
or
sub
pop
cmp
subl
mov
add
ss
and
cmp
pop
lret
pop
jo
jle
xchg
xchg
dec
movsb
or
in
mov
rorb
lock
pop
jmp
add
sbbl
cltd
xchg
mov
out
in
loop
adc
inc
lock
add
cmpsl
jmp
mov
add
mov
pusha
add
repz
fcmovnbe
xchg
and
movsb
ds
lock
add
call
ss
jle
inc
imul
enter
cmp
add
repnz
js
je
or
subb
repnz
push
sbb
test
mov
push
test
add
popf
push
and
pop
ret
data16
jnp
jo
jle,pt
sbb
clc
icebp
lret
add
add
ret
sub
rorl
js
aam
dec
setge
xorb
push
mov
adc
add
mov
cvtdq2ps
lods
addb
into
daa
push
pushf
fucom
testl
mov
pop
dec
mov
jne,pn
xchg
mov
test
lock
jmp
clc
dec
cmp
mov
pop
addr16
je
pop
in
dec
add
ljmp
ud2
fisubs
pop
test
js
add
fidivrl
add
pop
daa
jg
dec
das
jl
inc
inc
iret
lret
add
cmpsl
and
jmp
push
jo
xchg
dec
jg
mov
ret
aam
or
in
jp
sarb
divb
les
add
test
aas
or
addb
jg
add
hlt
inc
jmp
cmp
rolb
mov
jle
dec
enter
push
fdivl
add
enter
aam
sub
or
and
add
and
mov
add
mov
sahf
daa
stos
add
jb
add
ljmp
pop
and
add
addr16
mov
iret
cwtl
leave
pushf
pop
pop
sub
or
xor
or
inc
and
add
adc
pop
jo
pop
fmul
mov
lock
jle
pop
cld
mov
xor
test
cmp
add
ljmp
dec
xor
out
inc
jp
add
lods
jle
dec
pop
mov
ficomps
lahf
add
mov
add
je
rolb
fadds
fs
mov
jb
sub
out
in
add
add
xchg
inc
in
cld
insb
cmp
push
cmpb
sahf
aas
pusha
sub
xorb
add
test
jp
clc
cwtl
sub
pushf
mov
movsb
jb
adc
int3
loopne
aam
loope
fsub
loopne
cs
or
adc
rcrl
add
and
and
inc
add
ss
jle,pn
dec
add
dec
jo
ret
lods
mov
mov
shl
inc
add
pop
push
mov
hlt
les
inc
add
and
insb
mov
pop
inc
push
test
adc
cld
adc
inc
mov
and
shl
aam
pop
dec
and
cld
sarl
mov
xchg
rcr
movsb
and
jb
add
mov
cmp
gs
xchg
pusha
into
in
add
or
sub
pop
mov
dec
loop
cwtl
mov
sub
je
sbbl
cmp
mov
add
loop
push
xchg
add
pop
jle
adc
test
mov
add
daa
or
xorb
push
pop
or
pop
add
adc
add
into
push
sarb
pop
mov
cmp
jp
jmp
bswap
loopne
push
inc
add
xchg
adc
ret
pusha
pop
bnd
or
mov
xchg
lock
in
and
mov
dec
or
xorb
xor
add
ret
pop
add
mov
jmp
adc
xchg
nop
pop
das
lret
ficomps
mov
fstpl
sub
xor
xor
xchg
jne
pusha
loopne
push
call
cli
fadd
sbb
int3
adc
call
sub
test
mov
mov
push
push
push
inc
mov
push
cmp
sbb
je
mov
mov
mov
cmpxchg
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
or
add
adc
out
mov
add
rcll
sub
loope
pop
add
fidivrs
or
fildl
je
addl
test
aas
sbb
adc
jo
sbb
push
test
inc
nop
mov
push
es
add
add
add
inc
cltd
arpl
sbb
add
push
test
mov
add
pushl
movb
ret
test
push
add
push
push
mov
aad
inc
aas
xor
fisttpl
add
je
js
lods
cmp
call
testb
dec
jmp
add
push
add
add
dec
mov
pop
pop
push
add
push
ss
stc
add
rep
sbb
movsb
pop
adc
mov
pushf
and
inc
add
jp
movsb
sarl
pop
inc
ljmp
push
xchg
cmp
addl
notb
add
add
push
add
aas
je
mov
add
shr
jge
lods
pushw
sub
sti
add
add
add
add
sub
add
mov
addb
add
cmc
sbb
push
or
xchg
jbe
fcoml
mov
add
repnz
push
popa
xor
and
jb
pop
fcom
dec
out
add
push
push
pop
lock
adc
add
les
cmp
mov
sbb
add
sbb
mov
or
movsb
mov
addb
inc
push
push
push
sahf
add
jg
mov
push
mov
pop
sub
and
mov
push
int
adc
jmp
inc
fdivrl
xchg
aaa
add
add
add
loop
test
psrad
cmp
fbld
jne
sbb
cmp
add
push
push
mov
movsb
pusha
xchg
dec
mov
add
xor
fs
inc
adc
flds
adc
cmp
add
das
add
or
or
push
push
xchg
mov
push
push
shll
cmp
inc
divl
xor
rorb
dec
sar
add
adc
xor
bound
sbb
mov
sbb
pop
rolb
cmp
mov
add
filds
fisubrs
mov
in
sbb
add
xchg
hlt
cs
add
iret
push
inc
push
xchg
jg
call
mov
jbe
cmp
xchg
jnp,pn
add
mov
int
testb
pop
decb
xor
ja
add
and
cmp
push
mov
rcr
sahf
add
and
adc
dec
add
insl
push
je
jno
psraw
lds
xlat
in
aad
mov
add
sti
cld
mov
bound
fistps
rcl
push
sbb
inc
imul
mov
and
sbb
add
jle
gs
stos
jne
add
add
mov
mov
xor
outsl
dec
sbb
add
or
add
hlt
pop
adc
lock
and
adc
jae
adc
mov
sti
loopne
cwtl
mov
es
or
inc
adc
pop
jbe
add
out
mov
inc
push
fprem1
scas
pop
fildl
mov
inc
dec
jl
sub
pop
lea
mov
xor
cli
add
loop
push
add
packssdw
fistps
orb
pop
dec
inc
icebp
add
mov
xchg
cs
iret
and
jne
js
add
mov
cvtdq2ps
inc
imul
xlat
in
addr16
roll
inc
mov
pop
cwtl
xchg
mov
cli
jge
out
add
sbb
add
rclb
scas
mov
dec
cmp
pop
sbbb
imul
pop
psubd
inc
les
add
mov
xor
sahf
mov
in
lret
xchg
jp
push
xchg
push
lods
addr16
das
add
data16
add
sbb
pop
add
pop
adc
add
test
or
sbb
add
sub
int3
add
push
lahf
test
in
xlat
push
pop
call
add
pusha
sbb
cmp
addr16
roll
mov
sbb
mov
jb
or
mov
cmp
inc
gs
fstps
xchg
and
aad
xchg
add
out
mov
xor
jo
pop
xor
std
cmp
mov
add
mov
xor
stos
in
movsl
cmp
rolb
sub
push
sbb
cmp
mov
addr16
add
repz
add
xchg
ret
ja
add
andl
add
into
cmp
xchg
push
xchg
add
inc
lods
push
pop
mov
pop
inc
mov
jne
aaa
stc
sbb
sbb
pop
leave
rol
enter
add
lcall
ficompl
fucomi
mov
xchg
xor
mov
mov
sub
ret
push
data16
pusha
or
or
pop
in
daa
lar
jne
dec
push
dec
adc
jae
sub
dec
sub
rorb
aas
pop
movlps
or
rcl
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
inc
mov
call
xor
jae
fidivs
cld
push
push
inc
inc
lock
push
clc
jg
add
fdivs
add
add
roll
stos
mov
mov
push
pop
in
sbb
iret
cld
popa
add
or
jns
das
adc
pop
shl
sbb
push
imul
arpl
or
push
cmp
jp
loopne
aas
js
cmp
mov
popa
addr16
mov
inc
cmp
imul
dec
roll
mov
pop
js
push
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
jne
lcall
cmp
jle
out
mov
jl
insb
arpl
and
or
in
jne
push
fs
xor
jne
inc
loope
rorl
insb
ror
or
movsb
sbb
add
icebp
iret
inc
push
cmc
bound
dec
outsl
xchg
insb
jmp
inc
aaa
inc
inc
daa
cmp
dec
push
jnp
inc
mov
imul
stc
and
add
add
test
xchg
inc
stc
loope
pop
cmp
aam
out
lcall
stos
pop
je
xchg
add
mov
mov
into
jge
rorb
push
adc
into
cltd
inc
cmp
add
adc
and
pushf
jbe
cmpsb
pop
xor
js
mulb
pop
js
je
sub
and
jb
das
fs
xor
loopne
addr16
push
ds
jmp
pop
sbb
dec
mov
lret
or
std
jmp
outsb
jp
rorl
xchg
sbb
cmp
mov
xor
mov
mov
and
mov
push
sub
inc
pop
sbb
sub
out
jmpw
jl
push
add
into
add
cmpsl
inc
mov
test
mov
gs
jle
push
mov
daa
fidivrl
decb
lds
jno
xchg
aaa
cmp
js
mov
test
mov
sub
pop
xchg
fstpt
or
loop
inc
jbe
add
cmp
stc
fidivl
or
sti
jmp
sbbl
and
add
inc
fnstenv
push
je
jno
cmp
call
je
int3
out
sub
pop
sub
imul
mov
jl
jp
adc
pushf
out
rcrb
mov
addr16
sbb
stos
mov
out
out
sub
mov
or
shrl
mov
and
test
mov
adc
push
push
arpl
or
retw
shr
mov
dec
push
dec
xchg
and
sub
jp
imul
ret
sbb
and
daa
out
dec
sbb
mov
sahf
push
xchg
ror
pop
fiaddl
push
fsubl
orb
repz
in
mov
test
add
push
jp
inc
inc
insl
add
xor
nop
or
pop
add
sbb
mov
fidivrl
pop
mov
sbb
mov
aad
mov
sub
outsb
pop
out
rolb
mov
testb
arpl
jb
add
fnstsw
sub
add
pushf
xchg
jge,pn
mov
sbb
dec
pop
gs
sbb
sub
and
ret
add
pop
out
or
pop
popa
inc
jge
mov
scas
repnz
sub
mov
xchg
mul
bound
lds
xchg
jae
in
jg
mov
sbb
cmp
cwtl
shlb
jp
lods
add
jne
jg
js
and
push
dec
jl
shrb
mov
rorl
lods
cs
pop
iret
lcall
cmp
stos
push
mov
cmp
inc
lret
lcall
aad
in
mov
dec
mov
enter
xchg
adc
cmp
dec
push
push
push
push
cmp
sub
dec
inc
or
cmp
lock
mov
fdivrs
int
in
pop
xor
xchg
shr
fwait
sbb
addb
fsubr
sub
and
popa
adc
lret
stc
push
jbe
out
mov
inc
shrb
jmp
jne
push
dec
cld
dec
adcl
jge
cmp
jle
xor
inc
jno
cmp
iret
mov
jmp
dec
add
sarl
add
xchg
xor
jae
ljmp
clc
dec
inc
addr16
orl
cli
call
add
stos
add
shlb
pop
add
fmulp
data16
fnstcw
jle
lea
add
enter
add
sub
aas
mov
mov
adc
rclb
jmp
push
xorl
inc
pushf
out
xchg
es
ficomps
lea
push
sub
inc
cmp
sub
ljmp
ss
aad
sub
sarl
dec
jbe
mov
sub
andl
movsb
and
sbb
adc
repz
xchg
push
inc
sahf
mov
xlat
sbb
ss
or
pop
jno
pop
test
js
jno
rcrb
ja
push
or
unpckhps
adc
adc
pop
test
jg
data16
dec
mov
sub
xor
clc
fidivrl
lret
imul
int3
mov
pop
lock
mov
js
in
or
inc
mul
or
shlb
push
sarl
mov
xchg
je
fidivs
adc
push
sub
pop
adc
out
aam
loop
ljmp
aad
cmpsl
push
adc
xchg
popf
fdivr
loop
pop
inc
mov
imul
mov
mov
add
cmp
call
inc
mov
jmp
fisttpl
mov
pop
mov
lds
sbb
dec
das
jns
jmp
jle
shlb
jnp
lods
xchg
pushf
dec
cld
mov
push
cs
aaa
pop
xchg
fisubs
test
jle
jno
jg
xchg
inc
cmp
stos
loopne
push
in
add
arpl
imul
pop
ss
into
mov
lods
or
inc
outsb
dec
fs
mov
mov
inc
insb
das
mov
stc
xchg
pushf
arpl
mov
add
mov
pop
clc
mov
clc
or
mov
les
and
arpl
inc
or
and
sub
push
cld
mov
push
popa
xchg
pop
xchg
addr16
or
xlat
ret
jecxz
adc
arpl
jbe
adcb
cmp
and
jl
mov
xor
cld
cltd
xor
mov
pop
and
xlat
lret
push
dec
mov
or
lahf
mov
xlat
or
insb
sub
cmp
sub
sub
ret
cmpsl
fistpll
sbbb
push
loopne
push
inc
add
arpl
jp
xchg
dec
cltd
cmp
sub
pop
jbe
cmc
lods
jb
push
mov
cmpsl
das
xchg
add
lock
lahf
out
dec
ja
adc
sbb
xchg
out
imul
lahf
and
pop
xchg
inc
inc
sbb
je
idivb
mov
aas
xchg
out
jg
xchg
in
shlb
je
mov
das
jo
or
mov
mov
push
inc
mov
test
adc
mov
ja
sbb
scas
jbe
and
daa
incb
movsb
pop
pop
sbb
inc
xchg
mov
mov
js
or
in
icebp
pop
inc
imul
ficoms
xchg
test
adc
mov
mov
dec
int
and
test
jo
hlt
adc
and
fiaddl
fisubs
mov
imul
jb
scas
fstl
shlb
lods
add
cs
adc
movsb
mov
jmp
sub
inc
push
cs
cmp
ljmp
es
out
popa
in
jb
nop
leave
jge
xor
push
jecxz
out
test
mov
adc
adc
push
mov
lods
xor
rolb
outsl
dec
jb
and
andl
dec
ret
das
idiv
pusha
int
std
cwtl
adc
test
adc
adc
sub
in
int3
sbb
ret
cmc
shl
sbb
push
mov
pop
and
sahf
cli
ljmp
gs
pop
cmpsb
add
daa
lea
push
cmp
and
push
fisubrs
insl
push
loop
cmp
stos
mov
lods
inc
aad
mov
ja
aam
test
out
lock
pop
push
cwtl
addr16
ljmp
orb
adc
mov
xlat
sbb
mov
jg
mov
xchg
cwtl
int
xchg
or
out
lods
push
mov
push
mov
dec
inc
jo,pn
dec
xor
push
pop
daa
or
repz
gs
sqrtps
js
lods
icebp
fmull
cli
cld
sbb
inc
loope
jecxz
pusha
cltd
lds
pop
mov
push
inc
inc
movsb
dec
lods
fistps
out
jo
mov
jb
in
das
ja
inc
test
xor
dec
xchg
scas
fdivrs
pop
dec
mov
jb
pushf
leave
lds
jae
adc
dec
jl
ror
insl
data16
gs
sub
sub
leave
test
test
pop
bound
rcrl
stos
out
rcll
pop
cmp
add
lods
pop
mov
xchg
pop
mov
add
sbb
and
mov
xor
cmp
cmp
lods
xor
repz
daa
out
shlb
xor
outsb
and
rclb
pop
rolb
iret
or
jl
in
cmp
sub
sub
mov
add
outsl
jne
lods
fisttps
stos
xchg
pop
add
sbb
mov
repnz
sbb
sbb
inc
repz
outsl
jmp
pop
fidivrs
rclb
push
divl
adc
into
sbbb
jp
add
push
outsl
fisubs
push
mov
test
lret
aam
lock
xlat
leave
mov
pop
in
xchg
xchg
fwait
dec
and
repnz
lds
xchg
out
jmp
clc
out
sbb
and
insb
jbe
or
xorl
mov
pop
orb
push
aam
out
and
jp
nop
mov
dec
adc
jp
stc
xchg
jne
idivl
mov
imul
push
das
loop
push
sbb
mov
and
mov
ss
popf
mov
sahf
lret
mov
stos
inc
leave
into
xchg
in
cmpsb
mov
jl
scas
sub
ret
popa
cli
xor
fldt
add
fisttpl
add
movb
mov
cli
enter
push
jecxz
movsb
dec
pop
push
fisttps
into
mov
in
decb
std
hlt
add
insb
pushf
pop
xor
cwtl
fldenv
test
enter
push
repz
rcrl
call
std
cmc
movsl
iret
insb
jmp
lock
daa
xorb
mov
je
lcall
mov
test
push
movsl
push
fmull
cmpsl
int
shll
loope
ds
and
mov
repnz
mov
inc
mov
push
nop
insl
xchg
adcb
pop
mov
cmp
dec
mov
xor
dec
pushf
or
aaa
mov
jle
stc
push
sbb
int3
les
xchg
stos
sahf
ljmp
ret
jp
jno
jne
xchg
pop
daa
mov
loop
mov
jp
popa
add
xor
xchg
or
dec
xor
shll
lret
mov
jnp
insl
lcall
xor
sbb
loop
psrld
in
jmp
jecxz
dec
cli
adc
mov
in
push
enter
lods
shrl
test
std
cmp
rol
jnp
xorl
push
idivl
xchg
rcl
or
xor
or
mov
push
mov
xlat
jbe
sbb
pop
or
xchg
jle
gs
mov
out
imul
int
and
inc
push
test
mov
loop
add
sub
aaa
sbb
pcmpgtb
and
push
push
sbb
imul
mov
pusha
mov
jns
cmp
xor
pop
sbb
loopne
sbb
adc
lods
sbb
or
lahf
jl
push
testb
fnstcw
or
aam
test
cmp
sti
pop
pop
xor
cli
cs
jl
cmc
mov
scas
fwait
push
sbb
cmp
adc
test
pop
daa
sbb
dec
lretw
push
call
or
mov
mov
les
pop
mov
adc
imul
int3
jp
xchg
mov
mov
ljmp
ljmp
jge
sbb
fstp
jp
jbe
xchg
cltd
add
xchg
loop
bnd
xor
dec
jno
jp
stos
or
es
fcomps
imul
sahf
cltd
dec
and
xor
clc
inc
in
push
pop
mov
push
movsl
stos
stc
mov
enter
push
pop
jle
je
cmp
ror
les
test
adc
sub
cmp
xorl
subb
sbb
js
or
inc
je
mov
mov
pop
js
int
das
pop
cmp
std
and
leave
dec
cld
lock
cmp
fwait
pop
fidivrl
mov
xor
fiaddl
es
mov
adc
mov
push
repnz
adc
sub
or
mov
jbe
xchg
xchg
and
outsl
roll
cltd
dec
cwtl
sbb
hlt
shlb
sub
fldl2e
fmuls
jns
insb
mov
pop
ljmp
fldenv
add
popf
cmp
popf
in
xchg
outsl
pop
pop
jl
icebp
pop
aas
outsl
jge
cwtl
xor
js
pop
jge
jne
js
jnp
fwait
lock
mov
or
adc
shrl
pop
push
mov
in
mov
xor
xchg
pop
movsl
ret
jne
add
or
cmp
fdivrp
jg
sbb
outsb
mov
rorb
push
lret
sahf
xchg
cltd
xchg
adc
and
dec
mov
mov
or
lcall
add
mov
jmp
pop
adc
int3
in
mov
pop
fistpll
aaa
pop
or
pop
mov
adc
loop
adc
mov
addr16
repnz
loope
dec
loop
xor
clc
frstor
push
pop
int3
inc
push
popa
fildl
std
adc
sti
inc
hlt
lock
addb
test
pop
mov
mov
in
mov
js
sbb
xchg
lret
mov
aaa
cmp
popf
pop
sahf
push
scas
mov
sub
sub
call
adc
ficoml
fcompl
mov
adc
xor
fidivrs
jge
xor
or
lret
pop
xchg
xor
sbb
js
inc
lahf
in
dec
xchg
test
scas
sbb
loop
fidivl
pushf
sahf
mov
cmp
mov
fisubl
loope
mov
mov
test
push
cmpsl
push
fldcw
jl
cmp
out
sbb
mov
xor
sahf
out
xor
fs
es
push
push
popf
push
sbb
sbb
insb
xorl
jmp
dec
adc
lcall
xchg
mov
dec
xchg
sbb
xchg
mov
das
inc
jns
clc
inc
scas
add
xor
ss
mov
mov
inc
shl
fsub
les
es
mov
outsl
lret
push
scas
mov
pop
mov
outsl
in
imul
xchg
and
ret
xorb
aad
fnstsw
movsb
mov
dec
jmp
xchg
sbb
adc
fadd
push
outsb
cld
gs
add
test
sbb
ljmp
mov
jmp
jg
lods
popa
ss
dec
push
hlt
push
sub
inc
xor
mov
mov
jne
add
jbe
iret
jb
ret
cwtl
pusha
outsl
mov
jo
xchg
das
mov
orl
cwtl
shrb
call
mov
shr
dec
mov
daa
in
lret
fnstsw
gs
mov
adc
xor
andl
pop
div
popa
xchg
mov
lock
outsb
in
or
shr
aas
ret
mov
cmp
lret
push
xchg
push
nop
mov
xchg
and
dec
jno
mov
xor
push
movsl
adc
mov
and
xchg
xlat
in
xchg
jg
data16
inc
cmp
pop
dec
fsubrs
add
loop
out
or
add
xchg
sub
sti
or
testb
jns
pop
add
std
adc
out
jp
dec
inc
shlb
movsl
aam
xchg
push
adcl
jns
sub
es
jno
mov
loop
pop
push
pop
mov
jbe
inc
pop
lods
test
hlt
or
cmp
cmp
jge
mov
mov
lcall
xchg
xor
jg
jecxz
xchg
sbb
data16
mov
adc
mov
xlat
ficoml
rcrl
mov
sbb
push
sbb
push
adc
jbe
out
popf
xor
cmp
int
push
cmp
mov
inc
imul
push
adc
xor
or
inc
jmp
in
cmp
mov
push
fcomp
ja
jle
mov
inc
dec
mov
mov
adc
pop
xor
fcmovu
sbb
cs
mov
add
adc
lds
or
cmp
ret
sarb
adc
pusha
pop
pushf
bound
jae
dec
insl
sbb
mov
mov
stos
fstpt
xlat
pop
sub
fldt
or
push
sarl
negl
mov
xor
mov
mov
aad
cmp
dec
daa
push
rcrb
mov
test
iret
mov
nop
adc
xchg
dec
cmp
aad
aam
addr16
test
out
dec
sti
stc
lods
mov
aam
sub
mov
push
xchg
or
push
dec
movsl
lock
data16
mov
pop
repz
push
ljmp
adc
notl
push
aad
sub
push
xor
shlb
out
push
or
hlt
and
xor
in
xchg
xor
inc
xor
outsb
pop
mov
push
pop
out
add
xchg
je
dec
pop
lahf
icebp
jmp
sarb
sahf
xor
xor
fs
jle,pt
repnz
fidivl
out
shrl
sbb
enter
push
add
das
dec
jle
mov
and
mov
es
inc
in
jb
add
adc
mov
lahf
or
mov
jle
mov
scas
jle
jl
adc
dec
and
imul
insb
adc
daa
incb
call
adc
addr16
mov
mov
xor
rol
loop
outsl
or
std
idivl
inc
pop
xlat
shll
push
fidivs
push
mov
mov
push
sbb
addb
dec
fldcw
pop
cmp
roll
dec
jg
je
cmc
in
pop
xchg
imul
rol
movl
jns
test
addr16
sti
mov
in
push
jnp
jo
addr16
seta
es
or
pusha
lret
add
mov
rclb
loopne
orl
jmp
les
ficomps
cld
std
lds
inc
cwtl
add
push
test
jg
fld
mov
add
push
into
data16
fs
add
pop
out
sahf
stos
jb
dec
jmp
xor
adc
idiv
das
fmul
mov
pop
adc
in
adcb
vmovapd
mov
test
lds
pop
leave
inc
or
ljmp
loop
fiaddl
fistpl
ret
test
sub
data16
pop
mov
movsb
leave
inc
hlt
cmp
pop
into
or
jbe
add
shrl
inc
dec
imul
lock
xchg
sub
mov
mov
pop
mov
add
mov
mov
pop
sahf
sarb
add
adc
mov
mov
fdivs
outsl
sub
out
or
jmp
dec
or
inc
mov
stc
push
xor
dec
out
dec
add
shll
add
popa
jge
xor
shll
nop
enter
rorl
add
out
dec
aas
int3
popf
out
ljmp
jg
fisubrs
mov
dec
cs
js
enter
inc
dec
inc
es
sbb
xchg
pop
push
xor
push
cwtl
out
insb
jmp
xor
rcrb
add
sub
mov
stc
enter
xchg
lock
or
jl
in
mov
mov
lcall
xchg
pushw
test
popa
fisttps
mov
push
jmp
xchg
xchg
cltd
ljmp
sahf
pop
inc
out
dec
ret
pop
imul
or
iret
loope
push
adc
faddl
ret
jae
push
cmpsb
dec
jecxz
orb
mov
mov
cmc
push
push
dec
popa
pop
testl
jno
inc
test
adc
cmp
fcoml
clc
out
imul
push
enter
mov
mov
add
pop
adc
and
out
xlat
xchg
cmp
bound
mov
push
into
cld
cmp
popf
ljmp
imul
inc
sbb
call
add
cmp
mov
cmp
adc
repz
cmpsb
pushf
cwtl
aam
push
outsl
cli
dec
pop
std
inc
jmp
xchg
fwait
push
push
dec
xlat
insb
cmp
push
add
lret
add
sub
mov
hlt
loop
scas
cmp
lds
int3
or
sarl
pop
iret
dec
out
in
mov
gs
lret
pushf
mov
in
add
push
push
xor
mov
fisubrl
shr
into
inc
aas
mov
cmp
or
adc
out
sbbl
or
add
push
cmc
shll
sahf
pop
mov
xor
pop
cwtl
cmp
push
addr16
aaa
js
push
sbb
mov
hlt
arpl
xchg
insl
push
andb
sub
inc
mov
das
jns
int3
xchg
into
push
inc
popf
adc
add
or
call
xor
sahf
stos
dec
ret
xchg
pop
icebp
mov
lods
jmp
xlat
mov
cmp
add
xchg
inc
xchg
fildll
pop
inc
je
pop
sub
stos
mov
mov
dec
push
and
pop
xor
add
pushf
add
cmp
jp
scas
popf
test
mov
push
inc
sbb
pop
mov
lcall
inc
mov
movsl
jne
cmpsl
pcmpgtd
or
cmpsl
call
and
lahf
jae
cld
outsb
jmp
cmpsl
sbb
outsb
inc
mov
and
and
cmp
cmp
lods
hlt
cmc
jmp
test
jo
adc
inc
mov
sub
ret
cltd
ljmp
and
jecxz
push
insb
jb
lea
fstpt
test
movsl
and
xor
mov
dec
mov
retw
adc
mov
stc
sub
xchg
cmp
int3
jne
cmp
rol
mov
mov
cli
pop
push
lods
pop
insb
testl
push
scas
shlb
adc
pop
lcall
ss
adc
sti
inc
in
push
in
cmp
js
outsl
mov
and
ljmp
adc
jns
sti
inc
rclb
push
sub
in
aas
mov
mov
inc
shll
add
jg
leave
pop
xor
pop
insl
and
mov
scas
lock
scas
ljmp
stc
push
out
fldenv
lods
movsl
mov
popa
das
push
lock
icebp
repnz
mov
out
movsb
stos
and
and
add
mov
rclb
call
sub
orl
test
inc
lods
jmp
dec
addb
icebp
into
push
filds
pop
mov
mov
adc
mov
push
sub
gs
cmpsb
xchg
mov
imul
dec
in
pop
jp
adc
movsb
cmpb
out
xor
in
aas
inc
leave
xor
sahf
test
leave
xchg
jae
push
dec
cmp
xlat
call
jge
ret
adc
inc
dec
sahf
bound
insl
dec
sub
pop
add
sbb
hlt
ljmp
xchg
test
ss
adcb
adc
fs
aas
xchg
andb
or
fmull
dec
in
es
mov
outsl
add
push
rolb
xor
rolb
mov
sub
pop
jb
cld
sbb
outsl
cmp
sbb
out
sbb
or
and
jns
out
jp
fdivrl
and
mov
push
movsl
xor
scas
test
mov
rorb
ja
icebp
dec
push
pop
ss
jbe
mov
shlb
jo
dec
jne
ret
push
and
push
stos
xchg
dec
into
pop
out
out
ret
add
scas
test
cmp
loop
outsl
fstps
enter
cmp
fadds
xchg
repnz
xchg
jo
lods
mov
mov
jge
jecxz
es
add
movsb
push
adc
jle
push
stc
std
sub
inc
push
test
mov
ret
es
call
cmpsb
lcall
xchg
cmp
out
push
out
fwait
das
push
movlps
daa
xor
mov
and
or
sub
mov
mov
and
insb
adc
sub
mov
repz
fldcw
or
push
push
ret
cmpsl
orl
pop
cmpsb
repnz
aas
mov
fisubs
sbb
movsb
xlat
icebp
add
jmp
daa
push
scas
mov
adc
cs
pop
dec
and
in
das
mov
mov
xor
jne
and
inc
call
popf
dec
cmp
add
lret
sbb
nop
pop
dec
xchg
jle
mov
call
lea
add
mov
pop
mov
cs
mov
ss
xchg
addr16
sub
fstl
es
mov
cmp
js
sbb
sub
push
pop
dec
mul
xchg
fimuls
pop
mov
xor
adc
sbb
stos
push
out
mov
mov
push
ret
orb
ret
mov
and
pusha
lret
lods
inc
xchg
dec
cs
xlat
je
fmulp
out
loope
adc
ds
mov
fnstcw
ljmp
aam
pop
jp
sbb
dec
push
pop
dec
jnp
lods
in
outsb
xchg
or
inc
xchg
call
mov
and
xchg
test
pusha
inc
movsb
inc
mov
shrl
ljmp
ljmp
icebp
mov
cmp
movsl
cmp
jle
cmp
mov
xchg
pop
or
mov
ret
mov
jmp
xchg
mov
cld
and
lods
pusha
adc
or
xchg
stos
aaa
fidivrl
cmp
flds
mov
addl
cmc
in
adc
or
mov
or
push
fidivs
and
mov
pop
repz
xchg
std
test
sbb
mov
lahf
dec
push
dec
mov
imul
pop
mov
pop
sarl
inc
jns
xor
insb
mov
inc
or
xchg
xchg
stos
adc
cmp
lcall
xchg
sub
dec
outsl
xchg
adc
lock
jmp
xchg
pop
push
arpl
add
mov
xlat
push
mov
es
ret
push
jecxz
and
test
out
loopne
xchg
nop
fcompl
pop
xchg
or
push
push
add
imul
pop
push
mov
test
lods
xchg
sbb
into
xor
jmp
dec
cli
inc
aam
or
push
movsb
cmc
sub
xchg
xor
adc
popf
push
es
mov
pop
lods
data16
mov
adc
sub
fldl
mov
mov
pop
jle
neg
xchg
fstpt
inc
sub
push
lret
pop
movsl
mov
pop
jl
scas
xor
push
in
pop
mov
int
inc
movsl
inc
add
fwait
push
pop
in
push
shll
stos
mov
push
roll
xlat
inc
inc
cmpsl
pushf
mov
add
add
repz
mull
movb
dec
cld
int3
jge
dec
cli
add
mov
sub
push
nop
fistpl
add
adc
movsb
sub
dec
aam
inc
add
inc
and
and
js
push
stos
xor
inc
adc
iret
xchg
xchg
mov
mov
pop
mov
aas
xchg
dec
xor
jge
iret
dec
rcrl
mov
pop
jg
mov
loop
sahf
inc
rolb
nop
push
mov
aam
mov
mov
jge,pt
fisubrs
inc
xor
add
in
js
js
sub
xchg
adc
out
sbb
fnsave
popf
es
je
pop
scas
imul
sbbb
jmp
inc
loope
pop
pop
sbb
ljmp
out
sbb
lahf
xor
jp
mov
xchg
sub
into
cli
mov
inc
lea
das
xchg
pusha
and
jnp
sti
mov
xchg
testb
stc
or
int3
xchg
mov
dec
xchg
or
add
sarb
or
aad
push
dec
mov
cmp
cmpsl
jmp
or
ds
sub
clc
mov
lahf
xor
mov
rclb
addr16
ja
xchg
sbb
ja
lcall
cmp
sti
lods
enter
dec
mov
sbb
icebp
xchg
icebp
je
mov
das
cltd
mov
xchg
insl
add
mov
lcall
test
cmp
sub
push
mov
xor
jp
jp
mov
dec
xchg
mov
call
mov
xor
nop
mov
jno
mov
aad
xchg
push
ja
cmpsl
std
dec
adc
jmp
roll
cltd
jmp
insb
fistps
js
add
or
or
lea
clc
fidivl
shlb
and
cmp
dec
lahf
mov
pop
mov
adc
lods
mov
push
out
andl
mov
ja
jns
idivl
je
xor
test
pop
sbb
mov
sarb
dec
adc
pushf
inc
push
fcmovnb
in
jae
out
lret
add
loop
je
xor
iret
lret
inc
subl
inc
and
inc
subl
inc
rcl
cmp
test
and
fldt
in
sub
icebp
test
xchg
nop
test
push
or
mov
lock
ret
mov
dec
dec
pusha
movl
pop
or
insb
aad
xchg
mov
stos
sahf
add
lret
mov
pop
push
int3
jbe
cmp
shll
fistpl
mov
pop
outsl
mov
icebp
cmp
push
cmp
push
push
pop
push
int
out
push
cmp
mov
pushf
enter
and
or
aaa
lock
jg
sbb
inc
inc
sbb
arpl
xchg
xchg
arpl
inc
ret
into
dec
not
sbb
xor
test
lret
jnp
adc
js
gs
push
lahf
xchg
inc
jne
leave
mov
iret
sub
scas
cmpsl
in
cmp
jnp
xor
out
insb
inc
pop
lahf
sbb
dec
in
jo
xchg
push
subb
scas
inc
inc
mulb
jg
cmpsl
insb
mov
xor
xchg
cmp
fsubrp
xchg
les
into
xchg
inc
adc
xor
xchg
loopne
lahf
sarl
lods
xchg
adc
sub
pop
aaa
sbb
fwait
mov
adc
stc
insb
sarl
pop
cmp
push
jge
push
sub
xor
or
pop
sti
icebp
dec
int
in
insl
shl
inc
and
mov
ss
xor
nop
pushf
and
arpl
iret
xor
and
mov
loop
rcrb
jns
daa
test
fsubrl
std
jne
popf
int3
push
mov
outsb
imul
adc
lret
es
mov
idiv
sub
outsl
adc
cmp
jmp
push
xchg
jle
iret
or
ret
push
loope
mov
cmp
jge
stos
inc
daa
dec
adc
inc
test
and
inc
addr16
inc
inc
dec
jo
push
aas
or
mov
scas
popa
call
dec
leave
movsl
jg
frstor
leave
fstpl
jecxz
daa
lcall
int3
in
fs
and
jl
push
pop
pop
mov
outsl
fdivp
jl
dec
cld
inc
sysexit
dec
out
add
pop
dec
xchg
pop
inc
xlat
adcb
test
add
push
pop
es
lock
inc
dec
or
push
out
jae,pt
xor
xchg
jns
enter
sarb
xchg
in
loopne
fnsave
pop
addr16
sub
inc
xchg
or
aad
lods
lcall
push
mov
xchg
std
int
call
enter
pusha
xchg
in
cld
xor
es
pop
into
inc
add
add
mov
inc
mov
shlb
inc
add
rorb
cwtl
fldenv
loopne
int3
ljmp
movsb
clc
sarl
adc
cmp
int3
sbb
dec
inc
repnz
mov
pushf
ljmp
fsubl
cmp
dec
add
cwtl
push
or
test
int3
call
nop
and
lret
repz
or
adc
dec
or
pop
shll
add
xchg
or
shlb
out
jae
in
loop
inc
inc
loop
or
jp
les
fdivrs
lock
xchg
push
cmp
outsb
mov
mov
xchg
push
cmp
inc
sbb
mov
je
lcall
push
or
pop
jno
cmp
dec
push
fincstp
xchg
outsb
inc
jmp
insl
insl
or
xor
pop
cwtl
fdiv
adc
push
lods
cmp
mov
bound
pop
cmpsl
loopne
mov
mov
pusha
and
insl
fnstsw
dec
mov
lock
in
mov
sbb
cltd
mov
int
je
in
lods
movsl
pop
and
sbb
inc
add
fldl2e
xor
mov
in
subb
fdivs
or
mov
dec
sub
pop
jb
mov
js
adc
addr16
pop
cmp
xchg
imul
jl
lcall
loop
fisubrl
jb
sub
inc
les
outsl
fcoms
lcall
sub
lods
fisttpll
test
mov
cs
loop
or
in
mov
orb
es
push
not
test
test
imul
outsb
xorb
push
imul
pop
cmp
arpl
xchg
xchg
pop
cmp
jno
pop
aas
pop
jmp
sbb
lods
clc
cmp
or
push
negl
add
push
mov
std
add
jle
mov
mov
ss
shlb
lock
aad
mov
inc
jmp
xchg
inc
jg
lds
or
jo
xor
xor
jns
scas
inc
bound
dec
jns
mov
pop
testl
dec
test
inc
lock
sbb
ret
mov
add
xor
and
cmpsl
pop
pop
jl
outsb
int
iret
inc
lcall
fs
cmp
mov
add
dec
inc
pop
js
add
inc
or
cs
test
push
adc
mov
adc
lea
sti
insl
aas
pop
dec
dec
rcrb
cmp
push
xor
incl
jl
ret
cmp
nop
or
dec
cmc
inc
xchg
jns
sub
rorb
cmp
cmpsl
mov
and
sub
lret
into
cmp
xorl
addr16
cmp
js
jnp
daa
mov
and
pop
mov
inc
cmp
adc
xchg
in
je
cmc
xchg
adc
mov
dec
xchg
adc
pop
xor
sbb
push
inc
jmp
dec
out
lods
mov
xor
xchg
jo
or
xchg
adc
stos
mov
in
bound
cld
sbb
loop
outsl
sahf
loopne
aas
pop
sub
xchg
pop
test
arpl
cwtl
rolw
push
sbbl
or
stos
in
popf
ret
or
imul
cmp
les
cmpsb
xor
or
and
cltd
inc
xor
fisttpl
inc
sti
jge
dec
adcb
mov
into
add
push
dec
jnp
ss
or
mov
dec
mov
inc
lret
pop
sub
and
mov
movsb
xor
test
sub
mov
sbbl
xchg
imul
mov
add
in
adc
xor
in
adc
mov
gs
sbb
testb
push
negl
lahf
add
outsl
adc
aam
sub
push
int
leave
cld
mov
xchg
inc
pop
inc
mov
jmp
mov
sbb
outsl
pushf
inc
aaa
add
xchg
flds
stos
out
or
or
mov
push
fwait
adc
rolb
cmp
and
repz
lret
cmpsb
xchg
test
ss
and
xchg
pop
xor
inc
and
imul
pop
jno
stos
stc
mov
ret
mov
or
add
xchg
add
xchg
inc
call
inc
cmp
or
xchg
push
jmp
fists
popf
pop
icebp
cmp
pop
shlb
pop
jns
test
or
xchg
gs
mov
inc
or
cmc
addr16
loopne
inc
xchg
jns
cli
mov
mov
fmull
arpl
mov
xchg
pop
push
cmp
and
cwtl
cmc
clc
aam
lahf
lcall
cmp
and
push
cmpsl
dec
int3
add
xlat
repz
mov
int3
insb
sbb
mull
sub
loopne
pushf
push
sbb
imul
and
out
jnp
and
pop
popf
mov
popa
loopne
popf
jp
or
push
imul
inc
jg
orb
stc
ljmp
in
dec
test
pop
sbb
fidivrl
or
fwait
int3
test
xchg
or
shll
out
dec
xor
in
popf
insb
out
dec
fadds
fisttpll
add
stc
mov
sub
popa
xchg
cmpsb
imul
ret
cmp
push
xor
pop
shll
aaa
xlat
stos
je
fsub
sbb
ds
in
sub
pop
dec
sti
addr16
lahf
dec
xchg
in
pop
or
movsb
mov
or
dec
adc
adc
xlat
repz
xchg
and
sub
pop
push
sbb
pop
pop
stos
in
ret
mov
jp
pop
jmp
xor
lcall
jnp,pt
int
xchg
pop
popf
das
cmp
stos
mov
inc
cmp
gs
pop
dec
xchg
sbb
adc
push
int3
insl
gs
xor
sbb
loop
pop
ja
cltd
das
in
cmp
adcl
jno
ret
ja
sar
add
or
adc
nop
mov
aas
std
cld
dec
fimull
sarb
dec
popa
aam
xor
shl
mov
pushf
mov
inc
xor
push
mov
mov
shll
mov
arpl
movsl
out
xor
cmp
cli
fisttpl
inc
jp
sbb
and
mov
and
loop
cmpsb
cmpsb
mov
lret
add
inc
pop
stos
and
cmp
mov
cltd
cld
stos
jb
pushl
lcall
mov
xor
nop
lds
lcall
adc
lock
inc
fs
inc
pop
xchg
jns
out
sbb
mov
push
xchg
push
das
int
or
xlat
ds
xchg
xor
in
or
cld
push
sub
dec
mov
push
pop
xchg
icebp
jne
lret
jl
js
jp
jp
sbb
flds
imul
lret
adc
std
jmp
ljmp
adc
cmp
sbb
adc
mov
andl
js
fidivrs
jno
xor
test
outsb
mov
iret
jmp
jmp
pop
fsubp
cwtl
ss
insl
sub
push
bound
into
movsl
fistl
sti
cmp
fidivrs
jl
ss
pusha
or
ret
pusha
jp
hlt
sahf
out
rcll
flds
sbb
imul
ret
daa
out
clc
mov
or
iret
push
and
mov
out
cmc
inc
jge
data16
lcall
testb
push
repnz
test
movsl
sbb
mov
jl
scas
mov
fidivl
cltd
stos
add
cmc
xchg
enter
es
pop
jno
repz
adc
cld
xlat
insl
in
lret
pop
scas
iret
jae
aad
push
jecxz
fsubr
cmp
dec
push
push
shll
jns
or
outsl
inc
cmp
cmp
test
movsb
sub
and
fldt
sub
mov
mov
imul
add
inc
loopne
in
pop
mov
daa
mov
in
lock
sbb
fwait
dec
xor
and
setno
cmp
mov
out
bound
mov
sub
sbbb
stos
mov
mov
push
imul
and
mov
int
les
int
xchg
and
ficoms
push
fcomi
imul
pusha
mov
imul
inc
ljmp
loope
dec
rorb
popf
hlt
xchg
hlt
insl
shlb
sbb
mov
cmp
data16
cmc
fmull
cmpps
and
mov
fstpl
cmpsl
pop
out
sbb
arpl
lret
add
adc
mov
xor
js
enter
imul
imul
mov
mov
cld
mov
repnz
shrb
adc
lock
mov
jecxz
xchg
push
rcrl
adc
arpl
in
dec
and
and
cld
movq
xchg
mov
mov
std
ds
xchg
sub
dec
addr16
mov
fucomip
je
mov
imul
cmc
dec
das
jmp
pop
pop
adc
xor
cltd
jmp
fld
mov
popf
adc
fs
push
push
ja
fs
mov
ficoml
push
iret
pushf
dec
jb
push
daa
loop
fwait
jns
sbb
pop
outsl
jmp
ffree
in
mov
and
adc
xlat
and
test
cld
fdivl
cmpsl
mov
sbb
xchg
xchg
jae
xor
mov
daa
ljmp
mov
add
ljmp
outsl
xchg
inc
push
popf
movsb
adc
pop
xchg
adc
daa
sub
mov
pop
test
adc
push
jo
and
aaa
xor
mov
loope
mov
imulb
inc
fsubl
out
inc
sub
fwait
mov
and
xor
jno
lret
jo
data16
loope
cli
jae
roll
cmp
jbe
pop
add
push
sbb
cltd
daa
inc
or
repnz
fbstp
xor
mov
dec
push
enter
sbb
push
sbb
and
adcb
pop
or
pop
mov
mov
jns,pt
pop
ljmp
js
lock
dec
cld
imul
jg
mov
mov
imul
in
xor
pop
add
xchg
movsb
pop
mov
and
arpl
dec
inc
sbb
dec
lea
push
xchg
cmp
loopne
enter
mov
cmp
sub
mov
dec
push
pusha
andl
in
jg
inc
js
xor
or
cli
adc
pushf
js
adc
dec
adc
stos
out
push
aaa
ljmp
mov
cmp
fs
cwtl
lcall
dec
xchg
icebp
add
pop
xor
ss
mov
dec
std
dec
mov
and
mov
shrb
xchg
test
in
jnp
push
push
xchg
lcall
dec
push
in
cmpsl
lahf
add
into
push
aam
sub
sahf
and
pop
push
les
adcl
outsb
mov
inc
sub
xchg
mov
fcoml
out
call
xchg
xor
andb
getsec
or
inc
xor
iret
jge
imull
sbb
stc
lcall
mov
jmp
cld
movsb
dec
push
pushl
in
xlat
aaa
rorl
ret
push
cmc
sbb
xor
je
clc
fldenv
into
xor
test
mov
in
push
cmp
jmp
aad
add
sub
mov
lods
xchg
xchg
cmp
and
mov
mov
jb
cmpsl
jmp
xlat
imul
daa
mov
popa
jge
leave
mov
cwtl
add
sbb
pushw
loope
xchg
jb
and
sbb
shl
jb
loopne
popa
sbb
or
dec
and
repz
jb
lea
mov
fwait
bound
inc
inc
stos
or
mov
add
or
arpl
sbbl
mov
xchg
dec
dec
dec
jmp
in
in
xchg
out
scas
cmp
mov
ret
sub
idivl
leave
xor
and
gs
cmp
pop
movsl
int
outsl
adc
dec
or
mov
xorl
iret
xchg
cmp
repnz
rcrb
outsl
pop
xor
popf
stos
je
jne
or
iret
or
pop
in
xchg
addl
out
outsl
js
test
pop
lea
ljmp
jle
and
jo
sub
jmp
testb
and
pop
mov
dec
lret
jp
jae
jbe
int3
sbb
cmc
mov
xor
sahf
mov
mov
adc
aad
in
push
xor
std
fldl2e
adc
pop
sub
je
xor
icebp
dec
cwtl
into
or
xchg
popa
repnz
in
clc
dec
loope
mov
sbb
fistps
fildl
dec
mov
jne
cmp
scas
enter
cmp
push
adc
push
dec
das
lcall
inc
fs
fnstcw
fwait
ja
pop
lret
dec
push
enter
icebp
lret
mov
mov
dec
out
loop
int
pcmpeqd
fsubs
fcmovbe
negl
mov
mov
mov
lods
or
inc
jmp
aam
hlt
dec
xor
pop
test
cmp
ja
xor
int3
fnstcw
mov
pop
outsb
popa
ja
aas
sub
sub
and
movsl
es
mov
jno
arpl
mov
loope
popf
inc
mov
or
sti
push
mov
bound
nop
sub
clc
nop
cmp
inc
dec
inc
push
repz
out
mov
inc
jo
fists
push
daa
xor
push
cmp
es
jo
out
pop
jbe
adc
movsl
ds
dec
jl
jmp
out
pop
leave
mov
sbb
push
mov
stc
scas
out
lahf
jns
imul
pop
cmp
repz
test
pop
lcall
xchg
xchg
mov
imul
jmp
dec
dec
add
enter
jno
shlb
add
dec
jae
pop
cmp
ss
rcr
add
cmp
pop
pop
and
data16
daa
and
mov
fcomps
cmc
imul
filds
test
mov
movsl
add
dec
or
mov
adc
into
pop
imul
pusha
pop
lea
inc
fisubs
pop
mov
sbb
jmp
fisubrl
pop
stc
sbb
fdivl
mov
daa
push
imul
mov
out
cltd
jo
lea
sub
pusha
jl
dec
and
inc
ss
push
xor
fucomip
sub
or
call
fimull
xor
pop
xlat
sub
jne
shl
packssdw
sbb
pushf
fists
or
movsl
mov
cmp
cld
sub
loopne
xorl
loopne
popf
mov
mov
loop
shll
outsb
das
xor
sub
jbe
fcmovne
push
fidivl
fistps
js
pop
mov
fisubs
mov
leave
stos
stc
fscale
fs
nop
xor
scas
mov
inc
sbb
iret
lret
dec
mov
adc
inc
add
repnz
adc
pop
aad
outsl
inc
js
and
dec
sbb
push
mov
xchg
mov
xor
inc
leave
scas
loope
cmp
jns
xchg
or
pop
adc
clc
pop
minps
jnp
pop
sar
inc
adc
fs
pop
jg
out
aas
xchg
fcmovnu
das
mov
gs
mov
in
jle
cmc
add
pop
xchg
mov
adc
xor
outsb
mov
test
notb
jns
push
mov
mov
adc
movsb
mov
sbb
pop
js
imul
outsl
cmc
sbbl
push
pop
sub
jmp
fsubrs
and
jmp
jge
outsb
fwait
nop
dec
js
push
xor
je
sub
xor
in
inc
fucomip
enter
lret
fists
in
cltd
lods
add
mov
cmp
jae
mov
xchg
push
push
iret
decb
jle
sbb
repz
dec
in
inc
cmp
inc
call
jle
mov
pop
test
icebp
in
outsl
mov
cs
test
rol
lea
or
push
out
inc
sbbb
hlt
inc
or
xchg
stos
add
nop
lahf
mov
ret
cmp
push
inc
cld
mov
adc
outsb
rolb
push
lahf
xor
stc
stos
xchg
dec
and
div
test
in
lret
cli
mov
cld
mov
mov
xor
mov
pop
mov
insl
lahf
popa
xchg
fstl
fstps
sub
call
hlt
jmp
repnz
std
add
mov
movsl
les
jno
xor
ficompl
inc
les
aaa
jo
popa
hlt
std
mov
fdivrs
inc
xor
xchg
fcoms
fsub
inc
jno
xchg
das
int3
cltd
and
stos
cmp
pop
int3
addr16
cmp
outsl
in
subl
jge
sbbl
push
repz
dec
ret
test
inc
push
bound
xchg
aaa
mov
sahf
notl
mov
mov
sub
testb
xlat
mulb
cmp
fs
inc
push
push
dec
or
xor
addr16
mov
loop
sbb
mov
mov
or
daa
fisttps
in
push
sbb
jns
xor
rcrb
js
jmp
cwtl
cmpsb
pop
inc
arpl
aam
mov
xor
and
xchg
decb
sbb
ljmp
push
pop
fwait
stc
mov
xor
jecxz
inc
mov
je
mov
pop
mov
cmp
lea
ret
std
add
jmp
mov
pop
jb
add
pop
xor
rcrl
popa
pusha
pop
fwait
sub
push
pusha
xchg
cmp
pop
ds
popf
into
mov
icebp
or
and
daa
movsb
call
movsb
js
out
cmp
fsincos
ds
xor
xchg
andb
sti
lds
out
mov
mov
mov
inc
and
jge
dec
test
out
jecxz
in
ret
cwtl
jne
cli
out
aas
ret
pushf
inc
xchg
push
and
enter
mov
push
rcrb
pop
lcall
mov
lea
shlb
dec
sarl
mov
push
pop
call
imul
sub
and
sbb
and
jp
mov
fsts
jne
inc
into
dec
jae
ja
ljmp
inc
in
inc
pusha
push
fistl
in
sub
rcll
mov
test
cvtpi2ps
push
jno
or
lea
aas
lods
xchg
aaa
or
nop
rolb
stos
mov
jne
jge
cltd
out
dec
mov
push
sub
xor
jns
mov
cmpsb
mov
mov
and
sarl
cmc
adc
push
imul
ljmp
add
cmp
cmp
daa
cmp
es
push
arpl
das
push
das
xor
ret
dec
adc
xchg
xor
les
mov
adc
add
sbb
jmp
inc
push
cmp
jne
cmpsl
imul
rcr
in
fstpl
pushf
icebp
arpl
adc
mov
pop
or
push
leave
push
jle
sti
jmp
push
add
and
cmp
add
je
testl
push
loopne
add
jns
cmpsb
inc
loope
int
imull
aas
and
xor
push
xor
cmp
push
loope
or
mov
mov
nop
imul
push
clc
icebp
mul
push
mov
ret
push
adc
push
stc
dec
outsl
fcmovnb
or
cmp
ret
test
mov
repz
js
fcmovnu
mov
scas
dec
add
aam
pop
in
and
cmp
xchg
xchg
stos
lods
mov
negl
sub
jg
adc
pusha
xor
stos
fnstsw
pop
lock
mov
add
leave
lret
mov
sbbl
inc
sbb
mov
pop
stos
mov
lock
int
add
mov
movsl
jne
dec
and
ljmp
stos
inc
sahf
cmp
cmpl
jg
xlat
in
lock
jnp
nop
jg
sbb
les
pop
movsl
jp
sbb
sbb
dec
mov
mov
add
or
mov
jne
sbb
jae
add
lret
flds
xchg
jb
ss
fwait
ss
test
pop
jmp
add
imul
test
ljmp
test
fdivrs
and
fsub
pop
sti
daa
mov
inc
adc
xchg
lret
std
nop
gs
adc
mov
adc
mov
sbb
pop
xor
sbb
test
cltd
adc
and
sbb
inc
xor
push
sub
test
mov
roll
sub
idivl
movsl
popa
fwait
xorl
lock
pop
lds
cld
iret
in
inc
mov
mov
lret
das
add
stos
and
neg
push
fbld
lock
test
out
mov
and
inc
subl
push
lcall
push
or
lea
jo
add
cld
or
sbbb
aas
cmp
mov
lret
pop
in
sti
enter
outsb
stos
or
cmp
movl
push
out
sub
test
fbld
adc
loope
adc
cs
pop
inc
pop
jp
pop
ret
fwait
int
add
in
pop
ljmp
ja
mov
stos
or
push
dec
loopne
xchg
imul
jo
int3
mov
in
pop
add
jb
fidivl
addr16
insb
shrb
test
lcall
cltd
pop
pusha
lret
inc
loopne
pop
dec
cmp
xchg
adc
dec
xor
aam
ljmp
fidivl
sub
shll
push
fistpl
loop
and
inc
mov
inc
in
sbb
push
sahf
lea
ds
inc
cmp
lods
ljmp
pop
test
push
sahf
je
popf
lock
aaa
imul
sbb
iret
gs
mov
popf
sub
jl
cmp
je
jbe
pop
sub
add
jnp
aam
push
and
sub
scas
jp
push
cli
mov
std
insl
push
ja
popa
or
adc
adc
or
data16
pop
adc
pop
add
mov
dec
repnz
daa
sbb
ret
inc
filds
out
jns
push
les
lock
inc
pop
ja
xchg
test
inc
mov
or
add
jecxz
xor
popa
stc
aas
daa
stos
or
lret
ja
jo
pop
push
jp
jbe
xchg
imul
ror
std
mov
into
arpl
aas
push
jb
scas
lret
icebp
add
in
bound
mov
shrl
stos
orl
jge
int
sbb
lods
and
mov
lods
ret
lret
mov
ljmp
pusha
addr16
out
daa
into
test
pop
shll
hlt
lahf
push
out
cmp
test
sbb
js
out
and
loope
jb
mov
cwtl
in
shlb
xor
mov
mov
pop
addr16
push
mov
xchg
pop
jnp
xchg
mov
mov
enter
push
cltd
hlt
adc
fisubrs
xor
pop
std
pop
cs
xor
sbb
jecxz
push
lahf
adc
mov
js
xor
mov
std
mov
fidivs
jmp
mov
mov
ss
aad
scas
mov
int3
xchg
movsb
mov
mov
out
inc
or
hlt
mov
loopne
in
out
mov
das
movmskps
ret
sbb
mov
cmp
bound
out
call
jl
imul
sbb
aaa
add
in
cmp
sarb
scas
out
shlb
jg
and
enter
inc
xor
mov
or
imul
cltd
frstor
inc
or
pop
lret
adc
stos
mov
rcrb
scas
ds
sarl
jmp
fidivs
adc
test
xchg
outsl
fiadds
and
inc
inc
aam
movsb
pushl
fistps
xor
in
xchg
add
push
out
iret
addr16
fs
js
jp
mov
push
push
outsb
in
jno
stc
rorb
mov
test
xorl
mov
sti
stc
mov
cmc
inc
test
leave
nop
out
lea
daa
cmp
loopne
mov
cmpsb
in
mov
lods
setp
imul
aam
push
xor
or
xchg
push
sbb
daa
insb
out
loope
push
scas
lea
dec
repnz
xchg
mov
sub
mov
sbb
lret
iret
pop
jnp
jmp
in
jns
cmp
std
pushf
fcoms
lcall
adc
stos
lahf
inc
pop
add
or
add
push
xor
xchg
adc
ljmp
bound
inc
loopne
sbb
mov
jne
lods
adc
inc
cmpsl
out
int3
decl
or
icebp
cmp
cltd
repnz
xlat
iret
fidivrs
pop
test
and
add
clc
int
scas
ficoml
outsb
pop
xchg
mov
add
add
add
cltd
mov
cmp
nop
std
push
cmp
rorb
rolb
inc
mov
mov
les
xchg
int3
rcrl
inc
fcoms
ret
dec
ljmp
push
enter
leave
push
adc
mov
mov
ljmp
push
jle
aad
sub
jp
ss
std
mov
ljmp
and
test
jmp
jge
rcll
ss
sub
push
xchg
mov
inc
daa
and
stc
fisttpl
sbb
cmc
xor
add
cmpsb
inc
popf
cwtl
xchg
pop
xrelease
cmp
fidivrl
pop
sub
mov
pop
xor
loopne
cmp
testb
and
push
js
popa
jno
fidivs
setbe
pop
nop
aas
push
xchg
xchg
mov
in
add
stos
jmp
push
sbbl
sbb
and
mov
ficoml
rcr
cltd
push
sub
out
and
push
xchg
jg
leave
add
dec
fildll
and
inc
mov
stos
xchg
lahf
jbe
stos
lods
ljmp
loop
mov
xchg
add
dec
xchg
in
jae
or
divl
lahf
sbb
fildll
sbb
out
in
loop
adc
sar
inc
leave
inc
adc
pop
xchg
add
mov
fldpi
xor
fwait
mov
test
sbb
sbb
lahf
or
lret
add
fisttpl
rclb
add
xchg
xor
mov
sti
fidivs
cltd
xchg
xor
jbe
js
and
mov
sub
xor
or
xchg
mov
test
cmp
movsl
xor
add
ss
inc
fnstcw
lret
int3
sahf
enter
aad
mov
fdivr
insb
add
pop
mov
adc
ss
lds
mov
int
sahf
push
add
push
call
lahf
fucomp
or
test
aad
test
je
imul
cs
inc
jl
adc
incb
fwait
lcall
ds
adc
or
fdivs
call
mov
mov
dec
xchg
pop
sub
fstpl
loop
xchg
addr16
lahf
jg
inc
pop
and
sahf
push
jno
push
pop
adc
push
dec
sub
pop
subb
mov
popa
test
push
inc
or
mov
xchg
lds
movsb
and
push
push
jge
shr
mov
ds
or
mov
cld
xor
test
aam
cmpsb
jne
inc
icebp
cltd
stos
mov
xchg
cmp
dec
jmp
insb
stos
repnz
hlt
ljmp
imul
cmp
movsl
sbbl
add
dec
xlat
pop
loopne
bound
js
cmp
sbb
incb
adcl
or
mov
daa
mov
sbb
lea
mov
mov
iret
stc
lods
inc
jae
mov
ljmp
inc
cltd
sti
bound
cli
mov
cmp
iret
pushf
add
sub
sub
cmp
int
ljmp
ret
add
push
lret
jae
aaa
cmp
scas
stos
xor
add
popa
pop
int3
mov
mov
mov
lods
xor
call
mov
dec
mov
push
ljmp
das
xchg
pop
mov
mov
cmp
cmc
gs
adc
shll
sub
movsl
das
addr16
cltd
xchg
cmc
sbb
mov
mov
jecxz
mov
add
rcrl
hlt
les
adc
mov
jns
aaa
push
fildll
mov
popf
call
jge
or
notl
xchg
pushf
lret
lds
orb
in
gs
test
adc
cmp
jae
jbe
jp
cmp
or
stos
fildl
movsl
loop
scas
cmp
jo
daa
mov
rep
lock
pop
shll
ljmp
xchg
mov
and
xor
cmpsl
mov
xor
pop
popf
jb
pop
repnz
jge
mov
out
fsts
test
pop
fcomp
mov
jno
add
lret
jl
pop
mov
mov
out
ficoms
jo
sub
inc
pop
iret
fcmovu
sti
xchg
in
decb
jmp
dec
xor
cmp
xchg
pop
mov
faddl
or
out
call
lock
push
add
mov
or
jo
and
ja
nop
aas
loopne
dec
sbb
sub
and
add
idivb
jo
add
lcall
call
lret
and
jb
in
push
mov
out
dec
lcall
push
xor
lock
fisttpll
jg
sbb
inc
sbb
pop
jmp
addr16
or
pop
js
adc
pop
sub
fs
loope
ss
jo
lret
push
addr16
in
insl
xchg
nop
fisttps
or
pop
repnz
dec
push
sar
add
loope
dec
adc
xor
and
mov
cmpsl
push
mov
push
in
sbb
dec
sub
in
ds
mov
rep
jmp
xchg
loop
adc
dec
cmp
out
pop
aas
add
je
rol
cmpb
add
adc
jge
cmp
daa
push
cmp
lock
std
cltd
int3
rclb
js
lahf
adc
subb
add
inc
idivb
sahf
cmp
pop
lret
jne
dec
sub
cmpsl
fistl
fdivs
mov
xchg
push
insb
arpl
hlt
fidivrs
jne
shrb
daa
mul
gs
adc
outsl
sbb
aaa
adc
add
mov
pusha
sbb
lods
mov
outsl
ret
adc
andb
ljmp
cmovg
iret
sahf
subl
ss
sub
imul
xchg
xchg
js
fnstsw
xchg
rcrb
adc
outsb
hlt
pop
adc
cmp
pop
ss
push
and
cmpsb
mov
or
push
mov
push
mov
pop
or
push
push
lods
popa
xlat
adc
pop
flds
enter
jnp
movsb
inc
mov
xchg
jbe
sub
test
sbbl
push
sub
mov
mov
and
inc
jne
xchg
pop
dec
adcb
lret
sbb
push
lahf
mov
loop
push
jno
lret
adc
das
mov
dec
and
cmp
mov
das
sub
xor
pop
fistl
mov
inc
repnz
mov
sbb
out
sbb
and
mov
repz
hlt
in
sbb
jnp
in
mov
push
push
inc
in
push
sub
xor
sub
sub
jbe
xchg
xchg
dec
or
mov
push
lock
aas
cs
mov
lods
mov
mov
mov
aam
clc
testb
fiadds
push
std
push
inc
es
arpl
in
dec
mov
or
mov
inc
lret
push
sub
cmpsl
out
or
iret
mov
icebp
and
sub
xlat
aad
les
in
pop
or
push
test
push
sub
lret
and
add
pop
outsb
mov
jge
add
push
jle
imul
inc
pushf
rcrl
sub
or
jg
movaps
inc
xor
jge
les
loope
loope
mov
xchg
pop
movsb
mov
adc
xor
mov
xlat
popa
aas
cmp
scas
xor
call
hlt
push
aaa
cmp
xchg
jle
jg
call
jbe
pop
loop
push
add
xor
outsl
arpl
pop
sub
pop
and
outsb
pop
lret
scas
insl
ret
fisubs
rcll
pop
mov
outsb
adc
inc
outsl
iret
xchg
sbbb
sub
or
dec
or
mov
cmp
mov
stos
sar
test
jbe
push
jbe
or
inc
popf
std
mov
xor
arpl
xor
jle
xchg
in
ret
xchg
test
push
ljmp
mov
push
cs
mov
pop
fisttpl
cwtl
mov
jmp
adc
adc
sbb
ss
test
pop
leave
cwtl
sub
mov
mov
xchg
push
loopne,pt
rclb
push
lret
or
jge
sub
push
cli
xchg
mov
cmp
pop
sbb
out
or
popf
add
push
xor
leave
pushf
mov
pop
btc
sbbl
xor
mov
pop
clc
test
cmp
cmc
fdivp
inc
lcall
push
repz
or
or
or
lret
fimull
test
xchg
dec
jl
add
inc
mov
div
popa
gs
aas
xor
test
sub
je
pop
gs
test
mov
mov
ficomps
dec
add
and
test
xlat
xor
mov
mov
and
pop
fs
push
dec
sub
ret
adc
data16
inc
scas
adc
stos
aas
imul
in
pop
int
jbe
adc
and
push
and
push
icebp
imul
and
lock
out
rcrb
push
push
jno
dec
sub
and
push
pusha
pop
cmpb
lret
adc
clc
ret
mov
mov
pshufw
movsl
pop
xchg
cwtl
insl
pop
hlt
shlb
arpl
in
pop
jmp
mov
notb
in
dec
sbb
dec
lds
jmpw
sbb
add
jle
push
add
add
in
mov
push
fnstsw
out
push
xchg
add
inc
das
mov
add
adc
xchg
mov
sub
jge
sbb
push
iret
lea
xor
shlb
das
push
sub
xchg
out
adc
jo
mov
test
inc
xchg
mov
pop
mov
or
xchg
xchg
adc
cmpsl
repz
pop
scas
mov
addb
mov
mov
sub
xlat
hlt
test
scas
cld
fisubrs
icebp
daa
stc
mov
push
push
sbb
cmp
jl
insl
loope
lret
pop
xchg
and
and
lahf
push
mov
addr16
fldenv
sub
pop
mov
mov
sbb
das
cli
dec
fldcw
lock
loop
stc
jne,pn
icebp
mov
and
push
pusha
jmp
pop
fadd
cmpsl
lods
icebp
jmp
bound
loopne
and
add
ret
adc
adc
out
sub
stos
push
insl
ret
jl
scas
inc
fidivrl
adc
jg
lret
lret
fs
setp
les
adcl
cmp
ss
and
je
adc
and
push
dec
movsl
xlat
sbb
mov
aaa
repz
cli
xor
adc
dec
cmc
outsl
mov
in
mov
mulb
add
enter
mov
push
test
jb
out
xorl
jl
mov
jno
leave
push
inc
test
mov
jne
add
int3
les
cmc
xor
push
push
sbbl
int3
aas
pop
divb
push
pop
mov
mov
push
loopne
pushf
cmp
jb
fimuls
out
movsl
mov
out
dec
jecxz
clc
push
aam
pop
mov
out
gs
cli
or
sbb
aad
sahf
loopne
icebp
hlt
test
sbb
sbb
flds
adcl
push
int3
repnz
stc
gs
int
fdivrl
jb
filds
sbb
inc
adc
loop
dec
xor
mov
mov
shrl
mov
orl
fwait
pop
cmp
test
xor
bnd
cs
adc
xlat
mov
xchg
mov
mov
cmp
jl
jns
orl
or
mov
int
and
cwtl
add
aad
xor
lret
movsb
pusha
pop
repnz
fcompl
pop
call
test
mov
push
data16
xor
jmp
hlt
mov
fildll
cwtl
dec
sbb
inc
sti
aam
rorb
add
movsb
arpl
pushf
test
mov
inc
in
adc
jmp
aas
cmp
mov
mov
cmp
mov
icebp
flds
dec
jg
popa
lret
or
inc
lahf
mov
jno
inc
push
out
ljmp
in
dec
xor
lcall
lcall
dec
mov
xor
popf
loopne
xchg
pop
sbb
pop
mov
or
rcrb
clc
adc
lea
daa
js
or
inc
repz
mov
add
stos
lret
sbb
jmp
mov
cmc
ret
aam
popf
lret
lea
popa
fstpl
mov
push
sahf
icebp
and
jb
dec
loope
cltd
cs
xchg
cli
ret
jnp
cmpsl
fsub
xchg
sub
ss
mov
fwait
nop
enter
leave
xor
sbb
scas
dec
insb
cwtl
fcoml
out
jbe
fisubrs
mov
jno
jmp
scas
cmp
xlat
lcall
adc
inc
xor
inc
lds
imul
sub
jge
out
in
or
mov
sbb
es
lock
xor
mov
out
lock
mov
xor
stos
stos
mov
ds
cmc
cli
mov
pushf
and
jae
and
js
andb
or
inc
test
in
inc
pop
ret
out
in
push
push
xor
add
sbb
lret
jge
ljmp
add
jae
jne
sbb
addr16
sbb
jge
fs
sbb
lods
faddl
adc
test
stos
xor
lcall
mov
mov
stc
or
or
or
icebp
imul
std
es
add
sbb
mov
daa
in
adc
push
addr16
sbb
or
mov
sub
test
aam
loop
dec
jne
imul
ja
jl
cwtl
leave
ljmp
pop
rcrb
mov
jecxz
push
fwait
mov
pop
jmp
pushf
push
inc
dec
pop
test
adc
iret
sbb
rcrl
inc
jmp
add
jb
pop
test
adc
jle
dec
jg
pop
mov
xor
jbe
loopne
mov
push
cmp
pop
add
out
pop
push
aas
shrb
mov
cmp
dec
fwait
add
loope
xor
std
loop
mov
cmp
into
in
bound
sti
jmp
movl
mov
pop
nop
sbb
ret
sahf
into
loop
or
cs
mov
jp
lods
pop
leave
mov
xchg
cwtl
mov
push
push
ror
adc
ds
push
xchg
inc
mov
push
insl
mov
add
pop
and
ljmp
xlat
lea
popf
push
jbe
pop
sti
out
data16
pop
mov
sbb
sub
ret
out
sbb
aam
loop
dec
lret
int
in
and
jbe
dec
mul
jb
icebp
test
and
jge
jp
icebp
shll
adc
into
sbb
aaa
mov
inc
push
jmp
push
jecxz
mov
insl
test
mov
cmc
add
pop
jp
xchg
mov
inc
push
mov
mov
jle
sarb
add
flds
push
push
ja
divb
cmp
xchg
push
mov
mov
sbb
outsb
in
call
xchg
adc
leave
seta
es
subb
test
daa
sti
sub
in
mov
cmpsl
mov
divb
mov
mov
hlt
xchg
or
repnz
leave
fisubl
inc
and
inc
xchg
out
frstor
fxch
pop
leave
addr16
fcomi
gs
ja
adcl
mov
fiaddl
in
xchg
movsb
mov
sub
sti
rolb
pop
ss
rolb
push
subl
mov
add
mov
ds
mov
shl
cmpb
or
dec
fsubl
cmp
repnz
enter
mov
push
movb
outsl
sub
pusha
sahf
jl
das
ret
es
mov
inc
orb
std
and
fwait
aad
mov
fmull
xchg
push
inc
xchg
cmp
jne
sub
adc
lock
adc
lds
push
fistpl
test
aas
mov
add
lock
xchg
inc
push
push
fnsave
mov
sub
aaa
dec
push
cwtl
call
push
aam
bound
clc
or
jge
pop
stos
jmp
aad
popf
mov
stc
ds
xchg
shr
mov
mov
sbb
insl
xor
xchg
mov
add
cmp
sbb
insb
jmp
or
pop
das
cltd
shlb
push
mov
out
je
data16
dec
and
fstpt
dec
jbe
cwtl
arpl
mov
inc
push
jg
out
add
dec
jb
call
mov
test
lea
and
cld
adc
mov
lret
mov
pushf
pop
popa
mov
roll
mov
into
jbe
ret
fidivs
add
mov
ror
mov
out
xchg
cmp
imul
push
call
movsb
cs
test
cs
stc
mov
ds
lcall
lock
cmp
out
stos
scas
lods
inc
hlt
test
push
ficompl
push
js
repnz
imul
and
dec
sti
nop
mov
nop
mov
mov
aas
vphaddwd
popa
shl
lods
xor
lret
adc
push
and
dec
pop
aad
push
mov
call
call
sub
add
or
push
add
xor
pop
xor
movsl
in
gs
sbb
jne
and
gs
push
adc
rcrl
iret
imul
inc
pop
push
stc
iret
mov
stos
lcall
int
jne
fistpl
or
ret
cmp
ds
std
sbb
add
sbb
cwtl
push
xchg
imul
mov
lahf
arpl
iret
int
inc
pop
jle
or
cli
cmp
mov
out
pop
cmpsb
or
mov
inc
pusha
movsl
mov
cmpsb
cld
add
popf
pop
mov
inc
lods
aas
sbb
inc
jbe
mov
les
mov
xchg
jns
stos
adc
add
and
jb
addl
test
and
sbb
jb
leave
adc
jg
and
mov
jno
sbb
fcmovnbe
cld
fsub
inc
mov
repz
fisubrs
pop
negb
sti
add
mov
pop
mov
sub
in
sub
xor
dec
cmp
stc
lret
sub
rol
fldl
ja
je
js
inc
push
insl
dec
sbb
hlt
sahf
out
les
cmp
movsb
mov
ffree
push
push
out
xchg
lea
arpl
xchg
mov
lock
lods
mov
jbe
or
pushf
pushf
loope
lock
rcr
test
shrb
pop
rcll
mov
inc
add
mov
or
scas
xchg
inc
aam
jne
lea
jle
jg
or
mov
icebp
add
arpl
xchg
pop
and
and
jge
xor
pop
repz
aam
sub
dec
jo
into
int3
add
into
jno
repz
sbb
xchg
sub
and
inc
mov
outsl
mov
inc
movsl
xchg
icebp
or
jo
mov
cwtl
ss
push
and
pop
lret
pop
add
and
adc
lods
jo
jb
into
ljmp
lds
cmp
aad
ljmp
data16
sbb
cmp
iret
lret
cs
insl
in
push
das
shl
stc
mov
push
jo
vmovaps
push
fsts
dec
shr
fsts
push
shlb
lock
jmp
push
mov
orl
test
xchg
incb
inc
hlt
mov
fucomp
add
les
rorb
xchg
dec
sbb
mov
adc
nop
xchg
inc
mov
call
lahf
dec
xchg
fs
shl
test
cmpsb
repnz
inc
inc
jle
push
fmul
jo
mov
dec
jae
and
sbb
sbb
jae
adc
enter
sbb
ficoml
pushf
std
jg
out
stos
xchg
push
mov
jb
mov
lahf
push
rcl
mov
repnz
xchg
loopne
mov
xchg
mov
in
movsb
sbb
mov
push
rolb
ss
js
xor
pop
cli
cmp
fucomi
jb
call
jg
mov
loopne
aaa
adcb
lds
lock
and
xorl
dec
lods
cmpl
mov
fsub
scas
jecxz
jle
sbb
cmp
add
mov
dec
push
and
mov
cmp
cltd
or
loopne
imul
dec
xor
lods
jno
nop
mov
sbb
pop
mov
pop
mov
out
les
inc
arpl
into
mov
xchg
add
pop
aad
shlb
sbb
cmp
add
xor
and
roll
pop
in
xor
xchg
lds
subb
pop
mov
and
pop
and
inc
sbb
outsl
je
leave
ret
inc
adc
das
fdivrs
mov
cwtl
stc
adc
lret
lock
or
adcl
and
push
cmp
pop
fnstsw
lea
in
jg
repnz
inc
mov
hlt
xchg
push
jmp
jns,pn
ds
repz
push
add
jnp
rcrl
sti
mov
mov
loope
xor
pop
adc
icebp
out
loope
mov
outsl
mulb
jmp
fistpl
mov
out
or
gs
push
outsb
push
jne
lahf
and
xchg
and
lcall
sbbl
push
mov
test
inc
push
adc
mov
adc
loope
mov
cli
rcrb
jae
sub
and
shll
int
lcall
dec
cmpsb
mov
xor
or
pushf
mov
cmp
sbb
xor
cmpsb
adc
pop
cmpsl
xchg
dec
push
jno
jb
ret
int
adc
mov
xor
cmpsl
cmp
push
clc
hlt
inc
out
or
push
jecxz
sarb
pop
xchg
and
ss
bnd
jbe
movsl
dec
imull
add
cmpsb
or
mov
out
push
call
jne
stos
push
add
push
lods
lea
sub
data16
pop
or
movsb
xorb
mov
std
xor
jnp
mov
bound
push
sbb
mov
or
rcrl
pop
cltd
and
ficompl
daa
popa
sbb
sbbl
loope
mov
mov
cmc
cmp
jge
rcr
lods
mov
inc
sub
lcall
add
es
scas
jl
push
xor
xchg
mov
dec
out
or
arpl
sbb
fisubl
jae
test
sub
and
scas
mov
shlb
rcrl
xor
mov
dec
and
imul
roll
mov
cmp
jno
dec
ja
lret
fistl
pop
jo
mov
pop
adc
aad
imul
jmp
or
clc
jnp
dec
jno
scas
inc
mov
fstpt
mov
push
hlt
cli
cmp
lret
icebp
push
dec
mov
das
jmp
bound
pop
pop
inc
jae
aad
adc
lods
iret
data16
ret
mov
repnz
inc
inc
cmp
je
dec
pop
shll
adc
and
popf
call
cmpsb
xchg
sub
pop
test
xor
xchg
andb
mov
lods
or
pop
pop
pop
mov
icebp
jae
and
or
sbb
das
push
inc
sbbl
mov
loop
mov
scas
ja
or
xlat
mov
jp
mov
pop
pop
sbb
add
mov
sbb
jnp
mov
and
cmpsl
inc
jmp
cmc
repnz
or
jge
sbb
mov
pop
stc
adc
sub
cmpl
xchg
fisubs
push
inc
dec
leave
stc
mov
xor
popf
and
inc
fmull
inc
popf
sbb
jle
xchg
cltd
add
jae
inc
adc
mov
push
testb
pop
pop
emms
popa
push
lcall
in
movsl
or
xor
lds
adc
xchg
xor
stos
les
push
lahf
mov
test
sub
fcomps
jl
rcll
mov
or
sbb
frstor
sub
arpl
fdivs
and
insb
jp
push
sarl
sub
adc
inc
push
jb
int
pop
or
adc
nop
arpl
or
xor
xor
jb
addr16
clc
sub
add
adc
push
pop
sarb
xor
lds
rcr
sub
stos
scas
or
pop
jae
fisttpl
push
cmc
and
xchg
mov
out
or
lahf
sub
mov
int3
out
daa
enter
xor
dec
add
or
add
out
and
or
and
cmp
pop
sarl
scas
sbb
jne
call
and
push
insl
call
sbb
xor
je
sub
fbstp
xor
inc
cmpsb
mov
sbb
repz
outsl
dec
sti
out
movsw
in
push
or
test
fnstcw
loopne
mov
xor
jmp
popf
pop
add
or
and
xor
cmpsl
pop
es
lds
pop
mov
mov
ljmp
cmpsl
and
icebp
aad
jnp
aas
nop
addb
add
inc
fcomps
xor
shll
xchg
cmpsb
scas
jle
pop
mov
pushf
and
push
pusha
push
mov
dec
xchg
adc
cmp
scas
push
push
sub
add
jmp
lds
xchg
xor
test
cmp
arpl
push
hlt
sbb
or
jecxz
and
pop
repz
in
cmpsb
sbb
cmpsl
lcall
xor
fcompl
lds
mov
adc
xchg
icebp
mov
imul
push
sbb
or
lods
out
jbe
aas
sbb
xchg
push
push
dec
mov
and
mov
jge
sbbb
cwtl
dec
mov
bnd
mov
rorb
mov
arpl
push
int
gs
push
mov
sbb
leave
outsb
js
pop
fldl
bnd
mov
pop
xor
dec
insl
out
pop
xchg
lds
dec
mov
in
icebp
pop
leave
xor
dec
negl
sbb
xor
sbb
outsl
dec
jb
dec
out
push
xor
push
arpl
sbb
or
push
mov
inc
mov
sbb
mov
push
out
adcb
sbb
mov
sub
imul
add
cmp
inc
xchg
lock
xchg
outsl
add
sub
fimull
movl
xchg
xor
cmp
push
push
pop
jae
lcall
rcr
pop
push
push
inc
mov
mov
adc
ljmp
ja
xchg
cld
mov
sub
xchg
fs
jmp
ret
push
sbb
mov
nop
test
pop
mov
repz
popf
imul
dec
mov
dec
jae
sub
popa
les
xchg
and
ja
rcrb
outsl
xchg
clc
insl
and
xchg
nop
push
adc
cwtl
jae
fdivrs
xchg
movsb
inc
or
push
fwait
jp
data16
out
lock
and
sbb
icebp
enter
jle
or
mov
loope
loope
das
inc
jae
mov
jmp
or
xchg
scas
xchg
jmp
repnz
dec
pushw
pop
cmpsb
imul
xor
jno
and
pop
in
jl
lret
push
inc
rcll
loope
add
icebp
mov
pushf
arpl
lea
shll
mov
and
scas
movsb
adc
fwait
lcall
daa
fwait
jecxz
mov
inc
xor
lret
sbb
adc
sub
adc
dec
jecxz
sub
xchg
inc
int
out
lcall
bound
or
inc
and
js
les
pop
push
icebp
leave
jo
mov
xor
inc
int3
iret
inc
mov
pushf
rol
xor
pop
mov
repnz
xor
into
incl
dec
push
imul
push
ror
fildll
fldl
pop
adc
rolb
sub
jecxz
ss
js
xchg
mov
cmpsb
jmp
insb
sub
test
inc
push
rol
adc
mov
lcall
jbe
jns
scas
dec
inc
and
out
test
shl
roll
mov
int3
push
pop
roll
les
pop
ss
popf
dec
mov
add
arpl
movsl
inc
shll
fnstenv
dec
mov
aas
jg
and
or
shll
in
mov
add
xchg
cli
adc
fdivrs
mov
jb
adc
fs
mov
pop
add
lds
nop
xchg
aam
cmp
dec
lea
push
dec
adc
mov
or
or
mov
rcrb
ss
mov
inc
movsb
aaa
js
enter
mov
movsb
stc
pushf
ss
sbb
adc
dec
lods
rdtsc
repnz
or
sbbb
inc
jnp
arpl
jae
lods
les
and
inc
bound
into
mov
jae
orl
pop
push
call
xchg
sbb
push
icebp
mov
cmp
push
push
ljmp
xchg
adc
adc
pop
ret
push
cmp
inc
jl
movsb
call
out
je
je
inc
lret
lea
incl
out
mov
dec
and
test
xor
int3
out
vmovupd
mov
inc
negl
add
sahf
sub
mov
xchg
pop
mulb
xchg
add
pop
outsb
add
jg
fdivp
add
and
lea
xor
cmp
stos
mov
mov
pop
jns
cmp
push
mov
mov
mov
fidivs
push
mov
shr
ret
xor
push
ret
pop
data16
jns
jo
out
push
mov
add
mov
push
push
jle
xor
mov
icebp
loope
mov
pop
push
negb
cmpl
dec
cmpsl
test
xor
xchg
hlt
lahf
or
jns
mov
clc
lcall
into
loop
stos
stos
shl
movsl
sbb
pop
add
mov
add
cmp
push
out
jbe
xor
imul
push
mov
in
mov
sbb
negl
sub
inc
fidivl
cmc
mov
insl
cmpl
jae
imul
inc
adc
push
repz
fistpl
jmp
pop
jecxz
lret
sti
testl
jmp
inc
cli
orb
add
shrb
fs
mov
mov
and
mov
sub
add
popa
movsb
and
repz
mov
inc
add
cmc
jmp
and
cli
sub
mov
cmp
iret
loopne
cli
mov
fbstp
mov
dec
mov
dec
sbb
scas
dec
push
fucomi
cmp
stc
sti
rclb
mov
xor
xchg
rclb
pusha
nop
xor
in
sub
mov
adc
pop
inc
in
je
cmp
or
loope
cmpsb
or
fistpl
in
in
loope
pop
cmp
sub
adc
dec
jmp
andl
mov
mov
cmp
ficoms
pop
imul
sbb
shrb
jmp
inc
xchg
into
popf
xchg
inc
push
adc
jbe
mov
loope
addr16
out
mov
pop
ror
xchg
nop
xchg
push
inc
movsl
je
pop
rcll
pop
cli
mov
lret
add
inc
push
outsb
nop
scas
leave
xchg
int3
lods
pop
clc
push
int
sub
sub
mov
loope
into
dec
push
iret
ret
push
or
inc
pop
into
lcall
mov
in
stc
fcmovb
in
sub
popf
fnsave
adc
pop
adc
xchg
arpl
imul
push
adc
daa
aaa
mov
cmpsl
gs
sbb
jne
sub
loop
cmp
mov
or
cmpsl
js
out
jb
shrl
fcomps
cltd
adc
es
sbb
jo
mov
push
test
adc
inc
js
xor
jl
push
and
push
dec
fadds
loopne
mov
test
sbb
dec
stos
push
mov
jns
orb
push
hlt
aaa
xor
lds
stos
aas
jg
sub
sbb
repnz
ret
iret
push
sub
dec
mov
jmp
pop
ds
sub
dec
jl
mov
cmc
mov
xor
scas
xchg
cwtl
in
aas
ds
jmp
ss
nop
pop
ljmp
addr16
shr
fwait
out
aaa
jo
mov
mov
xchg
fyl2xp1
mov
xor
add
pop
sti
jge
push
in
scas
cmpsb
push
mov
dec
repnz
ljmp
adc
enter
add
inc
inc
in
iret
daa
movsl
inc
xchg
xchg
shld
dec
in
push
mov
or
push
xchg
xchg
loope
pop
enter
adc
imul
xor
jge
sar
leave
mov
xor
and
mov
sub
sbb
mov
sbb
jbe
mull
scas
dec
pop
and
stc
sub
nop
insl
inc
clc
xchg
xchg
mov
adc
sbb
pop
ss
sbbl
cld
test
sbb
std
adc
dec
mov
sub
jb
fs
loopne
mov
jo
stos
dec
cs
std
jno
bound
push
shll
xlat
cmpl
dec
and
inc
push
pop
jne
cmp
scas
mov
divl
std
in
inc
insl
test
push
cld
mov
dec
aaa
pop
dec
shl
out
xor
or
push
ret
xchg
xchg
add
js
dec
xor
sub
xchg
dec
lcall
sub
dec
sti
rcl
aam
pop
cltd
jp
add
sbb
add
out
loopne
sbbb
test
notl
sahf
add
pop
mov
cmp
test
push
jecxz
push
cs
mov
andl
jne
pop
xchg
mov
xor
lock
and
jns
lahf
and
push
out
pop
mov
loop
xchg
pop
sarb
mov
inc
mov
jle
xchg
les
sbb
lods
gs
push
ret
outsb
fwait
push
mov
leave
dec
xchg
icebp
out
add
sbb
xor
shl
dec
fidivl
mov
cmpsl
cmp
push
daa
sti
movsb
pop
push
in
rcrl
mov
sbb
push
pop
push
fnstenv
and
cmp
push
mov
movsl
pop
lret
test
or
jge
aaa
cmc
pop
lea
scas
mull
mov
insb
aam
es
imul
jle
test
fidivrl
and
iret
testl
cmp
fdivrs
xor
push
or
pop
decb
shrb
fs
push
mov
xchg
push
adc
adc
sbb
cmp
xlat
dec
sahf
mov
jl
pushf
stc
dec
cmp
xor
jg
outsb
js
setne
aad
arpl
pop
push
cwtl
fidivs
shll
adc
shll
test
lea
insl
pop
fdiv
stc
mov
inc
lret
xchg
mov
jo
js
arpl
lret
cmp
xchg
pop
loop
jae
mov
loop
fsubrp
and
inc
inc
cmp
mov
cli
pop
dec
mov
inc
or
dec
lea
push
and
add
cld
call
fcmovbe
lahf
mov
mov
cltd
testb
cmp
lahf
cmp
das
in
prefetch
sub
cmp
cmc
add
decl
or
cmp
push
shll
mov
cli
movsb
jnp
pop
fmuls
push
lahf
push
dec
jge
sbb
sub
cmpsb
sbb
nop
int
xor
movsl
pop
and
mov
popf
sub
inc
sbb
mov
push
mov
mov
dec
dec
and
jl
popf
in
cmpsl
aam
cmp
mov
inc
and
sbb
lret
mov
movsl
pop
dec
jge
jns
test
in
xchg
test
test
add
mov
test
jbe
mov
ret
test
movb
fdivrl
imul
adc
mov
and
and
pop
stc
std
xchg
rcrl
rcrb
ljmp
gs
xor
fwait
fwait
cmpsl
test
test
mov
out
cmp
cmp
sahf
or
lods
imul
fwait
jb
test
adc
sub
outsb
push
sbb
es
add
xor
movsl
out
fcmove
lahf
xchg
into
pop
daa
or
aad
cmp
add
aas
icebp
fiadds
xchg
mov
inc
pop
fnstsw
shlb
icebp
out
pop
cs
hlt
sub
nop
pusha
dec
adc
scas
push
rcrl
jno
cmpsl
in
stos
insl
cmp
xor
inc
push
gs
int3
jns
xchg
cli
push
cltd
pushf
sar
ss
test
xor
lcall
jp
lock
in
js
test
push
jb
mov
xchg
adc
outsl
cmp
and
pusha
push
mov
jmp
xchg
adc
lods
sbb
xchg
inc
push
sahf
mov
pushf
mov
mov
jl
adc
cli
xor
cmp
jecxz
sbb
sahf
jp
pop
or
int
scas
push
stc
mov
andl
mov
xchg
xchg
fwait
mov
add
test
fdivl
mov
mov
loope
xchg
or
movsb
fsts
cmp
addb
push
cwtl
or
mov
sub
or
push
aam
mov
pop
push
es
or
aaa
push
cmp
movsb
mov
bound
mov
ljmp
mov
js
sbb
arpl
sub
ss
mov
aam
mov
dec
fldcw
mov
dec
loopne
jbe
or
push
mov
in
outsl
adc
test
push
xchg
imulb
mov
xchg
jo
insl
jl
jb
pop
sbb
lods
lahf
cwtl
mov
mov
mov
inc
std
pop
bndldx
blsic
inc
pop
jle
je
or
mov
or
push
addr16
or
test
adc
fwait
xor
mov
bound
add
out
bound
in
push
pop
fisttpll
out
test
push
lcall
mov
add
ret
jle
xor
mov
mov
dec
xor
pusha
sub
int
and
aad
inc
jp
mov
cmp
mov
push
push
movsb
fcmove
je
and
inc
jbe
lret
cli
mov
cmpsl
scas
inc
sti
ljmp
mov
insl
or
rcll
shrb
and
lds
mov
ss
or
movsb
cmp
push
dec
dec
test
mov
rcll
insl
or
shrb
adc
cwtl
out
sbb
call
sbb
jg
imul
icebp
dec
js
and
je
es
stos
movsl
jecxz
cmp
adc
stc
sahf
dec
xchg
jmp
in
test
test
cmpsl
addb
sbb
push
adcb
sub
into
and
add
jmp
add
jmp
xchg
xchg
icebp
push
or
arpl
xchg
fcoml
sub
cltd
ret
pop
mov
aas
daa
xor
fdivrl
mov
je
repz
into
xor
repz
ljmp
in
xor
in
scas
jg
mov
cmpsb
fistps
js
in
ss
aas
adc
fcoml
sub
lcall
inc
ss
mov
das
rsm
es
dec
cmp
sub
cmpsl
addr16
mov
jb
clc
or
pushf
lahf
jecxz
pop
fucomip
xchg
fs
jne
call
repz
sub
rclb
push
cld
stc
sub
lock
insb
xchg
lods
push
dec
nop
aas
mov
mov
cltd
mov
dec
mov
pop
cmp
fs
in
lock
xchg
pop
pop
in
sahf
mov
sbb
cmc
bound
cli
adc
in
rol
sbb
movl
adc
mov
sub
cmpsl
cmp
stos
inc
xlat
push
mov
ret
mov
into
sbb
jne
sbb
enter
loopne
jno
or
push
insl
fsubr
jge
loopne
jb
js
iret
mov
dec
icebp
ja
add
jnp
cmp
adc
lret
test
inc
push
mov
add
lds
push
cmp
lret
or
jae
xlat
fucomp
inc
push
scas
std
jecxz
add
mov
mov
lahf
stos
lods
lret
xor
xchg
mov
sahf
jnp
inc
xchg
out
sbb
dec
mov
xor
lret
js
cmpsb
pop
mulb
or
or
inc
cmp
xor
and
stos
mov
call
add
mov
add
dec
lods
negl
arpl
movsl
jne
jne,pn
aad
fbstp
aas
ret
pop
inc
cld
xlat
insl
fs
pop
imul
add
sbb
lds
loop
aad
daa
mov
mov
movsb
push
cld
push
jb
jecxz
adc
inc
sbb
xchg
dec
popa
push
push
sti
add
jb
fnsave
enter
in
xchg
add
out
push
cwtl
cmp
dec
mov
out
popf
in
mov
mov
rorl
loopne
cmc
ds
sbb
jbe
out
ljmp
xchg
rcrl
in
sbb
xchg
jno
pop
lahf
and
shl
leave
cmp
mov
lret
scas
enter
inc
push
aaa
inc
sbb
fsubr
jmp
int
inc
loopne
aad
and
dec
out
or
fistpll
jne
dec
adc
add
or
jnp
ja
jbe
and
dec
cmpsl
into
stos
fwait
jle
lret
hlt
clc
sti
jno
lods
adc
push
xor
jb
lds
jge
rcr
jo
cmp
jno
push
adc
cs
lret
xor
sbb
and
fcomip
fdivrs
jb
push
cmp
push
sbb
cmp
loopne
pusha
or
pop
ficoms
mov
add
subb
sub
paddd
shl
aam
js
sub
push
and
dec
jecxz
aaa
lret
test
xor
lods
dec
dec
sub
xlat
and
call
fisttpl
out
repz
sub
xchg
adc
cmp
cmpsb
std
fsubp
bound
jae
fldl
and
add
or
addr16
jne
push
mov
pop
cmp
das
and
jno
lcall
hlt
inc
sub
push
sub
in
adc
lods
xchg
rcr
adcl
xchg
push
clc
inc
jl
xchg
xchg
call
mov
mov
hlt
dec
subb
inc
leave
test
cmp
xchg
add
mov
sub
jnp
push
repz
inc
orb
inc
fistpl
cmp
mov
mov
or
pop
cmp
repnz
and
cmpsb
inc
jmp
inc
int
inc
cmp
cmp
pop
aaa
sbbl
xchg
repnz
outsb
jl
imul
cld
xchg
lret
rorb
push
inc
cmpsb
xor
sub
sub
cmp
mov
clc
imul
jp
insb
push
push
adc
rcll
lea
lea
repnz
fwait
out
xor
loopne
jecxz
cmp
add
jp
cmp
pop
cli
fldenv
fsubs
jge
cmp
cwtl
xor
clc
daa
arpl
push
mov
sub
xchg
xchg
mov
outsl
mov
popf
vmulpd
xor
sub
notb
bound
pop
adc
fildll
push
push
data16
arpl
adc
xchg
cmc
outsb
mov
and
or
push
arpl
or
push
test
sbb
cld
imul
push
push
xor
enter
xchg
aad
test
xor
cmp
addr16
fwait
mov
nop
repnz
cli
je
sbb
dec
adc
aad
jbe
mov
mov
ss
scas
andb
clc
or
addb
pop
rcr
test
push
cmp
jns
add
pop
nop
sub
jns
inc
loop
cmpsb
xchg
pop
ljmp
push
pop
lock
sahf
sub
insb
in
lods
fstps
inc
lea
mov
push
cmpsb
mov
and
outsl
mov
or
push
lahf
push
stos
mov
adc
movd
or
pop
into
sbb
mov
add
rol
dec
adc
sti
mov
cli
rolb
cli
push
in
loope
hlt
loopne
xchg
popf
jle
mov
test
mov
add
pushfw
mov
dec
sbb
dec
lret
pop
cmpb
adc
jnp
leave
sti
mov
xor
rorl
js
out
in
ljmp
mov
lcall
lods
xorl
xchg
mov
jmp
rolb
gs
ret
cmpsb
inc
arpl
jl
test
adc
adc
jmp
lods
lahf
push
iret
rclb
out
push
sub
adc
mov
lock
insb
xor
and
test
inc
or
inc
add
xchg
dec
leave
inc
outsl
stc
cmp
sub
add
jo
push
inc
inc
fimull
rorl
cmp
inc
es
xor
lock
decl
jge
jae
push
iretw
sbb
stc
adc
lea
hlt
jae
in
pop
cmpsl
mov
adc
sub
jl
mov
or
iret
shlb
pop
imul
out
mov
mov
push
rcl
mov
popf
out
mov
hlt
in
mov
mov
inc
lods
gs
xchg
dec
nop
pop
xchg
daa
pop
xchg
jns
scas
sub
ja
popf
add
mov
fs
in
fstl
imul
cmp
lcall
push
pop
movsb
mov
arpl
sahf
sbb
sub
mov
or
mov
sub
jmp
lds
or
mov
mov
inc
mov
repnz
lods
mov
push
pop
mov
mov
lods
repnz
call
xchg
out
test
cmp
or
loopne
dec
fcoml
xorl
sbb
xor
mov
dec
pushf
dec
mov
sub
decb
dec
inc
lods
loopne
movsl
stc
push
daa
aam
insl
add
and
aaa
std
repz
movsb
sbb
pop
fwait
les
inc
sub
aas
mov
test
add
sarl
jg
das
sub
enter
out
icebp
xchg
lea
bound
inc
lcall
adc
mov
pop
int3
ljmp
ror
and
add
mov
iret
sahf
daa
mov
imul
outsl
test
es
ja
int
shl
xor
sbb
dec
aad
adcb
push
or
and
push
cs
cmp
roll
cld
mov
out
xchg
or
test
xchg
mov
mov
std
jp
aas
sub
lock
hlt
test
outsl
mov
jge
push
push
mov
or
arpl
sbb
scas
mov
push
dec
sti
jnp
mov
movsl
xor
sub
xor
or
in
fwait
jne
jge
xchg
push
gs
bound
pop
push
xor
mov
lods
dec
fcoml
cld
fnclex
xlat
imul
sub
outsb
xchg
fisttpl
in
lahf
cwtl
mov
mov
adc
jb
cmpsb
inc
push
xchg
nop
loope
push
jnp
xor
add
jo
data16
nop
int3
xor
xor
mov
pop
add
inc
push
aaa
sbb
ret
stos
loope
scas
cmpsl
fnsave
jge
fildll
add
loope
add
das
gs
cs
adc
or
test
jle
xor
fistl
push
fstpt
and
rcl
or
adc
sahf
push
test
movsl
dec
mov
push
fs
dec
jle
jb
mov
mov
in
add
mov
push
push
cmp
std
push
mov
out
pop
pop
rol
push
in
or
leave
out
and
scas
mov
aaa
leave
add
or
push
shr
pushf
add
movsb
push
inc
inc
movsl
mov
dec
jns
jmp
or
cld
js
mov
adc
push
loopne
jae
in
dec
sbb
push
inc
orl
or
pop
into
push
sbb
sub
sbb
mov
sub
int3
mov
dec
loop
notb
js
mov
out
xchg
data16
mov
outsl
out
xchg
cs
or
lret
jg
lea
and
xlat
push
ret
movb
adcb
or
insl
popf
add
mov
cmc
cmp
sbb
hlt
inc
xlat
adcb
fbstp
adc
stc
subl
mov
setbe
mov
sub
lock
xchg
mov
xor
data16
push
insl
xchg
cmc
jns
jno
repz
stc
jmp
push
loopne
jp
push
les
mov
scas
jnp
and
cmp
lret
fs
mov
jbe
and
mov
xchg
mov
cmpsb
mov
fstpl
fs
mov
out
jns
mov
sahf
aas
adc
jp
push
lret
pop
scas
movsb
pop
push
or
int3
cmp
icebp
loope
lahf
xor
mov
sub
movsl
loope
sub
jg
aad
cwtl
das
out
insl
addb
test
pop
arpl
shrl
les
into
push
xor
xor
js
pushf
push
or
dec
mov
mov
test
out
jecxz
cld
dec
xor
add
out
lret
pop
std
daa
xchg
fisttps
or
orb
xor
fdivl
mov
cmp
dec
mov
loop
iret
jl
sub
mov
dec
add
or
enter
test
sahf
pcmpeqb
pop
sbb
repnz
mov
lret
fwait
sbb
gs
inc
jl
or
cmpsl
out
xor
mov
aaa
cld
mov
inc
sbb
rorb
or
lods
out
or
add
lret
jae
sub
mov
cli
stos
fstps
cmpsb
addl
sub
cmp
mov
test
fisttpll
or
rcrb
mov
pop
mov
nop
mov
jg
push
sbb
and
sub
mov
mov
jnp
fisubrs
mov
shl
jb
sbb
or
xchg
aam
ja
and
xor
pop
shl
lcall
mov
jle
cmp
lds
jg
loopne
push
pop
pop
out
lock
or
loopne
pushf
mov
xchg
fs
jne
in
inc
aaa
fwait
nop
pop
adc
xor
adc
cmp
adc
rcl
add
call
or
fstpl
das
pushf
jge
xchg
push
mov
inc
push
sbb
popa
addr16
xor
into
mov
fmull
sub
imul
mov
jb
fwait
lea
fcmove
and
cmp
inc
fidivl
and
shrb
enter
xor
inc
js
fldl2e
xchg
push
jmp
dec
xlat
rcll
stos
fdiv
jg
out
mov
or
aad
outsb
inc
add
push
inc
mov
and
lret
jge
push
jne
pop
lcall
inc
addr16
xchg
ret
pop
sahf
jmp
or
sahf
scas
repz
and
push
je
decl
nop
and
adc
inc
push
inc
cmp
rol
jmp
lea
test
pop
xor
or
mov
into
rcrb
ds
mov
fsts
xlat
mov
out
pusha
verw
in
cwtl
lods
outsl
sahf
mov
adc
sti
xchg
fcomps
fs
sbb
filds
sub
data16
xor
lahf
fsub
or
repz
movsl
push
pop
jmp
mov
mov
repnz
xchg
inc
or
fcomip
bound
add
and
ficompl
cmc
sub
push
sarb
into
mov
sbb
sti
adcl
adc
sahf
bts
cld
ss
lret
decb
pop
jo
mul
cmp
enter
repz
pop
xchg
xchg
ds
sbb
fdivs
ficoml
dec
aaa
inc
dec
fmull
lds
add
cltd
into
rorb
shlb
mov
xchg
or
add
lret
mov
dec
or
test
sub
rcr
xor
adc
pusha
aas
testb
sub
mov
int3
rolb
jo
sub
loop
xlat
inc
or
inc
out
lret
int
mov
inc
neg
lods
add
jge
or
or
lods
shlb
sub
inc
xor
fs
push
faddp
jmp
int3
sbb
inc
push
push
inc
push
add
add
jo
sub
or
das
fcomi
adc
xchg
jg
subb
jae
in
sub
push
add
repnz
xor
inc
pop
int
mov
cmc
and
ljmp
jp
add
aad
mov
vmread
lds
xchg
pop
mov
dec
mov
arpl
xor
and
movsb
jle
jae
movsl
dec
mov
shr
lds
add
aas
icebp
cmp
fdivl
add
dec
lcall
bnd
mov
dec
movsl
jle
pop
ja
xchg
addr16
out
jle
and
mov
adc
inc
mov
out
pop
and
stc
push
cmpsl
movsb
mov
mov
or
adc
pushf
adc
fisubrs
jo
movsl
nop
movsl
adc
add
insl
aaa
pop
jb
dec
cmp
repnz
push
push
imul
push
sti
inc
cs
or
popa
sub
lcall
daa
ret
xor
filds
out
and
and
insl
imul
mov
xchg
jo
dec
sub
cmc
cld
mov
pop
adc
cs
dec
mov
xor
jge
repz
cmp
int
fstpt
sbb
mov
aaa
inc
je
fwait
mov
dec
mov
xorb
pop
leave
addr16
inc
cmp
sbb
xorl
pusha
aam
and
popa
repnz
mov
cltd
jne
cwtl
fisubrs
fsubrl
jne
mov
and
mov
neg
in
sti
icebp
add
push
stos
iret
pusha
int
sub
cli
sbb
mov
add
loopne
pop
shll
cmp
imul
cltd
inc
inc
and
pop
out
out
test
pop
push
addb
mov
lods
lds
lret
das
push
aas
pushf
xchg
fcmovu
es
push
int
jle
sub
shl
push
jecxz
les
pop
lea
in
test
lods
stos
sub
pop
repz
int
cmp
mov
mov
out
imul
pop
sbb
cmp
add
test
mov
mov
aaa
push
mov
aas
icebp
fcompl
roll
aad
mov
movd
in
inc
faddl
arpl
rcrb
add
sub
loope,pt
pop
hlt
xor
movsl
popf
repz
aaa
pushf
ror
or
inc
dec
into
dec
adc
lods
das
jg
movsb
enter
xchg
or
jne
pop
dec
xchg
lret
outsl
mov
mov
dec
cmp
mov
and
mov
ds
repnz
insb
xchg
and
adc
aas
push
pop
push
scas
jecxz
imul
ret
jecxz
aam
orb
sbb
imul
stc
mov
test
xchg
addr16
insl
sti
in
lods
add
xchg
inc
test
out
push
jecxz
xor
lret
pop
lods
and
mov
sbb
jb
fstpl
mov
shlb
outsb
mov
mov
xchg
sti
sar
lcall
jp
xor
lret
mov
xchg
fwait
cltd
rcll
scas
jmp
xor
xchg
mov
push
xchg
xlat
shr
add
sti
insb
pop
inc
sub
stc
add
or
imul
in
movsb
and
aas
sahf
data16
popa
mov
xchg
inc
not
sbb
out
loope
jmp
xchg
testb
xlat
or
testl
ja
cwtl
ljmp
or
xchg
and
jg
and
mov
push
out
stos
pop
roll
and
push
add
outsb
cltd
enter
ret
popa
icebp
js
jbe
outsb
repz
cmp
cmp
fidivs
xor
out
pop
add
lcall
adc
sbb
pusha
or
mov
jo
lcall
jae
shlb
ljmp
sbb
cmp
insl
mov
pushf
mov
addr16
jae
and
data16
jns
adc
cmp
push
call
hlt
js
andb
in
fcoml
out
pushf
leave
push
daa
js
test
sahf
ret
js
iret
mov
cmp
ret
pusha
inc
sub
jo
imul
mov
inc
stc
ror
inc
and
aad
or
in
mov
inc
nop
add
aas
subb
imul
xchg
adc
js
adc
and
sbb
aad
lahf
insl
mov
movl
lds
dec
push
gs
js
pop
mov
and
dec
and
push
adc
inc
mov
movsb
stc
push
sbb
cmc
ret
pop
mov
and
adc
sbb
push
xlat
mov
les
sbb
add
fnstenv
mov
or
jne
sbb
push
xor
adc
shlb
test
out
cmp
movsb
adc
or
cwtl
daa
sub
push
push
cltd
push
push
sub
call
mov
test
mov
xlat
iret
mov
cmp
dec
popl
int3
dec
iret
sbb
cmp
les
clc
cltd
out
insb
dec
mov
cmp
lret
mov
jp
dec
jecxz
icebp
pcmpeqd
adc
cltd
lea
cmp
mov
push
or
aad
int3
aas
jl
lock
cltd
xor
xchg
pop
add
xor
add
adc
cmpsl
addl
xchg
nop
pop
ss
cmpsl
sar
inc
insl
jno
mov
cltd
jno
aaa
push
out
jl
ljmp
in
jae
cmp
jnp
iret
arpl
mov
pop
rorl
mov
xchg
or
fistl
bound
popa
aaa
scas
jecxz
mov
jge
gs
xchg
in
dec
popf
cmp
lret
insb
sti
mov
fists
pop
aas
and
fildl
cwtl
out
and
xchg
sbb
adc
inc
or
pop
mov
push
scas
in
adc
sub
jnp
mov
fs
cmp
lret
jecxz
and
xchg
fnsave
dec
das
scas
jmp
std
push
mov
jge
pop
gs
mov
xchg
jp
sub
loop
add
addl
xor
negl
clc
in
int
lret
repz
cmpsl
inc
fwait
jl,pn
pop
xchg
adc
mov
cmp
jmp
jb
popf
repz
rol
jg
jle
xchg
mov
cmp
test
test
stos
mov
popa
addr16
sub
test
scas
cmp
mov
pusha
paddq
push
mov
movsb
cmc
push
xor
sbb
test
das
jne
scas
pusha
mov
rclb
fstps
push
data16
pop
add
jns
lock
push
push
dec
repz
and
inc
shl
pusha
scas
and
sub
mov
cmp
roll
sbb
fisubs
push
xchg
cmp
cli
or
xchg
pop
sahf
jg
pushf
sub
mov
sbb
inc
mov
sub
xchg
lret
rol
add
xor
idivb
xor
push
mov
mov
lock
and
adc
mov
jp
cmc
out
mov
movsl
movsb
out
hlt
pop
cmp
xchg
mov
add
cmpsb
mov
xorl
daa
call
or
xchg
repz
xchg
sub
mov
out
jle
lods
arpl
mov
jae
mov
add
aas
movsl
and
dec
stc
sti
ret
shll
jg
dec
ljmp
aaa
cmp
sub
push
call
inc
ljmp
jge
jb
sbb
sub
xor
lahf
cli
rcll
pop
das
sahf
mov
or
cmp
push
sub
mov
fs
xchg
fwait
jo
cli
jns
inc
and
and
pop
and
cmpsl
inc
and
pop
addr16
push
dec
cmp
and
dec
cmpsl
sarb
outsb
sbb
mov
dec
jbe
mov
sub
sbb
ds
stc
ret
pop
iret
pop
add
popa
inc
mov
inc
addr16
xor
adc
and
cmpsl
sbb
test
add
insb
jle
mov
ja
xchg
adc
jle
aas
sbb
into
mov
cmp
push
push
ljmp
std
sub
rcrl
jo
in
pop
movl
scas
pop
xorl
enter
das
inc
addr16
jge
xor
xor
fdivs
sbb
fisubrl
push
daa
ljmp
ret
and
inc
outsb
cmp
stc
or
xchg
pop
lds
mov
mov
outsl
leave
outsl
jecxz
mov
jns
xchg
sub
out
ficomps
sbb
sub
mov
xorb
fwait
mov
xchg
mov
cld
push
add
or
sbb
into
push
jnp
insl
fisubs
lods
sti
dec
sti
fcoms
arpl
shll
incl
pop
xchg
push
cwtl
add
js
call
stos
cmp
pop
sub
into
cmpsl
lcall
out
adc
sub
out
xor
out
lods
mov
sub
stos
aad
inc
sub
push
dec
push
pop
movsl
mov
iret
lahf
shlb
jbe
pop
or
shl
jecxz
ret
mov
enter
pop
cmp
movsb
pop
sbb
cmovge
mov
fnstsw
cmp
dec
inc
in
mov
xchg
inc
flds
jns
xchg
push
dec
in
cmp
inc
test
jnp
adc
add
in
mov
jle
sbb
insl
aam
iret
int
adc
cltd
pop
sub
fidivrs
gs
popf
pop
and
mov
rcr
jno
or
lahf
lock
out
xchg
inc
pusha
sbb
bound
xor
jbe
inc
pop
xor
icebp
mov
das
dec
call
std
or
int
pusha
das
arpl
mov
sub
lcall
or
dec
fildl
pop
xor
cmp
pop
push
cltd
mov
fmull
addr16
cmp
pop
mov
stos
imul
sbb
jp
out
jns
pop
cmp
jmp
shrl
ds
mov
add
in
pop
and
adc
cmpb
shr
and
arpl
into
or
push
scas
ss
or
xchg
pop
clc
arpl
mov
jg
int3
mov
sub
pop
cmp
fwait
or
loope
scas
addr16
cmp
push
lock
sub
sub
inc
inc
dec
or
lcall
add
push
push
or
stc
cmp
ret
mov
lret
push
mov
xchg
icebp
clc
mov
les
pop
bound
repz
ret
xchg
jae
mov
xchg
test
push
mov
je
mov
add
adc
pop
push
xchg
pop
mov
mov
mov
dec
outsl
out
mov
movsb
xor
ljmp
imul
lea
ret
jmp
rolb
mov
push
cmp
lcall
mov
pushfw
cmp
mov
cmp
das
push
test
loopne
push
pop
xor
icebp
push
or
sub
dec
roll
dec
repnz
mov
es
jno
push
out
sbb
cli
in
pop
arpl
mov
test
arpl
out
xor
push
mov
cs
bound
stos
cli
pop
cmp
xchg
sbb
cmp
gs
in
sub
in
add
cli
push
jl,pt
push
push
add
fistps
enter
lcall
into
pusha
sub
adc
and
pusha
or
out
out
adcb
aad
mov
lret
or
ret
mov
push
or
fsubr
cmp
pop
adc
enter
in
push
les
je
lds
mov
push
cmpsb
adcl
repnz
pusha
mov
dec
lret
dec
arpl
mov
insb
push
xchg
icebp
push
sbb
arpl
filds
rorb
hlt
daa
mov
mov
add
push
xlat
lret
lock
je
pop
xchg
aaa
testb
int
xchg
xchg
nop
jb
out
adc
or
cmp
xchg
insl
mov
xchg
mov
inc
inc
or
ds
pop
cld
cli
ja
sbb
push
pop
aad
ret
mov
shlb
inc
fistps
adcl
xor
movsb
stos
inc
out
or
ss
cmc
add
or
pop
inc
cs
subl
cmp
push
aad
adc
push
xchg
or
adc
jo
decl
movsb
dec
mov
les
fwait
divl
inc
fwait
sbb
ljmp
iret
mov
add
movsb
sub
movsb
pushf
lahf
push
mov
lock
mov
and
sahf
movsb
out
movsb
ja
js
jnp
mov
in
pop
mov
mov
xchg
adcl
scas
rclb
xchg
bound
fstps
pop
sahf
cmp
mov
sbb
xorl
icebp
adc
aad
jge
out
xchg
mov
aam
in
aas
pop
pop
pop
aad
dec
dec
shll
loopne
and
mov
push
mov
fs
pop
mul
xchg
daa
pop
addl
jne
mov
fld
fisubrs
and
xlat
cmc
and
xlat
sub
call
xchg
divl
jle
or
mov
sub
lret
jno
or
add
or
out
mov
adc
fnstenv
clc
cld
imul
inc
cmpb
lea
cmc
or
test
test
pop
lds
test
call
inc
insb
inc
daa
dec
mov
addr16
fcomps
int
xchg
rcl
jno
lret
inc
fs
xor
aam
and
in
mov
jmp
push
cs
sub
int
inc
lcall
outsb
mov
aad
mov
xor
pop
test
pop
jge
inc
fwait
jmp
or
xchg
inc
jmp
sbb
setns
rorb
xlat
cmp
popa
mov
jg
jo
popa
mov
imul
xchg
js
movsl
mov
cmpsb
xor
xchg
jecxz
aam
or
insl
orb
sti
std
insl
jle,pt
lret
inc
pop
stc
sub
push
hlt
scas
and
pop
loope
pop
nop
add
lahf
stos
or
ss
xchg
pop
rcrl
scas
fcomip
dec
jle
mov
loopne
adc
negb
cs
sarb
loope
jne
adc
fisubrl
mov
add
ds
test
push
outsl
or
push
ljmp
dec
mov
sbb
inc
in
jecxz
test
jmp
cmc
or
inc
dec
xor
bswap
fnstenv
cmpsb
ret
into
or
movsl
mov
jnp
mov
dec
int
inc
je
insb
stos
arpl
cmp
pop
lods
adc
push
je
jmp
xor
jmp
and
cld
sbb
inc
xchg
pop
inc
call
or
push
jns
adc
jns
shlb
mov
pop
add
xchg
stos
push
aad
bound
insl
rcrl
add
or
inc
or
sub
ds
aas
mov
jecxz
rcrb
rclb
inc
inc
sub
loope
lahf
shr
add
sub
push
xor
sbb
and
cli
pop
dec
add
inc
repnz
aas
sbb
push
popa
hlt
sub
jo
enter
imul
pusha
cmp
test
mov
jb
fidivl
rcrl
sbb
pop
lods
cltd
pop
mov
sub
mov
ret
and
and
ja
jecxz
mov
pop
adc
push
lods
mov
mov
dec
jg
add
sti
pop
test
sub
jnp
lea
or
mov
je
mulb
fcompl
jg
jne
ficompl
push
adc
rcrb
pop
adc
dec
xor
pop
icebp
rorb
add
adc
lcall
dec
gs
cmp
dec
test
and
arpl
sbb
mov
push
pop
je
mov
push
mov
je
inc
in
jb
jp
push
xor
mov
inc
fidivs
lret
or
push
xor
dec
mov
aas
push
outsb
mov
xchg
xorb
imul
mov
sub
pop
mov
mov
out
xlat
incb
xchg
aam
xor
fsubs
mov
xor
or
fwait
das
dec
and
lcall
mov
mov
fucom
cmp
jbe
pop
mov
or
cmp
and
out
out
push
sbb
push
mov
in
test
pushf
cmp
sbb
inc
add
fiadds
mov
das
and
div
mov
or
jecxz
cmc
adcb
xchg
dec
inc
cmp
and
push
cltd
scas
inc
sub
jmp
jge
jbe
stos
out
nop
out
xor
jnp
push
test
add
add
loop
xchg
out
filds
dec
scas
xchg
sbb
inc
sbb
sub
pop
in
xor
in
repnz
mov
inc
push
jle
jl
mov
into
test
or
dec
mov
jg
pop
cltd
mov
pop
out
jp
clc
stc
xacquire
xchg
add
into
jno
popa
pop
mov
pop
jnp
push
mov
mov
and
stos
inc
cltd
jo
cli
dec
mov
sbb
outsl
js
and
mov
jge
wbinvd
cli
shlb
cmp
data16
add
cli
jle
repz
aas
ja
int
repz
push
fcoml
sub
faddl
in
shrb
mov
inc
xlat
mov
pop
cli
dec
sbb
shr
ret
cld
out
inc
sbb
imul
push
test
mov
sub
add
pop
iret
test
jl
mov
ja
in
bound
lods
int3
fsubs
inc
sbb
clc
sahf
imul
xchg
aaa
xabort
aam
sbb
mov
je
cwtl
imul
xchg
sbb
dec
or
aam
pop
mov
or
mov
sbb
inc
lret
hlt
test
sbb
xchg
add
fs
push
stos
jb
push
in
jg
mov
jle
ja
push
fdivrl
add
jo
scas
sub
cwtl
xchg
insl
xchg
ljmp
addr16
mov
jge
imul
in
int
jle
jmp
pop
lds
hlt
mov
and
mov
xchg
mov
lcall
mov
lcall
jns
pop
mov
mov
xchg
hlt
nop
repz
adc
mov
fidivl
dec
inc
rcll
lcall
mov
es
adc
ss
xchg
imul
int
jae
or
cltd
xchg
push
mov
ret
jl
pop
xor
fmull
outsl
cwtl
pop
out
jbe
mov
stc
lea
pop
popf
jo
xchg
lea
rep
ss
mov
sarb
xchg
jge
xchg
enter
fdivrs
aas
fnstsw
sahf
mov
jg
xor
xlat
push
pop
push
fsubr
push
sub
xchg
push
lods
dec
add
test
adc
push
outsl
dec
out
add
cwtl
jns
xlat
insl
insl
push
mov
insl
dec
cld
cwtl
lcall
pop
neg
mov
cmp
int3
xchg
push
outsb
enter
es
in
mov
dec
and
clc
call
out
xchg
lock
lar
ret
fidivrl
vmovhlps
or
push
inc
dec
lea
imul
xor
push
pushf
mov
dec
or
shll
adc
add
ss
fisubrs
jnp
mov
jae
xchg
push
mov
mov
imul
addb
pop
stc
lods
sbb
pop
inc
xor
xor
int
pop
xlat
xor
aam
mov
dec
or
pop
cli
xchg
mov
lds
lret
push
outsb
cwtl
xor
adc
mov
cli
xlat
adc
xchg
movsb
push
adc
push
mov
xchg
pop
inc
mov
add
cmp
xchg
into
nop
xor
inc
inc
or
roll
push
push
cltd
mull
imull
cli
dec
incl
push
inc
mov
pushf
jp
inc
nop
fmul
xor
xor
xchg
mov
jne
in
mov
lcall
sub
add
sub
repnz
push
xlat
push
jl
lret
pop
push
dec
insb
xor
xchg
repnz
inc
xchg
and
pop
enter
jle
xor
mov
or
add
and
pop
inc
and
stos
jmp
pop
nop
push
lods
sbb
push
xor
push
dec
dec
cmp
inc
dec
pop
xchg
adc
lea
mov
aaa
es
imul
cmp
out
std
mov
push
das
lret
repnz
add
push
cmc
stc
pop
dec
ljmp
inc
inc
pop
sub
inc
dec
scas
mov
cli
add
adc
cli
loopne
test
sti
add
or
cmc
sub
inc
es
xor
xchg
xchg
loopne
fcmove
sbb
sbb
adc
sbbb
insl
mov
loop
push
and
dec
es
std
xor
cmc
mov
clc
fs
mov
push
repnz
dec
dec
inc
je
mov
notl
out
jp
mov
mov
pop
imul
cmp
arpl
push
aaa
faddl
and
sbb
cli
mov
iret
jno
clc
ljmp
mov
inc
mov
iret
test
inc
mov
cwtl
sub
adc
repz
mov
push
pop
lret
adc
shr
inc
push
lcall
or
add
shl
mov
lds
xlat
in
fwait
sub
xchg
dec
push
push
mov
jg
jns
out
in
loop
pop
sub
lahf
or
pop
loopne
sub
mov
push
test
arpl
xor
rolb
pop
lea
xor
fwait
adc
scas
sbb
inc
popf
jne
xor
and
das
adc
idivb
in
xchg
xchg
jae
push
cmc
mov
add
or
das
add
arpl
jl
out
mov
fsubrl
sub
mov
lret
test
repz
xor
decb
xor
sbb
fwait
jne
inc
jmp
dec
mov
aam
xchg
pop
fistpl
jo
iret
rcrb
and
lahf
mov
jbe
cld
xchg
xor
rcrl
push
out
xchg
cmp
bound
add
addr16
pop
js
push
popa
mov
mov
mov
and
xor
aaa
pop
cmp
xor
sub
xlat
pand
xor
and
cld
jecxz
or
mov
mov
iret
loope
dec
pop
jae
movsb
pop
push
fs
stos
popa
jl
divl
inc
adc
sub
push
mov
lock
pushf
ficoml
cmpsl
divb
es
mov
xor
cmpsb
sub
jg
clc
xor
movsl
dec
dec
mov
add
jae
insb
adc
sub
fldl
fbstp
addb
lods
and
mov
push
loope
addb
ja
rclb
mov
inc
test
fistl
js
icebp
xchg
sbb
in
adc
movsl
test
mov
adc
mov
add
mov
addb
cmp
xchg
fyl2xp1
or
negl
or
sbb
mov
cli
pop
sbb
std
and
xorl
repnz
xor
movq
subl
fsubrl
sbb
ror
add
sti
sbb
push
push
pop
lahf
pop
jl
sbb
in
icebp
popa
fidivl
jp
add
jnp
sahf
push
addr16
pushf
sub
sbb
movsb
mov
inc
in
lds
das
insl
jl
or
pop
outsb
and
lea
or
inc
or
roll
sarb
mov
lods
in
fwait
cld
jne
xorb
mov
rcll
xor
mov
push
xor
push
rcrl
fiaddl
fisttpll
inc
movsl
and
inc
cmp
test
jno
pop
mov
enter
pop
or
or
divb
mov
mov
jl
mov
add
mov
pop
shrb
jmp
stos
icebp
addr16
mov
mov
out
inc
stos
jnp
loopne
clc
mov
dec
sti
pop
clc
push
das
mov
mov
adc
fcomip
lods
call
push
ret
mov
and
push
cmp
dec
loop
pop
fistpl
dec
jne
scas
mov
jge
scas
add
popa
movsl
jns
shrb
cs
pop
push
js
scas
xor
lock
or
sbbb
mov
sbb
int
jo
mov
aam
jl
sahf
movl
xor
xchg
adc
mov
mov
lcall
pop
movsl
lcall
stc
inc
jp
insb
subb
dec
sbb
dec
pop
arpl
fwait
inc
jmp
insl
jmp
push
loope
int3
jnp
test
scas
push
out
xchg
push
arpl
xchg
jnp
insl
pop
iret
xchg
fnstenv
sbb
adc
loopne
repz
ds
cmpsb
mov
ss
xchg
mov
sbb
arpl
mov
cs
cmp
mov
add
adc
js
loope
into
cwtl
and
xor
outsl
in
xor
ja
jp
jno
out
shlb
cmp
jmp
sub
inc
push
push
xchg
pop
mov
aad
mov
jb
add
adc
bound
push
test
jmp
int
rolb
iret
sub
lcall
cltd
es
inc
aaa
xchg
or
xor
mov
stos
cmp
leave
lret
imul
adc
sbb
dec
imul
nop
je
in
mov
and
xchg
shrb
pop
push
xchg
sbb
mov
cltd
lcall
add
loopne
bound
pop
fistps
outsl
sub
jecxz
sbb
icebp
add
fmul
js
repnz
jno
sbb
push
pop
cmp
out
mov
call
inc
dec
lret
int3
dec
lods
xor
or
loope
dec
jnp
mov
or
int3
or
jp
lcall
sbbb
fisubrl
sarl
lret
cmp
sbb
sarl
lahf
dec
scas
scas
mov
das
in
ja
fwait
mov
push
or
in
jecxz
mov
sub
xchg
push
ljmp
cmp
sub
imul
push
movsl
cltd
lds
pop
aaa
js
dec
call
jmp
cli
sub
mov
xlat
js
or
pop
scas
mov
arpl
addr16
lock
neg
sub
pop
and
cmp
imull
adc
mov
push
mov
xchg
add
andb
push
pop
pop
inc
es
push
lcall
inc
fdivr
push
loop
das
mov
in
inc
leave
std
jmp
iret
ret
adc
cwtl
or
push
mov
stos
ja
jo
mov
sarb
fistps
cs
sbb
jl
icebp
adc
xchg
loope
push
and
jg
shl
jb
cwtl
iret
cld
sbb
int3
pop
pushl
cmp
test
pushf
mov
dec
popa
pop
sahf
xor
imul
mov
popa
out
adc
cli
jg
clc
iret
push
jge
sbb
test
xchg
add
pop
cli
test
jnp
insl
int3
push
subl
push
jl
push
jns
jmp
sub
xchg
and
fadd
jp
xor
xchg
mov
inc
jnp
pop
in
push
aas
or
ss
mov
mov
cmp
dec
fmuls
fucom
shrb
js
fmull
inc
ficompl
xor
xchg
out
lds
leave
sub
fldt
cli
fildl
xchg
pusha
xor
cmp
out
in
test
gs
stc
faddl
sub
xchg
movsl
mov
and
in
mov
cmc
sar
es
xor
add
sbbb
xor
or
mov
mov
mov
ljmp
jnp
int
imul
dec
jle
jge
imul
sbb
push
in
fsubrl
out
push
pop
sub
inc
xor
push
mov
inc
mov
push
xchg
push
adc
mov
lea
insb
sub
ret
xor
mov
mov
jns
dec
xor
fldcw
push
add
push
rcrb
xor
orl
jecxz
and
aas
push
scas
mov
in
or
shll
movsb
daa
fs
xor
or
jns
xchg
mov
mov
and
dec
add
and
xchg
pop
inc
popa
data16
xchg
movsl
sbb
cmp
jl
mov
dec
jle
imul
stos
sub
cmp
sub
daa
test
paddw
mov
jno
mov
sarb
xchg
lcall
bound
fstpt
adc
push
and
pop
ss
xchg
jno
sub
and
cmpsl
in
std
mov
or
sahf
pop
insb
xor
dec
mov
jno
jo
mov
xchg
lret
inc
addr16
addb
out
enter
idivl
inc
mov
cmp
jl
push
mov
add
fisubs
and
dec
xchg
sub
fiaddl
jg
fcoml
into
movsl
xchg
lret
aam
adc
cmp
aam
in
inc
pusha
adc
loop
pop
test
jg
dec
pop
push
movsb
mov
cwtl
mov
dec
mov
xlat
sbbl
add
inc
pop
jo
push
leave
mov
fucomp
push
and
in
rcll
rol
jmp
push
mov
xchg
notl
fdivl
sbb
lock
and
sub
iret
cmp
std
in
dec
imul
or
mov
mov
lods
rorb
sbb
out
insb
das
push
dec
inc
jae
push
scas
cmc
cmp
sahf
push
inc
push
das
pushf
out
mov
push
mov
inc
push
inc
adc
addb
push
arpl
and
shrb
xor
jne
dec
adcl
lock
fdivrl
inc
fwait
cmp
jmp
ss
pop
or
jg
aas
or
cmp
xor
arpl
nop
pop
test
adc
adc
mov
inc
call
sbb
scas
aas
mov
stc
aam
inc
mov
lods
je
adc
arpl
cmp
outsb
sbb
dec
add
xchg
add
outsb
aam
xchg
aas
mov
leave
add
and
jg
adc
sti
jnp
outsl
andb
jp
or
pop
sbb
sbb
pop
dec
mov
xor
push
inc
xor
mov
jge
push
push
sub
xchg
and
gs
mov
addr16
pushf
add
mov
jo
inc
mov
jne
cmp
loope
arpl
rolb
lods
fmul
insb
push
add
pop
mov
scas
push
inc
inc
pusha
sub
or
inc
push
mov
rcrb
sarl
pop
add
ds
mov
push
inc
pushf
jne
and
in
stc
faddp
in
lret
ret
aaa
jno
arpl
add
fbld
xor
mov
inc
in
lret
xchg
jb
adc
pop
cli
outsb
push
add
add
mov
lahf
pop
pop
jmp
stos
or
push
fistpll
pop
jecxz
int3
shll
js
sub
cwtl
mov
push
rcrb
and
jmp
pop
sbb
jp
fnstcw
xchg
fimull
xchg
push
mov
pushf
loope
or
je
fidivs
mov
loop
push
jbe
inc
fcoms
mov
xchg
out
test
dec
mov
ss
stos
or
push
leave
add
mov
push
pushf
sahf
mov
push
add
mov
movsb
repz
daa
bound
pusha
popa
inc
pop
mov
stos
loopne
xor
outsb
and
mov
es
fldl
cmp
cmpsb
inc
adc
pop
jo
ja
push
jle
test
daa
cltd
cli
xchg
push
dec
test
fsubl
cmp
gs
jo
iret
movl
pusha
stc
insl
dec
aas
test
test
jno
push
icebp
pop
lcall
pop
lock
je
xchg
xchg
shl
inc
imul
lea
les
aad
ffree
fbld
stc
inc
lea
ds
sub
inc
mov
pop
cmc
sub
pop
mov
in
bndstx
jne
or
int
cmp
pop
lcall
out
adcl
loop
pop
pop
lahf
fidivl
fldcw
fadds
pop
adc
jp
and
aam
xor
in
addr16
aam
xchg
orl
add
fists
mov
inc
out
mov
mov
lds
adcl
daa
das
and
stos
pop
xorb
in
push
mulb
push
hlt
dec
test
sarb
sbb
xchg
mov
jo
xchg
push
popf
das
xor
cwtl
dec
adc
inc
in
dec
lods
in
stos
aas
mov
push
adc
pop
fimull
fs
xor
mov
ljmp
sub
popa
sub
mov
inc
add
imull
mov
mov
push
cmp
push
jmp
dec
daa
cmp
jb
pop
inc
sub
repz
xchg
fbstp
cli
ret
in
fsub
jns
xor
shrl
pop
and
movl
jo
mov
mov
mov
add
lcall
jno
incl
xchg
mov
pop
ljmp
pop
pop
xor
push
fisubs
ret
pop
lods
push
or
mov
xchg
into
imul
dec
movsl
xchg
xor
inc
add
jbe
lds
dec
and
mov
pop
xor
pop
inc
push
push
shlb
inc
xlat
mov
mov
pop
lea
or
mov
ja
xor
pop
push
arpl
pop
test
jne
xchg
mov
lret
loop
sub
pop
jae
pop
aam
inc
push
scas
mul
lahf
adc
mov
mov
daa
sub
rcl
push
fxch
lods
dec
dec
pop
pop
aad
cmp
arpl
test
and
cmc
mov
pop
mov
iret
push
popf
sub
and
xchg
mov
xchg
imul
fsubl
or
je
pop
cmp
and
js
mov
sub
or
movsl
out
ja
jae
jne
add
out
mov
sub
out
rcrb
outsb
lret
push
in
loope
fdivrs
fld
addr16
jno
nop
dec
sarb
add
test
int3
or
clc
cmpsb
test
adc
xor
pop
xchg
jp
dec
lods
insb
popf
fs
and
sub
cs
mov
xor
mov
cli
pop
add
jmp
push
jg
lret
stos
mov
scas
sub
insl
test
lds
inc
sbb
xchg
add
add
mov
add
cld
inc
imul
xchg
or
rorb
xchg
dec
and
ja
jmp
mov
cmc
cmp
ret
and
dec
add
jns
in
es
or
jne
mov
and
lret
stc
or
mov
xor
sti
sbb
test
pusha
and
popa
imul
mov
xchg
insb
cmp
fldenv
ja
cs
cmp
mov
add
call
mov
ret
call
adcb
aad
cltd
ljmp
xchg
sarb
ret
pop
mov
es
lret
pusha
sub
or
test
mov
aas
jg
test
cmp
push
imul
push
jns
xchg
aad
pop
test
push
mov
and
jmp
or
dec
xchg
mov
ds
push
xchg
rcrl
fmuls
cmpb
pop
jnp
fadd
enter
or
sub
int
mov
aas
xor
mov
mov
push
rolb
mov
ds
jmp
adc
xchg
testb
addr16
sub
jo
xchg
pusha
das
insl
jle
add
imul
xchg
xor
lds
fmuls
out
dec
mov
push
in
mov
pop
xchg
arpl
jg
or
jg
es
mov
aad
stc
es
jmp
or
int
push
sahf
sub
jo
fdivrs
push
pushf
out
xlat
ljmp
daa
test
fildl
mov
jbe
movb
xor
leave
inc
js
jne
push
lahf
mov
add
cmp
inc
mov
cmp
cmp
sbb
enter
clts
cmc
pop
ja
cmp
pop
aaa
xchg
in
jne
xchg
jp
addl
movsl
std
mov
aas
sbb
loope
aam
aaa
sbb
sbb
xor
pop
int
sub
xchg
pop
mov
add
in
outsl
int3
icebp
mov
movsl
mov
js
xchg
std
fists
mov
cwtl
rcrl
insb
mov
cmp
inc
add
sbb
mov
push
jno
les
test
mov
movsb
idivb
mov
push
ds
pop
mov
adc
insl
cmp
or
xor
xchg
mov
or
inc
in
out
inc
or
shlb
mov
sub
orl
sbb
sti
lcall
ret
push
std
js
pop
inc
repnz
loope
sub
stc
sub
adc
cmp
sub
ret
outsl
scas
cmovb
imul
cmp
dec
add
outsl
ret
and
mov
adc
pop
stos
pop
sbb
cwtl
shr
pusha
pop
add
mov
cmpsb
mov
fcompl
daa
cwtl
or
xchg
sub
popf
xor
rcrl
das
jne
popa
fldcw
xor
xchg
lea
lods
inc
rorb
inc
les
js
mov
cltd
dec
push
or
push
jmp
addr16
daa
cmp
lods
stos
mov
int
push
jnp
sbb
stos
xor
shlb
in
cmp
fmull
pusha
mov
insb
lea
adc
xor
push
stos
mov
daa
jb
xchg
fs
fldenv
sbb
mov
jne
fwait
ds
jle
cmp
sbb
into
es
dec
in
jl
dec
ljmp
add
dec
xchg
movsl
xchg
lahf
mov
mov
mov
ret
push
aas
pop
jbe
sub
scas
sti
adc
lods
je
cmpsb
jmp
xchg
out
and
mov
js
jae
mov
or
xchg
mov
add
fwait
jns
out
xchg
push
sub
add
inc
mov
jno
imul
push
sbb
inc
sub
dec
test
ljmp
test
test
lret
sub
rcll
mulb
int
sbb
jl
add
xchg
shlb
out
mov
das
rclb
jg
cld
xor
in
mov
mov
push
arpl
dec
ds
sub
fwait
or
mov
jmp
xor
mov
jne
idivb
mov
xlat
pop
in
repnz
orl
pop
aam
or
jno
sub
orl
mov
jecxz
fdivs
inc
popf
rcr
cltd
inc
call
je
mov
sub
sbb
bound
sbb
out
dec
mov
xor
mov
les
sbb
daa
xchg
mov
fucom
lcall
and
mov
nop
andb
insb
call
push
jmp
je
pop
stc
xchg
shl
cmp
mov
int
shl
sahf
jle
push
imul
push
xor
push
xorb
fs
or
mov
dec
addr16
mov
imul
mov
mov
pop
loope
push
js
icebp
sub
ss
int3
sbb
jne
sub
in
mov
lds
repz
cmpsb
mov
aam
push
adc
or
fwait
inc
test
call
pushf
push
loope
fsubr
outsb
sbb
mov
inc
ret
push
fwait
mov
mov
loope
adc
mov
shrl
jl
in
lock
push
pop
jae
in
jns
jg
cmpsb
dec
roll
sub
mov
cmpsb
insl
mov
fldenv
in
shlb
mov
insb
repnz
lcall
sub
jg
pop
lret
js
xchg
fdiv
push
popf
fs
pxor
dec
and
mov
pmaxsw
out
pop
inc
pop
clc
lahf
nop
cltd
addl
das
js
fisubs
pop
mov
scas
push
cli
mov
cmp
es
stc
iret
push
clc
pop
inc
repz
mov
in
jg
mov
das
aaa
mov
mov
mov
jmp
dec
pop
shll
inc
sbb
mov
mov
lret
in
pop
in
push
ret
mov
dec
xlat
mov
inc
loop
cltd
mov
xor
xchg
mov
ja
popf
out
xchg
sub
xchg
lahf
sbb
in
mov
addr16
popa
adc
add
cmc
mov
das
xlat
fs
mov
gs
imul
dec
je
aas
and
mov
fcomip
mov
jns
sbb
add
shrl
sub
add
xchg
mov
inc
shll
fwait
cmp
push
add
cwtl
jge
xchg
int3
cmp
jno
add
test
aaa
test
addl
mov
dec
adc
mov
cli
sub
or
add
lahf
das
push
sti
cli
ds
mov
adc
inc
je
aam
aam
push
push
or
fst
rorb
icebp
mov
jo
cmp
movsl
or
repz
js
xchg
mov
jg
or
mov
xor
loope
data16
jmp
iret
mov
sub
push
insb
xlat
mov
sub
and
hlt
adc
xchg
mov
rorl
xchg
and
ljmp
pop
mov
sbb
scas
xor
sti
les
into
pop
stc
mov
push
dec
xor
lcall
loope
sbb
dec
out
xor
outsl
sbb
jmp
pop
or
int3
outsl
lcall
int
pop
cltd
pop
push
fbstp
leave
pushl
adc
add
push
mov
mov
aaa
popa
push
push
jmp
inc
or
dec
dec
dec
loop
mov
ds
xchg
idivl
pushf
mov
pop
cwtl
mulb
jmp
dec
xchg
lds
not
out
dec
negl
sub
sbb
mov
xchg
test
mov
pop
lea
movsb
std
mov
mov
dec
fxch
mov
pop
xchg
fldenv
or
mov
sbb
push
push
in
xchg
jl
mov
mov
push
mov
sub
or
xchg
sbb
mov
jg
sarl
test
cs
pop
dec
test
mov
gs
lret
lcall
notb
inc
and
aad
inc
test
dec
outsb
or
movsb
xor
xchg
mov
mov
jb,pn
mov
mov
sub
mov
test
inc
in
fldcw
xchg
js
hlt
adc
stc
addr16
imul
add
pop
jae
cmp
push
jmp
pop
jg
repnz
mov
mov
lret
lret
and
push
dec
fs
icebp
mov
cltd
push
rcrl
adc
pop
inc
sti
pop
pop
test
psrlq
mov
jb
sub
jns
mov
or
subb
xorl
clc
dec
bound
mov
lods
stos
pop
movl
push
js
aaa
fcmovne
sbb
push
aad
dec
das
add
jp
sbb
loope
inc
push
push
xlat
or
mov
push
and
jp
sbb
xchg
adcl
in
mov
pop
js
icebp
xor
mov
dec
xorb
cmp
rcll
imul
dec
sub
dec
cmp
inc
lahf
xchg
pop
xchg
jns
pop
xchg
add
pop
lret
jo
and
add
sub
dec
inc
les
lock
daa
mov
int3
loop
leave
shll
call
btr
lea
ss
inc
jb
dec
or
xchg
sub
add
jo
xor
imul
mov
sbb
stos
mov
push
push
inc
aad
dec
test
notb
xor
cmp
shrl
into
in
scas
adc
inc
pop
pop
push
or
and
sub
xor
testl
push
dec
fwait
ret
and
push
cld
cmpsl
jge
push
arpl
pop
and
test
fistpl
daa
lea
add
lods
loope
xchg
pop
shl
jl
jb
std
fdivr
outsb
mov
sbbb
sbb
pop
shlb
sbb
cmp
mov
aaa
fnsave
dec
jle
adc
lea
mov
or
adc
xchg
push
jg
and
cmp
xor
adc
jo
lcall
lret
xchg
ret
push
or
scas
outsb
push
loop
mov
mov
xchg
shll
sti
bound
aad
and
stc
inc
div
adcb
fisubrs
push
cltd
push
mov
fistps
sbb
fiadds
lock
mov
ret
and
add
jle
stc
and
fsubl
mov
dec
jle
fcomps
repnz
mov
jmp
inc
out
scas
addl
andl
and
mov
jns
dec
lds
or
jo
ret
pop
inc
adc
sub
int
push
xchg
jns
pop
xor
out
ds
cwtl
out
cmp
loop
add
sub
dec
mov
arpl
xchg
mov
xor
lock
xchg
dec
xor
das
int3
ljmp
and
pop
or
ret
inc
fdivs
jns
les
dec
push
dec
bnd
xor
loop
ljmp
pop
test
js
pop
or
xor
test
mov
int
pop
out
into
xchg
push
std
pop
adc
test
scas
push
jge
mov
mov
cmp
jge
inc
imul
ljmp
scas
mov
inc
pop
call
or
hlt
js
out
mov
jmp
lret
lret
hlt
push
fsubr
aas
out
insb
cmpsb
mov
adc
dec
mov
scas
mov
cmpb
mov
into
test
and
jg
in
mov
loope
push
jg
jb
xorb
mov
pop
jle
cld
gs
lret
loope
repnz
in
shll
mov
test
lods
jns
mov
leave
or
ljmp
push
icebp
dec
sahf
mov
pop
inc
vmovsldup
xchg
movsl
pop
daa
mov
fdivrs
mov
or
andl
sbb
mov
ret
mov
ljmp
and
sub
ja
fs
push
adc
mov
popf
xor
subb
lret
sbb
in
or
pop
and
leave
jbe
sbb
xchg
sub
dec
sbb
adc
es
in
dec
mulb
mov
lret
rcll
fidivrs
mov
or
adc
ss
or
cs
sub
add
xchg
je
push
mov
cmp
xor
xchg
fstpt
addr16
mul
movsb
cmpsb
mov
fcomi
push
in
iret
jp
imul
sbb
cwtl
lods
repnz
xor
add
out
dec
imul
dec
push
rol
cmp
stos
icebp
ret
sbb
lret
movsb
xchg
insb
fiadds
rcll
jb
pop
aas
sub
mov
cmp
icebp
push
mov
jnp
pop
xchg
rclb
mov
dec
fistpll
popa
or
lret
fwait
loope
jbe
lcall
js
cli
jg
push
adc
cmpsl
pop
test
pop
sbb
cmp
sub
mov
les
mov
sub
sub
mov
jnp
movsl
dec
or
or
jnp
add
insl
adc
xchg
mov
aas
pop
enter
in
fcmovnu
cs
mov
leave
mov
sar
push
inc
mov
cwtl
outsl
and
jo
push
mov
xchg
mov
pop
fdivr
inc
mov
adc
push
add
stc
fiaddl
lcall
das
jne
push
cmpsb
add
imul
cmpsl
push
daa
sbb
pop
fs
mov
mov
xor
call
nop
div
mov
xchg
stos
jp
and
xor
xor
push
add
ret
aaa
and
lret
jle
sar
adc
xchg
ret
xchg
adc
repz
cmp
pop
pusha
aad
ret
push
inc
aam
mov
cmc
test
adc
jmp
push
rcll
jne
cli
movb
inc
pop
xchg
add
jbe
jnp
jg
mov
jmp
push
xchg
xchg
das
rdpmc
or
sub
mov
push
mov
inc
and
lds
xchg
cmpsb
gs
roll
and
divl
pop
xchg
jg
loop
adcb
cmp
loope
fistpll
fs
or
sti
lret
call
cmp
test
int3
adc
scas
fcompl
mov
dec
xchg
jge
jmp
pop
filds
jmp
inc
add
push
into
popf
repz
xor
mov
jns
sub
aas
dec
imul
or
inc
jp
xchg
dec
pusha
inc
cli
xor
lahf
movsb
jle
addr16
mov
aam
mov
mov
mov
xor
push
dec
test
sbb
sar
add
mov
out
lcall
das
clc
dec
stos
aaa
push
leave
xorl
mov
in
xor
jl
pusha
xchg
mov
xchg
lock
pop
xchg
push
imul
scas
aad
outsl
or
mov
add
out
mov
inc
iret
jg
mov
in
into
ss
push
xor
mov
sub
xchg
pusha
sub
xchg
inc
push
loopne
push
repnz
push
mov
xor
gs
fsub
pop
fucomp
in
push
push
in
in
inc
jg
jl
jge
popa
jg
sub
ljmp
mov
scas
cmp
lahf
ret
jbe
pusha
mov
inc
xchg
jge
pop
filds
xchg
jno
adc
xor
call
sahf
stos
xchg
int
rcll
xor
dec
lock
add
jo
sub
pop
mov
mov
pop
mov
mov
jb
cmpsl
ret
and
jmp
lods
xchg
addb
loope
lcall
push
mov
mov
ss
cmp
pop
hlt
shll
or
mov
subl
jne
and
cs
stos
mov
mov
add
mov
mov
cmpsl
ret
fcmovne
pop
fs
out
dec
mov
push
mov
pop
shll
jae
cmp
and
imul
mov
inc
mov
dec
in
idivl
cmp
imul
arpl
ficoms
pop
stos
mov
jge
push
cmc
lret
push
and
sti
ds
inc
mov
into
test
je
jbe
xchg
xchg
inc
xor
das
lcall
mov
movsl
in
jecxz
inc
clc
adc
cld
loopne
imul
incl
frstor
xchg
fs
std
lret
sbb
mov
lods
fs
mov
xchg
xchg
rcll
in
enter
push
pop
faddl
mov
pop
insb
jae
jb
push
pop
push
sbb
mov
push
push
mov
adc
out
add
lret
popf
in
sub
xchg
int3
ljmp
outsl
in
std
js
imul
out
dec
push
out
fistl
iret
jle
out
mov
pop
pop
sub
xor
out
rcl
scas
loope
jae
call
lds
mov
out
or
subb
pop
and
rcll
inc
shrb
js
test
mov
sbb
dec
dec
aam
add
pop
iret
sub
push
push
lret
adc
and
sub
in
pop
jne
ljmp
cli
in
push
icebp
cli
aaa
cli
sbb
add
pushw
repz
imul
cmpsb
push
dec
jne
js
sub
mov
scas
hlt
mov
adc
stos
cmp
xchg
or
push
scas
xchg
js
xor
popa
loop
or
js
add
std
addr16
lret
xor
mov
sub
cld
push
push
out
scas
or
mov
ljmp
or
mov
push
scas
mov
mov
jno
movsl
loopne
adc
mov
out
addr16
jno
mov
jmp
paddusb
mov
xchg
add
cmc
call
pop
aaa
add
out
push
pop
notl
aas
pop
cmc
in
or
jne
inc
push
idivb
push
pop
jo
adc
fists
or
loop
fsubrl
xchg
cmpsl
jmp
sbb
lods
lods
and
insb
negb
mov
pop
sbb
fmuls
jp
mov
outsl
xor
adc
cmp
jge
fisttpll
xchg
adc
lret
pop
xchg
sub
addb
cmp
in
leave
xchg
sbb
adc
xor
lock
cmp
outsb
cs
dec
pop
mov
test
aam
outsb
lock
mov
rcrl
imul
sbb
mov
out
fldenv
popa
loop
cmc
outsl
push
and
pushf
cmpsb
bound
cltd
xchg
sbb
fcom
into
jb
cli
scas
jae
int3
aam
in
inc
inc
sbb
push
mov
dec
icebp
fnstenv
das
pop
das
inc
or
jle
lds
xor
sub
dec
std
daa
sub
cltd
mov
xor
xorb
jle
loop
jo
daa
mov
mov
fisttpll
push
aad
lahf
mov
clc
mov
int3
sbb
mov
lds
push
push
shlb
pop
sub
lcall
jns
in
test
or
into
xor
mov
mov
jl
leave
inc
leave
ds
sbb
push
gs
into
adc
mov
testb
cwtl
arpl
cld
jecxz
pop
adc
and
leave
fsubs
pop
pop
es
jae
mov
xlat
notl
cltd
dec
and
and
mov
mov
lock
fstl
cltd
imul
pop
sarl
leave
xor
mov
icebp
cmp
pop
loop
icebp
inc
push
pop
inc
sbb
js
cmp
xor
xor
test
jmp
xchg
int
pop
add
xchg
jg
aas
xchg
push
pop
cmp
mov
in
jecxz
rcl
inc
repnz
push
std
mov
lods
mov
push
mov
pop
addr16
xlat
mov
push
pop
into
jp
sub
adc
or
lcall
sbb
mov
jp
jle
iret
ljmp
sti
mov
sahf
sbb
shl
add
jb
xchg
dec
push
and
adc
jno
mov
inc
in
xor
push
pop
xor
sub
mov
push
xor
dec
adc
xchg
int
push
ret
jmp
and
hlt
push
dec
in
push
lret
jnp
lcall
mov
fidivrl
je
iret
into
cmp
mov
mov
sbb
sahf
jno
insb
mov
mov
xor
enter
aas
hlt
xor
andb
xchg
je
loope
int
or
jecxz
xor
pushf
cltd
mov
in
xchg
outsb
xchg
mov
dec
inc
jnp
pop
sbb
cwtl
and
dec
sub
sarl
lret
fldcw
or
mov
aaa
pusha
imul
cmpsl
lods
pop
mov
xchg
xchg
mov
inc
sahf
or
shlb
imul
rorl
xor
js
imul
inc
jae
lret
pop
fcoms
pop
cmpsb
cwtl
in
push
lods
in
mov
and
in
std
ret
cmp
mov
sub
mov
inc
push
scas
movsl
stos
or
daa
adc
push
jbe
pop
adc
dec
je
movsb
rorb
js
xchg
inc
test
sbb
mov
and
mov
sahf
xorb
sbb
mov
xor
lret
aam
mov
sbb
popf
daa
mov
xchg
fsubl
mov
xchg
fwait
sti
aas
xor
out
outsl
pop
movsl
test
sub
pushfw
mov
negl
daa
sbbb
mov
icebp
sbb
es
cltd
mov
xor
out
mov
outsl
in
xchg
dec
sti
sbb
aas
mov
test
rol
mov
out
iret
mov
stos
cs
aaa
clc
daa
sbb
filds
rorl
mov
test
out
cmp
sbb
sbb
fs
filds
das
lods
and
pop
inc
xlat
push
dec
push
xor
jbe
jb
roll
dec
dec
add
pushf
dec
fs
cmp
addr16
lahf
into
aas
dec
mov
daa
loope
decl
and
pop
mov
push
add
jae
inc
out
test
xchg
dec
aaa
call
fsts
enter
xchg
testl
mov
or
push
push
testb
scas
mov
scas
movsl
sarb
ljmp
in
cmpsb
addr16
inc
pop
jl
loope
xlat
xor
stos
mov
loopne
lock
pop
add
lea
pop
shlb
push
pusha
cmp
jno
hlt
lea
fs
stos
mov
xchg
push
mov
mov
fwait
cmp
int3
or
pusha
jno
shrb
adc
sar
mov
aam
mov
push
sub
mov
das
mov
jne
outsb
mov
sub
es
or
sarl
add
push
js
or
mov
push
test
outsl
stos
addr16
mov
xchg
loope
push
push
mov
mov
or
dec
inc
adc
xor
sbbl
das
inc
insb
adc
jp
mulb
fucom
push
out
lret
neg
sbb
out
pop
icebp
push
orb
adc
xor
dec
cmp
and
sti
bound
fs
sbb
fimuls
pop
jl
xor
jp
dec
int
lret
data16
fldenv
or
cmp
sub
cmpsl
or
dec
jb
mov
jg
jne
ret
fists
rcrl
in
outsl
mov
pop
mov
scas
pop
jp
and
aas
aaa
mov
xchg
mov
sahf
xchg
mov
mov
shlb
and
fistpll
push
cmpsl
xor
push
mov
repz
into
cwtl
popf
push
stos
ret
fstp
inc
pop
mov
xchg
mov
sbb
cmp
mov
aad
xor
cmpsb
into
pop
shll
sbb
movsl
pop
ja
mov
arpl
shl
jbe
sbb
push
pop
add
jle
mov
mov
adc
jg
mov
outsb
test
xchg
xor
adc
mov
sub
jno
jl
cmp
jns
sub
pop
int
mov
outsl
mov
popa
aaa
jge
inc
jns
jle
shld
sub
testl
jno
mov
add
lock
out
mov
fucom
push
cmp
mov
je
iret
daa
out
jg
repnz
sub
sub
xor
adc
addb
cmp
inc
inc
cs
dec
mov
lds
sbb
mov
lods
jno
and
dec
mov
mov
jo
pushf
popf
aad
push
or
je
xchg
jl
mov
pushf
stc
popl
mov
daa
pop
loopne
and
inc
fnstcw
jbe
cmp
sbb
pusha
mov
or
inc
cmp
ret
int3
outsl
mov
jbe
loope
lret
cmc
je
ljmp
mov
pop
test
cmp
mov
in
cmc
scas
popf
xchg
inc
mov
pop
xchg
dec
pop
adc
add
pusha
daa
xor
xlat
mov
lods
ret
push
orl
call
xor
fdivr
loope
in
adc
adcb
js
pop
sub
repz
ja
insl
lret
mov
sub
cmpsl
ljmp
jns
mov
aad
mov
daa
push
int
lret
ja
rorl
mov
pop
in
mov
rorl
adc
mov
scas
movb
pusha
pushf
xor
scas
adc
movsl
inc
std
sbb
pop
push
fsubr
addr16
or
adc
adc
jbe
push
les
cmpsl
stos
sub
and
loope
adc
psrlw
movsb
pop
pop
adc
popa
sbb
jmp
push
mov
and
xchg
jg
pop
and
mov
xchg
adc
adc
lret
fmul
mov
xchg
jp
mov
push
stc
div
dec
call
xchg
push
and
shlb
xchg
stos
loop
mov
xor
in
idivl
mov
inc
pushf
and
cltd
dec
xchg
stc
pop
lods
jge
mov
mov
mov
inc
jge
jns
cs
jl,pn
fwait
mov
clc
jl
push
mov
xchg
stc
sub
pop
pop
cmp
sub
push
xor
cmp
pop
jns
mov
push
pop
jo
sar
scas
sub
inc
jle
mov
decb
in
xchg
inc
ja
iret
stos
aad
sub
jnp
out
inc
cmp
push
test
adc
fcomip
xchg
sub
rclb
out
sbb
cmp
mov
inc
mov
shll
pop
lea
insb
cmp
sbb
mov
or
pop
xchg
and
jmp
mov
jbe
fmul
aad
unpcklps
cs
inc
bound
or
pop
jae
aas
xchg
sbbl
sub
ret
cwtl
push
call
jno
cmp
dec
bound
loope
cmp
mov
f2xm1
xor
mov
hlt
fucomip
popa
imul
push
xchg
xchg
push
pop
pusha
stos
sbb
xchg
xor
jae
jo
nop
push
mov
or
icebp
push
mov
roll
sub
sbb
fnstenv
mov
out
daa
mov
push
xor
fcmovne
mov
pop
xchg
rcll
ja
jge
mov
sbb
push
in
push
sub
jle
add
leave
ja
inc
cltd
pusha
mov
cmp
insl
push
loop
and
repnz
out
xchg
pop
cld
dec
xor
sbbl
push
xchg
test
add
mov
cli
push
js
dec
addr16
lea
xorb
jl
xorl
inc
mov
gs
and
enter
icebp
push
loope
cmp
loopne
mov
mov
sbb
lcall
arpl
mov
shr
xchg
inc
or
fcompl
stos
fldcw
pushf
nop
mov
sbbb
or
dec
mov
cmp
adc
xchg
cltd
in
jmp
mov
dec
jno
mov
mov
mov
je
gs
and
aam
mov
addl
outsl
inc
mov
ret
shll
neg
sarl
sub
pop
shlb
xchg
mov
xchg
mov
push
and
sub
test
pop
popa
ja
xchg
inc
pop
ret
rcll
push
lahf
out
push
dec
jns
cmovg
dec
dec
rolb
rorl
test
inc
mov
push
loop
dec
xchg
or
pushf
adc
aas
stos
icebp
shlb
and
fsincos
movsb
push
mov
fstpl
push
fwait
adc
mov
sbb
popf
xor
pop
lea
test
call
js
mov
push
sbb
cmpsb
ret
lahf
xchg
inc
adc
into
outsl
add
inc
aas
lods
adc
idivl
shrb
and
sbb
stos
jl
xchg
jo
cwtl
test
lods
mov
repnz
leave
push
std
jge
lret
imul
shlb
or
xchg
stos
jp
mov
add
pop
ds
stos
ror
push
int
insl
sbb
outsb
xchg
gs
add
pushf
cwtl
cmp
dec
lret
adc
scas
cmp
por
cmp
jle
in
fwait
jp
popf
stc
mov
mov
adc
cmp
push
pop
arpl
sbb
inc
or
or
mov
inc
sti
dec
adc
mov
and
mov
add
loopne
add
xor
lea
cmp
cmpsl
mov
sub
add
sarb
dec
insb
mov
fs
inc
inc
adc
xchg
jecxz
dec
sti
add
das
inc
sahf
add
cmp
mov
pop
pop
iret
mov
sbb
adc
mov
or
xor
adc
cld
add
jae
inc
dec
jp
xchg
sub
insl
bnd
fwait
in
mov
scas
mov
sbb
jle
xor
test
mov
pusha
loop
popa
xchg
enter
mov
dec
and
leave
and
pop
push
cltd
mov
adc
jno
xor
cli
or
daa
pop
outsb
sub
dec
mov
and
inc
jmp
imul
or
aad
adc
cmp
out
dec
inc
or
insb
mov
xchg
sub
sahf
push
mov
add
rorl
jmp
insb
push
mov
jne
sub
dec
jbe
sti
cld
mov
test
inc
loopne
sarb
les
cmp
mov
into
xchg
daa
dec
or
hlt
test
cltd
stos
lret
adc
pushf
rorl
add
aad
dec
mov
jnp,pt
pop
cmpsl
ja
dec
test
jmp
xchg
cmp
movsb
cmp
adc
jmp
ljmp
leave
adc
push
jns
pop
and
jb
pushf
icebp
mov
dec
xchg
pop
xchg
sbb
mov
push
sub
fs
clc
add
ja
ds
dec
clc
leave
out
outsb
cld
sahf
rorb
aaa
repnz
sbb
dec
jmp
pusha
mov
jle
aaa
push
fistps
jl
jp
scas
aas
pushf
inc
or
xchg
aas
mov
ror
or
or
adc
mov
not
addl
loopne
xor
mov
repz
aas
cltd
dec
stos
repnz
or
decb
and
or
fidivrl
inc
stos
sub
lods
ffreep
push
inc
fs
fildll
nop
ret
gs
and
adc
or
inc
je
or
sbb
loopne
mov
mov
sarl
test
loopne
add
popa
mov
bound
sbb
mov
in
stos
daa
stos
jg
xchg
jg
jp
outsb
clc
mov
cmp
sub
popa
or
mov
daa
mov
movsl
xor
scas
fnstcw
dec
movsl
fldt
lods
stos
jecxz
xor
adc
ja
jo
push
sub
dec
arpl
movsl
add
jge
in
cltd
jp
cltd
dec
mov
jno
movsb
mov
sbb
shlb
pmullw
fwait
pop
xor
cmp
dec
fs
xchg
mov
pop
mov
ljmp
jecxz
sbb
mov
scas
xchg
dec
cmp
data16
gs
add
mov
mov
icebp
rclb
mov
inc
int3
push
in
mov
xchg
and
push
sub
shl
or
dec
es
mov
dec
outsl
mov
inc
aam
movsl
insb
test
mov
cltd
pop
dec
mov
sarb
pop
adc
cmp
sbb
in
out
sub
outsl
add
leave
inc
jmp
popa
subb
imul
xchg
lahf
movsl
icebp
addr16
xlat
pop
mov
les
jp
xlat
xor
xchg
mov
test
lcall
cmp
mov
outsl
lcall
hlt
pop
push
sti
and
sub
push
lahf
sarl
clc
cli
jae
and
add
lds
mov
in
sar
mov
clc
ja
cmpsl
lret
and
lahf
pushf
sub
xor
pop
cwtl
mov
mov
fst
sarb
adc
inc
bound
xlat
fs
jecxz
pushl
lea
pop
cmc
stos
mov
adc
into
ret
shll
mov
aas
mov
jno
mov
jb
xchg
xchg
inc
or
outsb
sbb
lock
push
call
in
add
add
sahf
lret
imul
add
or
out
sub
daa
mov
out
xchg
pop
mov
test
sub
imul
rol
cmpsb
dec
stc
ljmp
push
in
jp
pop
push
mov
femms
movsl
lahf
mov
mov
aam
mov
xchg
pop
or
pop
fsubl
es
mov
and
add
adc
dec
inc
or
mov
mov
filds
ja
rep
out
push
mov
xor
pop
xchg
scas
sti
push
sub
push
lcall
sbbl
add
pop
sbbl
das
cmp
movsl
hlt
adc
xchg
dec
xchg
std
pop
push
pushf
sub
cmp
add
fdiv
pop
sub
xlat
mov
out
adc
mov
inc
mov
pop
pop
pop
ja
mov
aaa
fstp
inc
sub
in
std
addl
sbb
add
jge
roll
scas
dec
dec
cmc
inc
data16
push
add
push
and
push
xchg
sbb
push
jp
or
pop
mov
lcall
cmpsl
scas
call
sbb
and
lds
push
cmp
inc
das
dec
fwait
inc
out
ljmp
fsubs
inc
add
pop
loope
arpl
ljmp
idivl
jae
mov
push
pop
shrb
dec
lret
outsb
jae
push
inc
stos
mov
ds
fldcw
or
jecxz
or
dec
js
ja
lock
fwait
std
mov
ret
jnp
jns
xor
lock
or
xchg
scas
push
sub
inc
inc
scas
inc
jecxz
outsl
jecxz
pushf
add
add
imul
add
outsb
mov
sbb
cmp
pop
jecxz
mov
cmp
aaa
sbb
adc
stos
add
imul
xchg
loope
clc
pop
push
adc
cltd
xor
mov
rclb
andb
in
imul
subl
lods
pop
ja
or
or
inc
inc
xchg
in
push
sub
mov
pushf
xor
push
xchg
mov
jb
ficomps
mov
lret
adc
cmp
xlat
mov
ret
iret
int3
or
cltd
lahf
das
out
push
lret
js
adc
fildll
cmpsl
sti
int
mov
dec
cld
loopne
xchg
std
pop
push
clc
mov
int
subl
scas
sbb
push
stc
outsl
lcall
sub
fadd
pop
test
xor
push
les
xor
mov
ffreep
int3
lcall
ficoml
adc
lahf
or
push
sub
adc
or
pop
push
and
push
loope
sbb
mov
adc
cmp
mov
orb
clc
adc
int3
cld
cld
mov
outsl
repnz
aaa
inc
adc
stos
jmp
xchg
inc
push
inc
lahf
xor
iret
lea
test
xchg
outsl
xchg
leave
out
adc
sbb
xor
sbb
add
out
popa
xchg
sbb
cmp
mov
adc
cmpsb
push
lret
dec
xchg
dec
cltd
rolb
mov
in
adc
repz
fwait
es
mov
or
mov
xchg
jb
call
cmp
xlat
mov
lret
and
push
mov
inc
pop
push
mov
aas
ja
cmp
sub
mov
pop
inc
mov
and
xchg
adc
sbb
stc
adc
bound
push
mov
pushf
inc
add
inc
or
decb
push
inc
cwtl
loope
push
icebp
enter
add
arpl
push
pop
mov
and
jb
jns
mov
push
mov
fnsave
stc
es
nop
cmp
aas
imul
xchg
repnz
fucomip
push
sub
mov
ror
jns
mov
das
lock
outsb
jmp
popf
and
mov
fsubl
fistl
sub
outsb
js
sti
pop
and
lret
rcrb
xor
imul
sub
js
push
cmc
out
mov
xchg
mov
fisttpl
pop
leave
shrb
iret
movsl
sahf
sub
sbb
lret
inc
and
xchg
mov
inc
push
push
cmp
inc
mov
mov
out
jnp
cld
mov
dec
cmp
sub
into
mov
sbb
mov
dec
xchg
cmp
testl
mov
movsb
or
cmp
imull
mov
or
pop
mov
clc
outsb
dec
arpl
leave
je
test
call
inc
mov
stos
cmp
pop
push
jno
adc
ficompl
std
test
fildl
hlt
iret
sub
rol
add
prefetch
pop
sub
movsl
push
aad
cld
jbe
pop
icebp
push
pop
test
arpl
push
inc
lds
push
xor
pop
in
shrl
and
clc
or
stc
xchg
mov
and
fwait
jp
sub
pop
fistps
ret
cmpsl
add
jp
cs
mov
test
leave
mov
push
fimuls
xchg
cli
dec
and
movsb
mov
in
mov
pop
test
xchg
add
int3
cltd
jbe
mov
add
and
xor
jp
das
sub
xor
imul
xchg
pop
dec
xchg
sub
or
add
ss
jnp
aas
jne
test
sbb
ret
cmp
sbb
in
shl
inc
filds
addb
cmp
sbb
testb
jbe,pn
repz
in
mov
mov
loop
dec
idivl
insl
test
jo
pusha
dec
pop
in
test
add
inc
mov
sarl
imul
ljmp
sub
cmp
add
cltd
pop
add
sti
loope
mov
xor
push
lret
hlt
jns
mov
cwtl
or
nop
lds
xchg
adc
sbb
pop
pusha
xor
addl
inc
mov
fimuls
js
add
imul
jns
in
mov
pop
test
jle
or
rcll
jg
add
inc
sbb
mov
repz
test
fwait
pop
out
in
jl
push
mov
cltd
mov
fisttpll
sub
mov
or
push
test
inc
push
dec
bound
js
xchg
push
jne
dec
and
or
or
and
test
jl
cmp
xchg
insl
cmp
ffree
push
arpl
rcr
mov
movsl
dec
mov
incb
movsl
das
fisubrs
cltd
sub
in
out
mov
and
mov
mov
std
push
or
dec
xor
add
outsl
std
dec
sub
pop
int3
scas
sub
push
bound
test
sbb
dec
or
in
pop
rorl
jo
mov
shll
imul
or
rorb
jle
push
jecxz
imul
jl
stos
lea
pushf
mov
outsb
in
daa
xor
es
mov
arpl
sbb
pop
cmc
sbb
stos
shrl
add
jne
mov
cmp
inc
sbb
aad
lahf
mov
or
lcall
jecxz
into
loope
aaa
jb
jge
scas
data16
popf
mov
xchg
out
xor
push
and
daa
push
cmp
movsb
push
je
sbb
and
test
fidivl
xchg
std
xchg
aas
test
push
cmp
mov
gs
std
addr16
jmp
jecxz
sti
mov
in
jns
sbb
jns
mov
mov
sarb
das
fisubrs
push
mov
aaa
jmp
dec
add
into
mov
popf
fldlg2
dec
dec
pop
sbb
outsb
cs
pop
js
lods
outsb
mov
js
lds
shll
cld
sub
mov
sub
inc
mov
jne
xchg
xchg
pop
sbb
fs
cmp
pop
adc
fistps
mov
xor
mov
sbb
push
movsb
xlat
outsb
dec
pushf
pop
mov
imul
fdivs
repz
dec
lods
mov
mov
out
daa
pop
test
out
mov
push
sti
and
js
ret
push
xchg
mov
in
mov
mov
push
xchg
imul
movsl
jge
adc
dec
mov
sbb
dec
movsb
mov
jns
enter
cmpsb
adc
mov
loopne
and
sbb
inc
jmp
fidivl
iret
int3
mov
cli
pop
xlat
popa
inc
in
movsl
scas
or
xchg
in
xor
mov
aas
push
stos
jne
adc
je
add
fs
pop
leave
mov
adc
jmp
cmp
ds
hlt
and
sub
sti
mov
add
bound
stc
mov
ret
pop
pop
jb
pop
xchg
cmp
adc
test
gs
fwait
jo
out
imul
out
fwait
jns
arpl
pop
in
out
aas
push
lret
xor
iret
sub
xlat
aaa
or
outsb
push
push
push
andl
pushf
repnz
mov
call
pop
add
xor
push
inc
mov
test
cmp
stos
pop
add
sar
jmp
repnz
adcb
pop
cli
inc
lcall
jg
enter
int
call
mov
cld
add
pop
pusha
xchg
or
gs
sbb
mov
enter
je
cld
pushf
jle
pop
sbb
push
mov
inc
loopne
inc
push
imul
adc
sarb
sub
add
dec
insb
dec
sub
inc
ss
xor
ds
inc
mov
mov
stos
dec
aas
imul
sbb
cmp
andl
mov
or
mov
or
sub
sbb
pushf
pop
pop
js
fdivrl
mov
ss
je
lock
es
movsl
cmp
pusha
jnp
push
fsubrs
jge
inc
or
arpl
sti
les
cmp
xchg
push
fstl
lahf
std
aas
scas
sub
xchg
push
dec
or
and
into
xchg
hlt
gs
and
cmp
shlb
mov
xchg
xor
ficompl
sub
add
out
mov
out
mov
xorb
mov
xchg
fsubl
mov
jge
xor
sbb
cld
scas
jbe
dec
jp
leave
lods
jns
mov
add
xchg
push
pop
jo
sub
sub
dec
pop
sbb
or
je
xor
sbb
adc
cli
jecxz
andb
ja
push
mov
es
inc
jge
or
inc
sub
sub
jg
pop
cmp
lods
je
mov
inc
add
mov
mov
sub
aam
pop
push
lcall
ror
nop
test
mov
jg
ds
sbb
test
int3
fs
push
stc
pop
add
dec
adc
add
dec
lcall
pop
scas
cmp
mov
add
ljmp
in
clc
xchg
and
add
gs
sti
hlt
das
sahf
dec
fsubr
fldcw
outsb
shll
xchg
xlat
jg
outsl
add
lret
or
shlb
xlat
add
jbe
mov
out
aas
xchg
int3
jp
nop
pop
lods
icebp
sub
pop
xchg
xchg
jb
mov
fcmovb
stc
call
sub
gs
cltd
insl
pop
adc
je
jno
pop
xor
icebp
icebp
sub
mov
xchg
xor
shll
push
jge
je
gs
mov
imul
pop
or
cmp
imul
adcl
aad
dec
cmpsb
mov
bound
repnz
test
mov
sub
xchg
mov
out
jno
pop
xlat
mov
mov
cmp
cmpsl
xchg
jl
push
divl
cwtl
xor
enter
cmp
or
fmull
mov
cwtl
cmp
hlt
stos
lea
lcall
add
cwtl
jbe
xor
rclb
add
adc
and
cmpsl
lock
lods
pushf
mov
test
ds
push
pop
xorl
pop
ret
lcall
cli
inc
and
xor
iret
fldt
lods
nop
push
call
popf
and
lods
sbb
or
arpl
xor
mov
xor
and
int3
inc
ds
pusha
jl
dec
jge
ss
sub
test
insb
aam
xor
std
xor
inc
xchg
push
lret
adc
cmp
xchg
mov
rolb
cmp
out
idivb
ficoml
sahf
in
jl
xchg
or
cwtl
jbe
sbb
sbb
mov
mov
cwtl
inc
mov
sbb
mov
nop
call
pop
shrb
mov
mov
iret
jno
pop
in
dec
add
shll
mov
inc
adc
fdivs
orb
lahf
cmp
dec
pop
push
daa
and
xor
jge
jnp
sbb
cltd
insb
xchg
jbe
mov
enter
lret
mov
rclb
movsl
xor
fisubs
aad
pop
orb
imul
mov
sbb
shll
arpl
push
cmpsl
pop
fnsave
movsb
cmc
shlb
adc
shll
fs
mov
mov
iret
mov
call
ret
adc
js
mov
add
mov
xchg
and
fisubl
xlat
lahf
gs
lahf
gs
repnz
leave
dec
jp
sbb
lea
fdivl
push
mov
xor
jp
scas
cld
repz
adcb
lods
xchg
divl
cld
bound
testl
cmpsb
mov
mov
mov
fimuls
adc
sarl
frstor
push
sub
pop
fidivl
mov
inc
out
popa
movsl
mov
fwait
stc
adc
clc
out
add
push
sub
hlt
pop
cmpsl
movsl
aas
in
cmpsb
or
sub
jg
and
insl
mov
push
and
repz
cmp
add
cmpsb
xor
repz
ds
mov
sbbl
jb
push
xlat
test
add
xchg
cmp
ss
cli
add
inc
outsl
or
enter
sbb
xor
push
test
pop
popf
or
pop
movb
sti
adc
adc
pop
iret
or
lea
jge
paddsw
shlb
or
xor
fildl
dec
pop
dec
mov
and
jp
push
idivb
and
jg
sarb
xlat
jne
incl
adc
in
inc
xor
arpl
mov
sbb
lods
mov
jp
push
xlat
mov
stc
add
jmp
rcr
xchg
movsl
mov
in
inc
jbe
sub
push
mov
outsb
mov
scas
ret
mov
inc
hlt
aas
popa
mov
jae
lcall
jecxz
lret
das
lods
stos
add
gs
inc
sbb
push
addr16
orb
popa
rcr
popa
test
enter
sbb
movsb
fsubp
test
dec
push
mov
adc
push
sub
jns
jne
jo
or
sub
rcl
movsl
jle
psllw
xor
jg
sbbl
inc
sub
cltd
cmp
xorl
jno
sub
jns
nop
add
xchg
xlat
jl
out
mov
cmp
or
mov
inc
out
or
sub
rcrb
repnz
call
cli
jo
jle
jl
mov
sub
in
sahf
cltd
dec
push
mov
arpl
jae
add
pop
loop
sub
hlt
or
cmc
cmp
mov
pop
iret
mov
dec
test
cmc
dec
loop
ljmp
mov
int3
cli
int3
mov
fildll
mov
fdivrs
dec
lods
add
sbb
mov
icebp
xchg
enter
push
xchg
cmpsb
fisubrl
cmp
cmp
push
outsl
pop
pop
mov
adc
js
fucomp
fstpl
and
in
sub
call
enter
stc
mov
sub
pop
ss
push
dec
call
adc
jae
ds
adc
sbb
sbb
xchg
roll
add
jb
push
stc
push
imul
push
lret
xor
sti
push
jae
dec
scas
shrb
inc
adc
push
sub
stc
les
and
xor
ret
imul
sbb
aad
mov
loopne
lods
xchg
outsb
scas
imull
adc
in
aas
inc
xchg
mov
xor
sbb
adc
test
pop
pop
mov
jnp
insb
dec
shrl
push
jg
and
fcmovbe
popa
sbb
push
or
das
inc
push
lock
int
jmp
cmp
sbb
push
push
pushf
gs
repnz
subb
jo
sahf
inc
fiadds
cmp
jmp
push
adc
push
or
inc
aaa
mov
mov
inc
loope
jnp
loope
push
push
gs
addr16
push
ss
loope
mov
or
mov
xor
mov
inc
mov
cmp
push
jae
add
inc
mov
mov
adc
sub
clc
stos
fwait
xor
icebp
cmp
subb
pop
inc
stos
jecxz
inc
or
ss
lods
jle
sub
lret
sahf
push
cmp
and
mov
leave
jns
dec
xor
cmp
mov
pop
mov
in
pop
push
test
cmc
xchg
cltd
out
adc
test
outsl
out
jns
outsl
pop
dec
movsb
xchg
test
int3
mov
mov
xchg
inc
popf
push
out
jns
push
add
add
dec
test
sbb
xor
sahf
adc
pop
xor
icebp
fwait
je
push
jbe
sahf
test
and
mov
dec
rcll
xor
scas
fmuls
jge
lock
repnz
push
xor
sub
adc
push
stos
cmp
inc
mov
mov
enter
scas
ret
mov
add
out
arpl
push
cwtl
jo
and
pop
js
lcall
jecxz
mov
sbb
pop
adc
mov
sbb
les
sub
push
cmc
ret
sub
mov
sbb
ss
fistpll
std
repz
loope
lret
xchg
pop
and
inc
fstps
rcr
scas
pop
xchg
inc
dec
or
or
shrb
xchg
fldl
fwait
mov
les
jecxz
push
push
dec
mov
scas
imul
dec
mov
push
mov
lock
mov
lds
stos
cwtl
sbb
and
gs
jp
sahf
cmpsl
test
xchg
test
mov
imul
sahf
mov
aad
add
mov
dec
fisttpl
stos
adc
mov
call
ja
idivl
fnstenv
jno
xchg
jne
and
sbb
cmp
lea
mov
or
mov
pop
inc
fcoml
mov
mov
jg
and
mov
lahf
push
cwtl
scas
jns
mov
inc
loop
rcrl
std
dec
and
lahf
cmp
cmpsb
mov
dec
dec
aas
cmc
inc
pop
adc
lret
or
scas
loope
mov
in
and
xor
ss
repnz
js
jg
pop
jnp
sti
shlb
imul
das
bnd
lcall
jne
mov
rcrl
ret
xchg
inc
cmp
dec
or
pop
bound
jns
and
fnstenv
mov
fiaddl
popf
add
inc
mov
cld
xor
daa
inc
mov
in
loop
aam
gs
sbb
cld
mov
hlt
jp
adc
mov
cmpsb
pusha
sbb
pop
dec
out
aaa
push
idivb
and
push
mov
sbb
jb
bound
movsl
nop
insb
lods
leave
fidivl
inc
roll
js
sub
icebp
push
cmpsl
call
mov
subl
outsb
push
pop
repz
or
cmpsb
pop
fidivrs
pop
add
dec
xor
fstps
imul
mov
call
cmp
adc
test
jne
jle
paddd
fidivrl
sub
ja
insl
jae
mov
movsl
sbb
fwait
lret
imulb
out
in
into
mov
imul
push
cmp
ret
sti
push
stc
mov
xor
sub
push
or
inc
jge
push
lea
add
aaa
int3
enter
sar
pop
arpl
cmpb
faddl
stos
sbb
pusha
lret
sbb
test
sub
test
aam
je
out
mov
stc
xchg
or
pop
adc
movsb
testb
jns
outsl
lock
mov
mov
cmp
mov
xor
outsb
jge
stos
outsl
xor
fldenv
iret
add
pop
repnz
cmp
pop
xchg
mov
add
or
or
adc
pushw
xor
mov
shrl
pop
jbe
cmpsb
inc
lock
dec
imul
jbe
aaa
xchg
sub
out
jecxz
mov
mov
mov
punpcklwd
test
iret
outsl
loope
test
cmc
stos
dec
sub
jo
movsb
test
les
out
or
or
xchg
ja
lahf
imul
adc
jnp
fst
sbb
jno
pop
nop
out
mov
mov
jmp
inc
ret
mov
add
sbb
xor
roll
push
inc
push
fstps
mov
sbb
imull
int3
mov
mov
sub
lahf
sub
inc
mov
sbb
jno
sub
pop
push
xor
nop
fdivrs
cs
popa
jnp
xchg
fwait
sti
sbb
sti
test
lds
mov
sub
ljmp
mov
mov
rcrb
ficompl
or
xchg
hlt
jle
jl
leave
sbb
jae
jnp
push
cmp
adc
fsubrs
imul
daa
test
mov
push
shlb
mov
xchg
iret
and
and
ret
mov
xor
into
test
cwtl
sti
sbb
sbb
mov
repz
lock
mov
daa
sbb
sbbl
aaa
pop
movl
js
faddl
aaa
sub
cs
cmp
and
stc
or
or
sti
jae
adc
cmp
push
insb
dec
movsb
cmp
mov
daa
lods
icebp
leave
jmp
mov
add
scas
movsl
int3
dec
mov
inc
jge
pusha
dec
lret
aas
dec
push
decl
bound
pop
movzwl
gs
adc
pusha
mov
inc
jo
jg
mov
sti
and
pop
adc
adc
jp
dec
loop
in
inc
add
mov
mov
arpl
mov
and
pop
iret
dec
fnstsw
adc
aam
add
dec
cmp
cmp
adc
data16
lods
test
sub
jne
mov
dec
sub
scas
push
movsb
xchg
pop
pop
into
cmc
jae
cmp
xchg
cmp
mov
lods
mov
mov
ja
cmp
pop
out
test
add
jg
imul
sbb
lret
dec
lock
lret
pop
adc
cmc
cmp
adc
inc
lods
in
repnz
loope
addr16
incl
data16
pop
inc
scas
mov
pop
sti
sub
ja
adc
sub
mov
int3
mov
das
dec
imul
jmp
cmp
mov
lahf
cli
or
lds
push
outsb
jbe
push
sbb
push
sbb
dec
add
into
sbb
or
xchg
pushf
out
push
shlb
xchg
xor
fimull
and
es
out
xor
push
icebp
pop
sbb
imul
sbb
cmp
cmp
mov
imul
sarl
insb
scas
cltd
xchg
cwtl
test
lds
scas
jge
fidivs
imul
jnp
sbb
jo
lea
pop
pop
test
aam
sub
lods
addr16
loopne
shll
bound
pop
insb
pop
andb
jmp
shlb
daa
jb
ss
xor
pushf
sub
and
jnp
xchg
inc
jp
xchg
pop
fidivl
pop
dec
sub
mov
inc
push
test
insb
lcall
add
cmpxchg
sub
repnz
mov
lock
stc
sub
xchg
adc
xor
and
iret
imul
loopne
call
add
cwtl
arpl
shrb
cmp
jge
das
out
xchg
inc
and
nop
pop
push
popa
dec
int3
stos
jbe
movsb
xor
xor
out
imul
mov
out
dec
fucom
stos
jmp
fldenv
decl
js
faddl
sbb
fistpll
mov
add
cmp
and
gs
test
mov
in
sub
or
pop
mov
adc
sbb
xchg
and
lret
push
pop
sub
popf
mov
cwtl
dec
inc
mov
or
hlt
lods
or
mov
hlt
pop
xchg
xchg
jae
jnp
mov
xchg
and
cmp
loop
jmp
icebp
xchg
cmpb
movb
push
pop
or
mov
jle
aaa
aas
jno
outsl
fnsave
dec
sbb
xlat
mov
mov
xchg
mov
adc
dec
movsb
leave
movsb
sbb
mov
in
aaa
xchg
inc
sub
stc
dec
cmp
sub
inc
dec
inc
test
fcompl
pop
mov
mov
push
add
test
or
or
dec
out
lret
sub
in
popf
sub
xor
int3
cwtl
mov
ljmp
into
pusha
push
jns
scas
ja
jns
push
sub
sti
mov
sti
xor
pushf
sbb
sarl
out
jo
jae
and
cwtl
adc
inc
pop
push
loopne
mov
and
out
cmp
dec
aaa
adc
imul
push
push
dec
ja
std
mov
cld
xor
test
mov
cwtl
sub
xchg
icebp
cld
pop
icebp
jle
in
or
mov
call
mov
std
pushl
test
out
test
adc
mov
inc
jmp
or
jp
xchg
dec
add
in
mov
pop
xchg
shrl
clc
jecxz
outsl
xchg
push
cmp
ficoms
pop
stc
mov
pop
jo
jge
push
cld
ret
int3
scas
rcl
cli
jp
xchg
inc
fbld
jno
mov
inc
enter
sub
lahf
xlat
or
push
sbb
cld
mov
xor
jo
cli
mov
push
and
jb
sbb
dec
mov
xor
lock
mov
adc
inc
xorl
shrl
xor
cmp
clc
sub
flds
or
pop
xchg
outsl
loop
jmp
out
xor
inc
sbb
mov
das
mov
sbb
fwait
or
add
adcl
inc
fsubp
xchg
sub
scas
mov
add
cmp
inc
cmp
xor
sub
stos
mov
fst
mov
scas
inc
pop
cli
xchg
in
lods
out
sub
cmpsb
push
cld
gs
bound
sub
outsl
pop
inc
xor
jb
jge
sub
scas
mov
mov
in
mov
scas
ja
addr16
push
inc
sbb
aad
pop
das
dec
add
lods
jmp
push
mov
out
push
pop
mov
dec
sbb
cli
clc
jge
cmp
mov
sub
iret
rorl
xor
inc
pop
aaa
popf
xchg
xchg
ja
or
adc
lret
lods
cmp
inc
popf
sub
adc
daa
jge
pop
jmp
iret
mov
sbbl
js
adc
pop
mov
jge
shll
ret
mov
out
mov
dec
dec
pop
lret
aas
das
testl
jnp
pop
xchg
adc
pop
mov
inc
mov
sub
in
int3
mov
jmp
dec
pop
popa
mov
lods
inc
jg
inc
stos
sarb
push
mov
sti
sub
push
hlt
and
jl
mov
je
sub
mov
xor
lret
mov
and
lods
sub
xchg
pop
nop
out
scas
xor
cmp
data16
andl
lahf
das
mov
add
cwtl
jp
dec
loope
push
loop
lahf
cmpsl
movsb
movsb
pop
jae
jo
fdivl
arpl
fnstcw
mov
sub
outsl
and
in
stos
out
jmp
or
xchg
mov
cmp
xchg
mov
shrl
out
pusha
pop
in
fbstp
push
pop
jecxz
iret
sbb
popf
aas
in
cwtl
pop
xor
push
cmp
test
xchg
arpl
test
movsb
push
in
in
cmp
inc
xchg
dec
mov
inc
fisubrl
out
xchg
pop
sub
mov
add
lahf
scas
lahf
mov
jae
push
fs
sahf
test
inc
inc
leave
push
inc
stos
push
mov
mov
jp
inc
mov
sub
bound
or
inc
or
outsb
fiadds
push
js
dec
inc
push
hlt
je
js
repnz
into
dec
sbb
sbb
jbe
jne
adc
pop
mov
jae
mov
cmc
rorb
pop
pop
loope
aad
and
ret
push
dec
test
push
pop
scas
pop
mov
mov
cmp
dec
ljmp
movsl
sub
repz
aad
cmpsb
xchg
lcall
ss
sbb
pop
loopne
inc
mov
imul
xchg
cmpl
xchg
or
dec
and
inc
inc
adc
pop
addl
push
dec
mov
fcoms
clc
or
lret
push
jno
or
divl
ret
outsl
scas
packsswb
fxch
cmpsb
testb
pop
and
xchg
push
rcrb
push
xor
adc
adc
pop
sbb
subb
mov
jbe
scas
xlat
sarb
lea
andl
shrl
jge
and
mov
add
std
hlt
fsubl
insb
out
mov
cmp
mov
subb
in
mov
mov
cmp
decb
testl
mov
inc
pusha
orl
inc
cs
iret
iret
cltd
cvtdq2ps
push
pop
dec
pushf
rorb
jbe
mov
outsb
sbb
mov
cwtl
mov
fstpt
sbb
test
notl
ret
push
inc
decb
push
fnstcw
ss
add
xchg
aam
out
sub
rclb
push
imul
inc
push
mov
or
sahf
jmp
stos
insb
adc
nop
mov
jp
stos
scas
sub
stc
add
pop
dec
les
push
mov
adc
dec
adc
xor
push
insl
cmc
mov
push
out
jge
dec
loop
ljmp
test
test
sbb
push
or
xchg
cmpsl
pop
out
push
pusha
aad
in
sbb
mov
pop
in
cld
test
in
lea
adc
mov
inc
rclb
dec
and
xchg
push
jne
ss
leave
xchg
mov
movsl
cmpsl
in
cli
leave
sub
movb
xlat
sub
sahf
stc
cmc
push
xchg
ret
das
and
jp
insb
adc
push
dec
adc
mov
mov
dec
call
mov
push
jecxz
fwait
jle
push
out
cli
adc
dec
sub
cmp
push
test
cltd
push
sbb
int3
mov
dec
add
hlt
xor
xor
sbb
cld
push
lcall
xchg
inc
aas
pop
loopne
insl
adc
fdiv
jge
loop
sbb
loope
scas
int
addr16
or
push
leave
insb
push
inc
inc
cmp
std
es
push
push
and
movsb
xor
cmpsl
test
or
cwtl
clc
imul
adc
pop
out
add
negl
xor
mov
mov
cld
movb
mov
lcall
and
int
jp
cmp
popa
xchg
mov
inc
sbb
std
cld
pop
inc
jnp
xchg
add
arpl
mov
cmp
clc
mov
mov
jnp
push
pop
inc
lds
stos
ror
pop
lods
push
lret
lfs
cmpsl
dec
ror
add
add
movsl
addr16
out
sbb
jge
ljmp
int
xchg
jp
std
cmc
adc
test
push
sbb
xorb
scas
jnp
cmp
ds
fdivrs
scas
int
xor
cmpsl
repnz
xchg
imul
push
dec
xchg
push
or
out
dec
mov
mov
das
and
subb
mov
roll
dec
popa
fisubrs
add
dec
dec
add
sbb
dec
xchg
add
in
push
int
sbb
lods
aaa
cmc
repz
dec
std
xchg
repnz
xor
hlt
cmpsl
mov
mov
aas
sahf
daa
push
and
mov
dec
xchg
in
nop
mov
mov
cmp
leave
pusha
arpl
add
pop
mov
daa
dec
nop
insl
popa
cwtl
imul
rolb
pop
dec
adc
adc
pusha
mov
cmp
divl
ss
dec
imull
outsb
push
jmp
sti
in
mov
repz
lret
push
cmc
fnstenv
and
add
sbb
cmp
or
cld
sub
loopne
sub
cld
push
xchg
cmp
test
adcb
push
fstl
lcall
out
inc
add
adc
dec
xchg
test
jp
dec
sbb
or
mov
cli
cmp
jne
sbb
mov
sahf
ljmp
xchg
movsb
sbb
rclb
add
mov
hlt
out
popf
pusha
sub
dec
push
push
imul
jl
imul
pop
mov
ficomps
shrb
dec
clc
push
in
add
add
ja
mov
and
push
loope
hlt
inc
mov
jmp
dec
mov
bound
fwait
insl
mov
adc
les
push
sub
aaa
inc
pop
cmpsl
add
xchg
push
js
xchg
xchg
push
pop
cmp
xlat
test
inc
hlt
imul
popf
push
xchg
push
out
sbbl
pop
fwait
mov
and
int3
int3
movsb
shl
mov
xor
jae
aas
adc
sub
ret
in
sbb
js
adc
sbb
push
dec
leave
test
cmc
popf
test
push
xor
push
mov
inc
jle
pushf
scas
pop
mov
ror
fbld
aad
addr16
pop
rolb
loopne
pop
xchg
push
test
cmp
aad
xchg
cmp
lea
sahf
sbb
cmc
sub
insb
repz
inc
xchg
pop
ds
sub
jbe
loopne
jmp
imul
add
test
or
rol
cmpsl
pop
test
jmp
aaa
lret
outsl
xor
push
call
and
int3
lahf
mov
fidivrl
mov
cmp
dec
add
push
in
mov
inc
aad
lods
xor
loopne
std
in
int
jp
and
push
mov
mov
or
stos
leave
stc
in
xchg
mov
push
rcrl
cmpsl
inc
xchg
jg
pop
out
stos
insl
ss
jg
or
popf
call
push
push
lock
mov
pop
out
lahf
test
outsb
push
cmp
cmp
je
inc
subl
pop
push
add
arpl
roll
mov
jbe
mov
pop
mov
jns
mov
pop
mov
lahf
dec
pop
in
stos
mov
jecxz
sbb
clc
ss
push
inc
mov
stos
mov
aas
push
sbb
or
rorl
cli
or
outsl
mov
push
jno
cmp
popf
fists
jae
jg
cmp
nop
mov
xlat
xchg
sbbl
sahf
and
fldl
loope
in
push
lods
ret
fists
daa
mov
sub
popa
mov
rcl
mov
es
daa
incb
sahf
cmp
ljmp
mov
jg
popa
lock
adc
push
and
popa
or
mov
push
ds
aas
sbb
rorb
push
dec
lock
out
adc
pusha
imul
dec
in
mov
sbb
mov
es
dec
or
mov
fs
mov
data16
push
mov
pop
mov
cmp
sub
jl
call
cmpsb
subb
dec
jbe
pop
push
rcrl
leave
cmpsb
stos
aaa
int3
cmovbe
aaa
mov
mov
adc
or
pusha
jge
inc
fs
out
movsl
sbb
aam
dec
dec
arpl
test
or
lods
into
xor
jb
fcompl
dec
jmp
dec
sbb
fwait
push
jbe
cmp
aas
and
testb
mov
cmp
daa
jbe
rclb
cmc
cwtl
ret
mov
dec
outsl
es
sub
pop
inc
repnz
lods
jecxz
jnp
and
or
stos
inc
lods
mov
dec
subl
pop
in
xor
scas
jg
mov
and
push
xchg
mov
xor
test
mov
xchg
adc
and
push
ds
fdivl
xchg
or
in
fistl
sbb
js
mov
mov
push
jae
and
dec
lret
add
lock
or
mov
xor
mov
and
jo
bound
in
pop
movsl
adc
sub
dec
add
nop
fdivrl
pop
xor
fwait
cmpsb
and
jecxz
int
ja
adc
imul
fmulp
mov
gs
nop
xchg
xchg
or
mov
xor
aam
mov
outsl
flds
mov
mov
rorb
sub
adc
lsl
push
push
and
mov
flds
pop
ret
xchg
ljmp
lahf
mov
lods
xor
inc
hlt
loope
rorl
loop
mov
add
mov
xor
xchg
dec
inc
mov
ret
icebp
outsl
push
sub
cmpsb
lea
rcl
adc
sbb
mov
and
lret
jo
mov
adc
cmpb
stos
push
scas
xchg
test
outsl
sub
dec
scas
mov
add
out
pushf
sbb
mov
jo
out
xchg
add
addr16
dec
mov
std
cmp
and
cwtl
push
mov
arpl
sbb
lods
xor
in
push
mov
cmpsb
out
push
fwait
lods
fwait
mov
mov
popa
sar
fistpl
push
rcrl
push
dec
pop
mov
es
cltd
dec
push
les
pop
mov
fidivrl
dec
jp
xlat
adc
or
outsl
push
aaa
jns
test
lods
inc
mov
jbe
leave
and
or
mov
popf
cmpsb
test
sbbb
iret
clc
pop
jb
daa
fisubrl
fisubrs
stc
cmc
test
shll
push
inc
leave
into
cmp
sbb
icebp
dec
jp
test
nop
hlt
push
xchg
sahf
adc
xchg
pop
add
xor
cmp
sar
subb
lods
inc
enter
jg
xchg
sahf
push
fld
repnz
pushf
rcl
inc
cmc
mov
cmp
test
xor
mov
in
test
int
or
in
lock
cmc
cmp
lea
and
jge
push
cli
dec
cmp
push
inc
cmp
fsts
sub
push
or
test
push
movsb
test
mov
fsubrs
mov
push
sbb
sbb
cmp
aam
in
std
pusha
std
js
push
negl
xchg
cmp
pop
aam
sub
enter
inc
nop
inc
shrl
xor
fstpt
daa
mov
rolb
ja
add
std
or
mov
or
push
ljmp
adc
mov
leave
pop
cmp
dec
popf
bound
sbb
inc
xchg
inc
jge
xchg
xchg
cli
sbb
adc
inc
cmp
das
mov
xorb
imul
xchg
jle
cwtl
mov
mov
pusha
decb
les
jns
loopne
es
xor
mov
int
les
sub
pop
xchg
jnp
push
gs
jne
loope
addr16
ss
add
push
jmp
push
mov
push
xor
rcr
test
push
cmpsl
push
cmp
cmp
pushf
pushf
popa
xchg
ds
lods
mov
pop
sub
addb
mov
enter
mov
movsb
or
push
negl
sub
cld
inc
mov
push
mov
loopne
add
aam
cmp
shrb
adc
and
xchg
push
fs
jge
ljmp
xchg
inc
es
xchg
daa
out
dec
mov
je
jmp
cwtl
mov
dec
repz
js
push
inc
mov
adc
jae
std
lds
and
pop
arpl
stc
cs
and
clc
jmp
pop
imul
fstpt
in
add
cmp
adc
or
cmp
lret
add
addb
pop
xor
or
mov
push
dec
cltd
subl
lahf
fisubrs
cvtps2pd
jp
in
mov
stos
repnz
cmp
xchg
add
sub
cmpsl
push
adc
adc
sub
into
lret
mov
dec
dec
daa
jns
pop
jecxz
hlt
in
loop
cs
popf
scas
lods
cmp
dec
adc
mov
mov
mov
sbb
and
cltd
ljmp
dec
xor
call
add
sbb
test
rclb
sbb
and
sbb
inc
push
das
mov
repnz
sub
jnp
adc
push
test
aaa
mov
pusha
cmp
xchg
mov
hlt
mov
jp
cmpsl
jmp
inc
test
xchg
in
cwtl
and
cmpsb
in
lret
insl
dec
pop
iret
int3
or
es
inc
shlb
shlb
lods
mov
popf
loop
dec
cltd
mov
xor
mov
inc
add
aas
fidivs
hlt
stos
nop
add
jne
mov
mov
mov
inc
ficoml
stc
loopne
xlat
or
mov
out
test
push
mov
push
or
clc
cld
push
mov
insb
jnp
call
cwtl
adc
push
insl
jmp
es
add
lahf
mov
das
subb
inc
inc
xchg
lds
das
jns
rcll
xor
aaa
ret
data16
test
ror
mov
rcr
stos
loopne
lret
adc
insl
mov
out
scas
jno
adc
ficompl
sti
aam
mov
mov
cmp
movsl
pop
lahf
pop
cld
out
orb
mov
sub
dec
stos
mov
xor
adc
popa
out
add
mov
shll
stos
adcb
insl
jbe
jle
push
in
scas
xor
jmp
lret
xor
inc
mov
pop
push
xor
icebp
mov
mov
mov
adc
cmp
mov
mov
jbe
lcall
test
inc
jmp
inc
push
ss
mov
pop
pop
nop
and
insb
mov
mov
je
push
sbb
push
push
xchg
xchg
outsl
pop
sti
imul
movsb
data16
xor
sbb
fwait
icebp
punpcklwd
aad
mov
test
jne
pusha
lcall
nop
cmp
push
inc
nop
or
ds
adc
pushf
sub
lea
popa
aad
pop
sub
sbb
enter
push
mov
mov
push
mov
xlat
ret
pop
mov
shrl
subl
push
pusha
mov
xor
cmc
jg
sub
xor
add
movsb
je
shrb
mov
cmpb
mov
mov
aas
lahf
mov
fwait
push
movsb
mov
add
or
stos
cs
sbb
ror
jo
mov
and
jl
adc
sub
fs
pop
fldenv
fdivs
and
fcompl
icebp
xor
or
mov
int3
shrb
insb
je
shrb
aaa
incl
repz
mov
lret
movsl
jns
inc
jne
jns
lds
mov
icebp
mov
out
js
xchg
xchg
loope
fstpt
addr16
stos
push
movsl
add
addr16
cmc
jg
lods
jb
lea
sbb
pop
je
xchg
or
jp
mov
cmc
push
add
inc
xchg
jl
ss
loop
push
add
fisubrl
arpl
xchg
fwait
dec
stos
xor
xor
mov
mov
les
jbe
fisubrl
dec
test
aaa
and
wbinvd
mov
push
dec
ret
pop
push
loope
outsb
or
dec
shlb
xor
lds
push
jb
orl
dec
push
xor
mov
push
push
jne
jle
rclb
mov
mov
lds
jnp
pop
push
aad
out
adc
push
mov
pop
mov
jae
outsb
or
ljmp
push
lret
or
daa
daa
hlt
mov
ds
loopne
lcall
or
mov
inc
xor
inc
stos
jle
mov
stc
mov
aas
data16
gs
sbbl
xchg
push
adc
or
xchg
test
fdivl
lods
dec
cmc
ret
lods
dec
mov
jl
lods
xchg
hlt
fistpl
out
rorb
in
icebp
sbb
sahf
adc
sbb
mov
mov
mov
popa
mov
pop
scas
add
clc
cmc
cltd
sbb
fsubrs
insb
pop
int
fistl
inc
xchg
pop
lcall
sahf
dec
int3
dec
inc
jecxz
push
push
and
je
pop
shlb
jnp
imul
dec
loope
in
sti
out
mov
jae
dec
xchg
mov
loop
sti
sbb
in
jge
nop
push
pmaxub
jo
rcrl
lret
pushf
stos
inc
add
sbb
outsb
mov
pushf
andl
xchg
dec
decb
sti
jnp
xlat
xor
data16
push
movsb
push
jnp
inc
in
and
in
cli
xor
push
dec
jno
sub
mov
pop
xchg
roll
xor
cmp
xchg
fwait
push
jecxz
jp
stc
lock
cli
pop
int3
pop
xor
mov
push
adcb
and
xchg
or
sbb
dec
popf
stos
push
enter
imul
popa
orl
cmp
je
xchg
jg
sahf
loop
xchg
pop
sarl
dec
sbb
addr16
jl
and
inc
movsb
jle
sti
push
inc
ret
test
outsl
xor
adc
and
iret
push
sbb
pop
rcrl
xchg
in
fidivrs
pusha
addb
cmpsb
jo
sub
repz
xchg
arpl
or
pusha
call
dec
clc
insl
imul
out
mov
repz
jmp
addr16
sub
test
mov
icebp
dec
jmp
insb
sti
push
shl
or
fwait
xor
cmp
cmp
fsts
arpl
mov
xor
aam
push
fmull
movsl
dec
repnz
repz
mov
cs
xchg
int
mov
push
sahf
mov
jae
mov
cmpb
lahf
sbb
hlt
sub
add
stos
cmp
xor
loopne
out
add
aaa
inc
cmp
stos
lock
cltd
and
outsl
xor
test
xor
xchg
sub
loopne
inc
insb
aaa
movsl
push
in
and
outsl
or
push
inc
adc
xchg
sarl
jle
add
dec
inc
xacquire
push
sbbb
or
cli
sti
pop
aas
pop
pushf
push
push
fsubrl
shl
sbb
push
or
cmp
shlb
gs
cmp
xchg
xchg
xor
jb
aam
cld
xchg
push
cmp
sti
jecxz
inc
xchg
add
scas
daa
inc
cmpb
imul
push
mov
out
sbb
xchg
and
cmp
sbb
aaa
sbb
push
fldt
push
push
xor
stc
mov
test
mov
mov
loopne
sub
xor
cmp
pop
adc
xchg
lods
inc
jmp
inc
lods
pop
test
pop
add
das
inc
pushf
dec
je
in
mov
int3
cwtl
loopne
das
cmpsb
or
jmp
jge
leave
into
out
sbb
frstor
push
pop
sti
cmp
dec
lahf
test
lret
lds
or
push
mov
pop
and
cs
test
imul
add
out
jge
movsb
sahf
insb
gs
rcr
mov
lods
mov
jle
cmp
push
inc
cmp
insl
or
imul
xchg
sahf
aad
xor
pushf
pop
push
lret
mov
sarl
xor
mov
call
rorl
jg
sbb
es
add
pop
cmpb
xor
lcall
cmpsb
in
mov
call
testl
outsb
incl
push
xchg
and
mov
cwtl
repz
sub
push
pop
xor
out
aaa
test
mov
out
and
inc
mov
sbb
mov
push
cmpsb
out
repz
lods
jnp
mov
xor
loopne
push
roll
push
stos
dec
mov
out
repz
addr16
add
je
pop
enter
mov
aaa
cmc
shl
pop
gs
mov
dec
mov
pop
out
call
js
cmpsl
pop
arpl
in
in
lret
loop
mov
fadds
mov
mov
pushf
fidivrl
jmp
in
xor
lds
mov
or
cmc
push
push
sub
and
and
cmp
stos
arpl
movntps
push
pop
or
xchg
cmpsl
and
pop
lods
lock
bsr
dec
out
ret
push
inc
add
add
jbe
xor
pop
add
add
lods
sub
mov
cltd
push
lods
mov
xchg
inc
sbb
hlt
cmp
daa
shrb
mov
call
movsl
insl
or
into
lea
sti
pavgb
jbe
repz
push
arpl
loopne,pt
inc
sbb
fsubrs
aas
xchg
rcrl
push
sub
mov
push
sbb
inc
jmp
imul
das
insb
icebp
imul
dec
fsubrs
sbb
jle
push
and
dec
sbb
daa
sub
aad
sub
mov
in
cmp
es
movsb
sub
gs
push
icebp
pop
mov
dec
sub
sub
pusha
imul
fstps
gs
cld
push
mov
jbe
sbb
push
inc
fcomi
adc
pusha
inc
dec
ss
xchg
push
mov
push
add
das
xor
and
mov
movsl
ljmp
mov
aad
cmp
or
adc
cmpsb
cli
jecxz
scas
subb
lods
cmp
aam
inc
jb
insl
addr16
add
cmp
shrl
pop
or
addr16
lea
jp
shlb
push
addb
pop
pop
and
xorb
mov
add
push
sbb
in
cmp
jo
sti
stos
int
lahf
loopne
insb
mov
cmp
call
xchg
mov
cltd
test
cmp
mov
jns
mov
outsb
xlat
adc
mov
or
push
int3
mov
idivb
arpl
test
mov
lods
push
addr16
mov
sub
sub
xchg
lds
lock
scas
sub
push
movsb
cltd
cmpsl
jb
add
push
inc
shll
add
adc
scas
sbb
gs
roll
mov
orl
leave
xchg
fstpt
inc
pop
jnp
lods
xor
and
ds
adc
fistps
xor
loope
mov
add
addb
inc
add
and
cmc
push
and
iret
push
lahf
jno
imul
jg
cli
jb
sbb
push
adc
sub
shl
and
xchg
pusha
repnz
mov
loopne
dec
fistl
jge
dec
cmp
xchg
ret
mov
mov
cwtl
mov
pop
sti
push
out
aas
test
xor
xchg
mov
pop
xor
inc
xchg
pop
rcrb
lea
pop
inc
inc
in
out
and
mov
rorb
repnz
ds
rcr
push
gs
cmp
jnp
push
jno
pop
in
mov
stc
imul
lods
inc
jnp
dec
hlt
jo
outsb
jno
test
scas
push
sahf
sbb
jecxz
sbb
adcl
xchg
je
in
ds
mov
movsb
pop
mov
cs
sbb
fnsave
aad
rcrl
mov
clc
scas
sarb
mov
add
mov
lahf
sti
out
cmc
mov
and
loop
or
sub
repnz
add
inc
inc
pop
mov
daa
sbb
push
popf
inc
push
adc
sub
roll
sarl
xor
loope
xlat
or
pop
cs
jle
push
out
sub
xlat
shl
adc
insb
jae
enter
ds
sub
jmp
mov
decl
nop
pop
nop
aad
jmp
test
mov
mov
fiaddl
add
bound
aad
hlt
jl
pop
cmp
push
std
mov
insb
push
and
inc
jno
add
jl
xor
xor
mov
lods
jl
repnz
stos
pop
movsl
cmp
loope
bound
push
lret
dec
incl
fmull
xchg
rorl
andb
mov
call
mov
cmp
enter
sti
mov
mov
mov
fldt
cmpb
test
stc
repnz
xchg
rclb
cmpsl
jnp
pop
div
push
jne
adc
xchg
sbb
mov
mov
cmp
ljmp
repz
aas
cmpsb
in
lret
das
rcrl
inc
repnz
jnp
ret
call
push
push
stos
or
dec
sbb
add
mov
sbb
in
push
jecxz
sbb
mov
sbb
out
xchg
addps
cli
test
fs
in
add
mov
mov
dec
arpl
pop
add
inc
or
rcrb
into
outsb
xchg
push
in
mov
std
pop
cmpsl
nop
adc
xor
push
push
jo
adcb
mov
push
rcrb
sbb
add
cmp
sub
inc
or
lods
lahf
daa
das
std
sub
mov
js
lret
insb
inc
int
dec
clc
iret
out
mov
stos
xor
out
test
dec
mov
jnp
call
pop
and
push
aas
sub
cmpl
inc
imul
cmp
inc
test
pusha
jnp
lods
add
sub
es
push
std
test
mov
loop
mov
jne
arpl
mov
pop
jo
push
pop
push
lods
mov
loope
push
adc
pop
testb
les
push
add
xchg
adc
cmp
mov
sbb
lock
push
cmp
mov
inc
out
imull
sbb
jns
lods
insb
jo
ljmp
imul
call
sub
push
in
popa
ds
ss
outsl
arpl
ficoms
cmpl
inc
aas
sub
scas
cmpsl
jne
jns
lods
test
jbe
fldt
lahf
fnstenv
cmpsb
sbb
pushf
sbbl
push
push
ds
mov
cmp
insb
adcb
xchg
nop
stos
outsl
pop
adc
pop
bound
repz
xor
data16
aaa
cmpb
aam
adc
jne
jbe
stos
add
and
sub
inc
mov
test
outsb
pop
push
xchg
xchg
and
cmpsl
mov
mov
mov
fsubs
test
dec
mov
pop
lock
fs
mov
daa
add
aas
mov
cmp
test
jmp
lds
cld
mov
es
ret
dec
xor
xchg
sbb
mov
jns
in
pop
enter
xor
addb
or
sbb
fs
int
les
mov
stos
iret
pop
or
push
ret
pop
lods
iret
xor
fldt
xchg
call
lock
cmpsb
ljmp
in
add
jp
xor
popf
lcall
rorl
movsl
xor
jge
xor
or
enter
cmp
sub
mov
mov
rorl
inc
ret
pop
adcb
adc
and
aam
nop
and
xchg
enter
adc
fcomps
push
scas
pop
shl
test
js
adc
sub
pop
pop
mov
rclb
pop
cmpsb
stc
pop
push
mov
add
ficomps
pop
lahf
adc
inc
cmpsl
inc
je
push
stc
stos
inc
fbstp
sbb
sarl
inc
sbb
cmp
sbb
inc
xor
iret
mov
lods
adc
hlt
sbb
jnp
jle
push
rcr
lods
fidivl
xchg
adc
mov
cmp
je
mov
out
lods
mov
xor
mov
fisttps
push
shll
sub
outsb
fstps
xchg
pop
add
stc
xchg
loop
call
push
aaa
loope
mov
aaa
adc
rorb
jecxz
inc
rcrl
xor
inc
add
out
cld
mov
ret
inc
pop
inc
dec
mov
aam
bound
arpl
xor
repnz
leave
lods
cmp
inc
adc
adc
pusha
sub
cltd
int3
ret
mov
mov
icebp
or
mov
call
dec
fisttpl
sti
and
jg
es
jnp
add
push
cli
mov
xlat
cmp
enter
movsb
ret
push
or
gs
mov
and
adcl
xchg
scas
adc
xchg
out
mov
mov
jge
mov
lcall
shr
test
or
rol
outsl
data16
mov
stos
sub
rolb
hlt
loopne
adc
adc
pop
add
mov
loopne
add
xor
icebp
cwtl
inc
adc
cmp
push
inc
push
dec
hlt
test
jp
add
xlat
sbb
mov
lcall
dec
push
or
scas
loopne
ret
cmp
ja
scas
es
mov
and
cmpsl
mov
mov
mov
call
jae
push
sub
pop
or
mov
dec
rolb
sub
mov
and
xchg
lea
gs
in
test
nop
xor
sbb
jecxz
fwait
push
and
movsb
inc
cmp
mov
sbb
sarl
out
pop
sbb
stos
pop
loop
fdivrl
xchg
mov
call
pop
pop
cmp
in
jb
mov
test
adc
pop
clc
add
int3
mov
or
call
push
loope
jb
aam
sbb
loope
and
inc
in
push
sti
jae
pop
dec
leave
clc
clc
in
pop
out
cmpsl
inc
loopne
jb
sbb
popa
mulb
inc
pop
popa
mov
xor
testb
subl
pop
nop
sbb
inc
pop
incl
int3
ret
rcl
and
pusha
inc
repnz
mov
stc
loopne
lds
ds
push
xor
xor
jno
adc
loopne
mov
aad
es
lods
jo
mov
or
and
push
xor
cs
adc
in
and
pop
fwait
cmp
mov
stos
inc
inc
inc
sahf
movsb
or
sub
mov
je
sub
mov
nop
fwait
xorl
push
sbb
sub
lods
jo
popa
pop
out
repnz
stos
roll
cmpsb
nop
sbb
adc
cmp
sub
push
mov
insl
xchg
shlb
mov
lock
insl
and
pop
movsl
jl
mov
enter
lock
daa
adc
fwait
imul
or
faddl
dec
adc
mov
lea
sub
push
mov
xchg
jg
subb
ret
mov
cmp
stos
cmp
xor
jecxz
cmpsl
jge
add
cld
xchg
popf
inc
pushf
mov
dec
jbe
movsl
rolb
sbb
mov
xchg
sub
adc
inc
cmpsb
xlat
mov
movsl
fsubrl
push
nop
iret
rolb
jmp
filds
shr
nop
mov
int
cwtl
and
jb
mov
adc
or
jg
out
js
mov
out
not
test
xchg
mov
pop
add
fs
repnz
loop
popa
std
xor
sti
xor
ds
pop
pusha
sbb
decl
dec
xchg
fidivl
pop
ret
mov
cs
cmc
scas
mov
xor
push
in
mov
mov
adc
lods
xchg
repz
dec
das
cmp
inc
stos
mov
loope
test
mov
dec
and
xchg
jmp
mov
rcrl
push
orl
and
popa
jne
cmp
xor
les
cmpsl
stos
shlb
aam
test
out
xor
cmp
pushf
jno
inc
inc
fcoml
jg
adc
cmc
xor
leave
repz
cli
cmp
lcall
fisubs
jp
jecxz
js
xor
enter
or
and
dec
rol
addr16
inc
jecxz
test
fucomi
out
mov
xchg
loope
mov
cmp
push
pop
iret
mov
cmp
mov
mov
aas
xor
inc
pop
and
bound
cmp
loop
jecxz
popf
cmpsl
in
cmc
dec
ljmp
pusha
cmp
scas
fwait
push
mov
xchg
and
sub
cmp
scas
out
pop
sbb
sub
mov
cmp
aad
mov
and
in
mov
jmp
fwait
rorb
data16
ss
lea
adc
jb
push
les
mov
or
inc
jg
cwtl
mov
and
sbb
mov
xor
fsubr
sbb
gs
pop
rcrl
cli
mov
mov
cmp
mov
daa
nop
stos
movsl
adc
jns
out
daa
xchg
std
dec
mov
leave
lea
stos
out
push
xor
enter
push
mov
jp
jo
pusha
push
lret
mov
pop
jno
das
sub
sbb
jle
adc
jns
lods
cmc
lcall
test
mov
rorb
adc
cmpsl
add
xchg
cld
testb
push
in
in
rcrb
adc
mov
inc
push
push
inc
ret
ljmp
pop
mov
adc
insl
mov
rorl
mov
pop
add
in
sub
aad
lods
and
mov
jbe
push
hlt
sbb
mov
push
pop
add
push
or
push
aaa
cli
into
adc
icebp
iret
or
lock
jp
int3
cwtl
sti
aad
push
push
sbb
sbbl
stos
mov
sub
out
test
lea
lds
lods
sbb
repz
push
sbb
out
leave
popf
inc
and
mov
or
jmp
or
sub
xchg
sarb
lods
ffree
or
mov
ljmp
shl
dec
aad
xchg
sbb
sbb
fcom
inc
aas
add
xor
dec
sbb
cmp
inc
in
inc
sbb
mov
mov
stc
loope
add
and
cmpb
sbb
inc
pushf
pop
add
adc
push
sbb
mov
rorb
scas
testl
mov
ret
mov
adc
outsl
inc
xor
das
mov
insb
icebp
sbb
jecxz
hlt
xchg
adc
movsl
mov
push
stos
pop
xchg
fidivrs
js
stos
and
mov
call
lret
mov
xor
lods
pop
movsb
adc
sti
xor
outsl
cltd
scas
mov
inc
mov
xchg
mov
or
pop
jl
in
addr16
inc
shlb
jno
and
fildl
add
pop
and
hlt
xchg
mov
rolb
mov
sbb
inc
ja
or
ja
jp
sub
aam
loopne
loope
push
movsl
negl
dec
rol
fildll
aaa
rcr
pusha
push
mov
xchg
pop
scas
push
inc
sahf
sbbb
repnz
xchg
dec
into
aad
clc
adc
stos
fwait
ret
lds
orl
insl
xchg
cli
sub
xchg
cltd
out
rorl
cmc
addr16
push
pop
test
dec
out
inc
sbbl
or
mov
mov
adc
sub
adcl
xchg
negb
xchg
insl
hlt
shlb
bound
lret
sarl
xchg
push
pusha
xchg
stos
mov
aaa
bound
nop
fs
call
aas
out
test
push
repz
nop
jns
test
ret
pop
int3
lcall
xor
sub
add
jle
xlat
mov
mov
xor
in
fdivl
sub
mov
push
push
rorl
idivl
iret
mov
dec
mov
sbb
inc
lahf
cmc
jg
in
xlat
fwait
gs
jmp
jg
outsl
hlt
movsb
mov
jle
jne
add
shr
jo
test
cmp
lock
out
adcl
and
dec
or
and
jl
xor
aaa
or
push
mov
mov
cmc
test
sbb
mov
fwait
jnp
outsl
sbb
scas
push
or
rorb
mov
leave
lds
dec
pop
sbb
movsl
jne
test
rcr
sub
jp
xchg
or
cld
in
add
xor
and
ljmp
jecxz
sar
xor
xchg
fmuls
sub
xor
sub
adc
push
pop
nop
cmp
add
push
lods
in
sbb
sub
inc
add
sub
repz
push
jp
push
fcmovb
adc
jp
jnp
test
js
and
mov
xchg
out
push
mov
cmp
insb
inc
cmc
call
fsubrl
arpl
int
cli
cmp
push
xor
mov
addr16
icebp
mov
ret
or
add
push
fucom
sub
sub
push
mulb
outsb
cmp
scas
mov
hlt
xchg
sub
mov
sbb
jle
jl
ret
jb
add
mov
mov
mov
or
rcrl
shlb
and
inc
mov
ret
jbe
pop
sub
jae
inc
adc
ljmp
adc
cmpsb
sub
in
xor
scas
rorb
das
ds
imul
rolb
and
mov
nop
jns
gs
clc
sbb
sub
mov
pop
xchg
sbb
mov
daa
sarb
in
pop
ret
imul
dec
ljmp
push
jae
clc
jb
dec
or
pusha
mov
adc
js
pop
popa
jno
and
inc
sub
dec
sbb
add
add
or
xor
insl
mov
cmp
dec
inc
dec
js
sar
hlt
sbb
xlat
dec
das
mov
shlb
in
sbb
nop
mov
or
inc
in
fldenv
cmp
movsl
pop
leave
fiaddl
dec
mov
push
lock
in
xor
push
xchg
stos
mov
pop
icebp
adc
adc
ljmp
push
insl
and
bound
push
popa
xor
jg
aam
mov
add
out
popa
dec
push
insl
dec
sub
int
sti
enter
hlt
inc
adc
nop
adc
aaa
xchg
jmp
mov
push
cmp
inc
xchg
lods
gs
lahf
std
push
insl
push
push
rcr
push
sbb
scas
mov
cmc
jp
mov
xor
lret
xlat
add
sarl
dec
aad
dec
dec
push
mov
sarl
cli
push
mov
add
mov
or
out
lret
xchg
adc
hlt
push
ret
add
fldt
mov
daa
sbb
imul
or
jb
lret
enter
and
push
stos
aad
jl
and
push
loopne
mov
and
lret
push
mov
or
imul
xchg
popa
verw
mov
inc
mov
nop
in
push
das
jno
nop
icebp
clc
xchg
sbb
pop
stc
inc
test
cs
mul
mov
or
lods
lea
and
mov
push
cmp
popa
xchg
mov
les
test
mov
aam
sbbb
into
cmp
scas
out
sub
add
fnstenv
lret
cmp
push
jge
xchg
jg
cmp
mov
data16
add
test
test
jo
call
int3
inc
ljmp
mov
or
push
cs
pushf
ljmp
push
popa
cmpsl
out
out
es
lret
push
push
out
mov
jns
mov
fmul
cmc
xchg
jo
aas
sub
sarb
sub
push
inc
fwait
and
fisubl
cmp
mov
jge
mov
ret
mov
cmpsl
xchg
insl
iret
int3
rclb
shll
ret
jns
xor
mov
fdivr
test
dec
in
cmp
insb
add
and
arpl
inc
cmp
loop
mov
sbb
jle
push
roll
push
cmp
or
jge
inc
dec
lret
jp
push
shlb
lret
pop
jbe
pushf
mov
imul
nop
xchg
fldl
xchg
push
jns
xchg
daa
stos
xor
outsb
xor
shrb
lea
out
mov
mov
cmp
add
cmc
push
inc
mov
enter
popl
rcrb
notb
push
pop
pop
fcmovnb
dec
enter
dec
or
insl
lea
fnstsw
aad
mov
xchg
cs
imul
setbe
push
jno
repnz
xlat
and
faddl
adc
insl
lret
add
lds
nop
sbb
mov
and
fs
cmpl
jne
pop
jmp
cmp
sbb
add
xchg
nop
sbbl
outsl
mov
mov
in
push
std
xor
mov
icebp
insb
mov
sbb
push
sub
mov
inc
sub
sbb
pop
je
insb
add
and
sbb
sub
jle
push
cmp
cli
xchg
out
xchg
stos
test
lock
xor
clc
insb
pop
into
pusha
cmp
ja
in
jb
imul
sub
call
push
imul
adc
daa
mov
cmp
xchg
jl
dec
mov
inc
cwtl
mov
fnstenv
fmull
mov
fmul
outsb
mov
stc
and
inc
add
std
repnz
xchg
dec
cmp
add
pop
add
pop
stos
cmp
or
jle
add
scas
xor
sub
cmp
dec
test
jmp
sub
jl
inc
aam
jmp
out
rorl
dec
rcrb
inc
rolb
dec
mov
xor
decb
insb
insb
mov
xor
enter
xor
mov
fmull
mov
jb
outsb
aaa
push
mov
pusha
or
jmp
movsl
sahf
mov
mov
inc
and
mov
cmpsl
push
xchg
int3
mov
leave
sbb
sub
jo
stos
fisubrs
mov
dec
ds
mov
xchg
insb
lahf
test
daa
xor
pop
subl
and
jbe
insb
push
mov
fsubr
les
cltd
jb
mov
mov
lea
stos
mov
and
nop
push
popf
leave
xor
cmpsl
jnp
leave
sbb
notl
loop
xor
test
or
or
push
movsl
adc
ret
adc
out
fistpl
pop
call
ss
cltd
imul
xor
mov
xorb
inc
test
int3
pop
ljmp
mov
sbb
mov
cmp
jne
mov
out
cld
sbb
iret
addl
cmp
xchg
xchg
jbe
jb
outsb
rcrb
push
push
lahf
cmpsl
or
sbb
adc
fnop
adc
bound
dec
sbb
mov
jle
push
mov
int3
arpl
insb
push
mov
lock
fildl
shlb
js
mov
xchg
sbb
pop
mov
adc
addr16
sti
jp
and
imulb
repz
dec
xchg
clc
sbb
lds
les
cmp
sbb
sbb
popa
repz
mov
dec
inc
xchg
enter
pop
cltd
sub
ds
movl
inc
jno
sbb
out
in
ljmp
mov
fistps
push
mov
and
insb
xor
incl
out
out
in
pop
mov
cmp
dec
adc
sbb
adc
imul
into
mov
cmp
into
mov
sbb
hlt
and
stos
add
jno
lock
nop
inc
or
xchg
xchg
test
cmp
out
and
mov
adc
mov
mov
shlb
fcomi
push
jmp
xor
fwait
and
fcoml
mulb
fadds
int
pop
leave
mov
outsb
jnp
mov
lds
ffreep
fwait
sub
sub
mov
ret
out
cltd
mov
add
push
sti
addb
pop
mov
in
in
inc
lcall
xor
dec
xor
clc
insb
xor
sub
sbb
in
pop
hlt
or
dec
xor
imul
fisubrl
sbb
jp
aas
mov
shll
lods
push
je
sbb
dec
cmp
add
cs
jbe
inc
popf
pop
in
xor
inc
cs
mov
insl
push
fidivl
jl
das
sbb
cmp
mov
fdivp
cmpsb
dec
dec
rcrl
ss
adc
loopne
xor
fisubrs
xchg
push
cs
mov
push
add
jecxz
sub
sti
xchg
add
in
cld
mov
mov
jne
mov
pusha
sub
fidivl
xor
jo
dec
pand
push
sti
aaa
pop
daa
iret
cmp
pop
jne
subl
fldt
push
popa
lcall
jge
push
sub
push
jecxz
mov
int3
mov
push
lret
adc
cmp
pop
movsw
push
das
lahf
cmpsb
dec
test
les
sub
mov
inc
insl
sbb
ret
lcall
lret
push
movsb
addb
mov
cld
pop
push
sub
push
outsl
cli
faddl
dec
ljmp
or
mov
pop
aad
outsl
lods
ficompl
pop
dec
pop
xchg
movsl
sti
inc
out
dec
and
adc
fmul
pop
mov
push
mov
mov
clc
or
out
call
mov
or
mov
or
mov
mov
loopne
lock
repz
xchg
mov
jns
cmp
jp
or
sbb
lret
repz
adc
sti
or
orl
stc
out
shrl
fnstcw
adc
and
test
jg
dec
dec
dec
fnstsw
stc
dec
lahf
js
xchg
add
enter
pop
mov
sbb
cwtl
pop
rcl
add
mov
fdivr
pop
orb
stc
pop
add
mov
jnp
mov
mov
add
add
lahf
test
inc
stc
cmc
xor
addr16
jl
testl
jne
inc
push
add
test
scas
cmpsl
cmp
pusha
shlb
lds
dec
test
imul
inc
js
mov
xor
pop
cmpsl
push
pop
lfs
cmpsl
jno
sub
lret
stos
repz
add
push
dec
sub
sti
shrl
movsb
dec
xor
outsl
and
pop
das
cmc
xchg
or
pop
dec
xchg
rcl
sbb
cmc
pop
jbe
mov
sti
lock
dec
leave
xchg
mov
add
mov
pop
bound
or
nop
mov
es
inc
ret
cmp
ret
in
jecxz
sbb
scas
inc
sbb
repz
scas
arpl
mov
aad
cs
push
mov
int3
xchg
and
xor
sbb
cmp
enter
xor
jbe
cli
in
mov
aam
outsb
or
imul
popf
insl
mov
push
filds
pop
add
dec
shr
test
ss
orb
pop
sub
mov
jb
gs
mov
xchg
cmp
in
mov
xor
imul
setb
mov
sbb
lds
test
andb
inc
sbb
sarl
lcall
push
push
bound
mov
lock
push
stc
jo
adc
aad
clc
push
pop
std
aad
jo
mov
clc
es
loopne
ds
push
shlb
jmp
sub
inc
inc
xchg
test
sbb
mulb
shlb
les
call
push
insl
push
adc
testb
sahf
inc
inc
icebp
and
call
dec
xchg
iret
fistpll
xchg
sub
push
cwtl
pop
push
sub
mov
mov
inc
jnp
scas
jmp
mov
jno
or
je
cmp
bsr
movsl
mov
adc
popa
arpl
pop
and
ret
cli
pop
into
popf
dec
test
test
stos
fdiv
push
cmp
sbb
and
ret
or
fprem1
call
or
pushl
loope
dec
lods
mov
mov
gs
jno
cli
inc
loope,pn
adc
in
pusha
push
inc
mov
sahf
and
pop
mov
movsl
dec
and
leave
lods
rorb
lahf
adc
pop
push
aad
sub
je
sbb
fmul
dec
into
mov
negb
out
push
adc
push
iret
add
int3
mov
lods
mov
jo
arpl
rcr
mov
sub
enter
or
arpl
in
sbb
je
adc
insl
mov
cli
jecxz
je
out
adc
push
mov
fnsave
mov
addr16
xlat
mov
xchg
idivl
and
or
or
dec
movsl
xor
std
out
jmp
out
mov
xchg
loope
adc
fwait
repnz
scas
sub
pop
scas
lret
or
mov
pop
jo
cmp
push
mov
std
sub
gs
in
pop
push
scas
xor
mov
shlb
inc
arpl
mov
push
addr16
add
xor
mov
mov
mov
aas
cmc
cmove
imul
stc
mov
mov
jmp
jbe
or
jmp
aam
cmc
inc
into
add
mov
repz
nop
repz
and
jmp
jbe
loopne
xchg
cs
mov
addl
inc
iret
adc
inc
xchg
pop
xchg
pop
dec
push
rorb
sbb
mov
scas
rclb
orl
lret
add
dec
scas
gs
fstps
shrl
lret
rcrb
call
nop
inc
dec
add
pop
add
xor
outsb
fnstenv
lods
jmp
and
fisttpll
cmc
sbb
insl
imul
ret
les
ss
mov
pop
mov
xchg
aam
fisubl
cs
sbb
pop
fistl
movsb
fsubs
mov
pushl
push
int3
sbb
fsub
xchg
cld
rclb
fs
test
repz
and
add
cli
sbb
fwait
and
mov
arpl
or
adc
lods
mov
cmp
movntps
in
fwait
cmpsb
outsb
pushf
xchg
pop
sub
jne
pushl
aad
or
mov
fsub
xchg
lock
shlb
rcrb
adc
sbb
out
rorl
pop
jne
mov
lret
ss
loop
add
imul
jg
imul
push
stc
xor
inc
out
cwtl
sub
mov
cmp
std
loope
cmpsb
dec
pop
mov
push
and
adc
bound
add
mov
push
aas
mov
and
add
aad
enter
ljmp
in
repz
rclb
add
push
mov
xchg
cs
sbb
hlt
inc
mov
dec
pop
jmp
jge
bound
pop
pavgb
lahf
cmp
jle
imul
mov
jnp
push
sub
scas
push
or
mov
lahf
imul
and
lock
jmp
nop
jb
mov
fiadds
sbb
jmp
arpl
jecxz
stos
pop
movl
cmpsb
xchg
outsb
imul
jle
inc
mov
cld
sbb
sarl
lea
fcomi
fs
mov
jle
sbb
jno
push
ret
mov
sbb
mov
cs
inc
add
push
mov
sbb
in
push
xchg
stc
mov
adc
in
movsb
cmp
mov
mov
xor
je
mov
popf
cmp
aas
clc
add
cmp
inc
in
dec
je
enter
stos
mov
hlt
in
pop
jmp
or
mov
stc
xchg
sbb
shrb
mov
sbbl
xor
in
iret
add
cmp
or
insl
pushf
loope
cltd
push
xchg
dec
push
or
neg
and
cmpsb
popf
inc
push
add
das
into
inc
fsubs
xor
pusha
or
push
push
xchg
out
das
jg
loop
sub
hlt
mov
shrb
push
cmpb
push
mov
push
lahf
bound
rol
cmp
push
in
xchg
mov
pop
sub
lock
in
add
mov
testb
mov
sub
mov
fimull
mov
lret
add
mov
pcmpeqd
clc
out
or
in
adc
sbb
je
das
mov
hlt
addr16
popa
dec
fstpl
add
inc
loopne
filds
shll
cmp
push
and
data16
mov
pop
mov
loop
xor
fisubrl
pop
mov
sbb
and
xchg
inc
inc
mov
ss
adc
jns
adc
jns
push
mov
sbb
iret
pushf
dec
inc
pop
mov
mov
jmp
imull
jg
push
imul
inc
sbb
aam
loope
mov
cmp
dec
jp
in
push
test
mov
mov
cwtl
cmp
or
or
popl
aam
push
or
fcompl
paddb
cld
xor
dec
mov
sub
popf
add
push
dec
mov
pop
mov
int
cwtl
lods
pop
mov
sub
test
or
cld
inc
mov
fistps
dec
jmp
sarl
push
adc
pop
mov
out
dec
push
in
sbb
mov
cmp
outsb
loop
repnz
push
fwait
mov
clc
cmc
mov
inc
push
add
inc
push
push
call
lea
sub
shlb
mov
jmp
rcll
movsl
sarb
adc
push
mov
scas
xchg
cwtl
mov
in
aaa
sub
mov
mov
jo
bound
xchg
pop
mov
fnstsw
sub
push
push
cmp
cmpsb
push
push
lahf
sti
stos
fs
cmp
repnz
test
dec
pusha
dec
into
pop
or
outsb
in
daa
sbb
and
lds
jmp
pushf
sub
mov
pop
fs
das
mov
js
inc
loop
sbb
cmp
popa
xchg
mov
sub
nop
sub
push
lds
mov
mov
inc
movsb
bound
inc
adc
aam
stos
push
movsl
jg
cltd
mov
mov
icebp
adc
mov
xchg
jp
pop
nop
inc
in
sbb
in
xchg
sti
jo
adc
xchg
shlb
jbe
add
aaa
data16
inc
mov
xor
sub
lahf
sbb
pusha
std
mov
call
test
mov
add
imul
sbb
mov
xorl
je
fdivrp
push
dec
int
test
jno
or
sbb
in
inc
inc
shlb
aam
xor
pop
xlat
xchg
add
scas
jp
aas
fucomip
add
push
adc
jmp
mov
repz
push
sub
xor
mov
mov
lea
jp
repz
ljmp
mov
xor
sub
add
sub
and
xchg
cmp
stos
push
icebp
mov
sbb
sbb
cmp
sbb
dec
mov
int
sbb
jecxz
sub
daa
arpl
push
sub
loope
or
sbb
clc
mov
cld
loope
popa
ret
cmp
pushf
mov
mov
enter
dec
repz
sub
lret
mov
jne
out
sarl
hlt
ss
xchg
insl
test
inc
pop
jnp
lahf
mov
sbb
add
cmp
fucomi
aam
add
std
sub
mul
sub
shll
inc
or
sub
lds
das
xor
pop
cltd
movhps
push
and
cwtl
test
imul
roll
cmpsl
pop
inc
pusha
lret
mov
xor
insb
pop
movsl
aam
and
add
sub
data16
lods
and
mov
dec
rclb
sbb
lahf
mov
mov
popf
sbb
int3
mov
jb
jecxz
insl
add
call
mov
push
cltd
arpl
stos
adc
dec
dec
js
inc
fs
mov
jmp
lods
push
xor
inc
hlt
cmpsl
xchg
imul
movsl
mov
pop
sub
and
xlat
addr16
aam
cltd
fisubl
xor
inc
push
xorb
movsb
mov
lods
fwait
pop
xchg
incl
daa
cs
sub
je
jl
add
out
mov
bound
inc
icebp
gs
stos
cmp
inc
mov
test
test
push
cmp
xchg
fdivrl
jne
lods
adc
pushf
mov
push
push
mov
cli
mov
pop
lret
mov
lock
dec
and
cmp
inc
jmp
push
mov
in
xor
rclb
sahf
mov
add
inc
pushf
inc
xor
xor
leave
pop
push
divb
aas
jmp
flds
ss
shll
fwait
xchg
inc
lret
in
cmc
sub
fstps
nop
stos
outsl
in
sti
dec
mov
ja
push
mov
popf
pop
loopne
mov
imul
dec
scas
push
pop
fdiv
shll
jae
repz
inc
clc
sahf
aad
jnp
jno
int
mov
mov
in
push
jg
adcl
xlat
xchg
aad
loopne
rol
push
mov
sbb
push
out
pop
inc
adc
adc
scas
and
fwait
icebp
xchg
lahf
push
or
int3
pop
sbb
inc
mov
in
pushf
lret
test
adc
inc
out
push
mov
and
pop
lds
add
cmp
adc
dec
push
jl
xchg
push
or
aad
std
xchg
xor
xor
in
test
das
les
gs
mov
adc
xor
jecxz
fidivrl
mov
cld
push
pop
fcmovbe
int
pop
insl
mov
pop
add
mov
fwait
dec
xor
cs
bnd
inc
push
pop
fsub
pop
test
scas
outsb
scas
stos
loop
stos
cmpsl
lds
sbb
movsb
adc
jbe
int
das
push
xchg
lods
int3
in
popf
jg
mov
lcall
js
pop
popw
int
jle
push
cmc
mov
das
mov
or
pop
iret
test
xchg
xlat
arpl
ljmp
es
mov
pop
movsb
ljmp
xchg
rclb
daa
lret
ret
xor
mov
movsl
les
jo
ret
fwait
lahf
mov
cwtl
movsl
subb
mov
jecxz
jnp
sub
mov
xchg
rolb
and
scas
push
clc
scas
push
inc
mov
ret
shlb
mov
add
jecxz
sbb
jne
icebp
xchg
test
pop
in
je
test
imul
cmc
pop
int
jge
popf
loope
lret
fadds
cs
jmp
lods
fxch
mov
bound
mov
cli
fnstsw
mov
xchg
inc
mov
lods
sub
dec
lahf
dec
xor
mov
popf
int3
push
sbb
cmpsb
add
sub
stos
lahf
cli
fdivs
cltd
push
jmp
aas
movq
mov
loop
lret
sub
inc
sub
or
sub
lcall
insl
jne
sbb
jns
shlb
sub
dec
xchg
test
or
lret
cld
xor
ljmp
gs
aas
mov
or
mov
add
xchg
insb
cli
jg
aaa
pop
push
inc
insl
scas
ljmp
inc
pop
mov
pop
stc
mov
add
adcl
lods
push
sbb
sti
cmp
stos
dec
pop
mov
inc
pop
inc
mov
fstcw
stc
cmp
outsb
lods
ljmp
pop
subps
cmp
xor
push
jmp
and
gs
fwait
xor
in
mov
cmp
cmp
sahf
pop
sbb
xchg
stc
push
xchg
pop
fisttps
mov
adc
sbb
cmpb
inc
subb
adc
xchg
call
adc
test
fidivrs
push
ja
fstpl
int3
add
bound
pop
add
mov
jo
test
orl
insl
adc
out
and
mov
pop
sahf
sbbb
xor
movsb
push
insb
lcall
es
cmc
out
nop
jle
cwtl
divb
pop
scas
fidivs
lret
mov
insb
repz
aas
sbb
lods
inc
js
lret
cli
dec
cmc
ljmp
xchg
cmp
loopne
xchg
pop
xchg
pop
xorb
pop
push
sbb
push
in
mov
std
fsub
ds
mov
std
insb
fwait
push
or
jp
pop
roll
stos
mov
jne
sub
sarb
cmp
mov
jb
std
xor
ret
add
ret
shll
jae
orl
bound
es
nop
lock
cmp
gs
or
scas
dec
push
xchg
mul
ret
stos
dec
ret
cwtl
mov
orb
out
and
aas
testl
jne
xor
inc
and
mov
aas
mov
add
pushf
call
sub
pop
fs
xlat
and
decb
repz
adc
in
rolb
mov
pop
mov
pop
roll
loope
cwtl
adc
notb
inc
xchg
or
pop
insb
bound
push
dec
dec
arpl
decl
fidivs
sbb
push
rolb
rclb
sbb
movsl
or
or
in
scas
lods
xor
sar
jo
fstps
insl
inc
addl
pushf
mov
hlt
xchg
cltd
fwait
sbb
lcall
push
test
jne
push
stc
inc
xor
loopne
mov
mov
and
inc
pop
mov
je
loop
mov
sub
mov
xchg
push
jecxz
mov
cmp
adc
add
xchg
fwait
push
movsl
imul
jge
cmpsl
test
cltd
bnd
xor
cwtl
leave
adc
pop
stos
test
add
mov
loop
test
aaa
pop
jno
pop
cmp
sub
jno
and
test
mov
sub
jns
lret
or
mov
outsb
sub
jno
jmp
dec
cmpb
mov
gs
sub
imul
icebp
fmuls
and
iret
xor
movsb
gs
xor
push
adcl
lods
ret
pop
lahf
lea
and
pop
rorb
sahf
inc
mov
es
jle
cwtl
or
les
iret
sbb
xor
pop
sub
mov
icebp
jp
cli
jne
mov
mov
pop
add
or
xchg
dec
stos
jecxz
sbb
ffree
mov
or
fsubrl
pop
xor
push
or
mov
jmp
test
rcl
test
lock
daa
imul
fimuls
ret
inc
add
cwtl
insb
jle
adc
ror
ret
gs
in
push
dec
and
xchg
inc
cltd
pop
push
and
push
int
push
xchg
into
int
repz
decl
xchg
xchg
mov
pop
mov
xlat
iret
ret
and
lret
jecxz
mov
cli
pushl
sub
das
inc
or
test
push
repz
cld
movsl
xchg
insb
mov
hlt
out
jne
mov
cmp
jno
ret
aaa
dec
add
mov
add
fbld
repnz
pop
or
and
jns
xor
ss
sub
loop
add
test
jmp
dec
push
jno
sbb
xchg
pop
mov
js
daa
popa
jae
mov
mov
or
sbb
out
xor
lahf
lods
xchg
mov
roll
mov
pop
and
mov
dec
int3
loope
xchg
jns
int3
dec
push
sbb
in
or
enter
push
pop
jle
dec
scas
fldcw
sbb
int3
notl
sarl
jnp
adc
inc
lods
dec
daa
xchg
push
fcomps
sub
jae
loope
mov
push
mov
gs
sahf
dec
xchg
mov
in
sti
imul
mov
das
dec
out
pop
or
or
roll
or
inc
adc
ret
and
pusha
add
out
inc
xor
or
cmc
or
mov
mov
scas
or
pushf
mov
adc
sarb
lret
xchg
in
sar
lods
lods
dec
dec
or
lods
popa
enter
adc
ljmp
jno
icebp
cmp
sbb
stos
out
roll
xchg
add
jl
jmp
mov
scas
es
movsl
mov
call
mov
mov
in
lods
leave
sub
jb
negl
sub
cmp
jge
call
sub
je
lea
sbb
popf
test
xchg
sub
mov
mov
mov
xor
shrl
aam
js
xor
pop
gs
pushf
jecxz
mov
add
inc
add
test
push
nop
push
or
call
fildll
or
stos
outsl
int
negl
daa
pop
lea
and
xchg
add
test
inc
inc
rcll
cld
sub
or
insl
in
ljmp
js
and
mov
imul
fnstenv
push
sbb
pop
cmc
or
add
mov
jmp
xor
jno
or
es
pop
ljmp
sub
filds
jge
sbb
fnsave
jne
cmp
xchg
jecxz
mov
jp
fistpl
nop
jns
mov
ds
adc
clc
cwtl
addl
jl
push
aad
movsl
inc
icebp
lcall
xlat
sub
outsb
mov
pop
cmp
aas
xorl
imul
add
lret
movsl
fisubl
mov
mov
int
popl
xchg
mov
cmp
and
xchg
pop
xchg
mov
add
js
fwait
dec
push
xor
cmp
cmp
je
sub
enter
fisubrs
add
add
inc
into
fldt
add
repnz
sub
ja
pop
lds
das
push
jb
adc
shll
aad
cmpsb
sub
roll
int3
clc
lea
mov
pop
cmp
ja
icebp
cmp
push
sti
sahf
and
negb
adc
aad
movsb
test
jg
or
idivl
mov
fldt
int3
dec
inc
adc
sub
cli
pop
pop
cmp
cmpsl
out
sbb
and
xor
call
bound
cmp
enter
es
adc
adc
sarb
xchg
cmpsl
xor
jno
insb
push
adc
mov
jne
outsl
gs
push
or
push
lods
pcmpeqw
ljmp
fcmovnb
enter
in
ja
nop
push
jp
daa
mov
movsl
pop
xchg
pop
in
inc
out
in
xchg
ja
movsb
xchg
dec
ss
mov
dec
sbb
lea
jp
fnstsw
or
fimull
jo
notb
mov
enter
nop
repnz
popf
lret
sbb
leave
xor
push
dec
pop
in
cwtl
or
out
mov
sahf
das
loope
sub
xorb
sbb
arpl
xchg
dec
lods
pop
cmp
sbb
xor
jmp
mov
ret
rcll
inc
clc
js
pushf
cmpsl
nop
div
inc
in
lcall
cmp
and
repz
dec
xor
and
pop
out
add
add
dec
ljmp
shrb
push
jecxz
xchg
add
rol
aad
cmp
push
sub
cmp
aas
push
pop
jl
cmp
sbb
pushf
cmp
loope
dec
add
rcrl
out
lea
popf
ud0
paddw
xchg
fadds
pop
push
pop
lds
rcrl
sbb
loope
inc
loopne
cmp
pusha
and
push
push
inc
xor
outsb
rclb
sub
inc
clc
push
cmp
jnp
add
hlt
aad
sub
cltd
lahf
outsl
xchg
arpl
fimuls
mov
mov
frstor
xchg
stc
fldenv
loop
sahf
repz
xchg
clc
xchg
rcrl
das
xorl
push
xchg
pop
cmpsb
dec
adc
and
push
add
nop
jb
add
cltd
ljmp
gs
adc
sbb
fldcw
stos
es
mov
data16
in
push
push
add
dec
add
mov
sub
sub
insl
mov
test
sub
xchg
cltd
jmp
mov
js
fmuls
mov
outsb
adc
pushf
test
fsubrl
jae
hlt
mov
push
fs
js
negl
and
or
out
push
rorb
or
push
or
xor
mov
loope
push
dec
fildl
aas
xor
xorb
lcall
push
mov
popf
lock
mov
lret
daa
pop
inc
shll
aad
pop
add
loope
pop
inc
xchg
dec
repnz
cmpsb
insl
sub
and
mov
or
js
lcall
mov
es
out
or
and
scas
fnsave
jmp
dec
bound
mov
pop
jno
push
push
lds
out
xor
cmp
cmp
and
adc
and
xor
inc
cmp
xchg
in
jnp
xor
xor
jo
adc
sub
leave
mov
sbb
outsb
pop
orb
xor
adc
dec
cs
shll
addb
cmc
fisubrl
pop
int3
pop
and
lcall
dec
pop
jge
imul
mov
and
push
inc
dec
lea
jecxz
frstor
das
shrl
addr16
mov
or
insl
test
add
and
rcrl
lcall
mov
mov
movsb
jno
dec
pop
xchg
in
mov
push
loop
ja
jo
xchg
loopne
mov
inc
push
push
fsubl
sub
push
adc
mov
ja
or
dec
lods
mov
xorl
insl
stc
fidivs
es
pop
or
pop
icebp
out
mov
xchg
cmp
or
loop
movsl
add
jne
sbb
outsb
jmp
add
subb
scas
dec
mov
or
mov
mov
icebp
and
mov
call
inc
orb
stc
aam
leave
mov
jmp
jno
daa
lods
pop
ds
jmp
clc
dec
stc
imul
lret
sbb
shrb
add
mov
in
lods
add
or
repz
dec
fcompl
cmp
lock
add
or
xor
pop
cld
cs
sub
pop
adc
cmpsb
in
lretw
int3
cmp
and
inc
adc
insl
cmc
jle
rcl
push
out
ret
hlt
mov
leave
imulb
mov
add
aad
pusha
add
and
ljmp
mov
or
dec
mov
into
mov
xor
xchg
shll
pop
gs
lcall
test
or
cmp
xchg
add
jp
dec
cwtl
mov
lret
inc
fcmovnb
or
ljmp
lahf
mov
and
dec
xchg
sahf
mov
dec
and
mov
aad
xlat
mov
test
xor
imul
mov
fistl
lret
outsb
push
push
jo
rcl
int
cmc
mov
mov
sub
mov
and
cltd
movq
roll
sbb
out
mov
mov
insl
insb
aas
jnp
sti
js
repnz
sub
into
mov
cmpsl
in
popa
cwtl
loopne
mov
xor
pushf
data16
sbb
adc
or
jmp
stc
pop
adc
sub
ds
mov
lods
adcb
mov
cmc
jp
adc
push
popf
xchg
gs
pop
and
sub
cmp
dec
in
cmp
roll
jne
je
stos
subb
xor
xor
shll
jne
rcll
cs
es
addl
or
xchg
and
jo
and
mov
bound
loopne
mov
shrb
shr
sbb
aas
cli
mov
fs
iret
cmc
and
or
add
movsl
leave
insb
add
cmp
xlat
sbb
pop
xor
jae
xorb
mov
in
repnz
pminub
adc
pop
aad
push
push
add
das
xchg
fcompl
mov
aaa
dec
pop
and
mov
rcll
mov
mov
xor
xor
and
cmp
into
imulb
leave
inc
xor
cmp
daa
mov
out
cmp
xchg
shr
push
add
mov
sbb
lahf
inc
mov
out
cltd
fs
mov
mov
sub
addr16
jle
movsb
mov
add
fwait
push
test
bound
pop
iret
jns
inc
imul
cmc
xchg
lds
test
mov
inc
cmp
mov
and
push
ret
mov
ret
outsb
aam
dec
pop
pop
test
xchg
jno
dec
out
pop
call
mov
cmpsl
dec
lcall
ljmp
and
fidivrl
loop
mov
dec
jae
mov
cmc
loop
insl
xchg
cmpl
mov
xchg
shrb
mov
and
xchg
xchg
mov
lock
mov
movsl
out
cli
xor
xor
pop
ja
jmp
ljmp
jmp
pop
xor
scas
sub
push
das
loopne
mov
sti
pop
enter
adc
cli
scas
mov
test
cmp
insb
sub
lods
and
and
sbb
scas
push
scas
mov
popa
cmp
mov
aas
ds
sarb
xchg
shlb
scas
imul
addb
stos
es
test
out
jo
adc
fisubs
lcall
jmp
lret
jge
push
pop
ljmp
sbb
jle
ret
xchg
lahf
dec
xorb
cmpsb
dec
or
out
mov
pop
fwait
shr
cmp
negl
dec
fs
popf
gs
xor
push
xchg
imul
cmp
pop
in
arpl
shll
mov
cmp
test
xor
xor
mov
lods
loopne
sahf
sub
aad
lds
mov
inc
fdivs
jle
inc
adc
cmp
data16
add
sbb
lea
cmpsb
push
popa
jg
mov
cmp
adc
xchg
stc
stos
inc
jecxz
inc
adc
pop
inc
ret
pop
or
inc
or
adcb
pop
mov
ret
outsl
test
pushf
and
inc
sbb
add
mov
jmp
stos
cli
ja
fisubrs
add
ja
jbe
cmp
orb
arpl
pushf
aad
test
cmp
add
add
or
jmp
roll
and
or
in
add
in
xor
shl
mov
fptan
negb
dec
jo
and
jecxz
mov
movsl
xchg
sub
cmp
mov
mov
nop
ja
lock
js
xchg
mov
jb
cmp
push
dec
inc
mov
pop
cwtl
scas
subb
pop
popf
int3
mov
or
insb
ds
dec
xor
sub
mov
lret
dec
shrl
mov
loopne
hlt
pop
fdivrl
cltd
or
call
jmp
movsb
nop
loopne
cmp
shl
add
or
inc
cmp
int
jae
and
mov
sub
in
pop
push
mov
roll
pop
lods
or
pop
dec
sbb
xor
and
pop
xor
pop
and
stc
sbb
aad
test
inc
rcrl
test
stos
cmp
repnz
dec
jl
add
and
in
movb
sub
mov
fcom
insb
push
cmovp
lods
nop
cmpsl
xchg
in
adc
dec
ja
sub
jo
arpl
test
pop
cmp
xor
enter
inc
jle
cmp
icebp
int
loopne
pushf
and
mov
jp
or
test
pop
arpl
push
lret
mov
xor
mov
xor
je
out
idivb
sarb
push
cmp
mov
cmpsb
push
cmp
call
inc
js
mov
scas
xlat
iret
xchg
mov
inc
cmpsl
jb
stos
jle
and
mov
push
aaa
pop
sahf
inc
push
xchg
or
pop
aam
sub
jno
cmp
inc
push
push
fiadds
test
mov
loope
stc
jecxz
aad
push
xchg
mov
sahf
faddl
and
cmp
lock
lods
movl
sub
mov
rcrb
sbb
sbbb
aaa
bound
lea
cmp
xchg
jp
stos
cmp
mov
ret
inc
and
movsl
lahf
ds
jae
repnz
push
push
repz
push
push
ljmp
push
jmp
mov
jge
xsavec
push
in
inc
imul
mov
cli
and
adcl
je
push
adc
fldcw
fldt
std
and
lods
fisubrl
cmp
outsb
xlat
fisubrl
mov
shll
hlt
and
outsb
push
shrb
stos
or
inc
xor
add
dec
shll
fstps
xchg
fsubs
gs
push
jne
pop
int3
loopne
scas
stos
fildll
inc
in
adc
andl
sbb
out
lds
jns
cld
xchg
dec
sub
add
mov
mov
push
movsb
sub
xor
sbb
jo
cmp
ret
add
mov
iret
daa
dec
inc
stos
negl
push
push
or
add
popa
popf
mov
es
push
iret
push
xlat
js
push
stc
fdivl
repz
andl
push
jecxz
lods
xor
aam
in
loope
rorb
dec
shl
imul
stos
das
out
xor
pusha
in
mov
sub
mov
orb
push
xchg
mov
xchg
stc
bound
sub
or
xchg
jo
xchg
push
imul
push
pushf
es
mov
movsl
imul
push
mov
inc
aaa
mov
mov
xchg
push
js
in
pop
jle
xchg
lock
aad
xor
aas
xorb
mov
xchg
scas
dec
xor
pushf
pop
insl
jp
mov
imull
jno
imul
xchg
rolb
push
xchg
aam
popl
in
hlt
dec
cmp
add
pop
push
pop
xor
or
cmp
push
xchg
sub
iret
sub
xor
and
mov
and
hlt
adc
mov
lahf
scas
pop
in
cmc
mov
iret
xchg
or
and
adc
inc
mov
fwait
mov
imul
jmp
lods
jle
rsm
jns
mov
xchg
sub
imul
add
jle
pop
out
mov
xchg
mov
lds
mov
dec
jno
pop
test
sbb
mov
dec
loopne
mov
adc
mov
xor
bound
cmp
mov
gs
in
mov
or
faddl
mov
sahf
xchg
addr16
cltd
jle,pt
mov
and
add
mov
imul
pop
jl
xchg
pop
adc
mov
lret
outsl
js
and
or
fisubrs
or
fsubp
lds
inc
ja
bswap
xorb
jae
jns
dec
xchg
xchg
negb
inc
pop
int
pop
mov
xchg
mov
sbbl
cmp
hlt
leave
fnstenv
divl
movsb
cmp
shlb
push
push
jo
mov
push
js
sub
fdivrs
sub
sub
test
jge
imul
add
movsb
mov
clc
lods
pushf
adc
adc
lock
lret
add
test
lods
inc
xor
stc
in
xchg
cmp
jne
loopne
jns
sub
jecxz
ss
inc
ss
shrl
into
push
pusha
xchg
in
jle
fs
js
dec
dec
cwtl
adc
clc
setno
and
jmp
fwait
cmp
into
dec
movsl
jge
ljmp
fsubl
loop
and
sub
xlat
ja
clc
sub
push
or
lock
dec
and
push
lret
ret
les
mov
xor
sub
inc
jecxz
das
xor
pop
shrb
sahf
add
mov
ficoms
in
mov
das
dec
cmpsb
test
pop
jge
mov
push
push
and
movsl
jne
inc
outsb
inc
and
rcl
pop
andl
jno
pop
push
or
jg
lret
lods
pop
xchg
loope
cmpl
inc
and
rorl
sub
icebp
cld
dec
lds
pusha
fnstcw
sub
and
orb
in
loop
jae
mov
or
xor
lret
mov
xlat
js
pop
cmp
fiaddl
int
out
cli
rorb
and
and
outsb
xchg
inc
ror
mov
dec
movsl
call
outsb
add
xlat
pop
xchg
and
jle
popf
inc
jb
push
pop
in
outsb
mov
cmc
cmp
stos
and
andb
push
jo
sub
dec
cmp
push
mov
inc
in
xlat
sbbl
xorb
lds
dec
int3
iret
test
xchg
jo
mov
sbb
and
cmp
icebp
setp
insl
add
adc
nop
iret
cmp
sbb
mov
inc
pop
inc
jns
insb
call
hlt
in
fisubl
stos
xchg
roll
rorb
sbb
xor
mov
xor
mov
sub
mov
testl
adc
cwtl
jg
rcll
dec
stc
mov
sub
pop
mov
dec
pop
nop
adc
insl
jnp
mov
aaa
cmp
xor
insb
mov
dec
pusha
push
ljmp
or
adc
xchg
mov
fldt
dec
sbb
jp
mov
jo
sbb
pop
xor
repz
cmc
jle
push
push
pop
gs
sbb
mov
add
psubusb
mov
call
mov
jno
and
jmp
ljmp
adc
inc
out
pop
push
inc
int
mov
sahf
pop
push
push
jb
xor
test
leave
jae
lea
and
sbb
sbb
xchg
out
pushf
jl
pop
aas
or
mov
pop
mov
loope
movl
sbb
lret
xor
out
or
sahf
adc
xchg
jns
mov
or
or
xchg
mov
inc
mov
mov
mov
negb
into
mov
xchg
lcall
int
sub
testb
and
cltd
flds
add
sub
int3
mov
scas
inc
cmpsb
and
filds
leave
fmuls
jle
inc
jae
cmp
xchg
jne
sbb
mov
insl
cmpsb
and
pushf
fsubrs
ret
stc
xor
add
ja
mov
subl
inc
shr
cmp
aas
mov
loopne
repnz
loopne
jge
push
addb
outsl
and
xchg
or
fwait
sub
stos
ret
jmp
inc
mov
push
pushf
dec
jnp
dec
mov
mov
pop
cmpl
or
push
and
sahf
test
sub
pusha
sbbl
cmpl
icebp
inc
orl
cmpl
mov
lcall
cli
adc
jnp
repnz
bswap
cmp
bound
add
stos
mov
aad
or
fwait
pop
sub
pushf
lods
or
arpl
pop
in
jae
sar
pop
add
adc
push
inc
xchg
xchg
sub
sub
jg
and
pop
mov
mov
pop
xchg
sbb
loop
add
movsl
pop
pop
inc
in
js
jge
sub
mov
mov
push
sbb
sbb
btr
dec
das
rcrl
push
cwtl
mulb
hlt
rolb
jnp
aam
xor
into
ja
xlat
pusha
lds
and
dec
pop
fildl
push
sahf
fcmovnb
and
mov
or
push
repnz
dec
xor
les
in
lock
push
mov
out
gs
or
andb
pop
pop
xor
xchg
dec
jp
hlt
push
jnp
shll
jns
pop
or
lret
xchg
stos
add
push
xchg
out
out
and
nop
lock
adcb
push
movsb
js
test
cld
popf
or
popf
fwait
xor
push
ljmp
inc
mov
and
or
fiadds
mov
or
sbb
mov
lock
fwait
outsl
push
popf
pop
decb
mov
sub
int3
or
mov
sahf
inc
sub
in
ret
xchg
data16
mov
aam
and
add
jmp
xchg
fidivrs
test
into
lea
xchg
rcrl
je
cmpsb
mov
cs
aaa
scas
shll
mov
dec
pop
rcll
cmp
jle
std
mov
dec
inc
mov
bound
mov
cld
add
jp
jae
adc
cmpsb
in
mov
push
data16
shrl
jecxz
add
in
or
lea
test
fxch
movb
push
xchg
or
push
mov
orb
mov
inc
dec
hlt
dec
lcall
daa
popf
jbe
dec
add
cmp
inc
xor
mov
pop
cmp
xchg
cwtl
ret
lock
dec
nop
movsl
cmp
bound
lahf
popf
popf
mov
xchg
imul
cmp
pop
push
ror
inc
mov
sbb
or
ret
dec
jnp
out
insb
pop
pop
cmpl
xor
mov
loop
adc
jmp
or
div
cmpsb
mov
add
adc
mov
aad
inc
jns
fwait
mov
outsb
in
inc
xchg
mov
push
subl
pop
inc
jle
inc
das
dec
xchg
out
and
pop
and
int
pusha
lea
mov
cmp
and
call
inc
mov
sti
out
xchg
pop
sub
xchg
push
imul
cmpsl
xor
pop
push
lret
outsb
imul
dec
ficompl
push
cs
sti
out
add
and
lcall
adc
lds
adc
imul
subb
rorl
xchg
andl
push
int3
push
mov
fwait
in
sbbb
push
sahf
and
fidivl
fisttps
fstpt
cwtl
test
sbb
xchg
inc
clc
sub
jmp
and
lds
cmp
dec
inc
inc
and
stc
and
aam
flds
add
and
movsl
push
loope
mov
or
repnz
mov
iret
cmp
repnz
adcl
fnsave
outsl
dec
add
iret
mov
adc
cmp
xor
sbb
inc
shrl
xchg
rcrl
pop
sub
ds
jno
incb
jno
loope
xchg
aad
inc
or
ljmp
fsub
push
aas
aam
adc
insl
and
inc
dec
mov
and
cmp
cmpl
jecxz
lds
fsubs
scas
stc
in
repnz
test
movsb
jg
repnz
cli
mov
cmp
mov
or
hlt
das
mov
mov
push
insl
pushf
ljmp
inc
dec
or
inc
dec
jns
add
andb
hlt
push
mov
mov
shrb
repz
mov
mov
mov
mov
mov
adc
inc
lea
frstor
mov
add
aas
in
popf
sub
daa
addl
sbb
add
movsl
cmp
mov
pop
mov
in
add
cmovg
arpl
push
xchg
add
ljmp
nop
add
sti
add
es
or
loop
clc
cwtl
dec
sarl
rorb
mulb
out
adc
jne
xchg
xchg
in
pushf
or
add
mov
cwtl
push
push
stos
sub
add
xchg
jle
nop
jg
psubusw
sbb
nopl
addr16
in
lds
loop
cmp
lcall
cmp
push
or
aaa
fdivrl
pop
pop
clc
or
stc
pop
mov
inc
bound
aam
ja
or
out
xlat
shl
dec
out
add
and
mov
push
jmp
pop
jecxz
negl
cmp
lret
out
mov
out
jge
xchg
pop
sbb
lds
je
lret
rcll
mov
mov
jge
mov
fstl
cld
testb
or
cmp
stos
out
cmp
imul
shll
mov
fs
loop
dec
adc
fnstcw
lcall
ror
jns
mov
ljmp
add
xchg
rolb
test
lret
and
mulb
xor
stos
aaa
cmc
arpl
and
cmp
mov
int
popf
outsb
sub
xchg
or
std
ss
mov
popf
add
cmp
into
jmp
icebp
jns
push
pop
pop
dec
out
ret
cmp
sub
out
push
fs
insl
mov
loop
adc
std
popf
andl
mov
jbe
test
push
in
scas
pop
mov
ds
jno
mov
aad
add
fstps
shll
outsb
pop
cld
mov
pop
out
ljmp
cmp
dec
popa
les
pusha
out
cmpsb
mov
adc
lods
push
lds
mov
push
loopne
dec
rolb
xor
mov
fs
into
repnz
mov
inc
into
jg
js
rcll
into
mov
sub
push
cmp
xchg
dec
fnstsw
adc
outsb
lahf
loop
mov
adc
jns
or
rolb
mov
aas
mov
ja
in
popa
stos
pop
sti
negl
neg
mov
in
or
loop
sbb
mov
icebp
cmp
repnz
jge
lahf
outsb
pusha
mov
sub
hlt
dec
popa
and
push
pop
fidivrs
sbb
and
aam
xchg
mov
xchg
lahf
push
stos
in
xchg
sbbb
lret
push
push
cmpsb
and
cmp
cmpsb
and
es
ljmp
xchg
pop
push
flds
xor
imul
xor
add
insl
stos
scas
in
push
jno
ror
bound
hlt
xchg
or
xlat
dec
js
and
mov
mov
push
ljmp
jp
dec
mov
dec
mov
or
leave
jne
lods
cmc
out
xchg
mov
mov
dec
pop
aaa
ret
lods
pop
sub
stos
jae
and
mov
es
sbb
jmp
les
push
push
add
jp
jmp
add
jb
jle
roll
and
push
daa
mov
mov
cltd
aaa
je
mov
add
dec
mov
inc
scas
cmp
mov
es
pop
rcrl
mov
shl
mov
clc
out
hlt
es
dec
fs
or
in
jmp
hlt
subb
xor
add
insb
push
and
out
stos
cmp
das
testb
rcll
pop
jmp
jp
mov
xlat
pushf
out
and
pop
sub
dec
mov
outsb
aaa
mov
pop
shrb
or
push
test
mov
push
add
out
mov
jne
pop
and
dec
in
xchg
mov
popa
xchg
xor
jo
mov
jl
jno
xor
add
push
fildl
dec
out
iret
adc
mov
push
rorl
out
insl
sbb
cs
xor
fiadds
lret
lcall
jae
lea
or
test
nop
or
sub
fwait
hlt
sub
repnz
and
add
sbb
push
push
and
or
push
jnp
mov
or
addr16
ret
dec
xor
xchg
push
mov
test
jmp
pop
mov
bound
mov
test
mov
aam
push
lahf
dec
adc
int
mov
xchg
leave
dec
je
add
lret
jb
dec
cmc
sub
sti
inc
je
loop
inc
and
mov
adc
movb
xlat
fldenv
fwait
or
mov
inc
bound
pop
ds
pop
in
sbb
jge
jnp
test
in
xor
or
xchg
int3
mov
jg
les
sub
push
sbb
or
fcompl
cmpsl
in
jmp
daa
lock
xlat
xchg
xchg
outsl
cmp
insb
js
fiadds
fs
out
adc
inc
add
adc
std
test
gs
outsl
cmpsl
adc
sti
xor
popf
xlat
mov
adc
lods
add
adc
mov
aas
in
adc
push
dec
dec
add
subl
sbb
mov
xchg
jns
adc
imul
xor
popf
jo
lret
xchg
mov
jnp
inc
imul
sub
lcall
repnz
cmp
jno
movsl
popa
test
rclb
in
out
adc
dec
push
jl
lret
jecxz
loope
popa
rclb
or
dec
mov
push
pop
mov
loopne
dec
lock
out
cmc
and
inc
mov
add
negl
dec
shll
pop
push
push
push
sub
iret
insb
pop
or
inc
ftst
int3
aam
gs
movb
addr16
mov
mov
jl
sahf
or
dec
mov
sahf
pop
xchg
pusha
jecxz
mov
jle
and
pusha
gs
add
sbb
mov
mov
ss
imul
pop
icebp
jge
test
jp
test
adc
out
add
inc
loop
jl
pop
daa
in
ja
xchg
das
add
movsl
ret
into
fstpl
pop
pusha
testl
mov
in
leave
arpl
lcall
pop
in
and
adc
pop
xor
mov
sub
mov
xorl
lcall
stc
mov
scas
mov
call
repnz
pop
pop
dec
adc
sbb
cld
out
lock
int
cmpsl
lods
sub
and
jne
mov
insl
push
pop
loope
sub
sub
movsb
sub
fbstp
les
and
dec
push
in
roll
cld
mov
cmp
enter
pusha
cmpsb
loope
pushf
jnp
push
push
xor
scas
xor
jbe
rcrl
add
es
cmp
sub
xor
jmp
fwait
cmp
inc
out
and
mov
inc
dec
xor
xchg
stos
fists
jecxz
dec
sub
push
aad
pop
rclb
ja
js
or
and
leave
insl
out
dec
push
jl
scas
or
cmpsb
jge
or
xchg
fiaddl
shrb
xor
stc
mov
nop
xchg
or
xor
cld
stc
xchg
xchg
push
jne
dec
mov
sub
pop
inc
loope
stc
cmpsb
insb
xchg
pop
inc
jae
and
mov
inc
jo
lret
push
lods
lret
sbb
adc
ljmp
mov
aad
cmp
out
push
shrb
or
out
fbld
pop
test
add
sti
loopne
jecxz
rorb
data16
ljmp
or
dec
dec
dec
repnz
loope
or
push
xor
outsb
pop
cld
inc
cmc
les
fisttps
popa
and
adc
imul
fadds
loope
push
ret
and
xor
mov
jo
sbb
inc
mov
sbbb
stos
cli
mov
xor
jmp
xchg
pop
orb
push
rcrl
jne
add
mov
xchg
and
je
xor
inc
imul
adc
mov
jns
sub
bound
fdivl
call
in
jl
mov
jl
mov
jae
xchg
in
test
mov
shl
arpl
lea
out
lods
push
dec
rorb
and
mov
popa
mov
xor
stos
lea
sub
add
int3
sbb
or
loopne
insb
repnz
aam
sbb
arpl
ljmp
mov
ljmp
sbb
mov
imul
cltd
cmc
mov
push
movsl
inc
or
push
inc
xchg
pop
cmp
aad
and
mov
cmp
loopne
pushf
pop
xchg
mov
adcl
add
push
or
in
add
lds
test
jbe
add
cmpsl
push
mov
push
rorl
lods
sbb
data16
call
xlat
pop
cmpsb
pusha
jne
push
xorl
insl
and
call
sbb
ret
add
shr
lcall
decl
and
dec
aas
dec
movsl
push
scas
inc
es
xlat
xor
sbb
das
jnp
call
sbbl
xchg
fsubl
pop
fs
rcll
or
jnp
pop
in
je
xchg
fcomps
roll
and
lock
xchg
pop
pop
push
jl
dec
outsl
hlt
das
inc
push
js
push
pop
jmp
fwait
jmp
jl
dec
jo
aad
mov
dec
pop
pop
mov
pop
cmp
scas
test
xchg
inc
mov
xchg
les
cwtl
stos
jo
fs
ljmp
cs
imul
cmp
mov
cmp
into
pop
xor
push
clc
outsl
jnp
movsl
mov
jae
mov
fisttpl
fistpl
mov
dec
adc
scas
push
xchg
jge
in
rcrb
pop
sti
mov
inc
out
jns
lock
xor
xor
jnp
pop
mov
cmpsl
ret
test
lcall
pop
ja
mov
fidivs
test
scas
sub
shlb
pop
call
sbb
adc
jmp
ss
mov
push
mov
cmpsl
lret
int3
inc
je
pushf
cld
jbe
jg
xchg
jge
insb
cmp
test
jecxz
addr16
push
loope
push
out
and
push
test
or
addr16
xchg
push
aad
lods
testb
roll
cmpsl
push
or
mov
xchg
roll
ljmp
je
in
add
inc
jae
daa
fmull
mov
stos
fwait
lcall
rorb
mov
dec
repz
mov
das
stos
test
mov
and
sbb
and
dec
into
dec
out
daa
dec
and
fmulp
sbb
inc
mov
mov
aaa
pop
shlb
ljmp
pop
sub
aaa
out
inc
pop
inc
add
icebp
js
int3
fimuls
jecxz
in
sbb
loopne
aam
adc
ljmp
ffreep
dec
pop
je
jmp
and
and
sbb
and
cmp
add
xchg
push
fldcw
insl
or
push
aas
adc
push
pop
test
mov
rcrb
pop
dec
add
lcall
arpl
pop
gs
out
xor
fs
inc
mov
shlb
ss
aas
sbb
inc
jae
cmovs
lret
xor
sbb
movsb
add
popf
dec
fstl
mov
push
jecxz
imul
adc
dec
mov
jmp
add
insb
cmpsb
in
lcall
xchg
mov
add
jge
xor
out
xchg
xchg
test
hlt
pushf
mov
mov
pop
mov
cmp
xor
jb
fnstsw
fmuls
movsl
adc
mov
jbe
imul
cs
jge
jmp
lea
xchg
add
mov
mov
std
movsb
xchg
xor
mov
call
jno
push
sub
loope
imul
test
call
rolb
adc
mov
lods
es
xor
das
ss
adc
lods
push
add
fmull
andb
dec
mov
inc
cmc
ret
jge
cld
nop
shlb
shrb
push
cs
mov
xchg
push
pop
adc
pop
mov
sbb
aad
sbb
push
xorb
fnsave
jne
sbb
icebp
mov
dec
ljmp
aad
or
jl
inc
dec
inc
aas
dec
jb
jg
ret
adc
jns
cltd
push
xor
xor
sbb
ficoml
xchg
mov
inc
inc
cmp
mov
sub
mov
xchg
popl
loopne
xor
test
loopne
jg
jo
mull
pop
lods
jb
addr16
mov
push
stos
sti
mov
fcompl
mov
add
and
in
xor
inc
nop
cmp
jmp
mov
mov
sub
stos
xor
insb
stos
add
lahf
or
pusha
jle
mov
inc
xchg
jo
test
xchg
pop
sbb
pushf
js
mov
divb
push
clc
cld
mov
lods
add
xchg
push
lea
std
je
std
push
push
sub
add
xchg
loop
mov
push
pop
movsb
sub
pop
dec
push
dec
xchg
out
sahf
adc
imul
sbb
jge
dec
cwtl
push
xlat
ficoms
shll
inc
or
add
movsb
adc
jns
cli
fbstp
xor
cld
dec
js
xlat
imull
pop
mov
mov
xor
cmpsb
cmp
push
xchg
out
dec
push
lds
mov
shrl
mov
ficomps
mov
mov
jmp
addl
mov
in
fisubs
scas
mov
les
or
push
mov
or
js
sbb
int3
sub
lret
mov
push
addr16
mov
xor
pop
jg
add
ss
push
addr16
pushf
pop
popf
sbb
shlb
inc
addr16
shl
mov
fs
or
fs
jge
bound
scas
mov
sub
pop
in
movsl
xchg
adc
and
fs
out
stc
xchg
xchg
sub
lea
insb
movsb
movsb
jno
mov
mov
ficomps
jae
xchg
xor
insb
mov
in
fadd
jo
outsb
xlat
scas
push
cltd
jp
jns
shll
pop
cmp
sub
lods
mov
mov
fists
pop
test
test
push
test
pushf
call
je
cmpsl
bound
add
xor
mov
dec
and
clc
js
mov
sbb
pop
fldenv
stos
aas
jl
mov
jl
pop
rorl
fdivs
sbb
je
pusha
cmpsb
mov
xchg
push
xor
inc
or
dec
ss
or
cmpsb
jb
in
cmc
jae
movsb
mov
xor
sub
in
ret
movsb
jnp
mov
mov
jnp
cs
inc
sbbl
inc
outsl
sub
xor
nop
mov
nop
in
fists
out
pop
pop
and
sub
sbb
pusha
loopne
add
scas
loop
in
rclb
ret
inc
jnp
jne
aam
bound
sub
sbb
mov
out
push
les
or
inc
stos
es
jmp
incb
inc
sub
ret
mov
jnp
sub
or
jae
sbb
iret
mov
xor
stc
mov
mov
inc
pop
notl
popa
or
jo
sbb
mov
push
scas
arpl
test
and
imul
push
lods
sub
mov
dec
ret
aad
std
out
aaa
jp
xchg
cmpb
dec
lds
in
scas
out
inc
mov
push
inc
sub
std
gs
rcrb
adcl
arpl
cmpsl
mov
ret
outsb
scas
mov
sbb
xor
jae
stos
push
shlb
jbe
mov
push
jb
xor
jl
sahf
shll
test
and
adc
lret
pop
fmull
inc
jbe
xchg
sub
sti
popa
xchg
adc
fimull
mov
mov
jo
jge
inc
lret
lods
std
inc
cmp
sub
fisubl
rclb
js
mov
jb
or
cmp
inc
mov
mov
cmpsl
rcr
cmp
adc
ljmp
outsb
sahf
cmp
push
cmp
add
xor
daa
pushf
loope
cmc
call
rorl
ret
ljmp
pop
push
mov
jo
jge
or
ret
outsb
pop
mov
jl
xchg
sbb
imul
lea
jne
nop
ficompl
mov
push
aam
cwtl
sbb
adc
fbld
xchg
push
mov
arpl
push
pusha
add
push
loope
addr16
shrl
dec
inc
movsb
jge,pt
adc
out
dec
pushf
sbb
jge
dec
and
push
in
ret
test
sahf
mov
sub
iret
jae
push
sub
add
xor
and
push
lods
cmp
ljmp
mov
pop
andb
test
and
jnp
jo
mov
cmp
dec
bound
movsl
pop
filds
andl
leave
push
fxch
push
cmp
cmp
mov
pop
sbb
push
sti
insl
mov
sbb
loop
add
dec
mov
ret
cmp
xchg
fld
fldl
or
lods
decl
cmp
gs
lret
push
mov
push
dec
push
push
outsb
out
mov
xor
cmp
les
dec
leave
call
cmc
dec
aam
jne
inc
dec
mov
sbb
dec
loop
mov
cmp
testl
leave
in
pop
loope
jno
push
jb
lret
mov
mov
mov
fs
clc
lea
ljmp
push
xor
es
mov
mov
inc
pushf
add
xlat
mov
shlb
or
inc
shl
loop
lcall
aaa
or
leave
jns
test
adc
imul
mov
loop
hlt
test
es
mov
fsubp
les
mov
mov
pop
push
xorb
pop
mov
and
lret
or
jae
adc
lea
enter
sbb
pusha
pop
jae
add
notl
jle
inc
faddl
scas
enter
jae
mov
add
cpuid
inc
sbb
cwtl
or
andl
sbb
adc
aam
xchg
cli
or
inc
test
outsb
mov
push
js
decl
rcrb
and
or
cmp
outsb
out
mov
jb
push
adc
das
rcrb
xor
pop
sbb
test
and
pop
push
cmc
cmpsl
and
sbb
mov
push
mov
mov
mov
movsb
jae
dec
xor
adc
ja
mov
loopne
xlat
imul
push
je
movsb
inc
inc
add
orl
loopne
xor
out
mov
test
loop
shrb
fiaddl
cmp
scas
xor
jge
dec
dec
int
icebp
xlat
aaa
dec
mov
jo
xor
mov
hlt
mov
roll
sub
add
mov
pop
repz
mov
push
sub
je
dec
sbb
add
and
lods
je
mov
mov
inc
sub
jle
int
pop
pop
xor
clc
rorb
adc
cmp
shlb
insl
mov
das
lock
or
mov
push
out
cmp
or
popf
cmp
not
push
add
sbb
imul
xor
sub
push
leave
mov
rol
mov
inc
adc
push
ss
inc
pushf
adc
lods
sub
xor
pop
add
ret
or
sbb
mov
push
lcall
pop
hlt
pusha
sbb
adc
pop
pop
pop
call
sbb
or
insb
test
subb
jbe
lods
aad
xchg
fst
and
fsubl
push
push
jl
int
lea
mov
leave
lcall
dec
sbb
pop
ret
clc
addl
xor
loop
nop
add
adc
or
std
aam
out
pop
fldt
jecxz
imul
xchg
xor
ja
push
jle
lods
or
pop
mov
aad
outsl
cli
xchg
pop
xchg
jl
lods
cmp
or
out
add
jno
mov
shl
js
mov
stos
xchg
adc
mov
inc
rcr
or
test
in
out
jne
dec
xor
dec
mov
int3
mov
ss
add
inc
fsts
cmpsb
in
jge
data16
fdiv
enter
xor
add
mov
mov
push
mov
sar
xorl
xchg
rorb
mov
cs
movsl
lock
pop
sbb
inc
dec
in
test
xor
sti
test
cmp
cmp
xchg
movsb
ret
in
add
sub
pop
cli
dec
out
loopne
insb
out
dec
sub
jae
jge
add
sub
jnp
js
inc
cltd
fldenv
inc
or
dec
or
pop
fwait
jl
popa
pop
pop
push
jbe
fcomps
movsl
cmp
mov
in
pop
aaa
push
sbb
aam
mov
mov
gs
push
or
or
test
and
adc
xorb
into
sbb
popa
pop
es
lods
shl
pop
pop
fnstsw
adc
mov
jmp
int3
mov
test
cmp
fcmove
jge
call
cltd
or
mov
cld
into
scas
mov
pushf
outsb
pop
cwtl
mov
dec
sub
and
bswap
rolb
jecxz
scas
adc
or
cmp
xor
push
cmp
shlb
add
dec
icebp
call
jmp
ficoms
dec
adc
mov
sti
pop
jbe
or
and
mov
pusha
std
popa
gs
cs
add
jg
jnp
cltd
xor
jno
lods
jecxz
xchg
mov
inc
dec
daa
adc
mov
jae
push
sub
push
rcrb
xor
and
dec
testb
cs
hlt
insb
xchg
jg
insb
cltd
xchg
dec
xor
mov
mov
dec
pop
mov
lahf
xor
inc
inc
cmpsl
pushf
jge
aad
xchg
fdivl
dec
test
pop
iret
or
sbb
test
add
shrb
push
mov
lds
sub
idivb
into
subb
mov
lods
cwtl
dec
repz
mov
sbb
push
or
dec
push
xchg
into
les
sbb
cli
add
xor
cmp
faddl
cmpsb
cmp
mov
fs
imul
popf
std
es
xchg
cmp
in
bound
mov
xor
pop
loopne
in
movsb
movsl
imul
xor
adc
mov
adc
sub
dec
adc
and
mov
mov
nop
dec
std
push
popa
es
cltd
adc
mov
scas
sbb
movsl
jae
lea
bnd
lea
pop
xchg
mov
fimull
icebp
mov
lea
lods
add
xchg
jp
sub
cmpl
mov
cmp
xor
add
popl
mov
xchg
mov
xor
sbb
in
shrb
lret
add
testl
lods
or
test
cmp
adc
out
rorl
jo
fwait
mov
cltd
push
sahf
pop
inc
inc
into
mov
mov
jns
add
jecxz
pop
xchg
dec
pop
pop
popa
add
in
movsb
sub
and
loopnew
or
test
jp
mov
loop
add
add
adc
jp
and
sub
mov
or
scas
pop
ficoml
pop
repnz
fcoml
outsb
sbb
sbb
js
loopne
call
outsl
cli
shr
repz
rol
rorb
pop
pop
test
push
dec
xor
and
add
in
mov
leave
sti
xchg
xchg
inc
jp
test
mov
jnp
ret
dec
hlt
jecxz
push
adc
mov
int
mov
xchg
mov
pop
push
shll
push
sub
subb
mov
push
add
and
ret
les
sub
xchg
in
adc
scas
push
pop
mov
leave
pop
mov
adc
mov
xchg
stc
mov
insb
fnstenv
sti
add
pop
or
mov
dec
gs
jg
loop
ror
mov
xchg
jo
mov
lods
dec
and
add
sahf
clc
adc
loope
xor
inc
mov
out
js
rcrb
mov
dec
lea
in
jle
jmp
xor
fs
push
adc
xchg
imul
mov
mov
inc
mov
and
adc
cmc
std
or
cwtl
sti
scas
fldenv
mov
out
and
push
cli
jp
mov
cmpsb
or
xchg
jle
dec
mov
push
or
jb
out
push
mov
aam
mov
mov
or
sbb
movsl
mov
add
mov
mov
cltd
add
mov
sub
inc
loop
mov
movsb
xchg
lahf
out
stc
ja
in
xchg
xlat
addb
adc
test
lcall
les
mov
rol
mov
fadd
jno
into
mov
cmpsb
dec
sub
cmp
xchg
xchg
mov
test
clc
cmp
movsl
push
and
in
pop
out
lea
cld
or
out
inc
icebp
push
cmp
loopne
push
push
fdivl
jbe
mov
jb
pop
in
sub
mov
ja
ret
shrb
mov
pushf
pop
xor
test
fwait
iret
xor
xchg
aaa
xchg
pop
add
cltd
ja
nop
inc
dec
lods
pop
push
imul
xchg
jg
mov
in
lods
and
dec
mov
cmp
repnz
adc
sub
scas
fcoms
popf
xor
adc
cmpb
cs
hlt
pop
in
iret
jns
cmp
mov
and
mov
adc
in
fwait
in
sbb
push
imul
test
clc
cwtl
sub
or
fsub
mov
jno
pop
stos
pop
in
or
out
dec
jns
fmulp
out
arpl
fldl
pop
imul
nop
fdiv
mov
ret
pop
cmc
fs
data16
es
bound
lods
push
in
aaa
mov
ljmp
sub
ja
in
out
ret
and
std
ficomps
in
cmp
pop
and
inc
lret
mov
mov
cmpsl
int3
jmp
ljmp
push
test
loope
sbb
imul
dec
out
xor
sbbb
movsl
fsubp
xchg
stos
ljmp
pop
xlat
adcl
xchg
insl
xchg
mov
adc
repnz
shrb
out
xchg
inc
sub
adc
add
or
aad
sarl
gs
lcall
subb
lahf
dec
out
sbb
cmpsb
std
adcl
div
sbb
or
outsl
cmp
movsl
jecxz
and
inc
aas
jb
out
or
bound
pop
xchg
fwait
adc
jmp
fmul
lods
xchg
push
mov
cmpsl
add
aaa
mov
aam
cmp
pop
dec
adc
subl
in
mov
mov
das
or
test
jno
adc
xchg
or
or
xchg
or
dec
add
clc
jnp
test
sub
out
out
xchg
leave
mov
iret
push
sub
push
inc
pop
addr16
add
jecxz
dec
jae
stc
leave
inc
stc
xor
xor
cmp
pop
dec
lock
jle
jmp
xchg
push
lahf
call
jnp
pop
fwait
sti
xchg
addr16
sti
sti
dec
xchg
test
paddsb
repnz
call
dec
jl
outsl
push
add
rorl
aas
add
int3
jbe
les
enter
sti
scas
mov
mov
cmp
fdivrs
idivl
stos
ja
stos
idivl
scas
hlt
gs
in
cmp
pop
test
pop
gs
je
movsl
xchg
inc
fwait
mov
xchg
mov
mov
stos
mov
loopne
dec
sahf
mov
or
xchg
data16
repz
adc
xor
div
in
mov
bound
adc
test
mov
loop
xchg
enter
mull
in
sub
jl
mov
inc
mov
leave
insb
jg
std
cmpsb
bound
lock
lds
stos
sub
scas
lods
hlt
stos
mov
je
mov
cwtl
setb
movsb
push
aaa
jecxz
shll
lods
jle
pop
jle
mov
pushf
lods
das
fcom
mov
push
mov
inc
jg
mov
cmp
into
loop
int
data16
cmc
arpl
dec
mov
cmp
push
adc
ret
leave
je
sbb
gs
adc
in
das
push
imul
sbb
lahf
and
mov
pop
into
jnp
arpl
adc
aam
pop
mov
ja
mov
push
js
sahf
std
std
push
clc
mov
ja
xchg
or
sub
and
test
ss
push
loope
pop
loop
fdivrl
int3
mov
push
mov
in
movsl
and
add
fdivl
gs
sbb
lcall
push
in
sbb
xor
ljmp
cmp
fsubr
jmp
jae
daa
push
mov
jbe
sahf
outsb
sbb
in
add
fisubl
jp
inc
dec
rcrb
xor
rcll
repnz
aad
fisttpl
test
divb
jne
or
fsts
adc
adc
adc
mov
xor
cmpsb
fdiv
test
mov
xor
bound
enter
mov
push
sbb
add
inc
sub
mov
repnz
inc
jecxz
jl
fdivl
cli
or
lret
mov
and
add
ret
clc
cltd
enter
repz
push
arpl
jl
pusha
repz
lret
pop
fistpl
sbb
es
push
je
outsb
mov
pop
mov
inc
sbb
pop
sbb
sub
jns
sub
jp
push
push
jae
lock
loope
arpl
pop
jns
push
test
jne
push
out
shrl
iret
js
mov
mov
xor
jecxz
lods
cmp
sbb
pop
les
sbb
cmp
mov
dec
std
or
stc
pop
inc
mov
pop
jnp
lahf
out
jmp
test
mov
add
jns
subl
mov
pop
mov
jge
das
and
loope
mov
cwtl
aam
cli
jle
jmp
mov
fwait
mov
dec
aad
testb
das
xor
jmp
addr16
sahf
movsl
sbb
insb
cmc
add
or
xchg
adc
add
xor
test
and
xchg
mov
push
loope
jnp
sbb
jns
cmpsl
xlat
pop
imul
cs
insl
lea
cmp
inc
jae
cwtl
inc
cmp
dec
jecxz
jg
out
xchg
push
cmpsb
add
pop
js
ljmp
inc
sub
xchg
jmp
xor
jne
hlt
jl
mov
and
cs
inc
lods
stc
lcall
test
cmpsl
jns
cmp
imul
mov
sbb
lret
pop
pushf
dec
ljmp
ficoms
mov
popf
lcall
xchg
push
loop
push
addr16
ljmp
cld
xor
sbb
nop
pop
lock
out
sub
fcoms
outsb
push
repnz
or
movsb
sbb
fstpt
jbe
mov
sbb
cmp
xor
loop
shll
fnstcw
fldl
mov
hlt
aas
test
sbb
mov
and
mov
leave
mov
cld
push
test
xor
adc
stc
dec
in
dec
mov
fsubrl
sahf
js
mov
shrb
popf
adc
pushf
jp
add
pop
daa
dec
add
xchg
dec
mov
lea
mov
arpl
sti
xchg
push
add
add
lret
loopne
xor
push
lods
add
in
call
pop
and
mov
out
xchg
cmp
jnp
dec
fs
mov
repz
mov
xchg
mov
insl
les
push
lcall
sbb
nop
jmp
cmp
cmc
loopne
mov
adc
xlat
cld
sub
xchg
mov
pop
push
imul
test
lock
lret
clc
sbb
sbb
mov
cmp
outsb
xchg
push
sahf
pop
gs
or
sbb
xor
mov
or
mov
movsb
push
fucomip
shrb
out
shrb
or
call
lock
cmp
pop
scas
mov
xchg
pop
sbb
mov
loop
pop
cli
stc
andb
jo
sub
mov
daa
shll
scas
inc
shll
push
xchg
sub
arpl
outsb
pop
ss
adc
or
jbe
dec
mov
les
and
shlb
in
mov
frstor
leave
cmp
mov
sti
mov
adc
push
ffreep
cli
sbb
loop
jecxz
push
and
sub
push
paddq
push
fs
push
adc
rolb
daa
jbe
cmpl
dec
stos
pop
and
outsb
fcmovne
aam
in
or
cmpsb
xor
dec
sahf
xor
dec
out
jl
mov
inc
int
aad
mov
push
sbb
push
adc
or
cli
pop
and
inc
je
pop
and
inc
mov
movsl
mov
into
dec
cltd
cmp
and
call
mov
fsub
push
test
ss
xchg
clc
jbe
lahf
pop
mov
test
push
insl
xorb
cmpsl
aas
inc
xor
xor
inc
lahf
scas
push
sbb
into
sub
add
insb
das
jle
mov
test
mov
shll
leave
sbb
jge
bound
jmp
pushf
mov
mov
fwait
arpl
cltd
mov
ljmp
in
es
pop
cmp
mov
xchg
sarl
stos
mov
push
pusha
test
or
or
jbe
or
xor
xor
incl
cmp
sbbb
mov
sbb
out
mov
ja
pop
sub
mov
std
pop
adc
jg
add
loope
je
jno
and
adc
push
cmp
pop
xchg
jo
sbb
mov
mov
cwtl
mov
cmpsb
sbb
pop
out
adc
fincstp
sbb
mov
add
mov
mov
clc
add
mov
add
pop
push
pop
arpl
rorl
and
das
sti
mov
add
movsl
iret
xlat
dec
dec
dec
pop
sbb
test
mov
scas
xor
sbb
lods
mov
xchg
shrb
or
sbb
pop
movb
xchg
cmpsl
mov
xor
leave
cmpsb
mov
sbb
sbb
sub
mov
in
cmp
call
dec
adcl
stc
pop
mulb
ja
fs
out
stos
and
xchg
pop
filds
rcl
jp
xchg
mov
lahf
and
xchg
pop
ljmp
test
sub
outsb
popa
cmpsl
aas
or
aaa
rcrb
stos
sbb
pushf
gs
insl
stos
xchg
and
data16
dec
sbb
push
xchg
adc
pop
lods
lea
and
pop
outsb
xchg
scas
fucomi
aam
cld
lods
and
jo
out
jp
movsb
ds
push
or
notl
push
cmpsl
aad
test
fcoms
dec
cmp
lret
jbe
sub
sub
test
sub
clc
mov
jae
lods
test
les
imul
mov
pushf
xchg
xlat
outsb
xor
shlb
cwtl
aas
leave
mov
mov
inc
mov
push
insl
dec
add
jbe
dec
aam
lcall
ss
dec
ja
les
dec
dec
cmp
fdivs
in
fs
adc
and
test
xor
adc
popa
mov
jl
mov
or
jmp
add
scas
push
mov
fs
mov
pop
mov
mov
sti
mov
adc
sbb
es
sahf
fwait
call
cwtl
xchg
loop
pop
fyl2xp1
test
nop
imul
ss
add
out
mov
cmpsb
mov
imul
data16
pop
inc
mov
jbe
xor
adc
xor
cld
shrb
es
pop
pop
and
cmpsl
mov
and
mov
cmp
or
test
ja
xor
imul
pop
mov
mov
sub
loopne
sbb
jmp
insl
scas
xor
adcl
dec
test
xor
shrl
xorl
inc
push
and
test
icebp
jno
shlb
xor
into
sub
dec
lcall
cmp
fwait
mov
xchg
push
addr16
push
inc
xchg
pop
xchg
es
cli
adc
mov
stos
je
popf
fiadds
jge
sub
or
scas
xchg
push
lods
ret
pushf
xor
mov
pop
sbb
inc
movsb
push
mov
call
xor
aam
out
xor
repnz
inc
adc
pusha
push
fldt
iret
mov
mov
shll
pop
xchg
mov
jne
or
aas
cmp
shlb
out
ss
and
jg
lds
cmp
leave
cs
add
test
popf
jmp
jns
push
daa
jle
ljmp
cmp
pop
bound
jg
sbb
jns
cmpsl
jns
jnp
mov
pushf
std
pop
rolb
pop
sbb
sbb
mov
pushf
idivl
or
xorb
dec
insb
push
dec
xchg
jl
sub
dec
insl
dec
cmp
or
punpcklwd
sti
or
push
jl
add
lea
or
xor
xchg
cli
inc
jns
dec
insb
add
lods
andl
andl
jns
mov
add
dec
jne
nop
cmp
pop
jecxz
dec
xchg
mov
and
inc
gs
sbb
and
dec
pop
in
adc
pop
mulb
ret
in
lahf
xchg
addl
ds
ds
ret
jae
cs
jp
in
mov
outsl
sbb
sbb
push
pop
dec
jl
jecxz
cmp
or
and
movsb
dec
std
and
xchg
pop
subl
shlb
sub
sahf
scas
mov
sbb
mov
and
xor
out
dec
mov
lahf
add
stos
add
or
push
ds
cmp
jo
push
inc
xchg
dec
stos
outsl
dec
sub
gs
dec
pop
cmp
inc
add
stc
lea
push
sti
push
call
js
dec
sub
inc
jbe
sub
stc
sbb
cmp
sub
lock
pop
inc
lret
pop
mov
pop
lcall
aam
mov
dec
pop
xchg
aas
jecxz
jns
adc
mov
push
xchg
or
cwtl
imul
xchg
cmc
fdivl
xchg
sbb
push
push
mov
mov
add
mov
sti
lods
pop
lods
dec
into
mov
nop
cmp
out
pop
jge
mov
cwtl
std
rorb
push
and
pop
popa
push
dec
sub
fiadds
xchg
es
push
outsl
psubd
fisttpl
movsl
dec
push
icebp
inc
scas
in
mov
mov
pop
outsb
mov
mov
mov
imul
movsl
sbb
jmp
mov
fwait
loop
mov
daa
shrl
sbb
cmp
loopne
cmp
jbe
cmp
pop
adc
sbb
xchg
add
push
jecxz
fimull
stc
add
pop
out
and
cmp
and
addl
mov
in
cmpsb
mov
fmull
fdivrs
xchg
test
in
ret
mov
cs
shl
jnp
scas
stos
aas
sbb
push
into
stos
mov
addr16
testb
adc
pop
push
testl
int
add
mov
xor
mov
or
sub
mov
adcb
xor
test
imul
xchg
cmpsb
cwtl
jge
jns
xchg
inc
bound
ljmp
fsubr
hlt
sbb
roll
test
mov
cmpsb
rorl
ret
je
filds
mov
adc
ret
shll
jno
cvtpi2ps
mov
paddw
pop
sbb
in
mov
sti
rorb
into
out
imul
ja
sub
or
xchg
xchg
insb
sbb
jae
das
mov
inc
bound
popf
mov
ja
fistpll
or
and
xor
push
add
sub
sti
mov
ja
inc
lds
and
shll
aad
nop
shlb
mov
verw
xchg
test
push
sbb
enter
mov
cmp
cld
mov
jae
je
ja
arpl
adc
inc
cmpl
call
cmp
mov
add
jb
cltd
add
mov
mov
stc
fadds
sbb
jecxz
cmpsb
pop
ljmp
pop
popf
popf
ljmp
aad
mov
jp
jb
rorb
or
js
mov
mov
mov
fsubrl
out
xchg
insl
add
sbb
mov
and
rorl
mov
push
cltd
push
aad
cmp
cs
mov
jmp
jae
inc
nop
ds
mov
shrl
jno
cmpsl
popf
pshufw
js
in
scas
add
imul
fnstsw
in
cli
pop
jo
les
cmp
add
mov
inc
adc
push
or
int3
in
lcall
pop
xor
aad
ja
mov
mov
cmc
int3
out
lods
jmp
mov
inc
inc
addr16
or
pop
lret
cmp
aam
into
fcoms
rcrl
lahf
mov
fwait
pop
or
je
mov
loope
adc
mov
mov
test
sub
jbe
test
mov
lret
inc
jge
mov
out
mov
jge
mull
mov
rcrb
xchg
cli
jae
mov
test
movsb
mov
or
pop
into
cmp
lcall
fdivrl
push
jle
aas
clc
pop
loope
or
xorb
pinsrw
pop
dec
pop
stc
pop
pop
pusha
jne
addl
mov
lock
into
popa
xor
add
adc
movsb
inc
jne
cmp
mov
fistpll
sub
dec
jno
lcall
add
push
xchg
jmp
int
pop
mov
xor
ja
jnp
jnp
movsl
jle
test
mov
push
jnp
shll
loopne
mov
inc
call
outsb
mov
outsl
and
xor
addl
xchg
lds
dec
pop
test
jecxz
xor
imull
mov
inc
add
pop
add
aam
xor
jmp
test
test
ret
mov
repnz
mov
cmp
lea
in
jp
add
mov
hlt
hlt
push
imul
cmpsb
jb
or
mov
stos
add
pop
test
or
outsl
je
and
mov
xchg
insb
mov
mov
mull
jp
shll
add
lcall
pop
or
xor
nop
mov
jbe
pop
jno
sbb
push
in
xchg
inc
add
jo
cmp
dec
jne
lods
mov
mov
jmp
and
les
jns
xchg
cmp
push
in
pop
push
stos
push
outsl
lods
in
inc
xor
mov
ret
cwtl
sub
std
ret
data16
inc
pop
int3
inc
daa
or
mov
jbe
scas
les
inc
in
cmp
decb
cmp
fdivl
shr
jo
std
adc
cmp
faddp
sbb
or
jno
pop
lcall
jbe
mov
stos
or
outsb
cwtl
loop
mov
sub
les
cmp
sub
jp
mov
nop
mov
lahf
int
daa
loope
movsl
sbb
in
mov
aad
insb
xchg
xchg
icebp
jl
ret
inc
sub
fistps
add
sub
sub
lods
pop
add
xor
and
dec
pop
scas
hlt
cwtl
mov
inc
imull
xchg
nop
cmp
pop
hlt
out
lret
jg,pn
imul
das
loopne
sbb
and
call
aad
fildl
sub
jne
sub
cmp
fstpt
loopne
cld
adc
dec
pop
leave
fisttps
movl
adc
in
pop
xchg
cwtl
sti
movsb
aam
movsl
out
gs
and
xor
stc
inc
sbb
sbb
lret
movsb
cli
in
sub
push
mov
jo
mov
pop
or
stc
cmpsl
cmc
push
subl
inc
mov
push
xor
popl
push
mov
sti
dec
adc
fsts
jae
pop
lret
mov
mov
fiaddl
out
mov
insb
mov
dec
push
or
std
ret
loopne
and
push
or
adc
mov
fcoms
adc
push
fwait
xchg
fldl
pop
xchg
out
push
int
and
sbb
shl
test
dec
xchg
or
rcrl
in
sbb
rcl
xlat
in
and
cli
jl
fisttpl
call
sub
pop
in
in
jle
pusha
test
imull
dec
je
jp
psubsw
cmp
mov
call
xor
mov
movsl
inc
push
out
aad
in
jg
sahf
mov
dec
jne
es
or
je
daa
cmc
int3
clc
int
orb
pop
ret
leave
xchg
clc
testl
out
in
shlb
enter
mov
pop
subl
arpl
cmp
into
pop
push
negl
and
dec
jecxz
stc
or
fcoml
push
sbb
xor
push
arpl
and
icebp
rorl
sbbb
sahf
loope
add
or
pushf
mov
out
or
or
enter
sbb
cmp
arpl
arpl
hlt
stos
mov
cmpsl
xchg
or
sarw
rorb
mov
cli
push
adcb
les
lahf
add
cmp
leave
pop
sbb
cmp
pop
mov
movsl
sbb
jl
push
or
mov
xchg
dec
fsubrp
stos
bnd
and
scas
cli
mov
or
mov
aam
push
xchg
dec
pop
cmp
mov
aad
add
sub
or
adc
jle
inc
cmovne
aad
xor
mov
ret
jne
leave
shlb
cmc
sbb
rcrb
xchg
mov
shl
xor
sbb
ds
xchg
lcall
cs
cmp
stos
adc
lret
ljmp
sub
pop
scas
loopne
jl
rcr
cmp
push
push
iret
add
sbb
push
adc
sahf
cmpsl
stos
pop
mulb
test
rolb
icebp
mov
lock
dec
sub
gs
mov
sbb
xor
pop
iret
jle
sbb
int3
mov
add
cs
cltd
adc
ljmp
push
cmp
ds
ret
clc
popf
or
dec
fsub
sub
mov
ljmp
push
mov
or
xchg
lret
cmc
mov
subb
push
test
sub
adc
inc
jl
nop
and
pop
add
dec
imul
sbbl
xchg
lret
rcll
jno
mov
iret
jo
dec
mov
insl
sarb
insl
sti
push
test
enter
jb
xchg
in
pop
std
xchg
nop
js,pn
ja
xchg
sbb
cmp
cltd
ss
mov
mov
mov
ret
shl
jae
xchg
xchg
adc
in
xchg
push
popf
xchg
xchg
jo
adc
add
inc
outsl
cmpsb
xchg
fidivs
jecxz
xchg
stos
arpl
xor
cmp
flds
aam
inc
lods
ja
loope
sub
ret
pop
inc
pop
xchg
outsb
inc
shrl
addl
jge
mov
jns
pop
pop
loop
sbb
mov
sub
xchg
adc
pop
mov
call
sub
out
out
dec
sbb
mov
nop
adcl
cwtl
push
clc
inc
adc
test
or
push
iret
mov
int3
fsubl
mov
sub
lods
and
push
cmpsb
cld
shrd
push
mov
pop
stos
jle
push
mov
pop
mov
sbb
imul
in
bound
loope
add
aaa
jbe
jge
mov
xor
ss
and
mov
dec
shrb
mov
mov
imul
loope
fmuls
jl
in
mov
jmp
cmpsl
int
and
jle
or
inc
bound
inc
test
insl
fbld
mov
lcall
pop
push
adc
rcrb
add
add
push
pop
add
pushf
mov
mov
pop
outsl
lcall
test
push
js
sbb
hlt
in
test
int
dec
xchg
sub
daa
cmp
shlb
jmp
ret
mov
das
imul
mov
adc
ds
cli
shlb
adc
call
inc
and
sub
call
adcb
cs
lret
pop
lds
clc
jle
subl
repz
cmp
lret
aad
call
mov
mov
or
int3
aad
push
movsb
and
aad
push
pop
push
pop
pop
or
push
fadds
in
sub
test
fmul
rclb
adc
ss
add
or
xchg
sub
lcall
aad
adc
mov
sub
leave
sahf
rcrl
mov
pmulhw
xor
jns
into
pusha
cwtl
lahf
filds
sbb
xor
repz
mov
rcrb
mov
adc
pushf
mov
divb
jg
adc
shrl
xchg
inc
xor
jnp
xchg
lahf
test
push
push
enter
fwait
push
mov
shl
mov
mov
push
sahf
lods
test
and
das
mov
sub
xchg
jmp
jl
sub
sub
in
fdivl
mov
adc
pop
or
pop
repnz
subl
jle
cmc
cmp
xchg
jno
shll
mov
mov
fwait
jbe
into
pusha
sarb
ret
xor
add
je
push
mov
cmp
xchg
adc
jmp
lret
out
lahf
aas
jno
inc
mov
or
lcall
je
mov
mov
mov
mov
dec
rcll
dec
into
or
add
push
imul
and
repz
sub
fsubrp
xor
mov
dec
pushf
roll
pop
inc
xchg
add
mov
xorb
cwtl
xchg
inc
repz
push
loope
cmc
xchg
jge
cs
or
mov
dec
je
fisubs
fstl
outsl
dec
imul
in
dec
fimull
fldt
push
inc
xor
jnp
sbb
test
scas
stos
jno
scas
jmp
push
jbe
xchg
js
mov
in
sbb
pop
dec
popa
jnp
repz
mov
loope
les
cld
add
jge
pop
cmpsl
fidivrl
or
mov
adc
lcall
push
cmp
push
dec
leave
pop
pop
subl
and
push
add
push
pop
xchg
in
in
lds
fldl
out
adcl
popw
jnp
pop
mov
mov
arpl
pushf
pop
mov
fisttps
mov
pop
call
pop
out
xchg
mov
ret
daa
push
xchg
sub
in
repz
jge
mov
jne
cmc
adc
movsl
pop
leave
and
lods
fs
and
push
push
cmp
cmp
add
jb
stos
dec
dec
or
xor
adc
mov
cs
fcoms
fldenv
sbb
xchg
push
mov
jb
fcoml
in
es
incb
js
sub
pop
jnp
ret
adc
xchg
jmp
and
or
inc
mov
clc
ja
sub
test
sub
jmp
xor
mov
push
dec
aaa
pop
arpl
cmp
push
shl
jne
mov
xchg
imul
jns
mov
dec
out
dec
sub
cmpsl
stos
fs
mov
push
mov
cmpsl
push
in
ss
mov
adc
push
int
pushf
mov
push
aas
nop
and
and
xchg
mov
cmpsl
dec
lock
rolb
call
xor
adc
push
adc
mov
mov
lea
jnp
iret
push
and
cs
insb
scas
push
sbb
out
and
dec
add
mov
outsb
lock
mull
inc
test
scas
in
jbe
subb
pop
push
push
pop
int
push
adc
leave
adc
jp
dec
lret
dec
mov
movsl
scas
xchg
mov
sub
test
jmp
sub
mov
mov
in
mov
adc
mov
stos
mov
mov
int3
das
unpcklps
outsl
insb
push
faddl
mov
aas
je
mov
pusha
shlb
repz
jg
xchg
cmpsb
mov
xchg
pusha
push
mov
and
push
repz
cmp
cmp
xlat
inc
dec
divl
mov
dec
inc
or
popf
rorb
pop
jne
xchg
int3
sub
outsl
aas
push
setno
out
shll
lock
pushf
daa
or
xor
lahf
push
movsl
mov
scas
xchg
scas
mov
inc
pop
loopne
test
ja
or
or
adc
pop
pop
and
mov
addr16
pop
mov
in
and
jo
xor
je
cmpsb
jp
imul
cmp
out
repz
mov
imul
pop
lret
mov
jge
or
xchg
jecxz
lods
mov
shr
popa
sti
orl
mov
cmpb
call
mov
add
fcmove
or
push
movsl
mov
out
or
test
pop
adc
mov
add
test
pop
outsl
and
sbb
push
rcrl
inc
ret
push
mov
push
mov
lods
or
jb
or
jae
or
into
mov
fdivrs
sbb
mov
push
push
mov
enter
ret
mov
lea
lock
or
sbb
cmp
addr16
xor
out
int
xchg
mov
sti
scas
xor
outsl
mov
ret
ficoml
scas
mov
inc
sbb
data16
push
jno
orl
jg
andb
jo
cmp
ljmp
rorl
adc
and
xor
dec
outsl
jnp
mov
and
movsb
std
mov
mov
aaa
push
jmp
mov
xchg
test
mov
push
xchg
cwtl
add
dec
xchg
mov
pop
jle
dec
mov
cmp
aaa
cli
cmpb
and
jno
dec
sub
xrelease
nop
fwait
mov
push
fs
cmpsb
pop
ds
or
movsl
iret
ja,pn
gs
adc
fs
stc
std
pop
or
cwtl
call
add
cmp
fdivrl
hlt
addr16
pop
mov
outsb
adc
mov
xlat
mov
adc
xchg
push
mov
sbb
insb
add
outsl
mov
push
mov
cwtl
int3
pop
dec
xor
adc
pop
xlat
add
inc
shrb
dec
cltd
xor
test
pop
leave
aas
xor
xor
lahf
mov
in
rcrl
sub
mov
jle
mov
or
ds
leave
jne
outsl
jmp
pop
lds
add
fcoml
jo
jb
loop
or
test
jl
push
sbb
imul
push
push
xlat
push
jg
mov
arpl
mov
int
call
adc
mov
call
jp
cmp
xor
cmp
pop
cmp
xorb
fildll
vpmulhuw
jae
insb
mov
popl
and
mov
cmp
pop
or
rolb
pop
mov
rcl
pop
bound
call
shlb
adc
or
fbstp
repnz
add
stos
dec
inc
and
std
mov
mov
and
mov
outsl
pusha
inc
xor
ljmp
push
dec
and
adc
cld
push
xlat
add
repz
add
rcr
xor
or
ret
ds
mov
adc
jge
bound
jo
fisttps
inc
ljmp
popa
mov
xor
fwait
xchg
and
mov
add
pop
dec
in
pop
sub
xchg
sub
cmp
clc
cld
push
ret
dec
jno
mov
int3
cli
mov
inc
mov
fnstsw
sub
push
xchg
outsl
lds
push
stos
cmpb
dec
and
pop
or
imul
cld
ljmp
adc
jne
sbb
loop
cld
push
popl
movsl
mov
orl
sub
fists
mov
addb
sbb
jmp
rorb
xchg
js
int
cmp
shll
xor
ss
xor
jbe,pn
or
ss
cli
mov
pop
mov
js
mov
mov
xchg
add
in
test
push
mov
arpl
adc
xor
scas
and
xchg
rol
inc
in
push
jae
pop
test
clc
in
insb
sahf
lods
rcr
inc
sub
lret
scas
sbb
loopne
inc
and
lea
add
fcomi
fldt
sub
sub
adc
data16
outsl
lock
inc
movsb
xor
and
mov
xor
and
dec
xor
and
or
mov
inc
daa
and
test
xchg
shr
mov
mov
scas
pop
popw
outsl
sub
xor
xlat
cmp
mov
xchg
scas
sub
mov
popf
sbb
add
inc
push
call
iret
jecxz
mov
xor
pop
jno
mov
scas
xchg
out
jnp
inc
inc
mov
outsl
imul
mov
sahf
mov
into
push
js
fdivrs
adc
ret
sub
ds
mov
and
pop
xchg
repnz
lock
iret
dec
or
xchg
and
sub
inc
loope
cmp
ret
addb
std
and
inc
sbb
sti
sbbl
cwtl
out
cmpsb
imul
ror
mov
sub
jo
ss
rcrl
sbb
aad
pusha
push
sbb
xchg
inc
sub
mov
or
push
test
inc
addr16
repnz
lods
jl
in
add
xchg
or
xor
or
jns
mov
add
dec
gs
sbb
inc
mov
out
cmp
loopne
out
mov
cmp
add
xor
int3
pop
jns
fwait
cmpsl
sti
fmuls
ret
insb
and
push
mov
shrl
sub
call
jmp
pop
es
ljmp
dec
add
and
incb
loope
xchg
jb
outsb
popa
inc
pop
xchg
xchg
ja
insl
push
cmp
lret
test
outsb
pop
gs
shrl
insb
dec
jp
cld
outsb
aam
cwtl
sub
cmp
cmp
ljmp
jne
dec
testl
rorb
mov
in
je
xlat
add
fmuls
xor
aaa
test
xor
push
inc
mov
mov
leave
sub
inc
ret
inc
dec
std
dec
jns
fidivs
mov
cmpsl
sub
pop
dec
movsb
jge
push
shlb
negl
push
sub
add
adc
sbb
or
push
dec
cwtl
and
jge
stc
adc
jge
xor
lahf
mov
and
or
rclb
jp
nop
lods
insb
out
mov
adc
lock
xchg
ja
repz
arpl
es
outsb
cmp
lcall
mov
jle
sbb
sub
mov
outsl
fs
xchg
lcall
mov
cmpsb
push
push
sbb
inc
push
stc
jae
clc
sub
xor
and
test
inc
stc
test
loopne
out
cmp
daa
dec
test
add
pop
add
je
rcrl
xor
fstpt
pop
pop
dec
mov
imul
xchg
lea
lock
std
push
jmp
int3
jl
or
mov
ja
fwait
pop
ds
sbb
add
mov
xchg
jae
test
scas
rolb
push
shrl
pop
outsl
xlat
int
in
push
inc
sti
mov
adc
out
pop
sub
cmp
stos
pop
sbb
jbe
lock
xchg
pop
aaa
lcall
lea
out
in
scas
xor
clc
jg
inc
test
and
in
stos
loope
in
subl
test
sub
out
icebp
fwait
mov
lcall
fwait
push
jmp
sub
sub
push
aam
clc
mov
add
or
inc
loop
sahf
shrl
sbb
mov
loopne
test
and
je
test
lcall
sbb
scas
xor
add
rol
mov
fldl2e
insb
sub
jne
fistps
inc
out
test
xchg
push
jle
pop
scas
test
imul
icebp
ret
push
bound
xchg
popa
mov
xor
repz
rcll
jno
mov
adc
or
mov
add
pop
scas
les
sarl
imul
pop
aad
jne
cmpsl
mov
sub
subps
jg
bound
and
jecxz
lahf
jmp
outsb
jecxz
ret
lds
jp
adc
repz
xchg
jle
xor
lret
fstpl
in
push
pop
mov
test
add
imul
mov
fs
in
leave
mul
sbb
ja
xor
xorl
mov
push
repz
add
jmp
push
shlb
mov
mov
dec
in
or
adcl
aas
les
leave
ja
bound
xchg
or
pushf
push
loop
xchg
mov
pop
and
dec
shrb
mov
outsb
cmp
fistps
push
push
lret
xchg
data16
push
std
push
jle
and
jnp
pop
leave
xchg
cmpsb
cltd
fisttpll
push
push
xchg
es
lds
jecxz
jle
mov
add
jno
andb
outsl
aam
arpl
push
and
and
ret
stos
loope
cmp
test
inc
pop
mov
rcrl
ja
mov
ja
jne
sar
div
xor
bound
sub
add
push
sub
pop
or
std
mov
adcb
sahf
mov
sub
pop
xchg
negl
dec
scas
das
cmp
pop
jge
loop
ja
sbb
xchg
push
mov
rorb
fiaddl
lahf
mulb
or
lahf
sub
xchg
push
xchg
arpl
out
outsb
mov
pop
int
and
sub
test
adcl
push
jae
dec
or
loop
sub
fsubp
add
lret
sbb
dec
pop
and
xchg
addb
xor
mov
lcall
jl
fwait
outsb
jns
jmp
int3
xor
sbb
loope
sub
out
inc
mov
lret
dec
add
js
dec
ret
jo
in
rcll
movsl
iret
xchg
call
pop
outsb
dec
and
adc
push
sub
mov
gs
sbb
jo
push
adc
sbb
std
pushf
mov
mov
sub
cs
incl
mov
push
cmp
push
dec
sbbb
mov
imul
ret
sbb
lret
jns
into
mov
push
cmp
mov
sub
iret
or
or
xchg
sti
sbb
jg
mov
leave
fsubs
pop
xchg
icebp
scas
add
mov
out
mov
inc
das
pop
push
and
in
mov
loope
lods
flds
sub
mov
mov
xchg
pop
xchg
cmc
stos
or
jecxz
pop
or
cwtl
into
adc
mov
mov
and
inc
or
jle
cmp
mov
xor
iret
push
add
and
addr16
mov
mov
pop
xchg
mov
inc
enter
sub
sbb
outsl
iret
xchg
dec
insb
xchg
stos
imul
aaa
xlat
lds
pop
popa
mov
mov
pop
mov
pop
mov
imul
cmp
mov
int3
mov
scas
sbbl
adc
sub
push
lds
push
inc
repz
inc
std
pop
repz
movsl
xor
addr16
or
dec
push
mov
jge
mov
xlat
call
or
js
lea
xor
out
je
add
outsl
xor
xchg
ja
or
ficompl
dec
testl
xchg
xchg
jmp
cld
adc
mov
pop
fwait
mov
scas
mov
mov
adc
sub
insl
pop
cmpsb
mov
mov
push
pop
and
ret
adc
and
cmpsl
subb
jmp
iret
mov
lds
in
jecxz
lods
fnstcw
cmp
lcall
cld
pop
insb
std
mov
pop
push
dec
mull
cmp
add
adc
fs
and
pop
sub
mov
div
ret
nop
fwait
mov
mov
xlat
lahf
ja
nop
xor
and
js
push
int3
icebp
arpl
stos
xlat
lods
sub
js
ss
push
aas
ret
mov
insb
loope
mov
xchg
adc
out
push
movsb
call
imul
pop
rol
jns
push
scas
sub
sbbl
mov
adc
int
imul
inc
push
mov
fstpl
mov
pop
lods
out
inc
das
dec
test
negl
jbe
fwait
jle
xor
fisubl
insb
out
in
jge
in
lds
push
dec
addr16
fistl
xlat
xor
sub
mov
xor
cmp
jne,pt
ffreep
out
subl
gs
mov
mov
fisttpl
cmp
push
push
ljmp
sti
xchg
push
push
rcll
xchg
mov
sbb
pop
sub
and
popa
xor
and
aam
push
dec
push
lods
aas
scas
sbb
mov
adc
mov
ss
js
test
test
outsb
or
or
xchg
incl
sub
jmp
add
rorb
jg
loope
cld
xchg
jnp
bound
pop
mov
mov
xchg
mov
cmpsl
jle,pn
mov
or
fs
and
dec
adc
jae
and
xchg
pop
ljmp
stos
mov
aas
mov
jno
out
cld
cli
inc
test
adc
movsb
jmp
fcoms
out
xor
lods
insb
sbb
js
pop
push
sbb
sti
ficomps
sub
push
sub
pop
dec
dec
pop
dec
sub
nop
inc
aad
adc
outsb
add
push
fwait
movsl
pop
push
and
aas
add
das
push
scas
sub
xchg
or
imul
nop
in
jge
jg
pop
jp
jbe
gs
sbb
xchg
inc
dec
sub
sti
and
mov
sti
cmpsb
cmp
jns
shrl
jne
dec
shll
scas
mov
mov
cs
push
popa
push
pop
stos
cli
adc
xchg
lock
xchg
out
fistpll
inc
shl
fnsave
mov
add
push
adc
mov
xlat
push
fldl
pop
fs
xchg
in
pop
or
fildl
and
inc
or
jmp
pop
mov
insl
ljmp
fidivrs
or
das
insb
and
inc
lock
inc
lahf
xor
inc
sbb
sahf
roll
push
push
xchg
sete
cmc
outsl
std
addr16
aaa
je
adc
out
adc
stc
addl
loope
sbb
push
movsl
clc
out
lods
jns
or
xchg
clc
lret
fs
cmp
icebp
or
mov
cmp
in
mov
out
test
sbb
popa
movb
cmp
popa
rcrb
mov
mov
fldt
sti
jbe
and
mov
add
xchg
int3
clc
outsl
pop
std
sbb
lods
in
movsb
rolb
test
bound
dec
pusha
scas
mov
out
xlat
dec
jmp
out
push
dec
lret
pushl
scas
cmp
movsl
mov
loopne
jnp
mov
xchg
dec
or
cmp
outsb
push
fwait
out
xchg
and
dec
mov
pop
into
mov
aaa
xchg
inc
dec
push
mov
insl
mov
lea
add
adc
pushf
cli
sbb
jbe
les
es
mov
rorb
pop
mov
dec
jne
inc
popa
in
ja
xchg
stc
jp
or
adc
rolb
push
adc
jl
mov
xchg
push
jnp
sti
bound
mov
push
cld
sbb
xchg
test
std
xchg
jae
xlat
fisttpl
mov
jle
sbb
jns
adc
push
lds
cmp
jnp
xchg
movsl
pop
inc
jo
cmp
pop
push
cmp
jg
repz
repnz
dec
fstl
les
fs
mov
loop
movsl
aam
mul
pop
out
out
dec
repnz
mov
xlat
lret
add
add
pusha
sbb
mov
lds
test
cmp
sbb
inc
jns
mov
out
loope
std
sahf
push
xchg
push
xor
jge
jle
jecxz
aaa
dec
out
add
push
jbe
scas
in
andb
jl
repnz
fidivs
mov
xchg
and
loop
movsb
inc
sahf
adc
xchg
or
xor
arpl
jno
mov
pusha
xor
inc
repnz
in
sbbb
mov
xchg
subb
enter
push
jmp
xchg
popf
add
lahf
sub
cmp
mov
sub
inc
sub
addl
cs
fs
insb
js
outsb
lock
repz
add
jl
insb
mov
adc
stos
out
xor
repz
nop
or
adc
stos
cs
cmp
and
and
lcall
mov
sbb
inc
loopne
fwait
stos
jb
hlt
inc
fdivl
cmp
loopne
xor
pop
nop
mov
jne
int3
es
cmp
dec
xor
jmp
mov
negl
pop
sbb
and
shrl
and
adc
add
nop
sbb
ds
popf
lods
out
fcompl
and
xchg
or
scas
rcrb
inc
es
mov
aas
inc
jle
xor
inc
or
sub
in
mov
xor
jae
jbe
imulb
movsl
sub
out
mov
sti
leave
and
aam
out
and
xor
cmc
jp
nop
add
dec
rcrb
shll
cmc
enter
push
jp
imul
pop
inc
movsb
or
fs
mov
imul
scas
inc
mov
adc
xchg
gs
mov
xchg
rclb
scas
xorl
scas
jge
add
mov
jl
in
sbb
in
dec
stc
ret
cmp
push
jb
sub
popa
scas
cmp
inc
jl
push
dec
movb
test
fisubrl
flds
call
adc
mov
xor
stos
mov
pushf
xor
xchg
pop
or
or
fwait
or
clc
jae
xchg
lcall
sub
rcrb
movb
es
fdivs
push
mov
dec
std
or
sub
je
xor
es
mov
ficoml
in
shlb
movsl
add
xor
jo
inc
jnp
xchg
mov
je
or
jge
jle
adc
mov
add
mov
fsubl
fimull
sbb
jge
outsb
leave
loop
popf
inc
int
ja
orb
rcll
push
out
jmp
pop
xor
jge
adc
ss
gs
loopne
movsb
dec
inc
mov
decl
push
mov
jo
push
insb
push
jbe
es
mov
out
js
outsl
jp
push
mov
xchg
pop
mov
sub
push
movsb
xor
cs
rep
int3
inc
dec
and
add
fucomip
mov
int
hlt
gs
and
imul
jns
test
mov
movsb
in
cltd
and
mov
shrl
arpl
clc
cmp
jge
out
popa
jnp
mov
insl
mov
sbb
push
rcrb
nop
mov
jne
das
aam
pop
cmp
add
push
xchg
inc
add
xor
xor
jns
cltd
repz
add
mov
mov
add
mov
lret
pop
aad
push
in
sub
xchg
mov
jl
jl
and
mov
mov
in
bswap
lds
fwait
adc
push
loopne
dec
cmc
gs
mov
xchg
lahf
pop
xor
stc
fsubrp
fwait
mov
popa
movsl
cltd
cmp
sub
fcmovnu
addb
pop
pop
popf
loopne
jl
or
cmpsb
xchg
in
aam
mov
sbb
push
xchg
add
mov
sbb
dec
aam
out
mov
push
mov
das
in
stc
sub
sbb
cmp
sub
leave
jl
mov
mov
jp
jb
or
jb
test
repnz
phaddd
xchg
daa
popa
out
jo
lahf
mov
push
shll
scas
and
pusha
inc
stos
cmc
add
dec
mov
mov
sub
xor
rol
out
mov
sahf
or
or
or
mov
push
sub
fidivs
icebp
gs
push
dec
fcmovnbe
and
and
outsl
pop
xchg
and
xchg
mov
nop
lret
cli
idiv
jne
push
and
mov
jmp
mov
or
jmp
sub
push
xchg
mov
enter
out
outsb
testl
lods
nop
int3
cld
mov
xchg
das
mov
mov
push
repnz
dec
pushf
hlt
fcompl
push
adc
inc
inc
xchg
jo
mov
add
push
adcb
out
cmpsb
adc
add
push
test
mov
out
cmpsb
pop
fcmovne
jp
mov
outsb
leave
dec
mov
mov
xchg
push
scas
clc
clc
xor
fs
add
or
outsl
push
push
test
or
les
pushf
inc
mov
into
xchg
stos
ret
sub
cld
xchg
outsl
leave
test
aam
push
das
jb
mov
and
ss
xchg
pop
xchg
sub
or
dec
and
fcom
mov
lcall
leave
adc
xor
or
push
sbb
or
mov
movl
dec
stos
sti
addr16
insb
jne
push
mov
pop
hlt
jg
rcrl
pop
xchg
dec
mov
loop
in
fstpt
lahf
pop
xchg
lcall
popf
push
cmpsb
loopne
icebp
imul
sbb
dec
sti
dec
test
mov
push
push
add
adc
test
mov
dec
loopne
sub
adc
loop
stos
nop
das
pop
jae
xchg
ja
adcb
sbb
or
push
rorb
jle
cmc
idiv
add
dec
adc
sti
addr16
xchg
jmp
test
imul
adc
mov
fimull
mov
addb
and
rcll
lret
mov
inc
imul
popa
jmp
sarb
push
pop
pop
gs
les
sahf
pushf
outsl
lret
mov
push
pop
fsubp
enter
mov
test
outsl
push
jg
cs
rorb
cmpsl
jmp
mov
push
or
jmp
xchg
out
mov
aad
pop
in
cmpb
pop
call
fstps
stos
push
jle
inc
lods
movsl
xor
fisttpll
xor
ljmp
jg
push
and
dec
sbb
aam
and
jb
sub
cs
mov
jmp
out
mov
inc
icebp
xchg
jecxz
and
mov
pushf
rcll
jb
inc
pop
add
sbb
and
jnp
daa
jp
push
jge
sbb
gs
lods
push
shll
mov
adc
pop
jae
and
insl
dec
sbb
ljmp
test
nop
mov
lret
dec
loope
sub
pop
push
push
daa
repnz
les
jge
cmp
in
cmpsb
enter
pusha
ja
jne
ror
or
ja
pop
popa
mov
inc
in
inc
or
jne
aas
pop
and
push
add
cs
mov
mov
pop
loope
xchg
enter
dec
mov
fisttpl
movsb
sub
mov
cmp
cmp
fwait
cmp
xchg
cld
sahf
push
and
cli
jmp
mov
bound
add
ret
mov
pop
sub
scas
sbb
sti
shll
push
sti
mov
xchg
jne
pop
pop
lea
or
pop
cmp
enter
add
pop
push
testl
or
es
test
add
popa
dec
cmp
int
ret
loope
iret
sbb
push
les
fidivrl
cmpsb
cwtl
mov
sub
mov
dec
cmp
jb
push
mov
stos
stos
adc
mov
xor
nop
stc
stc
call
dec
pop
inc
sbbb
pop
mov
les
push
in
mov
test
dec
lret
fbstp
or
std
ljmp
popf
fs
lock
xor
and
sbb
add
lcall
outsl
loopne
sbb
xor
cs
inc
xor
xchg
and
adc
dec
lods
aam
xchg
imul
mov
lcall
lcall
in
push
cmc
mov
xor
and
pop
pushf
fldt
loop
sbb
jae
test
pop
shl
test
jno
jne
cltd
jp
lahf
pop
sbb
int
mov
push
popa
xchg
sti
mov
dec
xor
push
out
sbb
loope
and
aam
mov
imul
push
stos
add
repnz
imul
mov
je
fwait
cmpsb
iretw
mov
cmp
cmp
sub
ret
dec
inc
jmp
xor
sahf
into
leave
push
out
insb
and
cs
or
mov
cs
stos
xchg
pop
outsl
in
pop
xor
pop
pop
pop
or
jecxz
adc
dec
pop
xor
pop
stc
addr16
push
call
js
dec
mov
inc
dec
xchg
loop
and
jnp
in
mov
mov
adc
addr16
addr16
and
jle
inc
inc
xchg
cmp
xlat
and
mov
cltd
mov
pop
push
cltd
mov
sub
inc
sub
adc
fistl
test
jge
add
jo
pop
inc
les
jo
dec
iret
sbb
cmp
std
sub
inc
repz
jecxz
mov
jb
mov
or
mov
outsl
cmp
lea
lret
inc
in
test
inc
jb
pop
loope
mov
cmovno
fcomi
inc
mov
jge
inc
lea
mov
test
pop
sbb
pop
test
scas
cmpsl
cmpsb
inc
mov
adc
call
jns
jae
fs
push
call
sub
sub
mov
imul
divl
imul
bound
mov
dec
mov
adc
clc
imul
les
and
ljmp
jne
xchg
bound
xchg
pop
dec
and
cmp
pop
mov
inc
lods
pop
xor
shrb
push
jo
add
push
adcb
mov
addr16
out
stos
pop
push
pop
test
rcl
mov
aam
incl
mov
fucompp
fs
inc
xlat
push
iret
sub
xlat
test
icebp
cld
aad
and
push
dec
ficompl
sub
rclb
cltd
push
ss
repz
jge
or
int
or
hlt
sbb
adc
pop
mov
lods
inc
ss
mov
jp
mov
mov
add
inc
and
mov
ret
fst
and
shl
test
jg
hlt
pop
jp
out
bound
xor
mov
inc
sti
in
lahf
pop
out
fwait
adc
scas
fwait
ret
adc
sbb
repnz
mov
mov
jecxz
out
cmp
ljmp
insl
pop
fs
into
sbbb
fldt
sub
addb
mov
ret
mov
fsubrl
out
shl
lods
xchg
push
aad
add
fwait
and
imul
outsl
mov
adc
jmp
shrl
in
pop
or
rclb
pop
xchg
adc
repnz
jno
cmpsl
test
push
pop
cld
or
push
or
sbb
loopne
fistl
cld
dec
fldt
loopne
xchg
mov
add
mov
mov
test
test
pop
jmp
jge
icebp
out
and
sub
stc
inc
in
ret
sub
push
addl
notb
daa
and
push
insb
mov
pop
pop
pushf
sahf
pop
popf
and
aaa
scas
in
outsl
outsb
std
cli
add
nop
aas
xlat
xchg
pop
lret
cmpsb
jne
shrb
push
dec
movsl
dec
xchg
insl
jae
lcall
cmp
inc
in
jno
mov
imul
pop
mov
dec
and
out
push
shl
cmp
iret
lods
push
ds
dec
dec
jle
je
add
dec
add
inc
in
testb
pop
negl
xchg
mov
fsubs
scas
xchg
mov
repnz
sub
jb
loopne
cmp
jnp
movsl
jl
mov
scas
repnz
adc
int3
xchg
fstpt
add
movsl
ret
test
and
push
imul
xchg
fmull
mov
add
and
dec
pop
lds
push
inc
sub
push
decl
jmp
cmp
xor
adc
dec
cmp
inc
and
inc
loop
loope
adc
in
dec
movsb
popf
int
cld
frstor
fwait
js
fsubrs
in
shr
jge
cmpsb
jns
pop
xchg
or
mov
sub
test
mov
mov
xchg
test
loope
mov
push
jb
decb
lods
jb
push
push
mov
dec
outsb
or
loope
pop
rolb
mov
je
sbb
fstpt
aaa
mov
notb
divl
dec
add
jno
out
rcl
push
das
in
icebp
inc
jnp
jo
shll
xchg
emms
cltd
fwait
cmp
in
fwait
cmpsb
pop
mov
jne
ss
xor
iret
rcll
push
aas
mov
aam
dec
ds
xor
int3
xor
movsl
subb
lahf
dec
leave
xor
add
xor
jecxz
fistps
adcb
ss
mov
jo
pop
stc
lret
movsb
aaa
insl
in
stos
xchg
sbb
fcmovb
dec
sbb
mov
popf
mov
push
sahf
outsb
push
jno
jb
mov
stos
and
adc
push
sbb
mov
repnz
imul
mov
dec
xor
repnz
pop
xchg
pop
jg
xor
jmp
sub
xor
sbb
jb
cmp
push
mov
mov
pop
cmp
or
imul
xchg
xchg
outsb
lock
or
push
lods
gs
out
add
jmp
js
xor
fisubs
sbb
lods
enter
fsub
call
fwait
in
xor
sbb
stos
mov
pop
movsl
cli
cmp
push
out
mov
adc
out
jb
jae
adc
push
mov
xor
or
mov
sub
lret
jb
iret
stos
xor
cmpsb
adc
adc
xchg
dec
aaa
stc
xchg
dec
xor
fnstenv
sbb
cmp
xchg
add
mov
mov
cmp
gs
add
xchg
arpl
fisubl
jns
add
lock
jbe
jge
loope
shl
mov
add
cmovns
stc
js
lcall
jmp
hlt
jl
pop
adc
xorl
push
incb
mov
pop
push
sbbb
out
dec
mov
dec
mov
add
frstor
and
cld
and
push
pop
aad
pop
enter
or
cli
cltd
jg
mov
pop
xchg
add
out
sbb
adc
imul
shll
fcomps
pop
add
xchg
shlb
xchg
adc
lret
loopne
sub
adc
insb
out
pop
dec
dec
xor
enter
cmp
pushl
xchg
popf
xlat
mov
xchg
sbb
mov
fnstcw
add
bound
lods
sbb
cltd
lret
je
inc
icebp
pop
dec
lret
shl
cmp
lds
inc
hlt
daa
ljmp
sub
pushf
mov
xor
pop
dec
aad
lods
or
imul
icebp
lock
xchg
jae
popa
nop
xor
add
mov
dec
popa
cmp
mov
sahf
movsl
and
data16
sub
out
lock
std
bound
aad
dec
xor
in
xorl
das
stc
sub
mov
push
pop
and
gs
sbb
loopne
cmp
pop
aas
lahf
loop
std
les
cs
cltd
vmread
sbb
insl
lods
and
lahf
mov
arpl
cmp
jp
nop
lahf
into
jl
clc
pop
int3
stos
stc
lods
or
adc
xor
jle
lahf
fwait
ret
hlt
cmp
sub
fwait
stos
jp
insb
js
lods
lods
mov
push
loopne
pop
add
adc
xchg
ss
repz
adc
add
ror
xlat
add
test
cmc
into
jmp
push
add
cli
orl
mov
fildl
fnsave
mov
movsl
sub
das
xchg
cmp
cld
stc
ret
sub
fwait
mov
jnp
or
xlat
adcl
cmpsb
inc
dec
fucomip
push
int
xchg
cmp
int
test
inc
jo
mov
inc
sbb
push
ret
cmpsb
loopne
pop
cmp
lock
sbb
or
jmp
std
js
xchg
dec
mov
mov
lock
and
xchg
jb
scas
push
mov
pop
xor
xchg
jmp
loop
xchg
sub
or
dec
cld
sub
push
addb
inc
sar
push
jg
and
xchg
push
scas
xchg
mov
xor
into
xor
shlb
mov
push
push
into
and
and
insb
jo
fistpl
scas
test
xchg
and
pusha
fstpl
into
push
jl
lret
in
les
inc
mov
in
stos
add
pop
lret
out
sbb
mov
lods
sbb
push
mov
push
shlb
push
ja
arpl
or
xchg
sub
mov
dec
in
pushw
push
xchg
shlb
ds
add
das
dec
push
sbb
std
arpl
sub
loope
push
ret
loop
test
outsb
cmp
fcomp
fwait
mov
lahf
ja
mov
leave
out
mov
fistpl
xchg
push
ljmp
add
jl
idivl
lods
pop
mov
dec
cmpsl
mov
sub
pushf
cmpsb
pushf
sbb
shrl
and
stc
fwait
pop
adc
jmp
std
mov
test
jno
adc
jge
jo
repnz
into
pop
das
adc
icebp
iret
stos
stc
push
dec
int
jmp
pop
push
dec
loop
adc
add
fbstp
pusha
xor
mov
iret
scas
cmp
enter
push
mov
cmp
fst
addb
loopne
mov
arpl
sbb
rcrb
cltd
rsm
orl
cmp
dec
lahf
and
sbbl
mov
fidivrs
dec
xor
test
pop
adc
shlb
stos
das
mov
mov
ffreep
cmpxchg8b
cltd
orb
jbe
mov
loop
push
loopne
lds
lret
push
arpl
mov
lods
mov
cmp
sbb
pop
jmp
das
shrl
std
push
pop
lret
mov
sub
jle
adc
dec
dec
ret
sub
rcrl
repnz
lods
bound
lret
mov
fwait
xchg
xor
pop
ret
dec
sub
and
aad
shlb
insb
mov
jge
inc
into
pop
xor
push
in
mov
adc
pop
cli
jge
and
clc
jecxz
in
sub
cltd
sub
and
xlat
in
push
popa
daa
push
dec
jle
es
cmp
add
iret
pushf
dec
lods
fcomps
push
adc
out
repnz
shl
addb
jmp
fcmovnu
shl
fldt
cs
mov
leave
xchg
pop
mov
leave
push
mov
dec
loop
fisubs
push
in
lds
push
push
out
fincstp
std
outsl
add
push
dec
insl
jns
dec
testb
dec
xchg
xchg
lret
fdivl
xor
fcoms
aaa
mov
xchg
in
xlat
xchg
gs
out
inc
mov
test
xlat
xorl
xor
pop
ss
pop
cmpl
aas
pop
scas
jae
mov
out
push
adc
mov
stos
inc
push
cmc
cltd
mov
fildll
push
add
cwtl
pop
add
decb
xor
sub
push
testl
fisubrl
dec
sbb
dec
das
in
jle
and
jns
xchg
cmpsb
loop
and
insb
in
dec
stos
sbb
jo
pop
push
lods
jb
cmpsb
sti
push
scas
jno
jecxz
sub
pop
loop
push
shl
js
xchg
push
test
fistps
fistps
mov
pop
push
ret
pop
mov
ljmp
mov
inc
cmp
and
jl
dec
ljmp
and
push
icebp
ret
aad
mov
adc
mov
sub
rclb
mov
jmp
leave
test
pusha
mov
stos
add
jnp
mov
das
push
and
sbb
pop
mov
sbb
repnz
xlat
pushf
lock
je
xorb
rdmsr
insl
push
rcl
pop
in
into
testl
jmp
xchg
pop
sbb
adc
dec
fiaddl
mov
dec
dec
mov
cld
test
sbb
js
xor
test
test
push
imul
sub
clc
sbbb
mov
adc
or
push
xchg
and
mov
mov
movsb
dec
pusha
xor
cs
dec
sub
jnp
pop
push
jl
xchg
mov
lret
lret
cmp
inc
imul
or
dec
adcl
push
cmpsb
repz
fsubs
in
fs
roll
sub
lods
icebp
xor
jl
sbb
pop
mov
daa
sbb
test
shll
outsb
and
lods
jl
sbb
loop
dec
jge
test
hlt
cltd
or
out
inc
cmp
sub
mov
add
cmp
lret
loopne
test
fldcw
xchg
fstl
stc
mov
cmpsb
pop
inc
inc
in
scas
in
cmc
mov
push
fwait
or
aam
pusha
inc
jns
jp
std
in
cmpsb
pop
adc
adc
cwtl
outsb
cmpb
arpl
inc
mov
xchg
gs
or
mov
sbbb
lret
xor
loopne
ss
mov
dec
testl
mov
loope
jno
mov
lahf
pop
ds
push
fs
imul
inc
add
lock
add
clc
pop
cld
xchg
cltd
dec
sub
cmp
cmp
cmp
xchg
xchg
inc
arpl
push
scas
mov
pop
add
lods
mov
inc
ss
mov
lea
std
scas
rolb
add
jl
jno,pn
and
xor
cld
push
xor
loopne
scas
mov
out
je
lods
repnz
and
inc
inc
mov
stos
rorl
lock
cmp
xlat
add
out
xor
roll
adc
xchg
int3
mov
stos
in
loope
daa
dec
sahf
jnp
add
je
xor
std
or
xor
inc
jo
aad
aas
test
cld
in
icebp
xlat
push
add
xchg
sti
movq
pop
cld
out
fcmovb
ja
jge
mov
stc
insb
lods
push
push
pop
sbb
mov
mov
pop
xchg
xchg
pop
or
out
dec
movb
mov
rcr
sbb
jae
nop
or
fidivs
or
mov
xchg
jae
push
pop
adc
lods
or
sbb
int3
into
divb
je
or
imul
inc
mov
jae
inc
hlt
cwtl
mov
daa
pushf
fwait
scas
int
popf
mov
iret
repnz
in
in
sub
popl
cli
stos
outsl
mov
ja
cmp
inc
jne
ljmp
pop
jnp
sbb
adc
mov
ret
jne
outsl
adc
je
xor
cmp
fdivl
xlat
adc
jecxz
or
roll
mov
rorl
outsl
mov
jne
xchg
xchg
adc
inc
push
add
lock
xor
cld
aad
push
mov
xor
in
fistpl
and
add
and
adc
sub
iret
mov
xor
or
jno
push
jbe
or
cmp
stc
test
adc
filds
imul
push
addb
sbb
hlt
shlb
outsb
xchg
loope
cmp
das
adc
adc
frstor
shll
out
push
lret
push
fisubrs
loope
xor
mov
mov
sbb
bound
xor
lods
or
mov
jb
dec
shl
in
sahf
lods
popf
push
xchg
xchg
lret
jns
jmp
adc
insb
sbb
mov
adc
dec
das
pusha
aaa
dec
call
test
adc
insl
pop
cmp
incb
sub
lds
es
loop
ret
pop
cmp
cmpsl
lods
ja
mov
jo
arpl
inc
addr16
pop
mov
adc
jne
xchg
xchg
mov
sti
cmp
fcompl
lret
cmc
push
out
adc
or
data16
cld
push
inc
pop
dec
enter
arpl
orb
sbb
psubsw
mov
cli
or
cs
mov
cmc
cld
adc
or
orl
mov
fldt
aam
into
ds
or
mov
xorl
fisubrs
mov
xchg
sub
into
mov
loop
jno
les
cmp
add
nop
xchg
jecxz
or
dec
push
mov
dec
xchg
cmp
fildll
jle
and
cmpb
xor
dec
mov
repz
inc
push
inc
daa
dec
push
jbe
and
push
add
mov
pop
cltd
loopne
fwait
inc
scas
mov
or
outsl
push
adc
insl
in
in
mov
nop
lods
sub
lds
dec
mov
mov
iret
insl
int
ss
and
bound
in
ret
lods
rorb
lods
adcb
shlb
dec
xchg
daa
jecxz
sbb
mov
pop
mov
aam
test
dec
lea
sbb
mov
mov
sub
sub
sub
cmp
mov
negl
jb
cli
mov
xchg
mov
pop
mov
jle
push
orb
inc
movsl
pushf
push
mov
cs
repnz
imul
pop
or
dec
pop
lcall
cli
insl
popa
scas
xor
aas
hlt
push
cmp
js
or
xchg
and
stc
mull
jl
stc
push
sarb
adc
mov
xor
lock
hlt
insl
jg
mov
repnz
shr
pop
cmp
lods
js
lcall
and
stos
cmp
test
mov
mov
adc
lahf
mov
push
jmp
mov
inc
jae
movsb
adc
lahf
xchg
fidivs
jae
xchg
in
cmp
inc
enter
or
lock
add
push
popf
mov
fcoms
sub
pop
lcall
and
mov
jo
mov
roll
sub
sbb
repnz
sti
aad
ljmp
jl
in
cld
pop
daa
test
mov
xor
pop
jbe
xor
inc
sarl
pop
inc
test
lcall
ss
adc
ficoml
mov
in
sbb
rol
repnz
das
lock
dec
dec
insb
lahf
dec
jge
jmp
push
jae
jo
cmpsl
xor
lret
pop
es
fsubl
jmp
push
bound
and
and
jg
pop
in
dec
lret
movsl
mov
jnp
test
sub
jnp
sub
loop
daa
repz
jl
jne
int
mov
adc
loopne
fs
sub
inc
in
ss
pop
push
dec
repnz
lods
call
stos
sub
push
movb
pop
add
mov
and
je
and
subb
cmp
cltd
xor
dec
aaa
fwait
and
jns
xchg
int3
mov
xchg
jb
mov
pop
push
les
adcl
lock
sub
into
fsubrl
lret
mov
es
adc
mov
jbe
rorb
scas
or
sbb
xor
inc
and
pop
aas
cld
dec
imul
jmp
mov
or
dec
xchg
mov
scas
shrl
imul
loop
and
mov
jae
shlb
or
xlat
pusha
mov
dec
les
incb
test
ret
test
push
xchg
dec
jno
shr
clc
sar
or
mov
repnz
or
cmp
mov
and
cltd
xchg
shl
cltd
xchg
mov
mov
mov
add
movb
js
mov
sbb
jne
mov
push
jmp
add
cmpsl
imul
adc
push
pop
sub
shll
or
fwait
jne
gs
fbstp
xor
test
sub
movntq
sbb
cmp
psrad
cmp
mov
rclb
mov
xchg
push
call
push
pmulhw
loopne
out
popa
push
or
mov
repz
push
mov
and
add
popf
mov
lock
inc
sbb
and
sbbb
outsl
cmp
mov
inc
mov
pop
and
push
clc
ret
jb
bound
icebp
and
sbb
lods
sbb
cli
and
outsb
xor
push
pop
adc
dec
sbb
inc
shlb
lods
testb
cmp
test
rclb
sbb
fisubs
adc
in
ss
mov
ds
adc
and
repz
inc
pop
sbb
nop
cld
inc
ja
mov
test
clc
ds
fcomi
push
outsl
lods
push
jp
dec
or
std
movsl
mov
cmp
sub
imul
xchg
sbb
arpl
into
cmp
cmp
and
cs
pop
xor
ret
xor
jmp
jge
fs
sbb
out
xchg
test
and
pusha
lock
xchg
cli
push
dec
push
pop
rclb
jae
mov
outsl
or
out
sub
arpl
stos
popf
xchg
ret
xchg
xor
jge
subb
and
lcall
lahf
push
xorl
pop
mov
leave
arpl
shr
xchg
rorl
cmc
inc
xor
mov
mov
sahf
gs
xor
notl
lods
or
idivl
jle
fnstcw
push
jl
sub
ja
mov
xchg
stc
push
mov
adc
sub
rcrl
cmp
xor
fwait
xchg
js
jne
fsubrl
sbb
push
lret
jmp
mov
outsb
xor
sbb
loopne
les
scas
pop
pop
and
dec
outsl
jle
stos
cld
aas
aam
lea
mov
mov
cwtl
es
and
cmp
insb
popa
jb
inc
fxch
and
xchg
add
adc
lretw
dec
nop
imul
or
xor
rcl
mov
loope
loopne
jo
cmpl
cmp
mov
aaa
clc
pusha
jnp
dec
adc
sar
fisubl
jo
dec
mov
push
jo
cs
pop
dec
sbb
jmp
lret
hlt
pop
pop
mov
mov
mov
push
rorw
cmpsb
hlt
jecxz
pop
in
dec
dec
insb
mov
lods
out
shlb
pop
inc
cmc
scas
sbb
jbe
bound
andl
or
push
pop
cmp
sbb
mov
cmp
out
sbb
out
cmp
or
or
lret
and
lcall
mov
xchg
mov
jecxz
sub
pop
xor
in
movsl
lock
pop
cwtl
push
jno
add
imull
push
lds
and
aaa
shrl
mov
mov
stc
std
mov
mov
movsl
xor
subl
cmpsl
push
push
shl
pop
test
adc
mov
clc
mov
jl
or
pop
pop
jle
cmp
mov
popa
xor
jg
sbb
rcl
loope
sub
or
mov
lods
cmpsl
repnz
clc
push
sub
out
sub
jp
pusha
repnz
xor
xor
xchg
push
cmp
inc
dec
xchg
sbb
xchg
hlt
and
mov
test
inc
pop
jbe
cmp
add
sub
fpatan
cmp
repnz
je
addr16
sub
shrb
out
and
jecxz
xlat
fstpt
pop
jmp
arpl
jle
add
andb
je
adc
aad
inc
push
out
add
jp
or
fistps
mov
enter
mov
xlat
xor
stc
test
dec
cmp
or
sub
loopne
ret
mov
jmp
or
pop
ret
pop
leave
std
mov
sbb
lods
leave
xor
dec
push
mov
add
jecxz
out
ljmp
fisubrs
scas
inc
dec
shll
jb
xlat
sub
mov
fisubrl
mov
pop
in
test
test
out
xor
pop
xchg
push
mov
inc
lods
push
add
sbb
push
sbb
imul
inc
xor
xchg
cmp
insb
mov
in
scas
popf
pop
daa
mov
fdiv
cld
or
pop
adc
pop
push
out
rcrl
in
cmp
jmp
mov
mov
sbb
dec
mov
rcll
cmp
and
inc
add
mov
call
jmp
adc
loopne
aas
movsb
int3
lods
mov
gs
repnz
sub
sbb
popf
and
popa
mov
adc
xchg
in
jb
cltd
adc
lock
sub
cltd
sarl
popf
xchg
sub
adc
mov
out
and
jae
mov
cmp
jns
pop
inc
mov
imul
jo
shrl
cmc
ret
jbe
mov
ret
std
hlt
addr16
mov
stos
and
pop
pop
mov
addr16
incb
ffree
mov
mov
int3
mov
dec
dec
insb
add
stos
inc
ja
and
jo
mov
rsm
xorb
xchg
dec
mov
mov
in
orl
test
subl
gs
pop
add
repz
push
je
enter
cltd
out
pop
pushf
aas
pop
and
call
cld
fsubrl
and
push
mov
add
out
mov
xchg
fldl
and
std
sbb
add
sub
sub
pop
outsl
jns
mov
sbb
or
push
je
cmp
mov
jbe
xor
cmp
and
jl
aam
sbb
mul
outsb
cli
sbb
xor
iret
ja
insb
sti
sbb
scas
stc
popa
pop
mov
leave
mov
jmp
ja
inc
lods
or
idivb
or
iret
mov
inc
and
jno
xchg
aam
add
in
dec
or
jl
push
mov
repz
mov
clc
cmp
in
mov
add
nop
int3
es
icebp
mov
loopne
mov
popl
les
es
notl
cs
test
lret
add
ds
cmc
jmp
jl
cs
aaa
stos
out
lods
push
in
mov
pop
push
add
bound
pop
leave
sbb
xchg
iret
push
faddl
mov
pop
mov
dec
sub
and
xchg
xchg
adc
fisttps
add
sbb
aam
fmull
sub
lret
push
sbb
mov
shrl
add
pop
pop
push
push
das
gs
fdiv
mov
aaa
fwait
out
mov
xor
lahf
data16
fmull
or
inc
stos
cli
movsb
mov
add
loopne
rcrl
lods
pusha
sbb
fdivs
jecxz
sub
loope
testl
push
out
cmova
pop
dec
sub
jmpw
add
or
xor
arpl
or
popl
mov
xlat
cmc
popf
add
or
mov
mov
ret
rorl
lcall
lret
stos
movsl
data16
lock
shlb
aam
inc
add
add
xor
pop
xor
test
js
sbb
lds
mov
lcall
xchg
dec
ror
cmp
out
xchg
pusha
popa
inc
adc
push
fcmove
mov
aad
mov
jg
mov
xchg
adc
sub
dec
movsb
jmp
ret
xchg
into
scas
jno
mov
fs
mov
sub
in
inc
sbb
pop
dec
sub
inc
pop
sub
or
sti
out
dec
xor
jne
inc
push
inc
mov
shll
aam
hlt
push
xchg
push
xor
xchg
dec
pop
ss
mov
aam
movsl
cmpsl
ret
in
int
leave
xchg
loope
jg
iret
adc
pop
jp
mov
mov
cmpsb
in
fisubs
inc
imul
add
lahf
insl
fwait
mov
inc
and
sbb
or
lret
add
add
and
cmpsb
loope
call
pop
and
lock
adc
out
mov
in
fwait
inc
ds
ret
mov
xchg
push
repz
or
pop
loopne
test
dec
xlat
cmp
mov
testl
and
fists
xor
mov
les
call
mov
stos
call
repnz
sub
repz
mov
mov
lret
mov
jae
aam
or
pop
xor
enter
mov
cmp
push
popf
lock
andl
loope
cmpsb
mov
mov
into
ja
xor
shrb
cmpsb
mov
mov
mov
sbb
frstor
stos
pop
dec
sub
in
divl
or
orb
mov
push
ds
xchg
imul
mov
clc
stos
movsb
lods
insb
out
jecxz
loope
jne
sub
dec
inc
out
sbb
dec
sti
sarb
das
sahf
leave
fcmovbe
movsb
fwait
cli
push
repz
jb
pushf
sub
pop
jne
das
imul
leave
push
push
add
leave
mov
inc
mov
cs
xchg
jae
fistpl
pusha
dec
jns
lock
fcomps
test
jae
or
mov
ss
pushf
jnp
cmp
icebp
sbb
lret
inc
cld
test
es
shll
and
add
fsubr
sub
insl
cltd
fsubl
xor
sub
xchg
sub
xor
jnp
xor
add
std
in
push
adc
mov
inc
fs
mov
xchg
and
jae
fs
mov
mov
imul
lahf
mov
dec
pop
push
push
mov
dec
lea
test
xchg
daa
push
mov
sbb
mov
or
xchg
pop
std
jmp
xor
jmp
cmp
inc
ficoms
test
push
outsl
ja
push
or
aaa
cltd
daa
rcrb
adc
xchg
xlat
mov
and
jecxz
mov
push
std
mov
xor
inc
mov
mov
jge
xor
push
sbb
nop
add
sbb
loop
cwtl
jecxz
test
data16
popf
rcll
insb
pop
xchg
int
sub
dec
orl
or
xchg
push
test
jle
rclb
jg
mov
push
arpl
test
mov
std
dec
ljmp
outsl
push
testl
and
sarl
xor
or
dec
and
out
pop
int
adcb
lcall
and
adc
clc
fisubrl
mov
testl
sbb
mov
push
sar
mov
dec
ret
xorl
adc
mov
insb
push
add
adc
cmp
and
arpl
mov
es
cli
pop
mov
xchg
mov
shll
outsl
cltd
jg
pop
jmp
imul
jo
xlat
fcomps
std
pop
inc
xlat
sbb
mov
stos
test
imul
rcll
dec
ds
add
sbb
and
mov
push
movsb
cmpsl
push
outsl
mov
mov
inc
dec
fmuls
ljmp
rcrb
inc
cltd
cmp
sbb
imul
repz
xor
es
jp
mov
inc
int3
add
popa
xchg
clc
movsb
mov
mov
push
or
inc
sub
jmp
jns
xor
lcall
nop
jge
fdivrs
pop
adc
dec
or
mov
push
test
call
iret
mov
dec
xor
test
inc
and
sbb
movsl
xor
inc
out
adc
sti
aas
movsl
mov
sub
and
ret
lds
cmc
data16
jle
cmc
and
movsbl
lods
iret
cmovp
test
mov
les
jge
arpl
cmp
and
aaa
sub
jl
fprem
loope
pushf
sahf
xchg
ficoml
hlt
mov
cmp
es
arpl
sub
push
out
orl
xchg
out
mov
sub
push
leave
add
xchg
xchg
mov
hlt
aam
xchg
sti
mov
orl
cmpsb
stos
repnz
sbb
cmp
stos
iret
hlt
rcrb
call
fmull
push
out
scas
jge
sbb
aad
mov
xchg
sbb
insl
nop
lcall
rcll
sarl
inc
lds
out
unpcklps
jns
andl
jl
jns
shll
aam
les
mov
xlat
dec
cli
and
clc
xchg
fistl
mov
pushf
sbb
ds
push
imul
iret
dec
daa
lods
lods
mov
out
jno
mov
or
cmp
xchg
test
push
pop
cmpb
mov
xchg
inc
cltd
and
pop
xor
fwait
mov
shrb
or
data16
cli
shlb
push
add
adc
in
cmpl
mov
xchg
scas
sbb
jmp
add
jo
movsb
cwtl
xchg
ret
mov
xor
rcrl
add
jmp
or
cmp
and
sbb
loope
iret
push
bound
test
pop
cmp
jnp
lods
inc
mov
lods
pop
into
and
xchg
cmp
dec
das
xchg
add
mov
or
out
out
jnp
add
adcl
mov
mov
dec
ljmp
pop
dec
xchg
loopne
inc
add
addr16
and
lods
aaa
fidivrs
lds
fwait
cmp
addb
icebp
les
ss
insl
sub
mov
stos
adc
rorl
rcrl
in
fcoms
cmpsb
out
add
out
adc
cld
push
in
sbb
pop
xor
sub
loop
push
sbb
add
cmp
add
es
push
mov
popf
pop
jne
cs
std
ret
pushf
inc
cmp
out
std
push
sub
es
jmp
in
pusha
sbb
sub
push
mov
mov
mov
aad
stos
jl
jge
outsb
gs
xorl
mov
jb
outsl
xchg
jmp
xchg
inc
add
into
or
xor
in
mov
xchg
or
pop
dec
mov
sbb
call
pusha
pop
lods
popl
and
out
jo
jl
in
and
rorl
popa
sti
ret
mov
mov
inc
push
lea
pop
int
popa
icebp
jne
xor
gs
xor
sub
inc
pop
xchg
pop
mov
cltd
ja
push
mov
xchg
rorl
and
add
imul
mov
xor
fiadds
cmp
push
jge
dec
sbb
ret
js
cmpsl
sti
loopne
jno
add
xchg
aaa
pop
and
in
hlt
dec
ljmp
pop
mov
jecxz
insl
es
outsl
pop
xlat
mov
ret
pop
mov
movups
loopne
dec
mov
aad
call
in
xor
imul
rolb
pop
cmp
xlat
inc
int
daa
pop
sub
inc
pop
adc
add
mov
xor
xchg
lds
pushf
loopne
sbb
mov
and
ljmp
xchg
push
or
pop
loope
push
out
xor
mov
xor
rcrb
xor
test
mov
jp
mov
imul
sahf
sbb
movsb
bound
ds
in
mov
mov
jae
lea
sub
xchg
mov
into
into
jne
xor
enter
fdivs
or
ret
pop
push
fcomps
ljmp
mov
pop
and
lds
loopne
aas
push
aam
out
fsubrs
sub
sar
mov
imul
sub
fistpl
call
sub
xchg
out
dec
and
hlt
xchg
xchg
sub
hlt
imull
xchg
xchg
sbb
xor
imul
test
sbb
roll
sti
jns
lock
imul
subl
xchg
dec
scas
mov
js
mov
xor
loop
pop
add
mov
insb
mov
ret
mov
pop
incb
cld
adc
shlb
shrl
cmpsl
call
orl
sub
xor
cmpsl
inc
and
data16
sbb
fsubs
ds
or
subb
lret
jns
nop
ss
push
xor
jbe
cmp
mov
add
and
xchg
loopne
cmp
lods
bound
inc
adcl
pop
or
dec
cmpsb
in
lcall
repnz
out
xchg
cmp
jl
cmpsb
fs
cs
fisttpl
lret
push
push
or
loope
xor
pop
in
jb
cs
sub
or
adc
gs
adc
aad
pop
mov
jp
add
data16
das
mov
and
jne
stos
fxam
rolb
fistl
xlat
sub
or
pop
mov
lock
push
das
push
xchg
nop
inc
pop
dec
xor
jmp
ja
popf
aam
xor
xchg
xchg
outsb
ljmp
add
mov
stos
cltd
cmp
outsb
add
dec
bound
imul
or
push
and
dec
push
repnz
adc
stc
sbb
jge
jg
dec
jbe
push
mov
or
ficomps
lcall
sbb
fs
fdivl
fistpl
in
xchg
ds
in
xor
pop
push
aaa
arpl
mov
int
add
inc
xor
add
cmp
enter
jmp
and
out
pop
out
clc
in
cmc
add
xor
cmp
stc
imul
pushf
add
pop
or
ret
mov
repnz
arpl
mov
in
test
jge
xchg
and
shl
scas
and
je,pn
pop
add
inc
dec
data16
shrb
fstps
dec
adc
mov
ljmp
push
cld
cmp
aas
jo
notl
pop
xchg
pushf
mov
mov
imull
mov
pop
lret
inc
mov
loope
jg
jo
repnz
push
jb
mov
sub
pushf
mov
sbb
dec
push
int3
lret
inc
aaa
popf
movsb
fildl
pop
sbb
lds
pop
bound
shll
mov
jp
into
je
insl
mov
mov
mov
or
push
mov
outsb
fstp
mov
loope
fldt
je
pop
push
mov
inc
jo
push
dec
ret
int
js
mov
popf
push
mov
xor
mov
jne
mov
add
das
rol
mov
push
call
mov
jne
out
and
or
imul
sub
push
lock
inc
mov
in
mov
mov
vmptrst
pop
lahf
mov
test
and
jl
push
sub
jp
cmp
pushf
je
iret
mov
mul
jbe
xchg
pusha
cmpsl
icebp
lret
cld
dec
jo
or
lods
dec
add
repz
xchg
and
inc
data16
dec
pop
push
add
xchg
fldl
cwtl
push
bnd
fidivl
pop
enter
dec
push
dec
adc
leave
je
das
push
inc
xchg
int3
popa
add
cmp
andb
xor
aad
fs
bound
dec
arpl
or
and
aas
and
test
addr16
mov
addb
cs
lock
inc
lea
xor
sub
adc
not
lods
cwtl
mov
jb
sbb
add
inc
stos
in
int
repz
rorl
cs
and
mov
fldl
int3
jg
lds
sbb
divl
aad
movsl
push
jae
push
outsb
pop
cwtl
pop
clc
sbb
jle
mov
cwtl
push
fstpl
mov
loop
lods
or
push
aaa
ficoml
push
push
cmp
and
adcl
movb
jg
lret
popa
adc
sbb
mov
loope
lret
inc
lret
dec
daa
sub
sub
push
cld
and
in
mov
add
into
ds
jmp
out
test
xchg
sbb
adc
inc
shll
js
pop
mull
lahf
test
fwait
xor
cld
pushf
lahf
jnp
cmp
in
flds
adc
xor
cmp
push
jg
stc
daa
aad
or
lds
xchg
loop
iret
push
mov
adcl
insl
jecxz
adc
dec
adc
pop
in
lcall
mov
pop
xor
sub
sub
mov
rcrl
sbb
sbb
mov
jmp
cld
ret
stos
in
lock
inc
mov
sahf
fiadds
out
into
or
int3
push
in
dec
push
push
iret
jecxz
jno
mov
mov
pop
in
xlat
loop
test
pop
adc
jbe
mov
push
dec
cmp
cli
pop
loopne
ja,pn
sbb
jecxz
xor
jp
sbb
out
pushf
push
les
bound
jae
out
xchg
out
cmc
rclb
cmpsl
lahf
jb
adc
xchg
adc
lcall
jne
mov
fisubrs
mov
das
push
push
mov
inc
mov
sbb
aad
std
outsl
cli
jecxz
mov
out
mov
ret
scas
subb
lret
ret
inc
xchg
cs
sub
decl
add
ret
push
dec
ret
adc
insl
and
jecxz
xor
iret
sub
call
jg
pusha
andb
adcl
push
dec
xchg
pop
stc
sarb
jnp
ja
dec
icebp
rcl
loop
mov
pusha
sub
pop
or
cmp
mov
sbb
dec
sub
xor
cmp
outsl
sub
sub
lods
andnps
mov
xlat
cmp
test
aaa
mov
xchg
jecxz
cmpsb
iret
mov
adcl
loop
xlat
inc
clc
jns
repz
bnd
jbe
lds
loope
jbe
cmp
mov
sub
add
mov
das
push
sbb
cwtl
pop
pop
add
or
popa
xor
cs
daa
mov
outsl
in
ljmp
jo
xor
jnp
movsl
jle
es
scas
inc
mov
jno
std
sahf
call
fsubrl
ljmp
push
pop
cld
push
daa
push
or
xchg
inc
test
xlat
sbb
fdivrl
ss
inc
adc
lea
cmp
mov
pop
jo
jnp
jge
lods
fs
inc
cli
pop
add
xorb
jmp
pop
hlt
mov
int
sysexit
dec
mov
loope
pop
pop
jge
xchg
ret
lea
sbb
test
adc
jecxz
imul
lcall
icebp
mov
add
aaa
sahf
xchg
in
testb
cmp
stos
cmp
mov
cld
repnz
lret
cs
shrl
enter
out
pop
xchg
mov
add
in
mov
out
xor
xor
jae
adc
lods
pop
jnp
mov
push
push
rcl
dec
xor
pop
jns
xchg
loopne
push
sti
jmp
lock
xchg
inc
add
imul
jle
jno
push
pop
stos
arpl
or
lds
add
insl
call
xchg
aaa
mov
push
stos
fnstenv
dec
xchg
mov
loope
lret
imul
push
ret
xor
fsubs
sub
cmc
iret
gs
into
cmc
or
sbb
stos
push
lds
and
sub
mov
add
test
mov
or
push
jno
jb
mov
inc
jecxz
cmc
sub
jmp
mov
rorb
mov
adc
jecxz
xorb
mov
jg
sub
aaa
arpl
icebp
jb
and
je
sbb
pop
cld
cmp
cmpsb
das
mov
in
cwtl
outsb
insb
sbb
pushf
cld
in
fildl
mov
fs
loop
addr16
cmp
jb
push
stos
jg
rcll
xlat
xor
xchg
ret
adc
push
jne
inc
dec
dec
push
in
push
jnp
and
mov
mov
cmpb
jp
aam
mov
cmpsb
and
xor
inc
fcoms
adc
daa
rcll
test
xlat
cmp
cld
negb
pop
pop
push
mov
and
arpl
fsub
cmp
cmp
nop
adc
call
cltd
out
int
push
nop
push
ljmp
test
inc
sbb
push
jmp
mov
cmp
repz
cmp
push
or
pop
nop
xor
ljmp
xor
jecxz
cltd
cmp
adcl
test
xor
stc
sbb
loop
in
or
dec
repnz
adc
xchg
test
out
insb
push
dec
cmp
jg
addr16
adc
dec
jns
mov
insb
jns
xchg
dec
mov
mov
cs
mov
add
pop
adc
and
push
and
in
bound
jb
sahf
fdivrs
add
nop
xchg
insl
clc
clc
shlb
ret
inc
sbb
stos
sbb
adc
inc
pop
test
adc
mov
out
cld
popa
xlat
movsl
jl
fwait
or
adc
jns
cmp
push
in
push
jp
cmc
int3
ret
add
sub
pop
jno
or
pop
add
shll
adc
push
jnp
mov
aas
jno
aas
movhps
aaa
xor
jb
lock
int3
pop
cmp
pop
cmpsb
ret
cwtl
cmp
out
test
scas
push
jge
icebp
fidivl
nop
je
xchg
and
mov
cmpl
loopne
nop
add
sub
dec
iret
push
cmp
inc
mov
insl
cmpsb
lock
arpl
jno
arpl
and
sbb
test
outsb
test
lds
out
enter
popa
arpl
or
pop
mov
cs
mov
xchg
push
mov
daa
dec
mov
gs
xor
fwait
xchg
fnstsw
push
xchg
clc
adc
jb
pop
dec
lods
inc
cmp
cmpsl
and
pop
out
mov
xchg
jns
push
leave
test
insl
jg
sub
insl
fsub
xchg
or
sbb
es
out
cmpsb
cmp
add
ljmp
sub
pushf
rorb
push
dec
data16
rcr
adc
jmp
outsl
cmpsb
mov
add
xorb
sub
scas
mov
ljmp
jmp
cmp
mov
xchg
ljmp
fs
fwait
loop
cs
sbb
leave
lds
or
in
enter
pop
mov
pushf
xor
stc
xchg
movsb
add
adc
or
dec
stos
js
add
xor
fwait
adc
dec
push
adc
add
sti
pop
es
mov
add
push
jmp
cld
mov
and
test
rorb
dec
cmp
ret
test
or
mov
add
and
pop
ret
lods
mov
inc
repnz
xchg
add
fnstcw
add
dec
cmp
push
or
lret
jne
js
inc
loopne
push
mul
jno
or
bound
int3
cmp
cmp
les
popf
repz
pop
imul
ja
mov
in
movsl
dec
or
inc
push
adc
repnz
rorb
in
sahf
fists
rcrl
lret
jns
lods
pop
out
imul
adc
ja
aad
mov
mov
sub
xchg
subl
imul
icebp
out
dec
or
adc
cmp
into
add
lock
sbb
es
insb
sub
dec
les
sbb
xchg
xorl
jns
fisttps
scas
lock
xchg
movsb
inc
xchg
aad
jne
out
jne
call
push
push
daa
xor
cmp
push
loopne
mov
xchg
mov
test
mov
pop
je
stos
fmull
or
or
in
dec
mov
inc
cwtl
ficompl
inc
sahf
jbe
out
pushl
in
mov
sub
push
dec
cmp
es
inc
pop
pop
pop
fs
inc
decb
shr
popf
mov
shl
sarl
movsl
imul
pop
mov
adc
imul
jp
xor
stos
and
lahf
jae
jns
jb
mov
or
push
mov
xchg
pop
mov
mov
hlt
stc
mov
xor
and
xchg
pop
inc
popa
cmp
fs
lods
mov
pusha
mov
leave
orl
aas
xorb
jne
addl
adc
add
sub
push
adc
lods
in
scas
inc
and
xor
xor
sbb
sbb
sbbb
in
adc
movsl
popf
cwtl
pushf
pop
mov
sub
sub
inc
cwtl
adc
popa
mov
push
lods
adc
int
sub
mov
and
cmc
adc
sbb
push
inc
mov
push
test
and
xor
pushf
addr16
out
ds
add
mov
cmp
xchg
cmp
iret
aad
fwait
aaa
jns
dec
adcb
jno
cmp
mov
rclb
sbbb
push
mov
addr16
iret
xlat
out
sbb
lods
cmpsl
push
repnz
stc
cmpsl
repz
js
test
sti
cmp
cmpsb
xchg
jmp
sub
sub
out
dec
jg
xchg
and
mov
loopne
jle
subb
add
loop
pusha
mov
pop
nop
cmp
jae
sub
and
adc
fcoml
adc
movsl
test
jl
loop
scas
inc
and
movsb
iret
add
int
orl
pop
mov
lahf
repz
jl
ret
call
cmp
fbstp
mov
jne
lock
jmp
xchg
imul
bound
xchg
fstl
pop
push
jg
ss
in
roll
int
xorl
sub
jmp
mov
jo
fs
mov
sub
inc
inc
sub
or
lret
jne
loope
mov
jg
mov
arpl
sti
int
jge
xchg
ljmp
add
mov
push
pop
xor
inc
mov
jle
pop
cmp
jb
mov
cmp
dec
mov
jl
jecxz
mov
addr16
xchg
out
repz
popf
add
xchg
test
cmc
sub
jbe
or
out
or
movsl
call
sub
pop
dec
scas
xchg
jne
jle
dec
push
mov
enter
inc
dec
std
cmc
push
adc
in
xchg
rcl
scas
mov
mov
jmp
lret
add
inc
dec
aas
push
fs
pop
pop
sbb
cmp
mov
cmp
cmp
sub
cmpsl
or
xor
in
mov
adc
adc
cld
mov
push
xor
in
sahf
faddl
sti
jne
adc
incl
jb
or
dec
adc
cmp
addb
jge
mov
sub
xchg
mov
cltd
aam
je
jl
imul
int
sub
cmp
xchg
push
xor
shr
dec
leave
sbb
sahf
cmp
dec
stc
ficomps
fwait
sub
adc
pop
mov
xchg
mov
mov
in
leave
sbb
sahf
sub
addl
adc
pop
inc
mov
jnp
es
ret
pop
divb
mov
jo
ficoml
add
pop
sbb
pop
xor
sbb
fwait
shl
dec
cmp
mov
clc
imul
pop
mov
jp
mov
mov
sahf
insl
jl
inc
cwtl
sbb
popa
orl
jle
es
adc
fs
adc
repz
inc
sbb
mov
dec
imul
push
insl
repnz
mov
hlt
rcl
rcr
lahf
ret
or
and
xchg
mov
lods
and
shrl
mov
push
rorb
or
aam
ficomps
ss
stos
outsb
or
incb
mov
fdivrl
outsl
mov
fidivrl
ret
mov
andb
add
cmp
pop
pop
mov
je
dec
imul
pusha
enter
or
insl
and
mov
loop
mov
inc
test
dec
les
aaa
ffreep
jbe
mov
xchg
mov
jb
lret
cs
lock
xor
daa
insb
mov
mov
notb
jle
push
fimull
movsb
sub
pop
mov
mov
add
sbb
push
icebp
hlt
mov
mov
repnz
loop
ret
inc
adc
cmp
insl
push
je
mov
cmc
pop
shlb
in
xlat
push
adc
sub
in
mov
jb
subl
mov
imul
jl
sar
mov
jmp
scas
fldenv
xchg
lock
xlat
or
sbb
mov
in
jbe
lcall
xor
mov
mov
mull
mov
lea
add
mov
mov
and
ljmp
push
jnp
mov
jbe
enter
cmp
stc
sub
sbb
jmp
push
sub
testb
out
push
sub
lods
clc
imul
or
dec
imull
fwait
dec
in
rcl
sahf
inc
leave
add
cmp
leave
fxch
dec
push
les
sub
push
cld
mov
ja
pop
pop
ds
pop
pop
jp
or
xor
add
imul
sbb
sbb
repz
shr
arpl
xchg
sub
lds
insb
xor
fldt
lds
add
js
sbb
and
cli
pushl
addr16
sahf
xchg
in
jo
cmp
pop
jge
jbe
cmpsl
loopne
sub
loop
test
cmpsb
stos
in
js
arpl
mov
inc
sbb
stos
push
cmpb
imul
arpl
iret
jg
gs
fucomi
aam
xchg
mov
push
inc
jno
pop
stos
gs
sbb
mov
out
sub
sub
or
xlat
xor
pop
add
mov
out
add
xor
mov
add
dec
mov
pop
mov
xchg
xchg
cmp
xor
out
mov
mov
int3
dec
es
jo
shll
or
sub
rcrl
xchg
rcrl
gs
fisttpl
xchg
dec
sahf
dec
roll
xor
test
push
cwtl
push
mov
ja
movsl
in
pushf
lock
xchg
xor
pop
mov
sub
cli
pop
mov
push
mov
jo
inc
subb
xchg
pusha
xchg
adc
popa
inc
ss
jmp
in
sub
pop
sub
mov
sbb
pop
push
add
insb
or
push
xchg
sti
dec
sub
popa
scas
cmp
shlb
repnz
dec
sbb
pop
xchg
add
out
add
lcall
dec
add
add
dec
lcall
ljmp
mov
mov
les
movsl
test
repz
rolb
stos
cmp
add
push
push
rorb
cwtl
mov
jbe
sub
sbb
push
mov
call
in
or
add
dec
dec
and
pop
dec
ds
lcall
push
push
jecxz
mov
sbb
xchg
icebp
inc
inc
push
pop
xlat
jo
mov
push
pop
movsl
gs
andb
sbb
jns
mov
or
imul
or
or
mov
movsl
lods
ja
adc
nop
fwait
mov
mov
xor
mov
lods
or
mov
xchg
imul
test
adc
mov
lea
or
adc
mov
lds
daa
jecxz
call
ljmp
inc
addl
pop
mov
addb
ss
fdivrl
fst
xchg
cltd
daa
stc
or
insb
inc
testl
je
aam
in
rorb
hlt
lea
adc
inc
jmp
adc
insl
pop
xchg
dec
js
test
pop
ror
adc
js
mov
sarl
pop
fs
jmp
test
mov
into
push
jl
pushf
rcrb
xchg
dec
fidivrs
jo
jne
mov
and
ds
lret
mov
ret
adc
aas
ds
mov
mov
or
jnp
lock
ret
sub
xor
cmpsb
pop
or
dec
testb
hlt
inc
test
sub
shlb
mov
testb
es
stc
lahf
mov
xchg
push
in
sbb
clc
add
iret
imul
or
enter
nop
fs
es
or
lods
xor
push
call
mov
lea
ja
or
jo
repnz
lret
xor
inc
dec
ficompl
adc
xor
cli
or
and
sub
adc
adc
mov
jb
call
cmc
mov
push
cli
xchg
jno
aaa
sbb
dec
mov
inc
mov
mov
test
adc
adc
rcll
imul
mov
mov
inc
insb
push
inc
jbe
mov
xchg
leave
adc
aad
jno
ds
pushf
sub
pop
push
or
xchg
imull
inc
pop
rcrb
pop
popa
lret
sub
popa
xor
xchg
pop
xchg
stos
pusha
int3
mov
pop
insb
iret
ret
adc
fs
fdivl
ss
shl
dec
adc
inc
adc
push
xchg
cmc
pop
or
int3
inc
fcompl
lock
push
loop
sbb
mov
or
aad
mov
shll
mov
push
add
loopne
lods
dec
mov
imul
pop
xchg
push
and
sub
inc
pop
stos
mov
enter
xor
xchg
in
cmpsl
scas
inc
scas
out
test
int3
add
nop
cmc
shlb
dec
aad
shll
negl
inc
mov
std
popa
mov
xchg
cmp
push
orl
cmp
cmp
dec
mov
adc
sbb
out
nop
fwait
lods
adc
out
imul
xchg
aas
and
mov
leave
jmp
or
roll
leave
xchg
shll
fs
jnp
call
sub
push
jo
push
popf
faddl
ret
xorl
lahf
shl
xchg
clc
push
push
cmpsb
xor
xor
lods
addl
test
hlt
lea
addr16
int
shll
lds
cwtl
add
out
test
xchg
lods
lock
add
lods
cwtl
cli
shll
or
js
add
loop
ficoms
xor
cwtl
nop
into
fdivrs
addr16
sub
push
ret
mov
jne
test
call
fisubrl
inc
mov
lret
dec
ljmp
cmpsb
pop
les
push
push
shlb
mov
adc
dec
mov
mov
out
jg
fwait
lret
sub
mov
xchg
dec
mov
scas
add
jg
lea
or
mov
lret
pop
cli
int
cmp
iret
adc
insb
clc
xchg
popa
jp
into
nop
and
lret
scas
fisubl
mov
rcr
pop
ds
into
popf
xor
lods
cmpsl
sub
loop
out
stc
das
fdivrs
in
mov
inc
pop
and
or
int3
daa
inc
xchg
jg
inc
pop
dec
and
push
arpl
stos
pop
cli
mov
sti
cs
pop
nop
add
sbb
fnstcw
push
mov
in
sub
push
movsb
push
out
sub
outsb
cli
lahf
test
fdivl
inc
les
mov
gs
jae
add
femms
mov
add
pop
fldcw
inc
aam
ljmp
les
lds
push
pop
jb
icebp
imul
jo
sub
test
pop
push
xor
xchg
cld
xor
xchg
mov
cmp
pop
ficoms
and
loop
addr16
or
scas
pop
adc
enter
sbb
xchg
xchg
mov
pop
ljmp
test
and
in
inc
dec
adc
inc
addl
sar
lret
inc
or
add
mov
and
mov
out
loope,pn
in
and
ret
cmp
dec
outsl
push
inc
icebp
cltd
mov
sbb
fistpl
das
insl
out
mov
pop
mov
sahf
bound
rolb
xchg
cmpsb
mov
adc
and
inc
cmp
add
roll
xchg
lods
cmpb
insl
xchg
les
and
jmp
test
xchg
out
inc
lret
icebp
dec
lahf
rcrl
lock
je
rcl
xchg
push
bound
imul
repnz
loope
inc
stos
pop
int
and
push
jbe
rolb
cmp
call
repz
mov
pop
xor
ret
mov
or
push
fsubl
int3
mov
pop
fidivl
aas
mov
pusha
in
add
cmpsl
es
dec
or
jl
out
lahf
sbb
pop
mov
sbb
adc
int3
lds
sbb
cmp
mov
mov
mov
dec
dec
push
xor
mulb
dec
sbb
out
add
lahf
xchg
dec
inc
add
ljmp
movsb
fildl
fstp
aaa
and
aaa
xchg
pop
loop
mov
push
xchg
push
lcall
inc
dec
lea
movsb
cmp
scas
jmp
xorb
adc
mov
inc
fstpt
xor
data16
into
inc
inc
pop
inc
test
inc
sbb
aaa
in
or
loop
pop
jbe
inc
les
sbb
add
lods
cld
mov
push
sub
insb
mov
lcall
xchg
repnz
dec
std
shl
cwtl
sub
je
mov
push
push
sub
and
data16
inc
xor
pop
push
adc
xor
jne
imul
shlb
jb
ret
insb
data16
and
outsl
mov
pop
pushf
mov
cmp
pop
cld
sub
dec
sbb
fcmovnbe
and
mov
pop
cli
jnp
scas
into
arpl
sahf
mov
rclw
inc
mov
imul
xchg
in
mov
jnp
sub
adc
test
fildl
xor
orl
out
inc
add
movsb
fs
mov
in
ljmp
jns
insl
xchg
jge
mov
daa
jbe
xor
repnz
imul
cmp
jnp
loope
xchg
rcr
je
ss
aam
js
mov
or
cwtl
jp
pop
mov
xchg
pop
adc
lock
push
push
int
mov
push
cmp
add
in
sub
inc
sub
cli
sti
xor
cmp
push
pop
int3
mov
xchg
xor
aam
push
mov
push
pushf
pshufw
push
es
shlb
adc
mov
movsl
js
jle
call
dec
fdivrs
outsb
shr
inc
rorl
xchg
loope
aas
mov
mov
xor
jne
cmc
jp
mov
add
repnz
mov
int
jne
out
dec
push
mov
insb
and
cmpsl
inc
out
ja
jae
xchg
ljmp
imul
int3
shlb
lahf
sbbl
repnz
mov
xor
inc
or
jo
or
push
es
loopne
bound
mul
lret
mov
ss
jns
add
das
lret
jbe
lret
pop
jmp
test
xor
out
fmul
sahf
aaa
test
push
ss
loope
cmp
and
mov
mov
andb
jnp
mov
aam
pop
or
jb
adc
cmp
dec
sti
pop
cltd
mov
dec
aaa
jb
lods
xor
test
xchg
fwait
mov
cmpsl
lds
dec
add
sub
xor
add
sbb
int3
adc
dec
cs
lock
rcl
adc
cld
mov
xlat
push
jecxz
jp
in
ljmp
pop
and
mov
shll
push
movsb
cmp
jge
mov
ss
jns
dec
xchg
mov
rorb
dec
cltd
hlt
or
pop
aaa
stos
sete
lea
gs
jae
test
in
dec
stc
pushf
jecxz
cmp
pop
inc
push
loopne
pop
lods
mov
xchg
int
xor
icebp
les
out
adc
shl
aad
sbb
leave
inc
ror
add
pop
sub
jg
cs
fldl
dec
xor
repnz
add
sbb
cli
and
adc
inc
je
add
cs
aas
dec
mov
xchg
movsb
out
stc
ret
popf
jmp
syscall
jnp
daa
ja
sbb
ficompl
das
std
test
fsub
mov
cmp
mov
repz
mov
stos
popf
aas
mov
out
ljmp
xchg
xchg
xchg
gs
xor
in
int
fisubl
or
aad
popf
push
mov
arpl
insl
pusha
arpl
ficoms
mov
out
int
add
je,pt
pop
mov
or
sbb
imul
push
clc
std
fistl
and
flds
mov
lret
lock
fldt
and
pop
scas
sarb
mov
sub
out
out
test
in
test
inc
sub
inc
inc
push
ljmp
outsl
push
cmp
movsl
test
xchg
mov
or
pusha
mov
xchg
mov
movb
push
jl
fwait
or
pop
push
mov
adc
push
out
add
out
xlat
and
cmp
insb
es
stos
pop
add
mov
jmp
jle
push
dec
push
dec
shr
insl
xlat
fs
mov
sub
pop
jle
add
idivb
inc
das
ds
inc
sbb
ficomps
dec
sarl
std
ljmp
xchg
enter
shrb
in
lods
pushf
sti
mov
shrl
sub
and
push
rorl
mov
cli
xchg
shrb
and
mov
loopne
mov
pop
mov
inc
in
ja
push
xchg
sbb
aam
sahf
nop
jle
stc
lret
dec
enter
sub
xchg
cmp
ret
mov
dec
mov
pushf
insl
fildll
cltd
fnstcw
cltd
pop
stc
test
out
mov
cltd
loope
orl
dec
mov
lret
adc
ret
dec
adc
outsb
cmpsl
sub
cli
pop
lods
and
or
leave
push
mov
sbb
adc
popl
fisttps
ss
add
mov
xor
mov
inc
jg
push
cmp
inc
lahf
addr16
negb
addr16
std
adc
fsub
push
outsb
xor
add
fs
in
addl
mov
in
les
shll
sub
cmpsb
mov
fwait
mov
ret
mov
imul
pushf
pop
pop
jg
xchg
push
jo
push
inc
pop
mov
fcoml
repz
xchg
rcr
mov
push
adc
cmp
paddsw
fists
das
pop
and
mov
loope
idivl
sbb
pop
pop
ljmp
jns
daa
push
push
or
jnp
adc
pop
aaa
stos
sbb
mov
enter
test
call
enter
and
mov
je
sub
cmp
addr16
cmpsl
sbb
mov
add
adc
arpl
sarl
into
xchg
outsb
ds
movsb
rorl
pop
mov
js
jo
sub
adc
shlb
insb
hlt
ffree
xor
test
inc
es
cwtl
sarb
or
mov
js
pop
cmp
call
loopne
add
or
push
pop
mov
sbb
pop
dec
mov
pop
lcall
xor
mov
add
inc
nop
or
sahf
outsl
jle
mov
push
adc
mov
xor
adc
add
and
enter
loope
mov
sub
sub
cmp
iret
sub
sti
xchg
pop
arpl
adc
xchg
xchg
lods
inc
fdiv
xor
and
test
xor
mov
mov
dec
or
lret
icebp
popa
es
pop
mov
push
subb
cmp
dec
scas
sub
add
cmpl
lods
fsts
leave
cmp
mov
push
cmp
mov
test
stos
jmp
or
cwtl
sti
testb
sarl
icebp
or
sub
and
inc
xchg
mov
lcall
in
hlt
addr16
std
cmp
cmp
out
adc
push
hlt
cld
push
push
jb
xlat
sbb
and
adc
movsb
dec
pop
cmpsb
or
adc
stos
sub
xchg
fs
nop
ffree
mov
sbbl
sbb
or
mov
inc
or
iret
push
adc
add
lret
repnz
cmp
push
and
jnp
and
shl
cltd
ret
sbb
xor
ret
repz
je
cmp
xor
and
mov
pop
sahf
inc
mov
call
mov
roll
jno
in
in
gs
sbb
xlat
lret
inc
cmp
pop
popf
lds
out
in
inc
cmp
sub
imul
jle
or
ljmp
xchg
push
adc
cmp
sub
xchg
insl
xor
out
loop
pop
mov
das
aaa
mov
adc
sbb
mov
cmp
inc
pop
fldenv
sub
adc
cmp
xchg
cwtl
cmp
xor
push
pop
xor
xchg
mov
mov
jnp
mov
std
jb
mov
lret
pop
lock
push
sub
aaa
sub
sub
xchg
push
pop
stos
out
test
call
jnp
ljmp
pusha
ja
sub
dec
mov
divl
flds
add
movsb
jg
or
inc
sub
sbb
fdivs
pop
pop
daa
add
add
int3
pushf
push
sub
sahf
pop
mov
or
stos
adc
in
mov
out
or
movsb
push
add
insl
adc
daa
bswap
mov
mov
mov
subb
imulb
adc
or
clc
pushf
mov
addl
in
dec
add
hlt
cmpsl
lods
sub
xor
mov
pop
movsb
ds
data16
xchg
loope
in
xor
or
inc
jmp
popf
sub
into
inc
and
scas
mov
cmp
ret
es
sub
or
ljmp
sub
repz
push
cmp
jmp
in
mov
inc
mov
clc
push
ss
lcall
outsb
cli
rcrl
lds
cmp
das
out
jnp
es
mulb
push
inc
xchg
jecxz
fs
mov
jne
cmp
jne
ja
add
das
mov
sbb
jae
fldcw
out
ss
cltd
mov
mov
outsl
fiadds
outsb
and
stc
mulb
mov
sbb
xchg
cmp
jne
roll
gs
fnstenv
sub
add
into
lret
add
repz
dec
inc
mov
pop
mov
call
or
out
sub
adc
test
imul
dec
mov
es
or
pop
mov
incl
sbb
adcl
inc
sarl
fs
mov
mov
insb
mov
jle
pushf
pop
xor
cmp
ja
jno
ret
or
lea
or
xor
sbb
xchg
lret
pop
xor
icebp
jmp
jns
jmp
sbb
mov
popf
push
and
daa
in
pop
xchg
cltd
or
mov
cmpsb
inc
adc
nop
jbe
push
fs
add
loopne
movsb
dec
or
jne
iret
dec
enter
stos
lcall
loope
xchg
lock
sbb
out
inc
popa
mov
pop
out
popf
int
int3
lods
and
scas
mov
mov
das
mov
push
inc
in
lret
in
or
sub
divb
add
push
es
xor
in
push
lcall
es
fs
add
int3
xchg
pusha
mov
cmpsb
push
stc
xchg
inc
push
jl
fcom
mov
xchg
jle
pop
sahf
and
inc
cmpb
scas
mov
push
xchg
mov
mov
push
test
mov
adc
addr16
jmp
push
sbb
xchg
add
rolb
pop
jnp
sbb
push
and
mov
mov
pushl
xchg
push
mov
sub
mov
jae
jg
push
imul
mov
scas
adc
aaa
and
dec
repnz
push
gs
jno
pop
xor
cli
hlt
adc
cmp
std
movsb
daa
inc
ret
mov
push
std
jg
mov
iret
mov
in
fimuls
rclb
fdivl
jmp
cmp
in
call
adc
icebp
dec
imul
cmp
pop
adc
loop
inc
or
shrl
ret
sub
jmp
add
stos
xlat
call
clc
stc
lret
sub
ja
xor
inc
xor
xchg
add
sub
loop
cmp
stos
jbe
jge
xchg
adc
inc
sub
icebp
decb
cmp
mov
jns
jno
push
inc
in
mov
xchg
jecxz
jecxz
lods
cli
jne
push
ds
mov
xchg
mov
outsl
cwtl
jo
bound
add
aaa
push
lret
in
imul
jno
and
aaa
cmp
push
jle
int3
int3
sub
xchg
sub
cs
mov
dec
lea
aas
test
stc
push
add
add
or
dec
mov
mov
data16
lcall
pop
dec
inc
inc
loopne
cmp
jmp
movsl
mov
aas
shrl
sub
sub
mov
pop
and
sbbb
out
push
xor
ret
pop
loope
mov
mov
imul
mov
xchg
push
add
test
repz
cmpl
dec
call
and
or
mov
jl
popa
sahf
out
jnp
leave
test
outsb
imul
xchg
fadds
je
push
dec
mov
nop
pop
loope
in
cmp
dec
jmp
out
cmp
fstl
les
push
pop
ljmp
cmpl
jb
push
out
cli
cmp
inc
xchg
ljmp
das
pop
pop
mov
pop
frstor
or
sbb
push
sbb
or
cltd
xor
inc
pop
out
inc
jge
xor
or
jbe
lock
mov
mov
arpl
sub
jbe
mov
mov
push
shll
int3
mov
mov
xor
dec
enter
jge
push
data16
rorl
ja,pt
mov
cmp
jae
inc
dec
clc
int3
js
add
jge
hlt
shll
rorl
dec
pop
out
mov
xor
xchg
mov
or
xchg
daa
and
mov
or
jge
mov
dec
add
aad
adc
jae
lods
mov
push
idivl
and
in
cmp
lea
jl
fbstp
aam
fmulp
adc
lods
nop
popf
dec
out
mov
lret
insl
and
ss
sub
popl
filds
stc
fdiv
lods
pop
pusha
sbb
movsb
add
cmp
jo
cmp
sbb
cmpsl
decl
out
cmpsl
jbe
mov
inc
outsb
adc
lods
xchg
mov
dec
pop
add
lods
lcall
movsb
mov
jmp
clc
jl
jo
or
shlb
movb
sbb
sub
jge
mov
adc
aad
and
nop
mov
fldcw
iret
mov
pop
outsl
and
dec
push
add
shll
ficompl
mov
add
adc
jb
xor
xchg
fisubrl
add
js
pushf
cli
push
xchg
mov
insl
lock
in
incb
inc
inc
mov
aas
inc
push
mov
fs
leave
add
inc
jl
aam
movsl
mov
jge
mov
sub
nop
adcl
pop
sbb
pusha
scas
cmpb
jmp
arpl
pop
sbb
sub
mov
mov
fadd
inc
xor
lds
out
xchg
xchg
jmp
pop
lcall
fildll
or
xor
popa
mov
cmp
sbb
enter
push
sbb
mov
std
pop
adc
stos
shr
jns
pop
pop
cmp
xor
xchg
or
in
js
repz
out
xchg
pop
cmc
jg
mov
dec
call
mov
pop
sbb
ret
xchg
xchg
adcb
push
rcrb
xor
jle
mov
sbb
lahf
ja
cmpsl
xor
pop
mov
and
mov
mov
call
and
in
test
and
sbb
xchg
mov
sbb
ret
jo
rolb
sub
pop
mov
stc
push
ficoml
sbb
push
shll
mov
or
lds
daa
ficoms
scas
fmull
aas
adc
or
xchg
xchg
shrb
fdivl
xchg
lahf
xchg
shll
jbe
lahf
push
pop
jl
jp
mov
xor
ret
pusha
xchg
mov
daa
adc
sahf
push
pop
push
push
pop
push
lret
and
xor
testb
sbb
mov
adc
pop
jle
out
add
mov
adc
stc
leave
or
insb
test
jmp
aad
sbb
icebp
mov
jae
adc
scas
xlat
push
xlat
or
aad
adc
dec
testb
push
ffree
dec
jl
sahf
mov
xor
pop
and
jns
mov
xchg
pop
add
pop
mov
pusha
jp
or
jle
stos
or
cwtl
xchg
xor
mov
mov
int3
sarb
mov
leave
test
xor
insb
in
push
inc
push
mov
pusha
xor
mov
or
mov
sub
enter
faddl
sub
icebp
adc
dec
fbld
stos
sub
cmp
add
dec
jl
sahf
mov
xchg
and
xchg
ss
jmp
js
outsb
jmp
out
and
mov
pop
arpl
mov
push
popa
inc
cmc
sbb
adc
xchg
frstor
and
jns
xchg
fcmovu
call
sub
and
xchg
push
das
adc
data16
mov
jns
fidivrs
sbb
cli
add
mov
lock
sub
enter
xchg
insl
xchg
pop
adc
in
cs
popf
jp
mov
pushl
out
aad
add
xor
inc
in
xlat
lods
test
lret
in
dec
jns
sbb
out
xchg
divl
lahf
lds
cli
jge
dec
sarb
popa
ficompl
aaa
ss
dec
xor
mov
push
push
es
pop
leave
cmp
test
stc
xorb
sbb
xchg
and
pop
in
test
enter
shr
imul
shlb
jg
dec
ljmp
xor
fisttpll
inc
push
inc
jb
dec
inc
cvtps2pi
xor
jo
cmp
or
cmp
mov
push
leave
subl
clc
ret
or
and
negl
nop
xorps
pop
pop
push
mov
inc
lock
arpl
push
mov
data16
push
xlat
xor
jmp
movsl
jno
fisubl
mov
in
fs
pop
mov
mov
add
sbb
dec
and
cmp
jne
dec
aad
insb
and
divb
loop
mov
ret
ret
das
mov
popa
sbb
push
rcrl
xor
mov
stos
pop
mov
dec
cli
clc
sbb
imul
adc
test
pop
out
dec
es
dec
push
lret
push
mov
xor
sbb
ret
lahf
outsb
cmpsb
xchg
push
lea
cwtl
pop
nop
cmp
adc
push
dec
stos
repnz
js
mov
jle
mov
or
sbb
cs
es
nop
cltd
pusha
imul
in
ja
out
insl
aad
ss
lods
sbb
mov
mov
jmp
loope
mov
int3
mov
and
cmp
sbbl
and
inc
outsb
pop
sub
mov
adc
mov
mov
dec
sbb
in
fcmovnu
fidivs
inc
pop
lea
je
or
inc
xlat
adc
pop
mov
add
ja
mov
aad
lahf
jecxz
push
iret
sbb
xchg
and
sub
jae
pop
dec
cmovle
popa
adc
faddl
outsb
insb
icebp
outsb
int
pop
les
jmp
jle
and
mov
cwtl
das
xchg
add
cwtl
add
and
repz
adcl
repz
xchg
fstpt
pop
iret
ds
mulb
or
scas
or
rorl
xchg
pop
bound
push
mov
in
repnz
xor
mov
pop
mov
insb
mov
nop
xor
mov
in
push
nop
sbb
xor
mov
ss
test
xorb
mov
add
mov
jp
mov
roll
mov
lock
push
popf
mov
jmp
repnz
daa
or
push
dec
dec
clc
dec
adc
lahf
repz
in
jl
adc
or
mov
mov
inc
sub
clc
hlt
push
xor
inc
mov
lret
orb
test
add
push
or
popa
test
and
cli
push
sahf
jecxz
iret
fcoms
je
lods
shl
mov
xchg
add
push
push
xor
test
or
loope
or
lea
mov
in
imul
sub
test
and
in
sbb
and
icebp
pop
lock
mov
push
fimuls
mov
add
fdiv
fwait
cltd
and
jae
mov
mov
fsubrl
das
sbb
divb
cmp
and
dec
pop
loope
fsubs
add
xor
add
pop
adcl
subl
ljmp
in
imulb
int3
pop
sbb
arpl
push
aaa
nop
je
stos
lret
xchg
mov
xor
stos
push
push
mov
mull
and
push
mov
push
stos
or
addr16
and
sbbl
pop
fwait
adc
inc
push
xor
inc
lcall
scas
movsb
stos
pushf
xchg
js
movsb
aaa
lret
adc
jno
push
and
xor
sti
ss
push
arpl
lds
pop
adc
inc
push
ja
scas
jg
data16
loopne
pop
cwtl
sub
xchg
js
popf
jne
inc
or
in
mov
jns
test
sub
push
mov
sub
clc
shlb
add
and
xor
mov
stos
cmpsl
in
xchg
inc
movsl
cmp
fldt
mov
outsb
fisttpll
inc
test
dec
push
addr16
pop
cmp
fdivrp
inc
inc
or
cs
mov
inc
and
cmc
ret
and
xchg
fcmovnu
inc
and
mov
push
xor
pusha
pusha
or
in
push
and
out
xchg
sbb
jmp
idiv
test
jl
inc
inc
mov
lea
jg
jecxz
loopne
insb
jns
dec
sbb
loop
sbb
pop
xchg
mov
lods
cmp
nop
xchg
jne
jo
incl
mov
mov
add
inc
cmp
sbbb
ljmp
fwait
hlt
xor
cmp
cmpl
push
dec
insb
gs
mov
sub
xchg
inc
int3
pushf
js
das
jb
or
push
vmovd
jg
jns
xor
xor
iret
iret
adc
xchg
mov
push
jge
add
xchg
aad
aas
push
push
and
mov
je
dec
xor
add
jl
loop
pop
fidivrl
mov
mov
dec
push
clc
adc
push
rcrl
xchg
and
mov
xor
or
imul
and
dec
pop
pusha
pop
pop
in
sbb
ljmp
and
or
cmpsb
xchg
pop
mov
imul
fisttps
sbbl
cmp
jg
mov
js
imul
sahf
sbb
add
pop
lcall
sub
jnp
xchg
outsb
cmp
cmp
repz
roll
xchg
xchg
jp
pop
out
and
mov
iret
push
stos
and
jnp
mov
bound
xchg
add
test
push
jp
sub
mov
or
rol
aam
sbb
faddl
xor
sub
sti
mov
ret
adc
push
add
pop
mov
clc
shlb
bound
cmpsb
jns
push
stos
mov
jle
mov
adc
fldcw
jnp
out
lods
mov
add
jae
cmpsb
cmp
cmp
lods
pop
lcall
out
js
inc
mov
add
pusha
dec
adc
adc
mov
push
insb
lea
cmp
and
pop
xchg
lret
jg
ret
cs
dec
rolb
pop
das
cmpsb
sbb
lcall
inc
loopne
sahf
mov
lret
scas
mov
mulb
movsl
jp
cmpsl
mov
lret
mov
inc
jle
and
mov
in
int
pop
mov
or
jg
or
sbb
mov
or
mov
lahf
subb
test
xchg
outsb
ret
sub
cmc
int
inc
data16
sbb
fcoml
loopne
fisttpll
push
or
push
inc
test
movsl
and
stc
pop
fdivrs
pop
xlat
xchg
pop
aam
cmp
mov
xlat
sub
adc
jbe
push
scas
cmp
sub
lret
mov
dec
pop
pop
dec
push
stos
jmp
xorb
pop
pop
jno
sbb
xlat
aad
cld
mov
js
xchg
in
cmpsw
ja
loopne
movsb
mov
or
arpl
push
enter
jle
scas
bound
sub
push
mov
das
addr16
fdivp
sbb
cmp
jae
xor
adc
pop
scas
insl
dec
mov
popa
jns
xor
sbb
jns
push
mov
push
stos
cmp
mov
and
shl
enter
jne
add
sbb
je
jecxz
mov
rcll
dec
cld
dec
lcall
sbb
loopne
into
sahf
js
popf
mov
int3
xchg
mov
push
mov
and
aas
stos
jo
or
adc
pushf
fcoms
jl
xchg
sti
or
mov
mov
sub
mov
xchg
dec
add
pop
mov
out
mov
pushf
loope
jb
jecxz
es
pop
cmc
mov
pop
dec
ss
xor
pop
sbb
xchg
aas
cwtl
in
add
outsb
mov
sub
outsl
fldcw
out
enter
pop
cmpsl
testl
lret
jge
nop
sub
out
leave
out
and
mov
and
cld
push
mov
xchg
shl
push
pop
or
movsl
fdivrs
xchg
inc
jnp
adc
sbb
cmp
cmp
mov
dec
dec
inc
lret
pop
mov
repnz
ljmp
lret
mov
imul
mov
pusha
fstpl
adc
in
inc
lods
mov
sub
add
adc
jbe
sbb
mov
xor
fwait
loopne
bound
add
xor
jb
fdivp
loope
lds
jle
scas
sub
pop
in
test
sbb
les
inc
scas
mov
adc
addr16
push
sahf
test
cli
into
flds
outsl
ret
js
ret
clc
or
mov
mov
test
xor
mov
ret
shlb
fwait
pop
jns
adcl
cwtl
ds
push
add
jne
orb
dec
inc
mov
mov
ss
mov
aaa
push
inc
pop
jne
loopne
mov
jl
fdivp
in
out
sahf
lock
xlat
enter
pop
out
lock
push
cmp
out
test
inc
and
jns
es
dec
xchg
pop
jge
das
lods
or
ret
js
and
lcall
xor
mov
xor
jae
adc
dec
in
mov
xor
inc
je
fcoml
sahf
mov
mov
std
out
insb
mov
cmp
xor
xor
xchg
leave
adc
leave
add
ret
push
mov
push
mov
sbb
cmp
cmp
push
add
lea
jnp
addr16
jmp
cld
scas
jno
mov
sub
mov
add
sub
xor
roll
lea
xor
xor
pushf
mov
sub
into
jb
cmp
push
movb
repz
movsb
cmpsl
in
pop
xchg
ret
in
mov
mov
enter
gs
das
insl
loop
jnp
inc
iret
mov
sbb
sub
fnsave
bound
push
aad
repnz
mov
sub
fildl
dec
gs
jecxz
dec
inc
inc
lea
pop
and
inc
sarb
pop
mov
pop
push
jns
ja
lock
inc
pop
push
dec
push
push
and
fwait
sbb
int
cwtl
jecxz
mov
xchg
loopne
loope
call
push
mov
push
push
mov
stc
and
xchg
inc
add
loop
jmp
clc
mov
xchg
stc
xor
mov
mov
cmpsb
in
xor
in
mov
clc
jg
mov
mov
int3
rol
outsl
sub
push
or
cmp
xchg
movsl
cmc
sbb
pusha
outsb
daa
xor
es
mov
dec
sbb
aad
rcl
push
inc
adc
mov
mov
aaa
add
pop
popa
mov
sbb
xchg
dec
out
sbb
and
inc
sbb
fiadds
pop
shl
dec
jecxz
sbb
loop
jno
sub
push
cmp
rcll
and
jmp
mov
lahf
jns
push
push
xor
vmread
daa
sti
xchg
fistps
push
es
nop
jmp
ljmp
mov
out
in
push
mov
out
cs
lahf
add
mov
sbb
stos
icebp
and
bound
loope
xlat
push
not
stos
outsl
rcrl
cmp
sbb
lahf
cmp
arpl
jbe
jb
repnz
call
jb
sub
dec
inc
icebp
sahf
xchg
jmp
mov
xor
test
in
jnp
rolb
jo
clc
nop
ljmp
and
ljmp
pop
mov
insl
inc
push
inc
jb
push
mov
orl
popa
nop
xor
pusha
add
fwait
es
or
test
mov
bound
ja
ds
jl
push
push
ret
cmp
mov
mov
sub
gs
adc
aaa
ss
sub
push
mov
push
shlb
stos
jo
lcall
pop
cmp
aaa
std
mov
test
sub
cltd
push
cmp
cmp
adc
push
xor
push
xchg
or
sub
leave
dec
int
test
fisubrs
js
les
out
adc
sbb
cld
out
push
sahf
cmc
dec
daa
push
mov
xchg
adcb
dec
cmp
das
call
cmpl
adc
clc
repz
xchg
js
add
int
and
lock
lret
and
mov
call
mov
mov
fimuls
jmp
sbb
xchg
lods
lds
divl
cli
imul
mov
jge
fdivs
int3
icebp
or
test
pop
or
lret
std
repz
lahf
mov
int3
xlat
adc
sahf
sub
jecxz
outsl
mov
or
and
add
adc
pop
push
xchg
das
negl
mov
sbb
sbb
mov
rol
push
cli
jb
adc
out
add
lahf
jp
pop
sub
xchg
out
or
mov
data16
add
arpl
push
fcomp
jb
mov
inc
xor
push
fstpt
sarb
fiaddl
push
dec
cmp
sbb
add
mov
fwait
test
inc
movsb
mov
cld
mov
and
pop
push
sub
lods
mov
insb
loopne
lcall
popf
inc
scas
aad
jmp
and
leave
movsb
lods
das
jbe
pop
or
inc
inc
add
jge
xchg
arpl
xor
pop
jo
pop
dec
sahf
or
jge
cmp
cmc
ss
push
mov
or
cmc
dec
dec
lods
cmp
push
sbb
adc
mov
insl
fnsave
and
jl
popf
sbb
fdivrs
stc
cmp
movsl
mov
jbe
mov
jb
mov
cwtl
jl
into
dec
or
or
lea
mov
rorb
aad
jnp
mov
xor
shl
cmp
roll
dec
push
les
out
mov
das
xchg
or
adc
mov
cmc
sbb
inc
push
and
or
push
daa
sub
xchg
imul
out
ljmp
cli
jb
xchg
pusha
push
adc
cmp
push
icebp
mov
adc
nop
xor
test
enter
jns
push
mov
out
les
jecxz
aam
xchg
cmp
jg
jle
jmp
adc
fstl
mov
push
scas
imul
pop
sbb
mov
push
cwtl
fwait
loopne
js
inc
mov
sbb
ss
jle
out
mov
repz
push
cmp
lret
or
cmpsb
xor
test
adc
jp
movsw
movsb
mov
sahf
mov
movsb
int3
rcl
sub
shrb
cmp
rorl
or
xchg
mov
cli
iret
lods
adc
cld
mov
mov
repz
es
pop
movsb
pop
pop
push
and
sbb
std
xor
repnz
lahf
in
test
adc
inc
jns
push
scas
mov
imul
dec
and
mov
popa
pop
and
xor
and
aaa
sub
jbe
adc
out
push
mov
divb
jp
ficompl
mov
mov
fcomps
and
sahf
add
mov
daa
je
addr16
hlt
dec
jle
imul
mov
call
jp
in
fstps
mov
std
lret
mov
mov
xchg
roll
lock
and
add
dec
iret
inc
sahf
inc
mov
xchg
stos
orl
and
dec
pop
int
jmp
sub
aaa
fcmovnb
add
pop
test
negb
push
pop
push
xchg
sub
ds
xchg
mov
out
loopne
mov
ret
adc
jmp
dec
gs
out
pop
lahf
fsubs
sub
cmp
sbb
mov
adc
add
dec
test
and
jno
popf
push
int3
push
jle
call
enter
add
jle
jle
fabs
loope
icebp
iret
lret
mov
leave
xor
cld
mov
cmp
inc
sti
adc
ds
dec
aaa
inc
lock
push
or
xchg
sbb
stos
enter
js
sahf
icebp
fucom
cmp
dec
sub
xchg
fcmovu
push
xchg
sarl
xorb
arpl
inc
mov
ret
push
lahf
lahf
xlat
movsb
add
mov
mov
das
imul
imul
dec
popf
jb
loopne
add
aad
mov
daa
mov
jns
add
cmp
lea
das
fisttpll
xor
stc
add
repz
test
xchg
xor
lahf
ja
jge
dec
cmp
pop
xlat
in
mov
pop
movsl
leave
sub
pusha
sbb
in
inc
notb
adc
or
sbbl
jp
std
pop
lods
mov
xchg
cmpb
jae
dec
call
pop
jp
and
aad
dec
imul
je
jno
fildl
cmp
loopne
mov
push
push
xchg
xor
xchg
or
aad
lahf
movb
mov
mov
sub
lods
pushf
push
inc
out
xlat
or
out
jmp
ror
xor
inc
push
aam
shrb
mov
cs
repz
cmp
insl
cmp
xor
jge
cld
mov
or
les
lods
ficoms
mov
imull
jp
nop
imul
push
cli
in
jp
inc
jl
gs
out
in
outsl
inc
xchg
mov
mov
and
fsubrs
shlw
sub
pop
dec
outsb
test
inc
cli
xor
pop
ror
add
pop
jecxz
pop
test
fnstcw
sahf
or
add
mov
loopne
xor
adc
push
lretw
sub
sbb
loopne
in
mov
inc
and
inc
mov
cmp
repz
sbb
pop
push
adc
aad
push
mov
aas
outsl
push
or
cltd
popf
repz
push
stos
jne
mov
add
call
inc
pusha
fnstcw
jbe
mov
in
and
mov
cs
mov
int3
mov
into
mov
popa
push
je
incb
js
mov
idivl
pop
sti
fimuls
mov
or
movsb
adc
mov
cmp
fstl
in
inc
inc
adc
jae
pcmpgtd
mov
jne
mov
or
lea
pop
test
mov
mov
fcoms
daa
push
push
enter
scas
xchg
sbb
cmpl
lret
sub
popf
rolb
pop
xor
inc
daa
cmp
cmc
dec
pop
or
in
adcb
pop
push
es
mov
js
repnz
push
ret
xchg
xchg
outsl
mov
mov
mov
popf
xchg
mov
xor
mov
scas
cli
jo
cmpsb
xchg
cmc
mull
jmp
sbb
adc
in
sbb
add
sbb
jge
mov
dec
ja
fs
lahf
scas
add
ds
call
gs
int
and
popf
ror
aas
mov
xchg
mov
nop
lock
orb
gs
mov
inc
cld
stos
mov
or
dec
int3
sbb
push
das
sub
pop
scas
jle
or
daa
out
pop
xchg
jno
scas
cmpsb
cmp
enter
inc
inc
jg
mov
in
dec
pop
aad
faddl
sub
mov
lahf
push
fidivs
pop
addr16
ljmp
sub
shrb
ds
cmpsl
adc
pusha
pop
pop
pop
xchg
sbb
je
test
enter
sbb
pop
ja
ds
cmp
lret
enter
arpl
or
lret
in
repnz
xor
inc
out
in
lock
dec
nop
ret
das
iret
xlat
pop
jp
js
jl
aam
insb
mul
out
minps
lahf
mov
pusha
fstl
cmpsb
cmp
repz
repnz
dec
lods
fstps
out
push
test
subl
adc
out
sub
insb
fldl
cmp
push
and
dec
cmpl
rcl
inc
lcall
mov
cmp
xchg
jle
int3
add
cmp
mov
stos
pop
dec
jns
inc
call
cmp
mov
pop
iret
stc
sub
imul
outsl
pop
xchg
xchg
mov
iret
es
int
in
push
cmp
push
mov
push
ljmp
xchg
xlat
stc
xchg
pop
mov
inc
pop
pop
adc
cwtl
pop
in
fbld
xchg
add
xchg
loope
dec
cmp
fwait
inc
jns
xor
andb
inc
mov
popf
movsl
adc
xor
lods
inc
jnp
or
pop
and
lret
sub
aad
pop
cmp
inc
aad
jno
pop
dec
and
xor
aam
test
shlb
mov
pop
loopne
test
add
jmp
je
xchg
mov
ds
je
gs
add
mov
pop
jl
dec
jb
jnp
cltd
push
sub
stos
lret
sub
pop
lret
mov
into
pop
lods
clc
leave
cmc
mov
mov
xlat
fiadds
sub
cmp
jle
shlb
clc
ss
inc
or
add
ret
xchg
dec
cmpsl
aam
and
mov
pop
loopne
adcl
inc
jmp
dec
mov
push
std
sub
lcall
cmp
and
scas
in
inc
mov
pop
inc
and
repnz
mov
dec
imul
out
rorb
cltd
stos
neg
popa
sbb
loop
mov
add
push
adcl
dec
js
mov
cmp
cmc
gs
dec
push
mov
outsb
in
ja
jp
dec
fwait
iret
cmpsb
or
jmp
adc
add
cmp
xlat
imul
pop
inc
les
jns
adc
xor
add
je
test
and
in
icebp
jo
es
sub
lock
or
jge
sbb
cmp
sahf
in
cmp
es
subb
fistl
jb
mov
xor
adc
jo
sti
addr16
cld
sar
inc
pop
mov
adc
or
addr16
cli
stos
mov
imul
aas
mov
cvtps2pd
mov
int3
pop
imul
mov
mov
imul
xchg
dec
leave
test
xchg
adc
xor
push
push
test
or
mov
ja
jo
lret
mov
outsl
pop
repz
inc
cmp
ffreep
dec
dec
es
imul
push
int3
sub
mov
imul
inc
push
lds
or
sbb
js
daa
push
xchg
jge
cs
f2xm1
nop
call
xor
out
pop
subb
fistps
push
mov
pushf
adc
lock
pusha
mov
into
lret
iret
inc
cmpl
and
adc
cmc
stos
loopne
cmp
and
mov
out
add
sub
xchg
into
mov
addr16
or
fsubrs
lahf
mov
sbbb
loop
sub
cmp
adc
aaa
aam
xor
rorb
insb
mov
cmc
sub
stos
mov
sbb
shll
sarl
jecxz
xor
into
mov
and
test
repnz
adc
ret
addr16
fisubrl
pop
mov
ror
mov
stc
pop
push
lret
pushf
sub
cmp
push
cmpsb
add
inc
push
mov
vcmpsd
xor
mov
jle,pn
jb
jae
mov
testb
mov
mov
mov
aaa
push
ja
add
fcmovnbe
fsub
adc
or
push
push
xchg
repz
add
and
or
inc
inc
xor
repnz
aad
sub
ljmp
mov
sbb
mov
xchg
inc
outsl
sbb
jae
aaa
xchg
sub
mov
jl
int3
cltd
loop
lock
fnstenv
negb
lret
scas
xor
cli
sbb
outsb
or
xchg
push
fiadds
icebp
push
frstor
or
mov
fildl
in
out
push
mov
push
add
cld
mov
pop
cltd
pushf
or
add
inc
ret
aad
movsl
lea
adc
jnp
dec
cmp
hlt
scas
jmp
mov
jl
xor
shl
xchg
leave
push
mov
lret
repz
repnz
data16
or
in
lea
xchg
add
pop
pop
cwtl
fstpl
sbb
xchg
mov
or
jo
inc
mov
mov
fcomip
mov
mov
mov
je
frstor
or
stos
cmpsl
jle
and
pop
fistpl
mov
decl
inc
inc
mov
stos
and
cmpsl
aas
loopne
les
sbb
xlat
cmpsl
data16
in
mulb
movsl
js
xor
fiaddl
out
xor
loop
popa
xor
dec
xchg
jne
and
sahf
out
inc
test
lcall
ret
test
jnp
mov
xor
dec
inc
xchg
popf
mov
fwait
pop
dec
cmpsl
cmp
push
or
mov
test
dec
xchg
cmpsb
and
test
or
push
sti
test
mov
pushf
pop
popa
jo
out
stos
cmp
jp
pop
mov
mov
fmull
cli
mov
js
popf
or
mov
mov
lock
lods
std
mov
rclb
jg
adc
cmc
addr16
push
mov
outsb
scas
dec
sti
inc
cmp
sbb
cmp
mov
inc
fmulp
and
xchg
jb
jnp
scas
mov
cmp
ja
lahf
sbb
cwtl
call
stc
gs
cwtl
inc
insb
xlat
lret
scas
andb
iret
in
inc
pusha
addr16
fsin
push
enter
adc
xchg
das
fnstcw
shlb
sbb
sbb
jnp
insl
rorb
dec
xchg
or
inc
adc
mov
mov
loop
shll
mov
cli
adc
pop
ret
pop
mov
fdivrs
loopne
jmp
fsubs
sub
adc
cmpsb
std
andl
or
inc
xor
fisubrs
mov
or
out
jo
inc
and
outsl
mov
mov
scas
mov
mov
cmp
inc
test
xor
xor
cmp
dec
push
rcll
outsb
mov
lds
iret
shll
sahf
add
cld
mov
pop
stos
sub
mov
xchg
xchg
and
xlat
sub
mov
es
jg
fstpt
clc
movsl
jp
aam
imul
cmp
cmp
inc
test
stos
fidivrl
push
cmpsb
and
push
int3
jo
lahf
in
insb
pop
into
inc
mov
sbb
mov
mov
xchg
fldt
xor
push
or
add
adc
fwait
cmpsl
mov
jmp
movsl
add
loop
xchg
out
jl
arpl
pop
sub
addr16
rcll
dec
lock
mov
aam
fidivrs
and
ja
shl
jmp
pop
les
push
xor
sub
mov
push
imul
sub
mov
or
jecxz
or
lods
in
pop
pop
pop
cld
and
daa
or
testb
test
dec
jle
push
popf
adc
sbb
arpl
clc
jb
out
fidivrl
fnstcw
daa
sub
mov
pop
lcall
xchg
pushl
add
xchg
out
or
push
dec
mov
leave
xchg
popa
cli
aaa
loope
mov
pop
pop
xlat
les
dec
sbb
xor
inc
inc
movsb
pusha
sbb
push
push
xchg
fsts
scas
pop
daa
stos
repnz
mov
xchg
cmp
loope
decb
scas
test
cltd
mov
cmp
stos
jge
sbb
das
enter
std
scas
and
and
mov
jo
testl
sub
adc
or
mov
jecxz
jecxz
les
lods
test
mov
insl
sbb
cmp
push
sub
pop
jae
gs
xchg
sbb
pop
das
pop
nop
loopne
mov
push
inc
and
arpl
push
sbb
mov
rep
out
insb
xchg
in
or
xchg
cmp
in
sub
push
sbb
push
pop
call
sub
jo
repz
rorb
sti
push
ljmp
push
xor
fmul
sub
sub
adc
icebp
xchg
loope
fstl
mov
fisubs
sbb
mov
lods
in
lock
test
add
mov
imul
rcrb
cltd
scas
repnz
or
scas
or
mov
icebp
or
or
lock
xchg
cmc
dec
addr16
nop
sbb
xchg
or
in
faddl
push
repnz
xchg
sbb
ljmp
mov
shll
push
dec
repnz
js
pop
mov
or
xor
inc
jae
fs
mov
push
pop
popa
push
jbe
jno
in
fnsave
test
dec
sbb
sahf
push
int
and
adc
andl
pushf
xchg
lahf
inc
jl
cld
pusha
xchg
adc
inc
cld
pusha
sbb
adc
pslld
adc
xor
pusha
outsb
call
push
int
dec
cmp
xlat
push
in
ljmp
sbb
jo
adc
mov
fcoml
adc
mov
cmp
daa
xor
std
inc
ret
ljmp
shrb
les
and
mov
sub
arpl
lock
ret
ljmp
cld
inc
rcr
arpl
inc
test
rcrl
cmpsl
cmp
push
mov
mov
sub
jo
sbb
int
fstpl
xchg
jg
aas
ficomps
data16
ss
add
mov
pop
pop
cwtl
les
pop
mov
mov
lret
adc
nop
bnd
sbb
dec
mov
loop
loop
xchg
xchg
inc
mov
jae
lret
push
lret
roll
push
int3
sti
adc
jbe
or
inc
cmp
cmp
sbb
nop
sub
rclb
mov
push
jp
lods
fcompl
inc
push
mulb
and
bound
xchg
cmp
mov
lret
mov
push
jmp
add
movsb
push
push
jmp
sub
loop
jo
xor
mov
test
xchg
xor
xchg
test
inc
popf
mov
sbb
push
jns
aam
mov
cmp
adcb
cs
xor
cmc
add
jl
fidivrl
movsb
scas
call
and
scas
les
sub
dec
mov
pusha
push
adcl
push
jb
popa
in
sbb
in
sti
loopne
xor
inc
and
and
sti
aad
dec
rorl
lret
mov
roll
sbb
jns
aas
xchg
pusha
or
sahf
mov
xchg
fiaddl
out
mov
repnz
subl
int
sub
leave
mov
mov
push
cwtl
cmp
fistpll
mov
stos
jb
insl
jmp
loop
addl
lods
cmp
sub
movsb
push
enter
xorl
jae
pusha
into
add
int3
jno
adc
add
addr16
xor
and
sub
add
outsb
stc
fsubrs
enter
push
mov
aaa
movsl
xchg
rcrb
imul
shll
ss
cmpsb
jne
inc
inc
dec
lods
ja
lret
ss
or
cmp
jecxz
int
dec
cmp
bound
sbb
cld
push
mov
cld
lret
in
cmp
sbb
mov
dec
imul
icebp
jp
jo
push
in
sbb
adc
ficoms
sbb
add
fisttpl
cmpl
outsl
mov
push
mov
jns
cmpsb
or
cmp
call
adc
sub
mov
jae
dec
mov
loopne
dec
into
sub
jecxz
mov
loopne
test
dec
xchg
xchg
nop
mov
daa
sub
rorl
clc
inc
sbb
popf
mov
mov
mov
stos
mov
dec
shll
jbe
es
cmp
enter
sahf
xchg
popa
push
loopne
and
mull
mov
mov
cmp
or
xor
push
ds
jmp
clc
add
stos
or
mov
loopne
loope
lcall
add
and
rclb
adc
hlt
and
xor
jne
mov
dec
jae
aad
dec
bound
mov
push
incl
sub
xor
lahf
data16
jb
lea
add
jb,pn
xchg
cmp
mov
lds
test
std
xor
sbb
ljmp
push
push
bound
subl
shlb
incl
sbb
dec
jbe
push
mov
lods
loop
icebp
push
hlt
gs
sub
cmpsb
xor
add
pusha
inc
push
jo
xchg
lea
addb
xchg
xchg
xchg
xor
ret
and
adcl
mov
jnp
dec
iret
pop
push
or
cmc
sbb
daa
pop
mov
es
xchg
jnp
cli
xor
in
ret
mov
out
ret
lock
cld
je
loope
pop
mov
or
ds
inc
inc
mov
sbb
xorl
int
aas
xchg
sbb
pop
push
aaa
pop
pop
data16
cwtl
jp
call
dec
xchg
xchg
ljmp
add
add
dec
adc
mov
jg
mov
or
dec
dec
mov
aam
cli
push
or
movsl
dec
aaa
add
fistl
inc
es
jno
das
mov
pop
mov
orb
and
leave
inc
outsb
pop
pushf
jo
pushf
insl
mov
shrb
push
xor
aad
inc
pushf
add
aaa
mov
and
imul
and
mov
popa
stos
add
mov
lods
pop
pushf
loope
and
hlt
sti
imul
cmp
mov
clc
inc
out
cmp
imul
cs
xor
ror
sub
test
clc
mov
sbb
xor
mov
mov
ss
adc
daa
dec
lea
cmp
imul
jo
repz
jp
mov
nop
mov
es
scas
add
mov
add
adc
out
rol
xchg
jle
jne
pop
push
jne
push
fcoms
cmpsl
roll
imul
sub
shl
pop
lahf
lods
andb
sub
jno
mov
lahf
lds
mov
fsubrl
add
cld
mov
sbb
xchg
movsb
rcrb
push
shrl
sti
dec
rol
dec
xor
or
jo
fcomps
xchg
cli
out
loop
adc
sarb
cmpsl
mov
shlb
cmpb
mov
cmp
jle
idivl
rorb
push
and
xor
mov
mov
mov
dec
or
pop
dec
push
mov
pop
inc
cmc
cmp
mov
cmp
sbb
lods
nop
popf
xlat
pop
or
fmuls
dec
inc
rcll
fstpt
mov
pop
mov
pop
mov
xchg
sbb
hlt
nop
xlat
xlat
or
mov
test
rolb
xlat
aas
jmp
fwait
shl
xor
out
lret
fucomp
jae
pop
clc
xchg
push
add
push
add
mov
sbb
inc
xchg
scas
fmuls
add
jno
adc
mov
pop
and
jge
aas
and
insb
testl
mov
or
cmp
mov
inc
adc
mov
push
push
rclb
push
bound
pop
rorb
fs
jmp
push
dec
add
and
neg
rcrb
sub
addr16
sbb
cli
rorb
insb
xchg
loopne
inc
call
mov
mov
loope
mov
jmp
jg
mov
add
loopne
ja
and
xor
fstl
mov
lods
stos
xor
enter
fcomps
sbb
dec
pop
cld
sbb
dec
mov
xchg
shlb
add
test
pop
pop
sub
xor
push
je
out
mov
cmpsl
mov
mov
pop
xchg
jg
or
stos
lea
and
rcrl
mov
push
rcr
mov
imul
jecxz
pop
or
push
cld
mov
bndldx
push
mov
cmpsl
jp
popf
ja
leavew
xchg
sbb
adc
xchg
jne
lea
test
sub
and
add
outsb
pushf
imul
scas
mov
cmp
sarb
push
jecxz
adcb
fwait
lret
popa
pop
outsb
adc
mov
cli
mov
nop
jnp
mov
jecxz
insb
push
mov
push
xchg
test
stos
adc
fmull
pushf
fidivrl
arpl
jae
push
jae
jle
add
adc
jns
mov
lds
cmp
fdivrl
fwait
xor
push
pop
addr16
lahf
mov
cmc
lods
sbb
cmp
or
sbbb
jbe
out
adc
mov
mov
and
dec
js
mov
es
std
and
imul
mov
roll
push
xchg
test
icebp
insl
fldt
mov
int
dec
cmp
and
adc
sbb
or
mov
dec
and
scas
inc
inc
pop
and
sub
add
movsl
xor
fwait
dec
jnp
fmuls
jbe
out
or
xlat
movsb
push
sahf
mov
outsl
mov
cmp
popf
push
incb
inc
cltd
popf
add
jl
test
fsts
lret
enter
sti
sub
lea
xchg
popf
clc
dec
push
sub
out
gs
movsl
inc
rcr
scas
iret
jo
xchg
jg
add
daa
push
xchg
add
in
xor
dec
and
add
xchg
les
xchg
into
mov
insl
fcmove
movsl
test
ret
mov
sbb
in
push
mov
dec
popf
mov
enter
fdiv
shll
cmpsb
jecxz
mov
pop
int
push
sbb
pop
push
loopne
nop
cmpsl
cli
loopne
call
addr16
lods
sahf
mov
flds
sub
movsl
testb
in
mov
fdivrs
loopne
callw
jns
or
scas
and
movsb
dec
push
jmp
cli
sahf
jne
mov
stc
mov
cmpsl
mov
xchg
loop
inc
adc
pop
lea
fisubrs
dec
movsb
cmp
fxch
and
sbb
xchg
pop
aas
fwait
mov
out
leave
jg
dec
outsb
inc
std
or
sub
xchg
adc
jae
loope
jmp
dec
adc
scas
sbb
popa
mov
pushf
inc
rcrb
in
push
lcall
fmull
ret
xchg
lret
cmp
outsb
add
aaa
push
add
imul
lahf
cmc
dec
mov
xchg
and
xor
pop
xchg
push
mov
and
insl
cmpsl
jne
stos
fs
xchg
ds
add
mov
cltd
mov
outsb
loop
sarb
add
or
in
push
loopne
add
or
jns
out
xchg
popa
ds
adc
in
shr
dec
push
ficompl
out
dec
stos
and
inc
or
fs
das
shrl
pop
cmpsb
lret
std
mov
xchg
or
les
inc
leave
stos
xchg
mov
lds
push
loope
ja
xchg
xchg
cmp
fcomi
jne
shll
inc
jno
mov
pop
mov
jmp
sbb
mov
ds
fimull
ss
dec
sub
mov
lods
pop
sub
loopne
in
outsb
fisubl
stos
emms
icebp
adc
dec
fisttpll
lock
or
inc
fcomip
rcrl
cmp
mulb
divb
jl
fcmovu
outsb
icebp
mov
loopne
mov
dec
outsb
and
popa
rolb
mov
stc
fidivs
into
sbb
push
push
inc
jno
mov
cld
cmp
mov
adc
int
addr16
push
pop
add
lret
daa
rorb
push
cwtl
in
mov
xlat
lahf
add
pop
ljmp
push
mov
cs
sub
insl
test
xchg
pop
mov
mov
mov
scas
mov
add
subl
and
scas
shlb
inc
cmp
mov
cmp
mov
mull
mov
out
jp
jecxz
pop
out
sbb
sahf
sbb
lret
mov
fldt
mov
inc
bound
loopne
inc
loop
sub
jae
mov
ret
call
clc
sahf
sub
or
out
jecxz,pt
xchg
jae
pop
cld
into
lods
dec
pop
adc
int
ret
cli
negl
int
dec
lahf
mov
fdivrs
cwtl
and
lock
push
sbb
sub
mov
inc
sbbl
imull
testl
repz
test
and
inc
jno
mov
push
jle
xchg
out
sahf
mov
ss
cld
jecxz
add
lods
pop
das
sub
add
jle
lds
and
rorl
xchg
dec
adc
push
into
dec
fs
js
lret
mov
and
sbb
add
lock
adc
push
aaa
movsl
insb
cmp
push
xchg
idiv
adc
shrl
nop
repz
sub
inc
or
push
add
scas
add
mov
sbb
jge
aam
subb
inc
mov
int
jle
xchg
popa
adc
inc
roll
adc
mov
push
sti
adc
divb
or
dec
dec
inc
in
outsb
enter
lcall
mov
cld
lock
jo
fmull
dec
js
push
jp
mov
mov
dec
outsb
outsb
mov
pop
inc
not
inc
mov
push
cmp
sub
xlat
popf
outsb
lcall
mov
ljmp
test
xor
pop
mov
out
dec
mov
shl
mov
mov
imul
mov
call
shlb
push
test
es
pop
cli
jecxz
xor
xor
push
inc
cmp
lahf
mov
pop
subl
jge
cwtl
sub
mov
sub
mov
mul
xchg
cmpsl
jge
sub
mov
inc
and
leave
js
xchg
inc
fdivrl
inc
sbb
insb
int
in
fdivrl
mov
jae
testl
ret
and
sahf
mov
xorl
add
jl
dec
push
dec
dec
or
mov
test
mull
lcall
mov
insl
idivb
in
cmp
popf
and
push
adcl
int3
pop
mov
xor
dec
dec
push
cli
jb
incl
in
test
cmpsb
dec
adc
daa
scas
and
fldl
jb
ja
pop
test
lock
sahf
mov
fldcw
mov
lret
pop
pop
test
add
scas
add
mov
push
inc
mov
leave
xchg
add
leave
test
mov
push
idivb
jb
mov
or
mov
lods
in
dec
mov
mov
adc
out
test
jl
aad
push
or
jp
js
jb
cltd
inc
jmp
jae
ljmp
adc
ret
subl
ret
sbb
xchg
mov
dec
dec
arpl
xchg
dec
lods
jo
add
cmp
cmp
out
gs
sbb
xor
test
add
xchg
sahf
mov
jb
data16
js
sub
shrl
rcll
sahf
test
xchg
test
lcall
popa
out
push
mov
adc
add
mov
ja
xchg
call
mov
jb
jb
clc
cmp
clc
rcl
push
pop
out
mov
movsb
xor
fxch
mov
jmp
cmp
cmpsb
repz
cmp
mov
icebp
xor
xor
jg
sub
or
and
inc
jle
dec
xchg
mov
fisubl
adc
cli
sbb
repnz
add
fidivrs
sub
sti
or
test
aaa
daa
xchg
lahf
push
in
imul
push
adc
das
ja
insb
fstpt
arpl
fbstp
call
xor
aas
aas
pop
mov
cld
mov
push
xor
sbb
loope
cmp
inc
xchg
dec
add
testb
dec
not
xchg
je
mov
insl
daa
aas
out
cmp
popf
scas
dec
cmp
xor
jne
push
sub
les
mov
lock
and
sbb
sbb
jno,pt
push
daa
dec
cmp
pop
mov
fimull
ret
mov
es
std
nop
insl
adc
mov
fistpll
inc
jmp
shll
lods
out
jp
xor
cmpsl
test
sbb
sub
jle
jne
bnd
add
repz
adc
les
fbstp
xchg
jns
repnz
and
cmp
push
popa
or
in
out
cli
and
in
cld
icebp
outsl
fwait
test
pop
addb
push
cld
clc
sbb
lret
inc
loop
add
pop
in
pop
fcomi
adc
fcomps
push
outsl
jecxz
jb
jb
xchg
out
mov
mov
jns
mov
out
push
addr16
lret
in
insl
das
fiaddl
add
adc
add
mov
mov
xor
push
sub
inc
outsb
jle
movsb
rolb
mov
dec
lahf
mov
xchg
andl
outsb
dec
loop
bound
adc
in
jle
cmp
mov
mov
mov
nop
push
sub
js
add
and
pop
mov
push
rcr
dec
cmp
fisttpll
std
dec
jge
mov
out
lds
test
pop
pop
int3
adc
or
push
and
cmp
pushf
push
loopne
jne
mov
sub
iret
fs
xor
js
inc
add
jns
dec
por
pop
scas
mov
stos
push
add
mov
xchg
sub
mov
xor
and
fmull
enter
cld
sti
and
gs
jg
jns
pop
loop
aam
addr16
aaa
andl
cltd
stc
enter
mov
fs
mov
pop
ret
fwait
push
mov
and
dec
push
mov
imul
ror
or
mov
xor
iret
vhsubpd
lahf
scas
movsl
fwait
add
addr16
cmp
adc
mov
mov
pop
stc
imul
daa
in
jecxz
sub
out
or
or
into
je
jle
mov
dec
fdivrs
mov
loopne
xchg
iret
je
cs
cmp
je
repnz
jle
adc
cld
hlt
or
adc
jecxz
pop
pop
push
in
sti
and
es
pop
push
icebp
xchg
iret
cwtl
push
mov
out
adc
out
shll
or
outsb
sbb
out
jecxz
sub
out
insl
mov
popf
shlb
sbb
insb
aam
in
sbb
repnz
and
cwtl
sarl
dec
rolb
jbe
mov
cmp
add
mov
int3
mov
jecxz
pop
aad
xchg
or
hlt
sub
add
ds
push
fs
or
fnstcw
ja
mov
jne
or
in
pushf
mov
or
and
push
push
sti
clc
iret
out
outsb
inc
jne
notb
jne
jb
jl
mov
add
adc
scas
fs
mov
gs
es
adc
inc
lock
pushf
pop
sub
out
xor
pusha
ds
xor
adc
out
dec
mov
xchg
xchg
popl
sub
iret
mov
ret
int3
or
dec
push
in
je
fidivrs
jbe
push
jo
aaa
pusha
pop
and
add
pop
jo
jge
jno
stos
push
dec
mov
fisttpl
insb
sub
incb
mov
mov
jns
mov
mov
lea
mov
loopne
or
je
rol
add
out
mov
inc
sbb
dec
out
scas
inc
loope
mov
adc
jno
sub
jo
out
pop
fxch
mov
sbb
stos
jns
movsb
lods
daa
cmp
outsb
mov
ljmp
imulb
out
in
inc
sub
jb
das
mov
mov
mov
push
in
je
xchg
sbb
pusha
cmp
stos
xor
pop
lds
jmp
shll
adc
push
xor
cwtl
jne
ret
shlb
pushf
popf
std
push
adc
filds
xorl
pop
mov
mov
pusha
cld
int
subb
xchg
adc
out
inc
inc
outsl
mov
icebp
dec
mov
sbb
mov
gs
adc
hlt
sub
pusha
es
mov
cmpsb
sti
faddl
push
cltd
fs
dec
dec
popa
fnstcw
or
push
jmp
push
iret
mov
add
lock
nop
jecxz
imulb
lcall
insb
popf
and
and
sahf
aaa
jbe
xchg
and
pop
scas
lret
lret
inc
pop
push
loopne
fsubrs
lcall
mov
mov
pushf
mov
mov
mov
inc
adcl
pop
js
push
inc
sbb
xor
inc
imul
cmpsb
sar
fwait
test
jl
inc
test
test
xchg
and
mov
int
cmp
pop
ja
shlb
or
lods
xchg
lods
inc
xlat
sub
test
sbb
inc
sbb
xor
mov
punpckldq
sbb
ret
push
xchg
and
call
sub
inc
pop
and
sub
xor
ss
jmp
aad
test
jg
into
push
lcall
push
imul
jmp
push
or
add
add
xchg
sub
lea
repnz
out
rcr
sbb
test
int3
movsb
or
out
mov
setl
xchg
fsubs
imul
push
xchg
lret
arpl
jae
sub
aaa
stc
jo
mov
sub
inc
aaa
gs
scas
outsb
test
mov
mov
push
lds
dec
push
mov
sbb
xor
xlat
push
jno
jbe
lods
mov
fimuls
out
cmpsl
adc
mov
packuswb
xor
sub
fldt
xchg
inc
lea
mov
dec
fwait
clc
mov
arpl
dec
daa
les
daa
out
inc
std
jmp
pusha
jle
fdivr
mov
push
sbbb
pusha
fimull
adc
mov
cld
mov
mov
sti
icebp
pop
cmp
ret
dec
test
ds
push
dec
adc
push
mov
inc
scas
je
mov
pop
out
movsl
or
cli
arpl
adc
jne
pushf
mov
pop
fsubr
adc
mov
xor
mov
sub
shrb
xchg
subl
pop
xchg
fnstenv
fninit
push
das
mov
xchg
addr16
pop
dec
jae
dec
add
and
loopne
fnsave
jg
mov
lahf
pop
cwtl
sti
add
xchg
insb
in
notb
into
xor
xor
scas
shll
mov
into
fwait
int3
stos
enter
fistpl
adc
sti
jae
into
inc
popa
call
insb
test
movsl
stc
repnz
cmp
dec
push
or
add
icebp
sti
ljmp
sbb
les
and
stc
out
in
jns
and
pop
dec
sub
xor
xlat
sbb
mov
add
adc
xor
pop
mov
sub
fadds
adc
inc
ljmp
push
popf
fildl
xor
push
pop
dec
std
lcall
leave
pop
jmp
stos
lods
stos
popf
or
aam
ljmp
sub
das
call
hlt
imul
sbb
push
jne
dec
mov
xchg
test
movl
lds
cmc
xchg
sub
std
aas
mov
mov
into
push
lods
jle
fdivrs
and
push
cmp
stc
inc
or
int
fwait
dec
iret
push
fwait
pushf
push
pop
cli
jp
sub
inc
dec
rorl
and
insb
std
adc
pop
or
mov
gs
aad
push
xchg
mov
das
filds
mov
data16
fwait
mov
testl
mull
jp
or
push
sbb
js
inc
fimull
pop
push
lret
call
mov
das
mov
jg
sub
loope
in
orb
cmp
mov
mov
inc
adc
sub
pop
xchg
imul
adc
imul
dec
adc
cs
pop
clc
pop
test
and
add
mov
movl
sti
jl
daa
cmp
push
daa
push
rclb
insb
add
insb
data16
mov
lcall
sarb
sbbb
inc
sbb
jg
xor
jae
and
sbb
adc
loop
xchg
and
cmc
adcb
popa
mov
subb
mov
cmp
aas
repz
cmpsl
sub
shrb
clc
pop
sub
xchg
jecxz
cli
bound
jo
fwait
sahf
lcall
add
stos
gs
xchg
pushf
filds
mov
inc
lcall
fsts
cwtl
lcall
dec
addr16
out
outsb
sti
int
inc
pusha
int3
mov
dec
jnp
fs
or
mov
mul
jmp
fnstenv
mov
lret
imulb
test
ljmp
and
or
iret
jnp
aad
sbb
sahf
dec
sub
test
dec
push
repz
popa
cmpsb
lea
dec
xchg
sbbb
sbb
and
inc
xor
call
clc
test
shrb
negl
jge
cmp
cmp
inc
jmp
fs
fidivrs
pop
fists
imul
sub
test
movsb
enter
lret
sbb
in
repz
sbb
in
cmp
pop
inc
jge
ret
and
cmpl
pop
loopne
cmpsb
outsl
scas
inc
rclb
jle
arpl
sub
andl
mov
sbb
lahf
fldcw
popf
dec
test
adc
mov
in
loop
mov
mov
lea
repz
ss
aad
mov
cmp
divb
in
lods
sysenter
sti
lea
movsb
pushf
fstps
add
xchg
mov
mov
pop
rolb
push
mov
adc
mov
dec
sub
stc
subb
xlat
inc
in
call
lds
cwtl
repz
arpl
cmp
inc
xor
and
stc
xor
jle,pt
cmovae
push
sbb
pop
jge
and
add
adc
sbb
lret
mov
inc
shlb
adc
mov
in
ret
stos
or
dec
mov
loop
ja
cmc
mov
shlb
es
push
test
mov
add
inc
shlb
aas
jmp
jae
adc
sub
sbbb
xor
fdivrs
lds
test
fnstenv
ljmp
popa
mov
or
mov
data16
jbe
cmpsl
repnz
repnz
mov
std
push
or
cmc
arpl
gs
out
sahf
fiadds
insl
enter
test
mov
test
mov
cmc
sub
jb
mov
mov
and
adc
enter
or
das
sub
clc
aaa
cli
jl
xor
push
mov
jb
repnz
push
jecxz
out
jl
mov
xor
cmc
enter
push
jb
or
not
nop
mov
or
push
in
push
cmp
jg
divb
sbb
ja
in
dec
xchg
cld
or
xchg
push
xchg
mov
test
inc
rorb
daa
inc
cmp
jne
ljmp
cmpsl
adc
fsts
dec
sbb
mov
jae
rcrb
vxorps
stos
dec
negl
dec
fwait
shrl
shlb
and
fwait
es
push
xchg
add
mov
sahf
cmp
ret
push
lret
arpl
push
aam
in
lea
sbb
sahf
in
pop
pushf
pop
cmp
inc
bound
jmp
push
sub
push
imul
or
mov
xchg
movsl
ret
mov
dec
enter
les
test
loop
add
pusha
shrl
test
notb
sarl
orl
jge
stos
lret
stc
leave
outsb
arpl
push
lahf
repnz
or
jo
sub
clc
push
test
mov
out
pop
mov
jbe
dec
loope
pop
int3
in
cmp
cltd
jbe
xchg
fs
fwait
pop
test
fldcw
pop
stc
sub
ret
data16
nop
jb
or
pushf
cmpsb
xchg
xor
daa
xorb
mov
shlb
jo
test
rol
cmp
sub
sub
jl
inc
outsl
shll
cmpsl
and
scas
and
pushf
jp
nop
scas
add
pusha
cmc
ja
pop
das
push
xor
pop
mov
int
xchg
lods
cmpsb
add
xor
in
mov
ret
sub
or
push
adc
adc
outsb
in
lcall
sbb
cmp
jmp
and
popa
mov
clc
inc
jl
divl
arpl
cwtl
sbb
rcll
test
cmc
adc
das
push
jge
std
cli
pop
pushf
jno
repnz
shll
adc
test
cli
sub
pop
std
sub
dec
push
sahf
jno,pt
mov
cmp
jl
xchg
push
ret
push
add
add
jl
lds
adc
sbb
fmull
gs
jp
add
dec
inc
lret
and
push
push
mov
pop
jle
mov
xor
insb
movzwl
sub
or
mov
pcmpgtb
cmp
add
inc
mov
pop
dec
dec
flds
lods
cltd
sub
or
fildll
daa
xchg
lods
mov
fidivs
lret
fwait
push
mov
lea
lret
and
sub
mov
clc
shr
push
lods
mov
or
in
ljmp
add
cmp
jb
jo
scas
les
scas
clc
leave
cmp
push
int3
xor
call
lea
lods
pop
mov
jmp
jbe
cmp
scas
fldt
inc
test
adc
in
push
jle
and
lea
sbb
neg
add
mov
inc
xor
cwtl
adc
jo
pop
xchg
add
shlb
lock
ja
inc
jbe
pop
cmc
insb
jl
pop
je
push
push
icebp
int3
jnp
mov
or
mov
mov
cmp
nop
lea
lock
add
jno
pop
mov
inc
and
mov
push
jno
jo
pop
je
movl
lcall
js
push
xor
lret
sahf
jns
or
adc
rcr
sub
dec
or
cmp
inc
clc
sub
stc
imulb
push
outsl
mov
mov
in
xchg
cwtl
inc
sub
xchg
push
sbb
in
xor
enter
sub
repnz
xor
inc
and
xchg
pop
or
into
stos
pop
movsl
adc
rorl
insl
js
jne
cltd
lock
in
repnz
into
mov
jg
stc
adc
push
push
stc
jae
xor
shll
arpl
inc
aad
lcall
icebp
pop
mov
and
xchg
flds
pop
push
sub
and
xchg
sarl
push
repz
dec
insl
rcl
xchg
outsl
xchg
push
mov
jp
aas
xchg
push
sub
imul
stos
xor
test
loopne
cmp
cmp
xchg
push
jge
mov
mov
aad
adc
clc
adc
sub
mov
ds
loopne
mov
std
pop
sub
idivb
gs
cmpsl
and
or
xchg
stos
mov
fdivrs
sbb
out
frstor
insb
mov
lret
sub
sbb
int
aas
adc
fadd
jnp
dec
pop
mov
repz
dec
mov
andb
imul
pop
out
neg
shrl
pop
lea
jns
sub
sbb
xor
bound
push
lret
xchg
inc
add
in
loop
test
xor
mov
jecxz
sysexit
mov
data16
dec
fsubr
jge
dec
orb
cmp
fisttps
xlat
movsb
jg
clc
cmp
mov
addr16
cmove
fstl
pusha
in
arpl
sti
jno
and
out
leave
jbe
mov
mov
cltd
pop
or
mov
adc
shl
shlb
je
adc
add
testb
popa
negb
aad
mov
fs
sbb
pop
movsb
call
inc
enter
popl
imul
and
lods
loopne
push
sbb
inc
call
out
js
aas
in
sbb
jae
jmp
dec
mov
inc
mov
ja
dec
push
icebp
mov
lret
sti
clc
cmp
xor
cmp
xchg
xor
cmp
leave
pop
mov
fnstcw
fcmovbe
sub
pop
push
and
cmc
lahf
das
in
insl
insb
mov
ss
mov
rolb
sub
divl
ret
stos
mov
iret
pop
mov
mov
push
mov
int
or
sbb
ljmp
xor
mov
push
cmpsl
jle
shll
jge
pop
cmpl
mov
loopne
cmc
test
mov
lods
add
in
jb
pop
pop
sti
sub
iret
push
sub
push
rolb
or
mov
sarb
in
dec
mov
or
mov
in
or
inc
call
push
mov
lods
pop
daa
shll
push
jge
jg
xchg
lods
cmp
push
shrl
mov
and
jns
and
sbb
out
loopne
pop
mov
aas
movsb
mov
jae
scas
sub
pop
popf
push
jb
js
xor
dec
or
xchg
adc
sti
add
adc
or
xchg
fcoms
int3
test
pop
cmp
test
mov
aad
mov
pop
push
dec
dec
pop
cwtl
lods
pop
das
xor
inc
outsb
fldenv
jp
fsubrs
subl
in
lods
mov
test
and
fbstp
xor
movsb
sti
stos
movsl
call
mov
cltd
sbb
shl
popa
ret
xchg
shrl
call
imul
call
add
leave
shr
or
xor
cmpsb
scas
mov
cmp
loop
cmp
fmull
loope
push
pop
setg
or
test
and
mov
test
push
and
leave
sub
sub
cmp
adc
subl
movsl
rcr
push
push
lret
jle
mov
xchg
add
ds
inc
sub
sbb
into
push
mov
in
dec
inc
cs
daa
jno
pop
in
out
ja
mov
cli
nop
mov
mov
xchg
or
cmp
pop
sub
addl
mov
and
in
aas
fsubl
adc
out
push
jo
xor
prefetch
or
rorl
xor
jle
negb
in
out
push
or
xor
in
ret
pop
mov
out
dec
adc
mov
xchg
int
dec
sbb
jae
imulb
loope
push
jns
dec
or
pop
push
lret
in
xor
imul
adc
int3
cmpsb
in
rcll
add
ds
jge
scas
outsl
xchg
out
xchg
sbbl
cmpl
icebp
xor
pusha
mov
mov
mov
pop
mov
aas
iret
sti
insl
mov
push
inc
sbb
sub
sub
shl
xlat
mov
mov
pop
addr16
idivl
mov
jecxz
ret
jnp
adc
arpl
and
jmp
push
add
xchg
and
cmp
xchg
sbb
sarl
ficoml
fwait
ljmp
cmovs
sub
sbb
mov
leave
dec
or
lcall
cltd
sbb
mov
sub
sub
aaa
call
cld
xor
push
and
mov
jle
lds
int3
lret
sub
and
out
adc
and
dec
jno
sub
and
adc
pop
out
movsb
push
cwtl
xchg
mov
cmp
jnp
adc
fdivp
stc
inc
xor
sar
add
jb
scas
mov
fdivr
add
inc
shrl
iret
test
add
dec
adc
jl
rcrb
int3
js
scas
or
rcrb
testb
andb
sub
sbb
lods
dec
hlt
mov
and
mov
pop
in
js
dec
pop
adc
sti
pop
xchg
and
dec
je
jb
jp
test
jo
repnz
mov
sbb
cmp
add
int
fsubr
add
dec
sub
jg
fsub
jns
decl
insb
ljmp
add
cmc
sbb
mov
lock
cli
mov
fsts
add
xor
cs
shl
xchg
les
mov
xchg
or
mov
pop
xchg
fmulp
mov
adc
aaa
jmp
inc
fldcw
jno
jno
jp
jae
cmp
adc
add
cmp
adc
imul
fsubs
rorl
xor
sbb
dec
xchg
pop
stos
cmc
test
sbb
jle
out
jle
out
nop
int3
mov
pop
or
lcall
xchg
pop
or
jg
sbb
stc
insl
lods
movsb
cs
pusha
cs
outsb
scas
out
sbb
out
orl
dec
mov
xchg
sbb
popf
enter
divb
jp
add
dec
ret
dec
les
cmp
push
xchg
fs
mov
dec
cli
mov
ror
or
mov
movsl
lcall
ficoml
push
ret
add
mull
mov
into
jne
adc
xchg
mov
fstpl
pop
push
mov
dec
popa
jno
loopne
imul
pop
mov
inc
movsb
and
icebp
inc
dec
cld
push
jae
lea
push
test
jb
sbb
adc
frstor
aas
inc
inc
jmp
lcall
test
std
xor
pop
pop
push
jl
mov
lock
pop
pop
js
mov
jo
mov
mov
lock
ja
xchg
negb
mov
mov
lahf
push
sbb
addr16
lock
mov
cmp
scas
push
int
lret
inc
xchg
and
out
inc
lods
add
mov
cmpsl
or
fs
aas
jbe
xorl
and
dec
jge
mov
sbb
sub
fcmovu
mov
cmpsl
pop
adc
lret
lock
cmpl
push
out
sub
cwtl
cld
dec
imul
mov
sbb
adc
push
stos
int
pusha
push
push
inc
cltd
jp
mov
push
and
fcompl
fdivs
lea
testb
fcompl
fsubrs
lahf
divb
fdivrl
sub
pop
setg
sub
pop
test
jb
adc
aad
lock
jns
sar
add
sub
ljmp
cmp
push
pop
jle
das
pusha
add
dec
dec
addr16
xorb
jg
in
sar
std
and
adc
sub
jne
mov
adc
mov
pop
mov
cli
cmp
inc
out
divl
lahf
jge
add
imul
ljmp
add
and
in
ret
sub
inc
lods
out
dec
xor
xchg
ret
cmpsl
jge
call
lods
pop
mov
xor
ret
xor
jmp
push
lock
and
xchg
std
push
in
sub
pop
daa
push
std
push
out
in
aad
sbb
jno
ret
js
cld
ss
pop
xchg
lret
cmp
inc
xchg
add
stc
pushf
push
lock
clc
incb
xor
movsb
add
xor
mov
fsubp
je
ds
mov
push
inc
inc
stc
cld
mov
inc
hlt
push
mov
cmpsl
les
push
cwtl
inc
cmp
xor
cltd
add
in
jmp
int3
fnstcw
lret
push
pop
xchg
xor
add
inc
ljmp
shl
stos
adc
int
in
xchg
outsb
or
xor
out
and
ret
les
mov
cwtl
btc
outsb
pop
mov
loopne,pt
outsl
pop
or
sub
xor
stc
pop
jl
or
daa
rcl
lret
jno
fcmovnb
lret
roll
cli
mov
xchg
shll
push
jle
pushf
repz
lahf
mov
lret
aas
adc
mov
jge
inc
outsb
add
cld
icebp
rcrb
outsl
jno
xor
fwait
loopne
or
loopne
in
xchg
lods
mov
repnz
jae
gs
mov
je
sbb
dec
fwait
popl
xor
and
imul
jne
pop
jne
fstpl
lock
into
sbb
adc
es
xchg
or
cmp
pop
pusha
stos
fs
push
cmp
dec
in
sbb
push
flds
cmp
std
pop
inc
in
lea
xor
sbb
popa
leave
lds
test
xor
out
shll
xlat
aad
adc
scas
scas
add
rorb
cmc
test
pop
adc
fmuls
lcall
icebp
aaa
sarb
mov
jg
and
xlat
jl
outsb
fidivl
out
dec
subl
icebp
repnz
cmpsl
scas
lret
add
mov
mov
stc
std
mov
nop
shll
lcall
mov
push
int
loop
or
and
pop
testl
dec
xorl
and
into
fwait
mov
sarl
enter
xor
push
ret
int
inc
test
mov
es
push
test
fldl
aaa
sub
mov
add
jecxz
ret
imul
push
dec
sub
scas
sbb
pusha
out
sti
lods
repz
imul
fdivs
pop
lret
fnstsw
mov
lods
shlb
inc
mov
xor
outsb
std
push
inc
jle
rclb
in
mov
mov
adc
add
out
lds
cwtl
fistps
push
xor
inc
fildl
cmp
jae
repnz
subb
loopne
add
xchg
dec
pop
in
cmp
adc
fidivl
shll
ja
jg
gs
sarl
sbb
push
and
mov
push
pusha
imul
orl
jmp
sbb
cltd
sbb
sbb
or
mov
stos
ljmp
add
out
into
leave
dec
clc
pop
mov
inc
nop
inc
gs
pop
push
push
xchg
adc
xor
mov
ds
mov
sub
sarl
test
inc
and
mov
sbb
adc
insl
pop
mov
dec
add
out
dec
les
pop
lock
in
stos
pop
repz
cmp
xchg
dec
pop
imul
push
mov
shr
cmp
repz
js
jns
aas
push
in
rsqrtps
cli
xchg
dec
js
xor
push
frstor
xorb
inc
dec
jo
mov
inc
cmp
mov
sub
addr16
in
jno
mov
scas
icebp
or
pause
mov
cmpsb
pop
inc
push
mov
or
mov
inc
aad
xchg
mov
lea
pop
or
fidivrl
dec
aas
push
sbb
xchg
cwtl
lahf
js
sbb
cltd
decl
mov
jp
push
ds
dec
xchg
daa
cli
addl
dec
popf
sbb
mov
xchg
inc
mov
sbbl
pop
push
outsb
ret
loop
sahf
mov
notl
sub
lahf
push
push
es
mov
xchg
lret
sbb
outsl
sbb
pop
leave
mov
or
icebp
or
jae
shll
lock
addps
test
push
inc
mov
add
hlt
push
fwait
test
xor
pop
test
and
inc
xchg
xchg
test
es
push
xor
lods
and
shll
xchg
loop
sub
xor
xor
insl
push
scas
scas
jno
testl
mov
lock
stos
mov
jno
cmp
outsb
fmull
in
lock
sbb
add
dec
lret
dec
ret
shll
mov
lods
sbb
mov
cmpsb
rcrb
inc
insb
outsl
jbe
xchg
loopne
aad
push
sbb
jge
fbld
rcll
out
ds
xchg
out
pop
loope
xor
dec
andb
mov
repnz
pop
popf
mov
mov
add
scas
daa
movsb
mov
push
and
inc
imul
dec
mov
pop
push
movsl
xor
xchg
xor
scas
pop
aad
ret
inc
sub
inc
or
lcall
cmpsb
test
jecxz
cmpsl
or
not
add
or
in
mov
cwtl
mov
cmp
cmc
faddl
sub
mov
loope
lods
cs
add
inc
mov
jno
loop
push
pushf
cwtl
inc
shlb
add
jbe
lods
lahf
js
xor
and
repz
insl
lock
test
mov
fchs
in
shlb
in
sahf
dec
data16
lret
cltd
lret
adc
xlat
incb
out
inc
cmp
sti
jno
lret
inc
data16
out
add
cmp
mov
mov
mov
lods
arpl
in
cs
mov
add
out
add
ljmp
sub
lea
pop
aaa
loope
xor
lods
mov
cld
mov
dec
fs
sbb
cmp
and
and
xor
sbb
xchg
shlb
subl
es
push
orl
cmp
mov
ds
lret
sar
in
xor
dec
mov
xchg
mov
mov
pop
mov
stos
add
jle
popf
jg
adc
test
mov
push
out
addr16
daa
push
inc
inc
popf
mov
cltd
pop
add
mov
pushl
lret
jns
mov
inc
cmpsl
repz
test
daa
add
or
stos
add
inc
popa
or
add
jle
push
sbb
adc
push
mov
add
in
dec
dec
pusha
adc
mov
ds
and
in
mov
loope
mov
sub
ja
imul
push
add
sbbl
fs
dec
add
iret
sarb
loopne
cmp
fstpt
push
imul
and
int
pop
cld
inc
jae
cmp
xchg
sub
sahf
pop
jo
negb
mov
test
and
pop
push
stos
jns
outsb
push
iret
jns
pop
jb
test
sub
ljmp
jl
popa
pop
sub
imul
iret
movsl
sbb
in
inc
and
jecxz
loope
cmp
pop
push
cmpb
aaa
and
mov
cwtl
push
loope
stc
adc
rorl
xlat
idivl
mov
lods
sbb
mov
pop
movsb
into
hlt
imul
sbb
rorb
into
sar
jnp
sub
setnp
xor
and
mov
jne
ja
stos
cld
and
mov
jmp
addr16
mov
addr16
inc
imul
fistps
imul
mov
xor
arpl
dec
cld
in
sbb
aaa
mov
data16
dec
add
mov
cltd
add
jle
inc
add
jge
inc
pop
jno
imul
push
adc
ficoms
iret
aam
pop
cmp
mov
ja
mov
add
adc
fst
lods
andb
cmpsb
xchg
cs
dec
and
sub
shrl
and
stos
fiadds
addr16
outsl
andb
mov
lds
adc
cmpsb
cmp
popf
fbld
ds
adc
pop
or
xchg
dec
subl
in
push
rcr
lahf
sarb
aaa
push
cltd
xchg
and
pop
cmc
lcall
pushf
inc
outsl
scas
jmp
sti
jl
or
ret
popf
dec
icebp
sti
pop
cmc
punpckhbw
mov
xor
shlb
or
cmpsb
sub
sub
jbe
push
pand
mov
add
dec
sbb
cmc
fidivs
mov
andl
std
mov
xchg
jns
lahf
and
and
popf
in
xlat
andb
sub
repz
dec
or
movsl
xor
cli
cmp
stos
decl
xlat
ret
cli
mov
mov
jbe
dec
jl
or
inc
das
out
aad
leave
call
or
push
sti
mov
popa
call
popf
add
pop
sbb
cmp
andb
cli
mov
cli
or
jbe
insb
jecxz
cmp
mov
jne
jno
add
sub
xchg
xchg
push
pop
fcmovnb
arpl
into
pop
js
sbb
aas
push
add
adc
jns
mov
insb
push
sbb
and
push
fists
bound
pop
inc
push
pop
or
dec
jle
inc
mov
jecxz
xchg
jns
add
mov
pop
mov
fldcw
sti
pusha
sbb
ret
sub
stos
bswap
mov
mov
adc
test
xchg
jns
and
fisttpl
dec
in
add
fsub
fnstsw
movl
mov
cmp
xchg
inc
fisubrl
out
cltd
outsl
xchg
or
add
xchg
jmp
dec
push
ret
xor
test
orb
cmp
or
imul
inc
xor
lahf
ret
jnp
mov
es
cmpsb
imull
ss
xchg
mov
int3
adc
imul
adc
out
lods
dec
sub
test
or
repz
es
lret
rolb
adc
das
aad
inc
xchg
aam
dec
mov
mov
les
cmpsl
test
and
ja
notl
push
lea
pop
sub
xchg
jge
fsubr
rclb
lret
leave
cmp
mov
push
outsl
fisttps
lock
rorb
pop
adc
cltd
bound
movsb
push
aas
mov
jbe
imul
aaa
cltd
shrb
sub
addr16
ret
sub
dec
pop
shrb
out
xor
push
mov
xchg
pop
in
insb
andb
xchg
dec
inc
xor
xor
lock
or
out
sbb
jae
ret
mov
fwait
enter
add
and
adc
add
test
rcrl
xchg
hlt
mov
hlt
adc
lea
or
mov
rcl
adc
pop
std
mov
dec
xor
and
jl
rorb
adc
or
or
cmp
adc
out
push
in
pop
imul
xor
xadd
ljmp
pushf
pop
mov
mov
push
add
sub
fwait
push
xchg
and
xorl
in
xchg
cmpb
rcrb
mov
repz
popf
clc
aaa
xor
neg
ss
ja
andb
push
fistl
call
xchg
add
jb
je
imul
xchg
and
mov
dec
mov
sbb
xor
jnp
hlt
xlat
aaa
cmp
inc
add
xor
shl
push
inc
and
push
sub
xchg
jmp
and
loopne
repz
jp
mov
or
adc
and
mulb
jge
mov
loope
xor
popf
cli
or
ja
inc
icebp
in
inc
aam
inc
xchg
inc
jbe
je
scas
push
addr16
cmp
subl
sub
in
in
push
fwait
movsl
icebp
dec
pop
dec
mov
les
mov
or
jmp
add
xchg
jmp
mov
ds
xchg
shlb
scas
sub
add
adc
sbb
cmpsl
dec
mov
popf
idivl
int3
mov
push
dec
clc
dec
and
sahf
enter
jb
mov
inc
xor
sbb
xchg
gs
test
inc
jp
push
mov
xchg
and
mov
scas
push
sbb
mov
mov
pop
or
stc
or
bound
push
sbbb
in
cmp
push
dec
and
loop
cmp
es
sbb
fcmovne
and
imul
das
jle
mov
dec
pop
scas
pop
or
cltd
rclb
frstor
jbe
mov
stc
rclb
inc
xchg
mov
rorb
cmp
popf
leave
stc
ret
add
jmp
xchg
imull
mov
or
mov
xchg
inc
cmp
mov
hlt
and
dec
test
fmuls
jmp
insb
mov
dec
cld
dec
mov
pop
xchg
inc
nop
xor
xchg
into
aad
xchg
cli
and
dec
popf
test
imul
dec
or
inc
sbb
sub
push
sbb
mov
cmpsb
aaa
ds
lret
icebp
cld
es
je
aas
mov
add
call
iret
lods
dec
enter
sbbb
mov
xchg
mov
aad
pop
dec
sbb
add
rorb
int3
in
insb
push
jo
push
jno
or
jge
cmp
adc
ret
push
xchg
adc
pop
out
mov
test
inc
xor
les
mov
pop
test
push
xor
cltd
ds
sbb
push
cmpsl
fnsave
call
dec
add
sub
push
mov
sbb
cmp
mov
sbb
mov
push
adc
jmp
pop
lret
xchg
xchg
pop
adc
mov
push
jmp
lea
dec
mov
nop
mov
pop
sbb
imul
jnp
sub
push
mov
or
lret
loop,pt
push
xchg
xor
ljmp
ret
fwait
sti
sbb
cli
sbb
test
mov
test
adc
xor
add
jmp
nop
jae
into
into
imul
mov
pop
inc
movsb
add
pop
scas
push
aam
out
inc
sbb
sub
test
inc
movsb
ja
out
fsubl
inc
mov
adc
push
jl
mov
dec
mov
adcb
and
jg
add
ror
shr
mov
or
jno
pop
jo
or
sub
fisubs
arpl
lock
dec
movsb
leave
push
je
in
jecxz
pop
pop
inc
jle
or
push
lods
sub
pop
push
mov
es
and
jl
test
pop
sub
aaa
push
add
mov
or
movsl
ss
mov
dec
test
test
cmp
into
mov
add
dec
data16
add
ret
daa
movsl
leave
lods
pop
gs
fs
cmp
mov
loopne
xchg
popf
data16
out
rcll
stos
fidivrl
stc
in
adc
outsb
imul
shlb
aad
jo
jns
sbb
jmp
sub
jns
roll
mov
cmp
sub
inc
enter
adc
icebp
mov
ss
and
mov
iret
dec
xor
push
sbb
mov
arpl
xlat
mov
aam
inc
loop
addr16
jmp
ficompl
daa
or
and
pop
cs
gs
and
scas
fwait
aas
xchg
ret
dec
into
mov
inc
or
ret
cmp
cmp
fidivl
cmc
cmp
xchg
cmp
sub
test
inc
jp
aas
push
jo
dec
insb
or
push
push
cs
adc
sbb
rcr
outsb
cmpsb
pushf
mov
inc
jecxz
aas
pop
mov
xchg
mov
inc
or
push
aam
xchg
cmpsl
test
pushf
push
lcall
add
sub
leave
pop
subl
iret
pop
or
mov
mov
mov
xor
sbb
and
mov
mov
push
mov
aaa
fmull
pop
clc
push
insb
mov
loop
lds
mov
inc
dec
outsl
cmp
ljmp
pop
cmpl
sbb
xor
negl
shl
cld
pop
pop
cwtl
daa
divps
scas
movsb
dec
cs
xor
jno
adc
sub
stos
and
xor
rolb
test
test
cmpsb
inc
pop
jae
mov
pop
inc
mov
adc
mov
scas
adc
inc
stos
mov
js
fidivrl
mov
jecxz
test
and
jle
push
mov
jge
cmpsb
push
dec
int
and
arpl
ljmp
or
fdivs
inc
push
and
roll
or
out
lea
cli
or
jp
outsl
insl
std
cli
sahf
iret
adc
cmp
mov
lds
and
dec
movsl
mov
xor
cmpsl
xchg
mov
lcall
xchg
mov
sub
ret
fcos
pop
int
mov
int3
add
sti
daa
rorl
xchg
enter
dec
mov
lcall
and
cmc
aas
push
pop
int3
mov
xor
adc
xor
addr16
and
mov
addl
movsl
xchg
les
xchg
push
cmc
bound
test
adc
xchg
repz
xor
jl
mov
inc
inc
mov
cwtl
xchg
sti
into
xchg
mov
fistpll
xor
cmp
scas
jnp
fxch
mov
and
or
test
push
popf
inc
fidivrl
insb
xchg
cltd
imul
sub
add
pop
mov
out
and
mov
cwtl
add
stc
out
leave
pop
cmc
or
mov
pop
addr16
jecxz
inc
lret
or
insb
les
adc
pop
shll
sub
sbb
dec
inc
fidivs
mov
data16
mov
jne
mov
mov
loope
int
mov
hlt
cmp
ds
jp
idiv
fnsave
push
xor
xchg
push
imul
pop
mov
cmp
lods
imul
mov
cld
call
sub
push
in
cli
out
stc
sbb
push
cld
es
xor
cmpl
popa
out
daa
dec
jo
mov
aad
cmc
mov
hlt
scas
ret
shlb
or
cmpsl
dec
sar
stos
aaa
ret
mov
and
js
mov
jae
jne
fnclex
add
and
lds
scas
add
adc
sbb
cwtl
fidivs
repnz
enter
bound
stos
dec
fcomi
aas
fnsave
cld
clc
xor
sbb
mov
pop
adc
cs
mov
cs
call
pop
test
sub
in
cmp
sbb
mov
out
addb
jmp
mov
ds
push
push
cmpsl
inc
iret
inc
dec
mov
repz
add
dec
push
mov
push
shll
jp
adc
pop
cmpsl
pop
in
pop
sbb
dec
jo
into
cwtl
stc
and
imul
in
cli
dec
add
fwait
dec
ss
mov
add
jl
xor
clc
test
jmp
das
mov
fwait
mov
mov
jno,pt
in
cmpsl
pop
fstps
pop
push
or
mov
paddsb
es
or
enter
cmp
addb
mov
cltd
add
outsl
mov
or
jmp
outsl
imul
mov
sub
je
mov
fidivrl
cmc
scas
push
dec
lods
scas
mov
imul
cli
xor
push
enter
dec
mov
aaa
push
subl
scas
popf
push
cmp
adc
out
push
pop
outsb
std
scas
pop
mov
mov
add
aas
cmp
inc
into
add
xchg
clc
sar
fwait
sbb
arpl
int
cmpsl
jbe
dec
push
mov
movsl
outsb
adc
add
push
loope
mov
push
gs
das
es
in
dec
aad
int
push
mov
cmpsb
cmc
leave
addr16
xchg
jns
aaa
dec
es
inc
pop
sbb
add
fcmovnb
pop
or
inc
pop
pop
popf
jge
sub
dec
mov
stc
and
jnp
mov
or
or
add
imul
adc
test
mov
dec
xchg
es
int3
cmpsb
sub
add
push
icebp
pushf
aaa
aas
enter
dec
fisttpl
jmp
jl
stc
xchg
dec
push
push
shl
clc
mov
xchg
mov
fistpl
fldenv
movsl
pusha
dec
inc
cs
mov
in
arpl
mov
xchg
push
cmpsl
aad
mov
arpl
rcll
stos
dec
mov
movsl
adc
das
dec
jmp
dec
xchg
xchg
aad
mov
jecxz
out
pusha
cmpsl
push
lahf
icebp
xchg
in
mov
lcall
ret
xor
or
mov
xchg
cli
outsl
or
call
lods
or
or
outsl
outsb
sti
adcl
sub
jns
mov
xor
aam
mov
mov
pop
ljmp
ljmp
xchg
mov
stos
and
add
push
imul
jns
sbb
xor
or
xlat
xor
leave
stos
inc
mov
dec
fldl
ja
push
adc
xchg
adc
pop
in
pop
push
push
fnstenv
and
test
pop
or
xchg
xchg
mov
cs
into
jmp
dec
scas
rolb
mov
sbb
clc
sbb
xor
add
inc
inc
cld
cmp
mov
inc
sub
sub
mov
add
add
les
cmp
xor
lock
pop
jp
xchg
lahf
dec
je
add
pop
sbb
test
push
cli
insb
xchg
popa
movsl
and
cmpsl
pop
pop
daa
push
inc
out
push
nop
xor
and
mov
push
pop
out
pop
lds
or
imul
out
xor
and
sbb
adc
rclb
xorb
jmp
daa
push
sti
adc
dec
adc
push
imul
add
jg
push
dec
push
test
cmp
jecxz
push
adcb
xor
mov
add
add
pop
movsb
xchg
repz
jb
call
lret
sbb
gs
sub
ret
pop
push
mov
pop
mov
and
loop
mov
xor
js
mov
shl
or
jb
shll
dec
loop
in
jnp
dec
arpl
nop
add
into
mov
adc
sub
das
imul
push
push
pop
scas
or
std
loopne
mov
xor
or
fistl
cmp
mov
aaa
out
ficoms
mov
mov
pop
and
repnz
loope
pop
int3
lahf
dec
inc
pop
jge
ss
shl
mov
jmp
out
pop
idivl
fisttps
repz
ss
jmp
je
test
fstps
cld
mov
xlat
bound
ds
aam
ss
imulb
in
dec
iret
pushf
insb
mov
idivl
test
ja
cs
and
cs
mov
adc
cs
fwait
xchg
jmp
dec
stos
jno
xor
inc
jl
mov
fisubrs
xlat
movsl
add
cmp
loop
mov
cmc
lock
or
movsl
divb
xchg
inc
je
push
adc
add
mov
jbe
lock
xchg
xchg
sbb
push
loopne
icebp
int
mov
xor
cmp
leave
int3
orl
mov
out
nop
xor
test
faddl
test
xor
iret
dec
dec
test
xor
sbb
xchg
jbe
adc
jle
loop
imul
push
lods
adc
jp
sub
sub
xlat
fisttpll
sub
or
xchg
subl
sub
jge
jge
jnp
pop
lods
add
push
sub
leave
dec
mov
loop
aam
pop
jge
mov
sub
mov
pop
sub
out
lret
xchg
stc
pop
popf
cmp
stc
fldl
inc
imul
or
iret
rorl
xchg
aad
cmp
inc
inc
or
push
pop
testb
sub
xlat
fcomps
loope
stos
dec
add
pushf
out
mov
in
jg
mov
pop
sbb
mov
lahf
jp
pop
sub
outsb
mov
test
mov
out
test
or
xor
imul
mov
les
hlt
notb
adc
das
xchg
std
into
inc
lods
loopne
adc
popa
jo
sar
nop
cmp
mov
inc
icebp
in
loope
mov
lret
push
es
jmp
xorb
cmp
rcrl
xor
or
push
push
push
mov
das
jbe
rorb
into
sub
jnp
imul
lods
sub
push
cmpsl
adc
mov
lret
adc
mov
pop
stos
xchg
pop
dec
cmp
loopne
shl
test
bound
das
mov
stc
mov
mov
xchg
inc
mov
nop
jne
lods
mov
push
jo
sub
mov
push
cmp
and
rcr
lret
adc
xchg
jnp
sub
or
and
clc
cltd
bound
ret
daa
cld
mov
mov
stos
fs
sbbl
mov
add
push
pop
dec
jecxz
test
jg
sarl
rolb
sub
fcmovnbe
xor
cmp
xlat
aaa
jnp
mov
insl
jmp
mov
lahf
aas
lcall
cmp
fwait
xchg
mov
cs
xchg
pop
xor
sub
scas
gs
pusha
or
and
sub
negb
jae
fmuls
fldl
add
leave
xchg
clc
lcall
inc
scas
shlb
jecxz
lock
int
mov
jns
test
ljmp
fwait
and
arpl
mov
and
mov
adc
xchg
pop
ljmp
mov
pop
movl
out
jne
data16
xchg
rolb
or
inc
aad
stos
mov
mov
fidivs
jnp
lock
sar
dec
ret
cltd
stc
push
outsb
cmp
push
popa
imul
adc
stos
and
fidivrl
inc
pop
push
dec
lods
fsubs
sub
dec
mov
push
mov
scas
sbb
push
in
fsubrl
sarl
int3
addr16
or
and
repnz
jno
imul
ja
int3
or
dec
xchg
ja
nop
and
jo
xor
jno
add
cmp
add
rorb
or
daa
lock
mov
and
and
fcoms
mov
push
add
out
stos
jl
push
in
mov
psrlq
out
adc
arpl
push
lds
add
mov
cmp
jmp
and
lods
insl
in
lock
mov
call
mov
xlat
inc
loop
pop
test
ror
rcl
dec
push
imul
fcmovb
in
outsb
mov
push
pop
cmc
fldl2e
in
daa
sarl
bound
sbb
mov
fwait
mov
lods
or
in
or
add
or
pop
ds
inc
fisubrl
pop
les
dec
mov
cmp
test
insb
mov
arpl
sbb
mov
or
mov
sub
xor
push
mov
mov
in
je
aas
sti
repz
xchg
arpl
jle
loopne
fmuls
leave
dec
dec
push
mov
loop
cmp
inc
dec
in
mov
mov
lock
sbb
sbb
int3
push
cmp
adc
add
push
add
mov
das
sub
push
ret
pop
jge
daa
mov
test
add
call
sbb
jmp
jg
jae
mov
jg
aas
cld
jg
mov
incl
lods
dec
push
je
pop
cltd
in
cmpsb
inc
or
or
jb
and
insb
mov
inc
jo
mov
in
cmpsl
dec
xorl
mov
xchg
popf
scas
mov
outsb
popa
jg
push
fistpll
lods
sbb
add
scas
xchg
and
xchg
lahf
push
add
jle
mov
fildl
fdivs
inc
cmp
test
loop
aad
sbb
mov
pop
lahf
aad
sub
les
pop
lahf
or
sub
imul
sub
jg
sbb
inc
xchg
xlat
pop
outsb
cltd
leave
inc
pop
ret
fldcw
pand
jle
mov
loop
xchg
je
testl
jnp
je
xor
sbb
ss
mov
test
into
sbb
mov
pop
pop
mov
add
lods
mov
cmpl
pop
inc
lret
subb
sub
mov
xchg
push
fisttpl
sbb
ds
lret
call
aaa
adc
push
outsl
clc
and
pop
lods
dec
aas
int3
mov
push
ficoml
int
nop
in
mov
cmp
idivl
xchg
fnstsw
sbb
aaa
or
in
cmp
add
and
mov
or
pop
mov
or
or
sub
push
cli
mov
fildl
add
out
sub
test
mov
ss
xchg
sub
cmpsl
out
or
push
movsb
xchg
fwait
dec
or
dec
or
adc
pushl
xor
movsl
fnstsw
popf
loope
aad
xor
stos
xchg
xchg
pushf
loopne
mov
cwtl
add
repnz
insl
dec
stos
or
ret
xchg
or
mov
lods
cwtl
jle
scas
cmp
out
sub
add
int
es
jno
mov
cmpsb
jle
mov
push
mov
js
mov
adc
dec
xor
jbe
test
int3
loop
mov
loope
fsubr
insb
sbb
mov
loopne
ficoml
add
lret
stos
jb
jecxz
mov
nop
jno
sbb
lods
dec
sbb
ret
lret
aas
add
cmp
add
inc
out
jb
filds
push
mov
into
bound
sahf
loop
dec
out
sbb
imul
stos
jb
rolb
stos
mov
push
cltd
xchg
add
cmp
adc
insl
jl
js
mov
xchg
jo
decl
outsl
je
mov
or
adc
mov
and
or
xchg
out
stos
sub
xchg
aas
cmp
dec
mov
into
add
mov
mov
adc
adc
pop
xchg
stos
inc
jmp
or
fadds
mov
xor
insl
mov
arpl
lea
inc
ja
or
js
fidivrl
gs
mov
xchg
add
lods
cmp
movsl
mov
mov
lcall
or
jne
jle
mov
sbbl
pop
ds
scas
jle
mov
mov
pusha
nop
pop
jae
push
jo
popf
repnz
jns
sub
faddl
sub
xor
mov
mov
mov
sub
xchg
or
neg
and
pusha
push
add
outsb
test
mov
inc
out
cld
and
out
into
mov
or
xchg
xchg
sbb
mov
sbb
mov
in
hlt
fisubrl
sub
lods
leave
sarl
int3
enter
pop
mov
mov
and
push
lods
jne
mov
stos
or
xor
pop
lods
xchg
xchg
sbb
or
adcl
push
popf
aas
cmc
icebp
rorb
sub
outsl
add
fst
out
push
sbb
pop
fwait
add
imul
pop
cmp
pop
pushf
loop
and
sub
push
outsl
ds
cltd
jg
mov
add
dec
and
les
hlt
push
pop
fsubl
icebp
cmp
jecxz
inc
das
repz
sbb
sub
int3
das
stos
xchg
mov
stc
jg
dec
jge
in
cltd
lock
pop
test
sbb
inc
lea
iret
xor
jl
cmp
and
jne
in
cmpsl
xor
nop
push
addr16
sbb
movb
push
or
push
cs
sbb
enter
and
and
int
jg
popa
or
push
mov
fisubrl
mov
sbb
ret
flds
into
jnp
std
test
mov
and
and
leave
inc
lods
dec
or
dec
pusha
outsb
loope
xchg
arpl
clc
stos
stos
loopnew
push
fstpl
push
pop
repz
jmp
lods
loop
push
xchg
addr16
xchg
sub
test
cmp
mov
fidivs
cmp
dec
xor
and
popf
adc
cmp
and
add
push
pop
inc
std
loopne
sub
adc
sbb
shlb
sahf
icebp
add
ror
cld
das
push
lret
mov
and
out
mov
neg
or
inc
cmp
and
popf
in
dec
repnz
pop
xchg
sub
xchg
push
leave
inc
dec
mul
adc
imul
xor
lods
lcall
pop
xchg
mov
pop
cmp
xor
push
xchg
negl
pop
mov
xor
sub
mov
fnsave
je
pop
cmp
push
xor
jmp
cmp
cli
adc
and
mov
scas
push
push
dec
push
lret
in
cs
jb
popa
xchg
cld
fcoml
sub
cmc
addr16
test
jo
xchg
mov
les
clc
hlt
jle
bound
ret
mov
movsl
mov
xor
adc
sbb
adc
and
mov
lock
mov
cli
dec
lahf
ljmp
stc
xchg
push
cmp
leave
dec
fcoml
adc
insl
icebp
sub
xor
iret
or
imul
dec
das
jbe
pop
out
cmp
ss
push
fincstp
push
dec
sar
into
lahf
fcomip
repz
test
shll
dec
clc
int3
repnz
out
mov
icebp
pop
add
imul
adc
in
cmp
scas
pop
jbe
cld
ds
mov
dec
jg
hlt
data16
call
aaa
imul
enter
js
repnz
stc
xor
push
sub
sub
loop
jb
xor
js
loopne
jae
mov
push
sarb
adc
sbb
into
sub
cmc
leave
push
ret
sar
adc
pop
jae
repz
lock
sbb
pushf
imul
outsb
push
or
inc
insl
iret
jnp
shlb
mov
cmp
test
cltd
testl
cld
add
push
fiaddl
mov
sti
rorb
enter
fadds
loop
mov
mov
or
mov
mov
mov
out
jno
adc
pop
mov
push
aaa
dec
pop
dec
ja
xchg
mov
xor
cmp
push
sahf
out
pop
sbb
hlt
leave
out
push
insb
and
sub
inc
xchg
inc
mov
scas
or
and
popf
mov
notb
jmp
sub
ret
and
mov
rcrl
xlat
inc
out
jp
test
and
jl
cs
jmp
ss
sbb
jno
mov
insl
xchg
fldt
nop
mov
dec
cmp
int3
mov
lds
or
int3
fwait
xchg
aaa
jecxz
xchg
in
orl
push
push
cmp
sbb
mov
add
sub
packuswb
rcrl
pusha
call
lods
in
pop
sarl
js
popf
xor
lock
repz
stc
xor
dec
outsb
sbb
mov
and
stos
cld
imul
xor
inc
push
lods
add
filds
in
stc
idiv
jnp
loopne
add
bound
adc
push
in
ja
pop
mov
xchg
int
inc
cmpsb
sub
dec
imul
sub
int3
into
inc
repnz
fs
aas
jb
cmpsb
cld
xor
mov
mov
or
das
js
cli
aas
out
add
xchg
popf
mov
pusha
lcall
icebp
mov
fs
js
filds
mov
push
sbb
orb
pop
out
xchg
jle
rclb
sub
jb
mov
std
popa
aad
repz
and
adc
ret
mov
jp
push
lcall
bound
sub
test
cmovg
or
jnp
fmulp
loop
fcompl
jg
pop
cmc
in
scas
sbb
push
add
and
jmp
ljmp
push
jne
or
addr16
sbb
into
sbb
pop
enter
mov
fs
mov
inc
xchg
movb
movsl
or
push
rorl
dec
mov
out
scas
dec
cmc
cmc
ja
sub
roll
and
lahf
or
hlt
jne
or
xor
dec
popf
jp
in
stos
sbb
ret
xchg
daa
add
inc
outsl
mov
adc
jnp
add
inc
aam
sbb
xlat
pop
js
xchg
fistps
into
orl
sub
lods
lahf
and
andl
pushf
cbtw
mov
jge
jl
divb
mov
mov
in
sub
push
imul
sub
mull
dec
dec
loope
jge
cmp
out
stos
call
pop
push
adc
add
outsb
mov
pop
or
xor
insb
aas
in
dec
xchg
arpl
and
inc
inc
and
xor
rorl
jge
lds
subb
jbe
fildl
insb
stos
sub
mov
cmp
xlat
xchg
icebp
test
popf
ror
inc
jmp
pop
xor
or
pop
add
jno
aad
jmp
ret
xchg
push
shl
and
mov
mov
testb
test
imul
dec
inc
add
outsb
out
shll
push
and
sub
inc
lahf
int
sbb
cmpsb
sub
push
jae
leave
repz
scas
adc
xor
js
cmp
cmp
or
and
mov
mov
xchg
dec
xchg
push
sub
push
std
and
dec
mov
push
shl
fdiv
idivb
lret
daa
jae
mov
repnz
xchg
lea
ja
jmp
clc
and
testl
cmp
sbb
fdiv
cli
push
cwtl
jmp
adc
out
jae
aam
stos
mov
jecxz
rcl
sbb
dec
rorb
mov
and
push
into
adc
dec
add
inc
in
and
std
ljmp
xchg
and
dec
jne
mov
and
add
fmuls
repnz
testl
sarl
frstor
sub
imul
sbb
cmpsl
or
cmp
push
add
adc
out
dec
in
scas
imul
iret
stc
add
and
mov
je
jmp
jg
movsl
push
dec
jb
ffree
repnz
pop
popa
mov
push
pushl
out
lods
shll
sub
aam
mov
or
sub
pop
jmp
imul
sbbb
pop
dec
data16
int3
jbe
call
cmpsb
dec
cmp
mov
je
xchg
xchg
jb
in
fisubrl
lret
rcll
gs
push
enter
icebp
scas
jmp
outsl
pop
es
and
call
rcrl
xchg
lret
cmp
adc
adc
dec
push
into
fstp
dec
lret
loop
inc
repnz
bound
loope
mov
fiadds
pop
nop
cmp
leave
loopne
sub
addr16
mov
leave
inc
fcmovne
outsb
bound
cld
incl
fcomi
cmpsb
pusha
inc
pushf
mov
cmpsl
push
das
out
mov
enter
push
jge
fs
jnp
test
mov
shr
inc
mov
inc
out
pusha
lods
repnz
mov
subl
add
adc
sbb
fs
jp
dec
cwtl
xor
fldenv
orl
mov
mov
icebp
sti
mov
xchg
jp
jp
inc
cmp
adc
jg
int
mov
jmp
cmp
and
mov
mov
fstl
test
repz
sub
sbbb
add
pop
and
and
mov
add
or
xchg
sbb
jmp
rolb
xor
pand
push
clc
push
decl
cli
in
lret
sub
dec
outsl
pop
pusha
pop
cmp
sbb
and
mov
mov
mov
scas
and
rol
test
inc
roll
push
mov
js
in
lods
lret
push
cld
xor
xchg
add
es
pop
and
xchg
add
xchg
notl
mov
xor
mov
jmp
push
push
addr16
repz
push
fwait
cmp
fucomi
mov
nop
push
pop
cli
add
ror
sbb
cmc
jno
repnz
cmc
repnz
int
sbb
in
dec
jb
call
stos
dec
bound
dec
or
mov
arpl
push
mov
sub
inc
cld
adc
call
mov
pop
jae
lahf
push
cmp
pop
ljmp
loopne
jae
mov
dec
add
cmc
xchg
dec
pop
xchg
inc
sub
xor
mov
sbb
test
and
and
push
inc
push
sbb
cmp
mov
xchg
mov
pop
mov
sub
inc
cwtl
je
adc
cmp
cmp
rcr
add
inc
sub
and
pop
push
ret
mov
jbe
inc
decb
fmull
jle
xor
das
mov
ljmp
push
mov
sub
rorl
fmull
inc
sub
call
pop
xchg
decl
sbbl
cmp
xchg
push
or
adc
mov
push
mov
push
mov
mov
sti
in
imul
xchg
sub
or
sbb
lahf
fwait
jmp
imul
push
xchg
pusha
mov
mov
rcl
xorb
outsl
fsubrs
mov
xor
pop
dec
cld
lea
aaa
xchg
out
jno
icebp
in
inc
mov
jne
inc
js
stc
dec
out
es
call
ret
and
or
sub
jbe
xor
pop
mov
enter
out
mov
xchg
or
xorb
lock
xor
inc
mov
sub
dec
jg
adc
in
mov
add
sbb
pushf
scas
pushf
mov
jmp
ja
inc
and
jnp
lock
addr16
out
pop
lds
ja
add
sbb
imul
sbb
push
cmp
jge
xlat
je
scas
loope
insl
ljmp
jle
movsl
jb
pop
das
mov
fmuls
xchg
fcoml
imul
je
pop
sub
bound
fstps
add
push
xor
push
test
lahf
outsl
push
push
cmp
mov
push
hlt
mov
adc
xchg
fwait
ljmp
icebp
push
push
das
stc
pop
sub
je
sub
in
cli
dec
movsl
ret
mov
xor
cmp
pop
mov
xchg
ss
je
inc
test
test
jge
test
popf
dec
ror
repz
jmp
pop
imul
es
adc
std
insb
flds
xor
xor
push
jo
mov
sub
lock
sbb
sub
ret
dec
sub
aam
movsl
mov
cmp
jno
lret
pop
outsb
push
jle
loopne
xor
std
and
mov
fcmovnu
and
mov
cmp
mov
adc
in
adc
jmp
sbb
add
inc
loop
pop
out
roll
repz
push
lret
sub
pop
dec
fcompl
push
lret
add
push
xchg
adc
add
pop
pop
fisubl
stos
in
subl
or
inc
in
hlt
shlb
test
in
icebp
cwtl
test
add
lods
push
push
push
cmp
push
cmp
int3
das
punpckhwd
in
push
and
inc
fwait
data16
gs
xchg
xor
and
in
fildl
ret
sarb
jb
and
in
repz
pop
ror
or
inc
mov
xadd
sbb
pop
sub
and
pop
sbb
rclb
flds
xchg
aas
mov
movsl
xor
push
out
and
stc
clc
test
iret
fsubs
jno
mov
in
cmp
or
inc
cltd
push
and
dec
jae
nop
xchg
xor
sbb
or
repnz
inc
jae
sbb
adc
popa
std
and
pop
std
lahf
and
pop
xchg
orl
movntq
inc
shlb
vmovd
shll
mov
pop
ja
jecxz
sti
outsb
jmp
jb
mov
jne
mov
inc
mov
jo
xchg
in
leave
pop
add
lea
insl
sbb
enter
xchg
repz
stc
xchg
sub
pop
dec
push
adc
mov
mov
dec
mov
cmp
push
fisubl
aad
xchg
sbb
hlt
jmp
idivb
jns
xor
xor
popf
fldt
adc
pusha
mov
icebp
es
lcall
bound
inc
mov
mov
and
inc
movsb
loopne
mov
fadds
ret
int3
leave
out
roll
xchg
push
dec
lcall
mov
iret
subb
inc
sub
or
pop
jne
or
loopne
fdivs
push
jp
mov
sub
mov
adc
adc
movsl
xor
lods
lcall
xor
cmp
mov
sbb
dec
and
lds
cmp
fldl
jae
test
pop
jne
cmpsb
scas
xchg
aad
and
inc
cltd
or
mov
arpl
lahf
sets
popa
iret
das
orb
fxch
mov
xlat
mov
jbe
outsl
icebp
and
jmp
mov
add
mov
pop
jb
and
js
mov
pushf
mov
imull
repz
xor
mov
sub
dec
js
popa
lea
sti
or
jmp
loopne
pop
loop
pop
cltd
and
cmpsb
cli
loopne
stos
cli
adc
int3
out
scas
adc
dec
scas
dec
enter
ja
mov
xchg
xor
and
ss
orl
push
iret
mull
test
sub
loopne
pop
mov
js
xchg
clc
inc
adc
jl
in
stc
push
xor
mov
out
dec
fistpl
inc
mov
in
mov
cmp
cltd
push
out
icebp
je
outsl
mov
xchg
movsl
sbb
pop
daa
sti
shrb
mov
fmul
add
lret
dec
inc
mov
data16
stc
cli
test
dec
in
fistps
pop
inc
mov
xor
out
dec
scas
stos
mov
loope
pop
fbld
xchg
adc
sbb
sub
push
mov
pop
push
mov
iret
mov
arpl
leave
push
ljmp
pop
jae
or
push
jns
jbe
push
mov
and
inc
js
cmp
outsb
xor
out
jge
xchg
adc
mov
je
dec
push
or
push
ljmp
cmp
mov
popa
adc
imull
dec
mov
pop
inc
jnp
push
rcrl
fwait
lret
and
cli
push
scas
fwait
push
std
popf
pop
pop
icebp
xor
xchg
mov
push
mov
ret
out
sbb
jae
sbb
loopne
and
jae
clc
ljmp
sbb
push
int3
scas
clc
dec
mov
ss
call
add
pop
pop
sub
out
jb
mov
cmpsb
fldt
call
dec
xor
fists
adc
outsl
pop
sbb
xchg
jb
xor
xor
pop
dec
shlb
jne
nop
outsb
mov
loop
inc
std
hlt
and
mov
fldenv
pushf
lods
jno
leave
inc
lcall
mov
mov
in
daa
jg
jl
pop
scas
pop
lods
xchg
push
aad
pop
pop
popf
call
mov
arpl
inc
mov
into
shll
and
mov
or
dec
daa
or
imul
sub
adc
xchg
ret
mov
push
movsl
pop
outsl
xchg
hlt
out
sahf
sub
inc
pop
mov
sbb
dec
xorb
mov
aaa
cld
pop
js
cmc
and
jbe
dec
inc
jae
js
pop
inc
es
ror
mov
ret
sar
cli
and
xchg
add
cmp
ja
mov
mov
das
out
sbb
pop
lds
lcall
mov
popa
clc
imul
addl
push
push
test
iret
dec
adc
sub
push
js
sbb
and
aad
push
push
xchg
add
data16
lahf
mov
mov
jg
int3
test
ja
int
pusha
cwtl
pop
cmc
dec
fisttpl
push
jmp
push
fsubrs
sbb
aas
pop
push
or
ret
and
cmc
loopne
push
sub
addr16
orb
push
pushf
enter
sbb
popa
xor
cmpsl
maskmovq
fwait
sub
orl
pop
cld
das
cmp
sarl
pop
stos
mov
jne
dec
call
cwtl
push
sub
mov
aad
adc
xchg
mov
xor
aaa
push
pop
into
mov
push
test
pop
pop
lds
cmp
xchg
lods
jle
adc
dec
stc
pusha
js
repz
rol
mov
ss
xor
push
les
mov
jo
push
jg
stc
adc
jmp
add
jo
xor
jno
jbe
add
cwtl
jp
adc
add
stc
test
adc
pusha
pop
rorl
or
sub
in
lods
inc
sbb
ja
or
fstps
mov
xchg
push
adc
xlat
sub
push
imul
stc
xchg
ficomps
scas
int
outsb
dec
inc
or
repz
sti
js
and
lret
xor
or
sbbb
xor
in
ds
mov
mov
test
jbe
and
clc
dec
roll
or
xor
mov
popf
test
mov
mov
xor
mov
mov
adc
movsl
sbb
hlt
data16
loop
fbstp
movsb
movb
xchg
loop
loop
outsb
push
rorl
pop
lock
mov
out
adc
dec
imul
sbb
mov
sub
push
adc
je
mov
inc
clc
push
jmp
push
cmp
mov
jle
or
or
pop
test
popf
push
sbb
push
dec
and
sub
loop
in
push
es
sub
ret
inc
jbe
push
or
leave
add
mov
xchg
test
and
call
fldt
loope
pop
sbb
hlt
add
loopne
dec
jbe
sub
ds
std
sub
jno
dec
frstor
push
cmp
xchg
cld
xchg
xlat
push
sub
or
mov
iret
fimuls
mov
cmovle
rcl
into
fsubp
ds
jp
sbb
inc
ret
adc
aad
popf
mov
fnstcw
push
dec
pop
cmp
mov
mov
ds
arpl
mov
pop
jbe
sub
or
xlat
andb
fisubrs
pop
shlb
outsl
jo
adc
sbb
and
repnz
mov
cmp
mov
out
xchg
into
in
int3
jge
or
ljmp
movsl
movsb
jb
push
mov
and
fadd
je
fisttpl
push
adc
xorl
and
into
push
cmp
sbb
xchg
xor
dec
sbb
mov
dec
push
nop
sbb
and
aaa
or
pop
bound
sbb
pop
pop
std
jg
adc
and
je
in
fiadds
dec
lock
pop
mov
jae
insb
into
enter
out
out
outsl
cmp
adc
loope
xchg
pop
xor
int3
push
flds
cmp
push
mov
and
lcall
jo
cmp
int
clc
pop
add
setnp
aam
in
idivb
roll
int
scas
mov
lds
mov
xchg
fcomps
outsl
fstl
std
inc
lret
and
addr16
out
ret
add
push
push
pop
lcall
lds
push
call
dec
lret
mov
jo
push
jmp
in
push
in
cmp
dec
aam
movsl
test
mov
sbb
push
jecxz
cld
arpl
rcrl
loop
pop
and
clc
imul
fsubr
xor
popa
xchg
popa
in
movsl
notb
push
and
add
in
xor
je
sbb
or
test
daa
xchg
shlb
add
outsb
insb
push
std
cmc
mov
daa
std
mov
inc
shr
test
mov
pop
outsl
adcb
jge
push
mov
pop
and
cmc
insb
inc
out
sbb
jne
and
inc
inc
pop
pop
cwtl
xor
rorb
fcoml
fwait
test
jl
jb
ret
mov
dec
hlt
pop
cmp
jo
mov
jge
insb
ror
incb
xchg
repnz
mov
jmp
fdivp
pop
out
jo
mov
ds
pop
jnp
xor
xchg
add
adc
mov
xor
or
ret
cld
push
bound
pop
jg
cmpl
add
test
insl
loop
sub
movl
add
call
and
mov
in
push
arpl
push
cmp
xchg
sbb
jns
sahf
bound
int3
cmp
push
or
lret
lock
xchg
adc
mov
xchg
test
loopne
mov
sub
arpl
mov
mov
cmpsb
cmc
jno
ret
sbbb
dec
js
add
pop
pop
stc
mov
jl
insb
gs
push
sbb
nop
sub
sbb
push
jl
sub
popf
daa
out
lods
mov
dec
or
cmp
cmp
mov
arpl
clc
lods
lahf
fstpt
pop
jae
pusha
inc
push
jo
or
daa
pop
sti
lea
xor
ja
dec
jmp
xor
ret
in
fmull
out
sub
or
xchg
pusha
cmp
xchg
push
loop
not
fwait
aas
cmp
es
cwtl
jno
popa
imul
sub
rclb
or
imul
rclb
push
dec
mov
add
push
fisubl
movsb
mov
out
cmp
lret
pop
test
inc
sbb
iret
movsb
je
outsl
push
hlt
lret
add
lahf
ljmp
pop
scas
adc
in
xchg
subl
jno
cmpsl
push
pop
xor
in
bound
or
outsl
mov
adc
adc
addr16
push
xor
hlt
xchg
sbb
or
sub
jb
inc
mov
roll
into
pminsw
or
std
xchg
mov
xchg
sti
add
imul
add
call
push
in
sbb
pop
dec
fcoml
stos
hlt
es
add
jmp
test
and
xchg
sbb
mov
xor
mov
out
lret
js
jl
push
jmp
mov
test
xchg
cmp
pop
mov
dec
mov
inc
sub
stc
mov
fldcw
lret
mov
outsl
lahf
and
movsl
jo
shl
or
pop
insl
cmp
enter
xorb
jo
das
mov
nop
jnp
enter
and
enter
sbb
sub
or
mov
ret
add
cmp
adc
mov
mov
lahf
dec
mov
pushf
int
rclb
ja
sarl
inc
lret
cmp
and
outsb
pop
pusha
xchg
roll
out
and
mov
lock
push
pop
js
cmp
jmp
fistpl
subl
push
dec
aad
stc
jnp
std
mov
dec
sti
bound
in
test
cmpsl
and
addr16
ret
out
push
jl
inc
fdivrs
into
push
lcall
cwtl
cmc
mov
lds
xor
fcomps
popa
loop
jne
sbb
repnz
pop
clc
das
adc
fadds
add
sub
and
or
imul
dec
fsts
mov
cmpsl
xchg
cmp
std
mov
dec
inc
xorb
pop
jmp
add
or
pop
jb
mov
pop
pop
cmp
mov
jle
cwtl
cmp
xlat
mov
sbb
sbb
stc
ficoms
fst
bound
aaa
pop
inc
arpl
push
out
shlb
sub
mov
pop
dec
xchg
inc
push
enter
aad
dec
adc
sub
test
jmp
jno
sub
out
inc
add
dec
notl
sub
dec
data16
mov
pop
cmp
mov
jecxz
add
cmp
mov
add
cmpb
fwait
and
mov
xchg
sbb
add
icebp
out
movsb
add
dec
dec
sub
mov
pop
ret
repnz
cmp
xchg
fisubl
mov
test
pop
push
out
pop
mov
mov
jmp
sub
shll
mov
fstl
repnz
jne
adc
mov
pop
cld
imul
jle
dec
fwait
pop
dec
xchg
adc
call
loope
xchg
lahf
push
adc
je
add
mov
cmp
mov
stos
cwtl
sarl
shl
repnz
leave
mov
pop
adc
pop
ret
leave
mov
or
jp
dec
pop
mov
in
sub
sbb
and
jecxz
das
dec
jne
lea
push
and
lods
repnz
jp
lods
or
lret
out
xor
pslld
push
adc
xchg
push
pop
dec
add
gs
pop
push
int
lds
das
jge
push
ret
and
ljmp
in
test
push
mov
div
leave
jmp
jg
xchg
mov
cld
or
cmp
test
lahf
movsb
dec
cwtl
jo
mov
rclb
test
cmp
movsb
sub
sahf
or
les
ljmp
decl
ss
shld
dec
and
sbb
jp
insb
or
pop
add
mov
pop
mov
adc
cld
das
ret
cmp
or
test
das
inc
mov
pushf
xor
fcomps
xchg
sub
mov
adc
jmp
icebp
addr16
call
xor
dec
jb
adc
sbb
pop
lret
xor
notl
jle
jo
cmp
aas
loope
in
inc
mov
add
enter
push
mov
aaa
pushl
mov
push
pushf
xchg
sub
push
dec
inc
fcomps
into
inc
or
mov
sarl
enter
ds
jns
sub
es
lds
cmp
xlat
jl
loopne
rolb
ss
and
fdivrs
and
loopne
mov
scas
mov
sbb
dec
outsl
inc
pop
stos
leave
jle
mov
jo
test
test
into
sahf
or
xor
mov
sbb
pop
pop
push
rorl
int
sub
and
xlat
push
push
sub
cld
leave
push
push
cld
push
fwait
mov
in
jbe
cmp
imul
push
icebp
sbb
add
dec
mov
inc
xchg
in
pop
sub
mov
shlb
dec
lret
add
adc
add
xchg
fsts
dec
cli
mov
push
dec
inc
or
jg
mov
lea
jmp
icebp
and
popa
lahf
mov
sub
cmpb
dec
push
movsl
out
dec
jmp
pop
xchg
divl
add
adc
fwait
dec
pop
push
test
sbb
pop
pop
and
xchg
data16
sbb
or
loop
mov
or
lea
xor
sub
mov
lahf
cli
in
or
xchg
mov
mov
imul
cmp
push
xchg
lcall
out
out
iret
push
adc
ret
in
lds
aad
add
and
sbb
mov
mov
aas
jo
stc
push
in
mov
push
add
pop
shll
jl
imul
das
outsl
dec
cmpl
cld
mov
int
adc
pop
int
inc
arpl
ja
inc
push
sbb
dec
xor
int3
add
dec
jo
dec
xchg
dec
cmp
lock
jo
loope
lcall
shlb
fiadds
lcall
pop
push
push
es
dec
inc
cltd
in
mov
add
out
sbb
mov
add
cmp
jbe
mov
pusha
aad
sub
and
lahf
push
jnp
push
push
sti
cmpsl
test
lret
xlat
pop
jo
cmp
xlat
into
cmpl
outsb
xor
out
popf
jl
lcall
jb
jne
int
pop
sub
pusha
clc
xchg
dec
adc
sbb
lahf
je
sub
ja
push
jp
or
jns
das
mulb
or
push
outsb
fcmovu
jb
push
xchg
mov
outsl
push
pop
outsl
in
ja
push
dec
jne
jae
insb
insl
xor
jb
out
mov
mov
arpl
jb
loopne
rorl
vpavgb
dec
xchg
dec
sbb
jbe
test
leave
insb
roll
xchg
xchg
inc
cmpb
jne
gs
mov
out
mov
clc
fstpt
hlt
mov
xchg
mov
scas
mov
js
shlb
cmp
sub
xor
in
outsl
orl
dec
out
enter
cmp
xchg
stos
xchg
ffree
mov
cwtl
subl
lret
subl
or
out
ljmp
xor
xor
cltd
addr16
mov
mov
or
out
jno
mov
nop
sbb
or
fstpt
jp
cmp
inc
or
shlb
dec
mov
add
push
jmp
insb
push
hlt
jo
ret
movsb
cmc
jnp
inc
inc
mov
in
cltd
or
stos
adc
outsl
outsb
popa
xchg
or
int3
push
inc
xor
stc
inc
enter
flds
fs
adc
stos
lcall
xor
push
aad
mov
arpl
in
push
pop
mov
mov
add
jnp
push
leave
std
jge
pop
repnz
mov
gs
pop
loope
movsb
or
jb
sub
test
mov
xor
and
shrb
repnz
ss
pop
adc
gs
fstpl
sub
pusha
xor
xor
add
adc
mov
push
xchg
push
push
mov
mov
inc
popf
outsl
jle
popf
dec
popf
test
push
aam
in
cmc
outsl
stos
jbe
mov
pop
cmp
inc
push
lcall
jmp
mov
pushf
in
fwait
popa
insl
fsubrl
out
bound
cltd
cmp
je
dec
xor
mov
loopne
insb
rcrl
push
fsubs
popa
mov
xor
data16
jmp
daa
mov
sbb
jne
imul
mov
mov
fcoml
gs
xchg
xchg
mov
test
dec
xor
shl
lahf
imul
mov
inc
jnp
and
fsubrs
andl
int3
push
cmp
jg
pop
lcall
in
mov
mov
aad
xchg
pushf
lea
mov
or
test
mov
inc
scas
or
inc
fucomip
lods
cmpsl
jns
inc
imull
sub
jge
repz
icebp
repnz
int
cmp
mov
dec
sub
insb
mov
mov
fldl
mov
orl
addr16
jne
loope
sub
inc
add
repnz
mov
push
mov
incb
sbb
fwait
add
cmp
sub
jae
xchg
cmp
add
mov
fstl
push
icebp
mov
jp
jp
add
pop
stos
clc
and
or
das
or
aam
pop
pop
scas
dec
xchg
fbld
mov
pop
add
scas
xchg
mov
xchg
out
mov
loop
and
mov
mov
mov
push
adc
xor
ret
add
or
iret
xchg
outsb
sub
push
mov
and
mov
test
iret
mov
lea
call
jp
push
mov
pop
daa
stc
inc
dec
xor
or
imul
fnstenv
jmp
dec
pusha
jecxz
jb
lods
ret
cmc
lds
push
push
repnz
mov
nop
dec
lahf
icebp
cltd
in
or
out
jl
mov
or
and
push
andl
in
lret
xor
js
jp
sbb
and
mov
mov
pusha
push
inc
xchg
sahf
jb
lea
add
jbe
inc
shll
loope
jae
dec
dec
jnp
nop
scas
pop
sbb
btr
mov
pop
fidivrl
fs
mov
xchg
mov
movsl
inc
faddp
and
add
jl
loopne
cmc
sahf
in
gs
out
xor
or
popa
mov
inc
sbbb
das
or
push
dec
sarl
mov
int3
shrl
movsb
fidivl
push
call
frstpm(287
adc
repz
jns
popf
mov
ret
ss
fisttpl
dec
movsl
jne
clc
jns
iret
rorl
cld
sti
fs
daa
js
pop
add
cmp
fdivs
add
push
cwtl
mov
mov
xor
jb
mov
lods
adc
or
push
out
jp
sub
aad
rcrl
aam
out
jmp
jp
mov
loop
xor
out
out
dec
imul
or
mov
sbbl
mov
sub
pop
mov
and
lock
aam
inc
pop
aas
into
mov
or
test
dec
and
push
fstpt
fmull
dec
xchg
cmpsl
int3
jb
inc
test
test
rcrb
es
stc
js
jmp
cmp
add
cmp
xchg
inc
sub
jge
xchg
insl
pushf
xchg
ds
clc
aad
sbb
js
int3
add
std
ja
int
icebp
stc
scas
data16
xchg
clc
inc
ja
lods
sub
xor
lods
btc
stc
and
pop
push
addr16
mov
cli
add
or
xchg
push
mov
das
lds
lahf
out
int
sub
popf
add
mov
repnz
xor
cmp
mov
mov
divb
add
pushf
sbb
stc
dec
push
loop
inc
pop
inc
mov
lods
mov
addr16
mov
inc
push
xchg
mul
cld
xchg
fldenv
adc
mov
fistl
lahf
cli
ja
xchg
lds
outsl
arpl
pop
aaa
hlt
mov
insb
pop
cmp
stos
sbb
ds
sub
pusha
mov
movsl
add
dec
mov
inc
adc
addr16
add
mov
mov
mov
ja
outsl
add
mov
imul
jne
mov
jo
lock
pushf
out
push
jo
imull
lods
in
inc
dec
mov
jmp
pusha
inc
out
push
out
add
mov
jb
fisubs
lock
pop
in
mov
dec
add
aas
dec
xor
sahf
mov
sti
xlat
push
ffreep
pop
in
jle
mov
gs
or
xor
dec
scas
mov
das
or
cmp
dec
outsb
mov
int
cmc
rol
jae
test
lret
sub
mov
mov
mov
adc
insl
scas
popa
sarl
inc
push
push
in
mov
rcr
mov
cmp
xor
pop
and
or
or
pop
push
sbb
shr
adc
xor
jge
aad
cmp
jo
popl
dec
movsb
imul
mov
mov
ss
mov
test
arpl
loopne
scas
adc
bound
js
ja
sahf
jns
repnz
or
xor
jae
out
cmp
es
dec
push
sub
lret
cli
dec
andl
pop
repnz
dec
sbb
xchg
pop
loopne
inc
jge
jle
add
out
mov
mov
xor
xchg
cmp
scas
repz
cmpsb
in
or
dec
add
out
movsl
and
push
repnz
lods
lock
fimull
jecxz
cmp
mov
aas
push
out
cmp
dec
out
aam
enter
sub
mov
lods
xorl
loope
mov
sbb
pop
mov
mov
adc
sub
jo
or
jle
in
push
ret
add
test
push
mov
rcrb
outsb
jae
addl
rcrl
jecxz
jle
adc
mov
cli
sbb
inc
and
cmp
mov
into
into
iret
push
push
cmpsb
and
mov
lods
or
inc
repnz
int
rcll
push
negb
dec
lcall
xchg
incl
test
mov
movsb
mov
lock
loope
std
push
mov
cmp
inc
dec
xchg
test
mov
xor
pop
xchg
rcr
je
sub
negb
pop
mov
daa
or
aam
dec
mov
cs
hlt
shr
in
mov
xchg
dec
ror
jnp
cwtl
int3
jmp
push
pop
fiadds
sub
movsb
mov
sbb
add
jp
jmp
enter
test
sbb
push
inc
popf
xor
insb
dec
adc
jmp
jnp
add
in
sub
sub
stos
imull
mov
push
rorl
rclb
sub
xor
movsl
test
push
mov
in
mov
dec
mov
js
pop
mov
push
cmpsl
xor
mov
pop
jae
jl
repnz
jge
xor
iret
inc
cmpl
sbb
jae
jo
dec
mov
push
or
insl
cmp
xor
cmc
dec
mov
lods
dec
mov
dec
pop
or
imul
adc
sub
dec
imul
inc
out
cwtl
mov
lea
fwait
pop
push
xchg
andb
mov
dec
add
xchg
movsl
mov
jl
pop
mov
sub
cld
imul
jmp
or
xchg
inc
mov
dec
push
or
addb
out
fwait
loope
aas
out
pop
push
ds
xlat
pop
lods
aam
push
push
jle
mov
push
int
mov
push
ss
cmp
mov
loop
jle
call
inc
cli
pop
outsl
mov
or
popl
data16
dec
hlt
mov
into
jne
add
pop
sub
mov
mov
xor
pop
xchg
xchg
push
push
movsb
clc
lcall
out
jle
rcl
sbb
mov
sub
sub
outsl
ret
push
push
dec
pop
jg
and
lret
leave
xchg
pop
lods
stos
push
in
dec
cmp
xchg
sarl
test
loope
cli
adc
clc
sub
adc
fwait
lea
cmc
in
and
cmp
movsb
inc
int3
sti
add
mov
lret
push
rcrb
pusha
repnz
in
pop
loope
jbe
sbb
rcr
dec
mov
mov
dec
jae
mov
shlb
pop
mov
sti
dec
fs
aas
mov
mov
sub
ja
dec
xor
jo
addr16
xlat
sub
rclb
cs
xchg
es
or
hlt
add
dec
jmp
popa
sub
in
into
xchg
inc
dec
mov
rorl
arpl
xor
sub
sti
scas
sub
pop
sarb
jns
stos
cmc
repz
mov
loope
data16
sub
mov
mov
xor
sarl
loop
js
inc
pop
push
pushf
ja
dec
fistps
insb
pop
fwait
inc
and
lcall
stos
enter
mov
dec
lods
fstpl
ret
jbe
jns
fisubs
lcall
daa
addr16
pushf
pop
jns
push
jae
cmc
inc
mov
sub
icebp
test
mov
dec
dec
xor
int3
pop
pop
cmp
push
outsl
push
inc
ljmp
pop
xor
pop
dec
cmc
push
pop
mov
xor
sbb
imul
nop
pop
mov
xor
pop
jmp
cmc
xchg
into
lea
int
push
ljmp
add
xchg
mov
andb
sbb
ds
shll
fldl
push
push
imul
loope
pop
inc
push
jl
cmp
cli
xlat
fsub
inc
pop
cmpsb
out
enter
mov
in
sbb
fisttpll
dec
inc
jge
dec
movsl
adc
int
iret
es
dec
cwtl
aad
or
das
lock
shrl
gs
ror
fsubs
xchg
insb
sbb
xor
ficoms
les
fsubr
xor
das
out
push
jo
outsb
or
cmpsl
cltd
stos
lret
outsl
es
mov
xor
addr16
fs
scas
or
arpl
xor
pop
push
adc
test
loope
mov
and
fidivrs
xor
loop
leave
push
mov
dec
pop
dec
sub
dec
or
scas
inc
jbe
loop
xchg
hlt
stos
jp
cmpsb
cltd
sti
out
jo
ds
test
cmc
jo
outsl
and
mov
enter
push
pop
mov
or
iret
fistpl
sbb
jmp
lods
jge
push
arpl
push
jg
push
scas
add
jne
out
jl
and
movsb
lcall
sub
dec
in
adc
arpl
pop
xlat
mov
jp
dec
jg
jg
pop
mov
sbb
push
mov
popa
cmc
mov
xor
jg
shr
stos
xchg
lock
lock
adcb
sahf
sub
and
mov
scas
aas
test
jns
push
sbb
outsl
addb
pop
mov
mov
mov
mov
sbb
add
sub
sbb
dec
pop
movb
mov
add
mov
sarl
hlt
mov
adc
rolb
out
in
xlat
push
enter
fwait
aaa
rolb
jg
and
cmc
in
cltd
in
repz
or
mov
mov
stos
mov
into
out
cld
xchg
push
mov
add
std
adc
push
dec
je
pop
bound
jae
mov
xlat
loop
into
leave
rcrb
dec
test
push
aam
or
pop
jbe
mov
shld
movsb
adcl
in
pop
sub
jno
inc
mov
movsb
mov
jle
leave
or
sbb
enter
bound
insb
insb
and
pop
and
out
mov
add
clc
popf
mov
mov
rcrb
or
out
loope
aam
std
popa
xchg
xchg
or
and
xlat
mov
testb
mov
decb
or
or
jo
xor
std
shlb
icebp
cmpsl
pop
cli
cli
push
xorb
inc
mov
adc
je
fnstcw
aaa
cmp
adc
scas
ret
shld
or
push
jb
jmp
jnp
jmp
fs
xor
ror
mov
loop
mov
mov
dec
addb
cmp
cld
mov
cld
mov
out
es
loope
xchg
dec
adc
xchg
int
std
pop
or
cwtl
add
scas
and
push
sub
mov
jns
out
in
pusha
and
and
ss
push
mov
movsl
xchg
mov
out
ss
scas
das
sub
movsl
lret
int3
jmp
jmp
pop
test
inc
into
inc
or
cmp
std
dec
stos
test
and
push
xchg
add
jmp
loopne
fwait
std
call
xor
dec
mov
mov
daa
inc
inc
fisttps
lods
xchg
gs
pusha
into
out
mov
je
cmp
adc
mov
inc
inc
jo
jle
sbb
pushl
jbe
pop
push
lods
dec
bound
pushf
cwtl
sbb
lcall
in
xor
les
adc
mov
and
or
fucomip
mov
mov
mov
inc
xorb
inc
daa
test
daa
pop
pop
dec
lds
inc
dec
cli
lcall
jo
or
cmp
jg
cmp
sarl
dec
mov
repz
pushf
xlat
in
mov
mov
or
inc
and
push
in
negl
pop
add
gs
jp,pn
repnz
out
mov
dec
ret
hlt
mov
iret
movsl
dec
mov
rcrb
add
xchg
push
ljmp
sti
pushf
push
cwtl
jle
loopne
js
ret
loopne
mov
fsubr
pop
mov
mov
jmp
rcrl
add
mov
xor
loopne
add
or
xchg
mov
mov
mov
js
push
and
xchg
fnstsw
mov
push
test
jno
jmp
mov
cmpsl
rclb
xchg
repnz
mov
addr16
jbe
xor
aas
cld
leave
pop
and
xchg
js
cmc
jnp
mov
xchg
xor
ret
pop
aaa
pop
stos
leave
sbb
jle
in
ficoml
dec
mov
sbbb
iret
adc
out
dec
cli
insb
je
sahf
fisttpll
and
pusha
mov
mov
cmp
or
add
or
sahf
adc
call
lret
out
movsb
cmp
and
inc
shl
xchg
xor
dec
pop
sti
aas
loopne
rcrb
cltd
outsl
pop
pop
icebp
dec
jge
pop
or
mov
lea
and
ss
inc
movb
lods
pop
jne
jecxz
ficompl
shll
nop
push
mov
sub
loop
aaa
cs
sub
sahf
push
fsubs
bound
ljmp
loope
inc
popl
mov
gs
sub
adc
sbb
and
ficomps
pop
sti
inc
sbb
push
clc
testl
lods
sbb
mov
ret
push
pop
stos
sub
subb
xorb
jae
rep
or
addr16
lods
js
push
push
inc
imul
mov
adc
lock
inc
iret
add
cltd
stos
aam
dec
add
add
add
lds
push
sbb
push
push
pop
pop
jns
popf
xchg
gs
xchg
cmpb
rorb
je
mov
pop
mov
pop
pop
aaa
or
fs
pop
lret
jle
pop
cmp
mov
sbb
xorb
push
dec
lcall
in
test
and
repz
andl
rcl
pop
fistpll
sbbb
ljmp
sbb
add
pop
or
leave
add
in
fcmovnu
mov
mov
cmp
in
in
daa
scas
lea
mov
pop
pop
insb
int3
push
out
sub
or
push
out
outsb
adc
subl
sbbb
cmpsb
xchg
cli
es
movsb
mov
inc
jae
adc
adc
pop
test
push
mov
std
cmp
mov
hlt
lods
jecxz
loope
or
in
jnp
sbb
and
adcb
cltd
cmpsl
cmp
dec
mov
and
inc
and
inc
shlb
aam
push
xor
popf
orl
adc
xlat
jb
scas
in
fcomi
decb
loop
jno
push
adc
mov
jbe
repz
nop
jg
xchg
push
sarb
jecxz
enter
cmp
jno
add
xchg
movsb
pop
xlat
push
ret
inc
jne
inc
jle
clc
xor
adc
imul
push
xor
mov
imul
mov
pushf
ljmp
outsl
jo
push
mov
push
test
loop
mov
mov
dec
push
adc
pop
out
push
push
jp
push
addr16
vmwrite
in
sub
adc
jnp
clc
test
fdivrl
add
bound
addr16
mov
push
jne
icebp
or
fcompl
and
and
mov
subl
xchg
addr16
push
sub
push
jle
or
sbb
jg
out
push
loopne
push
pusha
lods
and
cmp
nop
stos
in
sub
push
insl
push
sub
int
jne
xchg
dec
imul
or
lcall
adc
jp
shrb
es
and
adc
scas
pop
mov
std
stos
mov
inc
xchg
dec
hlt
xlat
or
cmp
bound
jle
orl
add
inc
xor
cld
push
mov
mov
adc
out
pop
mov
nop
cmpsb
pop
rcrb
rcrl
ret
or
adc
stc
jb
popa
iret
pop
imul
adc
and
xchg
clc
es
cltd
push
mov
jns
testb
mov
cmp
lret
out
fistl
cld
sub
xlat
and
lret
adc
cmp
adc
or
scas
add
or
add
sub
movsb
outsb
cmpsl
fs
mov
pusha
jne
adc
xchg
icebp
loopne
aaa
pop
js
hlt
dec
and
dec
cld
add
test
js
mov
jno
cmp
inc
sbbl
jns
leave
or
xchg
movsb
dec
sub
mov
stc
jge
jl
pop
jns
ficompl
popf
roll
push
clc
repnz
in
lret
jecxz
cmp
push
xchg
mov
cmp
xor
mov
mov
es
jo
insb
xor
xor
repz
into
leave
dec
rorl
into
inc
jb
jb
int3
in
fldcw
mov
inc
mov
les
pop
dec
dec
inc
lods
cmp
push
ljmp
dec
and
or
cs
ja
xchg
imul
xchg
sti
dec
and
daa
jge
roll
jg
pop
mov
fstpl
dec
test
xor
adc
add
lods
cmp
rcll
in
mov
push
or
outsl
leave
adc
shlb
pop
push
insl
push
or
out
pop
hlt
sub
adc
adc
sbbl
xor
movsl
test
test
or
ljmp
and
xor
cmpsl
push
pop
rcrl
xor
and
in
xchg
les
and
inc
and
xor
add
jns
mov
jmp
xor
sub
cwtl
xor
xor
or
adc
into
or
cmp
sti
aad
popf
loop
mov
inc
cld
aaa
mov
sbb
push
sub
fistpl
push
pop
pop
ds
push
mov
repz
bound
cmpsb
adc
mov
xor
mov
cmc
bswap
mov
lods
mov
notl
ret
mov
adc
jne
cwtl
lret
call
outsb
sbb
inc
out
or
addr16
pop
adc
adc
movsl
dec
mov
aaa
fs
jnp
test
movsb
subl
sub
xor
adcb
filds
pushf
jecxz
sbb
inc
addr16
adc
mov
movsl
out
cmp
jne
dec
or
push
sbb
cmpl
jno
and
pop
cs
and
xchg
cmp
cmp
loop
jmp
pop
mov
mov
push
or
notl
rcrb
fcmovu
jecxz
arpl
push
repz
dec
jmp
fnsave
pop
mov
bound
fistpll
jge
js
out
push
pop
cmpsb
fldl
pop
addb
popa
sbb
out
or
orl
sti
and
fmuls
divb
jmp
sbb
push
fisubs
jns
push
into
mov
mov
and
sti
shlb
bound
and
in
sbb
movsb
inc
pop
jmp
xor
jmp
pop
sbb
cmp
cltd
fsubl
sbb
adc
lret
adc
fdiv
or
jnp
call
inc
lret
pop
cmp
sub
lods
incl
mov
imul
xor
cmc
mov
xchg
aad
je
imul
aaa
enter
or
pushf
repz
in
and
xchg
inc
nop
xor
cmpb
imul
and
ficompl
adc
jns
mov
test
sub
dec
push
shr
rolb
ret
add
out
sbb
push
repz
icebp
or
and
gs
jmp
out
and
xchg
adc
jno
cld
xchg
mov
mov
popa
repnz
jno
movsl
sbb
jns
jo
ss
jle
shrl
fisubrs
mov
fcoml
dec
xor
sbb
leave
das
test
xor
cmp
push
lret
cmp
aam
push
std
and
or
pop
fistl
add
or
add
cmp
sub
jae
cmpsl
cmp
dec
test
pop
pop
push
cmp
dec
jo
insl
or
daa
inc
cmpsl
fbstp
push
loop
js
cmpb
mov
outsb
fmul
xchg
mov
lods
or
mov
rolb
sub
stos
sbb
fcoms
dec
loop
push
mov
cmp
push
sti
fdivr
and
sbb
xor
out
incb
and
leave
out
aaa
imul
mov
js
pop
lods
and
xchg
movsb
repz
cmpsl
aaa
aam
or
pop
lret
fmull
push
stos
cs
xchg
inc
inc
or
not
popa
xor
stos
xchg
xor
je
in
adc
ffree
or
mov
adc
inc
fidivs
inc
stos
and
push
daa
mov
jmp
stos
jecxz
pop
sbb
jle
sub
dec
int3
jmp
and
es
sub
adc
insl
push
mov
mov
es
adc
dec
dec
cltd
dec
ret
push
aad
scas
jle
jl
xchg
cmc
push
test
mov
into
sbb
jecxz
mov
loopne
mul
fs
pop
out
adc
xchg
insl
js
movsl
shll
aas
call
int
pop
xor
inc
add
imul
jbe
sti
xchg
jo
and
nop
cld
mov
jle
push
in
clc
pop
cltd
int
outsl
xor
outsb
insl
lods
xor
fcompl
test
aad
les
rorb
jmp
xchg
in
mov
test
dec
xchg
xchg
xchg
cld
arpl
addb
sbbb
fnstsw
mov
aas
sbb
popa
jp
dec
jl
push
cmp
pop
fwait
pop
sub
mov
adc
inc
jae
pop
and
prefetch
outsb
rclb
add
inc
mov
iret
mov
sbb
mov
scas
and
jno
mov
jle
rcll
repz
mov
jmp
dec
lret
or
out
xor
jecxz
jmp
cwtl
sbb
xchg
inc
sbb
sub
mov
push
xor
push
jle
xor
xor
pop
pop
int3
xor
ss
repnz
cmp
mov
inc
popa
xor
cmc
ja
pop
lods
jecxz
mov
stos
test
popa
hlt
inc
jmp
dec
orl
clc
ljmp
cmp
fisttps
pop
sbb
xor
jle
popa
pop
jae
dec
lret
movsl
sbb
mov
out
xchg
aam
enter
out
mov
cwtl
call
push
int
jmp
add
sub
test
imul
adc
out
cmp
xor
in
lret
sbb
mov
sbb
insb
mov
loope
loope
pop
jp
adc
mov
xchg
mov
pusha
mov
inc
mov
insb
data16
loopne
inc
aas
xchg
jl
in
inc
inc
xor
push
mov
negl
inc
sbb
dec
out
gs
lds
inc
mov
push
mov
out
jb
int
dec
rolb
pop
lcall
std
lcall
shrl
cmp
pop
js
pushf
mov
jo
cmpsl
adc
xlat
stos
insl
call
or
push
cmp
rclb
inc
push
nop
call
dec
adc
jmp
inc
stos
mov
mov
fimuls
inc
pop
fstpt
aam
dec
dec
jmp
xchg
aam
fwait
push
ret
mov
sub
xchg
pop
sbb
pop
push
and
and
push
stos
push
outsl
xor
cltd
ja
pop
push
add
arpl
fdivr
mov
or
mov
sti
popa
dec
pop
les
faddl
sub
fsubr
xorb
out
jecxz
mov
xor
in
xchg
sub
pop
add
sbbb
add
mov
push
ljmp
mov
sbb
and
in
out
inc
and
push
enter
cli
call
cmpsb
jp
in
inc
sbb
popa
cmpsl
stos
cmp
rcl
inc
cmpsb
ss
cmpsb
sbb
or
push
inc
mov
mov
mov
stos
sub
in
push
pop
push
pop
stos
sti
dec
lock
jp
mov
arpl
cwtl
or
add
incl
insl
stos
sbb
or
add
jl
xor
inc
push
xchg
mov
pushl
inc
xor
aaa
add
rcrb
imull
pop
jbe
xchg
movsl
std
insl
mov
pop
js
inc
aaa
pop
cmp
cld
movsb
jge
dec
pop
and
xchg
out
xor
fildll
popa
sahf
enter
fistpll
pop
jg
xlat
push
imul
dec
add
sbb
test
inc
pop
flds
hlt
xchg
push
and
rolb
fcoms
shl
mov
stos
cmp
shlb
cwtl
add
mov
cmp
es
stos
and
test
loope
add
inc
scas
clc
into
mov
pop
adc
fsts
sub
out
fs
and
in
lea
test
aad
xchg
pop
jmp
and
daa
movsb
icebp
adc
lcall
cmpl
xor
mov
sub
adc
dec
sub
mov
mov
clc
pusha
stos
mov
cmp
dec
js
inc
int3
add
stos
jp
jmp
in
stc
adc
aas
pop
cmp
jb
or
inc
insl
lods
scas
je
and
xor
call
hlt
cmp
xchg
xor
iret
mov
sbb
xchg
shlb
je
push
mov
xor
mull
mov
push
push
out
fdivl
das
mov
push
sub
sbb
dec
idiv
insl
jg
cmp
in
push
mov
mov
push
fcomi
dec
subb
pushf
push
ja
cmp
cltd
cs
inc
dec
xor
cmp
sbb
inc
outsl
stc
and
xor
sub
sub
test
xchg
cltd
and
cwtl
es
out
and
sbb
mov
lea
adc
xchg
lret
jg
out
add
pop
or
adc
bound
jb
xchg
ret
in
and
xor
dec
pushl
leave
orl
and
aas
mov
rclb
pop
jp
xchg
push
push
xchg
add
xor
popf
xchg
imul
mov
out
adc
icebp
ds
aas
test
call
xor
sbb
xor
pop
push
rorl
mov
adc
sar
pop
pusha
popa
push
inc
mov
pusha
icebp
mov
xor
xchg
push
mov
bound
stos
mov
cwtl
sbb
out
dec
dec
push
icebp
push
cmpsb
pop
sbb
xor
push
sub
daa
loopne
jb
jb
dec
enter
cmpsl
sbb
scas
push
mov
sbb
lods
ljmp
fwait
xor
cmp
adc
out
enter
jle
imul
stos
loope
and
inc
sbb
in
push
test
clc
mov
jmp
jecxz
dec
jp
outsb
jle
inc
sbb
push
es
cs
or
aam
push
inc
loop
out
rorl
lock
push
push
ret
xor
iret
rorb
lock
or
mov
imul
mov
lahf
mov
pusha
ljmp
sbb
mov
mov
xchg
jae
cmpsl
push
dec
iret
fistps
insl
cmpsl
adc
in
pop
js
popa
fs
mov
or
xor
push
les
mov
add
pop
cmpl
pop
dec
shll
rcrb
mov
sbb
clc
adc
jo
fldl
fildl
insl
leave
add
popf
ret
sub
cmpsb
jb
pop
fst
scas
out
sbb
dec
fs
pop
sbb
mov
pop
das
pop
dec
sub
jle
pop
lds
cmpsl
cmpsb
mov
jbe
lahf
cmpl
in
ja
mov
lds
jg
out
xchg
lret
and
mov
inc
mov
jge
lahf
cmp
out
std
pop
fistpl
push
cmp
in
xchg
out
inc
mov
mull
dec
lret
mov
dec
lods
int
loope
mov
add
inc
sahf
xchg
scas
icebp
cmpsl
scas
cwtl
bound
jne
mov
lock
scas
xor
cs
jle
pop
jo
aaa
xor
jmp
xor
xor
or
cmc
ret
enter
sbb
cs
out
out
ret
stc
and
bound
push
cmc
add
test
fdivrl
notb
jle
shl
mov
sahf
cmc
in
jo
lcall
fwait
xchg
imul
xor
stc
ret
and
push
imul
int3
lahf
pop
pushf
add
or
dec
shrb
dec
ljmp
inc
or
pop
push
mov
push
adc
mov
mov
scas
test
addr16
mov
xor
cmp
push
jge
mov
jo
jno
outsl
in
xchg
pop
jmp
pusha
or
cmp
arpl
mov
sub
push
adc
adc
pop
xchg
test
movsl
push
push
sbb
nop
cmp
mov
lds
and
lret
mov
pop
ret
push
popa
pop
ret
cld
add
jb
sahf
push
adc
pop
push
lahf
leave
dec
in
or
or
dec
xchg
xor
jbe
dec
sbb
jl
push
in
test
shrl
sti
add
mov
or
ljmp
shld
stc
fldcw
imul
cmpsb
int3
aaa
stos
push
pop
rcrl
adc
subb
outsb
ds
adc
xor
dec
in
out
out
popf
adc
int3
rcrb
lahf
addb
repnz
pop
int
inc
cmp
roll
xor
orb
pop
inc
call
add
test
push
push
sbb
jo
mov
bound
push
jne
xlat
inc
pop
pop
loop
loope
jnp
dec
adcl
test
pop
gs
pop
and
into
mov
stc
jae
cs
imul
addr16
pop
cmp
scas
into
das
scas
js
cmpsb
loop
aam
fnstcw
push
xor
rorb
addr16
out
sub
mov
sub
xor
es
jmp
in
fadds
popa
sti
add
jb
sti
cmp
mov
sbb
nop
mov
push
push
lds
and
pushf
adc
push
mov
cmp
roll
sub
inc
les
xchg
cmc
sub
fcomip
and
out
or
out
cld
addr16
xchg
insb
or
push
lret
enter
jp
mov
cmpl
and
ret
mov
push
xchg
xchg
imul
xlat
outsb
sbb
or
add
enter
lcall
pop
call
and
call
leave
enter
jns
sbb
outsl
in
movsl
mov
subl
sbb
inc
insl
sarl
cmp
and
push
es
shll
pop
movsw
fistps
in
jae
les
mov
movsl
add
cmp
fwait
pop
xorl
ds
mov
ret
in
out
sbb
mov
faddp
lods
pop
jecxz
xchg
out
and
popf
jg
sub
stos
pop
push
iret
orb
add
push
into
lods
adc
xchg
mov
and
xor
in
and
int3
outsl
dec
cmp
push
pop
cmp
xchg
push
pushf
push
mov
insb
movsb
outsb
xchg
jge
or
std
ljmp
mov
add
push
cmpl
andl
rorb
inc
aad
call
sub
mov
inc
movsb
pop
ss
test
xchg
int3
push
popa
jae
mov
ljmp
xchg
jle
mov
out
inc
rorb
clc
rorb
test
roll
pop
inc
fnstenv
int3
test
scas
mov
lret
push
std
jecxz
mov
icebp
ret
in
sbb
loop
loop
mov
pop
dec
xor
xlat
pop
push
clc
movsb
mov
cld
cmc
or
xorl
int3
mov
imul
dec
mov
adc
add
jne
add
mov
jg
ret
mov
shlb
addr16
jl
das
sub
scas
push
push
mov
add
inc
les
jns
xchg
xchg
movsl
xor
xchg
and
ret
inc
jecxz
pusha
scas
inc
lret
rcr
inc
or
movsl
mov
jl
je
inc
adc
xchg
ficoml
pop
addl
add
pop
jns
sbbl
push
mov
cwtl
or
mov
pop
xchg
insb
bound
jne
jno
fstps
jbe
push
push
mov
push
mov
jecxz
inc
test
cwtl
mov
xor
xor
pop
aad
int3
and
fsubp
mov
addr16
nop
dec
xchg
outsl
mov
xchg
call
addr16
jmp
jp
mov
mov
rcr
sub
lret
hlt
adc
xor
inc
mov
popa
aas
pop
pop
nop
cwtl
adc
xchg
pop
xchg
stc
rclb
test
or
mov
dec
pusha
xchg
push
aaa
xchg
cmp
pop
mov
cs
sub
scas
jo
pushf
jecxz
or
adc
push
movsl
call
push
js
dec
dec
jb
xor
adc
ret
dec
js
inc
jge
pushf
mov
repnz
adc
push
imul
lcall
jp
mov
insb
sub
sahf
xchg
aas
xor
inc
loopne
pop
lods
sub
xorl
pavgb
and
inc
int3
fldenv
sub
dec
sbb
fidivrl
adc
xchg
jo
bound
push
pusha
mov
ss
dec
dec
mov
loopne
pushf
fstpt
stos
mov
out
sub
xchg
inc
jmp
aaa
out
aaa
cli
js
les
cmp
push
pop
mov
inc
imul
insl
jns
pop
pusha
adc
lds
inc
out
nop
mov
out
mov
jl
subl
push
cmp
and
clc
jl
shll
pop
imul
mov
adc
xchg
and
sbb
xchg
push
mov
mov
cld
push
lods
mov
dec
mov
inc
adc
mov
mov
pop
das
adcl
mov
pop
pop
push
push
sahf
dec
mov
sub
xor
jg
movsl
mov
mov
cld
fsubl
out
out
and
fcomps
and
pop
mov
mov
enter
or
add
mov
fs
cmc
pop
nop
xchg
mull
callw
faddp
in
sub
xlat
jg
pop
push
add
aaa
insl
les
into
insb
enter
mov
xor
ljmp
inc
iret
nop
mov
push
test
lahf
cmp
add
out
push
rcrl
jb
cs
test
xchg
scas
mov
or
ds
and
aaa
inc
lods
enter
lods
xchg
xchg
or
lret
or
jmp
subb
push
stc
gs
mov
sub
cmpsl
sbb
cltd
jg
mov
cmp
add
test
lcall
mov
insb
rcrl
orb
or
icebp
sub
into
mov
adcl
xor
cmp
jo
and
out
popf
inc
in
lea
mov
lods
push
pop
mov
in
inc
cmp
test
push
stos
rorb
add
ret
mov
ror
dec
dec
mov
cs
dec
and
mov
int3
divl
or
xor
and
test
gs
enter
xlat
jp
sbb
or
sahf
js
push
mov
rsqrtps
jmp
and
inc
mov
mov
jae
outsl
push
fcoml
ror
sbb
mov
int3
leave
gs
roll
dec
mov
xchg
push
test
daa
aaa
adc
movsb
inc
leave
pop
adc
call
inc
scas
divl
stos
movsb
rcrb
pop
dec
subb
pop
pop
mov
aas
cltd
push
insb
iret
pop
stos
ret
sti
stc
int
sub
rcrl
jmp
aad
pop
out
es
push
jp
les
jne
and
jp
cmp
test
cmp
mov
adc
cmp
fsubrl
xchg
test
cmp
pusha
jge
rol
xchg
jmp
push
scas
pop
movsl
fcom
inc
fldenv
dec
pop
loopne
xchg
jmp
stos
inc
adc
das
je
es
xchg
jle
fs
lods
sub
add
xor
ljmp
fildl
xorl
hlt
test
mov
sbb
orb
lret
lods
inc
jmp
ljmp
mov
push
mov
mov
ret
stc
jae
pop
mov
sub
xchg
popa
stc
and
test
cmp
aas
or
or
xchg
fwait
test
rcll
fisubrl
data16
test
xchg
or
dec
add
out
inc
mov
adc
dec
sbb
iret
js
mov
inc
testb
and
adc
xlat
jp
cmp
ljmp
imul
cmp
mov
and
inc
fmul
adc
nop
jmp
or
mov
lret
and
sub
test
movsb
push
push
das
je
cmp
pop
enter
xor
rcll
mov
mov
dec
int3
sbb
xor
xchg
fisubs
xchg
jp
inc
and
xor
dec
dec
push
mov
sub
decb
adc
cmc
mov
mov
data16
out
shlb
mov
arpl
sbb
scas
shll
or
je
lcall
addb
sub
sub
add
mov
or
das
pop
sub
inc
mov
add
stos
and
fs
xchg
lcall
bswap
xor
jl
inc
shlb
push
pushf
adc
fstpt
cmp
movsl
xor
mov
inc
fisttpl
ja
cltd
jno
mov
lcall
jns
ds
lcall
out
js
mov
cs
subb
fsts
hlt
into
test
push
xchg
xor
pusha
repnz
stos
push
mov
sub
push
leave
fnstcw
adc
mov
xor
push
out
inc
popf
inc
fadds
push
inc
cwtl
mov
pop
mov
cltd
add
subl
sub
jge
xor
dec
sub
add
and
mov
sahf
jmp
jns
pop
xor
jb
inc
out
outsb
xchg
push
xor
mov
xchg
xchg
or
movb
sbb
add
cmp
dec
pushf
xchg
incl
lods
adc
mov
popa
mov
adc
and
fdivr
ret
mov
fs
lahf
pop
pop
scas
mov
cmovnp
push
and
sub
mov
lret
jmp
lock
and
mov
aad
or
adc
adc
pop
or
and
mov
fcompl
sbb
mov
rcr
mov
ja
xor
push
icebp
in
adc
xchg
cmp
ret
cmp
jns
loopne
out
test
in
mov
inc
arpl
push
es
add
aaa
je
fdivrs
ror
pushf
jg
es
roll
pop
outsb
hlt
cmp
pop
lret
mov
add
jb
adc
sarb
mov
pop
xor
mov
xchg
xor
mov
ja
ficomps
rorl
xchg
xchg
test
xchg
or
daa
insb
inc
push
adc
das
push
inc
test
mov
add
and
xchg
nop
mov
xchg
daa
push
mov
xchg
jbe
push
sub
outsl
imul
scas
decb
mov
push
mov
loope
push
mov
or
push
add
loop
div
cmpsl
adc
stc
outsl
cld
push
push
sbb
mov
dec
addr16
mov
mov
sub
mov
mov
xchg
mov
fsts
inc
addr16
xchg
xchg
and
imul
cwtl
pusha
dec
or
dec
or
adc
testl
lea
imul
mov
dec
mov
sub
mov
and
jle
test
mov
cmp
aad
out
hlt
outsb
sub
add
in
jbe
test
and
cmpb
or
jo
js
dec
lss
fwait
negb
les
sbb
test
mov
xchg
daa
and
leave
in
fistl
push
mov
ss
pop
and
mov
lods
daa
daa
jecxz
pop
stos
xlat
gs
jmp
adc
add
cmp
add
jb
shll
fdivs
inc
xchg
loope
push
mov
sbb
idivl
movaps
inc
outsl
mov
fstpl
push
daa
cltd
jbe
mov
imul
rcrl
repnz
rolb
popf
fldl
in
mov
or
pushf
xchg
push
pop
or
cmpsl
leave
in
mov
fisttps
jl
test
xlat
inc
seto
arpl
arpl
mov
sbb
adc
sbb
or
xchg
imul
inc
fistl
insl
cwtl
mov
lods
repnz
ss
jg
xor
out
or
and
fidivl
cmp
pop
adc
adc
bound
mov
or
out
cmpsb
das
adc
sti
xor
inc
outsl
imul
xor
xor
loop
mov
test
cltd
mov
pop
test
mov
loop
mov
add
lret
shll
and
xchg
fsubrl
mov
popf
pop
stos
rol
mov
push
pop
xchg
xor
sbb
mov
and
jg
push
je
inc
mov
mov
xor
xor
xchg
mov
push
test
adc
aaa
mov
mov
cltd
adc
xchg
xor
xlat
int3
std
inc
aam
lock
jl
das
dec
lret
push
popf
es
dec
add
adc
dec
push
dec
jnp
push
adc
enter
into
mov
test
mov
sbb
stos
or
jl
out
lcall
inc
test
jae
dec
cmpsl
into
or
sti
popa
or
mov
inc
push
lahf
xor
jge
mov
and
ja
pushf
rcrl
cs
nop
xor
addr16
cmp
mov
jne
and
insl
ss
jg
mov
mov
fnstsw
js
std
mov
jne
jg
mov
adc
pop
sub
sbb
loop
bound
arpl
mov
mov
push
clc
imul
add
das
or
daa
push
mov
add
in
sar
adc
sub
repz
lods
add
movb
jno
adc
add
cmp
stos
enter
repz
mov
dec
int3
pop
pusha
rcll
data16
inc
push
pop
ljmp
inc
xor
imul
mov
fstpt
test
jle
pop
cld
je
movsb
fcoms
in
div
mov
ds
lods
ss
imul
and
aaa
ja
fdivp
inc
push
or
sarb
ficomps
mov
adc
xor
je
jp
les
adc
mov
call
jno
xchg
push
in
fcoms
int3
inc
ss
push
add
push
movsl
pop
ja
pop
inc
ret
inc
push
ljmp
out
negl
cld
pop
das
scas
mov
cmpsb
jp
aas
and
fadds
lea
cmpsb
or
sub
lods
xor
mov
mov
loop
jle
jecxz
cmpsl
pop
outsb
aas
push
dec
push
mov
lds
mov
dec
cs
subb
in
gs
ja
pmaddwd
xchg
inc
arpl
xor
in
ss
repz
je
adcl
push
push
cwtl
fmuls
fwait
mov
adc
xlat
inc
leave
xchg
sbb
cltd
sub
pop
mov
or
jne
fldenv
pop
cmpsb
scas
push
daa
subps
shl
daa
movl
inc
cmp
and
stos
mov
mov
pop
sbb
sub
pop
das
inc
inc
push
imul
test
jo
push
mov
ljmp
lods
cmp
sub
or
inc
lock
lret
or
jb
inc
pop
loopne
and
out
or
mov
outsl
pusha
sbb
add
mov
pop
mov
pop
and
cmpsl
mov
sub
mov
push
dec
mov
xchg
lahf
or
or
lods
pop
sti
pop
movsl
mov
rolb
fwait
add
and
pop
ficoml
addr16
lret
adc
adcl
jno
imul
dec
cmp
push
jne
ljmp
scas
mov
lock
lret
imul
or
mov
mov
aad
daa
out
pop
nop
push
aam
dec
cmp
cmp
int3
push
cmpsl
fcomp
aad
mov
and
mov
pusha
das
jmp
xchg
or
clc
ljmp
sub
std
jb
jnp
xor
lcall
std
insb
repz
push
nop
pop
int3
gs
and
lock
sbb
cli
lods
add
shr
push
lahf
inc
fpatan
dec
scas
nop
jl
and
pop
push
dec
and
and
inc
or
mov
sub
es
jne
adc
add
sub
or
pop
and
jecxz
aas
pusha
xchg
out
mov
pop
icebp
mov
aaa
ds
sahf
add
popa
and
das
les
pop
dec
xchg
int3
sub
push
adc
scas
jb
mov
sub
mov
pop
dec
fadds
std
sub
cmp
ds
mov
ljmp
dec
cmc
shl
divb
repnz
pushf
icebp
lcall
xor
xlat
imul
mov
inc
popa
mov
sbb
cld
cs
ds
inc
jp
leave
bound
xchg
out
xchg
hlt
pushf
fldt
add
pop
pop
rorl
pop
xchg
inc
inc
sar
xor
xor
jo
fucomip
mov
pop
and
and
dec
cltd
xchg
pop
adc
repnz
out
nop
aas
cmp
int3
rcl
mov
jo
xor
cmp
std
pushf
repz
pop
or
inc
int
push
outsl
pop
sti
xrelease
ljmp
push
aam
in
aas
movsb
xor
fbstp
loope
pusha
mov
arpl
pop
lds
hlt
in
in
and
test
add
add
sub
add
cmpl
xchg
popf
clc
xor
mov
inc
sahf
inc
mov
sbb
xchg
sti
and
adc
shrl
pop
stc
add
cltd
neg
mov
push
sbb
and
cs
cmp
xor
loopne
les
clc
repnz
repz
inc
push
sbb
popa
in
leave
arpl
mov
addr16
popa
cltd
xor
mov
popa
inc
mov
xchg
scas
stc
xchg
mov
mov
or
xchg
and
aad
ljmp
cld
xchg
adc
mov
test
xchg
cmc
sbb
push
pop
movsb
fcoms
mov
cmp
xor
insl
lret
pop
or
jae
sar
stos
mov
push
jae
pushf
fimull
ss
ja
mov
testb
lahf
mov
dec
ljmp
sub
hlt
outsl
pop
arpl
inc
ret
fcoms
jae
int
mov
lock
adc
lret
jns
adc
fnsave
mov
sub
ret
mov
xchg
rcrb
xor
push
pusha
and
cmc
test
int
mov
mov
push
insb
sub
imul
lock
ja
jne
push
stos
sbb
jo
jb
mov
shlb
sbb
aaa
mov
lods
out
leave
mov
lds
shr
cmp
data16
adc
movsb
inc
addr16
repnz
leave
iret
loope
mov
dec
pop
stc
xchg
adc
aaa
xchg
das
mov
aad
ror
or
add
adc
and
std
arpl
xchg
jmp
lea
inc
mov
pop
inc
jbe
sub
xchg
jo
xor
rolb
movsb
or
addl
pop
mov
lods
lea
jge
das
andb
pop
mov
jno
lods
pop
les
sub
cmp
push
pop
xorb
sub
test
dec
inc
dec
dec
cld
inc
std
test
xor
test
adc
aaa
lret
jp
pop
outsl
je
jno
and
cwtl
fdivp
adc
dec
xor
enter
notb
or
shl
ret
lahf
mov
ret
dec
xor
mov
call
mov
mov
es
xor
incb
xchg
inc
add
dec
push
daa
jmp
loopne
fstpl
push
jns
push
mov
je
stos
and
push
or
mov
lret
movsb
rorl
into
ss
and
fadd
sbbb
cwtl
or
lods
imul
shlb
fdiv
pop
cmp
sbb
shll
jmp
imulb
ss
scas
ljmp
roll
fsubr
call
jecxz
js
mull
mov
stos
int3
daa
dec
cmpsl
add
inc
pavgb
xchg
dec
cmp
mov
mov
das
in
mov
je
outsl
inc
call
ja
mov
xorb
xor
cld
jo
dec
dec
scas
orb
fnstcw
or
mov
nop
rcll
clc
adc
popf
lds
stos
outsb
sbb
into
into
cmpsb
test
movsb
pop
push
daa
xchg
dec
mov
in
lods
jo
sub
stos
add
cmc
scas
daa
leave
in
mov
pop
add
test
outsb
add
pop
mov
lcall
push
in
push
mov
push
iret
sti
sub
sub
call
inc
sahf
mov
xchg
dec
lcall
orl
imul
test
imul
outsl
dec
sub
cwtl
lret
jb
aam
sbb
adc
mov
pop
mov
lea
mov
lcall
gs
or
lds
adc
out
jg
cmpsl
aaa
ficompl
pop
je
inc
icebp
repnz
add
das
or
push
lahf
inc
rcrl
aaa
mov
sti
jno
adc
sbb
pop
icebp
jbe
fs
cmpsl
shr
sarb
xor
stos
jb
mov
or
cmpsb
push
iret
test
pop
inc
cmpsl
mov
jno
add
sub
or
cmp
repnz
sub
pushf
or
adc
gs
das
sub
imul
mov
pusha
xchg
int3
jl
int3
sbb
push
in
sbb
mov
push
mov
or
je
mov
adc
ret
pop
pop
out
mov
leave
fiaddl
inc
xchg
stos
fsts
add
mov
xchg
jno
and
data16
outsb
add
push
fisttpll
pop
into
or
xchg
js
rcrl
out
loope
add
sub
movsl
cmp
xchg
subb
and
jae
fstps
and
push
aaa
cmp
jle
out
cmc
sarb
sbb
xchg
push
and
fisttpll
cmpsb
inc
push
xor
jb
int3
fwait
push
out
or
mov
mov
mov
jmp
mov
push
dec
in
jp
push
outsl
insl
push
xchg
mov
cltd
mov
jo
pop
xor
imul
icebp
fcmovnb
movb
xor
adcl
add
sub
mov
jp
lock
pop
test
xor
inc
clc
inc
sub
rorb
xor
xor
cld
jnp
push
inc
stc
dec
xor
pop
lret
xor
push
cmp
gs
mov
out
into
dec
push
and
mov
mov
lcall
clc
scas
loopne
iret
pop
lret
inc
mov
pop
inc
ljmp
ds
inc
add
jne
pop
fwait
sbbb
and
jmp
shr
test
and
rorb
adc
fisubrl
into
stc
in
pop
mov
xchg
sub
cmc
ret
mov
lcall
add
dec
or
mov
fs
pop
fstpt
cmp
popa
xorl
sub
lds
xlat
repnz
clc
aaa
dec
stos
inc
in
out
les
sbb
cmpsb
sti
adc
mov
xorb
xor
scas
add
and
cmc
push
push
mov
rcll
mov
daa
addr16
nop
and
dec
mov
shlb
pop
dec
ljmp
shl
stc
mov
xchg
fcompl
mov
mov
xchg
push
xchg
cmp
pop
xchg
leave
movsb
pop
and
push
sub
dec
loop
dec
subb
xor
inc
lods
ret
push
jb
dec
adcl
add
jo
rep
mov
adc
and
mov
jo
test
add
cltd
push
jge
lret
gs
mov
out
stc
xchg
stos
jb
and
add
mov
inc
popf
pop
lcall
clc
xchg
clc
push
jb
imul
dec
ret
test
cmp
xchg
cltd
cs
stos
xchg
cli
int
subb
lds
dec
add
imul
jecxz
xor
mov
sbb
out
dec
fabs
xchg
sar
jecxz
mov
pop
sbb
pop
subb
stos
loope
dec
mov
fcmovbe
es
add
ret
aas
sub
addr16
out
into
cmp
xchg
cmp
xor
in
add
xchg
jg
jl
pop
and
sub
xchg
pop
or
push
or
adc
outsl
movsl
sahf
in
inc
xchg
xchg
enter
inc
dec
mov
call
cmp
xchg
mov
inc
fcmove
andl
xor
push
lret
insb
imul
push
mov
mov
sbb
cmp
rorb
lock
das
inc
lock
enter
inc
xchg
push
or
and
xchg
xor
loop
jns
addr16
cmp
inc
leave
mov
icebp
push
xchg
in
std
jle
jg
jp
and
add
ja
jns
mov
mov
xchg
daa
lea
fstl
addr16
push
rcrb
or
jno
cltd
xchg
adc
mov
sti
or
pop
mov
hlt
js
cmp
jo
mov
insl
js
jp
or
adc
sbb
shrl
call
or
inc
test
shrl
test
das
xchg
inc
jb
enter
inc
addr16
imul
decb
mov
data16
jo
in
mov
xchg
loop
mov
mov
cmpsl
je
mov
aas
inc
cmp
mov
jb
or
inc
int
jmp
imul
sbb
test
adc
jg
cmp
fcoms
je
xchg
inc
mov
pop
jg
xchg
jbe
test
lods
roll
or
add
xchg
adc
jp
loop
push
add
add
jg
mov
in
sbb
sti
or
xor
push
call
orb
test
pop
ret
pop
mov
inc
leave
mov
out
fcom
and
xchg
sbb
scas
leave
adc
test
out
fwait
inc
jae
jg
and
sub
aam
roll
aaa
lret
add
data16
stc
notl
lea
cld
jle
inc
leave
lods
push
xchg
or
clc
push
pop
out
sbb
mov
fnstcw
cltd
sbb
dec
adc
cmpxchg
in
jb
popa
insb
xchg
ret
inc
es
je
xchg
mov
jb
lods
data16
cmp
cld
dec
popw
stos
inc
shll
sub
add
das
loope
insl
clc
sbb
xchg
and
or
pop
cmpsl
add
mov
push
outsb
sarb
fidivl
nop
mov
or
mov
clc
adc
repnz
add
sti
loope
add
inc
in
mov
dec
cmp
jb
pop
stos
inc
dec
rclb
xor
mov
add
xor
cwtl
mov
lret
fcomp
add
ret
sub
repnz
js
fnstcw
mov
sbb
inc
daa
adc
mov
xor
decb
inc
cltd
xchg
jnp
int3
adc
iret
xchg
shrb
jno
orl
xchg
fadd
sub
jno
adc
scas
xchg
push
sahf
dec
sbb
mov
lds
xor
outsb
or
fsubrp
sbb
stos
fmul
jl
push
out
addr16
dec
and
push
sub
out
mov
xor
ret
cltd
push
and
mov
inc
adc
cmc
xchg
sub
push
cwtl
push
sub
js
sbb
lcall
mov
push
clc
mov
pusha
xor
fsubrs
push
insl
fdivrs
cmp
cwtl
or
jo
cmp
sbb
leave
cmp
dec
sti
pop
mov
and
movsb
out
ds
lcall
out
add
mov
cltd
cmp
vpavgw
fisubl
mov
jns
mov
enter
insl
pop
out
lret
cmp
and
sub
xor
or
jmp
decb
fisubs
sub
shr
sbb
pop
pop
sahf
sub
movsb
test
gs
lea
bswap
repz
jg
jecxz
gs
or
divb
lods
fidivrs
jae
hlt
mov
lds
and
pop
and
fstp
dec
push
or
iret
mov
jo
cltd
mov
jnp
mov
pop
push
pop
es
pop
out
cmp
and
mov
xchg
or
pop
aaa
mov
adc
jmp
rcrb
frstor
call
mov
call
dec
and
fists
call
xor
adc
js
cld
shrl
mov
mov
adc
pop
imul
fimuls
cmp
xor
sub
scas
pop
pop
lret
inc
std
mov
adc
or
subb
push
out
jge
in
lret
jmp
sub
int3
int
pop
decl
xor
cmp
xlat
stos
fwait
mov
std
fstps
rorb
insb
gs
adc
jae
pusha
xchg
jne
ret
add
int
mov
and
mov
int
aaa
insl
pop
lahf
fsubrs
stos
xchg
lock
pop
aam
insb
das
pusha
inc
and
dec
cmp
popa
cmp
mov
mov
pop
lods
push
popf
clc
inc
and
out
leave
mov
sbb
jge
stos
into
and
rcll
inc
bound
popa
loope
nop
sub
or
inc
aad
adc
adc
pusha
subl
and
inc
and
cmp
in
aad
lcall
pushf
or
ljmp
cli
imul
mov
push
addr16
mov
and
loope
stos
pop
clc
les
push
xchg
push
pop
ficoml
in
xor
test
arpl
mov
push
mov
adc
js
mov
mov
insl
dec
into
aad
push
frstor
das
daa
iret
cmp
push
cmc
test
xorl
pop
sbb
cmp
shll
and
imul
or
jae
mov
mov
jg
fdiv
fdivrl
push
in
insb
xchg
fbstp
xor
mov
stc
mov
or
imul
into
lock
scas
mov
dec
mov
add
dec
mov
lcall
pop
adc
sbb
repnz
mov
lahf
mov
mov
leave
cmpb
and
xchg
push
push
mov
les
jae
mov
mov
pop
ja
cmp
cli
xchg
mov
pop
fcomi
int3
cmp
xorl
inc
ds
push
enter
jo
sbb
xchg
cmpb
dec
fbld
mov
clc
adc
adc
or
popa
ret
shl
fistl
sbb
test
mov
mov
xchg
lea
push
mov
in
stc
xor
push
pop
mov
rorb
mov
enter
mov
and
cltd
or
popa
fwait
mov
lret
adc
mov
mov
mov
sbb
shlb
outsl
push
std
dec
repz
jp
mov
icebp
dec
mov
and
clc
bound
std
lret
fstl
out
call
adc
adc
adc
daa
and
xchg
mov
inc
sbb
cmp
pop
jbe
dec
dec
popa
mov
or
mov
pop
divl
test
push
iret
jnp
and
out
sub
fldt
push
dec
jns
scas
mov
cmp
dec
cmp
xlat
sub
add
mov
xor
repnz
enter
add
push
sub
mov
pop
loop
test
dec
jp
mov
mov
xchg
push
add
ret
lock
cwtl
xchg
lret
pop
sub
cmp
sarl
shl
leave
lcall
cmp
in
cmp
dec
xchg
xor
bts
out
in
and
xchg
shr
int3
mov
and
jne
sub
je
cmpsl
ret
push
les
fildl
push
xchg
dec
lock
xor
or
xchg
dec
sbb
shrb
imulb
mov
pop
pop
pop
leave
test
jmp
sub
and
addr16
pop
pop
sbb
push
ds
ds
push
cmp
pop
jl
cmp
filds
ja
ret
and
cmp
mov
test
sub
roll
outsb
out
xlat
xor
mov
fcoms
sbb
fsts
and
or
sbb
fsubrp
push
mov
cmpsl
add
adc
pop
xchg
repnz
pop
out
stos
pop
adc
jnp
cltd
pop
xchg
cwtl
mov
jno
daa
push
in
and
inc
shll
mov
jb
stc
xor
ljmp
mov
ret
int
popf
sub
out
lock
mov
xchg
in
lret
imul
es
cmp
imul
lds
cmp
xchg
orb
int
in
aad
rorl
mov
movsl
stos
insb
xor
roll
dec
xchg
cmp
push
lds
idiv
cmp
and
dec
es
push
inc
call
and
cld
in
sub
or
ret
in
sub
jmp
test
in
xchg
jo
aad
lcall
mov
jmp
mov
mov
xchg
cld
mov
mov
jno
in
je
or
push
mov
sahf
xchg
push
cmp
dec
xor
add
mov
xlat
ficoms
pop
or
cmp
fmuls
into
jmp
adc
das
sub
xchg
lods
mov
or
push
lea
into
iret
jno
repnz
in
adc
jo
or
pusha
lea
addr16
notl
push
push
mov
ljmp
push
int3
pushf
add
lahf
add
adc
sahf
outsl
mov
rolb
push
jmp
lock
mov
sar
out
mov
stos
xchg
fnstcw
add
loope
and
push
adc
xor
add
in
pop
adc
push
addr16
inc
cmp
aad
es
mov
gs
xorb
fwait
arpl
cmp
push
aas
xchg
sahf
out
jl
and
mov
pop
stos
enter
das
fsts
cmp
and
hlt
xchg
lret
test
jge
in
outsb
xor
sbb
mov
mov
inc
pop
sub
mov
push
push
adc
daa
cld
movsb
lcall
sbb
and
jg
pop
int
dec
cltd
in
xchg
out
aad
ljmp
comiss
test
inc
push
pop
in
add
loopne
push
fidivrs
clc
test
pushf
adc
lods
or
jecxz
xchg
leave
fadd
jl
test
leave
loopne
sahf
pop
mov
addr16
adc
rol
inc
stos
mov
cmc
adc
mov
xchg
xor
mov
popa
or
test
or
adc
lods
fst
xchg
push
xchg
cmpsb
mov
popf
hlt
mov
push
cmpsb
sbb
int3
cmp
xor
dec
fstpt
dec
dec
fistps
insl
repz
push
push
imulb
lock
adc
xchg
js
fdivrs
rcrb
adc
fnstenv
xchg
xchg
dec
shl
bound
dec
add
sub
flds
sbb
xor
mov
dec
mov
loopne
xor
cmp
leave
hlt
flds
jle
mov
cmpl
test
xor
inc
test
daa
mulb
xchg
add
xchg
xor
and
xchg
inc
pop
outsl
lea
push
xor
out
mov
stos
ficoms
inc
dec
pusha
imul
cmpsb
pop
mov
scas
cmc
pop
or
repnz
ret
mov
popa
mov
dec
or
std
les
stc
mov
psubq
aad
aad
and
loop
adc
cmp
push
cli
jmp
mov
sbb
ret
sahf
ficoml
push
cli
in
jle
fdivl
mov
in
mov
sahf
and
and
in
fs
push
ds
fnstsw
leave
adc
lods
cmp
shlw
outsb
int3
cmp
movsb
adc
push
cwtl
sahf
jmp
int
fwait
mov
push
push
add
cmpsb
ljmp
icebp
mov
mov
push
int
jns
enter
mov
into
dec
ljmp
sub
xchg
jecxz
lret
insb
and
sti
pop
loop
mov
mov
xchg
push
or
mov
lahf
inc
orl
add
and
add
sub
pop
mov
lcall
push
aad
add
mov
push
mov
loope
dec
inc
test
fsubrs
aas
fcmovnb
xchg
mov
sub
inc
push
jno
jle
cmp
iret
xor
sbb
cmp
push
cmp
adc
outsb
sub
jnp
xor
cmp
push
jns
or
sbb
push
adc
lock
in
push
jnp
mov
leave
fsub
js
cmp
lds
nop
fisubrs
adc
xorl
loope
xchg
cli
movsb
xchg
cmc
mov
or
lahf
or
iret
mov
push
pop
or
inc
pushaw
pop
imull
in
mov
push
xor
jg
push
lret
loopne
aaa
adc
rclb
getsec
push
roll
fmul
mov
in
add
stos
adc
lret
mov
cmp
xchg
add
cmp
pusha
int3
sbb
inc
imul
ds
xlat
add
jb
jge
push
cmp
sub
cmp
or
jecxz
lcall
add
inc
sbb
subl
jae
sbb
and
xor
add
push
dec
hlt
shrb
test
popa
ds
xchg
mov
mov
arpl
loope
sbb
dec
mov
fisttpll
or
xchg
out
xor
pop
outsl
insb
add
jb
gs
xchg
adc
out
mov
xchg
cld
test
loop
mov
push
and
test
data16
lret
jge
cmpsb
leave
xor
fidivrs
add
loope,pt
ret
data16
push
shlb
fisubrl
xchg
int3
or
popf
fiadds
daa
adc
add
popf
lods
pop
gs
or
popl
fcomps
cmp
mov
imul
in
pusha
jo
test
mov
and
sub
dec
stos
imul
dec
in
mov
gs
sahf
dec
sub
or
cli
mov
hlt
dec
les
aam
jae
adc
rorb
mov
jp
mov
mov
imul
mov
xor
testb
sbb
mov
mov
lcall
mov
pop
dec
mov
push
and
cmpsb
hlt
xchg
test
mov
inc
lahf
dec
adc
sti
es
jge
js
data16
mov
dec
adc
enter
cli
lock
xor
in
icebp
push
cwtl
mov
and
xor
lret
stc
sbb
ret
lods
jge
jbe
jne
jl
adc
sbb
leave
inc
inc
add
xchg
adcl
xchg
hlt
push
adc
jecxz
stos
mulb
pushf
xchg
jmp
add
lds
fbld
mov
sub
adc
lock
sbb
lds
insb
lods
lahf
jmp
sbb
es
sbb
pusha
lea
xor
mov
mov
aas
xlat
jg
inc
xor
pop
test
jae
fxch
nop
lea
jecxz
xchg
cmp
push
mov
jns
xchg
mov
ret
addb
mov
jbe
or
sbbl
mov
jecxz
xchg
jb
cmp
or
mov
mov
out
std
popa
mov
hlt
daa
mov
imul
bound
jae
mov
sbb
jae
subl
pop
movsl
js
inc
mov
sub
shr
sbb
addl
sbb
lds
mov
xor
pop
xchg
cmpl
test
xchg
mov
fiadds
dec
mov
mov
pop
iret
call
add
cmpsl
imul
icebp
out
fldenv
pop
mov
cmpsl
scas
out
xlat
addr16
cwtl
fwait
cmp
xor
mov
test
mov
push
push
daa
aad
jp
or
sarb
inc
out
add
.byte
