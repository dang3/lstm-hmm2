mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
fsub
sti
pop
add
scas
adc
std
mov
nop
mov
or
jae
jb
or
push
out
or
aas
add
mov
mov
les
sub
jns
pop
push
dec
bound
arpl
pop
sbb
lock
pushf
insl
xor
int
jl
dec
jmp
arpl
sar
cmp
int3
addl
jmp
fdivrp
and
adc
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
addw
add
add
cmp
adc
adc
std
lods
dec
jo
loope
adc
or
movsb
fldcw
insl
cmp
mov
push
pushf
in
in
cwtl
xchg
nop
adc
in
in
mov
adc
in
in
jo
push
in
pop
pop
push
in
in
or
dec
dec
jns
xor
cld
daa
clc
hlt
inc
sub
daa
call
sahf
cmp
cmp
icebp
loop
dec
sub
add
mov
mov
add
movzwl
mov
ss
pop
ret
addr16
sub
and
stos
cmp
add
popa
lcall
je
jb
inc
and
je
outsl
outsb
and
xor
in
in
adc
push
imul
push
jb
data16
push
mov
push
push
je
popa
clc
adc
gs
insb
outsl
jo
repnz
cmpxchg
ret
lods
jge
jmp
mov
mov
dec
add
inc
or
shll
or
or
or
in
push
dec
adc
push
adc
scas
xor
rcll
adc
fildll
fildll
mov
mov
add
sbb
cs
jp
add
imul
aas
inc
and
dec
in
pusha
cmpsb
sub
inc
dec
ror
xor
sub
xor
xor
cs
pop
xor
cmp
mov
mov
pop
cmp
das
rorl
sub
add
add
neg
std
insl
mov
mov
jl
push
cmp
add
js
enter
and
mov
inc
pop
add
mov
mov
cmc
mov
add
nop
fildl
rorl
push
sub
mov
shr
out
jg
add
mov
mov
and
pop
mov
out
clc
jge
add
ljmp
ja
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jbe
rol
sti
shl
or
sbb
in
push
stc
ret
cmpl
sbb
scas
loop
adc
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
test
push
mov
pusha
push
mov
inc
not
add
push
and
add
jbe
push
add
push
int
add
rclb
or
push
jbe
pop
mov
lods
mov
loop
mov
out
mull
cmpb
mov
sub
mov
mov
sub
sbb
xor
stc
out
mov
nop
cmpb
jmp
fstpt
imul
mov
add
add
clc
test
push
xor
add
add
push
push
push
mov
lea
movb
or
rorl
fwait
and
xchg
or
add
sub
mov
or
ja
push
jle
jg
pop
or
or
imul
lret
outsb
ret
adc
pop
pop
icebp
sti
pop
dec
mov
mov
sub
jae
in
mov
fidivrs
adc
mov
push
and
or
test
jne
in
std
dec
xchg
loop
jns
add
jmp
or
sbb
or
mov
mov
and
push
push
lea
or
push
jg
in
inc
or
push
jne
push
push
mov
cmp
rorb
pushl
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
in
std
add
and
inc
loopne
repnz
sub
pusha
mov
adc
jecxz
jmp
fidivrs
loope
pop
pop
mov
mov
sarl
jbe
ljmp
shl
adc
xchg
xor
push
mov
call
cmpl
test
jo
fs
mov
xchg
adc
cmp
jae
mov
push
aas
dec
and
jae
fmuls
add
lods
iret
lea
movsb
sbb
es
sbb
mov
rolb
pop
or
pusha
jmp
lds
mov
jmp
mov
push
std
sub
add
add
inc
ret
push
mov
iret
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
test
btr
loopne
sarl
or
add
or
dec
jnp
sub
lea
mov
inc
jmp
sbbb
add
scas
fildll
cmp
jb
mov
xchg
in
idiv
int
enter
iret
sub
sub
cmp
and
inc
or
mov
rclb
mov
mov
movl
dec
cld
xor
das
mov
mov
pop
pusha
add
adc
scas
fsubrs
adc
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
lahf
insl
pop
mov
add
push
bsf
mov
push
loopne
rol
loopne
xor
sbb
sub
xor
cmp
pop
cld
jmp
mov
dec
mov
ret
pop
or
inc
bound
cmp
cmp
adc
test
push
pop
xorb
jb
out
subl
or
testl
fisttps
jns
shll
test
roll
out
sbb
mov
jne
subl
icebp
leave
ds
inc
inc
cmpsb
leave
adc
fadds
data16
xchg
dec
cltd
sarb
pop
mov
test
adc
aad
push
aad
xchg
inc
adc
cmp
jne
outsb
fs
cwtl
and
push
cld
iret
push
icebp
push
dec
rorl
sub
xchg
scas
ljmp
mov
pop
leave
outsl
xor
dec
mov
jmp
aaa
inc
add
call
roll
fmull
scas
testl
sub
xor
testb
dec
ret
lahf
lock
cmp
inc
fiadds
mov
popa
ret
xor
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
xchg
mov
lahf
mov
stos
flds
pop
out
add
movsl
movl
in
movl
loopne
add
jno
shr
dec
roll
pusha
aad
popa
in
or
in
or
cmp
jb
sbb
sbb
lret
jb
pop
inc
popa
jo
cmp
rorb
mov
ret
jg
or
decb
movsb
test
lea
push
mov
loop
roll
jne
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
xor
ljmp
cmp
push
and
cmp
push
fsts
sub
cmp
jb
sbb
push
pop
sti
adc
sub
adc
add
jp
jnp
and
stos
jmp
sbb
loopne
lds
add
sub
cmp
xchg
dec
das
push
jge
inc
mov
push
cmp
pop
cld
icebp
dec
or
or
mov
push
mov
add
or
popl
pop
data16
mov
roll
xlat
jno
pop
pop
sub
clc
addl
sahf
sub
add
mov
cmp
stc
call
icebp
inc
cld
test
mov
sbb
xchg
sbb
add
ljmp
cmpsb
imul
cmpsb
sarl
je
iret
ja
cmp
pop
es
pop
mov
call
ljmp
rolb
xlat
add
test
add
shlb
push
ret
andl
push
add
push
ss
adc
jb
lea
jl
inc
sbb
mov
push
pop
add
outsb
mov
dec
add
pop
sarl
jl
test
dec
iret
push
gs
add
xchg
aas
loop
cmp
ds
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
test
sub
mov
stos
push
lods
pushf
jno
mov
cmpsl
push
mov
mov
cld
mov
fs
mov
loop
pop
shr
sbb
mov
add
enter
mov
fadds
insl
rcr
incl
aas
wbinvd
shrl
xchg
add
jbe
aaa
sbb
pop
push
nop
lret
sbb
sbb
add
jb
sbb
test
jg
aas
insb
dec
add
js
adc
inc
add
icebp
mov
loope
inc
inc
and
addr16
mov
push
aaa
loopne
cs
cli
mov
arpl
push
ljmp
jbe
or
mov
lock
push
jae
ss
mov
push
adc
mov
icebp
add
push
mov
inc
sbb
add
push
adc
hlt
jne,pn
push
testb
je
adc
hlt
pop
dec
sub
jmp
mov
pop
pop
push
bound
out
or
loop
call
mov
jge
push
data16
ret
lcall
mov
push
cmp
jne
test
daa
dec
movb
jnp
out
pop
lea
mov
and
lock
push
rcrl
pop
testl
and
shlb
jno
fstpl
pop
mov
dec
scas
mov
mov
stc
es
sbb
xor
inc
setne
xchg
sti
movsb
sub
aas
inc
sbb
inc
icebp
ficoms
adc
add
jp
and
xchg
mov
out
mov
or
outsb
lock
push
push
rorl
jl
inc
pop
mov
cmp
jne
fldt
push
mov
and
sti
jbe
or
jne
mov
ja
loopnew
cld
mov
cmp
sub
call
loopne
fists
ret
decl
inc
in
adc
shlb
mov
jns
adc
mov
adc
fcomps
push
rorb
movb
data16
test
pop
mov
je
mov
push
sub
jnp
push
or
cmpl
mov
xor
int3
or
dec
or
mul
clc
mov
inc
out
adc
test
jle
sbb
cmpb
out
fwait
enter
cmpb
jb
jo
mov
add
dec
loopne
test
mov
push
sub
cli
cmp
je
or
sahf
jge
cmp
in
movq
or
push
inc
fiadds
add
adc
mov
andb
xchg
aam
icebp
or
in
xchg
push
mov
pop
mov
mov
push
dec
jne
data16
test
push
xchg
ret
lea
sub
sti
push
and
inc
add
jo
lock
clc
push
cmp
lcall
or
inc
push
jb
call
jle
inc
les
add
or
push
cmc
inc
scas
loopne
pop
jmp
mov
and
xchg
fisttpll
sub
mov
and
fdivr
or
in
int3
loope
xchg
cmp
cmp
jecxz
jne
mov
int3
sub
jb
ss
mov
sbb
aaa
adc
daa
mov
jae
in
xchg
scas
ds
or
sti
mov
jge
dec
jl
cmpb
cmpsl
adc
negl
xchg
mov
xchg
dec
mov
fadd
test
jp
mov
adc
dec
jb
sahf
mov
cmpsb
cld
dec
loopne
shrl
add
scas
in
scas
mov
mov
xlat
mov
or
ds
repz
xchg
fcomps
cmp
rolb
movb
inc
push
or
pop
inc
loopne
int
dec
adc
and
sbb
mov
imul
fs
out
pop
sbb
pop
jmp
mov
xorl
push
and
sarb
xchg
movzbl
scas
fldcw
dec
das
js
pop
pop
jno
pop
dec
pusha
or
xor
push
pop
incl
add
andl
fdivp
push
lcall
sub
stos
push
sbb
filds
imul
lds
js
outsl
mov
testl
mov
or
imul
into
mov
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
enter
insl
gs
outsl
jb
pop
popa
imul
popa
jae
outsl
add
arpl
fs
incb
pop
jae
popa
insb
insb
and
dec
imul
or
or
es
mov
addr16
outsb
imul
outsb
add
idivb
jae
xchg
jp
mov
cltd
xorl
nop
outsb
and
jo
mov
lahf
mov
das
cmp
dec
cli
push
push
xor
xor
mov
jb
movl
in
pop
mov
into
add
add
clc
jbe
mov
add
inc
add
cmp
jne
mov
xchg
mov
cmpsb
push
mov
cmp
jl
in
inc
clc
or
sbb
movl
jmp
add
out
into
dec
xor
jae
mov
rolb
cmp
jbe
ja
dec
mov
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
aaa
lret
jbe
mov
cmp
xlat
mov
push
pop
int
xor
div
imul
mov
or
mov
icebp
mov
in
dec
inc
xor
hlt
sbb
movl
mov
mov
mov
jnp
inc
add
or
repz
cmp
xor
lods
jb
push
mov
out
ficoms
jne
mov
jmp
mov
sarl
cmp
xchg
push
mov
cmp
jne
mov
ret
out
mov
dec
adc
insb
inc
or
or
or
and
stos
sbb
cmp
imul
dec
mov
outsl
push
sbb
mov
mov
push
out
lea
cmpl
jg
mov
jge
mov
sub
mov
iret
popf
iret
or
pop
sbbb
sbb
pushf
movl
dec
adc
repz
ret
mov
add
call
sub
mov
xor
adc
addr16
sar
jg
add
xor
mov
inc
xor
or
xor
mov
test
cld
pusha
jo
arpl
ss
pop
mov
mov
mov
lds
sbb
mov
mov
inc
mov
mov
enter
cmpsl
lock
out
adc
test
xchg
add
jecxz
sahf
or
in
aam
in
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
or
loopne
push
push
xor
pop
pop
jne
ds
js
mov
out
call
iret
pop
testb
inc
or
je
ljmp
outsl
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
mov
inc
repz
decl
mov
jmp
mov
jmp
mov
insb
adc
pop
repz
cmp
fmull
cmp
je
cmp
ja
sub
mov
jmp
and
in
sub
sub
or
adc
adc
int3
inc
push
push
or
int3
rorl
dec
dec
sahf
out
sahf
pop
popa
insb
jns
push
mov
lea
dec
or
adc
flds
fsubrp
push
add
cmp
jle
loopne
fisttpl
or
shrl
lret
adc
jbe
adc
mov
add
and
sub
pop
inc
cmc
pop
incl
insl
aas
fmuls
mov
or
xlat
fucomp
ja
inc
add
mov
push
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jbe,pn
fucomp
or
inc
lock
or
jbe
and
cmpb
add
xor
std
in
mov
jmp
sub
mov
fimuls
fisubrs
ret
add
js
inc
mov
adc
push
out
mov
outsl
mov
inc
nop
mov
pop
jne
pusha
push
nop
arpl
loopne
or
out
add
inc
sbb
iret
frstor
orl
pop
clc
mov
fidivl
mov
jo
divb
push
add
fisubl
fnstsw
jmp
mov
fbstp
and
mov
add
dec
jmp
mov
clc
ljmp
or
mov
add
movsl
out
das
pop
xor
imul
dec
cmc
mul
xor
cmp
ja
sub
call
mov
fldcw
cmp
pop
outsl
ja
insl
push
sub
adc
or
fstps
testb
fwait
orw
insb
fistps
add
pop
xchg
stos
neg
sub
pop
inc
lods
sub
repnz
or
or
nop
daa
sbb
dec
add
jmp
data16
mov
or
call
lods
sbb
pop
cmp
js
cmpsb
pop
cmp
and
mov
inc
and
cli
mov
sbb
cwtl
aas
mov
mov
imul
ja
and
adc
xor
add
sbb
fcomip
adc
lahf
jmp
cmp
dec
shr
mov
pushl
ds
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
push
shll
pop
add
xlat
xor
mov
sub
std
in
pcmpeqd
mov
sub
inc
xchg
xchg
stc
mov
sbb
lret
jbe
mov
mov
inc
inc
loopne
test
mov
add
push
xchg
inc
inc
in
mov
ret
je
mov
mov
cmp
jne
dec
je
mov
add
pop
add
aaa
add
sahf
loop
sti
scas
fidivl
add
push
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
jmp
dec
in
adc
cmp
jne
shr
sarl
add
push
mov
shr
or
test
cmp
pop
cmp
mov
rol
pop
and
mov
cmp
int
or
dec
dec
dec
and
andb
xlat
add
cli
clc
int
cmp
das
movsb
pusha
push
add
ljmp
or
cmc
add
push
add
outsl
fistpl
neg
sub
or
rcl
push
mov
ss
add
idiv
cmp
push
sub
xchg
jmp
sahf
out
iret
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
adc
es
push
or
ret
pop
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
std
pop
mov
test
jmp
or
or
cmp
ja
test
and
fcoms
out
int
or
incl
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
sub
popf
cmc
jmp
mov
xorb
cmpsb
popf
mov
xchg
and
add
or
pusha
xchg
scas
leave
shl
stos
aad
cwtl
pop
cmp
sbb
xor
mov
mov
push
cmp
sbb
mov
dec
jne
pop
testb
mov
and
xchg
dec
cs
shr
fs
jl
pusha
xor
cmp
cmpl
adc
in
fldt
leave
enter
loop
jns
pcmpeqb
cmp
adcb
push
and
jmp
pop
xchg
lret
xchg
jge
mov
xor
pop
push
cltd
stc
sbb
jmp
fstp
fldt
adcl
adc
out
mov
xchg
arpl
mov
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
jmp
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
decl
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
call
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
pushl
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
cld
rclb
popa
pushf
mov
and
addr16
repz
mov
incl
mov
push
pusha
les
outsb
bound
xor
jmp
inc
xor
sub
xor
insb
sarb
sbb
add
and
or
and
rcr
mov
dec
js
sbb
movzwl
fwait
std
inc
clc
lea
push
push
inc
or
hlt
mov
jne
xor
push
push
mov
pushl
mov
movl
data16
pop
ja
roll
and
pop
pop
std
ljmp
in
sub
ret
sub
jmp
fidivs
jecxz
and
pop
aas
or
clc
mov
push
dec
inc
push
push
inc
push
inc
pop
lcall
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
insb
jne
fninit
fwait
in
clc
sbb
mov
idiv
call
stos
lret
aas
xlat
mov
xor
mov
inc
rep
mov
add
or
cld
int3
leave
out
cmp
push
push
ja
xchg
cmp
daa
jl
inc
sbb
push
movnti
das
and
and
pop
sbb
dec
add
xchg
ret
xor
fnsave
and
mov
rolb
addb
sti
sti
std
sub
or
cwtl
mov
sbb
jle
lock
push
mov
rcr
test
mov
les
xchg
push
btc
fcoml
in
fs
mov
cmp
push
stos
insb
xor
in
pop
mov
push
add
jl
call
ret
sahf
subb
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
pushf
add
pop
fsubrl
clc
in
cmp
je
jbe
add
jae
ss
push
loope
std
mov
mov
push
sbb
jne
jne
sub
add
mov
jbe
pop
loop
adc
inc
movsb
fdivs
cmp
fidivs
paddd
shufps
add
mov
mov
add
sbb
push
and
outsl
clc
mov
ja
pop
out
pop
clc
mov
mov
inc
mov
test
subl
sub
and
adc
add
mov
shr
mov
push
callw
pop
lea
push
in
mov
sub
insb
clc
mov
push
dec
lds
cmp
shll
outsb
and
add
mov
in
inc
sahf
xor
xor
jb
jo
jne
push
or
aaa
or
or
push
inc
sbb
push
inc
fcoml
mov
scas
add
jmp
pushf
add
cmp
dec
aas
lods
rorl
mov
cld
inc
fistpll
jne
mov
in
push
xchg
jmp
lret
test
test
add
scas
je
pop
in
test
call
sbb
pop
add
sub
mov
pop
cs
xchg
les
pop
add
cmp
pop
ljmp
mov
mov
xor
das
mov
or
es
loop
out
les
jle
xchg
pop
push
data16
sub
cmp
test
fstpt
inc
push
stos
fiaddl
pop
pop
gs
cld
in
popa
lock
ds
mov
adc
pop
int3
xchg
adc
mov
std
add
sbb
add
dec
jne
icebp
fucomi
sbb
ret
incl
mov
xor
and
jne
dec
cmp
fists
push
popf
enter
inc
pop
sbb
fcompl
sbb
pop
mov
lahf
in
push
pop
add
mov
lcall
push
hlt
xor
lea
mov
mov
mov
movl
sarl
inc
or
or
pop
cmpsb
cmp
inc
sub
or
jmp
mov
push
mov
xor
or
adc
push
clc
addr16
sub
sarb
inc
xor
imull
xchg
inc
in
jae
gs
testl
sub
mov
idivl
shlb
out
ja
pop
pop
xchg
pop
addl
cli
in
push
pushl
adc
aaa
lock
add
in
pop
xchg
dec
sahf
dec
cs
add
add
jae
xor
pop
push
push
and
sbb
jmp
mov
or
jne
movsbl
inc
inc
jmp
add
mov
popa
addr16
jecxz
cmp
cwtl
xchg
or
sbb
loop
fdivrl
adc
jecxz
pop
movb
clc
cmp
inc
add
jne
pop
sbb
cmp
inc
mov
adc
outsb
pop
loopne
cmp
adc
test
cmp
add
shlb
out
jg
xchg
lcall
into
cli
out
push
je
dec
jge
dec
inc
push
test
lea
add
inc
xchg
fidivs
clc
add
stos
mov
jo
leave
cmc
adc
xor
jne
jbe
adc
cmp
je
orl
and
add
sbb
pop
sbb
cmp
sub
push
cmpsl
sarb
sub
mov
cld
adc
lock
pop
mov
jecxz
lods
fisttps
dec
adc
xor
push
xor
mov
xor
or
add
pusha
sub
repz
cwtl
push
or
and
cltd
pop
add
lds
aas
cltd
orb
mov
lods
aas
jb
add
dec
fdivrs
dec
fadds
rclb
loope
mov
or
push
std
mov
and
fsubl
jne
outsb
ljmp
adc
push
mov
arpl
sbb
enter
push
adc
xor
adc
mov
mov
jno
mov
pop
adc
es
or
dec
pusha
inc
movsb
jmp
pushf
adcb
outsb
jb
inc
mov
sub
enter
aaa
add
cmp
shrl
add
push
push
in
call
std
lods
adc
and
jmp
dec
test
inc
in
push
dec
imulb
pushf
loopne
inc
in
loopne
push
out
mov
outsl
or
fdivrs
call
push
push
or
sbb
leave
mov
dec
das
adc
idivb
inc
sahf
sbb
incb
inc
or
pusha
add
inc
or
jo
cmp
dec
sahf
test
fwait
negb
inc
adc
adc
add
repz
pop
mov
push
sbb
cld
pop
and
adc
loop
xor
add
shrl
jo
sbb
or
ja
ss
mov
cmp
je
sbb
mov
adc
push
sub
scas
adc
dec
je
jmp
add
add
je
jmp
cmp
out
push
adc
xchg
cs
adc
jmp
sub
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
inc
inc
lret
movzbl
push
or
adc
movswl
xchg
sbb
jo
leave
je
push
mov
dec
or
xor
dec
lahf
icebp
push
outsb
inc
sbb
fldl
insb
cli
sub
addl
popf
inc
pushl
xor
push
xchg
jo
cmpb
pop
cs
sbb
fidivs
inc
mov
addb
mov
enter
push
lret
int
sbb
mov
cmp
or
add
or
cmp
jne
orb
cmc
and
loop
lock
sbb
js
dec
jle
jge
test
jle
dec
mov
je
add
fmuls
pop
and
sub
mov
jmp
mov
fisubrl
or
dec
leave
fisubrs
or
ds
mov
in
sti
jle
jbe
fadds
dec
ds
xlat
iret
cmp
jg
cmpsb
push
mov
add
xchg
cmpb
xor
or
popf
mov
sub
jb
fldl
clc
ss
lahf
xchg
ret
dec
xor
mov
sbb
push
mov
mov
add
js
ljmp
cli
dec
jne
pop
pop
dec
add
mov
out
movsl
imul
pop
mov
mov
sbbb
stc
add
cwtl
mov
and
and
mov
icebp
mov
dec
mov
add
loopne
and
test
rorl
jbe
mov
pop
push
scas
adc
out
mov
fcomps
rolb
mov
cmpsb
outsl
jbe
outsl
fwait
in
ja
add
mov
mov
or
push
xchg
xor
push
bound
out
loopne
mov
cmp
mov
add
or
inc
dec
push
push
sbb
bnd
push
out
xor
inc
pop
xlat
test
jne
mov
mulb
fs
cmp
mov
pop
sarb
fsub
pop
gs
sub
je
lock
jnp
lcall
icebp
cmp
cs
fsub
sti
mov
mov
cmp
daa
data16
faddl
lret
xor
ds
xor
jnp
sub
test
sahf
sbb
push
sbb
js
filds
je
loopne
aaa
test
pop
mov
insl
or
dec
adc
sbb
test
in
cwtl
sbb
scas
pop
add
adc
add
add
add
mov
push
test
popl
push
ficoml
adc
jb
adc
cwtl
lods
sub
xchg
push
xor
push
out
sbb
and
mov
mov
pop
pop
pop
mov
dec
add
or
push
mov
rolb
into
xor
mov
or
jmp
mov
movsb
sbb
repnz
add
push
push
or
push
mov
push
push
lret
cmpsl
push
cmpsb
add
mov
cmp
lahf
adc
pop
pop
pop
mov
pop
mov
dec
clc
dec
jl
lock
clc
rorb
pop
jg
jb
scas
adc
push
sbb
add
or
add
sub
dec
jne
dec
push
push
fbld
inc
jg
sbb
cmp
push
pop
mov
pop
push
dec
and
out
inc
insb
xchg
adc
adc
xchg
das
xchg
jle
aas
insb
cli
cmp
add
ljmp
lea
mov
or
movl
cld
inc
push
xorb
mov
mov
das
js
nop
test
sahf
les
sarb
mov
aaa
ret
cmp
pop
adc
popa
xor
je
add
out
inc
cmp
add
sub
sbb
add
outsl
inc
aas
sub
xchg
jmp
lea
cmp
xchg
cmp
push
cld
pop
rorb
loop
decl
iret
cmp
push
jl
sti
lahf
rorb
mov
int
mov
add
sbb
cmpsb
into
rcl
push
fisubl
mov
jge
xor
ret
pop
cmpsl
push
mov
mov
loopne,pn
mov
push
cmp
je
and
aam
push
cmp
add
jo
sti
in
cs
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
popf
je
int3
mov
inc
xchg
inc
add
add
push
xor
push
jl
das
lock
rcrl
mov
jle
scas
outsl
push
je
pop
cld
and
cmp
jl
orb
xchg
aas
idiv
cld
dec
js
pushf
push
pop
inc
out
test
outsl
js
inc
jmp
jns
push
cld
add
mov
inc
lock
cmp
push
sub
es
cmp
jo
repnz
sub
arpl
xor
adc
or
lahf
cmp
scas
mov
ds
rorl
add
das
lcall
rorb
sbb
mov
add
pop
push
xchg
in
popa
mov
pop
lret
mov
lret
cmpsb
mov
jbe
lds
pushl
cmp
cld
and
inc
cld
dec
jmp
jbe
or
push
fs
data16
pop
cmp
nop
push
dec
jne
mov
idiv
lahf
loopne
add
cld
popf
cmp
pushl
add
dec
jmp
inc
xlat
bound
pushf
jb
jg
scas
xchg
add
jne
addb
sahf
in
loopne
adc
adcl
and
jmp
and
jle
pop
xor
out
cli
or
or
movsb
pop
cld
sub
push
adc
and
sub
sub
sub
mov
xor
je
js
mov
mov
jmp
add
jns
mov
cmp
icebp
in
add
pop
and
or
mov
mov
ret
cmp
push
into
push
clc
inc
or
sub
mov
in
add
sti
cmp
jmp
push
cmpsb
movsl
bound
gs
cmp
dec
inc
lret
shlb
dec
shlb
jae
adc
push
in
adc
jg
mov
cmp
jge
sub
roll
sarb
add
loope
mov
aas
adc
shr
in
jmp
and
cmc
adc
iret
xchg
jp
dec
jl
int3
jge
incl
push
mov
icebp
ss
stc
add
lea
clc
mov
pop
inc
dec
cmp
out
mov
or
dec
cltd
mul
mov
mov
push
cmove
lods
cmp
subb
imul
add
gs
cmp
fimuls
add
loopne
adc
lock
push
add
mov
test
std
mov
mov
cmpsl
out
jg
add
sahf
dec
enter
cld
fdivrl
sub
jl
sbb
add
add
mov
fcoms
neg
scas
xchg
jp
je
test
or
inc
jl
je
dec
movsb
cmp
jb
or
jb
stc
pop
sub
jmp
outsb
and
movsl
sbb
dec
add
ret
mov
shrb
js
adc
jbe
imul
xor
push
xor
inc
push
or
dec
push
shll
shll
mov
ss
jo
sbb
xor
jne
mov
shr
sbb
jne
push
icebp
adc
xor
arpl
loopne
sub
mov
xchg
adc
js
scas
sbb
adc
stos
loopne
int3
pop
cmp
gs
in
sub
arpl
out
push
cmp
and
daa
push
pushf
dec
cmp
xlat
jle
loop
int3
cltd
pop
xor
cmp
mov
lods
mov
cli
or
fs
adc
push
push
das
and
mov
push
push
sub
pop
cmpsl
cmp
inc
sub
or
lcall
xor
popf
push
sbb
insl
add
inc
adc
inc
push
jmp
and
jle
inc
jmp
mov
nop
add
adc
inc
pushf
mov
js
pushf
inc
pushf
aas
data16
xor
aaa
enter
data16
pop
pushl
mov
sub
pusha
sub
add
add
add
mov
add
push
xor
adc
mov
cld
shr
pop
sbb
les
inc
push
xor
ljmp
or
mov
fistpl
add
inc
and
mov
push
cmpsb
or
pop
das
or
cmp
sbb
adc
stc
xchg
mov
pusha
clc
movsl
lock
jge
pop
dec
cmp
nop
jle
outsl
negl
ret
cmp
push
lods
add
add
dec
or
inc
jp
fistpll
js
sti
sbb
sub
cmp
cmp
jle
mov
add
xchg
aam
inc
lea
sbb
loop
push
popf
inc
pop
inc
and
mov
cwtl
into
inc
aaa
push
mov
lea
mov
mov
pop
call
adc
xor
lds
fisttps
xchg
ret
add
push
cld
out
cli
or
or
cmp
je
cmp
je
cmp
lret
je
and
or
fistl
jp
clc
jmp
adc
dec
imul
adc
jmp
push
mov
mov
mov
stos
or
cs
cs
adc
popf
sub
jmp
cmp
inc
sub
jns
add
xlat
push
jmp
lahf
inc
sbb
jmp
fstpt
jp
adc
mov
mov
cmp
adcl
sahf
out
push
and
inc
adc
mov
pop
fstcw
inc
mulb
lcall
lret
cmp
loopne
jmp
push
cmp
sub
jmp
inc
sbb
sub
jb
shr
sub
or
sbb
cmp
and
ret
pushf
icebp
jmp
fisubs
adc
dec
push
shlb
pop
jle
jno
enter
cmp
mov
push
sub
cmp
outsl
jp
jb
xchg
mov
xchg
lock
or
out
inc
loopne
dec
inc
enter
push
dec
pop
xor
xchg
dec
adc
rcll
and
pushf
ret
sbb
adc
enter
add
cld
dec
dec
clc
push
aam
aaa
add
sub
jle
ret
addr16
mov
adc
mov
out
lock
cmp
xor
or
je
cmp
out
or
jo
adcb
push
push
pop
or
xor
inc
push
dec
mov
jmp
and
insb
lea
adc
adc
js
jo
sti
popa
pop
iret
pushl
or
push
pop
jmp
aas
popa
in
fcomp
add
sarl
xor
mov
xchg
enter
ds
lock
or
adc
pop
add
fimull
rorb
sbbb
xchg
pop
mov
and
mov
in
cs
dec
in
push
popa
jg
sbb
nop
inc
sahf
mov
jmp
and
out
sub
cmp
inc
mov
jl
sbb
lcall
les
push
loope
xor
add
or
pushl
lock
pop
add
inc
call
out
js
cmc
mov
cmp
add
je
cmp
pushf
iret
push
cwtl
adc
or
sbb
pop
ret
es
dec
inc
mov
adc
hlt
test
movsb
pop
outsl
mov
xchg
add
mov
mov
pushl
cmp
and
add
xchg
adc
pop
pop
ret
clc
sub
pusha
inc
in
mov
mov
lock
bound
iret
xchg
popa
push
or
lcall
adc
mov
repnz
les
jl
ficomps
mov
inc
sbb
in
out
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
je
jle
sub
xor
das
and
testl
mov
mov
add
sub
jb
outsl
mov
sub
jb
add
or
jmp
xor
sub
jmp
getsec
movsl
fadd
lret
jmp
push
subl
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
sbb
bound
movsb
loop
mov
inc
add
lock
ret
or
xor
enter
inc
insl
and
test
insb
xor
cmp
add
ficoml
stos
shlb
adc
inc
jns
movsb
sbb
dec
inc
js,pt
and
jne
adc
int3
and
jg
jp
inc
mov
dec
js
xor
mov
dec
daa
jmp
cltd
sub
pop
sbb
add
je
sbb
setb
jmp
setl
cmp
je
push
nop
ret
add
rorb
pusha
mov
mov
mov
sub
adc
or
and
es
dec
aam
dec
loopne
and
int3
decl
push
cs
pop
push
mov
repnz
iret
push
cmp
sbb
fiadds
dec
or
mov
sbb
sbb
loope
sbb
xchg
out
sahf
mov
add
push
fs
sbb
sub
push
jo
adc
fmuls
testb
dec
ss
fbld
into
in
idiv
cmp
je
andl
ljmp
or
xor
jge
jge
fildl
out
xlat
imul
sti
mov
sub
push
lea
mov
pop
mov
aad
pop
jmp
decl
stos
pop
inc
cmp
lret
in
jge
or
push
in
test
in
push
mov
adc
into
stos
in
mov
push
mov
sub
jge
sub
mov
mov
cmp
push
sub
lahf
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
ja
xchg
xchg
fidivrs
int
mov
jl
lds
cmp
clc
test
push
dec
jne
insb
icebp
insl
jl
mov
push
aaa
push
addl
cmp
decl
dec
clc
jne
scas
add
lock
push
int3
xchg
inc
mov
inc
pop
ja
in
data16
aaa
in
rcrl
push
push
mov
incl
shlb
cmp
pop
lahf
cltd
test
lock
in
inc
ret
inc
sbb
sahf
nop
add
push
add
ret
inc
outsl
push
or
popa
insb
inc
sub
jnp
jne
clc
ret
pop
mov
arpl
mov
mov
mov
cwtl
push
inc
fs
sbb
je
out
sbb
cwtl
push
and
jae
or
add
cmp
clc
jmp
ret
and
cmp
xor
insb
sub
aas
scas
clc
lret
and
sti
pop
jne
les
add
out
enter
mov
jmp
push
andb
movsb
gs
shl
out
inc
push
lods
mov
add
das
popf
test
call
and
idivb
sub
sbb
sbb
test
pop
sti
sbb
repz
mov
sbb
and
dec
fidivl
jne
push
mov
sub
fdiv
outsb
clc
lea
mov
rorl
inc
cmp
mov
push
push
addr16
xlat
into
xchg
imul
lahf
insb
inc
lock
je
fdivrp
fmull
cmpsb
add
lods
jg
movb
imul
in
ret
dec
push
push
movl
roll
cld
imull
shrb
pop
or
pushl
cli
ljmp
jb
gs
xor
cs
insb
movl
addr16
popa
je
sub
insl
gs
and
loopne
jecxz
pop
jle
jecxz
daa
pop
sarl
sti
movb
int3
push
mov
nop
data16
add
add
xor
repnz
cmp
xchg
push
test
sbb
push
cmp
dec
cwtl
jns
push
sub
out
xchg
into
pusha
addl
fldcw
iret
adc
add
or
mov
repnz
mov
cmp
mov
xchg
sti
xor
jecxz
push
lods
repz
ret
std
xlat
sbb
mov
xor
rep
or
push
rcll
stos
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
push
sti
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
in
ficoml
jg
cmp
ret
push
mov
pop
mov
pop
jo
push
cld
jne
je
or
pusha
ljmp
lcall
add
push
or
loop
sub
test
push
or
outsl
pusha
pop
mov
pop
fldt
push
inc
rcrl
ret
cmp
data16
call
push
push
mov
adc
xchg
sbb
mov
pop
pop
inc
ret
ret
sbb
rorl
fnstenv
js
add
ret
add
pop
sub
pop
pop
test
add
lock
adc
sub
lret
cwtl
add
insb
outsb
sbbb
pop
or
push
fidivs
or
jb
lcall
loope
cltd
ja
stos
and
xchg
pop
outsb
pop
sub
inc
mov
lea
dec
fldl
cmp
xchg
cs
loopne
xor
dec
inc
cmp
ja
jg
sub
inc
jmp
inc
pop
xor
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
pusha
add
mov
and
rolb
fscale
aaa
cmp
jae
cmp
jb
or
dec
movb
loopne
adc
loopne
dec
rcrl
add
cmp
lea
lret
push
ret
mov
andb
dec
pop
js
bound
adc
mov
out
cld
loopne
lahf
hlt
mov
mov
xor
roll
mov
xlat
dec
loope
and
je
cmp
ja
outsl
mov
and
cmp
jne
fidivrl
shl
or
mov
push
lea
jg
inc
dec
cld
mov
out
adc
lahf
add
nop
or
xorb
out
adc
or
movl
pusha
jmp
inc
mov
ret
aaa
inc
or
stos
sbb
adc
pop
idiv
xorb
sbb
or
jb
inc
dec
test
adc
pop
sbb
packsswb
nop
mov
cld
lods
mov
int3
je
add
dec
add
xor
pop
mov
ret
cwtl
fisttpll
cmp
mov
lods
test
test
sbb
dec
ja
or
aam
push
xchg
imul
imul
inc
jb
xchg
pop
imul
jo
pop
cmp
mov
mov
push
lcall
xchg
pop
inc
pusha
add
jae
push
xorl
mov
pop
je
test
enter
inc
push
inc
mov
imul
and
inc
push
mov
lock
sbb
popa
popa
outsl
rorb
rorb
xchg
arpl
pop
mov
jbe
add
sbbl
ret
cmpl
cwtl
mov
rorb
roll
int3
or
push
clc
add
pop
sub
jmp
sarb
pop
dec
xor
orl
push
sub
rorb
adc
mov
push
sub
inc
jo
mov
out
or
xchg
xchg
mov
into
mov
mov
xor
sbb
test
or
rclb
cmp
pop
clc
sbb
fnsave
cmpl
push
adc
loop
add
pop
testb
push
push
cs
aaa
push
rorb
or
cmp
lcall
insb
add
jns
push
dec
push
mull
loop
mov
ret
mov
loop
mov
push
xchg
mov
adc
mov
mov
insb
idivb
movsb
or
mov
cmp
aaa
cld
pop
daa
push
push
or
or
or
add
movsb
xchg
or
mov
xchg
sub
dec
rcrb
out
jle
shr
push
insb
xchg
sub
ja
enter
sti
outsb
add
push
or
insl
ja
add
dec
push
dec
inc
aaa
mov
std
ja
testl
mov
fs
gs
aas
jnp
sub
adc
jb
jns
es
imul
bound
inc
push
outsl
arpl
out
mov
jne
je
dec
outsl
je
imul
jge
std
mov
ds
outsl
inc
arpl
or
insl
int
ret
or
jb
xor
xor
jg
loopne
outsl
insl
bound
outsl
js
pop
push
imul
outsl
ja
nop
outsb
cmp
andps
outsb
dec
inc
xor
mov
mov
push
sti
add
dec
cld
sub
jb
lock
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
sub
hlt
cmp
cmp
lock
call
cmp
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
insb
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
fs
push
dec
pushf
pushf
pushf
pushf
inc
inc
push
dec
pushf
pushf
pushf
pushf
pop
pop
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sub
dec
dec
dec
dec
hlt
lock
call
in
fmull
dec
aam
int3
mov
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
xchg
fildl
enter
or
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
leave
leave
test
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sub
hlt
lock
in
in
call
in
aam
in
in
int3
enter
add
test
addl
xchg
mov
adc
lock
and
or
adc
sahf
out
sbb
and
aam
loopne
and
imul
cltd
and
cmp
jl
cmp
xlat
add
shrb
jp
and
ret
in
inc
cmp
push
mov
push
mov
push
sbb
pusha
or
jne
push
gs
and
sti
in
sub
cmpl
pop
lods
str
or
lea
popa
gs
sar
aaa
add
and
push
dec
inc
inc
dec
add
outsl
scas
std
in
mov
pop
push
dec
dec
dec
push
inc
push
dec
sti
fdivrp
mov
push
push
dec
push
push
pop
sub
push
inc
dec
pushf
dec
popa
mov
inc
push
das
pop
cmpsl
jp
xor
out
call
or
inc
scas
mov
cmpsb
psrld
jo
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jae
jb
stos
stos
lods
lods
imul
push
push
inc
outsl
out
jo
add
adc
add
adc
je
insb
jae
fmull
or
fbld
sbb
nop
in
push
push
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
loopne
mov
in
scas
data16
fnstsw
push
mov
movl
js
gs
mov
mov
mov
aas
xchg
push
inc
inc
bound
je
adc
das
js
mov
fdivs
dec
inc
jnp
or
insb
mov
push
leave
leave
insb
les
mov
push
outsl
testl
or
outsb
mov
inc
jb
mov
subb
movsb
jb
shr
es
xchg
sub
js
jg
mov
fdivrs
add
push
sbb
cs
sub
xor
mov
aas
xchg
or
imul
mov
jb
scas
mov
mov
popa
outsb
gs
loopne
data16
or
dec
outsb
jbe
jb
insb
outsl
ja
dec
xor
cmp
cmp
inc
and
dec
in
inc
sti
gs
xchg
scas
xchg
lock
jbe
imul
outsb
scas
in
fstl
push
xchg
insl
jle
gs
andl
jb
scas
inc
addl
adc
pushf
scas
mov
pusha
mov
fs
inc
sbbb
scas
ds
lock
mov
orl
add
daa
push
test
fcoms
or
inc
and
in
inc
push
push
pop
xlat
push
or
scas
sbbl
add
inc
fdivs
push
adc
sbb
popa
sbb
test
inc
dec
dec
push
push
or
lock
push
nop
shrb
push
inc
or
arpl
nop
sbb
xchg
sub
je
mov
or
je
ds
or
imul
shlb
pop
mov
pop
pop
js
fsubl
xchg
xor
cwtl
and
or
cli
dec
out
mov
or
mov
sub
jo
push
mov
bound
adc
stos
push
inc
mov
add
push
addr16
mov
es
stos
mov
data16
pop
jle
add
xor
das
rorb
jo
xor
jns
dec
mov
sbb
lahf
and
cltd
mov
divl
rcll
push
push
gs
outsb
addr16
inc
daa
daa
mov
or
adc
daa
daa
daa
sbb
push
mov
out
and
push
test
mov
rorb
outsl
dec
psllw
nop
int3
mov
fstpl
imul
test
inc
out
gs
cld
fldt
push
adc
jb
popa
fs
mov
jne
int3
add
loop
or
adc
movsb
das
push
sbb
ds
aam
repz
js
mov
adc
jns
jmp
mov
jnp
sbb
fisttpl
push
loopne
sbb
ja
mov
aas
xor
andl
adc
xor
roll
push
dec
push
imul
loope
jne
inc
push
mov
add
add
lods
outsb
arpl
ljmp
pop
fimull
shr
div
mov
mov
add
dec
jb
scas
xchg
mov
mov
aad
mov
xorb
ret
xor
push
aas
jo
lock
cmpsl
mov
add
ja
mov
or
xor
or
addr16
pop
popf
xchg
inc
pop
or
js
sbb
mov
mov
adc
and
les
loopne
push
jl
add
and
adc
sarb
mov
sbb
mov
or
sub
adc
jle
sub
les
rorl
cmp
sub
sub
das
stos
insl
sub
jmp
or
mov
jae
data16
jo
adc
pop
add
and
push
leave
add
adc
orl
dec
dec
loopne
out
add
or
inc
ljmp
dec
lret
add
invd
or
push
add
lods
movsl
aaa
pushf
adc
rcrb
cmp
fcompl
stos
cmp
inc
cld
out
add
lcall
ret
or
inc
sahf
cmp
cmp
sub
pop
add
pop
adc
and
or
sub
mov
stc
add
or
sub
cmpsb
jmp
and
add
jg
or
test
ss
pop
cmp
jne
pop
inc
xchg
xor
ds
sarb
xorb
inc
neg
ret
pusha
add
push
inc
fdivr
push
push
mov
mov
ffree
jmp
mov
je
mov
xor
fstpt
adc
fdivs
push
sub
add
cmp
jg
into
fiaddl
outsb
cmp
or
sbb
xchg
jmp
sub
jne
pop
cmp
je
hlt
or
stmxcsr
pop
pop
pop
jl
mov
pop
pop
dec
add
pop
movsl
aaa
cmp
or
cmp
jne
rolb
mov
add
pop
subb
jno
pop
or
xor
fisubrl
xchg
add
shlb
outsl
sbb
push
enter
inc
inc
xor
fbld
out
sub
push
test
ss
in
popa
add
mov
cltd
leave
std
bnd
fsincos
add
cwtl
insl
mov
mov
xor
repz
jl
in
xchg
fdivp
jmp
jbe
adc
or
fcoml
dec
add
mov
sub
clc
jb
sub
lcall
push
and
movsl
jb
push
push
mov
divb
jne
xor
adc
xchg
xchg
imul
int3
and
clc
leave
add
add
or
jb
cwtl
push
adc
jne
jle
pop
mov
pop
imul
sbb
inc
jne
push
inc
das
mov
in
or
mov
mov
rcr
sbb
mov
dec
decl
jne
mov
dec
jb
jnp
xorl
dec
icebp
cs
call
fucomp
aas
daa
mov
sub
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
addb
sarl
or
or
ss
mov
add
xor
out
test
mov
dec
jp
and
inc
mov
add
dec
call
push
sub
or
mov
inc
inc
mov
pop
sti
dec
jne
jmp
test
rolb
shll
push
fcmovu
jmp
inc
pop
mov
jns
mov
incl
mov
inc
dec
mov
ret
push
sbb
xor
dec
jle
cli
decl
add
pop
mov
adc
pop
pop
sub
sub
jbe
sti
jg
incl
shll
add
push
mov
sub
xor
push
outsb
push
rol
cmp
push
xor
test
xor
dec
cmp
pushl
dec
loopne
sbb
rcrl
pop
ja
or
mov
ljmp
mov
add
sbb
add
xor
adc
movb
mov
sti
ret
sbb
andl
insb
and
fistps
shlb
fadd
faddp
add
mov
sti
push
add
rorl
fdivr
mov
push
mov
xor
add
push
sub
rcrl
loope
pop
daa
add
outsb
ffree
frstor
ffree
ffree
pop
aad
add
push
sub
push
frstor
push
dec
repnz
ss
subb
push
or
add
aam
inc
push
push
scas
aaa
aad
mov
and
hlt
or
cmp
push
loop
mov
adc
or
scas
insl
aad
clc
mov
sarl
pusha
or
push
das
push
and
insl
imul
push
pop
xchg
xor
cmpsl
mov
jg
mov
sete
pop
outsl
xchg
lea
js
pop
inc
add
mov
out
fs
je
cmpsb
sbb
dec
cmp
push
inc
cld
iret
mov
cmp
rcll
mov
stos
sub
pusha
sub
mov
adc
fists
orb
sti
idivl
les
test
jl
cmpb
add
test
fstl
and
pushf
push
xchg
pushl
pop
popa
call
mov
cwtl
adc
out
rclb
sbb
lock
mov
call
out
aas
mov
add
push
cmp
xor
addb
pop
and
subl
jp
dec
hlt
jne
ret
lock
xchg
decl
loopne
mov
andl
insl
lock
data16
lock
setne
jmp
cmp
dec
pop
mov
sbbb
ss
cwtl
or
add
mov
clc
mov
pop
add
ds
fsubs
in
xchg
stos
and
ret
adc
out
pop
jmp
and
dec
mov
push
mov
or
or
pop
sub
decl
add
mov
and
pop
cmp
inc
ja
xor
scas
ret
push
adc
adc
and
in
fnstsw
push
push
mov
mov
jl
pop
rclb
xor
lods
fstpt
push
pusha
mov
repnz
pop
enter
iret
pop
insb
cwtl
mov
xchg
out
lret
clc
test
pop
shll
cld
repz
inc
pop
lret
notl
add
fcmovne
lea
cmpl
adc
imul
mov
emms
push
push
jge
mov
push
loope
mov
jg
mov
or
jbe
or
movl
gs
call
add
out
inc
je
sub
mov
js
movb
pop
mov
loopne
not
mov
pop
add
and
jne
aas
cmp
loope
in
adc
and
hlt
cwtl
xchg
shrl
jmp
pop
lods
xchg
imul
pushf
mov
or
lahf
or
or
dec
jp
xor
sbb
adc
jnp
or
cld
repz
mov
add
cld
mov
mov
out
lea
pop
ret
cmp
xor
push
add
daa
jnp
push
inc
aas
jne
cltd
mov
aaa
mov
and
stos
test
inc
or
mov
and
ret
clc
dec
call
mov
test
mov
mov
dec
jmp
addr16
mov
jp
and
mov
jp
cwtl
rorl
inc
jne
cmp
lock
test
out
in
fistl
iret
loope
inc
pushf
cltd
lock
inc
xor
sbb
mov
jmp
nop
aas
mov
sbb
mov
mov
add
push
push
fsubr
pusha
andb
sub
add
sti
xchg
push
andl
pop
sub
mov
mov
enter
inc
sbb
pop
sub
lock
sarl
sahf
xor
inc
sbb
push
inc
xor
push
lret
popa
add
adc
mov
fdivrs
xor
push
jp
or
testb
fwait
inc
stos
mov
push
or
add
out
and
adc
push
dec
mov
std
mov
pop
pop
mov
ss
not
and
pop
sbb
movl
mov
lcall
lea
mov
jmp
push
movsb
xchg
pusha
mov
mov
add
int3
call
pop
mov
and
repnz
incl
arpl
push
ja
inc
outsl
clc
sti
cwtl
mov
sub
mov
pushl
mov
pop
add
fcomps
cmpsl
jne
push
rolb
dec
pop
jg
mov
out
pop
les
sbb
not
mov
inc
dec
sti
and
add
mov
or
jns
mov
pop
mov
pushf
clc
adc
add
xor
cs
cmp
sarl
pusha
out
lock
aad
or
jg
fwait
test
pop
push
mov
jle
je
loopne
pop
pop
jne
inc
cmp
sbbb
loope
fdivrs
insl
sub
nop
paddsb
push
adc
xchg
pop
xor
outsl
jle
jb
in
aam
jne
jo
ret
xchg
lret
outsl
decl
jp
xchg
inc
out
out
int
adc
add
imul
xchg
loopne
aad
add
push
jge
mulb
fs
push
hlt
clc
cld
push
aad
lock
fdivrp
imull
mov
dec
scas
stos
call
sbb
loope
dec
or
scas
enter
lock
ret
fdivrs
pusha
jo
pop
pop
sarb
rolb
ret
inc
je
mov
neg
das
add
cwtl
hlt
cs
incl
test
jne
test
je
test
jne
mov
decb
dec
xchg
lods
mov
dec
dec
cmc
pop
pushl
cmpsb
lea
mov
xor
les
pop
push
inc
mov
sub
test
cmp
mov
iret
cmp
adc
jo
jo
mov
fnstenv
lret
call
adc
pop
enter
mov
mov
incb
lret
mov
mov
ljmp
movsb
cmp
pop
pop
rclb
hlt
ficomps
mov
arpl
jg
mov
nop
cmpsl
iret
cmp
push
fisubs
data16
rorb
jne
cli
jb
jns
test
add
cmp
jne
sbb
mov
jne
push
add
jne
outsb
fldln2
test
cmp
jns
jns
sbb
or
cmp
add
lret
nop
mov
xor
or
mov
and
inc
call
mov
cmp
or
sbb
sub
sub
je
xor
mov
push
ja
cmpb
jne
es
je
pop
xchg
xchg
mov
sti
outsl
mov
cs
mov
pop
sub
jbe
sbb
pop
fwait
loopne
sub
enter
pop
mov
mov
loop
jne
call
inc
inc
in
add
and
push
test
add
aas
lds
xchg
and
fisttpll
das
or
inc
pop
add
int3
imul
push
pusha
fsts
or
jbe
pop
xor
orb
dec
insl
js
ret
pop
adc
mov
add
cmp
outsl
ss
mov
and
popa
rcrb
lcall
push
mov
inc
cmpl
sbb
shrb
dec
fs
pop
inc
adc
add
cmovl
lret
aad
adc
or
pop
cmp
pop
mov
mov
rclb
es
ds
push
or
jge
adc
xorl
ret
cld
lods
cmp
je
stos
in
mov
sub
xchg
test
bnd
push
outsl
mov
mov
xor
sub
lods
rorb
int
xchg
es
bound
hlt
and
lods
jmp
iret
cmp
xor
sub
mov
fisubs
sub
mov
lret
xchg
outsb
pop
scas
call
jae
fildl
add
or
lret
roll
mov
and
stos
sbb
pop
sti
xchg
mov
sbb
mov
adc
cmp
data16
cmp
ja
add
imul
fistpl
fs
and
in
dec
jle
rolb
sbb
cmp
sbb
dec
cmpb
ret
je
int3
add
pop
xchg
ret
and
mov
xlat
cmp
cld
dec
rcll
pop
jne
lea
mov
ret
pop
les
jmp
mov
in
cmp
xchg
or
das
pop
ja
mov
ss
push
xchg
xor
mov
adc
dec
dec
fsubrs
rcr
jecxz
lea
push
sub
ret
inc
pusha
and
xchg
mov
xchg
xor
sbb
or
popf
imulb
jmp
push
pop
outsb
adc
sub
out
fdiv
xchg
data16
xchg
flds
jl
mov
push
ret
sbb
add
jg
loope
mov
aad
or
jmp
xor
inc
inc
shrl
cld
lods
and
jmp
mov
jl
testl
xlat
mov
inc
jp
call
pop
js
mov
addb
lret
add
jp
adc
dec
fdivl
or
jmp
jecxz
stos
mov
stc
fcomps
push
leave
loopne
dec
cmp
lods
cmp
ljmp
add
mov
push
inc
je
mov
or
je
mov
cmpsl
mov
adc
dec
jl
popf
lock
divl
pop
cmp
jbe
mov
shlb
xchg
adc
cmpb
sub
dec
cvtpi2ps
adc
push
loopne
mov
inc
iret
dec
lcall
clc
xchg
ret
xor
and
add
push
dec
sub
out
adc
daa
xchg
pop
cwtl
daa
xchg
sahf
add
sahf
xchg
out
pushf
add
in
testb
sub
adc
mov
cmpsb
mov
cmpsl
mov
andl
pop
sbb
lahf
fcomi
xor
sahf
ljmp
in
out
cwtl
pop
lods
jmp
sbb
add
enter
jmp
ljmp
xchg
push
mov
pextrw
je
in
push
add
divl
enter
and
pop
adc
mov
loopne
mov
test
sahf
das
cltd
test
push
jbe
fists
pop
mov
sub
sub
mov
jg
iret
push
or
xchg
shll
xor
das
cltd
xchg
sarb
pop
or
cmpsb
int
mov
cmp
ret
test
sub
cmp
and
sbb
dec
cld
lea
mov
jmp
push
mov
push
dec
dec
cmp
enter
jg
jmp
add
orl
rclb
mov
pop
movsl
mov
jle
push
hlt
insl
enter
loope
mov
mov
add
xor
dec
dec
adc
cmp
push
inc
or
xchg
mov
mov
stos
out
add
or
jne
xor
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
into
mov
and
inc
inc
int3
aam
adc
enter
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
aam
pop
loope
mov
cld
mov
sti
mov
mov
cs
mov
repnz
dec
popf
add
test
jne
lcall
fcoms
lock
stos
imul
add
loope
shrb
sahf
mov
add
and
push
sub
jge
jae
mov
mov
fsubrl
test
xchg
scas
subb
or
sti
add
pusha
decl
add
or
mov
add
sbb
enter
sbb
call
xor
movsl
cld
add
popf
mov
xor
lods
push
and
lahf
xchg
mov
dec
dec
inc
dec
inc
dec
lods
or
and
jp
xor
jge
cs
ret
divb
jo
ret
std
mov
aam
cmp
push
jg
sbb
sbb
dec
stos
add
outsb
mov
xor
stos
jmp
mov
jp
mov
loop
movlps
pop
pop
pop
popa
subb
dec
mov
jnp
ja
mov
fimuls
sbb
dec
ret
sub
sub
jbe
pop
jl
mov
mov
mov
movsb
insl
sbb
mov
cli
adc
mov
or
es
or
or
enter
repz
inc
test
dec
je
dec
jne
sbb
in
stos
xor
mov
call
add
je
inc
jne
fldcw
mov
ret
xchg
repnz
repz
jecxz
or
repnz
loop
adc
mov
add
lea
and
ja
add
push
push
push
cmp
divl
sbb
inc
jmp
or
xchg
mov
pop
inc
loop
ret
push
call
sbb
sub
sub
and
jbe
fcomi
adc
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
mov
jns
sub
sub
sub
fucomip
popl
call
adc
movsl
jne
inc
stos
test
xor
mov
and
pop
push
cltd
inc
adc
add
jns
sahf
mov
or
adc
mov
mov
sub
orl
adc
mov
mov
adc
int
in
scas
or
mov
and
mov
add
and
bnd
mov
loopne
sbb
loopne
mov
add
lret
mov
or
mov
shlb
ret
ljmp
jne
testw
jl
mov
cmpl
sbb
movb
mov
aas
inc
sub
adc
clc
adc
clc
out
fabs
push
ja
mov
pop
frndint
rcr
scas
fs
add
neg
jge
fwait
mov
testb
je
fidivl
clc
sbb
lea
mov
inc
sub
nop
shr
and
scas
jo
dec
out
push
cmp
xor
stos
insl
popa
pop
pusha
mov
lret
enter
or
out
outsl
or
cmpb
jb
movb
js
decb
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
adc
shr
mov
push
add
inc
int3
out
inc
out
sbb
add
daa
std
iret
push
push
rorl
je
add
add
neg
or
or
or
fisttps
das
sbb
adc
jl
mov
cmpsl
adcl
mov
or
sbb
popf
jb
pop
decb
or
mov
shl
cmp
mov
shll
sbb
mov
push
sub
cwtl
call
and
jne
dec
sub
cmp
ja
jae
and
inc
ljmp
sub
add
enter
cmpb
divl
sub
sub
pop
jmp
mov
sbb
mov
aaa
ret
jp
jae
dec
inc
ret
scas
mov
lock
sarl
loop
je
fldz
cmpsb
mov
ljmp
lods
xor
jne
inc
mov
daa
xorb
aaa
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
cwtl
jne
mov
and
fdivrl
mov
adc
aas
jmp
fistpl
cmp
pop
and
inc
js
hlt
test
insl
and
push
int
cmp
mov
test
or
fimull
cmpsb
adc
add
jmp
aaa
mov
aas
adc
es
push
inc
mov
rorb
push
cmp
aaa
add
or
outsl
rcl
insb
add
push
int3
push
cwtl
je
and
rolb
dec
pop
add
push
rolb
pop
add
and
and
or
leave
rclb
pop
sbb
aam
lock
test
fldt
fstpl
fwait
out
bound
ficoml
out
fistps
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
out
dec
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
enter
call
fistl
jle
mov
mov
or
sbb
mul
pop
adc
push
testb
jo
andl
test
sbb
mov
fisubrl
cmp
inc
fcom
dec
jg
dec
ret
add
adc
add
jp
fimull
mov
mov
mov
push
cmp
fdivl
and
call
imul
and
add
adc
and
sbbl
add
jp
adc
pop
fwait
jge
subl
adc
inc
dec
mov
sbb
pop
push
aam
dec
enter
addb
fwait
orl
push
jb
or
jb
add
insb
je
mov
push
pop
dec
fnsave
adc
mov
add
inc
dec
jne
sub
dec
mov
aas
cltd
stos
loopne
clc
idiv
imul
jns
push
in
mov
cli
add
repnz
ds
ds
add
test
mov
out
sti
jne
inc
inc
pusha
test
std
std
mov
lds
xchg
rcll
movsl
cmc
inc
pop
cmp
dec
add
sbb
inc
loope
sub
dec
in
test
jg
mov
sarb
ljmp
inc
pop
or
lods
inc
test
pop
pusha
mov
pop
inc
xchg
ret
in
mov
mov
add
jl
addl
mov
and
jl
repz
mov
cltd
mov
decw
jnp
insl
xor
sub
imul
fcoms
or
insl
movzww
add
inc
push
xchg
sbb
dec
pop
lock
push
shlb
adc
lret
add
dec
cmp
dec
lods
pop
mov
or
jp
sbb
fistps
sbb
clc
roll
pop
hlt
imul
push
add
loopne
scas
jbe
sbb
loope
mov
mov
cmp
cs
addr16
xchg
inc
xlat
nop
in
rcll
adc
sub
push
or
out
int3
and
sub
cli
sbb
push
push
cmp
js
inc
add
sbb
lret
jne
push
loop
push
xchg
and
add
mov
sub
cltd
js
rcrl
sub
fisubrl
pop
push
xchg
adc
fcomi
or
adc
add
and
js
pop
cs
pop
push
dec
test
push
in
push
loopne
push
jb
inc
adc
mov
add
in
add
adc
subb
mov
mov
adc
popf
xor
cmpsb
jle
or
and
inc
dec
cmp
je
mov
add
das
inc
inc
hlt
pop
sti
repnz
add
pushl
add
push
lea
idivl
out
or
xchg
repnz
movb
jo
inc
lcall
push
in
mov
ljmp
jecxz
pop
in
jns
fmull
mov
inc
jo
pop
int
repnz
adc
loope
out
repnz
mov
push
lret
push
sbb
or
jmp
and
mov
mov
lea
adc
popf
push
fldt
mov
mov
or
push
mov
xchg
mov
sbb
pop
add
fs
pop
andl
lods
add
sbb
clc
aam
jbe
add
sbb
lods
ljmp
dec
adc
push
cmp
data16
aam
ret
mov
insb
xor
ljmp
sub
sub
and
addr16
imul
push
enter
add
mov
mov
jmp
adc
js
or
inc
cmpb
jne
lahf
nop
mov
add
sub
les
or
vmwrite
pop
add
mulb
aam
mov
add
adc
and
sbb
cltd
cmp
lods
mov
stos
xchg
mov
pop
incl
in
add
shl
loope
mov
mov
push
jne
mov
pop
or
repnz
add
xchg
jae
pop
xchg
shlb
adc
test
int3
popf
sub
push
add
sub
jae
pop
mov
out
mov
jge
dec
add
stos
and
loop
outsl
loop
mov
fmulp
cmp
xchg
fadds
out
dec
jmp
adc
mov
or
divb
or
or
rorb
or
or
add
add
add
or
pop
dec
loope
outsl
or
jl
out
mov
dec
rcr
sahf
cmpsl
jge
jecxz
ret
sbb
and
lock
call
stos
sbb
mov
nop
or
jo
inc
mov
or
mov
pop
bound
das
popf
dec
push
cmp
push
out
adc
lods
adc
scas
nop
aam
dec
rolb
jo
pop
adc
jmp
sbb
cmpsb
idivl
add
sub
xchg
sub
jae
xor
mov
fmull
dec
add
jmp
out
orb
aad
push
cmp
lock
mov
jb
xchg
dec
movsb
mov
adc
lods
sub
mov
pop
loopne,pn
lods
test
js
mov
push
lahf
push
inc
je
notl
in
subb
jl
add
adc
and
add
je
sbb
pusha
sub
je
pop
je
jmp
addr16
fwait
push
jne
mov
shld
xchg
sub
mov
int3
add
sbb
add
adc
mov
lahf
mov
inc
jnp
shlb
push
inc
ljmp
adc
or
and
cltd
jbe
or
jmp
sbb
insl
sbb
jo
and
or
sbb
mov
mov
jecxz
add
leave
sub
add
inc
jno
cltd
in
orb
jo
jmp
daa
sub
jbe
lret
cmp
sbb
lds
add
addl
rorl
push
ja
add
push
xchg
in
xchg
ja
stc
push
roll
jmp
and
sub
aam
push
shll
mov
and
or
sti
out
pop
dec
stos
lret
inc
iret
and
pusha
lds
iret
adc
or
mov
sub
loopne
popf
testl
cmp
pop
dec
xor
inc
sbb
cs
stc
jbe
sbb
jmp
xchg
or
cmp
ss
orb
jg
daa
pop
sub
popa
mov
test
shrl
clc
sbb
loop
inc
mov
test
aam
add
dec
das
push
dec
bound
adc
push
add
mov
xchg
lahf
clc
xchg
mov
lret
mov
sub
sbb
push
mov
adc
cmp
lea
les
scas
and
nop
add
incb
jp
dec
cmp
jg
je
mov
push
add
xor
mov
ds
cmp
cmp
or
in
mov
ss
lret
push
pop
xor
das
push
ljmp
adc
pop
pop
and
lock
or
sbb
xchg
adc
ret
add
mov
divl
daa
adc
mov
jns
and
xchg
mov
xor
xor
daa
jno
outsl
push
repz
xor
into
cmp
and
cmpsb
sarb
and
ret
push
in
jbe
das
mov
in
add
repnz
sbb
pop
inc
or
mov
sahf
mov
jecxz
or
scas
mov
sub
pop
jl
rolb
cmp
jne
sub
das
imul
sub
and
sub
je
dec
mov
test
sub
je
jmp
mov
jmp
push
push
push
out
mov
jmp
inc
out
clc
jle
out
xor
jg
shrl
add
jns
mov
popa
roll
mov
divb
jnp
jl
pop
mov
cwtl
sub
pop
mov
pop
mov
test
inc
fdivrl
add
lahf
sub
ss
popf
aad
push
jmp
push
fdivs
nop
xor
mov
xor
cmp
jg
sbb
dec
xchg
jmp
ret
inc
jl
mov
shlb
mov
lods
dec
cld
add
testl
popa
dec
cld
gs
xchg
or
sbb
pop
loopne
outsb
xor
jns
mov
lret
test
popa
call
mov
int3
xor
cwtl
push
repz
mov
dec
pusha
xor
and
jne
das
or
mov
mov
xor
ss
adc
sub
dec
pushf
jbe
adc
mov
mov
fidivrl
sbb
jg
mov
shrb
mov
test
cmp
push
rorl
mov
imul
mov
or
add
in
fldenv
mov
pusha
repnz
jb
and
xchg
jge
es
in
std
mov
push
out
call
cmp
xchg
out
lock
out
push
sub
in
cmpl
push
cld
aaa
sbb
jo
jge
add
fld
inc
movsl
mov
add
push
shl
jb
push
pop
data16
out
out
in
out
into
ds
add
cmpb
jle
and
fs
jne
inc
lock
mov
add
or
cwtl
ss
jns
cmp
cmp
mov
jb
inc
cwtl
inc
dec
repnz
xchg
add
cwtl
pop
loop
stc
ljmp
lcall
ljmp
pop
fsubl
xchg
icebp
movsb
ds
adc
fsubrl
adc
push
fsubs
lea
push
jne
mov
push
sub
out
daa
cmp
mov
xchg
xor
fdivrs
shl
add
out
push
ss
xlat
fs
pop
xlat
nop
push
pop
repnz
mov
decb
popa
in
mov
or
and
imul
test
inc
and
sub
inc
mov
in
loope
cli
test
jp
sub
mov
cli
and
dec
add
push
or
and
dec
mov
insl
int
je
test
sbb
cmpb
sbb
leave
add
add
sbb
orl
mov
xor
add
cmp
push
mov
jne
sub
or
jne,pt
sbb
cmp
sbb
outsl
popf
add
push
xor
xchg
cmp
dec
adc
or
movsl
sarb
into
mov
in
xlat
xchg
pop
push
rolb
test
mov
fisubl
cmp
pushf
pusha
adc
mov
testb
div
mov
jns
pop
mov
push
adc
sbb
aas
outsl
mov
adc
sbb
es
or
add
or
mov
add
sbb
fs
sbb
pop
fmul
fstpl
fwait
jmp
xor
mov
sbb
cmp
add
push
dec
pop
imul
push
push
push
push
push
sbb
adc
add
sub
jecxz
in
and
or
xchg
test
and
fwait
inc
aaa
cmpsl
cmp
pop
mov
mov
adc
lods
mov
or
sbb
into
cmp
les
test
clc
push
push
adc
adcb
add
ss
sbb
add
leave
lods
mov
iret
or
pop
adc
js
nop
ja
rorl
push
rorb
arpl
sbb
push
shr
sarl
or
or
and
dec
lea
dec
push
mov
test
pop
mov
in
push
imul
xchg
or
or
push
rorw
ss
cld
xchg
push
in
xchg
test
xchg
fwait
fs
dec
call
sbb
nop
or
or
and
mov
lds
xchg
inc
test
testb
pop
mov
push
jl
je
xchg
cmp
push
sbbb
rclb
mov
jbe
push
cmc
mov
and
sarl
in
incl
fnclex
inc
pop
outsb
mov
test
or
jmp
and
fstpt
out
in
xlat
add
cmpsl
mov
insb
sub
icebp
ficompl
fdiv
add
std
cmpl
add
fldt
dec
cmp
ljmp
mov
inc
clc
aaa
lret
hlt
push
push
enter
es
ficomps
sbb
xor
and
mov
jae
rcl
mov
sahf
daa
add
or
ds
xchg
clc
test
orb
addr16
pop
or
repz
mov
jmp
mov
ljmp
je
cwtl
ss
sbb
je
mov
push
add
lea
stos
in
sarl
ret
mov
dec
test
xchg
cs
enter
and
mov
stos
add
jge
mov
pop
inc
outsb
mov
jnp
adc
call
mov
and
cld
lahf
stos
std
inc
add
jmp
mov
adc
insl
sahf
loopne
jmp
icebp
pop
je
jne
add
in
sbb
or
popf
and
xchg
in
jle
or
shr
or
addr16
mov
into
fldl
add
sub
push
or
xorl
mov
test
sub
push
test
cmpsb
mov
outsl
and
loopne
pop
jne
xchg
push
cmpsb
xor
out
icebp
cmpl
and
add
xor
mov
sbb
jmp
sub
out
dec
mov
mov
mov
inc
push
repz
mov
jmp
mov
push
lcall
addb
test
add
clc
sarb
mov
jae
cld
loopne
mov
loopne
inc
add
dec
adc
dec
fbld
dec
jmp
int
sti
push
test
mov
cld
jae
pop
iret
test
std
mov
push
mov
sarb
mov
mov
stc
jp
push
lods
push
lea
push
push
imul
pcmpgtd
cmpsl
loop
add
push
or
pop
dec
sub
lock
mov
int3
pop
mov
add
test
leave
mov
pop
neg
es
dec
mov
and
call
cwtl
loope
inc
xor
and
fdivl
adc
mov
sub
les
inc
sub
mov
rol
rcr
add
inc
insb
pop
in
test
cltd
xchg
dec
or
sub
pop
repnz
push
adc
test
pop
sbb
or
push
into
inc
les
xlat
popa
les
leave
sti
adc
push
and
ret
ja
or
test
and
insb
test
leave
mov
out
pop
clc
ret
and
out
mov
ret
and
sbb
or
lock
push
or
mov
dec
xor
and
ret
pop
add
cmp
jg
cmp
in
sub
sbb
jns
sbb
inc
js
sbb
push
clc
orl
inc
jo
jo
pop
jl
mov
or
std
jo
add
sar
lret
mov
sbb
adc
ljmp
cld
mov
insl
jmp
push
sbb
jnp
sbb
cmp
adc
fildl
addl
adc
mov
jmp
mov
or
adc
sub
cld
mov
dec
sti
pop
dec
in
inc
call
or
jge
clc
ud1
push
loopne
lock
loopne
mov
xchg
or
push
inc
or
ret
mov
xchg
jecxz
test
insl
add
push
pop
bound
leave
jo
imulb
loope
daa
adc
pop
xchg
loope
add
jb
mov
cmp
je
jmp
mov
je
jmp
xor
pop
push
jmp
and
ret
mov
shll
pop
or
push
shll
push
enter
ss
leave
lock
mov
test
rcrb
lods
es
add
mov
inc
fcompl
cld
cmpsl
cld
pop
cld
cmpl
movaps
cmp
sub
inc
lock
sbb
outsb
inc
or
pop
sbb
push
mov
or
shll
aam
and
xchg
fs
xor
or
lea
add
add
jnp
jae
xchg
dec
jnp
or
enter
loope
fbstp
out
cmp
dec
nop
xchg
jnp
nop
pop
outsb
mov
xchg
jge
pop
ds
mov
mov
mov
and
nop
pop
inc
sahf
ret
jns
fcoml
push
test
icebp
and
es
push
lock
mov
gs
cld
std
rolb
ss
ljmp
jae
imul
loopne
fdivrs
and
mov
xor
rolb
pop
ret
hlt
femms
jns
add
mov
sub
cs
mov
jg
sub
cmp
push
jbe
pop
sbb
jae
jo
push
xchg
mull
insl
xchg
ss
cwtl
pop
cmpsb
call
hlt
mov
mov
mov
or
test
or
or
ret
mov
inc
pushf
mov
fldl
out
std
das
je
inc
enter
rcr
and
fsubrs
sbb
mov
outsb
jae
addr16
sbb
add
add
pop
les
sbb
rorb
or
inc
aaa
mov
rcrl
adc
fsubs
enter
mov
lods
jle
sbb
loopne
scas
jo
and
in
push
jne
daa
cmp
xor
int3
sub
test
mov
inc
mov
and
ficoml
jp
mov
cld
adc
rorb
les
das
add
iret
add
mov
out
push
jp
adc
ds
hlt
adc
addb
int3
mov
jne
in
cltd
jl
pcmpeqw
cmp
and
or
les
clc
lods
clc
cmp
sub
cmp
mov
mov
enter
mov
in
ret
jbe
test
stos
imul
call
dec
movsl
popa
xor
cmpb
clc
add
mov
dec
adc
addr16
lret
int
js
sub
and
pop
push
stc
cmp
shlb
icebp
adc
bound
mov
dec
push
sub
mov
testl
jl
nop
xor
dec
clc
push
lcall
sub
and
sub
dec
or
inc
push
mov
jmp
adc
lea
mov
pusha
add
jno
iret
je
insl
in
and
shll
iret
loopne
xor
cmp
daa
fadd
icebp
mov
sub
add
es
push
sub
mov
xor
test
jg
mov
stc
xchg
adc
jbe
and
cmp
sbb
lock
jl
and
mov
cmc
shrb
roll
rclb
dec
ja
push
pop
or
add
jle
xchg
leave
and
cmp
jge
fwait
adc
jne
sbb
mov
mov
and
push
test
les
lea
adc
or
test
ret
dec
ret
dec
lods
mov
sti
dec
xchg
rcrl
nop
outsl
adc
adc
jp
mov
add
or
loopne
pop
mov
add
jle
cmc
shrb
repz
or
pop
rolb
sub
stc
mov
adc
mov
adc
push
lahf
pop
pop
push
mov
mov
std
inc
into
arpl
sub
sub
xchg
cmp
out
xor
xchg
and
push
xor
adc
lsl
dec
test
push
loopne
and
xor
push
xchg
xchg
flds
push
outsl
add
inc
pop
js
std
popf
insl
inc
cmp
mov
mov
sbb
add
stc
gs
push
pop
mov
test
push
push
add
ljmp
pusha
int3
pop
push
shll
mov
jp
bound
jmp
push
or
cmp
inc
int3
dec
xchg
lahf
pop
xchg
xchg
mov
je
cmp
and
inc
nop
pop
addr16
mov
xor
jne
andl
fidivl
push
pop
insb
sub
inc
sub
je
jae
mov
mov
ficomps
pusha
test
sbb
mov
adc
jmp
cmp
out
inc
adc
mov
cmc
fnstsw
cmp
push
movd
sub
andb
test
inc
out
je,pt
cmpb
xorl
pop
aas
test
inc
cmp
mov
js
xor
es
inc
outsb
scas
xlat
cmpsb
dec
js
push
push
dec
clc
sub
aaa
xor
sub
inc
inc
add
sbb
mov
imul
jbe
sbb
push
stos
lods
pop
je
adc
and
jbe
adc
mov
movsb
insl
and
push
addr16
xchg
icebp
mov
pop
or
call
adc
mov
mov
inc
inc
jne
jg
mov
and
adc
mov
push
sbb
xor
icebp
mov
mov
fdivs
inc
mov
jbe
jno
inc
and
jne
shl
mov
cmp
jge
pop
or
pop
jne
jecxz,pn
xchg
in
loope
mov
les
or
inc
add
add
xchg
call
mov
push
adc
retw
mov
add
push
add
ljmp
mov
mov
pop
incb
pop
cmpl
add
movlps
movb
lret
hlt
punpckhdq
data16
mov
push
jbe
lock
cwtl
pop
push
test
or
add
out
dec
jne
push
scas
ljmp
mov
iret
push
sbb
movsl
cmp
stos
dec
movb
xchg
adc
adc
push
lock
mov
xchg
pop
adc
mov
cwtl
mov
mov
int3
inc
call
or
or
repnz
jb
cld
mov
push
or
jb
in
insl
das
xchg
out
leave
mov
pop
push
cwtl
xor
fsubl
shr
mov
outsb
loopne
adc
pop
js
nop
dec
lcall
movsl
pop
scas
jge
cmp
jle
ss
add
sarb
inc
xchg
cmp
xchg
pushf
sub
mov
adc
add
add
enter
icebp
sbb
test
mov
jb
ret
les
les
ret
adc
pop
enter
sar
rcr
push
cld
push
fistpl
push
hlt
mov
mov
in
sub
or
shlb
ljmp
jo
popl
mov
das
fs
iret
scas
insl
add
fs
out
andb
add
pop
shrb
jo
push
and
pop
fwait
mov
cmp
cmpsl
cmpsl
inc
ds
push
cmp
out
in
aam
imul
in
push
aad
out
or
or
dec
and
pop
xchg
adc
scas
cmpsl
cmc
jle
outsl
lock
data16
sub
adc
push
push
dec
jmp
aas
push
xor
aam
cmp
dec
cwtl
insb
cmp
sarb
sbb
mov
shrb
roll
in
clc
push
inc
mov
in
popf
xchg
mov
mov
adc
gs
or
add
imul
aaa
in
sbb
pusha
bound
test
testb
call
pop
pop
mov
mov
dec
jmp
and
icebp
sti
test
sub
dec
jle
adc
push
push
outsb
imul
inc
jno
adc
sbb
mov
dec
test
or
decl
fs
gs
outsb
outsw
fsts
or
xchg
rolb
xor
rol
mov
cld
jmp
divb
or
add
inc
jmp
pop
pop
ret
add
pop
hlt
mov
jmp
or
inc
add
adc
add
jne
movsb
jne
in
ss
or
js
fmuls
xor
mov
jo
jl
outsl
sbb
adc
mov
aas
hlt
scas
add
test
jl
loope,pn
testb
clc
cs
xorb
and
adc
mov
dec
cmp
lea
push
inc
and
mov
mov
lret
mov
out
imul
jne
popf
sub
out
xchg
and
add
xchg
cmp
xchg
adc
mov
jmp
inc
in
adc
mov
adc
inc
neg
or
sbb
inc
dec
pop
or
loopne
and
push
add
stc
cs
cli
pushf
pop
or
hlt
cmpsl
and
add
out
sub
mov
hlt
cli
cmp
mov
fs
sbb
sub
jecxz
add
add
mov
add
pop
mov
mov
cmp
mov
sbb
dec
mov
push
cmp
add
mov
pop
call
inc
rolb
jnp
adc
mov
lret
popf
loopne
add
bnd
xor
dec
sub
jns
loopne
push
push
sub
arpl
cmc
mov
and
xor
cli
sbb
push
jo
ljmp
lock
inc
and
pop
and
call
dec
ret
xchg
ret
les
mov
cmp
mov
in
mov
push
cmp
sbb
add
imul
jne
nop
adc
cld
pop
sub
cmpb
or
in
daa
fwait
sbb
into
pusha
push
xor
call
cmova
in
push
sahf
jns
push
add
insb
xchg
add
les
sub
mov
jne
push
loopne
fnstenv
mov
mov
movl
push
mov
inc
iret
fists
in
lock
inc
imull
loop
or
or
out
rorb
mov
fildl
daa
lea
aaa
xchg
push
test
cmp
rorb
pop
mov
std
lret
jg
mov
shl
xor
pop
sub
ds
push
ficomps
cmpsl
add
dec
enter
mov
pop
adc
sbb
orb
sub
xchg
lahf
mov
popa
loope
in
shl
movsb
mov
pop
mov
into
sbb
and
mov
dec
mov
pusha
enter
imul
adc
sbb
outsb
or
mulb
pop
adc
add
test
call
jge
xor
and
das
inc
sub
add
or
xchg
ret
les
pop
shll
or
cmp
sbb
mov
call
test
sahf
xor
div
jns,pt
or
jge
sub
in
jecxz
sbb
incl
xlat
std
xchg
add
fimuls
decl
cmpl
in
add
inc
stc
stos
add
js
insb
pop
or
push
call
pop
fbld
jb
inc
incl
mov
pop
and
inc
and
inc
mov
aas
test
test
rolb
in
flds
pop
xor
push
adc
hlt
int
jg
or
outsb
fisttpl
cmp
insb
ror
in
inc
xor
ror
cmp
or
push
add
xor
loopne
dec
sarb
icebp
cmp
push
push
mov
push
xor
push
sub
leave
daa
hlt
cmp
or
mov
mov
aas
add
jecxz
push
jne
cmp
jne
movsb
cmc
call
hlt
cld
mov
dec
dec
jle
xor
xor
mov
fnstcw
and
pop
jo
mov
movsl
inc
jmp
mov
test
lcall
adc
rep
je
and
test
adc
or
cld
push
adc
loope
sbb
pop
js
mov
jns
jo
jl
shrb
push
dec
mov
ds
shl
xchg
fcoms
dec
rcrb
enter
sarb
das
mov
or
mov
cwtl
add
out
pushf
out
orb
pop
mov
push
pop
nop
push
cmpsl
jne
jnp
push
fs
mov
mov
das
jle
push
inc
mov
out
dec
xrelease
pop
ja
inc
out
cmpsl
add
call
out
das
scas
adc
or
cwtl
mov
sbb
mov
mov
int
out
adc
js
mov
jl
lahf
clc
cwtl
mov
hlt
lods
mov
iret
enter
in
push
mov
jns
in
loopne
hlt
mov
mov
fdivs
mov
out
in
jns
rclb
int3
pop
dec
push
inc
ds
enter
mov
shlb
mov
mov
aaa
gs
mov
out
test
push
xchg
addr16
cmp
stc
pushf
mov
cmp
in
nop
je
xor
out
in
mov
pusha
cwtl
cmp
pop
jle
pop
add
nop
xor
push
stc
adc
stos
pop
jl
sbbb
or
dec
add
insb
loope
js
int3
and
or
ret
out
mov
ja
int3
into
mov
pop
daa
xchg
jbe
adc
adc
sbb
enter
sub
cmp
adc
sahf
sub
mov
pop
push
pop
test
addl
adc
pushf
push
push
adc
js
js
add
notb
fsubrs
push
mov
in
push
xchg
dec
dec
enter
stc
jb
mov
cs
xor
inc
ret
adc
je
jecxz
es
pop
sub
outsb
popa
mov
mov
sbb
jmp
pop
dec
aam
pusha
dec
cmpsb
pop
or
aas
inc
pop
nop
cmp
or
xchg
inc
dec
pop
and
xchg
daa
lea
cmp
sbbl
test
jp
xor
xchg
inc
bound
notb
and
xchg
movsb
jl
cmp
popf
add
add
or
scas
in
enter
jne
inc
xchg
movsb
test
push
jb
loope
mov
fsub
pop
cld
ds
movsb
mov
push
incl
dec
cmpb
cmc
sbb
adc
mov
std
and
dec
in
cld
clc
xlat
cmp
and
sbb
sbb
int3
adc
cmp
mov
jg
push
rorl
sar
add
adc
pusha
nop
fildll
sbb
mov
loopne
call
in
push
adc
std
push
inc
pop
or
pop
movsb
or
scas
add
lea
test
fs
jmp
sub
shrl
mov
cld
clc
adc
inc
add
in
add
cmp
push
push
or
jb
mov
imulb
loopne
mov
xchg
dec
es
xchg
lret
mov
es
inc
sbb
dec
es
and
cltd
fs
pop
sub
fs
dec
insb
xor
dec
es
cmp
gs
lret
cmp
xchg
out
xchg
mov
cli
pushf
gs
lret
test
dec
lret
out
sti
mov
gs
int3
push
in
fsubl
out
push
insb
cld
in
pop
out
xchg
lret
pop
push
std
dec
lea
or
pusha
mov
jne
xlat
inc
adc
inc
inc
push
daa
aam
jo
daa
dec
add
outsl
je
mov
fs
jne
dec
jne
inc
imul
adc
mov
xchg
outsb
dec
jb
pop
outsl
jb
insl
jo
stc
out
pop
xor
jb
insl
push
je
pop
push
xor
sub
in
push
insb
mov
inc
jae
pop
inc
jns
test
int3
or
popa
nop
outsl
lahf
inc
add
pop
enter
loope
add
aaa
nop
jno
xlat
inc
add
and
cmp
add
je
orb
popf
stc
stos
xor
outsb
add
out
lods
xor
add
test
cmp
add
sahf
out
fisttpl
sbb
xor
repz
mov
les
xorb
sahf
jnp
inc
push
fs
es
adc
jnp
xor
sub
sbb
jnp
pop
xor
sub
or
jae
mov
jo
jbe
add
mov
dec
jle
sub
or
xchg
dec
pop
sub
sbb
push
inc
pop
rcll
mov
es
jl
push
dec
or
loopne
add
adc
test
lret
inc
add
inc
mov
inc
popa
adc
in
jmp
pop
mov
adc
push
or
inc
dec
mov
or
sbb
sbb
inc
imul
or
bound
iret
xlat
inc
and
je
jb
clc
and
leave
mov
pop
andl
insl
jo
in
jb
xchg
inc
push
inc
push
movsl
mov
sub
iret
test
sbb
mov
dec
inc
or
or
mov
or
jo
arpl
xchg
pop
enter
outsb
pop
mov
dec
cld
and
mov
int3
add
pop
pop
and
pop
sarl
push
push
aas
in
in
add
add
push
in
pop
or
mov
add
mov
or
add
call
or
in
test
in
push
or
xchg
inc
jo
or
jno
pop
enter
or
mov
xchg
mov
testl
xor
cmpb
inc
dec
enter
push
or
and
aad
or
cmp
jg
mov
sbb
sbb
xchg
cs
sub
int3
data16
add
inc
je
dec
je
gs
jbe
sbb
cltd
sub
fs
push
nop
es
mov
dec
jbe
add
and
jno
jns
sbb
xchg
in
dec
pop
clc
adc
mov
mov
cmp
dec
hlt
mov
leave
out
pop
add
mov
nop
out
shr
je
enter
in
nop
add
cld
pop
leave
jae
hlt
inc
adc
mov
roll
add
cmpsb
cltd
loopne
loopne
pop
push
je
add
cli
enter
or
xor
lea
fcomp
enter
sub
sarb
pop
std
xor
nop
add
mov
pop
fidivrs
enter
xchg
sub
jns
adc
jmp
mov
test
push
push
je
jbe
mov
aad
and
jbe
jmp
adc
xchg
nop
add
iret
ss
mov
jns
cmp
push
cmp
xchg
aam
mov
pop
pop
add
stos
jo
push
roll
rcrl
loopne
inc
addl
ret
loope
add
out
fmul
pop
xor
incl
mov
fldenv
add
xchg
jne
pushf
xchg
arpl
insb
in
cmp
jmp
push
xor
fcomp
mov
mov
jmp
mov
adc
mov
call
or
inc
mov
and
push
add
andb
sub
inc
lods
add
movsl
push
add
or
test
push
fcmove
add
lcall
in
rcll
and
sbb
popf
or
jl
inc
xor
lea
or
cmp
or
movb
enter
aas
and
pop
push
fs
mov
push
add
pop
dec
inc
fsubrs
imul
cmp
xor
ret
repz
push
or
dec
jnp
push
call
shl
in
test
fdivrs
das
fdivrl
jne
push
aam
movsb
push
cld
jmp
add
push
stos
jo
sbb
or
cmp
add
or
fstps
push
inc
hlt
sub
jns
add
pop
jl
jbe
sbb
jmp
div
and
fsubr
and
das
add
mov
lret
jle
icebp
push
add
jo
jmp
mov
loopne
pop
jb
mov
jne
movsl
aas
mov
pop
je
aas
daa
pop
jb
jmp
loopne
and
fimull
adcl
call
inc
pop
in
or
adc
adc
loopne
inc
jb
sbb
in
loopne
add
loopne
std
dec
mov
push
jno
lds
js
sub
jae
add
jnp
adc
test
xchg
lock
pop
inc
push
movsb
call
mov
dec
push
ret
outsl
cmp
mov
inc
call
and
push
hlt
xchg
jmp
push
fldt
or
mov
push
fs
lcall
jmp
push
adc
cmp
or
inc
push
or
repz
adc
cmp
xor
xor
cmpsl
xor
inc
adc
jg
sbb
sub
add
inc
push
aam
push
inc
mov
push
dec
or
dec
cmp
clc
loopne
je
pop
jne
push
into
ret
inc
pop
dec
shll
or
shll
push
adc
inc
nop
sar
or
mov
hlt
add
adc
sbb
jo
mov
cmc
mov
pop
pop
push
aaa
outsl
sbb
pop
xchg
mov
enter
mov
movzbl
or
and
add
jmp
out
in
loope
int3
cld
push
out
rcrl
ds
mov
lock
cmp
out
mov
add
and
and
rcr
es
and
adc
mov
sub
shrl
push
inc
mov
add
push
cmp
cmpsb
in
adc
sbb
inc
inc
pop
add
xchg
jno
push
cmpsl
lcall
adc
loopne
inc
mov
inc
cmp
or
popf
inc
push
roll
mov
inc
push
mov
and
add
jb
lds
push
jae
xor
or
adc
and
add
jmp
daa
sub
inc
push
add
and
fisttps
dec
mov
sbb
adc
pop
orl
pop
add
outsl
push
xor
sbb
mov
nop
sbb
add
cmp
ja
sub
push
iret
sarl
notb
push
sub
out
cmp
cmpsl
test
popf
int3
sahf
out
stc
push
jae
daa
out
sbb
push
cmp
and
sbb
add
or
decb
inc
rorb
sbb
cs
les
movswl
xorb
enter
xor
xchg
orb
lea
test
stc
mov
xlat
inc
lock
xor
ud0
add
xor
add
inc
lcall
call
lahf
sub
jbe
lea
dec
push
loopne
dec
jmp
movzwl
xor
fmull
mov
loope
fdivrs
xor
aam
ret
sbb
call
cmp
rcl
mov
insl
add
cmp
jne
fstl
cmp
in
int
in
push
popa
and
js
enter
cld
outsl
fiaddl
je
dec
je
jmp
fdivs
mov
xor
add
les
test
in
inc
push
mov
mov
lcall
pop
rcrl
pop
dec
sbb
sahf
out
andl
sahf
outsb
pop
sbb
pop
pop
xor
push
outsl
mov
ljmp
xor
mov
pop
flds
jno
mov
pop
fnsave
mov
pushf
mov
lods
mov
lods
cmp
pop
mov
cwtl
popa
test
shlb
out
fwait
test
aad
and
test
mov
dec
enter
cmp
add
fistl
jmp
adcl
ds
nop
in
sbb
inc
sub
cmp
push
mov
sbb
bound
cli
insl
mov
xchg
imul
jb
and
mov
add
and
sbb
push
in
jb
sbb
add
pop
pop
inc
test
in
push
outsl
or
inc
movl
xchg
mov
cmc
nop
in
jb
mov
je
nop
sbb
sbb
push
xor
and
aad
sbb
inc
cmpsb
and
fs
sbb
pop
adc
jne
push
push
loopne
test
dec
in
push
in
sbb
mov
mov
and
and
dec
repz
lea
sbb
repz
mov
xchg
out
imul
out
jns
das
push
dec
push
mov
inc
push
adc
or
mov
test
inc
mov
fcoms
cmp
fadds
cmp
inc
cmp
fcoml
cmp
or
mov
and
inc
lock
gs
mov
xor
fsubl
fdivl
mov
xor
and
aam
rclb
adc
jne
inc
jo
jg
outsl
int3
or
sub
xor
insb
push
mov
xchg
xchg
or
pop
lcall
jns
mov
dec
in
pop
pop
pop
jns
outsb
repnz
out
sbb
out
sahf
sub
pop
pop
inc
fs
daa
jl
sbbl
les
adc
shlb
mov
mov
out
fiaddl
mov
cmp
popa
leave
mov
popa
js
sbb
ret
and
cmp
es
lods
and
test
test
adc
cwtl
xor
add
or
jno
test
aaa
in
sahf
shll
or
xchg
popf
xchg
xchg
and
and
or
arpl
jmp
test
nop
mov
add
cmp
enter
enter
dec
xor
jno
mov
mov
shlb
dec
add
out
inc
inc
xchg
hlt
add
inc
sub
dec
testb
sub
movw
push
inc
cs
push
pop
test
sbb
movsb
inc
jmp
gs
add
and
adc
push
or
loop
push
vmread
jo
xchg
xor
fstpl
fwait
jle
rcll
daa
pop
push
add
js
push
rclb
xor
or
pop
fimull
mov
jo
add
out
pop
stos
and
repnz
enter
xchg
sbbb
dec
xchg
adcb
pop
jg
xchg
addr16
insl
jo
jns
loopew
das
dec
jne
pop
mov
je
sbb
rcrb
data16
pop
outsl
lret
jmp
push
ds
add
outsl
jne
xchg
es
mov
and
sub
inc
dec
adc
movb
sub
or
push
and
dec
jae
sbbl
mov
shrb
aas
inc
arpl
popa
test
pushf
aas
and
inc
andl
je
inc
xchg
mov
inc
jns
xorb
daa
lods
mov
push
add
gs
mov
sub
and
insl
sti
and
ss
push
movsb
xchg
push
adc
aas
inc
sti
inc
or
in
insb
das
add
test
xchg
adc
jmp
push
add
orb
sahf
stc
jo
imull
xor
sar
jne
aas
cmp
inc
and
push
pop
cmp
pop
adc
mov
and
movsl
mov
inc
les
out
jns
mov
in
xor
mov
call
outsb
jns
and
je
cmpsb
inc
push
push
gs
push
adc
mov
pop
pop
jle
andb
adc
scas
hlt
cli
xor
add
loope
test
cmp
inc
pop
sbb
mov
push
sahf
push
dec
sbb
inc
push
jnp
dec
xorl
sbb
add
cmp
jle
xchg
pushl
out
cmpsl
xchg
jl
xchg
pusha
jae
inc
mov
adc
push
cmp
or
pusha
mov
push
xchg
add
xchg
xlat
sbb
mov
lds
mov
js
jge
cmp
je
mov
dec
pop
adc
into
test
and
or
inc
pop
pop
fstl
mov
fsubrl
pop
dec
sbb
dec
adc
xorl
fidivs
add
addb
mov
fs
pop
mov
call
mov
add
lods
or
ret
call
mov
sti
fsts
out
daa
xor
andb
or
loop
adc
repnz
cmp
mulb
adc
push
xchg
jne
or
jae
into
imul
orb
rorl
ljmp
in
xchg
inc
ror
xchg
idiv
adc
sti
call
and
and
int
enter
pop
shrb
mov
aas
loopne
cmp
test
or
jbe
xor
lods
xor
push
sub
jns
push
rclb
mov
jno
or
test
addb
push
fnstenv
adc
arpl
sub
leave
inc
ja
lock
add
lock
dec
sub
dec
add
addr16
loopne
xchg
jl
inc
xor
dec
sbb
loopne
nopl
add
adc
lock
sbb
adc
outsl
repnz
movsb
out
adc
jle
or
pop
add
loop
inc
dec
jne
cltd
int3
mov
repnz
cmp
add
lock
lds
push
jae
shrl
mov
sbb
adc
cltd
flds
call
pop
je
das
lea
cmp
adc
push
xchg
lock
bound
fisubrl
outsb
and
es
scas
seto
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
cwtl
dec
dec
dec
dec
cltd
lcall
popf
sahf
lahf
orb
dec
addl
xchg
mov
dec
dec
lea
mov
out
das
adc
mov
hlt
pop
out
add
dec
sbb
xchg
push
or
ljmp
lret
or
pop
and
mov
add
mov
xor
pop
cmp
test
jne
xchg
jmp
or
dec
xor
cmp
jle
mov
dec
lahf
cmp
fiadds
testl
adc
cmpl
test
cli
jge
scas
mov
inc
pop
cmpsl
sub
movsb
add
push
mov
sbbl
and
gs
or
inc
or
sub
cmpsb
fisttpl
mov
pusha
xchg
enter
ljmp
pop
sbb
je
mov
and
sbb
fldt
out
add
and
jmp
jle
lock
je
jmp
cmp
sbb
test
mov
dec
jne
mov
jbe
je
sub
mov
dec
repz
rep
mov
push
dec
inc
push
or
in
jl
or
dec
sbb
fs
data16
bndstx
jmp
sbb
xor
cmpsl
mov
incl
mov
cmpb
je
xchg
call
lar
decb
ja
mov
adc
jmp
popa
loopne
sbb
add
rcrb
add
add
adc
xor
add
mov
xchg
or
jle
add
mov
jo
add
jns
cmp
fisttpl
cmp
sahf
jne
mov
mov
cmpb
ja
jb
add
lret
repz
add
call
out
mov
fisubl
jb
or
xor
jmp
stc
mov
add
add
push
adc
por
mov
or
mov
aaa
sub
movsl
push
mov
sbb
cli
cld
push
or
sub
xlat
stos
insb
fdivs
xor
pop
cmp
or
jg
push
aaa
aas
int
int
jle
jb
incl
cmp
mov
mov
xlat
or
xchg
adc
into
sub
cli
cmp
dec
or
lods
cmp
fimull
or
jmp
shrl
jmp
sub
pop
js
aad
or
dec
pop
mov
dec
mov
pusha
or
xchg
sbb
inc
mov
push
xor
pop
test
xlat
cli
and
inc
sahf
inc
lods
push
mov
rolb
fistps
push
in
mov
cmp
or
aaa
adcb
adc
pop
or
inc
enter
xor
aas
rcrb
mov
pop
xor
or
adc
or
sub
push
popa
sub
xor
jp
hlt
cli
sbb
push
out
dec
hlt
icebp
and
jmp
jg
rclb
loop
xor
cmp
and
add
faddp
ja
das
imul
cmp
outsl
add
ljmp
add
add
mov
xchg
cmp
imul
outsb
push
xor
iret
lods
pop
or
repnz
xor
push
inc
mov
leave
outsl
loopne
jecxz
or
xor
xchg
pop
inc
jnp
add
lcall
xchg
push
lods
inc
jns
mov
fcmovu
insl
or
sbb
fsubl
sub
insl
pop
jo
add
or
pushw
or
cmp
or
xor
stc
fwait
pop
lret
add
mov
mov
jge
pusha
or
mov
and
or
push
sub
iret
addr16
les
or
inc
or
mov
sub
fldl
adc
movsb
adc
push
fbld
outsl
xor
sub
shl
pushf
xchg
int
hlt
pop
xor
xor
dec
lock
adc
jmp
sbb
sub
loopne
adc
push
or
push
mov
cmp
push
and
sub
mov
mov
jp
enter
fdivrs
loopne
pushl
int3
fildl
sbb
adc
roll
adc
and
or
repz
shlb
inc
pop
mov
enter
jbe
add
movsl
push
adc
daa
sti
jbe
fnstcw
inc
andb
cwtl
jmp
cmp
sbb
mov
std
inc
mov
negl
adc
mov
lods
pop
mull
mov
xchg
popf
sbb
notl
nop
int3
sbb
or
imul
mov
xlat
mov
xor
dec
gs
popa
lods
mov
jns
sbb
push
lcall
inc
insb
popa
jbe
cmp
jae
sbb
imul
iret
out
adc
bound
test
into
ficomps
nopl
adc
dec
outsl
arpl
cmpl
test
insb
jns
data16
cmpsb
shll
test
pop
ss
push
mov
outsl
fistpll
insb
or
cmpsl
or
dec
imul
gs
xchg
test
mov
repnz
or
test
hlt
add
dec
ljmp
js
add
imul
jnp
inc
push
sbb
or
mov
xchg
jp
gs
rclb
jae
aam
fimuls
add
jne
or
xchg
adc
outsb
xchg
dec
or
push
fsubs
and
pop
push
aam
add
push
or
pop
jns
shll
shrb
xor
pop
fsubl
aas
mov
leave
ss
push
daa
pop
leave
les
ret
pop
and
push
xchg
pop
in
mov
sub
outsb
inc
dec
xor
cmp
inc
cmp
pop
cmpsb
or
pushf
shrl
aaa
or
pop
mov
nop
mov
scas
hlt
xor
pop
sbbl
mov
cmp
jmp
fiadds
push
insl
xchg
sbb
nop
test
ds
mov
cmpsl
push
mov
enter
add
mov
cmp
dec
imul
adcl
mov
adc
scas
push
cmp
cmp
adc
inc
dec
mov
mov
addb
xchg
cltd
push
mov
push
repnz
and
sub
push
cwtl
nop
jb
or
outsl
ret
mov
stos
xor
mov
inc
shrl
sub
ja
cmp
dec
jne
xchg
push
arpl
js
xchg
data16
add
nop
adc
sub
call
fsubl
mov
insl
fldcw
call
pop
pusha
fs
pop
push
cmp
stos
neg
mov
pop
dec
push
push
push
add
mov
ret
mov
push
adc
sub
test
loop
inc
sbb
mov
inc
inc
push
add
test
xor
pop
and
insl
ret
mov
pusha
or
mov
adc
xor
int3
lea
push
movsl
cmp
test
xor
mov
cmp
push
sbb
dec
ds
fildll
sub
pop
sbbb
iret
je
mov
mov
fucom
pop
xor
cmp
inc
or
pop
push
push
aas
addr16
in
lds
insb
sub
ds
jnp
outsb
push
cmp
test
push
outsl
add
push
cmp
push
insb
ret
rcll
cmp
sub
push
push
cwtl
dec
rclb
shr
sbb
outsb
and
xor
cmp
sahf
out
cmp
xor
inc
mov
cmp
sti
stos
inc
ds
push
push
sbb
aaa
pop
scas
add
insb
inc
imull
pop
xchg
push
pushf
push
sub
dec
aas
cmp
movsb
push
adc
push
push
incl
xor
aas
jns
pop
clc
sbb
pop
sahf
fs
jo
lcall
lea
push
add
pushf
jae
push
rclb
sahf
cmpsb
sbb
out
imulb
sbb
inc
loop
lock
loopne
or
cli
inc
fwait
adc
add
je
data16
dec
mov
les
rol
loopne
jle
jg
adcb
mov
data16
cld
push
and
sti
xor
addr16
ja
mov
adc
jae
xorl
sahf
arpl
ds
loopne
hlt
cmpb
pop
mov
inc
jp
push
pusha
lods
rorl
ds
inc
cli
adc
or
dec
pop
sub
lds
xlat
cwtl
dec
inc
inc
pop
and
lock
xor
outsb
adc
repz
jb
xchg
mov
insb
jo
fstps
mov
sbb
into
lock
push
fdivl
xchg
xchg
enter
rorb
int
inc
mov
insb
xchg
mov
nop
mov
mov
idivl
loope
mov
inc
xchg
push
dec
inc
out
aaa
clc
nop
movb
lea
xchg
mov
orl
push
das
fcoms
cs
das
sbb
xlat
inc
mov
mov
lds
add
jl
aam
push
call
cmp
daa
test
or
enter
sahf
mov
bound
inc
sub
pushf
cmp
in
das
inc
inc
inc
inc
in
adc
cmpsb
inc
repnz
add
ret
scas
inc
pusha
dec
dec
pop
and
xchg
mov
mov
cmp
lds
lret
mov
and
adc
mov
jnp
ds
dec
inc
inc
sahf
in
rclb
inc
fcmovb
lcall
mov
adc
es
idivl
or
dec
push
adcb
cmpsl
or
xchg
adc
sbb
or
cltd
inc
call
pop
es
jne
rorl
addr16
or
enter
or
adc
enter
sbb
sbbb
and
add
xor
inc
xchg
in
in
fisubl
cmp
repz
int3
inc
dec
repz
repz
imul
inc
stc
mov
mov
cmp
cli
cs
mov
scas
push
xor
int3
dec
adc
push
and
and
scas
jnp
out
push
shrb
lods
adc
jbe
push
iret
repz
and
cmp
les
jecxz
mov
in
nop
sub
add
daa
aas
or
lret
jne
je
pop
xchg
inc
sbb
sbb
mov
pop
and
cltd
sbb
pop
push
fnsave
jbe
outsb
jp
jg
fbld
jb
popf
mull
mov
cmp
fsubs
cmp
push
jo
nop
lds
in
rcll
dec
and
xlat
adc
push
movsb
and
adc
dec
pop
or
pop
inc
xlat
imul
shlb
int
in
roll
rorl
xor
mov
in
xor
sbb
dec
add
nop
ds
dec
sbb
aas
das
pop
call
rcll
mov
rorb
mov
xchg
fmuls
int
pop
fmuls
in
sbb
mov
add
aam
dec
or
sahf
out
push
dec
sub
jmp
add
xchg
pop
inc
int
dec
addb
jns
rcrb
mov
sub
mov
dec
bound
push
push
aam
ficomps
jbe
add
les
xor
dec
scas
cmp
fldl
inc
add
sti
into
div
dec
fldenv
fidivl
fmuls
sub
jbe
sarl
inc
push
cmp
fs
xorl
add
cli
stc
clc
push
push
push
push
push
push
inc
icebp
int
mov
aam
faddl
loopne
clc
sub
cld
jns
idivl
or
adc
aam
jnp
div
fdivrl
add
rolb
sbb
or
nop
xlat
pop
and
sbb
push
lcall
xor
push
gs
cwtl
sub
cmp
movsb
jne
jae
pop
add
lcall
dec
mov
mov
push
fs
les
int
jns
enter
rcr
or
inc
push
arpl
dec
cmovb
cli
imul
dec
xchg
loop
and
push
push
push
mov
in
and
mov
negl
push
loopne
in
addb
push
or
add
out
pushl
adc
pop
sub
lea
jnp
dec
and
aad
dec
dec
fs
inc
add
jb
out
mov
sub
test
loopne
jo
pop
push
push
inc
inc
int
push
push
movsl
sbb
insb
push
pop
push
lea
pushf
imul
nop
mov
pushl
and
je
add
inc
repnz
test
dec
filds
and
push
mov
addr16
jb
jne
out
mov
fsubrl
xor
jl
or
xor
add
ja
add
xchg
add
decb
pop
jo
in
push
mov
dec
sbb
cmp
xlat
bound
ss
in
test
je
daa
subl
ja
or
push
ret
incl
int3
ret
pop
or
ljmp
lock
add
je
sub
sub
daa
loop
jmp
fldt
and
jmp
sbb
adc
sbb
add
out
mov
pop
fistps
je
mov
stos
inc
ret
shlb
scas
loopne
pop
cmp
inc
xlat
and
push
test
add
xor
sub
jmp
stc
add
loopne
jmp
pop
movsl
adcb
outsb
insl
leave
and
push
push
add
cmpb
mov
clc
mov
dec
sti
pop
mov
dec
jne
pop
or
les
shll
or
sbb
lock
out
and
xchg
push
lods
xchg
lock
pop
or
fidivrs
push
inc
int3
sbb
int
dec
mov
int3
dec
jne
pop
add
mov
repnz
xor
hlt
mov
push
arpl
xor
xchg
movb
sbb
and
mov
leave
xor
pshufw
adc
add
pop
pop
insb
aas
dec
mov
push
adc
and
iret
xchg
out
andb
fcoms
sarb
fs
push
jl
xor
and
and
loopne
mov
cmp
ret
sub
inc
jnp
sbb
cmpl
popl
jg
inc
in
rol
cmp
push
adc
fildl
imul
pop
loop
or
xchg
je
dec
cmp
das
mov
out
daa
mov
dec
jne
aam
push
mov
jne
mov
inc
and
push
adc
add
and
pop
test
mov
dec
les
inc
adc
jecxz
xchg
cmp
sarb
test
or
shll
or
pusha
or
cmpb
dec
add
fisttpl
mov
adc
or
aaa
mov
sbb
pop
sbb
cs
pop
xchg
push
sbb
mov
pop
fsubr
and
add
push
imul
lds
aas
ror
cmpsl
call
inc
mov
and
xchg
cmp
jne
xor
jb
mov
andl
std
push
push
mov
add
xchg
scas
xchg
popf
xor
into
sub
add
and
push
xlat
add
adc
xor
inc
hlt
push
nop
mov
lea
dec
aaa
jne
out
mov
jo
aaa
call
inc
rcl
xor
add
add
adc
addr16
inc
pusha
fsts
dec
in
inc
mov
push
jl
inc
push
icebp
xchg
mov
xor
pop
or
lock
dec
push
add
inc
fldt
sub
test
mov
loopne
mov
jne
push
dec
lock
clc
mov
cs
mov
dec
call
call
xor
xchg
insl
mov
cld
fidivs
leave
lock
adc
push
inc
mov
add
aaa
nop
sbb
pop
enter
dec
enter
test
sbb
pop
dec
pop
aad
jge
sbbb
sarl
xor
mov
outsl
pusha
push
add
jmp
xchg
inc
or
popf
lea
cmpl
adc
fnsave
out
fimull
lret
outsl
xchg
test
hlt
mov
or
lods
or
add
fadd
add
inc
mov
xor
or
popf
stos
outsb
lods
shlb
mov
adc
lds
mov
fstl
rorl
test
cmpb
dec
add
lds
push
mov
mov
xchg
fimull
inc
je
inc
jecxz
dec
pop
scas
std
dec
mov
dec
unpckhps
push
mov
push
dec
lahf
dec
mov
js
xchg
sbb
cmpsl
pop
lret
adc
sbb
pop
insl
call
xor
in
jl
fisubl
mov
clc
imul
gs
lods
lds
xchg
hlt
pop
dec
mov
pop
mov
inc
push
pop
xchg
or
mov
js
jne
cmp
pop
int3
adc
loope
xlat
enter
cmp
fnsave
enter
inc
sbb
inc
jge
mov
clc
ret
loop
dec
pusha
dec
sub
pop
sbb
roll
in
dec
cmp
or
sbb
sbb
es
fistpl
cmp
push
rcrl
adc
in
mov
lds
inc
addb
xchg
in
add
test
in
repz
fisubl
mov
insl
imul
in
inc
push
lds
inc
mov
or
adc
popa
add
or
jbe
out
jae
addr16
or
or
dec
test
xchg
adc
aaa
iret
push
loope
pop
pop
outsb
dec
mov
mov
xchg
xlat
sub
mov
call
cmp
pop
popa
and
or
cmp
jne
or
and
pop
sbb
cmp
push
dec
adc
push
pop
divl
or
pusha
xchg
add
lea
mov
xchg
add
xor
or
movsb
xchg
cmp
cld
mov
mov
cli
loope
and
inc
add
jmp
sarb
jne
sbb
sub
or
imul
out
fmull
pop
pusha
push
and
jp
les
push
mov
enter
adc
or
adc
pop
cmp
pop
imul
sbb
sub
jne
insb
sbb
pop
dec
call
pop
loop
xchg
xchg
push
and
sbb
dec
sbb
xor
dec
insb
rcll
pop
add
sbb
mov
add
or
ret
arpl
out
xorl
push
xor
enter
xchg
inc
xchg
dec
pop
mov
icebp
inc
cmp
push
sub
push
dec
test
cltd
jo
xchg
inc
cmpsb
xor
push
int3
inc
xlat
or
sbb
mov
dec
in
mov
rclb
loope
aas
packsswb
pop
mov
call
xchg
or
out
sbb
mov
pop
pop
adcb
mov
outsb
lock
mov
cld
ret
push
or
test
jnp
outsb
or
xchg
and
cmpsl
leave
push
push
sahf
fwait
shlb
daa
cli
xor
cmp
ret
mov
dec
lret
movsb
xchg
mov
sub
cltd
lods
cmp
or
insl
cld
pop
sub
xchg
mov
rorb
fldenv
bound
aas
mov
lods
fstp
ret
mov
popa
movsl
sbb
and
in
es
test
cmp
mov
idivb
movsb
mov
push
imul
sbbl
lods
push
mov
das
fcoml
je
out
aas
cltd
sub
pop
arpl
mov
add
mov
rcrl
cmp
imul
jge
pop
pop
jp
mov
inc
or
xor
push
fisttpll
std
add
lahf
test
dec
add
adc
push
jne
jp
jb
cwtl
or
mov
push
test
rolb
lods
stos
mov
dec
out
dec
jbe
add
add
lea
or
mov
lods
and
lret
and
cmp
popf
jo
mov
push
stos
dec
aad
mov
aaa
jmp
jns
shlb
bound
cmp
mov
push
sub
dec
jmp
xchg
out
inc
inc
rcll
push
xchg
shll
test
xchg
mov
leave
hlt
roll
imul
idiv
add
adc
dec
stos
pxor
jmp
lahf
add
mov
int
imul
inc
cmp
idivb
test
add
adc
jne
sbb
in
or
movsl
leave
mov
stc
std
xor
push
jb
jae
cmp
push
sbb
jp
loop
sbb
pop
dec
mov
adc
pop
lea
divl
jl
imul
out
call
and
mov
cmp
push
sbb
sahf
popf
push
mov
push
or
mov
jns
adc
sahf
shlb
cli
addr16
lcall
push
xchg
adc
outsb
pushf
jg
or
ds
pop
mov
je
and
add
add
mov
jg,pt
in
add
jle
cld
mov
in
sti
jle
jno
popa
lods
xchg
addb
push
jo
movsb
fs
daa
lcall
divb
mov
sub
jg
dec
mov
dec
push
add
adc
add
sysret
xlat
add
mull
inc
mov
ret
inc
and
xchg
inc
pop
sbb
nop
popf
pop
mov
dec
push
js
movl
push
fnsaves
js
add
movsl
in
mov
and
cmp
pop
loopne
js
cli
lds
mov
jne
adc
jmp
dec
add
or
lds
cmp
inc
inc
test
sbb
iret
xchg
dec
sbb
pop
jo
loopne
and
aaa
inc
fcoms
add
add
lds
add
dec
outsb
sub
filds
mov
loop
mov
adc
inc
enter
stos
lret
popa
xchg
insb
rcll
add
test
dec
xchg
push
mov
sar
xchg
xor
rcrb
clc
add
add
in
sbb
sbb
call
out
je
je
jno
andl
pop
stos
add
es
push
loop
shll
addb
into
adc
mov
mov
jg
and
push
add
lar
leave
je
cli
in
or
adc
btr
cmp
jl
call
sbbb
pop
fmuls
mov
mov
idivb
push
jno
fdivp
cld
cmp
je
decl
xor
push
and
inc
ja
mov
loop
cmp
std
test
cmp
jl
adc
push
inc
cmp
jne
cmpsb
icebp
aad
decl
jne
les
or
bound
push
loopne
push
mov
cmc
rclb
and
leave
and
add
in
out
imul
sbb
adc
add
inc
jbe
popf
andb
jae
add
add
xlat
rcrb
mov
add
mov
mov
push
adc
imul
outsb
imul
cwtl
sub
and
repnz
outsl
pop
mov
mov
push
and
sbb
sbb
orl
mov
pushl
js
repnz
jne
push
and
mov
push
add
adc
add
add
test
or
dec
mov
pushf
sbb
sbb
push
scas
or
imul
mov
sub
inc
mov
fcompl
xchg
clc
adc
cmp
inc
rolb
mov
dec
inc
inc
testb
je
loopne
jecxz
addr16
push
pop
inc
cs
mov
pop
push
adc
pop
jl
inc
sub
and
push
cmp
jecxz
xor
stos
or
adc
inc
adc
jl
push
andb
sar
andl
cmpsl
push
mov
mov
or
add
inc
jo
dec
movsb
jg
pop
cmpl
out
mov
jne
pop
fcoml
inc
push
add
push
or
or
mov
mov
mov
ss
ja
in
aas
xchg
cmp
insl
cltd
jnp
cmp
cwtl
inc
add
fcomps
pop
mov
or
imul
jmp
insl
cwtl
mov
push
movsb
cli
in
in
ja
adc
in
insl
in
push
and
jae
and
push
adc
andl
lock
jge
aam
stos
add
fldenv
jle
sub
add
push
fdivs
outsb
pop
jbe
mov
lock
xchg
jbe
push
adc
pop
or
push
loope
mov
mov
sahf
cmp
mov
mov
aaa
mov
xchg
insl
pop
enter
mov
nop
cmp
ret
push
cmp
add
sbb
ljmp
aas
loope
test
and
dec
jle
sahf
outsl
pandn
out
pop
ljmpw
jo
fnsave
pop
rorl
fisubrs
outsb
ja
pop
scas
mov
rclb
and
sbb
testl
push
and
hlt
jnp
adc
mov
xchg
cli
add
add
push
jle
inc
es
jo
popa
addr16
cmp
or
int
jnp
call
add
testl
sbb
iret
xor
mov
sub
lock
fcomp
lahf
sbb
mov
xacquire
rcl
andl
pop
jb
cmp
cmp
clc
adc
lods
orb
pop
pop
mov
out
or
push
clc
pop
push
pusha
ret
ss
add
adc
pusha
xchg
movsl
sbb
jmp
mov
pusha
loop
and
aas
add
fldt
je
fmulp
xor
xchg
mov
mov
pop
adc
xor
dec
cmpsb
data16
push
pop
loop
add
cltd
popa
dec
ss
sub
in
push
add
mov
sarl
inc
aaa
inc
fs
mov
jb
cmp
jne
sbb
imul
xchg
cmp
push
xlat
adc
push
sbb
mov
jg
inc
dec
jne
push
pop
jb
and
xorb
in
sbb
mov
insl
outsl
fists
adc
adc
mov
dec
imul
adc
decl
sub
sti
scas
aaa
sbb
call
or
das
mov
mov
jmp
insl
pop
pop
push
mov
and
xchg
push
fnstcw
jmp
xor
xchg
mov
xchg
mov
jg
cs
jb
jl
push
iret
pop
ret
add
pop
daa
sbb
pusha
xor
push
or
add
aaa
ds
xchg
jo
push
test
adc
lret
movsl
repnz
pop
loopne
cmp
lock
cmp
shlb
ja
xchg
test
je
mov
scas
sub
lods
sub
inc
insb
jns
dec
ret
sbb
sbb
out
cmp
pop
xor
dec
jne
add
or
mov
dec
push
sub
je
adc
push
and
rcl
sub
adc
inc
xor
and
cld
push
add
je
adc
aam
inc
jle
adc
or
mov
popa
cs
add
mov
fwait
movsb
add
jns
jne
rcrl
inc
insl
les
xchg
push
xor
pop
ret
popl
jo
and
mov
mov
sbb
into
rorb
pop
mov
repz
and
jle
and
pushf
pop
add
fnstcw
hlt
or
xor
in
adcb
pop
or
jbe
icebp
ss
insb
sbb
pop
mov
push
in
adc
xorl
and
xlat
cmc
jbe
xor
xchg
mov
cmp
cmp
jge
cmp
lock
sahf
in
insb
and
dec
push
in
pop
or
sbb
dec
jl
shll
jbe
xor
push
in
add
addr16
inc
enter
jb
shrb
ja
movb
addr16
xchg
ja
cmp
inc
sbb
pop
lock
aaa
dec
inc
mov
cmpsl
shll
xchg
push
cmpsb
and
cld
rol
cmp
xor
xchg
xor
sub
and
cltd
jge
pop
fsubs
sbb
lret
movsb
hlt
and
pop
js
ret
clc
jle
or
add
lock
cwtl
mov
outsb
iret
sub
xor
sub
xchg
mov
xlat
jbe
mov
mov
mov
stos
lock
inc
mov
cmp
aam
adc
inc
pop
and
fists
fwait
addb
loope
jns
clc
mov
addr16
mov
push
jo
movsl
and
mov
jb
dec
mov
fistpl
mov
nop
pusha
or
sub
jns
inc
je
mov
cld
test
jp
popa
pop
xchg
shll
fisubl
inc
sub
fidivrl
in
aas
inc
inc
ror
mov
push
in
xchg
fisubrl
fsubs
and
rolb
dec
sub
leave
clc
rol
pop
les
cmp
dec
jb
pop
fildll
mov
cld
orl
cld
rorl
sub
sbb
add
clc
inc
clc
sub
lock
test
hlt
jp
adc
jecxz
cmp
enter
cmc
jnp
mov
cmp
nop
and
dec
lods
jne
scas
sub
sbb
adc
add
inc
test
sbb
jnp
pop
rorl
inc
cmp
jl
sub
jo
lahf
sub
clc
sbb
loop
jbe
and
dec
ret
inc
mov
xor
or
inc
add
lods
jno
push
sbb
pop
jl
mov
push
dec
das
call
mov
and
xor
cmp
xor
inc
ret
popa
push
push
pushf
sbb
in
push
arpl
inc
dec
or
and
push
mov
jmp
add
test
sub
movsb
les
faddp
outsl
jle
pusha
xor
jecxz
mov
ja
movups
outsb
adc
cmp
or
push
adc
out
or
and
push
push
or
es
mov
and
or
mov
xchg
push
lret
adc
sbb
inc
xor
or
ret
cmp
and
sbb
fwait
jge
test
sbb
imul
and
les
jle
sbb
jge
sub
pop
aad
loope
xor
inc
jl
aas
pop
pushf
or
adc
out
fwait
daa
jle
aam
outsb
inc
cmp
pop
pop
call
jle
fs
and
popa
sarb
rcll
adc
nop
sbb
hlt
xchg
out
cmp
daa
jmp
ss
fstl
xor
adc
cmp
cwtl
sbb
jg
mov
popf
mov
daa
pushf
into
adc
push
mov
pop
push
dec
push
loop
cmp
insl
push
mov
sbb
jg
adc
inc
inc
sub
jg
daa
js
sub
jb
js
subb
xchg
xlat
pop
test
adcb
sub
jg
and
mov
mov
hlt
mov
mov
mov
adc
fs
jno
push
inc
jb
adc
sarb
pop
das
cmp
sbb
repnz
sub
sbb
orl
mov
sbbl
ja
loopne
pop
sbb
test
outsb
mov
fwait
subb
movsb
out
lods
xchg
lods
sbb
push
mov
outsb
in
ljmp
adc
sub
pop
lretw
and
pop
mov
les
stos
add
lret
sub
std
dec
stos
push
jns
cmp
inc
pop
lcall
divb
mov
xor
xor
xor
xlat
mov
jmp
mov
mov
push
or
mov
or
inc
loopne
js
jecxz
cltd
ret
call
sub
mov
cmp
jne
cmp
test
fdivl
fsubrs
scas
xchg
mov
adc
addb
stc
je
popa
sbb
scas
mov
adc
lcall
or
xchg
outsb
imul
rclb
sbb
inc
adc
imul
hlt
cmpsb
incb
sub
add
mov
push
pop
add
adc
add
mov
xor
shlb
sbb
and
sti
fisttpl
push
push
cmp
jne
pop
std
addr16
jg
jmp
mov
sbb
cmp
xchg
icebp
jbe
mov
ja
pop
je
stos
fidivs
pop
cmp
jne
invd
xchg
xor
mov
push
inc
add
sub
xchg
xor
mov
sbb
or
adc
add
add
int3
fwait
div
inc
add
in
inc
add
xor
push
jle
mov
sbb
mov
xchg
add
xchg
int
sahf
int3
or
adc
sar
das
ss
call
add
push
mov
xor
into
dec
or
lea
imul
aas
pop
push
orb
cs
popa
inc
or
add
aaa
push
adc
jns
and
cli
mov
adc
mov
mov
lret
aaa
leave
repz
or
lds
add
scas
mov
scas
xor
wrmsr
xor
mov
movsb
mov
push
mov
adc
mov
push
sbb
mov
add
sub
push
sbb
icebp
test
dec
cmp
cmp
clc
xchg
dec
cmpb
pusha
push
or
loop
das
push
inc
add
xchg
mov
mov
es
test
pop
add
jmp
sub
add
mov
pop
xor
aaa
xchg
mov
dec
add
data16
repnz
enter
dec
lods
cld
sub
xor
pop
insl
mov
out
sbb
xor
test
pop
shrb
fildl
and
ret
push
subb
and
inc
inc
sbb
mov
ds
test
xchg
fldenv
add
xchg
mov
dec
adc
or
mov
inc
xchg
test
cwtl
xchg
dec
push
or
iret
iret
fwait
and
push
mov
mov
pop
idivb
lock
sbb
add
push
adc
inc
or
out
fs
push
cli
dec
jnp
mov
mov
cmp
dec
mov
jmp
cwtl
mov
aam
mov
adc
inc
adc
test
add
sbb
imul
cmpb
stos
repz
jle
cmp
mov
mov
xor
into
pop
scas
ficomps
aaa
lret
cmp
mov
sbb
push
in
mov
lret
cmp
push
and
test
xor
jb
movb
mov
pop
and
and
fidivs
push
imul
lretw
xlat
sbb
je
pop
pop
push
fs
mov
pop
dec
mov
jb
xchg
mov
jle
xor
xchg
inc
lods
push
sub
cli
or
add
and
cwtl
and
mov
pop
orb
nop
cmp
ret
xchg
jno
jae
adc
in
push
call
scas
stc
nop
cltd
shll
insl
push
rcl
mov
mov
mov
rolb
nop
jne
into
es
clc
add
rorl
jmp
adc
popa
nop
lret
and
jg
xchg
push
or
pop
add
mov
mov
add
cmp
ficomps
dec
inc
sub
mov
clc
jle
mov
int3
pop
jnp
in
hlt
jl
cmp
mov
cmp
adc
repnz
cmp
and
sub
jl
je
js
outsl
jmp
or
nop
pusha
and
inc
and
pop
in
loope
adc
and
das
lock
push
mov
clc
loope
jnp
movsb
into
inc
mov
xchg
pop
faddl
inc
add
cmp
add
scas
or
jp
lahf
cmpb
adc
loope
or
jmp
sbb
nop
sbb
rcl
add
sbb
int
add
loop
pop
mov
dec
xchg
or
xchg
or
insl
daa
outsb
xchg
outsl
xchg
dec
sub
fwait
ljmp
mov
das
mov
mov
movl
mov
cmpl
cmpl
jns
cmpsb
rclb
and
fadds
push
mov
and
or
mov
inc
fdivrs
add
test
mov
fwait
mov
rclb
mov
imul
das
lahf
daa
mov
icebp
mov
cmc
push
lea
push
sbb
push
sbb
je
cld
push
or
adc
jne
sbb
push
imul
les
jne
in
xor
pop
and
xor
aam
movsb
roll
cmp
mov
ror
inc
mov
inc
inc
shlb
dec
cmc
jmp
shlb
fisubs
pop
and
inc
sbb
cmp
cmp
pop
dec
das
push
cmp
outsl
sub
mov
shll
sbb
popf
sub
or
pop
int
inc
insl
lahf
jge
pop
adc
add
fists
sti
mov
sahf
jg
lock
jbe
or
sub
pop
ret
call
mov
cltd
cmp
int
jp
jge
mov
jmp
filds
adc
pop
push
mov
mov
mov
add
sbb
mov
inc
stc
mov
jno
add
rclb
lods
adc
dec
sub
inc
dec
dec
loope
movsb
cmp
cmp
test
sub
mov
xor
and
sbb
mov
mov
and
dec
jmp
inc
and
mov
and
jmp
pushf
fwait
xchg
push
and
inc
sub
adc
xchg
scas
pop
adc
pop
cli
imul
inc
add
pop
xor
adc
popa
adcb
outsb
or
fcompl
faddl
in
pop
mov
jmp
ds
andl
adc
or
or
testl
dec
cwtl
jge
dec
or
lea
and
or
mov
dec
in
rorl
jge
sbb
jae
movsb
mov
inc
jmp
jle
xchg
xchg
xlat
xchg
test
rorl
in
jge
enter
enter
faddl
adc
insl
insl
ljmp
and
rolb
bound
dec
out
pop
mov
cmp
daa
xchg
mov
mov
or
mov
and
sub
ficoms
cmp
inc
mov
dec
add
into
fstpt
imul
or
test
out
pop
or
or
dec
or
adc
iret
or
push
add
sbb
mov
ss
jle
add
ret
fwait
imull
nop
pop
nop
inc
ret
xchg
call
test
add
bound
mov
cmp
cmp
pushf
cmpsl
or
addb
inc
adc
aad
rolb
pop
subl
add
adcb
cli
dec
leave
xchg
cmpsl
pop
mov
cwtl
jns
test
mov
in
adc
sbb
inc
pop
repnz
sbb
pushw
icebp
rclb
adc
mov
cmp
lcall
add
push
out
push
loopne
jne
mov
or
adc
lret
popa
rcl
nop
psraw
sub
push
mov
push
les
cmp
xchg
orl
repnz
aaa
shlb
lods
ljmp
cmp
fwait
and
sub
lea
or
sub
xlat
xchg
and
push
and
pop
add
or
mov
sbb
push
dec
stos
out
xchg
sub
add
or
sbb
sub
or
jge
lods
pop
inc
nop
outsl
lea
aam
les
sbb
mov
add
adc
outsl
jne
pusha
pop
sub
push
and
sarl
adc
jne
dec
add
in
lret
sarl
cmp
add
pop
addb
cs
enter
sub
cmp
jb
mov
pop
mul
cwtl
sub
shlb
dec
add
fwait
push
in
jmp
leave
adc
sub
jns
arpl
or
mov
int
dec
jae
pop
xor
adc
in
cwtl
fucomp
sbb
aaa
scas
lock
dec
repz
push
push
sub
mov
aas
push
jle
loop
push
pop
divb
pusha
js
sub
in
xchg
popa
sbb
sbb
rorb
xor
das
dec
pop
dec
pusha
pop
clc
mov
aaa
je
pop
ret
push
fidivrl
insb
push
mov
sbb
add
pop
pop
adc
jbe
mov
adc
popa
imul
insb
pop
daa
daa
mov
jg
fwait
sub
inc
adc
sub
or
rclb
inc
imul
out
lret
leave
in
lcall
mov
pop
add
mov
out
into
or
or
inc
lcall
adc
or
pop
icebp
pushf
in
xchg
push
add
add
pop
add
lret
ljmp
inc
and
int
adc
aam
add
int
sbb
test
add
ret
add
mov
sbb
bound
pop
sbb
xor
xchg
xchg
rolb
out
add
push
pop
jne
ret
pop
jecxz
xor
sbb
sub
gs
inc
sbb
xor
loopne
inc
pusha
outsl
popa
sub
imul
mov
jmp
mov
inc
push
add
sub
jae
adc
mov
hlt
dec
xchg
lret
aaa
test
sbb
mov
int
dec
sar
stos
sbb
add
sbb
sub
or
mov
mov
xor
or
and
or
dec
lcall
cmp
and
jl
inc
push
enter
dec
outsl
or
outsl
xchg
xchg
mov
mov
adc
and
jp
lahf
jmp
les
loope
clc
xor
cmpl
aad
mov
ja
dec
into
or
sahf
cmp
and
es
jge
ljmp
sbb
fidivl
sbb
movsb
push
sub
cmp
inc
sbb
jne
adc
xchg
push
jno
and
push
lock
adc
or
pop
inc
jmp
sbb
fcom
cmp
or
xchg
sarb
jo
cmpsl
sahf
data16
sub
push
inc
cmpl
addr16
incl
stos
fldenv
xchg
rcrb
inc
and
push
fdivs
mov
cmp
push
push
xchg
rorb
or
xchg
xor
das
or
or
jecxz
fisubl
popf
adcl
inc
sbb
lret
popa
sbbb
xchg
loop
push
test
out
dec
xchg
push
lock
inc
arpl
dec
cmp
test
mov
xlat
lret
xchg
mov
add
pop
nop
insb
push
mov
sub
add
pop
cwtl
push
inc
fs
pop
scas
sbbl
pop
test
push
adc
popa
ss
js
xchg
pop
inc
xchg
scas
ret
mov
ret
mov
cmp
mov
dec
adc
mov
ret
ja
xchg
jp
jge
push
stos
inc
sbb
xor
movsb
adc
fisubs
jle
pushl
xlat
dec
xchg
and
dec
out
je
mov
add
mov
mov
sub
adc
add
sbb
movb
add
ljmp
mov
addr16
xchg
je
cltd
push
xor
testb
dec
hlt
aaa
scas
cmp
addl
lea
inc
mov
add
pushf
cmp
jecxz
dec
adc
mov
iret
shrb
or
adc
sub
sbb
data16
mov
sub
or
lods
inc
stos
or
cwtl
xchg
cmp
pop
lock
sar
addl
push
lea
push
outsb
fiaddl
mov
jmp
mov
cmpb
push
cmp
in
sbb
lret
pop
push
jmp
lret
dec
adc
in
pop
push
push
pop
jecxz
sbb
mov
cmp
cmp
scas
mov
cmp
insb
xchg
pop
mov
or
push
int
clc
sbb
hlt
pop
add
nop
mov
add
outsb
fidivl
push
or
jne
pop
cmp
vmwrite
mov
outsl
push
loope,pn
subl
jmp
inc
xor
repz
movsl
adc
mov
cs
inc
xchg
push
int
and
or
jl
jnp
cmpsb
sti
sbb
jp
mov
xor
jge
frstor
aas
hlt
inc
jl
js
or
imul
icebp
rclb
jmp
push
insb
push
in
or
lea
mov
repnz
outsl
and
pop
lods
nop
movsl
pop
xchg
cmp
mov
fs
cmp
or
into
xor
sub
mov
test
pushf
inc
xor
inc
jo
popf
or
hlt
inc
ret
mov
jmp
sub
jge
out
dec
xchg
xor
mov
sub
mov
push
xchg
or
loop
mov
cmp
loopne
nop
cld
cmp
data16
jbe
je
dec
sbb
jbe
mov
sub
dec
mov
je
mov
mov
push
adc
ret
ja
ja
in
ficompl
inc
xchg
add
nop
nop
inc
movsb
mov
std
mov
jmp
mov
dec
adc
mov
xchg
sbb
fnstenv
fsts
lret
sbb
sub
cmp
sub
dec
add
cli
rcrl
jo
clc
or
jne
pop
xlat
fcoms
dec
push
out
les
jmp
cmp
cmpsl
loopne
push
cmp
jns
jl
sahf
inc
cmpsl
inc
cmpsl
mov
jle
pop
mov
movsl
es
add
adc
imul
sar
and
movl
push
dec
pushf
sub
addr16
jo
inc
out
xor
push
mov
jge
sub
jae
adc
inc
or
cmp
mov
jnp
movsb
js
je
cmp
mov
push
pop
xor
ja
adc
ret
test
loopne
pusha
leave
xor
fmuls
xor
out
in
jge
inc
lods
unpcklps
jecxz
xor
lods
mov
int3
cmpsl
popa
push
nop
lret
hlt
xchg
pop
imul
testb
inc
mov
inc
push
xor
mov
dec
lods
jl
inc
imul
cmc
pop
xor
cld
inc
add
call
pop
pop
ret
push
std
sub
xor
add
jge
cmp
cmp
mov
push
pushf
outsw
xorl
sub
roll
daa
dec
xchg
fs
sahf
mov
andl
mov
push
or
aaa
add
mov
cltd
scas
cmpsl
mov
insl
or
iret
mov
push
movsb
int3
xchg
jae
sub
aam
sbb
xchg
mov
call
push
mov
popa
and
sub
adc
sub
jl
in
xchg
jo
imul
stos
je
jo
in
push
jno
xor
mov
repz
sub
push
pop
mov
dec
sbb
adc
addl
jmp
iret
ss
dec
sub
lret
sub
sub
inc
and
push
andb
xor
arpl
xor
add
fcoms
sbb
addr16
les
pop
push
sub
mov
adc
cmp
mov
mov
in
je
in
or
sub
in
cwtl
inc
dec
inc
pop
lods
enter
cmp
in
add
jmp
pop
sbb
prefetcht1
inc
sub
repnz
cmp
cmp
scas
pop
push
mov
pop
movsb
sbb
mov
adc
in
imul
adc
fmuls
pop
inc
sub
cmpl
mulb
or
ja
std
mov
call
cmp
xchg
xlat
aam
or
lock
scas
std
jno
inc
xchg
insl
jo
and
pop
or
in
lahf
jne
fwait
dec
sbb
das
sub
add
xchg
or
add
sub
push
sbb
add
stc
pop
cmpsl
paddsb
adc
pusha
sbb
push
xor
mov
out
test
push
stc
push
testl
aam
and
pop
aaa
inc
adc
out
xor
cs
xchg
or
and
sub
setp
aad
sub
fadds
out
mov
cmp
cld
pop
pushf
mov
rcl
add
push
aam
mov
push
add
jmp
out
pop
ret
sub
fstps
and
cld
pop
and
fldt
int3
das
out
or
or
and
push
and
adc
xor
xor
or
xacquire
sti
mov
sub
jge
popa
sub
xchg
jb
xor
pushf
mov
mov
mov
clc
adc
push
xchg
mov
sub
sbb
aam
incl
jmp
movsb
xchg
test
hlt
pop
ret
inc
sbb
outsb
mov
adc
or
mov
nop
push
mov
jb
fs
adc
add
add
flds
push
enter
and
lcall
sbb
sub
and
and
adc
xchg
mov
pop
daa
mov
rcrb
inc
lcall
faddl
out
cmp
mov
sub
push
icebp
dec
pop
xchg
cmpl
add
xorb
dec
mov
mov
ret
daa
fcmovnbe
sub
nop
ja
sarl
das
sbb
out
out
dec
adc
mov
divl
pop
aam
subl
push
xchg
test
ret
add
add
ss
cmp
mov
mov
cs
cmpsl
ret
adc
jecxz
enter
adc
in
dec
mov
cltd
loope
inc
inc
and
mov
xchg
adc
push
and
push
dec
cmp
mov
mov
jne
ret
and
testb
aam
add
fcmovnb
jns
xchg
fdivl
push
mov
inc
loopne
add
fists
and
xor
and
add
ffree
outsl
scas
repnz
lods
xchg
fsub
push
or
in
dec
add
in
mov
in
inc
sub
js
fdivl
mov
inc
daa
lds
jnp
dec
pop
xchg
aad
add
lods
mov
setno
test
fs
xor
movsl
leave
les
push
popa
xor
xor
cmp
xor
popf
or
dec
and
pop
movsb
test
hlt
push
mov
mov
mov
insl
push
test
or
mov
imul
jmp
int3
mov
les
popa
jge
sbb
flds
mov
outsl
add
in
add
mov
adc
push
jmp
xchg
test
xlat
rcl
shlb
and
or
pushf
sub
lock
arpl
pop
aad
pop
pop
testl
add
out
sbb
mov
inc
stos
sbb
mov
inc
sub
pusha
cmovl
sbb
mov
incb
dec
js
repz
xchg
ret
and
lret
mov
mov
adc
add
nop
into
out
mov
sbb
sarb
inc
rcrl
pop
mov
dec
dec
fld1
push
test
or
jge
lcall
sarb
xor
dec
sub
gs
pop
add
mov
pop
pop
enter
xor
hlt
in
cmpl
dec
pop
mov
add
or
call
mov
lods
or
std
add
or
lods
lods
push
test
pop
add
mov
adc
clc
jge
nop
sbb
mov
nop
in
test
jno
adc
adc
popf
call
loop
add
dec
cmp
sub
outsl
jmp
daa
rorl
push
add
subb
pop
sub
dec
fs
adc
xor
push
out
mov
pop
mov
push
popl
lds
or
fidivs
stos
daa
sub
adc
mov
lock
add
ja
call
test
std
les
pop
repnz
xor
or
add
ret
adc
mov
cmc
mov
cmp
mov
inc
loopne
sbb
jle
and
fcompl
imul
in
and
cs
xchg
push
dec
or
mov
sub
push
xor
shl
int3
inc
push
mov
pop
sti
nop
dec
fsubs
or
mov
icebp
popa
push
and
movsb
loope
adc
add
sbb
aaa
add
pop
jnp
imul
iret
pop
pop
sahf
mov
or
in
push
aas
jmp
jns
sbbl
aam
nop
mov
fsubrl
dec
or
es
jmp
aam
dec
lcall
and
jge
mov
mov
mov
push
or
bnd
dec
lods
cmc
inc
xchg
jo
and
testb
push
xchg
aam
xor
xchg
lcall
loope
xchg
xchg
adc
and
sbb
popa
out
mov
sbb
mov
flds
sub
sbb
addb
loope
mov
cmc
sbb
pop
call
cmp
jne
aaa
or
or
jmp
sub
movsbl
and
add
ror
mov
mov
add
push
cld
es
add
addb
inc
shlb
inc
sbb
fimull
cmpsl
mov
paddusw
jecxz
xchg
out
xor
xor
mov
pop
adc
push
enter
or
pop
lret
adc
add
xor
mov
add
into
and
and
jbe
cmpb
pop
pushl
enter
in
cmp
cmp
sbb
pop
fistps
cmp
sub
scas
test
fidivs
sub
adc
test
jmp
mov
out
out
daa
pop
loopne
cmp
lock
shl
hlt
idivb
jge
add
mov
cmp
movsl
rcrl
dec
arpl
mov
jle
or
or
jbe
nop
lods
test
pop
pop
inc
in
mov
lret
push
mov
loopne
stos
ret
jmp
subb
add
lock
or
cmpl
pop
push
arpl
loop
sbb
sarb
add
or
ret
aas
push
sbb
mov
inc
sbb
test
jle
shl
shlb
and
jne
jmp
daa
adc
xchg
mov
andb
inc
push
je
push
adc
dec
pop
mov
cld
stc
movb
jne
icebp
push
mov
cmp
sar
mov
push
rorl
jae
shll
push
loopne
adc
pop
int
add
clc
adc
je
jmp
push
clc
icebp
aaa
sub
pop
inc
inc
pushf
inc
push
add
fdivrl
cmpl
push
mov
jns
insb
aaa
cmpsb
pop
das
inc
add
jns
and
shl
xor
jnp
stos
add
or
or
jmp
jne
xchg
inc
and
aaa
ret
pusha
pop
inc
add
mov
add
add
cmpsl
out
dec
out
adc
pop
inc
dec
test
fisttpl
rcl
mov
shlb
clc
scas
cmp
jbe
mov
or
mov
pop
mov
pop
lods
aad
dec
or
adc
mov
sub
jg
test
nop
dec
sahf
out
push
mov
in
fistpll
pop
call
push
sbb
repz
cmp
loope
outsl
addl
jb
je
push
stos
cmp
int3
push
ss
adc
leave
xchg
add
out
testb
pop
mov
je
pusha
fstps
xor
nop
and
sti
ror
push
mov
insb
xchg
cmp
push
push
cmp
pushf
les
in
sub
ffree
or
inc
pop
in
scas
enter
or
test
sub
mov
out
sub
sbb
fmuls
ret
outsl
gs
es
jmp
cmp
sbb
loope
xchg
add
or
dec
ret
enter
or
jae
mov
or
push
add
sbb
xor
lods
xor
jo
negl
pop
cmp
aas
popf
movsl
mov
push
push
and
loop
cmp
dec
add
sbb
push
movsb
lret
rclb
add
loopne
cmp
fwait
outsl
push
mov
mov
inc
dec
call
adc
jo
sbb
ret
push
xchg
mov
jmp
inc
andl
sbb
sbb
xor
cli
push
sub
insb
push
imul
add
stos
push
add
mov
iret
sbb
push
adc
and
sbb
push
insb
inc
push
and
push
leave
pop
or
mov
arpl
enter
mov
mov
push
hlt
pop
enter
inc
cmp
test
imul
inc
hlt
mov
push
jb
inc
sbb
inc
sbb
ret
in
mov
enter
rol
mov
and
into
leave
lock
push
call
rorb
stos
cld
mov
mov
les
in
cmpsb
sub
test
enter
mov
or
cmp
ja
mov
xor
xchg
nop
jmp
sub
aas
sbb
xor
dec
and
cmp
xlat
pop
out
rorb
leave
dec
cmpsb
push
cmp
lret
fstpl
clc
adc
xchg
out
loope
mov
repz
push
pusha
mov
out
ja
lret
or
xor
movsl
std
sbb
mov
sub
mov
adc
cs
ret
cld
mov
push
jb
add
and
dec
fists
inc
test
cmp
xor
imul
clc
hlt
pushf
jmp
jle
pop
enter
sub
inc
push
lea
mov
sub
cld
inc
ja
shr
sub
and
jns
mov
lds
cmp
push
adc
mov
adc
insw
sahf
aaa
int
dec
or
dec
clc
mov
les
sub
push
mov
add
add
mov
add
test
sahf
test
sub
shrb
or
mov
sysret
jnp
mov
and
jg
sbb
cmp
mov
mov
jl
adc
std
sbb
jg
mov
push
add
enter
mov
mov
mov
adc
mov
mov
bswap
aas
cwtl
je
mov
adcl
stos
cmp
pusha
scas
xchg
jnp
adc
data16
pop
dec
or
push
shll
push
scas
cltd
pusha
orps
test
and
push
mov
popl
sub
mov
adc
and
push
mov
pop
xor
aaa
mov
push
mov
mov
cmpl
inc
cltd
addr16
adc
inc
call
js
ficompl
dec
ss
pop
addr16
pop
popa
movb
pop
dec
mov
mov
arpl
mov
dec
pop
shrb
add
push
fists
add
insl
sub
jo
mov
xor
add
lret
nop
jmp
jnp
in
jo
inc
cltd
iret
push
push
xchg
jp
sbbb
or
jg
es
arpl
mov
jne
sub
sbb
movsb
cmp
sbb
push
fmulp
mov
or
stos
pop
dec
outsl
or
dec
jmp
inc
cmp
pop
pop
lods
and
mov
mov
pop
orl
xchg
sti
jmp
sbb
mov
lods
negl
sbb
icebp
add
roll
lods
hlt
mov
dec
jno
xchg
shrb
jg
pop
add
jle
rorb
pop
iret
add
rclb
test
xlat
pop
stos
cmp
faddl
mov
xor
adc
icebp
adc
jmp
adc
lods
or
shrb
xchg
xchg
call
push
lds
dec
xchg
lock
xor
dec
jne
mov
mov
bound
push
sarb
ss
ds
cmp
addb
xor
inc
and
loope
lock
xchg
pop
leave
mov
mov
adc
roll
xchg
loope
inc
ret
icebp
jnp
dec
adc
and
jle
sbb
lds
sbb
jnp
orb
loopne
adc
push
add
dec
pop
dec
pop
je
cmp
sub
adc
push
jae
ret
shrb
stos
lahf
popf
fiaddl
adc
inc
cmp
add
dec
dec
pop
xor
mov
mov
stos
pop
rorb
push
cmp
aas
xor
out
lock
shll
mov
sbb
lcall
adc
sahf
push
cwtl
inc
xorl
jne
daa
scas
jae
shll
out
push
mov
cmp
arpl
sub
sbb
adc
push
imul
mov
mov
pop
pop
cmp
sbb
pop
fisttpl
or
and
jno
ficoms
ficoms
ret
pop
xchg
sub
sbb
inc
lea
mov
mov
fwait
sbb
jge
cmp
loope
mov
mov
test
icebp
push
add
into
xchg
pop
push
lock
and
or
adc
cmp
inc
or
nop
pop
dec
addr16
xchg
aam
outsl
aam
das
or
mov
jns
inc
add
aad
mov
pop
push
enter
movsl
loope
loop
adc
addb
push
call
cmp
fadd
fstl
push
push
add
push
aam
in
dec
cmp
sbb
jne
mov
dec
daa
xor
add
lock
rclb
push
mov
and
xor
bound
or
mov
push
es
dec
pop
mov
jecxz
sbb
fsubs
sbb
aad
pop
setge
ret
jne
movb
outsl
lret
fcom
or
adc
rcr
jmp
add
mov
cmp
adc
addr16
addr16
push
out
icebp
and
or
push
inc
setne
sbb
mov
mov
movsb
popa
xor
loope
jmp
mov
loope
or
pop
cwtl
dec
rolb
mov
sub
jno
add
inc
and
dec
sub
insl
xlat
fmuls
test
adc
fidivs
mov
enter
enter
hlt
push
or
call
shll
leave
mov
push
jg
jns
xor
fsubrs
outsl
add
inc
test
aam
aaa
pop
hlt
and
ret
pop
xchg
adc
pushf
jle
in
dec
jp
das
add
insb
cli
je
or
adc
insl
adc
inc
push
orw
xchg
or
dec
addr16
daa
sbb
xor
mov
sbb
sbb
xchg
subb
adc
inc
cwtl
sbb
inc
adc
or
xchg
rorb
xchg
jo
jno
lret
or
imul
push
inc
xlat
mov
sub
cld
xchg
scas
and
and
das
sbb
push
mov
jo
test
or
and
or
or
or
push
sub
insl
adcl
push
imul
insb
ja
js
aas
jmp
xor
xchg
adc
push
pop
dec
mov
and
adc
mov
jo
cmp
jne
ret
aam
movsl
rolb
lcall
loop
mov
adc
mov
pop
cmp
inc
loopne
or
jno
dec
or
sbb
mov
mov
loope
test
mov
mov
int
dec
ds
movsb
adc
xor
cmpsb
pop
inc
loopne
or
and
adc
adc
and
xorb
adc
cmp
pop
push
push
jge
add
jl
movsb
pop
popf
inc
and
mov
jnp
out
push
push
xlat
xor
js
adc
int3
xchg
sarl
inc
hlt
push
fnstcw
sbb
sbb
add
fnstsw
dec
gs
outsl
jo
cmp
add
out
pop
adc
pop
fcompl
inc
out
lret
ret
pop
pop
daa
cmpsl
pop
repnz
decb
nop
lods
andl
das
add
das
dec
inc
pop
cmp
push
mov
or
scas
clc
xchg
add
xor
lret
and
push
gs
pop
enter
and
cmp
pop
push
cmpb
dec
jg
fs
adc
mov
sub
je
pop
dec
mul
push
fcompl
xor
inc
es
adc
jae
and
adc
add
sbb
dec
jne
push
mov
mov
je
hlt
cmp
sbb
jg
hlt
outsb
and
xor
mov
mov
aad
and
push
cmp
sbb
inc
jne
gs
mov
push
mov
cmpsl
push
fsubs
rclb
nop
push
test
test
sub
mov
dec
es
stc
aas
int3
push
xor
and
inc
jne
mov
cmp
jg
xchg
push
add
push
dec
cmp
xlat
jmp
adc
lret
add
out
outsl
push
in
cmp
dec
sbb
or
sbb
subb
sti
xor
mov
sbb
and
add
inc
dec
jne
test
sbb
popa
subl
sub
push
adc
pop
push
add
out
mov
mov
movl
cld
repz
or
inc
add
sbb
inc
xchg
mov
and
cmp
iret
adc
and
rclb
mov
inc
insl
pop
pop
int3
pop
or
fldcw
inc
and
aas
mov
xlat
imul
mov
rclb
mov
cmp
rcr
xor
and
aas
cmpb
or
movsb
xor
shll
test
notl
jl
addr16
out
fs
sbb
test
jecxz
jle
ljmp
cmc
shlb
mov
xchg
cmp
sbb
roll
or
or
sub
or
dec
popl
lds
mov
ret
insb
mov
stos
inc
xor
pop
push
sub
jge
push
adc
nop
add
push
out
mov
out
rorb
ja
dec
out
inc
push
and
sub
pop
gs
inc
lds
cli
cmp
or
ja
je
mov
stos
push
inc
push
inc
pop
fisubs
push
into
lahf
aaa
push
xchg
out
dec
dec
dec
cmova
inc
bound
int3
push
push
je
dec
push
pop
sbb
loope
mov
xlat
sub
jns
sbb
adc
insb
mov
xor
dec
cmp
push
data16
loop
sbb
loope
inc
push
in
pop
inc
ret
inc
xlat
adc
mov
loope
ror
cmp
jne
jo
and
test
fstpl
movl
mov
pop
or
sub
xchg
mov
mov
and
xor
pop
fildll
mov
enter
pop
adc
popa
inc
imul
xor
push
rcl
inc
sub
xor
cmp
mov
rclb
inc
jmp
push
js
or
inc
lods
out
add
sbb
jno
bswap
cmp
das
dec
addr16
out
add
ror
psrad
es
repnz
add
cmpsl
pop
adc
or
xchg
jle
add
loopne
adc
lret
ss
push
or
insb
mov
inc
fs
or
or
or
push
inc
mov
xchg
sbb
push
and
cmp
adc
enter
lret
xchg
aam
scas
incl
arpl
mov
jmp
leave
and
push
hlt
int3
add
cld
movl
shll
lahf
or
xchg
cmp
pop
fsub
lret
ds
adc
add
hlt
add
adc
incb
jbe
dec
aaa
clc
jne
cmpsb
aam
fcomi
mov
jg
or
mov
xchg
pop
call
rorb
add
fdivs
clc
cmpsl
lock
cmc
subb
mov
mov
sbb
mov
test
fsubrl
jno
xor
jl
xor
aam
pop
loopne
aas
push
and
loopne
jmp
fmul
rcll
sub
lret
mov
jbe
sbb
pop
push
jp
fmul
movaps
ja
loopne
or
or
cmp
xchg
sbb
sbb
jmp
xchg
sub
in
out
imul
adc
ds
adc
repnz
in
lea
jo
das
sbb
rcll
add
mov
add
sbb
jns
mov
testb
mov
movl
shlb
lods
out
push
sub
and
mov
imul
aaa
or
or
mov
or
in
aaa
ja
jne
or
xor
jnp
sub
mov
push
jb
sub
out
mov
cmp
stos
fld
pop
xor
mov
nop
sub
jne
xor
pushf
mov
ret
aaa
mov
loopne
insb
push
test
mov
aas
ljmp
push
add
in
fmul
fisubrl
cmpl
outsb
insb
mov
pop
or
mov
dec
fsubs
or
jmp
cmp
fisttpl
loope
movsb
pop
mov
pop
and
shr
push
or
xchg
jo
or
scas
adc
mov
sub
pusha
xchg
shll
mov
aas
and
xor
jnp
push
daa
mov
or
sub
sbb
fwait
sub
jp
pop
ds
aas
jne
fistpl
push
dec
cwtl
push
mov
aad
fisttpll
mov
addr16
xor
neg
unpcklps
je
cld
push
test
sbb
add
adc
cmp
psubb
lock
cmp
or
push
dec
iret
das
mov
jno
lock
jge
lret
sub
sbb
or
sub
jle
into
les
mov
ret
xor
test
jmp
pop
push
sbb
mov
push
mov
nop
inc
or
flds
pop
and
in
pop
jnp
dec
int3
push
ljmp
jb
pusha
mov
into
lahf
dec
and
call
and
push
pop
add
lds
mov
inc
mov
pop
push
push
enter
das
test
fmuls
adc
mov
nop
mov
and
mov
dec
sbb
mov
jbe
or
nop
subb
dec
mov
push
pop
rcll
mov
or
mov
sub
nop
popl
sbb
push
push
les
neg
add
imul
and
add
adc
push
add
mov
inc
dec
repz
shr
data16
lea
ds
je
jmp
inc
in
adc
mov
jmp
pmuludq
loop
or
enter
ljmp
loop
out
call
xchg
enter
stos
fadds
fsubs
add
lods
add
repnz
lods
or
jns
in
adc
jmp
int
jns
repz
add
shll
jne
idivl
push
inc
sub
add
decl
or
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
outsb
xor
in
decl
jno
inc
mov
movsl
leave
aam
sub
inc
inc
aaa
mov
stc
dec
and
pop
and
adc
pop
xchg
sub
fs
inc
add
jae
mov
lods
push
lds
ja
out
add
push
mov
or
jmp
popa
fidivl
fmul
fsub
push
sbb
mov
mov
xchg
push
roll
test
dec
lods
jb
cltd
iret
ja
jb
add
nop
hlt
mov
jle
pop
loop
in
popf
add
aaa
adcb
ljmp
shrb
test
mov
push
sbb
inc
mov
les
or
insb
inc
xchg
pop
push
add
push
or
adc
adc
in
nop
in
push
jae
xor
nop
aaa
test
push
sub
js
test
adcl
add
jcxz
sub
add
fiadds
cltd
and
bound
divl
xchg
and
lock
iret
orb
pop
dec
mov
add
ret
inc
cld
jo
pop
pusha
jl
jecxz
fs
xor
stos
jp
mov
rcl
mov
and
pop
inc
aad
pop
mov
inc
or
test
sbb
pop
adcb
xchg
adc
je
add
pop
jno
or
pop
mov
cwtl
mov
inc
mov
icebp
popf
adc
fisubs
inc
inc
and
cmp
das
insl
and
in
sbb
sbb
and
adc
adc
outsl
cmp
or
fs
jne
movsl
dec
jne
outsl
js
icebp
les
jmp
xchg
into
popa
addr16
and
xchg
nop
test
fistpl
xchg
test
icebp
movsl
rolb
testl
aas
sbb
push
mov
jmp
adc
orb
cmp
dec
adc
add
and
xor
aad
lods
test
js
push
push
and
xchg
dec
push
fistpll
xorl
test
or
mov
mov
jmp
repnz
xchg
mov
mov
xchg
frstor
jnp
cmp
ljmp
cmp
clc
divl
rcl
je
loop
movsb
fxam
pop
aam
das
inc
ja
or
cltd
lea
enter
pop
fdivl
add
stc
and
push
cmc
pop
mov
cmp
shlb
mov
cmpsb
ficomps
lret
push
adc
push
mov
xor
and
into
fadd
outsl
je
nop
aam
add
mov
sub
jo
in
add
cmpsb
dec
sbb
jno
and
inc
sbb
call
lret
xchg
fwait
jge
sub
pop
loopne
jbe
lds
sub
arpl
test
inc
sub
sub
loope
cmp
cmp
ja
mov
sbb
repz
fistpll
jo
xorl
ret
hlt
inc
addl
aad
inc
fdiv
scas
call
test
cli
cld
sbb
js
cs
jmp
pop
dec
xor
cmp
dec
jne
cmc
dec
mov
cmp
xchg
out
ret
rclb
cld
aas
aaa
dec
addr16
aad
mov
pop
pop
sbb
add
imulb
and
add
dec
sbb
add
out
lea
pop
push
push
ja
or
dec
int3
jge
test
hlt
scas
cmp
xchg
inc
outsl
or
xchg
shll
mov
sbb
inc
jmp
sbbb
fildl
fdiv
mov
cmp
dec
shr
xchg
sbb
incb
pop
cmpb
mov
ret
or
jo
xchg
into
aaa
je
test
cmp
push
imul
or
mov
jg
es
cmpsl
and
clc
clc
addb
mov
sub
and
jb
add
aam
adc
pop
inc
adc
sbb
mov
loopne
xor
outsl
lock
and
mov
xchg
or
aad
iret
int3
int3
mov
ret
push
pop
jmp
pop
mov
push
clc
push
jno
cmp
or
in
add
mov
cld
es
dec
fiaddl
inc
lock
sub
idivb
lret
stos
sarb
ret
jo
inc
fistps
lahf
push
flds
sub
stc
or
lds
add
icebp
xchg
cmp
xchg
lret
dec
adc
cwtl
add
stc
cmpsl
xor
or
adc
push
lea
rclb
aad
jmp
push
inc
add
cmp
in
mov
lea
pop
push
push
ret
pop
add
or
test
movsl
mov
add
pop
or
and
je
or
das
data16
adc
xor
mov
sbb
aam
xor
pop
stc
loopne
jmp
lods
jmp
push
and
xlat
and
cmpsl
test
inc
les
xor
aad
mov
dec
fcmovnbe
sti
cmp
mov
push
out
mov
hlt
loopne
test
loop
loopne
mov
or
cwtl
aad
xor
mov
dec
in
lods
inc
cwtl
jo
add
jbe
or
test
mov
push
scas
inc
cld
out
or
add
addl
sub
push
sbbb
cmp
fsubrl
test
test
mov
dec
fdivr
mov
sbb
or
cltd
dec
sahf
adc
data16
push
pop
insb
pop
daa
and
xor
xor
sub
sbb
adc
mov
sub
lea
movsb
pop
adc
insl
fst
mov
cmp
pop
adc
pop
mov
imul
shlb
mov
or
xor
cld
mov
roll
jns
and
lock
shll
cmpb
sub
dec
and
je
dec
xor
lahf
or
xor
sub
iret
insb
xor
mov
in
mov
pop
inc
test
aas
or
xchg
mov
orl
divl
add
mov
movsl
jl
test
mov
popa
mov
xchg
pop
pop
adc
sub
or
push
and
mov
insb
push
clc
or
rclb
jmp
jmp
div
fldl
data16
jb
je
dec
ret
push
sbb
jae
std
jmp
out
add
or
add
aaa
add
andl
mov
adc
arpl
xchg
pop
or
sbb
jno
movsb
push
stc
and
pop
push
and
loopne
sbb
ss
fiaddl
cs
or
push
outsl
jg
add
add
push
pop
inc
add
add
lock
sub
sub
insl
or
movsl
lods
mov
push
and
sbb
jne
mov
mov
add
pop
scas
dec
orl
cmp
fcom
jmp
cmp
sub
push
mov
sti
pop
jmp
push
lock
push
adc
xor
outsb
mov
loope
xor
movsl
ret
xchg
mov
add
add
dec
add
bound
fsubr
ss
es
and
lock
xchg
out
jl
jl
inc
or
and
sub
outsl
das
adc
lods
and
mov
push
xchg
mov
jge
adc
sub
mov
xor
mov
cmp
cld
or
jle
cmpl
jb
xor
xor
pop
js
jl
mov
inc
rorb
or
or
add
cld
pop
jg
push
lea
lea
movsl
add
inc
and
ds
jb
push
pop
add
je
test
add
mov
push
inc
dec
push
movsb
sub
sbbb
je
or
pushf
mov
or
push
xchg
adc
in
es
add
and
fs
add
add
cmpl
daa
jo,pn
dec
in
jl
adc
pop
outsl
cmc
inc
or
pop
and
push
add
fs
pop
sbb
mov
mov
or
andl
gs
bound
lea
sbb
icebp
inc
add
xor
mov
addr16
mov
cbtw
push
mov
ss
sub
notl
out
sub
sarl
xor
mov
push
push
adc
adc
hlt
out
push
adc
inc
outsb
jne
xchg
popa
jns
jae
lock
inc
pop
dec
mull
xor
sbb
mov
xchg
iret
movsl
pop
add
and
dec
decl
out
mov
add
shlb
lahf
lret
adc
add
push
push
inc
push
mov
dec
dec
add
and
sbb
sub
inc
lock
jae
push
clc
cld
out
das
je
push
push
or
cmp
arpl
arpl
cwtl
push
es
out
in
add
loopne
jle
daa
mov
jl,pn
daa
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
shr
subb
cli
pop
sahf
mov
or
xor
movsl
inc
push
das
inc
mov
sub
xchg
nop
jae
add
xor
subl
adc
insb
outsl
add
sub
test
inc
jne
bswap
leave
leave
leave
jbe
js
leave
leave
leave
leave
jp
jl
leave
leave
leave
leave
jle
pusha
popa
leave
leave
leave
leave
bound
gs
leave
leave
leave
addr16
leave
leave
leave
push
insb
insl
leave
leave
leave
leave
outsb
outsl
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
xor
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
ss
cmp
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
ds
and
leave
leave
leave
leave
and
and
sbb
into
leave
es
pop
lea
pop
ljmp
jb
out
lods
or
or
adc
adc
add
xchg
inc
aas
add
inc
push
imul
jb
fs
shlb
pop
leave
inc
push
stos
into
inc
out
add
push
jecxz
addl
or
cmpb
sub
lret
out
add
mov
jmp
adc
jmp
ret
dec
add
sub
and
rorb
dec
cli
test
data16
insb
insb
add
lcall
and
push
or
seta
sub
sbb
mov
cmp
dec
cmp
lea
pop
mov
sbb
test
das
insl
push
mov
loopne
in
dec
adc
cmp
inc
dec
and
hlt
fnstcw
jbe
lgs
pusha
push
push
xchg
xchg
mov
test
jmp
adc
icebp
inc
sbb
inc
fistps
mov
and
and
or
jo
ficoms
dec
aam
add
setno
sub
or
jle
cwtl
inc
incl
test
je
pushl
mov
inc
adc
clc
sahf
sub
loope
xchg
mov
and
fisttps
cmp
dec
nop
xor
jmp
flds
daa
pusha
aad
or
iret
adc
or
mov
out
or
out
lahf
jmp
inc
lds
push
mov
pop
and
push
in
stos
pop
cwtl
ret
xor
mov
inc
sub
lods
xor
mov
mov
nop
bound
and
pop
rcrb
fsubr
push
xor
dec
add
pop
and
push
ss
js
jge
jne
in
insl
fcoml
clc
movsb
or
xchg
subb
add
add
add
outsb
inc
or
and
iret
mov
pusha
mov
cmp
movb
lods
scas
push
cmp
mov
jecxz
inc
loope
jae
test
push
mov
mov
sbb
and
filds
jns
nop
test
cs
movb
sbb
add
xor
arpl
mov
or
inc
inc
prefetchnta
insl
sub
xchg
mov
frstor
es
outsl
outsb
je
imul
pop
xor
data16
and
pop
add
mul
add
adc
stc
mov
jae
movsb
xchg
or
pusha
mov
add
push
xchg
mov
jae
je
fidivl
dec
rcr
push
je
insb
loope
mov
jno
xor
data16
add
cltd
enter
je
arpl
adc
outsb
repz
mov
xor
mov
ss
mov
and
insb
or
dec
inc
cmpsl
cmp
outsb
int
push
cs
jo
outsl
sbb
push
fldcw
add
sbb
fimuls
push
inc
jl
xchg
int3
lods
mov
xchg
mov
or
push
lods
jb
push
inc
insb
sbb
lret
add
daa
aam
xchg
outsb
mov
les
insl
inc
insb
sahf
cmpsb
mull
push
push
push
push
jo
call
push
inc
jns
sbb
or
imull
gs
and
rcrb
insl
ja
xor
pop
xor
or
adc
sub
adc
je
add
jne
xchg
out
or
bound
pop
sti
jo
xor
dec
jl
jp
dec
mov
sub
sbb
je
adc
inc
add
addr16
inc
imul
jae
es
adc
cmp
out
pusha
pop
inc
push
dec
add
pop
lods
and
test
decl
andps
add
mov
pop
mov
cmp
xor
sub
xchg
push
xor
inc
sub
and
sub
and
insl
fwait
cmpb
dec
nop
or
xchg
push
push
sahf
out
cmp
sub
and
in
xchg
jo
push
pop
push
mov
mov
and
std
xor
sahf
sahf
fdivl
add
or
pop
or
pop
dec
or
xor
inc
jecxz
push
hlt
add
bound
aad
outsl
orb
call
add
add
lcall
addb
out
inc
rorb
cli
mov
push
adc
xor
add
cmp
xor
or
sbb
movsb
int3
dec
insl
and
rcrl
add
mov
ss
push
add
push
cs
jl
pop
cltd
adc
jl
pop
mov
mov
les
mov
adc
push
add
mov
lahf
pop
sbb
cmp
pop
or
xor
pop
repnz
add
xor
add
bound
add
add
jnp
loopne
mov
fisttpl
pop
pop
mov
or
push
xor
push
mov
nop
inc
shrb
test
jae
dec
test
push
test
movzwl
add
add
xor
decl
mov
and
add
adc
jo
addr16
pop
mov
pop
outsl
cmp
inc
pop
jl
inc
insb
outsb
push
mov
mov
jae
pop
sbb
push
jno
js
movsl
rclb
jmp
or
js
int3
pop
and
pop
aas
push
int3
push
or
sub
bound
pop
add
mov
dec
scas
dec
xor
add
jnp
xor
pop
test
insb
ret
je
or
or
jo
push
xchg
movsl
lcall
outsb
adc
inc
insb
xchg
mov
orb
inc
push
add
fcomp
mov
arpl
xchg
push
xchg
lock
gs
dec
outsl
ja
decl
or
adc
push
inc
add
dec
jae
fcmovne
inc
or
add
jb
adc
leave
pop
xor
pop
sub
push
xchg
ret
sbb
movsb
sbb
xor
fdivrl
xchg
inc
fmul
daa
sbb
adc
mov
loop
cld
jp
aam
sbb
mov
dec
jnp,pn
sbb
pusha
push
add
xor
sbb
jnp
push
sub
loopne
movb
fcoml
cmp
cwtl
push
sysret
in
adc
out
cltd
popf
pop
jo
paddq
pop
add
aaa
mov
mov
jl
pop
fsubs
mov
out
add
inc
push
or
inc
outsl
pop
and
enter
cmp
cmovge
stos
fdiv
push
cmp
fcomp
jge
mov
dec
xor
insl
jne
stos
mov
push
add
sbb
xchg
xor
fs
add
push
push
pushf
shrb
pop
shrb
mov
dec
pop
inc
out
ret
cwtl
mov
or
pushf
push
xor
je
sbb
pop
and
push
push
shlb
add
and
xor
dec
faddl
push
push
les
dec
insl
push
dec
mov
inc
sbb
out
ds
test
imul
push
adc
popa
mov
xchg
ss
ret
nop
nop
mov
or
clc
xor
mov
in
inc
cmp
in
js
inc
or
adc
fdiv
call
mov
xchg
jge
lret
addr16
insb
push
push
pusha
imul
sbb
push
mov
aam
xchg
push
and
ret
stos
dec
je
xchg
call
pop
jno
push
or
adc
and
aam
xchg
das
push
sbb
sbb
leave
stos
dec
jl
jl
jle
fwait
out
sahf
push
cwtl
push
orl
call
fmull
fidivrl
fs
pxor
in
mov
push
and
sub
int3
push
cld
pusha
push
lock
pop
mov
popa
adc
outsl
pop
sbb
or
les
and
or
test
sbb
nop
pop
repnz
call
int3
xchg
fmulp
dec
dec
cld
xchg
pop
xchg
mov
aaa
loopne
lahf
loopne
inc
loopne
inc
nop
sbb
xchg
js
jnp
and
jo
pop
add
jg
push
pop
sbb
jae
cmp
xchg
int3
fwait
xlat
movsl
sbb
or
xchg
aaa
adc
lods
sub
add
std
mov
pop
inc
sub
daa
iret
adc
inc
in
adc
add
push
push
pop
rorl
xchg
data16
add
jne
testb
mov
sbb
adc
or
call
sub
fsubs
adc
sbb
lock
fisttpll
add
nop
lcall
enter
and
daa
or
enter
and
data16
jmp
dec
push
cmpb
ljmp
push
movsb
testl
mov
xchg
test
xor
adc
xchg
jne
xchg
push
dec
or
ret
cs
or
mov
loop
xchg
jge
bound
pop
or
pop
adc
ret
cmc
out
ret
adcb
sti
es
and
xchg
mov
xor
inc
decl
lock
adc
adc
popf
sbb
data16
cmp
addl
or
idiv
adc
jns
das
xchg
and
les
imul
push
or
and
outsl
loopne
dec
pop
in
inc
jnp
xchg
aaa
sbb
ljmp
or
cmp
mov
std
xlat
cmp
add
and
mov
sbbl
sti
je
incl
jle
leave
xor
dec
fst
cmpsl
insb
cld
pusha
or
lret
adc
js
sbb
mov
and
xor
mov
repz
push
jbe
adc
push
stos
mov
sbb
movsl
jmp
or
in
and
mov
or
out
jmp
cmpsl
inc
cmpsl
daa
arpl
sub
mov
inc
fdivrp
adc
mov
mov
mov
lods
jae
sbb
into
jl
jb
dec
push
cmpsl
dec
sub
test
test
or
adc
xchg
pushf
cmc
or
arpl
out
push
arpl
popa
jb
outsl
outsb
inc
pop
add
insb
imul
push
xchg
jbe
add
jb
insb
gs
pusha
mov
popa
insb
pop
or
jbe
push
imul
or
out
in
iret
pop
gs
insb
outsl
ja
mov
inc
or
arpl
add
popa
inc
jno
popa
mov
pop
pop
or
orl
xchg
push
imul
test
inc
xchg
das
and
push
or
inc
outsl
sbb
in
insb
das
cmovae
push
int3
scas
pop
jo
push
pop
imul
adc
mov
push
addr16
add
inc
int3
das
inc
je
jne
lods
mov
dec
adc
sbb
dec
sbb
or
roll
sub
gs
mov
pusha
cmp
mov
inc
xor
pop
xchg
ss
lahf
sbb
ficoml
or
addl
xor
or
push
test
andl
mov
js
insb
jg
fcomip
fwait
and
aaa
adc
adc
add
out
inc
outsb
cmpsb
add
sbb
xor
jne
in
sub
pop
xchg
daa
pminub
inc
xor
or
lahf
loope
xor
dec
cs
push
arpl
jmp
inc
insb
mov
imul
shrl
or
or
or
and
sub
fidivrs
mov
mov
mov
movsb
jnp
dec
mov
in
xor
sub
push
adc
or
add
mov
incl
inc
dec
push
dec
pop
inc
dec
inc
push
push
sbb
scas
loope
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
push
push
testb
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
fcomps
dec
dec
and
out
inc
inc
xor
xor
outsl
fwait
aaa
and
movb
and
inc
xor
xchg
inc
push
inc
inc
dec
mov
cmp
dec
dec
push
dec
dec
mov
test
das
sbb
mov
inc
repnz
inc
dec
push
mov
dec
inc
dec
xchg
push
dec
pop
adc
inc
push
push
push
dec
push
inc
scas
dec
inc
fidivrl
nop
dec
push
mov
lahf
sbb
jmp
push
mov
lret
cli
mov
mov
and
js
xor
sub
jo
iret
andl
stc
fisttpl
mov
orb
adcb
adc
add
loope
and
pop
mov
rolb
fs
and
out
aad
sbb
and
dec
sbb
loopne
shlb
mov
jle
sub
or
jmp
add
mov
cld
mov
or
mov
or
enter
jo
sub
es
pop
and
fcomps
push
adc
add
add
cmovl
inc
xlat
xor
jno
stos
adc
adc
lods
lahf
js
dec
repnz
or
ret
sbb
dec
mov
dec
dec
jle
call
xor
xorb
loopne
je
jne
mov
movlps
sbb
loop
insb
and
push
add
jns
cld
inc
xor
neg
xorb
inc
insb
inc
adc
les
or
loop
addr16
jb
adc
jmp
push
cld
and
push
sbb
repz
jle
clc
mov
cmp
mov
jne
or
movsb
jo
cwtl
lret
divl
dec
mov
mov
mov
insb
sub
gs
pusha
sahf
jae
rorl
xchg
in
dec
sbb
dec
jge
mov
shrb
sbb
enter
aam
lods
push
je
shlb
jmp
adc
inc
aam
mov
add
or
loopne
pop
or
adc
cmpsl
rcl
add
in
xlat
jmp
cld
loopne
je
les
mov
and
mov
push
mov
or
sbb
pusha
add
mov
push
popf
sbb
fs
mov
jb
dec
fidivrl
or
mov
mov
push
or
mov
data16
and
pop
jo
in
cmpb
adc
push
lods
inc
aaa
clc
pop
insb
and
mov
push
fisubl
inc
fwait
outsl
xor
jmp
fadds
flds
popa
into
push
mov
push
push
or
loop
fildl
pop
push
xlat
or
dec
fnsetpm(287
andb
xchg
enter
andl
lcall
dec
mov
push
dec
mov
cwtl
jmp
dec
sbb
aam
mov
push
adc
xchg
xor
repz
scas
inc
or
notl
or
test
pop
arpl
jne
popa
cmp
adc
add
shrb
pusha
in
pushf
inc
xchg
push
pusha
popa
rclb
stos
xor
jo
xor
ja
imul
sub
test
aam
inc
pop
cwtl
imul
mov
xor
push
das
arpl
pop
outsb
neg
push
mov
add
mov
ret
and
lds
pusha
insb
cmp
rolb
push
and
adc
call
ds
cmp
push
mov
dec
pop
mov
sbb
jb
push
outsl
push
call
push
sbb
inc
jb
and
movsb
add
adcb
inc
sbb
rolb
shrb
dec
bnd
dec
enter
xor
nop
sarb
cwtl
jb
and
push
xor
mov
xchg
or
pushl
loopne
ljmp
pushl
or
xor
xor
mov
loopne
nop
and
adc
mov
jp
jne
out
faddl
xor
loop
rolb
jmp
add
movsl
lock
or
sarl
sbb
adc
xchg
out
pop
loopne
xor
push
cmpsb
and
lock
jb
inc
and
and
adc
xchg
pop
xchg
aas
and
or
test
and
sub
and
je
mov
nop
adc
cmp
in
add
mov
push
mov
adc
and
repnz
xchg
mov
add
mov
sarl
mov
push
cmp
xchg
jno
sub
and
imul
adc
adc
xchg
and
and
daa
and
xchg
xor
add
mov
sbb
in
add
inc
jne
sbb
cmpsb
push
pop
clc
rolb
loopne
flds
jo
loopne
shll
ret
cltd
xchg
push
popa
and
ljmp
jmp
jmp
jbe
xchg
sahf
popf
add
adc
imul
sahf
or
arpl
hlt
in
and
xchg
js
dec
sub
fwait
mov
xor
xchg
cmp
sub
jo
dec
mov
sti
movsb
jne
mov
xor
jne
and
dec
sbb
inc
cmp
add
adc
push
jle
aam
inc
pop
mov
push
jns
test
pusha
adc
pop
adc
das
pop
xor
and
adc
loope
inc
cwtl
movl
add
cmp
adc
sub
stos
pusha
inc
adcb
pop
loopne
lea
imul
sub
jecxz
clc
jb
lea
or
jno
inc
adcl
and
loopne
adc
fcompl
sbb
mov
sbb
push
mov
sub
jo
mov
pop
or
or
mov
push
push
or
push
push
fstps
mov
fwait
xlat
out
movsb
xorl
daa
push
mov
push
inc
push
cmova
cmpl
enter
sub
sub
xchg
and
nop
push
fs
mulb
xor
push
ds
in
movsb
loopne
sbb
adc
ret
add
adc
in
cmp
pop
add
es
ficomps
out
push
in
loopne
fmuls
leave
mov
adc
sbb
enter
jbe
cs
repz
es
lods
aam
lea
sub
leave
sbb
mov
enter
cmpsl
add
sbb
fadds
xchg
add
cmp
pop
add
xchg
adc
sbb
ret
bswap
mov
bound
mov
push
push
xor
xchg
lds
shlb
cwtl
pop
popl
add
xor
or
bound
arpl
add
cmp
add
pop
jp
dec
pop
mov
mov
sub
popf
mov
int
orl
add
sbb
mov
lahf
sbb
adc
mov
sub
mov
mov
pop
and
lea
movsl
movsl
rcll
sbb
push
and
push
je
cmp
js
sahf
add
dec
add
cmp
outsl
add
xchg
data16
and
jecxz
pop
mov
pop
mov
test
shlb
test
or
out
out
or
shlb
dec
sahf
push
ret
sbb
in
loope
push
jnp
xor
test
mov
scas
or
aas
es
add
inc
push
sbb
pop
aas
pop
pop
add
arpl
sub
orb
mov
mov
dec
push
insb
dec
rol
jae
pop
or
shll
sbb
cmpsb
outsl
mov
cmp
je
neg
or
xchg
push
adc
leave
pop
ljmp
cmpb
ds
insl
push
add
jl,pn
add
push
rorb
or
or
shll
repz
push
sub
sbb
inc
xchg
or
sbb
enter
and
rorl
outsb
add
pop
pop
out
and
nop
sbb
icebp
jne
sbb
add
add
cwtl
inc
xchg
sub
adc
idivb
insb
adc
xor
dec
and
in
mull
dec
hlt
push
inc
das
cwtl
loopne
icebp
inc
mov
inc
pop
pop
inc
jbe
mov
push
es
orps
push
inc
push
enter
cmp
inc
in
xchg
inc
xchg
nop
outsb
xor
dec
ret
push
lret
add
push
jo
ljmp
cmp
sbb
lea
or
add
aaa
inc
pop
sbb
les
xor
or
sub
inc
inc
cld
ret
imul
add
cmpsb
into
xor
and
repz
jge
fxch
add
movsb
cmp
in
dec
pop
repnz
int3
push
push
int3
popa
or
push
push
add
lar
and
jp
test
add
sub
cmc
fwait
aad
imul
test
pop
clc
mov
inc
movsl
addr16
mov
je
cmp
fists
dec
sahf
jbe
sbb
in
push
cli
es
jle
push
out
in
xchg
lcall
xchg
inc
xor
imul
push
adc
mov
xchg
inc
inc
popa
lock
push
mov
imull
and
add
cwtl
ret
dec
mov
rcr
adc
add
cld
cmp
fiaddl
fincstp
shll
fnstcw
jo
add
movsb
movsl
add
faddl
pop
sti
jge
sbb
cmpsb
insb
cmp
adc
jne
xchg
sbb
sbb
jge
lds
pushf
adc
adc
punpckhbw
add
xor
jecxz
imul
inc
je
shlb
mov
or
fwait
test
fs
push
inc
push
push
addr16
mov
cmpsl
cmp
insb
and
sbb
push
sub
dec
jmp
outsb
imul
jns
pop
bound
cwtl
push
push
add
loope
xor
sub
inc
inc
adcb
lods
das
inc
aam
mov
mov
pushw
sub
push
movsl
or
add
stos
dec
imul
sub
dec
inc
and
or
push
mov
dec
cmp
adc
fiaddl
xor
xchg
sub
push
mov
fdivr
insb
out
imul
add
lea
add
dec
pop
add
pop
dec
add
add
dec
adc
movb
lods
xor
mov
dec
add
adc
dec
pop
cld
insl
add
mov
push
loope
dec
rcrl
pop
pop
adc
inc
dec
jne
and
idivl
mov
sub
adc
adc
mov
adc
sbb
add
add
and
jae
sbb
lods
push
das
in
mov
xchg
into
push
cmpsb
pop
negl
or
dec
js
and
push
pshufw
or
jns
mov
aad
mov
mov
sub
shl
rcl
sti
or
jmp
cltd
xchg
movw
jl
inc
and
cld
push
mov
stos
mov
cld
aad
add
jo
inc
push
add
adc
mov
aas
int3
adc
or
cld
rolb
test
add
ds
ds
mul
xor
inc
movzwl
lea
sbb
push
pop
push
cmp
cmp
daa
jmp
fdivl
and
out
or
cmp
cld
icebp
nop
cmp
fadds
cmp
mov
add
push
inc
movsb
ret
in
inc
add
mov
jl
jle
pushl
icebp
inc
das
jo
mov
add
or
xchg
or
fimuls
leave
clc
or
add
mov
pop
orb
fidivrs
adc
pop
push
push
pop
clc
popf
mov
mov
mov
mov
push
inc
lods
orb
es
mov
bound
sub
push
int
rol
xor
cwtl
movups
mov
add
in
fs
pop
orb
mov
andb
shrb
movsb
lcall
add
insl
out
ss
loopne
jmp
push
popa
ret
and
cmp
inc
push
outsl
push
jbe
mov
dec
jo
leave
shlb
adc
pop
in
inc
in
inc
jl
push
loope
xchg
lahf
add
xchg
sub
jnp
hlt
xchg
lret
cmp
test
shlb
xor
jge
or
scas
addb
push
js
jb
push
gs
dec
and
clc
xlat
mov
hlt
and
and
lret
dec
imul
cmp
add
sbb
sbb
xchg
out
add
shlb
in
mov
imul
mov
movl
or
dec
insb
cmpsb
and
insb
pop
cld
push
push
enter
test
add
dec
and
jae
dec
mov
lods
lock
or
test
add
mov
push
pop
mov
or
inc
sub
sbb
in
adc
sub
jne
ss
lock
rcrb
dec
rol
mov
xor
std
cmp
jg
test
jle
cmp
jl
cmpsb
aaa
enter
in
lcall
pop
clc
jle
inc
add
add
pop
test
shl
fs
lods
and
orb
pop
and
mov
rol
aad
or
jne
push
inc
mov
or
add
adc
mov
and
push
add
fmul
jno
nop
fdivrs
jmp
xchg
sbb
scas
call
cmp
or
in
and
sbb
adc
dec
fdiv
hlt
add
add
imul
hlt
mov
add
incb
ret
in
sub
loopne
es
cmp
dec
lock
fisubrl
rorl
cli
mov
in
fists
xchg
jne
cmp
popf
xchg
add
xor
ja
js
cltd
xor
cld
aaa
mov
sub
cli
adcl
add
sub
add
mov
movsl
adc
repz
les
leave
xor
push
jo
push
dec
or
pop
add
mov
inc
pop
nop
nop
mov
and
nop
pop
push
pusha
mov
insl
mov
push
mov
imul
mov
test
rorb
jge
mul
aam
inc
rolb
repz
mov
insb
fdivs
add
inc
mov
mov
adc
outsl
add
or
or
jmp
add
adc
imul
aas
add
into
xor
or
inc
lret
mov
test
aas
jne
in
dec
or
rorb
dec
lret
mov
xor
lods
movsl
pop
xor
sarb
out
adc
test
rclb
sbb
lea
pop
hlt
in
aas
and
sbb
sub
push
outsb
pop
sti
lea
or
mov
in
adc
sub
add
xor
scas
movb
cmovs
push
jle
lock
jmp
lret
lods
push
jmp
cmovnp
jmp
adc
add
imulw
xor
inc
inc
and
stos
add
jae
and
add
sbb
and
push
sub
sub
or
loopne
orb
mov
int3
pop
xor
dec
xchg
lret
rol
arpl
je
out
icebp
out
cwtl
loopne
imul
add
add
xor
stc
push
addl
pushf
mov
sbb
push
pop
sbb
or
xchg
xor
and
lock
daa
mov
out
in
sub
imul
aad
dec
push
mov
aaa
mov
xor
sub
inc
jbe
pushl
lcall
hlt
hlt
push
and
ljmp
or
mov
push
xchg
cmp
inc
nop
jge
jno
lahf
lods
mov
pop
pusha
call
testb
dec
repnz
lods
adc
gs
jg
push
xchg
push
add
pop
push
and
mov
imul
hlt
int3
and
cmp
ret
loopne
push
ja
subl
pushf
xor
in
call
loopne
push
cmp
mov
in
out
and
ljmp
int3
jg
sbb
add
add
mov
or
iret
in
and
repz
inc
fmuls
fidivl
mov
scas
insb
in
cmpsb
add
push
lods
add
or
popa
ja
push
orb
jle
push
daa
test
in
jb
lods
mov
mov
into
push
xchg
dec
hlt
lods
rcrl
mov
fsubr
in
stos
add
std
fdivrl
dec
hlt
loopne
fcoml
shr
push
aas
push
xorb
sbbl
mov
je
pop
movb
out
adc
xchg
push
push
jl
lods
add
aaa
pop
and
mov
sbbb
dec
je
lods
sbb
shl
inc
cmpsb
loopne
dec
or
adc
xchg
adc
push
xor
xchg
mov
xchg
xor
inc
push
lcall
lock
push
inc
or
xchg
jle
jno
xorl
and
adc
fcomps
sub
pop
adc
sub
xchg
ss
je
imul
rolb
sarl
push
xchg
dec
in
test
hlt
add
mov
popf
addl
sbbb
and
pop
jne
cmp
insl
cmp
sub
xchg
lret
mov
or
cmp
inc
dec
xlat
inc
lret
inc
pusha
pop
push
ds
orb
cmpsl
inc
arpl
push
jo
push
xchg
cld
push
rcrl
nop
lret
cld
pop
add
sbb
xor
adc
jecxz
lock
push
scas
xor
mov
sbb
adc
into
pop
add
pop
pop
adc
addr16
xor
xor
cmp
and
or
mov
push
adc
pop
push
pop
insb
loopne
fistpll
sbb
push
fidivrl
push
add
ds
cmp
rcll
add
or
lahf
and
push
xlat
and
push
xchg
inc
xchg
pop
fldcw
lcall
mov
add
clc
mov
cmpl
mov
dec
hlt
mov
mov
xchg
lock
repnz
push
lock
xchg
xlat
stc
xchg
arpl
insl
popw
imul
bound
movl
outsl
negl
inc
das
or
push
dec
pop
pop
or
dec
ljmp
push
test
movl
mov
cmc
scas
pop
popf
mov
in
cmpsl
dec
mov
add
gs
xchg
dec
dec
or
pminsw
or
adc
adc
popa
xor
cltd
adc
mov
push
daa
ds
inc
xchg
dec
dec
jecxz
cmp
dec
and
clc
mov
ret
jno
push
pusha
mov
xchg
test
out
pop
inc
clc
test
pushf
cmp
aas
or
aas
aad
out
pop
inc
add
imul
outsl
inc
adc
pop
dec
pop
or
sbb
mov
inc
add
mov
test
sbb
and
xchg
push
roll
mov
shll
sub
shl
push
xchg
js
lods
ret
gs
cmp
aaa
push
or
test
daa
pop
push
repnz
mov
pop
dec
lods
mov
fcomp
mov
and
or
das
mov
daa
inc
or
dec
test
or
sbb
fsts
or
lock
pop
or
mov
out
lods
pop
aas
xlat
pop
jne
mov
pop
ret
or
sbb
fwait
or
test
pusha
cmpsb
xor
adc
and
imul
in
xor
mov
dec
jle
andl
mov
out
inc
mov
dec
dec
stos
push
adc
push
cwtl
or
rcrl
sub
pop
mov
das
daa
jecxz
lret
sbb
sbb
int3
pop
scas
pop
adc
orl
adc
xor
pusha
mov
orl
int3
or
dec
mov
mov
mov
cmp
pop
dec
fcomps
or
dec
cld
cs
and
mov
push
aaa
addr16
and
cmp
scas
jnp
mov
das
sbb
jl
dec
dec
fistps
scas
and
mov
test
and
mov
jp
or
adc
or
sub
push
xchg
or
loope
mov
jno
arpl
aam
popf
lds
jmp
pop
add
mov
mov
and
aad
mov
addr16
movsb
mov
into
sbb
jo,pn
xor
pop
jmp
les
xor
jmp
jecxz
adc
or
push
inc
sbb
push
dec
or
mov
xchg
mov
push
mov
fimuls
push
ret
push
cmp
and
push
cmp
or
sbb
adc
icebp
jns
and
xlat
pop
adc
pop
inc
sub
xor
mov
loop
in
sbb
fcompl
dec
xor
pop
xlat
lea
and
push
jbe
cmovbe
xchg
push
add
les
xor
push
or
fwait
xlat
in
decl
movb
push
and
and
addr16
sub
cmp
ret
fmull
imul
pop
in
sub
notb
push
sub
mov
jmp
pusha
sub
sbb
es
cmpl
fdiv
xor
and
clc
mov
test
test
or
jnp
adc
or
test
lods
adc
clc
loopne
imul
or
push
xor
pop
call
xchg
call
sbb
icebp
or
jp
lods
clc
test
dec
adc
adc
roll
push
test
push
sbb
pop
or
adc
stos
pushf
pop
sar
punpckldq
push
mov
pop
sub
sbb
in
sub
and
xor
stos
pop
imul
adc
call
lea
pop
jmp
push
cmp
sub
pop
out
std
imul
arpl
mov
and
js
pusha
ret
add
mov
out
mov
out
data16
dec
insl
add
ja
adc
andl
cli
mov
add
rcll
sbb
jns
adc
or
sub
push
clc
add
sub
push
dec
jmp
sbb
call
pop
pop
sub
aaa
push
sbb
xchg
xchg
mov
add
cmp
mov
xchg
xor
add
mov
sbb
bound
js
adc
fadd
jmp
cmp
xor
adc
sbb
and
cwtl
push
popf
cltd
lea
leave
xchg
or
dec
cmpl
je
das
cld
and
shrb
lds
sub
imul
leave
or
lea
mov
push
loopne
enter
fs
sbb
xchg
dec
add
or
inc
sbb
loopne
bound
dec
mov
adc
gs
pop
or
pushf
ret
lods
fidivrs
push
ret
or
int
lcall
fsubp
pop
clc
add
lret
subl
inc
cmp
hlt
mov
rorb
mov
xor
popa
mov
or
push
ljmp
sub
push
lret
inc
mov
push
in
ret
and
jae
cmp
out
pop
shlb
into
or
or
fimull
xchg
xchg
test
js
test
mulb
test
mov
push
jnp
inc
adc
nop
add
mov
std
pop
ret
lods
imul
dec
repnz
loopne
mov
fstl
inc
inc
sti
das
and
push
mov
mov
sarb
sub
fiaddl
inc
add
aaa
enter
dec
mov
mov
dec
cmp
add
xor
dec
add
add
mov
js
je
inc
cmp
mov
inc
xor
adc
pop
dec
out
add
inc
js
mov
mov
add
jmp
push
stc
push
stc
sub
fs
popf
push
lock
addb
aaa
push
jmp
repz
dec
push
mov
cmp
je
daa
pop
inc
dec
mov
mov
adc
ja
pusha
and
rorb
xchg
or
mov
sbb
push
jb
jns
pop
sub
sub
es
push
jmp
add
fs
xor
lds
addl
cs
popa
inc
adc
dec
dec
rcrl
test
mov
mov
loopne
and
or
xor
jle
xor
and
mov
popa
nop
inc
pusha
adc
adc
or
pushw
shlb
sbb
sbb
and
lock
iret
inc
add
dec
vpmulhw
jmp
loop
cmpb
xor
mov
fcomps
xchg
loope
inc
and
pusha
int
cltd
sbb
cmpsl
dec
push
mov
lea
popf
aam
or
rcl
push
xchg
les
rorl
sbb
and
cmp
push
cld
cmp
xchg
push
and
sub
push
cwtl
je
dec
push
lret
add
sahf
imul
push
clc
xor
or
sbb
test
push
repnz
pusha
test
hlt
mov
rorb
or
inc
mov
mov
ret
sbb
mov
cmp
xor
add
inc
dec
imulb
inc
or
push
insb
hlt
or
pushf
mov
aaa
jno
sbb
or
xchg
jae
mov
push
push
push
roll
imull
inc
test
mov
roll
enter
mov
js
je
imul
adc
lret
out
pop
mov
int
jg
cmpsb
dec
or
roll
add
adc
pop
xor
mov
push
add
dec
pop
in
and
xchg
fwait
mov
push
inc
subb
aad
dec
jo
or
add
pop
movl
and
nop
push
jns
pop
or
pop
mov
mov
xor
outsl
pop
sub
data16
mov
insl
xchg
test
jne
xor
sub
fsubr
cltd
xor
hlt
out
mov
je
cld
dec
fisubrl
pop
jo
outsl
xor
add
sub
lcall
outsl
and
es
sub
sub
sub
in
push
push
pop
add
rclb
in
outsl
mov
decl
je
ja
xor
dec
xor
cs
xchg
add
cmp
push
and
sub
or
out
cmp
jo
enter
or
mov
sub
punpckhdq
xor
add
push
dec
xchg
inc
lahf
mov
repnz
jo
cs
loope
cmpsl
pop
inc
pop
and
sub
rolb
sub
pop
idivb
jo
add
adc
mov
pop
les
xchg
scas
rcll
cmovns
or
push
mov
pop
jmp
loopne
ss
pop
dec
adc
out
xchg
cltd
int3
push
and
jae
and
cmp
loope
lea
add
adc
mov
pop
push
decl
jge
pusha
lods
sbb
adc
pop
das
jo
out
rorb
push
push
stc
dec
inc
mov
mov
lea
mov
adc
ret
push
or
mov
dec
fidivl
or
fistl
nop
xchg
inc
push
out
xchg
xchg
adc
lock
lea
inc
mov
mov
ja
js
dec
lock
push
cmp
and
sbb
arpl
call
xor
jb
xchg
push
sub
push
loopne
inc
out
cmpsl
xor
jge
mov
jbe
scas
js
not
add
add
fldcw
sub
es
adc
movl
ds
loopne
dec
pop
lret
sbb
cmp
jne
add
test
aaa
fbld
hlt
std
shlb
sbb
cmp
jns
and
inc
mov
add
add
sbb
add
jae
movsl
nop
dec
shr
mov
leave
push
push
xchg
gs
in
mov
xchg
loope
je
and
loop
and
ljmp
jae
rcrb
jb
jp
or
jmpw
xchg
inc
es
or
sbb
aad
out
or
cwtl
and
data16
adc
roll
add
andl
faddl
fs
inc
jmp
in
ret
inc
testb
shrl
xchg
lahf
dec
repnz
stc
push
mov
dec
rolb
testl
push
or
loopne
adc
lods
fcmovnbe
jbe
push
and
lods
ss
fistpl
push
jo
int3
sub
sbb
les
fsubrl
push
push
add
push
test
mov
mov
hlt
cmp
pusha
stos
add
in
nop
sbb
je
scas
and
jecxz
outsl
dec
bound
inc
cmp
and
or
sbb
bound
in
jmp
outsl
sub
adc
adc
sub
push
fsubl
bound
sbb
inc
mov
loop
pop
or
jne
ret
jno
inc
daa
pop
inc
iret
sbbb
jl
dec
in
xor
add
cmp
jne
mov
xor
lret
mov
mov
nop
sbb
pop
jmp
outsb
dec
imull
jl
lock
and
in
es
jns
cli
js
insb
movsb
xchg
push
xor
imul
jo
mov
sbb
jns
xchg
mov
mov
inc
es
mov
dec
cmp
out
push
and
sub
test
fldenv
xor
outsb
jmp
xor
bound
pop
adc
mov
jnp
xchg
and
add
and
cmp
dec
je
adc
loopne
repnz
mov
scas
scas
js
mov
add
fisttpll
jb
inc
push
sbb
fcoms
bound
or
std
loopne
enter
testl
loopne
mov
in
stc
push
outsl
jo
mov
mov
xor
mov
cmp
pop
xchg
out
sub
push
mov
in
jecxz
add
enter
imul
lock
cmp
aaa
popa
xchg
and
mov
loopne
add
into
lock
out
mov
iret
and
loope
sbb
or
push
adc
cs
rcl
outsl
mov
inc
into
push
fwait
xor
rorb
and
imul
nop
and
mov
or
es
rcrb
sub
push
test
out
inc
mov
xchg
in
faddl
lods
loopne
add
sahf
cmc
in
in
ds
in
lods
dec
pop
inc
addr16
pop
or
mov
hlt
mov
jnp
mov
and
fs
pop
test
or
or
or
or
cmp
dec
and
pextrw
loop
sub
mov
mov
lock
sahf
push
mov
adc
adc
insl
adc
out
mov
dec
dec
in
jnp
js
cmp
rorl
jmp
or
insl
adc
sbb
pushaw
shrl
rol
adc
jl
jge
enter
cmpb
push
movsl
jo
add
xor
inc
sub
mov
sub
or
jge
pop
mov
pop
sbb
sti
dec
jo
mov
jmp
adc
and
or
sub
cmp
and
xor
test
cmp
mov
push
sbb
inc
jmp
jne
mov
dec
jge
dec
push
out
mov
or
shrb
xchg
pusha
jne
movsb
push
push
inc
pop
in
stos
push
mov
add
jno
in
mov
in
jle
xor
out
ret
ljmp
movsb
pusha
sub
jns
add
and
adc
inc
enter
mov
push
mov
out
xchg
es
bound
dec
fsubrl
cld
and
aas
pop
jno
loop
ja
or
rolb
xor
loope
arpl
lea
les
sbb
loop
or
fsubl
mov
pop
dec
jo
inc
mov
int
mov
push
pop
test
or
aam
add
mov
sbb
inc
adc
and
sbb
mov
and
sbb
imul
sarb
movzwl
push
dec
in
scas
shll
and
mov
sub
bound
mov
pusha
cmp
push
clc
mov
push
sbb
insb
enter
add
push
mov
imul
and
cwtl
bound
mov
adc
fcoms
std
dec
in
jmp
outsb
or
adc
and
push
rorb
scas
call
fmul
or
or
inc
lret
repz
push
pop
and
je
or
xor
sbb
cld
fimull
mov
stos
or
pushf
jge
and
shrb
pop
lea
jmp
push
jl
adc
gs
pop
lock
mov
add
cs
daa
mov
sub
les
push
rorl
sti
insl
jl
adc
movsl
pop
and
push
addr16
test
push
adc
test
push
repnz
add
or
clc
sub
shlb
add
clc
xchg
pop
ret
adc
pop
sub
pop
sub
add
cli
or
inc
xor
sbb
loopne
das
rorl
adc
pop
sbb
adc
loopne
and
push
adc
pop
sbb
and
jo
scas
sbb
test
daa
aam
cmp
in
sub
repnz
cmp
lahf
or
mov
mov
pop
xlat
inc
jo
add
cmp
cmp
dec
jne
jmp
inc
das
test
dec
jo
push
test
clc
pop
testb
or
cmova
mov
nop
ja
mov
mov
rcrb
adc
mov
sbb
inc
add
jbe
lods
add
dec
or
push
cwtl
dec
adc
insb
mov
push
add
divb
jae
or
mov
lods
es
mov
xchg
dec
iret
jne
or
imul
cmc
inc
nop
lods
lcall
hlt
mov
cmp
cmp
xchg
dec
insb
ja
xchg
jno
outsl
pop
sub
flds
pop
test
jmp
adc
mov
sbb
lcall
jno
xor
jg
or
xor
das
outsb
push
dec
pushf
sbb
jbe
outsb
inc
adc
dec
movb
push
xor
cli
adcl
stos
adc
hlt
mov
loop
mov
mov
adc
rolb
fmuls
sub
movsl
mov
cld
xchg
sub
adc
sub
or
jo
or
scas
adcb
adc
sub
ljmp
or
in
jno
push
mov
mov
push
adc
test
into
movb
popf
push
push
bsf
xchg
add
or
fistpl
icebp
roll
lods
push
mov
rcrb
add
sub
lea
movb
aaa
add
test
and
daa
jle
vprotq
ret
xchg
sub
mov
add
push
roll
test
or
dec
js
add
lock
fstpl
or
jo
dec
js
mov
sub
dec
imul
dec
loop
or
test
adcl
xchg
and
xchg
sbb
enter
xchg
push
fistl
pop
xor
out
mov
cmp
pop
test
pusha
stos
ficoms
stos
test
loopne
cli
add
call
mov
cltd
out
rcr
jmp
cmp
loopne
loopne
or
add
pop
mov
sbb
subl
enter
lds
mov
mov
or
or
ss
push
or
push
sub
data16
out
mov
subb
jo
ret
cltd
sub
push
call
clc
add
pop
call
es
mov
add
clc
push
aam
inc
dec
scas
or
push
enter
sbb
fisttpll
lret
dec
push
mov
punpckhbw
pop
inc
mov
shrb
add
xchg
sahf
inc
fucom
popa
cmp
cmp
loop
loop
or
call
and
mov
ret
mov
sub
outsb
push
pop
push
push
addr16
adc
test
sub
out
dec
xorl
dec
loop
jmp
lods
scas
jno
inc
or
pusha
push
test
or
xchg
out
mov
imul
cs
dec
sub
push
and
mov
mov
mov
xchg
mov
hlt
inc
mov
nop
push
pop
hlt
pop
imul
insb
and
mov
icebp
dec
cmp
jbe
sbb
sbb
mov
xor
inc
in
imul
sub
mov
add
fdivrl
jbe
mov
mov
cld
scas
shlb
pop
nop
jmp
int3
std
cmpsl
movsl
movsbl
add
inc
rorb
xchg
adc
mov
iret
mov
scas
mov
add
aam
xchg
push
sub
dec
push
push
mov
fucom
and
xchg
sbb
mov
add
inc
dec
or
leave
pop
and
inc
xchg
jb
les
shlb
adc
add
rclb
cmp
pop
dec
and
add
fs
pop
sub
xchg
and
fmuls
test
adc
and
mov
xor
pop
and
add
add
xorl
push
mov
es
jmp
push
das
sub
push
mov
es
push
shlb
frstor
lds
repz
xor
xchg
mov
xchg
mov
cmc
bound
sbb
test
xlat
push
jbe
xor
sub
das
scas
mov
shll
sub
jle
cmpsb
mov
nop
test
cs
xor
push
jle
filds
mov
mov
sbb
and
in
or
das
test
in
jg
lea
mov
dec
jge
mov
pop
cld
inc
bound
or
sub
scas
mov
sbb
fsub
add
xor
adcb
push
es
pop
dec
out
add
push
adcb
mov
xchg
push
out
das
mov
fiaddl
fbstp
inc
dec
fsubrl
push
test
sbb
adc
adc
push
jo
cwtl
int
sbb
mov
lea
les
clc
dec
adc
nop
fmul
rcl
or
dec
and
xchg
lea
or
movsl
add
xchg
sbb
and
in
inc
adc
inc
lock
movsl
mov
push
jecxz
and
lods
jae
inc
mov
adc
and
pop
inc
dec
or
add
aaa
imul
lea
adc
or
add
je
xor
mov
inc
push
jbe
sub
add
or
adc
and
or
xlat
adc
xchg
das
inc
js
mov
lock
repz
repz
pushf
pusha
xor
sbb
js
mov
jecxz
push
inc
pop
hlt
pop
and
test
stc
iret
testl
inc
mov
cmc
lea
fcmovbe
add
adc
push
jb
add
push
enter
and
subb
add
aam
pushf
popa
sbb
ds
or
xchg
sbb
cs
cli
cmp
test
inc
lock
add
cmp
pop
insb
paddq
and
bndldx
mov
adc
test
push
push
push
dec
mov
sub
jge
addr16
or
fs
xor
ja
pop
xor
cmp
clc
sub
imul
and
sub
xchg
mov
pop
or
sub
adc
imul
imul
inc
or
ss
add
mov
sub
push
sbb
addl
test
adc
ret
fisttpll
adc
mov
roll
test
sbb
jp
clc
inc
pop
out
and
jl
repz
mul
je
and
sub
movsb
stos
out
xor
pop
or
jge
in
and
push
into
imul
push
mov
and
or
je
insb
xchg
inc
push
outsl
repnz
or
push
push
mov
dec
jmp
inc
push
xor
sti
daa
fistl
je
ss
jns
xchg
fmuls
call
or
fs
rclb
pop
and
mov
iret
fidivrl
and
or
push
imul
add
in
sbb
dec
dec
or
aaa
pop
add
mov
adc
push
xchg
xchg
jmp
or
xor
lods
or
or
addl
mov
push
lret
scas
lods
push
push
adc
and
jne
cmp
and
jae
repz
adc
and
sbb
jmp
loopne
push
xor
daa
mov
andb
or
cmp
ret
insl
push
fs
icebp
scas
or
xor
movb
test
and
sub
xor
sub
shll
mov
sbb
out
das
xor
sti
mov
mov
and
popf
push
xchg
jmp
stc
popa
mov
xor
aam
xchg
push
add
add
pushf
xchg
in
and
mov
jnp
rolb
test
jnp
xor
cmp
add
xor
aam
test
push
inc
adc
xchg
popa
cmp
js
test
out
or
add
dec
xlat
cmpsl
or
in
push
clc
inc
cmp
sub
add
cld
outsl
xorb
jmp
mov
sbbl
xor
cmpsb
and
xchg
mov
push
sub
lock
and
or
mov
sub
aas
stc
xchg
pop
cmc
pop
shl
cmp
pop
addb
or
xor
outsb
jae
adc
test
or
push
adc
jns
lods
xchg
scas
xchg
push
insl
and
pop
sub
bound
fs
xchg
cld
stos
pop
sbb
sbb
lret
scas
or
vpermil2ps
inc
bound
fnstsw
pusha
cltd
outsl
sbb
and
or
xor
push
cmp
aam
insb
adc
inc
adc
xchg
shlb
mov
aam
pusha
jle
push
into
push
sub
pop
test
leave
cwtl
cli
add
pop
sahf
nop
clc
inc
adc
push
aam
aam
daa
iret
loope
rcrb
je
cmc
orl
cmc
call
xor
mov
add
mov
add
inc
sti
cmp
fiaddl
in
dec
xor
pop
ja
or
xchg
adc
or
cmp
mov
mov
push
or
enter
cltd
pop
mov
xchg
not
cltd
test
cmp
movntps
dec
mov
dec
shlb
mov
int
xchg
push
mov
add
imul
pusha
mov
cmp
or
xchg
cmp
or
das
fwait
and
xorl
adcb
mov
dec
xchg
push
add
fwait
inc
xor
or
stc
in
ss
out
rolb
cli
test
push
dec
xchg
xor
leave
loope
outsb
aaa
push
das
out
lcall
ds
pop
and
cld
and
add
and
nop
icebp
mov
fwait
int
or
mov
push
adc
outsl
insl
popa
pop
cmp
fcmovb
loope
dec
imul
loop
clc
add
dec
push
pop
adc
push
push
xchg
jae
insl
or
imul
imul
xlat
dec
push
and
ss
mov
and
adc
aad
jne
aas
and
inc
pushf
push
or
inc
les
jmp
add
inc
mov
xchg
loopne
mov
xor
push
add
mov
push
jo
or
ret
sub
ljmp
loop
jne
add
andl
xor
into
xchg
mov
sbb
sub
setp
sub
sti
lock
pusha
xor
xchg
or
jb
mov
imul
sahf
fmuls
sbb
test
xor
pop
clc
and
and
inc
or
addb
sbb
fmuls
push
xchg
push
fsubs
mov
testb
sbb
or
inc
push
std
mov
int3
sbb
inc
cmp
mov
pop
stc
addr16
dec
sarb
push
cmp
ret
mov
and
add
dec
inc
imul
jae
push
sbb
test
adcl
dec
or
pop
and
lock
dec
xor
xchg
xlat
mov
pushf
or
pusha
daa
movsb
testl
xor
sub
repnz
mov
or
adc
imull
pop
adc
cmp
arpl
sbb
mov
andb
sbb
xchg
mov
or
psubq
push
jnp
sbb
mov
hlt
jl
adc
inc
and
rcrb
mov
or
mov
push
clc
push
push
push
mov
inc
sti
nop
or
cmp
push
sbb
lahf
fsubs
mov
inc
jb
adc
push
mov
pop
add
mov
mov
add
lods
xor
xchg
add
lods
and
push
js
aad
insb
or
outsl
adc
sub
pushf
sbb
or
pusha
or
fbstp
push
dec
cmpsl
orl
cmpsb
pusha
xorb
mov
and
mov
adc
and
push
push
jo
sbb
jno
xchg
xor
push
enter
mov
push
and
inc
inc
and
jne
data16
gs
push
popa
or
sbb
jo
xchg
je
fsubl
add
mov
and
outsl
or
ret
adc
shll
out
gs
js
push
fistpll
dec
enter
aaa
mov
dec
cs
mov
daa
pop
pop
xor
loope
je
mov
or
cmp
push
mov
add
mov
or
pushf
out
cltd
push
adc
movsb
push
mov
movsb
mov
mov
mov
mov
aam
mov
mov
hlt
pop
mov
add
mov
mov
and
mov
mov
inc
mov
push
lods
xchg
mov
pop
sti
cmp
ret
adc
mov
mov
jo
lods
mov
pop
arpl
push
xchg
addl
movsb
sub
cltd
je
in
lret
push
movsb
cld
test
movsb
jb
adc
dec
in
mov
mov
push
mov
xor
jl
cwtl
sbb
int3
inc
sub
push
rcl
lods
or
gs
fmuls
gs
sub
test
cmp
xor
xchg
call
adcb
hlt
add
nop
cmp
cld
enter
mov
das
test
or
or
gs
or
adc
adc
stos
test
sub
xor
xchg
add
dec
and
push
push
movsb
pop
sub
nop
lret
xor
cwtl
cmp
test
les
inc
clc
xchg
dec
push
push
dec
adc
and
push
jne
adcb
xchg
add
dec
mov
test
push
pop
or
mov
adc
aad
dec
sbb
fcomps
cwtl
mov
adc
inc
insb
outsl
jae
and
movsb
pop
inc
in
lds
add
add
ret
lods
aas
push
popa
in
add
dec
int3
pop
or
aam
mov
sub
insl
mov
mov
jae
mov
inc
fcomps
dec
arpl
jae
or
sbb
or
add
outsb
adc
outsb
sub
leave
inc
push
outsl
xorb
in
ficoml
fistps
xlat
sbb
and
dec
xor
adc
pop
bound
xchg
add
or
fsubl
push
mov
mov
mov
or
jae
sub
outsl
sub
inc
adc
jns
dec
outsb
push
mov
sahf
fs
iret
js
outsb
mov
outsb
popa
and
test
in
and
das
fstpl
popa
in
pusha
in
in
pop
xchg
pop
mov
xchg
mov
or
pop
es
fisubs
or
ds
idiv
and
outsb
mov
pop
fs
push
lods
xchg
outsb
inc
imul
adc
pop
inc
cmp
nop
xchg
cwtl
subl
pop
adc
xchg
pop
outsl
and
inc
xchg
in
sbb
and
inc
mov
xchg
add
imul
xchg
push
stc
hlt
loopne
pop
jne
xchg
scas
mov
ret
dec
sbb
daa
loope
popa
rcr
xlat
xor
dec
enter
test
dec
mov
xorb
pop
lods
xor
fcoml
and
adcb
cmp
addb
inc
push
dec
inc
push
dec
ret
aas
xlat
inc
ja
iret
adc
ret
cld
outsl
sbb
mov
inc
andl
mov
inc
sbb
mov
popa
and
jge
rcrb
xchg
or
mov
jl
xchg
pop
daa
outsl
push
mov
add
je
jl
pop
popf
test
lock
testl
pushw
inc
ja
jl
add
or
inc
sub
add
lea
imul
inc
mov
xor
mov
test
or
lret
push
rorb
mull
add
cmpsb
fs
jae
les
xor
js
push
inc
insb
push
xorb
jl
mov
add
push
gs
add
or
or
or
xchg
adc
cmp
sbb
shrl
mov
add
mov
push
movsb
fidivrl
sub
incb
jle
stc
jg
jle
add
add
outsb
xor
inc
add
mov
in
xlat
repz
shll
clc
addb
stc
rcr
sarl
int
loope
and
push
add
xor
divb
jbe
lret
push
sub
push
imul
int
out
jmp
loopne
jge
shl
in
shr
dec
fmull
mov
ljmp
add
mov
mov
mov
inc
jmp
push
pop
pop
js
cwtl
push
in
ret
push
dec
push
cmp
mov
mov
pop
sub
stos
mov
or
mov
testb
pop
inc
test
mov
jbe
scas
inc
push
push
imul
pop
sbb
xor
mov
sub
jb
test
fildl
add
dec
loopne
mov
ds
leave
inc
push
add
lahf
jbe
and
adcb
sbb
leave
pmuludq
cmp
les
mov
sub
and
rorb
add
push
nop
out
sbb
je
add
ja
ljmp
fdivl
jecxz
into
shl
mov
int3
adc
jnp
pop
adc
pop
pop
fidivs
mov
mov
jns
mov
stos
sub
je,pn
cwtl
adc
add
adc
or
lahf
je
enter
dec
sbb
inc
or
or
jae
fcoml
popf
mov
dec
dec
mov
push
inc
pop
fs
pop
pop
jp
inc
movsl
cpuid
mov
xor
sbb
mov
mov
push
pop
int
inc
sbb
cmp
push
inc
daa
in
insb
sbbb
dec
fs
lods
loope
jl
int3
push
js
sub
lods
int
mov
mov
push
pop
xchg
or
push
jns
or
add
or
dec
pop
cld
call
repnz
add
out
xchg
arpl
cmp
pop
push
repnz
mov
ss
sbb
out
cmp
jo
push
sahf
addl
jne
mov
lea
fcomp
xchg
rorl
pop
and
pop
xchg
out
cmp
fstl
mov
sbb
frstor
les
nop
out
orb
mov
lock
xor
icebp
andb
jne
push
shrb
scas
pop
jbe
lahf
test
lret
es
push
clc
pop
ss
into
inc
mov
psubq
pop
test
daa
dec
outsb
push
imul
mov
loopne
cmp
mov
xchg
or
dec
xchg
sbb
sub
or
push
add
fwait
aam
cmp
push
dec
xlat
insb
mov
sub
xchg
dec
dec
adc
inc
sahf
loopne
sub
mov
xchg
clc
clc
or
int3
pop
sub
or
dec
lods
inc
push
subb
add
inc
sub
xchg
or
inc
sub
js
cmp
add
sbb
or
sub
xchg
loop
insl
mov
jns
das
outsb
push
jb
iret
mov
dec
enter
jns
sbb
jbe
rorb
jb
loope
xor
or
cmp
cmp
ret
xor
or
push
dec
sbb
dec
xor
xor
bound
cs
sub
repnz
cmp
xor
cwtl
add
shrl
xor
dec
out
das
cwtl
mov
sub
inc
add
mov
inc
xor
inc
je
inc
in
imul
sub
inc
clc
rcrb
pop
inc
adc
dec
sahf
neg
mov
push
push
inc
enter
mov
inc
jbe
push
pushf
nop
push
rorb
mov
and
cld
push
in
cld
jle
hlt
out
mov
mov
add
or
mov
push
loopne
sbb
adc
cli
outsb
dec
mov
or
outsb
mov
insb
inc
and
notl
xchg
push
add
cmpsb
aas
push
ds
jo
push
test
inc
cs
fnstcw
inc
sub
inc
out
imul
outsb
data16
adc
mov
dec
inc
and
repnz
ja
scas
repnz
int
pushf
outsb
pop
addr16
push
bound
sub
and
nop
das
lods
into
xchg
sub
xor
and
sub
sub
dec
loopne
insb
lahf
out
test
mov
inc
out
data16
jnp
fs
cltd
add
mov
mov
mov
lcall
push
mov
js
shlb
pop
les
push
mov
pop
pusha
lret
push
adc
lcall
pusha
inc
mov
inc
in
add
cmp
inc
je
pop
mov
adc
adc
pop
push
jmp
ljmp
push
pusha
rorl
pop
vhaddps
loopne
push
dec
iret
jo
adc
lods
subl
pop
sbb
icebp
cwtl
push
aaa
and
xchg
popa
adc
fnstenv
xchg
test
adc
lret
nop
lret
mov
test
ret
inc
pop
leave
sub
sub
adc
loop
mov
xchg
je
mov
rolb
mov
xchg
dec
dec
add
mov
pop
cs
lods
inc
sbb
cmp
pop
sbb
mov
inc
pop
jae
jae
mov
or
daa
in
jb
lods
stos
sbb
rorb
mov
and
cmpsl
adc
icebp
lds
and
mov
imul
fs
push
inc
bound
into
in
mov
outsb
inc
inc
cwtl
call
fcmovbe
enter
and
add
ror
push
jb
sbb
and
mov
and
pop
and
leave
push
sub
mov
dec
jg
nop
aaa
clc
inc
clc
sub
push
js
je
nop
sub
mov
lahf
in
and
inc
adc
repnz
sub
mov
sbb
cs
repnz
push
jo
das
inc
inc
xchg
cmp
mov
in
adc
xorl
xor
inc
push
inc
cs
inc
inc
add
arpl
rorb
cmp
or
mov
data16
into
int3
mov
movb
ret
insb
mov
sbbb
shlb
shlb
jp
adc
jb
jmp
popf
and
or
inc
push
sbb
xlat
int3
pop
test
xchg
shlb
test
mov
add
mov
nop
inc
sbb
or
add
jae
adc
and
jg
pop
orl
subb
sub
sti
pop
push
rol
cmpsl
lea
mov
adc
inc
adc
xchg
lods
push
loop
xlat
or
test
push
nop
push
add
call
cs
or
inc
mov
xchg
sub
sahf
cmp
adc
push
sub
or
adc
or
push
mov
fs
sub
or
das
and
jnp
das
sbb
fadds
mov
dec
scas
fstpt
adc
jb
insl
pushf
imul
loopne
in
jmp
shlb
sbb
cmp
and
xor
pop
clc
hlt
sbb
cwtl
lret
cld
pop
mov
aas
adc
add
xor
clc
cmp
sub
pop
idivl
mov
cmpb
jne
vmread
inc
mov
add
or
adc
add
mov
or
sti
je
arpl
xchg
iret
pop
popf
test
xchg
jle
inc
shl
xchg
sbbb
test
dec
push
fcmove
inc
lahf
jge
or
lock
and
lock
shll
loopne
add
mov
pop
sub
sbb
push
arpl
cmc
xchg
hlt
inc
push
adc
ret
or
dec
int3
xchg
hlt
ret
xchg
mov
gs
dec
in
sub
loopne
and
xchg
pop
je
cmpb
xchg
jns
jle
aad
sbbl
mov
mov
rorl
pop
mov
dec
push
dec
lret
jbe
jp
or
push
push
mov
mov
por
and
mov
xchg
xor
pop
adc
cmp
inc
mov
and
push
orb
jg
xchg
and
std
add
jbe
cmpsl
adc
das
pop
xchg
test
nop
out
mov
movb
or
addr16
xchg
add
add
pop
and
push
shrb
or
iret
je
cmp
cltd
cs
fsubrs
or
push
mov
mov
jo
data16
popa
xchg
add
lret
push
or
es
xchg
or
mov
xchg
sbb
cmp
inc
adc
cmpsl
das
call
addr16
test
or
pop
inc
xor
xchg
shll
push
inc
aas
adc
and
or
clc
adc
sub
mov
dec
cmp
sbb
bound
and
outsl
adc
xchg
mov
inc
mov
pop
in
test
or
cmpsl
stc
mov
or
fildl
negb
pop
push
lea
adc
push
aaa
pop
and
xchg
add
pop
jo
lds
in
add
pop
add
inc
dec
sub
sbb
not
push
aaa
jmp
sub
clc
dec
subl
add
ljmp
add
pop
pusha
lcall
sbb
jns
lock
icebp
outsl
test
add
xor
sbb
sbb
orb
jns
or
fiadds
lea
stos
push
leave
fwait
dec
jae
push
ret
jno
cltd
leave
cwtl
or
out
mov
pushf
mov
xchg
rorb
cmp
add
dec
sub
add
outsl
dec
xchg
add
popf
sbb
mov
popa
nop
movsl
js
scas
je
mov
hlt
lods
jl
popa
jge
aas
mov
sbb
push
cmp
out
je
mov
inc
andb
mov
add
mov
test
push
iret
dec
movsl
in
mov
stc
sub
add
test
cmp
lret
or
mov
pop
mov
icebp
add
iret
sahf
sahf
out
arpl
or
xchg
lahf
inc
or
sbb
push
adc
cld
cmp
push
add
add
cmp
inc
mov
cmp
getsec
test
cs
js
mov
and
mov
movsl
shrb
punpckldq
scas
aad
xor
xchg
inc
mov
xlat
add
leave
fwait
insb
stc
mov
xor
jno
adc
aam
inc
or
inc
or
out
sub
daa
es
insl
pop
sarb
add
push
aam
pop
sbb
adc
and
inc
add
sbb
les
pop
sbb
inc
pop
cmp
xor
adc
jecxz
mov
and
movsb
add
int3
and
sar
fdivl
push
jbe
pusha
arpl
mov
movq
sub
xchg
shll
ss
icebp
dec
lea
xchg
mov
sbb
sti
add
pop
shrl
and
adc
ja
add
sbb
out
pop
mov
sub
push
pop
sub
fcomps
push
mov
loop
mov
mov
call
xor
pop
jo
and
inc
iret
and
add
sbb
das
add
add
inc
pop
add
add
outsl
movsl
mov
xor
jbe
sarb
or
mov
in
or
movsl
sub
pop
js
mov
dec
add
clc
xchg
mov
and
dec
pop
gs
cs
add
test
cmp
cmp
out
sarl
cmp
push
or
dec
inc
and
test
jl
mov
cmovle
push
mov
add
dec
divb
popa
enter
pop
adc
test
jmp
stos
xor
cmp
mov
xchg
test
sub
jle
bnd
dec
xor
fisubl
and
cmp
pushf
loop
mov
dec
ja
cli
adc
jbe
push
push
outsb
cmp
data16
mov
and
or
push
add
lock
ret
ljmp
xor
lock
hlt
push
ret
sbb
dec
clc
mov
add
inc
push
push
push
dec
dec
loope
in
out
sbb
push
ljmp
cmpw
cmpsb
icebp
mov
dec
jmp
xor
or
repnz
pop
adc
sbb
pushf
pop
xchg
pushf
shlb
subb
add
js
fcomps
cmp
jne
insl
mov
sbb
or
sbb
shl
xchg
dec
xor
push
rol
pop
push
pop
or
pop
shl
roll
fcom
jle
push
les
push
xchg
sbb
hlt
leave
mov
sbbl
or
sbb
in
addr16
dec
dec
mov
fldl
aad
xchg
and
adc
movb
mov
xlat
push
jne
sbb
push
jl
enter
pop
ja
shrb
jmp
pop
adc
pop
xor
rolb
sbb
push
push
ja
fwait
lock
out
push
insl
or
mov
xor
in
ret
push
bound
outsb
loope
adc
inc
popa
or
xor
dec
les
lahf
popa
in
insb
fdivs
cmp
push
in
dec
insb
fs
or
imul
jbe
daa
or
mov
push
inc
inc
push
xor
daa
adc
rorb
incb
je
jno
and
push
add
mov
cmova
jae
mov
pop
dec
push
cmpsl
or
ret
or
jae
aas
es
and
xlat
fidivrs
jo
jns
enter
shlb
push
stc
iret
dec
sub
adc
add
adc
test
inc
mov
outsl
fs
jp
jb
daa
adc
dec
pop
arpl
pusha
gs
mov
je
stc
mov
dec
imul
dec
gs
inc
data16
mov
and
adc
out
sbb
sbb
fs
or
jae
pop
push
adc
cltd
shrb
push
cli
xor
popa
mov
xchg
xor
rorl
jb
mov
out
mov
outsb
pop
push
cs
ss
movsl
jne
loopne
into
pop
sbb
pop
push
push
popa
push
cmpsl
mov
mov
inc
or
or
iret
adc
xchg
outsl
daa
adc
or
pop
insl
jae
mov
jb
ja
fs
in
lods
test
js
andb
jns
js
arpl
popa
pushl
pop
inc
and
jno
xchg
push
divb
das
inc
imul
mov
in
rcll
sbbl
adc
push
ret
test
lahf
push
gs
scas
xlat
sub
push
xor
out
dec
ds
adc
out
fadds
push
cmp
inc
rol
mov
or
add
xor
loope
pop
lahf
mov
jp
aaa
sub
inc
je
cmp
adc
out
das
mov
insl
shrb
pop
fists
push
fisttps
popa
imul
lds
mov
sub
xor
mul
addr16
mov
pusha
out
das
adc
dec
sbb
xor
ret
xchg
jbe
movsb
pop
test
adc
push
xor
addr16
lods
push
pop
das
or
jecxz
fists
loop
outsl
insl
adc
xchg
inc
call
inc
adc
clc
sub
adc
cmpsl
push
jne
test
outsl
imul
stos
jns
das
cmpsl
push
rorb
iret
cmpps
xor
movl
pop
pop
ja
repnz
loopne
aas
outsl
unpcklps
rorl
arpl
jo
sbb
xor
lea
mov
aas
sbb
pop
or
xchg
andb
das
adc
daa
or
adc
outsb
push
inc
or
and
out
inc
pusha
xor
andb
dec
sub
mov
mov
or
sbb
jae
fcoms
outsl
fs
pop
mov
fisubs
mov
add
xor
dec
arpl
and
addr16
add
mov
push
mov
lret
lahf
or
cmp
and
add
add
pop
mov
cmp
sub
inc
cmp
mov
bound
shlb
xchg
or
pop
daa
push
cs
dec
jbe
cmpsl
push
mov
fmuls
je
das
lahf
scas
pusha
push
insb
shll
adc
cwtl
test
je
sbb
push
ljmp
cmp
adc
mov
and
sbb
push
jo
adc
es
das
xchg
or
and
rcpps
imul
sbb
dec
jne
test
daa
imul
xor
jns
gs
ret
adc
aaa
addr16
ret
shlb
push
push
sub
outsl
pop
sbb
lds
cmp
adc
xor
cmp
imul
lahf
jecxz
xchg
push
mov
shlb
jns
adc
mov
idivl
sbb
cs
mov
pop
test
cmpsl
in
out
pusha
cmove
in
and
add
inc
push
out
in
inc
sbb
jns
pushf
in
adc
negb
lcall
adc
jmp
add
iret
pop
sbb
pop
pop
sbb
or
lret
fbld
cs
push
xchg
push
xor
jb
pop
add
lsl
add
inc
in
inc
gs
adcb
arpl
add
movups
inc
leave
push
add
sbbb
mov
push
adc
dec
outsb
inc
lea
xchg
add
inc
outsl
ja
or
icebp
inc
push
pop
pusha
sbb
push
pop
xorb
inc
and
aaa
mov
sbb
sub
or
jo
jb
loope
push
fs
pop
dec
sbb
add
sbb
cmp
leave
mov
inc
stos
test
movb
and
push
or
pop
inc
popf
pop
and
pop
andb
and
and
xor
xor
xor
sub
jb
sub
es
xor
sub
mov
mov
jbe
jnp
or
add
sbb
pop
mov
sub
inc
pop
cwtl
out
inc
sbb
pop
or
add
lods
jnp
sbb
testl
subl
add
daa
mov
in
leave
shr
stc
add
test
nop
inc
mov
mov
dec
dec
fiadds
lahf
shlb
mov
pop
out
push
adc
inc
cmp
call
data16
fcomps
add
lcall
inc
pop
mov
mov
adc
and
insl
jmp
pop
into
int3
inc
imul
faddl
pop
xchg
or
stc
mov
or
imul
cltd
sbb
iret
pop
ficompl
call
dec
clc
inc
xchg
adc
clc
inc
shlb
adc
mov
ret
test
and
or
jle
frstor
mov
idivb
xchg
jb
add
enter
xor
adc
stc
dec
and
fwait
cmp
pop
je
addr16
sub
ret
cld
and
fcmovb
jle
jle
mov
push
add
dec
xor
jmp
sub
cmp
sbb
xchg
mov
mov
add
add
pop
test
movsl
pusha
jge
xor
or
push
popf
and
sbb
sbb
test
and
repnz
ds
pop
fmull
mov
add
ljmp
mov
mov
sti
push
dec
or
sub
xchg
popa
add
in
ljmp
adc
jge
push
push
cwtl
nop
mov
adc
pop
movsl
adc
sub
or
adcb
nop
or
sti
pop
outsb
push
es
jns
jmp
or
adc
fscale
and
inc
faddl
and
icebp
xchg
jp
les
push
xor
fs
mov
jne
and
adc
ret
sysexit
jmp
jnp
add
rcl
scas
sarl
jo
push
mov
std
dec
push
jnp
inc
sbb
jne
pusha
jno
jle
push
imul
or
nop
and
pop
mov
mov
add
mov
lock
stos
add
fisubs
adc
jl
or
add
xor
mov
or
lar
sbb
mov
and
xchg
ds
mov
cwtl
and
fstpt
add
sub
cmpw
dec
in
ljmp
sbb
les
push
push
pop
adc
fistl
inc
test
cmp
lahf
inc
and
sub
test
and
insl
and
stos
stos
xor
jb
lods
lods
lret
pop
pop
lock
xor
aaa
sbb
scas
cmp
push
dec
inc
mov
push
mov
sub
shlb
dec
popf
cmp
jo
push
jne
sub
jno
inc
je
popf
addl
leave
cmpsb
xchg
add
les
jg
pop
inc
pop
imul
jl
pop
or
jl
mov
test
movsl
inc
bound
mov
pop
loopne
pop
inc
jne
xor
adc
sub
bound
dec
daa
testb
popa
sbb
xor
imul
imul
push
imul
fmull
arpl
push
cmp
dec
pusha
push
mov
xor
sahf
or
shl
push
push
adc
mov
sarb
mov
or
in
fildl
push
add
add
or
adc
aas
mov
or
xlat
ret
pop
in
mov
add
test
loopne
std
sbb
xor
fs
push
pop
cli
add
mov
mov
add
fmul
ret
jge
adc
push
data16
sub
xor
inc
cmpb
fisubrl
inc
xor
push
jo
and
clc
mov
sbb
stos
lret
cmp
js
mov
mov
pop
mov
push
xor
sbb
mov
push
aaa
icebp
sub
loopne
push
xchg
movsl
jg
cmpl
rorl
lock
daa
fidivrs
in
icebp
fdivl
cld
push
pusha
pop
inc
push
repnz
repnz
cmp
sahf
adc
push
hlt
into
insb
repz
add
push
test
outsl
movsb
add
fisttpll
out
pushl
push
movsb
xor
imul
push
and
jle
lahf
xor
pop
sub
bound
and
call
pop
mov
pusha
int3
inc
lock
add
out
imul
nop
or
jecxz
sahf
pop
pop
add
inc
mov
fnstsw
pop
nop
inc
pusha
mov
fadd
lods
inc
rsm
lods
and
push
xor
and
repz
je
les
ret
xchg
push
inc
mov
loope
inc
nop
mov
sbb
push
sbb
les
sbb
inc
cmpb
jp
xchg
xor
add
mov
daa
adcb
add
adc
cmp
fsts
cmp
jo
rol
insl
loope
or
outsb
fiaddl
push
push
add
arpl
cmp
rclb
mov
inc
repz
adc
scas
sbb
sbb
in
das
orl
and
or
fistpll
sub
out
rorb
movsl
and
cmp
or
mov
inc
lret
repz
add
adc
test
xor
pop
or
xchg
sbb
inc
sub
dec
mov
sbb
lods
andb
pop
hlt
pop
clc
mov
inc
push
insb
mov
out
nop
ret
or
adc
aam
sub
dec
push
mov
daa
pop
pop
pop
pop
mov
or
int3
mov
loopne
lea
mov
inc
inc
cmp
jne
lcall
popa
push
push
orb
xor
dec
bound
fadds
in
add
outsb
add
bound
push
negb
inc
add
repnz
rorb
inc
pop
sub
inc
add
cmp
jno
lret
or
inc
ret
or
ficoml
xor
inc
push
or
inc
dec
dec
inc
fcomps
inc
cmp
inc
add
movsb
xchg
inc
mov
decb
add
dec
inc
dec
dec
inc
nop
ss
pop
stc
mov
inc
in
inc
add
inc
add
inc
mov
pop
in
stc
inc
add
jo
sbb
inc
pushf
xchg
mov
mov
push
jo
push
and
lock
fstpt
push
adcb
shll
or
dec
test
addr16
mov
pop
xorb
or
inc
cmp
fiaddl
sub
outsb
add
add
inc
push
xor
adc
pop
loopne
xor
xor
mov
inc
push
js
pop
idivl
pusha
stos
inc
sub
addr16
mov
negl
imull
mov
adc
inc
ds
jge
sbbl
call
or
out
cmp
mov
shll
xchg
ret
jae
clc
jmp
pop
pusha
out
xlat
jne
xchg
mov
lret
inc
push
inc
cvtps2pi
push
fadd
sbb
xor
sbb
cltd
sarl
mov
adc
xchg
and
sbb
and
ja
and
iret
fldl
push
xchg
test
pop
adc
jnp
dec
cmp
xchg
jle
clc
cltd
mov
or
cmpb
push
mov
ja
mov
test
in
dec
add
mov
pop
hlt
addb
add
sub
push
dec
lock
add
jnp
fldt
mov
mov
push
inc
dec
and
inc
jne
lcall
xor
inc
xchg
pop
fimull
imul
mov
and
add
push
push
call
pusha
and
pop
and
dec
cmp
xor
js
fcmovu
in
rorb
sbb
movsb
and
mov
cwtl
or
rorl
es
pushf
mov
rep
lcall
mov
dec
rcr
out
mov
mov
jnp
dec
xor
lcall
aam
fdivrl
fs
xor
xchg
mov
cmp
mov
inc
mov
cli
inc
dec
sbbl
and
cs
ss
ja
fldt
push
outsl
add
push
test
jae
cmp
pop
loopne
dec
outsl
xor
add
mov
rclb
aaa
inc
jnp
pop
push
sub
insl
mov
dec
outsb
jnp
cmp
test
inc
insb
insb
pop
push
outsl
pop
fiaddl
or
jb
movsb
ficompl
insl
lcall
xchg
cwtl
pushf
data16
and
push
inc
or
lock
out
sub
push
xchg
dec
in
add
cmp
mov
adc
rorb
push
push
pop
jbe
popa
sbb
into
cmp
popa
add
or
or
and
inc
xchg
add
cwtl
or
add
fadds
sbb
pop
xor
shr
in
cmp
loopne
or
xor
pushf
fdivl
hlt
fstpt
dec
movl
emms
pop
xchg
lock
bt
jae
shr
pop
cmp
mov
dec
movsl
adc
rorb
jge
push
nop
sub
sub
add
add
cltd
addr16
and
cmp
dec
insl
add
jle
sub
addl
inc
xorl
cmp
cmp
cwtl
push
pop
jl
mov
dec
aam
or
pop
je
mov
xchg
lods
pop
and
add
push
and
mov
mov
inc
stos
test
outsb
lds
mov
test
lods
in
add
and
pop
test
jge
xchg
shlb
or
push
push
add
sbb
jmp
jmp
fmuls
insl
rolb
fdivrs
fidivrs
pop
ret
in
in
sbb
rolb
popf
add
add
add
mov
and
shrb
sar
jecxz
add
rolb
dec
nop
dec
fisubrs
icebp
sub
fsubs
dec
lea
add
enter
test
test
jmp
rcrb
xor
insl
mov
sarl
pop
jnp
loopne
ror
dec
add
push
mov
mov
mov
test
push
pop
test
or
sahf
push
aaa
dec
and
mov
and
xchg
in
dec
pop
imul
pop
mov
orb
cmp
inc
xlat
popf
mov
shll
imul
hlt
cmp
push
xchg
ret
stos
xor
push
je
mov
jne
nop
xor
gs
cmp
ja
dec
sbb
loopne
dec
orl
sbb
xchg
inc
notb
ss
fwait
int3
adc
add
mov
jge
add
cmp
faddl
nop
jl
mov
jae
leave
adcl
dec
shrb
cmp
fisttps
mov
mov
pop
mov
adc
pushf
cmp
mov
mov
ret
push
or
and
add
inc
out
lret
adc
hlt
push
sub
pop
cmp
add
mov
jl
mov
or
xchg
xchg
jb
test
mov
cltd
xlat
inc
jmp
adc
xchg
mov
or
test
adc
cmpb
mov
testb
out
mov
or
add
add
jmp
push
rolb
arpl
dec
jge
ret
out
lock
cmp
jns
or
jmp
or
add
mov
push
add
pop
add
ret
test
in
jae
sbb
lea
mov
xor
mov
cld
xor
outsl
adc
ret
dec
sub
xchg
push
dec
lcall
shrb
adc
xchg
test
dec
pop
inc
or
mov
int
mov
mov
adc
dec
stc
dec
jmp
sub
nop
loopne
pop
or
add
xlat
adc
test
add
and
orl
dec
pop
dec
cmpsl
cmpsb
mov
sar
clc
jae,pn
test
add
xchg
dec
sbb
fcompl
pop
pop
ds
add
je
pushf
xor
add
daa
add
and
jbe
and
inc
cmp
mov
fsubrl
ja
and
mov
es
cmp
jecxz
add
les
imul
ret
out
dec
pusha
adc
or
cmpsl
sbb
add
add
clc
imul
adc
movsl
jmp
das
push
lds
pop
pop
cli
mov
sub
int3
add
adc
push
test
test
push
xor
push
fdivrs
movsb
aaa
and
adc
or
cmp
nop
mov
rorb
pop
lcall
aas
or
call
push
and
sub
hlt
cmc
scas
dec
in
stos
outsb
jp
sarb
out
mov
pop
mov
sbb
test
test
repz
sub
and
mov
sbb
mov
push
pusha
inc
jae
jge
xor
sub
loope
insb
scas
sub
push
add
cmpsb
imul
insl
les
stos
enter
xchg
and
pop
add
fwait
or
mov
nop
xchg
pop
add
mov
jle
sahf
in
fisttpl
mov
push
cld
or
or
nop
lock
pop
cld
mov
mov
cltd
les
orb
cmp
cmp
daa
test
pusha
adc
sbb
or
push
scas
les
or
insl
inc
sbb
sub
mov
push
sbb
mov
test
and
xor
sub
or
mov
and
insb
push
and
or
or
xor
jmp
mov
inc
js
push
sbb
pop
mov
pop
dec
sbb
bound
js
flds
rolb
push
aad
lea
pop
add
push
and
add
mov
test
mov
cmpb
sbb
callw
pop
pop
movsb
popa
inc
lret
mov
lcall
lcall
mov
inc
mov
pusha
loope
xor
rcr
sub
fistl
or
cld
test
and
add
jbe
orl
mov
loopne
sub
mov
jge
push
sbb
dec
cwtl
mov
inc
or
fisubrs
pop
pop
gs
mov
add
xor
loop
imul
cmp
xor
mov
cmp
mov
enter
cltd
or
fadds
cmc
xor
or
call
int
or
outsb
pop
pop
rorb
mov
loope
push
pop
mov
inc
outsb
mov
xlat
jno
sbb
inc
or
lods
dec
pop
lea
out
push
add
cltd
popa
adc
popf
mov
js
sub
push
test
and
dec
shlb
add
out
cs
popa
xchg
test
inc
pop
loope
adcl
mov
adc
ja
sbbl
jl
cmp
stos
sbb
adc
sahf
mov
push
sub
pop
js
sub
sub
and
and
mov
or
sub
data16
cmp
lea
xor
arpl
fimull
fsubs
pop
push
jbe
cmp
hlt
push
adc
sti
ja
jp
push
je
and
xchg
lock
shll
cmp
jns
ffreep
outsl
sub
test
addr16
and
and
and
push
adc
xorb
in
mov
cmp
sub
fadd
adcb
mov
xor
sbb
push
inc
fcomps
shrl
inc
or
sub
ss
ss
mov
adc
mov
leave
adc
dec
or
stc
and
in
call
in
test
inc
aam
add
iret
les
cmp
sub
cmpsb
sbb
inc
pop
hlt
inc
add
inc
pusha
in
inc
add
lods
add
or
mov
push
testl
push
push
xor
pop
and
xor
es
dec
cld
outsb
jae
mov
push
and
adc
and
or
adc
dec
loopne
cmp
outsb
or
fistps
aas
neg
sbb
add
sbb
adc
xor
push
clc
push
sub
mov
push
xchg
push
pushf
sbb
push
es
push
adc
loopne
xor
cmp
lods
jb
in
sub
mov
add
adc
hlt
and
hlt
sub
push
jb
hlt
jne
inc
xchg
lret
cld
cld
cld
push
jb
arpl
lods
pop
fs
push
movsb
popf
sbb
add
inc
sub
pop
dec
dec
sbb
mov
outsb
xchg
push
pusha
cmpsb
inc
or
daa
xchg
mov
pop
adc
xchg
nop
fwait
cmp
push
das
push
arpl
je
mov
arpl
sub
sub
adc
pop
sub
or
outsl
jae
push
jg
pop
mov
mov
cwtl
or
jg
psraw
pushf
adc
add
repnz
add
outsb
jne
pop
xchg
out
and
cmpsb
and
sub
and
add
push
insl
bound
out
xor
or
mov
sahf
jmp
or
mov
or
lret
add
insb
loopne
xor
or
hlt
ja
rol
bound
insb
orl
adc
sub
scas
mov
out
cld
popa
mov
pop
inc
ja
cmp
stos
adc
nop
out
add
mov
int
jae
negl
push
sub
push
in
add
sbb
jbe
fs
mov
movsb
mov
sub
pusha
outsb
xor
xchg
addr16
push
xchg
imul
rclb
add
xchg
inc
imul
or
adc
sub
adc
enter
mov
in
or
das
cmp
fimuls
je
arpl
dec
aam
adc
in
pop
or
xchg
dec
data16
inc
adc
inc
leave
int
and
inc
cmp
inc
out
sbb
pushf
sub
cltd
lock
repz
cmp
cmp
in
and
push
pushf
mov
fsubr
inc
cld
push
lock
push
sbb
jnp
imull
pop
sahf
pmullw
mov
shrb
outsb
fidivs
adc
add
cs
inc
sub
mov
in
data16
test
inc
xchg
lock
cwtl
test
enter
mov
jnp
data16
push
outsb
insb
pop
pop
push
pusha
pop
inc
fcmovnb
or
divl
prefetch
pop
pop
aas
std
stos
push
push
movsb
pusha
repz
lods
or
pop
bnd
push
adc
adcl
clc
pop
cmp
pop
sbb
adc
adc
pop
inc
add
mov
add
xor
push
inc
and
imul
dec
sarl
mov
xchg
pop
add
inc
outsb
imul
dec
cmp
lret
les
adc
loop
nop
push
jne
push
test
pop
dec
rorl
sub
push
jge
lock
pop
scas
dec
cwtl
cld
pop
ret
add
lods
inc
dec
add
jle
decl
push
out
xor
add
orb
adc
and
or
mov
rolb
arpl
popa
mov
bound
inc
mov
add
orb
inc
or
cmp
xchg
out
sub
or
add
dec
pop
lock
push
or
cltd
fs
inc
pop
inc
addr16
insb
gs
push
les
lret
and
vmread
inc
pop
pop
add
dec
or
and
bnd
adc
cs
jle
cltd
inc
ss
loopne
adc
fsubrl
sub
lea
push
lock
out
adc
jae
adc
mov
in
pop
or
jno
in
mov
push
insb
push
nop
adc
shll
cwtl
cwtl
or
add
push
add
and
xor
repz
jne
sub
imul
sub
mov
loopne
inc
adc
jmp
push
js
mov
fdivl
ds
out
in
je
aaa
cmp
pop
adc
fsubrp
daa
sbb
push
shlb
je
push
pop
subl
sbb
add
inc
xor
mov
add
cmc
es
pop
adc
sbb
cld
mulb
pop
inc
push
loopne
and
lcall
cld
cmpsl
or
add
inc
xor
or
mov
dec
push
mov
adc
or
add
loopne
dec
scas
dec
pop
push
add
add
pop
fcmovnb
jl
dec
jne
push
sub
rcrl
dec
lea
pop
cltd
nop
outsl
mov
ja
out
and
or
jl
adc
add
pop
test
ret
nop
pop
sbb
andps
or
add
push
test
cmp
jo
pop
and
popa
push
pop
fsts
aaa
cwtl
jg
push
lret
or
sarl
fcmovnu
in
std
xor
je
imul
scas
lock
ljmp
outsb
imul
aam
add
pop
add
insl
popa
adc
jo
mov
fnstcw
sbb
and
push
sbb
nop
inc
sbb
push
push
and
movsb
sbb
pop
mov
js
mov
push
mov
mov
test
sbb
adc
pop
pop
and
movsb
sbb
xchg
sub
pusha
xchg
add
inc
push
inc
add
cltd
mov
push
and
dec
pop
pop
and
sub
test
filds
sub
insl
or
sbb
imul
jecxz
stos
mov
imul
call
pop
xchg
pushf
sbb
and
jo
jo
lock
paddb
out
mov
adc
adc
sub
insl
pusha
sbb
mov
inc
jnp
nop
mov
rorb
push
push
push
mov
add
jp
and
xor
xor
ss
cmp
xor
inc
rol
jg
mov
dec
dec
dec
dec
dec
dec
dec
jb
clc
pop
dec
push
push
push
push
push
pop
pop
pop
push
mov
inc
xor
mov
roll
add
mov
xlat
xor
and
add
sbb
and
xchg
mov
shlb
jb
popa
adc
mov
cmovae
push
pop
out
xchg
js
popf
add
xor
jne,pt
test
testb
data16
cs
add
adc
add
addr16
jns
add
xor
inc
fmull
dec
sub
loopne
and
fmull
popa
xchg
push
enter
xor
dec
incb
push
add
das
jle
movsl
dec
xlat
test
add
es
inc
or
sub
ds
mov
or
je
push
jnp
movsb
repz
sub
push
or
orb
imul
sub
inc
lcall
sarb
imul
push
sbb
data16
test
xchg
scas
push
nop
jbe
cmp
xchg
mov
xor
xchg
out
and
jl
or
in
gs
ljmp
mov
xchg
push
inc
inc
aas
dec
popa
in
jo
pusha
sub
call
aas
xchg
orb
das
loop
movsb
fdivrl
or
clc
xor
sbb
sub
lods
sbb
push
or
sbb
ds
inc
hlt
cmpb
inc
clc
sbb
xor
fcoms
and
add
shlb
inc
or
jo
lret
fadds
xor
gs
mov
cmp
jg
jns
shlb
inc
and
into
faddl
mov
jg
test
leave
inc
xlat
sbb
test
xchg
es
iret
inc
dec
adc
lock
add
inc
add
jl
sub
jo
test
rcr
loopne
orl
and
out
xor
int
hlt
xor
clc
sub
cmp
gs
loop
pmulhuw
mov
imul
out
or
adc
mov
or
call
jne
ds
enter
and
cli
xchg
pusha
and
mov
add
sub
std
add
inc
xchg
jl
shll
lea
test
adc
and
inc
cwtl
jmp
enter
mov
dec
mov
ja
and
cmp
ja
sbb
inc
insb
fwait
jecxz
xor
fdivs
mov
in
addr16
adc
arpl
divl
mov
sbb
cmp
lock
cli
xor
xor
test
dec
inc
add
or
fldt
jecxz
sbb
or
or
jmp
add
and
dec
pusha
and
jmp
das
add
jne
mov
in
jle
aaa
sub
outsb
or
cmp
push
sub
mov
cmp
enter
jmp
cmp
je
arpl
in
in
dec
aaa
add
pop
jmp
adc
rcrl
cmp
cmp
filds
cmp
sub
aas
inc
stc
jbe
adc
insl
lods
cmp
ud2
daa
pop
add
push
adc
sub
inc
out
rorl
xor
pop
into
xor
in
in
or
add
fldt
sbb
push
fs
xor
add
stos
inc
cltd
lock
rolb
inc
imul
inc
cmp
xor
mov
pop
sbb
pop
cmp
and
pusha
nop
popl
jl
divl
js
cmpsb
flds
sbb
inc
jno
add
push
aas
cmp
fistps
sbb
aam
push
insb
push
sub
lods
inc
pushf
addb
push
xadd
movsl
xchg
aaa
add
addr16
and
add
ja
mov
mov
or
push
mov
lds
sbb
sbbl
repnz
mov
and
aas
jl
jb
inc
sub
mov
xor
jo
aaa
aaa
lods
lahf
out
or
sbb
cmp
cld
push
jo
mov
aas
push
and
enter
test
cltd
movsl
dec
jg
adc
cmp
fwait
adc
push
nop
out
notb
adc
inc
add
cmp
add
movsl
mov
test
add
inc
faddl
addb
sbb
inc
cmc
rcl
xchg
pop
push
sbb
inc
dec
mov
lea
iret
mov
or
jbe
cmpb
cmpsl
sbb
sbb
shlb
push
jmp
and
test
jle
inc
mulb
mov
data16
jle
dec
adc
inc
dec
jae
mov
inc
insb
rcr
mov
mov
adc
and
nop
jp
and
testl
jg
lock
cmp
sbb
add
imul
and
pop
adc
dec
mov
inc
pusha
and
xchg
add
pop
jnp
js
add
or
aam
inc
insl
and
imul
pusha
frstor
mov
xor
push
sbb
data16
mov
inc
push
or
les
out
cmp
push
mov
out
or
add
jne
adc
push
dec
rcrb
rorb
inc
das
mov
loope
aas
repnz
push
das
cwtl
dec
add
ss
sbb
jne
dec
and
test
cmpsl
jbe
loopne
mov
push
and
mov
xor
adc
adc
stc
dec
or
push
testl
adc
pushw
into
pop
jle
inc
cmp
outsl
testb
cmp
cmp
int3
and
pusha
sbb
and
bound
push
cmp
fcompl
dec
xor
ss
push
cmpsl
dec
xchg
sbb
jae
out
cmp
test
adc
std
cmp
loopne
ds
subl
mov
or
ljmp
in
outsl
in
push
or
push
in
jmp
gs
imul
push
aaa
adc
mov
inc
mov
das
add
fbstp
sti
jne
mov
sbb
xorb
xor
repz
xchg
mov
jo
and
push
adc
add
adc
divl
fwait
and
popl
adc
inc
add
out
sarl
adc
inc
pop
add
icebp
dec
es
cmpsb
sub
fs
or
xchg
sub
mov
add
sub
pusha
cmc
dec
pop
xchg
ret
shlb
and
insb
or
dec
mov
sbb
mov
daa
mov
mov
cmp
fs
mov
jecxz
push
push
adc
dec
inc
rdtsc
and
movsl
sub
jp
call
mov
testl
icebp
xchg
sub
in
mov
lds
xor
push
push
xchg
xor
decb
inc
loope
mov
jne
xor
push
insb
and
int3
push
dec
pusha
adc
movsb
xor
jo
and
add
pop
cmpsb
inc
jne
jne
jns
xor
inc
sbb
xchg
cs
lds
pop
mov
xchg
mov
mov
dec
mov
cmp
jge
aad
fdivrp
iret
arpl
pop
aas
jae
mov
cmp
xor
push
jbe
sbb
lods
ret
pop
rorl
push
or
gs
cmp
push
or
add
rcll
or
inc
adc
vpcmpgtd
mov
add
inc
push
push
js
dec
mov
jmp
add
mov
imul
enter
in
sbb
inc
mov
add
xor
push
cwtl
loope,pn
divb
mov
adc
jp
xchg
add
push
jo
mov
add
or
mov
test
mov
enter
cltd
cld
cld
mov
add
or
mov
outsb
mov
jl
add
in
addl
icebp
cmp
ds
push
and
sbb
jmp
movsl
pop
push
and
inc
call
js
ss
or
inc
and
ret
sarb
add
or
add
push
xlat
adc
sar
fstpl
mov
pop
pusha
leave
aaa
xorl
sub
or
fsubs
mov
mov
movsb
repz
jecxz
test
xor
rcl
test
and
jmp
icebp
out
cmpw
sbb
push
popf
lret
or
adcl
pop
mov
mov
dec
xchg
adcl
xor
mov
push
out
sub
mov
inc
js
xchg
push
cmp
or
xchg
mov
pop
in
mov
jb
or
add
xchg
pushf
mov
enter
clc
mov
shl
xor
cmp
sbb
or
add
pop
js
subb
daa
loope
lea
xor
adc
loopne
push
imul
sbb
sub
shlb
dec
add
inc
inc
jb
inc
jecxz,pn
and
nop
push
add
xchg
adc
addl
push
cmp
xor
push
dec
or
adc
or
jb
mov
add
xchg
dec
push
xlat
sub
jl
lahf
cmp
daa
or
or
mov
clc
inc
push
jmp
inc
jl
jo
sbbb
das
pushf
jge,pn
mov
mov
lea
adc
aad
xchg
xorb
mov
enter
mov
xorb
adc
xchg
test
mov
aam
xor
xlat
add
lsl
add
jle
out
aad
inc
sub
cmpsl
or
xor
movsb
add
jl
mov
repnz
fmuls
mov
js
jbe
lods
dec
aam
cmp
aas
loop
cmpsb
add
xor
jle
or
repnz
push
inc
call
loopne
popa
call
sbb
jl
mov
mov
cmp
pusha
inc
out
pop
jo
push
mov
loop
mov
xor
adc
sbb
add
add
mov
leave
scas
lock
dec
dec
imul
mov
fucomip
mov
sub
fmull
rol
sub
mov
mov
xor
iret
push
je,pn
push
shlb
adc
cli
enter
or
mov
pop
js
mov
jp
inc
test
pop
cmp
push
inc
jle
aam
movl
xchg
into
jg
xor
inc
push
sub
mov
dec
xor
aad
lods
into
push
and
xchg
xchg
push
ret
out
mov
fidivrl
sbb
sbb
jnp
imul
or
dec
fisttpl
popa
sub
push
push
inc
popf
bound
roll
pop
push
pop
dec
loopne
sub
push
bound
sar
rcll
ret
or
lret
or
in
sub
cmp
inc
cmc
clc
inc
xchg
fildl
cmp
fidivrl
or
adc
push
inc
and
adc
sbb
js
or
bound
cmp
sarb
rclb
sub
sub
mov
dec
in
sub
jle
sub
jb
nop
inc
imul
rcrb
nop
mov
xchg
jbe
shll
or
dec
dec
jl
mov
stc
sub
xlat
int
push
pop
loopne
add
push
sbb
add
and
aad
lds
or
push
sub
out
cmpsb
jnp
adc
sub
xor
test
push
add
sti
mov
lock
push
jmp
dec
mov
xor
mov
loopne
mov
or
pop
mov
or
mov
push
push
sahf
add
popf
jb
insb
inc
xchg
aas
fisubs
enter
mov
out
test
jne
add
dec
enter
sbb
js
xor
mov
jg
cmpsl
enter
xor
or
sub
and
jb
lock
xchg
hlt
sub
mov
mov
leave
mov
mov
mov
jb
add
pop
and
out
imul
cs
mov
fistpll
push
and
sub
add
and
sub
add
dec
test
push
fcomps
pop
sub
add
add
inc
and
andl
pop
negl
call
rolb
pop
dec
loopne
cmp
pop
psubq
pop
sub
in
or
mov
sbb
mov
ret
inc
push
in
or
jle
inc
mov
fiaddl
dec
adc
fsubs
popa
or
jns
dec
mov
mov
mov
xlat
mov
add
pop
and
push
test
dec
sti
mov
xor
inc
adc
sbb
cmp
in
popa
cmp
or
add
mov
lock
clc
insl
test
divb
mov
cmp
movsb
or
xchg
mov
enter
aas
test
push
jo
test
dec
or
add
and
pop
lret
enter
mov
lock
and
add
sub
repnz
inc
xor
loopne
fcoml
mov
xor
push
sbb
cwtl
rcrl
sbb
sub
shlb
sub
or
xchg
jns
orb
and
movhps
xor
adc
pop
mov
shll
orl
femms
imulb
lea
test
jl,pn
fsubr
pop
imul
pop
dec
jge
pop
push
jmp
inc
adc
icebp
ljmp
adc
fldcw
add
pop
lods
dec
jg
sbb
mov
out
pushf
jl
nop
fwait
and
lahf
rcll
adc
or
out
push
mov
sub
xor
inc
repnz
push
sub
pop
fsubrs
rcll
inc
aad
cmpsl
sbb
and
fwait
or
push
adc
lret
in
and
ss
xor
cmc
and
fcomps
add
push
dec
cmp
shrb
sbb
and
xor
imul
iret
dec
insl
mov
pop
into
fsubrl
mov
test
mov
xchg
xor
or
repz
scas
cmc
imul
loopne
repnz
test
bound
mov
push
inc
xor
leave
fmuls
dec
cmp
sbbb
in
and
or
add
mov
mov
jno
pop
sub
fstpt
push
je
mov
fucomi
or
sub
jno
dec
or
aad
lock
add
push
mov
cmc
pop
fcoms
pop
test
gs
jb
andb
mov
in
test
and
pop
dec
outsl
and
daa
pcmpeqd
ret
or
mov
and
lock
clc
dec
adc
xchg
pop
sbb
xchg
dec
test
mov
ret
and
or
adc
adc
cmp
push
lea
jno
ret
push
ret
sbb
lret
cmpsl
pop
cld
hlt
arpl
stos
xor
testl
pop
adc
cmp
push
daa
call
jne
xchg
xor
cmp
xor
test
out
out
in
jae
sbb
clc
jmp
loop
loope
push
jne
inc
sbb
mov
xor
aad
inc
jb
mov
out
push
pop
daa
pop
adc
sbb
bound
clc
dec
xchg
xchg
adc
jl
xor
movsl
in
shll
inc
mov
adc
or
inc
loopne
fsubrs
in
adc
add
sbbb
dec
loopne
xchg
leave
stos
and
dec
xchg
dec
mov
push
dec
xor
mov
arpl
xor
fildl
test
add
sbb
push
fmuls
push
pushl
enter
mov
orl
xchg
pushf
or
jns
jl
push
pop
lds
or
data16
in
lock
add
pop
das
insl
push
pop
shlb
movsb
imulb
mov
addl
adc
xchg
ficompl
loop
sbb
mov
add
sbb
jne
mov
popf
adc
stos
cmp
ret
and
mov
fcomps
and
or
jmp
es
sbb
add
aaa
cmc
add
mov
or
or
cmpsb
lcall
pushf
jle
and
sbb
cltd
es
rcrb
jle
mov
push
in
call
and
push
int
imul
fbstp
mov
xchg
add
ret
insb
sbbl
shll
pop
and
dec
push
test
out
movb
push
cmp
das
adc
insl
sbb
sbb
jmp
aas
mov
or
sub
call
pop
jg
out
mov
xchg
and
push
or
jp
test
jl
or
xor
divb
in
pop
dec
sbb
test
mov
xor
jl
adc
or
inc
inc
mov
lock
in
imul
fwait
add
add
mov
test
pop
mov
add
xchg
lret
push
loopne
je
loopne
out
out
jle
sbb
je
lock
add
push
lcall
or
push
lock
imul
sub
adc
pop
hlt
mov
cmp
or
inc
icebp
stc
call
jp
add
sbb
in
inc
add
sbb
xchg
or
pop
test
jecxz
add
daa
xor
push
imul
cmp
inc
jp
push
fs
or
setnp
imul
bound
mov
jmp
out
jb
inc
sub
fcom
aad
push
jb
fcom
xor
mov
jo
pop
es
push
push
mov
mov
rclb
adc
pop
cmp
xor
es
loope
jg
xlat
pushf
test
ja
push
and
push
add
or
fdiv
int3
addr16
pop
int3
jb
loopne
xchg
sti
enter
push
cmp
hlt
in
sbb
cmc
jo
inc
faddl
rorb
pop
jp
pop
les
sbb
sub
in
dec
pusha
xchg
scas
ret
fcompl
subps
cmp
add
aaa
rcr
pop
inc
pop
pop
sub
rcrb
adc
mov
rcll
pop
add
packssdw
shr
dec
cltd
or
movsb
pop
lret
cmpb
nop
cmp
pop
andl
xchg
ljmp
les
pop
sbb
jg
jne
repnz
lret
lock
and
mov
or
cmp
inc
cmp
and
add
sbb
push
gs
sbb
pusha
or
stc
xor
or
jge
push
sub
add
sbb
loop
pop
xchg
int3
and
pop
sti
xor
push
sub
sbb
sub
out
inc
cs
leave
mov
xor
xchg
adc
scas
test
or
add
outsb
pop
mov
dec
jecxz
xchg
sahf
lods
ret
sub
enter
test
cmp
clc
add
add
mov
add
fildl
aaa
jno
arpl
pop
les
adc
sbb
inc
xchg
add
out
cmp
sub
push
dec
push
dec
mov
or
adc
leave
xor
lea
cmp
inc
ret
dec
mov
jae
hlt
cmp
add
mov
daa
icebp
push
add
inc
stos
cmp
mov
loop
cmp
and
sbb
cmp
test
pop
sbb
or
mov
push
add
or
pop
call
shll
pop
inc
push
stos
and
and
arpl
push
jle
mov
xor
cmp
jmp
xor
or
insb
ror
or
jmp
add
nop
push
add
mov
fsubrs
out
aas
je
adc
xor
dec
or
mov
or
mov
push
sbb
sub
and
das
adc
sbb
push
cs
popa
call
or
pusha
repnz
js
pop
push
mov
pop
cmp
push
fmull
pop
mov
outsb
out
shrb
push
inc
inc
adc
dec
je
pop
or
subl
inc
xchg
cmp
xor
mov
jg
push
pusha
or
inc
dec
or
jnp
add
or
in
inc
mov
dec
xor
or
inc
dec
test
sbb
arpl
jo
mov
mov
adc
addr16
xlat
pop
in
dec
popa
inc
and
cmpsl
cmp
cmp
cmp
fld
add
lret
xor
mov
pop
fsubs
out
inc
inc
fimuls
cmp
push
daa
addl
lea
lods
mov
xor
jo
adc
push
xchg
push
sbb
dec
pop
mov
dec
add
fucomip
xor
test
aad
dec
imul
roll
jbe
and
mov
adc
aas
aad
add
push
data16
inc
ljmp
loop
pop
movl
shr
enter
inc
popa
js
pop
fbstp
out
jnp
or
sub
scas
add
xor
pop
int
jnp
xchg
or
jmp
mov
jmp
icebp
xchg
cmp
je
add
xchg
pop
hlt
and
jne
xor
sub
cmp
fistpll
cmpw
enter
sarb
orl
push
orl
xor
push
fiadds
cli
mov
inc
ret
push
or
adc
jo
fisttpll
enter
mov
push
or
into
adc
push
xor
xchg
mov
sbb
dec
sbb
xchg
test
js
pop
push
cwtl
xorl
adc
addr16
js
test
xchg
cmpb
loope
adc
sub
sbb
adc
test
or
sub
adc
cwtl
imul
adcb
mov
inc
dec
adc
popf
push
dec
jecxz
orl
push
sahf
stc
inc
jmp
mov
mov
je
dec
or
adc
inc
filds
mov
mov
pushf
aam
dec
or
je
pop
xchg
pop
sub
mov
popl
xor
js
push
or
push
adc
inc
sbb
mov
mov
or
cmp
pop
ljmp
int3
xor
xchg
aaa
enter
inc
pop
or
cmp
icebp
rorb
sbb
lret
mov
xlat
mov
inc
lret
push
cmp
jp
or
jnp
imul
sub
mov
cmpsb
jl
push
and
loop
fdivs
xor
mov
xor
pop
sbb
fs
daa
pop
add
add
jne
mov
mov
lret
xchg
jl
add
jnp
fs
mov
adcb
outsl
pop
jb
inc
pop
mov
cltd
xor
insb
jg
je
mov
fimull
aam
sub
adc
add
cmp
adc
xchg
test
fmuls
cmc
sbb
mov
xchg
or
lcall
mov
and
xchg
lods
pop
sbb
and
in
xor
scas
dec
dec
in
test
scas
in
test
stc
aas
and
xchg
pop
and
cmp
leave
inc
xor
inc
adc
leave
or
jo
or
push
cmp
sbb
rorb
test
adc
out
adc
pop
cmpb
xor
pop
push
pushl
lds
cmpsb
sub
loope
pop
add
lret
xchg
sub
pushl
dec
push
dec
sub
push
cmp
mov
push
fsubr
push
push
je
jns
jl
cmp
pop
mov
inc
mov
add
push
adc
addb
add
push
dec
pop
cmp
add
clc
outsl
mov
sbb
cmpsb
push
push
cmc
jge
cmpsb
lds
jbe
rcrb
xchg
inc
pop
ss
les
fs
nop
push
sbb
cld
mov
inc
sbb
dec
ret
adc
xchg
or
jmp
xor
or
ror
push
sbb
xor
add
call
inc
add
add
call
in
inc
push
fwait
movsl
imul
add
sub
in
push
xor
mov
push
and
sub
xor
inc
dec
jne
and
scas
or
mov
orl
test
jmp
lods
mov
icebp
or
aad
call
pusha
popf
and
jnp
out
pop
add
push
nop
sbb
inc
sbb
jmp
enter
pushl
dec
inc
add
add
lahf
inc
inc
jge
lock
pop
callw
adc
in
pop
push
jg
adc
aas
sub
push
sub
sbb
enter
incl
lcall
fldt
hlt
and
out
int3
jne
add
sbbl
add
arpl
xor
insl
xchg
adc
jnp
in
mov
mov
cltd
nop
in
aam
xorl
mov
es
and
arpl
xor
inc
cmp
add
and
les
push
rorb
int3
pop
mov
sahf
xchg
nop
push
loopne
inc
sub
mov
or
push
pop
jo
arpl
dec
xor
push
scas
push
cmc
sbb
pop
je
push
in
sbb
mov
dec
repz
mov
les
mov
pop
sbb
xor
sub
mov
test
add
jo
cltd
mov
inc
inc
lcall
int3
xchg
push
push
stos
mov
sbb
push
rcrb
add
shl
push
sarb
imul
sbb
mov
outsb
mov
xlat
in
sarl
rorb
je
push
push
xor
imul
jmp
push
mov
and
push
in
pop
or
and
inc
fisttpl
pop
test
sub
mov
jge
loopne
mov
test
imul
pusha
test
push
pop
and
cmpsb
rcrl
push
jo
dec
xor
inc
sar
mov
int
lds
jp
pop
stos
add
mov
adc
pop
or
lret
jne
or
sub
ret
hlt
mov
call
leave
lods
sub
dec
xor
pusha
pop
sbb
int3
icebp
jno
jmp
pop
rol
sub
in
outsb
adc
xchg
mov
push
aam
sbb
jmp
and
xchg
mov
inc
fcompl
pop
pop
xor
add
jg
stc
aam
cmp
xchg
cmp
mov
mov
popa
sub
lods
test
cmp
and
add
add
sbb
and
in
cmp
cmpsl
sub
jl
inc
sarl
xchg
fidivrs
push
addr16
cmp
inc
movb
sbb
push
mov
aad
mov
pop
inc
sbbl
push
xor
mov
cmpb
movb
xchg
lea
jne
dec
fsts
loope
in
fadd
movb
jle
leave
xchg
dec
enter
adc
dec
inc
jne
cmp
idivb
mov
mov
cmp
mov
or
and
inc
leave
subl
arpl
mov
stc
push
cmpsb
pop
cmp
add
std
inc
push
adc
add
les
push
cmc
sub
je
std
out
mov
pop
jo
cs
pop
inc
je
movb
and
mov
push
cld
call
insb
xchg
sub
test
pop
fcmovbe
add
mov
xor
cmp
inc
and
push
sbb
lods
jae
inc
xor
xchg
mov
adc
test
aas
inc
stc
daa
ja
cmp
pop
push
outsb
push
mov
sbbl
push
push
xchg
inc
loope
push
mov
or
cs
pop
jge
push
call
lret
sub
cmp
push
add
arpl
push
pusha
xchg
loope
adc
out
xor
inc
mov
or
jns
cli
and
pop
nop
jmp
pop
push
insb
add
adc
mov
mov
pop
or
pop
out
dec
cmp
ljmp
or
xor
outsb
add
rolb
push
and
and
dec
je
jmp
jns
lock
inc
fs
sbbb
adc
sbb
or
mov
movsl
cmp
ja
add
stc
xchg
mov
xchg
mov
add
mov
sbb
mov
rorb
adc
push
push
adc
shrl
sbb
mov
jle
loop
es
cmp
clc
adc
push
xor
sbbl
cmp
mov
mov
pop
inc
addl
icebp
cld
sub
ret
inc
addr16
ret
mov
add
inc
inc
cmovp
or
add
adc
divl
ljmp
aas
mov
add
int
jmp
hlt
dec
lea
std
xor
adc
lods
fwait
push
sarb
mov
sbb
inc
add
dec
hlt
mov
xchg
mul
inc
lret
push
ss
fdivr
rorl
sub
push
xor
add
mov
or
xchg
add
nop
cmpsb
popf
mov
pop
inc
add
cmp
jno
loopne
dec
sub
repz
mov
imul
ficoms
rcrl
add
outsb
lds
jb
xor
adc
es
sbb
and
jae
ja
fcompl
mov
sbb
clc
or
bnd
jb
jo
test
ss
sbb
jge
push
js
sbb
mov
je
shlb
sbb
cmp
sbb
adc
sti
sbb
cmp
popf
lcall
nop
and
and
out
es
or
je
andb
test
ljmp
cli
mov
out
add
fs
sarl
adc
mov
pop
pop
shrb
xor
sub
push
add
and
movsb
sub
jbe
dec
stc
inc
mov
mov
cmp
outsb
cmpsb
cli
mov
push
cli
sbb
mov
setp
insb
mov
mov
add
xchg
lock
and
gs
mov
add
cs
jp
mov
sbb
sub
inc
mov
add
dec
sbb
add
push
rolb
mov
iret
adc
pop
sub
sti
fadds
add
or
add
adc
mov
test
sti
bound
push
xor
mov
mov
mov
jne
mov
push
cli
or
bound
int
xor
in
dec
push
add
lds
jbe
sub
inc
test
push
jbe
cmpl
repz
xor
faddp
add
popa
in
mov
adc
aad
add
sahf
inc
xor
xlat
xor
mov
je
or
jae
jnp
or
xor
xchg
xor
adc
mov
xchg
push
sub
and
adc
pop
imull
push
pusha
in
pop
and
mov
je
xor
dec
rcrb
or
bound
lahf
ss
mov
mov
cmp
cmpl
inc
enter
popl
lea
lea
imul
imul
jp
rclb
pushf
insb
rcl
lret
push
inc
push
mov
add
push
lahf
rcl
add
movl
inc
push
add
push
cs
xchg
inc
inc
add
or
sub
dec
cmp
push
cmpsb
adc
data16
aas
sbb
test
fistpl
adc
or
sub
pop
cmp
dec
js
cmp
or
jge
push
add
cmp
mov
pop
jge
adc
inc
mov
xchg
js
xchg
cli
insb
cmp
stc
add
out
push
push
adc
mov
into
push
xor
inc
add
pop
fildll
andl
test
xor
mov
inc
xor
out
adc
inc
jge
mov
mov
or
aam
push
push
cmpb
mov
frstor
lock
or
or
ret
mov
mov
push
add
sub
psubw
adc
js
inc
jo
inc
test
lret
jge
pusha
not
fists
cmp
mov
js
in
add
inc
dec
into
xchg
inc
dec
pop
js
fisubrl
ja
push
and
les
rorb
push
aas
mov
xor
sbb
lods
pop
xchg
test
je
push
or
sti
add
mov
xchg
aas
lock
xor
xor
mov
adc
xor
cmpsl
addl
push
xor
fcompl
dec
sbb
imul
stos
and
testl
enter
sub
or
outsl
jge
orl
out
lods
jg
lea
clc
std
and
add
clc
cmp
cwtl
outsb
pop
hlt
jp
das
pop
hlt
xchg
ss
xchg
xor
mov
fwait
inc
pop
nop
in
push
mov
sbb
xchg
dec
and
mov
jne,pt
or
jb
pop
mov
add
test
pop
push
dec
setnp
add
nop
xchg
xchg
lock
arpl
call
mov
int
push
inc
nop
ja
inc
or
sahf
and
fsubrl
inc
sbb
mov
jmp
sbb
scas
mov
lock
cmpb
add
in
mov
jl
adc
arpl
int3
mov
decw
nop
or
mov
jb
xchg
lret
pop
or
andb
test
or
or
xchg
sbb
adc
or
push
rclb
aaa
in
lea
jg
mov
subb
sub
test
xchg
pop
push
ss
and
clc
dec
mov
xchg
inc
jo
or
punpcklwd
pop
dec
inc
andl
lcall
ds
or
call
cmp
lcall
shrb
xor
inc
sahf
push
js
inc
in
push
daa
inc
inc
add
add
pop
and
mov
out
sbb
mov
cmpsl
pop
movhps
cmp
mov
add
push
sbb
insb
lahf
shll
imul
xchg
sub
aam
dec
and
xor
cltd
loope
outsb
inc
cmp
out
gs
pop
je
pop
mov
push
punpcklwd
inc
push
push
xlat
push
loope
roll
push
cmp
mov
rcr
inc
xchg
jne
arpl
cmp
jno
mov
lods
loopne
loopne
and
mov
outsl
loopne
push
cld
rcrl
adc
mov
in
outsl
jle
inc
adc
dec
dec
push
or
dec
fdivrs
adc
mov
js
and
inc
ret
xchg
mov
xor
push
in
cltd
lahf
lcall
inc
xchg
ficoms
add
test
inc
push
cmp
bound
xlat
xor
cmp
add
daa
sub
jge
out
push
inc
jae
sub
sub
je
inc
pop
add
pop
xorb
sbbb
xchg
jnp
jecxz
push
mov
add
pop
enter
stos
mov
mov
imul
ss
imul
lret
loop
testb
neg
xor
add
cmp
rolb
call
push
pop
movsl
xchg
test
adc
adc
add
xlat
dec
push
adc
sbb
push
pop
jmp
mov
dec
scas
xor
pop
sub
rcrb
jbe
loopne
cltd
lret
dec
adc
and
sub
fnsave
vcvtss2si
add
inc
fildll
or
sub
xlat
hlt
ljmp
push
loopne
xor
and
enter
ljmp
iret
pop
jae
nop
mov
add
add
jge
push
add
mov
mov
out
xchg
or
mov
adc
dec
or
xbegin
lock
das
cltd
xchg
fdivrl
or
or
ret
pushf
pop
sub
and
in
and
insb
inc
sbb
rolb
xchg
fnstcw
out
std
push
add
shr
rolb
push
lea
add
xchg
jbe
fucomi
mov
int3
movsl
imul
out
stos
fiadds
sahf
sbb
in
adc
adc
je
rol
xchg
sbb
cli
mov
adc
mov
dec
inc
mov
rcll
dec
and
shlb
dec
push
fmuls
arpl
cs
cmp
sbbl
dec
in
loope
subl
dec
addr16
push
ret
stos
dec
mov
fldl
add
lods
cmp
add
std
cmp
push
jmp
pop
or
jecxz
ljmp
adc
sbb
adc
add
dec
push
jo
loope
test
cmp
xchg
movsb
push
fstps
add
shlb
push
mov
dec
jbe
in
les
xor
inc
pop
push
inc
pop
cmp
stos
jne
mov
lcall
mov
data16
inc
popa
add
imul
movl
je
setne
fcompl
aas
add
or
push
data16
je
ja
xchg
lods
lock
lahf
insb
test
sbb
pxor
xor
cld
adc
jmp
sub
dec
fistpll
cltd
loope
lahf
lahf
jns
cmpb
rorb
jp
fadds
push
pop
inc
inc
mov
dec
push
ret
add
nop
lock
aam
xchg
divl
or
xchg
test
mov
inc
xor
xchg
inc
nopl
in
gs
cmp
test
mov
insb
xor
push
push
sub
sub
fucomip
sub
enter
sbb
shl
or
ret
loope
loopne
inc
jbe
push
movsl
and
pop
adcl
sbb
adc
mov
dec
pop
adc
ret
dec
gs
pop
add
add
lea
sub
sbb
fs
nop
pop
adc
xchg
call
sbb
aad
fmuls
adc
adc
sub
jecxz
xchg
and
jbe
xlat
push
jge
mov
sbb
negb
je
add
pop
xor
cmp
pop
dec
stos
sbb
dec
dec
cli
push
add
inc
mov
or
sub
daa
jnp
dec
push
mov
fists
movsb
fdivrl
push
inc
xor
push
bnd
fcoms
mov
sub
sub
push
sub
sarb
dec
push
sub
insl
add
out
cmp
setge
sbb
shl
cli
cmp
sub
xchg
or
add
xchg
lret
push
push
add
insb
sub
dec
jns
test
push
sbb
or
cltd
cs
inc
jle
clc
shufps
daa
lock
js
inc
ja
arpl
push
lahf
cmp
jl
mov
nop
aas
adc
and
add
adc
push
jne
cwtl
andb
jbe
xor
push
lds
add
jge
lret
pop
mov
ret
jne
mov
in
pop
push
sub
clc
sbb
mov
insb
rorb
jge
lock
dec
cmpsb
xor
add
inc
pop
inc
lahf
sahf
mov
jo
fwait
pop
out
xor
cmp
mov
hlt
push
inc
lock
mov
dec
in
or
int3
mov
int
stc
sahf
adc
push
nop
mov
mov
fdivrs
aam
shrb
xor
repz
test
fadd
push
cld
out
jns
jnp
outsl
dec
mov
les
into
cmp
add
sub
imul
sub
fwait
pop
sbb
aaa
xorl
loopne
or
mov
sub
notb
out
jo
inc
arpl
nop
les
push
push
add
lods
shl
pop
inc
jl
add
das
rcr
add
jp
push
xchg
popa
ret
popa
sbb
inc
nop
sub
push
add
out
dec
adc
or
sub
sub
add
outsl
jo
cmpb
inc
sub
push
sbb
ss
xchg
dec
cs
out
imul
push
fdivs
les
icebp
jns
int3
or
in
mov
pop
and
iret
inc
cmp
sar
mov
mov
mov
mov
mov
pusha
mov
push
add
cmp
rorb
cmp
pop
push
mov
addb
dec
insb
pop
cmpb
mov
in
or
dec
adc
or
lea
test
leave
dec
sahf
movsb
mov
and
dec
leave
adc
js
or
out
sub
dec
mov
push
jb
sub
mov
mov
cs
test
add
push
cmp
push
sahf
xor
inc
jl
mov
testb
or
push
jo
sbb
nop
xchg
sbb
adc
rorb
adcb
mov
je
mov
push
aam
jl
inc
ret
add
mov
testl
lds
push
push
inc
iret
lds
in
nop
test
push
or
hlt
inc
cmp
mov
jle
mov
push
push
imul
dec
pop
cmp
test
rcll
and
inc
nop
xchg
repnz
mov
dec
push
repnz
and
inc
pusha
repz
loopne,pt
inc
inc
cmp
bound
fstpl
nop
test
pop
and
lods
lret
pop
add
sub
movsb
xchg
sbb
bound
insl
add
sbb
call
lahf
out
addl
insl
popa
insl
cwtl
sub
adc
inc
dec
or
fcmovnu
mov
clc
and
dec
iret
arpl
pop
xchg
or
inc
or
fs
dec
cmp
or
shlb
into
xchg
ja
mov
push
ret
nop
jae
mov
jae
pop
fucomp
pusha
bound
subb
jle
xor
paddusb
push
fs
xchg
push
or
xchg
data16
sbb
cltd
add
add
jge
insb
xchg
sub
or
push
es
dec
cmp
or
arpl
cmp
xchg
imul
loopne
jae
imul
sbb
fidivrs
jae
jns
cwtl
pop
andps
dec
adc
orb
cli
mov
pop
adc
xchg
adc
and
add
inc
fcoms
enter
loope
in
sbb
push
pop
adc
adc
wbinvd
pop
sub
inc
mov
add
or
js
dec
ja
or
dec
into
pop
ret
or
leave
out
xchg
adc
add
stc
pushf
pop
xor
add
test
pusha
jbe
xchg
cmp
pop
or
test
adc
xchg
push
in
roll
ret
push
or
out
fdivs
into
insb
sar
movl
roll
in
sub
cwtl
pusha
enter
add
cmp
or
push
add
aam
xchg
je
adc
push
add
adc
adc
pop
push
sbb
sub
outsb
xchg
push
cmp
fwait
nop
pop
andb
sbb
popa
jp
xor
push
mov
fs
movl
and
je
das
pop
leave
inc
jb
add
loopne
pop
and
xor
xchg
add
loopne
or
in
push
dec
movsl
inc
pop
mov
push
or
sub
sbb
pop
sub
add
inc
add
out
cvttps2pi
inc
ror
int
and
cwtl
xor
loopne
adc
pop
mov
xor
popa
and
or
aad
and
xchg
subl
push
cmp
sub
add
mov
push
cltd
xchg
xchg
inc
sbb
add
ret
cmp
mov
sub
ja
mov
inc
jge
insb
cmpl
ret
inc
add
test
xor
js
sbb
psubusb
add
add
and
mov
or
lcall
dec
or
jp
rorb
xor
into
orb
and
addr16
in
pop
fcompl
pop
xor
inc
dec
pop
pop
mov
sbb
and
out
push
mov
iret
notl
push
xor
not
fwait
sub
sbb
mov
push
outsb
fimull
ja
mov
in
sub
ror
jmp
fsts
inc
pushf
paddusb
and
or
pop
or
mov
ror
adc
or
jnp
adc
pusha
mov
and
int
rol
adc
mov
test
je
add
add
test
das
mov
pusha
xlat
sbb
loopne
pop
lea
or
cwtl
sub
mov
int
fmull
imul
and
pop
fbld
test
shr
mov
push
mov
mov
popa
js
popa
loope
insl
pop
sahf
sub
loope
addr16
gs
jge
leave
psubusw
push
test
or
cs
in
mov
and
jo
add
repz
cmp
lahf
scas
loopne
mov
test
mov
pop
mov
mov
xor
push
aam
enter
inc
cmp
inc
insb
xor
rolb
pop
ret
fs
lcall
pop
add
lods
enter
mov
add
add
or
scas
inc
add
add
out
xor
add
mov
testb
xor
mov
loope
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
filds
fdivrp
fdivr
fidivrl
or
call
call
call
call
call
call
dec
mov
call
dec
dec
dec
lret
leave
dec
stc
push
pop
inc
out
xor
mov
sti
mov
rcrb
push
js
iret
sarl
in
or
mov
insb
or
movsb
mov
mov
dec
mov
or
push
in
or
adc
in
push
test
shlb
or
out
cmp
pop
and
es
push
sbb
pop
dec
insl
jecxz
in
add
dec
pop
pop
mov
mov
icebp
push
fs
push
push
insb
push
add
push
sub
je
lock
in
hlt
cld
mov
sbb
adc
fsubs
shrl
js
push
push
lock
push
inc
ss
fimull
sbb
ljmp
cmp
xchg
ss
out
sbb
push
ret
cmpb
in
dec
add
es
inc
jg
sbb
daa
adc
pop
or
sbb
out
in
adc
push
xorl
and
add
or
cmp
push
jb
pop
inc
push
or
cmp
and
mov
dec
rolb
adc
dec
add
push
adc
sub
and
add
in
lock
push
cmpsl
in
cmp
push
inc
mov
jno
or
jo
sbb
mov
push
and
mov
orl
push
cmpl
mov
jp
dec
rolb
inc
adc
xor
dec
or
adc
sub
iret
sub
mov
nop
inc
jb
in
clc
adc
andl
test
push
scas
daa
fsubs
cmp
call
clc
nop
inc
sbb
cmp
add
outsb
or
sub
xchg
adc
ret
jns
sbb
ret
pop
dec
dec
mov
cmp
pop
orl
in
cwtl
inc
mov
mov
imul
fdivrs
xor
xor
adc
inc
mov
push
decb
adc
insb
cmp
movl
inc
pushf
test
pop
push
js
and
dec
xchg
and
loop
ret
out
and
dec
or
movsb
pusha
jns
add
push
test
inc
iret
xor
ret
stos
inc
dec
stc
and
push
inc
xchg
inc
insb
sub
popl
jo
pop
cs
mov
movsb
push
mov
rorb
adc
dec
ljmp
or
call
xchg
jge
inc
push
add
add
add
add
pop
pop
mov
and
addl
outsl
sbb
add
add
add
push
test
add
mov
mov
adc
or
mov
mov
mov
mov
adc
sbb
mov
mov
mov
ljmp
mov
mov
add
push
mov
xor
cmp
shrb
mov
dec
in
ljmp
inc
cmp
inc
inc
inc
mov
pop
test
aam
mov
mov
mov
mov
stc
mov
mov
mov
pushl
mov
and
jp
push
iret
sarl
les
xor
js
out
cmp
rclb
je
int
stc
xor
add
les
repz
sarb
dec
pop
sti
sahf
ja
hlt
adc
push
push
push
push
cmpsl
fnstcw
call
pop
mov
mov
mov
add
sbb
push
cmp
fwait
iret
push
lods
sarb
fdivs
pop
fiadds
mov
push
sbb
fcompl
or
jnp
mov
push
test
in
lahf
out
in
push
hlt
cld
cmp
popa
push
jge
ds
jo
sbb
mov
push
insb
xor
cmp
push
push
inc
push
push
shlb
jns
jp
je
je
push
out
imul
push
fs
xor
cmpsl
jge
sub
push
pushf
test
inc
outsb
jbe
out
xor
inc
add
or
cmpsl
fldcw
xchg
gs
loopne
shrl
and
data16
insb
adc
xchg
add
clc
mov
lods
pop
and
rolb
sarb
dec
stos
pop
push
fs
xchg
arpl
mov
mov
lahf
push
and
pop
sarb
sbbl
jle
addl
aad
adc
sub
inc
fisubs
in
stos
in
enter
aad
call
or
inc
or
add
lods
mov
xlat
mov
pop
aaa
lock
xchg
nop
pop
fnop
popa
mov
sub
popl
int
dec
js
dec
scas
data16
pusha
xchg
adc
jg
inc
jb
cmpb
push
divl
add
test
sahf
nop
add
adc
in
lret
mov
les
mov
jnp
in
cmp
and
icebp
loopne
notl
les
in
dec
pushl
ret
sub
ret
les
mov
pop
and
mov
in
clc
paddb
or
or
adc
add
and
xor
add
sub
xor
subl
or
fs
scas
mov
repz
test
scas
std
add
iret
repz
xor
dec
mov
iret
pop
push
add
mov
js
and
jmp
add
mov
imul
dec
push
test
pusha
xchg
jo
imul
in
lahf
es
fnstcw
int
mov
adc
mov
sub
es
lods
xchg
sub
add
push
mov
add
add
xor
dec
jl
mov
insl
adc
lcall
lea
and
mov
rclb
xchg
mov
mov
imul
movsb
dec
aam
mov
lock
push
test
arpl
addr16
and
pop
sbb
insb
mov
pop
jmp
xchg
js
xor
enter
cmove
hlt
dec
js
push
inc
in
popa
dec
mov
dec
inc
imul
in
imul
or
nop
dec
pop
inc
push
adc
inc
test
push
push
push
cli
and
sbb
xor
add
add
outsb
push
cmp
or
inc
es
xor
dec
insb
ret
inc
callw
cmpl
jne
xchg
inc
inc
mov
popa
sbb
pop
xlat
andb
mov
leave
rcrb
ss
add
popf
cmpl
sbb
jns
iret
adc
pop
mov
imul
loopne
stc
nop
mov
jb
daa
inc
mov
ja
jns
pop
lcall
or
in
xchg
push
lcall
gs
inc
repnz
push
inc
push
inc
or
jo
daa
or
in
mov
clts
xchg
sbbl
fistl
insb
imul
cmpsl
ja
or
push
popa
push
sub
dec
mov
sub
inc
push
add
add
pop
cmp
sbb
mov
jnp
popa
out
dec
outsl
daa
push
shrb
adc
ret
cmpsl
pop
nop
lcall
mov
dec
sarl
lea
inc
pop
mov
inc
lret
dec
addr16
mov
sub
das
sarb
lea
xchg
xchg
sbb
mov
sbb
inc
inc
push
cmovo
dec
xor
enter
insb
das
mov
jae
dec
inc
aam
and
add
xor
rclb
jbe
fwait
adc
sbb
mov
dec
scas
fisubrl
cltd
ret
and
jb
fwait
mov
push
mov
mov
add
inc
pop
rcll
mov
mov
out
addb
inc
mov
xchg
jbe
loopne
and
cmp
cwtl
jg
fildl
mov
fmuls
add
jne
push
sbb
jbe
jl
sub
lds
subl
repz
pop
cld
mov
or
popa
repnz
push
sbb
lock
cli
fwait
jp
mov
sahf
cmpsb
mov
sahf
push
push
add
dec
clc
movsb
movsb
ss
into
lock
pop
inc
mov
adc
test
test
sbb
enter
je
inc
rcll
sbb
add
xlat
and
mov
xorb
add
xor
cmc
or
jne
filds
cmp
cmp
sbb
sarb
cmp
jecxz
popa
or
push
cmp
cmp
xchg
jno
push
dec
mov
mov
or
lcall
adc
sbb
cmpsb
imul
imul
ss
scas
push
push
push
push
mov
add
sub
mov
push
pop
test
pushf
popa
jae
add
bound
or
je
arpl
rcll
sbb
or
xchg
std
dec
je
and
push
xchg
mov
add
rorb
or
in
jge
ret
jne
loopne
mov
sbb
push
in
sti
mov
jmp
hlt
adc
add
fwait
rorb
incb
sbb
cmpl
jne
mov
pushw
nop
subl
xor
and
xchg
es
add
cmp
inc
or
cmpsb
fiadds
xchg
mov
dec
ficoml
lret
aam
stos
mov
shl
or
enter
mov
mov
jmp
or
incl
lahf
or
rorl
lods
inc
es
cs
js
push
pop
les
test
inc
adc
push
and
nop
xor
rolb
jo
xorb
adc
adc
adc
outsl
aaa
jle
enter
ret
add
nop
cmp
pop
xor
js
jge
cmpsl
dec
fisttps
clc
sub
and
rolb
mov
inc
inc
subb
lea
jge
mov
cmpb
pop
sbb
aas
pop
and
cmpsl
test
jbe
aas
jl
aas
push
insb
popa
pop
add
push
dec
sarb
and
mov
mov
dec
or
sub
pop
dec
cmpsl
loop
dec
pusha
or
sub
lea
fimuls
mov
pusha
mov
sbb
enter
dec
lea
sub
push
fs
pop
push
dec
dec
sbb
mov
insb
lahf
or
adc
in
mov
enter
movsb
jl
mov
jb
es
push
bswap
jns
mov
and
xchg
inc
xchg
push
scas
adc
jle
push
dec
push
sub
lods
pop
icebp
stc
testb
or
adc
push
dec
jb
repnz
xchg
mov
rol
xchg
fimuls
dec
ljmp
push
push
mov
popa
daa
fcmovbe
mov
ss
xor
clc
out
and
clc
lahf
and
sub
or
inc
inc
divb
inc
and
outsl
lahf
pop
mov
mov
jb
push
add
int
or
inc
adc
cmp
and
in
mov
lret
cli
mov
mov
jg
les
add
jmp
gs
mov
popa
xor
add
cmp
jp
in
mov
pop
xchg
inc
aaa
jp
xor
shl
push
or
test
or
daa
mov
inc
outsb
add
outsb
mov
cmp
adc
inc
inc
je
mov
add
movsl
in
sub
cmp
sub
lds
mov
jae
clc
lods
dec
or
shr
or
push
js
inc
lret
andl
movsl
adc
in
adc
scas
or
dec
pushf
les
sub
jge
sub
rolb
xchg
ret
les
mov
push
int3
fiaddl
xor
adcb
pop
inc
fstl
in
leave
inc
pop
push
rolb
jecxz
jle
xchg
fsub
pusha
cmp
xchg
outsb
dec
imul
pop
pusha
popf
and
test
jne
mov
andb
rcrb
outsl
or
mov
sub
add
enter
adc
push
cmpb
adc
fldl
add
bound
or
fnstenv
dec
pop
push
rcr
mov
cs
push
insb
idiv
fadds
or
add
ret
cmp
mull
fmuls
cmp
in
ret
inc
fs
inc
and
or
aas
jnp
pop
adc
jl
mov
adc
popf
call
xorps
mov
xchg
pusha
popa
inc
and
jl
inc
jne
and
loope
shll
and
loope
and
cmp
push
lock
sbb
pop
push
cmp
movsb
shll
add
or
xor
ljmp
push
push
pop
test
sbb
push
cmc
movsb
push
iret
mov
subl
push
mov
repnz
push
pop
add
push
fucomip
cwtl
sahf
xchg
or
lds
sub
mov
push
sub
clc
jmp
aaa
mov
adc
loope
movsb
jmp
orb
sub
fisttpll
sbb
push
mov
cmp
insb
gs
fidivrs
mov
cli
jp
mov
or
andb
in
stos
sbb
and
or
push
inc
cmpsb
in
rorl
adc
cmp
jp
jo
cmpb
pusha
push
inc
popa
insl
or
sub
outsl
inc
dec
adc
and
xchg
cmc
add
sub
sbb
inc
std
ds
mov
cmp
hlt
mov
xor
push
pop
xchg
add
or
clc
add
repz
jnp
aas
cs
fcomp
shrb
add
dec
test
in
inc
jo
sbb
push
fiaddl
sub
add
test
adc
ret
pop
lock
es
sbb
xchg
push
arpl
xlat
mov
xor
lcall
movb
fnstcw
mov
xchg
push
sbb
add
sbb
dec
jmp
jo
cltd
and
pop
or
cmp
bt
es
push
add
roll
insb
cmc
es
pop
je
mov
cmpsl
pusha
sbb
sub
sarl
js
sbb
daa
sbb
or
mov
mov
inc
enter
inc
bound
sbb
and
jne
testb
jne
add
je
mov
sbb
adc
jne
cmp
or
xor
mov
shlb
pop
pop
sbb
lea
lods
movswl
std
cltd
test
insb
sub
sbb
leave
loopne
movsl
jne
aad
sbb
push
cmp
xchg
inc
xchg
cli
out
pop
inc
adc
movsl
lods
mov
subb
daa
pop
fadds
mov
sub
in
jno
sub
mov
add
push
fs
adc
cmp
sbb
dec
pop
aad
sbb
adc
adc
test
adc
lret
lea
or
ljmp
out
rclb
push
insb
imul
aaa
cmp
xchg
xchg
sbb
lea
leave
and
sbb
stc
sbb
inc
shlb
mov
mov
mov
dec
stos
mov
jl
sub
fwait
jmp
jl
add
push
mov
sub
fimuls
and
and
jns
sub
imul
pop
insl
pop
pusha
xchg
sub
xor
add
ss
adc
push
sbb
sbb
stc
sbb
sub
mov
aad
or
mov
push
lods
xor
subb
enter
xchg
aam
loopne
pop
push
push
sbb
dec
leave
or
xchg
xor
jne
mov
xchg
popl
in
push
dec
mov
pop
out
daa
add
repz
popa
popf
inc
leave
lods
cmp
dec
xor
das
mov
stos
dec
xor
jo
mov
sbb
push
outsl
add
mov
mov
sub
xchg
jnp
lret
adc
mov
test
mov
test
repnz
add
fadds
shlb
frstor
out
bound
sub
mov
push
inc
dec
add
pop
jno
push
sub
sbb
mov
movsb
das
xor
mov
movsl
push
pusha
cltd
sub
sub
mov
inc
mov
lods
adc
add
ja
mov
testl
push
les
bndldx
cmp
sub
cmp
mov
mov
stos
inc
popa
rclb
mov
rorb
or
cmp
test
sbb
enter
cmp
cmc
int3
cmp
mov
movb
xor
pop
decl
inc
xor
pop
mov
lods
out
xor
shl
movsb
pop
mov
inc
je
and
jno
sub
ds
fisubl
and
jge
mov
or
mov
adc
xor
pop
scas
stc
push
or
hlt
inc
xorb
adc
dec
mov
imul
jbe
or
je
mov
in
dec
jg
cmp
adc
mov
pop
fidivrl
add
mov
and
test
dec
in
clc
addb
dec
inc
js
pop
fmull
and
imul
xorb
clc
sbb
mov
xor
movsl
xor
pop
mov
adc
or
sub
clc
pop
daa
sahf
jge
inc
sub
ret
into
je
push
push
es
in
jbe
daa
or
and
mov
movsl
or
lock
outsb
cmp
dec
je
mov
js
test
ret
and
fimuls
xchg
dec
out
adc
jae
insl
mov
cld
mov
xchg
inc
xor
sub
cwtl
ja
adc
mov
je
dec
push
cmc
mov
mov
fwait
outsl
daa
xchg
pop
stos
pop
stc
bound
add
fnstcw
xchg
push
out
addb
cmpsl
adc
popa
bound
inc
xchg
mov
pushf
dec
fsubl
mov
xlat
mov
lret
sbb
jp
int3
enter
sub
add
test
adc
and
or
ret
pop
or
or
jge
inc
insl
sub
push
or
and
mov
add
mov
inc
sahf
insb
cltd
inc
jecxz
inc
in
inc
and
inc
lock
movsb
cmp
jnp
xor
rorb
add
inc
stc
movsb
jmp
xorb
adc
mov
add
lret
cmp
inc
ja
outsb
iret
inc
mov
inc
insl
mov
imul
iret
inc
jne
push
aaa
lcall
and
sub
ljmp
push
gs
push
sub
xchg
add
pop
dec
mov
pusha
push
add
inc
and
push
sahf
mov
jecxz
add
inc
push
xor
jb
mov
and
and
ja
aaa
out
add
insb
mov
jmp
pop
in
ss
insb
inc
pop
push
push
pusha
cwtl
sub
sbb
cmovnp
movsb
push
sbb
and
add
pop
jmp
orl
push
jg
inc
adc
lahf
imul
outsb
mov
and
push
shll
or
adc
inc
orl
ss
pop
add
xor
or
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
fsubl
fcoml
adc
pushf
jge
cmp
push
xchg
movsb
xor
or
adc
mov
aaa
call
cmp
dec
pop
je
cmp
dec
ret
or
inc
pusha
and
pop
insb
in
adc
nop
lahf
aaa
insb
and
add
push
inc
into
push
sbb
adc
lods
cltd
les
adc
gs
adc
inc
out
fs
js
dec
and
cmp
mov
xor
inc
sahf
in
enter
in
stc
dec
adc
dec
adc
inc
leave
fadds
and
push
or
in
leave
inc
dec
leave
lds
in
pop
addb
xor
and
push
sub
test
inc
adc
sub
pop
sbb
sub
cld
push
xor
outsl
aam
jo
lcallw
push
fmull
xor
sbb
jb
dec
push
push
inc
add
and
sub
mov
imul
sub
dec
and
mov
xor
cmp
cs
adc
loopne
orl
mov
add
xchg
and
xchg
syscall
sbb
imul
pop
adc
pop
add
xchg
imul
je
test
mov
dec
jne
cmp
cs
xchg
sbb
pop
subl
jo
xchg
fnsetpm(287
push
xor
and
mov
pushl
pop
mov
lods
dec
fs
test
das
sbb
mov
fs
je
js
cmp
adc
or
cli
push
xor
mov
dec
mov
xchg
mov
iret
fdivl
sbb
jo
cmp
dec
in
add
fdivs
inc
jo
inc
inc
push
add
pop
addr16
repz
pop
andl
idivb
pusha
push
pop
add
jle
jmp
addl
pop
add
pop
dec
xchg
stos
das
insl
lods
ret
jg
sub
cmpsl
popa
test
push
xchg
fstps
mov
push
xchg
sub
cmp
dec
pop
xorb
xor
mov
add
mov
packssdw
jns
loop
or
insb
mov
ds
insl
push
push
jb
push
adc
mov
lea
aaa
pop
aaa
js
mov
out
adc
rclb
xor
gs
insb
mov
xchg
out
mov
push
mov
mov
sbb
jb
xlat
std
dec
add
loope
aad
lock
sbb
js
fists
push
push
mov
bound
or
push
rclb
mov
and
pop
fiadds
inc
inc
ds
insb
fidivl
out
push
ffreep
cmp
and
in
prefetcht2
and
into
add
or
jg
mov
jne
or
stc
sarb
inc
jne
sub
aaa
repnz
mov
push
and
mov
xchg
jg
dec
shrb
loop
dec
or
outsl
jg
inc
das
fldt
lea
andl
orl
xchg
movsb
xor
aas
and
lret
enter
push
inc
mov
pop
loop
fadds
enter
jmp
or
sub
and
dec
mov
add
add
add
js
push
fmuls
push
pusha
and
fcoml
mov
jo
imul
xchg
mov
sub
ljmp
hlt
xchg
outsb
mov
mov
mov
xchg
xor
cmp
pop
pop
sub
div
lods
cmp
ja
xor
cs
and
cmp
adc
cmp
mov
adc
jmp
test
sbb
leave
insb
jmp
push
xchg
jp
adc
cmp
pop
push
xor
adc
nop
jmp
int3
and
icebp
jns
mov
xchg
loope
pop
adcl
and
fwait
inc
xor
push
xchg
rorb
out
push
mov
adc
cmp
jne
xor
or
sub
clc
adc
in
fwait
jbe
jbe
dec
push
push
dec
dec
inc
mov
loopne
mov
movsb
call
adc
xor
mov
add
jns
out
push
pop
aaa
push
cmp
mov
push
or
hlt
hlt
xor
in
bound
cmp
adc
aaa
and
dec
test
pop
add
push
sbbb
int3
mov
inc
push
mov
inc
mov
cmp
je
sbb
jle
and
mov
pusha
hlt
or
pop
addb
popa
sbb
iret
jg
adc
aaa
push
cmpb
dec
or
mov
pop
add
insl
inc
js
mov
cmp
add
sbbb
inc
add
fwait
xchg
and
pop
mov
sbb
insl
mov
jmp
mov
adc
fs
pop
jae
vmwrite
adc
into
pop
shrl
adc
mov
push
jmp
jmp
aaa
ja
loopne
and
je
sub
repnz
add
xchg
daa
fcoms
mov
jno
loop
mov
rclb
or
movsl
lahf
out
rcl
rcl
and
inc
sbb
mov
orb
mov
or
fisubl
popl
fs
rorb
mov
imul
test
aad
cs
leave
arpl
add
xchg
dec
mov
lret
enter
jns
pusha
push
xchg
xor
cmp
cmp
push
and
or
cmp
sub
and
push
pop
js
movsl
pop
inc
and
rolb
call
in
cmpl
enter
dec
clc
push
mov
cmp
mov
adc
xlat
test
add
xchg
add
aam
lret
inc
add
das
fs
mov
mov
les
inc
pop
adc
outsb
fistpll
jo
xchg
sub
movsl
add
inc
arpl
loopne
push
adc
aas
pusha
push
sti
or
xlat
bound
inc
arpl
or
adc
leave
shr
pop
xlat
xchg
jo
pusha
mov
icebp
mov
ret
mov
xchg
adc
insb
movb
dec
mov
pop
xor
or
lods
imul
dec
dec
fcomps
pop
add
or
and
sub
push
mov
adc
cmpb
push
or
xorl
lahf
jge
jbe
xor
inc
je
and
and
test
adc
aaa
icebp
mov
daa
aaa
orb
push
andb
mov
xchg
xchg
mov
loop
shll
movsb
sbb
jb
mov
mov
cmp
xor
push
add
lock
push
xor
loop
push
add
sub
or
pop
mov
add
pusha
add
lcall
in
jbe
clc
add
outsb
sarb
inc
fiaddl
pop
or
rorl
in
push
in
adc
jns
jns
or
stos
or
xor
inc
dec
sub
lea
inc
dec
in
and
cmp
fbld
cmp
incl
aad
cmpsl
mov
ret
addb
add
stos
fsub
fsub
and
add
xchg
mov
filds
es
add
ret
pop
mov
cmp
fsubs
test
cmp
sahf
mov
add
dec
adc
and
insb
fiaddl
data16
nop
xor
fucomp
outsb
inc
je
xor
adc
jb
adc
cmp
xor
sbb
inc
dec
pop
sub
jb
lods
xchg
xchg
and
or
xchg
sbb
fwait
rorb
mov
mov
scas
frstor
rclb
xor
pop
pop
add
mov
sbb
loopne
add
xchg
fisubs
lods
ficoms
cmpsl
daa
lods
pop
mov
add
push
cwtl
jns
pop
loopne
jno
jle
loop
adc
adc
mov
jne
dec
fstl
add
mov
sbb
mov
adc
push
add
sub
push
pop
and
jo
sub
pop
or
xchg
imul
aas
icebp
inc
mov
inc
push
and
jne
mov
xchg
adc
pop
sub
xchg
int
test
icebp
or
adc
cmp
jns
hlt
or
lret
or
ret
dec
sbb
icebp
jne
das
add
enter
or
or
xchg
call
jne
ret
adc
mov
xlat
pop
mov
inc
arpl
sahf
cli
ret
leave
add
mov
fiadds
mov
mov
add
fwait
adc
cmp
or
push
call
cmp
test
inc
lock
push
popa
xchg
aad
aas
nop
sbb
iret
cmp
mov
mov
push
or
jge
inc
jle
push
add
or
add
pop
scas
sarb
push
lcall
and
cmc
xor
mov
pop
ret
insl
or
iret
push
nop
pop
fisubrl
lds
shrb
lds
and
bswap
scas
int3
pop
cmp
movsl
bound
or
inc
adc
arpl
jb
popa
jl
test
pop
call
pop
je
mov
dec
ds
add
cmpsb
mov
pop
movsl
inc
add
push
test
push
std
fwait
adc
sti
adc
es
ss
dec
push
nop
push
movsb
xchg
movb
call
mov
adc
lret
lcall
sbb
cwtl
push
add
mov
adc
nop
lea
or
shufps
outsl
movsl
inc
mov
mov
fwait
and
dec
xor
push
mov
clc
or
add
and
adc
fimull
pop
sbb
jo
aad
enter
gs
mov
pop
repz
in
cmp
inc
pusha
pusha
dec
push
xchg
sbb
pop
jl
cmp
sbb
outsl
jge
movsl
in
xchg
nop
pusha
sub
add
and
ret
daa
sbb
mov
mov
ret
adc
or
outsl
scas
xlat
xor
or
mov
jo
frstor
or
xchg
jbe
inc
xor
rorb
stc
push
fmull
sbb
sub
push
add
or
cmp
pop
js
pop
add
je
idivl
mov
xchg
push
or
fidivl
adc
pusha
mov
iret
sbb
jbe
lods
push
sbb
test
push
sbb
movsl
or
adc
shlb
insl
sarb
jmp
sbb
pop
mov
sub
xor
lods
sbb
dec
jle
dec
inc
mov
test
cmpb
bound
fsubrl
sbb
adc
fcoml
in
out
pop
or
les
fs
inc
jg
nop
sbb
mov
jno
dec
inc
inc
test
imul
pop
push
adc
pop
dec
sbb
dec
sbb
adc
add
pop
adc
mov
aas
mov
push
and
les
in
flds
mov
mov
mov
xor
mov
sub
incb
pop
sub
daa
inc
mov
adc
xor
je
add
out
add
test
pop
inc
cs
fwait
call
dec
fstps
cmp
sub
adc
or
push
fidivs
cmp
lds
fstpl
xor
inc
mov
cmp
sbbb
and
push
push
clc
fbstp
jecxz
je
or
mov
or
je
lock
pop
xor
pop
test
ds
ret
in
or
mov
out
inc
aas
cmp
ror
pusha
pop
cld
add
dec
push
popa
inc
mov
sbb
add
nop
lock
rol
mov
lret
and
out
fnstenv
xchg
jge
xor
adc
add
sbb
jns
das
add
lcall
xor
movsb
sbb
or
pop
pushf
mov
fbstp
in
pop
cmp
push
stos
pusha
fsubrl
xchg
pop
adc
sbb
sub
movsb
mov
in
test
cmp
adc
jne
daa
sbb
pop
mov
push
js
push
in
push
mov
dec
adc
aam
or
stos
mov
and
outsl
or
sbb
sbb
jno
mov
orl
loopne
mov
push
sub
cmp
inc
sub
mov
fdivrs
add
sbb
jnp
ret
aam
mov
in
xchg
pusha
pop
sti
loopne
dec
xchg
punpcklbw
iret
cmpl
fdivrs
pop
push
push
add
adc
lahf
mov
or
xchg
or
or
or
adc
ficompl
sub
cmpb
jne
cld
xchg
insb
mov
adc
mov
clc
call
fmull
fildl
fsubp
sahf
sub
daa
xor
xchg
ret
lea
ffree
and
fabs
mov
ffree
adc
or
outsb
xor
add
outsb
or
out
dec
faddl
cli
sub
inc
add
push
jo
push
rcll
fdivr
push
loope
xchg
pop
push
outsb
push
mov
sbbb
xor
xchg
inc
pop
out
repnz
clc
rcl
jb
xchg
sbb
cli
cld
clc
in
nop
adc
add
inc
lock
insb
mov
add
jnp
dec
or
aad
and
push
daa
or
xchg
mov
jl
mov
mov
ja
cli
imul
xchg
inc
xchg
push
jne
add
lods
mov
bound
out
fs
negb
call
pop
js
out
cs
pop
sbb
iret
jbe
neg
xor
pop
xlat
int3
loope
jmp
sub
xchg
inc
es
and
ja
fidivl
orb
add
leave
mov
std
dec
mov
subl
or
pusha
inc
enter
mov
mov
lret
adc
push
into
and
xchg
push
aaa
pop
inc
or
add
mov
es
xchg
test
or
dec
daa
outsb
adc
mov
inc
dec
xorl
cld
pusha
dec
fcomi
inc
inc
dec
inc
mov
int
adc
xchg
and
jne
jbe
hlt
loopne
sub
jge
push
testb
dec
jbe
lea
loopne
fsubrl
cmp
fistps
mov
inc
mov
inc
loopne
in
sarb
addl
adcl
add
sub
js
xchg
bound
mov
call
orps
enter
ljmp
pop
sbb
push
ret
mov
jne
inc
movsb
mov
inc
sbb
mov
push
push
pop
jle
pop
add
je
mov
lock
ret
lock
ret
loopne
adc
adcb
std
and
pop
addb
fidivrs
repnz
testl
movsb
sbb
jb
sbb
pusha
xor
xor
cs
in
int3
xchg
sahf
rcrb
orl
jns
cmp
mov
in
or
jecxz
and
add
inc
jl
fsubs
xor
cmp
cmp
aaa
xchg
push
inc
mov
test
inc
mov
jecxz
fsubrl
sbb
cmc
rcr
or
aas
ret
pop
add
jle
int3
push
pop
movsl
add
xor
inc
xchg
clc
lea
push
push
jle
cmp
out
mov
or
jnp
lret
sbb
dec
lock
xor
test
xor
cmp
jb
lea
dec
mov
insb
rol
or
adc
or
or
sbb
icebp
xor
xor
addl
fstpl
adc
xor
icebp
inc
cld
hlt
cld
dec
lea
push
push
jb
push
imul
jns
xor
inc
inc
popa
adc
cmc
iret
inc
push
xor
inc
cmp
loopne
mov
jnp
lds
sub
jae
push
lods
cld
add
mov
adc
sbb
cmp
adc
adc
outsb
int3
pop
or
and
pop
and
into
push
rolb
and
add
mov
or
test
or
out
pop
sbb
inc
mov
or
add
mov
add
rcll
inc
js
mov
out
insl
mov
test
sbb
adc
xchg
pop
test
sub
aaa
adc
lods
inc
mov
cmovo
test
lods
or
mov
xor
mov
insb
enter
pop
xchg
mov
fstl
pop
cmp
mov
int3
out
pop
sbbb
adc
js
ja
add
push
movsl
pop
xor
push
add
adc
or
gs
popa
xchg
mov
dec
lock
je
hlt
shlb
insb
icebp
jl
or
rorb
adc
xchg
out
out
mov
jmp
sub
sub
daa
xchg
xchg
or
or
loope
push
rcll
fstl
mov
sbb
jns
aam
cli
popa
popa
subl
pop
or
and
or
jge
rcll
push
or
push
jl,pt
fsubrp
adc
jge
or
push
addr16
mov
sbb
lods
cmp
dec
sbb
insb
test
jg,pt
xchg
adc
mov
pop
lret
sbb
rcll
pushf
aad
inc
cmpb
jb
fwait
outsb
movsb
fldcw
pop
jae
imul
je
dec
pop
mov
movsb
lahf
iret
mov
inc
add
or
sbb
sub
rcrl
call
sub
call
aas
add
cwtl
add
gs
pop
scas
sbb
or
cld
and
jo
add
push
jb
cmp
adc
aam
lods
out
add
mov
xor
out
inc
adcl
addb
or
testl
adc
add
or
sub
mov
add
in
xorb
inc
pop
ja
loop
cld
lock
stos
std
adc
and
or
int
sti
lret
mov
loop
mov
jl
and
inc
push
pop
sbb
xorb
scas
and
add
rcll
je
push
push
dec
pop
sbb
repnz
add
push
scas
inc
push
xor
push
jno
inc
xor
pop
mov
out
sub
cmp
inc
cmpb
dec
into
loopne
inc
subl
sub
pop
xchg
pshufw
insb
ret
sub
dec
push
add
jle
push
jmp
cwtl
add
ja
subb
ficompl
popa
and
push
lea
jmp
fistl
mov
js
push
xor
inc
hlt
xor
notb
dec
test
movsb
cmp
add
push
out
shlb
rclb
and
mov
push
pop
movsb
pushf
adc
sarb
ror
icebp
or
dec
dec
dec
add
jmp
mov
dec
call
in
xorb
cwtl
dec
loop
mov
add
fstl
sbb
adc
adc
xor
cmovne
xchg
loope
push
cwtl
lcall
jmp
test
pandn
mov
insb
pop
lcall
cmpsl
imul
adc
lods
cmp
or
mov
jecxz
mov
push
jle
mov
dec
js
adc
push
add
or
cmp
mov
mov
mov
jne
mov
pusha
add
cmp
sub
popa
and
cltd
adc
mov
dec
add
xchg
cmp
inc
inc
push
dec
mov
cmp
leave
shl
test
test
leave
push
mov
add
add
insl
jle
jb
jb
mov
pop
mov
nop
or
roll
xchg
popf
inc
dec
and
sarb
mov
push
push
cmp
push
mov
out
add
add
ja
lcall
movaps
adc
pop
cmp
or
cwtl
outsl
leave
add
mov
enter
mov
mov
add
enter
pushf
push
fistpl
adc
testl
das
inc
js
xchg
ret
arpl
lahf
inc
rcr
das
mov
or
xchg
push
ljmp
and
pop
nop
adc
inc
ret
xchg
mov
mov
xchg
adc
sub
fsts
insb
popf
leave
inc
and
adc
lret
aaa
sbb
sbb
lea
cmp
add
or
daa
push
dec
pop
les
push
mov
and
lock
testb
cmpw
movsl
std
data16
adc
jecxz
dec
xor
jmp
test
fcmovbe
js
inc
or
cmp
pop
adc
mov
testb
dec
les
aaa
xchg
roll
pushf
cmpsb
loope
popf
xchg
xor
dec
inc
fidivl
push
mov
sbb
mov
and
rolb
loop
add
jnp
inc
push
push
cmp
lods
or
les
xor
sub
rcl
lret
pop
pop
adc
jmp
rclb
out
inc
aaa
mov
jmp
push
pop
out
pop
sbb
outsb
add
xchg
sbb
gs
outsl
in
push
mov
clc
sub
fisttpll
mov
sarb
or
cmp
or
sbb
lcall
lret
or
sbb
leave
lret
xchg
adc
mov
add
mov
add
and
adc
scas
add
jp
pop
inc
push
scas
xchg
push
xor
inc
xchg
and
int3
enter
es
popl
xchg
pop
cmpl
sub
cmp
pop
inc
daa
inc
mov
pop
cmp
mov
out
and
sub
rcl
rorb
and
push
and
pop
rorb
cltd
jnp
rol
adc
lret
xchg
filds
inc
and
or
adc
pop
andb
dec
xchg
adc
arpl
in
cmc
jmp
test
sbb
xchg
sub
inc
inc
mov
add
lret
mov
lock
sbb
inc
sbb
push
sbb
fmuls
mov
jne
and
add
loopne
xchg
je
movb
pop
or
inc
arpl
xchg
dec
outsb
and
or
inc
jle
shrb
mov
or
inc
cwtl
pop
stos
or
bnd
adc
adc
jle
adc
or
sub
dec
dec
or
jge
popf
xor
je
mov
jecxz
pop
pop
data16
and
outsb
inc
sbb
add
sub
push
cmp
outsb
add
push
jbe
shlb
pop
push
inc
inc
adc
inc
pushf
push
and
loope
das
cmp
pop
cmpsb
xchg
mov
mov
inc
jo
daa
adc
add
adc
push
test
lods
insl
aaa
nop
pop
push
dec
je
and
push
in
aam
jg
stc
rcrb
push
push
inc
jo
jns
sarb
cmpsl
lea
pusha
mov
xchg
xor
adc
dec
js
and
mov
iret
jne
add
lods
test
and
mov
gs
or
cs
or
fildll
lock
push
cmp
adcl
loope
or
cs
push
inc
ja
fwait
jne
push
orl
sti
xor
xor
inc
adc
sbb
sarl
sbb
popa
ja
imul
push
adc
shr
push
ss
inc
sbb
mul
pop
push
fcoml
test
cmpsl
mov
cwtl
cli
push
dec
adc
or
movsb
js
lret
mov
cmp
mov
or
xor
mov
in
sub
icebp
bound
pop
mov
pop
adc
fimull
daa
push
aam
lret
sub
nop
cmc
jbe
cwtl
fisubrs
fs
mov
shrl
cmpsl
loopne
outsl
rcrl
cld
inc
test
or
and
jne
sub
pop
js
push
xor
inc
icebp
das
adc
jle
dec
cld
test
pop
mov
sub
pop
pop
push
sub
negb
hlt
or
dec
dec
push
or
mov
shrb
cld
sub
int3
mov
push
cmp
test
mov
pop
adc
test
lahf
pop
sub
insl
adc
push
inc
cld
test
rcrb
add
dec
xor
arpl
sub
mov
and
ficompl
leave
adc
dec
xchg
pop
orl
and
adc
movsb
jne
pop
push
clc
fstl
or
xlat
xlat
cld
adc
cmp
and
mov
fcompl
mov
adc
or
push
adc
and
inc
in
add
and
inc
movsb
rol
push
jmp
add
or
cmovl
cwtl
sub
insb
xchg
pop
dec
and
sub
leave
inc
jb
xor
pop
and
and
mov
dec
mov
push
iret
jb
push
sar
adc
or
rolb
cwtl
push
push
dec
pop
sbb
inc
xchg
mov
cmp
cmp
adc
fdivl
pop
add
test
adc
xor
mov
and
iret
and
and
jge
or
add
fcompl
divb
fiadds
dec
lods
ja
jbe
bswap
stc
xorb
rcrb
js
insl
jg
mov
sarb
mov
add
and
lock
mov
jns
test
push
add
insl
cmp
push
add
gs
sahf
test
lock
and
fwait
dec
js
pop
dec
sub
sub
repz
push
jl
xor
push
inc
loopnew
fwait
mov
jle
add
call
or
pop
ret
bnd
in
aam
int3
cmp
xor
cmc
sahf
add
rcrb
and
subb
call
fidivl
adc
dec
mov
adc
mov
add
cld
inc
and
add
add
or
daa
adc
sbb
sbb
pop
mov
mov
aas
ja
mov
cmp
xchg
test
xchg
mov
sub
lcall
pushf
push
xchg
push
ljmp
inc
mov
or
adc
dec
in
adc
adc
mov
mov
mov
and
and
add
or
ljmp
add
mov
lahf
test
lods
xor
daa
out
inc
out
push
adc
shrb
jne
xor
push
dec
andb
mov
jmp
outsl
or
sahf
xor
adc
mov
ja
cmp
or
inc
movl
lret
or
mov
lock
adc
and
popa
add
sbb
je
sub
adc
inc
or
movsb
adc
flds
adc
and
ret
xor
in
pop
adc
and
add
push
test
sbb
mov
loope
add
xor
adc
or
stc
push
inc
add
sahf
mov
in
repz
sbb
and
add
adc
add
push
pushf
add
or
pop
loop
cmpl
stc
mov
mov
je
js
dec
push
or
loop
stc
mov
add
sbb
dec
outsb
fsubrs
addr16
cmp
mov
add
lods
sub
movsl
mov
inc
test
push
sarb
dec
mov
inc
in
and
mov
mov
dec
sbbb
inc
dec
aaa
dec
mov
das
ret
inc
cs
mov
cmp
call
fistpll
inc
movsb
lds
aas
in
add
pop
mov
cmp
push
cld
shlb
add
movsl
cmc
jo
in
sbb
dec
pop
inc
xchg
movl
mov
mov
or
push
pop
inc
cld
gs
xchg
mov
or
jae
dec
jnp
jge
mov
add
xchg
dec
test
jmp
sbb
in
das
mov
lds
inc
jns
sbb
xchg
test
and
ret
sti
pop
aaa
int
mov
adc
or
mov
lea
std
roll
jg
popf
cli
cli
jp
adc
lock
mov
push
aam
xor
fadd
lods
mov
dec
pop
mov
in
les
insl
push
dec
push
jne
enter
cmp
xchg
add
or
jl
xor
adc
inc
push
mov
pop
xchg
sub
dec
dec
or
hlt
jbe
sbb
or
mov
or
or
dec
out
inc
popa
in
cmp
xor
inc
vprotb
pop
inc
sti
bound
cmp
add
addr16
insb
mov
shrl
xor
pop
ret
ret
add
mov
popa
adc
sbb
inc
sub
test
pop
arpl
clc
arpl
shr
xchg
arpl
lret
imul
jecxz
pushf
test
adc
hlt
dec
daa
lret
adc
lods
cmp
inc
and
fadds
or
or
pop
xor
mov
or
jo
or
or
fcoml
outsw
jge
xor
adc
fwait
loop
sub
mov
dec
mov
in
xchg
fbld
pop
hlt
mov
add
mov
nop
dec
add
sbb
fstpl
and
xchg
gs
shr
test
sub
jmp
pop
jne
movsb
adc
orb
adcl
jecxz
push
or
add
leave
movsl
jge
add
jns
in
jmp
sub
mov
arpl
jg
leave
and
in
hlt
imul
lret
jne
mov
cmp
add
movsb
sbb
adc
jb
mov
xor
and
cmp
sub
mov
cmp
jl
inc
clc
push
mov
or
sub
add
test
stos
mov
loope
push
pop
or
adc
add
jl
fnstcw
fcompl
dec
cmp
ja
cmp
sub
das
sbb
mov
push
daa
jbe
add
cmpb
xor
fildl
mov
mov
mov
sub
push
jo
inc
imul
adc
popa
ficoml
fsubrl
and
repz
adc
fcomps
lds
jne
xchg
addb
out
jns
iret
rcll
ja
cmp
repz
push
cmp
sbb
andl
shrb
push
movsb
outsb
fisttpll
jle
sub
push
add
mov
push
pop
jmp
sub
jmp
sub
mov
jo
jecxz
pop
ret
and
int
lock
ss
and
mov
pop
lahf
or
mov
movsl
lea
insb
push
sbb
mov
add
cmpsb
test
fxch
out
xchg
je
sti
cmp
or
repz
out
xor
ss
push
dec
push
ja
mov
fneni(8087
daa
and
gs
mov
sub
mov
pushf
rcrb
mov
adc
add
and
inc
lock
stos
jbe
outsb
insl
add
and
pop
dec
pop
sarb
push
lret
dec
test
fcmovb
add
imul
jno
jae
test
mov
xchg
xor
call
xor
jmp
ficoml
add
enter
adc
fisttpll
mov
js
lock
sbb
sbb
and
lahf
cmp
pop
pop
jne
std
loope
dec
das
cltd
jno
xor
mov
fisubs
pop
inc
int
dec
cmp
xor
jg
mov
mov
jne
jb
mov
adc
or
jecxz
ud2
gs
pop
rcr
sbb
cs
cmp
xchg
je
stc
or
push
add
cmp
jge
rcrb
in
push
sbb
jae
add
or
imul
pop
push
lock
xor
and
sbb
int
into
pop
fstps
pop
cmpsl
jne
rcl
sbb
sub
cli
pop
push
and
cmp
sub
dec
js
cli
inc
imul
mov
and
jne
daa
add
mov
bound
add
xor
xchg
lock
dec
pushf
lret
mul
sub
fistpl
cmp
lds
aad
aas
sub
xchg
xchg
adc
adc
lock
mov
nop
or
and
mov
cld
loopne
pop
adc
and
add
push
xor
int3
cmp
and
pop
and
adc
xchg
movl
sub
test
nop
and
xchg
sbb
adc
hlt
add
out
and
fwait
and
daa
or
pop
or
rolb
pusha
push
out
adc
push
das
incw
lea
ret
std
jne
and
lock
mov
jbe
aaa
in
mov
fstpl
pop
fxch
inc
ss
cmp
in
inc
iret
enter
cmp
and
rclb
mov
pop
mov
lret
dec
sub
sub
xor
add
mov
movsb
or
clc
ds
in
push
repnz
and
outsl
push
and
adc
sub
rcll
sbb
out
and
imul
or
fs
xor
loopne
shll
pop
enter
mov
loop
call
pop
add
cmpsb
mov
xor
add
lret
mov
adc
inc
mov
push
adc
jo
or
and
shr
and
loop
mov
or
xor
ficoml
adc
sbb
into
xchg
xorl
cltd
mov
push
int3
inc
cmp
push
ss
pop
add
inc
scas
jg
cmp
rclb
add
push
xchg
mov
sbb
mov
xchg
orl
test
rorb
pop
push
cmp
inc
call
push
pop
mov
inc
and
mov
mov
mov
adc
js
dec
xchg
xor
sti
andb
push
outsl
cmp
xchg
inc
adc
outsl
test
adc
sarl
and
adcb
loopne
mov
mov
pop
inc
cs
mov
push
add
bound
lods
out
add
xor
jmp
das
push
movsl
mov
mov
roll
inc
cmp
xlat
jmp
add
add
aas
imul
ret
add
or
sbb
fidivs
and
push
test
je
add
sbb
adc
xchg
mov
lahf
loop
jo
cmc
push
and
daa
sbb
int
mov
jp
call
flds
xor
pop
cmpb
add
jne
cmp
cmp
sbb
arpl
adc
mov
test
bnd
or
xchg
and
xchg
loope
cmp
inc
lea
sbbb
and
pusha
rcrb
xchg
fmulp
daa
jp
and
pushf
pop
cmpsb
lods
add
push
ss
pop
rol
mov
xchg
xor
enter
sub
mull
push
orl
mov
cld
inc
or
sbb
in
jecxz
adc
sub
push
ds
in
loopne
scas
mov
inc
pop
mov
repz
add
inc
lea
jecxz
adc
add
hlt
fcomps
sti
add
dec
sub
es
push
inc
inc
test
push
mov
mov
mov
inc
inc
shll
sbb
lea
or
and
jo
adc
xchg
je
add
lret
repnz
adc
add
shrl
jp
dec
cmp
inc
xor
pop
cmpb
nop
and
inc
gs
sub
xor
mov
jmp
ret
xchg
adc
sub
or
fcoml
push
icebp
sti
nop
call
sub
adc
inc
adc
xor
test
das
inc
nop
adc
and
push
dec
jmp
loopne
icebp
sbb
arpl
sbbb
xchg
and
jo
sub
es
xchg
les
cmp
sti
inc
je
and
mov
movl
es
pusha
hlt
dec
lcall
test
daa
mov
push
pop
mov
test
cmp
stos
xchg
fisttpl
in
jmp
and
sub
addr16
js
inc
loopne
mov
pop
mov
pusha
cmp
and
xor
mov
xor
fistl
mov
fs
pusha
sub
aas
push
popa
and
iret
repz
in
or
adc
dec
mov
cmp
aam
push
and
push
test
stos
mov
in
xor
popf
inc
mov
xor
arpl
dec
adc
xor
aas
mov
inc
insb
mov
notb
mov
jae
filds
sub
cmp
inc
push
loop
cs
imul
imul
adc
lea
and
xchg
add
sbb
popa
das
xchg
inc
les
test
jl
jecxz,pn
mov
pop
cmp
cmpb
dec
jo
mov
xor
jne
xchg
shrb
pop
leave
inc
rorb
jb
sub
das
popa
add
xchg
xor
dec
add
icebp
pop
repz
gs
inc
loopne
inc
add
inc
pushf
adc
bnd
inc
xchg
sahf
add
push
xchg
imull
add
inc
aam
outsl
leave
lret
pusha
loopne
int
aam
inc
jbe
jle
jmp
mov
arpl
pop
push
int3
mov
lahf
or
sahf
or
add
stc
iret
xchg
mov
pop
xor
jmp
fs
loope
enter
cmp
inc
std
adc
sub
sub
imul
push
sub
jnp
adc
and
ret
push
ljmp
push
ret
sbbb
jg
dec
mov
push
jecxz
push
mov
popf
xchg
sbb
inc
dec
add
rorl
mov
xor
out
xchg
sub
outsb
sub
cli
adc
sub
or
mov
in
pop
jb
xchg
in
lock
mov
test
jns
in
dec
xchg
xchg
xor
adc
jle
test
push
fcoml
cmp
push
push
fld
pop
fwait
cmp
add
call
dec
gs
cmp
inc
mov
push
je
xchg
cmp
mov
cltd
out
es
push
enter
testb
mov
stc
setne
mov
pushf
xor
loope
les
mov
in
xchg
xlat
shll
nop
adc
xchg
or
inc
ss
cmc
add
js
enter
pusha
inc
sbb
sti
dec
add
dec
add
rolb
and
pop
push
push
ret
sub
in
pop
lret
xchg
and
fwait
cmp
and
inc
cmp
fs
popf
or
or
and
and
mov
dec
and
popl
jmp
fcmovbe
daa
sub
push
leave
test
xor
and
dec
mov
or
cmp
sbb
nop
mov
or
or
jl
and
lret
sarl
push
in
xor
andb
mov
or
out
sbb
push
movsb
sbb
roll
cmc
cld
mov
fnsave
push
loope
and
pop
lcall
add
pcmpgtw
adc
jb
mov
xor
pop
or
pop
and
pop
inc
pusha
popa
or
xchg
pop
add
and
and
adc
rorl
int
or
mov
cmp
inc
rcrl
lret
imul
pop
lahf
dec
jp
push
mov
mov
shlb
push
hlt
add
push
jo
sbb
mov
daa
cmpsb
inc
jmp
xor
insl
fcmovnu
cmp
mov
pop
or
je
cwtl
leave
xchg
sbb
daa
mov
test
inc
fsubs
push
xor
push
cmp
loopne
out
xchg
mov
push
inc
sub
xchg
jecxz
sub
aam
xorb
gs
push
clc
add
imul
lahf
addl
push
add
adc
ss
inc
nop
mov
in
adc
repz
pop
jl
inc
xlat
hlt
data16
ds
rcll
or
sbb
ret
or
scas
mov
pop
aaa
rorl
xchg
xchg
icebp
sub
add
test
lock
xchg
mov
push
mov
rclb
shlb
lods
add
jne
loopne
rcrb
nop
mov
push
inc
ss
mov
cmp
mov
jne
xor
ret
mov
daa
rcrl
int3
pop
adc
and
adc
rcr
mov
out
pop
push
or
or
dec
jg
or
mov
loop
jo
pop
shll
dec
inc
xchg
sbb
jb
rorb
jns
jecxz
adc
or
pop
mov
add
mov
dec
test
sbb
cmp
loopne
push
fisubrl
inc
inc
cmp
sub
cmp
xchg
jge
add
dec
sub
es
or
or
jbe
std
das
push
sbb
pop
push
into
movb
jmp
xor
cmp
inc
or
in
adc
das
gs
adc
roll
das
dec
dec
push
add
add
lock
imul
outsl
mov
mull
dec
push
pop
cmp
mov
mov
sbb
sbb
push
sub
loope
fwait
cmp
mov
xor
sub
ds
mov
sbb
jge
sbb
adc
mov
mov
mov
int3
jo
movsl
dec
add
rcrb
cli
pop
jg
shlb
pushf
dec
int3
sub
adc
or
shrb
pop
fisttpl
cmp
and
roll
sub
push
inc
push
jg
mov
add
mov
sbb
jns
cmp
ljmp
lcall
adc
dec
loope
adc
dec
xor
fs
or
mov
dec
or
sbb
inc
ja
cmp
xlat
add
inc
stos
push
imul
jecxz
adc
adc
push
xchg
inc
cmc
and
add
stos
add
jge
rolb
inc
jnp
lcall
inc
clc
dec
push
loop
cmpsb
jnp
and
or
jmp
inc
add
inc
pop
lcall
and
push
or
mov
pushf
shr
sub
inc
pop
sub
int3
inc
pop
pop
sbb
int3
lods
pusha
and
leave
pop
xchg
pop
bound
cmp
xchg
cmp
or
fs
std
jmp
sbb
mov
daa
imul
or
xor
xchg
test
or
in
por
cmpb
lock
xchg
add
outsl
adcl
pushf
aas
loope
inc
imul
fidivrs
cmp
cmp
or
fidivrl
cmp
test
dec
rcl
pushf
andb
inc
and
invd
daa
test
cltd
outsl
mov
and
add
sbb
loop
inc
pop
jecxz
cmpb
jne
pop
add
inc
aam
movsl
push
mov
fdivrs
leave
fsubl
jle
loope
loopne
addl
js
dec
add
nop
mov
imul
add
inc
xchg
cs
mov
add
mov
sub
xchg
in
push
lods
jnp
inc
mov
add
mov
fwait
nop
add
push
popa
addl
pop
sbb
cmpl
and
fcomp
adcl
or
imul
cmp
loop
and
pop
push
jno
inc
sub
adc
sub
cmpsb
mov
cmp
cwtl
mov
inc
mov
adc
btr
jne
push
mov
jns
push
mov
and
push
mov
rcll
add
add
add
jmp
xchg
push
cltd
cmp
add
syscall
inc
imul
and
fadds
mov
cmp
cmp
jmp
mov
mov
mov
test
pop
inc
sbb
mov
or
xor
hlt
pop
adc
add
pop
shlb
shrb
pop
xor
xchg
lock
pop
cltd
sbb
and
sub
or
mov
adc
mov
mov
lahf
mov
hlt
cmpsb
je
jecxz
sbb
inc
adc
add
xchg
push
lcall
inc
adc
leave
test
jno
sub
inc
adc
and
mov
push
jg
cli
jp
xchg
jae
pop
aaa
or
mov
sub
lock
push
loope
fcomip
add
adc
push
push
push
add
enter
into
mulb
and
push
in
popf
dec
je
push
adc
int
inc
lock
out
xor
jmp
arpl
ljmp
add
push
inc
rcrb
fs
xchg
fdivs
mov
cwtl
cmovne
movsl
test
mov
push
fxch
push
or
xor
xor
push
sbb
and
icebp
movsb
mov
icebp
sub
or
data16
stos
adc
dec
cmp
ret
push
sub
add
lea
xor
sub
mov
test
in
dec
es
and
sub
in
push
add
pop
xchg
lret
mov
add
shlb
das
dec
or
arpl
test
shlb
xbegin
jo
inc
xorb
lret
jns
adcb
in
pop
jmp
jg
jno
cmp
mov
dec
add
mov
mov
or
lock
inc
js
nop
cmpsl
in
clc
or
jo
sbb
ja
les
mov
pop
cmp
cmp
orl
dec
ret
shll
lahf
mov
or
mov
push
push
sbb
pushf
test
ret
cmp
push
adc
cmpsb
shll
popa
pop
push
add
inc
inc
rorl
jbe
xorl
roll
mov
mov
xchg
and
adc
mov
jns
scas
inc
push
mov
or
insb
in
add
rolb
cld
lds
call
dec
sub
test
add
inc
cld
pop
mov
add
sbb
sbbb
sbb
hlt
cmp
inc
aad
inc
xor
cld
cld
mov
cmc
mov
push
jno
movsl
sub
jo
les
in
rcr
mov
pinsrw
push
inc
sub
add
je
mov
mov
ret
sti
or
mov
dec
dec
cmpsb
testb
les
lea
push
lock
dec
popa
push
or
out
xor
jmp
push
sub
je
and
pushf
sahf
out
push
xlat
lods
cmp
push
sub
or
in
lock
cmp
in
repz
push
movsb
push
and
jbe
notl
adc
push
aad
adc
and
or
lods
and
cmp
pop
add
cmp
inc
cld
in
icebp
and
sub
movsl
or
dec
pop
xchg
inc
aaa
cld
and
andb
dec
pop
lods
shlb
subb
out
shlb
xor
xor
out
popf
ret
cmp
das
mov
add
aas
adc
adc
das
cmp
push
dec
mov
cmp
xchg
jb
ljmp
pusha
xor
enter
add
or
in
xorl
ret
aas
jns
inc
jg
add
pusha
out
loop
adc
push
sub
out
jb
cmp
ret
cmp
dec
repnz
cmp
fdiv
sbb
mov
add
pop
cmp
xchg
mov
add
mov
and
push
mov
pop
pop
cmp
enter
movsb
loopne
rorl
xchg
fcoml
mov
popa
lock
repnz
push
aaa
cmp
or
addr16
in
mov
xchg
aas
mov
inc
or
inc
xlat
cmp
sub
rolb
and
insl
shrb
mov
adc
pop
xchg
daa
pop
mov
addr16
orl
inc
nop
inc
or
sbb
adc
pop
add
es
rolb
push
jns
dec
xchg
mov
test
stc
inc
insl
clc
mov
aas
sub
add
stos
lock
inc
push
add
adc
or
mov
xor
xchg
inc
or
sub
pop
or
push
mov
andl
andl
or
pop
sarb
gs
adcb
data16
fsts
lcall
bound
cs
inc
rorl
popf
add
inc
add
jnp
mov
pop
adc
or
pop
sti
aaa
mov
call
sub
idiv
mov
pop
or
sbb
addr16
nop
aad
lcall
shlb
sub
je
dec
inc
adc
mov
mov
dec
sub
add
or
insb
stos
mov
pop
or
add
and
movb
pop
cvtpi2ps
mov
jo
fidivl
sub
xor
add
sbb
cmp
inc
data16
mov
sahf
cmp
sbb
ret
lret
cmpsl
adcb
adc
insl
popa
test
mov
push
sahf
jl
sub
rolb
sub
loopne
and
inc
cmpw
inc
rolb
lea
lds
add
xor
xor
lods
or
jl
mov
mov
aaa
mov
imul
mov
add
aas
test
add
xchg
xchg
testb
daa
add
mov
add
clc
clc
jmp
fwait
dec
outsl
xor
or
sarl
jmp
popl
inc
sub
inc
inc
out
or
out
adc
sub
je
lods
xchg
push
push
je
xchg
cmpb
in
dec
xchg
movsl
shlb
dec
push
adc
xchg
clc
fcoms
cwtl
xlat
xchg
shl
dec
xchg
xchg
push
scas
sub
leave
loope
test
lods
sbb
push
mov
push
mov
sbb
in
xchg
push
push
mov
adc
inc
cmp
add
loopne
mov
cmp
andl
jb
and
lea
and
mov
hlt
lock
jb
or
cld
clc
cmp
and
daa
push
xchg
shrb
cmp
add
push
loop
mov
rcrl
sub
in
and
and
jns
or
fucomip
imul
sub
push
sub
or
and
sbb
cmp
cmp
pop
cmp
pop
jle
repz
push
mov
push
iret
pusha
pop
or
inc
push
mov
mov
push
enter
push
pusha
je
xchg
arpl
enter
ret
repz
xorb
pop
inc
cmp
shlb
add
das
xchg
lods
xor
xchg
mov
fucomi
popf
ret
les
and
popl
jbe
addr16
inc
add
push
add
mov
in
xchg
sbb
and
ds
add
movsb
into
cmp
std
inc
and
push
fbstp
pop
ja
pop
adc
and
dec
mov
jecxz
push
mov
das
loop
xor
pop
fimull
daa
adc
push
test
in
ljmp
dec
pop
adc
mov
cs
dec
push
jmp
xchg
jne
mov
push
ds
jo
inc
mov
daa
in
sbb
sbb
and
ja
pop
fldcw
stc
xlat
inc
push
cmp
push
je
mov
xlat
add
mov
test
insl
pusha
jne
insl
xchg
cli
in
mov
jmp
inc
bound
mov
mov
cmp
inc
sbb
insb
sbb
and
enter
push
inc
add
aad
or
dec
push
add
lahf
sub
and
nop
sar
ss
inc
iret
pop
push
ja
xchg
test
push
cmp
sbb
fbld
and
mov
dec
pop
bound
add
sub
sbb
xor
cld
inc
adc
ficompl
sbb
mov
push
adc
pop
std
push
inc
add
aas
jo
xor
es
shrb
test
xchg
inc
xchg
mov
outsb
inc
add
dec
dec
add
out
push
in
jae
pusha
jo
cmp
pop
dec
sub
inc
mov
adc
mov
pop
rcpps
or
push
push
push
out
adc
or
or
or
idiv
jns
test
push
pop
clc
push
cmp
push
jne
or
lods
inc
mov
movsb
push
adc
pushf
daa
sub
outsl
and
insb
or
and
out
int3
or
jae
sbb
sub
pop
inc
add
mov
into
sbb
popa
pusha
mov
shlb
lret
movsl
adc
add
in
xchg
clc
das
push
push
pop
scas
in
push
sbb
add
ret
adcl
dec
sahf
sbb
inc
inc
fildl
inc
xor
inc
push
inc
inc
pop
aas
and
adc
adc
ds
and
shll
sub
push
or
pushf
aam
mov
stc
mov
orb
mov
push
cmp
outsl
mov
add
mov
and
jns
js
pusha
movsl
pop
rclb
add
pop
mov
ret
sub
jecxz
loope
and
add
and
or
push
push
fxch
dec
call
sti
ss
scas
pop
mov
and
in
and
lock
testb
push
adc
and
fcmovnb
cmp
test
xor
adc
adc
int3
ret
pop
sti
push
lock
or
or
pop
inc
push
pop
aas
jg
scas
mov
add
outsb
push
or
popa
adc
push
dec
imul
ror
ret
and
leave
out
cmp
pop
inc
inc
call
mov
mov
aad
dec
add
add
inc
leave
insb
jnp
sbb
orb
pop
jg
movb
push
cld
dec
jle
push
or
cmc
xor
je
imul
mov
movsl
out
mov
enter
xor
mov
aaa
and
adc
pop
cmc
push
push
xchg
mov
fadds
sub
push
dec
pusha
mov
out
mov
std
addr16
or
lret
xlat
insb
add
xchg
push
jmp
pop
cli
enter
inc
repz
push
push
xchg
ret
push
push
sbb
mov
add
adc
sbb
sbb
xchg
out
jmp
dec
cmp
cmp
adc
mov
rcrl
or
push
sar
nop
sbb
pusha
mov
clc
pop
icebp
inc
push
pop
cmp
jno
insl
lods
test
gs
adc
or
add
push
pop
dec
loopne
cmpsl
adc
loope
pop
inc
ficompl
ret
dec
out
push
out
push
cwtl
mov
dec
insb
push
loope
ljmpw
lods
pusha
pushf
sbb
mov
jmp
push
push
xchg
loope
xor
test
addr16
mov
or
or
and
dec
jno
cmpsb
sbb
movsb
sub
movsl
cmp
js
jo
loope
push
js
mov
and
aam
sbb
and
push
dec
mov
pop
cmpsl
xchg
sub
xor
adc
shlb
and
rolb
lret
mov
aad
ret
imul
add
popf
lods
fldl
xor
adc
or
ja
push
dec
pop
dec
jmp
cs
jmp
push
and
inc
aaa
movlps
dec
mov
mov
add
jb
inc
mov
fs
cmp
jg
mov
add
movsl
jnp
and
pop
jne
add
cs
and
xchg
push
adc
pusha
test
and
dec
add
inc
jp
and
pop
js
ljmp
and
push
test
inc
ret
shll
or
dec
ret
movsl
add
dec
movsb
sbb
popf
fcoml
jle
mov
ljmp
das
dec
and
jae
dec
pushf
enter
xorb
adc
mov
sub
sbb
mov
cmp
sbb
fildll
add
push
adc
pop
jmp
xor
ss
cmpsb
mov
hlt
adc
inc
pop
in
dec
cmp
add
mov
add
jo
pop
inc
test
or
pop
cwtl
mov
add
dec
lret
or
push
jle
dec
daa
push
sub
jmp
add
adc
adc
mov
sbb
ss
test
dec
and
push
xchg
or
mov
lods
sbb
and
mov
push
and
das
add
aas
pop
push
enter
sbb
or
test
and
inc
inc
or
push
jo
js
sub
push
inc
pop
xor
xchg
cmp
push
lcall
inc
adc
lea
bound
pop
xor
pop
push
cmp
movsb
pop
repz
mov
pop
jl
and
cmp
inc
xchg
jecxz
xchg
cmp
ret
aaa
icebp
out
leave
mov
xor
test
push
sub
dec
cmp
incb
add
xor
fadds
sub
cmpl
xor
pusha
jae
sbb
dec
push
xchg
cmc
sbb
or
aas
hlt
out
adcb
push
push
mov
addb
aaa
jbe
adc
cs
addr16
xorb
and
push
and
je
or
pop
in
inc
push
or
jmp
lret
lods
mov
icebp
jne
inc
ret
sahf
in
sbbb
inc
add
and
xchg
mov
int
and
lods
cltd
and
loope
int3
adc
shll
cmp
mov
nop
dec
aas
cmc
add
jb
sar
ss
loopne
cmp
inc
or
or
fldcw
testb
je
push
sti
jmp
dec
test
lock
push
mov
dec
insb
push
cmp
jmp
sub
and
daa
scas
sbb
add
push
test
mov
test
xchg
adc
mov
jo
adcl
mov
negb
pop
add
add
mov
sub
dec
mov
xor
pushf
push
ret
out
or
lock
lds
push
sti
imul
stos
push
sbb
cmp
mov
xlat
add
nop
and
fists
testl
test
sarb
sbb
or
xor
pop
movsb
pop
cs
cmp
decl
sub
xor
or
adc
rolb
push
dec
or
mov
xchg
scas
pop
or
ret
push
addb
test
mov
cmpb
popf
push
stos
gs
addb
call
cmp
add
nop
inc
cli
dec
sbb
push
js
fildl
bound
pusha
pop
push
sub
dec
inc
add
ss
sbb
xor
adc
or
ja
push
xchg
push
lds
loope
arpl
cmpsb
sbb
popf
dec
das
std
cwtl
das
sub
outsl
adc
fcmovb
push
jnp
in
aaa
mov
push
les
inc
sub
orb
and
mov
inc
in
mov
cli
push
scas
inc
test
push
jge
sbb
ds
inc
add
adc
mov
imul
pop
mov
out
aaa
add
cmp
and
jle
aas
pop
push
mov
inc
into
fwait
sbbl
lock
push
push
xchg
ficompl
mov
inc
popa
shrw
mov
test
negl
sbb
dec
aas
das
jae
push
lods
push
adc
jg
push
es
rcll
nop
pushf
in
mov
ret
hlt
dec
cmp
push
addr16
fists
shufps
enter
cs
gs
mov
inc
xorl
dec
lea
push
aad
das
icebp
pop
jl
dec
adcb
dec
ds
mov
mov
xor
or
push
adc
adc
cmp
or
std
enter
push
stc
pop
cmp
or
aam
insl
lock
mov
fwait
dec
mov
call
test
imul
push
cmp
stc
sub
pop
xchg
dec
inc
fdivrs
fsubrl
fldt
mov
or
sbb
addl
and
push
or
adcl
das
les
je
sahf
adc
mov
inc
ja
jns
pop
xor
mov
imul
or
sbbl
mov
es
sub
and
addr16
adc
xchg
inc
jge
imul
sub
fsubrs
sub
push
cmp
and
push
inc
testl
or
sbb
and
jg
mov
je
mov
jne
sub
bswap
test
xor
push
add
in
add
mov
dec
gs
xchg
fs
pusha
xchg
in
call
fnsave
dec
or
inc
outsb
pusha
jl
cmc
loopne
outsl
inc
lcall
push
insl
xchg
vmread
adc
lret
jb
and
loope
sub
addl
inc
or
popa
mov
popa
into
push
xor
movsb
sbb
lcall
les
in
hlt
add
mov
iret
jp
test
cltd
dec
pop
sbb
pop
or
sbb
dec
and
jecxz
test
jb
push
add
adc
jp
or
loop
mov
sbb
daa
les
inc
mov
stc
cmp
lahf
imul
or
or
xor
bound
int3
sub
rorb
or
psrld
adc
mov
sbb
sbb
dec
adc
fcomps
xor
mov
xor
xchg
fs
xorb
insb
loopne
sbb
outsl
cmpsl
cltd
ljmp
adc
add
out
imul
add
or
cmpl
mov
test
push
imul
les
icebp
aad
xlat
cmp
add
dec
fisttpl
fisttpll
cmp
jne
pop
xor
or
adc
fstl
ret
imull
mov
cs
xchg
xchg
add
add
mov
push
lcall
clc
clc
lock
movsb
rcrb
and
cltd
call
mov
or
int3
push
jns
sub
pushf
or
sbb
pop
add
or
arpl
mov
cmp
jne
das
add
adc
repnz
roll
rolb
test
jo
mov
xor
or
outsl
movb
jnp
repnz
jmp
cmp
sbb
sbb
dec
inc
fcmovnbe
xor
pusha
push
adc
rorb
pop
add
pop
dec
roll
daa
add
sub
dec
hlt
xchg
nop
cld
mov
or
pop
add
add
add
pop
and
mov
and
iret
and
out
or
test
mov
mov
mov
dec
lcall
jbe
mov
add
sarb
bound
and
testl
jo
inc
cs
jle
out
stc
fdivrl
adc
add
pop
int3
push
mov
mov
xchg
cmpsb
clc
mov
lret
fdivs
test
or
ss
dec
aam
enter
int3
push
and
cld
stos
cmp
dec
push
shrl
cmpsb
cmp
jle
sbb
push
push
mov
dec
int3
divb
movsb
or
dec
fadds
inc
lcall
shlb
or
mov
test
dec
dec
repz
sbb
test
jp
or
dec
add
xchg
addl
stc
push
das
add
jo
mov
adcl
ret
lea
dec
sarb
sbb
loopne
inc
jnp
xchg
test
jge
and
pop
pop
dec
mov
nop
add
adc
lods
lods
arpl
mov
stos
xchg
add
add
faddl
mov
or
hlt
sbb
negl
lods
or
adc
inc
repnz
jbe
js
push
in
in
sub
inc
xchg
pop
jbe
push
push
dec
xchg
sbbb
dec
pop
les
jae
jne
sub
jg
mov
call
loopne
jge
fldl
sahf
sar
mov
mov
jmp
test
jmp
jne
sub
das
popa
sti
push
inc
mov
mov
fs
mov
sarl
cld
add
or
sub
sub
push
cmpsb
add
rorl
cmp
mulb
sub
jg
loopne
xchg
cmpsb
cmp
hlt
add
and
hlt
rolb
das
rorl
roll
call
or
ja
push
jae
mov
add
dec
ficoms
push
add
adc
xorb
mov
neg
or
lock
int
add
add
pop
add
lods
add
enter
jg
and
sub
les
in
hlt
xchg
jne
pushf
lret
xchg
aam
rcrl
jns
inc
sub
push
cld
aaa
push
and
pusha
cmp
xchg
push
adc
fadds
rorb
popa
sub
loope
lea
lea
and
es
inc
push
insl
xchg
mov
pusha
cmp
aam
stos
pop
les
enter
xchg
cli
mov
pop
push
jmp
adc
and
push
xor
inc
nop
pop
clc
cmpsl
mov
clc
sbb
mov
sub
popa
pop
lcall
add
xchg
arpl
sub
dec
das
das
add
sbb
mov
mov
fwait
xchg
or
mov
and
rolb
xchg
sbb
enter
enter
mov
xlat
insl
fs
xorb
xor
xor
les
add
lret
clc
add
and
aam
dec
repnz
mov
sub
in
daa
mov
es
add
fildl
notl
shlb
push
sub
or
ljmp
out
js
add
mov
sbb
mov
mov
push
pop
fstl
xorb
xadd
adc
push
mov
popa
mov
adc
pusha
cltd
push
dec
fcmovnb
lock
mov
jle
add
test
push
clc
in
xor
arpl
loope
outsb
stc
mov
pop
cmpb
jmp
inc
or
in
mov
inc
std
adc
and
add
add
xchg
outsb
xchg
in
add
test
inc
xchg
enter
nop
rcrb
mov
xor
ficompl
dec
jnp
jnp
and
mov
push
push
sbb
jecxz
nop
inc
loope
sti
test
cmp
add
or
imul
mov
xchg
xchg
add
mov
inc
cmpsl
adc
inc
mov
or
sub
dec
xor
add
imul
or
push
out
or
mov
mov
sti
sbb
jo
xlat
fwait
repnz
popf
or
aas
inc
dec
fisubs
inc
jg
cmp
cmpsl
cmp
mov
dec
jg
jo
shr
adc
popa
jbe
mov
fimuls
hlt
or
add
gs
filds
rclb
mov
pop
cwtl
cmp
shrl
rcll
push
call
pop
int
pop
sbb
fistps
test
pop
outsb
cltd
pusha
int
push
loope
shrb
sub
pop
xchg
xchg
mov
push
nop
pop
fisttpll
inc
or
and
sbb
call
shrb
mov
mov
mov
lahf
xor
add
mov
dec
jp
sbb
cmpsl
mov
out
or
inc
cmp
notl
inc
add
nop
dec
sarl
shlb
fstps
scas
lret
ja
xor
sub
inc
or
rcrl
xchg
push
sub
jne
lea
jge
fadds
js
cmp
add
push
add
or
sbb
jle
push
out
xchg
nop
call
mov
xor
in
or
jnp
shrb
pop
out
pop
stos
or
ja
sub
sbb
mov
xchg
mov
data16
inc
and
pop
shlb
mov
addb
cmp
xor
leave
jbe
add
add
push
mov
and
leave
aaa
xor
repnz
fldl
lds
push
lods
and
mov
inc
inc
scas
and
xor
jmp
movsb
test
test
out
rcrb
gs
pop
sub
or
in
adc
jmp
rdmsr
mov
popa
lock
shrb
dec
inc
add
mov
jbe
dec
fiaddl
sub
mov
inc
push
add
cmpl
sub
add
add
mov
or
or
imul
popa
and
jecxz
jp
jg
addl
dec
and
xchg
push
pop
mov
cmp
dec
push
xor
inc
lcall
mov
dec
add
sbb
nop
inc
pop
sbb
rcrb
xchg
icebp
inc
orl
mov
xchg
hlt
cld
jl
ss
mov
inc
sbb
cld
and
in
inc
add
add
jge
sbb
rolb
push
iret
add
lock
cmp
xor
clc
adc
or
clc
jge
cmp
sub
push
jae
loopne
call
fidivs
call
fimull
pop
ss
hlt
or
cmpsb
dec
push
mov
xor
aad
pop
lcallw
sbb
sub
rcrb
cmpl
jbe
cmp
setl
jns
cmp
mov
push
mov
cs
add
cmp
ss
add
inc
add
sahf
add
mov
cmpsb
push
push
lock
or
adc
in
xor
rolb
mov
or
jecxz
fnstenv
rcll
mov
or
push
jp
inc
sbb
push
and
push
lods
dec
mov
out
iret
cmp
sbb
or
jle
mov
addl
dec
xchg
test
push
or
mov
or
adc
ret
je
adc
jle
dec
dec
mov
xorb
cmovns
sub
jge
daa
cmp
sbb
mov
add
inc
jbe
ret
add
push
or
xor
outsl
aad
xchg
in
pop
mov
fcmovne
dec
pusha
mov
jg
jbe
hlt
rclb
cmp
sbb
sub
loope
in
pop
mov
pop
int
sbb
cltd
pop
adc
ret
popa
je
mov
clc
dec
std
cmp
push
and
fmuls
lea
pop
push
out
push
inc
aaa
mov
push
sub
mov
jne
xor
pusha
jecxz
sbb
add
xor
xlat
dec
fcmovnu
mov
sti
dec
cmpb
inc
je
and
mov
jne
cmp
out
pop
jbe
xchg
pop
arpl
popa
test
inc
faddl
sbb
push
push
test
ljmp
cmp
ja
je
pop
jmp
mov
mov
int3
xchg
add
push
add
sbbl
not
adc
xchg
adc
and
popa
xchg
push
iret
xchg
fstpl
and
adc
mov
or
sbb
divl
arpl
pop
js
add
sbb
sbb
add
mov
aas
fcoml
loopne
inc
push
pop
cmpsb
loope
lds
fwait
jl
shrl
sbb
in
cmp
jg
push
sub
mov
push
adcb
pop
insb
aas
popf
pop
sbb
aaa
and
sub
add
jle
lret
jo
add
ret
or
xor
shrb
ret
push
addr16
and
mov
call
dec
mov
sbb
add
jno
jns
arpl
jo
adc
mov
fs
mov
sbb
bound
inc
push
pop
js
mov
insl
dec
stos
mov
jg
neg
orb
mov
inc
or
inc
dec
repnz
sub
add
or
jge
jmp
mov
popa
pop
inc
mov
sub
xor
jp
aaa
addb
xchg
xor
jp
adc
and
jle
jp
ret
push
add
mov
dec
or
fadd
push
mov
push
xchg
ret
jnp
mov
inc
jnp
dec
jge
and
out
and
bound
inc
adc
arpl
jo
popf
push
add
aam
and
inc
ljmp
rclb
inc
sbb
sbb
insl
fisttpll
jnp
adc
lods
pop
mov
fdivl
rcl
push
xchg
rcrb
adc
inc
or
fimuls
cmpsl
rorb
ss
mov
xor
out
cmp
lock
xor
ss
push
lcall
sub
mov
adc
jg
call
or
jmp
adc
ljmp
std
stos
push
cmp
add
ret
mov
sbb
insb
pop
or
rolb
les
es
add
cwtl
ffreep
xchg
xchg
adc
and
and
inc
adc
adc
add
lret
rcr
les
lock
sbb
jne
push
dec
jne
shrl
daa
or
sub
pop
leave
pop
das
movb
xchg
subl
mov
enter
ljmp
xchg
adc
mov
loopne
push
mov
xor
js
cld
mov
rcll
push
push
cmc
fwait
cmpsl
inc
cmp
lea
xor
mov
jno
adc
in
add
xor
adc
test
mov
ret
lods
pop
test
adc
xlat
xor
jae
mov
add
dec
and
out
cmpl
pop
cld
sub
test
pushf
push
adc
lds
js
fdivrs
stos
insb
xchg
jno
push
clc
mov
loopne
add
pop
sbb
pop
or
xorl
adc
jne
push
in
jnp
mov
mov
ljmp
mov
fs
adc
push
dec
and
sbb
jmp
inc
aaa
test
leave
add
out
roll
push
mov
sbb
xchg
add
shlb
nop
pop
or
mov
jg
sbb
je
cmp
cmp
inc
or
push
lods
data16
sbb
xchg
test
mov
pop
or
and
mov
xor
sub
dec
lods
jnp
mov
push
shll
insb
xchg
out
sbb
adc
fists
sub
add
jle
push
push
mov
rorb
aam
fwait
pop
nop
mov
cmp
jns
iret
pop
sbb
orb
sub
jge
ret
add
cld
into
push
lock
or
jge
mov
mov
pop
cmp
xorl
fidivrs
ss
sbb
jae
and
mov
pop
adc
pop
add
inc
bswap
cmp
xchg
hlt
or
pop
addl
pop
mov
std
ljmp
jnp
ret
mov
xchg
mov
gs
pop
dec
and
inc
adc
dec
cmp
mov
ljmp
sub
addr16
pop
mov
or
or
mov
xchg
aas
sbb
inc
in
or
and
add
fisttps
add
add
add
sub
jg
xchg
dec
insb
push
ret
add
out
or
popf
movsb
adc
or
popa
jnp
rcr
clc
pop
clc
add
push
enter
pushf
iret
adc
or
xor
or
mov
gs
fs
gs
addb
fiadds
or
pop
mov
xor
call
aam
jbe
loop
sub
pop
mov
dec
out
int
pop
push
add
ret
add
and
add
subl
or
jmp
sbbl
cmp
xchg
insb
jmp
mov
cmp
clc
jb
shrl
inc
sbb
jb
aam
mov
rcrb
xchg
rolb
add
loopne
movsl
or
in
cmpsb
dec
test
rcll
mov
mov
insl
adc
jge
subb
mov
inc
loop
cmpsl
aad
pop
in
test
je
fisttpl
mov
or
pop
dec
in
mov
inc
loopne
push
lea
arpl
or
inc
ja
dec
stos
jns
cmp
or
push
push
fsubrs
faddp
sbb
popa
cmp
lcall
adcb
in
dec
or
dec
push
fwait
les
jnp
dec
notl
add
cmp
sub
add
jo
jnp
outsb
adc
or
sub
dec
add
xchg
lods
pop
pop
mov
push
js
mov
push
add
testl
push
xchg
in
movb
jp
ret
xchg
notl
test
ja
int
pop
test
shl
into
aad
inc
sbb
clc
sbb
ficoms
mov
jp
sub
inc
dec
dec
inc
insb
or
loopne
add
inc
int3
or
pop
and
or
cli
and
insb
inc
pop
mov
movsl
push
jl
insl
insb
jmp
xchg
mov
push
inc
add
ficomps
lods
loope
je
jg
test
or
sbb
stc
ja
lcall
loop
or
imul
pop
or
or
mov
movsb
or
push
adc
jne
or
or
pop
adc
push
sbb
dec
rcrl
loopne
bound
js
jmp
mov
adc
clc
xorb
imul
pop
aas
fldenv
repz
add
sarl
mov
and
xor
pop
add
ss
inc
lods
xor
ret
xchg
jmp
imul
sub
sbb
pop
cmpl
mulb
or
adc
xchg
sbb
mov
xchg
lea
pop
lret
sbb
sbb
jg
sbb
loopne
jp
or
in
sbb
and
xchg
adc
fldt
cmp
sub
insb
sbb
xchg
loopne
xor
sub
cmp
jge
and
jmp
adc
dec
mov
sbb
add
ret
idivb
sar
aaa
imul
and
sub
lods
add
add
ret
mov
add
adc
hlt
adc
ja
adc
gs
fidivrs
dec
mov
fistps
push
or
add
cvtdq2ps
add
cmp
adc
or
into
fwait
cmpsl
loop
ds
jne
inc
adcb
pop
fdivl
mov
and
sub
adc
and
dec
and
out
add
lock
xchg
add
pop
in
cmpb
inc
in
xor
test
and
out
nop
lods
mov
test
jb
mov
mov
pop
dec
sbbb
mov
sbb
xchg
fwait
dec
shll
xor
xchg
call
and
adc
xor
test
adc
cwtl
jmp
lahf
xchg
call
hlt
adc
and
xor
mov
push
andl
ret
jle
jle
jge,pt
movsl
sbb
pusha
sbb
or
iret
mov
popa
mov
add
mov
cmp
and
test
ds
push
pop
sbb
sub
ja
add
js
idivl
outsb
loopne
fisubrs
outsb
inc
inc
xor
in
mulb
mov
mov
and
ficompl
jmp
pop
xor
jl
addl
ja
mov
mov
nop
mov
mov
push
orl
int
add
pop
rcrb
push
lea
mov
pop
cmp
loope
inc
add
xor
insb
sbb
cmp
jl
lock
mov
dec
shlb
push
rol
push
test
je
adc
ret
sbb
lock
push
inc
jmp
cmpsb
inc
push
or
insb
in
in
cmp
je
and
or
insl
fistpl
ss
lock
jg
add
adc
std
cmpsl
rol
adc
adc
in
sbb
mov
xlat
dec
mov
out
aas
outsb
les
and
push
jle
cmp
and
push
mov
ss
jbe
ja
inc
push
sbb
jmp
pop
jle
and
mov
sub
push
inc
jge
data16
in
sbb
sbbl
sub
jb
leave
pushf
insl
fisttps
push
or
cmp
mov
inc
jns
jecxz
jb
sahf
hlt
fisttpl
or
mov
sbb
rcll
enter
mov
xchg
inc
add
in
xor
dec
stos
jmp
sbb
sub
xor
sub
add
in
xchg
adcb
cmp
ss
sbb
jnp
jecxz
ss
jbe
inc
pop
gs
mov
lods
add
arpl
push
filds
pusha
pop
mov
mov
adc
and
je
sub
sub
or
adcb
fnstenv
inc
lret
dec
and
inc
aas
aaa
stc
cmp
ret
adcl
enter
adc
push
push
scas
pop
lods
ds
or
sub
outsb
out
inc
jb
jo
rorb
xchg
sub
add
int
adc
or
or
or
mov
xchg
out
and
mov
xchg
xor
ss
push
inc
push
dec
push
sbb
cwtl
add
add
fcoms
push
xchg
xor
outsl
enter
sbb
sahf
jns
sub
sub
lods
pusha
add
mov
adc
aaa
mov
das
jmp
push
aaa
add
push
xorb
repnz
add
xchg
or
dec
or
lds
adc
xor
jo
dec
mov
push
adc
imul
es
sub
fld
and
fisubs
jmp
clc
cs
loope
in
mov
xor
pop
xchg
sbb
sub
fimull
in
pop
adc
xor
lods
lret
mull
ljmp
lret
rorl
dec
push
xor
pushf
arpl
push
cmp
or
in
xor
mov
daa
adc
adc
xor
cmp
lret
stc
pop
xorb
sbb
inc
lret
ja
sub
clc
scas
inc
aas
mov
mov
insl
or
inc
push
push
cmp
cmp
push
cmpsb
xchg
lret
or
mov
pop
mov
xor
adc
jnp,pn
pop
pop
jb
pop
or
inc
ds
subb
leave
dec
cwtl
sub
or
mov
es
jns
adcl
adc
dec
sub
dec
xchg
outsl
add
mov
jne
add
in
or
iret
hlt
add
sahf
pop
or
inc
lods
and
std
clc
sti
pop
les
test
or
and
xchg
xchg
in
insb
aam
mov
lea
push
dec
push
pop
push
outsl
dec
xor
or
sbb
push
or
sbb
mov
rolb
mov
mov
sub
daa
pop
scas
in
or
mov
cmp
push
pushf
movb
lcall
push
and
jge
ljmp
push
add
and
push
and
out
mov
or
sbb
test
and
pop
inc
cli
es
inc
adc
add
or
js
pop
adc
pop
out
xchg
sub
or
dec
out
pop
pop
sbb
xchg
in
sub
mov
test
jne
add
mov
mov
push
inc
sub
in
mov
ret
arpl
cmpl
rorb
adc
mov
xchg
in
xchg
mov
jnp
sbb
jecxz
test
mov
inc
adc
outsl
push
das
mov
cmpl
inc
xchg
fsubr
and
fsubrp
movsl
jb
sub
dec
jne
fdivrl
outsb
int3
icebp
cmp
out
cltd
inc
js
adc
add
mov
shr
push
add
mov
mov
pop
inc
sbb
sub
stos
int
ss
sbb
mov
jns
repz
pop
cmpsl
inc
lock
mov
out
ja
test
inc
add
mov
inc
std
ds
mov
cmp
mov
xor
pop
push
pop
fistl
fnstcw
adc
popf
js
jo
inc
jmp
jle
pop
lret
pop
push
push
adc
lret
sbb
xor
aam
or
xor
int
inc
push
push
pop
xor
xor
inc
call
cmc
mov
pushf
dec
push
jne
push
inc
xorb
cmp
cs
sub
or
inc
dec
scas
ret
icebp
dec
push
push
add
xchg
jb
inc
mov
sub
xor
das
imull
inc
in
clc
xchg
repnz
pop
sub
ficomps
aaa
adc
pop
xchg
mov
shrl
sub
in
add
mull
push
stc
or
shll
repz
xchg
out
and
xchg
cmc
mov
pop
mov
fisubs
les
sbb
inc
and
jecxz
mov
frstor
or
insb
repnz
inc
sub
and
or
arpl
andb
lea
mov
imul
jo
fdivl
cmp
adc
mov
sbbl
fildl
push
xor
inc
out
cld
cmp
or
or
push
xchg
subb
push
cmp
lcall
or
push
xor
dec
add
pop
lock
xor
in
pop
mov
out
or
lcall
xchg
xchg
loop
cmp
movsl
daa
aaa
jecxz
push
push
cs
imul
inc
fstpl
dec
mov
andl
daa
inc
lcall
subb
ret
cmc
xchg
pop
sub
divb
jns
sub
add
sub
xor
jae
cmp
jne
pop
pop
aaa
imul
xor
jg
jne
adcl
inc
ret
and
cld
push
inc
loopne
faddp
push
or
or
imul
and
repnz
cmp
pop
xlat
cs
jb
pop
lahf
adc
or
or
push
dec
cmp
addr16
fistps
insb
push
mov
adc
daa
lods
ret
sbb
adc
movsl
and
leave
adc
cld
cs
popf
lock
xchg
sbb
pop
pop
pop
mov
mov
dec
cmpb
and
add
int
push
push
insb
mov
push
arpl
add
mov
and
xor
pavgb
mull
fwait
and
es
ret
imul
js
pop
loopne
and
test
xlat
cmc
adc
push
out
mov
pop
stc
cld
add
fcomp
inc
test
sbb
inc
adcl
sbb
subb
inc
inc
in
test
pop
xchg
addl
xor
addr16
push
mov
loopne
and
inc
fildl
sub
pop
das
cltd
jo
xor
adc
sbb
or
mov
and
mov
rclb
lret
adcb
imul
es
cld
je
xchg
or
and
cmp
popf
inc
mov
and
or
in
pop
mov
sbb
scas
icebp
and
js
cmp
clc
xchg
nop
pop
xor
pop
and
mov
rorl
loope
test
stos
les
cmp
push
sbb
mov
ja
addl
pusha
or
xchg
jbe
or
outsl
rcl
in
mov
sbb
shll
xor
lock
sti
fidivrs
add
es
dec
sub
lahf
loopne
and
in
pop
out
jb
ret
scas
pop
mov
inc
and
adc
or
outsb
out
adc
cmp
fwait
nop
mov
jle
xchg
js
push
dec
sub
adc
out
cmp
mov
and
jo
outsb
sbb
mov
lret
adc
xchg
and
sub
add
mov
push
js
sbb
add
lds
add
ds
cmp
sub
push
bound
mov
push
dec
mov
rcrl
cmp
mov
and
sahf
fsts
lock
adc
imulb
inc
lods
inc
mov
push
shlb
mov
lock
push
ret
or
dec
andl
pop
push
cmp
sti
and
push
pop
jmp
push
and
outsl
les
dec
pop
sarb
test
add
pusha
int3
fcmovbe
mov
inc
mov
or
jb
scas
add
roll
int3
jg
dec
test
add
sbb
sbb
and
xchg
cmp
pop
insb
scas
push
sbb
mov
jno
lcall
mov
fsubrp
and
add
mov
insl
add
cmp
std
xor
or
mov
pusha
dec
mov
sgdtl
lahf
imul
push
adc
movb
jne
adc
add
adc
lahf
sbb
enter
shlb
rclb
add
adc
pop
adc
adc
sahf
sub
inc
push
nop
lcall
adc
mov
popa
xor
jge
je
jne
sub
push
push
adc
sub
adc
and
out
fiaddl
jae
addl
call
mov
inc
fwait
and
xor
out
fiadds
jbe
jbe
xchg
jg
dec
imul
dec
inc
cmp
movmskps
xor
mov
loope
ret
xor
mov
jl
sti
push
add
mov
fmuls
out
jp
in
outsl
cmp
inc
and
add
movsb
jo
sarb
inc
and
add
inc
inc
add
sub
inc
add
inc
popf
add
sub
pop
dec
sub
and
daa
fwait
clc
ss
sub
dec
or
mulb
ret
or
lods
add
jmp
sub
add
ret
push
lea
xchg
aam
and
sbb
out
inc
ficoml
mov
test
sarb
das
lret
add
add
pop
add
dec
mov
mov
test
mov
std
daa
outsb
sbb
pushf
enter
jne
ficoms
xchg
mov
or
imul
iret
pop
pop
addr16
jne
or
inc
adc
add
xchg
shlb
hlt
cmpb
js
lcall
imul
mov
ror
or
les
dec
mov
xor
jo
or
outsb
aaa
ss
sbb
pop
add
imul
pop
xor
jnp
jg
jmp
push
push
mov
movl
fldenv
or
icebp
fucomi
jb
ret
sub
push
push
test
cmpsl
or
sti
fstpt
dec
iret
add
cmpl
dec
push
push
hlt
fsubl
pop
cmc
dec
sbb
das
add
and
adc
cmp
push
or
in
sbb
pop
mov
dec
xlat
inc
pop
faddl
mov
lock
rcrb
inc
mov
push
insb
or
mov
ja
lock
inc
aad
test
leave
or
push
inc
or
jno
xor
ret
loopne
ret
push
jo
sub
cmpsl
inc
dec
push
adc
inc
in
cltd
cmp
les
and
pop
and
xchg
push
in
lret
enter
repz
loopne
cmp
and
dec
mov
test
ja
sbb
jo
add
into
or
das
ss
jge
daa
fcomps
inc
cmpsl
mov
or
dec
mov
mov
test
xor
popa
mov
sbbl
mov
inc
sub
lea
xchg
or
push
cmp
push
shrl
sub
mov
fiaddl
xchg
ret
mov
fistpll
int3
and
push
fsubl
dec
sbbl
adcl
lds
push
jg
or
cmp
inc
mov
jecxz
mov
inc
incb
pushw
rorb
fbld
sub
adc
jo
xor
push
or
or
cmp
add
jb
adc
jb
xchg
pop
jmp
push
popf
add
inc
lfs
pop
mov
or
pop
xchg
sbb
or
and
push
mov
insb
divb
scas
sbb
jmp
adc
xchg
add
loopne
inc
jmp
push
cs
xor
xor
push
jecxz
lds
push
inc
incb
fstp
push
mov
add
inc
es
or
xchg
xchg
enter
and
and
dec
add
in
push
xchg
lock
mov
push
jns
rolb
and
nop
push
mov
xchg
fs
sub
cwtl
jl
or
test
jb
xchg
movsb
shrb
lods
hlt
mov
or
mov
nop
pop
adc
xchg
test
popa
push
push
push
dec
dec
dec
dec
push
sbbl
insl
xorb
inc
gs
jbe
mov
pop
push
gs
test
pusha
inc
mov
mov
jae
inc
or
das
push
dec
dec
or
jp
push
jnp
adc
push
jae
sbb
push
inc
in
inc
out
rcr
dec
or
dec
jae
in
fadds
pop
or
mov
cmp
sbb
push
lea
out
sbb
je
dec
aaa
and
adc
lods
mov
mov
pop
out
mov
scas
or
or
mov
sbb
cmp
mov
push
adc
cwtl
ret
fisttpl
fisubrl
mov
subb
das
ja
add
inc
loopne,pn
sarl
into
dec
out
loope
ret
cmp
iret
dec
mov
add
fdivs
jmp
push
bound
pop
xorb
or
mov
mov
pop
mov
sti
insl
add
add
movsb
inc
dec
or
or
mov
cltd
sbb
imul
je
test
mov
mov
inc
mov
lods
popa
or
pop
and
stos
jns
repz
js
xchg
jno
aaa
shl
enter
mov
sbb
inc
inc
sub
push
push
push
cmp
jo
inc
cmp
nop
mov
lods
in
adc
mov
das
insb
add
xchg
or
out
dec
xlat
mov
sub
jnp
sub
sub
mov
nop
dec
sbb
cld
rorb
push
insb
jmp
pop
roll
sub
roll
inc
jg
pusha
loopne
mov
mov
daa
adc
iret
mov
aaa
outsl
rclb
inc
inc
gs
add
inc
stos
rolb
push
adc
movb
add
push
xchg
dec
push
sbb
add
push
lods
push
cli
ljmp
inc
inc
fcmove
loopne
adc
aas
adc
push
mov
dec
adc
repz
jmp
cmp
call
and
nop
test
je
adc
and
pop
mov
lods
dec
jg
pop
adc
or
aam
fs
inc
adc
addl
add
pusha
push
adc
sub
imul
or
jo
movsb
stc
lods
lahf
and
dec
or
adc
insb
popa
mov
sbb
xchg
push
push
fstl
dec
adc
dec
nop
jno
add
mov
out
fistps
cmpsl
push
inc
pop
add
mov
testl
cmpsl
stc
mov
les
jns
add
xor
or
fildl
inc
or
mov
sbb
inc
or
mov
cltd
inc
sbb
int3
dec
add
popa
dec
xchg
dec
lcall
pushf
dec
and
adc
xchg
jbe
add
sbb
pusha
ret
and
lea
lret
adc
and
mov
rcr
push
jmp
and
sbb
mov
xchg
lds
repz
cmp
adc
inc
adcl
cmp
xor
ret
lds
jbe
in
sbb
hlt
jo,pt
cmpsl
sbb
mov
dec
inc
leave
jo
or
push
push
push
push
or
pushf
lahf
jmp
das
daa
sub
lcall
fnstcw
jg
xor
and
imul
nop
pusha
stos
mov
push
std
loopne
dec
add
outsb
pop
arpl
insb
push
arpl
imul
insl
adc
outsl
pop
js
bound
mov
es
jb
jb
popa
jmp
cmp
or
add
sub
jbe
es
imulb
jbe
ja
jo
addr16
jb
addr16
or
pop
pop
mov
lods
mov
and
cmpsb
insb
daa
push
jge
jg
sub
insb
das
imul
out
je
cmpsl
sbb
and
xchg
ficompl
aaa
daa
mov
mov
jo
jb
arpl
cmp
daa
jns
outsl
dec
data16
sbb
das
add
or
clc
fidivrl
scas
push
dec
add
sbb
or
movsl
mov
and
fs
jbe
mov
add
loop
inc
inc
push
push
outsb
je
inc
cmpb
aaa
add
mov
sub
fldl
and
inc
xorl
mov
mov
nop
cmc
into
in
cmp
sub
mov
aam
add
pop
push
sub
push
movsb
inc
lea
aaa
pop
pop
push
pop
adc
add
clc
mov
jl
or
or
clc
mov
mov
jne
fdivrs
cmp
out
mov
dec
mov
lods
pop
add
or
jl
inc
nop
sub
push
sahf
xchg
xor
test
ret
mov
fwait
add
subb
stos
imul
sbb
in
test
mov
popl
jns
pop
mov
push
sbb
cmpsb
add
loopne
inc
mov
push
mov
pop
adcb
mov
xor
push
pushf
add
push
testl
call
lcall
xchg
xchg
add
push
cltd
xor
out
clc
push
lods
xorb
dec
cmp
fstl
call
adc
sbb
or
inc
faddl
rcll
jnp
sub
or
popa
mov
mov
fdivl
jno
je
ja
mov
add
mov
or
add
imul
sub
push
sbb
cmp
inc
fistpll
xchg
lret
add
xor
add
xchg
inc
sub
xor
add
and
pushf
rcll
shlb
out
lret
add
add
cld
jg
aas
push
add
pop
or
or
or
or
or
or
iret
movups
adc
adc
iret
repz
push
pop
sbb
aas
iret
repz
sbb
push
pop
and
and
and
loopne
jns
cmpsl
insl
fadds
mov
out
in
std
push
int
iret
repz
xor
arpl
iret
repz
cmpsl
mov
iret
repz
or
jns
out
push
bound
lahf
out
sahf
mov
into
xchg
or
ljmp
sbb
imul
and
adc
adc
jb
in
push
or
test
sbb
sbb
xchg
push
cs
or
dec
push
and
jb
in
sub
sub
pop
push
mov
adc
adc
adc
inc
push
inc
dec
in
lret
sbb
movsb
jb
push
sbb
test
pop
jns
dec
xchg
sbb
push
sub
pop
bound
stos
push
jns
arpl
and
movsb
xor
and
push
test
addr16
push
ljmp
dec
mov
push
cltd
ret
movsl
add
cmp
push
popf
push
dec
dec
push
inc
dec
sarb
fmuls
inc
and
dec
popf
adc
and
popa
or
pop
push
xor
push
adc
rol
outsl
mov
orb
mov
pop
out
sub
movsb
pop
mov
adc
cmpl
push
pop
sbb
fwait
jns
lcall
add
add
push
fdivr
pop
dec
int3
lods
sub
test
adc
ret
gs
loopne
push
shl
shrb
popl
mov
mov
sbb
and
addr16
bound
jp
push
fldcw
mov
or
pop
je
xor
xor
gs
mov
jo
cmp
cmp
adc
aad
jl
add
adc
xchg
sub
lahf
roll
jmp
aaa
insb
push
imul
inc
scas
dec
loopne
fnstsw
push
or
jnp
cmpsb
dec
jl
add
sub
xchg
fwait
mulb
jg
testl
push
fisubrs
push
outsl
clc
dec
push
fldl
fsub
repnz
sbb
fadds
push
fwait
int
rcll
fidivrs
push
push
out
out
jmp
pop
inc
les
aaa
pop
sub
adc
pop
pop
and
insl
or
je
adc
test
es
push
dec
cmp
mov
iret
jne
outsl
je
inc
mov
jbe
pop
cmp
outsl
movl
xor
mov
mov
xor
scas
stc
adc
lock
out
ret
and
shlb
ss
nop
fcmovb
mov
sbb
rclb
mov
xlat
adc
inc
inc
mov
dec
stos
push
jl
cmp
std
mov
add
push
test
cmp
sub
movl
xchg
insb
sbb
add
push
dec
jno
les
cwtl
mov
sbb
or
mov
outsb
orb
add
sub
aas
inc
enter
shrl
inc
orl
dec
lret
test
dec
jo
and
in
ret
testl
adc
ret
jns
cltd
adc
fdivrs
mov
or
jno
xbegin
fs
out
stos
xchg
mov
add
pop
lret
add
call
pop
sub
adc
mov
test
dec
fisubrl
and
cmp
mov
into
add
movsl
movsl
out
addr16
add
and
in
xor
mov
test
sbb
inc
mov
inc
dec
xchg
cmpsl
nop
cld
das
dec
add
sbb
jl
jno
cmp
xchg
xchg
shr
mov
mov
xchg
pop
mov
lahf
mov
loope
cmp
mov
mov
xlat
movsb
in
mov
push
adc
gs
or
int3
inc
jnp
mov
or
sbb
dec
ss
je
dec
dec
xor
inc
fimull
je
push
cmp
mov
hlt
mov
xlat
add
dec
lcall
xlat
iret
push
mov
and
inc
sbb
cmp
lret
fmuls
push
mov
cmp
scas
jl
push
lret
push
push
xor
scas
sar
add
fcoms
push
jecxz
lea
popa
je
inc
cmp
sbb
mov
lods
mov
daa
fcoms
imul
cmc
mov
fistpl
fimuls
mov
mov
adc
imul
cmpsl
fwait
loope
shl
int
jmp
push
xor
push
icebp
leave
scas
mov
push
and
jle
push
inc
fcomps
xor
adc
push
or
inc
loop
add
dec
sbb
clc
add
mov
pop
aaa
inc
adc
inc
dec
inc
out
pusha
addb
aam
movsl
or
pop
rclb
sbb
add
lds
sbb
push
pop
divb
inc
pop
loop
push
mov
mov
fwait
adc
movsl
xlat
shr
jbe
inc
xchg
pop
inc
or
mov
je
add
mulb
sub
popa
add
push
jl
add
stc
fcoms
test
jmp
add
fcoms
outsl
lds
imul
push
adc
jnp
sub
mov
sbb
dec
and
cmp
pop
and
cmp
sbb
sti
and
jg
test
loope
popa
cmp
cmpsl
sbb
hlt
or
jg
push
add
fbstp
int3
jmp
in
jmp
push
push
andl
out
or
call
and
sub
sbbb
in
nop
or
push
fcompl
nop
out
inc
cmp
fs
pusha
jl
mov
shrl
add
leave
sti
lret
xchg
es
xchg
roll
add
or
inc
inc
or
and
int
inc
push
inc
add
inc
inc
sub
dec
test
jne
aaa
jmp
popf
add
cmc
and
mov
adc
imul
adc
and
add
pop
add
pop
lock
ja
outsb
and
sbb
pushl
cltd
insl
and
cmp
jl
pop
sub
dec
adc
adc
cmp
rcrl
enter
or
cwtl
or
push
test
mov
xor
in
ja
mov
xor
cwtl
imul
cmp
add
push
lock
inc
xor
adc
mov
imul
adc
xchg
cltd
or
cs
adc
xchg
mov
and
add
fidivl
xor
dec
roll
mov
shll
dec
leave
mov
les
push
test
pop
add
jmp
and
or
out
or
es
pop
scas
sbb
shl
push
in
mov
outsl
cmp
ret
imul
stos
sub
insb
loopne
stos
add
sub
bound
dec
hlt
mov
adc
stc
mov
clc
iret
dec
jl
jl
cmp
inc
jae
inc
pop
les
fimuls
and
pop
xchg
roll
add
and
enter
add
lahf
rclb
jnp
lret
leave
inc
dec
push
adc
push
jo
and
jl
loope
clc
dec
add
push
inc
add
leave
and
das
rorb
xlat
incb
or
jno
xchg
test
mov
sub
mov
push
mov
insl
pushf
movsb
and
js
mov
add
fwait
jge
lock
es
adcl
dec
in
imul
in
mov
pop
jle
dec
ljmp
cmp
xchg
call
push
and
out
fcomi
push
sub
stc
dec
cmp
or
movsl
dec
xor
imul
pop
pop
in
inc
adc
repnz
push
hlt
xor
sti
cld
lea
pop
sub
or
dec
in
jae
cs
cli
decl
inc
and
dec
mov
mov
push
cmp
test
sbbl
dec
inc
loopne
mov
test
or
push
in
pop
mov
inc
jge
push
and
movsb
pop
rcl
gs
in
mov
in
insl
and
pop
or
je
add
das
in
test
inc
jns
and
inc
inc
pop
in
shll
mov
or
pop
sub
out
mov
jae
lock
dec
int3
and
pop
or
test
cmp
daa
mov
mov
inc
out
xchg
insb
dec
jbe
add
stos
or
scas
movsb
ret
xor
inc
in
inc
adcb
in
cmp
lea
ret
lock
sbb
dec
jle
jo
pop
cmpsl
push
dec
sbb
xlat
movl
cmp
jae
pop
and
and
push
and
jne
mov
mov
xchg
test
adc
sub
cmp
sub
push
ret
mov
out
test
les
xor
sbb
movsl
nop
push
mov
test
les
mov
push
out
mov
and
inc
cld
jb
push
test
lcall
mov
into
inc
dec
outsb
enter
out
loop
adc
push
mov
mov
cmp
dec
rorb
dec
inc
add
jmp
outsl
add
adc
pop
push
jb
test
inc
out
mov
add
sub
cmovp
inc
pop
ret
push
adc
sub
jle
decl
cmpb
sbb
aas
sbb
arpl
add
cltd
add
add
lock
pusha
inc
add
jo
ja,pt
testl
in
add
pusha
xchg
lock
inc
pusha
in
inc
add
add
pop
mov
inc
push
jl
adc
ds
push
inc
in
lret
pop
rcll
pop
add
dec
pop
xchg
or
popw
xor
cmp
outsb
out
add
sarb
cmp
sub
loope
dec
or
push
or
adc
mov
decl
call
shld
add
jmp
jl
push
shl
pop
and
xchg
ss
inc
insb
repnz
and
xor
enter
sub
es
dec
push
adc
shrl
rol
inc
push
sub
xchg
and
mov
ljmp
pop
loopne
inc
enter
inc
mov
inc
add
test
sub
and
inc
inc
xlat
fisubs
aaa
fs
push
cld
pop
fcmove
add
cmp
mov
adcb
jmp
ja
add
out
ret
loopne
out
int3
hlt
push
or
bound
jmp
in
pop
ret
int
pop
fcoml
insb
mov
inc
in
sbb
lods
push
inc
and
iret
repz
dec
pusha
je
iret
repz
pushf
mov
fdiv
cmp
repz
in
in
inc
jmp
iret
lock
clc
jecxz
cmc
fldl
cmp
addl
and
and
add
sbb
mov
xor
or
add
cwtl
xchg
insl
sbb
sbb
add
mov
and
addr16
sub
jmp
or
fiadds
dec
lret
cmp
sub
inc
enter
jp
pop
mov
xor
push
mov
push
lea
shrb
imul
push
sub
add
add
out
pop
push
nop
loopne
mov
xor
inc
and
movsb
jnp
cmp
repz
xor
frstor
xlat
mov
or
mov
adc
or
and
dec
out
leave
add
fsubrl
test
int3
aas
push
push
or
push
xor
xor
ds
push
adc
inc
jmp
or
sub
ja
outsb
mov
cmp
and
or
js
dec
and
push
push
hlt
and
sbb
or
cmpsl
xchg
mov
pop
xor
sbb
adc
out
mov
xor
xlat
xor
clc
fsubl
daa
rorl
mov
or
cmp
xor
xor
lret
cmp
push
adc
sarl
jne
jle
icebp
add
adc
cmp
std
cmpsl
dec
nop
mov
mov
mov
jge
inc
dec
xchg
mov
push
das
mov
push
mov
xor
mov
mov
lock
add
sub
pushf
adc
sub
or
mov
into
nop
adc
push
adc
adc
and
dec
jle
inc
or
xchg
and
sbb
inc
setbe
bound
sbb
loopne
jne
sbb
ss
pusha
inc
loopne
test
sbb
xor
or
dec
or
add
mov
xchg
mov
ss
shl
lahf
rorb
int3
mov
cmp
fsub
sub
insl
add
cmovno
cmp
xchg
add
es
jnp
dec
inc
ja
pop
in
cmp
inc
or
cmp
mov
das
lcall
xor
xchg
cmc
sbb
arpl
sub
jnp
inc
lret
adc
push
xchg
pop
sbb
cmpsb
es
pop
mov
lds
jno
add
push
adc
sub
or
aad
push
add
gs
nop
inc
xchg
jmp
test
add
add
nop
add
xchg
imul
fsubr
aas
xchg
sbbb
cmp
inc
inc
push
adc
js
jno
add
push
jl
lods
sbb
xchg
shlb
xchg
test
jb
or
ficoms
add
or
inc
aas
cmpsb
imul
cmp
test
pop
jae
js
shrl
pop
inc
clc
in
xlat
mov
push
adc
orb
outsb
push
dec
scas
jo
push
push
fmull
sub
aas
xor
pop
mov
rolb
repz
in
icebp
dec
push
cmp
add
push
es
sub
adc
adc
push
push
addr16
adc
fiaddl
jle
jle
out
push
jnp
push
jmp
clc
movsl
inc
pop
xchg
and
and
sub
je
and
pop
sbb
insb
mov
sarl
rol
shll
sbb
cli
ret
jmp
pop
mov
mov
fadds
je
inc
test
and
enter
scas
or
add
push
pushf
sub
or
in
cltd
loop
outsb
or
jo
mov
push
xor
ret
fcoms
mov
notl
xor
leave
pusha
lock
push
js
aad
iret
pop
jno
jne
cmp
je
lea
out
jb
jge
and
mov
inc
jl
and
and
jl
and
sub
jne
jnp
push
insb
jns
push
imul
test
mov
mov
jg
sbb
mov
push
loop
js
cmp
je
pop
jnp
jge
cs
inc
addr16
jno
or
xor
push
mov
xchg
movlps
pusha
and
xor
mov
mov
jg
or
add
sbb
push
sbb
xchg
lock
sub
add
rorb
or
stc
outsl
xchg
cmp
sub
pop
jno
jp
or
pop
test
or
test
lret
pop
inc
incb
cld
jmp
inc
and
push
movsl
rcll
or
pusha
mov
inc
inc
push
jmp
dec
ffreep
test
pop
fcmovb
sbb
add
push
cmp
jmp
and
pop
jb
sti
inc
int3
or
inc
orb
xor
add
adc
adc
mov
mov
add
mov
nopl
scas
mov
or
addr16
inc
xor
ss
adc
je
push
lods
add
push
jae
dec
add
jae
cld
pop
in
hlt
aam
push
aas
inc
and
dec
daa
sbb
xor
xchg
mov
pusha
nop
pop
pop
xor
sbb
icebp
adcl
inc
mov
dec
dec
orl
rol
ret
mov
in
sbb
dec
je
imull
and
xchg
sub
or
lock
and
or
or
rcrb
andb
adc
sbb
and
add
enter
movsb
test
loopne
sahf
push
pop
or
add
add
jb
clc
sub
sub
sbb
sbb
adc
pop
push
push
xor
pop
xor
stc
je
fs
mov
and
or
xor
in
mov
outsl
pop
repnz
imul
enter
push
cmp
bound
pop
xchg
hlt
popa
enter
inc
cwtl
nop
dec
sbb
sub
es
in
cs
int3
add
and
mov
loopne
or
dec
into
jbe
imul
dec
inc
imul
inc
cmp
or
sarb
cwtl
lcall
pop
push
jle
fs
pop
add
les
inc
push
and
test
enter
nop
ss
add
inc
add
inc
adc
inc
outsl
movsb
test
push
xor
inc
xchg
dec
cmp
in
mov
pop
and
insb
fdiv
into
testb
aaa
fidivl
xor
or
mov
pop
nop
sub
pop
xor
mov
adc
stos
fs
into
mov
lds
jo
jo
dec
outsb
inc
mov
pop
xor
push
add
xor
clc
xchg
or
aad
push
inc
inc
orb
dec
nop
jp
in
popa
dec
push
sbb
shr
imul
insb
add
add
push
imul
add
adc
add
adc
push
outsb
or
or
popf
movsl
rcll
add
es
jle
arpl
push
outsl
mov
insb
or
nop
prefetch
or
mov
ss
cwtl
std
pushl
add
sub
dec
mov
das
mov
pop
or
outsl
invd
add
dec
dec
into
repnz
shl
int
mov
add
dec
lock
adc
or
or
push
daa
jb
cmp
inc
fs
or
clc
or
or
mov
mov
sub
adc
jbe
divb
jae
add
mov
xchg
mov
outsb
jne
sbb
scas
jb
movsl
adc
xchg
push
aas
add
sahf
push
or
jno
xchg
jae
xchg
nop
sbb
idivl
sbb
mov
mov
or
mov
mov
xchg
adc
data16
and
push
or
popa
push
gs
or
lea
mov
dec
or
xor
xor
inc
mov
ret
imul
dec
jne
repz
out
mov
or
adc
imul
inc
fdivs
mov
push
into
fcompl
cmpsl
or
scas
push
outsb
repnz
pop
je
popa
xor
outsl
stos
adc
inc
lds
inc
add
mov
xchg
fstl
movl
jnp
cld
or
imul
jl
adc
pushf
mov
or
push
shl
add
out
lods
sbb
adc
jo
xchg
shrb
inc
out
dec
and
and
lahf
and
xchg
pop
and
test
lahf
push
push
dec
add
or
testl
inc
es
fnsave
add
pop
addl
dec
sbb
popa
cwtl
jae
mov
push
pop
xchg
xor
or
push
addr16
cmp
mov
stc
lret
jo
sbb
mov
or
mov
inc
add
or
sahf
imul
or
cs
sub
inc
xor
add
add
stc
sub
rorb
cwtl
push
add
lods
sbb
sahf
xor
mov
test
add
daa
mov
adcl
add
add
adc
pop
lcall
and
sub
popf
xor
push
inc
push
inc
add
inc
mov
mov
add
add
adc
sbb
inc
add
sub
dec
mov
mov
ljmp
in
in
ljmp
ljmp
test
cmpsl
jmp
addb
in
movsl
fcmovb
add
jnp
sarb
adc
jge
push
out
ds
pusha
in
cmpb
out
ds
subb
ds
adc
sbbl
ss
int
cwtl
test
xchg
cmp
shrl
cltd
push
dec
orl
sbb
pushf
mov
dec
jnp
popl
in
cmp
cmpsb
push
push
iret
idivb
inc
lods
mov
ja
pop
jne
lahf
repz
ja
inc
cld
sbb
jnp
fldcw
push
enter
dec
out
inc
mov
loopne
jp
je
pop
pop
dec
push
jl
push
fidivrs
lcall
dec
cmp
and
pop
xchg
and
add
or
testl
inc
push
cmpsb
sub
das
dec
inc
inc
add
popf
inc
mov
mov
int3
or
shlb
cmp
add
cmpsl
outsl
int3
or
lds
push
mov
push
dec
dec
xchg
cmpsb
push
mov
inc
sbb
mov
dec
or
inc
push
test
popl
xor
loop
push
in
inc
adc
insb
lock
pop
repnz
call
and
dec
inc
push
mov
hlt
pusha
pop
jo
xor
test
lock
adc
mov
or
add
pop
mov
in
mov
push
es
inc
loopne
pop
ja
xor
xor
mov
xor
fcoml
sbb
adc
jle
in
inc
fnstenv
push
nop
push
fadds
insb
rcll
or
sbb
insl
cwtl
loope
xor
inc
jp
add
push
dec
inc
enter
cmc
dec
push
xor
icebp
and
add
fldl
xchg
cmpsl
add
pop
and
push
jo
xor
push
xchg
push
or
pop
repnz
pop
and
adc
rcl
out
jns
xchg
and
push
je
pop
mov
aas
sub
stos
js
loopne
or
pop
mov
lds
mov
es
dec
aaa
cmp
add
out
daa
sub
pop
int3
movsb
xor
sub
and
pop
pop
xchg
add
xchg
sub
daa
inc
pop
mov
leave
stos
outsl
sub
ja
cld
pop
inc
lea
sbb
pop
xor
test
addb
pop
popa
and
dec
or
xchg
call
addb
into
jns
push
pop
or
imul
pop
cld
cmp
or
xor
fnstenv
jbe
ja
xchg
je
add
or
or
xor
repnz
inc
nop
sbb
pop
xor
aad
pusha
lret
sahf
pop
jo
enter
jp
dec
push
sbb
in
mov
cmp
test
pop
xor
and
jecxz
adc
cmp
cmp
inc
xlat
pop
pusha
lcall
dec
ss
imul
or
stos
shlb
int3
pop
inc
aaa
insl
inc
ds
popa
cmp
mov
xor
je
shll
int
inc
cmp
add
test
cmp
push
xor
andl
xor
sbb
mov
fisubs
shlb
adc
call
cmp
sbb
jo
add
inc
inc
ds
jns
or
and
aam
pop
push
int3
pop
inc
fbld
and
mov
and
inc
stos
dec
mov
inc
inc
test
scas
jae
fsubs
push
sub
fwait
mov
sub
and
dec
mov
mov
xor
jns
rolb
add
inc
cmp
add
into
add
pcmpeqd
stc
inc
add
cmp
cmp
dec
inc
iret
or
clc
sbb
mov
rcr
inc
loopne
leave
pop
repnz
add
fdivrl
push
push
shll
xorb
mov
dec
shr
inc
je
sti
xor
or
sub
int3
pop
inc
dec
push
pop
enter
and
subl
inc
call
nop
call
ja
dec
rcr
jbe
loopne
fildll
test
call
call
and
sbb
repnz
pop
inc
push
int3
pop
inc
xchg
pop
and
stc
inc
sahf
mov
or
mov
lret
dec
clc
clc
push
add
test
lock
lock
pop
ficoms
int3
enter
xor
pop
inc
push
add
pop
inc
push
mov
or
int3
pop
inc
pop
inc
add
jo
jge
xor
xor
pop
inc
pop
pop
repnz
pop
int3
pop
inc
cmpl
pop
int3
pop
inc
pop
or
and
sahf
inc
inc
loopne
dec
add
pushf
inc
mov
dec
pusha
add
and
inc
rcll
add
out
mov
popa
push
push
add
jno
or
push
fucom
imul
cmp
xchg
jb
loope
fmul
lds
and
pop
adc
movsb
jo
test
aas
mov
cmpsl
shl
and
and
sarb
xor
shrb
idiv
sbb
lods
push
in
xlat
and
xchg
pop
rcrb
jne
or
mov
add
out
mov
sarl
mov
or
pop
imul
pop
rolb
sahf
ss
sub
ljmp
pop
mov
pop
sub
push
inc
sahf
push
stos
cmp
cmp
nop
sbb
push
xchg
lods
outsl
push
enter
push
cmc
mov
mov
ja
dec
mov
sbb
mov
mov
sub
mov
bound
gs
mov
inc
je
sub
xchg
xor
call
xchg
out
and
pop
lds
mov
jle
fadds
jo
and
nop
js
jle
loopnew
rclb
orl
scas
out
sbb
jo
pop
sbb
jb
fldcw
and
add
pop
es
sub
mov
xor
mov
leave
in
push
andps
sub
loop
repnz
sahf
nop
ja
pop
or
shll
jbe
mov
outsb
popf
mov
jo
sub
xchg
mov
enter
pop
and
repnz
push
add
dec
or
xor
add
xchg
jbe
mov
xlat
xor
mov
insl
adc
cmp
sbb
adc
adc
mov
jnp
push
rclb
or
and
roll
push
mov
mov
out
sti
xor
and
data16
rol
ret
out
add
jg
xchg
aaa
pop
cmp
push
cmc
arpl
sub
cli
insl
jo
sub
dec
jmp
push
je
and
push
push
inc
push
or
and
push
add
or
push
inc
call
xchg
and
cmc
and
and
mov
es
xor
call
or
xor
mov
iret
push
das
jmp
test
jmp
test
call
or
lods
add
or
xchg
and
lcall
sbb
xor
lock
mov
pop
xchg
cmp
fcmovne
adc
add
push
inc
mov
sbb
pop
dec
fistpll
popa
je
adc
xchg
mov
jbe
mov
mov
or
xor
hlt
adc
outsb
mov
adc
fstpt
hlt
mov
nop
out
cmp
inc
add
pop
add
add
loopne
inc
or
scas
dec
mov
xchg
inc
cld
add
cmpsb
and
dec
stos
fs
mov
pop
vpdpbusds
jno
mov
adc
sub
fsubrp
data16
push
sbb
xor
xor
sbb
xlat
xchg
popa
adc
je
xchg
mov
stos
ss
push
test
pusha
add
jne
mov
adc
mov
adc
mov
mov
push
repnz
test
lahf
je
mov
movnti
or
sarl
mov
inc
jns
daa
fistl
daa
xchg
or
cld
adc
enter
xchg
decb
in
mov
std
movsb
iret
mov
xchg
inc
iret
cli
xor
cmp
aas
mov
mov
movb
pop
cmp
sbb
xchg
fs
jae
inc
cmp
cmpsb
and
shr
jno
shr
adc
dec
and
mov
call
mov
jg
fcomps
in
sbb
mov
sbb
mov
cmp
jae
call
sbbl
mov
and
fsubs
inc
add
mov
push
scas
add
or
or
adc
or
sbb
stos
inc
cmp
xchg
cwtl
and
mov
ret
pop
int3
inc
xchg
mov
aas
testb
sub
cs
adc
add
add
add
cltd
adc
xor
lods
add
movsl
adc
ljmp
clc
pop
pop
mov
lock
int
adcb
movsl
mov
sbb
mov
pusha
jb
mov
jbe
push
or
and
jns
or
loop
push
es
inc
push
cmpsl
mov
adcb
add
adc
das
pop
test
or
and
rorl
stos
and
push
rorl
insb
sub
repnz
and
icebp
lret
push
mov
add
mov
push
push
fstl
sarl
jno
inc
or
push
lret
out
test
and
insl
test
cmp
sub
ds
push
inc
add
pop
ss
into
inc
pop
xor
push
xor
daa
mov
dec
or
and
push
popa
mov
or
add
sbb
or
movsb
ds
les
push
or
pop
adc
pop
mov
fwait
add
mov
sbb
ljmp
push
adc
aas
fwait
clc
sub
or
add
imul
jmp
adc
fdivrl
add
inc
popa
mov
xor
inc
sub
xor
iret
adc
add
add
dec
add
mov
aaa
inc
inc
les
inc
insl
add
add
fists
in
sbb
roll
pushf
mov
inc
dec
dec
icebp
mov
adc
sub
xchg
xchg
out
popa
pop
add
inc
enter
in
lods
aas
fsubrs
les
push
hlt
inc
push
add
cmp
cmp
inc
js
mov
aas
fs
cmp
pop
pop
aam
adc
dec
pop
cmp
aam
or
add
mov
sbb
rclb
fwait
xchg
sbb
pop
inc
add
and
cmp
popa
sub
jo
and
add
icebp
sbb
in
push
inc
popf
fs
add
lock
cmp
sbb
cmp
bound
pop
or
sub
setne
mov
loopne
test
sti
pusha
adc
js
and
mov
mov
adc
divb
adc
sub
neg
jmp
arpl
sub
ret
add
cli
add
push
jecxz
sub
dec
gs
dec
mov
fmul
test
and
mov
pop
stos
sbb
pop
and
xchg
xchg
aam
lret
adc
mov
push
scas
fbld
or
pop
xor
inc
adc
xlat
cltd
push
daa
test
sbb
adc
adc
dec
jecxz
add
movswl
push
mov
or
in
jl
mov
jne
inc
sbb
sbbl
cmpsl
cmpsb
aas
subl
adcl
cmp
or
inc
fs
cmpb
xor
inc
test
pop
pop
cmp
pshufw
mov
inc
or
mov
cmp
adc
sti
jmp
dec
cmp
lret
std
pop
mov
and
cld
sti
ret
pusha
or
sub
cmpb
and
test
sub
add
xor
loopne
push
ret
xor
ja
sbb
dec
push
or
sub
xor
in
xchg
fldcw
and
inc
mov
test
xchg
or
lock
mov
or
je
ss
jmp
mov
vmovntps
xor
mov
inc
and
sub
jns
sub
inc
bound
sarl
sbb
dec
adc
shll
add
and
fsubs
add
sub
clc
xlat
xor
js
push
jle
push
dec
int3
pop
dec
out
fs
sbb
and
sbb
dec
jno
in
mov
sbb
pop
movsl
lods
push
and
and
repnz
sbb
adc
gs
test
add
ss
and
loope
ret
scas
cmp
sub
adc
sub
repnz
inc
push
sub
sub
sub
or
xchg
xlat
cld
jo
push
or
adc
cmp
xor
inc
cmpsb
test
test
jge
ja
fiadds
rorl
lcall
je
pop
das
rolb
adc
push
cmp
push
sbb
enter
insb
pop
push
loop
nop
xchg
arpl
lock
mov
inc
push
xchg
mov
cmp
or
push
in
push
cmp
and
pushl
nop
xor
aas
xor
js
or
add
push
cmp
jb
test
sub
xor
add
bound
add
pushf
push
sub
rcrb
xlat
sahf
sub
std
cld
pop
jae
fistl
imul
mov
int3
adc
cld
mov
fcom
rcrl
cld
sbb
xor
jo
and
rolb
cmp
and
aam
xor
sub
sbb
push
sub
mov
fsubrl
sub
out
lahf
xchg
or
repz
push
mov
adc
push
ret
clc
mov
push
sbb
push
cwtl
lret
cmp
ret
push
push
mov
add
sbb
fwait
stos
ja
jl
mov
pop
loop
mov
out
adc
cmp
adc
fmuls
call
js
xor
mov
cwtl
sbb
mov
push
xchg
inc
xor
push
xchg
ret
mov
loopne
mov
jb
jnp
xchg
adc
or
stc
push
lea
push
or
out
adc
je
xchg
cmpsl
mov
hlt
cmp
lds
adc
add
addr16
pop
into
test
ds
fisttpl
push
movb
dec
roll
subb
xchg
gs
shl
andl
push
add
jo
xchg
mov
insl
cmp
pushf
add
xor
sbb
or
and
scas
pusha
pop
xor
ss
fs
imul
mov
nop
lahf
sub
lock
xor
sbb
pop
mov
orl
lret
sbb
fisttpll
sub
mov
ucomiss
dec
and
add
aaa
pop
je
sbb
je
aam
and
push
in
push
jno
mov
mov
add
nop
lock
pop
add
es
push
jns
mov
nop
push
ja
xchg
pop
je
mov
test
psubsw
fiaddl
outsl
push
sbb
push
push
pop
push
push
add
stc
sbbb
add
mov
pushf
mov
cltd
nop
fcmovne
inc
adc
js
call
add
loope
mov
arpl
cwtl
sbb
mov
std
lods
neg
push
sub
or
dec
xchg
popa
push
and
dec
lods
adc
icebp
sbb
sbb
popl
mulb
outsb
mov
movsl
scas
add
loopne
xor
cmpsb
sbb
jo
int
sarl
incb
sub
add
xlat
sbb
mov
push
or
sbb
fs
dec
xlat
sbb
xchg
into
pushf
and
mov
xchg
pop
out
push
in
lea
push
mov
xchg
jne
ss
call
and
cmp
jge
sbb
out
sbb
pop
mov
jno
push
jle
mov
or
mov
inc
mov
jnp
xchg
or
sbb
dec
roll
mov
xchg
pop
stos
add
jns
push
push
xchg
jb
adc
adc
std
adc
sbb
aad
stos
inc
fcompl
lock
sub
adc
xchg
inc
enter
mov
sub
mov
and
push
jo
pop
popf
mov
ja
lcall
mov
pop
inc
sbb
pop
dec
je
lods
add
mov
and
loopne
mov
inc
imul
cmc
and
xchg
pop
stc
xor
pop
cwtl
and
sub
sbb
shrl
xor
sti
lcall
or
fcomps
cmp
ret
inc
push
aaa
mov
mov
mov
xchg
xor
xor
inc
add
imul
xchg
push
adc
imul
add
and
jg
rolb
arpl
lea
and
and
mov
out
or
and
hlt
test
rorl
jmp
xchg
dec
fisttpll
push
inc
cmp
mov
scas
and
xchg
inc
add
sbb
adc
dec
push
pop
rolb
popa
sbb
fmul
bound
and
jb
mov
push
inc
add
mov
lock
mov
nop
xchg
in
add
sbb
dec
and
testl
stos
sbb
mov
lods
xchg
xchg
push
decb
loopne
dec
lcall
fbld
test
adcl
push
sbb
mov
add
xor
ret
pop
repnz
jmp
add
sbb
cmp
and
or
inc
in
lea
sub
mov
inc
shlb
inc
icebp
lods
sub
jo
cmpl
dec
or
mov
mov
push
xchg
cmp
dec
sbbb
enter
sub
pop
dec
mov
dec
inc
push
and
inc
add
push
movsl
sub
dec
mov
sbb
dec
push
sahf
inc
test
add
mov
push
daa
xor
or
adc
adc
lcall
push
add
aaa
mov
xorb
leave
xor
pusha
jno
inc
repz
jae
jns
mov
xor
orb
inc
or
add
sbb
es
cmp
cmpsb
test
or
movsb
jmp
mov
jge
pusha
ljmp
in
or
adc
xchg
adc
and
add
rcr
fidivrl
ds
andb
movsl
pushf
movl
es
push
adc
addl
addl
dec
jmp
dec
cmp
lods
jge
lods
mov
mov
xchg
mov
js
add
daa
test
js
pop
push
cld
sub
xchg
pop
dec
xchg
inc
dec
mov
lods
add
lds
add
pshufw
inc
aam
andb
sbb
sub
cmp
xchg
imul
mov
mov
shlb
cmpl
cmp
or
add
xchg
push
pop
gs
dec
add
push
add
pop
pop
cmpsl
push
leave
push
add
mov
dec
push
cs
and
cmp
and
pop
mov
sub
and
jg
call
push
jp
sbb
mov
jecxz
lods
lret
xchg
or
fcoms
insb
pop
or
fldenv
addr16
cmp
sub
mov
pop
cld
dec
lods
das
push
mov
repz
mov
mov
lods
cmp
adc
jnp
xchg
cwtl
xchg
iret
xchg
push
xchg
sti
cmp
cmp
dec
fldt
and
fwait
add
xor
fistl
mov
xchg
adc
data16
push
xorl
int3
inc
xor
add
les
adc
enter
in
cmp
or
cmp
jae
imul
bound
adc
cwtl
shlb
inc
cld
in
jne
dec
and
or
imul
or
xor
je
orl
mov
mov
testb
movl
xor
inc
sub
mov
inc
push
sub
push
lock
sbb
mov
push
std
sub
cmp
add
mov
mov
out
sbb
sub
or
push
dec
mov
nop
xchg
inc
cwtl
jg
je
and
mov
mov
xchg
sbb
add
dec
enter
je
dec
or
pop
or
add
and
xchg
shlb
and
pop
jmp
sub
popf
xchg
adc
mov
push
fdivr
pop
and
dec
xchg
ret
sub
pop
dec
or
mov
add
xor
xchg
mov
push
add
add
repz
ds
pop
sbb
mov
xlat
mov
daa
adc
push
jb
sbb
or
sub
sarb
dec
pop
and
lods
rol
add
and
mov
or
insb
dec
pop
mov
dec
mov
ret
nop
fistps
inc
inc
dec
lock
rcrl
cltd
and
testb
je
push
rorb
pop
inc
dec
in
lret
sbb
nop
add
xor
xchg
xor
fwait
xchg
or
fs
push
push
cltd
nop
arpl
insb
test
cmp
add
leave
mov
jmp
test
je
shlb
pop
cmp
sbb
imul
cmp
and
adc
into
insb
adc
cltd
mov
and
jecxz,pn
inc
imul
inc
jnp
or
aaa
das
fmull
es
push
or
test
push
pop
and
jbe
and
lahf
ret
push
loop
rcrb
dec
adc
inc
dec
mov
fstps
push
mov
pop
enter
adc
or
dec
and
jae
les
stos
ret
nop
aas
adc
sbb
jns
pop
imul
cmp
dec
mov
test
lret
sbb
push
push
lret
mov
decl
fists
mov
push
aaa
jmp
js
mov
sub
sbb
cmp
and
imul
mov
add
sbb
aam
mov
test
cld
dec
inc
cmpb
inc
movsl
addr16
es
add
pop
sub
sub
int
sbb
adc
dec
insb
add
mov
cmpb
sar
dec
cmpl
xor
sbb
dec
enter
xor
add
add
dec
nop
sbb
es
fcmovu
sbb
aas
cli
add
cld
add
add
add
xchg
adc
adc
dec
loop
frstor
mov
aas
daa
push
call
mov
sub
lock
hlt
mov
add
push
fwait
cmpsb
cld
adc
add
mov
sub
lds
repnz
add
push
lds
inc
add
lods
das
dec
jae
pop
ss
xor
in
mov
test
inc
pop
imul
stos
pop
mov
adc
lock
daa
lock
cld
mov
mov
push
mov
pop
sbb
nop
push
inc
call
subl
test
mov
pop
shrl
rorl
es
fs
jno
or
aaa
sbb
xchg
sbb
sbb
pop
pop
das
je
or
or
add
add
cli
mov
jecxz
sbb
mov
outsl
in
les
nopl
sbb
icebp
ret
sub
cmpsl
xlat
leave
push
or
mov
add
in
test
sub
mov
lods
aam
nop
je
lahf
testb
inc
orb
jmp
andb
push
hlt
cmp
xchg
push
sub
fs
fsubl
jne
dec
daa
add
push
push
leave
and
dec
xchg
leave
outsl
add
and
out
mov
xorl
sbb
pop
stc
add
cld
dec
inc
cmp
pop
movsb
and
cmpb
mov
out
or
mov
or
add
mov
movsl
test
lret
add
pop
adc
andl
and
push
aam
lret
lcall
sbb
cli
sub
push
add
and
test
add
sbb
imul
inc
and
ret
insb
inc
cmp
cmpb
lret
add
test
out
sbb
out
and
inc
aas
in
inc
or
and
ficompl
xchg
xor
adc
hlt
test
ja
mov
int3
aaa
int
ds
imul
cmp
cmp
fstpt
fstp
sbbb
dec
add
add
push
fistpll
xchg
rorl
sub
add
popa
pop
popa
sbb
push
cmpb
xor
sbb
jnp
and
mov
inc
rolb
gs
add
push
mov
mov
lock
int3
adc
js
inc
int
aam
stos
mov
xor
jo
and
mov
add
dec
or
clc
jmp
xchg
shlb
push
mov
scas
inc
and
mov
cmp
fldcw
pop
cs
lods
push
inc
add
pop
ds
cwtl
js
adc
sub
xchg
pop
repz
dec
sbb
inc
add
add
add
movb
data16
gs
inc
xchg
out
nop
aaa
les
in
in
push
push
nop
cltd
pop
cmp
and
popf
orl
dec
xchg
add
mov
in
or
cmp
add
lret
hlt
std
mov
in
add
mov
hlt
mov
mov
inc
add
lock
in
xchg
cmpsb
jge
outsb
inc
push
xor
ds
pushf
add
push
out
outsl
pop
dec
cwtl
mov
push
xor
sub
pop
xor
and
nopl
adc
fmuls
leave
inc
push
xchg
or
loope
dec
inc
lock
cmp
push
cmp
cmp
sbb
and
and
xchg
and
or
rclb
sub
adc
enter
repz
adc
into
inc
add
mov
movsl
add
cmp
movsl
pop
shlb
arpl
arpl
mov
fwait
jno
sub
and
adc
sbbl
sub
pop
add
xchg
dec
jnp
xor
inc
in
dec
cli
mov
push
inc
lods
pop
sbb
add
mov
hlt
push
mov
push
hlt
mov
xchg
mov
rolb
incl
or
popf
fistpll
ret
imul
movsb
add
mov
push
add
in
inc
xchg
mov
add
mov
jae
inc
cmp
fisttps
clc
dec
jge
and
test
loope
or
in
ret
lds
adc
or
arpl
fildl
test
aas
or
mov
movsb
or
bound
std
negb
nop
or
fsts
push
adc
push
add
adc
bound
fbld
add
sti
jmp
or
jp
or
inc
dec
add
das
lret
inc
mov
sbb
mov
add
mov
ja
push
popa
or
add
data16
cmpsl
lds
or
or
cmp
shrb
mov
pop
rol
sbbl
mov
push
add
adc
xor
jbe
dec
loope
sub
push
icebp
hlt
adc
mov
mov
adc
add
push
add
adc
adc
mov
and
mov
or
push
pop
jno
xor
test
cmpsl
push
mov
pop
pop
xchg
inc
xchg
or
or
sbb
inc
mov
fiadds
sub
lea
inc
sahf
lcall
pop
inc
js
or
mov
sbb
test
mov
insl
pop
jno
andl
enter
add
jb
mov
movb
loopne
sub
add
sahf
adc
push
test
aam
mov
insb
sbb
sbb
popf
jb
sbb
fcoms
outsl
repnz
sbb
or
fsubl
jae
aad
or
or
mov
icebp
es
int3
adc
shlb
repnz
add
or
dec
rcrl
push
jo
pop
or
and
push
mov
push
cmp
mov
xor
testl
imul
bound
or
adc
mov
arpl
dec
dec
js
jmp
push
pop
stos
mov
push
sti
pop
lea
mov
nop
push
insb
xor
xchg
mov
jl
and
cmp
jle
push
cld
mov
xlat
jae
lds
push
or
sub
add
enter
push
movsl
jle
lea
jb
push
dec
ffreep
xchg
notl
pop
push
fs
xchg
pop
jne
orl
rolb
insl
dec
outsl
dec
dec
les
push
je
cmp
mov
aaa
adc
or
cmc
ja
cmp
or
sbb
sub
sbb
cmpsb
dec
inc
add
dec
push
or
lret
inc
out
or
pop
dec
adc
xchg
loope
mov
mov
movsl
inc
mov
mov
lods
jno
add
std
fiadds
jmp
or
push
xchg
xchg
and
or
out
add
cmp
vpaddusw
lret
xor
mov
loope
pop
cmp
lods
xchg
sub
mov
adc
fnsave
test
inc
push
mov
dec
jl
jge
test
or
and
movsl
cmp
push
mov
cmp
sahf
and
das
push
orb
and
sbbl
test
pop
lea
push
aaa
out
loope
or
rclb
mov
cmc
rcl
sub
call
xor
movsl
pop
and
pop
cmp
adc
add
or
outsb
jns
addr16
sbb
sub
add
shlb
mov
and
imul
roll
xchg
decl
aaa
and
mov
jmp
les
xor
inc
mov
sbb
out
xchg
fs
push
sbb
xor
push
bound
popf
les
inc
jg
movsb
inc
adc
dec
lret
sbb
or
or
push
push
outsl
shlb
in
cmc
jo
mov
in
push
jmp
pop
adc
fists
jno
sub
sub
and
sub
pop
inc
sbb
add
or
popa
or
scas
and
pop
add
lahf
xor
movsl
jo
push
imul
mov
rclb
test
scas
and
inc
cmp
arpl
push
add
add
inc
cmp
adc
jne
and
frstor
movsl
mov
xor
push
arpl
sbb
mov
push
sahf
cmp
int3
mov
popa
mov
push
js
hlt
push
sub
mov
pop
popf
lcall
outsl
push
sbbb
pusha
or
add
fldt
cmp
adc
mov
aaa
dec
and
push
iret
imul
cli
sbb
cmpb
cld
les
mov
dec
lcall
add
insl
sbb
xchg
xchg
ret
push
push
push
xor
pop
insb
and
mov
js
jae
inc
adc
mov
mov
inc
dec
rolb
xchg
ljmp
mov
loope
and
cmp
lahf
and
lock
aad
fbstp
pusha
inc
jo
jmp
popa
xor
clts
movsl
cmp
call
jl
call
mov
data16
sbb
out
xchg
or
rolb
pop
addr16
xlat
or
xorl
enter
or
or
gs
ja
mov
or
push
insb
sbb
adc
mov
loop
jno
ret
scas
adc
cmp
xor
loopne
fcomps
xlat
pusha
jmp
loop
jno
cmp
pop
sub
jge
repz
sbb
andnps
lahf
insl
mov
mov
adc
movsb
xchg
movsb
adc
aaa
pop
lsl
inc
lock
or
or
dec
xchg
ret
outsb
incl
add
cmp
dec
cmp
cmp
sbb
dec
xchg
cmp
jle
pop
sti
lods
fs
jmp
outsb
adc
addl
xchg
and
repnz
pop
mov
and
lret
in
jo
pavgb
aad
js
sahf
or
xchg
xor
jae
push
adc
xchg
imul
scas
jle
inc
popf
mov
ja
inc
movups
and
sub
addl
dec
ds
adc
cmp
roll
lock
xlat
and
roll
js
imul
lods
push
in
xor
shl
dec
je
orb
mov
jo
push
mov
xor
aam
mov
in
scas
ja
pop
cmp
push
sbb
cwtl
popf
cmp
jne
std
cmc
or
xchg
dec
xchg
cmpl
pop
fadds
xor
pop
pushf
sbb
mov
mov
sbb
sbb
jae
or
cmp
cmpb
inc
jmp
or
mov
in
and
lock
hlt
out
inc
xchg
cmpl
mov
lcall
inc
pop
jp
mov
out
adc
addr16
jns
fldenv
jo
push
xchg
enter
pushf
jecxz
fs
aas
jo
mov
cmp
in
popf
mov
adc
push
jb
inc
or
daa
sbb
in
and
mov
lret
cltd
mov
or
mov
into
jno,pn
cmp
shrb
sbb
shrd
lods
sub
dec
popa
outsb
adc
adc
mov
and
loopne
mov
add
popa
xchg
add
sub
pop
mov
mov
and
pop
cmp
sti
xorl
pop
jae
imul
sub
xchg
push
or
xor
mov
rolb
imul
inc
iret
jno
test
mov
imul
cmpsl
test
test
ficoms
mov
and
mov
dec
adc
loopne
add
mov
mov
sub
adc
dec
inc
xchg
outsw
inc
mov
in
mov
and
pop
cmp
cmp
xchg
ficomps
and
cs
or
sub
addr16
pop
into
fucomip
inc
bound
adc
lods
fstps
or
sbb
add
pop
jle
mov
or
or
jo
pop
test
adc
push
mov
sub
out
mov
jge
in
mov
rcrb
mov
test
push
add
test
aas
mov
xchg
cmc
arpl
fstl
ljmp
rorl
cmc
cmp
shll
mov
lods
sbb
mov
loopne
outsl
sub
cmpsl
fmull
push
or
xor
sbb
cmp
sbb
xor
or
push
jo
cmpsl
jbe
addr16
push
enter
sbb
xor
test
adc
xchg
and
ss
cmp
push
jne
jo
mov
sbb
add
push
and
push
jne
mov
sbb
adc
loope
shrb
insb
push
xchg
insb
cmp
add
fbstp
sub
jo
nop
adc
sub
inc
stos
nop
add
add
sbb
rorb
sbb
addb
push
mov
inc
or
daa
scas
in
in
cmp
inc
or
test
clc
jo
jmp
cmp
loope
push
sarb
add
mov
sub
mov
and
mov
mov
mov
pop
pop
je
aad
scas
mov
scas
add
cld
mov
adc
sbbb
or
dec
ljmp
pop
xor
push
sbb
jbe
mov
or
or
shrb
lea
lea
dec
jp
xchg
test
test
ljmp
push
lcall
add
xorb
rclb
xchg
push
mov
test
add
jae
aaa
push
loopne
jo
je
fists
xorl
out
mov
xchg
mov
sbb
xor
pop
mov
sbb
aas
pushl
das
gs
inc
sub
adc
sub
stos
repz
rorl
je
and
orl
and
loopne
dec
shrl
leave
mov
ret
ret
out
movsl
lds
roll
push
add
js
inc
or
in
add
fcos
xor
and
sbb
mov
jne
cmp
push
push
mov
sub
jno
add
insb
mov
mov
mov
mov
lods
cmc
mov
adc
rclb
fmuls
jo
cld
jns
jbe
stos
or
hlt
xchg
in
sbb
mov
add
cmp
dec
sbb
insl
lods
lods
or
daa
sbb
mov
dec
popf
adc
inc
dec
mov
insl
inc
enter
xchg
inc
push
cltd
pushf
or
les
sbb
add
inc
sbb
xor
dec
inc
dec
imul
and
adc
push
in
cwtl
xchg
cmp
sub
cmpsl
jo
jne
lea
repnz
call
adc
incb
add
loopne
lcall
or
adc
imul
mov
loop
adcl
pop
adc
xchg
pop
loope
mov
sbb
push
cli
mov
or
andl
cli
ret
sbb
mov
testb
fs
nop
int
inc
dec
call
lahf
add
xor
lods
fistps
nop
sub
pop
sub
add
rcrb
adc
sbb
mov
call
dec
sbb
inc
jno
push
clc
adc
aas
mov
fwait
sbb
jo
dec
push
sti
xchg
mov
pushf
cmpsb
movsl
popf
mov
jno
jb
ljmp
and
sbb
add
andl
push
das
mov
and
cmc
and
ja
inc
test
jnp
je
shrl
and
add
mov
mov
das
repnz
add
inc
cmpl
jne
pusha
or
sbb
test
stc
jmp
cmp
pushf
sbb
mov
cmp
adc
cmpl
je
or
in
push
inc
cmp
je
push
aad
dec
push
adc
xchg
adc
lea
pop
mov
ficoms
sbb
mov
mov
pop
sbb
jo
inc
and
and
pop
fisubs
mov
popf
mov
inc
mov
dec
dec
jae
xor
shrb
popa
mov
sahf
jbe
pop
xchg
or
outsl
lods
in
call
addr16
test
loopne
ss
fdivrs
sbb
jge
xchg
xorb
repz
add
loop
mov
pop
pop
add
adc
mov
cmp
loope
and
fildl
sub
dec
or
cltd
dec
jmp
and
mov
pop
les
or
call
push
call
xor
push
jg
add
mov
xor
pop
push
adc
inc
or
cmp
ficoml
mov
mov
not
push
insb
push
mov
mov
mov
sub
stc
jmp
and
dec
jnp
fs
adc
sbb
mov
insb
adc
jge
mov
ret
mov
ss
lldt
xchg
xchg
cmp
dec
call
sbbb
jne
fisttpll
or
and
sub
fisubs
xchg
cltd
mov
cmpl
add
addr16
add
int
loop
subb
sub
cmp
lds
dec
adc
and
inc
pop
imul
movl
push
xchg
sub
frstor
push
nop
and
mov
or
push
and
sub
and
sbb
loop
rclb
pop
cmpl
imul
sbb
dec
dec
dec
ret
sub
mov
pop
rorb
sub
cmp
sti
push
dec
aaa
cmpl
mov
in
or
rolb
test
cmp
insl
sbb
into
rorl
adc
add
mov
xchg
iret
add
adc
mov
cmp
xor
imul
mov
mov
cmpl
aam
add
out
je
dec
jp
hlt
jnp
mov
arpl
pop
mov
loopne
jbe
stos
jns
shlb
jo
nop
jge
push
push
icebp
cmp
insl
adc
outsb
adc
imul
mov
adc
fisubrs
inc
lock
push
cmp
sub
add
jl
push
ret
cmp
daa
fmul
xchg
push
mov
ficoml
lea
adc
add
and
rcrb
in
leave
ljmp
xchg
add
jmp
add
cmp
leave
pop
adc
dec
mov
cmpsl
in
mov
pop
adc
out
fstl
jp
aaa
dec
mov
fs
jbe
fwait
jmp
pop
pop
xor
xor
pop
xchg
jnp
test
xor
addb
std
adc
bound
std
cld
xor
test
xor
orb
and
leave
in
inc
ficompl
jmp
outsl
mov
inc
xchg
cmp
sbb
sub
and
jmp
sub
adc
xor
jg
aam
pop
les
jo
iret
mov
arpl
cltd
sub
cmpsl
scas
or
les
add
sub
jmp
cmpsb
xor
fiadds
xchg
leave
or
push
jp
stos
mov
cwtl
xchg
xchg
pop
cwtl
pop
fistpl
ror
roll
xor
scas
cmp
pop
and
mov
jecxz
sarb
mov
addb
mov
cmp
sub
orb
gs
cwtl
aam
cmp
insl
dec
add
pop
icebp
or
push
sbb
and
push
cmpl
push
ficompl
xor
arpl
ret
mulb
fs
adc
push
push
addr16
push
mov
push
lahf
sbb
ret
scas
push
push
movsl
gs
adc
mov
add
xor
lods
xor
ja
dec
pop
or
dec
push
pop
movl
mov
inc
mov
je
push
addr16
push
adc
xorb
sbb
movsb
int3
xchg
xor
fisttpl
pop
push
dec
mov
pop
mov
pop
and
icebp
mov
test
mov
pop
sbb
inc
push
add
push
sbb
jmp
cmp
or
xor
aaa
add
sub
ficompl
xchg
adc
push
adc
test
add
or
sub
lahf
push
insb
adc
decl
push
imul
in
mov
adc
pop
adc
lret
imul
inc
addb
sbb
mov
sub
push
repnz
mov
out
mov
add
jl
cvtps2pi
popa
xchg
push
ss
push
cmc
push
lods
or
sbb
or
mov
mov
xor
push
sbb
sbb
mov
scas
bound
jmp
xlat
jno
lea
push
mov
add
adc
or
cwtl
add
jb
test
pop
sbb
insb
inc
push
xchg
nop
psrad
aam
sti
fiadds
movaps
and
rcll
adcb
xchg
and
dec
loope
mov
ficoms
fwait
jg
adc
mov
cmp
mov
testl
ret
mov
loopne
outsl
aas
aam
or
addb
popf
xorl
sub
inc
insl
cmp
cmp
pop
sbb
and
roll
xor
imul
cwtl
and
addl
cmpb
xor
push
nop
cmpsb
pop
bt
mov
sub
inc
add
inc
push
out
adc
add
inc
jno
test
pop
add
cmp
hlt
and
dec
add
dec
jmp
sbb
cmpsb
subb
and
xchg
cmp
dec
mov
pcmpgtd
ret
adc
lahf
aam
aad
dec
fmull
push
mov
mov
sbb
cmp
stos
gs
sub
rcl
mov
hlt
out
xchg
inc
js
out
push
or
pop
mov
push
daa
adc
stc
or
nop
jp
sub
sbb
les
repz
sub
ret
jle
mov
jecxz
add
mov
lahf
out
lods
add
xlat
lock
and
mov
bound
lcall
ss
cwtl
imul
dec
inc
cmpsl
call
mov
or
sub
or
outsb
and
jb
pop
mov
movb
insl
mov
add
int3
adcb
or
int3
and
xchg
push
stos
xor
outsl
add
call
roll
outsl
int3
xchg
push
cmpsl
and
cmp
cli
jo
add
or
xorl
arpl
cmc
inc
mov
sbb
push
dec
scas
add
leave
arpl
adc
add
stos
adc
fwait
ss
dec
mov
les
or
repnz
xchg
fstl
add
sbb
aas
mov
lods
pop
add
mov
jae
adc
jae
sahf
sub
jne
pop
add
ret
pusha
and
shrb
mov
cltd
lods
add
sbb
mov
mov
scas
int3
loop
add
sbb
repz
popa
sub
add
push
fisubs
mov
xor
and
sbb
test
add
cmp
sbb
push
push
ret
outsl
int3
lea
mov
repz
inc
out
jecxz
jmp
sub
jecxz
out
jmp
cmpsb
cmpsl
icebp
jge
inc
xchg
xorb
pop
insl
leave
ja
sub
repz
and
xlat
cld
xchg
test
testb
and
jbe
sub
scas
rol
clc
and
jge
in
mov
psrld
jl
pop
sub
adc
jne
clc
cmp
orb
loopne
xchg
test
push
push
sar
outsl
mov
movsb
xor
adc
jge
cmpsl
jb
dec
inc
jg
lods
stos
or
je
push
fcmovu
es
jbe
mov
adc
and
jge
mov
sub
or
or
enter
push
icebp
sbb
sbb
add
fs
xlat
lds
mov
add
shrl
std
addr16
roll
icebp
mov
adc
add
int3
fistpll
sub
cmp
or
add
mov
dec
sub
xchg
xor
scas
and
mov
movsb
ret
xchg
mov
adc
bound
dec
pop
sarl
test
das
push
cli
xchg
sub
lea
jbe
push
xor
shrb
fidivl
aam
dec
sbb
shlb
or
mov
inc
pop
lock
mov
pop
imul
in
add
sarb
cmc
sbb
mov
jne
pop
mov
cli
data16
sbb
and
jecxz
jg
movsl
movsb
dec
in
jp
sbb
push
adc
inc
mov
call
sbb
jg
insb
jle
mov
jae
mov
outsl
push
inc
add
pop
enter
call
jmp
jo
xchg
sub
out
pop
xchg
adc
pop
sub
bound
insl
sub
sbb
jge
fsub
in
cmp
mov
popl
dec
cmp
pushfw
mov
les
xor
movsb
mov
add
inc
inc
add
adc
xchg
pop
das
orl
xchg
xchg
in
inc
scas
test
daa
stc
adc
icebp
jl
cmp
in
xchg
or
rorb
call
add
xor
addr16
inc
pop
hlt
test
mov
rorl
adc
cmpsl
sbb
movsb
push
out
mov
cli
daa
je
or
pop
add
sbb
aaa
pusha
adc
cmp
cwtl
jl
cmp
cmp
aam
jge
iret
add
and
mov
adc
sub
je
and
add
cwtl
jmp
subb
jp
cltd
insb
jo
or
inc
sbb
and
dec
les
and
adc
dec
cmp
push
jecxz
cmp
mov
xor
pop
dec
sar
push
push
fadds
roll
aaa
xchg
mov
jo
rcr
mov
aaa
adc
jmp
xchg
lods
insl
dec
pop
sbb
xor
test
sbb
mov
es
mov
rclb
dec
shrl
icebp
xchg
add
xor
stc
fcmovb
cli
test
add
jge
sbb
pop
jne
mov
mov
add
sub
cmp
cmp
xor
test
xor
xchg
ret
addb
or
scas
dec
cmp
add
xor
sub
xchg
arpl
add
nop
repz
cmpl
sub
cmp
mov
sbb
xchg
ss
adc
push
in
xor
jmp
negl
xchg
inc
ret
test
mov
popf
add
shl
or
jp
imul
enter
sqrtps
or
mov
jg
in
mov
nop
mov
insb
enter
arpl
cmp
and
jg
push
adc
sarb
push
test
jo
dec
jns
dec
lods
xlat
push
inc
sbb
mov
movsl
inc
jmp
or
vsqrtss
jmp
das
inc
cs
addb
or
sbb
add
in
add
lahf
aaa
xor
lcall
es
jae
sbb
es
test
ss
leave
in
push
mov
fcomp
mov
sbb
add
or
outsb
xlat
sbb
loop
iret
out
add
sbb
ds
or
shrb
inc
inc
into
test
sbb
jl
push
cld
mov
mov
inc
stc
mov
push
movsl
or
and
inc
or
cli
xchg
outsl
adcl
lea
jl
and
pop
addr16
adc
add
cmpsb
imul
dec
popa
aam
lods
xor
ljmp
xchg
out
inc
cmpsl
rcrl
add
add
das
loope
arpl
aam
test
clc
add
shlb
jno
inc
xchg
add
insb
lock
mov
arpl
es
mov
xchg
orb
adc
aaa
stc
push
xchg
pop
movsb
mov
and
or
adc
cmc
por
and
mov
dec
inc
inc
pop
test
cmp
inc
jns
cmpb
sbb
test
sbb
add
jne
stc
xor
xor
test
inc
mov
and
xchg
adcl
mov
mov
sbbb
and
xlat
pop
jno
and
pop
inc
inc
stos
es
and
or
scas
popf
sbb
cmp
or
loopne
shlb
dec
cmc
fimuls
fiadds
pop
sbb
add
mov
dec
xchg
rorl
fisttpl
push
pop
addb
ret
pop
stos
dec
ret
mov
sbb
or
add
pusha
mov
rorl
inc
cmp
lcall
dec
stos
add
hlt
inc
daa
pop
sub
int
sub
add
pop
or
rorl
jo
ds
movsb
orb
call
xchg
roll
add
sahf
mov
jl
add
fcomps
lahf
mov
lret
or
xlat
dec
xchg
lea
sbb
test
das
xor
mov
cmp
mov
out
sbb
add
jb
or
pop
jl
pop
xchg
adc
jmp
push
je
ret
mov
pop
sub
mov
add
sahf
sub
lock
imull
xchg
inc
inc
cmp
popa
je
nop
or
loop
test
push
cli
cmp
inc
push
or
andb
cs
shr
and
lahf
cwtl
das
add
rcrb
fdivr
push
inc
popa
ja
cmovnp
sub
sbb
mov
sub
adc
add
insl
inc
shl
fcmovnbe
push
cs
inc
inc
lret
dec
push
mov
jp
jae
pop
push
call
dec
insb
adc
xlat
les
aaa
pusha
mov
mov
in
das
sbbb
lods
ret
dec
add
cmp
adcb
out
fsubr
das
jne
rclb
nop
mov
sbb
mov
sub
clc
repz
aaa
pop
sub
cwtl
fs
mov
xchg
pop
add
adc
adc
jl
push
movsb
mov
pop
and
push
ds
mov
xor
mov
rorl
pusha
adc
jmp
mov
nop
sub
lea
mov
xchg
das
xchg
mov
xor
push
push
stos
pop
movsl
push
push
mov
test
inc
sbb
xchg
xor
into
push
adc
pusha
rcl
inc
or
gs
int3
sub
add
or
push
mov
les
adc
pop
add
push
adc
and
orl
push
loopne
inc
push
and
cmp
push
lock
or
or
or
insb
mov
adc
adc
pop
and
add
cmp
push
rcl
add
dec
cmc
aad
mov
mov
add
test
xchg
xchg
mov
ret
pop
pop
popl
or
or
orps
mov
inc
xor
test
jo
xchg
sub
push
add
jecxz
dec
call
out
adc
jp
mov
pushf
shll
jnp
sub
imul
xchg
sub
nop
push
mov
daa
mov
push
xor
adc
sbb
hlt
les
fucom
add
sbb
and
xchg
mov
jbe
dec
add
lock
mov
inc
shlb
mov
or
pop
push
cmpb
mov
daa
or
testl
push
insb
sub
imull
push
jae
add
cmpl
ret
les
push
neg
cmpl
add
jecxz
inc
cwtl
mov
imull
roll
ljmp
xchg
or
sti
ja
lret
incl
add
cld
xor
inc
sub
jge
mov
pop
scas
adc
into
xor
popa
add
dec
sbb
xor
ret
or
xor
xchg
adc
mov
mov
mov
pop
push
cli
and
or
xchg
xchg
das
inc
cwtl
or
push
jne
outsl
mov
dec
movsl
es
mov
inc
fstl
sbb
insl
rcrl
xchg
mov
fwait
pop
fisttpll
sub
fcoms
fsubr
ret
sbb
pop
loope
pop
add
sbb
pop
enter
fbld
xchg
and
pop
jl
jae
shrl
cmp
pop
xlat
jle
xor
pop
leave
nop
cmp
jp
pusha
leave
mov
push
inc
push
sub
mov
cmovg
mov
rclb
cmp
cwtl
mov
xchg
pop
inc
jle
imul
push
fs
xor
inc
and
mov
pusha
lods
adcb
fwait
sarb
in
push
je
pop
pop
das
jmp
push
insl
sub
lods
gs
and
repnz
add
iret
and
mov
mov
jp
mov
dec
aam
pop
rcrl
daa
popf
lods
imul
lcall
ljmp
add
xchg
and
das
push
and
push
arpl
lahf
mull
bound
sbb
scas
inc
xchg
cmp
out
mov
sub
sbb
push
testb
insb
loop
insl
mov
pop
cmpb
mov
push
mov
or
pushf
fildl
mov
xor
xchg
cmp
fmul
gs
ds
sub
fldcw
enter
jecxz
push
jl
push
xchg
sarl
inc
jge
inc
test
sub
mov
adc
pop
cmp
les
mov
dec
add
test
inc
lcall
mov
xor
inc
test
in
and
inc
push
bswap
leave
leave
leave
push
dec
xor
leave
jl
dec
sub
pop
lds
xchg
jp
pop
xchg
out
dec
add
test
pop
push
push
leave
ret
cmpsl
add
add
xchg
imul
mov
push
imul
sub
lea
sbb
push
push
mov
push
add
cltd
pop
dec
inc
dec
inc
in
inc
jg
aaa
push
push
in
mov
dec
inc
push
ret
fcomps
lea
jo
sbb
mov
pop
iret
push
enter
dec
pop
xor
insl
andl
dec
xrelease
sub
inc
iret
xchg
xor
add
pop
movsl
pushf
dec
dec
mov
mov
lahf
daa
adc
mov
loope
mov
jl
or
jle
sub
lods
mov
mov
inc
loop
xchg
insb
cmp
lods
push
dec
lret
pop
mov
mov
xor
pop
xor
lcall
cltd
dec
rcll
fs
dec
stos
mov
cmp
jo
js
insb
jne
sub
mov
fisubs
in
out
pop
mov
inc
mov
sbb
and
sti
push
push
xchg
sub
push
sub
pop
mov
add
push
mov
cmpsl
ja
fistl
adc
pop
dec
sub
dec
cwtl
outsb
xorl
imul
ja
pop
cmp
jo
sub
inc
inc
xorb
add
lock
scas
addl
add
test
sbb
rolb
xchg
jns
aam
cmp
dec
pop
sbb
fimull
cmp
sbb
adc
xchg
aam
test
pop
rolb
imul
shll
sub
out
pop
lret
pusha
mov
pusha
das
push
and
jne
cmp
stos
or
jp
std
loope
jecxz
adc
mov
add
jne
out
push
push
or
dec
cmp
addb
sub
mov
fstpt
inc
and
xor
mov
mov
les
aaa
lods
inc
sub
mov
push
js
insb
sbb
sbb
xchg
push
sub
les
data16
lret
out
xchg
cmp
and
pop
mov
push
imul
add
lahf
aas
push
push
pop
or
jle
leave
cmp
dec
pop
dec
dec
sub
jbe
enter
test
jne
es
sub
adc
add
cmovbe
cmp
je
mov
imul
fsubs
push
xchg
data16
ret
rcrb
in
pop
adc
inc
sti
or
rclb
lret
push
and
xorb
loope
inc
insb
pusha
movsl
orb
add
movsl
add
push
push
mov
push
ljmp
sbb
test
fwait
les
scas
sbb
inc
ret
sub
and
cmp
cmp
sahf
cmp
movl
es
jmp
xor
inc
fs
push
mov
and
pop
mov
loopne
inc
out
dec
test
jno
inc
pop
mov
adc
mov
push
mov
ret
lods
inc
cmp
adcb
inc
mov
mov
mov
push
jae
xchg
xor
lods
add
lock
xor
js
out
loope
cmp
mov
and
or
data16
or
add
sbb
fsubrs
dec
sbb
pop
dec
inc
or
sub
xor
and
insl
and
sbb
inc
dec
int3
push
rcrb
lret
daa
insl
mov
icebp
and
sub
mov
xor
xchg
out
mov
mov
mov
sti
cld
sub
dec
movsb
outsb
gs
ror
jne
mov
and
jmp
ret
sub
cmpb
mov
inc
int
hlt
scas
loop
jns
jl
push
sbb
xor
inc
nop
shrb
add
xchg
cmp
sub
ja
jmp
add
add
jmp
sub
cmpsb
jno
pushf
sarb
xchg
cwtl
dec
leave
ret
cmpsl
dec
dec
xadd
sub
pop
lods
daa
test
mov
push
dec
cmp
push
add
mov
iret
repz
xor
and
inc
push
pop
int
add
xchg
dec
push
sub
rorb
inc
or
xor
lock
inc
sub
pop
add
fcomp
jmp
sbb
mov
dec
mov
dec
loope
inc
stc
clc
hlt
or
hlt
add
fs
or
cmp
mov
mov
dec
inc
popa
fisttpl
nop
cwtl
and
orl
jb
pop
arpl
cmp
inc
add
mov
fldenv
inc
pop
push
sbbb
push
lock
pop
hlt
je
and
push
adc
and
jno
loopne
sub
or
cmp
insl
inc
mov
sbb
sub
aas
movsl
xor
sub
cmp
xchg
rcrb
add
out
mov
sbbb
mov
lock
scas
mov
or
ret
add
or
fcmovne
push
add
in
add
popa
rcll
lahf
int3
addr16
push
or
mov
sbb
jl
adc
add
xor
and
shrl
adcb
inc
je
sbb
dec
inc
cmp
fs
inc
sbb
mov
or
repnz
jae
mov
xor
push
insb
xchg
mov
mov
mov
mov
js
js
inc
bound
test
add
call
mov
lret
adc
nop
sub
fimuls
andb
ljmp
xor
nop
push
push
jne
cltd
int
and
scas
mov
test
push
out
rorl
shrb
cmp
jmp
cmpl
dec
dec
xchg
add
sbb
loope
mov
ret
adc
leave
add
adcb
or
scas
and
xor
pop
or
dec
shl
outsb
fmul
shr
push
mov
jl
cmp
and
mov
sub
or
mov
bound
adc
push
sub
mov
sbbl
cmp
rol
or
adc
dec
mov
lock
sti
pop
or
js
inc
loopne
cmp
fwait
mov
or
add
int
out
xorl
xchg
jno
mov
outsb
in
lea
sbb
adc
fcomps
add
adc
or
or
aaa
or
or
in
or
xor
call
pop
cmp
lock
imul
test
mov
addl
xorl
add
shrd
adc
aas
pushl
pushl
fidivs
sbb
pop
xchg
clc
cltd
sbb
push
jmp
and
dec
cmpl
outsl
mov
adc
inc
test
test
push
in
ret
xor
add
sub
mov
insl
inc
xchg
aas
sbb
adc
jne
lds
add
ja
les
inc
sub
or
pop
push
or
data16
jne
imul
xor
mov
aam
inc
xor
sbb
sbb
xchg
pop
cwtl
mov
cmp
int
inc
pop
mov
movl
xor
je
or
sub
add
mov
xorb
inc
addr16
adc
cmpsl
testl
call
daa
or
sub
lahf
xchg
das
sti
mov
push
add
cmp
push
cs
sbb
ds
mov
rorb
test
mov
cs
and
cwtl
aam
add
int3
inc
sbb
enter
cmp
stc
test
iret
inc
mov
pushf
xchg
cmpsb
dec
test
cwtl
cmc
adc
cld
cmpsl
pusha
imul
or
dec
dec
inc
dec
dec
icebp
jmp
mov
pop
fnsave
jo
dec
dec
adc
jp
or
in
nop
pop
bound
or
mul
xor
or
test
lds
in
xchg
mov
movb
xchg
push
rorb
dec
movsb
lods
xchg
push
push
fs
popa
add
and
inc
popa
mov
add
sub
or
daa
adc
ret
je
in
push
add
sub
inc
dec
sub
xor
mov
jecxz
mov
xor
and
adc
cwtl
mov
cmpsl
add
aam
stc
sub
aam
icebp
mov
inc
sti
cltd
ficoml
or
dec
add
or
loopne
rolb
in
ss
movsb
xchg
les
insb
sbb
inc
mov
mov
imul
outsb
insl
inc
xor
push
ss
add
popa
add
sbb
test
mov
cs
insl
add
lods
pop
rcr
adc
popf
pop
imul
xchg
sub
ret
push
inc
es
repnz
popa
imul
add
clc
xor
or
sub
clc
mov
inc
imul
adc
ljmp
inc
adc
sbb
push
frstor
dec
mov
sbb
mov
push
sbb
je
scas
add
aaa
stos
mov
sbb
into
stc
or
mov
adc
xor
or
add
js
cld
xchg
sbb
fisttpll
add
inc
fs
nop
adc
out
mov
xor
and
dec
mov
or
and
cwtl
sub
dec
lods
jle
xchg
mov
pusha
mov
ret
dec
adc
movsl
and
dec
cltd
jns
fs
pop
mov
dec
pop
sub
mov
adc
push
inc
sbb
adcb
push
and
rcl
aad
or
aaa
incl
xchg
bound
xor
rol
mov
add
xchg
add
cli
xchg
add
ret
mov
push
es
pop
adc
push
imul
jl
inc
inc
lea
mov
add
sbb
insb
dec
mov
add
push
fs
fidivs
add
sub
sub
cmpsl
jle
and
xchg
inc
or
push
aaa
fsubrs
cli
or
cwtl
xchg
mov
popa
fbstp
add
and
js
insl
inc
aaa
loope
and
addr16
jp
mov
pop
push
or
mov
xchg
js
adc
sub
cld
xchg
mov
out
sbb
cwtl
inc
repnz
sbb
pop
aad
pop
xor
mov
jne
cs
or
inc
push
cmpl
jne
pop
shlb
mov
xchg
fstps
popf
cs
cltd
or
nop
dec
das
adc
addl
das
dec
nop
sarl
mov
faddl
insl
mov
int
fistpl
mov
inc
shrb
and
push
sti
push
rolb
inc
or
in
and
ja
dec
mov
pushf
jle
das
clc
mov
cld
decl
sbb
mov
cltd
add
push
or
mov
inc
xor
dec
xchg
or
jecxz
shrb
push
or
dec
sbb
cmpb
pop
je
add
xor
xlat
js
pop
mov
mov
imul
test
cmp
sbb
les
inc
xor
pop
adc
cmp
pop
repnz
imul
or
mov
add
inc
mov
dec
pusha
inc
pop
xchg
add
xchg
dec
and
das
dec
shlb
mov
xchg
es
movsl
adc
rorb
repz
adc
or
jmp
cmpsl
and
inc
or
xchg
orb
or
mov
inc
lea
outsl
fdivl
pop
mov
inc
loopne
or
jb
adc
dec
not
sarl
mov
ficoms
sub
cmpsl
mov
ds
jge
cmp
clc
adc
cld
mov
cmp
pop
sarb
and
mov
daa
pop
ret
mov
dec
enter
jnp
push
mov
add
adc
xchg
int
adc
leave
add
loopne
and
dec
cmp
dec
add
cmpsl
jmp
repnz
xchg
mov
cmp
shl
pop
jb
push
and
cmpsb
sbb
fldcw
add
xchg
mov
push
add
dec
out
add
fs
xor
addr16
repnz
sbb
fldt
cmp
adc
pop
jmp
sub
cwtl
pop
std
inc
insb
jg
cmp
dec
sub
mov
pop
imul
insb
xor
mov
lret
add
mov
js
pop
pop
sub
sub
xor
or
ljmp
movl
bound
cmp
lcall
repz
fadds
jnp
movsl
addr16
and
and
mov
lods
jae
and
mov
sub
je
pop
sub
adc
stos
rolb
sahf
and
cmpb
jne
stos
dec
xchg
sub
in
daa
orl
pop
adcb
or
mov
sub
loope
movsl
cmp
mov
call
addb
int
clc
push
mov
cmp
mov
hlt
push
daa
dec
or
das
xlat
sbb
stos
xor
mov
push
mov
mov
cmp
and
int
sub
adc
sub
call
xchg
out
mov
jmp
adc
inc
push
les
cwtl
mov
xor
cmp
push
es
adc
xor
xor
push
dec
pop
sub
add
pushf
adc
clc
and
icebp
loopne
or
repz
sbb
or
dec
dec
out
xor
movsl
push
jecxz
lods
adc
add
push
mov
jmp
pop
pmaxub
xchg
lret
iret
and
mov
add
in
and
test
dec
insl
cmp
das
les
jo
jmp
fstps
into
lea
push
fdivrs
sub
mov
jns
inc
flds
pop
or
and
inc
inc
ret
and
adc
pop
cmp
adc
or
js
sbb
adc
test
mov
jno
bound
fnstsw
lods
mov
test
add
jle
jne
rclb
loopne
outsl
adc
je
divl
cmp
fcoml
inc
sbb
sub
cltd
mov
nop
jno
cmp
lds
inc
shr
or
pop
jno
mov
inc
mov
inc
or
add
cmp
sarl
lea
push
xchg
sbb
inc
jo
jecxz
pop
mov
dec
sbb
or
dec
addr16
add
ret
or
fisttpll
sbb
sbb
mov
push
sbb
sbb
ficoml
rcrb
fs
push
insl
pop
pop
gs
dec
dec
or
bound
inc
pop
or
xlat
or
jmp
inc
sub
popf
pop
sbb
aaa
sub
jmp
push
sbb
jge
cmpsl
lahf
cli
mov
popf
int
and
mov
leave
jne
mov
and
mov
aad
shlb
mov
cmpsl
xchg
enter
sbb
cbtw
sbb
mov
sbb
call
mov
divl
mov
out
adc
and
fwait
dec
xor
fs
adc
imul
je
test
mov
sbb
les
sub
enter
shrb
xchg
inc
decl
adcb
testl
out
or
add
mov
add
ja,pn
cmp
leave
ljmp
pushf
jnp
jecxz
into
nop
or
jmp
int
push
fstps
mov
mov
add
lock
cmp
dec
icebp
jge
call
js
inc
mov
adc
push
scas
test
in
in
xor
movsb
pop
rorb
xchg
insb
and
in
in
mov
fcmovu
mov
jmp
fdivrs
mov
add
pop
xchg
or
jnp
stos
jne,pn
and
push
or
inc
movsl
dec
jecxz
cmp
adc
mov
add
sub
rorl
test
outsl
inc
jl
add
pop
mov
cmp
dec
sbb
test
mov
movsl
sbb
mov
pop
jp
jmp
daa
inc
hlt
pusha
xchg
and
adc
and
sbb
repnz
or
loopne
or
pop
ffree
xor
xlat
lods
push
or
sub
push
movsb
adc
jle
clc
adc
push
subb
mov
xor
pop
outsb
pop
mov
cli
cmp
pop
in
call
into
lock
mov
sbb
mov
cwtl
cmp
sbb
xor
adc
or
fidivrs
pusha
jmp
addps
push
inc
test
xchg
pushf
pop
out
and
inc
xchg
in
sbb
divl
xor
das
or
leave
push
inc
sbb
cmp
adc
mov
lea
andl
sub
add
insl
lret
dec
test
push
fistl
outsb
rolb
pop
cmp
or
mov
jb
dec
add
popf
popa
rep
inc
bound
shlb
cmp
rcr
test
lea
fstpl
mov
mov
xor
adc
xchg
nop
movsl
arpl
stos
bndstx
adc
and
xchg
jne
pop
mov
add
push
push
data16
fiadds
adc
and
nop
sahf
or
sub
insb
popa
xchg
mov
and
inc
mov
bound
add
das
rolb
sbb
sbb
xor
cmp
cmp
imul
add
dec
xor
icebp
in
sahf
or
mov
loop
dec
push
outsl
fwait
cli
jne
pop
jg
movsl
xchg
dec
push
inc
popf
xchg
lods
add
rcrl
pop
lcall
or
xchg
mov
test
push
mulb
test
jl
jbe
aas
mov
mov
ja
mov
cmp
cmp
jmp
cmp
and
loope
cmp
fimuls
dec
mov
push
rcll
aas
sbb
cmp
xchg
mov
add
or
and
add
inc
dec
adc
or
jmp
lods
aaa
sub
bound
cli
fs
and
adc
sbb
sbbb
imulb
xor
sahf
add
pop
dec
outsb
int
lea
jo
out
shlb
add
cmp
and
sub
enter
sub
faddl
mov
lods
shlb
addr16
out
inc
cli
scas
adc
mov
push
sarb
or
xchg
cli
lock
fiaddl
sti
sub
call
pop
addl
or
jnp
insl
or
jo
adc
and
movsb
add
lret
rol
sub
mov
sub
shll
add
adc
pop
push
into
xor
insl
loope
add
xor
lahf
mov
mov
or
cmp
lcall
pusha
add
test
mov
sub
push
data16
lahf
scas
pusha
xchg
ss
insl
bound
or
inc
push
into
push
loopne
inc
push
jp
in
aam
push
sbb
ret
jae
jnp
pop
mov
and
add
mov
popa
xor
or
inc
cmp
cmpsl
ret
jbe
aaa
test
aad
adc
rcll
js
xor
pop
or
call
daa
inc
mov
jl
mov
jb
adcl
cmp
xchg
xchg
inc
or
or
cmp
cltd
enter
addr16
int3
sbb
ljmp
sbb
sarb
insl
aas
aam
cmpl
cmp
test
inc
lea
mul
push
cmp
sbbl
aaa
jne
cmpsb
enter
movzwl
push
push
push
cmp
movsb
xchg
inc
mov
mov
stc
xchg
adc
xchg
js
or
mov
and
add
je
je
mov
xchg
subl
mov
iret
in
data16
sub
mov
jns
in
mov
sbb
pop
pop
movsl
flds
leave
stos
test
xchg
inc
xchg
dec
mov
push
or
mov
popf
and
add
and
sub
and
stc
pop
fcoms
mov
and
add
or
sbbb
sub
adc
add
xchg
sbb
repnz
and
xchg
jne
xchg
xchg
cmp
aaa
movsb
ret
out
pop
xchg
pop
or
mov
adc
sbb
push
fisubrl
inc
sbb
dec
xor
mov
in
xor
pop
addb
fsub
dec
or
add
enter
sbb
sub
lds
mov
pusha
and
inc
lahf
lahf
and
xor
cld
out
or
into
add
mov
enter
or
jno
fisubl
rorl
adc
cmp
stc
dec
cmpsl
and
dec
insb
inc
lea
mov
xchg
or
jmp
cmp
pusha
cmpsl
adc
xlat
mov
adc
inc
imul
punpcklbw
pusha
jmp
cmp
mov
push
lahf
push
fdivs
sbb
xchg
lahf
out
outsb
cwtl
dec
jne
syscall
mov
push
jns
fiaddl
pusha
imul
das
sbb
clc
add
add
adc
dec
popa
int3
xlat
or
add
sbb
loop
mov
dec
sbb
pslld
cmp
out
push
mov
jbe
inc
push
or
and
test
push
mov
or
cld
js
xchg
mov
out
rcr
push
xor
test
fcomp
pop
add
push
cmpsl
popf
fsubl
and
rorl
push
add
insl
cmp
push
loopne
sbb
sub
jno
es
jge
sbb
aam
sbb
sti
int3
pop
test
jmp
add
dec
pop
int
pusha
test
mov
or
in
aaa
push
and
andl
push
les
sub
lret
push
or
push
mov
sbb
inc
mov
push
xor
test
outsb
and
or
int
push
dec
jecxz
mov
push
mov
mov
pop
jle
je
jmp
xchg
sbb
iret
data16
cmp
js
aaa
push
inc
psrad
push
ficoms
nop
orl
xchg
gs
and
jge
cmp
sbb
push
js
das
add
push
lea
fwait
sbbb
xchg
jle
mov
cmp
jecxz
mov
sbb
in
cmp
sbb
sbb
ja
mov
outsl
lds
testl
pusha
pop
pop
shlb
or
push
lock
xchg
mov
and
fisubrl
push
xchg
mov
or
push
add
mov
hlt
enter
mov
orb
int
or
xor
sub
rol
inc
sub
adc
dec
lret
daa
into
loopne
sidtl
sbb
mov
aaa
mov
push
sti
pusha
test
mov
popa
flds
inc
xchg
pop
sub
lock
mov
mov
push
insl
shlb
in
xchg
mov
dec
inc
mov
push
xchg
scas
xchg
xor
mov
add
add
movsl
call
pushf
pop
repz
mov
mov
and
dec
adc
push
aas
out
inc
inc
add
jmp
popf
add
aam
xchg
clc
sub
aas
shlb
mov
aad
insb
rcr
movsl
push
pop
add
movlps
arpl
fstpt
adc
lock
dec
popa
inc
pop
jne
int3
rclb
xor
dec
jmp
mov
loop
mov
loopne
cli
add
mov
mov
hlt
sub
out
sub
jl
jne
or
mov
dec
sub
movsb
xlat
inc
sbb
and
das
sub
add
sub
test
xor
lods
dec
cmp
or
add
lock
sbb
add
loopne
inc
xchg
ss
in
xor
inc
jl
aam
xchg
out
mov
push
push
dec
out
sbb
fdivs
dec
mov
sub
mov
xchg
aam
add
icebp
or
add
or
loope
mov
cmp
repz
shlb
adc
call
pop
aas
mov
pop
les
dec
or
lret
outsb
or
mov
in
loope
movsb
mov
xchg
testl
push
and
inc
mov
movsl
jmp
test
sbb
cwtl
pop
pop
xchg
imul
adc
imul
push
fisubs
lock
out
sub
mov
adc
inc
adcb
sahf
test
cmpsb
imul
enter
add
push
loope
int3
scas
mov
dec
andb
and
sub
lods
nop
jne
test
push
movsb
or
adc
lcall
jmp
jo,pn
sub
pop
add
dec
push
jl
cmp
movsb
loopne
lock
xchg
add
movsb
or
ret
js
scas
mov
int
not
dec
test
fmul
das
call
mov
andb
mov
jp
push
test
stos
je
out
out
insl
imul
sub
dec
cmp
cltd
sarb
adc
push
and
pop
int
test
in
xor
add
mov
push
or
push
sub
adc
test
lods
adc
add
mov
shl
pop
repz
test
lsl
xor
or
xchg
push
sub
int3
shl
xchg
testb
insb
inc
les
push
ret
dec
push
adc
hlt
outsb
popa
push
add
cmpsl
pop
sahf
adc
stos
push
orb
adc
fsubr
adc
insb
jo
push
shl
adc
popa
lea
mov
and
mov
rorl
add
int
push
sbb
inc
push
jecxz
cmp
adc
cmpsb
adc
fmuls
adc
add
repz
ljmp
sbb
insb
mov
cwtl
mov
xor
jp
test
dec
and
fldl
or
jl
fisubrs
mov
sbb
aaa
call
cmp
rcr
sub
pop
pop
and
or
je
lea
lock
enter
mov
and
and
mov
orb
inc
adc
xchg
das
push
inc
sbb
inc
mov
or
push
mov
lea
addr16
sbb
push
repnz
mov
dec
aaa
mov
sbb
sbb
push
and
in
mov
cli
push
ret
cld
clc
adc
xlat
or
addr16
sub
sbb
adc
call
inc
ret
outsb
inc
lcall
imul
lods
xchg
stos
loopne
fadd
rol
adc
cltd
sbb
adc
jnp
nop
les
imul
sbb
in
ljmp
inc
addr16
rcrb
inc
fmuls
inc
push
add
inc
rolb
hlt
sbb
gs
lcall
add
mov
jno
pop
es
ret
mov
mov
inc
js
testl
xor
xchg
or
pop
lds
sbb
sub
sbb
pop
jnp
pop
loopne
xor
movlps
and
daa
sub
add
dec
mov
jo
mov
dec
inc
xchg
cld
push
xor
les
xor
aaa
jp
pop
mov
cmpsl
sub
pop
pushf
and
push
xchg
xor
ja
lret
xor
out
xchg
and
push
adc
adc
mov
add
and
xchg
mov
leave
in
mov
or
add
dec
inc
les
sub
ljmp
clc
jmp
sbb
jmp
pop
gs
sbb
adc
icebp
push
mov
xlat
sub
and
daa
fists
add
jae
mov
mov
dec
sbb
xlat
outsl
or
adc
dec
and
sub
lods
inc
adc
add
adc
adc
movb
mov
repnz
xor
nop
sbb
mov
mov
insl
push
or
xor
rorl
adc
adc
sbb
cli
xchg
inc
sbb
mov
dec
imul
push
and
xchg
fld
cmp
and
jne
push
mov
add
imul
adc
add
dec
in
mov
pop
enter
push
and
pop
inc
insl
pop
sub
mov
sub
lea
sbb
and
xchg
movsb
pop
cmpsb
out
or
add
out
add
or
fstpl
or
inc
or
and
fcompl
hlt
mov
adc
and
xchg
push
push
dec
lea
pop
lock
dec
dec
loopne
push
sbb
sbb
bound
sub
jno
cld
shlb
or
pop
dec
sbb
lcall
movsb
insb
ret
xchg
mov
mov
int
dec
in
cmp
inc
jne
movb
jmp
cmp
adc
dec
rcr
pop
and
sbb
nop/reserved
add
lret
sbb
pop
or
mov
jle
dec
shll
push
sbb
movsl
out
aad
push
adc
les
push
je
out
mov
movsb
xchg
pop
xor
xchg
lods
inc
and
scas
cmpsl
cmpsl
out
inc
fsub
pop
dec
sbb
and
and
xchg
sub
call
dec
mov
lods
xor
pop
mov
cmpsl
scas
out
inc
dec
orl
loop
mov
arpl
jne
push
repnz
or
inc
adc
xchg
push
mov
pusha
mov
addr16
lock
mov
stc
dec
fsubrp
pop
lods
in
shlb
repnz
fmul
fadds
mov
mov
sbb
lods
cltd
test
out
aaa
mov
test
test
inc
xchg
or
int3
pop
xorb
ss
add
jmp
bound
ret
lcall
ja
dec
push
bound
in
ja
sbb
xchg
mov
outsl
cmp
xorb
dec
outsl
mov
ja
pop
sbb
mov
dec
pop
or
imul
sbb
unpckhps
jae
dec
xor
popf
add
mov
stos
push
add
and
not
leave
add
or
cmp
add
xor
mov
add
es
cwtl
push
xchg
mov
rorb
ficompl
or
mov
imul
sub
mov
add
mov
inc
fld
shr
or
int3
xchg
xchg
mov
gs
fstl
jne
ja
cwtl
lods
push
xorl
cmpsl
adc
push
lea
ds
or
add
adc
lcall
pop
cmp
xlat
enter
pop
movsb
push
and
or
or
gs
pop
popa
jmp
and
daa
ret
cli
cmp
pop
mov
add
out
sub
sbb
aad
mov
test
and
and
push
push
nop
xor
test
aam
xor
mov
sbb
add
adc
xor
jae
cmc
sub
push
add
test
mov
cmpsb
inc
loope
mov
dec
call
cmp
divb
lds
fisttps
and
adc
test
pop
xchg
mov
pop
or
in
xor
jp
or
inc
inc
cmp
sbb
xchg
rcrb
ret
jae
xchg
clc
or
push
sub
or
lcall
js
fs
or
in
dec
addb
cmp
sbb
repnz
mov
or
fs
xor
mov
mov
sahf
or
mov
xlat
roll
popa
jbe
inc
out
outsl
enter
sub
add
xchg
xchg
xchg
xchg
sub
sub
pushf
xchg
xchg
sub
xor
cmpsl
inc
pusha
dec
cmp
in
pop
jle
imul
adc
js
xor
or
cmpsl
or
xor
aaa
add
dec
push
adc
sbb
and
mov
out
mov
pop
addb
sbb
stos
sub
sbb
jns
notl
mov
cmpsl
mov
inc
mov
pusha
cmc
inc
pop
sbb
xchg
dec
jo
js
jb
in
sbbb
or
or
inc
mov
add
sub
add
js
lods
or
mov
xor
and
fs
push
xor
dec
xchg
push
inc
frstor
sbb
fs
sbb
and
clc
mov
jl
lcall
jl
xchg
or
sbb
and
adc
sub
call
push
fmul
hlt
adc
inc
push
add
nop
movd
daa
mov
cmp
mov
scas
or
stc
out
sub
cmp
loop
xor
or
loopne
mov
int
arpl
or
mov
add
ljmp
push
sub
fdivr
test
lea
ja
and
and
mov
add
mov
sub
fwait
movsl
push
cmovbe
sub
and
movsb
mov
adc
xchg
outsl
in
nop
push
xor
dec
adc
mov
adc
cmc
orb
sarb
jmp
push
pop
shlb
lods
lock
push
imul
push
inc
fcmove
add
bound
dec
int3
mov
stos
js
and
adc
addr16
cmp
dec
jge
adc
cld
jo
enter
pop
inc
les
sub
mov
dec
pop
xchg
push
or
imul
hlt
add
pop
rclb
inc
push
cwtl
mov
mov
mov
mov
add
cwtl
mov
jmp
sbb
sbb
and
imul
mov
xor
push
xchg
add
into
js
mov
dec
push
push
fmull
jnp
shlb
pop
inc
xor
movsl
push
dec
loopne
out
jge
out
rol
mov
lahf
aas
ss
imul
mov
mov
pop
xchg
push
pop
mov
repz
mov
dec
aad
lea
mov
rcrl
add
icebp
subb
mov
jae
xchg
mov
and
pop
jmp
xchg
xor
ss
cmp
adc
push
and
add
test
les
xchg
fcomps
inc
lcall
push
lcall
adc
mov
je
das
aas
dec
jmp
jae
jle
popa
pop
lcall
xchg
jmp
pop
cmp
sub
pop
mov
enter
mov
jp
sbb
jno
push
ljmp
jl
cmp
pop
inc
mov
filds
mov
mov
roll
sahf
std
sbb
icebp
inc
inc
inc
fldenv
and
add
push
sarb
incl
pop
and
inc
fldt
mov
jo
mov
ret
pop
rorl
rorl
lds
jne
daa
push
xor
jp
ret
inc
push
or
lds
push
jne
add
andb
ret
cmpb
inc
insb
call
iret
int
sarl
inc
fst
cmc
out
and
imul
mov
shrb
and
cmp
aas
mov
push
push
inc
inc
dec
pop
or
pop
add
push
cmp
and
or
pop
xchg
mov
inc
dec
dec
inc
cmp
add
cmp
or
and
or
mov
fisttpl
add
mov
push
pop
and
fwait
sub
mov
pop
fs
test
inc
mov
sub
mov
clc
jle
push
inc
stc
das
mov
std
or
out
fbstp
adc
test
int3
jmp
out
mov
lret
insl
xor
mov
xchg
test
shl
jnp
out
test
jg
pop
addr16
add
inc
pop
push
jns
outsl
push
popf
pop
outsb
mov
or
ret
or
or
movl
nop
adc
lret
fcompl
sub
data16
mov
imul
and
or
or
loopne
or
popf
jns
movsl
pop
add
push
xor
jo
add
fwait
mov
pop
add
icebp
jle
jg
rolb
push
and
adc
repnz
add
pop
fisubrl
inc
push
dec
push
subl
cmpb
into
xchg
nop
pop
dec
outsl
lods
push
arpl
and
ja
jno
pop
inc
inc
xor
add
pop
inc
push
pop
push
and
push
sbb
cli
inc
jge
mov
mov
dec
pop
sub
mov
jne
aam
aas
jle
rolb
or
pop
int3
xchg
and
sbb
les
daa
rclb
sbb
push
and
sti
ds
ss
adc
shll
or
xor
loop
inc
sub
dec
aam
dec
sbb
or
lea
out
adc
mov
pusha
mov
xor
push
mov
push
inc
nop
data16
roll
bound
data16
pusha
aaa
pop
fisubl
lods
out
mov
sub
addr16
mov
mov
add
push
arpl
pop
cltd
testb
inc
testl
or
inc
loopne
loop
jle
lcall
jnp
movsl
add
xor
inc
jmp
inc
ja
clc
or
jmp
mov
push
add
xchg
arpl
mov
jne
cld
or
push
gs
push
mov
jbe
xor
inc
push
dec
add
sbb
lock
loopne
imul
mov
insl
data16
add
push
mov
jb
adc
add
stc
cmp
repz
push
add
ret
add
data16
and
push
cmpsl
loope
iret
mov
in
add
sti
xor
fisttpll
inc
mov
push
fisttpll
add
mov
fadds
pop
or
loopne
sahf
or
and
push
xchg
push
jbe
dec
push
mov
rcrl
mov
pop
ret
cmp
jbe
and
jbe
push
sbb
push
pop
fldenv
add
push
add
adc
push
imul
cmpsb
jnp
icebp
sti
fwait
mov
or
sarl
push
sbb
ret
xor
dec
inc
test
es
sbb
in
shl
pusha
dec
add
repz
ja
mov
mov
push
mov
shl
add
adc
xor
roll
das
rcll
add
imul
test
outsb
dec
gs
add
push
arpl
inc
mov
aaa
sbb
xchg
sub
cltd
add
jno
xor
jne
js
nop
jnp
outsl
pop
add
xchg
inc
and
pop
testl
dec
scas
wbinvd
vmread
rorl
ret
lds
ret
dec
gs
add
inc
shlb
and
or
pusha
fwait
arpl
arpl
pop
pop
lcall
or
nop
dec
pop
or
xchg
cmp
jmp
stos
push
xor
sub
cltd
mov
cmp
or
ret
fnstcw
lcall
mov
leave
cli
push
sti
cmpsb
mov
loop
bnd
mov
mov
out
add
inc
pop
mov
xor
nop
and
jmp
or
mov
sarb
sub
dec
shl
scas
jae
or
sti
add
mov
dec
cli
jmp
mov
mov
xor
shll
inc
jmp
inc
mov
jno
or
lret
nop
xor
test
add
aad
push
movsb
movsl
aam
cmpsb
dec
mov
mov
mov
push
ret
push
jnp
popa
hlt
mov
dec
mov
mov
movsl
or
cmpsl
lods
pop
imul
dec
push
adc
push
adcl
xlat
pop
and
imul
adc
mov
movsl
lock
bound
inc
cld
push
ljmp
mov
incl
inc
add
sub
sub
movsl
xchg
sbb
je
mov
js
xchg
ret
push
fcompl
inc
testb
pcmpeqd
push
ss
lock
jbe
jne
minps
pop
mov
and
in
mov
jg
and
jo
data16
lret
inc
pop
ja
sub
fisubs
enter
pop
mov
les
shll
adc
mov
xchg
pop
sbb
lret
les
ja
push
pop
rolb
les
ret
int
inc
nop
pop
in
subl
xorl
add
loop
test
and
adc
in
pusha
adc
add
or
ds
shll
sub
cmp
add
ja
push
ja
in
test
dec
add
add
enter
inc
in
sub
push
xchg
dec
pop
cmpb
cmp
pop
js
test
cli
call
sbb
flds
cmp
pop
aam
sub
sbb
movsb
dec
jecxz
jne
push
mov
out
mov
mov
dec
call
out
daa
xor
enter
cmp
cmp
aas
int3
ret
xor
sbb
faddl
jne
rclb
sahf
shrb
sbb
jbe
out
jmp
add
cmpsb
icebp
and
sub
filds
cmp
jbe
sub
cli
call
rolb
sbb
lret
test
or
add
test
inc
pop
sub
inc
es
jo
imul
push
sar
add
cmp
cld
shl
out
or
sarl
push
add
add
call
imul
mov
mov
mov
ljmp
in
call
mov
or
pop
sar
ss
dec
jo
inc
int3
mov
adc
cmp
ret
sbb
add
loopne
jl
dec
rorl
int
clc
dec
inc
out
loop
add
ja,pn
cmp
mov
jge
hlt
xlat
adc
fidivl
mov
loopne
and
pusha
and
adc
or
add
rcrb
addl
fs
xorl
dec
repnz
dec
xchg
jle
mov
sbb
mov
nop
dec
negb
dec
insl
jmp
xor
fisubrs
shrl
or
adc
xor
jecxz
shrl
jbe
rolb
mov
inc
jg
sub
cmp
xchg
or
add
lock
lock
sub
subl
push
les
stos
dec
in
dec
int3
rolb
sbb
sahf
add
add
pop
adc
adc
jl
cmpl
adcb
jl
push
out
push
adc
pop
pop
ds
push
mov
cmpsl
push
add
loope
xchg
fwait
or
push
inc
or
sti
inc
loopne
jns
add
sub
mov
js
lock
push
pusha
mov
xor
xchg
pop
cmp
and
inc
push
sub
stos
icebp
in
jmp
je
dec
repz
push
lock
lea
and
xor
mov
xchg
subl
das
cmp
inc
sbb
dec
shl
adc
cld
je
add
fsubrp
jmp
xlat
insb
mov
test
sbb
cli
adc
dec
shl
pusha
xor
xchg
ss
loope
sbb
fnstenv
test
nop
out
cmp
pushf
and
jne
ds
xchg
dec
inc
sbb
jbe
xchg
cmp
out
pop
sbb
fisttpll
sbb
add
xor
fsubs
mov
xchg
pusha
insl
pop
sub
stos
sub
sub
pushf
out
push
clc
daa
jne
jp
jmp
mov
xchg
add
mov
jae
daa
test
call
outsb
mov
lock
mov
sub
ficoml
sti
add
mov
or
sub
pop
sub
add
fs
inc
add
inc
push
or
or
or
test
fs
jae
ss
insb
cmp
outsl
inc
rorb
inc
xor
mov
pop
stos
in
dec
ret
push
fldl
xlat
xchg
sub
push
sbb
push
push
push
popl
add
adc
les
cmp
lret
push
sbb
scas
or
data16
test
mov
mov
mov
add
popf
int
push
inc
das
push
mov
adc
jl
inc
xor
push
stc
mov
dec
xchg
repz
push
hlt
imul
xor
andb
push
jmp
push
lock
iret
jae
sub
jbe
push
pop
sub
or
xlat
ds
rolb
mov
leave
int
pop
lahf
inc
jb
dec
inc
les
push
loope
ljmp
popa
fadds
lcall
es
pushf
mov
xor
shll
imul
call
dec
jmp
push
sub
or
jge
insl
lret
andl
inc
add
adc
ss
data16
sbb
rol
dec
push
mov
rcrl
add
outsl
cmpl
or
loopne
push
int3
xor
sub
jecxz
xor
in
in
ret
cmp
fsubrl
jle
mov
popl
cmp
shl
or
or
jb
cmp
in
adc
pop
mov
add
sbb
shr
inc
mov
je
dec
pop
or
cmp
xor
adc
insb
push
jne
dec
mov
sub
mov
sub
push
call
and
jl
xor
mov
xor
mov
push
add
icebp
test
stc
inc
cmpsl
jns
add
push
inc
inc
push
clc
push
sub
add
fsubl
int
push
out
push
sub
push
push
addr16
cmpb
and
or
sbb
std
ja
and
push
push
loopne
jbe
not
shr
and
add
int3
dec
mov
push
add
fimull
fcomps
es
shld
or
test
in
into
lock
mov
mov
fiadds
cmpsl
jns
push
push
dec
push
push
mov
add
push
push
shrb
adc
mull
mov
add
mov
or
daa
jecxz
inc
xor
add
call
stos
dec
repz
lods
xor
dec
inc
enter
push
xchg
loopne
or
pop
subl
xor
inc
add
inc
push
ret
xchg
xor
sub
mov
adc
inc
movsl
xchg
mov
test
fcmovnu
aam
or
ds
aaa
add
icebp
jmp
ljmp
movsl
xor
fistpll
rcrl
pop
jl
mov
pop
xor
cmp
mov
dec
add
push
js
xor
shlb
mov
and
sti
cmp
ja
jo
add
sbb
sub
cmp
add
cmp
xor
push
cmp
or
add
adc
or
or
cmc
lock
inc
dec
or
lea
sbb
loope
les
ret
push
mov
push
jno,pn
inc
ljmp
int3
test
outsl
push
shlb
push
clc
adc
movl
daa
or
or
add
mov
iret
add
mov
jo
jp
jne
test
pop
movsl
add
imul
outsb
sub
cmp
sbb
mov
lods
mov
mov
shl
or
in
xchg
cli
jb
mov
sbb
lock
ret
mov
mov
add
push
imul
sbb
test
je
testb
jo
push
test
or
xor
je
clc
mov
cwtl
and
imul
push
lods
dec
shll
cs
in
iret
shl
or
sbb
dec
add
cmp
jb
imul
lds
int
mov
test
addl
clc
lcall
test
loope
rcrb
fsubrp
pop
int
sub
call
int
or
jne
aad
ss
inc
jae
aas
lret
outsl
push
adc
rorb
pushf
fwait
push
mov
cmp
adc
call
pop
pop
wrmsr
leave
gs
xor
loop
jecxz
adcl
cmpsl
or
adc
mov
dec
fsubrs
mov
pop
test
sub
push
adc
jge
dec
xor
push
and
push
mov
das
jns
loop
sbb
or
add
push
inc
and
mov
push
mov
xor
inc
xor
jb
xor
adc
xor
addb
mov
mov
imul
push
paddsb
mov
adc
adc
es
in
mov
inc
rcrb
test
push
xor
and
or
pop
popa
adc
test
ret
lahf
in
loop
ret
lret
add
movsb
dec
xchg
jns
rorl
shlb
inc
mov
cwtl
xor
or
insl
imul
pop
mov
pop
push
jnp
xchg
cmp
cmp
adc
push
inc
imul
sub
adc
push
dec
jb
mov
push
cld
inc
mov
sub
jbe
popa
mov
dec
outsb
dec
lea
add
hlt
sbb
ljmp
mov
mov
mov
mov
insl
mov
cmpsb
adc
sub
daa
stc
pop
out
mov
mov
std
xor
jl
mov
jg
sbb
ret
or
sub
dec
jmp
in
mov
adc
adc
inc
fisttpll
add
int
fldcw
and
and
insb
ss
xor
push
mov
mov
jb
sbb
rclb
out
stos
mov
xchg
call
mov
dec
sbb
aaa
shlb
mov
push
adc
and
inc
adc
sbb
ds
mov
sbb
imul
sub
inc
cmp
adc
adc
mov
sbb
cmp
sbb
popf
out
inc
dec
or
movl
pusha
orl
dec
adc
jmp
mov
rol
inc
sbb
and
out
mov
incl
lahf
fbstp
out
jmp
mov
jecxz
xchg
and
add
in
in
test
push
mov
mov
jg
ss
mov
sbb
push
and
inc
push
pusha
or
mov
xorl
negb
je
sub
loope
in
je
in
data16
add
xor
pop
inc
jne
cmp
pop
arpl
add
cmp
pop
ret
in
and
pop
inc
movl
adc
add
inc
fsub
imul
daa
xor
push
mov
xlat
push
pop
pusha
jnp
lahf
cmp
mov
or
and
rcrb
flds
dec
arpl
adc
pop
lods
mov
adc
or
jo
xor
add
adc
mov
testl
mov
test
pop
ljmp
shrl
fs
adc
push
test
repnz
shrb
negl
hlt
dec
sub
rorl
xchg
or
jl
push
sub
push
sub
push
xchg
jae
adc
mov
jmp
mov
repnz
or
push
xor
rorb
rclb
ret
sbb
sbb
imul
or
push
inc
leave
push
inc
adc
jno
and
fdiv
cs
adc
sbb
ja
sbb
jne
cmp
sbb
decl
shr
int3
sbb
andb
push
mov
pmuludq
jmp
or
into
adcl
jnp
xor
cwtl
sahf
push
pop
or
pop
sub
push
mov
shll
cmpsl
lea
push
mov
dec
fcoml
cmpsl
push
sub
sbb
rcrb
xchg
add
jmp
rcrl
inc
clc
ja
pop
xor
add
inc
fmuls
pop
fistpll
inc
jb
add
sub
cmp
ss
das
fisubrl
pop
outsb
or
mov
ret
adc
inc
cmp
sbb
or
xor
test
popa
mov
sbb
cmpsb
jge
xor
fsubrs
movsb
cli
mov
shll
xor
cld
ret
mov
repnz
pop
fldl
xchg
loopne
or
jnp
dec
out
fcmovnbe
xor
fsubs
sti
and
insb
mov
mov
xchg
mov
sub
cmp
insb
mov
xor
jbe
adc
inc
lret
lock
jbe
add
sub
dec
cltd
dec
jg
popa
dec
mov
xor
adc
sbb
lods
lret
mov
inc
mov
mov
ss
or
xor
inc
and
lcall
xor
loop
push
and
ret
daa
adc
inc
enter
sbb
fmuls
add
add
cmp
fs
cmp
or
dec
inc
inc
idivb
dec
mov
cld
gs
pop
repnz
out
or
loopne
rcrl
lock
push
xor
jae
mov
inc
loopne
or
cmp
or
ss
or
jl
cmp
jge
add
jbe
loopne
nop
mov
testb
jecxz
add
cmp
jae
scas
popf
insl
jbe
ss
jb
mov
test
add
cli
rcr
adc
adc
xor
or
mov
mov
bound
das
lahf
rcrl
call
aam
aam
or
movups
push
pop
dec
jmp
popf
jge
imul
jbe
iret
sbb
jb
fs
mov
nopl
jne
jmp
inc
jne
sti
inc
subl
jecxz
adc
xor
sbb
js
in
sub
shr
adc
adc
add
iret
add
add
lock
ljmp
pop
sbb
rcrl
pop
xchg
push
dec
adc
or
ret
or
sbb
xor
js
dec
xor
jg
inc
fadds
dec
loopne
add
and
push
or
fildll
or
cmp
add
mov
adc
inc
sbb
inc
data16
jmp
lods
push
dec
clc
mov
or
cmpl
sub
or
imul
dec
enter
nop
sahf
push
pmuludq
push
das
inc
rcll
add
mov
movsb
mov
add
mov
movsb
inc
ja
rcrb
pop
push
test
insl
inc
pop
jae
or
pop
push
sub
mov
aam
push
test
inc
dec
cmp
push
dec
and
in
and
gs
dec
mov
add
in
add
inc
mov
xchg
out
jg
es
idivl
add
push
inc
add
xor
inc
movsl
add
clc
add
outsb
xor
dec
push
sub
in
mov
mov
ror
mov
pop
inc
incb
cltd
js
add
push
mov
inc
dec
jne
addl
testl
mov
lret
or
or
inc
add
call
mov
cmpsl
das
and
mov
add
pop
sub
test
das
mov
in
xor
js
shl
test
pop
das
push
hlt
and
mov
shlb
pop
mov
mov
mov
inc
push
or
mov
pop
mov
sti
pusha
sub
mov
test
jb
and
jmp
adc
pop
sbb
mov
xchg
imul
leave
mov
ds
dec
inc
sub
outsl
orb
jle
jb
fldt
sti
push
xor
jecxz
gs
xchg
mov
mov
in
sbbb
imul
js
and
inc
add
je
popa
test
or
and
fsts
hlt
push
adc
mov
mov
jmp
and
inc
or
outsl
enter
sub
inc
nop
fnstenv
aas
dec
push
nop
inc
push
bound
push
nop
inc
mov
push
nop
lods
gs
push
nop
inc
push
data16
and
enter
push
sub
dec
pop
enter
insb
imul
enter
enter
lods
insl
int3
pop
enter
in
outsl
nop
add
and
jo
nop
add
sub
dec
add
nop
add
nop
add
nop
jae
je
nop
add
lods
jne
add
nop
add
enter
js
xor
jb
jns
add
add
insb
enter
cmp
lods
cmp
add
add
pop
or
cmp
in
cmp
dec
add
in
das
insb
in
cmp
xor
lods
xor
add
in
xor
xor
aaa
xor
sub
dec
sbbb
aaa
insb
jb
sbb
cmp
lods
inc
int3
sbbb
inc
in
sbb
jb
or
inc
push
cmp
sub
dec
inc
push
cmp
insb
cmp
cmp
dec
push
cmp
lods
dec
int3
inc
push
cmp
in
or
dec
or
dec
xchg
xchg
dec
and
sbb
xchg
mov
sbb
xchg
and
nop
xchg
push
nop
inc
sub
mov
push
nop
dec
push
pushf
xor
and
mov
subl
cwtl
test
out
push
nop
hlt
xchg
jl
shrl
lods
dec
cmp
or
dec
dec
xchg
loopne
es
or
rcrl
movsb
cmp
nop
fwait
insl
mov
add
cmp
in
xchg
pop
push
adc
adc
loopne
sahf
cbtw
sbb
sbb
mov
repnz
adc
and
and
mov
dec
sub
cmp
mov
and
repnz
mov
repnz
repnz
mov
dec
mov
dec
dec
mov
aaa
push
leave
xchg
cmp
mov
pop
mov
cmp
mov
inc
ds
in
sbb
aas
jo
sbb
mov
jl
dec
fiaddl
inc
shll
movsb
xor
test
test
mov
es
movsb
cwtl
mov
and
dec
pushf
mov
xchg
enter
dec
push
cltd
movsb
call
sub
and
cmp
inc
movsl
pop
sub
insl
jmp
aas
and
int
jne
or
out
stc
popf
xor
outsb
add
dec
and
shll
cmp
arpl
or
fnstenv
or
nop
jge
dec
popa
outsb
pop
inc
bound
dec
popa
jb
shrl
stc
inc
jo
jns
jne
pop
inc
jbe,pt
insb
pop
jne
pop
push
gs
dec
ds
arpl
jbe
in
xor
pop
jne
js,pn
int3
or
jb
addr16
aaa
arpl
imul
add
insb
adcl
push
aas
add
dec
cmpl
pop
xor
bound
mov
cmpl
outsl
and
inc
sbb
push
mov
outsl
daa
daa
cwtl
adc
push
fisubrl
jo
psubw
push
gs
sar
mov
dec
push
cmp
fmulp
ja
pop
mov
and
fcmovnu
or
jb
fucomip
int
arpl
mov
test
daa
ret
das
pop
dec
imul
cmp
hlt
lods
fbstp
aaa
fs
cwtl
int3
push
inc
sub
rorb
pushl
test
mov
fsubl
sub
xor
andl
out
adc
repnz
mov
cmp
popl
lea
mov
stc
add
mov
push
test
xlat
dec
lock
or
inc
jo
outsl
sub
jb
aad
xchg
push
cwtl
ffree
dec
mov
adc
mov
push
xor
xor
and
or
inc
push
dec
push
pop
sub
mov
lods
mov
mov
push
ss
inc
inc
incl
jg
daa
ljmp
test
sbb
sbb
movsb
shll
fldenv
int3
add
mov
mov
xchg
shll
in
ret
xchg
cmpsb
adcl
mov
pop
in
mov
xor
or
clc
pop
sub
pop
sub
movsl
js
int
add
pop
clc
das
scas
pop
repnz
cmpsl
sbb
rolb
xor
jl
mov
data16
outsl
bound
push
or
inc
and
adcb
and
and
andl
inc
hlt
cmpb
and
mov
xor
add
adc
mov
les
inc
fsin
push
adc
pop
mov
sub
push
xor
fsubs
xchg
adc
imul
adc
aam
mov
cmp
sbb
mov
hlt
mov
pusha
gs
push
rcll
int3
adc
sbb
xchg
addr16
enter
inc
stos
mov
inc
les
mov
dec
and
and
or
into
push
icebp
jne
inc
dec
push
cmovbe
xchg
push
sub
and
jae
xor
cmpl
popa
inc
inc
xor
mov
aas
sub
xchg
sbbl
jg
inc
leave
in
xor
add
push
cmovle
sub
sbb
push
sub
adc
pushf
pushf
pushf
fmull
adc
adc
pushf
pushf
pushf
pushf
push
pop
sbb
pushf
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
pushf
push
pop
add
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
push
pop
or
pushf
pushf
pushf
pushf
or
or
inc
sahf
pushf
pushf
push
icebp
dec
dec
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
shlb
ret
je
cmp
jb
pop
xor
pop
dec
push
inc
incb
or
add
leave
cwtl
call
in
or
push
push
je
nop
clc
movl
dec
dec
cmp
inc
scas
ret
add
leave
mov
dec
xchg
fs
insb
popf
or
sbb
xchg
cs
sbb
inc
cs
jmp
mov
je
pop
xchg
jne
das
sub
iret
adc
xchg
adc
dec
js
pop
dec
add
push
popa
mov
leave
jnp
testl
or
pop
and
add
or
sub
push
sub
loop
in
cld
adc
jmp
rorl
mov
ss
dec
iret
fs
jmp
push
sbb
lret
push
jbe
mov
outsb
xlat
popf
mov
fiadds
xor
inc
dec
adc
xor
and
sub
push
adc
xchg
outsb
xchg
insb
cmp
nop
pop
in
or
mov
rcl
sub
int3
lock
fnsave
push
adc
adc
push
ds
bnd
in
jne
test
cmp
jg
imul
add
js
jp
ja
pusha
pusha
bound
fistl
lods
inc
inc
add
jle
dec
sub
nop
js
insb
inc
jbe
and
shrb
aam
pop
pop
push
push
xor
stc
cmp
loope
cmpsb
gs
pop
mov
add
pop
cmp
testl
or
movsb
ret
sub
dec
and
dec
xor
adc
cmp
dec
je
add
xor
inc
lea
push
pop
sub
mov
test
cmp
sbb
push
jae
mov
movsl
push
seto
mov
jmp
adc
inc
je
add
add
or
mov
or
xor
and
stc
rol
pop
outsb
xor
pmaxub
es
or
fsubl
inc
fs
push
inc
dec
es
fnstsw
mov
push
mov
ret
js
add
mov
xchg
jae
fstl
rcrl
lcall
ss
mov
mov
push
mov
mov
addr16
pop
enter
sbb
mov
jge
dec
jge
js
or
adc
jge
mov
test
dec
pop
jne
pop
mov
out
add
lcall
ret
push
pop
push
sub
add
jl
add
or
push
test
ss
adc
mov
jae
push
jo
dec
fsubl
repnz
fs
add
dec
mov
add
and
jo,pn
jae
inc
dec
add
and
mov
outsl
xor
push
xor
push
push
push
pop
push
adc
xor
adc
xchg
lods
jmp
jae
in
dec
nopl
cs
push
and
and
cs
xchg
insl
shll
cs
addl
bnd
cwtl
inc
add
pop
xor
inc
fisttps
in
inc
orb
push
jns
inc
ja
xchg
mov
js
dec
les
push
and
inc
add
adc
icebp
dec
push
jbe
sbb
sub
sub
rorb
jmp
sbb
fisttps
mov
mov
fdivp
dec
add
outsl
bound
imul
xlat
xor
xor
outsl
lret
and
and
push
ja
or
cmp
add
js
mov
dec
push
jns
adc
test
cmp
dec
pop
xorb
dec
push
push
jne
inc
or
pop
push
add
push
or
mov
push
les
dec
add
test
cmp
or
out
shlb
test
jge
jbe
lock
aad
add
lcall
lock
repnz
lods
or
js
mov
mov
jle
lea
fwait
ret
fistpll
mov
fstpt
mov
data16
adc
mov
leave
inc
scas
push
xor
cmpsl
cmpsb
add
add
mov
movsb
push
popf
cmc
and
shlb
dec
push
mov
sbb
adc
ret
clc
cmp
mov
sub
or
xchg
cltd
aas
dec
add
and
mov
popa
or
and
or
cmp
call
push
inc
movsb
loopne
add
xchg
pop
add
sbb
jl
xchg
and
lock
cld
push
add
mov
imul
xlat
xchg
jl
andl
xor
cmp
into
sbb
and
les
pop
add
inc
inc
lock
and
or
cmc
je
cmp
adc
and
jmp
sbb
pop
movsb
pushf
ret
push
inc
or
push
mov
or
jp
cmp
ja
jne
push
xor
sub
adc
cmpl
aas
pop
or
imul
ljmp
xor
cmp
jbe
add
aas
popf
rclb
add
sbb
or
sbb
adc
or
rorb
jne
flds
repnz
std
insb
xchg
cmp
cmp
push
inc
jbe
cmp
mov
mov
jb
push
movl
sbb
dec
unpckhps
mov
js
fs
pop
mov
jno
mov
aaa
push
icebp
in
ret
xor
and
sbb
into
dec
arpl
les
sbb
jb
adc
adc
movb
mov
adc
pop
mov
or
dec
mov
cmp
mov
in
dec
cmpsl
sar
dec
or
sbb
add
sbb
aam
mov
jp
mov
pop
jb
cli
cmp
je
sub
add
mov
mov
push
or
ss
shrb
dec
jns
mov
out
sub
ja
mov
jae
jge
fiaddl
xchg
mov
hlt
or
sbbb
or
pusha
xchg
icebp
mov
repz
inc
pop
jne
pop
dec
clc
sub
or
js,pt
sar
shrb
adc
or
add
shlb
dec
mov
cmpsl
add
sarl
cmpsl
dec
int3
lods
jo
sbb
dec
mov
cmpsl
movl
jne
and
mov
push
inc
add
mov
xchg
mov
jmp
xor
ret
idivl
rcrl
add
add
mov
jle
pop
int3
and
cmp
jne
dec
nop
addb
lahf
push
add
ret
inc
add
sarl
outsb
push
jle
jp
add
adc
cmp
sbb
dec
dec
jne
mov
xor
lods
dec
roll
cmp
mov
js
add
mov
jl
movsb
loopne
es
jle
pushl
scas
test
or
push
sub
ret
add
sbb
mov
inc
add
pop
mov
inc
push
movsb
cmp
mov
inc
scas
pushf
pushf
mov
mov
xor
pop
cmpb
ror
add
xchg
cwtl
add
xchg
add
cli
xchg
nop
les
add
push
sub
mov
mov
xchg
fmuls
sbb
inc
test
push
insb
in
andl
enter
push
mov
xchg
mov
lods
push
loopne
fwait
or
js
and
mov
adc
rorb
sbb
push
aaa
stos
jb
mov
pusha
push
loopne
scas
sbb
and
push
outsb
imul
add
push
inc
stos
add
sahf
rcrl
inc
push
je
inc
in
lods
addr16
test
pop
cmp
cwtl
mov
outsb
cmc
pop
int3
adc
aaa
shl
add
fbld
push
pop
xor
mov
mov
add
pop
inc
jl
in
add
mov
call
adcl
ret
outsl
enter
repnz
add
test
jo
cmp
test
rcll
popa
mov
adc
dec
mov
jno
aam
sbb
adc
jle
adc
insl
cmp
fsts
xchg
hlt
movsl
daa
popa
and
ss
adc
or
cmp
add
jno
pusha
sarl
or
adc
out
mov
dec
push
inc
mov
and
mov
mov
or
push
sub
in
xor
movsl
xchg
add
xchg
bound
fcmove
push
push
fs
pop
aaa
inc
les
pop
ss
dec
inc
adc
push
push
and
arpl
and
and
arpl
and
fs
adc
mov
cmp
pop
adc
fdivl
sbb
add
or
cmpsb
mov
xchg
cs
add
mov
inc
mov
dec
push
push
add
rolb
jp
push
xchg
sti
das
sbb
sub
pop
ror
sbb
xchg
xchg
xchg
mov
bound
arpl
pop
cs
adc
ret
adcl
stc
and
dec
clc
dec
arpl
or
roll
or
push
jo
repnz
lea
adc
ss
in
adc
adc
mov
movsl
sbb
lds
inc
add
pop
hlt
sub
adc
pop
mov
push
xor
adc
addr16
mov
mov
dec
sub
imul
sub
mov
mull
pop
jo
and
data16
add
sub
or
push
push
jl
pop
mov
cmp
cmp
out
inc
or
movsb
adc
push
mov
sub
lahf
xchg
adcb
pushf
mov
xor
inc
inc
pop
adc
and
outsl
data16
sbb
cs
dec
push
inc
scas
scas
je
addr16
jp
add
sub
shlb
dec
fs
add
push
fistpl
and
or
fsts
fimull
cwtl
cld
sbb
andl
enter
fadds
cwtl
xchg
in
inc
movsb
add
clc
sub
js
les
sub
push
adc
addl
ret
push
add
xor
dec
dec
xorb
add
sbb
jp
lahf
sbb
sub
rcrb
insb
add
and
jae
add
adc
dec
jae
adc
aas
xchg
sub
push
jae
cmp
gs
lods
fcompl
js
lods
or
sbb
xchg
addb
lock
inc
sbb
push
pop
add
cld
jae
je
bound
iret
mov
and
cmc
in
and
mov
inc
inc
adc
dec
or
popa
lock
jns
add
push
jmp
sbb
pop
push
ja
dec
sub
sti
jae
push
push
push
adc
pop
dec
hlt
jno
sbb
xor
mov
cmpsl
inc
xchg
pop
cmp
movb
mov
in
jle
cmpsl
cmp
js
push
cmp
daa
or
xor
or
clc
jmp
mov
stos
sub
add
pop
xchg
xor
mov
rorl
mov
dec
mov
mov
push
in
xchg
ljmp
adc
add
jo
or
jge
mov
ret
add
lods
adc
adc
out
outsl
dec
and
mov
bound
xchg
lret
outsl
dec
push
pop
dec
movsb
fwait
subb
push
lahf
leave
ret
sub
cs
inc
sub
loopne
jnp
push
fildll
imul
frstor
pop
or
in
inc
addr16
gs
and
cmp
push
mov
sub
push
xchg
fldl
pusha
adc
outsl
pop
mov
push
aaa
fs
mov
fs
mov
push
insb
add
cmp
push
sub
fcomps
push
xchg
sbb
sbb
or
adc
shlb
dec
inc
add
dec
mov
fcmovb
outsb
shlb
je
adc
pushf
dec
jmp
or
and
js
xorl
push
fs
jl
jae
bound
inc
pop
je
cmpsl
addb
jb
jbe
ja
pushf
movsb
jb
push
in
dec
test
lods
cld
lock
push
mov
mov
test
push
xchg
mov
insb
xor
nop
xchg
lea
je
xchg
test
sbb
insb
outsl
xchg
and
pop
enter
movsb
outsl
test
pop
jb
or
jne
fs
push
loopne
aas
out
pushf
loopne
pop
or
inc
pushf
sub
outsl
mov
inc
test
mov
jns
movsb
jg
pop
sub
sub
lret
test
jo
ja
imul
dec
les
or
xor
mov
add
mov
adc
cmp
mov
outsl
movsl
icebp
sbb
pushf
sbb
mov
ja
je
in
xchg
pop
push
jmp
dec
dec
lods
mov
loope
in
and
mov
cmp
inc
les
jb
or
dec
jae
test
and
je
call
mov
enter
bound
addr16
push
pop
mov
roll
int3
jl
int3
sbb
adc
lea
shlb
add
insl
push
scas
jp
push
mov
cmpsl
inc
jae
dec
repnz
test
push
push
inc
jns
fadds
push
shlb
in
xor
test
fcoml
lahf
push
ja
sub
add
loopne
xchg
inc
cs
loopne
push
xchg
fldl
in
dec
je
popa
jne
dec
out
mov
dec
mov
movsb
and
dec
and
adc
scas
sbb
jb
push
add
in
in
aaa
cmp
pop
in
addr16
ror
push
gs
gs
mov
jne
jns
test
pop
adc
negb
hlt
xlat
insb
jne
mov
pop
pop
jp
or
roll
ljmp
mov
clc
or
pop
adc
pop
cld
call
and
or
xchg
daa
add
dec
push
cmpb
push
scas
mov
add
jb
inc
ds
push
push
testl
lret
jbe
or
dec
sbb
adc
jne
push
mov
inc
xchg
lret
push
xor
nop
xchg
adc
adc
add
adc
add
push
movsl
push
ss
ja
mov
pop
add
es
lret
sbb
ja
test
inc
xchg
in
mov
mov
nop
add
and
cltd
inc
mov
push
aaa
xor
dec
adc
xor
int3
js
sub
and
popa
jo
gs
sbb
in
pop
adc
sub
add
dec
push
cmpl
xor
sub
lea
ja
xchg
sbb
xor
or
imul
dec
sub
sub
test
in
pop
cmp
aad
xchg
dec
dec
cmpsl
cmp
pop
cmpsb
jp
cmp
or
mov
dec
lods
data16
inc
je
dec
xor
leave
add
jb
mov
inc
add
pop
jg
dec
mov
jnp
pop
push
jmp
dec
xor
mov
or
push
adc
push
arpl
fs
nop
jnp
dec
mov
or
les
shrl
and
push
push
aam
enter
mov
daa
adc
push
dec
leave
add
lods
jl
mov
pop
dec
jl
orl
addr16
pusha
and
jl
fabs
jbe
or
daa
fdivrs
xchg
add
and
push
dec
sbb
iret
sbb
insb
push
inc
push
jo
add
push
jo
add
hlt
jge
xchg
es
jb
push
inc
xchg
xor
ret
pushl
inc
sub
js
in
andl
adc
mov
inc
das
dec
dec
movsl
push
sbb
adc
sbbb
loopne
adc
addb
sub
pop
xchg
xchg
addl
cmpsl
inc
xchg
mov
push
mov
les
jb
inc
mov
nop
pop
dec
test
or
nop
ja
dec
in
adcl
xchg
xchg
push
inc
es
push
xchg
push
xor
cwtl
xor
test
pushf
stc
xchg
pushf
xchg
adc
decb
dec
gs
inc
mov
cmp
push
and
jl
sub
pop
enter
mov
jg
add
movsb
fwait
add
lods
ja
enter
lods
pop
pop
fwait
dec
add
jns
jmp
pop
in
jg
push
inc
push
cmp
test
sub
mov
inc
mov
int3
shrb
jge
and
add
mov
pop
fists
call
nop
sub
push
les
cltd
inc
sub
inc
add
loopne
xchg
mov
sbb
xchg
sbb
or
js
push
lcall
jl
int3
sub
push
shlb
dec
cs
rcrb
pop
enter
inc
mov
ret
and
jns
lahf
aad
push
lds
test
fcoms
inc
sub
xchg
dec
cs
pop
loopne
nop
dec
ds
xchg
push
push
cmpsl
push
xchg
and
cld
in
fs
call
cltd
nop
call
enter
xchg
pop
or
lcall
rol
addr16
xchg
fadds
data16
insl
insb
loopne
test
adc
add
cwtl
mov
adc
cmpsl
repnz
imul
cmp
pop
push
xchg
pop
sarb
or
pusha
dec
fs
mov
mov
out
repnz
ds
je
js
cmpsl
push
sub
adc
sub
mov
stc
fsub
mov
dec
adc
cmpsl
cwtl
js
mov
cmp
iret
in
movsb
sub
pusha
cs
in
lods
cwtl
mov
mov
in
jl
jno
dec
mov
sarb
enter
push
rcl
pop
sahf
lret
nop
aam
fmuls
adc
cs
fdivl
shl
cs
in
je
fs
fistl
test
cld
hlt
inc
jne
sar
fsub
jl
mov
add
clc
pop
sahf
lret
inc
jbe
je
ds
out
mov
ja
out
push
sbb
repnz
adc
push
sub
mov
in
and
mov
pusha
cmp
in
inc
inc
jp
adcb
dec
or
iret
in
cmp
push
pushf
pop
aam
test
jl
pop
jae
cs
fs
in
jns
dec
in
jge
je
mov
js
adc
adc
test
hlt
mov
cs
in
mov
test
push
jns
mov
jae
cs
test
lods
shlb
adc
push
stc
ja,pt
dec
adc
ficompl
les
enter
adc
out
push
ds
test
mov
repnz
ds
loopne
xor
loopne
push
ds
out
enter
in
dec
pushf
out
push
lock
mov
stc
or
and
xor
xor
mov
push
and
add
sbb
xchg
sub
movsl
add
bound
cmpsl
mov
adc
mov
mov
inc
xchg
inc
and
ss
sub
loopne
dec
mov
shlb
je
stos
imul
adcb
xchg
insl
mov
sbb
xchg
inc
mov
mov
addb
xor
mov
mov
inc
imul
and
test
cmpsl
dec
adc
dec
jae
into
adc
xchg
je
hlt
push
outsl
rolb
and
push
in
push
sbb
jae
xor
pop
and
outsl
cmp
push
jl
add
xor
shll
call
mov
lock
cmp
ret
out
test
or
jbe,pt
shlb
scas
pop
and
adc
lods
push
jge
fidivl
xchg
mov
scas
rolb
jae
or
xor
push
adc
addb
or
sbb
pop
out
adc
add
xor
jno
sbb
sbbl
fildll
mov
fimull
ja
sti
sub
cmp
mov
sub
ss
repz
push
loop
iret
pusha
outsb
mov
dec
mov
mov
mov
mov
xor
loopne
daa
mov
out
and
jge
mov
or
xor
jb
jb
aam
outsl
push
jns
dec
add
mov
je
or
adc
or
or
adc
inc
popf
jb
dec
xor
movsb
or
jb,pn
pop
inc
pop
mov
test
or
fs
pop
enter
push
les
pop
icebp
add
adc
jl
xchg
jae
or
mov
jo
cmp
jb
pusha
push
add
mov
xor
aam
xor
test
dec
lds
enter
popl
mov
or
mov
and
into
push
or
out
push
inc
inc
xchg
fadd
rorb
cmc
xor
push
jnp
fwait
inc
pushf
sarb
imul
test
cld
imul
sahf
push
xchg
popf
les
rcr
pop
xchg
xchg
addr16
arpl
shld
repnz
push
inc
push
pushf
xchg
push
and
sub
mov
sub
mov
sbb
mov
ss
test
push
into
fs
add
xchg
aam
adc
sbb
sbbl
aam
fcoms
mov
in
fcmovne
cmc
rolb
cmp
iret
inc
xchg
aas
dec
push
sub
outsb
jae
jo
add
or
into
xor
pop
pop
jno
sub
stos
loop
xchg
or
mov
jge
test
inc
push
push
adc
fistpll
pushl
cmp
xor
mov
lock
or
in
in
add
sbb
pop
xor
mov
inc
shlb
icebp
adc
clc
pop
adc
jle
nop
movsl
adcl
mov
inc
add
shlb
jno
or
adc
filds
cmp
pushf
mov
xchg
xchg
add
add
cs
lock
mov
xor
leave
adc
xchg
push
lock
add
out
out
push
ret
in
clc
sub
add
cwtl
cmp
or
add
hlt
adc
and
lock
in
mov
jmp
adc
test
xchg
mov
aas
lods
inc
lea
sti
movsl
add
adc
in
push
sbb
negl
sbb
lahf
enter
cld
jge
xchg
inc
fisubl
movsb
ret
sbb
scas
cmpsl
mov
mov
pop
hlt
inc
mov
test
mov
je
jl
cmp
jle
add
cmp
cmp
or
dec
jne
data16
inc
add
scas
test
ficoms
mov
mov
or
into
iret
rclb
xchg
adc
mov
mov
ss
xor
xchg
mov
ss
sbb
jb
mov
push
dec
clc
dec
clc
xchg
and
jb
roll
cmp
inc
adc
test
or
nop
push
mov
stc
addr16
ja
rcrb
cs
daa
repnz
add
pop
unpcklps
rolb
inc
pop
imul
pushf
lods
mov
iret
loopne
add
out
xor
out
sahf
jns
fwait
lods
mov
jns
in
add
repz
sahf
clc
mov
out
push
push
add
pusha
mov
xchg
mov
sbb
mov
test
pop
cmp
shrb
mov
mov
mov
pop
in
nop
pop
les
mov
and
inc
rcll
inc
xor
push
mov
hlt
or
inc
sbb
inc
xchg
mov
push
test
sbb
mov
xor
stc
or
sahf
jmp
cmp
mov
cmpl
mov
in
cmp
mov
ss
jns
cmp
sub
jns
or
inc
ret
sbb
mov
jne
dec
cmp
jno
add
xchg
outsb
push
call
add
fwait
stos
adc
shlb
dec
stc
imul
insb
fst
add
xchg
std
mov
icebp
pop
incl
mov
mov
add
imul
or
push
pusha
pushw
call
dec
push
fisubl
cld
jb
test
dec
fsubs
xchg
mov
rorl
push
dec
xor
popf
jge
notb
out
lret
test
mov
aad
test
mov
lret
and
repz
and
mov
pusha
or
fdivs
cmp
lahf
mov
and
xorl
sbb
aam
dec
xlat
add
leave
addr16
aaa
out
push
push
lret
mov
mov
bound
or
or
pop
or
or
lods
iret
or
dec
cmc
inc
ljmp
dec
lea
adc
xor
mov
add
adc
shr
sub
sub
and
out
inc
cld
or
shll
scas
or
jecxz
push
div
pop
push
mov
dec
push
sarl
clc
and
test
in
adc
je
loope
jg
sbb
xchg
out
push
in
in
pop
insb
sub
adc
sub
mov
xlat
cmpsb
inc
and
test
rclb
jbe
out
sarl
lcall
scas
stc
adc
push
ret
inc
add
cmp
jl
lods
or
mov
in
inc
add
test
mov
dec
mov
or
push
push
and
movsb
insl
out
mov
pop
dec
mov
fiadds
push
xchg
movsl
mov
pushaw
lods
sbb
mov
push
pop
mov
in
push
scas
fstpl
js
scas
stos
pop
outsb
negl
das
push
shlb
push
push
xchg
jge
faddl
pop
test
pop
test
adcb
mov
sahf
fdiv
cmpsb
and
out
insb
rcrl
into
data16
js
mov
dec
push
xorl
cmp
scas
scas
lock
ss
insl
xchg
pop
nop
push
xchg
in
cwtl
outsl
add
movsb
or
add
mov
jb
push
and
jnp
sub
insb
cmp
xchg
pop
or
dec
jo
inc
movb
and
fdivs
fdiv
data16
dec
insb
imul
pop
sub
pop
push
mov
push
mov
call
pop
call
loopne
mov
pop
enter
mov
or
pusha
cld
mov
dec
adcl
cmp
js
jp
push
add
cmpsb
rcrb
sarb
xor
jae
je
mov
inc
jecxz
aam
std
aaa
inc
fnsave
pop
xchg
ret
data16
xlat
sbb
fisubl
mov
xorb
lock
push
rorl
add
adc
push
mov
jns
push
gs
aam
xor
fcomps
or
cmp
test
data16
add
add
out
insb
sbb
nop
mov
jle
or
aam
sahf
andl
pop
loope
sub
sahf
cmp
mov
dec
sub
outsb
push
xor
mov
jae
insl
cmp
mov
mov
add
mov
lahf
pop
rorb
and
rorb
mov
pop
inc
mov
leave
cwtl
sbb
movsb
pop
fdivrs
xor
mov
lods
fidivrl
jge
loop
jmp
push
mov
loopne
mov
xlat
push
mov
xchg
cmp
or
pop
ljmp
fcoml
aad
and
pusha
pop
test
or
imul
rorb
aam
pop
mov
cli
add
mov
jnp
mov
ss
rol
mov
or
xor
or
mov
add
jecxz
and
and
notb
enter
adc
adcl
or
or
int3
push
adc
jns
test
jmp
lods
sbb
push
stc
sbb
fdivs
xchg
dec
rorb
xor
dec
xchg
cmp
sbb
sbb
mov
adc
insb
pop
add
jno
js
loope
push
dec
out
in
lock
test
shrl
arpl
mov
sub
and
adc
out
or
or
pusha
pop
inc
je
sarl
mov
add
std
sarb
mov
ljmp
cmp
add
mov
xchg
mov
jmp
inc
pop
push
clc
pusha
enter
insb
xchg
enter
mov
cmp
test
add
inc
add
adc
xchg
orl
adc
leave
pop
jo
sbb
xor
push
lds
push
add
add
ret
in
xchg
lea
mov
rol
mov
pusha
cmpsb
xchg
jg
sub
add
push
stos
bound
movsb
inc
xlat
push
insl
or
mov
iret
nop
pop
js
adc
stc
test
mov
cwtl
push
nop
sub
inc
mov
jge
outsb
or
loope
inc
push
int
mov
cmp
dec
and
pop
test
or
fists
iret
insb
cmp
add
xor
sub
push
gs
add
lret
inc
nop
or
sub
fnstcw
dec
mov
jg
stos
cmp
in
dec
bound
lcall
sub
jl
push
andl
cmp
stos
and
mov
movsb
xchg
adc
ja
add
jb
add
js
imulb
pop
pop
cmpl
xor
mov
dec
jp
xchg
stos
inc
nop
movsb
rol
stos
mov
aaa
test
fstl
mov
push
shr
push
aam
pop
xor
xchg
mov
jno
aam
and
mov
popa
sbb
cmp
and
inc
nop
leave
hlt
es
loop
or
or
push
inc
sarb
orl
pop
sub
mov
push
dec
sbb
xor
loopne
cli
jge
das
fcoml
adc
cmp
lods
pop
cmpsb
and
jb
test
jnp
lods
ss
mov
stos
daa
lcall
dec
clc
std
xlat
xor
or
popa
pushf
rclb
enter
addr16
push
xor
cmpsb
jp
adc
fistpl
xor
inc
sar
pop
add
adc
in
mov
mov
lods
push
inc
jmp
rorl
sbb
adc
shl
or
fists
test
and
inc
or
adc
in
cmp
push
fmull
inc
pop
outsb
rcrb
clc
out
cmp
jmp
call
fldt
loop
xchg
test
add
cmp
fsubs
bound
push
mov
pusha
cmp
push
xchg
xchg
xchg
jns
fidivrl
xor
es
or
dec
inc
jl
add
mov
mov
aam
and
aas
outsl
inc
out
and
pop
orb
mov
in
mov
lret
sbb
adc
lock
or
adc
add
mov
iret
test
xchg
and
or
sbb
sbb
xlat
popa
addl
adc
scas
dec
dec
repnz
xor
jns
insb
xchg
hlt
pop
hlt
fdivl
pop
int
or
movsb
lods
xor
pop
or
repz
cwtl
or
push
in
push
lcall
inc
push
loopne
test
nop
jmp
sahf
cmpsb
mov
mov
and
insl
dec
insl
inc
inc
rorb
mov
stc
addr16
ret
and
add
jne
repz
xor
jb
add
pop
cli
dec
mov
outsl
jp
xrelease
cld
push
pop
xchg
or
sbbb
rcll
test
nop
sbb
sub
clc
push
mov
sbb
repnz
fldl
xchg
or
dec
sub
inc
aas
loope
add
inc
push
movsl
cwtl
mov
adc
push
mov
stos
or
xchg
mov
pop
loope
outsb
ret
mov
mov
dec
or
ficoms
call
je
cmp
lea
out
cli
ds
shlb
mov
rcl
mov
pop
js
add
mov
stc
xchg
pop
add
push
ret
lock
rclb
or
xchg
ja
add
jl
push
push
dec
pusha
jbe
mov
sbb
test
push
adc
je
movsb
push
aas
in
mov
or
add
and
xchg
call
pop
adc
movb
sahf
int
loopne
mov
add
add
cmc
sub
cwtl
int3
cmp
adc
fcmovne
pop
and
xchg
and
cmp
xchg
iret
gs
add
loop
mov
lea
mov
sbb
xchg
mov
sahf
or
adc
xor
imul
pop
sarb
loope
push
adc
push
push
mov
xor
dec
pop
pop
subb
mov
cmp
loopne
iret
jb
inc
cmp
push
add
inc
cmpsl
jns
mov
push
dec
or
xor
mov
push
insl
mov
test
loopew
xchg
mov
fsubs
dec
je
mov
or
pusha
adc
ss
or
add
inc
add
xor
iret
mov
adc
imul
pop
pop
enter
loopne
lock
stc
out
test
sbb
jne
push
test
inc
mov
hlt
mov
push
enter
mov
cmpsl
out
mov
push
test
ss
orl
rorl
mov
shlb
movsl
in
sub
add
nop
jbe
fsubrl
and
or
fbstp
add
test
xchg
push
fdivrs
mov
inc
cmp
pop
mov
mov
sub
xchg
test
xor
fs
outsb
movsl
and
rcr
repz
xchg
ficomps
push
repnz
push
rcrb
sbb
aad
and
setno
mov
or
test
sub
sub
sarb
clc
fwait
and
jp
pop
push
jne
add
jle
dec
jne
or
jge
push
inc
push
or
add
pop
ljmp
int
mov
jne
ljmp
pop
xorl
dec
and
add
push
mov
shl
push
mov
adc
or
out
test
lea
add
or
jnp
fisubrs
test
andb
testb
or
fists
sbb
or
pop
cmpsl
and
push
xor
jno
cmp
icebp
nop
or
add
jmp
lods
into
daa
and
push
xchg
lods
mov
inc
mov
add
cmp
push
mov
outsl
jno
popa
xor
adc
or
into
adcb
and
stos
cmp
dec
jmp
add
in
adc
jb
sub
push
mov
xchg
shrb
mov
test
lea
in
dec
add
shll
out
xor
adc
lret
add
cmpb
xor
mov
add
dec
add
mov
jmp
movb
xor
ret
mov
inc
loope
insl
sub
add
dec
les
xor
add
add
or
push
jecxz
mov
bound
mov
aam
aad
mov
pop
roll
or
sbb
add
pusha
rcrl
push
cmp
mov
and
push
sub
ret
fsubl
loopne
bound
adc
pop
nop
aaa
cmpsl
mov
cmpsb
shrb
jle
scas
notb
imul
adc
enter
jns
xchg
cmp
cli
aaa
mov
jnp
adc
pop
fs
dec
add
add
icebp
xorb
jb
stos
out
mov
push
lret
adc
insb
mov
lods
cltd
fsub
inc
clc
pop
push
push
mov
xchg
sbb
mov
lods
jo
pop
pop
sbb
sub
sbb
insl
jge
cld
inc
pop
das
into
cmp
pop
inc
dec
loope
push
imul
and
cs
je
rcrb
out
or
and
pusha
inc
sbb
push
in
leave
jne
xorb
dec
adc
mov
and
mov
or
adc
or
loopne
int3
mov
push
rol
mov
pop
in
pusha
rcrl
push
sbbb
les
lods
jne
dec
and
mov
mov
adc
adc
push
push
scas
gs
loop
xor
add
cmp
mov
sar
loope,pn
cmpsb
pop
je
mov
add
imul
cmp
jns
inc
ret
push
xor
xor
push
out
std
addr16
arpl
inc
lahf
jbe
and
es
inc
enter
scas
aaa
or
sahf
fs
rol
fcmovb
stos
fadd
pop
and
les
faddl
movl
ret
push
inc
or
movsl
test
sbb
stos
or
xchg
xor
fnstenv
cmp
add
adc
gs
xor
aad
lahf
or
or
les
fdivrl
aaa
in
push
inc
add
and
or
dec
add
or
es
xor
rcll
pop
ljmp
add
cmp
or
push
dec
pop
movb
and
cmc
nop
ss
cli
jle
and
inc
cmpsb
movsb
fninit
jae
hlt
xor
fadd
inc
or
fcompl
jg
lock
cmpsb
fs
in
inc
loopne
adc
jge
pushf
mov
fs
gs
lods
lret
fsubrs
test
adc
xchg
nop
adc
lret
sub
lcall
pusha
xchg
movsl
dec
enter
xor
fildl
addl
fdivs
jns
int
arpl
inc
int
rcrb
cmc
cs
inc
shlb
clts
xor
pushf
pop
pop
push
sub
or
rcrl
sbb
push
jb
push
lods
test
out
sub
sub
insl
insl
add
pop
insb
mov
jbe
mov
jmp
push
hlt
and
or
pop
loopne
addl
subb
push
in
and
scas
mov
add
in
sbb
int
add
loopne
daa
enter
sub
push
int
and
cmp
mov
xchg
int
push
inc
and
or
xchg
int3
inc
lea
fisubl
lods
inc
mov
push
dec
popa
mov
ret
or
dec
sahf
mov
xor
xchg
jns
in
mov
daa
xor
pop
sbb
shlb
iret
sub
xchg
xlat
add
add
int
sbb
lret
pushl
adc
lsl
jge
cltd
sbb
xor
js
gs
inc
adc
and
dec
add
xchg
pop
mov
mov
add
je
into
xor
push
lret
pusha
shlb
cmpsl
xchg
or
pop
cmpsl
ret
pusha
stos
pusha
inc
jne
repz
add
shll
int
sbb
adc
or
mov
adc
or
ret
stc
jb
xchg
sbb
aaa
inc
inc
and
or
mov
and
jns
rdmsr
int
pop
sbb
loop
out
int
sub
xchg
pop
cmpl
js
mov
out
arpl
mov
clc
xor
or
dec
and
mov
adc
out
push
dec
push
mov
adc
int
into
test
into
repz
or
je
cmp
ss
or
lret
adc
sub
push
addr16
in
lcall
add
xor
push
dec
dec
inc
inc
dec
dec
dec
push
push
daa
xor
aaa
xor
xor
outsb
rorl
xchg
pop
filds
rorb
jo
dec
jg
repnz
xchg
add
int3
addl
iret
xchg
sahf
jo
mov
cmpl
ds
xchg
cmp
dec
fsubr
dec
je
xchg
push
and
xchg
xchg
shll
dec
cs
iret
sub
test
inc
in
xor
mov
push
jb
add
add
jl
mov
push
adc
or
pusha
push
lret
dec
icebp
and
jno
push
and
sub
push
data16
push
mov
movb
ljmp
mov
add
push
sub
sub
addr16
jp
inc
and
xor
in
fwait
mov
jne
add
cmp
inc
xchg
or
movsl
pop
scas
xor
adc
dec
cli
sub
pushf
ss
cli
insl
inc
mov
pop
es
dec
cwtl
adc
mov
ret
add
enter
rcrb
rcrb
xchg
ljmp
pop
enter
add
or
or
ds
mov
add
aaa
sbb
push
adc
inc
dec
push
shrb
test
pusha
add
mov
cmp
cmc
sub
out
and
mov
sub
not
push
fsts
xchg
rorl
aam
xor
or
aas
out
pop
repnz
shrl
mov
movsb
xchg
dec
fisubrl
add
xor
jb
sbb
std
addb
mov
inc
or
pushf
or
shrl
cmpsl
jl
or
test
roll
pop
add
adc
jl
xor
in
pop
xor
or
ret
add
add
push
xchg
push
test
pop
jbe
dec
sarb
and
push
jg
das
push
in
call
cmp
or
or
hlt
aad
in
test
inc
dec
xlat
xchg
push
out
cmpsl
pop
rorb
adc
js
rclb
shl
mov
ss
pop
xor
sbb
xor
adc
and
inc
xor
add
push
add
dec
cwtl
push
jb
add
jns
add
sub
cli
lds
mov
jmp
cmp
or
mov
mov
nop
orb
and
push
dec
inc
push
imul
sub
mov
fdivs
inc
adc
ret
or
pop
jge
cmp
xlat
mov
lds
lahf
test
push
repnz
mov
adc
je
cmp
movb
mov
inc
xor
js
jb
inc
in
lret
out
movsb
fdivrs
add
push
enter
je
repz
or
fisubrs
mov
add
pusha
pop
repnz
xchg
or
movhps
aaa
push
pop
cmp
pop
inc
jbe
mov
or
mov
sbb
jo
mov
or
cld
jns
adc
pop
inc
mov
roll
push
push
inc
out
and
or
and
or
bnd
dec
cmpsl
aam
inc
into
es
rcr
out
stos
clc
or
cs
ja
cmp
xorb
mov
adc
nop
or
outsb
or
push
mov
or
sub
adc
or
lret
add
sub
lcall
inc
ss
dec
insb
movl
inc
cmpsb
ret
add
mov
or
nop
and
aas
mov
cmp
test
in
add
fidivrl
out
fstpt
cmpsl
push
cld
or
addr16
pop
xor
pop
sub
adc
jo
pop
push
inc
add
cmpsb
mov
sub
jnp
pop
push
out
and
js
mov
mov
sbb
sub
lret
sub
pop
or
in
push
daa
add
shlb
and
add
mov
mov
out
inc
mov
sub
dec
inc
and
movsb
jne
lret
addr16
mov
push
xor
sub
inc
add
fmul
pop
lock
add
and
xor
in
cltd
adc
add
shl
sub
mov
rolb
inc
shll
divb
inc
push
push
rcrl
jae
lahf
or
movl
ja
or
inc
push
sar
cmp
pop
je
test
adc
test
outsb
inc
inc
frstor
jmp
lock
fnstcw
jl
pusha
add
mov
adc
out
ror
adc
sbb
jmp
lods
dec
jae
cmp
adcl
cmp
xor
cwtl
adc
pop
loop
test
ja
shr
dec
dec
subl
add
mov
call
negl
flds
setbe
or
popa
xlat
push
pusha
bound
xchg
xchg
pop
xor
push
lahf
out
sahf
push
mov
dec
clc
mov
nop
mov
movsl
stc
xor
dec
mov
mov
fstp
fwait
stos
fisubrs
add
and
js
cmp
stc
and
inc
cmpl
sbb
add
sub
sbb
sub
sub
imul
pop
push
pop
pop
add
mov
jns
xor
mov
rclb
bnd
sbbb
push
nop
cmp
lock
outsb
sub
lret
sub
and
and
xchg
jb
add
popa
rcr
and
add
aam
adc
lahf
dec
xor
xor
iret
mov
dec
cmp
pusha
sbb
cmp
lods
add
mov
shll
aaa
cmp
loopne
movb
in
add
sbb
into
cmp
movsl
stc
pop
sub
and
add
mov
pop
gs
adc
push
dec
or
and
inc
sbb
shll
aam
cmpxchg
xchg
inc
mov
test
xlat
movb
sahf
mov
pop
or
adc
xchg
push
push
cmp
dec
adc
lret
mov
inc
insb
addr16
mov
push
lret
adc
shrb
loop
xchg
mov
cmp
sbb
and
imul
sbb
adc
xor
bound
jle
cmp
or
leave
add
fistps
adc
in
inc
jge
sub
orb
xchg
and
addr16
dec
jle
data16
jns
in
mov
xchg
loopne
adc
cmp
xorb
fsubl
sahf
and
jo
sbb
add
cs
lret
fiadds
and
dec
sub
mov
or
mov
dec
sbb
sbb
and
jl
dec
or
mov
mov
and
push
inc
aad
mov
push
out
sbb
and
and
mov
jb
xor
mov
outsl
sub
jp
xchg
jnp
bound
enter
cld
mov
test
lods
dec
jecxz
sbb
inc
sub
mov
hlt
stos
mov
ja
int3
mov
insb
pop
push
mov
std
scas
push
rcll
jmp
cmp
adcb
sub
aas
push
jne
and
fadd
push
pop
xor
sub
jecxz
inc
push
xchg
rorb
dec
jmp
sub
iret
ret
movsl
inc
and
cmp
and
and
sub
xor
lea
push
in
mov
xor
mov
and
push
dec
mov
sub
pop
mov
xor
jl
sbb
sub
loopne
int3
mov
xlat
jg
pop
and
in
push
sub
js
addl
ret
adcb
mov
aaa
icebp
aas
cmpsb
sub
sub
jg
dec
mov
add
aam
lds
pusha
adc
ljmp
sub
fcmovu
mov
leave
xchg
movl
pop
ret
sbb
ljmp
sbb
aam
fldl
inc
popf
xchg
sub
movsl
or
cld
imul
push
xor
mov
je
sub
xorb
dec
mov
dec
and
outsb
and
not
rorb
rcl
dec
dec
dec
dec
aad
xlat
fmuls
dec
dec
fcmovnu
dec
dec
dec
dec
fstp
ffreep
dec
dec
dec
dec
rol
les
dec
dec
enter
dec
leave
lret
dec
dec
dec
dec
int
iret
mov
movsb
inc
dec
mov
xchg
hlt
push
adc
xlat
push
call
inc
add
mov
xchg
inc
xlat
aam
jge
je
lods
in
push
pushf
movsb
in
jmp
out
mov
push
mov
push
push
or
mov
and
push
push
fimull
xorl
pop
sbb
div
add
and
or
mov
add
fsubs
filds
or
sbb
ljmp
mov
push
xor
aas
shr
add
xor
inc
ds
dec
mov
mov
outsb
cmp
fdivrl
or
call
in
ret
xor
mov
dec
xlat
xchg
out
mov
push
pop
jae
inc
adc
add
cld
cmpsl
fldlg2
inc
mov
jge
ficoml
sbb
pop
mov
adc
or
jmp
jg
inc
or
push
fistps
inc
seto
pushl
push
cmp
in
cmp
or
roll
ljmp
jo
jmp
dec
loop
pop
in
ljmp
fildl
repz
sbb
xchg
adc
add
inc
push
jmp
rcrb
test
bnd
pop
jmp
les
or
xor
or
ret
and
popa
sbb
jns,pn
dec
in
pop
inc
sahf
cwtl
pop
xchg
adc
mov
lock
add
rolb
sbb
sbb
cltd
clc
inc
sub
into
into
mov
mov
xlat
or
xor
mov
push
pusha
popa
les
mov
insb
jb
and
push
jg
xorb
pop
iret
scas
mov
pop
jecxz
adc
daa
sub
and
test
stos
xor
das
add
outsb
sbb
push
cs
and
xchg
ret
pusha
sbb
inc
outsb
outsl
jne
push
xor
mov
xlat
js
les
pop
mov
rcll
and
bound
iret
jge
sbb
sarl
out
and
and
shl
daa
add
adc
mov
mov
dec
and
add
xor
sti
das
out
inc
mov
jge
push
leave
mov
jmp
dec
mov
cmpsb
out
push
cmp
push
mov
add
sub
fcoms
das
lock
lahf
testb
xchg
lahf
push
outsb
dec
ss
ret
mov
cmp
sub
or
movsl
inc
adc
add
xor
popa
xor
adc
iret
and
in
sbb
xchg
push
fdivl
fists
mov
fbld
inc
add
pop
dec
jns
or
gs
and
or
sub
push
sbb
pop
adc
rol
sbb
arpl
dec
or
popf
jo
push
cmpsl
clc
mov
or
pop
adc
arpl
mov
or
fisubrs
push
cmpsl
xor
pop
mov
fcmovb
mov
sub
cmp
ret
cmp
sbb
pop
and
push
fnstcw
push
test
clc
add
cmp
sbb
pop
hlt
push
imul
inc
adc
and
loop
push
hlt
mov
rcl
push
dec
inc
push
clc
and
hlt
add
adc
dec
push
add
add
mov
aaa
fwait
mov
cld
jb
lea
popa
movsl
inc
pop
inc
push
les
and
jmp
in
push
call
sub
adc
dec
sbb
mov
xchg
or
mov
xchg
add
sub
and
dec
push
subb
inc
popa
mov
jp
in
pusha
dec
xchg
mov
xlat
push
mov
jmp
inc
shrb
test
aaa
xchg
ret
add
add
add
xchg
addr16
dec
dec
addl
test
lret
enter
add
ret
dec
arpl
or
mov
loop
pop
and
or
in
dec
mov
or
cmpsb
adcb
out
or
sub
dec
add
inc
cmpsl
into
xor
lcall
loopne
popf
add
mov
sbb
mov
inc
jmp
dec
push
mov
faddl
in
cs
loope
ficompl
inc
cmp
enter
enter
les
shrl
mov
add
jae
sarb
fldcw
inc
icebp
pop
lock
pop
push
sub
push
call
cmp
xlat
push
sbb
cs
sub
sbb
jp
fsubs
push
push
nop
roll
push
inc
lock
push
adc
xchg
or
and
mov
test
cmp
ret
fwait
cmc
fsubl
and
gs
sub
sub
ret
mov
inc
hlt
inc
or
pop
aam
and
shlb
pop
push
jg
testl
testb
test
inc
pop
neg
hlt
xor
and
mov
mov
sbb
aaa
or
pop
enter
inc
or
shl
push
loope
adcb
rolb
sbb
push
xchg
cmp
ljmp
sub
nopl
sub
lret
inc
lock
inc
xchg
sub
inc
jnp
mov
inc
cmc
les
addb
jmp
xor
cmp
jl
lret
lahf
cmp
cmp
pop
in
inc
and
mov
rclb
sti
outsb
inc
imul
lahf
or
ss
sbb
ficoml
push
inc
gs
or
push
inc
or
mov
popa
or
add
inc
push
xchg
xchg
add
xchg
sbb
jo
mov
fadds
scas
add
nop
add
cltd
xor
in
and
sarb
pop
cli
and
out
inc
push
test
nop
das
pop
cmp
pop
pop
sub
rcl
scas
movsl
out
rcl
ja
inc
inc
or
jp
daa
shrb
jo
inc
dec
in
pop
or
push
inc
sahf
ja
jno
xchg
push
push
popf
dec
pop
in
push
inc
dec
mov
out
pop
inc
aam
sbbb
jo
and
and
dec
dec
sbb
pop
dec
rcl
xor
dec
or
insb
in
xor
xor
xchg
sub
les
gs
mov
pop
rcrb
inc
dec
jne
dec
or
int3
lea
and
sbb
sti
inc
mov
add
cmc
fs
subl
pop
in
lock
push
xchg
pop
push
push
les
jge
mov
cli
pop
add
negl
inc
xor
sub
and
stc
and
clc
loop
lods
sub
cltd
xor
xchg
fistpl
sub
cld
mov
cld
enter
adc
and
mov
test
out
daa
or
mov
mov
sbb
add
inc
pushf
ret
std
xor
jb
mov
push
xchg
js
outsb
xor
mov
push
inc
dec
std
pop
dec
jmp
imul
and
jb
sbb
dec
outsl
jae
test
pop
jne
adc
dec
add
fwait
add
xor
inc
pinsrw
or
shlb
les
pop
call
popa
loopne
shrb
dec
dec
jb
sbb
mov
mov
pop
rorb
push
push
outsl
out
add
and
out
mov
jl
mov
mov
jno
mov
fdivrl
inc
out
push
push
dec
mov
pop
dec
aas
push
and
fimull
out
dec
add
dec
add
cmp
adc
cmp
cwtl
dec
jb
mov
nop
adc
adc
adc
dec
add
imul
jle
js
inc
sbb
jl
rolb
inc
orb
jae
fdivrl
loopne
push
mov
dec
popa
loope
in
in
mov
loope
inc
add
or
pop
mov
sbb
xlat
mov
test
sbb
inc
jnp
dec
aad
sbb
xlat
and
adc
push
ja
iret
sbb
adc
mov
jno
xchg
adc
inc
cmpsb
fs
fimull
lock
hlt
ret
cs
inc
inc
push
fucomi
rcrl
iret
pop
add
adc
mov
mov
aas
inc
outsb
gs
insb
sub
xlat
dec
enter
push
sbb
mov
jae
cwtl
fisttps
inc
enter
or
arpl
jns
adc
or
adc
adc
pop
and
mov
in
jmp
enter
and
mov
mov
or
or
clc
out
cld
pop
lahf
int3
xchg
lock
push
push
dec
dec
inc
repnz
or
mov
push
aam
fsubs
nop
sub
enter
xlat
inc
or
int3
inc
sbb
or
jo
adc
xlat
dec
pop
test
scas
jb
mov
or
cmpb
inc
pop
ret
orb
jae
insl
scas
mov
filds
push
insb
or
gs
rorb
and
and
or
pushf
or
sbbl
pop
loope
data16
push
push
add
sbb
xchg
mov
and
pop
jns
sti
fidivrs
push
mov
fwait
int
xchg
clts
pushf
sbb
adc
pop
and
fldt
push
pusha
and
sbb
push
enter
out
lods
js
push
mov
cld
jb
sbb
xorb
xchg
test
nop
dec
pop
and
mov
sub
jg
pop
mov
pop
sbb
dec
dec
mov
imul
or
es
addr16
ljmp
mov
push
inc
sarb
repnz
or
rolb
or
ljmp
add
mov
out
sarb
js
mov
mov
xchg
std
in
xchg
adc
les
add
sub
inc
push
add
mov
sbb
inc
outsb
dec
insb
lea
add
dec
sbb
test
adc
aad
lock
insl
test
mov
dec
insb
lea
xchg
or
mov
push
push
nop
dec
sub
out
sub
into
pushf
add
sub
mov
sbb
adc
loope
push
std
cld
cs
mov
shlb
mov
push
loopne
adcb
mov
or
push
enter
int
lret
popa
dec
das
lea
imul
sarl
push
cwtl
test
ffreep
enter
pop
or
adc
mov
xor
adcb
pop
adc
pop
stc
push
inc
lea
fwait
scas
cmpsl
cmp
xchg
push
jbe
cmp
mov
es
lea
and
je
push
aam
vcomiss
add
xor
insb
out
mov
pop
jecxz
test
cmpsl
inc
pusha
fldenv
xchg
ret
sbb
push
fmuls
das
adc
mov
inc
push
inc
jb
mov
adc
pop
mov
mov
inc
cmp
popf
pop
add
enter
lods
mov
xchg
adc
insl
xor
iret
mov
add
aad
inc
jns
imul
adc
xchg
adc
inc
hlt
sbb
ljmp
nop
movsb
int
xchg
mov
test
stos
jle
loope
add
jmp
add
sub
fsubs
clc
imul
aaa
add
add
loope
aam
sub
xchg
inc
push
sbbb
jae,pt
outsb
inc
fisttpl
repnz
adc
xor
nop
cmpsl
inc
js
adc
jno,pn
mov
mov
xchg
cwtl
mov
push
in
mov
in
daa
test
adc
dec
pop
leave
or
sub
jns
fldenv
adc
push
or
scas
rorl
test
add
inc
adc
loopne
jg
dec
sub
or
js
cmp
jecxz
adc
cltd
ret
mov
add
cmp
imul
ret
push
inc
xorl
lret
into
verr
inc
xchg
jb
push
cmpsb
pop
xchg
jle
cmp
jle
dec
cmp
ret
jecxz
pop
pusha
xor
fstp
mov
jle
aas
and
dec
fs
movsb
push
mov
lret
add
add
out
mov
or
pop
sbb
add
and
adc
call
insb
stc
inc
fs
dec
fstpl
pop
inc
push
fcmovb
xchg
lods
std
cmpsb
mov
and
cmp
push
dec
jl
or
adc
or
pop
dec
add
pop
xchg
pop
mov
insl
outsl
mov
int3
ja
adcl
add
dec
and
mov
imull
jns
sub
jecxz
popa
aaa
cmpb
inc
aad
fsubr
fisttpll
xchg
movl
inc
call
cmp
insl
fwait
clc
pop
js
xor
leave
aas
push
sub
jmp
shll
inc
dec
mov
test
push
pop
add
ss
scas
add
pop
shlb
mov
or
inc
mov
add
orl
mov
add
dec
shrl
inc
xchg
xchg
mov
cltd
filds
fs
ja
sub
sbb
dec
stos
rclb
mov
add
sbbl
outsl
adc
nop
jne
add
out
jo
jmp
pop
add
lods
cmpsl
add
xchg
mov
clc
mov
in
sahf
or
or
vminsd
add
mov
or
ret
test
xlat
inc
and
dec
or
jecxz
pop
andl
jo
push
in
sbb
js
or
je
mov
push
add
leave
dec
rcr
push
or
add
fnstcw
enter
loopne
sbb
pop
insb
push
loop
lret
or
sub
repnz
inc
sbb
xor
cmp
aas
faddl
mov
pop
cmp
loopne
jg
jno
lcall
jg
loope
push
sbb
jne
inc
mov
test
fisubl
xor
mov
ljmp
push
test
aam
mov
dec
sbb
in
bound
out
jg
mov
mov
test
mov
jns
sbb
jno
fistpll
nop
xchg
mov
imul
sbb
mov
or
cmp
call
lds
scas
loop
push
xchg
fidivrl
xor
add
je
xor
clc
and
imul
movsb
loopne
hlt
in
xor
mov
dec
inc
add
lock
cmp
aad
add
or
stos
inc
mov
add
popf
adc
push
cltd
and
mov
and
xchg
imul
adc
test
sub
shr
movsl
push
repz
fsts
loopne
mov
shlb
jmp
nop
neg
jmp
add
cmp
jl
imul
jle
mov
inc
nop
imulb
into
ljmp
jp
mov
dec
loope
xor
imul
nop
pop
fs
movsb
rcrl
inc
orb
cmpsl
rorb
repz
mov
add
jle
sbb
push
jo
inc
in
imul
and
mov
aad
mov
dec
inc
repnz
sbb
inc
repz
shlb
sub
xorl
push
adc
cmpsb
push
jle
cli
dec
xor
cwtl
mov
dec
arpl
aam
pusha
sbb
outsb
in
loopne
dec
pop
ss
lods
mov
mov
push
mov
loope
insb
jnp
cmp
jae
jmp
or
xor
jo
push
stos
vpunpcklbw
popl
aas
jbe
adc
lea
and
jnp
icebp
loop
push
iret
mov
sbb
test
push
push
in
xlat
pop
xchg
subl
jo
pop
sub
xor
sbb
or
cli
and
sub
xlat
dec
pop
cld
mov
add
or
mov
arpl
mov
idivl
inc
xor
popa
jmp
roll
or
bound
add
pop
add
out
or
cmp
or
stc
add
cwtl
testl
jmp
in
test
cwtl
lock
pushf
and
lock
adc
lahf
enter
and
dec
jbe
ret
cmc
hlt
aad
inc
pop
adc
sti
roll
in
sbb
outsl
xor
and
add
dec
adc
inc
add
dec
mov
les
call
out
mov
es
loopne
xchg
xchg
push
adc
pop
fidivrl
nop
push
or
fstpl
xor
sub
add
push
sub
push
xor
adc
clc
cmp
cmp
stos
sbb
les
mov
test
lret
mov
ret
test
add
push
jnp,pn
mov
lods
add
clc
mov
add
out
stc
xchg
add
or
jp
add
loopne
add
repnz
add
fiadds
jl
adc
xchg
mov
movsb
maxps
pop
arpl
mov
movsl
out
jle
push
addb
adc
into
jnp
leave
rcrb
clc
or
pop
popa
sbb
xchg
and
jbe
xchg
aam
push
dec
ret
mov
push
dec
sub
decl
and
in
jmp
dec
call
add
addr16
push
into
hlt
pop
or
and
sbb
inc
xchg
or
scas
jle
xor
aas
adc
js
pushf
or
outsl
add
push
loope
stos
jns
je
mov
sub
scas
insl
mov
xchg
and
xor
push
and
and
xchg
fnstcw
sbb
scas
inc
nop
mov
dec
and
add
inc
jle
mov
push
add
mov
movsb
nop
xchg
mulb
push
mov
loop
add
and
xchg
adcb
bound
mov
push
and
inc
and
mov
and
dec
cwtl
in
pop
cld
mov
push
or
in
nop
jno
push
push
or
mov
cmp
pop
fldt
inc
xor
into
icebp
inc
push
sbb
call
xor
dec
or
sbb
inc
jbe
jmp
add
inc
inc
push
mov
lds
pop
inc
addb
sub
pop
int
movl
adc
test
mov
fistl
adc
out
or
mov
std
ret
pop
rol
add
jnp
pushf
arpl
xchg
cmpl
es
sbb
push
movsb
dec
and
inc
jo
inc
enter
je
cmpsb
enter
and
rcr
in
jge
les
inc
push
add
mulb
pop
add
push
mov
scas
incb
add
cmp
inc
in
inc
fstps
wrmsr
sub
jl
fsubrl
inc
add
mov
mov
mov
and
cmp
pusha
fs
inc
cmp
sub
fidivs
mov
loopne
pop
out
or
ss
mov
sbb
sarb
and
int
xchg
paddsw
push
fwait
inc
nop
dec
cwtl
cwtl
adcb
ljmp
push
andb
or
rorl
adc
pop
orl
fistpl
or
adc
push
aaa
lods
mov
call
jp
arpl
jnp
fs
scas
in
ja
add
sub
or
test
or
lret
inc
mov
stc
push
call
pop
add
push
sub
cld
mov
pop
test
and
addr16
hlt
xchg
jno
mov
xor
dec
hlt
lock
sbb
or
fwait
lahf
mov
out
cltd
mov
addb
inc
rolb
add
xchg
inc
aas
sub
pop
leave
es
sub
push
ljmp
inc
cmpsb
test
mov
sbb
pop
cmp
sub
sub
pushf
push
or
xor
inc
popf
mov
xchg
jl
pop
out
jo
inc
test
ret
inc
sub
pop
xor
sahf
jbe
mov
js
clc
add
add
inc
or
xorl
dec
or
sub
idivl
fiadds
nop
sbb
xor
lods
and
ret
xchg
adc
stc
subb
inc
jmp
pusha
fisubl
aam
sbb
push
fmul
push
and
mov
xor
cs
dec
add
test
adc
insb
sti
add
or
xchg
dec
adc
sbb
and
mov
sbb
repnz
insb
das
mov
scas
fwait
lock
cmpl
cmp
pop
icebp
push
sbb
outsl
jl
sbb
pushf
idivb
nop
xchg
inc
and
gs
push
mov
mov
adc
xor
in
lods
add
sub
fistpl
add
in
and
arpl
orl
push
fldl
std
and
pop
inc
mov
xor
or
inc
dec
dec
and
imul
pop
das
push
dec
sub
rclb
movsb
add
sub
repnz
cmp
cmp
adc
and
stos
and
add
add
mov
fsubrs
xor
mov
push
iret
enter
pop
xor
enter
xor
movsb
jno
aaa
jp
adc
push
test
cmpsl
jg
and
and
adc
lods
push
es
cmp
jno
inc
sub
test
fsubrl
mov
mov
test
add
lds
das
mov
and
cmp
or
subl
add
dec
call
pop
cmp
movsl
xchg
xor
iret
insl
fists
sub
scas
enter
pop
in
loop
daa
cli
lock
mov
leave
xorl
xor
cmp
xchg
push
test
sbb
xchg
negl
adc
push
in
jnp
int
xchg
pop
nop
cld
fs
fdivrs
push
sbb
repz
cmp
pushf
mov
jb
mov
bsf
jae
jb
rcr
adc
lods
outsl
jmp
int
pop
xchg
pop
aas
pop
xor
pushf
lea
or
or
mov
xor
dec
push
enter
and
dec
cmp
sub
push
xchg
adc
push
adc
pop
js
adc
sub
iret
sti
lods
pop
pop
les
insl
add
inc
jnp
and
fistpll
inc
bound
sbb
xor
mov
loopne
fiadds
or
adc
add
inc
and
icebp
push
movsb
cmp
aam
push
addb
xchg
cs
loopne
rol
fiadds
adc
pop
adc
ljmp
or
adc
or
dec
bound
mov
xchg
incb
test
sbb
jns
mov
imull
cmp
sbb
and
loopne
lret
push
cmpsl
push
jae
mov
inc
sub
dec
xor
push
rclb
ja
aaa
movsl
out
xchg
cmp
xor
or
incl
add
pop
mov
add
cmp
push
je
nop
pop
mov
sub
push
shlb
xchg
mov
xchg
cwtl
mov
mov
dec
lea
and
push
mov
sbb
push
mov
shll
fists
add
call
push
in
add
or
hlt
stos
insb
jl
sub
gs
scas
add
jecxz
shl
mov
sub
adc
mov
adcl
lret
jmp
xchg
inc
movsl
cmp
cmp
dec
mov
and
mov
sti
sbb
add
pop
mov
out
cmp
mov
nop
mov
dec
orb
adc
out
mov
mull
mov
outsb
loope,pn
pop
dec
fdivrs
daa
dec
test
mov
dec
xor
cmp
rorb
inc
sbb
sti
jle
xor
mov
inc
pop
aas
mov
pop
imul
dec
bnd
xchg
test
loope
jmp
orb
notb
ss
sub
fdivl
mov
outsl
call
and
fsubs
pop
orl
cmp
js
or
pop
adc
fstpl
xlat
je
iret
xchg
leave
shll
mov
xor
xchg
mov
xchg
in
pop
pop
dec
loopne
in
in
sub
xchg
nop
movsb
jnp
cmp
in
pop
std
in
xchg
and
mov
and
ss
or
iret
dec
push
pop
subl
add
pop
adc
nop
fwait
cmp
mov
mov
adc
rol
mov
hlt
jp
lods
sbb
fwait
or
jecxz
xchg
sbb
sbb
dec
sbbb
pop
xchg
ret
dec
je
stos
mov
push
ss
mov
mov
nop
cmp
add
or
xor
test
and
xlat
les
jmp
push
jne
or
push
add
pop
imul
arpl
lret
and
lea
inc
cwtl
fiaddl
or
rcll
ja
xor
push
dec
jne
and
ficomps
fs
adc
add
aaa
xor
sbb
cltd
add
pop
add
fstpl
add
sub
lock
mov
xor
add
pop
andl
and
and
shlb
pop
add
cmp
and
rolb
jne
xor
or
insb
add
cwtl
lret
vcvtpd2dq
or
imul
sub
adc
hlt
flds
lods
out
or
dec
pop
fbld
insb
add
addl
push
and
mov
xlat
outsb
popa
jmp
add
jmp
iret
push
dec
les
xor
jg
sub
push
sub
add
in
bound
push
fists
inc
cmp
push
mov
xor
cmp
or
sub
fs
push
nop
lahf
mov
add
lds
xor
xchg
push
inc
call
stc
cmp
dec
invd
dec
sbb
mov
and
inc
mov
mov
jmp
sub
and
inc
add
adc
jg
push
push
daa
movsb
mov
rolb
sub
jl
lea
xchg
mov
xor
pop
mov
scas
cwtl
fsubs
not
xor
add
dec
sub
sbb
aad
adc
sbb
mov
adc
or
popf
adc
nop
ja
or
jle
or
or
mov
inc
mov
inc
mov
dec
push
enter
dec
sub
lret
incb
lahf
adc
mov
nop
xchg
add
bound
mov
pop
add
xchg
adc
cmpsl
cmp
sbb
inc
iret
add
and
inc
inc
or
inc
mov
shll
dec
and
test
or
gs
or
add
pusha
and
add
sub
and
push
mov
repnz
xchg
scas
pop
ss
and
int3
inc
inc
in
add
fucom
or
or
movsb
pushf
test
xchg
add
mov
cmp
and
ss
orl
rcll
bound
in
inc
inc
pop
push
xor
inc
cmc
inc
sbb
int3
inc
inc
dec
inc
mov
inc
inc
mov
and
sub
sub
or
movsb
andl
jns
jns
dec
inc
dec
push
jnp
cmp
sbb
push
mov
lahf
mov
pop
or
jl
ret
xchg
in
or
sysenter
or
inc
and
mov
fstps
mov
int3
or
lods
add
sbb
xchg
and
jae
push
fisubs
in
mov
lods
decb
ret
rcrb
test
daa
adc
pop
xchg
inc
clc
jns
add
dec
scas
repnz
movsb
pop
inc
je
fsubrs
sti
mov
push
insb
hlt
ja
mov
arpl
add
or
rcrl
mov
hlt
pop
or
sub
xor
sub
push
fstpt
xor
inc
push
imul
mov
or
or
jae
nop
cmp
notb
mov
cwtl
pop
push
cwtl
or
je
in
inc
or
or
add
sub
push
inc
mov
and
sub
sbb
jns
push
mov
sbb
mov
lcall
add
and
dec
mov
pop
sub
mov
push
xor
push
loop
imul
sub
add
mov
scas
ret
dec
add
mov
cmpb
or
adc
inc
adc
and
daa
pop
inc
jb
and
inc
loopne
pop
mov
in
in
fs
mov
cmpsb
fs
dec
rolb
in
inc
aam
enter
dec
enter
sub
nop
int3
pop
xchg
arpl
mov
out
nop
pop
pop
shlb
mov
hlt
imul
in
mov
jne
outsb
mov
jl
mov
add
pop
pop
jmp
push
cwtl
sbb
pop
enter
in
xor
in
in
dec
fsub
in
xor
addb
adc
jbe
aad
loope
xlat
add
and
mov
dec
inc
adc
mov
push
pop
dec
daa
mov
lret
cmp
lea
lcall
lcall
add
adc
sub
dec
jmp
inc
mov
dec
loope
mov
clc
nop
add
mov
out
mov
inc
inc
sahf
cld
test
fadds
add
sbb
xor
xchg
cmp
inc
lea
in
add
and
fisttpll
mov
mov
and
xchg
pop
fiadds
adc
xchg
xchg
jne
roll
repnz
pop
mov
imul
and
mov
aaa
adc
and
es
mov
xchg
dec
mov
test
adc
js
pop
pushf
out
or
dec
fs
out
inc
rorb
dec
cld
adc
add
pop
xchg
aas
shr
orb
add
jae
scas
ss
add
movsb
nop
push
xor
cmp
xor
or
sbb
loope
jno
sarb
ja
dec
ret
ret
push
add
add
int
xor
daa
das
adc
mov
or
inc
cmp
test
rcrb
xchg
push
test
sub
xchg
idivl
movsl
sbb
das
push
push
lahf
daa
mov
adc
pop
jno
or
pop
adc
mov
lock
lock
inc
adc
cmpsl
clc
out
adc
ds
and
jns
pop
inc
nop
push
and
ret
jmp
push
dec
shlb
add
aas
notb
add
add
add
xor
xchg
ret
ja
sahf
data16
lock
push
lahf
push
adc
out
fidivs
push
pop
andb
and
shlb
add
mov
fmul
and
and
mov
and
xor
mov
mov
sbbl
pop
mov
fmuls
stc
inc
lods
pop
aam
cld
aam
stc
test
shlb
leave
test
int3
int3
pop
adc
push
stc
and
and
sub
je
cmp
and
mov
xchg
mov
rcll
shlb
pop
bound
movsl
jl
or
and
mov
add
in
or
push
enter
dec
div
icebp
xchg
xchg
or
repnz
add
xor
lahf
push
inc
xor
cmc
fmuls
push
stos
or
inc
push
imul
add
fdivs
mov
mov
movsl
and
nop
add
push
or
xchg
ljmp
add
sub
lods
jne
hlt
mov
lock
xor
call
sub
es
subb
adc
icebp
and
push
enter
xor
push
enter
or
adc
add
jne
in
sbb
rolb
fdiv
or
loop
enter
adc
fwait
add
sbb
lahf
lea
les
adc
pop
inc
pusha
bound
les
mov
pop
xor
sarb
mov
mov
dec
sub
roll
jp
push
pusha
cmpsb
add
test
cmp
rcrb
inc
push
xchg
push
imul
movsb
xchg
jle
mov
andl
insb
insl
nop
ret
push
add
add
and
ja
cmp
cmpb
inc
orb
push
sub
pop
fwait
arpl
push
dec
pop
mov
add
sbb
pop
sub
and
lret
ja
cmp
pop
in
adc
push
mov
dec
jmp
cmp
or
and
sub
jnp
lret
cmp
sub
adc
xor
push
and
sub
push
stc
add
cmp
jle
adc
rcll
sti
cmpb
xor
fcomps
fisttps
dec
cld
rcrb
inc
in
inc
add
jmp
fbld
jae
mov
add
push
lcall
call
xlat
scas
call
cmp
pop
sbb
xchg
inc
push
movsb
repnz
in
lds
lods
enter
loopne
jl
sub
xchg
jle
mov
add
imul
test
repnz
arpl
bound
pop
and
mov
sti
mov
ret
scas
popa
lock
test
mov
lock
cs
xor
hlt
jl
icebp
fimull
in
sbb
pop
cmp
add
in
insl
scas
dec
sub
jo
pop
push
push
pop
sahf
idivl
jnp
in
adc
cs
clc
push
pop
pop
imul
push
loopne
scas
sbb
dec
dec
fsubrl
mov
sbb
dec
fsubrs
scas
sbb
dec
dec
aam
aam
scas
sbb
dec
shrb
scas
sbb
dec
dec
int3
imul
sbb
enter
sbb
shrb
inc
out
test
jns
or
daa
iret
hlt
hlt
andl
adc
fcoms
mov
vsubsd
xchg
dec
xor
les
mov
push
pop
and
enter
mov
xor
mov
and
lea
mov
stos
adc
add
dec
mov
xchg
loop
movsb
inc
add
sbb
add
add
test
jl
inc
xchg
add
int
clc
mov
adc
mov
mov
jb
mov
add
sub
arpl
mov
test
inc
cs
jg
ret
sbb
push
inc
sub
or
pop
dec
cwtl
aas
icebp
push
adc
mov
out
inc
pop
movsb
mov
or
mov
xlat
rorl
adc
cld
popa
ror
lahf
test
pop
add
adc
add
lcall
mov
xor
out
cmpsb
int3
repnz
push
push
sub
popf
pop
in
sahf
sub
push
je
mov
push
pop
in
mov
or
je
mov
push
pop
in
mov
or
je
mov
mov
fcomp
add
sbb
mov
push
test
or
xor
adc
in
and
or
in
jle
adc
enter
and
add
les
add
rcl
jle
inc
mov
pop
inc
les
pop
movsb
imul
add
mov
mov
test
icebp
and
fldenv
push
ret
jmp
pop
add
or
sub
push
es
inc
xor
add
pop
adc
movsb
aas
lcall
mov
jl
push
in
push
or
sub
lcall
insl
dec
or
addr16
inc
pushf
sub
in
imul
or
mov
cmpl
adc
adcb
sbb
or
mov
and
pop
xchg
jne
jo
nop
repnz
xor
cmp
addr16
cmp
jl
mov
je
push
mov
xchg
mov
or
in
outsl
dec
shrl
movsb
dec
movsb
dec
clc
insb
xchg
push
dec
mov
and
add
pop
movsb
aaa
js
pop
jp
pop
jmp
inc
jns
leave
add
movsl
lock
dec
xor
inc
inc
aaa
and
shr
in
adc
jo
outsb
push
ss
jnp
out
pop
subb
jno
pop
cmp
push
pop
jp
push
xor
fadds
dec
loopne
xchg
pop
and
jbe
and
mov
fmuls
xor
rcrb
pop
ror
int3
sbb
xor
inc
adc
aad
in
and
cmp
cmp
in
enter
or
in
adcb
adc
xor
cmp
rolb
pop
or
adc
sub
shlb
les
jmp
push
cs
mov
lahf
inc
jo
and
or
xchg
and
mov
pop
adc
inc
hlt
nop
and
sub
jmp
into
fsubrs
cld
faddl
pop
pop
adc
dec
aad
sub
cmp
fmuls
dec
sub
adcb
sub
jno
jmp
repnz
fs
jl
rcr
int
mov
mov
and
movl
push
jnp
add
pop
adc
sub
fcoml
mov
in
fdivrs
sub
aam
pop
insb
adc
xor
adcl
cmp
add
xor
rolb
ret
add
test
and
xchg
cmpsb
pop
sub
inc
cmp
or
test
inc
jns
je
pop
cld
xchg
sti
ja
adc
adc
xor
lds
xor
ret
lret
in
mov
xchg
sbb
loopne
mov
mov
or
pop
adc
dec
insb
sub
in
push
daa
or
or
sbb
and
ror
add
pop
xor
jecxz
jo
dec
les
stc
int3
mov
and
inc
das
out
inc
rorb
mov
jne
adc
jge
xchg
aaa
add
lock
enter
and
or
jb
out
jns
into
jne
inc
cmp
or
sarb
outsl
das
in
mov
aad
jmp
or
dec
adc
leave
movsl
mov
in
jo
add
lea
imul
jbe
pop
and
out
or
loopne
cs
jmp
pusha
mov
dec
in
inc
add
xor
fisubl
arpl
mov
clc
mov
loopne
aad
in
xor
xor
mov
mov
push
test
aaa
in
ja
adc
xlat
icebp
add
inc
adc
subb
mov
jae
ret
xlat
push
hlt
inc
ret
mov
les
push
adc
add
xor
andb
adc
mov
adc
and
mov
push
xchg
push
js
ljmp
ret
and
fdivrl
or
adc
shr
rolb
dec
aam
push
in
pusha
mov
sub
jns
push
adcl
sbbl
mov
sbb
jp
sarl
roll
out
pop
add
sbb
cmp
add
add
and
nop
popf
data16
pop
jnp
add
push
or
js
mov
jge
enter
sbb
cmp
pop
and
jge
jns
cmp
jl
jle
xor
cmp
mov
into
in
add
sbb
fldl
mov
dec
mov
stc
ret
loope
ret
jg
jbe
lods
pop
xor
adc
adc
fcoms
inc
push
xor
xor
inc
push
inc
dec
in
in
mov
and
sub
incl
imul
xor
nop
dec
push
fcomps
mov
and
add
imul
inc
sbb
xchg
rorb
insb
pop
adc
scas
rolb
cld
mov
sbb
sub
inc
add
cs
mov
iret
insb
dec
pop
and
adc
cmpl
pop
sbb
xchg
aam
fcoms
adc
or
mov
adc
dec
mov
stos
add
dec
mov
clc
das
sar
push
xchg
adc
and
adc
insb
and
fwait
shlb
adc
and
nop
stos
es
aam
lcall
in
repnz
lock
cld
clc
orl
jle
lahf
xchg
xchg
xchg
mov
cmp
in
sub
cmp
mov
mov
pusha
or
int
or
mov
push
inc
iret
pop
cmp
xor
jne
or
test
mov
in
mov
fs
aam
pop
leave
push
or
or
rclb
fcoml
fwait
pop
push
lods
mov
adc
sti
xchg
mov
inc
pop
aad
shl
loope
cld
clc
cmp
jo
mov
stc
jo
add
add
pop
pusha
add
imul
dec
sbb
hlt
hlt
mov
cmp
mov
push
or
mov
xchg
dec
punpckhdq
call
pop
dec
xor
mov
push
sbb
outsb
rol
or
or
mov
test
and
lock
dec
xor
mov
fldt
push
loope
daa
dec
outsb
mov
jns
mov
push
je
adc
jo
lea
and
pop
stos
inc
in
and
and
out
push
jns
lea
pop
mov
int3
xor
jmp
and
std
xor
pop
sbb
push
fadds
movsl
add
jb
arpl
adc
rorb
xchg
ja
mov
push
adc
mov
andb
pop
or
nop
xlat
test
mov
mov
rorl
test
test
push
xor
inc
adc
push
inc
scas
inc
add
push
xor
inc
stos
dec
outsb
adc
cwtl
cmpsl
xor
das
das
adc
add
push
addr16
andb
xchg
mov
xchg
jp
fcmovne
inc
aam
inc
add
push
cmp
loope
inc
mov
ret
test
test
push
arpl
stos
sub
mov
push
pop
xor
in
enter
and
dec
xchg
outsl
push
jmp
shrb
mov
pavgb
daa
adc
lock
dec
inc
sbb
mov
enter
test
cs
rorb
or
sbb
xor
or
pop
orb
inc
pop
call
fiadds
mov
mov
movb
jbe
mov
enter
rclb
adc
adc
inc
mov
test
push
inc
popa
sub
rol
push
jge
nop
subb
imul
adc
push
cmp
jge
movb
jl
cmp
add
jp
add
xchg
dec
add
pop
inc
fimuls
inc
aas
adc
test
dec
nop
lock
pop
sbb
fisubrs
push
dec
mov
add
adc
xor
cmp
and
aaa
cwtl
jl
cld
add
adc
add
gs
in
cmp
xchg
in
cmp
lcall
in
lds
pop
imulb
mov
mov
andl
pop
mov
mov
mov
insl
in
in
repz
fwait
jmp
dec
xchg
xchg
cmp
flds
push
push
inc
cwtl
add
adc
mov
and
addb
pop
scas
sbb
pop
inc
ljmp
ror
pop
mov
cmpl
jmp
add
xor
pusha
shrl
xchg
sbb
cmpsl
lret
stos
or
sub
mov
mov
cmp
mov
mov
cmp
cwtl
pop
push
push
mov
je
mov
pop
pushw
mov
das
dec
aaa
leave
push
popa
xor
sbb
pop
sub
inc
add
xor
pop
test
sub
inc
and
add
lods
xor
popa
push
push
paddusb
out
into
sbb
notb
ljmp
mov
inc
adc
mov
mov
rcr
shrb
popl
add
inc
lea
adc
aam
fadds
je
jl
dec
adc
add
xchg
inc
push
push
and
xor
test
mov
cli
add
cmp
aaa
roll
add
add
js
add
dec
push
mov
pop
nop
xchg
rclb
dec
push
inc
in
addr16
pop
pop
inc
aaa
repnz
adc
gs
jne
rolb
repnz
push
out
xor
xor
add
or
ja
cs
pop
xor
movlps
mov
movsb
addl
add
mov
push
push
add
and
jo
mov
in
repnz
adcl
aaa
ret
adc
insb
mov
or
shll
in
leave
subl
orb
movsb
cld
xlat
mov
sbb
ss
mov
cmpsl
test
les
add
inc
int3
sahf
push
xorl
es
mov
out
pop
mov
int
cmpb
jne
out
add
and
mov
jge
adc
imul
shl
lret
sub
iret
push
push
cmp
leave
ret
nop
cmp
add
stos
sub
inc
sub
mov
add
mov
inc
fcoml
ret
adc
push
fcmovb
or
cli
sbb
cmp
push
ss
push
dec
xchg
jl
dec
mov
add
les
cmpsb
inc
push
subl
in
inc
xchg
or
push
mov
inc
add
xchg
inc
sbb
mov
in
pusha
les
lea
pop
mov
mov
add
push
xor
inc
xchg
popa
mov
leave
sbb
fs
push
lahf
inc
shlb
xor
ljmp
add
arpl
add
shll
sub
jne
das
xchg
ret
pop
shrb
push
gs
flds
inc
ljmp
mov
add
xchg
push
or
push
sub
push
adc
ljmp
xchg
mov
sbb
mov
mul
pop
sbb
cmp
daa
adc
fldcw
pop
sub
xchg
mov
sbb
adc
mov
add
xor
xor
lods
mov
pop
sub
testb
fldl
pop
mov
inc
aas
mov
pop
movsb
jb
movsl
es
vpcomd
or
mov
sbb
and
xchg
aaa
imul
dec
xchg
out
dec
nop
add
pop
jmp
inc
sub
jmp
sbb
push
nop
inc
aam
and
aaa
sbb
fsubs
xor
xchg
hlt
outsl
addb
add
or
or
dec
or
adc
aam
das
cwtl
and
cmp
cmp
mov
adc
push
or
push
and
out
jae
repz
sbb
pop
mov
nop
mov
and
std
ficompl
mov
push
shll
inc
mull
adc
inc
insb
or
roll
comiss
and
and
jmp
movsb
or
cld
pusha
inc
icebp
or
test
ret
cmpsb
mov
cmpsl
std
inc
or
jle
clc
add
push
repz
or
cmpsb
hlt
insl
push
jb
push
cmp
jne
shl
add
jne
je
sub
icebp
xor
mov
push
xchg
adc
movq
loope
loope
sbb
js
add
test
sbb
mov
rcrl
inc
add
inc
ds
cmp
xor
xchg
cmp
divl
daa
sub
pusha
mov
add
sub
mov
ja
in
inc
add
das
xchg
inc
xchg
mov
mov
cwtl
jge
pop
std
je
in
mov
ja
xchg
inc
push
dec
and
push
xchg
inc
cmpsl
std
xchg
xchg
xor
imul
jne
jle
loopne
movaps
mov
loopne
shll
ljmp
push
pop
push
mov
out
sub
rolb
incb
setae
mov
adc
xchg
xchg
mov
mov
scas
push
push
sub
sub
idiv
adc
cs
xor
cmp
test
cmpsl
push
imul
cmp
outsb
push
push
dec
push
dec
pop
ss
cs
jbe
fldt
xor
loope
rorl
adc
lret
push
jecxz
push
and
dec
sti
inc
dec
xor
aaa
jg
jo
and
mov
lahf
paddusw
fldcw
inc
adc
xor
add
xor
xor
loopne
mov
pusha
pop
cmp
and
inc
insb
gs
decl
fidivrs
dec
push
inc
push
dec
inc
sbb
fmulp
dec
push
or
das
es
ret
mov
mov
idiv
dec
call
orl
in
mov
cmovb
xor
xor
lahf
xchg
pushf
sbb
xor
xlat
inc
inc
addr16
out
imul
xor
and
inc
and
mov
insl
dec
inc
push
jb
roll
in
negl
ja
insl
sub
hlt
inc
inc
jg
push
jl
das
sub
inc
dec
dec
fimull
xchg
cmp
sub
cmp
push
or
dec
pop
cmp
es
pop
inc
mov
xchg
mov
xor
inc
call
push
add
mov
mov
add
inc
xor
or
add
push
xchg
sbb
in
dec
cmpsl
ljmp
pop
inc
pop
xor
jge
push
aaa
xor
cmp
enter
or
xlat
imul
lret
push
fisttps
int
or
xor
daa
iret
mov
test
pop
inc
push
inc
pop
in
into
insl
pop
mov
push
sub
dec
mov
les
xchg
in
inc
dec
daa
cvtps2pi
sbb
inc
imul
xor
fisubrl
lahf
aaa
cmpl
imul
outsb
popa
pop
js
cmp
js
aaa
addr16
stos
sbb
outsl
xchg
mov
js
add
add
xor
cmpsb
jbe
lahf
ja
push
mov
pop
add
repnz
mov
ja
xchg
push
or
and
or
dec
sbb
mov
lret
lahf
inc
push
inc
aad
fs
dec
daa
aaa
gs
or
mov
aaa
sub
fmull
inc
pop
dec
add
adc
in
mov
xchg
cmpsl
cmc
or
xchg
addr16
dec
jb
fcom
ss
xor
dec
pop
fs
inc
fisttps
adc
out
add
adc
das
xor
addr16
outsl
dec
inc
pop
pop
lock
add
and
sub
xor
inc
push
xor
xor
call
test
xorl
lock
iret
xor
aaa
es
test
jns
pop
push
sub
cmp
ss
push
push
ficomps
arpl
or
fs
int
shrl
and
gs
pop
mov
shrb
in
mov
movsb
jnp
and
push
sub
inc
xor
xor
pop
ja
das
mov
jo
xchg
jmp
gs
lds
adcl
xchg
xor
inc
sbb
cmp
mov
aas
pop
je
xor
inc
inc
pop
jp
sub
mov
outsb
cltd
test
inc
dec
bound
enter
xor
cmp
scas
addr16
inc
pushf
xor
xor
xor
xchg
or
push
popa
sbb
add
loop
insl
bound
xor
push
aas
adc
fiadds
xor
fidivs
das
in
jbe
xor
lcall
sub
cmp
add
loopne
jb
cmp
sahf
inc
popf
push
fisubrl
fs
insb
lods
sbb
rcll
fsubrl
bound
add
cmp
subb
cmpsb
in
jecxz
xor
cmp
pop
dec
or
xor
mov
mov
cmp
cmpsl
xchg
jne
clc
sub
jne
addr16
jb
loop
pop
or
cmp
aaa
out
bound
adc
add
lock
sub
lahf
aaa
cmp
xor
push
cmp
gs
cmp
or
xor
lods
adc
cmp
cmp
xor
xlat
sarl
aam
cmp
and
xor
cmp
and
mov
dec
adc
xor
lods
scas
int3
mov
sub
mov
je
daa
dec
xchg
xchg
add
push
loop
xor
jg
dec
inc
push
sub
shl
bound
cmp
movsb
mov
aas
divl
imul
sar
or
mov
push
xlat
xor
aad
xlat
adc
leave
rcll
xor
mov
bound
dec
xor
jo
inc
mov
insl
enter
iret
push
jo
cmp
xlat
xor
and
in
ss
pop
cmpsb
out
arpl
xor
lds
pop
cmp
xchg
cmp
push
lret
mov
adc
xor
movsl
cmpsl
cmp
stos
pop
inc
push
inc
pop
push
xor
mov
xchg
push
push
dec
push
push
outsl
jb
ret
aad
rcr
xor
mov
aaa
or
fidivrl
outsb
mov
mull
inc
push
insb
xor
xor
inc
push
sarl
addl
xor
test
xor
jno
inc
jo
pop
push
add
ss
mov
nop
fisubrl
push
and
cmp
mov
pop
pop
jg
add
fs
add
xchg
daa
xor
cmp
and
xor
adc
xor
dec
dec
and
xor
xchg
dec
cs
inc
mov
mov
dec
inc
fbstp
sbb
mov
addr16
sub
xor
lcall
lcall
out
call
popa
aaa
jo
popa
adc
jno
addb
sbb
fsubr
divl
xor
fiaddl
xor
dec
dec
push
cmp
xor
mov
push
bnd
push
stos
into
jne
and
xor
inc
daa
nop
sub
or
or
inc
sub
mov
ja
cmpb
push
dec
fmuls
adc
dec
or
testb
das
pop
add
ss
xchg
dec
dec
inc
scas
fs
aaa
aaa
call
dec
dec
push
pop
cmp
jno
xor
cmp
or
cmp
rclb
push
sbb
pop
lods
sub
pop
xchg
mov
pop
jb
push
xlat
pop
pop
cmp
sub
cmp
mov
and
bound
ja
xor
pop
enter
cmp
enter
cmp
jg
pop
and
testl
shlb
into
fistpll
jg
fcmovne
inc
and
fisttps
push
test
adc
pop
dec
cs
xor
xor
pop
inc
fimull
outsb
lcall
jae
int3
sahf
test
jne
jp
dec
mov
sbbl
in
out
fbld
mov
xchg
and
sbb
xor
jg
fs
xchg
xor
dec
shll
push
repnz
adc
rorb
notl
xor
push
pop
add
mov
push
xchg
jl
xlat
das
adc
push
mov
sbb
lcall
aaa
outsl
and
push
scas
in
ja
cmp
fs
ret
pop
cmp
xor
fistps
mov
imul
push
daa
pop
xor
ja
daa
adc
inc
dec
push
push
iret
cli
or
lods
add
xor
out
push
pop
push
bound
mov
adc
xor
dec
inc
jg
pop
xor
add
xchg
pop
xchg
pop
shlb
jbe
xor
ss
aaa
xor
sub
push
imul
dec
mov
mov
and
inc
movsl
bound
pop
xor
lcall
sbbl
testl
js
test
pusha
scas
xchg
push
enter
pop
decl
mov
test
scas
xor
adc
mov
ss
or
mov
fistpll
and
lahf
loop
jne
test
out
idivl
or
xor
adcl
push
mov
rolb
sbb
rorb
out
loopne
xchg
inc
jmp
imul
mov
aas
xchg
addr16
rcr
pop
pop
dec
popa
insb
pushaw
xor
xorb
dec
shl
test
shlb
dec
inc
scas
cs
add
push
push
inc
arpl
adc
push
xor
push
jecxz
pop
ret
xor
inc
inc
sub
ja
push
arpl
cmp
das
dec
inc
or
adc
lds
pop
jb
sti
nop
push
aas
push
push
push
aas
or
mov
outsl
divb
push
mov
dec
inc
pop
das
and
scas
xchg
ret
bound
push
sub
dec
and
adc
outsb
insb
pop
add
or
roll
xlat
inc
sbbb
inc
ljmp
pop
enter
cmp
aaa
xor
fisubrl
and
leave
in
push
xchg
mov
and
xor
xchg
and
sub
xor
aaa
or
das
pusha
mov
cmp
fs
aaa
cmp
cmp
push
cmp
cmp
xor
xchg
imul
xor
or
rorb
xchg
inc
adc
dec
xor
xor
inc
cmp
inc
xlat
gs
xor
adc
xor
push
bound
cmp
mov
push
jbe
sbb
adc
aaa
aaa
das
test
aaa
nop
out
or
xchg
or
popa
jb
push
xchg
cmp
cwtl
nop
xor
das
addr16
mov
push
xchg
xor
leave
add
gs
inc
adcb
or
inc
cmp
outsl
sbb
push
inc
pop
inc
bound
fbstp
ficomps
jne
cmp
test
aaa
jg
or
aas
and
insb
je
cmp
aaa
nop
xor
pop
aaa
stc
xchg
push
cltd
xor
cwtl
jo
adc
xor
xor
les
xor
orl
push
cmp
xchg
inc
xor
dec
enter
adc
nop
or
ss
ss
outsb
and
jg
xor
fs
mov
xor
pop
fisttpl
push
lahf
inc
es
lahf
ss
frstor
adc
pop
fs
es
xor
and
or
xor
xor
nop
xor
ja
push
xor
xchg
ss
sbb
ss
orl
xchg
pop
sbb
jmp
cmp
push
fs
mov
cmp
nop
pop
leave
rcrb
xlat
aaa
xchg
aaa
scas
in
jb
arpl
jne
enter
xor
aaa
xchg
add
pop
imul
cmp
test
pop
outsl
test
aaa
cmp
push
xchg
mov
cmp
xor
pop
inc
sbb
and
lods
bound
xor
addr16
fistps
jg
pop
jg
loope
sub
sbb
xor
xor
add
outsb
and
inc
mov
push
xchg
pop
lock
or
ss
sbb
xchg
inc
addr16
push
mov
clc
and
and
pop
ss
push
or
pop
inc
mov
lods
das
pop
into
mov
xchg
dec
mov
pop
xor
push
pop
push
rcrl
pop
pop
inc
stos
lods
mov
mov
push
fwait
push
pop
mov
mov
movl
or
dec
push
xchg
add
dec
push
push
in
xchg
pushf
inc
push
sub
jb
sbb
daa
dec
inc
xchg
push
push
push
out
push
dec
enter
sub
mov
andnps
push
dec
sub
xchg
xlat
mov
popa
xor
cmovge
dec
dec
dec
xchg
scas
dec
outsb
dec
imul
out
sbb
pop
push
dec
jno
mov
xor
and
cmpsl
sarb
aas
dec
dec
scas
mov
sbb
ljmp
or
dec
sub
push
dec
inc
sub
mov
fists
jno
xor
gs
lods
mov
mov
xor
outsl
in
lods
sub
inc
xchg
adc
sub
movsl
in
xor
xor
sub
and
mov
xor
push
cmpsl
xor
and
xor
adc
sub
and
jb
xor
jns
leave
jae
aaa
aaa
outsb
outsl
cmp
fbstp
xor
sbb
and
imul
in
add
gs
fbstp
or
cmpsl
inc
es
int
je
xor
xor
enter
ss
inc
xor
bound
in
cltd
inc
aaa
aaa
fstps
xchg
lahf
data16
aaa
xchg
add
cmp
pop
jb
cmp
add
jb
dec
mov
int3
nop
or
cmp
imul
mov
imul
repnz
dec
push
inc
push
lret
inc
test
daa
and
popl
lods
inc
js
push
aas
add
and
stos
fsubl
dec
je
insl
enter
push
mov
or
addr16
xchg
adc
xor
xor
xor
adc
adc
inc
xor
xor
scas
lret
outsb
clc
testl
xor
cmp
mov
xor
push
pop
mov
aaa
out
pusha
movsl
rcrl
pop
cmpsl
arpl
sbb
cwtl
cs
cmp
xor
push
xor
mov
dec
jg
ss
sub
jg
pop
mov
sub
xor
cwtl
add
mov
inc
push
cwtl
pop
inc
shll
lods
frstor
jo
cmpsb
xor
cmp
and
push
insl
in
fldt
or
les
test
jno
and
pop
sub
jp
pop
pop
rcrb
sbb
outsb
cmp
gs
imul
in
mov
xchg
push
imul
cmp
sub
js
push
dec
int3
or
shr
dec
inc
aaa
jmp
rorl
cmp
pop
push
enter
insl
sbb
pop
xor
sub
orb
mov
pop
lahf
dec
push
das
adc
mov
out
add
mov
adc
aaa
in
cltd
push
cmpsl
fmuls
mov
pop
xor
ja
mov
xchg
sub
aaa
cmp
xor
xor
adc
cmp
lods
xor
nop
xor
xor
nop
fnstcw
xor
xor
and
inc
bound
je
test
es
fs
les
inc
inc
aas
pop
or
mov
inc
popa
mov
dec
ja
dec
adc
fadd
aas
inc
inc
mov
jp
sub
sub
pop
lods
mov
data16
push
mov
cmp
push
xchg
push
movsl
lods
inc
jmp
push
pusha
mov
fldt
sub
scas
movsb
daa
movsb
push
daa
xlat
and
imulb
dec
dec
push
cs
insl
mov
in
sub
dec
or
or
cmp
imul
inc
daa
lahf
dec
popa
je
in
push
xchg
cmp
mov
nop
jno
mov
xor
fcoml
pop
int3
push
mov
cmp
dec
or
je
or
lods
add
jnp
xor
pop
mov
mov
cmp
and
jne
insb
call
gs
mov
xchg
leave
xor
sub
filds
cmp
in
and
xchg
mov
lahf
nop
sbb
xor
add
xor
xor
enter
ss
or
push
rclb
cld
xor
fistps
add
sbb
in
fbld
aad
and
insb
movsb
adc
add
sub
dec
push
and
pushf
aad
add
mov
inc
pusha
sbb
es
push
sbb
lds
in
test
mov
add
lea
rolb
add
fcoml
jns
adc
mov
dec
add
mov
jmp
scas
movb
adc
jecxz
push
loop
mov
jno
adc
in
cmp
push
cmp
jg
xor
clc
mov
mov
add
and
push
lock
push
addr16
clc
pop
sbb
xlat
cmp
jne
cmpb
push
and
pop
rclb
pop
add
test
push
push
loop
sbb
mov
adc
add
pop
jl
xchg
adc
mov
jns
cmp
int
xchg
jne
dec
xor
aam
fmuls
mov
cmp
out
and
add
fsubrl
lods
rorb
sbb
adc
das
or
mov
xor
mov
lods
test
add
sub
roll
and
and
int3
cmp
cmp
xchg
enter
sbb
jne
jmp
jno
daa
mov
mov
dec
push
jbe
jp
faddl
ja
outsl
adc
test
add
jl
xchg
mov
xchg
mov
std
push
sarb
mov
add
lahf
inc
imul
xchg
or
and
or
xchg
push
xchg
addb
pop
fiaddl
dec
aam
or
ret
jb
inc
xchg
pusha
cmp
sbb
incb
xchg
cltd
repz
xor
lods
data16
jecxz
fimull
xor
aad
movsb
xor
or
mov
mov
xchg
mov
cmpsb
addb
mov
sbb
mov
inc
notb
push
ret
push
lret
dec
xor
and
lret
add
adcb
movsl
inc
sbb
mov
pop
call
adc
or
and
das
cmc
xchg
lcall
xchg
jnp
loop
inc
add
adc
sub
push
loop
xor
mov
cld
mov
inc
in
jb
movsl
fisttps
sbb
jbe
mov
sub
pop
shl
movsl
pop
adc
xlat
dec
aam
jl
dec
add
mov
mov
std
xor
test
stc
sarb
push
mov
int3
xchg
add
test
mov
enter
or
xor
insl
movl
pop
call
dec
jle
daa
in
stos
test
or
je
inc
sarl
fnstenv
inc
sub
push
pop
or
les
pop
loope
mov
push
pusha
fstpt
pop
or
push
adc
xor
lock
xor
jnp
int
sub
inc
jne
inc
push
dec
xchg
test
movsl
insl
call
push
insb
rolb
mov
jmp
es
insb
mov
in
add
notb
sub
lock
scas
xor
fstpl
fwait
dec
and
mov
hlt
and
movsb
and
and
shrb
push
ret
imul
shlb
cmp
shl
int3
sbb
push
daa
adc
cs
cmp
sub
push
xor
out
es
addr16
mov
or
mov
lods
ljmp
or
or
sub
adc
jae
push
xor
repz
movb
pop
inc
cmp
or
jl
or
aas
test
xchg
dec
dec
jmp
mov
cvtpi2ps
stos
fistps
fbstp
mov
movsl
push
fcmovnu
pop
xchg
pop
xchg
das
sub
or
mov
cmp
loopne
add
cmp
and
out
data16
sti
mov
xchg
pop
sahf
adc
fcmovb
ret
loopne
or
dec
popf
adcb
adc
clc
sbb
or
pop
sbb
dec
loopne
inc
adc
lds
xchg
mov
and
add
sub
sar
rolb
lock
fwait
add
mov
xchg
loope
push
or
test
dec
or
add
inc
or
push
lds
pop
inc
sub
daa
ret
mov
jo
lods
shr
loop
cwtl
push
mov
rorb
cld
push
mov
outsl
adc
mov
mov
mov
aam
mov
inc
add
inc
mov
pop
pop
xchg
inc
push
push
dec
jg
loop
add
dec
jns
inc
push
dec
dec
push
inc
inc
inc
cmp
push
push
dec
inc
push
jns
cmp
mov
and
jecxz
jecxz
in
push
rorb
aam
clc
fdivrs
sbb
mov
in
in
sbb
jb
in
in
in
in
sub
xchg
push
dec
inc
inc
inc
inc
das
dec
inc
push
movsb
pop
repnz
push
pop
ja
or
scas
push
inc
push
repnz
xchg
inc
push
dec
push
xchg
fs
inc
xchg
xor
and
call
or
repz
and
add
mov
aad
jl
add
inc
sub
mov
add
inc
sti
and
dec
addl
sbb
hlt
inc
or
cmp
in
mov
pop
add
sahf
and
adc
xor
lock
ss
push
mov
ds
loopne
cmp
dec
xor
dec
cmp
xor
in
add
pop
inc
mov
inc
push
cmp
loope
jmp
push
sbb
nop
cld
nop
adc
test
int3
mov
inc
aam
mov
lock
sti
cmc
add
fcoml
shll
fsubl
pop
dec
ds
sbb
mov
outsb
jb
test
mov
push
out
or
es
push
push
adc
inc
mov
cmp
pop
cmp
jno
add
mov
addr16
out
int
mov
pop
xor
mov
bound
in
adc
xchg
cmpsl
repnz
ljmp
loopne
movsb
jae
shlb
jbe
push
xchg
xlat
mov
call
movsb
xor
and
lcall
sbb
xchg
xchg
out
inc
jmp
and
mov
fistpl
repz
ret
ja
fisubrl
test
aaa
cmovno
adc
inc
not
test
jle
and
push
inc
leave
mov
adc
push
scas
movsl
xor
adc
pop
loop
cmc
inc
jns
push
fcmovb
les
jp
fisttpl
add
cmp
mov
in
loope
imul
pop
mov
jecxz
adc
cmp
shrb
sub
loopne
mov
scas
pusha
adc
roll
cs
movsl
pushf
mov
sub
mov
shlb
fdivrs
shrl
test
adc
add
jo
xor
mov
out
push
rolb
sahf
pop
shr
sub
sbb
mov
int3
ret
ret
cmp
ret
adc
shrb
cmp
inc
or
enter
push
sbb
cmp
adc
dec
jmp
call
add
rcr
stos
cmp
nop
mov
sbb
fstl
in
or
or
xchg
test
cwtl
inc
mov
mov
leave
adc
push
in
adc
inc
in
iret
inc
in
les
icebp
mov
dec
ljmp
sub
out
dec
sub
mov
push
push
dec
in
inc
push
je
out
clc
in
test
lcall
bound
and
sbb
fucomp
js
or
mov
repnz
decl
das
ja
push
dec
andb
loope
rorb
stos
aam
leave
push
push
dec
push
lock
cwtl
add
pop
jne
add
sarb
nop
das
lods
xchg
sub
jmp
pop
xchg
js
movsl
loope
jp
pop
nop
outsl
or
add
dec
xchg
inc
fisttps
mov
pop
sbb
int
and
mov
or
cmp
cmp
adc
cmp
cmp
and
movb
pop
dec
imul
aam
repnz
dec
or
lcall
xchg
andl
roll
adc
es
pop
mov
cld
mov
sarb
inc
jb
mov
mov
push
push
add
lea
repz
addl
jl,pt
sbb
push
xlat
mov
push
lds
adc
in
or
mov
and
or
inc
shlb
and
mov
in
sbb
sub
mov
push
fs
mov
dec
lock
push
les
mov
mov
cltd
mov
adc
push
or
cmpsb
jnp
jmp
inc
sbb
ljmp
mov
or
test
sub
inc
mov
pop
test
out
or
or
aaa
inc
adc
shrb
sub
and
fadds
stos
sub
les
imul
imul
rorb
cmp
in
dec
pop
aas
cmp
and
repz
pop
add
or
pop
in
adc
xor
jb
add
sbb
imul
inc
hlt
adc
mov
jge
mov
int3
das
stos
inc
mov
dec
add
sbb
xorl
mov
mov
push
leave
fistpl
mov
aaa
inc
xchg
cmpsb
push
jo
and
add
inc
fucomi
cmp
mov
xchg
xchg
sub
mov
inc
and
push
mov
mov
dec
loope
mov
adc
ret
aas
pop
ret
lahf
sub
and
mov
and
aas
and
inc
sti
push
fdiv
mov
mov
std
and
enter
test
sub
push
add
pop
add
int
cwtl
sti
lcall
and
sbb
pop
xor
cld
pop
pushl
lea
sbb
imulb
mov
leave
and
mov
adc
dec
mov
call
nop
adc
and
add
xor
imul
sbb
sbb
in
add
negb
lcall
inc
aam
jne
shll
cmp
adc
outsb
xchg
cmp
lahf
jo
sbb
mov
add
notl
sub
add
push
enter
inc
scas
dec
inc
add
sbb
repz
gs
fs
nop
pop
and
and
xchg
outsl
or
add
mov
mov
sti
mov
push
cmp
bound
push
test
mov
rorb
push
push
cmp
dec
sub
jbe
add
cmp
xor
lahf
xchg
dec
clc
sbb
inc
enter
cmp
add
sub
push
ret
shr
or
mov
imul
pop
push
daa
aas
xor
jmp
push
cmp
pushf
test
cmc
in
aaa
aam
inc
or
ret
enter
test
repnz
and
pop
push
jns
push
cmp
in
stc
inc
push
out
xchg
adc
and
cs
add
mov
push
pop
ja
pop
sbb
inc
cmpsb
sbb
xchg
push
in
add
xlat
in
jb
dec
lret
stc
xchg
sub
inc
subl
sar
mov
lahf
cmp
adc
cmc
and
or
mov
fsubr
xor
js
sti
adc
shlb
adcl
jl
mov
jecxz
cwtl
mov
pop
mov
jne
adc
add
push
and
or
inc
or
loop
nop
inc
int
sti
lret
pushl
cmpb
sbb
insb
push
adcl
mov
adc
mov
lods
out
sbb
lods
sti
cmc
les
xchg
pop
in
inc
inc
cmpsl
lea
xchg
lcall
jb
sbb
popa
sub
ret
je
pop
lea
in
in
std
mulb
add
dec
fwait
ret
movsb
push
scas
xlat
pop
cltd
jbe
mov
das
jnp
mov
push
xor
stc
lret
push
fwait
inc
adcb
in
adc
mov
push
push
adc
mov
rorl
mov
sbb
xchg
mov
rolb
lods
cmpsb
icebp
lcall
or
add
xor
outsl
sub
dec
ja
xor
jo
or
dec
ffree
repnz
outsl
mov
fsubrl
mov
mov
imul
sbbl
bound
rcr
inc
sub
cmpb
movsl
and
fistpll
jae
jnp
imul
jecxz
aas
call
add
mov
mov
add
jmp
rcrb
lods
push
mov
in
and
ja
dec
push
cmpsb
mov
inc
jne
jbe
add
xor
or
es
in
xor
jno
add
sub
scas
incl
and
cmpl
push
loopne
inc
mov
iret
inc
mov
fchs
fiadds
out
push
ja
xor
adc
pop
and
add
push
ja
inc
popa
dec
sub
rorl
mov
add
test
adc
rcrl
or
jno
sub
add
add
negb
xchg
push
push
push
add
js
ds
cmp
jno
add
inc
xor
orl
icebp
xor
dec
das
cmc
shlb
pop
sub
jbe
and
add
push
or
or
sahf
out
or
adc
inc
add
mov
push
xchg
adc
push
add
cld
icebp
es
mov
xchg
dec
dec
xor
add
hlt
xor
xchg
mov
dec
sahf
push
ss
add
nop
in
add
and
xchg
mov
ljmp
xchg
mov
loope
pop
push
jle
roll
shll
dec
inc
clc
imul
leave
dec
cmp
xchg
js
cwtl
sub
cmp
add
les
ja
in
je
add
loopne
bound
hlt
adc
xor
mov
stos
ss
inc
sbb
repz
push
fwait
sbb
ljmp
mov
fs
aaa
in
orl
loopne
inc
rolb
lds
les
stos
sub
add
sub
pop
and
aam
cmpl
clc
add
sbb
inc
or
or
mov
into
shll
push
push
or
adc
and
fadd
clc
nop
arpl
imul
push
pop
add
icebp
aam
bound
test
mov
mov
or
push
mov
xchg
add
int
or
pushf
repnz
mov
pop
aaa
shl
cs
icebp
dec
cmp
mov
pop
loop
or
xor
mov
pop
scas
push
repz
xor
adc
sub
xchg
divl
imul
cmp
or
nop
sbb
pop
xor
jno
xchg
jecxz
add
repz
orl
out
jecxz
pop
hlt
jg
lret
jmp
and
jne
add
xchg
sub
std
shll
int3
jne
clc
loope
aad
and
and
test
sbb
vpunpckhbw
pop
dec
cmpsb
xor
cmp
or
or
mov
mov
test
dec
gs
dec
xchg
mov
add
hlt
adc
pop
orl
jno
push
jnp
or
lret
daa
or
or
and
and
jecxz
shrl
fadds
xor
push
push
mov
cmpsb
push
mov
pop
popa
incb
or
add
cmp
xor
movsl
cld
arpl
jmp
in
movsl
mov
sbbl
pop
mov
testb
ja
rcrl
repz
cmpsl
mov
and
sub
or
mov
pmulhuw
mov
mov
mov
fiaddl
cmp
iret
shlb
add
mov
icebp
test
or
mov
call
sub
testb
adc
add
aam
sahf
add
out
add
orb
and
out
int3
iret
adc
jo
push
out
or
push
ret
dec
pop
out
ret
fisttpll
inc
or
jl
pop
lea
rorl
cwtl
ljmp
fildl
xor
push
ss
fbld
imul
out
lea
xchg
fdivrs
xor
in
lret
divb
add
push
sub
shrb
setb
int3
lds
pop
mov
push
xchg
bound
ret
add
inc
pop
nop
push
in
adc
dec
adc
in
push
xchg
into
dec
add
add
cmp
sbb
call
call
dec
xor
add
add
mov
push
push
pop
xchg
and
ret
enter
lock
les
and
xadd
push
pop
ret
mov
loop
push
ret
enter
cmp
and
push
sub
xor
mov
xor
sbb
or
movsl
xchg
in
jmp
cmp
loopne
pusha
subl
cmp
and
or
cmp
xchg
cmp
gs
or
aad
sub
push
or
loop
dec
sub
popa
or
sub
add
or
data16
les
scas
sbb
outsb
outsl
mov
xorl
jmp
enter
mov
inc
enter
jae
rclb
cmp
and
cmpl
add
add
dec
loope
mov
popf
mov
nop
pop
pop
sub
mov
pusha
dec
push
into
lahf
mov
add
sub
shl
push
arpl
lods
pushl
cld
push
insl
bound
jb
je
jbe
js
jp
xchg
shll
adc
push
icebp
sbb
adc
xor
mov
and
push
bnd
push
xlat
or
adc
lock
cmpsl
inc
iret
lds
xchg
scas
test
insb
adc
dec
adc
inc
xchg
iret
ja
imul
push
push
clc
add
js
sarl
js
insb
push
pusha
jo
push
testl
inc
inc
dec
shrb
adc
dec
jae
clc
push
pop
adc
adc
dec
incb
adc
sbb
fcompl
push
jmp
push
enter
sbb
adc
stos
xchg
or
inc
addl
test
push
sarl
adc
adc
or
xor
popa
imul
out
loopne
leave
testl
cmp
and
andps
fists
add
inc
push
das
push
inc
or
sub
call
fwait
mov
dec
inc
daa
xchg
hlt
dec
orb
jle
xchg
jo
loop
inc
adc
dec
adc
in
mov
mov
cmp
insl
inc
aam
pop
mov
pop
sbb
ljmp
cmp
xorb
dec
xchg
rol
ret
loopne
add
xchg
lock
adc
sbb
cltd
sbb
xor
mov
lods
add
dec
cmp
mov
frstor
mov
or
push
aaa
mov
or
or
sub
adc
mov
gs
stc
mov
sbb
pop
mov
mov
popa
pop
push
cmovl
imul
push
je
and
jl
ficoms
js
mov
fists
adc
rorb
jp
iret
adc
aam
daa
lret
xchg
push
mov
data16
movsl
sub
sbb
fldl
into
mov
cld
sbb
xorl
inc
push
lods
int3
push
enter
adc
push
mov
mov
push
enter
inc
adc
sbb
push
loop
ss
or
and
mov
sub
add
sbb
dec
pusha
mov
sbb
and
les
xchg
adc
push
movsb
xor
out
nop
jle
push
xchg
xor
icebp
inc
clc
sti
out
lock
adc
popa
in
cmp
dec
std
sbb
mov
mov
pop
pop
xor
test
andl
inc
or
iret
aad
add
sub
mov
mov
add
dec
pop
movsb
ss
jmp
pop
or
in
movsb
sbb
mov
and
or
pop
imul
pop
add
mov
inc
push
ds
xor
inc
jl
lret
pop
cltd
cli
mov
inc
mov
mov
sbb
loopne
ret
push
mov
addr16
dec
dec
sti
or
lock
aam
subb
arpl
xchg
add
pop
add
add
mov
addr16
inc
aas
dec
and
cmp
gs
fbld
cwtl
adc
cmp
and
sbb
push
xor
pop
scas
add
inc
sbb
mov
fimuls
inc
sahf
dec
sbb
out
add
pop
mov
adc
in
dec
outsl
mov
ds
insl
addl
addr16
cmp
and
scas
pop
dec
test
mov
xor
lahf
push
push
sahf
or
addr16
rorl
xor
sbb
lahf
cmc
cld
fnclex
rcrb
push
sahf
adc
xor
test
inc
pushf
mov
push
cwtl
inc
pushf
das
mov
lret
fldl
inc
adc
xchg
sub
das
push
shrb
jo
sahf
mov
pop
or
inc
mov
in
add
outsl
outsl
imul
dec
jecxz
pop
pop
sub
sub
or
les
adc
aaa
sub
daa
jns
fbld
inc
and
cmp
cmp
cld
and
jo
shlb
out
es
das
push
mov
and
and
cmpsb
sub
jo
mov
jg
sub
in
testl
ficompl
push
inc
js
fstps
negl
cmp
sub
add
sub
sbb
push
sub
and
cld
xor
or
adc
add
aas
or
xor
fiadds
add
movsb
shrb
sub
push
dec
outsl
push
jmp
daa
fs
sub
popl
sbb
cmp
sbb
dec
lcall
adc
jmp
pushf
pop
and
and
stc
and
and
xor
frstor
sbb
xor
and
push
roll
pop
mov
add
and
mov
sbb
outsl
jb
sub
cmp
adc
mov
pop
or
shll
das
xchg
sub
or
in
add
inc
inc
aaa
jno
bound
jo
inc
add
cmp
xchg
test
aaa
flds
outsl
divb
or
push
sbb
es
mov
xchg
inc
call
rorb
mov
jne
sub
add
push
xor
inc
push
adc
xchg
stos
pop
mov
pop
les
and
insb
sti
add
cmp
and
inc
add
pop
jno
sbb
sbbb
les
or
adc
or
or
test
sbb
xor
bound
or
rorl
and
pop
push
sbb
jo
dec
scas
or
test
inc
sub
jo
lods
and
push
mov
and
fmull
loope
adc
push
punpckldq
push
cmp
sbb
xlat
insb
jbe
jne
xchg
dec
rcrl
hlt
imul
aam
sub
enter
fcoms
imul
dec
insl
mov
mov
in
lret
mov
movsl
jmp
aam
idiv
jae
push
movsl
xor
pop
adc
outsb
mov
push
mov
xor
inc
imul
or
mov
femms
and
aam
and
jne
xor
xchg
stos
sbb
in
fs
das
insl
jle
adc
mov
push
mov
push
jle
adc
sahf
inc
mov
cmpsl
jne
adc
aad
pop
gs
mov
dec
addl
or
jae
arpl
mov
cs
dec
or
jp
addb
add
xchg
sbb
sub
push
repnz
or
or
and
inc
outsl
lahf
push
lock
cmc
mov
or
sbbb
pusha
clc
rcrb
mov
lahf
jp
push
jb
mov
hlt
dec
inc
xor
or
inc
push
sbb
scas
testl
push
dec
push
inc
push
inc
dec
dec
inc
dec
dec
push
inc
add
ds
gs
daa
mov
hlt
sub
inc
int3
leave
push
adc
jnp
push
sbb
push
and
xor
or
ss
bound
daa
aaa
sbb
movsb
sub
fstpt
pop
xchg
cmp
sub
mov
movhps
cltd
sbb
fcoms
push
loopne
movsb
mov
das
xchg
loopne
and
arpl
les
leave
aad
pop
cmp
sbb
leave
add
mov
sbb
nop
shrb
aam
xor
rcrl
cmp
mov
adc
imul
dec
mov
mov
xor
xchg
fisubrs
pusha
pop
insl
movsb
mov
sub
or
sub
or
cmpsl
cmp
add
inc
notl
and
and
dec
jae
or
sub
popa
sub
mov
sub
push
xchg
loopne
add
std
scas
pop
dec
xor
insl
lock
and
add
lret
sub
push
cli
inc
xor
loope
imul
adc
lods
in
sub
inc
xchg
ljmp
xchg
andb
jmp
shll
jnp
bound
pushl
mov
adc
sti
cmpl
mov
push
push
mov
sbb
test
cmp
and
dec
mov
cmp
add
pop
adc
pop
js
cmpsl
push
daa
cmpb
aam
pop
jbe
adc
frstor
inc
jno
pop
pop
enter
sub
add
cltd
pusha
or
js
lods
pop
shlb
repnz
mov
cmp
pop
cmp
jle
inc
sub
je
mov
jb
jl
outsl
roll
test
xlat
insl
in
daa
inc
cld
call
push
mov
mov
dec
xor
jne
dec
shrb
fildll
lret
fldt
faddp
xor
inc
push
fwait
and
sub
in
packssdw
jae
arpl
mov
sub
xor
inc
push
inc
push
push
dec
dec
dec
inc
dec
dec
dec
repnz
daa
sbb
push
mov
jg
sbb
sbb
das
mov
div
mov
aam
lock
test
das
push
or
aam
jne
xchg
das
xchg
clc
xchg
loope
cmp
adc
sbb
test
adc
arpl
pop
sti
enter
in
inc
jo
push
rolb
xor
mov
loopne
negl
cld
jmp
addl
pop
inc
jbe
dec
cmp
dec
in
mov
jmp
mov
cmpb
fwait
das
clc
lds
add
xchg
sahf
sub
push
pop
push
push
dec
dec
and
inc
pop
cmp
inc
addr16
adc
sbb
xchg
mov
fstpl
and
int3
push
mov
inc
xchg
sbbl
mov
jne
out
addr16
outsb
dec
fwait
sbb
dec
push
femms
bound
mov
xor
add
notl
add
add
popf
add
hlt
mov
jo
int
rcrb
mov
and
mov
inc
and
dec
sbb
jno
push
out
pop
mov
pop
cmp
dec
or
mov
mov
add
and
and
pop
jnp
mov
inc
mov
movsl
sub
clc
pop
mov
jns
cmp
lods
or
or
adc
mov
adcl
fwait
adc
and
and
pusha
ja
pop
inc
into
jl
lods
notb
xor
es
push
sbbl
mov
add
inc
pop
orl
gs
adc
sbb
dec
aas
dec
dec
push
hlt
pop
loop
sbb
rcr
jmp
adc
movsb
dec
fcomp
xchg
lahf
inc
or
adc
adc
push
cmpl
sbb
sbb
cmp
outsb
pop
or
lret
movb
lods
sub
ja
sub
pushf
mov
push
sbb
into
pop
test
insb
int3
xor
cmpsl
bswap
ret
add
mov
or
add
nop
add
pop
pop
pop
stos
add
inc
dec
cmpsl
mov
or
xor
insb
cmp
or
jo
test
mov
ficomps
pop
xor
stos
push
nop
ret
xor
xchg
and
jecxz
and
inc
and
and
cmp
add
test
sarl
pop
aaa
or
cwtl
push
cmp
push
dec
mov
bound
adc
loopne
sbb
jp
xor
pop
inc
dec
and
or
ss
xchg
jge
dec
sub
adc
sbb
popa
ror
ret
dec
push
push
sbb
mov
push
es
jne
xchg
sbb
fldt
sub
filds
add
call
out
mov
jns
jne
xor
in
and
sbb
jg
jg,pn
or
stos
push
sbb
dec
fwait
adc
cmpsl
inc
jge
stc
push
sbbl
ds
shrb
cmpb
pop
dec
inc
xchg
insb
mov
jo
rol
out
sbb
xor
and
inc
mov
loope
sbb
sbb
call
loop
outsl
add
mov
pop
rolb
add
add
push
push
dec
pop
shlb
add
or
jno
cmp
sub
mov
add
or
sub
clc
sbb
aam
idivb
pop
fwait
insl
sbb
pop
cmp
testl
sbb
ret
ret
sbb
xor
push
or
sbb
in
pop
pusha
stos
addb
or
fiadds
loopne
movlps
rcl
sub
xlat
cmp
or
push
and
repnz
lcall
push
inc
int3
or
or
sub
je
cmp
fidivs
mov
cmp
mov
lock
xor
aam
xchg
movsl
pop
mov
xchg
xchg
shr
mov
dec
jo
adc
push
jns
jo
cltd
push
adc
push
sub
xchg
and
sbb
jbe
lods
clc
mov
movsb
fwait
movsb
pop
clc
cltd
shrb
cmp
in
mov
in
cmp
adc
add
sub
sbbb
and
popa
rclb
adc
je
jbe
mov
pop
les
pop
adc
out
dec
aas
test
add
pop
aam
cvtps2pd
sbb
dec
imul
sbb
cmpsl
dec
pop
cmp
add
and
adc
mov
aas
add
ds
xchg
rclb
xchg
outsb
sbbb
xchg
or
or
xchg
adc
xor
ds
jno
sub
jecxz
add
sub
mov
mov
popl
sbb
jmpw
lcall
jne
hlt
add
sub
or
leave
inc
in
jne
mov
cmp
mov
cmp
repnz
and
mov
ds
add
and
xchg
inc
rcl
aas
dec
add
or
dec
cld
in
add
push
aas
xor
push
cli
sub
add
dec
inc
mov
std
stos
push
dec
and
js,pn
push
xorl
nop
push
mov
rcrl
sbb
and
into
fiaddl
and
push
into
and
push
repnz
and
aas
clc
imul
push
inc
pop
sbb
push
sbb
or
imul
daa
das
mov
pushf
sbb
inc
jl
adc
jo
arpl
adc
push
je
ja
inc
jo
nop
add
into
mov
xor
mov
test
pmullw
or
inc
mulb
pop
dec
push
xchg
pop
cmp
pop
mov
jle
sub
or
sub
xchg
and
push
mov
loopne
push
dec
push
gs
imul
pop
sub
push
stc
add
inc
lock
insb
and
and
pop
xor
lds
jae
out
sub
push
inc
subl
push
push
mov
sub
mov
xor
add
lods
lods
mov
sbb
sbb
xchg
cmp
fldl
sub
das
sahf
out
fwait
dec
push
lods
pop
mov
xlat
add
cmpsl
je
into
out
call
mov
pushf
dec
dec
mov
les
pop
jp
dec
punpcklbw
mov
fnstcw
jns
scas
adc
or
outsl
pop
xor
rcll
push
push
push
xor
incl
adc
int3
xor
mov
lods
dec
or
sbb
push
or
ds
adcb
lea
push
adc
add
test
in
xchg
inc
movsl
rcrl
jne
push
fmuls
pushf
inc
cs
and
or
push
sub
or
in
push
add
push
xchg
pushf
and
push
jecxz
add
in
and
sub
pop
lds
mov
xor
xor
inc
fidivrs
cmp
add
push
sub
inc
sub
xor
xor
pushf
icebp
popf
jae
adc
fstps
loopne
or
gs
rorl
sti
lds
lret
inc
mov
repnz
add
dec
jb
mov
test
mov
push
push
jb
xor
xchg
shrb
inc
xchg
jmp
fimuls
push
sbb
sub
out
fcoml
push
push
roll
cmpsl
or
adc
andb
sub
sub
pop
cmp
inc
scas
xchg
fadds
inc
inc
adc
sbb
or
and
or
das
loopne
in
pop
dec
dec
cld
xchg
das
ss
mov
or
push
mov
cltd
add
pop
imul
and
dec
cmpsb
push
jns
jl
movsb
loopne
dec
adc
fldcw
and
clc
pop
test
daa
mov
add
xchg
dec
and
je
xchg
movsb
mov
lcall
and
xchg
xchg
adc
cwtl
mov
ja
mov
xorb
push
subb
mov
test
push
in
jns
adc
or
loop
dec
jo
pop
add
pop
adc
push
and
cs
je
cs
mov
sbb
inc
sub
popa
jl
jl
add
adc
mov
je
es
inc
test
ss
xchg
dec
and
add
lea
inc
movsb
outsb
movsb
and
jno
nop
cmpsl
sbb
xchg
mov
mov
and
mov
and
pop
cmp
lahf
stos
movsb
cmp
adc
dec
fwait
int
and
popa
movsb
bound
pusha
xchg
push
leave
and
and
adc
addl
das
pop
xor
inc
jns
push
shlb
xor
or
cmp
hlt
or
or
xor
mov
adc
inc
xchg
push
jge
scas
call
gs
pop
add
jl
fiaddl
push
add
inc
add
push
test
or
inc
aad
mov
pop
outsl
inc
inc
in
and
enter
or
mov
sub
inc
dec
pusha
lods
cltd
popf
sub
xor
daa
insl
repnz
push
adc
cmp
rcrb
pop
and
sbb
imul
imul
cmpsb
imul
imul
push
inc
add
loopne
pop
xlat
cmpsl
or
adc
adc
sbb
imul
lahf
or
enter
and
lcall
add
push
dec
movsl
jmp
sub
inc
pop
into
xor
adc
fdivrs
sbb
movsb
push
push
or
push
jl
jmp
or
in
mov
or
cmp
mov
int
adc
mov
jl
adc
mov
or
in
ret
sub
incl
pop
aam
test
add
and
or
setae
sbb
adc
rcrb
cmpl
in
jb
jmp
inc
push
mov
add
jmp
push
repnz
popa
fnsave
sar
sub
push
inc
imul
pop
push
lcall
imul
xchg
xchg
int3
mov
int3
sbb
add
pop
dec
fwait
xor
mov
leave
enter
pusha
test
je
inc
rolb
popf
ret
clc
aad
idiv
pop
mov
fildl
fdivs
mov
fwait
jmp
jbe
dec
ficoms
mov
je
mov
pusha
mov
push
push
fdivs
fimuls
add
mov
fwait
aaa
inc
sub
jl
xor
insl
or
leave
sub
adcl
xchg
fldcw
or
adc
inc
push
cltd
push
cs
insl
xchg
xchg
adc
sti
aaa
push
adc
xchg
or
push
nop
push
leave
inc
push
sub
pop
rcr
fwait
mov
push
out
pop
push
inc
in
inc
mov
cmp
jo
inc
mov
mov
fs
mov
cmp
dec
ja
jb
xor
movsb
and
jmp
fs
das
pop
jl
shrb
mov
xchg
dec
fcomps
out
adc
mov
scas
in
or
popa
push
push
mov
popa
hlt
mov
xchg
imul
pusha
cmpsb
xor
inc
subl
aam
orb
sbb
sbb
lret
sub
and
xchg
push
add
xor
sub
jp
sub
adc
adc
into
add
inc
aaa
in
push
lea
sbb
jns
dec
rolb
int
inc
imul
and
ret
setg
daa
xor
sbb
sarb
inc
je
add
or
lret
ss
and
bound
fs
or
or
xor
lret
sbb
pop
dec
pop
fstpl
icebp
add
cs
pop
sbb
dec
xchg
nop
test
loope
and
insl
add
fimull
insb
pop
fcmovb
jmp
xchg
aad
dec
sub
pop
jo
int3
mov
xor
dec
mov
mov
nop
push
push
or
test
pop
test
add
add
inc
pop
sub
push
push
mov
adc
push
or
push
add
andb
paddd
fs
mov
pop
xchg
xor
or
pop
pop
cld
and
cmp
aas
mov
hlt
mov
xchg
outsb
ljmp
inc
push
insb
pushf
pop
jo
cmp
int3
pop
jno
and
cmpsl
dec
xor
loopne
cwtl
xor
repnz
xor
fmuls
cld
mov
inc
pop
vunpckhps
inc
pop
mov
or
cltd
jmp
addb
push
shlb
or
push
sub
das
das
lsl
andb
pusha
jg
add
sub
lahf
lret
push
or
or
cmpsl
hlt
push
xor
int3
dec
stos
sub
movsb
imul
adc
rcrb
je
fsts
jl
xchg
leave
in
and
xchg
in
lret
iret
cmpsl
fsts
xchg
std
or
inc
scas
inc
popa
xchg
outsl
dec
inc
pop
cmp
inc
xchg
dec
jno
cmp
dec
icebp
or
inc
xor
dec
sub
jg
decl
je
insb
sub
sub
sub
xchg
add
lods
aas
es
popa
arpl
test
dec
and
mov
adc
jle
add
sarb
ljmp
push
loopne
sub
movsl
repz
mov
js
adc
leave
xor
mov
mov
pop
inc
and
test
push
clc
adc
and
and
mov
xor
push
jl
mov
push
fs
xchg
test
mov
mov
insl
inc
inc
cwtl
pushf
pop
in
nop
lahf
in
jp
pop
pop
fcomps
nop
cld
pop
pushl
rol
pop
mov
jg
fidivl
fcompl
push
pop
xchg
addl
popf
dec
orl
pusha
xchg
xchg
out
arpl
push
inc
or
inc
xor
scas
adc
rclb
sbb
mov
aaa
jo
and
push
or
ficoml
mov
jmp
nop
or
sub
roll
js
dec
outsl
mov
adc
xchg
adc
or
or
add
cmpsb
xchg
lahf
das
or
push
dec
in
pusha
sarl
xlat
mov
pop
fistpll
movsb
or
or
imul
mov
pop
jl
and
arpl
mov
bound
bound
fs
pop
xor
clc
mov
leave
and
hlt
mov
cmp
jmp
adc
dec
sub
dec
repnz
js
mov
sbb
nop
bound
add
inc
leave
or
shlb
lcall
subb
push
outsl
cmp
xchg
fnsave
adc
push
addr16
sbb
shr
arpl
inc
insb
subl
sbbb
add
xchg
fildl
shrb
adc
in
dec
or
inc
daa
adc
or
mov
jnp
mov
stos
mov
inc
lock
push
dec
push
inc
repnz
adc
mov
pop
fadds
mov
xchg
mov
cs
cmpsl
push
sahf
mov
pop
aaa
test
repnz
sub
fcmovnb
sahf
cmp
pop
fs
les
fildll
aaa
aaa
inc
mov
das
test
push
mov
cmp
bound
lcall
jo
inc
dec
scas
repz
lahf
inc
sbb
dec
jl
pushl
push
add
das
push
call
std
add
popa
hlt
scas
inc
in
punpckhbw
outsb
and
xchg
and
and
push
dec
gs
add
xchg
adc
mov
sahf
xor
add
inc
or
xchg
test
inc
pop
mov
push
push
repnz
in
jae
mov
pop
notb
sbb
ja
mov
jbe
pop
xor
xor
inc
nop
or
and
pop
pop
sub
xchg
push
xor
or
out
or
xchg
push
inc
mov
pop
mov
or
push
sbb
inc
add
or
add
add
pop
dec
arpl
or
mov
testl
xlat
sbb
ss
sbb
add
adc
sbb
addr16
jo
mov
pop
add
push
sbb
jns
xchg
adc
or
sbb
out
test
adc
addr16
dec
dec
repz
addr16
xchg
aad
rorb
xchg
sub
pop
or
or
incl
sub
dec
js
and
sarl
movsb
push
aam
mov
js
mov
dec
mov
or
mov
cmpxchg
lds
sub
add
pop
sub
push
mov
inc
imul
aas
scas
push
xchg
mov
fmuls
mov
push
ljmp
daa
and
mov
cmp
dec
and
add
lahf
dec
pop
xchg
dec
clc
js
sbb
mov
cmp
subb
pop
imul
pop
sub
dec
or
daa
xchg
mov
imul
dec
push
push
imul
outsl
filds
sbb
pop
inc
or
adc
mov
add
incb
mov
lret
out
cmp
or
mov
or
xchg
or
add
inc
inc
xchg
test
xor
and
jno
xor
out
in
adc
or
inc
sbb
sbb
or
int3
cmp
fwait
cmpb
lea
jne
enter
pop
aas
and
in
or
dec
mov
outsb
dec
xchg
or
pop
stos
inc
mov
test
pfadd
mov
mov
mov
adc
add
arpl
inc
test
adc
cs
dec
dec
adc
sbb
imul
jae
out
das
add
push
pop
cmpsl
mov
adc
xor
mov
push
test
inc
sub
or
or
inc
cld
hlt
popa
or
cld
or
and
outsb
dec
and
or
outsb
dec
jbe
jo
jae
nop
lock
cld
fbld
add
inc
sub
aaa
inc
outsl
add
sbb
lea
and
and
cmpsl
add
push
jne
pop
lods
mov
adcl
add
fnsave
jge
mov
sub
je
dec
pop
push
and
sub
sub
pop
jle
rolb
inc
pop
inc
jo
push
lds
jb
fs
jo
jo
insb
lea
mov
sysret
add
shll
fistps
fidivl
xlat
addb
xchg
mov
and
addr16
xorb
mul
mov
fldt
rcll
inc
pop
addb
add
out
inc
adc
testb
repz
out
or
jmp
aam
js
add
mov
leave
arpl
outsb
jno
and
adc
movsl
mov
xchg
adc
xacquire
sbb
jb
imul
or
inc
jae
movsl
fildl
sahf
dec
movsb
hlt
cld
cmpsl
xchg
inc
fcompp
sar
roll
outsl
lea
add
pop
mov
rcrl
fmuls
sub
dec
call
in
jecxz
push
adc
mov
xlat
std
jb
adc
sbb
pop
jb
popa
inc
fidivrs
outsl
adc
arpl
inc
push
jb
or
leave
rclb
push
push
sub
and
push
push
xchg
jnp
lret
lcall
dec
jnp
test
inc
jmp
pop
hlt
imul
addl
rcll
push
popa
pop
inc
xor
pop
mov
fistps
enter
dec
jne
add
jne
jne
das
inc
push
cli
sub
orl
sbb
add
or
xor
shrb
loopne
dec
int3
mov
nop
add
jo
pusha
xorl
add
xchg
sub
and
pusha
movsb
pop
and
vaddss
push
jne
scas
je
push
and
daa
and
and
popa
cmpsl
das
js
ja
add
jb
sub
movsb
add
insb
xor
cmpsl
mov
jbe
shll
adcl
push
fs
mov
pop
cltd
les
sub
sbb
sbb
fstpl
and
sbb
mov
cmp
inc
or
dec
jmp
cmp
inc
push
xorl
ja
push
mov
pop
adc
push
push
pushl
sbb
xor
mov
roll
add
sbb
xchg
js
adc
dec
mov
cmp
ss
or
movsl
push
jno
adc
or
xor
adc
mov
push
pop
inc
js
movl
mov
dec
mov
inc
mov
xchg
lret
in
mov
adc
rcrb
pop
or
xchg
jns
xchg
mov
nop
dec
jp
pop
lahf
dec
lret
fstl
and
mov
roll
imul
jbe
xor
jo
xchg
adc
sbb
lea
mov
mov
inc
add
and
testb
andl
pop
xchg
fwait
sub
inc
rorb
and
or
push
lock
sub
mov
and
push
push
push
adc
adc
sbb
cmp
xchg
push
xchg
adc
sbb
and
outsb
sarb
mov
xor
pop
xor
or
jo
pop
ja
sarb
push
add
push
pop
cltd
add
stc
sub
mov
jnp
pop
mov
pop
cmp
sbb
enter
dec
pushf
stos
push
or
addl
adc
lret
leave
sbb
in
add
imul
and
addl
inc
inc
cld
cmp
cmp
inc
cmp
mov
mov
mov
or
add
insl
or
test
xchg
les
jle
inc
fmull
or
stc
jge
test
pop
test
lock
xorb
jmp
add
std
mov
clc
inc
pop
inc
sub
xchg
mov
movsl
test
xchg
push
or
scas
lods
loop
lods
jno
cmp
push
adcl
insl
adcl
dec
js
add
cmc
sbb
mov
pushl
sbb
add
xor
mov
pop
jle
and
push
ret
sbb
mov
sbb
and
lock
imul
adc
push
mov
push
inc
jmp
aaa
push
cli
push
mov
or
pop
in
sub
xchg
push
push
and
xchg
dec
push
adc
add
rorb
jo
sub
nop
sub
inc
out
outsb
sbb
or
and
psubusb
push
or
jbe
mov
int
mov
testl
mov
add
xchg
sub
fldcw
test
and
jns
orb
mov
or
dec
push
repnz
test
lds
cld
mov
push
mov
sub
xchg
push
and
xor
and
pop
outsb
fstpt
mov
sbb
adc
int3
sbb
pusha
ffreep
xchg
addl
daa
nop
pop
lret
in
sub
cltd
in
insb
adc
sbb
or
xchg
inc
push
push
or
jmp
jbe
pcmpgtb
xor
adcb
sub
gs
inc
data16
adc
adc
ljmp
or
loope
add
movb
fdivl
lock
mov
cmp
enter
in
inc
fstl
dec
mov
shrb
add
sub
lods
faddl
mov
clc
xorb
ss
pop
cmp
or
or
pop
xchg
inc
lds
push
mov
dec
lods
push
in
xor
add
fucomip
das
std
mov
mov
add
sub
mov
pop
loope
pop
mov
pop
clc
jecxz
decl
inc
inc
jmp
das
ret
xchg
push
sbb
aam
jne
sbb
pop
mov
popa
lock
cmp
adc
jmp
and
add
cmp
leave
xchg
jno
add
in
mov
nop
daa
leave
in
pop
mov
pop
add
clc
lcall
dec
mov
push
push
inc
inc
inc
or
push
push
push
inc
dec
inc
push
inc
mov
rclb
fs
movsb
mov
cmp
stos
or
dec
imul
imul
or
loope
pop
std
mov
push
sub
pop
xchg
xor
fcoms
xchg
push
sub
xor
mov
sub
test
sub
and
sahf
xchg
or
sbb
daa
add
dec
push
jmp
lock
lret
push
add
sbb
pop
adc
je
pop
lret
out
mov
push
das
jmp
outsb
cs
jne
aaa
jne
dec
pop
adc
jle
jo
sub
sub
sub
pop
and
notl
mov
jl
push
jo
mov
jne
add
cmpb
adc
or
mov
enter
sbb
popa
or
das
add
push
sub
adc
or
js
out
mov
mov
mov
or
out
mov
cmp
cld
dec
cltd
pop
das
mov
cmp
cmpsl
pop
lods
pop
gs
sub
jne
xor
mov
rcrb
mov
sbb
push
jb
jae
pop
sub
enter
lea
push
jmp
mov
and
sub
movl
cmp
or
add
dec
xchg
sbb
and
insb
jae
movsb
xor
icebp
test
cwtl
pusha
nop
mov
ret
xor
adc
into
adc
cmp
mov
jp
cmpsl
dec
pusha
jbe
and
mov
xchg
inc
adc
lods
ja
push
push
and
ret
cli
imul
cmpl
imul
add
and
mov
rcrb
inc
nop
pop
jmp
lea
test
in
xchg
jg
or
imul
sub
daa
out
aas
sub
xor
pushl
mov
ret
out
fldcw
xchg
cmp
daa
imul
add
push
inc
push
mov
das
ret
in
and
dec
dec
add
pop
mov
add
jg
nop
or
cmp
lret
in
push
mov
cld
pop
jo
pop
in
mov
jne
jne
or
mov
dec
loope
pop
movsl
cmpsl
gs
out
pop
and
push
sbbl
cld
sbb
out
inc
cwtl
mov
cmp
xor
mov
outsl
mov
mov
mov
inc
sub
jne
jb
mov
xchg
clc
in
clc
cs
scas
in
fsubs
jmp
mov
fdivrp
or
sub
inc
lahf
and
xor
xor
test
pop
sbb
mov
and
adc
and
adc
push
sub
adc
adc
or
pop
mov
and
aad
sbb
or
xchg
dec
popa
lods
add
xchg
add
xor
add
dec
pusha
or
xchg
test
ja
jno
jb
mov
clc
jne
cmp
test
sbb
icebp
push
lods
dec
fs
enter
push
mov
xor
mov
scas
test
in
ret
pop
or
js
and
sbb
inc
sbb
mov
jne
xchg
mov
iretw
nop
jb
call
ja
push
sbb
adc
xchg
add
jmp
loopne
repz
cmpsl
or
or
and
popf
xor
ret
cmp
mov
mov
jo
sarb
out
jge
out
push
sbb
insb
push
and
test
mov
aam
mov
imul
mov
cmpsb
jne
or
jp
xor
dec
inc
add
dec
pop
sbb
rep
aad
push
aam
movsb
ss
test
push
call
push
outsb
mov
jnp
adc
test
cmp
add
shl
add
inc
add
lds
add
leave
cmpl
pusha
out
loopne
cmp
lahf
xchg
loope
movsb
push
data16
js
fs
adc
xchg
adc
or
and
pop
mov
mov
das
sub
pop
ja
mov
dec
js
mov
out
inc
test
adc
stc
mov
xlat
je
into
push
je
mov
les
pop
call
andl
leave
popl
push
js
ret
inc
xchg
xchg
sub
add
mov
fisubrl
je
stos
adc
roll
imul
inc
sbb
pop
pop
rolb
inc
cld
or
xor
js
inc
je
fmull
xchg
jg
test
mov
add
push
mov
aad
loop
push
rclb
cwtl
shr
pop
adc
jg
dec
mov
xchg
imul
andb
subb
daa
and
mov
jl
es
gs
jle
sti
jmp
lret
nop
mov
and
mov
pop
and
cltd
jb
push
pop
subl
fldenv
adc
or
pop
and
ja
push
or
aad
xlat
unpcklps
mov
or
cltd
decl
repnz
jno
mov
sbb
cmp
mov
ret
add
fstpt
cli
lds
mov
or
dec
pop
fiadds
test
in
add
frstor
mov
sbb
aas
mov
inc
mov
push
fnstcw
mov
sub
mov
pop
push
or
xchg
jbe
cmc
hlt
mov
and
lock
add
and
popf
and
jmp
repnz
mov
mov
in
mov
push
shr
call
pushf
adc
mov
sbb
fdivrl
xchg
mov
std
aaa
daa
mov
push
or
inc
push
sub
sub
vmovaps
rcll
daa
add
xchg
xlat
jae
xchg
lcall
inc
pop
lock
leave
mov
jmp
addb
cltd
ficoml
mov
movsb
inc
xor
cmp
add
call
push
fnsave
dec
xchg
push
enter
test
mov
and
pop
adcb
adc
and
adc
cmpsl
pop
mov
out
aaa
adc
mov
and
cwtl
mov
sub
cmp
push
addr16
jge
fstpl
dec
pop
or
dec
mov
movsb
sub
lods
shll
gs
mov
loopne
ret
xchg
xor
jmp
les
js
cmp
lea
jb
inc
roll
mov
pop
andl
xor
cmpsb
les
imul
stc
xchg
push
cs
or
xchg
cmpsl
push
imul
pop
adc
dec
add
dec
sbb
pop
adc
sbb
jae
or
push
cwtl
xchg
addr16
aam
add
cmp
push
in
bound
xor
iret
rol
cmp
jg
adc
in
mov
ret
push
xchg
rolb
andb
in
xor
loope
aad
cwtl
nop
pop
cwtl
push
leave
inc
lock
test
js
rorl
dec
push
pop
fnsave
cltd
loope
push
es
cmp
lock
adc
aaa
stc
mov
rcr
cltd
dec
xor
mov
mov
popa
sti
imul
in
cli
jle
fimull
add
daa
add
dec
xchg
cmp
cmp
or
pop
es
movswl
cmp
jne
stos
or
faddl
and
cmp
jg
mov
outsb
or
or
loopne
xchg
mov
jmp
jae
sub
std
cltd
int3
add
enter
pop
cmp
clc
add
and
jnp
lcall
mov
jne
pop
push
imul
add
or
dec
iret
ret
orl
adc
addb
or
inc
mov
inc
lcall
shlb
in
data16
mov
and
addl
test
cltd
in
les
pop
or
insl
or
testb
adc
cmp
xchg
and
test
add
xchg
insl
pushf
rcrb
das
mov
cmpb
cmpl
rorl
scas
iret
mov
jne
fcmovnu
jno
adcl
aam
xor
push
andl
pop
inc
push
lahf
and
or
je
dec
jmp
scas
and
mov
add
mov
inc
icebp
data16
jbe
or
loope
leave
push
mov
mov
pop
andb
addl
int
les
shrb
mov
add
lea
in
jo
flds
pop
shll
push
dec
rolb
pop
fxch
push
jnp
ret
test
mov
sarb
add
fldt
shll
jo
outsb
call
cmp
fnstsw
push
sbb
inc
mov
lahf
les
or
push
inc
jle
hlt
mov
cmp
fldt
arpl
adc
mov
cmpl
push
mov
xlat
adc
mov
jae
or
in
add
push
sub
mov
push
pop
loopne
ficomps
mov
inc
inc
push
add
int3
adc
and
inc
fdivp
int3
add
in
aas
inc
lret
jns
sti
pavgw
mov
mov
subl
and
repnz
push
lcall
pushf
cmp
push
mov
test
pop
pop
inc
mov
push
xrelease
add
dec
pop
or
cltd
int3
bound
and
jo
fcoms
push
cmp
dec
pop
sbb
nop
addb
mov
icebp
sbb
lods
pop
sub
mov
mov
hlt
fwait
add
fdivrl
test
mov
push
mov
pop
in
dec
pop
or
insb
ss
sub
mov
jb
repz
subb
pop
cmp
mov
mov
dec
add
inc
mov
sub
rcrb
pop
adc
loopne
push
loop
movsb
stc
add
or
lock
scas
fcomi
add
inc
movsb
test
loopne
mov
mov
sub
adc
inc
adc
mov
or
cwtl
nop
xor
adc
pop
rclb
outsb
int3
cli
mov
sbb
addr16
push
jbe
or
and
adc
lret
test
mov
je
aaa
rcrb
push
clc
push
add
pop
jne
fcomps
pop
fmulp
sub
jns
cmp
int
je
xchg
mov
jnp
or
rolb
push
mov
jg
lret
push
jo
mov
movsb
sbb
imul
pop
js
icebp
fbld
push
xchg
xor
sbb
lret
xchg
jno
or
les
cmpsl
call
cwtl
xchg
outsl
mov
push
mov
sbb
test
cwtl
cmp
and
in
push
popa
mov
xchg
in
jns
or
jb
cmp
add
movsb
ret
insb
sbb
rorl
add
add
dec
movsl
rcrl
jl
test
dec
cmp
dec
jns
mov
dec
push
xchg
test
testl
divb
or
imul
xor
pushf
pop
insb
inc
xor
lea
ret
cs
mov
xchg
sbb
aaa
daa
xchg
sub
add
jne
mov
and
addr16
add
push
aaa
pop
scas
mov
lock
pushl
cmp
and
test
mov
jae
test
jno
insb
in
xor
xchg
movsb
mov
pushf
xchg
jbe
and
test
pop
push
mov
jns
mov
cwtl
enter
xchg
dec
dec
xchg
nop
sbb
mov
mov
xor
movsl
cmp
mov
lret
cmpb
and
ficoms
je
add
xor
jo
insb
and
insb
push
push
aaa
in
push
in
dec
pusha
pop
loop
or
pop
pop
mov
push
and
pop
lcall
dec
dec
dec
in
orb
push
icebp
add
cs
ja
je
mov
cmp
cmp
sbb
xor
inc
add
xor
mov
sub
jb
xchg
sub
inc
add
inc
and
and
gs
and
and
adc
push
in
adc
adc
nop
lret
orb
inc
add
add
lods
mov
std
cld
std
clc
std
repnz
xchg
xchg
clc
std
hlt
std
hlt
std
dec
push
pop
mov
std
lock
in
std
pop
jns
lret
call
std
fbld
loopne
loopne
icebp
xor
std
xchg
fmuls
mov
sbb
rclb
sbb
outsb
enter
sbb
enter
clts
in
sbb
rol
mov
mov
in
mov
std
int3
std
mov
std
sar
adc
xchg
xchg
mov
std
lods
pop
push
in
lods
test
movsb
sbb
mov
pushf
pushf
cwtl
mov
xchg
xchg
nop
xor
xchg
add
push
in
mov
or
call
in
push
data16
aam
xchg
cwtl
repnz
notl
cli
xor
jb
or
pop
inc
sbb
adc
repnz
add
sub
pop
inc
mov
adc
cmp
jbe
lea
mov
xchg
add
mov
imul
out
xchg
in
add
mov
cmpsl
pop
fimuls
in
mov
or
insl
popa
scas
stc
ret
add
and
cmp
and
cmpl
add
dec
sbb
adc
jnp
sub
int3
mov
in
cltd
add
push
cwtl
and
or
cmpsl
shl
out
push
pop
fadd
pop
mov
test
dec
cli
cmpsb
test
out
out
push
xlat
mov
push
inc
les
lret
xor
fcmovb
inc
xor
popa
xor
loopne
mov
mov
stos
xor
add
fs
ds
imulb
push
popa
or
cmp
imul
adc
ror
sub
pop
leave
adc
es
dec
add
dec
dec
dec
jno
adc
test
dec
ss
clc
add
js
inc
mov
xor
scas
lods
and
stos
iret
xchg
or
hlt
add
add
fldt
xchg
sub
imul
inc
inc
loopne,pn
cld
and
or
cmp
and
jcxz
je,pt
movsl
jo
fs
and
push
mov
lods
xor
inc
lcall
mov
push
imul
cmc
xor
enter
sub
mov
dec
inc
mov
out
and
xchg
mov
add
push
cmp
sbb
and
xchg
mov
or
mov
cmpb
pop
jg
mov
and
clc
jmp
inc
and
push
das
cmp
push
push
add
popa
inc
dec
and
in
add
push
xor
jg
loopne
or
jmp
fsubrl
int3
movsb
sub
cmpsl
add
jle
test
sbb
imul
sub
int3
int3
enter
push
enter
mov
sarb
pushf
cmpsl
push
lock
fcom
data16
cmp
cmp
fistpll
mov
mov
leave
and
mov
lods
mov
mov
lcall
out
push
in
dec
inc
mov
cltd
xchg
xchg
test
cwtl
xchg
lcall
mov
out
mov
cwtl
pushf
pushf
sahf
data16
mov
imul
add
cmp
jge
and
test
call
in
sbb
and
push
jnp
mov
and
insb
fs
int3
pusha
cltd
in
and
insb
cmp
pop
push
mov
in
push
imul
add
lods
rcrb
movsb
inc
inc
daa
or
nop
dec
adc
dec
lcall
xor
lcall
xor
cmp
dec
jae
enter
and
dec
jae
and
cmp
mov
xor
sbb
or
adc
test
insb
adc
xchg
add
sbb
push
pop
ret
nop
add
lea
mov
sbb
or
add
dec
ljmp
or
cmp
loope
mov
lret
cmp
adc
pop
adc
fdivp
scas
sub
daa
sub
add
sub
jb
sub
subl
call
or
and
mov
add
adc
jbe
daa
int
in
insl
adcl
jne
fadds
mov
or
sarb
dec
lcall
enter
dec
mov
sub
mov
int3
lods
mov
cmpsb
in
mov
xchg
cmpsl
sbb
pushf
lods
pushf
inc
pop
adc
cmpsl
dec
add
mov
dec
lcall
test
xorb
sbb
test
push
cmp
xor
xorl
movsb
out
adc
rolb
sub
cs
pop
fs
push
xor
mov
nop
dec
adc
inc
ljmp
xor
in
dec
jnp
dec
dec
add
push
dec
pop
dec
js
in
movsb
or
mov
enter
loopne
stos
aaa
lea
sbb
in
cltd
movsb
es
inc
and
push
push
and
enter
pushf
sbb
xchg
sub
fs
lret
sbbl
add
adc
orb
or
jb
sub
dec
pop
push
add
sbb
adc
pop
pop
notl
add
adc
xor
das
lock
sub
mov
sti
sub
xor
pop
mov
add
ds
add
xor
sbb
jb
int
rorl
lock
aaa
sub
add
sbb
lahf
lock
inc
or
iret
pushf
xchg
stos
aas
call
jo
sarb
add
add
adc
daa
ja
mov
je
add
sub
sbb
addr16
adc
push
push
iret
dec
dec
fimuls
sub
cmpb
and
and
movsl
and
in
nop
negb
rorb
mov
xor
repz
dec
dec
lods
mov
insb
dec
xor
xor
movsb
mov
dec
mov
lea
jge
call
dec
shll
daa
cwtl
mov
int
xchg
outsl
sub
pop
pushf
out
test
addb
jl
js
js
mov
pop
or
sahf
xchg
mov
movsl
insl
and
rolb
lret
push
add
insb
sbb
add
add
loopne
imul
mov
mov
rorb
daa
insl
inc
cwtl
jno
test
enter
dec
dec
inc
lcall
lods
inc
pop
lcall
cmp
and
lds
leave
xchg
lods
xchg
sub
enter
sub
sub
inc
pop
or
push
and
ret
xor
repnz
sbb
dec
add
cmp
nopl
adc
add
or
and
mov
dec
or
and
or
hlt
or
lods
jbe
push
xor
or
pop
ror
call
in
and
and
loopne
in
dec
enter
sbb
dec
and
and
std
daa
pop
fcomps
outsl
std
in
popf
fcoms
or
jle
mov
mov
in
testl
test
loopne
kmovw
fmuls
jo
adc
int3
int3
in
movsb
xor
enter
mov
rcrb
pop
lcall
filds
mov
jne
iret
and
dec
sbb
mov
push
xchg
jo
pop
rorl
sub
mov
insb
and
inc
jb
and
mov
push
and
insb
and
dec
adc
xchg
mov
mov
adc
and
int3
int3
xchg
inc
jb
and
sbb
mov
and
sub
mov
nop
sbb
or
mov
mov
outsb
dec
in
mov
push
popa
sub
lods
or
xchg
add
pop
add
and
and
inc
inc
dec
inc
test
nop
lret
fwait
lods
xchg
dec
roll
xorl
dec
daa
mov
lods
xchg
inc
and
mov
in
leave
and
and
insb
daa
mov
hlt
or
adc
xor
ret
xor
or
and
int3
daa
mov
and
in
daa
mov
cmp
dec
and
or
xchg
nop
and
xor
mov
cmp
xchg
push
or
sar
xchg
sbb
sub
dec
and
cmp
and
or
sbb
sub
adc
xchg
sbb
mov
bnd
aam
aam
repnz
push
fsubrs
or
cmp
in
push
leave
and
and
ret
cmpsb
movsb
fdivr
pop
sub
es
push
outsl
push
test
adc
scas
sub
std
mov
dec
jl
and
push
in
sbb
scas
sbb
in
cmc
je
sbb
je
jo
xor
jl
insb
in
insb
push
sub
xchg
int3
hlt
add
gs
mov
pusha
add
pop
ret
gs
mov
push
mov
xchg
and
xchg
add
dec
dec
or
cmp
xor
and
sbbb
sub
jb
nop
lret
sub
and
add
sbb
add
adc
xor
xchg
adc
adc
test
cmp
or
gs
inc
inc
or
pop
pop
inc
pop
jmp
sbb
push
lcall
loope
cmp
sbb
cld
sbb
jo
push
cmpsb
hlt
cld
sbb
stc
lock
or
shr
xchg
dec
cld
cld
cld
movl
in
jae
dec
push
pop
in
loopne
loopne
cmp
sbb
mov
lods
call
pop
sbb
lret
sbb
adc
int3
mov
pusha
xchg
xorl
dec
xchg
out
gs
shlb
mov
dec
mov
dec
daa
outsb
cld
cld
sbb
imul
cwtl
cld
and
cmp
mov
cwtl
cld
cld
gs
or
add
in
cwtl
dec
nop
and
mov
adc
in
mov
or
outsl
dec
movsl
xchg
cld
mov
pop
sbb
test
xchg
or
es
inc
sar
je
addr16
pop
sbb
cld
sub
insb
sub
sbb
fs
lea
cld
xlat
pusha
sbb
push
push
js
dec
jnp
in
into
push
pop
push
mov
ja
mov
shrb
add
or
shll
adc
pop
bound
push
or
add
dec
lcall
xchg
out
xchg
fcompl
insb
decl
shlb
insb
ret
in
dec
dec
repnz
or
xchg
xor
sub
jmp
sub
sbb
jp
or
mov
ss
push
aad
cmpsb
fisubs
push
aaa
or
in
insl
and
lods
insb
and
movsl
xchg
add
inc
lods
fadds
jae
cmp
and
adc
pop
jb
and
insb
mov
dec
jns,pn
or
and
insb
es
mov
push
and
pop
mov
push
lea
mov
xor
add
pop
cwtl
and
or
inc
inc
xchg
test
aaa
mov
test
add
rcll
push
flds
outsl
xor
mov
jl
ret
aam
sbb
mov
ret
jne
sti
xchg
jl
repnz
sti
hlt
sti
lock
mov
adc
sti
in
and
inc
in
jo
in
and
in
dec
in
push
and
xchg
lret
jno
mov
cs
es
dec
dec
aam
jns
mov
sbb
enter
stc
push
in
les
fsubl
sar
dec
mov
lods
xchg
mov
fbstp
pusha
adc
sbb
push
je
or
ss
iret
nop
gs
jmp
push
jne
add
xor
fwait
out
dec
lds
jl
movsb
sbb
jecxz
andl
jg
pop
sub
pop
jo
xor
shlb
dec
adc
dec
outsb
call
add
mov
mov
add
cmpsb
or
outsl
xchg
sbb
cmp
xlat
sub
dec
pop
repnz
sub
lods
sub
das
jns
daa
mov
insb
sub
sbb
sub
and
repnz
sub
int3
and
xchg
add
and
and
adc
or
sub
leave
dec
pop
jb
and
mov
nop
mov
rorl
daa
jns
or
int3
and
leave
add
and
mov
and
sub
enter
and
inc
das
and
int3
and
and
and
dec
ds
and
cmp
adc
jns
stos
pop
enter
add
or
loopne
fadd
pop
dec
inc
sbb
mov
into
add
lea
mov
or
push
ss
mov
cmp
aas
cmp
xchg
ret
sub
mov
fcompl
ret
dec
aas
daa
xchg
inc
xchg
and
in
or
mov
inc
adc
fildll
enter
push
add
not
frstor
mov
add
mov
nop
mov
insb
leave
in
fiadds
add
sub
insb
or
mov
pop
cmpb
adc
mov
pop
and
and
sbb
add
add
or
and
cmp
push
insb
insl
sub
add
ja
cmp
filds
pop
cmc
add
scas
push
insl
push
fistpl
lock
mov
jns
imul
jno
pop
fistl
andb
inc
add
mov
cli
cltd
pop
loopne
pushf
outsb
dec
aad
push
stos
flds
dec
inc
arpl
emms
push
inc
sbb
orb
cmp
mov
cmp
or
mov
dec
dec
in
jmp
nop
push
inc
jp
and
cmpsb
push
push
enter
push
mov
xchg
add
sbb
aam
cmp
sbb
push
push
fcompl
ror
fistpl
push
daa
subb
adc
jo
testl
test
inc
add
loop
add
push
jae
je
lds
test
xchg
adc
fcoml
mov
ret
mov
mov
dec
je
in
adc
daa
adc
push
rolb
xchg
int3
fmul
lods
fsubs
push
sti
or
dec
cmpsl
cwtl
xor
xchg
stos
cmpsb
xchg
pushf
test
js
pop
popa
mov
add
mov
lea
out
ret
nopl
loopne
or
scas
fisttpll
sarl
or
mov
sub
sub
les
fwait
mov
das
inc
and
mov
pushf
loope,pn
insb
xchg
and
ror
or
repnz
or
xchg
jo
test
sub
xchg
inc
repnz
sub
xchg
nop
sbb
mov
in
sub
cmp
dec
es
inc
out
add
mov
push
data16
xchg
mov
jb
daa
mov
in
xchg
nop
sbb
dec
es
mov
and
and
in
sub
dec
push
daa
dec
mov
leave
hlt
fwait
xor
leave
mov
daa
mov
in
and
jb
sub
je
jns
mov
jo
sbb
daa
and
repnz
es
dec
adc
arpl
and
and
xchg
inc
sub
sub
xchg
es
mov
in
nop
pushf
inc
popa
sbb
dec
push
sub
in
insb
es
nop
lret
inc
xor
add
fsubrl
add
fcom
jmp
mov
push
leave
es
mov
in
nop
sbb
inc
sub
xchg
rolb
mov
movsb
in
mov
mov
push
mov
xor
xchg
add
mov
test
es
and
daa
mov
in
mov
sub
insb
pop
test
nop
es
scas
mov
jns
pop
andl
sub
xchg
push
leave
and
dec
daa
mov
in
sub
xchg
and
and
insb
es
bound
fldcw
pop
outsl
daa
mov
flds
dec
es
mov
and
in
xchg
sbb
pop
xorl
es
dec
dec
mov
xchg
shll
lods
xchg
shlb
and
int3
and
cmp
lods
and
jns
or
movsl
and
and
and
sbb
pop
lret
and
sub
xchg
loopne
lea
js
icebp
hlt
push
fdiv
adc
mov
into
loope
mov
dec
call
nop
push
mov
sbb
imul
lods
fs
push
leave
int3
and
std
and
cmp
and
mov
call
push
dec
call
and
nop
mov
addl
sbb
dec
dec
and
in
and
lods
xor
add
and
movsb
mov
pop
es
cmp
inc
sub
je
cmp
in
lods
and
and
je
lret
and
lret
cmp
in
or
or
sub
cmp
and
and
and
dec
xchg
js
jb
nop
lret
js
inc
dec
and
and
dec
cmp
mov
xor
nop
sbb
pop
and
and
cmp
in
in
and
nop
cmp
and
and
mov
sbb
nop
lret
cmpb
adc
mov
cmp
and
sbb
int3
and
and
and
and
and
leave
and
and
pop
sbb
or
xchg
xchg
cld
mov
cld
fdivr
loopne
dec
dec
nop
sbb
cld
aam
lret
xor
adc
shlb
pop
test
xchg
int3
loope
and
in
and
and
in
and
push
in
sbbl
add
jno
lods
dec
test
enter
fcomp
cld
push
jb
nop
xchg
and
movsb
cwtl
and
sbb
sbb
int3
and
xchg
and
inc
pop
js
je
sub
in
and
inc
cs
push
jo
mov
pusha
pusha
pop
leave
and
sbb
cld
pop
add
popa
pop
push
push
incl
jbe
nop
push
push
dec
jecxz
in
and
decl
inc
lret
sbbb
inc
add
nop
cmp
cmp
repnz
cs
inc
add
xor
cs
dec
sub
adc
nop
push
jg
sbb
pop
xchg
sbb
cld
xor
push
in
adc
adc
nop
lret
orb
jb
movsb
jb
or
in
add
add
cmp
cmc
and
sbb
and
int3
jb
push
leave
in
and
inc
jb
inc
lods
dec
and
sub
mov
sbb
rolb
and
and
stos
sti
enter
inc
mov
inc
repnz
cmpl
dec
mov
sub
repnz
test
jb
nop
cmova
add
or
cwtl
cwtl
rorb
movsb
mov
nop
lcall
loopne
mov
mov
sub
test
sti
mov
and
mov
jl
dec
js
stc
xor
xchg
js
je
jo
outsl
inc
or
and
fimuls
push
sahf
jno
int3
sti
jecxz
add
pop
push
mov
nop
pop
add
in
push
mov
sbb
dec
jecxz
push
in
orb
inc
jl
mov
inc
sti
cmp
sbb
cmp
and
cmpb
stc
subb
fs
inc
cs
jecxz
sub
in
add
mov
add
mov
mov
pop
sbb
push
jo
lcall
cmpsl
push
daa
or
or
xchg
add
jb
add
add
test
inc
arpl
int
andl
lret
fcompl
jle
cli
hlt
cli
das
pop
jns
lock
lock
in
cli
in
cli
mov
cli
sbb
jecxz
sbb
cli
outsl
test
fbstp
push
dec
sub
nop
fcomps
cwtl
adc
dec
ss
dec
adc
sar
lret
lret
aam
clc
aam
mov
aam
ror
lret
add
cli
sub
pop
jns
cli
sar
cli
mov
and
mov
test
xchg
mov
xchg
test
xchg
dec
mov
bound
and
rcrb
push
cwtl
sub
xchg
lret
sbbb
nop
add
nop
mov
das
int3
cli
adc
cli
int3
nop
lret
xorb
test
dec
jae
test
enter
adc
sbb
enter
cld
decl
pop
pushf
movsb
xor
xor
std
es
push
mov
or
and
adc
or
inc
loop
inc
mov
and
movsb
mov
adc
dec
aas
movb
and
mov
mov
or
hlt
es
data16
xor
lea
sbb
dec
pop
repnz
mov
ss
ds
adc
mov
and
insb
mov
sub
ror
xor
cmp
leave
dec
dec
xor
and
cmp
mov
mov
lods
mov
stc
jne
and
xchg
xchg
pushf
or
pop
jb
fs
nop
mov
and
and
insb
xchg
dec
xchg
and
fnstcw
mov
dec
testl
and
inc
jb
or
sub
xor
and
push
imul
xchg
and
and
xchg
daa
sub
sub
sub
nop
xchg
and
es
jbe
movsb
push
mov
jb
movsb
or
lret
and
sub
leave
nop
pushf
and
and
sub
es
adc
and
inc
dec
sub
push
or
movsb
ret
xchg
and
and
and
sub
xchg
nop
and
and
stc
and
dec
dec
push
leave
and
int3
and
sub
leave
nop
pushf
sub
leave
xchg
sbb
dec
es
dec
mov
es
push
imul
cmp
sub
imul
and
enter
and
and
or
and
popf
inc
jb
and
pop
les
mov
mov
jb
xchg
in
and
inc
es
sub
dec
push
leave
in
and
in
inc
xor
and
inc
sbb
movsb
or
es
dec
sbb
es
daa
insb
es
andb
and
or
jb
inc
xor
and
and
sub
mov
and
insb
es
and
in
or
lods
insb
das
or
inc
loop
and
leave
and
and
sub
in
add
insb
and
xor
lock
scas
mov
inc
xor
cmpsb
inc
cli
mov
ret
sub
and
push
cwtl
xor
call
mov
fsubs
sub
add
add
sbb
leave
or
xor
jge
add
push
data16
fs
mov
gs
jne
push
or
cs
xor
xor
push
dec
in
imul
cmp
mov
push
dec
pop
mov
jl
js
nop
inc
mov
inc
push
cmp
cmp
inc
push
cmp
nop
dec
dec
push
push
add
fwait
in
jae
push
dec
js
add
mov
jl
push
xor
pop
push
movaps
cmp
or
xchg
add
jb
jb
insb
jo
js
jb
jb
orb
nop
xchg
cwtl
pushf
repz
jb
movsb
test
add
adc
inc
jp
push
xlat
push
adc
or
or
shlb
icebp
inc
inc
mov
out
sbb
mov
push
dec
sbb
into
test
sub
mov
aaa
inc
or
adc
test
addb
add
add
inc
mov
mov
xchg
push
ds
lcall
pop
push
rclb
int3
lcall
dec
add
enter
pop
bswap
enter
pop
int3
inc
pop
int3
fmuls
repnz
or
int3
jo
leave
repz
shlb
jne
add
rcl
xchg
cmp
in
adc
aam
inc
nop
dec
sahf
or
aam
aam
and
add
mov
xor
xlat
aaa
dec
lea
shrl
adc
dec
rcrl
xor
fsubp
mov
xchg
pop
movsl
cmp
and
call
loopne
pusha
cs
dec
std
dec
fcomps
jnp
mov
and
jecxz
mov
sbb
fs
lahf
and
xchg
mov
aaa
int3
push
sbb
loopne
jne
jo
subb
lods
adc
xchg
rol
jb
sub
pusha
adc
int3
in
mov
enter
or
mov
repnz
mov
mov
sub
mov
mov
clc
or
sbb
mov
fildll
mov
int3
test
xchg
popf
in
aaa
jb
push
jo
scas
sbb
arpl
dec
sub
leave
and
or
leave
and
cmp
mov
lods
sub
pop
jb
mov
and
pop
lea
int3
xchg
inc
add
std
mov
pop
mov
in
nop
les
sub
in
xchg
xchg
pushf
in
or
insb
daa
mov
lods
insb
sub
and
aad
rol
movsb
xchg
sbb
dec
cmp
sub
out
cwtl
mov
sbb
lea
scas
sbb
dec
mov
repnz
mov
int3
repz
imul
mov
int3
and
add
cltd
das
sub
rol
dec
xor
imul
outsb
pop
nop
mov
adc
je
loopne
pop
in
std
and
mov
dec
xorl
in
enter
mov
push
paddq
push
cmpsl
push
fs
pop
adc
pop
adc
lods
mov
repnz
in
xor
mov
or
lock
dec
adc
mov
sbb
leave
dec
pop
and
insb
and
test
scas
add
fadds
cltd
mov
sbb
shlw
add
mov
dec
add
inc
addb
adc
xor
fadds
sbb
inc
es
clc
iret
and
int3
test
lea
push
fmul
and
mov
ret
or
xchg
push
xchg
lcall
pop
enter
jbe
adc
mov
shll
jns
imul
loop
ja
pop
adc
dec
jnp
sbb
in
add
mov
sti
out
ss
inc
rolb
push
xchg
adc
xchg
add
push
fdivs
mov
in
jge
xchg
add
adc
mov
push
inc
push
pusha
cmpsb
xor
int
sub
push
add
bound
xchg
fisubrl
and
pop
mov
pop
cmp
dec
inc
add
sbbl
nop
out
aam
rcl
rclb
xchg
cld
mov
rcl
js
sub
add
loopne
jmp
sub
sub
sub
rcll
sbb
ret
arpl
outsl
mov
mov
aas
add
sbbl
xchg
lods
daa
jns
and
and
and
into
and
int3
call
icebp
aam
push
mov
or
ret
push
jp
cmpsb
pop
or
jl
in
xchg
mov
mov
sbb
or
int3
xor
sub
rcrl
mov
xchg
add
push
leave
and
lods
and
and
or
cmp
and
xor
xor
jo
pop
lea
push
sub
das
and
dec
mov
cmp
mov
lods
dec
adcl
lret
and
dec
push
dec
push
rolb
sbb
push
imul
add
and
das
cs
icebp
sub
or
and
cmp
sub
shlb
and
lods
test
xchg
pop
and
int3
es
sub
sub
sub
adc
sbb
andb
and
pop
and
dec
push
leave
sub
sub
insb
and
daa
hlt
pop
xchg
das
pop
jns
clc
clc
cld
cld
inc
xchg
dec
sub
test
sub
inc
sub
sub
insb
sub
in
mov
sbbb
rcl
or
lret
aam
inc
repnz
xchg
dec
xchg
or
and
pop
out
dec
movsb
add
movsb
test
mov
and
and
add
ret
and
xchg
and
insb
xchg
push
stos
in
int3
out
pusha
test
xchg
dec
sub
test
mov
fs
jb
push
leave
and
int3
nop
sbb
inc
and
jb
xchg
and
mov
or
mov
pop
pop
pop
leave
and
add
and
inc
pusha
and
inc
jb
and
dec
xchg
nop
and
or
loope
and
enter
sub
and
add
push
mov
in
and
in
and
and
movsb
add
leave
and
and
es
and
inc
vpmuludq
clc
std
clc
std
cld
std
dec
es
cld
std
test
and
and
ret
and
and
insb
pusha
loopne
insb
imul
loope
inc
cs
jb
enter
gs
and
add
inc
xor
and
sub
dec
and
and
mov
xchg
insb
and
pop
dec
adcl
jb
nop
xchg
xchg
cwtl
cwtl
dec
gs
cs
pushf
mov
add
in
and
int3
and
push
leave
and
insb
loope
jae
movsl
dec
inc
sub
pop
jb
nop
inc
inc
fs
push
test
and
and
pop
and
push
leave
and
and
inc
jb
and
insb
adc
insb
cltd
movsb
jb
pop
or
or
add
cmp
dec
cmp
psubusw
and
sbb
insb
adcl
lods
test
nop
sbb
lods
and
sti
and
leave
and
and
add
and
pop
xchg
mov
clc
cld
clc
cld
cld
cld
push
inc
xchg
xchg
cld
cld
cmpsl
xor
in
mov
insb
es
pop
dec
ret
mov
adcb
stos
or
fidivl
insb
call
mov
and
lods
and
mov
push
in
mov
mov
cmpb
insb
jb
in
or
sbb
adc
pop
cmp
leave
and
mov
sbb
pop
add
mov
in
and
xchg
pop
add
jb
lea
js
enter
jl
sub
inc
adcl
lea
ss
lcall
fisttpl
or
imul
xchg
insb
insb
and
add
cmp
in
push
movsb
shlb
cld
cld
cld
cld
nop
dec
sub
push
mov
movsb
ret
cmpb
add
sub
and
lods
and
int3
and
jb
push
and
daa
push
cmp
aaa
sti
sti
in
lret
sti
sti
xchg
sbb
dec
sti
sti
sti
nop
pop
or
movsl
insb
or
sbbl
mov
mov
lods
and
in
and
jb
mov
rorb
add
mov
jb
xchg
mov
push
mov
pop
xor
xchg
insb
sbb
mov
nop
sbb
inc
and
and
cmp
in
lods
and
insb
dec
push
leave
and
mov
jb
inc
jb
mov
sub
sbb
jb
push
leave
sub
cmp
lods
and
leave
es
and
jns
inc
and
push
dec
push
leave
and
and
mov
rcll
sbb
roll
daa
and
push
push
or
xchg
nop
pushf
and
mov
and
and
sub
dec
inc
jb
push
and
dec
and
and
xchg
insb
and
xchg
push
and
rolb
jns
in
cli
das
int3
and
add
fldenv
cmp
and
in
and
cmp
sub
inc
jb
and
and
in
sub
and
cmp
and
nop
in
test
sub
pop
bnd
sbb
js
js
gs
fnsave
gs
pop
or
shrl
or
fists
cli
dec
pop
push
sub
and
pop
inc
sbb
pop
add
popf
daa
xchg
push
push
or
in
nop
dec
dec
jecxz
dec
adc
xor
xchg
sbb
cli
adc
nop
seta
cmp
repnz
xor
wrmsr
sbb
sub
cmpb
sub
pop
push
in
and
and
sbb
add
popl
jns
outsl
adc
mov
pop
or
or
repnz
sbb
cmp
add
jl
pusha
adc
adc
loopne
ja
xchg
andl
sbb
sub
lock
push
sub
push
stc
js
push
stc
and
stc
xor
push
sbb
rorb
stc
push
addb
fcomps
or
in
xor
jnp
sarb
adc
push
sub
int3
stc
lret
lret
sbbb
rol
add
push
stc
xchg
push
push
sub
int3
add
pop
inc
push
pop
aam
leave
hlt
ret
outsl
dec
xchg
fs
std
xchg
nop
test
jecxz
mov
xor
mov
push
nop
lret
adcb
pushf
cwtl
add
cwtl
xchg
xchg
nop
or
gs
nop
mov
mov
sub
jne
out
adc
sbb
sub
and
sbb
outsb
stc
popl
jns
pop
jo
rorl
mov
test
adc
adc
movsb
or
pusha
sbb
stc
faddl
pop
or
and
lret
lods
loopne
addl
stc
stc
stc
stc
clts
in
dec
dec
dec
xchg
pop
add
outsb
and
xchg
testb
or
gs
inc
cmp
and
xor
es
xor
xchg
pop
mov
push
fwait
xchg
add
sub
lea
inc
add
cmpb
sbb
into
aaa
dec
in
add
push
xor
adc
mov
dec
pushf
movb
sbb
adc
adc
jo
or
sbb
pushf
pop
loopne
bswap
mov
rclb
sbb
fwait
enter
nop
lret
add
add
clc
mov
dec
clc
clc
sbb
cmpsl
or
enter
or
push
test
xchg
mov
cs
sub
xor
testl
lock
lock
js
in
mov
mov
clc
adc
movsb
push
call
stc
cmp
xchg
sti
mov
clc
loopne
dec
and
out
inc
cmpsb
mov
and
sbb
mov
mov
cmpsb
pop
aam
or
fisttpl
mov
shr
add
mov
xor
int3
int3
loopne
sbb
shlb
rol
pop
andb
xchg
sub
add
jb
or
sub
mov
mov
mov
lods
sbb
movsb
add
jb
test
sub
adc
sub
xchg
xor
inc
xchg
cmpsb
pop
and
dec
cs
les
and
dec
dec
cmpsb
fs
dec
mov
es
or
mov
xchg
and
or
xor
and
jl
pushf
xchg
and
sub
enter
jo
mov
gs
inc
insb
insb
fs
and
je
addb
xchg
sub
adc
pop
sub
xor
mov
pop
inc
xor
and
cmp
and
xchg
push
dec
dec
dec
or
dec
xchg
or
push
sub
lret
and
or
lods
cmp
sub
xchg
movsb
cmp
mov
test
cmp
in
mov
pop
xchg
sub
sbb
inc
xchg
and
sub
xor
and
and
stc
adc
sbbb
add
jae
das
lcall
sbb
daa
stos
xor
inc
int3
stc
mov
outsl
jne
stc
pushf
fimuls
cmp
add
cmp
push
mov
cld
add
or
and
dec
add
pop
test
xor
xchg
add
nop
sub
popf
or
sbb
mov
jo
pop
xor
leave
js
fistps
adc
call
xor
adc
lea
jecxz
movsb
jb
inc
dec
sbb
or
push
test
and
rdtscp
dec
mov
xor
or
rol
popf
aas
femms
ficoms
rorl
jns
sahf
inc
mov
ficomps
dec
subl
inc
or
mov
sbb
ret
or
in
cmp
xchg
sarb
sarb
jecxz
dec
jecxz
test
arpl
pop
lcall
je
loope
mov
loope
jb
insb
mov
adc
xchg
push
adc
dec
xchg
cs
lea
cwtl
push
int
jb
xchg
pushf
and
sub
xchg
xchg
pop
sub
int3
int3
add
pushf
and
mov
in
and
in
sbb
or
scas
mov
loopne
mov
adc
test
lret
mov
and
rcrb
push
mov
adc
ss
mov
stos
or
dec
and
or
lods
xchg
and
xchg
or
mov
and
adc
and
insb
and
adc
popf
adc
mov
mov
subb
test
popa
sbb
cmp
or
enter
cmp
cmp
inc
popa
sbb
add
xor
in
and
xchg
inc
test
and
mov
inc
add
loope
lret
gs
lret
xor
js
xor
push
cld
or
cmp
arpl
xchg
inc
and
int3
in
dec
movsl
inc
adc
adc
sbb
cltd
adc
jo
clc
and
data16
and
jno
mov
sbb
jmp
and
dec
push
and
mov
shll
or
sub
xchg
nop
and
in
inc
push
mov
fcoml
adc
jo
cmp
mov
shll
mov
xor
xor
cwtl
mov
adc
enter
mov
mov
pushf
rcll
fdivrs
and
and
or
pop
jb
adc
adcb
and
scas
in
insb
movsb
repnz
inc
insb
cmpl
js
jl
in
dec
es
stos
push
push
and
movsl
addl
and
shlb
fwait
dec
pop
je
pusha
sub
pop
nop
xor
add
js
ret
pop
xchg
scas
test
mov
mov
sbb
inc
mov
movsb
xchg
xor
push
mov
push
jae
fcom
in
jne
adc
sbb
divb
scas
xor
sbb
enter
mov
add
inc
cmpsb
mov
jne
and
and
shll
mov
cmp
and
je
and
adc
sub
and
add
cmp
cmc
and
outsb
and
pop
mov
jecxz
or
sbb
adc
pop
mov
outsb
and
push
in
jb
dec
and
sbb
pop
in
push
leave
in
and
and
nop
cmpb
mov
jne
pop
jnp
sahf
add
jne
sbb
ret
push
lea
or
inc
nop
outsb
mov
sbb
jb
mov
jne
mov
cltd
inc
ds
mov
dec
loopne
les
sbb
in
jo
push
sbb
enter
xorb
xchg
sbb
or
enter
movsb
or
enter
mov
mov
push
inc
in
cmpb
cmp
sbb
iret
mov
mov
pusha
push
fsubrl
pop
cwtl
insb
inc
aam
test
lods
std
jl
jl
int3
divl
push
sbb
inc
add
inc
jl
stc
mov
lock
js
clc
adc
ss
movsb
bound
jo
inc
add
divl
add
cmp
xchg
pop
cld
add
add
andb
inc
es
mov
clc
mov
push
js
enter
cs
pop
xor
mulb
inc
rclb
cmovae
add
mov
fbstp
sbb
adc
lock
adc
clc
push
dec
or
lods
pushw
out
inc
add
test
add
dec
jo
out
idivb
inc
pop
mov
test
les
dec
ds
repz
leave
push
push
or
loopne
negb
inc
aad
scas
sbb
jmp
imul
fsubp
push
in
dec
scas
jl
std
mov
scas
pop
fldl
inc
in
mov
mov
cmp
push
inc
dec
das
push
mov
and
call
aas
movsb
je
test
xchg
push
int3
dec
lahf
call
adc
subl
add
addl
inc
add
rolb
xor
dec
rolb
pop
inc
pusha
stc
divb
ficoml
call
xchg
out
sarl
push
mov
adc
call
in
call
cmp
call
or
imul
mov
xchg
jp
lahf
add
pop
xor
mov
aad
push
popa
dec
adc
dec
mov
cld
hlt
sbb
mov
cmpb
subb
mov
ljmp
add
pop
and
call
mov
insb
xchg
and
call
pushf
pop
mov
dec
lods
into
pushf
shrl
or
jns
std
sti
mov
or
mov
or
jl
mov
out
and
mov
push
mov
push
inc
out
notl
inc
fsubs
sbb
mov
adc
xchg
xchg
fstl
aam
push
sbb
aas
rcll
mov
lea
lods
in
add
inc
movsl
loopne
xor
ret
andl
popa
call
cs
mulb
out
fs
idivb
push
pop
aam
mov
add
nop
dec
cld
jl
icebp
push
mov
and
add
andb
push
rcll
aaa
mov
loope
sbb
or
jae
fxch
mov
cmp
inc
dec
loopne
mov
stc
lcall
xchg
or
push
dec
xlat
sahf
in
call
dec
push
lahf
pop
push
sbb
push
sbb
mov
pop
jae
aaa
lcall
out
rcrb
xor
jns
push
cmp
sub
pop
sbb
push
xchg
and
pushf
or
out
and
loopne
dec
and
clc
jle
scas
cwtl
inc
mov
cmp
mov
stc
into
repz
cs
mov
sub
xchg
adc
mov
enter
es
jl
mov
xor
nop
or
pushf
je
mov
lods
movsb
jb
cmp
and
and
sub
sub
xchg
sub
xor
cmp
jne
pushf
add
dec
and
mov
rorb
sub
jo
mov
adc
jmp
testl
and
push
mull
jb
stos
pop
add
fs
test
xor
or
cmp
in
int3
movsl
xchg
out
fistps
xor
sub
rcrb
adc
and
cmp
mov
call
pop
jmp
inc
mov
lret
pop
pop
inc
lret
adc
das
or
ja
cmpsl
stc
adc
mov
test
sbb
adc
inc
push
jb
cmc
jns
push
adc
adc
js
add
push
jl
loope
cmp
pop
sub
and
xchg
dec
repz
sbb
push
sarl
cmp
cmp
ja
data16
fimuls
pusha
pop
xor
xchg
add
pushf
pop
push
test
cmp
cmc
rcrl
aam
insb
pop
clc
cmp
dec
sahf
out
sbb
dec
ror
lret
jne
xchg
fstl
fs
jno
pop
mov
xchg
jbe
gs
fsubrs
mov
cwtl
loope
cmp
cmp
adc
inc
jp
andb
or
scas
sub
addr16
cwtl
push
add
add
mov
sbb
and
mov
mov
notb
inc
push
push
push
xorb
xor
jne
fldenv
mov
fidivl
insb
dec
inc
and
fiadds
push
push
pop
jo
push
pop
adc
hlt
push
xchg
mov
and
pop
std
cld
pop
ljmp
mov
and
nop
add
movsl
dec
outsb
fcoms
mov
call
cmp
movl
or
in
cmc
sbb
add
push
jno
clc
jle
pop
adc
dec
adc
mov
filds
xchg
jbe
sbb
sbb
xchg
push
aas
pop
jmp
movsl
sbb
jno
push
mov
pop
add
and
stos
jmp
fimull
movsb
mov
xchg
and
dec
jne
and
push
scas
movsb
xchg
jns
mov
loope
and
sbb
faddl
or
push
mov
sub
sbbb
push
ja
or
movsb
pop
dec
lret
adc
jge
add
xor
mov
and
dec
mov
test
push
inc
push
sarl
mov
push
mov
outsl
in
pop
repnz
dec
push
inc
push
push
inc
pop
adc
or
ja
mov
jle
fdivl
add
cwtl
pop
adc
adc
mov
push
outsl
test
xor
out
cmp
dec
pop
pop
idiv
sahf
add
test
xlat
loop
ret
mov
dec
popa
imul
iret
out
inc
fsubs
es
sti
xor
loopne
outsl
lock
xchg
ret
jno
fs
sub
mov
push
pop
mov
jp
xchg
sub
outsb
shlb
inc
pop
lds
fcomp
push
mov
cmp
rclb
adc
sarb
daa
adc
jb
je
add
aas
sbb
and
sub
or
inc
cs
enter
xor
cmp
dec
mov
mov
cs
mov
pusha
push
dec
js
dec
cs
mov
mov
cs
mov
rclb
lock
dec
and
add
adc
leave
inc
jb
xor
xchg
pop
and
andb
inc
mov
pop
loopne
add
xchg
mov
mov
loopne
and
and
pop
leave
inc
repnz
lock
dec
pop
and
add
and
adc
and
xchg
mov
orb
pushf
dec
dec
push
or
or
test
test
xchg
sbb
data16
cmp
fsubs
lret
int3
enter
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
lea
pop
sub
mov
push
jne
sbb
hlt
mov
pop
and
and
and
ds
inc
add
divl
add
xor
inc
rolb
push
adc
das
add
pop
xor
mov
push
lock
add
out
cmp
dec
jnp
test
adc
sub
out
pusha
lret
test
sahf
mov
es
sti
sub
inc
addb
nop
cwtl
sahf
out
sahf
mov
enter
jns
fsub
call
out
add
adc
iret
repz
and
xor
inc
dec
cmp
repz
pop
pusha
push
repz
mov
into
mov
inc
push
and
lahf
gs
mov
and
loopne
sub
in
xchg
xchg
sbbl
mulb
xchg
shlb
repnz
js
mov
pcmpeqb
and
int3
xchg
and
insb
outsb
clts
dec
pusha
cmp
adc
adc
adc
sahf
inc
add
and
sahf
out
cmp
push
out
pushf
mov
ror
sarl
lock
and
cltd
mov
cmp
push
call
insb
out
pop
adc
sub
push
add
dec
cmp
push
push
inc
sbb
in
inc
jb
mov
je
and
pusha
inc
repz
sub
xor
mov
or
es
or
adc
cwtl
imul
jns
mov
adc
and
push
sbb
fdivl
and
pop
add
pop
xor
add
mov
pop
rolb
push
call
jnp
cmp
adc
adc
incl
incl
fmuls
call
lcall
add
and
mov
movsb
add
bound
add
sahf
out
sahf
or
add
out
adc
adc
adc
or
add
adc
cmp
mov
sbb
push
adc
iret
repz
iret
repz
lods
or
add
adc
sbb
daa
pop
sub
sahf
out
add
push
push
sbb
fs
jl
fistps
nop
push
add
cmp
jnp
push
adc
repz
add
or
cmp
mov
cmpsl
mov
add
iret
mov
cmpl
push
sbbb
xor
jns
out
dec
mov
jns
jl
xchg
mov
mov
int3
hlt
adc
or
mov
andl
add
addl
jg
add
fidivrs
sub
cmp
pop
punpckhdq
inc
add
or
xchg
add
jle
jne
loopne
imul
out
faddp
arpl
out
ret
or
xchg
pop
ret
sbb
inc
mov
inc
ja
push
add
pop
or
xchg
shl
cli
in
sbb
cmc
add
sar
cmc
out
shrl
mov
psubb
add
cmc
pusha
push
cli
jmp
iret
aas
ror
add
out
lock
incl
movsb
clc
xor
outsb
out
cli
add
cmc
mov
mov
loopne
aam
out
aad
and
lods
add
jns
aas
scas
in
add
xchg
scas
test
cmc
cli
add
lock
enter
sub
int
por
jg
int3
mov
fidivrl
or
hlt
aad
push
jl
stos
aad
push
mov
aad
pusha
in
jg
int
pop
add
cli
xorb
jg
fwait
out
popf
pop
inc
mov
adc
outsb
lcall
shrb
sahf
ja
cmpsb
outsb
hlt
movsb
pusha
dec
mov
dec
aaa
ljmp
cmovne
hlt
repz
aas
mov
and
in
inc
adc
cld
mov
rclb
incb
xchg
jp
inc
out
jg
mov
out
call
cli
rolb
mov
iret
mov
and
ljmp
add
lods
repnz
jg
cld
push
nop
out
nop
add
aam
repz
aas
decl
mov
inc
fisubl
out
add
loope
imul
push
lcall
out
hlt
jl
cmpsb
push
cwtl
sti
cwtl
add
data16
add
pop
cmp
jno
mov
mov
out
add
imul
jo
mov
in
jmp
pop
mov
pop
xchg
loopne
cli
lcall
scas
and
sub
scas
out
out
add
pusha
push
iret
aas
cld
lods
fsub
add
into
cli
add
lods
add
mov
push
dec
mov
int3
add
filds
adc
inc
loopne
cmpsl
sub
mov
mov
inc
fucomi
fildl
loope
adc
pushf
aas
ret
sbb
jo
cld
repz
pop
into
roll
mov
fmuls
pop
lock
fcompl
out
jmp
nop
cmp
add
push
addb
jmp
stc
xchg
add
add
xor
add
aas
fimuls
adc
jo
into
fcompl
xor
push
xor
xchg
jo
mov
fildl
dec
xchg
fstl
cld
mov
jl
mov
mov
out
sub
lods
fidivl
add
test
iret
aas
frstor
mov
cld
repz
and
lret
add
mov
fiadds
sub
addr16
jnp
out
add
mov
cmp
cmpsb
push
outsl
mov
dec
lahf
testb
cmpb
pop
mov
jo
nop
add
cmp
add
fbld
in
push
imul
push
jnp
cmpsb
std
push
dec
cmp
dec
dec
push
faddl
orl
test
jbe
jl
rcr
out
ficoms
pop
les
add
and
js
cmpsl
mov
jg
add
jg
repz
test
loopne
cld
out
jns
out
sti
sbb
cmp
pop
jns
ja
xor
push
inc
dec
pop
out
sahf
out
push
dec
xor
add
loope
dec
das
ds
fisubrs
push
std
sti
adc
fadds
jg
fcomps
inc
push
and
js
out
nop
sub
in
sub
add
push
push
dec
xor
or
and
test
sti
inc
cmp
pop
jae
pop
mov
aaa
add
and
das
iret
or
adc
jns
add
add
or
nop
pop
hlt
mov
dec
jnp
decb
mov
std
sbb
repz
repz
cmp
dec
iret
repz
clc
pusha
divl
cmp
repz
pushf
hlt
mov
repz
repz
icebp
call
lock
out
adc
and
xor
dec
jmp
xchg
out
pop
ljmp
add
xchg
and
ret
flds
pop
push
adc
daa
dec
mov
out
jp
mov
lcall
scas
inc
or
or
add
cmp
sarl
or
push
xor
push
fs
repz
cwtl
lods
mov
fsub
clc
add
sahf
out
sahf
sbb
xor
pop
push
js
movsb
mov
lahf
out
pop
mov
out
scas
data16
xlat
adc
loope
xor
adc
mov
cmpsl
and
jae
mov
sub
test
pop
pop
cmp
jnp
int
xchg
stc
mov
mov
sti
cld
std
iret
repz
incb
add
cmpb
repz
addl
iret
jg
outsl
add
pop
pop
hlt
mov
addr16
jl,pn
push
push
push
mov
sahf
mov
fcom
enter
in
ret
aas
push
hlt
and
jnp
jp
mov
insl
xor
imul
fiadds
mov
cmpsl
ljmp
push
and
add
or
outsb
addr16
fimull
gs
cmp
push
mov
inc
subb
dec
fistps
out
or
iret
repz
or
sbb
sub
cmp
dec
arpl
mov
fwait
xor
pop
add
pop
add
add
pop
enter
jo
jb
pusha
filds
or
xlat
sbb
xor
iret
notl
push
add
add
repz
push
or
lock
repz
xor
add
cmpsl
xchg
cmp
or
cmp
cmp
or
or
in
dec
ja
or
add
mov
cmp
ds
pop
das
jo
out
sbb
add
pushf
pushf
pushf
pusha
and
mov
addb
daa
daa
mov
aas
pop
sbb
in
cmp
rorb
dec
sahf
push
adc
mov
dec
dec
dec
or
dec
dec
add
unpcklps
xchg
xchg
fninit
ljmp
je
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
test
test
mov
call
cwtl
jb
repnz
push
jl
daa
pop
pop
jno
aas
pop
ljmp
daa
daa
daa
mov
daa
daa
daa
clc
add
daa
daa
daa
daa
mov
daa
daa
daa
les
bound
daa
daa
daa
daa
movsb
add
daa
in
pop
sbb
daa
daa
daa
xchg
inc
jp
daa
daa
daa
daa
aam
push
daa
daa
daa
daa
mov
mov
daa
daa
daa
hlt
add
repnz
add
jbe
jb
jb
int3
pcmpgtd
jb
lods
push
xchg
jb
inc
in
or
jb
jb
pushf
arpl
jbe
jb
fcompl
aas
outsb
xchg
fucomi
in
mov
sub
stos
xchg
dec
cld
call
dec
cs
xchg
adc
in
dec
ret
in
in
mov
dec
cs
pop
sbb
jns
rorb
dec
imul
dec
dec
mov
nop
push
out
in
adc
or
cmp
xchg
xchg
xchg
gs
xchg
xchg
test
pop
xchg
or
cmp
nop
xchg
cmp
cmp
cmp
xchg
or
cli
push
adc
cmp
xchg
xchg
xchg
or
cmpsb
nop
xchg
xchg
xchg
add
cmp
nop
xchg
xchg
jnp
imul
cmp
sub
cmp
dec
notb
dec
cs
pop
ja
into
in
in
addr16
scas
in
in
pop
xchg
inc
dec
dec
cs
pop
sahf
cs
in
aas
fisubrs
mov
mov
mov
lcall
mov
and
es
mov
leave
test
jmp
and
mov
movsl
mov
in
cltd
dec
es
aad
cmc
and
es
mov
popf
mov
fnstsw
std
ret
mov
jecxz
dec
es
mov
mov
and
cltd
repz
xor
and
leave
inc
fistl
xchg
dec
mov
xor
cmpsl
out
xchg
dec
and
xlat
and
notl
scas
adc
inc
xor
lahf
fbstp
xchg
dec
and
cmp
aaa
push
add
push
adc
cmpsb
repnz
adc
pop
stos
cmp
push
add
inc
pop
inc
jg
xor
aaa
add
pop
add
jns
lret
push
or
repnz
or
shlb
enter
sbbl
xor
push
popa
pusha
enter
add
xor
or
xchg
fnstenv
dec
sbbb
or
jb
push
cmp
fmull
fbstp
aam
and
addb
add
bound
bound
dec
into
into
dec
add
xlat
jae
mov
shlb
adc
fmuls
mov
xchg
sti
add
mov
inc
or
sub
cmp
ja
sub
gs
and
cmpsb
shrl
adc
dec
add
push
add
add
add
inc
push
mov
lea
push
inc
out
jo
and
add
testl
lret
push
pusha
or
inc
push
jae
popa
dec
dec
pop
andl
fistps
in
inc
push
aaa
mov
sub
add
sub
repz
jg
out
sahf
out
incl
pushl
add
outsl
mov
dec
and
loop
push
jge
iret
sarl
add
in
add
or
sub
out
pop
fisubrs
add
and
mov
inc
cmp
jne
sub
dec
sub
in
adc
jbe
dec
sti
xor
and
xchg
add
loop
mov
adc
mov
movsb
sbb
mov
movsb
faddl
xchg
data16
push
mov
int3
push
push
lods
sbb
dec
enter
and
sub
add
dec
and
daa
sbb
sub
rsm
push
and
or
repz
clc
test
cli
cmp
sbb
cmpsb
addb
jno
mov
mov
jg
push
pop
insl
pop
mov
mov
add
xlat
jne
popa
icebp
add
movl
fwait
lods
or
ss
push
add
inc
xchg
mov
lahf
lret
push
mov
cmpl
rolb
inc
xchg
fidivs
mov
push
push
xchg
adc
popf
lods
jo
mov
lds
mov
mov
pusha
lret
nop
fsub
idivb
inc
cwtl
rcrb
xchg
dec
inc
dec
sbb
popa
or
sbb
sbb
add
mov
rclb
enter
fisttps
xchg
sbb
adc
ret
mov
and
fisubrl
iret
fiadds
sub
lea
mov
push
sahf
out
inc
rcll
inc
inc
rorb
mov
jmp
das
or
fnsave
stc
pop
mov
adc
jne
lds
add
dec
mov
xor
jge
xchg
mov
int3
dec
dec
lods
pop
adc
inc
sub
sub
dec
mov
cmp
mov
or
pushf
adc
mov
xchg
movsb
mov
into
repnz
jecxz
and
add
lock
push
mov
adc
rolb
fsubrl
pop
outsb
je
daa
enter
mov
mov
imul
adc
int
sub
xchg
in
out
xchg
and
jns
jmp
push
sub
or
insb
dec
adc
xchg
pop
in
imul
cltd
dec
andl
xor
bound
adc
mov
or
fcoms
adc
dec
insl
gs
xchg
das
sub
shr
or
in
pusha
adc
sub
int3
jmp
rclb
adc
insl
popa
mov
sbb
cmp
or
or
imul
sbb
xchg
mov
jmp
loope
and
jmp
or
jns
cwtl
js
adc
sub
jns
out
inc
dec
pop
fs
out
sahf
jo
mov
jns
rcr
call
add
xlat
mov
pop
outsl
imul
in
jecxz
ret
and
fists
iret
paddq
das
pop
or
inc
add
cmp
repz
adcb
mov
shl
clc
out
sahf
out
xchg
sub
push
push
jl
lods
mov
repz
adc
cmp
repz
insb
sbbb
fsubr
add
sahf
sub
pop
jo
nop
jns
out
movsb
mov
loopne
repz
repz
iret
repz
js
pushf
mov
fcompl
cld
adc
out
push
push
jge
out
fsubr
or
sahf
out
inc
pop
je
xchg
out
sahf
out
ror
hlt
iret
repz
adc
cmp
repz
mov
sahf
out
clc
or
sbb
out
sahf
out
je
pushf
mov
repz
enter
sahf
sub
iret
repz
jo
cwtl
mov
cmp
repz
fsubr
cld
adc
mov
mov
shl
cld
adc
and
inc
pop
jo
out
sahf
test
jns
jnp
pop
adc
push
inc
pop
sahf
out
sahf
insb
js
test
sarb
or
and
cmp
repz
pusha
je
pushf
out
cmp
mov
fdiv
add
sahf
out
sahf
sbb
pop
insb
jl
sahf
out
xchg
lods
mov
fucom
cld
adc
jns
out
jo
mov
int
lock
sbb
push
iret
repz
jo
pushf
mov
out
add
insb
iret
repz
nop
lods
shl
or
cmp
mov
dec
pusha
js
repz
mov
sahf
out
ds
adc
xor
out
pop
jo
cwtl
test
jns
out
enter
test
jns
sub
pop
insb
test
jns
out
lods
mov
jns
ja
test
dec
out
sahf
out
js
lods
enter
sahf
fdiv
add
iret
repz
insb
jl
mov
jl
repz
adc
push
cmp
iret
repz
fs
test
ds
repz
add
sbb
jns
out
inc
pop
insb
sbbb
mov
loopne
cmp
sarl
and
dec
pusha
repz
repz
movsb
mov
iret
call
cmp
out
sahf
pop
jo
cwtl
movsb
mov
lahf
out
int3
in
adc
repz
jl
out
repz
movsb
mov
mov
push
sub
pop
jo
iret
repz
mov
cld
repz
mov
cmp
repz
adcb
mov
mov
iret
repz
je
mov
cmpsl
stc
cmp
adc
out
push
jo
cwtl
movsb
repz
out
int3
in
or
sub
dec
pop
push
cmp
mov
repz
repz
mov
push
and
push
cmp
repz
jl
pushf
test
cmp
repz
mov
jns
cmpsl
adc
xor
push
sahf
out
sahf
insb
test
out
jns
cld
data16
jns
inc
push
push
sahf
out
mov
aam
cld
repz
repz
sub
dec
pusha
iret
repz
js
pushf
lods
fcomp
stc
clc
cmp
cld
mov
jns
out
inc
pop
insb
jl
jl
sahf
out
mov
mov
mov
pusha
cmp
repz
mov
repz
clc
or
repz
push
pusha
jl
repz
repz
mov
loopne
out
sahf
out
mov
sahf
out
sahf
pusha
jo
mov
jns
int3
loopne
add
or
xor
iret
repz
pusha
jo
mov
cmp
int3
fdiv
add
adc
dec
pop
out
sahf
out
js
cwtl
lods
lahf
out
sahf
mov
or
cmp
repz
sub
dec
pop
repz
repz
nop
pushf
lods
out
cmp
rcl
clc
adc
sahf
out
sahf
and
inc
pop
jo
iret
shl
nop
test
rcrl
repz
push
and
iret
repz
inc
push
fs
pushf
cmp
repz
rcl
cld
jns
cmpsl
stc
or
sbb
dec
pusha
out
sahf
out
nop
test
fmul
repz
lock
and
push
push
adcb
repz
or
pop
push
xor
cmp
repz
jo
cwtl
lods
imul
lock
sbb
jns
out
cmp
insb
sahf
out
sahf
jl
pushf
lods
rcl
dec
repz
or
sbb
inc
repz
repz
jo
xchg
mov
repz
fsubr
into
enter
cmp
repz
je
pushf
out
repz
lods
enter
leave
mov
push
cmp
mov
repz
mov
or
cmp
mov
dec
pop
insb
iret
repz
xchg
test
int3
call
ds
and
inc
pop
jns
out
insb
jl
mov
out
fdiv
or
sbb
repz
xor
mov
lods
mov
jns
ja
dec
int
and
out
sahf
out
je
pushf
mov
sarl
clc
adc
dec
cmpb
repz
mov
iret
repz
xchg
push
cmp
js
mov
out
cmp
lock
sub
jns
out
jo
mov
hlt
repz
repz
xor
je
out
cmp
pushf
mov
sahf
out
sahf
xor
je
pushf
jl
out
mov
fsubr
add
repz
rcll
dec
pop
jo
repz
mov
sahf
out
lcall
jns
out
sbbb
int
clc
adc
sub
test
repz
mov
int3
fsub
lock
cmpsl
stc
cmp
or
adc
sub
sahf
out
cmp
push
je
push
repz
popf
out
mov
push
mov
out
ds
in
clc
add
adc
out
sahf
sub
dec
pop
fs
out
jo
mov
lahf
xor
mov
and
mov
and
mov
xor
and
mov
push
push
jp
xchg
adc
test
call
out
and
lret
push
nop
jnp
inc
jo
mov
loope
and
mov
xchg
pop
sbb
fidivrs
inc
xchg
xor
pop
adc
dec
pop
sti
sbb
inc
ds
out
fcomps
testl
pushf
pop
pop
mov
mov
dec
call
neg
and
into
test
dec
into
and
inc
imull
lock
mov
fdivrl
push
dec
or
sbb
sbb
sahf
divb
push
or
fidivrs
gs
push
clc
push
jl
dec
ds
mov
mulb
adc
push
sahf
negl
jle
int3
inc
js
or
test
pop
cmp
dec
pop
sbb
inc
adc
jnp
out
loopne
add
push
sahf
cwtl
mov
mov
cmp
fcomps
dec
out
jp
pop
mov
les
sarl
cmpsb
fmuls
data16
and
loopne
jnp
int
enter
sub
and
es
faddp
rorb
pop
ret
jge
ja
cwtl
decb
push
xor
inc
pop
xor
scas
jo
or
dec
out
sbb
and
mov
lock
dec
rorb
jl
jns
dec
sub
enter
inc
fsubrl
inc
jns
push
lret
mov
out
loope
xchg
xchg
mov
rol
out
xchg
jl
mov
push
cmp
mov
jecxz
sar
add
loop
and
push
dec
shl
orb
push
fs
jnp
sub
xor
mov
push
sub
test
negl
adc
cs
cmp
inc
out
sbb
dec
mov
mov
pop
pop
push
xor
mov
movsb
ja
pusha
hlt
es
scas
in
cmp
jo
into
mov
outsb
cmp
out
ds
lock
or
adc
das
push
jns
push
sbb
fadd
sarl
pop
lods
jle
into
add
int
mov
or
mov
sub
out
inc
outsb
pusha
fdivrl
data16
mov
out
or
push
mov
pop
neg
sarl
out
es
aam
adc
out
cmp
enter
adc
and
xchg
inc
daa
dec
sbb
scas
insb
outsl
dec
roll
fimuls
ds
push
inc
dec
and
pop
adc
sbb
add
mov
cmp
mov
pop
jnp
loop
nop
aas
push
push
dec
pop
test
push
and
xchg
pop
cs
mov
inc
outsb
push
mov
pop
fisubs
cwtl
iret
sahf
dec
xor
push
cs
cld
shlb
divl
je,pt
push
insb
test
mov
shl
into
xchg
pop
jmp
or
push
sbb
les
jbe
and
pop
lods
push
jp
fidivs
push
pop
push
xchg
outsb
cmp
pusha
mov
pusha
data16
cmp
movsb
mov
es
sahf
sbb
sbb
daa
into
dec
or
repz
aam
cmpsb
mov
repz
mov
scas
or
testb
pusha
iret
orb
inc
mov
dec
mov
cs
xor
inc
sbb
push
mov
dec
fstpt
sbb
pop
pxor
xchg
ds
lods
ficoms
jnp,pn
les
xor
ss
adc
mov
mov
push
out
push
push
ficoms
mov
sub
cmp
clc
dec
pop
iret
pop
pusha
dec
sahf
ds
mov
cmp
int3
out
enter
cmp
push
jo
cmp
jp
xor
aam
call
push
mov
push
fdivrl
push
inc
out
cmp
sbb
mov
jmp
add
es
js
add
es
into
neg
ss
fadds
jnp
push
rclb
lcall
mov
js
loopne
into
sub
jbe
push
call
jle
cs
and
aad
and
dec
push
sub
mov
add
adc
inc
push
dec
add
adc
cli
flds
adc
adcl
adc
test
sub
adc
mov
add
add
mov
inc
push
outsb
aaa
add
add
fdivp
add
pop
inc
sbb
inc
and
fistpll
push
and
pop
dec
aaa
push
pop
dec
add
outsb
mov
add
adc
jne
dec
xchg
push
loop
push
inc
mov
mov
inc
sub
add
fnstsw
push
inc
cmp
jo
sbb
or
add
xor
js
dec
dec
inc
xchg
push
add
scas
shl
dec
xor
or
cmp
push
sbb
xlat
inc
dec
push
pop
push
aaa
push
xchg
pop
mov
ror
add
loopne
in
cmp
push
dec
push
idivl
addb
inc
cmp
mov
add
lock
add
mov
sub
sub
sbb
xor
inc
pop
roll
fsts
jge
pop
add
cmp
mov
pop
rolb
sbb
sbb
add
dec
enter
mov
push
incb
cld
jg
clc
dec
sahf
das
pop
aas
push
pop
jmp
rol
dec
pop
jns
add
pop
or
push
aas
pusha
sbb
jg
add
add
add
fldcw
test
or
pop
jo
pusha
mov
pop
rorl
add
xor
jg
shrl
fucomi
push
out
ficompl
popf
xchg
cmp
add
loopne
insb
xchg
xchg
pop
push
aas
pop
jnp
xchg
pop
cs
pop
xchg
addr16
lock
insb
push
out
xor
push
pop
std
xchg
xchg
int
push
fldl
insb
out
add
jbe
in
cmp
jle
rolb
arpl
jo,pt
iret
add
pop
incb
lock
mov
jo
or
push
add
vmwrite
out
jns
aas
es
push
add
js
out
nopl
into
push
add
jne
inc
jno
lcall
mov
daa
add
add
mov
das
aas
dec
pop
outsb
daa
scas
pop
and
iret
pop
std
enter
clc
lock
aas
rcrb
sbb
pop
push
inc
shll
clc
popl
adc
xchg
mov
neg
roll
loopne
pop
sbb
jae
fwait
test
inc
nopl
sbb
outsb
in
aas
pop
jle
addr16
dec
stos
pop
in
mov
adc
syscall
dec
in
out
pop
cs
sbb
add
cld
pop
mov
insb
scas
cmp
fsubrl
in
push
inc
aaa
pop
lock
add
and
cmpsl
cs
mov
lock
or
jle
or
push
addr16
into
data16
inc
add
inc
addl
insb
mov
push
pusha
xor
sbb
push
push
sbb
xchg
mov
ja
cmc
sbb
jbe
lock
clc
dec
sbb
cmp
sbb
repz
int
or
test
loopne
loope
je
jbe
xchg
adc
addr16
in
orb
cmp
and
add
pushf
mov
and
fiaddl
aas
cmp
subl
cld
in
pop
push
mov
daa
sbb
cmp
xor
ja
imul
and
xor
mov
orl
push
adc
out
mov
ja
cmp
clc
dec
push
dec
push
out
fwait
mov
andl
dec
push
push
daa
xchg
mov
daa
xchg
outsl
mov
sbb
or
dec
inc
daa
mov
ja
push
daa
clc
test
jnp
cmc
sbb
mov
add
mov
lahf
adc
jns
xor
cmp
mov
daa
cmpl
xor
and
mov
inc
push
movsl
daa
leave
fcomip
lods
dec
sub
repz
xor
mov
in
repz
cmp
xor
fidivl
in
jbe
and
push
es
imul
out
and
push
and
and
push
pop
cmp
cmp
jmp
dec
pop
idivl
pop
push
cmp
inc
ss
xlat
push
mov
insl
out
lret
push
and
xor
push
or
sub
xsavec
sbb
aaa
push
xbegin
into
and
test
jg
ja
testl
or
mov
or
dec
ljmp
sub
xor
outsb
daa
inc
aad
fidivrs
sub
mov
dec
dec
pop
daa
mov
jb
dec
dec
out
in
out
dec
pop
push
incb
xchg
and
clc
add
daa
mov
xor
mov
push
repz
pushf
es
mov
sbb
mov
ss
arpl
daa
ds
push
ss
inc
shll
xor
arpl
sbb
lods
dec
add
out
cmp
inc
mov
mov
push
dec
out
fs
sahf
sahf
rcrl
jb
loopne
mov
lods
mov
dec
lret
ljmp
fnstenv
jb
daa
dec
add
xlat
ja
inc
jle
xor
in
repz
sbb
jecxz
test
xor
adc
cmp
or
nop
in
inc
xchg
sbb
push
mov
movsb
out
sub
mov
mov
xor
mov
xor
cmpsb
arpl
das
es
insb
jo
mov
daa
push
inc
sub
pshufw
and
andl
jmp
data16
inc
push
in
xor
shlb
mov
aas
lock
stos
inc
aas
call
xorb
pop
lock
cmp
fcoms
movsb
pop
xor
dec
xchg
or
jbe
daa
mov
xor
or
xchg
mov
xchg
lock
adc
cmpsl
fsubrl
or
cmp
aas
subb
cmp
sbb
jo
xchg
sbb
inc
call
adc
ja
xor
daa
jl
addr16
or
clc
or
sbb
xchg
mov
fcoms
daa
dec
xor
insl
out
daa
dec
xor
dec
daa
dec
daa
into
test
fmull
clc
dec
or
addr16
jae
sarb
dec
jl
pop
dec
and
dec
out
aas
into
test
push
aaa
mov
mov
xor
cltd
jnp
in
lock
push
mov
mov
popa
ret
imul
daa
repz
cmp
aaa
cmp
mov
xor
sarb
sahf
bound
mov
add
inc
push
daa
arpl
cmp
rolb
push
xchg
and
push
mov
lahf
adc
pop
pushl
inc
sub
inc
cmp
xor
cmp
push
orl
test
stos
push
pushf
xchg
addr16
cmp
aas
insl
cmp
aaa
jl
rol
int3
shll
and
add
gs
sub
aaa
fs
insl
mov
scas
mov
outsb
or
es
push
outsl
mov
fldl
inc
push
and
fmuls
daa
xchg
add
mov
shll
and
mov
stos
stos
aas
adc
or
adc
dec
outsb
push
int3
add
or
lock
ja
jo
pop
push
pop
jg
jnp
xchg
jo
xchg
js
push
pop
push
add
stos
cmc
push
std
lahf
jg
test
js
repnz
push
add
ja
or
or
mov
pop
shlb
mov
pop
mov
cmpsb
int3
add
mov
int3
ud2
jnp
jo
jbe
cmp
xchg
cltd
mov
lock
and
lock
shll
setl
pop
sbb
jbe
cmp
movq
jo
div
pop
shll
sub
aas
xor
cwtl
push
mov
xchg
rcrl
aas
pop
mov
jg
pop
mov
inc
and
pop
pop
popa
and
test
cvttps2pi
inc
push
jnp
cld
int3
iret
popl
or
or
js
mov
bnd
mov
js
aas
add
repnz
lock
or
cmpxchg
push
xor
lock
mov
xorl
inc
push
lods
sub
jae
cmp
jo
lidtl
push
add
push
pusha
pop
lds
jg
inc
loopne
push
dec
jne
data16
shlb
and
and
imul
mov
push
jbe
insb
adc
pop
or
sbb
push
jp
push
jns
inc
push
cmpsb
mov
pop
push
outsl
fwait
arpl
rcr
repz
dec
mov
dec
mov
insb
add
and
insl
jne
pop
push
mov
imul
ss
add
outsl
jo
pop
inc
add
xor
push
push
push
imul
xorl
push
arpl
fwait
jno
mov
insl
adc
sbb
add
cmp
adcb
or
inc
xchg
pop
lock
xor
push
inc
cmp
popa
or
xchg
dec
outsb
scas
arpl
mov
shll
shll
jns
into
loopne
jmp
fistps
push
ja
fst
into
mov
jae
popa
mov
fists
pop
fisubrl
inc
insb
jecxz
inc
jnp
out
data16
mov
rorl
divl
mov
sbb
add
mov
mov
gs
sub
pusha
test
and
outsl
cmp
mov
xor
dec
cmp
arpl
ficomps
xchg
popa
out
outsl
lcall
inc
insb
lahf
jl
out
nop
sbb
xchg
sub
shll
or
ficoml
push
outsl
bound
xlat
mov
ss
cs
adc
scas
loopne
and
outsb
out
int
cmp
or
mov
add
and
inc
lock
mov
cmp
dec
inc
or
push
push
jns
in
add
repz
dec
mov
push
adc
jg
inc
jo
cmpsl
js
fists
jae
jnp
mov
dec
inc
fldt
push
arpl
daa
push
mov
push
rorb
bound
loopne
aaa
mov
scas
subl
xor
adcb
lock
push
adc
bound
sbb
sbb
fildll
mov
xchg
andb
insl
dec
pop
outsl
icebp
ret
cmp
jl
into
lret
jo
imul
sbb
fistps
mov
sbb
adc
add
cmp
pop
shll
push
adcb
adc
and
das
mov
sbb
popa
jmp
pusha
xchg
mov
xchg
mov
ret
incb
gs
les
sub
sbb
addps
mov
xor
in
add
inc
mov
fwait
cmp
lea
sub
movsbl
jae
testl
bnd
xor
sbbl
push
mov
fs
pop
pop
adc
dec
add
stos
inc
sbb
ret
dec
inc
mov
push
or
mov
inc
mov
xor
jmp
jne
ret
or
ret
lock
ds
loop
mull
sti
dec
adc
imul
or
inc
outsb
and
pop
push
adc
jo
daa
push
testw
rcl
dec
jecxz
pop
mov
push
xorl
shlb
mov
inc
jnp
aaa
jns
mov
arpl
fisttpl
jnp
mov
cmp
xchg
sbb
pop
dec
mov
adc
mov
fmuls
arpl
dec
mov
outsb
fildll
jecxz
loopne
into
dec
ss
popl
pop
push
loopne
mov
pop
pop
or
popa
adc
test
ffreep
pop
push
add
les
je
jbe
repz
and
insl
stos
and
jb
test
out
je
inc
inc
sub
roll
into
das
inc
inc
jae
rorl
push
jnp
add
sti
pop
cmp
adc
inc
fwait
mov
lods
pusha
inc
push
jecxz
adc
loopne
mov
push
xchg
mov
dec
sbb
jae
pop
xor
mov
stc
push
xchg
adc
fucomi
cwtl
push
out
popa
pop
loop
push
scas
pop
ret
mov
mov
cmp
sbb
cmp
shll
das
fwait
mov
ss
mov
dec
fiadds
push
add
cmpsb
jnp
add
outsb
outsl
adc
loope
popa
scas
lahf
xchg
sbb
inc
and
adc
jge
orb
addl
mov
or
pop
sbb
or
cmp
mov
jecxz
ret
and
out
push
xchg
inc
sbb
pusha
pop
pop
jp
rcl
xchg
iret
jnp
mov
xlat
clc
xorl
cwtl
jmp
popl
lods
test
imul
mov
fmuls
push
xchg
push
out
mov
ret
xorb
pop
mov
xlat
arpl
mov
lret
icebp
cs
jmp
pop
sub
xchg
adc
sti
adc
or
sub
insb
mov
jae
xor
inc
or
nopl
mov
mov
popf
fisubrs
or
aad
adc
xchg
or
xchg
adc
test
cmp
dec
jae
insb
jae
pop
inc
sub
repz
shll
inc
fiadds
les
cs
mov
ret
inc
mov
pop
dec
outsl
xchg
jo
or
cvtps2pi
pop
push
pop
bound
inc
aas
ret
push
lods
imul
pop
adc
aam
or
pop
addr16
stos
out
in
ja
aas
stos
dec
xchg
or
outsb
inc
or
fwait
push
jo
xlat
pop
mov
arpl
jae
pop
mov
mov
arpl
stos
push
push
dec
adc
add
pop
xor
ja
add
ret
subl
xchg
mov
mov
cmpsl
mov
cmp
btc
aas
and
aaa
sub
pop
sbbb
or
jnp
int3
icebp
jbe
jp
cmpsl
insl
and
outsb
inc
test
inc
jae
arpl
pop
andb
bound
addr16
mov
bound
push
push
dec
or
jnp
and
les
bound
outsb
out
add
xor
cmp
notl
push
add
idiv
push
pusha
test
jmp
or
or
xor
inc
or
and
mov
or
cmpsb
out
add
in
xor
or
add
call
xchg
pop
stos
mov
outsb
adc
push
pop
jne
scas
mov
mov
push
sub
jne
xlat
and
mov
iret
and
jo
es
aas
fs
gs
popa
ret
inc
dec
arpl
cmpsl
mov
arpl
das
adc
and
dec
outsb
xlat
mov
jg
popa
fldt
xor
or
jg
lcall
push
and
fidivrl
and
mov
lahf
inc
xor
adc
add
add
imul
and
mov
pop
jecxz
pop
mov
pop
pop
ficoml
dec
arpl
push
mov
mov
imul
pop
jo
sbbl
fucomi
fldenv
cmp
sub
xchg
aaa
dec
mov
mov
xor
insl
mov
push
aaa
aaa
mov
push
push
adc
cmp
ja
stos
ss
rcr
pop
loop
scas
jle
push
adcb
js
subl
jg
outsl
dec
pop
ja
jnp
add
mov
dec
fisttpll
insb
xor
add
sub
or
pop
out
sbb
xor
mov
dec
push
es
add
arpl
add
xor
inc
out
mov
lret
sbb
jns
fmull
idivl
xlat
or
xlat
push
push
or
insb
fldt
or
sub
addb
push
lods
adcb
sub
jno
adc
pop
xor
adc
imul
adc
scas
ljmp
or
movsl
mov
fcmovbe
adcb
push
je
mov
je
mov
pop
push
out
orl
pop
test
push
ja
dec
test
push
mov
arpl
and
mov
arpl
rolb
in
test
sbb
aaa
sub
data16
out
mov
ret
mov
mov
divl
imul
and
inc
adcb
push
divb
aaa
addr16
xor
and
sbb
aad
aaa
sub
sbb
ljmp
pop
ja
fildl
sub
jmp
mov
pop
push
mov
lock
push
fisttpl
lds
and
outsb
shlb
scas
push
outsl
cmpsl
movsb
xchg
es
pop
adc
mov
push
cmpsb
js
mov
jecxz
in
adc
pop
jbe
arpl
inc
cli
push
inc
ret
mov
lret
dec
jo
cmp
rcll
out
loopne
mov
jo
push
push
xor
and
cmpsb
mov
aas
pusha
outsl
inc
lods
addr16
daa
das
xlat
adc
test
xor
movsl
imul
popa
pop
xor
loope
and
imul
ret
sbb
mov
sti
xlat
mov
je,pt
adc
and
mov
arpl
inc
push
aas
daa
rolb
adc
push
outsl
pop
pop
push
pop
fisubs
mov
mov
push
fwait
in
in
mov
je
insb
sbb
push
fcmovnbe
push
lret
and
int
mov
jo
out
bound
mov
arpl
ret
adc
add
xlat
pop
push
pop
sub
loopne
adc
pop
push
and
pop
sub
sbb
mov
cli
mov
adc
inc
sbb
pop
xchg
sub
jne
mov
arpl
inc
adc
outsl
mov
sbbl
pop
rorl
movb
adc
lahf
sbb
add
ret
mov
or
stos
ret
and
sub
sub
pop
ja
sub
mov
cs
xchg
sbb
lock
mov
adc
dec
movsb
and
jae
addl
ja
or
aad
ja
jmp
dec
or
cmp
mov
cmpsl
scas
add
fcmovb
mov
jmp
sub
sbb
fwait
pop
inc
insb
pop
xchg
incl
pop
mov
cmp
cmpsl
scas
out
adc
sbb
pop
sub
pop
out
sbb
addr16
pop
cs
cmpsl
mov
movb
push
push
xlat
aas
or
movsl
stos
xlat
pop
pop
push
dec
into
push
imul
imulb
movsw
sub
xchg
pop
insl
lds
insb
rcll
or
popa
stos
cwtl
pop
bound
cmp
addr16
sbb
aad
mov
mov
pop
ljmp
sbb
xchg
push
xchg
mov
mov
mov
adc
sub
inc
jnp
xorl
dec
inc
imull
addr16
cmp
mov
popa
xchg
inc
xchg
or
sti
xlat
addl
inc
arpl
push
xorl
cmpb
push
pop
push
arpl
jae
sub
mov
stos
jle
cmpsb
push
mov
in
push
hlt
call
adc
xchg
ret
bound
or
jmp
mov
aad
imull
push
adc
pop
pop
mov
lahf
push
sub
xor
cmp
and
push
daa
sub
mov
and
insb
inc
and
rorl
lods
or
cs
sbb
addr16
sbb
test
shlb
daa
pop
mov
push
jmp
dec
mov
sbb
adc
sbb
push
lods
inc
pusha
push
divl
aam
xchg
lret
es
mov
dec
pop
push
xchg
jp
adc
push
fwait
data16
mov
sbb
xchg
mov
xchg
outsb
daa
or
xchg
jno
push
and
and
fs
push
scas
daa
notl
sbb
lea
sbb
cmpsb
pop
cmp
jnp
mov
add
mov
arpl
dec
lahf
jne
cmpb
mov
rcrb
inc
pop
sbb
xchg
data16
ret
lods
sarl
adc
add
inc
sub
add
add
scas
or
pop
inc
pop
pop
outsl
pop
or
fiaddl
and
and
arpl
and
mov
or
fwait
cmpsl
loop
sbb
push
dec
adc
push
push
adc
popa
xchg
les
inc
outsb
xorb
arpl
pusha
mov
imul
and
mov
and
popl
out
popa
xlat
cmp
stos
divl
inc
mov
jno
pop
xor
adc
dec
cmp
mov
sub
fistl
cmp
scas
mov
pop
xchg
jnp
psubsb
jno
stos
jae
loopw
sub
lods
push
ja
sub
loope
mov
out
cmpsl
dec
ret
fadd
mov
outsb
push
push
mov
pop
cmpsl
pop
shlb
inc
insb
repz
push
dec
pop
aas
lahf
pusha
xchg
and
popa
aam
es
mov
jg
arpl
sbb
stos
cmpb
loopne
sbb
pop
sbb
dec
jmp
test
call
cmpsl
xor
or
jmp
cmp
idivb
notl
iret
xor
adc
adc
pop
enter
daa
sbb
push
pop
and
mov
sarl
test
outsb
and
pop
mov
adc
mov
push
out
mov
or
push
push
das
aas
mov
adc
jnp
bswap
mov
jg
fcmovbe
mov
sbb
lcall
inc
lods
and
mov
movsb
mov
inc
jnp
sbb
jmp
mov
or
sbb
scas
imul
sub
in
dec
and
dec
dec
or
cmc
cmpsl
stos
fs
mov
mov
add
test
xor
nopl
jo
lods
data16
lock
adc
and
pop
xchg
lods
bound
xor
jnp
mov
xlat
fcmovbe
mov
pop
add
mov
pop
and
sbb
mov
cmpsl
jmp
sub
and
xchg
add
mov
jnp
pop
cmpsl
pop
daa
scas
push
mov
xor
fs
push
pushf
sbb
jg
sti
or
push
cmpb
sub
xor
outsl
pop
sub
adc
notl
sbb
iret
popa
jae
mov
jecxz
ficompl
mov
loope
dec
add
mov
in
jb
arpl
adc
jecxz
add
mov
mov
mov
aaa
xchg
push
xlat
cmp
dec
sub
and
adc
out
test
add
cmp
cmp
repz
xorb
repz
add
fwait
cmp
jle
jle
insl
lods
push
movsb
in
mov
adc
inc
or
leave
pop
add
jecxz
xor
mov
or
push
push
sbb
inc
xchg
pop
adc
adc
dec
insb
aam
cmp
popf
insl
je
inc
cmp
es
sub
jo
adc
js
adc
cld
fstpt
add
dec
bound
mov
jp
push
push
dec
push
jae
in
add
mov
sub
xor
jno
shll
xchg
adc
daa
sbb
mov
test
mov
inc
mov
mov
sub
and
sub
popf
add
repnz
push
push
dec
fdivrl
out
lea
mov
sub
jb
sub
loope
imul
mov
ret
jb
dec
sub
push
mov
add
cmp
mov
outsb
inc
fs
nop
inc
add
lea
and
cmp
arpl
adc
fs
mov
sbb
inc
insb
insl
fs
inc
or
cwtl
ret
jbe
imul
mov
jo
in
xor
and
in
jl
adc
sbb
dec
and
push
push
mov
cmpsb
imul
rcl
xchg
xorb
sub
and
adc
int
push
repz
or
jl
sub
cltd
or
rclb
pop
and
in
icebp
xchg
dec
sub
lock
dec
adc
jae
cmp
cmpsl
cmpsb
mov
mov
pusha
and
fs
lcall
adc
jne
lock
push
jae
frstor
mov
sbb
pop
ret
mov
push
insb
push
stos
or
imul
movsb
out
push
repnz
test
dec
fucomi
lods
xor
les
sbb
int
lret
adc
negb
inc
push
mov
andl
sbb
and
addb
insb
dec
ret
into
out
jne
lds
cltd
pop
and
dec
fs
push
pop
dec
pop
mov
or
inc
sbb
add
and
pop
sbb
mov
lcall
and
inc
roll
mov
test
sbb
je
int3
mov
adc
jnp
shll
sbb
sbb
mov
pop
cmovg
inc
je
insl
inc
insl
add
iret
lahf
and
adc
shrb
imul
push
inc
pop
dec
mov
and
or
mov
insb
cmp
int
push
jb
pop
and
popa
sbb
lcall
jne
imul
sbb
inc
or
ficoml
inc
popa
xor
std
jnp
adc
mov
add
loopne
pop
rol
push
add
inc
mov
pop
mov
add
js
mov
inc
cld
mov
or
or
cs
setnp
cmp
or
and
cmc
or
push
add
movsb
push
cmp
mov
mov
or
pop
adc
nop
inc
in
inc
mov
orl
iret
add
std
mov
or
scas
push
push
add
xor
or
in
scas
add
add
in
scas
add
sbb
rorl
add
mov
or
adc
lods
insb
into
arpl
or
es
push
mov
js
arpl
xchg
xchg
dec
pop
xor
add
add
sbb
dec
js
push
sbb
mov
sbb
gs
lods
aam
push
mov
or
push
gs
outsl
xchg
and
in
and
xor
mov
pusha
lea
shlb
inc
push
dec
push
sub
clc
out
sbb
dec
iretw
ret
xchg
sbb
outsl
adc
cmp
xor
push
and
imul
jmp
popa
sub
and
adc
adc
mov
ja
mov
imul
lock
xchg
cld
imul
and
push
outsl
adc
fs
push
fidivrl
fsts
ret
cmpsb
sub
lahf
fdivr
pop
mov
insb
negb
aam
bound
pop
lods
pop
ret
stos
cmp
jo
and
cwtl
jnp
sub
and
add
fsubrs
fs
gs
push
pop
jnp
mov
outsl
dec
je
sbb
pop
sbb
mov
push
inc
insw
pop
std
lds
mov
add
sbb
mov
mov
imul
movsl
daa
fnsave
pop
imul
add
jge
adc
fstps
inc
call
js
loopne
or
mov
and
jbe
and
loop
sub
and
fsubrs
fs
fwait
dec
fs
imul
aad
inc
cmp
xchg
dec
outsb
adc
push
adc
mov
sub
insb
jb
or
inc
gs
or
mov
out
dec
or
popa
outsb
shl
dec
jo
sbb
int
pop
aas
insb
xor
xor
push
sub
testb
or
pop
xor
pop
testl
push
les
pop
pop
xor
xor
sbb
xchg
outsl
dec
or
shl
push
lret
orl
imul
push
insb
iret
nop
test
lcall
xchg
outsl
adc
inc
adc
and
test
pop
sbb
adc
add
push
dec
loope
sub
int3
adc
pop
and
cltd
adc
mov
pop
scas
pop
mov
xchg
mov
test
add
out
ja
lods
sub
push
adc
xchg
sub
jno
add
xor
sbb
or
arpl
or
or
repz
in
loop
jbe
popf
push
dec
and
sbb
je
gs
add
xchg
adc
add
out
leave
hlt
pop
or
pusha
sbb
pop
xchg
xchg
add
xor
add
loopne
adc
push
cmp
sub
cltd
and
inc
sub
dec
outsl
jnp
rorl
insl
outsb
daa
cli
sub
mov
imull
das
into
mov
cwtl
pop
inc
push
ja
adc
imul
adc
mov
clc
dec
sbb
or
mov
cmpsl
xor
pop
add
and
repz
insb
sbb
dec
and
jns
loopne
daa
repz
insb
xor
lock
jb
scas
pop
popa
nop
xor
inc
ljmp
or
imul
xchg
push
dec
push
xor
mov
in
push
lea
lock
int3
and
mov
int
shrl
cmpl
je
inc
mov
aam
mov
push
rclb
fcoms
fstps
jle
aas
divb
jne
xor
cmp
outsb
add
and
js
push
and
and
fmull
jae
mov
test
inc
nop
leave
ret
mov
in
add
mov
xor
sub
mov
shlb
xor
out
push
push
outsb
inc
outsl
lods
jbe
adc
adc
outsl
lods
mov
in
gs
push
test
lods
cmp
inc
pop
mov
bound
sbb
mov
and
arpl
inc
dec
sbb
loopne
arpl
rclb
dec
addr16
and
sbb
fwait
and
lods
pop
and
or
inc
or
lret
sbb
jbe
in
sbb
xor
shlb
sub
cmp
dec
es
lods
and
insl
mov
lea
daa
or
adc
push
cmp
xor
push
inc
iret
xlat
adc
xor
xor
cmp
xor
fimull
je
sbb
and
dec
cmp
xorb
adc
data16
cs
inc
xor
or
dec
int3
fsub
daa
dec
fs
mov
xorl
push
sbb
and
pop
push
addr16
inc
icebp
scas
cmp
mov
and
shrl
or
loope
fisttpl
pop
inc
nop/reserved
jo
lods
popf
add
lret
pushf
ret
dec
mov
sbb
dec
adc
lds
mov
push
jo
aad
arpl
test
add
mov
or
rcr
adc
jo
add
outsl
xor
lods
popa
mov
cmp
mov
insb
dec
movsb
jge
clc
sub
enter
in
andl
cltd
pusha
fcmovnbe
adc
mov
mov
jl
jno
cmp
and
jo
mov
xchg
stos
iret
and
lock
mov
popf
sub
sub
in
ret
xchg
nop
int
adc
xchg
movsl
pusha
mov
dec
and
jne
das
pop
dec
jns
jbe
movsl
sbb
push
sbb
rorb
outsb
xor
jns
inc
subb
jne
stos
add
inc
adcl
push
jne
rcll
add
ret
orb
xor
dec
inc
jo
or
push
xor
rorl
sbb
imul
xchg
fistpl
imul
and
sbb
xor
stos
dec
lods
mov
push
loopne
dec
dec
jae
loop
mov
scas
mov
lods
add
sbb
jbe
sbb
dec
repnz
jae
mov
and
mov
addl
dec
rcl
insb
sub
sbb
sbb
push
aas
and
call
adc
nop
push
out
and
and
and
adc
jns
add
sub
pop
test
cltd
and
and
pop
inc
ljmp
or
pop
fsub
xchg
addr16
leave
add
sbb
adc
mov
ret
cmpsl
jns
aad
jbe
pop
jno
inc
add
insb
and
test
and
dec
mov
andl
stc
sbb
mov
sbb
push
test
lds
sbb
inc
jg
adc
ret
xor
jnp
xlat
jbe
pusha
adc
inc
sbb
or
mov
insl
ret
jbe
inc
xchg
xchg
das
fsubrs
movsb
jbe
and
popf
xchg
pop
or
push
inc
xor
xchg
fwait
adc
inc
sub
aaa
mov
movl
ja
jno
inc
jb
and
and
fdivrs
push
movsb
stos
repz
insb
movsl
insb
test
mov
sub
xchg
inc
sub
mov
jo
mov
sbb
shll
jmp
ret
movsl
or
xchg
mov
ljmp
mov
mov
adc
push
outsl
sbb
mov
cmp
pop
adc
popf
and
rol
mov
jecxz
and
or
fistpl
rcrl
ss
push
push
xchg
dec
data16
shlb
pop
fildl
and
and
mov
loop
and
and
jmp
cmc
mov
ds
imul
xchg
lods
loopne
pop
jp
rolb
xchg
and
dec
jne
lods
jo
dec
int3
aaa
inc
bound
cwtl
adc
pusha
imul
push
jo
je
adc
add
inc
fs
mov
vpmaddwd
bound
cmpb
push
aaa
push
test
push
add
push
shll
push
mov
and
push
gs
push
push
dec
shr
adc
inc
inc
or
stc
aaa
push
inc
or
xchg
test
add
popl
jnp
js
test
mov
push
int3
lcall
add
nop/reserved
adc
inc
movups
push
add
and
pop
js
jb
jo
push
imul
add
in
cwtl
bound
cs
in
cwtl
scas
lock
inc
add
jns
in
xor
imul
subl
dec
scas
adc
outsb
cmp
inc
dec
dec
push
mov
shrb
movsb
aas
pop
sarb
popf
pushf
dec
add
repnz
in
insl
aaa
clc
sub
lahf
je
scas
fs
cmp
movsl
in
inc
sbb
add
roll
inc
dec
gs
jo
fsub
dec
sahf
cmpsb
lret
jb
mov
push
addr16
lahf
xchg
lock
jae
ss
cs
xor
or
mov
add
add
add
add
add
inc
add
inc
xchg
gs
int
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
dec
add
dec
add
