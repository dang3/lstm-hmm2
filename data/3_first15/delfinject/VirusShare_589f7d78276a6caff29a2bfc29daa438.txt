mov
sub
dec
push
cmp
push
ja
xor
mov
jmp
mov
mov
cmp
jne
mov
imul
imul
mov
mov
lea
push
push
call
cmp
jne
mov
imul
imul
mov
push
push
call
push
call
add
lea
push
push
call
cmp
jne
mov
imul
imul
mov
jmp
mov
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
push
mov
push
mov
xor
cmp
jne
cmpl
jne
push
push
call
add
call
push
call
add
cmp
jne
cmpl
jne
push
push
call
add
inc
cmp
jl
movsbl
mov
push
call
add
mov
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
mov
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
xor
push
push
call
push
call
mov
mov
cmp
mov
jne
push
push
call
add
mov
mov
mov
mov
cmp
jne
mov
imul
imul
mov
push
push
call
mov
add
cmp
movl
jne
mov
imul
imul
mov
movsbl
push
movl
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
cmp
mov
movl
movl
jne
mov
imul
imul
mov
call
cltd
mov
movl
idiv
mov
inc
cmp
mov
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
cmp
mov
movl
jne
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
push
call
movsbl
push
mov
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
call
mov
mov
mov
mov
push
push
push
call
push
push
mov
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
mov
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
push
call
push
push
call
add
push
push
push
push
call
mov
mov
pop
cmp
pop
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
jmp
mov
push
call
jmp
push
call
mov
mov
mov
push
mov
push
push
push
call
pop
pop
add
ret
lea
lret
add
adc
xchg
adc
inc
add
add
add
add
add
add
add
add
xchg
adc
sahf
adc
stos
adc
mov
inc
add
adc
call
inc
add
adc
adc
inc
add
adc
adc
add
adc
mov
adc
mov
inc
add
adc
add
adc
add
inc
add
inc
add
adc
add
adc
inc
add
nop
nop
nop
nop
nop
nop
nop
movsbl
sub
push
mov
push
push
push
push
call
add
mov
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
mov
push
push
call
push
call
mov
mov
push
push
mov
call
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
mov
push
push
call
mov
mov
add
push
push
push
call
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
mov
push
push
call
cmpl
jne
push
push
call
add
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
lea
push
push
push
call
mov
add
cmp
jne
push
push
call
add
lea
push
call
lea
push
mov
push
push
push
push
call
push
push
call
push
push
call
add
push
call
mov
mov
push
push
call
mov
mov
test
je
mov
sub
je
dec
jne
mov
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
push
push
push
jmp
cmp
jne
mov
imul
imul
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
cmp
jne
mov
imul
imul
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
push
push
push
mov
mov
mov
push
mov
push
push
push
push
push
call
cmpl
jne
push
push
call
add
mov
test
je
mov
sub
je
dec
jne
mov
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
push
push
call
mov
mov
add
mov
push
push
push
push
mov
push
push
push
push
push
call
mov
cmp
jne
jmp
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
mov
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
mov
push
call
push
push
mov
call
mov
push
call
mov
push
call
mov
pop
pop
cmp
pop
pop
jne
mov
imul
imul
mov
add
ret
nop
nop
push
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
int
inc
add
sbb
push
sbb
bound
inc
add
inc
add
inc
add
sbb
fwait
sbb
cmpsl
sbb
nop
nop
nop
nop
push
mov
push
xor
push
mov
cmp
mov
jbe
mov
mov
mov
push
mov
push
cmp
jne
cmp
jne
imul
imul
mov
mov
mov
cmp
jb
xor
mov
cmp
jne
cmp
jne
push
push
call
add
mov
xor
lea
mov
mov
add
xor
div
xor
mov
sub
jns
mov
sub
shr
shl
add
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
imul
imul
mov
mov
inc
inc
mov
mov
cmp
jb
pop
pop
movsbl
push
call
add
add
cmp
ja
jmp
mov
pop
movl
pop
pop
ret
mov
pop
movl
pop
pop
ret
mov
pop
movl
pop
pop
ret
mov
pop
movl
pop
pop
ret
mov
pop
movl
pop
pop
ret
mov
ds
inc
add
inc
add
inc
add
inc
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
movl
movl
inc
in
mov
out
or
add
aas
movl
pop
movl
or
inc
loopne
add
mov
pop
pop
stos
aaa
inc
movl
cld
inc
inc
loopne
sub
ret
inc
inc
in
adc
inc
loopne
push
ss
inc
in
sahf
push
leave
movl
cmpl
jne
mov
imul
imul
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
push
call
add
ret
mov
cmpl
jne
push
push
call
add
cmpl
jne
mov
imul
imul
mov
movl
xor
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmpl
jne
mov
imul
imul
mov
movsbl
push
mov
call
add
add
mov
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
movl
movl
push
movl
mov
movl
mov
mov
movl
mov
movl
in
movl
mov
movl
pop
movl
movl
cmpl
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
movl
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
movl
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
mov
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
movl
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
movl
xor
cmpl
sete
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
push
call
add
ret
mov
movl
xor
mov
mov
pop
pop
pop
mov
pop
ret
lea
pusha
and
insb
and
js
inc
add
and
pop
and
andl
inc
add
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
lea
movl
rep
mov
cmp
jne
mov
imul
imul
mov
mov
mov
mov
add
cmp
mov
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
push
push
push
call
push
push
mov
call
mov
add
cmp
jne
push
push
call
add
mov
mov
mov
xor
shr
rep
mov
and
rep
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
mov
mov
div
mov
test
je
xor
div
inc
imul
mov
add
mov
xor
cmp
mov
jbe
mov
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
mov
add
lea
mov
test
jbe
mov
cmp
jne
push
push
call
mov
add
mov
cmp
jne
mov
imul
imul
mov
cmp
jbe
cmp
jne
push
push
call
mov
add
mov
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
mov
mov
mov
add
mov
shr
rep
mov
and
rep
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
push
push
call
mov
mov
mov
xor
mov
add
div
mov
test
je
xor
div
inc
imul
mov
add
mov
cmp
mov
mov
jne
mov
imul
imul
mov
mov
mov
xor
inc
mov
add
cmp
mov
mov
jl
mov
mov
cmpl
jne
imul
imul
mov
movsbl
mov
push
call
add
add
cmp
ja
jmp
movl
jmp
mov
mov
jmp
movl
jmp
movl
jmp
movl
jmp
movl
lea
mov
lea
push
push
push
push
push
push
push
push
push
push
call
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
push
push
movl
call
mov
add
cmp
jne
push
push
call
add
mov
lea
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
cmp
mov
jne
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
lea
push
push
push
push
call
test
je
push
push
call
mov
add
cmp
je
cmpl
jne
push
push
call
add
mov
push
push
add
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
lea
push
push
push
push
call
test
jne
cmpl
jne
push
push
call
add
mov
sub
cmp
jne
mov
imul
imul
mov
push
push
call
mov
add
cmp
jne
cmp
ja
mov
lea
push
push
push
push
push
mov
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
push
push
call
mov
add
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
push
lea
push
add
push
push
push
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
movl
cmp
jne
push
push
call
mov
add
mov
mov
mov
cmp
jne
mov
imul
imul
mov
mov
cmp
jne
cmp
jne
mov
imul
imul
mov
mov
add
cmp
mov
jne
imul
imul
mov
jmp
movsbl
mov
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
mov
add
cmp
mov
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
cmp
jne
push
push
call
add
mov
lea
push
push
call
mov
mov
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
cmp
jne
push
push
call
add
mov
pop
pop
pop
cmp
pop
jne
mov
imul
imul
mov
add
ret
mov
loope
inc
add
and
stc
and
add
and
add
and
add
and
add
and
add
inc
add
add
inc
add
add
daa
inc
add
daa
inc
add
inc
add
inc
add
sub
sub
cmp
inc
add
inc
add
sub
xor
inc
add
inc
add
sub
mov
inc
add
sub
hlt
sub
sti
sub
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
cmp
push
mov
push
push
push
jne
push
push
call
add
mov
mov
mov
mov
lea
cmp
rep
jne
mov
imul
imul
mov
mov
mov
lea
lea
lea
shl
push
call
push
push
call
lea
or
xor
add
repnz
not
dec
je
push
call
cmpl
jne
push
push
call
add
cmp
jne
mov
imul
imul
mov
lea
push
call
push
lea
push
lea
push
push
push
call
cmp
jne
jmp
cmp
jne
mov
imul
imul
mov
mov
push
push
lea
push
push
push
push
call
cmp
mov
jg
cmp
jne
push
push
call
add
cmp
jne
mov
imul
imul
mov
push
call
cmpl
jne
push
push
call
add
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
dec
test
jg
jmp
cmp
jne
push
push
call
add
mov
pop
pop
cmp
pop
pop
jne
mov
imul
imul
mov
mov
dec
mov
xor
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
push
mov
cmp
push
jne
mov
imul
imul
mov
mov
mov
and
mov
dec
cmp
ja
jmp
cmp
jne
mov
imul
imul
mov
movl
jmp
cmp
jne
push
push
call
mov
mov
add
movl
cmp
jmp
cmp
jne
imul
imul
mov
push
push
movl
call
mov
mov
add
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
mov
add
mov
movl
jmp
push
push
call
mov
mov
add
cmp
jne
mov
imul
imul
mov
movl
mov
and
dec
cmp
ja
jmp
xor
cmp
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
movsbl
mov
push
call
add
add
cmp
mov
mov
ja
jmp
mov
jmp
mov
jmp
movl
jmp
movl
jmp
movl
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
movl
jmp
movsbl
push
call
add
add
cmp
ja
jmp
movl
mov
jmp
movl
mov
jmp
mov
mov
jmp
movl
mov
jmp
movl
mov
jmp
push
push
call
mov
add
cmp
mov
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
cmp
mov
jne
imul
imul
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
mov
jmp
movl
jmp
movl
jmp
movsbl
mov
push
call
add
add
cmp
mov
mov
ja
jmp
mov
jmp
mov
jmp
movl
jmp
movl
jmp
movl
movsbl
push
call
add
add
cmp
ja
jmp
mov
mov
jmp
mov
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
push
push
call
push
push
call
mov
add
or
lea
push
lea
push
push
push
call
pop
pop
pop
pop
pop
ret
nop
ja
inc
add
das
inc
add
xor
int3
xor
or
inc
add
xor
js
inc
add
xor
mov
inc
add
xor
shlb
inc
add
xor
xor
inc
add
inc
add
add
inc
add
xor
pushf
xor
fnsave
inc
add
xor
fidivs
inc
add
xor
add
inc
add
inc
add
xor
xchg
inc
add
inc
add
xor
fnsave
inc
add
xor
das
xor
aaa
xor
inc
xor
jne
inc
add
xor
mov
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
xor
cmp
jge
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
push
push
call
cmp
jge
cmpl
jne
mov
imul
imul
mov
push
push
call
add
inc
cmp
jl
cmpl
jne
mov
imul
imul
mov
mov
mov
or
xor
repnz
mov
not
dec
push
mov
push
push
push
call
mov
add
add
cmp
jle
xor
mov
movl
mov
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
add
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
push
push
call
mov
movsbl
mov
mov
push
add
add
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
add
mov
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
movl
mov
test
jbe
mov
mov
mov
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
imul
imul
mov
mov
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
cmpl
jne
push
push
call
add
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
inc
mov
add
add
cmp
mov
mov
jb
mov
push
push
call
mov
add
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
call
mov
mov
mov
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
call
mov
mov
cmp
jne
push
push
call
add
cmpl
jne
mov
imul
imul
mov
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
call
add
cmpl
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
push
push
call
push
push
mov
call
push
push
call
mov
add
push
push
call
mov
mov
cmp
jne
push
push
call
add
cmpl
jne
mov
imul
imul
mov
mov
mov
push
push
call
mov
mov
push
push
call
push
push
mov
call
mov
add
push
push
call
mov
mov
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
push
call
push
push
mov
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
call
add
push
push
call
mov
add
push
push
call
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
call
add
mov
push
push
call
mov
mov
push
push
call
push
push
mov
call
movsbl
mov
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
push
push
call
movsbl
push
mov
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
push
call
mov
mov
push
push
call
push
push
mov
call
mov
mov
add
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
mov
push
push
call
movsbl
push
mov
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
and
push
push
call
mov
test
jne
inc
cmp
jl
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
test
je
push
push
call
add
push
push
call
cmpl
jne
mov
imul
imul
mov
push
call
mov
test
mov
je
cmpl
jne
mov
imul
imul
mov
push
push
push
lea
push
push
call
add
lea
push
push
call
add
cmpw
jne
push
push
call
sub
mov
lea
mov
rep
call
mov
add
cmpl
jne
mov
imul
imul
mov
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
xor
cmp
mov
jne
mov
imul
imul
mov
call
test
jne
call
test
jne
xor
jmp
mov
mov
and
test
je
mov
cmpw
je
mov
push
call
test
je
mov
and
push
push
call
add
lea
push
push
push
call
cmpl
jne
mov
imul
imul
mov
mov
mov
lea
push
push
call
add
test
jne
mov
and
mov
lea
push
push
call
add
test
jne
mov
and
mov
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
lea
lea
push
push
movl
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
lea
push
push
call
add
test
jne
mov
and
movsbl
push
call
add
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
xor
mov
jmp
mov
cmpw
je
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
call
test
je
mov
and
push
push
call
mov
add
push
push
call
test
je
mov
and
cmpl
jne
mov
imul
imul
mov
push
push
call
mov
add
push
push
call
test
je
mov
and
push
push
call
mov
add
push
push
call
test
je
mov
and
cmpl
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
test
je
cmp
jne
push
push
call
add
cmp
jne
sub
mov
lea
mov
rep
call
mov
add
jmp
cmp
jne
call
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
push
push
call
mov
add
cmp
jne
push
push
call
mov
add
mov
cmp
jne
cmp
jne
mov
imul
imul
mov
lea
cmp
mov
jne
push
push
call
add
movsbl
mov
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
push
push
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
xor
mov
cmp
lea
rep
je
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
cmp
mov
movl
jne
mov
push
push
call
add
jmp
mov
mov
lea
lea
push
mov
push
push
push
push
push
call
push
push
call
mov
add
cmp
jne
push
push
call
add
jmp
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
lea
push
push
push
call
mov
push
push
call
push
call
mov
mov
mov
or
xor
add
repnz
not
dec
je
lea
push
push
push
push
call
add
jmp
lea
push
push
push
call
push
push
call
add
mov
push
push
call
mov
mov
add
mov
jmp
cmp
je
cmp
je
push
push
call
add
xor
mov
mov
pop
pop
pop
mov
pop
ret
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
xor
cmp
mov
mov
lea
jne
push
push
call
add
push
push
call
mov
push
push
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
mov
add
push
mov
call
push
push
mov
call
mov
add
cmp
jne
push
push
call
add
mov
test
jbe
mov
mov
movl
cmp
jne
imul
imul
mov
mov
mov
push
lea
add
lea
push
push
call
mov
lea
push
push
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
lea
or
xor
repnz
not
dec
je
push
call
mov
mov
add
cmp
jne
push
push
call
add
mov
lea
mov
push
rep
push
call
lea
mov
mov
add
rep
mov
mov
mov
inc
cmp
mov
jne
mov
push
push
call
mov
add
cmp
jne
push
push
call
add
push
push
push
push
push
push
call
mov
jmp
mov
push
push
call
mov
add
cmp
jne
push
push
call
add
push
push
push
push
push
push
push
call
mov
mov
cmp
jne
mov
imul
imul
mov
test
je
cmp
je
mov
mov
sub
cmp
jle
cmpw
je
mov
mov
mov
push
push
lea
mov
push
push
call
push
push
call
mov
add
cmp
jne
push
push
call
add
push
push
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
mov
mov
lea
push
sub
push
push
push
push
call
push
call
cmpw
jne
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
push
push
push
call
mov
cmp
jne
jmp
mov
cmp
jne
mov
imul
imul
mov
mov
test
jle
cmp
jne
push
push
call
add
push
call
mov
mov
add
cmp
jne
mov
imul
imul
mov
jmp
cmp
jne
push
push
call
add
mov
lea
mov
rep
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
lea
mov
mov
rep
cmpl
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
mov
inc
cmp
mov
jne
push
push
call
add
push
push
push
push
push
push
call
mov
jmp
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
push
call
cmp
jg
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
push
call
dec
test
jg
jmp
cmpl
jne
push
push
call
add
cmpl
jne
mov
imul
imul
mov
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
push
push
mov
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
push
add
push
mov
call
mov
mov
add
cmp
jne
mov
imul
imul
mov
mov
mov
cmp
ja
mov
mov
mov
test
je
mov
push
call
push
push
call
mov
add
test
jne
mov
cmp
jne
imul
imul
mov
push
push
call
mov
add
cmp
jne
movsbl
push
call
add
add
cmp
ja
jmp
mov
jmp
mov
mov
jmp
movl
jmp
movl
jmp
movl
jmp
movl
lea
push
push
push
call
mov
lea
lea
push
push
lea
push
push
call
mov
mov
add
cmp
jne
push
push
call
add
push
push
call
mov
add
lea
push
push
push
call
cmp
jne
mov
imul
imul
mov
push
lea
push
lea
push
push
push
push
call
cmp
jne
push
push
call
add
cmp
jne
mov
imul
imul
mov
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
lea
mov
or
xor
xor
repnz
not
dec
mov
mov
lea
mov
mov
call
cmp
jae
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
lea
mov
call
jmp
cmp
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
lea
mov
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
mov
cmp
jne
mov
imul
imul
mov
push
push
call
movsbl
push
mov
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
xor
or
xor
mov
mov
mov
mov
repnz
not
dec
mov
lea
call
cmp
jae
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
lea
mov
call
jmp
cmp
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
mov
mov
or
xor
mov
mov
mov
mov
movb
repnz
not
dec
mov
lea
call
cmp
jae
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
lea
mov
call
jmp
cmp
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
mov
mov
or
xor
mov
mov
mov
mov
movb
repnz
not
dec
mov
lea
call
cmp
jae
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
lea
mov
call
jmp
cmp
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
xor
movb
mov
mov
mov
or
xor
mov
mov
mov
mov
movb
repnz
not
dec
mov
lea
call
cmp
jae
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
lea
mov
call
jmp
cmp
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
mov
mov
xor
mov
or
mov
mov
mov
movb
repnz
not
dec
mov
lea
call
cmp
jae
call
mov
test
je
mov
test
je
cmp
je
test
jne
xor
dec
push
lea
mov
call
jmp
test
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
xor
mov
mov
mov
mov
mov
movsbl
push
movb
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
push
push
call
mov
add
cmp
jne
mov
imul
imul
mov
lea
movl
mov
cmpl
jne
push
push
call
add
push
push
xor
call
mov
add
cmp
jne
mov
imul
imul
mov
mov
mov
test
mov
jne
mov
mov
mov
test
jne
cmp
ja
mov
jmp
cmp
jae
sub
cmp
ja
movsbl
mov
sub
mov
add
add
push
push
push
mov
call
add
test
je
mov
mov
mov
xor
repz
je
mov
mov
sub
inc
mov
lea
movsbl
push
push
push
call
add
test
jne
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
push
lea
push
push
call
mov
movb
test
jne
mov
push
call
mov
or
mov
xor
add
repnz
not
dec
mov
cmp
jbe
call
mov
test
je
mov
test
je
cmp
je
test
jne
dec
push
lea
mov
call
jmp
mov
mov
sub
mov
jmp
test
jne
push
lea
call
jmp
mov
cmp
ja
cmp
jae
push
lea
call
push
lea
call
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
xor
cmp
movb
je
mov
dec
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
jne
mov
imul
imul
mov
push
push
call
mov
mov
mov
add
mov
mov
mov
cmp
mov
jae
call
mov
mov
sub
cmp
jae
mov
mov
cmp
jae
mov
mov
mov
mov
mov
sub
sub
cmp
ja
call
mov
mov
test
je
mov
test
je
cmp
je
mov
push
lea
mov
call
or
xor
repnz
not
dec
push
mov
push
lea
call
test
je
mov
mov
mov
mov
mov
push
shr
rep
mov
and
rep
lea
call
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
cmp
jae
mov
push
add
lea
add
push
push
call
mov
add
test
ja
test
jbe
sub
lea
add
mov
call
cmp
jae
call
mov
test
je
mov
test
je
cmp
je
mov
test
jne
dec
push
mov
lea
call
jmp
mov
push
jmp
mov
test
jne
test
je
push
lea
call
jmp
cmp
jae
mov
push
lea
call
mov
cmp
jae
mov
push
add
lea
add
push
push
call
mov
add
mov
test
jne
mov
mov
mov
lea
mov
shr
rep
mov
mov
and
rep
mov
mov
movb
push
push
call
mov
mov
add
lea
jmp
mov
add
dec
mov
mov
jne
cmpl
jne
mov
imul
imul
mov
push
call
cmpl
jne
mov
imul
imul
mov
mov
xor
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
movb
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
xor
mov
mov
mov
cmp
jne
mov
imul
imul
mov
cmp
je
cmp
jne
imul
imul
mov
mov
lea
push
push
push
push
push
push
push
push
push
call
movsbl
mov
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
mov
cmp
jne
mov
mov
lea
inc
push
push
mov
push
push
push
push
call
mov
push
call
cmp
jne
mov
imul
imul
mov
movsbl
push
call
add
add
cmp
ja
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
xor
mov
jmp
mov
cmp
je
cmp
jne
push
push
call
add
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
mov
lea
push
push
push
push
push
push
push
push
push
call
mov
cmp
jne
mov
mov
lea
inc
push
push
mov
push
push
push
push
call
mov
push
call
cmp
jne
mov
imul
imul
mov
mov
cmp
je
mov
test
je
cmp
je
dec
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
dec
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
add
inc
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
ss
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
inc
add
cmp
inc
add
ds
add
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
inc
add
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
pusha
inc
add
pusha
inc
add
popa
inc
add
popa
inc
add
push
push
xor
push
mov
call
push
push
mov
call
mov
mov
mov
mov
mov
mov
cmp
mov
movl
mov
movl
movl
jne
push
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
imul
imul
mov
lea
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
cmp
jne
push
push
call
add
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
push
push
call
mov
push
call
push
push
call
movsbl
push
call
add
add
cmp
ja
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
mov
push
push
lea
push
push
call
test
je
mov
mov
lea
push
call
lea
push
call
push
push
lea
push
push
call
test
jne
cmpl
jne
mov
imul
imul
mov
mov
pop
pop
pop
pop
add
ret
nop
or
add
gs
add
je
add
ja
add
pop
ret
int3
int3
int3
int3
int3
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
add
add
add
add
add
add
addb
add
addb
orb
add
cwtl
add
xor
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
loopne
add
clc
add
addb
add
add
addb
add
add
add
add
add
add
add
xchg
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
ret
call
add
add
add
add
les
add
add
add
add
add
add
add
movb
test
add
in
add
add
add
rcl
add
add
in
add
add
add
sub
add
mov
add
in
add
add
add
add
shlb
in
add
add
add
pushf
dec
add
add
add
add
add
add
add
dec
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
mov
or
add
add
add
jg
mov
add
add
js
sti
mov
add
add
xchg
add
add
add
js
idivl
add
add
xchg
loopne
add
add
js
add
out
out
add
add
xchg
lock
ja
add
xchg
add
out
jp
or
addb
add
push
js
out
jmp
xchg
add
jp
jmp
clc
js
add
add
push
js
scas
out
mov
ja
add
push
ja
mov
mov
add
add
or
mov
push
ja
psubb
incl
ja
or
mov
mov
add
add
add
add
clc
pop
ja
ja
ja
ja
ja
add
ja
js
add
or
inc
inc
inc
inc
inc
dec
js
add
add
out
data16
int3
dec
js
add
add
decl
hlt
ja
data16
dec
js
add
add
mov
jbe
insb
dec
js
add
add
add
or
ja
dec
js
add
add
add
or
out
out
out
dec
js
add
add
add
or
jle
ja
dec
js
add
add
add
or
ja
out
out
dec
js
add
add
add
or
ja
pushl
js
add
add
add
or
inc
inc
inc
inc
inc
dec
js
add
add
add
or
js
add
add
add
add
mov
pop
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
add
push
push
push
add
sldt
add
add
incl
add
add
incl
add
incl
pop
incl
addb
add
mov
leave
leave
leave
add
incl
incl
add
add
mov
mov
out
mov
add
mov
mov
or
add
or
add
or
cmpsl
mov
int3
adc
or
mov
mov
loopne
test
sub
stos
stos
stos
stos
mov
ljmp
or
mov
xor
mov
xor
mov
inc
xor
mov
inc
inc
dec
mov
out
out
out
mov
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
orb
add
pop
bound
bound
xor
xor
xor
xor
xor
add
add
bound
into
lret
lret
clc
lock
aam
faddl
fcoml
xor
xor
xchg
dec
into
into
incl
add
bound
ret
ret
into
lret
into
into
mov
call
clc
add
xchg
add
mov
xor
add
xchg
into
into
into
dec
into
into
add
add
add
add
bound
mov
mov
ret
ret
mov
mov
add
xchg
add
mov
decl
xor
add
add
into
dec
into
into
incl
add
movsb
mov
add
add
jb
mov
mov
mov
ret
mov
xchg
repnz
xchg
add
mov
clc
test
loope
out
out
xor
add
add
dec
lret
dec
into
into
add
add
mov
mov
mov
mov
mov
mov
mov
mov
into
mov
xchg
add
clc
test
loope
in
fsub
loope
out
out
out
xor
xor
add
add
into
cld
clc
lock
into
into
incl
add
movsb
mov
bound
into
lret
mov
mov
mov
mov
mov
ret
add
add
loope
in
fsub
out
mov
stos
mov
mov
xor
xchg
into
lret
dec
into
into
or
add
xchg
bound
into
lret
into
into
into
into
into
mov
mov
add
fcoml
or
add
xchg
stos
mov
mov
xor
xchg
dec
lret
clc
lock
add
imul
sahf
sahf
sahf
sahf
mov
sahf
add
add
xchg
add
xchg
add
add
fcmovu
fcmovu
fiaddl
jle
xchg
add
add
dec
into
into
cld
clc
lock
lret
add
xchg
bound
in
lret
in
fcom
clc
test
decl
xlat
add
add
adc
mov
xchg
cld
clc
lock
int
mov
mov
mov
xor
xchg
cld
clc
lock
clc
lock
add
bound
in
fcom
bnd
xlat
add
faddl
fcoml
xchg
xchg
xchg
imul
mov
xchg
ret
fcmovbe
int
fcmovu
xor
xor
add
add
cld
clc
lock
clc
lock
add
mov
fs
add
rolb
fcoml
ljmp
ljmp
pushl
stos
movsb
mov
cld
clc
lock
xor
add
xchg
cld
clc
lock
clc
lock
add
movsb
mov
add
xchg
add
xchg
add
lock
clc
lock
lock
lock
mov
mov
ret
ret
ret
ret
mov
or
add
xchg
add
add
add
add
cld
clc
lock
clc
lock
add
movsb
mov
bound
fcoml
xchg
clc
fs
clc
lock
lock
lock
loope
mov
mov
xchg
xor
xor
add
add
add
add
mov
xchg
add
add
add
xchg
cld
clc
lock
clc
lock
add
movsb
mov
add
add
jp
jp
ljmp
ljmp
ljmp
pushl
lock
sub
cmp
popl
popl
mov
les
or
add
add
add
xchg
cld
clc
lock
clc
lock
add
movsb
mov
add
add
cld
clc
lock
xchg
mov
mov
jb
jp
cld
clc
lock
clc
lock
incl
add
add
add
add
xchg
jle
xchg
add
movsb
mov
movsb
mov
or
add
jle
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
bound
bound
bound
imul
add
movsb
mov
add
add
add
add
add
add
add
add
or
add
add
push
add
add
jmp
bound
add
movsb
mov
movsb
mov
xchg
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
add
add
add
xchg
xchg
xchg
mov
bound
add
add
add
add
inc
mov
add
bound
pop
imul
add
xchg
test
add
add
add
add
add
add
inc
mov
xchg
bound
imul
add
add
lock
add
incl
inc
imul
fcoml
fcoml
call
push
and
push
and
inc
mov
add
add
cld
clc
lock
decl
add
lock
call
jmp
ret
xchg
add
xchg
add
xchg
add
xchg
add
push
and
push
and
lock
mov
add
xchg
xchg
mov
cld
clc
lock
jmp
jmp
ret
xchg
add
xchg
add
xchg
add
xchg
add
push
and
lock
mov
add
lock
call
jmp
jmp
ret
xchg
add
xchg
add
xchg
add
xchg
add
lock
mov
add
lock
jmp
clc
and
clc
and
clc
and
imul
pop
fcoml
fcoml
cld
clc
lock
mov
add
lock
cld
ret
jmp
clc
and
clc
cld
clc
and
imul
pop
fcoml
addb
cld
clc
lock
mov
add
lock
cld
ret
mov
cld
clc
cld
clc
and
repnz
ret
ret
xchg
add
lock
mov
add
incl
imul
fs
ret
clc
and
call
jmp
clc
add
imul
test
add
inc
mov
add
incl
add
add
add
add
add
add
inc
mov
add
inc
ret
xchg
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
ret
add
incl
add
incl
inc
ret
add
incl
incl
incl
add
incl
add
add
ret
add
add
xchg
ret
ret
inc
rol
add
add
rol
mov
add
incl
add
add
ret
add
add
xchg
ret
ret
ret
incl
std
add
add
add
std
std
add
div
add
add
add
xchg
mov
incl
ret
ret
incl
incl
add
incl
add
pushl
rol
add
add
xchg
incl
add
incl
incl
inc
ret
incl
incl
inc
rol
rol
incl
add
incl
add
incl
add
incl
add
add
add
add
jle
repz
add
inc
ret
xchg
add
incl
incl
std
std
std
incl
add
mov
mov
ret
add
incl
add
add
stc
stc
incl
add
pushl
ret
add
add
add
add
add
add
add
add
add
add
test
incl
mov
incl
add
add
jle
addb
pushl
mov
cmp
xchg
incl
xchg
incl
xchg
incl
add
incl
loope
incl
addb
mov
addb
ret
inc
ret
ret
inc
ret
ret
inc
ret
xchg
add
add
add
xchg
xchg
xchg
xchg
ret
incl
push
push
fcoml
and
incl
add
incl
add
add
incl
push
imul
shrl
xchg
add
fcoml
and
incl
add
incl
add
add
xchg
ljmp
push
repz
stc
stc
push
call
mov
fcoml
stc
incl
add
incl
add
add
imul
shrl
repz
stc
stc
push
call
mov
push
repz
add
incl
add
add
imul
push
and
push
push
and
stc
push
and
repz
and
repz
add
incl
add
add
fcmovu
call
aam
call
aam
dec
iret
iret
dec
iret
iret
call
aam
fcmovu
xchg
add
mov
lods
inc
orb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
addb
inc
add
lods
inc
addb
inc
loopne
lods
inc
lock
cld
add
add
incl
add
add
push
add
gs
add
add
add
add
add
add
jae
add
popa
add
add
jbe
add
or
add
add
push
add
jb
add
outsb
add
add
add
mov
dec
add
add
add
xor
inc
add
add
cmp
cmp
add
add
add
add
sub
add
add
sub
add
xor
add
xor
xor
xor
inc
add
add
add
add
xor
xor
jge
add
add
add
push
inc
movsl
icebp
or
into
and
fwait
aaa
cmp
popf
mov
into
jge
dec
pop
push
out
and
pop
sub
fsubrs
push
cltd
mov
stos
ja
pop
insb
jg
into
mov
push
push
mov
push
aas
mov
cmc
cmp
xchg
popf
mov
das
pop
add
shrl
aam
jne
mov
mov
push
and
lea
test
ss
inc
pop
dec
push
xchg
adc
pop
fs
mov
sub
daa
shlb
out
jae
ret
hlt
mov
xor
push
pop
pop
jmp
shrb
push
jbe
add
pop
xor
add
jno
mov
pop
adc
shll
mov
jmp
pop
sub
popa
daa
je
and
push
inc
pop
lock
and
jns
test
fisubrs
mov
jge
lahf
xchg
negb
popf
roll
pop
push
movsb
inc
mov
ds
mov
test
test
lret
shrb
fsubrs
fiadds
pop
movsb
orl
and
movsl
adc
cltd
lcall
jns
jne
push
push
sbb
aam
push
mov
xlat
mul
mov
add
in
and
das
push
sbb
dec
in
pushf
push
js
ja
or
sbbl
inc
or
xor
sub
shl
and
push
les
addr16
lock
pop
mov
xchg
std
sbb
mov
push
jecxz
js
push
mov
sbb
fsubp
or
sub
lods
das
jge
xor
jp
cmpsl
in
inc
stc
xchg
cmp
data16
xchg
lock
mov
ror
test
cmp
dec
add
mov
cmp
lock
xlat
insb
jae
stos
clc
gs
popf
aam
push
cmp
xchg
mov
mov
cld
pop
push
pop
or
movsl
imul
mov
xor
xor
xchg
mov
in
adc
adc
movsl
add
mov
sbb
dec
enter
daa
xchg
pusha
jo
scas
aaa
xchg
repnz
sub
divl
fsubs
mov
ret
out
sub
xchg
mov
xchg
outsb
fstpl
mov
jmp
ja
fcompl
adc
push
pop
sbb
push
sbb
cmp
xchg
pusha
int
mov
ljmp
testb
inc
adc
cltd
ret
divl
sbb
aaa
lahf
cmpsb
inc
adc
adc
hlt
pop
sbb
dec
push
outsb
mov
sub
fsubl
add
fildl
lds
add
add
push
xor
push
xor
add
xbegin
mov
and
push
fs
jecxz
cld
lret
and
scas
fistpl
aaa
mov
push
sti
pop
mov
arpl
aad
into
jnp
scas
sbb
adc
mov
cwtl
ss
cltd
lcall
mov
fadds
in
push
sti
inc
js
aam
jecxz
aas
cmpl
sbb
dec
sbb
insl
xchg
cmpb
dec
stc
or
sub
and
pop
mov
xchg
andl
arpl
cmp
clc
sbb
in
push
and
out
bound
pusha
cmp
dec
dec
into
add
push
add
mov
dec
mov
jno
add
push
movsl
push
pop
mov
fstp
push
jg
addr16
test
mov
sahf
lahf
fisttpll
jb
fmuls
ja
adc
mov
jae
mov
shr
and
out
insl
iret
jno
jnp
push
inc
jns
dec
in
jne
jmp
out
xchg
notl
sti
push
repz
lds
aas
es
sub
and
ja
je
mov
and
inc
mov
in
fxch
jg
dec
enter
bsr
jno
add
jp
outsl
cmp
rcll
add
scas
or
pop
jp
dec
repnz
and
or
stc
cmp
add
icebp
rclb
sahf
ja
mov
push
imul
and
mov
fsubr
cmpsl
dec
mov
call
clc
addr16
inc
sbb
pop
scas
cmp
jo
sub
fsubrs
mov
fsts
dec
sbb
or
in
fildl
mov
in
adc
mov
fisttpl
nop
ret
rorl
dec
pop
lret
cmc
movsl
xchg
xor
mov
fcoms
inc
dec
cmpb
jae
dec
xchg
dec
ljmp
sub
mov
xchg
add
aad
pusha
les
fldt
addr16
fsubrs
adc
rcrb
mov
int
cmp
adc
cmpsb
cli
push
lea
pop
lcall
add
test
dec
cmpsl
pop
push
test
outsl
imul
sbb
lock
in
insl
aas
fisttpll
gs
pop
ja
fcomp
fimull
cmpsb
sbb
rolb
fsubs
jbe
pop
and
dec
add
adc
mov
dec
or
ret
popa
push
ret
pop
push
ret
sub
sub
mov
insl
xchg
lea
int
dec
inc
adc
mov
out
push
mov
outsl
scas
push
movsb
dec
push
inc
adc
xchg
push
inc
sbb
jl
test
cmpsb
sub
push
out
lea
data16
stc
push
dec
pushf
jno
add
sbb
pop
ja
imul
movsb
xor
insl
mov
mov
xchg
lods
mov
sub
or
das
test
ffree
repz
push
fsubr
aaa
pop
leave
ja
rolb
out
gs
xchg
imul
les
push
loop
lret
out
inc
mov
out
inc
fstl
xor
jnp
imul
xchg
jb
and
gs
into
push
aas
xorl
mov
dec
test
jb
pushf
or
mov
test
arpl
push
mov
pop
jae
add
inc
mov
lret
push
and
mov
mov
jg
dec
or
fmuls
out
push
jbe
pop
mov
xchg
cmp
pop
mov
fimuls
mov
dec
cmpsb
and
in
cmp
push
sbb
and
mov
xor
mov
mov
in
hlt
movsl
adc
dec
lds
movsl
mov
outsb
sbb
fnstsw
push
cli
mov
lock
cmpsl
or
pushf
into
cld
push
aam
ret
sbb
popf
dec
mov
sub
jno
push
inc
push
insl
test
add
add
and
jnp
add
dec
mov
lds
cltd
movsb
shlb
test
insl
jmp
sahf
fisubl
pop
add
and
stos
dec
lret
dec
dec
pop
sti
rcl
or
call
pop
mov
inc
fstpt
xchg
callw
jge
jecxz
iret
push
pop
mov
sbb
dec
popf
cmp
aam
imul
daa
add
sbb
jne
mov
aas
push
popw
mov
pop
xchg
movsl
mov
add
mov
dec
adc
out
aam
fnstsw
stos
shl
and
mov
jnp
cmp
rcll
stos
xchg
dec
add
dec
sbb
das
aad
cmpsb
lret
mov
dec
enter
add
arpl
out
and
xchg
mov
xor
ret
pop
aad
aaa
add
inc
pop
jo
add
wrmsr
and
rorb
aam
xchg
push
out
pusha
sbb
mov
lods
ja
fadd
ds
ds
add
mov
leavew
inc
mov
insb
inc
push
xor
test
aas
dec
iret
jg
xor
add
fistps
daa
aaa
and
ja
lret
lods
into
repnz
insl
lea
int3
lods
sub
stos
add
test
dec
out
fnstcw
push
or
cmp
jmp
lock
popf
jo
sarl
dec
gs
pop
ja
fcomp
fimull
cmpsb
daa
aaa
xchg
outsb
adc
int3
inc
jnp
push
mov
add
xor
xor
mov
aad
imul
int
dec
inc
adc
mov
out
push
mov
outsl
scas
push
movsb
dec
push
inc
adc
xchg
mov
mov
mov
bound
sbb
jbe
pop
cmc
jle
sub
add
mov
adc
add
in
cmp
pop
mov
inc
fists
cmp
add
movsl
shlb
sbb
pop
jg
dec
ret
mov
insb
lea
mov
xchg
mov
push
xchg
enter
pop
add
fwait
xchg
cmpb
mov
adc
js
ret
dec
mov
out
inc
out
pop
ss
jnp
cmpsl
lahf
in
xchg
andb
cmp
gs
mov
push
inc
xorl
mov
dec
test
jb
pushf
or
mov
test
addr16
push
mov
pop
jae
add
inc
mov
lret
push
and
mov
fwait
mov
jg
cmp
aaa
fcomp
add
pop
jns
pop
mov
xchg
cmp
fimuls
mov
dec
cmpsb
and
in
cld
push
and
xor
and
mov
xor
mov
mov
in
hlt
movsl
sub
dec
lds
movsl
mov
outsb
sbb
fnstsw
push
cli
mov
lock
cmpsl
or
pushf
into
cld
push
aam
ret
sbb
in
xchg
add
mov
jl
and
test
add
add
and
jnp
bound
mov
pop
stos
bound
movsb
rclb
icebp
sahf
fidivrl
add
and
stos
or
xor
dec
dec
pop
sti
shlb
call
pop
sbb
jp
inc
fstpt
xchg
callw
jge
jecxz
jg
adc
shlb
dec
popf
cmp
fs
imul
daa
add
sbb
jne
mov
aas
push
cmpsb
pop
mov
xor
mov
or
mov
dec
mov
or
aam
cs
xchg
stos
shl
and
mov
jnp
cmp
rcll
flds
mov
dec
stos
sbb
das
aad
cmpsb
jnp
inc
dec
lret
dec
data16
inc
dec
dec
out
and
xchg
mov
jae
out
mov
xor
dec
pop
jo
ret
mov
wrmsr
test
rorb
aam
xchg
push
das
pusha
sbb
and
ffree
ds
ds
pop
stos
lods
xchg
mov
leavew
inc
mov
insb
subl
push
xor
test
aas
sub
jg
xor
add
fistps
daa
aaa
and
ja
lret
lods
push
mov
iret
adc
sub
inc
fsubs
cmp
int3
sub
sub
push
pop
popf
pop
sti
adc
xor
jbe
stos
pop
jmp
pop
sub
xchg
imul
in
push
pop
adc
xor
jns
std
push
out
test
add
sbb
mov
or
add
bound
movsb
in
js
push
aaa
lret
hlt
cmp
fimuls
jb
xchg
dec
lods
jne
test
addr16
lret
fisubrl
fnsave
stc
xor
dec
inc
sub
bound
and
pop
repnz
sub
cltd
mov
loope
add
sbb
stos
and
cmp
mov
xor
inc
mov
popa
push
xor
lds
push
or
sub
andb
ss
push
dec
ljmp
or
xor
mov
push
push
mov
fnstcw
sbb
push
loopne
xor
add
mulb
out
in
push
lods
jno
ja
ret
lods
pop
jp
inc
popf
andl
je
or
push
dec
inc
jne
outsb
adc
fwait
push
aam
cmp
leave
orl
jp
or
and
adc
clc
adc
or
cmp
rcrl
ret
add
scas
adc
push
xlat
call
dec
jl
mov
movsl
or
sub
shll
shll
inc
scas
lahf
mov
cwtl
and
jno
push
enter
mov
fistpll
outsl
xor
bound
fwait
add
sub
pusha
push
jnp
aad
push
bound
inc
or
jne
insl
mov
aaa
or
cmpb
inc
push
js
ret
ret
sub
hlt
inc
ret
lds
aaa
dec
int
aaa
cmpsb
ja
mov
sub
fisubrl
add
fistpll
dec
push
inc
sub
cmp
les
mov
or
shrl
iret
push
outsb
inc
daa
push
fisubrs
sub
test
adcb
cmp
clc
add
xchg
sub
aad
repz
mov
pop
adc
cltd
inc
adc
cmpsl
sub
jle
cwtl
rcl
iret
in
lea
test
and
rep
std
add
add
pop
jno
fists
hlt
cmp
inc
sbb
push
mov
out
xchg
xor
mov
fmuls
inc
popa
sub
mov
stos
xchg
xor
mov
push
mov
xlat
push
push
js
cmc
mov
mov
xor
sub
push
into
mov
in
mov
xor
jmp
mov
xor
push
inc
mov
leave
mull
and
dec
push
std
std
pop
adc
ja
push
jne
push
and
loope
loopne
pusha
dec
mov
xchg
scas
dec
mov
cmp
and
pusha
push
fldt
xchg
ds
out
inc
ret
push
mov
cmc
lcall
popf
mov
aas
loope
movsl
push
mov
out
rolb
jno
gs
movsb
and
aad
jns
push
int3
jmp
mov
or
mov
push
xchg
lahf
dec
movb
ret
sbb
sbb
lcall
jo
out
jno
popf
es
aad
mov
lods
adc
adcl
cmp
int3
xchg
cwtl
sub
mov
dec
das
int3
inc
mov
sub
dec
and
ds
subb
jecxz
aas
mov
loope
fidivs
clc
pop
fldenv
shr
mov
jns
sti
sarb
vcvtss2sd
scas
or
loop
xchg
xchg
mov
sti
xrelease
jb
shll
and
mov
cmpl
fisubrl
fadds
out
push
lds
sbb
push
dec
mov
loop
fidivrs
adc
and
clc
ja
lea
pop
inc
jno
hlt
mov
xorb
push
mov
icebp
mov
adc
loope
pop
mov
mov
add
push
mov
adc
outsb
sub
dec
xchg
xchg
dec
loope
lds
leave
add
adc
popf
std
cld
nop
dec
bound
jg
push
iret
push
pop
sarl
jge
leave
int
pop
mov
inc
pushf
cmpsb
or
sbb
pusha
add
or
cmc
sub
lea
jge
fistps
dec
sub
and
xchg
pop
or
jge
or
arpl
pop
jb
lret
add
out
pop
push
mov
jno
push
sbb
lea
xchg
jmp
dec
sub
mov
or
das
mov
pushf
push
sbb
cmpsl
pop
push
mov
xchg
pop
push
jmp
aas
outsl
push
cli
out
jbe
ja
ficomps
repnz
ljmp
shlb
cwtl
iret
xorb
lahf
pushf
cmpl
dec
in
fisubrs
mov
jbe
pop
pushf
in
or
addl
iret
rclb
das
cmp
movsl
enter
mov
shrb
jp
ja
pusha
push
sarb
iret
sti
and
push
mov
cs
mov
iret
push
mov
test
xor
push
push
fwait
jb
movsl
sbb
andl
inc
testb
into
shr
cmp
inc
btr
in
jno
xor
xchg
popa
ds
push
fisubs
and
les
lahf
int
or
and
adc
xchg
test
cmp
mov
in
dec
xor
fiadds
dec
test
inc
lea
fs
pop
fstps
or
pushl
clc
mov
cmp
adc
imul
inc
inc
or
aaa
dec
aas
in
lock
sub
push
sahf
pusha
cltd
push
and
shlb
mov
cltd
add
jge
xor
sbbb
add
mov
add
stos
mov
jecxz
cli
push
dec
punpckhbw
push
add
pop
dec
jo
xchg
cmpsb
jecxz
push
xor
cwtl
add
ret
sti
or
int
lds
xchg
or
in
gs
loopne
sbb
movsb
in
movsb
xor
mov
jmp
nop
aaa
and
pop
sbb
xchg
pop
out
jb
jp
xchg
shrb
dec
pushf
dec
inc
xchg
gs
mov
lods
mov
mov
mov
popa
pop
adc
cld
test
xor
jno
push
or
scas
push
adc
decb
notb
lock
xchg
ja
cmp
lea
sbb
push
stc
jae
dec
outsb
call
inc
xchg
shll
es
sbb
popf
inc
pusha
inc
jge
xchg
ficomps
jne
ret
ret
scas
or
fldlg2
pop
aas
push
dec
mov
mov
adc
mov
lahf
mov
mov
xchg
xor
pop
push
fisttps
imul
aam
aad
cs
or
xchg
int3
sahf
loop
mov
ljmp
negl
mov
faddl
and
pusha
popf
das
sub
sub
stc
inc
imul
test
mov
imul
sbb
lahf
loopne
mov
mov
xor
cs
adc
inc
cmp
aaa
test
mov
lock
inc
in
inc
and
out
sti
std
push
out
fstpt
jp
ret
lods
cmc
cmp
adc
cmp
stos
inc
pop
sbbb
icebp
in
gs
cmpsl
xorb
out
emms
push
shrb
pminsw
push
pop
dec
push
sbb
clc
scas
mov
and
fisubl
cmc
inc
mov
xor
inc
sahf
push
jge
dec
addr16
adc
daa
cmpsb
out
les
cwtl
lea
lahf
test
insb
inc
pop
dec
adc
inc
cli
push
jl
xlat
ret
test
lods
inc
mov
xchg
adc
aas
std
mov
test
or
ja
in
bnd
dec
lds
push
lea
xlat
mov
movsb
testb
out
and
mov
and
int3
mov
inc
xchg
lahf
xchg
add
push
leave
xor
mov
or
shl
cwtl
mov
adc
lds
mov
xor
jle
jae,pn
popf
xlat
adc
sbb
cmpsl
pusha
scas
push
cmc
fnstenv
push
ljmp
push
cltd
subl
jl
sbb
pop
fptan
je
mov
xchg
popa
mov
sub
enter
das
les
mulb
popf
insb
popf
movsl
cmova
sub
addr16
dec
push
outsb
adc
imul
adc
into
subb
cmp
mov
in
jle
movsl
jns
xorb
lcall
cmc
push
sub
imul
outsb
outsl
xchg
push
jl
xor
xchg
and
jb
int3
add
sti
test
test
inc
xor
sub
sbb
jecxz
cmp
int
mov
inc
in
stos
mov
cmpsl
cs
sub
cld
bound
or
and
pusha
xchg
and
iret
and
mov
push
je
fcomi
sub
pop
sbb
les
or
xchg
mov
fdivrs
icebp
jne
cwtl
in
pop
in
loopne
jmp
out
imul
in
ja
jmp
ds
push
mov
sbb
scas
add
pop
pop
js
push
out
iret
mov
pop
cmc
hlt
fistpl
clc
fwait
rcrl
dec
popf
xchg
fs
push
cmc
sbb
rolb
loop
shlb
add
mov
xor
frstor
jmp
adc
xor
cmp
push
outsl
aam
sbb
mov
dec
mov
mov
inc
enter
scas
cmp
cmp
cmp
and
pop
sub
lret
xor
mov
shlb
inc
addr16
or
hlt
inc
push
push
bound
mov
dec
loope
mov
pusha
xor
cmp
xchg
fisubs
push
out
and
cmpl
and
ficoms
insl
inc
mov
mov
jns
imul
shlb
ja
stos
mov
mov
sarb
jge
sbb
vandpd
data16
jmp
rcr
pop
loope
ret
mov
cwtl
jne
rdtsc
js
clc
inc
inc
andb
push
push
rcll
lods
test
lea
jg
int
pop
xchg
mov
popf
test
dec
push
add
mov
mov
stc
loope
pop
cmpb
mov
or
shr
sbb
xchg
cmp
pushf
dec
push
mov
loopne
and
push
sub
pop
xor
test
loope
xchg
outsl
andl
jmp
roll
dec
out
pop
arpl
and
jp
les
ss
jge
push
rclb
dec
pop
pmulhw
sbb
push
pop
mov
push
jnp
jns
aam
xor
call
loopne
adc
mov
ret
movsb
push
data16
sbb
nop
fwait
paddw
xlat
add
pop
fs
call
test
sbb
test
stos
movsl
cwtl
lret
dec
fsubrl
pop
sub
xchg
cmp
test
das
loope
into
sbb
enter
aas
xchg
mov
pop
fwait
div
pop
test
repnz
test
lds
out
and
or
dec
loopne
mov
jne
add
mov
fdivl
and
sti
xchg
jge
cmp
mov
in
inc
jo
mov
jge
xchg
jno
test
sub
mov
movsl
or
cmp
data16
mov
nop
cs
push
stos
add
push
jb
push
inc
test
shrl
cmp
loope
mov
sahf
mov
mov
je
pop
pop
dec
cmp
aas
mov
adc
es
cwtl
cwtl
sbb
push
and
dec
fs
out
ficoms
mov
sti
add
aaa
cmp
repz
pop
pop
rcll
sti
mov
pop
repz
sub
mov
or
sahf
fs
and
jmp
inc
iret
cmpb
sub
leave
subb
push
int
shlb
push
dec
scas
pop
mov
jnp
cmpsb
jbe
jg
mov
sbb
pop
sbb
lock
bnd
dec
cmp
jbe
outsb
daa
sbb
lcall
sub
xlat
push
popa
add
jge
xlat
mov
push
test
je
aas
xchg
ret
ss
dec
fistps
inc
sub
clc
mov
dec
dec
and
pop
cmp
cltd
daa
inc
adc
sarl
mov
loopne
out
push
lods
jmp
in
cmp
adc
and
popf
dec
lea
addr16
int
inc
sbb
in
mov
sub
icebp
mov
lods
push
cld
sub
lock
xchg
mov
mov
mov
push
aad
sbb
xor
inc
add
test
jb
ret
mov
mov
adc
mov
adc
lcall
add
mov
mov
cmpsb
orl
jb
sbbl
arpl
mov
lahf
popa
push
inc
insl
cmpsb
popf
xorb
push
mov
stos
push
movsb
cmp
jp
pop
adc
cmp
mov
push
or
add
xchg
push
cli
mov
test
cltd
rcl
popf
push
inc
popf
ss
rcr
or
xlat
ljmp
add
add
stc
cmpsb
push
mov
xor
jp
add
inc
rcl
adc
push
inc
lock
pop
mov
mov
out
lret
lahf
insl
jle
jmp
jno
fwait
pop
cli
lret
insb
pop
jno
lds
inc
lret
into
jle
xchg
leave
jne
push
jne
cmp
pushf
cli
jb
mov
sbb
mov
in
fpatan
lret
test
rol
pop
jnp
ss
inc
push
dec
mov
sbb
bswap
test
push
xor
and
lret
cli
pusha
fmul
aad
fisttps
mov
push
leave
and
sbb
in
fucomi
sub
sbb
cli
int3
xor
inc
mov
orl
mov
push
mov
dec
scas
addr16
rcl
pop
gs
sbb
ss
mov
movsb
popf
mov
fwait
ret
inc
dec
pop
mov
out
xor
hlt
jg
stos
repz
pop
xchg
clc
roll
inc
inc
inc
pop
iret
divl
dec
jno
shlb
sub
sbbb
aad
in
pop
ds
sahf
iret
loope
loope
fidivrs
outsl
xchg
pand
sarl
shrl
pop
lea
pusha
mov
or
sbb
push
jne,pt
sbb
jle
in
sbb
cs
cwtl
sub
sub
inc
scas
inc
pop
xor
hlt
aas
rclb
repz
pop
jp
test
sub
popf
and
mov
adc
stos
outsb
inc
mov
stos
jl
dec
fstl
lds
cmp
and
add
xchg
and
lods
add
dec
jg
sub
icebp
icebp
inc
xor
scas
push
sti
andb
aas
cmp
mov
pop
int
ret
and
jecxz
adc
lret
fmull
cmp
inc
movsl
pop
or
sbb
dec
shr
adc
add
push
mov
outsl
mov
jge
or
nop
push
and
test
enter
xchg
sub
bound
repz
pop
arpl
sub
pop
mov
push
adc
pusha
dec
popa
and
mov
mov
pop
inc
jle
ret
xor
xchg
lahf
mov
jmp
push
jae
and
fldl
rcrb
pop
insl
cmp
ja
aaa
dec
or
fstp
test
dec
cmp
hlt
imul
or
cli
add
test
mov
outsb
mov
add
outsb
add
xor
add
cmpsl
je
xlat
fs
loope
lea
aad
push
hlt
pushf
or
mov
push
in
ja
in
insl
fadd
pop
stc
cwtl
fstps
dec
add
add
pop
or
adc
sahf
or
pop
shll
scas
int3
movsl
mov
mov
js
outsb
lcall
pop
adc
je
inc
sbb
mov
mov
jne
cmp
out
jbe
push
outsb
nop
icebp
add
stos
idiv
adc
xchg
icebp
dec
jnp
lock
jae
insb
push
out
or
or
push
mov
imul
leave
push
cmp
out
outsb
pushf
cmp
int3
aaa
mov
pop
loope
xor
and
jb
cmp
sub
imul
adc
insl
mov
test
push
pop
inc
aad
or
inc
push
mov
rorb
test
fwait
pop
mov
mov
cmpsl
mov
sbb
and
xchg
insl
sbb
movsb
fisubs
scas
xor
dec
sub
unpcklps
adc
xchg
andb
popa
cmpsb
or
movlps
and
adc
in
jmp
std
mov
push
daa
add
xor
jo
dec
sbb
scas
hlt
movsl
iret
nop
out
xchg
xor
or
out
jbe
adc
pop
in
or
jne
stos
test
int
cs
iret
or
dec
outsl
push
data16
call
cmc
cmpb
add
ljmp
pop
sub
in
lcall
aaa
int
incl
loopne
ds
data16
mov
inc
lcall
xor
fsubr
mov
rcrb
inc
fistpl
fnstcw
test
xchg
mov
bound
out
sbb
dec
jmp
mov
dec
sub
jno
push
inc
stos
stos
jl
scas
das
xchg
xchg
pushf
lds
rcll
cmpsl
repz
in
dec
mov
lahf
adc
inc
mov
mov
data16
mov
mov
sub
fwait
lea
and
rcr
jp
pop
rorb
cwtl
rolb
popl
or
pop
ljmp
sbb
adc
add
mov
sbb
pop
mov
xor
inc
les
lcall
add
mov
jno
inc
mov
sub
je
jmp
sbb
lea
inc
push
push
pop
movsb
cltd
and
cli
repnz
cmp
and
mov
cmc
and
mov
sti
in
lea
cltd
xlat
or
mov
mov
jp
jge
pop
lock
sub
hlt
cmp
pop
pop
jns
sbb
push
add
imul
lcall
and
sub
orb
and
daa
dec
cmp
jnp
addr16
and
fmull
xor
imul
lret
repz
push
mov
loope
sbb
ds
cltd
ss
cmp
or
scas
add
jae
fwait
int
adcl
sbb
test
scas
popa
dec
pop
jbe
dec
xchg
stos
mov
adc
push
pop
sub
push
movsb
pop
inc
xor
lock
pop
dec
outsl
jb
daa
sub
je
sti
pop
push
xchg
adc
ljmp
leave
fbstp
jnp
loope
add
scas
mov
je
inc
fsubs
xchg
in
jecxz
arpl
inc
outsl
mov
daa
add
adc
add
xor
mov
adc
adcb
xchg
push
mov
mov
into
ret
add
leave
xor
add
cmp
insl
test
ljmp
cmovle
adc
push
pop
inc
jmp
inc
fwait
cld
lods
int3
xor
outsb
dec
and
mov
mov
inc
fnstsw
sub
cmp
repz
mov
dec
out
jae
popf
adc
hlt
pop
or
push
imul
inc
mov
mov
jns
cmpsb
jo
jne
out
int
xchg
out
lds
cmp
lods
les
mov
ljmp
add
fidivs
or
mov
lea
and
bound
cmp
push
mov
and
ljmp
ss
fs
cmp
mov
mov
ds
in
outsl
andl
add
sub
and
hlt
sbb
test
push
mov
sbb
pop
mov
sub
xor
xchg
cltd
pop
mov
and
cmp
lahf
enter
mov
test
lcall
jno
loop
test
xor
add
fmuls
adc
and
add
mov
pushf
mov
cwtl
loop
mov
adc
cmpl
das
adc
pop
push
inc
daa
out
loopne
jne
sbb
out
loopne
inc
adc
xor
lret
and
cmp
fcomps
insl
std
or
jno
cmpl
test
lahf
mov
enter
add
push
mov
mov
dec
lds
test
ds
mov
outsl
inc
dec
xchg
imul
mov
icebp
arpl
dec
cmpb
sbb
and
dec
lds
gs
rcll
mov
test
mov
adc
cmovns
inc
or
mov
gs
icebp
rorl
mov
imul
pushf
xchg
cmp
cmp
mov
cmp
out
scas
ss
fs
sbb
loopne
push
mov
ret
iret
daa
jns
xchg
sub
jo
aaa
mov
aas
pop
enter
sbb
loop
in
mov
loopne
xchg
inc
lahf
adc
xchg
cmpsb
pop
pop
sub
mov
cmc
lea
lds
leave
into
or
inc
fstpl
push
roll
out
mov
outsb
and
mov
sbb
aas
and
or
and
andb
in
jl
repz
lock
sub
sub
leave
xchg
and
dec
pop
or
sub
and
sarl
push
xor
fdivs
adc
and
inc
dec
loopne
fcomi
fidivrs
jno
lret
out
add
mov
fwait
jl
xor
mov
jne
jmp
push
jno
popa
aas
cmc
cld
mov
popa
xchg
gs
lods
shl
mov
popa
sub
sub
aad
cmp
aam
adc
xor
lea
les
dec
dec
mov
in
imul
pop
fdivl
sub
pop
pop
lret
inc
jp
adc
pusha
xlat
icebp
pop
insl
popf
inc
xchg
pop
aam
std
pop
lods
jle
clc
mov
fwait
jecxz
ret
adc
mov
data16
lods
mov
and
lret
enter
scas
sarb
cmpsb
fnsave
push
scas
ffreep
mov
adc
push
mov
mov
mov
adcl
dec
xchg
sbb
xor
mov
inc
mov
xchg
mov
sbb
add
aad
scas
sub
pop
or
or
push
cwtl
outsb
and
adcb
clc
int3
ret
jp
fsubrs
dec
fcompl
mov
ds
mov
rcrl
xchg
test
xor
jle
sub
jp
pop
aad
pop
stc
push
in
fsts
rcll
sbb
jecxz
jmp
jg
ds
sbb
pop
dec
outsb
int
pushf
sub
inc
popf
or
ja
jno
sbb
addr16
or
pop
filds
mov
inc
ret
mov
sub
push
add
or
dec
clc
popa
int
dec
call
add
dec
in
fnstenv
test
xor
ret
adc
imul
and
pop
pushf
out
jns
inc
lcall
gs
inc
xor
or
sbb
sub
xor
call
and
insl
pop
dec
xchg
into
mov
or
gs
sbb
fcomip
mov
or
sub
pop
adc
out
lcall
sbb
dec
test
and
xor
mov
popa
mov
out
sbb
lahf
jae
or
ds
mov
mov
dec
jl
push
and
xchg
sti
lret
dec
je
push
push
cwtl
popa
push
dec
icebp
pop
push
daa
mov
mov
jmp
mov
add
test
mov
mov
cli
mov
add
cwtl
inc
gs
mov
aad
and
imul
in
lock
jae
pop
sti
inc
adc
and
jecxz
clc
imul
jp
push
loop
ds
push
push
adc
sbbl
cmpsb
or
stc
cwtl
ljmp
mov
and
mov
push
xchg
pcmpeqb
cmp
pusha
mov
cltd
cmp
xchg
and
outsl
and
lods
negl
jo
mov
and
mov
and
xorb
ds
jp
dec
add
shl
xchg
outsl
sub
leave
out
pusha
clc
pop
ljmp
push
mov
js
sbb
mov
incb
insl
ja
lcall
andb
jmp
xchg
mov
add
data16
cli
roll
sub
dec
jb
out
ficompl
aad
xchg
jbe
dec
xorl
icebp
out
push
fsubs
scas
lock
hlt
insl
and
cwtl
jae
or
inc
jmp
movsl
cmp
push
inc
sbb
lea
or
xchg
in
not
sbb
jmp
xchg
mov
movsb
cld
push
sahf
push
popa
add
dec
nop
int3
add
out
gs
xor
and
sub
mov
cmp
xor
mov
xor
repnz
repz
cmp
test
sub
bound
cltd
test
mov
arpl
mov
clc
pushf
lock
mov
repz
pop
das
insl
pop
inc
data16
dec
xor
ja
popf
mov
and
push
shlb
adc
jnp
mov
movsl
testb
imul
out
lahf
out
decb
addr16
daa
jg
sub
imul
push
je
out
and
mov
sarl
insl
dec
or
js
jp
in
dec
ss
jp
aam
jbe
ret
rcrb
arpl
sub
pop
cmp
pcmpeqd
cmp
movsb
mov
call
push
push
stos
sahf
imul
xchg
enter
fdivrl
lods
das
aad
push
in
mov
andl
cwtl
and
cmpsl
jnp
jns
hlt
mov
push
jecxz
leave
in
ja
cmp
test
dec
and
aas
inc
mov
ret
jle
mov
push
fdivrl
and
stos
add
mov
lds
lcall
jl
inc
in
adc
cmp
add
aad
and
js
xlat
ss
mov
cs
stc
or
mov
or
jecxz
mov
fsub
mov
xor
repz
mov
stos
pushf
insl
ret
push
inc
pop
es
fs
jmp
stos
or
jno
es
fsubrs
imul
inc
popl
xchg
cwtl
test
pop
insl
fists
inc
xor
jg
inc
xor
in
shl
pusha
sbb
and
repnz
rclb
insb
lea
dec
mov
xchg
cmp
mov
nop
std
mov
ljmp
repz
mov
add
add
cmpb
into
in
and
add
and
in
cli
mov
fs
dec
jmp
popf
sbb
inc
data16
cmc
repz
dec
dec
cmpsb
ret
outsl
mov
data16
mov
dec
icebp
stos
jp
cmp
mov
adc
mov
push
mov
xchg
sarb
ret
sub
pop
imul
xchg
jg
add
xchg
int3
jo
cmp
std
lods
mov
push
push
fcmovnbe
jae
or
inc
insl
movsb
out
push
inc
addr16
fldt
xor
inc
cmpl
popa
cmpsb
ret
ficompl
pop
gs
jmp
jb
add
xor
xchg
dec
or
sahf
adc
and
xchg
lock
add
lods
lret
mov
xchg
testb
jg
add
jb
cmpsl
or
dec
incb
mov
add
out
jl
test
mov
ss
nop
mov
sbb
movsl
in
jge
jecxz
repz
push
addb
mov
jne
ds
clc
popa
fwait
lds
push
insb
nop
mov
dec
mov
inc
jae
mov
shlb
and
sbb
mov
mov
inc
test
mov
std
insb
mulb
mov
adc
ret
dec
inc
movsb
iret
mov
jns
sub
fiadds
cmp
pop
inc
jecxz
push
add
out
andb
mov
fcompl
xchg
sbbl
vcvttps2dq
push
inc
adc
and
jle
fwait
dec
jae
add
mov
push
jge
inc
je
mov
xor
jg
mov
or
cmp
adc
inc
and
cmc
std
test
pop
outsw
mov
mov
in
rorl
pop
mov
mov
pushf
je
sub
mov
sbb
jle
fucom
fwait
cs
test
ret
adc
push
imul
imull
sarl
stos
out
cmp
inc
sbb
jbe
ljmp
out
fbld
cmc
sbb
sbb
scas
xchg
enter
test
xlat
shlb
insl
repnz
nop
mov
cmpsb
packuswb
int
faddl
push
xor
inc
aam
sub
filds
and
inc
data16
pop
fstpt
movsl
pop
adc
iret
test
pop
dec
cmp
dec
popa
add
je
daa
test
mov
push
jp
int
addl
fdivrs
jne
mov
sub
xor
add
in
dec
inc
push
aas
ror
xchg
enter
mov
cmp
push
mov
repz
mov
sbbb
subb
lods
icebp
aam
cltd
inc
sbb
les
popl
cltd
push
int3
sub
ds
ss
cld
cmpl
xchg
repnz
ja
std
fwait
push
icebp
jae
in
movsl
repnz
ja
xchg
xlat
ljmp
lea
mov
push
pusha
fadds
sti
les
fwait
cli
xchg
stc
jb
xor
xor
es
xor
xchg
sbb
xchg
mov
add
cltd
dec
cmp
sbb
fprem
out
push
leave
and
inc
push
mov
inc
aas
ljmp
mov
adc
call
cwtl
xchg
mov
mov
pop
gs
jle
add
jo
add
popa
testb
std
fistpll
je
cmpsb
in
push
jge
fisubs
into
fnstsw
lret
push
fsubs
and
jo
sub
rcll
cmpsb
roll
call
in
cmpsb
fldl
das
stc
out
push
insb
xchg
out
loop
ret
inc
pop
je
dec
test
out
mov
push
les
jg
inc
add
mov
or
data16
lds
stc
and
push
pop
and
lahf
stos
cmp
icebp
and
jge
mov
xor
scas
sub
cwtl
je
sub
inc
xchg
movsl
repnz
shll
js
add
dec
sbbb
dec
mov
leave
outsb
fwait
test
sbb
mov
call
push
mov
repnz
xchg
movsl
mov
icebp
pusha
inc
inc
cmpsb
push
orl
jp
nop
inc
and
ljmp
sbb
xor
fidivrl
and
dec
sbb
in
adc
xor
add
jl
push
in
add
mov
push
mov
sub
popfw
in
dec
ja
sbb
cld
daa
insl
loopne
lds
leave
insl
jge
mov
mov
sarl
jmp
jns
iret
ror
fsubrs
mov
fadd
insl
mov
inc
hlt
mov
aam
stc
es
jmp
mov
or
repnz
mov
jbe
dec
pop
mov
sbb
jo
clc
xlat
dec
pop
clc
incb
aaa
jbe
mov
sbb
push
pop
adc
out
sbb
add
lcall
scas
cmc
push
fnsave
xchg
vsubsd
pop
cs
aad
inc
xor
jecxz
jo
aam
xchg
popf
xchg
inc
shlb
incl
rolb
dec
mov
loopne
pushf
dec
ss
sbb
ss
inc
call
stc
xor
pop
popf
pop
xor
repnz
ds
add
pop
cmp
pop
leave
clc
das
mov
daa
sbb
sub
sub
xchg
int3
pop
imul
shll
add
adc
xchg
mov
or
jnp
jmp
sbb
lret
push
xor
add
aaa
mov
dec
dec
mov
subl
pop
and
outsl
pop
push
xor
mov
fmuls
fists
sbb
movsl
ja
dec
sbb
outsb
push
hlt
aad
cmp
sub
jo
mov
cs
mov
pop
mov
xchg
pop
dec
pop
jno
mov
or
cwtl
outsb
and
jb
in
mov
sbb
test
xchg
cmp
lret
push
pop
stos
lock
add
sarb
out
mov
sbb
push
add
mov
hlt
xchg
outsl
imul
rcr
jmp
sahf
sbb
mov
adc
das
jnp
cmp
inc
add
mov
mov
dec
adc
cmc
inc
insl
pop
movhps
lea
xchg
dec
mov
test
stc
popf
cmp
jo
ljmp
ret
rorb
pop
xor
dec
into
loope
xchg
jmp
lock
add
dec
imul
adc
fs
loop
add
into
jecxz
lock
out
pop
stos
loop
push
test
mov
jo
dec
push
cmp
dec
mov
lcall
inc
adc
dec
sub
nop
sub
cli
pop
push
and
xchg
mov
mov
and
jp
int3
add
fwait
stos
clc
dec
test
sbb
icebp
lods
into
movl
cltd
xchg
pop
mov
addl
pop
sbb
pop
add
lods
mov
andl
ja
add
loopne
ficoms
xor
adc
or
sub
cmp
sub
pop
mov
xchg
sti
fmuls
cmp
mov
push
decl
aaa
xchg
ret
outsb
int
mov
inc
lret
ficomps
mov
jne
loop
dec
mov
lahf
pop
in
lods
sub
iret
mulb
mov
jge
sub
movsl
cwtl
dec
pusha
sub
nop
add
lods
dec
pusha
sahf
shlb
cmpb
inc
lods
or
xor
js
fwait
mov
into
insb
mov
rolb
mov
movsl
mov
xchg
stos
scas
lret
and
test
inc
xchg
mov
pop
rcll
loope
scas
xchg
xchg
xchg
mov
mov
lods
in
mov
lret
addb
in
inc
xor
jg
dec
or
dec
aas
andb
pop
out
adc
jb
add
fimull
adc
sub
insb
lods
mov
add
lods
jbe
mov
pop
pop
sbb
in
data16
jne
and
test
sbb
mov
fidivl
popa
cld
pop
andb
push
imul
inc
stos
rcrl
loopne,pt
mov
and
icebp
out
fadds
pop
and
cmp
pop
xlat
cmpsb
jmp
repnz
xor
ficompl
bound
notb
lds
adc
dec
sub
ss
lds
jb
xchg
jp
jbe
or
pop
xchg
jg
std
enter
push
jmp
shr
nop
or
add
inc
mov
mov
jge
xchg
sub
jae
leave
sbb
lret
lock
cmp
dec
push
cmp
fstps
in
push
xchg
dec
mov
ljmp
add
loope
ss
in
movsb
mov
mov
hlt
leave
in
out
push
xor
pushf
push
lcall
rorb
in
push
std
dec
mov
pop
xchg
add
add
jle
call
repnz
or
mov
sahf
pop
mov
out
push
shlb
insl
in
lahf
xchg
ret
movsb
sar
fwait
shl
or
xchg
xchg
out
aas
dec
sub
daa
push
xor
add
pop
push
cmp
pop
ret
stc
or
cltd
mov
xor
sub
sub
dec
push
test
aam
sub
cld
cmp
data16
sbb
xor
sub
pushf
out
jno
sar
mov
jecxz
inc
cmp
dec
xchg
psubsb
xchg
add
mov
lods
push
mov
cwtl
pop
pop
popf
test
aaa
bound
outsb
dec
xchg
mov
scas
push
add
push
inc
inc
xchg
aad
xchg
scas
push
pop
sbb
mov
cmp
sub
int
and
push
or
clc
popf
ds
xchg
xchg
cmpsl
into
sbb
adc
test
aad
out
flds
mov
mov
lds
out
cwtl
data16
push
and
sbb
jno
cltd
scas
das
add
fnop
sub
in
add
inc
xchg
iret
push
js
adc
push
les
cmp
cmpsl
pop
scas
test
pop
sub
dec
mov
mov
xor
mov
fcoml
xchg
out
add
loope
push
lret
jl
xor
sub
imul
fists
jae
push
inc
daa
inc
xor
mov
aaa
push
lea
mov
pusha
xchg
int3
rcl
or
rdmsr
cld
ss
lds
pop
sub
in
hlt
repnz
das
xchg
lock
xchg
scas
mov
add
or
jb
lret
mov
sahf
mov
cmp
and
fld
xchg
mov
fimull
or
jnp
jg
push
leave
in
mov
pushl
icebp
stos
lret
pop
xchg
jp
sub
lret
inc
scas
jl
pop
mov
mov
jl
subb
js
icebp
fmull
je
orl
sbb
jp
sbb
push
addl
dec
mov
mov
mov
inc
in
icebp
ljmp
mov
and
lods
sbb
fidivl
gs
outsl
inc
sarb
sahf
sbb
inc
mov
add
jb
cmp
pop
sbb
mov
cli
add
cli
sahf
lcall
jle
insl
in
data16
daa
add
adc
fisubrl
mov
test
mov
data16
int
push
or
mov
mov
call
push
dec
xchg
les
pop
sub
icebp
scas
mov
dec
xor
sbb
xchg
sbb
dec
add
divb
imul
fwait
xchg
lock
jno
mov
mov
out
or
xor
cmp
pop
adc
lea
aad
pushf
inc
mov
xor
orl
add
outsl
mov
jle
push
gs
jo
mov
aas
repz
test
or
icebp
sub
sub
jbe
arpl
sub
mov
loope
mov
xchg
sub
dec
and
shrl
jmp
bound
xchg
sub
test
loop
fiadds
outsb
aas
neg
mov
and
lea
pushf
rcrb
or
mov
test
add
cmp
sbb
xor
pop
pop
mov
sbb
mov
int
fs
rolb
xor
xchg
pop
jg
roll
stos
cmp
lods
add
scas
sub
nop
push
cld
les
mov
dec
stos
jmp
inc
ret
scas
cmp
jnp
push
mov
ror
and
push
jno
ficomps
shll
in
popf
testb
call
mov
dec
jle
push
outsb
pop
xor
lods
in
sub
stc
pop
mov
pop
inc
rcrb
test
dec
int
or
mov
xchg
ret
or
mov
es
cmp
jle
cmp
out
daa
test
test
lcall
sbb
addr16
pop
jp
sahf
outsl
int
cmc
pop
lret
add
jl
lcall
out
cmp
cmp
out
rclb
in
movsb
pop
and
adc
out
sbb
movsb
mov
adcb
push
mov
daa
aaa
loopne
cs
mov
repz
mov
insb
dec
dec
cmpsl
sarb
cmpsb
xor
dec
inc
or
xchg
stos
test
and
in
jne
leave
mov
mov
fisubrl
pop
ljmp
mov
fwait
push
dec
dec
mov
mov
jns
out
test
xorb
pop
cmp
dec
bound
pop
dec
movsb
lret
and
in
lods
mov
rcll
cmp
sub
nop
leave
sub
fmuls
push
test
fs
cltd
stc
idivl
cmc
inc
out
pop
sub
inc
mov
cmp
dec
jle
and
cmp
es
lds
add
sbb
inc
xchg
addb
addr16
jb
xorb
stc
negb
gs
lock
jne
cltd
push
dec
repnz
mov
mov
cmp
sbb
sub
mov
mov
mov
mov
in
jbe
push
push
orl
pop
cs
jne
mov
lret
mov
arpl
repz
cs
push
lret
add
push
pop
sub
addr16
cmpsl
jge
or
cltd
mov
sbbl
nop
lret
dec
mov
out
pusha
testl
je
mov
dec
movsl
fwait
dec
int
ja
lea
dec
stos
stos
adc
xorl
adc
jae
mov
movsb
sbb
push
push
jmp
pop
dec
pop
jle
and
mov
adc
inc
mov
lods
les
mov
fldenv
lea
dec
xor
into
xor
dec
insb
aam
inc
cltd
movsb
pop
scas
daa
stos
fidivs
mov
mov
mov
pop
mov
pop
sub
adc
or
test
es
int3
es
sbb
mov
add
mov
adc
call
jns
aaa
daa
mov
and
push
jb
lods
sub
divl
xchg
sub
negb
mov
dec
cld
lods
and
add
jg
jnp
mull
mov
pop
inc
push
mov
bound
xchg
and
in
inc
mov
adc
mov
daa
cmpsb
mov
loop
sub
inc
stos
pop
jl
and
and
jne
mov
xlat
push
int
add
xchg
loope
cltd
cmp
movsb
in
push
sbb
cli
das
ss
mov
lar
clc
add
pop
sbb
imul
stc
bound
or
lock
mov
jg
push
jecxz
jecxz
dec
pop
sub
inc
push
and
pushf
sahf
sub
out
aaa
pop
andb
lret
inc
jge
lods
dec
pop
xor
cmp
mov
repz
add
dec
sbb
mov
jo
subl
loope
and
add
sub
sub
xlat
ds
out
pop
lea
stos
movl
rcl
cld
popa
dec
mov
xchg
data16
scas
lahf
pop
cmp
inc
push
dec
jbe
out
fwait
sbb
mov
sbb
sub
adc
push
lods
testl
jne
lahf
mov
pop
and
xlat
mov
imul
test
mov
mov
add
mov
add
lock
mov
and
out
test
push
mov
sahf
sub
aam
mov
cmpb
je
jno
and
inc
test
fisubrl
ja
movsb
add
xchg
insb
sub
adc
cmp
fistps
mov
or
mov
sahf
out
bound
add
jne
and
pop
or
inc
inc
sbb
sbb
pop
xchg
inc
sti
dec
cmp
xor
push
lds
push
int
insl
addb
sub
mov
lahf
mov
mov
jnp
shr
loope
cmpsl
lock
shll
push
sub
lock
sub
fisubl
outsl
gs
cwtl
fsubrs
dec
scas
das
jge
cmp
repnz
and
xor
sub
lods
cmp
cmp
dec
addr16
pop
sub
inc
xchg
or
ret
leave
divl
inc
add
add
testl
aas
sub
pop
pop
les
dec
and
jecxz
ljmp
inc
add
cmpsl
test
jl
mov
int3
push
pop
pcmpgtw
imul
mov
push
shll
dec
mov
shlb
push
ficoms
insb
stc
jno
in
adc
out
aad
sub
dec
movsb
mov
sub
sub
cmp
cmpsl
mov
xor
ret
ret
sbb
sbb
mov
loopne
jnp
sub
ret
clc
sbb
or
cmp
mov
or
ja
jb
inc
cmp
push
mov
jnp
out
jecxz
dec
jge
sub
popa
lret
or
enter
or
aam
sbb
xor
mov
into
movsl
mov
cltd
xchg
jo
fmull
je
cli
scas
cmp
cwtl
inc
ss
mov
repz
pop
mov
xor
outsl
push
jecxz
push
xor
das
mov
cwtl
cmp
or
lret
mov
lahf
xor
in
inc
movb
loope
mov
add
jg
xor
mov
out
cmp
cli
shrb
add
mov
fcomps
shl
dec
mov
inc
xor
mov
dec
push
in
or
dec
adcb
dec
push
sbb
ret
pop
push
jmp
adc
push
xchg
test
fisubrs
data16
invd
test
aad
stos
test
sahf
movsl
mov
jns
pop
faddl
sarl
subl
loopne
push
bnd
pop
lret
add
sbb
push
lret
and
mov
xchg
insb
dec
and
into
cmp
aas
xor
xor
mov
pop
sub
cmpl
or
sub
xor
repnz
mov
pop
adc
lahf
fisubl
outsb
adc
insl
pop
shll
cmp
mov
or
jo
xlat
ljmp
xchg
dec
enter
mov
or
xchg
rorb
lret
add
push
mov
popf
jle
add
mov
adc
dec
fwait
shlb
xchg
xchg
jo
mov
and
popl
int3
negb
pcmpgtw
mov
stos
mov
dec
outsl
inc
jne
pop
push
mov
iret
cmp
mov
xchg
jge
xor
scas
in
mov
movsb
xor
out
mov
and
icebp
pop
cli
mov
pop
mov
xlat
sub
sub
push
xrelease
mov
sub
jecxz
fbld
lret
cmp
jecxz
jns
add
rol
scas
push
adc
cs
mov
xor
int3
js
cmpsl
in
cwtl
test
jb
mov
outsb
cli
jo
adc
ret
insl
push
mov
pushf
jnp
inc
mov
aaa
lret
jp
inc
mov
cld
mov
outsl
cltd
sub
ret
push
mov
cmp
sub
cli
gs
jmp
ret
add
sub
inc
gs
ret
push
push
sbb
or
dec
aad
mov
insb
mov
and
or
cmp
lea
aad
inc
int
clc
leave
scas
punpcklwd
out
std
xchg
enter
out
jecxz
add
or
cld
stc
addb
imul
or
cwtl
and
jle
push
push
and
or
jg
fldcw
adc
cmp
or
push
mov
aaa
inc
loop
imul
pop
xor
pop
popa
in
and
and
sub
popa
jne
adcl
call
cmp
dec
lea
mov
sub
fs
jge
or
mov
cmc
movsb
mov
lock
mov
jbe
imul
pop
repnz
mov
xchg
ja
stos
cmp
leave
test
sbb
clc
subl
jb
jle
pop
mov
dec
mov
gs
in
cmc
mov
into
test
and
insb
and
dec
sub
jp
test
sbb
sbb
loopne
and
sub
test
or
push
and
pushf
cmp
addr16
in
cmp
push
xchg
dec
lock
xlat
push
addb
mov
cmpsl
and
push
xchg
xor
xlat
cmp
pop
push
lea
sub
fwait
incl
sub
in
xchg
dec
out
and
pop
sahf
mov
push
outsl
sbb
and
jl
icebp
test
cmc
movsl
sbb
xor
add
or
arpl
pusha
loopne
popf
or
jo
test
fstpt
sarb
mov
jns
xlat
test
cmp
mov
mov
jnp
xchg
bound
lahf
pop
js
cmpxchg
mov
push
imul
popf
push
and
stos
xchg
cmp
insb
nop
leave
cmp
xor
hlt
leave
clc
jmp
idivl
lods
xchg
mov
push
dec
sbb
jge
sub
iret
out
cltd
mov
pusha
lock
lret
or
mov
in
mov
cmp
push
sbb
data16
ret
dec
cmp
mov
sarl
fwait
cld
jno
int
es
inc
sub
or
sbb
sarl
testb
cltd
sub
push
je
mov
pop
jnp
dec
dec
nop
lds
cmp
stos
or
xor
cltd
push
mov
sti
mov
mov
and
or
xlat
mov
mov
pop
pop
pop
cmp
cltd
lcall
add
dec
out
push
or
clc
sub
sahf
add
mov
filds
adc
sub
push
repz
clc
pop
loop
popf
cli
adc
test
mov
mov
imul
pop
inc
cmp
scas
out
jge
xor
xor
scas
imul
in
dec
popf
call
push
bound
loopne
or
cmp
inc
add
adc
pop
lods
data16
cmpsl
mov
push
cmp
insl
gs
pop
pop
loope
xor
shl
aad
xlat
cld
aaa
add
jge
mov
sahf
mov
fwait
pop
data16
je
fisttpl
stc
or
mov
lcall
xchg
imul
pushf
lock
push
push
jb
testl
aam
dec
add
sti
dec
shl
push
andl
cmp
jle
add
ljmp
gs
subl
add
ret
xor
scas
ds
cs
movb
andl
hlt
jle
gs
jo
aam
mov
sub
lret
push
jg
faddp
adcb
push
loopne
leave
fnstsw
in
popf
push
mov
dec
test
jmp
ror
data16
outsb
shl
js
lock
div
push
jae
cmp
test
xchg
das
scas
push
and
cmpl
jb
pop
inc
push
fidivs
shll
mov
ljmp
push
daa
adc
ret
adc
mov
cs
xchg
out
xchg
push
sbb
jae
inc
add
jmp
cmpsl
lret
xor
shll
cmp
xor
mov
comiss
push
test
inc
push
or
and
in
hlt
movsl
pop
inc
xchg
arpl
pop
movsb
mov
arpl
movhps
out
jo
js
xor
mov
mov
in
and
std
lods
jns
shlb
bnd
iret
xorl
fldt
hlt
cmp
ret
lock
rcrb
inc
fcmovb
fadds
rorl
mov
pushf
mov
dec
adc
pop
loope
insl
out
jae
xchg
insb
sub
cld
xchg
or
mov
cmpsl
test
test
loop
dec
es
bound
out
inc
lea
test
divb
mov
push
je
pop
sahf
out
mov
pop
int
ficoms
fsqrt
and
popl
pusha
outsl
or
adc
in
sti
mov
jo
adc
jg
and
mov
inc
jb
imul
outsb
lods
cltd
mov
cli
xchg
ss
sbb
jge
cmpsl
push
fwait
stos
add
mov
mov
mov
jg
fs
adc
jmp
and
popf
dec
add
xchg
lret
pop
adc
pop
or
inc
mov
scas
popf
fdivrl
popa
jg
shlb
cmp
fimuls
pop
push
mov
out
inc
jne
push
jno
ret
pop
pop
rcrl
mov
iret
pop
rcrb
mov
sub
fnsave
cmpsb
and
icebp
int3
jno
add
nop
outsb
lods
pop
popf
cmp
stc
cmpsb
push
push
cmc
or
adc
imul
lock
sbb
loop
or
mov
int3
mov
and
pop
movsl
aam
enter
sbb
int3
pop
pop
nop
int3
scas
inc
mov
mov
jo
jne
int3
andl
imul
push
repz
sbb
roll
push
cmovno
lods
daa
ss
mov
ret
scas
push
roll
xor
popf
add
jl
es
mov
sbb
xor
in
mov
and
cwtl
das
push
pop
addr16
inc
adc
add
add
inc
aad
mov
ds
daa
movsl
rcll
mov
or
ret
mov
ret
rcrb
push
mov
mov
sub
in
adc
dec
xchg
push
std
les
push
in
std
inc
sbb
aaa
test
out
cmpsl
inc
popf
pusha
xchg
jb
popa
mov
mov
mov
dec
sub
sbb
adc
mov
aas
iret
insl
jg
sub
inc
adc
push
add
test
out
mov
roll
mov
lock
adc
ret
fs
sbb
cmpsb
lret
repz
sub
pop
int
pop
sub
xchg
pop
lea
sbb
or
scas
or
clc
je
pop
inc
and
test
cmp
sti
and
jle
sub
lcall
jnp
xor
mov
es
lods
loop
lods
jg
inc
fsubrs
sbb
xor
nop
push
mov
mull
mov
cli
outsb
xchg
rol
call
hlt
adc
mov
inc
lcall
inc
fadd
jecxz
pop
jae
mov
rolb
testb
scas
dec
mov
mov
mov
pop
aas
add
rcl
imul
fmull
xchg
mov
cmp
mov
or
sub
jae
xchg
dec
and
aam
inc
add
popa
cmp
adc
pop
sub
mov
adc
lret
push
shll
jecxz
in
adc
or
sub
rorb
stos
xor
in
jmp
hlt
jbe
cmp
inc
adc
xchg
xlat
xor
jne
adc
scas
mov
and
lea
sbb
out
cmp
lret
and
xor
sub
addb
xor
dec
mov
add
jbe
xchg
dec
sbb
mov
jbe
pop
mov
xchg
sub
lret
jp
inc
enter
xchg
decb
lcall
pop
clc
shlb
shll
cmpsl
xor
pusha
aas
imul
bound
cwtl
clc
shll
js
shrb
std
cmpsb
dec
xor
fmulp
ljmp
jmp
mov
movsb
and
decb
mov
fstpl
lret
lods
xor
fidivl
cwtl
es
push
pop
shr
ljmp
sub
movsb
imul
xor
cld
outsb
js
cwtl
push
aaa
js
imul
push
scas
dec
dec
add
sbb
cmp
mov
dec
fisubs
and
xor
mov
imul
mov
mov
xor
mov
inc
inc
dec
mov
iret
adc
adc
push
mov
nop
xor
mov
dec
mov
pop
dec
xor
nop
add
rcr
scas
fwait
int
lods
leave
js
mov
fs
push
icebp
sbb
je
inc
dec
daa
mov
cmp
loop
xor
cld
mov
es
leave
mov
dec
and
movsl
cmp
pop
add
mov
pop
mov
mov
sbb
add
inc
jbe
mov
pop
cmp
adc
pop
or
mov
add
inc
and
out
dec
dec
es
cmp
cmp
mov
pusha
jge
je
out
mov
adc
dec
mov
jbe
js
cmp
js
aam
iret
jbe
adc
in
jne
xor
push
cmc
xchg
cmp
xor
mov
scas
pushl
xor
ss
cmpl
insl
fdivrl
insb
mov
adc
xchg
cmpsb
mov
or
in
int
push
and
cli
je
icebp
sbb
adcb
loope
cmc
icebp
cmpsb
fcompl
aaa
scas
pop
and
subl
mov
fcmovbe
xlat
pop
popa
xlat
mov
je
mull
clc
and
lods
div
jl
adc
je
dec
cmpsb
clc
ja
sub
jge
jo
sub
mov
mov
lods
mov
lods
cmp
mov
hlt
add
out
dec
and
insl
jnp
stos
dec
pop
pop
aam
push
push
push
mov
in
movsb
adc
into
shl
xor
negl
fs
lret
or
dec
stc
push
and
arpl
enter
xchg
mov
cltd
pop
push
mov
mov
cmp
scas
or
pshufw
sbbl
arpl
or
push
loop
mov
dec
pop
mov
xchg
jnp
test
iret
fimuls
mov
mov
loope
pop
pop
or
repnz
adc
push
dec
xchg
dec
and
push
fisubl
and
popa
xor
scas
ds
sub
add
ss
popf
lea
insb
sti
mov
xchg
outsl
jl
das
adc
popf
leave
push
shlb
pop
insl
inc
test
mul
bound
ret
and
nop
fwait
jmp
mov
sbb
pop
or
gs
shl
sbb
ret
cmpsb
fadds
fs
in
outsb
cwtl
fwait
stos
ss
jns
xchg
call
faddl
mov
mov
shrb
mov
in
das
push
in
test
fbstp
xchg
jecxz
mov
fldz
leave
mov
stos
daa
lea
mov
mov
adc
daa
fnsave
pop
add
or
pop
push
xlat
sbb
jmp
dec
sbb
dec
ds
jo
in
fcmovb
inc
sbb
jle
xchg
sub
jl
xor
scas
mov
inc
in
push
push
xchg
int
aas
insb
stos
daa
ficomps
iret
xchg
mov
sub
arpl
aam
push
lea
in
sbb
repnz
mov
cwtl
sub
nop
ja
lret
call
dec
push
daa
mov
inc
lret
mov
push
fldt
enter
fdiv
mov
loop
cmp
dec
mov
inc
mov
mov
orb
xor
mov
xchg
addl
inc
push
jo
sbb
push
adc
pop
int3
clc
cmp
pop
leave
inc
mov
mov
rcrb
push
cli
sub
cmc
mov
jae
std
adc
clc
inc
aam
mov
or
push
in
pop
add
jbe
sub
into
push
mov
mov
aad
insl
xchg
inc
flds
or
dec
pop
mov
movsb
fnstcw
iret
or
in
je
mov
aas
mov
loope
mov
enter
fs
out
pop
pop
push
ja
sub
mov
sbb
sbb
adc
hlt
and
fisubrl
sbbl
pop
lods
es
faddl
cmpsb
xor
jge
xor
out
sahf
loopne
jae
fisubl
rclb
sti
sbb
lret
lret
je
and
add
repz
sub
sub
xchg
test
out
enter
nop
cmc
or
mov
out
inc
lock
loopne
lret
push
jle
mov
pop
cmp
das
jl
imulb
cmp
push
int
loope
and
inc
add
sahf
sahf
jge
pushf
add
xchg
and
ja
lea
inc
sti
scas
jl
lahf
jno
cwtl
sub
xchg
adc
or
mov
xor
stc
mov
pop
dec
mov
jns
xlat
or
cmp
lods
daa
pop
std
pop
pushf
or
popa
and
outsl
push
ds
push
int
pop
mov
pusha
mov
mov
daa
cmp
cmp
jmp
pusha
test
mov
xor
cmp
push
fstpt
jge
push
mov
xor
xlat
jle
jp
or
pop
jg
roll
movsl
sbb
sub
jmp
dec
sub
decl
add
or
sub
fucomi
shlb
mov
arpl
cmpsl
enter
das
xor
and
scas
pushl
xor
sahf
and
inc
into
sbbb
jecxz
arpl
inc
pop
mov
loope
mov
inc
and
fldt
rcll
mov
movb
stc
cld
hlt
push
mov
pop
pop
inc
fwait
roll
push
cmpsb
fisubrl
cmp
sub
inc
repz
stos
lcall
add
sub
add
aas
adc
add
imul
daa
into
bnd
rcl
mov
mov
mov
xchg
scas
out
stc
das
std
negl
push
jmp
incb
adc
dec
push
jnp
insl
fwait
hlt
cmpb
dec
aad
mov
fsubrl
inc
mov
data16
lea
divl
clc
bound
sub
push
mov
es
scas
inc
inc
scas
std
and
ja
js
inc
sub
jno
cs
xor
sbb
icebp
cmpsl
dec
xlat
xchg
sbb
adc
aas
sbb
fldl
lea
adcb
fcomip
popa
movsl
mov
and
mov
cmp
jg
cwtl
ss
aam
leave
sar
jnp
enter
mov
jb
xor
jae
mov
add
mov
icebp
ror
movsl
movsb
fadd
dec
sbb
cmp
sarl
daa
idivl
loopne
lds
adc
fidivrs
sbb
add
std
push
push
movsb
cmp
jl
in
movsb
int3
fdivl
pop
ljmp
jmp
xchg
sbb
lds
xchg
icebp
push
push
hlt
cmc
cmp
pop
inc
mov
mov
inc
imull
rol
sub
sbb
fwait
inc
fucomip
out
or
and
sti
mov
pop
pop
adc
out
out
lret
mov
shl
inc
mov
stos
mov
test
jae
loope
test
stc
sbb
ljmp
xchg
jl
mov
xchg
loope
or
cmp
outsb
pop
outsl
push
stos
jns
mov
push
xor
lret
push
xchg
jecxz
push
ret
jle
xchg
push
movsl
rcrl
aas
hlt
jp
jge
into
mov
clc
add
ret
ret
xchg
je
mov
inc
mov
sub
in
lret
mov
xor
xor
xchg
enter
out
dec
and
das
in
movsb
mov
mov
fwait
adc
adcb
cli
mov
push
fisubs
lret
jnp
iret
rorl
xor
rorb
mov
mov
xchg
imul
outsb
dec
fnstenv
arpl
jle
pusha
int3
pop
hlt
dec
xor
or
sbb
cmpsb
mov
push
jnp
repz
andl
int3
daa
sub
aam
enter
in
test
dec
cs
fldt
push
add
std
int
loopne
lar
fildll
inc
sub
pop
or
mov
lret
adc
sbb
mov
push
adc
loope
mov
stc
popf
xchg
xor
mulb
push
jg
repnz
sub
cmp
popw
push
xchg
push
rcrl
and
jp
frstor
inc
sub
cltd
cmp
push
push
int
xor
outsl
push
lods
sub
loope
fs
push
fnsave
andl
jns
or
add
loopne
std
adc
rcrl
insb
in
iret
fbld
bswap
jl
cwtl
mov
add
xchg
dec
clc
iret
jo
loopne
lods
in
imul
inc
dec
pop
push
aam
push
scas
out
out
sbb
pop
vmovq
pop
sbbb
and
mov
xchg
mov
fldl
mov
lock
fbld
fldcw
fs
clc
mov
addb
in
je
xchg
mov
rolb
mov
out
jg
jnp
push
pushf
mov
aaa
movsb
mov
fisubl
fisubs
pop
pop
popf
lods
adc
adc
movsb
mov
cmpsb
addr16
cmpsb
dec
fldl
inc
mov
mov
pusha
ret
jl
test
push
inc
frstor
sbb
shlb
cli
xor
in
sahf
jg
and
pop
into
pop
lret
cwtl
lret
outsl
dec
add
enter
fs
pop
sbb
or
or
jp
aaa
flds
push
cmp
sub
mov
pop
jge
fidivs
mov
subl
outsb
and
sub
rcll
push
push
mov
xchg
cmovg
in
outsl
call
xor
out
scas
fnsave
dec
in
push
pop
lea
sub
sbb
push
mov
std
imul
inc
xchg
adc
jb
repnz
stc
movsb
ret
and
je
mov
je
data16
adc
rcrl
rorb
pop
xchg
nop
push
cmc
pop
outsb
add
scas
daa
adc
cmp
dec
aam
mov
mov
xor
ror
aas
add
loope
jbe
and
fsubl
insl
fidivs
cmp
fucom
clc
stos
xchg
clc
xor
push
imul
fiadds
cmpsl
out
dec
jae
mov
test
cmp
in
pop
mov
int
rorl
push
push
inc
test
sbb
ds
pop
mov
xchg
add
sbb
push
jge
adc
jmp
add
and
outsb
or
mov
cmp
inc
inc
dec
dec
jge
jecxz
push
add
cmp
aad
or
add
bound
scas
adc
cmp
mov
dec
sbb
or
mov
cmpsb
je
sub
dec
inc
inc
addl
mov
jmp
ljmp
xor
pop
popa
popa
jbe
lcall
pop
and
xchg
scas
pop
jle
xchg
iret
enter
mov
movb
push
push
xorb
dec
sub
les
fstps
out
xchg
mov
movsl
jp
cmpsl
sahf
cld
sbb
cmp
jbe
push
fisubl
negb
fisubl
mov
push
andb
pop
mov
sbb
xchg
outsl
sbb
lock
jle
inc
adc
push
and
in
aas
popa
aam
dec
xorl
push
xchg
cmpb
xchg
xchg
or
push
sub
push
xchg
and
jne
or
pop
mov
in
mov
in
out
pop
sahf
push
not
pusha
nop
sub
imul
add
fcmovne
das
jge
loope
pop
adc
repz
cmp
mov
mov
push
xlat
fistpl
data16
dec
jmp
or
aam
loope,pt
jmp
xchg
and
sub
jg
test
push
push
jmp
mov
jne
shll
movsb
and
call
jae
cmpsl
imul
sahf
cmp
add
or
repz
je
sub
mov
push
dec
push
sbb
xchg
jmp
int
cmc
or
mov
test
xor
push
dec
mov
adc
xor
repnz
xor
dec
loope
push
test
cld
pop
inc
mov
daa
add
lcall
lds
and
jnp
and
push
out
addr16
dec
xor
adc
mov
adc
mov
stos
scas
test
popf
xor
repnz
fldcw
in
test
fadds
stos
xchg
iret
adc
jne
movsb
test
cld
add
inc
mov
sub
push
je
das
push
lret
mov
popa
in
addr16
je
mov
mov
stc
mov
lret
fisttps
push
cmc
add
in
add
cmp
mov
scas
push
sbbb
fs
popf
mov
inc
pushf
jo
pop
test
or
shll
xor
in
lods
lret
xchg
pushw
iret
mov
sbb
push
lcall
dec
xchg
jle
fucomip
int
add
mov
push
push
stos
inc
adc
pop
adc
lret
aas
cmc
pop
sar
mov
imul
sub
add
and
jbe
mov
mov
cmc
xor
sti
cmc
jns
data16
sub
inc
arpl
jbe
leave
mov
push
cmp
hlt
sbb
lret
lods
pop
lret
xchg
mov
dec
stc
lret
mov
and
fidivs
pop
ret
sarl
leave
ljmp
jae
cli
and
mov
in
pop
push
leave
aad
dec
rolb
xchg
jecxz
xchg
shll
imul
into
add
xchg
adc
and
loop
mov
xor
jb
in
test
jnp
mov
fs
sub
lea
das
rcrl
rcll
scas
mov
jns
sbb
sub
std
mov
sub
call
addr16
das
mov
das
mov
or
mov
pop
inc
roll
clc
int3
jbe
add
or
inc
mov
clc
inc
mov
arpl
movsb
pop
adc
pop
sub
outsl
adc
orl
notb
pop
std
xor
mov
daa
add
inc
lcall
sti
mov
xchg
adcb
mov
jns
bound
adcb
pop
xor
and
test
mov
sahf
jle
incb
cmpsb
in
jo
inc
fdivrp
leave
clc
div
jbe
push
ret
fs
mov
jae
cli
sar
dec
test
lods
adc
out
push
pop
mov
or
sub
adc
mov
add
test
call
js
cmp
push
add
inc
push
mov
cmpb
jb
jns
incl
lock
fldt
xchg
pushf
push
push
sahf
rorb
sub
outsb
sbb
pop
js
mov
lea
int
jmp
repnz
ja
and
xor
pop
push
orb
mov
mov
pop
cmpsb
aad
bnd
sbb
inc
fstpl
or
cmpl
loop
fsubrl
out
mov
add
sbb
adc
pop
in
lods
stos
ja
add
ret
rcrl
jle
movsl
pop
add
data16
inc
fucom
add
movl
popa
xchg
out
push
mov
scas
push
jg
jecxz
sbb
xchg
inc
mov
and
repnz
xor
push
lret
xor
push
lea
daa
ja
outsl
mov
lahf
sbb
dec
outsb
sub
sbb
xchg
lea
ljmp
xor
in
sub
mov
fs
movsl
push
sub
es
ret
inc
and
inc
pusha
or
sahf
xor
js
and
push
jmp
lods
testl
xchg
push
int
out
out
sbb
mov
xchg
leave
cltd
sub
fnsave
inc
aaa
jp
popf
sub
std
ljmp
cmp
dec
rcll
push
cmp
mov
ja
rorl
rclb
mov
out
je
inc
adcb
je
sbb
movsl
jae
adc
lods
jp
scas
inc
aam
and
mov
xchg
xor
fwait
xchg
jge
nop
scas
ss
or
or
or
cmp
mov
mov
gs
popa
xor
lods
sbb
mov
sub
mov
insb
rolb
cmp
dec
inc
bound
data16
dec
iret
out
mov
jo
mov
das
dec
pop
xor
xchg
jle
aaa
pop
xor
push
pop
addr16
cmpsl
pop
data16
xchg
inc
ficompl
mov
aas
add
aaa
mov
in
mov
les
scas
push
mov
test
and
mov
adc
lods
add
pusha
sub
xchg
fbstp
xchg
add
call
cltd
jne
xchg
push
int
add
out
test
les
dec
mov
imul
pop
pop
xchg
arpl
cwtl
xchg
loope
clc
and
jge
lds
aas
cltd
xchg
fcoms
inc
sti
cs
jg
mov
notl
sub
sbb
add
sub
jo
xchg
shrl
ficomps
xchg
sbb
shll
jle
dec
ret
mov
add
push
testb
pop
je
loopne,pt
pop
js
jae
popa
dec
jo
and
icebp
mov
cwtl
or
cmp
enter
sbb
dec
aaa
or
dec
aam
enter
jbe
xor
and
outsl
fildl
jle
outsb
mov
mov
repz
outsb
dec
jnp
push
rcll
sti
mov
push
cmpsl
ljmp
int3
adc
outsb
test
outsl
jb
pop
xchg
jmp
test
jle
test
inc
shr
mov
adcb
push
jae
xchg
je
xorl
jno
test
imul
imul
fisttpll
and
add
addr16
jns
mov
hlt
pop
xchg
ret
pushf
aaa
addl
fmull
jp
sbb
test
mov
gs
fistl
xchg
sub
movsl
mov
mov
mov
and
pop
fs
mov
outsb
cld
jp
sub
adcl
adc
push
mov
mov
fstp
out
mov
lcall
fs
jbe
sbb
add
divb
clc
or
jae
pop
adc
jno
fstpl
xchg
inc
or
out
lods
xor
dec
mov
in
and
lods
ffree
push
mov
sbb
int3
dec
rorb
mov
xchg
push
popf
ljmp
out
popf
cmp
jmp
jae
or
je
loop
dec
and
fimull
data16
or
adc
int3
jne
fucomi
jle
push
addr16
dec
xor
cmpsl
xorl
jp
std
ret
adc
rcl
pop
sbb
xchg
dec
and
loopne
mov
dec
pop
adc
dec
stos
adc
mov
cmp
jbe
test
je
incb
xchg
insb
das
outsl
call
sbb
outsl
cmc
pop
loop
pop
cld
add
mov
sub
fwait
repz
jle
je
sar
pop
pmullw
sub
and
adc
mul
cvtps2pd
stos
mov
xlat
test
js
inc
mov
mov
pop
adc
xlat
icebp
pushf
jmp
call
adc
push
xchg
push
stos
mov
jmp
adc
hlt
pop
mov
sbb
mov
imul
push
lea
out
popf
roll
in
xchg
stos
add
nop
enter
fisubrl
lods
push
mov
jle
cli
out
pop
or
mov
mov
inc
cmp
push
cs
mov
ds
xchg
loope
call
mov
mov
jne
or
jmp
push
pop
inc
sbbl
repnz
imul
add
arpl
cmp
xor
leave
sub
test
and
pusha
xchg
push
dec
mov
lahf
push
jg
adc
out
pop
pop
mov
jmp
lds
mov
sbb
sbbb
cmp
repz
pop
lock
push
jecxz
loope
mov
leave
and
pusha
push
popa
pop
movsb
add
movsl
bound
cld
add
push
sub
scas
fidivs
lods
cmp
push
add
mov
outsl
out
es
lods
fst
add
movsb
xchg
loopne
mov
loopne
lret
arpl
scas
andl
mov
out
push
outsb
xor
jg
jge
xlat
dec
loopne
pop
or
test
aad
add
xchg
or
jge
sub
cmc
push
das
mov
cltd
and
pop
sar
sub
in
sbb
lret
mov
inc
push
into
or
imul
pop
add
les
shl
aaa
cmp
lret
dec
fdivl
test
imul
push
stos
cmp
lea
and
jne
data16
adc
jb
adc
fcos
das
mov
jno
rcrb
pop
jmp
pop
inc
adcl
push
add
mov
repz
or
stos
push
fsubrl
xchg
adc
pop
xchg
mov
dec
sbb
dec
fists
and
pop
mov
lods
cwtl
mov
loope
jno
les
lahf
repnz
add
into
inc
inc
cli
stos
inc
add
jns
leave
sbb
inc
mov
xor
mov
das
or
and
fisttpl
pop
sbb
jmp
data16
sarl
cmp
lcall
jnp
fcmovu
icebp
pop
push
and
lds
mov
and
sbb
cs
mov
cs
out
add
sbb
xor
inc
xor
sub
fsubrs
mov
sub
pop
pop
pop
or
fsubrl
nop
inc
jg
sbbl
xchg
push
fidivrs
push
loopne
inc
xor
mov
dec
push
dec
inc
mov
imul
sub
mov
mov
mov
xchg
add
mov
mov
mov
add
pop
xchg
lret
mov
das
pop
mov
dec
les
orb
fstl
loop
movsl
idivb
stos
inc
pop
fucomp
pop
loope
test
push
orb
stos
into
mov
mov
loop
add
insl
sbbl
push
into
mov
addr16
add
ja
jle
push
mull
mov
and
subb
stos
adc
aaa
push
push
pop
sub
jbe
into
xchg
or
fnsave
jo
cwtl
push
cmpl
xor
scas
or
aaa
inc
mov
cwtl
iret
mov
adc
inc
sarl
add
add
es
roll
sahf
jl
adc
leave
xor
fs
je
fucomip
in
hlt
mov
mov
jne
lahf
adc
mov
adc
movsb
ds
or
jl
lods
sbb
push
loope
adc
xor
mov
adc
jb
aad
ss
out
jge
add
shl
lahf
out
in
push
xor
mov
pop
pop
outsl
and
jecxz
mov
aaa
and
mov
into
arpl
mov
dec
mov
movsl
xchg
or
idivl
fnstenv
scas
mov
popa
push
cld
adcl
jle
mov
movsl
add
bound
pushf
adc
xchg
js
mov
push
sub
jmp
push
pop
and
jmp
jbe
or
movsb
mov
adc
adc
arpl
aaa
je
mov
inc
jne
push
in
into
fcmovnu
imul
test
inc
sahf
outsl
je
push
dec
xchg
mov
por
mov
xchg
lods
cltd
lods
pop
pushf
ret
arpl
call
dec
push
pusha
pushl
add
and
roll
xchg
jge
dec
push
decl
inc
cmpsb
mov
daa
ss
cltd
enter
fsts
and
mov
das
mov
mov
arpl
lds
enter
cmpsl
cltd
or
icebp
dec
ja
xor
bnd
aad
add
xor
and
cmp
push
add
push
mov
cmp
cmp
push
dec
aas
push
xchg
mov
add
idiv
cmp
cmp
in
popa
insb
or
add
lock
inc
nop
dec
daa
mov
cwtl
sub
inc
pusha
mov
adc
lds
sub
loop
xlat
jbe
xor
pop
jbe
sbb
inc
inc
lret
loopne
jp
or
das
fidivl
xchg
and
jmp
outsb
out
mov
arpl
xchg
add
push
xchg
cmpsl
sub
aas
xor
cmp
loopne
add
jne
inc
mov
mov
test
jecxz
sbb
xor
stos
repnz
push
ret
xchg
es
cmp
pop
push
jo
pop
mov
fisttpl
add
fstpt
or
shl
shrb
adc
movsl
andb
ret
mov
sub
dec
mov
sub
jae
rol
ss
andl
lcall
inc
out
pop
jbe
and
mov
or
jbe
mov
sbbb
jge
pop
addr16
xor
and
rorl
lret
and
xor
inc
mov
data16
pop
mov
aam
call
lods
andb
enter
mov
in
add
adc
mov
cmp
sar
cs
mov
jmp
decl
aad
pop
adc
stos
lahf
test
scas
test
pop
scas
int3
pop
mov
sub
pop
or
add
sbbb
sbb
sub
pop
push
imul
mov
sub
jecxz
mov
add
push
fldl
or
or
add
mov
lods
xor
dec
fldt
sub
inc
xchg
push
popf
jge
jl
rcll
mov
loope
clc
pop
jmp
insl
xchg
mov
jno
icebp
cmpsb
icebp
pop
inc
sbb
xlat
out
int3
out
pop
pop
sar
dec
rcll
xchg
add
xchg
std
and
jne
mov
xor
daa
rcrl
mov
inc
mov
int3
jne
rolb
scas
imul
cs
xchg
adc
mov
jb
clc
pop
push
sub
leave
mov
inc
cld
cmpsb
dec
inc
add
or
mov
xor
add
xlat
and
shll
push
mov
push
insl
adc
mov
test
inc
cld
jmp
or
ljmp
dec
aaa
insb
scas
in
mov
leave
mov
in
cmc
jmp
ret
aad
sbb
adc
scas
shlb
test
loope
inc
adc
mov
mov
jmp
adc
add
fs
add
jb
fists
dec
leave
xchg
call
shll
ficoms
add
enter
in
or
and
roll
subb
fs
test
cmpsl
or
push
adc
pusha
in
and
add
fcoms
jmp
xchg
jb
iret
dec
or
xor
ja
aaa
daa
test
lock
xchg
sti
push
mov
adc
cmp
sub
push
insl
aas
pop
jg
dec
enter
in
adc
inc
mov
push
bound
or
and
xchg
and
mov
mov
cmc
insl
pop
adc
push
fcoms
ret
pusha
push
loope
into
std
mov
cld
dec
push
mov
or
movsb
adc
imul
les
inc
cmc
arpl
xchg
dec
xor
xchg
arpl
sbb
sub
cwtl
ret
and
stos
sub
xchg
mov
adcb
or
les
push
xchg
leave
add
jns
xchg
cld
leave
ss
mov
push
hlt
jb
mov
repnz
mov
or
negb
add
cmpsl
and
push
nop
repnz
stc
pop
icebp
lds
cmp
repnz
loope
jl
adc
iret
xchg
xchg
and
lods
ffree
and
jp
loop
xchg
xor
xchg
das
adc
stos
xorl
mov
push
test
int
test
and
out
cmp
ret
xlat
jge
dec
jae
jmp
hlt
lods
sub
in
out
hlt
icebp
xchg
leave
push
dec
cmp
push
jmp
imul
dec
outsl
fildll
pop
sbb
xchg
dec
and
sub
xchg
pop
loope
lret
xchg
das
xchg
loopne
or
pushf
outsb
mov
push
pop
pop
test
push
out
jle
push
push
push
shrb
inc
xor
mov
jno
pop
jbe
jmp
lahf
cmp
inc
test
sub
hlt
ja
lock
fnstcw
cwtl
mov
mov
jp
daa
insb
dec
loopne
icebp
shrb
fbld
test
pop
add
jp
xor
adc
jmp
sub
mov
fcompl
lret
mov
cmp
push
cmp
lret
cmp
or
lret
pop
sbb
rorl
sub
cmc
es
inc
aas
sbb
test
xchg
sbb
inc
aad
incl
xor
push
jne
mov
mov
dec
les
cmp
xchg
popf
adc
and
outsl
xchg
ljmp
je
fs
ja
jne
sbb
out
in
jo
cld
adc
pusha
mov
ret
and
mov
sub
cmpsb
outsl
push
nop
test
mov
sub
ljmp
int
aas
push
sbb
push
insb
inc
stos
xchg
mov
icebp
or
repnz
out
adc
xchg
outsl
xor
push
sarb
mov
fs
ljmp
stos
sbb
xchg
sub
ljmp
negb
adcb
and
inc
jb
push
adc
mov
repz
in
cmpsb
cmpb
sbb
out
sbb
mov
fnstcw
push
mov
mov
or
daa
lods
xor
mov
sti
repz
pop
xchg
xorb
mov
sbb
mov
dec
js
popa
adc
jl
sar
je
xchg
push
icebp
mov
pop
and
dec
mov
imul
pop
push
xchg
dec
rclb
movsl
jbe
jo
mov
jne
ja
imul
pop
insl
test
mov
or
imul
inc
mov
mov
push
js
addr16
loopne
cmpsb
xor
mov
pop
addr16
inc
mov
push
pop
out
push
hlt
shlb
subl
jb
mov
mov
sahf
xchg
js
mov
or
ljmp
clc
into
push
aam
les
mov
lock
lcall
mov
push
ljmp
shll
icebp
jg
xor
mov
adc
cmp
and
test
repz
jmp
inc
push
test
mov
xlat
fstpl
pop
and
ljmp
jb
jmp
aaa
push
inc
outsb
inc
jp
std
pop
out
dec
mov
inc
test
jle
jmp
mov
add
scas
nop
pop
divl
xor
mov
push
mov
imul
adcb
mov
fstp
xchg
add
jp
mov
and
mov
push
neg
je
push
rorb
mov
movsb
das
les
xor
cmp
cmp
xchg
sbb
mull
push
push
test
scas
into
inc
lock
ljmp
fsts
inc
pop
fwait
xchg
lea
clc
movsb
in
sarb
iret
lods
stc
cmp
idivl
scas
rolb
and
call
jae
sbb
pushf
dec
js
fidivl
sbb
stos
lds
jmp
cli
xchg
shll
and
mov
xchg
leave
arpl
jg
xchg
out
push
rorl
int
cmova
and
jg
les
sbb
jmp
rolb
sub
sar
ljmp
add
popa
icebp
fldt
lods
inc
adc
fimull
mov
push
sub
cmp
or
repnz
dec
inc
mov
lds
sbb
cs
lret
loope
dec
inc
adc
out
push
bound
or
fdivr
jmp
jg
mov
dec
bnd
ret
je
xor
popa
pop
mov
mov
push
subl
add
push
dec
leave
andb
xor
mov
lock
adc
leave
rcll
mov
mov
out
cmp
xor
dec
push
lea
mov
dec
int
sbb
movsb
add
dec
sbb
dec
mov
dec
sub
scas
push
or
pop
shl
cmc
push
push
cwtl
popf
push
xchg
mov
movsb
imul
pusha
jmp
inc
sbb
mov
jb
je
outsb
mov
loope
inc
adc
cmc
aam
pop
adc
push
mov
lock
pushf
xor
push
lret
xor
dec
cmpsb
ljmp
enter
mov
imul
test
cltd
aas
popa
rcrb
mov
cmpb
and
clc
sub
jne,pn
xchg
mov
mov
jecxz
inc
aas
pop
out
jnp
sbb
add
adc
movsl
sub
enter
aas
int
popl
pop
movl
rcll
push
cli
xchg
adc
lods
loop
or
jo
movsb
and
mov
fcomi
dec
or
out
in
mov
rcrl
mov
cld
inc
mov
cwtl
add
or
push
cmpl
jns
enter
mov
mov
sub
jle
insb
add
inc
outsl
mov
mov
lock
sbb
arpl
shrb
hlt
ja
add
popf
push
movsl
inc
xchg
in
mov
lahf
loopne
mov
sbb
push
xchg
test
fisttps
pushf
shl
imul
jl
push
int
pusha
pop
lods
and
xor
sub
push
lods
mov
sbb
pop
push
xchg
jmp
ficompl
in
inc
ljmp
mov
iret
mov
inc
clc
and
lret
jae
int3
shl
int3
jge
xchg
add
sti
jno
test
mov
sbb
loope
or
dec
fldcw
fidivl
test
fwait
jle
ljmp
out
lcall
out
sar
cmp
lods
adcb
jo
push
push
and
cmp
ret
adcb
cs
sub
cli
aas
loope
je
jnp
ja
add
loopne
addb
repnz
ror
aad
or
xchg
out
adc
fistps
jl
ds
jmp
xor
out
xchg
dec
sarb
push
mov
pop
xor
adc
mov
mov
adc
imul
in
repnz
inc
add
sti
aas
je
sahf
scas
pop
out
cwtl
xorl
stc
jne
push
int
mov
mov
adc
xor
stos
lea
test
call
pop
pop
sub
stc
push
adc
sbb
mov
roll
pop
aas
aaa
in
fcmovnu
fistps
into
push
lret
out
cmp
cmp
cmp
fst
mov
push
pusha
mov
ljmp
popf
rclb
test
jecxz
add
je
shrl
fidivrs
or
bound
pushw
jg
pop
mov
loope
stos
mov
inc
das
dec
pop
xor
xchg
jge
das
pop
xor
aaa
mov
sti
cmpsl
pop
data16
xchg
inc
ficompl
mov
fisubs
ss
sbb
push
leave
or
mov
mov
test
pop
imul
shll
xor
jb
mov
pop
mov
jecxz
cmpsb
fs
mov
jmp
shr
mov
mov
dec
imul
and
pop
xlat
mov
cmc
call
dec
mov
push
mov
mov
ret
xchg
sahf
stc
mov
inc
clc
loopne
gs
and
add
sbbl
aad
sbb
jbe
dec
test
push
dec
jb
pop
sub
insl
sub
pop
aaa
popl
push
push
sub
sbb
cmpsl
shll
scas
pop
jp
data16
add
cmp
das
sbb
loopne
xor
loop
xchg
cmp
pop
sahf
jne
lock
mov
push
push
jmp
pusha
add
xchg
fs
sbb
fsubrs
add
sahf
mov
pop
call
jnp
push
rorl
imull
xlat
sbb
sub
push
cld
inc
sbb
outsb
test
pop
jno
push
push
std
xchg
stos
icebp
pusha
pop
jecxz
enter
dec
mov
and
test
dec
pushf
dec
add
fisubrs
cmp
push
fdivs
jne
cs
js
loope
into
adc
notb
es
mov
hlt
int3
mov
sbb
dec
fsubrl
stos
popa
dec
in
test
mov
inc
pop
mov
cmp
ret
inc
cmp
lcall
and
shrb
insl
fmul
inc
dec
sub
push
xchg
leave
sbb
jns
xchg
adc
dec
mov
mov
nop
mov
test
push
mov
pop
jle
mov
and
testb
cmp
inc
fildll
xchg
push
or
or
test
adc
lcall
push
scas
xor
scas
das
adc
stos
xorl
mov
es
test
adc
mov
and
in
push
sar
jmp
mov
xchg
or
or
data16
or
aas
and
movsl
pop
or
lods
loopne
addr16
dec
xor
cmpsl
sbbl
popa
xchg
ret
mov
stos
bound
inc
xor
fmul
sti
lahf
or
mov
mov
sbbb
dec
sbb
xor
rclb
lret
xchg
aad
jecxz
rcll
imul
cmpsb
lahf
sbb
sub
daa
mov
sub
repnz
inc
mov
add
jg
ret
xchg
cs
popa
out
loope
inc
lods
mov
xchg
ror
mov
mov
popl
jecxz
jae
adc
mov
inc
mull
inc
mov
sub
xchg
xor
outsl
sbb
sahf
xchg
out
fstps
adc
rcl
fcompl
mov
push
rolb
or
js
stos
stos
add
leave
or
sar
jns
or
mov
gs
fcoml
sahf
jecxz
pop
push
or
shrb
imul
sbbb
test
clc
and
insl
mov
add
or
in
jg
cwtl
dec
mov
roll
fistpl
mov
pusha
pop
cmp
das
jns
enter
sub
test
cmc
mov
nop
cs
in
or
pop
xchg
jb
push
mov
repnz
inc
dec
sbb
dec
mov
jmp
roll
pop
insb
pusha
push
loope
loope
mov
aad
movsb
cmp
idivl
repz
push
aam
mov
out
lods
jo
dec
jp
jl
mov
in
lcall
cmp
add
xchg
sub
dec
sub
dec
and
and
test
das
inc
aam
imul
sti
outsl
pop
mov
mov
adc
and
shll
inc
gs
incl
adc
lcall
in
in
insb
popf
leave
push
adc
mov
sbb
daa
jno
cmp
fwait
cmp
sbb
hlt
test
push
dec
jecxz
hlt
dec
popf
pop
or
mov
pop
sub
ret
push
xor
xor
fwait
add
mov
or
pop
into
dec
mov
sbb
xor
daa
in
and
or
cmp
imul
mov
mov
sahf
jg
dec
cmp
movntps
xor
rol
int3
fnsave
mov
mov
fs
fwait
jbe
sbb
fxch
imul
out
sbb
sbbl
adc
loope
ds
mov
xchg
dec
lea
push
cmp
push
insb
or
mov
xlat
inc
sbb
add
dec
lret
ror
fisubrs
test
hlt
mov
jp
mov
xor
mov
dec
addr16
mov
xor
int3
push
hlt
pop
lds
jae
push
inc
inc
cmp
cmp
mov
sti
mov
jge
push
cli
ja
pop
mov
mov
xor
inc
mov
add
imull
cmp
in
ja
loop
movsb
fldcw
in
test
or
movsl
rcl
test
cld
add
inc
stos
push
and
or
xchg
jae
out
das
sbbb
jbe
fwait
es
jne
xchg
frstor
mov
jno
or
fcomps
dec
jmp
stos
mov
adc
inc
pushf
jo
push
cmp
or
addr16
mov
xchg
push
iret
mov
sbb
push
lcall
jl
popf
leave
nop
out
add
mov
pusha
imul
pop
loopne
fsubs
add
leave
mov
adc
pop
add
sahf
cmp
inc
mov
hlt
stos
mov
cmc
xor
clc
out
jns
xchg
cmp
pop
xor
out
dec
stc
mov
push
cmp
hlt
adc
add
fisttpll
leave
insl
sub
mov
test
mov
pop
adc
inc
inc
imul
mov
loop
add
ftst
adc
push
lods
sub
ficomps
popa
lcall
inc
test
jb
mov
and
lea
dec
loop
dec
cmp
int
jnp
mov
popa
aad
sub
testb
pop
icebp
mov
rcll
scas
mov
jns
sub
stos
sub
addr16
jne
inc
mov
mov
sub
cmpsb
inc
int3
inc
inc
test
in
xchg
sbb
dec
mov
dec
das
adc
outsb
sbb
and
inc
mov
repz
mov
xchg
jle
aad
inc
adc
pop
lea
or
orl
xchg
ror
add
daa
add
inc
xchg
les
lahf
mov
inc
loop
les
xchg
aaa
sbb
lahf
xchg
or
sub
sub
push
push
sbb
jb
in
mov
sbb
jle
sahf
jle
push
inc
ljmp
cld
leave
clc
sub
cmpsb
or
test
shrl
sub
cli
shl
inc
jg
movswl
add
lea
cwtl
loop
ja
pop
mov
and
inc
add
popa
sbb
fiaddl
loop
cwtl
ficoml
sbb
pop
dec
popf
fstpl
shl
xor
or
stos
jb
sub
pushf
push
push
sahf
sarb
pop
cs
inc
test
mov
pushf
sub
inc
jns
cli
decb
mov
and
xor
pop
jle,pn
ss
fs
rorl
bound
in
push
or
out
push
cmp
outsb
jb
sub
and
mov
mov
add
sbb
or
inc
pop
sbb
fisubrl
fnstsw
jle
movsl
pop
add
lds
sarb
adc
add
cmp
lods
mov
sbbb
stos
push
cli
fdivrs
scas
aas
cltd
popa
mov
out
fistps
xor
or
cmpsb
xchg
push
rcl
sbb
aam
mov
addr16
imul
test
mov
arpl
imul
fs
jnp
addr16
sti
push
pop
pop
xlat
cltd
in
or
adc
aas
or
mov
xchg
fs
sbb
shrb
xchg
add
jl
mov
mov
notb
push
sbb
sbb
add
jmp
inc
mov
add
xor
in
pop
leave
idiv
dec
cs
sub
cs
and
fwait
cmp
inc
sub
sub
popa
pop
sub
add
es
jg
mov
rcll
lahf
pop
jecxz
adc
or
in
push
jle
mov
jg
icebp
test
call
mov
adc
sub
outsb
repnz
hlt
mov
cli
mov
pop
dec
push
mov
sbb
std
out
mov
mov
or
xor
lock
mov
cltd
test
push
jne
pusha
lods
sbb
inc
stc
xchg
stos
adc
mov
add
test
adc
mov
mov
push
test
or
test
jae
lcall
xor
push
add
add
mov
xchg
cli
rol
addr16
fmull
fs
mov
mov
lahf
inc
ret
pop
jmp
xchg
jg,pt
xor
and
dec
or
dec
jo
pop
je
int
fidivs
cmpsl
sbb
repnz
aam
ret
jne
test
iret
pushf
push
cmpsb
das
mov
pop
or
popf
pop
dec
inc
cs
mov
adc
mov
in
mov
sbb
add
cwtl
inc
jo
sahf
incl
rol
and
push
xor
mov
xor
aad
fwait
into
ret
loopne
pop
mov
xchg
xchg
xor
jecxz
popa
shlb
inc
insl
dec
xchg
jnp
mov
cmp
and
and
repz
push
cld
xchg
lcall
add
pop
in
mov
inc
cmp
cli
jo
cs
scas
fs
push
test
add
cmp
frstor
mov
and
imull
loopne
push
xor
or
hlt
adc
mov
shrl
mov
mov
mov
mov
lret
lods
fsubr
jg
push
in
pop
sbb
xchg
or
pop
out
push
push
imul
cs
push
cmp
mulb
and
push
or
frstor
int
popl
scas
test
imul
fldt
repnz
hlt
xchg
andb
add
test
inc
js
mov
in
loopne
mov
push
lods
gs
lahf
jle
leave
pop
inc
sbb
iret
and
ds
adc
sbb
inc
pop
pop
orb
stc
cwtl
popf
cltd
dec
sub
jnp
cwtl
xchg
xor
jne
insb
pop
mov
clc
adc
or
add
mov
mov
notl
fidivrs
fnstcw
and
lret
ss
lahf
scas
cli
call
xchg
add
inc
mov
lret
mov
mov
mov
icebp
jae
push
mov
stc
rorb
mov
imul
les
mov
inc
or
inc
inc
mov
sti
iret
enter
ss
push
pop
insl
push
aam
mov
lods
mov
mov
enter
mov
incb
leave
mov
cpuid
add
leave
push
mov
fsubrp
or
ficomps
decb
pop
lods
sub
in
jecxz
inc
into
popa
jb
movsl
cmp
add
mov
scas
mov
hlt
mov
inc
mov
add
jecxz
push
std
mov
mov
cmc
jg
inc
clc
movsb
mov
xchg
hlt
lock
add
test
out
rcrb
push
lock
data16
and
loopne
lods
in
xor
push
cs
cmp
xchg
add
scas
mov
lds
sub
add
mov
mov
dec
mov
lret
jmp
and
mov
inc
and
xor
std
jb
stos
jnp
adc
pop
imul
push
ficoml
mov
mov
ret
repz
fidivrs
lock
xchg
mov
mov
cmc
scas
add
sbb
movsb
fs
sub
inc
fucomp
mov
mov
add
sbb
lods
dec
sub
scas
xchg
nop
or
push
mov
outsw
cmpb
mov
cs
pop
add
pop
enter
or
sti
sub
es
shlb
pop
and
or
and
bound
inc
jns
roll
aad
out
loopne
inc
and
loop
pushf
in
aas
sub
fcompl
test
adc
mov
push
xor
mov
jns
rcr
scas
test
sub
in
test
lods
and
inc
mov
push
mov
outsb
movsl
mov
mov
jmp
cli
mov
add
cli
sbb
xchg
push
inc
push
inc
sub
es
mov
fistl
mov
sbb
negl
loope
hlt
or
shll
aam
sbb
pop
inc
pop
loop
and
repz
dec
jne
rorb
mov
insl
pop
lret
fstpl
cmpl
pusha
cmpsb
and
mov
in
jo
xchg
in
dec
or
xor
dec
aad
stc
lea
cmc
mov
stos
leave
sbb
push
rcl
jg
push
mov
and
cmpb
xchg
cmp
xchg
push
add
cwtl
xchg
cmp
add
jo
sti
test
push
pop
inc
rorl
sub
pop
shlb
mov
test
adc
add
nop
insb
xor
mov
or
test
stos
cmp
xor
testl
push
in
les
xchg
stos
xchg
call
xor
in
pop
add
adc
jp
add
pop
jns
jp
mov
adc
inc
mov
pop
dec
xchg
in
in
mov
or
mov
sbb
cmp
dec
mov
inc
inc
adc
cmp
and
into
pop
in
shll
popf
push
push
pop
add
mov
sub
inc
repz
mov
mov
out
js
ds
aam
sub
inc
out
pop
or
push
clc
loope
jp
jns
dec
dec
int
mov
and
pop
icebp
push
das
dec
test
sub
sub
lea
ja
notb
les
pop
adc
sbb
popa
sub
xchg
jb
mov
rcrl
jp
fdivrl
test
jp
js
pop
sbb
lods
and
jge
cmp
insb
leave
fists
cmp
mov
loope
mov
push
sarl
cltd
mov
lea
aas
xlat
push
mov
out
insl
cltd
mov
shlb
push
mov
mov
push
mov
int
iret
rcrb
mov
in
aad
sbb
stos
cmpsb
jns
out
xchg
jle
push
cmc
pop
insl
pop
push
stos
jae
mov
mov
hlt
hlt
xor
sub
pop
mov
stos
inc
out
xor
pop
jle
sub
cmpsb
popf
mov
jl
push
insl
pushf
and
cmpb
fidivs
xor
add
pop
flds
pop
adc
sub
andl
bound
sub
or
shll
pushf
test
cmp
xor
dec
arpl
or
in
inc
dec
mulb
outsl
negl
ds
xor
or
iret
pushl
aad
pop
lea
mov
jne
pop
cmp
mov
arpl
pop
aad
or
jnp
clc
push
bound
inc
inc
mov
push
jg
cmpl
mov
adcb
jge
mov
fidivrl
mov
cmpsb
xor
mov
xchg
xor
mov
rclb
cmpsl
jle
mov
xchg
xor
fmuls
mov
mov
js
out
jle
push
daa
push
out
mov
cwtl
fcomps
pop
pop
out
xchg
test
sub
les
jae
dec
sbb
or
ds
cmpsb
cmpsb
lock
sub
pop
dec
mov
ds
or
subw
imul
xchg
pop
mov
test
daa
add
aam
cld
inc
lahf
mov
es
dec
repnz
dec
sbb
mov
daa
sbb
cmp
loope
inc
or
inc
fnstenv
outsb
adc
clc
or
addb
sub
bnd
fcmovnb
inc
push
gs
pmulhuw
call
test
ja
stos
dec
add
int3
int3
mov
xchg
push
subb
and
subb
xlat
xor
aaa
jp
jno
psrld
mov
xor
push
push
in
lahf
xor
jbe
mov
jmp
shlb
rcl
ret
push
divb
push
push
mov
cltd
ror
jmp
sbb
inc
push
jnp
mov
arpl
cmpsl
popf
pop
add
es
ror
fcmovnb
test
ret
cltd
out
jl
and
cmp
pop
or
fimull
xchg
sub
loope
push
sub
cmpsb
ja
pop
inc
je
jg
sti
cmovbe
pop
out
sbb
add
cs
js
adc
push
popf
xchg
pusha
orl
add
mov
mov
adc
or
lahf
insl
push
mov
stc
or
out
ljmp
pushf
cwtl
insb
cmp
and
mov
xchg
in
xor
add
stos
popf
fcmovb
aas
cmp
mov
out
lods
fwait
mov
in
mov
sarb
lret
shll
lods
cmp
fisubs
shll
mov
dec
jp
pop
add
sbb
lods
mov
cmpsb
push
ret
loope
aas
test
mov
mov
jg
push
jae
xor
xor
dec
pop
dec
adc
dec
lods
cs
subb
mov
ret
pop
mov
mov
js
inc
stos
push
loopne
sub
shll
cmp
in
mov
push
stc
shr
fwait
and
sahf
test
je
adc
dec
or
scas
add
in
sub
std
fcomp
es
jns
out
insl
push
cmp
jle
sub
push
scas
mov
out
arpl
add
sbb
cld
pusha
lds
adc
jg
and
cmc
int3
or
add
fisubrs
das
ss
into
pop
jp
in
push
pop
dec
mov
jmp
push
jnp
pop
mov
stos
mov
push
sbb
std
cwtl
add
lahf
dec
sub
pop
dec
and
pop
out
repz
xchg
pusha
dec
stc
sub
flds
pmaxub
mov
imul
popa
jle
xchg
jge
mov
int
mov
std
push
jne
cmp
xchg
push
mov
seto
jnp
dec
aas
movsb
lods
out
clc
outsl
push
fidivs
jb
repz
ds
ss
mov
je
les
aad
sub
push
dec
lret
lods
sar
sub
ljmp
out
subl
dec
pusha
and
add
cwtl
adc
aas
dec
rolb
sub
test
pushf
aaa
push
pop
cmp
jl
ja
clc
ja
int3
mov
cmp
lcall
fwait
rol
stc
inc
fistl
rcl
popf
inc
inc
push
mov
mov
loope
pop
in
xchg
jmp
add
pop
pushf
es
dec
cltd
xlat
sbb
sbb
xchg
addb
adc
incl
dec
popa
xor
inc
arpl
mov
jns
add
push
xchg
int
add
xchg
or
gs
sbb
clc
or
push
pushf
cmpsb
mov
fists
es
push
test
fwait
cld
mov
leave
jg
mov
leave
mov
xchg
popa
pop
scas
add
es
inc
in
push
push
adc
jmp
inc
add
ljmp
sbb
mov
int
aam
add
inc
xchg
cmp
adc
sub
adc
mov
or
and
mov
in
sub
cmp
ja
xchg
jecxz
sub
stos
insl
aad
add
fwait
pop
inc
stos
push
or
mov
lcall
dec
or
add
dec
and
data16
pop
inc
push
push
adc
fs
in
push
test
cmp
mov
mov
fbld
stos
mov
pop
outsb
popa
cmc
fcomps
in
xchg
idivl
inc
into
out
sti
test
ret
cwtl
push
jae
cli
out
cmc
xchg
mov
into
ljmp
or
pop
cwtl
std
rol
out
fdivs
dec
ds
test
icebp
leave
or
mov
in
mov
adc
pcmpgtd
adc
int3
and
sub
cli
inc
jecxz
test
dec
cwtl
or
xor
aas
adc
xor
pop
pop
stos
cmc
jl
fmul
sub
jo
xor
loop
adc
dec
das
or
cld
mov
inc
iret
adc
or
pop
cmc
fldcw
lods
add
mov
cmp
out
imul
lods
std
jns
sub
jb
fcoms
popa
sbb
ljmp
or
sahf
push
ret
fcmovb
popf
clc
pop
fucomp
and
dec
sbb
inc
mov
xchg
andl
sub
mov
popa
and
sbb
adc
in
xor
mov
pop
test
add
fstpl
pop
scas
stos
test
dec
push
jp
data16
mov
pop
out
sub
out
cmp
sbb
adc
rorl
cmp
stos
mov
push
popf
ljmp
cltd
repz
popa
add
lcall
mov
mov
mov
and
outsb
sub
scas
cltd
sbb
mov
mov
sbb
scas
aam
outsl
scas
subl
out
pushf
xchg
rcrl
xor
test
iret
sub
push
idivl
fistl
dec
add
adc
cli
popa
dec
and
pusha
rclb
clc
xor
sbb
push
or
push
push
push
stos
dec
dec
lret
xchg
jmp
stos
sub
lock
jg
jae
into
or
js
and
test
mov
mov
cmpsl
pop
mov
adc
inc
rolb
sbb
test
mov
addr16
jbe
data16
lcall
shlb
adc
adc
out
jg
mov
push
push
inc
mov
jle
add
push
pop
out
cmp
fisttpll
sub
jb
push
rclb
add
push
out
daa
cmpsl
mov
es
sbb
aad
lahf
int
imul
xlat
mov
mov
mov
repnz
sbb
jne
mov
aad
dec
daa
xchg
xchg
adc
mov
sbb
aas
mov
call
xor
mov
xor
test
sub
movsl
jbe
lahf
aam
adc
and
fildl
rolb
jo
outsb
leave
sub
shll
testb
hlt
jnp
arpl
lods
mov
xor
loope
mov
pop
mov
push
add
in
lods
sbb
call
or
inc
adc
mov
ret
lret
jl
scas
mov
push
rcl
xor
leave
loop
adc
sub
inc
stos
repnz
pop
jnp
xchg
scas
insb
cmpsb
inc
mov
notb
je
add
daa
cmc
adc
xor
add
loopne
imul
mov
idivl
and
stos
mov
loope
incb
inc
adc
push
mov
or
fs
pop
scas
xlat
loope
push
xchg
push
add
pushf
test
outsl
sbb
push
xchg
add
pop
adc
mov
sbb
mov
and
aas
dec
mov
enter
pop
in
rcrl
int
adc
mov
mov
fdiv
in
in
fimuls
jno
imul
inc
lret
cs
mov
or
dec
mov
ret
or
sbb
mov
pushf
push
adc
fstp
jns
test
rclb
loope
fneni(8087
test
push
movsb
repz
fistpl
insb
or
sbb
inc
mov
add
sbb
aaa
stos
fnsave
add
ret
pop
test
sti
and
movsl
ss
sbb
mov
cmp
stc
lcall
daa
imul
or
sub
jmp
jmp
xchg
xor
inc
cmp
test
adc
popa
repz
stos
nop
clc
outsl
repz
lods
mov
cld
mov
into
push
pop
add
imul
add
jae
arpl
in
scas
pop
fldenv
int
aas
shlb
sbb
push
sub
mov
insb
jge
test
cmc
ss
iret
fmul
fwait
scas
push
pop
mov
push
int
jecxz
inc
and
lock
sti
icebp
lea
int3
push
iret
push
add
ret
fs
imul
and
mov
divl
dec
inc
outsb
sub
sub
mov
divb
test
cmp
out
xchg
cs
xchg
pop
pop
and
fdivrl
mov
ljmp
adc
push
mov
or
push
push
pop
aad
xchg
int
test
jns
sbb
es
pop
xchg
sbb
xor
mov
xor
sub
add
jecxz
fwait
mov
js
repz
out
clc
dec
mov
gs
icebp
add
sti
hlt
dec
aad
sub
mov
mov
fldt
lock
mov
inc
mov
and
test
jno
ds
imul
leave
sbb
out
cmpsb
std
call
jecxz
push
scas
push
xchg
enter
sub
or
sbb
pop
stos
rcrl
ja
mov
ss
mov
sub
pop
or
pop
pop
enter
mov
sub
xchg
dec
orl
or
lcall
jmp
mov
lahf
add
xchg
aaa
mov
cmpsl
mov
xchg
jp
push
andb
sbb
xlat
repz
add
xor
pop
sahf
jne
loope
sbb
dec
pusha
aad
or
je
push
addl
sbb
insb
jns
add
test
inc
in
in
mov
repz
in
clc
sbb
scas
inc
lods
dec
sbb
in
pop
xchg
inc
leave
add
leave
xchg
adcb
mov
hlt
sbb
mov
pusha
sbb
inc
jg
or
call
in
imulb
sub
adc
dec
jbe
jnp
pushf
jns
or
adc
and
xchg
and
pop
xor
or
test
ja
ror
jle
lods
fnstcw
mov
or
aad
in
icebp
mov
stos
sub
dec
cmp
lret
fisubrl
dec
fstpl
push
pop
sub
std
sbb
test
mov
mov
out
je
cmp
jp
xor
pop
cmc
movsb
add
pop
lcall
outsb
in
scas
leave
pop
pop
ljmp
icebp
rolb
and
push
mov
xchg
fiaddl
clc
insb
sbb
arpl
push
jns
dec
xchg
insb
lret
imul
in
fldcw
xlat
aas
or
cmpsb
and
mov
push
call
inc
and
cmpsl
leave
rol
inc
pop
popf
das
adc
or
adc
pop
xchg
cmp
xor
jns
loop
call
cmp
pop
test
imul
movsb
jae
xchg
movsb
stos
loop
data16
and
mov
push
jl
daa
jnp
push
adc
or
mov
sarb
jmp
cmp
or
sbb
push
ret
or
in
insb
lock
imul
outsl
xchg
test
or
and
dec
xorb
sarl
fs
push
mov
fcomi
pushf
outsl
test
mov
mov
nop
daa
fs
js
inc
mull
ds
fwait
or
dec
jecxz
jmp
sub
or
int
lcall
and
sbb
hlt
pop
mov
stc
pop
cli
mull
jbe
loope
jmp
adc
int
jmp
test
push
mov
sbb
das
add
pop
cmp
add
mov
ljmp
jg
jle
aas
push
sbb
xchg
into
push
push
mov
mov
push
scas
add
or
xchg
rorb
and
lock
movsl
mov
xor
out
dec
in
and
lar
sub
jae
rcr
out
mov
push
incb
mov
iret
lock
ret
lods
or
sbb
or
jns
out
rcrb
push
and
sub
pop
pop
dec
fs
or
mov
and
cmc
xchg
imul
sarl
ds
mov
or
xor
inc
pushf
call
sub
aaa
outsb
fldenv
scas
xor
test
out
xchg
pop
cmpsb
push
pop
sbb
adcb
fwait
sbb
and
leave
frstor
inc
pop
xor
movsb
dec
mov
cmp
inc
push
xchg
push
inc
sahf
sub
hlt
push
mov
icebp
pusha
ss
lret
int
push
ret
lods
imul
hlt
lcall
push
frstor
stos
mov
ja
mov
subl
je
jns
sti
insb
jecxz
mov
mov
xchg
mov
jae
cmpsb
roll
push
mov
push
repnz
cld
scas
fwait
int3
mov
cmp
push
mov
mov
inc
xchg
push
aad
imul
mov
lods
out
and
ss
cmp
jl
push
mov
inc
sub
pop
repz
inc
icebp
dec
xchg
in
inc
into
lcall
cmpsb
push
dec
out
sbb
cmp
mov
fimuls
ds
jmp
loope
leave
call
xor
cmp
imul
sub
aad
lds
jecxz
aas
jmp
icebp
or
jb
loope
pop
and
xchg
ds
adc
or
or
lcall
xchg
gs
sbb
in
cmp
out
mov
cmp
jnp
addb
xor
dec
sbb
mov
dec
test
outsl
xor
loopne
imul
and
decb
shll
popa
xor
outsb
xchg
pop
mov
sahf
mov
stos
push
xorl
loop
rcrl
ljmp
out
mov
dec
outsb
push
mov
mov
and
xor
or
pushf
pop
or
mov
movsb
lret
fisttpl
je
int3
insl
lret
fcmovne
push
fsubl
mov
test
fdivs
ja
or
inc
cmpsl
lret
sub
inc
and
into
sbb
xchg
add
repnz
iret
std
jbe
pop
push
inc
inc
xchg
lret
pop
outsb
mov
mulb
shr
add
shrb
mov
adc
lea
pushf
xchg
mov
inc
xchg
fs
pop
stc
std
ja
or
and
mov
mov
or
dec
call
subb
hlt
xor
int
das
cwtl
push
mov
push
addl
xchg
movsl
fdivrs
pop
adc
data16
cmpsl
sub
loopne
mov
jecxz
cltd
fsubl
leave
bound
je
into
inc
fcoms
test
shl
lret
dec
ljmp
mov
pop
aas
std
nop
inc
scas
and
push
test
ss
xor
and
and
and
xchg
inc
testl
lods
stos
inc
repz
leave
jmp
shlb
addb
cmpsb
cmpl
pushf
sbb
enter
lea
loop
push
repz
adc
aam
add
pusha
out
shll
movl
jb
jp
ljmp
andl
fcoms
xchg
sarl
dec
inc
sub
rcll
cmpsb
cmp
dec
int3
aas
es
mull
frstor
mov
imul
jg
inc
sbb
sub
or
imul
and
adc
movsl
mov
cmpsl
mov
sbb
bound
addr16
outsb
inc
mov
push
addl
daa
jbe
flds
add
fcomps
imul
data16
or
ds
jecxz
out
fs
add
js
lahf
pusha
cmp
and
xor
arpl
movb
sbb
lcall
mov
jo
dec
fdivrl
in
shl
cmpsb
fistl
popf
fwait
int3
ret
add
push
inc
mov
je
add
jecxz
add
sbb
mov
iret
dec
adc
jmp
test
push
lea
test
je
jle
push
clc
xchg
inc
negl
mov
out
mov
cmc
and
add
cmp
icebp
andb
sub
lods
in
clc
mov
cmovp
in
mov
cmp
dec
xchg
hlt
sub
dec
leave
stos
xor
movsb
ret
lea
pop
adc
mov
push
sbb
dec
outsl
into
jno
lds
cmpsl
mov
xchg
xchg
dec
cmp
fisttpll
inc
jb
cld
mov
mov
add
faddl
add
rcrb
jg
enter
push
sub
orb
or
test
dec
cs
sub
or
test
aaa
sbb
fdivs
lods
lods
inc
into
jnp
movb
pop
je
pop
sub
jb
fisttps
mov
cli
adc
lret
jmp
lret
mov
shr
loope
fwait
test
inc
fisubrl
pushf
jb
adc
push
rorl
scas
loopne
push
dec
sbb
jecxz
les
lods
jb
pop
or
scas
out
inc
push
and
mov
or
mov
pop
jp
mov
scas
xchg
xlat
sub
inc
jl
pop
inc
ds
ss
pop
lahf
rcrl
xor
push
cmp
cmpsb
mov
pusha
xchg
xchg
cltd
fdivs
in
mov
sbb
sub
mov
sahf
push
cmpsb
stos
in
shll
popf
test
sti
pop
lods
mov
xchg
inc
inc
jo
mov
mov
in
aaa
sahf
in
stc
or
adc
dec
jecxz
sbb
mov
stos
movsb
lods
xor
mov
sub
loope
clc
into
loopne
pop
fldl
fildl
ror
inc
fcoml
std
mov
pop
stc
push
add
inc
inc
dec
repz
lock
dec
out
xchg
mov
inc
adc
mov
xor
ret
or
lahf
nop
or
rcr
loopne
movsl
cs
push
jmp
gs
in
fidivrs
pusha
push
in
lcall
add
stc
testl
pop
add
ljmp
mov
clc
pusha
and
jnp
pop
ret
jnp
loop
cmp
lcall
pop
sarb
pop
int
jg
inc
dec
ret
push
push
nop
std
dec
mov
shll
mov
or
subl
std
inc
xor
jne
in
add
mov
mov
sbb
mov
and
repnz
cmp
or
mov
ds
addr16
inc
push
pop
mov
cmp
shlb
sbb
add
lock
scas
jnp
mov
or
pop
pushf
rcrl
jle
push
imul
or
std
push
mov
imul
adc
adc
cmp
push
ja
fwait
ds
jecxz
cwtl
mov
mov
pop
adc
cld
sub
stos
imul
ficoml
pop
jo
lahf
jmp
imull
inc
jb
adc
sbb
das
and
pop
xor
adc
lea
es
data16
mov
add
or
or
mov
lret
shrl
or
cltd
pop
sarl
pushf
xorb
pop
outsl
out
je
sbb
or
sub
pushf
xor
mov
dec
sbb
fwait
call
cmp
es
ret
popa
mov
mov
push
sub
cs
push
outsl
adc
test
leave
cld
aad
inc
sub
add
jmp
lret
xchg
mov
pop
push
adc
leave
dec
sub
mov
add
and
cmp
mov
xor
bound
out
sbb
lds
sti
and
xchg
jno
ljmp
int
cmp
std
in
mov
out
cmp
insb
scas
shll
lock
ljmp
mov
testl
ret
inc
sub
mov
jbe
mov
pop
cld
incl
and
sub
pusha
or
sti
hlt
addr16
test
adc
inc
push
jp
sbb
sbb
das
outsb
cmp
movsl
inc
clc
jl
test
add
pop
test
or
sti
mov
popf
lods
xlat
and
jmp
adcb
repz
mov
jo
add
icebp
push
cmpsb
in
pop
aad
jg
ljmp
and
popa
push
icebp
mov
push
push
xchg
push
fsubs
xor
ret
jnp
stc
xchg
cmp
push
mov
stc
stc
add
pop
jge
push
mov
xchg
in
test
inc
lock
or
lcall
int
in
dec
mov
mov
pop
inc
sbb
fwait
mov
lahf
test
dec
push
and
xchg
clc
aas
push
adc
ja
xchg
and
fisttps
mov
mov
xchg
dec
call
sub
xchg
mov
das
mov
pushl
jg
rorl
jg
mov
jb
lcall
add
xlat
fidivs
addr16
push
sbb
mov
cmp
or
or
rclb
jb
ljmp
sbb
and
mov
les
int
mov
and
pop
mov
jecxz
std
sub
cld
daa
rclb
xor
mov
push
cmp
lret
mov
cltd
scas
out
fwait
insb
cld
flds
jo
push
ss
pop
sub
in
test
sbb
cli
pop
fcomip
mov
lahf
sub
testb
ficoml
out
lcall
cmp
sub
add
data16
scas
xorb
fldt
popa
fisubrl
push
push
cltd
inc
fiaddl
cmpsl
int3
mov
jns
and
xchg
mov
mov
lds
jg
addr16
out
dec
sub
clc
divb
stc
fdivrs
mov
add
or
jge
out
jmp
ljmp
loop
or
lcallw
inc
sub
dec
sub
jo
int3
pop
mov
or
stos
or
lcall
stos
mov
ficompl
shl
out
push
sbb
or
popa
in
in
call
pop
pop
pop
and
pop
cltd
cli
push
in
push
leave
das
xchg
xchg
cmp
dec
ja
jge
pop
and
pop
xor
jno
lea
jmp
sub
stc
out
negl
int3
insl
in
xchg
sbb
insl
movsl
cli
dec
adc
imul
dec
dec
fnsave
sbb
cmp
lods
fldenv
or
aad
mov
mov
push
sbb
lea
add
stc
out
mov
jne
fisttpl
aad
mov
add
das
mov
out
adc
xchg
aas
mov
jmp
mov
jl
enter
mov
xchg
insb
dec
hlt
lock
imul
test
mov
int
jl
jmp
sbb
xor
jg
cmp
leave
mov
mov
mov
mull
aad
daa
dec
push
cld
jno
cmpsl
dec
data16
adc
pop
sti
stos
arpl
pop
cmc
push
jge
push
mov
mov
push
xor
repz
xor
mov
cmp
adc
es
jle
test
aam
loope
stos
test
mov
jnp
insl
add
jne
repz
rcrl
shl
aas
mov
cmp
scas
mov
ret
cmp
subb
into
scas
push
inc
cltd
mov
push
adc
cld
cltd
pop
xchg
pop
mov
cmp
mov
jnp
fisttps
lea
daa
movsb
jo
mov
cmp
xor
ret
sub
subl
or
test
fcmovb
lds
lcall
cmc
or
mov
loop
or
out
pop
sbb
aad
movsl
push
gs
and
in
or
xchg
fsubs
xor
xlat
pop
mov
jnp
jp
push
jnp
mov
mov
jecxz
loope
pop
pop
pop
jge
or
test
mov
and
incb
ret
adc
xchg
sbb
and
lret
pop
imul
clc
adc
sbb
es
fists
inc
and
fidivrs
adcb
adc
push
lahf
push
sub
cltd
sbb
and
ljmp
fildl
cld
ss
sbb
nop
sahf
es
iret
dec
push
out
add
movntq
out
mov
sahf
js
xchg
and
xchg
mov
xchg
stos
stos
mov
mov
fnstsw
lock
mov
push
lahf
das
mov
mov
roll
sbb
dec
sbb
xchg
sub
fcmovu
sbb
aad
test
aas
lods
adc
gs
loop
or
inc
jl
fistps
fdivrs
sbb
pop
sub
pop
push
dec
xlat
jmp
mov
mov
clc
scas
loopne
add
cli
adc
dec
insl
sarl
xchg
fbld
clc
dec
cmpl
cmp
sub
lock
mov
xor
out
and
jle
cs
jmp
pop
clc
test
loop
enter
scas
inc
jne
das
pop
xor
mov
mov
lcall
int
orb
icebp
jno
inc
andl
sbb
push
xor
add
inc
adc
dec
jb
push
mov
xchg
enter
pop
sarl
cmp
pop
rolb
jl
cmp
pop
aad
mov
and
cmp
call
adc
rcll
pop
jb
mov
jo
in
scas
pop
fs
push
inc
sbb
lahf
dec
pop
mov
mov
mov
inc
test
mov
cmp
mov
xchg
in
mov
adc
pop
xor
mov
push
and
in
and
sbb
cmpsl
mov
jo
xor
push
test
lods
fcoms
add
leave
mov
pop
add
divb
icebp
add
loope
push
sbb
cld
test
add
ret
xchg
pop
sbb
mov
push
test
pop
jle
out
mov
test
lret
push
test
fldcw
cmpsb
jge
jne
cmp
sbb
arpl
sahf
data16
dec
aam
xor
popa
cwtl
mov
jo
lock
rol
std
xchg
rorb
lods
dec
pop
or
shll
or
es
mov
ret
cmp
in
and
out
or
push
lcall
add
das
leave
pop
sub
out
movsb
inc
stos
sub
jb
pop
or
jns
jns
pop
cmp
lcall
shr
jns
push
fiadds
dec
jns
out
xchg
push
pop
out
movsl
pop
jl
dec
popf
lock
pop
hlt
push
stos
inc
push
daa
dec
adc
test
aad
lret
inc
push
xor
add
fucompp
popl
or
pop
mov
dec
jmp
mov
dec
pop
lret
jo
test
xor
or
mov
stos
lock
daa
fincstp
push
sti
sub
dec
loop
fmuls
pop
adc
addr16
lret
cmpsl
pop
xchg
testl
push
imul
fxtract
cmpsb
jb,pt
lock
add
imul
add
ds
mov
in
dec
rorb
mov
out
push
test
in
xor
fsub
rorb
stos
xchg
fs
add
and
jnp
lahf
out
movsl
fisttps
imul
sub
enter
sbb
scas
mov
cmp
xchg
enter
push
filds
dec
mov
dec
jns
inc
dec
les
mov
push
sub
xchg
lock
lret
lods
adc
xchg
std
pop
jg
les
sbb
iret
pop
push
jle
add
pop
iret
cmpsb
add
test
out
push
orl
xchg
loop
lods
mov
jp
jle
test
loopne
testb
shlb
lea
int3
cmp
mov
inc
int
cs
mov
gs
jae
popa
mov
pop
bound
out
xlat
loop
and
adcl
sub
sub
xchg
sub
les
sub
pop
sbb
jl
lds
sbb
dec
cs
clc
popf
mov
mov
sbb
clc
sti
xor
adc
push
pop
out
inc
into
ljmp
xchg
sahf
jp
ss
pop
and
xor
sub
adc
adc
sti
into
adc
test
mov
mov
push
cmp
push
push
inc
cs
cmp
mov
rcrb
das
cld
push
cs
fnstenv
std
shl
sar
or
xor
es
xchg
xor
pop
adc
adc
and
sbb
mov
lds
pop
mov
es
jecxz
hlt
fdivs
repz
cmp
imul
xchg
fimull
push
and
mov
or
add
push
sub
add
add
shrl
clc
jbe
in
xor
mov
gs
adc
aaa
push
pop
test
gs
cli
jecxz
push
dec
dec
shrd
scas
add
mov
ljmp
jns
push
in
leave
mov
test
jno
xchg
lret
aas
inc
inc
repz
fistl
dec
cmp
dec
ljmp
mov
or
fnstsw
push
icebp
fdivrl
or
outsb
sub
pop
push
xchg
out
test
mov
mov
in
push
sbb
out
jecxz
jno
ficoms
dec
shlb
out
sub
div
and
add
in
pop
cli
je
lahf
fsubrs
loop
mov
test
or
pop
dec
inc
or
les
dec
mov
cs
cmp
push
aam
fstp
loope
push
mov
pop
cmp
add
imul
jmp
je
add
pop
lea
ret
jnp
inc
sbb
mov
jb
or
imul
dec
xchg
paddb
xchg
jecxz
sub
and
push
lahf
sub
stc
pop
cmp
adc
aad
mov
adc
imul
popa
clc
adc
ss
push
out
aas
adc
dec
mov
enter
imul
jmp
into
jg
sbb
mov
jge
fcmovne
mov
ja
lret
ss
cmc
xor
push
mov
mov
jno
mov
xchg
arpl
sahf
inc
jb
mov
sub
sub
dec
nop
cli
jno
lahf
imul
out
add
xor
repnz
mov
adc
call
fstpl
dec
xchg
dec
fdiv
les
jbe
orb
inc
jo
mov
push
call
outsl
loop
jne
cli
out
shlb
nop
cltd
dec
push
add
inc
jl
gs
pop
decb
adc
outsb
push
dec
je
and
add
fcmovnbe
and
add
cmpsl
ja
cltd
add
popf
xchg
sub
mov
int
mov
imulb
xchg
push
repz
fisubrs
addr16
mov
fs
out
fisubs
loop
jle
loop
lret
roll
add
inc
not
repnz
cwtl
adc
pop
mov
push
daa
cmpb
pop
popf
xchg
cmp
repnz
add
push
dec
pop
in
fcmovu
add
jmp
jnp
push
popf
hlt
inc
jp
rcrl
clc
sub
jle
xor
shr
cmp
mov
outsl
pop
aaa
sub
bnd
mov
mov
or
sbb
adc
in
xor
add
daa
pop
arpl
or
cmp
hlt
test
jo
xchg
fmul
push
out
jb
add
xchg
insb
cmp
lods
and
daa
outsl
dec
aas
jb
cmp
sti
in
adc
or
or
loop
add
popl
out
inc
xor
or
add
push
xor
mov
dec
inc
adc
sub
push
jbe
ss
enter
lock
sbb
negb
jns
inc
out
xorl
pusha
xchg
cmp
cmp
lods
data16
push
mov
pop
iret
notl
pop
adc
adc
pop
outsl
pushf
jmp
xor
cmp
aaa
add
lods
loop
dec
nop
das
cmp
js
jle
in
rcr
xor
cltd
lret
loope
jb
fdivs
sarl
add
xor
inc
lds
cs
jbe
filds
ja
inc
imulb
jb
ror
imul
push
xchg
push
das
add
scas
cmp
mov
push
cmp
dec
aam
xchg
mov
jl
mov
mov
movsl
push
pop
cmp
and
in
divb
xchg
jp
mov
jg
sub
xor
pop
or
push
pop
lret
push
jne
xor
xlat
push
sti
fcomps
es
fildl
movsl
add
add
decl
dec
test
push
clc
pop
clc
cmc
jbe
adc
pop
mov
aas
xor
addl
mov
stc
loope
jle
or
pop
loop
xor
xchg
mov
pushf
sub
push
dec
adc
sbb
xchg
frstor
in
andnps
stos
mov
rcr
or
jne
inc
fcoms
insl
lret
xchg
inc
ja
push
xor
ljmp
cmp
jmp
leave
pop
sahf
pop
jle
movsl
mov
ret
mov
xor
shlb
pop
jne
sbb
cmp
pop
pop
push
lcall
sbb
mov
lret
dec
hlt
cli
mov
cli
push
cmp
sub
add
add
or
test
sub
nop
outsl
jbe
rsqrtps
test
xlat
xchg
popa
je
mov
inc
notb
add
sbb
sbb
lock
xchg
repz
and
push
inc
jp
mov
rcl
lock
loop
call
icebp
jl
cld
pop
pop
fstpl
pop
adc
insl
enter
xchg
mov
or
mov
js
mov
or
jmp
push
mov
jecxz
test
js
mov
mov
and
insl
jge
mov
or
or
movsb
sub
or
jg
mov
mov
sar
je
pop
pop
out
xchg
sahf
iret
xor
push
hlt
ss
jnp
cltd
xor
sbb
rorb
ret
mov
orb
sti
or
pop
std
cltd
inc
adc
jbe
ds
mov
subl
addr16
push
repz
ficoml
sub
andb
xchg
test
jbe
inc
and
push
in
adc
ret
cmpsb
pusha
rcll
lds
stos
pop
pushf
push
xchg
nop
es
insl
gs
xchg
fadds
mov
ja
inc
imul
cmp
mov
in
adc
test
cmpsb
call
sub
add
pusha
mov
xor
or
in
push
inc
outsb
add
pop
shll
out
rorl
jno
cltd
test
mov
add
mov
push
fwait
lods
fldt
lds
pop
xchg
sbb
ds
cmp
cwtl
in
adc
nop
icebp
add
xchg
in
cmpsb
cmp
adc
hlt
dec
fistps
jmp
in
jmp
lret
add
jno
xchg
arpl
mov
mov
cltd
daa
pop
or
arpl
test
fisttpl
sub
cwtl
stc
push
sti
sbb
movsb
lret
daa
mov
repz
test
lahf
bound
cli
mov
popa
mov
jge
fcmovnb
xchg
sbb
in
jne
aaa
sub
mov
jno
mov
or
lds
sub
notl
dec
jae
and
fs
loope
pop
push
out
lcall
fs
sbbl
jno
and
pop
push
movsl
mov
lret
lods
add
roll
hlt
xchg
cmp
repnz
or
push
sbb
movsl
xchg
or
sar
mov
ljmp
hlt
push
xchg
clc
ja
jl
dec
pop
enter
ja
xchg
shrl
and
sbb
cli
mov
ja
fsubr
jbe
dec
cmp
xchg
cld
shll
lcall
dec
inc
push
jo
pop
inc
push
leave
lret
cmp
cmp
out
gs
mov
ja
pop
insl
loop
cmc
pop
mov
jo
je
xlat
and
outsl
ret
cmp
ljmp
inc
cs
mov
or
arpl
or
and
push
jecxz
mov
notl
ret
fwait
je
and
shr
sub
aas
inc
dec
stos
popa
popf
pop
jmp
cmp
sub
mov
push
mov
fwait
dec
test
dec
stos
xor
push
lret
push
cwtl
lea
cli
out
jnp
xchg
push
loope
inc
jecxz
clc
mov
or
cwtl
add
sub
sbb
movsb
adc
cwtl
popa
inc
lock
out
push
sbb
cmp
rcr
dec
jbe
loop
xchg
out
test
mov
jbe
dec
or
jb
test
jge
addr16
mov
pop
das
out
in
bound
xor
insb
cmpsl
mov
lea
test
or
jbe
or
pop
sbb
lea
lods
sbb
nop
xchg
inc
insb
popa
cmc
mov
test
movsl
out
inc
das
xchg
imul
pushf
in
mov
loope
sbb
jl
mov
sub
leave
leave
addr16
xchg
incl
add
adc
jns
movsb
pop
int3
loop
add
or
or
ss
xor
cs
aad
dec
sbb
pusha
sub
cli
or
icebp
jg
mov
sub
mov
jbe
mov
lcall
test
push
xor
add
xchg
push
mov
cmp
adc
lcall
rorb
jp
addr16
xchg
pop
mov
inc
sub
jnp
mov
mov
loope
call
outsl
xchg
pushf
inc
ss
cmpsl
mov
cwtl
insb
mov
lds
jmp
inc
and
inc
jne
iret
xor
insl
dec
mov
es
jne
sahf
loopne
jne
mov
fistl
pusha
adc
mov
cmpsl
popf
mov
inc
movsb
push
negb
jmp
cli
jns
dec
pop
lods
hlt
sub
add
repz
test
pop
clc
push
ret
xor
loop
int
inc
xlat
dec
ss
clc
or
es
xlat
popa
sahf
jb
lret
add
insb
xor
pop
mov
push
push
adc
mov
arpl
rol
cmpsb
push
jnp
pusha
rcl
add
cmp
hlt
test
push
bound
lods
sbb
cmp
xchg
js
cld
push
adc
inc
cmp
inc
data16
bound
scas
jno
dec
fs
js
cmp
cmp
sbb
out
mov
add
stos
popl
jmp
or
or
mov
dec
add
mov
xchg
mov
imull
sbb
lcall
fcoml
cmp
lahf
testb
lods
mov
rcrl
ds
cmp
pusha
mov
cmp
ds
sub
adc
ss
push
test
cmpsl
es
stc
xlat
int
dec
inc
xorb
gs
addl
xor
leave
cs
aam
xchg
fs
jmp
arpl
scas
push
inc
adc
pop
lret
and
add
outsb
jl
jg
xor
xor
jge
sub
lock
and
loop
cmp
outsl
cmc
repnz
int
cmpl
fadds
push
dec
cmp
loope
ret
pop
addb
xchg
xor
mov
sub
push
enter
icebp
imull
sub
mov
repz
mov
lds
xchg
mov
mov
add
addl
sub
fstps
mov
ret
or
loope
stc
adcl
and
or
jge
fxam
and
sbb
pop
insb
mov
cmc
orl
adc
es
rol
dec
aad
mov
cmp
inc
test
jo
lea
xchg
push
out
sbb
pop
mov
inc
lahf
and
xchg
cwtl
repz
insl
and
mov
inc
pop
repnz
pop
xor
cld
aaa
lcall
mov
fwait
shll
repnz
fadds
aad
dec
sbb
dec
jp
jmp
andl
add
cmpsl
enter
adc
push
imul
pushf
xlat
imul
inc
push
sub
mov
xchg
jl
add
stos
push
ds
sar
push
aad
pusha
push
sarl
jl
out
add
movsb
shl
pop
mov
jbe
sbb
mov
xor
inc
ds
test
test
adc
gs
mov
lods
repz
hlt
jnp
jg
sbb
sub
xlat
aaa
push
pusha
fimuls
aas
movntq
pop
leave
dec
jecxz
cmp
sbb
jnp
mov
fidivl
inc
fs
std
push
xchg
inc
das
inc
call
ds
jne
xor
enter
jge
scas
jmp
xchg
lea
mov
or
or
dec
jo
addr16
fwait
sbb
aam
xchg
cmpsl
or
and
mov
lods
mov
mov
dec
jo
sahf
push
cmp
mov
mov
inc
or
mov
inc
push
test
cli
pop
out
dec
and
add
adc
cmp
gs
ret
sbb
sub
mov
dec
pop
lret
cs
sarl
add
jns
lods
and
fmuls
icebp
test
lret
leave
in
andb
in
jmp
cmp
cmpb
xchg
pop
out
std
stos
xchg
or
cmpsl
xchg
cli
mov
dec
inc
ljmp
sti
lcall
lods
mov
hlt
mull
push
ja
pmaxsw
scas
mov
mov
push
data16
or
and
xchg
adc
add
xor
cmc
popf
push
lcall
and
and
sub
lret
or
xor
and
ficompl
imul
inc
or
mov
xchg
test
cs
dec
sub
and
jg
adc
or
lock
lcall
cmpsb
mov
push
push
push
pop
mov
enter
test
mov
jno
dec
test
cltd
mov
jg
sub
sbb
push
lret
lods
cmp
push
int3
or
std
cs
pop
sbb
in
insb
mov
lock
xor
inc
fbld
repz
iret
popl
mov
addl
adc
push
out
leave
sbb
scas
cmp
dec
cmpsl
out
scas
aaa
xor
cmp
push
mov
ljmp
jb
push
xlat
xchg
sbb
cmp
pop
lret
fisttpll
adc
lods
inc
add
mov
clc
stos
imul
cmovns
xor
mov
dec
pop
xchg
push
jmp
sarb
ss
cltd
lea
rolb
lods
in
xchg
mov
aad
outsb
xorb
es
fs
adc
cmpsb
cmpsb
or
mov
mov
rolb
jmp
adc
fwait
xchg
sbb
ret
and
inc
lret
fstpt
adc
ss
std
in
mov
xchg
cmpsb
dec
mov
cmp
mov
push
jb
and
inc
dec
aam
cmp
and
mov
xlat
xor
mov
xchg
cmp
scas
lea
mov
les
pop
sub
adc
and
adc
sub
fists
add
xchg
mov
jl
insl
rcl
not
mov
js
ds
mov
sti
aad
ss
xchg
cmp
stos
mov
push
jmp
jne
cmc
jno
js
xor
add
sbb
adc
push
pop
mov
out
data16
pop
jns
fwait
insl
das
xchg
je
loopne
nop
mov
xchg
fwait
pushf
sbb
sub
adc
shrl
repnz
mov
sbb
adc
scas
jp
out
incl
gs
leave
jmp
jle
mov
mov
mov
mov
daa
stc
inc
mov
mov
loop
test
pop
fidivrl
ror
push
add
es
mov
jae
hlt
lcall
xchg
jecxz
pop
and
in
loop
repnz
test
jb
cmp
leave
mov
imul
icebp
sbb
shll
lds
xor
je
or
movzwl
sti
inc
repnz
xor
insb
repnz
push
in
cmpl
adc
popf
mov
imul
insl
push
jae
les
daa
mov
pop
xchg
leave
xchg
lahf
cmc
push
enter
hlt
mov
sbb
mov
pop
lcall
xchg
xor
push
xor
sub
add
jp
clc
repz
out
sbb
cltd
neg
js
ljmp
add
xlat
jns
inc
test
lcall
sub
dec
gs
loop
in
cli
adc
fbld
lods
subb
fwait
jae
pushf
jmp
test
movsl
sti
fcmove
jns
lcall
jmp
add
bound
cmpsl
ljmp
xchg
mov
lods
aam
adc
mov
fcmovb
cmp
rol
cmp
cld
movb
ss
ficompl
dec
mov
movsb
push
daa
scas
jns
and
jle
and
ja
aam
sbbl
nop
cmp
fcmovbe
or
fldenv
das
cbtw
push
mov
xor
je
mov
fdivr
addr16
sbb
and
jno
je
in
inc
in
insl
pop
sbb
or
lahf
sarb
stos
mov
pusha
mov
ja
and
push
jb
inc
inc
push
jp
stos
dec
sub
xlat
add
mov
shr
sbb
adc
dec
fwait
jge
loope
in
mov
mov
sti
insl
iret
adcl
rolb
bound
cmp
sub
xor
aaa
sti
xlat
push
push
in
rorb
ja
pop
add
jl
xor
push
test
add
add
js
insl
add
cld
mov
stc
xchg
clc
out
inc
xor
mov
xchg
loopne
mov
sub
add
sub
push
out
cmpb
ret
jnp
test
push
add
dec
lods
lret
cmp
mov
inc
and
insl
xchg
xchg
jl
or
sbb
mov
mov
and
adc
or
mov
inc
mov
faddl
out
sbb
inc
jnp
mov
popa
adc
mov
nop
popf
call
and
jecxz
dec
fucom
repz
mov
in
push
xchg
cmpsb
scas
hlt
fisubrs
add
clc
mov
in
dec
out
rorl
mov
cmp
shr
nop
sub
push
xchg
sbbl
xlat
jp
mov
add
mov
pop
push
or
lret
mov
add
test
test
int
cmp
adc
stos
xor
sub
in
cmp
dec
mov
mov
mov
dec
fcomps
hlt
test
inc
dec
add
clc
pop
mov
cs
pushf
xchg
or
sub
fildll
xchg
dec
iret
nop
jmp
dec
jge
and
ja
scas
bound
clc
outsb
decb
repnz
add
push
cmp
cs
mov
xchg
push
aaa
sub
dec
and
sbbw
cmp
cmpsb
ja
test
mov
xchg
cmpl
and
inc
aad
mov
inc
push
jne
out
rorl
outsb
push
daa
inc
jb
xor
or
test
frstor
inc
ljmp
and
inc
test
call
dec
adc
cmp
nop
mov
into
test
sub
xlat
sbb
push
mov
stos
jg
gs
rorb
std
mov
insl
lret
insl
int3
xor
mov
xor
ret
jno
mov
ljmp
dec
imul
lods
xchg
stos
pop
out
mov
ficoml
xorb
pushf
mov
cld
mov
mov
inc
jnp
sub
or
xchg
std
test
xchg
inc
imul
cmc
sarb
and
mov
faddp
adc
scas
mov
cld
dec
adc
xor
adc
or
lahf
add
mov
jg
inc
push
xor
dec
scas
inc
movsb
cwtl
inc
sbb
inc
mov
inc
xor
insl
shll
addb
sbb
pop
adc
fsubr
sub
fwait
jle
and
sbb
pop
cmpsb
aam
xchg
cs
movsb
shld
insl
arpl
push
daa
add
std
popf
xchg
aam
dec
mov
fisubrs
xchg
push
lret
and
bound
inc
dec
mov
divl
and
mov
dec
ret
je
sbb
pop
or
fwait
ret
dec
adc
jne
adc
sbb
sbb
outsl
push
or
adc
hlt
mov
stos
lret
sub
pushf
xor
jo
or
fldl
pop
stos
jnp
das
sarb
and
xor
sahf
fstl
dec
ljmp
jne
xor
xchg
cmp
xchg
aaa
hlt
jo
mov
adc
dec
in
or
jle
sub
adc
stc
xor
mov
sub
add
pop
sbb
inc
in
mov
int3
rcrl
xchg
test
mov
push
and
pusha
add
jecxz
cmp
insb
mov
sub
sbb
out
dec
in
xor
adc
adc
daa
inc
cmp
lods
shll
adc
mov
cmp
shlb
mov
loopne
sbb
aaa
rcrb
je
and
out
sar
jg
mov
xor
sub
movzbl
cmp
mov
cld
xchg
mov
in
movsb
adc
leave
cmp
xchg
es
push
or
mov
cmp
add
lods
cmp
js
icebp
das
mov
test
mov
inc
sbb
push
xchg
ret
mov
pop
lds
push
ljmp
inc
clc
int
test
dec
mov
pushf
psrad
lahf
sub
jp
sbb
scas
cmp
sub
stos
or
inc
repnz
ret
pushf
mov
inc
pushf
push
rolb
sub
cli
xchg
aad
dec
jbe
mov
es
call
add
popa
mov
lock
inc
ficomps
mov
movsb
or
lcall
aad
ret
in
sti
aas
cli
pop
mov
mov
and
lds
int
sti
je
push
fwait
mov
rcrl
out
xchg
cwtl
sti
and
inc
sbb
mov
mov
push
shlb
cmpsb
add
stos
shrb
loopne
push
pop
rcrb
rcr
cs
js
add
out
fbstp
leave
addr16
add
fisttpl
ret
jb
divb
and
xchg
mov
dec
jmp
pusha
jo
shll
iret
inc
sti
jecxz
jo
or
push
gs
cwtl
loope
fdivrs
xchg
pop
aaa
dec
fidivs
or
ljmp
xlat
add
jo
lods
das
adc
lret
xor
repz
loopne
xchg
sti
out
shrl
xor
addr16
les
imul
mov
or
out
cmp
push
pop
fldenv
or
xor
mov
jnp
mov
and
gs
lock
les
sbb
push
and
movsl
sti
lods
cmpsl
int3
push
lahf
xchg
cmpsl
ds
and
pop
adc
ret
call
daa
or
in
mov
dec
stos
push
psubusw
int
fs
lds
push
shrb
movsl
hlt
dec
test
sub
sbb
xchg
mov
add
cmp
insb
out
test
inc
mov
xchg
stc
jmp
outsl
cld
mov
inc
fcmovbe
or
icebp
jo
push
rorb
push
mov
pop
icebp
add
add
inc
and
mov
outsb
sti
in
leave
std
push
or
clc
pop
push
and
ja
cmpb
dec
int
icebp
dec
adc
and
aaa
ljmp
xor
cmc
sbb
xor
xchg
jbe
inc
mov
rcrb
add
dec
test
scas
out
xor
xor
loopne
das
les
repz
ljmp
aad
add
addr16
jmp
sarl
jo
jb
je
adc
jmp
or
push
jle
push
sub
outsb
mov
test
dec
or
out
jp
lahf
jnp,pn
sbb
sti
fwait
inc
jecxz
repnz
mov
mov
enter
dec
dec
push
test
mov
lock
data16
sub
lock
or
mov
sub
fbld
test
out
out
dec
dec
orb
xchg
aad
int
dec
loop
fimuls
aaa
ds
xchg
sub
cwtl
js
sbb
mov
sub
movsl
xor
add
cmp
roll
pop
fst
insl
cltd
jo
outsb
outsl
test
pop
shlb
enter
pop
xor
outsb
loop
mov
enter
inc
xor
or
outsl
and
lcall
mov
and
arpl
insl
loopne
and
in
mov
push
repnz
jne
setb
jb
fcomps
push
loop
dec
or
mov
fwait
ret
cmpsb
jne
ret
xchg
cmc
mov
jle
in
inc
jecxz
or
add
mov
movsl
cmp
push
cld
les
jae
dec
sbb
data16
or
sahf
iret
inc
pop
jbe
fstpt
dec
mov
mov
mov
aaa
push
icebp
fisttpl
pop
in
xor
stos
imul
push
xchg
fldt
stc
rcrl
rcll
mov
lock
lea
cmp
xor
pop
es
hlt
scas
mov
hlt
mov
not
or
mov
or
pop
daa
xchg
pop
push
inc
shlb
jg
outsb
std
repnz
or
dec
lahf
push
xor
nop
and
jae
add
movsb
jns
mov
stos
sarl
insb
adc
xchg
adc
inc
pop
lods
jecxz
or
and
xor
fistpll
ljmp
jecxz
pop
pop
xchg
adc
sbb
dec
outsb
jl
sbb
xor
push
dec
cmpsb
sbb
movsb
daa
xorb
cs
sarl
stos
in
adc
jns
adc
nop
jmp
push
sub
jbe
or
mov
clc
pop
xchg
jmp
jl
jo
jp
push
loopne
pop
lock
lcall
sbb
mov
lods
mov
sahf
mov
daa
jne
cmp
loop
sbb
cwtl
pushf
outsl
int3
int3
movsl
popa
lea
cwtl
insl
and
xor
pop
pop
insb
sub
cmpsb
enter
loop
mov
imul
push
movsb
cld
pop
xlat
pop
ret
cs
rol
push
jo
xchg
jg
pop
jne
mov
bound
fisubrs
addl
and
mov
adc
scas
jo
jo
sti
and
fildl
adc
or
sti
cmc
ret
jp
jg
push
outsl
push
mov
mov
imul
or
push
cltd
test
mov
popf
pop
in
scas
jnp
adc
jg
cmp
pop
dec
push
jmp
push
mov
in
es
or
and
push
adc
sbb
inc
pushf
add
push
cmp
mov
jmp
ja
xchg
sbb
and
aam
sub
push
xlat
mov
jl
popl
adc
shll
xor
int
icebp
icebp
add
xorb
imul
mov
add
sahf
ret
ljmp
mov
fldl2t
xor
inc
xchg
and
leave
addr16
ret
cld
sub
std
pop
inc
inc
mov
or
push
push
aaa
fisubs
adc
pop
out
adc
fnstcw
jae
cmp
int3
stc
movsb
in
dec
loop
or
fs
sti
in
clc
sub
mov
pop
pop
mov
jo
aad
icebp
imul
into
clc
movsb
ret
push
pop
mov
cmpsl
lock
add
or
lock
pop
cmp
int
jne
mov
shl
pop
xor
mov
add
hlt
jl
inc
fsubl
stos
nop
dec
out
call
cmp
rcll
sbb
cwtl
or
lret
and
adc
popa
sbb
push
jne
loop
cs
stc
xchg
test
leave
ja
mov
cmp
std
and
stc
aad
and
push
push
ljmp
insl
mov
jp
insl
add
lahf
outsl
inc
pop
arpl
adc
cmp
nop
stos
dec
add
test
inc
das
clc
adc
dec
test
data16
or
mov
xchg
jnp
std
std
xchg
adc
push
pop
add
cmp
jo
cmp
pop
in
pusha
bound
mov
jns
aam
fimuls
fdivrs
pop
test
lods
pop
cld
xchg
xor
xchg
stos
pop
push
aas
mov
fs
lods
mov
je
sbb
fwait
jmp
fldl
mov
pop
and
in
fmull
daa
sub
gs
adc
jnp
fsubp
lcall
cltd
sub
add
sbb
xchg
decb
jecxz
mov
cmp
lds
ss
cmp
dec
xor
or
out
loop
jne
sbb
gs
or
pop
sub
and
pop
xchg
fsubs
inc
loop
leave
addb
loope
cmp
sub
mov
xchg
sbb
aad
jbe
jnp
push
idivl
lods
jle
insl
rorb
push
xor
mov
jecxz
mov
add
std
in
pop
mov
iret
cmpsb
in
mov
popf
fmull
mov
test
push
adcl
dec
loopne
jmp
insb
into
addr16
dec
imul
adc
cld
sti
jle
mov
movsl
bound
push
orl
lcall
or
inc
js
bound
inc
mov
stc
jo
popa
cld
xchg
add
inc
mov
data16
sahf
pop
movsb
arpl
repnz
xorl
mov
fnsave
xchg
popl
dec
xchg
bound
jb
arpl
sub
push
and
mov
push
jg
xchg
sub
push
jl
in
cmp
into
dec
test
sbb
jns
jns
shll
movsb
jo
ljmp
lcall
lcall
mov
ss
push
stos
lods
pop
sub
pop
enter
in
pmaxub
cmc
inc
sub
pushf
shlb
movb
out
sahf
lcall
lret
out
es
data16
addl
push
popl
das
in
into
jno
pop
jmp
mov
xchg
mov
imul
fnstenv
dec
sbb
xchg
fcmove
inc
inc
flds
mov
in
xor
adc
inc
lock
push
iret
out
scas
das
leave
jno
lahf
pop
in
dec
xchg
adc
inc
cmp
repz
imull
mov
adc
cmc
aam
mov
cs
enter
movsb
inc
sub
fdivl
sbbb
sub
fisttps
xchg
inc
cmc
fwait
sbb
fstl
xchg
fwait
rcr
hlt
loop
jnp
fcmovb
pop
pop
gs
jb
mov
mov
inc
lods
clc
sbb
cmp
cmpsb
lock
push
mov
nop
add
lea
dec
leave
and
flds
data16
and
inc
jnp
push
addr16
xchg
shlb
lcall
das
xor
insb
mov
ljmp
xchg
aas
pushl
mov
adc
and
aaa
adcb
pop
in
outsb
push
not
cmp
lret
pop
xor
pop
mov
loope
sarb
leave
test
in
fldt
insl
ret
shrl
mov
mov
es
and
and
jecxz
jae
fsub
mov
adc
cli
push
mov
inc
dec
cmp
sub
movsb
jl
jae
les
sbb
incb
adc
popa
dec
test
fcomps
lahf
testb
pusha
xor
xor
mov
ret
jp
dec
add
not
push
sbb
ret
mov
les
pop
fists
stc
fsubrl
pusha
mov
stc
movsb
ss
mov
nop
jecxz
push
in
div
xchg
mov
clc
pusha
dec
push
scas
rcll
xor
bswap
pop
fdiv
ret
jnp
loop
inc
sub
mov
rcr
cs
cld
pop
jg
mov
inc
xlat
cltd
mov
fstps
jge
mov
push
mov
aad
pusha
dec
and
iret
lret
cmp
addl
jns
pop
mov
in
and
add
inc
test
cwtl
mov
mov
cmpsb
movsb
rorl
sbb
in
pop
xchg
arpl
sbb
jg
xor
or
mov
pop
inc
cmp
mov
xchg
in
push
bound
stc
and
or
mov
pusha
andps
nop
push
enter
mov
mov
adc
sub
xchg
xchg
imul
in
pop
iret
xor
pop
hlt
scas
dec
call
aad
test
mov
lret
shrb
mov
shl
mov
ret
jmp
aaa
int
xor
mov
and
stos
mov
cli
loop
jnp
xchg
dec
scas
and
mov
out
gs
pop
lret
pop
icebp
add
test
push
fisubrl
scas
jo
loop
mov
push
ja
hlt
daa
or
pop
orb
popf
outsl
or
xchg
test
inc
fistl
out
xlat
dec
push
scas
dec
shll
out
xchg
fs
mov
out
cltd
adc
mov
ficoms
inc
xor
sbb
insl
xchg
push
inc
adc
cwtl
and
rorb
jne
aaa
pop
in
or
mov
mov
mov
mov
es
cmp
mov
ret
dec
out
aaa
mov
sub
add
outsl
mov
push
dec
mov
push
out
xchg
jge
xchg
push
jo
xor
out
sbb
lret
xchg
movsl
and
jb
loope
gs
mov
insl
iret
mov
aam
push
mov
and
cmc
and
sub
jecxz
jecxz
out
popf
je
dec
mov
inc
mov
pop
notl
inc
mov
sub
inc
gs
inc
stc
adc
jne
cbtw
popf
cmc
sbb
popa
sbb
mov
int3
pusha
test
dec
or
ljmp
and
xchg
push
jle
arpl
pop
test
xchg
lea
jle
pop
leave
mov
orl
icebp
movsl
shrb
sbb
xor
push
dec
mov
sahf
icebp
and
push
inc
xchg
sbb
cmp
sarb
adc
push
cmpsb
je
push
lahf
daa
aaa
cli
xlat
ficompl
or
and
add
ljmp
mov
mov
mov
push
out
mov
mov
jge
enter
push
push
dec
mov
or
cli
jno
or
sbb
sub
lea
xor
inc
sbb
mov
dec
xchg
rcll
adc
cs
sbb
test
in
pop
mov
out
lods
cmovg
xor
lcall
std
cltd
pop
jo
jle
mov
inc
leave
sbb
shr
jb
outsl
das
aad
or
in
mov
sarl
pusha
lds
cld
cmpsb
and
out
fcos
xchg
fnsave
add
ror
jp
xchg
rolb
jmp
or
xor
sbb
sbb
jbe
imul
pop
nop
and
std
pop
and
or
cwtl
jg
push
lcall
and
xchg
mov
testb
push
and
movsb
aas
enter
jb
xor
mov
or
cmp
xor
cmp
mov
and
pop
adc
mov
test
stos
insb
aaa
jmp
push
adc
xchg
mov
mov
cwtl
sub
cmp
ljmp
mov
fisttpl
push
xchg
sub
cmp
lahf
loopne
cmp
inc
cwtl
sub
lea
les
lock
dec
sub
rcll
add
mov
adc
sahf
pop
stos
ret
popf
mov
movsl
mov
cmpsb
push
ret
jo
in
sub
int
jns
out
test
repnz
pop
bnd
test
or
mov
pop
dec
inc
leave
pop
jo
testl
sar
xchg
add
jl
fsubrl
shrb
jl
xor
add
ds
jns
xchg
xchg
in
call
int3
popa
dec
in
xor
or
stos
push
or
test
fisubrl
dec
mov
call
leave
inc
dec
cmp
ret
dec
sbb
out
pop
mov
inc
scas
xor
subb
or
jae
test
in
lea
das
repnz
andb
mulb
or
mov
call
adc
fldl
ds
xchg
sbbl
add
daa
add
jae
mov
push
lods
jno
in
sub
movsl
sti
and
inc
rcrb
jp
mov
xor
hlt
js
cld
lock
push
sub
cmp
xchg
rorl
jge
mov
push
test
aas
pop
adc
jnp
addl
imul
or
leave
pop
xor
xor
test
dec
push
outsb
and
out
xlat
es
scas
jae
and
mov
jnp
hlt
inc
lock
adc
pop
xchg
mov
ss
jp
pop
mov
clc
es
adc
pop
ret
and
popf
dec
fisubl
or
test
sbb
fwait
xchg
mov
xchg
aas
cli
xchg
sub
mov
or
cmp
loopne
pop
mov
adc
arpl
fcomps
mov
nop
call
bound
pop
idiv
push
cmpsb
adc
cmpsl
sbb
pop
push
jl
scas
push
lret
and
xor
cmpb
data16
inc
pop
cmp
mov
push
jb
xor
imul
push
xchg
repnz
add
cmpsl
add
dec
sub
dec
or
mov
xor
xchg
pop
test
loope
sub
in
pop
cmp
lret
int3
lcall
cmc
ds
rcll
cmp
jbe
outsl
movsb
fisttpl
add
stos
push
xlat
or
lea
mov
jp
mov
pop
xchg
in
mov
stc
js
mov
and
das
jnp
js
adcb
addb
mov
in
adc
mov
xor
pop
subb
inc
in
mov
outsl
gs
xchg
icebp
pushf
in
gs
cmp
rclb
test
pushl
pop
mov
adc
mov
jge
and
int
movl
sti
lea
dec
aas
xchg
push
das
mov
int3
jo
add
test
outsb
test
loope
mov
cmc
arpl
clc
pop
push
mov
mov
pop
or
dec
outsl
fsubl
pop
andl
fldl
sbb
add
or
xor
adc
fidivs
inc
gs
mov
xchg
lock
push
es
repz
shll
dec
ljmp
dec
xchg
lahf
cmp
pop
cmpsb
call
mov
ret
adc
jo
repnz
sbb
pop
in
fwait
cmp
push
icebp
push
es
sti
movsl
mov
or
dec
pop
fnstsw
arpl
adc
cld
loope
test
inc
dec
pop
loope
adc
dec
push
inc
jl
and
or
cmp
pop
inc
sbb
xchg
adc
daa
ss
sub
pop
lea
mov
cmp
gs
loop
xor
dec
fldl
mov
xlat
nop
ret
push
xchg
bnd
inc
neg
mov
inc
add
sbb
pop
mov
jge
cwtl
mov
mov
iret
jnp
shrw
add
inc
push
idiv
xor
fwait
es
mov
and
jne
pop
bound
pop
aas
dec
in
and
shrl
mov
lcall
mov
xchg
stos
faddl
push
mov
filds
jbe
call
ds
imul
call
push
iret
lds
inc
mov
push
fildl
mov
clc
int3
sub
jle
cmp
fwait
shrb
gs
cld
jl
sbb
mov
push
sub
inc
pop
cmpsb
ja
push
cwtl
mov
xor
jne
sub
jae
jne
pop
test
dec
rorb
sar
xlat
sbb
or
repnz
xchg
enter
cmp
mov
and
pop
adc
jmp
mov
xorl
mov
xor
sahf
call
in
xchg
adc
or
xchg
jno
cmpsl
xor
push
jg
lds
xchg
xchg
out
loope
mov
je
and
and
dec
jns
call
es
int3
icebp
enter
xor
loop
lret
push
enter
mov
movsl
andb
jmp
xchg
adc
push
xor
cmpsb
aaa
and
add
fcomip
push
loop
fistl
push
nop
inc
call
inc
push
loopne
xchg
xor
nop
dec
or
xor
inc
sbb
add
push
mov
push
sub
xor
push
inc
or
pop
addr16
and
loope
mov
aas
fistps
dec
pop
test
es
shrb
xchg
jecxz
cmp
test
shlb
out
mov
pop
inc
sub
jg
pop
and
and
pop
loopne
xchg
jecxz
mov
sbb
fs
xchg
fcmovb
out
xchg
or
jg
xchg
mov
ja
popf
test
arpl
pop
adc
lret
dec
cwtl
mov
push
and
adc
push
lahf
in
push
inc
push
sahf
and
pop
iret
insl
jo
mov
add
mov
push
jnp
leave
and
imul
sbb
xlat
xor
lods
pop
add
pop
pop
pop
lods
aaa
jg
mov
and
ds
shlb
xor
inc
and
mov
xor
repz
fs
in
push
int3
lods
cmc
mov
sbb
inc
inc
mov
sarl
cmpb
cmc
and
repnz
sbb
ds
shrb
mov
dec
xchg
cmp
push
mov
mov
in
xor
pusha
shll
jmp
faddp
test
fs
adc
std
dec
adc
popa
xchg
sarl
int
mov
repnz
sub
pop
mov
cmpsl
cli
lods
pop
or
xor
lods
fimuls
mov
inc
mov
loope
inc
adc
dec
in
mov
addr16
jmp
stos
imul
ror
jae
pop
jno
test
hlt
push
imul
mov
inc
push
ss
pop
mov
cmp
push
jmp
pop
decl
push
pop
iret
test
scas
jb
cwtl
adc
sub
xchg
testl
add
inc
dec
cwtl
enter
mov
add
ret
jle
sub
dec
sub
andl
in
jmp
mov
fistpl
add
shlb
xchg
lods
cmp
adc
cmpsl
sub
pop
mov
mov
testl
loopne
addr16
imul
mov
sbb
xor
cltd
ljmp
push
and
loopne
ja
ljmp
gs
mov
cmpb
lea
dec
cmp
mov
insb
stos
outsl
dec
int
scas
fistps
pop
push
cmp
stc
ja
jmp
push
nop
pop
popf
lahf
jnp
fwait
shll
lret
push
adc
adc
jae
lahf
mov
fildll
je
pushf
popa
mov
dec
lock
cmp
movb
ja
and
cwtl
out
rorb
jl
and
mov
fcos
andb
mov
ret
or
push
or
or
sbbl
nop
push
mov
out
jl
arpl
dec
xchg
inc
push
inc
sub
adc
andb
push
push
fstpl
mov
sbb
adc
flds
testb
aas
dec
push
aad
dec
cmp
inc
and
adc
gs
in
je
idivb
lret
xor
or
dec
in
ficompl
dec
mov
fbstp
sti
sbb
mov
inc
jae
jmp
mov
add
sar
or
or
es
dec
xchg
scas
fwait
in
mov
xchg
mov
jne
rolb
icebp
cmp
jae
idivb
and
xor
sahf
mov
rclb
movsb
loopnew
mov
fstpt
mov
sbb
mov
fistl
or
in
jno
jne
lret
pop
in
cmp
or
jge
gs
pop
mov
xchg
mov
jg
pop
sub
add
inc
je
ret
add
push
loope
jo
js
cmp
jle
data16
jnp
dec
data16
rorb
cld
jmp
dec
aad
out
mov
sbb
ljmp
adc
test
fistpl
jmp
inc
les
insb
inc
aas
rorb
sbb
into
shl
movsl
push
add
dec
fs
or
dec
lea
mov
in
hlt
sub
xor
add
sbb
mov
or
fisubs
lods
pop
insb
std
pop
sub
insl
icebp
in
or
add
inc
sub
jne
subl
fsubr
inc
notl
sub
adc
add
mov
push
mov
das
ljmp
jb
sub
adc
mov
pop
test
mov
jo
xchg
lret
jno
aas
fwait
inc
mov
in
je
push
add
es
lret
subb
xchg
sub
daa
pop
out
lods
inc
lahf
cmc
pop
mov
std
jns
ljmp
daa
outsb
and
inc
sbb
dec
fwait
adc
dec
and
pop
cmpsl
insl
dec
xchg
mov
mov
or
sahf
xchg
repnz
bound
mov
sbb
aaa
fsubrs
fidivrs
cwtl
push
stos
fs
out
pop
dec
leave
push
hlt
rolb
jne
pop
xchg
mov
mov
insb
rcll
jp
jae
ret
xchg
adc
cmp
adc
xor
jmp
jbe
mov
sbb
xor
dec
or
test
sarl
iret
mov
jge
adc
gs
mov
stos
xchg
test
insb
shl
std
pusha
rcll
stos
ljmp
in
cmp
loopne
outsl
xor
scas
les
shrl
push
scas
dec
xor
ljmp
dec
or
cld
dec
fsubl
aad
cltd
ds
mov
ja
mov
jb
mov
lea
aas
xchg
andb
dec
sub
push
mov
push
xchg
bound
popf
ljmp
inc
mov
mov
adc
inc
mov
dec
popa
push
mov
mov
pop
mov
sbb
lea
inc
mov
sub
pushf
ret
push
gs
mov
mov
pop
dec
sub
push
es
inc
in
push
xor
dec
dec
ficoms
push
sbb
sbb
arpl
ret
insl
push
sahf
imul
cld
out
mov
cs
sub
cltd
sub
test
mov
add
mov
push
lret
cmp
fwait
lea
dec
in
jle
into
dec
xlat
shl
sub
xor
sub
sbb
push
or
xchg
xchg
adc
ljmp
pop
je
test
flds
popa
jg
aam
xchg
jbe
cmp
cld
adc
arpl
cmpsl
mov
lods
cmp
in
pusha
scas
mov
cs
push
dec
push
jns
adc
ljmp
out
nop
inc
test
jp
dec
mov
fstl
fdivs
pushf
jge
and
mov
scas
xchg
sti
movsl
inc
or
cmc
cmpsb
xchg
and
xor
push
fisttps
jp
jnp
fwait
shll
fmull
into
lods
shlb
loop
mov
push
ret
shrl
lret
iret
pop
mov
mov
add
and
out
rolb
xor
or
clc
add
ds
xor
mov
arpl
xchg
mov
daa
mov
test
jo
leave
out
shlb
push
sub
jge
int
repz
rcrb
scas
lock
pop
xlat
sbb
adc
mov
and
mov
xor
es
shlb
pop
jo
jecxz
jp
sbb
dec
stos
mov
or
out
fldl2e
test
ja
mov
popa
mov
push
dec
jle
stc
loop
xchg
sbb
hlt
sub
jo
pop
jge
andb
out
push
dec
inc
dec
xchg
mov
fsubp
push
lock
sub
pop
rorb
dec
clc
push
mov
jbe
scas
sbb
jbe
popa
jb
push
jae
mov
jns
fs
cmp
mov
negl
push
lcall
push
and
and
xchg
stc
leave
dec
mov
mov
je
in
xchg
and
outsl
jle
add
push
xor
int3
out
das
cmp
aad
push
test
addr16
sahf
mov
loope
lods
mov
rorl
mov
and
sub
jno
xchg
pop
test
in
in
adc
daa
repz
in
sub
mov
pop
and
jb
out
shlb
and
xchg
pop
mov
pushf
cmc
dec
insb
sbb
stos
mov
mov
jbe
adc
push
adc
mov
daa
lcall
loop
pop
or
or
cltd
cmpsl
cmp
je
insb
imul
inc
sub
and
repnz
cmp
cld
inc
mov
sub
bound
es
push
scas
loope
push
add
subb
mov
xor
out
sbb
icebp
xor
lods
xor
cld
push
ret
pop
scas
lods
push
lcall
mov
jae
jg
sti
leave
push
pop
int3
or
push
or
jo
outsl
sub
mov
mov
movsb
xchg
mov
sbb
clc
pop
jp
pop
push
xlat
jne
fldt
add
and
cmpsl
movsl
jmp
les
and
aaa
shlb
das
add
bound
mov
mov
adc
mov
addr16
add
sub
out
imul
incb
push
dec
repnz
mov
cmp
test
arpl
repz
cwtl
lea
addl
mov
mov
popl
mov
sbb
push
pop
and
pop
aas
mov
lret
and
fdivp
push
fs
leave
fidivrs
fistl
add
mov
mov
lret
imull
lods
pop
into
sub
lock
push
sbb
sbb
cmp
add
iret
push
fsubl
rorb
xchg
jne
mov
cmp
push
jl
in
ret
dec
add
mov
addr16
ror
pop
addr16
xchg
lods
aaa
xchg
mov
xchg
jmp
xchg
fistps
xor
cmc
pop
jne
jp
mov
insb
lds
mov
jp
pop
fidivrl
ret
int
jle
mov
cmc
cmp
out
jl
inc
lea
jp
mov
mov
arpl
popl
push
jle
std
iret
les
out
js
imul
daa
lret
in
ret
pusha
aas
out
into
mov
insl
dec
push
shll
daa
mov
subl
sub
cld
dec
cmp
push
std
icebp
cwtl
shl
sub
stc
loope
mov
mov
cmp
dec
pop
lea
in
out
dec
bound
fstps
jecxz
sbb
imul
mov
xchg
fcom
test
pop
cs
lods
ret
out
das
movsb
lock
fidivrs
les
push
mov
sbb
lret
int3
and
sahf
cmp
shr
jns
les
add
xchg
xor
int
lret
xlat
cmp
adc
dec
jg
daa
mov
mov
rcll
fildll
push
ljmp
lret
push
fisubl
fidivrs
xchg
cmpsb
outsl
cmp
mov
xchg
push
push
int3
mov
test
sbb
jl
sbb
push
pop
mov
into
add
aad
xor
cmpsl
mov
push
fisubrl
leave
push
std
orl
mov
aad
lock
mov
xchg
fsubrp
jge
lea
shlb
dec
add
enter
pop
repnz
xor
and
pop
mov
cltd
jle
enter
sub
adc
arpl
mov
mov
fwait
mov
xor
mov
mov
hlt
icebp
mov
iret
xchg
push
add
add
push
aas
ror
cld
mov
fwait
adc
add
fwait
jno
dec
shl
push
mov
ds
pop
xor
xor
cld
pushf
mov
adc
push
sar
push
pushf
and
cmpsl
jnp
insl
andl
lret
mov
xor
aam
roll
in
test
int
cs
cmp
sub
jbe
mov
jno
insb
stos
xor
lods
int3
into
xorb
movsb
idiv
or
aad
int3
aam
xor
adc
jno
push
jnp
ljmp
or
cmp
or
mov
and
pushw
je
push
jmp
rcrb
insl
mov
clc
xchg
pop
ja
sub
mov
lahf
arpl
cmpsl
add
xor
std
aad
xor
fwait
mov
movl
loopne
out
xor
rol
fiaddl
outsl
jmp
pushf
insb
ret
arpl
movl
mov
pop
pop
pop
push
sarl
test
push
fs
out
ret
out
pop
dec
mov
fcompl
lock
lret
cmp
into
cmp
fpatan
mov
adc
mov
out
pushf
add
stos
ljmp
addr16
mov
mov
cs
cwtl
mov
sub
jp
inc
rol
loop
xchg
sbb
sub
iret
in
or
fsubr
jbe
push
xchg
mov
mov
mov
sub
std
inc
aas
clc
daa
sbb
fstpt
movsb
mov
pop
pop
lock
out
out
call
ss
sub
sub
cmp
std
xor
cmp
cld
add
jne
mov
test
lret
out
repz
adc
in
fmuls
adc
fsubs
cld
je
mov
fidivrl
stos
loop
daa
push
scas
movsl
sbb
les
mov
icebp
popa
xor
inc
adc
mov
push
and
shr
xchg
call
jae
movsb
mov
add
mov
sub
popa
sub
sbb
mov
insl
out
outsl
icebp
popa
enter
sbb
out
and
stos
mov
push
mov
cmp
fmull
sub
xchg
mov
inc
mov
mov
bound
movsb
jo
xor
pop
mov
xchg
out
mov
scas
cld
jg
stc
ret
shll
call
jl
and
lds
sub
fisttps
in
hlt
fidivs
mov
sbb
arpl
jbe
lock
test
test
mov
push
inc
xchg
mov
sahf
inc
stc
pop
imul
clc
inc
imul
push
cmp
ljmp
mov
std
mov
aaa
pop
ljmp
outsl
mov
xor
mov
dec
loopne
pop
scas
outsb
mov
adc
adc
cmp
mov
fidivs
pop
test
mov
or
or
in
test
repz
jecxz
add
lret
xor
dec
xchg
cmpsb
push
ljmp
xchg
pop
stos
add
inc
imul
pop
leave
out
mov
cmc
or
pushf
movsl
dec
xchg
aad
cmpsb
mov
sahf
mov
pop
push
add
shll
sub
dec
xchg
push
adc
int3
cld
js
push
push
in
lcall
cwtl
jmp
repz
push
ret
mov
push
fnstsw
leave
or
bound
jge
xor
and
gs
mov
add
dec
pop
sbb
call
xchg
daa
pop
ss
lods
mov
mov
mov
mov
scas
jo
push
daa
das
les
fadds
add
add
lds
sub
push
jb
ja
add
xor
mov
les
jmp
push
mov
cmp
enter
cmp
xor
xor
or
add
or
pop
xchg
pop
in
sbb
push
cmc
andb
repz
inc
pop
sub
dec
ss
dec
das
arpl
arpl
cmpsl
lahf
jp
mov
stos
loopne
test
out
cmp
into
in
dec
popf
mov
adc
ror
xchg
push
jnp
test
daa
xchg
lock
iret
testl
sbb
adc
sub
mov
aam
xor
dec
mov
pop
xchg
mov
pop
adc
jne
jo
mov
fisubrl
xchg
jg
jp
cmc
nop
sbb
push
mov
in
xchg
cmpb
xorb
iret
repnz
inc
shll
cltd
jmp
xchg
mov
es
push
mov
ret
mov
and
in
xor
int
jl
in
in
sbb
into
pop
cmp
js
mov
mov
and
jne
sbb
jge
and
movsb
aaa
mov
xchg
xor
jecxz
mov
icebp
sbb
in
jne
arpl
push
inc
push
and
sub
mov
in
and
mov
addr16
pop
push
mov
fs
das
loop
pop
and
repnz
jno
dec
xor
mov
cmp
scas
adc
push
icebp
mov
sahf
out
js
push
sahf
cmpsl
jmp
das
lcall
sbb
ret
mov
inc
inc
mov
cmp
jns
pop
pop
mov
dec
outsb
push
in
sbb
daa
daa
jmp
and
cmc
test
xchg
jle
nop
push
xchg
and
pop
or
mov
cmp
rcl
popa
jp
gs
int3
cmc
dec
mov
testb
fnstenv
mov
movsb
jp
repnz
test
or
or
push
out
in
xor
in
aad
scas
inc
dec
lock
and
aas
filds
jae
jp
dec
sbb
subb
xchg
mov
pusha
mov
nop
sbb
sbb
pop
push
sbb
and
xchg
and
jmp
xlat
jge
mov
dec
imul
jnp
out
notb
fldenv
aam
in
cmp
xor
arpl
jnp
sub
int
fstpl
data16
pop
test
scas
lret
pushf
stc
mov
mov
sbb
jbe
dec
xchg
push
add
outsl
addr16
clc
add
dec
mov
out
sarl
add
push
and
aam
fbstp
scas
mov
int
jnp
in
mov
rdtsc
mov
mov
dec
sbb
sub
ds
aas
push
mov
arpl
jge
lods
or
and
jnp
dec
jno
push
push
popf
or
rcrb
repnz
jne
pop
fistl
cmpsl
mov
dec
daa
mov
pop
in
stc
mov
ret
mov
jecxz
repz
push
mov
dec
xor
repnz
add
imul
loopne
in
sbb
inc
aad
sub
xor
ret
jg
mov
xchg
std
in
push
scas
comiss
jns
mov
les
aas
add
gs
mov
adc
rcrb
xorl
mov
lods
jb
cld
lods
cltd
push
mov
bound
in
push
outsb
fdivl
mov
xchg
lahf
xor
pop
lahf
push
inc
lcall
mov
or
dec
lret
push
ret
mov
inc
mov
adcl
icebp
sbb
test
xchg
imul
es
dec
shl
ljmp
into
and
aad
dec
jecxz
jbe
cmp
fcomps
aad
mov
push
jmp
inc
rorb
test
cli
xchg
repz
push
sub
into
scas
lock
push
ds
mov
je
xchg
testl
inc
jno
movsb
pop
adc
pop
lret
dec
adc
mov
aad
shrl
std
xor
adcl
test
jnp
pusha
sub
cltd
lock
push
sub
popa
push
pop
add
or
movsl
jo
xchg
inc
sub
test
xor
xorb
fiaddl
cli
movsl
inc
cs
mov
out
adc
xor
jno
ret
inc
adc
push
testl
pop
xchg
icebp
nopl
out
adc
jb
rol
movsl
stos
pop
loop
cmp
ljmp
imul
cmp
fidivs
sub
mov
insl
sahf
nop
mov
fcoml
lock
cwtl
enter
iret
and
sti
sbb
xchg
adc
adc
adcl
movsl
xchg
daa
adc
aad
out
fdiv
int
addb
mov
fwait
inc
gs
adc
xlat
int
xchg
inc
lret
push
cmp
iret
push
fdivs
aam
mov
andl
aaa
sub
in
inc
cmpsb
shrl
and
out
leave
jbe
aad
rcll
jg
jno
and
adc
fs
or
sbb
xchg
push
je
pop
stos
and
mov
int
cli
cli
xor
popf
xchg
lea
mov
mov
mov
divb
repz
add
add
fldenv
jo
es
out
jae
fsubs
fs
cwtl
pop
push
dec
push
testb
shll
lahf
outsl
or
push
xor
push
mov
mov
cmp
mov
mov
sub
mov
cmp
cmp
push
cmp
fstpl
dec
or
mov
pop
push
sub
outsl
xchg
insb
sub
adc
sub
push
mov
and
cmp
inc
ss
in
mov
mov
aas
psraw
ss
lcall
inc
add
sub
lret
jl
fsubr
or
out
xor
xor
mov
inc
xlat
in
mov
cmp
bound
jecxz
outsb
and
andl
dec
dec
sbb
pop
std
mull
das
negl
adc
arpl
inc
daa
aas
jne
sbbl
iret
jp
or
mov
test
mov
adc
xor
xor
mov
mov
fsubp
cmp
push
dec
movsl
xchg
mov
sbbl
int3
push
arpl
pop
movsl
jno
testb
and
hlt
mov
popf
push
jecxz
sub
fstps
jns
mov
pop
lock
loopne
add
out
xlat
movsl
pop
orb
imul
cmp
mov
cmp
mov
iret
and
pop
or
xorl
or
adcb
in
cmpsl
push
pop
mov
mov
and
inc
cmc
inc
lret
add
shr
lret
or
add
jmp
mov
sub
mov
out
sub
pushf
adc
cmp
add
xchg
jns
mov
dec
dec
push
inc
into
ret
sbb
pop
xchg
test
pusha
ds
cmp
jl
jmp
lret
aas
sbb
mov
mov
sbb
mov
loopne
fsubp
dec
cmpsb
jge
cmpsl
test
lods
outsl
mov
add
mov
xchg
or
lahf
lea
push
dec
insl
inc
dec
pop
aad
movsb
sub
lods
jmp
popf
cmpsb
jmp
push
mov
jge
sbb
faddl
test
add
cmpsb
bound
pop
movsl
cmp
jge
adc
push
pop
dec
les
dec
outsb
lahf
add
mov
insl
jae
inc
mov
aad
ret
js
pushf
inc
sub
addl
lahf
sub
mov
scas
sahf
sub
mov
mov
push
xor
pop
scas
sbb
ljmp
push
test
inc
addr16
sahf
xchg
div
cmpsl
push
push
sbb
out
jmp
cmp
push
xorl
lret
js
dec
sub
stos
repz
cli
xchg
repnz
ret
or
cmp
sbb
call
inc
push
fmulp
gs
das
xchg
xchg
sbb
mov
lea
aas
adc
lods
aam
cmp
mov
push
ljmp
push
pop
add
pop
inc
inc
dec
mov
jg
cmpsl
cs
test
cmp
cmp
hlt
pop
sahf
daa
imul
test
in
push
out
dec
jle
inc
shlb
shrl
lcall
cwtl
aaa
jne,pt
cs
mov
dec
daa
and
fistps
loope
ficoml
sbbl
test
add
imul
inc
sbb
and
push
xchg
mov
sbb
pop
hlt
push
inc
clc
loopne
cmp
sub
loope
or
push
bound
mov
cmc
imul
xor
xor
jl
pop
jnp
into
cmp
in
ss
fwait
sbb
dec
dec
inc
mov
sbb
lcall
test
pop
add
jl
cmp
testl
stos
jle
sub
cli
push
dec
adc
adc
stos
xor
pop
sub
push
xor
inc
or
loopne
push
jnp
cltd
jmp
push
mov
adc
lcall
cmp
push
mov
jno
xchg
hlt
sbb
mov
lret
pusha
xchg
push
xchg
int
dec
jmp
push
gs
test
push
sbb
repnz
mov
xor
aam
lods
aas
mov
jnp
test
cmp
sub
xchg
jno
mov
pop
test
and
mov
or
or
mov
stos
or
fiaddl
icebp
cmp
mov
jne
fstps
repnz
stos
add
add
outsl
shl
fcmovnb
fsts
add
push
outsb
jmp
test
mov
call
mov
gs
leave
pop
aas
xor
adc
jb
cmp
fs
ffreep
xor
cmp
mov
push
sub
add
and
movsb
les
popf
push
or
mov
inc
pusha
dec
sbb
xchg
ret
ds
aas
jmp
mov
fisubrl
dec
pop
lea
pop
cmp
add
dec
jmp
dec
adc
orps
jle
out
shrl
mov
rorb
addr16
in
xor
shlb
repnz
xchg
sbb
in
notb
test
dec
inc
cld
dec
daa
fdivr
inc
adc
lret
mov
out
pop
push
jmp
mov
stos
into
mov
divb
cmpl
mov
mov
mov
dec
or
mov
sbb
fcmovnu
in
test
adc
fs
popa
pop
mov
push
fs
jmp
and
addr16
outsb
sub
mov
stos
fimuls
xor
xlat
xor
rcll
push
push
insb
inc
jo
or
outsb
or
xchg
fmuls
cs
xchg
test
pop
dec
add
adc
push
inc
ficomps
test
out
push
sub
es
rorl
inc
sub
push
test
sahf
in
cli
popf
xchg
pop
das
dec
jmp
lret
jmp
mov
mov
push
cltd
jns
inc
cltd
mov
mov
bswap
push
aas
jmp
fcoml
cmp
idiv
lods
int3
ss
push
push
sbb
shll
jp
cmp
imul
mov
clc
in
orb
adc
in
js
jp
jns
les
inc
movsb
in
aaa
dec
cmc
cmpsb
pop
je
inc
jno
js
into
adc
cmp
lea
sbb
rolb
and
and
mov
cmp
mov
lods
cs
ret
mov
inc
pop
repnz
xchg
aaa
lods
cmpsb
dec
rorl
std
xchg
insl
dec
test
sub
outsl
test
xlat
mov
subb
aas
bound
pop
icebp
and
mov
mov
xchg
cmp
xchg
push
dec
lods
sbb
mov
mov
dec
ficoml
pusha
pop
ret
adc
mov
dec
sub
shrb
das
mov
pushf
clc
in
mov
shrl
bound
inc
popa
bound
jmp
jo
push
cmc
pop
sbb
shl
jl
xchg
xor
xchg
cmp
flds
xchg
rcll
mov
cli
mov
adc
jp
jno
mov
xchg
lods
stos
call
push
cmp
jae
repz
jns
lahf
cmp
inc
int
lahf
jae
mov
push
xchg
enter
ret
stos
jmp
or
and
lahf
push
les
mov
rcll
lret
mov
iret
cmpsl
xor
out
mov
lods
add
or
je
or
and
into
out
lret
cmp
bound
cmp
inc
scas
mov
imul
jecxz
clc
cmp
inc
push
das
rolb
push
dec
fmulp
push
jp
and
mov
pop
iret
arpl
ret
add
mov
pushf
icebp
xchg
xor
xor
push
mov
daa
push
stos
bound
idivl
int3
push
test
mov
nop
push
mov
add
xlat
jmp
mov
leave
test
mov
mov
xor
or
adc
mov
adc
push
cltd
rcll
mov
test
mov
out
push
pop
xor
dec
stos
call
pop
mul
clc
pop
push
imul
das
inc
sub
fwait
cli
fs
es
rcll
sub
cmp
inc
dec
fadds
or
inc
aam
and
mov
scas
inc
push
adc
inc
push
scas
and
mov
mov
pop
jg
xchg
into
xchg
mov
pop
rcl
jecxz
data16
mov
cwtl
cli
les
je
mov
jae
movsb
mov
mov
out
shrl
sbb
mov
pop
outsb
movsb
dec
rsm
cmpsb
outsl
sti
dec
and
dec
mov
xchg
mov
aaa
cmp
xchg
sbb
mov
out
shl
or
dec
gs
push
pop
mov
fisubs
scas
cmpsb
sbb
fidivs
imul
push
mov
pop
mov
jmp
mov
sbb
fstps
adc
pop
or
cmpsb
mov
push
lock
pop
sbb
dec
mov
sbb
xlat
and
aam
mov
mov
dec
pushf
pushf
or
fidivrs
movsl
fnstenv
enter
xchg
cmpsb
pop
out
lods
pop
mov
pop
lock
jge
xchg
stos
cli
in
dec
mov
push
mov
enter
bound
test
aas
shl
shr
outsb
idivb
and
js
neg
xor
dec
repnz
fnstenv
je
cmp
sub
jne
ljmp
push
insb
add
popa
pop
lock
repnz
out
imul
dec
cli
xor
mov
jecxz
movb
jmp
ljmp
fldcw
pop
jnp
or
mov
sub
mov
cmc
mov
sub
repz
hlt
mov
add
and
clc
sub
dec
into
push
in
mov
lds
mov
loope
mov
mov
iret
iret
daa
mov
cmp
push
daa
jae
xchg
dec
call
imul
loop
insl
pop
ss
mov
sub
mov
xchg
push
adc
xor
xor
aam
push
and
jl
mov
gs
sbbb
lret
dec
notl
adc
cld
adc
andb
push
jne
mov
addr16
pop
or
std
jg
cltd
mov
shlb
jne
cltd
pop
scas
pop
xchg
push
lcall
stos
jno
xchg
shrl
push
mov
push
ret
in
mov
repnz
fwait
pop
fcomps
aad
jmp
scas
inc
and
popa
call
mov
xchg
repz
les
mov
imul
jo
inc
out
mov
add
insl
imul
sbb
fldt
imul
or
call
sub
das
icebp
jnp
add
sbb
push
les
or
or
gs
aad
push
mov
jp
xchg
mov
push
or
push
adc
stc
cld
push
in
arpl
cmp
mov
and
gs
icebp
int3
cmp
sar
inc
push
mov
insb
icebp
int
xchg
cld
pop
loop
inc
cwtl
scas
sti
pop
push
mov
std
movsl
adc
popa
ret
pushf
leave
pop
cmpl
icebp
cli
std
idiv
mov
sub
scas
push
dec
mov
xor
out
adc
out
mov
push
inc
pushf
mov
push
and
insb
out
add
movsb
mov
sbb
mov
sarl
ret
repnz
stos
shlb
mov
cmpsl
aam
add
jns
rcr
rolb
adcb
idivl
and
xchg
lock
xor
inc
icebp
sbb
pop
inc
out
mov
stc
push
xor
or
fistl
cmpsl
enter
jge
shrl
fs
xchg
out
dec
out
cmpsl
aaa
aam
jo
mov
pop
xchg
or
dec
push
push
insl
and
adcb
bound
rclb
inc
and
into
xor
add
inc
roll
sti
aas
outsb
lock
pop
scas
popf
xor
xchg
int3
inc
or
jp
cmp
push
repz
rcll
fsubs
jno
mov
imul
dec
jmp
lret
xor
jp
xchg
out
pop
or
lods
cmpsl
lods
mov
loope
fimull
push
outsb
ja
mov
addr16
jbe
out
sub
cmp
adc
xchg
ja
adc
xchg
int3
out
adc
and
cmp
xlat
mov
imul
mov
sahf
in
cs
push
pop
ret
lock
xor
mov
pop
xor
sbb
clc
sbb
xchg
call
insl
flds
or
loope
and
jnp
bound
or
repz
scas
and
dec
out
fcoms
pop
jns
xchg
or
or
cmp
aam
sti
arpl
repz
jecxz
add
sbb
addr16
popa
test
xor
in
enter
push
inc
push
jmp
push
jo
fs
test
adc
in
sarl
or
movsb
pop
add
and
fwait
cwtl
pop
mov
ja
xchg
jb
xchg
adc
inc
xor
movb
xor
scas
jne,pt
outsl
mov
mov
mov
xor
jno
aad
push
fdivrs
inc
adc
inc
fwait
mov
lods
out
sbb
test
aam
inc
in
inc
push
cmp
arpl
and
dec
cmpsl
fisubrs
jne
dec
sbb
std
push
lods
js
popl
arpl
inc
sub
inc
shlb
sarb
xchg
push
es
jmp
insl
push
loopne
jmp
lcall
ret
in
inc
scas
adc
sbb
push
adcl
push
rcrl
mov
mov
pushf
push
cmpsb
ds
popa
fs
adc
insb
stos
inc
cmp
xor
cmp
enter
adc
add
cmp
jge
pop
push
pusha
imul
lret
test
xorb
arpl
adc
dec
mov
fnstcw
jmp
mov
insb
movsl
jne
shlb
subb
xchg
out
fcmovb
mov
jno
lds
loop
sbb
ficomps
mov
cmc
fists
sbb
push
xor
push
arpl
stos
out
decl
fstpt
pusha
mov
adc
leave
xor
icebp
cmpsb
adc
push
negl
and
js
test
add
bound
sbb
test
insl
in
sub
cwtl
add
sbb
add
push
sub
jb
jp
and
sbb
sbb
std
push
jmp
xor
call
fisubs
adc
out
or
enter
push
xlat
scas
pop
xchg
mov
add
xlat
mov
cmp
insl
into
leave
inc
push
rcr
mov
jo
cmp
sbb
mov
andl
pop
jp
into
int
loope
jl
mov
mov
xor
rcr
bound
out
enter
inc
mov
jmp
cmp
leave
add
mov
dec
test
pop
xorl
shrb
cli
or
mov
and
loope
xchg
push
divb
test
popf
pop
dec
push
je
inc
pop
mov
mov
push
sbb
and
cmp
sbb
test
pushf
jae
and
loopne
jecxz
inc
aad
call
mov
or
pushf
or
jge
popf
and
mov
add
addb
pusha
cmp
ficomps
shlb
lods
xor
adc
mov
xor
test
inc
es
inc
leave
add
fnstsw
dec
push
sbb
cmp
xor
ss
repz
addb
add
pop
scas
xor
xlat
in
pop
or
add
dec
outsb
push
push
cmpsb
int
leave
icebp
or
fs
add
dec
dec
cltd
xchg
ja
out
cmp
pusha
sub
int3
and
movsb
mov
jns
dec
fs
push
subb
loopne
lock
sbb
int3
jnp
arpl
lahf
std
and
cmpsl
jmp
das
inc
lods
sbb
sub
lcall
lods
or
enter
dec
mov
insb
rcr
adc
test
gs
jae
xchg
sbb
into
sub
mov
in
mov
cmp
ja
sub
or
ret
cli
fnstsw
pop
xchg
cmpsb
popf
fwait
movsb
insl
mov
lds
pop
or
aaa
stos
fwait
insb
jo
push
cmovno
mov
push
popa
loope
sahf
fstl
jne
pop
mov
xchg
cld
cltd
mov
xchg
ret
mov
js
dec
adc
fstpl
or
daa
popf
notl
cli
pop
out
or
imul
jmp
js
xor
or
enter
inc
inc
mov
mov
dec
and
mov
inc
add
sbbl
adc
jne
mov
mov
sub
or
adc
mov
adc
fdivrl
rcl
and
jle
fsub
xchg
mov
adc
jecxz
loope
jmp
pop
shrb
jecxz
ret
lret
xor
mov
lahf
cmp
rolb
addr16
into
xchg
add
adc
aad
and
xor
mov
push
sahf
sahf
dec
or
add
int
cmp
sub
sbb
push
mov
mov
lahf
sub
xchg
jp
mov
pop
data16
pop
inc
addr16
mov
push
push
ret
cmp
sbb
mov
imul
cmp
cwtl
xor
push
jb
mov
dec
xchg
jg
cli
je
cmp
into
and
les
into
outsb
mov
shl
xchg
sbb
loop
add
lret
out
movsb
js
mov
dec
rcl
stos
or
rorl
out
shrl
jae
outsl
mov
cltd
mov
sub
fiaddl
mov
nop
sahf
sbb
or
push
imul
and
cmp
xor
mov
cltd
xchg
adc
mov
jb
push
sub
sar
lret
sti
jmp
test
push
rcrl
xor
pusha
out
and
inc
fmull
jmp
adcl
mov
es
jbe
bound
adc
inc
add
cmp
ja
cmp
cld
into
cmp
xor
push
mov
test
ja
sbb
add
lock
pop
shrl
mov
loop
sarl
testl
lret
mov
xchg
cmc
jbe
pop
dec
stos
jb
ja
sub
add
nop
jb
jmp
xor
mov
fcomi
popa
push
jl
jb
fs
push
scas
sbb
mov
dec
and
pop
add
inc
jg
jne
jno
gs
sub
jmp
ret
lcall
mov
xchg
arpl
add
rclb
repnz
jecxz
push
and
aam
jge
testl
sarb
in
cmc
aaa
push
call
inc
movsl
call
aam
ss
pop
scas
stc
rclb
bound
dec
cld
pop
test
mov
mov
jno
inc
push
mov
xchg
cmp
lret
dec
loopne
adc
test
xor
jae
sbb
lret
in
xor
push
cwtl
ret
ret
adc
out
out
push
pop
lock
jbe
push
and
xlat
cmp
mov
insl
and
pop
int
imul
es
add
push
faddl
lods
mov
or
pop
and
xacquire
pop
dec
movsl
xchg
xchg
ret
enter
mov
mov
mov
out
fwait
dec
loope
mov
mov
in
fidivrl
sub
xor
push
or
sub
cmp
mov
aaa
adc
adc
adc
jle
and
bound
inc
pop
fmul
ret
mov
imul
testl
popf
xlat
xchg
ja
pusha
mov
repz
mov
imul
fisttps
ficompl
fwait
mov
and
mov
popa
sahf
pop
hlt
icebp
jmp
cs
dec
sarb
jle,pt
and
cwtl
jb
or
jbe
push
nop
lret
int
xchg
xor
inc
int
add
push
stc
in
inc
loope
scas
add
cmc
push
daa
dec
xchg
adc
cmp
sub
push
aad
and
cmp
cwtl
mov
les
push
ficomps
dec
xlat
fidivrs
enter
push
xor
or
dec
test
sub
pop
jge
mov
mov
loop
sahf
inc
pop
jge
lock
les
push
js
nop
out
pop
jge
in
aas
lea
and
sub
repnz
iret
push
lcall
repz
mov
lret
cs
dec
push
pop
shl
nop
mov
inc
insl
cs
ja
pop
sbb
shl
mov
es
dec
push
sub
push
setb
stos
inc
pop
jp
sbb
jecxz
or
call
fadds
and
movsl
mov
out
nop
ljmp
daa
pop
dec
adc
add
push
and
fcomi
xchg
adc
or
add
lea
testb
cmp
call
and
cs
sbb
inc
arpl
cmpb
mov
popa
sub
lods
sti
inc
inc
and
jge
dec
jb
cld
imul
sub
pop
out
fwait
jbe
sub
jne
mov
mov
mov
lods
cltd
std
dec
or
imul
jne
cwtl
xchg
jne
cmpsb
xchg
add
aam
subb
jp
loopne
push
bound
std
mov
psraw
jns
or
in
jo
push
in
ss
and
pop
fs
dec
add
push
mov
icebp
fdivl
dec
xor
jmp
mov
xchg
decb
in
loopne
mov
enter
sti
sbb
push
and
mov
sub
jle
xchg
aad
add
xchg
push
scas
inc
mov
nop
xchg
sahf
sbb
jno
es
lds
mov
out
cmp
xor
jle
dec
insb
addr16
mov
iret
ljmp
and
sub
je
or
jne
pop
pop
dec
nop
lods
stos
pushf
push
push
mov
push
push
call
sti
fildl
fistpll
jo
aas
adc
dec
mov
xchg
xor
jmp
je
jle
int3
or
add
movsb
jg
rorl
int3
mov
adc
shl
xor
stos
pop
dec
std
std
mov
bound
mov
mov
mov
xchg
and
mov
jle
movsl
repnz
in
xchg
adc
pusha
mov
dec
in
test
sahf
lds
pop
jne
loope
and
sbbb
aas
xchg
aaa
imul
fisubrl
rcr
push
add
out
and
add
cltd
unpcklps
in
inc
xor
ret
xchg
fs
test
lods
sub
sbb
mov
ja
adc
sbb
pushf
in
out
xor
push
xchg
push
in
jns
in
cmp
cmp
cmpl
inc
aam
jnp
and
pop
sub
push
pushf
cwtl
jp
xor
out
jmp
xor
int3
loope
xlat
pop
mov
pop
daa
mov
popa
xchg
and
dec
or
ret
cmp
add
mov
call
jno
pop
es
pop
jge
roll
xchg
rcrl
jecxz
mov
push
rorb
loope
arpl
inc
pop
loop
mov
mov
inc
lahf
mov
mov
fsubrp
cmp
ret
add
add
push
or
mov
pop
push
and
in
cwtl
xchg
mov
int3
loop
inc
mov
mov
dec
mov
hlt
xlat
mov
jge
scas
cmpsl
mov
incl
gs
dec
ja
jmp
rorb
les
jecxz
imul
jmp
pop
jns
mov
push
push
js
pop
or
xchg
mov
stc
jp
inc
shrl
push
insb
mov
xor
std
shl
push
adc
jecxz
jmp
sbb
outsl
add
addl
insb
dec
pop
fmull
dec
enter
sbb
out
push
out
inc
xorb
mov
sub
test
cmp
add
jp
pop
mov
int3
mov
pop
stos
push
lret
pop
insb
pop
or
es
sub
movsb
inc
js
fcmovne
jbe
icebp
loop
das
sahf
mov
jg
or
inc
rcrl
scas
stos
mov
lret
fisubs
insl
aam
jge
xchg
add
arpl
imul
push
jb
call
cmp
pop
aad
mov
dec
add
jae
inc
push
call
loope
arpl
rolb
mov
mov
pop
adc
mov
lcall
inc
xor
loopne
xor
xchg
xor
hlt
call
test
pop
mov
adc
mov
lea
jbe,pt
sbb
ret
push
and
sbb
movsb
inc
sti
cmp
daa
loope
orb
cmc
mov
jbe
lds
mov
xchg
bound
loope
jno
in
jno
dec
movhlps
pop
lcall
or
add
jp
dec
add
loope
int3
inc
sbb
cmp
dec
mov
mov
push
fwait
inc
mov
mov
push
add
mov
xchg
pop
mov
sub
mov
push
add
popf
ljmp
sub
sbb
addr16
jle
movsb
cmc
cwtl
out
cld
cmp
ss
jno
dec
pop
lods
loope
cmp
xchg
mov
xchg
add
mov
sbb
lds
cmp
xor
nop
shll
jne
mov
mov
cmp
xchg
push
mov
pop
add
push
sub
push
mov
sub
pop
adc
lods
push
adc
mov
andl
loopne
push
stos
and
das
mov
lahf
xchg
les
loopne
mov
stos
mov
xor
or
nop
iret
dec
dec
outsb
cmp
cltd
ret
xor
inc
in
mov
push
push
out
inc
cmp
and
jbe
ret
test
mov
mov
or
popf
pop
adc
popa
fbld
jbe
push
pop
adc
in
addb
push
mov
les
dec
sub
insl
adc
mov
enter
pop
add
sbb
push
into
mov
pop
lret
inc
lret
fwait
sbb
and
out
andl
jmp
mov
or
mov
mov
sbbl
jbe
add
pop
xchg
pop
mov
add
xchg
gs
jp
decl
add
mov
add
xchg
jns
hlt
gs
xchg
shll
in
shlb
fldlg2
mov
lods
pushf
mov
adc
mov
push
jns
sub
in
inc
adc
cltd
lret
repz
sbb
push
das
test
xchg
sub
gs
dec
lods
adc
cltd
repz
push
jno
xor
lods
scas
outsb
push
cs
xorb
dec
inc
shlb
xor
test
loopne
orb
adc
xchg
fldcw
lea
add
data16
fldt
sub
mov
and
inc
es
aas
adc
orb
hlt
gs
mov
push
jo
rcl
add
das
popf
sbb
lock
cmpl
mov
mov
fs
and
aam
push
cld
fisubs
xchg
mov
fiadds
ja
sub
cld
mov
sbb
dec
xchg
sbb
sub
iret
movsl
scas
cmp
decl
pop
push
ljmp
mov
faddl
ret
ja
pop
in
mov
rolb
sar
mov
mov
xchg
xor
mov
pusha
iret
lret
out
inc
jno
test
stos
and
mov
gs
cmp
push
jae
cs
dec
mov
aas
cmpsb
xor
cmc
mov
pushf
shlb
stc
imul
push
push
mov
idivb
or
push
lahf
scas
cmp
push
scas
and
addr16
clc
movb
pusha
outsl
sbb
jb
out
push
inc
mov
movsl
fiadds
repnz
dec
add
or
jno
mov
movsl
shl
jle,pn
jmp
fsub
je
icebp
imul
lea
rcrl
jnp
ss
inc
push
add
jecxz
outsb
rcrl
loopne
pushf
mov
dec
xor
pop
in
lock
enter
pop
dec
mov
jns
or
jle
into
lods
cmp
out
pop
and
mov
xchg
pop
jno
xchg
insb
adc
dec
lret
mov
test
jmp
popf
gs
fcmovbe
xor
out
cld
lods
sbb
jg
pop
jecxz
ret
das
testl
lcall
mul
fwait
push
mov
xchg
movsl
rol
xchg
std
adc
cmpsl
xchg
popa
andl
cwtl
cmp
std
scas
or
lret
adc
loop
xor
in
ret
pop
mov
inc
jno
dec
cmp
add
mov
ret
inc
mov
inc
jmp
out
fidivl
nop
dec
cmp
insl
faddl
xor
mov
hlt
jbe
mov
ja
pop
cltd
imul
lock
mov
lret
jmp
gs
add
data16
das
loopne
jge
pop
add
bound
mov
jae
sub
test
xchg
rclb
fbstp
cld
and
stc
jmp
sbb
cmpsl
dec
loop
mov
sti
daa
lock
in
mov
fwait
es
scas
clc
fisubs
sbb
mov
push
aam
add
jns
sbb
dec
popf
das
add
mov
fldcw
sub
fadd
lret
cmp
lret
jne
das
ret
or
je
ret
das
adc
mov
out
fucomp
mov
pop
xor
mov
xor
out
rol
scas
shrl
fwait
stos
lret
dec
dec
imul
dec
pusha
jp
push
mov
push
leave
andb
adc
mov
les
add
add
pop
adc
xchg
hlt
bound
push
sbb
and
adc
add
shrl
hlt
aas
and
in
cmp
std
in
push
ret
or
add
inc
test
out
cwtl
cmpsb
xor
inc
ret
cmp
sbb
fcomi
mov
mov
push
jo
dec
dec
pop
or
lods
popf
cmp
inc
dec
inc
mov
jne
cmc
cli
cltd
or
xchg
mov
xchg
imul
dec
mov
inc
cmp
mov
pop
lods
push
pop
jg
iret
xchg
out
inc
jo
popf
mov
and
xchg
pop
lahf
or
xchg
add
mov
aad
adc
mov
mov
test
jnp
mov
pop
out
xchg
ret
data16
pop
ds
out
lea
mov
mov
mov
fcmove
cld
int
push
sub
jge
xchg
inc
outsb
jmp
rcrb
jnp
arpl
jbe
fbstp
clc
out
clc
test
cmp
pop
jno
add
les
loop
push
mov
sub
ss
mov
xchg
pushf
xchg
pop
jg
cs
aad
cmc
imul
pop
or
sub
adc
adc
and
xchg
jp
pop
xor
ror
inc
bound
arpl
mov
sbb
bound
mov
stos
aas
pop
mov
neg
dec
out
lcall
aas
inc
mov
add
xchg
mov
xchg
cld
scas
aad
mov
lods
sub
sbb
add
loope
lret
out
xor
mov
int
stc
xchg
pop
cmpb
ljmp
bound
mov
xlat
push
lahf
jecxz
mov
movsb
add
rcll
sbb
sarb
dec
or
dec
xchg
pop
mov
mov
popf
or
mov
pushf
xor
push
cmp
jb
das
push
add
jbe
daa
xchg
faddl
sbb
test
pop
out
lods
in
sub
out
and
cs
fildll
les
cmp
jnp
or
repnz
fcompl
fidivs
mov
or
sub
gs
insl
mov
leave
call
leave
movsl
cmpsl
mov
dec
cmc
test
jmp
adc
leave
adc
clc
mov
int3
adc
inc
in
out
jbe
mov
xchg
popl
push
loopne
lods
std
test
sub
cltd
sahf
mov
xchg
addr16
pop
mov
xchg
incl
mov
sbb
cmp
les
adc
inc
stos
push
jge
loop
sahf
push
iret
jnp
in
test
cmc
inc
in
jp
mov
adc
push
lods
mov
adc
fs
fndisi(8087
xchg
outsb
pop
es
pop
jno
xor
jne
js
sub
sbb
xor
xchg
jl
cli
sub
mov
jno
push
pop
xchg
mov
loop
mov
int
push
adc
jns
sahf
jecxz
xchg
out
int3
leavew
enter
in
lret
aaa
lahf
mov
xchg
popa
cmp
rcll
fistl
xchg
dec
mov
jo
add
fmul
ret
pop
mov
and
push
adc
xchg
mov
jno
jne
cli
xor
in
add
insb
cltd
call
mov
aas
ss
push
jb
call
bound
dec
out
mov
and
loope
sub
sbb
aas
pop
out
fs
repz
dec
mov
inc
lods
push
mov
nop
lret
fsubr
inc
imul
aaa
mov
loop
xchg
inc
cmp
movsl
sub
jb
sub
stos
rcrl
jb
adc
or
mov
into
dec
orl
addr16
insb
xchg
cwtl
mov
mov
and
push
ljmp
xor
movsl
inc
nop
std
mov
out
test
xor
hlt
jmp
push
mov
lcall
pop
cmpsl
int
sub
push
jae
in
fs
jmp
sbb
ss
mov
in
or
xor
push
mov
icebp
cmpsl
aad
jge
jg
xor
stc
repnz
repnz
insb
jp
in
sub
push
lahf
jmp
int
sti
pusha
punpckhwd
xchg
or
addr16
cltd
xor
out
fidivl
jmp
fisttpll
ror
pop
fldcw
mov
push
or
jecxz
jno
adc
dec
push
mov
bound
scas
lea
mov
out
pop
jno
fnsave
pop
inc
cs
arpl
xchg
xor
cmpsl
mov
push
mov
jg
movsl
and
xchg
mov
lahf
push
dec
mov
inc
jp
mov
ljmp
fcompl
cmp
xchg
mov
sbb
lcall
dec
hlt
sbb
shll
std
jno
push
outsl
add
or
daa
fcomps
push
repnz
je
push
in
daa
rcrl
lods
das
notl
cwtl
xchg
push
xor
push
pop
cmpsb
xchg
inc
les
insl
pusha
sbb
mov
dec
mov
pop
test
mov
ret
js
enter
xchg
xchg
xchg
fsub
pusha
lret
push
push
les
iret
mov
sub
mov
cltd
rcll
adc
add
pop
testb
pop
js
sbb
jnp
shlb
sub
push
std
mov
mov
rcrl
rclb
popf
fdivrl
cli
cmp
mov
movsb
cli
pushl
jne
into
sbb
mov
sbb
inc
mov
cltd
clc
cmpsb
pop
dec
jmp
pop
icebp
inc
pop
imul
cmpsl
cmc
cmp
add
gs
sahf
inc
cmc
dec
xor
lahf
xchg
mov
jl
outsb
f2xm1
push
lret
in
cmp
xor
sub
mov
adc
dec
xchg
pop
cmp
jg
xchg
sub
test
daa
or
iret
repz
cmp
jb
cmp
push
repnz
push
mov
mov
in
subl
addr16
imul
test
idivb
fbld
call
pop
xchg
das
jp
pop
xchg
movsl
inc
sub
push
and
xor
inc
notb
cltd
shrb
sbb
shrl
sub
cmpsb
fwait
int3
pop
icebp
lea
mov
fiadds
push
loopne
sbb
and
xchg
sub
ja
inc
jns
in
testb
in
push
mov
mov
hlt
inc
ss
pop
adc
aad
into
push
jp
and
mov
loopne
xchg
int
jp
fbld
ljmp
cli
sub
pop
loop
popf
adc
mov
in
inc
mov
les
push
jg
gs
dec
decb
push
shrb
pop
scas
aaa
inc
repz
pop
inc
mov
roll
shrl
dec
cs
enter
sub
bound
stos
xchg
imul
dec
add
lcall
rorl
inc
jp
pop
cld
cmp
push
mov
lahf
inc
call
dec
mov
rcll
daa
dec
push
mov
les
aas
sub
pop
push
cmp
lea
gs
add
aaa
sub
test
out
fs
in
inc
decb
ljmp
xchg
pusha
lcall
jb
xchg
cmp
icebp
sub
jo
dec
in
xchg
or
add
fwait
js
sbb
add
jl
jbe
push
in
cmp
fs
loopne
enter
push
dec
lods
mov
ds
jge
shll
int3
scas
test
cmp
cld
inc
cld
repz
imul
movsb
dec
mov
vandnpd
add
popa
sbb
fnstcw
and
jb
pop
flds
gs
shll
add
pop
outsb
aam
scas
out
test
stos
ss
stos
fs
aam
test
xchg
inc
loope
pop
sbb
or
hlt
mov
jae
movl
mov
insb
adc
push
mov
mov
out
mov
sbb
daa
sbb
mov
cs
clc
out
loop
adc
mov
cmp
xor
mov
add
xchg
mov
mov
repnz
adc
std
sahf
inc
mov
es
cmp
sub
sbb
imulb
lods
in
adc
cmp
mov
cmp
lret
idivl
xlat
mov
into
mov
js
jns
add
cs
inc
sub
mov
mov
push
out
mov
gs
ljmp
pop
shll
hlt
xor
push
mov
push
or
sti
mov
add
lcall
cs
pusha
dec
loopne
xor
inc
add
xor
leave
mov
outsb
in
inc
xor
push
xchg
bound
xor
jecxz
movb
and
sub
andps
dec
dec
inc
adc
dec
mov
outsb
sub
push
cwtl
enter
rcr
inc
into
aad
jmp
inc
mov
xchg
shll
in
pop
mov
ss
jmp
cmp
imul
xor
cltd
ror
leave
aam
rcrl
mov
mov
in
add
push
pop
mov
sub
inc
cmp
pop
std
lods
popf
fsubs
pushf
cmp
shrb
fistpll
inc
sbbl
jbe
or
add
push
adc
movsl
dec
dec
cmp
lret
cltd
dec
pop
inc
inc
movsl
pop
sbb
mov
jo
sbb
dec
mov
pop
mov
or
in
inc
unpcklps
jp
push
jmp
lcall
cmp
cltd
sub
and
pop
xchg
mov
aam
lea
pushf
pop
imul
cli
lods
push
lds
out
pop
shlb
scas
shrl
cld
cmp
mov
inc
sbb
lret
push
or
dec
sub
inc
and
mov
mov
add
mov
xchg
cs
repz
jo
dec
push
inc
adc
cmp
mov
and
cltd
jl
out
leave
xor
pop
cmp
sar
orl
pusha
aas
data16
mov
xchg
cmpsl
out
xor
sbb
outsl
pop
jbe
mov
popf
je
nop
shrd
push
push
xchg
loopne
cmpsb
adc
pop
aaa
mov
push
fisubs
imul
adc
sbb
jp
and
pop
or
test
xchg
jge
cmp
xchg
push
sub
aas
es
inc
cmp
lods
fisubrl
sbb
jb
jno
mov
lret
push
mov
pop
das
daa
xor
addr16
lock
subb
outsb
js
pop
inc
or
inc
int3
inc
xchg
adc
in
jp
fsub
mov
ss
rcrb
adc
add
adc
out
insb
lods
iret
pusha
nop
pop
dec
lea
hlt
and
testb
aam
rcr
ja
enter
lcall
movl
mov
shl
add
std
stc
push
lret
cmp
outsl
daa
sbb
lret
imul
int
cwtl
aam
test
jb
fimuls
outsb
out
loope
out
int3
loop
and
inc
add
mov
and
inc
test
mov
in
inc
rcrb
push
lock
push
lock
mov
xchg
push
add
inc
pxor
icebp
cltd
out
dec
lods
add
pop
loopne
idivl
shl
lds
pop
cwtl
mov
or
mov
or
ret
xchg
js
inc
cmp
cmp
sub
cmpsb
add
or
nop
aaa
test
cld
mov
divl
mov
cmp
out
popf
fyl2xp1
or
or
stos
push
std
add
mov
movaps
mov
cmpl
mov
and
je
jnp
pushf
pop
mov
jmp
insb
imul
or
mov
push
pop
and
popf
mov
xchg
xchg
xchg
or
aaa
adc
arpl
aaa
fsincos
sbb
cli
sub
or
es
add
addr16
andnps
adc
adc
add
jae
mov
mov
es
xor
inc
xchg
xchg
roll
pusha
jns
fildl
mov
jnp
dec
xor
xchg
out
cmp
ljmp
xchg
gs
mov
push
out
xor
dec
mov
icebp
or
sub
cli
mov
adc
mov
inc
insl
inc
push
mov
mov
mov
popf
mov
fcoml
mov
or
gs
and
adc
mov
pop
sti
outsb
lcall
sbb
rorb
sti
inc
fs
cmp
and
pop
xor
scas
sub
ror
xlat
adc
xchg
mov
std
add
ret
pushf
testl
cmpsb
mov
scas
or
dec
add
fucomp
pop
xchg
loope
pop
inc
ss
inc
cmpsb
cwtl
rcl
aad
ss
adcb
cmp
push
aad
jp
sub
push
dec
lahf
push
loope
sub
jbe
shll
das
mov
pusha
test
sbb
fldl
pushf
cmpsb
fisttpl
imul
rorl
loopne
push
xor
ja
shlb
adc
xchg
push
ficomps
mov
popf
dec
mov
cmp
jle
lret
lahf
lea
iret
es
scas
mov
mov
sbb
int
cmp
das
push
hlt
cmp
cmc
push
scas
imul
adc
pusha
push
xor
or
jne
sti
xchg
stos
mov
pop
stc
rol
popa
jecxz
mov
mov
adc
cmpl
stc
sarb
inc
adc
xchg
fsubs
pop
and
sub
jg
cmp
adc
push
je
loop
xor
push
inc
in
testb
or
outsl
sbb
out
or
lret
jle
inc
adcl
inc
mov
out
mov
in
mov
sub
repz
paddq
jno
out
mov
pop
mov
inc
orl
push
outsl
in
insb
inc
inc
mov
inc
icebp
dec
mov
mov
mov
bound
jp
outsb
int
jle
pop
leave
push
fiaddl
pusha
inc
adc
bound
mov
sub
lret
fildl
loopne
sub
dec
sbb
outsb
ds
sbb
stos
xchg
ret
fcompl
into
mov
mov
ja
sbb
mov
jo
pop
cmpsb
loopne
dec
xor
mov
sahf
lds
xor
ret
in
add
ret
or
fisttpll
cld
add
mov
lahf
sub
cmp
push
sbb
mov
pusha
cltd
xchg
xchg
clc
pop
popl
fidivrl
or
insb
fmull
xchg
mov
pop
mov
scas
js
iret
mov
xor
inc
pushf
rcrb
data16
jle
cmpsb
xchg
add
movsl
outsb
outsb
mov
sbb
sti
shl
and
xchg
push
sub
cmc
push
sbb
inc
lcall
ss
adc
and
repz
jecxz
mov
lea
jb
xchg
test
outsb
adc
mov
test
sarb
dec
jo
ret
add
dec
sahf
xchg
pop
testl
fstl
and
les
pop
jecxz
shlb
rclb
test
dec
pop
data16
push
arpl
dec
jo
into
jb
dec
test
leave
ja
je
cmpsb
mov
jp
push
stos
dec
and
jns
jge
inc
cmp
adc
xlat
and
movsb
lahf
push
fdivrl
xchg
mov
adc
xchg
adc
sti
insb
inc
outsb
dec
xor
aad
adc
test
inc
fimull
mov
mov
jg
jp
cmp
add
or
and
scas
jg
frstor
jns
cmp
inc
les
dec
insl
inc
mov
dec
out
push
das
data16
add
stos
mov
cli
lods
jp
enter
mov
sbb
fsave
cmpsl
in
and
insl
lds
les
mov
enter
call
jb
mov
icebp
enter
jns
pop
or
and
xchg
mov
or
pop
lret
stc
daa
pop
decb
arpl
stc
cmp
adc
pushl
push
mov
pop
xor
mov
das
mov
inc
gs
pshufw
clc
cmp
pop
testl
inc
sub
stos
clc
add
xchg
jmp
repnz
xchg
nop
jge
xchg
jne
and
das
imul
lret
mov
fstpt
push
xchg
pop
repnz
repz
mov
pusha
icebp
and
scas
iret
or
aam
xorl
mov
icebp
mov
daa
pop
jnp
fidivrs
xor
scas
push
sub
pop
or
mov
jmp
cs
ret
bnd
jo
addr16
lods
enter
mov
pop
dec
fs
fcoml
mov
out
sbb
sbb
add
xor
mov
or
in
and
aam
xor
psubb
cmc
negb
or
mov
and
mov
inc
pushf
xchg
lahf
add
pop
push
sbb
and
repz
imul
lea
jecxz
cmc
add
sub
adc
out
fwait
lret
cltd
cli
lahf
mov
dec
sub
pop
inc
add
mov
loop
fnstcw
stc
and
call
or
xor
jl
movsb
jno
lock
aaa
cmp
out
xchg
and
sub
jge
jmp
mov
out
xchg
add
mov
mov
dec
fcmovnb
jg
mov
and
sub
sub
aaa
ss
test
stos
jmp
inc
movaps
mov
les
data16
mov
xchg
mov
sbb
cs
xlat
xchg
shl
jno
jnp
insl
xchg
pop
and
sbb
jo
dec
loopne
lods
test
add
cmp
inc
xlat
pop
mov
push
ss
xlat
sub
xchg
jmp
daa
mov
insb
jl
pop
arpl
mov
js
ret
xor
sbb
gs
push
sbb
sarl
sbb
sbb
test
in
adc
push
mov
fs
ret
fmuls
xor
add
xlat
mov
jae
mov
or
stc
cmp
push
push
xlat
mov
sbb
mov
icebp
sub
les
ss
es
iret
outsb
push
jne
hlt
dec
dec
xor
test
push
sbb
mov
dec
pop
mov
test
scas
lock
pop
scas
inc
push
rcll
adc
lret
add
out
sbb
negb
fmuls
repnz
cmp
mov
fs
jg
jp
lahf
js
les
dec
mov
jge
sub
dec
aas
in
jge
jle
xchg
sbb
in
xor
jl
fiadds
inc
push
inc
int3
cmpsb
sbb
ds
iret
or
popf
mov
setns
sarb
nop
pop
mov
js
lods
xor
test
loope
sub
or
cmc
add
mov
cmp
jle
les
ss
cs
adc
nop
iret
jge
ficoml
arpl
les
jmp
push
inc
xchg
popf
bound
cli
aaa
push
cmp
mov
jne
fisubrl
sbb
addr16
dec
out
push
loop
mov
cmc
push
pushf
jo
testl
sbb
dec
ja
lock
sub
jg
lock
mov
and
jae
push
cs
add
sar
idivl
loop
mov
and
jmp
xchg
aam
jae
dec
mov
jne
negl
insb
dec
sti
xor
loopne
xchg
sarb
pop
imul
into
mov
movsb
das
ds
test
adc
lahf
xlat
xlat
mov
hlt
cmp
scas
outsb
xchg
lahf
xor
mov
and
jne
popa
add
lret
ss
std
adcb
cmpsb
sbb
aas
push
mov
jae
popa
push
test
xchg
mov
stc
stos
jbe
and
outsb
and
aaa
adc
cld
imul
mov
frstor
cwtl
test
lea
movsb
and
dec
lock
and
int
or
enter
stc
out
bound
mov
leave
in
les
bound
inc
mov
jae
jmp
lahf
scas
push
fstps
jecxz
ficoml
sub
lcall
lret
adc
dec
mov
and
jp
sbb
jne
iret
xchg
and
dec
sub
lahf
or
out
jle
aam
aad
lahf
cltd
cmp
xchg
pop
lods
push
cmp
ret
xchg
out
jae
mov
loope
dec
push
lret
push
cwtl
cltd
shrl
mov
xor
daa
cmp
scas
stc
and
test
inc
sub
nop
out
lcall
sbb
xor
call
jle
adc
imul
or
aad
test
imul
mov
mov
iret
dec
out
adc
sbbw
xchg
fbstp
rorl
dec
adc
jo
or
mov
mov
pop
and
dec
push
dec
jmp
pop
mov
repnz
cmpsb
imul
lods
lret
rolb
lahf
dec
scas
or
dec
sbb
outsb
imul
inc
mov
add
inc
xchg
sub
pop
sub
mov
outsl
aas
movsl
mov
pushf
rclb
inc
repz
jecxz
pop
and
fdiv
push
xchg
xchg
aam
cld
sub
popa
aad
mov
dec
fcomi
rorb
cmp
jl
cmp
xlat
ret
aam
xor
imull
or
and
or
aas
add
add
sbb
and
cwtl
and
pop
std
jp
aad
testb
dec
fidivs
inc
sbb
popa
mov
cmpsl
sbb
inc
mov
sbb
sub
scas
inc
imul
sbb
lock
push
inc
out
sub
js
std
icebp
mov
push
std
leave
jb
pusha
daa
pcmpeqb
push
popa
add
mov
movsl
fnstenv
xor
xor
pop
rcl
loopne
cmp
fstpt
cwtl
mov
adc
loope
jno
add
inc
test
pop
jmp
fldt
sub
cmp
insb
xor
xchg
data16
fbstp
jno
mov
sub
inc
xor
inc
hlt
cld
inc
mov
bound
pop
std
mov
sahf
and
faddl
sub
adc
xchg
frstpm(287
inc
sahf
js
int
adc
and
pop
test
or
pop
nop
cmpsl
mov
xchg
or
dec
push
outsl
imul
push
in
fldcw
mov
stos
arpl
mov
fstpt
sub
push
dec
int3
cmc
push
sub
cmp
shrb
adc
xlat
mov
lahf
adc
push
sub
aas
imul
aaa
cmpsb
sti
lock
lods
pop
mov
pop
push
jns
aaa
scas
dec
push
stos
sub
xor
inc
addr16
add
sub
add
inc
inc
push
and
sbb
in
sahf
es
ds
pushf
sub
int
in
sbb
push
repz
lods
arpl
mov
adc
jno
xor
dec
test
dec
daa
lret
mov
mov
sub
fistps
xor
test
mov
sub
or
xchg
jo
push
push
clc
xor
notb
ret
xor
xchg
repnz
addb
xchg
loop
cmp
or
and
sub
fldt
aad
popf
inc
sbb
rolb
jb
leave
cmc
pop
adc
xchg
or
xor
mov
mov
add
fdivs
xor
shl
dec
mov
xchg
icebp
add
inc
jle
mov
xchg
pop
cmp
fcoms
sub
out
ja
jmp
daa
xchg
jg
jno
iret
pop
lds
fdivl
and
dec
stc
cli
in
and
push
out
add
sub
jne
dec
push
shl
mov
sub
das
xchg
out
and
mov
cmc
pop
and
xchg
fwait
and
xchg
aaa
ror
mov
ror
mov
inc
xor
inc
pusha
mov
cmpsb
push
mov
xchg
xor
nop
loope
js
add
mov
xor
jae
rcl
and
cmp
jae
mov
pop
add
fwait
les
pop
aas
mov
imul
or
aas
mov
pop
mov
xor
jb
mov
gs
pop
test
xchg
dec
imul
popf
mov
std
adc
cmp
out
xor
fildl
mov
test
js
xchg
adc
aad
fidivs
and
jno
sti
pop
sbb
cmc
jmp
pop
xchg
lods
mov
fcomi
decl
cmp
mov
mov
cmp
xchg
or
loope
mov
syscall
gs
and
cs
mov
jb
xor
add
lea
mov
or
adc
shl
jno
adc
std
nop
inc
jbe
mov
repnz
mov
pusha
test
test
ljmp
jbe
push
add
push
call
or
repnz
xor
cs
insb
shrb
mov
in
arpl
jmp
enter
mov
addr16
mov
mov
cmp
into
cmc
loope
fsubr
lods
out
jge
mov
sbb
pop
mov
xchg
mov
aaa
loope
ret
sbb
stos
xchg
dec
mov
dec
test
and
xchg
loop
rcrb
adc
dec
and
xor
dec
fwait
repnz
idivb
std
mov
cmp
jno
add
mov
push
push
movsl
cld
pop
xchg
fs
fistps
xchg
inc
imul
jl
mov
xchg
push
add
das
subl
cs
pushf
in
adc
pusha
pop
sbb
mov
jecxz
std
stc
or
popf
pop
push
cmpsb
pop
sub
ret
jno
movsb
ret
lret
mov
fldt
dec
cld
xchg
sbb
inc
sub
mov
and
xchg
mov
das
jecxz
arpl
jecxz
scas
pop
ljmp
arpl
cmpsb
mov
inc
mov
sub
hlt
mov
loopne
or
iret
push
outsb
daa
bound
push
lahf
fnstsw
ljmp
push
orl
rcrb
dec
and
scas
mov
icebp
inc
outsl
or
nop
pop
dec
sarb
inc
dec
imul
lods
push
je
aas
mov
push
les
jae
stos
jns
jp
pop
mov
sti
cli
and
mov
lds
sub
adc
fwait
cmpsb
mov
or
iret
cli
jle
cmpsb
cmc
sbb
adc
int3
mov
test
sbb
and
out
shll
push
inc
mov
das
in
orb
cmc
cs
div
test
or
aaa
dec
addr16
jbe
xor
cwtl
adc
roll
dec
and
sbb
lret
xchg
dec
cwtl
pushf
add
jae
popa
inc
xchg
jo
loopne
pop
inc
shrb
in
sti
pop
mov
std
xor
cltd
inc
pop
ja
cli
sti
les
adc
add
subb
xor
outsb
loope
loope
imul
fldt
rorb
rclb
ds
movsl
dec
mov
clc
sbb
lahf
jmp
int3
and
rclb
lock
out
fcoms
hlt
out
setne
pop
dec
or
mov
push
mov
cmpsl
adc
leave
push
cmpsl
or
inc
push
icebp
pop
ljmp
sbb
ljmp
and
fabs
lock
ja
mov
lret
xor
cmp
repnz
sub
orl
inc
cmp
push
jae
sbb
in
xchg
jle
inc
pop
in
ret
mov
dec
jnp
sub
inc
and
popa
test
xor
inc
lods
insl
cmpsb
ret
stos
xor
test
add
mov
jge
popf
inc
push
shlb
fwait
shlb
push
fsubrs
sbb
jne
shl
push
mov
cmp
pop
xor
movsb
mov
loop
push
incb
add
jge
mov
add
dec
icebp
dec
movsb
popf
push
fidivrs
xor
or
sub
pop
xchg
xchg
jmp
and
shll
mov
xchg
test
daa
insb
aas
mov
lods
rorb
rorb
inc
xchg
test
jle
inc
add
lock
popa
push
adc
jmp
xor
repnz
pop
xchg
dec
ja
sti
cli
lock
scas
and
lret
dec
ficoml
pop
cmpsb
icebp
dec
pop
pop
lds
enter
jecxz
jmp
sbb
mov
ja
loopne
push
sub
push
icebp
call
fiaddl
std
adc
add
adc
push
mov
js
ja
repz
mov
lahf
shrb
add
pop
inc
push
gs
adc
mov
addr16
popf
fldenv
xor
stos
push
sub
incb
scas
push
fcmovnb
push
sbb
sbb
imull
mov
mov
dec
rolb
and
sub
stc
cmpsb
xchg
repnz
pop
in
mov
push
in
and
mov
or
cmpsb
or
mov
mov
test
mov
iret
adc
xchg
shll
lahf
es
sub
xchg
adc
inc
cmp
dec
xor
outsl
movsb
aaa
jl
mov
popa
pop
dec
jl
inc
movsl
adc
jno
test
mov
push
pop
or
daa
insb
cmp
inc
repz
subl
push
push
jmp
divl
inc
jae
jo
sub
jmp
repz
inc
bound
arpl
incb
xor
rorl
xchg
lcall
push
outsl
cmpsb
push
push
out
scas
ja
push
jo
aas
add
and
jp
mov
dec
rolb
xor
push
loop
dec
xorb
inc
cld
rcrb
push
scas
sub
dec
imull
lods
lcall
cld
or
xchg
or
in
jl
stos
mov
aam
lods
add
pop
adc
mov
lods
push
lret
mov
push
add
js
pusha
mov
push
push
jge
dec
cwtl
jmp
test
xor
jbe
test
and
pop
jns
das
push
mov
mov
pop
dec
xor
dec
cltd
cmp
das
mov
mov
stos
clc
pop
push
xor
lret
aad
inc
je
mov
mov
repz
mov
cmp
mov
andb
add
push
xor
or
test
push
test
ja
adc
pop
outsl
jbe
fs
push
and
inc
out
mov
cmp
push
rclb
mov
fxam
js
loope
in
add
mov
dec
add
mov
mov
mov
sub
adc
rorb
shrd
inc
inc
js
dec
ss
cmpsb
pop
andb
sbb
aam
jl
jge
pop
in
pop
rorb
and
fisubl
clc
inc
stos
scas
xchg
sahf
adc
mov
fsubrs
jmp
lcall
jnp
sub
in
mov
jle
outsb
mov
pop
add
and
test
jge
push
int3
das
ljmp
mov
fwait
push
mov
out
push
repnz
lods
cld
ja
and
ja
add
dec
xor
rolb
cmpsl
fs
adc
out
mov
sub
jp
imul
das
mov
fsts
out
cli
aaa
mov
ljmp
push
sub
stos
fsubl
stos
cmp
icebp
mov
int
xchg
jle
shl
cmp
adc
out
add
mov
push
mov
lcall
insb
sbb
push
fnsave
test
sbb
mov
push
dec
and
cmp
push
xor
mov
enter
jnp
das
xor
inc
xchg
sahf
sbb
push
daa
mov
les
lds
clc
lcall
fimull
push
mov
mov
in
add
sahf
cltd
aam
ds
ret
lret
test
mov
rorb
push
xor
lds
shlb
dec
mul
mov
xor
mov
mov
fisttps
lods
sub
jle
movsl
push
inc
dec
jb
dec
sub
fbld
ret
adc
xchg
outsl
mov
scas
xor
call
or
addl
sbb
fcompl
icebp
dec
mov
lds
adc
sahf
xchg
fmulp
mov
adc
pop
xchg
inc
mov
scas
cmp
idivl
dec
cmp
movl
mov
add
sub
pop
aad
sti
out
jno
jle
pop
cmp
iret
imul
push
cmp
adc
inc
lds
mov
ret
test
sub
xor
add
add
pusha
fcomps
daa
int
sub
inc
and
dec
das
and
xchg
mov
popa
mov
test
dec
inc
mov
or
xchg
jb
aam
mov
inc
jbe
xchg
xchg
xor
repz
sti
mov
inc
jb
mov
shlb
pop
jmp
and
inc
mov
daa
jecxz
dec
adc
mov
jg
outsb
sahf
fisubrl
mov
stos
push
dec
je
movsl
cmpb
mov
clc
dec
push
add
loop
xor
push
fs
clc
iret
lcall
cmp
test
xor
xchg
xorb
adc
pop
js
int3
pop
jbe
fwait
xor
sbb
shlb
jno
adc
fs
sbb
mov
adcb
cmp
pop
mov
fisubrs
cmc
mov
jmp
imull
inc
testl
pop
clc
push
stos
adc
jbe
sub
and
push
cmp
jp
cwtl
add
imulb
sub
lock
pop
dec
mov
push
or
lock
shrl
decl
dec
arpl
dec
push
popf
cmp
shlb
int
mul
push
gs
cmp
inc
popf
xchg
test
int3
jle
xchg
loope
shlb
inc
imul
mov
pop
xchg
ret
imul
sub
ljmp
mov
push
cmp
xchg
lea
xchg
push
add
mov
fsubs
jbe
mov
sub
out
fidivs
movsb
pushf
mov
sub
add
jnp
pop
icebp
cmp
cmpsl
cmc
cmp
out
cmp
pop
inc
jns
lcall
mov
cmp
lret
pop
enter
xor
insb
daa
ljmp
cmpsl
jge
icebp
out
sub
xchg
and
mov
ss
fs
enter
les
xchg
outsb
mov
addb
mov
cmp
popf
adc
popa
cwtl
xor
jp
pushf
pop
les
inc
nop
adc
dec
xlat
add
or
mov
push
bound
sbb
jge
rclb
jmp
and
push
std
push
pop
sbb
mov
int3
jmp
inc
dec
pop
cmpsl
rcrl
loopne
add
jl
setns
jo
outsl
xchg
ret
fmul
xchg
loope
xchg
or
and
pop
push
mov
mov
push
sub
sub
jmp
xchg
fcomps
and
hlt
pop
jne
lds
mov
lret
push
adc
inc
in
fwait
jg
mov
in
add
mov
shlb
lahf
scas
add
inc
dec
mov
lcall
dec
and
push
es
iret
inc
jg
sbb
inc
and
rorl
push
std
daa
lds
repnz
shrl
outsb
js
std
rcrl
mov
push
mov
or
mov
and
inc
cmp
inc
lds
lea
rorl
mov
lahf
push
dec
adc
mov
jmp
sub
ret
fnsave
mov
mov
hlt
arpl
adc
imul
negb
dec
inc
jp
imul
repnz
ficoml
in
pushf
jo
les
pop
xchg
bound
inc
test
lock
and
push
daa
pop
scas
adc
ja
or
and
mov
pushf
dec
test
mov
call
std
scas
adc
push
lahf
dec
aaa
adc
mov
and
cs
das
out
dec
and
mov
inc
and
or
cltd
scas
out
jne
jnp
sub
rolb
dec
xlat
cmp
fimuls
dec
outsb
inc
adc
cmp
cs
mov
lea
add
test
add
lds
mov
pop
pop
or
adc
daa
cld
and
pop
dec
inc
clc
ss
js
inc
or
daa
sahf
ljmp
dec
inc
stos
ja
inc
xorl
shll
xor
push
lds
sahf
mov
jecxz
imul
inc
jl
mov
sbb
pop
dec
push
shll
sar
call
pop
insb
les
inc
mov
push
sub
mov
out
aas
mov
das
jle
dec
push
jae
test
cmc
jp
popf
test
xor
notb
sbb
jno
jbe
sbb
sub
scas
jo
rcrb
ljmp
dec
xor
scas
outsl
mov
fsubl
fwait
cmp
jbe
adc
fabs
xor
xchg
out
enter
xlat
cmovbe
cmc
enter
arpl
movsl
adc
push
insl
and
mov
daa
movsb
push
dec
xor
and
dec
out
lods
les
mov
fs
subb
pop
adc
or
xor
fdivrs
test
sub
mov
adc
shl
sbb
loop
sahf
jns
in
pop
jg
mov
xchg
pop
iret
xchg
vdivps
ja
ds
dec
mov
push
push
repnz
adc
cmpsl
cmp
sub
dec
and
stos
sub
mov
push
dec
shll
mov
sub
arpl
adc
decl
mov
or
sahf
jmp
push
icebp
mov
adc
aam
sbb
popf
out
jb
push
ljmp
or
mov
outsb
fidivrs
and
ret
adc
mov
inc
mov
jmp
fwait
cltd
cld
jae
mov
lcall
cmp
dec
shl
popa
sti
data16
jmp
xchg
stc
pop
enter
mov
sub
lea
out
lods
dec
sbb
fisttps
sub
add
incl
pushf
or
lds
sub
das
scas
sahf
stos
sub
movsl
int3
dec
sbb
sub
and
cmc
out
jecxz
xlat
push
rol
sub
mov
mov
ljmp
pop
ss
rcrl
or
sub
jmp
fincstp
imul
add
fnstcw
insb
push
stc
clc
call
test
pop
lcall
lahf
jmp
adc
xchg
popf
mov
xor
sbb
gs
fistps
mov
pop
and
fbld
dec
arpl
xor
fs
adc
das
xor
push
sub
mov
or
xor
pop
cmc
mov
mov
out
fs
mov
or
add
sub
movsl
mov
paddusw
dec
int
push
into
and
ja
adc
jle
inc
jecxz
cli
jbe
popa
sub
shll
fcompl
sbb
mov
outsb
dec
add
push
xchg
cltd
mov
test
push
push
inc
fcmovnbe
pop
mov
xchg
xor
sub
imul
mov
roll
pushf
shlb
rcrl
mov
shlb
pop
fiaddl
out
out
jbe
into
cmp
push
push
lret
mov
js
ds
adc
mov
fwait
mov
stos
dec
sub
xorl
inc
filds
sahf
inc
mov
lahf
lea
es
sbb
mov
jmp
add
shll
inc
push
mov
cmp
into
add
scas
pop
or
adc
and
dec
test
dec
xor
testb
test
mov
cld
fwait
jmp
lcall
push
jp
enter
jmp
add
call
jns
push
movsl
stc
adc
and
push
dec
mov
test
mov
add
dec
into
sub
outsb
out
or
into
pop
lcall
jne
je
ret
idivl
dec
adc
or
aaa
xlat
dec
xor
out
clc
xchg
push
jns
xor
cmpsl
jecxz
cmpl
out
fistpll
pop
test
push
stos
repnz
fisubl
cltd
mov
bound
aas
movsb
sub
hlt
add
int
mov
loope
aas
fbstp
sti
repnz
jno
mov
xor
add
xchg
mov
or
cmpb
pop
jge
jnp
sub
mov
sahf
xor
sbbb
cmc
ret
sbb
movsl
dec
jo
gs
outsb
into
jg
sub
cld
and
jnp
inc
mov
inc
outsb
jae
xchg
or
enter
enter
sub
repz
push
xchg
gs
and
push
jge
jbe
inc
jecxz
jo
mov
faddl
lahf
das
shlb
sub
lcall
sti
lret
mov
call
imul
dec
mov
das
mov
pop
jl
jns
rcrl
xchg
js
push
push
xchg
xchg
or
xlat
sub
jo
out
sbb
cmp
and
sub
sahf
sbb
mov
ret
xchg
dec
outsl
xlat
rcrl
call
sub
cmpb
aam
jns
aad
int3
ss
rcrb
arpl
jl
ljmp
jnp
inc
enter
int
mov
popa
jae
inc
sti
push
or
push
stos
dec
outsb
lods
jg
out
imulb
or
sbb
mov
enter
fisubl
mov
in
std
dec
xchg
jnp
mov
loopne
aaa
pop
scas
mov
xor
pop
xlat
mov
inc
js
mov
pop
fs
xor
std
inc
sbb
sub
push
pusha
in
add
aam
js
es
es
cmp
sahf
test
xchg
jae
dec
adc
dec
push
and
fcomi
outsb
push
repnz
in
inc
pop
movsl
jmp
add
adc
mov
mov
in
mov
xor
movsl
jno
dec
and
push
xorb
push
call
mov
xor
xchg
or
adc
mov
aam
hlt
movsl
jne
out
ror
out
mov
aaa
and
and
mov
pushf
popf
mov
out
enter
inc
ds
xchg
sbb
inc
outsl
xchg
pop
or
xchg
shl
clc
sbb
push
adc
xor
dec
pop
aaa
cltd
das
stos
jb
lret
fst
dec
int3
leave
cli
jge
das
hlt
xchg
cmp
aam
scas
mov
lods
mov
sbb
stos
inc
les
mov
sahf
xchg
in
mov
out
push
das
mov
mov
xchg
cmpsb
push
ret
xchg
popa
mov
push
es
leave
stos
and
pop
nop
and
pop
lahf
dec
push
mov
stos
pop
jge
pop
dec
inc
shrb
insl
jg
jmp
jnp
xchg
xchg
sub
push
xchg
out
cmp
aaa
popa
test
mov
dec
rcll
mov
lods
mov
daa
lea
xchg
rcll
jns
mov
loope
roll
add
xchg
lahf
movsb
rcl
mov
jo
inc
jnp
rcll
bound
jmp
test
mov
movsl
or
sub
pop
and
repz
div
enter
sub
inc
sub
or
xchg
into
cltd
xchg
incl
pop
add
xorl
out
loopne
insb
out
lods
add
int
movsl
fmul
mov
adc
gs
cwtl
gs
popa
pop
mov
cwtl
ret
mov
pop
lods
clc
adc
add
leave
mov
aad
movsl
pop
push
ds
dec
add
cmp
xor
mov
pop
inc
mov
add
add
xchg
insl
sbb
cld
sbbb
in
movsl
cld
lret
mov
hlt
enter
int
cmc
xor
shll
cmp
xchg
test
insb
test
jp
sarb
ss
shll
mov
adc
add
jmp
pusha
movsl
movsl
sub
mov
daa
jno
in
orb
xchg
mov
inc
mov
aad
hlt
movsl
jg
cmp
adc
cmpsb
mov
pop
incb
dec
mov
movsb
pop
fisubrl
xchg
and
jg
mov
fmul
mov
mov
pop
scas
jge
jp
add
fstl
xchg
stc
cmp
fildl
stos
jae
mov
fnstenv
xor
cmp
sahf
lea
or
push
push
idiv
xor
push
pop
pop
rcrl
ficompl
je
sbb
pop
pop
fimull
or
jl
push
mov
ret
rclb
hlt
fdivp
push
jb
add
nop
or
inc
fs
inc
lds
pop
or
shll
fstpl
aam
add
and
out
ret
pop
sub
add
test
dec
rol
int
mov
sbb
lods
inc
cmpsb
nop
shl
scas
gs
push
and
jb
nop
pop
les
scas
pop
fwait
shll
add
add
inc
sub
out
shrb
jno
push
mov
push
aad
mov
or
mov
in
imul
or
jmp
sbb
mov
shll
mov
or
rcrb
fdivs
jns
sbb
ljmp
pop
or
out
cmp
enter
sbb
scas
ficoms
gs
mov
pop
adc
cltd
ljmp
cmc
xor
shlb
out
jmp
lea
clc
inc
pop
add
ds
cmp
cmpsl
push
add
test
popf
out
vpunpckhbw
cmp
cmp
cmp
sbb
xchg
loop
xchg
xchg
aad
iret
pop
mov
fisubl
test
fs
cmp
inc
xchg
or
stos
pop
icebp
cli
push
and
mov
dec
mov
call
mov
sub
dec
outsb
push
xlat
inc
inc
mov
push
in
imull
loope
imul
dec
dec
xor
sbb
add
shll
pop
fdivrl
test
aaa
push
test
test
shl
adc
lock
mov
pop
testl
jl
mov
mov
fistps
call
and
cwtl
inc
mov
mov
icebp
jns
mov
jl
les
popa
addr16
jo
xchg
and
das
dec
testb
mov
jb
mov
loopne
cltd
jmp
mov
mov
mov
inc
test
mov
fisubrs
in
insl
int
lret
xchg
push
bound
sahf
pop
and
dec
mov
mov
jl
rorl
repnz
imull
out
outsb
push
xchg
clc
or
andl
das
xchg
jp
out
lret
or
test
pop
dec
sub
and
cmc
mov
xchg
sub
inc
inc
testb
icebp
jge
imul
rcl
popf
sub
jbe
sar
dec
daa
mov
mov
pop
js
or
cmc
nop
add
pop
sbbb
mov
push
jp
pop
sahf
out
pop
jl
xor
pop
or
mov
mov
add
rcll
int3
lds
push
les
cld
xor
mov
scas
dec
adc
aas
into
mov
es
gs
push
ret
xlat
cmp
pop
cmp
shrb
and
neg
arpl
xchg
inc
call
push
dec
xlat
mov
lods
leave
dec
cmp
jmp
xchg
add
lea
or
pushf
mov
and
fstp
cmp
lahf
out
fisubrs
jl
xor
imul
nop
imul
xchg
add
jno
adc
push
xchg
xchg
mov
out
jmp
stc
mov
sub
mov
xchg
mov
or
add
and
xor
pop
cs
and
push
std
push
cmc
lret
xchg
cmpsl
das
or
dec
adc
adc
sbb
mov
repnz
push
mov
lret
test
out
dec
mov
negl
imul
lods
and
and
mov
sub
mov
mov
fwait
lock
pushf
mov
jge
aad
mov
popf
adc
xchg
sarl
pop
push
nop
xchg
mov
sti
add
inc
mov
js
pop
into
insb
push
repz
mov
and
and
out
xor
pop
sti
jbe
xchg
mov
dec
and
mov
mov
dec
sub
xchg
and
shl
mov
lcall
sti
test
or
adc
pop
sub
push
cmp
bound
pop
lret
leave
dec
inc
add
loope
imul
xchg
call
jno
rclb
add
or
aad
test
add
ds
loop
cltd
push
xor
imul
and
inc
jae
insl
popa
repnz
push
dec
xchg
or
dec
into
nop
cmpsb
or
outsb
pop
pop
test
scas
arpl
and
stos
mov
xchg
mov
adc
pop
add
push
sub
lods
call
pop
or
add
pop
dec
mov
loopne
loop
mov
mov
aam
lret
outsl
mov
rcrl
out
mov
jnp
pusha
js
push
aas
jg
jge
shll
ds
addl
popa
rolb
mov
mov
push
jmp
jge
add
ds
jmp
push
inc
push
mov
push
pop
sub
inc
pop
cmp
std
loop
cmp
clc
stc
addr16
out
ret
push
xchg
filds
or
cmc
xchg
cmp
or
mov
mov
dec
ds
fdivl
test
mov
jle
into
sub
pop
fnstsw
scas
pop
iret
adc
inc
mov
int
sub
imul
sbb
es
je
dec
dec
push
popf
imul
pop
out
mov
hlt
adc
mov
push
add
popa
mov
jge
stos
and
pop
pop
mov
pop
mov
mov
cs
fcmovnbe
mov
hlt
pushf
sub
ret
fwait
jb
xchg
jno
xor
mov
cmc
and
pop
lahf
dec
mov
loopne
jnp
fwait
jo
ja
ds
sbb
xor
and
jecxz
mov
jne
inc
lret
fwait
mov
mov
mov
mov
push
fidivl
fs
xor
inc
add
ja
jnp
mov
inc
mov
mov
adc
mov
mov
xlat
adc
pop
out
fdivrs
sahf
mull
inc
mov
pop
imul
fldl
pop
mov
hlt
loopne
lcall
pop
aas
arpl
add
mov
rcll
sub
mov
testb
jns
xchg
mov
insl
fxch
and
jnp,pt
adc
loop
cmpsb
insl
xor
mov
fs
std
dec
test
xchg
dec
mov
and
bound
sbb
jp
addr16
hlt
int
dec
and
gs
iret
mov
ret
xchg
and
dec
lahf
shrl
std
push
int3
cmp
shll
sahf
rorb
pop
test
jg
cld
movsl
mov
arpl
shlb
cwtl
stc
sti
xchg
add
lods
xchg
xlat
sub
stos
jmp
iret
sub
lahf
fsts
push
scas
jg
cld
jecxz
lods
pop
push
dec
in
out
je
pop
sbb
fwait
jno
inc
mov
and
ss
dec
cmpsl
rclb
or
add
xor
xor
outsl
test
out
and
lahf
aam
call
scas
jecxz
mov
inc
push
lret
and
sbb
sub
rcrb
arpl
repnz
insl
lods
adc
pop
sbb
cmp
pop
fsubrl
jg
xchg
jno
add
outsb
jecxz
inc
movsb
xor
ficompl
jbe
cmp
mov
mov
clc
stc
xor
xchg
aad
out
insb
cmp
lds
or
and
sub
xlat
inc
in
call
push
sub
xchg
inc
jbe
xchg
idivb
cmpb
cs
inc
and
mov
mov
cltd
jmp
sub
enter
lcall
clc
test
dec
dec
loopne
sub
pushl
cli
xchg
lds
pop
scas
out
bound
dec
sbbb
insl
mov
inc
dec
xchg
mov
push
clc
das
sub
loopne
xor
sbb
pop
pop
inc
stos
imul
xlat
or
push
sbb
sub
push
or
test
loopne
xor
ss
xor
sub
addr16
out
push
mov
into
aaa
mov
pop
icebp
fistpl
lcall
rcrb
sbb
ds
xor
das
call
xchg
das
jno
loopne
pop
adc
lcall
sub
adc
lret
cmp
cmp
add
imull
movb
cmp
dec
sub
jg
daa
dec
out
icebp
les
mov
mov
push
pop
push
dec
mov
adc
cmp
in
jno
mov
xchg
jnp
lahf
adc
in
fisttps
fiaddl
xor
pop
jae
ljmp
js
fnstcw
setg
ret
arpl
shrb
and
mov
movsb
sbb
add
xor
out
rolb
jp
add
dec
and
repnz
imull
das
jnp
dec
pop
pop
shll
test
mov
loope
mov
insb
roll
adc
pop
out
jae
lods
test
lods
adc
pop
cmp
cmpsl
xchg
imul
and
or
cltd
pop
and
loope
mov
daa
enter
outsl
cltd
int
sti
sbb
xlat
jns
ret
fwait
cmpsb
lea
cli
xchg
sbb
pop
mov
cmp
out
ja
push
arpl
mov
xchg
hlt
sub
push
xor
or
dec
mov
loop
sub
scas
push
enter
mov
inc
sbb
iret
mov
lret
es
mov
aam
pusha
xor
cmpsl
scas
push
ror
ret
outsl
push
lods
daa
enter
sbb
add
add
pop
add
xor
sub
jae
divl
mov
sbb
mov
fsubp
andl
add
dec
enter
jl
aad
mov
and
xor
inc
mov
repnz
pop
int3
sub
in
int
loop
cmp
ret
mov
mov
add
mov
scas
push
cs
pushf
in
xchg
fdivr
test
mov
push
add
cmp
or
mov
and
out
sub
insb
mov
or
cwtl
nop
add
mov
mov
adc
xor
ja
fbstp
imul
icebp
mov
hlt
sbb
aas
adc
dec
pop
or
mov
inc
arpl
dec
and
lahf
leave
repz
icebp
mov
in
dec
popa
es
mov
add
lock
stc
arpl
sar
nop
push
in
leave
test
stc
mov
bound
test
iret
add
mov
inc
mov
imul
xchg
mov
mov
test
xor
xchg
stos
out
out
imul
and
ja
je
jp
movl
sub
sbb
inc
clc
adc
mull
cmp
ljmp
xchg
jg
lds
test
cmp
xor
pushf
adc
mov
test
ljmp
mov
lods
xchg
fsubs
stos
mov
nop
lcall
sbb
dec
pop
aam
sub
ret
insb
or
jl
xor
in
aaa
jl
jp
xor
dec
add
mov
sub
xchg
mov
lock
out
xchg
cmp
push
mov
insl
ret
aaa
fs
or
cmp
data16
sub
xor
adc
push
jmp
insl
or
xchg
es
mov
hlt
jle
sbb
pop
mov
stos
sbb
pop
dec
clc
ljmp
iret
nop
dec
adc
xchg
out
add
sahf
pusha
aam
or
addb
es
push
adc
test
xor
cltd
cwtl
push
xor
data16
int3
repnz
add
adc
add
pop
jne
or
or
push
notl
in
sahf
dec
ret
aad
push
dec
cmc
addr16
hlt
fst
dec
lret
movsl
or
outsb
aaa
shl
jnp
mov
outsb
mov
cli
out
data16
cmp
lods
pop
lock
cmpsl
aaa
ret
xchg
mov
shll
xchg
adc
lock
out
cltd
lods
cli
in
addl
mov
leave
pop
repz
out
push
test
xor
loope
pop
out
pop
mov
mov
outsl
pop
xchg
lea
push
adc
fdivl
rcll
iret
inc
iret
in
sarb
cld
mov
insb
add
fsubl
mov
sbb
scas
push
cwtl
add
sbb
in
sbb
pop
mov
arpl
sbb
cmp
adc
sub
jmp
and
gs
xchg
ss
dec
xor
cs
mov
or
sbb
inc
dec
inc
movsb
jo
xchg
inc
xchg
push
dec
je
pop
xchg
loope
je
jmp
lock
mov
push
loopne
add
xchg
push
adc
jns
jo
xchg
sub
rclb
pushf
fadd
aaa
jle
mov
mov
decb
into
pop
or
int
fistps
jae
add
mov
test
jne
xchg
sahf
mov
jmp
das
push
sbb
push
outsb
in
ret
stos
sbbl
int3
add
mov
bound
mov
into
test
add
int3
fadd
insl
jle
addl
sub
inc
pop
fs
sarl
je
aad
in
lcall
cmp
add
add
push
xor
test
cmp
call
fbld
clc
enter
xchg
scas
lods
into
jno
les
into
xchg
jae
push
call
xchg
imul
mov
sbb
imul
out
fcoms
or
rcrb
dec
js
push
aas
in
ficoms
mov
sbb
pop
or
movsb
mov
lcall
jmp
rcrb
mov
in
mov
cmp
ret
arpl
lods
push
loop
in
int
adc
repnz
rorl
lods
pop
mov
lea
pop
movsb
push
mov
fcomps
idivb
or
mov
cmp
outsl
aam
xchg
nop
jge
roll
js
inc
gs
std
cmpsb
push
dec
cmp
and
cmpsb
leave
cmp
add
push
sub
loopne
icebp
out
pop
popa
out
pop
jmp
jp
repz
mov
dec
outsl
sub
aad
mov
imul
popa
imul
or
cmp
popf
scas
icebp
mov
pop
jno
nop
imul
jno
cwtl
bound
mov
repz
int3
into
jno
push
xchg
shll
mov
and
and
inc
mov
fisubl
or
sub
adc
insl
xchg
jmp
ljmp
les
and
jp
insl
cs
into
jno
idiv
cmp
aam
and
or
mov
orl
fldl
inc
js
or
les
mov
xor
shrl
lcall
adc
push
movsl
in
adc
add
push
dec
fstp
adc
outsb
inc
test
ljmp
cld
out
jmp
and
out
sbb
mov
push
add
jnp
mov
imul
cli
cmc
arpl
cmp
hlt
cmc
lahf
push
mov
xlat
pop
stos
cmp
or
push
mov
test
fs
out
jmp
xchg
mov
dec
sti
cltd
cli
mov
in
mov
mov
inc
mov
les
stos
pop
push
cmp
pop
fistps
aaa
cmp
lcall
mov
push
mov
xchg
add
pop
push
in
jnp
mov
mov
jnp
jo
stos
dec
mov
dec
jbe
sti
ret
cmpb
jns
orb
and
pushf
jge
jbe
aam
pusha
fisttpll
subb
add
jmp
call
fadds
mov
mov
jne
les
insb
test
divb
sub
loop
icebp
scas
pushf
lds
test
in
loopne
cmpsb
aam
lods
insl
push
fimuls
add
addr16
push
lods
adc
mov
inc
loope
xchg
mov
divb
fmull
sar
dec
iret
std
dec
inc
test
loope
mov
in
cli
testb
out
fsubrs
and
int3
mov
cs
out
cwtl
pop
pop
xchg
xchg
xor
out
dec
add
testb
jno
sahf
jb
stc
mov
iret
xchg
jg
lods
dec
ds
sbb
test
lret
xchg
fdivr
or
lret
js
aad
or
adc
out
and
es
push
shll
inc
fisubrs
int3
jecxz
test
daa
cs
dec
aaa
fiaddl
push
jns
jl
add
shufps
sub
clc
scas
xchg
inc
xchg
mov
cmp
imul
pop
shlb
push
jnp
mov
fsubp
enter
cmpsl
call
adc
in
jbe
std
aas
push
xchg
or
mov
xor
jns
hlt
push
jbe
push
ret
loop
pusha
cmc
mov
pop
mov
xor
testl
or
jg
sbb
outsl
test
lcall
or
mov
pop
mov
imul
in
dec
aad
sbb
pop
in
and
push
sub
push
arpl
movsl
cmp
or
or
and
repz
add
mov
mov
sub
add
mov
cmp
insb
jp
xchg
dec
test
in
frstor
rclb
nop
daa
add
lock
fcompl
add
push
inc
cmp
push
xchg
outsb
push
repnz
or
ret
movsb
test
inc
stc
shlb
je
xor
jno
push
jns
mov
stos
fcom
sbb
xor
sbb
into
mov
scas
or
sub
stos
pop
sti
call
aam
repnz
dec
add
out
xchg
iret
in
cmp
mov
inc
test
les
repnz
mov
mov
test
sbb
inc
add
insb
cltd
sbb
lods
push
dec
cltd
jge
sbb
cs
cld
mov
adc
repnz
pop
imulb
push
sti
dec
fcmovb
loop
inc
test
in
lods
adc
xor
xor
popf
push
fmul
aad
adc
repnz
mov
icebp
popa
sub
mov
dec
ja
xchg
mov
fiaddl
lods
add
inc
dec
in
test
push
in
scas
pop
imul
fcoms
jge
jno
cmpsb
xchg
inc
or
pop
fcmovnu
test
pop
mov
add
jno
in
mov
icebp
mov
ds
pop
mov
rcrb
xor
pop
ret
add
push
adc
mov
and
sub
pop
mov
sub
push
dec
adc
dec
jmp
jbe
xor
stc
bound
cwtl
ret
push
inc
sbb
pop
fidivl
scas
mov
bound
lds
xchg
push
xchg
outsl
xor
cld
or
loop
sub
add
jnp
xlat
outsb
out
xchg
addr16
lea
push
sbb
jo
mov
xor
lret
mov
inc
push
popa
js
fstpl
in
xor
push
lret
out
fdivrl
and
ds
repz
cli
sub
or
cmp
jmp
out
cmpsl
pop
jbe
push
nop
mov
movsb
mov
jb
pop
xchg
ja
aas
cmp
dec
pop
push
dec
xor
add
inc
xorl
jmp
stc
xchg
loopne
and
cmpsl
je
outsl
add
or
push
cmp
sbb
mov
cmp
das
rorb
mov
es
popl
push
inc
test
insl
or
push
sbb
clc
ficoml
push
and
sahf
add
jnp
jge
cmpsl
lods
inc
outsl
dec
je
pop
add
jmp
pusha
sub
pushf
lods
adcl
cmc
shll
pop
pushf
jno
cmp
or
xor
mov
es
fucomip
cli
or
push
jbe
je
pop
dec
out
decl
mov
xor
fldcw
sub
imul
inc
enter
stos
jnp
xchg
aaa
dec
mov
cmp
mov
mov
stc
rcl
dec
fwait
mov
dec
mov
cs
clc
inc
mov
adc
outsb
add
push
mov
sti
lock
sbb
sub
imul
cmp
in
inc
pop
insl
sbb
dec
and
cmp
sub
sub
lea
aam
idivb
mov
fwait
ror
and
inc
or
lods
push
aaa
aad
daa
pop
inc
push
sbb
test
pop
mov
pop
leave
xchg
pop
push
push
sub
push
pushf
int3
into
jo
pop
push
movl
sub
fsubl
pop
pop
or
pop
mov
pop
mov
andl
xchg
push
dec
pushf
push
pop
mov
sbb
pop
and
gs
ss
mov
icebp
inc
js
push
daa
xchg
pop
iret
jg
movsl
les
dec
leave
cmp
adc
rclb
ja
ret
sbbb
adc
dec
roll
or
push
mov
call
gs
incl
jo
insl
and
sbb
lods
aas
stos
repnz
lods
push
cmp
insl
pop
push
inc
mov
cmp
rcrb
clc
sub
jp
outsl
scas
and
jmp
test
lods
pop
fwait
or
test
cmp
xchg
stos
xor
inc
jns
scas
cltd
and
xchg
stos
mov
jge
fistps
fsubrs
nop
incb
and
test
mov
or
in
pushf
addl
or
mov
pop
dec
pop
repnz
cmp
stc
sub
aas
mov
lahf
in
loope
aas
js
stos
push
or
xchg
clc
mov
mov
sub
popf
pop
out
loopne
dec
hlt
or
dec
or
bsr
mov
jb
jecxz
pop
fnstsw
in
sti
lahf
subl
pop
cmpsb
mov
test
out
jo
push
and
dec
mov
sbb
faddp
sub
adc
push
jbe
sub
les
dec
adc
push
xor
push
icebp
dec
sarl
pop
xchg
mov
ljmp
push
insb
dec
jecxz
sbb
shrb
mov
out
leave
xchg
adc
lret
cmp
mov
lret
movb
adc
loop
inc
stos
scas
clc
mov
notl
pop
das
jl
lds
shl
mul
ror
sub
das
nop
push
xor
push
xchg
jmp
sahf
xor
mov
pop
mov
leave
mov
ljmp
fisttpl
pop
sbb
and
dec
fcmovnu
cld
add
mov
clc
sbb
inc
jg
lret
rcl
out
ljmp
xchg
xlat
das
xchg
ss
clc
mov
push
ljmp
mov
test
mov
pop
testb
hlt
fsubl
loope
lcall
mov
pop
fmuls
mov
sti
fimull
ret
loop
mov
les
cmp
jne
das
loope
push
dec
mov
mov
pushf
or
sti
pusha
xchg
rolb
sub
fwait
lret
add
add
pop
fwait
xchg
pop
ret
sbb
lock
mov
testb
cmp
pop
jmp
les
mov
pop
or
fs
mov
ret
mov
pusha
cmp
shr
movsb
mov
bound
test
call
and
shll
bound
dec
mov
inc
pop
mov
mov
xor
xor
jb
ljmp
push
push
jmp
mov
addb
sti
xor
shll
mov
inc
insb
test
sbb
lret
push
ja
ret
cli
scas
push
mov
test
and
test
int
daa
fsubr
or
add
mov
inc
imul
xor
jl
lahf
jge
pop
lods
xor
jo
enter
push
dec
or
dec
das
pop
or
dec
pop
orb
outsb
jne
cmp
push
ljmp
addr16
xchg
sbb
jl
addr16
in
add
add
lods
je
lahf
and
cs
cmp
nop
sub
and
rcl
pusha
jecxz
imul
das
cmp
mov
in
push
inc
mov
je
dec
ffree
push
push
scas
mov
or
sub
adc
pop
outsb
sahf
jg
mov
xor
daa
mov
inc
rol
pop
cmp
xchg
adc
pop
pop
pop
pop
sub
hlt
push
xlat
popa
jmp
out
adc
sub
outsl
mov
cltd
mov
xchg
fmull
mov
pop
fidivrl
aam
subl
push
add
cld
les
psubsb
ljmp
and
and
lods
mov
clc
out
cmpsb
popf
and
adc
rcrb
pop
jnp
jns
push
push
xor
ret
add
inc
scas
mov
cmpsb
scas
lea
push
loopne
pop
sub
push
shl
jne
aam
dec
xor
dec
push
xor
xchg
test
lods
and
adc
in
and
adc
popf
push
cmp
xorb
idivb
mov
pop
rcrl
and
lcall
out
test
mov
add
sbb
mov
int3
inc
adc
in
dec
or
not
sub
inc
or
insb
std
dec
cmp
cmp
mov
and
fbld
xchg
enter
pop
ja
das
in
rclb
sub
lea
ss
mov
icebp
andl
popl
add
cld
dec
inc
add
repnz
xchg
sbb
test
cmpsb
jl
dec
cld
or
cmp
sbb
imul
or
or
pusha
ret
jne
cmp
subb
inc
scas
shll
ljmp
jge
sbb
xor
jnp
lret
mov
mov
mov
inc
fs
jmp
iret
nop
test
pop
hlt
shll
into
xchg
mov
subl
add
fnsave
rcll
arpl
and
xchg
mov
pop
jb
jns
ret
and
mov
xchg
addr16
push
pop
pop
gs
movsb
int
mov
dec
out
fsub
mov
jb
aad
pop
adc
adc
jo
push
push
cltd
fmuls
sub
inc
mov
fdivrp
pop
daa
adc
test
clc
cmc
jns
insb
sub
pop
icebp
dec
aad
mov
and
repz
push
lahf
dec
ror
shlb
out
push
lods
outsb
lcall
adcb
jne
push
inc
push
cmpsb
insl
xlat
das
mov
sub
cmp
push
sahf
xchg
fdivrl
or
imul
sub
mov
adc
dec
cltd
inc
adc
pop
enter
pop
mov
jle
push
inc
fsubrl
in
jl
mov
jnp
data16
rcll
add
enter
fisubrl
imul
dec
mov
repnz
adc
loope
mov
das
outsb
mov
mov
pinsrw
dec
add
jle
cs
test
idiv
int
stos
pusha
jp
int3
mov
add
mov
pop
int3
fwait
inc
and
ret
push
cltd
mov
xchg
lcall
shll
fimuls
mov
mov
loopne
popa
mov
ja
outsb
test
pop
mov
and
sbb
pop
xor
jecxz
bound
and
lods
add
sbb
ss
and
fwait
scas
and
hlt
pop
mov
loop
les
ds
leave
test
testl
jae
pop
ret
push
pop
jne
ja
jmp
loop
fidivrs
imul
or
rcrb
mov
lret
cmc
jmp
stos
mov
inc
mulb
rclb
mov
push
mov
jo
and
ja
fildl
lock
and
pusha
scas
shrl
in
mov
cmpsl
jbe
dec
inc
test
jno
imul
push
or
outsl
xchg
xchg
or
in
loop
ret
data16
sbb
adc
cld
inc
cmp
xchg
lahf
xchg
mov
hlt
data16
int
cmp
cs
ficoms
in
inc
push
jo
fadds
ds
dec
mov
jnp
aad
or
js
dec
pop
xchg
sub
test
pop
cmp
out
fidivs
adc
es
shrb
inc
sbb
sbb
lret
sub
scas
push
push
dec
lret
jb
pushf
repz
mov
inc
push
in
push
test
and
test
push
push
je
mov
loope
lret
sbb
mov
add
sbb
imul
xchg
ja
lret
jae
hlt
sub
mov
sbb
and
and
pop
jae
jp
loope
sbb
xor
movsb
push
in
jge
adc
leave
int
adc
jl
hlt
das
lods
lea
inc
sub
inc
lea
sub
movsl
lods
leave
xchg
sub
mov
push
gs
mov
stc
or
test
push
js
in
adc
xor
cmp
dec
leave
cmp
or
push
push
sbb
std
rcrb
ret
pop
jnp
sub
cmp
lcall
dec
adc
cmp
dec
inc
mov
and
rcll
addr16
push
push
test
hlt
repnz
push
pusha
movsb
sbb
dec
arpl
js
mov
in
push
andb
push
test
mov
lods
mov
push
or
mov
pop
cmp
sahf
sub
xorl
fnsave
bound
cwtl
mov
ret
test
jns
sub
xchg
loop
adc
adc
adc
pusha
stos
xchg
dec
pop
mov
cs
xor
dec
rorb
adc
int
jo
xlat
push
das
sbb
loopne
and
in
sub
sti
lods
xchg
mov
es
lret
shlb
add
push
bound
sub
pop
cmp
cli
in
jae
js
pop
incl
adc
enter
in
fstpt
in
fdivrs
fistl
sbb
sbb
jo
or
cmp
inc
jnp
lret
into
lock
addb
or
loopne
adc
adcl
lods
js
xlat
or
or
mov
test
sahf
dec
push
push
dec
mov
loop
pop
popa
mov
mov
sbb
jle
aam
add
jne
lahf
ret
adc
mov
push
jmp
cli
pop
cmp
mov
rcll
mov
and
sbb
andl
jge
xchg
mov
adc
adc
and
push
mov
and
and
sti
idivl
dec
loop
mov
aam
pop
sub
test
xor
adc
adc
out
adc
loopne
jne
jp
jne
mov
into
jno
xor
ficoms
pop
idivl
dec
mov
sub
rolb
sahf
xchg
popa
testl
xchg
mov
aam
pop
xlat
jmp
mov
xchg
adc
mov
pop
pop
dec
pop
sub
xor
mov
shll
cli
rcr
inc
clc
mov
out
repz
fdivs
inc
xchg
jg
xchg
cmp
ds
ds
adc
xchg
mov
jbe
adc
add
fisttpl
je
and
mov
fwait
ss
dec
cmp
sti
ror
arpl
cmpb
push
imul
adc
leave
mov
cld
lcall
add
addb
and
mov
ljmp
out
cmp
xor
ja
fdivr
push
popa
lret
sahf
push
ljmp
xchg
addr16
push
sub
hlt
stc
pusha
mov
push
mov
stos
sbb
mov
or
icebp
out
sbb
into
iretw
icebp
mov
pop
rcrb
mov
aaa
repnz
insb
repnz
ret
jno
mov
push
mov
in
ja
sub
jl
pop
test
dec
adc
cmpsb
mov
sbb
iret
inc
jmp
mov
xlat
cmpsb
aad
pop
fistl
jp
test
imul
adc
xchg
jo
ds
clc
cmp
cmp
cmp
addr16
dec
idiv
lret
mov
ficompl
pop
cmp
xchg
imul
or
repz
inc
pop
lret
sbb
xor
push
fadds
ret
push
out
sbb
sbb
adc
rcl
es
lcall
lods
or
dec
fistps
mov
lds
lock
nop
jb
xchg
out
imul
mov
dec
cli
sbb
or
mov
xchg
sbb
fdivl
mov
pop
add
scas
cmpsb
dec
mov
movsb
adc
or
xchg
mov
lock
dec
mov
mov
jg
push
pushf
mov
xlat
cmpsb
xchg
cmp
js
jnp
pop
xchg
and
enter
repnz
add
mov
rorl
sarb
inc
jl
mov
mov
cmp
pushf
loop
icebp
repnz
stos
mov
xchg
mov
addl
jge
sbb
loopne
negb
test
sahf
pop
or
lcall
sub
outsl
inc
ret
adc
cmp
or
push
adc
mov
sbb
jmp
out
fstl
xchg
sbb
and
fstpt
clc
mov
dec
dec
test
aad
daa
xor
ja
int3
add
add
jno
dec
jmp
add
adc
mov
lahf
aas
in
xchg
or
xor
xchg
rclb
add
aaa
insb
orl
icebp
adc
xchg
out
sbb
std
mov
dec
dec
mov
cmp
cltd
in
mov
xchg
repz
and
insl
in
adc
gs
cmpsb
fnstenv
aam
xchg
sub
inc
jbe
jmp
repnz
jge
xchg
add
fwait
mov
pop
jbe
or
rorl
mov
bswap
enter
mov
xchg
adc
push
sub
or
pusha
mov
in
xorl
push
and
xchg
bound
fs
test
fwait
subl
sub
mov
test
dec
jl
mov
jge
add
mov
insl
popa
or
cmpb
aad
call
cs
ret
fistpl
in
push
and
pushf
or
insb
xchg
popa
out
jmp
in
push
lock
or
daa
rcl
mov
fstps
inc
or
xor
sub
sbb
push
lret
loope
jmp
or
mov
hlt
fnstenv
rcrb
dec
loopne
mov
xchg
xor
mov
mov
mov
push
ucomiss
xchg
jge
dec
jge
in
out
add
pop
sarl
and
movsb
fiadds
push
scas
aaa
shll
inc
std
cli
jae
rorb
mov
mov
fiaddl
push
xlat
call
jb
aad
fisubs
or
rcrb
and
test
xchg
leave
daa
addb
mov
inc
fmuls
mov
jae
push
ret
adc
pop
lahf
mov
xor
inc
push
mov
idiv
aam
sbb
mulb
in
stc
js
mov
loope
sahf
mov
ljmp
data16
add
fmull
aas
je
notl
decl
lret
sub
dec
dec
and
jo
xor
pop
pop
mov
neg
sub
jno
scas
mov
fnsave
jle
mov
movsb
scas
fisttpll
add
nop
nop
sbb
dec
sub
jbe
sti
int
dec
data16
cmp
cmp
jbe
push
push
mov
pop
shrb
scas
outsl
lret
xchg
xchg
or
nop
inc
loopne
insl
out
ds
jb
xchg
xchg
sbb
mov
mov
stos
lock
addr16
xor
enter
mov
add
cmc
xchg
pusha
js
dec
in
mov
into
and
insl
add
adc
jge
lea
xchg
jge
jno
cmp
push
xor
mov
mov
add
insb
jne
pop
test
xorb
pop
das
pop
dec
jae
fldenv
sbb
daa
stos
adc
mov
adc
adc
mov
xlat
and
add
lock
and
mov
imul
inc
outsl
loope
test
jmp
jecxz
inc
test
inc
ds
in
shrl
mov
pop
xchg
pop
mov
test
mov
call
sbb
dec
jecxz
das
mov
in
imul
mov
sub
test
das
and
push
cmc
f2xm1
pop
jmp
sub
out
pop
stc
popa
lods
addb
sbb
cmp
add
jo
mov
sarl
inc
adc
pop
and
add
and
mov
mov
push
testl
sbb
xor
lahf
xchg
rcrl
jecxz
pushf
dec
mov
test
xorb
lret
push
jbe
ja
push
sbb
add
outsl
mov
pop
xor
leave
cmpsl
aaa
addl
les
cs
dec
loopne,pt
mov
lock
adc
mov
xorl
add
mov
sub
mov
sub
inc
loopne
lret
adc
stos
push
inc
fmul
in
xor
inc
jno
cmp
push
dec
xor
xor
lret
call
cmc
sbb
cmpsl
sub
pop
jge
repnz
jle
dec
push
dec
out
cmpl
xor
outsb
outsl
dec
mov
mov
pop
sub
fdivrp
lahf
test
and
insl
fimull
push
jb
insb
mov
or
push
xchg
pop
push
rcrb
cmc
add
lahf
cmp
mov
gs
cmp
into
popf
fdivl
mov
fistps
fnstenv
dec
cmc
roll
mov
push
stos
out
dec
scas
or
xor
xor
icebp
sbb
bnd
push
jecxz
cmp
dec
jbe
or
int
stc
pop
cmp
and
jecxz
adc
out
dec
inc
es
xor
inc
mov
dec
jbe
dec
jne
xchg
sbb
inc
cli
rcrl
pop
jb
mov
imull
mov
push
std
les
dec
test
push
stos
fdivs
repz
adc
into
in
inc
stc
mov
sbbl
cmc
lahf
stos
inc
xchg
cwtl
mov
sub
dec
add
adc
pushf
mov
lahf
shrl
and
pop
xchg
lds
sbb
xor
jnp
dec
inc
fmuls
int
and
xchg
xchg
or
jmp
and
ja
mov
pop
out
mov
cmp
dec
sub
aad
add
inc
jae
pop
mov
in
sub
sub
insl
push
shll
add
xchg
imul
flds
dec
mov
pop
dec
xlat
aad
pop
cmp
movsb
and
jl
pop
in
adc
push
ficoml
aam
xchg
jns
mov
push
imul
jns
and
inc
xchg
outsb
arpl
or
mov
and
ljmp
push
cmpsl
adc
lods
hlt
jl
or
adc
sub
jbe
lock
inc
inc
cli
icebp
sbbl
and
dec
mov
data16
pop
cli
ficomps
data16
or
jb
rcr
inc
pop
or
hlt
sbb
sbb
lods
loopne
lret
filds
pushf
lock
xchg
sub
hlt
roll
stc
jbe
fs
aaa
dec
xor
gs
sub
inc
jmp
dec
xchg
push
loopne
je
adc
jo
dec
jge
push
fmull
push
in
push
in
andl
decb
cwtl
push
stos
mov
cmp
dec
out
int
clc
dec
sub
cmp
cli
mov
test
mov
daa
test
jmp
mov
lds
divl
mov
inc
jecxz
sbb
add
pop
pop
mov
jbe
push
or
xchg
loope
inc
sub
shrb
xor
shll
inc
push
imul
pop
push
push
ds
mov
inc
pop
loop
xlat
push
xchg
loopne
xor
movsb
aas
mov
mov
and
ss
orl
loop
push
icebp
adc
push
and
loop
sbb
mov
pop
dec
stc
cltd
sti
cld
jns
repnz
insl
mov
popa
mov
in
daa
push
shr
jle
dec
hlt
fidivl
push
dec
dec
xchg
sbb
mov
test
and
stos
jne
sub
sub
sbb
stc
or
repz
clc
shlb
int
xchg
ljmp
pop
or
cmp
in
jle
cmp
lds
je
mov
inc
imul
push
and
pusha
repnz
outsl
or
stc
out
out
xor
in
negl
cwtl
adc
jl
mov
lret
mov
outsl
fdivs
add
ret
rcrb
mov
insb
mov
aam
adc
lock
and
shrb
jb
sbb
in
or
mov
aad
out
test
or
sub
fstpt
lret
addr16
bound
xor
add
mov
shlb
adc
lds
nop
out
dec
adc
daa
mov
imul
or
popa
mov
xchg
sbb
adc
pop
jg
daa
movsb
loopne
and
mov
in
and
jb
insb
adc
sub
inc
mov
jg
test
xor
mov
jnp
sub
negb
les
adc
add
dec
push
xor
jns
lods
mov
dec
leave
push
and
sbb
pop
dec
jb
mov
add
fmuls
and
add
push
xor
stos
mov
les
mov
sahf
js
cwtl
push
sahf
subl
cmc
jns
out
decl
jp
mov
data16
pop
xchg
push
leave
xchg
imul
xor
roll
sbb
lds
mov
sbb
idivl
sbb
xchg
pusha
dec
es
insl
xchg
sbb
inc
mov
mov
rcrl
cld
push
push
push
cmp
and
pop
addr16
add
xor
sahf
mov
cmpsb
xchg
mov
cwtl
sahf
js
outsl
popf
loop
mov
jge
lret
shrb
in
pmaxub
push
mov
cmp
sti
pop
es
add
out
pop
or
nop
jne
and
mov
xchg
jb
push
push
push
sub
xor
xchg
add
push
push
enter
roll
mov
xchg
lahf
call
push
push
gs
adc
dec
fimull
mov
add
test
and
lods
out
rolb
test
insb
popa
mov
jo
push
jbe
mov
xchg
ljmp
lds
mov
loope
insl
mov
sub
mov
int3
mov
ds
adcl
das
or
pop
mov
sub
cmp
shll
lds
scas
inc
int3
popa
jmp
in
int3
sahf
push
mov
xchg
xor
out
dec
mov
in
fmul
adc
fldl
bound
imul
push
mov
loop
test
icebp
cmp
test
cmp
sahf
test
push
jl
hlt
push
loopne
outsb
popa
dec
leave
fisttps
int
cmp
pop
or
stos
pop
sbb
jl
rorl
outsl
mov
out
leave
xchg
jns
jae
lcall
imul
rol
dec
iret
mov
pushf
xchg
fwait
jp
data16
std
push
push
fildl
cmp
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
and
add
add
sbb
test
add
add
adc
add
add
and
push
add
call
add
add
add
add
add
push
add
je
jne
push
add
popa
add
add
add
outsb
add
imul
je
jb
and
and
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
inc
xor
or
add
xchg
add
adc
add
inc
xor
add
push
add
add
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
insb
adc
and
fs
mov
xchg
cmp
jnp
in
sub
inc
fsubp
mov
dec
push
jae
cmp
jns
std
xor
push
out
cmc
ss
mov
jnp
in
add
pushf
mov
out
push
fimuls
in
into
fs
cs
insb
push
xor
outsl
xor
jmp
cmp
mov
or
mov
scas
push
mov
cmc
xor
shr
ss
pop
icebp
push
out
stc
xchg
fnstenv
push
addb
shll
cmpsb
xchg
and
mov
and
and
xorl
dec
cmpsb
and
jno
dec
or
sbb
inc
cmp
or
push
stos
mov
insl
leave
mov
addr16
add
mov
mov
cmpsl
and
pusha
daa
out
pop
mov
jae
imul
jb
cltd
add
pusha
cli
aam
add
dec
daa
cmp
mov
cltd
sbb
imul
mov
push
mov
call
cmp
hlt
lods
adc
inc
rcll
add
rolb
cmp
push
int
and
bound
mov
test
cmp
xchg
jmp
adc
stos
sub
bound
pop
pop
dec
inc
in
push
cmp
ficoms
or
inc
iret
jecxz
test
hlt
sbb
fmul
pop
xchg
push
fnsave
adc
inc
sbb
fisttps
jle
adc
xchg
sahf
out
test
sub
push
jle
lahf
loope
fidivs
pop
lods
mov
mov
dec
fistl
in
std
sub
push
incb
mov
outsb
into
pop
lds
lea
mov
dec
sub
cli
ds
sub
mov
jecxz
jae
mov
push
dec
and
fbstp
add
jmp
jg
fildll
incl
mov
daa
xchg
sbb
mov
in
xor
lret
sahf
dec
aaa
aas
pop
hlt
pushf
xor
repnz
xor
cmc
pop
imul
mov
xor
inc
jl
out
mov
lock
pop
fcompl
and
inc
pop
inc
jp
mov
fistl
xchg
xchg
cmc
cmp
fsts
lods
mov
pop
and
and
push
jl
sahf
mov
popf
loope
js
dec
in
movsb
ficomps
xchg
adc
pop
cmpsb
cmp
iret
inc
sub
sub
cmpsl
inc
cmpsb
push
and
jl
cmpsb
inc
lods
inc
xor
enter
and
and
int
push
pop
fisttpll
inc
movsb
dec
sub
mov
mov
test
and
jnp
inc
dec
cmp
adc
das
in
xchg
xchg
pop
dec
sbb
in
jae
inc
lods
popf
dec
shll
fs
cmpsb
rcrb
aam
int3
xor
stos
rcr
pop
inc
js
outsl
outsb
mov
dec
cvttps2pi
mov
shl
jl
mov
push
sub
cs
push
or
scas
fwait
dec
xor
jge
gs
push
out
cmp
jecxz
pop
out
je
cmp
repz
xchg
outsb
mull
dec
mov
adc
push
and
jp
movsl
imul
cmp
leave
je
sub
push
shrl
push
mov
call
adc
xor
add
add
xchg
inc
rcr
fmull
fnstenv
add
cmc
lods
pop
mov
push
mov
mov
pop
add
lret
jnp
std
cmp
movsb
dec
dec
out
rolb
stos
daa
mov
aam
movsb
icebp
pop
cltd
and
dec
jnp
popa
xchg
in
leave
iret
inc
sub
xor
out
dec
jbe
not
dec
outsb
xchg
ficoms
xor
add
jae
insb
jle
insl
and
xor
arpl
push
fisttps
inc
sub
es
cmp
fistl
in
icebp
rcrb
outsb
ljmp
xchg
lret
inc
jl
stc
pop
jp
jmp
xchg
fs
mov
sbb
cltd
in
fnstenv
fldl
jge
xorb
sbb
iret
jb
sti
leave
mov
out
xor
mov
add
stos
fcmovnb
aas
lahf
aaa
xchg
and
sbb
lds
cli
sub
mov
xchg
test
les
mov
mov
cmp
aaa
addr16
fcoml
xchg
pop
fadd
sub
shlb
sub
sbb
dec
mov
jb
xor
mov
int3
jbe
hlt
test
mov
and
out
in
imul
fldcw
aas
pop
mov
mov
or
inc
mov
xor
push
stc
push
add
adc
mov
int3
ljmp
popf
aam
push
inc
adc
imul
inc
insl
rorl
pop
pop
mov
xchg
dec
pop
mov
sub
dec
xor
xlat
xor
stos
xor
cmp
pop
inc
push
mov
nop
outsl
lahf
jmp
enter
fdivrl
push
frstor
sbb
xor
in
or
cmc
insb
jl
mov
in
cmp
xchg
jbe
rcrl
xchg
fdivl
stos
mov
cld
jp
jb
xor
iret
jae
jmp
cwtl
push
inc
insb
adc
fwait
les
cmp
popa
add
cs
mov
add
dec
into
js
jae
push
xlat
adc
out
cs
jg
or
out
pop
divb
fsubrl
mov
sbb
aam
mov
aas
ret
pop
push
inc
icebp
scas
aaa
jb
push
imul
cmpsb
in
iret
xor
dec
das
lods
lods
in
cmp
push
push
inc
cli
cli
push
sbb
imulb
and
jae
int
sub
sbb
adc
mov
mov
jmp
fwait
xchg
repnz
mov
adc
cmp
and
popa
jns
mov
outsl
outsl
sbb
xor
pop
in
fnstcw
sbb
fadds
in
push
inc
mov
imul
mov
inc
pop
into
push
jno
addr16
pusha
out
xchg
inc
cmp
xor
test
mov
fcomp
insl
jecxz
cmp
mov
outsb
fimull
fnstsw
lret
and
test
cltd
jae
mov
mov
hlt
imul
cli
pushf
arpl
adc
jnp
push
cmc
sub
mov
lcall
ljmp
mov
add
lcall
popa
xchg
lret
addr16
out
sbb
lds
add
out
rcrl
pusha
ljmp
ret
les
lods
call
and
incl
fs
je
fwait
das
adc
jb
xlat
lcall
fldt
rorb
lcall
push
xchg
jmp
mov
push
rcrl
loopne
out
push
inc
stos
fadds
popf
scas
movl
jmp
mov
mov
push
mov
jbe
add
popa
icebp
push
dec
fstl
xchg
and
or
ficoml
pop
jmp
in
dec
inc
lcall
mov
stos
bound
addr16
inc
push
xchg
adc
push
je
jno
mov
cmp
rep
or
jae
mov
mov
lcall
fistl
pop
shlb
orb
add
push
add
mov
dec
adc
xor
clc
daa
mov
lea
lods
and
pop
sbb
lea
scas
test
int
shll
imul
cmp
test
jnp
outsl
sbb
clc
cmp
scas
mov
jns
stc
rorl
pop
andl
push
js
test
mov
mov
jmp
ret
push
push
sbb
jns
jb
arpl
mov
insl
ljmp
xchg
mov
cmp
mov
and
mov
lods
jns
aam
and
xchg
dec
or
cmp
fdivl
cmp
fadds
xchg
cmp
shl
sbb
shl
movsl
sub
movsl
and
sub
cld
filds
cmc
scas
xchg
adc
jbe
cmc
mov
adc
sbb
mov
popf
pop
aam
sbb
push
pop
in
mov
add
stos
xor
pop
in
inc
push
insl
mov
sbb
imul
mov
cmp
push
adc
mov
nop
out
jbe
insb
xchg
sub
orb
sbb
cmp
mov
pop
xlat
mov
push
adc
mov
fs
hlt
cmpsb
dec
repnz
repnz
add
sub
int
loop
mov
sar
push
fstpl
mov
arpl
movsb
fwait
jo
orb
movsb
xchg
dec
test
inc
push
inc
lret
and
jg
inc
call
mov
pop
nop
inc
arpl
aad
sub
and
xchg
xchg
cmp
pop
scas
arpl
loop
pop
inc
popf
dec
cmpsl
jne
inc
inc
into
pop
ja
jmp
fsubl
inc
mov
pop
leave
sbb
and
ret
mov
in
and
xor
mov
test
mov
daa
gs
aam
push
mov
lods
push
jg
mov
subb
adc
imul
aam
sbb
inc
scas
out
loop
cmc
popl
clc
out
lahf
push
xchg
sti
dec
repnz
mov
lahf
arpl
adc
mov
push
push
movsb
xchg
xchg
rol
inc
jg
imul
dec
sub
sbb
mov
xbegin
fimuls
cmp
loop
int3
xchg
push
ss
test
mov
sub
lcall
mov
dec
mov
pop
xor
out
dec
ret
mov
adc
fmulp
notb
xor
add
or
add
mov
dec
adc
lret
xor
fisttps
push
push
pop
fistpl
jmp
jo
cmp
addr16
xchg
call
dec
mov
lods
pop
and
lods
ljmp
cmovp
push
cmp
loop
mov
loop
or
orb
add
stc
xlat
int3
cmpsl
ret
xchg
push
mov
decb
movsb
sub
stc
data16
stc
push
sahf
out
imul
xlat
imul
adc
lcall
int3
shrb
test
jmp
mov
mov
push
push
addr16
pop
in
lods
pop
pop
movsl
in
dec
or
enter
mov
lahf
cmp
pusha
sub
xor
aaa
iret
dec
adcb
scas
orl
jge
dec
or
shl
scas
lcall
xor
rcrb
mov
mov
and
jle
sub
icebp
jno
lcall
or
loopne
lret
stos
rclb
dec
xchg
in
mov
ds
call
insl
outsb
lock
xchg
nop
cmpsl
aam
lcall
jb
roll
lret
inc
addl
leave
out
dec
in
jbe
andl
dec
cmpsl
movsb
dec
arpl
ljmp
ja
xchg
mov
dec
cmc
xor
mov
mul
push
push
sub
mov
sub
mov
lds
aam
fnstsw
popf
adc
popa
jmp
jp
mov
mov
pop
jl
push
movsl
jno
jns
aas
xchg
stos
sbb
shlb
cmpsl
sbb
leavew
data16
adc
pop
push
out
jno
push
xchg
cmpsl
cltd
addr16
lret
push
insb
and
inc
in
int
pop
jl
fisttpl
cmp
sub
sti
push
and
fdivrs
incl
cmpb
arpl
sub
scas
xor
xor
outsb
push
in
dec
movl
stos
cmc
movsb
adc
leave
sbb
jnp
cmp
pop
cmp
iret
fstpl
ja
jg
mov
xchg
faddl
js
arpl
and
aaa
fs
mov
sahf
mov
rol
aaa
scas
les
outsb
lods
xlat
adc
mov
pop
int3
inc
shrl
rcll
xor
push
xchg
and
aam
jp
test
andl
popfw
imul
jae
enter
sbb
push
xlat
shrl
in
cmp
add
mov
insl
imul
stos
xchg
push
popf
imul
xchg
mov
dec
or
jnp
imul
cmp
jae
hlt
cmp
fldcw
clc
xchg
aad
dec
dec
dec
inc
lea
dec
movsl
shlb
mov
cld
mov
repnz
cld
jmp
xchg
jb
jp
in
dec
pop
lret
push
lcall
scas
push
jae
cmpsb
stos
jns
jge
xchg
ja
movsl
jnp
repnz
mov
push
sub
and
sub
stos
shr
jl
loop
xlat
cmc
iret
pop
call
pop
lahf
push
dec
xchg
mov
stos
push
lock
js
aam
stos
mov
loope
pop
or
sti
inc
mov
jns
cmpsl
cmp
jbe
mov
in
mov
int3
inc
jp
stos
pop
fcmove
xor
mov
add
xlat
popf
in
and
jb
jp
xchg
popf
lcall
jbe
lea
cmp
xor
jg
out
mov
mov
pop
in
or
out
mov
daa
pop
int3
imul
mov
pushf
push
pop
pop
xchg
cmpsl
xchg
popf
mov
lock
sbb
test
jno
fsub
lods
cmpsb
mov
ficomps
pop
pop
pop
pop
mov
add
add
lock
xchg
and
xchg
inc
xchg
adc
mov
lea
hlt
shl
cld
jge
outsl
cmpsb
clc
jle
lods
mov
inc
add
inc
sbb
sarb
aam
sub
dec
imul
sti
sti
push
mov
lods
dec
rclb
sbb
cmc
jge
xor
push
add
jle
mov
xor
ja
lods
arpl
int
cmp
insl
jae
lea
or
popf
mov
dec
jo,pn
adc
mov
xor
movsl
test
jno
jp
jae
mov
mov
or
xchg
mov
mov
mov
and
lock
mov
fldcw
leave
imulb
fwait
jae
and
leave
xor
mov
mov
cmpsl
push
aaa
xor
add
push
arpl
inc
inc
sarl
mov
in
push
xchg
xchg
pop
test
add
jns
jo
div
stos
out
xor
mov
mov
pop
inc
xchg
out
push
fidivrl
pop
push
lahf
push
pop
cmp
in
dec
in
fsubrs
insl
sbb
call
xchg
push
test
mov
add
pop
cmpb
stos
leave
adc
or
loopne
rep
push
and
test
push
mov
int
push
shrb
sbb
negl
cmp
push
mov
jnp
dec
outsb
jle
pop
mov
or
cltd
lods
or
lds
lahf
xchg
dec
xlat
mov
cmp
in
push
xchg
cmp
add
mov
dec
jae
ja
ds
add
sub
xchg
in
xor
.byte
mov
sub
