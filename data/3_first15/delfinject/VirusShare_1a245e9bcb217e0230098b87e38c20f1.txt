push
or
add
add
add
pusha
or
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
rolb
mov
adc
add
add
add
or
data16
add
or
xchg
add
jno
add
add
ret
add
add
add
jno
add
add
add
jno
add
or
pushf
jo
add
or
mov
add
add
add
jo
add
or
enter
pushf
pusha
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
push
js
inc
add
add
jae
jb
gs
je
imul
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
add
and
add
add
add
add
add
or
mov
nop
nop
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
or
add
pop
add
and
inc
rorb
add
add
add
and
cmp
and
sub
adc
pop
int3
fistps
insw
mov
xchg
jmp
or
push
les
cmp
scas
pop
jg
xchg
lret
add
adc
sahf
roll
adc
mov
mov
negb
jl
inc
icebp
dec
movsb
push
mov
ljmp
rol
andl
in
aas
push
add
jne
jmp
pop
repnz
inc
rclb
cli
push
cli
fdiv
test
pop
inc
loop
cmp
mov
jecxz
scas
jns
push
inc
mov
aas
scas
lea
lods
dec
dec
cmp
and
js
mov
aaa
push
and
mulb
xchg
inc
es
lahf
fisubrs
shl
sbb
int
cltd
adc
mov
mov
adc
push
repz
mov
aam
in
sbb
lods
push
popf
sahf
pop
add
lret
and
addr16
movsl
repnz
repz
mov
jns
mov
shl
pop
test
fcmove
xor
sub
test
pop
ficoms
push
mov
jg
rcrl
dec
shlb
inc
cmc
cld
or
fst
out
sbb
imul
cmp
icebp
mov
or
mov
test
jo
int
add
shlb
and
das
ss
cltd
ss
ret
push
call
mov
mov
lret
pop
fsubrs
xchg
xchg
mov
jge
mov
sarb
scas
out
mov
scas
adc
outsl
xchg
jp
jle
mov
inc
aad
add
xchg
sti
rcr
fwait
sar
out
push
push
dec
mov
jne
sub
pusha
cmp
dec
mov
push
jg,pt
xchg
ret
ljmp
shll
andb
fbld
in
add
pop
xchg
sbb
scas
int3
fs
inc
add
adc
push
outsb
movsb
divb
dec
repnz
mov
xchg
js
xchg
pop
inc
orb
xchg
rolb
dec
shlb
mov
stos
sbb
pop
rolb
inc
xor
es
into
call
push
inc
ftst
js
daa
adc
sub
fs
pop
and
ds
jae
idivl
and
sti
inc
nop
shr
std
dec
icebp
daa
push
add
inc
fldlg2
shll
daa
sbb
cmp
aam
xchg
sub
dec
aaa
add
xchg
mov
cmp
lods
pop
pop
and
fcmove
mov
jb
movsb
and
out
jb
xchg
jmp
jo
inc
repnz
pop
cmpsl
jbe
cltd
lods
push
mov
mov
mov
and
ss
roll
cmc
cltd
sbb
sub
ret
jo
cmp
pop
das
mov
and
loopne
adc
adc
mov
dec
xchg
sub
subb
mov
icebp
adc
stos
push
clc
sti
mov
ss
pop
xor
pop
push
gs
pop
addl
xor
loop
cld
sar
adc
scas
push
add
insb
lock
and
adc
jecxz
test
pop
ret
xchg
push
mov
testb
jnp
ret
int3
popa
jecxz
cmpsl
lea
pop
xchg
sub
jmp
hlt
insb
xchg
adc
lahf
fisubrs
push
sub
ja
lcall
je
pop
and
ret
addb
ret
clc
cmp
enter
rcl
xor
lds
daa
or
ja
scas
xchg
divb
fwait
push
aas
lods
xchg
or
jl
push
test
push
fwait
pop
xchg
jl
out
jbe
adc
mov
fisubrs
jo
out
ss
ds
cmp
nop
cmp
jl
ds
lea
pop
add
jb
and
insl
aad
xor
xchg
aad
mov
cwtl
push
pop
mov
test
les
cmpsl
loopne
push
fs
test
test
xor
imul
jb
test
out
jecxz
xchg
les
scas
dec
sahf
mov
les
fcmovne
xorl
fstl
mov
fsubrp
rorl
and
sbb
mov
and
push
pop
mov
fbstp
push
jge
cs
popf
out
jl
pminsw
mov
movsb
push
xchg
arpl
jl
xchg
addl
adcl
sub
bound
adc
bound
imul
mov
negb
daa
sbb
jbe
sub
insb
stos
imul
mov
pop
jae
inc
rcl
ss
mov
int3
inc
push
aam
pop
add
je
mov
dec
sti
jbe
mov
out
call
stc
pop
pop
in
std
pushf
xchg
ret
pushf
mov
sti
dec
test
push
fdivl
jae
std
loop
xor
outsl
cmp
orl
call
rcrl
fisubs
imul
and
ror
fidivrl
and
movsb
leave
mov
dec
pushf
pop
push
xor
jecxz
in
data16
outsb
adc
jno
bound
stos
test
mov
fildl
adc
imul
pop
movsb
mov
aaa
inc
mov
js
lock
adc
jne
or
or
sbb
cwtl
lcall
mov
fnsave
jle
dec
mov
movsb
push
jmp
sub
and
outsl
adc
and
sub
in
add
in
into
lock
cld
bound
gs
add
clc
sub
jge
mov
ss
cmp
paddsb
xchg
sub
incl
cmp
sbb
negb
stos
inc
mov
pusha
jb
fisttpl
cmp
out
ret
stos
mov
dec
and
cwtl
pop
in
push
or
icebp
pop
jns
fdivr
lcall
mov
mov
gs
and
adc
in
int3
mov
sub
sbb
cmpsl
in
aad
imul
insl
xchg
pop
dec
sub
add
xchg
push
mov
push
xchg
icebp
in
pop
jbe
icebp
int
dec
inc
cmp
mov
xor
test
inc
sahf
dec
scas
js
mov
sbb
loope
pop
daa
xchg
push
mov
repz
mov
jns
stos
push
lea
or
pop
mov
sbbb
jo
pop
xor
jp
mov
scas
dec
push
imul
pop
sti
addr16
mov
sub
negb
repz
jne
pushf
pop
xchg
dec
shl
inc
movsl
mov
subl
jp
sub
mov
outsl
shrb
nop
xor
and
loop
mov
fs
inc
stos
loopne
std
mov
repnz
lahf
ds
pop
scas
mov
add
mov
std
call
pop
cmc
jl
dec
fidivs
pop
lods
pop
xor
mov
adc
insl
les
inc
jns
xor
insl
lea
inc
dec
loopne
jg
outsl
lods
orl
popf
mov
lock
mov
inc
inc
fsubl
in
push
loop
cmp
leave
dec
push
cmpsl
adc
mov
stos
push
repnz
ja
add
ret
roll
mov
je
cmpsl
mov
mov
inc
lahf
frstor
or
inc
ljmp
jp
outsl
fs
sbb
push
push
outsb
push
shll
mov
xchg
or
pop
cmp
sbb
cli
jge
pop
lret
std
icebp
mov
pop
xchg
mov
mov
lcall
mov
jns
lods
loopne
xchg
cli
aaa
add
movsl
push
mov
andl
push
imul
and
xorl
fidivrl
dec
mov
movsb
cmp
lods
and
cmp
push
push
inc
test
pop
and
cmp
pop
adc
xchg
stos
jae
pop
xor
ret
cmc
scas
gs
and
jns
mov
in
into
fucomi
int
leave
mov
das
jl
xlat
notb
mov
push
cmp
iret
sar
imul
rcrb
lock
fnstsw
loop
adc
aaa
mov
scas
in
aam
fcomi
push
scas
sbb
lods
mov
movsl
nop
dec
lret
pop
sbb
push
xor
mov
gs
xlat
add
mov
push
jnp
cwtl
adc
gs
repnz
cmp
or
test
shl
das
fwait
and
fcoms
adc
lods
out
mov
adc
or
sub
add
mov
lahf
pop
jns
push
testl
int3
sub
ret
cmp
push
addr16
inc
push
mov
sub
push
mov
cmp
xor
mov
movsl
dec
xchg
sbb
mov
lds
getsec
adc
out
adc
push
cmp
fdivrs
fwait
push
jecxz
mov
pop
test
cmp
mov
inc
xchg
lods
sbb
mov
inc
loopne
jae
mov
sbb
sub
or
cmp
test
sti
or
cmpsl
dec
mov
cmp
mov
out
pop
sub
xor
inc
dec
and
sbb
js
mov
cs
dec
xlat
mov
shr
xor
jns
xchg
jmp
add
xchg
pusha
sbb
js
pop
dec
clc
cltd
mov
push
mov
or
xlat
sahf
sbb
lock
cwtl
sub
int3
or
scas
inc
mov
jp
mov
sbb
cwtl
sahf
mov
cmp
cmp
decl
outsl
ljmp
push
mov
sbb
ds
int
fistl
push
cmp
mov
jno
leave
mov
adc
icebp
popa
bound
pop
cmc
xchg
adc
cmpsl
clc
xchg
add
aaa
dec
fistpl
and
pop
pop
scas
in
add
test
idiv
leave
mov
sbb
cmp
add
sub
mov
data16
jns
fdivr
andl
cmp
pop
out
lahf
xchg
push
dec
mov
cld
add
mov
outsl
sbb
mov
sub
adc
xchg
cltd
inc
adc
sbb
imul
ret
push
in
push
data16
adc
or
iret
addr16
lods
sar
scas
in
in
outsl
std
sarl
cmovne
xor
out
push
xchg
add
mov
shl
in
pop
and
lcall
jns
and
sub
or
and
fcompl
rcrl
pop
shl
xchg
dec
sub
push
push
int
cmp
cltd
mov
imul
lret
fbstp
ficoml
stos
mov
push
jne
sahf
lret
xor
xchg
cmp
xor
xchg
sub
fdivs
mov
add
xor
ret
jne
inc
add
push
pop
in
add
int3
cmpsl
mov
add
mov
mov
adc
lods
mov
adcl
fisttpll
or
jne
and
cmp
dec
mov
fwait
std
inc
movsb
dec
repz
inc
rcrb
aas
mov
sbb
mov
pop
xchg
int
gs
dec
stc
inc
lea
shrb
lcall
je
sahf
sti
lea
and
out
outsb
sbb
jnp
pop
cli
cmp
stos
and
add
mov
add
dec
push
mov
pop
out
or
adc
add
les
ret
xchg
out
in
stc
stc
ss
scas
push
pop
jg
std
or
dec
adc
icebp
leave
xchg
add
jo
xlat
push
sub
cli
testb
insl
ja
inc
sub
sub
fst
xchg
fucomip
inc
add
jb
hlt
inc
lods
sbb
fistl
pop
test
fwait
pop
pop
mov
inc
adc
mov
adc
jae
xchg
int
adc
jmp
mov
das
mov
mov
dec
lcall
jecxz
out
sbb
dec
out
stos
lahf
fcompl
xor
ret
repz
adc
test
jl
push
inc
lods
or
sub
mov
adcl
mov
mov
fwait
or
mov
jge
add
jmp
push
mov
xchg
das
pop
ljmp
mov
enter
xchg
out
fisttps
jb
sub
xchg
mov
sar
mov
flds
faddp
in
sbb
xchg
lock
icebp
fsts
lds
into
pop
lock
pusha
fildll
aas
jno
push
sbb
xlat
addr16
in
and
mov
adc
cli
mov
ljmp
mov
iret
lcall
push
filds
sbbl
test
iret
inc
mov
and
mov
jno
int3
loopne
mov
lods
repnz
push
andl
mov
sub
orl
or
add
sarb
ljmp
repz
insb
pop
mov
pop
jnp
xchg
inc
cmpsl
or
mov
les
jp
out
je
dec
arpl
cwtl
lods
pop
sub
rcrl
mov
jno
mov
mov
daa
clc
rorb
and
sub
in
pop
mov
pop
push
xor
pop
pop
dec
push
mov
pop
sbb
fcomps
pop
movsb
insb
push
inc
xchg
xchg
flds
dec
mov
ror
and
movsl
fbstp
sahf
pop
int3
dec
push
jmp
push
sub
pop
sahf
incl
xor
adc
xchg
sub
movsb
movsb
or
jg
aaa
ret
mov
mov
xchg
mov
sub
outsl
shrb
push
adc
push
pushf
jl
xchg
dec
and
inc
inc
jecxz
cltd
call
shll
cli
mov
jle
lds
adc
bound
cli
scas
xchg
inc
or
xchg
mov
jle
fidivs
in
into
push
add
addr16
in
mov
jge
ja
arpl
dec
ret
jae
imul
inc
mov
and
shlb
arpl
repz
jo
push
push
mov
loope
xor
in
lret
pop
push
mov
sbb
loope
outsb
rcll
dec
lods
stc
xchg
rclb
and
inc
subb
dec
or
mov
xchg
jp
pop
sub
inc
enter
icebp
jns
jo
stos
jl
mov
in
jge
subl
push
leave
pusha
sub
fs
jmp
xor
aaa
nop
imul
sub
data16
jae
nop
scas
mov
stos
sbb
cmp
sub
scas
cs
dec
or
sbb
xchg
test
add
inc
push
lcall
dec
sub
or
sbb
xchg
push
inc
mov
shlb
push
imul
cs
fwait
xchg
mov
push
or
aaa
fstpl
push
jns
mov
or
mov
push
add
ret
cli
aam
cmp
hlt
xor
xchg
mov
test
je
cwtl
dec
es
push
out
lea
lea
test
fdivs
inc
or
movsl
mov
pop
cmp
in
sbb
aaa
lods
mov
pop
dec
imul
xchg
bswap
out
out
pushl
dec
mov
ds
push
cmpsl
cmp
and
mov
aaa
repz
and
xchg
fists
das
cwtl
loop
add
ret
pop
lret
enter
daa
mov
xchg
jns
out
outsl
push
jmp
daa
push
pop
stos
push
xchg
call
addr16
addr16
cld
hlt
loope
mov
mov
xchg
in
inc
dec
lcall
pop
std
addr16
push
add
ror
xchg
sbb
fbstp
dec
or
xchg
xor
incb
sti
into
sub
stc
lods
int3
rorl
mov
repz
xchg
cmp
push
iret
loop
push
add
outsl
shll
mov
subb
cmp
js
dec
cmp
sbbl
mov
outsb
xchg
fnstsw
cmp
mov
out
outsl
loopne
lahf
out
dec
lock
addr16
mov
jg
cmp
movsb
lock
xchg
cmp
jmp
mov
cld
mov
mov
or
mov
int3
loop
inc
dec
out
dec
mov
add
stos
add
xlat
sarl
idivl
mov
aam
data16
xchg
add
leave
jl
mov
sahf
leave
mov
movsl
lock
jge
and
sub
movsb
jnp
jae
jbe
push
cltd
push
test
pop
mov
cmpsl
mov
lea
xchg
mov
pushf
test
mov
jmp
cmp
scas
mov
cwtl
add
fstpl
bound
out
or
and
mov
or
mov
test
inc
jno
ss
inc
in
addr16
ss
pop
gs
cmp
loopne
popf
rorb
cltd
je
clc
in
mov
cmp
jb
jmp
test
ror
mov
and
mov
out
les
mov
mov
add
sarb
sub
mov
pop
lods
add
push
je
pop
adc
popa
mov
addb
push
sub
int
fistpll
rcl
es
push
shll
lret
push
sbb
inc
scas
dec
xor
adc
jne
jecxz
jl
jo
pop
int
jnp
repz
push
out
inc
pop
addr16
sub
incl
mov
hlt
fistpl
pusha
sub
xor
inc
je
das
subb
xor
test
cltd
cwtl
in
popf
pop
jle
shr
mov
shrl
aad
scas
jl
sub
mov
mov
aas
adcl
and
icebp
mov
in
test
adcb
insb
inc
loope
lds
cmp
and
or
lea
dec
or
sub
loop
icebp
sub
jo
push
cld
inc
xor
jno
add
push
ret
popa
aam
mov
add
jae
inc
fdiv
jl
enter
sarb
fdivrs
and
lret
pop
sbb
jns
push
mov
or
fcompl
sub
outsl
test
push
icebp
adc
mov
sbb
out
mov
aas
mov
in
and
sub
popf
pop
inc
ror
fistpll
lock
das
lret
call
hlt
jp
add
mov
dec
and
or
fiaddl
add
pop
and
jg
test
xchg
and
cltd
adc
pop
xor
xlat
mov
sbb
arpl
adc
mov
mov
jae
mov
dec
cmp
andl
incl
jp
ljmp
push
mov
push
sbb
or
xor
jns
std
pop
xchg
and
call
xchg
cmp
fistl
je
xor
mov
xlat
push
jmp
aam
mov
sahf
in
cwtl
gs
jne
mov
dec
in
jmp
and
add
outsl
xor
movsb
jne
loop,pn
mov
sahf
int
gs
repz
mov
jg
subb
rcr
and
xchg
mov
xchg
es
and
mov
mov
sti
js
add
pusha
dec
ficoms
pop
xchg
in
rorl
inc
adc
test
inc
insl
arpl
dec
mov
lahf
lods
or
cld
repz
aaa
out
adc
mov
add
fcoms
add
test
jge
flds
out
clc
push
stc
dec
sti
adc
jns
push
ret
sbb
pop
jnp
pushf
xchg
or
pop
pop
loopne
jnp
rorb
dec
sbb
movsb
lcall
pop
and
rorb
jbe
cmpsl
mov
mov
push
add
xor
mov
aaa
pop
and
shlb
mov
outsb
cmp
xchg
rolb
jecxz
mov
xor
leave
jbe
add
loope
adc
lcall
add
ret
ljmp
pop
dec
inc
jno
popf
sub
jge
push
aad
mov
lock
push
addr16
push
pop
popa
push
stc
add
xchg
sbb
and
dec
inc
mov
and
cmpl
jle
loop
stos
das
push
push
xchg
pop
and
fisttps
iret
call
and
or
cmpl
jle
sub
inc
jns
test
mov
xchg
pop
jecxz
fbld
sbb
enter
mov
jg
push
adc
jmp
lds
test
int
add
mov
mov
mov
lret
xchg
movl
aam
adc
xor
sbb
pushf
xchg
aas
pop
dec
sub
xchg
ficomps
fstps
jmp
in
scas
cld
fnstsw
xchg
push
jl
or
pop
shll
lods
ds
pushl
pop
out
call
add
xor
xchg
mov
inc
stos
inc
mov
ret
pop
int3
lds
inc
subb
loop
js
ret
adc
xchg
mov
insb
xor
sbb
roll
and
jbe
or
jae
rcrl
push
inc
mov
inc
sbb
push
inc
inc
xor
add
rcrb
push
insl
inc
xchg
outsl
ja
jnp
pop
jge
movsl
xchg
lea
add
adc
popa
sbb
or
gs
mov
pop
test
decb
cmp
mov
js,pt
out
add
mov
sahf
inc
sar
jl
xchg
mov
sbb
adc
psrld
or
dec
xchg
lods
mov
xor
sbb
cmp
and
xor
aaa
jo
jge
jo
mov
push
adc
jmp
pusha
scas
je
cld
mov
pushf
xchg
rorl
outsl
add
cmp
nop
sub
xchg
adc
dec
jle
push
imul
js
pusha
sub
mov
mov
out
mov
sbb
aad
pop
ret
mov
mov
push
leave
mov
addr16
xchg
mov
xor
push
mov
xchg
mov
push
fisttpll
and
mov
aas
das
out
in
and
shrb
cmp
nop
mov
ja
jp
add
mov
mov
es
pop
mov
scas
movsb
mov
and
cmc
dec
std
scas
or
insl
movsb
adc
xor
fldcw
sub
pushf
inc
pop
fstpt
cmp
pop
pusha
rclb
aam
push
int3
gs
stos
mov
push
and
cs
push
stos
cmpsb
pop
imul
and
mov
mov
test
xchg
lahf
rsm
sahf
jmp
repz
repnz
ja
je
in
insb
adc
out
imul
fsubrl
inc
fs
stc
dec
shlb
ss
enter
sarl
aaa
xchg
dec
jno
inc
pop
lock
mov
vmovntps
sti
inc
add
mov
xchg
jmp
sti
loope
sarb
xchg
sbb
rolb
cs
pop
xor
xchg
and
mov
cmp
ds
push
inc
pusha
mov
jge
lret
jp
fs
mov
aam
or
ljmp
scas
pop
insl
popf
insb
enter
lods
loop
mov
or
push
es
test
inc
and
inc
call
inc
adc
out
cmp
jne
inc
cli
imul
rol
int
rorl
and
jnp
aaa
insl
sbb
loope
mov
pop
add
jns
jecxz
lret
in
sbb
leave
stc
dec
test
push
push
setno
lock
mov
mov
test
and
cmp
loopne
and
popf
mov
push
and
in
jge
adc
jo
fs
adc
ja
or
clc
popa
addr16
rorl
mov
xlat
xor
mov
pushf
sub
xchg
fidivs
jge
fcoms
addr16
fwait
xor
addr16
jmp
inc
fcoml
fcoms
into
inc
jno
int
lock
in
int3
inc
jns,pt
lret
xor
iret
int
xlat
push
in
into
lahf
xor
jmp
jecxz
jne
adc
dec
push
loop
test
mov
add
mov
sbb
sbb
aaa
mov
mov
sbb
jae
fdivrl
xchg
add
mov
or
bound
lret
pop
bound
mov
aaa
jmp
arpl
mov
subb
pop
adc
pop
dec
xchg
push
mov
and
test
cmp
mov
xchg
sub
sahf
adc
and
sbb
pop
ja
lods
xchg
inc
fists
pushf
jnp
scas
adc
aam
jmp
js
in
fisttpl
mov
and
sub
stos
addr16
and
aad
cli
movsb
data16
and
rorb
out
inc
xchg
or
pop
hlt
push
loope
call
pop
add
decl
lcall
aad
or
cs
sub
sub
jg
out
cmp
adc
in
mov
mov
lea
or
lret
test
jecxz
popa
inc
fcoms
ret
repnz
mov
xchg
pop
push
loop
mov
jecxz
or
add
aam
leave
adc
loop
gs
xor
ficoml
sbb
push
sub
in
mov
cwtl
arpl
jo
sub
inc
subl
jne
fisttps
fstpt
xlat
inc
outsl
jl
mov
adc
mov
std
push
insl
scas
sbb
movsb
fildl
mov
sbb
inc
insb
clc
inc
pop
mov
or
roll
adc
jb
fs
sub
cmpsb
dec
sbb
pop
mov
mov
push
fs
ficompl
mov
ds
gs
mov
rol
imul
mov
imul
xchg
sbb
nop
stc
xor
mov
cmp
out
push
cld
cmc
adc
dec
sbbl
insl
xchg
fildl
gs
movsl
das
repnz
shr
adc
fs
adc
int3
push
push
push
data16
xor
dec
mov
fcomps
xchg
or
lret
repz
and
out
inc
lods
xchg
mov
pop
mov
clc
mov
enter
adc
daa
inc
cmp
add
popa
mov
ficomps
mov
inc
aam
hlt
xor
sub
ret
xchg
jp
pop
scas
and
and
movups
xchg
dec
pop
scas
je
fimuls
inc
andl
push
jne
dec
js
push
shll
mov
addr16
cmp
loope
adc
popf
dec
rcrl
or
xchg
lds
push
push
fisubrl
movsl
int3
and
pop
es
bound
cli
and
jle
fs
push
pop
lods
sbb
jno
rorb
out
shrl
imul
jecxz
sbb
cltd
cmpsb
mov
fistps
xacquire
out
push
mov
popl
and
push
gs
dec
dec
daa
adc
add
es
and
cmp
push
push
std
imul
or
sbb
jp
mov
cmc
clc
mov
frstor
fisttps
push
lods
aad
mov
pop
loope
popa
jl
enter
fdivs
pop
ja
loop
mov
xlat
push
mov
or
je
and
les
jecxz
into
jl
imul
dec
lods
lret
mov
sbb
dec
leave
sub
or
mov
or
mov
mov
aaa
and
or
cmp
dec
jo
dec
not
cltd
cmc
xchg
adc
mov
mov
ficomps
ja
bound
mov
jg
into
movsl
repz
xchg
sbb
mov
out
mull
sub
shrl
loopne
dec
adc
das
xchg
das
sub
and
iret
xlat
aam
mov
hlt
insl
stos
je
push
lock
cmp
int
inc
fsts
pop
aam
push
lret
dec
aam
push
mov
mov
pextrw
jl
dec
popa
into
mov
add
cld
and
mov
pop
inc
enter
lret
lods
stos
push
test
addl
jae
int3
dec
sti
push
sbb
cs
pop
int3
mov
xor
out
push
das
and
ja
pop
jle
or
push
fadds
sub
js
cmpsl
lea
dec
cmp
cmp
sarl
movsl
icebp
lock
or
push
inc
xor
aas
test
mov
mov
cmp
cmp
push
repnz
mov
push
daa
jl
dec
or
jns
cmc
leave
mov
scas
or
cs
xor
sub
dec
lds
add
aam
popa
in
inc
adc
mov
inc
roll
lea
mov
add
das
enter
add
cmc
repz
push
loopne
push
inc
popf
dec
or
push
xchg
pop
popf
out
xor
dec
push
mov
in
or
xor
mov
js
rcll
int
lahf
mov
cmpsb
mov
xor
mov
mov
cmp
dec
loop
pop
jp
aas
mov
mov
sub
jp
or
lea
cltd
je
push
push
jae
jle
pop
or
pop
dec
mov
xchg
cli
mov
addr16
jmp
outsl
popa
scas
xchg
sbb
js
xor
jge
xor
xchg
sti
adc
mov
lret
cwtl
mov
xor
es
loop
sbb
cmpsb
and
push
jg
xchg
adc
pop
ret
mov
shrl
lret
jno
jns
imul
xchg
movsl
lods
adc
inc
push
add
xchg
jp
xor
mov
jl
fdivrs
hlt
fsubr
gs
imul
call
jmp
scas
push
fsubr
mov
add
push
je
js
sbb
fwait
jne
inc
insb
into
dec
mov
adc
loop
call
popa
inc
je
shll
gs
sbb
aaa
xchg
lret
sbb
add
and
mov
cltd
sti
push
andb
aas
cltd
insb
add
mov
call
bound
jl
gs
mov
xchg
mov
pushl
test
push
inc
fsubrl
js
adc
inc
xchg
subl
xchg
inc
adc
pop
cmc
jge
sbb
mov
mov
mov
push
cmpsl
jne
aaa
mov
xor
sub
or
and
mov
ss
xor
push
pop
sub
cltd
test
mov
outsb
movntps
addb
popf
xlat
ror
or
lcall
xor
jo
add
push
mov
out
inc
pop
xchg
dec
scas
sub
les
jne
sub
dec
and
les
insl
sub
fidivrl
inc
adc
in
xor
jno
fmull
mov
int3
test
orb
inc
mov
pop
inc
inc
jge
insl
jmp
pop
sub
xchg
xchg
loope
adc
ret
inc
test
mov
mov
or
sub
out
rcll
mov
gs
jns
inc
push
sbb
lock
sbb
xchg
out
fildll
fistpll
sub
inc
es
fadds
lahf
pop
add
push
push
loopne
mov
das
test
and
mov
jle
out
xor
add
dec
mov
mov
out
inc
in
loop
enter
out
cltd
call
outsb
mov
lods
and
adc
xor
fidivrs
into
jmp
shll
adc
mov
lds
sti
xchg
mov
ja
sub
mov
mov
adc
cmp
mov
push
mov
pushf
xor
lods
out
das
ret
test
pop
sub
fwait
and
mov
ficompl
jp
jns
gs
daa
jl
mov
push
sbb
xchg
cmp
fiadds
push
sub
movsb
adc
and
add
pop
loop
cmpsl
jmp
sub
cmp
dec
ljmp
and
rolb
push
fsubr
dec
mov
add
icebp
add
mov
and
mov
stc
hlt
push
pop
inc
inc
das
stc
ds
int
repz
out
lahf
cmp
inc
fadd
sub
jno
add
jae
inc
push
lods
cwtl
pop
mov
cmp
inc
filds
in
cmpsb
mov
mov
push
call
mov
bound
aam
ljmp
xchg
imul
cmpsl
movsl
ficomps
or
xchg
pop
mov
sbb
stos
add
mov
jb
xchg
lcall
push
rol
inc
movsl
lahf
data16
dec
sbbl
inc
not
dec
pop
jmp
adc
sbb
in
and
sbbb
inc
cmp
aas
pslld
sarl
lahf
pop
and
cmp
and
out
fs
sub
test
sbbl
or
pop
jbe
mov
inc
sbb
aaa
iret
nop
lcall
das
or
sub
flds
xchg
pushf
fiaddl
pop
sub
dec
xchg
in
adc
aaa
sti
mov
jle
cmp
sbb
cmp
adc
inc
cmp
or
pop
cmpsb
lret
mov
sbb
pop
lahf
xchg
sbbb
lahf
jo
mov
sbb
xchg
mov
ret
ficompl
mov
dec
mov
inc
fstpt
orb
loop
xchg
xor
call
fmulp
mov
xchg
gs
mov
das
pop
in
test
or
jns
out
mov
out
jbe
lods
and
or
test
loopne
bound
imul
adc
loopne
cmp
mov
dec
sahf
jnp
xor
loopne
insb
int
or
pop
mov
imul
mov
push
movsl
scas
fsubr
mov
out
mov
ss
inc
pop
mov
jle
pavgb
and
inc
mov
sub
fwait
syscall
test
js
pop
flds
sbb
pushf
fwait
fwait
mov
in
hlt
out
xchg
jecxz
lods
pop
or
pop
rcl
push
arpl
xor
pop
lods
push
xchg
xchg
add
les
jle
fiaddl
cmp
cmp
pop
cmpsb
adc
sahf
addb
stc
jne
pop
adc
adc
mov
addl
pop
or
dec
out
lret
popf
outsl
or
cmp
lahf
jg
outsl
outsl
pop
mov
pop
push
jmp
jns
dec
jno
sbb
loope
cmc
push
outsl
out
lock
mov
mov
lcall
aam
cmp
xchg
pop
out
test
sbbb
ljmp
in
push
mov
pop
int
loop
call
inc
pop
mov
fdivs
cli
lahf
pop
lods
les
sub
add
sub
insb
es
leave
xchg
cwtl
leave
test
mov
mov
dec
xor
adc
aas
sub
nop
push
inc
lods
xor
adc
loopne
adc
cmpsl
and
test
sbb
dec
call
jns
xchg
cmp
sub
xchg
cmp
jecxz
daa
loope
mov
fimull
sbbb
push
nop
mov
mov
loope
mov
sub
jmp
xchg
outsb
fsts
lds
aas
loop
leave
adc
in
lcall
iret
mov
sub
xor
gs
pop
imul
mov
cli
xlat
xchg
aad
dec
lret
aam
inc
jp
bound
out
mov
js
sub
pop
jmp
mov
inc
sbb
fildll
pop
vmovshdup
cmpsb
mov
mov
pusha
fsubs
imul
xlat
lds
fwait
push
subps
push
cld
std
mov
sti
xlat
cmp
push
xlat
shll
dec
ret
cmc
xchg
xchg
fs
push
mov
jbe
out
mov
popf
and
dec
ficompl
mov
scas
std
pop
les
insb
in
aad
sub
loopne
push
enter
xchg
push
inc
lcall
cmp
mov
jbe
rclb
jo
add
in
jb
push
pop
jo
arpl
jg
xor
push
loope
adc
shll
call
pop
mov
add
xchg
mov
lret
data16
mov
adc
push
pop
inc
mov
inc
in
or
pop
roll
mov
mov
cmp
test
xchg
pop
cmpsb
ss
lret
lea
jl
mov
lcall
mov
dec
add
jmp
insl
sub
jle
rorb
xchg
mov
xchg
or
loope
lea
test
out
xchg
and
rolb
daa
push
rcll
xchg
xchg
jl
xor
mov
rcl
outsl
and
mov
fld
mov
adc
inc
mov
cmp
mov
sub
xchg
ds
into
and
pop
addr16
jmp
mov
lods
pop
lea
mov
jmp
lret
pop
or
sub
cs
mov
dec
and
jae
dec
stos
ret
hlt
insb
sahf
leave
roll
dec
test
adc
mov
jnp
push
gs
mov
jbe
sub
cmp
jg
push
outsl
loopne
cmpsl
out
mov
mov
daa
push
cs
sbb
mov
mov
or
js
mov
or
and
orb
inc
in
mull
mov
jp
jo
push
shl
pop
test
pop
and
sahf
aaa
adc
stos
adc
dec
nop
xchg
push
rorb
and
cmc
mov
mov
inc
sub
rorb
sbb
outsl
call
pop
outsb
ljmp
fnstenv
pop
call
scas
sub
dec
lret
jl
adc
popf
adc
fidivl
jnp
in
je
sbb
fdivrp
pop
push
insl
sbb
xor
subl
stc
xor
test
add
xlat
fstpl
fidivrs
add
sbb
fldl
ss
ljmp
aaa
clc
xchg
inc
mov
divb
xor
pop
jecxz
ficompl
insl
adc
inc
sbb
xchg
ds
dec
into
in
loope
loopnew
mov
testl
repz
mov
enter
aaa
mov
movsb
mov
xchg
xchg
mov
pop
mov
push
push
fadds
lret
cmc
jecxz
clc
data16
aam
popa
pushf
and
rcl
stos
push
lods
adc
pop
shlb
shl
add
pop
and
add
cmp
sarb
inc
adc
bound
jle
repnz
add
mov
fmul
shrb
add
imul
les
insb
insl
xchg
call
in
and
inc
imul
loopne
xchg
cmp
fnstenv
and
rcrb
inc
orb
xchg
push
lret
push
pop
lds
xor
adc
jl
jge
dec
dec
inc
lahf
ss
ds
xchg
lods
or
outsl
jg
das
or
jno
add
in
std
ror
fs
ja,pn
xor
pop
int
dec
popa
lcall
mov
sti
loop
push
std
pop
push
mov
xchg
pop
inc
aad
popf
insb
fidivl
pop
sbb
insl
lcall
bt
cmp
mov
cwtl
loopne
in
mov
xchg
cmp
xchg
shrb
xor
icebp
pop
ss
push
mov
or
fs
out
int3
jb
pop
out
test
fcomps
movsb
jae
or
and
sti
sub
jae
or
jg
into
inc
mov
out
pop
inc
lea
sbb
or
insl
mov
clc
pop
push
scas
arpl
pop
fs
shll
jno
cld
jg
pop
xchg
int
cwtl
sbb
xor
aaa
test
test
inc
mov
jne
pop
inc
dec
pop
add
or
lret
pop
jns
gs
add
jae
insl
xchg
pop
jp
inc
fists
mov
push
jno
and
and
jmp
fnstsw
add
pop
les
lret
and
xchg
cmc
dec
inc
sub
jne
out
cmc
mov
cs
stos
push
add
imul
xchg
pop
je
mov
push
add
addr16
or
mov
orl
mov
or
jb
mov
jp
cmp
pop
ret
push
lahf
push
sbb
imul
adc
inc
fmul
int3
std
iret
mov
mov
incb
or
fisubl
lods
sbb
add
sbb
jle
cltd
scas
hlt
stos
pop
jb
addl
sbb
jno
and
iret
rcll
stos
push
or
add
or
xchg
mov
fs
ss
aas
cltd
mov
cmp
imulb
cwtl
push
mov
adcl
mov
cmc
sub
daa
incl
shr
adc
addl
mov
pop
or
adc
sub
pop
fsubs
rolb
mov
fstpl
or
and
mov
jno
pop
and
ds
push
lea
lahf
fnstcw
inc
lahf
test
xchg
cmpsb
jbe
in
and
out
div
rcrl
dec
ficoms
xlat
es
sub
xor
inc
lea
jbe
dec
into
rolb
xor
inc
cmp
mov
adcl
or
arpl
inc
xor
lods
dec
out
popa
mov
xchg
and
es
push
add
popa
and
ficoms
int
int3
in
and
nop
pop
sbb
es
ret
jne
les
mov
popa
sub
adc
and
test
and
add
jns
aam
out
aaa
ljmp
xchg
pop
jae
mov
data16
aad
lea
scas
pop
mov
je
or
int
jge
imul
xor
imul
int3
xor
pushf
add
sbb
mov
mov
mov
pushf
rcrl
cmp
leave
hlt
mov
in
inc
cld
aas
lahf
mov
daa
jmp
gs
mov
pusha
popf
lahf
inc
jmp
lea
mov
mov
mov
cwtl
test
sbb
add
jne
mov
cmpb
lcall
jnp
int3
jmp
enter
fs
bound
mov
das
or
push
ret
or
jno
sub
xchg
jmp
pop
fidivrs
outsb
sbb
mov
pushf
cwtl
leave
sbbl
movsb
or
xchg
mov
mov
xchg
fwait
or
sbb
mov
lods
sbb
jmp
test
adc
cmp
push
sti
adc
push
jmp
shll
fs
and
mov
mov
mov
jp
cmp
sub
or
cmpsl
inc
inc
xchg
leave
pop
push
movsl
push
std
lahf
push
lea
dec
jae
data16
and
pop
nop
sub
aaa
inc
lcall
addb
inc
xor
outsb
clc
jl
orb
bound
data16
movsb
dec
insb
sahf
loop
push
aas
jecxz
int
gs
stos
idivl
stos
ja
jle
int3
jmp
lret
mov
hlt
cmc
jmp
xchg
push
and
ljmp
or
mov
cmp
mov
jbe
mov
int
aad
dec
pushf
or
leave
and
call
and
inc
mov
lret
jo
adc
lret
dec
pop
adc
outsb
bound
roll
xchg
xor
mov
xchg
push
xor
pop
shl
xchg
out
out
daa
and
cmp
repnz
inc
jne
sub
mov
adc
cmp
stc
pop
test
icebp
aad
xchg
loopne
push
roll
pop
pop
in
or
addr16
ljmp
sbb
jl
outsl
in
jle
dec
shl
imul
loopne
int3
add
fs
std
std
pop
sbb
aad
ret
fdivrp
mov
fiaddl
add
xor
xchg
rcrl
push
repnz
mov
sbb
movsl
sti
pushf
mov
roll
dec
stos
shrb
xor
iret
adc
repnz
sub
test
int
adc
loop
or
xor
rcll
jne
sbb
orl
ds
dec
lahf
fsubs
jo
add
and
sub
pop
scas
negb
mov
fnstcw
or
xchg
scas
dec
nop
rcll
push
pop
insb
in
mov
add
jg
jbe
scas
xor
jne
inc
int
ja
sub
push
dec
pop
cmc
sti
xchg
cli
call
mov
fcmovne
mov
ss
or
mov
pop
xchg
pop
inc
push
mov
test
leave
and
shlb
or
mov
cmp
icebp
add
aaa
sbb
fwait
jns
add
int
dec
repnz
add
pop
jp
in
gs
ficompl
dec
ds
jle
test
leave
js
movsl
push
popa
das
lds
inc
stos
lret
sub
cmpsl
js
push
cmp
sub
lret
cs
jo
cmp
cmc
int
frstor
rorl
lahf
adc
aam
fs
shlb
dec
sbb
and
push
mov
sbb
loop
scas
push
xor
lods
pop
fbld
sbb
lods
xchg
nop
icebp
xlat
xchg
dec
iret
mov
sub
sahf
out
aam
cmpsb
stos
lret
jecxz
mov
xchg
daa
int
xor
mov
bound
int
data16
push
leave
xchg
dec
popa
or
jp
add
int3
movsb
jecxz
das
jnp
daa
fistl
jmp
icebp
stos
push
jo
gs
in
out
mov
test
test
mov
scas
icebp
adc
scas
into
ror
mov
bound
rcll
xor
jecxz
inc
bnd
xor
pop
xchg
push
lock
xor
jno
mov
pop
into
mov
mov
pusha
repnz
rolb
sbb
iret
jnp
mov
divb
mov
dec
pusha
xor
pop
loop
or
mov
cmp
fdivrs
add
sarb
subl
jbe
xor
add
pop
mov
xorb
addl
or
lods
xchg
insb
push
adc
repnz
jns
sbb
rorl
into
in
xor
mov
sarb
in
sub
xlat
test
cmp
stos
popf
loope
jbe
sbb
stos
cli
jno
les
xor
sub
mov
lahf
clc
arpl
mov
push
sti
pop
imul
jnp
cwtl
or
mov
icebp
popa
mov
jno
mov
push
adc
rorl
inc
fstps
imul
ja
pop
sub
push
loopne
pop
nop
xor
cwtl
jne
pop
sbb
in
mov
test
cwtl
mov
adc
jg
out
les
insb
cli
loope
dec
pop
mov
mov
jne
and
sub
gs
in
stos
fcmove
push
icebp
xor
dec
and
sbb
xor
adc
cwtl
loop
dec
xor
push
pop
add
mov
cltd
sub
mov
push
cmpsl
fs
xchg
cwtl
arpl
xor
sbb
dec
mov
sti
clc
in
flds
mov
push
test
aam
out
dec
xchg
test
cmp
scas
scas
and
cmp
adc
fnop
in
into
jge
add
jg
flds
add
rclb
xchg
adc
divb
cmp
sarl
and
movsl
cwtl
data16
sbb
fcomip
sub
in
adc
add
mov
cltd
fstpt
push
and
mov
outsb
pushf
add
fildll
xchg
fwait
cmp
inc
adc
stos
mov
stc
popf
mov
pop
int
stos
xchg
xor
addr16
notl
inc
pusha
insb
rolb
xchg
and
loopne
shlb
inc
inc
flds
adc
dec
mov
repz
fldenv
fsin
mov
fsubs
out
fdivrs
push
mov
jae
ja
xor
push
jnp
fmul
scas
xchg
mov
negb
push
in
aam
es
add
dec
xchg
add
pusha
es
cmp
dec
cld
jno
adc
call
mov
mov
jo
adc
xor
or
and
arpl
or
in
mov
sti
aad
je
mov
cmc
dec
mov
movsb
push
cmpsl
fsubrs
mov
mov
push
push
cmp
lods
dec
adc
jae
jp
push
test
push
scas
xchg
mov
lret
je
scas
jne
filds
stc
in
loope
sub
das
aam
jl
test
stos
and
cmp
std
sbb
movsb
xchg
mov
add
push
inc
xchg
pop
sub
xchg
jno
pop
inc
movsl
adc
or
int3
aam
cld
roll
fisttpll
call
jl
and
stc
popa
jo
loope
fsubrs
pop
jo
lods
test
pop
mov
stos
sbbl
imul
jle
fistl
insb
mov
popa
popa
jecxz
jmp
jmp
sar
ja
sub
in
and
add
sti
mov
sub
jns
inc
test
loop
jno
rcl
push
addr16
push
push
jns
adc
sub
cmp
testb
mov
xor
xchg
mov
lret
mull
xchg
popa
leave
mov
mov
inc
in
inc
ljmp
repnz
push
cld
dec
loope
in
add
or
mov
mov
scas
xchg
sbb
add
dec
xchg
iret
fwait
outsb
jo
imul
push
jbe
push
and
or
xchg
std
cltd
adc
repz
adc
aas
dec
push
lea
mov
jg
sub
lods
loope
xor
in
xlat
jecxz
test
mov
adcb
mov
push
sub
pop
ret
mov
dec
scas
mov
in
inc
mov
loopne
fistpl
daa
mov
mov
mov
mov
iret
pop
mov
pop
dec
fidivs
jae
test
arpl
leave
mov
mov
cltd
and
and
in
scas
or
je
mov
arpl
mov
jl
xchg
std
cs
fbld
cmc
xor
repz
incl
mov
or
sbb
jae
into
cmp
mov
retw
cmp
mov
xchg
adc
pop
in
adc
xor
sti
cmpsl
mov
leave
mov
mov
adc
nop
sbb
push
js
inc
lret
lds
in
mov
mov
jno
lea
lock
out
ds
jbe
cmp
pop
add
mov
mov
ficomps
inc
popa
add
dec
fucomp
js
lahf
mov
cmpsl
daa
sbb
mov
jg
shrl
ret
push
call
fmuls
ds
popa
and
or
iret
imulb
arpl
scas
test
push
dec
xchg
mov
add
orb
mov
pop
into
int3
js
or
cmpsl
inc
push
hlt
or
or
push
jmp
lret
mov
int3
insl
cmp
std
orl
inc
std
aad
jmp
add
lret
cmp
sbb
push
sbb
jle
inc
popf
mov
cmpsb
clc
adc
push
pop
xchg
xor
xchg
scas
push
adc
in
ret
popa
mov
dec
sbb
and
jg
dec
fists
out
fcoms
loope
pop
dec
fistl
sar
das
jle
xor
push
inc
sbb
pop
and
jl
leave
stos
dec
and
sub
flds
lock
outsb
pushf
or
pop
jne
dec
das
mov
mov
out
les
rorl
fidivs
mov
xorb
adc
jb
adc
in
jg
push
lods
into
cmp
dec
mov
sub
push
mov
dec
mov
aas
jmp
push
xchg
mov
scas
icebp
leave
scas
or
mov
push
sbb
add
add
clc
mov
pop
push
pop
or
xor
dec
sub
in
insb
cmp
xchg
ret
pop
inc
xorb
mov
sub
mov
xchg
or
repz
and
pop
jo
dec
in
add
mov
ljmp
push
daa
xor
pop
cmp
imul
jo
pushf
out
imul
jle
jl
dec
mov
mov
std
dec
xchg
mov
and
daa
pop
mov
mov
es
push
js
movsb
jle
adc
cli
ret
and
xor
sub
arpl
int
mov
ficomps
cmp
out
out
cmpsl
adc
leave
mov
dec
or
or
out
cmp
mov
dec
adc
repnz
cwtl
dec
aam
inc
mov
cs
rolb
mov
jl
daa
test
mov
or
push
xchg
jge,pn
dec
and
outsb
push
bound
dec
jbe
out
xor
xor
pop
lock
cmp
aaa
or
stos
cmp
xchg
fs
push
adc
lods
cmp
pusha
out
outsb
push
add
insb
stos
outsl
add
daa
je
push
mov
shll
rorl
sbb
inc
mov
test
mov
xor
and
cwtl
inc
js
add
sbb
mov
fs
pop
and
movsl
ds
outsl
cltd
fistps
clc
xor
cwtl
js
mov
std
mov
pop
insl
adc
hlt
mov
mov
dec
xor
dec
inc
mov
mov
push
mov
mov
mov
inc
inc
xchg
and
xchg
test
push
mov
in
ret
aam
xor
jg
mov
mov
cs
xlat
mull
cmp
orb
and
pusha
add
scas
out
mov
pop
adc
add
inc
iret
inc
lock
sbb
out
jmp
sbb
mov
push
lods
xor
sbb
xchg
mov
fnclex
sbb
imul
or
nop
xchg
cs
add
es
cmp
js
nop
test
sahf
loope
jle
pop
mov
stc
shrl
loop
cli
ljmp
hlt
pop
adc
cmc
jecxz
rcrb
push
cmc
lcall
push
sbb
push
inc
push
pop
push
adc
and
rol
mov
xor
std
xchg
or
stc
sbb
lret
cmp
cwtl
das
jg
xor
hlt
and
lock
ljmp
imul
xchg
xchg
fisttpll
mov
sbb
sbb
xor
sub
jp
flds
inc
cmc
pop
add
add
mov
pop
aad
adc
dec
mov
add
jns
mov
jnp
test
xlat
aas
or
out
out
mov
mov
outsb
ret
jmp
aaa
jl
push
adc
push
and
mov
outsb
in
or
lods
insl
mov
add
jns
xchg
stos
sub
pusha
jecxz
int3
pop
jge
adc
popa
out
xchg
inc
mov
pop
mov
movsb
dec
leave
rorl
jo
loope
sub
pop
mov
fidivrs
push
push
lock
sub
js
adc
dec
cmp
es
cmp
xchg
push
cmc
ja
scas
pushf
sbb
jmp
or
ret
mov
and
cltd
cmp
xchg
mov
cli
sub
adc
sbb
cmp
movsb
andl
arpl
fimull
lcall
sub
rorb
rorb
notb
test
bound
jle
push
pop
psrad
cmp
out
add
es
xor
sarb
or
dec
faddl
insb
loope
cmpsl
sbb
lahf
sbb
xchg
aam
ljmp
cmp
dec
out
mov
loopne
xchg
push
fnsave
xchg
jae
pop
out
call
push
sub
pop
movsl
and
loope
icebp
adc
lcall
xorl
aam
xor
ds
cmp
jle
popf
repz
insl
mov
mov
adcb
dec
mov
call
add
xor
data16
mov
jge
fisttpll
in
and
or
jmp
and
ja
in
out
dec
pop
lret
jg
dec
jg
pop
shl
movsb
mov
mov
add
push
sbbb
neg
sub
fnsave
insl
stos
inc
into
add
xor
loopne
pop
adc
ds
mov
pop
test
into
movsb
outsb
pop
push
scas
sbb
in
fisubl
sbb
shlb
stc
loope
ljmp
test
push
xchg
aas
icebp
mov
jbe
andb
scas
push
mov
sub
js
jmp
adc
in
fucom
jb
enter
shll
imul
mov
ret
idivb
incl
jns
xor
mul
pop
dec
mov
cwtl
mov
ja
and
shll
pop
push
in
or
jp
hlt
inc
scas
pop
jle
mov
dec
int3
xor
es
xor
dec
fs
cmp
adc
add
fstps
pop
aad
addr16
dec
in
out
flds
das
inc
cmp
mov
pop
loop
or
mov
sbb
pop
inc
bound
sahf
stos
sbb
pop
lahf
jge
pop
dec
xor
inc
jp
cmp
daa
sub
in
enter
gs
jmp
insl
mov
or
add
mul
dec
inc
push
repz
out
les
push
mov
test
mov
repnz
fsincos
rcrl
push
mov
mov
add
roll
shrb
xchg
test
mov
jge
xchg
push
cmp
pop
stc
repz
or
inc
sbb
daa
xor
movsb
xchg
pop
das
pop
xchg
jo
bswap
jnp
cmp
add
cld
insb
pop
cltd
lea
inc
xor
rorl
loop
shlb
loop
mov
or
fs
push
pop
ret
adc
push
sbb
data16
mov
sti
pop
sbb
pop
testb
lods
rcl
pop
jbe
stos
shrb
dec
jl
xlat
je
push
adc
mov
mov
clc
jo
sub
sub
sbb
mov
lea
lahf
adc
xchg
push
or
pushf
push
arpl
addr16
std
cmp
loopne
fcoms
jno
jb
mov
jb
popa
xchg
jl
jmp
rol
dec
sbbl
mov
ret
push
fs
rcll
jae
jns
nop
inc
outsl
int3
mov
in
sbb
into
mov
leave
push
mov
mov
xchg
or
or
fmuls
jns
lret
xchg
aas
cmp
sub
inc
pop
int3
pop
jbe
jns
lret
jae
fsubrs
dec
fisubl
cmp
dec
inc
sub
add
imul
movsl
mov
mov
leave
les
popf
lcall
popf
pushf
pop
sti
adc
jb
jp
inc
shr
xchg
dec
adc
daa
ds
loopne
pop
mov
mov
cwtl
or
sahf
inc
aam
and
mov
les
outsl
mov
pop
movsl
les
jne
cmp
mov
xor
sub
push
cmpsl
cmpsb
stos
inc
xlat
bound
daa
aam
mov
sub
sbb
fstl
jae
or
or
sub
sub
in
fldt
pop
fsubrp
sub
or
fs
pop
sti
lret
xor
dec
cmp
aaa
repz
pop
mov
popf
enter
fidivl
push
xchg
and
sbb
mov
adc
sub
add
loope
push
enter
dec
jmp
mov
inc
stos
dec
ret
negb
repnz
push
xchg
mov
inc
or
daa
movsl
inc
dec
mov
pop
jecxz
cmpl
mov
add
mov
inc
shl
pop
mov
add
xor
aaa
lahf
adc
stc
aaa
sbb
add
in
popf
cmpsl
fildll
fldenv
mov
inc
nop
lods
es
sbb
dec
pop
and
add
int3
sbb
push
movsb
fisubl
add
xor
and
sub
inc
stos
add
icebp
inc
scas
fcmovnu
ret
mov
jne
push
dec
arpl
mov
and
or
ret
fbld
cmp
xchg
add
pop
mov
lock
pop
mov
push
jns
cmpsl
loopne
push
mov
test
insl
imul
mov
mov
push
xor
dec
adc
lcall
pop
sbb
push
jmp
cli
pop
gs
notb
sahf
daa
cs
lock
ds
stos
xchg
jp
lret
jecxz,pt
push
sub
adc
and
fldcw
les
xorl
repz
out
cmc
cmp
bound
adc
aaa
imull
mov
mov
arpl
jge
lret
xorl
mov
arpl
xor
xor
fdivrl
loop
pop
bound
or
lret
ret
dec
hlt
adc
sbb
or
punpckhwd
rorb
push
push
lods
dec
add
popl
dec
jge
test
andl
push
lahf
repz
or
and
xchg
cmp
ja
lret
popf
jl
jmp
or
jg
pop
push
push
fsts
jmp
or
jo
mov
jge
cld
stos
repnz
je
nop
inc
mov
mov
cmp
xchg
jae
sbb
mov
jns
scas
push
xchg
dec
iret
cmp
mov
dec
pop
push
mov
jg
cmp
arpl
jp
rcll
cmp
cmp
ds
aad
mov
mov
movb
fmull
int3
sbb
pop
mov
sub
xor
mov
out
divl
lea
jg
fadd
xchg
ja
inc
cmp
mov
outsb
std
pop
dec
bound
jp
inc
ljmp
ds
fwait
adc
ds
fistpl
outsl
je
movsb
push
pushf
insb
hlt
add
cmp
jle
mov
ljmp
out
sbb
and
into
fcos
mov
jge
aam
mov
pop
inc
jns
fimull
mov
enter
sub
out
rolb
fiadds
sti
add
daa
inc
adc
clc
or
ljmp
sbb
xchg
xor
mov
fstpl
jbe
pop
xor
lret
lds
aas
mov
xchg
push
and
jns
cmpsb
xchg
push
inc
push
imul
xchg
inc
or
jne
lret
scas
sbb
loopne
pop
add
out
cmpsl
test
ljmp
cwtl
add
dec
mov
cmpl
sar
aad
ret
in
mov
gs
mov
lret
mov
sub
adc
adc
jns
test
cmpsl
pop
inc
sub
jl
xchg
mov
xchg
jge
mov
cmp
insb
mov
pop
mov
das
or
mov
out
push
rcll
and
test
pop
add
insl
call
lret
adc
xchg
mov
push
mov
mov
into
loopne
push
ret
call
jmp
sahf
das
push
xor
xchg
push
or
fsubr
test
push
push
pop
ret
imulb
mov
out
loope
mov
int3
mov
les
les
jnp
push
stos
jno
cld
push
mov
test
pop
and
pushf
mov
scas
iret
inc
xchg
ret
mov
cmp
fists
repnz
and
xor
xchg
jae
addr16
in
loopne
inc
jnp
jl
inc
lahf
cmp
or
jg
je
out
repnz
add
fs
fwait
in
sbb
push
mov
push
push
filds
dec
cmp
outsb
test
scas
sub
sub
cmp
sub
into
jl
xor
mov
jb
stos
mov
mov
movsl
sbb
jmp
aas
sbb
mov
mov
adc
daa
stos
pop
data16
push
lock
xor
xor
ficoms
insb
orl
sbbb
in
push
jecxz
push
add
push
inc
testl
ret
push
jbe
push
dec
cs
pop
movsb
ds
out
insl
pop
clc
es
pop
sarl
push
lret
call
cmp
and
xchg
sub
push
sbb
pop
lahf
lret
iret
sub
aaa
scas
mov
out
add
jnp
mov
xchg
shll
gs
bswap
dec
loopne
or
je
cmp
sub
adc
mov
and
in
push
xchg
or
sub
and
aaa
cmp
add
arpl
mov
pop
add
mov
jo
jl
sbb
repnz
shll
addb
outsb
insl
fdivs
pop
jne
mov
jae
sbb
sub
enter
cmp
add
xchg
jle
mov
test
add
cmp
dec
cltd
jb
lods
fdivrl
scas
push
pop
jg
outsb
js
fcomps
leave
das
das
mov
data16
aaa
pop
addr16
sti
push
inc
and
test
cld
jg
lods
into
mov
and
cmp
dec
and
cmp
and
add
dec
add
push
sbb
sub
inc
std
rclb
cmp
imul
fsubrl
es
in
inc
push
jg
fildl
cmp
xor
arpl
add
cmp
cmp
sbb
insl
xor
fidivl
loop
xchg
push
mov
loopne
mov
mov
jbe
cmp
mov
in
aam
xlat
icebp
xchg
xlat
dec
int
cmp
or
addb
popl
divb
adc
movsb
and
divb
push
out
ret
subb
pop
roll
dec
push
adc
dec
xchg
xor
nop
stos
and
mov
dec
sbb
out
shrb
outsl
pop
add
sub
mov
mov
ss
mov
pop
aam
mov
aaa
sub
jmp
orb
sbb
aam
jmp
mov
stos
dec
mov
test
inc
aas
pop
shlb
int3
jo
inc
je
es
cmpsl
lcall
jl
das
ja
scas
lea
mov
call
lock
mov
ret
movsl
cmp
loopne
ja
decb
xor
mov
mov
popa
pop
xchg
fs
xchg
mov
out
mov
cld
and
xor
add
movsl
outsb
xor
bound
jno
aas
pusha
adc
xlat
or
scas
push
jl
shlb
adc
cmp
test
in
push
sub
xor
jne
xor
lods
pop
roll
dec
lods
bound
repnz
enter
lds
movsb
or
inc
repz
mov
in
cmpsl
out
test
add
ja
outsl
push
xchg
lret
faddl
xor
dec
adc
mov
stos
push
xchg
popl
aad
popa
cmpsb
imul
adc
fwait
movsl
push
mov
imul
lret
rcr
jbe
lods
aas
sbb
sub
ss
mov
jecxz
cmp
mov
push
jle
aam
adc
mov
or
add
xchg
cmc
xchg
jb
pop
out
push
cmp
xchg
xchg
imul
rcr
std
rclb
or
std
push
inc
ds
inc
dec
add
adc
push
popa
jle
arpl
neg
repz
mov
das
movl
shlb
ficompl
xchg
mov
test
movsl
popa
scas
pop
xchg
mov
cltd
mov
jns
aam
jle
pusha
rolb
sbb
cmp
and
leave
xchg
imul
pop
mov
mov
mov
jnp
xor
filds
dec
aaa
cs
push
ja
clc
insl
pop
jp
daa
jo
aaa
dec
mov
pushf
sub
dec
aas
sub
adc
mov
ss
and
mov
sub
mov
imulb
add
test
xchg
mov
sub
xchg
or
cld
fsubs
movsl
mov
lds
lock
in
scas
xchg
sti
jne
test
fsubrs
lahf
dec
and
push
dec
sub
dec
ret
ja
fisttps
pop
mov
mov
and
ror
imull
in
out
in
mov
lods
scas
stc
outsl
push
incb
hlt
pop
dec
or
call
in
push
das
roll
add
inc
xor
or
adc
std
pop
call
push
jp
fcomi
shll
sbb
xchg
xor
dec
xchg
scas
incb
mov
cmp
imulb
rcll
jo
daa
icebp
jno
mulb
cmp
sub
aad
push
rorl
cli
aam
inc
pusha
fldt
xor
sbb
mov
nop
jp
and
in
and
sbb
or
adc
fwait
inc
call
pop
into
add
sbbb
and
test
xor
and
mov
fdiv
adc
popaw
popa
int3
mov
fldt
and
in
popa
ja
iret
mov
ror
pop
pushf
jmp
lods
es
test
stc
enter
icebp
test
dec
lods
mov
fisubl
int
or
push
or
push
inc
pop
sub
ret
loope
bound
mov
sub
push
push
popaw
pop
dec
lods
cs
cmp
xchg
pop
xor
xorl
sahf
leave
sbb
or
dec
jne
mov
subl
mov
scas
filds
or
inc
xor
clc
ficoml
cmpsl
popf
or
popf
scas
mov
out
cli
add
out
inc
test
push
mov
dec
dec
xchg
mov
pop
divb
mov
mov
in
aad
adc
in
jo
push
xor
lds
imul
push
inc
stc
fidivrs
pop
dec
cmp
call
mov
inc
push
jbe
test
xlat
lock
fcompl
and
ret
in
dec
ss
push
test
repnz
pop
pop
push
hlt
loope
insl
out
stos
sahf
jmp
cmp
jbe
idivl
jle
mov
xor
sti
xchg
xchg
mov
and
adc
sub
fidivrs
int
scas
repz
fistpl
or
pop
mov
mov
lea
loope
cmp
jo
subb
mov
repnz
roll
push
xor
dec
dec
aas
sbb
sub
cwtl
mov
or
cmp
push
jno
loop
mov
dec
push
scas
outsl
call
fimuls
out
xchg
mov
fidivl
jnp
lods
ss
adcl
jnp
stos
imul
and
mov
out
cli
int3
fdiv
daa
cmpsl
mov
cmc
dec
inc
xor
in
xchg
in
adc
sbb
int3
cmp
and
enter
inc
mov
call
sbb
adc
outsl
fstpl
add
std
jo
inc
add
out
daa
push
sbb
mul
mov
rcl
jne
push
and
push
scas
hlt
das
push
dec
ret
sbb
sbb
popa
aam
and
loop
cwtl
pop
pop
mov
ror
jge
popa
cmp
ret
xchg
loope
fistps
or
loop
inc
les
sub
call
pop
sub
lds
or
movsb
pop
cwtl
in
test
loope
add
add
or
lds
mov
loope
rorl
fcoms
or
ljmp
movsb
and
lahf
je
cld
inc
lret
js
sub
mov
repz
je,pt
and
ret
lock
addr16
sbb
mov
pusha
in
mov
cmp
out
dec
scas
dec
mov
dec
aaa
sub
jno
dec
xchg
insb
push
cmp
test
dec
cwtl
cmpb
pop
lods
not
ficoms
cmp
stos
sarl
lods
xor
out
xchg
pop
mov
ss
pop
xorb
cwtl
pop
push
and
imul
repz
jo
xchg
pop
test
mov
or
sub
or
mov
into
dec
or
sti
leave
scas
idivl
cmp
xor
fisttpll
pop
in
add
cmpl
xchg
sahf
adc
les
sub
movsb
js
dec
dec
add
dec
hlt
stos
mov
lods
out
pop
outsb
cmpsl
adc
or
lods
push
adc
loope
sbb
mov
jo
cwtl
lock
xchg
repz
mov
test
movsl
adc
push
dec
scas
jno
mov
ret
inc
push
mov
mov
imul
cli
lret
mov
jecxz
mov
pop
or
cmc
test
aas
icebp
loop
fs
mov
and
mov
outsl
cmp
mov
push
xor
jg
repz
jl
pop
fwait
into
dec
cmp
dec
sarb
mov
cmc
and
es
xchg
or
cmp
mov
add
jns
pop
pushf
pop
das
sbb
in
subl
lret
out
or
call
sbb
enter
dec
pop
into
test
arpl
mov
lret
pop
or
xchg
testl
test
ja
inc
xchg
jge
pop
pop
or
add
das
xor
jae
push
mov
pop
in
int
push
mov
mov
popa
mov
cmp
lahf
or
sbb
sub
ret
not
push
lods
xorb
jno
sbb
test
pop
or
xorl
push
jl
xchg
mov
cmp
adc
xchg
add
mov
pop
mov
inc
clc
pop
adc
leave
push
ss
sbb
sbb
add
lea
pop
ret
lret
jbe
dec
pop
repz
aaa
sub
bound
mov
sub
in
mov
pop
mov
pusha
xor
aaa
fs
aaa
bound
lret
dec
sub
outsl
int3
popa
pop
shl
aad
dec
inc
xchg
out
jb
sbb
mov
nop
shll
mov
and
loopne
pop
imul
testb
mov
hlt
imul
clc
push
fwait
jp
rep
lahf
mov
sbb
lods
sbb
jle
xor
mov
aam
xchg
test
sub
adc
adc
or
cwtl
cltd
cmpsb
aaa
dec
push
in
int
or
mov
ja
inc
fistpll
dec
lcall
jb
out
sahf
sbb
and
shrb
xlat
adc
loopne
xor
cmp
cmp
or
mov
xor
shl
pop
testb
cmp
sahf
mov
or
push
inc
xor
out
adc
and
les
cld
xchg
gs
mov
pop
add
mov
xor
and
jle
pop
das
mov
xlat
pop
push
rcr
test
fwait
movsb
push
mov
jle
subb
jecxz
in
mov
or
add
in
in
xchg
pop
push
js
pop
test
sub
aas
mov
mov
jnp
dec
lods
sbb
jb
pusha
stos
lahf
sub
xchg
lea
fwait
negl
fadds
mov
test
inc
sub
test
dec
push
jb
scas
pop
mov
jb
mull
lods
int
cmpsl
test
movb
sub
push
ja
les
mov
lret
repnz
lret
jmp
sahf
cmp
pop
and
jp
push
adc
push
int3
stos
xor
in
std
das
and
out
dec
outsl
lock
test
stc
xorl
inc
incb
iret
dec
mov
ljmp
shll
lcall
or
leave
mov
cmpsw
pop
sarb
sbb
movsb
pop
fildl
js
jnp
lock
repz
cmpsb
call
aaa
adc
xchg
fimull
ret
pop
imul
das
mov
fadd
and
jge
xchg
lret
mov
mov
aam
push
jge
and
int3
jo
cmp
adc
mov
add
sti
aas
out
cs
inc
icebp
or
xor
test
jmp
xlat
mulb
xchg
dec
cmp
mov
std
cmp
or
cmpsl
bound
push
add
nop
addr16
divl
mov
xchg
adc
scas
testl
xchg
mov
stos
movsb
shrb
loopne
ja
xor
lds
sub
filds
xor
scas
jo
out
rol
scas
xchg
push
xor
and
add
cmc
pusha
inc
or
nopl
stc
sub
je
mov
jmp
adc
popf
fwait
in
lods
das
push
cwtl
test
xor
and
pop
pop
cltd
mov
mov
push
bound
lret
popf
mov
or
sbb
in
xor
xor
xor
lcall
ret
push
sbbl
scas
cmpsb
popa
bound
gs
scas
sbb
jns
out
loop
pushf
or
sbb
push
cmp
xor
sbb
mov
popf
fisubl
fldl
pop
sub
push
inc
jne
addr16
insb
shll
cmpsb
xchg
xchg
mov
fnstcw
in
xchg
sahf
add
mov
push
xchg
mov
inc
jmp
in
pop
test
dec
insb
jge
fisttpll
mov
les
fs
cmp
lock
icebp
sub
or
mov
fcmovb
into
and
das
jb
xchg
je
imul
push
jb
ja
jp
aad
scas
dec
lcall
or
cld
mov
jbe
mov
adc
lahf
repnz
jmp
das
gs
call
dec
fsubs
cli
pop
test
lds
xor
or
adc
adc
cld
push
imul
mov
sub
or
sahf
sahf
add
adcb
mov
jmp
aam
sub
lcall
sbb
decb
sub
mov
mov
fdivl
mov
sub
push
cmp
adc
insb
shrl
outsb
les
bound
adc
pop
push
and
adc
mov
testb
mov
pop
sub
mov
andb
jno
sub
into
push
jl
lret
loop
jle
push
adc
pop
in
mov
out
int3
xchg
mov
mov
cltd
insl
pop
sbb
dec
pop
loop
mov
std
inc
jl,pn
cmpl
test
or
cmc
xchg
mov
daa
xchg
and
mov
dec
xorl
je
dec
icebp
js
jmp
push
pop
cmc
sahf
pusha
pop
cwtl
fsub
lods
out
pop
gs
arpl
imul
cmpsb
xchg
arpl
push
cmp
mov
into
cmp
inc
addr16
loop
pop
leave
mov
and
fisubs
lea
push
cwtl
rol
sub
in
jns
cli
fldcw
mov
sub
xor
xchg
cmp
and
sbb
fnstsw
cmpsl
out
jo
dec
fcoml
outsl
aaa
fld
bound
iret
insl
lahf
lahf
mov
bound
popa
imul
aad
je
test
jmp
aad
in
inc
icebp
dec
xchg
das
push
lea
push
mov
out
lds
imul
dec
sub
pop
dec
addb
dec
push
lds
pop
pushf
aam
push
out
les
inc
pop
call
repz
cmp
in
cmp
or
jnp
jl
test
mov
lock
inc
dec
jns
addr16
shl
loope
push
jp
ret
and
cltd
mov
daa
sub
aad
shl
xchg
cmpsl
adc
ds
xor
mov
lret
divb
add
mov
push
jmp
sahf
mov
mov
mov
cli
call
fistpl
xchg
and
mov
outsb
pop
pusha
roll
icebp
icebp
add
or
test
shlb
std
sub
fbstp
into
fmuls
jge
cld
xchg
scas
cmp
mov
flds
sub
into
jge
cmc
int3
mov
out
jnp
push
pop
repnz
in
cmp
sahf
lahf
cmp
or
sub
jno
mov
jle
push
cmp
push
scas
gs
dec
mov
fsubrp
les
outsb
inc
xchg
je
pop
sbb
push
mov
and
pop
cwtl
insb
jp
xchg
sahf
out
xchg
push
addr16
sub
mov
rolb
xor
adc
in
das
jle
lods
ret
xor
lock
add
bound
negb
mov
in
ret
or
enter
mov
push
pop
jl
dec
bound
fcomps
scas
dec
mov
ljmp
rcrl
cmpl
into
lea
sub
cmpsb
shlw
popa
fmul
divb
std
call
cmpb
dec
sbb
imul
loope
call
icebp
ret
mov
test
inc
dec
mov
sarb
and
test
xchg
aam
hlt
popa
push
xor
push
jge
dec
jge
xchg
cld
mov
aad
hlt
dec
adc
mov
mov
es
es
mov
sbb
mov
push
or
insb
in
fsubl
pop
mov
popf
sti
popf
fwait
mov
jb
or
cmp
and
rcl
hlt
fwait
pop
int3
aad
lds
aaa
lea
divb
lock
lret
les
dec
ljmp
mov
je
cld
adc
decb
mov
rol
or
or
dec
mov
or
jp
ficompl
ficoml
ret
xlat
aaa
xchg
lods
sbb
inc
dec
cmc
mov
xchg
sub
push
call
mov
fnstenv
movsl
sub
pop
daa
hlt
inc
mov
fsubrs
dec
inc
sub
inc
fists
jp
dec
scas
sub
push
xor
jg
mov
mov
aad
pop
mov
insb
fimuls
adc
in
scas
pop
lcall
clc
adc
and
sub
ret
or
dec
fidivs
enter
stos
pop
aaa
clc
and
sbb
xchg
xchg
in
cmp
sarl
xchg
imul
dec
ret
pop
cltd
sub
adc
adc
push
int3
add
sbb
clc
aas
test
adc
andl
add
sbb
inc
inc
shlb
mov
jb
inc
pushf
xchg
fdivrp
adc
pop
mov
aas
dec
cmp
mov
or
and
mov
xorb
or
cmp
adc
inc
test
dec
inc
sbb
mov
sbb
and
jmp
popa
sub
shl
rorb
add
and
jo
adc
mov
add
adc
rcrl
sbb
outsl
adc
adc
or
push
add
pop
ret
sub
push
sbb
repnz
scas
js
mov
or
xor
in
lret
or
lea
movswl
fisubl
cs
jle
and
xchg
dec
jp
jg
ds
sti
mov
dec
and
call
dec
add
push
xchg
cli
cmc
ficoms
ds
sub
js
gs
std
adc
aaa
jl
sti
out
mov
loopne
cmc
mov
imul
inc
mov
push
inc
ss
leave
add
push
decl
das
lahf
mov
dec
imull
repz
cmp
cmpb
xor
mov
mov
imul
into
xchg
mov
and
cmpsl
jo
cmp
adc
scas
adc
mov
das
push
aam
push
cmc
xor
add
dec
pop
fs
pop
daa
and
add
xchg
mov
pushf
lods
cmc
add
xor
or
add
imul
mov
insl
stos
dec
bound
pop
sbb
cmp
push
rorb
cmc
cli
inc
mov
and
or
fdivr
sbb
repnz
mov
and
popl
jb
es
aam
test
ret
aas
sti
icebp
sub
mov
iret
xchg
int
inc
dec
jl
sti
sti
jno
and
sbb
xchg
or
push
dec
mov
jle
jmp
pusha
dec
or
popf
lret
std
pop
daa
pop
sbb
scas
pop
mov
out
loop
sbb
lret
dec
mov
divb
fs
lret
pop
daa
cltd
icebp
mov
movsb
dec
icebp
mov
add
lods
ret
lods
and
or
sub
add
stos
imull
mov
dec
sbb
push
shll
or
xchg
shrd
sub
ds
scas
sbb
call
test
add
outsl
in
add
xor
mov
mov
bound
js
push
negl
mov
je
out
push
adc
mov
jg
shll
test
and
ror
sub
sahf
xchg
mov
pop
arpl
out
push
inc
fistpl
cli
sbbl
xchg
pop
xor
sub
cld
push
inc
shrb
mov
fwait
faddl
mov
adc
addb
xchg
cmpsl
aas
les
pop
mov
add
insb
pop
mov
stos
outsb
sbb
cltd
mov
iret
xchg
add
in
das
sahf
lcall
add
mov
pop
dec
pop
pop
push
add
test
mov
mov
movhps
sub
popf
xchg
outsl
inc
mov
lds
cmp
test
xchg
mov
pop
adc
or
popa
fsubrl
mov
loopne
add
mov
jmp
inc
pop
ds
adc
jae
subb
push
pop
cld
jl
imul
dec
mov
pop
rolb
adc
xchg
xchg
fldcw
sub
push
inc
lcall
daa
push
int
pop
sub
imul
loopne
dec
push
sbb
aas
out
popf
ss
jb
sti
add
mov
push
push
gs
ljmp
cmp
pop
mov
fildl
ss
mov
test
inc
fwait
std
and
test
jecxz
shrb
mov
scas
mull
pop
das
cltd
cmc
sbb
jno
imul
data16
lret
ret
mov
and
push
xlat
fsubr
mov
cmp
or
sbb
sub
and
inc
sub
sti
call
imul
xlat
in
mov
mov
push
push
insb
push
arpl
jb
xchg
jge
lds
xor
xchg
dec
addr16
shlb
xor
and
std
pop
push
sbb
push
fs
leave
je
add
cmp
jne
inc
sbb
mov
or
sbb
cs
in
lahf
outsb
jb
mov
mov
roll
lret
pop
aad
mov
notb
ljmp
xor
std
cmpsb
outsb
hlt
in
popf
cmc
inc
outsb
lret
sub
inc
loope
test
cwtl
lods
jno
xchg
pop
sbb
sub
aas
out
negl
push
jg
jne
xchg
xor
adc
das
sub
loope
dec
ss
jo
sbb
and
xchg
jo
sub
dec
dec
mov
scas
sbb
insb
push
push
pushl
mov
or
shrb
testb
adc
aaa
jmp
les
outsl
das
stos
adc
jecxz
mov
xchg
ret
cmp
inc
andl
jp
into
sahf
cmpsl
data16
xchg
dec
std
out
hlt
aas
xchg
dec
or
dec
dec
xor
push
cmp
popa
inc
mov
xor
mov
ljmp
add
arpl
sbb
rcrb
pop
push
cltd
jg
and
fimull
shll
mov
ficoms
adc
xor
scas
incl
push
stc
pop
repnz
sti
or
jns
out
pop
xlat
lret
push
loopne
clc
insl
mov
rorb
cmp
push
pop
loopne
mov
mov
bound
out
arpl
cmp
sub
je
sbb
rclb
test
rorl
xchg
xor
jno
popf
je
rclb
mov
das
mov
nop
jno
jle
cmp
in
inc
lahf
movb
dec
pop
jmp
jbe
repz
xchg
ret
mov
test
ret
inc
mov
xor
cmc
sub
push
or
sub
ss
sti
cmpsb
nop
mov
lret
sbb
movsl
pop
shrl
rolb
ret
aas
dec
or
lods
add
and
stos
mov
push
pop
aad
adc
lea
pop
push
cmp
rcrb
adc
shrb
sti
add
out
js
mov
bound
or
into
mov
ljmp
pop
cmp
lahf
lea
or
xorb
outsl
test
cwtl
push
ret
scas
xlat
call
mov
jb
ja
leave
loop
andb
xchg
movsb
adc
and
outsl
rcll
and
loopne
stos
fstpt
mov
roll
fucom
andb
xor
test
or
rorb
roll
cld
lods
adc
push
xlat
push
mov
xor
out
sub
push
dec
xchg
fildl
les
rclb
lods
cmp
mov
lret
add
out
mov
adc
subl
in
fldenv
xchg
daa
shll
push
jmp
lcall
bound
xchg
popa
mov
pop
mov
jecxz
adc
into
cmc
out
fstps
jbe
mov
mov
and
addl
rcrl
add
push
jecxz
inc
push
call
jecxz
sbb
imul
cmp
lea
in
popa
xlat
dec
sub
pop
into
sbb
daa
lds
movsl
sbb
sub
insl
in
fldt
lods
lcall
jecxz
sbb
xlat
pop
scas
mov
sbb
xchg
dec
or
out
js
pop
fwait
add
pop
icebp
adc
test
cli
mov
inc
pop
xchg
mov
mov
pushf
das
fsubl
imul
repnz
cmp
cmp
in
dec
mov
sub
mov
hlt
jmp
lea
cmp
and
outsl
cwtl
sub
fmull
loop
test
rcll
jle
stc
xor
push
push
jmp
mov
lret
push
xor
mov
es
inc
syscall
pusha
inc
inc
out
jg
or
adc
mov
push
jae
push
mov
in
aas
xor
cs
or
dec
or
jp
pop
in
xchg
lock
and
add
aam
in
lds
xor
testl
mov
jnp
sarb
jle
pop
mov
jg
fdivl
xchg
xchg
pop
out
dec
inc
sub
xor
test
inc
lods
sbb
rcll
inc
xor
dec
mov
inc
test
je
sub
rclb
adc
mov
inc
rol
mov
or
fadds
test
imul
add
loopne
cmp
out
mov
xor
inc
loopnew
call
xchg
sti
xchg
dec
mov
adc
imull
test
and
mov
cmp
mov
test
repz
xchg
push
es
fbld
andl
in
dec
scas
fistpll
bound
loopne
push
mov
push
enter
push
jmp
out
sub
dec
mov
sub
sahf
rorl
nop
inc
dec
repnz
dec
xor
cmpsl
dec
pusha
jp
popf
mov
dec
shl
dec
test
add
push
sarl
inc
cmp
imulb
dec
push
push
pop
nop
test
push
or
fidivs
fnstsw
xchg
cltd
push
push
fs
int
or
sbb
nop
stos
lcall
cmp
insl
arpl
adc
push
inc
pop
push
jmp
daa
in
decb
push
outsl
pop
inc
repz
ljmp
and
push
pop
mov
push
sbb
psubusb
loope
pop
inc
dec
cmpsb
dec
mov
out
mov
sub
insb
inc
adc
jmp
sub
sti
mov
dec
adc
cmp
mov
sti
rol
jo
pop
push
fs
xor
lods
pop
ret
adc
lock
testb
lds
dec
repz
xchg
cmp
fildl
into
sbb
sbb
fdivl
mov
xor
pop
jne
push
aaa
or
mov
mov
add
ljmp
cmp
mov
jbe
jmp
nop
and
aam
sbb
and
in
imul
sbb
aam
cmpsl
xchg
xor
cld
or
or
lods
adc
mov
push
filds
or
push
jno
ljmp
mov
jbe
cmp
lods
dec
lods
sub
sub
ja
mov
cmc
in
test
aad
test
mov
bound
cmpsl
mov
pop
xchg
sub
mov
shl
sub
add
in
push
aad
add
sar
adc
mov
repnz
jno
pop
addb
pop
scas
in
and
stos
icebp
lods
and
push
fcom
iret
sub
shrl
mov
and
fsub
or
sub
mov
ret
cwtl
push
dec
pop
fs
cmp
push
push
push
push
pop
imul
sbb
add
jo
jl
cld
mov
outsl
add
loope
dec
fs
mov
ja
ljmp
mov
pop
push
xor
hlt
mov
cli
xlat
xor
dec
test
fsts
and
mov
jl
mov
sub
cmpsl
cmp
scas
fstl
lds
shll
inc
mov
jle
sub
fnstenv
sbb
mov
cwtl
bound
fwait
jl
bound
sti
mov
mov
jne
or
movsb
sub
adc
sub
dec
aam
adc
lea
xor
dec
lret
rorl
and
xchg
add
push
push
pusha
push
mov
int3
fildl
jge
jg
aaa
sti
or
idivl
jge
jae
sbb
loopne
xchg
loopne
in
imul
sahf
push
xchg
or
movsl
sub
mov
cmp
sub
mov
inc
push
inc
xor
lahf
jle
pop
adc
jp
cwtl
cmc
mov
gs
mov
sub
int
or
mov
data16
daa
adc
sarl
test
and
scas
adc
xchg
inc
push
jae
cld
pop
adc
pop
jns
mov
mov
push
idivl
or
sub
xchg
mov
or
and
adc
fs
xor
and
fildll
mov
dec
pop
out
push
xor
shld
cmc
sub
je
test
xor
mov
adc
leave
sub
xor
push
fsubs
pop
add
mov
push
add
or
xchg
add
out
push
cmp
je
xchg
aam
jmp
popf
arpl
ffree
sbb
mov
pop
xchg
stos
cmpsb
xor
rcrl
cmc
and
cmp
sbb
imulb
sti
sbb
pop
pop
dec
push
test
pop
nop
xchg
loope
xor
mov
dec
jecxz
jmp
cwtl
lods
sub
cmpsb
and
pop
pushf
inc
xchg
mov
iret
inc
jge
or
outsb
cmp
jl
add
adc
aaa
add
sahf
push
enter
pop
ds
jns
lahf
mov
push
fcompl
or
xchg
popa
mov
dec
dec
and
push
and
mov
into
insb
cmc
popa
add
shll
mov
leave
pop
jo
test
push
repz
cmp
mov
cmp
test
adc
adc
pop
sbb
mov
cmpsb
adc
mov
or
mov
shll
in
add
out
push
inc
jg
xchg
mov
into
leave
outsb
mov
pop
cmpl
jo
or
shll
testb
loope
popf
int
decl
pop
mov
adc
sub
pushw
mov
aas
mov
rcl
add
push
das
xchg
loop
sub
mov
popa
dec
and
outsl
add
pop
cmp
insb
pop
cli
cmp
sahf
out
xlat
jb
adc
js
lock
sar
mov
mov
pushf
fdivl
cld
cmpl
rclb
inc
shl
in
sub
pop
mov
push
sbb
out
imul
in
pop
push
inc
mov
pop
sbb
push
ret
jae
jl
sub
loope
inc
inc
inc
out
jae
and
pushf
sbb
xchg
push
out
push
or
and
push
xchg
popf
jns
std
ror
cmpsl
sbb
aas
dec
aam
pop
in
push
inc
push
dec
add
lods
or
and
dec
jnp
ljmp
jo
inc
add
push
int3
jbe
icebp
add
inc
movb
mov
pop
cld
push
pop
mov
sbb
aas
in
jb
test
fdivrp
inc
push
lret
pop
dec
repnz
lea
push
push
mov
inc
test
test
add
push
sub
sub
mov
movsb
or
mov
xor
push
enter
repnz
movsb
test
jl
cli
scas
cltd
lods
and
mov
mov
arpl
mov
inc
rdpmc
xlat
scas
imul
cmp
jg
lock
and
rolb
js
xor
mov
inc
xchg
fldenv
das
insb
in
jno
cli
scas
out
lds
mov
mov
test
pop
ret
daa
aam
mov
mov
jo
cmp
ret
mov
fs
test
fs
push
adc
cmpsb
adc
xchg
rorb
push
out
push
and
inc
jmp
insl
fwait
pop
rclb
jp
nop
push
repz
jnp
add
xchg
jae
and
inc
sbb
repnz
xor
rcrl
add
ja
mov
fmuls
pusha
add
and
imul
ret
nop
or
mov
lock
dec
fmul
repnz
xor
and
mov
scas
inc
jno
sub
popf
ret
pop
pop
mov
cmp
jb
jmp
clc
sbb
ret
dec
sub
xor
xor
js
jp
mov
rcr
sbb
jmp
jno
pushf
pop
fldl
xchg
orb
cmp
mov
in
fisubrl
rep
xorb
adc
imul
insb
push
test
xor
lods
cmpsb
mov
dec
inc
fisttpl
sbb
push
and
jle
inc
cli
cmp
mov
clc
sbb
sub
inc
push
inc
jl
push
adc
popf
pop
in
inc
or
push
inc
xor
pop
testb
iret
fiadds
jp
inc
stc
push
das
and
fcmovnu
inc
xchg
push
out
pop
jmp
sarl
jle
dec
and
sbb
and
repz
in
mov
or
push
dec
and
fdivl
jl
imul
push
adc
mov
mov
xlat
mov
les
lahf
adc
inc
faddl
xchg
sbb
and
cmp
xchg
aad
xchg
push
insl
cmpsl
sbb
xchg
xchg
out
mov
or
jb
int
sbb
sub
mov
negl
sti
push
cmp
cli
mov
cmp
xlat
push
xor
jae
int
xchg
mov
and
xlat
inc
xchg
or
mov
push
negl
xchg
in
or
addb
push
jb
dec
sarb
dec
cmpsb
add
pop
lret
sbb
jge
cmpsb
sar
mov
mov
stc
add
cmp
fstpl
dec
fisttpll
sbb
fwait
jmp
mov
adc
dec
dec
std
bound
cmp
ds
jb
mov
mov
inc
loope
mov
aaa
cmpl
fwait
insb
dec
cmpsb
repz
inc
leave
test
daa
lds
inc
jg
lret
int
or
sub
push
xor
lock
sar
push
push
adc
jns
add
dec
jmp
dec
sahf
mov
xor
add
pop
lea
loopne
sti
fstpl
lret
das
out
imul
in
shlb
cwtl
int3
jg
pop
inc
nop
sub
jb
dec
lcall
or
cmc
pusha
adcl
xchg
popa
ljmp
cmp
insl
repnz
sbb
cmp
push
pop
cmp
out
mov
mov
loopne
pop
dec
setne
fsubrl
sbb
mov
es
jnp
std
jp
xchg
movsl
inc
mov
out
mov
pushf
jmp
sbb
nop
push
pusha
push
or
ss
push
mov
mov
out
jecxz
sbb
dec
inc
int3
xchg
test
std
jecxz
jle
arpl
stos
pop
out
ljmp
stos
xchg
lret
pop
test
ficompl
scas
jmp
inc
mov
out
inc
xlat
ficomps
mov
jae
inc
or
xor
sarl
dec
js
sarb
dec
cmp
shrb
aad
pop
pop
imul
out
sub
addr16
adc
imul
sbbb
mov
jns
sbb
xor
add
jge
icebp
dec
iret
into
jb
mov
mov
mov
xchg
jo
fisubrs
mov
scas
mov
mov
adc
dec
jg
call
xor
stos
es
aad
xlat
adc
push
stos
je
lret
inc
mov
adc
popf
xor
es
mov
cmp
int3
inc
jo
xchg
and
imul
sub
dec
test
mov
push
pop
out
push
subb
loopne
ss
mov
mov
inc
sub
push
fcomp
cmp
int
loop
imul
fwait
lea
add
out
nop
aad
stos
pop
in
fsubs
addr16
xchg
xchg
adc
sub
sub
loopne
les
ja
mov
daa
fcomps
sbbb
sub
mov
sti
dec
arpl
mov
loop
mov
mov
mov
xchg
test
icebp
not
rclb
pop
adc
xchg
loopne
mov
int
mov
shlb
inc
movsb
mov
jns
out
jg
mov
add
mov
push
add
cmp
or
fimuls
negl
jg
pop
push
cltd
call
or
jnp
dec
sub
lcall
int
cmpsl
push
or
mov
les
lods
sbb
stos
xchg
aas
jecxz
dec
lahf
sbb
cmp
mov
and
clc
les
mov
sbb
out
inc
nop
sahf
cmp
dec
cmpl
lcall
repnz
xchg
fwait
movsl
imul
push
cmpsb
shll
dec
cmp
cmpl
mov
and
xchg
js
mov
mov
and
movsl
cmp
jecxz
inc
pop
imul
jl
pop
pushf
ljmp
repz
shll
add
mov
xchg
inc
mov
push
and
inc
jne
lods
xcrypt-cbc
cmpsl
adc
sub
test
adc
cmpsb
mov
mov
ljmp
jp
mov
cmp
adc
jne
pop
cmp
jns
inc
push
pop
dec
fs
xchg
test
je
push
push
add
shll
sbb
and
cmp
inc
pop
ss
mov
push
inc
cmp
adc
test
pop
std
sub
pop
adc
xchg
daa
and
ljmp
fidivs
in
lds
dec
dec
xchg
sti
sbb
gs
lods
mov
mov
inc
cs
ret
adc
loop
hlt
data16
jns
jge
sbb
dec
testl
or
mov
or
dec
push
add
and
or
faddl
repz
pop
sub
std
sub
push
repz
xchg
jl
fs
fadds
inc
loope
es
sub
xlat
es
int
xchg
sbbl
leave
outsb
in
roll
sti
mov
ljmp
adc
lret
xlat
call
jo
mov
jmp
fs
jns
hlt
pusha
cmp
add
scas
ss
loope
add
or
sbb
gs
pop
loopne
and
lahf
pop
cmp
out
enter
xor
add
test
cmp
or
fnstenv
xlat
and
add
lods
xlat
ss
ficoms
inc
cmovns
and
cs
fcoml
outsl
jno
push
xchg
mov
aas
out
dec
sbb
clc
ss
pop
inc
mov
add
scas
call
lds
in
sub
inc
lcall
aas
mov
push
ret
int
push
lea
incb
jmp
pop
jp
inc
push
xchg
sub
cmp
fisttpll
push
scas
cli
idivl
insb
cs
mov
mov
not
stc
jecxz
arpl
ss
ljmp
lahf
nop
push
popa
loopne
push
inc
and
and
cmc
and
int
push
xchg
not
sti
fwait
jno
clc
gs
xor
lret
xchg
mov
xor
mov
fistps
cmpb
fstps
jns
mov
xor
xor
mov
call
imul
cs
cmp
das
cmc
clc
sti
push
sarl
mov
jb
loopne
sub
cmp
cli
dec
test
sub
jns
in
cli
adc
add
mov
in
cmpb
lret
fwait
dec
sub
push
xchg
in
subl
je
jl
cmp
es
or
cmp
insl
mov
mov
sti
repz
cmp
loop
add
mov
or
or
xor
es
roll
or
das
cli
sbb
repnz
cmp
xchg
movsb
sub
in
je
pusha
arpl
mov
pop
pop
andb
dec
pop
call
mov
subl
add
xchg
pushf
adc
mov
das
jbe
add
outsl
or
mov
cmp
icebp
mov
jnp
mov
sbb
jae
push
test
stc
mov
addb
sub
add
fwait
adc
adc
sbb
aam
rolb
int3
xor
xchg
sbb
lret
cs
arpl
les
test
cmp
push
push
pop
mov
mov
push
push
push
lcall
xlat
inc
stc
pop
mov
sub
test
hlt
aad
test
int3
fisttpll
loope
jbe
icebp
adc
inc
cmp
fdivp
frstor
inc
jne
or
xor
iret
inc
cmpsb
lods
lcall
xor
mov
xor
and
mov
mov
popa
icebp
push
sub
and
scas
jb
add
xor
out
jg
and
mov
xor
mov
fisttpl
incl
mov
push
add
sahf
inc
xchg
test
popf
or
add
jmp
adc
sbb
sarb
hlt
hlt
cmp
popf
xchg
sub
cmp
sbb
out
xor
mov
adc
push
insb
adc
aad
ja
xchg
cmc
jnp
fsubrl
loopne
test
sbb
ret
mov
jp
lcall
movsb
add
aam
cmc
xchg
in
pop
mov
sbb
ljmp
pop
andb
loop
pop
scas
jnp
jo
cmovbe
test
jle
loope
adc
adc
je
mov
pop
sub
or
mul
lods
scas
js
mov
jle
adc
adc
add
stc
add
sbb
and
xchg
cmpsb
pusha
rep
or
add
lods
nop
add
ret
sub
ret
insl
loope
leave
mov
inc
inc
pop
pop
mov
scas
ss
and
push
inc
dec
data16
repz
adc
sti
lahf
test
out
clc
lods
dec
fstps
push
sub
test
pop
cwtl
sub
cmp
inc
and
iret
in
mov
xchg
sarb
inc
in
ss
pop
ret
in
xchg
mov
xor
inc
push
cmp
out
scas
pop
test
addr16
into
mov
int3
or
stos
mov
out
test
xor
insl
xor
add
icebp
movsb
mov
cltd
repnz
dec
jge
std
loop
out
shll
xor
mov
hlt
cltd
cmp
xchg
fldenv
mov
mov
mov
mov
sbb
aas
ret
adc
ret
cmp
sub
add
xchg
sti
add
stos
movsl
xchg
cmpsl
pop
push
xchg
cltd
nop
test
rolb
lret
outsl
add
je
mov
pushl
les
lret
mov
popl
nop
xor
loope
mov
rorl
fsubrs
dec
lcall
sbb
add
xchg
xchg
push
push
jmp
mov
outsl
fwait
xor
cmpl
cltd
lods
inc
ljmp
push
sbb
int
jp
jb
outsb
jmp
mov
mov
dec
xchg
pop
inc
insl
xlat
xchg
push
lcall
loop
add
cmp
aam
fadds
inc
inc
les
mull
mov
movsl
adc
or
les
and
shr
and
or
or
adc
mov
inc
inc
mov
mov
cmp
xchg
mov
incl
push
push
add
ret
ds
bound
fcomp
fdivrl
lahf
imul
jne
push
or
ljmp
fdivrs
cmp
insl
icebp
outsl
jnp
mov
out
and
cmp
repz
or
or
insl
sub
ds
dec
aam
rclb
jae
and
adc
jae
lea
insb
jl
call
mov
push
inc
in
mov
das
out
pop
dec
mov
adc
xlat
addr16
sbb
mov
in
mov
jecxz
dec
insl
lock
out
scas
scas
es
mov
int
push
scas
sbb
je
inc
add
loope
mov
sbb
outsb
push
mov
cmp
pop
notb
adc
mov
cmp
repnz
jnp
mov
iret
lret
outsb
dec
inc
cmp
dec
inc
sti
scas
adc
pop
pop
fidivl
mov
mov
repz
outsl
cmp
jo
test
pop
xchg
cmp
es
jae
jmp
nop
repz
subb
out
xor
hlt
lds
in
mov
fs
into
or
mov
cs
dec
out
movb
and
sub
inc
push
sarb
loop
pop
nop
sahf
js
adc
movsl
enter
cs
lahf
popf
test
and
xor
int3
or
sub
and
mov
inc
lea
pop
cmpsb
lcall
adc
pop
mov
aaa
adc
sub
outsl
test
mov
mov
fwait
jae
dec
and
mov
xor
push
xchg
divl
iret
scas
leave
fs
movsl
jnp
sub
stos
add
bnd
enter
insb
aas
jmp
popf
ror
push
pop
daa
mov
arpl
scas
es
jbe
xchg
jg
mov
xchg
sbb
hlt
in
xchg
mov
jnp
sub
movsb
bnd
push
inc
ret
loopne
dec
cmp
ljmp
or
inc
insl
or
pop
adc
roll
mov
inc
dec
sbb
fwait
loope
xchg
xor
sahf
aad
mov
jbe
jle
hlt
mov
enter
mov
adc
sahf
xor
and
inc
sti
jnp
imull
lret
and
aas
into
xorl
in
jae
test
movsl
cwtl
repz
sbb
insb
xchg
popf
out
cli
stos
lea
add
add
adc
nop
jns
das
jbe
lcall
xlat
rcrl
stos
pop
cmc
push
in
pop
mov
incl
out
xchg
jno
mov
xchg
popa
scas
test
jb
pop
or
push
popa
stc
mov
in
pop
je
mov
ret
pop
mov
cmp
lcall
and
push
aam
ret
inc
cwtl
fsubs
js
mov
cmp
inc
pop
and
mov
fcoms
sub
xor
sub
inc
rcll
idivb
ficompl
sbb
ljmp
lods
mov
mov
sbb
fdivs
adc
push
int
lret
push
dec
dec
lods
mov
mov
enter
lcall
inc
scas
xor
dec
jae
fcompl
or
push
sbb
les
call
fidivrl
pop
stos
pop
cmp
mov
outsl
cmp
push
fsubrs
bound
in
pop
jo
mov
imul
xor
gs
mov
xchg
cmp
fildl
imul
dec
sbb
mov
std
cmp
lock
dec
aas
daa
inc
mov
xchg
and
push
xchg
dec
rorl
popa
xor
out
loope
mov
and
movsl
cmp
jae
or
xorb
cltd
in
push
out
popf
adc
and
push
out
loopw
push
cmpsl
dec
cld
jg
dec
adcl
std
icebp
imul
inc
test
or
outsb
sbb
push
andb
mov
jne
in
inc
or
and
dec
and
lods
lar
inc
icebp
pop
cli
push
dec
mov
out
mov
mov
inc
adc
ljmp
call
sub
hlt
notl
dec
movsb
out
fsubrs
ds
leave
push
ljmp
push
push
push
or
loopne
mov
mov
rorb
jo
cmp
filds
lock
and
mov
pop
mov
aam
cs
xchg
insl
sbb
dec
jle
mov
xchg
mov
fimuls
pop
push
clc
xor
xor
or
xchg
in
inc
mov
dec
clc
fst
push
lret
jae
adc
jge
lret
sbb
out
add
mov
or
jg
addb
shlb
mov
adc
sbb
andl
pop
aas
mov
mov
mov
mov
mov
lret
loop
add
pop
int
subps
fists
xchg
push
add
inc
sub
addb
sub
mov
mov
pop
stos
pop
or
cmp
jne
dec
testl
stc
add
in
loope
lods
or
lcall
es
jecxz
lea
xchg
out
inc
int
scas
push
mov
mov
sbb
je
xchg
jecxz
rolb
repz
mov
mov
adc
or
rcl
add
cmp
ret
sarl
jecxz
xchg
pop
sbb
mov
out
mov
pusha
and
sbb
and
xor
xor
into
mov
flds
loop
add
rcl
jne
movsb
xchg
inc
aad
push
imul
dec
pop
mov
roll
push
icebp
mov
aaa
mov
mov
jo
or
nop
ss
scas
pop
inc
xor
addr16
dec
mov
lock
and
popa
xor
sti
daa
lretw
mov
xchg
outsl
loope
or
sti
mov
cmc
mov
cmp
mov
ds
dec
out
ficomps
clc
test
or
adc
cmc
cmpsl
xlat
fstpl
popf
cld
es
addr16
pusha
loope
test
adc
cmp
std
les
mov
insl
mov
mov
jge
pushf
rorb
or
cli
mov
repz
es
cwtl
sti
lcall
out
and
push
rcrl
lcall
cmc
sysexit
or
ja
inc
sahf
bound
pusha
movsl
jmp
sarl
lds
pop
movsl
pop
xchg
pop
mov
sub
in
gs
jno
mov
hlt
jb
ret
add
cs
shlb
int
lret
scas
lds
push
and
nop
jnp
notb
stos
scas
cld
xor
sarb
nop
lods
leave
lock
cli
xchg
or
add
xor
addl
arpl
or
cs
sub
repz
xchg
pop
repnz
es
rorb
mov
cmpsb
sbb
adc
movsl
and
add
fsts
mov
jnp
inc
aam
jl
mov
or
stos
shll
add
cli
jo
lds
mov
int3
dec
sbb
dec
jns
scas
lods
lock
sbb
or
sbb
decl
imul
xchg
jo
mov
orl
std
dec
add
dec
les
push
out
pop
mov
pop
stc
sbb
dec
xchg
add
aas
fsubp
xchg
aas
daa
icebp
push
rcrl
push
dec
and
es
add
out
out
adc
sub
xchg
mov
adc
jbe
xchg
and
aas
pop
gs
or
and
xchg
stos
push
adc
test
aaa
stos
or
cltd
movlps
sbb
xor
xor
add
xor
orb
lcall
or
out
push
mov
popa
adc
test
push
mov
pop
add
pop
mov
mov
popa
in
js
sbb
jo
imul
pop
adc
jne
test
fisubl
sbb
adc
in
xor
lods
test
scas
es
inc
mov
test
sub
ret
and
adc
out
pop
lods
adc
push
repz
fldt
es
addb
insb
sbb
pop
scas
inc
pop
adc
adc
sub
aaa
push
stc
pop
out
xchg
push
inc
sub
cli
pushf
arpl
popa
sub
jbe
xor
push
mov
pop
sbb
lret
push
adc
test
jo
sbbb
jnp
xor
loope
jo
movsl
push
mov
ljmp
lds
dec
push
dec
popa
jns
pop
js
ret
push
and
sub
or
cwtl
shll
aas
pushf
jg
in
cwtl
imul
mov
int3
mov
jecxz
push
mov
les
mov
jl
adc
ljmp
pop
mov
xor
or
pusha
inc
adc
inc
and
out
repz
ja
push
or
sahf
xchg
xchg
fcomp
adc
cltd
dec
xchg
jg
inc
and
adc
pop
sbb
jns
pop
mov
mov
xchg
test
pop
mov
addr16
mov
lret
pop
jmp
repz
cld
addr16
repnz
push
insb
jne
ss
hlt
frstor
adc
lcall
mov
sub
pop
cmpsb
in
nop
cmp
lock
or
jae
pop
push
dec
loopne
jle
shl
jp
inc
mov
stos
out
in
xor
pop
pop
lods
pop
sub
xor
test
and
adc
cmpsl
lods
mov
xchg
fbld
out
stos
movsl
pop
cmp
add
sbb
cmpsb
fs
and
andb
inc
or
add
outsl
cmpsb
push
negl
adc
lret
test
pop
sub
mov
mov
mov
cmp
icebp
dec
jo
fistpll
lret
xchg
ret
mov
xchg
inc
bound
inc
mov
lret
ret
or
movsb
add
fldt
filds
fsubs
ret
arpl
push
loopne
gs
sbb
dec
adc
mov
shlb
out
inc
jg
loope
into
inc
aaa
lock
shrl
xorb
and
int3
or
enter
scas
pusha
data16
das
pushf
popa
rcrb
mov
mov
les
sti
js
ss
push
cli
movsl
arpl
in
popl
sbb
add
test
pop
fs
or
aam
xor
cli
jbe
inc
mov
sub
in
adc
rclb
mov
mov
ds
jg
xor
add
outsb
fidivs
pop
rclb
movsb
lahf
loope
sbb
mov
inc
dec
pop
fadd
push
test
in
and
add
loope
xchg
out
rorl
notb
pop
pop
sub
adc
mov
lcall
jg
out
popa
mov
pop
cmp
iret
jbe
adc
jae
mov
movsl
aad
fcoms
bound
mov
and
iret
ficoms
mov
cltd
sub
clc
stc
sbb
and
loope
rolb
sbb
or
dec
mov
adc
push
std
jecxz
push
pushf
or
pop
mov
imul
xlat
inc
mov
mov
lret
mov
add
loopne
mov
clc
int
icebp
imul
adc
xlat
xlat
pop
mov
test
sub
test
inc
xchg
pop
add
fs
adc
sbb
icebp
sbb
mov
enter
xor
aas
cli
lahf
jge
sbb
mov
add
aaa
xchg
aam
mov
dec
aaa
jns
xchg
mov
outsb
adc
sbb
stos
adc
inc
dec
jge
lods
xor
clc
test
jno
mov
andb
and
insl
push
push
test
adc
repz
push
outsb
sub
add
add
mov
in
inc
jge
xchg
rcl
adc
sub
shlb
lock
sbb
test
mov
lea
jmp
nop
mov
sbb
cmove
mov
adc
iret
test
iret
test
rcl
imull
xlat
cld
fidivrl
sbb
repnz
cmp
adc
ds
cmp
enter
hlt
jns
inc
ss
xchg
mov
inc
sbbl
mov
push
lahf
jns
das
xchg
cmp
xchg
xchg
and
inc
popa
mov
test
xchg
inc
jne
mov
push
pop
sbb
sub
jg
scas
out
jmp
cmp
inc
jl
notb
test
fdiv
test
jmp
imul
lods
adcl
push
mov
repz
or
adc
pop
xchg
add
and
jbe
insl
rolb
hlt
daa
or
daa
lds
sub
sbb
sti
mov
cmpsb
push
insb
sub
pop
adc
inc
out
xor
gs
addr16
movsb
and
bnd
push
pop
inc
mov
arpl
test
cwtl
push
int3
das
out
add
jo
sub
xlat
and
sti
in
sub
shrl
xor
or
jae
mov
inc
or
pop
adc
push
add
mov
mov
fchs
scas
loop
or
loopne
cli
scas
fwait
adc
adc
shr
shll
mov
xor
push
xor
ja
mov
lret
jne
out
mov
addr16
ret
out
test
lods
xlat
jecxz
or
pop
mov
arpl
push
out
cmp
push
loopne
pop
sbb
push
lahf
cs
cmp
dec
out
pop
mov
fsubp
pop
fcmovb
dec
push
mov
test
cmpsb
mov
test
jle
jp
jne
in
add
fs
test
jnp
cmc
daa
insb
xor
out
dec
mov
movsb
mov
adc
cltd
inc
xlat
enter
test
ss
mov
hlt
mov
iret
repnz
negl
fdivr
add
jno
test
fisubs
pop
dec
inc
xlat
dec
mov
or
js
jecxz
xchg
jnp
mov
stos
jb
pop
pop
xchg
and
scas
ljmp
lcall
pop
and
imul
and
xchg
lds
rorb
xlat
loope
sbb
ja
ficompl
mov
mov
cmp
mov
fisttpll
daa
inc
cmp
popf
pop
jge
mov
inc
rol
jl
jecxz
pop
adc
sub
movsb
sub
inc
nop
sub
jmp
cmp
adc
fidivl
mov
inc
fmuls
sub
scas
mulb
out
in
jmp
mov
push
pop
int
mov
dec
mov
cmp
loop
hlt
cltd
dec
sbb
pop
pop
clc
fs
mov
lods
push
mov
movsl
pop
les
mov
xchg
pusha
push
loopne
out
inc
ds
fwait
popf
aaa
pop
add
mov
aaa
push
jmp
js
lret
xor
ljmp
insl
fwait
sbb
or
aaa
test
iret
inc
mov
daa
or
mov
in
jle
in
and
adcb
out
sbb
inc
mov
pop
ss
fimull
mull
les
add
jae
cmc
outsl
cmc
inc
push
fisubl
jl
and
ss
dec
je
push
mov
inc
mov
call
push
cld
xor
mov
and
mov
or
es
stos
dec
fildll
jbe
push
sbb
xchg
pop
or
xchg
sub
pop
mov
pop
call
movsb
mov
push
add
pop
adcb
xchg
mov
fstl
push
imul
shll
sahf
add
cld
mov
sub
dec
xlat
aam
imul
adc
inc
mov
xor
bound
arpl
dec
aam
pop
std
jmp
cmp
int
or
mov
cwtl
and
imul
adc
mov
xor
ljmp
and
and
and
loope
nop
scas
ja
stos
clc
cmp
das
je
ja
enter
jl
mov
cmc
out
push
dec
not
fstpl
mov
imul
or
into
cmp
and
pop
jmp
call
test
add
cwtl
insb
sub
lcall
pop
pusha
or
je
mov
dec
push
mov
fisubrl
sub
out
xor
js
dec
and
dec
xor
call
icebp
jns
xchg
cmp
pop
jne
push
ss
das
xor
cltd
mov
mov
sub
cltd
sbb
jp
cld
fisubrs
push
or
xchg
sub
pop
cmc
mov
out
xchg
mov
mov
cmpsl
and
cli
xlat
shll
lret
mov
repnz
mov
pop
shl
movsl
lds
dec
mov
fwait
popa
dec
std
mov
repz
dec
xchg
sub
sub
jae
out
pusha
mov
mov
jmp
or
xor
mov
jg
jle
loop
ss
cmpsb
adc
mov
mov
out
cli
loopne
inc
repnz
xor
sti
push
cmpsl
pop
test
sub
or
std
decl
push
stc
xor
xor
js
pop
inc
inc
cmp
push
imul
xchg
inc
lahf
jns
aas
nop
fucom
stos
pop
lea
mov
sbb
pop
popl
fistpl
mov
sarl
xchg
sbb
addl
lock
addr16
mov
mov
loope
adc
test
stos
xor
pop
lret
insl
mov
ss
push
mov
sub
cmp
or
pop
lcall
ret
sbb
or
ret
xor
and
cli
lea
xor
arpl
daa
xorl
stos
cmp
pop
cmp
fidivl
add
cmp
mov
pop
mov
aaa
pop
xor
lret
add
fiaddl
rol
stos
inc
outsb
popa
rcll
das
xor
iret
or
mov
add
mov
mov
pop
movsw
and
cs
mov
lock
ret
js
lcallw
arpl
scas
xlat
insb
xchg
jb
pop
pop
sbb
cmovle
cwtl
mov
rcr
popa
es
jmp
repnz
or
or
add
loope,pt
ss
mov
xor
add
jno
jg
xor
scas
mov
dec
mov
gs
lcall
and
gs
loope
mov
out
repnz
or
adc
add
or
repnz
mov
dec
push
es
xchg
fidivrl
cmp
mov
arpl
jg
fmull
xor
aas
jae
lods
insb
jne
jne
in
out
and
and
fisubl
pusha
mov
insl
cmp
out
fwait
xchg
sahf
add
test
inc
dec
sar
pop
les
insl
rol
pusha
bound
pop
lods
pop
xor
in
jmp
int3
and
mov
mov
cmpsb
add
ds
dec
jecxz
mov
adc
jnp
pop
sbb
or
aas
dec
mov
pop
pushf
scas
jmp
push
sbb
fistps
insl
test
or
fcom
loope
mov
insl
push
subl
sbb
jmp
sub
adc
shll
sete
movsl
xor
xchg
mov
xor
out
rol
mov
cwtl
js
mov
push
aam
jmp
and
mov
mov
insl
les
sub
lret
nop
ret
dec
aam
mov
and
scas
pop
daa
stos
aam
mov
dec
adc
fisubrs
pop
or
sbb
inc
inc
push
inc
mov
shll
cmp
push
adc
faddl
inc
mov
sub
test
scas
dec
aaa
aaa
out
ljmp
push
mov
sub
mov
loop
dec
mov
stos
mov
adc
xor
iret
int
inc
loop
outsb
mov
push
pop
or
push
sti
out
in
inc
and
sbb
adc
adc
cltd
in
mov
mov
jecxz
pop
enter
sti
stos
mov
fsubp
adc
inc
adc
sub
out
mov
call
dec
xchg
int3
loop
or
pop
inc
or
pop
jmp
inc
fstps
shl
es
xlat
xor
data16
cli
xor
fwait
and
or
in
xchg
cmp
movsb
push
pop
xchg
push
adc
xchg
dec
jo
fdivr
xchg
and
pop
or
gs
push
adc
jecxz
pop
ss
fwait
lahf
jg
or
pop
push
sbb
repnz
js
notb
xchg
pop
in
cld
std
ss
sub
scas
insb
push
jno
in
xor
in
xchg
js
xlat
jecxz
scas
fistpl
fimull
call
ficoml
scas
mov
mov
ret
idivl
or
mov
inc
andl
ljmp
movsl
mov
fsubs
add
xor
cwtl
mov
gs
pop
popa
mov
jg
rclb
inc
outsl
jmp
pop
mov
sti
test
mov
pop
and
test
jmp
lcall
sbb
mov
cmpl
and
imul
mov
mov
clc
insb
fdivl
out
dec
lret
test
idivb
imul
or
mov
add
cmp
cmpsl
or
ja
je
and
popa
pop
push
sti
mov
imul
cmpsl
ja
add
dec
daa
and
cmp
and
ja
test
ss
clc
aas
xchg
in
dec
or
ret
pop
pop
divb
pop
sbb
sti
sbb
inc
lock
and
movsb
pop
ss
dec
xchg
jmp
movsl
pushf
pop
cmpsl
pop
insb
pop
aad
mov
xchg
jae
pop
mov
mull
pop
in
jecxz
sbb
mov
lret
fcompl
mov
push
xchg
xor
push
dec
popa
fucom
or
fmul
add
cmp
sahf
lahf
lods
xlat
xor
pop
out
out
xchg
mov
and
orb
stc
xor
fs
adc
pusha
or
stc
adc
mov
xor
jecxz
dec
push
xlat
outsb
push
mov
popf
push
xchg
dec
push
cli
fisttps
cmc
cmp
jbe
in
int
cwtl
mov
mov
mov
repnz
dec
mov
sub
xor
jle
movb
icebp
movsb
sbb
out
jnp
test
jmp
add
cmp
lcall
dec
xor
or
into
mov
stos
movsl
filds
popa
ret
rclb
sbb
add
mov
scas
jl
push
mov
xchg
in
push
xchg
rol
test
repz
push
stos
in
xchg
mov
mov
mov
or
dec
popa
adc
int3
jg
jns
lods
ja
xchg
movsb
pop
into
xlat
inc
adc
dec
jecxz
out
into
xor
gs
bound
lcall
adc
xchg
or
cmpl
xchg
push
subl
movsl
pop
out
xchg
xchg
lcall
cmp
movsl
mov
dec
lret
fldl
hlt
aam
mov
out
jl
adc
inc
sbb
dec
iret
cli
jns
in
popa
cld
pop
fistpll
adc
lret
lea
and
push
pop
or
and
dec
xchg
repnz
jno
xchg
rcll
pop
in
loopne
mov
std
int3
cltd
repz
ret
push
hlt
test
mov
leave
ss
inc
sbb
or
subb
sub
mov
mov
ret
or
rorb
idiv
jb
popf
pop
push
ficoml
sahf
push
cltd
cmpsl
push
cmp
mov
cmp
repnz
frstor
inc
mov
xchg
adc
cmpl
mov
cld
jge
or
sbb
icebp
scas
push
mov
sub
jge
fdivl
pusha
cld
xchg
mov
test
ss
frstor
xor
mov
lock
pop
inc
in
loope
sbb
mov
popa
add
inc
stos
loopne
push
gs
inc
ret
and
sub
stos
cmp
loope
add
sarb
add
outsb
hlt
int3
dec
inc
dec
cmpsb
inc
movl
mov
pop
sbb
xor
jae
or
loope
out
mov
mov
pushf
xlat
mov
sti
add
mov
inc
loope
sub
mov
mov
pop
push
ljmp
scas
xchg
dec
lcall
cli
dec
mov
mulb
bound
lret
inc
push
icebp
cmpsb
push
std
sbb
mov
xchg
add
lock
scas
mov
or
xor
flds
addl
mov
ret
outsb
jge
std
fiadds
ss
jmp
jb
cs
xchg
push
or
aaa
cs
jnp
push
add
cmpsb
sbb
ret
scas
lret
lret
or
fnstenv
lcall
cmp
dec
xchg
and
mov
shl
xsha1
cmpsb
dec
and
mov
inc
or
xchg
shrb
sti
push
pop
or
adcb
cmc
add
push
xchg
stos
das
jno
mov
icebp
sahf
pop
cs
sbb
or
scas
bound
push
out
addr16
lds
jo
pop
cmp
loop
mov
std
push
repnz
test
subl
ja
jae
mov
lods
aad
xchg
test
stos
cmp
jae
repnz
push
popf
lods
repz
aaa
movsb
dec
dec
imul
cmp
scas
rclb
dec
popa
roll
rorl
dec
mov
xor
lea
das
inc
adc
push
xchg
or
fiadds
jg
daa
ret
mov
push
xchg
pusha
clc
cwtl
cs
in
sbb
adc
cmp
out
dec
mov
lahf
inc
test
pop
mov
adc
mov
add
add
es
adc
shl
mov
pop
push
das
xchg
dec
sbb
lcall
xchg
xor
insl
imul
xchg
jmp
adc
out
lock
iret
jp
sub
in
insl
mov
xorl
adc
in
or
jo
test
scas
cltd
inc
int
adc
sbb
xor
or
mov
adc
mov
sarl
lret
jl
ds
and
xchg
pop
cld
xchg
ret
ja
xchg
jg
jae
fmul
enter
sbb
ret
mov
jbe
fsubs
xor
or
and
gs
add
mov
sub
pusha
or
inc
jg
mov
repnz
clc
push
subl
mov
rorl
mov
lods
movsl
cmp
or
lret
mov
cmc
sbb
pushf
pop
in
es
mov
subl
mov
inc
std
mov
adc
movsl
jo
jmp
jb,pn
sbb
xor
cmpsb
adcl
repz
pop
and
aas
push
out
stc
pop
add
mov
daa
mov
icebp
add
ret
cld
xor
push
mov
mov
mov
lcall
enter
sbbl
xor
push
roll
insb
test
cmpw
outsb
aad
ja
dec
xchg
fimuls
and
cli
ret
aad
loopne
mov
pop
and
repz
inc
push
js
push
in
xor
decl
lret
xor
lods
mov
and
mov
jp
loop
in
mov
jp
pushf
sub
push
mov
pop
sbbb
mov
mov
adc
ljmp
dec
jmp
jg
push
jmp
es
out
shl
hlt
bound
in
and
ret
xchg
sahf
shl
xor
inc
mov
rcll
adc
je
ljmp
scas
mov
frstor
mov
mov
sub
shll
push
mov
add
push
inc
mov
cmpsl
dec
xlat
aad
push
jmp
lods
and
mov
pop
test
mov
cwtl
lahf
aam
push
jbe
int
idiv
dec
into
sub
jnp
fs
insb
mov
push
xchg
jp
mov
mov
je
mov
imul
insb
stos
loope
cmpsb
cmpsb
stc
dec
add
cmpsb
lds
or
cmp
push
ljmp
sbb
ret
push
ja
rcrl
sbb
mov
mov
adc
lods
movsl
cltd
jp
aas
pop
gs
lret
ficoms
inc
inc
lcall
mov
sbb
and
inc
pop
loope
subl
test
mov
dec
das
movsb
add
fcoms
ljmp
inc
jge
daa
js
pop
movsl
insb
mov
negl
ffreep
fldenv
sbb
mov
ret
xor
mov
pop
jne
dec
cmp
out
aam
pop
mov
pusha
sti
dec
push
push
xsavec
or
pop
mov
adc
clc
mov
push
mov
xor
ret
cwtl
and
xor
mov
clc
lock
in
sub
movntq
cmp
mov
add
fdivrl
jmp
int
fs
fidivrs
adc
fsubl
dec
imul
stos
fwait
push
jo
aad
xchg
loop
sar
mov
pop
jno
sbb
mov
out
cs
pop
and
and
jmp
sub
dec
inc
pop
leave
jl
adc
idivb
mov
sub
inc
push
out
mov
popa
pop
test
shl
sbb
sbb
push
mov
sub
imul
sub
shll
xchg
xor
or
pop
out
xor
ror
and
fldt
xchg
pop
cmpsb
mov
push
lret
dec
sbb
loop
pop
imul
pop
mov
jmp
sub
or
pop
xor
add
sub
cmpsb
sbb
inc
mov
jmp
push
dec
push
mov
push
jne
adc
mov
dec
push
cmc
aaa
cmp
adc
xor
mov
imul
fwait
lahf
stc
pop
ja
mov
sbb
mov
insb
in
inc
ljmp
push
and
mov
xor
imul
and
mov
adc
mov
incb
mov
pop
push
subb
inc
adc
popa
mov
int3
pop
fstpl
hlt
mov
out
ja
inc
fldl
scas
outsb
out
icebp
and
subl
xor
sar
scas
les
fs
mov
into
jno
xchg
add
adc
inc
dec
mov
add
out
test
mov
push
mov
fldcw
mov
stos
cmp
or
stc
ljmp
push
jecxz
push
add
outsb
mov
mov
inc
ret
cs
mov
out
movsb
cmc
push
stos
test
lcall
or
pop
arpl
xchg
mov
inc
in
jno
movsb
lods
jmp
mov
jns
adc
test
scas
inc
sbb
fcomi
pop
ret
lahf
mov
mov
fs
push
nop
popa
mov
jb
push
and
mov
pop
push
dec
lret
or
pusha
push
add
test
and
pushf
nop
in
jne
or
xchg
xchg
aad
fdivp
add
in
jmp
xchg
xor
cld
mov
add
fimuls
fwait
mov
and
xchg
push
mov
pop
les
out
arpl
es
xchg
mov
sbb
xchg
mov
and
pop
aas
subb
adc
fidivs
dec
gs
or
movsb
iret
loopne
call
idivb
mov
inc
xchg
inc
popa
mov
mov
stc
add
add
mov
push
jp
inc
cmp
mov
scas
mov
lock
mov
dec
loop
sbbb
lods
in
std
lds
int3
pop
add
cmpl
faddl
push
les
jb
mov
jle
xor
push
xor
outsl
push
clc
fists
sarb
sub
mov
push
inc
roll
fidivl
sbb
dec
push
mov
fdivr
xor
xchg
mov
or
jns
leave
pushf
mov
ret
in
orl
push
xchg
xchg
aaa
inc
push
gs
cltd
sbb
push
xchg
xchg
outsb
shlb
or
dec
mov
jb
xor
sub
or
mov
neg
xchg
pusha
sbb
stos
fdivrs
mov
rclb
lds
adc
mov
neg
and
adc
mov
imul
sbb
fidivl
cltd
adc
test
addr16
idiv
xor
mov
mov
repnz
ss
jae
pusha
and
mov
and
popa
ret
or
stc
sub
adc
repz
mov
jo
leave
sti
pop
stc
dec
sub
pop
cmp
xchg
fldz
mov
add
sbb
lods
fisubs
fmull
pop
sbbl
sub
dec
sub
xchg
xchg
dec
push
ljmp
pop
mov
loop
pusha
mov
or
loopne
inc
addr16
xchg
fisubl
enterw
push
insl
fildl
adc
rcr
test
pop
nop
les
sub
jno
or
xor
mov
fisubrl
test
addr16
lock
and
faddl
and
scas
pop
sbb
mov
fisubrs
and
push
imul
jns
jmp
mov
test
cmp
sahf
xchg
jg
loope
lahf
or
add
jmp
add
jne
pop
add
mov
dec
push
arpl
insb
adc
mov
lcall
push
sub
jmp
clc
notb
pop
jbe
mov
sysret
adc
pop
cmp
mov
inc
mov
pop
xchg
cmp
jl
inc
lock
pop
jo
mov
loopne
xchg
aaa
stc
sbb
popa
dec
inc
pop
mulb
ljmp
bound
ja
or
and
pop
or
gs
fwait
mov
cmc
sbb
and
and
push
or
inc
mov
ds
mov
adc
and
adc
sahf
jge
int
mov
aam
jp
outsb
movsb
push
adc
lock
popf
out
es
pop
xchg
add
or
leave
mov
or
ret
add
lcall
mov
mov
mov
fnsave
push
mov
xchg
aaa
addr16
fcoms
dec
add
xchg
inc
cmp
mov
leave
mov
pop
or
ja
mov
hlt
dec
roll
stos
mov
fiaddl
sub
push
addr16
mov
adc
xor
push
fmuls
jno
xor
clc
or
push
lods
inc
adc
fldt
push
push
mov
sub
data16
adc
push
lcall
add
mov
outsb
into
fnstsw
mov
adcb
gs
nop
xor
ret
jae
insb
push
pop
sahf
push
aam
jmp
adc
cmp
imul
loope
sbb
push
lea
leave
jmp
push
sub
pusha
and
adc
mov
adc
pushf
or
fs
cmp
dec
mov
xchg
mov
ds
jg
out
dec
leave
jmp
add
jns
sub
test
scas
dec
add
add
sbb
stc
orb
pop
popa
jo
sbb
rol
cli
dec
sbb
inc
xchg
out
sar
jb
mov
push
push
or
cltd
je
mov
mov
inc
jno
scas
lds
xchg
fiadds
sbb
jno
js
fisubrl
iret
fisubl
sub
add
lea
bound
dec
popf
int3
int3
adc
test
dec
dec
loop
mov
stos
int3
icebp
testb
enter
ror
push
mov
mov
xor
dec
shll
out
outsl
push
lods
int
mov
push
in
adc
je
rorb
fs
jns
in
es
mov
fwait
rcrl
cwtl
cmp
pushf
xor
push
dec
pop
pusha
test
std
mov
mov
shlb
out
adc
lds
and
mov
int
xor
movsl
mov
or
mov
sub
dec
loope
pop
xchg
scas
inc
xchg
cmp
fbstp
das
fbld
popa
or
push
jp
dec
cli
mov
or
insb
out
mov
imul
or
lods
fs
in
add
addr16
xlat
pop
push
shlb
push
pop
lock
jbe
xchg
das
push
xchg
push
or
mov
sub
mov
xchg
mov
add
xor
pop
pushf
loop
or
in
into
adc
mov
sub
or
push
adc
stos
push
and
int
je
push
push
cltd
jmp
stos
clc
adc
mov
fwait
lcall
mov
jmp
nop
les
xor
inc
sub
adc
lods
push
jnp
in
std
fadd
pop
mov
xchg
dec
into
js
mov
inc
int
adc
push
push
mov
fnstcw
ret
and
jb
in
xor
stos
orl
jno
aas
es
or
int
inc
push
mov
fwait
xchg
xor
jns
inc
xchg
mov
mul
fsubl
bnd
cmpsb
lcall
stc
add
ret
cmp
mov
inc
pushf
push
into
xchg
push
push
xchg
sub
push
and
pop
call
jnp
or
fcoms
push
and
test
push
shrb
popf
and
je
mul
mov
mov
movl
sub
icebp
cmp
out
sub
push
adc
cmp
repz
fistl
xchg
in
mov
adc
jmp
icebp
sub
or
out
cmpsl
mov
lods
xchg
xor
dec
arpl
cmp
in
mov
cmpsb
aam
repz
mov
or
pushf
sbb
mov
add
cmpsl
test
push
icebp
jp
or
sbb
add
cmp
out
mov
insl
sub
sub
xor
or
insb
add
stos
add
push
mov
mov
insb
mov
rcr
pop
cltd
movsb
pop
inc
mov
push
adc
gs
cmpsl
adc
cltd
sbb
repnz
testl
ret
mov
loopne
ljmp
add
hlt
inc
cld
cmp
xchg
out
jmp
ret
sbb
prefetch
pop
test
and
test
cmp
mov
mov
jmp
cmp
cwtl
cmp
push
sbb
out
gs
out
push
inc
or
push
inc
ud2
pop
push
mov
ret
push
lods
jp
mov
bound
mov
add
mov
and
push
insl
addl
cmp
inc
jo
adc
ficoml
sti
jge
mov
addr16
sbb
sub
nop
into
mov
add
mov
sub
iret
clc
movsl
mov
dec
les
push
clc
pusha
sbb
repnz
adc
loope
xor
pop
jns
pop
push
stc
cmpb
or
or
aaa
sar
pop
xor
rcll
and
jne
push
push
jae
mov
or
mov
rolb
test
cmpsl
divl
lcall
cmp
fiaddl
das
xchg
pop
popf
sbb
or
flds
fldl
cmpsl
imul
push
stos
lcall
cmp
fnstsw
jl
mov
adc
imul
mov
mov
ret
adc
cmpsb
add
mov
mov
sbb
addr16
je
int3
mov
pop
sub
inc
bound
or
ds
filds
xchg
cltd
mov
inc
std
stos
movb
enter
aam
fucomip
add
cmp
sbb
and
roll
std
dec
int3
in
lock
cwtl
cmp
or
rcr
pop
addr16
xchg
sbb
mov
jmp
mov
out
pop
movsl
adc
cli
pop
dec
xchg
dec
arpl
movb
in
mov
mov
mov
add
movups
or
lods
mov
mov
insb
ror
fwait
push
pop
adc
adc
inc
adc
dec
or
push
dec
cs
xchg
lods
cmc
leave
arpl
mov
inc
or
mov
ret
test
pop
test
je
dec
mov
mov
ret
out
and
dec
jg
push
cwtl
int3
out
adc
jns
mov
leave
testb
mov
jg
pop
pop
jg
or
jbe
bound
jle
and
xor
mov
cwtl
stos
mov
mov
lods
dec
lahf
stos
jecxz
or
std
addr16
out
pop
xchg
sbb
scas
fcomip
inc
loopne
xchg
push
in
aaa
dec
out
jge,pt
xchg
and
mov
cmpsb
scas
repnz
loope
movhps
push
xor
test
dec
ljmp
enter
int3
adc
mov
fsubrs
xchg
add
mov
and
stc
add
mov
xor
imul
sbb
addl
mov
xchg
push
arpl
lahf
outsl
and
or
push
mov
jp
sub
mov
sub
pushf
dec
lds
stos
dec
jp
push
cmpsb
or
fisubl
cmpl
add
xchg
sbb
ret
cs
cmp
xlat
sbb
hlt
or
sbb
das
jnp
jo
fldenv
dec
push
test
pop
sub
lock
cmpsb
mov
repz
or
inc
cld
push
addr16
aad
cmp
div
repz
adc
test
lret
mov
cmp
jl
test
jbe
enter
jle
pop
fbld
or
mov
adc
adc
mov
sti
jp
aas
mov
fs
scas
iret
push
cmp
cmp
jmp
sub
aam
outsb
sub
or
es
pop
dec
negl
fnstsw
xchg
orl
hlt
push
pop
repz
add
cwtl
mov
sbb
in
stos
push
lds
jbe
dec
push
pop
hlt
and
out
inc
sub
jmp
xchg
and
xchg
and
mov
mov
and
jbe
stc
ficomps
cmpsl
push
jo
cmp
jecxz
fs
inc
xchg
sub
js
out
mov
pop
fimuls
sbb
xchg
pop
pop
popa
push
adc
icebp
loopne
cmovo
xchg
and
adc
mov
xchg
loop
adc
add
pop
jg
loop
out
or
mov
outsl
push
and
jg
jl
sbb
pop
popf
push
lods
lahf
jb
mov
or
pop
and
gs
jnp
adc
test
inc
jmp
lea
shlb
lock
fcomi
aad
or
cmp
or
sbb
xorl
pop
ret
sub
pop
jge
mov
adc
sub
or
out
pop
and
mov
bound
dec
fists
jl
adc
pcmpeqb
imul
adc
dec
mov
mov
lret
adc
idivb
mov
aad
mov
lds
jl
daa
and
es
popa
jo
push
mov
shrb
mov
or
test
rcrb
aad
push
aad
xchg
pop
xor
ss
or
test
lds
sti
faddl
push
sbb
lcall
xor
movl
cmp
sub
gs
scas
out
mov
test
stos
ss
push
lods
dec
fdivrl
sar
mov
jnp
das
push
add
ljmp
pop
imul
fdivrl
push
ficompl
das
aad
fcompl
mov
cmp
iret
call
call
xor
push
icebp
fwait
sbb
lret
cmp
aad
push
dec
adc
test
ja
jb
and
sub
scas
mov
sub
in
mov
daa
cli
and
shr
push
xchg
sarl
int3
mov
mov
orl
mov
push
adc
leave
arpl
dec
aaa
repnz
les
out
in
inc
pop
mov
lock
mov
lret
dec
pushf
sub
inc
xorl
pop
add
xchg
push
xchg
jle
imul
out
test
testl
adc
mov
dec
lods
pusha
inc
out
xchg
insb
das
test
sub
jle
das
lret
push
sbb
cmp
test
ret
inc
lahf
rcr
in
leave
add
pop
cwtl
push
scas
das
imul
fnstenv
cwtl
sbb
loop
mov
fwait
push
mov
xor
pop
vpaddsb
jle
shlb
ficompl
not
ds
std
sbb
add
jae
scas
jle
or
mov
mov
dec
loop
cmpsb
dec
test
xor
ljmp
lock
mov
lret
adc
in
mov
mov
cmp
ffree
in
pop
inc
pop
pop
mov
lods
xchg
icebp
arpl
nop
adc
idiv
add
xor
sub
adc
dec
jecxz
in
js
pop
cmpl
stc
pushf
mov
jb
sti
hlt
aas
shll
jg
aad
rcrl
xlat
adc
add
dec
addr16
stos
mov
out
insl
sti
mov
or
cli
mov
or
andl
adc
and
push
dec
ss
int
clc
ret
ret
and
shrl
or
cmp
mov
push
pop
inc
jnp
inc
test
in
xor
sbb
shl
and
loop
fwait
int3
in
arpl
jg
loope
mov
out
loop
es
mov
int
subb
or
rcl
leave
pop
cmp
mov
lock
stos
inc
pop
gs
or
icebp
mov
clc
add
shlb
xchg
pop
mov
jo
aam
out
int
pop
imul
sbb
jne
ss
rclb
push
pushf
mov
or
mov
int3
mov
sbb
test
int3
xor
sbb
sbb
fs
mov
xchg
fdivs
lods
push
dec
xchg
rcrl
mov
in
lret
cmp
in
adc
cwtl
int
cltd
shlb
fimull
inc
add
imul
ljmp
dec
mov
leave
out
filds
mov
jg
iret
and
jno
xchg
clc
clc
ja
cs
call
sbb
sub
add
add
push
mov
sbb
mov
xchg
adc
call
movsb
sub
adc
sbb
xorl
movsl
add
lcall
fstpt
xlat
insl
ret
stos
scas
xchg
mov
xchg
pushf
and
pop
test
sbb
add
rolb
mov
hlt
sub
mov
sbb
rcr
adc
jb
shrl
pop
les
fldenv
fists
popa
cmp
imul
divb
jo
mov
popf
mov
fs
in
push
loope
mov
repnz
adc
leave
push
push
inc
dec
daa
insl
flds
push
lcall
push
inc
aaa
std
and
aam
fs
lret
enter
test
mov
jp
inc
xchg
xchg
jno
mov
mov
or
pop
les
hlt
leave
mov
cmp
ret
cmp
inc
test
dec
or
je
scas
push
xchg
sti
out
xchg
gs
xor
in
cmp
pop
bound
adc
filds
sub
adc
xchg
out
fwait
dec
ret
pop
test
dec
repnz
xchg
xchg
and
aad
cmp
lret
jmp
aas
push
push
mov
in
xlat
in
mov
outsl
pop
test
fwait
pop
pushf
mov
push
mov
jo
sub
pop
ret
sbb
test
cltd
jnp
xchg
jb
inc
sbb
repz
ljmp
dec
mov
dec
aam
jmp
jno
jmp
fwait
xor
jae
cltd
rcrl
mov
ja
cs
and
sub
pop
adc
sbb
shll
cmp
xchg
aaa
dec
fistl
dec
icebp
sahf
and
push
mov
xor
ja
mov
add
sub
xchg
cwtl
imul
jbe
or
lock
aam
lahf
cmp
into
pop
fisttpll
xor
adc
les
loopne
jb
nop
adc
test
mov
test
lods
scas
movsl
xchg
dec
add
movsl
dec
stc
aaa
add
xchg
sub
add
out
mov
add
bound
dec
inc
arpl
push
cwtl
lea
sub
xchg
jbe
inc
scas
mull
push
jo
sbb
adc
outsb
jns
mov
sbb
in
repnz
xchg
mov
dec
icebp
mov
mov
inc
mov
ja
test
repnz
mov
dec
jle
mov
shr
push
mov
ljmp
push
pop
push
or
rorb
cmp
bound
pop
fidivrl
je
int3
fsubrs
aad
neg
in
pop
scas
xor
pushl
lret
pusha
pop
inc
lea
mov
sub
rol
mull
je
fisttpl
mov
and
mov
fdivr
les
push
cmp
jnp
add
jbe
arpl
je
xchg
addb
cmp
clc
adc
cli
cmp
shrb
dec
xor
out
je
sbb
sbb
add
push
repz
std
xlat
add
xchg
jbe
pushf
test
popa
jb
mov
jbe
cmp
jne
mov
or
push
insl
sarl
jle
lock
fnstsw
jae
adcb
movsb
jl
out
icebp
push
filds
rcrl
ja
jmp
cwtl
mov
sbb
outsl
idivl
mov
pop
icebp
push
xlat
or
sub
filds
in
add
jecxz
nop
dec
gs
movsl
sub
lods
add
gs
aam
popa
ja
sub
imul
cmpl
pop
sti
xchg
push
mov
and
adc
xchg
push
pushl
nop
lret
call
xor
add
es
push
pushf
and
pop
js
bound
mov
arpl
cmp
test
ret
pop
shll
jbe
lock
ret
and
jae
sar
gs
in
repz
adcb
jge
jmp
cmp
inc
movsl
daa
lock
in
xchg
add
or
inc
mov
pop
xor
or
push
mov
push
aaa
pop
inc
and
gs
cld
add
push
lock
mov
bound
bswap
dec
cmp
aas
andl
sub
jne
and
loop
jmp
dec
xchg
jmp
jbe
and
dec
push
jae
repz
out
or
or
lcall
push
sbb
pop
jbe
hlt
adc
imul
adc
mov
xchg
js
in
ret
add
xchg
arpl
push
jno
push
xchg
pop
push
xchg
movl
icebp
out
inc
f2xm1
test
xchg
psrld
sbb
push
jp
pop
into
adc
fs
sbb
sub
test
inc
les
pushf
popa
lock
cli
movsl
mov
mov
sbb
cmp
xlat
mov
mov
lods
dec
lahf
lock
sti
or
sbb
sbb
and
mov
mov
mov
xor
stos
and
and
lcall
xchg
popa
pop
stos
push
bnd
jmp
outsl
mov
iret
adc
push
loopne
iret
jnp
pusha
stc
int3
ret
xchg
js
imul
out
repz
xchg
outsb
jp
cmpsb
inc
fbstp
loopne
sub
mov
test
lods
dec
bound
pushf
adc
jl
in
pop
cmp
in
push
lret
mov
leave
adc
mov
jbe
dec
insb
mov
imul
ret
mov
sti
aad
lret
fcoms
jmp
add
push
cwtl
test
fs
std
in
and
fs
mov
inc
mov
cmpsl
loopne
lahf
lods
nop
sbb
loopne
xchg
sub
out
divb
lods
push
and
pop
jns
lods
mov
mov
imul
and
test
and
dec
push
push
es
lods
popf
int3
sub
out
push
stos
pop
shll
sub
loop
mov
xchg
movsb
xchg
lods
rorl
pop
in
mov
ja
cmp
xor
pop
arpl
jns
movsl
xor
rol
mov
and
in
mov
adc
pop
jl
fdiv
jle
jg
push
adc
xchg
mov
movb
inc
and
pop
cli
mov
mov
das
arpl
cwtl
mov
sahf
loopne
addr16
push
xchg
aaa
or
or
xchg
mov
sub
stc
mov
ficoml
inc
xor
dec
push
imul
cli
lcall
push
std
xor
into
stos
scas
mov
int3
cmpsb
mov
adc
adc
pop
fcomp
adc
aaa
outsl
dec
scas
fwait
inc
daa
in
push
movsb
sub
pop
nop
hlt
mov
cmp
or
filds
or
add
mov
xor
outsb
js
and
test
out
std
xor
sub
loop
xchg
pop
sub
and
testl
nop
inc
int
shrl
mov
cmp
adc
push
jno
dec
add
jmp
jb
adc
sti
test
cltd
int
pop
mov
add
adc
int
cmp
orl
lea
adc
adcb
xchg
or
sbb
and
jg
cmp
jle
and
notb
mov
mov
jle
cmp
and
pushf
lahf
push
ds
cmovl
test
xchg
cmp
mov
test
dec
pop
ret
push
xchg
daa
xor
call
jl
push
sti
jmp
fiadds
cld
or
mov
sub
and
sub
ror
add
jne
pop
in
pop
and
pop
inc
mov
cwtl
mov
lea
pop
adc
scas
cmp
lea
add
mov
ret
test
pop
data16
inc
int3
bound
jb
pop
subb
cmp
or
shlb
scas
pop
jns
dec
dec
xchg
test
fstl
mov
mov
push
stc
sub
repz
mov
outsl
add
lahf
je
lock
movb
sbb
lret
or
jnp
nop
jns
pop
sub
cmp
pop
filds
and
mov
mov
scas
scas
jno
scas
and
fimuls
insl
adc
sbb
movsl
xlat
mov
arpl
and
xor
repnz
cmpsb
cwtl
push
in
fcomps
test
jg
mov
mov
les
push
jmp
ret
xchg
neg
add
rcll
jne
faddl
imul
xor
inc
lret
insl
pop
cltd
pop
imul
nop
dec
mov
xchg
sbb
insb
imul
mov
mov
mov
mov
xor
aad
mov
jle
cld
lret
lea
test
fidivl
es
test
xor
inc
jp
lret
push
outsb
filds
addr16
imulb
pop
adc
ffreep
mov
mov
cmp
sahf
lcall
mov
cmp
pop
inc
pop
pop
enter
je
jnp
stos
aam
cltd
cld
mov
xchg
pop
add
jne
add
xchg
ret
jl
mov
pop
mov
insl
jns
outsb
sahf
mov
mov
popa
pop
xor
stos
pushf
push
and
rorb
mov
repnz
inc
and
or
mov
shlb
fists
mov
aam
lds
lods
loope
xor
or
xchg
inc
push
sbb
xor
test
call
sbb
addr16
mov
movsl
test
and
lock
push
pop
dec
push
jae,pt
mov
mov
jno
jg
bound
mov
ja
adcb
repnz
stc
test
ds
add
inc
mov
cmp
adcl
lds
arpl
pusha
dec
jmp
inc
icebp
addr16
fs
xchg
fcomi
ficomps
nop
inc
xor
jmp
add
inc
dec
mov
sub
add
adc
out
test
cmp
push
jecxz
and
andb
xchg
aad
xor
pop
pop
int
lahf
js
cltd
add
cmp
lock
mov
lock
cmp
push
add
push
dec
repnz
inc
les
cld
notl
dec
shlb
jbe
lea
aaa
nop
adc
test
mov
jl
xchg
push
cmp
in
ss
testl
bound
adc
imul
or
stos
out
outsl
shl
xchg
subl
orb
adc
fisubrs
mov
cmp
gs
filds
mov
push
jle
xchg
jge
mov
jle
mov
cmc
push
repnz
ss
mov
fmull
xchg
fcoms
jecxz
fadd
ret
pop
mov
jecxz
call
cwtl
cs
jbe
cmp
push
popf
std
sub
pop
test
test
loope
mov
pop
icebp
out
mov
out
mov
xchg
aas
sti
cmpsb
add
cmp
pushf
push
adc
mov
lcall
xchg
outsl
xchg
add
jns
mov
sti
xor
mov
gs
imul
mov
add
fildl
inc
pop
mov
jl
adc
inc
ret
cmp
mov
jnp
jbe
mov
js
lcall
cmp
dec
imul
icebp
pop
ss
adc
push
add
inc
jmp
sub
test
jbe
movsl
pop
popa
mov
pop
or
jge
lea
xor
into
push
imul
push
fstpl
js
add
mov
bound
mov
pop
or
mov
stos
inc
int3
loopne
enter
popf
loop
and
jno
fildll
subl
adc
push
popa
mov
test
xor
cli
out
jecxz
stc
mov
shrl
hlt
leave
mov
mov
sahf
and
bound
sbb
add
sub
pop
sbb
cmp
jge
inc
clc
dec
cmpl
mov
add
clc
sbb
dec
shrl
jno
mov
popa
adc
out
es
dec
xchg
aad
in
js
sbb
movsl
lods
in
in
xor
cmp
or
adc
push
inc
test
push
andl
fstps
stc
cmc
and
cwtl
or
notl
out
in
xchg
push
cmp
cmp
rep
fcompl
pop
mov
rcrl
int3
or
mov
dec
push
mov
outsb
and
mov
lds
push
in
adc
mov
mov
push
push
dec
sbb
xchg
add
out
aam
or
add
mov
sub
pop
lret
dec
mov
lds
bound
jnp
xchg
mov
pop
push
xor
or
pop
sbb
mov
cmpsl
test
jmp
and
insb
out
pop
daa
cwtl
mov
sarl
cmpsb
adc
fs
mov
loop
rorl
pop
jne
nop
aaa
push
movzbl
scas
cmp
repnz
add
sub
hlt
xor
lret
rorl
xchg
xor
pop
add
dec
ja
scas
repnz
scas
xor
faddl
addr16
dec
repz
pusha
pop
fwait
lock
adc
push
out
mov
test
dec
popa
addr16
jae
into
push
lcall
out
push
shl
mov
lret
xlat
sub
jne
sub
pop
pop
mov
mov
aas
loope
push
repz
push
cmpsb
jle
jmp
or
or
xlat
lods
and
aas
or
rorl
pop
lods
adc
xor
xor
out
inc
insl
mov
or
cmp
setno
inc
scas
shll
shrl
leave
stos
jo
xchg
movl
lods
add
push
mov
out
mov
aaa
cs
sarb
cmpsl
adc
adc
insl
insb
push
out
pusha
fildll
pop
cmp
mov
pop
aaa
jbe
jo
hlt
test
mov
mov
sub
jnp
mov
inc
faddl
jp
leave
fwait
cltd
movsl
je
sbb
pop
inc
mov
cmp
mov
xchg
jns
iret
cmp
mov
scas
mov
inc
and
cmp
sarb
inc
arpl
and
mov
adc
sub
push
mov
stos
call
es
loop
mov
ds
cmp
sti
or
aam
cmp
jp
insl
mov
sub
cmp
dec
mov
cltd
mov
fmuls
adc
das
adc
mov
jmp
int3
jae
pop
pop
cmp
and
xor
das
push
rorb
clc
inc
push
dec
and
xchg
sbb
mov
mov
mov
clc
data16
ret
int3
mov
rorb
and
jb
or
cmp
dec
shll
mov
sarl
std
pop
push
sahf
xchg
movsl
jbe
mov
jg
je
stos
ret
mov
add
pop
adc
rcrl
xchg
cmp
xchg
push
nop
jno
pop
mov
push
jno
sahf
lock
js
scas
jno
and
int3
test
mov
jecxz
adc
push
repnz
or
jecxz
jge
popa
mov
mov
xor
xor
cld
ret
inc
sbb
out
adcb
mov
cmp
repnz
push
data16
out
xor
mov
dec
sub
in
sbb
dec
fiadds
mov
adc
mov
jbe
jo
arpl
test
sub
imul
mov
jo
pop
mov
dec
mov
aas
xchg
or
mov
cmp
int3
addr16
push
push
inc
jnp
jle
pop
cs
and
xchg
divl
fs
inc
cmc
into
cmp
addr16
fwait
sti
xchg
dec
stos
test
inc
stos
cmp
dec
inc
dec
jae
dec
adc
je
and
call
mov
int
inc
inc
mov
jbe
andl
fstps
adc
stos
cmp
in
sub
add
incl
lcall
fimuls
mov
je
fistps
inc
xor
jns
xchg
mov
imul
sbb
xchg
shll
dec
aad
hlt
sub
mov
shl
cld
mov
loop
pop
loopne,pn
add
xor
bound
push
mov
sbb
jb
pop
outsl
je
mov
and
fildl
rcl
cwtl
das
xor
daa
sub
push
mov
leave
loopne
and
mov
pushf
add
aaa
stos
xchg
jnp
jge
add
inc
aad
inc
ret
rcll
cmpsb
pop
repnz
cld
fmuls
js
aaa
and
rcrb
mov
mov
in
sbb
ret
cmp
mov
add
popf
sub
jmp
aas
and
push
lock
pop
xlat
xor
or
outsl
and
inc
sub
sub
jne
daa
es
je
jnp
xsaves
scas
pushl
sub
cwtl
je
and
jge
loop
adc
rclb
push
mov
aaa
cld
ljmp
mov
xchg
and
repnz
jb
jge
jbe
ljmp
cmp
push
mov
in
into
pushf
pop
cli
arpl
and
stc
jl
ja
mov
push
je
lcall
cmp
mov
bound
mov
xchg
mov
sub
lods
int3
sub
in
popa
mov
mov
ret
pop
cmp
sub
push
lods
bound
sbb
fucomp
mov
push
add
cld
sub
cmp
xchg
jb
ret
cs
pusha
jle
cltd
xchg
jmp
mov
mov
mov
imul
mov
lds
rolb
or
add
and
jno
aad
inc
mov
cmp
js
in
mov
jg
pop
aas
mov
stos
cmc
pop
push
cmp
add
ss
cmp
inc
fimuls
test
into
icebp
dec
fbstp
popf
into
movb
test
mov
es
shl
sbb
rdtsc
dec
ja
cmp
cmp
push
andl
cmp
fistps
aas
add
push
add
out
lahf
or
and
stos
cld
inc
pop
adc
lret
cmp
pop
push
std
mov
and
pop
shll
sbb
fs
xor
popfw
or
sbb
das
test
jnp
jmp
inc
lods
negb
sbb
inc
dec
sub
mov
dec
aam
outsb
cld
lock
push
cltd
mov
les
sarl
sbb
lret
or
xlat
mov
xchg
inc
adc
add
xchg
scas
movsl
cmp
add
nop
xchg
sarb
xchg
jecxz
cmc
addr16
xchg
das
inc
lahf
out
div
jb
out
mov
jae
inc
pushf
or
std
sub
adc
push
adc
out
addl
cmp
mov
lret
arpl
ss
jns
addr16
shrl
xchg
imulb
repz
xchg
in
movsb
mov
jne
jge
out
inc
sub
out
es
dec
jl
dec
dec
leave
sahf
push
mov
fcompp
popf
scas
mov
mov
push
dec
jmp
xorb
push
stos
mov
and
sbb
arpl
sbb
add
jbe
cwtl
dec
fs
int3
sti
fists
ret
ret
es
bound
xchg
jp
jge
sub
jmp
dec
pop
or
adc
ret
nop
mov
imul
or
fs
xchg
mov
insb
cmp
fcoml
mov
sbb
int
nop
outsb
mov
inc
decl
bound
mov
test
dec
push
mov
lods
push
cmp
push
mov
in
jbe
mov
cmpsl
push
sbb
das
add
out
test
adc
xor
fisttps
int3
and
sbb
cmpsl
les
movsl
in
add
sub
shl
push
or
rorl
int
loopne
movsl
lods
or
shrl
jae
cmp
fisubs
gs
data16
stos
test
dec
insl
shrb
aam
enter
pop
fisubl
cmp
push
imul
sti
or
pop
push
and
bound
lret
fnstsw
into
mov
push
arpl
or
sbb
mov
ds
fsubs
push
sbb
mov
push
dec
inc
in
fwait
int
stos
add
push
shll
cmc
jecxz
out
and
cwtl
pop
cmpsb
cmp
mov
lret
das
cs
xor
xor
add
xor
adc
pop
push
xor
mov
mov
icebp
adc
in
cmp
mov
sub
shlb
xor
sti
sub
stos
push
mov
or
scas
test
imul
adc
test
clc
fbld
pop
pop
cmpsb
ds
pop
xlat
dec
mov
pop
stos
adc
clc
dec
inc
push
inc
into
inc
adc
stos
inc
les
insl
or
inc
jno
aam
sahf
xchg
adc
ficomps
sub
subb
stc
leave
lahf
int3
lds
daa
int
inc
cli
nop
cmp
jns
aaa
xchg
pop
insb
je
add
or
jp
add
lods
jg
dec
sbb
subl
sbb
xchg
fsubl
in
inc
cmp
enter
out
stc
xchg
imul
adc
cmp
shll
loopne
insb
mov
data16
fs
xor
daa
icebp
jle
jecxz
push
test
ja
imul
lods
stos
xor
loop
push
decb
inc
inc
and
or
add
push
clc
dec
or
shlb
or
outsl
in
divb
in
cmp
out
add
ret
inc
std
cmpsl
sbb
stc
adcb
xor
outsb
je
pusha
or
cmpsb
xor
sbb
adc
inc
ret
or
js
adc
inc
in
aaa
stos
ja
out
cmc
aad
pop
dec
mov
aam
mov
adc
adc
mov
lcall
std
mov
repnz
xchg
sub
dec
mov
jle
fwait
pusha
lahf
int3
dec
and
test
cmp
push
jle
mov
je
shll
jb
cmp
lcall
fucomip
jmp
pop
jmp
or
push
nop
jl
popl
pop
add
arpl
call
sub
jecxz
and
ret
add
mov
jmp
ret
stc
jno
test
adc
sub
ret
jl
lock
sbb
ss
rolb
mov
popa
lcall
mov
xchg
loopne
jns
out
mov
push
adc
mov
push
sub
int
insl
dec
pop
xlat
add
in
lcall
testb
lods
mov
sar
pop
dec
pop
and
sub
ret
inc
push
xchg
popf
pop
pop
push
fdivrl
inc
mov
ja
test
push
aaa
lret
push
and
sahf
pop
in
stos
jle
xor
lea
lock
push
or
cld
sbb
inc
cwtl
xchg
cmp
imull
lea
mov
add
xor
push
push
imulb
lds
addr16
push
sti
in
dec
sub
and
push
push
stc
loopne
loopne
xor
in
outsl
lods
pop
mov
and
out
std
sbb
outsb
sub
xchg
jl
loop
lret
jmp
adc
lods
in
orb
mov
pop
jns
js
repz
adc
push
pop
dec
cmc
int
cmp
or
jmp
ja
pop
dec
mov
stos
hlt
add
mov
jg
mov
pop
cmp
xlat
outsb
and
ja
jbe
cmp
sub
mov
scas
enter
je
mov
pop
orl
mov
push
clc
xchg
imul
fdivp
push
adcl
ror
push
inc
popa
sbb
xchg
mov
jb
mov
hlt
xlat
mov
lret
jmp
ss
dec
or
inc
nop
xor
dec
mov
cmpsl
mov
jnp
mov
cmpsb
out
add
xchg
jae
outsb
push
lock
push
test
add
and
repz
xor
mov
mov
mov
fidivl
fcomps
sahf
iret
jb
jnp
and
jl
push
shrb
inc
in
pop
stc
sbb
or
and
mov
jb
inc
test
xchg
imulb
in
jnp
roll
sbb
mov
mov
loop
repz
and
fwait
xchg
jg
mov
aaa
xchg
sub
mov
cs
xor
cwtl
push
and
ljmp
mov
outsb
jo
leave
mov
movsb
inc
scas
lahf
and
jle
pop
test
les
cmp
iret
stos
das
daa
das
xchg
mov
ljmp
cmp
movsb
xlat
and
add
inc
and
nop
cmp
repnz
sub
es
cmp
scas
shll
sub
inc
out
pushf
sbb
xorl
push
lock
mov
loope
repnz
and
sbb
negb
rolb
pop
ja
or
sub
iret
jns
pop
mov
cmpsl
sbb
pushf
ljmp
js
cld
cmp
add
dec
mov
in
jae
lret
aas
lods
shlb
mov
cmc
sbb
push
incl
movl
push
insl
aaa
fcoms
and
gs
add
cld
push
xor
mov
and
inc
push
or
cmp
xchg
ja
and
in
or
out
xor
movsl
dec
xchg
rcrl
cs
sbb
unpcklps
int3
orb
xchg
cs
xor
xchg
fistpl
jo
inc
mov
out
imul
and
mov
popl
lods
push
mov
lret
xor
cmp
unpckhps
pushf
enter
loop
scas
add
into
leave
inc
add
cmp
stc
aam
ret
xorb
xor
les
xor
out
push
jmp
add
iret
xlat
xor
out
insl
dec
sub
in
adc
mov
mov
push
sbbl
push
sbb
sbb
sti
add
mov
incl
fdivrl
iret
and
cld
xor
cmp
xchg
inc
xor
out
inc
loope
loop
pop
push
fcoms
or
pop
dec
iret
aas
jp
lcall
or
push
arpl
dec
inc
lcall
lock
sbb
je
jnp
lahf
push
push
adc
push
imul
icebp
stos
jg
sub
lahf
lahf
subl
or
fs
jecxz
dec
ret
rcll
xchg
dec
push
daa
ret
jae
inc
pop
jp
push
add
iret
jnp
or
mov
stos
lods
cmpb
js
shll
mov
adcl
sti
lcall
pop
cwtl
xor
jge
mov
adc
pop
pop
jl
mov
incb
and
adc
sbb
iret
push
ss
push
cltd
lods
idivb
ljmp
ja
stc
mov
mov
jmp
mov
cmp
mov
xchg
xor
push
out
sahf
push
call
jle
sub
xchg
xchg
cltd
dec
dec
and
lods
mov
cltd
and
mov
fildll
addr16
mov
bound
xor
data16
cmp
mov
stc
out
mov
test
jb
dec
loopne
sti
repz
mov
dec
fildll
xchg
in
js
inc
int3
mov
das
dec
repz
push
xlat
pop
into
mov
loope
out
sub
mov
sub
notb
cmp
add
mov
test
insl
and
movaps
in
dec
int
cmp
into
in
in
sahf
movsl
jae
gs
mov
loop
loopne
in
adc
or
nop
add
xlat
stos
jae
adc
out
nop
std
lods
shrl
or
lahf
and
cmc
mov
push
es
push
out
mov
pop
into
mov
js
outsl
jle
xlat
sub
mov
pop
je
jnp
xchg
pop
bsf
popa
sar
paddb
loop
bound
ja
jecxz
lret
mov
mov
movsb
adc
xchg
push
pop
outsl
mov
push
enter
inc
stos
push
lods
in
stos
insl
lock
mov
out
adc
xor
sbb
jmp
push
sbb
fsubrp
int
pop
and
or
loopne
out
pushf
inc
mov
ljmp
sub
lret
imull
cli
scas
ffree
out
es
outsl
pop
sub
ret
dec
and
out
vcomiss
adc
push
xchg
adc
jae
push
movsb
xchg
pop
xchg
add
test
mov
mov
cmp
jecxz
inc
outsb
les
fst
bound
repnz
test
jno
test
xchg
test
jno
bound
lret
inc
and
xchg
sub
addb
lret
test
cmp
aaa
pop
outsb
cmp
jp
ret
movsl
xor
xor
cmp
mov
jmp
orb
cmp
fs
cmp
fstpt
imul
cmp
pop
adc
into
lock
pop
ds
or
xchg
and
push
fistpl
into
push
js
pop
adc
out
lods
add
stc
scas
xor
int
adc
outsl
xor
sti
jbe
orl
test
push
leave
or
aaa
fstpl
and
iret
in
std
sub
imul
and
push
xchg
test
or
mov
pop
mov
push
scas
or
jno
and
icebp
mov
jl
lcall
sahf
callw
push
and
js
popa
icebp
mov
push
loope
lds
sahf
loop
push
pop
sbb
dec
pop
xlat
gs
iret
cmpsb
push
mov
push
fiadds
sarb
sbb
cltd
icebp
aas
fwait
out
pop
sub
je
out
jge
fmull
and
ljmp
cmp
mov
fcompl
jb
xor
jle
sub
cmpl
jp
ljmp
sub
shrl
lahf
cwtl
rcrl
rcll
ret
push
inc
mov
addl
stos
pushf
or
insb
movsb
aas
shl
mov
add
push
mov
test
xor
test
hlt
sbb
xor
sub
aaa
xor
or
ret
lahf
dec
fidivs
pop
iret
repz
ret
call
sbb
sbb
cmp
sub
insl
loopne
inc
jnp
lret
lods
cmc
cmp
ss
ja
inc
xlat
push
pop
xchg
xchg
cmp
or
cmp
hlt
out
inc
gs
adc
iret
testb
sub
inc
mov
fsubl
xor
cld
jns
movsl
cmp
sub
inc
and
scas
pop
data16
and
cld
mov
or
jnp
loop
add
add
nop
and
adc
jl
sub
ja
shlb
push
dec
test
iret
lock
cli
jo
push
xchg
sahf
inc
fiaddl
fcoms
mov
idivb
lods
hlt
jle
hlt
pop
mov
rcl
mov
insb
lods
gs
sub
or
xchg
mov
jmp
dec
mov
nop
jb
das
jp
ret
cltd
pop
cmp
inc
inc
mov
pop
mov
cmp
pop
dec
xchg
xchg
mov
xchg
mov
push
popf
sbb
lds
pop
mov
mov
mov
sbb
push
mov
loope
rolb
pop
fwait
outsl
pop
fnsave
adc
les
cld
jp
dec
cli
in
mov
sti
mull
insl
vpsraw
and
movsb
xchg
add
mov
popf
bound
lods
mov
pop
incl
cmp
cmp
push
mov
cmp
pop
scas
mov
daa
gs
mov
cmc
rorl
out
push
mov
cmc
jle
pop
lea
sbb
pop
out
or
imul
leave
cmpsl
inc
xchg
push
sbb
inc
imul
popa
es
das
dec
addl
aam
sub
in
setle
sbb
popf
leave
jo
stc
inc
xor
xor
popl
dec
cwtl
jnp
mov
and
ret
jp
sbb
jae
cmp
cld
scas
fldenv
mov
jnp
cmp
lds
nop
leave
xchg
stos
and
push
or
xchg
insb
cmpsb
inc
xchg
bound
iret
outsl
test
mov
inc
sub
inc
mov
lds
sarl
test
mov
pop
testl
loope
setbe
rclb
and
sub
in
adc
movsl
fcomi
pop
sarl
jnp
mov
xor
push
sahf
cmp
jo
pop
movsb
insb
mov
xor
and
loop
lret
xchg
test
mov
cmp
cmp
inc
jmp
mov
daa
pusha
mov
mov
inc
dec
loop
xchg
std
lcall
cmp
jle
push
cmp
aas
or
xchg
int3
pop
inc
add
adc
xchg
sub
outsb
jle
popa
jl
inc
pushf
xchg
inc
sbb
push
and
jl,pt
mov
pusha
clc
inc
cltd
pop
dec
push
shlb
insb
push
dec
sarl
xchg
adc
mov
push
sbb
incl
andl
loopne
iret
jne
mov
jns
fimuls
jg
inc
lcall
sub
push
jp
popf
insl
xchg
sub
cltd
cmc
cmpsl
mov
push
dec
and
sub
addl
dec
addr16
std
aas
dec
fs
stc
push
add
or
mov
lods
fldcw
add
xor
push
adc
mov
nop
dec
imul
daa
inc
xor
pop
lahf
push
into
negb
push
rcrb
ret
loopne
aam
xchg
ret
push
cmp
inc
movsb
orb
adc
bnd
out
das
lret
repnz
iret
mov
xor
aam
dec
dec
adc
mov
aam
nop
add
and
js
sti
test
jns
neg
imulb
in
pxor
fldenv
dec
insl
mov
sbb
jno
sbb
dec
jo
rcll
orl
fsubl
call
and
fisubrl
add
out
je
mov
mov
or
pop
jle
flds
aad
push
roll
jecxz
andb
add
out
adc
les
clc
test
adc
inc
mov
inc
cmp
or
and
mov
dec
cmp
push
addr16
in
fcoml
cmp
mov
js
or
and
test
popf
insl
mov
sub
xchg
mov
jmp
adcl
loop
add
sub
mov
add
adcb
lds
fcomps
inc
cltd
dec
jg
xlat
aam
stos
adc
dec
pop
xchg
loope
cmpsl
jl
mov
xor
shl
scas
in
sahf
mov
rorb
mov
fdivrp
icebp
fwait
push
loop
pop
adc
or
add
add
add
dec
shll
les
cmp
ret
cmp
xchg
pusha
mov
sarl
ds
fmull
repnz
addr16
mov
add
mov
xchg
add
adc
arpl
cltd
test
test
out
jge
popf
in
ficomps
frndint
ret
outsl
negl
cwtl
push
filds
mov
cld
xor
mov
mov
aaa
out
in
push
dec
inc
cmp
nop
xor
fwait
sbb
jmp
imul
push
movsl
sbbb
stos
mov
ret
sub
or
outsl
mov
test
mov
dec
jno
push
or
or
pop
fistpll
add
sub
mov
xchg
lods
adc
lea
ja
lock
enter
and
add
mov
push
mov
fisubrs
sub
mov
iret
jo
mov
adc
jmp
xchg
and
maxps
dec
sahf
xchg
sbbl
imul
repz
jmp
and
cmp
popf
repz
aam
cmp
or
mov
negb
out
test
sub
test
sahf
lcall
dec
sub
ja
cmp
imul
lock
pop
rcrl
mov
dec
shrb
xorb
push
cmp
out
sbb
add
inc
testb
pushf
cmp
jmp
add
mov
imul
lahf
jno
inc
xchg
push
loopne
dec
jno
cwtl
mov
sub
repnz
cmp
addr16
cmp
sbb
jle
or
outsl
pop
jecxz
jl
xchg
push
jmp
lcall
xchg
les
addl
shlb
in
or
cmp
outsb
dec
pop
xor
nop
sbb
dec
rol
jg
xchg
pop
les
lea
loop
sbb
js
mov
and
sub
addb
in
jmp
movb
std
pop
outsb
jb
fst
lds
inc
sahf
scas
aam
dec
data16
cs
in
loopne
orb
xchg
stos
in
mov
mov
repz
push
hlt
lods
pop
adc
xor
js
mov
mov
pusha
pop
mov
xchg
ljmp
inc
mov
andb
adc
add
jmp
cwtl
mov
and
xchg
inc
jnp
test
mov
popf
bound
or
lea
jno
outsb
sub
test
aam
pop
in
and
inc
lods
inc
xchg
shll
jecxz
loope
sbb
std
lcall
repz
mov
sub
fucomip
insb
cmp
and
sub
loope
scas
lea
gs
mov
repnz
push
or
xor
pop
dec
sti
divb
imul
sub
int
out
insl
test
call
pop
mov
aad
mov
mov
sub
mov
dec
testb
pop
jg
jp
sbb
les
ret
call
loope
in
cltd
and
fnstsw
shrb
lock
popa
pop
loope
mov
and
xor
push
pop
inc
pop
push
sbb
stos
lret
loopne
jg
sahf
cmp
fcomi
dec
adc
xor
es
push
push
push
xor
shlb
add
lods
pusha
pop
add
pop
mov
call
pushf
or
push
in
ja
pop
call
fsub
inc
xor
jno
cmp
push
inc
outsl
ret
push
int3
lds
addr16
inc
fcompl
in
push
mov
ss
stos
out
aas
lods
add
test
aas
fidivl
mov
call
cmpsb
out
add
andl
jmp
sub
jge
ret
cs
jnp
arpl
loope
test
shl
xchg
jae
xor
das
pop
ret
xchg
sub
daa
and
sub
mov
cmp
sub
add
pushf
mov
aam
sbb
mov
mov
loop
stos
cmp
bound
dec
movsb
cmp
jnp
aad
mov
fidivl
pop
jmp
imul
mov
sub
test
jne
inc
cmp
xchg
fisttps
fidivs
mov
or
and
sub
xor
sti
push
jp
shlb
and
push
sbb
pop
outsl
in
mov
dec
mov
push
jbe
cmp
mov
dec
push
in
out
sbb
mov
adc
push
fwait
xchg
mov
inc
stc
add
repnz
sbb
jb
ret
hlt
roll
mov
into
jno
inc
xor
out
test
cmp
dec
in
scas
jbe
dec
daa
push
add
xchg
ret
movsl
aad
xchg
mull
std
ret
mov
push
leave
or
jae
testb
testb
or
cmp
stos
cltd
pop
push
pop
cmpsl
lock
mov
push
dec
push
and
outsb
lret
push
jo
ret
mov
sahf
xchg
repz
jo
jmp
push
in
jae
test
push
jecxz
outsb
push
sbb
xchg
xchg
js
and
or
jb
push
cmp
xor
xchg
mov
insl
xchg
cltd
mov
xor
cmp
adc
dec
lret
push
dec
mov
xchg
pop
ds
xchg
in
in
out
repz
clc
dec
das
js
add
fnstenv
inc
cmp
add
sbbb
cmpsb
pop
inc
dec
ret
scas
xchg
lock
lea
in
in
lcall
jnp
enter
xlat
xor
sbb
int
xor
scas
adc
pop
xchg
cltd
xchg
js
fcomps
sti
fimull
and
jl
push
fnstcw
loop
hlt
mov
lahf
ss
jl
mov
popa
lock
out
add
dec
fwait
ret
or
dec
out
xor
shlb
add
xchg
xchg
sub
in
cs
bound
cmp
dec
decb
jmp
jle
test
gs
repz
test
testb
lahf
fwait
and
daa
inc
insl
hlt
test
sbb
bnd
mov
push
cld
in
gs
pop
iret
mov
loope
fsts
and
push
bound
dec
push
jns
lret
test
and
aaa
jp
mov
dec
fdiv
cmpsl
test
and
or
pop
hlt
pop
push
fisttpll
push
pusha
dec
add
inc
cli
sbb
aad
jno
pop
sbb
pop
push
out
jbe
ja
jae
outsb
adc
sub
cmc
or
iret
cmpsl
jb
mov
xchg
scas
sbb
rclb
icebp
or
outsb
pop
adc
mov
push
dec
pop
popa
popf
sub
out
adc
mov
xlat
pop
movsb
xchg
fisttpll
pop
mov
xor
fmull
je
jno
mov
cmpb
testl
pop
fcmovne
lahf
xor
lret
push
mov
cmp
mov
cmp
mov
icebp
mov
mov
jg
aaa
and
mov
das
or
lea
mov
clc
adc
dec
inc
mov
out
push
sarl
lcall
inc
mov
xchg
pusha
popf
arpl
or
push
sbb
imul
jnp
pop
inc
lret
lock
cs
out
mov
mov
mov
cmpsb
sbbl
add
xor
inc
cmp
or
sbb
mov
mov
divb
rcll
lret
mov
shlb
into
or
xchg
mov
jb
fildl
imul
sbb
outsb
cmp
sub
mov
fwait
dec
dec
dec
pop
xchg
xor
or
mov
xchg
ss
jbe
imul
fnstsw
and
les
push
mov
sbb
adc
pop
inc
pushf
shrl
rol
mov
lret
test
mov
mov
imul
stos
and
out
xchg
stos
aad
mov
xchg
movsl
fldt
imul
xchg
dec
sbb
cmc
mov
imul
sub
test
pusha
scas
add
les
xor
andl
adc
jbe
adc
sbb
test
mov
xchg
push
cmp
and
push
or
mov
in
out
push
clc
push
or
lret
sbb
mov
inc
mov
in
das
or
into
mov
add
js
push
pusha
push
mov
mov
movsb
stc
pop
aaa
bswap
scas
das
push
gs
imulb
aam
enter
cwtl
enter
outsb
das
ret
outsl
push
mov
adc
call
shl
xchg
push
fisubl
lock
xchg
mov
push
lahf
fwait
sti
inc
fwait
mov
pusha
loop
iret
xchg
jl
xor
hlt
aaa
fbld
test
mov
pop
push
test
cwtl
mov
shrl
fimuls
dec
scas
adc
imul
adc
mov
sub
mov
lods
addl
push
mov
sub
and
aaa
inc
lods
dec
mov
fadd
lea
inc
jbe
jecxz
cmp
inc
aaa
mov
sti
adc
sub
inc
mov
xor
add
movsb
aam
lcall
push
test
sbb
jle
enter
icebp
inc
outsb
sub
out
nop
fistpl
xor
cltd
mov
cmc
xor
sub
xchg
adc
out
test
inc
ret
pop
fildl
cmpsb
mov
pop
mov
sub
jl
add
movsl
add
xchg
lcall
mov
sub
lea
mov
stos
sub
inc
data16
add
add
push
punpckldq
je
stos
test
add
xor
cld
push
insl
sti
mov
cmp
jb
mov
xchg
loopne
in
clc
das
dec
dec
xor
into
jmp
and
fcmovne
mov
in
test
fstpt
mov
movsl
xchg
and
pusha
out
addb
in
pop
pop
mov
xor
ljmp
es
push
mov
and
mov
cmc
push
cli
jno
dec
pop
xchg
push
jmp
call
inc
cld
cmpb
adc
inc
arpl
outsb
add
cmp
push
mov
mov
cmp
push
xor
ja
inc
dec
adcb
test
test
and
pop
xchg
sub
insb
fs
int3
lcall
mov
cmp
cmp
cld
in
push
in
add
mov
and
es
push
sbb
push
fmull
stos
iret
mov
pop
outsb
orb
lcall
outsl
js
sbb
xchg
out
jne
iret
sbb
mov
push
mov
mov
mov
fsubr
int
xor
test
mov
dec
dec
and
push
insb
and
popf
jp
es
and
mov
jmp
jns
hlt
subb
mov
hlt
fmul
adc
push
and
aad
and
jle
stos
xor
mov
repnz
ja
jp
jb
add
add
mov
mov
leave
ja
inc
lods
and
data16
push
jge
das
push
cmp
fnstcw
rep
in
pop
dec
cmpsb
inc
insb
imul
xchg
push
int3
lea
jmp
ja
cmpsb
xor
testl
pop
dec
movsb
add
in
cmp
test
in
dec
xor
add
push
push
stc
pop
daa
xor
fbld
repnz
clc
test
dec
push
psubd
outsl
jnp
add
and
jle
pop
fwait
scas
inc
jge
lahf
repnz
xchg
mov
mov
push
mov
repnz
vphaddbd
pusha
popa
notl
add
addl
xchg
adc
into
in
stos
adc
jl
insb
in
mov
xor
pop
xor
mov
cmc
mov
jmp
repz
out
jge
out
lcall
in
scas
cmp
sub
rcr
push
pop
xlat
pop
xor
add
lods
ds
mov
inc
mov
adc
xchg
stc
inc
sbb
pop
movsl
mov
js
movb
mov
sub
rcrb
in
pop
mov
outsb
cmp
push
dec
cld
and
mov
inc
adc
testb
cld
ljmp
xchg
mov
xchg
xor
orb
mov
inc
jmp
push
add
nop
pop
cld
gs
mov
pop
lret
push
mov
mov
nop
adc
and
or
jp
clc
into
mov
adc
aas
cmp
mov
jo
imul
xchg
or
sub
add
dec
xchg
std
or
jmp
pop
push
inc
hlt
pop
mov
orl
adc
or
repnz
inc
and
fwait
and
mov
scas
xor
cmp
gs
test
sarb
dec
dec
adc
push
je
sbb
sub
mov
jge
cmp
push
inc
aad
fistl
sbb
pushf
xor
jbe
incl
int
adc
inc
pusha
popa
and
loope
adc
mov
inc
mov
aad
enter
aad
lock
fldl
imul
xchg
popl
stc
in
addr16
roll
adc
or
jbe
pop
cmp
sti
in
fucomp
jmp
mul
lcall
mov
pushf
outsb
mov
mov
mov
mov
adc
sub
jmp
je
inc
mov
and
inc
sbb
adc
data16
out
add
in
mov
xchg
mov
movsb
outsb
cmpsl
inc
lods
sub
pop
lret
pop
xchg
mov
jg
jl
push
imul
and
pop
movsl
mov
jne
xchg
push
ja
es
sahf
addr16
ss
push
sub
out
hlt
shll
pop
into
pop
int
sub
pop
xchg
lret
movsb
lahf
les
movntq
icebp
test
adc
cmc
daa
shll
dec
mov
and
dec
or
jg
sub
lret
fisttpl
pusha
xchg
int
inc
mov
lds
fadds
ljmp
xchg
in
push
les
scas
xor
push
push
loop
call
out
les
jne
push
test
mov
xchg
xorb
cmp
adc
leave
jne
lret
jp
jne
cmp
and
inc
add
dec
mov
pop
dec
out
dec
sub
and
test
sarl
add
mov
cmp
dec
push
movsb
push
add
shlb
ficompl
push
stos
jmp
cltd
xor
mov
jne
sbb
enter
cmpsl
jo
dec
jge
cli
inc
lods
popf
jns
push
cmp
dec
mov
imul
mov
mov
ljmp
cmp
sub
stc
or
cmp
loopne
cmc
jbe
pusha
inc
push
add
sbb
lods
add
vmovlps
sub
adc
pop
cld
aam
sub
mov
enter
or
fnsave
adc
push
sbb
jge
cmpl
pop
in
hlt
and
inc
js
orb
rorl
fnsave
in
and
in
mov
xor
mov
mov
mov
movsb
repnz
in
cmp
out
push
jbe
mov
mov
in
add
mov
push
pop
inc
push
lret
pop
cmp
adcl
out
les
sub
xlat
fucomi
cmp
pop
pop
mov
test
icebp
arpl
jno
inc
cmpsb
or
inc
push
popa
fmuls
mov
pop
into
sbb
popf
jbe
test
into
lret
aas
ds
cmpsb
mov
popf
cwtl
inc
iret
cmpsb
mov
lret
out
push
cmp
cltd
aaa
push
xchg
push
stos
icebp
int3
in
das
adc
je
xchg
or
mul
pushl
ja
dec
pop
push
movsl
mov
mov
sbb
sbb
push
mov
rcrb
xchg
jbe
aad
lcall
sbb
jno
or
jecxz
sbb
cmp
lcall
and
jns
jecxz
cmp
xlat
xchg
testb
pop
jecxz
xchg
pusha
fcompl
pushf
rcl
mov
ds
daa
lret
xor
xchg
repz
lds
xor
out
mov
mov
push
jecxz
add
popf
loope
jmp
mov
xchg
adc
or
inc
mov
jl
aas
push
inc
rcl
lret
mov
push
adc
enter
decl
lcall
inc
mov
and
xchg
push
fucomi
mov
int
mov
js
jne
mov
sti
mov
iret
cmc
fisttpl
out
sub
negl
inc
into
mov
cmp
loopne
sarb
push
mov
bound
pop
and
xor
lock
insb
fcoms
scas
push
mov
pop
mov
in
test
sbb
lret
push
loopne
xor
or
out
xor
and
das
cltd
cld
scas
into
jl
pop
mov
mov
adc
push
jns
lds
dec
test
mov
jo
cmc
xor
and
out
fsubl
cmp
imul
pop
lods
pop
sub
call
adc
pushf
aaa
mov
or
inc
xchg
fstp
mov
lcall
push
push
das
repnz
pusha
clc
or
cmp
sar
out
dec
pop
js
enter
loop
mov
mov
arpl
bound
cmpsl
dec
push
insb
rdtsc
or
aam
push
test
fisttps
dec
dec
fisttpl
cmp
punpckldq
popl
aad
inc
lcall
and
flds
add
adc
je
fwait
and
fsub
or
jg
mov
ret
or
jle
inc
test
lea
arpl
mov
incb
rcrb
push
mov
mov
ss
loopne
shlb
adc
push
icebp
fcomi
in
addr16
add
jp
push
sbb
sub
jae
insb
jge
nop
loop
mov
dec
lcall
lret
mov
imul
test
bound
xor
ret
adc
xor
sahf
fldl
mov
cltd
cmp
mov
jns
pop
push
jns
popa
xchg
mov
pop
xchg
jns
sub
pop
imul
imul
jbe
pop
dec
cltd
add
sbb
in
mov
adc
into
cmpsb
or
fsubp
cmp
add
cmp
push
push
xor
call
loopne
inc
sub
push
insl
push
push
pop
mov
and
enter
rorl
sbb
pop
fwait
cmp
xor
jbe
xchg
test
mov
lret
dec
adc
push
mov
fmuls
scas
lcall
out
clc
xor
ljmp
popf
shl
loopne
pop
lahf
push
movsb
xchg
jmp
dec
enter
fs
popa
test
andb
loop
mov
push
dec
xor
fidivrl
sub
mov
rcrl
xor
outsb
divl
sub
push
cmp
add
mov
aam
push
pop
pop
pop
int3
je
stc
mov
or
icebp
inc
and
in
mov
lds
inc
and
stos
int
cmpsb
nop
clc
add
sub
daa
sub
stos
push
leave
shlb
bswap
mov
mov
enter
xchg
mov
loopne
sub
test
and
mul
test
mov
xor
loope
pop
and
pop
cmp
out
lcall
arpl
mov
mov
fwait
js
sub
and
fisubs
sti
enter
dec
hlt
stos
inc
mov
call
ret
jns
rorl
xor
inc
js
adc
add
loope
ljmp
aaa
and
mov
les
clc
imull
mov
and
jmp
addr16
push
stos
xchg
xor
mov
gs
sub
or
aaa
cwtl
call
push
ret
cmp
add
pop
push
pusha
adc
icebp
scas
aad
and
xor
cmpl
ljmp
outsb
in
push
loopne
cmpsb
xor
subl
je
shr
xlat
sub
xchg
sub
dec
nop
adc
mov
inc
push
les
dec
dec
pop
ds
mov
xchg
inc
mov
pop
mov
mov
and
lret
add
mov
or
or
test
jl
cli
push
xchg
cmpsl
mov
mov
mov
cli
pushf
inc
sbb
les
mov
stos
sti
in
cmpl
pusha
je
arpl
sbb
out
pop
or
push
lcall
clc
mov
ficomps
insl
leave
lods
lods
xchg
imul
mov
pop
loope
nop
jg
push
inc
sbb
aad
jae
test
mov
imul
insb
push
pop
fidivs
repz
das
mov
pop
mov
mov
sbb
fnsave
ret
les
mov
daa
loop
inc
and
pop
jb
jge
jge
lret
pop
outsl
adc
rcrl
loop
out
cmp
les
xchg
sbb
movsb
sarb
or
shrb
lcall
lds
pop
mov
inc
mov
xchg
or
cmp
fwait
lahf
mov
mov
dec
push
cmp
repz
jge
in
ror
dec
aas
dec
test
shll
sub
mov
mov
mov
mov
mov
loopne
in
sbb
stos
daa
int
jno
dec
cli
out
sarb
mov
push
mov
and
std
xchg
in
fs
stc
rcl
jo
xchg
xchg
in
mov
and
imull
jno
dec
out
lcall
sbb
inc
fisubrl
call
out
and
jb
inc
rclb
and
push
rcrl
pop
out
cmp
popf
or
lret
testl
dec
adc
mov
adcl
sbb
mov
fnstsw
inc
cmpsb
mov
mov
iret
pusha
mov
lds
xor
xchg
stos
mov
lcall
pop
shlb
xor
adcb
popf
orl
jb
mov
add
mov
insb
cltd
mov
out
jl
std
imulb
subl
xchg
pop
dec
inc
lock
mov
or
nop
clc
fwait
mov
iret
aaa
mov
lahf
cmp
mov
lds
sbb
std
push
sub
xor
pusha
imul
push
jl
dec
pop
xor
push
pushf
jne
ficoml
mov
sub
sbb
push
int3
insl
shll
je
loopne
lods
test
or
inc
adc
stos
xchg
punpckhdq
cmpsl
ret
pop
add
inc
stos
push
cmpsb
stos
lahf
adc
add
xchg
mov
mov
das
imul
cwtl
jg
clc
cmp
dec
cmp
negl
ja
mov
and
xlat
imul
xor
mov
or
push
xorl
xchg
mov
ss
mov
cs
xchg
and
adc
repz
jmp
inc
and
and
xlat
out
in
jb
loope
popa
xchg
ret
push
push
outsb
addb
add
int
push
sarb
dec
in
dec
aam
xor
sub
adcl
xor
and
pop
push
add
fnop
mov
dec
shrl
sub
inc
out
das
push
clc
insl
push
sub
movsl
scas
ret
mov
pop
and
xor
jecxz
push
cld
push
scas
mov
push
lret
cmpl
lahf
into
inc
cmp
cld
dec
xor
sbb
sar
jae
push
sbb
icebp
push
xor
pop
pop
push
fbld
lea
pop
sbb
and
popa
adc
adc
adc
leave
sub
nop
cmpl
nop
sub
sub
jmp
dec
cwtl
movsl
adc
cmp
xchg
cmp
call
lret
xchg
rcll
jb
adc
ja
jbe
enter
cmp
mov
call
sar
cmp
adc
mov
push
push
jle
mov
cmp
mov
pop
add
jp
mov
icebp
ficomps
lods
jmp
sbb
sbbb
fwait
pop
cli
mov
stos
ret
roll
mov
sub
lcall
add
rclb
mov
int
pop
repnz
stc
dec
inc
or
cmp
fisttpll
dec
jb
xor
test
xor
aas
cmpsb
test
mov
mov
add
mov
fcomi
cmpsl
mov
ret
sbb
add
xchg
lcall
outsb
loope
jmp
shrb
fwait
mov
mov
push
dec
sbb
jle
nop
ret
push
sub
test
and
cwtl
pop
notb
mov
jle
iret
or
jl
xchg
mov
cmp
mov
pusha
mov
mov
inc
rcrb
sti
cwtl
int3
sbb
jg
inc
sub
pop
inc
scas
popf
add
lahf
shl
cli
shlb
mov
push
sbb
loopne
imul
sub
mov
or
jl
call
sbb
clc
xorl
cmp
and
dec
rcll
jno
mov
mov
add
movsb
and
dec
xor
pop
sbb
iret
sub
mov
dec
popf
sbb
stos
leave
std
push
dec
je
push
jno
jle
out
divps
mov
mov
jne
stos
inc
in
in
addl
jg
movsb
sbb
call
inc
xchg
push
push
mull
insl
push
mov
dec
mov
jno
lds
loope
movsl
dec
add
or
push
int
not
fbld
es
dec
push
xor
filds
dec
xor
add
fisttpl
push
mov
xlat
mov
and
jne
mov
ret
ljmp
dec
int
xchg
xchg
dec
pop
addl
rolb
stos
addr16
in
mov
inc
movsb
cmp
enter
xchg
aas
aad
repnz
gs
int3
xor
dec
fsub
xor
enter
out
dec
fisubrl
stos
push
and
xor
inc
fcmovnb
xchg
push
mov
push
jbe
ret
fcmovne
pop
add
es
cmp
cmc
adc
stos
pop
xchg
dec
in
enter
loope
data16
jle
mov
mov
and
pop
test
out
add
nop
sbb
xor
leave
xor
pop
shll
in
loopne
xor
push
mov
lahf
dec
inc
or
aaa
push
clc
jle
call
mov
pop
fists
inc
movb
push
sub
jmp
outsb
imul
in
or
pop
xor
push
mov
mov
dec
cmp
ja
adc
icebp
stos
subb
dec
loop
iret
aaa
rclb
std
cmp
xchg
adc
sbb
ret
xchg
push
adc
repz
mov
sbb
mov
mov
sbb
out
leave
sub
insl
lods
mov
xor
add
adc
ret
mov
inc
lock
leave
loope
test
stc
fisubrs
xor
call
ja
loop
mov
test
in
push
dec
add
xor
lahf
int3
add
push
movsb
xchg
testb
sbb
rcll
adc
pusha
out
mov
pop
cmp
mov
test
adc
mov
into
outsb
xchg
adc
mov
add
subl
outsl
jbe
jl
jmp
jecxz
add
sub
movsb
inc
xchg
and
mov
xor
bound
nop
ret
cwtl
sbb
fcmovnb
push
lahf
or
jge
into
inc
into
lret
mov
and
lds
push
pop
inc
mov
mov
ljmp
call
popa
cmp
and
push
mov
pop
lcall
mov
mov
xor
pop
cwtl
mov
pop
mov
shl
xchg
enter
sbb
movsb
daa
out
aas
das
cmp
pop
push
jmp
aam
jns
sbb
sub
notb
in
push
mov
pop
push
mov
pop
ja
test
loopne
testb
outsl
pop
push
hlt
int
shll
inc
sub
xchg
pop
mov
cwtl
fsubp
iret
cmovbe
pop
dec
daa
xor
outsl
sahf
ret
xchg
push
push
scas
sbb
pop
sub
mov
push
mov
hlt
out
sbb
xchg
and
sub
stos
add
jmp
adc
inc
pop
les
imul
jae
movsb
jge
adc
repnz
sub
imul
enter
add
mov
cmp
xchg
mov
cmpsb
sbb
lock
dec
lret
mov
lcall
cwtl
imul
jnp
jge
das
add
sahf
pop
pop
orl
call
out
or
enter
cmp
push
data16
add
mov
shrl
sbb
scas
xchg
int3
mov
ret
mov
cmpsl
mov
sub
cs
cmc
rclb
fisubs
push
lock
sbb
cmp
pop
negb
cmp
pop
push
xchg
aad
aad
jmp
push
xchg
scas
pop
daa
and
pushf
jns
mov
mov
enter
mov
xlat
fbld
mov
cmp
jae
dec
mov
int3
fsubs
pop
ja
sub
xchg
cmp
jo
cld
dec
mov
xchg
leave
add
into
and
loope
mov
mov
ret
jns
testl
int
inc
test
xlat
sarl
roll
jb
sub
push
insb
push
shlb
icebp
dec
test
mov
xchg
cmp
push
and
xchg
sub
decl
push
sub
call
nop
js
xchg
xchg
rcrb
xor
fs
stc
adc
adc
imul
fsubs
into
mov
dec
test
ljmp
dec
and
mov
inc
sub
xor
push
mov
adc
cmpsl
inc
cmpsl
lret
mov
inc
inc
xor
and
jno
fstpt
xchg
sub
loope
jmp
xchg
dec
push
movsb
push
inc
movsl
std
ja
icebp
and
lret
std
aaa
xlat
das
cmc
imul
mov
popa
sbb
loope
out
adc
adc
idiv
pop
loop
mov
int3
fsubrl
test
int
in
pushf
divl
jnp
int3
xchg
mov
mov
mov
jns
jecxz
add
aad
ja
jecxz
cmpsb
gs
mov
add
popf
ret
xor
mov
sbb
jl
dec
mov
cmovs
add
jno
pop
daa
jae
stc
mov
cmpsl
loopne
and
hlt
outsl
dec
jnp
into
lea
cmovo
idivl
and
jl
mov
pop
jp
ss
pop
push
rol
fmuls
insl
stos
mov
fs
rclb
sub
into
fiadds
imul
lock
fldcw
and
sbb
or
pop
mov
into
call
dec
fsubs
xchg
out
lock
rcrl
inc
xor
push
adc
pop
jno
sbbb
incl
cld
jns
push
and
icebp
insl
divb
push
dec
sbb
mov
into
add
repnz
add
push
jb
cmp
jp
outsb
cmpsl
and
stc
neg
sbb
xor
popf
scas
inc
xchg
xlat
dec
inc
stc
cmp
cmp
popa
add
adcb
pop
ficoms
ss
in
mov
cmpsl
dec
and
xlat
mov
sbb
dec
sub
out
jge
cmp
or
push
leave
cmp
out
push
outsb
out
mov
mov
sub
test
scas
pop
aaa
jl
adc
sbb
loopne
jo
imull
add
test
mov
jmp
cmovp
aam
inc
sbb
pusha
push
sub
pop
pop
sarb
stos
addr16
mov
xor
jae
ljmp
mov
stos
dec
je
mov
loopne
xor
iret
test
ret
and
xor
xor
outsb
pop
leave
out
in
push
mov
mov
pop
out
enter
push
sub
aas
loopne
shlb
and
push
inc
mov
jo
cmp
addb
xchg
mov
ret
pop
ljmp
pop
sbbl
aad
int3
into
ja
inc
mov
icebp
sbb
lea
ffreep
push
mov
ss
jae
fistpl
ja
ja
sbb
mov
notl
push
in
pop
clc
stos
arpl
sbb
lahf
lahf
dec
add
scas
sbb
inc
inc
mov
mov
add
bound
stos
rorl
dec
mov
pop
xchg
jp
push
negb
push
jp
lods
shlb
fisttpll
arpl
in
mov
dec
popf
xchg
popf
fwait
or
mov
jg
or
lods
dec
mov
push
ficoms
mov
mov
xchg
sbb
mov
add
sarl
jle
stc
pop
jb
inc
in
pop
pop
imul
sarl
sbb
pushl
or
mov
ret
inc
aas
sub
jl
add
and
pusha
rcrb
lret
nop
imul
xor
cmpsl
cmp
push
mov
shl
adc
or
push
mov
mov
inc
dec
mov
pop
insl
js
repz
out
andb
inc
adc
cmpsb
test
sbb
clc
cmp
jmp
push
add
xchg
jmp
loopne
jle
mov
push
shrb
ja
mov
add
jns
mov
push
and
cmpsl
pop
sub
imul
xor
in
sti
cld
push
cld
cmp
fdivs
packsswb
in
das
or
xchg
in
xor
mov
sbb
imul
std
or
fisubs
push
cwtl
dec
dec
inc
les
mov
add
sbbl
cmpsb
adc
xlat
xchg
scas
inc
fists
ja
inc
xlat
clc
inc
and
cwtl
xchg
xchg
lods
fidivrl
mov
enter
mov
les
inc
insl
es
pop
sub
subl
xor
sbb
stos
js
loopne
xchg
popa
popf
int
push
aad
add
ficoml
push
push
jg
setae
add
out
cmp
xchg
mov
dec
xchg
int
pop
ret
jge
pop
xchg
jp
sbb
pop
fxch
add
jne
mov
or
mov
or
std
das
dec
mov
pop
rcrl
paddsw
xchg
pop
add
arpl
cmp
addl
sbb
cmpsl
jecxz
jb
in
repz
pop
filds
rcrl
bound
popa
divl
lods
movsl
ss
fwait
push
out
sbb
dec
outsl
movsl
xchg
xor
sti
push
jmp
jl
negb
ss
cmp
mov
mov
out
mov
jno
es
jge
fs
xor
lahf
jno
shlb
sbbb
cmpsb
fimull
orb
cmc
fistl
cltd
sbb
out
icebp
push
mov
dec
imul
aas
jne
out
push
or
jecxz
push
loopne
jg
out
push
fisubs
sub
cmpl
xchg
popa
in
cmp
cmp
cwtl
push
mov
xor
in
repz
in
int3
jmp
mov
subb
adc
push
repz
xor
insb
xchg
and
incb
es
xchg
and
aaa
repnz
mov
jno
mov
or
loopne
mov
movsl
mov
sti
out
push
lods
sbb
fiadds
mov
inc
sub
mov
cwtl
sbb
push
sbbb
js
mov
icebp
mov
or
sbb
ficompl
daa
div
xchg
dec
gs
mov
ds
pop
jecxz
lret
dec
lret
cld
push
inc
ljmp
mov
popf
int
sbb
stos
dec
loope
test
shlb
mov
sahf
jp
pop
shll
push
icebp
popa
jbe
jo
or
adc
insl
mov
mov
dec
adcl
jg
scas
inc
fistpl
nop
dec
push
outsl
jns
pop
out
addl
adc
or
notb
nop
lds
xchg
popa
imul
ljmp
data16
call
nop
movsl
addr16
xchg
mov
outsl
lret
push
insb
xor
insb
cs
repz
nop
jb
out
pop
pop
testb
arpl
sti
into
daa
hlt
in
shrb
loop
stc
sub
ret
jmp
push
mov
shll
iret
into
jp
jl
loope
mov
jmp
sub
sub
sbb
xchg
jge
pop
mov
fwait
dec
pusha
jle
scas
inc
cmp
movsb
cmp
mov
fs
pop
xor
iret
and
adc
mov
rorl
inc
fs
mov
and
fstps
lods
xchg
jbe
pop
pop
mov
lret
and
inc
out
cltd
inc
call
in
sub
mov
incb
pop
dec
pop
outsl
cli
mov
pop
aad
pop
sub
inc
jo
scas
mov
push
mov
xchg
loope
rclb
inc
mov
shll
je
cmp
and
pop
and
jns
mov
adcb
data16
jbe
ret
pop
in
fwait
dec
jge
aam
mov
pop
addr16
cmpsl
stos
pop
and
mov
push
addl
xor
push
mov
push
jne
or
or
imul
clc
out
jns
sbb
in
imul
pop
and
adc
jno
xor
jbe
xor
std
loope
jmp
test
cmp
mov
xchg
push
lods
jbe
shll
cmp
push
inc
mov
adc
add
jnp
mov
sbb
repnz
dec
jo
adc
cmp
jmp
xchg
pop
ss
mov
repnz
inc
mov
int3
xor
dec
cmp
std
shrl
dec
lds
adc
cs
inc
cmp
fwait
mov
js
out
dec
sbbb
lds
sub
outsb
in
dec
xor
cmp
int
xchg
fdivl
dec
lods
jb
daa
mov
xor
adc
and
cmp
and
dec
xlat
dec
or
enter
dec
pop
pop
aaa
push
loope
nop
in
inc
jp
mov
out
insb
and
xor
out
or
or
fldcw
subl
push
jl
jg
out
je
sub
div
jle
decl
sbb
ret
repz
push
nop
fists
push
jmp
pop
mov
subb
sbb
jbe
loopne
data16
ljmp
jae
lret
daa
jnp
dec
test
aad
jmp
inc
dec
addr16
pusha
addl
and
fstp
mov
das
pop
dec
imul
arpl
fstp
fdivl
inc
jb
icebp
fsub
andl
enter
into
xor
loopne
daa
into
jno
mov
add
xor
push
inc
xchg
lea
lret
es
and
fsub
je
jmp
mov
push
mov
inc
mov
pop
sub
inc
call
jo
pop
test
popf
inc
aas
xchg
rorl
mov
lods
xor
das
enter
nop
movl
ljmp
cmp
push
orb
insl
adc
inc
aas
sub
mov
jecxz
cltd
mov
lret
jo
cmp
aaa
mov
js
daa
and
cmp
rorl
mov
xor
add
xchg
mov
cltd
jmp
inc
sub
inc
pop
out
addl
cmp
xchg
jg
xchg
hlt
mov
add
hlt
mov
sub
pushf
aam
sbb
hlt
sahf
test
pop
imul
cmc
mov
mov
xchg
dec
cli
lret
andb
pop
mov
pusha
pop
pop
rcrl
add
cmc
ljmp
hlt
mov
dec
test
stos
inc
push
dec
sbb
add
and
cwtl
shl
mov
pop
addr16
jg
jae
aam
adc
mov
shrl
lock
sti
mov
pop
mov
jb
fbstp
xor
jns
mov
fcoml
pusha
dec
push
pop
jnp
xchg
push
cwtl
mov
cli
mov
lea
dec
sbb
nop
movsl
loope
out
iret
test
or
pushf
cmp
lods
lea
push
dec
adc
sub
leave
dec
jo
dec
or
daa
pushf
jmp
enter
pop
mov
in
push
mov
insb
scas
sbb
lods
cmp
mov
sub
push
mov
add
xor
xchg
mov
mov
inc
cmc
and
inc
in
imul
pop
add
and
enter
popa
jle
mov
ret
jle
adc
decl
fidivl
mov
mov
sarl
mov
pop
lea
in
faddl
xor
aam
rcll
pop
ja
xchg
mov
mov
or
sahf
pop
outsb
lea
and
lcall
scas
jb
das
orb
jl
in
add
insb
imul
lret
cmp
and
mov
roll
jmp
mov
add
or
out
dec
cmpsl
add
sbb
mov
imulb
mov
fisttpl
mov
or
into
xchg
mov
das
test
cltd
add
lods
shll
cmp
sbb
outsb
icebp
xor
out
mov
daa
push
push
or
ret
fs
in
test
iret
mov
cmp
fwait
xorb
std
dec
lods
insb
inc
sbb
outsb
es
sub
mov
push
or
pop
or
jne
mov
push
lock
dec
push
popf
out
negl
ljmp
xor
ljmp
movsl
jbe
lcall
jmp
test
in
jo
arpl
inc
lahf
lcall
lds
fmuls
cltd
out
enter
hlt
sbb
inc
orb
dec
jecxz
and
movsl
pushf
jae
cmpb
mov
dec
dec
je
add
rcr
pshufw
fs
loope
mov
mov
mov
adc
push
out
dec
push
nop
mov
ss
adc
xor
xchg
pop
imul
movsb
push
pop
pushf
jae
shrb
push
fstps
aad
xchg
or
xor
jnp
ficompl
xchg
cmp
push
jnp
out
lea
inc
xchg
jb
pusha
sbbb
fcompl
cmp
jne
shrb
fdivl
fcoms
hlt
sbbb
rorl
xor
or
popf
xchg
push
inc
xchg
call
mov
imul
cmpsl
push
mov
jns
andb
in
pop
std
int3
dec
push
sarl
pop
out
mov
adc
mov
ss
int3
and
mov
lock
push
cmp
or
jmp
jne
dec
xchg
out
cmp
aas
jge
sbb
push
cmp
mov
lret
fnsave
fs
cmp
repz
lods
daa
dec
loopne
or
fnstenv
in
mov
les
cmp
inc
arpl
xor
inc
scas
ret
or
mov
pop
mov
inc
rcr
jo
mov
dec
sub
and
daa
mov
adc
push
ret
jmp
xchg
push
dec
inc
jge
shlb
hlt
cmpsl
xor
jne
fbld
xchg
call
fnsave
xor
xor
fdivrs
daa
push
das
orb
popf
adc
pusha
cmpsl
cwtl
push
mov
xchg
fldenv
push
int
test
fsubr
test
mov
in
sub
jl
mov
cs
push
out
outsb
cmp
aam
jno
outsl
mov
pop
fistps
test
xchg
icebp
mov
out
jg
cmpsl
mov
jp
xor
cmp
xchg
cs
cmpsb
int3
nop
repnz
movups
add
divb
rcrl
jg
sti
scas
cld
test
popf
stos
push
dec
fwait
pop
shll
cld
into
fcmovne
push
xchg
fcomi
and
adcl
sbb
mov
push
dec
cmp
shlb
pop
adcl
sub
int3
sub
xchg
jns
push
aaa
add
daa
test
mov
or
add
aas
or
cmp
or
pop
and
push
fwait
cmp
inc
pop
aas
lea
mov
lahf
dec
mov
sub
lcall
fdiv
sbb
mov
hlt
sahf
sbb
jb
shlb
adc
mov
std
inc
pop
inc
lea
cmpsb
push
mov
and
dec
mov
fisubs
ror
and
xor
cltd
pop
xor
je
cmpsb
push
test
ljmp
cmp
fildll
insb
lret
xchg
adc
sbb
scas
push
fstpl
stos
fists
fisttps
int
xorl
stos
dec
xchg
repz
loope
push
scas
pop
loop
out
xchg
push
loopne
add
pop
popa
loope
cld
out
pop
mov
popf
jnp
fs
jno
jmp
pop
incb
push
mov
jl
jg
sbb
cltd
pop
inc
mov
test
jmp
inc
adc
or
jno
push
lods
pop
pop
cmp
push
test
shrb
lret
into
adc
xor
sbb
lds
leave
xchg
jmp
cmp
mov
sub
clc
inc
pop
popf
or
aad
pushf
sbb
mov
jmp
mov
jae
ja
movsb
mov
cmpb
xchg
adc
insb
inc
jp
mov
mov
mov
movsb
in
out
adc
sti
or
cmc
cmp
push
cmp
popf
ret
ficoms
lds
cmp
mov
clc
dec
dec
das
pop
and
movsl
mov
in
fsubs
cmp
in
jne
jno
cli
or
sbb
inc
push
clc
push
pop
outsl
push
adc
fdiv
and
xor
movsb
ds
lea
dec
insl
cmp
movsl
fwait
add
rclb
and
imul
cmp
addr16
fnstcw
mov
mov
idiv
repnz
rcrb
sbb
lock
lock
into
jnp
mov
fcoms
sti
je
test
or
in
filds
jns
jmp
sarb
add
mov
test
sbb
jnp
add
jmp
rol
cmp
das
push
jl
in
lods
push
loop
mov
xor
stc
mov
mov
fcom
out
lods
bound
xchg
shlb
fwait
daa
xchg
xchg
lahf
inc
out
call
sub
mov
ja
popf
cmpb
jmp
or
sub
mov
cmp
stos
jl
mov
push
jo
lret
xlat
cmpsb
out
push
mov
push
mov
cs
and
jnp,pt
mov
pop
and
sbb
out
adc
xor
xor
push
xchg
dec
and
sub
sub
mov
imul
xchg
shl
lock
sti
xchg
adc
gs
mov
clc
jl
scas
test
inc
jp
std
adc
mov
push
lcall
packssdw
jnp
hlt
sub
call
and
movsb
dec
mov
shlb
jbe
pop
push
lds
inc
cmp
popf
jo
rorb
push
inc
push
mov
testl
aad
rorl
arpl
push
push
jbe
icebp
jno
inc
fistpll
cmc
hlt
push
mov
aas
or
adc
and
push
or
gs
and
mov
mov
lods
inc
push
int
mov
xchg
mov
mov
mov
popf
shlb
xor
mov
popa
test
inc
push
fdivs
and
jb
enter
and
lahf
stc
mov
into
xor
or
mov
sti
out
mov
or
xchg
mov
push
mov
add
cmp
push
daa
notl
sbb
jmp
pop
insl
cmp
icebp
adc
lods
sub
jecxz
mov
orl
into
daa
pop
or
mov
and
shld
icebp
mov
lods
cmp
icebp
jno
mov
ja
int3
jmp
xchg
xlat
and
inc
dec
inc
adc
mov
mov
cmp
pop
ss
and
aam
inc
dec
pop
or
mov
mov
push
cld
stc
into
loopne
popa
xchg
mov
pusha
les
jae
int3
cmp
and
repz
or
sbb
jo
xor
scas
xchg
jb
sti
in
xchg
out
das
cmpl
in
cmpsb
mov
mov
pop
jb
xlat
jno
push
xor
sub
ret
pusha
outsb
xor
jo
and
mov
sub
sbb
lcall
call
psubw
jg
mov
pop
out
mov
mov
in
mov
in
gs
and
rcr
adc
push
out
ds
cld
and
or
push
scas
ret
imul
call
popf
push
mov
loopne
sbb
xchg
test
shll
fwait
movsb
test
add
sub
lea
pop
negl
insl
adc
mov
inc
outsl
adc
js
dec
aas
mov
jmp
pop
jmp
mov
scas
lret
mov
out
xchg
pushf
sarb
iret
inc
mov
out
and
mov
pop
stos
adc
in
dec
jns
repnz
inc
xchg
xor
push
faddl
pop
pusha
mov
lods
aas
ja
sub
in
flds
push
sahf
lahf
lret
adc
testb
or
jne
insl
jns
movsl
sub
fbld
mov
aad
sub
pop
outsb
imul
scas
push
in
xchg
in
lret
aas
push
jp
mov
xlat
sar
or
mov
je
sub
xchg
sar
and
ds
add
mov
dec
push
mov
jbe
mov
pushf
iret
in
push
imul
ret
and
aad
jae
int
in
aad
scas
insb
sarl
ja
data16
push
push
js
dec
cltd
mov
jp
jns
scas
lods
cmp
inc
xchg
xchg
int3
mov
enter
or
into
shlb
cmp
add
fs
adc
cld
pop
cmp
push
dec
pop
mov
cmp
xor
jl
lret
push
and
push
or
bound
cmc
ja
adc
mov
jae
fisubs
mov
pop
or
xor
ja
sahf
jo
mov
mov
lods
je
lret
sub
and
cltd
mov
mov
or
push
popf
mov
push
loop
test
ljmp
add
jns
imul
and
fwait
mov
stos
mov
mov
cli
jae
xchg
pop
cmp
loop
shlb
dec
dec
fsubrs
push
cmp
out
cltd
or
and
test
sbbb
jmp
lods
sbb
outsl
mov
mov
sub
inc
mov
cltd
mov
or
inc
push
loope
push
xchg
pop
mov
sub
jae
adc
mov
pop
mov
pop
sub
stos
mov
add
in
adc
adc
mov
andl
cwtl
fs
inc
aaa
xor
dec
inc
in
les
ret
ljmp
outsl
lock
mov
dec
add
fisttpl
sarb
xchg
xchg
mov
jle
scas
mov
jmp
pop
mov
inc
dec
or
gs
cmp
cmp
orb
mov
pop
mov
nop
std
and
cli
repnz
or
hlt
ds
stos
scas
daa
cmp
cmp
xchg
call
call
stc
ss
lds
push
lods
inc
xchg
inc
repnz
ljmp
cmc
test
or
push
or
sbb
xchg
jge
bound
outsl
sub
out
lds
pmullw
fwait
inc
jns
arpl
stos
cwtl
push
in
sbb
imul
inc
aam
addr16
cmp
enter
mov
mov
fnstenv
mov
sub
adc
fldt
pop
cmc
iret
popl
sub
int
xlat
hlt
ljmp
cltd
adcl
int3
scas
js
add
out
mov
xchg
jp
adc
inc
mulb
xchg
mov
add
mov
aas
outsb
mov
lds
jno
mov
insb
orb
xor
sub
xlat
test
cs
icebp
mov
stos
or
push
xchg
xchg
jbe
jno,pt
lret
jmp
or
arpl
cmp
pop
adc
mov
and
add
imul
jo
fwait
sti
imul
movsb
hlt
push
andb
cmp
mov
std
add
xor
inc
push
pop
mov
pop
shl
mov
gs
sub
mov
dec
das
cmpb
add
mov
pop
xor
add
adc
inc
ljmp
sbb
jno
xor
test
in
and
cmp
or
fdivr
in
dec
jmp
dec
jp
mov
xor
xor
mov
push
fs
cmp
dec
outsb
fwait
mov
stos
popa
inc
adc
popf
pop
xchg
scas
fmuls
daa
inc
or
pop
push
pushf
sbb
aaa
cltd
out
int
dec
imul
aas
sar
dec
sbb
xor
xchg
fsqrt
movsl
mov
push
push
cs
fldl
stos
sbb
in
sarl
mov
insl
sti
sbb
insl
nop
jge
je
jecxz
repz
dec
xor
xchg
ss
dec
lahf
fwait
imul
test
out
sub
cmpsl
aad
enter
ud1
xor
mov
push
sub
jnp
sub
push
mov
xchg
lahf
jns
mov
add
inc
addl
xchg
sub
shlb
call
jnp
int
xor
and
inc
and
ds
dec
cwtl
cmovno
sbb
sarb
test
inc
pushf
mov
loop
cmp
notl
mov
hlt
orb
cmpb
pop
stos
push
push
sub
stc
push
aam
jge
xor
xchg
orb
add
mov
cld
in
or
inc
fs
sbb
jmp
les
sub
stc
jbe
mov
push
inc
std
and
popf
inc
fcmovb
push
js
insl
fistpll
xchg
xor
stos
push
test
mov
in
scas
dec
pusha
adc
ljmp
out
enter
xor
mov
fwait
aaa
jmp
xchg
jno,pn
outsb
cs
pop
cmp
cmp
xchg
xor
cs
in
push
sbb
pusha
pop
out
inc
mov
xor
adc
out
jo
xor
cmp
mov
lcall
call
sbb
or
sbb
inc
xor
fldenv
adc
mov
popf
ret
push
push
fs
inc
mov
sub
mov
test
cli
sub
mov
xchg
mov
imul
nop
mov
push
xchg
insl
mov
and
cmp
xchg
xlat
xchg
mov
jmp
push
add
gs
out
jns
push
cltd
pop
mov
divl
inc
aas
lds
push
out
je
in
nop
mov
push
lds
aad
and
adc
fs
bound
dec
push
or
add
js
add
sbb
jp
ret
push
sbb
pop
data16
jno
mov
imul
xchg
imull
pop
fnstsw
adc
cmp
cmp
icebp
movsb
adc
mov
mov
inc
or
std
mov
daa
adc
cmc
adc
push
jb
dec
sub
dec
adc
pop
call
leave
xor
cmc
daa
stos
cs
subl
jo
mov
stos
dec
mov
dec
repz
mov
sub
cmp
dec
jnp
flds
aam
icebp
imul
cwtl
sub
or
jp
imul
test
std
imul
xchg
daa
inc
mov
mov
test
notl
js
mov
xor
jecxz
inc
shl
jae
sub
and
addr16
or
mov
outsb
jnp
inc
mov
aas
jnp
cmpsl
xchg
ficoms
imul
ret
sbb
mov
jne
xor
pushf
jb
imul
mov
and
leave
repz
adc
jg
cmp
ljmp
pop
into
fwait
xchg
lret
mov
stc
in
ss
test
or
int3
cltd
out
enter
fstps
lods
leave
test
add
cmp
cmp
lret
pop
or
dec
sbb
and
shlb
add
cmp
mov
sub
xor
repz
pop
push
sbb
ds
push
aaa
fbstp
mov
sbb
addl
aas
xlat
mov
insb
movsb
pop
sbb
xchg
push
push
cmp
lea
outsb
rcll
lods
jno
push
mov
mov
dec
stos
movsb
incb
jl
pop
adc
and
rcrb
push
into
jg
add
fdivl
adcb
inc
icebp
push
sar
in
cmp
or
popa
lock
mov
pop
mov
pop
addb
sub
fistpll
jp
pop
lret
sub
jmp
add
jp
cmp
fiadds
faddl
mov
sahf
enter
xchg
xchg
xchg
aad
push
pop
jle
or
pop
pushf
loope
sbb
shr
fsts
or
lds
rcrb
or
or
adc
mov
pop
pop
cli
and
imul
inc
js
cld
cwtl
fldl
enter
xor
add
aas
xchg
rol
sub
mov
pushf
mov
xor
mov
push
insl
lods
xchg
scas
xchg
and
shrl
or
rcrb
add
jp
lods
mov
mov
cwtd
out
xor
lret
mov
fs
inc
push
shll
arpl
jno
and
mov
xchg
pop
adcl
mov
sbb
xchg
push
fs
rclb
pop
pop
int
std
or
xchg
xchg
jno
push
pop
outsb
dec
ror
movsb
mov
je
adc
decb
test
or
clc
lea
pusha
dec
stos
mov
inc
rolb
aaa
xchg
xchg
add
shrb
pop
mov
repnz
ja
test
push
mov
lods
inc
and
inc
jne
shrl
xchg
in
cmp
out
xchg
scas
jg
jb
jle
push
adc
xchg
call
out
fcomi
xchg
add
sub
dec
mov
repz
xor
xor
stos
lcall
repnz
mov
mulb
cmp
add
mov
shr
mov
pop
lock
or
test
loopne
jge
gs
loop
jne,pn
imul
stc
sub
pop
sub
xor
push
sti
imul
fdivr
mov
insl
jne
xor
add
fsubs
es
jne
je
sub
or
dec
inc
cmp
mov
pushf
ds
sbb
and
xchg
jae
mov
jns
mov
ror
call
out
or
jle
rorl
push
pusha
int3
jae
test
dec
leave
icebp
lea
ret
pop
dec
or
jg
jo
pop
std
dec
adc
dec
lea
or
pop
cmp
adc
idiv
cs
faddl
iret
lea
push
cmp
cld
push
jp
das
aas
repz
scas
push
out
sbb
and
jle
pop
andl
push
dec
out
mov
mov
xchg
loop
and
les
xchg
aad
cmpsl
leave
or
icebp
xor
dec
hlt
sub
sbb
test
xorb
popf
or
lahf
add
pop
dec
in
jae
jge
mov
xlat
arpl
mov
js
fistpll
mov
fwait
jg
leave
inc
in
sub
movsb
and
ljmp
push
rcrb
cmc
add
stc
push
lret
insb
iret
add
cmp
mov
xchg
mov
pop
lods
repz
xchg
fucomp
adc
scas
add
adc
mov
adc
cmp
adc
xor
test
fisubl
mov
adc
adc
mov
ljmp
sahf
xchg
and
add
cmpsb
adc
inc
aas
pop
in
in
mov
push
mov
arpl
inc
insl
xchg
outsw
mov
push
xchg
dec
out
xchg
pop
mov
ret
imul
rcrl
xchg
movsl
loope
shll
fcmovb
mov
jb
test
mov
insl
pop
fisubrl
fstpl
stc
xor
mov
scas
push
in
pop
fs
sub
outsl
out
push
mov
or
mov
adc
subl
enter
or
mov
cmp
xchg
sbb
xchg
and
xchg
popa
insl
pop
popa
or
pusha
jns
adc
mov
mov
lods
push
mov
shlb
pop
sbb
xor
aad
popa
cwtl
insb
imul
sub
add
push
mov
stos
sbb
sbb
inc
cmp
sti
mov
scas
es
sahf
xchg
inc
ljmp
push
lea
fistl
inc
mov
sbb
add
cmpsl
cmc
stos
dec
adcb
pop
sbb
push
dec
pushf
sub
mov
push
mov
xor
adc
push
push
xchg
fisttpll
inc
mov
add
jmp
inc
in
jne
jecxz
xchg
in
dec
cmp
and
nop
dec
jge
insl
insl
addb
cmc
xchg
pop
lret
loopne
push
or
out
or
dec
dec
daa
mov
dec
and
xchg
repz
movsb
dec
stc
arpl
mov
mov
and
xchg
jge
mov
or
push
punpckldq
mov
inc
iret
loopne
outsl
out
cmpsb
jne
adcl
pushf
and
shrb
mov
fmuls
dec
push
and
dec
mov
pop
hlt
movl
xchg
rcll
rep
cmp
dec
ljmp
push
leave
lcall
rol
loop
es
mov
sub
filds
stos
testl
xchg
mov
and
dec
adc
mov
sub
xchg
ds
xchg
xchg
popa
jo
in
cli
movsl
ljmp
pop
push
ret
lea
sub
mov
mov
hlt
dec
jge
aaa
clc
clc
dec
pop
push
mov
inc
int3
adc
scas
pop
rolb
push
fcmovnbe
push
cmp
sub
out
push
or
je
cmpsl
xchg
repnz
jnp
fldl
insl
jecxz
jo
aaa
jecxz
or
lea
insb
gs
sbb
hlt
jmp
adc
xchg
push
mov
incb
test
lcall
mov
mov
add
in
mov
push
call
std
jge
bnd
pop
cmp
fnstenv
jmp
jbe
push
mov
rcr
je
int3
jle
in
ret
cs
cmc
add
loope
imul
repnz
ds
inc
pusha
sarb
add
gs
inc
cltd
aas
mov
call
in
cs
repnz
push
xor
pop
push
test
sbb
inc
mov
cmc
int3
jo
cmc
mov
les
rcll
dec
into
iret
cmpsl
stc
cmp
xchg
test
dec
and
int3
insl
add
scas
out
push
pop
jnp
cmc
adc
or
int3
movsl
test
in
es
and
pop
push
das
and
and
test
out
mov
jae
aam
pop
push
and
jmp
inc
mov
cmp
jp
cmc
jbe
jmp
in
outsb
fisubl
dec
add
in
cmp
mov
sbb
in
cmp
add
mov
push
daa
dec
inc
sub
xchg
or
ja
and
mov
dec
and
push
rcll
scas
aam
jbe
sub
and
dec
inc
call
sbb
lods
jp
fiaddl
stc
push
sbb
lcall
lds
xchg
mov
cli
mov
hlt
sub
xchg
pop
out
sub
je
jbe
aad
mov
mov
fildll
dec
fcoms
pop
cmp
jns
lret
pushf
adc
dec
xor
in
imul
adc
lock
fwait
mov
test
dec
push
mov
gs
inc
xchg
add
jecxz
xor
into
sbb
mov
inc
or
std
pop
sbb
mov
lea
dec
fidivrs
jp
call
mov
jo
ds
lret
pop
std
dec
adc
mov
in
pop
out
lea
cmp
cmpsb
xchg
pop
jno
adc
dec
fcoms
cwtl
iret
leave
out
aam
add
cmc
and
test
into
imull
sbb
ficompl
add
pusha
lods
iret
iret
add
jnp
imul
fcmovnu
lret
ja
sbb
cwtl
fs
jecxz
lret
cmpl
mov
lahf
push
pop
mov
inc
sub
add
imul
imul
jmp
jbe
scas
fnsave
xchg
test
scas
lods
dec
clc
rcll
xor
cmp
mov
xorl
pop
inc
enter
mov
mov
or
ljmp
push
loop
das
data16
shl
and
lahf
mov
je
scas
aam
xor
jno
adc
inc
loope
hlt
xchg
mov
xor
sti
dec
jne
repnz
mov
xchg
lcall
mov
in
pop
test
jnp
gs
loopnew
xor
xchg
push
ret
loope
insl
daa
lcall
push
dec
imulb
push
imul
pop
aad
iret
adc
and
movsl
adc
dec
mov
adc
fldl
lret
sbbl
clc
or
inc
dec
mov
lods
or
push
ds
fwait
scas
mov
data16
adc
push
sahf
popf
popa
fbld
push
repz
loop
sub
repz
and
decl
jae
cltd
push
sti
jo
and
sub
pushw
inc
xor
ljmp
or
sub
push
sub
mov
adc
fstpt
hlt
or
xchg
mov
out
and
sbb
push
inc
rclb
mov
mov
mov
xor
xor
aaa
into
xrelease
cmc
stos
leave
sahf
adc
mov
lock
and
mov
jg
pop
in
rorl
jns
xchg
cltd
adc
mov
push
test
mov
mov
icebp
push
push
testb
sbb
lds
push
push
insb
sbb
fidivs
pop
inc
xchg
xchg
xor
fisubl
ret
scas
push
int3
sub
mov
popa
popa
xchg
mov
outsl
mov
adc
lods
mov
ja
push
pop
pop
lahf
or
jg
test
xor
xchg
in
std
jae
lds
mov
mov
das
sbb
stos
int3
jge
mov
xor
or
loope
adc
jg
sub
lock
sub
andb
xchg
push
call
lret
sub
xchg
dec
cwtl
sbb
test
sub
out
es
inc
cmpsb
in
add
les
movsb
ljmp
inc
icebp
fisttpll
rolb
imul
out
lds
int3
lcall
in
out
scas
mov
xchg
pop
lods
out
ret
sub
pop
roll
call
pusha
or
stos
sub
pop
mov
test
sbb
push
daa
inc
les
out
or
loope
sbb
mov
cmp
push
fcoml
gs
cmpl
insl
or
and
daa
jnp
clc
nop
pop
jl
test
pusha
cs
xchg
movsb
mov
pop
add
mov
ficomps
sarl
out
or
and
jae
fdivrs
cltd
fs
cld
mov
lret
sahf
lret
and
inc
xchg
add
pop
adc
lock
cmc
lcall
fadd
imul
out
push
rol
sahf
jne
and
les
cmc
dec
adc
rolb
in
popf
pop
out
orb
mov
xor
aas
fistl
cmp
jecxz
or
popf
or
xor
cmpsl
mov
movsb
and
push
movsl
cmc
fcomps
inc
pop
ja
stos
clc
push
xor
aad
fst
jp
mov
popa
inc
add
jecxz
dec
adc
cmpsl
popa
mov
shrl
jns
into
lock
xor
and
rorl
lods
dec
mov
push
clc
dec
out
sub
jmp
mov
add
and
aam
sbb
push
xchg
jl
mov
dec
nop
adc
pushf
adc
push
popf
lcall
in
movsb
add
inc
iret
xor
les
inc
in
out
cmp
sar
lcall
fdivrl
xchg
cmp
gs
lcall
sti
sbb
inc
inc
lock
repz
or
subb
cmp
lret
mov
lea
pop
pop
cmpsl
dec
inc
sbb
push
jo
and
rolb
jae
and
inc
cmp
les
mov
xor
imul
inc
cmp
ja
in
call
loope
and
dec
mov
inc
inc
jns
cmp
std
call
rcr
and
js
mov
negl
xor
cmp
int3
xlat
mov
outsb
shlb
or
pop
adc
out
add
or
push
outsb
imul
clc
lock
imul
sbb
shrl
lock
ret
cmp
dec
mov
int
mov
sbb
xorb
jnp
xor
cmp
and
fsubrl
into
and
cmp
sbb
add
mov
in
call
out
sub
ret
and
push
call
aad
in
mov
daa
xchg
mov
sbb
pop
mov
inc
mov
xchg
loop
ljmp
out
test
les
mov
outsl
stos
gs
dec
imul
mov
aam
and
mov
sbb
cmp
adc
popa
scas
cwtl
loop
inc
shll
mov
sbb
pop
fldcw
enter
ret
mov
aas
rcll
mov
xchg
mov
fdivl
nop
mov
xchg
ret
dec
mov
push
dec
adc
stos
arpl
into
cmp
test
add
pop
and
lcall
cmp
dec
es
fldl
pop
mov
lock
mov
pop
hlt
les
shlb
out
mov
andl
addb
xlat
in
push
in
cmpsb
pop
insl
sub
add
jecxz
jg
xchg
inc
pop
fisubs
mov
push
dec
push
fwait
shll
movsb
adc
rorl
scas
into
and
mov
outsb
loopne
mov
test
mov
call
stos
and
xor
inc
test
pusha
push
and
clc
fistps
push
scas
lock
jne
stos
jbe
jns
stos
test
ss
dec
or
sbb
iret
out
lahf
cmc
scas
insb
nopl
shlb
add
adc
in
fs
and
jg
subb
std
testl
out
aas
insb
daa
push
add
and
jl
mov
es
adc
and
insb
int3
cs
nop
xchg
jb
or
int
mov
fwait
lods
cmp
push
sub
testb
cmp
sbb
dec
xchg
in
push
mov
pop
mov
sbb
push
xchg
fisubs
dec
mov
fwait
jae
cld
ja
sbb
inc
push
add
jnp
sbb
mov
inc
fidivl
pop
inc
mov
push
inc
insl
bound
mov
out
es
clc
mov
hlt
xchg
jge
fs
arpl
bound
xchg
fldenv
icebp
pop
nop
das
sub
mov
jmp
ds
mov
xchg
cmp
cli
pushf
xchg
adc
je
pop
cmpsl
adc
push
inc
test
divb
xchg
movsb
je
and
push
cmp
cmp
je
push
hlt
lds
scas
cmpsl
jno
and
push
fst
adc
mov
pop
cmpsl
out
mov
xor
mov
into
dec
mov
dec
and
mov
jg
fdiv
sbb
xor
das
mov
repnz
imul
adcb
cmp
mov
sti
insb
lret
cli
sub
int
mov
out
and
lahf
jb
sub
mov
aas
in
push
jp
mov
lahf
jmp
mov
jne
dec
int3
inc
loop
outsl
in
test
lahf
out
xor
or
orl
fwait
xchg
loop
fs
add
add
add
clc
mov
sahf
imul
and
mov
mov
or
test
pop
mov
mov
cs
sub
enter
dec
sar
mov
push
jg
scas
jg
adc
pop
mov
outsl
leave
inc
lret
cmp
or
ret
out
xchg
add
ja
dec
cli
mov
pop
mov
outsl
adc
jge
mov
cmp
jns
sub
jg
mov
ss
dec
aad
dec
cltd
out
into
hlt
outsl
xlat
push
lods
push
xchg
sub
or
pop
repz
movb
add
scas
sub
fimull
mov
fcmovb
mov
dec
aam
mov
push
xor
dec
sar
adc
mov
mov
adc
jge
in
mov
lahf
dec
push
xchg
mov
out
rol
fstps
in
enter
inc
mov
cmc
push
fsubl
adc
pop
aas
and
pop
lret
ret
or
or
and
dec
adc
xchg
fsts
daa
sbb
dec
cli
cmpsl
test
jle
and
subl
xor
mov
aaa
ficompl
loop
push
or
popf
leave
movl
leave
push
mov
jmp
stos
pop
add
ror
push
sbb
and
stc
std
or
enter
scas
pop
mov
xor
hlt
mov
jae
mov
mov
mov
fwait
out
push
mov
sbb
adc
lret
pop
or
ds
cmpl
icebp
jge
ffreep
out
sbb
pusha
cmpsb
pushf
cltd
out
scas
sub
adc
sub
leave
and
or
adc
jbe
fwait
lret
cmc
je
dec
pop
mov
mov
xchg
in
and
popf
jge
or
arpl
mov
ss
jmp
inc
cmpl
sub
sahf
mov
imull
pop
adc
xor
adc
and
pop
rolb
test
cmp
pusha
mov
aaa
icebp
jmp
add
lock
push
pop
sub
fwait
mov
dec
push
mov
push
jecxz
std
and
sbb
or
sbb
mov
and
into
shrl
js
sub
push
push
jns
jl
push
jp
jl
xchg
lods
test
rolb
sub
or
bound
ret
out
adc
jp
cmpsb
push
jbe
jo
adc
dec
icebp
gs
lods
or
push
test
and
and
aam
lods
fists
fbld
adc
adc
adcb
jo
in
xor
jmp
aaa
pop
and
aaa
pop
and
shrl
sub
jecxz
cmpsl
cmp
pop
mov
sub
push
cmc
pop
scas
xor
push
es
int3
xchg
insb
mov
mov
push
lret
scas
aas
mov
pop
lret
cmp
pop
lods
std
inc
mov
pop
repnz
xlat
and
aaa
das
push
mov
or
adc
sub
in
inc
dec
es
ficompl
sbb
addb
adc
lods
sbb
lret
cli
les
dec
int3
inc
sub
into
mov
fld1
ret
pop
movl
insb
nop
cmp
cmp
outsb
fs
jo
mov
lret
push
das
xchg
pop
lahf
inc
mov
lret
fisttps
in
rorb
push
push
dec
mov
and
pop
add
fcomps
lods
insb
or
pop
jle
cld
mov
mov
sbb
cmc
dec
mov
push
jb
jmp
mov
out
adc
out
xor
fwait
cmp
ret
lock
lds
daa
in
jle
cltd
aaa
ret
lods
mov
sar
sti
or
pop
movsl
xchg
cld
xchg
xor
sub
aad
mov
negb
and
sbb
xlat
inc
xchg
iret
pop
cmp
push
mov
pop
or
arpl
add
jmp
mov
pop
mov
sbb
jns
xor
lds
sbb
mov
cs
add
cltd
xchg
pop
mov
cmp
pusha
hlt
adc
inc
movsl
inc
lds
adc
test
sub
jle
mov
mov
lcall
scas
dec
loope
xchg
mov
arpl
add
adc
ds
ljmp
imul
sbbl
je
mov
incb
subl
cmpsl
fldt
shll
fs
xor
out
enter
mov
repz
mov
frstpm(287
push
mov
xchg
fidivs
xchg
aam
dec
out
dec
or
or
imul
dec
mov
pop
pop
sbb
dec
mov
cmp
push
sub
cmp
lcall
cli
mov
jg
fprem1
inc
push
cmp
add
jmp
add
push
outsl
scas
cmp
push
dec
inc
je
clc
test
or
scas
mov
clc
xchg
ds
sub
sub
dec
pop
insb
fsub
nop
inc
mov
xor
jb
jge
add
movsl
sub
mov
scas
in
xchg
add
jb
jecxz
loopne
mov
jl
aam
jge
out
sub
mov
sbb
sbb
xor
movsl
xor
add
push
dec
inc
push
rorl
jns
imul
testl
mov
inc
pop
int3
leave
lret
outsl
sub
add
or
in
aaa
lds
je
cs
jno
pop
adc
sub
cmpsb
lods
fstl
pop
test
or
mov
lods
js
inc
adc
and
int
iret
add
push
mov
movsb
dec
loop
dec
jmp
add
outsl
or
pop
sbb
cltd
inc
enter
jo
xchg
push
cmpl
pop
dec
sub
jmp
push
xor
jae
or
int
das
pop
bts
fcmovnu
push
push
push
adc
or
std
jle
mov
dec
into
fs
mov
mov
outsl
pop
cmpsl
fsubrs
scas
fimull
mov
add
pop
xchg
daa
loop
inc
add
adc
cmp
aad
mov
fldcw
int3
clc
pop
xor
loopne
jae
inc
xor
sahf
cmp
ror
push
and
mov
xchg
sarl
je
pop
insb
mov
xlat
xchg
pop
and
push
sub
sub
push
fidivrl
push
movsl
and
mov
adc
call
xchg
mov
xor
into
or
and
shll
out
mov
add
jle
pushf
out
dec
mov
mov
pop
out
pop
stc
mov
ret
mov
jno
or
jns
mov
add
das
add
jp
mov
dec
outsl
dec
push
pushf
lret
jne
gs
mov
jmp
pop
add
inc
shr
mov
jb
lret
jl
mov
xor
pop
lcall
add
xor
mov
hlt
jnp
test
xchg
out
jecxz
inc
ljmp
ret
mov
mov
mov
add
and
call
popa
sbb
pushf
xchg
in
or
int
cmp
mov
movsb
ja
fmuls
fdivrs
pop
stos
cmpsb
ficoms
es
shrl
sarl
arpl
xchg
lods
mov
dec
adc
xor
sbb
xchg
call
cmpsb
cmp
dec
repz
addr16
inc
or
sub
hlt
pop
ret
push
andb
xor
in
fwait
pop
lahf
int
pop
fiaddl
fwait
pop
xor
arpl
and
cmp
push
imul
sbb
mov
enter
inc
inc
sbb
dec
pop
xchg
mov
test
out
fs
adc
pop
sti
cld
dec
xor
or
mov
sti
in
aam
xchg
lods
jge
push
inc
scas
rorl
pop
fadds
call
test
movsl
cmp
mov
mov
cmp
sbb
jno
insl
pop
cltd
adc
jmp
inc
mov
xacquire
jecxz
inc
imul
inc
cmc
mov
jmp
push
in
js
sub
sub
mov
andl
dec
and
adc
jle
push
xorb
inc
test
xchg
out
mov
stos
test
mov
add
push
cmp
cmp
pushf
popl
jle
aad
mov
repnz
dec
int3
scas
scas
pop
pusha
lcall
pusha
adc
sub
stos
les
push
ret
scas
fnstenv
cmp
cmp
pop
push
ss
aad
sub
icebp
cli
int3
out
dec
in
push
test
hlt
push
andl
push
xchg
pop
daa
hlt
enter
lret
stos
sub
pop
in
mov
ljmp
movsl
pop
in
repnz
in
jp,pn
data16
dec
loopne
repz
fmuls
jl
fwait
dec
add
test
enter
dec
rclb
jb
pop
push
or
mov
bound
fwait
sbb
push
sbbb
mov
shll
movsl
lcall
adc
mulb
lahf
add
pop
cmp
jl
incb
xlat
jecxz
ffree
xchg
or
dec
sub
mov
lahf
bound
fcoms
pop
cmpsl
xchg
inc
and
outsl
mov
sub
mov
inc
cmp
imul
iret
out
loope
imul
js
adc
xchg
push
adc
mov
dec
test
jbe
arpl
push
cmp
nop
loope
push
cs
and
sub
and
mov
movsb
popa
adc
sbb
push
sub
push
cmp
jmp
push
inc
mov
mov
clc
pop
mov
outsl
push
cmp
cs
cmpsb
ja
dec
fisubrs
fidivrs
sbb
fisttps
bound
push
inc
pop
mov
pop
push
adc
jge
scas
pop
lcall
cmpsb
je
sahf
test
iret
ljmp
adcl
outsb
rolb
hlt
mov
loop
push
test
daa
jbe
inc
adc
mull
sarb
rolb
pop
cmp
ret
push
cmp
in
sahf
sbb
pop
adc
aad
not
test
call
lds
popf
xchg
adc
xchg
cmpl
sub
mov
insb
nop
push
mov
cmp
sbb
or
pop
out
xchg
lcall
rorl
cmp
xor
add
ljmp
test
sub
add
push
mov
xchg
xor
pop
inc
orl
test
and
faddp
dec
aas
out
or
adc
into
or
mov
cmc
lcall
hlt
out
push
xlat
mov
les
cmp
or
or
insl
inc
jp
and
add
push
aaa
movsl
inc
jbe
adc
pop
cmp
cmpsb
shrl
out
xchg
nop
or
lock
lahf
sub
sbb
lahf
cs
add
xor
sub
leave
and
sub
incb
inc
mov
adc
pushf
sub
xchg
insl
sbb
cmpb
aaa
loope
ret
sub
cmpsl
enter
cmpsb
cmp
mov
lea
mov
mov
adc
loopne
mov
jns
cwtl
mov
arpl
cmpsl
jnp
iret
bound
ret
push
and
cld
xor
or
imul
inc
xor
xor
jmp
aad
mov
nop
fnstenv
sbb
or
mov
stos
enter
mov
call
inc
mov
and
gs
xchg
jno
pop
mov
call
lcall
mov
jmp
fcmovne
xchg
pop
aad
jp,pn
mov
cmp
push
push
mov
iret
inc
outsl
cmp
scas
and
jp
add
push
ds
cmc
pop
sub
cmpsb
lret
shlb
or
test
mov
inc
dec
xor
push
pop
sub
pusha
ss
jo
hlt
sub
cmpsl
scas
adc
add
stos
sbb
aad
lret
inc
ja
arpl
push
lret
xor
push
inc
add
mov
mov
push
imul
or
fcomps
adc
sbb
push
rclb
mov
xor
and
pop
jge
js
loopne
das
test
aad
mov
aam
mov
pop
fldl
sbbb
in
bound
mov
cmp
scas
adcl
dec
fsts
xor
ljmp
sbb
out
idivl
nop
add
fldcw
notl
jns
js
rorl
loope
test
add
aaa
add
sti
les
lcall
mov
sbb
pop
jb
lods
push
pushf
lods
xor
outsb
mov
jae
lea
xor
popa
icebp
frstor
mov
pop
add
mov
mov
mov
pop
inc
xlat
bound
add
mov
xor
inc
lahf
add
mov
insb
dec
adc
lds
and
movsb
data16
lods
cld
enter
movsb
fcompl
scas
push
mov
jecxz
ja
int
cmp
dec
scas
fcmove
mov
packsswb
shlb
test
ret
lds
fmuls
cmp
pop
adc
call
stos
outsb
cs
out
hlt
xchg
cmp
fmull
adc
inc
add
adc
loope
popf
int
es
cli
decb
jecxz
rorb
mov
ret
sarl
xchg
push
or
mov
ret
rol
fisubrl
pop
jnp
es
in
jp
push
test
hlt
cld
xor
add
add
fimuls
test
push
push
test
cmpsb
popf
hlt
jno
cli
push
mov
push
push
inc
ret
add
mov
cmc
sub
dec
mov
cmpsb
inc
cmc
mov
pop
enter
test
cmp
das
sahf
test
or
xor
jmp
mov
vpsubusw
mov
imul
cmpsb
icebp
cwtl
jo
stos
movsl
ss
sbb
xor
xor
cmpsb
sti
mov
inc
addr16
hlt
iret
jbe
pop
cltd
xchg
mov
jbe
outsb
and
addr16
ljmp
aaa
xor
data16
cmp
ret
into
mov
inc
mov
mov
les
adc
jb
sti
pop
lods
push
push
loop
jge
pop
push
sbb
sbb
test
cmp
xor
pop
test
cmp
ds
sarb
mov
hlt
iret
jmp
loopne
lea
or
dec
push
jbe
sti
fbld
pop
dec
sbb
mov
out
xor
testl
jbe
and
mulb
fistpll
xchg
push
mov
into
and
aam
add
xchg
xor
xor
lds
xor
dec
inc
js
out
out
sahf
js
nop
imul
mov
in
ljmp
xchg
ds
sti
cmpsb
xchg
enter
aaa
inc
ret
std
mov
test
cmp
aas
jmp
add
test
repz
add
sub
inc
xchg
ljmp
cmpl
stc
and
mov
in
mov
mov
or
es
or
mov
lock
in
popa
or
jb
lds
xchg
push
dec
mov
or
stos
aam
fcmovne
test
lret
jae
inc
adc
push
notl
adc
cwtl
inc
std
add
add
shl
imul
xchg
push
addr16
lods
inc
adc
inc
mov
dec
pop
hlt
cmp
xor
xor
pop
daa
cwtl
mov
sub
xor
dec
fists
mov
div
loop
push
dec
push
sbb
and
xchg
sub
sbb
xchg
sub
js
push
jns
push
inc
cmp
adc
dec
or
movsb
xor
fcomps
movsl
mov
fstl
push
pop
pop
adc
sub
cmc
jo
test
fstpl
bswap
scas
and
stc
enter
and
sbb
call
dec
sahf
push
icebp
inc
xchg
rclb
mov
lahf
mov
sub
fsubrl
int
repz
push
mov
cltd
jb
das
cltd
in
mov
addr16
push
jnp
out
ret
sahf
mov
lcall
inc
aam
add
out
xchg
push
xchg
xor
xlat
mov
or
popf
push
mov
fisttpl
inc
or
mov
gs
lds
bound
mov
ret
fldl
push
jno
std
fmuls
sub
into
hlt
push
dec
bound
sub
xchg
jb
and
jnp
shrb
popl
dec
aaa
fstps
adc
pop
lcall
cld
scas
mov
add
mov
cmp
outsb
cmc
sbb
mov
dec
pop
dec
push
out
cwtl
es
jo
mov
dec
sub
and
sub
ret
lea
cmpsl
cli
push
xchg
js
outsb
cmp
cltd
mov
std
jbe
sahf
jle
pushf
inc
lock
lock
adc
imul
cltd
xlat
aaa
out
cltd
mov
add
cwtl
adc
or
push
jne
cwtl
ljmp
stos
mov
subl
in
loop
mov
aam
and
mov
scas
mov
movsl
push
imul
test
adc
rclb
sbb
cmpsb
mov
mov
inc
pushf
xchg
movsl
pop
jecxz
sbb
sti
or
sbb
out
xorb
movsb
test
in
xchg
sbb
adc
adc
xor
cs
std
jb
stos
push
arpl
xchg
icebp
loop
jbe
adc
xchg
hlt
xchg
jecxz
cli
loopne
sbb
jg
and
in
adc
push
inc
push
mov
pusha
cmp
ljmp
loope
mov
mov
fidivrs
popf
or
ds
cltd
fwait
movsl
cmp
ja
xor
insl
mov
shll
aam
xchg
fsts
adc
pop
adc
cmp
aas
inc
mov
aas
je
sahf
jecxz
xor
pushl
pop
fmulp
jg
leave
in
add
pop
mov
nop
add
jnp
cmp
adc
and
sbb
push
fs
insb
push
js
push
loop
cmp
xchg
adc
ja
mov
cmp
push
jmp
das
call
out
xchg
xchg
subl
test
jno
movsl
shll
push
cmp
lods
movb
js
mov
dec
xor
xchg
hlt
lret
xlat
mov
xlat
inc
mov
pop
ljmpw
jno
out
lock
rclb
push
stos
sub
rcrl
dec
repz
adc
loop
xchg
sub
stos
in
push
jnp
lret
jecxz
test
test
add
inc
push
inc
xchg
cmpsb
jno
xchg
xchg
enter
push
and
imul
cmp
cmp
outsl
adc
filds
hlt
pop
push
add
adc
or
jg
mov
testl
sub
scas
add
pop
fisttps
cmp
out
xchg
and
adc
loope
mov
mov
mov
test
adc
ret
sbb
idivl
mov
mov
and
les
insb
jecxz
mov
mov
mov
push
sub
fildl
rcrl
adc
cmp
fdivrs
clc
ret
test
or
out
mov
push
xchg
out
je
inc
xchg
push
xlat
or
out
cmp
stc
das
mov
mov
data16
add
rcrb
scas
xor
ret
popf
xchg
xor
jnp
push
pop
fldenv
lret
xor
xor
test
fldt
hlt
stos
adcb
into
push
icebp
adc
mov
cmpsb
pop
mov
loop
push
jge
jbe
fs
decw
shr
es
aaa
dec
sbb
andl
jl
fisubl
int3
outsb
xchg
iret
and
cmc
ljmp
jmp
fisubs
insb
movsb
insl
loopne
cmp
int
fsubl
push
test
subl
cmp
aas
lock
xchg
mov
mov
mov
pop
jle
repnz
insb
sbb
cmpsb
xchg
push
lea
divl
movsl
ljmp
mov
out
imull
fistpll
inc
ret
mov
mov
mov
inc
and
cwtl
outsb
dec
push
mov
cltd
mov
lock
faddl
sub
ds
pop
shll
out
test
dec
ret
pop
cwtl
stos
and
push
inc
ret
and
in
sbb
dec
jecxz
mov
aad
adc
insb
stos
popa
orb
pop
ss
mov
mov
loopne
cmp
loopne
in
jmp
jmp
pop
mov
jl,pn
xor
in
cmpsl
imul
out
inc
into
pop
imul
lock
and
adc
inc
fchs
out
or
xor
pop
fs
sub
jno
xchg
mov
push
push
movsb
aas
pusha
int
lods
inc
push
inc
xor
inc
loope
dec
stc
jmp
fcomps
scas
push
pop
gs
clc
jb
adc
rcrl
and
pop
cmc
icebp
cwtl
aad
repz
push
xor
push
fildll
fidivs
lret
adc
or
add
test
and
push
sub
mov
jno
int
push
mov
scas
bound
imul
sub
mov
stos
in
and
xchg
adc
jl
xchg
call
fldl
dec
icebp
mov
sub
mov
arpl
xor
add
jg
cmpsb
pop
mov
mov
insl
jecxz
cmp
cmp
mov
out
sbb
shlb
add
dec
sbb
call
and
xchg
js
out
push
outsl
sub
repz
sub
les
mov
adc
mov
pop
add
or
ret
xchg
xchg
sbb
mov
nop
xchg
add
cmp
jl
shll
sub
loope
addr16
fs
bound
lret
add
addr16
cli
push
pop
push
and
add
dec
jl
bound
orb
xchg
sbb
rol
push
insb
or
and
cli
lock
jnp
sahf
ja
ret
cmpsb
mov
test
out
addr16
imul
xchg
int3
mov
cmc
aad
cmpsl
loop
mov
mov
pusha
mov
cmpsb
shl
pop
je
cmp
mov
dec
or
inc
cmpsb
out
mov
pop
cld
stos
inc
jb
inc
xchg
pop
jne
leave
add
out
push
bound
cmpsl
dec
or
ja
mov
mov
out
mov
nop
inc
mov
dec
push
sahf
mov
sub
sub
movsb
mov
fnsave
and
loope
imul
dec
cmp
clc
cmpsb
jno
cmp
cli
mov
icebp
lods
dec
mov
iret
and
inc
dec
xor
xor
xlat
adc
aad
lock
or
jo
popf
mov
fdivs
pop
cmp
js
lods
push
mov
sub
movntq
repnz
jge
dec
sbb
iret
sti
mov
fstl
sbb
insl
mov
cmp
daa
jl
jge
mov
ret
push
inc
in
in
jg
scas
xchg
inc
push
fstl
dec
inc
sub
cmp
fs
mov
inc
cmp
nop
and
xchg
jecxz
es
sbb
jno
rcrl
leave
nop
addr16
test
cmpsb
pop
dec
mov
or
sub
mov
int3
pop
addr16
xchg
mov
pop
fdivs
inc
and
push
adc
std
clc
orb
sbb
mov
ja
push
xchg
xchg
in
mov
stc
or
mov
test
sbb
cmc
in
jmp
push
gs
dec
mov
cmc
jnp
or
push
pop
stos
call
jge
mov
daa
add
pop
loopne
mov
mov
rorl
and
mov
add
cmp
add
stos
test
push
ljmp
cmp
pop
iret
mov
jp
push
jg
inc
in
fbld
aad
je
xor
sbb
into
ja
sub
hlt
jl
jbe
sub
lcall
or
repnz
mov
jp
js
xor
lahf
lds
movsb
xchg
das
xchg
aaa
sbb
sbb
into
loopne
inc
push
and
sub
jecxz
sbb
arpl
fsubrs
inc
loop
nop
inc
adc
sub
arpl
ss
imull
sbb
bound
repnz
jg
daa
xchg
mov
incb
nop
push
lea
bsf
call
and
lret
loopne
mov
inc
orb
in
and
int
orps
xor
push
dec
in
scas
lcall
popf
arpl
hlt
out
loope
jmp
or
inc
fs
jmp
and
lods
es
das
mov
push
loop
jnp
dec
ss
push
loope
scas
out
out
pop
sbbl
jg
dec
push
jg
lods
sbb
push
data16
push
fld
imul
mov
outsb
xor
mov
fdiv
and
out
es
call
sti
out
jbe
outsl
je
pop
pop
cs
mov
mov
arpl
cmp
dec
mov
jl
lret
not
idivl
in
nop
mov
lock
sbb
sub
clc
pusha
add
andb
outsb
or
pop
fildll
cmp
daa
pop
dec
push
adc
xor
xchg
push
adc
inc
loop
out
les
sbbl
mov
inc
enter
out
lret
pusha
pop
sub
push
pushf
out
les
inc
addr16
jns
lea
insl
fisttpl
dec
push
jae,pt
sub
sti
or
std
fisttpll
test
or
mov
stc
or
cmp
adc
pop
lcall
xlat
cmp
push
or
inc
adc
loopne
mov
sbb
cmp
lods
cmp
adc
sarl
xchg
inc
ja
inc
cmc
sub
mov
fdivl
pop
roll
outsb
jo
mov
xor
das
inc
sbb
test
enter
sub
inc
imul
mov
dec
inc
push
data16
clc
sub
xchg
mov
aaa
flds
add
fcmovne
xchg
testb
jbe
sbb
and
aad
mov
push
cli
cmpsb
inc
sub
in
je
xchg
rcll
jno
mov
and
fucomp
addl
add
test
mov
cs
fstp
pop
testl
jne
ljmp
sbb
sti
push
jl
or
jmp
scas
daa
jp
sub
dec
cli
out
cmp
loope
dec
xlat
je
sbb
cmp
pusha
lock
leave
nop
data16
mov
outsl
pop
shrl
gs
aaa
out
ret
divl
mov
test
add
gs
push
in
xor
lds
add
mov
movsl
inc
fnsave
adc
adc
mov
xor
mov
lods
subb
mov
imul
adc
in
mov
rcrb
movsb
add
mov
cmc
loopne
xchg
push
int3
shr
inc
cltd
aaa
adc
insb
loopne
out
xchg
js
mov
adc
dec
mov
xchg
fadd
enter
dec
xlat
or
or
mov
mov
xchg
push
pop
mov
lahf
sti
shlb
cs
push
shlb
or
rcr
repz
xor
clc
inc
cmp
scas
dec
repnz
jo
xor
mov
sub
insb
fdivp
inc
adc
cmpl
jmp
sbb
xor
or
mov
ljmp
into
lds
sahf
xor
add
scas
test
cmpsb
stos
in
push
mov
sar
mov
inc
lret
xchg
and
out
imul
mov
pop
cmpsl
jge
ljmp
pop
in
clc
push
push
mov
xor
mov
dec
mov
jb
das
pop
das
dec
add
cmp
fs
rcrl
loop
sahf
movsb
sbb
inc
mov
cli
or
test
repz
mov
jecxz
ret
sbb
mov
stos
ds
xor
inc
mov
sub
stos
add
sub
push
lods
xchg
adc
mov
idivb
mov
rep
sub
stos
bound
pop
daa
in
push
in
ret
out
xor
pop
inc
mov
aas
ficompl
pop
cmpsb
leave
pushf
push
lcall
jl
ja
push
scas
pop
jo
sbb
scas
loop
aaa
lds
loop
ss
or
push
mov
in
push
adc
push
push
lahf
mov
fisttpll
pop
jbe
pop
add
mov
pop
cmp
jg
xchg
mov
push
lret
nop
mov
fdivrl
adc
insl
cmpsb
ficompl
mov
adc
add
mov
ds
cltd
push
xchg
lahf
lret
or
aas
dec
dec
xor
xor
fwait
leave
fucomip
std
jne
pop
imulb
adc
loopne
cmp
insl
icebp
sbb
cmp
addr16
les
enter
mov
aam
fiaddl
mov
icebp
mov
pop
imul
gs
in
shll
aas
xor
icebp
mov
xchg
jle
les
stos
cmpsl
add
loop
dec
push
loope
ss
push
outsb
or
mov
and
mov
lret
mov
pop
push
jecxz
pop
mov
movsl
bound
shlb
lret
add
sbb
push
xor
xchg
fdivl
add
dec
test
idiv
xchg
mov
sub
lods
shlb
sub
pop
bswap
cmovns
insb
int3
pop
xchg
dec
ret
dec
sbb
rcll
and
or
sbb
mov
add
mov
fucomp
dec
xorl
clc
shl
xchg
push
add
fwait
mov
cltd
add
les
xor
rol
out
push
jo
and
imul
mov
lret
fists
cmp
add
loope
repz
ss
aas
stc
jge
shrb
xchg
popa
sbb
push
and
jb
sarb
xor
mov
pop
add
outsb
mov
fdiv
shl
into
add
add
jne
jb
js
add
push
jne
inc
xchg
or
lea
std
push
add
pop
leave
pop
movsb
lahf
loopne
gs
dec
repz
loope
add
adc
clc
pop
xor
cmpsb
and
push
mull
outsl
lcall
daa
dec
fwait
loopne
xor
pop
ret
and
jecxz
test
push
cwtl
cmp
outsl
or
mov
dec
lods
mov
popa
bound
inc
jns
cmp
or
or
outsb
mull
loope
les
mov
or
mov
inc
popl
dec
jmp
scas
inc
dec
loopne
or
lret
push
add
int3
or
lods
cwtl
adc
daa
mov
movsb
les
fmuls
push
inc
or
dec
cld
mov
push
add
mov
aaa
jne
outsb
fistpll
stc
mov
mov
push
out
or
cmp
mov
mov
mov
adc
pusha
fisttpll
jg
jmp
jno
pop
and
sahf
pop
loop
mov
es
es
sbb
stos
inc
dec
jge
sbb
lret
mov
add
out
mov
mov
repnz
ficompl
fldl
lret
inc
or
inc
xorb
loop
or
imul
das
and
int
ficoml
pop
rcll
je
push
inc
adc
adcl
pop
mov
mov
andb
push
mov
lret
jns
das
or
lahf
sbb
push
inc
xchg
mov
dec
dec
push
cmp
lret
and
adc
aad
jo
arpl
and
push
js
mov
mov
lea
cmc
shrl
mov
bound
sbb
xor
sbb
inc
xchg
fidivrl
dec
sbb
orl
inc
test
sbb
lods
test
xor
out
or
push
xorb
inc
dec
mov
mov
pop
push
stos
insb
or
int
fmul
and
lahf
pop
mov
mov
stc
mov
ljmp
loop
mov
dec
pop
jae
sbb
cmp
test
jle
xchg
loopne
jns
sti
push
fnstcw
ljmp
jmp
xor
loop
mov
jne
inc
das
das
push
dec
cmp
mov
and
fs
mov
sbb
jnp
sbb
insl
inc
jl
icebp
mov
push
adc
sbb
sub
lahf
jecxz
repnz
adc
mov
push
js
inc
rclb
cli
insl
xor
fisttpll
sub
sbbb
ljmp
repz
inc
out
in
loopne
pop
xorl
jmp
ss
into
or
fldt
repnz
testl
sbb
push
add
jg
fisttps
xor
xor
aad
or
mov
inc
and
mov
mov
inc
inc
mov
test
test
xchg
push
dec
mov
ss
mov
mov
xor
in
jne
xchg
loopne
hlt
cmp
push
dec
fbld
loope
adc
ret
cmp
fbld
jo
mov
std
pop
fcoml
xor
out
in
push
fs
test
pop
stos
jmp
mov
rcr
xor
call
add
stc
sub
xchg
cltd
lahf
push
jg
imul
in
in
jbe
xchg
and
rcrl
jb
xchg
push
sti
icebp
push
fistl
jno
imul
arpl
pushf
xchg
aas
jb
jo
lahf
outsl
lret
ret
or
add
js
cmpsb
mov
pop
cld
jecxz
xor
dec
inc
sbb
pop
sbb
ret
sbb
pop
mov
cmovs
jl
xchg
clc
mov
lods
sahf
and
inc
adc
icebp
jl
insl
cmp
mov
inc
cmp
movsb
cli
adc
outsl
cmp
cmp
or
or
out
insb
mov
sti
stc
jmp
pop
jp
gs
pop
nop
inc
mov
xor
and
es
test
lea
scas
xchg
pop
add
gs
test
bnd
cli
jg,pt
mov
mov
out
sahf
ficoml
bound
mov
adc
out
test
xor
lock
dec
inc
loope
jle
inc
sbb
mov
ret
cmc
sbb
add
insl
mov
pop
sub
les
loope
imul
loope
xchg
hlt
sub
in
and
jg
das
rcll
subb
test
testb
popa
test
cmp
int3
fnstenv
cld
repnz
into
add
xchg
es
jp
adc
lods
xchg
cmp
out
lods
pusha
mov
add
mov
test
add
xchg
outsl
into
stos
jo
pop
mov
inc
rorl
movsl
sti
inc
movb
into
lcall
fnstsw
rcrl
fxam
jb
in
ss
aaa
lcall
in
clc
cli
ret
adc
inc
lret
add
cmp
imul
bound
test
inc
out
mov
pop
aam
pushf
mov
sub
dec
adc
mov
ss
je
push
pop
mov
adc
add
fucomi
add
lea
xchg
adc
stos
popf
into
add
ret
and
pop
sbb
lcall
mov
or
test
popa
mull
movsl
and
inc
stc
lret
push
mov
push
mov
aaa
mov
ret
mov
incb
xchg
mov
push
push
sbb
mov
mov
xchg
or
loop
adc
nopl
jl
daa
loope
std
lcall
xchg
in
into
jnp
dec
das
ds
sahf
mov
cmp
mov
push
insb
shlb
cmp
pushf
shrb
mov
aad
arpl
or
dec
push
jne
bound
movsb
jmp
add
push
lret
notl
insb
mov
push
movsl
ss
mov
popf
fmuls
shl
out
lea
push
sbbl
push
cmpsl
lods
insb
nop
jp
imul
das
jg
int3
cmp
addl
jmp
jne
dec
sbb
xchg
sbb
add
jmp
xchg
jb
shlb
fs
inc
and
lock
push
cmpsl
xor
pop
dec
mov
inc
nop
adc
aaa
cmp
mov
jno
pop
ljmp
cltd
lretw
es
ret
outsl
push
ja
adc
scas
push
adc
nop
sarl
les
sub
fsubrp
xchg
out
push
push
pusha
adc
cmp
adc
rorl
cmp
ret
mov
aaa
mov
mov
out
mov
andl
repnz
mov
pop
insb
or
aam
std
sbb
shll
xchg
inc
mov
ret
cmp
subb
mov
push
jp
ss
sti
xor
push
inc
xchg
sub
data16
mov
cwtl
ss
je
in
int3
xor
imul
iret
je
enter
adc
or
jns
sub
sbb
pop
sbb
movsb
std
sti
push
mov
and
std
lret
cmp
adc
mov
dec
jne
sti
insl
iret
push
int3
pop
lods
xchg
add
add
addr16
scas
inc
xor
insl
roll
mov
mov
add
loopne
mov
xlat
rol
ja
jne
xor
enter
cmp
adc
repnz
imul
cs
cmp
cmp
das
pop
daa
adc
adc
push
push
aam
or
out
loop
cmpb
inc
shll
sub
pop
cli
scas
jb
lods
stos
inc
sahf
or
sahf
xor
cmpsb
dec
mov
xlat
and
andl
nop
mov
lods
mov
icebp
lahf
cmpsb
repz
or
popf
cmp
push
or
mov
and
repz
lea
inc
mov
in
or
pop
call
cwtl
pop
lods
orb
mov
jl
fldl
cltd
dec
add
sub
popfw
xchg
or
lret
cmp
cld
xor
pushf
xor
xor
lcall
test
cmpsl
stos
in
fs
dec
rclb
roll
out
xchg
stc
add
jp
mov
push
les
xchg
xor
out
pop
or
ss
test
push
cld
mov
pop
fmul
add
rorb
out
gs
cwtl
out
fcoml
mov
int3
std
mov
insb
rolb
push
jle
mov
data16
mov
popa
mov
xchg
fistl
test
and
call
test
cmove
int
jo
mov
inc
xchg
pop
lods
mov
adc
in
jge
and
ror
sub
mov
in
push
xchg
sarb
push
aad
push
jg
lret
pop
xchg
sbb
xchg
dec
jle
cld
fimull
jno
xchg
push
push
lds
std
shlb
mov
fs
repnz
out
pop
stc
rclb
cltd
pop
cmpsb
insb
fistpll
loop
cmp
ret
mov
out
or
add
cli
push
jg
es
or
push
push
mov
inc
mov
push
inc
stos
mov
shr
sbbl
sbb
push
cmp
stos
arpl
xchg
repnz
push
dec
cld
xchg
mov
repz
jbe
int3
sti
cmp
out
sub
sti
push
lret
add
shrb
push
cmc
int
ret
mov
fst
pop
sub
mov
imul
inc
lods
test
mov
leave
dec
fucomip
sub
pushf
push
adc
out
cmp
inc
pop
adc
cltd
mov
dec
sarl
mov
data16
daa
repnz
fsubr
or
pop
in
or
or
inc
sarl
mov
dec
mov
jns
mov
adc
xlat
out
ret
inc
sahf
mov
ficoms
xchg
xor
inc
xchg
int
jo
adc
and
andl
int
outsb
cs
xlat
sbb
outsl
imul
scas
xlat
out
stc
pop
fbstp
in
lcall
cli
mov
ja
ds
adc
xchg
aas
aaa
test
ficomps
and
mov
sbb
push
add
sbb
loop
pop
ljmp
fisttpl
lods
xor
pop
push
insb
in
mov
or
fwait
into
mov
dec
icebp
push
xchg
scas
loopne
sahf
sbb
lods
into
xchg
and
clc
ja,pn
xchg
xchg
and
out
push
mov
lds
adcb
mov
ret
xchg
int3
rorl
jae
jnp
xchg
xor
mul
bswap
lret
mov
fcmovu
add
cmp
shlb
sub
inc
jns
repz
mov
inc
mov
push
sub
addr16
pop
lds
xor
pop
and
xor
push
adc
fwait
in
clc
stos
push
cs
xor
imulb
test
popa
in
repz
aam
js
insl
add
mov
and
inc
mov
mov
pop
pop
mov
mov
lret
sbb
test
in
mov
inc
fistpll
movsb
xchg
test
jecxz
js
push
test
repnz
fucom
fsubrl
shr
jmp
sbbl
dec
and
stc
xor
xchg
dec
dec
sbb
mov
mov
mov
sub
iretw
out
cmc
test
dec
push
or
iret
fldenv
push
sbb
xchg
or
jo
mov
jb
mov
insb
rorl
insb
aam
pop
lock
mov
out
or
mov
pop
inc
pop
xor
pushf
adc
mov
gs
jmp
popf
repnz
sti
and
mov
int
leave
jp
xchg
xor
jb
dec
loop
or
mov
adc
rcrl
cmp
xor
ret
push
mov
xchg
cmp
fcoms
sbb
mov
sub
add
je
dec
sbb
and
pop
loop
xorb
mov
fwait
mov
push
jnp
jne
mov
jle
cmp
add
int3
push
jns
into
sub
mov
xchg
das
inc
pop
jbe
jl
adc
cli
or
fcoml
jno
cmp
xchg
jmp
test
mov
xchg
dec
btr
int3
push
lea
pop
sub
pop
xchg
pop
jne
xchg
jbe
mov
movsl
jo
jg
mov
mov
shll
jmp
jmp
pop
sub
pop
mov
aas
repz
lea
push
mov
loopne
mov
jns,pt
sbb
jnp
dec
cmpsb
lods
jg
sarb
decb
dec
rcrb
fimuls
arpl
inc
les
outsl
ds
arpl
jl
decb
push
iret
mov
push
xchg
push
xchg
mov
insl
add
inc
pop
sbb
popl
out
aaa
ds
cmpsl
push
imul
lea
add
pop
cmpsb
or
rcrl
sbbb
lds
jns
scas
pop
test
cltd
rorb
call
mov
xor
aas
rcl
xchg
inc
out
sub
rorl
shll
fisubrl
insl
inc
pop
fldl
test
addb
push
and
fs
jg
in
push
sahf
xchg
mov
mov
ss
fidivrl
cwtl
les
sahf
cmpsb
push
push
aaa
pop
popa
sahf
imul
pop
arpl
rcr
rclb
in
cmp
mov
fnstcw
xor
jmp
cmp
mov
das
jbe
push
inc
xchg
add
pop
iret
sub
arpl
inc
xor
dec
or
lcall
cmp
icebp
xlat
into
std
jmp
cmp
sarl
addr16
imul
ret
inc
pop
enter
cmp
push
out
push
and
mov
pop
cmp
mov
pop
inc
or
and
pop
test
dec
movsl
mov
orl
xor
adc
mov
mov
je
pushf
insl
and
add
call
xor
jae
jmp
outsl
add
cltd
pop
adc
adc
sub
mov
call
mov
ret
or
sbb
xchg
xor
dec
sbb
inc
dec
pop
xchg
xchg
mov
fnstenv
xchg
sbb
test
sbb
mov
arpl
sbb
add
jae
jle
pop
cmc
sub
in
add
out
nop
cmp
jg
fstps
mov
in
imul
ret
mov
stos
xchg
sbb
jg
lods
push
sub
outsb
jnp
in
mov
xchg
mov
fcmovb
sbbl
out
pop
pusha
sbb
push
cmpsl
test
lods
or
sahf
loopne
stc
mov
sbb
orb
jno
jnp
push
popf
push
ret
out
xlat
inc
lahf
pop
cmp
xchg
xorl
pop
push
movsb
outsl
or
movsl
mov
ljmp
in
inc
sarl
inc
repz
add
push
mov
fs
in
or
clc
mov
mov
adc
inc
and
cmp
out
aad
xor
movsl
mov
cmp
mov
add
clc
rcr
lods
test
out
mov
pushf
sbb
imul
mov
ficoms
int3
mov
xchg
inc
push
fucomi
scas
mov
adc
lcall
icebp
aaa
or
dec
xor
jne
jg
ficompl
ja
sbb
mov
dec
and
lock
lock
push
and
outsb
js
xchg
sub
jl
adc
jp
hlt
sub
push
test
cmpsb
test
fmull
sub
fnstcw
xchg
cmp
or
cltd
cmp
cwtl
sbb
adc
sub
xchg
test
fildll
add
add
dec
gs
xchg
push
jns
mov
lcall
fstl
adc
fadds
sti
xchg
and
adcl
cmpb
xor
fwait
std
and
popf
fdivrl
and
lds
sbbl
scas
dec
insl
test
leave
inc
mov
mov
pop
mov
out
and
add
mov
gs
aas
enter
jae
outsb
push
pusha
mov
or
je
xor
xchg
mov
dec
icebp
push
pop
and
xchg
xor
fnstsw
cmpb
inc
pop
ja
xor
xor
pusha
jp
aaa
fs
subl
push
ljmp
jg
dec
dec
mov
icebp
call
lret
fldcw
lahf
mov
das
jmp
repz
dec
sahf
push
inc
lock
mov
sarl
lret
repnz
icebp
push
pop
setg
arpl
push
test
xor
aas
movsb
leave
mov
xor
cld
sub
popa
bound
push
incb
and
mov
cmc
or
sahf
mov
das
sub
fldcw
cs
cld
mov
xchg
adc
imul
sbb
dec
stos
insb
data16
aam
xchg
test
stos
sub
popa
dec
push
cmpsl
pop
xchg
outsb
std
sbb
shl
jns
das
mov
xchg
fcmovb
cwtl
in
add
iret
movl
cmp
hlt
cli
in
xor
cmpsl
daa
sbb
fdivl
sbb
dec
dec
rcrl
and
inc
xor
in
sbb
imul
rorl
xchg
std
sbb
arpl
pop
andl
outsb
test
sbb
sti
int3
add
rol
jle
into
cmc
mov
testl
subb
sbb
sbb
fcoms
js
xor
lods
jmp
jle
cmpsl
dec
mov
movsb
or
mov
mov
out
and
push
and
icebp
pop
cmp
add
cmpsl
add
pop
xchg
xor
popa
xchg
cwtl
into
add
roll
add
mov
dec
pushf
orb
push
push
mov
nop
daa
cltd
dec
movl
mov
imul
xlat
sub
xor
jle,pn
inc
xorl
inc
lret
pop
pop
leave
stc
aam
mov
lret
fidivrl
mov
mov
sti
movsl
mov
aam
jb
dec
mov
push
mov
cs
adc
mov
cmpsl
sub
jp
imul
inc
enter
cmp
xchg
insb
fdiv
dec
xor
idiv
testl
jg
mov
inc
test
xor
rol
ljmp
outsl
bound
xchg
iret
loopne
mov
xchg
jnp
sub
xor
rcll
and
sbb
pop
adc
ficomps
push
and
and
repz
or
gs
cmp
testb
mov
pop
out
or
mov
mov
dec
inc
push
jno
mov
lret
sub
add
mov
fsubrs
push
mov
dec
fnsave
or
mov
pop
lahf
and
scas
push
mov
out
outsb
sub
bswap
stos
xor
icebp
mov
cwtl
mov
mov
enter
jmp
pop
xor
mov
mov
jle
mov
sahf
hlt
add
lods
les
mov
es
test
fisttpl
xchg
js
gs
les
clc
xchg
mov
in
add
push
inc
cs
push
or
icebp
adc
rorl
jp
fnsave
das
negl
cmp
pop
push
call
cmp
dec
mov
add
mov
jecxz
mov
mov
cmp
out
fwait
and
xlat
out
adc
inc
fmuls
fsubrs
je
out
pcmpeqb
lcall
dec
stos
adc
call
jmp
lret
mov
xchg
or
cmp
push
xchg
cmpsl
mov
sub
inc
and
fsts
push
mov
dec
rorl
inc
clc
dec
aad
shll
or
rorl
xorb
fcmovne
and
loop
hlt
adc
stos
and
loop
test
shlb
xchg
pusha
mov
test
mov
int3
adc
jge
pop
add
repnz
imul
aad
lods
pop
jg
sbb
je
inc
js
mov
inc
mov
int
jle
jecxz
inc
push
pop
xchg
xchg
push
rclb
ja
mov
push
popf
data16
inc
bound
push
cwtl
lcall
xchg
fsubs
rclb
mov
push
pop
enter
mov
clc
out
inc
sub
fsubrl
loopne
scas
lods
dec
jl
popf
xor
popa
ret
imul
sbb
pop
fcoml
sub
dec
sti
cld
dec
adcb
sub
arpl
aas
scas
sbb
mov
sbb
lods
sub
fists
push
adc
inc
rorb
test
fsts
or
pop
int
sbb
cld
mov
stos
jbe
or
fcomi
loop
push
adc
push
push
ja
es
hlt
xchg
pop
jb
fldl
or
std
jo
jle
fsubs
repz
dec
jmp
mov
sbb
int3
push
stos
adc
fcomps
mov
push
mov
jb
sbb
xchg
cmpsb
loop
sub
adc
sub
dec
push
dec
outsl
dec
shl
hlt
data16
pop
add
lret
push
sbb
mov
aam
sub
adc
dec
push
mov
in
mov
sbb
jg
cmp
mov
pusha
in
repz
jl
inc
daa
icebp
mov
inc
jns
pop
pop
adc
push
sbb
xchg
xorl
jb
outsl
push
lods
orl
push
call
push
xor
iret
xor
sbb
adc
dec
sbb
nop
add
stos
imul
sbb
pop
loopne
sub
cmc
nop
mov
pop
xchg
lahf
mov
or
lds
in
mov
pop
shll
popa
adcb
sbb
or
std
mov
leave
stos
hlt
add
push
clc
lods
adc
pop
jge
fwait
pop
jae
lret
sbb
push
fstps
xchg
mov
loopne
dec
mov
push
pop
xchg
mov
add
push
cmp
imul
push
jns
xor
fs
xchg
fists
mov
jns
push
rcrl
mov
cli
jle
lods
fmuls
fsub
xchg
mov
sbb
inc
sub
adc
mov
gs
fisttpll
add
imul
mov
mov
push
inc
xor
jae
inc
mov
sbb
ret
mov
and
or
pop
add
pop
cmp
mov
das
or
lds
imul
inc
xchg
sbb
or
xchg
jns
sub
dec
xor
imul
add
push
sbb
and
sub
mov
divl
call
pop
dec
mov
gs
loopne
and
ret
ds
mov
test
incb
cmp
xchg
fmuls
js
push
or
repnz
jbe
push
xchg
repz
sbb
orl
ss
fnstsw
insl
pop
jle
mov
inc
sbb
fidivrs
enter
sahf
and
add
xor
lret
mov
mov
aaa
cwtl
jecxz
push
sub
aas
mov
push
add
in
xchg
jnp
xor
sub
mov
std
enter
fisttpll
or
xchg
sub
jmp
mov
aad
scas
cmc
mov
test
bound
clc
aaa
arpl
push
mov
or
lods
in
cwtl
fsubp
cmp
out
lock
jmp
sbb
push
sbb
mov
jge
sub
lods
adc
fucomp
xchg
lret
mov
mov
adc
lock
sub
sbb
push
add
xlat
fimuls
push
mov
xor
xchg
adc
xchg
mov
or
xor
or
xchg
mov
and
fs
cli
out
addb
and
mov
cli
movsl
and
out
mull
xchg
imul
cmpsb
inc
lds
xor
insl
add
fldcw
adc
mov
push
ret
add
add
sti
and
imulb
or
popf
jmp
fdiv
pop
lcall
push
jae
sub
push
push
es
push
pop
ficoms
outsl
out
iret
icebp
loop
js
pusha
inc
or
lahf
call
mov
pop
daa
outsb
inc
aas
xchg
xchg
ja
jo
loop
or
push
dec
xchg
fbstp
sti
je
inc
mov
scas
sbbb
and
xchg
rcll
mov
lret
push
push
jb
push
mov
into
push
pop
dec
shr
jge
or
mov
and
addr16
adc
subb
cmc
jmp
lods
les
cmp
fcmove
imul
sbb
xchg
adc
pop
imul
jo
add
cmp
pop
test
fstpt
cmp
pop
dec
in
mov
push
fistpl
jecxz
mov
loop
and
sbb
mov
xor
pop
movsb
jle
xchg
mov
xor
call
imul
jecxz
cli
dec
push
pop
es
add
es
jmp
mov
popf
shrl
jae
ret
daa
ja
lds
cmpsl
fsubr
mov
xor
jnp
sbb
dec
mov
xor
or
fsubrl
fiadds
pop
in
rcrl
mov
stos
cmp
mov
mull
inc
outsb
jmp
pop
inc
es
incl
addr16
xchg
pop
push
imul
xchg
mov
jmp
cmc
lahf
jae
scas
outsb
cmpsl
gs
fldt
ja
loop
mov
dec
sar
aaa
sbb
out
sbb
pop
pop
jg
push
fst
pop
fldcw
cltd
outsl
mov
push
testb
das
cmp
sub
fstl
mov
rclb
xchg
sub
movsb
jbe
mov
aad
mov
addr16
push
lds
mov
or
dec
or
ljmp
mov
insl
inc
loope
fdivrs
out
leave
lods
icebp
mov
mov
xor
scas
cmp
les
test
adc
xchg
cmc
dec
movsl
jae
cmp
lret
scas
popa
sub
divl
jl
dec
sub
pop
stos
sti
out
fstpt
and
lock
cli
push
cmp
mov
and
pusha
push
xchg
in
lcall
fstl
enter
insb
cli
jg
addr16
ja
imul
adc
leave
fucomip
loope
insl
movsl
scas
arpl
out
std
jnp
je
push
add
jb
iret
mov
cmc
sbb
add
dec
push
push
fnstcw
scas
pusha
ss
mov
std
pushf
or
xor
mov
into
sbb
cmc
and
sbb
mov
out
cmpsl
or
inc
or
aas
in
mov
loope
gs
and
push
and
aam
addr16
cmp
pop
xchg
leave
mov
inc
jle
loop
cmpb
cmp
adc
mov
lret
jns
jnp
and
and
mov
fcmovnbe
sub
dec
imul
ret
sub
fistpll
imul
clc
or
sub
jne
int3
mov
xor
xchg
jle
loop
mov
gs
pop
mov
mov
ret
fadds
mov
mov
ds
mov
lods
jp
stos
sbb
jge
stc
push
or
and
sub
pop
aaa
mov
fcomps
clc
loopne
xchg
cmp
xchg
movb
dec
orl
shll
pop
sbb
jge
ret
sti
push
jns
adcb
xchg
out
shll
stos
jb
aas
xchg
and
mov
jo
push
pop
imul
sbbl
nop
jb
arpl
lock
in
les
dec
jl
and
adc
pop
push
js
cli
inc
movsl
in
adc
cs
and
xchg
xor
jg
or
mov
mov
das
mov
pop
sarl
pop
cmp
adc
mov
scas
aas
cltd
pop
fsubrs
cmp
les
fidivl
pop
cmp
repz
je
cs
mov
pop
or
aam
mov
add
popf
sbb
movsb
in
jo
loopne
mov
flds
in
lods
loop,pn
mov
xor
dec
mov
push
mov
ret
bnd
outsl
mov
push
jae
pop
ret
mov
xchg
sbb
xchg
out
ret
sbb
jle
popa
ljmp
or
scas
std
or
data16
inc
or
push
aaa
scas
mov
and
xor
stc
stos
cmpsb
fidivrs
pop
imul
ljmp
xor
jb
sarl
push
xor
or
ret
std
push
or
mov
dec
push
mov
cltd
cmp
std
sub
ret
pop
xchg
shl
pop
sbb
mov
or
sarl
mov
enter
sub
and
insl
data16
sub
cli
addl
rolb
inc
push
daa
pop
mov
add
inc
dec
ret
outsb
sbb
and
sti
xchg
adc
jle
decb
scas
push
and
test
lea
mov
add
outsl
mov
clc
sbb
imul
setl
jne
hlt
sahf
adc
flds
pop
xchg
sub
xchg
cmc
loope
popf
enter
xchg
xor
sbb
ficomps
push
mov
loop
mov
cli
or
pop
stos
adc
xor
int3
pop
cmp
sub
int3
jnp
fs
or
lods
inc
dec
sbb
cmpsb
std
std
int
push
movl
cld
inc
sbb
lds
cmp
xor
repnz
jl
test
mov
mov
stos
ds
mov
or
adc
mov
mov
add
push
lock
out
jmp
loopne
jg
or
push
add
add
or
add
adc
lcall
dec
mov
cmc
xchg
push
mov
fs
sub
pusha
aam
loope
leave
sub
pop
clc
dec
or
xchg
pop
icebp
repz
push
mov
mov
sahf
cmpsb
movsb
insl
pop
aam
xchg
outsb
sbb
mov
pop
or
mov
and
pop
adc
pusha
lods
fdivrl
inc
fdivrl
es
sub
stc
test
outsb
add
sbb
enter
sub
and
add
xchg
lcall
inc
test
and
nop
xchg
push
mov
jge
out
sbb
pop
clc
lcallw
jo
stc
hlt
xchg
mov
mull
pop
inc
xlat
jb
xchg
mov
int3
mov
jmp
jne
dec
dec
sahf
and
lahf
push
cmp
out
adc
xchg
cld
inc
int
mov
adc
sysret
push
out
sti
jecxz
shr
inc
xchg
popa
dec
ret
dec
sub
xor
mov
pop
jl
popf
pop
into
mov
mov
adc
sbb
pop
loop
sbb
mov
insl
jae
or
adc
pop
adc
pop
sahf
cmp
mov
jmp
sar
mov
sub
arpl
xor
adc
sbb
dec
out
test
clc
mov
repz
movsl
sub
repnz
ror
mov
pop
or
addr16
scas
outsl
std
out
stc
aam
dec
cmpsb
xchg
xchg
mov
mov
push
inc
mov
sbb
out
cmpb
std
pop
push
push
popa
pop
xor
xlat
enter
add
lret
mov
addr16
adc
push
pop
xchg
cwtl
adc
mov
adc
call
js
jmp
sub
popa
nop
push
fisubl
repz
jmp
movsb
cltd
dec
ret
or
lret
cmp
test
dec
adc
mov
push
fs
flds
and
in
jl
push
mov
push
push
push
xor
adc
stc
add
adc
sub
es
arpl
jg
rolb
mov
ds
popf
insl
fcmove
push
cmp
mov
je
loopne
mov
je
ret
stos
lods
and
sbb
jmp
dec
dec
pop
les
fldt
sbb
pushf
andl
push
lds
xchg
subb
mov
inc
lock
mov
cwtl
fs
js
cmpsb
jmp
mov
push
repnz
dec
js
add
rorb
pop
dec
push
loop
inc
add
xlat
hlt
jns
mov
cmp
dec
es
inc
cmc
arpl
pop
adc
xor
enterw
fistps
cmpsb
and
cmp
test
and
movsl
inc
je
insl
lret
sub
mov
stos
aad
aam
lret
cmp
mov
rclb
insl
mov
sub
lcall
outsl
lret
cli
jl
adc
mov
sub
fstl
jno
push
stc
subb
jns
pop
mov
xchg
mov
mov
dec
sbb
sbb
push
pusha
test
imul
cmp
jmp
lods
lock
outsl
mov
jnp
scas
cs
and
jne
dec
stc
adc
insb
or
fadd
test
out
xchg
adc
int
add
in
inc
lods
mov
mov
sub
mov
lock
mul
int3
sub
cmp
mov
mov
jmp
xlat
dec
dec
xchg
loop
jmp
aam
xchg
mov
cmc
pop
xchg
adc
push
xchg
aam
fiaddl
enter
jge
in
ljmp
in
loopne
cld
in
and
push
jecxz
ds
adc
jb
imul
lcall
bswap
or
push
test
sub
mov
lods
push
out
or
subl
push
js
push
in
mov
movl
pop
pop
push
jae
mov
add
out
or
xlat
fsubrs
adc
and
jnp
pop
jl
pop
mov
notl
outsb
mov
adc
sub
jo
out
sub
jecxz
push
push
inc
sub
jo
mov
jne
cs
stos
icebp
stc
add
sbb
adc
out
dec
movsb
popf
and
rcl
je
cmp
lret
aam
xor
mov
addr16
jo
sub
xor
jmp
scas
push
leave
cmp
jg
leave
mov
insl
add
jne
cld
fadds
cmc
push
mov
lret
inc
inc
and
xor
call
mov
xchg
ds
push
leave
xchg
sbb
pop
mov
push
sbb
arpl
out
mov
cmc
sub
xchg
xchg
out
pop
in
cmp
clc
push
lahf
mov
adc
out
and
mov
lcall
mov
mov
xor
dec
jmp
xchg
xor
adc
dec
ljmp
andb
push
in
das
es
cltd
les
cmc
xchg
adc
adc
xor
pop
fcmovb
shll
std
popa
inc
adc
in
in
xchg
xchg
shll
xchg
outsb
xchg
xchg
mov
pop
jg
icebp
in
in
xchg
jo
sbb
icebp
cmp
fimuls
cs
jnp
mov
lcall
jp
out
jo
push
add
sbb
pop
xlat
fiaddl
ja
cmc
daa
je
scas
add
pusha
pushf
stos
jne
xlat
add
add
popa
stos
aad
movsl
push
scas
jg
out
and
aam
iret
mov
stos
push
notl
das
pop
movsb
jb
pop
std
ja
xor
push
mov
adc
jae
cmp
sahf
in
lea
aam
add
jle
xchg
sbb
jl
ss
lods
jnp
mov
sub
ss
pop
add
notl
jge
xchg
rol
inc
sub
repz
cmp
mov
fists
mov
sub
out
jecxz
cltd
into
sbb
jg
lds
cmp
push
inc
popa
or
jle
divb
stos
jnp
cli
or
mov
and
cmp
dec
fisttps
cmpsb
cmpsb
inc
cmp
into
and
adc
jno
stc
cmp
fdivrl
xor
aam
dec
lret
loop
mov
repnz
add
ljmp
inc
ja
sti
jae
shll
bound
shl
cmp
cmp
jmp
decl
add
and
xor
data16
iret
jmp
arpl
pop
adc
popa
inc
dec
into
jnp
test
rolb
add
sub
lock
mov
push
lahf
sub
je
dec
add
cli
scas
mov
mov
nop
rcrl
xchg
testl
jae
add
xor
les
repnz
dec
inc
mov
fcomps
push
rclb
push
add
fcomip
in
lea
cld
sbb
pop
mov
jg
jp
push
pop
pop
es
xchg
xchg
hlt
sti
or
mov
insb
sbb
insb
fldt
jnp
lds
mov
in
adc
in
cmpsl
into
xorb
scas
push
inc
sbb
test
flds
inc
xchg
dec
dec
enter
mov
xchg
xchg
push
fdivrp
cmp
je
sbb
xor
push
or
mov
stos
sbb
or
dec
mov
jno
dec
adc
std
and
fldt
inc
sub
or
fpatan
nop
sbb
jae
test
neg
hlt
mov
fisttps
or
and
mov
fsubs
cmc
xchg
ffreep
cwtl
xchg
jge
push
add
arpl
fnstenv
int3
insb
fs
pop
pop
es
push
ficoml
jne
push
pop
rorb
push
adc
push
movsl
pop
and
addr16
jns
pop
jae
pop
push
idivl
mov
dec
fwait
sbb
add
xchg
or
dec
mov
inc
jo
inc
push
lea
int3
int
push
pop
lcall
incl
xor
rcl
jo
mov
xor
rolb
push
inc
mov
dec
fisttps
mov
inc
ficomps
cltd
popa
mov
jp
testb
adc
mov
fcomip
mov
loop
pop
ret
push
push
cmp
leave
loopne
and
pop
addl
aaa
or
daa
das
stos
in
pop
fs
ret
mov
jp
repz
loope
xor
pop
in
push
sarb
out
cmp
or
cmpsl
shrb
out
in
aaa
out
or
jns
hlt
cmp
shrl
cmpsb
pop
adc
insl
push
jnp
in
hlt
sbb
jmp
leave
pop
into
add
dec
pushl
adc
adc
loope
out
jge
sbb
mov
inc
lock
sub
jo
add
sbb
fcmove
sbb
or
fmulp
clc
mov
jae
cmpsb
imul
jp
jecxz
cmpsl
in
mov
xor
jns
mov
fisttpll
push
jnp
cld
fnstsw
dec
mov
cmp
sub
jbe
daa
lahf
sub
xchg
jecxz
push
divb
outsl
scas
mov
pop
or
movsl
lret
je
sub
mov
jns
sub
fidivs
repnz
cmpsl
dec
and
arpl
sub
subl
imul
xchg
adcl
aam
scas
shll
or
or
push
int3
add
cltd
aaa
inc
scas
adc
cmp
push
xchg
xor
lret
mov
arpl
jne
pop
xchg
or
add
xchg
mov
mov
xchg
mov
add
xchg
shrb
mov
xor
adc
jl
out
mov
int3
cld
adcb
in
adc
rclb
inc
test
jmp
enter
pop
jns
loopne
hlt
pop
imul
je
sahf
pop
cmp
cmp
lahf
das
or
mov
into
sbb
push
test
ds
stc
xor
mov
add
ljmp
ja
jmp
xchg
sub
jp
daa
cmp
xchg
pop
sbb
cmc
popf
loop
rcll
jle
test
xorl
subb
aaa
enter
push
sub
lret
popf
pop
fdiv
arpl
pop
mov
push
lods
or
xchg
jecxz
mov
bnd
pop
xchg
xor
xor
pop
lret
shrl
arpl
cmpsb
insb
and
jle
push
jle
inc
jbe
jnp
outsb
xchg
mov
neg
sbb
push
pop
push
ja
faddl
mov
mov
ja
imul
xor
mov
mov
mov
mov
mov
pop
dec
testl
add
es
or
cmpsl
arpl
push
movsl
sbb
js
gs
js
xlat
mov
and
inc
test
loopne
push
out
imul
mov
out
pop
jmp
jb
jns
movsl
xor
call
decl
or
cltd
pop
dec
jae
addr16
sub
push
mov
pop
adc
mov
cmp
mov
push
cmp
mov
lods
xchg
int3
jae
pop
scas
fs
mov
adc
outsl
cs
mov
lods
mov
mov
mov
pushf
mov
insb
adc
fadd
icebp
daa
inc
movsl
xor
jmp
insb
js
rcrl
push
sbb
mov
and
stos
test
test
popf
imul
xor
sub
popa
jns
std
sbb
or
jg
ds
scas
cwtl
outsl
push
nop
insl
xchg
adc
jae
fmull
jp
sbb
xor
adc
adc
pop
test
mov
pop
pushf
mov
mov
mull
lock
cmp
clc
push
xchg
sub
mov
xchg
call
test
mov
push
jecxz
repnz
stos
mov
outsb
jp
aas
mov
dec
inc
mov
pop
subb
pop
and
xor
int3
xchg
iret
mov
fiaddl
ret
imul
ret
push
loopne
int3
cmp
fidivrs
push
scas
cmc
std
aaa
xor
shll
cmpl
and
add
pop
lea
adc
popa
mov
push
ljmp
cld
cmp
or
xor
jnp
aas
lret
lcall
mov
sbb
stc
push
push
stc
cmc
mov
dec
add
js
lds
ja
pop
fdivrs
or
in
shrb
cmp
and
dec
add
cmp
sahf
jp
mov
pop
movsl
ficoml
mov
hlt
rolb
ret
mov
push
scas
jae
mov
stos
or
mov
jns
pop
lods
push
cmp
adc
imul
popf
les
adc
mov
add
pop
inc
mov
dec
cwtl
repz
data16
test
mov
stos
mov
and
nop
subl
loopne
add
sub
push
and
outsl
or
adc
add
aaa
das
cmp
cmp
adc
xor
test
xchg
dec
pop
fs
outsl
xchg
mov
sub
push
pop
mov
je
mov
mov
xchg
sbb
inc
test
and
jge
mov
xor
out
loopne
lods
aas
xchg
shl
shlb
xchg
lock
stos
and
inc
inc
dec
or
push
lcall
xchg
jle
pop
in
mov
nop
and
ljmp
enter
adc
sbb
repnz
movsl
out
outsl
xchg
ficoml
jecxz
sbb
pusha
mov
mov
dec
add
xchg
out
std
xor
sub
std
hlt
add
cmp
xchg
jae
xchg
or
mov
push
or
jb
add
test
xor
fidivl
fs
out
fcompl
bound
cmp
add
mov
adc
push
xchg
pop
test
int
cmpsb
scas
add
xchg
mov
jmp
icebp
lods
add
imul
fidivs
or
ja
sub
inc
pop
int
fcomp
sub
pusha
ss
adc
add
push
pop
push
push
cmpsl
ss
lea
js
sub
mov
sbb
jnp
jae
and
sub
pop
cmp
jne
sbb
xchg
mov
sahf
int3
dec
lock
dec
inc
cs
insl
push
xor
sub
mov
xchg
outsl
pop
nop
mov
insb
gs
and
cmpb
or
sbb
das
data16
sub
or
rol
mov
gs
inc
shr
ss
mov
popf
mov
fidivrl
int
popf
imul
jno
cld
aaa
push
stos
push
lock
rorb
das
add
xchg
rcrb
test
jmp
inc
jmp
test
pop
push
mov
loop
incl
or
mov
std
push
jecxz
push
in
int3
sbb
push
jae
add
jmp
outsl
pop
in
fnstcw
sahf
mov
and
adc
xor
aad
xorl
inc
movsb
ds
lods
cmp
mov
imul
imul
dec
push
pop
push
dec
das
adc
add
xor
lds
cmp
outsl
jge
iret
rcl
xchg
xor
adc
push
sub
push
adc
loopne
das
ljmp
jne
jbe
xor
aaa
add
mov
pop
sbb
ja
add
sbb
push
push
pop
push
push
and
ds
pop
push
in
xchg
popf
aaa
clc
jmp
mov
shlb
fs
xor
rolb
lret
jo
es
push
mov
adc
add
xchg
push
and
addr16
or
xchg
je
in
add
sbb
mov
ds
jle
mov
pop
push
cli
jge
cld
push
mov
insl
xchg
fdivrl
mov
sub
add
sti
or
inc
dec
and
add
imul
adc
pop
jecxz
and
sub
decb
inc
bound
pop
repnz
out
sub
mov
cltd
fisubl
cmp
into
sub
pop
popf
pop
mov
sub
inc
mov
pop
mov
jns
add
add
fcoms
add
orl
inc
nop
sub
negb
mov
adc
mov
and
and
fwait
mov
cmpsb
and
adc
push
call
ja
lds
jnp
dec
jle
mov
jae
sbb
sbb
ds
dec
fildll
sbb
fs
xchg
fildl
and
pop
lods
pop
pop
or
arpl
fcmovbe
jle
mov
jle
loop
sti
arpl
arpl
lods
lret
pop
cmp
jno
push
xchg
mov
mov
fstpt
shll
imul
cli
fiaddl
sbb
cwtl
lahf
fwait
adc
push
or
pop
add
dec
pop
lret
push
mov
jmp
pop
es
jge
jbe
ja
push
addr16
xor
push
mov
arpl
mov
push
aam
mov
xor
mov
xchg
out
mov
mov
or
loopne
movsb
push
sahf
ljmp
mov
pop
xchg
mov
add
aad
sub
pop
test
jo
repz
cmp
lock
xchg
mov
je
in
and
xchg
or
cmpsl
lock
dec
in
mov
lea
xchg
adc
cs
add
test
popl
sub
repnz
aas
out
sub
dec
cltd
inc
sub
cld
fstl
or
add
and
fsubl
pop
add
es
enter
jb
outsb
pop
outsb
jmp
jp
dec
xlat
fisttpll
ljmp
xchg
xchg
cmp
mov
xor
scas
lahf
movsb
fiadds
sbb
stc
push
push
lret
and
cltd
fimuls
sbb
sub
ja
cwtl
test
cmpsb
push
sbb
ds
xor
mov
lret
pop
xchg
and
insl
jb
jecxz
xchg
mov
pop
bswap
mov
pop
cmp
cmp
dec
enter
lcall
push
lret
inc
xchg
mull
insb
adc
inc
loope
cmp
cmp
sahf
in
sub
push
popa
adc
fsubp
cmp
arpl
jno
dec
and
xchg
push
iret
inc
insb
lcall
js
mov
xchg
lock
inc
loope
lea
mov
movl
fstpl
out
adc
in
push
xor
sbb
inc
cwtl
push
jg
inc
ret
rolb
loop
popa
xorl
daa
in
mov
pop
inc
jnp
push
xchg
pop
sub
inc
repnz
hlt
jnp
inc
in
ja
ret
lret
out
xchg
shrl
shll
and
mov
dec
cmc
lds
sub
pop
cwtl
stc
sbb
xchg
mov
decb
ja
and
sar
adc
testb
push
lret
scas
jne
mov
daa
push
inc
mov
aas
mov
rcll
into
hlt
dec
test
int3
add
daa
xor
bound
sub
cmpsb
jl
testb
cmpb
mov
repnz
scas
mov
data16
movsb
sub
push
pop
xlat
addr16
bound
xchg
dec
pop
int3
ss
add
cmp
sbb
push
pop
lret
dec
loope
push
xchg
cmc
lahf
movl
lds
fildl
pop
clc
add
ret
inc
loopne
imul
ljmp
mov
loope
and
inc
mov
gs
movsb
xor
int3
push
mov
sbb
and
xor
cld
jp
lods
mov
pop
andl
add
mov
pushf
mov
popa
sub
arpl
sbbl
popa
mov
inc
adc
and
pop
rclb
and
cli
inc
arpl
dec
loopne
adc
adc
inc
inc
jecxz
insl
dec
or
mov
add
dec
fwait
rclb
push
xchg
cmpsl
insl
adc
pop
das
and
mov
imul
mov
or
rcll
dec
sbb
in
popf
fcoms
incl
xchg
xorb
outsl
push
lret
repz
pop
add
aas
scas
es
xchg
mov
shll
jns
mov
fiaddl
lahf
loopne
jnp
or
lea
into
adc
mov
icebp
cmp
stc
ror
sbb
scas
pop
fmuls
cli
sahf
shr
int3
push
cs
mov
sbb
iret
add
mov
sbb
pop
sbb
out
ds
dec
imul
cmp
jp
sbb
sbb
fs
and
push
inc
mov
jmp
into
scas
push
push
call
mov
lods
addr16
cmpsl
xchg
ss
push
shlb
ds
push
jle
lods
jne
js
hlt
or
repz
stos
aad
testb
arpl
adc
in
xlat
push
out
push
mov
mov
sub
les
imul
dec
stos
fcompl
xor
inc
mov
loopnew
imul
insl
inc
shrb
push
dec
mov
dec
mov
cmc
jae
xchg
push
cmpb
mov
rcrb
mov
bsf
out
lods
mov
cld
sti
xchg
or
jp
inc
rorb
jl
mov
pop
mov
inc
mov
int3
sbb
sbb
test
push
hlt
dec
ja,pt
in
ret
cwtl
in
sbb
in
inc
cli
jno
in
inc
pop
stos
outsl
fcmovnb
pusha
sub
cmp
mov
stc
pop
sbb
adc
test
push
sub
aas
imul
or
std
xchg
data16
js
addr16
lahf
inc
xchg
adc
jae
idivl
pop
adc
or
cli
sbb
pop
push
mov
movsl
inc
and
insb
mov
lret
and
test
popf
rolb
push
xchg
sarl
and
push
and
les
sub
sub
stos
mov
cmc
jg
mov
fdiv
lret
mov
popf
add
sub
out
addr16
or
lods
mov
rclb
ja
jge
fmuls
pop
sarb
pop
mov
xor
add
in
pop
xchg
jae
data16
pop
dec
mov
mov
mov
roll
lods
ja
push
popf
push
test
ja
dec
rcr
imul
inc
and
stos
into
mov
ja
js
lods
inc
ss
jle
orl
jecxz
push
or
nop
aas
xlat
je
mov
lods
push
repnz
pop
adc
mov
pop
ja
dec
xchg
and
pop
lds
push
mov
decl
push
loope
movsl
mov
push
xchg
adc
lret
sbb
mov
jl
popa
jg
xchg
cwtl
pop
pop
mov
cmp
fcmovnbe
or
mov
jne
jnp
jbe
imul
cmp
inc
in
mov
push
mov
loopne
addr16
pop
addr16
xchg
mov
iret
sahf
movsl
dec
dec
jnp
notl
jle
mov
ret
fistps
jp
mov
xor
push
sarl
data16
add
cs
and
and
jge
lock
les
arpl
test
int3
popf
roll
enter
push
push
mov
xor
outsl
push
ja
jne
fildl
cs
cmp
or
ret
icebp
jg
orl
sbb
int
das
fistpll
pop
jle
outsb
xchg
push
lods
mov
mov
xor
xor
xchg
fdivs
test
inc
mull
xchg
jge
mov
iret
dec
cs
sar
mov
inc
ret
popa
frstor
mov
sub
dec
cmp
in
ss
cmp
mov
shlb
xchg
in
fcomip
mov
les
lock
and
mov
pop
xor
subb
add
and
das
cld
jmp
xchg
into
lahf
mov
movsl
mov
mov
push
adc
push
xchg
push
mov
pop
dec
push
enter
mov
mov
sbb
xchg
mov
scas
shrl
xchg
jge
jecxz
adc
int
push
pop
gs
push
xorl
loop
xchg
push
insl
pop
je
sti
daa
and
mov
rcr
add
dec
mov
ja
dec
dec
pusha
ss
pop
pushf
mov
call
pop
movsb
ljmp
and
js
jle
sbb
push
push
loopne
jecxz
mov
sahf
fsub
xlat
mov
fstps
ds
gs
and
insb
push
pop
rcrb
sbb
mov
inc
shl
or
mull
loopne
stos
mov
mov
xchg
xchg
dec
test
test
or
and
in
fnstenv
test
pop
js
bound
sub
cmpsb
and
mov
ret
pxor
jecxz
add
insl
addb
cmpsb
lret
push
shrb
add
lret
sbb
pushf
sbb
push
adc
leave
cltd
mov
mov
mov
movsb
and
stc
into
dec
in
sub
lret
lea
mov
xor
add
pop
or
adc
je
mov
mov
push
in
jo
adc
divb
jnp
cmp
or
aas
ret
lock
push
push
in
mov
repz
jmp
divl
xchg
clc
mov
jg
insl
sarl
mov
sahf
in
and
fcoml
in
sub
hlt
fldenv
pmullw
jnp
lahf
aam
xchg
sub
in
fs
ret
xlat
lock
mov
loopne
iret
insb
dec
fcomps
test
cmp
imul
stos
flds
out
mov
xchg
lods
add
ret
test
faddl
or
cli
cmpsb
and
js
dec
xchg
mov
hlt
jbe,pn
jecxz
js
push
add
add
es
dec
xchg
dec
jecxz
ret
push
sub
cmp
incl
js
or
in
fucomp
dec
scas
add
subb
xchg
cmp
xrelease
loop
inc
aaa
adc
ds
add
es
pop
lock
int3
mov
int3
jmp
fmuls
mov
scas
push
add
dec
pop
push
xchg
mov
mov
fsubrl
pop
mov
mov
inc
cmp
lods
ja
adcb
mov
scas
mov
jae
push
aaa
inc
insb
lahf
shll
std
pusha
jbe
adc
mov
cmp
daa
pop
or
loopne
in
xor
in
insl
sbb
jae
pop
or
or
nop
sbbb
leave
mov
pusha
aaa
shr
cmc
cmpsb
sub
cmp
scas
pusha
or
push
xor
inc
adcb
pop
jnp
xchg
addl
sbb
gs
mov
in
ret
sbb
pusha
arpl
shll
lock
movsb
pop
insb
mov
xor
add
imul
xor
scas
or
pop
out
fimull
adc
adc
aas
dec
loop
addb
jecxz
mov
jo
out
dec
push
mov
outsl
jle
push
pop
xor
jo
mov
inc
push
dec
aas
push
jge
idivb
and
mov
mov
aas
aas
std
mov
daa
in
stos
pop
leave
dec
and
scas
sbb
xor
xor
shll
xchg
neg
push
pop
shrb
or
fnstcw
fists
fdivs
sbb
push
dec
in
pop
pop
cld
pushf
outsb
and
arpl
mov
leave
push
mov
adc
mov
push
loopne
fidivrs
mov
cmpb
int3
cmp
repz
sbb
fwait
mov
test
sbb
add
and
cs
xchg
insl
stc
push
mov
push
add
dec
sub
adc
ss
rclb
pusha
sbb
pop
in
adc
push
dec
push
push
js
stos
insl
sbbl
mov
push
xlat
js
mov
mov
mov
ffreep
jmp
outsb
outsl
mov
mov
and
in
ret
aas
jmp
imul
mov
add
inc
jb
or
cmp
fidivrs
adc
cmpsl
adc
es
mov
shlb
xchg
mov
je
cmp
dec
loopne
jle
inc
rcl
insb
pop
sub
mov
dec
mov
cwtl
pusha
sub
decl
sbb
iret
mov
divl
pop
pop
lea
mov
lret
dec
aam
mov
fs
adc
cltd
inc
dec
mov
lods
cmp
xchg
decl
lods
fwait
inc
cmp
lahf
popa
outsb
xchg
movsl
sbb
push
cmpsl
adc
repz
or
xchg
out
lds
out
inc
test
pop
mov
jne
or
or
mov
imul
xchg
jg
js
mov
pop
inc
insl
xor
out
clc
das
dec
fcoms
push
outsl
fldcw
pop
popf
xchg
cs
dec
fs
loopne
mov
jge
arpl
adc
push
push
pop
sub
xchg
ljmp
in
rcr
aad
pop
dec
cltd
inc
sub
bound
out
mov
jp
mov
xor
inc
xchg
addl
sbb
xchg
push
iret
pop
cmc
mov
inc
jl
stc
sbb
int3
push
sar
xor
iret
stc
pop
leave
pusha
inc
mov
jge
jl
mov
adc
push
sub
xor
imul
adc
adc
pop
das
shlb
xchg
mov
lahf
in
test
test
dec
add
mov
scas
stos
clc
xlat
xor
addr16
aaa
xlat
push
aas
loope
hlt
mov
in
sub
icebp
fwait
inc
xor
fcomps
pop
addr16
loopne
jae
dec
and
push
cmp
mov
hlt
ret
lea
stos
inc
xchg
lods
dec
inc
jns
in
inc
loop
push
xor
jge
pushf
imull
lods
push
cs
jbe
or
pop
insb
dec
dec
into
jno
testb
pop
sarb
push
sarb
jmp
and
pop
mov
adc
rcrl
mov
lcall
rolb
lret
lahf
loop
cmp
cs
andb
ret
addr16
add
xlat
sub
push
xchg
sbb
inc
repnz
jno
mov
adc
mov
and
or
sbb
mov
cli
xlat
and
fmuls
or
sub
cmp
repz
mov
out
pop
sahf
std
cmp
mov
xor
fidivrs
fstpl
adc
movsb
xchg
push
jbe
xor
jne
xor
pop
mov
and
je
add
arpl
xchg
in
jnp
stos
inc
xchg
and
pop
insb
sti
pop
adc
push
pop
fnstenv
sub
inc
sub
outsb
push
jg
sbb
arpl
pusha
into
xchg
ss
shlb
xchg
fldenv
inc
clc
mov
or
lods
push
sub
insb
aas
out
stos
je
sub
or
jle
jp
fimuls
pop
jmp
adc
imul
jae
cs
push
pop
mov
xabort
pop
dec
and
dec
mov
sbb
add
cmc
dec
pop
test
lock
dec
sbb
sarb
push
das
sub
pop
push
mov
mov
pushf
pop
cli
xor
in
inc
lea
fsubrp
dec
mov
sub
push
int
imul
add
in
movsl
xchg
outsb
pop
sbb
movsb
jbe
mov
jle
sbb
clc
clc
jmp
adc
mov
aas
lret
jge
push
xchg
arpl
push
push
jne
aad
dec
negl
and
dec
xor
js
es
imul
jbe
fisubl
push
add
fmuls
jle
xor
xor
mov
jmp
mov
push
jbe
mov
or
sub
dec
pop
sbb
xlat
loope
xchg
sahf
sub
in
es
or
cmp
sti
enter
mov
rorb
dec
xor
mov
xchg
lcall
call
es
cmpsl
rcll
fldenv
fnstenv
repnz
fstpt
fwait
push
or
push
out
call
jae
and
pop
adc
ret
pop
mov
sub
jae
push
fldt
fistpll
cmp
pop
sbb
outsl
dec
and
fldt
imul
xlat
lret
or
pop
adc
push
xchg
shlb
xchg
jle
lcall
xchg
fcomps
xor
or
filds
into
xchg
sti
sbb
lock
pop
pop
aaa
add
mov
and
inc
push
mov
push
insb
outsl
subl
inc
xor
jg
push
mov
mov
addl
test
jb
xchg
popa
sub
inc
and
fwait
mov
sbb
ljmp
xchg
mov
cmpsl
incl
ret
scas
add
sbb
xchg
xchg
mov
into
mov
inc
mov
shll
xchg
push
icebp
cwtl
cmp
xchg
or
cmp
mov
and
js
test
mov
cltd
incb
in
mov
add
jmp
dec
shlb
sbb
push
pusha
iret
cwtl
insl
shl
sub
ret
repnz
ret
insb
add
lds
call
xchg
inc
pop
ljmp
rolb
mov
mov
dec
mov
jbe
inc
pushf
lcall
add
imul
lret
xor
mov
jne
xor
daa
adc
outsb
jmp
or
sbb
outsl
sub
pop
add
xchg
rolb
fxch
fwait
mov
aas
push
push
sub
enter
cli
popa
jbe
stos
aam
cs
sub
mov
out
and
test
or
ret
mov
int3
dec
push
stos
pop
jl
shrb
inc
mov
lods
aam
daa
xor
mov
cmpl
and
ret
cmp
cmpsb
aaa
xor
sbb
mov
sub
mov
jae
inc
add
shl
sub
dec
cmp
lahf
scas
push
stos
cwtl
ror
imul
jmp
rcrb
xchg
lret
mov
cmp
dec
or
lock
or
sti
mov
xor
shll
push
adc
add
in
or
add
push
testl
fildl
mov
sub
ljmp
pop
pop
or
cwtl
test
stos
push
clc
dec
dec
mov
mov
mov
push
jp
pop
xor
negl
mov
jmp
jo
mov
sub
cmpsl
scas
mov
js
pop
jle
test
cmpsb
iret
nop
loopne
loope
adc
xor
popf
pop
or
inc
into
mov
outsl
psubusb
repz
sub
mov
cwtl
mov
jae
jnp
daa
mov
cmp
jg
aaa
mov
loope
cmpsl
clc
mov
or
outsl
dec
out
xlat
jb
jb
shrl
mov
pop
popa
xchg
mov
fidivs
inc
cs
cmpsb
mov
call
pop
repnz
mov
outsb
inc
adc
jmp
in
push
pop
add
inc
fdecstp
and
jg
mov
push
mov
insl
cs
fldl
sbb
cmp
rcll
daa
pop
pop
ds
hlt
jae
xchg
dec
sti
outsb
and
push
push
outsl
ret
popf
mov
inc
iret
popf
dec
adc
inc
fidivrl
out
jnp
jp
cmp
mov
or
outsb
sar
add
mov
out
mov
xchg
lcall
push
mov
daa
mov
jmp
sbb
xor
dec
mov
leave
pusha
test
rorl
or
addr16
inc
pushl
test
jbe
xchg
jle
es
and
sub
aas
out
adc
div
mov
mov
xchg
push
xchg
pop
dec
data16
jmp
sub
hlt
add
pop
arpl
testl
and
mov
push
dec
mov
shrb
push
push
mov
out
call
imul
mov
and
xor
sub
sub
int
mov
mov
into
stos
std
jo
sahf
aam
maxps
insl
sub
popf
adcl
pop
hlt
mov
adc
mov
clc
or
or
decl
scas
sub
jae
imul
adc
inc
xor
cmp
mov
cld
out
sbb
pop
sarb
xchg
dec
cmp
ret
mov
rdpmc
cli
loope
or
dec
jnp
inc
fcomp
daa
xchg
fcmovu
es
mov
in
or
mov
or
mov
das
push
cmp
mov
jmp
cmp
cmpsb
test
pop
mov
push
aad
in
stos
xchg
jne
test
fcompl
pop
cltd
push
push
jmp
into
les
movsl
cwtl
jae
pop
mov
mov
sub
mov
pop
ljmp
imul
in
test
mov
icebp
cmp
push
icebp
xchg
ret
loope
lods
data16
lock
dec
testb
xor
add
mov
adc
rclb
mov
fldt
sti
mov
int
and
fistpll
push
pusha
sahf
mov
repz
push
rolb
ja
mov
shlb
adc
ja
adc
push
insb
rcrl
mov
fstl
and
jnp
lcall
cli
daa
adc
add
insb
sahf
mov
std
dec
dec
xchg
cld
or
clc
cmpl
hlt
stos
jp
lcall
jge
jb
push
iret
rorb
pop
mov
iret
rcrb
push
sbb
shr
popf
inc
imul
pop
test
xchg
addr16
out
lea
dec
clc
roll
pop
call
pusha
pop
sbb
movsl
movsb
xor
fimuls
or
jbe
idivb
stc
leave
loop
stos
loop
mov
sub
add
or
out
push
pop
dec
jbe
ficoml
fidivrl
int3
fisubs
mov
scas
xchg
cmp
dec
mov
out
test
jge
sahf
ss
xor
add
mov
jae
sbbb
xor
test
std
push
inc
pop
mov
ffree
add
jmp
mov
subl
or
sahf
xor
cmp
mov
xlat
pop
inc
xchg
jl
sbb
xchg
and
and
push
imul
fnsave
xchg
in
inc
mov
fsub
test
xchg
and
icebp
fwait
bound
insb
stos
jo
jle
int3
sbb
fdiv
shll
xchg
mov
cmp
dec
xchg
sub
popa
mov
rcrl
cmc
add
sahf
fsubrs
fistps
inc
sub
stc
dec
lret
aas
mov
pop
xchg
xor
xchg
sbb
fistpll
pop
and
sti
ror
dec
loop
mov
test
aam
in
das
cwtl
jnp
lret
mov
mov
adc
je
xor
jmp
push
pop
mov
rolb
outsb
mov
jl
xchg
sahf
enter
xchg
in
mov
repz
mov
imul
sbb
fiadds
dec
lret
rorb
mov
mov
jnp
mov
and
lea
add
fcoml
or
mov
bound
and
dec
xchg
cmp
xor
mov
das
dec
insl
add
push
and
les
stos
cmpsl
sub
xor
xor
loopne
cli
fldl
sbb
cmpl
xor
xor
scas
mov
push
pop
arpl
and
clc
inc
mov
xchg
push
loopne
cmp
or
cli
fdivrl
push
mov
xlat
mov
jg
mov
movsb
lods
fiadds
xor
imul
cmp
popf
movnti
mov
test
lods
jmp
sti
xorb
xorl
test
lret
sub
sub
bnd
sbb
xor
das
sub
mov
mov
push
mov
sbb
and
inc
insb
add
ljmp
cwtl
add
sub
push
popa
mov
sbb
jnp
in
lret
inc
jge
xchg
xor
cmp
loop
mov
xlat
movsl
es
jns
inc
les
push
imul
aam
movsb
leave
test
sbb
movsb
stc
test
scas
sahf
cmp
jl
lds
and
roll
mov
ja
sub
jne
ljmp
cmp
pop
rol
ret
mov
mov
mov
cltd
xchg
int
popf
jne
push
mov
inc
sub
loopne
pop
out
sub
inc
mov
xor
sbb
sar
mov
jbe
stc
dec
dec
in
shl
lahf
dec
jmp
jmp
jmp
aad
push
add
outsb
pop
dec
push
add
inc
andb
mov
xor
aam
lret
into
imul
pop
xchg
sahf
sahf
adc
mov
cmc
dec
fcmovnu
ljmp
pcmpgtw
es
cs
push
add
into
sbb
mov
push
pop
psubusb
xchg
fldenv
imul
in
pop
mov
and
jno
xchg
hlt
sbb
pushf
mov
in
test
divl
out
jno
andl
mov
jb
int3
inc
inc
mov
nop
aaa
sbb
pusha
mov
sti
cmp
mov
mov
mov
push
sub
in
xchg
pop
addr16
mov
mov
jle
dec
js
std
rcl
call
hlt
lods
push
inc
inc
fisubs
adc
dec
push
repz
pushl
stc
daa
sub
pop
arpl
jae
stc
adc
adc
dec
orl
pop
pop
dec
loope
fildl
aam
data16
push
pop
and
sub
imul
test
dec
jecxz
fistpll
jge
nop
fsubr
stos
je
push
lahf
mov
mov
sbb
mov
sarb
nop
rol
mov
lcall
lds
fidivrs
adc
inc
fdivrl
mov
cwtl
sbb
adc
fisttps
mov
jo
sub
push
mov
xor
sub
repz
in
push
mov
and
jo
out
mov
xor
jae
xor
mov
and
or
incb
stc
insl
into
pop
push
pusha
mov
push
dec
jg
repz
aam
inc
inc
add
xchg
lcall
pop
aad
clc
neg
jne
call
xor
outsl
into
lds
test
sti
popf
push
cmp
mov
inc
scas
pop
bound
stos
in
movsl
push
jbe
pushf
jl
mov
mov
ret
fprem
xor
add
mov
cmp
loop
adc
nop
adc
cmp
cmp
mov
popa
jbe
test
shl
stc
andb
imul
push
sub
inc
push
insb
or
adc
loope
fs
cmp
in
adc
sub
sbb
in
push
aam
loop
mov
ja
into
mov
push
stos
pop
add
das
inc
lock
daa
rcrl
lods
aam
ljmp
inc
mov
jl
xor
pop
jns
ss
pushf
nop
xorl
scas
dec
mov
push
aam
test
insb
push
fcmovne
adc
pop
pop
xor
jo
lock
mull
sub
inc
mov
lahf
lret
add
inc
jns
mov
iret
aad
dec
cltd
adc
xchg
inc
cmp
or
add
sbb
lahf
and
mov
icebp
dec
jg
mov
sbb
mov
loop
int
push
cmpsl
scas
flds
or
lret
outsb
cmc
out
sbbl
or
sub
mov
cmpsl
xchg
jnp
adc
inc
cmp
scas
nop
mov
xlat
xchg
mov
stos
and
xchg
adc
rcll
scas
iret
mov
xchg
sarb
adc
out
addb
xchg
cwtl
test
stc
or
ss
addr16
and
cmpsl
das
leave
mov
cmp
fs
stc
and
cmp
les
and
and
orl
fsubrl
testl
cmp
inc
aaa
cmp
pop
imul
xchg
push
popf
mov
mov
and
movsb
imul
dec
fs
mov
pop
insl
and
fs
or
mov
repnz
out
cmp
sub
mov
imul
or
pop
inc
jle
pop
scas
outsb
ret
sahf
jecxz
and
dec
adc
test
out
aas
pop
jmp
imul
popf
jns
ret
imul
mov
outsl
test
push
stos
fs
jge
ret
call
int
or
mov
mov
or
movsl
jbe
shrl
xor
mov
loopne
push
in
pushf
jne
adc
push
in
pushf
les
xor
push
shlb
or
cmp
movsb
dec
call
xchg
mov
iret
sub
movsb
nop
sbb
mov
mov
outsb
add
or
testl
inc
mov
aam
test
or
cltd
mov
daa
pop
stos
stos
mov
adc
js
mov
pop
xchg
ja
imul
imul
int3
xor
clc
lea
xor
mov
aas
in
test
adc
lds
pushf
xorb
ret
xor
mov
ja
adc
cmp
jns
mov
push
add
into
das
in
pop
mov
movsb
loope
mov
aaa
lea
mov
xchg
mov
subl
mov
dec
imul
xor
jle
cmp
cli
add
push
icebp
ja
js
pop
pop
fildl
jbe
lcall
dec
stc
repnz
push
test
shlb
cmpxchg
hlt
ss
mov
inc
imul
es
cmp
test
mov
inc
cli
loop
shl
test
fdivrs
inc
sub
out
std
mov
pop
jae
lods
cmpsl
dec
aas
inc
je
outsl
jle
inc
xor
sub
pop
fisttpll
das
je
mov
inc
into
data16
pop
inc
das
mov
sbbl
pop
push
cmp
xor
jecxz
movsb
jne
pop
mov
pusha
in
or
sbb
outsb
std
divl
addr16
aam
cmp
inc
fiaddl
jb
sbb
xchg
jns
in
jns
imul
scas
mov
jg
ret
xlat
xorb
loopne
pop
cmc
outsl
int
add
adc
rclb
mov
faddl
pushf
jae
push
in
bound
cmpsb
mov
std
jecxz
or
sub
lock
add
dec
data16
fdivrp
jnp
mov
adc
lods
aad
mov
add
dec
shll
out
cmp
in
and
sub
notl
ficoms
and
jo
xlat
add
jae
mov
adcl
sbb
fisubrs
xor
or
xor
xchg
add
sub
dec
stc
pusha
mov
xchg
dec
scas
add
push
xchg
int
or
or
bnd
mov
sbb
xor
mov
jnp
xor
mov
cs
dec
mov
mov
test
jo
pop
adc
xchg
arpl
out
push
iret
and
sub
mov
jmp
cld
aam
repz
pop
test
leave
in
push
pop
and
shl
inc
add
lea
inc
call
push
pop
jp
pop
cmpsb
mov
mov
xchg
int3
aam
mov
rclb
js
adc
push
scas
out
cmpb
stc
test
jle
in
xchg
jbe
fmuls
pop
or
mov
popf
add
or
rol
cmovbe
in
sub
jne
and
imul
fs
sahf
js
push
aad
push
ret
xor
loopne
sbb
inc
ljmp
dec
sub
cs
and
dec
add
pop
mov
loop
lds
stc
scas
cmpsl
cmp
dec
mov
stos
add
jbe
cli
xor
fsubp
insl
xchg
add
cs
xlat
cmpsb
hlt
mov
pop
fs
lret
xchg
add
test
push
loopne
push
cmpsb
cmpsl
mov
jns
rorb
cmp
push
cmp
jo
push
and
mov
adc
xor
test
jns
loopne
movb
cmp
mov
lret
cmp
lcall
scas
adc
mov
loope
loopne
leave
add
jg
hlt
push
fs
cmp
sub
das
repnz
inc
daa
cmp
jmp
js
lcall
or
testl
jnp
dec
out
lea
int3
outsb
mov
subb
cmc
lock
pop
nop
cmp
jb
in
insb
insl
sub
jp
push
neg
dec
test
xchg
fildll
in
test
jns
mov
sahf
adc
loop
cli
cmpsl
rorl
out
pusha
push
lods
or
popa
adc
add
dec
jo
pop
in
and
pop
sbb
loopne
xor
enter
iret
sbb
pop
and
xor
pop
cmp
xlat
stos
inc
rcr
roll
lea
sub
cmc
in
mov
xchg
jmp
pop
insb
js
inc
push
out
push
sub
inc
sub
in
dec
adc
xor
mov
cltd
mov
pop
dec
adc
xchg
push
test
sti
sbb
mov
mov
imul
in
roll
and
clc
xor
push
int
mov
inc
ja
mov
ljmp
mov
push
sub
jg
pop
std
mov
cmpsl
mov
xor
jmp
aad
xchg
jbe
pop
lret
lods
stos
into
xorl
inc
out
or
adcb
and
and
lds
cld
in
xor
mov
testl
pop
xchg
xchg
push
testb
xchg
jo
inc
lods
and
adc
invd
imul
repnz
cmp
jecxz
orl
sbb
ffreep
ja
mov
push
cmpsb
inc
sbb
imul
mov
mov
push
mov
mov
es
and
cmp
notl
push
andb
cmp
push
scas
inc
aad
mov
aad
mov
out
cmp
rol
addr16
pop
cmp
js
movsl
jp
cli
fstps
sti
in
jg
mov
adc
push
into
lods
and
sub
jg
pusha
jae
mov
add
cmp
sub
arpl
and
inc
jge
loopne
or
adc
add
mov
push
lcall
push
lods
jno
sbbl
inc
lea
dec
xchg
add
fwait
push
mov
leave
fistl
jb
mov
or
cmp
mov
adc
adc
inc
mov
pop
or
xchg
mov
pop
mov
xlat
jg
out
sub
stos
out
xchg
mov
inc
cli
testl
int
repnz
mov
cmpsl
stos
aas
test
jecxz
cmp
daa
jle
mov
adc
cwtl
dec
push
rolb
xor
or
or
pop
fs
jmp
push
in
and
jae
fstpl
loopne
rcll
and
sub
xor
fnsave
sbb
scas
or
jbe
ds
mov
xchg
ficoms
hlt
cmp
repnz
scas
cld
push
dec
mov
repnz
mov
dec
lcall
sbb
pop
or
cmpsb
or
rolb
xchg
je
out
ret
jle
push
in
mov
sarl
scas
adc
aad
mov
out
mov
cwtl
mov
mov
dec
cmc
mov
add
dec
cmp
out
sub
in
or
leave
pop
adc
jno
jno
subl
mov
les
mov
sahf
data16
push
mov
repnz
movsb
fisubrl
imul
movsl
fstps
fwait
add
mov
divl
jg
or
std
or
mov
dec
xor
mov
shl
xor
xchg
out
lahf
mov
mov
inc
jecxz
mov
adc
xchg
out
push
cli
jle
insb
xchg
push
testl
mov
fcmovnu
inc
jno
jge
in
push
pop
cld
push
push
sahf
add
jle
and
lahf
das
lds
xchg
sub
adc
jecxz
adc
rol
inc
cmp
jne
sbb
xor
bound
inc
into
jae
popa
adc
mov
or
stos
aaa
mov
es
aas
in
sbb
cwtl
aas
aad
cli
mov
mov
sub
add
loope
int3
or
pop
pop
xchg
cmp
jle
sti
jecxz
clc
ja
or
iret
inc
xchg
xchg
idivb
cmp
inc
pop
repnz
mov
or
popa
stc
hlt
mov
fsubrl
div
and
xchg
cmp
pop
xchg
jns
mov
push
ret
adc
mov
insl
add
ret
das
aas
xchg
inc
cli
int3
movsb
out
sub
mov
cmp
lds
push
jne
stc
mov
push
push
inc
dec
add
xchg
clc
addb
lods
or
in
cmc
xor
xchg
or
push
iret
jmp
jmp
cmp
rcll
mov
xchg
gs
adc
orb
les
xchg
andl
frstor
mov
jle
rcl
pop
es
mov
mov
je
lret
fstl
xor
mov
push
jmp
cmc
dec
push
xchg
mov
into
jge
pushf
add
cmpsb
cli
aad
pop
inc
inc
gs
dec
and
and
out
lods
stos
sbb
lcall
fbld
imul
je
mov
and
lea
mov
sbb
dec
push
mov
ret
in
daa
mov
sub
push
stos
rolb
inc
dec
sbb
aas
push
lret
jecxz
sub
push
fs
xchg
mov
mov
cmc
push
mov
cmpsb
add
jns
adc
mul
or
clc
pop
add
jb
gs
jg
push
scas
in
mov
cld
pusha
mov
mov
pop
or
add
dec
jnp
mov
sub
inc
lcall
lock
call
out
imul
and
aam
jmp
cltd
std
push
adc
jnp
ret
pop
repnz
xchg
sahf
loope
loop
ficomps
lock
jnp
adc
icebp
dec
test
iret
xchg
jns
jge
dec
mov
kmovb
sti
sbb
das
inc
sarl
sahf
cli
adcl
arpl
adc
sbb
mov
aaa
adc
or
imul
sti
xchg
mov
popa
push
add
popf
and
inc
repz
sti
adc
imul
or
push
or
subb
pop
shll
mov
je
shll
adc
cs
xchg
sub
inc
cmpsb
or
int
paddb
cmp
int3
shl
mov
sti
imul
lret
mov
mov
mov
and
iret
andb
cmc
stos
and
std
pop
pop
and
mov
int
scas
cmpsb
pushf
jb
jmp
inc
push
or
and
mov
enter
stos
and
push
dec
xchg
and
mov
movsl
cmc
insb
or
xor
mov
jecxz
dec
sub
jmp
insb
mov
ss
xchg
adc
dec
push
mov
inc
xor
mov
sbb
or
xchg
icebp
or
push
add
imul
jns
repz
clc
or
jb
test
loope
insb
flds
ret
pop
lock
das
push
jmp
ret
jns
xchg
add
xchg
xor
decb
fistps
add
sub
mov
test
xchg
sbb
mov
pushf
cmp
sbb
xor
rclb
adc
popa
inc
aas
imul
cmp
jb
jl
xchg
sarl
xchg
cmp
sub
mov
cli
adc
mov
in
in
pop
popf
inc
dec
dec
lea
or
cs
cli
add
std
xlat
lahf
lret
add
cli
adc
xchg
imul
cwtl
lods
sbb
mov
cs
add
jae
imul
pop
jns
pusha
imul
pop
lea
push
xor
dec
mov
popf
repz
insl
aas
int3
sbb
iret
push
imul
lds
and
mov
out
mov
loopne
call
pop
cmpsl
xchg
in
cli
jecxz
dec
test
leave
pop
call
mov
les
pop
mov
decb
lret
in
pop
imul
in
outsl
into
test
sub
fsts
mov
imul
mul
or
out
stc
mov
sub
rcll
movsl
in
sbb
or
or
cli
mov
push
push
shll
dec
mov
jo
cwtl
mov
mov
insb
add
shl
fldl
mov
mov
dec
inc
iret
jl
out
jb
jb
mov
cltd
xor
adc
out
xor
and
pop
bound
lods
cmpsl
sub
insl
lods
in
addb
or
cmp
jl
ss
into
push
lods
sub
cwtl
push
icebp
mov
pop
add
jp
push
pop
cmpsb
and
jp
pop
push
inc
jne
test
sbb
jge
inc
aas
jl
cwtl
adc
in
gs
mov
bndstx
mov
or
imul
ss
pushf
jb
in
xchg
jg
aas
mov
pop
sub
dec
shlb
push
arpl
push
call
push
jg
push
loop
outsl
xchg
mov
add
repz
lret
rcr
popf
inc
out
mov
jl
add
frstor
mov
sbb
mov
fisubrl
push
int3
push
or
mov
in
fidivrl
andl
dec
or
ds
aas
stos
fs
repnz
push
mov
les
leave
mov
xor
bound
je
sbb
enter
mov
jge
or
push
in
mov
popf
inc
repnz
mov
test
frstor
mov
lods
das
lcall
xor
or
aas
dec
pop
outsb
mov
insb
scas
cli
or
dec
mov
stos
sub
ja
mov
jo
jg
xchg
es
add
bswap
lock
imul
outsb
pop
jl
mov
mov
xchg
or
stos
inc
into
enter
cmc
add
lock
push
jmp
idivb
pop
mov
insl
icebp
mov
push
sbb
sub
mov
pop
jge
int
std
imull
leave
xor
adc
adc
lret
icebp
icebp
cwtl
pusha
push
negb
mov
jne
popf
sub
pusha
push
inc
push
sahf
mov
pop
loop
pop
in
loopne
arpl
add
mov
bound
jno
sysenter
push
outsb
add
test
stos
xchg
xchg
mov
jmp
es
jg
inc
push
mov
outsl
pop
lea
pop
dec
dec
hlt
leave
subb
inc
flds
aas
add
xor
cs
push
popf
mov
push
xchg
pop
rolb
or
inc
pop
js
mov
lahf
fidivl
jle
lret
dec
jno
loop
mov
cmp
sub
scas
mov
push
aam
inc
dec
es
sub
shlb
push
xchg
cmp
push
stos
mov
gs
stos
or
mov
cmp
jno
push
jle
pop
ror
repnz
adc
jbe
push
jmp
pop
inc
dec
xchg
stos
test
pushw
or
pop
jno
in
sbb
dec
and
shrb
stos
mov
jge
shrl
mov
push
cmc
sbb
pop
rcr
cwtl
pop
mov
pop
jmp
imul
jbe
inc
cs
subl
sbb
into
ds
loopne
push
test
push
orb
cs
stos
lret
bound
mov
dec
imul
dec
lock
pop
ret
out
sub
mov
adc
popf
cs
xlat
mov
xchg
outsb
xor
sbb
arpl
sti
xchg
fldcw
in
leave
enter
daa
push
div
pop
mov
add
jge
push
jo
sub
sbb
sbb
in
push
push
mov
mov
sub
xchg
je
or
pop
mov
test
and
cmp
test
push
cmpsl
and
mov
xchg
cmpsb
xchg
xchg
repz
push
cmpsb
mov
and
mov
pop
xor
ret
out
mov
xchg
in
std
and
and
mov
mov
sub
jno
inc
loope
add
ljmp
dec
popa
jecxz
call
lcall
sub
cmp
shll
jmp
dec
test
add
mov
cmp
in
lret
cmp
dec
in
add
push
lea
jo
mov
loopne
testl
push
lea
mov
jns
inc
aad
scas
lds
mov
loop
pop
inc
stos
mov
push
xor
pushf
pop
cmc
push
dec
push
pop
jne
scas
loopne
ja
or
loopne
inc
ret
test
cld
fxch
test
cli
fs
xchg
mov
pop
fdivp
jnp
mov
cs
les
jnp
js
loop
jae
pop
jmp
lea
mov
xor
push
mov
insb
jb
dec
cmpsl
jb
inc
adc
cwtl
fidivl
xor
sbb
and
cmpl
mov
ljmp
sub
or
jge
aaa
in
jno
pop
mov
push
push
sub
mov
outsb
lds
sbb
stc
pop
mov
out
sub
into
fwait
ds
addr16
jl
lea
lret
enter
mov
gs
in
je
bnd
sub
push
dec
ljmp
jne
pushf
pop
push
inc
add
inc
mov
xor
xor
push
dec
add
jge
fwait
pop
popa
lds
xchg
pop
cmpsb
mov
sarb
or
call
xchg
add
push
dec
inc
mulps
test
cs
shr
dec
xchg
xchg
adc
cli
scas
int
fwait
lds
neg
sbb
xor
ss
mov
test
adc
mov
mov
adc
push
rcrb
push
hlt
jg
lret
dec
stc
shlb
dec
arpl
mov
lret
push
movsl
js
push
cmp
gs
bound
xchg
loop
aaa
lcall
xchg
push
popa
ret
call
adc
in
out
hlt
rol
js
clc
scas
jns
and
xor
or
outsb
fwait
pop
jge
xchg
inc
jae
mov
lret
insl
xor
outsl
and
push
push
cmp
mov
mov
in
lahf
dec
adc
arpl
enter
adc
js
jge
sti
mov
fstpl
aam
mov
sbb
pop
jg
mov
xor
lret
add
call
pop
push
xchg
shlb
jl
pop
add
jo
lret
jo
mulb
int
sbb
jl
sub
and
push
popf
push
repz
add
shl
in
rep
gs
mov
pop
push
push
movsl
into
lret
ficomps
cmp
fsubrl
mov
adc
sbb
std
mov
dec
pop
lret
lods
add
leave
outsl
mov
lahf
nop
pop
gs
or
loop
mov
fstl
daa
inc
inc
cmp
movsb
lret
or
mov
int3
std
into
push
adc
fistpll
push
loop
popf
push
rol
enter
inc
fiadds
lods
pop
ds
sub
xchg
test
add
inc
mov
mov
f2xm1
in
lods
push
stos
leave
push
aam
inc
js
test
pusha
aaa
xor
jge
aaa
outsl
add
test
add
icebp
xchg
dec
ss
and
jnp
test
jns
repz
int3
xor
je
add
and
cmp
incl
pop
cltd
rcll
xchg
outsb
and
imul
pop
add
push
bsf
fisubrs
hlt
push
mov
xchg
or
fnstsw
xchg
ficoms
sti
stos
jne
xor
test
jne
test
ds
and
xchg
ror
lods
xor
test
not
das
mov
xchg
mov
idivl
and
cmp
popf
mov
and
ja
mov
xchg
xchg
pop
fistpll
xchg
out
add
movsl
mov
mov
push
arpl
les
sbb
xor
pop
pop
pop
test
add
cmp
fdivrs
jge
cmp
lea
fidivrl
mov
nop
mov
push
fwait
jmp
stc
fidivl
xchg
lretw
jns
dec
lock
pop
cmp
inc
subl
in
xor
sti
pusha
mov
test
and
mov
dec
rorb
mov
scas
pusha
aas
xchg
pop
jno
test
pop
jmp
xchg
mov
mov
dec
mov
fxch
and
pop
testl
hlt
xorb
je
out
mov
adc
sbb
test
mov
or
cmp
sub
ret
push
jecxz
cmp
sti
push
sbb
add
adc
inc
pop
lahf
push
aad
pop
ljmp
repnz
mov
insl
fisubrs
lds
sub
gs
inc
stos
in
fs
test
popa
mulb
int
and
xor
lods
mov
xchg
popl
into
adc
pop
push
cli
gs
mov
fsub
imul
inc
cs
jecxz
push
dec
insb
mov
insb
faddl
js
mov
jp
test
push
ficoms
sub
jg
movhps
data16
fimull
dec
into
inc
add
scas
jne
sahf
sahf
stc
add
mov
loope
cmp
xor
jns
mov
dec
add
inc
adc
jnp
cmp
shlb
ljmp
aam
mov
sbb
push
into
jmp
dec
adc
pop
inc
sub
aad
pop
cmp
packuswb
mov
dec
dec
lret
lret
lods
dec
push
push
lret
cmpsl
push
push
pop
std
popa
cwtl
and
cltd
add
cmpsl
and
or
sti
cmp
sub
shrl
insl
call
pop
adc
aam
sbb
js
xor
std
inc
cltd
sbb
ret
push
add
lret
pusha
push
pop
bnd
ja
pusha
stc
mov
mov
je
ret
xchg
insl
lret
clc
ficompl
hlt
mov
sbb
in
out
xor
add
dec
push
mov
add
jp
dec
and
or
cltd
mov
jmp
sarl
adc
stos
pop
daa
mov
fimull
xchg
add
insl
mov
dec
pop
add
xor
mov
inc
popf
xchg
push
std
add
or
pop
push
adc
cld
push
loopne
daa
inc
jbe
cmp
cmp
mov
cmp
stos
aad
sahf
or
mov
pop
arpl
or
imul
or
out
lds
mov
xor
or
sub
cli
add
inc
jns
mov
mov
subl
int3
mov
in
jno
icebp
loop
rolb
mov
ljmp
in
into
pop
imul
xchg
mov
push
inc
cmp
jp
jp
add
push
pop
cmp
xchg
sub
fnstsw
adc
fisubl
mov
cmp
inc
cmp
imul
jmp
cmpsb
vcvtdq2pd
xchg
add
cmpsl
repz
dec
inc
pop
cmpsb
cmpsl
push
aad
andl
mov
pop
stos
jp
les
sub
pop
jl
hlt
add
jae
cmpb
push
jmp
adc
push
lea
jmp
dec
mov
sahf
ficompl
sub
mov
aas
adc
dec
je
outsb
lods
or
fdivr
lds
filds
out
or
add
test
ss
ret
xchg
movsl
int3
lret
add
push
pop
lods
lahf
nop
out
xor
lock
mov
adcl
bound
adc
movsl
jmp
and
repnz
xchg
jge
movsl
jb
push
xor
repnz
enter
mov
cmpsb
xor
subb
push
pop
ret
fists
jb
imul
pop
pushf
dec
xor
jno
pop
scas
mov
inc
pushf
inc
lods
xor
sbb
xor
ret
mov
jnp
loop
pushf
popa
xor
sub
mov
xchg
jecxz
scas
rol
ja
xor
std
mov
mov
jb
jg
arpl
push
adc
and
stos
xchg
jg
lods
cmc
incl
jns
loope
leave
imul
movsl
out
rcrb
and
psubq
movsb
and
jne,pt
insb
cli
cmpsb
sub
add
jle
or
gs
sub
mov
mov
inc
sti
das
push
sub
test
mov
sub
and
fistps
and
pop
or
push
aas
mov
cli
pop
dec
leave
js
lods
fsubs
test
mov
decb
fxch
adc
addr16
sub
cli
repnz
mov
cmp
xor
xchg
mov
es
cmp
sub
sbb
or
sub
or
hlt
popf
jle
mov
imul
push
stc
fdivrp
cmc
xchg
jge
pushf
mov
mov
xchg
jp
lea
pop
lahf
push
and
mov
test
das
and
fisttps
xor
pop
inc
mov
sbb
push
and
push
cmpsb
out
out
push
jmp
mov
cmp
cmp
loop
xchg
fldl
fsubr
cmpb
xchg
or
rolb
stos
movb
push
jnp
fwait
push
pop
enter
out
mov
dec
mov
xchg
ret
mov
stc
loop
xlat
push
sbb
div
inc
mov
test
mov
pop
jb
mov
sub
sarl
das
adc
xor
lods
test
pop
cmp
outsl
inc
cmp
fildl
push
outsb
pusha
push
push
sbbb
pop
jo
mov
mov
xor
cmp
jge
lahf
push
imul
mov
push
ds
inc
clc
popa
shr
push
mov
mov
pop
or
icebp
jnp
mov
xchg
and
push
mov
pop
jo
or
das
and
iret
movsl
jbe
dec
rolb
dec
pop
clc
push
push
add
dec
iret
cs
je
mov
pop
aas
jo
orb
lds
lcall
das
dec
ja
fistl
jae
push
dec
fnstenv
mov
mov
sub
sub
aad
lock
mov
sbb
mov
sbb
mov
xchg
mov
xor
sbb
test
rolb
or
push
xchg
mov
xchg
faddl
mov
lods
sbb
ja
mov
cmp
mov
sbb
aad
lahf
and
cmp
mov
loopne
testl
sub
icebp
dec
rorl
mov
jne
adc
jae
or
loopne
decl
xor
mov
cld
add
cmp
mov
mov
out
mov
cltd
mov
lea
imul
adc
inc
int3
xor
or
xchg
idivl
fldcw
mov
int3
sbb
int3
sahf
add
cmp
fidivrs
jmp
mov
jnp
sub
pop
jp
or
dec
adc
scas
push
xchg
mov
mov
fisubrs
ja
adc
pop
test
lds
aam
jp
pop
mov
push
mov
sub
fld
inc
jb
sbb
pop
jo
fcomip
aad
or
or
arpl
xchg
inc
lcall
gs
repnz
sti
add
mov
mov
movsl
popa
dec
lock
adc
xor
xchg
mov
es
shlb
enter
out
fdivp
xor
sbb
jle
stc
adcb
sbb
jno,pt
pop
das
ljmp
es
ret
inc
pop
into
mov
addb
xchg
cld
loopne
inc
out
add
icebp
imul
add
jmp
push
cmpsb
pusha
xchg
push
stc
hlt
jno
icebp
mov
insl
xchg
mov
pop
stc
jge
and
int
dec
inc
xor
test
shll
pushf
jle
ret
xchg
jecxz
sbbl
inc
fcoms
xorb
xchg
mov
imul
jno
sub
testl
xor
pop
xor
lret
inc
lods
push
pop
pop
sbb
sbb
out
stos
cs
pushf
inc
cs
inc
outsb
das
stc
jns
mov
cmp
insb
mov
mov
std
jg
mov
adc
mov
pusha
jo
pop
sbb
jp
push
adc
or
inc
jno
xchg
pop
add
sub
cmp
dec
adc
in
inc
add
push
roll
divb
arpl
mov
iret
arpl
push
push
or
outsl
loopne
sbb
daa
and
jne
popa
imul
in
sti
scas
mov
mov
pop
mov
in
xchg
loopne
aad
xchg
dec
lds
pop
pushf
push
mov
sub
cs
ja
xor
fxam
pop
jne
insl
out
jnp
imul
lea
mov
subb
cmpsl
push
pushf
fsubl
aam
scas
adc
add
decb
adc
mov
xor
jmp
cmp
lcall
call
fdivs
inc
sbbb
loope
aad
push
add
into
xor
pop
sub
sub
movsl
mov
or
je
inc
repnz
jp
add
cmpl
cmp
pop
lret
test
in
lods
add
loop
inc
xchg
pop
ret
adc
push
or
hlt
add
dec
fwait
insb
jl
xor
dec
dec
xchg
xor
lgs
cltd
push
loope
or
iret
xor
test
fcompl
dec
loope
mov
ja
test
xor
inc
stc
pushf
add
mov
push
add
in
in
mov
dec
inc
ljmp
sub
push
stc
jae
mov
pushf
sbb
fstl
std
push
leave
mov
push
into
adc
adc
push
mov
sbb
mov
andb
lods
test
mov
jg
sti
ljmp
test
and
push
dec
enter
mov
xchg
jle
dec
xor
fs
mov
outsb
push
aaa
movsl
mov
into
test
pop
push
aad
das
lds
inc
mov
inc
and
mov
or
jmp
imul
sub
mov
rcl
push
xchg
mov
daa
xor
jb
cmp
jle
std
xlat
in
mov
mov
sub
inc
pushf
mov
bound
jae
in
mov
loopne
scas
cli
loope
out
stos
dec
pop
pusha
push
aaa
or
mov
inc
fsubrp
fildll
adcl
mov
add
mov
outsb
or
popa
push
clc
out
enter
insb
mov
movsb
adc
mov
mov
push
mov
mov
mov
inc
xchg
fs
push
into
dec
aad
mov
clc
lcall
in
out
sbb
fwait
push
mov
in
add
mov
pop
mov
outsb
add
cmp
mov
pusha
aad
adc
dec
sub
cmp
fwait
arpl
stos
mov
popa
sti
xor
pop
dec
inc
into
inc
push
sub
int
sub
mov
adc
adc
mov
lahf
push
push
mov
jno
push
movl
add
popa
sub
lock
bound
lret
mov
sti
cltd
xor
sub
divb
imull
and
mov
xor
inc
je
sub
movsl
test
icebp
pop
lods
pop
inc
dec
or
punpckhdq
or
xchg
cmpsl
cmpsl
xor
ds
mov
popf
jmp
mov
shll
cmp
jge
sbb
icebp
mov
out
stc
jno
inc
in
prefetch
or
cmp
and
stos
stos
ljmp
fidivrl
cmc
pushf
gs
xchg
mov
jle
mov
jne
int3
fwait
jp
dec
jbe
and
pop
lods
xor
scas
lret
fistpl
rcrb
mov
lahf
mov
jae
mov
or
in
mov
mov
imul
lahf
shl
mov
inc
mov
jae
data16
lea
outsb
mov
andb
je
lea
enter
fcoms
jecxz
mov
xor
bound
ljmp
xor
mov
mov
pop
add
mov
inc
pop
ss
data16
aaa
aam
add
xchg
aas
push
mov
addr16
add
sub
sbb
popa
mov
ret
mov
mov
mov
xchg
inc
or
imul
pushf
fstpt
mov
test
dec
push
test
push
mov
scas
push
test
dec
add
push
mov
mov
mov
fwait
adc
sbb
mov
jns
mov
and
jge
stos
jle
data16
inc
sbb
and
ret
mov
out
data16
mov
sub
rcrl
mov
movsb
in
and
adcl
mov
fcoms
mov
cmp
dec
sbb
jge
mov
jbe
shrb
call
jae
mov
xchg
lods
roll
enter
or
in
mov
and
sub
sbb
dec
jecxz
jbe
ss
lods
mov
cmc
loop
dec
cmpsb
rcr
inc
cmc
inc
jnp
mov
fistpl
pop
ljmp
cmp
negb
jno
and
leave
mov
mov
out
orb
stc
jbe
push
and
popf
imul
popa
frstor
sub
push
xorb
xchg
ret
aaa
insb
xor
in
xor
repz
push
pop
sbb
cmp
inc
inc
mov
setg
lret
imul
in
push
shll
call
out
xor
jl
mov
mov
mov
daa
loopne
jne
sahf
jbe
sbb
sbb
xor
cmp
mov
mov
mov
mov
cmp
stos
jne
add
adc
mov
dec
jg
insb
shl
lock
cmp
push
pop
sar
inc
ret
sbb
cwtl
imul
shrl
loope
cltd
int
js
mov
cs
std
pop
xchg
out
xchg
xor
mov
cld
fwait
pop
scas
xor
mov
loope
jl
xchg
sub
lret
cmp
jnp
shl
sti
nop
push
imul
add
out
sub
push
pusha
and
jl
scas
xchg
cld
imul
ss
xchg
pop
mov
sar
xchg
aam
daa
push
mov
xor
add
loope
jb
adc
mov
loopne
pop
mov
loop
sbb
sub
idivl
ficoms
inc
mov
jo
sarb
mov
or
das
adc
cmp
mov
mov
cmpsb
mov
xchg
nop
insl
pop
add
inc
push
int
xor
jecxz
cmc
pop
neg
and
dec
pop
lods
std
pslld
sub
lods
mov
push
imul
cmpsl
jmp
sti
mov
jnp
cmpsl
adc
adc
sbb
mov
popf
jo
stos
loopne
sub
mov
repz
fnsave
xor
pop
mov
inc
adc
push
imul
int3
aaa
mov
or
adc
pop
xchg
ss
mov
dec
cmp
ljmp
ret
out
rorb
adc
dec
aas
shrl
ja
pop
stos
add
lods
add
add
jae
cmp
pop
loop
cmp
scas
mov
ret
cs
cmp
dec
loop
push
mov
hlt
mov
add
pop
das
cmpb
pop
rcll
inc
inc
lret
lds
clc
lret
das
scas
or
mov
movsl
or
sub
dec
les
stc
into
aas
nop
lds
cmp
daa
je
xchg
pop
push
mov
stos
insl
movsb
push
push
push
fbstp
push
jmp
es
pop
and
cmpsl
dec
icebp
sahf
lock
push
fsubr
insl
shrl
leave
outsb
and
xlat
and
test
hlt
push
sti
andb
adc
es
sub
inc
push
jo
add
mov
sbb
add
ds
pop
sahf
or
mov
mov
mov
sarl
lods
pop
pusha
fiaddl
mov
test
sub
inc
addl
jb
dec
jne
aas
adc
mov
lcall
jecxz
pop
sub
push
lods
mov
outsb
pop
xorl
sarb
ret
mov
sub
movsl
popf
push
cmp
iret
or
xlat
jae
enter
xchg
pop
clc
scas
mov
clc
test
mov
adc
jge
out
stos
add
mov
xor
lahf
mov
gs
hlt
mov
push
push
nop
or
xor
cmc
ret
sahf
xor
lods
jbe
outsb
cmp
icebp
aas
cmp
dec
mov
push
dec
int
cltd
push
cltd
mov
test
cwtl
or
cmp
je
sub
inc
jg
ret
imul
jg
rclb
inc
or
mov
xchg
adc
ficompl
adc
ljmp
lods
in
xchg
or
mov
push
pop
sub
inc
loop
push
and
sub
sbb
xchg
mov
jmp
jl
add
xor
out
sub
std
inc
or
jge
lret
dec
movsb
stc
xor
push
rclb
popa
mov
mov
cmpsb
mov
mov
fdivl
push
xchg
jge
test
in
sti
mov
outsl
jo
jecxz
cmpsl
mov
xchg
adc
jne
cmc
mov
cmp
sub
dec
sbb
sbb
shrb
mov
scas
rcrl
jmp
and
mov
pop
mov
and
xchg
and
scas
push
fs
sbb
cmpb
jnp
inc
sysexit
mov
test
xchg
test
icebp
or
dec
xchg
test
add
push
lcall
in
pop
adc
arpl
inc
or
or
lods
lock
cwtl
daa
xchg
test
cli
inc
ret
xchg
cmp
ja
xchg
adc
rclb
js
xchg
jl,pt
fbld
imul
push
outsl
jo
insb
test
and
mov
int
pop
inc
arpl
push
dec
shll
das
inc
jae
aad
fcomip
mov
int
fdivr
stc
inc
inc
adc
in
fstpl
cmp
clc
add
sbb
and
mov
xchg
pop
sbb
lcall
cmp
in
aad
imul
into
ret
dec
jmp
push
insl
sbb
dec
lret
push
lret
imul
jo
fstpl
xchg
mov
adc
cmpl
jg
fwait
test
push
inc
fldt
sbb
jns
mov
mov
divl
popf
mov
push
js
in
int3
cltd
sub
mov
aas
popa
mov
shl
and
clc
add
fcmovne
std
ljmp
jo
shll
jmp
lods
sbb
xchg
pop
pcmpgtb
and
cwtl
pop
pop
jae
out
dec
xor
icebp
std
test
jmp
jb
jnp
test
out
test
pop
fsubrp
sub
xchg
aad
xor
or
leave
insb
adc
scas
movl
addr16
je
sbb
cltd
sahf
or
popa
mov
mov
test
mov
jg
jbe
and
inc
out
mov
inc
push
or
and
adc
cmc
push
ficoms
insl
adc
cmp
pop
aaa
mov
loopne
lods
jns
lds
jae
ret
mov
push
xchg
sub
mov
pop
push
arpl
push
mov
dec
call
ja
pop
pop
push
popf
jecxz
js
push
stos
adc
push
div
and
cmp
inc
push
repz
push
xchg
stos
pop
clc
imul
leave
dec
notb
push
cmc
xor
sub
xchg
stc
imul
stc
adc
dec
data16
stc
int3
icebp
aaa
sub
stos
loopne
inc
or
ret
xchg
shr
xor
mov
push
imul
sti
add
in
addb
repz
repnz
nop
sbb
mov
es
add
mov
inc
sub
incb
mov
dec
outsl
outsl
inc
leave
dec
enter
mov
xchg
push
cmp
sub
fs
clc
mov
xor
repnz
mov
mov
sbbb
pop
mov
int3
push
pop
xor
nop
mov
cmp
add
xor
int
pop
scas
es
stos
sbb
cs
jno
push
cs
xor
sbb
cltd
adc
sub
aaa
andl
call
cld
shl
jo
push
lock
jge
mov
jmp
repz
insb
push
hlt
pop
adc
xchg
iret
popf
sub
and
nop
mov
mov
in
leave
pop
push
test
loop
dec
mov
inc
inc
daa
push
sti
dec
mov
outsb
cli
das
fisttpl
out
pusha
ds
lods
pop
dec
adc
adc
scas
stc
lret
adcb
stos
add
call
xchg
push
test
ja
test
adc
xor
sbb
ja
jecxz
clc
scas
out
loopne
xchg
lret
call
push
pop
jp
pop
int
inc
dec
mov
neg
ds
and
into
popl
adc
inc
mov
cmp
pop
mov
xor
push
xchg
jae
push
push
or
mov
mov
pop
dec
pop
jmp
js
jmp
int
sub
subb
xor
bound
loop
ret
add
leave
lret
je
sahf
daa
xchg
les
imul
or
jecxz
std
out
inc
das
cmp
cmpl
in
push
add
jecxz
sbb
insb
pop
xlat
into
mov
or
scas
jo
sbb
mov
mov
and
jae
in
xor
jo
stos
in
pop
lret
mov
adc
mov
je
jmp
jbe
arpl
popa
ret
sbb
call
push
cmp
mov
fnstcw
out
test
xchg
je
ja
push
mov
int
push
mov
into
repz
imul
in
jne
clc
movsl
ficompl
xchg
xchg
mov
andb
inc
sbb
mov
loop
cmc
pushf
pop
dec
std
adc
push
int3
adc
hlt
sbb
imul
cwtl
or
mov
hlt
pushf
js
xchg
and
cmp
push
movsb
inc
sar
cmpb
push
cmpl
stos
or
jp,pn
xor
stos
loop
lock
notl
mov
hlt
popa
sub
rclb
pop
cmp
sbb
daa
fiaddl
stos
pop
jo
or
ja
test
push
mov
shlb
ja
cmp
adc
mov
push
das
sbb
popf
jb
scas
xchg
outsl
fcoml
sub
lods
fcoml
dec
fdivl
jmp
cmpb
mov
lret
cmc
pop
xchg
mov
xor
mov
mov
lea
xchg
xchg
mov
mov
mov
inc
iret
inc
test
test
dec
mov
xor
mov
ljmp
jg
stos
ja
ret
xchg
divl
sub
sahf
out
mov
clc
push
movsl
cmc
sub
or
cmp
addr16
out
lcall
jbe
push
fdivrl
pop
mov
and
aad
adcb
xchg
ja
rclb
or
jmp
mov
inc
cli
lahf
outsl
mov
push
adc
push
fsubs
das
imul
jg
test
sarl
test
ffree
ret
adc
out
adc
addb
dec
adc
and
xchg
push
aam
call
sahf
outsb
mov
sub
xor
movsb
xorl
jmp
pop
adc
xor
cmp
xchg
cltd
pop
jecxz
loopne
aas
mov
mov
push
cld
andb
aad
and
fs
jmp
in
and
push
xchg
mov
loopne
adc
test
mov
lods
stos
rcrb
or
nop
lahf
jge
int3
cmpsb
call
push
jge
enter
dec
mov
push
dec
insl
stos
jne
push
pop
sbb
fucompp
iret
cmp
pop
mov
xchg
movsb
mov
test
in
cltd
push
sbb
ss
sbb
pop
imul
inc
enter
and
mulb
mov
js
jae
or
out
jae
icebp
mov
dec
loop
ljmp
xchg
out
in
adc
imul
gs
inc
stos
mov
inc
cld
sub
fadds
xchg
icebp
dec
xchg
dec
enter
push
mov
scas
loop
inc
test
movsl
std
add
jb,pt
inc
test
popa
movsb
pop
mov
cmp
decl
jg
mov
mov
cmp
lods
inc
mov
ja
mov
inc
or
lea
fucomp
cld
pop
imul
gs
imulb
mov
stc
inc
mov
xor
adc
pminub
cmp
sbb
out
into
lods
movsb
popf
loope
outsl
subb
mov
add
pop
nop
test
xor
adc
in
push
rclb
cmp
lret
sub
and
cld
clc
insb
xlat
cltd
sub
insb
mov
push
cld
mov
inc
cwtl
mov
mov
jns
out
sbb
pop
cld
mov
dec
xchg
daa
fadd
push
fs
mov
add
aas
ds
sbbb
sub
xchg
in
outsl
mov
sarl
bound
scas
scas
mov
pop
loope
fimuls
jl
sbb
pusha
and
and
je
jbe
arpl
mov
les
mov
and
das
xor
and
int
jb
xlat
push
in
xorb
jnp
fcoml
mov
sub
clc
mov
pusha
repz
xor
gs
mov
mov
pop
sarb
sbb
stos
mov
mov
and
lea
js
subl
jb
test
clc
fs
std
dec
inc
mov
lret
outsb
cli
and
aaa
mov
outsl
insb
mov
ss
mov
mov
mov
add
mov
xchg
ss
pop
add
iret
scas
push
add
sbb
push
inc
aas
test
test
xor
push
test
push
mov
mov
xchg
xchg
push
fmuls
mov
cld
mov
in
mov
int
ret
mov
int
mov
cmp
ret
xchg
les
mov
inc
push
leave
mov
fucomi
pop
ja
pop
ret
gs
dec
pop
scas
mov
xchg
hlt
iret
xchg
xor
popa
divb
cmpsb
or
insb
les
js
sbb
xor
mov
std
out
mov
nop
mov
pop
sbb
test
and
adc
adc
cltd
mov
inc
mov
jg
fwait
imul
add
sbb
push
jo
sti
iret
mov
and
adc
or
xorl
cmpb
push
add
cmp
adc
fcmovb
out
aas
and
mov
mov
out
pushf
fidivl
mov
push
arpl
dec
arpl
mov
add
sbb
inc
stos
ja
icebp
xchg
mov
aaa
sub
mov
aas
repnz
stos
rcrb
mov
pop
fwait
int3
iret
je
fwait
pop
push
test
testb
jle
mov
adcb
stos
sub
nop
mov
icebp
inc
push
neg
jmp
cmp
cmp
leave
sub
pop
loope
xor
jecxz
xchg
sub
jno
int3
dec
cmpsb
fadds
in
je
dec
add
aas
mov
dec
xchg
adc
xchg
pop
push
fists
adc
out
hlt
mov
clc
pusha
js
out
out
mov
popa
fs
mov
sbbl
sub
mov
sbb
mov
leave
dec
and
push
in
pop
sbb
sti
clc
sub
mov
mov
orl
push
mov
pop
hlt
dec
push
inc
dec
pop
lret
sti
fcomi
xor
xchg
xor
dec
jecxz
cmovb
xchg
scas
cltd
ja
mov
or
mov
fstp
cmpsb
push
ljmp
int3
mov
mov
mov
push
daa
pushf
movsb
sbb
add
mov
pop
int3
pop
xor
pop
stos
xor
hlt
lcall
bound
stos
ss
loopne
sbb
test
outsl
mov
mov
cmp
rol
pop
pop
mov
mov
out
mov
push
mov
mov
jg
cmp
pop
or
sub
out
les
fdivrs
std
mov
xor
dec
jg
rclb
xchg
adc
insb
or
mov
sub
in
cmp
jp
or
dec
push
mov
xchg
pop
xchg
clc
aaa
pop
xchg
push
adc
push
inc
xchg
jno
jg
cld
adc
mov
mov
xor
loopne
lea
cwtl
addl
mov
in
cmpb
adc
push
adc
lret
xchg
adc
xor
sbb
jb
xchg
std
xchg
js
pop
cmp
in
js
int
and
mov
jecxz
stos
bound
mov
roll
divl
les
or
cmpb
mov
movsb
popf
popf
cmc
addr16
imul
mov
rorb
cmpl
inc
push
xchg
cmpsl
add
out
push
lahf
pusha
lds
cmp
xor
insb
repz
sbb
and
test
cmp
adc
loop
xchg
adc
jbe
cmp
nop
test
pop
es
mov
lret
nop
sub
xchg
cmpb
and
lods
mov
mov
sub
and
popa
int3
jo
js
xchg
std
mov
in
jb
mov
mov
sub
and
out
sub
adc
insl
cmp
aas
mov
insb
add
push
xchg
sub
jmp
or
push
pushf
lret
sbb
push
popa
mov
sbb
cmpsl
sbb
jg
std
mov
aam
dec
pop
mov
adc
push
push
loope
mov
sub
inc
cmpsb
idivl
aad
pusha
popa
mov
pusha
int
repz
mov
inc
rcrb
stos
mov
push
cmpsb
and
lahf
test
mov
inc
sbb
test
push
xor
push
mov
jecxz
jb
dec
add
adc
sub
push
scas
dec
mov
pusha
sub
dec
sbb
orb
lahf
pop
fisubrl
ret
cld
mov
mov
and
js
int3
pop
fs
adc
push
mov
outsl
push
dec
ja
sbb
push
shrb
or
pop
lock
mov
rolb
sahf
xor
xchg
aad
push
or
cwtl
lods
inc
cld
dec
jmp
mov
sub
pop
std
dec
adc
sub
in
pop
inc
xor
push
add
fcom
in
sbb
xchg
dec
xor
add
dec
fsubrl
mov
dec
cmp
pop
movsl
xor
movsb
dec
gs
mov
add
and
push
cmp
cli
das
sarb
and
data16
rcrb
ljmp
js
push
loop
mov
cmp
into
sub
mov
test
scas
rorl
out
flds
push
push
fidivl
xor
cmp
sahf
push
xchg
pop
iret
add
mov
add
sbb
mov
cmc
mov
jge
xchg
xchg
movsb
cli
fwait
outsl
outsl
adc
insb
daa
jle
jns
mov
or
addl
or
scas
lret
lock
mov
push
pop
adc
xor
or
adc
leave
lret
daa
out
sub
mov
lods
xor
hlt
sub
test
and
out
or
or
xchg
pop
and
xchg
adc
es
aad
das
push
pop
jge
cmp
sar
repz
mov
mov
mov
pusha
dec
std
les
pop
insb
sbb
mov
cmp
jg
dec
cmp
scas
lcall
test
xchg
dec
leave
mov
insl
adc
clc
push
pusha
xor
push
cmp
mov
push
shr
xchg
inc
subb
add
mov
bnd
push
imul
or
ret
lahf
popa
jns
jp
es
push
pop
sbb
test
and
out
pop
and
out
fdivs
xor
push
jno
jl
mov
out
jle
sbb
sub
daa
cmp
and
fs
or
call
mov
scas
dec
mov
adcb
cmpsl
xor
int
mov
aam
mov
or
lock
xlat
xlat
repz
jnp
call
daa
dec
lret
lds
mov
adc
pop
adc
arpl
daa
pop
or
add
sti
inc
sub
adc
stc
idivl
in
mov
gs
inc
sarb
adc
int3
or
add
fwait
repz
inc
ss
and
adc
adc
movsl
sbb
repz
movb
bound
push
arpl
add
dec
jb
insl
jl
imul
lret
cwtl
xchg
fsubs
sbb
jmp
aad
sti
je
jg
sbb
movsl
jmp
stos
out
inc
les
sub
mov
pop
and
mov
test
pusha
inc
jbe
cmc
jns
mov
mov
clc
call
pop
mov
sbbb
mov
fcomps
mov
int
sbb
or
adc
les
repz
loop
stos
jle
mov
inc
xor
or
pop
mov
int3
sub
into
mov
lods
scas
out
les
mov
test
jae
sub
inc
mov
rcrb
and
jo
dec
sub
shll
push
add
call
mov
cs
push
outsb
pop
sbb
sbb
adc
and
mov
inc
das
xor
mov
iret
shrl
mov
adc
xor
add
cmp
inc
arpl
or
call
addl
push
fsubrp
pop
jno
push
andl
lea
or
jne
jg
jle
cld
sahf
jmp
repz
cmpsb
or
jl
and
in
sub
aas
bswap
mov
dec
aam
shll
or
jnp
and
sbb
jo
call
icebp
pop
dec
ja
xlat
repz
hlt
and
push
xchg
or
pop
xor
lods
adc
sarb
lods
mov
cli
mov
xchg
push
or
pop
rorb
loopne
outsl
jns
lds
iret
dec
add
fimull
out
ret
loop
mov
movl
loopne
xchg
std
in
sbb
sub
add
or
mov
clc
jno
push
addb
jmp
mov
add
sti
push
add
add
fisubs
jle
lock
inc
fsub
cwtl
sub
nop
xchg
push
test
push
xchg
pop
outsl
lahf
and
ljmp
add
mov
or
xor
popa
mov
outsb
scas
jg
push
repz
pop
jg
das
sub
outsb
xor
ja
inc
cmc
iret
or
jmp
aad
dec
fsubrs
sti
jp
data16
sub
or
or
test
out
sarb
aas
enter
popf
adc
xchg
je
sbb
cmpsb
jmp
cs
mov
inc
mov
pop
je
jns
fsubrs
imul
mov
sub
pop
or
cwtl
pop
test
pop
fiadds
dec
je
jg
xor
in
adc
lret
out
jbe
ret
out
adc
push
bound
in
lcall
xchg
push
mov
jle
xor
jns
or
sub
les
xchg
adc
mov
dec
fsubs
push
test
sbb
inc
sbb
dec
xor
sub
icebp
gs
fmuls
shl
sbb
or
sub
mov
aad
cltd
in
xor
push
pop
add
loope
push
shrl
insl
cltd
es
jbe
jae
daa
or
in
loopne
xor
mov
xor
cmpsb
jnp,pn
sbb
adc
jmp
dec
xor
cmp
in
cwtl
xor
push
or
ja
test
ret
jmp
lock
out
outsl
lock
mov
aam
cmpsb
jp
mov
in
push
push
inc
lret
outsb
rolb
pop
das
nop
cmpsb
xchg
lds
push
outsl
call
push
inc
cmc
push
ljmp
int3
mov
xor
dec
cwtl
xor
jb
or
fdivrl
cmpsb
mov
xor
inc
cld
xchg
sub
fwait
cmpl
or
push
jae
lds
cmc
repz
jno
fwait
inc
mov
aad
add
xchg
fs
adc
push
xlat
sbb
push
jmp
sbb
mov
out
call
mov
cmpsb
or
mov
mov
lahf
insb
das
pushf
adc
xchg
and
js
xchg
int3
mov
and
and
inc
add
dec
js
or
mov
inc
push
cmp
cmp
dec
mov
testb
call
cltd
arpl
ljmp
xchg
call
xchg
dec
dec
cld
add
sti
xchg
pop
rolw
dec
jecxz
in
sbb
test
jbe
ljmp
inc
xchg
ret
jb
pop
add
bound
jnp
rolb
dec
shlb
mov
fimuls
or
xor
jmp
cld
mulb
and
lcall
daa
insl
dec
sti
loopne
jecxz
popa
and
mov
insb
pop
dec
dec
jle
cs
xchg
mov
cmpsb
xor
add
jle
mov
cmp
fdivrl
push
std
xor
pop
push
fisubrs
jb
popa
sub
shl
and
bound
cmp
ret
mov
loop
mov
mov
push
push
mov
into
and
sahf
and
out
arpl
and
sbb
outsl
xchg
stos
mov
mov
icebp
aas
loope
fimuls
sbb
fadds
mov
dec
xchg
fimull
sbb
push
repz
cld
sbb
inc
cmpb
mov
push
pop
or
lret
stos
cs
push
mov
stc
inc
ds
mov
inc
insl
sub
lret
xchg
cmp
cmpsb
cmpsb
sbb
mov
pushf
scas
loope
bnd
pop
and
jge
sti
inc
leave
inc
and
pop
mov
jecxz
add
adc
and
adc
mov
mov
inc
int
sbb
sarl
call
lahf
dec
pop
dec
jns
inc
cli
out
popa
je
sub
adc
cmpsb
or
xchg
cmpsl
sbb
pop
or
xor
popa
sbb
sub
lods
ja
pop
ret
fists
icebp
push
and
push
daa
dec
push
pop
shrl
stc
mov
xchg
dec
adc
mov
imul
sub
movsl
out
fdivrl
insl
call
mov
pushl
jg
xor
adc
jle
idivb
mov
sub
lods
out
mov
gs
aaa
mov
lret
sti
repz
dec
into
sbb
and
lahf
dec
in
or
xor
inc
xor
lahf
adc
gs
inc
testl
mov
xor
stos
ss
jo
jo
jg
aas
inc
daa
loopne
movsl
gs
sub
rcrb
jae
rorb
fstpt
out
push
les
add
ret
or
push
pop
inc
jp
gs
xor
aad
mov
add
bound
fimuls
lods
popl
add
cmp
or
xor
stc
sbb
jae
jmp
das
pop
push
inc
fists
mov
lds
cs
sub
cli
enter
push
mov
jns
movsb
add
add
movsb
in
shlb
sahf
shlb
lcall
push
insl
jb
stos
int3
aaa
pop
icebp
jge
adc
or
loopne
lea
sub
jnp
mov
insb
sarb
xchg
or
mov
aam
push
lds
into
xchg
sub
fisubl
enter
loope
fstps
icebp
pop
mov
push
or
into
orb
xchg
mov
out
jl
fbstp
dec
mov
or
cmp
inc
push
jg
shlb
jns
mov
loop
dec
pop
sar
sbb
std
fisubl
in
dec
mov
in
lock
push
sub
sub
mov
test
xlat
mov
adc
fisubl
add
adc
jae
pop
in
loope
test
repnz
sbb
lcall
mov
cli
aam
out
jnp
int
test
mov
jo
les
in
sbb
xchg
dec
cmpl
dec
pop
inc
test
cmp
sbb
add
es
jne
and
fstps
jo
jmp
sub
sub
mov
jo
inc
imul
mov
cli
sbbb
adc
sub
push
pop
inc
jg
adc
push
je
jns
push
mov
scas
push
mov
pop
xchg
subl
call
inc
sub
and
and
jge
or
inc
xor
fs
mov
int
jne
pusha
xchg
sbb
mov
pop
adc
mov
xchg
je
jno
sub
aaa
push
int3
cwtl
jge
ret
ret
inc
out
pop
or
and
nop
lret
daa
les
cmp
mov
enter
mov
and
and
int3
cltd
addb
sub
fwait
imul
notb
mov
ficompl
clc
sub
jg
pop
rolb
stos
aas
or
push
push
xchg
je
push
sbb
cmpsl
mov
sahf
xlat
ret
iret
aaa
movsb
xor
scas
dec
cmp
ljmp
into
jp
loop
and
pusha
enter
hlt
aas
fwait
je
cmp
in
fs
sub
xchg
add
jbe
insl
xchg
pop
dec
cmpsb
in
jle
inc
leave
lcall
in
mov
cmpsl
sub
lcall
inc
or
dec
cmp
fdivr
mov
pop
sbb
fdivl
and
jnp
lcall
ret
out
mov
mov
push
and
add
mov
jle
push
and
enter
sbb
sbb
lahf
jge
mov
pop
and
icebp
push
add
out
sub
ja
repnz
xchg
sub
and
sub
ret
scas
dec
sarb
faddl
inc
and
leave
pop
mov
lea
dec
addr16
xchg
ss
mov
mov
cmpsb
adc
jae
cmp
pop
cmpsl
xchg
xchg
sbbb
fwait
pop
mov
lea
cmp
jecxz
loop
pop
pop
sarb
cmpsl
into
aas
sub
lds
mov
popa
cmp
call
jno
das
fisttpl
adc
mov
add
mov
sub
out
fwait
adc
pop
lock
stc
nop
fcomip
daa
sub
pop
xchg
insl
push
js
call
sub
call
ja
insb
dec
xor
sarb
stc
outsl
push
dec
imul
inc
into
sub
cmpsb
mov
loope
int
inc
sub
mov
aad
out
mov
scas
jl
lea
imul
mov
add
int3
sub
mul
mov
data16
test
sbb
aad
dec
dec
sbb
pushf
adc
jae
sub
sarl
fwait
adc
push
lds
ds
aam
adc
dec
or
sub
push
pusha
aam
and
shlb
xchg
mov
xor
stos
mov
xchg
adc
xchg
pusha
mov
loop
ret
sub
push
sti
in
add
jle
ret
cmp
mov
js
fmulp
add
movsb
fisttpl
push
xor
jne
adc
fimull
rcl
dec
pusha
aad
mov
lds
add
or
add
inc
xor
pop
inc
sahf
adc
lods
pop
lret
cmp
cmp
repnz
mov
mov
mov
in
push
outsl
xchg
xor
xchg
mov
pop
xor
dec
mov
iret
mov
mov
aaa
xor
sahf
mov
insb
pop
lea
jbe
lret
sahf
fiaddl
test
xchg
sub
dec
mov
in
or
mov
es
ljmp
pop
xorb
fs
faddl
and
pop
sarl
sbb
jnp
mov
xor
lret
sub
jne
xorl
das
xchg
ljmp
ret
cmp
mov
insl
jb
fists
push
test
mov
xchg
or
sub
lret
adc
inc
inc
pop
arpl
jb
cld
out
pop
stos
adc
jge
dec
repnz
insb
hlt
mulb
pusha
adc
mov
sbb
sbb
jae
and
aas
adc
ret
inc
adc
movsb
mov
xor
dec
xchg
fcmovne
mov
add
xchg
arpl
cmp
je
jno
out
cld
cld
xchg
cltd
repz
fnstenv
sbb
mov
in
and
pop
leave
pushf
or
sub
xor
push
push
mov
repz
sarl
enter
mov
in
stc
cmovp
rcrl
jae
in
mov
xor
lahf
out
xor
cs
je
inc
lea
negb
fnstenv
dec
xlat
pop
stos
loope
clc
or
cmp
shrb
pop
jno
xor
pop
pop
ljmp
dec
mov
jbe
movsb
mov
loope
inc
sbb
inc
roll
incb
push
cmp
mov
js
fadds
mov
xchg
hlt
out
adc
push
xchg
sbb
dec
aas
fwait
cs
ds
sbb
mov
das
add
inc
pop
insl
cmp
push
data16
jae
outsl
stos
iret
pop
dec
mov
pop
mov
xor
repz
mov
push
rcr
dec
and
rorb
xchg
ljmp
fwait
push
jmp
shlb
insl
pusha
pop
mov
lret
fnsave
fisubrl
cmpb
inc
mov
call
ret
into
jb
add
stos
sbb
mov
cmp
jne
subl
cmp
push
xchg
jo,pt
cwtl
in
mov
adc
jno
mov
jo
fmul
pushl
cmp
subl
stc
fidivrl
adc
roll
push
movb
stos
mov
jae
out
shl
push
dec
out
dec
addr16
pushf
push
sti
mov
sarl
shll
gs
ljmp
jl
popa
loope
push
xor
ljmp
lret
pop
adc
mov
lea
sbb
inc
dec
pushf
or
mov
jg
pusha
mov
xor
cmp
out
xchg
insl
cld
in
xorb
or
ja
mov
addr16
cmp
push
inc
shlb
lods
insl
inc
les
mov
inc
repz
push
pop
xor
xor
lds
pop
out
and
push
hlt
fisubrs
lret
sbb
jg
stos
sub
dec
jp
jmp
pop
push
xor
ret
jecxz
adc
push
push
mov
cld
push
sub
shl
shrb
mov
pop
arpl
jge
or
movl
push
leave
mov
pop
ja
lods
das
les
cwtl
cmp
rorb
jp
add
mov
int3
sahf
jl
mov
frstor
cmp
ss
xor
jns
pop
outsb
jns
rorb
leave
jo
push
adc
addl
mov
xor
lret
imul
out
pusha
dec
inc
aas
sbb
or
adc
push
in
dec
xor
das
ljmp
movsl
and
push
sub
mov
sub
xor
fs
in
pop
push
inc
pushf
nop
pop
test
repz
adc
mov
adc
or
mov
jg
lret
mov
test
nop
pop
push
jbe
inc
mov
cmp
std
lock
mov
sbb
mov
clc
dec
test
inc
cs
out
int
scas
sub
mov
sbb
xchg
pop
push
or
or
jbe
xchg
lea
fdivl
push
je
push
mov
mov
nop
mov
xchg
sbb
inc
mov
hlt
popa
and
pusha
push
push
sub
repz
rcrl
dec
jnp
enter
jge
fnstsw
dec
imulb
inc
fidivrs
or
add
adc
push
out
jb
and
lret
adc
addr16
jp
sub
ror
jge
out
mov
adc
cmp
cmp
mov
inc
nop
fstpl
pop
push
dec
mov
sub
jb
outsl
add
test
xor
gs
add
pop
out
or
gs
daa
pushf
jmp
sub
inc
mov
push
xchg
pop
push
and
mov
cmp
scas
pop
out
push
and
leave
and
ror
push
mov
mov
ret
cwtl
xorb
jge
inc
lea
xchg
test
jecxz
stos
dec
mov
push
sub
cmp
orb
xor
jmp
out
adc
and
sahf
add
mov
imul
enter
stc
loopne
add
mov
push
cmc
push
rcrl
mov
movsb
jle
sub
push
xchg
fistl
outsl
push
mov
ja
sbb
mov
xor
jge
and
aas
lret
fcmovnb
fisubrs
add
jl
lahf
dec
push
das
push
mov
aas
cmc
loopne
mov
pushf
insl
cmc
inc
ret
jo
lods
loopne
xlat
inc
loope
adc
push
xchg
out
jecxz
sbb
repz
mov
jmp
or
aad
pop
les
xchg
dec
pop
lods
jecxz
adc
test
xor
rorl
inc
mov
stos
inc
cmc
sub
lock
jl
or
inc
aad
pop
inc
pop
inc
xchg
imul
test
xchg
adc
add
inc
iret
movsl
aaa
popa
div
ret
mov
xchg
xchg
test
mov
jl
push
push
sub
insl
xchg
inc
in
gs
mov
push
popf
inc
js
cwtl
xor
fdivl
lret
aam
fdivrl
lret
push
cwtl
pushf
push
push
dec
cmp
movsb
sar
inc
test
rolb
pusha
stos
mov
push
pop
push
fbstp
lcall
add
out
cmpsl
out
sbb
jl
inc
cwtl
outsb
cmp
scas
and
add
dec
ss
mov
inc
cmpl
ficoms
fsubrl
xchg
jae
push
dec
lock
movl
xchg
inc
cmp
sub
lsl
ret
jmp
jmp
iret
cmp
loopne
negl
in
jl
inc
cmc
push
or
jmp
dec
ficoms
imul
shl
loopne
fcompl
adc
mov
addl
jbe
mov
cmp
dec
out
sbb
stos
sub
adc
mov
adc
pop
dec
aas
loopne
inc
mov
push
and
inc
inc
mov
push
jg
push
divb
sti
clc
and
dec
lds
das
push
xlat
pop
popa
jmp
cmpsl
test
add
jne
pop
jmp
inc
cmp
or
xchg
bound
scas
jns
iret
jl
cld
mov
mov
add
enter
scas
repnz
cltd
inc
js
hlt
pop
nop
and
dec
in
movsb
aad
fdivl
xor
js
popf
add
xor
fwait
push
in
dec
mov
xchg
xchg
push
repnz
cmpsb
xchg
jne
nop
loopne
pop
jbe
jge
dec
enter
in
cli
bound
adc
test
bswap
adc
icebp
xchg
mov
std
and
mov
out
sub
pop
ja
int
iret
dec
loopne
jo
push
push
repnz
data16
adc
jecxz
jg
popa
lods
nop
xor
or
icebp
push
insl
dec
pop
push
sbb
jg
mov
mov
fst
bnd
mov
stc
mov
mov
lret
pop
enter
out
sub
and
js
cmc
ss
aad
mov
call
mov
inc
lcall
pop
lods
insl
sbb
xor
in
nop
lret
mov
pop
pop
test
test
cmp
ljmp
imul
cmpsl
popa
into
pop
push
jle
imul
push
test
add
xor
in
je
and
loop
add
into
dec
cmp
pusha
inc
psllw
notl
ds
mov
iret
sahf
les
pop
xchg
aas
mov
fistpl
and
cmp
fdivr
xorb
and
add
mov
cmp
pop
push
aam
jp
inc
adc
insb
dec
loop
testl
cmc
aaa
xor
xchg
scas
outsl
dec
andb
inc
test
sub
enter
repz
sbb
aam
inc
cli
dec
in
sbb
mov
clc
sbb
lds
movl
xor
aad
pop
sbb
imul
imul
stos
pop
xchg
test
push
loop
mov
shrb
inc
lods
and
mov
xor
mov
fsqrt
pop
rcl
mov
cmp
cwtl
outsl
repz
dec
outsb
mov
pop
mov
and
sti
mov
stc
sbb
add
cmc
subl
cmp
xchg
cli
pop
cmp
pop
das
sub
aad
push
xor
dec
lea
mov
cmp
scas
out
sahf
mov
shlb
adc
loop
fwait
sbb
lcall
xor
fbstp
sub
les
xor
dec
loop
or
xchg
rcrb
and
shl
push
leave
fidivs
das
sub
addr16
xchg
stc
and
mov
aad
push
add
and
inc
sbbb
xlat
mov
fldl
jb
aas
mov
std
mov
lock
adc
jmp
mov
scas
xchg
xchg
xchg
sbb
xchg
or
stc
xor
cmp
mov
stc
xchg
push
push
lock
add
outsb
pop
jno
push
mov
jge
scas
and
icebp
cmp
in
cmp
inc
cmpsb
hlt
sub
cmp
int3
or
adc
or
mov
cmc
or
call
add
push
push
lahf
pop
hlt
xchg
xor
pop
insb
or
testl
std
lahf
insl
lret
jl
mov
xor
dec
rcll
cmp
enter
xchg
adc
lea
mov
push
jnp
call
xor
test
call
adc
adcl
in
mov
cltd
inc
mov
push
ljmp
fcmovnu
nop
insb
pop
jns
adc
and
ret
inc
sbb
inc
je
push
in
xor
out
movsb
imul
cmp
daa
push
lds
out
andl
scas
sbb
scas
and
jnp
ret
inc
and
outsl
xor
mov
mov
clc
andb
fsubl
es
sub
pop
fcos
cltd
sbb
hlt
sbb
jb
mov
lcall
sub
fs
push
sti
in
mov
lcall
push
repz
add
or
add
pop
sub
shrl
jg
sub
ljmp
ljmp
jne
sbb
sbb
subl
mov
fdivrs
or
dec
out
or
loop
mov
out
and
adc
retw
cmc
cmp
add
stc
in
jne
add
mov
loope
add
fnstenv
jbe
xor
cmp
jg
push
mov
mov
jp
push
xchg
push
xor
push
test
pop
mov
add
ret
fadd
mov
mov
and
sub
sub
cltd
cmpsb
ficoms
pop
addr16
push
pop
add
jg
stc
add
cmp
push
inc
lods
push
imul
inc
pop
pop
out
jecxz
loope
inc
test
xchg
cmp
ds
lret
lret
mov
mov
mov
pop
mov
hlt
je
sbb
jae
in
ja
shl
rcl
sub
jmp
or
jecxz
rcll
rclb
dec
ficoms
xlat
rcll
call
push
mov
mov
das
sbb
clc
clc
cli
ficomps
adc
out
mov
push
pop
add
test
popa
mov
pop
add
inc
test
add
mov
push
mov
leave
popf
addb
ds
lcall
mov
mov
sbb
lcall
rcrl
adc
mov
test
lea
imul
fisubs
out
ficoms
jo
inc
mov
cmc
sub
cmp
push
jcxz
test
dec
sbbb
sbb
movsl
xchg
adc
mov
sbb
adc
sbb
outsl
aas
ret
aam
repz
pop
mov
enter
fistpl
fildll
out
test
addr16
fldcw
icebp
and
cmc
pop
add
dec
loope
jmp
push
das
repz
inc
jecxz
je
movsl
xchg
xchg
scas
add
push
add
mov
jne
and
sub
test
mov
test
ret
xchg
lods
xor
rcrb
int3
mov
ljmp
pop
fwait
mov
jg
call
testb
pop
xchg
cmp
inc
add
push
movsb
mov
and
leave
inc
ds
outsl
call
dec
adc
int
je
movb
movsl
jns
dec
sub
ret
ret
mov
in
scas
xchg
addr16
sahf
rclb
ss
out
xor
xchg
jb
cld
push
push
in
mov
movsl
pop
in
inc
shlb
and
fwait
mov
lods
and
lds
cwtl
pop
xlat
in
ljmp
es
std
inc
ficompl
pop
cmp
adc
cmpl
lahf
mov
jo
rolb
icebp
dec
mov
notb
in
inc
and
add
xchg
mov
mov
lcall
inc
pushl
sbb
push
out
inc
add
mov
cmp
dec
mov
fwait
and
xchg
dec
push
sbb
pop
cwtl
inc
fadd
xchg
in
xorb
cmp
jne
lahf
adc
pop
and
push
scas
in
mov
fldt
hlt
in
ss
int
clc
adc
cmp
jecxz
test
aas
hlt
mov
sbb
jno
hlt
dec
sbb
cld
rorl
jmp
nop
leave
pop
cmp
ret
insl
xor
fwait
cmp
and
xchg
mov
add
enter
add
and
stos
jmp
pop
ret
xchg
bound
jne
push
ret
rorl
clc
leave
cmp
std
mov
loopne
adc
std
js
xchg
fldt
cwtl
xor
cmp
jge
push
cwtl
outsl
out
and
sbb
repnz
or
or
mov
rcll
pop
inc
jae,pn
push
out
add
fisubs
arpl
test
ret
xor
daa
repnz
push
xor
test
stc
mov
lods
or
adc
inc
xchg
je,pt
push
adc
test
ds
jno
and
dec
test
mov
shl
xorb
xchg
xor
rcr
and
sub
xchg
subb
clc
pusha
pusha
in
lcall
stos
jb
dec
push
jne
in
xchg
mov
mov
cmpsw
push
xchg
dec
or
push
pop
lahf
push
push
rorl
adc
in
adc
out
lret
xchg
push
inc
ja
sub
addb
int
push
mov
cltd
push
dec
imulb
lea
pop
cwtl
out
pop
cmp
incl
and
data16
je
call
pushf
push
jno
arpl
aam
shrb
negl
loop
orl
cwtl
test
mov
out
mov
jb
mov
mov
sbb
loopne
pop
add
lock
xor
push
jmp
mov
ffree
mov
pop
push
inc
call
jb
popa
inc
xor
add
cmp
add
sub
imul
push
dec
sahf
adc
sbb
or
jp
pusha
pop
pop
add
loop
test
xor
cmp
ret
movsl
stos
subps
mov
rclb
insl
pop
mov
pop
mov
sub
addr16
jnp
push
push
dec
lods
cwtl
pop
das
cmp
xchg
and
push
mov
mov
cmp
wbinvd
add
xchg
fs
pop
sub
mov
ret
and
stos
dec
sbb
mov
test
outsb
cmpsb
adc
imul
leave
shlb
cmpl
cli
mov
getsec
nop
mov
and
xor
leave
push
jl
iret
insl
adc
out
icebp
xor
hlt
push
add
fucomi
cmp
jge
scas
push
pop
inc
cli
add
mov
sub
stos
iret
and
stos
lods
xchg
and
gs
jbe
jmp
flds
xchg
inc
jmp
mov
pusha
lahf
divl
jb
testl
loope
in
shlb
loope
mov
jge
stos
pop
xor
outsb
push
add
push
mov
inc
or
mov
cmp
xorl
xor
icebp
data16
stos
ss
inc
test
mov
xchg
jp
pop
jl
add
std
xchg
mov
pop
cmc
rcrb
fsub
addr16
lret
and
ljmp
xchg
add
jae
inc
les
cmp
jno
stos
and
leave
dec
xor
sti
rcr
add
fimuls
adc
push
xchg
sub
xchg
or
pop
out
pop
cmp
mov
inc
and
inc
jmp
push
mov
cltd
inc
push
int
and
fbstp
cld
mov
daa
pop
nop
mov
mov
mov
inc
and
add
sbb
bound
jbe
js
out
mov
lret
or
xor
out
inc
fsts
cmp
cmc
mov
xor
pushf
pop
in
loope
test
lahf
cmp
stc
mov
imul
mov
out
ret
push
in
push
rcll
jbe
and
fwait
xor
ret
aaa
cld
fucomi
push
sbb
lods
out
cmp
adc
xchg
pop
and
sbb
mov
dec
hlt
fs
fisubrl
mov
or
lret
mov
jg
push
in
pop
fldl
xchg
push
push
and
fwait
dec
pop
loop
jmp
xor
aam
cli
jecxz
dec
shrb
sub
loopne
outsb
mov
mov
in
pop
push
add
inc
cvttps2pi
sbb
xchg
and
mov
fisubl
mov
lods
pop
stos
bound
imul
push
jle
jbe
andb
cmpxchg
pavgw
fcomps
clc
mov
xchg
dec
inc
jecxz
cmp
jl
in
jle
sub
mov
jmp
mov
lahf
push
dec
leave
push
inc
icebp
dec
ds
daa
nop
pushf
push
pop
sahf
in
rclw
pop
mov
in
and
push
adc
stos
fs
mov
enter
cltd
add
shll
aam
std
fldt
negb
sbbl
icebp
popa
add
push
cmpsl
outsl
dec
in
sbb
js
jno
and
std
adc
xchg
jl
aam
cmpsl
jmp
or
loop
jb
mov
mov
sub
rcrb
push
imul
aaa
and
fldenv
inc
add
push
rolb
ret
push
sub
or
mov
lock
and
or
lods
leave
add
fucomi
adc
addr16
cmp
jmp
hlt
ret
dec
sbb
sbb
mov
xor
pop
xchg
idivb
mov
mov
sahf
mov
rorl
push
leave
mov
loope
ret
mov
mov
jmp
xchg
les
stc
pop
mov
imul
mov
mov
dec
jo
dec
sahf
cmp
adc
jl
push
mov
push
ror
pop
inc
enter
enter
cmp
test
inc
and
xor
mov
mov
fs
scas
xor
cli
movsl
test
mov
mov
mov
out
cs
push
mov
aam
aaa
mov
test
lock
xchg
adc
sub
je
imul
xchg
inc
dec
shlb
loope
mov
mov
aaa
mov
pop
lods
test
out
cmpsl
divb
ret
push
add
pop
mov
enter
rol
negb
nop
adc
fisubrs
int3
fdivrs
pop
or
push
xchg
ja
dec
push
pop
add
or
daa
cmpsl
lods
xor
loope
sbb
mov
push
jnp
jne
mov
outsb
pop
call
sbb
jno
sub
fmull
mov
outsl
stos
stos
insb
inc
les
outsb
movsb
imul
ffreep
pop
std
cwtl
repnz
fdivl
xor
fimuls
push
arpl
call
pop
clc
pop
and
jge
cmp
pop
inc
fnstenv
jbe
test
pop
bound
xchg
pop
pop
sbb
push
or
mov
rcrl
test
popa
or
sbb
fildl
aam
outsl
lock
add
dec
mov
cltd
lods
repz
fs
xor
mov
xor
in
bound
ja
inc
push
adc
pop
daa
scas
inc
jae
out
dec
dec
into
pop
les
mov
popf
mov
jl
add
push
inc
fnstsw
push
stc
call
cmpsl
pop
ret
jno
aas
mov
lcall
add
or
and
cwtl
add
repz
clc
insb
daa
adc
cmp
dec
push
arpl
int3
push
ret
jo
dec
into
std
xor
push
and
sbb
nop
or
xchg
es
hlt
push
sub
stc
stos
icebp
and
ret
lahf
jl
in
filds
and
cmp
or
and
jge
adc
sub
mov
cld
scas
aam
aaa
cwtl
mov
jae
add
mov
jo
cld
sbb
push
dec
xchg
lret
inc
repz
xchg
cwtl
callw
ret
xchg
lret
mov
jno
mov
sbb
fwait
lods
mov
mov
fwait
test
scas
xlat
enter
leave
iret
jo
gs
repnz
mov
inc
rcll
dec
lods
aam
loop
insl
cmp
xor
lret
adc
mov
stos
sti
inc
fimuls
icebp
pop
mov
mov
mov
imul
dec
or
lret
cmp
push
mov
lods
dec
aam
aad
shrb
into
mov
add
iret
lods
inc
push
stos
mov
and
negb
in
leave
push
mov
cmpsb
sub
push
inc
daa
call
hlt
push
enter
dec
xchg
cmc
or
bound
cmp
pop
push
mov
rolb
movsb
ljmp
pop
mov
out
insb
les
mov
in
push
jmp
insl
lret
push
mov
adc
adc
ret
sub
or
mov
icebp
xor
pop
outsl
sub
push
cltd
cmpsl
dec
repz
or
jbe
les
lods
out
sub
out
sub
ljmp
cmp
mov
icebp
push
inc
ficompl
imul
and
cmp
xchg
pop
jg
fldenv
mov
or
inc
jge
fisubl
test
mov
std
cmp
addr16
jg
shlb
into
ja
aam
paddw
test
js
pop
inc
icebp
test
sbb
push
pusha
aas
mov
xor
jns
mov
lock
insb
xor
or
jmp
bound
test
push
loop
addr16
into
ljmp
repz
sti
mov
fsts
loopne
arpl
xlat
or
ljmp
jo
sbb
sar
push
xchg
mov
push
sub
jo
das
inc
mov
icebp
mov
test
pop
fiaddl
sub
xchg
xor
add
enter
or
jp
and
pop
sbbb
sti
aas
adc
sbb
push
scas
push
jl
mov
inc
sti
jp,pt
mov
mov
loop
inc
mov
cmp
insl
insl
shl
push
clc
fists
rcr
jmp
int
insb
push
or
out
in
and
sbb
jmp
lret
dec
inc
mov
fiadds
mov
push
pop
in
loope
jb
push
lret
inc
gs
dec
mov
or
add
test
cltd
jp
maskmovq
aas
or
lret
pop
cltd
mov
xchg
inc
flds
dec
fdivl
fcomp
outsb
fisttpll
mov
jg
mov
push
dec
sbb
add
sub
out
pop
pushf
in
xchg
fcoml
js
outsb
push
inc
data16
dec
jbe
cwtl
dec
mov
xchg
push
rcl
mov
push
jb
jno
push
adc
mov
add
ds
xchg
popa
sarb
mov
in
scas
sub
jae
xor
outsl
or
dec
and
sub
xchg
mov
test
cmc
mov
int3
pop
test
pop
imul
mov
sbb
inc
sbb
mov
nop
test
inc
hlt
push
adc
iret
and
rolb
ret
sub
mov
sub
sub
cltd
rolb
and
xchg
lods
mov
in
bound
mov
inc
scas
pusha
lcall
arpl
or
in
idiv
or
sub
enter
sub
dec
ret
jle
stos
mov
mov
cli
jg
mov
icebp
incl
push
mov
dec
sahf
in
mov
cmp
or
ret
dec
inc
sbb
psubd
push
dec
data16
push
in
leave
xchg
inc
ret
sahf
sbb
lods
prefetcht0
add
fidivrs
inc
imul
imul
and
mov
xchg
ljmp
xor
sub
ficompl
mov
mov
cs
repz
inc
loope
and
xchg
sti
lcall
sbb
neg
fistps
popa
fidivrl
std
jmp
xchg
loope
sub
jge
sar
ds
add
test
iret
add
mov
jne
mov
mov
push
out
das
mov
mov
push
push
lds
dec
in
dec
push
pop
jge
xor
cmp
mov
lret
pop
inc
dec
dec
cltd
mov
mov
jo
ds
cmp
inc
sub
sbb
in
cli
jae
aas
pop
scas
and
mov
mov
inc
popa
jge
lock
mov
sub
repz
movsb
hlt
test
push
cmp
dec
mov
adc
repz
pop
ss
sub
movsl
rcrl
test
mov
in
add
dec
roll
enter
aam
add
out
inc
int
mov
lea
rolb
mov
sbb
inc
adc
inc
outsb
mov
and
dec
mov
sahf
lret
sub
mov
scas
addl
lock
daa
xchg
sbb
jle
mov
mull
rol
lret
mov
pop
lods
adc
jnp
out
adc
dec
int
mov
push
testl
push
mov
outsb
xor
or
mov
pusha
les
lock
hlt
mov
mov
mov
cmp
out
xor
pop
cmp
int3
frstor
in
dec
test
jno
lods
jae
add
daa
push
in
or
jns
test
sbb
fwait
add
lahf
xchg
xor
add
push
xchg
cmp
mov
adc
xchg
cmp
xchg
dec
mov
cmp
inc
std
inc
and
mov
cmpsl
jo
xor
popf
rcll
ret
mov
shr
adc
ja
mov
sub
add
sbb
dec
not
ret
sarl
scas
not
enter
sub
adc
pop
mov
mov
lods
lea
inc
int3
cli
jbe
inc
sarb
loopne
pushf
dec
pop
add
xchg
xchg
test
sub
jnp
in
mov
ljmp
stc
or
lret
outsb
aad
cs
jns
mov
jbe
lea
sub
mov
dec
les
jp
cmp
les
cltd
iret
adc
adc
mov
push
add
pop
test
cmp
pop
imul
sbb
out
ds
add
cmp
pop
inc
xor
pop
aad
fwait
loope
mov
lahf
fdivl
in
hlt
jbe
jae
fs
push
mov
ror
and
scas
fadd
inc
mov
cs
or
xchg
or
cltd
out
lret
insl
mov
and
sbb
rorb
mov
mov
bound
jg
add
inc
movsl
mov
mov
je
clc
outsl
inc
int3
mov
push
stos
test
push
lahf
repnz
call
pop
pop
cmp
insl
adc
sub
mov
pop
ss
out
in
ja
and
xchg
add
xor
hlt
push
inc
pop
das
mov
and
in
sub
jno
lods
push
inc
cmpsl
pop
mov
pop
cmp
test
hlt
cltd
pop
ja
aaa
stos
sub
out
ja
pop
mov
mov
sbb
stos
sub
mov
dec
insb
push
jbe
popf
outsl
pop
cld
lods
gs
cwtl
mov
repnz
icebp
pop
movsb
arpl
repz
push
lods
jl
mov
mov
push
fldcw
out
or
xchg
dec
repz
dec
js
and
ret
mov
test
and
stos
or
xchg
mov
xchg
subb
push
enter
ret
jbe
stc
xor
inc
cmc
lret
mov
and
push
push
rorb
outsb
add
jb
xchg
mov
sub
xor
in
popf
out
out
icebp
sbb
fs
out
pop
shrb
mov
filds
pop
out
add
dec
mov
sbb
lds
mov
xchg
sub
ds
movsl
push
dec
negb
mov
loop
sub
cmp
jne
loopne
sar
sbb
xor
inc
adc
out
push
movsl
in
sbb
bound
jo
sub
fstl
test
or
icebp
push
sahf
push
outsl
xlat
lret
push
mov
arpl
inc
mov
mov
in
cmp
fnsave
fs
jb
fisttpl
sbb
or
lods
cmpsl
push
add
add
mov
lcall
and
ret
mov
pop
mov
push
cmp
xchg
mov
ljmp
push
dec
scas
repz
test
and
inc
adc
lahf
fisttpll
or
xchg
mov
shrb
add
dec
xor
aad
jl
jle
cwtl
inc
mulb
xor
arpl
dec
cmp
pushf
fnstenv
les
add
mov
scas
sub
std
adc
ret
push
cld
xchg
mov
sbb
and
jmp
neg
shll
rcr
cmp
and
jne
add
andb
push
mov
cltd
popf
inc
sbb
add
sbb
stos
mov
mov
popa
xchg
ret
into
xchg
dec
or
imul
sti
aam
sub
rcl
bound
daa
ror
xchg
fstps
subb
ljmp
fwait
and
and
das
lret
push
mov
pop
cmpsl
and
adc
cmc
jno
orb
jmp
sarb
test
cmp
xor
inc
cltd
shl
lahf
mov
mov
xchg
mov
fnsave
ljmp
sahf
ss
adc
sub
ficompl
xor
add
shr
or
cmp
mov
lret
lock
fistpl
stos
xchg
push
mov
inc
xchg
in
pop
loopne
adc
lcall
inc
or
fstpt
pop
nop
stc
push
jno
sahf
stos
jmp
roll
and
sbb
shr
push
mov
dec
es
mov
imul
popf
pop
ljmp
adcl
cmc
out
pop
jne
mov
out
cmpsl
divl
xchg
aas
pop
repz
je
orl
fstpl
je
jnp
insb
sub
repz
mov
loopne
sbb
push
cmpsb
inc
cwtl
or
mov
shl
ss
cmpsl
mov
mov
stc
cmp
adc
inc
mov
push
pop
les
mov
icebp
std
lock
lahf
daa
int3
mov
dec
sti
rsm
int3
shr
pop
pop
imul
adcl
push
lret
xchg
in
mov
and
shl
pop
cli
sti
push
mov
int3
pop
jnp
push
popf
mov
in
out
inc
roll
lock
add
test
xchg
repnz
insb
cmp
stc
cmp
in
mov
sub
inc
mov
sbb
mov
lds
sub
cmp
or
mov
pop
sti
adc
sar
insb
jmp
mov
rcrl
dec
arpl
jno
add
ret
mov
mov
mov
and
aas
add
sbb
mov
lret
and
jg
out
inc
aam
jae
dec
pusha
pop
shlb
insl
and
divl
adc
cmp
lcall
fists
jnp
mov
dec
sbb
cmpsb
mov
cmp
sbb
cmp
mov
mov
sub
mov
pop
xor
mov
pop
aaa
call
or
sbb
xchg
adc
rolb
mov
mov
xchg
push
jg
cmp
xchg
popf
fs
inc
cmpl
shll
lods
enter
push
loop
sbb
in
pusha
lcall
out
lahf
sub
addr16
sbb
repnz
cwtl
mov
hlt
lret
or
dec
xlat
movsl
ret
lahf
push
cld
mov
dec
pop
adc
js
push
pusha
and
xchg
add
iret
ret
js
mov
dec
fs
scas
hlt
insb
xchg
mov
test
adc
dec
adc
jge
fisttps
enter
and
xlat
cs
and
jecxz
or
and
cli
pop
cmpsb
arpl
add
fldenv
lahf
adcl
mov
jp
jns
lods
dec
jo,pn
enter
dec
loop
cwtl
adc
xchg
sub
xchg
addr16
sub
adcb
mov
jecxz
cmp
jo
mov
jne
push
ficomps
fdivr
in
inc
mov
stos
cld
hlt
inc
scas
mov
dec
gs
cmp
jno
rcl
and
clc
pop
fbstp
fstpt
add
mov
mov
fwait
movsl
cmp
push
jo
pop
cs
or
pushf
cmp
fimuls
scas
xchg
or
lcall
inc
inc
jle
pop
std
stos
or
mov
jmp
sub
loop
inc
mov
ja
push
xchg
in
mov
fsub
xchg
lret
sub
lods
sub
leave
and
test
gs
add
movsl
mov
cmp
cli
push
insb
sahf
sbbl
dec
push
out
lock
push
cmp
jmp
mov
in
dec
leave
out
mov
push
mov
inc
cltd
insl
mov
mov
out
lods
or
mov
test
and
xlat
adc
mov
add
dec
xchg
fstl
cltd
add
dec
cwtl
push
jp
test
and
jns
mov
mov
lahf
or
jae
push
jno
aas
in
jp
cmp
gs
mov
mov
mov
dec
pop
xlat
fstpl
fwait
add
in
push
sbb
and
jns
pop
dec
lret
inc
jle
mov
xchg
repnz
or
xchg
leave
push
mov
cwtl
fcomi
jne
arpl
xchg
pop
jae
nop
outsb
lea
or
mov
push
arpl
jecxz
int
arpl
adc
call
out
stos
add
je
mov
pop
and
addr16
fs
test
or
sub
call
dec
inc
and
jo
and
xchg
adc
sub
call
jns
shlb
jl
out
mov
loope
lock
mov
fidivrl
ret
xor
push
jge
push
outsb
sahf
xchg
jle
insb
mov
xlat
mov
sub
pop
cmp
jle
pop
push
and
jb
cmp
aam
in
ret
cmpl
push
mov
sarb
cmp
mov
add
add
lret
cmp
or
fimuls
push
push
dec
dec
addr16
sub
xor
mov
sub
xor
insl
sbb
iret
cmpsl
add
inc
int
xchg
mov
daa
xchg
mov
push
arpl
shrb
sub
inc
ds
jecxz
out
loopne
jno
call
mov
in
rorl
out
cmpsb
lods
popa
xor
dec
jl
fpatan
add
sub
xlat
lock
xchg
mov
pop
xor
mov
mov
inc
js
imul
push
stos
outsb
rcr
imul
mov
sbb
iret
in
repnz
or
push
mov
fstl
ds
cld
mull
test
lock
xor
stc
iret
sub
dec
inc
test
xorb
in
icebp
jge
aad
or
pop
mov
int3
aaa
enter
mov
mov
mov
push
es
dec
in
repz
mov
push
stc
inc
sbb
outsl
aas
test
cmp
aam
sub
push
jge
je
sahf
aad
add
pop
das
hlt
sbb
xchg
and
add
out
fwait
mov
dec
lcall
cmp
push
or
mov
sub
cmp
hlt
fnsave
adc
cmc
subl
clc
outsb
out
leave
cmpsb
jno
es
outsl
push
xlat
cmp
in
out
dec
mov
xor
push
mov
sbb
jb
mov
rcl
imul
outsl
fidivl
sbbl
jae
pushf
mov
mov
in
adc
movsb
int3
loopne
cmp
add
loopne
mov
sbbl
dec
daa
cltd
mov
pop
adc
sti
aad
push
outsb
fxam
cltd
clc
icebp
popl
sbbl
sub
inc
fiadds
enter
dec
cmc
int3
popa
repnz
lea
xchg
cmp
mov
add
push
xchg
mov
pop
lods
dec
int3
adc
jno
ds
ret
lea
xchg
psubusb
push
imul
or
push
dec
cld
in
inc
aad
out
imul
fldenv
push
mov
pop
adcb
dec
adc
pop
inc
dec
push
std
rcrl
jp
imul
jne
ret
pop
sub
push
flds
je
cld
int3
testb
add
pop
mov
xchg
call
lds
dec
pop
hlt
or
mov
cwtl
xor
sbb
xchg
fidivs
loopne
test
mov
inc
lods
dec
inc
mov
mov
test
test
mov
inc
lods
lret
push
push
orl
sbb
jge
imul
shl
movsb
lahf
arpl
aad
imul
and
fadds
or
sbb
sub
pop
sbb
mov
jae
push
cmc
iret
dec
pop
je
add
cwtl
sbb
cmp
addr16
jo
scas
xor
xor
lock
inc
call
in
pop
dec
xchg
sub
push
popf
sahf
ds
in
ljmp
mov
push
add
add
lahf
test
lahf
mov
in
add
or
jnp
sbb
mov
and
mov
xchg
pop
xchg
lahf
enter
mov
xchg
out
jecxz
add
fstpl
push
xchg
or
pop
pop
lods
xchg
or
dec
ds
cwtl
mov
mull
mov
lea
inc
cmp
sti
jno
ss
xor
ficompl
xor
lahf
outsb
sub
push
jnp
jge
cmp
cmp
or
pop
add
test
push
or
fcomps
popa
aaa
cmpsb
or
push
adc
push
outsb
xlat
dec
fdivl
xchg
call
xor
orl
mov
pop
mov
test
gs
nop
js
sahf
push
insl
ror
xor
lahf
adc
mov
mov
pop
and
inc
inc
mov
repnz
mov
dec
cmpsb
push
push
mov
out
pop
sub
dec
sbb
in
inc
add
pop
shl
mov
fwait
movsl
push
cmp
sub
inc
push
popa
mov
sub
test
push
pusha
jmp
je
mov
sti
cmp
pop
xor
in
imul
and
sub
mov
ret
jge
cmpsl
gs
sbb
sub
loopne
enter
and
fildll
inc
and
ret
xchg
insl
adc
ficoml
add
cmp
movsb
aam
mov
push
xor
pop
sub
push
je
inc
call
mov
pop
lret
or
idivl
mov
rorl
shll
inc
ret
xor
fwait
outsb
mov
cli
or
dec
aas
mov
in
cs
fcoml
inc
mov
cmp
int3
cmpsl
lcall
mull
fldenv
repz
xlat
cmp
js
test
out
cmp
adc
movsb
push
jno
popa
and
adc
or
ss
test
cld
aas
mov
sub
lea
pop
push
mov
cltd
adc
xor
ss
sbbb
sub
push
rcrl
mov
inc
jno
pop
cmp
orl
pop
xchg
sti
mov
lock
mov
outsl
adc
push
jle
jp
push
lahf
mov
pcmpgtb
fsub
xchg
popf
inc
xorb
scas
test
sub
cmpsb
adc
xchg
cmp
mov
push
ret
sti
movq
inc
xor
loop
call
adc
ljmp
mov
mov
fs
jge
mov
inc
cmp
lret
movsb
and
jge
fsubl
mov
loope
pop
imul
ljmp
shrl
and
fidivrs
jp
lods
pushl
les
mov
pop
mov
xchg
dec
aam
dec
mov
or
hlt
xchg
mov
mov
lock
push
jae
cltd
lods
mov
popa
xchg
clc
div
mov
pop
sahf
fs
jle
dec
loope
popf
pop
out
int3
ds
scas
scas
mov
add
and
popf
jns
jge
aas
fldenv
adc
pop
mov
lock
outsl
lret
mov
movl
and
in
push
jecxz
mov
pop
dec
push
into
mov
int3
loope
cs
mov
fmul
mov
in
dec
insb
sub
inc
or
cmp
out
sub
outsb
fistpl
cli
in
mov
in
daa
adc
jl
js
adc
fs
in
pop
stc
push
mov
sar
inc
fldcw
jge
inc
mov
xchg
mov
loop
pop
lahf
mov
fnstenv
pop
mov
push
adc
ja
sti
mov
cwtl
xchg
pop
xchg
adc
movsb
cld
mov
pop
movsl
jbe
pop
pop
jbe
add
and
mov
mov
pop
push
push
nop
ret
std
imul
mov
repz
mov
jg
sub
or
mov
mov
push
push
cmpsl
test
data16
out
jae
xchg
lods
cmp
push
aad
push
pop
imul
cmp
insb
das
xor
sub
out
mov
sbb
dec
rolb
ficomps
push
jns
ret
lock
daa
cmp
call
fdivs
jmp
fidivrl
push
cmp
adc
jge
cs
fmull
or
std
mov
cli
cmpsl
in
push
mov
jae
cmpsl
loope
xor
push
scas
xchg
sti
shll
push
sub
inc
daa
inc
pop
shrb
jl
pop
ret
xor
lret
adc
mov
mov
repz
pop
inc
mov
mov
jo
sti
and
mov
push
ret
es
sbbl
rorb
loope
stos
aad
xor
jno
add
mov
cmp
cld
mov
ret
push
fs
clc
cmp
cwtl
gs
push
loopne
in
add
sub
test
fs
cld
fwait
jge
nop
ds
rol
sbb
rorl
mov
cmp
movzwl
lods
adc
call
fists
iret
dec
sub
add
bound
push
test
push
imul
mov
call
jecxz
loopne
testl
dec
pop
lods
shrl
sbb
cmpsl
aaa
xor
or
stos
mov
packssdw
lock
and
mov
lea
sub
aam
sbbl
pop
pop
sar
lods
sub
mov
mov
jp
sub
or
pop
dec
out
sub
loope
push
loop
in
dec
jb
mov
arpl
adc
fstps
loop
repz
sub
mov
xchg
sbb
or
data16
pop
pop
cwtl
adc
add
mov
pop
pop
inc
jb
push
cwtl
out
cmp
jae
dec
mov
and
mov
xchg
jns
jmp
test
inc
jecxz
stos
in
stos
jp
pop
pop
data16
sbbl
out
mov
pop
sti
lcall
popa
inc
pusha
sbb
rcrb
sub
inc
mov
out
sbb
scas
inc
loopne
cmp
adc
mov
fdivrs
jl
loop
jg
shll
mov
test
xchg
movsl
inc
add
push
in
mov
out
mov
push
lcall
jg
mov
dec
in
pop
mov
cmc
inc
adc
nop
pop
outsb
and
fiadds
xchg
xchg
or
aaa
test
xchg
xchg
mov
call
cmp
jg
aas
jno
and
push
jmp
xor
testl
cmp
sti
fdivl
push
call
int3
ja
aam
sysenter
cli
mov
or
fistps
inc
push
sbb
inc
xor
int
mov
pop
or
jae
ja
ret
cs
mov
hlt
and
jnp
leave
das
in
mov
fistpl
cli
push
inc
pop
sub
mov
fistpl
data16
ja
loope
rolb
loope
mov
and
in
add
add
imul
xor
call
jb
in
mov
mov
xor
mov
add
pop
dec
pop
repnz
hlt
ret
inc
out
in
inc
decb
sbb
push
scas
pushf
pop
add
mov
popf
dec
or
or
xor
sub
jae
rcrb
cmp
je
add
push
mov
dec
xchg
fwait
cld
aaa
and
mov
push
sti
mov
xchg
adc
xchg
adc
mov
insl
test
xchg
ret
lahf
lea
jge
inc
adc
cmp
xorb
stc
test
lods
outsb
dec
roll
add
jae
mov
mov
jne
push
mov
movb
ret
aam
cmpsb
repz
mov
add
dec
mov
sti
cmpl
add
andb
jge
mov
fs
mov
mov
cmc
loopne
mov
push
add
adc
ret
gs
cli
inc
xchg
lods
xchg
sbb
mov
std
ss
cli
lds
ljmp
adc
in
imul
jmp
jg
hlt
inc
cmp
out
rcr
test
cmp
jle
rorl
inc
and
pop
inc
addr16
jo
pushf
fcomip
andb
xchg
inc
mov
mov
mov
add
popa
divl
mov
mov
sbb
or
ljmp
mov
jno
bound
cs
sub
xlat
cli
cmp
cmp
adc
adc
dec
sub
dec
aad
movsl
jns
cld
push
jb
scas
leave
test
sbb
sub
lods
insl
in
scas
mov
jp
sbb
dec
adc
sti
or
mov
dec
mov
loopne
xchg
sub
cli
dec
movsl
std
stc
adc
inc
xor
cld
and
jns
adc
mov
adc
jle
ret
add
jle
bound
lcall
in
push
in
test
cltd
mov
divl
or
mov
int3
push
scas
testl
cmp
aaa
sbb
inc
test
int
sub
aaa
rcrb
adc
mov
lcall
push
rolb
pushf
fwait
inc
lock
push
jns
xor
mov
jmp
jno
and
ljmp
mov
pop
lods
sub
aam
add
rcrb
inc
xor
dec
in
jnp
adc
dec
mov
and
add
icebp
push
xchg
in
popa
or
inc
stc
scas
cmp
add
jle
lods
out
leave
aas
cli
movsl
je
fwait
mov
ss
mov
xchg
fisubrs
cld
lds
mov
bound
xchg
xlat
mov
out
or
pop
xchg
mov
push
adcb
iret
fsub
adc
int
in
int
in
xchg
fdivl
jl
cltd
addr16
mov
jg
mov
dec
mov
sbb
add
pop
inc
add
es
cmc
inc
push
mov
mov
repz
inc
fnsave
mov
jns
cld
push
rclb
sbb
mov
test
or
or
pop
or
imul
dec
call
dec
pop
mov
enter
inc
dec
push
xor
ss
pop
or
shrb
jbe
aam
and
xchg
jo
push
cwtl
pop
xor
fs
pop
and
mov
iret
insb
jne
push
sub
xchg
xor
sub
mov
iret
mov
cmp
push
pop
sub
mov
aam
xchg
mov
mov
loopne
scas
scas
inc
sbb
xchg
mov
imul
lock
jbe
adc
xor
movsb
xor
das
xor
jb
in
push
dec
jae
pushf
cmp
jp
imul
in
shlb
push
cmpsb
in
or
mov
jnp
add
fadds
mov
cld
pop
loopne
movsl
pusha
bnd
daa
cmp
dec
jmp
jge
lods
mov
jns,pn
dec
rcrl
outsb
andl
jg
sbb
push
rolb
jge
xor
cmpsl
loope
xchg
and
jns
arpl
adc
outsb
mov
cmpb
mov
ds
out
lods
aad
cmp
xchg
ds
ja
outsb
adc
stos
push
aam
pop
sub
xor
lret
lods
xor
sbb
fcoms
sub
es
mov
addl
mov
mov
call
enter
outsl
or
pop
or
iret
mov
test
movsl
stc
push
insb
out
jecxz
dec
sub
sub
leave
shll
xor
xchg
sahf
inc
bound
es
dec
adc
ja
and
jl
inc
je
or
lock
or
jmp
sub
adc
xchg
nop
xlat
popa
mov
ret
insb
lret
test
adc
push
fsubs
sub
pop
cwtl
jl
loop
inc
cli
rorl
cmp
pop
lds
mov
lea
xchg
cs
test
insl
cltd
repnz
cwtl
cmc
sbb
pop
mov
rcll
inc
push
jl
ret
add
cmp
shl
fldcw
jmp
sahf
xchg
bound
cld
data16
jge
cld
cmpsb
loop
mov
pushf
mov
jl
or
mov
add
and
icebp
out
sbb
pop
inc
push
lret
cmp
jmp
add
fbstp
in
negb
and
xor
cli
adc
adc
bound
testb
imul
insl
sub
test
enter
repnz
adc
and
or
add
pop
stc
push
inc
mov
adc
pop
iret
es
or
sbb
mov
dec
adc
divb
push
dec
stos
add
or
sub
fimull
xchg
in
loopne
inc
cmp
cmc
add
adc
jl
mov
icebp
add
enter
fildll
sbb
lods
push
push
mov
mov
test
adc
sar
ret
xchg
cli
enter
jne
inc
jmp
pop
jmp
jno
gs
aam
rorl
jecxz
inc
test
lods
lds
pop
dec
das
movsb
fisttpll
inc
inc
repnz
lock
adc
frstor
imul
push
jp
cmp
imul
popf
test
mov
stc
jecxz
push
lods
or
push
pusha
int3
push
lea
lock
enter
test
sbb
sbb
js
enter
and
xorl
mov
add
xor
jmp
push
xor
enter
stos
rclb
bound
in
adc
stc
jmp
aad
fimuls
sub
aam
outsl
pop
rcll
fwait
dec
fcom
mov
and
push
inc
movl
ret
imul
popa
xor
mov
jbe
mov
pusha
scas
sbb
pop
in
mov
sarl
push
push
cmp
add
pushf
xor
dec
imul
dec
sbb
dec
sub
jecxz
pop
jne
fisubs
jb
mov
mov
xor
je
inc
jns
mov
xor
xchg
insl
push
mov
mov
fwait
pushf
in
push
xchg
jae
insl
or
xchg
sbbb
and
test
enter
lds
insl
fcompl
xor
ja
jnp
push
push
rclb
notl
fs
ret
andb
das
add
popf
out
call
fstps
push
xcrypt-cfb
or
out
pop
arpl
dec
in
dec
xchg
in
add
into
add
cmc
inc
repz
sbb
mov
push
dec
pop
mov
test
mov
push
sahf
sub
test
mov
gs
imul
lods
cmp
xchg
daa
stos
shll
lods
fistl
and
mov
push
pop
fnsave
int
push
add
faddl
xlat
push
sub
call
adc
inc
mov
push
fisubl
daa
xchg
aaa
repnz
push
mov
in
mov
inc
popf
data16
int3
out
or
push
iret
test
mov
jmp
adc
push
cmp
push
mov
fs
out
pop
sbb
sub
shll
test
push
push
add
cmp
lea
mov
dec
aas
sub
call
aaa
pop
push
insb
mov
xor
shll
push
aam
ud1
shll
dec
mov
fwait
push
test
ljmp
fwait
inc
neg
add
popf
mov
dec
dec
xchg
stc
xorb
pusha
jbe
cmp
addr16
cmp
xchg
mov
ret
sub
mov
mov
add
daa
dec
mov
dec
dec
movl
dec
outsl
cmpsb
jp
xor
test
mov
gs
jle
pop
cwtl
dec
fnstcw
dec
cltd
lods
out
push
or
aam
movsl
inc
lret
mov
mov
push
sub
xor
and
xor
dec
mov
aas
cld
jae
loop
dec
xchg
xchg
test
mov
ss
adc
shll
ret
mov
fsubl
std
cs
sub
jnp
mov
xor
dec
adc
xchg
call
jne
stos
cwtl
pop
mov
pop
lret
lds
inc
sub
jmp
push
mov
inc
outsl
pop
repnz
in
dec
xor
fs
xlat
xor
xchg
jg,pt
or
sbb
or
jmp
or
add
icebp
movsl
movsl
xor
jmp
jns
lcall
icebp
mov
jecxz
add
sbb
xorl
lods
popl
cmc
lret
xor
lahf
cmp
into
je
je
pop
mov
mov
push
mov
iret
sahf
or
cmc
ljmp
jb
ret
jae
std
mov
or
les
shl
dec
lock
sbb
mov
sbb
adc
dec
pop
cmpsb
idivl
pop
cmp
adc
xor
mov
shr
sti
mov
sub
push
pop
subl
push
lock
test
adc
pop
mov
jmp
int
cmp
pop
pop
test
movsl
jbe
mov
mov
daa
cs
js
lret
add
movsl
aad
sbb
mov
arpl
push
pop
in
adc
cltd
lea
jecxz
lea
aam
mov
xchg
sub
ss
dec
dec
pop
push
clc
pop
ret
outsl
and
dec
mov
cli
mov
xchg
enter
pop
dec
repnz
arpl
call
sbb
lahf
imulb
lret
pop
inc
movsl
mov
js
ror
shrl
inc
out
mov
xor
inc
jmp
ja
mov
addr16
popa
sti
mov
lcall
lods
daa
fidivs
jg
xchg
fs
outsl
aam
jp
or
mov
in
shrb
daa
dec
cli
call
cmp
jl
testb
subb
rolb
ret
and
pop
ja
pop
scas
ljmp
push
movsb
cmpsl
outsl
adc
dec
je
push
push
outsb
mov
fstps
xchg
add
stos
and
cmc
add
int3
fimuls
dec
fidivrl
sub
loopne
dec
out
jbe
adc
mov
jo
das
fwait
shrl
xor
push
xchg
cmp
movsl
imul
out
and
iret
and
pusha
mov
push
inc
fldl2t
dec
xor
inc
repz
movsb
pmaxub
or
ds
lret
inc
out
adc
adc
leave
adc
leave
cmpsl
aas
adc
enter
sbb
imul
xor
push
dec
inc
sbb
sti
mov
sbb
push
jl
fistps
fbld
and
push
enter
sbb
cmp
out
jp
jl
inc
test
mov
jmp
andl
pusha
mov
mulb
push
popa
gs
ja
fldl
or
adc
movsb
gs
movsb
pop
je
and
dec
stos
movsb
std
outsb
fs
dec
inc
aad
bound
ja
insl
xor
leave
mov
nop
js
nop
xor
dec
or
inc
sbb
sub
dec
ret
in
xor
xlat
jmp
daa
pop
daa
sub
pop
xor
popf
lods
test
sbb
push
scas
and
fisubrl
rorl
mov
push
repz
push
push
sti
or
out
sbb
test
es
xchg
xchg
out
scas
dec
mov
jp
ja
loopne
je
popf
notb
mov
andl
stos
fwait
cmp
std
test
outsb
push
sbb
push
push
sub
add
pop
pop
pop
aaa
test
mov
fldenv
scas
out
jbe
jb
in
sahf
loop
xchg
pop
push
and
add
jle
les
test
xchg
xorl
push
sbb
jle
testl
leave
js
lahf
fwait
pop
stc
test
adc
mov
xor
aaa
mov
rolb
lcall
pop
jg
clc
xor
push
cmp
leave
add
fisubrl
dec
pusha
sbb
jecxz
xchg
js
push
sti
test
jns
test
mov
imul
or
bswap
adc
ja
jb
xchg
repnz
cmp
inc
std
mov
jg
addl
std
cmp
dec
pusha
xchg
jp
mov
xchg
cmpsb
add
pop
mov
sub
mov
mov
out
pop
aam
xchg
shll
test
dec
repz
inc
mov
adc
push
mov
inc
outsl
lds
sti
arpl
fcmovnb
jno
ret
lret
lret
add
daa
stos
test
inc
push
cmp
into
das
mov
insl
lods
pop
test
dec
js
es
xchg
push
xchg
in
mov
lock
dec
pusha
lcall
lret
xchg
push
das
inc
insb
lods
pop
es
lret
jl
into
inc
pop
leave
repz
sbb
sub
cmp
mov
ja
lret
cmp
and
mov
daa
pop
add
lods
inc
add
fcmovnb
add
cmc
cli
sbb
and
jns
jb
mov
in
jg
adc
mov
lea
pop
test
imull
pop
imul
pop
stos
lock
inc
outsb
inc
call
mov
sbb
popf
gs
mov
popf
xor
cmpb
sub
imul
xor
scas
cmpsl
sub
xor
js
lods
call
mov
add
into
in
int
mov
mov
loop
movsl
or
xchg
mov
mov
popw
xchg
xchg
int3
test
mov
inc
push
aaa
jo
inc
push
and
test
pushf
out
inc
inc
xchg
rcrl
shl
test
in
xor
movsl
mov
fidivrl
jecxz
ret
pop
pop
ret
test
in
mov
fidivrl
pop
pop
ds
inc
sub
out
push
cs
insb
and
fidivrs
aaa
sbb
insb
adc
out
jl
add
testb
js
mov
pop
sub
mov
sarb
xchg
fwait
inc
in
fs
test
ret
push
mov
cwtl
loopne
mov
xchg
int3
push
lret
mov
push
push
cmpsl
int3
pop
dec
sti
dec
or
pop
test
icebp
xchg
inc
or
push
push
cmp
xchg
imul
ja
les
movl
scas
mov
xor
mov
fldcw
mov
sbb
outsl
push
mov
movsb
jb
dec
push
and
xor
mov
xor
in
add
repz
sbb
and
sbb
lcall
add
rcrb
pop
xchg
jp
gs
sub
sub
xchg
pop
add
aad
data16
fisubl
jb
decl
and
mov
iret
idivl
aaa
xor
mov
or
data16
scas
and
daa
push
inc
pop
adc
cmp
dec
leave
sahf
adc
lods
repnz
lahf
inc
mov
fsubr
bound
scas
outsl
cmpsl
imul
sub
add
mov
jns
fstl
and
mov
push
dec
aad
xor
jle
clc
fisubs
push
fcmovbe
ret
mov
jbe
cltd
jle
lcall
call
jle
xchg
sbb
sub
rcrl
ljmp
pop
cmp
cmp
cli
jb
imul
lea
jg
cmp
cmc
xchg
pop
sub
mov
mov
popf
movsl
sbb
pop
mov
add
int3
push
or
cmp
lcall
push
pop
push
mov
adc
and
or
popa
inc
cmpsl
dec
mov
pop
push
je
push
or
jg
and
adc
or
fs
in
sub
lds
add
sbb
lds
and
jl
cmp
rcl
imul
dec
lods
mov
sbb
pop
jl
push
inc
lods
stos
out
xchg
xchg
xor
mov
repnz
jae
pop
jns
inc
les
jnp
adc
xchg
popa
cwtl
mov
cmp
xchg
out
daa
or
cwtl
repz
icebp
mov
jecxz
push
xorl
sarl
outsl
xor
sbb
mov
mov
adc
push
faddl
or
cmp
int
addr16
ud0
gs
loopne
divl
jp
or
add
cmp
out
gs
cwtl
push
loope
xor
les
jae
inc
int3
sbb
lea
jp
imul
mov
fcmovb
adc
faddl
lock
adc
and
ret
jns
mov
out
cld
dec
test
sar
mov
ucomiss
pop
xchg
movsb
aaa
ja
mov
aaa
cmp
imul
aad
jge
cs
rcr
add
push
push
enter
aas
scas
pushf
jg
popa
sub
les
shrb
cltd
push
adc
cmp
je
jecxz
dec
sub
mov
loop
popa
mov
dec
xor
sarl
mov
nop
or
add
mov
or
cmpsl
xchg
mov
movb
ret
imul
std
inc
xchg
adc
mov
das
std
add
mov
jecxz
adcb
in
jmp
xor
loop
bnd
push
push
gs
pop
sbbl
jnp
and
xor
les
or
jle
jne
movl
jl
cmpsb
jae
push
mov
stc
in
test
cmp
sub
out
push
inc
scas
xchg
scas
push
pop
jmp
fistpll
jo
add
aaa
ljmp
jmp
ss
push
pop
xchg
dec
adc
cmp
lret
mov
gs
dec
pop
aad
cmp
lret
outsl
sub
xchg
cmp
push
mov
enter
rorl
pop
jge
popf
jns
or
mov
or
ljmp
or
out
jae
xor
outsb
bound
dec
ss
enter
aam
int
mov
in
cwtl
ds
test
jmp
fisubrs
sbb
mov
aas
ljmp
or
sarl
jno
inc
cmp
jbe
jnp
dec
jp
div
adc
cs
rorb
in
jne
xor
sbb
addr16
pop
data16
cwtl
and
adc
nop
inc
lea
mov
jnp
fisttpl
jns
aaa
push
loope
out
xor
xor
mov
push
fcmovnb
xor
pop
rolb
addr16
add
sahf
js
jge
mov
jb
repz
and
insb
imul
add
push
in
ja
jno
out
fbstp
inc
pop
inc
cmp
ficoms
cmp
ljmp
dec
cmp
add
fstps
ljmp
inc
mov
sahf
push
call
movsl
notl
xor
push
in
inc
nop
jg
push
adc
cld
and
rcll
popf
outsb
push
jns
mov
notb
sub
mov
bnd
adc
mov
xchg
mov
js
mov
sub
aas
push
ds
pop
hlt
mov
out
popa
jl
test
inc
mov
les
add
xor
adc
ja
leave
push
imul
sbb
jle
aas
cmp
rdpmc
or
push
rcrb
cmc
pop
mov
xchg
xor
cmp
dec
sub
fistps
push
fadds
xchg
mov
add
pop
sbb
xchg
inc
jbe
int
mov
loopne
iret
scas
fimuls
mov
sub
mov
xchg
lods
cmpsb
and
ljmp
xchg
xchg
movsbl
loope
cmpsb
xchg
pushf
lods
les
inc
in
jb
mov
xor
pusha
inc
mov
push
dec
mov
ret
arpl
dec
adc
ja
push
pop
loopne
mov
repz
xchg
idivb
add
repz
or
lock
adc
mov
lret
jno
mov
push
mov
dec
xor
rorl
mov
sbb
mov
sub
push
pushf
out
cmp
iret
ret
out
or
push
sub
adc
daa
or
insl
nop
mov
lret
inc
inc
ret
jne
push
movsl
test
data16
mov
cli
pop
adc
dec
pop
in
std
data16
cmpb
adcl
mov
data16
sub
repnz
push
clc
jb
mov
mov
or
push
and
or
imul
jp
cmpsb
mov
cld
popf
push
and
sbbb
dec
dec
mov
cmp
mov
rcrl
aad
shll
stc
cld
push
mov
mov
std
mov
jg
pop
lcall
arpl
dec
cmc
xchg
adc
xchg
push
divb
jo
jne
push
mov
jg
cmp
cld
js
dec
iret
inc
data16
lock
fwait
pushf
stc
lret
dec
inc
mov
sub
out
mov
sub
call
xchg
jnp
inc
pop
repz
dec
mov
inc
sti
imul
fcoml
sub
push
fucomi
dec
aam
ret
clc
inc
xor
push
scas
and
movntps
push
mov
jp
aas
sahf
int3
clc
popa
pop
aam
scas
xchg
call
add
mov
jns
adc
or
scas
ret
and
cmc
pop
das
or
mov
push
mov
push
dec
jg
adc
add
push
popf
repz
cmp
js
enter
cmp
adc
push
inc
sbb
sub
stc
pop
mov
jge
int
int
push
icebp
enter
lahf
cmp
mov
adc
or
ror
sbb
int3
rclb
add
sahf
aad
ret
xchg
or
adc
xchg
cld
dec
inc
aas
lea
xchg
in
mov
rorl
cltd
cltd
push
int3
mov
imul
jle
pop
mov
jae
js
pop
mov
and
xorl
movsl
fs
jp
cli
les
loopne
shl
pop
jo
dec
and
sbb
dec
shll
cmp
xchg
xlat
ljmp
mov
cmp
loopne
ret
xchg
inc
sbb
inc
test
add
or
imul
or
loope
inc
loopne
push
insl
or
testl
lcall
or
sbb
inc
or
jo
mov
push
aad
idivb
cmp
cli
inc
clc
ret
jmp
and
outsb
inc
and
jns
loope,pt
aam
xchg
xchg
add
bound
xchg
add
jl
cmp
mov
mov
imul
adc
fnstsw
push
jb
out
jne
in
push
jno
sbb
jecxz
pop
lea
shrl
pop
imul
jmp
out
subl
push
stos
pop
stos
test
mov
lret
vucomisd
rcrb
test
je
and
int
bound
lea
xchg
jb
sbb
mov
mov
cli
rcr
repnz
and
stc
cltd
dec
loop
dec
not
int3
jge
icebp
je
out
or
out
sbb
loope
jge
enter
jecxz
inc
mov
lea
or
mov
xor
mov
and
dec
repnz
cmpsb
fistpll
jae
push
andb
ljmp
sub
xor
jge
ja
mov
rcl
xor
xor
loope
into
jne
xor
inc
cmp
addr16
pop
filds
xchg
jle
gs
loopne
xor
dec
loopne
stos
lcall
nop
rcr
iret
ret
mov
outsl
xor
aaa
dec
filds
pop
jle
into
sbb
pop
cmp
jb
jg
push
movsb
loop
fs
sub
mov
dec
shrl
mov
sbb
sti
sarl
dec
mov
sub
icebp
push
in
cmpsl
pop
insl
fxtract
clc
xor
enter
test
mov
dec
loop
repnz
ss
or
push
push
sbb
mov
addb
lea
arpl
mov
sub
scas
add
add
pop
pushf
mov
cwtl
stos
int
inc
xor
and
dec
stos
jbe
inc
add
push
jo
lds
xor
jne
js
adc
jp
jnp
out
arpl
out
mov
cmc
mov
mov
cmp
ret
les
sbb
in
jmp
inc
aas
std
aaa
mov
adc
jnp
mov
iret
add
pop
jmp
pusha
notb
pop
push
adc
int
sub
push
inc
gs
xchg
inc
mov
rolb
sbb
icebp
insl
add
cmpsb
push
sti
add
sub
test
or
lret
jns
scas
insb
andnps
xor
rclb
repnz
ficoms
loop
rcrl
mov
push
jmp
inc
fnstenv
mov
jmp
std
sub
adc
cs
sbb
cwtl
rolb
mov
shll
lret
daa
adc
and
dec
xchg
sahf
inc
and
cmp
std
sbb
add
cs
test
mov
push
sub
and
jecxz
xchg
xchg
dec
push
ljmp
adc
test
pop
daa
xor
test
int
ds
insb
push
outsl
lock
cmpsb
or
shrl
lret
jle
mov
push
dec
pop
sub
dec
inc
std
stc
jbe
out
or
xchg
dec
enter
out
loope
lods
or
imul
jo
or
xor
sub
ret
inc
sbb
lret
push
fs
lret
imul
je
loopne
lret
fcoms
jl
outsl
mov
cmp
scas
cs
iret
lahf
jge
cli
int
xchg
push
fwait
mov
cli
adc
dec
lret
ret
dec
jnp
sbb
push
sub
je
add
lock
mov
bound
loope
ret
sarl
pushf
shrl
and
int3
inc
pop
mov
or
lahf
mov
add
sub
popa
nop
test
cmpsb
test
mov
sbb
jne
sub
out
cmpsb
cmp
fsubs
dec
mov
sbb
pop
add
jbe
pop
out
int3
jae
shll
jbe
cmc
jecxz
es
xor
in
xor
or
inc
and
ss
push
insb
sbb
inc
jg
jno
push
lahf
fmuls
dec
lahf
xor
mov
scas
popf
ficoml
ja
lahf
lahf
cmp
push
rsm
dec
cwtl
xchg
mov
or
cmp
pop
hlt
xchg
fsubr
iret
aaa
mov
pop
std
mov
fcmovbe
mov
sbb
arpl
pushf
es
lret
mov
inc
cmp
shlb
cmp
xchg
mov
ror
in
jle
in
lds
outsl
shlb
xor
out
ljmp
test
es
and
inc
mov
pop
add
mov
fcompl
and
mov
dec
jns
or
jg
xor
pop
xchg
data16
xchg
gs
ret
pop
xchg
fcomps
adc
jg
or
sbb
pop
popl
popf
out
decb
jp
mov
xchg
test
data16
sahf
sub
daa
fisttpll
lods
aam
dec
jno
pop
andb
int
pop
das
inc
mov
stos
popa
xchg
dec
push
aad
and
inc
je
mov
inc
pop
jmp
aaa
shlb
xchg
push
inc
fimuls
aaa
shrl
xor
lods
push
dec
insl
jo
push
mov
adc
adc
fwait
aad
out
repz
loope
dec
sbb
in
push
push
mov
out
xchg
aaa
push
icebp
add
fisubs
outsb
xor
pop
jp
push
sahf
call
cmp
sbb
and
cli
mov
ds
das
stos
xor
or
mov
mov
push
loop
xchg
aad
aaa
push
out
mov
fists
ret
pop
mov
and
das
cwtl
arpl
bnd
incl
sbb
in
dec
ret
aam
ret
hlt
lret
push
sub
push
jp
and
jp
push
or
je
jp
xor
in
call
sarl
mov
jl
sub
mov
add
fs
mov
lret
pop
shll
xor
into
mov
in
gs
popa
stc
jl
or
pop
lock
cmc
orb
or
rcrl
lret
out
push
dec
js
sub
lahf
xchg
gs
and
stos
push
aad
icebp
out
jno
lahf
mov
pop
fidivrl
imul
xor
xor
leave
jno
test
sbb
jnp
gs
shlb
sar
push
in
lock
jmp
in
iret
cmp
mov
jne
jnp
in
ficompl
jg
mov
or
jae
test
xor
loope
cltd
iret
icebp
adc
jns
sub
inc
xchg
lcall
clc
lret
sbb
sahf
jg
sbb
lods
dec
sub
mov
cwtl
add
or
ret
push
xlat
fbstp
aaa
insl
cmp
xorb
ja
inc
mov
orb
in
jl
or
mov
std
xorl
xor
push
adc
int3
push
stos
mov
sbb
ret
gs
or
in
out
pop
clc
aaa
cwtl
push
mov
cmp
cmp
les
lcall
mov
sbb
sti
lods
test
mov
sub
je
sbb
sub
int
mov
or
mov
clc
stos
mov
clc
dec
outsl
repz
aas
rcrb
and
jle
pop
stos
mov
mov
js
adc
jae
cmpxchg
and
mov
sub
icebp
inc
fistpl
or
adc
inc
iret
sbb
cmpsb
mov
fmull
lcall
xor
xor
mov
mull
ds
pop
dec
aaa
arpl
hlt
std
and
inc
add
push
cmp
adc
test
repz
das
orb
xchg
pop
mov
ja
es
les
mov
pop
insl
loope
sbb
xchg
jge
xor
pop
pop
lock
aaa
push
int
add
push
daa
xchg
jmp
std
cmc
adc
sbb
adc
xchg
sbbl
and
mov
jmp
adc
comiss
insb
sub
imul
inc
cmpsl
adc
insb
hlt
outsl
inc
repz
pop
dec
mov
jmp
imul
push
cmp
fwait
cmpl
mov
xchg
lds
dec
aam
dec
scas
or
rcrb
mov
mov
popf
repnz
imul
nop
ret
xor
xorb
stc
sbb
mov
lock
inc
mov
add
xor
push
jns
dec
mov
std
in
and
call
imul
fdivl
pop
vsqrtsd
pop
je
cltd
je
adc
clc
ret
arpl
xchg
cmp
imul
jmp
mov
insb
in
cwtl
paddusw
test
mov
sbb
rcr
push
lods
xor
rclb
sbb
dec
das
mov
xlat
jge
mov
jae
sbb
push
repz
fnstsw
scas
clc
mov
frstor
xor
mov
test
imul
sbb
and
fmul
sub
sti
pop
gs
pusha
push
adc
inc
mov
lret
mov
cmpsb
xor
mov
add
rorl
push
fdivr
mov
imul
aaa
and
sbb
sbb
in
es
pop
and
push
mov
cwtl
divl
lock
pop
gs
shll
movsl
and
dec
cmp
adc
out
mov
insb
ljmp
cmp
or
loop
popa
movsl
mov
dec
dec
aas
jl
outsl
inc
dec
js
xchg
sahf
stos
mov
jmp
sbb
push
fcoml
call
mov
jae
mov
mov
xor
xchg
push
arpl
lret
xor
cmp
jns
sbb
in
mov
fistpl
les
movsl
sub
pop
loope
dec
adc
into
or
jp
fwait
jbe
mov
cmp
out
xchg
out
out
aad
fstpt
leave
push
push
dec
dec
out
je
jg
pop
push
xor
push
pusha
push
jne
xchg
imul
mov
pop
xchg
rclb
pop
dec
ja
inc
add
sbb
mov
and
and
mov
push
inc
sarl
mov
cmpsb
fmul
ret
dec
xchg
lock
ret
mov
hlt
add
dec
or
lret
shlb
cs
pop
mov
inc
add
and
lds
jae
lock
jo
stos
sbb
or
mov
leave
mov
nop
push
test
les
sub
movsl
push
es
jo
lahf
mov
pop
adc
sbb
or
inc
inc
pusha
test
inc
fbld
std
mov
add
jp
adc
jmp
lods
test
sbb
sub
push
inc
sarb
xchg
add
push
popa
xchg
and
movsl
mov
mov
test
mov
test
popa
pop
and
jo
mov
xchg
xlat
sub
sbb
sub
ljmp
clc
sarl
mov
mov
jne
inc
xorl
sub
call
dec
jb
push
es
mov
lds
mov
lock
cmp
push
int
test
cltd
pushf
inc
pop
xchg
inc
xchg
xchg
mov
xor
xor
cmp
lahf
and
sub
mov
sub
mov
shrl
mov
cld
sub
out
je
or
out
add
scas
pop
lcall
xor
imul
in
inc
je
ret
add
push
or
xor
mov
popf
repnz
movsb
hlt
or
xchg
das
dec
into
sbb
jbe
lods
lds
fwait
mov
std
bound
mov
flds
mov
hlt
dec
cmpb
xchg
mov
add
xchg
xchg
imul
mov
lret
sub
xlat
cmc
push
jmp
and
popa
pop
mov
fcompl
lret
mov
adc
mov
jno
hlt
inc
add
adc
ljmp
sub
sub
or
cmc
into
pop
mov
jl
dec
inc
je
out
jl
stc
pop
pop
push
fbld
das
mov
orl
aas
mov
mov
sbb
shr
addr16
out
jae
fidivrl
out
add
ds
adc
mov
push
insb
push
sahf
fcom
xor
mov
mov
sub
jmp
in
das
into
sahf
out
fldl
mov
std
mov
mov
xor
es
mov
leave
jo
enter
mov
dec
pop
sbb
push
jns
push
test
mov
std
cmp
xor
inc
xchg
sar
jle
mov
call
inc
and
mov
outsb
icebp
data16
inc
popf
cmp
jmp
inc
pop
test
je
mov
lret
xor
in
cmp
mov
arpl
inc
insl
call
fstl
adc
iret
fimuls
or
xchg
mov
mov
xchg
das
push
notb
xchg
inc
aam
sub
pop
xchg
loope
leave
add
repnz
fists
gs
inc
test
xchg
repnz
cmp
inc
imul
add
popa
js
addr16
push
xor
adc
into
imul
fstl
fsts
jmp
mov
push
shl
mov
xor
pop
insb
in
adc
push
mov
jmp
shrl
xchg
cmp
cltd
jmp
clc
inc
idiv
es
xor
mulb
in
inc
or
repz
je
andl
jae
jbe
mov
xchg
cmpsl
xchg
mov
shr
jmp
je
add
mov
iret
mov
cli
mov
fnstenv
jl
hlt
pop
add
arpl
mov
out
cs
in
in
dec
jp
mov
jp
inc
inc
xchg
mov
incb
adc
jmp
pop
mov
nop
sub
xchg
inc
jb
mov
pop
cmp
sub
enter
jnp
lea
loopne
aas
sub
push
push
push
jb
push
mov
sahf
add
push
push
scas
and
icebp
rcrb
faddp
jle
sub
xor
mov
fimull
xor
add
repz
mov
sbb
jmp
test
xchg
xor
jno
pop
es
mov
pusha
pop
cmp
sbbb
cmp
scas
out
cltd
test
push
pop
add
fwait
test
mov
and
push
lret
in
ja
mov
and
lock
loopne
pop
push
jmp
sarb
jp
cmp
hlt
mull
fwait
imul
adc
testl
xor
fwait
popf
loopne
cmc
xchg
mov
push
pop
std
test
inc
mov
push
fsubrl
ljmp
arpl
pop
ja
mov
adc
or
inc
pusha
dec
stos
in
int3
cmc
std
mov
dec
pop
sub
fisttpll
aaa
pop
scas
mov
dec
push
scas
adc
pop
jbe
pop
jo
sbb
sub
sbb
add
jg
mov
mov
push
add
dec
lods
lret
xchg
bound
loop
adc
pop
add
cmpl
mov
mov
mov
dec
pop
dec
xchg
pop
mov
pop
jl
mov
fsubl
push
je
stc
adc
sub
int3
cwtl
in
stc
mov
mov
aam
sbb
add
in
jno
xchg
adc
xor
pop
test
test
jo
push
sub
je
and
jns
lods
push
dec
ds
mov
cmp
icebp
sbb
jne
xor
out
xor
shrb
popa
push
popf
fsub
icebp
movsb
inc
cwtl
ficoml
js
movsb
enter
mov
mov
lcall
adc
clc
jp
add
hlt
insl
rcrb
loop
es
aam
outsb
fsubs
dec
push
fadd
inc
insl
imul
dec
push
sti
sub
inc
faddl
rolb
add
rcrb
nop
popf
into
cmp
mov
xchg
je
in
sarb
push
jno
lock
outsl
mov
dec
cmpsb
imul
dec
arpl
sub
inc
xchg
jne
push
subb
je
mov
pop
jle
into
inc
lea
xor
push
xchg
outsb
pop
out
mov
inc
ljmp
mov
mov
shrl
repz
jg
out
adc
loopne
cmpsb
mov
lret
mov
pop
stc
fldenvs
and
aad
out
sub
mov
scas
adc
jne
dec
lahf
daa
dec
cltd
aam
cwtl
test
sub
jae
or
cwtl
push
pop
iret
out
lods
mov
cmpsb
xchg
arpl
pop
dec
sti
ret
jecxz
or
sub
cmp
pusha
int3
cli
mov
loope
stc
mov
xchg
gs
dec
out
and
mov
inc
data16
mov
out
adc
jmp
xchg
rol
pop
inc
lock
xor
push
xchg
mov
clc
dec
push
mov
and
inc
push
push
sbb
adc
jmp
pop
lods
jmp
addb
adc
xchg
repnz
fistl
add
mov
cmp
cld
lret
mov
sti
xor
pop
sub
jg
and
int
call
ret
cltd
and
and
imul
repnz
gs
xor
cmp
rcrl
gs
cmp
cmp
fisttpll
push
xadd
loop
pop
inc
aad
or
or
rolb
fstpl
dec
mov
jp
dec
pop
push
jo
pop
mov
les
xchg
and
cwtl
cmp
je
mov
popw
pop
int
dec
fcoml
test
test
mov
pushf
pop
xlat
ja
imul
cmpsl
jnp
mov
gs
mov
and
pop
out
lds
icebp
cmp
ret
sub
gs
cltd
in
pop
inc
lret
leave
cltd
jp
inc
sbb
sub
cmp
and
jbe
cwtl
cli
cmpsb
and
xlat
jne
xchg
and
bound
call
out
and
push
jmp
sub
cmpsl
push
mov
mov
test
call
cmp
fmuls
xor
fwait
dec
ret
inc
mov
into
repnz
and
mov
movsl
or
fmuls
xor
add
adc
jo
add
add
int
ljmp
push
in
nop
xor
mov
dec
rorl
incl
bound
sub
sbb
insl
sbb
adc
lods
shrb
popf
pop
or
jno
les
cmp
add
xchg
mov
and
jl
cmp
es
orb
inc
lret
leave
jnp
adc
out
ffreep
pop
pop
in
jno
rol
cmp
xor
xchg
mov
lret
pop
ret
sahf
and
dec
negl
lock
in
out
jle
pusha
inc
aas
icebp
add
push
mov
push
mov
and
or
lret
imul
loop
cmp
adc
lret
es
hlt
ljmp
jl
jle
out
sbb
xor
add
sbb
adc
sbb
push
aad
outsb
or
sbb
push
push
xchg
mov
idivl
mov
icebp
mov
loopne
mov
add
loope
jne
stos
loop
test
outsb
fxch
icebp
add
das
fadd
movsl
cmp
pop
add
lods
push
xchg
jne
sahf
cmc
cmpsl
js
call
js
sbb
test
sbb
into
dec
pop
jmp
aaa
dec
dec
aad
jp
movsl
xchg
push
push
jge
mov
cli
push
push
jg
pushf
jle
out
xor
adc
sbb
lea
test
push
cmp
ljmp
es
inc
pop
jg
ret
inc
testl
lods
test
inc
mov
dec
adc
jbe
dec
sbb
std
cmp
push
addr16
jecxz
neg
mov
sbb
test
push
ret
or
jne
ret
lock
out
adc
aam
mov
inc
sbb
jecxz
adc
es
sbb
fisubl
insl
mul
xchg
dec
outsl
int3
movsb
call
jne
push
cmpsl
lods
rorl
mov
nop
jecxz
cmpsl
jnp
int3
dec
mull
jecxz
jg
push
leave
pushf
pusha
mov
loop
and
mov
xor
mov
xor
lods
cmp
jbe
insb
adc
or
pushf
inc
mov
dec
inc
push
ss
jl
mov
jbe
popl
mov
imul
sub
in
ds
lahf
adc
lds
dec
xchg
mov
shrl
pop
xchg
cmp
lcall
jne
pop
jl
popf
daa
sbb
test
aam
jp
dec
lock
and
xor
pushf
sbb
mov
outsl
push
jb
in
xchg
addr16
sbb
xor
in
ss
mov
push
xchg
loope
xchg
testl
mov
iret
in
sbb
out
sub
std
and
addr16
inc
call
mov
iret
jne
xchg
xchg
rcll
pop
xor
std
int
test
mov
pusha
mov
mov
scas
push
jns
mov
and
xchg
insl
testl
xchg
cwtd
pop
jp
mov
pop
lret
into
jno
push
pop
test
xchg
rcl
inc
fstpt
inc
add
cmp
or
mov
ret
mov
or
xadd
sub
push
jp
dec
or
jo
scas
loop
scas
insl
cld
fsubs
inc
stos
pop
pop
xor
dec
stos
pusha
mov
js
sub
xchg
cmpsl
push
cmpsb
mov
adc
jns
insb
test
jnp
inc
inc
xlat
data16
in
cltd
adc
cmp
sbb
sbb
push
and
mov
testb
cmp
mov
test
mov
outsl
dec
push
pop
test
aas
movb
dec
cmp
push
xchg
fxch
es
mov
ss
jge
or
and
js
into
out
mov
inc
arpl
popa
in
rclb
mov
scas
and
out
arpl
xchg
pop
jnp
jnp
mov
movsl
lfs
es
sbb
push
jge
repnz
lock
jae
xor
arpl
jg
popa
test
jle
and
mov
push
add
jns
pusha
pop
orl
sbb
pop
dec
add
ljmp
pop
jno
add
dec
aad
cmpsb
sti
loopne
jecxz
push
dec
fisttps
movb
sti
jnp
and
mov
cld
movsl
je
popf
jbe
cmpsb
push
xchg
cmp
sub
cmpsl
sub
and
insb
or
dec
mov
lret
push
sub
sub
icebp
lahf
mov
imul
sahf
mov
repz
jp
or
xor
xor
out
jl
or
aad
psrld
popf
jnp
add
xchg
jl
push
subb
inc
push
fwait
add
lock
xchg
sub
xchg
mov
push
shlb
xor
int3
stos
jo
or
imul
mov
cmpsb
sbb
dec
dec
iret
jne
and
lret
std
sbbl
arpl
arpl
aas
cli
sub
mov
lock
sub
shrb
lock
iret
fcompl
nop
pop
push
jp
pop
cmc
jg
nop
sbb
roll
cmp
fs
sub
insl
movl
and
loopne
mov
fwait
ret
push
and
add
test
arpl
jnp
mov
jmp
dec
sbb
shrl
pop
jge
xor
cwtl
dec
xlat
stos
scas
jle
mov
std
sbb
jne
sub
add
jge
adc
das
imul
cmp
ret
hlt
repz
mov
xor
rcl
cld
cmp
jb
lods
outsl
jo
loop
xchg
shlb
xor
lret
stos
dec
outsl
out
ret
ljmp
mov
outsl
push
in
add
inc
iret
mov
xchg
push
pop
roll
push
stc
test
aas
cmpsb
bound
xlat
addb
icebp
movsl
and
lock
push
loope
shlb
bound
lahf
jmp
and
sbb
inc
pushf
dec
clc
mov
test
out
sbb
pop
iret
and
mov
mov
dec
lods
mov
mov
and
cmp
iret
sub
xchg
nop
jns
ja
pop
sti
ret
sbb
xorl
dec
push
jb
in
pop
sub
and
test
test
push
xor
mov
xchg
cli
sub
dec
lds
cmpsl
xor
push
push
fdivrl
fwait
inc
sub
repz
jle
adc
dec
mov
mov
pop
pop
orb
jns
push
pushf
or
push
movsl
pop
aaa
leave
ret
hlt
in
push
std
push
jmp
jns
outsb
jo
sti
jmp
mov
mov
push
pop
sub
xor
test
push
call
jmp
sahf
push
sub
dec
inc
xor
lea
and
scas
inc
stos
jg
andb
mov
stos
mov
pop
dec
imul
loopne
adc
xchg
insb
adc
pop
jmp
es
es
insl
test
sbb
loope
faddl
inc
icebp
outsb
or
push
popf
adc
outsb
imul
pop
ret
lahf
cld
xchg
daa
mov
mov
push
adc
mov
adc
popf
push
xor
ljmp
cmp
push
and
dec
cmp
subl
ja
cmpsl
cmp
pop
int
int
jecxz
xor
call
test
int
aaa
in
jmp
daa
sbb
jns
stos
mov
and
inc
mov
pop
roll
jo
mov
out
ret
ljmp
outsb
enter
jle
adc
push
xor
inc
test
or
xor
in
jp
imul
or
cmp
pop
xchg
fisttps
jge
or
xchg
gs
xchg
in
lahf
pop
into
cmc
movsb
dec
jmp
cmp
icebp
add
dec
inc
push
mov
cmp
xor
lcall
in
cmpsl
ljmp
push
cvtdq2ps
jae
lods
aas
into
and
or
stc
xchg
adc
lods
lds
mov
mov
adc
and
mov
mov
push
jge
mov
out
imul
sbb
addb
dec
pusha
int
out
into
sbb
maxps
mov
mov
iret
mov
cmc
fs
or
xchg
repnz
sahf
notb
push
mov
jbe
lcall
xchg
test
xchg
jnp
mov
popa
stos
data16
sub
out
cmp
loop
sub
orl
mov
les
pop
pushf
dec
xor
stos
dec
xlat
sbb
adc
sbb
mov
jae
jbe
int3
and
pushl
ds
and
mov
out
inc
ljmp
rorl
call
lret
add
ret
or
push
cs
int
cmp
xchg
cld
addr16
sub
mov
repz
sub
adc
andl
jo
into
push
hlt
jns
adc
push
xchg
xchg
mov
test
inc
popf
jno
pop
test
cmp
dec
cwtl
out
and
test
sub
xchg
xchg
fs
daa
cmp
add
push
test
out
mov
cmp
icebp
xchg
pop
and
adc
inc
push
sbb
lods
ret
pop
mov
dec
loop
hlt
filds
mov
sub
cmc
test
fs
ror
aad
rolb
pop
andl
or
push
or
xlat
pop
jns
sahf
pop
mov
rcll
mov
dec
cmp
cmp
or
adc
pop
in
lods
into
ss
push
sti
pop
cmpsl
repnz
sub
or
push
or
push
pushf
outsl
fcoml
test
addr16
add
pop
and
mov
adcl
imul
test
jo
xchg
sbb
ret
cwtl
mov
outsl
call
or
jne
lret
ficoms
test
jecxz
jle
nop
cmp
mov
cltd
xchg
ret
inc
push
sub
mov
shrb
jbe
jle
inc
int3
es
movsb
testl
fnstsw
and
sub
mov
inc
mov
sub
xchg
jg
fcmovnu
adc
xchg
rclb
inc
fstps
lahf
incl
outsb
mov
xchg
add
cmp
dec
arpl
pop
ficoms
jmp
pop
iret
lods
xor
add
arpl
daa
hlt
imul
daa
test
push
inc
test
mov
divb
lds
xor
xchg
loope
mov
mov
ds
push
lea
jnp
xor
sar
dec
jge
inc
jbe
mov
mov
pop
movsb
xchg
mov
fcompl
dec
jbe
mov
je
test
lret
mov
mov
sbb
in
gs
insb
fs
popa
out
movsb
sub
push
aam
leave
xorb
lret
mov
push
adcb
xorb
nop
sub
data16
test
add
xchg
rdtsc
xchg
xchg
xchg
mov
ja
push
dec
mov
pusha
lods
gs
ss
add
stos
or
or
and
cltd
faddl
into
xor
sub
ret
mov
pop
and
jns
mov
or
pop
inc
pushf
loop
xlat
inc
dec
dec
repnz
ljmp
pop
dec
mov
add
stos
xchg
leave
notl
xchg
outsl
cmp
xchg
enter
imul
sbb
scas
aas
test
inc
mov
les
rorb
iret
or
lods
jl
icebp
xor
cmp
outsb
insb
xor
add
push
push
loopne
dec
pop
and
jae
xchg
mov
roll
test
shl
push
movsb
jge
cmp
push
adc
add
or
xchg
jno
mov
lds
mov
test
sbb
pop
rcrl
aad
or
repnz
faddl
je
push
lea
insb
mov
fcoml
push
adc
ja
addr16
les
ss
cltd
popa
loop
out
stos
push
lea
repnz
jns
mov
inc
xchg
jmp
loope
shlb
add
adc
or
jecxz
fs
and
lahf
jmp
push
aam
jecxz
dec
lock
clc
adc
ud0
xor
cwtl
jb
pop
or
fstpl
enter
fcompl
push
ja
std
mov
imul
rorb
pop
repnz
dec
movsl
pop
mov
outsb
sti
push
popl
sbb
mov
adc
jl
stos
fidivl
xor
dec
in
cli
ds
cmp
adc
andb
xor
arpl
sub
push
mov
mov
add
add
imul
in
into
mov
clc
xchg
cmp
pop
shrb
jb
push
iret
hlt
cmpsl
xchg
fs
xchg
rol
mov
xor
fdivs
xchg
out
std
lret
mov
stc
mov
ss
sbb
add
fwait
xchg
push
mov
js
decb
adc
fistl
mov
sub
dec
stos
ss
or
fsubr
imul
mov
fcmovnbe
sar
rcrl
pop
mov
xchg
pop
sbbb
mov
cltd
scas
pop
push
xchg
fnstsw
popa
mov
xor
sar
jl,pn
outsb
pop
mov
push
xchg
cmp
adc
ret
enter
lret
movsb
pop
ret
inc
fimull
testl
mov
xor
sub
stos
dec
mov
imul
subb
xchg
sarl
mov
and
pop
je
cwtl
movsl
int
aaa
fidivs
push
subb
sub
insb
xchg
inc
lahf
rorl
shll
cmp
insb
xlat
push
and
rcr
dec
pusha
aam
mov
dec
out
xchg
mov
repz
mov
mov
add
imul
push
cmp
jo
pop
daa
fcoml
test
mov
jo
fstl
aaa
test
mov
push
jecxz
jbe
popf
cmp
aad
adc
pop
xchg
fistpll
add
shr
outsb
or
jnp
enterw
das
scas
sub
sahf
xor
enter
xchg
mov
hlt
lcall
mov
mov
adc
push
aaa
je
sub
or
sbb
sbb
lahf
xor
jl
dec
mov
push
dec
out
sbbl
dec
lods
xor
mov
fimull
sub
push
and
adc
adc
adc
mov
nop
jecxz
push
mov
in
jle
xor
cltd
push
adc
jmp
xchg
frstor
fnsave
jl
test
add
dec
mov
jge
addr16
xchg
mov
test
or
sarl
aaa
pop
or
scas
jge
adc
sub
lcall
into
out
add
mov
pop
xchg
icebp
icebp
ret
pop
fldenv
and
pop
sbbb
or
je
leave
je
add
daa
in
scas
insb
and
adc
or
addr16
push
dec
in
mov
mov
mov
testb
data16
adc
imul
lea
jmp
int3
push
test
add
shlb
mov
scas
lahf
or
and
ret
test
or
push
mov
fs
es
rol
cld
cmp
dec
jnp
outsb
push
cld
int
mov
cltd
in
test
or
and
sub
dec
and
bound
and
mov
sbb
hlt
add
xor
or
cwtl
jmp
enter
test
mov
lea
sub
xchg
scas
jo
push
sub
cmp
xor
mov
xlat
sarl
loopne
mov
fsub
cmpsb
fdivs
sub
inc
movsl
adc
gs
loopne
jmp
aas
sti
push
push
adc
and
scas
xorb
xchg
dec
or
ds
imul
and
pop
out
mov
cmp
dec
xchg
imul
mov
cmp
jno
fidivrl
mov
leave
repnz
int3
adc
mov
add
ret
adc
adc
in
shlb
lods
sbb
iret
jne
adcb
cmp
dec
push
mov
mov
shrl
mov
mov
xchg
leave
pop
xor
mull
out
js
ret
jns
fldl
dec
jns
cwtl
stc
out
jmp
div
or
out
loop
and
lds
rorl
xor
mov
mov
push
outsb
cmc
repnz
jne
ss
xorl
incb
or
cmp
filds
mov
adc
xlat
jno
push
cmpsl
fbstp
push
and
jl
int3
jno
mov
push
or
insl
xchg
std
cmp
out
in
fisttpll
stc
out
pop
mov
int
mov
cs
add
add
and
jle
cmc
les
push
xchg
xchg
xchg
jecxz
push
fwait
addb
mov
cmc
cmp
sbb
add
cmp
cmpsb
addr16
test
inc
jo
mov
mov
rcrb
or
inc
ficomps
xor
int3
jecxz
sbb
stc
add
or
movsl
inc
dec
xor
test
push
outsb
call
data16
addl
into
mov
pushf
shl
adc
cmovbe
inc
mov
mov
int
outsl
lea
movsb
jmp
je
hlt
rclb
test
imul
fdivs
push
and
pop
xchg
xchg
push
int
leave
mov
add
xchg
imul
mov
sbb
loope
cmp
lods
pop
push
sahf
sub
rorb
daa
and
and
add
das
lods
cmp
pop
jnp
dec
xor
adc
xchg
cmp
imul
loop
and
call
je
dec
movb
xlat
lods
imul
int
mov
push
out
or
std
rcr
xor
jmp
out
lock
mov
mov
inc
sub
rcl
sbb
push
subb
push
inc
jns
mov
out
lds
xor
and
ficoms
nop
pop
test
push
in
sahf
push
xor
sbb
call
or
cmp
outsl
add
into
out
lea
pushf
js
cmp
rcll
mov
sub
sbb
js
movw
dec
xor
cs
cwtl
fsts
add
jb
ljmp
nop
les
mov
les
or
popa
push
ret
xor
jle
push
cmp
mov
sub
shrl
sub
fstl
xchg
into
lds
fs
inc
mov
ret
sub
dec
les
cltd
mov
pop
and
mov
jmp
out
dec
adc
dec
test
icebp
scas
sahf
into
xchg
jg
add
and
sti
mov
mov
stos
lcall
sub
push
sarb
jnp
sahf
sbb
cmp
daa
dec
orb
and
mov
sub
inc
ret
ss
test
pushf
add
in
pop
subb
lock
mov
cld
std
pusha
mov
cmp
sarl
dec
cli
pop
xor
jle
cmp
decl
ljmp
inc
ret
lret
mov
icebp
sbb
mov
fsubrp
in
adc
cmp
adc
jmp
orl
lock
aam
pop
mov
push
ja
pushf
imul
mov
mov
sub
sbb
cmp
add
mov
and
cmp
out
pushf
dec
stc
sub
pop
cs
shl
pop
mov
or
es
nop
int3
lea
aaa
push
das
xchg
out
icebp
data16
das
dec
mov
dec
bound
pusha
scas
stos
daa
push
push
xor
and
sbb
test
sbb
stc
fucomi
mov
dec
or
mov
popa
bound
imul
lcall
push
lahf
mov
sbb
cmpsl
push
cmpsb
fdivp
push
xor
rorl
adc
popa
out
ljmp
les
in
adc
leave
leave
test
lods
std
lods
shlb
push
pushf
mov
pop
mov
add
je
mov
in
add
jg
adc
add
into
mov
jbe
mov
dec
stos
sbb
add
add
pop
ljmp
xchg
nop
addr16
push
dec
pop
js
jb
jns
int
lods
sti
dec
in
fiaddl
push
insb
mov
sarb
scas
sub
pop
sbb
movsl
sub
test
add
repnz
jge
push
aas
xchg
lcall
shrb
add
iret
hlt
aad
cmpl
ja
cltd
out
inc
mov
imul
out
jp
and
jns
cmp
test
popf
jb
mov
add
mov
or
mov
cs
adc
mov
sti
and
pop
jge
push
mov
jb
sbb
rclb
popa
adc
mov
addr16
mov
mov
jmp
inc
flds
int
lods
push
xorl
into
lea
xor
push
out
cmp
shll
je
mov
xlat
mov
orl
lods
pusha
les
xor
dec
popa
jbe
loope
cwtl
int
jge
push
cmp
shlb
mov
add
ss
dec
sti
sbb
inc
pop
push
lods
mov
cs
ja
push
insl
or
imul
stc
lods
mov
popf
jnp
cmp
or
psubusw
sub
mov
push
leave
mov
or
inc
jmp
jb
addr16
les
mov
inc
lcall
dec
dec
pushf
stos
inc
push
cmpsb
cmc
into
adc
and
cld
lock
pop
adc
int3
mov
clc
loopne
add
cs
pusha
xchg
lret
outsl
jecxz
scas
pop
dec
xor
and
outsb
mov
aas
push
aaa
xchg
in
or
pusha
negb
int
loope
in
dec
and
pop
and
or
mov
mov
and
xchg
jle
xchg
js
mov
push
dec
xchg
cs
roll
jae
fwait
adc
mov
ja
adc
inc
fsubp
xor
sub
pop
iret
adc
mov
movsl
sub
aam
je
xorb
stc
outsb
out
inc
mov
mov
cmp
aam
jl
imul
aam
fistpl
mov
and
xchg
mov
cmp
and
je
sbb
mov
popf
shlb
in
push
clc
sbb
add
dec
in
lods
push
xchg
and
cmp
fcom
dec
inc
mov
sub
sbb
jl
mov
add
jnp
cmp
push
push
adc
ret
adc
pusha
icebp
adc
sar
into
repz
orl
jle
fadd
pop
jno
pop
iret
lods
cld
adc
jmp
sarl
aad
icebp
mov
lahf
jp
cmp
repz
loope
inc
cmp
iret
adc
mov
fsubrl
pop
std
mov
inc
cwtl
pop
sub
pop
mov
testb
aad
ljmp
aam
push
add
adc
jp
mov
rcrb
les
adc
aam
xchg
dec
test
cwtl
movsb
dec
rcr
push
pop
dec
cmpsl
sub
inc
pop
mov
jae
sbb
cwtl
ja
mov
outsb
fs
mov
iret
data16
stos
subl
or
lret
pushf
xor
gs
mov
lods
mov
xlat
insl
pop
sub
pop
movsl
push
pushf
mov
inc
sub
stos
cmp
xor
inc
jle
mov
scas
and
dec
pop
mov
adc
inc
mov
dec
aam
xchg
out
imul
cmp
pop
mov
cmp
and
xchg
arpl
push
cmp
gs
movzwl
dec
loopne
mov
inc
bound
ret
xor
push
push
xor
sbb
stos
nop
repnz
out
stos
xchg
adcl
es
out
xchg
sbbb
pushf
mov
inc
fcoml
adc
mov
ds
in
push
mov
outsb
cmp
int3
xchg
pop
fs
imul
mov
and
es
dec
shlb
repnz
cmp
or
sahf
and
test
gs
decb
and
sub
int
mov
ret
sar
cmp
pop
fstpt
imul
xchg
imul
data16
xor
bts
in
push
xor
in
xchg
jmp
jo
jp
fisttpl
fwait
hlt
cmp
les
mov
testl
addb
into
jb
add
sbb
and
repnz
pusha
ret
pop
inc
rol
fisttpll
or
arpl
inc
add
lea
jo
faddp
es
ja
js
jne
out
add
pop
cmp
shll
xchg
cwtl
les
mov
cld
loopne
test
in
jno
test
adc
add
mov
fnstenv
inc
fwait
leave
and
fs
pushf
push
xchg
inc
xor
push
pop
fwait
leave
push
push
arpl
pop
es
fisubs
bound
out
movsl
jle
pushl
cmc
imul
fwait
sbb
rcrl
shll
aad
pop
les
mov
jl
add
adc
mov
pop
ficompl
rcrb
adc
dec
pushf
cmp
pop
in
loope
sbb
cmp
inc
fidivrl
cwtl
inc
sub
lea
test
shll
imul
int
jg
pushf
xlat
pop
pop
cmp
iret
and
test
adc
jle
inc
enter
lret
out
test
addb
push
sub
jnp
xor
push
jbe
xor
lock
push
and
jo
jo
js
cwtl
mov
adc
movsl
js
ds
out
inc
mov
imul
out
pop
cmc
jle
out
push
in
pusha
inc
dec
pop
test
cmp
jno
xor
or
mov
aam
or
loopne
add
mov
lds
inc
or
lds
cs
cvtpi2ps
sub
inc
and
loop
sub
aaa
push
test
in
adc
fadds
xor
or
adc
cli
int
push
sub
xchg
cmpsb
cmp
out
cmpsb
adc
push
lret
mov
cmp
test
push
repnz
data16
cltd
leave
fisttpll
push
aad
sub
xchg
ds
lret
add
popl
push
xchg
pop
test
jg
adc
xor
cmp
push
adc
dec
lahf
jbe
add
mov
dec
cwtl
ror
jecxz
jge
ds
push
lcall
aam
and
ja
xchg
jg
fwait
stos
pop
std
xchg
cmp
jae
pushf
lahf
ret
in
push
adc
js
lahf
pop
pop
out
adc
mov
arpl
sub
lock
sub
pop
or
xchg
or
shr
cli
jle
add
or
ds
out
xchg
mov
or
nop
xorb
push
jmp
pop
cwtl
fisubrl
push
push
ljmp
aad
cltd
xchg
outsb
dec
inc
pop
jbe
ja
pop
shll
sbb
insl
test
adc
std
fwait
lret
lahf
lods
pop
xchg
inc
push
shl
iret
mov
stos
mov
rolb
cmpsl
sub
sbb
push
test
sbb
jle
in
mov
xchg
jl
imul
mov
jecxz
mov
or
jmp
adc
daa
mov
dec
mov
gs
repnz
stos
pop
imul
imul
xorb
sub
mov
jle
rorl
cltd
dec
mov
scas
xor
mov
mov
ret
push
push
pop
add
and
xchg
mov
gs
xchg
xchg
lret
jbe
mov
int
cmp
inc
push
jae
inc
mov
mov
jp
mov
or
xor
out
pushf
vpcmpuw
or
add
std
je
rorb
add
clc
add
push
loope
push
stc
cmpsl
xchg
jo
inc
daa
out
push
add
cmc
or
iret
mov
mov
roll
cmpsb
mov
cs
xchg
jbe
dec
stos
and
jne
mov
mov
lret
pop
stc
ds
cmp
sub
fimull
jl
lods
pop
lahf
pop
pusha
adc
iret
bnd
sub
dec
xchg
je
xor
mov
lods
mov
popf
repnz
shll
xchg
add
dec
mov
hlt
and
outsl
push
inc
mov
sbb
inc
aad
mov
fldt
out
jns
cltd
sbb
mov
mov
fnstenv
cmp
add
aas
faddl
mov
or
test
jl
jno
repz
inc
pop
pop
cmp
and
imul
push
push
sub
in
imul
xor
sub
daa
iret
in
stos
fidivrl
pop
push
mov
xlat
mov
enter
dec
mov
sbb
out
dec
repz
fldl
inc
dec
and
scas
fprem
inc
inc
jecxz
in
bound
or
jge
sbb
mov
ljmp
mov
adc
jle
add
loope
fadd
cltd
mov
push
int
jno
xchg
in
lea
mov
shll
es
lret
adc
mov
jae
les
cltd
std
jo
enter
adc
aas
push
push
mov
imul
mov
adc
movsb
orl
pop
fildl
pushf
out
inc
out
rcll
clc
adc
lods
mov
sub
cltd
and
sahf
test
les
xchg
pop
pop
push
ret
jnp
loope
rcll
popa
stos
enter
xor
or
cmpsb
mov
cmpsb
pop
mov
addr16
push
dec
push
or
push
cmpsl
mov
dec
scas
aaa
movsb
dec
pop
imul
sbb
push
xor
out
jle
stos
jne
cmp
mov
lds
xorl
popa
jnp
pop
add
inc
outsb
aam
cmp
arpl
rcrl
cwtl
jge
ljmp
jp
outsb
in
shll
mov
push
cmp
notl
popa
test
lock
stos
mov
dec
in
mov
inc
pop
lea
pop
scas
mull
lock
dec
ror
imul
jb
popf
rolb
in
pusha
cwtl
inc
js
js
aaa
and
xchg
xchg
in
cwtl
pop
out
ljmp
dec
dec
mov
pop
nop
data16
adc
imul
insl
and
add
bound
cmp
cld
fldt
movsb
fwait
hlt
into
lahf
leave
testl
les
neg
or
add
xlat
daa
pop
mov
iret
sbb
inc
xchg
call
inc
push
stc
jno
dec
jns
or
fnstcw
pushl
outsl
daa
mov
out
fnstcw
xchg
fsubrl
or
cmp
repz
xchg
jg
scas
lock
dec
pop
pop
adc
push
cwtl
adc
mov
sub
cwtl
inc
shrl
mull
mov
call
leave
sahf
loope,pn
ljmp
cltd
shlb
cld
sub
iret
leave
fsub
orb
pop
cmp
mov
jns
cmp
inc
push
jae
test
in
push
repnz
mov
jns
flds
sti
xchg
pop
sub
push
push
cmp
notb
shrb
and
add
xor
jbe
shlb
fildl
dec
xchg
stc
jno
mov
pop
xchg
mov
fwait
dec
ljmp
sbb
mov
dec
andl
adc
xchg
aam
cmp
cltd
jl
add
adc
clc
add
dec
adc
or
es
xchg
sub
push
dec
cmp
push
cmp
xchg
xchg
push
sarb
add
or
add
jle
mov
pop
adc
mov
or
mov
jg
pop
out
scas
leave
call
push
push
mov
inc
or
jecxz
pop
mov
loop
jp
lret
cmp
dec
sub
clc
fidivrs
int
rolb
xchg
jge
inc
add
loop
inc
sub
out
jge
xor
xor
adc
lods
popa
xor
jnp
clc
arpl
ss
add
xor
push
xlat
loope
daa
cli
cltd
mov
inc
or
adc
sbb
xchg
lret
inc
fs
int3
xchg
aas
icebp
loopne
mov
cli
sub
or
ficoml
jge
je
dec
bound
xchg
dec
pop
jno
mov
and
lea
arpl
fisubs
std
movsl
push
jno
and
or
lahf
das
jp
loop
sub
movsl
popa
push
pop
out
or
or
push
aaa
push
pop
stos
jecxz
jne
dec
pop
stos
mov
xchg
outsl
testb
dec
xor
cltd
cmc
ljmp
out
jno
cmp
call
lds
insl
dec
xchg
mov
mov
pop
iret
mov
xchg
push
fcmovb
in
or
sbb
shll
stc
xor
mov
sub
adc
inc
in
push
rorl
dec
pop
push
jno
mov
movsb
and
sbbl
inc
jae
js
jbe
arpl
fwait
mov
jmp
jno
test
outsb
aaa
ja
loope
idivl
or
adc
pop
insl
fnstenv
call
cmp
popa
loop
bound
insb
mov
dec
es
std
roll
lods
mov
popa
movsb
jae
push
push
add
mov
add
inc
dec
cli
scas
jae
into
dec
lret
push
loop
add
ss
stc
scas
popa
iret
insb
loopne
mov
in
jo
sbb
mov
out
aad
cld
pop
jae
sub
pushf
push
lock
fcompl
dec
movsl
ljmp
mov
and
jnp
sub
pop
movsb
or
out
xchg
adc
mov
mov
or
cmpsl
cmpb
or
jnp
jp
cmp
or
and
lock
xchg
daa
out
add
lea
enter
mov
cmp
outsb
dec
loop
inc
add
pop
pavgw
or
push
les
lods
mov
dec
dec
xchg
jp
ret
push
and
outsb
outsb
xchg
popf
push
xchg
and
hlt
mov
adc
mov
pop
jl
inc
sbb
imul
xchg
lahf
push
lea
sub
xchg
int
cli
xchg
mov
or
inc
or
sbb
and
cli
hlt
sarb
das
xchg
push
ficoms
ror
loop
jns
or
xchg
add
bswap
dec
rorb
hlt
out
ljmp
std
cmp
jl
xchg
cmpsb
pop
mov
dec
icebp
xchg
hlt
pop
mov
dec
sub
pop
cmc
aas
xor
xor
or
add
pushf
xchg
aad
xchg
mov
mov
pop
and
pop
icebp
xchg
fwait
xchg
popf
into
leave
or
clc
xor
sbb
ret
ret
pusha
mov
jbe
cmp
mov
dec
andl
sub
cmp
testb
mov
aam
fs
icebp
lcall
push
rcrb
mov
lret
mov
les
mov
das
mov
incl
es
loope
std
add
and
ficoml
lods
out
int
scas
pop
aam
push
pop
inc
cmpb
fwait
scas
orl
push
cs
cmp
xchg
xchg
sub
inc
test
stos
xchg
inc
push
xor
cltd
pop
sub
inc
jp
icebp
pop
addb
and
xchg
adc
lock
push
movsb
cmp
xor
jmp
ljmp
ret
stc
mov
xor
fnsave
mov
out
repnz
cmp
icebp
sub
push
xlat
sbb
test
sti
ret
inc
fdivl
push
imul
jge
or
jl
lea
test
dec
mov
gs
out
jne
out
roll
lds
das
mov
mov
lcall
jp
outsb
insb
add
adc
rclb
sbb
mov
jb
or
data16
lret
cmpsl
out
jns
fmuls
pop
jno
movsl
or
mov
jbe
jge
shrb
adc
xor
fdivrs
jge
inc
mov
mov
jg
add
jo
aad
mov
aam
sub
cmpsl
lods
sbb
sbb
movsl
sbb
ret
shrb
dec
je
imul
mov
mov
mov
shl
nop
xchg
inc
mov
rcr
dec
les
jecxz
icebp
jno
push
insb
sti
arpl
mov
dec
cmc
call
dec
sub
aaa
pshufw
inc
out
int3
aaa
push
xor
fsub
daa
cwtl
mov
jle
lock
dec
out
gs
movsl
sarb
dec
imul
xor
test
iret
das
jo
int
jmp
fwait
jge
cmp
in
addr16
xor
push
push
mov
mov
fwait
jo
int
sbb
xor
xchg
sub
add
push
pop
mov
cltd
aam
or
push
and
mov
cwtl
inc
jno
pop
rorl
leave
mov
pop
inc
int
lods
imul
xchg
mov
cmp
imul
insl
xchg
xor
adcb
test
icebp
jnp,pn
or
out
ja,pt
fxch
scas
pop
stos
iret
in
insl
dec
and
mov
inc
incl
imul
jmp
pop
mov
lahf
fcmovnu
test
jo
mov
and
rcrl
cmp
adc
xchg
fcoms
shll
into
xor
repnz
jb
fcompl
outsl
and
scas
jo
push
sti
push
push
repz
adc
fimuls
fwait
push
push
into
xor
enter
out
outsl
dec
rcrl
mov
je
adc
mov
cmc
in
xchg
and
jo
sbb
push
xchg
push
lock
cltd
outsb
mov
ret
adcb
ret
or
movsb
cs
mov
mov
xchg
hlt
popf
pop
sbb
pop
std
jecxz
jl
dec
lock
push
push
push
insb
aam
ret
or
mov
and
mov
and
roll
sub
mov
push
adc
mov
es
and
adc
shl
xchg
aad
les
xor
or
cmc
mov
test
or
jne
sahf
fwait
mov
outsb
stc
jp
add
in
jae
pop
in
adc
outsb
call
inc
sti
pop
mov
int
sub
sbbb
cli
mov
xchg
ret
dec
inc
add
jae
aas
mov
dec
cmp
mov
mov
dec
nop
push
subl
out
test
push
sub
fcmovnb
js
fwait
leave
sub
xchg
lock
lret
test
std
push
int
aam
jae
mov
fnstenv
test
sbb
and
mov
pop
aad
sub
fs
sub
repnz
fs
stos
pop
jp
andl
lcall
lds
cmp
add
adc
sahf
insb
push
add
fs
inc
loopne
xor
mov
movsl
bnd
fsubl
and
adc
icebp
shrl
pop
inc
jnp
dec
lods
push
loop
stos
aaa
adc
sub
add
add
pop
and
aam
mov
ljmp
jmp
iret
pop
call
adc
jne
sbb
xchg
fnstsw
cmc
loope
lahf
mov
pusha
jmp
lcall
popf
push
in
jns
out
dec
sahf
out
fldt
push
mov
repnz
das
js
push
inc
jecxz
lret
jno
xlat
add
in
aad
test
xchg
xor
xchg
push
aad
mov
xchg
sbb
or
and
idiv
mov
pusha
xlat
je
xorl
loopne
cmp
inc
adc
outsl
pop
jne
sbb
pop
xchg
repnz
mov
lcall
rolb
andl
pop
inc
pop
stos
int
mov
mov
flds
ja
inc
icebp
ret
push
mov
push
stos
fmuls
es
jge
jecxz
imul
cmp
cmp
dec
fimuls
xchg
pop
nop
pop
cwtl
fdivl
push
push
xchg
mov
xor
cmp
loope
xchg
repnz
adc
mov
pop
mov
aad
mov
fsubr
mov
xor
inc
ret
mov
in
jnp
dec
sub
adcl
dec
jle
inc
and
jg
xor
std
inc
inc
mov
mov
rcr
inc
mov
enter
cmp
movsl
notl
push
jp
add
cmp
push
jno
jmp
sbb
out
push
xchg
cli
jns
and
jle
pop
pop
divl
mov
xor
loope
jne
jbe
call
jle
fidivl
and
fsin
pop
lcall
or
aas
into
cli
rcrl
ljmp
fxch
jmp
imul
es
imul
popa
cs
xor
pop
test
jle
pop
xor
mov
loop
scas
fcomp
push
pop
popf
and
popa
shl
scas
stc
sbb
insb
pop
push
cli
out
xor
cltd
inc
rorb
enter
mov
cwtl
int
mov
sub
push
mov
jge
mov
fiadds
xor
xchg
xchg
cld
fmuls
aas
pop
jl
sahf
mov
adc
mov
fidivrl
xchg
in
mov
test
mov
cwtl
adc
ljmp
dec
fdivs
xchg
test
scas
mov
adc
jmp
test
or
int
jmp
out
stos
in
jb
inc
or
ja
movl
call
cmp
pop
popf
mov
pop
xchg
xorl
xchg
and
subl
ret
push
pushf
daa
mov
call
pop
push
loope
divl
xor
sub
inc
xchg
or
ljmp
stos
mov
xor
xor
push
sti
pushf
leave
pop
cli
std
xor
popa
popa
cmp
fcmovb
imul
inc
lea
decb
mov
push
push
sar
rorl
scas
jmp
and
shl
mov
adc
addr16
add
xchg
popf
mov
cs
cmpsb
or
mov
xor
mov
xchg
pop
imul
mov
or
ljmp
fisubrs
into
inc
test
xor
sti
repnz
loopne
icebp
fcomps
push
popa
add
sub
cwtl
push
push
push
pop
mov
mov
mov
jg
push
xor
das
icebp
fcom
gs
cmp
xor
sbb
aas
sbb
mov
push
xchg
les
std
push
int3
mov
lret
cld
mov
imul
loop
push
enter
inc
in
dec
jle
cwtl
sbb
adc
int3
aaa
sbb
test
adc
xchg
sub
je
test
iret
pop
and
push
out
mov
and
cs
ret
lret
out
popf
loopne
sti
jecxz
jl
add
stos
js
cmpsl
dec
dec
hlt
pop
add
std
mov
push
std
int3
repz
mov
test
cmp
dec
lods
inc
lcall
stos
bound
adc
icebp
clc
push
lods
es
cld
sub
inc
lods
fnsave
xor
leave
mov
sub
icebp
mov
adc
push
dec
push
push
out
insl
and
imul
jne
mov
fwait
out
icebp
dec
aam
stos
shll
mov
jns
push
add
pop
dec
cmp
mov
outsb
inc
or
jmp
mov
ss
lea
jge
pop
mov
xchg
daa
negl
lahf
xchg
sub
mov
out
fldenv
cmpsl
in
idivb
fwait
push
ss
dec
adc
repnz
stc
iret
push
xor
jmp
mov
leave
cmc
cltd
fdivr
addr16
dec
mov
push
mov
loop
xor
push
shl
dec
pop
aam
shrb
mov
lods
pusha
popa
decl
mov
sbb
mov
jecxz
xchg
cmp
jmp
pop
xchg
push
lods
mov
push
push
outsl
cmc
jmp
ret
push
test
ret
out
pop
sub
repnz
adc
or
sbb
dec
fistpl
xor
sub
and
sahf
sub
fcmovne
ret
cmpsl
dec
mov
and
mov
cwtl
dec
lret
fiaddl
mov
push
push
cmp
mov
mov
jp
adc
pop
enter
mov
js
inc
xlat
stc
in
pop
mov
dec
and
scas
pop
jge
enter
daa
lret
push
sbb
and
arpl
test
pop
cld
cltd
xchg
mov
loope
mov
xor
lods
push
or
mov
sbb
out
sbb
push
add
es
xchg
inc
sub
sub
rcrl
stc
and
or
iret
lods
lahf
aaa
xor
jge
fidivrl
inc
mov
cmp
lahf
lret
add
jg
xchg
xlat
es
push
mov
aas
jo
push
cmp
and
sub
cmpsb
jno
sub
in
cmpsb
jno
cvtpi2ps
mov
xor
and
popa
movsl
mov
mov
and
pop
popa
test
xchg
leave
adc
xorb
xchg
ret
and
loop
sub
clc
imul
sub
xor
mov
push
jl
push
inc
fwait
xor
xchg
mov
cmpsl
stos
mov
xchg
mov
gs
mov
xchg
mov
dec
mov
or
inc
imul
mov
mov
out
jge
sub
scas
pop
add
cmpsl
stos
negl
out
hlt
sub
outsl
orl
mov
xchg
ds
repz
mov
out
and
sbb
dec
jb
clc
cmp
pop
loopne
push
sbb
xchg
lahf
out
loope
xchg
xor
iret
lock
test
pop
dec
dec
std
cmp
in
ds
xchg
mov
aaa
jne
gs
pop
sbb
out
xchg
addr16
pop
inc
mov
mov
in
fwait
sti
xchg
test
inc
in
cmpsb
fdivrl
push
adc
mov
jecxz
bound
lahf
and
bound
stos
dec
push
fwait
out
in
xchg
or
ret
sbb
test
int3
pop
je
jle
stos
fisttpl
push
es
jp
cmp
mull
lea
loop
jecxz
sub
add
mov
and
lret
pop
in
mov
arpl
sbb
jl
mov
mov
xor
mov
ret
xor
pop
mov
pop
popa
mov
mov
inc
sub
push
inc
or
push
pop
xor
or
dec
push
int3
bound
mov
add
rclb
arpl
xchg
data16
jns
push
in
mov
es
stc
pop
push
cmc
pop
jg
add
scas
test
jmp
mov
xchg
jmp
jmp
mov
clc
int
sub
sbb
inc
dec
loope
sbb
aad
arpl
xor
cmpsl
in
sbb
xchg
and
outsl
loope
push
mov
push
int
nop
cmp
ss
lahf
mov
rolb
dec
inc
mov
in
or
stos
fidivs
lods
jge
pop
inc
daa
mov
insl
xor
div
sbb
pop
addr16
mov
dec
aam
sbb
loope
sti
shll
dec
sarb
mov
orb
shrw
lret
aas
in
pop
insb
roll
mov
jmp
scas
ret
fbld
ret
and
rcl
push
sbb
pop
push
sbb
xor
leave
and
dec
cli
or
dec
mov
outsl
stos
fldenv
jg
mov
cmc
out
dec
xor
jb
inc
lea
pop
mov
cmp
sub
dec
fiadds
cmp
pop
cmp
jnp
jg
test
int
cltd
pop
lock
add
or
fadds
enter
pop
scas
adc
es
pop
pop
iret
mov
lret
cltd
xchg
loopne
sbb
push
inc
push
jnp
fdivr
in
fsubs
mov
xchg
pop
and
push
add
fists
jno
test
dec
add
cmpsb
jge
lcallw
aaa
fsubp
lock
pop
ret
pop
idivl
add
lods
add
in
repz
sub
lret
dec
pop
aas
aas
fists
arpl
sar
int
and
outsl
fwait
pop
out
add
and
frstor
fwait
nop
push
in
hlt
stos
jp
loope
xor
push
and
push
or
dec
push
bnd
sub
enter
mov
imul
js
mov
daa
daa
add
adc
icebp
test
push
lods
dec
in
mov
or
addr16
dec
in
ja
cmp
inc
cld
add
sub
mov
pop
shrb
nop
sbb
clc
test
cmp
sbb
xchg
mov
movmskps
std
cmpsb
cmpsb
in
or
in
test
jns
das
imul
daa
scas
loopne
push
insl
xchg
aam
and
mov
int3
int
sbb
movsb
sub
cmpsb
xchg
lret
iret
push
or
pop
xchg
xor
jmp
mov
sarb
sbb
mov
sub
adc
outsb
adc
or
push
mov
cmp
movsl
insb
inc
in
cmp
ss
in
dec
fwait
xchg
or
cmp
call
sbb
and
sahf
or
cmpsl
insb
push
lcall
gs
stos
daa
test
aas
sub
jne
ds
sti
jb
cwtl
fidivrl
out
cmp
pop
or
iret
mov
ss
or
in
push
fadds
rcrb
adc
out
mov
sbb
das
pushl
sbb
mov
jno
dec
jecxz
jae
push
movsb
aam
cs
imul
xor
cmp
cmp
xchg
mov
dec
stc
or
sub
cld
pop
es
mov
push
jg
sub
mov
jbe
sbb
cs
adc
pop
out
inc
adc
imul
push
andb
cmp
sub
fdivr
xor
pop
fnstenv
add
xorl
fcmovnb
sbb
mov
out
jp
jmp
ljmp
repz
mov
dec
xchg
dec
dec
aas
test
jecxz
push
push
xchg
cwtl
ficompl
stos
mov
ljmp
push
inc
lahf
outsb
jns
cmp
int
sub
std
add
in
out
mov
lds
cmc
ret
mov
addb
cmp
std
xchg
aas
adcb
mov
stc
xor
out
stos
arpl
aas
popf
lcall
mov
xchg
test
not
xchg
stos
loope
bnd
out
or
mov
js
jne
xchg
xor
ljmp
negl
push
mov
sub
push
imul
mov
js
mov
jns
inc
in
lods
mov
inc
lds
jl
in
mov
pop
and
lret
pop
cld
jl
jo
lock
mov
mov
xchg
add
ljmp
cli
xor
lret
adc
loopne
dec
and
lcall
mov
mov
dec
std
xor
outsb
xchg
sub
sub
fdivrs
fs
jnp
hlt
add
mov
addr16
adc
jns
cmp
outsl
fs
int3
rcl
sub
jae
add
xor
cmp
clc
lret
int3
adc
scas
xchg
add
fbstp
mov
shl
rorb
aam
mov
addl
pop
or
aam
insb
xlat
data16
enter
pop
jo
mov
fcom
push
sub
movsl
int3
mov
jb
mov
or
sub
lahf
fdivs
cwtl
loope
lods
les
insb
xchg
adc
mov
test
xor
mov
fwait
sbb
movsb
or
cmp
mov
fwait
test
mov
xlat
sub
scas
out
mov
int
xchg
sub
fsts
push
mov
inc
sahf
mov
inc
or
lcall
iret
outsl
push
lods
push
es
push
xchg
ja
add
in
scas
inc
out
inc
fwait
inc
inc
sub
xchg
scas
jno
shr
fisttpll
call
scas
dec
call
xchg
fcmovu
mov
stc
push
xchg
inc
in
test
dec
sbb
mov
inc
mov
xor
ret
lcall
andl
ret
xchg
sbb
or
xor
ss
nop
xchg
inc
cmpsl
mov
pop
test
cwtl
cmp
ljmp
xor
mov
arpl
bound
pop
mov
insl
push
scas
testl
lock
and
outsl
adc
sub
jno
loop
lret
sub
mov
lret
cmpsb
xor
adc
jne
sahf
adc
lods
sub
cmp
xor
dec
testl
fwait
lret
and
xor
adc
adc
sub
mov
sub
pop
and
nop
xchg
sbb
repnz
lahf
mov
jne
test
test
cmp
movsl
or
mov
popf
mov
shrb
pop
mov
mov
or
or
pop
stc
dec
mov
add
adc
fistl
mov
sub
sbb
bound
mov
sahf
push
fucomip
int
jg
or
or
lods
out
aaa
jl
jae
mov
xchg
rcll
jmp
fldcw
addr16
xlat
mov
loope
push
aas
adc
push
dec
lret
sub
mov
lods
mov
pushf
add
fldt
out
data16
rcl
enter
push
test
cmpb
fildl
inc
jp
push
jb
mov
xlat
mov
push
lds
and
test
movsl
add
rcl
pop
adc
fidivrs
insl
cmp
ret
add
aas
rcrb
sarb
and
pop
jae
mov
jae
scas
daa
cmp
xchg
sbb
xchg
movsb
add
mov
js
and
xor
mov
mov
jno
in
mov
jne
test
add
push
cltd
jmp
pop
aaa
xchg
xchg
sahf
and
es
rcll
xchg
xorl
les
dec
dec
imull
ljmp
adc
jo
in
mov
out
nop
enter
ds
xchg
scas
or
xorl
xchg
xor
xchg
cmp
xor
imul
cli
mov
mov
pop
ds
arpl
sahf
stos
mov
sbb
adc
and
in
and
movsb
mov
cmc
adc
sbb
push
xchg
and
dec
add
cwtl
xor
inc
xor
aas
fistps
mov
jg
and
pop
mov
test
mov
enter
scas
mov
int3
mov
push
jne
lds
nop
dec
inc
dec
sti
cmpsl
movsb
pop
or
ret
xchg
arpl
faddl
mov
enter
loopne
inc
cltd
mov
mov
cli
lods
xor
push
and
ds
dec
inc
mov
dec
test
or
movsb
jl
cmp
cmp
paddusb
mov
lea
inc
jnp
and
insb
push
addr16
fists
jb
out
into
sbb
into
or
inc
loope
cld
stc
pop
pop
in
inc
inc
inc
imul
mov
cmp
xor
sti
pop
pop
sti
mov
outsb
mov
test
jecxz
adc
cmp
shlb
mov
jl
xchg
adc
adc
pop
sub
mov
pop
test
negb
xchg
inc
and
adc
and
insl
push
xor
inc
dec
add
and
xlat
ja
mov
adc
cmp
xchg
fldl
loopne
int
fwait
lock
sub
rorb
or
adc
mov
lock
and
cs
sub
mov
je
mov
fmul
add
push
xchg
or
mov
adc
sub
std
int3
mov
lods
les
adcl
ja
out
movsb
out
shl
sbb
std
sub
and
lods
mov
or
pop
sub
pushf
scas
cwtl
sub
or
xchg
arpl
jne
inc
fcmovne
push
std
jl
les
push
movsl
inc
ficoml
aaa
mov
jo
dec
inc
pushf
xchg
test
lcall
add
pop
sbb
xlat
mov
mov
jbe
outsb
in
addr16
pop
repz
insl
xchg
mov
gs
test
push
cmp
shrl
push
repz
push
shlb
pop
fcoml
pushl
xor
jne
cs
mov
paddq
in
or
xchg
fwait
mov
stos
cmp
cli
mov
mov
adc
testl
popl
push
xchg
and
repz
hlt
xor
shll
push
mov
shr
stc
js
es
xor
out
dec
push
jbe
in
dec
ret
mov
xchg
rcll
addr16
inc
int3
xchg
jbe
fldcw
cwtl
in
scas
xchg
iret
nop
and
sub
inc
pop
rcrb
xchg
in
fs
or
cmp
rolb
sbb
pop
test
mov
cmp
xor
sti
jae
adcb
mov
xor
hlt
lret
repz
popf
or
aad
push
mov
addr16
repnz
lret
dec
adcl
push
iret
xchg
insl
fcmovb
scas
adcl
xor
xor
adc
mov
imul
xor
lcall
imul
mov
push
lcall
xlat
cmp
pop
sbb
imul
add
lahf
out
test
and
aaa
jp
jge
popa
push
inc
lahf
jp
cli
mov
cltd
mov
or
lea
pop
mov
in
les
in
sub
push
xor
test
or
subl
sbb
push
sub
into
push
mov
dec
addr16
pushf
lock
addr16
inc
push
adc
cli
out
clc
in
push
scas
add
loopne
pop
sbb
or
ficomps
cmpl
sahf
lods
pop
pop
xchg
out
pop
adc
inc
lds
das
inc
int
xor
mov
rolb
fisttpll
pop
fs
stos
xchg
lock
mov
into
jae
pop
jle
fidivs
ficompl
jmp
mov
jp
insl
mov
test
cli
adc
mov
fnstcw
pop
jne
stos
in
jmp
shlb
mov
jmp
aaa
nop
add
lea
mov
jns
gs
jge
pop
pop
je
add
mov
mov
in
cmpsl
icebp
nop
adc
cs
test
shrb
dec
mov
and
push
out
lcall
dec
out
mov
jge
add
insb
and
push
push
push
xchg
and
sub
adc
sub
das
or
xorl
and
jl
cmp
add
add
jg
xchg
push
pop
leave
loop
out
add
mov
cltd
into
dec
test
sbb
aas
pop
shl
mov
cld
in
fisubl
adc
or
jne
sub
jge
loop
mov
mov
adcb
sbb
aas
pop
aaa
mov
sub
ds
adc
lret
mov
push
aam
pop
adc
in
inc
int
dec
push
stc
push
sti
adc
js
mov
or
daa
cmp
mov
int
cmp
jbe
call
call
enter
in
call
sub
loopne
ficoms
repnz
test
xchg
data16
popa
test
test
sbb
dec
jo
xor
shl
pop
cli
call
filds
aas
clc
dec
nop
push
pop
jbe
mov
push
push
xor
push
imul
in
nop
pop
movsb
xchg
xor
mov
mov
push
jbe
out
das
cwtl
jno
xchg
mov
jne
aam
dec
xchg
dec
in
cltd
sub
fdiv
sti
out
daa
in
outsl
cld
movsl
rcl
xor
xchg
mov
pop
stos
mov
mov
fisubs
imul
loopne
jp
lds
sbb
pop
sub
mov
jle
jno
jg
mov
in
jae
jl
adcb
jle
jbe
push
imul
adc
xchg
shlb
or
lahf
cs
in
in
or
adc
scas
sbb
stc
lock
jno
mull
jo
mov
jp
arpl
fstpt
lods
je
out
cwtl
xchg
ret
adc
cmc
shl
mov
fdiv
cmc
inc
jg
cli
leave
inc
stos
and
mov
mov
fdivrp
pop
stc
push
mov
outsl
fs
sub
fnop
xchg
mov
cmp
push
or
sub
xor
fimuls
mov
push
xchg
mov
inc
daa
scas
cmp
or
adc
movsb
jp
aas
movsb
push
ffreep
movsl
push
sbb
lds
push
sbb
xchg
push
push
test
and
lahf
fisttpll
jp
push
pop
cmpsb
or
jae
shll
mov
dec
lret
cmp
mov
inc
out
xchg
xlat
mov
push
mov
int3
pop
adc
mov
add
mov
pop
fucomip
imul
push
push
scas
roll
and
push
xor
mov
cli
adc
push
or
leave
adc
scas
lds
push
jecxz
xchg
fstl
pop
iret
aaa
sbb
sbb
mov
mov
pop
lcall
iret
pushl
repz
std
adc
ja
xor
push
pop
das
xor
movsb
nop
dec
out
pop
int3
mov
test
fimuls
ljmp
in
xchg
mov
dec
mull
in
fs
pop
icebp
outsb
out
jecxz
mov
push
add
jp
cwtl
jle
lcall
out
sub
enter
test
in
mov
dec
lock
out
jecxz
mov
loopne
aam
sti
cmp
arpl
inc
xchg
cmp
pop
jns
leave
cmpsb
mov
xor
jg
inc
or
jo
adc
jnp
movsb
mov
push
xchg
mov
out
push
out
gs
inc
decb
pop
ret
scas
cmp
pop
mov
and
pop
and
or
mov
mov
jmp
mov
jg
or
test
ret
ds
cmp
and
insl
xor
clc
bnd
mov
jo
cmp
rclb
xchg
jbe
sahf
ja
and
repnz
add
mov
mov
mov
stos
mov
mov
push
rcl
je
xchg
or
jmp
or
std
cmp
movsl
mov
jnp
fsubl
jl
inc
shll
adc
stc
mov
jbe
mov
or
test
imulb
fildl
out
inc
sbb
xchg
clc
mov
inc
f2xm1
arpl
adc
cmp
mov
cmp
sti
mov
push
aaa
push
mov
mov
es
in
inc
xor
add
rcr
aam
shr
or
pushl
lods
xor
cmpsl
push
and
adc
or
fsubrs
movsb
mov
adc
sbb
addr16
or
lcall
gs
imul
xchg
sub
pop
inc
pop
outsb
mov
repnz
rcrl
xchg
lret
fcompl
push
push
repz
push
in
testb
mov
pushl
jecxz
adc
shrl
inc
aas
cmpsl
bound
enter
pop
pop
xorl
push
dec
xlat
sahf
dec
or
and
mov
sti
pop
adc
data16
sahf
sbb
loop
sub
ss
test
adc
subl
jnp
inc
sbb
add
sbbb
push
cmp
and
jnp
out
jb
in
mov
clc
cmp
inc
rolb
push
add
jge
aad
in
roll
lret
mov
scas
ja
in
mov
repz
arpl
orl
rorb
mov
jns
gs
aaa
fisubs
gs
mov
mov
or
inc
adc
scas
cltd
xor
push
repz
mov
shlb
push
jmp
inc
xchg
cli
out
push
int3
adc
mov
jl
inc
sbb
sub
mov
adc
push
or
leave
pop
popf
xchg
pushf
xchg
sbb
iret
pop
outsb
mov
es
cltd
adcb
add
jae
insl
daa
fcmove
test
sbb
dec
jo
sbb
push
hlt
fdivrs
cmp
lcall
test
ja
clc
jg
xorps
xlat
rclb
enter
push
jmp
sub
jle
jnp
sub
pop
xor
shlb
mov
fs
mov
inc
jg
cmp
shll
push
iret
jecxz
add
xor
and
mov
jno
loop
sbb
gs
dec
data16
mov
cs
cmpsb
fcomps
icebp
jmp
nop
jbe
stc
out
orl
mov
popf
lea
dec
xchg
insl
imul
iret
mov
lret
jecxz
lret
mov
dec
mov
data16
inc
xchg
cmpb
xor
or
ret
es
dec
xchg
fs
jmp
fisttpll
loop
mov
cli
enter
mov
bound
insl
shrb
jns
mov
test
jmp
fwait
repnz
push
mov
hlt
loopne
xchg
and
das
testl
scas
push
and
insl
jp
xor
xchg
jno
xor
lods
fistps
sub
cmp
pop
add
loope
push
pop
ss
push
gs
jge
dec
loop
inc
push
xor
sbb
cltd
pop
push
enter
outsb
push
mov
inc
loope
adc
jbe
sbb
addl
mov
xchg
jo
xchg
mov
sbb
jbe
cvtps2pi
mov
lahf
dec
out
xchg
cmpsl
mov
dec
repz
orb
or
jbe
jne
arpl
xchg
jp
js
cmp
sbb
leave
out
mov
sbb
jle
in
or
mov
xchg
inc
rolb
lcall
scas
mov
inc
mov
out
cmp
rolb
in
sbb
adc
lret
mov
pop
push
cltd
pushf
push
popf
and
enter
mov
pop
jae
mov
push
lds
dec
loop
pop
adc
aas
mov
in
test
fs
sub
test
sub
insl
lods
rorb
imul
xor
jb
shufps
inc
das
jl
lods
inc
mov
xchg
or
push
mov
sbb
push
int3
addr16
or
or
and
ja
jmp
jg
fistpl
sub
pop
out
repnz
inc
dec
testb
int
repnz
xchg
ja
cmp
pusha
lcall
jmp
xor
jns
test
negb
push
fld
push
push
adc
sub
ljmp
outsl
add
push
jle
sub
xchg
lret
sbbl
scas
jns
pushl
mov
push
insb
and
pop
mov
mov
sub
cmpsb
xchg
mov
dec
rolb
sarl
enter
pop
loopne
sbb
add
inc
pop
mov
dec
adc
rdmsr
and
inc
scas
cmc
jmp
shl
mov
ljmp
mov
mov
in
lea
les
cmc
test
ja
adc
mov
add
cmpsl
stc
jmp
xor
enter
inc
arpl
out
inc
ss
cmp
arpl
xchg
jecxz
rorl
dec
adc
aas
out
movsb
lret
movsl
dec
lea
push
cltd
dec
add
sub
pause
dec
inc
mov
xor
fidivrs
es
adc
aas
xchg
and
js
aas
xor
lods
in
in
cmp
dec
xor
int3
mov
idivb
mov
sbb
icebp
push
popf
sub
popa
or
xchg
fucomi
push
shl
jmp
ljmp
dec
fwait
dec
jbe
mov
xlat
das
nop
bswap
inc
mov
jne
pop
xor
mov
cmp
sets
push
jo
lock
inc
xor
in
rolb
mov
lret
or
mov
in
inc
mov
and
push
iret
daa
inc
pop
xchg
sbb
xor
orb
push
bound
mov
push
and
and
stos
scas
sub
dec
jmp
xor
out
xchg
push
dec
out
rcl
xchg
xor
pop
cs
dec
or
nop
clc
lahf
adc
or
dec
mov
test
or
mov
sbb
lahf
adc
out
cmp
mov
movsl
and
sub
push
fwait
dec
cmp
mov
enter
jg
mov
sbb
dec
cmp
pop
daa
lret
shl
cmp
mov
dec
xchg
jne
inc
inc
pop
mov
adc
insl
xchg
adc
ljmp
sahf
gs
sbb
jmp
xchg
add
in
push
inc
sub
jbe
ret
mov
fists
sbb
adc
and
dec
lods
sub
scas
ret
das
dec
cmp
mov
mov
fldenv
fsubs
jmp
or
mov
xor
cwtl
ds
bound
stos
dec
fldenv
addb
or
loopne
repz
xchg
adc
mov
jo
xor
mov
test
jno
movsb
dec
or
daa
dec
mov
push
insl
aas
mov
push
loopne
add
sbb
add
add
mov
inc
fsubrs
push
and
mov
icebp
jns
push
or
jl
daa
es
xchg
cmpsb
dec
repnz
imul
rolb
icebp
outsb
push
adc
aas
mov
pusha
and
scas
addr16
jb
fs
out
sub
int3
mov
dec
jg
fisttpll
sbb
imul
lahf
daa
sub
aas
pop
stc
inc
stc
imul
shlb
dec
cmp
ret
icebp
xchg
icebp
cltd
stc
sub
pop
movsl
icebp
fwait
xor
sbb
imul
in
pop
push
sub
push
mov
push
decb
stc
add
mov
push
xchg
pop
xchg
mov
dec
out
pop
pop
dec
test
imul
fsubl
mov
push
test
push
aaa
mov
enter
xchg
stc
ret
fiaddl
lods
add
xchg
negb
insl
add
enter
sbb
cltd
movb
loope
mov
stos
sysenter
cmc
sbb
jae
xchg
fabs
mov
or
xchg
leave
mov
bound
xchg
addr16
test
mov
push
and
shll
cltd
jle
add
mov
scas
cmp
mov
jp
inc
loope
push
test
or
push
mov
mov
pusha
nop
xchg
in
push
mov
jbe
ljmp
jle
sub
lods
xor
push
in
mov
mov
sbb
mov
cmp
inc
xchg
xor
repz
ljmp
cltd
es
cli
out
ja
jecxz
fcom
mov
mov
movsl
cmpsb
push
jns
in
sbb
cmc
fsts
je
mov
test
dec
jle
aam
mov
cmp
call
cmpsl
push
xchg
popf
les
or
ficoms
pushf
inc
aad
pop
and
jl
es
mov
cmp
mov
mov
adc
aad
sahf
cld
sbb
daa
and
leave
orb
sub
dec
clc
iret
cmp
movsb
mov
sub
faddl
mov
test
pop
imul
stc
dec
gs
or
in
xchg
xor
fistpl
lahf
lds
or
out
fistps
pop
inc
mov
cmp
dec
xor
sub
xor
sub
xchg
scas
hlt
mov
aam
push
mov
lcall
scas
test
push
and
gs
inc
mov
adc
xlat
mov
mov
cld
inc
leave
dec
in
lds
push
iret
mov
xlat
push
sbb
in
mov
outsl
arpl
icebp
int
adc
mov
cwtl
aaa
fcompl
mov
dec
adc
ljmp
popa
gs
mov
outsb
pop
leave
das
scas
sahf
ds
lea
pop
push
js
push
leave
mov
sbb
je
sbb
jg
ljmp
lock
dec
pop
push
sbb
mov
adc
je
sbb
repnz
push
lea
sub
movsl
mov
jo
cld
cmp
or
psubq
adc
outsb
sub
cmp
clc
scas
es
cs
dec
int
orl
fisubs
xor
push
xor
btr
mov
repz
xbegin
repnz
dec
fstl
and
sub
sub
push
adc
push
loop
sub
js
and
stos
and
pushf
jno
cmc
out
xchg
pop
and
inc
std
jo
jnp
and
aaa
cs
adc
adcl
inc
jmp
aam
and
xor
int
mov
add
sbb
mov
ljmp
adc
push
add
dec
or
lods
sub
and
sbb
jae
loop
cltd
sbb
or
into
jae
cmp
test
enter
int
pop
or
adc
push
into
adc
fcmovnbe
out
arpl
mov
mov
xchg
mov
and
push
iret
push
imul
mov
mull
adc
hlt
xchg
movsb
ss
dec
fsts
push
les
mov
pop
mov
push
cltd
test
iret
jg
xor
cmc
cmp
mov
add
sbb
adc
into
test
dec
sub
adc
push
cmp
out
and
subb
lahf
in
mov
cmp
xor
xchg
xchg
lea
mov
add
lahf
scas
cmp
mov
lock
fcoms
jle
mov
xchg
enter
sub
or
out
jnp
into
sbb
mov
stos
cmp
and
sub
jmp
cmp
or
ss
adc
push
sub
xor
cli
in
push
and
xchg
mov
cli
xchg
lock
sub
sub
inc
mov
cmp
dec
insb
sub
and
ret
cmp
pop
fists
mov
push
cwtl
xchg
dec
aas
aas
lret
cmp
xchg
xchg
icebp
call
dec
imul
xchg
xchg
sub
out
push
jae
xor
movsb
mov
mov
push
xlat
stos
adc
repz
inc
pop
xor
lret
cmp
xchg
add
sub
pop
push
xor
imul
xor
pop
dec
push
pushf
dec
and
sti
fbstp
jne
pusha
inc
testl
adc
cmp
and
out
loop
inc
push
push
lret
aam
xor
nop
outsl
icebp
cmp
imul
es
lahf
push
dec
stc
mov
sbb
jb
dec
mov
inc
mov
mov
inc
mov
lods
mov
fisttpl
fbld
xchg
mov
pop
jge
sbb
push
popa
adc
or
icebp
fsubr
fstps
sbb
loopne
push
sbb
ja
push
out
cs
sbb
add
sub
mov
scas
out
notb
mov
xchg
sub
xchg
stos
mov
ljmp
push
add
and
mov
mov
movsl
incl
sbb
pop
add
enter
repz
mov
das
int
fidivrs
arpl
in
mov
or
add
sbbl
mov
out
lods
lock
lcall
stos
xchg
sub
push
jp
dec
cli
push
cmp
cs
aas
ds
xchg
data16
jmp
arpl
xor
icebp
mov
loopne
and
fnstcw
aaa
xchg
stc
mov
lcall
inc
imul
popa
mov
int3
fstpt
mov
lock
cs
pushf
sub
out
ret
mov
adc
pop
lret
mov
add
dec
and
inc
mov
and
cwtl
jo
xchg
xchg
mov
out
jae
adc
mov
fwait
cmp
fwait
jno
popf
in
and
pop
mov
xchg
push
sub
stos
add
sub
or
xchg
hlt
std
je
dec
inc
lcall
pop
jmp
stc
insl
adc
and
lods
and
orb
test
jg
test
das
xchg
or
mov
std
fdivrs
jo
xorl
loope
mov
inc
cmpb
sub
ret
lret
les
cs
cld
cmp
inc
adc
fucomip
ljmp
cli
mov
jo
mov
sbb
mov
lods
xor
mov
pop
mov
movl
sbb
popl
pop
int
mov
in
push
inc
fstpl
jae
mov
cli
jns
mov
sub
cli
movsl
outsb
and
add
xchg
pop
xor
idivl
das
xchg
dec
xchg
data16
dec
dec
xor
push
gs
mov
aam
inc
pop
cmp
xchg
xchg
mov
push
adc
addb
dec
stos
outsb
and
popf
dec
sbb
sbb
in
ss
fidivs
fs
mov
mov
imul
lret
push
jno
fucomp
frstor
jno
cld
push
cmpsb
or
andb
cmp
roll
or
ljmp
insb
nop
repz
lods
push
inc
sub
or
cli
pop
sub
std
das
xchg
arpl
out
fildll
fcmove
jnp
xlat
and
repnz
jb
sub
xor
repnz
pop
gs
cmpsl
in
ror
enter
orb
mov
xchg
gs
mov
pop
dec
add
add
mov
movsl
in
outsl
mov
sbb
cmp
movsb
pop
xchg
test
adc
jle
jecxz
lock
sbb
or
inc
dec
pop
pop
dec
jmp
jmp
lret
test
imul
mov
jmp
adc
lock
xorl
pop
iret
xchg
mov
add
jnp
sbb
fnsave
cs
dec
dec
orl
sub
aam
pop
mov
ret
cmpsl
xchg
cwtl
push
xchg
or
inc
repz
mov
cltd
mov
or
xchg
push
fdivs
xchg
outsb
stc
push
jae
and
adc
mov
or
int
mov
sub
mov
enter
in
outsl
pop
xor
jmp
jns
mov
mov
mov
mov
es
in
and
movsl
add
sub
out
add
sarb
mov
inc
ja
insl
mov
sub
dec
and
cltd
cmpl
xor
mov
inc
decl
idivl
mov
or
fnstenv
and
aaa
arpl
jecxz
jecxz
popf
sti
aam
std
sub
xchg
sub
dec
xor
and
jb
inc
mov
add
mov
xchg
ret
adc
fsubrs
divl
dec
and
xchg
mov
and
icebp
or
sti
push
mov
xchg
add
in
addr16
movsl
test
cmc
xor
roll
and
push
xchg
cmp
mov
mov
rcrl
test
insl
inc
mov
sbb
ds
pop
push
push
jno
jle
mov
test
inc
push
and
push
pop
lea
rorl
sub
pop
test
inc
cwtl
ldmxcsr
leave
fsubs
outsl
pop
filds
fdivrl
xchg
test
push
mov
pushf
stos
js
repnz
ffreep
movb
sub
roll
fwait
xor
scas
adcl
or
add
shrb
scas
mov
lods
int3
or
cmp
add
in
mov
scas
movsb
movb
rclb
adcl
movhlps
and
add
in
ret
icebp
mov
fsubp
pop
pop
repnz
clc
sub
mov
leave
dec
das
jb
insl
inc
or
or
popf
stos
or
enter
sbb
pop
xorb
sub
sub
xchg
icebp
jmp
cmpl
pusha
rol
je
push
adc
mov
dec
ds
mov
rorb
add
dec
lret
loopne
stc
inc
imul
mov
or
in
mov
adc
jp
in
sbb
cmp
lret
shl
iret
mov
iret
jp
ds
dec
push
xchg
jle
arpl
mov
pop
xor
hlt
repz
aam
cmp
push
rorl
cmp
jg
out
mov
sub
push
or
cmp
xor
dec
fcompl
repnz
ffreep
jge
stos
or
outsb
hlt
jae
sbb
adc
jnp
bound
inc
subb
jle
popa
shl
pop
shlb
lret
addr16
add
lds
pop
inc
data16
adc
jbe
scas
mov
inc
cmp
push
in
and
dec
lret
leave
cmpsb
fadds
sahf
loope
xchg
jnp
cltd
sbb
cli
push
std
mov
pop
add
push
enter
sbb
and
mov
movsl
pop
hlt
adc
xor
sub
repz
test
fdivrp
or
jle
das
push
inc
pop
bnd
xchg
dec
daa
pop
fsubs
insl
push
dec
shr
loopne
sbb
push
pop
sub
mov
and
inc
hlt
aaa
fs
mov
stos
xchg
pop
loope
jmp
mov
pop
lcall
lret
out
lods
fidivrl
mov
and
repnz
dec
icebp
and
cmp
inc
mov
mov
inc
mov
adcl
push
xor
scas
jmp
adc
movsb
dec
mov
fdivs
mov
idivb
xchg
pop
test
push
and
dec
sub
sahf
rcr
call
pop
or
or
jbe
test
sbb
fst
mov
pop
dec
dec
ljmp
mov
mov
dec
mov
negb
aaa
fs
int3
mov
outsb
mov
jbe
nop
cs
psrlq
sahf
xchg
dec
popf
iret
into
cltd
xchg
aad
pop
shl
pop
imul
jno
ljmp
sbb
xchg
pop
dec
xchg
jl
dec
fistpll
call
inc
aam
stos
push
test
sub
je
push
jp
add
mov
xor
test
jp
jno
xor
jge
cmc
cmp
outsl
push
inc
xor
push
sub
js
lahf
dec
movsb
push
loop
mov
jmp
pop
fmull
aad
stos
stos
mov
or
mov
test
arpl
or
sahf
mov
xchg
addr16
mov
adc
push
scas
aaa
push
popa
pushl
ss
outsl
scas
push
mov
mov
sbb
pop
pop
add
push
mov
dec
daa
stc
fadds
popa
and
insb
popa
pop
mov
in
xor
adc
out
adc
lea
mov
aas
mov
shll
addl
cltd
sbb
lret
push
testb
cmp
jp
mov
jnp
dec
xor
out
xor
add
jno
mov
mov
mov
push
testl
inc
xor
test
outsb
cmpsb
lcall
inc
adc
inc
fwait
imul
fwait
sbb
into
movsl
push
mov
inc
mov
outsl
pop
inc
add
push
add
jb
lds
and
out
mov
imul
adc
cli
fimuls
ja
or
out
icebp
ss
and
xor
insb
mov
mov
inc
incb
xchg
dec
jle
mov
movsl
xchg
xlat
imul
xchg
xor
push
mov
stos
test
dec
add
pop
inc
cli
repz
aas
adc
xchg
inc
push
clc
popa
push
popa
xor
add
hlt
mov
jge
dec
push
fidivs
ja
adc
pop
pop
jno
jae
dec
mov
xchg
adc
pop
adc
xor
mov
fidivrl
daa
inc
iret
lret
out
test
icebp
sbb
cld
inc
inc
jbe
cmp
fbld
rcll
jae
int
sub
add
and
shrb
aas
push
mov
testl
sti
add
xchg
rcrb
jne
loopne
mov
sarl
icebp
or
dec
stos
shlb
lods
xchg
sub
jg
push
mov
cmp
in
pop
nop
das
sub
shlb
fcomi
aam
push
ds
daa
js
sbb
mov
cli
les
lret
movsb
xor
xchg
in
lods
cmp
stc
xchg
jne
fstpt
mov
rcrl
int3
sbbb
mov
or
cmpsl
mov
mov
jbe
or
xor
pop
insb
cmp
mov
leave
sub
aaa
jo
xchg
scas
adc
jns
push
ret
fisttpll
push
jnp
out
jo
mov
fdivrl
mov
je
popf
ret
scas
mov
insl
sbb
push
fidivl
shl
std
sbb
mov
pop
inc
push
dec
jmp
or
js
add
sarl
les
out
mov
xor
xchg
leave
xor
dec
xchg
or
das
or
pop
or
pop
dec
and
jns
test
xor
call
shlb
je
xchg
bound
hlt
pusha
addr16
scas
iret
jecxz
mov
mov
inc
cmp
aad
ljmp
bound
enter
int3
jecxz
mov
sbb
and
dec
test
xchg
sbb
dec
hlt
xor
xor
fstl
fs
arpl
mov
or
shl
pop
mov
adc
add
addr16
push
shll
add
dec
inc
lock
repz
inc
mov
shlb
std
std
mov
adc
movsb
cmp
pop
inc
add
int
in
test
ja
repz
pop
mov
pop
jmp
adc
mov
fiadds
add
inc
adc
dec
rolb
mov
pop
mov
inc
mov
and
xchg
les
pop
sub
iret
icebp
stos
sti
adc
ret
in
sub
test
cmp
inc
into
add
push
inc
mov
sub
out
dec
xchg
repnz
jns
pop
and
xor
and
ret
stos
adc
notb
xchg
fdecstp
cwtl
dec
jmp
ss
mov
arpl
xchg
ss
repnz
add
add
movsl
jbe
fisubs
jmp
jle
lock
add
adc
dec
mov
shlb
fisubrl
mov
xor
ds
xor
adc
dec
sbb
mov
and
call
mov
sub
cld
mov
insl
adc
push
push
xchg
dec
stos
mov
ret
das
xor
rorb
loopne
cmp
mov
jbe
cmpsl
fs
adc
sub
ljmp
addb
jb
push
cmp
sbb
cwtl
jne
int
xchg
ficompl
cmc
insl
mov
fidivs
fdivrl
sbbl
push
cmp
jno
lock
mulb
pop
cmp
inc
sub
mov
jnp
mov
and
int3
adc
sub
outsb
ficomps
les
aam
adc
jle
and
ffree
add
inc
sbb
cli
filds
imul
sub
jb
ljmp
in
add
pop
sub
faddl
fmull
stc
scas
insl
jl
adc
push
iret
mov
int
jmp
jo
push
mov
jl
fldenv
sub
cltd
lock
fwait
popa
sub
sub
dec
insb
into
outsl
dec
and
or
cld
stos
jge
xchg
xchg
movsl
mov
sbb
lret
cli
push
jge
mov
cmp
inc
insl
std
loope
dec
push
add
jecxz
jmp
mov
xchg
les
mov
ds
xchg
and
and
and
scas
mov
jmp
lock
rcrb
jp
aaa
loopne
mov
xchg
inc
in
or
jnp
jno
xchg
cmpsl
push
icebp
cltd
cli
imul
test
das
jae
scas
mov
xchg
popa
cmc
mov
pop
inc
cmp
call
pop
je
xor
mov
add
js
fdivl
mov
test
nop
pop
popa
xchg
push
lods
and
int
cmp
pop
insl
mov
ficoml
or
mov
adcb
mov
dec
add
negl
jbe
xchg
das
and
inc
je
cmp
aad
jns
pushf
xor
movsl
adc
xchg
mov
inc
push
ret
pusha
mov
mov
pop
sub
mov
ficoml
inc
orl
and
js
cmc
push
ljmp
sbb
cmp
leave
pop
sub
ljmp
mov
adc
lock
xor
shlb
insl
mov
das
mov
push
sbb
push
aam
push
push
movb
jmp
adc
test
ss
mov
lds
jo
scas
fisubrl
mov
xchg
push
jo
lods
fs
sbb
shrl
push
dec
hlt
and
xchg
push
shl
jmp
stos
mov
repz
jp
push
adc
mov
rcrb
pop
mov
insb
inc
repz
sbb
sbb
cmpb
sub
scas
adc
xor
fdivr
stos
mov
insb
xlat
stc
pop
out
inc
inc
out
sbb
loop
shr
xchg
rcrb
iret
lods
std
ljmp
dec
inc
push
pop
sbb
test
int
imul
daa
mov
imull
adc
sub
xchg
and
push
lret
push
sbb
in
nop
repnz
aaa
bound
add
jnp
les
sbb
data16
ret
push
inc
mov
mov
pop
pop
xlat
repnz
dec
jmp
adc
and
mov
gs
jo
inc
hlt
aaa
leave
adc
cmp
fcoms
popa
sbb
fsubr
push
popl
call
mov
daa
pop
mov
adc
jp
mov
push
test
jae
mov
xor
lds
in
gs
in
in
jnp
sub
mov
dec
idivb
in
into
or
adc
mov
inc
jle
xchg
dec
or
push
in
jecxz
sbb
ljmp
sbb
movsl
jp
lret
mov
xchg
aaa
rclb
or
mov
fdivrl
cmp
out
fmull
in
fsubs
bound
jge
cmp
bound
push
cmp
mov
cltd
fistl
or
mov
pop
int3
ds
loopne
cmp
pop
ljmp
cmp
shrb
inc
pop
imul
xchg
stos
xchg
push
pop
adc
cmp
mov
and
subl
or
in
sub
pop
pop
pop
enter
filds
pop
jo
sub
hlt
or
push
rcll
popf
lods
fwait
xor
mov
jnp
gs
mov
out
push
mov
loope
loope
mov
sahf
loopne
cli
rcrb
mov
in
sbb
test
repnz
inc
and
xor
clc
rcrl
or
testb
outsl
outsl
nop
cmp
pop
out
cld
sub
jns
mov
xchg
and
pop
jb
popa
sub
lds
adc
jne
cmpsb
repnz
dec
cwtl
jne
lods
leave
mov
lds
jno
aad
out
out
pop
lods
mov
dec
dec
mov
mov
cmp
mov
jle
out
imul
push
mov
or
jnp
iret
jno
or
add
shrl
xchg
shll
inc
add
fdivrp
aam
pop
out
and
or
js
cs
jmp
lret
addr16
xchg
movsb
mov
pop
adc
dec
mov
sub
add
hlt
or
les
clc
lcall
jmp
mov
scas
jmp
les
shrl
iret
jb
xchg
cs
call
and
fmull
xchg
hlt
dec
sub
fnstenv
adc
ds
jo
push
push
call
lock
or
pusha
pop
outsb
cmc
jge
mov
push
loopne
jl
cmp
imul
fwait
jne
fcmovu
mov
out
pop
jge
pop
cld
push
push
shll
scas
sarl
imul
jnp
pop
xor
outsl
push
inc
lods
mov
lds
call
movsb
and
add
pop
xchg
adc
xchg
jge
les
test
test
and
jmp
ja
insb
hlt
mov
lds
daa
cltd
and
cmc
adc
add
sahf
popa
imul
sbb
icebp
sub
mov
mov
pop
push
mov
xor
shll
dec
fdivrs
in
xor
dec
inc
ror
xor
fs
adc
mov
cmp
xchg
push
movl
xchg
out
mov
cmc
je
jns
inc
dec
loopne
bound
mov
leave
mov
mov
mov
push
mov
mov
cmp
je
add
movsb
push
shll
cmp
lahf
int
inc
mov
mov
xchg
test
sti
cmp
ja
or
xor
xor
lahf
lods
pop
xchg
push
out
xchg
pop
jmp
dec
and
int3
imul
dec
pop
mov
mov
into
sub
scas
jns
cltd
loope
add
daa
pop
cld
xchg
je
sub
push
mov
fisubrs
dec
mov
adc
inc
insb
sub
or
pop
insl
fidivrl
fwait
sbb
test
adc
jl
pop
ja
push
mov
inc
mov
fwait
mov
movb
test
std
dec
ds
jno
pop
push
sbb
pop
add
xchg
inc
sub
cmp
jp
inc
jle
adc
or
dec
clc
movsb
filds
push
push
adc
push
sub
test
jb
loopne
data16
and
stos
shll
insl
xor
andl
lods
inc
sbb
fs
mov
sti
ljmp
dec
inc
push
push
pop
sbbl
or
daa
hlt
mov
push
xor
arpl
jb
dec
testl
mov
insb
and
fsubrl
imul
imul
mov
sbb
in
cmp
sbb
lods
adc
cs
outsl
jae
cmc
mov
fs
cmp
addl
and
jle
in
arpl
or
mov
rep
lea
sub
pop
repnz
ds
sahf
xchg
jl
fadds
fbld
xor
fadds
ds
cmpsl
dec
cltd
mov
pop
movl
mov
es
sbb
jo
insl
jmp
fbld
lahf
fs
bnd
bound
jb
cmpl
xor
data16
aas
in
push
sbb
dec
mov
lret
add
lahf
insb
sub
inc
jne
mov
imul
ja
cs
mov
sub
movswl
jp
pop
jbe
out
testl
aam
fistps
cli
mov
mov
dec
scas
jge
inc
arpl
adc
mov
loopne
inc
mov
push
cmp
xchg
push
adc
mov
fidivrs
mov
ja
shrl
repz
pop
adc
or
mov
or
shlb
fs
add
xor
inc
mov
mov
and
or
dec
pop
repnz
std
lods
aaa
scas
push
pusha
dec
add
hlt
xor
mov
mov
sbb
jl
mov
les
hlt
inc
testl
mov
jnp
fildll
ret
adc
shlb
push
and
aaa
xor
frstor
or
xchg
iret
sbbb
xchg
leave
in
pop
mov
std
and
inc
mov
xchg
jo
mov
cmp
push
xchg
adc
pop
xchg
sbb
in
jno
outsb
dec
mov
stos
sarb
bound
test
mov
mov
jl
nop
cmp
mov
mov
pop
or
shr
ja
xchg
in
xchg
sbb
aas
jmp
mov
and
mov
out
in
xchg
in
xchg
imul
lea
daa
out
test
adc
mov
add
push
lret
and
pop
xchg
adc
mov
sbb
sub
xchg
pop
or
xchg
fimuls
mov
pop
cwtl
ret
cwtl
push
mov
shlb
insl
loope
and
loop
xor
mov
ja
xor
daa
or
je
or
js
add
dec
xchg
insl
mov
xchg
rcl
push
daa
add
lods
mov
adc
jp
lret
dec
adc
or
push
lods
pop
dec
arpl
sbb
insl
je
fwait
test
ja
cmc
xchg
mov
hlt
js
fimull
adc
movsb
cmp
mov
push
xchg
xchg
loope
scas
mov
sub
stos
insl
popf
daa
fidivl
jecxz
xchg
mov
cmpsb
testl
nop
call
lock
xchg
faddp
or
sbb
shrl
insb
push
xor
sbb
ljmp
inc
les
incl
push
jmp
insb
stos
int3
mov
ret
rcrb
and
and
mov
cmpxchg
pushf
js
sbb
dec
mov
pop
jmp
inc
fdivs
jo
dec
dec
fisttps
push
lret
aam
call
jg
and
aad
mov
test
jb
jo
cmpsb
inc
xor
xchg
cmp
std
xlat
movsl
dec
add
xchg
cmp
aas
ds
mov
pop
adc
sub
pop
fnstsw
dec
rcrl
addl
xchg
lret
and
aad
xchg
jp
fucomi
es
scas
sbb
xor
pop
mov
ret
sub
jl
out
or
imul
outsl
fldcw
fstpt
jp
jbe
data16
addb
mov
scas
jae
xor
or
std
push
push
fsubrs
and
mov
mov
js
fs
not
jo
mov
mov
mov
mov
adc
lea
mov
sbb
fucomi
jle
in
dec
cmpsb
pop
add
pop
scas
push
mov
shll
add
push
aam
ret
xchg
mov
mov
mov
or
ljmp
das
movsl
es
adc
out
mov
push
mov
ss
pop
mov
push
clc
fisttpll
or
mov
push
icebp
jmp
sub
add
ss
cltd
repz
insb
in
sub
cmpl
push
repz
pusha
mov
mov
ret
ficomps
stos
inc
pop
mov
imul
rcr
bound
ss
cmp
inc
pop
or
or
cmp
fwait
test
fcmovne
hlt
xchg
xor
xor
ss
idivb
cmp
xor
int3
inc
xchg
push
scas
into
pop
inc
sub
mov
and
lcall
xchg
stc
inc
pusha
adc
adc
lret
mov
bound
test
push
imul
icebp
xor
mov
dec
sbb
push
fisubl
cmp
shll
mov
mov
and
cmp
outsl
sti
sub
push
cmp
inc
mov
or
hlt
stos
or
es
jo
mov
push
jbe
outsb
ret
mov
jae
in
push
subb
cs
mov
pop
cltd
in
outsb
jmp
cld
in
jb
mov
aam
fcoms
mov
sbb
imul
test
push
dec
jmp
lret
xor
push
lds
push
add
sub
inc
pusha
loop
orb
or
xor
outsl
sar
mov
and
rcll
lods
mov
jno
pop
sub
cmp
fimuls
sar
pop
sub
push
pusha
pop
or
into
add
jns
iret
sub
and
lret
jnp
lcall
shl
iret
je
orl
jp
add
aad
mov
stc
clc
fcompl
ret
jecxz
add
add
and
pop
lods
xchg
mov
rcrb
jno
test
jle
popf
js
xor
dec
mov
loop
add
fiaddl
fdivl
div
ficompl
sti
sub
mov
sti
pop
and
add
aad
xor
jg
pop
cvtps2pi
pop
shlb
mov
stos
dec
and
lock
mov
fstpt
loop
pusha
sbb
mov
lds
push
lea
or
in
add
inc
scas
pop
out
add
arpl
addl
jae
sbb
push
push
andb
mov
inc
push
imul
adc
mov
add
inc
mov
hlt
sbb
das
jg
stos
push
loop
aad
repnz
mov
ljmpw
in
enter
pop
je
mov
je
into
jne
jno
lods
mov
jb
sub
sub
jg
das
pop
stos
sbb
push
pop
xchg
xor
cmp
jb
pop
ljmp
push
push
in
adc
jne
jle
lret
insb
roll
jbe
add
sub
xor
ss
and
ret
filds
je
cld
pop
dec
sbb
int3
faddl
je
rcll
xchg
rcrl
pop
hlt
ret
mov
mov
mov
mov
adc
xlat
add
sub
add
loop
rorl
pop
dec
xchg
mov
sbb
ljmp
sbb
stos
jne
mov
sti
or
test
sbb
pop
sbb
pop
ja
loopne
fdivp
jae
inc
jmp
dec
mov
outsb
lahf
xor
sub
jmp
mov
cli
adc
add
mov
pand
loopne
xorb
aad
or
jl
push
or
or
pop
xchg
pushf
cmp
add
arpl
jl
mov
sub
fyl2xp1
insb
pop
mov
cmp
sbb
pop
sbb
nop
sbb
xor
jne
push
sbb
push
pop
sbb
lret
mov
mov
dec
jbe
or
mov
cmp
imul
mov
mov
sbb
xor
jns
lock
sahf
mov
sbb
push
mov
loopne
fstpt
dec
popf
xchg
pusha
test
shlb
adc
jne
push
pop
insb
out
jae
mov
adc
xchg
les
pop
or
xor
sti
push
mov
pop
out
add
xchg
jmp
adc
ja
cld
jo
mov
xchg
mov
mov
cmp
xor
ret
add
mov
and
pop
mov
lret
outsl
pop
lock
scas
mov
std
xor
inc
mov
stos
jge
pop
shr
rorl
jo
mov
cmp
xchg
and
mov
sbb
lcall
mov
fmull
jb
mov
insl
mov
fbld
iret
adc
rcrl
add
fiadds
mov
fdivl
arpl
mov
in
sbb
mov
push
nop
inc
ljmp
mov
and
push
cld
sbb
push
jnp
and
cwtl
add
ret
rorb
inc
cmpsb
arpl
into
movsl
push
cmp
jae
scas
inc
mov
mov
cs
nop
xor
mov
in
mov
push
icebp
adc
cmpsb
dec
add
push
pop
and
test
ret
jo
xor
jbe
mov
ss
loope
les
test
out
hlt
add
int3
mov
inc
aad
jmp
sbb
push
hlt
pop
push
xorl
pop
xchg
jb
test
daa
outsl
add
pop
stc
outsb
ficoms
flds
mov
dec
in
jo
inc
pop
ret
loope
in
scas
ss
imul
cmpsb
cmc
or
repnz
iret
push
pop
das
xor
lret
or
push
test
mov
sahf
adc
mov
push
imul
rorl
test
lock
js
dec
cmp
pop
sti
inc
mov
rclb
mov
enter
mov
in
pushf
fs
mov
or
aad
dec
pop
mov
adc
ljmp
iret
call
scas
in
inc
in
lods
imul
adc
scas
aad
repz
jecxz
adc
fidivl
mov
adc
adc
mov
or
call
sbb
enter
mov
mulb
push
sub
and
out
lods
or
add
je
insl
dec
subb
mov
ljmp
outsl
jo
push
int3
in
mov
pusha
mov
add
push
push
dec
cmp
xor
pop
fwait
movsb
push
push
mov
dec
jecxz
out
xchg
lock
dec
cmp
mov
adc
and
mov
adc
and
mov
sbb
rolb
jb
and
mov
mov
and
aad
cwtl
and
shll
xlat
dec
jp
in
or
cwtl
aad
ss
jmp
inc
mov
in
ret
pop
xchg
mov
test
std
fs
arpl
mov
mov
or
xchg
stos
popf
jne,pn
xor
int3
mov
lea
mov
xchg
or
and
lods
aam
gs
in
push
sbb
out
sub
push
mov
pop
push
inc
insb
inc
mov
je
xor
popf
imul
outsb
xor
inc
xor
xor
adc
sub
rolb
jmp
fwait
pop
repnz
inc
mov
out
std
dec
pop
aam
adc
test
sub
fmull
xor
xor
das
test
in
and
hlt
insl
pop
outsb
ja
ljmp
lea
cmp
ljmp
loope
inc
inc
jecxz
lods
push
add
lret
cli
push
lods
rcll
sub
xchg
repnz
pop
and
lret
call
outsb
int3
mov
xor
jp
jo
loopne
lret
mov
add
jmp
imul
mov
pop
out
popf
insl
sbb
or
lret
sub
xor
xchg
inc
insb
out
jne
dec
sti
insl
mov
mov
mov
inc
test
jp
dec
push
xor
fs
aaa
xor
xor
inc
xchg
and
stc
stos
sbb
lods
stc
adc
lds
pop
jecxz
lods
test
xchg
aad
sbb
sub
sbb
jbe
dec
fimull
xor
xor
xchg
mov
lods
mov
lret
pop
sbb
xchg
mov
mov
jecxz
sarb
call
aam
push
rcrb
ja
jns
jne
jl
mov
data16
mov
lret
add
out
mov
popa
adc
sbb
test
mov
add
push
sbb
iret
sbb
or
pop
mov
pusha
xlat
addr16
push
inc
jnp
push
hlt
rolb
dec
jge
push
mov
jne
sub
push
xchg
repz
pusha
pop
sti
jmp
adc
leave
ret
cmp
adc
repz
inc
add
test
xchg
add
add
xchg
lods
mov
arpl
fsubrl
insl
subl
sub
lret
out
xchg
pop
push
push
pop
add
xchg
add
push
loop
pop
xor
or
incb
and
mov
std
popf
scas
sub
jle
pop
cmp
das
repnz
mov
inc
jmp
int3
jecxz
out
adc
ret
fstl
mov
xchg
sub
or
jno
in
and
fstpt
rcll
and
mov
das
push
lcall
jmp
test
mov
jb
scas
daa
mov
jl
orl
pop
mov
dec
dec
adc
imulb
xchg
pop
out
outsb
loop
push
inc
leave
ffree
ret
inc
adc
add
lret
in
stc
dec
lret
mov
push
bound
mov
movsl
insb
negl
popa
mov
ds
fdivrs
lret
push
xchg
fsubrs
mov
inc
dec
lods
xor
cld
popf
aaa
lret
add
pop
sub
jge
or
or
scas
dec
inc
sub
jmp
pop
lahf
pop
movsl
mov
stos
sbb
dec
mov
sbb
pop
dec
sub
jecxz
aad
xchg
or
stc
fimull
mov
sbb
int3
adc
in
push
pop
cmpsl
push
rolb
ss
mull
gs
in
sub
pop
sbb
jae
sub
lcall
cmp
repz
popa
les
pop
mov
pop
addr16
jne
add
mov
push
sub
sahf
mov
jb
ss
dec
push
scas
cmp
ss
mov
ret
adcb
xor
js
scas
ja
lahf
jns
mov
das
leave
push
or
cltd
jae
in
jecxz
push
push
mov
lock
addr16
notb
xor
xchg
stc
outsl
outsl
popf
fbstp
or
adc
sbb
mov
cmp
cmp
mov
push
movsl
jnp
int3
sbb
mov
push
or
or
xor
fnstsw
ds
or
in
jns
mov
xorl
mov
mov
enter
jns
jnp
pop
mov
inc
or
cmp
loop
xchg
in
insw
rcll
ret
cli
mov
inc
jo
inc
mov
test
stos
inc
and
fildl
xor
pop
add
dec
sarl
xorb
jnp
xor
add
stos
sbb
inc
mov
rorb
xor
mov
repnz
iret
push
test
push
psrlw
cmp
out
lds
push
xchg
mov
sub
fsubl
sbb
pop
and
inc
jne
pop
add
push
and
outsl
mov
in
inc
adc
jp
cmp
inc
mov
sub
fsubrs
jns
int
stos
add
in
add
cmc
bound
jns
mov
and
push
repz
dec
push
test
jns
or
shl
mov
pushf
je
push
insb
sbb
lret
cmp
aas
sub
mov
int3
fs
aam
call
xchg
sub
pop
push
cmpsl
pop
into
mov
fs
insb
mov
push
ficoms
repz
enter
pusha
mov
gs
pop
lret
or
cmp
mov
stos
inc
test
sub
sbbl
push
xchg
lods
fs
add
in
test
add
movsl
fstps
in
rep
pop
out
xor
add
push
aad
lahf
bound
cmpsl
sub
sar
cmp
aam
or
scas
xor
mov
mov
cs
fs
cltd
push
fimull
cmpb
fnstenv
fsts
or
out
repz
xchg
movsl
iret
pop
dec
inc
dec
jmp
movl
mov
ret
int3
sub
inc
xor
out
adc
or
push
imul
ror
push
movsb
mov
mov
xor
jmp
loopne
adc
xchg
ret
sub
add
cwtl
hlt
arpl
jp
mov
lret
cld
sahf
test
out
push
pop
sbb
xor
and
mov
dec
mov
cltd
mulb
cmpsb
mov
sub
and
dec
cmpsl
adc
cmpsl
pop
cmpsb
jb
ljmp
add
inc
in
pop
fwait
mov
imul
mov
or
or
and
dec
mov
ja
jno
in
push
push
aam
mov
jg
lds
inc
sti
insb
lods
into
jne
cmpsb
lcall
pop
jmp
adc
cmpb
sbb
mov
xor
jne
or
rcrl
enter
leave
sub
jae
mov
out
clc
jmp
aaa
scas
out
jo
cltd
mov
ja
fwait
add
or
movsl
icebp
adc
push
repz
shrd
mov
ret
adc
popf
fcoms
clc
repz
sbb
sub
cmpsl
xchg
jmp
xchg
lret
pop
cmp
out
pop
push
cs
jnp
bound
ffreep
int
sub
mov
int
or
in
cmp
outsb
stos
sub
shrl
dec
in
stos
jg
push
push
xor
pop
pop
aad
jmp
test
and
lret
mov
jno
incl
jp
pop
sbb
pop
repz
sub
cmpsl
xchg
test
ret
test
ljmp
es
adcw
lret
in
sbb
insl
or
cmpsl
push
adc
out
add
cld
shlb
sbb
xor
stos
cmp
enter
xor
data16
iret
jne
cmp
pushf
adc
mov
imul
pop
adc
jb
repnz
into
sub
push
into
ret
int
jp
test
loop
mov
in
add
jne
icebp
fwait
cmpsb
enter
pop
push
sub
cld
xchg
jle
cmpsb
pminub
jl
pushf
ljmp
inc
xlat
adc
xchg
cs
adcl
out
scas
jnp
cmpsb
pop
fistpl
cmpsl
push
sbb
inc
and
pop
jb
in
push
ficomps
ret
gs
mov
popl
cli
cmp
les
shl
fisttpll
jp
setae
push
in
aam
mov
in
jne
xor
ficompl
cmp
jmp
mov
pop
cmpsl
inc
imul
cmp
adc
jge
mov
jb
push
xchg
pop
cli
add
cmp
cmp
dec
cmpsb
ret
dec
into
jmp
mov
xchg
aad
lock
shlb
and
sbb
rcr
mov
xchg
add
cmpsl
adc
and
or
adc
fsub
fisttpl
out
adc
or
add
and
in
inc
bound
cltd
call
mov
sub
fildl
cwtl
in
js
sub
fbstp
fcmove
push
xor
in
xchg
clc
or
pop
xchg
add
mov
divl
lods
outsl
scas
push
push
and
cmp
cmp
dec
sbb
push
dec
or
push
jge
aaa
or
or
xchg
adc
cli
dec
loop
mov
ret
leave
push
xchg
std
dec
lret
mov
mov
sub
mov
lods
mov
push
and
lret
jl
int
call
rorb
pop
std
add
xor
movsb
mov
out
inc
bound
jp
movsb
xchg
setle
pop
stos
xor
jae
sub
punpckhbw
mov
and
adc
stos
jp
cli
aas
jecxz
mov
xchg
push
sub
cmc
int3
cwtl
test
outsl
data16
nop
xchg
jno
or
push
adc
fnsave
lfs
cmp
loopne
and
int
jg
pop
push
push
xchg
or
dec
stc
pusha
pop
aad
xchg
loopne
mov
cmpsl
jp
pop
lods
xchg
in
mov
cwtl
cmp
or
dec
cmp
xchg
es
dec
je
movsl
mov
lret
aas
sub
je
pop
cwtl
mov
lret
xor
repz
adcb
ljmp
mov
push
inc
fld
movsl
push
lahf
mov
insl
mov
lea
add
mov
les
cmpsb
scas
and
stc
jmp
pop
mov
cltd
mov
xchg
je
sub
push
ret
movb
push
pop
addr16
fcomps
mov
and
or
daa
push
in
sbb
push
inc
ss
mov
lea
xor
out
test
inc
divl
xchg
push
inc
xchg
in
popl
and
inc
fisubs
inc
dec
pop
mov
xchg
iret
div
xchg
sub
fdivs
cmp
pop
ret
jmp
mov
in
jb
and
cmc
inc
mov
imulb
mov
mov
sahf
inc
and
jge
cs
mov
loop
sub
xchg
mov
call
in
es
imul
int
stos
mov
into
cmpsb
add
xchg
repz
jo
jne
sbb
sub
dec
mov
loop
push
lock
mov
cmp
pop
cmp
ret
add
fmull
lret
mov
xchg
ja
xchg
arpl
cmc
scas
outsl
aas
lahf
or
data16
out
jg
jg
jp
pop
int3
repnz
add
mov
lsl
into
aad
jle
mov
jecxz
cmp
adc
mov
mov
and
aam
leave
and
cltd
mov
sbb
insb
call
mov
mulb
inc
pop
pop
sub
leave
mov
mov
push
rorb
mov
push
aad
mov
dec
push
popf
mov
adc
std
cmp
jo
jae
cltd
or
lock
sub
daa
test
std
push
jmp
mov
je
icebp
or
mov
stos
mov
decb
xor
js
mov
loope
ljmp
sbb
pop
scas
jnp
hlt
dec
pop
add
mov
jmp
xchg
inc
xor
sbb
add
stos
pop
andb
push
pop
inc
shr
aad
pop
fistps
push
cwtl
out
int
dec
jmp
rol
lret
mov
dec
push
inc
dec
cmp
pop
lret
pop
and
push
mov
sub
pop
sub
sub
stos
cmp
fdivl
lock
repnz
and
adc
repnz
adc
jno
jae
mov
imul
js
mov
sbb
mov
movsl
popa
sub
xor
add
jecxz
adc
mov
dec
mov
lock
and
lea
adc
gs
icebp
jmp
mov
icebp
add
test
adc
jmp
adc
aaa
inc
ret
stos
test
mov
cs
jle
ljmp
cmp
scas
outsb
es
dec
sbbb
scas
xchg
inc
mov
xor
add
push
push
popf
popa
aad
ret
in
sub
or
xor
cmp
fadds
jno
int
and
add
or
insl
das
addr16
sub
mov
mov
jl
les
es
pop
xchg
movsb
cmc
das
push
cmp
shl
scas
sbb
and
mov
out
mov
xchg
std
add
shrb
push
scas
and
push
clc
adc
xchg
pop
or
sbb
inc
cmp
inc
push
xchg
jne
pushf
inc
pop
lret
or
sbb
mov
xor
sbb
repnz
dec
mov
mov
add
mov
sar
cmpsl
mov
dec
nop
jecxz
dec
dec
js
outsb
into
cmp
iret
mov
xor
sbb
bound
push
adc
xchg
jle
xchg
cmc
aad
pop
sbb
jne
pop
xchg
lea
call
jp
cmp
adc
out
sbb
ret
push
inc
pop
test
sbb
lods
add
aam
jno
pop
sub
xchg
stos
rcr
mov
lret
mov
mov
fwait
jo
loopne
mov
jl
adc
push
xchg
jo
int
outsb
outsb
add
cltd
sub
sbbl
enter
adc
dec
test
jg
dec
adc
add
cld
mov
xchg
les
cmp
lea
mov
push
lret
dec
mov
push
into
pop
inc
mov
sub
mov
and
fisttpll
cmp
clc
pop
push
xchg
cli
shr
mov
cmp
call
adc
lds
int3
jge
push
jnp
push
cli
jecxz
xchg
sub
push
clc
inc
pop
cmp
cld
inc
int3
in
or
loope
jne
call
adc
test
rorb
mov
xchg
inc
sti
push
pop
out
sbb
xchg
fbstp
shrb
lret
and
sbb
sub
and
cmp
jecxz
sti
out
dec
mov
or
inc
into
push
dec
sbb
jmp
insl
imul
addr16
daa
jbe
nop
repnz
adc
orb
jns
into
fsubrs
sti
nop
fs
loop
dec
lret
xor
std
pop
xlat
mov
sbb
movsl
jbe
push
ja
mov
pop
das
pop
cmc
and
add
dec
aas
mov
mov
add
cltd
outsl
mov
subl
pusha
bndldx
pop
xchg
push
or
cmpl
call
addb
push
mov
mov
pop
in
mov
push
mov
jmp
or
and
hlt
pop
pop
push
dec
xor
test
stc
xchg
dec
jle
loope
shll
add
rorb
cmp
ljmp
pusha
sbb
push
mov
fwait
jne
int3
sub
cwtl
mov
lods
dec
sub
out
orb
sbb
lds
jo
jge
sub
sbb
mov
mov
mov
cmp
imul
pop
cld
pop
push
div
std
mov
cmpsl
push
mov
xlat
test
aad
cmp
push
xlat
jmp
in
aaa
ds
inc
push
je
push
push
ljmp
xchg
clc
dec
subl
xor
inc
dec
cli
add
stos
jbe
dec
rcl
daa
add
movsl
enter
imul
fstps
mov
fidivrs
sbb
daa
lods
xchg
js
orl
call
mov
adc
sbb
mov
stos
mov
rcrl
lret
ds
jl
mov
mov
or
ds
xchg
clc
in
mov
out
jbe
sbb
adc
into
fstpt
xchg
or
mov
in
jmp
sub
pop
mov
pop
add
lcall
sbb
lods
cmpsl
sarb
roll
mov
push
js
loope
scas
jbe
rcrl
nop
ret
enter
jbe
insl
add
dec
jb
aad
test
data16
in
mov
xchg
adc
mov
pusha
clc
lock
lods
or
mov
fdivrl
sbbb
int3
sahf
test
pop
jecxz
fldenv
and
dec
loope
insb
ror
idivl
out
xlat
inc
mov
inc
loop
clc
add
insb
outsb
cmpsl
faddp
jne
imul
pop
ficoml
daa
into
xchg
fisttps
jae
xchg
mov
stos
pusha
test
lds
push
aam
icebp
popa
lea
cwtl
jl
roll
mov
xchg
mov
adc
adcb
sahf
cmpsb
dec
push
nop
lock
es
addr16
movzbl
cmpsl
and
insb
sahf
js
aad
ds
in
add
shrl
cmpsb
push
sbb
dec
mov
test
lds
orb
xchg
mov
or
or
sub
add
sbb
inc
jno
xchg
lods
or
sbb
rol
hlt
insl
mov
ss
orb
stos
pushf
jnp
jmp
bound
dec
or
xchg
cmp
sub
cmp
jge
fwait
dec
scas
jbe
or
out
outsl
adc
inc
and
clc
fs
mov
push
sbb
decl
sti
cmp
loope
xchg
out
inc
rclb
aad
fyl2xp1
dec
push
inc
into
xchg
fs
add
repnz
int
mov
mov
les
int
dec
mov
repz
cmc
in
clc
pop
ret
movl
cs
inc
mov
dec
repnz
xor
rolb
and
add
shlb
add
or
jecxz
mov
loopne
pop
test
repnz
mov
sbb
aad
push
data16
and
and
mov
pop
bound
ret
dec
sarb
jle
inc
vpunpckhqdq
mov
push
dec
cmc
lea
in
out
movb
mov
shlb
fimuls
dec
cmc
sbb
fscale
lret
mov
or
loop
stos
xorl
lock
sub
sub
mov
loope
sbb
inc
cmp
cs
push
lcall
pop
movsb
test
xchg
push
popf
popa
inc
popf
nop
add
mov
mov
sbb
push
shll
fcoml
and
popa
push
call
pusha
sbb
jbe
call
cmpsl
icebp
push
imul
out
test
mov
pop
jbe
inc
jmp
out
adc
lods
inc
lret
cwtl
jl
cltd
lret
repnz
jb
std
or
sub
add
jg
mov
xchg
add
cmp
subb
inc
xchg
fmuls
pusha
and
xlat
xchg
cmp
pop
ret
xor
mov
movsb
rcll
std
int
into
andl
mov
cmp
mov
mov
outsb
aam
test
push
cmp
mov
pop
cwtl
dec
adc
dec
insb
mov
icebp
js
pop
add
movsl
push
sbb
mov
inc
scas
push
mov
cmpsb
pop
xor
iret
sub
or
outsl
mov
jge
cltd
cmp
int
ret
and
xchg
sti
fldl
cmpsl
lods
shll
ffreep
xor
pop
mov
add
mov
movsb
aas
es
in
pop
std
push
xchg
sti
push
sub
subb
sbb
xchg
xchg
sti
add
or
loopne
loop
mov
sbb
pop
stos
mov
aas
into
jmp
pop
enter
push
pusha
xor
mov
fisttps
imul
ror
lret
cmc
mov
cmpsl
ljmp
lea
aaa
pop
notl
lock
xchg
dec
xor
xor
je
pop
cmp
pop
and
into
ret
or
or
fs
cltd
jecxz
and
dec
sbb
mov
loop
jnp
roll
dec
gs
sbb
lret
mov
mov
xlat
sti
arpl
stos
movsl
in
sahf
lcall
popa
dec
in
pop
in
and
dec
call
js
sub
repnz
cmpsb
enter
add
mov
and
push
test
xchg
stos
xor
ret
mov
add
mov
push
nop
loopne
rcr
lock
loope
lcall
aaa
lret
sbb
adc
cmc
int3
pop
fs
mov
jecxz
stc
pop
mov
sub
push
xchg
sbb
imul
movsl
cmp
lret
jmp
out
enter
sub
repnz
or
jp
nop
js
ljmp
lret
into
insb
pop
sbb
xchg
in
outsl
nop
adc
lret
add
xchg
push
stos
pop
outsl
cwtl
cmp
fs
mov
adc
jle
jl
lods
adc
lcall
aam
loop
rcr
call
fdivr
stc
ret
pop
in
dec
mov
insl
std
repnz
dec
imul
pop
add
movb
mov
add
fistpl
pop
leave
mov
int3
lods
xchg
faddl
cmc
insb
divl
xchg
sub
fs
jo
push
pop
ret
add
js
loop
dec
cmp
push
push
add
test
ja
push
into
mov
mov
push
lock
aaa
pop
mov
and
or
repnz
or
or
mov
ljmp
js
lcall
test
fnstsw
jb
cmp
adc
mov
movsl
hlt
lods
or
inc
jno
subl
mov
inc
push
pop
mov
jmp
xor
leave
rol
pop
pop
dec
mov
fnsave
push
fstpl
sbb
sub
mov
pop
test
frstor
insb
lods
jmp
icebp
mov
sti
xchg
adc
xor
js
cmpsl
fs
or
xchg
push
xchg
jle
xchg
jns
jge
orb
test
jl
adc
push
xor
fcoml
sti
jnp
mov
push
subl
jb
pop
stos
pop
xchg
mov
mov
mov
dec
sub
out
jb
jmp
leave
adc
ficompl
add
pop
ret
cltd
adc
or
add
jecxz
push
add
xchg
jb
mov
sbb
sub
jle
inc
dec
push
push
rorl
test
inc
adcb
pushf
push
pop
adc
mov
and
ss
jb
loopne
mov
mov
in
cmpl
pop
mov
dec
sahf
jg
repnz
push
stc
cmp
call
in
adc
push
jo
sub
adc
inc
ds
or
xor
ss
int
jne
adc
xor
fildl
fiaddl
fadd
mov
xchg
ds
mov
das
or
mov
aaa
or
dec
mov
fisubrl
loope
repz
ds
dec
sbb
incl
mov
pushf
pusha
ja
xor
push
or
xchg
repz
mov
cltd
jp
lods
mov
decb
enter
mov
or
mov
addr16
sub
es
jbe
and
xor
ja
sbb
push
xlat
out
in
repz
fcoms
pushf
pop
jo
pop
bound
jmp
mov
lods
push
push
ljmp
push
cld
mov
enter
dec
in
mov
int
mov
mov
jnp
mov
xor
imul
mov
imul
xor
fstps
fucom
loopne
stos
aad
int3
pop
push
dec
loope
fdivs
cs
pushf
sub
sbb
stos
jmp
jge
rep
jp
hlt
lcall
cmpsl
iret
dec
pop
imul
rcrb
add
mov
cmp
imul
push
bound
pop
ret
and
cmpsb
insl
sub
xor
loope
jns
les
sahf
xlat
lret
add
das
cmp
mov
arpl
or
in
push
dec
push
or
ret
jp
mov
jae
mov
xor
xchg
cmp
cmp
adc
outsl
jb
aam
mov
push
mov
ret
push
cmpsl
cmp
mov
mov
fs
dec
std
movsl
xchg
inc
fmuls
or
fwait
es
sbb
xlat
out
icebp
sbb
jno
mov
cld
ds
fnsave
cmpl
pusha
xor
add
mov
mov
jbe
loope
adc
cmp
ret
xchg
push
ror
dec
jae
mov
bound
test
inc
push
xor
aaa
and
sbbb
mov
mov
mov
int
rcrb
sti
movsl
jno
scas
push
popf
out
mov
cmovnp
pusha
je
ds
mov
adc
adc
pop
jmp
in
add
stos
adc
pop
mov
pop
es
stos
inc
ljmp
cld
dec
mov
pop
pop
pop
xchg
ret
xchg
and
pop
jnp
mov
hlt
cld
repz
loope
sub
pop
out
pop
pop
addl
sahf
pop
xchg
pop
jp
sub
jae
test
jge
jle
mov
repnz
fwait
mov
movsl
or
pusha
inc
xor
lds
push
cmp
xor
aam
add
xchg
cs
inc
sbb
ret
jg
fbstp
adc
js
mov
adc
cmpsb
lret
fs
jbe
inc
sbb
pop
mov
or
insl
cltd
and
in
dec
inc
cmc
mov
cmp
sbb
jle
shlb
xchg
cs
mov
fimull
cmc
rcrl
mov
popa
scas
and
push
pushf
pop
push
mov
sbb
sub
xchg
dec
push
cmp
lods
std
sub
jp
filds
fisttpl
clc
adc
push
cld
cmpsb
sti
xchg
xchg
stos
into
push
ja
js
and
enter
leave
jge
mov
repz
mov
data16
mov
inc
mov
mov
into
sub
loop
sub
lahf
out
lea
or
repnz
pusha
pusha
mov
movsl
cwtl
es
xchg
sbb
inc
jle
and
orb
push
inc
dec
mov
test
sbb
cs
or
imull
mov
dec
into
jnp
dec
in
jg
fs
in
adcl
xchg
loope
pop
repnz
hlt
mov
insb
inc
cmp
mov
lods
fistpll
xor
mov
sbb
cmp
push
stos
popf
xorps
test
add
mov
pop
inc
mov
lret
fwait
xchg
add
fdivs
jne
pop
adc
shl
ss
or
out
decb
cld
out
lock
xor
pop
imul
add
adc
xor
sti
add
int3
mov
mov
mov
jnp
loop
cli
mov
in
mov
sti
scas
lds
jae
lock
mov
cmc
push
idivb
sbb
and
in
mov
sub
sbb
jb
cwtl
inc
aam
mov
ja
pusha
mov
lret
inc
or
sbb
js
jb
cld
bound
mov
mov
fs
mov
ret
jmp
stc
sti
cmp
subb
inc
dec
cli
inc
cmp
sbb
jae
jo
push
std
mov
shlb
add
sub
insb
data16
jle
aam
out
loop
push
and
and
sub
in
sarl
xchg
les
aas
movsb
loop
lea
mov
es
mov
adc
add
fwait
sub
or
js
adc
aas
sbb
aaa
xchg
in
fcom
sbb
xchg
ds
cmpsb
or
scas
sti
jg
jo
in
gs
loope
add
popa
lods
addr16
cmp
or
push
fbstp
sbb
xchg
cmc
pop
subb
insb
pop
jbe
or
ljmp
adc
dec
insb
in
or
mov
lret
iret
je
add
int
jp
xor
inc
and
in
adc
and
xchg
jb
dec
mov
or
daa
lock
sahf
bnd
push
dec
dec
ljmp
jle
clc
aad
mov
jmp
xor
push
mull
dec
push
pop
jmp
into
cmc
sub
es
stos
push
jl
sahf
and
or
dec
xchg
push
push
add
jle
icebp
pop
and
sub
mov
sbb
js
insl
add
mov
xchg
ja
xchg
cwtl
addr16
in
add
dec
pusha
cmp
push
or
nop
inc
inc
lea
ja
loop
in
imul
dec
repnz
jl
sbb
dec
mov
cwtl
jns
add
sbb
mov
inc
dec
sub
or
outsb
mov
cwtl
insl
and
mov
ljmp
imul
movsl
push
fisubl
lds
imulb
xlat
adc
dec
jae
mov
cmpsb
popf
cmpsl
dec
outsb
xchg
push
cwtl
xchg
push
push
in
sub
xor
cli
in
int
pop
mov
lcall
pop
mov
movsb
in
lock
mov
push
cmpsl
inc
mov
and
loope
mov
xor
add
shlb
pop
nop
fs
xor
lods
pop
cli
dec
pop
xchg
scas
and
mov
pop
mov
into
adc
jecxz
loope
pop
fmul
je
cltd
aas
push
ss
int3
cmp
test
sbb
adc
test
pop
xor
pop
jno
pop
cmp
mov
sub
push
mov
fdivs
push
pop
pop
lock
sub
adc
in
push
pxor
jb
add
push
inc
push
dec
jbe
mov
sub
pushf
insb
nop
cmpsl
pushl
sub
in
mov
and
pop
daa
neg
push
hlt
loop
das
push
iret
jmp
jns
mov
cwtl
inc
test
ret
push
fnstsw
fsts
in
mov
popf
xor
jmp
sbb
push
ds
test
sahf
pop
xchg
mov
loop
aas
dec
mov
insb
pop
and
inc
cmp
nop
xchg
notb
jne
sbb
rcr
mov
sub
adc
es
mov
and
out
mov
mov
add
loopne
in
mov
loopne
add
mov
hlt
cmp
inc
mov
cmpsb
and
inc
cs
adc
and
fcoml
stos
adc
ret
outsl
add
shrl
ret
xlat
and
sahf
ljmp
das
in
pop
imulb
ljmp
and
leave
mov
nop
mov
cld
lds
int
mov
loope
adc
scas
flds
cmp
sub
aas
push
sbb
adc
jle
inc
inc
out
sbb
pop
jb
xchg
insl
frstor
addr16
xor
mov
inc
cmp
inc
loope
and
push
inc
mov
gs
push
mov
imul
ja
ret
je
mov
out
sbb
shll
lea
imul
test
push
call
and
loop
cmp
mov
lcall
mov
cld
in
dec
movsb
cmp
push
fwait
sbb
out
cld
sub
int3
iret
nop
sub
ljmp
sbb
mov
or
incl
in
jg
jecxz
xchg
xchg
pop
push
fwait
adc
sub
movsb
jno
mov
jp
repz
pop
sbb
or
xor
es
mov
das
nop
sbbb
sub
ljmp
push
rcrl
out
adc
pop
and
enter
push
mov
enter
pop
lea
mov
lods
cmc
int3
test
xchg
pop
inc
dec
adc
rolb
jno
sbb
adc
push
cmpsl
jne
pop
jnp
ds
jg
orl
add
mov
adcl
jbe
cmpsb
aas
add
mov
cmp
dec
or
pop
ret
jne
xchg
les
mov
mov
test
xchg
out
inc
movl
pop
rclb
xor
and
iret
or
adc
sub
and
or
adc
movsl
push
test
xchg
hlt
push
aad
inc
bound
fisubl
jb
push
dec
mov
subl
pop
lret
ljmp
pushf
iret
mov
add
add
rol
cld
pop
sub
nop
sub
push
and
in
inc
pop
xchg
clc
loope
stc
insl
jno
or
jae
mov
xor
xchg
cmp
outsl
cmp
mov
dec
movsb
movsl
out
inc
rep
xor
sbb
loopne
rcll
fisttps
outsl
pop
push
add
inc
cmc
lcall
adc
pop
aad
dec
push
stos
mov
add
jne
fdivrs
jns
add
or
ljmp
xchg
xlat
pop
pop
or
and
mov
mov
inc
inc
and
cmp
xchg
jnp
dec
and
and
add
dec
ljmp
jno
inc
ja
pop
shll
repnz
lcall
sub
das
mov
mov
cmp
mov
popa
fcmovb
sahf
pop
jmp
and
add
mov
and
repz
test
scas
add
popa
xchg
inc
rep
ss
stc
add
dec
jmp
cltd
repz
xchg
cmp
out
push
or
xor
sub
xlat
cli
mov
xor
inc
xchg
fildl
and
arpl
lret
rcll
jp
add
aas
sbb
mov
sub
lds
push
addr16
addr16
out
shl
and
pop
stos
xchg
stos
aaa
movsl
cmp
jge
add
loop
sub
pusha
or
mov
inc
jmp
inc
das
mov
clc
std
in
ds
jg
rorl
xchg
ss
pop
pop
fisttps
pop
test
push
dec
and
test
cli
insl
dec
arpl
repnz
xor
cwtl
stos
or
cwtl
jg
xor
jge
lret
cs
dec
dec
fcoms
fwait
std
add
and
mov
push
or
ror
out
add
xchg
adc
jae
xor
scas
sbb
or
fisubrl
adc
icebp
stc
xor
mov
out
je
push
adc
mov
fstl
jne
jae
push
jl
and
lds
mov
xor
mov
stos
or
mov
stc
push
pop
inc
mov
pop
int3
in
ds
fdiv
loopne
test
jno
test
in
loopne
popa
aam
scas
pop
je
loop
add
cmp
and
mov
movsb
outsb
inc
or
dec
sbb
xlat
mov
andb
je
push
imul
mov
add
in
int
and
js
dec
imul
pop
sub
and
outsb
xor
pop
ret
pushf
jns
shll
mov
and
jnp
cli
pop
or
pop
int3
and
insb
notb
das
dec
jg
cli
mov
cli
addr16
push
scas
stos
inc
adc
add
push
lahf
test
das
jl
testb
sbb
jo
jae
movsb
jg
insb
movsl
aaa
arpl
fs
lea
add
leave
mov
fsubrl
xchg
sub
icebp
addr16
lret
xlat
popf
and
test
add
subb
sub
repnz
lret
pop
into
setnp
or
mov
xor
ss
in
dec
lahf
enter
inc
cmovg
loopne
iret
loop
mov
mov
ret
mov
repz
dec
push
icebp
shrb
andb
ljmp
mov
out
repz
in
push
dec
in
imul
mov
std
lahf
mov
mov
ds
insl
xchg
int
mov
arpl
inc
cmc
add
xchg
jp
das
jae
jae
xchg
push
fldt
out
mov
push
inc
or
pop
inc
mov
neg
push
cs
pop
test
mov
movsb
mov
jb
ja
and
popf
call
jbe
jmp
jne
or
in
or
xor
pop
adc
sub
jns
add
int3
mov
jno
dec
test
rcll
dec
inc
mov
dec
mov
cwtl
stc
push
fstl
adc
outsb
cli
add
push
dec
add
lods
sbb
cld
incb
outsb
into
fisttps
and
add
or
add
and
pop
mov
pop
loopne
pushf
and
movsl
jbe
fcompl
adc
movsb
dec
dec
cwtl
add
and
add
pop
pop
pop
iret
push
pop
lret
lahf
stos
stos
aad
scas
hlt
and
loop
xor
adc
lahf
mov
mov
dec
mov
jge
outsb
sub
pmaxub
test
or
mov
std
es
jnp
pop
outsl
insl
out
mov
stc
jp
mov
repz
and
push
xchg
push
or
aam
int3
fcoml
out
cmpsl
cvtpi2ps
mov
ljmp
lock
cmp
mov
mov
in
rolb
lds
xchg
lret
mov
sbb
arpl
stc
mov
push
bound
daa
ja
fimull
in
and
or
sbb
popf
mov
mov
repnz
cmovns
push
adc
add
out
rolb
shlb
lods
mov
data16
in
and
pop
jae
ret
sti
iret
push
push
sub
push
xchg
test
lret
daa
mov
xchg
xor
or
xor
jle,pn
mov
in
adc
daa
sub
push
mov
push
dec
jnp
cmp
outsl
test
push
add
mov
movsb
scas
mov
jno
pop
inc
lods
cmpsl
out
mov
int3
int
les
mov
pop
adc
push
lock
dec
mov
fimull
inc
add
mov
test
pop
loop
sub
lret
or
sub
data16
scas
xor
cmpb
sarl
mov
push
ss
test
push
mov
aad
fs
cmp
js
out
jl
lods
and
pop
clc
adc
nop
stc
and
adc
adc
lock
cs
enter
stos
outsb
push
xor
lock
and
sbb
out
fsubs
cmp
loop
pop
sbb
sbb
xchg
pushf
xchg
gs
js
jp
adc
insl
xchg
ss
jno
cli
popf
out
jno
jmp
mov
pop
ja
push
sub
inc
js
test
jne
sti
jns
pop
jo
in
mov
test
dec
int
enter
jb
fistl
rol
adc
pop
call
add
mov
insb
mov
leave
scas
loop
inc
in
imul
loop
shll
aaa
pushf
das
in
xchg
divb
shll
sub
movsb
dec
mov
or
insb
jae
aad
pop
mov
ret
cmp
mov
jb
dec
cmc
push
ficoml
aaa
fs
cmc
cmp
ud2
push
int3
jnp
pop
jle
push
mov
loope
sbb
and
mov
push
push
insb
cltd
cmpb
cli
in
inc
mov
in
in
inc
xchg
movsb
xchg
dec
dec
mov
fldz
xchg
fs
inc
pop
movsl
sub
push
test
mov
xchg
stc
xchg
mov
jnp
iret
out
out
loop
scas
lea
ret
cmp
aaa
inc
push
cmc
sbb
andb
inc
insl
inc
and
sbb
pop
fbstp
ds
fnsave
mov
ret
repnz
dec
pushw
add
ja
xchg
or
daa
cmp
adc
xchg
inc
es
jecxz
fucomip
sar
lods
sbb
fwait
popf
sahf
ss
pop
jnp
mov
mov
rcl
mov
add
sahf
sbb
jl
push
xchg
hlt
cld
add
js
lcall
sub
sub
add
call
cmc
or
mov
inc
xor
repnz
testb
dec
lods
pop
test
cld
dec
and
fiadds
into
adc
jp
rolb
pop
test
lret
shrl
jo
jo
add
nop
cli
adc
cmpsl
scas
pop
shlb
mov
jno
icebp
xchg
mov
out
xchg
add
mov
inc
aas
lock
mov
cltd
adc
out
repnz
incl
aam
in
mov
lcall
adc
or
dec
pop
test
lret
jbe
insl
andnps
lea
jb
sar
xor
out
mov
adc
pop
fs
js
inc
cs
lock
iret
xchg
xchg
mov
inc
push
mov
xchg
movsb
insl
jae
mov
mov
push
repz
dec
cmc
fisttpll
mov
in
popf
mov
inc
lret
into
incb
jp
mov
cli
push
data16
dec
cld
dec
insb
sarb
push
fstps
pop
jae
and
and
mov
fistps
out
or
fisubs
lret
mov
mov
bound
jmp
clc
orl
xor
pushf
jmp
sbb
mull
in
cli
sbb
data16
inc
pop
pusha
sub
test
insl
jge
sub
dec
adc
loop
leave
sti
cmpl
es
subb
mov
hlt
xor
push
sbb
pop
cmp
or
mov
add
jecxz
mov
in
hlt
cmp
push
xor
xchg
mov
in
jg,pn
dec
xchg
mov
mov
jmp
mov
fcompp
xor
sub
xor
out
je
jb
add
clc
adc
inc
sbb
mov
out
mov
and
mov
orb
mov
push
mov
jl
fwait
xchg
dec
cwtl
mov
jle
test
cmp
cs
sbb
jne
mov
mov
or
out
xorl
xor
mov
jo
inc
or
push
xchg
mov
ja,pt
das
fisttpl
xor
out
addb
and
push
roll
xchg
je
js
negl
negl
jb
xor
stos
mul
jmp
jp
mov
mov
dec
stc
arpl
mov
loopne
adc
outsb
inc
or
divl
adc
popf
outsl
mov
je
test
inc
das
mov
aad
stos
pop
pop
loope
dec
and
xchg
add
jb
popa
cld
aaa
mov
mov
sarl
sahf
mov
mov
cmp
clc
fidivrs
pop
push
and
xchg
out
jge
pop
aas
les
mov
mov
pop
ret
mov
fisttpl
in
push
add
xchg
in
xor
out
pushf
cli
clc
jns
les
add
sub
xor
call
mov
inc
mov
sbb
aad
pop
xor
js
pop
iret
nop
inc
xlat
mov
and
popf
jnp
rclb
or
inc
ja
mov
or
test
mov
push
test
or
ljmp
add
in
push
add
mov
sub
push
mov
cmp
cs
lea
adc
push
sbb
xlat
cmp
ret
das
pusha
jne
mov
xchg
fistpll
shrb
mov
fidivs
push
mov
cltd
es
leave
pop
lret
jno
sahf
mov
addl
push
in
outsl
test
outsb
push
pop
mov
add
gs
inc
ret
in
in
mov
rcrl
outsl
mov
in
outsl
or
jb
push
aad
imul
loope
into
push
sarl
daa
sub
stc
adc
pop
std
mov
add
ret
xor
pusha
and
jb
mov
dec
inc
iret
je
xlat
pusha
movsl
mov
jecxz
xor
ds
dec
clc
out
fildll
addr16
std
dec
loopne
aaa
in
push
push
pushf
test
or
es
cmpsb
or
pushf
test
popa
movsl
test
mov
sub
add
sub
pushf
lret
mov
imul
push
and
rorl
lods
push
sti
adc
ja
icebp
inc
pushf
push
iret
mov
sub
fistps
xlat
in
daa
jno
ss
imul
xor
pop
test
push
xchg
repnz
dec
xor
adc
mov
xchg
mov
mov
ret
lcall
adc
in
std
int3
mov
scas
inc
mov
fimull
imul
bound
aas
test
cwtl
dec
add
filds
mov
sbb
mov
inc
jl
fcoml
sub
push
into
xchg
movl
outsb
dec
xor
pop
cmp
cwtl
inc
add
and
or
cs
mov
out
scas
fmulp
sbb
fmull
cs
jmp
or
data16
push
sbb
aas
aas
xchg
scas
nop
add
leave
dec
mov
jnp
cmc
ret
rcrb
xor
mov
adc
ss
iret
enter
test
pushl
push
xor
test
icebp
and
stc
dec
mov
mov
add
jmp
mov
repz
rorl
jne
mulb
dec
fxch
leave
mov
xor
data16
clc
or
add
cli
mov
hlt
shrl
insb
xchg
ljmp
dec
dec
xchg
sub
das
cs
orl
xor
shl
cmc
leave
pop
jp
push
jb
bound
push
les
pushf
fnsave
repnz
sbb
dec
or
test
movsb
ljmp
cmp
mov
sub
inc
aad
inc
fstps
dec
dec
xchg
lods
mov
out
int3
inc
cmpsb
movsl
mov
jbe
int
or
mov
roll
test
rolb
xchg
jno
rcrb
jp
xchg
ja
in
out
cmp
push
xchg
xchg
out
dec
mov
or
mov
mov
in
mov
adc
mov
shrl
ja
cmc
xchg
imulb
js
mov
clc
mov
pop
jg
lret
jne
mov
or
inc
das
cmpsl
inc
cwtl
push
mov
test
add
mov
mov
pop
fldt
and
add
jbe
outsb
add
sbb
cmp
cli
inc
pop
jnp
outsb
cwtl
fs
clc
mov
jno
or
lods
mov
cli
sub
xchg
xchg
inc
cltd
cmp
bts
inc
or
repnz
stos
cmp
xor
js
in
push
pop
lods
insl
push
dec
stos
les
cmp
sbb
fs
dec
cmpb
popa
insl
imul
loopne
adc
dec
in
cwtl
in
xor
jmp
or
inc
sbb
push
cmp
jmp
or
xchg
pop
int
pop
cmp
mov
call
fidivs
popa
mov
fmul
iret
dec
jae
sbb
mov
add
push
push
mov
mov
in
xchg
ret
ss
and
push
inc
std
mov
jg
shll
int3
pop
test
push
test
arpl
mov
push
out
in
or
mov
movsl
das
add
outsl
dec
movsl
mov
xor
inc
ret
es
xor
mov
mov
mulb
and
hlt
mov
mov
cmpsl
outsb
shll
hlt
shr
mov
mov
out
jl
mov
cmp
lret
shlb
xchg
jno
lret
es
and
push
jg
test
push
jmp
sub
jbe
out
adc
xor
lahf
mov
jo
and
and
push
or
test
pop
sbb
fists
loop
fdivrs
sub
fnstenv
jne
pop
or
and
ds
mull
fs
inc
bound
movsl
xor
adc
dec
mov
add
mov
push
mov
xor
loop
mov
push
imul
cmp
jp
mov
xchg
push
lods
popa
pop
ja
push
mov
inc
movsl
lock
mov
rclb
fistps
push
in
test
mov
sub
fsubrs
dec
sti
sub
push
jnp
pushw
sub
sbb
pusha
adc
mov
outsl
jb
scas
or
and
lret
mov
inc
call
inc
inc
sbb
push
mov
pusha
loop
pop
mov
jno
andb
cmp
lret
ret
mov
and
jb
pushf
sbb
popa
lea
pop
repnz
mov
fsts
bound
or
fmul
add
pop
lahf
pop
mov
lcall
jmp
add
pop
cli
pop
aas
inc
cld
arpl
ds
aas
or
or
or
or
gs
jmp
fidivl
jo
cmp
mov
pushf
push
adc
lcall
jne
in
jg
fdivl
mov
loopne
jp
xchg
xchg
jne
imul
push
mov
ss
dec
mov
hlt
jl
sub
aam
out
pop
push
notl
sub
or
fmulp
adc
arpl
mov
cmp
cmpsl
insl
and
les
fs
cmc
sarl
idivb
lcall
aas
pop
enter
pop
add
jg
fbstp
out
faddl
cmc
adcb
fcomps
push
outsb
inc
mov
xlat
mov
jg
xchg
test
jnp
inc
imul
push
cmp
xchg
mov
test
xchg
mov
inc
loopne
sbb
and
sahf
std
mov
cld
popf
test
loopne
push
xor
hlt
rclb
test
stos
push
mov
movb
in
clc
jp
loope
iret
sub
out
arpl
add
cmpsb
into
mov
rcr
and
push
xor
fmuls
imulb
aaa
daa
negl
add
mov
cmp
mov
inc
cmp
lea
aas
test
inc
nop
pop
sti
negl
mov
mov
lods
mov
sbb
lret
rclb
jle
rorl
xor
sub
lods
daa
add
xchg
stc
adc
outsl
cmpsb
bound
add
jle
aas
imul
insb
mov
lock
lock
mov
or
sbb
dec
jmp
mov
lret
adc
push
test
mov
xor
orb
mov
jge
cmpsb
imul
data16
lret
inc
hlt
xchg
test
add
mov
push
fsubrs
cwtl
test
ret
add
stc
push
call
push
stc
fildll
dec
ljmp
xor
mov
pop
push
pop
loop
imul
rclb
adc
add
mov
push
sub
push
gs
popf
inc
cmp
xchg
stos
sbb
int3
insl
mov
jecxz
xchg
shl
jg
xor
aad
movsb
jmp
jp
xchg
iret
push
std
push
clc
inc
or
lret
bound
xchg
cmpsb
push
inc
jecxz
sbb
lahf
lods
sbb
inc
insb
adcb
cld
je
addl
stos
mov
xlat
js
add
stos
pop
xchg
loope
js
out
mov
sub
inc
cld
add
xchg
lret
adc
hlt
sub
sbb
xchg
jg
lcall
mov
shl
loope
ret
enter
adc
loopne
in
lods
mov
out
mov
xchg
dec
xchg
pop
mov
or
adc
cmp
gs
adc
xchg
cld
orl
mov
cmp
dec
frstor
scas
arpl
addr16
dec
push
fimuls
xor
cmp
cmpsb
loopne
addl
xor
andl
insl
in
jbe
mov
aad
push
mov
fwait
test
sarl
lret
repnz
mov
scas
out
repnz
pop
or
sub
mov
push
mov
jle
xchg
pop
xor
pop
lds
sub
addl
lret
adc
leave
and
ret
fmulp
pop
adc
out
jne
push
ud1
mov
jb
mov
inc
mov
jge
mov
adc
ljmp
mull
dec
mov
aam
xor
push
push
inc
ss
pop
add
in
filds
jo
ror
aam
mov
aad
insl
push
hlt
mov
scas
sbb
lret
insl
or
mov
jno
pop
enter
mov
cmc
test
hlt
dec
insl
dec
sub
push
sbb
cmpsl
int3
cmpsb
ja
cmp
subb
push
lods
aad
pop
pop
jmp
imul
int
jbe
xor
ficomps
into
mov
lock
cmp
mov
lret
cmp
dec
add
inc
dec
flds
dec
add
lea
add
lea
test
imul
dec
adc
cmp
mov
leave
pop
or
xchg
mov
sub
mov
xchg
loopne
or
negl
cmp
popl
mov
lret
sahf
mov
dec
adc
fldcw
lret
or
lahf
and
sbb
das
cmp
dec
mov
pop
bound
movsb
add
sub
pushf
jns
addr16
ljmp
jl
push
outsl
push
stos
cs
pop
mov
pop
mov
ficoms
adc
fsts
add
pop
jb
pop
xchg
out
lea
in
add
jbe
scas
int
ljmp
add
xchg
enter
lret
leave
pop
lods
jne
popf
gs
xchg
pop
scas
insl
addr16
sub
mov
push
sub
pop
push
gs
aad
jae
lds
std
push
push
cld
xorl
addr16
popf
dec
dec
push
fdiv
repnz
cmp
pop
stc
push
jecxz
insb
shll
pop
nop
jmp
ret
mov
testl
lods
ret
or
je
push
jmp
sbb
sarl
and
ficompl
int3
shlb
jl
outsb
insb
dec
pop
mov
fisttps
outsb
mov
push
or
cmp
adc
pop
add
out
sahf
jecxz
out
mov
add
xlat
pop
popa
test
gs
mov
jnp
imul
xlat
mov
addl
xchg
xor
adc
adc
das
mov
jge
xchg
pop
jmp
pop
jbe
fldl
out
scas
imulb
push
hlt
or
and
lea
ret
mov
and
or
dec
das
push
std
ljmp
test
popa
jae
jmp
call
cwtl
push
into
out
leave
pop
cmpsb
lret
adc
inc
call
jg
mov
int3
pop
xor
repnz
jle
and
pop
inc
push
mov
ljmp
mov
sub
mov
adc
inc
std
cwtl
scas
xor
push
adc
and
aas
aad
fsts
jge
sbb
dec
mov
add
add
test
ljmp
cmp
cmpsl
repnz
jae
aam
stos
call
adc
int3
sub
ds
jbe
dec
jecxz
pop
xor
dec
or
xor
arpl
cwtl
xor
adc
pop
pop
pop
cmpsl
jmp
xchg
in
pop
xor
jne
lods
pop
cmpsb
fxch
add
mov
xlat
bswap
jae
sub
movsl
sbb
ret
call
push
fidivrs
mov
push
mov
in
cs
sbb
push
mov
xchg
lock
push
sbb
cmp
shrb
loope
mov
call
xor
pop
pop
fcmovnbe
and
pop
lock
push
mov
decl
mov
add
xor
push
cmpsl
test
sbb
add
repnz
lock
jne
jns
cmpsl
jge
and
and
movsl
push
sub
mov
fcoms
movl
cs
inc
ret
stos
dec
xor
mov
jle
cli
pop
pop
ss
push
dec
test
and
int3
in
cmpsb
xchg
movsb
lods
sub
or
adc
inc
insb
fimull
pushl
sub
xorb
js
add
lds
rcl
pop
cmpb
cmp
mov
loope
mov
xchg
ds
pop
jmp
rorl
add
adc
int3
jae
push
xor
int3
jbe
inc
adc
mov
pop
das
jmp
mov
scas
out
add
fistl
xchg
popa
rorb
push
inc
mov
inc
pusha
call
roll
ret
pop
ss
dec
mov
aam
jg
out
sub
fs
mov
out
sti
xor
mov
add
mov
jl
add
fldt
mov
add
add
and
loope
adc
mov
inc
int
mov
jp
cltd
push
cmp
lock
pop
frstor
adc
cli
mov
push
in
ficoml
sub
mov
cs
into
and
pushf
jmp
sbbb
adc
imul
ja
leave
divl
movsl
cmp
mov
mov
inc
push
fcmovnb
cmpsb
mov
push
mov
add
pop
in
stos
sti
mov
lret
adcl
or
xchg
dec
jg
push
je
popf
sbb
add
mov
test
push
xlat
enter
xorb
addr16
cwtl
mov
and
cmp
shll
sub
mov
mov
lret
jle
pop
dec
jge
and
adc
pop
outsl
pushf
or
setge
xor
in
sub
fidivrl
mov
inc
hlt
frstor
lret
movsb
lds
test
int
imul
add
mov
push
pop
fwait
mov
jg
repnz
sbb
lea
and
ds
call
mov
sub
mov
pop
notb
into
sbb
mov
aam
mov
jae
cmp
dec
adc
lds
je
andl
scas
mov
ret
add
xchg
cmp
mov
gs
inc
fisubs
data16
lcall
call
dec
mov
jnp
inc
nop
add
mov
dec
cmpsl
fcmovnbe
adc
inc
xchg
js
scas
stc
test
ljmp
push
std
fadd
mov
dec
xor
out
add
add
adcb
mov
or
clc
dec
xor
int
xchg
cltd
movaps
jg
mov
sub
add
jns
rol
and
xchg
in
push
and
aas
jnp
movsl
sbb
lea
or
mov
add
insb
loopne
adc
inc
out
cmp
nop
jle
cmp
pop
mov
sub
std
test
repnz
lock
mov
and
or
pop
popa
add
mov
pop
lahf
out
xchg
lods
xor
nop
fstpl
xor
dec
push
lock
in
popf
mov
inc
adc
call
mov
mov
ret
push
out
shlb
dec
and
and
mov
loop
es
lds
xchg
psubq
enter
pop
int3
and
pop
neg
inc
lods
decb
sbb
leave
jb
ret
push
mov
lock
mov
dec
je
mov
sbb
inc
push
in
daa
icebp
jo
dec
cmp
ret
fldenv
testb
pop
stos
dec
mov
shlb
xor
mov
test
or
xor
dec
pop
cmp
mov
in
mov
jbe
inc
test
clc
push
cmpsl
pop
cmp
xchg
fwait
xor
mov
pop
gs
jmp
fs
lea
stc
lods
rorl
jbe
dec
loopne
pushf
xor
insb
ret
push
pop
frstor
rclb
shrb
mov
add
cld
lods
mov
jb
xchg
xor
push
pop
ret
lcall
nop
xchg
ds
pop
adc
mov
cmp
div
loop
stc
xchg
pop
data16
enter
out
icebp
scas
pop
or
pop
ss
fdivl
clc
testb
in
pushf
nop
mov
xlat
mov
pop
cs
in
popf
fdivs
jg
mov
cli
inc
dec
imul
dec
jbe
stos
scas
cld
stos
xchg
lret
and
mov
add
test
mov
push
xor
jne
jb
push
daa
ja
movb
stos
or
outsb
jne
xchg
lods
cld
out
flds
repnz
sub
add
mov
pop
loopne
mov
aam
sub
ljmp
test
sti
cld
fsts
mov
or
xor
jb
je
cld
shl
lods
cld
jno
jns
push
xchg
imul
jge
and
and
push
repnz
add
adc
out
into
hlt
push
subb
cmc
mov
dec
inc
xchg
mov
lock
xor
mov
loopne
push
mov
ja
xor
mov
pop
mov
xor
lret
jmp
sbb
push
sbb
std
clc
scas
lock
es
mov
push
jns
movsl
cmp
cmp
shrb
ret
mov
mov
xchg
mov
cmpsb
or
repz
dec
lods
xchg
js
xor
and
hlt
inc
out
inc
lret
sbb
aaa
push
xlat
xorb
or
into
jg
das
xchg
adc
cmp
jae
scas
fistpll
or
lods
mov
fsub
fsubr
nop
push
stos
addb
cmp
pop
inc
cltd
shrl
ret
or
ffree
mov
fadd
and
rclb
cli
loopne
inc
pop
mov
xor
push
xor
insb
mov
push
add
cmp
push
sbb
aas
shlb
les
movsb
mov
xor
push
pop
aas
jae
sub
fistps
dec
stos
dec
andl
add
mov
adc
aas
inc
imul
es
popf
fstpl
gs
imul
fdivr
lret
mov
push
mov
adc
xchg
ret
mov
aam
lcall
pop
or
push
push
shl
mov
adc
pop
fmull
pop
jb
neg
lds
lcall
sarb
mov
or
movsl
xchg
fmull
mov
push
push
mov
jle
movsl
sbb
mov
sbb
pusha
call
xlat
jmp
icebp
sub
xor
sbb
dec
xor
sarl
xchg
mov
cmp
pusha
jne
pop
ljmp
std
fstps
jge
push
or
adc
mov
pushf
negb
cmp
fsubp
fmulp
fcomps
inc
cwtl
mov
or
aaa
out
icebp
js
sti
int
ss
add
or
lds
das
mov
xchg
stos
inc
push
nop
clc
add
push
xchg
adc
and
iret
je
rcrb
mov
jmp
push
or
mov
movsb
stos
movsb
xchg
test
xor
push
popf
test
out
fnstcw
mov
js
or
adc
sbb
out
dec
out
out
inc
cmp
lret
and
inc
rcrl
xchg
inc
pop
insb
adc
aam
dec
sbb
jmp
dec
xor
sbb
call
icebp
adc
mov
pop
mov
jns
lds
cmp
or
in
jns
dec
in
push
pop
or
adcl
push
sub
inc
pop
int3
sti
popa
daa
out
pop
xchg
sub
jecxz
and
inc
jo
dec
call
lea
sahf
mov
jb
sub
sub
push
ja
xor
xchg
sti
mov
dec
icebp
test
pop
adc
sbb
addr16
pop
loop
push
in
testb
push
addb
push
bndldx
mov
in
xchg
in
js
in
pop
dec
mov
sbb
pop
jnp
imul
imul
rcl
sub
mov
push
mov
sub
xchg
add
dec
jmp
mov
adc
pushf
fidivrs
in
dec
sub
xor
lret
sbb
add
cmp
sub
out
mov
aaa
xorb
inc
leave
out
jae
int3
jmp
pop
add
int3
aad
cmpsb
rorb
push
push
jmp
out
jl
pop
xor
sub
ljmp
nop
test
mov
inc
inc
mov
jns
and
mov
mov
mov
sbb
cmp
xor
es
lret
out
clc
mov
inc
inc
sub
cmp
sti
adc
outsl
sbb
imulb
mov
mov
jo
flds
dec
mov
bnd
fucom
xchg
xorl
xchg
add
cmpsl
sub
fnsave
sub
loope
dec
movsl
jae
pop
xor
fiadds
enter
ja
mov
std
fs
adc
outsb
jmp
xor
je
dec
jo
dec
test
je
cwtl
jae
mov
aaa
scas
inc
imul
and
jmp
jl
adc
jg
sbb
pop
hlt
inc
push
daa
dec
inc
mov
mov
mov
int
cmpb
push
movd
jne
or
and
lods
mov
outsb
call
dec
cmp
cltd
mov
mov
rorb
fisubrs
xlat
sahf
sarl
gs
dec
cwtl
adc
ret
ret
mov
xchg
aad
xor
cwtl
sub
xchg
mov
xchg
push
setp
adc
aad
addr16
bound
mov
das
stos
dec
fistpl
mov
faddl
mov
jne
inc
jl
cli
or
int
repz
jmp
xlat
jg
mov
sbb
loope
push
mov
outsb
mov
inc
xchg
sahf
outsl
fisubrl
fistl
cmc
or
xchg
cmp
pusha
add
imul
mov
pop
mov
add
add
mov
or
pop
lods
mov
mov
mov
adc
pop
dec
xchg
fcompl
adc
jae
push
jge
lds
aam
stos
rclb
and
scas
iret
pop
mov
ja
out
mov
jns
dec
ss
mov
cli
and
aaa
repnz
jno
mov
dec
jl
or
and
and
repz
jae
sub
pop
andl
dec
mov
arpl
pop
push
jle
and
into
fucomip
jl
sbb
push
scas
pop
mov
inc
xlat
fcmovu
mov
orb
jnp
into
add
pop
sbb
pop
sbb
pop
mov
pop
scas
ret
cltd
mov
mov
out
xchg
xor
arpl
mov
pop
testb
and
dec
add
adc
sub
jp
test
lods
in
out
xchg
out
or
pop
aad
jp
insl
sbb
arpl
sbb
aam
cmp
out
rorb
insb
add
outsb
mov
cmp
and
out
mov
and
fsubs
imul
mov
mov
sbb
movsb
cwtl
fldt
jo
adc
fstps
int3
sbbl
push
mov
movsl
subb
mov
sbb
sub
push
adc
jle
cld
subl
popf
aad
dec
lret
rcrb
sbbl
cmp
xor
orl
push
iret
lea
inc
rclb
mov
add
cmp
adc
inc
inc
inc
sub
cmp
sti
imul
pushf
inc
les
sbb
push
in
arpl
mov
and
stos
arpl
dec
push
or
pop
sti
dec
add
cli
cmp
xchg
cwtl
sarb
xchg
addr16
mov
xchg
cmpsl
addb
loopne
out
repnz
fsubrl
imul
ret
push
in
mov
and
into
imul
pop
lcall
scas
xchg
not
mov
insb
int3
xor
movsb
scas
rorl
int
jg
xor
fldcw
aam
pop
sbb
stos
pop
stos
aad
in
loope
xor
cmp
repz
cmpsl
aaa
add
popa
out
push
in
out
stc
insb
ljmp
in
add
pop
push
bound
mov
mov
lods
dec
add
es
jp
adc
push
and
and
xor
or
xchg
sub
dec
ret
mov
ret
xchg
inc
pop
mov
jle
aam
sbb
jge
stos
mov
test
lock
scas
insl
inc
xchg
movsl
sbb
out
test
jecxz
ljmp
lods
sbb
adc
loope
andl
mov
gs
fcomp
and
subl
and
mov
xchg
cli
jne
add
out
dec
sub
mul
pop
sbb
inc
fldenv
push
add
and
xlat
pop
cld
push
mov
out
jg
lea
cmp
aam
ss
out
mov
jle
push
and
mov
fisubl
adc
or
add
jecxz
adc
mov
jno
sbb
adc
lcall
adc
jmp
add
fistps
inc
out
or
pusha
in
fs
outsl
imul
push
dec
pop
pop
subl
jl
repz
pop
call
pop
es
stos
jns
mov
inc
sbb
ja
push
outsl
jl
call
hlt
pop
repnz
and
pop
lock
ja
out
cld
adc
or
add
ret
pusha
mov
sbb
push
stos
ljmp
imul
cltd
push
gs
jo
mov
lret
pop
dec
mov
xor
jge
aad
movsb
arpl
decl
aam
enter
xor
add
pop
notb
shrl
and
enter
leave
xor
shl
sti
xor
cwtl
in
pop
lock
xor
mov
or
out
pushf
dec
jae
jmp
fisubrs
push
jle
pop
cmc
xor
mov
mov
lods
cltd
repnz
mov
xor
aaa
pop
or
jg
mov
jnp
mov
xchg
pushf
inc
push
jl
out
sbb
repnz
loopne
mov
xchg
or
jecxz
and
xchg
movsl
jae
mov
test
add
jl
mov
sub
mov
jb
test
shl
xchg
lds
adc
lods
adc
mov
jle
js
xchg
sub
pop
sbb
jmp
push
or
rorb
cltd
call
pusha
outsl
das
ljmp
pop
test
mov
mov
subl
push
mov
scas
push
paddsb
int3
leave
push
sbb
add
stos
sbb
pop
cmc
and
or
iret
test
mov
and
faddl
or
cmp
cmpsb
inc
test
in
decl
pop
int
popa
add
add
fisubl
inc
jle
cmp
cmp
or
cmp
out
ret
xchg
aas
mov
mov
sub
mov
inc
jg
test
mov
xor
int3
dec
jo
movsl
xchg
adcb
mov
sub
sahf
mov
fisubrl
add
dec
mov
xor
inc
push
pusha
pop
adc
xor
push
rcrb
repnz
rcl
adc
arpl
mov
call
inc
dec
popl
dec
loopne
mov
fbld
push
jns
and
sbb
addl
mov
mov
dec
in
int
in
aam
movsb
and
inc
leave
in
sub
lods
cmp
mov
fsubrl
push
mov
push
imul
in
jae
xor
xor
pop
repz
addr16
and
mov
shl
into
les
mov
sbb
inc
stc
cli
into
les
cmp
inc
in
mov
pop
repnz
and
ljmp
sub
je
xor
pusha
out
adc
fildll
and
inc
jg
pushaw
fisttpll
sbbl
pmuludq
fstps
cmp
lock
ss
mov
push
mov
mov
fnstenv
inc
test
xchg
bnd
nop
stc
jg
or
cwtl
int
das
lods
addr16
in
sti
and
inc
mov
cmpb
xchg
push
mov
bound
movsb
les
cmp
pop
jmp
cmp
dec
and
inc
lahf
adc
fcompl
shl
aam
scas
push
or
and
ja
lcall
jmp
pop
addb
mov
test
daa
scas
lea
dec
jns
sub
cli
sbb
andb
negb
pop
or
je
pop
mov
roll
push
pop
add
jno
cmc
push
jnp
pop
sub
fbstp
nop
cld
loope
imul
mov
cmp
inc
or
xchg
ret
inc
out
push
pop
sub
mov
and
sub
addl
andb
sti
out
dec
mov
jp
mov
xchg
push
ja
xor
aaa
mov
ljmp
or
test
mov
sub
xor
sbb
mov
push
mov
and
mov
sbb
push
xor
cmp
pushf
stos
and
dec
in
jns
push
aad
pusha
cwtl
push
cmp
jne
out
push
or
fcoml
lret
sahf
mov
mov
movsb
mov
pop
xchg
push
ret
inc
inc
xorb
mov
ja
dec
or
pop
mov
cltd
movsl
stos
xor
out
shlb
in
add
sbb
movsl
fisttps
inc
pushf
push
nop
clc
push
xchg
push
repz
push
sbb
push
insl
adc
scas
cmp
mov
adc
cli
mov
rcrb
dec
xor
arpl
add
imul
mov
mov
xorb
filds
sti
and
inc
dec
sub
mov
jno
dec
pop
add
or
dec
test
dec
cmp
pop
mov
fimull
test
movsb
dec
cmp
pushf
pop
xor
cmp
inc
aaa
in
rorb
rcll
fsubrl
and
in
dec
adc
jl
inc
lahf
xchg
xor
data16
xor
pusha
dec
sub
and
lahf
sahf
inc
sub
push
jp
lea
cmp
jg
sub
xor
popf
push
cltd
fadd
mov
mov
nop
les
sbb
push
cmp
call
loop
xchg
roll
xchg
xchg
icebp
lods
xlat
cmp
dec
ret
js
adc
sti
nop
pop
add
add
leave
cmc
cmc
out
stc
sub
cs
fs
in
sub
add
sbb
ficomps
or
mov
ret
push
jae
dec
mov
add
dec
stc
add
adc
cmp
cmp
fwait
clc
loope
data16
adc
inc
mov
fbld
adc
push
cmpl
cmp
notb
cmpsb
xchg
in
mov
andb
mov
shr
out
sub
mov
int3
cltd
movsb
insb
mov
sub
sbb
test
mov
jno
data16
cmp
fistps
add
pop
sbb
lock
jecxz
lahf
loopew
je
insl
push
das
jb
movsl
stos
xor
xchg
loope
xchg
scas
push
stos
lret
sbb
pop
cmp
ret
push
mov
jb
inc
call
jno
cltd
insb
lea
shrb
loop
mov
fimuls
mov
cmp
fidivrl
icebp
jmp
testl
leave
imul
push
loop
out
mov
scas
add
shl
push
jg
xchg
xor
test
mov
sbb
mov
jge
and
and
rorl
insl
jne
dec
sbb
mov
cmpsb
aaa
bound
sarl
insb
add
push
mov
xchg
pop
jae
aad
repnz
xlat
xor
dec
mov
nop
push
cmpsl
into
test
gs
inc
popf
ja
mov
jne
movsb
lock
stos
adc
push
mov
ss
jne
mov
mov
xor
or
ret
ficomps
pop
mov
push
or
rcll
cmp
sub
in
pop
push
xor
dec
repnz
ljmp
mov
jae
arpl
mov
jb
or
mov
pop
and
xchg
incb
and
push
inc
ficomps
and
add
pop
dec
daa
fcoms
xor
test
sbb
jae
dec
mov
cmpsb
dec
and
imul
jmp
sub
inc
pop
imul
insl
daa
pop
sub
jecxz
inc
xlat
pusha
sahf
fisubrl
jp
push
in
mov
mov
mov
xor
jmp
adc
roll
loopne
mov
into
adc
jno
out
cmp
xor
call
icebp
imul
inc
shrl
sahf
scas
insl
cmpl
scas
dec
add
das
adc
jl
outsl
xor
and
fidivs
mov
mov
stos
dec
lea
iret
subb
dec
mov
call
mov
xor
addr16
lock
jle
sub
or
sub
ja
fdivs
test
jmp
xlat
jno
loopnew
sbb
xchg
adc
ret
jp
test
cltd
add
xlat
or
idivl
jg
add
jno
xor
stos
adc
pop
inc
adc
and
ss
mov
add
adc
xor
cmp
jnp
in
int3
adc
sbb
cld
xchg
inc
popa
mov
mov
pop
outsb
fsts
lods
shrb
sbb
push
xor
rcl
iret
mov
out
sbb
std
and
sti
mov
data16
mov
arpl
pushf
imul
and
inc
ja
push
movsl
aad
inc
nop
adc
adc
dec
mov
std
dec
mov
hlt
faddl
mov
fiadds
inc
xor
insb
sti
out
mov
jnp
pop
cmpsb
sbb
push
xlat
outsl
sub
out
mov
fnstcw
cmc
aam
or
std
dec
lea
push
mov
jp
jle
adc
aad
nop
sub
insb
mov
pop
ja
int
push
pop
icebp
lock
add
pop
cmp
ret
push
mov
ljmp
test
jle
and
xchg
popa
push
lcall
dec
sbb
in
xor
add
stos
in
xor
jb
xor
loop
stc
ret
ret
or
pop
inc
cmp
jbe
xchg
lahf
dec
xchg
xchg
cwtl
cmc
mov
stc
sbb
addr16
xchg
cli
lahf
rorb
int
mov
jg
mov
int
mov
daa
leave
test
popf
xchg
arpl
rolb
xor
gs
and
jecxz
pop
and
adc
jbe
cmp
adc
sbb
add
js
xor
jl
pop
sti
test
sub
divb
mov
or
xor
cld
mov
sti
xor
sub
out
clc
dec
or
loop
lds
addb
jg
out
mov
xor
xchg
loop
push
pop
test
das
jne
dec
stos
mov
cmp
movsl
clc
mov
push
ljmp
push
push
add
mov
in
mov
lods
jecxz
add
idivb
or
pop
add
mov
pop
sbb
ret
adc
mov
mov
jecxz
popa
mull
mov
lock
sub
loope
mov
mov
aaa
pop
xchg
push
fldenv
stos
es
js
popa
cmpsl
andl
mov
addl
test
add
loope
xchg
ficomps
mov
and
mov
xor
push
mov
mov
xor
jae
mov
jo
mov
adc
adc
pop
test
call
add
dec
iret
sbb
dec
sub
fistpl
pop
aas
or
mov
mov
and
cld
aad
cltd
call
dec
push
mov
roll
sub
clc
sahf
cmpsl
fistpll
lea
addr16
fmuls
mov
loope
das
cwtl
jnp
out
call
jnp
lret
xor
pop
mov
mov
cld
xchg
xchg
ds
loopne
add
outsl
inc
stos
xor
and
in
push
xor
mov
mov
cwtl
adc
mov
subl
stos
add
mov
hlt
push
popa
mov
dec
cwtl
inc
repnz
jmp
mov
lret
movsb
call
inc
pop
je
rcr
sar
xor
or
imul
pop
call
jp
sub
mov
cs
lret
push
pop
push
dec
dec
jo
xchg
pop
mov
dec
lahf
inc
jnp
in
movsb
pusha
clc
mov
xchg
aad
pusha
adc
or
sub
xchg
aad
adc
mov
fnsave
mov
ret
jne
jo
enter
sbb
jno
insl
movsl
into
mov
and
aaa
lock
scas
jl
dec
dec
in
mov
xchg
rorb
xchg
cmp
popa
aad
xchg
loope
xchg
or
adc
dec
sbb
mov
inc
jmp
ret
sub
ret
mov
loopne
adc
xchg
loop
and
rorl
bound
and
pop
cmpsb
movsb
push
cmp
lea
jle
mov
mov
lock
sbb
in
shll
jns
lret
dec
fstpt
sbb
stc
xchg
or
push
testl
cmp
leave
lcall
xchg
push
xor
pop
test
data16
pavgb
mov
inc
sub
jecxz
mov
xor
in
mov
inc
std
fadd
out
mov
lret
icebp
loope
pop
push
push
lock
or
mov
dec
rorl
cmpl
mov
test
stc
stc
mov
cltd
and
lret
cli
mov
enter
jb
pop
dec
loop
add
and
hlt
cmp
mov
in
fnstenv
cmpb
ljmp
fisubl
mov
pop
jecxz
xchg
int
je
sahf
pop
or
sbb
add
cmp
popf
inc
xchg
divl
inc
test
call
mov
lahf
push
inc
dec
and
mov
int
ret
gs
sub
repnz
sbb
clc
cmp
xor
dec
sbb
jecxz
mov
lods
mov
lea
xor
cli
ret
scas
dec
ret
arpl
mov
pop
movl
mov
cmp
adc
out
jmp
pop
stc
inc
cld
inc
jge
jno
je
adc
pop
cmp
call
iret
loop
push
loopne
imul
shlb
adc
test
out
js
sbb
stos
jmp
popa
xlat
iret
cld
mov
and
gs
pop
pop
bound
ret
inc
pusha
push
inc
jmp
pop
and
sbb
push
and
ljmp
pop
leave
add
xchg
insl
bound
mov
and
repnz
test
pop
or
lret
test
inc
adc
aas
ds
jnp
xchg
jo
mov
push
fmul
pop
movsl
mov
testl
decl
adc
pusha
inc
data16
jg
mov
xorl
push
xchg
push
pop
xchg
fucomp
aaa
pop
lea
imul
fisttpll
push
cs
pusha
add
or
inc
jg
cmovl
adc
mov
mov
adc
fwait
mov
subb
mov
shll
xchg
test
into
jbe
sub
out
inc
orb
cmc
mov
xor
and
iret
out
fdivp
sub
movsb
mov
jp
vrsqrtss
dec
mov
icebp
xor
push
and
jb
dec
call
xor
enter
pop
incb
divl
leave
sbb
inc
push
out
mov
imul
push
xchg
or
inc
or
out
insb
add
dec
dec
adcl
int3
leave
call
idivb
int3
adc
js
jp
fwait
stos
mov
outsb
cli
inc
mov
mov
push
loopne
push
xchg
push
xchg
fistps
inc
repz
ds
in
sub
fadds
add
push
ss
hlt
arpl
jecxz
dec
sbb
and
sbb
add
pop
push
rcl
imul
pop
sbb
bound
mov
out
sub
mov
dec
lcall
sub
ret
lea
jmp
aaa
mov
clc
pop
adc
lds
push
inc
fwait
dec
fistpl
xchg
jne
call
cmp
mov
mov
dec
jge
stos
pop
das
int3
aam
xor
jge
subb
imul
sub
ljmp
and
test
sbb
mov
sbb
outsl
aaa
mov
mov
dec
lock
leave
call
or
jle
adc
cmp
popf
int3
sbb
cmp
cmp
and
dec
jle
fistpl
xchg
idivl
mov
xchg
fnstenv
mov
cmpsb
push
insl
fldenv
aas
cmpsb
xchg
pop
out
rep
add
add
std
adc
push
lods
popf
cmp
xor
adc
int3
pop
jg
jnp
pusha
test
mov
movsb
mov
imul
mov
cltd
loopne
sbb
insb
xlat
jns
cmc
or
ss
lea
clc
cltd
push
sbb
stos
inc
dec
xlat
lock
jb
push
rcrb
or
sub
sub
lods
negl
sbb
sbb
fmul
loopne
cmp
mov
push
sub
and
push
test
sub
lret
outsb
cltd
xor
lods
sbbb
pop
fisubs
jmp
jae
sar
mov
lahf
popa
ljmp
or
movsb
fbld
icebp
cli
out
lahf
jp
ds
popf
repnz
jae
xchg
mov
cmc
or
mov
xchg
testl
orl
lret
data16
adc
test
sbb
xchg
insl
mov
decb
sgdtl
in
push
push
test
add
hlt
aad
out
fwait
push
in
mov
bndldx
pushf
xor
mov
sub
notb
adc
push
or
loope
sub
cli
lret
test
and
lahf
sbb
pop
lcall
xchg
mov
dec
call
mov
fidivl
pop
or
jge
xlat
dec
jl
sarb
aam
loop
loopne
shll
adc
ds
cltd
xchg
inc
push
sbb
xchg
loop
int
lods
popf
mov
and
xchg
scas
loopne
jl
pop
xchg
sub
jle
leave
imul
addb
shlb
mov
aas
pop
imul
or
call
imul
out
cwtl
std
ss
pop
jge
or
fstpt
pop
pop
mov
loope
ja
out
push
and
mov
iret
fwait
or
inc
sbb
inc
ret
idiv
mov
mov
mov
pop
out
lahf
sub
sahf
gs
outsb
adc
inc
fcmovbe
jo
movsl
js
ja
imul
mov
in
mov
cmp
ret
lret
fwait
xor
sbb
das
push
inc
cmp
adcb
adc
arpl
mov
sub
add
jecxz
cmp
cwtl
mov
aad
adc
sbb
mov
xor
sub
sbb
scas
daa
in
mov
js,pn
mov
xor
repz
stos
jle
xor
or
addr16
les
fistl
lods
subl
adcb
int3
ret
test
cmp
ret
adc
inc
std
push
push
data16
xlat
mov
fiadds
push
lock
sar
inc
out
jp
and
add
mov
iret
sub
leave
ja
dec
insl
jg
add
xchg
test
ficoms
adc
insl
test
pop
dec
jno
aad
sub
dec
sahf
leave
inc
bound
xchg
test
daa
pusha
mov
push
mov
push
shrb
or
mov
gs
mov
jp
push
push
iret
int3
into
pop
enter
jae
hlt
sbb
jl
daa
imul
cmp
xchg
fs
sti
pop
aas
push
stc
sbb
sub
adc
mov
push
push
fildl
push
jbe
sarl
test
cli
sbb
mov
cmp
in
jg
scas
loope
movsb
push
or
loopne
aam
mov
mov
imul
xor
push
adc
xlat
js
cld
js
and
sub
xchg
sbb
mov
xchg
sbb
and
call
mov
jmp
inc
xchg
pop
add
pushf
lock
mov
and
dec
push
xor
popf
sub
xchg
hlt
call
sbb
cmpl
cmp
pop
leave
iret
add
fs
add
push
in
aas
or
or
std
jae
mov
je
or
rorb
lahf
dec
repz
movsl
daa
cmpl
scas
lret
scas
ljmp
jecxz
inc
hlt
or
push
imull
in
lods
adc
push
mov
dec
push
sbb
mov
and
stos
lods
push
ljmp
xchg
push
fidivl
fcmovnu
js
xchg
jmp
int3
jo
pop
cmp
dec
loopne
fisubrs
pop
jno
jmp
loope
mov
jb,pt
fnop
or
fs
dec
dec
int3
push
xchg
ljmp
push
sub
add
int
xor
dec
stos
xchg
jge
cmp
scas
pushf
jno
mov
cwtl
push
repnz
cltd
mov
ret
dec
mov
call
gs
mov
lret
jae
pop
mov
cmpb
lcall
lods
jno
adc
xchg
mov
xor
ret
fadds
outsl
fnsave
clc
add
shrl
and
add
lcall
je
enter
mov
push
in
addr16
jnp
or
pop
into
adc
sbb
ds
push
out
ret
in
xchg
inc
shlb
cmpsb
mov
or
subl
sahf
dec
pop
pop
push
adc
add
push
cli
clc
jmp
notb
adc
jno
fidivl
movsb
addl
jge
xchg
in
xchg
lods
out
popf
dec
mov
cmpsb
lods
xchg
xchg
mov
adc
ds
scas
inc
insl
pmulhw
or
add
push
sub
scas
stos
sub
sbb
out
mov
push
insl
fmuls
ds
dec
stos
adc
mull
out
fnstcw
data16
xchg
nop
arpl
cld
into
fnsetpm(287
rclb
movsb
sub
testl
mov
fs
mov
mov
mov
repnz
jg
xor
repnz
xchg
in
das
sbb
jo
xchg
inc
lds
cwtl
pop
and
scas
fwait
movsb
stos
nop
fcomip
sub
lcall
push
pop
std
inc
adc
pop
out
mov
jo
jle
push
popf
lods
push
push
inc
mov
fnstcw
cmp
add
adc
ds
fnstsw
je
pop
xchg
pop
add
arpl
cwtl
dec
sti
xchg
pop
jg
cmpsb
xlat
fsub
pop
jle
xorl
jno
jbe
jecxz
leave
jmp
aaa
out
je
xor
pop
ret
dec
cltd
xchg
loop
gs
aaa
pop
movsl
cmc
or
xchg
jno
leave
xor
cmpsb
sbb
out
lods
push
jo
mov
movsb
adc
jge
mov
leave
stos
mov
sub
cmp
mov
xor
icebp
popf
imul
sub
orb
leave
hlt
insb
jl
addb
aas
jne
and
test
push
fldl
inc
adc
addr16
push
jge
movl
clc
mov
fdivrs
pop
xchg
lret
fsub
and
mov
sub
addr16
test
ja
jle
mov
cmpsb
adc
in
test
ja
xlat
bnd
imul
sbb
movsl
pop
int
hlt
fcoms
xor
inc
int
sub
mov
xor
movsb
cmp
sti
cmp
gs
pop
dec
sbb
adc
repz
sub
out
sahf
mov
les
mov
shll
mov
xorl
xor
add
mov
mov
test
or
repz
nop
ja
lret
dec
dec
ja
divl
and
lahf
fwait
cmc
inc
out
popf
fistps
loope
push
add
stos
mov
dec
jp
dec
jle
es
xorb
inc
sbb
ja
call
jmp
dec
push
mov
xor
test
pop
andb
scas
div
cmp
lods
xor
or
jp
or
fistpll
das
ja
adc
pop
repz
jne
cwtl
sbb
movsl
lods
adc
or
pop
call
adc
ret
ficomps
hlt
xchg
jge
push
xchg
fdiv
add
mov
ror
cltd
push
stos
sub
dec
cltd
aam
imul
add
dec
mov
pop
cs
aad
push
xchg
andl
or
sub
dec
pop
insb
sub
mov
mov
outsl
jge
hlt
jne
xorl
rep
leave
repnz
sbb
pop
outsb
xor
iret
jae
push
dec
mov
push
or
sub
or
pop
dec
pop
pusha
iret
in
les
in
xchg
push
mov
iret
in
test
mov
lds
lret
stos
adc
xchg
dec
add
xchg
cltd
xchg
xor
mov
adc
scas
cmpsl
dec
xlat
add
jmp
cmp
js
inc
test
inc
fnsave
mov
pop
rclb
and
sahf
xor
jns
rep
pop
dec
aaa
mov
stos
test
mov
xchg
or
and
popf
imul
stos
jle
test
insl
mov
mov
xchg
add
fstpt
and
into
or
jmp
add
testl
daa
or
cmp
mov
outsl
mov
mov
jecxz
data16
cmp
jp
je
mov
shlb
out
mov
test
iret
imul
mov
sub
mov
dec
in
das
push
inc
repz
wrmsr
enter
mov
xchg
sub
ds
decl
or
dec
mov
rcrb
mov
ss
jg
sbb
mov
or
sub
repz
dec
ja
mov
jno
sbb
inc
filds
mov
in
fninit
int
push
push
int
adcl
sbb
icebp
mov
mov
sub
push
push
lods
push
xor
call
testb
jg
push
add
mov
add
mov
xchg
subl
test
out
ljmp
add
sbb
shrl
iret
push
enter
jnp
stos
mov
test
imul
bound
out
sbb
scas
dec
jle
jno
push
cld
stos
or
subl
arpl
out
sarl
lret
and
and
cwtl
pop
js
xlat
xlat
leave
inc
rolb
and
popl
sub
cmp
mov
pop
mov
dec
addb
push
inc
adc
inc
xchg
pop
roll
cwtl
js
leave
addr16
mov
das
nop
aam
ja
dec
pop
or
jns
pop
pop
add
pop
outsb
iret
repnz
aas
testl
mov
js
sbb
push
std
xchg
xchg
jmp
mov
cli
mov
xlat
fildl
mov
fidivrs
mov
stc
xchg
mov
dec
cmpsl
aas
jle
cmp
shll
dec
mov
insb
sub
dec
mov
iret
int3
xor
js
jg
out
loopne
rclb
cmp
lret
aas
xor
add
pop
push
repz
sti
gs
inc
push
stc
xor
mov
out
inc
mov
ret
int
or
mov
repz
mov
les
sub
insl
cs
in
div
repnz
shr
push
pop
addl
dec
ljmp
repz
sbb
neg
xor
inc
ljmp
or
hlt
out
push
xchg
arpl
insl
mov
mov
orl
mov
jnp
jle
jge
les
or
test
roll
outsb
out
cmp
sbb
xlat
ss
mov
pop
call
popa
out
test
push
add
ja
pop
xor
sbb
xor
leave
loop
jp
incb
jecxz
gs
enter
sbb
push
xor
fs
out
xchg
outsl
fs
outsb
push
add
sub
or
stos
and
sti
mov
icebp
push
or
sahf
gs
jle
shlb
push
jecxz
and
decl
jg
cmp
inc
mov
jge
pop
outsl
jo
lock
pusha
cmp
test
xor
movsl
pop
cmp
cmp
fimuls
cmp
cltd
gs
int3
xchg
loopne
lcall
cmpsl
or
push
in
sahf
mov
push
mov
mov
mov
shlb
popf
cmp
mov
insb
repz
les
mov
jmp
and
cs
and
adc
inc
push
mov
inc
rcrl
out
mov
pop
push
std
mov
decl
mov
or
mov
jge
or
cmpsl
mov
or
int
push
jl
mov
jp
mov
inc
fdivl
inc
dec
cmp
jp
sbb
jmp
ret
insl
mov
xchg
inc
mov
fisubs
mov
adc
movl
aaa
adc
in
inc
mov
jecxz
jo
add
sbb
jp
rclb
out
lret
mov
pop
mov
hlt
lds
lds
call
ficoml
push
call
int
scas
insb
mov
loope
in
xchg
adcl
push
cld
popa
or
sahf
ds
mov
xor
push
loop
popf
push
mov
test
adc
sbb
icebp
xchg
imul
ja
mov
rcrb
adc
adcl
popa
je
sub
mov
ljmp
push
add
movl
mov
in
subl
jns
mov
adc
or
xor
sub
cmp
aaa
cmp
mov
mov
and
scas
mov
lock
dec
and
int3
arpl
mov
and
dec
jns
xor
xchg
int3
sub
fldl2t
ljmp
setne
stos
inc
pop
mov
ja
xor
dec
cmpl
mov
enter
popa
inc
popf
repnz
mov
sub
push
cmpsb
mov
or
sbb
das
out
push
insl
or
pop
aaa
mov
and
sub
pop
fmull
adc
movsb
enter
mov
push
imul
add
lcall
out
add
pushf
inc
inc
stc
popa
and
dec
sub
or
add
adc
in
xchg
mov
push
xchg
pop
or
mov
or
outsl
xchg
inc
leave
or
mov
sbb
outsb
les
pusha
or
aaa
test
add
pop
loope
test
mov
ds
pusha
push
pop
xor
ficompl
mov
ja
xorb
fidivl
pop
cmc
pop
dec
mov
loope
pushf
fs
add
add
in
icebp
cmpsb
lods
add
jmp
addr16
mov
xor
in
xor
pop
jbe
mov
into
mov
and
mov
adc
jbe
lock
mov
pop
rorb
sahf
repnz
cmpsl
mov
es
fcoml
cmp
lods
mov
es
jmp
pop
aas
and
divl
mov
stos
mov
ja
frstor
xor
icebp
or
lods
enter
aam
mov
push
fwait
xor
into
jecxz
lcall
mov
mov
jge
xchg
fwait
jb
jae
mov
ja
and
gs
movsb
sub
dec
leave
pop
cmpsl
andb
shrb
pop
leave
iret
or
pop
movsl
test
adc
and
nop
insb
sbb
inc
cmp
in
test
mov
pop
sub
ret
push
mov
mov
test
fsts
or
or
xchg
mov
mov
push
jge
pop
into
lods
add
addl
cmp
das
sub
lock
scas
sub
inc
fdivs
cwtl
sbb
push
inc
cmp
popf
sub
stos
std
or
mov
dec
inc
pop
clc
sti
mov
das
iret
xchg
test
in
pusha
lahf
xor
dec
mov
xchg
int3
mov
jnp
int3
mov
fdivrs
xchg
mov
ja
ljmp
orb
in
xor
xlat
adc
jecxz
and
jno
cmpl
fstpl
lds
std
clc
mov
adc
push
pop
scas
inc
jg
gs
xor
xor
pop
lods
adc
xchg
xchg
xor
push
cmpsl
adc
xor
stc
mov
ds
popf
lds
hlt
adc
scas
shll
dec
je
insb
push
aaa
inc
add
imul
sbb
roll
incl
lahf
in
hlt
mov
lock
mov
inc
sbbb
jge
mov
mov
fs
lret
nop
push
icebp
test
jo
in
lods
sbb
jl
test
or
cmp
jmp
test
sub
cmp
pop
dec
enter
repnz
clc
aaa
incl
mov
loopne
cmp
add
jno
shlb
imul
daa
mov
loopne
sub
cmp
cld
pop
imul
mul
add
daa
cmp
out
mov
hlt
das
dec
loope
fs
popf
sub
incl
addr16
adc
sarl
cmpl
das
push
loop
roll
inc
push
jg
stc
lock
rcll
ds
fs
push
xchg
imul
dec
mov
in
out
arpl
in
and
xor
pop
je
cmpsl
and
nop
sahf
int
or
andl
ljmp
mov
cmpsl
aad
iret
popf
jo
cli
and
add
outsb
je
dec
lods
lahf
cmp
adc
xor
inc
fcoms
xchg
ss
rcll
mov
sbb
imul
add
iret
aas
lods
scas
adc
mov
sub
lahf
push
pmaddwd
les
sbb
js
daa
add
cmpsb
sti
jmp
push
inc
divl
pop
xorb
das
push
movsb
mov
jp
mov
xchg
imul
or
cmc
or
test
adc
or
cmp
stos
sbb
mov
in
mov
test
adcl
push
add
adcb
mov
xor
fiadds
push
xor
sub
ds
push
fsubr
aad
out
popf
movsb
imull
pop
mov
arpl
cld
loope
add
aam
cmc
fwait
sub
mov
dec
add
fwait
loope
and
out
repz
ret
lds
imul
movsl
imul
loope
loope
scas
sub
sarb
adc
outsb
lds
push
test
filds
xor
pop
or
lock
flds
stc
sbb
cmp
dec
pinsrw
fmuls
pop
in
cmp
push
xchg
jb
or
fists
pusha
dec
out
loope
sbb
push
cmp
cld
sbbl
cltd
mov
scas
jb
dec
adc
cli
stos
leave
jmp
inc
add
pop
lock
mov
int3
add
js
movsb
mov
stos
addl
ror
cld
mov
in
push
stos
mov
push
inc
fidivrs
shlb
dec
sahf
xchg
imul
ds
adc
add
sub
add
scas
fstps
dec
mov
xor
xchg
xor
aam
jmp
mov
add
in
push
js
mov
adc
mov
lods
outsb
and
test
jne
push
cs
jl
push
push
js
push
notl
nop
popf
outsl
test
pusha
and
cli
mov
pop
inc
aam
push
sub
movsb
icebp
test
fiaddl
ret
push
mov
shrb
jle
test
aaa
jg
ficoms
jg
lock
lea
punpcklwd
std
mov
mov
stc
outsl
cmpsb
scas
inc
push
mov
icebp
xor
into
inc
mov
cmp
ds
adc
sbb
mov
xor
jne
xor
and
rorl
mov
or
rcll
hlt
mov
cmpb
mov
ja
mov
jmp
sub
mov
addr16
dec
inc
or
sbb
cmp
lahf
aam
push
pusha
sbb
mov
mov
sub
pop
call
jl
stc
rclb
dec
es
jno
gs
repz
or
fidivs
jge
pop
sub
xor
add
sub
push
sub
filds
xchg
je
mov
push
jb
gs
push
iret
pusha
push
lret
xrelease
jge
lcall
arpl
sub
testl
mov
pop
and
add
inc
lcall
leave
add
push
sti
testb
adc
cltd
sub
add
mov
outsl
addr16
test
add
movsb
xor
mov
sbb
sbb
push
fstp
pop
lods
dec
xchg
pop
mov
loopne
clc
mov
mov
jb
das
rcrb
ret
lds
test
pop
xchg
push
sbb
push
mov
mov
flds
cmc
bound
lahf
mov
cmp
add
push
mov
bnd
scas
cmp
repz
cmp
add
inc
rorl
pusha
lret
and
loopne
aad
lock
int
test
imul
xchg
mov
jmp
mov
inc
pop
loope
ficomps
fstpl
cmp
sarb
dec
incl
repnz
xchg
in
dec
stc
fld
fs
fs
das
cmp
out
sub
nopl
sub
popf
pop
and
nop
jg
adc
stos
addr16
rolb
jl
push
imul
xor
inc
test
movsb
lahf
fidivl
stos
add
cmp
and
push
addb
and
fsubrs
scas
iret
inc
add
jns
fstp
nop
cwtl
outsb
rcll
jo
jecxz
sarl
push
add
and
pop
xor
scas
push
xor
call
mov
xchg
stc
movsb
mov
mov
jmp
pop
rol
sub
cmpsb
call
dec
mov
jae
test
out
in
push
mov
jmp
mov
cmp
lea
clc
add
xchg
push
cs
iret
inc
xor
loope
pop
lods
lcall
divps
and
xor
lret
dec
mov
push
rcll
aaa
xor
enter
je
js
inc
nop
ss
lret
sub
push
jo
insl
mov
cltd
pop
push
xchg
jb
mov
faddl
les
jns
and
int
nop
mov
test
les
or
ss
out
sti
dec
mov
imul
sbb
popa
shlb
jl
out
xchg
stos
test
xchg
inc
xor
adc
aam
mov
jbe
andb
lret
cmc
push
mov
inc
pop
cmp
add
pushf
repnz
inc
push
ret
std
rcr
stc
jmp
std
mov
jmp
jb
jle
movsb
xlat
xchg
push
xor
and
test
inc
jo
add
lods
inc
stos
ficomps
lods
cmp
in
stos
imul
rcrb
xchg
pop
pusha
push
test
hlt
shl
imul
or
xchg
imul
jne
rcrl
insl
outsb
mov
cmp
lods
repnz
repz
add
aas
daa
aad
or
mov
fdivl
adc
adc
pop
xchg
fsubr
scas
inc
cli
add
or
insb
inc
les
adc
addr16
lds
dec
mov
push
in
bsr
sbb
and
cmpsl
jno
loopne
inc
dec
mov
add
inc
add
push
lahf
in
and
sbb
popa
jmp
cld
fcmovb
test
mov
cld
ret
pusha
lahf
push
lds
or
and
xchg
inc
push
ss
imul
jne
cs
test
mov
sub
jge
rorb
or
inc
jae
and
cmpb
jne
mov
test
dec
adc
inc
pop
fs
and
xchg
jae
or
sbb
push
shrb
xchg
mov
mov
frstor
leave
jle
or
jne
rcll
jns
pop
jmp
mov
mov
push
mov
loope
sub
push
sub
outsb
jg
mov
inc
sti
in
push
jle
jecxz
adc
add
fwait
std
xchg
data16
jb
jmp
test
stos
or
mov
clc
lret
xchg
inc
mov
iret
xchg
jge
sbb
out
jo
adcl
dec
movsl
sub
or
sub
pop
lea
adc
xchg
aas
fcmovnu
pop
mov
lret
sbb
addb
adc
fcoms
dec
fnsave
sub
sub
pop
cs
sub
popf
lret
sbb
xor
jnp
push
lret
cmp
mov
inc
orb
cmp
push
insl
inc
in
pop
sub
repz
into
inc
rcr
cmp
hlt
and
clc
pop
loopne
js
fisttpll
add
rcll
dec
xlat
xchg
and
and
xchg
cwtl
idivb
dec
cmp
pop
xchg
jg
fistps
in
cs
adc
xor
rorl
dec
and
sub
pushf
xchg
insl
notl
sahf
xchg
imul
pop
std
in
add
cmp
rorl
scas
dec
fcmovnb
outsl
sbb
ret
push
mov
fsts
mov
mov
sbb
fsubs
or
cmp
lods
xchg
pop
loop
int
loope
pop
gs
movsb
fucom
xchg
scas
and
dec
pop
sbb
scas
xor
cmp
mov
xor
cmp
or
jnp
sbb
cmp
lret
xchg
mov
mov
in
ror
es
paddsb
cmp
add
movsb
push
pop
adc
in
stos
cmpsb
pop
xor
dec
mov
dec
iret
mov
mov
aam
imul
push
and
adc
inc
adc
adc
pop
dec
cmp
movsl
fwait
mov
ret
ds
adc
push
ficoms
movsl
xchg
hlt
cli
inc
inc
arpl
push
inc
sub
test
fadds
test
mov
out
loopne
dec
dec
xor
push
mov
les
nop
ret
jmp
lods
sbb
and
imul
xchg
ljmp
icebp
stc
fnstsw
imul
scas
fsubrl
idivb
and
cwtl
out
and
testb
lods
std
js
pop
inc
and
fcoml
inc
pop
enter
cmovns
dec
insl
cli
mov
cmp
sbb
push
out
lret
loope
scas
or
test
mov
inc
call
es
das
lret
inc
aas
push
mov
mov
add
imul
lea
imul
stc
stos
xchg
xor
pusha
pop
mov
sbb
xchg
in
mov
jnp
loopne
fwait
shlb
inc
dec
jo
push
mov
jns
js
into
xor
ja
in
repz
aad
cmp
pop
adc
dec
pop
jae
adc
nop
sbbl
add
cmc
ficoms
shlb
mov
push
inc
lods
shll
xchg
loop
or
mov
xchg
jl
inc
push
xchg
mov
nop
movsl
dec
ficoms
les
pushl
dec
lret
xor
jo
int3
std
popf
xorb
jbe
cld
fldenv
lock
cltd
testl
aam
jbe
call
push
pop
jno
dec
cli
xor
imull
dec
cmpsb
lds
sahf
sub
je
fsubs
sti
dec
mov
daa
imul
sub
push
mov
loopne
pop
mov
xchg
xor
inc
call
jecxz
xor
loopne
cmpb
and
add
cmpsl
mov
lods
adc
add
jle
and
or
cmpsl
fstpl
in
test
enter
pop
pop
and
cmp
add
out
mov
push
shll
lods
mov
outsb
lods
aas
mov
cmpsl
in
into
push
repz
aas
lods
mov
inc
aaa
divl
xchg
xchg
xor
fiaddl
sub
sub
mov
fcmovnu
test
xor
pop
fs
popf
dec
xor
in
test
xor
adc
push
lds
aas
or
daa
add
and
dec
movsb
cs
cmp
out
shlb
pusha
mov
cmp
daa
pop
popa
sti
and
jbe
jp
xchg
mov
mov
mov
sbb
aaa
or
enter
fwait
es
imul
mov
xchg
xchg
cmpsb
out
adc
lcall
cmp
xchg
inc
pusha
fs
punpckhdq
jno
pusha
sarl
pop
test
cli
push
daa
pop
ror
push
mov
aas
mov
insb
mov
cltd
pop
mov
jg
movsl
cmp
mov
ret
jmp
mov
cmpsb
ljmp
loope
lock
lcall
cmc
cmp
fsubs
push
mov
js
flds
jno
bound
cmp
rorl
mov
mov
push
xor
in
in
adc
dec
cmp
dec
jg
mov
add
fisubrs
mov
cld
repnz
jae
pop
pop
jnp
adc
sti
and
je
lret
sub
cwtl
test
fidivrs
jae
inc
aas
or
cmpsl
fsubs
dec
inc
lcall
xor
out
cld
add
lcall
rorb
inc
sbb
add
mov
xchg
mov
lahf
mov
ja
push
jno,pt
jo
sbb
xchg
or
faddp
dec
mov
scas
adc
adc
lods
lock
fnstcw
sub
xor
xchg
popf
mov
aas
and
sbb
or
and
inc
jmp
jecxz
mov
jecxz
inc
or
mov
mov
fistps
xchg
fdivl
cs
mov
xchg
inc
stos
stos
pop
jae
mov
cs
in
jg
jnp
adc
hlt
shr
sahf
fwait
out
pop
testl
test
dec
in
pop
fwait
cmp
ret
idiv
and
vxorps
jns
dec
arpl
mov
mov
repz
push
push
out
cmpsl
pushf
loope
ret
stos
inc
inc
iret
dec
in
loope
fbld
sub
push
sub
cmpsl
lahf
cmp
fcompl
adc
mov
add
xchg
shl
outsb
jbe
push
ss
pop
xchg
pop
int3
clc
lds
inc
std
popa
cmp
push
dec
mov
cmp
cltd
in
jne
jo
jecxz
xor
loope
ss
mov
jnp
xlat
pushf
xchg
jmp
pushf
add
sub
pop
add
mov
mov
mov
outsb
mov
ret
icebp
mov
shlb
je
arpl
add
in
cmp
out
mov
andb
or
pop
cmp
mov
sub
movsb
into
xchg
inc
add
sub
test
pusha
js
mov
shr
and
sub
sub
mov
mov
mov
inc
jp
dec
loopne
sbb
xor
addr16
arpl
cltd
leave
pushf
add
lret
xor
test
adc
les
insb
popa
dec
sub
enter
xchg
fidivl
push
mov
aas
push
rcr
inc
jo
sub
dec
insb
jecxz
and
dec
clc
pop
imul
js
pop
pop
or
push
movsl
pusha
inc
push
or
and
std
rol
int3
hlt
and
mov
mov
and
mov
lcall
ja,pt
lods
or
mov
jg
cltd
mov
pop
stos
rcr
andl
mov
xchg
outsb
mov
cmp
or
inc
mov
and
daa
repz
jecxz
test
or
sarl
scas
stos
out
ljmp
js
sub
mov
shll
out
pop
jge
lret
dec
mov
cmp
xlat
std
repnz
lock
push
aas
arpl
stos
cld
adc
bound
cmp
mov
adc
leave
and
ds
mov
jmp
cmpsb
out
add
into
pop
jmp
shrl
jg
outsb
orb
xchg
xchg
dec
sahf
mov
dec
add
mov
sti
add
frstor
jmp
in
jge
movsb
cmovae
jmp
push
shll
in
pop
rorl
in
js
mov
push
push
and
inc
cmp
cmp
shlb
jg
mov
in
mov
enter
int3
jg
in
add
sub
mov
push
cmp
mov
cli
test
pop
decb
or
cmc
aaa
rcrl
fisubl
dec
loope
std
sbb
or
mov
sub
insb
mov
cld
sub
call
or
aaa
adc
pop
cld
mov
add
loop
popf
fcoms
je
inc
insl
xchg
lods
mov
dec
sbb
shll
inc
mov
in
stc
jg
mov
out
lret
sub
xor
ds
inc
pop
aad
sbb
mov
add
sahf
loopne
aas
inc
inc
inc
ds
loope
cmc
jo
insl
inc
cli
enter
add
cs
xor
outsb
sarb
mov
add
xor
push
xchg
sbb
ds
or
in
movsb
xor
add
in
or
and
out
pop
adc
movl
jl
lahf
pop
push
out
int
pop
sbb
repz
fdivl
leave
mov
adc
inc
push
xchg
mov
les
scas
scas
sub
and
pop
sub
add
fwait
cmp
notb
push
add
call
jecxz
add
push
pop
js
aam
test
fbstp
jnp
sbb
cs
scas
dec
jo
hlt
mov
mov
cli
pop
xor
mov
aam
mov
aas
popa
cli
nop
mov
xchg
add
addr16
mov
mov
sbb
inc
vmptrst
test
jg
push
push
pop
jl
and
mov
scas
data16
int
out
add
aaa
mov
filds
add
xlat
hlt
pextrw
push
jbe
pop
lcall
sbb
sbb
push
pop
decl
or
test
adc
inc
ror
mov
insb
ret
jp
test
lock
insb
add
in
popa
mov
jbe
fwait
jae
cmpsl
mov
arpl
and
incb
jmp
ss
rclb
push
mov
lahf
daa
mov
or
aas
fstp
or
jbe
sahf
pop
out
mov
add
fwait
mov
pop
pop
mov
cmp
mov
repz
mov
or
and
insl
sbbb
xchg
jbe
aas
jb
mov
xchg
jp
mov
sbb
inc
lret
dec
cld
jb
je
out
lds
xor
cmp
iret
cmp
std
cmpsl
jp
jecxz
lcall
push
data16
jl
out
adcl
test
cmp
xchg
inc
es
les
pop
aas
or
sahf
push
std
inc
mov
jg
int
adc
das
and
popa
lret
ds
or
dec
jb
loopne
adc
push
inc
iret
add
mov
jne
aaa
in
and
mov
mov
into
mov
mov
jl
jp
mov
int
cmp
test
inc
or
push
xchg
std
pop
and
shl
roll
mov
outsb
mov
xor
mov
and
ret
adc
add
sti
and
dec
lock
xchg
lahf
lret
xor
daa
outsl
ja
mov
xor
mov
mov
sbb
dec
push
loope
adc
adc
roll
inc
xor
aad
adc
pop
lcall
filds
ret
mov
pop
push
in
add
push
out
repz
sbb
inc
lea
inc
addr16
insb
or
pop
adc
bound
data16
data16
cltd
inc
pushf
aam
mov
jne
jecxz
out
xlat
sub
dec
cli
mov
add
outsl
call
cmp
mov
push
cmp
add
add
fsubp
cmp
aas
and
popa
dec
mov
cs
fstp
fcmovbe
arpl
clc
push
add
adc
pop
mov
cmp
arpl
lods
scas
int3
and
or
jl
xlat
ss
fisubl
dec
push
mov
cld
dec
test
pop
cmp
rorl
sti
inc
sbb
mov
in
mov
out
push
aad
jo
aas
shlb
xchg
imul
jb
repnz
repz
cli
addl
jnp
add
sahf
mov
shlb
inc
jg
shl
movsb
call
mov
lahf
mov
fisubrl
xchg
mov
sahf
mov
mov
sub
or
mov
inc
pop
push
inc
cmp
in
imul
into
out
dec
test
xchg
test
in
xchg
add
mov
jnp
repnz
popf
mov
sub
sahf
faddl
push
aam
pop
pop
out
add
inc
ja
cmpl
pop
push
mov
lcall
stos
mov
sub
xor
push
insl
jb
cwtl
xchg
adc
scas
movsb
push
nop
cwtl
add
push
mov
push
add
jle
or
dec
lods
jb
push
xlat
jp
push
cld
cli
pop
dec
stos
push
xchg
fcomi
push
or
xchg
xchg
push
dec
fimuls
out
pop
hlt
in
jmp
add
mov
fwait
mov
in
sbb
xor
movsb
xor
or
push
or
in
ja
std
mov
je
push
or
inc
xor
ljmp
ret
mov
outsl
out
mov
mov
je
cmp
test
clc
imulb
lret
and
jns
or
das
push
lcall
int3
xchg
out
sub
test
inc
ret
fs
or
jns
push
mov
pushf
mov
cmp
adc
and
sbb
push
push
inc
insb
xchg
insl
inc
out
and
xor
xchg
mov
lret
subl
ret
data16
cmpsb
leave
and
incl
adc
fidivs
loopne
fcomps
xlat
jno
xor
gs
sbb
cmpsb
pusha
into
cmp
dec
mov
lods
cmc
and
pop
push
pop
sbb
sub
cmc
jae
iret
mov
jmp
addr16
mov
adcb
cmp
adc
xor
loope
jns
je
and
cwtl
inc
push
mov
pop
pushf
scas
jl
jnp
stc
pop
jne
xchg
mov
cld
fs
dec
rorl
jno
arpl
icebp
jle
daa
in
pushf
roll
jmp
push
cmp
stos
jbe
sahf
popa
mov
divb
cld
jl
notl
pusha
sub
add
or
clc
xchg
hlt
xor
or
push
paddusw
or
jae
xor
adc
mov
into
or
sahf
mov
dec
nop
outsb
call
mov
or
adc
lahf
mov
xor
ret
mov
pusha
pop
cmp
xor
pop
xchg
add
movsb
dec
dec
or
insl
push
ljmp
rorl
mov
stos
cmp
mov
cmp
and
inc
repnz
clc
inc
xchg
inc
fmuls
mov
test
je
mov
add
outsb
pusha
test
andl
jg
push
pushf
mov
sbb
cmp
iret
ljmp
mov
rclb
sbb
pushf
call
dec
repz
adc
add
pop
mov
add
add
shll
xchg
int
decl
lahf
sahf
xchg
lret
sbb
dec
bound
and
icebp
insb
mov
mov
push
repnz
and
sbb
jnp
out
shll
cmp
xor
mov
sub
popf
mov
icebp
xorl
sbb
cmpsb
sub
mov
lea
sub
jle
sub
sub
sbb
cmp
or
pusha
inc
push
push
mov
addl
mov
adc
mov
inc
ret
repz
sub
push
xlat
fisubl
jmp
jns
cld
xchg
aaa
lret
dec
lahf
fadds
xchg
subb
xchg
inc
mov
mov
test
ret
loope
jns
pop
adc
or
mov
orb
fwait
mov
mov
dec
mov
dec
lret
dec
dec
add
fisttpll
fstpl
lock
es
fsubr
pop
mov
jne
imul
loopne
pop
jbe
jae
or
rcl
nop
pop
lea
add
lret
push
jne
lods
cltd
cwtl
or
adc
xor
and
push
sbbl
ja
xor
pop
cmp
mov
ret
mov
adc
or
rclb
mov
ror
dec
pop
push
mov
pop
insb
push
repnz
lea
imul
push
cs
aad
cmp
push
jg
andl
shll
xchg
mov
popa
pop
dec
push
xlat
mov
sbb
int
sub
push
jg
icebp
jns
aaa
mov
pxor
mov
in
and
push
lods
cmp
xor
cmp
or
jne
insb
lods
push
mov
pop
sub
xor
jle
sarl
push
mov
inc
in
or
mov
loopne
or
push
sub
lret
bnd
cmp
xchg
popa
push
pop
inc
imul
sarb
inc
mov
mov
pusha
mov
xchg
add
xlat
and
inc
pop
sub
icebp
lret
xchg
mov
adc
jmp
xorl
fdivrl
into
cmp
mov
popa
xchg
out
sbb
mov
dec
les
pop
cmc
push
pop
nop
push
daa
jb
test
mov
sub
into
jns
or
mov
enter
push
fs
xchg
scas
insl
mov
sub
dec
and
dec
mov
fsubrl
sbb
inc
fimuls
sub
or
mov
popf
inc
adc
push
cltd
loopne
pop
scas
int
cmc
sbb
mov
outsl
xchg
mov
jmp
or
lahf
jb
iret
leave
leave
das
add
std
cmc
sbb
out
imul
push
jae
push
popf
xchg
loopne
dec
lret
add
jp
dec
mov
cmp
gs
lods
test
shll
fdivp
popf
fidivs
pop
xchg
and
push
scas
push
jno
mov
repnz
jl
insb
mov
inc
or
aaa
xor
and
sbb
cmp
test
je
and
cmpl
cmp
adc
cmp
aaa
xchg
cmp
cmp
sub
dec
rolb
jno
lods
fwait
or
lahf
inc
xorl
push
mov
les
movsb
and
pop
mov
outsb
jbe
push
sub
sub
gs
cltd
aaa
cmpsl
lret
adc
mov
loope
fs
out
enter
dec
inc
lret
pop
xchg
icebp
mov
or
test
popa
jnp
into
add
out
cmp
pop
jno
cmp
fldt
adc
imull
sub
scas
mov
pop
ja
cmp
mov
das
add
dec
mov
rcr
aam
push
sub
push
push
mul
fst
pop
adc
mov
stos
aam
sub
jnp
bnd
pop
xchg
sub
out
mov
pop
iret
outsl
lret
leave
test
push
or
jae
fstpl
je
pusha
sub
pop
push
inc
in
dec
mov
xor
dec
and
lods
push
dec
in
aaa
pop
push
sub
iret
push
sub
stc
mov
xchg
cli
sbb
inc
popa
or
xchg
lahf
cmp
inc
pop
xor
shrl
add
or
daa
enter
shrl
push
adc
push
jno
roll
rorb
ret
iret
mov
dec
popa
or
addb
nop
pop
jle
test
or
cmp
adc
cli
mov
sub
loop
mov
mov
insb
mov
push
stc
test
pop
pop
mov
push
cmc
inc
pushf
outsb
out
xchg
mov
dec
cmp
add
jmp
fnstcw
repnz
scas
or
adc
add
sti
xchg
pushf
adc
dec
push
addl
repz
out
fcompl
pop
fnop
mov
inc
arpl
xor
sahf
bound
jns
add
rolb
and
in
repnz
xorb
push
sub
mov
cmc
mov
dec
dec
inc
mov
mov
ds
movsb
ficompl
lret
or
jbe
xchg
or
out
jl
lret
xchg
mov
mov
out
fldcw
push
mov
and
xchg
pop
in
jbe
jge
sbb
or
iret
rorb
imul
pop
cmp
int3
jle
inc
ficompl
les
jo
movsb
pusha
popa
sbb
pop
mov
clc
dec
je
rorb
inc
sub
add
push
stos
mov
inc
mov
and
inc
fucomp
cmp
ja
or
xchg
xchg
notb
jne
in
xchg
sbb
inc
sub
mov
mov
xor
test
inc
mov
mov
pop
cld
xlat
adc
int3
test
into
negl
mov
stc
adc
aam
mov
xor
push
jo
pop
sub
mov
pop
or
inc
orl
inc
pop
adc
and
mov
dec
loope
jp
cmp
add
sarl
rcr
rcll
sahf
nop
ss
push
push
xor
call
std
std
shrl
in
cmc
outsb
mov
xchg
jp
xchg
sbb
dec
movsl
daa
mov
iret
mov
sub
adc
out
icebp
std
push
imul
sub
std
out
les
jb
fnstcw
pop
ja
ja
ret
jo
push
push
cmp
lea
mov
pop
pop
rclb
or
sub
popa
movl
mov
dec
sub
gs
or
movsl
mov
aaa
mov
push
cltd
andl
xchg
das
dec
cli
and
cmpb
push
lds
ret
sub
mov
int3
push
daa
mov
add
cmp
mov
add
mov
jle
repz
call
popf
rcrb
dec
lret
inc
jno
jne
mov
daa
scas
jnp
clc
mov
mov
xor
add
movsb
mov
and
out
negl
push
incb
xchg
mov
dec
call
inc
mov
or
mov
outsl
mov
pop
addr16
mov
dec
aam
call
fisubl
mov
adc
push
mov
cmp
nop
jecxz
push
and
xor
pop
or
adc
mov
mov
and
ss
push
fistpll
cs
mov
jb
cmp
or
sub
mov
fistpll
pop
mov
out
add
shll
xor
jl
mov
es
sbb
cmp
lahf
push
mov
das
sub
std
sbbl
ss
sbb
pop
jmp
or
push
push
out
flds
jle
shrb
jge
xor
jp
push
sti
js
mov
addb
in
fdivrs
pop
outsl
mov
cwtl
xorb
ja
mov
add
ds
dec
and
push
lahf
mov
cs
fldl
sub
fbld
xchg
addr16
lcall
dec
mov
call
aad
fcoml
jo
nop
or
pop
cmp
push
lds
pushf
filds
jge
daa
mov
pop
iret
aas
mov
xor
xor
inc
les
fcomp
test
aam
or
push
ja
lret
fidivrs
andl
pop
imul
ljmp
or
jecxz
mov
mov
jae
xor
mov
call
xchg
push
or
out
call
ds
aaa
mov
xchg
cmpb
xchg
inc
jbe
sub
outsb
shlb
dec
ja
xor
ret
xlat
sub
inc
ss
sub
je
sbb
mov
test
mov
loope
ljmp
xor
mov
push
and
xchg
lea
int3
cmpsl
outsl
push
dec
cmp
jae
and
arpl
pop
cmp
push
lods
loopne
dec
add
push
xor
push
mov
test
cltd
fbld
data16
cmp
lret
clc
mov
or
mov
xchg
pop
ss
nop
mov
xchg
cmpb
xchg
fstl
js
das
xor
pop
adc
out
pop
test
cmp
mov
sti
sti
test
fildll
and
popf
das
dec
aad
repz
outsb
and
cs
imul
jl
fldcw
std
jne
push
mov
jae
cmp
cmpsb
fdivrs
add
movsb
dec
mov
dec
pusha
pop
vmwrite
pop
cmp
add
jne
imul
lcall
fisttps
mov
mov
pop
outsb
scas
dec
hlt
loopne
in
out
pop
sbb
imull
je
mov
enter
push
xchg
inc
xchg
jle
push
add
sbb
xchg
cmp
int3
int
jmp
inc
in
out
enter
sbb
in
dec
or
pushf
lahf
addr16
jns
cli
xor
cmpsl
or
ficomps
add
mov
jmp
dec
pop
xchg
mov
or
ficompl
insb
pop
data16
sti
lahf
outsb
lahf
pop
out
scas
cmp
addl
push
rorb
pop
mov
leave
mov
or
pusha
das
out
js
gs
ljmp
int3
and
adc
out
arpl
rcrl
mov
cld
or
sub
bound
push
and
add
jbe
dec
xor
mov
test
add
iret
sti
aam
movsb
and
cmp
mov
popf
pcmpgtw
fisttpl
int
sub
add
faddl
clc
xchg
sbb
addb
sub
mov
or
pop
and
in
mov
cli
add
fildll
push
add
xchg
mov
gs
mov
pop
mov
aas
pop
hlt
insl
pop
call
test
nop
push
ss
arpl
mov
idivb
jmp
pop
mov
popf
pop
cs
mov
mov
fs
leave
jnp
into
sub
push
jle
in
or
int
sub
repnz
xor
js
add
inc
dec
dec
out
jno
repnz
popf
xchg
cmpsl
mov
aad
adc
add
popf
sbb
inc
wrmsr
sarb
inc
insb
add
sbb
fcompl
lcall
sbbl
sbb
idivl
loop
mov
mov
cmp
enter
mov
js
popf
rcll
lcall
pop
xor
dec
push
add
imul
xchg
clc
and
dec
sbb
mov
int3
mov
pop
rcr
test
xchg
xor
ret
xor
movsl
das
adc
jle
push
mov
bound
xchg
mov
dec
lea
xor
pop
sub
xchg
sbb
adc
inc
push
xchg
cli
inc
popa
dec
xchg
movsb
xchg
sub
or
mov
sub
pop
sbb
mov
andb
mov
lods
ja
mull
jbe
jae
orl
ror
or
xor
adc
and
pop
ret
mov
mov
ljmp
lea
and
sub
push
add
enter
xlat
cmpsb
jne
arpl
pop
leave
xchg
xchg
lret
pop
and
ret
xor
out
mov
sub
mov
insb
test
jae
nop
mov
into
dec
int3
jno
fisttps
repz
push
cmpsl
int
jg
loope
test
cld
jge
lods
ret
scas
xlat
dec
inc
shrb
notl
lret
xchg
inc
xchg
adc
inc
ljmp
jecxz
cltd
push
inc
inc
fbstp
sub
daa
xor
fidivs
sub
push
push
cmp
mov
xor
in
enter
jns
fsubl
ljmp
and
lcall
out
std
loop
rolb
lret
inc
mov
mov
ret
cld
popa
clc
mov
cmp
ret
cli
loopne
je
popf
jne
mov
pop
pop
and
ss
mov
add
xchg
push
cltd
int
lea
jmp
pop
mov
sbb
enter
sarb
sub
incb
or
adc
std
inc
jne
call
xchg
dec
sbb
cltd
inc
movsb
fsubr
ret
cs
adcb
lock
mov
push
out
movb
je
hlt
or
hlt
xor
push
lahf
mov
mov
mov
jmp
mov
loope
aas
xchg
dec
loopne
gs
mov
jae
cmpsl
inc
daa
sbb
dec
dec
and
cmpsb
inc
mov
fisttps
outsb
movsb
xchg
mov
ret
sub
jbe
mov
aam
test
iret
andb
push
and
mov
push
leave
mov
test
mov
sub
pop
or
cmc
and
mov
xlat
test
xchg
iret
xchg
xchg
xchg
jmp
insl
out
push
test
xchg
sbb
jle
cmpsl
push
or
mov
cmpsl
cmpsl
sbb
push
inc
mov
cmp
cmpsl
fistl
in
and
fsubrp
and
cmp
inc
push
push
movsb
movsl
cmp
or
add
ss
push
ret
mov
add
pop
cmp
xchg
pusha
pop
xor
sbb
lret
cltd
jl
jno
push
ror
xchg
fwait
dec
mov
rolb
nop
mov
jnp
sub
int3
pop
call
jg
add
xchg
jo
shlb
imul
push
mov
aas
hlt
pop
or
pop
cltd
inc
mov
inc
aad
stos
and
jb
mov
stc
test
lret
js
rol
cmpsb
scas
ret
sub
das
fisttpll
mov
mov
lcall
lcall
hlt
inc
lock
lcall
mov
sahf
and
incb
and
adc
jge
arpl
repz
in
test
lahf
mov
mov
pop
add
sbb
cmp
ljmp
bound
and
xorb
jmp
jle
sub
cmp
adc
loopne
ss
cmp
stos
shll
lea
dec
sbb
cmpsb
pop
mov
sbb
fisttpll
mov
clc
xor
loope
dec
cmp
iret
dec
imul
inc
mov
push
stos
rcr
inc
adc
stos
movsl
das
mov
stos
movsb
push
xlat
sub
pop
movsb
mov
xor
ds
jmp
inc
sbb
jecxz
test
xchg
rclb
aas
or
or
mov
pop
into
call
dec
inc
or
inc
xor
lock
push
nop
addr16
add
or
cmp
lods
in
pop
lcall
nop
inc
rcrl
push
fcoms
fcomps
pop
jno
pop
imul
sbb
add
arpl
push
xor
pop
repnz
sub
cmpsb
mov
mov
aas
mov
mov
repz
mov
loopne
es
add
xlat
lret
into
movups
ret
fnsave
add
mov
js
and
or
addl
imul
in
iret
jmp
add
xor
pop
call
add
sub
xchg
pop
and
ret
rcl
mov
cli
scas
dec
dec
inc
jl
add
roll
sbb
cld
loopne
xchg
loopne
xchg
fs
add
les
jge
aad
pop
cs
adc
push
xor
xor
mov
fmuls
mov
jbe
in
sub
pop
xchg
mov
inc
sub
dec
lea
jbe,pn
cmp
and
iret
fwait
int3
shll
pushf
clc
jp
mov
in
or
fcmovnbe
jb
cli
pop
xor
arpl
outsb
sbb
sbb
adc
add
loope
xor
pop
xchg
cmp
add
push
jmp
jp
fsubr
andb
aad
add
lret
xchg
push
jl
fucomp
in
inc
lsl
push
repnz
das
jne
or
sbb
aas
cwtl
out
popf
jo
jg
repz
mov
sbb
cmpsl
sub
xchg
les
pop
rcrb
icebp
stos
mov
sahf
adc
and
cmpsb
and
bound
sbb
cmpsl
mov
call
je
inc
mov
call
outsl
push
outsb
cmp
or
jnp
jp
push
imul
adc
mov
xchg
add
pop
or
sub
mov
mov
sub
xchg
xchg
dec
inc
out
ret
test
lret
aas
xor
fcmovne
fcoml
jo
aam
outsl
outsb
stos
sub
jne
test
hlt
jbe
mov
iret
and
push
je
mov
xorb
fistl
or
jae
xlat
fisubs
fdivrl
sub
dec
icebp
jbe
sarb
push
inc
jge
repz
aaa
data16
enter
jns
lret
pusha
inc
std
mov
repnz
fcos
mov
mov
jns
aas
mov
int3
les
inc
pop
mov
mov
cmp
xchg
jb
adc
inc
add
sarb
incl
adc
int
mov
jle
jbe
lcall
mov
inc
jge
adc
pusha
mov
ret
xor
and
stc
sub
sarb
insb
xlat
xor
push
in
mov
subl
jl
dec
cmpsl
xchg
data16
je
std
aaa
sbb
bound
xor
or
jne
ficoms
dec
movsb
mov
jno
imul
hlt
push
pop
pop
or
idivb
mov
jo
fildl
add
jb
dec
stc
dec
pop
add
adc
jge
jae
xchg
ljmp
and
mov
push
sbb
shlb
sub
pop
enter
inc
cmp
imul
xor
in
dec
sbb
mov
or
jno
lods
dec
enter
fidivrs
out
fistps
and
outsl
jo
lret
inc
jmp
adc
andb
inc
imulb
cmpsb
mov
pop
dec
push
jno
cmpsl
movl
dec
hlt
and
int3
pop
cmp
xchg
mov
insb
xchg
xor
pop
js
xchg
dec
lea
adc
inc
xor
cmpsb
imul
les
add
dec
sbb
shl
scas
clc
sti
push
cmp
sbb
jb
xor
xor
icebp
in
daa
js
inc
aaa
ret
loopne
push
mov
loopne
hlt
and
add
mov
icebp
dec
xor
shll
cmp
xchg
stos
cmpsb
pop
pop
jg
xor
jge
pushf
pop
enter
mov
push
sbb
inc
xor
mov
inc
repz
cmp
loope
cmp
sbb
pop
pop
cmpl
sbbb
in
lock
out
movsb
xlat
out
xchg
xor
dec
fwait
sub
cld
add
ss
cmp
scas
mov
and
jbe
loope
ss
movsb
js
mov
mov
xchg
sbb
das
addr16
fldt
adc
stos
fs
das
popa
in
mov
stc
rolb
rcl
imul
dec
rorb
lods
or
sub
icebp
fcomps
inc
pop
jns
mov
aas
pop
aad
hlt
jne
pusha
sub
clc
js
inc
hlt
mov
inc
adc
xchg
dec
sub
mov
aas
cwtl
cmpsb
mov
xchg
and
push
jp
jmp
xorl
arpl
sub
dec
xchg
lock
repnz
lahf
pusha
pop
call
mov
sub
imul
push
lcall
xor
jbe
leave
sub
outsb
inc
jb
rol
shlb
pusha
gs
dec
popa
push
outsl
jecxz
or
add
in
or
in
imul
jns
inc
scas
lret
test
repz
sub
mov
jo
adc
loope
rolb
pusha
popa
fstpt
fldcw
or
repz
fisubrs
and
jns
das
dec
loope
push
jae
sub
dec
jle
push
xchg
pusha
addl
cmp
test
pop
xchg
adc
aam
fbld
fisubl
sub
push
xchg
mov
add
inc
inc
jo
ja
out
jg
jecxz
adc
push
mov
jnp
sti
add
orl
mov
div
xor
add
and
push
ds
cmp
sbb
icebp
mov
cmp
inc
in
fistps
addr16
ret
out
dec
lds
mov
aam
rcrl
cmp
bound
aas
aas
sbb
sbb
ficoml
movsl
out
inc
jecxz
dec
shr
pop
or
dec
inc
mov
or
cmp
xor
or
pop
pop
out
dec
cmp
and
jb
cmpsb
fs
sbb
mov
lahf
jb
adc
iret
out
ja
les
dec
shl
subb
jmp
pop
add
gs
cmpsb
lock
jae
adc
sub
add
mov
mov
test
notb
das
jae
push
pop
test
push
movsb
loopne
mov
lods
ss
sbb
or
sbb
ds
loope
out
mov
lret
push
enter
xchg
sub
jle
dec
jge
scas
jns
fisubrs
push
push
ret
leave
mov
aad
cwtl
xchg
add
and
xchg
push
pop
or
inc
mov
jne
sbb
fcompl
lret
cmp
push
push
in
das
mov
pop
dec
xlat
mov
mov
jbe
in
cmpsb
fldenv
adc
stc
mov
xchg
push
imul
cmpsb
or
mov
cmp
in
dec
add
dec
jns
sbb
add
pusha
dec
ror
dec
pop
lock
mov
stc
mov
lds
stc
rorb
xchg
clc
add
in
xchg
cmc
mov
push
lock
sbb
call
loopne
icebp
fimuls
or
sti
pop
adc
mov
jo
fists
mov
fs
stos
and
xchg
push
outsb
popa
cwtl
call
leave
pop
push
fs
ja
xchg
xchg
fmull
or
aas
fwait
andl
nop
pop
jecxz
test
es
sub
leave
adc
sbb
int3
xchg
mov
lahf
arpl
out
adc
jno
cwtl
inc
cmpsl
imul
out
cmpsb
pusha
inc
scas
cmc
imul
ds
movsl
sbb
jecxz
fsubs
sbb
jne
pop
mov
or
cmp
loop
push
data16
push
movl
test
add
lods
iret
xchg
add
shll
or
xor
cmpsb
or
dec
repz
sahf
xor
seto
push
xchg
repz
jge
mov
loope
nop
pop
cs
hlt
sbb
sub
jl
cmc
push
mov
in
inc
xor
stos
es
push
int
inc
idivl
pop
pop
in
scas
jecxz
mov
rcr
insb
push
jb
add
out
jns
adc
cltd
sub
negb
in
adc
js
or
sahf
pusha
lar
pop
and
imul
push
xchg
jae
clc
andb
inc
mov
mov
outsl
sub
push
aaa
in
dec
mov
jno
shlb
jbe
pop
jle
cmp
outsl
pusha
push
sub
xlat
loop
lods
and
pop
ds
testb
aad
jecxz
jb
scas
add
enter
pop
mov
bswap
in
in
jno
in
cmp
js
sub
lahf
clc
and
or
aaa
out
push
xchg
jecxz
fildll
loope
flds
mov
dec
sub
cmpsl
out
jmp
sbb
jne
push
cli
fwait
sub
in
aam
fldl
mov
adc
pushf
imul
dec
out
insb
mov
mov
jnp
fildll
rcrb
fcmovb
sub
fidivl
repz
jnp,pt
cs
add
fisttpl
pop
adc
mov
xchg
and
mov
sbb
fcompl
pop
fwait
ljmp
shl
mov
jge
adc
jae
cmpsl
inc
adc
cmp
push
cmpsb
and
or
cwtl
popa
movsb
fcmovu
dec
ljmp
negb
imul
jno
mov
cmp
outsl
arpl
sbb
in
pop
lods
sbb
fs
out
inc
mov
pop
cmp
rclb
push
out
xchg
faddl
aad
push
mov
add
push
ret
enter
and
pushf
adc
mov
iret
fs
ret
scas
push
mov
pop
addr16
sbb
jge
imul
loopne
addl
jecxz
pusha
mov
test
popf
cmc
fstps
sub
je,pn
rolb
pusha
addr16
hlt
mov
mov
or
lds
xchg
mov
call
orb
shrd
pop
dec
sub
fstp
insl
stos
pop
pop
jmp
outsl
lods
mov
jp
insb
inc
or
xchg
aas
mov
out
sbb
pusha
cmp
js
push
inc
idivb
adc
add
lret
icebp
fcos
pop
push
jmp
fmull
out
ljmp
cmp
mov
mov
aaa
and
mov
mov
out
or
cmp
in
mov
inc
aas
push
subps
mov
lds
imull
ljmp
pop
cmp
xor
pop
sbb
mov
xor
out
adc
adc
aad
aas
lret
iret
jmp
lcall
cmc
enter
push
hlt
mov
popa
shrl
int3
fsubl
mov
add
cs
ss
and
adc
add
sbb
push
push
sub
ja
dec
ret
dec
fisubrl
lods
test
scas
mov
sub
outsb
daa
xor
push
adc
out
cmp
int
out
dec
out
jmp
xor
shr
roll
cwtl
ljmp
jae
in
inc
shlb
loop
add
out
fcmovnu
data16
cmp
mov
sub
mov
ja
pop
rcrl
stc
rcll
in
sbb
mov
popf
leave
push
sbb
mov
dec
andps
push
xchg
sbb
xlat
cs
ss
stos
mov
aad
mov
out
inc
inc
add
repz
sbb
fidivrl
scas
out
cmp
int3
mov
call
mov
push
bound
hlt
enter
or
or
or
pop
imul
mov
dec
in
sub
pop
pop
bound
movsl
fsubrp
cmp
shr
loopne
adc
adc
mov
aaa
push
out
gs
lret
mov
loopne
mov
out
es
xor
mov
sub
insb
rcrl
lcall
and
fsubr
int
insl
popa
icebp
lret
mov
fmul
aaa
lret
int3
push
jg
jge
sub
in
pop
insl
cltd
and
mov
mov
xor
xor
scas
mov
leave
jle
scas
xchg
xor
and
push
jge
mov
arpl
enter
cld
lods
add
fcomps
mov
mov
inc
or
outsb
xchg
mov
popa
rcr
jbe
lock
and
daa
insl
jecxz
inc
xchg
pop
push
mov
inc
in
mov
jp
push
mov
aam
in
inc
test
adc
test
cltd
and
sub
pop
mov
shr
out
jmp
test
dec
je
jno
xchg
mov
mov
adc
add
push
lods
pop
out
xchg
and
ja
arpl
push
fld
ret
lock
sbb
mov
sub
pop
outsl
mov
dec
jne
push
fwait
sbb
push
orb
xor
inc
or
scas
mov
add
pushf
clc
jg
sbb
hlt
cmc
and
scas
enter
imul
daa
xorl
pop
and
add
dec
or
sti
sub
mov
pop
mov
mov
sbb
inc
xchg
and
xchg
cltd
loop
cs
sub
mov
xor
and
out
dec
enter
jecxz
rorb
icebp
in
adc
adc
xor
cmpsl
pop
adc
inc
pop
xor
jae
cli
mov
inc
clc
lock
xchg
mov
sti
sbbb
mov
mov
sbb
dec
push
test
ret
sti
in
jo
mov
pop
xchg
dec
jecxz
and
in
pop
cmpsl
sbb
mov
pop
rcrb
and
repz
or
clc
mov
int
sbb
xchg
sti
inc
sub
movsb
xor
outsl
mov
dec
je
icebp
popf
out
daa
gs
inc
insb
stos
shrb
arpl
jle
push
push
jmp
aad
cmpsl
clc
orl
cmpsb
and
mov
je
aad
mov
cmp
xchg
std
jnp
lret
fcmovu
xor
subl
push
or
loope
fmuls
or
lcall
rorb
adc
xorps
xchg
outsb
mov
leave
jno
push
inc
mov
mov
add
cmpsl
orb
inc
iret
xor
or
aad
xor
cmpsl
out
xchg
andb
adc
sbb
sub
push
decb
nop
movsb
popf
jo
lods
jbe
sbb
sub
inc
dec
test
test
inc
jecxz
pop
mov
mov
shll
nop
adc
cs
xchg
cmpsl
jmp
mov
outsl
jmp
lcall
pop
push
pop
jae
xchg
push
daa
fcompl
and
sbb
and
std
pushf
add
jp
in
les
stc
jl
sbb
shl
or
sub
testl
fistpll
mov
test
adc
popf
mov
lahf
mov
and
jno
mov
push
push
sar
mov
sub
jmp
hlt
ret
aad
fisttps
jle
stos
pop
xlat
jge
push
adc
add
mov
xor
add
addr16
daa
arpl
cld
cltd
insl
jb
and
xchg
pop
aaa
repz
test
mov
out
pop
out
jno
mov
push
int
mov
and
lret
stc
sub
iret
das
push
push
clc
xor
dec
cli
push
call
ja
leave
les
notl
out
adc
fisubl
pop
cmp
out
push
repz
repnz
iret
jbe
sub
sbb
scas
pop
fldt
mov
inc
inc
movsl
ds
add
push
dec
jne
repz
ljmp
out
sbb
imul
add
push
mov
mov
sbb
aad
imul
hlt
pop
xchg
or
inc
outsl
out
or
cmp
dec
int3
lret
jne
mov
pop
mov
std
inc
in
xor
jle
mov
jne
gs
dec
les
or
sbb
and
pop
fwait
stos
fsubrl
arpl
aam
shll
scas
fldcw
cmp
shrl
sub
adc
sbbl
pop
shrb
es
pusha
stc
aaa
or
cmp
sub
push
cmp
dec
sbb
xchg
stos
mov
jmp
loop
repz
jb
mov
hlt
mov
scas
sbb
xchg
mov
outsl
mov
sub
sub
cmp
sbb
cmpsb
ds
pop
loop
roll
lret
gs
es
and
mov
cmp
dec
arpl
cmp
inc
xor
fbld
sub
je
ds
jnp
data16
xor
push
cmpsl
push
jb
pop
lock
or
insb
stos
ret
and
pop
cmp
adc
xor
xor
sbb
out
stos
sub
clc
xor
out
js
mov
sub
cmp
or
mov
arpl
sub
sub
sbb
sbb
scas
inc
out
inc
ds
pushf
dec
ret
jo
inc
aad
dec
loop
or
mov
loopne
pusha
mov
stos
sbb
inc
dec
jne
cmp
sub
rcr
push
movsb
aas
in
ljmp
push
test
mov
pop
ret
loopne
or
jno
jnp
pop
lods
xor
push
ds
test
mov
lcall
mov
sub
sahf
push
xor
gs
sbb
sub
fcmovbe
rorb
in
lock
xor
rorb
jo
popa
out
imul
aam
repz
mov
paddusw
inc
bound
fsubs
arpl
jmp
lods
push
dec
and
push
push
sti
xchg
jmp
sub
xchg
inc
xor
out
xor
mov
cwtl
fstl
jae
sub
addr16
xchg
pushf
outsl
xchg
push
pop
cmp
frstor
std
push
push
jmp
mov
and
mov
lock
cld
lret
xor
pop
dec
cmpb
dec
repz
adc
nop
mov
jl
jp
les
xchg
cmp
jnp
mov
sub
aad
testb
cmp
stos
repnz
sub
in
andl
sbb
fwait
xchg
xor
lret
and
nop
popf
clc
insb
jo
mov
stc
xchg
pop
outsl
mov
movl
outsb
xchg
js
ja
cmpsl
scas
mov
or
in
popl
or
dec
mov
out
dec
inc
movsb
mov
mov
lds
imul
ljmp
leave
sbb
popf
movsb
call
bound
mov
decb
mov
cmp
pusha
stos
repz
cmp
pusha
pushf
ljmp
jns
scas
push
cmp
insl
stos
push
cmp
andl
lcall
insl
adc
lcall
mov
mov
mov
mov
int
pop
xor
mov
mov
and
mov
mov
xor
push
shlb
cwtl
pop
imul
push
in
push
fwait
aas
ds
pop
addr16
cld
lret
das
push
out
mov
mov
out
fsubr
rcrl
push
pop
cmp
inc
cmpsb
pop
out
fmul
xchg
mov
shr
in
rolb
leave
push
sti
mov
call
mov
mov
pop
adc
add
dec
inc
inc
mov
mov
cwtl
xlat
add
cmc
repnz
hlt
shlb
mov
dec
xor
jb
adc
jbe
mov
fnstenv
imull
inc
outsl
mov
xor
lahf
in
outsl
ret
push
outsl
arpl
outsb
out
leave
pop
and
je
lahf
jge
iret
imul
fwait
daa
xchg
ret
sub
adc
loope
adc
inc
into
jp
test
inc
mov
push
or
pop
pop
repnz
jnp
arpl
mov
lret
xchg
mov
xlat
xor
dec
sahf
xchg
and
sbbl
jne
cmp
aad
shll
cs
fwait
imul
jae
xor
sti
mov
mov
cwtl
mov
jmp
mov
inc
pop
lea
out
sbb
and
mov
cmp
push
push
les
push
iret
mov
repnz
gs
xor
cli
cmp
push
int
jnp
jns
mov
mov
ret
popa
jecxz
inc
cmc
jbe
xor
in
sbb
push
pop
pop
inc
lcall
rcrb
pop
adc
leave
adc
push
adcl
pusha
dec
xchg
jno,pn
ret
jo
mov
repz
popf
push
adc
xchg
ret
cmp
ss
out
lods
testl
xchg
push
popa
xchg
orl
mov
mov
ficoms
arpl
dec
es
push
lret
test
dec
adc
out
xor
mov
jne
cli
rolb
dec
insl
push
out
mov
js
pop
iret
fimull
enter
mov
xadd
sub
xchg
arpl
aas
ficoms
repnz
inc
in
push
pop
mov
xor
hlt
xlat
mov
int
lock
adc
sbb
xor
pop
xor
sbb
inc
fs
ret
lock
xchg
lret
ret
and
popf
lcall
dec
xor
sbb
test
mov
in
push
adc
into
pop
xchg
bt
inc
lret
fistpll
jl
xchg
int
popf
cmc
fcmovnbe
repnz
iret
scas
jmp
pusha
xchg
fdivrp
lret
add
ficoms
adc
jns
sahf
pop
inc
pusha
xor
cs
scas
insb
fidivrs
inc
pop
mov
ret
mov
pop
mov
sbb
add
test
das
inc
iret
enter
imul
imul
gs
leave
pop
inc
sbb
movsb
icebp
sti
rep
cmp
xor
out
int3
in
imul
sbb
xchg
cs
push
outsb
jmp
mov
jmp
scas
add
xchg
aad
cwtl
inc
mov
ds
test
addr16
ja
fistl
or
or
sub
out
movsb
xlat
cli
dec
fiaddl
mov
imul
mov
jecxz
cmp
sbb
dec
add
daa
ljmp
hlt
ficoms
hlt
inc
ret
shr
jbe
dec
sbbl
pop
and
add
lds
lret
into
test
movsl
fidivl
jecxz
sbb
or
mov
and
insl
shlb
pop
push
lds
gs
movsb
adcl
pushf
pop
xchg
nop
mov
adc
mov
aam
mov
cli
outsl
jecxz
pop
or
mov
mov
lret
in
xchg
out
push
outsl
int
lds
add
ja
sub
daa
pop
xchg
jnp
jbe
xor
lock
adc
dec
xlat
pushf
mov
rcrb
scas
or
lods
sbb
test
xchg
push
in
pushl
test
fdivrs
movsl
daa
jo
mov
jo
dec
out
mov
add
sahf
add
loopne
out
xchg
dec
std
xlat
mov
ror
test
adcb
xchg
sub
mov
int3
movsl
cs
loopne
push
and
hlt
xorl
mov
mov
test
inc
loop
cld
clc
cmc
and
sbbb
mov
mov
pop
mov
fnsave
dec
addr16
les
addl
sub
mov
ss
adc
xor
inc
jecxz
push
xor
scas
mov
inc
out
and
jns
shlb
pop
pop
xchg
mov
add
or
sahf
dec
mov
scas
and
cmc
orb
push
mov
jl
out
xchg
lahf
fcom
shrl
adc
outsl
jo
mov
inc
test
sub
jnp
inc
es
mov
inc
push
or
mov
insl
jb
lahf
cmc
xlat
adc
negb
scas
jb
pop
mov
data16
xor
frstor
nop
shll
xor
lods
mov
cld
pop
mov
xchg
push
sbb
rcrl
jae
test
adc
insb
mov
push
mov
xor
ret
loop
jl
lods
lret
or
das
int3
mov
inc
xor
repz
lea
and
jge
mov
inc
add
pop
cli
arpl
sbb
les
ss
outsb
mov
imul
sub
lds
inc
jb
push
mov
sti
lods
fsubrl
sub
js
pop
adc
stos
sbb
iret
imulb
mov
jle
and
sbb
in
adcl
int3
jecxz
test
stos
mov
dec
and
inc
push
aam
roll
sbb
mov
iret
fisttps
adc
mov
push
imul
enter
add
xlat
adc
ds
jmp
cmpsl
sbb
mov
mov
push
adc
jae
scas
cmpl
adc
repnz
xchg
lahf
jb
xchg
sub
add
inc
or
icebp
sbb
test
in
jge
push
aas
cmpsl
pop
int
sbb
push
add
es
jecxz
inc
add
mov
push
push
insb
scas
xor
addr16
mov
pop
push
mov
ret
jp
ljmp
mov
push
xor
out
xor
ljmp
movsl
mov
loopne
mov
pop
mov
push
pop
xchg
or
sub
cld
imulb
dec
cmp
mov
mov
xor
xchg
std
add
mov
lock
scas
jmp
dec
lcall
stos
sbb
pop
and
test
inc
push
mov
mov
dec
lods
add
cmp
fmull
je
loope
adc
fsub
aas
push
insb
pop
imul
in
sub
std
aad
imul
xlat
jl
fiaddl
dec
cmp
hlt
lea
test
or
inc
cs
xor
repnz
push
scas
fsubrl
mov
push
jmp
lcall
mov
dec
stos
aaa
xor
fmuls
into
sti
mov
std
adc
dec
sbb
cld
aam
out
mov
add
into
test
inc
push
sahf
xor
pop
int3
loope
sub
add
mov
xor
fucomp
mov
xchg
and
lods
xchg
out
push
inc
imul
sbb
outsb
add
sbb
and
dec
cmc
cmp
cmp
push
pop
lahf
sub
xchg
cmp
push
mov
lcall
scas
dec
push
int
inc
mov
ds
sub
and
loope
xchg
in
fdivs
add
sub
and
xor
xchg
mov
push
aad
or
mov
adc
mov
jle
subl
fcmovu
cmpl
dec
jp
lds
cmp
pop
or
mov
lock
notb
popf
mov
add
jmp
lahf
lods
sub
mov
mov
mov
jp
nop
jns
xchg
jne
rcr
sub
arpl
lcall
pusha
enter
in
cmp
jb
dec
adc
ret
out
cmp
mov
push
push
insl
mov
ret
sub
cwtl
les
inc
ret
ret
dec
shl
repnz
movsl
lret
popf
cwtl
stos
inc
or
jne
inc
mov
push
sbb
fidivrs
stos
fsubs
inc
ud0
std
inc
lds
cmp
fisubrs
sub
xchg
sub
fsubs
inc
mov
sub
ja
repnz
xchg
push
adcl
adc
push
cmp
cmp
out
incl
hlt
push
cld
jecxz
push
inc
and
hlt
add
bound
das
dec
push
inc
aaa
je
inc
jo
adc
int
jmp
adc
mov
xchg
dec
jge
imul
jns
imul
adc
in
nop
into
lods
lret
dec
pop
decl
mov
cwtl
insl
test
push
jb
shrl
cltd
cmpsb
into
cmpsb
xchg
out
out
inc
decl
adc
arpl
mov
pushf
imul
lahf
xchg
stos
lock
fsubrl
dec
lcall
adc
adc
adc
adc
and
aaa
sub
popf
mov
shrl
sub
mov
pop
add
pop
or
imul
fs
sbb
xchg
sarb
adc
loopne
sub
imul
cld
xchg
cmp
inc
inc
mov
jne
aad
das
test
int
inc
xchg
inc
sbbl
mov
fs
fildl
push
and
mov
sti
sub
lds
ss
pop
xor
or
add
loop
inc
lret
mov
dec
fs
iret
fisttps
shrb
xchg
lds
outsl
out
pop
xchg
gs
in
and
inc
repz
aad
sub
dec
mov
and
sti
add
mov
jbe
and
push
test
jne
cmp
hlt
or
and
xor
xchg
cpuid
or
lock
leave
pop
cmpsl
sub
cmp
sbb
movlhps
arpl
outsl
cmpb
xorl
push
mov
dec
push
push
cli
jmp
mov
loop
lea
aam
cmp
cld
das
or
int3
cmpsb
aad
inc
adc
sti
sahf
sbb
icebp
subb
lea
ret
in
push
movsb
cmpsb
xor
test
imul
mov
inc
dec
jle
add
mov
add
inc
sbb
pop
sub
mov
mov
aaa
sbbl
lods
stos
dec
in
jp
jbe
adc
movsb
in
and
imul
add
dec
int3
jg
mov
in
out
push
and
lods
xor
stos
inc
test
dec
mov
adc
jecxz
and
shll
cwtl
call
push
push
cltd
lds
cmp
xchg
sub
aad
jle
pop
mov
cs
test
add
enter
sbb
sti
pusha
mov
movsl
popa
pop
int3
cmp
cld
jae
jecxz
ja
push
lock
mov
out
fwait
mov
nop
xchg
or
js
push
pop
pop
rolb
or
cmpb
hlt
sub
adc
test
push
xorb
mov
cwtl
cmp
jp
cwtl
jge
leave
push
xor
push
scas
mov
lods
xchg
aad
mov
enter
int3
push
insb
mov
add
and
repz
adc
inc
adcl
cld
cmc
lcall
inc
mov
sti
notb
cmc
inc
insb
dec
xchg
je
hlt
and
stos
insl
out
mov
fwait
cs
into
adc
mov
and
test
lock
push
movsl
adc
pop
lret
popf
sbb
or
jb
std
jmp
loope
cmpsl
adc
movsb
out
fmull
push
scas
inc
push
jge
sub
xchg
push
movsb
dec
xchg
dec
sar
cmpb
aaa
push
repz
aad
or
inc
lret
out
xchg
imul
mov
dec
or
jnp
adc
and
sbbb
push
xor
int3
jp
out
mov
cmp
xchg
push
lds
fbld
jno
inc
mov
decb
pop
scas
cmpsl
cmp
cmp
cmp
cmpsl
inc
and
aaa
jp
outsb
ret
cs
pop
insb
movsl
sti
inc
and
sub
and
nop
xchg
insb
fdivr
ss
cli
add
je
arpl
incl
negb
movsl
push
insl
insl
inc
ret
xchg
pop
fistl
psubb
pop
jo
pop
dec
xlat
dec
into
sti
push
mov
jg
mov
je
mov
cmp
mov
xor
mov
cmpsl
mov
lea
pusha
jae
fisttpl
mov
cmpsl
call
mov
addr16
cmp
gs
addr16
mov
rclb
aaa
mov
lods
inc
jns
pop
sbb
loop
jecxz
int3
out
cs
mov
sub
mov
add
inc
ret
scas
xorl
jmp
mov
or
mov
or
mov
bound
mov
inc
ss
xchg
int3
in
dec
dec
mov
or
mov
xchg
fstps
pusha
mov
xchg
loop
xor
outsb
jp
pop
addr16
sbb
in
je
int
adc
mov
sub
jg
mov
mov
or
dec
jb
movsb
sarb
mov
push
pushf
mov
cmp
xchg
mov
repz
mov
addr16
lock
into
pop
sbb
es
cmp
negl
stos
mov
pop
or
pop
and
in
adc
bound
mov
xchg
aaa
rcr
xor
pop
jecxz
repnz
and
inc
nop
jp
test
nopl
gs
mov
imul
dec
push
xor
ss
lods
popf
dec
int3
cs
mov
cli
enter
push
cmpsl
loop
scas
xchg
outsl
lods
cmpsl
add
loop
mov
insl
mov
inc
gs
pop
push
adc
cmp
add
dec
adc
xchg
ret
inc
push
lds
in
int3
stc
ret
push
dec
dec
scas
out
mov
mov
loop
imul
aam
xchg
inc
or
mov
push
movsb
sub
inc
ja
mov
jle
test
pop
sub
ss
andl
fcmovnu
lods
add
xor
xor
lret
scas
ret
negl
dec
das
out
hlt
xchg
push
loope
fwait
jae
push
dec
mov
mov
js
xor
push
xor
cmp
inc
push
cmp
ret
pop
mov
add
lcall
push
mov
int3
mov
jl
inc
push
dec
addr16
mov
movntq
insb
int3
int3
sbb
xlat
mov
push
movsb
mov
lea
ror
sbb
in
loope
inc
jl
sbbb
mov
fldl
fdivrs
mov
mov
jecxz
pop
push
subb
pop
insb
mov
mov
or
lcall
pop
ss
mov
jbe
cs
add
shl
add
pop
mov
out
push
hlt
push
aad
push
push
xor
cmp
out
stos
push
pop
addr16
add
adc
repnz
pushf
ja
out
sub
add
sbb
adc
jl
push
mov
sbb
mov
inc
mov
lcall
push
insb
sub
add
hlt
cmp
mov
or
mov
adc
sbb
inc
jbe
mov
jmp
cmc
aas
xor
cwtl
inc
std
addr16
inc
xchg
mov
mov
stc
push
lods
test
or
inc
xor
mov
out
push
leave
stos
sub
jnp
mov
scas
adc
shrb
repz
aad
lods
mov
aas
jns
dec
xchg
and
mov
movsb
pushf
test
arpl
test
int3
push
out
or
mov
xor
and
dec
outsl
cwtl
dec
dec
sahf
fwait
xorl
xchg
xchg
adc
jl
out
pop
mov
add
xor
push
pop
xchg
lret
pop
mov
cmp
jbe
and
inc
iret
inc
pop
hlt
sahf
imul
add
xor
lock
add
outsb
daa
cmpsb
cmc
xor
jno
cmp
xchg
scas
call
nop
loopne
ljmp
adc
mov
and
adc
scas
pop
in
sbb
in
loop
fnstsw
cmc
fisubl
inc
cmc
pusha
gs
and
mov
rclb
std
xlat
jg
nop
jle
dec
stos
movsl
movsl
rcrb
push
push
cmp
push
inc
jge
adc
popa
sub
xchg
cmp
sbb
data16
mov
enter
sti
movsl
pop
lock
and
jns
imul
cld
sbb
into
pop
std
daa
out
mov
lock
add
mov
aad
add
jbe
in
add
pushf
ret
xchg
and
inc
test
inc
sub
std
je
roll
cwtl
in
stos
pop
pop
push
ret
stos
out
fistl
jnp
int
rcrl
in
shll
sbb
jnp
sub
ljmp
sbb
pavgb
mov
call
leave
jmp
cmp
aaa
fisttpl
les
ds
lods
cwtl
pop
or
jbe
xchg
mov
stos
add
imul
js
call
mov
xchg
fmull
push
insl
mulb
leave
fstpt
popa
bound
je
push
scas
push
ds
popa
imull
ljmp
das
rol
in
popa
iret
mov
and
xchg
aaa
in
push
mov
push
sub
adc
stc
lcall
add
fwait
sti
add
repz
sub
ds
jbe
add
sahf
into
jbe
test
addr16
dec
repz
or
sub
jns
sub
call
imul
xchg
addl
and
mov
sarl
cld
stc
into
ds
ja
shl
sets
rolb
and
mov
movsb
pop
sub
and
fcompl
data16
adc
xchg
loope
int
imul
stos
mov
adc
pusha
dec
dec
scas
loop
adc
add
sbb
or
xor
cmp
in
add
mov
jo
lds
stos
lds
mov
je
inc
mov
mov
nop
fld
shrl
int
cld
inc
addr16
xorb
movsb
push
sub
sbb
int3
xor
pusha
sbb
add
jl
sbb
inc
sbb
jns
pop
loope
movsb
xor
push
jecxz
jns
arpl
jnp
cmp
or
adc
or
in
addr16
pop
xchg
out
test
xchg
sbb
or
popf
cmp
or
mov
subb
add
in
xchg
mov
xlat
leave
add
rcrl
outsb
mov
xchg
dec
push
inc
imul
movsb
adc
jecxz
dec
inc
rol
mov
hlt
jb
lret
xchg
stc
sub
fsub
push
sub
outsl
adc
xchg
pop
inc
aam
inc
dec
icebp
fistpl
mov
xlat
fs
jns
mov
add
push
mov
fs
insl
lret
xchg
mov
and
scas
jnp
or
pop
jo
jo
inc
pusha
dec
adc
mov
sbb
xlat
jmp
aad
xchg
push
je
sbb
mov
lcall
adc
loop
xor
in
in
cmp
cmp
scas
jmp
xlat
pop
dec
popf
xor
sub
mov
dec
out
in
xchg
jne
loop,pn
xchg
sbb
ljmp
and
inc
jmp
cwtl
adc
jle
pop
inc
aaa
inc
sub
pop
mov
dec
imul
test
xchg
mov
jae
mov
fcmove
add
in
or
notb
push
rcrl
add
mov
fwait
stos
xchg
cwtl
into
dec
mov
and
test
sub
and
pusha
or
daa
addr16
mov
mov
xor
addr16
scas
ret
mov
loopne
and
fisttpll
mov
outsb
xor
fdivrl
es
fimull
jbe
jbe
inc
mov
int
fwait
arpl
cld
fildl
rorl
mov
lret
mov
cwtl
sbb
push
jo
dec
inc
add
fisubrs
mov
scas
fcomps
nop
cmpsb
xlat
push
mov
mov
stos
repz
leave
mov
dec
add
dec
dec
dec
mov
cmp
je
jo
les
fldt
cmp
test
cmp
rcll
xchg
add
cmpsl
sbb
and
pop
xor
movsb
mov
adc
push
fcomip
scas
fs
nop
adc
sub
lahf
xchg
test
inc
loope
mov
pop
mov
sbb
push
scas
sub
xchg
mov
mov
inc
jno
sbb
add
jne
push
pop
mov
jo
push
add
inc
add
sbb
fiadds
xor
sub
aas
addr16
xchg
pop
lret
lods
mov
xor
pushf
scas
dec
ret
xchg
insb
jbe
xor
scas
sahf
std
leave
test
lret
or
enter
cmc
aad
xor
sub
les
gs
shlb
sbb
xchg
test
inc
jno
xor
cli
das
mov
sbb
mov
in
out
push
mov
mov
icebp
daa
jp
dec
repz
mov
loopne
das
push
adc
cmpb
jl
pusha
mov
adc
add
add
pop
and
fwait
in
cmc
or
and
pop
movsl
xor
imul
inc
xor
sub
fwait
jge
daa
addr16
movzbl
notl
pushf
pop
mov
pop
idiv
fst
inc
pop
jmp
std
aas
popa
or
sbb
test
push
sahf
add
arpl
fiadds
fnstsw
and
test
repnz
je
dec
ret
cmp
arpl
movsb
jmp
push
or
mov
or
mov
push
cmp
and
inc
into
push
fninit
or
ljmp
cmp
ret
loopne,pn
aas
xor
test
enter
push
jmp
pop
bound
les
ret
std
test
clc
jnp
lret
cmp
dec
mov
cmpsb
and
pop
pop
adcb
incl
dec
mov
push
mov
std
pop
fwait
into
sbb
mov
add
push
push
fldt
bound
cwtl
scas
in
movsb
sbb
push
hlt
mov
fistpll
inc
cmp
sub
jmp
scas
fisttpll
insl
pusha
lods
ds
ljmp
loop
sub
cmp
in
inc
popa
arpl
add
in
mov
mov
scas
jbe
mov
push
loop
mov
push
data16
jb
fistpll
push
repnz
or
add
mov
in
push
dec
pop
lcall
incl
sbb
test
test
and
pop
pop
adc
jmp
adc
xchg
js
lock
sbbb
push
test
mov
daa
ret
and
les
jb
std
xchg
pusha
inc
pop
push
in
xlat
mov
outsb
stos
pop
xor
insb
mov
pop
aas
adc
daa
sarl
rol
or
dec
shl
movsl
sub
and
or
mov
jb
pop
jae
sub
xchg
and
das
jo
fidivrl
mov
inc
mul
je
inc
cli
mov
sub
pop
mov
jns
ds
mov
movsl
push
aad
push
lods
loopne
lods
aad
fdivp
mov
call
adc
mov
dec
test
scas
fidivrl
xor
leave
cmp
mov
int
jns
pop
bound
dec
cmpsl
test
mov
add
dec
inc
pop
fisttps
repz
cld
xlat
das
movsl
sub
lcall
add
lock
or
fcoml
xor
add
xor
ja
arpl
adc
mov
das
xchg
cmp
mov
sub
shll
ret
movsb
push
add
mov
push
sbbb
push
and
vsqrtpd
xchg
add
fsts
call
jecxz
mov
ss
into
popa
mov
push
cli
popa
xchg
add
mov
test
adc
jb
lock
repz
xor
push
das
dec
in
out
cmp
jg
or
out
icebp
mov
cli
cmp
pop
outsl
sub
and
pop
int
jnp
mov
push
or
xor
add
push
xor
push
outsl
rcr
add
dec
insl
repz
in
jno
push
das
pop
stos
test
jns
dec
jae
ret
xor
arpl
xchg
push
xchg
jae
xorl
loop
inc
push
mov
fstpt
xchg
fnsetpm(287
call
inc
dec
push
loopne
roll
icebp
fwait
inc
cmp
mov
dec
sbbl
incl
push
inc
mov
add
rcl
repnz
hlt
dec
or
add
insl
cmp
je
imul
pop
inc
adc
sub
sahf
aaa
lret
mov
xor
sub
imul
cld
fmull
pusha
pop
addw
fsubl
fidivl
stos
and
mov
mull
hlt
lock
push
sub
xor
push
and
ljmp
outsb
inc
adc
leave
cld
pop
lret
xchg
pop
xor
inc
clc
dec
inc
xor
jbe
fwait
aas
dec
pop
pushf
jb
pop
pop
into
mov
aad
popf
in
mov
jne
imul
clc
je
mov
ja
arpl
xor
pusha
dec
mov
mov
or
pop
push
inc
add
lds
popf
and
jp
repz
test
fistl
lcall
jecxz
test
dec
xor
pop
and
cli
subl
icebp
sub
leave
and
or
out
mov
pop
sbb
mov
sub
into
idivb
pop
push
xchg
mov
inc
lahf
pop
add
push
incb
adcl
call
sub
loope
subl
fwait
notb
jnp
mov
dec
jmp
in
loop
test
dec
xchg
testb
lret
add
sbbl
add
imul
lea
imul
leave
and
xchg
lods
cwtl
fisubs
test
mov
cld
push
inc
fsubs
push
xor
arpl
test
decl
sub
loope
popf
lods
or
pop
iret
jl
int
mov
pop
loopne,pn
ret
lods
mov
mov
mov
dec
cld
loop
in
push
pusha
or
cwtl
mov
stos
in
loopne
dec
popf
lds
insb
dec
rcll
push
out
test
push
data16
mov
jnp
movsl
icebp
pop
add
xchg
je
lret
pop
shrl
xchg
or
sbb
pop
adc
jo
jmp
dec
mov
push
jl
dec
sub
sbb
jb
sub
or
inc
mov
mov
adc
inc
rorl
cmp
call
les
and
imul
jecxz
xchg
cmp
push
sbb
inc
imul
iret
push
mov
pop
sbb
lcall
cmp
cmp
ds
pop
jb
sub
pop
add
fwait
pop
cltd
daa
mov
shll
inc
inc
shlb
jmp
mov
pop
xor
cs
std
movsb
pop
popa
es
push
mov
fsubl
ljmp
addr16
ret
mov
xchg
mov
pop
loope
gs
inc
inc
loopne
cmp
aam
jbe
gs
and
push
dec
insb
lods
sub
sub
cs
fmull
adcb
sub
sar
das
lock
dec
mov
pop
xchg
out
adc
xchg
pop
mov
stc
inc
fstp
xchg
xchg
jb
xor
xchg
cmpsl
adc
sbb
push
movsl
and
pop
clc
sbb
cmpsb
icebp
or
pop
ret
push
jmp
gs
fdivrs
jecxz
ror
adc
and
dec
xor
inc
shll
cmp
test
push
mov
xchg
call
rcl
mov
pushl
fimuls
je
add
adc
mov
jle
loope
pop
pusha
enter
jle
jge
shrb
lcall
adc
and
xorl
pop
mov
mov
ss
data16
call
mov
adc
mov
inc
jl
adcb
add
fbstp
lret
inc
ja
cltd
push
outsl
add
and
cli
cmp
cmp
xor
inc
sub
pop
adc
insb
pop
pop
mov
sbb
outsb
sbb
jo
lods
cmp
fldt
push
or
push
test
sbb
rcrb
cmpsl
pop
inc
adc
push
xchg
fdivrp
or
out
jbe
jecxz
in
dec
out
dec
scas
and
xor
dec
loope
jp
sub
mov
mov
inc
sbb
mov
adc
mov
fsub
out
sub
stc
rcll
inc
add
jae
fdivrl
sub
mov
push
cmp
push
adc
pop
dec
jb
cmp
fcmovnb
loop
pushl
pop
hlt
test
and
ss
addr16
sub
jb
test
test
mov
mov
adc
ja
mov
jge
add
je
adc
stos
push
and
rcll
subb
stos
roll
sbb
cmp
xor
in
jb
repz
jmp
cld
dec
mov
icebp
jb
and
mov
xchg
hlt
mov
movsl
mov
dec
and
inc
cmpsl
loope
dec
xlat
jno
adc
xchg
jnp
pop
mov
mov
inc
bnd
sti
test
or
sti
popf
popf
insb
dec
jg,pt
out
push
ret
imul
push
pop
inc
daa
add
int
fcompl
mov
stos
jnp
in
ljmp
out
xchg
mov
mov
lahf
pop
iret
pop
popa
fisubl
fildll
fwait
sbb
dec
test
iret
dec
push
daa
xchg
addb
std
dec
xchg
mov
xchg
push
lods
xchg
sub
jl
xchg
or
scas
lods
jns
ja
and
xor
cli
aam
repnz
loopne
xor
je
cs
jb
imul
pop
lea
jmp
insb
ret
subl
jns
pop
and
cmpsb
hlt
stos
mov
add
push
jo
daa
cmpsl
data16
gs
pop
test
call
mov
cmp
cmp
movsb
dec
push
xlat
jl
and
push
arpl
push
xchg
fnstsw
mov
or
out
iret
imul
out
orl
lea
xor
scas
push
mov
mov
sbb
loop
popa
or
out
or
add
mov
adc
test
adc
mov
sbb
ljmp
pop
in
shl
xchg
pop
int3
daa
in
or
jns
icebp
mov
in
mov
push
or
push
inc
push
push
int
push
clc
pop
movsl
lds
xchg
clc
dec
mov
outsb
stc
add
lcall
pop
sub
sbb
and
mov
push
fisubrl
mov
outsb
cli
jne
aas
add
sarl
inc
arpl
sbb
cmp
jle
js
mov
add
add
jnp
xor
repz
popf
icebp
jl
insb
jmp
outsl
jne
shl
and
mov
jg
fsubr
and
jmp
enter
fiaddl
mov
jle
mov
jb
sub
loopne
rorb
inc
sar
das
xor
xchg
pop
mov
inc
cli
sbb
push
or
shr
lods
pushf
test
add
aas
fwait
mov
mov
notl
stos
push
adc
sub
insb
cmp
in
fidivl
xchg
mov
or
dec
xchg
cld
xor
inc
and
mov
mov
movb
mov
lods
stos
or
inc
es
popa
mov
mov
adc
jns
nop
movsb
jno
sbb
or
pop
jg
inc
in
ret
mov
ror
mov
cmpsl
outsb
xlat
push
ja
mov
cmpb
in
xchg
xor
dec
rolb
cltd
inc
sub
stc
xor
popf
shr
int
push
inc
popf
test
popf
mov
inc
mov
insb
cmp
jle
aas
leave
sbb
pop
mov
adcb
mov
and
adc
pop
repnz
sti
pop
xor
or
enter
dec
and
jae
jbe
daa
fs
fsub
loope
jo
out
sub
ret
xchg
jmp
add
jno
xor
jmp
inc
mov
mov
sbb
sarb
push
xchg
push
addb
mull
xchg
push
setge
daa
jns
sahf
outsb
inc
pop
out
jl
test
jae
popa
dec
push
clc
subb
xchg
dec
movsl
adc
sbb
xchg
dec
inc
sbb
sub
pop
movb
mov
aas
pusha
mov
xchg
loopne
push
in
push
repz
jne
mov
mov
shlw
mov
push
jno
push
popl
scas
mov
movsl
mov
ljmp
mov
pop
inc
xor
and
dec
orb
push
mov
mov
pop
jle
insl
cmc
pop
xorb
adc
shl
mov
add
ret
mov
lcall
and
int
test
test
pop
or
outsb
int
mull
popf
out
fdivs
cmc
imul
test
xor
xchg
sbb
enter
daa
xor
and
mov
push
xor
and
outsb
icebp
xchg
out
les
in
leave
movsb
cltd
push
test
stos
jge
cmp
and
mov
lret
inc
int
sahf
mov
cmp
push
ficomps
aad
outsb
popf
movsb
xchg
shlb
and
pop
hlt
mov
aam
gs
jns
cmp
jbe
cmp
daa
cmovp
movsl
add
aas
addr16
shl
bswap
pop
lock
mov
lahf
scas
in
aad
sbb
mov
or
adc
inc
adc
shrb
pop
mov
adc
cli
and
xor
fstps
sub
mov
in
addr16
movl
lahf
push
in
fadds
shlb
xchg
movsb
ljmp
push
movsl
xchg
sbb
push
movl
dec
and
ret
inc
sbb
pop
iret
shll
in
mov
mov
idivb
push
xchg
xchg
jp
jbe
mov
out
pop
jo
inc
mov
bound
fcmovnb
add
repz
mov
vpunpckhqdq
rclb
add
inc
jnp
or
sahf
in
push
mov
in
jns
inc
lcall
and
sub
pop
dec
adc
popf
addr16
and
xlat
fidivs
mov
and
mov
ss
or
int
je
mov
sbb
das
jmp
pushf
xchg
lcall
sub
sarb
cmp
rcr
popa
ss
push
das
cmp
or
loope
adc
mov
lods
push
jno
jecxz
add
nop
fcmovbe
les
inc
mov
test
fdivrs
ss
mov
stos
sbb
inc
fwait
cmpsl
popf
les
inc
dec
clc
push
or
sbb
xchg
mov
jg
push
lcall
jp
and
or
cltd
in
cmpsb
rcrb
loop
mov
sbb
xchg
xchg
or
scas
mov
pusha
push
jae
pop
in
int3
leave
int3
inc
iret
icebp
xor
mov
aaa
inc
loopne
mov
and
and
in
push
jae
mov
dec
cmp
push
addr16
clc
sahf
pop
adc
push
shrl
sbb
pop
je
pop
stos
int3
push
pop
or
mov
gs
push
xchg
cvttps2pi
add
lret
mov
xchg
out
std
add
inc
mov
adc
cld
cmp
mov
push
xor
rclb
mov
rdmsr
mov
mov
cs
cmc
imul
pop
fisubrs
and
jns
popl
ljmp
call
jno
das
mov
xchg
xor
jno
inc
push
outsl
scas
pop
mov
rcll
out
rol
add
and
pop
cmp
xor
jns
push
mov
jmp
ja
mov
xchg
ds
and
mov
fmull
jmp
adc
jp
cmp
mov
mov
mov
jns
or
loopne
and
out
dec
aad
cmc
add
aaa
pop
xchg
fwait
lock
pop
pop
sub
xchg
inc
popa
sub
shr
jle
lods
xor
cmp
pop
push
sbb
pop
xor
shll
push
fs
and
out
out
add
inc
rcr
dec
pop
icebp
lret
add
adc
cmp
pushf
fld
sahf
inc
fstpt
jmp
popf
bound
mov
or
cmp
mov
add
jge
cmp
lret
mov
movsb
les
in
pushf
sbb
jmp
push
int
stos
fiaddl
fs
inc
cmp
ficoms
je
cmc
ja
movsb
dec
xchg
sub
cmpb
dec
ljmp
add
xor
sub
dec
sub
dec
push
push
xor
cmp
push
xor
gs
jmp
push
pushl
fsubs
lret
push
inc
jecxz
int3
or
push
test
mov
out
jnp
cmp
xchg
insl
insb
insb
sbb
pop
xchg
je
mov
push
mov
ja
mov
dec
or
and
cmc
sub
adc
dec
xchg
insl
mov
pop
adc
mov
pop
inc
mov
mov
pop
pop
out
sahf
fcoml
stos
jl
data16
or
lods
ja
cli
lahf
ret
cwtl
xor
fdivs
cmp
dec
pop
fistpll
clc
xchg
test
dec
inc
fistpll
repz
jecxz
mov
adc
add
int3
mov
cltd
and
xchg
or
cmc
repz
into
das
cmp
cmp
pop
ret
fisubrs
adc
notl
or
inc
pop
add
out
jno
popf
jg
adc
xor
int
cltd
rolb
jns
jmp
xor
mov
mov
mov
mov
into
aad
fadd
and
add
stos
push
lods
pop
mov
pop
xchg
push
js
xchg
cmp
mov
pop
mov
adc
jl
shrl
add
adc
mov
cltd
ret
js
or
jb
ror
mov
mov
bound
push
xchg
repnz
mov
jmp
xchg
push
sub
mov
outsb
push
sub
dec
lahf
leave
sub
or
xchg
or
push
mov
sub
jecxz
aaa
pushf
mov
push
adc
mov
add
adc
or
push
adc
cmp
out
rcll
push
or
pusha
cmp
mov
jmp
into
ja
into
push
adc
out
jb
ss
out
or
lods
or
iret
ss
jecxz
jmp
push
jbe
scas
mov
dec
arpl
fistps
daa
aaa
stc
pop
cld
cmp
pop
shlb
adc
movsb
mov
jae
mov
xchg
and
imul
stos
sar
jnp
dec
mov
fwait
jbe
pusha
mov
int
jo
lea
mov
pop
dec
or
and
in
mov
stos
dec
mov
mov
out
or
rclb
sbb
xor
add
ds
mov
mov
cmp
leave
test
ja
jl
cld
int
imulb
cmp
js
enter
les
in
sub
cmp
cli
lock
push
dec
insl
push
insb
cmpsl
sti
aad
out
out
inc
xor
int3
mov
test
pop
sbb
repnz
int3
rorl
and
add
mov
add
push
out
sub
adc
lds
mov
xchg
stc
inc
sahf
mov
xor
pushw
ror
imul
ja
xor
mov
sbb
mov
push
sub
sbb
mov
dec
mov
repnz
sahf
add
xor
call
std
in
mov
mov
lods
sub
add
clc
push
sub
fcomps
lahf
ja
mov
pop
pop
mov
fisubrs
mov
mov
scas
test
adc
test
out
mov
or
jle
test
fsubrs
jg
sub
push
or
mov
mov
pop
sahf
push
sub
shr
dec
test
pop
mov
inc
stos
cmp
imul
lahf
outsl
and
call
outsb
and
bnd
and
dec
mov
shrb
adc
xor
stc
dec
out
popf
insl
xor
inc
dec
sbb
hlt
pop
es
outsb
lods
iret
imul
xor
outsb
push
popa
mov
in
aam
es
or
or
pushf
fmul
pop
mov
es
in
jb
loope
xor
mulb
add
mov
sub
xlat
add
ret
cmp
mov
jns
cmp
cmp
mov
sbb
ljmp
or
mov
xchg
mov
cwtl
mov
cmp
daa
jmp
sub
repz
shlb
arpl
movsb
insb
aam
push
movsl
dec
adc
ret
aas
sbb
jae
test
sub
push
add
jns
in
jne
test
daa
sbb
dec
out
mov
xor
dec
in
test
int3
adc
mov
xor
rcrl
outsb
pop
clc
cmp
jne
sbb
and
mov
add
dec
cmp
sub
sarl
or
ss
ror
cmpsb
das
jp
mov
or
xchg
mov
inc
mov
idivl
cmp
test
in
es
mov
add
seto
inc
mov
push
jb
xor
lock
jp
dec
dec
pop
icebp
scas
in
fwait
ret
lcall
push
test
and
mov
outsb
xor
sbb
pop
mov
stos
xor
imul
xor
xor
or
cltd
sub
cld
mov
sbb
pushf
dec
jg
das
jmp
mov
jns
rcr
mov
xor
mov
movsl
and
xlat
cltd
aad
repz
aaa
cmp
mov
out
int
aad
fadd
adc
xchg
jl
adc
adc
jecxz
imull
dec
cmp
cmp
mov
xlat
ss
loope
stc
dec
inc
sbb
iret
daa
jg
ds
jle,pn
xor
sbb
arpl
pop
xchg
int3
ja
lods
int
add
xor
or
xor
fisubl
pop
or
push
sub
push
cmpsl
pop
das
mov
out
inc
mov
divb
and
js
sarb
daa
sbbl
jle
loop
sarb
into
or
mov
pop
mov
inc
loopne
xchg
or
fistpl
cld
push
insb
xchg
fnstenv
mov
sub
ss
mov
cmp
xchg
pop
popa
fldenv
int3
add
dec
jb
je
adc
and
test
loopne
in
insb
lods
mov
aas
mov
mov
adc
sbb
pop
sub
in
inc
mov
repz
dec
repz
mov
popf
movsl
aaa
xor
clc
arpl
lods
dec
xchg
clc
pop
cld
cmp
xchg
loopne
fbstp
mov
iret
das
clc
push
mov
les
rcll
pop
daa
dec
push
add
pushf
jle
decb
jmp
or
sbb
out
mov
pop
dec
mov
sbb
inc
gs
dec
das
inc
mov
fnsave
test
push
mov
xor
add
test
and
fbld
sbb
fwait
or
add
bswap
mov
pop
xor
pop
dec
add
mov
pop
mov
push
jl
sbb
testb
cmp
adc
dec
fsubl
call
push
pop
mov
mov
push
dec
xlat
test
cltd
mov
push
adc
dec
pop
loopne
test
ret
in
and
or
jae
leave
mov
and
dec
inc
mov
add
popl
insb
jecxz
mov
push
js
rclb
sbb
call
out
mov
xor
pop
sub
pop
roll
and
fucomp
addb
sub
sarl
jecxz
add
fnstenv
inc
sub
je
dec
aas
test
call
mov
pusha
inc
jmp
insb
push
popa
int
xchg
out
stos
imul
je
cmp
jnp
aam
icebp
aas
pop
mov
inc
jo
loop
and
and
or
dec
mov
cmpsb
imul
pop
aad
jb
mov
out
sbb
mov
scas
ds
add
scas
push
xor
jp
and
lahf
std
imul
test
cmpsl
and
mov
ja
js
mov
fs
hlt
fs
mov
xchg
or
scas
insb
jmp
hlt
and
fisubs
or
sbb
mov
dec
into
jge
dec
mov
hlt
dec
cmp
cmp
and
outsl
jnp
mov
sub
mov
loope
jg
mov
dec
xchg
outsl
xchg
mov
xor
aas
jmp
ds
imul
push
fwait
jns
idivb
sub
js
aas
cmp
xlat
jbe
test
push
lock
inc
lock
sub
add
pop
lret
dec
cmp
xor
cmpl
and
jge
iret
dec
jecxz
xor
es
pop
cltd
call
idivl
xor
mov
into
das
cmc
or
mov
push
aas
xor
aas
pop
adc
call
les
lcall
pop
mov
cwtl
addl
adc
push
mov
stos
add
imul
lcall
mov
addb
mov
es
xchg
lods
xchg
jo
mov
cld
int
stos
js
and
cmpsb
push
mov
or
outsl
scas
and
int
std
icebp
lahf
cltd
adc
arpl
nop/reserved
jg
jb
orb
xor
cwtl
test
fcomi
sub
fs
or
add
loop
adc
xchg
or
jle
jno
jne
or
jnp
enter
orl
cwtl
stc
xor
gs
jmp
call
sbb
fistpl
fisttpll
pop
xchg
fstpl
and
mov
xor
xor
mov
shll
mov
or
inc
cltd
add
mov
aam
mov
xchg
sti
std
jle
icebp
cmp
xchg
mov
ret
add
mov
out
xlat
popf
inc
lods
push
outsl
cmp
dec
pusha
scas
sbb
cmpsb
xor
and
adc
lret
test
sub
push
push
nop
in
stos
icebp
cmp
inc
popa
mov
popa
aam
inc
pop
push
xchg
and
and
inc
lds
or
pushf
xchg
xor
hlt
cmp
pop
push
sbb
mov
sub
push
popa
inc
inc
mov
shlb
movsb
jecxz
sub
xorl
lret
rcll
and
ficoms
pop
in
mov
frstor
repnz
and
dec
pop
arpl
sub
inc
pop
jb
fcmovbe
jno
rclb
push
sub
or
or
arpl
mov
sub
daa
out
add
out
xor
adc
inc
inc
or
and
mov
lods
clc
push
mov
mov
mov
movl
lret
cltd
push
test
out
ret
inc
in
enter
and
lock
jne
mov
jo
dec
xor
push
jno
and
mov
stos
push
lods
aaa
sub
cltd
scas
sti
sub
pop
pushf
cmp
lods
repz
jnp
enter
push
mov
cwtl
pushl
adc
inc
sub
std
mov
iret
addb
les
sub
push
out
cmp
inc
pop
rorb
ret
mov
or
or
gs
sub
add
stos
popa
adcb
mov
sub
jo
mulb
popa
lds
dec
sbb
xchg
adc
idivl
lret
jp
xchg
xor
xor
jl
into
inc
imul
lods
rcll
jmp
loope
call
dec
push
and
xlat
ret
pusha
pop
add
das
xor
rcrb
jnp
cmp
stos
inc
movups
xchg
mov
das
push
ficoms
add
sbb
fiadds
or
and
sbb
pop
in
dec
sub
enter
or
push
ss
sub
loope
or
lcall
inc
xchg
mull
popf
daa
push
mov
lods
fs
arpl
shll
leave
arpl
repz
add
pop
jne
mov
stos
mov
mov
push
out
lcall
sub
shl
sbb
jnp
shrb
lods
dec
cmp
movsb
shrl
ja
mov
jg
stc
loopne
std
imul
pop
cmpsl
add
xor
in
les
adc
in
and
ljmp
sbb
cs
filds
scas
jo
mov
lea
push
add
outsl
repnz
scas
movsl
pop
daa
cmp
addr16
mov
jne
jo
push
mov
mov
or
in
pop
push
repz
popa
daa
xchg
xchg
jg
mov
xchg
repnz
outsb
sbb
inc
jne
call
jg
test
cmp
les
fisttpll
fwait
push
pushf
dec
out
xor
xchg
iret
inc
sti
into
outsl
push
int3
test
or
addr16
in
push
sbb
sahf
adc
scas
push
lods
repz
std
mov
loopne
add
lret
mov
push
fists
pop
mov
dec
mov
mov
jnp
cmc
push
sub
scas
aam
inc
es
jb
aas
ret
jne
ds
jmp
ljmp
pop
xchg
xor
fnstenv
jl
xchg
xchg
push
pop
cld
push
mov
loopne
cmc
mov
lock
pop
in
roll
cmpl
out
das
sbb
sub
lret
fldl
dec
or
jnp
xchg
sub
xor
ret
or
pop
scas
jno
mov
mov
pop
or
pop
jecxz
sub
rclb
ds
jg
sahf
pop
cmp
aad
sbb
dec
inc
cs
pusha
fnstcw
jnp
loope
sahf
out
push
mov
add
aaa
dec
sub
sbb
inc
inc
hlt
cmp
ret
and
push
or
mov
rcrl
nop
stos
xlat
xchg
rorl
push
gs
sub
pop
inc
in
cmpsb
sbb
sbb
pushf
lahf
mov
lahf
mov
inc
pop
insb
sahf
out
stos
outsl
pushf
shlb
out
addr16
dec
imul
inc
xor
repz
stos
mov
js
mov
icebp
cmpl
ret
jge
jge
in
push
fstpt
jno
xchg
std
sub
push
out
jne
and
xchg
fld
inc
mov
clc
out
lret
movsb
sbb
sbb
stc
mov
inc
add
pop
sbb
pop
adc
outsl
sbb
push
rorb
xchg
sarl
aam
adc
rorb
leave
dec
popa
xchg
iret
ja
cli
mov
sbb
push
inc
scas
cmp
addr16
cli
loopne
inc
arpl
testb
daa
outsb
out
dec
leave
sahf
mov
cmp
pusha
sub
repnz
subb
mov
add
cmpsl
xchg
inc
aaa
sahf
mov
cmpsl
or
aad
sub
adc
ja
orl
imul
ret
test
xor
test
cmp
sarb
out
push
sub
dec
add
xchg
jno
cld
pop
je
sub
mov
aaa
mulb
ds
pop
jmp
jge
iret
adc
andb
call
push
ret
or
lock
aam
in
ds
and
sar
lret
sub
pop
mov
add
mov
lahf
daa
sub
cwtl
pop
mov
es
insb
fcoml
scas
in
sbb
stc
fdivrl
lret
popf
scas
mov
cmp
shrb
mov
ja
and
cwtl
mov
andb
decb
iret
xchg
inc
in
arpl
cltd
pop
and
fcoml
popf
push
or
not
iret
jnp
jns
mov
mov
out
sbb
fmull
shll
xor
cld
xor
jbe
loope
lcall
jnp
fildl
xchg
int
fisttpll
cltd
into
mov
es
in
or
sbb
out
bound
rorb
add
mov
pop
aad
fs
inc
jnp
jecxz
push
cmp
testb
rcr
stos
pop
xlat
addl
cmc
xor
or
dec
mov
lea
fdivs
mov
xchg
jmp
and
cmc
andb
sbb
sahf
xchg
push
jecxz
aaa
cmp
cmpsb
lds
inc
fldt
leave
loop
xchg
adc
adc
je
ficomps
dec
shlb
popa
icebp
ret
inc
add
mov
mov
les
pop
out
rorl
out
push
jl
call
cmpl
push
loope
pop
cmp
es
sbb
cmc
dec
data16
xlat
mov
push
lock
dec
das
dec
mov
xchg
fcoms
mov
in
or
add
cmp
mov
mov
adc
insl
dec
mov
lret
cmp
arpl
mov
lock
cmp
cmp
int3
sub
mov
insl
fdivs
xchg
mov
sarl
cwtl
cwtl
jae
mov
insl
into
add
push
mov
inc
cmp
sbb
sbb
fs
jge
mov
ret
pushf
adc
fdivrl
fiadds
push
loop
sar
hlt
and
mov
gs
adc
pop
push
mov
mov
fwait
mov
jecxz
mov
jp
lret
das
call
out
add
sbb
fnsave
pop
cmp
cmp
imul
aad
sub
daa
mov
push
and
dec
hlt
xor
adc
imul
push
rclb
mov
hlt
ja
outsl
or
fwait
nop
gs
pop
jns
add
in
pop
ljmp
cwtl
cmp
shll
or
out
aam
jmp
pop
add
aad
push
jns
xor
roll
pop
sub
imul
mov
ss
and
loope
mov
push
adc
movsl
or
sbb
cmp
or
outsb
cmpsb
mov
dec
adcl
and
cld
scas
idivl
xchg
lods
adc
iret
jp
inc
add
clc
sub
test
jp
jl
test
pop
in
repz
push
jno
fidivrs
mov
cmc
scas
push
or
aaa
fnstcw
add
and
sbb
cmp
inc
es
mov
rcl
out
pop
and
xorl
xor
int
dec
xlat
inc
sahf
push
out
movsb
ss
call
jle
imul
pop
in
clc
es
mov
mov
sub
pusha
sub
ja
shrb
mov
mov
stc
add
jo
cmp
sbb
jnp
icebp
sub
xor
mov
fdivrs
sbb
aaa
jp
jae
inc
lahf
gs
cltd
mov
cmpb
lahf
mov
subl
sub
insl
mov
inc
imul
fildl
sub
mov
ss
repz
fwait
imul
and
cs
inc
fwait
popa
xchg
jb
pop
jg
outsb
mov
mov
stos
jmp
dec
test
in
sub
add
cmc
iret
test
add
pinsrw
out
orb
ds
dec
inc
fldl
pop
pop
xchg
gs
pop
hlt
jge
movsb
iret
jmp
iret
btc
ja
loop
aas
popf
bound
cmp
and
xor
mov
xlat
call
push
fs
jne
aam
or
pop
in
xchg
pop
negb
enter
and
sub
cmp
shl
jecxz
repz
and
aas
movsb
cmp
mov
adc
push
call
push
stc
sub
lret
fucompp
xchg
pop
jne
adc
mov
jne
sub
add
mov
push
and
sbb
pushf
out
cs
in
outsb
rorb
jge
mov
mov
in
mov
inc
es
fnclex
xchg
sub
or
out
mov
xor
jmp
cmpsb
shrl
pushf
push
and
lret
icebp
into
and
dec
add
jbe
mov
jnp
js
cmp
push
jg
rcll
lret
in
sbb
shrb
cmp
imul
push
fisubrs
out
mov
fdivrs
in
sub
dec
dec
mov
arpl
jae
stos
pop
inc
jge
adc
sahf
rcr
push
push
push
xchg
daa
dec
ds
aad
cmc
stos
push
and
push
daa
idivb
ret
imul
cmp
js
pop
mov
dec
pop
dec
jno
nop
cmp
pop
fwait
mov
cld
loopne
ret
out
jmp
orb
inc
leave
lcall
mov
inc
mov
xor
int
mov
mov
xchg
lcall
lret
out
add
xor
sbb
enter
test
xchg
push
pop
push
lahf
js
nop
xchg
add
ret
xchg
and
adc
push
and
mov
pop
jmp
call
mov
cld
aad
push
add
out
mov
repnz
addr16
mov
mov
or
adc
popf
xlat
jno
jb
aas
xchg
insb
inc
cltd
pop
jl
outsb
push
mov
xchg
imul
pusha
mov
out
rorb
sbb
ret
inc
call
jg
iret
dec
mov
xchg
adc
lret
outsb
test
mov
lret
paddw
push
daa
inc
int
push
sahf
push
sbb
lods
jge
data16
ficoml
add
fistpl
dec
push
jb
iret
clc
dec
cmpsl
push
jnp
popa
adc
test
shrb
pop
jecxz
xchg
cmp
inc
fnstenv
rorl
and
push
inc
xchg
sarl
adc
cwtl
xchg
xchg
xor
and
insb
lahf
lds
pushl
je
daa
fsubrp
imul
out
sbb
cmp
pop
xor
xchg
popa
pop
pusha
inc
sbb
mov
clc
shlb
jmp
scas
jo
fwait
or
mov
push
cmc
test
mov
cld
lods
push
stc
dec
push
jbe
xor
ret
jecxz
push
dec
jge
arpl
xor
sti
mov
mov
lahf
sbb
enter
call
fdivrs
aaa
adc
cs
mov
and
sbb
leave
data16
push
lret
dec
or
lods
sub
cltd
out
adc
mov
insl
fmuls
fs
cmc
pop
test
bound
sub
mull
adc
sbb
ret
cmp
ja
out
aas
xor
flds
xchg
and
lock
lcall
fisttpll
stc
cld
add
cmp
mov
cs
cmc
das
sub
insb
aaa
les
cltd
popa
add
pop
stos
xor
lahf
lret
imul
jne
iret
xor
stc
add
out
js
lret
inc
cli
enter
fisubs
add
add
out
mov
cld
daa
cwtl
loop
cmp
xchg
mov
stos
imull
cld
mov
sub
pop
inc
rcl
imul
in
and
or
or
in
aad
mov
lods
aaa
push
cmp
cmc
jae
stos
out
push
dec
xchg
pop
sub
lret
stos
outsl
mov
mov
mov
jp
sbb
cmp
ds
es
lea
ficoms
dec
std
sbb
mov
test
jnp
push
mov
mov
sub
add
push
fnsave
std
loop
cli
or
pusha
aas
push
xchg
bound
mov
dec
out
or
stos
iret
sub
sti
lahf
scas
sub
cli
push
or
repz
loop
mov
jno
sub
std
jmp
fistpll
pop
add
pop
out
mov
xchg
push
arpl
mov
push
sub
add
push
inc
mov
das
and
mov
add
mov
in
notb
es
sub
aaa
scas
cmpsl
jl
stc
rcl
pop
imul
in
fs
xchg
pop
jmp
outsl
cmp
dec
js
jno
mov
xor
into
in
loop
cmp
or
aam
mov
xchg
cwtl
aas
inc
sub
sbb
fmul
sti
lret
sub
mov
loope
ja
mov
inc
int3
pop
push
in
and
pop
inc
inc
pop
xor
push
das
and
push
push
mov
mov
mov
test
ljmp
and
repz
cmp
xchg
fs
idivb
dec
pop
pop
mov
jge
jbe
sbb
mov
xor
add
shrl
pop
mov
scas
repnz
loop
add
lods
popf
in
lret
sub
pusha
jge
in
dec
lret
stc
pop
dec
stc
sub
dec
or
outsb
push
outsl
push
jg
lret
or
in
sub
mov
test
bound
mov
push
cmp
or
add
scas
mov
or
subb
mov
insl
aad
jl
sahf
push
mov
jle
outsl
cld
push
test
inc
adc
fs
incl
test
pop
test
push
lret
and
xchg
xor
fiadds
sub
cmp
pop
popa
or
cmp
out
int3
icebp
repz
lock
decl
push
jl
gs
insl
hlt
mov
jns
pop
dec
pop
into
bound
cmp
lcall
fdivr
in
test
data16
test
pop
dec
into
ljmp
dec
jle
or
push
outsb
xchg
clc
add
xchg
insl
test
das
inc
push
call
fsubl
jecxz
sbb
jno
repz
jp
xorl
daa
shll
mov
idivb
popa
icebp
not
xchg
cmp
jbe
bound
fcomps
pop
sbb
jmp
adcb
jl
je
mov
fidivs
or
xchg
cmp
frstor
mov
movsl
mov
pop
push
data16
clc
stc
cmp
fimuls
imul
mov
dec
push
mov
pop
sbb
pop
push
cmp
popf
lret
ja
push
and
into
inc
jo
add
dec
jne
adc
gs
les
lock
mov
fadds
out
repz
into
dec
dec
cmp
sub
mov
nop
pop
jge
xor
mov
or
and
xchg
cmp
int3
dec
push
ret
adc
xor
dec
xor
daa
push
fsub
mov
add
rcrb
sbb
mov
and
std
add
addl
out
sahf
mov
mov
or
mov
lods
xchg
fistpl
in
mov
movsl
adc
idivl
dec
xchg
pop
xor
mov
clc
scas
in
iret
xor
jnp
outsb
lret
out
movsl
push
dec
cld
adc
lret
cmpsb
cli
adc
cmp
xor
pop
sbb
rorl
cmp
sahf
out
std
adc
rcr
inc
rclb
mov
call
je
icebp
enter
sub
and
mov
lret
jge
bound
and
push
sarb
aas
aam
push
xchg
cmpsb
out
xchg
cmc
mov
add
mov
rcrl
sbb
call
lret
ror
pop
add
xchg
dec
dec
ja
xlat
out
add
aad
mov
jno
or
pushl
add
adc
and
incb
cmp
data16
movaps
into
jno
inc
mov
mov
aas
mov
xor
lret
push
lcall
cmp
in
jl
and
and
sbb
das
pop
xor
aad
pushf
pop
inc
test
addr16
pop
lahf
fwait
pusha
inc
div
and
sbb
jae
daa
push
cmpsb
mov
out
push
inc
je
jb
cmpl
shlb
pop
push
mov
fs
loope
scas
subb
push
adc
push
movsb
fisttps
sbbl
out
imul
mov
sub
push
push
popa
aaa
jnp
jmp
cwtl
pop
add
push
movsb
jo
mov
cmc
fbstp
iret
mov
mov
fsubrs
or
enter
repnz
jecxz
mov
xchg
data16
adc
in
out
int3
or
dec
icebp
and
sub
sbb
xor
sbb
lcall
daa
test
dec
out
loop
out
sbb
inc
pop
push
je
dec
popl
cld
push
inc
sbb
pop
push
jno
mov
inc
sbb
xchg
daa
into
mov
inc
cmp
pop
push
iret
stos
pop
insb
ss
mov
cmp
dec
cs
xor
insb
cmovns
push
jecxz
sti
out
scas
pop
fisttps
sub
xchg
aaa
and
ds
movsb
push
repnz
adc
sbb
or
pop
add
jne
or
cmc
mov
lea
clc
push
movsl
push
js
pop
fidivl
jbe
inc
cmp
addr16
arpl
sub
out
cmpsl
pop
dec
fidivs
sbb
ljmp
lock
add
das
cwtl
mov
cmp
mov
fsts
ja
cmp
mov
cmp
xchg
inc
daa
mov
pushf
jle
mov
out
aaa
test
daa
icebp
xchg
xlat
pop
jnp
push
mov
xchg
jnp
idivl
xchg
scas
jb
jns
into
pavgb
cld
cli
cmp
jno
scas
lods
loope
loopne
movsl
shrl
fwait
or
sub
lea
aam
push
sbb
dec
xor
mov
xor
cmp
mov
mov
repnz
xchg
sbb
popf
xchg
sub
popf
paddw
jae
test
call
xlat
mov
subb
in
pop
repz
jecxz
xor
lret
xorl
loope
ret
es
jbe
mov
leave
mull
cmp
mov
cltd
lret
sar
cld
insb
pop
or
adc
ja
arpl
mov
in
push
cwtl
add
mov
insb
or
add
xor
stos
adc
cs
inc
scas
xsha1
cmpsb
leave
xchg
add
outsl
inc
mov
inc
pusha
sahf
and
lcall
leave
dec
xor
test
dec
push
aas
jnp
mov
outsb
pop
dec
jne,pn
sub
rcr
ss
sbb
cmp
pop
and
mov
es
call
mov
pop
outsl
pop
pop
inc
aad
das
lahf
ucomiss
adc
cs
add
daa
inc
mov
xchg
sbb
adc
or
rcr
lds
xchg
adcb
loop
cmp
fsubrs
mov
mov
xchg
jmp
mov
mov
mov
pop
push
sbb
call
push
dec
adc
mov
push
jmp
pop
adcb
pop
or
test
cmp
outsb
imul
pop
sub
js
mov
sbbb
outsl
fwait
mov
out
mov
stc
vcvtss2si
pop
stos
cmp
or
push
adc
cld
mov
cmpsb
in
xor
add
add
cld
jo
scas
mov
sahf
enter
and
jne
xchg
stc
mov
les
ficompl
pop
mov
xchg
push
bound
sub
sbb
xor
jp
mov
sub
pop
or
push
inc
fstl
fs
aad
repz
test
mov
cli
sub
push
test
stc
and
and
mov
push
cs
movsl
xchg
xor
and
jg
sbb
pop
out
sbb
iret
jmp
lea
xchg
and
nop
sub
adc
adc
adc
cs
pop
ds
mov
jle
and
mov
leave
cmp
sbb
sub
loope
adc
fs
imul
inc
or
mov
push
mov
sahf
jae
mov
ret
neg
and
mov
shl
sbb
or
mov
jg
icebp
out
mov
call
mov
outsl
add
scas
or
movsb
xchg
xor
add
loopne
outsl
aas
std
dec
xchg
adc
ljmp
mov
xchg
jae
test
or
aad
pop
xor
hlt
or
inc
shrl
or
movsb
push
faddl
mov
movsb
lds
lret
nop
pop
pop
and
scas
dec
cs
popa
subl
shl
cmp
xchg
xchg
jns
sbb
popa
cltd
add
fnstsw
sbb
jae
push
inc
movsl
mov
movsl
inc
cmp
cmp
sti
pop
add
dec
arpl
pop
lret
insb
xchg
pop
bound
mov
push
xchg
pop
je
cmc
in
add
sub
jb
mov
cld
sub
aaa
les
fdivrs
add
cmp
in
push
out
syscall
scas
fcmovnu
xchg
mov
stos
je
push
mov
int
das
ret
aad
sbb
dec
rcl
and
daa
stc
adc
jmp
fdivl
mov
in
rcrb
lret
filds
pop
pop
int3
adc
lods
inc
rorl
and
and
mov
test
cmp
jp
dec
mov
or
pop
dec
xor
pop
add
jl
cs
push
pop
add
push
movsb
add
int3
sbb
xchg
mov
sbb
jno
push
inc
test
pop
arpl
fbstp
xchg
test
cmp
adc
push
push
daa
insl
or
in
and
pop
aad
xchg
dec
jge
dec
xchg
cmpb
and
cld
fildll
fucompp
jae
mov
jg
ja
and
or
icebp
loop
popa
lods
outsl
add
dec
push
xchg
hlt
sbb
inc
mov
orl
add
aas
jmp
adc
mov
mov
mov
sub
mov
adc
push
jl
pop
mov
pop
push
lahf
inc
sub
cmpsb
push
add
mov
cwtl
mov
icebp
mov
stos
ljmp
call
dec
jg
inc
movsb
je,pn
nop
push
fs
subb
popa
jge
dec
xchg
xchg
pop
add
sub
xor
movsb
pop
mov
dec
sub
lret
xchg
sub
scas
popf
xchg
xchg
add
or
or
sub
imul
aam
dec
js
lcall
loopne
outsl
push
jne
inc
fsub
or
int3
pop
leave
test
test
gs
les
pop
pop
push
stc
fnstenv
inc
mov
lahf
xor
push
add
mov
mov
shrl
sub
data16
jge
scas
mov
cmpsl
cmp
sub
lds
jecxz
inc
inc
in
adc
add
clc
mov
lret
jg
pop
scas
call
clc
insl
cmpsl
sahf
add
mov
pushf
idivb
aam
ds
mov
scas
adc
int
pushf
push
xor
ret
pusha
inc
mov
fldenv
jg
or
adc
add
xchg
leave
ss
cmpsl
mov
mov
pop
insl
iret
mov
sbb
ljmp
fildll
xchg
push
cmpsb
bound
loopne
mov
push
xchg
sub
iret
outsl
push
jle
mov
push
or
and
test
pop
dec
pop
mov
or
push
sbb
jle
push
or
mov
sub
and
iret
sub
das
test
pop
sub
dec
or
out
iret
stos
shrb
pushf
jnp
loope
adc
sub
dec
fldt
mov
xchg
mov
popf
and
xlat
jbe
dec
sub
add
aam
jmp
inc
sbb
adc
adc
rcrl
ja
mov
mov
and
mov
xor
pop
or
jbe
loope
int3
mov
ljmp
gs
shll
add
adc
mov
outsb
push
mov
repz
xchg
sahf
pushf
hlt
inc
jne
xchg
pop
call
out
fcompl
je
xor
jp
jmp
push
mov
jns
mov
insl
sub
jmp
fcompl
pop
jmp
jle
hlt
mov
xor
aas
aaa
push
push
pop
test
pop
pop
std
xor
xlat
sbb
cld
jns
ljmp
jge
int
sbb
fdivr
outsb
dec
jns
inc
mov
insb
addr16
loopne
sbbl
data16
cmp
push
xlat
roll
ret
sbb
test
rcll
mov
stc
loop
mov
cwtl
inc
or
aam
jbe
jle
bnd
rcrl
fbld
push
test
shl
add
sti
mov
sbb
jmp
sub
sarl
push
xorb
aad
push
add
mov
and
pusha
cmpsl
scas
xor
inc
mov
mov
fdivl
leave
xchg
int3
mov
ljmp
popa
insl
push
push
xchg
in
mov
call
push
orb
or
dec
repnz
aad
jne
shl
mov
add
xchg
lret
pop
sahf
add
mov
insl
arpl
ja
repnz
adc
stos
mov
sti
sbb
inc
fldt
adc
push
pop
sahf
outsb
in
loop
xchg
lcall
pop
xchg
mov
sbb
jb
cmp
ljmp
xor
cmp
xchg
jle
jl
sub
sbb
imul
pop
gs
push
fidivrs
testb
push
out
mov
test
fimuls
jge
pop
adc
mov
mov
add
xchg
cmpl
out
push
out
pop
mov
fwait
add
enter
fwait
std
dec
out
mov
fldt
in
in
lds
jae
fdivrs
ja
fsubs
pop
mov
cwtl
adc
jno
gs
mov
testb
iret
push
jo
cmc
xchg
or
test
lods
outsb
jle
dec
or
and
adc
lds
and
xchg
loop
out
push
ret
add
jno
push
inc
test
fs
push
and
jl
roll
sbb
dec
cmpsb
mov
inc
xchg
enter
mov
jmp
xlat
iret
and
arpl
out
xor
lcall
sbb
or
or
icebp
cmpsb
adc
mov
aas
jns
and
xor
daa
xchg
rolb
loope
jge
outsl
sti
mov
fcom
cmp
xchg
sbb
int
popf
ss
iret
xchg
add
aam
in
pop
xor
pop
cltd
sub
inc
pop
adc
mov
and
ret
pop
inc
jno
das
mov
push
jnp
mov
in
iret
loope
mov
mov
aad
or
int
xor
xchg
in
mov
fsubrl
and
jmp
insb
pop
or
fsub
stos
test
xor
sbb
and
pop
cmp
add
stc
adc
into
and
push
out
js
push
lock
adc
adc
test
data16
mov
cli
mov
jge
iret
xchg
lds
xchg
cltd
adc
lcall
pop
fmul
jns
cmp
insb
gs
push
and
cmp
rorb
icebp
add
in
insb
pop
cmpsl
std
ficoml
insl
shrl
xor
push
shll
pop
adc
mov
mov
lahf
mov
xor
sub
jb
jmp
fnstenv
sub
cld
mov
xor
mov
mov
loope
fwait
loopne
and
out
xor
add
stos
ljmpw
lret
shl
mov
sbb
fisubs
repnz
sbb
imul
pushl
sahf
cmp
data16
xor
sub
mov
xorw
sti
push
push
test
imul
mov
inc
pop
lret
scas
js
xchg
addr16
bound
xchg
cmp
lcall
js
add
mov
sti
iret
and
fsubs
outsl
push
add
jl
mov
push
movsl
mov
decb
push
repnz
and
cltd
cmpsb
lahf
in
mov
fwait
mov
stc
add
pop
pusha
xchg
loop
mov
lret
sub
inc
stc
aas
sbb
loopne
inc
mov
out
sarl
ds
cmpsl
insb
cmc
dec
int3
xor
in
pop
fsubp
fidivl
popf
loopne
aam
cmp
pop
repz
nop
bnd
jb
cmp
xor
negb
popf
mov
stc
jecxz
fistpl
cmpsl
jl
push
scas
xor
dec
icebp
or
mov
and
in
cmc
or
scas
cld
lds
dec
and
mov
aas
xor
movsl
test
mov
dec
jnp
dec
fwait
jne
xchg
imul
jmp
bound
call
test
xor
ss
mov
dec
stc
stos
pop
stos
into
mov
and
loop
push
mov
stos
or
adc
push
or
arpl
in
dec
outsb
push
lock
lods
fwait
decb
cmpsl
adc
sbb
jecxz
sahf
vphadddq
mov
push
scas
shrl
or
cmp
popf
mov
xchg
in
cmp
test
ljmp
stos
es
push
mov
jo
mov
pop
out
sahf
sbb
inc
cld
rcrb
pop
pop
mov
pushl
push
rol
hlt
jge
jle
sbb
inc
jns
pop
in
sbb
lods
rclb
std
and
cmpsb
jle
cld
stos
mov
in
adc
mov
xor
pushf
adc
mov
popf
cmc
adc
imul
rolb
jmp
test
adcl
aas
cmpsl
stos
push
ja
mov
fcos
fidivs
popa
arpl
in
sbb
test
lock
push
push
jb
sub
xor
jnp
adc
stos
mov
inc
loope
xor
pop
mov
inc
mov
push
jle
loope
stc
mov
hlt
pop
loopne
out
test
adc
rcrb
add
pop
xor
stc
aas
or
lods
mov
scas
popa
ljmp
sbb
adc
rorb
pushf
ja
adc
cli
and
rcll
pop
test
inc
add
push
jno
push
int
cs
sub
das
in
in
dec
sbb
scas
adc
mov
outsl
orl
xor
sahf
fcmove
and
add
mov
add
xchg
popa
cmp
fmulp
push
pop
or
imull
dec
mov
daa
movsb
adc
cmp
arpl
add
dec
and
cld
add
and
movsl
es
lcall
mov
jbe
std
loop
jl
mov
pop
inc
and
test
lods
push
sbb
mov
mov
push
pop
insl
sarb
inc
and
add
ss
or
and
pop
std
stos
add
mov
jmp
mov
add
adcb
mov
pop
pushf
lds
or
ljmp
inc
push
mov
dec
popf
pop
fdivrp
add
pushf
mov
ret
sub
mov
mov
mov
es
dec
in
fsubl
mov
ja
pusha
sub
fnstenvs
loop
aaa
or
mov
mov
add
dec
testb
xlat
sub
push
add
lods
dec
push
jb
jecxz
pop
dec
xchg
shlb
mov
sub
mov
xchg
jno
out
mov
pop
fiaddl
jecxz
outsb
or
in
scas
scas
sub
push
xchg
inc
lahf
int
or
fbstp
daa
sbb
sti
mov
add
jmp
mov
arpl
jl
jns
mov
cmpsb
add
loopne
mov
in
push
push
pop
or
pop
xchg
or
add
sub
mov
rcrl
inc
bound
arpl
xlat
or
mov
mov
loope
lods
cmp
ljmp
mov
push
cvtps2pd
cmc
pop
lds
xor
cmp
sub
fisubs
pushf
push
insl
or
loopne
push
pop
into
addb
int3
cmpsl
add
fs
cmpsb
fnclex
aaa
mov
std
movsb
mov
inc
xchg
shll
incl
push
dec
lods
cld
push
leave
and
xlat
arpl
inc
pop
scas
xchg
repnz
out
imul
pop
gs
movsb
mov
sbb
lret
push
xchg
les
mov
loopne
lret
jg
mov
pop
cmp
lock
dec
adc
in
cmpsl
arpl
push
dec
shl
pop
es
in
repnz
shl
sub
inc
jl
inc
push
push
and
pop
and
mov
insl
ret
fs
in
mov
and
xchg
dec
and
test
pop
clc
cmpsl
out
add
aad
sbb
dec
sbb
aas
or
add
adc
insb
push
mov
out
or
adc
rolb
fisubs
rol
cmp
xchg
or
mov
jecxz
push
pop
pop
mov
sbb
scas
inc
testl
mov
test
mov
int3
add
ret
inc
nop
aam
cli
lret
cmpsb
stos
dec
stos
idivl
dec
jb
lods
data16
push
push
or
xchg
lcall
cmp
dec
jnp
push
inc
fstl
enter
xchg
sub
and
add
inc
mov
and
arpl
lods
sbb
mov
jnp
mov
adc
xor
insb
ds
mov
fidivl
lret
push
loope
lock
gs
lock
outsb
into
push
jae
cmc
popa
mov
fadds
dec
cmp
clc
fstpt
hlt
push
pop
aaa
push
mov
aad
pusha
mov
fwait
xchg
mov
sub
dec
xchg
xorb
popa
bound
lock
in
mov
es
or
ficoms
dec
mov
lret
sbb
dec
xchg
into
lahf
fdivl
xchg
xchg
xchg
repz
cwtl
mov
jne
xchg
add
lea
sub
addr16
vpsraw
mov
adc
mov
inc
jle
or
or
lcall
mov
push
jmp
inc
cmp
lcall
out
push
or
movsb
shlb
cmp
push
out
xor
adc
sbb
in
gs
inc
mov
int3
push
sbb
pop
sbb
push
cmp
mov
xchg
mov
mov
or
movsb
sbb
mov
enter
movsb
leave
dec
cmp
into
outsb
std
lcall
cmp
xor
pop
add
cmpsl
in
mov
inc
mov
mov
movq
loop
iret
dec
gs
push
jmp
jmp
arpl
shl
cli
push
mov
add
ret
outsl
je
xchg
sub
mov
pop
das
imul
rcll
cld
adc
xchg
inc
int
pop
lock
js
into
add
je
and
fsubp
and
aaa
and
lahf
inc
fidivrs
inc
inc
mov
inc
repz
repz
cmp
mov
stc
sbb
dec
scas
and
cltd
jo
push
test
and
sbb
dec
dec
adc
or
das
mov
mov
dec
add
sarl
ds
xlat
les
dec
pop
mov
sub
lea
les
aaa
stos
repnz
sbb
pop
cwtl
mov
pushf
das
out
loopne
popa
fwait
and
pop
fiadds
enter
sub
sub
cmpxchg
outsb
das
push
mov
xchg
pop
call
adc
setp
xchg
into
iret
cmp
iret
inc
cmp
cwtl
xchg
insb
add
add
push
cltd
fcmove
push
cmc
loop
lods
cmp
in
or
cmpb
jecxz
jne
sbb
adc
cmp
jg
out
sbb
aaa
clc
push
cwtl
mov
pushf
test
ja
cmp
into
push
sahf
push
cli
push
fwait
mov
fisubrs
into
aaa
cld
xchg
xor
mov
sbb
aad
cmp
in
test
xchg
fistl
or
sbbl
ljmp
jecxz
xchg
shr
fsubr
iret
push
popa
sahf
cmp
loop,pt
push
mov
xor
mov
test
shrl
sub
cmp
int3
jl
aaa
pushf
aas
fisttpll
sarl
iret
sbb
push
lcall
push
mov
in
mov
mov
aad
div
insb
sarb
out
xchg
sub
inc
or
push
pop
adc
dec
sub
cmp
mov
pop
mov
lret
loope
dec
arpl
inc
dec
rorl
into
push
imul
sub
pop
adc
paddusw
sahf
sbb
aam
push
cmp
cmpsb
add
stos
imul
jmp
loopne
inc
int
inc
ds
pushf
int3
cmp
and
or
xorl
repnz
gs
dec
das
or
mov
dec
fistpll
xchg
imul
adc
stos
std
popf
push
pop
hlt
sti
inc
outsb
dec
enter
xchg
jl
dec
xorb
mov
and
out
sbb
or
inc
vpaddusw
test
mov
xor
push
pop
pop
lea
push
mov
enter
imul
or
mov
pop
pop
repz
fwait
insb
pop
leave
call
repz
movaps
nop
ja
es
add
loopne
xchg
pop
jb
pop
pop
jge
mov
ficoms
jo
in
sub
dec
nop
insl
xchg
push
outsb
in
js
cmp
scas
inc
cmp
fcompl
inc
jo
push
into
and
mov
mov
mov
inc
lret
and
enter
jecxz
mov
lret
repnz
xor
push
leave
cmpsl
cmpsb
notb
inc
jmp
push
jl
scas
faddl
sbb
sub
aaa
js
push
xlat
sub
pop
mov
rcrb
insb
in
dec
sbb
daa
repnz
push
aad
cli
and
and
popf
jecxz
fbstp
sahf
hlt
insl
mov
cmp
sub
mov
orl
test
adcl
orl
jmp
mov
xchg
add
mov
ljmp
scas
adc
out
mov
repz
cmp
ret
arpl
and
pop
loope
test
mov
cmc
fisttpll
adc
jecxz
inc
aam
adc
sarb
lret
jne
jecxz
jp
inc
arpl
xchg
adc
imul
xchg
aad
in
icebp
mov
cmovne
rcl
mov
fimuls
adc
stos
mov
icebp
testl
pop
pop
icebp
xor
lret
xchg
mov
pop
out
pop
lret
loop
insb
or
or
adc
inc
mov
add
lods
cmp
sbb
sub
pop
es
or
lea
jl
dec
xchg
cwtl
out
call
cwtl
and
sbb
sbb
sti
movsb
loop
fiaddl
cmp
loopne
mov
ja
in
mov
les
mov
xchg
mov
cmp
dec
roll
pusha
jno
scas
sti
xor
xchg
mov
xlat
cmp
imulb
fbld
pop
inc
sbb
cld
leave
clc
mov
mov
test
nop
xchg
decl
mov
int
clc
mov
adc
cmpl
push
inc
xchg
jns
fs
push
cmp
lods
push
rclb
adc
sbb
and
xlat
je
push
jae
xchg
into
or
test
pop
test
fs
mov
mov
mov
fucomp
ljmp
mov
jmp
out
aad
jnp
or
mov
mov
xchg
xchg
adc
aad
mov
test
and
pop
lret
or
cld
jo
ffree
pop
rcrl
test
mov
sbb
repnz
iret
int3
or
shrb
das
mov
or
pop
add
pop
mov
push
in
daa
cmp
data16
pop
jmp
stos
outsl
js
jecxz
adc
dec
les
data16
sbb
pop
inc
lods
jbe
cmp
and
pop
mov
les
push
xchg
sbb
dec
insb
xor
fstpt
xor
int3
mov
jae
xchg
fcomps
jp
movsb
int3
mov
pop
mov
pusha
ljmp
cmp
xchg
inc
pop
mov
cmpsl
andl
adc
mov
aaa
cmp
sarb
call
repnz
and
mov
inc
in
or
dec
test
pop
rcrb
mov
repz
xor
xchg
xchg
loope
jmp
push
pushf
push
and
or
cmc
pop
sub
and
pop
popf
pop
sub
dec
mov
icebp
and
scas
bound
sar
push
mov
push
sub
mov
rolb
sbb
or
add
dec
pusha
mov
into
cmp
add
ficompl
pop
jne
fsubl
je
aad
cmp
sub
adc
sub
sub
iret
inc
adc
lret
fistps
dec
pop
dec
sarb
btrl
cli
mov
sub
and
inc
insl
test
xchg
push
lock
jbe
cbtw
mov
sub
jge
push
or
rcrb
push
in
lods
xchg
dec
in
sbb
xlat
lret
jbe
inc
add
sti
es
cwtl
aaa
and
ret
mov
jb
insl
jbe
mov
jg
or
jp
mov
jae
cmpsl
jo
data16
fisttpl
mov
sti
fisttpl
jle
push
inc
add
shlb
dec
iret
add
cmp
rcrl
aaa
push
mov
ret
fldl
push
pop
loope
loop
gs
lods
in
rcll
testl
jnp
sbb
cmp
roll
pop
and
imul
test
xor
mov
clc
icebp
xchg
add
pop
out
xchg
dec
lret
cmp
cmpsl
test
mov
xchg
xorb
adc
pop
out
mov
notb
sti
push
cld
add
addr16
jbe
mov
cwtl
lret
aad
push
mov
lods
inc
je
sti
inc
adc
cmp
lcall
xchg
pop
in
adc
dec
clc
lahf
imul
or
flds
pushf
mov
mov
es
and
xchg
pcmpgtw
test
loopne
repz
or
xor
enter
sub
in
lcall
pop
test
insl
xchg
sub
mov
push
fistpll
stos
pop
mov
mov
sub
test
int
js
jno
aas
aas
pop
pop
rep
sbb
mov
out
add
sahf
scas
fistpll
mov
xor
aas
mov
sub
stc
fbld
cmp
jo
lods
into
sub
pcmpgtw
in
dec
dec
add
inc
lock
lret
ljmp
fwait
jo
insl
cmp
ret
and
imul
mov
lods
cmpb
push
idiv
mov
sbb
xchg
loope
in
aas
or
jl
js
adc
cmp
es
jecxz
push
and
mov
out
xor
sbb
xor
loope
sub
ret
push
cmpsl
loopne
js
mov
add
mov
es
je
xchg
dec
insb
hlt
lcall
fs
fsts
push
in
sub
sbb
jecxz
pop
test
xorb
mov
ret
shlb
fdivrs
xor
xlat
xchg
loop
loopne
jle
jg
adc
je
push
fwait
scas
testb
in
and
cmp
and
loopne
je
outsb
push
adc
and
cld
pop
aam
enter
xor
add
dec
arpl
les
rclb
inc
hlt
cld
dec
mov
insb
sbb
cli
divb
dec
mov
cmpsl
stos
or
pop
leave
jae
lcall
inc
mov
adc
mov
push
xor
or
fldt
test
nop
daa
xchg
mov
lea
insl
push
inc
lods
ja
clc
xchg
xor
imul
loope
mov
mov
int
stos
mull
lods
fs
inc
stos
arpl
mov
les
push
mov
dec
cmpsb
mov
lahf
push
inc
inc
test
cmpsl
sar
sub
in
lods
pop
inc
xlat
movsb
mov
adc
pushf
jmp
dec
mov
popf
cmp
cmc
movsb
das
aam
and
add
movsl
pop
and
cs
iret
test
inc
addr16
mov
dec
pop
inc
push
lds
adc
icebp
lods
mov
jp
aam
fcoms
push
push
adc
imul
lock
push
and
adc
mov
jmp
in
cmpsl
xor
mov
lods
or
pop
test
fidivl
inc
in
jmp
xchg
adc
jp
cmp
mov
mov
lahf
sarb
scas
leave
push
adc
push
and
and
inc
push
fwait
mov
mov
push
mov
imul
sahf
es
mov
cmp
insl
and
sbb
xor
call
inc
push
jp
roll
push
xor
inc
xor
push
jle
movsb
or
repnz
sub
push
lock
mov
repz
and
xlat
push
clc
xor
pop
push
xchg
sarl
pusha
mov
sti
add
lds
js
xor
pop
fdivrl
subl
loopne
sarl
rcrb
lcall
mov
jg
pop
outsl
lahf
pusha
clc
insl
sub
in
lea
popf
sbb
cld
cmp
cwtl
mov
in
sub
lcall
lea
cmp
mov
mov
sti
mov
out
lods
mov
dec
sbb
and
roll
xchg
ret
sbb
push
sub
mov
jmp
mov
mov
add
test
inc
pop
or
mov
push
xor
cmpsb
hlt
jg
mov
and
cmp
gs
mov
movsb
inc
sub
cmc
cmp
ja
inc
pop
xchg
xchg
dec
fisttpl
ret
movsb
in
jae
sbb
adc
les
xchg
or
enter
dec
in
and
shll
shll
repnz
push
dec
fstl
xlat
push
jge
pop
lret
stc
jae
call
cmp
and
jns,pt
in
and
lahf
jmp
shlb
mov
push
das
in
sbb
inc
insl
inc
mov
add
add
or
xchg
and
das
jb
or
cld
xchg
bnd
push
sub
push
and
pop
mov
adc
rcrb
xchg
out
cmp
jbe
add
testb
aam
loope
cld
shl
lock
cmp
mov
loope
test
aad
gs
popf
push
loop
hlt
xlat
xchg
out
xchg
stos
cmp
adc
mov
int
stos
pushf
iret
leave
sub
js
xchg
and
jno
mov
lahf
push
mov
mov
lret
sub
in
movsb
add
test
jns
psrld
in
mov
xchg
out
inc
and
dec
sarb
push
stos
inc
out
or
pushf
or
fmuls
cld
in
inc
dec
sub
movsb
cs
mov
and
cmpsl
scas
lods
fwait
or
mov
xor
mov
push
dec
jb
jp
or
mov
inc
pop
test
rcll
ret
jmp
subl
jbe
pop
fistpl
mov
mov
popf
or
cwtl
in
add
mov
sub
sbb
jo
rcll
pop
in
pushf
in
mov
xor
pop
or
xchg
push
mov
pop
jns
cs
out
addr16
mov
and
call
xchg
add
inc
stc
cmpsl
dec
push
sub
ja
outsb
dec
add
pusha
cmc
stos
sub
lods
movups
nop
jae
mov
mov
call
jb
xlat
movsb
lret
dec
fst
fs
sbb
jmp
stos
daa
fdivrl
mov
lods
mov
lahf
mov
xlat
push
cld
cmp
loopne
adc
fs
mov
xor
mov
push
ds
adc
dec
lods
cmp
sub
mov
loop
or
orb
push
adc
add
fwait
adc
fs
subl
pop
add
add
and
arpl
je
mov
cmp
pop
cmp
cmpsb
xor
fwait
les
outsb
mov
sahf
int3
xor
and
out
mov
repz
pop
push
adc
jge
cmc
dec
call
les
sbb
shr
mov
and
inc
in
inc
mov
stos
push
pop
and
into
inc
lret
cmp
push
mul
push
and
jl
dec
adc
add
je
stos
mov
out
mov
test
mov
out
mov
xchg
and
jne
leave
inc
loop
out
clc
cmp
jmp
enter
mov
test
in
stos
jle
es
icebp
scas
fsts
xor
movzwl
test
out
sbb
xlat
jo
js
inc
je
mov
aas
insb
leave
xor
xchg
fimull
addr16
push
loope
mov
xor
jns
pop
adc
xor
sub
test
add
mov
mov
lcall
lret
push
fdivs
or
pop
jbe
xchg
outsl
divl
insb
movsl
repnz
dec
cmpsb
mov
xchg
xor
pop
xchg
and
ds
aas
pop
test
jnp
dec
mov
outsb
je
ja
clc
repnz
mov
aad
ret
add
scas
adc
push
xor
adc
movsb
jne
cmp
sub
jp
call
sti
sub
sbb
mov
mov
inc
cmp
in
lods
ret
xchg
mov
push
cld
ret
dec
mov
int
mov
sub
popf
or
pop
add
jo
aad
push
fcomps
or
testl
dec
mov
push
or
cmp
data16
mov
mov
push
shll
sbb
xchg
mov
lcall
or
or
sahf
sub
push
jle
in
push
pop
inc
stos
pop
push
or
out
xchg
xor
xor
cltd
or
fldl
push
test
rclb
fnstsw
ds
jo
pop
mov
push
sbb
mov
inc
dec
sub
sbb
pushf
xor
pop
lret
leave
out
cmp
iret
cwtl
dec
wbinvd
loope
jne
sbb
jg
pop
mov
mov
mov
je
adc
out
mov
and
lret
test
outsb
jp
xchg
loope
inc
out
cmpsb
lea
stos
mov
repnz
test
adc
jae
ds
push
inc
xchg
je
pop
dec
loope
js
mov
div
cmp
jae
fsub
add
sub
loopne
loope
jbe
call
mov
test
loop
jns
in
add
add
scas
or
mov
dec
lds
add
mov
add
cmc
push
inc
test
mov
add
push
fistl
loop
or
iret
lock
pop
xchg
repz
and
xchg
pusha
out
mov
dec
and
inc
mov
dec
cwtl
add
hlt
cmp
aad
sbb
xor
sub
lods
call
pop
shrl
sbb
fistpll
push
cld
sti
cs
cmpsl
mov
mov
mov
fldl
cmp
lods
sub
sub
enter
or
int
xchg
xor
sub
jbe
sub
or
ret
or
sbb
scas
gs
push
imul
popa
add
insl
pop
test
or
or
jno
test
sbb
xchg
or
mov
lcall
ds
enter
pop
test
or
bound
add
stc
and
call
aaa
jge
xchg
xor
lods
lea
mov
pop
shlb
xor
mov
and
cltd
lods
dec
repnz
jnp
mov
dec
push
stc
sub
push
and
inc
test
cmp
into
xchg
dec
mov
ret
mov
pop
mov
shrb
js
push
pop
inc
in
popa
stos
sahf
fisttpl
ds
and
insl
jge
ret
ficoms
lret
mov
xchg
jp
clc
repnz
cmp
dec
sbb
mov
mov
mov
sbb
nop
pop
mov
mov
sbb
roll
push
adc
cmp
mov
adc
jns
pop
mov
xchg
rcrl
adc
lret
mov
pop
pop
and
in
xchg
inc
loop,pn
inc
ret
aaa
es
cmp
aas
pop
mov
stos
or
dec
pop
ret
ja
mov
gs
jbe
ljmp
pop
pusha
and
pop
daa
mov
push
popa
scas
sub
mov
std
cmp
push
inc
inc
ja
jae
add
fcmovnbe
xchg
and
outsb
js
out
shll
adc
aad
sbb
sbb
daa
and
cmp
fstpl
add
bound
ja
or
cmp
daa
cmpsl
icebp
ds
push
cmp
push
fisubrl
idivb
add
xchg
rorl
xor
xchg
pop
jo
movsl
push
xchg
adc
mov
shlb
jns
xor
jle
inc
rorb
js
jne
jb,pt
xchg
jb
push
test
add
dec
invd
loopne
push
test
jge
mov
sbb
mov
test
add
inc
inc
cmp
pushf
popf
xor
or
push
sub
test
xchg
divl
xor
cmp
ja
es
in
and
stos
push
dec
in
sbb
scas
into
mov
mov
sub
and
adc
outsl
xor
push
xor
scas
out
mov
sbb
adc
push
adc
inc
dec
mov
inc
pop
iret
scas
test
jg
in
sbb
xor
dec
inc
cltd
or
repz
imul
shrl
cmc
pusha
jle
pop
xchg
push
cltd
jbe
out
mov
out
negb
lea
test
enter
jp
pop
hlt
addr16
dec
add
std
and
jg
mov
lods
pop
xchg
testb
divb
ficoml
cmp
loop
cmp
cwtl
push
jecxz
cmc
mov
inc
daa
rorb
insb
sub
loop
pop
pop
jae
test
call
push
ljmp
sarl
outsb
cmp
pop
loopne
push
test
dec
dec
test
xor
sub
ret
mov
pop
mov
push
sbb
mov
ss
dec
inc
fstpt
ljmp
movsl
jle
sub
pop
in
cmp
jbe
ret
adc
jge
out
sub
push
repnz
sub
aam
sarb
jb
mov
jo
xchg
dec
pop
xor
mov
push
movsl
rclb
int
dec
jne
mov
shll
rcrb
bound
in
cmpsl
dec
faddl
lea
faddl
ret
inc
and
in
adc
add
sub
pop
mov
lods
cmp
or
inc
push
cmp
fnsave
popa
and
jns
xchg
lds
jnp
pop
data16
push
insb
xchg
ret
std
jbe
sbb
push
rorb
pop
inc
jge
imul
mov
xchg
jecxz
nop
xchg
dec
xchg
das
sbb
pusha
loopne
fs
movsb
addl
xor
pop
movl
aad
add
cwtl
push
and
sti
test
pop
push
mov
rolb
pusha
sub
push
lea
xchg
mov
xor
cli
pop
cmpsb
call
clc
pop
sarb
call
and
leave
jmp
popf
cwtl
repz
fs
cmp
xchg
sub
inc
push
outsb
pop
popa
mov
lret
mov
sahf
mov
std
mov
xchg
out
xchg
outsb
pop
sbb
mov
pop
clc
push
enter
xor
lods
cld
jp
popf
je
xchg
jnp
arpl
loopne
test
cmp
dec
xor
pop
outsb
int
mov
jmp
cmp
shll
ss
lahf
jecxz
addr16
popa
popa
rorb
inc
sbb
jmp
repz
xor
int
icebp
pop
loop
and
mov
xor
or
sbb
mov
add
mov
loop
jns
addb
and
int3
inc
pop
outsl
mov
outsl
orl
add
jmp
lahf
or
pusha
cs
lods
fbstp
testb
loopne
push
test
and
mov
scas
inc
fsub
adc
and
add
fiaddl
sahf
sbb
ret
repz
or
test
mov
mov
in
cmpsl
aaa
icebp
and
mov
cld
dec
mov
mov
cwtl
cmc
jnp
push
lock
shll
into
ret
mov
lds
ror
test
mov
cmp
mov
test
jnp
fwait
or
mov
out
cwtl
insb
stc
mov
and
mov
mov
jge
mov
xchg
lds
jne
cmp
jmp
adc
push
loop
jmp
cmp
pop
and
push
xor
push
mov
les
fistl
arpl
lods
mov
pop
insb
sbb
lods
into
mov
fucom
inc
sub
decl
xchg
cmp
add
jg
inc
jb
jmp
push
in
fisubs
daa
sub
scas
sbb
stc
imul
inc
mov
jns
jne
dec
mov
dec
and
push
loopne
mov
outsb
std
clc
stos
push
test
sub
adc
xchg
mov
mov
mov
addr16
inc
aad
test
movsl
gs
mov
push
xchg
cld
jecxz
xchg
mov
pop
add
inc
push
dec
js
cmc
pop
nop
mov
cmp
xor
push
xchg
pop
add
fsubrl
pushf
loopne
add
sbb
fdivl
hlt
mov
int
cmc
jne
push
inc
imul
adc
cmpsb
arpl
call
mov
add
add
jmp
lds
icebp
int
stos
movsl
stos
outsb
push
jae
or
aas
pop
call
ret
mov
and
mov
push
sbb
das
and
sbb
or
outsb
ret
or
sbb
cmp
scas
popa
shlb
and
xor
inc
adc
std
push
sub
and
push
push
pop
adc
stc
mov
mov
sub
dec
xor
ret
pop
icebp
repz
cmpsb
xchg
push
cmp
test
hlt
and
xor
mov
pop
and
jle
pop
fs
pushf
dec
cmpsl
js
xchg
cmc
cli
sbb
jl
jl
shrl
push
addr16
loop
orl
cmp
jb
jmp
xor
test
cltd
mov
pop
push
inc
xchg
jae
sub
lcall
cmc
lods
hlt
inc
or
jae
enter
inc
sub
xchg
pop
shlb
dec
dec
or
ret
ret
mov
pop
jmp
dec
dec
xor
jns
enter
xchg
and
ljmp
scas
test
sbb
lds
mov
or
lahf
xchg
jmp
mov
mov
xchg
and
xchg
bound
inc
insb
test
xchg
fstp
xor
jns
adc
jle
adc
ljmp
or
pop
lahf
sbb
jno
sub
cmp
popf
xchg
or
loope
inc
shll
add
inc
imul
aaa
in
repz
add
mov
lds
outsb
pop
xor
pop
fldl
fs
ljmp
dec
aam
sti
imul
test
gs
ret
aam
pop
mov
cmp
rclb
aam
cmpb
push
addl
data16
pop
jb
mov
cs
out
or
adc
xchg
jmp
call
jl
add
das
cmp
loop
push
push
aad
outsb
push
xor
and
xchg
or
addr16
sbb
iret
jle
movsb
mov
mov
loop
movsb
ret
cs
cwtl
cmpsb
push
ss
xchg
sub
push
push
addr16
push
adc
stc
shrl
inc
loope
or
es
mov
jecxz
outsb
mov
or
lods
sbb
and
pop
test
fs
lea
add
jl
pop
out
mov
lea
clc
enter
js
insb
repnz
or
cmp
jne
adc
jg
push
icebp
or
xchg
mov
lret
sub
and
std
sbb
mov
add
aas
xchg
orb
jb
adc
mov
mov
jp
lret
inc
mov
pop
mov
xchg
lahf
sti
jl
fcmovnu
inc
xchg
or
mov
lea
shl
fdiv
arpl
xchg
xchg
add
sarb
dec
out
nop
pop
push
sub
lret
push
test
pop
sub
jbe
dec
mov
lret
sub
and
xchg
pop
leave
pop
or
jb
lods
int
push
mov
cli
push
fidivl
add
bound
sbb
lcall
scas
sub
rclb
fs
sbb
push
push
pop
movhps
adc
rorl
xor
out
xchg
add
ret
push
mov
in
fwait
std
rorb
andl
inc
jne
popf
scas
and
loope
lds
movsl
mov
mov
fimuls
leave
add
jbe,pt
pop
jmp
out
inc
pop
mov
jnp
push
add
cmpsb
gs
jl
xlat
jb
add
dec
cmp
sub
push
lea
push
hlt
pop
icebp
notb
aad
xchg
clc
jmp
sbb
inc
sbb
insb
loope
and
mov
add
xorb
sbb
ret
enter
push
jmp
push
mov
bound
inc
cmp
pushf
push
or
dec
neg
rclb
rorl
lock
jne
adc
sti
or
loop
xchg
pop
inc
mov
ret
scas
orl
sbb
cmpsl
mov
inc
or
push
bound
stc
xchg
and
mov
add
rcl
pop
iret
push
int3
enter
mov
test
pop
xchg
insl
inc
sub
sub
int3
jmp
pop
pop
xor
andb
sub
cltd
in
pop
jg
popl
jnp
dec
lcall
inc
pushf
popa
jae
mov
lea
or
jle
xchg
push
fdivrl
out
shlb
stos
push
and
cld
dec
or
jge
add
imul
or
jge
es
clc
clc
sub
icebp
mov
jae
pushf
jmp
xor
movsb
mov
push
cmpsb
popa
xchg
fisttps
cmp
fidivl
and
outsl
inc
sub
ret
inc
mov
in
rcrb
xchg
outsl
push
xchg
aam
sbb
pushf
ds
lcall
rorl
sbb
outsb
push
xchg
mov
cmp
mov
add
arpl
into
add
jl
fnsetpm(287
and
jb
dec
jp
clc
xchg
pop
push
dec
adc
cld
cmp
lods
ficompl
les
inc
mov
sub
and
imul
or
cmc
std
pop
std
xor
out
add
or
add
lock
inc
add
mov
loopne
cwtd
cmp
popf
aam
and
add
xor
outsl
adc
ja
stc
sbb
cmp
es
out
sbb
add
mov
adc
sub
mov
es
das
jo
dec
push
outsb
in
adc
xchg
test
jge
jg
lods
dec
aam
inc
pop
insl
adc
testl
inc
mov
subl
popa
pop
jecxz
adc
mov
adcb
loop
sub
pusha
jmp
xor
pop
xchg
test
push
ja
jge
cli
je
jmp
jns
sbb
push
lods
rcrb
out
pop
int
sti
pop
mov
lock
insb
lret
popa
cld
sbb
mov
in
scas
cmp
test
add
jnp
jl
loopne
adc
sub
push
sub
xchg
mov
or
cwtl
add
pop
insl
cmp
sub
fstpl
cmp
cld
mov
mov
insb
lods
mov
inc
jb
notb
mov
insl
out
dec
in
je
push
inc
mov
movsb
lahf
push
hlt
mov
mov
outsb
pop
fbld
inc
cltd
stos
bound
sub
inc
repnz
pop
jns,pt
push
movsl
pop
subb
cmp
fisubs
inc
enter
push
gs
test
popa
mov
sub
mov
icebp
or
xchg
fistpl
lock
jmp
je
jae
or
add
mov
jo
test
test
loope
push
cmp
push
pop
lcall
shrb
jecxz
stos
cmp
lcall
jne
movsl
mov
imulb
lcall
adc
xchg
pop
sbb
out
test
cmpsl
pop
or
sti
aam
sub
scas
mov
unpcklps
xchg
mov
mov
add
xorl
sbb
mov
mov
lea
inc
icebp
in
test
add
scas
pop
push
cmpsb
movsb
jg
or
js
mov
and
push
imulb
mov
imull
popf
inc
and
cmp
push
lods
popl
or
flds
lods
add
test
xchg
inc
push
data16
gs
fstpt
fiadds
out
test
jge
out
addr16
xlat
les
ror
and
sbb
adc
jg
xlat
lahf
pop
jns
dec
xchg
or
fwait
jmp
mov
les
or
ja
pusha
rcr
repnz
not
lds
or
sub
add
in
js
stos
push
and
insb
push
loop
rcrb
fucom
std
xor
lods
lods
pop
mov
imul
and
fisttps
ficompl
xchg
cltd
divb
jg
mov
jle
adc
mov
dec
push
jge
pop
mov
dec
push
adc
lods
mov
cmpsb
cwtl
lds
mov
sbb
xchg
mov
or
mov
or
pop
add
repnz
rorl
lea
lret
subl
mov
test
cmp
jmp
loop
xchg
lret
xchg
ficompl
push
addr16
aaa
xor
scas
cs
sub
pop
lret
shl
push
add
test
and
jg
call
cli
cmp
jge
mov
push
gs
fisubl
xlat
jl
shl
push
mov
orl
mov
incb
and
sub
xchg
dec
outsb
int
jo
mov
rep
dec
sbb
stc
adc
lods
pusha
and
mov
dec
pop
xchg
inc
jns
movsl
stc
xor
push
dec
imul
aad
daa
stc
sarb
mov
and
stc
adc
push
push
shrb
mov
out
ja
cmp
or
jecxz
shufps
cmp
data16
inc
sub
mov
dec
pushf
jae
push
mov
cmpl
dec
cmp
and
sub
dec
scas
sbb
and
fnstcw
lods
jecxz
sbb
pop
cli
dec
mov
orb
fdivr
and
cs
idivb
sub
cmc
add
test
clc
jns
lret
nop
push
pushf
test
pop
loope
pop
into
cmpsb
ljmp
inc
mov
xlat
jl
cli
ljmp
xor
addr16
idivb
pusha
mov
es
mov
rolb
fdivp
inc
test
cmp
test
jae
jg
das
mov
pop
jle
notb
cmp
outsb
mov
push
lcall
fld
lods
in
add
xor
js
fldcw
sbb
out
cld
iret
scas
testl
pop
sub
push
dec
rorb
push
mov
cmp
into
rorb
lods
or
jmp
in
mov
inc
addl
mov
sahf
ret
out
js
call
cwtl
mov
shrl
jge
mov
dec
fnsave
or
aam
cltd
es
dec
adc
ljmp
iret
test
movsb
mov
and
cmpsl
int
pop
ds
xor
jl
mov
sbb
pop
sub
jmp
and
mov
cwtl
inc
xor
outsb
jns
or
loopne
jno
imul
xchg
push
loopne
mov
cld
jg
mov
adc
shll
adc
jnp
lods
pop
fnstenv
xor
push
ret
iret
stc
hlt
mov
pop
pop
pop
inc
addb
sbb
jl
test
rorb
sub
mov
call
mov
in
xchg
mov
pop
fldcw
arpl
hlt
leave
dec
leave
cmpsb
cmovne
fsubl
jg
push
mov
ja
jmp
add
xchg
das
xchg
fdivs
rclb
out
lods
adc
jb
fldenv
push
adc
sahf
sub
outsl
jno
cmp
mov
out
in
loope
dec
loopne
rorl
mov
loopne
out
mov
dec
cmp
pushl
mov
add
inc
iret
subb
jle
dec
fucom
gs
mov
inc
lcall
dec
sahf
push
pop
inc
andl
pop
pop
mov
imul
mov
lret
insl
sbb
mov
scas
or
mov
dec
cmp
add
adc
scas
cmp
dec
fimuls
or
lods
add
rorb
je
xchg
add
or
xor
jo
imul
dec
jecxz
loopne
int3
inc
inc
jmp
mov
enter
pop
or
jae
dec
repnz
into
test
inc
push
movsl
inc
dec
push
dec
mov
test
mov
mov
cltd
push
sbb
dec
js
bound
dec
mov
or
inc
in
jno
dec
test
negl
stos
mov
dec
or
or
aad
push
hlt
movsl
cmp
sbb
out
mov
enter
sbb
inc
rcr
add
cmp
and
insl
dec
mov
pusha
arpl
inc
icebp
sub
fwait
shl
xchg
ss
adc
push
mov
fiadds
lock
cli
incb
fidivrl
ja
into
daa
ror
in
les
iret
insl
stos
cmp
and
push
popa
mov
sbb
mov
stos
lret
cmp
inc
xor
imul
jns
push
jo
mov
fidivl
add
out
rcrl
stos
sub
sbb
xchg
std
mov
out
adc
mov
fisttps
add
mov
int
sarl
out
cs
lahf
xchg
cmp
lret
addb
es
jbe
cmp
sub
xor
insb
inc
fsubs
fistpl
pushf
mov
and
gs
adc
mov
dec
lret
xor
inc
mov
cwtl
cmpsb
push
lret
scas
fcompl
in
dec
xor
nop
stos
pop
jge
adc
adc
ret
jle
dec
push
cmpsb
dec
popa
xchg
pop
sub
sbb
pop
cmp
cmpsl
or
movsb
mov
push
rclb
ret
mov
loope
sbb
mov
lcall
es
mov
and
mov
sbb
fstpl
outsl
adc
xor
xor
xor
lods
shl
and
ficoml
and
dec
hlt
popf
lretw
ljmp
bound
lods
mov
jb
cmp
inc
mov
clc
roll
mov
fimuls
idivb
out
mov
dec
or
repz
xor
lret
mov
ljmp
mov
je
movsb
fimuls
pop
xor
sbb
stc
cmp
shlb
mov
testb
add
xor
xor
xor
mov
mov
imul
mov
clc
inc
das
xor
seta
dec
add
mov
cwtl
xchg
ss
jo
loopne
in
outsl
jns
push
mov
fdivrs
jnp
add
cmp
out
mov
loop
add
dec
into
lea
repz
push
cmpsl
sub
mov
js
push
pop
fcomps
repz
adc
popa
jmp
cmc
out
test
je
add
out
popa
jbe
adcb
mov
or
pop
popa
push
mov
fnstcw
adcl
fbld
test
cmp
ret
sbb
xchg
fmuls
ljmp
sub
sub
jle
mov
push
adc
test
hlt
mov
adc
jle
imul
jge
cmp
xor
push
lock
or
lds
mov
mov
and
sbb
push
arpl
pop
inc
xor
daa
insb
scas
or
aad
pop
sub
rcl
in
es
gs
aad
dec
and
fs
int
stc
pop
mov
ret
int3
sbb
stos
add
mov
mov
mov
mov
pop
fdivrs
mov
outsl
sub
mov
mov
inc
sbb
push
pop
push
fcomps
rcll
into
lahf
mov
cmp
mov
and
call
das
cmp
fwait
imul
in
in
lahf
rorb
xchg
sub
lock
pop
pusha
xorl
mov
je
test
or
fsubs
push
or
mov
aas
sub
push
mov
jge
ss
mov
pop
add
push
movsl
xor
xchg
push
adc
pop
dec
sub
adc
mov
inc
dec
dec
in
jg
sub
mov
cld
sbb
mov
xorb
scas
fisubrs
push
cli
sbb
mov
loop
mov
inc
mov
gs
dec
or
add
mov
push
lcall
arpl
leave
test
aam
out
imul
jb
jl
and
aad
mov
cmpsb
inc
sbb
inc
icebp
pop
mov
int3
adc
jne
lds
jg
aam
mov
xchg
shl
inc
push
imul
aam
arpl
xchg
and
xor
jo
cld
add
dec
or
loope
iret
adc
loope
mov
test
ficomps
lcall
movsl
mov
lods
in
gs
mov
sbb
mov
lcall
testb
mov
sbb
ljmp
cvttps2pi
mov
pushl
add
das
mov
fstpl
out
repnz
out
shlb
or
popa
mov
rol
or
fwait
push
inc
scas
cmp
jmp
rorl
dec
push
xchg
je
cmpl
enter
mov
cwtl
rol
sbb
cmp
imul
in
ja
xchg
lods
adc
test
push
jmp
jo
mov
inc
lret
scas
adc
jge
addr16
jge
out
loop
repz
andl
leave
mov
mov
add
leave
jo
jbe
fsub
jmp
and
das
inc
jle
jle
scas
jo
sub
pop
sti
xor
inc
sub
loop
clc
inc
aam
push
cmpsl
push
imul
mov
ret
mov
int3
sbb
pop
xor
mov
xchg
mov
test
icebp
dec
scas
pop
push
cmp
xor
adc
fisttpll
and
mov
or
fmulp
push
cmpsl
aaa
sbb
inc
pop
pushf
cwtl
push
or
loope
rcrb
pop
xchg
rcrb
hlt
pop
hlt
dec
jae
dec
jle
or
sub
inc
std
and
xor
les
push
cs
adc
xchg
ja
push
dec
lcall
mov
in
ret
rolb
mov
sub
mov
add
mov
or
dec
jb
push
xchg
jmp
xchg
jl
adc
cmp
test
add
out
nop
pushw
dec
mov
xor
adc
lods
fpatan
xor
push
xor
and
mov
jp
dec
fadds
xor
adc
mov
xchg
add
aad
movsl
mov
jmp
cli
push
mov
out
inc
or
mov
sub
push
fimuls
and
sub
fsubl
insl
sub
insl
xchg
sub
push
movsl
ret
lret
stos
mov
xchg
pop
mov
and
push
jae
mov
inc
test
sub
hlt
or
mov
mov
mov
inc
jle
arpl
or
jb
adc
pop
xchg
pop
xchg
jmp
cmp
popf
test
and
js
sbb
and
fdivr
das
xor
ret
fsubrp
call
xor
aas
cmp
xchg
mov
movsb
jge
fs
xchg
cmp
and
cmpsl
push
jge
push
add
mov
pop
leave
test
aam
sbb
ja
orl
pop
out
aam
arpl
sub
sub
aas
jo
jmp
scas
imul
lock
outsb
jp
cmp
add
scas
loopne
mov
adc
mov
or
dec
ljmp
jecxz
ret
movsl
aaa
xchg
push
push
in
mov
shlb
lods
aas
dec
mov
xor
pop
in
pusha
mov
filds
dec
cmc
stos
mov
repz
xor
add
sub
dec
xor
lea
gs
dec
dec
add
test
mov
lahf
xor
idivl
outsb
rcrl
data16
int
jb
xchg
jo
arpl
iret
movsb
sbb
flds
add
int3
add
push
push
inc
jle
add
sub
lahf
add
test
push
fdivr
fistps
je
mov
and
xchg
lds
test
test
fnsave
enter
mov
push
inc
repnz
xor
pop
inc
stos
lcall
jg
out
int3
jle
pop
cmpsl
mov
lds
and
fsubs
jne
xor
cmp
mov
jo
cmpsl
fldl
lea
dec
inc
dec
push
loope
xlat
cltd
dec
outsb
push
mov
fcomps
push
push
mov
lock
or
mov
outsb
repz
and
inc
dec
cmpl
inc
mov
fwait
ss
inc
add
adc
pushl
push
es
outsl
xchg
add
movb
unpckhps
jmp
add
das
stc
sbb
mov
ss
adc
jne
mov
pop
es
movsl
push
mov
inc
ljmp
nop
mov
push
popf
ja
sub
push
cmc
mov
les
notb
dec
repz
nop
ret
sbb
mov
sbb
mov
mov
or
add
imul
cmpsl
cmpsb
imul
cmpsl
xor
cwtl
enter
jle
lea
xor
or
sar
out
pop
inc
push
cld
gs
nop
daa
fs
cmp
fstps
pop
cmpsb
xor
xchg
icebp
stos
inc
pop
iret
lahf
dec
shll
ja
xchg
pop
cmpsb
js
dec
inc
inc
cmpsl
ror
xchg
enter
mov
pop
pop
js
mov
stc
sbb
mov
test
add
sti
mov
mov
mov
dec
cwtl
stc
sub
xchg
stos
mov
xchg
nop
push
cvtps2pd
ret
add
out
loop
and
mov
sub
int
inc
lret
or
lahf
or
inc
or
sub
sbb
movsb
in
ret
cmp
sub
mov
push
or
pop
sub
cmp
out
aaa
icebp
pop
fstl
popf
push
xchg
in
imul
ret
mov
sbb
cmc
cmp
push
sub
or
push
inc
loope
mov
rcrl
xlat
fsubrs
push
sub
and
inc
test
push
pushl
push
pop
push
pop
xor
ffreep
push
xor
and
xchg
inc
sbbl
or
inc
in
imul
jae
fsubl
aam
mov
mov
in
fisubl
lret
and
les
xor
push
pop
das
xchg
adc
mov
pop
mov
hlt
adc
cli
cmpsl
sub
rcl
jo
iret
stos
xlat
add
fisttps
jnp
and
pop
scas
dec
mov
stos
mov
lods
mov
jbe
pop
sbb
mov
push
inc
cltd
jne
sub
push
jl
out
lds
je
xor
jnp
fcomi
xor
sub
dec
cmp
xlat
sbb
scas
dec
pushf
xor
pop
nop
xchg
into
out
inc
pop
pop
pop
mov
ss
push
ds
sub
sub
scas
lret
mov
pop
adc
fcomps
dec
outsb
ds
hlt
mov
push
pop
jge
adc
jle
jb
dec
das
out
xor
es
aas
sbb
cmp
outsl
je
mov
mov
stos
aam
add
jb
shlb
sub
or
and
jae
ret
lock
out
xchg
or
dec
loopne
pop
mov
mov
xchg
rcrb
nop
je
fwait
scas
mov
movsb
cmp
mov
enter
mov
stos
lock
mov
sahf
push
jge
jnp
ja
loope
xchg
icebp
mov
lods
or
clc
add
lock
nop
movsb
jno
sti
enter
jl
add
aaa
ret
loopne
jl
push
pop
pop
lret
mov
out
jo
inc
sarl
aas
insb
iret
sbb
mov
jmp
inc
xor
jnp
bound
hlt
dec
add
std
or
nop
sub
jg
in
jbe
push
mov
push
mov
cli
or
cwtl
inc
push
jnp
enter
sub
lock
jle
lods
call
cli
popa
out
mov
popa
cwtl
ja
sub
jo
push
stos
jle
es
sbb
shrb
mov
and
cmp
jae
js
xor
call
xor
insb
loope
fwait
sub
mov
cmpsb
dec
xchg
mov
jmp
add
cld
xchg
mov
in
jmp
popf
js
push
jae
add
mov
andl
movsl
push
jbe
sub
or
add
clc
mov
xchg
adc
push
lcall
mov
inc
dec
shlb
jecxz
fcoms
addl
or
push
loopne
shll
xchg
mov
add
cmp
fld
out
dec
je
mov
xchg
jnp
insl
or
negl
mov
mov
push
int
mov
loopne
addb
pop
inc
mov
repz
lea
lahf
ret
jo
or
inc
pop
cmp
adc
movsb
sbb
rcll
addl
and
and
out
sbb
pop
xchg
and
and
and
fdivl
sub
sbb
inc
xchg
mov
mov
lcall
dec
xchg
push
insl
pop
insb
js
sbb
push
inc
gs
push
bound
sub
test
dec
in
fists
roll
add
cld
pop
sahf
je
lret
pop
jbe
inc
sbb
dec
pop
push
stos
int
fdivrs
je
in
insl
mov
jo
in
add
mov
sub
adc
inc
idivl
rcll
push
fwait
ja
pop
aad
out
call
mov
mov
xor
dec
andl
inc
push
dec
mov
inc
or
xor
fisttpl
stc
xchg
inc
mov
fidivrl
mulb
push
jp
hlt
jo
add
pop
pop
cwtl
ret
add
push
xchg
lret
xchg
sbb
cmp
repnz
push
enter
sbb
loop
pop
js
jae
popa
xor
inc
mov
sbb
jns
fsub
cmp
mov
inc
push
sub
adc
xchg
mov
ljmp
lahf
mov
xchg
inc
pop
cmpsb
dec
mov
or
pop
test
outsl
or
adc
mov
pop
cs
jne
fmuls
fs
xor
adc
repz
add
mov
aaa
fldl
std
mov
inc
inc
pop
mov
add
sbb
jns
or
rclb
test
test
mov
mov
adc
dec
roll
inc
and
test
pop
push
insb
fbstp
xchg
imul
or
outsl
aas
inc
cld
pop
or
mov
bound
mov
js
stos
es
xchg
sub
and
add
mov
mov
jae
pushl
ds
out
out
pop
mov
rcrl
jle
test
fstl
jb
xchg
or
xchg
popa
sbb
shrb
in
or
inc
or
push
ffree
ss
stos
xchg
sbb
mov
or
pushl
inc
pop
jno
mov
ljmp
iret
xchg
or
xchg
mov
push
and
sub
outsl
push
add
sub
mov
bound
leave
jge
dec
or
aam
or
addr16
cltd
test
cmpsl
fwait
insb
ss
lods
mov
push
and
adc
sbb
pop
dec
ja
jae
test
subl
mov
add
sti
jo
sub
adc
rorb
pusha
inc
jo
adc
arpl
pop
cwtl
inc
push
cmp
xor
cltd
lahf
popf
or
sbb
inc
sub
mov
addl
rcl
pop
pushf
jae
bound
pop
sub
pusha
aam
les
cmp
pop
sbb
les
inc
lret
dec
addr16
push
in
test
xchg
pop
repnz
xor
call
lock
pop
into
add
lock
or
stos
shl
adc
and
or
insl
rclb
add
fwait
rclb
test
ja
mov
lret
jae
cmc
into
xor
sbb
in
cli
jp
pop
pop
inc
das
mov
sarl
xchg
mov
xor
or
shrl
fildl
pop
xor
jmp
inc
dec
cmpsb
push
mov
mov
arpl
jae
cmp
mov
xor
sbb
add
fistpl
dec
sti
jge
stos
test
insb
aaa
movq
cmpsb
mov
pop
negb
lahf
xor
dec
push
adc
push
dec
fsts
stc
sub
push
push
stos
fistpl
mov
sti
cli
sub
cmp
mov
or
fs
mov
leave
add
inc
outsl
ss
movsl
jmp
jno
in
mov
sbb
cs
daa
jno
loope
xchg
xlat
mov
je
cmp
daa
add
inc
jb
pop
aam
std
and
jns
sub
arpl
hlt
push
aaa
fcompl
add
jbe
add
push
add
dec
in
dec
or
xchg
in
cmc
mov
out
mov
cmp
loop
mov
mov
fmuls
mov
sahf
dec
pop
repz
cmp
push
xor
and
nop
ret
fdiv
popf
dec
stos
and
cmp
mov
pop
js
push
std
fildl
loope
pop
sub
xchg
testl
pushf
gs
mov
mov
sub
dec
cld
push
fsts
cmp
subb
inc
mov
les
ljmp
fnstenv
and
jb
cmp
int
xchg
aam
in
jecxz
cmp
cli
scas
cs
lcall
push
dec
orl
dec
and
push
shrl
adc
sahf
roll
dec
jecxz
pop
push
call
dec
fs
inc
imul
addb
jne
inc
addr16
sahf
push
adc
addr16
mov
popa
pop
inc
inc
dec
or
cmp
mov
pop
fisubrl
je
mov
mov
jnp
jb
mov
repnz
jae
jp
aas
cmp
popa
pop
xchg
das
notl
int3
repz
sarl
mov
pop
or
lds
stos
dec
push
lea
jmp
fsubr
xor
movsb
test
push
jecxz
cmp
and
sbb
cmp
test
mov
pusha
fldenv
jge
lea
jle
ret
pop
pop
fdivr
and
fcomi
sbb
nop
inc
sub
sub
sahf
xor
divb
jb
push
and
mov
mov
xor
pusha
dec
leave
cmc
inc
fs
in
mov
or
mov
sbb
lods
les
and
test
sub
mov
xor
stos
mov
xchg
mov
stos
mov
cmp
mov
mov
adc
adc
dec
xchg
mov
jb
push
pushf
insb
sarl
hlt
sahf
push
fadds
ficompl
cmp
and
adc
ja
sbb
xor
dec
mov
jge
dec
insl
jecxz
jmp
hlt
pop
push
outsl
inc
and
push
stc
jp
pop
pop
out
mov
cmpsb
add
dec
loope
xchg
addr16
jae
jmp
call
add
jbe
fbld
xor
sbb
add
jge
mov
ds
push
xor
adc
repnz
push
xchg
sar
pushf
lods
jae
stos
cwtl
xor
ljmp
sub
in
int
cmp
mov
mov
sub
cmp
xlat
dec
test
mov
mov
or
sub
dec
andl
pushf
arpl
mov
adc
mov
and
out
mov
sbb
ds
dec
mov
inc
add
aas
mov
out
mov
mov
fldt
push
movsb
push
jb
dec
inc
repnz
fcmove
in
movsl
pop
jo
lea
aaa
jns
stc
pop
mov
push
mov
or
add
insb
mov
push
pop
pop
jb
jb
jnp
mov
mov
outsb
jge
jp
movsl
push
sbb
xchg
and
pop
pop
adc
imul
ficoml
adc
mov
sbb
sti
push
imul
js
ret
cmpl
adc
lea
mov
inc
mov
divl
sub
aad
mov
sub
fiadds
jle
adc
jno
popf
push
jns
sbbb
pop
push
sbb
dec
cmp
and
ret
or
aam
inc
pop
xchg
iret
dec
xchg
xorl
in
adc
sbb
mov
lds
aam
loop
mov
js
sbb
std
cmp
xor
scas
push
je
sarl
mov
jge
mov
mov
inc
mov
xor
mov
jge
sarl
inc
cmpsl
dec
mov
in
xchg
iret
out
mov
fnstsw
ficomps
jb
lods
shll
mov
lret
xor
cs
popa
sbb
insl
inc
loopne
ja
fwait
sbb
mov
jb
add
in
jno
cmpsl
adc
or
sub
movsl
int3
sbb
testl
fwait
sub
mov
jecxz
adc
pop
rorb
sbb
jo
loopne
adc
or
sti
fsubs
into
hlt
jle
sbb
js
jae
push
fistl
sub
test
xor
into
repz
dec
sbb
lods
push
mov
add
push
inc
sub
sbb
and
sbb
push
hlt
inc
out
and
push
aas
or
arpl
pop
call
push
xchg
mov
inc
mov
xchg
pop
dec
out
negb
jnp
xor
cld
scas
test
sahf
mov
cmpsb
aas
fldcw
push
push
lods
imul
or
xlat
jl
inc
mov
movsb
int3
rep
insl
sbb
push
insb
xchg
cli
inc
pop
repnz
movsl
jmp
aam
or
fistpl
xchg
cmp
inc
pop
lds
inc
in
cmp
mov
insl
dec
mov
mov
push
pop
bound
xchg
pop
mov
jne
mov
xchg
cltd
in
jecxz
stc
pop
cvtdq2ps
jg
mov
es
cmp
pop
push
cs
push
mov
mov
push
fsubrl
adc
and
lret
dec
jmp
bound
fistpl
ret
enter
sti
fnstcw
mov
dec
or
push
in
mov
xchg
mov
dec
icebp
mov
es
jg
inc
lret
mov
aam
mov
cmp
outsb
xchg
fwait
test
loop
or
lods
or
xor
nop
fistpll
dec
jbe
lret
adc
mov
ret
inc
sub
mov
push
jns
sub
int3
test
inc
stos
imul
inc
fcmovnbe
cmp
and
xchg
pop
mov
and
jmp
aaa
inc
ficoms
and
and
fstpl
cli
arpl
fs
call
into
add
mov
or
mov
ret
shl
cmp
add
dec
mov
mov
shrb
sbb
outsl
dec
outsb
fwait
mov
aad
loope
push
and
cwtl
cld
incb
mov
xor
push
push
lcall
add
loopne
jns
adc
xchg
add
or
adc
adc
push
aad
add
pop
or
test
fwait
jp
lock
js
repz
jnp
gs
daa
test
pmullw
fcom
xchg
gs
jecxz
notl
ja
loopne
loop
jl
inc
ret
ds
into
dec
jl
int3
pusha
sti
popf
adc
mov
pop
arpl
nop
sub
cmp
pop
adc
lods
inc
out
int3
pop
pop
lods
push
addl
jge
ds
ret
mov
push
and
pop
cwtl
mov
mov
ficompl
hlt
add
pusha
dec
movsl
and
or
cmp
push
xor
scas
pop
mov
movsb
xor
xor
jmp
icebp
pop
jns
outsl
jp
mov
jno
xchg
ret
and
dec
data16
cmp
cmp
fwait
lods
addr16
cmp
dec
mov
xchg
xor
pop
pop
in
fisubs
outsb
push
jecxz
loopne
inc
int3
jecxz
jae
out
mov
out
iret
jnp
pop
fistl
pop
in
test
adc
stos
lds
pop
sub
xchg
mov
int3
xchg
inc
hlt
aas
xchg
pusha
mov
xchg
js
add
ret
leave
lods
sub
test
dec
adc
sti
xor
push
push
sub
jne
inc
push
out
stos
cmp
pop
mov
std
cmp
ret
push
inc
fimull
sbb
inc
test
add
xor
inc
outsl
imul
push
aad
inc
xchg
push
and
xor
arpl
cmpsl
fisubrl
mov
jns
inc
xchg
dec
and
insb
jb
mov
test
fprem
les
addl
or
cmp
movsl
std
push
fwait
icebp
lds
sbb
mov
adc
mov
mov
sub
push
mov
int3
xchg
pop
int
or
mov
lret
pop
dec
stc
jmp
mov
fidivs
scas
mov
or
stc
mov
adc
decb
insl
mov
sbb
jne
mov
mov
sbb
cwtl
xchg
shl
pop
adc
shrb
jmp
mov
mov
and
imul
popf
push
pushf
rcll
and
sbb
mov
xchg
fs
popa
fldl
iret
aaa
ffree
not
cmp
scas
leave
and
mov
dec
jecxz
daa
inc
filds
cltd
shlb
daa
adc
fbld
hlt
push
xor
lock
mov
in
xchg
ficompl
sub
pop
push
sub
cmp
jle
and
jge
sub
aam
mov
data16
mov
sbb
xchg
shlb
sbb
cltd
ret
decb
xchg
cmp
xchg
mov
mov
inc
lods
sbb
pop
mov
dec
xchg
jmp
push
xorl
push
pop
aaa
das
push
xchg
inc
dec
shlb
and
and
xchg
cmp
es
sub
dec
lds
aaa
xorl
xchg
icebp
sub
mov
fs
dec
sbbl
insb
xchg
adc
push
jmp
les
mov
xchg
test
or
insb
call
mov
sar
mov
inc
js
enter
mov
leave
inc
in
mov
jnp
in
pop
lea
cmp
popf
out
adc
pop
mov
out
pop
lea
mov
push
sbb
loope
xchg
cmp
sbb
mov
stos
sbb
mov
sbb
insb
mov
cld
cmp
movsl
ljmp
arpl
xor
dec
mov
cmp
mov
test
aad
shl
xchg
push
dec
adc
adc
lods
or
mov
outsb
test
mov
jae
sbb
inc
ljmp
pop
bound
shlb
loopne
or
outsb
mov
call
lods
mov
inc
jnp
cmpsl
jo
add
adc
xchg
cld
and
and
icebp
fstpt
mov
jg
cmp
ja
xchg
cmc
pop
mov
xor
jg
lret
pop
jmp
push
movsb
daa
jbe
push
cmp
cs
stc
jmp
loope
adc
cld
enter
dec
sbb
cmp
mov
jno
mov
sub
xor
adc
pop
fcompl
mov
sahf
das
inc
mov
pop
pop
add
pop
dec
add
mov
movsl
jge
js
mov
pop
shl
frstor
push
mov
pushf
enter
pop
das
push
fsub
shr
mov
xchg
xor
aad
mov
cmp
pop
dec
xor
dec
mov
mov
loop
mov
jge
xor
movsl
mov
lret
add
pop
loop
jp
xor
cmp
shrb
out
mov
sub
nop
pop
movsl
cli
cltd
mov
fs
xor
cmc
adc
mov
mov
dec
loope
js
cmpl
pop
loop
adc
jb
dec
mov
arpl
sub
jno
fidivs
fidivrs
sbb
xchg
sub
mov
dec
fldenv
arpl
jecxz
lods
repnz
and
sahf
frndint
data16
mov
xchg
fisttps
jmp
mov
sub
in
shll
push
mov
jge
out
into
push
xchg
gs
stos
in
in
test
movsl
mov
clc
icebp
test
push
insb
jl
or
cltd
inc
jno
and
bound
xor
lods
add
adc
icebp
loope
insl
mov
add
imul
pop
adc
bound
mov
in
mov
cld
pop
cmp
cmc
mov
mov
les
cmp
mov
stos
out
pop
mov
loopne
inc
lahf
push
xchg
fcoml
adcb
out
pop
int
xchg
js
popa
dec
push
sbb
jnp
and
nop
pop
or
or
call
mov
gs
ret
popf
pop
shlb
lret
mov
mov
test
lahf
mov
pusha
pop
mov
out
cs
mov
sub
jmp
adc
fs
data16
xor
dec
sub
mov
out
mov
mov
xor
push
dec
adc
sarb
xchg
mov
scas
adc
outsb
pop
scas
movsb
out
lods
xor
mov
cltd
mov
and
mov
push
sahf
cld
dec
lock
or
and
daa
ret
cmp
test
inc
ret
ret
pushf
or
dec
mov
push
sti
and
jno
cmc
int3
push
cmp
jl
cwtl
dec
mov
jns
or
imul
adc
js
fstl
icebp
roll
icebp
add
sbb
pop
in
push
jbe
adc
ret
inc
inc
mov
iret
push
daa
or
test
xor
xchg
daa
ds
aam
jecxz
mov
dec
fs
clc
add
xchg
jne
inc
mov
cmp
pop
sar
mulb
pop
aam
imul
rcll
lret
and
incl
push
add
pushf
xor
sbb
clc
adc
mov
mov
sti
int
aad
outsl
or
arpl
inc
rclb
es
and
or
rol
out
dec
jne
loope
leave
inc
sbb
cs
mov
mov
push
fwait
loope
test
push
test
push
fnsave
mov
mov
lahf
les
stc
or
push
dec
cmpsb
xchg
imul
aas
xor
js
repnz
outsb
push
xorb
inc
xlat
pushf
shrb
add
outsb
dec
add
outsb
or
push
and
or
les
xchg
push
in
insb
mov
cld
lock
lahf
les
cld
in
mov
cld
outsl
out
push
jecxz
xchg
mov
pop
filds
lea
aas
mov
loopne
adc
mov
sub
std
xlat
xchg
pop
mov
jg
repz
pop
insb
divb
mov
push
sbb
push
adc
addb
movsb
jb
push
mov
pop
xchg
mov
cmp
mov
mov
sbb
pop
rcr
in
add
and
cmp
or
stc
inc
sub
sti
mov
cmp
xchg
sbb
add
filds
pop
arpl
inc
test
frstpm(287
push
xchg
arpl
out
andl
push
not
lcall
mov
and
mov
lock
dec
pop
cmp
jb
xlat
fxam
subl
lret
jmp
aas
push
push
cld
and
sub
test
dec
sarb
or
jno
jge
addr16
stos
lds
daa
mov
cmc
push
dec
pop
jnp
jg
pop
cltd
arpl
pop
or
xchg
lret
fstpl
xchg
lods
sbb
mov
add
and
add
add
into
xchg
decb
xor
std
loope
jle
aam
aam
push
and
inc
mov
add
xor
mov
mov
xchg
int3
fistps
mov
in
fcoms
jnp
pop
lahf
jmp
or
jp
cmpsb
inc
mov
stos
dec
ja
adc
fldt
cmp
sbb
jmp
cmp
mov
xchg
dec
jecxz
and
pop
xor
fwait
insl
xor
cmpsb
and
sub
lods
push
adc
shl
sub
mov
xchg
lods
push
adc
inc
in
adc
js
mov
in
inc
dec
mov
jo
sbb
aam
outsl
mov
sbb
gs
stos
add
fisubrs
mov
jbe
mov
adc
cmc
enter
arpl
or
cmc
fimull
lcall
divb
lds
xor
jmp
pop
mov
fwait
clc
shll
mov
adc
mov
and
loop
enter
dec
stc
dec
push
dec
mov
popl
xchg
mov
sti
jbe
cmp
cld
lea
test
in
push
pop
out
pop
adc
sub
loop
pop
faddp
sub
add
cmc
fistpll
mov
mulb
push
das
out
and
jo
adc
mov
mov
leave
in
enter
in
shrb
push
dec
pop
ss
popf
sub
mov
xor
jp
subl
out
jb
xchg
out
jl
dec
add
mov
sub
aas
ficoml
push
dec
outsb
addr16
cmp
jb
das
adc
stos
or
mov
fdivr
mov
scas
or
je
cmp
cld
mov
fs
iret
repz
hlt
mov
cli
jns
mov
inc
roll
sub
das
rol
push
repz
orl
jb
pushf
ficoml
ret
push
xor
or
out
cmp
xchg
rclb
mov
pop
stos
dec
lea
loop
mov
mov
jne
repnz
repnz
pop
sbb
cmp
sub
cwtl
jae
sbb
dec
loope
mov
mov
mov
ret
add
pop
leave
scas
cmp
iret
jnp
cmpsl
imul
lahf
pop
mov
in
add
pop
sbb
jbe
loopne
jo
xlat
jb
pop
les
ficoml
cs
sbb
es
sbb
jno
xor
push
test
test
andl
hlt
jae
stos
cs
test
sbbl
shlb
outsb
int3
inc
and
sbb
mov
daa
into
sub
xchg
pop
add
loope
subl
inc
push
jb
mov
add
dec
hlt
mov
fwait
jl
inc
xor
inc
bound
pop
js
jl
iret
fs
mov
pop
and
xchg
adc
pop
mov
ds
cltd
jne
add
mov
es
jnp
lds
xorl
sbb
in
mov
jno
ljmp
sbb
cmpsl
mov
stos
mov
xchg
xchg
mov
negl
xor
mov
xchg
push
ret
aas
rcrb
add
xor
imul
pop
mov
adc
mov
test
fildll
ds
fwait
xchg
sbb
jl
push
jo
cmp
lret
das
divl
lcall
in
in
stos
adc
gs
push
push
or
xor
push
mov
pop
cmp
dec
pcmpgtb
pop
mov
movsb
sbb
cs
nop
add
fldcw
xor
jg
xchg
out
mov
call
inc
pop
sbb
push
ret
in
mov
adc
and
fildll
xchg
cmp
insb
and
ljmp
push
les
test
aam
xchg
and
int
push
rorl
decb
jns
in
xchg
lea
stos
roll
mov
lret
or
test
push
adc
sahf
int
add
test
or
aam
jo
push
mov
test
push
xor
dec
xchg
adc
scas
setno
mov
inc
movsb
push
les
or
jae
into
addr16
mov
push
lret
inc
pop
mov
adc
ja
jbe
sub
jl
adc
jge
jne
jl
sub
mov
nopl
mov
mov
adc
mulb
mov
push
cmp
dec
xchg
add
jecxz
mov
jg
mov
mov
jo
xlat
push
shl
idivb
cmp
jnp
inc
jecxz
xchg
outsb
dec
jb
and
push
xchg
nop
pop
mov
test
or
mov
sub
negb
ret
fdivl
inc
in
cltd
mov
test
xchg
mov
jmp
inc
push
fcmovbe
imul
ljmp
mov
addr16
xchg
imul
fistl
outsb
inc
mov
adc
in
es
jo
or
push
aaa
pop
xchg
inc
pop
into
mov
das
loopne
out
gs
sub
push
pop
int
push
cmpsb
xor
cmpsl
sar
sub
rorb
call
xchg
and
mov
jbe
enter
sub
in
orl
cmp
ja
das
imul
cwtl
out
push
cmpsl
xor
add
dec
hlt
faddl
mov
add
dec
and
mov
cmp
repz
mov
adc
sbb
faddp
ret
movsb
and
in
inc
xchg
add
jle
mov
das
or
cli
mov
ja
loopne
pusha
cli
pop
inc
sbb
dec
filds
addb
inc
push
dec
outsl
xchg
cmp
mov
imul
js
xchg
xor
push
mov
add
fcoms
mov
mov
lods
fildll
jns
cmp
sub
sub
xlat
sub
hlt
or
dec
or
fmull
sub
fwait
push
sbb
pop
sbb
lds
int3
lahf
and
or
and
popf
mov
ljmp
and
shl
fisubs
and
xchg
adc
xor
jmp
fs
jl
movsl
xor
sarb
jl
mov
sub
sbb
inc
daa
clc
repz
rcrb
fmulp
pop
das
xchg
cwtl
jns
push
lods
test
outsb
test
mov
nop
mov
fstpt
in
and
rcll
das
pop
xchg
cmp
pop
scas
pop
cs
rcll
aam
fistpll
dec
xor
jge
not
sbb
out
push
fimull
push
sub
sbb
pop
or
jp
lret
je
jecxz
pusha
loopne
sarl
icebp
insl
inc
fnstsw
adc
cmc
je
xor
pop
jle
push
xor
or
push
push
mov
ljmp
rorb
adc
inc
shlb
jmp
xor
subb
pop
add
outsl
mov
stos
push
negl
xchg
mov
leave
sub
out
aaa
int
test
mov
xchg
stc
stos
or
pop
jb
xchg
inc
arpl
cmp
xlat
pop
push
in
xchg
ds
mov
and
subb
pop
cmpb
jmp
aam
push
shll
rcl
mov
inc
out
push
sub
fldl
leave
xchg
clc
cmpsb
xor
jns
sub
mov
pop
push
int3
mov
dec
inc
addr16
repnz
pop
xchg
adc
je
mov
sbb
leave
cmp
pop
cmc
pop
dec
shl
cwtl
push
arpl
cmp
adc
sub
add
sub
dec
int
test
hlt
xor
jecxz
roll
rorl
inc
xor
dec
mov
sbb
aaa
sub
ja
lahf
test
xchg
aas
xchg
cli
popa
movsb
xor
aam
push
push
cs
loop
popa
js
jnp
fninit
movsl
enter
mov
jno
xorb
fistl
dec
push
sbb
inc
xor
pop
in
mov
mov
pop
pop
pop
stos
lcall
jnp
in
int3
mov
dec
addl
in
mov
orl
and
dec
mov
data16
test
jo
sbb
ficoms
icebp
sbb
cmp
jp
mov
in
addr16
inc
pusha
sti
push
lods
out
arpl
in
shl
dec
cmp
sub
xchg
mov
dec
xchg
jmp
scas
add
dec
pop
int
shl
jbe
add
mov
std
pop
and
xor
jbe
aam
shlb
cltd
jmp
dec
adc
fwait
aad
cmp
pop
jmp
sub
or
inc
pop
push
fldenv
loop
pop
shr
inc
enter
mov
orl
sub
and
pop
jnp
sub
hlt
and
fstl
pop
aas
pushf
data16
push
pop
hlt
arpl
pop
adc
push
aaa
cwtl
in
inc
test
add
orl
ret
scas
repz
ret
inc
sub
dec
dec
push
fidivl
cmp
sbb
cmpsb
fwait
inc
inc
outsb
pushf
jg
inc
mov
int3
mov
push
inc
mov
sbb
adc
dec
mov
xor
cwtl
in
or
or
enter
adc
popf
jle
shld
out
hlt
jge
into
sub
dec
jb
pop
ds
andb
add
adc
sub
jp
or
out
das
lods
das
xor
es
cmp
lds
test
cmp
adc
or
fmul
loope
test
sbb
cmp
daa
xor
stos
xor
xchg
andl
xchg
cmp
int
xchg
outsb
adc
jg
push
shlb
and
and
sahf
adcl
jecxz
and
ja
or
test
pop
xor
cmp
xchg
mov
bound
ret
daa
outsl
and
push
pushf
xchg
adc
popa
inc
testl
out
icebp
push
dec
dec
enter
xlat
cli
mov
cmp
push
stos
pop
push
mov
push
mov
adc
stos
fidivl
adc
inc
pop
jae
in
mov
popa
aaa
arpl
sti
icebp
pop
or
xor
pop
xor
fs
jecxz
sbb
xchg
aaa
fsubrl
fs
loope
mov
inc
cltd
sbb
push
cmpsl
inc
push
lret
push
pop
adc
nop
add
popf
mov
stos
jge
push
int3
cmp
xor
test
pop
aad
ljmp
dec
int3
push
inc
lret
daa
jns
shll
jnp
mov
je
mov
dec
cmc
sahf
or
stc
push
call
pop
data16
cs
jmp
or
cwtl
cmp
popa
lcall
rclb
test
cwtl
aad
inc
sbb
jbe
subb
mov
mov
mov
call
adcl
int3
shlb
or
fs
scas
sbb
nop
mov
lcall
xchg
sbb
std
cltd
add
rcl
btc
inc
cli
shrb
ljmp
movsb
lods
mov
add
out
push
mov
mov
test
mov
and
mov
inc
hlt
movsl
mov
icebp
das
test
div
sub
pop
fsubrp
pop
adc
shrl
and
outsl
jmp
fcomp
repnz
aas
iret
pusha
test
lods
dec
into
mov
pop
jmpw
lods
mov
dec
pop
push
daa
mov
push
jl
adc
pop
adc
inc
push
dec
in
mov
mov
cmp
mov
gs
test
fiadds
xchg
test
gs
push
push
pop
lods
sbb
push
sbb
loop
jle
jmp
jnp
pop
jmp
faddp
ljmp
pop
push
dec
movsb
flds
xchg
into
gs
mov
push
cmp
fidivrl
and
ds
aas
push
mov
push
arpl
sub
sti
pop
sub
test
adc
push
sbb
inc
fwait
jb,pt
xor
cmpl
lds
int
rcrb
and
or
push
mov
xchg
jmp
das
mov
pushf
negb
jmp
dec
sahf
adc
add
mov
or
stos
inc
sub
scas
and
stos
pop
pop
pop
imul
mov
roll
sbb
imul
iret
dec
cli
sbbl
adc
fdivr
mov
stc
xchg
xor
loop
dec
push
clc
in
shll
dec
cmc
pop
movsb
xor
scas
sub
xorb
fs
xor
xchg
pusha
pushf
mov
and
into
pushf
inc
cmp
push
daa
push
xchg
rcr
xchg
cmp
jno
es
nopl
nop
test
xchg
fs
cmp
inc
ljmp
mov
push
and
lods
push
cmc
addr16
xor
out
aaa
jno
fadd
sbbl
gs
cwtl
adc
cmpsl
out
dec
mov
jno
pop
aas
dec
cmp
inc
js
test
inc
push
hlt
or
dec
xchg
pushf
hlt
cmp
push
xchg
bound
mov
pop
or
mov
sahf
adc
cmpsb
or
add
mov
sbb
test
jae
stos
or
mov
nop
pop
mov
pop
push
or
cltd
sbb
mov
adc
mov
add
out
enter
int
adc
rcrl
lcall
ret
lea
in
adc
jae
cmp
jmp
ficoml
xor
stos
roll
mov
pop
jo
test
sbb
pop
lcall
mov
jl
dec
cmp
rolb
push
insl
jp
mov
sub
sar
gs
sub
adc
mov
pop
pop
pop
lcall
pusha
mov
stos
pop
cmp
stos
and
mov
pop
loop
xor
in
mov
jl
inc
mov
mov
shrb
lahf
dec
movsl
aaa
and
mov
mov
mov
stos
test
mov
cltd
mov
andl
fimuls
mov
sub
aam
jo
and
je
loop
pop
cmp
pop
push
or
mov
jmp
and
inc
rcr
orl
lret
sbb
lcall
inc
cli
mov
sbb
xor
sub
fisubs
mov
cmp
pop
dec
mov
inc
out
push
arpl
ret
pop
add
xor
push
add
jb
jl
movsl
mov
mov
push
pop
mov
int
fwait
mov
in
and
xchg
jbe
cmpsl
mov
or
movsl
dec
gs
outsl
test
sbb
cmp
jno
adc
lock
cwtl
loope
pushf
jp
pop
sub
fildl
shrb
jle
adc
push
jl
push
cmp
add
clc
inc
sub
pushw
sub
sbb
cmp
ds
clc
lret
js
orb
fisubs
fstpl
push
ret
in
cld
add
mov
ss
push
cmpsl
sbb
nop
jbe
xchg
lahf
mov
mov
mov
mov
adc
cs
cmpb
inc
outsl
mov
fnstcw
push
adc
pop
dec
fs
ds
lahf
clc
push
add
mov
and
inc
mov
adc
xor
scas
cmc
mov
std
js
dec
in
push
jecxz
ret
xchg
xchg
inc
repz
outsl
std
jo
mov
or
xchg
sub
and
cmp
push
jno
sbb
bound
pop
mov
out
scas
or
int
fistl
inc
jecxz
enter
push
cmp
jbe
outsb
insl
cli
lds
inc
loope
gs
inc
sarb
imul
lds
xorb
push
gs
push
cmp
pop
and
mov
es
fstl
clc
rclb
add
ror
test
stc
outsb
in
in
es
push
pusha
iret
xor
clc
mov
inc
cmpsl
in
fsubrs
mov
inc
xor
cltd
xor
cmp
pop
jne
fidivs
lds
inc
mov
sbbl
hlt
mov
jg
or
xchg
lds
test
lods
imul
inc
adc
test
mov
inc
sub
bound
gs
or
push
pop
lahf
pushl
xlat
mov
imull
adc
dec
fwait
scas
arpl
adc
sub
fdivl
loop
iret
repnz
pop
or
ja
mov
jecxz
ljmp
jge
pop
cmpsb
inc
pop
dec
inc
dec
shl
pop
popw
fistpl
pop
jecxz
mov
mov
jmp
sbbl
and
mov
insb
adc
test
dec
dec
jge
jns
lods
fadds
and
mov
jno
add
lcall
inc
pop
out
lcall
sbb
test
rcrb
setg
lock
mov
jp
gs
xor
mov
fildll
repz
push
enter
lea
or
xchg
adc
push
aaa
pop
sahf
loope
xchg
jno
pop
jp
repnz
add
scas
mov
std
mov
fs
sahf
xchg
add
scas
outsl
inc
jl
mov
dec
repz
in
mov
scas
pop
mov
inc
addb
jl
mov
daa
pop
jbe
test
pusha
mov
pop
mov
jae
and
sbb
cmpsb
inc
bound
jge
lcall
xor
testl
lcall
add
jnp
adc
data16
push
xchg
test
pop
xchg
inc
xorb
rclb
jmp
and
cmp
fbld
jae
cmp
arpl
cmpsb
jge
sbb
idiv
iret
xchg
je
ret
cs
cwtl
dec
aaa
addr16
in
and
test
cwtl
repz
ljmp
testb
cs
addr16
movsb
xchg
lea
bound
enter
mov
ret
popf
lods
loopne
into
out
xor
sub
jo
sahf
and
adc
int
test
xor
dec
out
popf
into
inc
dec
inc
mov
stos
shr
cmpsl
ja
dec
jno
loop
aaa
lret
pop
push
jl
das
xchg
mov
mov
inc
in
cs
ljmp
mov
sbb
mov
add
test
add
xchg
sar
sbb
lds
test
dec
push
adc
adc
fisttps
or
sarl
xor
in
mov
je
xchg
or
mov
cmp
sbb
xchg
and
repz
adc
or
sbb
sbbb
test
scas
jmp
push
shrb
daa
mov
dec
xchg
pushf
jmp
xor
inc
push
sbb
pushf
mov
adc
dec
in
inc
or
mov
mov
or
cs
mov
xchg
sbb
pop
cld
add
icebp
or
adc
insb
jge
fcompl
jge
sbb
fs
jmp
mov
ds
push
movsb
add
xchg
jb
and
fcmovnb
cmp
aam
outsl
in
inc
mov
inc
cmovns
cmpsb
testl
sbb
mov
leave
int3
pushf
add
dec
xchg
iret
or
inc
jne
xor
pop
test
decb
cmp
pop
adc
pop
and
in
aam
xor
sarb
push
jg
adc
adc
inc
shl
mov
add
ret
cli
gs
ret
pop
inc
mov
jno
sar
sti
xlat
jns
xor
flds
imul
mov
xor
push
add
cmp
push
insb
add
lahf
adc
repz
jmp
ret
nop
xor
les
movsl
outsl
mov
mov
sbb
out
jp
ja
cli
cmp
push
dec
pop
cmp
mov
or
leave
cmp
repz
cmpb
fidivrs
push
mov
popa
push
and
repnz
push
xorl
cmpsl
lock
repnz
movq
mov
and
hlt
fnstsw
mov
in
dec
pop
mov
rcrl
repz
dec
call
les
and
mov
divl
pop
jmp
rcrb
dec
push
out
xchg
pop
cmp
mov
sarb
wbinvd
loop
jnp
insb
jl
add
icebp
pop
and
dec
add
mov
in
movsb
repz
push
xchg
subb
xor
xor
pop
push
cmp
xor
mov
pop
sarb
cmpsl
mull
push
sbb
gs
inc
imul
popa
push
cld
repnz
dec
mov
lods
jg
pop
idivl
int
outsb
pop
fcmovbe
add
arpl
mov
mov
mov
sbb
movsb
sbb
incl
idivb
dec
ja
loopne
mov
ljmp
popa
lods
es
dec
sub
xchg
or
or
sbbb
xor
pusha
jl
call
jno
repz
fisubrs
jg
loop
mov
insl
scas
add
pop
adc
sub
nop
mov
scas
flds
cmp
ret
sbb
popf
sarl
mov
mov
sub
aas
ret
pop
into
cmp
cmp
fsubl
or
pop
push
xor
les
xchg
and
movsb
or
cltd
dec
cmp
sub
mov
pop
movsb
outsb
imul
mov
cld
pop
mov
jge
jp
push
or
mov
cmp
lock
test
mov
jno
sub
adc
jmp
fadds
add
jle
rolb
fsubr
lock
sti
rol
icebp
mov
mov
cmp
arpl
divl
int3
sbbb
add
lret
iret
call
std
xchg
xor
out
adc
imul
cmp
pop
xchg
sub
jecxz
mov
add
mov
mov
shll
hlt
pop
out
xchg
xor
shlb
push
rol
add
ds
popa
leave
andb
jb
sti
xchg
adcb
sub
adc
jb
pop
jns
in
out
add
or
into
fdivrl
xchg
pop
ja
xchg
xchg
icebp
inc
mov
cmp
in
dec
and
hlt
dec
and
shll
inc
not
xor
cs
jbe
mov
sbb
add
and
pushf
jg
stos
push
mov
out
push
sbb
jbe
mov
pushl
push
popf
movsb
das
inc
mov
int
jle
arpl
fnsave
test
xor
push
fisubrl
xchg
or
sbb
gs
inc
mov
cmc
gs
scas
xor
loop
cs
cmp
jo
xchg
mov
je
outsb
add
daa
sub
stos
add
push
mov
push
xor
sahf
out
inc
fimull
mov
mov
dec
push
addb
jo
cmp
jbe
inc
pop
inc
aas
xor
add
loopne
loop
sbb
mov
aad
sbb
pop
inc
add
in
and
pop
lcall
jl
mov
push
and
cli
lods
push
xchg
movsb
loop
mov
adc
push
mov
and
dec
jo
movsl
mov
and
add
and
jae
pushf
cmp
inc
mov
sub
add
hlt
in
daa
and
mov
sub
aad
loopne
shll
loop
int3
aad
dec
mov
das
cld
dec
addr16
push
repz
sbb
mov
jbe
push
cmp
mov
xor
stos
test
sub
xchg
push
lret
adcb
mov
inc
push
fisttps
sarl
cwtl
mov
imul
fs
cmpsl
dec
jp
sub
pop
cmp
ljmp
les
repnz
ret
aad
daa
cmp
call
stc
mov
daa
andl
clc
or
testl
and
loop
ss
inc
mov
adc
mov
xor
inc
icebp
mov
mov
and
pop
push
nop
cmc
or
or
mov
shll
mov
mov
jbe
jns
jmp
fists
mov
outsl
mov
dec
jo
push
clc
inc
ds
cmpb
testl
mov
lret
jl
bound
push
insb
out
out
and
mov
sub
mov
xchg
fwait
iret
cmp
iret
jno
jg
jle
adc
pop
adc
aas
movsb
lret
lahf
xor
sbb
or
je
dec
pop
push
sub
jne
jle
jmp
into
or
mov
xchg
xor
movb
rclb
clc
daa
inc
mov
fwait
sub
testb
mov
jnp
or
stc
jne
iret
pop
hlt
movsl
iret
pop
push
add
xorl
pop
in
addr16
add
stos
mov
shrl
push
jmp
inc
sti
add
mov
push
inc
cmc
das
push
loop
ja
cmp
lods
test
mov
in
lcall
inc
data16
sub
fstpt
sbb
pusha
into
bswap
fwait
jns
or
call
std
and
and
lret
and
mov
aaa
mov
aam
mov
adc
pop
add
adc
mov
jge
and
das
sbb
shr
dec
xor
ljmp
scas
int
ds
push
fbstp
adc
sub
or
scas
lahf
cld
outsb
jge
and
jmp
addr16
adc
gs
mov
setne
dec
and
daa
inc
mov
cli
jmp
mov
clc
ret
and
add
mov
xchg
ret
add
in
int
push
add
pop
mov
pop
rolb
pop
in
stc
stos
aaa
push
test
xor
fs
call
into
scas
dec
into
scas
pop
inc
popa
mov
cltd
clc
mov
insb
xchg
dec
lock
stos
push
mov
fisttpll
repz
and
mov
push
jno
pop
test
sub
gs
adc
mov
aas
jnp
aaa
add
insb
lds
shrb
aaa
leave
cltd
test
cmp
cmp
cmp
jae
hlt
gs
pop
dec
dec
int3
sbb
mov
mov
js
add
cwtl
or
rcrl
ss
dec
and
pop
fdivl
enter
sub
ljmp
pusha
push
or
jbe
ret
leave
sti
push
or
cmc
andl
push
in
xor
enter
xlat
cmp
pop
mov
xor
lret
repz
pop
es
and
or
ret
fimull
cmp
push
and
fiaddl
sbb
ret
fwait
dec
xchg
imul
out
add
and
aas
cmc
outsb
push
pop
xchg
push
mov
out
adc
jae
notl
dec
mov
ss
call
mov
cmpl
in
jae
cmp
cmp
add
shlb
arpl
int
cmp
aam
stc
aas
out
mulb
pushf
cmp
and
in
arpl
ds
push
add
jno
out
test
sbb
hlt
addl
jp
inc
test
fidivrl
push
mov
dec
sbb
ljmp
mov
push
pop
pop
dec
data16
cmp
or
and
push
cmpsl
hlt
jg
call
lret
mov
add
push
cmp
push
and
xchg
lods
int
fwait
adc
lea
jge
xchg
repz
es
push
stc
stc
ja
and
xchg
int
dec
jb
xchg
xor
sarl
mov
adc
sbb
mov
add
add
mov
out
push
dec
dec
inc
push
inc
daa
inc
and
add
stos
imul
xchg
mov
push
sub
jle
outsl
out
and
andl
insl
int3
icebp
mov
clc
sbb
and
aaa
pop
pop
inc
inc
mov
jne
lret
shrl
test
fwait
and
push
mov
mov
jmp
rorb
adc
cld
jno
pop
pop
sub
mov
movsb
mov
ret
pushf
push
inc
mov
mov
pop
lcall
lds
aaa
sub
fiadds
pop
test
pop
dec
mov
aam
sub
popa
push
cmpsb
outsb
nop
xchg
iret
cmpsl
or
dec
or
cld
outsl
xchg
xchg
xor
int
adc
mov
push
rcll
mov
mov
adc
sub
mov
push
daa
mov
mov
scas
inc
jo
lahf
loopne
mov
dec
mov
test
fs
sub
fcmovb
inc
aad
inc
mov
cmp
adc
mov
add
xor
int
mulb
mov
pop
adc
sbb
out
mov
aam
add
jne
jmp
push
fucomip
in
dec
add
stos
dec
cmpsl
lods
idivl
dec
mov
mov
cs
fs
in
testl
jg
lret
and
div
mov
mov
mov
pop
fsubr
out
loopne
in
jle
leave
push
das
xorl
adc
mov
and
mov
mov
int
pop
jbe
pushf
out
fwait
cmp
leave
xchg
movsb
mov
inc
xchg
pop
push
mov
fadds
notl
and
data16
or
ss
data16
adc
mov
or
in
loopne
fadds
jecxz
xchg
dec
sete
mov
pop
ret
xchg
cmpsl
dec
mov
fwait
push
cmp
sahf
fwait
sub
mov
in
jecxz
or
test
dec
movsl
jmp
fildl
mov
popa
mov
sub
inc
xchg
sbb
xchg
or
loopne
fdivs
test
lods
cmc
or
add
jb
cmc
mov
andl
jmp
inc
cltd
insb
adc
dec
mov
add
bound
inc
mov
sbb
lods
addr16
pop
outsb
xchg
xor
fldcw
xor
in
or
int3
cmpsl
mov
in
pop
ficoml
adc
shlb
mov
stos
jb
and
popa
dec
or
xchg
rolb
sub
leave
cmp
enter
sahf
icebp
pop
test
into
in
das
xor
jge
mov
pop
movsl
push
rcrl
cmpsb
insl
sub
and
gs
and
mov
push
and
add
ja
mov
mov
dec
fsts
mov
cltd
loop
mov
out
or
jmp
and
or
jge
jmp
sbb
pop
xlat
lret
dec
xchg
or
gs
mov
adcb
jg
test
faddl
lcall
stos
dec
jle
push
mov
lods
negl
push
cwtl
lods
fnstsw
in
mov
movsb
out
sbb
sbb
and
xlat
add
scas
jns
sbb
pop
ss
jmp
out
mov
push
lahf
cmp
sbb
mov
shll
adc
test
daa
adc
mov
pop
int
add
wrmsr
outsl
pushaw
mov
aad
ficoml
push
push
repz
int
fcoms
mov
and
dec
and
int
xchg
lods
add
cltd
pusha
add
jno
and
or
push
cli
outsl
cmp
inc
movsl
push
pusha
out
mov
add
loopne
aad
daa
int
int
and
and
sbb
xchg
repz
test
sbb
or
std
add
sub
insl
fistpl
repnz
addr16
xor
shr
insb
aad
mov
js
sbb
xchg
in
lret
lcall
xor
adc
rorb
int
test
mov
repz
push
daa
sarl
out
cmp
xorb
cmp
mov
popf
pop
sub
hlt
xchg
add
push
mov
adc
clc
in
scas
or
xchg
or
mov
aad
fs
cmp
outsb
notl
lret
jno
iret
xchg
xorl
rol
push
sub
ret
mov
jp
fcoml
push
dec
mov
jg
xchg
sar
orb
fiaddl
sti
je
pop
or
ds
icebp
add
ret
jge
cmp
mov
pop
bound
div
push
sti
sub
or
cmp
mov
mov
imul
movsb
into
pop
subl
addr16
mov
pop
add
mov
push
lea
aad
mov
dec
cli
mov
loopne
int3
lock
test
push
jmp
adc
xor
faddl
fdivl
out
enter
inc
adc
pop
mov
mov
cmp
es
aaa
mov
cmpl
insl
js
fwait
test
push
orl
push
outsl
push
jl
adcl
notl
jo
mov
lods
fldl
inc
jbe
pop
jns
pop
lcall
dec
inc
nop
push
mov
push
mov
aas
inc
mov
lods
les
sbb
sti
stc
cli
sub
shr
jle
push
sub
cmc
clc
mov
mov
mov
icebp
repnz
lods
cltd
sbb
test
push
scas
or
movsb
sub
adc
jg
cmp
or
xchg
jbe
mov
ficomps
sbb
mov
insl
int
or
data16
fnstenv
cmp
pusha
insb
xchg
and
jae
addb
lods
add
push
pop
xchg
and
cmp
adc
jnp
sarb
push
fwait
adc
ss
and
mov
add
mov
ljmp
cmpsl
mov
lea
mov
cmp
push
cmp
xor
mov
rcr
stos
aad
push
call
mov
sbbb
mov
or
pop
aaa
inc
dec
jmp
or
imul
mov
cmpsl
shrl
sub
call
out
mov
pop
mov
adc
push
mov
adc
cmp
out
dec
icebp
xchg
add
xor
in
xchg
mov
or
std
adc
mov
andb
adc
mov
fbstp
add
cli
dec
sub
xor
push
std
xchg
inc
pushf
repz
push
out
outsl
pop
stos
fwait
lret
push
xor
jmp
test
add
mov
stc
mov
in
add
or
out
sahf
mov
mov
push
insb
mov
into
or
ja
scas
int3
dec
gs
xchg
or
icebp
xor
cmpsb
push
jno
jae
cmc
fwait
xor
sbb
mov
les
jae
pop
fidivl
nop
daa
or
stos
negb
mov
inc
sahf
pop
push
movsb
xor
ja
push
daa
repz
sbb
cmpb
add
popl
mov
mov
inc
mov
mov
ss
pop
dec
pop
pop
mov
lahf
lods
xor
sub
mov
loope
daa
sub
mov
mov
mov
nop
lea
stos
mov
pushf
stos
xchg
shld
sbb
adc
pop
and
in
lret
enter
std
inc
xor
mov
xor
pop
cli
add
bound
mov
and
and
sub
lds
sarl
jae
mov
cmp
andb
lcall
movsl
mov
mov
insl
push
xchg
in
rcrl
push
int
mov
mov
pop
push
mov
mov
fcmovnbe
mov
jbe
pause
fdivl
outsl
dec
dec
sbb
les
bound
jmp
dec
fs
rolb
loope
leave
lods
dec
inc
jns
xor
mov
sbb
or
cmp
or
dec
cmpsb
es
sete
outsl
mov
mov
jo
loope
mov
mov
nop
push
xchg
xchg
mov
push
cmpsb
movl
mov
lds
lahf
int
push
inc
xor
xchg
add
in
cltd
gs
add
and
xchg
fdivrl
sbb
scas
pop
ret
in
jl
inc
enter
push
push
pop
xchg
in
lods
adc
int3
loope
jg
adc
movsb
out
popf
lock
or
fdivr
dec
ja
push
fmul
cmp
pop
and
jmp
push
shl
sahf
fistps
inc
mov
xchg
push
sbb
dec
test
loope
jns
mov
sub
aaa
dec
dec
les
sbb
xor
les
mov
aaa
jp
clc
mov
sqrtps
pusha
repnz
lret
jae
sub
stc
push
jb
test
fwait
std
mov
cmp
push
out
sub
pop
xor
mov
fidivs
xchg
data16
push
gs
mov
aaa
ljmp
stos
fdivr
push
je
lock
pop
cmpsb
outsl
xchg
loope
outsl
fisubl
dec
into
jne
mov
jg
mov
sbb
adc
jne
xchg
shrb
add
sbb
test
scas
mov
jo
jl
jle
fwait
or
push
adc
dec
in
mov
enter
leave
mov
adc
pop
sbb
sbb
xor
incl
inc
cmp
loopne
inc
add
cmp
sarb
ss
fadds
push
andb
inc
std
sub
stc
cwtl
jmp
sub
sti
cmc
jns
jne
fldt
pop
xor
or
imul
mov
testb
sbb
lock
mov
aam
or
pop
orb
faddp
jl
shrl
out
sub
ret
fisubrs
int
jmp
repnz
mov
std
sub
imul
test
fwait
adc
mov
or
or
lock
adc
sbb
sbb
fcmovbe
es
insb
cmpsl
jns
or
dec
push
ss
mov
daa
dec
aaa
in
jg
out
mov
mov
gs
xor
sub
fwait
cmp
hlt
popf
fsubrs
push
push
jbe
add
mov
out
mov
inc
pop
lock
cmp
lods
and
cmp
outsb
pop
mov
gs
or
fadds
push
dec
add
clc
out
push
add
push
dec
push
mov
mov
cltd
pushf
lret
xchg
iret
idiv
inc
outsb
jecxz
adc
mov
mov
rolb
push
stc
jg
cmc
xor
lods
push
fiaddl
out
and
pop
in
fwait
xor
add
jno
mov
fwait
je
xor
loope
jmp
pushf
jno
lea
lock
sbb
jno
mov
ss
fstpt
popa
int3
in
mov
ss
cmpsb
int
aas
in
dec
jg
jmp
popf
fs
cwtl
mov
out
sbb
add
jb
pop
inc
cli
fisttps
mov
scas
out
int
inc
inc
testl
push
mov
cmpsb
outsb
xor
adc
xchg
loop
lock
popa
js
push
inc
mov
pop
mov
cs
dec
fwait
jp,pn
mov
adc
int
cltd
mov
push
aam
js
push
cmp
xor
push
cmp
dec
dec
cmp
push
mov
xchg
inc
or
enter
mov
xor
jge
imul
popa
mov
inc
roll
mov
movsb
pop
out
clc
insl
ja
in
inc
xchg
push
repnz
jmp
mov
or
dec
ljmp
push
lea
test
mov
mov
js
jae
movb
mov
in
insb
fs
sbb
insl
insl
pop
inc
cwtl
testl
lea
adc
popf
int
adc
dec
jbe
into
jle
stc
mov
push
idivb
push
sahf
shrb
out
xchg
testb
and
xor
or
mov
data16
xor
inc
int
icebp
dec
pop
shlb
pop
iret
scas
mov
cmp
mov
xchg
xor
sub
add
ljmp
inc
mov
test
ja
push
mov
xchg
fninit
push
mov
push
or
rolb
mov
out
mov
pop
push
std
push
test
cmpsb
push
loope
stos
stos
js
add
icebp
pop
jmp
sub
testl
mov
mov
cli
in
lds
xchg
and
cmpsl
mov
sub
clc
int
push
fwait
mov
into
jb
in
add
xchg
outsb
sub
mov
xchg
push
xabort
pop
and
iret
imul
and
shll
rcll
shlb
testb
mov
popf
iret
sbbb
xor
rolb
jl
mov
jle
aaa
cmpsb
int3
nop
in
sbb
or
arpl
rcrb
jle
hlt
mov
xor
bound
push
mov
pop
inc
push
xchg
xlat
addr16
pmullw
add
mov
lret
add
nop
push
dec
xor
mov
sbb
push
pop
or
push
xlat
xor
push
xchg
js
aaa
add
cmp
push
mov
notb
loope
insl
insb
aas
loop
outsl
inc
rclb
mov
aad
or
sar
mov
xor
scas
jb
pop
xchg
mov
pop
pop
enter
repnz
shlb
xchg
pop
call
mov
sbb
adc
push
frstor
arpl
or
icebp
lcall
aaa
inc
cltd
xchg
fsubr
dec
mov
fdivs
cmpsl
or
stos
mul
inc
jg
xor
cmp
pop
hlt
ljmp
push
fwait
pop
sub
jae
push
pop
shr
jle
add
adc
fs
lods
jnp
jge
sub
mov
mov
fstp
xchg
iret
scas
pop
popa
inc
iret
or
sti
addb
inc
sbb
jl
cmc
sub
call
sub
push
bound
lods
jns
sub
jo
je
inc
pop
and
pop
jb
dec
xchg
jl
mov
push
fiaddl
mov
decl
in
in
xor
pop
cmc
jae
stc
add
sti
pop
lods
adc
jb
repz
dec
mov
adc
insb
adc
andb
push
mov
push
in
imulb
scas
mov
fwait
ljmp
cli
adc
lret
mov
pop
aas
pop
ljmp
je
pushf
pop
or
cmpsl
cltd
lds
adc
fnsave
inc
mov
outsl
push
inc
jo
call
mov
lock
pop
cmp
sbb
sarl
sub
jbe
cli
aam
je
or
mov
sub
add
sbb
or
nop
scas
mov
cmp
jae
xchg
pop
out
lcall
push
dec
adc
lods
repz
mov
mov
mov
test
inc
repnz
inc
dec
movsb
pop
in
test
sbb
cmpl
dec
jno
mov
insl
mov
push
call
xorb
repz
xor
jne
push
xorb
sti
xchg
dec
mov
arpl
mov
and
mov
sahf
mov
pop
sarl
loopne
imull
es
outsl
bound
dec
xor
daa
scas
xchg
loope
dec
xchg
nop
adc
pop
cmp
popa
mov
push
imul
jle
xchg
jo
jbe
pause
ss
mov
outsb
xor
jne
add
and
jecxz
call
sub
jge
bound
not
mov
insl
out
in
cmp
mov
pusha
dec
push
inc
test
rorb
cmp
sub
xlat
or
test
push
cmp
add
aad
lods
das
xchg
xor
push
sahf
mov
xchg
xor
out
pop
adc
xchg
out
mov
cmc
sbb
sub
imul
push
jne
les
push
sti
xor
pop
pop
iret
lcall
mov
call
mov
pushl
jae
sti
pop
or
and
lret
sbb
arpl
jmp
mov
jmp
shl
ret
jne
mov
adc
dec
dec
cmpsb
jae
add
popf
les
inc
mov
out
dec
int
xchg
popa
adc
roll
dec
loopne
pop
mov
fcoms
dec
out
in
orl
and
xchg
inc
and
xlat
or
jno
xchg
inc
dec
sbb
push
pop
scas
in
sub
jp
push
dec
jne
add
arpl
cmp
repz
cmp
stc
ror
enter
mov
je
adc
gs
add
jnp
aam
xor
adc
repz
push
fisttpll
pop
mov
enter
xlat
cmp
sbb
loop
xchg
adc
xorl
pusha
mov
loopne
mov
adc
inc
xor
jle
adc
mov
enter
sbb
in
imul
repz
shrb
gs
jo
pop
mov
jno
jmp
mov
outsl
mov
cmp
cmp
sbb
push
sub
stos
mov
icebp
mov
push
inc
jmp
add
sbb
and
xor
shl
imul
xor
stos
cmpsb
out
push
pop
dec
int
jae
xchg
call
fsubrs
xor
fstp
mov
sti
andb
cmpsl
out
fcomps
pop
pop
adc
mov
mov
cmp
push
ljmp
out
imul
sub
std
iret
adc
mov
in
fldt
push
mov
sub
or
mov
les
mov
and
jg
xor
xchg
sti
cmpsl
or
add
cmpsb
aam
mov
pop
cmp
arpl
mov
dec
lock
gs
mov
push
arpl
sbb
ret
push
outsl
push
cmc
pop
and
repnz
sub
mov
sub
not
cmp
in
push
pop
add
stos
in
adc
and
iret
insl
mov
sarl
mov
in
out
leave
dec
out
and
mov
pop
in
pop
inc
jle
aaa
mov
pop
cmp
jl
xchg
inc
imul
xor
and
ja
das
xor
enter
add
adc
pop
xor
xor
test
repz
adc
aaa
cmp
out
jae
std
aam
and
fwait
cmc
lahf
shrl
loope
cs
ror
or
mov
mov
test
sti
mov
mov
cmp
fists
rcl
xor
jecxz
jbe
or
into
lcall
frstor
popf
cld
or
sbb
enter
repz
leave
inc
sub
push
inc
mov
pop
data16
into
sbb
ss
enter
rclb
fstps
xor
fstl
dec
out
mov
xchg
stc
adc
sbb
and
cmp
leave
push
mov
sub
cmc
orb
add
hlt
mov
ss
xchg
loopne
or
int
jl
arpl
or
imul
bound
mov
fisubs
xchg
notb
pop
lods
addr16
imul
and
aam
cmp
lret
cmp
sbb
rolb
dec
jl
inc
sub
sbb
mov
mov
fcoms
movsl
adc
daa
loope
scas
sub
sub
jmp
push
data16
or
pop
pop
or
shll
pop
cmp
pushl
stos
iret
push
rcr
adc
cmp
loop
addr16
or
add
popa
outsb
add
data16
test
xchg
fcoms
mov
dec
cmp
jnp
xchg
push
jns
mov
add
fstl
pop
daa
aaa
sbb
in
ljmp
in
pop
xchg
inc
xorl
out
call
in
xor
imul
or
sub
xor
mov
pop
scas
das
xchg
mov
test
dec
fwait
dec
es
cmp
nop
cltd
out
cmpsl
mov
mov
xchg
cmp
lods
jb
fldcw
mov
adc
in
dec
mov
pop
xchg
mov
popf
imul
je
fildl
push
sar
orb
sub
imulb
aam
ljmp
imull
cmp
pop
enter
jns
lods
or
mov
daa
xchg
cmp
sbb
mov
mov
movsl
mov
into
aam
imul
mov
jmp
push
cmp
xor
outsb
ljmp
int3
data16
mov
push
int3
mov
imul
movsb
push
mov
push
xchg
xor
sarl
pusha
mov
add
popf
test
movb
mov
andb
jecxz
lods
loope
mov
xor
dec
push
out
lock
xchg
das
xor
inc
push
scas
out
jg
mov
or
sarl
outsl
add
popa
adc
sahf
cmp
mov
xor
jne
daa
xchg
add
lahf
mov
push
ljmp
insb
shlb
int3
ss
jne
stos
aad
rclb
testl
cs
jae
add
push
mov
mov
enter
imul
icebp
outsl
inc
xchg
jp
rorl
sbb
icebp
aaa
mov
jle
mov
push
inc
cmpb
test
jmp
cmc
fld
push
inc
icebp
fdivrs
out
xchg
pop
sub
out
mov
arpl
xchg
out
or
mov
cmpl
int3
outsl
je
pop
mov
arpl
inc
jnp
loopne
push
xchg
fwait
pop
mov
pop
xchg
sti
test
in
clc
xchg
addr16
mov
pop
mov
adc
jge
sub
fwait
cmpl
jbe
stos
cmp
push
cmpsb
cs
fisttpl
scas
jge
stos
sub
into
daa
aam
mov
cwtl
jbe
cs
mov
inc
and
mov
mov
jae
shlb
in
jge
xchg
adc
mov
repnz
inc
lds
cmpsb
pusha
mov
call
bnd
std
pop
int
in
je
in
mov
add
push
push
repz
out
stc
in
dec
std
test
mov
dec
insb
pop
mov
out
test
scas
xor
rcll
mov
aad
inc
in
sbb
cs
adc
add
outsl
ja
mov
fisubl
loope
inc
inc
repz
stos
lock
xchg
push
jle
adc
adc
insb
xchg
mov
mov
and
outsl
adc
push
ja
add
xor
imul
pusha
xchg
dec
inc
inc
mov
loop
and
jns
jbe
jns
push
popf
nop
cmp
cs
mov
pop
movsl
cmp
cmp
mov
mov
mov
sbb
pop
loop
inc
je
pushf
cmp
adc
mov
ret
xor
mov
push
xor
lea
inc
sub
push
sub
sbb
add
lcall
jmp
add
in
mov
lods
inc
ja
cmc
or
hlt
test
in
cmpsl
mov
aaa
lret
xchg
js
enter
mov
mov
in
insl
and
sbbb
movsl
jbe
repz
mov
jnp
shrl
sub
out
fwait
fwait
in
sbb
dec
mov
lret
bnd
mov
push
adc
fcom
mov
lahf
cli
stc
sub
aam
push
jp
sbbl
pop
pop
mov
in
adc
stos
xchg
push
or
jo
pop
cld
out
dec
popf
push
je
fs
xchg
jg
cmc
int3
or
gs
mov
cmp
ss
jno
push
mov
add
xchg
dec
std
cs
or
sub
and
fldt
aad
lcall
fsubrs
sub
xchg
pop
aam
push
adc
gs
mov
pop
or
sbb
daa
mov
dec
fchs
into
insb
xor
dec
scas
jg
fs
daa
ljmp
bound
leave
mov
aad
popf
fwait
or
jne
insl
test
sbb
divb
pop
dec
and
xlat
add
out
dec
mov
mov
testl
mov
out
test
push
or
xor
xor
addl
jnp
pop
cwtl
mov
mov
insb
lods
pop
lods
lahf
jnp
lahf
lods
inc
shr
jmp
or
mov
add
sub
sbb
insl
js
std
or
dec
out
adcb
pop
out
popf
lock
loop
mov
mov
xchg
mov
cmp
js
mov
movsb
lds
stc
ja
cmpsl
xchg
lods
es
lcall
movsl
or
or
hlt
lds
cwtl
in
or
test
pop
pop
les
lret
movsl
je
out
adc
stos
ret
leave
push
dec
daa
push
fwait
jle
cmp
das
mov
roll
cli
add
mov
mov
jbe
cli
test
pusha
and
xchg
fcoml
xchg
sti
xchg
clc
and
or
bndstx
int3
push
inc
add
xchg
les
inc
mov
jns
mov
cs
cmp
sbb
xor
mov
mov
push
xor
lcall
xor
sbb
mov
into
cmp
dec
outsl
addl
jmp
or
xchg
inc
ds
cmc
movsl
pop
dec
das
cmc
xor
mov
outsl
das
stos
xchg
into
push
loope
cmp
pop
popa
cmp
pop
or
pop
fimull
rol
push
mov
in
push
or
sbb
adc
je
mov
das
pop
addl
or
push
sarl
push
sbb
test
repz
mov
mov
ret
add
fs
scas
add
stos
mov
mov
jbe
inc
pop
cmpsl
adc
mov
dec
push
mov
jg
dec
cli
xchg
push
xor
lds
lods
repnz
sub
iret
lret
loopne
shlb
cmc
pop
dec
mov
sarl
xchg
mov
dec
adc
or
mov
or
in
sub
mov
out
xchg
cmpsl
shrl
repnz
mov
hlt
push
jle
inc
call
push
outsl
dec
adc
daa
or
fisttps
outsb
lock
inc
repz
pop
mov
xchg
or
test
mov
js
pop
cmc
inc
in
or
adc
inc
insb
xor
sbb
dec
xor
incl
flds
movsb
xchg
fstp
mov
fidivl
inc
mov
and
mov
inc
jns
mov
lret
xchg
jne
xor
test
push
xor
mov
insb
loop
ljmp
add
sbb
movsl
fistpll
pop
and
adc
push
cld
out
adc
aaa
insb
mov
xchg
push
mov
add
add
lods
mov
mov
mov
cld
dec
push
gs
iret
push
in
push
fdivp
stos
cmp
sahf
dec
inc
imul
add
push
rcr
and
mov
adc
mov
lcall
ja
jmp
sti
inc
sub
pushl
jb
xlat
mov
jo
xchg
lods
test
test
sbb
hlt
rorb
int
jle
ja
push
add
and
test
push
add
mov
adc
or
rorb
sbb
shr
daa
sbb
ljmp
pop
cmc
xor
pop
pop
lods
push
pop
and
cwtl
stc
pop
and
test
mov
push
shll
add
popa
and
jnp
mov
sbbl
stos
xor
xor
dec
add
xchg
pop
jmp
lahf
mov
fnstenv
inc
push
lock
sub
jge
cmp
stc
push
inc
inc
lret
pop
cmp
xor
or
push
gs
mov
loopne
rorb
out
xchg
cmp
test
xor
fsubrl
mov
cmp
sti
pop
roll
dec
push
aam
inc
stos
adc
push
mov
inc
fwait
jnp
in
outsl
ds
mov
mov
xchg
jl
jmp
sbb
popa
into
mov
daa
outsb
mov
xchg
inc
jns
jl
mov
lret
scas
insb
inc
stc
movsb
cli
and
aam
arpl
sbb
testb
xchg
xchg
imull
sbb
movsb
in
mov
fs
ds
lea
pop
fiadds
sahf
lock
add
mov
dec
out
js
fmull
push
repz
repnz
push
jbe
outsb
xor
jae
and
les
jnp
mov
push
in
pop
fs
inc
push
jo
adc
mov
enter
xchg
pop
adc
add
or
sub
xor
js
push
fildl
cmp
or
ja
xlat
pop
lcall
mov
push
xchg
dec
xchg
pop
into
sti
mov
sub
sti
add
sub
fcoms
in
xchg
or
push
fwait
insl
aas
loop
lds
int
adc
cmp
xchg
add
push
mov
mov
push
adc
cmp
cmp
cmp
mov
and
sbb
jo
ss
pop
push
or
dec
es
dec
mov
inc
dec
add
pop
sub
lret
aam
xchg
adc
mov
xchg
and
insb
cmp
ljmp
lea
mov
add
lds
enter
push
jg
push
mov
mov
xchg
rol
xchg
in
adc
jl
sbb
mov
pop
iret
decb
fidivl
repz
inc
out
jge
lods
dec
scas
cli
jle
sub
outsb
fcmovnu
and
pop
nop
push
mov
data16
inc
and
cmpsb
out
sub
jbe
sbb
adc
and
cmp
adc
mov
or
shl
decl
mov
ret
bound
and
or
lods
hlt
loop
daa
xor
ficoms
and
sub
add
das
cmp
in
jnp
pop
aad
lret
push
cltd
out
iret
mov
xlat
jne
dec
cli
sahf
sub
sti
pop
enter
rclb
idiv
mov
dec
inc
cltd
in
mov
data16
cmp
sub
jge
xor
and
stos
test
insb
roll
add
fs
xor
hlt
mov
cmpb
and
and
jbe
or
add
inc
sub
mov
popa
or
inc
cmc
pusha
fstl
lret
popa
loopne
mov
lret
pop
push
jmp
push
add
and
lds
in
clc
stos
fisubl
pcmpgtd
sub
faddl
fwait
and
or
cli
lahf
stos
and
hlt
mov
adc
clc
mov
mov
pop
xor
dec
mov
nop
push
stos
sub
mov
cmp
fs
sbb
xor
adc
cmp
cmp
out
fwait
sub
pop
and
add
popf
stos
inc
pop
jne
ds
adc
push
mov
cmp
cmp
ds
test
add
fdivrl
mov
orb
lods
cmp
or
adc
ret
jne
arpl
das
fadd
push
push
fmulp
pop
inc
push
sbb
and
jo
dec
icebp
sub
fwait
fsubl
ret
mov
call
ja
lret
xor
int3
push
mov
test
mov
test
and
test
xchg
sbb
dec
cltd
sub
ss
movsb
mov
jge
and
pop
adc
scas
mov
or
fisubrl
gs
mov
lds
mov
mov
jecxz
sbb
push
mov
inc
jle
sbb
cmp
lahf
mov
movsl
es
lds
sbb
jecxz
imul
daa
pop
clc
lret
or
adc
dec
mov
push
imul
push
adc
cli
lods
mov
inc
mov
movsb
sbb
int3
lret
lahf
inc
fs
jle
fimuls
call
je
fmull
out
jne
pop
xchg
pop
lret
mov
xor
push
sub
add
cmp
sbb
or
lds
adc
fnstsw
or
push
jmp
mov
mov
mov
dec
mov
or
and
enter
adcl
gs
addr16
mov
ret
scas
into
and
addr16
mov
stos
xor
inc
stos
dec
xchg
cld
stos
popf
insb
icebp
mov
and
out
sbb
pop
dec
xlat
aaa
pop
dec
pop
lods
xor
cmc
mul
sti
lds
pop
xor
test
xor
leave
xor
pushf
xor
ljmp
hlt
sbb
aad
rorl
jmp
lret
sub
lcall
cmp
mov
jg
mov
or
daa
sarl
outsl
pop
mov
dec
popf
ret
sub
xor
inc
into
mov
das
in
icebp
adc
jbe
sbb
mov
xchg
leave
aaa
dec
xchg
dec
pop
cmp
adc
dec
out
add
push
int3
div
inc
and
mov
adc
ja
jg
sti
shll
decb
cltd
sbb
mov
add
sbbl
jae
popa
stos
lock
sarl
repz
jno
in
stc
pop
jg
fwait
push
stc
lcall
into
cmp
or
jmp
leave
inc
xchg
in
push
sub
call
adc
sets
pop
push
shrl
adc
cld
sub
cmp
jo
jne
push
cmp
fsubs
mov
cltd
loope
or
in
pop
loop
aad
add
cmpb
jmp
enter
test
xor
sub
je
push
ss
cmp
mov
loop
pop
pushf
jle
xchg
ret
sub
enter
jno
xor
unpcklps
cmp
and
pop
pop
lret
and
cli
test
lret
fld
daa
mov
pop
cmp
add
add
mov
cmp
mov
sub
stos
pushf
mov
loop
sub
cld
outsb
negb
leave
add
mov
enter
mov
sbb
jle
cmp
divb
xlat
aam
das
sub
mov
inc
xor
cmp
mov
shlb
iret
nop
ja
sbb
data16
xor
push
out
mov
je
movsl
push
mov
cmp
xchg
lods
out
lcall
lods
cli
insl
inc
mov
ljmp
mov
mov
rcrb
sahf
test
insl
jle
aam
sub
jmp
sub
xchg
mov
dec
mov
adc
call
mov
and
add
out
and
push
mov
dec
hlt
inc
mov
in
xor
filds
enter
xchg
outsb
dec
xchg
or
inc
and
es
dec
sbb
test
pop
cmp
ret
cwtl
cld
mov
das
out
and
in
mov
out
sbb
pop
jp
and
int3
int3
jbe
lock
sbb
xchg
inc
addr16
sub
lods
xchg
je
push
adc
xchg
cmc
xchg
loop
cmp
sbb
add
jns
frstor
pop
test
js
and
add
ss
sbb
pop
mov
mov
out
loope
push
mov
clc
mov
mov
aaa
repz
jge
lds
sahf
dec
jecxz,pn
push
not
jp
mov
scas
sub
aas
add
dec
add
mov
arpl
das
mov
push
inc
fdivs
xlat
rcr
repnz
jge
jge
test
pop
lods
mov
adc
divb
mov
xchg
test
xor
cmp
call
ja
insl
inc
out
subb
xchg
cmp
sub
push
clc
cmp
add
and
mov
sub
rorb
mov
shr
xor
and
insb
mov
sbb
jbe
stc
in
mov
xor
xor
aad
mov
shll
fisubs
jl
push
xchg
outsb
lea
adc
push
in
mov
pop
test
sub
and
clc
dec
ljmp
adc
xlat
sti
shl
jmp
add
or
xchg
les
dec
mov
sbb
jecxz
cli
mov
sbb
addl
sahf
ljmp
ss
cmc
aas
sbb
cs
xor
ljmp
push
cltd
mov
sub
in
pop
mov
jle
add
xor
cld
sub
push
adc
fstpl
push
ljmp
jp
mov
pop
in
jno
sbb
js
dec
mov
inc
mov
lret
lret
xchg
cli
mov
jl
das
out
mov
and
adcb
aas
mov
mov
xchg
pop
dec
nop
cmpsl
jle
cmpsb
movsl
cmp
aaa
movsl
popf
in
ja
mov
jno
adc
jmp
hlt
push
decb
lods
add
popf
call
lds
test
jnp
xor
sub
test
fwait
sbb
mov
xchg
cmp
dec
cmp
addr16
inc
inc
inc
sub
mov
xor
pop
pop
scas
out
push
cmpsb
subb
pop
pop
push
sub
aas
push
or
fiadds
xor
repnz
es
mov
jo
js
jae
outsl
loope
cmp
push
sahf
int
rcrl
sbb
push
lods
fistps
mov
pop
add
sti
inc
xchg
lock
push
inc
aam
mov
xchg
scas
scas
inc
fwait
mov
sti
or
in
and
stos
or
stos
dec
loopne
insl
sbb
lods
and
push
and
add
fldt
jns
sbb
je
out
mov
scas
test
or
mov
inc
mov
rcl
cltd
mov
jb
and
stos
mov
inc
cmp
push
mov
jns
pop
jmp
xorb
sahf
je
ficompl
stc
enter
hlt
jecxz
and
ds
add
insb
cmp
mov
aam
sbb
jle
dec
daa
jnp
mov
std
sbb
jnp
add
pop
xchg
inc
sbb
lcall
add
pop
aad
or
mov
jp
les
scas
cld
xchg
rep
or
fwait
mov
cmpsl
loopne
sub
sub
pop
xchg
sub
int3
int3
loopne
arpl
repnz
inc
mov
pop
negl
insb
aaa
push
je
pop
inc
and
ret
test
bound
lahf
cmp
arpl
fsubrs
xchg
mov
push
imul
and
add
nop
pop
cli
aad
les
adc
popa
lea
and
inc
cltd
in
ret
inc
outsl
xor
mov
dec
lock
or
xlat
jne
mov
fs
xor
or
stos
test
mov
inc
cmp
inc
scas
rep
xchg
pop
dec
sbb
sbb
sub
fimull
lods
pop
test
inc
xchg
call
subb
inc
jne
cld
fisubl
in
jmp
sub
imul
fs
and
mov
jmp
cs
das
xor
inc
divb
add
add
iret
adc
lret
shll
mov
shl
repz
cmp
jmp
movsl
das
sarl
mov
hlt
cmp
dec
cmc
mov
xor
inc
pop
ds
out
stos
popaw
push
imul
jne
mov
loope
ret
jecxz
daa
jns
lret
inc
cmpsb
aas
ds
push
mov
and
lret
dec
inc
loopne
insl
ret
rorb
xchg
mov
aaa
mov
icebp
push
fyl2x
test
inc
xor
add
je
cmp
dec
cmp
imul
nop
jecxz
and
sub
jnp
je
aaa
cmp
loopnew
testl
jne
or
ljmp
cmpsl
pop
xchg
jg
imul
std
cmp
mov
fwait
stos
push
es
enter
xor
popa
movsl
xchg
shrl
addr16
dec
dec
adc
pop
mov
imul
shll
leave
mov
sbb
ret
das
inc
dec
repz
pop
pop
or
ljmp
cmovl
adc
inc
cmp
out
outsl
cmp
out
jmp
sub
pop
data16
ja,pt
mov
cmp
mov
sbb
andb
xlat
mov
sub
scas
adc
adc
into
nop
loop
pop
inc
or
inc
into
sarl
ss
cwtl
mov
xchg
ljmp
loope
sub
mov
fwait
push
mov
pop
insb
sub
insl
cmc
xchg
dec
movsl
push
jg
icebp
dec
push
pop
sbb
jb
pop
xor
fcoms
cmp
lahf
xor
andps
cmp
ds
xchg
frstor
in
inc
push
outsl
fadds
mov
mov
cmp
mov
mov
fs
jne
xor
movsb
xchg
movsl
mov
mov
mov
jbe
cmp
cmp
int
mov
mov
imul
sahf
or
lret
or
xchg
push
and
lret
cmp
pusha
xchg
gs
mov
je
jo
sarb
je
nop
sbb
out
insl
arpl
add
lea
and
push
jne
dec
lods
test
sub
mov
addr16
push
adc
insl
adc
inc
mov
xor
testl
cmp
pusha
jno
push
xor
inc
mov
stc
mov
xchg
mov
fwait
sub
fmul
add
push
iret
rcrb
ja
into
test
sbb
and
stos
stc
add
dec
jle
je
subl
adc
and
cwtl
pop
mov
mov
hlt
in
leave
mov
es
lock
cmpb
loopne
pop
jge
in
in
push
std
sbb
orb
xchg
cli
shlb
into
jb
xor
arpl
outsb
ja
push
xor
mov
lret
pop
into
cmpsl
mov
dec
fdiv
mov
repnz
dec
adc
clc
dec
es
and
push
fildl
xchg
sbb
std
push
push
inc
add
dec
xlat
jbe
xchg
scas
jge
movsb
aas
dec
loop
push
adc
dec
push
shrb
fistl
jg
negl
mov
fsubs
mov
jns
stos
xor
xor
fdivrs
lds
test
cmp
mov
fcomps
jg
es
test
ficomps
cmc
mov
icebp
mov
jae
mov
or
sti
mov
xchg
pop
xor
pop
pop
cmp
fidivrs
mov
push
mov
sbb
inc
cld
incl
jmpw
popa
and
mov
push
or
stos
or
pop
mov
mov
dec
add
icebp
xchg
mov
cmp
out
add
lods
mov
lds
roll
repnz
pop
xor
orb
dec
pushf
mov
sbb
inc
add
sub
cmp
inc
sti
enter
xorb
test
int
scas
mov
xor
jl
or
cmpsl
sti
adc
stc
mov
pop
mov
inc
enter
inc
xchg
scas
fistpl
lods
inc
add
mov
xchg
sbb
fcoms
fidivs
or
jbe
push
jne
pop
loope
andb
mull
fidivrl
xchg
insl
or
xchg
or
push
cmp
aad
sarl
cmpsl
mov
mov
mov
jae
pop
push
pop
negb
aas
cwtl
fwait
loop
cld
outsl
ds
adc
outsb
sbb
dec
shr
cmp
sub
in
xchg
sbb
mov
lret
push
mov
mov
cmp
cs
or
mov
mov
pop
mov
cmp
cld
xor
pop
out
arpl
pusha
pop
imul
add
gs
push
aad
pop
movsb
mov
sbb
xlat
bound
test
dec
out
sbb
call
pop
dec
cmc
mov
fcmovb
sub
inc
jp
sub
adc
xchg
out
int
sbb
nop
cmpsb
cmc
ss
add
ret
xor
outsb
into
test
dec
sub
ret
popf
cli
sbb
add
push
int
pop
xlat
xchg
lcall
or
shlb
pusha
pusha
or
cmp
push
push
dec
mov
mov
add
outsw
lahf
and
pop
adc
xor
rcr
jle
leave
sbb
jbe
ljmp
gs
ss
insl
iret
nop
sub
iret
and
add
dec
fisubs
test
lahf
push
sub
mov
cmpsb
out
outsb
test
ficoms
neg
fstpl
fstps
loop
iret
mov
lea
and
or
dec
cmpsl
pop
mov
push
arpl
rolb
shrb
aaa
xor
cmp
ret
cmpb
xor
xchg
jecxz
negb
or
jb
pop
shlb
dec
pop
movsb
sub
addr16
rorb
pop
shll
pop
pop
sbb
pushf
xchg
testb
jb
pushf
and
cltd
sbb
xchg
jmp
xchg
int
add
popa
or
or
or
rorb
repz
mov
push
xor
adc
push
inc
lcall
mov
fadd
ret
mov
mov
into
inc
imul
mov
and
in
stc
in
jecxz
mov
outsb
stos
por
xchg
or
jbe
and
mov
stc
mov
scas
aad
sbb
or
mov
mov
loop
jo
nop
ja
stc
xchg
lret
or
mov
sub
xor
popa
mov
lcall
pop
jae
icebp
test
cld
and
rorl
shrb
dec
inc
repz
out
lret
cmc
adc
decb
sub
cmpsb
adc
stc
add
dec
jmp
sbb
xor
call
push
jno
dec
add
or
or
add
pop
call
lret
pop
jecxz
ret
pushf
push
in
inc
or
mov
pop
jge
push
icebp
jbe
mov
xchg
loope
or
jecxz
out
xchg
xor
int
pop
sbb
mov
cmp
or
mov
jns
out
ret
mov
mov
pop
mov
or
cmp
add
mov
sub
jns
jns
jmp
mov
int3
testb
cmp
adc
push
dec
stos
and
mov
pop
inc
dec
dec
xor
push
in
outsb
push
dec
add
xor
adc
sub
inc
sbb
push
aad
cmp
jmp
mov
bound
mov
mov
es
sti
enterw
mov
mov
pushf
sub
sub
push
data16
sbb
stos
or
cmc
xorl
add
scas
cltd
mov
sbb
popf
sbb
ret
popa
mov
pusha
bound
sbb
test
xchg
push
add
push
icebp
or
lcall
insb
adc
adc
movsb
stos
adc
pusha
mov
in
int3
jo
sbb
jge
cmpsl
cmp
iret
jno
popf
lret
cmp
scas
cmp
xchg
mov
jmp
push
repnz
ret
push
vzeroupper
push
or
shl
cmc
leave
fwait
jle
inc
test
push
ret
fsts
or
xchg
icebp
aas
fsubrp
inc
rcr
pop
rorb
jbe
push
mov
and
int
sbb
movsl
data16
pop
inc
enter
repnz
imul
sub
sub
jno
mov
dec
das
push
fbstp
inc
sub
adc
std
dec
mov
roll
sbb
cvtdq2ps
mov
sub
test
icebp
jns
fucomi
test
pop
shll
outsb
mov
push
inc
inc
push
stos
sbbl
test
ljmp
and
divl
sbb
out
mov
dec
fcomi
pop
jge
shll
dec
and
orl
scas
js
mov
mov
cmpsb
ja
mov
leave
push
or
jp
in
stc
push
hlt
jnp
xor
cltd
or
xor
out
sub
xorb
lock
stc
adc
push
jge
push
sub
cmp
ss
dec
bound
sahf
cli
imul
mov
cltd
js
cltd
or
int3
push
push
insb
sub
pop
repz
out
jb
and
aad
dec
test
dec
xlat
and
jb
movsl
cwtl
inc
gs
stc
addr16
mov
nop
repnz
fwait
xchg
xor
enter
push
ficoms
shl
rcll
sub
loop
add
pop
inc
lea
adc
loope
dec
shlb
enter
adc
fimull
cs
aas
cli
nop
jle
fsubs
lcall
cmpsl
enter
cwtl
mov
cmovae
xchg
and
mov
push
outsl
sahf
aaa
lcall
leave
andl
or
xor
out
hlt
stos
mov
push
push
ss
dec
in
xorb
jg
xchg
xchg
gs
aas
outsl
xchg
xor
mov
jns
in
adc
mov
cli
sub
or
xor
inc
inc
sbb
jmp
xchg
test
repz
jp
cmp
push
andb
ljmp
sar
test
add
lock
pop
rcl
pop
rcll
jb
clc
les
pusha
idivl
aad
sub
movsl
imul
mov
cltd
ficoms
jns
or
add
push
cmp
data16
dec
imul
in
dec
in
or
inc
pop
jo
sub
mov
adc
into
push
jne
out
sbb
dec
test
sbb
or
les
sub
fcmovne
jecxz
jg
push
mov
add
mov
cmpb
loop
cmp
lahf
jge
cmpsb
pusha
xor
push
jns
mov
adc
shrb
shlb
and
sbb
pop
stc
or
pop
mov
js
rolb
jmp
jmp
mov
xor
jne
int
mov
xor
fcomps
push
hlt
daa
out
dec
pop
mov
imul
inc
mov
pop
addr16
lret
ja
and
jmp
push
out
stos
cwtl
xchg
es
dec
cs
xchg
add
test
cmp
push
push
push
mov
add
pop
or
push
xor
jl
push
mov
xchg
mov
pop
cmp
dec
insl
leave
jg
adc
adc
mov
push
mov
jnp
push
test
inc
fisttpl
in
lods
out
cs
inc
lds
and
stos
outsl
imul
loopne
dec
mov
push
test
mov
jmp
out
les
ret
test
repz
iret
lret
mov
cld
lret
mov
mov
jb
stos
jmp
pushf
mov
leave
inc
mov
jae
loop
pop
xor
adc
ss
xchg
push
mov
jge
mov
rcr
bswap
sub
add
test
inc
jge
es
pop
loop
fnsave
xchg
xchg
pop
xor
inc
inc
mov
lods
dec
stos
testb
push
imul
adc
xor
jle
pop
mov
cmp
mov
neg
inc
lcall
pop
jmp
pop
mov
mov
outsl
cmp
lock
sbb
arpl
pop
push
cld
and
lods
dec
mov
push
inc
out
add
push
pushf
cmp
push
in
movsl
lods
jns
cmp
adc
and
aaa
mov
scas
dec
outsb
push
and
roll
pop
xor
out
push
std
pop
or
jb
adc
sub
jb
sbb
pop
lock
faddl
inc
outsb
push
jg
in
cmp
push
or
pop
out
inc
int
ja
sbb
add
push
push
insb
cmpsb
lea
push
andb
and
fimuls
push
dec
mov
add
popf
jne
mov
push
fidivl
ret
ljmp
ret
jmp
andl
and
fisubrs
jle
insl
or
roll
mov
ret
mov
data16
jge
outsl
jg
mov
push
mov
dec
jae
je
fistpl
jnp
and
pop
into
jecxz
xorl
enter
adc
ss
sbb
sub
xchg
sub
inc
mov
insb
loope
inc
push
mov
int
scas
xchg
push
add
mov
push
das
inc
jnp
enter
jmp
sub
cmp
movsl
insl
sti
and
in
std
leave
pop
out
lods
inc
add
lock
pop
ja
mov
pop
fldl
jg
pushf
outsb
lcall
add
mov
jb
push
adc
rorl
xchg
imul
and
js
cltd
idiv
mov
inc
mov
cmp
fsubrp
or
aad
sub
fisubs
xor
jae
or
fsubl
loopne
enter
loopne
jns
or
sub
ja
icebp
inc
adc
out
orb
adc
mov
jne
clc
outsl
add
es
cmp
js
push
mov
lock
rcl
mov
out
cmp
jb
sub
cmp
inc
inc
cmpb
popf
push
pop
jno
repz
or
sub
fldt
fldl
jecxz
jge
xlat
cmp
cmp
sub
imul
xchg
xor
jmp
data16
mov
xlat
xor
fwait
xor
add
jp
mov
xchg
add
jp
out
leave
fnclex
and
and
mov
sti
xor
cmpsb
or
inc
imul
xchg
mov
mov
dec
aaa
icebp
sbb
sub
mov
sysenter
inc
push
ss
pop
adc
mov
mov
ljmp
stos
fisubrl
jno
inc
cmp
sub
mov
int3
lea
stos
inc
sub
lea
xor
hlt
push
and
out
cmpsl
dec
xchg
push
mov
sbb
sub
out
or
cmp
leave
cmpsl
insb
pop
test
cmp
xor
mov
mov
arpl
xlat
int3
jmp
fcomp
add
test
inc
adc
mov
pop
loopne
mov
or
sbb
xor
das
in
sbb
xor
lahf
sub
inc
scas
or
scas
outsb
aas
cld
lret
test
lret
stos
idiv
mov
les
mov
push
orl
jge
insb
pusha
insb
test
incb
lock
bound
xchg
cmp
sahf
outsb
sbb
ss
loopne
inc
jg
repnz
add
cli
jmp
adcl
lds
cmpsl
lret
inc
push
dec
stos
jl
mov
xchg
lock
jne
into
cli
pop
mov
cmp
shrl
mov
iret
dec
or
lcall
cmp
orl
shrl
fs
xchg
or
movsl
shrb
xchg
stos
imul
jle
fwait
cmp
jp
xchg
jecxz
jecxz
in
int3
rorb
mov
outsb
mov
test
jl
or
push
outsb
jp
push
jp
mov
xor
mov
fdiv
push
cmp
xor
mov
push
fists
data16
jbe
dec
mov
cmp
arpl
sub
pop
ja
mov
inc
iret
sarl
es
add
enter
xchg
or
loope
lcall
sub
ret
xchg
aad
sub
mov
inc
jg
mov
xchg
mov
outsl
jns
sar
adc
fdivs
dec
jae
mov
shl
out
or
repz
divl
in
repnz
in
jecxz
in
jns
xchg
sbb
inc
or
adc
pop
jno
or
jmp
setle
jl
pop
mov
sub
xchg
add
inc
pop
dec
push
sub
sub
in
sub
lea
xlat
lcall
fsts
in
jb
jb
mov
leave
ret
jle
push
lea
outsl
test
sbb
or
xchg
sub
cmp
lods
fdivs
mov
jl
xchg
sbb
pop
push
clc
or
adc
in
jecxz
push
ljmp
repnz
or
add
call
sbb
rcrb
add
add
test
xchg
ds
push
xor
dec
loop
push
adc
pop
inc
and
cs
jnp
pop
jae,pn
shlb
dec
xor
push
lret
mov
mov
or
adc
fisubl
mov
xchg
aad
lds
mov
mov
mov
cld
mov
add
loop
xor
xlat
mov
ja
mov
cmpsl
mov
add
aas
mov
inc
push
stos
xor
fisubl
mov
add
loope
loop
lods
add
in
xor
fildll
mov
adc
lea
push
stc
loop
pushf
sub
or
lret
mov
pusha
mov
sar
shr
push
sub
mov
mov
hlt
xchg
xor
ret
stos
aaa
push
or
je
andl
imul
lret
pop
dec
adc
adc
mov
mov
test
jl
fcom
push
bound
lcall
hlt
fsubrs
mov
inc
insb
gs
fbld
xchg
add
stc
xchg
mov
fwait
dec
adc
js
push
inc
cmp
xor
sub
jle
jl
inc
insl
in
pop
movsb
lret
ja
les
into
cmpsb
out
jmp
mov
fstpt
dec
xor
stos
jmp
lods
cld
shll
lea
and
test
adc
mov
mov
in
jb
test
mov
xchg
lret
inc
and
xorb
add
shl
or
out
cld
cmc
inc
sub
add
xlat
fsubrl
xor
aam
cli
lock
imul
xor
aas
push
dec
jo
rcl
adc
fistpll
jg
lret
insl
in
aas
xchg
push
add
outsb
push
mov
test
nop
xchg
mov
mov
mov
cwtl
and
pop
out
test
movsl
push
jg
leave
orl
sub
mov
pop
inc
pop
jle
sti
shlb
mov
dec
pop
push
nop
add
and
aam
int
addb
cmovp
lretw
and
in
inc
xor
dec
mov
xor
sbb
outsb
xchg
lret
pop
adc
sub
sbb
roll
test
or
cmpsb
push
fimuls
mov
and
loope
orl
outsl
and
mov
lcall
js
aad
xchg
outsl
daa
xlat
pop
movsl
mov
data16
ret
push
daa
sbb
jle
pop
mov
test
and
insl
xchg
and
addb
add
push
aad
push
pop
andb
stc
pop
pop
cmp
aaa
dec
loopne
pop
ret
jl
out
sub
iretw
inc
je
int
enter
es
hlt
in
pop
mov
mov
ret
push
push
push
dec
cmpsb
popl
mov
pop
out
fldt
xor
testl
insl
lcall
sub
pop
insb
add
loopne
in
pop
gs
sbb
push
pushf
mov
lea
jle
pop
xchg
ret
pop
or
or
and
mov
push
pop
cmp
cmpsb
push
add
adc
add
pushf
scas
adc
mov
xor
push
jp
xchg
add
in
cs
outsl
sbb
lods
cmpsl
cmp
cmp
cmpsl
sub
mov
mov
movsb
sbb
outsl
cld
in
jmp
push
or
mov
push
mov
test
and
outsb
inc
mov
lcall
push
outsl
and
mov
mov
sbb
adcb
aas
repz
mov
mov
mov
outsl
bound
lcall
jo
fstl
xor
in
push
movsl
mov
add
or
leave
mov
nop
aam
pusha
cmc
pop
cmp
roll
mov
dec
ret
mov
shrl
mov
jb
push
adc
dec
pusha
scas
popf
fdivl
adc
pop
mov
mov
outsl
add
mov
xor
sbb
jbe
in
adcl
cs
lods
ljmp
and
jl
xor
ds
jmp
and
xchg
jae
enter
pop
test
jecxz
mov
pusha
jb
lds
push
cmc
stos
jl
loopne
or
jg
ret
and
pop
push
arpl
int
lahf
addr16
dec
aas
testb
pop
adc
sub
cmp
cmp
fs
xlat
cmp
aad
add
mov
push
insb
or
enter
test
mov
adc
inc
push
insl
dec
mov
leave
ficompl
fisubrl
cwtl
cmc
fldl
push
mov
ficompl
repz
xor
sbb
push
cld
fsubrs
push
cld
ret
stos
test
insl
cmp
push
inc
adc
test
ljmp
imul
icebp
adc
cwtl
jae
cld
mov
loope
add
aad
xchg
mov
add
ret
inc
mov
into
add
in
xchg
je
pop
or
mov
scas
outsb
les
test
push
pop
xorb
pop
cmpsb
mov
mov
xor
insl
clc
scas
bsf
and
fadd
pop
jae
mov
mov
ret
mov
mov
adc
test
mov
xchg
xchg
xchg
mov
leave
in
mov
xor
out
es
addb
addr16
dec
jmp
in
mov
scas
in
cmpsb
fstpl
dec
xchg
ds
or
inc
dec
mov
fcomps
sbb
jge
mov
pop
or
out
cwtl
cmp
test
jnp
cwtl
inc
pop
repz
loopew
inc
das
cmp
fadd
lcall
scas
sbb
inc
daa
add
sub
inc
mulb
sbb
mov
xor
je
pop
mov
js
jae
pop
mov
inc
xchg
pop
fldl
or
paddq
jns
cld
sarb
loop
pop
sbb
addr16
je
xlat
daa
or
popa
out
ljmp
test
psubd
fsub
cmp
je
je
daa
xlat
jne
ljmp
cmp
xchg
mov
daa
shlb
add
and
jge
hlt
xor
ljmp
jne
sub
in
mov
mov
lret
outsl
mov
add
aas
jne
sbb
jg
sbb
repnz
cmpsb
ja
add
mov
adc
out
jns
pop
xor
or
cwtl
xchg
mov
mov
mov
xchg
dec
aaa
outsl
aaa
mov
adc
adc
cmc
out
in
outsl
or
dec
pop
push
rcr
and
sub
enter
aad
jl
rcl
push
cmpl
je
jl
mov
pop
cs
xor
ds
or
inc
jge
jo
inc
push
jecxz
mov
cmp
icebp
mov
cmp
das
pop
dec
mov
test
xor
scas
inc
inc
shll
cmp
test
pop
xor
fsubs
mov
dec
mov
push
pusha
mov
sbb
cli
sbbb
dec
neg
jbe
je
adc
icebp
test
imul
sub
push
pop
scas
jno
sub
mov
shrl
add
sbb
leave
mov
shrl
lods
mov
mov
or
fwait
inc
test
jns
jge
es
inc
fistpll
pop
mov
mov
jnp
adc
inc
jp
sub
cltd
inc
mov
adc
hlt
mov
adc
test
imul
push
jo
sbb
in
hlt
daa
or
std
ljmp
add
mov
sub
push
push
std
sub
xchg
stos
pop
cmp
pusha
lahf
cld
js
add
cs
mov
cli
jle
mov
cmova
mov
and
lds
add
pop
and
xlat
or
jb
jno,pt
fists
sub
and
stos
jmp
xor
push
ja
shl
xor
sbb
push
jge
jb
outsb
lret
lcall
push
push
xchg
fimuls
lea
addb
jge
lret
pop
ja
in
jno
mov
stos
inc
cltd
je
inc
jge
outsl
bound
mov
fdivs
in
es
mov
push
pop
int3
pop
xchg
mov
sub
jle
pop
arpl
sbb
jno
addr16
fs
mov
xchg
cmpb
sub
adcl
xchg
and
cwtl
gs
push
sub
jle
aad
sub
mov
sbb
cli
sub
xlat
mov
test
lds
aaa
loop
xchg
pop
sbb
push
sbb
adc
outsb
cli
pop
test
xchg
xchg
sbb
out
clc
push
ret
mov
mov
sub
xor
jnp
pop
call
lahf
sti
mov
cltd
repnz
mov
mov
pop
aaa
dec
add
push
inc
jmp
pop
mov
rcll
sbb
stos
and
nop
cli
mov
push
push
and
ljmp
inc
pop
pop
dec
dec
or
incb
mov
mov
rcr
mov
pop
inc
aaa
mov
mov
dec
pushf
xchg
sbb
mov
cmp
pop
js
and
xchg
or
mov
fwait
dec
dec
aaa
inc
lock
jnp
icebp
in
push
adc
lea
cmp
inc
sbb
dec
xchg
jbe
push
mov
cmpsb
fstp
jp
mov
mov
fiaddl
sub
inc
dec
inc
insl
inc
enter
jp
xor
xchg
xlat
fwait
add
lock
sub
daa
js
ljmp
ja
xchg
xchg
pusha
pop
jmp
dec
fisubl
out
sbb
cmpsb
dec
shlb
shlb
push
lahf
les
roll
push
repnz
movsl
insb
pop
adc
cmp
fldt
mov
push
inc
in
ficomps
enter
ss
fwait
adc
call
inc
imul
jns
and
mov
pop
dec
mov
fsubrs
cli
inc
in
mov
sbb
mov
mov
lds
push
in
mov
mov
jle
cltd
xchg
sub
sbb
cld
pushf
xor
hlt
aad
push
jmp
lds
je
adc
xor
daa
inc
ret
rclb
movsb
sub
movsl
pushf
push
pop
push
std
testb
cltd
popa
sahf
cmp
push
hlt
dec
push
ljmp
jmp
stos
dec
mov
out
imul
mov
cs
mov
adc
cmp
cmp
cmp
decb
or
inc
push
cmc
push
jecxz
jmp
xor
pop
xchg
nop
incl
mov
fwait
sbb
lods
adc
sbb
jecxz
push
test
xor
mov
test
add
sub
xchg
stos
or
mov
js
xor
or
mov
xor
xlat
mov
mov
outsb
lret
mov
add
jmp
shrl
arpl
aad
ret
add
mov
push
shlb
test
push
jmp
mov
gs
push
sahf
aaa
rcr
les
pusha
add
outsb
pop
jmp
mov
iret
fldcw
stos
popf
sub
mov
lock
jmp
aam
int3
out
push
clc
fmuls
xchg
mov
mov
mov
push
pop
call
ds
cmp
xchg
cmpsb
pop
mov
out
repnz
and
cs
sub
sub
cmp
cli
jb
jb
jp
sbb
addl
jle
push
mov
xor
gs
ds
ds
adc
adc
add
xorb
lcall
and
ljmp
mov
push
stos
push
xor
out
call
pop
pop
lods
loop
pop
sti
add
call
push
je
loope
and
aaa
add
scas
xor
jne
dec
in
mov
je
jb
orl
xor
fwait
mov
xchg
ss
nop
lock
sub
out
fidivrl
xor
add
outsb
pop
mov
mov
sbb
in
scas
pop
int
fiaddl
lahf
jg
lahf
je
popa
and
andl
mov
mov
ret
negb
pop
push
sarb
shr
jno
pushw
cmp
inc
fcmovnbe
stos
imul
sub
mov
add
roll
and
or
lock
push
iret
test
xor
mov
sub
mov
adc
lods
dec
inc
adc
outsl
xchg
into
mov
pop
divps
push
pop
outsb
push
in
scas
push
push
sub
insb
lea
or
testb
pop
mov
push
bound
test
fdivrl
in
sbb
push
aaa
pop
loopne
in
aad
mov
daa
dec
adc
jno,pt
xor
test
testb
xor
int3
clc
movsb
call
les
loopne
jmp
adc
sub
clc
pop
jnp
out
mov
in
sahf
subl
add
mov
cli
mov
xor
in
insb
jnp
xrelease
test
ret
dec
sub
xchg
int
jnp
xor
fistpl
std
test
loop
test
jns
iret
inc
rclb
leave
jl
stc
xchg
scas
out
and
mov
jge
loop
cmp
push
mov
xor
pop
or
loope
cmp
cwtd
imul
fcmovnbe
or
jge
sub
cmc
leave
inc
push
sbb
lret
mov
or
stc
adc
inc
arpl
mov
popf
sti
adc
leave
aaa
xor
rorb
or
mov
jnp
and
mov
push
inc
outsl
aam
gs
push
and
rolb
popa
dec
jno
mov
dec
stos
push
push
mov
inc
movsb
inc
imull
or
pop
aad
mov
and
mov
addl
lcall
ret
adc
imul
mov
lret
mov
adc
aas
test
subl
mov
and
fnstsw
xchg
pop
xchg
inc
xchg
mov
jne
dec
sbb
jbe
add
xchg
xchg
jg
pushf
lods
dec
cmp
dec
push
sahf
clc
movsl
sub
fs
inc
pop
mov
mov
arpl
loopne
int
into
and
decl
aam
shll
mov
pop
les
les
in
push
jne
cs
inc
ds
mov
and
daa
repz
pop
aas
rsm
jecxz
cld
jmp
cltd
adc
aas
fwait
test
test
push
imul
xorb
jl
std
rorl
out
ljmp
aad
sbb
pop
in
out
scas
scas
xchg
adc
xor
dec
imul
jp
jae
xor
popf
add
popf
mov
in
lcall
fidivs
inc
scas
out
aad
call
lds
or
adc
cmp
sbb
xchg
cmp
stos
cmp
push
push
mov
adc
je
jg
repz
adc
out
push
inc
sbb
xchg
subl
je
or
dec
or
mov
jae
mov
cmpsl
mov
pushf
adc
das
mov
jecxz
lea
lds
xor
imul
mov
shll
push
sub
fsubs
add
mov
xchg
cmpsl
pop
divb
sbb
sub
pop
sub
test
sbb
enter
pusha
and
push
mov
sbb
add
mov
xor
test
fcoml
mov
jae
and
xchg
and
xor
lods
mov
dec
or
cmc
mov
ljmp
cmp
pop
jnp
xor
in
adc
ficoms
or
test
add
iret
add
sahf
adc
les
hlt
lret
or
mov
inc
mov
rorb
sub
xchg
div
sbb
and
popa
lock
sub
lods
dec
fdivr
pusha
icebp
fs
cmp
cmp
mov
out
repz
pop
out
mov
iret
movsl
repnz
hlt
push
or
mov
jbe
inc
loope
scas
and
cmp
stos
nop
outsl
xlat
and
mov
dec
adc
and
pusha
sub
out
lret
xchg
loope
sbb
xchg
adc
adc
fadds
hlt
mov
lods
mov
pop
jo
pop
in
mov
out
ret
or
push
stos
lret
add
mov
adc
cmp
cli
sub
clc
jmp
inc
gs
out
mov
lods
out
xchg
dec
lret
sub
js
jne
mov
lods
xchg
pop
fiaddl
inc
xor
fsubrs
bound
dec
ds
jnp
mov
mov
inc
pop
mov
mov
sub
test
cmp
dec
cmp
shlb
lea
cs
sbb
adc
adc
pop
cmp
jle
dec
push
popf
ja
jl
xchg
or
shll
movsb
test
test
push
stos
test
lcall
mov
repz
cmp
inc
std
int3
dec
fs
dec
inc
ljmp
lea
enter
mov
xor
arpl
sub
pop
mov
xchg
sbb
lods
xchg
std
insl
pop
and
mov
sbb
mov
ret
std
daa
cltd
jo
mov
popl
ret
ss
insl
hlt
mov
xor
xchg
les
out
cmp
mov
or
movsl
mov
xchg
shlb
ja
int
xlat
mov
nop
aas
pop
fwait
add
shr
jae
out
loop
and
adc
insl
movsb
popa
xor
int3
in
mov
cmp
jne
popf
arpl
data16
mov
push
in
mov
movsb
subb
movsl
push
int
fldenv
mov
jbe
scas
xchg
clc
jno
jl
inc
scas
mov
sti
xchg
cmp
mov
test
jns
mov
fadd
jl
int
cmc
lds
js
dec
push
dec
rcr
aaa
and
xor
mov
jle
into
stos
cli
out
lea
and
dec
sbb
lahf
lods
sbb
jne
push
jl
leave
stos
jb
call
sub
add
out
repz
fldenv
loop
repz
daa
push
stos
push
xor
sahf
add
sub
sahf
xchg
rclb
sub
fidivrl
ret
sbb
inc
lret
fsubrs
sbb
int
int3
fldt
cmc
cltd
lock
add
mov
mov
xchg
jno
fucomp
adc
in
inc
xchg
out
fimuls
xor
cld
cmc
sub
xchg
sub
mov
dec
call
fidivrs
mov
or
jo
mov
movsl
dec
dec
mov
push
aaa
nop
movsl
xchg
xlat
sub
inc
loope
or
shll
or
mov
sbb
or
jecxz
cmp
fmuls
xchg
add
nop
ss
pop
sub
xchg
jl
adc
jmp
inc
icebp
push
xchg
aad
ljmp
or
in
stos
stc
xchg
bound
add
mov
mov
xor
enter
xchg
jg
sub
rcll
shll
adc
sbb
push
or
push
mov
pop
adc
mov
adc
push
arpl
xorl
xor
dec
or
push
cld
dec
mov
xor
mov
mov
or
imull
jbe
arpl
jp
mov
sti
cmp
xchg
or
sbb
stos
fcmovnu
roll
adc
vmovsd
ljmp
les
in
jbe
imul
push
dec
dec
dec
scas
sub
dec
sbb
mov
push
push
popf
push
into
jnp
shl
push
scas
inc
sbb
dec
clc
push
cli
pop
sbbb
xor
mov
in
inc
xchg
mov
aas
js
inc
dec
mov
mov
loop
in
and
sbb
cmpsb
xor
sbb
mov
aad
int3
in
scas
fidivrl
cmp
adc
dec
lds
repz
into
push
sbb
mov
cmc
mov
enter
and
mov
in
lds
iret
stos
notl
jg
sarb
popf
cmc
dec
bound
jp
xchg
mov
push
fldl
pop
jecxz
and
loope
pushl
pop
xchg
sbb
pop
and
aas
shl
imull
fdiv
lcall
ret
and
and
andnps
js
inc
mov
or
jp
loop
popa
out
shrl
lods
mov
icebp
aas
in
or
mov
and
mov
push
lahf
sbb
js
popa
repnz
jns
int3
call
jnp
or
pop
dec
push
push
popf
xor
push
insl
or
push
sbb
out
shlb
and
test
xchg
mov
in
icebp
mov
inc
mov
in
inc
mov
mov
mov
pushf
out
xchg
xlat
inc
cmc
shlw
pop
xor
imul
decb
fists
cli
and
sub
dec
cmp
jge
jne
add
mov
scas
jne
int
loope
inc
shll
or
mov
nop
test
inc
pop
imul
add
lods
or
movsb
lods
xor
cld
sahf
movsb
and
shrl
lock
daa
mov
xchg
dec
add
adc
cs
cmp
sbb
inc
adc
or
and
cmp
jnp
orb
imul
push
push
jb
subl
sub
jmp
adc
lea
jmp
ds
cmp
pop
loopne
ja
dec
inc
cmpsl
sbb
adc
cs
ja
mov
shrl
mov
test
pop
aad
xor
inc
in
int3
aas
lea
dec
das
cmc
push
les
jnp
mov
xor
stc
pop
mov
sar
insb
shlb
adc
stos
enter
movsl
mov
js
into
insb
std
aad
xor
xorb
scas
fidivrs
push
fistl
and
jae
adc
icebp
mov
aam
add
cwtl
mov
add
add
xor
xchg
sub
dec
inc
push
inc
pop
mov
andl
push
adc
lds
into
sti
push
cli
arpl
aas
lods
ljmp
ljmp
push
lret
mov
jbe
xor
dec
dec
es
add
dec
repz
mov
iret
dec
mov
lahf
jbe
jl
loopne
mov
leave
push
lds
adc
push
sbb
inc
aad
cmpsb
pop
cmp
aas
mov
cli
orl
cmp
inc
mov
addr16
and
rorb
mov
inc
xor
arpl
cmp
fsubrs
int3
test
jge
mov
stc
lds
stos
mov
or
sub
mov
sahf
add
jge
push
pushf
sbb
jmp
scas
ljmp
les
cmp
mov
ret
ret
sarl
rcrl
into
imul
sarb
xchg
sub
adc
sbb
mov
arpl
pop
sarl
rorl
out
insl
je
js
fs
jnp
psraw
lretw
dec
in
jle
ds
daa
xchg
outsb
inc
cmpsb
xor
scas
fistpll
sbb
fcmove
movl
ret
lock
jns
mov
xlat
enter
mov
inc
sbb
sbb
mov
pop
mov
and
lea
mov
dec
js
cwtl
das
xchg
pusha
mov
dec
push
lret
sbb
sbbb
or
add
jnp
xchg
jp
xor
push
pop
ret
mov
daa
sbb
adc
xor
das
add
add
shl
and
lret
shlb
out
fcmovbe
mov
add
cmp
add
outsb
fs
or
iret
mov
pop
xchg
stc
lock
mov
ret
hlt
xor
jmp
jecxz
stc
mov
dec
sub
cmp
iret
jo
adc
dec
movsl
jns
test
aad
je
inc
jge
xchg
test
xchg
mov
sub
outsb
loop
dec
sbbl
out
sbb
fcoml
dec
rolb
pop
jge
sbb
or
xchg
pop
aaa
xor
das
js
sahf
sbb
adc
and
mov
and
test
test
pop
adc
imul
test
and
and
cmp
btr
mov
out
lret
push
das
ret
mov
or
xchg
ds
int
int
adc
rol
sub
cmp
xor
scas
jno
sti
cmpsb
cltd
push
mov
xchg
ss
xorb
add
inc
in
sub
iret
xor
movsl
dec
jmp
pop
andb
mov
je
jmp
or
jne
mov
addr16
push
and
dec
mov
enter
mov
sub
jge
xor
lcall
push
pop
add
faddl
call
push
dec
sbb
outsl
jae
pusha
ljmp
out
adcb
pop
test
in
sbb
jne
std
mov
ljmp
pop
dec
popa
xor
pop
dec
inc
lahf
ret
or
rorb
cmpsb
movsb
xchg
dec
fwait
test
push
stos
mov
imul
jmp
scas
xor
mov
icebp
pop
jb
sti
or
gs
dec
ret
imul
aas
mov
sbb
inc
imul
lods
ret
jl
fmulp
xchg
push
inc
sti
mov
jo
daa
stos
fcoms
scas
cltd
das
fs
flds
es
ret
adc
scas
inc
data16
fbld
test
nop
scas
lret
push
cmp
cmp
stos
cmp
mov
sbb
mov
dec
dec
in
frstor
jmp
jo
and
cltd
mov
stos
jb
pushf
or
xchg
xchg
dec
inc
jmp
mov
and
mov
and
mov
loop
sti
jecxz
je
and
insl
mov
sub
in
lret
outsb
jle
fnstenv
in
mov
pop
sahf
cmp
add
rcrl
popf
mov
mov
mov
rolb
add
hlt
sbb
add
arpl
imul
adc
lret
in
dec
lods
mov
outsl
pushf
dec
inc
inc
stc
ds
clc
int3
cmp
xor
mov
lock
inc
or
adc
jo
pop
fsts
sbb
and
inc
in
out
jge
subb
mov
push
rcl
or
scas
xor
fists
xor
cmpsb
sub
xor
test
test
nop
lea
sbb
dec
mov
hlt
lret
fwait
pop
cltd
lea
call
fisubrs
xor
arpl
in
test
pushw
sub
lods
insl
dec
divl
bnd
stos
loop
mov
dec
arpl
sbb
adc
lods
in
mov
in
xlat
sbb
sub
jo
sbb
fdivr
stos
fisubs
idivb
xor
loope
cmp
leave
mov
and
xor
mov
jnp
xor
dec
data16
inc
fidivs
and
into
lret
loopne
or
adc
dec
aam
sbb
jmp
push
lods
xchg
aaa
mov
pop
inc
punpckhwd
faddl
and
jnp
sbb
movsl
mov
cmovae
test
fistpl
mov
lcall
outsb
fidivrl
jg
addr16
add
hlt
mov
stos
cld
rep
adc
mov
out
push
adc
mov
mov
sbb
je
and
je
and
or
mov
addb
in
dec
sarl
mov
fwait
adc
test
xor
in
jl
adc
push
call
mov
cld
stos
adc
outsl
mov
sarb
out
xchg
sarb
xchg
fisubrl
out
imul
pop
cs
test
in
push
mov
daa
lds
test
xchg
lock
cmp
aas
mov
cmp
bound
adc
mov
mov
inc
push
inc
or
out
push
mov
arpl
push
int
aas
fisttpl
pop
jae
or
test
xor
gs
mov
push
test
outsb
or
adc
mov
ss
test
es
mov
inc
movsl
outsl
jo
push
pop
jg
or
cmpsb
imul
jns
xor
mov
mov
push
adc
jmp
xchg
jb
xor
inc
or
xchg
dec
ds
jp
lahf
sti
fwait
imul
mov
add
dec
out
pop
stos
xchg
xchg
sub
cmc
inc
out
fistps
pushf
rol
sub
and
xchg
notb
inc
aad
cmpsb
pop
popa
into
dec
mov
rcll
scas
xchg
fidivs
push
aad
cltd
dec
sub
add
gs
and
jbe
xchg
mov
ss
in
cmpsb
pop
jge
push
pop
xchg
push
or
jge,pn
insb
xchg
psubusw
ljmp
xchg
cmp
pop
mov
mov
aaa
pop
add
xor
imul
repnz
xchg
dec
out
push
inc
in
add
fucomip
pop
jmp
into
aas
dec
adc
and
jb
add
repnz
ljmp
movhlps
pop
xchg
in
lock
mov
jo
imul
adc
sbb
xchg
fists
dec
das
rcr
xchg
mov
add
sub
and
cmp
test
fists
in
push
arpl
repz
fldl
adc
dec
or
movsl
cwtl
loope
pop
stos
sub
inc
xor
int3
sarl
dec
cltd
cmp
fcom
add
mov
inc
sar
xchg
movsl
xor
xor
pop
clc
fs
mov
mov
jecxz
pushf
in
pop
scas
push
xchg
loope
popa
or
mov
sbb
es
scas
cmpsl
sahf
cmpl
xor
cmp
std
lds
test
xchg
lods
xor
xchg
popf
pop
dec
lods
scas
cwtl
add
stos
lret
dec
xchg
fcomp
inc
fwait
dec
out
xor
lcall
out
insb
and
dec
pop
sbb
xor
cmp
pusha
insb
call
mull
shll
and
push
rcl
rcrb
inc
out
sub
cmpsb
jmp
ss
pop
sbb
sub
iret
push
cmp
fistpll
inc
pushf
mov
add
ficompl
pop
xchg
sub
pop
lods
push
xchg
sti
xchg
push
dec
adc
and
sti
adc
std
mov
mov
mov
sbb
jo
xor
stc
imul
lock
rorb
divb
lret
sub
pop
sbb
popf
into
movsb
not
cmp
dec
mov
ljmp
mov
pop
inc
cmc
imull
sbb
xchg
lret
sbb
pop
jae
xor
sub
ds
cs
fstpt
push
sarl
pop
jl
adc
lock
or
lret
mov
stos
dec
adc
filds
jns
fdiv
test
popa
xlat
adc
cwtl
ss
insl
mov
cmp
push
mov
lahf
cmp
call
mov
in
mov
fldenv
fisubl
pop
popa
ss
nop
cmp
movsb
xchg
xchg
mov
in
xchg
xchg
ret
xchg
dec
xorb
mov
inc
iret
out
xchg
xor
lret
xchg
jb
push
aas
shrl
dec
sbb
mov
dec
add
aaa
sbb
adc
sbb
mov
jno
enter
into
outsb
cltd
add
xchg
adc
or
add
in
lds
inc
cli
and
mov
sti
dec
arpl
mov
fucom
pop
jmp
mov
aas
xor
or
push
inc
mov
xchg
pusha
cs
fbstp
or
les
lahf
xchg
gs
popa
mov
stos
ret
mov
aam
fisttpl
mov
mov
call
rcrl
xchg
mov
inc
mov
int
or
xchg
rcrl
in
shlb
mov
sbb
popa
ja
adc
push
out
jl
pop
lods
jge
rcrb
pushf
jbe
or
and
xor
frstor
cmpsb
int3
dec
divb
out
sti
out
dec
dec
stc
comiss
stos
shlb
ror
loopne
cltd
fisubrs
daa
aam
sbb
add
mov
adc
loopne
push
dec
fs
xor
imul
xchg
push
outsb
cmp
and
push
or
loope
in
out
movsl
outsb
test
push
dec
je
sub
test
cltd
mov
fwait
pop
xor
push
lret
clc
push
and
push
aaa
pop
jle
mov
sbb
hlt
cld
xchg
out
mov
iret
or
cmc
cmpsb
xchg
cld
push
repz
xor
hlt
jecxz
or
lock
lahf
xchg
and
push
mov
and
aaa
pop
xadd
fstps
sbb
test
stos
pop
rcrb
mov
enter
cmpsl
aaa
rcll
divl
adcb
iret
aam
stc
pop
xor
jge
fadds
test
test
push
mov
mov
sub
adc
and
dec
sbb
in
shll
sub
jp
es
cmpb
sub
jecxz
push
lret
jne
pushf
out
insl
fmuls
mov
and
add
aas
mov
outsb
test
or
pop
lds
jle
cmp
push
leave
xchg
xor
daa
clc
cld
sbb
movsb
inc
sub
push
sbb
adc
pop
cmovno
out
lods
je
cld
out
inc
nop
icebp
mov
sahf
xchg
enter
outsl
push
adc
insb
sub
sbb
dec
dec
outsb
ja
pop
sbb
and
push
cmp
cmp
pop
push
shrl
pop
adc
mov
scas
or
ficoms
push
shll
cmp
pop
neg
scas
aas
adc
mov
dec
arpl
ljmp
jae
adcb
psubd
js
or
dec
loope
fists
jl
mov
in
cld
add
jmp
insb
mov
test
mov
pop
cmp
dec
mov
add
testb
jae
outsb
fisttps
in
adcb
xor
je
aam
dec
pop
or
into
cli
mov
loopne
jns
out
push
clc
ja,pn
nop
add
mov
mov
rcll
aam
es
pop
add
mov
xchg
inc
int3
xor
and
imulb
and
adc
jmp
movsb
loopne
enter
jne
sbb
mov
rcll
je
add
fimull
rorl
pop
push
xlat
aaa
push
sub
test
fwait
inc
fs
inc
xor
mov
inc
mov
mov
shll
neg
mov
in
sbb
je
clc
fidivrl
push
shl
mov
mov
mov
dec
add
inc
ret
push
pop
cli
pop
ds
scas
bound
jbe
pop
xorb
xchg
adcb
adc
cmovs
test
iret
mov
aaa
mov
aad
mov
sub
scas
pop
fistpl
stos
sbb
inc
nop
mov
lret
add
pop
lods
mov
popf
jno
adc
fs
xchg
mul
out
repnz
inc
cmp
int3
mov
out
xor
int
nop
arpl
xor
test
ds
mov
mov
cmpsb
xor
jnp
aad
xor
clc
jnp
dec
loop
mov
xchg
stos
out
pop
mov
and
pop
ja
cs
cmp
jae
out
stos
int
pop
nop
popf
andl
leave
inc
jg
pop
mov
bnd
inc
popf
ret
ds
push
loopne
xchg
addr16
test
fxch
lock
cltd
in
and
cmpsl
xor
rcr
enter
test
inc
loopne
or
fisttpll
or
ljmp
mov
mov
inc
imul
fmuls
cmp
jno
cmp
mov
pusha
insl
mov
lods
nop
pop
aam
or
push
pop
sbb
pop
cltd
jne
push
call
cltd
rcll
dec
mov
adc
in
shlb
add
scas
dec
pop
and
xor
add
in
imul
push
popl
or
pop
and
mov
jp
dec
sub
mov
lods
ss
sub
fisubrs
aas
into
xchg
repz
or
jmp
jp
bound
xor
stc
repnz
out
xor
inc
and
inc
movsl
sbb
imul
vminsd
push
and
xlat
jle
lcall
xor
das
mov
data16
lcall
add
dec
repz
sahf
pop
sahf
adc
stc
scas
out
adc
fcomip
mov
cmp
outsb
sbb
cmp
mov
lods
in
inc
mov
cmp
push
jb
stos
out
sub
subb
sub
xorl
std
pop
pusha
mov
push
adc
outsl
sub
ret
adc
add
ja
ja
xchg
sub
call
outsl
mov
cmp
repz
jno
add
dec
sbb
addb
in
jbe
cmp
and
cld
cs
sbb
test
xchg
sub
movsb
mov
pop
dec
xchg
push
loop
mov
mov
jns
adc
dec
mov
rorl
mov
imul
cmpsb
xchg
dec
pop
in
xor
lret
xlat
inc
adc
out
mov
les
jle
mov
push
cmp
out
sbb
mov
dec
fimull
push
fcmove
arpl
mov
add
dec
pushw
jge
ss
sbb
pop
cmp
xchg
mov
push
daa
cmp
fistpll
stos
add
mov
add
mov
int3
ficompl
repz
or
jnp
xor
jecxz
call
aad
adc
mov
mov
mov
mov
or
outsb
ds
cmp
jmp
mov
sub
and
mov
ljmp
xchg
test
pop
call
lods
fnstcw
jae
mov
sub
out
lods
test
and
mov
sub
or
sbbl
cmp
add
clc
push
cmp
and
inc
loopne
xchg
cmpsb
xor
loopne
xchg
inc
push
insl
lock
xor
cmpsl
push
cvttps2pi
add
lret
insb
test
push
aaa
insl
scas
lods
pop
xchg
mov
lods
sub
fs
sub
ret
add
jne
pop
push
loopne
adc
inc
or
jl
pop
hlt
insl
xor
inc
out
hlt
mov
adc
into
add
das
xlat
sub
shrb
int
mov
inc
fwait
pop
lret
orl
enter
dec
push
leave
lods
fsubl
ss
mov
clc
adc
adc
push
add
nop
dec
cwtl
or
mov
out
enter
adc
imul
mov
xorl
and
pop
mov
mov
or
bound
fcoms
and
je
aaa
shll
push
call
lcall
ret
loope
and
and
xchg
mov
pusha
push
mov
xchg
jb
push
dec
add
ret
filds
arpl
cltd
scas
xchg
popf
add
leave
dec
ja
jmp
dec
arpl
popa
pop
sbb
or
and
push
jecxz
loop
and
mov
enter
xchg
test
adc
sbb
pushf
cmp
push
xor
pop
scas
inc
arpl
push
sbb
loopne
mov
xchg
jns
cmp
outsl
shrl
xchg
add
jg
pop
out
fidivl
cmc
leave
mov
clc
xchg
dec
stc
lods
add
pop
shlb
and
in
cli
and
pop
addr16
mov
outsb
and
les
xchg
insb
repz
adc
test
in
test
in
jg
clc
cmp
arpl
je
repnz
xchg
lods
inc
jmp
lret
es
adc
in
loope
dec
lcall
push
pop
gs
aas
adc
lea
dec
adc
scas
aaa
repz
mov
ret
inc
inc
push
push
shll
mul
mov
daa
out
and
shlb
jbe
addr16
jl
adc
and
xorb
push
nop
test
push
aas
sahf
das
lahf
ds
pop
mov
inc
rorb
sub
jo
insb
inc
add
jle
or
jnp
in
push
jmp
xchg
fs
and
addr16
sbb
push
fidivrl
loope
xchg
xlat
outsl
popa
mov
daa
sub
cmp
rclb
roll
arpl
xchg
lea
dec
hlt
aad
std
xchg
cld
push
int3
push
push
inc
call
adc
fwait
sub
loopne
xchg
adc
push
repz
pop
jbe
sub
adc
dec
sub
clc
xchg
leavew
js
or
xchg
std
lds
jno
pop
sub
mov
adc
sub
push
addr16
jbe
mov
or
xor
push
iret
or
cwtl
jmp
inc
hlt
out
out
sub
mov
inc
rol
xor
and
gs
inc
dec
out
in
pop
fcoms
lea
xchg
lret
cmpsb
and
mov
mov
pop
pop
push
lcall
add
lds
and
sub
outsb
sub
or
cli
frstor
lea
add
add
call
sub
fdiv
andb
mov
pop
cmpsl
outsb
xchg
lods
sbb
cmp
inc
inc
dec
or
je
and
sahf
out
imul
cwtl
jne
cmc
dec
movsb
xlat
scas
mov
cltd
mov
add
and
xchg
dec
fwait
ret
stos
in
fnsave
xchg
pusha
testb
push
das
cmp
insl
sub
divl
xor
repz
pop
imul
mov
adc
outsl
test
jnp
fdivs
pop
dec
xor
sub
andnps
jbe
and
js
mov
pop
dec
ficompl
xchg
adc
nop
lods
jno
ret
sarl
mov
sub
pop
jb
cwtl
xchg
dec
pushf
xchg
pop
and
lock
scas
shlb
test
and
sbb
lret
inc
test
cs
dec
repz
or
sbb
pop
sbb
pop
ds
loope
leave
xlat
add
cmp
add
xor
imul
outsl
sbb
and
and
insb
sub
arpl
out
or
push
and
pushf
cmp
test
push
aaa
loopne
test
sti
pop
adc
jno
mov
negl
and
mov
adc
sarl
inc
ret
pop
clc
mov
jecxz
fdivl
psrlq
popa
and
mov
outsl
cmp
or
sbb
push
and
jmp
mov
imul
pusha
ret
add
fs
cmpsb
push
push
add
pop
dec
fistps
popf
nop
dec
loopne
pusha
popf
inc
pop
mov
fdiv
loope
out
js
sub
mov
sbb
aad
daa
mov
cmp
dec
sti
cmpsb
push
jae
push
sti
mov
cld
mov
push
into
inc
ret
add
adc
xchg
js
push
mov
adc
add
cltd
xchg
sbb
mov
mov
loopne
mov
dec
adc
lds
cli
enter
mov
repnz
daa
loop
push
mov
insl
incl
jo
jbe
mov
pop
sub
aaa
or
mov
sub
fistps
mov
stos
xor
mov
cmp
xchg
in
pop
pop
cmp
ljmp
rolb
sahf
xor
in
sbb
sub
jbe
sbb
xchg
sbb
mul
add
jl
scas
pop
xor
aas
jne
jae
jne
stos
scas
andb
ret
dec
xor
sbb
mov
or
cmpsb
mov
ds
inc
jnp
or
cmp
cmp
push
lret
hlt
loopne
xlat
jle
ds
rclb
stos
jp
shrl
loopne
push
mov
imul
popa
repnz
mov
popf
jno
and
outsb
or
pop
cli
jecxz
mov
lea
xor
cmpsl
aas
add
fcomps
and
movsb
or
jb
pop
sbb
mov
cmp
push
sbb
out
mov
lock
push
push
mov
push
lret
lea
add
push
inc
faddl
fwait
jecxz
inc
pushf
addl
hlt
outsb
cmp
and
clc
push
cltd
test
lods
sbb
mov
int3
xchg
xchg
outsl
and
cli
pop
jo
xchg
jns
push
sub
stc
push
jne
jle
mov
scas
push
cmpsb
push
pop
cltd
adc
push
dec
in
sub
dec
xchg
add
jl
push
push
test
lret
lret
push
clc
sub
leave
lds
push
xlat
jbe
add
nop
rorl
stos
and
stos
push
mov
lcall
dec
out
cmp
scas
ret
add
inc
xchg
stos
iret
outsl
push
fadds
cltd
mov
clc
push
fnsave
xlat
add
lock
push
add
hlt
stos
jmp
push
xchg
addr16
adc
mov
lods
sti
pop
mov
aas
jnp
popf
pop
leave
in
adc
insb
scas
or
mov
xor
mov
push
mov
mov
jne
xor
cmp
xlat
dec
mov
cmp
sahf
cmc
cwtl
ljmp
push
iret
mov
dec
incl
jp
push
fidivrl
lcall
or
lock
push
adc
jmp
mov
lds
lds
flds
lahf
and
push
mov
cwtl
inc
mov
jns
pop
fadds
hlt
dec
sub
std
dec
stos
enter
aaa
mov
pop
mov
xchg
lds
pop
jnp
out
in
sub
dec
mov
mov
sub
shl
mov
movsb
add
inc
adc
rcrb
jmp
lret
sbb
or
mov
mov
aad
dec
loopne
sti
cmp
cmc
add
xlat
push
lret
sarb
lahf
fmul
clc
add
pushf
mov
jecxz
cli
daa
pop
pop
sub
int3
mov
daa
lcall
sbb
pop
div
clc
jl
adc
enter
scas
jl
les
andl
add
dec
int3
mov
sub
mov
cmpsb
repnz
int
aas
sub
jb
mov
mov
rcll
cmp
sbb
jmp
insb
adc
sbb
fimuls
test
pop
adc
lock
dec
dec
das
cmp
xchg
cmpsb
mov
push
xchg
loop
dec
sbb
ja
addr16
mov
cmp
in
inc
xor
fwait
dec
dec
int
sbb
test
pop
hlt
add
xchg
pop
in
dec
xchg
inc
popf
sbb
ret
loop
into
scas
jno
and
lret
add
xor
dec
sub
sti
add
pop
and
or
push
outsl
sub
push
xor
shr
int3
stc
fldenv
lcall
aad
cmpsl
xor
jne
sahf
fisttpll
push
mov
lret
fisttpll
cltd
push
pop
xor
cmc
stc
sbb
or
call
xchg
iret
sub
in
mov
sub
xchg
mov
or
repz
mov
rorb
ficoms
lods
push
test
or
mov
jp
jle
rcrl
stos
add
push
aas
push
out
push
adc
pushf
rolb
outsl
push
test
loope
ret
mov
lea
push
shll
aaa
add
mov
shll
push
dec
inc
mov
lods
lret
nop
fwait
test
jle
cmp
rcrl
fistpl
lds
das
jp
xlat
jns
mov
mov
jp
push
in
adc
js
mov
imull
enter
or
mov
jp
ret
scas
jge
shrl
cmc
aad
pop
jnp
push
mov
and
rorb
les
sub
movb
cmpsb
test
ja
jmp
push
cltd
or
mov
scas
aas
ret
outsl
aaa
addl
in
in
aam
and
inc
cltd
xlat
orl
aaa
sbbl
jbe
xorl
add
in
xchg
or
dec
mov
iret
ret
xlat
mov
inc
xor
cli
pop
int
mull
xor
test
fsubrl
ret
or
push
outsb
outsl
pop
cmp
inc
jl
lret
test
outsl
fisubrl
nop
aaa
jbe
xor
xchg
sbb
lcall
pop
cmpsb
cmp
pop
dec
push
loop
je
inc
and
iret
mov
mov
xor
sbb
insl
popf
hlt
mov
sahf
sbb
lret
lock
cltd
pcmpeqb
lret
movsb
rcrl
cmp
aad
or
pop
adc
adc
jnp
dec
les
push
fsub
iret
test
ds
inc
iret
mov
push
pop
aaa
mov
int3
fistpll
push
xchg
pop
cmp
icebp
jo
mov
xor
push
jno
push
lcall
rcrl
psraw
inc
cmp
or
and
gs
mov
push
sub
and
push
addl
jge
dec
inc
or
lods
add
dec
int3
adc
aad
jle
or
xchg
mov
inc
aas
jge
xchg
push
popf
out
push
dec
bound
push
test
or
popa
mov
scas
or
fs
pop
add
mov
lds
mov
cmp
ds
rcrl
rcr
xchg
and
push
jmp
fs
fcompl
addr16
insb
movsb
mov
rol
mov
aam
pop
adc
xorb
mov
ret
jnp
loop
push
xchg
outsb
stc
call
fdivrl
stc
push
dec
add
ret
dec
mov
aas
int
rolw
fisubrs
lock
ss
sub
fisttps
std
fwait
in
xchg
inc
mov
cmp
sub
test
stos
jl
adc
sub
mov
cmpsb
add
jmp
pop
xchg
add
cmp
lret
cmpsl
pop
je
mov
or
ss
sti
mov
or
fcmovnbe
in
add
inc
dec
outsl
mov
call
dec
pop
xchg
cwtl
cmp
inc
mov
mov
rclb
orb
fcompl
test
scas
stos
lds
addl
adc
std
sub
or
insb
out
pop
stos
fs
movsb
cltd
sbb
and
pop
dec
int
mov
lret
lock
sti
jae
dec
dec
mov
sbb
mov
loope
call
inc
out
mov
xor
adc
repnz
mov
shrl
lret
jmp
cmpsl
mov
lock
bound
jnp
pop
in
ds
shr
adc
ds
or
js
int3
inc
mov
jmp
mov
rcrb
or
jg
cmp
fldenv
push
mov
setae
dec
out
xchg
popa
mov
cld
pop
jae
andb
and
sbb
aaa
nop
xor
jnp
ret
jb
dec
std
cmp
pop
orb
lods
lahf
notb
and
ljmp
aas
or
push
inc
cmp
cmpsb
sbb
lods
xchg
ljmp
xor
pusha
adc
sahf
stos
sahf
adc
inc
lcall
jne
shrb
mov
iret
in
jecxz
pop
jp
dec
adc
push
outsb
xchg
push
dec
mov
flds
push
nop
ss
outsb
fs
push
fnstsw
loopne
xor
push
push
dec
mov
pop
adc
push
fdivs
sarb
jno
dec
cmp
data16
mov
ss
js
or
jb
and
call
xor
adc
rol
loop
fcompl
icebp
xorl
jbe
sti
or
stos
in
push
ja
cmp
jg
mov
xor
popa
icebp
pop
fistpll
and
aaa
dec
cmpsb
cmp
stos
add
and
xor
pop
out
mov
in
ljmp
daa
ja
lea
push
xchg
stc
xchg
int
mov
inc
or
push
scas
fisttpl
flds
rclb
xor
loope
mov
adc
ret
jo
push
insl
jle
sbbb
lret
addr16
and
pand
shl
jecxz
pop
dec
ss
mov
push
xchg
sub
inc
in
push
cmp
pop
mov
ds
cmpsl
subl
aad
jnp
and
and
jb
hlt
adc
and
into
ret
out
cwtl
sbbl
inc
xchg
movsl
dec
adc
xchg
mov
addr16
test
movsb
ret
or
push
roll
les
dec
and
outsl
pop
rorb
pop
add
adc
stos
stos
inc
jecxz
jns
outsb
cmp
repnz
mov
mov
je
aaa
fsub
loope
stos
cmc
repz
xchg
out
cli
out
xchg
mov
inc
jl
adc
pop
or
ret
xchg
lds
and
mov
dec
inc
push
roll
add
inc
pop
fs
inc
pop
push
jb
sbb
xorl
add
mov
fisubrl
pop
cmc
lock
sub
add
fucomip
push
mov
cmp
mov
das
xchg
lods
mov
pop
cs
leave
mov
jnp
out
repz
xlat
xor
xchg
je
stos
and
push
jmp
jne
jae
orb
ds
sbb
fnstsw
jle
sbb
sar
subb
xchg
imul
subl
cmp
gs
lods
and
hlt
je
dec
lahf
and
je
test
push
stos
rclb
lea
cmp
inc
jno
lret
adcb
xchg
enter
imul
jns
jle
adc
test
sbb
int3
xlat
xchg
stos
sub
vcvtss2si
sbb
js
into
int3
cmp
inc
fwait
add
inc
bound
pop
lock
dec
das
adcb
add
and
and
add
cmp
cmp
clc
lcall
add
jmp
leave
daa
std
in
add
sub
mov
out
push
xchg
or
aad
test
xor
jle
inc
loop
sbb
mov
lods
idivb
outsl
inc
out
cmp
lds
addr16
into
lea
pop
vcomisd
sti
xor
sub
jo
pop
add
int3
cmpsb
inc
xlat
pop
sub
lahf
jne
inc
cmpsb
dec
jb
daa
adc
cs
out
cmpsb
sub
lahf
mov
dec
sub
xchg
test
sub
mov
roll
cwtl
pop
repz
mov
pushw
adc
pop
cli
xor
lods
fdivrs
std
rolb
in
adc
jecxz
xor
add
int
ret
jo
or
aad
inc
negb
jge
cld
mov
divb
lcall
cmpsb
mov
cmpsb
aad
xchg
fnstenv
fisubl
loop
dec
push
mov
jnp
lcall
mov
push
stos
inc
cmp
lcall
std
movsl
dec
dec
lods
fincstp
mov
sbb
cmp
fsts
push
push
pop
inc
mov
test
das
push
fisttpll
mov
out
cmc
loop
fidivs
loope
fistps
pop
fsincos
mov
jne
mov
inc
aam
dec
dec
adc
loopne
mov
gs
les
jne
and
enter
jbe
mov
sar
push
mov
repz
cmpsb
cmpsb
push
and
ds
jmp
jno
pop
loopne
cmp
and
mov
hlt
test
jmp
cmp
xchg
idivb
xchg
stos
stc
jbe
mov
sub
fst
das
or
sahf
mov
popf
mov
pop
test
sub
test
add
xchg
loop
xchg
int
ss
int3
pop
out
aad
dec
fs
jmp
std
push
sbb
push
ficomps
jno
cmp
jmp
push
push
sub
push
std
cli
push
jmp
dec
movsl
sbb
test
sbb
xchg
fcoml
or
lock
mov
jecxz
mov
sti
cld
jne
jmp
xor
add
pop
cld
pop
mov
pmullw
cld
loop
outsb
leave
pop
int3
ja
nop
add
sub
jecxz
xchg
jb,pt
out
inc
and
fstl
pop
out
adcl
pop
arpl
call
adc
mov
mov
shll
sarl
xchg
pushf
add
lcall
bound
in
outsb
jge
sbb
xchg
mov
push
out
mov
mov
mov
cwtl
cmp
fnsave
push
fwait
jmp
sbb
in
mov
ja
pop
lret
mov
stos
pop
jmp
push
in
adc
setp
loop
add
push
cmp
jb
into
sub
inc
jns
xor
jae
pushf
inc
scas
dec
or
xor
push
mov
adcb
pop
dec
add
test
loope
lock
or
inc
inc
test
int
pop
dec
inc
cltd
and
and
add
or
lods
xchg
subl
cmpsl
pop
mov
jl
repnz
popa
leave
lods
or
dec
mov
mov
test
xchg
aas
sub
rcl
lods
mov
jnp
jmp
pop
aam
call
fucomi
cmp
data16
push
xchg
mov
sbbl
push
sarb
je
loopne
repnz
cmp
jge
xchg
xchg
mov
jmp
fidivl
sbb
leave
pop
push
xchg
xor
ret
xlat
inc
mov
loope
xor
mov
mov
movsb
int3
sbb
xor
test
jns
mov
lock
and
cmp
fisttpl
sub
in
push
sbb
ror
aad
insb
adc
push
cmpsl
sbb
jge
movsb
inc
movsb
push
stc
insb
jle
or
ljmp
dec
aaa
or
add
mov
pop
popa
xchg
mov
adc
sarl
and
cmp
fwait
sti
push
xchg
lods
jge
loope,pt
std
mov
rcl
jns
pushf
aas
outsb
icebp
or
cmp
and
jl
int3
jne
xor
xor
jmp
test
sti
cmp
cmp
sbb
jns
adc
mov
into
lods
aam
and
jb
into
cmp
scas
xchg
sbb
cmpsl
loope
mov
inc
ret
loop
outsb
in
test
jb
dec
jno
sub
sti
mov
test
cmp
adc
rorl
ja
iret
push
bound
bnd
and
mov
ds
push
inc
dec
pop
sub
sub
sub
cli
add
pushf
mov
pop
mov
test
sbb
fstpt
or
fstps
mov
push
xchg
cmpsb
rolb
scas
or
push
sbb
out
clc
xor
aas
inc
dec
call
test
ja
jecxz
mov
subb
jle
lods
jae
icebp
jp
adc
pusha
sbb
shrl
fwait
xor
xchg
mov
pop
sbb
clc
or
push
adc
xchg
sbb
push
cwtl
jb
scas
adc
arpl
lock
inc
das
aad
mov
mov
pop
pusha
out
roll
imul
cmp
mov
push
and
lods
add
xor
jnp
das
cmc
inc
and
shrl
lahf
insb
xchg
xchg
jp
sub
inc
jae
inc
fiadds
loop
fldenv
pop
fnstcw
inc
sbb
clc
add
or
sbbb
js
cmp
ret
xchg
xchg
sub
pushf
jno
imul
jle
inc
jae
push
sub
xchg
movb
mov
nop
adc
mov
outsb
jge
cld
out
pop
push
ret
lock
imul
adc
nop
or
adc
das
minps
mov
aas
sub
int
clc
js
dec
sub
and
lods
xor
xchg
stos
bound
and
pop
sbb
push
mov
fmull
adc
rorb
sub
int
cltd
cmc
aam
or
iret
push
hlt
test
pop
lock
cmp
fistl
xor
sbb
ja
jnp
repz
add
stc
insl
adc
and
inc
jns
flds
sub
ret
pop
aas
int3
sub
movsb
add
dec
inc
fcompl
int
xchg
inc
inc
subl
pop
mov
movl
ror
push
cmp
push
sbb
pop
shll
incb
sub
testb
xchg
and
iret
cmp
lock
xorb
adc
xchg
and
ljmp
call
out
aad
dec
sbb
cmp
xchg
je
push
les
daa
hlt
lods
lret
shlb
out
sarb
cld
mov
sbb
dec
add
fwait
test
cmp
mov
je
std
lahf
cmpsl
lret
xlat
cmp
int
dec
lret
pop
loop
in
int
imul
insl
into
outsb
arpl
xor
mov
loope
cmp
cli
psraw
add
inc
sbb
jge
mov
jl
mov
leave
dec
loope
cltd
pop
movl
sub
rcll
loopne
orb
je
mov
inc
mov
in
inc
xchg
adc
jne
dec
jbe
loopne
dec
pop
dec
sbb
xorb
mov
test
cmc
push
jns
fists
imul
or
inc
jle
dec
test
leave
jp
lret
jb
push
mov
sub
in
jge
out
repz
movb
fnstcw
pop
int3
mov
aam
test
and
sahf
inc
test
rcrb
mov
or
xor
mov
inc
test
push
or
dec
icebp
fiaddl
sub
popf
push
push
fsubs
iret
add
stos
sbb
or
es
add
and
pop
cmc
les
xor
in
push
push
ret
adc
push
es
or
sbb
fscale
sarl
xor
pop
pop
addr16
jg
xchg
mov
pushf
movsb
popa
roll
mov
jne
dec
add
or
ljmp
xchg
pusha
add
mov
xchg
cmc
or
push
jmp
stos
sbb
cmpsb
jae
mov
add
repz
push
scas
add
push
dec
ret
jge
adc
mov
dec
loop
nop
arpl
mov
dec
push
mov
out
push
shrl
jl
cmp
push
sbb
aam
pop
dec
cmp
std
daa
sbb
pop
or
push
bound
mov
mov
mov
scas
mov
loop
inc
sub
xor
gs
lock
inc
push
cli
repnz
xchg
notl
adc
lret
out
dec
lods
pop
in
sbb
mov
xor
aam
pusha
adc
inc
lret
sub
inc
mul
imul
push
test
in
scas
cmp
jae
pop
bound
dec
out
shll
and
mov
cmp
inc
fisubl
dec
fs
cltd
movb
stc
jb
mov
pop
mov
push
movsl
sahf
mov
dec
pusha
jmp
rorb
fwait
sub
push
sbb
ljmp
push
inc
stos
xchg
pusha
or
data16
mov
testl
adcb
hlt
sbb
ds
mov
sysenter
sub
add
dec
popf
cmp
inc
inc
mov
call
inc
les
ds
xor
repnz
popa
push
mov
push
pop
jne
mov
or
fidivl
xchg
add
dec
lods
shrl
push
test
dec
xchg
bnd
xchg
xchg
inc
xor
ffree
xchg
repz
push
lods
or
test
pop
xchg
push
in
cmp
sub
loop
sub
flds
fadds
lods
test
mov
jecxz
add
repnz
sub
xor
ds
out
add
test
iret
adc
leave
push
sbb
rcrl
jecxz
push
cmpsl
inc
mov
lods
subl
in
xchg
push
mov
pop
cld
testl
push
loopne
inc
sbb
pop
jg
dec
imul
mov
add
das
rep
pop
fiadds
or
fstps
xlat
jle
mov
inc
mov
push
fsubrp
mov
fisubrs
mov
jb
jge
adc
mov
dec
scas
cwtl
xchg
pop
mov
cmpb
dec
cmpsb
das
mov
and
cltd
add
xchg
xchg
xchg
orl
mov
test
fisttpl
out
lret
push
cli
aam
test
jb
cltd
test
and
jns
dec
rcrl
and
repnz
jge
sub
pop
daa
xor
mov
jp
or
push
push
sub
popf
mov
add
out
ja
pop
aam
mov
test
imul
inc
sub
jmp
push
andb
mov
es
lcall
ss
lods
bswap
lods
jecxz
ret
imul
xor
sub
lds
in
inc
sub
add
scas
pop
addr16
imul
lret
sbb
ja
out
jno
aad
ss
xchg
ds
ficompl
fsubs
out
pop
xchg
and
push
adc
pop
jle
xor
mov
dec
cmpsb
movsbl
lea
sub
mov
imul
jge
cli
mov
push
or
icebp
push
shlb
mov
mov
int3
xor
inc
insl
rclb
inc
aam
sbb
mov
lods
dec
js
sbb
or
or
jnp
movsl
jmp
imul
mov
dec
mov
jmp
cmp
xor
mov
adc
neg
inc
jp
loopne
sub
clc
push
pop
mov
adc
add
pop
or
lcall
stos
mov
mov
jge
lea
jp
mov
inc
lret
cmp
shl
xor
out
aas
mov
jae
xchg
arpl
int3
in
lods
outsl
cli
dec
scas
sub
and
adc
xchg
or
sbb
pusha
popf
lea
mov
loop
cmp
pusha
add
imul
je
mov
xor
push
sti
test
mov
ljmp
loope
sbb
pop
inc
dec
mov
or
sub
stos
pop
mov
ret
ljmp
xchg
fmul
cmp
loopne
or
sbb
subl
nop
std
ret
jmp
push
in
inc
and
lahf
pop
dec
cli
loop
dec
pop
pop
push
outsb
or
je
cwtl
ss
out
faddl
and
mov
or
inc
inc
mov
mov
push
ret
out
xchg
mov
aad
xchg
push
fdivrs
popf
shlb
cli
or
lea
cwtl
jp
fadd
jns
mov
pop
iret
mov
cwtl
sbb
js
test
test
jo
cld
mov
cmpsb
cmp
orl
dec
jle
pop
gs
inc
leave
or
mov
add
jmp
push
in
jb
loop
and
xor
lods
sbb
out
fmul
and
push
test
out
scas
stos
pop
movsb
lcall
aad
ret
sarl
jns
lds
jnp
xor
push
mov
jae
mov
xor
pop
and
pop
mov
jne
adc
out
out
or
adc
es
xlat
cmp
daa
xchg
adc
enter
into
mov
sbb
les
cs
mov
int3
daa
enter
into
mov
cwtl
pop
iret
rcll
call
orb
xchg
push
xchg
in
iret
inc
out
dec
jo
cli
loop
outsl
pop
outsb
fstpl
dec
dec
popa
aad
dec
stc
sahf
lea
pop
push
cmp
mov
add
sbb
lcall
push
mov
aaa
mov
rcrb
insb
mov
xchg
dec
rol
insb
jg
cmp
pop
sub
insl
cmpsl
jae
ljmp
mov
in
jl
push
mov
mov
stos
add
jne
sahf
or
lock
xor
mov
jns
aam
orl
jb
ds
out
int
or
ja
xor
mov
add
mov
cmpsl
ds
xor
lahf
mov
cmc
scas
add
xchg
adc
cmp
std
cmp
sub
andnps
push
fldenv
dec
push
imul
mov
jb
pusha
and
jnp
loope
xorl
dec
fisttpll
mov
mov
push
leave
push
bound
mov
into
aas
cmp
push
dec
cli
scas
fidivs
lods
xor
fcmovne
or
ja
imul
sub
and
lahf
imul
ss
out
mov
mov
ss
or
pop
jnp
and
jns
daa
test
mov
stc
daa
or
pop
popf
jnp
push
cmp
stos
adc
aad
cmp
add
jns
and
inc
lds
ja
or
jns
dec
insl
dec
jno
mov
inc
jecxz
cmpsl
lock
xchg
imul
sub
outsl
mov
push
xchg
inc
fcomi
mov
flds
aaa
pop
sbb
sbb
rcrb
or
adc
fwait
pushf
inc
bound
push
shlb
sbb
loopne
cmp
push
jecxz
pop
aad
pop
xchg
xchg
push
imul
jno
jl
adc
mov
inc
add
adc
push
mov
inc
mov
aad
cmp
xor
jno
pop
pop
leave
adc
addb
push
sbb
jge
shlb
enter
add
dec
hlt
mov
jnp
cltd
xchg
xlat
mov
outsl
in
push
dec
pop
jp
sbbb
push
out
xchg
inc
fildll
ret
fdivrs
fcom
xor
lds
cwtl
outsl
mov
xchg
sbb
clc
inc
clc
xchg
iret
push
stos
and
mov
and
pop
icebp
fninit
mov
ret
in
movsl
jmp
rcrb
mov
dec
jb
mov
add
sub
xchg
adc
jecxz
in
daa
fcmovnbe
push
rcrb
mov
and
mov
lea
jl
ret
ja
sbb
cmp
xor
adc
leave
dec
inc
imul
pop
push
inc
es
in
push
jne
test
popf
xchg
pushf
mov
cmp
mov
shll
lcall
je
mov
fs
lcall
divl
mov
add
xchg
cmp
les
dec
add
inc
mov
stc
sti
inc
jb
fwait
xchg
cmp
subb
sbbb
lock
ja
aam
mov
js
ss
push
cmp
insb
aaa
sbbl
addr16
movsb
scas
mov
inc
insb
add
mov
movsw
nop
sub
lds
in
sbb
and
adc
sub
adc
xchg
xor
ljmp
jnp
cltd
aad
fisubs
mov
mov
cmp
mov
fimull
cmp
pop
sub
jmp
pop
enter
mov
ljmp
pop
jno
sub
sti
jmp
cmc
push
rcr
mov
xor
and
mov
arpl
int3
std
aas
cmp
das
sbb
inc
stos
dec
outsl
or
mov
and
ficoms
imul
and
mov
hlt
sub
xlat
lcall
inc
int3
mov
sub
repz
pop
pop
inc
xchg
movsb
outsb
sbb
dec
cmp
jno
sbb
lret
clc
mov
xchg
rorb
cmpsb
jnp
push
test
mov
push
ret
pop
or
push
lods
adc
aaa
test
sub
call
cmp
lahf
xchg
in
sbb
out
std
addb
sti
sbb
cmpsb
scas
lods
push
packsswb
and
pop
xlat
mov
fmull
lcall
mov
stos
sub
and
aas
pop
add
inc
and
push
pop
jle
push
pop
imul
and
sbb
sahf
stos
inc
dec
inc
movsl
pusha
sub
cmp
fsubr
lret
lret
and
out
sub
add
jp
scas
js
imul
and
dec
jmp
ljmp
cmp
xor
std
out
xor
popf
fnsave
xor
or
incb
xor
aas
lcall
mov
pop
aas
aad
xor
mov
jecxz
jno
push
push
loop
xor
sar
pop
mov
mov
lahf
jle
xchg
mov
dec
icebp
or
into
add
add
mov
nop
aam
lahf
dec
mov
pop
jo
ja
test
xchg
inc
xchg
fsubrp
mov
jge
pop
ja
sub
sbb
xchg
jno
cmp
adc
cmpsb
in
test
mov
mov
inc
inc
or
push
shrl
fcom
fwait
mov
das
ss
repz
clc
xchg
lret
daa
iret
jnp
mov
outsb
gs
cmpsb
fwait
idivb
sbbb
pusha
and
test
insl
xchg
dec
sub
mov
into
dec
nop
inc
inc
xchg
int3
xchg
lret
lods
dec
mov
or
jl
imul
sub
mov
rcrb
pusha
fwait
push
add
jge
xchg
dec
ret
fdivl
or
or
dec
rep
xor
cmpsl
inc
mov
hlt
negl
les
cltd
mov
jb
fsubs
mov
mov
xchg
mov
bound
mov
sbb
sbb
call
fcmovnb
mov
push
lcall
in
xor
mov
repz
pop
jne
movsb
inc
dec
dec
fs
sti
dec
jno
stos
and
dec
pop
sub
loop
enter
cmp
bound
outsb
lods
pop
or
inc
and
push
inc
stos
or
mov
sahf
enter
dec
movsb
xor
lea
out
andl
popf
sbb
jne
inc
mov
push
lods
or
mov
js
shlb
in
mov
mov
das
int3
mov
ljmp
mov
mov
jmp
xchg
or
mov
pusha
xchg
xor
sahf
adc
xchg
dec
jnp
cmp
faddp
jecxz
sub
mov
insb
inc
cmp
adc
xchg
mov
jne
push
xchg
cmp
aas
push
int3
shl
iret
lods
add
outsb
xor
xchg
or
xchg
mov
dec
scas
inc
cli
mov
ret
push
repnz
inc
cmp
fbstp
mov
dec
cmc
add
lret
pusha
in
xor
add
mov
mov
jno
int3
int
and
or
mov
lds
jle
xchg
pushf
jge
add
or
lcall
loope
xchg
test
dec
mov
xlat
fadds
mov
aad
pusha
leave
imul
push
jl
jle
mov
icebp
cmp
jg
xlat
cmp
adc
mov
repnz
xchg
hlt
lcall
imul
mov
rcrl
or
push
xlat
pop
jmp
das
sbb
mov
cmc
ret
jnp
mov
loopne
sahf
inc
dec
jmp
pop
mov
shrl
or
into
mov
mov
stos
cmpb
out
out
add
mov
fldl
in
inc
jae
insl
loope
lods
mov
pop
leave
js
sbb
inc
fcoml
xchg
mov
imul
out
dec
ljmp
decl
and
push
push
out
add
jb
movsb
test
lcall
dec
adc
lret
mov
dec
cmp
fisubs
stc
roll
jl
leave
ljmp
icebp
ja
insb
je
push
cltd
scas
loop
xchg
adc
cltd
das
lds
int
adc
pop
js
imul
sub
das
lock
ret
push
push
mov
mov
ret
dec
push
test
mov
insl
mov
mov
mov
dec
mov
cmp
ret
out
mov
inc
dec
xchg
aad
sub
es
mov
jecxz
ljmp
add
cmc
cli
add
or
pop
mov
pop
jno
or
push
push
add
sub
daa
outsb
cli
jns
jmp
cli
jge
sub
sub
cmp
mov
stc
fs
mov
ret
xor
sbb
ds
call
adc
test
scas
xor
cld
adc
add
les
push
cli
fs
std
mov
sarb
jb
inc
jb
add
es
popa
jb
mov
and
mov
fsts
outsl
cli
test
push
mov
jno
dec
xor
js
fcomi
pop
pushf
xchg
mov
sbbb
inc
mov
imul
cltd
ffreep
addr16
mov
popl
jmp
add
add
loope
pop
iret
lret
pop
xor
lcall
ja
idivb
fcoml
sub
add
mov
xchg
mov
cs
out
adc
jmp
stos
mov
xchg
jmp
sahf
cli
outsl
and
adc
ret
jg
into
fcoms
sahf
xor
jle
les
add
cmp
and
sbb
xor
cld
jno
inc
into
xchg
bound
jmp
inc
sbb
aam
or
rclb
mov
fldenv
sub
stos
sbb
sbb
test
sub
mov
or
jno
std
push
adc
mov
inc
mov
aam
mov
loopne
push
fidivs
and
rolb
mov
dec
xchg
rcll
jmp
insb
mov
andl
xor
pusha
stos
fstps
mov
cmpsl
stc
sub
scas
pop
xorb
mov
outsl
imul
dec
mov
lea
ficoms
and
lret
fists
pop
aas
pop
jae
cld
cld
push
in
lahf
or
sub
fildl
test
add
jg
mov
push
ljmp
jl
pusha
push
rcrb
dec
push
cmc
mov
mov
mov
mov
inc
fstpt
lcall
and
cmp
add
jmp
movsb
in
repnz
mov
fimuls
pop
push
fdivs
xor
mov
out
mov
fadd
out
fbld
push
leave
into
lods
sub
fidivl
lods
xlat
addr16
mov
insb
adc
jge
cmp
jns
inc
les
adc
in
dec
jno
es
stos
sub
sub
inc
mov
nop
in
repz
mov
xchg
sub
mov
mov
push
mov
jo
aaa
ja
sahf
aas
aas
xchg
pop
mov
out
jo
xor
pop
int
scas
adc
adc
jbe
inc
dec
add
subl
jbe
jbe
inc
push
add
pop
outsb
and
stos
cmp
mov
jle
insl
out
mov
xor
mov
or
or
fs
iret
or
mov
outsb
fnstsw
mov
repz
cmp
jecxz
xchg
xchg
mov
or
pop
imul
cmc
and
and
adc
push
loopne
mov
adc
push
sbb
enter
imul
cmp
jecxz
inc
rorl
lret
in
xchg
adc
dec
mov
fucomp
es
sbbl
jae
into
fld
mov
lock
lahf
mov
mov
repnz
fldt
and
sub
shrl
xor
stos
sub
fidivl
dec
adc
dec
push
adc
xchg
dec
mov
adc
dec
test
xchg
icebp
inc
add
pop
or
push
test
add
inc
repz
push
mov
mov
rorb
adc
jle
cmp
sbb
dec
jecxz
shlb
psllq
dec
xor
xchg
rol
sti
popa
cltd
and
int3
cmp
xorb
cwtl
sbb
dec
or
das
mov
mull
dec
jns
outsb
loope
push
push
adcb
mov
adc
rolb
pushf
sbb
pop
loope
add
xchg
loop
iret
push
adc
xchg
aam
ret
roll
aam
mov
adc
adc
cmpsb
test
in
xchg
xor
jg
out
jo
jno
inc
adc
pop
xor
dec
dec
repnz
pop
push
inc
pushf
pop
cmp
lds
mov
jl
cmp
lahf
xchg
sub
add
fnsave
adc
pop
iret
ja
pop
xor
shlb
mov
shl
data16
insl
negb
pop
imul
jecxz
xchg
mov
les
inc
and
add
and
push
xor
jnp
push
sub
jo
loopne
mov
xchg
es
add
ja
or
add
pop
popa
push
ret
lods
sub
push
mov
mov
clc
popa
mov
xlat
clc
aaa
pusha
xor
stos
stos
ljmp
pusha
icebp
adc
pop
xor
dec
mov
jne
pop
mov
iret
adc
mov
pop
jo
push
das
pop
push
lods
or
sub
jno
push
call
adc
sub
sbb
sub
in
sub
pop
aas
sub
pusha
inc
test
and
xchg
icebp
hlt
rcll
in
bound
stos
mov
pop
mov
sahf
mov
xorl
push
fnsave
jle
mov
aaa
dec
cmp
dec
sbb
jne
ret
and
xor
add
lods
ljmp
imul
mov
mov
inc
pop
int3
push
cmp
push
adc
insl
inc
xor
pop
cltd
hlt
xchg
mov
push
or
dec
jmp
pop
xchg
add
jne
lods
cld
inc
xchg
jl
cltd
sub
in
mov
rcrb
mov
loop
and
cltd
adc
ror
addr16
mov
and
pop
push
inc
mov
cmp
push
dec
or
push
mov
adc
jle
cmp
ds
and
and
jo
mov
sub
cmc
or
cltd
jecxz
and
jle
sarb
dec
aam
push
mov
dec
mov
xchg
push
sub
enter
lcall
ljmp
sbb
mov
mov
mov
outsb
rcrb
add
popf
mov
outsb
mov
jae
push
popl
sbb
cmp
push
jg
emms
mov
pushf
lods
sbb
mov
in
mov
lock
cld
cmpsl
push
or
imulb
cmp
and
sub
xchg
outsl
ror
inc
lcall
xor
scas
xlat
or
stc
jne
cmp
addl
aas
push
lods
out
cmp
inc
inc
scas
mov
mov
push
adc
jl
pop
cmp
sar
cmp
stos
cmpsb
xchg
out
fnsave
das
push
decl
dec
mov
stos
add
cmp
sbb
stos
pop
fadds
jmp
xor
std
inc
mov
or
cmp
xlat
in
dec
sbb
icebp
incl
lds
jnp
adc
jae
mov
in
out
mov
cmp
pop
call
addr16
popf
pusha
pop
push
mul
mov
add
sub
jle
jmp
imul
xchg
or
iret
std
xor
ds
pop
fwait
push
clc
add
insl
test
dec
fcmove
mov
std
mov
imul
mov
mov
xchg
repnz
sub
adc
test
xor
int3
adc
js
mov
test
dec
test
subl
sub
insb
adc
cwtl
inc
cmp
cmpsb
lock
cmp
rcll
jmp
or
jle
push
lahf
cmc
and
push
jo
mov
mov
cwtl
pop
xorps
cwtl
inc
push
call
pop
sub
addr16
je
int
xchg
jg
cmpb
xor
mov
xchg
movsb
push
mov
jne
sub
jl
mov
lret
jmp
xor
mov
sbb
iret
add
aas
rclb
xor
inc
icebp
fwait
jb
jno
mov
pop
clc
sbbl
sub
xchg
mov
shll
test
fstl
sub
das
and
sbb
push
inc
sbb
lods
popa
mov
adc
add
lret
mov
gs
adc
imul
lods
sarb
jle
lock
add
dec
int3
mov
stc
cld
sub
cmp
nop
inc
test
cs
test
ja
jbe
popf
adc
xor
lahf
dec
mov
add
ljmp
in
jns
push
popa
jmp
mov
add
lods
mov
lods
test
adc
jb
shr
xchg
fsubr
sbb
sarl
mov
pop
sbb
lds
popf
repnz
push
jle
pop
inc
and
jl
vpblendmw
inc
stc
shl
call
pusha
outsl
xor
hlt
xor
or
popa
push
cld
push
divl
mov
mov
mov
aad
xchg
fistl
fwait
or
adc
dec
mov
xor
inc
jecxz
pop
or
clc
leave
or
adc
mov
lods
ss
mov
aas
arpl
aam
leave
mov
ljmp
xor
pop
in
lahf
lds
cli
adcb
adc
je
mov
jns
mov
cmpb
push
mov
div
and
sahf
subl
ja
lret
cmc
jl
pusha
shll
and
mov
in
and
or
clc
orl
daa
inc
jmp
lretw
jl
dec
push
and
std
push
adc
rorl
roll
and
mov
xor
push
inc
pop
push
xor
mov
lret
cmp
jg
inc
mov
dec
rorb
xchg
mov
or
push
dec
mov
mov
fildll
dec
or
pusha
mov
popf
leave
in
sub
cmp
fistpl
xlat
adc
scas
push
xchg
loopne
adc
fcoms
popa
push
mov
adc
loope
push
dec
stos
and
jns
mov
sub
push
push
mov
or
movsl
push
test
mov
inc
fwait
jbe
lods
add
dec
loop
push
add
sbb
bound
mov
out
je
outsb
iret
sti
lcall
dec
js
repz
das
pushf
xchg
or
orb
sbb
shll
in
mov
hlt
movsb
sub
mov
pop
stos
stos
mov
sub
stc
shlb
in
cld
mov
jae
stos
clc
or
push
jno
imull
mov
add
sub
mov
jle
cmpsb
mov
and
lahf
xor
jp
es
stos
enter
adc
xchg
cmp
aas
leave
mov
mov
fcmove
imul
push
idivl
mov
arpl
cli
jae
xlat
add
dec
and
jecxz
subb
and
pushf
mov
test
std
je
jnp
pop
andl
inc
in
mov
inc
daa
aam
and
dec
xchg
lret
aaa
negb
jns
inc
ss
mov
push
sbb
mov
stos
pop
or
mov
repz
aas
pcmpgtd
mov
cmp
cwtl
push
call
stos
sbb
cli
sbb
pop
in
dec
and
test
imul
push
daa
out
pushf
insb
js
and
leave
push
and
cwtl
enter
jne
in
xlat
xor
add
sbb
mov
outsb
dec
add
popa
mov
adc
mov
test
mov
js
pop
mov
pop
and
imul
jg
arpl
imul
xchg
testl
gs
js
xor
adc
sbb
popf
and
push
inc
sub
pop
aam
push
inc
pop
mov
fnsave
push
das
pop
push
pop
jl
nop
push
jp
mov
dec
lods
dec
adc
sub
lahf
iret
ret
roll
pop
cmpb
mov
sahf
insl
push
sub
mov
pop
imul
jnp
fists
adcb
lret
pop
lret
movsl
sub
mov
pop
dec
movsl
mov
andb
daa
jae
mov
ss
in
mov
mov
xchg
int3
fidivrl
cmp
cmp
bound
incl
loopne
arpl
jmp
or
ret
dec
dec
add
mov
jbe
out
rcl
ficomps
leave
cs
and
cmc
and
xchg
pop
adc
cwtl
lcall
aam
popl
andb
pop
jo
jmp
mov
pop
inc
out
adc
in
out
lahf
std
lret
add
hlt
inc
cmp
xchg
loopne
mov
mov
sbb
push
mov
xchg
add
sub
mov
push
stos
test
popf
nop
lret
cmpsb
iret
shlb
int
cmpsb
cmp
int3
lods
mov
and
jne
xor
xchg
movsb
inc
xor
out
stos
xlat
mov
inc
out
clc
in
push
pop
sub
cli
int3
out
mov
shlb
fsubr
dec
sahf
std
xchg
lret
jl
mov
loope
in
leave
sahf
mov
rorb
sub
push
je
or
push
lcall
adc
stc
pop
shl
test
lret
pop
sub
push
insb
subl
aam
scas
pushf
addr16
insb
xchg
cmp
xchg
sub
stc
dec
lock
ljmp
je
js
ret
les
mov
sbb
js
jae
mov
ret
lods
mov
adc
out
sub
fxch
notl
xor
push
cmp
mov
mov
pop
dec
mov
popa
js
pop
nop
mov
jnp
cltd
jle
pop
inc
negl
jo
dec
lahf
icebp
cmp
scas
out
test
pop
test
rolb
or
push
jae
lahf
addb
mov
into
ret
int
push
sub
pusha
mov
xchg
lds
add
je
xchg
add
insb
iret
push
push
cli
pop
push
mov
int3
push
and
stos
sub
inc
subb
mov
push
scas
loope
cmpsb
sub
and
pop
add
shl
mov
jne
dec
fimuls
lcall
jnp
rorb
mov
add
xchg
ss
out
dec
push
addr16
or
jmp
mov
xchg
addb
cmp
inc
stos
fsubs
mov
loope
stc
je
push
mov
stos
addr16
testl
jb
mov
mov
into
sti
icebp
nop
rolb
stc
imul
mov
push
repz
outsb
lea
test
popa
push
popl
xchg
mov
push
adc
xor
mov
cmc
jp
sub
inc
clc
mov
testb
dec
jle
sub
gs
cmpsl
dec
adcl
lret
lock
cli
ss
fld
mov
stos
test
es
xchg
dec
mov
loop
call
out
or
dec
pusha
jg
adc
or
lods
mov
mov
or
in
lret
pop
jmp
sub
test
fsubp
loop
data16
cmp
xchg
stos
and
xlat
sbb
mov
mov
push
clc
ljmp
fs
ds
data16
push
dec
push
loop
xor
mov
dec
fsubrs
mov
sub
aaa
movsl
xor
xchg
and
data16
add
xor
inc
pop
xchg
push
mov
cmp
sub
stos
filds
rorl
leave
inc
add
pop
gs
mov
jp
and
ds
dec
mov
arpl
pop
enter
rorl
cwtl
shll
add
mov
jo
push
pop
sahf
cltd
test
xchg
clc
xchg
mov
adc
mov
repz
jb
mov
mov
shrl
cmpsb
pop
jne
sar
sub
cmp
test
icebp
movsl
mov
mov
int
or
jge
shrb
adc
push
xchg
imul
adc
jne
add
cltd
pop
lock
mov
fsubrl
rorl
lret
xchg
insb
shlb
mov
int3
scas
out
lret
fs
xor
lock
pop
mov
cli
sbb
push
push
cmc
jae
push
mov
mov
les
pop
mov
dec
ja
dec
mov
cmp
sbb
outsb
add
cmpsb
and
cltd
lret
lahf
mov
roll
stos
sub
push
fldenv
imul
cmpsl
dec
ffree
or
xor
xor
mov
cmpsb
push
shrl
fdivs
jg
movsb
add
sbb
repz
inc
sub
push
incb
adc
xor
sub
jecxz
aas
xor
mov
stc
cmp
sub
fwait
and
cmp
mov
outsb
iret
int3
bound
or
adc
xchg
push
add
cmp
and
and
in
test
ljmp
fdiv
dec
mov
xor
xor
push
sahf
xchg
xlat
pusha
inc
or
mov
fs
push
dec
jae
rorb
int
jne
jo
mov
adc
jmp
push
subl
pushf
inc
std
aas
iret
ja
cmp
icebp
aam
and
mov
ds
add
iret
pop
sti
jl,pn
or
js
xchg
sbb
or
mov
push
push
orl
js
or
repnz
lcall
jmp
pop
cmp
loop
in
mov
dec
pop
pop
adc
aaa
ret
das
push
icebp
push
lcall
push
sub
xchg
cmp
dec
jo
sub
test
cmp
jb
ret
inc
in
xchg
mov
aam
ds
ds
mov
sbb
xor
or
cmp
ret
pusha
mov
rcrl
je
int3
xor
sub
je
cmp
inc
and
adc
mov
stos
movb
or
arpl
ror
fdivp
call
inc
pop
out
add
mov
adc
jl
loop
popf
push
inc
rcll
lret
std
push
test
dec
aaa
lods
xor
scas
and
pop
inc
and
xor
test
aas
mov
into
cmp
cli
add
mov
jns
pop
into
mov
cmpsl
push
jns
aaa
sbb
pusha
nop
jns
xor
subb
jmp
nop
lock
xor
sbb
mov
or
mov
pop
rorl
lock
pop
shll
adc
repnz
stos
pop
das
gs
lods
imul
in
movsl
xlat
inc
pop
push
insl
in
cld
shrb
cmp
xchg
or
repnz
clc
add
sub
push
loop
loopne
add
dec
lret
sti
sti
mov
lock
std
daa
mov
push
mov
mov
mov
bound
inc
add
aaa
lahf
pop
loopne
ret
jle
data16
adc
pop
outsb
inc
add
aam
fcoms
inc
jbe
dec
ljmp
jne
mov
sbb
fcompl
push
stc
jmp
or
push
cli
insb
mov
pop
cmpsl
cwtl
sbb
rolb
pop
sub
xchg
mov
xchg
stos
cs
push
popf
jb
push
int
repz
add
mov
mov
call
mov
xor
imul
jno
sbb
push
mov
test
mov
cwtl
xchg
les
or
icebp
sub
pop
lea
sbb
scas
jo
mov
push
fucomp
xchg
test
push
insb
mov
movsb
xchg
aas
fimuls
push
fwait
sahf
mov
outsb
inc
pop
inc
idiv
out
outsl
int3
mov
inc
out
pop
lret
test
mov
out
cld
mov
inc
push
cs
sub
sahf
sbb
shr
push
lret
bound
dec
test
gs
pop
inc
shrl
shlb
insb
pop
push
dec
fisubl
filds
cmp
in
dec
mov
nop
cmp
std
dec
sar
test
jno
rcr
push
inc
push
pop
sbb
mov
dec
movsb
mov
push
loop
movsl
flds
test
aas
fcmovnb
in
lcall
and
mov
sub
or
mov
or
xchg
sti
hlt
or
cmp
movsb
imul
add
cmp
xchg
gs
xchg
push
xor
push
adc
into
push
mov
gs
dec
pop
inc
test
push
adc
or
push
in
outsl
jecxz
push
sarl
divl
shrl
cli
inc
loope
pop
xor
loope
mov
cli
call
add
push
lods
jns
adc
mov
ljmp
ffreep
out
stos
adc
out
or
pushf
dec
icebp
andb
outsb
scas
sub
cltd
push
jne
iret
cmp
sbb
sahf
test
jb
cld
roll
adc
jle
pusha
xchg
mov
and
mov
push
pop
push
xlat
pop
hlt
add
add
sbb
cmp
dec
je
imul
pusha
mov
icebp
in
sub
pusha
sub
xor
pop
les
dec
roll
adc
repz
dec
add
jecxz
arpl
cs
cmpsb
or
sbb
xchg
es
mov
xor
in
lock
lcall
or
jnp
cmp
sub
add
inc
push
mov
es
shr
rcrb
pop
push
ret
xchg
push
jl
jae
sbb
cmp
movsb
adc
fimull
fsubrl
ljmp
pop
jnp
aad
mov
lock
cmp
mov
or
les
mov
mov
je
push
icebp
xchg
stos
mov
and
bound
out
sbbl
ret
in
in
or
sub
out
je
movsb
and
add
adc
ja
xor
movsl
cmp
add
bound
cmp
pusha
shl
xchg
lahf
ja
fidivrl
fbld
mov
pop
push
push
movsl
pop
or
pop
cmp
xor
inc
sub
xchg
sahf
outsl
mov
sbb
mov
rcrb
mov
sbb
es
divl
jmp
mov
lea
add
inc
cmp
fisttpl
pop
lods
adc
jmp
lret
and
fdiv
jb
cmc
ret
xor
jp
xchg
out
mov
pop
lret
push
or
pop
lcall
lret
cmp
inc
sub
inc
movsb
je
mov
or
mov
pop
xchg
mov
inc
xorb
pop
add
add
sbb
repz
loop
and
aaa
icebp
bnd
mov
leave
mov
mov
dec
cld
out
xor
scas
imul
addr16
adc
xor
mov
stos
mov
je
shrb
push
and
xor
in
sti
pop
negl
fs
std
and
stc
inc
xchg
mov
mov
incl
hlt
les
repnz
dec
sbb
mov
pushf
cltd
add
cmpsl
addb
add
aad
fldenv
ror
mov
inc
outsl
imul
push
add
scas
out
pop
cmp
insl
fcmovb
adc
mov
clc
mov
xor
cmc
fisttpll
lea
xchg
mov
insl
fcmove
in
mov
pop
cmp
push
into
and
dec
mov
push
daa
xchg
lret
cmp
dec
mov
lock
jp
stc
shll
repnz
push
xchg
mov
lcall
icebp
jnp
fcoms
scas
mov
arpl
adc
xor
xchg
out
popa
in
pop
xchg
pop
jecxz
pop
mov
iret
cmp
push
lret
ror
add
pushf
inc
pop
mov
adc
call
testl
mov
in
loop
bound
jbe
adc
stos
jo
or
jnp
imull
mov
and
cmp
mov
lock
xor
push
mov
aam
mov
push
arpl
xorl
mov
negb
mov
pop
mov
and
lea
pop
and
test
or
xchg
push
int3
mov
xchg
test
mov
andb
adc
lds
xchg
adc
inc
lods
pop
xor
add
jecxz
or
inc
repnz
xor
mov
or
or
and
jo
ss
out
mov
stos
mov
jne
push
push
sub
iret
enter
ret
movsl
or
rcl
rolb
iret
imul
pop
fsub
lods
pop
mov
mov
push
pop
imul
push
fwait
ds
loop
shlb
mov
rcrl
xchg
fnsave
mov
add
imul
fldcw
pop
leave
idiv
mov
sbb
mov
ss
push
adc
test
dec
outsl
adc
sub
dec
out
lods
cmp
frstor
dec
lods
sub
and
stos
sub
insb
jno
mov
gs
xchg
mov
sbb
dec
int
pushf
push
fidivs
add
inc
mov
popl
xchg
add
out
lods
dec
pop
movsl
cwtl
sub
loopne
mov
in
xchg
lods
and
test
and
sti
sbb
test
push
loopne
fnsave
fdivp
sub
mov
in
gs
nop
cld
dec
ds
sbb
popf
mov
loopne
in
lea
movsl
dec
xchg
cltd
stc
enter
cli
push
xor
or
and
popa
pop
in
sti
fisttpl
aaa
xchg
test
dec
int3
lods
popf
lret
cltd
fdivr
sub
in
cmc
xor
loope
mov
imulb
xor
add
popf
in
pop
sub
xlat
push
stos
mov
rolb
or
or
pop
imul
test
std
pop
sub
jl
sub
add
add
dec
push
call
inc
xor
je
out
adc
xchg
xor
les
mov
jae
pop
popa
pop
lock
in
cwtl
scas
fwait
xchg
jo
and
stos
repnz
jns
daa
cli
add
push
jo
sub
out
stos
fsts
mov
lea
int3
jbe
bound
or
sahf
pop
and
xchg
js
int3
jle
and
add
test
cmpb
mov
mov
shrl
sbb
mov
jne
mov
and
mov
fld
movb
mov
pop
cmovo
mov
pop
clc
jle
cmc
mov
aaa
lret
add
xor
mov
xor
dec
iret
mov
hlt
adc
jno
inc
jne
fs
test
insl
pop
sarb
push
sub
outsl
adc
mov
fcmovne
add
aam
jg
out
aad
in
ljmp
jp
cmc
in
mov
push
mov
fadds
add
cli
push
xor
cwtl
es
ficompl
or
push
icebp
fs
fsubrs
je
cli
and
loope
lock
scas
dec
mov
cmp
clc
repnz
cmpsl
ds
fadd
sbb
pusha
cmp
mov
fs
inc
addr16
pop
mov
cmp
mov
push
aam
shlb
stc
mov
jmp
ret
sub
out
sub
sub
ret
inc
push
cwtl
mov
mov
sub
scas
mov
fmul
mov
push
and
jbe
and
scas
mov
jg
fcmovb
dec
sti
jmp
add
insb
sarl
nop
sbb
mov
outsb
roll
aam
outsb
inc
cmp
hlt
aaa
sahf
xchg
or
inc
scas
das
and
test
loopne
fsts
jge
push
pushf
loop
mov
xchg
and
frstor
outsb
call
cs
les
jp
and
inc
lods
vmovsd
es
sub
sub
and
cmp
inc
inc
adc
jp
xchg
cli
cmp
loop
popa
push
sahf
push
and
out
adc
pop
test
scas
adc
nop
lods
or
push
mov
sub
int
mov
lods
test
adc
jecxz
jl
dec
fcompl
jmp
popf
mov
mov
cli
xor
hlt
dec
pop
mov
out
mov
jmp
and
stc
pop
shrb
loopne
fiaddl
pop
pushf
arpl
add
xchg
push
mov
add
jp
lcall
sub
or
repnz
popf
fwait
or
and
mov
and
mov
xchg
lock
jmp
sbb
in
add
mov
les
les
stc
mov
sahf
pop
lret
shll
inc
sarl
lods
test
jmp
cwtl
push
aam
sahf
cmp
sbb
fildl
andb
sub
sbb
sub
imul
inc
enter
arpl
movl
mov
fmul
jg
xor
imul
jecxz
sbb
mov
ds
push
jo
pop
mov
repnz
jl
mov
cmp
sub
adc
push
jmp
push
sub
rol
ja
shlb
sbb
loop
adc
shlb
aas
int
sti
mov
cmp
push
cmp
xor
sbbl
jbe
lcall
in
and
jns
adc
jb
mov
add
lcall
adc
xchg
cmc
sahf
loope
pop
mov
insl
es
sub
lret
rorl
mov
faddl
in
cmovne
or
pop
js
or
clc
fbstp
dec
xchg
jno
sti
add
xchg
gs
mov
scas
xchg
adc
addr16
sbb
mov
fldcw
rclb
mov
cli
adc
sbb
dec
movsl
xor
pop
ja
loope
cmp
into
enter
loope
xor
dec
repnz
xchg
hlt
outsl
dec
rclb
xchg
jg
int3
cmp
cs
imul
sub
stc
adc
mov
arpl
jg
aam
iret
xchg
pop
pop
xchg
and
int
xchg
andl
xor
notb
jae
rcrl
daa
or
dec
cmp
xchg
out
pop
dec
add
in
sbb
inc
dec
adc
or
clc
inc
insb
outsb
xchg
fwait
mov
mov
xor
sbb
jb
data16
adc
xor
and
je
fwait
outsb
add
mov
push
xlat
mov
sub
ja
popf
mul
out
mov
inc
je
outsl
jo
shll
fcomps
fs
std
outsb
and
mov
jns
xchg
bnd
jno
das
int3
int
cmp
cmp
jg
divl
push
jg
and
xchg
test
sub
sub
or
xor
aas
in
cld
rcrb
adc
mov
insl
inc
cmp
mov
mov
push
dec
nop
push
dec
addr16
sbb
cmp
mov
jns
pop
mov
imul
mov
clc
in
push
int3
shll
imul
jae
outsb
lcall
xor
movsl
sbb
lods
int3
aam
enter
cli
jne
mov
loope
fs
mov
sub
arpl
iret
xchg
gs
stc
xor
push
repz
aaa
lret
int
pop
shrb
xchg
enter
mov
push
fdivr
sub
push
adc
movsl
sar
inc
and
cmp
dec
fisubrs
cmc
std
pop
sbb
xchg
addr16
push
lea
cltd
adc
jnp
pop
loopne
out
fcoml
outsb
add
cmpsl
adc
mov
jns
insb
xchg
and
and
into
adc
shl
rorb
cmp
mov
fisttps
inc
int3
clc
mov
push
pop
fimuls
push
xor
andb
pushf
or
lcall
cmpsb
fimull
cmpsb
pop
stos
inc
arpl
repnz
mov
dec
ljmp
int
xlat
ds
test
pop
lea
xor
pop
or
lods
pop
or
inc
mov
cmc
ja
outsb
jge
inc
insb
in
mov
and
mov
inc
push
mov
adc
sub
and
sbb
scas
ds
jns
sbb
jge
jb
lahf
orb
xor
in
or
pushf
or
mov
xor
loope
ss
push
add
or
dec
jg
sub
or
jle
jp
daa
sbb
mov
fcmovnbe
test
in
stos
inc
into
add
dec
out
nop
in
push
test
xchg
sar
add
jb
mov
xchg
mov
or
test
push
shr
and
add
jbe
cmp
lcall
add
int3
or
cli
pushf
lds
or
movsl
pop
mov
inc
jmp
push
fsubp
add
js
jecxz
loop
ret
dec
cmp
clc
jmp
push
imul
movsb
lods
popf
jmp
dec
sti
fdivr
lock
enter
mov
pop
or
mov
scas
out
pop
sti
add
dec
cmp
sbb
sub
js
adcl
jo
adc
and
test
pop
pop
pushf
or
into
mov
cmpsb
jb
scas
pop
jbe
mov
int
mov
adc
sbb
jns
aaa
test
inc
shlb
shlb
sahf
int3
lock
pushf
add
push
fmulp
gs
adc
jle
lea
mov
push
sub
ss
mov
rolb
fstpl
ds
cmpsb
push
cmpsb
mov
push
pop
add
in
sub
roll
add
imul
mov
add
sti
loopne
mov
jbe
sti
idiv
enter
je
scas
call
mov
xor
push
inc
insb
push
pop
out
pop
inc
insb
int3
fdivs
pop
outsb
adc
fsubrl
ret
and
cld
test
xchg
ss
imul
push
or
unpcklps
shrl
inc
mov
and
and
jle
andb
sti
xor
dec
je
in
mov
mov
lock
dec
movsl
sbb
sbb
pop
leave
inc
jle
insb
cmp
jle
insl
inc
aam
jle
mov
out
or
mov
add
std
mov
frstor
scas
push
pop
cltd
and
pop
cltd
in
out
xbegin
lds
and
dec
aaa
add
mov
iret
xor
or
fdiv
jns
adc
loopne
inc
es
xor
fwait
lcall
jg
mov
stc
dec
or
sub
pop
ds
or
dec
das
fstl
jg
daa
outsb
or
mov
imul
pop
mov
fmuls
mov
insl
mov
xchg
lahf
cli
mov
xchg
std
push
inc
xor
xor
dec
leave
push
ret
add
icebp
imul
ret
cwtl
les
push
in
mov
sub
pop
jle
jecxz
repnz
adc
jl
dec
inc
fimuls
mov
imul
iret
ss
sti
push
out
jne
pop
or
adc
cmp
pop
xchg
ja
test
add
pop
jg,pt
dec
clc
insl
sbb
or
cli
aad
in
lret
cmp
pop
sub
enter
sub
in
int
pushf
fadds
fs
dec
bnd
rolb
daa
mov
cmp
pop
bound
fcomip
fistpl
movsl
inc
aaa
cmp
cmp
xor
fistpll
lods
pop
inc
sbb
or
mov
sub
add
and
and
xor
xorb
insl
imul
ljmp
fisubl
fsubs
cmp
daa
clc
sti
sbb
xchg
aaa
push
movsb
mov
push
push
pusha
jne
out
popa
aaa
adc
cs
jmp
ljmp
lcall
pop
int3
or
pop
inc
xacquire
xchg
mov
mov
jo
vcomiss
clc
pop
inc
add
add
xor
int
add
dec
pusha
push
jae
rcl
inc
fldenv
sti
pop
mov
icebp
push
in
adc
test
sub
xor
leave
imul
dec
dec
inc
or
movb
in
das
aaa
mov
mov
mov
sub
mov
and
into
aaa
ret
pop
out
cmc
jg
and
xchg
out
fnsave
mov
int3
xor
push
mov
mov
ja
pushf
push
es
and
push
push
lods
stos
je
out
push
push
xchg
pop
cmpsl
andl
loope
inc
mov
cmp
xchg
ljmp
out
adc
cmp
inc
adc
hlt
aas
sbb
mov
mov
xchg
xchg
lret
sbb
jl
dec
out
imul
jge
test
lods
or
and
jecxz
or
pop
mov
mov
mov
pop
lea
cmpsl
mov
lods
cmpsb
xchg
data16
sbb
into
adc
lods
push
inc
fs
sub
and
mov
cmpsl
xchg
inc
bound
or
and
mov
rep
xchg
movsl
xor
nop
xor
jmp
fxch
mov
sarl
inc
adc
mov
xor
mov
cmp
or
cli
sub
call
sbb
dec
or
fstl
jns
cwtl
ret
repz
jne
outsb
xor
aaa
hlt
fsubrs
dec
ljmp
inc
inc
mov
aam
jmp
iret
inc
scas
cmp
lock
cs
or
aas
or
rcr
xorl
and
daa
popf
dec
pop
movl
movsl
and
aam
cmpsl
mov
jp
mov
shlb
cmpsl
dec
jmp
xchg
int3
gs
test
sbb
mov
cmp
pop
das
dec
and
divb
fisubrs
mov
sub
pop
sarl
insl
sbb
jbe
movsb
lcall
cmp
or
shlb
cmp
sub
xchg
mov
out
adc
cli
push
loope
or
out
pop
je
sbb
pop
xor
js
nop
in
dec
xorl
fdivrs
sbb
into
sub
jmp
add
jbe
or
push
mov
mov
jl
xlat
in
lock
out
dec
repz
test
mov
mov
lods
xchg
dec
jle
rclb
adc
stos
sbb
cmp
cwtl
and
mov
scas
xchg
int
cli
add
add
fs
adc
add
push
lret
test
out
das
mov
ljmp
dec
incl
jle
es
mov
arpl
les
xor
fcomip
inc
sbb
jl
xchg
xchg
mov
push
movsb
ret
dec
stos
mov
mov
inc
test
pop
jno
es
aam
lods
lea
ret
mov
out
je
fidivl
mov
inc
aaa
inc
and
cmpsl
and
in
xor
jle
xchg
mull
pop
shrl
das
sbb
mov
iret
fmull
adc
lahf
sti
shll
ss
data16
repz
pushf
xchg
pop
call
sbb
popf
cli
dec
mov
lea
mov
cmp
mov
out
pop
lret
sub
xchg
cmp
lret
aaa
stos
xchg
jbe
jno
sub
into
and
fwait
scas
jno
mov
jp
sub
inc
adc
fcmovnb
cmp
ja
add
jg
popl
mov
lods
or
xor
loop
test
pop
mov
lahf
push
out
mov
outsb
dec
inc
sbb
sbb
and
xchg
sbb
mov
adc
imul
add
cmp
sub
pop
in
pop
popf
mov
inc
ds
rcrl
icebp
adc
push
mulb
aas
mov
adc
pop
popa
hlt
mov
fucom
jno
icebp
sbb
lret
push
ficoms
dec
fiadds
inc
mov
inc
mov
push
sarb
ljmp
cmpsl
sub
aad
testl
stos
add
loop
push
popf
bound
idiv
and
ds
mov
adc
fs
push
jae
sahf
push
insb
fmuls
inc
aam
out
cmp
mov
test
pop
fucomp
mov
pop
lea
rcll
daa
xchg
jne
xor
dec
lcall
and
dec
aaa
movsb
push
cmpsl
jp
bound
je
adc
xchg
lcall
bound
adcb
or
subb
addr16
lock
cmp
lahf
popf
mov
scas
aaa
cmpsl
dec
mov
je
jmp
push
jge
pop
push
push
les
inc
xlat
gs
cmpl
jae
pop
sub
push
arpl
arpl
ja
sbb
je
mov
mov
loopne
jne
pop
in
repnz
mov
dec
std
fdivp
in
pop
std
xor
fcmovnb
movsl
ss
dec
jbe
cmp
outsl
rcrb
ljmp
lret
mov
jno
bound
and
repz
out
or
jae
mov
fldenv
rdtsc
dec
dec
cmpsl
or
add
mov
not
outsl
xor
mov
ja
out
mov
sub
cmp
inc
rcr
xchg
mov
xchg
add
sub
cmp
mov
dec
orl
adc
mov
icebp
outsb
cmp
cld
adc
jle
addr16
mov
mov
jle
mov
or
jp
jg
imul
push
movsb
sahf
ret
stos
in
les
mov
test
jmp
pop
jnp
jge
push
adc
pushf
inc
sub
adc
mov
mov
dec
popf
mov
testl
call
enter
shl
add
pop
out
stos
add
popa
cmpsb
mov
hlt
jmp
cld
scas
repnz
xor
movsb
test
imul
das
shlb
in
pop
daa
fcoms
js
pop
pusha
adc
pop
rcrb
push
mov
sub
insl
pop
or
jmp
xor
sarb
repz
ss
xchg
shl
sbb
rcrl
popf
lret
cmc
push
inc
push
cmp
push
dec
inc
xor
push
into
and
int
add
dec
stos
out
test
movsb
sub
sub
std
ret
adc
add
pop
mov
dec
lods
jp
arpl
sti
sub
lock
ljmp
into
jge
cmp
enter
or
mov
jecxz
push
push
orb
push
adc
and
sarl
jo
shll
cwtl
aad
mov
mov
xchg
pushf
and
addr16
test
popf
pop
mov
js
and
mov
pop
shrl
daa
push
aam
lock
mov
jmp
loopne
ljmp
in
enter
dec
movsb
ficompl
jg
cs
sub
and
pop
lret
push
dec
sbb
js
jl
xchg
test
mov
mov
outsb
loop
and
xchg
sbb
xchg
rorb
lret
mov
xchg
enter
sub
sub
iret
lods
popa
xor
into
mov
cmpsb
je
fnstsw
pop
sbb
adc
ret
sbb
sbb
mov
and
ds
addr16
adc
xchg
sub
outsl
iret
fsubp
js
jo
popf
ja
pop
into
mov
and
notb
dec
repnz
pop
outsb
hlt
mov
dec
jp,pt
sub
sub
sbb
dec
daa
and
movsl
ljmp
xor
sahf
nop/reserved
add
push
and
push
cltd
and
in
sub
mov
mov
rorl
jo
sub
cmp
xchg
add
ss
cmpsl
pop
jns
jb
jecxz
divb
dec
mov
jbe
push
mov
cld
dec
sbb
fcoml
repnz
insl
push
jno
cmpsb
icebp
pop
fidivrs
mov
cmp
in
jge
jp
or
icebp
sub
int
sub
in
dec
sbb
out
sub
pop
inc
mov
jmp
pop
cvtps2pi
lods
call
pop
push
aas
xchg
jo
sbb
mov
movsb
icebp
jne
pop
xchg
jbe
jmp
cltd
movsb
fldcw
push
test
xor
cmp
fldt
pop
xor
pushf
test
fwait
sahf
aad
arpl
mov
jle
in
insl
adc
int3
sbb
dec
xor
lcall
lea
les
jnp
iret
clc
iret
lea
pushw
inc
std
sub
jno
jns
ljmp
out
jb
and
rcrb
and
sub
jns
or
mov
fidivs
xchg
call
cmp
or
enter
xchg
aad
mov
mov
or
pop
in
sub
leave
jl
jnp
xchg
nop
mov
adc
add
sbb
into
adc
sub
mov
lods
insl
push
jne
xchg
sub
test
rcrb
or
xchg
jmp
sbb
fbld
mov
pop
push
ss
push
cld
mov
stos
push
pop
test
cmpl
lds
rol
jbe
jl
int3
stos
mov
cs
fsincos
lcall
les
pop
cmc
stos
or
shrl
jg
sub
dec
cmp
mov
popaw
pusha
push
cmpsb
gs
mov
pushf
dec
fnsave
repz
or
pop
or
adc
inc
or
out
rcrl
daa
shlb
bound
mov
adc
lret
xchg
std
lahf
cmc
add
shr
or
and
les
adc
lret
sbb
dec
mov
lods
push
sbb
dec
aas
mov
ss
mov
sbb
leave
mov
das
sbb
adc
or
ljmp
clc
mov
dec
dec
push
mov
dec
inc
dec
pop
push
adc
jae
stos
add
push
outsl
inc
cltd
mov
ljmp
gs
mov
mov
jo
lret
mov
iret
mov
fcompl
pop
stos
xor
jo
jl
pop
sbb
push
repnz
pop
jno
shll
pop
jl
pop
mov
or
pop
shl
cmp
icebp
xor
js
call
rcll
ss
mov
lret
mov
mov
cld
push
mov
and
movsb
adc
sub
mov
in
mov
inc
xor
push
push
sub
insl
dec
push
clc
xor
loopne
arpl
ret
jno
add
pop
mov
cwtl
mov
roll
mov
ss
lods
inc
ss
and
mov
pop
push
cmp
cmp
repz
xchg
lds
lahf
test
xchg
mov
popf
or
loopne
and
push
dec
daa
rcr
orl
jmp
loope
in
jecxz
sub
cmp
call
and
sarl
push
test
rep
test
idiv
paddq
jl
je
jmp
repz
jecxz
add
sbb
adc
add
sub
jo
cmp
cmp
repnz
xchg
mov
adc
insl
push
loopne
xchg
push
stos
adc
imul
jo
cli
push
pop
dec
bound
flds
mov
pop
adc
mov
cmpsb
pop
stos
lock
ret
nop
aaa
adc
imul
mov
ficoms
sub
leave
xorl
fistps
cmc
adc
lahf
jns
lea
outsl
jmp
jne
jns
xchg
mov
lea
hlt
sbb
xor
pop
xor
push
fwait
loopne
in
mov
sti
xchg
dec
mov
filds
push
aam
cmp
xsaveopt
xchg
pop
jo
pop
sbb
mov
call
and
dec
gs
ds
adc
insl
jg
mov
dec
jnp
mov
jl
fistpl
mov
movsb
mov
pop
idivl
adc
hlt
inc
inc
sar
sbb
cmp
add
lahf
dec
sbb
mov
clc
sub
sahf
mov
ja
and
adc
fstl
nop
es
sarb
xor
rolb
mov
xorl
rolb
daa
inc
mov
push
das
sti
rcll
movsl
or
leave
mov
in
pop
jmp
fisttpl
inc
pop
stos
adc
bound
sarl
jmp
daa
sbb
mov
sub
outsb
adc
jne
fcmovnb
mov
mov
shl
fsubrs
sahf
outsb
fs
into
jp
hlt
push
out
push
call
lret
and
lods
mov
sub
mov
jl
jecxz
mov
pusha
lea
out
jnp
sub
cmp
leave
cmp
sub
or
xlat
pushf
popf
add
jmp
jle
sbb
test
xchg
rol
mov
and
lea
popa
dec
jp
mov
enter
and
mov
cmpsb
dec
jecxz
dec
fs
data16
jns
pop
ficoml
daa
cli
pop
and
iret
mov
sub
jge
repz
rolb
lock
dec
inc
mov
ds
vpsubusb
hlt
repnz
shrb
adc
shlb
cmp
dec
sub
ja
repnz
xchg
cld
inc
call
lcall
cmpsb
repnz
mov
cld
mov
push
sets
ret
sub
jl
sbb
xchg
inc
popf
xchg
push
mov
xor
lret
xor
stos
jp
push
imul
ds
mov
lret
ret
and
adc
pushf
ret
cli
xor
addr16
movzbl
dec
dec
xor
in
add
stos
cmp
dec
mov
scas
dec
pop
xor
mov
jle
insl
mov
adc
adc
jne
test
xor
mov
push
scas
lock
or
sbb
loopne
decl
pop
pop
fiadds
scas
fcmovnb
sarb
pusha
mov
je
iret
xor
stos
or
xor
movsb
dec
sbb
addr16
pop
or
enter
lds
jbe
sbb
cmp
sub
sbb
cli
push
push
xor
fsubr
aam
or
into
ss
sub
push
jge
dec
outsl
es
fcoml
ljmp
push
pop
loopne
inc
jecxz
nop
mov
adc
mov
movsl
je
movsl
mov
mov
imul
cmp
dec
pop
xor
jbe
test
outsb
jae
stos
adc
aaa
xor
inc
rcr
pop
pop
sub
pushf
cmpsl
icebp
and
push
jbe
sti
lret
mov
cltd
mov
call
cltd
sub
bound
fwait
xor
jmp
xchg
sub
int3
push
stos
call
mov
nop
xor
inc
fdivrl
insl
das
pop
pop
mov
repnz
scas
xchg
fadds
fwait
jo
insl
xor
aad
mov
or
aad
add
jle
popf
lds
dec
stc
js
sub
push
jp
hlt
sbb
jl
lods
or
imul
cltd
mov
adc
fincstp
add
jge
push
mov
sysexit
push
aas
xor
fdivrl
int
inc
sbb
imul
movsl
insl
movsb
pushf
sarl
std
push
into
hlt
push
inc
mov
fstl
ss
inc
dec
cld
ficoml
ss
lock
add
imul
pop
jge
mov
jo
xor
push
shll
push
das
cmc
adc
pop
mov
fcompl
push
jns
test
bound
mov
loop
xor
xchg
insl
pop
cmp
das
mov
lret
pop
and
mov
pushf
push
mov
adc
sub
sbb
jae
icebp
insl
xchg
mov
frstor
je
mov
mov
inc
lcall
out
or
dec
je
ds
mov
inc
jg
ret
mov
imull
fdiv
subl
xor
push
fwait
mull
and
mov
fcmove
cs
xlat
or
cli
push
stc
jp
mov
adc
jne
roll
jne
cmp
xchg
fwait
cltd
repnz
and
aam
lahf
pusha
dec
pop
or
in
pop
data16
loopne
pop
and
fldl
dec
stos
xchg
jae
dec
push
adc
fldl
loope
out
mov
jg
jg
fidivl
in
dec
mov
sbb
mov
lods
add
lds
jge
push
jb
sub
test
inc
xchg
inc
jne
dec
ret
out
jp
jp
mov
mov
hlt
mov
leave
enter
scas
mov
stc
rcrl
out
push
mov
mov
movsl
stos
int3
in
rcl
daa
repz
dec
xor
shlb
sub
outsl
add
into
jecxz
add
lahf
adc
sysexit
insb
enter
loopne
add
vandnps
lahf
mov
dec
xor
jne
ret
subb
aaa
xor
out
rclb
rcll
out
call
sub
mov
sbb
mov
loop
sub
lods
mov
loopne
lcall
jne
jp
lock
jge
pop
repnz
pop
rcr
test
xchg
mov
hlt
clc
out
inc
dec
push
fsubs
dec
stc
sub
enter
cs
test
out
push
or
mov
mov
jb
call
scas
pop
adc
hlt
sub
sub
out
icebp
lods
push
xor
jge
mov
mov
inc
jg
test
rcl
or
ss
call
xor
push
adc
sbb
cwtl
xlat
xchg
cmp
fisubrl
mov
cmp
push
push
xor
lock
xchg
dec
jmp
lods
or
sub
clc
stc
test
das
dec
insb
cmp
jge
and
and
fistps
sbb
inc
bound
popa
sbb
sub
loop
leave
pop
mov
mov
sbb
sub
sbb
loop
test
cmpsl
xchg
push
clc
das
pop
cmp
or
mov
pop
push
repnz
mov
jp
adc
adc
push
mov
jge
pop
sub
sbb
lds
cli
jns
push
inc
adc
iret
addr16
lret
in
mov
dec
pop
ret
shr
or
cmc
xchg
xor
jno
pusha
pop
and
mov
icebp
lcall
fistl
in
inc
imul
stos
xchg
aas
rcr
cmp
dec
mov
sbb
adc
sbb
testl
xchg
arpl
gs
insl
enter
clc
xchg
ret
mov
sbb
cwtl
add
push
add
pusha
xor
xchg
adc
fucomip
add
sbb
lds
in
pop
cmpsl
inc
in
test
test
cmc
aad
testb
push
mov
insb
sbb
sbb
repnz
push
mov
insl
or
ficomps
aam
daa
sbb
jl
push
jp
fdivrp
mov
push
pop
or
mov
xchg
push
sub
rorl
mov
cmpsb
iret
imull
repz
out
sbb
cmp
pop
dec
sub
pop
push
les
fstl
es
push
add
adc
add
lcall
int
js
ret
in
scas
lret
stos
pop
fstl
mov
psraw
in
xchg
jl
mov
mov
adc
out
xor
ljmp
xor
sbb
or
stos
out
sbb
leave
pop
adc
pop
divl
lds
fcmovnu
mov
pop
pmaxub
aaa
insb
lock
and
add
sub
push
lds
cmpsl
rclb
adcb
cltd
ss
mov
test
mov
incb
imul
andb
jecxz
pop
icebp
jno
dec
cmp
jmp
das
sbb
mov
loop
into
push
mov
mov
jmp
cmpw
mov
fdivp
aas
aas
cmp
and
jmp
hlt
pushf
test
je
cs
adc
cli
or
sbb
pop
mov
jns
lods
and
add
pop
call
xchg
pop
rcrl
repnz
mov
inc
xchg
mov
sti
cmp
std
fucomi
xor
insl
and
pop
popf
lahf
inc
xchg
dec
inc
divb
mov
int3
inc
pop
iret
inc
lea
adc
push
or
into
lods
inc
imul
popf
jnp
mov
les
mov
push
add
sub
loop
xlat
fsts
push
popa
or
cmp
stos
xchg
lea
and
xchg
dec
ds
stos
adc
pusha
cs
lcall
faddl
jmp
xor
sub
insb
js
es
sub
pop
dec
inc
jge
pop
into
daa
pop
cli
jae
and
xchg
movsl
inc
imul
jge
movsb
sub
xchg
push
cmp
ret
call
repz
fdiv
mov
pop
xchg
add
aad
popf
scas
push
sbbb
adc
mov
and
inc
xlat
mov
in
dec
or
aas
popf
mov
pushf
lahf
xchg
data16
cmp
pushl
ds
ret
jg
divb
sbb
push
stc
sti
adc
lret
movsb
iret
or
pushf
fdivrs
mov
push
insb
ret
jle
cmp
and
clc
lahf
mov
cmp
and
mov
sahf
pusha
lret
dec
pop
stos
fucomi
popf
adc
out
adc
or
sub
loop
xor
pop
sbb
loopne
push
in
xchg
popf
jmp
adc
ficoml
je
push
inc
dec
rep
subl
inc
sbb
pop
or
and
stos
jns
inc
mov
pop
movsl
cmp
enter
and
mov
aas
jmp
push
xor
sbbl
cli
add
lcall
ds
mov
fcmovnb
jmp
out
shl
mov
fs
aaa
lea
loopne
psllw
push
and
adc
sbb
mov
mov
push
lds
aaa
sbb
das
outsl
dec
adc
jge
xor
push
xchg
fsub
fistpll
inc
and
cld
sbb
or
xor
rcrl
inc
push
sahf
pop
sahf
jmp
adc
aas
mov
jle
pop
xchg
and
add
pop
rcll
lcall
aas
out
push
je
bound
out
js
dec
dec
sub
jo
pop
xchg
mov
lds
dec
lea
sub
divl
jbe
jmp
xchg
nop
dec
sub
mov
std
stos
shl
xor
jae
inc
imul
lret
xchg
leave
das
aas
add
ds
andl
popf
jno
adc
mov
in
cmp
addr16
daa
ss
je
jb
sub
jbe
lret
dec
lahf
mov
out
xorb
jno
insl
ret
iret
stos
mov
cmp
mov
test
xchg
in
cli
inc
mov
add
pop
fcmove
rep
notl
and
cmp
fistpll
dec
inc
jne
push
pop
mov
jle
dec
adc
data16
bound
jbe
mov
push
add
jge
lock
mov
xchg
jae
int3
outsb
dec
test
mov
popf
add
mov
call
mov
cltd
fdivl
mov
cmc
mov
daa
sbb
scas
mov
ret
shl
das
cmpsl
push
pushf
mov
xchg
or
sbb
rol
cmp
test
inc
or
jno
jae
sbb
cli
scas
jns
jne
ljmp
dec
fsubl
xor
cmp
jns
in
pop
fildl
std
pop
pop
les
mov
mov
enter
jns
nop
std
push
in
shlb
setge
and
je
push
add
cmp
mov
in
imull
sbb
pop
jae
mov
cmp
rol
out
jge
ret
aas
test
aaa
repz
and
jnp
addr16
outsl
in
insl
xor
aaa
mov
inc
adc
lds
fcomp
jnp
sbb
mull
fstl
aas
cmpsb
and
jecxz
fs
xchg
imul
pop
pushf
jecxz
pop
int
ret
and
out
xchg
pop
dec
ficompl
lahf
push
cmp
adc
lea
imul
adc
xchg
jno
mov
jns
imull
cli
loopne
jo
repnz
insb
jge
shrl
scas
push
outsl
in
in
pop
shrl
dec
aaa
adc
int3
jecxz
xor
or
xchg
push
dec
out
jle
fsubr
test
insb
lods
dec
add
ss
jne
mov
dec
mov
dec
jo
in
xor
push
push
incb
sub
in
js
cmp
fld
push
sub
cli
outsl
sbb
in
pop
jne
xchg
dec
aam
xor
mov
push
mov
jle
and
fcomps
sbb
and
in
pop
jno
mov
dec
dec
mov
push
inc
pop
lods
addl
sub
pop
ja
in
mov
insl
jl
jbe
dec
outsl
push
inc
inc
inc
shr
mov
ss
mov
sbb
jge
jecxz
xor
push
pop
pusha
mov
push
mov
and
out
pop
sub
out
dec
push
or
jo
fidivs
mov
testb
and
insb
insl
dec
pop
clc
push
adc
cmpsb
arpl
add
mov
jne
push
and
lcall
adc
pusha
mov
ret
jb
sub
add
test
sub
scas
sub
dec
inc
and
jl
xor
das
mov
inc
push
divb
and
fs
or
jge
pop
push
add
fdivl
pop
pop
lock
inc
pop
cmp
mov
sub
aad
imul
adc
mov
or
pop
jg
jb
mov
test
inc
jae
push
jl
imul
in
ljmp
aad
in
xchg
subps
in
popf
enter
dec
mov
cmp
cli
test
dec
add
fs
pop
and
out
sub
cmp
ljmp
jmp
sub
mov
je
jecxz
enter
loope
sub
cld
push
mov
fbstp
mov
repnz
jge
in
test
dec
or
js
fistpl
jmp
addr16
xor
and
pusha
int
xchg
dec
sbb
mov
add
popa
mov
mov
mov
es
jl
loop
xor
aas
jmp
xor
push
into
inc
rcrl
jmp
addr16
xchg
or
rclb
jge
or
jnp
xchg
push
xlat
push
inc
pop
aam
inc
ret
lcall
and
int
mov
dec
fadds
xchg
push
xor
sub
mov
into
lret
inc
into
pop
cld
mov
dec
movsl
data16
inc
xorl
insb
ss
fwait
repz
or
adc
or
data16
jl
lods
ds
stos
xchg
mov
movsl
addr16
xor
stos
cmp
popa
and
mov
repz
adc
pop
out
xchg
xchg
repz
popa
jge
mov
rcl
push
mull
shl
cmp
les
mov
push
cltd
xor
rclb
lds
gs
testb
fimull
xchg
cmpsb
xchg
sbb
pop
cli
pop
loopne
lods
adc
sbb
sbb
inc
out
push
xor
inc
rclb
lods
mov
mov
lcall
pop
arpl
int
fs
sbb
xchg
mov
ret
std
or
shl
push
inc
push
movsl
fwait
pop
sub
inc
add
out
push
rcl
cwtl
in
sub
mov
lods
insl
lcall
loope
ficoms
daa
pop
and
cmp
les
mov
sti
in
sub
cmp
mov
cmpsl
dec
test
pop
das
gs
js
and
xchg
and
rcrb
sub
out
mov
mov
and
or
add
je
test
cs
or
movsl
stos
xor
stc
scas
mov
sub
loope
jno
ds
xchg
roll
hlt
insl
jp
lods
cmp
lock
jecxz
add
jnp
dec
push
pop
inc
popa
scas
adc
imul
cmp
inc
rorb
and
pusha
xchg
xor
xchg
lcall
mov
aam
sbb
test
mov
sub
push
sarl
jmp
xor
ret
rcrl
or
push
mov
and
arpl
and
out
in
dec
mov
dec
sub
adc
mov
call
dec
jnp
clc
aam
ja
icebp
jno
movsl
imul
scas
jmp
in
sub
xchg
lds
mov
xor
lret
xor
cs
mov
adc
mov
jb
xor
les
sub
pop
push
into
jb
mov
cmpsb
cwtl
jb
sub
cmpb
mov
mov
xorl
adc
jbe
jns
aam
rol
xor
movsl
imul
fisubrl
enter
xchg
movsb
sub
xchg
dec
testl
or
fimull
mov
dec
xchg
es
jecxz
insl
test
mov
and
dec
mov
sti
sbb
outsb
xchg
repnz
mov
push
dec
pop
in
cli
fildl
jns
lds
sti
sbb
cwtl
ljmp
dec
out
mov
jle
inc
in
lret
enter
daa
sub
ficoml
out
xor
pushf
and
mov
jp
out
xor
cmp
sahf
in
cltd
enter
xor
arpl
or
sbb
mov
mov
stos
xchg
inc
inc
jnp
jge
sbb
push
adc
mov
aas
jae
movsb
insb
dec
push
mov
sub
mov
clc
mov
jns
popa
les
imulb
arpl
adc
fsubrl
push
and
arpl
sbb
or
enter
lret
inc
add
inc
or
sbb
out
iret
stos
imul
popf
ret
dec
adc
pop
xor
in
sub
inc
mov
or
mov
popf
lods
xchg
lods
stos
jmp
rcrl
iret
ss
jnp
stc
movsl
call
jae
popa
add
dec
jmp
push
inc
clc
sub
add
jnp
jo
addr16
jno
lcall
jno
mov
stos
mov
data16
test
testb
mov
lea
xlat
sbb
pushf
mov
adc
jb
rol
cld
add
adc
test
sti
mov
rcrl
lret
inc
stos
pop
jns
cmp
out
cmp
lahf
or
push
sbb
mov
sahf
add
mov
mov
movsl
pop
loopne
rcll
xor
jno
in
xchg
xor
cmpsl
mov
inc
push
jg
mov
push
and
test
push
out
adc
add
rclb
popf
stc
add
decb
jg
mov
cmpsl
lods
cmpsb
mov
xchg
xchg
out
and
dec
sub
clc
add
xor
test
aaa
enter
or
testl
jae
stos
inc
xchg
add
xorb
test
insb
in
fsts
jae
int
into
mov
push
dec
inc
pop
lcall
sbb
pop
fidivl
and
mov
cwtl
mov
mov
icebp
push
mov
bound
xchg
and
aaa
pop
cmp
rolb
mov
clc
in
xchg
das
lcall
leave
js
or
mov
xor
outsb
xor
gs
jae
ret
inc
jle
mov
call
or
lret
xor
mov
add
push
sub
insb
pop
mov
xchg
repz
int3
add
jae
mov
lods
js
je
in
test
xor
pushf
in
scas
pop
popf
mov
sbb
mov
adc
sbb
cmpsb
test
jp
lahf
xchg
push
leave
push
ja
idiv
divl
pop
pop
aas
popa
gs
mov
testb
stos
pop
iret
add
fbstp
outsl
outsl
mov
xchg
mov
mov
mov
dec
mov
loop
sbb
out
mov
pop
popa
xchg
outsb
or
in
sti
inc
aas
jb
dec
stos
pop
or
arpl
jg
imul
mov
and
cmp
scas
adc
jl
or
xchg
nop
push
dec
sbb
mov
rep
movsb
jae
in
cmp
cs
inc
out
hlt
fnstcw
ret
icebp
iret
add
fwait
dec
mov
pusha
mov
ja
cltd
add
arpl
inc
xchg
or
inc
test
mov
adc
push
push
jecxz
lret
icebp
sub
or
in
fcmovbe
push
test
mov
es
push
lock
pushf
jmp
mov
push
jge
lods
mov
and
xlat
sbb
sub
adc
cmp
push
shl
sbb
xchg
sub
test
sbb
call
std
popl
cwtl
cltd
push
cmp
mov
andb
std
stc
mov
mov
push
cmp
std
pop
test
push
or
push
mov
lcall
mov
lods
mov
jno
addr16
fiaddl
orb
xchg
jne
lods
xor
dec
xchg
mov
sbb
xlat
mov
mov
lock
int3
xchg
mov
jp
idivl
scas
ret
fnstenv
and
jb
call
dec
cmp
pop
repnz
mov
sub
adc
sbb
push
mov
gs
adc
fistps
and
mov
mov
or
xchg
dec
push
aad
pop
adc
cmp
push
pop
pop
xchg
gs
xlat
sbb
test
cli
sub
nop
xchg
jl
rcr
fwait
in
dec
daa
pop
cltd
pop
xor
push
xchg
push
aam
sbb
loope
lds
out
cmp
cld
and
in
cmpsb
aaa
mov
sbb
ret
sub
and
inc
gs
in
stos
movsl
aad
or
xchg
lods
xchg
cmp
xchg
mov
mov
xlat
push
dec
ja
mov
in
push
cmp
pop
xor
test
xchg
popa
cmp
shrl
sarb
dec
add
jmp
push
repz
xchg
lret
cld
jbe
lds
inc
das
fadd
int3
mov
in
in
out
cmpsl
and
xor
jle
and
mov
mov
mov
ficompl
and
or
lds
or
jp
fadd
aas
push
cmp
inc
push
mov
push
out
ret
inc
mov
aam
push
aaa
pop
jae
bound
adc
inc
cli
mov
push
jns
jae
mov
xchg
mov
ret
sbb
fisubl
sarb
fisubs
not
lock
pusha
inc
inc
les
push
jnp
mov
jnp
stos
lret
std
xor
call
jno
std
or
xor
aam
scas
mov
lret
pop
or
inc
in
fmull
ljmp
in
movsl
std
inc
jbe
es
add
sbb
mov
xchg
fs
fistpl
dec
ss
adc
inc
jecxz
jo
shrb
adc
inc
adc
inc
add
in
push
jns
add
jp
dec
ret
ss
out
incl
and
cmp
jne
dec
lret
pop
test
xchg
inc
pop
and
je
xorl
pop
loop
addb
stc
aas
ds
mov
mov
je
lret
dec
leave
sbb
mov
push
pop
in
std
jo
filds
pop
imul
hlt
pop
mov
shr
loop
add
add
cmc
push
mov
scas
hlt
fcomps
fimull
ret
imul
inc
pop
fsubrl
mov
imul
cld
inc
xor
shlb
loope
or
or
notb
adc
dec
incl
call
in
icebp
push
mov
mov
jbe
push
in
add
push
jae
sub
imul
clc
sbb
adc
enter
pop
sbb
pop
ret
inc
repnz
fwait
inc
xchg
enter
jp
lock
pop
add
pushf
je
cli
xchg
xor
lea
sahf
mov
mov
lret
test
aaa
mov
sub
mov
rcrb
adc
aas
jnp
inc
jno
std
cmp
jmp
mov
inc
xchg
mov
lods
arpl
fs
icebp
jnp
or
mov
sub
data16
mov
arpl
jno
add
dec
fcoml
pop
pushl
mov
dec
push
push
stos
mov
or
test
loopne
bound
push
loopne
pop
idiv
out
jne
inc
mov
enter
xor
sbb
negb
cs
jnp
sarl
push
and
adcl
xor
lahf
out
adc
cmp
xchg
rorb
fsubl
jl
rclb
lea
inc
adc
mov
cmp
scas
aam
and
popa
pusha
mov
mov
sbb
loope
mov
test
lahf
and
and
pop
add
sbb
cmp
cmp
test
jp
pusha
shll
lds
sub
std
add
or
lret
xchg
mov
jp
lock
call
je
mov
cmc
xchg
xchg
add
mov
jne
adc
mov
pop
jae
lea
sti
cld
sub
mov
fwait
push
lcall
xchg
stos
pop
mov
xlat
adcl
aad
outsl
xor
filds
leave
or
inc
mov
xor
pop
jl
jne
fcomps
mov
adc
rclb
icebp
jp
mov
dec
xor
jl
cmpsb
sahf
jg
mov
aad
pop
jl
test
out
push
xor
pop
mov
xor
pop
loope
dec
jp
mov
push
inc
sahf
sti
es
push
aas
lock
lea
xor
orb
xor
mov
aam
or
xchg
mov
and
mov
in
pushf
jecxz
dec
aad
inc
test
xor
pop
fidivs
jl
sarb
stos
push
dec
and
pop
shl
push
fcmovu
xor
lock
iret
mov
sub
scas
mov
insb
mov
mov
or
sub
dec
or
lock
dec
pop
stos
mov
movsl
jbe
ret
add
les
cmp
jne
fimull
in
les
jecxz
rorl
mov
les
sub
das
fildll
push
mov
in
ljmp
cmp
pushf
ja
mov
arpl
inc
incb
lock
jb
jp
xor
xchg
or
bound
stos
jge
sub
fldenv
cmc
lods
jmp
xchg
enter
mov
sbb
subl
stos
stos
daa
loopne
push
push
hlt
push
sbb
xchg
aaa
xorb
inc
pop
sbb
in
or
testl
rorb
enter
dec
jbe
rcrl
and
jmp
cwtl
adc
xchg
aaa
lret
inc
ret
push
jae
jns
cvtps2pd
lret
sub
out
mov
in
sbb
dec
fidivs
mov
cmpsb
ret
mov
or
and
cli
insb
out
jg
xlat
gs
inc
push
and
adc
in
cld
jle
inc
pop
out
lds
popa
fs
jg
mov
pop
mov
cmpsb
outsb
lods
pop
cmp
add
sti
outsl
inc
adc
jns
ds
dec
ficompl
stos
stc
pop
pushf
pop
outsl
data16
adc
mov
sbb
xchg
inc
sahf
sbb
stc
sub
push
mov
xchg
add
xchg
push
minps
jg
cwtl
sahf
imul
inc
pop
jmp
pusha
push
imul
lds
jge
jle
jmp
jbe
aas
jbe
jp
test
in
into
int
inc
in
push
in
aad
xor
sub
mov
or
push
loop
pop
lcall
mov
in
shll
imul
mov
mov
clc
mov
add
cld
xor
jne
inc
fnstcw
xchg
cs
sbb
pusha
cmp
int3
dec
push
bound
sub
aas
add
mov
popa
test
cmpsl
into
xacquire
mov
push
xor
psubusw
add
sub
popl
bound
lahf
out
bound
scas
cmp
inc
push
and
outsb
jmp
cmp
lret
lock
xlat
xchg
popf
push
aad
add
or
push
push
stc
and
mov
shrb
arpl
mov
push
stos
add
out
call
sbb
dec
dec
test
fdivl
cmp
mov
aaa
test
xchg
rclb
cmp
inc
cmp
pushf
loop
push
cld
and
jge
mov
pop
adc
xchg
lods
jae
cmpsl
sti
repz
push
jle
mov
pop
sub
xchg
and
mov
int
cli
into
cwtl
push
sbb
mov
inc
pop
lods
addr16
inc
xor
fucomip
cmp
cld
daa
add
xor
clc
sbb
and
pop
clc
jns
add
push
push
call
pop
lcall
in
subb
gs
loope
sub
sub
lcall
pop
or
mov
call
dec
cwtl
dec
jp
ss
test
adc
xor
icebp
push
pushf
fadds
rclb
sbb
dec
inc
in
mov
out
arpl
fabs
call
adc
popa
pop
and
aad
imul
sti
sbb
sub
add
shlb
jne
inc
mov
cmpsl
mov
stc
fistpl
sbb
sarl
ja
lods
cmp
imul
test
fnsave
mov
movsb
and
sub
jge
sahf
xchg
jnp
pop
or
pushf
sbb
mov
and
xchg
push
enter
mov
dec
jl
stos
push
add
jg
fst
aaa
call
and
jbe
mov
imul
push
imul
cmp
mov
in
cwtl
adc
xchg
outsl
push
push
imul
fmull
mov
dec
mov
aad
je
and
pop
push
xor
cmpsl
cmp
lods
insb
fldl
fs
bnd
inc
sub
xor
cld
repz
imul
cli
mov
xchg
fs
mov
sbb
rcr
stos
xchg
and
push
call
dec
cmp
push
in
cmpsb
rcrb
nop/reserved
sahf
and
js
dec
test
dec
push
ja
and
dec
push
inc
pusha
fs
or
xor
xchg
push
addr16
xor
dec
test
test
fcompl
mov
in
sbb
mov
or
mov
mov
mov
mov
lods
lahf
push
or
jmp
scas
std
in
mov
sbb
mov
or
je
inc
test
adc
xchg
cwtl
scas
push
push
pushf
or
or
sbb
test
cmp
xchg
pop
jb
call
repz
lahf
fdivrl
mov
push
fdivl
push
pusha
out
or
fnstcw
cmp
mov
sub
jb
test
push
arpl
jge
stc
xor
lret
cmp
loop
xchg
mov
daa
cld
xorw
push
pop
cmpl
loop
imul
fdiv
pop
sub
mov
jmp
mov
lret
not
je,pn
iret
fsub
stc
enter
movsl
mov
scas
sub
jne
mov
ficomps
inc
xor
push
xchg
inc
gs
and
jo
jmp
fdivp
out
nop
icebp
xchg
aaa
inc
lahf
jbe
xchg
and
mov
loop
xchg
pop
scas
cli
movsl
leave
cli
sar
adc
sti
lods
repnz
jbe
sti
stos
add
mov
inc
lods
mov
les
movhlps
lcall
mov
xchg
icebp
insl
add
sbb
in
shll
popf
das
jo
xor
inc
adc
cli
push
adc
je
adcl
inc
outsb
push
pop
and
mov
xor
bound
cs
jne
xchg
dec
outsb
sti
add
fmuls
insl
push
js
mul
bound
je
mov
fs
mov
jecxz
xorl
mov
lahf
fildl
insl
cmc
sbb
adcl
lahf
cmp
and
xchg
aaa
adc
mov
push
fcos
add
std
lret
push
in
scas
cmpsb
frstor
and
push
idiv
xlat
cmp
jge
repz
popf
pop
and
inc
and
lea
repnz
call
outsl
mov
push
into
gs
incl
fnstenv
leave
lea
stos
jp
stc
in
dec
icebp
dec
lods
test
mov
stc
sub
mov
pop
stos
push
flds
sub
jno
xor
sub
andb
rcll
mov
inc
shr
jo
imul
adc
pop
fistps
xor
pop
mov
fisubl
aas
in
lods
stc
in
loopne
mov
fimull
shlb
and
cmp
icebp
sub
sub
jns
in
cmc
in
push
lcall
fistpll
mov
gs
adc
sbb
jecxz
adc
arpl
fbstp
jns
mov
cltd
das
pusha
nop
dec
inc
xor
das
mov
xlat
mov
in
repz
ja
push
mov
loopne
pusha
imul
xchg
mov
fiaddl
adc
inc
gs
add
cmpsl
aaa
sub
sub
dec
pusha
mov
sahf
out
shr
cwtl
add
pop
data16
xor
cmp
pop
flds
ss
or
hlt
jo
out
pushf
adc
cmp
aad
imul
push
adc
mov
lods
cmp
xor
int3
adc
mov
loop
nop
punpcklbw
and
popf
ret
jg
mov
sub
outsb
shl
arpl
inc
pop
cltd
jl
pop
inc
mov
sub
fcmove
jmp
es
gs
sbb
cmp
mov
adc
mov
add
inc
adc
ficoml
sahf
idivb
in
stos
hlt
jl
aad
xchg
jbe
jmp
faddp
jbe
pop
cmp
sarb
jp
pushf
js
cmp
fs
stos
dec
mull
lea
cltd
js
mov
lock
lcall
mov
and
inc
lret
jecxz
popf
push
xor
or
icebp
pop
or
mov
jg
mov
mov
push
fldl
lods
das
lahf
adc
cmpsl
mov
sbb
cmp
mov
xor
cmp
mov
inc
dec
bound
sub
aam
jno
test
shll
jo
mov
cmp
lods
jge
daa
cs
push
out
xlat
imul
insl
jne
fnstcw
push
inc
fstps
mov
loope
push
dec
jmp
cmp
adc
ja
outsb
ljmp
hlt
push
mov
cs
ss
clc
nop
insb
cmp
les
mov
pop
push
pop
movsl
push
xchg
arpl
sar
cwtl
bts
andb
ja
fbld
stc
cmp
aad
outsl
fadd
add
js
xchg
jae
shrb
jle
mov
and
mov
data16
loope
aad
mov
mov
mov
pop
sbb
mov
jle
in
adc
xchg
in
in
sarb
je
les
pushf
fstl
push
roll
sahf
jg
adc
stos
sub
lods
jecxz
mov
jg
ret
insl
sahf
inc
ret
sub
sub
out
shrl
jo
jns
jmp
test
mov
inc
pusha
push
inc
xchg
xchg
sbb
fidivrl
jecxz
push
jp
ffree
in
mov
popa
cmp
mov
les
lret
packssdw
add
movsl
roll
cmp
sub
jecxz
sti
aas
mov
enter
bswap
sbb
push
push
test
mov
and
mov
test
popf
ljmp
cmp
insb
push
mov
mov
in
je
jne
fcmovnb
pop
stos
test
xchg
push
std
mov
pop
jbe
lods
adc
push
push
dec
stos
or
pop
mov
icebp
cmp
or
sbb
lahf
inc
mov
pop
daa
mov
pop
mov
mov
aad
cmp
decl
inc
or
dec
add
lods
clc
inc
inc
loop
ja
jl
xor
mov
fs
mov
ljmp
repnz
mov
int
xchg
and
pop
push
pusha
je
push
or
adc
sbb
push
mov
into
sub
ja
or
xchg
cmpsb
adc
cmp
jge
jp
loop
dec
push
inc
loope
popf
test
aas
out
add
call
push
or
push
cwtl
lds
outsl
shl
cmp
rorl
sub
xchg
mov
es
and
push
ret
add
xchg
cmp
mov
sub
rcrl
xchg
mov
push
shr
idivl
arpl
scas
stc
jle
dec
mov
adc
xor
inc
pusha
int3
xchg
or
cmp
rcrb
or
lret
dec
ljmp
pop
enter
mov
mov
and
pop
sar
sbb
nop
xor
xor
xchg
mov
test
and
pop
and
pop
out
or
inc
sbb
xchg
mov
dec
mov
pop
or
in
cmp
inc
pop
fisubs
push
lret
jmp
xor
inc
dec
and
aam
fs
mov
hlt
scas
scas
in
cmp
jle
sub
jb
lock
aaa
xchg
fmul
jmp
pushf
xchg
incl
add
cmpsb
dec
ficompl
pop
nop
mov
dec
jbe
jae
inc
ljmp
addr16
shrb
mov
jle
clc
insl
jl
jb
cmp
aaa
lcall
ss
push
dec
jecxz
leave
pop
cmp
cmp
mov
cmp
xor
mov
in
gs
mov
movsb
push
jno
xor
xor
dec
inc
mov
dec
notb
lods
insl
jne
pop
call
adc
mov
jecxz
insl
mov
lret
push
jp
push
cmpb
adc
lods
sahf
aad
cs
lea
fsubs
push
out
fsubs
pop
into
jae
mov
pop
ret
mov
jo
test
scas
stos
sahf
into
push
scas
push
jo
repz
lods
jge
stc
mov
push
cwtl
xor
inc
pop
cmp
mov
pushf
sbb
bound
sub
dec
or
pop
std
sti
cmc
sub
in
sbb
sub
and
insb
pop
js
scas
cmpsl
clc
shll
aam
push
lea
les
arpl
xor
jne
mov
push
inc
jb
rcl
dec
imul
or
push
jno
jmp
out
popa
push
pop
fcoms
pushf
push
rclb
fs
das
inc
sbb
pop
inc
leave
aaa
mov
cli
mov
add
addr16
add
pushf
mov
mov
sahf
lock
std
dec
mov
out
mov
fsubr
clc
shrb
shl
push
into
mov
add
push
add
lds
out
mov
test
loopne
fs
xchg
in
daa
dec
lds
test
jle
insb
std
popa
xchg
orl
arpl
lods
sub
movsl
test
jecxz
mov
or
inc
xchg
imul
scas
mov
mov
mov
cmp
mov
mov
lds
jns
lcall
pmullw
lcall
add
repz
sahf
stos
jp
add
xchg
repnz
stos
jg
mov
inc
call
sub
pop
mov
push
pop
xor
movsb
cmpsl
dec
mov
sbb
outsb
inc
pop
pushf
loop
lock
ja
fstpl
std
mov
mov
jno
loopne
add
push
jb
xor
adc
cmp
pop
incl
push
or
xor
xchg
add
cbtw
popa
lea
or
sub
cmp
mov
cmp
jge
inc
mov
stc
mov
cmp
and
pop
push
jle
push
pusha
dec
adc
nop
mov
dec
nop
add
and
mov
lret
jecxz
xchg
xor
test
fsts
outsb
push
xor
pop
das
ret
sbb
shll
jg
jbe
add
lock
mov
adc
loope
pop
mov
aas
stos
repnz
popa
push
mov
cltd
push
cmp
shrl
mov
imul
xor
dec
add
mov
add
out
pop
repnz
xchg
les
pushf
push
ja
fistl
jbe
incb
push
outsb
sbb
mov
nop
test
sbb
pop
mov
or
push
lods
pop
jle
mov
pop
stos
push
sub
test
push
divps
bound
jp
lods
outsl
fisttpll
iret
iret
push
aad
add
data16
pusha
or
push
ds
in
xchg
push
mov
add
mov
mov
sbb
push
push
cmp
pop
xor
inc
rcll
cmp
into
js
mov
out
movsb
call
lods
xor
loope
mov
mov
jne
iret
into
or
or
cmpsb
push
iret
repz
xchg
jle
fiaddl
mov
fidivrs
leave
xchg
xor
jecxz
jae
jbe
rolb
loopne
push
cmc
mov
pop
dec
adc
or
ljmp
sub
adc
mov
lahf
shll
aam
inc
int3
pop
push
sbb
js
daa
xor
jno
and
sub
lea
imul
sldt
leave
inc
stc
clc
mov
das
enter
lds
add
insl
xor
mov
inc
mov
lahf
adc
or
scas
mov
xchg
das
js
mov
fldenv
mov
test
sbb
cli
xchg
dec
jl
iret
ss
xchg
jle
ljmp
mov
insb
addb
sub
cmp
mov
int3
scas
out
in
adc
movsb
pop
cmp
inc
jne
add
pop
repnz
mov
movsl
popa
jge
cmp
xchg
dec
insb
xchg
mov
lock
bound
pop
or
or
push
xchg
mov
inc
filds
inc
xorb
mov
pop
pop
push
lock
test
in
mov
inc
mov
mov
or
sbb
pop
out
out
cmp
outsl
lret
push
fisubrl
or
sub
sbb
adc
push
xchg
inc
out
aaa
mov
fisubrs
cmp
or
popa
cmp
xor
fmull
je
push
jle
adc
mov
add
cld
loop
mov
xorb
sub
popf
ret
fistpll
leave
adc
sbb
ds
mov
pushf
int3
movsl
sub
jle
mov
jge
jae
out
int
or
setno
sub
dec
cld
mov
leave
idivl
adc
mov
adc
add
pushf
icebp
lods
jns
test
push
inc
mov
cwtl
mov
mov
push
subl
stos
or
sti
xor
pop
scas
dec
dec
jne
std
mov
sbbl
lahf
cmp
mov
repz
and
cltd
cmp
mov
push
aam
repnz
xorl
inc
test
repz
xchg
in
aad
mov
push
inc
cmp
dec
or
xchg
shrb
inc
mov
ret
adc
mov
dec
mov
mov
loopne
outsl
je
or
pop
das
lret
pop
je
dec
mov
push
xor
sbb
enter
mov
repnz
fbld
ds
dec
fld
clc
xorb
push
push
sbb
xor
pop
pop
push
jno
outsl
jle
jb
push
jns
rclb
inc
outsb
les
aas
leave
clc
inc
push
adc
lds
cmp
lret
stos
xor
jae
push
mov
lods
scas
push
or
out
std
lret
rcrl
xor
aam
adc
or
sbb
dec
lea
and
pop
mov
xchg
fnsave
pop
and
xor
pop
mov
call
pop
int3
push
imul
scas
loope
xor
or
adc
enter
sub
dec
cmpsl
xor
pop
fmuls
movsb
iret
addl
xchg
mov
pushf
jle
lcall
pusha
adc
fwait
mov
pop
mov
mov
sub
xor
pusha
fistps
or
and
inc
ljmp
addl
movsb
inc
cmp
cli
iret
xor
pop
aas
pusha
outsb
sub
gs
ret
mov
xor
mov
cmp
and
push
es
and
out
sub
push
or
or
std
jne
pop
jecxz
aad
and
das
fldcw
push
adc
jl
mov
sbb
pop
repnz
insl
xchg
cwtl
add
cmc
das
insb
xchg
mov
mov
insb
scas
pop
push
jb
cmp
hlt
pop
push
negl
inc
mov
lahf
xor
int
jo
rclb
cwtl
cmp
neg
lea
mov
mov
jae
cmpsb
cli
js
xor
into
adc
scas
sbb
rcll
outsl
in
jg
xlat
in
lahf
scas
decb
xchg
adc
and
sbb
xor
inc
or
add
paddusb
mov
scas
xchg
mov
sbb
or
cli
mov
jecxz
and
decb
adc
mov
lods
sub
aas
adc
or
data16
dec
adc
mov
adc
xchg
mov
fidivrs
jle
lock
movsl
out
add
lods
fs
icebp
loope
sub
ljmp
test
mov
jecxz
xchg
jbe
adc
roll
jge
call
notl
sub
fists
lcall
add
pop
out
dec
jle
sub
mov
int
inc
inc
mov
and
es
inc
mov
jg
in
mov
rol
sbb
dec
add
data16
mov
imul
fisttpll
adc
jp
ja
cld
jo
pop
imul
mov
les
loope
pop
cld
mov
and
int
nop
xchg
das
mov
cmpsl
dec
es
jns
shr
cmpsl
mov
in
dec
push
stc
pushl
push
in
das
aad
and
jl
xchg
inc
sub
popf
cmp
sti
gs
pop
pusha
rorl
pop
mov
je
into
mov
ds
shl
adc
push
fcoms
push
fwait
mov
dec
cmp
insl
push
rclb
cmpsl
pop
in
push
fsub
jno
fcompl
jns
lcall
fmuls
outsl
mov
add
jnp
jp
sbb
xchg
mov
inc
bound
xor
mov
pop
mov
in
loope
pop
sbb
adc
lods
or
xor
push
and
add
cmp
xchg
mov
movb
je
inc
arpl
inc
and
mov
lea
mov
add
mov
inc
je
dec
mov
pushw
rcl
pop
adc
pusha
cli
cli
or
adc
sbb
out
lock
inc
mov
ret
sbb
je
sti
out
mov
inc
push
or
sbb
stc
in
jne
idiv
dec
icebp
pop
sub
mov
dec
inc
and
add
sbb
rorb
fs
pop
mov
pop
sahf
ss
daa
rorb
sahf
mov
sub
and
enter
loopne
sbb
push
push
adc
jp
mov
dec
xor
dec
dec
dec
in
ja
sbb
lds
in
inc
jl
jae
pop
mov
sahf
enter
fwait
mov
cmp
ljmp
and
pop
push
in
mov
adc
pop
dec
shll
push
out
imul
repz
pop
loopne
dec
mov
leave
push
sub
lret
pop
int3
mov
imul
jnp
or
iret
sub
stos
push
ret
mov
xchg
shll
das
mov
cmp
adc
rep
and
adcb
int3
pop
pusha
sub
stos
ds
jbe
add
faddl
scas
inc
aas
mov
out
mov
add
jo
cmpsb
sub
cmc
sub
aad
mov
add
fdivrs
and
adc
pop
popa
pop
sbb
iret
ret
jbe
cmpl
out
loop
out
mov
sub
mov
aad
subl
or
push
test
lahf
icebp
stos
cmc
js
cmp
or
mov
loopne
and
push
aam
mov
jbe
xor
and
mov
jae
xlat
leave
fisttpll
cmp
dec
xchg
sub
push
xorl
iret
idivb
mov
xor
aad
add
mov
cld
or
scas
pushf
lods
jp
fwait
arpl
mov
test
pop
mov
xorl
fisttpll
cwtl
mov
add
lahf
icebp
add
prefetch
or
std
test
cmp
ja
cs
fucom
enter
dec
movsl
lahf
cmc
mov
jecxz
orb
pop
bound
cmpsl
adc
xor
test
mov
lock
sbb
xchg
insb
add
push
ja
jge
stos
sbb
cmp
xor
mov
shrb
or
pop
std
int3
xor
mov
add
pop
pop
daa
fisubl
mov
out
mov
inc
or
push
sbb
dec
sub
aas
pop
sub
cwtl
add
pop
adc
rcrb
jmp
cld
lcall
test
push
pop
pop
aaa
mov
imul
or
lret
sub
mov
mov
add
fwait
insl
inc
and
out
repnz
flds
or
test
xor
test
mov
xor
add
test
pop
fstl
cmp
jbe
dec
jg
mov
addr16
inc
addr16
mov
clc
jl
addl
mull
fnstcw
daa
mov
push
out
sbb
sarl
dec
pusha
sub
ret
push
dec
push
mov
sbb
lcall
ds
mov
fisubrl
mov
lahf
fstpl
daa
jno
mov
sbb
cltd
rolb
dec
fcomps
lea
or
push
bound
test
mov
jg
es
pop
add
dec
jmp
mov
bound
pminub
sub
xchg
xchg
jmp
cmpl
cmpsb
cld
test
loop
cmpsb
js
inc
out
inc
or
enter
pop
ret
add
aas
insb
mov
bound
rcll
sahf
push
xchg
shlb
lock
sbb
jle
les
push
stos
test
aas
push
cmp
inc
add
inc
add
dec
test
or
pop
push
xchg
ljmp
mov
xor
stos
inc
xchg
xor
in
clc
nop
pop
mov
sub
or
add
std
cld
mov
xchg
int
and
notl
dec
and
jne
insl
jmp
fimuls
mov
mov
cmp
cmp
jg
xor
add
jo
call
mov
icebp
jne
cmpsb
xor
ror
mov
mov
sbb
std
scas
xchg
and
call
xor
xor
pop
sti
js
sub
xlat
jmp
cmc
mov
sub
sub
out
ror
ret
inc
les
inc
lods
nop
adc
add
and
fldl
jns
in
test
lock
jno
sub
std
add
fucomp
jnp
push
in
sbb
jo
fstpl
ss
mov
or
iret
inc
cmp
push
or
mov
lahf
movsb
sbb
lock
cmp
idivl
popf
cli
aad
mov
push
call
cmp
mov
scas
and
idivl
cmp
sbb
jae
mov
pop
imul
outsl
pop
inc
sub
ss
jne
test
sbb
push
jns
cmp
int3
rcl
push
or
sub
movsb
jmp
insb
dec
lcall
loop
in
push
enter
jmp
dec
jecxz
jbe
popf
mov
push
lret
mov
jge
out
cmp
inc
pop
fs
xor
jns
paddusw
push
ja
fcmovnbe
mov
std
dec
mov
jb
mov
push
loop
in
xor
shl
ret
inc
hlt
sub
je
pop
cld
cli
repnz
rcr
outsb
mov
push
pop
nop
pushl
and
inc
mov
sub
dec
in
cmpsl
inc
push
cmp
or
inc
mov
ficoml
gs
xchg
in
mov
cmp
add
push
stos
inc
scas
xchg
daa
mov
clc
pusha
cltd
call
stc
mov
xor
clc
or
pop
std
mov
add
adc
mov
and
jge
das
jae
dec
gs
dec
cmp
mov
sbb
dec
and
jne
mov
add
bound
xchg
dec
fucomi
jno
pop
icebp
jnp
dec
lds
lea
ficoms
shlb
aam
out
in
das
loope
test
push
push
cmpsb
in
fistpll
filds
inc
sti
imul
lret
stc
ljmp
adc
mov
cmp
in
mov
sti
xchg
ds
and
xor
mov
mov
icebp
fildl
daa
scas
outsb
scas
ja
imul
test
mov
stc
push
xor
icebp
pop
cmovo
or
stc
rorl
and
sbb
mov
and
dec
rol
adc
inc
int3
pop
repnz
arpl
test
pop
add
mov
in
jo
out
push
aas
jb
xchg
inc
shrd
adc
jne
bound
out
loopne,pt
outsl
dec
xchg
iret
sub
test
nop
push
jge
xchg
sbb
loop
sbbl
xchg
xchg
mov
lret
ljmp
mov
mov
mov
out
cld
repz
fnstenv
std
xorb
aas
scas
test
cli
lret
sbb
xor
xor
fildl
mov
jmp
mov
ds
cmp
je
test
push
ljmp
mov
inc
sub
arpl
enter
push
cmp
and
adc
in
mov
xor
xchg
xchg
sbb
cmpsb
push
nop
iret
cmp
fists
loopne
aaa
jp
insb
clc
fildll
adc
lahf
icebp
fisubl
repz
xchg
int
mov
scas
fdivrp
outsb
pop
or
push
adc
adc
xchg
inc
pop
neg
sbb
xchg
rol
sbb
mov
and
fists
in
xchg
cmpsl
or
dec
call
pop
sub
add
inc
mov
das
repnz
loope
in
jecxz
pop
fsubrl
mov
mov
cmp
xchg
outsb
testb
jae
and
filds
dec
xor
test
sbb
ja
cmp
enter
int
mov
les
cli
enter
fwait
xchg
push
aam
adc
xchg
int3
addb
adc
xchg
fs
or
adc
fnstenv
sbb
in
inc
subb
lds
enter
push
aad
ds
add
xor
fisubl
dec
movsl
xlat
adc
fisttpll
jae
data16
inc
and
ja
cmp
cmp
adc
pop
mov
ficoml
xchg
imul
adc
fadds
push
mov
out
popa
cmpsl
pop
ljmp
xor
mov
and
sbb
jmp
in
cmp
mov
fistpll
push
xchg
mov
outsb
add
dec
pop
cmp
mov
cltd
mov
sti
xchg
push
cmpsb
rorl
jge
negb
das
adc
mov
sbb
pop
mov
or
jmp
shrl
imul
ret
fidivl
jbe
js
sub
sbb
pop
push
ljmp
push
lds
insb
and
mov
dec
or
mov
cmp
adcb
mov
mov
cmp
jmp
push
nop
xor
push
fsubrs
cs
xchg
ret
fmull
push
ret
cmp
fs
or
add
xchg
lds
ss
and
jg
out
pop
inc
sub
loope
inc
aam
scas
push
and
cmp
scas
push
or
pop
divl
std
sbb
push
test
add
mov
dec
not
cmp
popf
sbb
loop
jne
jle
into
outsb
sub
cmp
flds
sub
mov
enter
mov
push
repz
mov
inc
inc
xchg
dec
adc
jnp
or
push
sub
in
sub
ja
and
lds
stc
pop
sbb
lock
loope
leave
xor
jbe
outsl
or
inc
in
pop
cmp
insl
xchg
sub
jl
imul
push
std
into
daa
xor
mov
call
or
cmp
es
jo
rcll
gs
sarb
cmp
fidivl
int
mov
hlt
inc
cltd
add
jbe
xor
cmp
sbb
dec
or
mov
scas
mov
add
pop
inc
hlt
dec
je
xor
and
add
sub
lfs
aam
int3
xor
jbe
es
insl
rcll
mov
ret
mov
out
xchg
mov
mov
push
hlt
pop
mov
fisubrs
xchg
scas
ja
popw
outsl
mov
mov
fldl
inc
test
mov
xor
movsl
mov
mov
scas
cmc
pop
testb
rclb
stos
sub
aam
mov
loopne
adc
jmp
sub
lret
and
inc
and
jle
push
fcompl
pop
sub
cmc
shrb
ss
or
sbb
rcr
in
repnz
andl
push
jmp
cmp
jmp
movsb
pop
inc
ds
mov
addb
js
add
mov
fs
mov
mov
mov
cmp
aad
xchg
mov
divl
scas
fidivl
cmpb
aad
bound
notl
xchg
stc
lods
out
lods
rorl
mov
mov
mov
lods
adc
pop
adc
pusha
xor
in
pop
push
push
ds
sub
dec
cmp
add
cs
mov
movsb
ss
scas
imul
fcomp
push
ret
mov
push
cmp
dec
clc
sbb
outsb
popf
ffree
insl
das
inc
push
jae
mov
mov
arpl
scas
ja
fwait
scas
adc
sbb
mov
andl
arpl
int
xor
add
ds
loop
or
xchg
in
roll
pop
sbb
mov
std
jmp
xor
daa
mov
mov
or
adc
sbb
das
xchg
in
leave
cmp
out
sbb
xor
aas
and
mov
inc
sbb
lock
dec
lcall
dec
jno
lods
fcomip
xchg
jmp
mov
int
cmp
jbe
out
sahf
test
push
add
insb
xor
add
fists
and
std
pop
popa
ja
add
loope
or
mov
and
ret
push
mov
jg
outsb
int3
mov
mov
shll
xor
pop
lea
sub
adc
pop
xchg
mov
xorb
seto
int
ret
iret
pop
jo
sbb
repz
sbb
pusha
fcmovnu
test
popa
sti
lahf
call
xchg
add
fadds
dec
pop
adc
push
xor
in
aad
stc
pop
call
pop
and
push
decl
jecxz
mov
mov
cwtl
add
ret
clc
in
push
mov
and
das
or
movsl
jnp
dec
or
jae
inc
cmpsl
xor
jo
push
push
xchg
mov
data16
insl
jno
push
mov
lods
push
jns
out
loop
bound
mov
sahf
push
test
cmp
mov
enter
mov
push
div
lock
test
out
shrl
nop
test
clc
rcr
lds
adcb
xchg
lock
pusha
xchg
clts
stos
or
or
push
ffreep
xor
pop
stc
test
sub
pushf
push
jp
mov
lret
and
insl
in
fwait
xor
sbb
out
mov
mov
pop
das
add
dec
xor
jo
pop
mov
test
js
or
xorl
popaw
xchg
jle
roll
sbb
js
lods
push
push
loop
ja
loope
and
rep
cld
outsl
imul
outsb
mov
enter
push
mov
nop
jmp
nop
call
xor
pop
imul
outsb
fmuls
and
xchg
rcl
cld
rcrl
jmp
sar
pusha
jge
rol
and
mov
roll
dec
fsubs
leave
lcall
testb
ss
adc
sbbb
jo
pop
add
add
jo
push
sbb
inc
jmp
adc
push
push
cs
sahf
add
pop
pop
adc
push
cmc
loopne
mov
sub
dec
jmp
in
movb
mov
push
jbe
das
adc
imul
cld
shrb
fcoms
xchg
and
add
inc
je
ss
mov
xchg
sbb
mov
adc
sbb
mov
add
test
lock
ds
pop
mov
rol
insl
jne
out
lret
mov
cli
pop
in
aad
fxch
cld
sbbb
shll
dec
jmp
in
xor
cmpsb
ret
cli
push
cmp
xchg
insl
sarl
test
repz
das
mov
sarb
lcall
aad
inc
mov
push
sbb
add
mov
and
imul
push
int
idiv
and
scas
mov
test
jg
lds
scas
imul
arpl
sbb
ret
dec
xchg
scas
jno
mov
pop
inc
aas
jbe
es
adc
xchg
cld
sub
clc
push
inc
mov
inc
les
ss
fistl
dec
jmp
adc
sub
daa
cmp
jns
fwait
dec
xor
lods
and
inc
int3
cmp
cmp
js
adc
cmp
cmp
push
pop
popf
shl
in
pushf
push
or
ss
add
pop
jno
or
jno
je
stc
jecxz
xor
cmc
stos
push
jnp
jg
xadd
sbb
sub
xlat
pop
push
xchg
cltd
orb
lock
in
loop
cmpsb
fs
rcrl
add
dec
scas
jl
pop
insb
jb
cltd
lds
cmp
mov
sbb
add
push
out
int
push
mov
jbe
add
sub
gs
xchg
lock
cmpl
cmpsb
mov
sbb
jl
xchg
lods
xchg
inc
mov
mov
xchg
je
pop
jecxz
sub
sub
jb
sbb
xchg
cwtl
sbb
frstor
add
mov
or
hlt
cmpsl
mov
sahf
push
adc
adcb
jnp
fidivrl
fwait
xchg
mov
je
cltd
fs
cmp
in
or
dec
enter
push
movsb
sbb
out
dec
dec
adc
pop
fimuls
leave
sub
mov
xor
push
inc
pop
mov
jg
push
lods
or
out
xchg
iret
mov
fcoml
jb
dec
cmp
pushf
das
out
jno
outsl
jle
xor
sub
jle
js
push
inc
inc
shr
fsubl
xor
sbb
sbb
xor
fs
jae
in
cmp
adcl
or
data16
jno
popa
fists
jmp
push
or
push
call
scas
adc
pop
aad
mov
fistps
sbb
jno
or
cmp
mov
pop
pop
and
test
xchg
imul
push
xchg
repnz
fstps
adc
adc
lea
push
mov
add
mov
mov
lret
cmp
sub
ret
sahf
jg
addb
inc
cld
fldl
ret
lahf
xchg
cmp
mov
cmpsb
and
pop
and
pop
mov
dec
pop
arpl
push
repnz
mov
jne
xchg
mov
and
ficoml
fidivl
jl
or
inc
cmpsb
mov
cmp
leave
sub
xchg
xchg
adc
inc
out
push
insl
xlat
iret
jbe
jbe
fcoml
inc
sub
inc
clc
cmpsl
ficoms
push
mov
mov
testb
mov
cmpsb
out
in
icebp
jg
in
in
add
jne
pop
pop
pop
adc
sbb
in
lret
push
xor
daa
inc
mov
xchg
fsts
xchg
movsb
addr16
pop
dec
pusha
push
mov
fldenv
and
jl
xlat
test
insl
enter
dec
dec
testb
lods
cmp
xor
dec
mov
cs
jno
mov
les
pop
and
sub
fldl
inc
adc
iret
lods
cmp
rcr
loop
mov
hlt
jne
mov
movsl
mov
fs
mulb
mov
mov
sub
test
iret
fcomps
pop
sbb
cmpsb
test
xchg
cld
adc
pop
pop
aas
add
test
mov
fidivrl
in
push
jmp
enter
std
sahf
add
pop
scas
cltd
fdivp
imul
mov
in
shl
and
iret
and
add
dec
mov
cmpsb
mov
push
push
insl
sbb
shll
sarb
in
popf
in
mov
fsubl
push
ja
popf
or
mov
mov
push
repz
dec
icebp
sar
call
mov
push
cmpsl
xchg
lods
sbb
push
repz
lock
cmp
mov
jl
mov
rolb
adcl
lods
mov
push
enter
dec
mov
jge
ljmp
mov
sahf
pop
movq
sbb
arpl
jp
repz
ds
or
out
and
dec
aad
les
or
subl
repnz
lock
mov
pushf
sub
jmp
loope
mulb
jae
ja
jmp
mov
fcmovbe
push
leave
mov
pop
dec
daa
mov
push
inc
cs
pop
pop
outsl
or
or
and
jbe
pushf
mov
and
push
mov
fs
js
leave
fnstenv
push
mov
out
lret
pop
xchg
push
and
sbb
mov
add
adc
lea
pop
addr16
mov
test
xor
in
mov
jp
shrb
cwtl
or
fstps
push
jmp
adc
mov
inc
cmp
mov
mov
lahf
sub
dec
fwait
adc
and
cmp
imul
ret
cmpsb
inc
push
cmp
mov
push
mov
add
test
dec
mov
xchg
jnp
mov
push
jp
gs
add
pop
inc
sbb
sub
imul
push
inc
jne
nop
xchg
fcomp
xchg
insb
sub
xchg
call
cs
and
and
out
push
sti
ret
dec
insl
ljmp
stos
push
jne
or
sub
dec
jno
shlb
scas
or
movsl
test
jp
add
cld
int3
sub
push
or
inc
or
xchg
cmp
mov
shlb
out
lret
sbb
frstor
xor
cmpsl
mov
ljmp
push
mov
and
sbb
push
cmp
stos
mov
inc
fsubrs
test
mov
sahf
loope
pop
add
push
jge
mov
xor
mov
push
mov
jb
pop
inc
clc
stos
int
or
push
imul
shrl
pop
fld
and
fwait
imul
shll
mov
fyl2xp1
pop
mov
pop
and
sbb
idivl
mov
add
sbb
shl
stos
pop
jg
sbb
mov
fwait
push
hlt
aam
xchg
sub
out
xchg
jge
and
and
nop
xchg
fs
mov
stos
out
mov
and
pop
orl
and
pop
gs
adc
sbb
sahf
and
jge
cmp
fnstenv
jge
lcall
pop
lret
and
jg
and
mov
mov
jns
daa
mov
subb
insl
cltd
cmpsb
inc
dec
and
in
call
rcr
xchg
cmp
jae
js
dec
in
xchg
aaa
rclb
add
outsb
xchg
mov
fidivrl
sub
sub
xor
cmp
shll
scas
jb
or
mov
xor
mov
jle
pop
mov
std
mov
out
mov
dec
test
pop
and
or
scas
aas
sbb
mov
inc
adc
adcb
pslld
adc
mov
mov
mov
dec
sub
and
ret
mov
pop
lods
sbb
je
jo
out
loopne
repz
fcoml
mov
mov
jle
pop
stc
push
xor
push
sbb
mov
arpl
loopne
cmp
gs
inc
hlt
pop
mul
loopw
ljmp
sub
mov
out
testl
arpl
test
cs
lahf
xchg
ffreep
cmova
mov
add
jg
mov
adc
aad
pop
pop
jno
cs
notb
mov
sub
lds
cmpsb
addr16
xor
mov
ret
pop
iret
outsl
rolb
cmp
xchg
sub
xchg
test
xchg
push
pop
cmp
js
inc
mov
loope
xor
jge
or
iret
stos
mov
push
out
pop
push
movsb
jle
adc
int
xchg
pop
jo
ret
jecxz
mov
mov
lret
pop
push
lea
popa
jecxz
mov
pop
lock
cmpsb
mov
mov
scas
orb
inc
or
cmpsb
leave
lock
and
cmc
and
mov
xchg
sahf
sbb
pusha
sarb
jge
push
int
in
jle
mov
mov
add
jne
lock
ja
mov
daa
jge
lods
xchg
push
stc
popf
mov
shl
mov
stos
jae
aas
dec
jp
test
outsl
and
cs
insb
mov
data16
push
push
pop
and
xchg
sub
movsl
mov
and
and
popa
mov
rclb
xchg
les
movsl
cmc
sarl
push
or
ljmp
push
sbb
cmp
cmp
pop
jno
sub
mov
jl
mov
and
adc
add
xor
repnz
popa
xor
inc
dec
jecxz
pushf
loopne
mov
pop
xlat
cmp
dec
mov
mov
cld
sub
imul
inc
insl
add
stos
lock
add
push
xchg
imul
lret
lock
adc
sub
int
push
mov
das
xorl
pop
popf
mov
cmp
mov
jb
addr16
std
jae
hlt
test
ss
adc
adc
adc
xor
xchg
dec
and
popf
into
roll
ja
cmp
or
insl
enter
add
divb
xchg
in
popf
subl
imul
fmulp
lahf
xor
cwtl
sub
daa
gs
inc
popl
pusha
cld
imul
push
or
std
jne
lods
sbb
jecxz
push
outsl
cmp
daa
fistl
xlat
std
sbb
adcl
mov
inc
cmp
xchg
ss
sbb
xor
add
mov
and
pop
add
sub
sub
adc
icebp
xlat
insl
push
pop
cld
nop
push
scas
xor
pop
sbb
pop
loopne
xchg
push
adc
outsl
pushf
xchg
imul
test
outsl
push
sbb
in
mov
sar
cmp
inc
shll
lds
mov
pop
rclb
mov
sub
add
bound
in
mov
repnz
popf
dec
in
xor
jle
lret
xchg
and
pop
add
call
imul
pop
sub
test
mov
sarb
dec
xor
pop
jno
mov
imul
jno
xchg
cmpsb
push
popf
nop
insl
fadd
and
bnd
inc
ljmp
and
cmp
push
xchg
loope
adc
xchg
inc
ss
mov
add
nop
out
xor
and
outsl
adc
xlat
pop
pushf
add
or
insl
cli
jmp
imul
jb
cld
or
shrb
fsubrl
cmc
and
imul
mov
add
add
jns
mov
stos
addr16
inc
mov
xchg
sbb
jmp
push
bound
inc
and
iret
dec
cmp
inc
imul
pop
scas
mov
sub
inc
cmp
dec
loop
pop
dec
scas
push
and
sub
cld
mov
cmp
in
pop
mov
jl
mov
fdivp
das
das
pop
jg
push
popa
cli
push
jecxz
jge
mov
cmp
inc
aas
aas
adc
enter
jle
test
or
inc
bound
icebp
and
xor
dec
fs
or
feni(8087
mov
bound
daa
push
dec
test
pop
xchg
cwtl
cmc
and
inc
repz
cmp
sbb
and
aad
ss
inc
imul
sub
mov
das
fwait
lret
dec
sbb
mov
adc
pop
orb
loope
add
jnp
pushf
and
insb
lret
iret
pusha
mov
jge
out
xchg
pop
push
and
adc
or
repz
pop
faddl
mov
into
sti
sbb
sbb
jo
push
hlt
xor
fsubr
loope
pop
pop
sub
cmc
xchg
jns
cmpl
lock
pop
into
mov
outsl
mov
dec
or
stos
and
pushl
inc
test
xchg
xchg
add
into
aaa
jp
aam
cmp
outsb
pop
rcrl
jno
mov
adc
lahf
dec
aad
ljmp
sti
xchg
es
cmp
ds
repz
subl
stos
cli
cwtl
shrl
lea
add
hlt
dec
adc
and
or
inc
sub
stos
mov
jbe
add
test
cmp
jae
fyl2xp1
mov
lock
ret
sub
pop
cmp
push
jecxz
push
lods
cmp
je
hlt
push
fisubs
xchg
lds
in
dec
lods
lea
or
fnsave
test
mov
cmp
jp
or
mov
scas
leave
insb
imul
xor
sub
pop
or
or
orb
mov
pop
out
and
dec
insb
out
cmp
insl
cmpsl
cmpsb
sahf
shlb
inc
jnp
sti
pop
jg
dec
xchg
pop
lock
add
into
or
mov
lock
or
jmp
push
jns
pop
ja
inc
pop
dec
rcrl
xor
push
push
mov
in
xchg
lcall
cltd
fs
into
out
repz
fdivrs
push
sub
sub
mov
movsb
jns
lret
and
rclb
addl
pop
popf
data16
aaa
mov
pop
sti
jo
cld
cld
ret
sbb
ret
mov
shll
or
cld
lret
int3
lods
orl
sub
mov
lcall
movsb
push
pop
cmpsb
push
jae
rolb
lret
jnp
jmp
add
adc
cmp
inc
mov
xlat
out
pop
sbb
js
daa
pusha
push
or
sahf
xchg
lahf
aam
mov
dec
daa
push
push
sbb
and
fisttpll
xor
test
ret
fs
jb
jge
out
add
sub
pop
or
push
and
inc
or
mov
or
push
xor
cmpsb
xchg
enter
sbb
data16
out
repz
xor
sbb
stos
dec
mov
dec
cmp
loopne
imul
rcr
mov
jge
in
jae
outsl
adc
fwait
xor
mov
jp
pop
popf
add
outsb
addr16
mov
push
mov
sub
gs
pop
sbb
dec
pop
cmp
push
mov
sti
or
ljmp
aas
jp
sbb
jnp
pop
pusha
je
mov
mov
repz
outsl
fisubrl
jg
inc
aad
mov
xor
xor
rcl
sub
popa
add
js
arpl
repz
lods
ljmp
xor
insb
add
mov
add
cmpsl
ds
xor
mov
incb
xchg
imul
push
push
and
out
dec
jmp
cmp
xor
shr
and
arpl
and
xor
or
iret
mov
int3
addr16
cmp
and
jp
pop
in
int
jbe
ja
xchg
jae
imul
fnstenv
decl
addr16
cwtl
scas
shlb
lea
je
out
stos
dec
jb
add
test
rcrl
xchg
fwait
sbb
addr16
mov
loopne
lds
push
push
mov
sbb
icebp
arpl
jge
cli
es
dec
in
movsb
mov
push
push
test
sbb
sub
jl
xchg
std
lods
je
rorb
jb
or
fsubrl
push
test
idivl
arpl
jno
or
jo
or
mov
push
je
pop
mov
cs
jne
aad
add
mov
lods
dec
ds
xor
shrb
xor
jmp
and
int3
ja
out
add
jae
mov
fisubl
xchg
imul
jmp
cmp
jl
cli
rcll
orb
mov
sti
imul
sbb
mov
dec
lds
lret
popa
aaa
imul
inc
outsb
cmpsl
jmp
mov
out
dec
cs
push
mov
pop
enter
ss
cli
ret
inc
loopne
adc
pop
xchg
lods
test
adcl
or
pop
lea
push
ja
push
jmp
mov
cmp
fldcw
test
pop
add
daa
jb
int
sahf
mov
mov
call
push
cmp
or
ss
dec
movsl
imull
or
in
inc
sti
sub
add
frstor
jns
stc
leave
rcrb
sbbl
adc
fisttps
xchg
aam
xor
out
int3
jmp
lahf
jmp
call
mov
testb
leave
leave
aam
repz
add
jecxz
sub
push
insl
xchg
test
push
test
jne
xchg
sti
sbb
sbb
lock
nop
aam
testb
inc
push
or
cwtl
inc
mov
es
divl
inc
mov
push
int
cmp
mov
addr16
test
lods
data16
mov
ss
ret
jmp
fldcw
pusha
or
cwtl
inc
mov
addb
ja
shrl
outsb
and
lcall
push
add
das
add
not
jge
cmp
in
or
add
sbb
xor
xlat
int3
push
pusha
mov
ss
pop
mov
xor
fucomi
test
mov
lods
cli
and
test
jae
out
push
pushl
push
sar
dec
xor
lods
jmp
rol
popf
cmp
lock
lods
cmp
test
push
push
xchg
push
in
push
inc
pop
mov
dec
mov
icebp
push
sub
jnp
jl
add
dec
sbb
sbb
call
inc
adc
jl
popf
add
adc
mov
rcll
mov
filds
jp
loopne
lcall
and
cli
mov
fsubp
ljmp
jecxz
jo
int3
loopne
mov
push
push
jge
add
test
aaa
pop
and
mov
out
fadds
testl
mov
les
jns
sub
icebp
rep
lods
lods
xchg
call
mov
cmpsb
jno
xchg
fiadds
cmpl
jge
xor
rolb
push
and
insb
enter
and
in
fdivl
loope
orl
mov
call
sarb
rcrb
shl
subl
std
push
inc
sbb
popf
out
and
aam
loope
mov
jp
mov
or
and
cmp
push
out
mov
inc
mov
mov
fbld
push
int3
data16
add
jo
inc
mov
lahf
adc
push
or
repz
rol
push
fsubrs
sub
jmp
pavgw
in
mov
pushf
jne
hlt
in
pop
dec
xchg
cld
insl
movsl
jmp
jbe
and
push
aam
cmpsb
ja
lods
sbb
add
sub
in
sbb
xchg
aam
cmp
mov
adc
push
jbe
imul
test
mov
ja
dec
sbb
mov
mov
call
mov
std
lea
inc
fildl
push
rclb
loopne
fs
loop
insl
inc
mov
mov
std
fidivl
jg
dec
jo
pop
daa
subl
shlb
sub
xchg
leave
mov
fsubr
push
int
xor
sbb
jmp
pop
sti
xchg
cmpsb
iret
aas
pop
and
or
mov
in
pop
stc
push
mov
nop
sbbl
scas
gs
add
add
jae
in
jb
cmp
xchg
idivl
inc
push
jge
mov
int
mov
mov
or
stos
inc
in
inc
and
ds
jg
fwait
imul
sahf
mov
lret
xchg
clc
jle
lds
jp
pop
or
push
mov
jb
mov
push
or
push
ja
push
xor
mov
cwtl
xor
cmp
scas
fnstsw
or
jp
movsl
cmp
xchg
jge
mov
loope
daa
cmc
icebp
shll
add
inc
pop
jle
cltd
cmp
test
xor
mov
scas
mov
cli
icebp
popa
stc
xchg
cli
mov
xchg
adcb
sub
cmp
dec
jmp
rcrb
pop
jns
es
push
rcrb
nopl
jb,pn
lcall
sub
and
push
test
jne
xor
in
into
add
fcmovbe
dec
orl
xchg
mulb
lahf
jmp
push
adc
lds
pop
sbb
sbbl
popa
fnsave
jns
daa
fcomi
adc
jbe
shll
mov
les
sbb
arpl
xchg
xchg
movsl
out
sub
in
mov
jnp
ja
insb
clc
clc
scas
dec
stos
lahf
inc
jecxz
push
outsb
and
sub
ds
repz
imul
adc
lods
cmpb
dec
mov
jae
movsl
dec
repz
xor
fimuls
adc
outsl
inc
repz
jns
mov
sub
iret
jge
mov
ds
cltd
loope
or
xor
flds
fwait
call
cmpsl
mov
sub
ds
sub
insl
sbbl
pop
push
push
outsl
stos
cmp
cmpsl
inc
mov
xchg
in
imulb
int3
imul
bound
ja
xor
jo
push
add
xchg
jnp
cmova
push
lock
lret
mov
jb
or
sub
adcl
fsubl
int
nop
sbb
push
add
cmp
outsl
scas
imul
aaa
in
xor
scas
fwait
mov
mov
inc
loope
xchg
mov
daa
mov
jns
or
xchg
adc
mov
ret
pop
fdivrl
adc
mov
inc
mov
aas
inc
enter
lds
subl
std
mov
dec
sbb
and
rep
in
std
push
cmp
arpl
les
movsl
inc
cmp
out
add
dec
mov
dec
aaa
push
jbe
in
pop
cmp
cmpsb
push
pop
fwait
mov
push
jbe
out
mov
outsb
pop
mov
push
inc
sub
ret
pusha
es
jno
int
cmp
ja
inc
cmc
popa
sbb
dec
in
pop
ficompl
sbb
dec
movsb
and
push
out
clc
fbld
pop
mov
push
sbb
mov
xchg
push
push
cmp
sti
ror
inc
add
inc
in
jns
fstpl
pop
cmp
push
shl
sub
aaa
fldt
iret
ss
fsubrl
push
imul
sar
in
out
insl
cmp
xor
aam
in
jle
mov
jmp
pop
clc
test
rcrl
xchg
out
xor
and
jle
jae
push
faddl
dec
dec
and
ja
cltd
insl
mov
test
pop
xchg
and
xor
fwait
sub
push
xchg
fdivs
ds
jle
outsl
xchg
iret
add
adc
test
pop
int
js
lahf
jg
pop
adc
lds
mov
xchg
imul
add
iret
outsl
data16
lret
dec
sbb
xchg
sarb
das
subl
in
add
cmp
mov
ds
push
push
xchg
clc
into
cmp
ds
xlat
sbb
pop
dec
inc
repnz
mov
sbb
xchg
adc
aas
icebp
push
pushf
das
popa
mov
mov
popf
fidivl
xchg
add
mov
cmp
adc
stos
xor
pop
rcrb
icebp
jnp
lret
sub
mov
fsub
jecxz
das
ljmp
test
or
and
scas
sarl
frstor
mov
neg
xorl
ljmp
push
sub
nop
in
shlb
push
fisttps
lea
dec
cmpsb
xchg
sbb
or
xor
lcall
aam
in
loope
rclb
imul
pop
sbb
inc
aas
movsb
push
cmp
lahf
je
cmc
mov
add
and
add
jl
in
or
aaa
fstps
sbb
push
outsl
add
jae
inc
add
into
xchg
je
mov
inc
pop
or
jl
cmp
push
in
mov
add
sahf
out
not
cltd
outsl
jbe
xchg
inc
lds
fwait
adcl
ljmp
or
adc
idivb
push
xchg
stos
ljmp
push
sti
mov
sub
aas
jp
enter
jge
push
mov
aaa
xchg
out
ret
insb
dec
stos
add
popf
insb
insl
call
bswap
cmpsl
fistpll
into
ljmp
and
xchg
call
aas
aaa
in
cli
pop
cmpsl
push
test
sub
jge
rorb
and
pop
jl
jbe
or
je
lods
sbb
mov
andb
and
or
ficoms
jmp
and
pop
xchg
inc
dec
gs
jae
dec
daa
imul
mov
cmp
mov
fdiv
insb
mov
sbbb
fstp
pop
lret
or
fldt
lds
in
or
iret
pop
jae
jmp
and
pusha
adcb
sbb
cmpl
pop
xchg
jo
aaa
sub
jae
or
outsb
xor
test
js
push
adc
pop
repnz
rcr
loopne
jnp
outsb
shrb
enter
rcrl
adcb
cmp
jb
loop
stos
out
aad
call
scas
imul
dec
loope
pop
test
xchg
mov
rolb
push
shll
cmp
test
adc
iret
pop
lock
add
lods
jne
fs
add
movsl
adc
sbb
pop
enter
xor
mov
push
dec
pop
je
aas
ja
aas
in
mov
mov
push
inc
leave
mov
pop
push
pop
cmpsb
iret
cmp
outsb
cmc
dec
test
push
sbb
pop
ljmp
sub
lret
push
into
js
xchg
inc
mov
sbb
lahf
jl
cltd
in
push
sub
xor
xchg
xchg
lret
sub
add
dec
push
lcall
adc
repz
sub
pop
pusha
sub
out
mov
push
dec
dec
jnp
add
push
ret
lods
sbb
pop
mov
jno
sub
movsb
add
push
mov
xchg
adc
cmp
sbb
jbe
adc
mov
mov
and
stos
in
mov
pop
add
and
out
sub
pop
arpl
cld
daa
push
js
mov
xchg
pop
inc
call
addr16
dec
dec
aad
pop
popa
rorb
aad
call
mov
adc
subb
in
lret
scas
roll
fnsave
adc
mov
cmpsb
icebp
cmp
xchg
sub
outsb
pop
cmp
rcrl
rcl
imul
loope
fdivs
int3
pushf
mov
adc
xor
aas
mov
add
rcrb
std
roll
stos
jb
sbb
adc
mov
add
fisttpll
ret
ljmp
mov
fists
ret
dec
in
ret
mov
mov
ds
sub
pop
pop
push
rclb
xor
cmpsb
xchg
cli
pusha
jo
jo
in
or
lea
sbb
adc
pushf
jno
iret
bound
popf
mov
sub
sub
mov
mulb
mov
imul
fcoml
inc
cltd
pop
jnp
pusha
mov
pop
cmp
sbb
pop
push
or
sbb
loope
xor
insb
lcall
imul
sti
and
hlt
xor
dec
cmp
cmp
inc
xchg
dec
std
mov
repz
jecxz
ja
adc
scas
rcll
stc
jns
sub
pop
push
pop
xor
daa
mov
fldenv
push
mov
push
adc
cmp
push
cli
out
mulb
sub
int3
sbb
test
mov
pop
adc
bound
aam
iret
mov
inc
sbbb
into
lea
or
cmp
sbb
mov
aaa
sarl
cmpsl
push
sahf
lea
lods
inc
mov
popf
repnz
jb
mov
out
lods
add
jle
mov
hlt
xchg
sub
dec
inc
imul
push
int
filds
push
sti
and
cld
daa
loope
lock
xchg
pop
or
adc
and
ret
stos
xchg
fs
repz
mov
push
loopne
dec
sub
push
cmp
mov
loope
pop
dec
and
cmp
stos
ljmp
fidivrl
xor
fiaddl
push
inc
mov
ficoml
icebp
adc
mov
lods
dec
orl
loop
addr16
xor
sub
mov
and
inc
sub
int3
lret
mov
shll
xchg
andb
enter
and
jb
pushl
push
adc
or
cmpsl
push
repz
clc
fwait
xchg
push
or
popa
push
cmp
dec
insb
into
mov
cwtl
test
out
pop
loopne
ds
dec
popa
iret
repnz
push
mov
into
insl
into
sbb
pop
mov
in
cmp
cli
mov
dec
lock
mov
sub
mov
pop
and
and
jg
iret
ljmp
mov
add
sub
dec
jne
mov
sub
mov
pop
popf
mov
pop
jns
and
out
sarb
std
jb,pn
incl
dec
mov
div
push
lock
mov
sub
jle
imul
filds
dec
mov
lods
shrl
xor
into
inc
fimull
mov
sbb
push
mov
outsb
jno
jne
aad
fs
ficompl
popf
dec
testl
gs
sub
cltd
push
sbb
inc
sar
adc
int3
sub
adc
pop
ficoml
fbstp
gs
scas
int
enter
dec
sub
out
inc
jl
adc
loope
xchg
lcall
mov
and
les
adc
mov
je
loope
ss
pop
xchg
lock
dec
jo
mov
xor
ret
cmpsl
mov
int
loope
mov
add
adc
xchg
imul
imul
pop
lcall
jmp
add
cld
or
inc
out
ss
mov
rcl
pop
add
icebp
out
out
lcall
adc
or
addr16
xcrypt-ctr
cmpsl
sbb
mov
lcall
loop
mov
jle
test
mov
bound
pop
hlt
lods
add
inc
rcl
sbb
insb
movsl
jbe
sub
aaa
mov
push
inc
fildll
jge
push
dec
and
cmp
inc
xchg
inc
or
jnp
ret
jmp
clc
mov
imul
lcall
cmp
fdiv
sub
jmp
push
sub
loopne
cmpb
inc
ljmp
jg
frstor
push
sbb
mov
jecxz
notl
pop
pushf
adcb
sbb
cmp
sub
insb
loope
notb
push
pusha
cmp
dec
or
mov
sbb
mov
pop
mov
dec
xor
and
inc
mov
lea
xchg
popa
loopne
xchg
xchg
sbb
into
xor
out
repnz
jbe
fstps
rclb
repz
std
fsubrs
push
mov
je
mov
fnstenv
push
jb
pushf
clc
xor
repnz
outsl
test
add
jbe
add
or
inc
fadds
repnz
push
xchg
ds
pop
andb
outsl
pushf
pop
push
fcoml
jae
and
loop
dec
and
out
fdivrl
clc
mov
or
nop
test
inc
push
cmpsb
mov
sub
or
push
push
shl
in
cwtl
hlt
mov
cmp
out
pop
jp
addr16
xchg
and
mov
nop
inc
fisubrl
or
mov
xor
bound
sbb
loope
cmp
xchg
jl
in
dec
dec
or
je
das
mov
dec
push
cli
in
and
cmp
lcall
or
movsl
cltd
mull
inc
pop
jle
pop
ja
pop
lret
lret
push
pop
leave
mov
dec
mov
dec
jbe
nop
cmpsl
and
clc
cltd
lret
fs
fsubrs
lcall
and
stos
in
and
stos
popa
jmp
sbb
out
int
imulb
js
mov
cmc
jae
jne
mov
fmuls
push
fs
repz
cs
sbb
test
mov
adc
adc
nop
pop
mov
and
cmp
cmpsb
sbb
and
inc
cmp
or
pop
push
jg
lods
xor
pop
loopne
mov
sbb
adc
mov
dec
xchg
and
push
and
pop
fcmove
cmp
fwait
add
sbbb
mov
mov
push
mov
std
pusha
jmp
add
test
pop
lock
sahf
shrb
in
mov
fs
add
push
mov
jne
dec
lret
jnp
xchg
js
adc
cmp
push
icebp
jge
aaa
lahf
mov
ds
stos
stos
clc
lods
movsl
pop
jg
sub
pop
loopne
outsb
divb
xchg
xchg
inc
into
pop
sti
push
lret
cli
xor
cmp
mov
inc
mov
and
ret
out
mov
dec
cmpsl
ljmp
ljmp
aas
ja
sbb
mov
xorb
enter
enter
decb
and
stos
ss
loopne
mov
stos
lock
jge
inc
xlat
jb
dec
mov
dec
stc
daa
xor
dec
add
lcall
lods
inc
and
popa
push
notl
adc
ljmp
inc
sbb
sbb
out
mov
mov
ret
inc
push
push
dec
fstps
add
nop
lcall
dec
or
lods
xchg
or
je
lret
pusha
sbb
leave
xchg
movsl
rcrb
cmp
sbb
sahf
mov
or
xor
loopne
push
out
inc
xchg
sbb
ds
ret
mov
sarl
mov
push
in
mov
nop
push
mov
sbb
jecxz
insb
mov
push
sub
mov
push
testb
sbb
movsl
lods
pop
test
mov
mov
mov
or
dec
dec
and
push
ret
mov
iret
fidivrs
push
enter
cmc
mov
loopne
add
xchg
xchg
jmp
jmp
lahf
test
nop
mov
mov
movsl
jo
inc
pop
loope
cmp
imul
lahf
jg
xchg
mov
adc
xor
sub
in
rorb
gs
dec
xchg
leave
lahf
xchg
mov
lock
add
test
out
and
xchg
mov
cmc
inc
cmp
sbb
aad
pop
cwtl
push
daa
mov
add
mov
movsb
mov
jmp
xlat
or
jp
les
movsb
jge
jmp
xor
xchg
out
in
or
inc
dec
inc
sub
mov
jg
int
push
movd
push
out
out
repz
mov
ret
add
fisubrs
dec
pop
sbb
xchg
divl
push
and
mov
repnz
outsl
ljmp
mov
test
js
in
das
mov
push
mov
push
aas
xchg
push
mov
lahf
add
dec
xchg
hlt
rorb
stos
inc
call
or
cmpsb
sahf
or
stos
rclb
pusha
aas
pop
daa
aaa
mov
jmp
negb
mov
hlt
add
out
xor
adc
into
pop
push
jae
mov
or
hlt
inc
mov
adc
push
mov
xchg
jmp
fwait
push
mov
cmp
in
stos
jo
testb
scas
arpl
sub
and
stos
jle
mov
push
jle
loop,pn
movsl
addr16
or
pop
sub
inc
jecxz
push
xor
pop
and
push
enter
aaa
subb
adc
xchg
xor
fsubrl
or
adc
shll
loope
cmc
loope
add
xor
push
inc
mov
ret
push
sbb
mov
lods
push
stc
lods
faddl
xor
mov
es
in
cmp
shrl
push
mov
fldenv
sbb
pop
and
adc
pop
es
out
movsb
xchg
loopne
xor
mov
les
push
cmp
movsl
jmp
aaa
sarl
add
pop
sub
or
dec
pop
imul
push
movsl
sbb
sub
inc
cmp
insl
sahf
add
sbb
in
sahf
mov
dec
mov
pop
call
pop
rorl
int
dec
subl
add
mov
dec
mov
dec
into
test
dec
inc
pop
and
arpl
scas
loop
movsl
or
mov
fcmovu
pop
ljmp
mov
test
rorb
mov
icebp
inc
rcl
inc
fistpl
in
xor
xor
cmc
lods
nop
jmp
fidivrs
repz
xlat
cmp
popa
lds
mov
push
sbb
mov
div
inc
aaa
mov
in
fs
add
add
adc
aaa
in
push
mov
clc
sbb
popl
stos
add
lds
sbb
inc
and
xchg
mov
adc
jnp
push
push
int
enter
mov
dec
push
inc
push
and
sbb
lea
stos
clc
dec
dec
push
mov
je
sub
arpl
or
xchg
inc
lret
or
daa
jmp
addb
in
loopne
mov
imulb
cmc
push
iret
ret
pop
pop
fnstcw
jge
mov
mov
push
sbb
cmp
cmovle
pop
mov
fs
xchg
cmp
xlat
cs
jmp
sbb
test
outsl
nop
jecxz
push
push
dec
jecxz
adc
js
shl
sub
loop
mov
rcll
repz
add
add
jo
test
pushf
lret
pop
mov
jge
cmp
inc
loopne
xor
js
jne
mov
loope
shlb
jl
nop
stos
xor
xchg
pusha
outsl
mov
aam
inc
jo
mov
cmp
insl
pop
pop
fyl2x
or
rcrl
mov
jbe
imul
cmc
lods
icebp
test
and
inc
jns
sub
idivl
inc
arpl
rcrl
gs
btcl
out
pushf
in
sub
xchg
ss
push
sbb
and
rol
add
push
sub
and
popa
outsb
dec
fistl
add
or
pop
fnstenv
sbb
mov
mov
scas
mov
adc
jle
mov
sbb
cmp
adc
pop
xor
imul
push
repnz
outsl
insl
add
jge
xchg
jnp
pusha
mov
test
out
xlat
pop
and
and
sub
or
ljmp
push
and
into
lahf
test
stos
je
popf
call
mov
xor
movsb
jecxz
rcrl
push
leave
mov
sub
dec
mov
test
add
enter
pop
pop
fisubrs
mov
aad
js
nop
inc
int
call
cmp
and
shll
andb
cmp
pop
inc
inc
cmp
insb
rcrl
add
xchg
xchg
ret
inc
xchg
popa
rcr
in
sbb
push
lret
ds
push
js
jecxz
add
mov
bound
frstor
cwtl
jmp
mov
mov
xchg
popf
decl
jbe
jge
push
sbb
pop
mov
sub
cmp
std
jnp
movsl
subl
movsl
repnz
sbb
outsl
mov
dec
sub
subl
jae
push
mov
mov
mov
insb
xchg
sbb
ret
int3
xor
add
pop
and
sbb
jmp
jecxz
popa
mov
and
adc
outsl
mov
mov
lods
lods
sarb
dec
push
and
test
jge
cmp
pop
pop
cmpsb
jmp
test
push
testl
cltd
into
sbb
xchg
dec
int
sub
pop
push
adc
nop
push
dec
repz
push
or
inc
shrb
mov
mov
mov
or
iret
xchg
inc
int
jae
out
xchg
test
decb
sbb
ss
sbb
jns
jno
stc
inc
push
xchg
dec
or
les
pop
fstl
xchg
push
add
mov
inc
adc
bound
jmp
and
cmpsl
push
shl
je
in
leave
pop
dec
sbb
jmp
xchg
dec
mov
jns
sbb
fs
push
adc
pushf
fs
fdivrl
insl
int
sub
xorl
xor
inc
jns
mov
imul
out
mov
push
lret
ljmp
testl
test
jne
xchg
pushl
pop
mov
inc
vpacksswb
push
inc
xor
stos
sbb
outsb
dec
out
in
dec
stos
inc
add
mov
jl
rorb
xlat
scas
mov
cli
inc
jnp
jne
aas
xor
mov
loope
rclb
sub
xchg
pop
pop
xchg
leave
add
xchg
xor
pop
frstor
jecxz,pt
stc
call
into
jp
push
xchg
and
jo
fiaddl
push
shrb
mov
cltd
enter
mov
pushf
inc
in
cltd
mov
hlt
cmpl
mov
popf
ss
push
mov
pop
ret
sub
cmp
sbb
mov
or
mov
xchg
pushf
dec
pop
mov
dec
sub
jecxz
xlat
lds
rclb
gs
ja
mov
jecxz
xor
cmpl
inc
out
movsl
mov
imul
mov
in
jecxz
pop
and
mov
div
fucomp
adc
dec
call
mov
mov
cmp
popf
lods
dec
lock
subb
cltd
iret
loopne
stos
add
int
cld
arpl
stc
ret
inc
xor
into
jge
jmp
popf
xchg
push
xchg
dec
dec
hlt
push
pop
mov
cmp
mov
loope
mov
and
daa
out
mov
in
pusha
mov
cmc
negl
daa
int
push
pusha
inc
aad
into
in
jno
jb
daa
jp
nop
jecxz
aam
and
jge
addb
and
iret
dec
leave
push
jae
pop
hlt
cmp
xchg
insl
lock
mov
mov
jnp
leave
sub
sbbb
lds
push
gs
add
jne
aam
aaa
adc
push
jmp
imul
cmpsb
mov
out
shll
mov
pop
cs
pop
repnz
int
jo
jle
mov
lcall
scas
pop
jne
xor
mov
inc
ljmp
stc
adcl
ficomps
aas
lods
mov
cld
cmpl
stc
daa
test
mov
inc
mov
adc
cmp
cmp
stc
daa
test
inc
lods
ret
add
mov
insb
and
cltd
jge
test
mov
adcb
xchg
sbb
es
push
sub
pop
popf
lea
xchg
cmpsl
ljmp
mov
les
cltd
aaa
xchg
fdivrs
arpl
or
mov
lock
sahf
inc
or
ljmp
sbb
sbb
sbb
test
mov
jle
adc
gs
ja
jbe
ret
addr16
into
fcompl
jmp
lcall
inc
pop
jg
sbb
push
xchg
mov
mov
xor
divl
leave
push
cmp
lods
xor
shll
inc
xchg
aas
ljmp
lcall
mov
cs
lds
mov
jo
sarl
dec
sbb
or
xor
out
mov
add
dec
jge
pop
jo
dec
adc
scas
mov
mov
mov
divl
mov
bound
mov
rorb
or
or
dec
push
push
and
adc
sbb
fmul
jmp
xchg
dec
iret
cmp
mov
test
pusha
fld
test
std
jno
loop,pn
js
and
sub
loopne
xchg
sbb
inc
push
jl
out
fldcw
lret
out
pop
mov
pop
sbb
cmp
addr16
jo
jbe
out
movsl
mov
xchg
and
adc
in
std
loopne
cmp
mov
xor
inc
out
subb
rolb
mov
inc
lret
mul
les
mov
in
enter
sahf
add
fbld
cmp
psubusw
pop
dec
mov
and
mov
popf
clc
push
aad
clc
push
movsl
jp
stos
push
pop
cli
rorl
pop
rclb
mov
movsb
push
imul
mov
aam
fs
push
xor
inc
xchg
lock
out
subb
adc
lock
rolb
jo
shlb
out
loopne
push
shlb
or
inc
pop
cmp
dec
imul
mov
out
mov
jnp
cmp
rolb
pop
jns
sysenter
push
mov
inc
mov
jg
dec
movsb
paddb
push
inc
test
sub
dec
jno
mov
jge
adc
les
mov
lret
les
sbb
xchg
mov
dec
xor
jg
out
cmp
or
arpl
das
jb
xchg
mov
xor
dec
xchg
mov
inc
mov
adc
cwtl
sahf
jo
push
push
jnp
mov
and
cmp
into
cltd
or
repz
jle
push
pop
test
push
movb
pop
rclb
jb
cmpb
arpl
daa
neg
xchg
mov
pop
fcomps
aad
adc
xor
cmc
inc
xlat
clc
mov
mov
das
stos
sbb
scas
int
stos
cltd
mov
adc
or
sbb
or
pop
pop
adc
xor
adc
lret
lds
mov
mov
xor
in
or
aas
loop
push
pop
xchg
pop
std
ret
jl
or
jns
daa
pop
adcb
inc
outsl
lcall
cmpb
lods
mov
movsl
mov
and
jns
sbb
loopne
add
loope
or
mov
pop
xor
loopne
outsl
add
mov
aad
dec
push
popf
out
fs
cmp
dec
add
xor
out
mov
sub
imul
xchg
or
call
daa
mov
addr16
add
cmpsl
add
in
int3
and
mov
mov
lds
mov
hlt
fildl
push
cmpsl
aaa
dec
outsl
gs
hlt
jno
cli
lods
sub
xlat
sbb
xchg
pop
out
jae
pop
cmc
into
push
cmp
add
pop
aam
out
sub
push
movsl
cmp
sbb
xchg
xchg
pop
dec
push
push
push
sub
sub
pop
test
out
cltd
in
jns
mov
adc
jle
testb
add
dec
aaa
fwait
or
cltd
test
cmp
push
and
or
es
aad
rorl
xchg
adc
add
sub
clc
imul
inc
int
ljmp
loope
inc
add
sub
mov
movsl
test
adc
sbb
in
or
push
jle
movl
xchg
loope
arpl
sub
jecxz
adc
pusha
insb
jae
mov
rorl
decb
cmp
dec
lahf
ss
add
loop
jb
cmp
sbb
mov
wrmsr
jns
jns
call
outsb
add
sti
jb
scas
mov
fldt
int
pop
cwtl
ja
insb
lcall
pop
jmp
outsb
mov
imul
cmpsb
std
popa
in
hlt
movsl
fwait
js
sti
pop
sahf
pop
stc
aas
pop
insb
cmp
lahf
cmp
push
ret
push
mov
cmp
out
or
push
inc
cmpsl
lods
mov
sti
inc
sahf
mov
jmp
clc
and
js
jb
aas
mov
dec
iret
push
jne
mov
inc
js
lds
mov
mov
mov
adc
sub
movsb
sbb
daa
in
rorl
pop
gs
fcomi
stos
jne
sub
sub
incb
mov
in
fbld
xchg
inc
mov
aas
aad
add
negb
add
mov
shl
sti
sbb
or
add
int
int3
lock
bound
push
ja
call
fmull
xchg
lret
jb
cld
fidivl
jge
lahf
sub
loopne
pop
mov
sub
dec
lock
and
out
incl
into
push
int
stos
idivl
bnd
andb
out
jne
stos
mov
mov
and
stc
jnp
add
xchg
push
lret
scas
jno
in
in
scas
inc
out
xor
orl
xchg
call
mov
dec
notl
mov
pop
jns
inc
jnp
mov
push
fimuls
push
mov
mov
shlb
mov
lock
mov
xor
stos
sub
lret
arpl
or
adc
jg
xor
imul
jne
fstpl
mov
daa
fwait
sub
xor
push
xor
lds
lds
cmpb
mov
adc
inc
scas
insl
mov
mov
mov
mov
std
mov
adc
and
inc
stos
dec
push
or
pop
loope
or
fcompl
pop
iret
push
cmpb
loope
add
ret
fisttpl
pop
jb
addr16
mov
in
cmp
out
outsl
push
cmp
fstl
es
xchg
mov
es
jge
xchg
xor
and
and
inc
orl
push
xchg
scas
lock
pop
push
stc
cmp
movsl
popa
pop
xchg
dec
cmp
ret
loop
mov
inc
loop
sbb
dec
cmc
dec
ljmp
or
je
popf
mov
add
inc
fisubl
pop
sub
jmp
adc
mov
data16
ds
imul
fucomip
or
or
mov
inc
mov
push
dec
in
loopne
jmp
movsl
mov
pop
fsubs
test
add
mov
aam
je
cmp
mov
leave
pusha
test
and
add
icebp
mov
loope
test
adc
mov
sub
add
sti
out
mov
lret
in
mov
dec
mov
das
and
out
nop
xchg
xor
or
popa
bound
dec
pop
test
dec
outsl
jnp
xor
repnz
cmpsb
sub
mov
dec
stos
sahf
rclb
ret
cli
mul
inc
xchg
push
out
dec
mov
in
sub
inc
or
mov
ja
in
orl
pop
jg
add
callw
xorb
sub
js
adc
mov
xor
cmp
and
mov
cwtl
mov
aam
inc
xchg
mov
fsubrl
and
xchg
stos
outsl
mov
test
int3
enter
inc
shrb
mov
xchg
adc
test
sbb
xlat
jns
mov
call
cwtl
dec
call
mov
inc
sbb
xor
pop
sub
enter
push
cmp
iret
outsb
ja
sbb
add
xchg
pop
es
xbegin
mov
mov
enter
xchg
or
test
mov
ss
push
mov
push
mov
shr
insb
iret
mov
xchg
xchg
inc
rcrl
fsts
stos
addb
mov
pop
add
cwtl
push
and
and
data16
xor
push
arpl
add
jns
outsl
ds
jmp
fldt
push
pop
mov
fisubrl
adc
lods
bound
push
mov
xor
mov
test
mov
js
pusha
dec
loope
pop
inc
cmc
mov
es
push
xchg
daa
sahf
push
ficoml
or
in
push
jb
inc
int
cmp
xchg
push
inc
sahf
sti
adc
sbb
lahf
and
into
test
movsl
inc
aas
rcr
into
xchg
roll
push
ljmp
lods
pop
ret
cmc
or
aad
pop
mov
rolb
notb
add
adc
mov
aad
and
dec
inc
jbe
mov
es
iret
pop
or
pop
cs
dec
jns
shl
daa
pushf
xchg
adc
or
mov
mov
ret
pop
jge
fistpl
add
js
lret
and
ret
pop
sub
mov
xchg
mov
hlt
sub
cmp
jbe
mov
pusha
adc
mov
imul
add
es
bound
mov
pop
andl
jne
push
cmp
notl
sti
dec
loope
cmp
or
scas
jns
clc
lods
xor
stos
pop
push
cmp
rcrl
ret
lret
mov
pushf
xchg
mov
add
push
les
jno
mov
push
and
push
cmpsl
in
xor
stc
inc
sub
nop
leave
adc
test
sbb
mov
jecxz
xchg
aam
daa
inc
fnstsw
daa
loope
add
xlat
iret
inc
dec
mov
sub
mov
or
push
sub
fwait
sub
sub
nop
mov
push
xor
daa
xor
dec
xor
loop
movsb
hlt
mov
hlt
aam
inc
jmp
adc
mov
mov
push
and
push
fs
sub
inc
insb
ret
rclb
fwait
xor
popf
add
or
xor
inc
or
mov
lea
enter
mov
cmp
out
cmc
sbb
mov
insl
xchg
aaa
add
int3
push
mov
gs
sbb
call
adc
std
addr16
jmp
rcr
dec
sub
pop
movsb
out
add
jae
inc
outsb
adc
xor
lret
cltd
xchg
sub
in
jns,pt
push
movsb
pushl
push
inc
sub
clc
cmpsl
mov
pushf
rorl
negl
jbe
stos
rolb
cmc
fists
or
gs
imul
out
sbb
add
mov
or
ret
jp
sbb
and
faddl
cmp
into
xchg
add
es
mov
xchg
gs
pusha
imul
jo
jecxz
dec
push
sub
mov
mov
adc
test
testb
xor
sbb
inc
jmp
call
push
call
nop
mov
pop
and
js
jecxz
or
cmp
sbb
xchg
rcrb
bnd
xchg
mov
movsb
in
dec
test
scas
lock
jmp
push
addr16
inc
dec
subb
or
mov
andb
andl
jbe
dec
imul
in
mov
sbb
outsl
outsl
xchg
movsb
inc
jg
mov
movsl
mov
push
ja
popa
das
pop
dec
insb
inc
inc
loopne
stc
mov
mov
pushf
sbb
fimull
push
les
stos
test
inc
mov
mov
xchg
daa
out
xor
sub
loope
imul
adc
adc
test
stos
pop
push
xor
in
mov
cwtl
das
inc
mov
xlat
and
cmc
sbb
addr16
pusha
sub
or
add
mov
lcall
xor
sbb
sbbb
popf
xor
pop
das
mov
aad
lds
je
push
std
std
movsl
xor
adc
insl
loopne
xchg
divl
cmp
push
pop
mov
mov
fwait
sti
clc
mov
mov
add
adc
push
mov
or
hlt
stos
and
mov
mov
loopne
jp
insb
dec
lret
cmc
mov
add
ss
adc
movsb
add
icebp
mov
in
xchg
xchg
mov
lret
push
dec
aaa
adc
mov
fwait
cmc
loopne
push
mov
jno
mov
cltd
dec
xlat
pop
cltd
hlt
sahf
lods
mov
and
fsts
xchg
sub
test
mov
sub
mov
loope
mov
hlt
jnp
sub
sbb
in
pop
and
pop
lret
jne
push
sbb
aad
cmp
mov
jbe
push
push
xchg
add
inc
out
jbe
or
push
pop
or
jnp
aas
outsb
not
xchg
sub
rcrl
mov
cltd
lret
inc
jecxz
das
nop
xchg
psubsb
push
push
pop
cltd
lock
add
push
add
push
cmp
xchg
test
xchg
or
repz
pop
out
mov
fs
jg
js
je
sarl
fcomi
ret
fcom
leave
push
mov
movsb
add
mov
pop
insl
scas
pop
push
repz
jp
xor
data16
lcall
xlat
xor
nop
adc
sub
fcoms
shrb
outsl
repnz
xchg
cmp
adc
xor
adc
dec
loope
xchg
lret
fsubrs
and
xor
addl
mov
pop
jbe
dec
stos
xchg
dec
int
rolb
lcall
xchg
and
ja
jmp
dec
ss
xchg
adc
mov
and
adc
cmp
or
mov
bound
push
xchg
mov
into
nop
test
pop
jp
xchg
cmp
push
ret
jnp
loope
insl
mov
es
add
int3
and
mov
add
lahf
loope
pop
push
add
pushf
inc
mov
xlat
xor
ret
insl
dec
jge
adc
int3
mul
fcoml
xchg
pop
mov
nop
out
ret
jne
daa
jecxz
pop
adc
pop
sbb
mov
sahf
add
xchg
fisttps
mov
mov
rolb
inc
fsubrs
insb
inc
push
pop
jecxz
pop
push
xor
ljmp
xor
pop
mov
addr16
adc
push
xor
or
pop
pushw
and
sub
jb
fidivl
lods
outsl
std
out
repnz
dec
sbb
sbb
mov
push
mov
and
and
push
mov
inc
mov
imul
sbb
dec
adc
in
dec
mov
jmp
ja
ss
sub
add
pop
or
sti
dec
and
mov
rcrb
fldcw
xor
lret
cmpsb
loop
sub
mov
mov
das
push
sti
push
jl
outsb
add
test
nop
pop
cmp
mov
sahf
xor
clc
stos
inc
fdiv
dec
cmpb
cmp
adc
les
repnz
mov
push
pcmpeqd
mov
mov
push
out
aaa
das
test
mov
std
adc
cmc
fisubl
testb
fs
jg
addr16
or
cltd
push
dec
lret
cli
cmp
int3
dec
ss
mov
xor
sbb
lea
add
sub
inc
push
inc
cmp
xchg
in
pop
outsb
je
jno
xchg
sti
or
sbbl
testl
ss
inc
pop
cli
dec
fldt
fcoml
mov
and
inc
cld
mov
subl
pop
repz
add
adc
je
sarl
inc
dec
push
addl
repz
stos
mov
movsb
scas
adc
sub
stc
mov
cmp
mov
mov
lods
stos
mov
lock
lods
inc
cmp
mov
out
insl
cmp
cmp
mov
mov
mov
dec
fmul
enter
cmpsb
aas
sub
cli
lret
mov
mov
ret
mov
sti
lcall
fdivrl
xchg
mov
and
dec
int3
les
xor
inc
mov
push
je
cmp
dec
lock
pop
pop
push
lea
push
add
mov
in
jl
xchg
lock
or
mov
sub
subl
popf
jg
lcall
sbb
mov
sahf
sbb
pop
jge
mov
xorb
pop
cltd
xchg
andb
push
xchg
push
fcomps
aas
lcall
shl
ficoms
push
shrl
sbb
inc
andb
int
loopne
ljmp
lahf
mov
cmp
xchg
add
pop
dec
mov
inc
stc
pop
rcrb
pop
push
fsts
int3
stc
cmp
out
cmp
jl
jns
scas
or
scas
mov
mov
cltd
aaa
lods
push
dec
rcll
push
stos
dec
addr16
daa
inc
popa
cmp
movsl
insb
dec
call
xor
ret
mov
subl
xchg
adcl
dec
xor
out
adc
sbb
pushf
sbb
clc
movsb
push
mov
dec
insl
inc
pop
push
xchg
pop
pop
pop
out
sti
ficomps
xchg
jg
notl
or
or
outsl
cmc
inc
mov
pop
imul
pop
inc
add
push
mov
xor
mov
int3
xchg
xor
loop
jno
testl
jle
sbb
notb
push
fmull
dec
pop
xchg
mov
out
test
lods
test
inc
addr16
xchg
incl
repnz
or
push
mov
xor
clc
push
cmp
xchg
mulb
enter
push
mov
inc
aad
sbb
xchg
negl
adc
decl
rorl
rclb
push
daa
add
inc
cld
xchg
add
jnp
imul
and
hlt
pop
cmp
dec
fdivs
scas
pop
pop
popf
xchg
mov
in
dec
xchg
cmp
xor
loopne
sti
push
mov
aam
add
or
pop
pop
mov
movsl
and
enter
incl
sbb
fwait
mov
fxch
scas
and
or
cwtl
imul
cmp
pop
lock
sub
xchg
xor
stc
jle
push
iret
fildl
int3
and
mov
je
push
std
mov
or
notb
decb
je
arpl
and
xor
inc
push
xchg
cwtl
rol
mov
xor
or
icebp
stc
push
inc
xor
out
adc
pop
lds
add
pop
dec
add
testb
enter
mov
divl
addl
std
xor
sbb
pop
mov
cmpsl
xor
std
dec
leave
int
adc
sub
test
enter
fs
daa
xor
out
icebp
jecxz
mov
jge
fildll
fadd
int3
push
lds
inc
fs
or
push
add
xchg
mov
sub
jnp
mov
add
pop
in
mov
out
mov
xor
mov
shll
xchg
test
inc
dec
mov
loop
mov
sti
ljmp
xchg
adc
jmp
sbb
pusha
sub
cld
push
pop
mov
add
or
xchg
cli
add
mov
xor
enter
xor
add
push
mov
dec
mov
or
xor
popl
mov
xchg
pop
lahf
mov
cmpsb
loope
sub
aam
out
cmp
sbb
mov
negl
or
push
jl
adc
mov
pop
lods
test
pop
sbb
or
push
push
test
xor
lcall
pop
shrl
ljmp
xlat
je
xor
jp
pop
movsb
ljmp
mov
rcll
sahf
sbb
xchg
add
out
aas
jle
cmp
and
adc
inc
fsubrl
iret
push
add
ss
add
dec
mov
push
test
sarl
sub
cmp
dec
mov
xchg
ret
push
push
xor
inc
in
jg,pn
push
xchg
orb
jnp
fnsave
mov
pop
pop
sub
mov
xor
xor
js
xchg
mov
inc
flds
mov
mov
fstsw
or
mov
out
or
orw
rorb
test
icebp
iret
or
xchg
and
sbb
lcall
xor
jle
sub
imul
sarl
mov
cmpsl
fs
jb
xchg
fnstsw
adc
lods
call
lret
movsl
jnp
cmp
xchg
loop
addr16
mov
test
js
incb
add
popf
jae
dec
test
in
pop
sbb
es
mov
lahf
ror
imul
cwtl
int
jae
sti
jo
xchg
out
in
enter
nop
dec
add
fmuls
js
orl
mov
sbb
cmp
jno
sbb
fsubrl
mov
xchg
mov
sub
stos
add
insb
jge
enter
pop
jo
pop
popf
cmp
das
xor
add
movsl
dec
push
movaps
sarb
xchg
add
cmp
scas
mov
into
sub
pop
sarl
mov
cvtps2pd
push
jecxz
jp
inc
jge
pop
or
cwtl
divl
jmp
cmp
mov
lods
push
inc
add
and
lea
fildll
pushl
sbb
mov
adc
int
pop
test
pop
fnsave
ljmp
pushf
rorb
loope
enter
pop
mov
lret
and
mov
sahf
inc
lods
sbb
loop
in
scas
pop
pop
in
pop
nop
xor
sub
pop
xchg
leave
xchg
lea
loope
xor
inc
or
adc
cmpb
mov
mov
scas
sub
xor
xor
subl
jmp
sub
dec
add
lcall
andb
lcall
addl
adc
xchg
pop
out
shlb
inc
mov
movsl
cmp
movsl
jno
pop
rorl
and
push
stc
dec
pop
cmp
es
adc
cmp
ret
adc
das
mov
push
repnz
outsl
inc
adc
insl
cmp
lcall
shl
push
mov
or
dec
xor
in
adc
push
aad
and
mov
xchg
xchg
sub
lcall
aad
sub
fidivs
cmpsl
loope
imul
addr16
pop
sbb
popa
popa
rolb
in
out
stos
into
inc
mov
cmp
jne
lahf
mov
dec
aam
es
cmpsl
je
inc
sbb
sbb
xlat
insb
rorl
jno
fsubl
xchg
cmc
add
pop
xor
lock
dec
dec
aam
rorb
mov
sbb
dec
sub
jecxz
stos
sahf
aad
xor
xchg
adc
insl
loopne
outsl
jle
xchg
test
sub
jge
fnstsw
push
dec
adc
mov
int
arpl
mov
jl
xor
adc
ret
push
stos
lahf
jnp
jge
js
ljmp
mov
scas
xchg
inc
addr16
dec
mov
fcom
or
cli
bound
pop
loopne
mov
sbb
cltd
scas
jo
pop
jl
push
xorb
aas
loop
push
or
jb
pop
cmp
loop
push
sbb
jne
push
lods
xor
dec
and
scas
dec
inc
dec
andl
iret
icebp
daa
frstor
ficomps
out
pop
int3
jo
out
fisubl
mov
arpl
test
fstps
xchg
xchg
sub
mov
in
add
mov
xchg
lea
test
rcr
adc
iret
movsb
pop
aad
dec
into
adc
outsb
test
dec
mov
cmp
fcomip
adc
jo
js
jge
mov
in
je
and
and
pushf
xor
iret
jp
sub
dec
cli
pop
movl
in
xchg
cmpsl
jp
out
mov
aam
and
adc
pop
jge
mov
jecxz
shlb
xor
push
sub
insl
mov
cmp
ds
jo
loop
cmc
loopne
popa
dec
pushf
out
into
xchg
mov
sub
les
push
fwait
pushf
cmp
int3
outsl
mov
es
xchg
out
pop
mov
jo
sub
das
movsb
jg,pt
test
cmp
js
and
pusha
add
mov
cwtl
out
push
mov
ss
dec
lret
out
adc
adc
xchg
push
js
repnz
lods
jecxz
cmpsl
lret
stc
pop
jle
ja
imul
sbb
mov
push
and
cmpsb
nop
data16
jo
in
and
jmp
stc
rep
call
xchg
jle
andl
cmp
push
mov
push
jno
arpl
jae
sti
dec
xor
inc
hlt
orb
fwait
lret
push
pop
jbe
loopne
addr16
ret
jmp
stos
daa
loope
addr16
push
sar
rcl
cmp
loope
sbb
xor
adc
or
fistps
dec
cmp
dec
pop
das
jno
stc
ja
mov
lcall
mov
adc
add
jg
insl
int
cmp
pushf
js
cld
sbb
clc
ljmp
or
sbb
xchg
add
mov
or
pop
lret
cmp
pop
mov
and
mov
in
push
lock
adcl
inc
xor
dec
push
and
mov
adc
lret
fst
dec
imul
dec
dec
sub
inc
rclb
repz
enter
adc
dec
inc
inc
test
mov
xorb
mov
fdivs
rorl
or
xor
jb
jnp
fldcw
jbe
mov
inc
imul
lretw
cmp
test
repz
out
pop
xlat
int
inc
outsb
xchg
fildll
cld
add
or
dec
stc
adc
add
cmp
popa
xchg
cltd
cli
loope
adc
mov
xchg
lcall
cmpsb
stc
pop
push
push
inc
fsin
adc
pop
xor
xchg
and
movl
cmp
les
push
mov
shr
mov
push
and
lock
mov
push
daa
jecxz
sub
inc
mov
insb
mov
stos
push
mov
stos
add
mov
imul
mov
test
je
lods
loope
mov
test
loop
sub
andb
or
cli
loop
fsub
out
xor
inc
cwtl
pop
pop
enter
mov
in
or
loopne
pop
imul
das
cltd
jl
notb
outsb
or
sub
jge
add
dec
inc
inc
mov
in
jge
insl
mov
pop
push
inc
push
movsl
mov
out
nop
adc
or
repz
lret
jle
int
aad
mov
in
aas
or
sbb
mov
xor
outsl
jp
cwtl
cmpsb
mov
cmp
push
adc
dec
jmp
mov
adc
mov
fdiv
jo
cmp
push
xchg
outsl
pop
in
fildl
pop
sub
mov
jge
mov
js
and
cmp
rolb
aad
dec
fisubl
pop
arpl
cmp
mov
mov
jno
aaa
jnp
lret
out
and
adc
sbb
push
mov
inc
shr
into
cmp
into
in
sub
xchg
jecxz
mov
push
mov
std
arpl
adc
outsl
dec
lods
xchg
arpl
add
xchg
adc
shlb
push
out
outsl
imul
pusha
clc
lods
mov
dec
ret
loop
mov
mov
mov
mov
sbb
call
and
loopne
test
insl
adc
adc
adc
push
clc
inc
aaa
loope
cltd
lret
sub
gs
dec
xor
jae
add
inc
notb
add
aas
rcrl
inc
mov
clc
mov
jecxz
dec
xlat
dec
cmp
rorl
or
pop
mov
jg
inc
mov
fadds
jbe
mov
cli
in
pop
in
add
pushf
push
subl
scas
test
lods
sbb
test
push
movsl
js
jl
mov
jo
movsb
jno
xchg
inc
test
rcll
aaa
or
sbb
dec
mov
aad
in
shlb
mov
testb
div
mov
incl
shll
or
pop
sbb
addps
sub
pusha
dec
inc
mov
loop
jo
adc
mov
inc
enter
pusha
xor
mov
rcrl
aad
add
out
or
inc
mov
adc
pop
mov
scas
stc
es
mov
stc
in
or
pusha
adc
adc
enter
mov
call
cwtl
push
or
fsubrs
lret
faddl
hlt
push
or
add
mov
xor
lret
outsb
sbb
sbbb
mov
negb
inc
js
out
or
imul
inc
test
stos
stc
stos
dec
cmp
or
in
and
jecxz
pop
dec
cmpsb
je
shl
sub
notb
cmp
mov
ja
add
ret
dec
adc
jb
and
mov
fwait
mov
int3
repnz
popa
add
fs
mov
mov
mov
clc
sub
dec
lahf
fisttps
aas
lcall
cmp
sub
jne
test
adc
sahf
push
loope
popa
mov
inc
mov
loopne
shl
cs
xor
push
cli
cmp
lret
mov
mov
stos
test
push
iret
iret
inc
repnz
lods
add
mov
sub
jp
xorb
mov
cwtl
xor
xor
or
in
cli
xchg
out
sbb
dec
mov
ret
stc
or
add
sub
bound
stos
insl
es
adc
push
inc
std
fsubl
hlt
xor
inc
lock
out
xchg
test
rcl
jl
push
sub
es
mov
in
ljmp
mov
xchg
push
inc
sub
stos
or
test
fistl
pusha
ljmp
imul
into
sbb
popl
or
push
iret
cmp
and
jecxz
xor
pop
lods
shrb
test
stos
fs
inc
ds
clc
inc
or
mov
and
loopne
add
xchg
inc
cmpsl
mov
jae
cs
cwtd
mov
mov
adc
pop
mov
roll
jg
cmp
shlb
loop
test
mov
sub
mov
mov
cmp
mov
push
lods
aam
hlt
mov
stos
repnz
and
pop
in
int
xchg
jo
sbb
jns
dec
sub
sbb
ja
or
adc
setle
push
xor
pop
idiv
stc
int
movsl
adc
push
jp
popf
pop
and
addr16
jg
pop
ret
dec
jle
mov
enter
js
in
fisttps
push
push
cmp
mov
pop
shrb
data16
inc
push
inc
cltd
icebp
push
mov
stos
or
fdivrl
fmul
icebp
or
nop
mov
pop
imul
xchg
mov
outsl
or
testl
xor
jo
popa
mov
jecxz
hlt
pop
mov
jge
into
xor
and
icebp
lods
inc
mov
imul
jno
xlat
inc
rcrl
ja
dec
and
fdivr
rclb
call
sub
les
mov
cmp
js
pop
ficoml
aam
fdivr
scas
sub
pushf
in
sti
loopne
mov
push
lea
hlt
mov
jmp
xor
jns
or
out
in
pop
nop
xlat
inc
jb
jl
xor
dec
add
pop
xchg
arpl
cwtl
cmpsb
dec
subl
cwtl
ss
push
out
jle
cmp
mov
call
imul
push
inc
rcll
dec
push
jbe
or
jno
jo
sub
pop
push
enter
aad
sarb
pusha
subb
shrb
pop
sbb
mov
sbb
hlt
pop
or
pusha
and
pop
push
jne
mov
and
fildll
mov
dec
imul
nop
lock
sahf
add
subb
nop
push
sti
mov
inc
jmp
mov
xchg
out
xchg
push
test
rcl
cli
push
pop
inc
add
and
or
push
lods
enter
pop
cmp
cmpsb
xchg
mov
xor
lret
aam
bnd
and
push
fdivrs
mov
cltd
jge
arpl
scas
imul
jbe
stos
pop
xlat
push
clc
mov
imull
imul
sbb
or
cmpsb
pop
mov
sub
sbb
iret
fmul
push
fmuls
push
xchg
dec
adc
iret
sbb
xchg
or
jp
cmpsb
push
push
pop
jl
jns
jo
pop
and
mov
jbe
stc
dec
sub
xchg
movsb
adc
stos
movsl
imul
scas
or
jp
inc
repz
aam
or
aaa
push
int
jmp
pushf
push
stos
jnp
push
push
popf
adc
sub
das
cli
dec
ret
stos
and
mov
lret
arpl
cmp
mov
movsb
jbe
mov
js
scas
jo
out
xchg
add
in
ret
pop
jmp
in
mov
lahf
jecxz
xor
jne
aas
jo
in
adc
jge
or
pop
inc
mov
shll
addr16
push
insb
xor
pushf
dec
dec
xor
xchg
jecxz
pop
enter
dec
lret
push
movnti
out
mov
clc
and
jp
loope
jnp
or
push
les
inc
das
sbb
mov
mov
fwait
out
cmp
dec
sub
jecxz
mov
sbb
loopne
dec
mov
cmp
dec
dec
aam
lods
mov
stc
lds
mov
mov
sub
imul
mov
mov
in
push
pop
push
lods
in
mov
movaps
mov
arpl
test
and
dec
outsl
mov
dec
daa
add
sbbb
mov
test
pop
stos
rorl
jle
movsb
push
add
xchg
ds
notb
insl
pop
mov
outsl
insb
push
xor
cli
not
out
lods
xorl
or
adc
xchg
shl
out
jne
jbe
push
dec
mov
cmp
push
nop
fwait
mov
leave
jnp
cmp
jp
jb
mov
xor
sahf
icebp
ds
push
hlt
xlat
sti
mov
out
cwtl
les
pop
cmp
mov
sub
mov
repz
js
and
fsub
insl
mov
enter
inc
mov
sahf
cmp
mov
lahf
cmpl
fwait
js
cmp
dec
mov
icebp
push
test
mov
aam
pop
fsubl
dec
push
inc
inc
and
jno
and
inc
ds
pushf
daa
jl
insb
mov
ret
mov
jge
xchg
pop
mov
pop
push
and
mov
aad
push
add
dec
test
ss
jbe
mov
loope
pushf
popa
bound
repz
mov
xor
fchs
ds
lcall
add
gs
psubw
dec
mov
push
mov
xor
lods
icebp
inc
dec
repnz
fisubs
adc
aas
sub
ret
push
or
mov
or
sbb
cwtl
mov
jno
sub
cwtl
adc
aas
or
mov
push
xchg
xor
pop
inc
push
cmc
push
or
mov
sbb
push
jmp
enter
addr16
adc
cltd
jns
pop
lahf
jecxz
inc
repnz
sti
push
out
jp
fdivrl
jg
clc
push
aas
dec
pop
pushf
cmpsb
xlat
out
inc
out
and
sbb
in
rcll
mov
inc
ds
or
cli
shlb
mov
enter
and
je
pop
fiaddl
mov
mov
lods
or
inc
and
and
and
xor
sahf
dec
mov
dec
sbb
outsl
inc
outsb
adc
mov
or
and
stos
inc
mov
mov
adc
loope
inc
movsb
addb
or
loope
inc
fucomi
mov
das
pushf
lods
mov
cmp
movsl
das
loope
dec
sbb
test
push
sbb
stos
and
icebp
or
push
fsubrl
adc
ror
adc
inc
xor
xchg
mov
movsl
jo
in
cld
sbb
push
loope
xchg
int
jmp
mov
mov
adc
fstl
out
lahf
jbe
in
movb
pop
cli
js
ret
ret
sahf
cld
cmpsl
jl
pop
xor
pop
repz
shlb
push
insl
daa
and
mov
jg
inc
bound
mov
pop
dec
sahf
dec
jl
jge
int
add
mov
into
mov
repnz
mov
jp
pop
aad
aad
test
jge
mov
add
adc
xchg
ss
fiaddl
gs
iret
xchg
flds
push
pushf
das
push
das
inc
cmpsb
rcr
dec
xor
subb
sbb
movsl
aas
call
push
jl
or
fsubrp
ret
inc
fcmovnu
dec
sbb
rcll
mov
out
pop
lahf
or
push
outsl
inc
xor
mov
jb
ret
sub
xlat
nop
roll
sbb
jne
pop
push
or
add
mov
fidivrs
jb
mov
cli
imul
add
jns
mov
mov
iret
xchg
pop
int3
mov
sub
pushf
jb
jo
fiadds
dec
jmp
stc
out
out
add
fldenv
add
mov
imull
call
je
aad
fwait
ljmp
push
dec
push
bound
lahf
push
ffree
sahf
fsubrs
dec
push
pop
pop
out
adc
out
push
inc
mov
fisubrs
fs
gs
mov
mov
rorl
or
rcll
inc
lret
adc
sahf
sahf
fstpl
xlat
outsl
xlat
sbb
dec
pop
cmp
jge
sub
loope
cs
in
and
inc
xor
mov
movsb
mov
sbb
add
mov
jns
or
fldenv
adc
fdivrl
insl
xlat
xor
clc
sbb
pushf
test
inc
insb
pop
dec
loopne
and
test
mov
in
popf
cmp
sub
jle
sub
dec
pop
test
inc
mov
adc
dec
cmpsl
add
ret
ja
ss
xor
mov
push
iret
sub
sbb
or
push
jge
fwait
cli
cmp
cwtl
xor
mov
cmc
mov
cmp
test
mov
xor
push
push
add
into
subb
out
test
mov
cmp
mov
aam
movsb
jae
cmpl
insl
jo
mov
std
imul
insl
push
bswap
and
sahf
inc
sarb
jle
rcl
mov
pushaw
test
mov
adc
and
mov
ret
dec
xchg
test
imul
repz
ds
pop
dec
arpl
adc
cld
cmc
jne
popf
cltd
adc
loop
lods
repnz
dec
mov
scas
and
fwait
clc
jnp
imul
and
pop
inc
adc
xchg
sti
xchg
mov
aad
nop
pop
mov
push
arpl
insb
popa
rclb
sbb
sub
pop
push
mov
cmpsl
sbb
fsubs
sub
jnp
sbb
pop
int3
inc
push
in
push
imul
jo
in
loope
or
add
pop
mov
mov
jmp
rclb
divl
fdivs
or
lret
add
clc
jbe
ja
sub
cmp
imul
pop
gs
sub
push
int
push
mov
fs
sbb
xchg
xchg
jge
iret
mov
pop
outsl
inc
sub
jle
dec
repz
sbb
mov
dec
fdivrs
loopne
gs
jmp
add
xor
or
adc
inc
xchg
mov
jnp
dec
xor
mov
ss
jb
in
inc
outsl
ss
repnz
jne
shrw
push
and
fisttps
imull
mov
ljmp
f2xm1
mov
ret
dec
lock
jecxz
icebp
pop
dec
lods
in
lahf
loop
roll
mov
in
out
daa
mov
xchg
mov
cmpsb
cli
xchg
mov
repnz
dec
ds
mov
inc
xchg
fidivrs
sub
mov
fstpt
dec
aad
hlt
or
es
aas
inc
cwtl
loopne
pop
cmpsb
push
jp
gs
fstps
cmp
push
xor
shrl
and
dec
pop
and
repnz
popf
lcall
xchg
xchg
mov
loopne
and
inc
mov
pop
mov
divl
popf
testb
test
aam
test
dec
ret
dec
cmpsl
loope
push
pop
sbb
insl
leave
ss
cmc
inc
nop
mov
add
xor
lret
sbb
inc
mov
jp
in
push
lret
shll
xchg
lcall
and
mov
and
hlt
lcall
ds
xchg
and
sub
fbld
imul
xor
sub
push
ss
clc
jns
fnstsw
fs
dec
clc
inc
loopne
out
js
xlat
cmp
or
adc
cmp
xlat
xchg
les
mov
test
arpl
inc
jge
or
aas
dec
fs
mov
push
in
cmp
test
in
lods
enter
sub
sti
jmp
jo
push
cmc
mov
sbb
call
repz
or
mov
ja
pop
pop
stc
out
mov
fsubrp
daa
push
mov
pop
and
add
cmpsb
pop
das
add
jne
scas
mov
inc
push
sbb
xchg
ret
cltd
stos
lock
add
ss
iret
negl
fsts
and
cmp
in
mov
dec
push
mov
pop
xor
lds
out
or
push
adc
test
mov
pushf
and
and
add
pop
cmpsl
sbb
call
pop
pop
shrb
mov
jp
xchg
clc
mov
inc
jae
rclb
les
test
xchg
xor
mov
cmp
in
xchg
cld
or
push
stc
inc
int3
push
hlt
pop
test
mov
inc
lods
push
jge
testb
addr16
jb
orl
jle
jecxz
mov
mov
movsl
inc
add
and
cmp
femms
xchg
mov
push
dec
pop
mov
and
rorb
xchg
loope
aaa
jo
jle
hlt
jg
repnz
aaa
pusha
xchg
movsb
lcall
fmull
icebp
rorl
rorl
mov
jecxz
outsl
xchg
xor
and
jl
dec
stos
dec
or
sbb
inc
loope
jnp
out
xor
add
mov
jg
sbb
mov
or
pop
mov
data16
pusha
insb
sbb
hlt
dec
dec
mov
mov
push
jae
aad
movsl
lea
cli
ds
fsubl
adc
push
cs
cld
jbe
cmpsb
xchg
aaa
neg
inc
ror
push
push
mov
xchg
in
shrb
adc
inc
jb
jo
sub
add
out
sbb
jno
pop
jb
xlat
pop
repz
lods
mov
andl
xor
jbe
pop
dec
push
inc
outsl
mov
mov
test
push
push
js
and
pop
sarl
test
loop
outsl
fcoms
xchg
mov
fidivl
mov
divl
mov
mov
andl
pop
rcll
and
sbb
repnz
das
std
push
test
dec
cmp
aad
rorb
add
mov
inc
lds
sub
inc
movsl
mov
pop
sahf
es
pop
mov
inc
inc
std
or
mov
sahf
adc
movsb
fldl
sbb
mov
or
jne
pop
lods
jae
int
xor
enter
push
pop
shlb
jg
pop
mov
inc
xor
shl
push
test
sahf
dec
in
lahf
cli
ret
pusha
add
xlat
inc
mov
mov
es
pop
jl
jb
pop
dec
xchg
in
inc
mov
cmp
jnp
andl
ja
xor
stos
bound
mov
mov
inc
stos
jecxz
pop
inc
or
inc
out
push
inc
scas
mov
inc
stos
or
popf
ds
into
pop
inc
fldenv
mov
mov
pusha
lret
mov
or
xor
cmpl
icebp
or
sub
pop
pop
sub
rcrb
sub
fcomps
lock
int
ja
in
orl
pop
outsl
das
movsb
je
lds
cli
ss
imul
mov
push
pop
imul
mov
and
cmp
mov
insl
mov
inc
out
mov
or
add
jo
sbb
sub
jg
jnp
push
xchg
xchg
scas
stos
imull
out
push
stc
push
inc
sub
xchg
mov
cmp
ret
mov
fildll
repnz
push
fwait
xor
lahf
or
push
sbb
popf
cwtl
mov
push
add
dec
adc
xor
push
out
lret
fs
jmp
xor
out
inc
loop
mov
sbb
xchg
push
out
scas
adc
ret
mov
shlb
jge
add
shrl
adc
mov
sbb
mov
ss
aas
test
add
and
ja
cmpsl
mov
cmpsl
jle
push
pop
xchg
add
mov
imul
xchg
jns
ja
cmp
pop
and
fucomip
pop
jg
addr16
sub
ss
push
xor
xchg
xchg
or
popf
mov
sbb
push
xor
icebp
and
nop
std
ljmp
mov
inc
das
enter
sarb
sub
ja
clc
push
movsb
cwtl
lods
out
int3
xchg
jecxz
push
fs
sbb
xchg
pop
push
test
fnstsw
mov
orb
xchg
not
push
dec
pop
pop
mov
pop
mov
rolb
and
jne
outsl
xchg
and
ss
test
ss
hlt
mov
mov
mov
cmp
sarb
sub
cltd
push
cld
mov
and
pop
pop
or
scas
mov
cmp
hlt
xchg
xchg
cwtl
lahf
mov
and
mov
test
insl
pop
or
lea
push
sarb
mov
jecxz
ficompl
ret
ror
dec
xchg
push
pop
das
andl
add
jns
mov
out
das
loope
test
xor
xchg
andb
js
adcl
pop
int
in
xchg
xor
out
inc
loop
xchg
adc
movsl
mov
jl
imul
push
push
inc
mov
or
cmp
shr
mov
fists
mov
aad
scas
lret
xlat
sub
or
cmp
cmp
jmp
cmpsl
hlt
or
outsb
popf
inc
push
xor
cld
fsubrs
mov
push
imul
cmp
xchg
inc
pop
ficompl
and
addl
cli
loop
sub
decl
stos
jne
mov
scas
mov
mov
adc
aad
jmp
adc
pop
test
cmp
inc
xor
test
out
stos
enter
bnd
adc
sti
pop
scas
pop
int3
pop
aad
cmp
xor
sbb
xchg
repz
bound
pushf
sbb
rolb
mov
lea
inc
xchg
sbb
repnz
mov
popa
inc
mov
add
jno
aad
mov
jno
icebp
cmpsl
add
in
xchg
xor
movsb
xor
sub
pop
adc
adc
cmp
push
jne
jle
inc
add
out
stc
cwtl
adc
pop
fidivrl
clc
xlat
sti
jg
mov
fldcw
inc
std
into
test
sti
add
loop
or
aad
fistpll
mov
xchg
inc
mov
das
adc
xacquire
cmpl
leave
jp
clc
outsl
call
mov
jo
das
call
inc
add
push
mulb
js
xor
adc
loop
sub
movsl
fwait
loopne
hlt
imul
fisttps
pop
dec
lea
pusha
mov
push
sub
jp
add
jmp
add
ror
les
jecxz
or
add
mov
xchg
adc
push
xor
cld
mov
fsts
push
dec
add
daa
jl
cmpsb
and
dec
in
dec
pop
pushf
xor
std
outsb
push
mov
mov
push
dec
or
pop
pop
pop
pop
shrl
imul
adc
enter
mov
out
sbb
test
fimuls
or
call
jno
imul
mov
and
int
sbbb
movl
scas
mov
or
pop
or
sub
loopne
roll
xor
fstps
pop
cmc
fstl
fcomps
pop
push
shlb
dec
mov
sbb
gs
rorl
leave
inc
jl
and
fisttpll
pop
cmp
pop
imul
pop
in
test
dec
popf
rcrb
jecxz
push
js
insb
dec
pop
dec
movsl
pop
out
adc
mov
mov
mov
push
push
out
in
notl
aam
test
aas
mov
inc
sub
sub
cld
lret
dec
mov
pop
fimull
mov
push
push
pop
movsl
mov
leave
aam
mov
scas
pop
rol
inc
mov
add
bound
pop
sub
imul
cmp
sub
or
and
xchg
xor
mov
stos
add
data16
shll
ds
sub
cmp
push
mov
push
arpl
les
pushf
cmp
loope
push
orl
mov
jmp
adc
insl
das
scas
into
int
cmp
jnp
call
sub
mov
insb
mov
pop
mov
bnd
sbb
or
std
into
adc
data16
pop
test
jle
daa
nop
mov
ja
nop
add
adc
dec
pop
popa
mov
xchg
jmp
idivl
andb
je
mov
jecxz
fistpll
dec
inc
add
aam
fsts
pop
cs
jmp
pusha
hlt
mull
aaa
xorb
aam
sahf
es
mov
lods
in
ds
mov
test
in
and
lea
inc
dec
xchg
push
scas
xchg
cmp
rorb
dec
inc
pop
dec
call
arpl
shll
mov
jno
fidivrs
lea
rcrl
incb
outsl
in
rcll
dec
inc
mov
pop
hlt
sbb
pusha
sub
jne
jge
stos
adc
popf
loop
lods
sbb
pop
sbb
mov
int3
in
nop
jmp
lret
ret
xlat
sti
fadd
mov
xchg
enter
div
pusha
mov
cmp
ficomps
aam
mov
ret
xor
push
cli
add
pusha
mov
rolb
adc
addr16
jge
push
and
jge
xchg
lret
ret
out
ljmpw
sbb
xchg
push
cmp
and
jge
xchg
dec
or
cwtl
dec
jbe
adc
and
or
pop
popa
stos
sarl
inc
out
jmp
adc
insb
dec
xlat
cmp
sarl
xchg
pop
pop
or
ss
sub
fcompl
push
adc
pop
pushf
cmc
jae
fs
ret
cltd
jg
cmp
jns
mov
xlat
dec
cmp
mov
xchg
fbld
cmp
push
lds
mov
bound
test
jne
mov
lahf
inc
cmp
inc
push
pop
and
pop
sbb
test
mov
sbb
sbb
std
adc
cmc
xchg
add
fs
out
shll
jp
lock
test
mov
movsb
jle
xor
xchg
filds
inc
inc
movsl
aam
call
sbb
pushf
dec
inc
inc
notb
popf
xchg
jb
enter
nop
fisubl
pop
mov
mov
insb
dec
fldcw
adc
rcll
sub
pusha
inc
sbb
sbb
subl
mov
loope
add
jg
mov
inc
mov
fiadds
jne
add
stos
cmc
sub
mov
jo
imul
and
call
testb
xchg
ret
jl
xchg
es
cmp
mov
addb
mov
jp
push
ret
outsl
pop
adc
jmp
or
repz
jmp
jl
sti
dec
and
in
insl
sbb
outsl
gs
fmull
inc
mov
bound
iret
or
push
stc
add
test
sbb
insl
hlt
inc
fs
jno
lds
repnz
cli
xlat
xchg
push
push
dec
pop
or
push
cmc
loopne
adc
cld
jnp
and
adc
xor
int3
int3
dec
mov
imul
sub
jmp
andb
out
inc
xor
push
scas
test
inc
mov
lock
inc
or
or
and
sbb
imul
dec
stc
inc
mov
mov
rcr
arpl
cli
sub
clc
cmp
in
add
ds
add
inc
jp
movsl
rcrb
dec
movsl
cmp
popa
test
fcompl
sub
bound
sahf
lea
out
outsl
cmp
test
not
outsl
out
xor
and
xor
jl
jae
jmp
cmpsb
inc
jns
adc
mov
in
push
int
sti
xchg
push
mov
or
inc
jecxz
data16
popa
inc
test
call
fistpl
cld
add
mov
das
shlb
push
and
pop
xchg
fiadds
sub
cmp
xor
cmp
cli
mov
sbb
add
push
mov
push
hlt
fwait
lods
dec
xchg
mov
push
cmpsl
cmp
fwait
xchg
clc
push
inc
fsts
xlat
cmpsb
jmp
cmpsl
and
mov
push
scas
mov
shl
xor
ret
jg
sub
dec
repnz
dec
adc
pop
add
adc
jnp
repnz
ret
add
push
outsl
lcall
add
rolb
stos
aaa
cmpsl
mov
insb
mov
pushf
adc
push
adc
leave
dec
sbb
mov
fcompl
dec
pop
push
jmp
ficomps
jp
add
jne
daa
fstps
add
lods
dec
mov
mov
sbb
in
mov
jns
ret
rcrb
movsb
xchg
mov
inc
cmp
aas
sarb
data16
dec
fidivs
addr16
jb
test
fnsave
add
out
mov
lcall
jb
inc
mov
sbb
jge
mov
cli
xchg
stos
sarl
cmpsl
aas
jae
cs
mov
loop
clc
js
out
sub
into
cwtl
xchg
inc
fcomps
imul
pop
or
cmpsb
cmp
push
inc
fadd
jns
lret
cmp
cmp
pushf
jnp
cs
popa
cmp
push
jg
mov
mov
stos
cld
adcb
and
repz
or
stc
inc
xchg
clc
test
lahf
add
scas
dec
or
or
or
push
ss
bound
rcr
mov
adc
sti
fwait
add
in
xchg
jecxz
lcall
cmpsb
inc
adc
rorb
xor
inc
das
test
fisttps
shlb
shlb
adc
or
shlb
push
out
test
add
lods
mov
mov
inc
mov
in
lea
jb
dec
jb
into
iret
xor
push
aam
mov
lret
sahf
xchg
fbld
in
inc
enter
notb
into
pop
or
out
ret
push
pop
insb
add
gs
in
rcrb
jne
jne
invd
packssdw
and
adc
cld
aas
add
cld
mov
enter
icebp
push
in
scas
mov
mov
mov
scas
out
dec
inc
aas
cmp
add
mov
stos
loop
mov
lock
pop
xchg
fsub
add
fcomps
leave
xchg
mov
call
dec
adc
sbb
mov
outsl
mov
outsb
test
aaa
fiadds
jp
rolb
pop
mov
inc
int3
loopne
xchg
cmp
sub
pop
repnz
jnp
lds
int
fiaddl
nop
pop
imul
jg
movsb
xchg
lods
loopne
callw
jo
fimuls
xor
and
pop
or
jns
inc
inc
fldenv
movsl
inc
into
lea
sarl
hlt
sub
lret
cli
mov
out
fisubrl
fildl
aad
cmp
out
fnstsw
cmpsl
or
outsl
orb
out
dec
or
dec
and
loop
pop
mov
mull
fadds
push
out
xchg
mov
int
dec
mov
cwtl
repnz
jl
js
scas
movsl
pop
xchg
pop
jle
mov
pop
out
popa
mov
sbb
xchg
push
mov
jbe
lods
lods
pop
mov
fidivrl
cmc
fs
insb
and
inc
fwait
test
mov
pusha
das
mov
push
mov
jg
xor
add
lret
sub
clc
fdivrs
adc
cmp
xchg
sub
push
pop
in
pcmpeqw
mov
mov
push
mov
lret
inc
test
sub
mov
mov
push
push
mov
sti
and
mov
nop
jl
hlt
cld
add
cs
ficompl
iret
aas
sarl
popf
and
mov
xlat
push
fisubrs
jg
sbb
pop
mov
repz
push
clc
mov
adc
lods
or
lea
cmp
mov
and
loopne,pt
mov
pop
xchg
and
mov
daa
fimuls
les
cwtl
push
movsb
inc
sub
adc
cmc
mov
arpl
mov
insb
in
dec
jb
loop
cmc
into
inc
cltd
rorl
sub
pop
xor
scas
mov
pusha
dec
mov
pop
cmp
test
cld
arpl
or
push
add
mov
cmc
movsl
push
add
xor
xchg
mov
rcrb
pop
popa
dec
sbb
sub
adc
lcall
stos
in
mov
push
aaa
dec
mov
mov
or
loop,pn
sarl
jecxz
jecxz
jmp
mov
js
push
cs
jbe
fadds
es
xchg
adc
and
cs
les
scas
fstpt
push
push
mov
out
sub
or
add
ds
sti
or
push
pusha
inc
gs
stc
mov
mov
ret
pop
notb
popa
add
add
and
mov
into
add
icebp
and
dec
jmp
pop
mov
mov
sbb
add
scas
jae
je
cmp
testl
sbb
leave
clc
mov
aad
in
std
movsl
or
pop
xchg
sbb
aam
xchg
jb
iret
stc
fucomp
cld
or
jae
xor
pop
movsb
fdiv
filds
add
pop
jecxz
inc
sbb
mov
out
mov
arpl
in
mov
in
das
ss
or
push
jnp
push
sbb
pop
lret
mov
cltd
stos
ss
sub
outsb
cmp
and
jecxz
addr16
subl
in
mov
iret
mov
pop
xchg
and
sbb
icebp
jle
pusha
lcall
scas
lock
add
in
lock
daa
pop
mov
test
popa
xchg
mov
ret
xchg
xor
push
or
jns
sbb
cmp
out
sar
push
xchg
ljmp
fimuls
and
movsl
f2xm1
test
mov
pop
imul
stos
into
jmp
push
jmp
outsl
pop
cmp
inc
idiv
or
push
cli
mov
insb
xlat
fs
mov
cli
dec
sbb
test
push
cmp
fisubl
ffreep
prefetch
or
mov
pop
dec
and
cmpsb
xor
cmpsb
jb
jb
nop
cmc
in
dec
call
iret
in
push
cwtl
pop
sub
and
dec
xchg
jmp
lret
mov
sbb
sub
sub
mov
cld
addr16
cltd
mov
idivb
cwtl
dec
mov
fimull
xor
dec
sbb
mov
in
inc
adc
mov
scas
jmp
mov
xchg
jge
mov
push
fstpl
xor
and
cmp
addr16
sbb
pushf
out
lods
scas
push
mov
jge
sbb
fildll
push
fists
test
ljmp
inc
push
push
and
cmp
sub
cmpsl
inc
data16
stos
and
scas
and
sbb
sti
inc
loop
adc
test
lahf
js
lret
iret
add
jmp
mov
pop
clc
and
mov
insl
daa
add
mov
mov
push
push
and
testb
dec
in
mov
and
push
ficomps
dec
cwtl
add
jae
fsubl
mov
loope
mov
jecxz
push
and
hlt
push
in
add
int3
jns
test
inc
stos
loop
xchg
mov
cmc
sbb
pop
inc
mov
and
enter
mov
fidivrl
mov
adc
push
sbb
jmp
in
mov
enter
or
adc
mov
jo
cltd
nop
pop
fucomp
jle
push
push
jecxz
enter
or
inc
sub
push
ss
cltd
cmpsb
push
popl
inc
sbbb
xchg
lahf
dec
and
xor
xor
pop
mov
inc
xor
jecxz
jge
loop
psrad
in
jo
adc
mov
xchg
icebp
and
inc
jae
arpl
rol
mov
sbb
mov
sbb
inc
loopne
cmc
ret
fcomip
sahf
dec
and
movq
dec
cmp
push
mov
mov
sahf
sub
and
pop
bound
dec
int3
imul
mov
cmp
movsb
fnstenv
or
scas
aas
xchg
mov
push
push
cmp
adc
call
iret
push
pop
negl
push
jl
leave
sub
xchg
mov
inc
test
cmp
pop
enter
pop
mov
mov
sub
dec
jbe
ret
notl
mov
fisubl
int3
mov
pop
mov
aas
ss
imul
ja
aam
out
jbe
cltd
mov
push
stos
insl
jbe
xchg
xchg
adc
dec
mov
or
push
loopne
mov
lds
js
jge
mov
cmp
sbb
enter
inc
push
push
cmpsl
aas
negb
fwait
jno
mov
das
add
addr16
jg
mov
js
mov
mov
cmp
mov
sub
add
inc
sbbb
push
rorl
or
adc
sub
or
mov
jl
cmp
das
jecxz
test
iret
cs
dec
add
es
shrl
xor
pavgb
mov
rol
ljmp
addb
sbb
mov
sti
inc
inc
pop
xchg
and
insb
xchg
jb
ret
in
mov
xor
es
sbb
out
jecxz
fmuls
mov
jecxz
xor
stc
loope
movsb
xor
in
mulb
ret
scas
xchg
rorb
sbb
mov
cmp
mov
push
inc
aad
pop
xchg
pop
and
push
rorl
jge
movsb
test
xchg
xchg
sub
sub
cmp
add
icebp
bound
out
dec
pop
mov
nop
nop
and
movsl
xorb
outsl
movsb
dec
mov
cli
xchg
popf
cld
scas
xchg
test
and
dec
lahf
add
jns
popf
out
leave
inc
pop
mov
or
js
pop
push
hlt
jb
inc
cltd
inc
lods
sub
adcb
xchg
dec
mov
ror
pop
mov
addr16
rdtsc
mov
xchg
inc
and
lods
pop
fstpl
dec
sbbb
lods
stos
int
xlat
popa
dec
add
outsl
push
push
fdivs
ja
xor
int
aaa
jne
dec
push
sbb
and
std
test
or
mov
mov
xchg
or
movsl
sbb
aaa
inc
scas
and
push
push
mov
cmpsb
sub
dec
xchg
stc
fs
stc
inc
xchg
sahf
enter
mov
adcb
fcmovnb
ret
and
jns
mov
cmp
cli
movsb
ss
lock
dec
or
call
mov
and
cmp
adc
mov
cmp
sbb
dec
jnp
mov
cs
call
push
int
dec
imul
stc
dec
jns
out
daa
decb
cs
lock
outsb
mov
int3
jp
mov
push
or
cmp
sbb
sub
ds
pop
andps
pop
insl
aaa
mov
mov
adc
out
push
pop
adc
jle
add
in
pop
std
xor
in
jl
push
cltd
fucom
imull
ja
push
clc
xor
or
xor
fisubs
pop
cmpsl
or
sub
imul
fidivl
bnd
adc
jbe
adc
dec
add
xor
jnp
xchg
in
and
cmpsb
cmp
push
ljmp
or
cmp
int3
mov
jmp
adc
lahf
mov
movsl
divl
mov
or
add
test
lea
dec
repz
or
inc
mov
pop
xchg
fstpt
test
cmpsb
cmc
pop
cltd
inc
adc
int3
sub
jl
ds
xor
mov
and
push
adc
fs
js
push
jne
les
and
push
pop
fs
pop
sbb
jmp
ficompl
jno
add
jb
je
mov
lahf
inc
es
aas
xchg
nop
insb
mov
gs
cmp
and
cmpl
mov
adc
fistpll
insl
push
mov
add
lahf
int
pushf
les
pop
hlt
sbb
and
push
mov
call
cld
lods
inc
dec
xchg
jns
cltd
sub
das
cmp
dec
add
cmp
cmp
int3
scas
mov
into
fcomps
std
test
aaa
enter
jge
lret
pop
cmp
dec
pop
dec
adc
or
insb
inc
mov
lahf
xor
movsb
mov
mov
dec
add
jl
add
bound
js
fwait
cmc
mov
mov
daa
sbbb
int
jecxz
lea
jns
pop
adc
mov
xchg
add
sti
xor
dec
jmp
and
aas
pushf
fcomps
xchg
xor
lds
je
loop
jmp
je
mov
inc
and
clc
cltd
int3
cld
push
divl
ss
pusha
add
mov
scas
push
mov
sub
cmp
bound
adc
sub
stos
in
pusha
sub
jo
movsb
nop
mov
dec
adc
jecxz
sub
mov
dec
insb
testl
jge
cltd
push
gs
lahf
or
inc
pop
mov
pop
xlat
sbb
and
push
push
cmp
cli
out
js
add
pop
cwtl
imul
fistpll
int
cli
mul
xchg
pop
enter
push
xchg
sub
shl
xchg
cli
push
fsubr
pushf
mov
sahf
enter
cmp
jae
pop
or
push
pop
mov
cld
into
adc
shr
xor
adc
out
ds
xchg
stos
test
sub
std
adc
mov
aas
dec
adc
test
lret
xlat
cmc
xchg
cmp
inc
sahf
add
mov
jb
jno
xor
movsl
pop
test
fmuls
repz
in
mov
mov
jp
dec
push
push
fcompl
lret
lret
stos
idiv
fadd
cs
imull
rcr
jg
sar
aad
push
sti
ret
arpl
rcll
cmpsl
loope
xor
adc
cmp
repnz
jmp
test
jge
insl
loopne
mov
xchg
fcmovbe
xor
les
or
mov
ret
loop
clc
shll
stos
cmc
imul
mov
xchg
adc
cmc
xor
mov
add
ds
mov
jmp
jne
fisttpll
xchg
or
std
or
rclb
ds
xchg
jge
pushf
add
int
fcmovnbe
mov
in
fs
movsl
call
lds
sbb
xchg
add
iret
jns
pusha
int3
imul
mov
inc
imul
xlat
int3
push
and
out
mov
mov
movsb
aas
add
jnp
xor
pop
ret
lcall
inc
push
push
push
or
pop
push
inc
aaa
cmpl
outsl
test
fildll
ss
inc
and
out
mov
stc
inc
rcr
call
in
out
xchg
nop
jnp
mov
cld
subl
testb
not
in
les
inc
inc
sbb
fnstsw
pop
movsl
push
jns
dec
jl
lds
ja
call
ja
test
out
adc
orl
xor
pushf
and
aad
sbb
faddl
xchg
hlt
pop
sub
das
arpl
fcom
lahf
lods
arpl
mov
sub
fildll
jmp
dec
loopne
mov
decl
or
cmp
test
testl
and
xchg
push
js
mov
push
mov
repz
dec
sbb
sub
pop
int
cmp
adc
mov
jno
insb
push
je
ffreep
fidivrl
or
add
dec
retw
stos
mov
imulb
jecxz
mov
mov
adc
andl
mov
hlt
sub
push
cmp
aad
lock
fstpt
adc
xorl
rcll
mov
mov
sbbl
mov
and
jl
aad
repnz
jmp
inc
xchg
sbb
jg
test
pop
mov
jno
jne
push
add
cmp
mov
dec
push
nop
inc
xchg
mov
xchg
bound
dec
or
mov
mov
xor
xor
aam
xor
push
std
pop
cmp
push
adc
mov
xor
ds
sarl
shrl
es
je
dec
xchg
add
divl
dec
scas
cld
mov
clc
cmpsb
cltd
pop
or
mov
out
pop
adc
xchg
movsb
fistps
sub
dec
ror
sbb
or
mov
out
int
scas
std
arpl
lods
ja
pop
es
jp
sbb
push
mov
lods
daa
call
xor
subb
add
sahf
inc
addr16
xor
mov
bound
dec
xchg
xchg
add
lea
inc
push
inc
cmc
push
std
aaa
cltd
add
fnstsw
or
js
add
idiv
mov
test
inc
pop
xor
mov
fdivl
adcb
ret
rorl
outsl
jmp
insl
sarl
sbb
ret
hlt
nop
lods
inc
rcll
or
or
xor
pusha
mov
ret
test
push
mov
ljmp
shl
xor
sub
mov
xorb
push
popa
fisttps
loop
les
mov
repnz
dec
imul
push
mov
dec
dec
jmp
cwtl
addr16
adc
rcl
shlb
jg
add
daa
dec
enter
lahf
movsl
enter
sbb
sub
inc
inc
sahf
mov
fldcw
lret
mov
mov
inc
mov
push
cld
addr16
ljmp
xor
sub
adc
pop
lods
js
xchg
sub
xchg
std
cli
pop
pop
xchg
mov
dec
cmp
es
dec
pop
inc
mov
mov
jb
push
dec
cltd
arpl
adc
pop
mov
sub
adc
mov
stos
sub
dec
test
mov
jno
rorl
mov
or
xchg
inc
fwait
test
cwtl
inc
fsts
sub
cmpsl
push
pop
movsb
cmp
mov
loope
fnsave
xchg
gs
push
in
das
mov
movsb
or
sub
ss
inc
inc
adc
decl
adc
jb
cld
inc
fnsave
dec
add
fxch
push
out
inc
fstpt
divl
mov
int
sbb
adc
cmp
and
cmp
std
cmp
pushf
push
lret
arpl
jne
push
dec
jnp
scas
add
pop
cmp
sbb
and
mov
jmp
xchg
scas
outsl
es
add
xchg
andb
shll
aas
out
inc
dec
addr16
add
out
aad
jmp
out
in
push
jmp
shl
test
sub
dec
clc
or
or
hlt
pop
add
jo
pop
mov
ret
sub
pop
imul
int3
push
ret
dec
sbb
lods
inc
faddl
iret
mov
or
adc
cmpsl
add
ja
shll
popa
enter
rol
dec
jecxz
pop
adc
mov
pop
sbb
push
pushf
int
sbb
push
xchg
into
jno
mov
dec
pushl
rcrb
jp
pop
xor
inc
ret
sbb
xchg
or
fisttpl
mov
fsubs
cmpsl
pop
popaw
or
je
ret
fldenv
sbb
pop
add
out
xchg
add
mov
cwtl
out
pop
mov
jecxz
std
cmc
inc
sbb
clc
dec
and
ret
mov
mov
enter
arpl
pop
push
sbb
mov
inc
hlt
lret
ret
call
push
or
into
jns
sbb
andb
lahf
push
push
mov
test
into
bnd
push
pop
div
imul
insl
sbb
pop
cmc
int
scas
sub
xor
add
mov
inc
cmp
mov
pushf
push
inc
lods
loope
pop
lea
mov
fstl
sbb
jg
jp
cltd
dec
popf
jae
ja
popf
inc
lcall
rcr
fldenv
xor
fstpt
adc
push
push
outsb
dec
cltd
mov
dec
mov
xor
sahf
pop
jmp
xor
mov
stc
xchg
test
xor
sahf
shll
cli
int
ss
test
stos
je
mov
jno
mov
stos
lcall
enter
fwait
cmp
push
push
sbb
jmp
mov
mov
test
lods
or
xor
mov
adc
aad
xchg
jg
popf
fcoms
pop
negl
mov
es
sbb
mov
add
pop
mov
jecxz
push
ljmp
push
mov
hlt
idivl
sahf
mov
les
insb
popf
movsl
out
or
inc
jno
lock
iret
les
and
outsb
daa
inc
rcrl
sub
pop
stos
mov
mov
loopne
mov
jmp
dec
les
in
sti
inc
pop
xor
or
loope
mov
pop
call
dec
inc
sbb
and
push
nop
insl
imul
push
loopne
arpl
mov
in
stos
cmp
lock
push
stos
lret
mov
add
jl
cmp
xchg
and
shlb
and
lods
xchg
mov
mov
mov
push
ljmp
lods
sbb
pop
lcall
orb
sub
push
inc
sbb
xor
xor
adc
ret
pop
sbb
pusha
push
into
sbb
mov
dec
jno
and
or
push
cs
sbb
push
xor
stc
popa
adc
push
loopne
rcrl
pop
das
dec
ret
ret
dec
mov
cli
repz
daa
into
cmp
jns
adc
dec
push
inc
xchg
loopne
je
add
push
in
popa
jg
inc
xor
insb
lret
or
push
pop
hlt
dec
xchg
call
sub
mov
lcall
lods
fiaddl
mov
inc
lahf
cmp
cmc
popa
cmpsb
jle
mov
dec
and
push
mov
mov
sahf
add
mov
jae
sbb
jp
outsl
ss
and
imul
adc
pop
pusha
jo
adc
push
mov
shll
ljmp
fmul
lea
aas
insl
push
jmp
push
adc
dec
inc
out
cld
lea
xchg
push
or
xor
mov
xchg
arpl
sbb
andb
mov
iret
mov
sti
aad
aam
lea
pop
test
xchg
mov
mov
gs
out
aaa
pop
mov
orb
psrld
int3
sub
iret
and
in
ret
stc
inc
mov
std
ret
leave
and
dec
aas
xor
fs
jne
lahf
xor
idivl
movsl
mov
mov
out
push
popa
adc
xor
in
xor
sub
pop
test
lret
jle
pop
inc
pand
xorl
push
jl
jp
push
mov
or
js
icebp
push
sbb
clc
ss
test
dec
inc
sbb
nop
mov
dec
push
mov
nop
inc
xchg
jbe
xchg
xchg
in
add
jmp
mov
repz
js
js
push
aaa
lahf
int
push
dec
fstl
xor
inc
sub
jo
fldcw
push
xchg
lods
shll
mov
jns
ret
sahf
add
out
pop
and
rcrb
scas
loop
push
sbb
sbbb
lcall
std
sti
sbb
out
xchg
fwait
divb
xchg
pop
sub
lret
pop
cmp
ret
mov
xchg
sarb
lods
fisttpl
xchg
daa
xor
mov
pop
xor
iret
fs
xchg
cmpl
ftst
sahf
inc
mov
pop
js
out
cs
xchg
iret
sub
loop
mov
mov
repnz
in
inc
aam
bound
add
lcall
repnz
test
iret
aam
adc
and
imul
cli
aas
xchg
sbb
loopne
pop
mov
add
lock
adc
clc
jle
jae
je
mov
out
sub
cmp
das
inc
fdivrp
and
xchg
jo
mov
mov
dec
insb
mov
aas
or
push
scas
imul
stos
std
or
jo
sbb
test
inc
js
dec
in
into
repz
sar
aaa
or
push
pop
pop
pop
enter
or
mov
sbb
xchg
or
sbb
cmc
adc
fs
int3
jne
jg
jl
mov
sub
mov
data16
pop
pop
negb
push
xor
lods
inc
sub
pop
lcall
rcr
dec
push
movb
stos
scas
lahf
mov
push
inc
popf
push
dec
inc
les
sub
add
dec
inc
sub
mov
sbb
or
out
iret
push
mov
data16
push
push
mov
jbe
cltd
aam
jecxz
push
ss
mov
mov
fsub
mov
pushf
fcmovnb
vcvttsd2si
pushf
add
sahf
lret
je
mov
jnp
or
xchg
adc
das
jns
popa
out
aam
lcall
mov
xchg
lahf
movsb
shrb
pop
add
and
stos
cltd
dec
outsb
mov
cmp
popa
push
add
shrb
mov
into
and
or
cltd
outsl
dec
repz
fwait
testb
mov
pop
inc
mov
leave
push
or
stc
insl
lods
mov
fwait
lea
and
xor
pop
xor
push
xorl
dec
pop
repnz
pop
jmp
icebp
lods
mov
dec
cltd
cmp
cltd
jae
and
pop
xor
xor
jb
or
pop
fbld
and
inc
es
arpl
pop
loopne
pop
pop
mov
xchg
out
pop
xor
mov
push
xor
xchg
inc
lcall
stos
rolb
ret
add
sti
push
std
data16
loop
and
sahf
repz
cmp
jb
arpl
mov
mov
sbb
repz
or
lds
jbe
out
xchg
pop
aam
cs
adc
push
popa
cs
ss
test
sub
mov
outsl
shlb
scas
push
mov
int
jmp
insb
dec
nop
clc
or
cmp
lret
out
das
pop
mov
add
pusha
out
fsubrl
fstpl
mov
pushf
push
nop
aam
and
loop
adc
mov
mov
push
aam
xchg
pop
or
xor
jecxz
or
fcom
cmpsl
fdivr
mov
dec
into
sbb
nop
adc
add
in
sub
shrl
lret
aam
js
cmp
imul
xorl
gs
cltd
pop
out
xor
jnp
fmull
outsl
inc
mov
xorb
or
outsb
and
mov
stos
or
cmp
incb
pop
pushf
jmp
adc
adc
xor
inc
pop
or
or
popa
leave
xor
mov
add
sbbb
push
div
cmp
xchg
xchg
dec
jle
xor
mov
ljmp
cs
cmpsb
fcmovbe
cld
das
dec
sub
movsb
mov
pop
push
sub
jne
jle,pt
jae
lock
push
arpl
loopne
jno
cmp
hlt
jae
pop
movsl
xchg
and
ret
jns
int3
and
repz
insl
add
mov
lods
mov
jge
sub
xlat
push
sub
out
pop
xor
fisubl
mov
and
push
sbb
sub
sub
cmc
cmpsb
movsl
add
add
adc
pop
loope
xlat
cli
out
cmc
xchg
push
loopne
mov
jno
push
out
es
fdivrs
mov
push
nop
jo
sbb
imul
mov
test
out
out
scas
imul
add
mov
push
pop
enter
pop
and
lods
repnz
pop
push
or
mov
cmp
xor
mov
loop
int
jmp
xchg
cmpsl
in
jle
or
cmp
adc
popl
mov
jo
not
rcrl
mov
pop
aas
mov
jmp
jle
xchg
cld
fucom
int
lret
sub
in
mov
push
out
sbb
sub
lods
sub
sub
xchg
push
pop
movsl
rclb
xchg
push
xchg
sub
mov
jecxz
sbb
divb
int3
pop
jl
push
xchg
xchg
fidivrl
xchg
imul
push
das
pop
jecxz
mov
test
sbb
mov
and
jae
inc
outsb
jecxz
add
pusha
add
adc
lds
out
arpl
stos
stos
aad
imul
inc
movsb
mov
mov
pusha
xchg
sbb
mov
xchg
fcmovnb
in
rorb
mov
sti
or
iret
xchg
xor
cltd
insb
sbb
aas
push
push
pop
inc
push
test
adc
outsb
int3
repz
das
daa
mov
mov
add
hlt
xchg
mov
pop
sbb
push
jp
or
and
mov
mov
xchg
scas
mov
cmp
mov
inc
fcom
bound
xchg
xor
popa
popa
test
cmp
cmp
mov
out
pop
repnz
ficoms
xor
inc
movsl
rorb
inc
andl
sbb
outsb
idiv
xchg
mov
sbb
jmp
jle
or
jp
int3
sarb
aam
lock
and
pop
gs
ss
dec
iret
arpl
fs
jno
pushf
stos
mov
pop
pop
idivb
pop
or
and
pop
mov
lret
aad
loope
mov
mov
sub
in
fidivrs
fbld
mov
xchg
outsb
addr16
jne
rcrb
stos
jp
loop
cmpsl
and
lahf
xor
outsl
test
fwait
sbb
das
dec
insb
mov
pop
xor
out
jnp
cs
pop
les
xchg
jl
sub
xchg
nop
repz
pop
cmp
hlt
xchg
test
or
sub
inc
or
decl
scas
cwtl
lods
push
jmp
sbb
and
fimuls
stc
mov
bound
fisubl
cmp
ret
mov
mov
add
xchg
pop
stc
mov
sarb
cmp
mov
xor
popf
lods
lcall
push
scas
arpl
cltd
rorb
mov
sti
add
inc
add
mov
out
pop
fdivrs
js
divl
and
pop
xor
jmp
daa
pop
adc
jmp
test
aaa
push
pop
lea
imul
or
push
push
push
or
in
pop
inc
cmp
andl
inc
sti
sbb
idivb
inc
mov
in
pop
rep
cmp
add
jle
xchg
and
sbb
mov
add
jb
xchg
and
movsb
cmpsb
test
scas
scas
rclb
push
inc
xor
mov
mov
dec
mov
loopne
test
mov
mov
rcrb
adc
pop
das
mov
jp
inc
cmpsl
cmp
jl
int
dec
or
cmp
pushf
lock
jne
sub
push
ud0
shll
pop
jbe
fldenv
sbb
out
addr16
lret
lret
inc
mov
in
inc
cmp
sbb
adc
ret
sub
test
xorl
or
lahf
mov
popa
push
in
into
add
jae
xchg
add
cltd
icebp
adc
xor
out
imul
xchg
dec
subl
sahf
push
sub
sub
or
movsl
out
dec
arpl
xchg
shlb
pop
inc
insl
xor
and
pop
push
ret
loopne,pn
test
adc
dec
notl
fcmovu
add
ror
xchg
ja
fcomp
daa
mov
xchg
add
std
aas
pop
add
or
xor
and
mov
and
fsts
add
mov
cmc
test
pop
push
nop
and
inc
xorl
xchg
dec
cld
dec
mov
pop
mov
jno
test
dec
jmp
fucomp
insl
inc
cltd
push
outsb
mull
ud1
popf
cmc
jl
pop
push
aaa
xchg
adc
sbb
test
jns
out
outsl
mov
push
stos
lea
insb
pop
pushf
sbb
mov
pop
xlat
and
dec
add
push
xor
ficomps
dec
cmc
ds
fadds
and
sahf
mov
cwtl
cmc
ljmp
adc
push
rcll
jecxz
outsb
adc
cs
jne
jl
hlt
roll
add
rorl
lods
in
push
dec
insl
mov
testl
sub
rolb
jl
jg
adcb
or
cmp
sbb
lods
xchg
cld
gs
in
out
mov
shlb
xchg
addr16
scas
push
adc
int
add
push
inc
push
pop
pop
cld
inc
dec
adc
ret
mov
mov
push
pop
xchg
ljmp
adc
vmovntps
loop
das
in
ret
jae
push
es
xor
xor
ret
out
sti
pusha
insl
adc
fisubs
rol
mov
in
lods
outsl
dec
push
insl
shl
jle
sbb
arpl
mov
add
mov
movsl
add
test
insb
xlat
decl
dec
inc
scas
arpl
dec
inc
adcl
iret
movsl
cmp
mov
xchg
jg
sub
lods
mov
dec
fwait
pusha
add
std
jo
add
aam
xor
aas
pop
gs
imul
dec
mov
push
ds
andb
adc
in
push
and
lds
push
aas
or
mov
cmpsb
cmp
in
cmp
mov
lds
nop
inc
sbb
xchg
adc
insb
adc
jbe
or
fs
idivb
shrb
inc
out
or
enter
mov
testb
mov
push
repnz
loop
add
mov
xor
inc
jmp
fildl
sub
mov
add
and
scas
dec
xor
cmp
inc
sub
mov
pop
lds
inc
lods
jb
adc
dec
and
setnp
lahf
clc
into
daa
mov
in
mov
ds
lret
in
and
ljmp
dec
mov
lods
adc
push
or
loop
outsb
xor
inc
dec
mov
sbb
jge
push
sub
movsl
push
cmp
xchg
adc
xchg
pop
daa
adc
loope
lock
lea
lcall
ret
pop
and
les
notb
jecxz
push
fistl
jnp
push
adc
mov
jbe
outsb
into
add
sbb
cwtl
mov
icebp
pop
sbb
repnz
ficoml
inc
mov
jecxz
in
mov
sarb
add
fstp
in
jg
inc
jmp
dec
xor
popa
xchg
lds
mov
in
xchg
test
jg
imul
sub
and
popf
push
mov
dec
cmpsb
bound
faddl
cmpsl
les
stos
jb
shrb
xchg
enter
xchg
dec
jge
sbb
dec
push
pop
sub
pop
xor
into
fiaddl
inc
add
jp
icebp
popf
aad
mov
and
xchg
inc
test
cmp
xchg
mov
mov
scas
push
movsl
nop
bound
adc
jno
mov
loop
and
and
fs
fsubl
add
push
ret
push
flds
shlb
sti
scas
outsl
cmp
ljmp
sbb
cli
cmp
icebp
push
es
cmp
jo
lds
fstps
in
and
dec
sbb
cltd
adc
cli
add
push
inc
adc
daa
push
lret
sarl
sub
jmp
cli
mov
scas
out
lcall
popa
stos
mov
push
sbb
adc
xor
or
pop
loop
cmc
cmp
in
push
xor
sub
lret
inc
pop
xchg
stc
lcall
xchg
leave
loope
mov
movsb
xchg
cmc
das
ret
das
cltd
stos
scas
ds
sub
cmp
mov
iret
xchg
xor
add
inc
mov
into
repz
call
lods
testl
btr
push
outsl
enter
xchg
aaa
adc
aaa
fldz
mov
imul
adc
ja
sbb
inc
rcr
add
xchg
sub
loopne
push
mov
pop
ret
cmp
push
inc
mov
adc
js
out
mov
in
stc
dec
adc
pop
fldt
addb
aaa
inc
pusha
inc
pop
mov
mov
mov
adc
jno
mov
lret
mov
mov
int3
fwait
shrb
outsl
xchg
sbb
cmp
stos
and
movsb
xor
pop
and
add
xchg
ret
jg
mov
loopne
sbb
sarb
mov
fs
inc
cmp
dec
cmp
mov
xor
jle
outsb
fsubrl
std
pop
leave
pop
dec
pop
stos
pushl
sub
adc
sbb
lahf
add
jl
cltd
stc
mov
loop
outsl
mov
mov
cld
inc
iret
in
insl
outsb
test
jae
mul
push
push
into
push
iret
inc
adc
pop
push
adc
pop
push
cwtl
jge
std
les
sub
cmpsb
movsl
push
adc
sahf
inc
pop
add
adc
mov
jle
jo
cmp
sub
push
rcll
jnp
in
fsubl
jg
aaa
popa
push
xor
push
mov
or
fldenv
push
dec
shrb
mov
jg
or
push
push
sub
sub
packssdw
dec
sahf
mov
xlat
fidivrl
cli
icebp
mov
push
roll
push
call
pushf
icebp
or
es
movsb
and
xor
stc
pxor
inc
or
test
lds
rcl
and
call
add
ret
fdivl
out
pop
addr16
test
fsubrs
cwtl
negb
cli
sub
sbb
jno
push
pop
cwtl
jg
sbb
jmp
cmpsl
scas
fiadds
xchg
inc
les
mov
mov
test
jl
cmp
loope
push
and
cmp
inc
inc
jmp
jns
call
push
push
in
inc
or
addr16
sub
lahf
jno
sbb
mov
fdivp
sti
xchg
mov
outsb
cmp
es
popf
inc
push
in
sub
outsb
test
lods
sarl
sbb
inc
aam
in
or
std
icebp
testb
mov
or
fadds
jecxz
mov
lret
data16
xor
ds
lea
scas
cmpsl
leave
pop
rol
inc
dec
pop
lds
push
call
cltd
dec
push
popa
pushf
push
xor
mov
sub
std
adc
inc
xchg
sbb
in
aaa
data16
dec
xchg
or
in
popa
popf
dec
mov
jp
or
in
push
lcall
outsl
jp
push
dec
mov
mov
push
pop
sbb
jge
add
mov
xchg
loopne
mov
pop
in
mov
and
push
fimull
dec
jmp
mulb
xchg
in
imul
ret
push
pop
add
xor
rolb
push
cltd
jp
add
dec
lahf
mov
cmp
mov
mov
xor
jnp
negl
int
in
stos
jbe
popa
sub
or
dec
mov
aam
je
cmp
mov
xchg
dec
mov
filds
cmpsl
outsb
cmp
enter
dec
sub
cltd
sbb
cli
cmp
pop
daa
hlt
pop
cmp
sbb
popa
jae
dec
mov
test
insl
dec
stos
or
push
das
jo
jmp
sub
mov
fcompl
fildll
cmp
add
lahf
pop
fsts
jne
and
xlat
and
in
add
sbb
fcomi
cmc
cmp
lea
and
cltd
or
icebp
lcall
pop
insb
loope
fwait
movsb
jne
push
out
popf
pop
lret
pop
ja
add
cltd
scas
xchg
dec
jne
dec
gs
ljmp
inc
push
sbb
std
stos
jmp
adc
jp
lock
ds
ret
jae
scas
dec
sbb
mov
xor
das
sbb
add
lahf
fistpll
cmpl
pusha
mov
mov
xor
mov
cmp
jns
fldcw
jecxz
jo
push
pop
cs
adc
xor
jb
adc
push
inc
xor
xchg
arpl
ja
xchg
mov
cmp
push
test
fidivs
cmpsb
int
jns
mov
dec
or
pop
xor
dec
mov
adc
push
lret
ret
sbb
pop
into
in
lds
out
mov
mov
xchg
outsb
je
lcall
jo
pop
int
test
xor
xor
adc
adc
nop
xchg
cmp
pop
stos
insb
jns
ja
push
repnz
mov
inc
sub
and
insl
inc
sub
out
cmpsb
cld
orl
mov
das
rol
notb
add
scas
loopne
fiadds
dec
icebp
mov
fsubs
cmpsb
mov
icebp
gs
insl
imul
lret
push
cmp
aam
cwtl
or
or
add
or
dec
stos
nop
jns
pop
imul
aaa
lds
adc
stos
push
push
sbb
cwtl
fadds
jbe
loopne
cmp
aas
mov
dec
popw
sahf
adc
mov
mov
push
mov
cmp
push
stos
mov
jbe
insl
mov
test
out
sub
imul
mov
cmpb
movsb
push
movsb
jmp
nop
adc
mov
lods
repz
add
xchg
or
fcoml
cmp
dec
scas
stos
and
sub
mov
fidivrs
cld
insb
mov
mov
jge
loop
std
outsb
rcll
or
icebp
or
cld
xor
add
icebp
mov
leave
xchg
int
std
mov
mov
add
jb
inc
push
pop
lahf
ljmp
jecxz
js
imulb
pop
jns
ljmp
xor
and
cmp
decb
push
or
les
nop
popa
inc
xchg
popa
jns
mov
pop
loopne
mov
nop
mov
cltd
flds
in
sbb
cwtl
inc
mov
jne
sbbb
in
pop
xchg
xchg
cmp
xchg
scas
loop
inc
add
aad
cld
xchg
push
loope
js
and
dec
inc
sub
inc
sahf
dec
mov
arpl
adc
push
popa
mov
mov
sbb
sub
pop
stos
sar
mov
loope
xlat
call
ja
mov
loope
pop
and
inc
push
aad
pop
mov
adc
add
jb
inc
pop
shl
pop
cmc
mov
lcall
mov
sti
mov
dec
pop
sub
sahf
mov
sbb
push
adc
outsl
mov
mov
add
push
or
std
inc
dec
lahf
xchg
pop
dec
xor
out
les
movsl
outsb
stc
xor
jg
push
lock
xchg
mov
inc
mov
iret
fdiv
mov
test
mov
jae
mov
loop
xor
scas
xchg
jbe
add
in
pushf
bound
aas
and
sub
dec
mov
rorb
sbb
inc
xor
push
rcll
ds
adc
mov
jnp
rorb
mov
jmp
mov
sbb
cmpsl
sub
inc
pop
jp
into
push
fs
jnp
sbb
nop
sbb
push
lds
xor
jbe
sbb
inc
sbb
std
lea
mov
sbb
loope
sbb
adc
into
mov
push
inc
repnz
adc
add
fmulp
push
push
add
xor
jne
rcrb
jne
test
movhps
push
and
xchg
mov
jb
adc
cli
fadds
js
mov
fnstsw
dec
mov
and
sbb
test
cwtl
fs
jmp
xchg
xchg
dec
add
or
pushf
push
push
xor
dec
rorl
clc
jge
hlt
mov
jmp
daa
leave
xchg
inc
fs
push
sarl
icebp
push
dec
fidivl
mov
out
pushl
and
mov
call
fisubl
xchg
popf
or
sbb
pop
adc
scas
mov
popf
pop
dec
int
add
sub
ss
scas
mov
into
sarb
adc
ja
inc
nop
sahf
sub
ficoms
xor
mov
push
and
and
pop
mov
or
data16
jns
cmpsb
out
add
jne
xchg
adc
icebp
aad
jnp
outsl
cwtl
cmpsb
mov
fcmovnbe
xor
cmp
mov
bound
pop
or
push
iret
mov
cmc
mov
fsubr
sti
xchg
mov
push
mov
lret
andb
jp
pop
xor
adc
sbb
test
mov
icebp
inc
push
je
mov
jecxz
mov
mov
jo
lcall
push
ljmp
mov
xchg
mov
cs
sub
adc
adc
sarb
pop
mov
mov
and
sarl
iret
mov
push
inc
push
mov
jne
cmp
adc
insl
out
rolb
lret
jmp
inc
sbb
xor
and
lods
mov
add
dec
jecxz
cmp
aas
movsl
mov
or
subl
push
push
or
mov
jp
fmull
mov
xchg
adc
call
push
cmp
popa
and
mov
jl
xchg
cmpsb
dec
sub
jns
enter
aad
xor
gs
je
mov
xchg
add
std
lahf
inc
add
daa
xchg
in
insl
adc
outsb
and
test
int3
xchg
pop
xchg
fisubrl
mov
xorb
push
repz
mov
out
add
push
pop
sub
out
xchg
sub
orl
xchg
enter
outsl
arpl
pop
iret
adc
mov
scas
dec
test
shrb
lea
insb
inc
xor
js
add
mov
xor
lods
xchg
sbb
andb
fcoms
test
cld
or
fistl
ss
call
inc
dec
je
out
mov
cmp
stos
ss
jg
sahf
leave
mov
js
out
and
inc
lret
cli
shr
daa
push
test
and
cmpl
xor
loopne
out
mov
cmp
lods
fdivp
stos
in
mov
bound
pop
mov
es
push
loope
inc
jae
sbb
aas
call
or
fisubrs
sahf
sub
mov
clc
notl
adc
in
scas
jmp
ds
push
pop
cmp
sub
and
pushf
inc
sarl
mov
iret
aad
and
imul
test
or
imul
outsl
pop
jae
xor
mov
inc
mov
es
jb
xor
mov
sub
jle
push
pop
loop
pushf
test
cwtl
cmp
pop
imul
fdivs
jno
jb
movsb
xchg
test
sub
dec
add
xchg
sarb
jecxz
xchg
and
popf
and
jno
mov
stos
cwtl
pop
daa
jo
sti
xchg
dec
bound
dec
insb
rcrl
adc
imul
pop
cmp
lods
repnz
mov
sbb
inc
mov
mov
insb
cmp
popa
cmp
mov
mov
lret
aad
xor
inc
out
mov
jp
scas
adc
sti
add
adc
test
mov
pop
cmpl
xchg
negb
into
jnp
pop
pop
jmp
jg
jae
bound
movsb
mov
add
ret
test
sub
loope
jno
push
push
and
popf
rcrl
add
bound
inc
dec
testb
hlt
mov
rcll
inc
push
les
add
xor
mov
stos
ror
cmp
push
mov
pop
imul
scas
mov
inc
pop
inc
xor
paddusb
iret
popf
pop
lock
call
mov
pop
jmp
cmp
or
inc
sub
loope
je
add
ss
jp
int
and
int
jne
gs
pop
mov
ss
mov
and
pop
mov
mov
jmp
add
inc
ds
add
dec
or
mov
xor
sbb
jmp
pushf
mov
push
jmp
sub
movsl
fcomip
jmp
cmp
jp
xchg
push
push
mov
jae
movsb
fisubs
cmc
add
mov
adc
xor
scas
xorb
or
icebp
movsl
or
push
aas
lret
popf
mov
or
push
mov
lret
das
adc
push
xor
push
jge
call
sub
xchg
cld
leave
je
push
pop
cmp
out
mov
stc
jne
sub
sub
push
xor
push
pushf
std
adc
out
push
mov
xchg
mov
mov
mov
push
xor
pop
or
movups
xor
mov
shll
jnp
cmc
cwtl
adcl
inc
mov
dec
in
add
frstor
out
pop
or
add
and
mov
add
and
push
lcall
push
and
push
lret
push
push
loopne
mov
jo
jne
sti
rcr
cmp
sbb
pop
into
sti
mov
gs
mov
aas
xchg
or
sbb
sub
cs
addr16
jae
mov
testb
mov
roll
cmp
roll
pop
fnstcw
scas
sbb
inc
sub
pushf
pop
xor
adc
fldl
and
mov
gs
add
lret
sub
or
lods
and
push
dec
xchg
push
insb
stc
ret
lods
cli
xor
lahf
cmp
xor
clc
cmp
add
pop
push
test
fimull
cmpb
and
dec
push
xchg
or
sub
pop
lcall
call
sub
pop
jns
mov
pop
dec
sbb
pop
out
mov
dec
cmp
mov
ss
xchg
or
push
ret
lret
lcall
aad
je
mov
add
andb
and
inc
add
arpl
xchg
jb
adc
aad
cwtl
popa
je
pop
jl
cmpsb
pushf
stos
sbb
mov
in
lret
icebp
inc
and
out
push
push
push
or
push
rclb
icebp
shr
xor
fs
inc
mov
dec
enter
scas
push
cmp
jb
inc
sbb
aad
in
stos
xor
jno
push
test
pop
mov
in
xchg
test
or
pop
test
addl
ret
lods
into
mov
push
cmpsl
inc
scas
jmp
or
lds
fdivrl
popf
mov
jb
cmpsb
addr16
push
cs
sti
fwait
imul
mov
adc
sti
aas
pop
in
adc
insb
jecxz
ljmp
pop
jge
fs
std
inc
outsl
xchg
lahf
sub
mov
pop
in
jl
xlat
and
pusha
ds
sar
psadbw
and
adc
scas
fimuls
imul
pop
jl
cmpsl
lock
jae
jmp
and
decb
xchg
clc
cld
in
outsl
adc
xor
ljmp
out
shl
xor
jae
ljmp
push
inc
sbb
mov
into
mov
xchg
mov
cmp
aas
arpl
rorl
or
cli
mov
out
xor
cmp
les
scas
mov
xor
mov
or
or
aam
sbb
ja
jge
test
dec
jecxz
mov
jae
mov
scas
jno,pt
loopne
sub
ret
decb
adc
inc
negb
pop
pushf
push
movsb
xor
sbb
mov
mov
orb
jae
sub
enter
cmp
add
mov
adc
clc
repz
sbb
mov
pop
test
cmc
inc
dec
cmp
out
cs
xor
sbbb
mov
jo
jae
leave
mov
pop
mov
jns
out
roll
xchg
ss
and
cmp
or
sti
sub
insb
push
pop
mov
in
and
xchg
xchg
or
jp
fs
in
push
insb
add
xor
add
scas
adc
adc
mov
xor
subl
pop
mov
aaa
mov
jmp
mov
cwtl
add
mov
xor
leave
sbb
das
mov
into
loop
fsubrs
jnp
adc
hlt
and
mov
and
xchg
cmpsb
scas
pop
jle
dec
icebp
fs
add
stos
mov
fcmovb
hlt
mov
push
ljmp
jns
mov
cmp
cmp
jne
dec
cli
mov
mov
sub
js
pop
ret
mov
negb
cltd
add
jl
popa
inc
xor
cmc
xor
nop
shrb
dec
adc
inc
stc
lret
jge
test
jl
fimuls
dec
movsl
lret
mov
cmp
in
xor
repnz
das
push
test
movsb
jns
fists
xchg
fistpll
int3
mov
or
loop
xchg
test
dec
sti
dec
hlt
push
les
dec
in
jmp
adc
adc
sub
imull
inc
test
xchg
fs
inc
dec
jle
fstpt
ret
inc
testb
ror
push
and
fwait
lret
lock
mov
jmp
scas
fcoms
inc
push
sarb
and
mov
cmp
add
add
adc
xor
xchg
test
shrl
lea
xor
daa
or
dec
pop
pushf
push
js
mov
dec
ret
aas
jle
sbb
aas
xlat
pop
loope
xor
stos
cmp
inc
pop
aad
inc
imul
dec
into
sbb
insl
lea
je
in
jle
out
sub
xor
jg
in
sarb
rcrb
mov
sbb
jnp
sbb
cltd
sub
adc
pop
fidivrl
sbb
and
lcall
push
add
bound
aas
adc
shlb
sub
add
lahf
xor
dec
jp
cli
xchg
mov
add
sahf
bound
idivb
jbe
pushf
jnp
pusha
aas
mov
loop
lock
fnstcw
mov
addr16
and
js
daa
ljmp
sbb
xor
call
jo
hlt
jbe
cmp
lret
mov
mov
icebp
fdivl
leave
les
outsb
push
mov
popf
rorb
jge
scas
cmpsb
mov
outsl
mov
loopne
add
dec
jbe
ljmp
mov
jle
pop
cmp
lahf
stos
inc
jle
xor
in
mov
xorb
ljmp
cmpsb
and
inc
lea
in
lods
jnp
pop
std
jbe
je
sbb
mov
icebp
xchg
testl
pop
dec
outsl
push
xchg
lock
cwtl
inc
push
push
xorb
mov
xor
aad
push
aas
xchg
sub
sti
imul
rorb
insb
fucomp
fs
test
in
xchg
pusha
repz
mov
js
xchg
or
xchg
mov
call
shrb
add
test
outsl
dec
and
in
jg
mov
cmp
mov
je
inc
add
add
or
popf
mov
test
pusha
jecxz
add
cmp
adc
add
scas
xchg
jae
inc
incb
subl
psubd
and
inc
inc
cmp
xorb
adc
xchg
xchg
icebp
sahf
push
aam
andb
in
or
mov
mov
aaa
and
mov
fmull
mov
mov
and
dec
in
lahf
out
popa
mov
sbb
jmp
in
xor
or
je
sahf
pop
cwtl
gs
popa
fnclex
popa
mov
jno
aas
mov
arpl
stos
imul
jns
adc
add
pushf
push
loop
mov
imul
sub
mov
mov
push
int
ljmp
insl
sar
jg
addb
outsb
sbb
pop
jg
push
shrb
hlt
jge
jns
mov
inc
push
cmp
xchg
mov
dec
mov
inc
add
push
lods
aad
xchg
sub
cmpsl
std
ror
cmp
xor
lock
cmpsl
lahf
ljmp
aad
or
pop
push
jmp
cmp
jl
nop
mov
icebp
jle
in
lea
adc
imul
cmp
or
sahf
fsubs
imul
mov
push
mov
ficoml
pop
mov
jmp
inc
adcl
pop
shlb
sti
ja
pop
popa
xlat
popfw
popa
mov
lret
adc
mov
mov
aad
ds
xchg
adc
call
movsb
pop
fidivrs
iret
push
in
push
lahf
minps
cmp
sarl
ljmp
sub
xorb
loop
dec
jmp
loope
push
and
rcr
pop
aas
fidivs
sbb
das
addr16
ret
pushf
insb
mov
cmp
sub
test
gs
shl
jns
cmp
mov
and
jp
sbb
jge
sub
mov
std
aam
inc
gs
das
xchg
repnz
mov
mov
jl
incl
xlat
les
mov
call
shrb
mov
test
shrb
sarl
mov
jno
add
scas
jb
cmpsb
mov
test
pop
sti
cli
mov
push
and
inc
push
cwtl
push
out
push
pop
inc
les
test
lcall
out
dec
jne
loop
dec
mov
xchg
or
add
shl
pop
xchg
sub
je
pushf
ret
out
inc
lret
cwtl
popf
inc
mov
ja
lcall
loopne
xor
lea
xor
cmp
das
cld
cmpsb
sbb
lea
lahf
pusha
mov
std
mov
test
test
cmp
shlb
mov
imul
jno
sbb
inc
aad
rclb
sbbb
out
flds
in
std
lods
xchg
mov
pop
sub
xor
lcall
or
lock
mov
push
ds
xor
mov
loop
or
fwait
push
insl
ficompl
stos
mov
xchg
jnp
inc
xor
mov
fnstsw
bnd
lods
js
cmc
jbe
lea
out
loope
test
or
dec
sahf
and
mov
sbb
mov
sub
xor
es
mov
inc
insb
cmp
outsl
or
inc
mov
ds
flds
jbe
das
inc
fs
cmc
cmp
or
nop
mov
loopne
repz
andb
push
pop
xor
push
out
mov
pop
orl
icebp
mov
cmpsl
sub
xor
jae
mov
mov
push
push
sub
mov
sub
inc
adc
mov
repnz
and
mov
xlat
jg
pop
xchg
and
sub
sub
push
arpl
push
out
pop
popa
push
jne
lock
or
sti
lods
sbb
xchg
dec
pop
sub
cmpsl
jecxz
add
popa
pop
fildl
mov
movsl
push
adc
rcr
je
popa
pop
pop
cmp
mov
push
sahf
imul
sub
jb
push
or
and
pop
aam
jecxz
daa
add
xchg
pop
int
cs
data16
inc
mov
and
sub
adc
xchg
jb
movsb
dec
push
lret
cwtl
mov
in
pusha
stos
cmpsb
inc
push
sub
cltd
pop
jae
insl
dec
aam
sub
xchg
imull
adc
cwtl
daa
sub
sbb
ja
dec
lock
lcall
inc
inc
push
out
jnp
mov
adc
into
fidivs
mov
cmp
bound
cmp
add
jb
jl
imul
outsb
push
enter
mov
and
push
push
outsb
inc
aam
sarb
ret
adc
or
movsb
push
jmp
scas
icebp
or
mov
leave
aaa
sub
push
in
push
and
sub
vmovhps
xor
pop
lods
xorl
jge,pn
xor
sti
xchg
fists
adc
loop
stos
jns
jns
inc
leave
mov
imull
or
xchg
repz
fidivl
cmp
mov
cmp
in
sahf
cmp
and
mov
ror
fstps
xor
push
icebp
sahf
add
inc
add
loope
jae
mov
cmpsl
negl
cltd
fiadds
pop
rorb
pop
imul
fcoms
mov
and
dec
out
xorl
jae
push
cwtl
neg
push
add
xchg
mov
sbb
inc
addb
outsb
fadds
xlat
test
ror
ds
data16
in
in
mov
jbe
nop
in
pop
sub
dec
push
dec
imul
outsl
xchg
add
outsb
jae
push
outsb
loopne
iret
sahf
enter
scas
mov
or
mov
xchg
shrl
or
mov
adc
mov
mov
sahf
and
adc
jae
pop
sub
fsubs
cmp
in
and
pop
popa
sub
xor
adc
jne
push
mov
shlb
xorb
das
lret
test
int3
jmp
dec
cli
insl
in
in
enter
addr16
add
xchg
sbb
sahf
inc
or
fdivrs
push
in
mov
sbbl
sub
cmp
mov
enter
push
and
inc
mov
xchg
cs
xlat
pop
inc
call
xchg
cmp
aaa
sub
pop
hlt
add
inc
jmp
push
es
mov
lds
push
subl
and
sahf
and
cmp
cld
cmpsb
lods
mov
jno
jns
cltd
test
xor
fcoms
dec
sbb
outsl
subb
pusha
mov
dec
sbb
pop
arpl
ss
jo
addr16
push
pop
inc
repz
and
or
loopne
repz
cli
nop
mov
ja
mov
outsl
call
add
jo
dec
xchg
inc
lret
jne
push
fisubrl
cwtl
js
dec
fsub
and
fwait
call
insl
inc
data16
aas
sbb
sub
cmc
pop
aaa
xlat
push
clc
xor
xchg
repnz
std
push
shrb
sbb
dec
push
sub
add
dec
gs
xor
sub
out
mov
dec
fmuls
cmp
sub
sub
ss
jl
adc
mwait
pop
and
mov
and
mov
andl
or
ljmp
sub
pop
pop
vshufps
stc
into
push
dec
roll
out
pop
cmp
decb
pop
mulb
mov
call
inc
stc
imul
mov
mov
pop
push
es
inc
pop
orl
fldt
lahf
jne
outsb
ja
leave
outsb
test
aaa
les
jge
repz
lods
xchg
jo
mov
xchg
iret
daa
insl
movsl
in
imul
vpsrad
ret
out
icebp
loop
shlb
ret
ret
jmp
lcall
adc
mov
cmpsl
push
adc
stos
or
push
dec
xor
mov
and
fildl
ljmp
cmp
aas
and
sbb
sbb
inc
dec
fs
dec
pop
ret
dec
pushf
mov
pop
out
jns
mov
fldl
and
nop
inc
in
mov
lcall
lret
or
daa
mov
out
aas
fcoml
mov
mulb
call
sub
push
mov
int3
adc
es
aam
jmp
jae
xor
mov
movsl
addr16
cs
adc
rcrl
push
pop
int3
addb
in
mov
iret
lret
fstp
out
outsl
cmc
and
lcall
fists
shl
jnp
daa
mov
xor
loope
xor
sahf
testl
shll
outsl
adc
xchg
movsl
add
in
pop
dec
ret
mov
daa
sbb
dec
mov
mov
xor
xchg
arpl
or
push
mov
adc
fs
in
repnz
dec
in
in
setns
push
inc
test
jno
inc
push
add
xlat
addl
enter
ja
cli
push
insl
or
mov
cmp
std
inc
cmp
mov
push
cwtl
in
push
push
mov
dec
gs
pop
movsb
cmp
gs
mov
and
push
fnsave
sub
adc
dec
addr16
sub
pop
xor
sbb
add
mov
adc
or
jbe
sbb
test
and
inc
shl
aam
and
mov
hlt
add
push
lret
jnp
mov
jecxz
push
addl
aad
dec
and
inc
test
inc
test
xlat
int
mov
add
add
lods
enter
test
xor
pop
and
pushf
imul
popa
iret
fs
inc
mov
sbb
add
dec
adcl
out
xlat
popa
adc
add
sub
or
pop
addl
popa
leave
mov
mov
sub
std
jmp
mov
push
repnz
popl
loope
fsubrs
nop
mov
cmp
jmp
popa
loop
and
sbb
sub
jb
lcall
jp
lcall
iret
movsb
pop
je
enter
cli
lea
les
and
sbb
jno
dec
sub
dec
pushf
int3
and
popa
in
test
ret
sbb
repnz
adc
nop
lods
popa
ret
mov
rorb
sub
and
dec
add
push
xchg
sub
xchg
push
pop
ret
dec
sti
push
fsubs
inc
out
push
push
repz
dec
jle
into
cmc
lds
ficompl
jle
xchg
test
ffreep
outsb
pop
dec
cmc
clc
mov
std
jmp
pop
push
dec
push
adc
dec
and
mov
dec
push
cmp
shll
bound
outsl
mov
sub
stos
mulb
cld
mov
fwait
scas
cld
sub
fcoml
loopne
push
push
in
ret
fnclex
out
insb
dec
mov
mov
xor
push
lret
jae
jns
pop
mov
push
adc
test
int3
push
fistpll
lret
dec
xchg
or
sahf
loopne
insb
bound
js
out
fwait
shlb
sbb
icebp
pop
mov
scas
je
jle
fisubrs
mov
imul
insl
xlat
and
mov
fwait
inc
int3
pop
daa
test
outsw
gs
cmp
pusha
aaa
ja
inc
xor
in
hlt
sub
jmp
and
inc
lret
sbb
or
int
and
test
ja
push
push
and
and
cmp
lods
leave
push
call
xchg
mov
inc
sub
mov
cmpsb
out
cltd
pop
out
out
xor
sti
andb
adc
sbb
rcr
shll
add
lcall
je
add
aad
mov
out
push
xor
rol
push
gs
xor
pop
in
xor
adc
xchg
pop
inc
push
dec
add
out
push
dec
pop
test
sbb
sahf
add
es
xlat
stos
adc
popa
sub
lds
jp
hlt
sti
bound
fstpt
cmp
mov
pop
adc
lds
loope
xlat
mov
lods
jb
fisttpll
pop
xchg
ja
or
mov
jg
and
dec
dec
mov
sbb
outsb
dec
test
jl
pop
scas
aas
dec
out
popf
loopne
jmp
xchg
mov
out
or
leave
mov
or
mov
ja
xchg
mov
aam
cmp
data16
mov
adc
imul
test
mov
gs
adc
or
sub
andl
sbb
adc
pop
jecxz
xchg
mov
sbb
cmc
dec
dec
xchg
ret
shll
arpl
sbb
dec
outsl
dec
std
cmpl
jecxz
pop
fmuls
mov
sbb
rcrb
ss
inc
pop
iret
repz
sbb
ds
dec
lcall
cli
pusha
loopne
xchg
lods
push
mov
test
sbb
cmc
mov
fistl
imul
adc
std
adc
lods
rclb
into
adc
rol
sub
cld
inc
rclb
mov
sbb
and
and
or
shlb
fs
aas
movsl
mov
iret
inc
outsl
dec
insl
jbe
ss
or
sbb
push
sar
add
arpl
sub
mov
ss
push
shlb
mov
in
pop
mov
iret
jmp
iret
xor
sti
mov
je
call
and
pop
pop
ss
add
movsl
mov
cmp
out
sub
pop
pop
aas
pop
dec
pcmpeqw
add
jb
dec
repz
cmp
adc
sbb
mov
mov
sahf
cmpsb
addl
lret
xlat
xchg
lods
dec
pusha
push
xor
aas
dec
popa
mov
jns
jge
aas
pop
inc
cmp
frstor
bound
je
cs
mov
sbb
adcl
repz
cltd
dec
jp
loopne
mov
pop
int3
xor
enter
rcrb
mov
ret
pop
pop
jmp
adc
out
loop
inc
push
cmpsb
jbe
mov
adc
lock
dec
stos
insl
fcomp
int
mov
sti
out
push
push
push
mov
cmpsb
mov
cmc
pop
add
sbb
je
icebp
dec
pop
arpl
fisubl
sub
cmpb
ljmp
add
test
jmp
pop
pusha
and
dec
mov
mull
sub
push
cmp
in
inc
insl
das
and
arpl
xchg
inc
xchg
jmp
stos
dec
xor
fildll
out
xor
mov
ss
les
je
push
push
dec
hlt
sub
cmp
aas
or
loopne
out
mov
xchg
push
movsl
ret
mov
cld
or
push
dec
jne
and
in
nop
outsb
dec
aad
jge
inc
es
popa
lret
in
xor
xlat
aaa
add
rorb
or
or
sbb
and
hlt
fdivrl
jo
jns
hlt
cld
mov
out
in
imul
in
ss
xchg
cli
and
insl
mov
enter
ret
mov
movq
arpl
es
fsubs
je
aas
das
in
sbb
cld
push
sub
pop
and
repnz
loop
repz
xor
rorb
clc
fmull
mov
test
ss
stc
test
push
add
ljmp
jo
sub
add
cmpsl
add
dec
and
mov
mov
repnz
mov
inc
xchg
imul
dec
push
sbb
cmpsb
dec
loope
sbbl
jae
mov
fmuls
fsub
nop
mov
cltd
cmp
arpl
rep
lea
inc
mov
xchg
icebp
int
mov
outsb
add
lods
fisubs
nop
inc
push
outsl
stc
mov
pop
cli
fimull
pop
pop
xchg
inc
adc
add
lahf
pop
inc
inc
jle
adc
sub
negl
ljmp
mov
lcall
lret
popf
ret
jg
cld
inc
fdivrs
enter
lcall
lret
out
push
jnp
xor
int3
push
in
lretw
shr
es
cmpsl
fstpl
lahf
sub
lahf
pop
push
jbe
adc
cli
xchg
push
sbb
lahf
cmp
data16
test
std
fprem
sub
stos
pop
cmc
jg
stos
inc
dec
mov
ret
stos
adcb
pop
int3
aam
movsb
push
lea
mov
add
in
sub
jg
test
jb
lods
cli
or
adc
sub
push
loop
or
in
call
xchg
or
add
mov
icebp
leave
sbb
fwait
bound
aam
test
inc
xor
fs
sbb
and
mov
sahf
xor
nop
stos
cmp
pusha
fwait
mov
xchg
mov
negl
iret
sti
hlt
cmp
das
or
push
in
mov
mov
rol
adc
das
scas
jmp
add
mov
and
jp
xor
rcrl
jle
ljmp
xor
test
or
fcomi
in
add
mov
mov
and
ljmp
adc
sbb
insl
push
or
mov
subb
xlat
inc
andl
rcr
test
xor
orl
aaa
sbb
out
movsb
or
adc
out
dec
rorb
scas
out
adc
jp
clc
or
pop
lods
xor
cmpsb
fistps
pop
inc
and
mov
cld
adc
mov
andl
aas
xchg
xor
xchg
popa
popa
enter
fdivrs
sub
inc
sbb
jl
fnstcw
and
push
sub
fistpl
aad
inc
cmp
je
mov
or
repnz
daa
lock
push
inc
dec
or
inc
lods
jle
cmc
sub
mov
nop
mov
cmp
lock
add
add
rolb
pop
adc
and
ljmp
int
pop
jne
xor
repnz
stc
xor
sub
sarb
bnd
xchg
clc
in
xchg
and
xchg
mov
testb
sbb
ror
jle
lock
scas
shrl
mov
push
mov
test
out
xchg
xchg
or
inc
rorl
sbbb
cmp
lea
in
and
cmp
pop
xorb
sub
or
stos
pop
sub
ss
aaa
xchg
push
outsb
jle
inc
pop
jp
mov
insl
dec
sbb
xchg
insb
and
ds
dec
imul
cmp
adc
sub
out
xor
shll
mov
inc
cmp
orl
push
add
ljmp
push
mov
push
mov
mov
mov
cs
fisubl
add
addr16
push
push
es
cmp
jae
mov
mov
push
xor
inc
subl
jo
sbbl
out
mov
cmp
sub
cmpl
fstpt
ret
call
cwtl
sub
mov
ja
sub
repz
cli
cmp
xor
adc
cmp
pop
cld
imul
hlt
das
shlb
mov
mov
clc
imul
pop
cmpsb
jne
outsb
or
push
pop
aas
push
stc
hlt
imul
in
sbb
cmpsb
int
iret
push
sbb
testl
stos
sahf
push
stos
stc
xchg
xchg
mov
sbb
pop
and
mov
adc
pop
sbb
mov
mov
hlt
lea
jno
cs
loope
xchg
sub
out
mov
cmpsl
pop
imul
jns
mov
dec
icebp
je
dec
xchg
ljmp
mov
xchg
push
pop
pop
loop
outsl
loope
mov
lea
inc
xchg
clc
arpl
pop
sub
imul
jnp
push
add
test
pop
cmp
push
mov
cmp
mov
xchg
sarb
xchg
lods
out
sub
imul
cmc
mov
in
mov
aad
lods
vmovaps
cmpsl
ret
adc
pcmpgtb
dec
cltd
pop
lcall
fidivrl
daa
sub
ret
mov
cltd
xor
add
ss
and
sub
cmpb
imul
fistps
mov
and
push
std
stos
js
scas
xchg
fcomi
data16
out
lods
mov
dec
repz
repz
loop
arpl
lahf
inc
mov
test
fbld
xchg
or
push
movsb
mov
mov
hlt
fs
jne
pop
xchg
icebp
aas
leave
fwait
mov
les
aas
in
mov
test
clc
sub
inc
fucomp
fisubl
nop
push
mov
mov
gs
lret
imul
repnz
pop
mov
addb
mov
mov
jp
popa
mov
push
pusha
es
sbb
shr
les
xchg
dec
jmp
sarb
mov
jmp
or
cmp
inc
or
jno
clc
cltd
add
sahf
sarb
mov
leave
aaa
cmp
dec
pop
add
dec
sub
lret
push
enter
mov
cmpsb
jge
sub
std
lret
fwait
shll
push
rol
gs
out
push
cs
fwait
pop
ljmp
fcomps
pop
dec
pop
adc
pop
ficomps
fdivp
std
lret
dec
add
cmp
and
pop
sbb
movsl
dec
xor
dec
cmp
cmp
xor
pop
inc
ds
imul
cwtl
jecxz
sub
xchg
push
fdivp
adc
adcl
mov
ljmp
jne
es
push
cwtl
ret
pop
addr16
cmp
dec
jecxz
hlt
lret
lds
repz
fcoms
ja
ds
cmp
push
xchg
mov
xchg
xor
add
sub
jmp
add
stos
js
hlt
out
mov
incb
scas
dec
mov
jnp
inc
mov
ljmp
mov
nop
cltd
pop
mov
stc
push
cmp
and
div
leave
int3
mov
fs
arpl
test
mov
xchg
cmp
rcrb
popf
sbb
xchg
insb
jb
int
je
sbb
inc
dec
out
popf
and
popf
mov
add
or
out
xor
sub
mov
xchg
lahf
sbb
ficoml
scas
dec
stc
push
inc
lcall
subl
cmp
sarl
aas
stos
cmp
ficoml
adc
jns
in
xor
add
rorw
ds
daa
fs
test
jmp
cmp
jae
xchg
rolb
stos
movsl
icebp
repnz
and
fwait
ss
pop
cmp
or
es
seto
push
test
push
pop
pop
pop
mov
xchg
or
iret
loope
mov
add
xchg
mov
dec
mov
xor
xor
xorl
outsl
mov
or
add
ret
inc
pop
lds
sub
fucomp
mov
jo
inc
cs
test
mov
push
bound
cmc
sub
and
push
adc
mov
pop
add
xchg
add
icebp
xchg
dec
and
adc
test
je
mov
jge
outsb
movsb
test
cwtl
mov
pop
xor
mov
pop
mov
in
lods
push
mov
stos
xor
test
inc
mov
mov
xchg
daa
add
in
cmp
aad
pop
scas
inc
or
sbb
test
idivb
leave
inc
sahf
arpl
add
adc
adc
or
xchg
out
push
ror
xor
cmp
push
pop
pusha
insb
shrb
cmp
xchg
mov
inc
pop
mov
jne
push
and
xchg
movsl
pop
outsb
in
pusha
mov
popa
dec
add
mov
sbb
cmp
push
gs
iret
popf
ret
loopne
push
ljmp
push
xor
and
loopne
push
push
popf
push
mov
push
clc
popf
sahf
xor
aas
out
adc
pop
mov
inc
pop
push
insl
or
fstps
les
dec
push
dec
movsb
test
fmull
lahf
scas
mov
subb
aam
dec
pop
sub
pop
mov
sub
pop
mov
in
ljmp
stos
filds
cltd
sbb
loop
jo
ficoms
push
mov
int
lods
and
jae
xor
adc
cltd
add
shll
sbb
adc
pop
and
sbb
mov
lods
addl
jns
lea
dec
adcl
xchg
sbb
fndisi(8087
rolb
pop
inc
lret
xchg
mov
mov
mov
cmpsl
mov
ds
out
or
sbb
lcall
xor
cli
mov
outsb
aaa
and
xchg
inc
cmc
imul
inc
or
mov
sub
lcall
dec
sahf
pop
xor
cwtl
test
push
addr16
outsb
xchg
cmpsb
or
roll
jb
out
mov
jne
loope
xlat
mov
xchg
icebp
sub
fcoml
jge
push
mov
cmp
test
xchg
jle
add
shll
lcall
fucom
out
xchg
out
shrb
add
mov
mov
js
inc
dec
in
mov
mov
mov
loopne
cmc
jmp
jge
and
rcll
mov
fwait
mov
inc
inc
xor
push
pop
lahf
xor
shl
mov
and
seto
dec
pop
and
mov
mov
dec
mov
mov
sbb
test
enter
loop
pop
fcomi
xchg
cmc
sbb
dec
and
mov
les
ret
jne
les
sub
adc
insl
cli
mov
push
fstpl
ljmp
jmp
adc
jo
mov
push
xchg
xor
fs
adc
xchg
and
nop
addb
xor
mov
dec
mov
jle
push
cwtl
rolb
in
icebp
push
push
outsl
push
cmp
pop
popa
test
outsl
lds
test
or
test
into
pop
dec
int3
lret
into
lea
into
push
jo
xor
and
cmp
pop
jmp
leave
cmc
lods
lret
sbb
sbb
arpl
test
inc
nopl
icebp
js
mov
and
ficoms
fcmovnbe
cmp
and
lcall
xchg
and
pop
movsl
adc
inc
adc
icebp
mov
lock
jb
insl
lods
jno
icebp
scas
icebp
xor
ljmp
inc
mov
out
ja
mov
dec
xchg
mov
scas
inc
adc
cmp
nop
pusha
mov
jecxz
ret
aad
cmpsl
pop
jmp
shl
int3
xorl
mov
jne
adc
jne
dec
call
and
jbe
daa
jno
mov
leave
xrelease
in
mov
xchg
cmp
inc
nop
das
enter
fiadds
and
dec
fnstenv
push
or
stos
cld
mov
data16
mov
pusha
sbb
loopne
fstp
sarb
popa
hlt
add
outsb
cmpsl
das
xchg
test
loope
xchg
cmp
xor
in
push
arpl
jmp
lea
inc
sbb
mov
lods
scas
les
inc
cs
sbbb
mov
stos
mov
mov
pop
bound
cmp
stc
sub
notb
mov
jp
lock
inc
out
or
aas
data16
pop
sub
movsb
pop
and
inc
sbb
jl
popf
adc
and
fadd
jmp
adc
fcmovu
aam
mov
inc
and
jo
jle
adc
ds
outsb
subl
adc
inc
test
jno
ret
cmpb
rcl
mov
sarb
outsl
call
and
pop
enter
fcomip
add
lods
mov
es
decb
mov
mov
test
sub
and
fsub
xor
mul
adc
cmp
dec
add
loop
push
int
dec
push
pop
das
pushf
inc
jnp
clc
xchg
dec
pop
cmp
pushl
mov
loop
and
stc
scas
lcall
xor
inc
aad
mov
pop
push
loop
jecxz
or
lods
hlt
push
das
imul
pop
push
loope
cmpsb
and
push
fimuls
out
std
fsts
shl
pop
or
add
pop
xchg
or
and
push
inc
push
stos
add
fwait
stc
jle
mov
dec
std
lahf
mov
pop
lods
mov
clc
fcomps
cmc
lock
test
rcr
mov
pop
sub
jle
xchg
mov
xor
dec
add
push
mov
cwtl
enter
dec
mov
inc
fidivl
cmpsl
mov
test
jp
cmp
mov
dec
jmp
sar
dec
mov
or
push
in
in
inc
mov
jle
enter
cwtl
daa
sbb
outsb
stos
out
aaa
shrb
in
ret
call
in
jnp
xor
mov
mov
xchg
out
push
mov
push
inc
add
dec
loopne
mov
sbb
test
cmp
frndint
cmp
add
in
stos
xor
add
sub
inc
scas
dec
inc
mov
scas
and
sub
loop
jo
xchg
ljmp
rclb
ja
pop
loopne
or
push
mov
in
mov
mov
test
bound
mov
jle
add
iret
dec
mulb
lret
and
scas
inc
popa
mov
push
sbbl
inc
mov
xchg
cmp
outsb
dec
push
aaa
push
push
sub
push
xor
sub
push
repnz
jns
fscale
sbb
cmp
out
xchg
inc
mov
lods
adc
jecxz
inc
jp
or
cmpsb
stos
jg
cmp
roll
pop
sbb
ss
pop
cmp
xor
xor
jbe
mov
push
loope
push
popa
cmp
jp
jmp
imul
cmpsb
mov
xor
or
test
and
push
mov
imul
lcall
xchg
xchg
imul
add
cmpsb
xrelease
inc
mov
imul
daa
cmp
pushf
in
lret
shl
mov
sbb
lahf
ds
sub
jg
fs
dec
das
xchg
dec
fstl
adc
pop
add
adc
add
lret
push
lods
fimull
inc
movsb
sub
lock
jno
mov
lea
inc
fisubrs
xchg
xor
ret
mov
or
dec
in
stc
int3
xchg
subb
loop
cmp
aas
cmp
fadds
cltd
and
mov
lcall
pop
icebp
mov
mov
cmc
xchg
push
mov
dec
mov
je
loopne
xor
jae
pop
movsl
jb
adc
jmp
adc
adc
xchg
inc
mov
cs
test
mov
shl
std
loop
cmp
lds
jp
icebp
dec
cmpsb
fldenv
push
sub
cmp
popf
mov
out
or
push
pop
adc
jo
xchg
test
scas
cmp
mov
ds
popf
push
mov
je
xchg
xchg
testb
jmp
jp
lock
add
bound
stc
test
gs
gs
stos
pusha
mov
jo
inc
cwtl
xchg
sbb
leave
shr
loopne
out
mov
cmp
jg
dec
stc
cltd
ret
popa
push
cmpl
adc
pop
test
pop
aad
jno
mov
inc
xor
lcall
and
inc
adc
jne
mov
hlt
add
mov
adc
stos
or
and
sub
cwtl
lock
push
sbb
ljmp
aaa
inc
sahf
cwtl
fadd
push
dec
call
or
pop
les
out
or
aas
fists
inc
aad
je
add
pop
insb
rcrb
jne
cmp
and
adcl
cmp
sub
loope
in
lret
mov
pop
push
mov
jmp
dec
aaa
sub
mov
aad
adcb
lods
mov
inc
and
mov
jb
adc
lar
xchg
in
gs
sub
add
sbb
xchg
loope
int3
cmp
pop
sub
sti
gs
jmp
adc
retw
xor
hlt
add
dec
cmp
xchg
daa
in
aad
out
adc
jle
dec
rcrb
mov
movsl
sbb
shl
or
push
repnz
sbb
stc
xor
call
xor
mov
out
dec
adc
xchg
icebp
push
mov
pop
test
rol
mov
setg
adc
or
clc
in
pop
cmp
outsl
loop
inc
loope
rclb
jne
testb
push
xchg
mov
incb
loop
int
xor
pusha
jns
cmp
into
or
mov
pop
adc
push
dec
xor
push
cmpsl
xchg
xor
add
in
and
ss
pop
out
push
add
outsb
sub
pusha
data16
mov
dec
mov
iret
subb
int
xchg
out
add
xchg
xchg
sbb
test
sub
ljmp
loop
mov
aas
inc
pop
lahf
xchg
or
andl
dec
inc
out
inc
stos
loopne
test
mov
js
mov
outsl
cmp
cld
adc
add
gs
fsub
orl
push
lret
mov
cwtl
dec
mov
out
or
cmp
outsl
mov
rorl
int3
inc
subb
sbb
sbb
repz
incl
mov
daa
mov
pusha
lcall
lds
sub
mov
mov
mov
sbb
fneni(8087
xchg
dec
movsb
jae,pt
mov
sahf
mov
xchg
sbb
stos
pusha
xchg
stos
or
sub
mov
jg
jne
push
mov
jo
inc
and
dec
fisttpl
les
inc
and
push
mov
and
int3
cmp
leave
mov
cmp
jecxz
pop
xor
push
inc
fcom
jae
ret
outsb
or
hlt
repz
jae
sub
mov
jmp
inc
add
add
jecxz
cmpsb
pushf
mov
mov
dec
or
subl
jbe
test
inc
dec
fcmovnb
add
pop
frndint
xor
loope
add
mov
push
dec
repz
pop
sbb
jle
out
adc
cwtl
movsl
or
cwtl
ret
sbb
test
loopne
jecxz
je
sbb
aad
fcomi
out
lcall
stc
mov
hlt
push
inc
sbb
test
mov
mov
leave
outsb
pop
int
sub
jne
mov
adc
jmp
fadd
jmp
pop
jnp
mov
sbb
sbb
xor
mov
rcl
inc
pop
mov
or
loopne
ret
add
movsb
cs
xchg
in
mov
lds
and
lock
xchg
jge
or
shrl
mov
pop
xchg
mov
out
adc
stc
roll
inc
or
and
mov
das
cmp
push
call
pushf
aad
lods
pusha
ja
mov
pop
push
xchg
addr16
pushf
test
jns
mov
sbb
add
and
pop
gs
mov
and
test
nop
or
fisttps
or
push
loope
pop
jno
pop
fs
shr
sarb
push
test
push
adc
pop
dec
fnstsw
lahf
or
lds
dec
xchg
ss
pop
lock
push
dec
andb
sti
dec
inc
or
push
xchg
dec
js
fwait
shrl
shr
pop
call
int
mov
popa
push
popf
mov
and
movsl
mov
or
leave
adcb
movsb
xchg
fdivrl
mov
sbb
pop
jne
fs
pop
aas
out
pop
cmp
mov
jne
shll
fidivs
out
andb
fmuls
out
mov
imul
jp
fxch
mov
push
inc
outsl
or
adc
add
mov
cmp
xlat
pusha
sbb
mov
sub
and
in
hlt
cld
daa
mov
in
adc
cwtl
or
js
dec
out
ret
jbe
sbb
cwtl
adc
daa
lret
push
jge
jecxz,pt
add
cmp
imul
movsb
hlt
xchg
ds
xchg
std
xchg
or
pushf
lcall
or
mov
orb
pop
xchg
mov
mov
enter
fidivrs
xchg
fs
xlat
dec
mov
jecxz
jecxz
aaa
and
add
mov
jae
pop
adc
dec
inc
sahf
fcomps
ja
push
mov
mov
movsb
in
js
repz
dec
xorb
push
xchg
rclb
hlt
or
arpl
pop
push
sub
mov
sbb
inc
outsb
hlt
xor
cld
jb
mov
addr16
push
icebp
shlb
pop
push
fimuls
inc
in
xorb
dec
jbe
cs
jnp
adc
adc
dec
out
frstor
xor
or
ds
jnp
mov
outsl
xchg
pop
repnz
out
and
mov
push
pop
xchg
mov
jae
imul
sub
mov
sbb
call
js
pop
repz
sti
jecxz
add
je
pop
cmp
mov
icebp
int3
in
addr16
or
inc
xorb
cmp
repz
mov
hlt
xor
test
rolb
mov
and
push
outsb
mov
aam
ret
mov
jle
cmpsb
dec
cmpsb
adc
scas
sub
mov
sbb
lret
push
pop
and
adc
fldl
push
fstpt
leave
xor
sahf
and
cwtl
mov
push
test
repnz
xor
sti
js
push
push
std
xchg
or
mov
pop
out
adc
pop
mov
nop
lock
nop
pop
jecxz
lock
sbb
add
xchg
int3
divb
pop
xor
out
mov
mov
inc
aam
out
out
mov
cmpsl
dec
scas
sarl
inc
mov
rcr
xor
or
pop
cmpsl
dec
sub
es
mov
addb
iret
sbb
data16
xor
cmp
test
repz
add
ss
mov
mov
jnp
push
scas
mov
test
daa
aad
mov
pushf
adc
xchg
into
add
jae
sub
pop
add
dec
cwtl
jge
hlt
mov
and
dec
loope
fcmovnu
sti
jb
or
xor
pop
mov
pushf
loop
mov
xchg
pop
jg
and
or
xor
lods
jmp
or
jne
mov
xchg
inc
mov
pushf
inc
add
inc
es
pop
nop
mov
inc
jmp
loope
add
sarb
test
xor
lret
mov
cmp
insb
mov
pop
jg
int
icebp
cwtl
ret
lret
fldenv
add
pop
jno
sbbl
pop
adc
mov
popa
in
xchg
push
add
pusha
test
icebp
push
lods
xor
subl
push
add
sbb
hlt
xor
or
jb
jb
pop
cmc
jmp
scas
idivl
imul
push
les
push
and
insb
pop
add
test
loope
lock
sbb
aad
movsl
mov
jmp
mov
mov
mov
pop
clc
dec
ss
nop
or
mov
lea
add
lahf
loop
mov
mov
sbb
mov
jns
inc
pushf
cmp
xchg
out
xor
mov
call
hlt
dec
xchg
and
test
test
pop
pop
mov
sarl
jns
pop
or
ds
cmp
cmp
or
repnz
dec
or
lcall
addr16
shll
xor
popa
push
cwtl
in
cltd
das
fisttps
inc
cmp
sti
test
push
rcl
test
dec
ret
ss
add
push
addb
cmp
repnz
enter
mov
iret
frstor
inc
aaa
out
adc
dec
stos
pop
cld
call
mov
add
test
bound
daa
daa
sub
into
movsb
jg
out
pop
pushf
jbe
or
xchg
mov
jnp
mov
pop
or
fdivs
add
cmp
jl
pushl
mov
mov
mov
test
mov
pushf
sti
dec
fbstp
xchg
lods
sbb
dec
sub
jmp
insw
mov
ret
xor
jne
add
cmp
lods
cmpsb
dec
or
pop
add
fbld
ds
stc
lret
fwait
les
xor
es
add
cmp
xchg
adc
jb
loope
sbbl
sbb
add
mov
je,pn
int3
loop
fwait
or
push
inc
inc
call
jb
arpl
dec
mov
sbb
mov
pushf
cmp
enter
or
loope
loope
sub
mov
mov
xor
mov
xor
cmp
dec
std
insl
in
test
add
jb
add
arpl
push
das
leave
ja
push
add
fsts
les
add
mov
push
mov
fwait
idivb
std
enter
pop
rolb
dec
pop
dec
in
sub
fsubs
out
jl
mov
mov
cwtl
out
mov
dec
in
cmpsb
push
ljmp
ret
dec
lret
and
aad
rorb
jmp
pusha
push
pop
and
or
icebp
cmc
gs
sbb
sub
mov
fcomps
data16
aad
jbe
adc
jb
data16
mov
add
dec
cs
jle
push
cmpsb
fwait
mov
sub
dec
fcmovnu
adc
iret
stc
or
test
xor
mov
mov
sbb
mov
cmp
xor
cmp
adc
mov
imull
aas
jmp
sub
ret
cs
mov
adc
stc
dec
inc
push
fs
aas
xchg
xor
pusha
rcr
test
mov
repnz
inc
in
into
js
nop
lods
mov
cmp
and
mov
es
mov
jecxz
mov
inc
sub
loope
pusha
push
mov
pop
and
push
ret
lods
mov
mov
dec
ror
push
xor
sbb
jb
enter
sbb
cmp
jecxz
fsts
fwait
jp
inc
push
cld
inc
lock
cmc
fistl
and
dec
mov
sbb
insb
jno
mov
sub
mov
dec
xchg
sbb
xchg
pop
jecxz
xor
pop
sub
outsb
jge
sub
xor
jnp
rol
push
loope
sbb
iret
inc
adc
pop
jae
in
mov
out
adc
jb
sbb
data16
xor
fidivrl
jne
mov
jne
ficompl
fildl
lock
adc
pop
loope
push
xchg
xchg
xor
clc
out
jb
jo
push
mov
out
add
and
fstpl
movsb
out
in
sbb
fisubl
sub
jg
xchg
inc
hlt
or
fs
ret
push
into
inc
cli
pop
mov
pop
xchg
add
sub
es
nop
add
in
stos
push
push
ljmp
in
adc
mov
mov
dec
repz
imul
scas
out
outsl
xor
stos
lret
jne
in
loop
jmp
inc
pop
lds
aas
inc
in
sub
mov
dec
movsl
add
movsl
sub
ss
movsl
jne
add
push
int
jne
out
in
aad
rep
lcall
loop
pop
les
add
dec
fnsave
pop
icebp
xor
cmp
pop
adc
cmc
iret
or
loopne,pt
mov
jle
lcall
jg
lahf
add
cmp
ss
mov
out
pop
ds
xchg
js
adc
fiadds
nop
jne
xor
or
cmpsb
lea
xchg
xor
or
mov
jnp
push
iret
das
jae
mov
cmp
mov
adc
ret
adc
mov
adc
shrb
ret
pop
nop
ret
imul
clc
pop
or
sub
dec
add
sub
adc
push
testb
insb
aad
jno
nop
mov
jp
cmp
jo
ret
in
cmpsb
das
jg
adc
cmpb
imul
call
mov
outsb
mov
sar
sub
mov
dec
lret
imul
xchg
mov
push
fsubp
adc
sahf
xor
push
dec
outsb
movsl
ss
adc
cmpl
out
jmp
int3
testl
cmpsb
inc
aas
wbinvd
jae
mov
in
imul
outsb
pop
xchg
stos
movsb
popf
mov
test
adc
idivb
pop
jl
jae
sub
insl
jl
and
call
mov
sbb
adc
je
cmp
daa
xchg
mov
sbbl
jo
lds
loope
dec
mov
popa
mov
loopne
outsl
std
add
inc
int
add
test
imull
xor
daa
icebp
inc
jmp
mov
stc
testl
jbe
mov
dec
cmp
mov
insl
cld
aam
jno
push
enter
iret
lock
popa
in
jnp
or
enter
mov
xchg
inc
cltd
loopne
lret
jg
add
or
in
scas
mov
fstl
sub
lret
jae,pn
or
ficoms
mov
mov
pop
mov
fiadds
mov
xchg
and
stc
mov
fdivrs
jns
cmp
jmp
and
in
test
jecxz
inc
mov
jp
push
pop
dec
inc
ds
int
movsl
mov
loop
pushf
sbb
roll
xchg
aam
xor
mov
pushf
stc
adc
popf
xor
shrb
xor
movb
ror
cmp
jo
jae
pop
sbb
cmpsb
lods
fildl
mov
cmp
lret
inc
xor
push
lret
sbb
push
sub
adc
or
mov
dec
in
scas
or
scas
mul
xchg
sbb
push
mov
jmp
push
imul
adc
fs
pop
je
les
aad
sbb
fstpt
sub
neg
dec
xchg
pop
in
lea
aas
cmp
ja
sub
out
loopne
sahf
lret
fsubs
test
orb
cld
and
mov
jns
shr
xchg
data16
xor
mov
dec
mov
fidivl
mov
push
fsubs
xchg
hlt
jp
insb
jo
push
ret
roll
cmc
insb
push
sbb
or
lock
pop
mov
aaa
pusha
out
jmp
cmp
lahf
mov
xchg
mov
and
sti
jae
imul
lret
push
inc
inc
mov
pop
xchg
dec
sbb
adcb
rclb
xlat
mov
ret
shl
inc
cs
dec
mov
sbb
dec
sbb
xor
out
sbb
mov
stos
ja
bound
aad
jb
add
adc
or
dec
sub
xchg
pop
inc
fwait
xor
daa
adc
test
out
rcrb
mov
mov
fdivrp
sub
mov
je
fiadds
push
mov
cmp
stos
mov
lock
dec
xor
dec
push
in
mov
cmp
repnz
iret
sahf
ljmp
sbb
pop
enter
in
jecxz
or
mov
jmp
jecxz
imul
xor
jl
xchg
jo
add
cli
dec
inc
mov
aad
movsl
int
and
mov
in
push
cli
sbb
cmp
pusha
sub
loope
mov
stc
insb
lret
mov
mov
andl
jns
loopne
or
push
add
pop
out
mov
mov
test
push
movsb
mov
fcomi
jne
out
jl
ret
adc
xlat
or
or
push
mov
fmul
push
lods
ljmp
push
adc
idiv
ret
imul
xor
lcall
push
or
xchg
sub
out
jecxz
dec
ja
sbb
sub
and
loop
in
addr16
repnz
push
xor
adcb
push
cmp
or
jmp
popa
dec
movl
popa
xchg
jge
and
xchg
add
and
and
and
outsl
cmp
and
aas
icebp
or
lahf
lock
sub
inc
sarl
je,pn
jge
test
ret
lea
out
jno
dec
lahf
inc
inc
pop
daa
fwait
pop
fwait
add
adc
lods
xchg
lcall
sub
js
cmp
ljmp
mov
mov
pop
and
fstpl
pop
shlb
out
add
jg
mov
in
pop
jmp
jmp
fdivs
pop
out
or
and
mov
cmp
lcall
inc
xchg
repnz
or
test
jecxz
pop
cmp
push
adc
pop
mov
loope
sbb
sub
pop
fsubr
andb
js
arpl
aas
enter
cltd
and
lods
loop
mov
jl
rorb
jae
imull
mov
sub
loope
cmp
test
jae
sbb
mov
stos
add
ds
sahf
mov
cmp
and
jo
pop
lret
insb
push
scas
outsb
ret
orl
fbstp
mov
pop
aam
ds
sub
jecxz
mov
pusha
fs
pop
cmpb
inc
xchg
dec
out
sub
pop
xchg
and
notb
outsl
js
cmp
pusha
shll
mov
push
xchg
mov
gs
pop
mov
cld
cmp
cltd
xlat
imulb
loopne
out
mov
jne
nopl
xchg
mov
imul
or
sti
je
icebp
jmp
nop
pop
scas
out
mov
hlt
imul
dec
push
inc
jle
lret
xchg
pop
cmp
and
dec
dec
test
mov
xchg
test
xchg
jle
xchg
in
inc
jbe
add
insb
dec
test
jecxz
xchg
push
sub
testb
cmp
fstl
mov
cmp
andb
in
or
push
and
into
js
scas
mov
xor
sbb
jg
pop
cmp
adc
mov
lods
dec
dec
and
lods
fldenv
movsb
in
or
pop
bound
pop
mov
push
fs
imul
add
jae
pop
das
lea
hlt
notb
fistl
adc
pop
add
push
mov
push
mov
imul
pop
jo
push
mov
ret
mov
jle,pn
mov
icebp
sbb
in
mov
add
inc
rolb
push
pushf
dec
insb
aas
test
cmp
xor
pusha
inc
gs
pop
inc
or
es
sbbb
mov
cmp
push
std
xchg
pusha
mov
pop
js
xchg
sub
dec
mov
push
or
sub
adc
jno
inc
lds
and
xchg
cmpb
mov
dec
cltd
daa
sub
push
repnz
iret
inc
jne
xchg
pusha
js
push
lods
mov
xor
bound
push
imul
enter
inc
insl
gs
fucomip
outsl
imul
aam
dec
mov
mov
aad
arpl
daa
cmc
cli
arpl
data16
inc
cs
add
popa
aam
or
fcoml
mov
push
mov
adc
pusha
jle
call
ja
jno
xchg
add
adc
iret
mov
add
jne
cmpsb
adc
add
test
dec
lods
je
pinsrw
jg
xor
js
test
pop
cmp
pop
cmpsb
mov
pop
jp
fstpl
xor
imul
fcomi
mov
or
jb
xor
push
cwtl
push
or
out
vmread
cmp
sahf
cld
mov
add
jae
sub
or
das
or
aaa
les
pop
or
adc
or
xor
mov
fld
inc
sbb
fisubrs
popf
in
mov
cmp
mov
lret
cmp
lahf
cmp
lret
jno
iret
fcmovnb
or
xchg
adc
pop
out
and
icebp
xchg
mov
ljmp
push
ret
call
xchg
loope
cmpsb
fadds
dec
cwtl
jb
cmc
out
lock
adc
and
cltd
sti
or
into
les
push
neg
bound
mov
icebp
cmp
sarl
push
cmp
lcall
mov
jecxz
pop
cmc
jnp
scas
out
idiv
stos
stc
stos
negl
movsb
std
adc
in
adc
icebp
into
nop
icebp
dec
mov
mulb
fcoms
mov
lea
jg
inc
dec
xor
test
test
test
aam
jg
inc
in
and
ss
test
jnp
mov
outsl
sub
jae
adc
pusha
xor
mull
fs
add
or
js
in
dec
pop
shll
dec
cmc
mov
push
jg
jmp
outsl
jo
movbe
and
sete
scas
clc
fsubrp
adc
dec
aam
jge
mov
mov
or
xchg
mov
mov
and
or
jp
lock
inc
arpl
loop
cmp
out
in
jg
push
loopne
sbb
pop
add
jb
aam
idivb
add
dec
in
mov
fsts
xor
stos
sub
mov
mov
in
inc
bound
movsl
testb
scas
or
jbe
inc
ljmp
mov
imul
cli
jmp
dec
adc
shll
ret
mov
addl
aad
sbb
jns
ljmp
mov
mov
in
mov
mov
es
es
rcl
mov
shrl
rcr
cmp
mov
cmp
sub
xorl
pusha
loope
sbb
pop
xchg
lock
pop
or
pop
and
cmp
fmull
mov
test
frstor
imul
cmp
popf
sahf
cmpsb
xlat
js
fdivs
loopne
push
mov
call
jne
mov
imul
out
jp
fisubrl
push
add
or
std
stc
outsl
insl
pop
fcos
shrb
mov
lods
lahf
pop
jecxz
add
xchg
bound
test
fldenv
cmpsb
cli
les
xorb
push
xchg
lahf
xchg
lock
adc
lret
sub
shr
sbb
sahf
and
xchg
movaps
mov
cwtl
push
sbb
mov
inc
mov
leave
lcall
dec
adc
or
pop
pop
xchg
and
lds
inc
jnp
push
xor
adc
in
jg
mov
lret
mov
mov
xchg
dec
rcrl
std
jns
jo
idivl
push
inc
push
jne
sbb
push
outsb
dec
arpl
jbe
test
adc
xorl
mov
outsl
mov
neg
sbb
adc
inc
or
repnz
push
add
out
sub
xor
insb
jmp
leave
outsb
cld
sub
mov
enter
popl
jl
les
sub
add
dec
fdivrl
ja
outsb
push
mov
mov
inc
dec
xor
dec
enter
mov
push
mov
xchg
fwait
sbb
lock
xchg
jle
fwait
cmpb
sbb
dec
sbb
xor
xor
pop
arpl
push
fmul
cmp
popa
add
pop
rorl
sub
push
sub
gs
addr16
iret
push
mov
pop
xor
out
stos
dec
out
sbb
enter
sub
dec
adc
ds
mov
pop
ljmp
test
pop
out
bound
ret
cs
jae
jae
pop
imul
imul
sub
stos
out
pop
ljmp
fimull
test
and
insb
mov
adc
xchg
sub
mov
jne
insb
in
and
xor
aaa
rolb
jb
enter
imul
mov
lret
push
or
lods
es
push
push
sub
sarl
dec
aas
add
sub
sbb
in
rcrb
pop
icebp
jnp
xchg
jl
lcall
les
cmpsb
sub
pop
mov
jmp
shrb
pusha
fnstenv
jne
inc
dec
sbb
into
mov
rcll
jle
out
dec
push
inc
shl
fnstsw
cwtl
icebp
push
leave
jl
das
leave
or
inc
mov
xor
cwtl
add
sub
inc
and
aam
cld
cmp
jmp
xchg
xchg
mov
cmp
imul
icebp
pop
mov
cmp
cld
jo
cmp
xchg
xchg
sbb
add
mov
roll
cmc
cli
mov
test
add
push
stc
repz
jge
pop
lret
add
jno
pushf
mov
mov
nop
push
addr16
clc
jb
cmpsb
ret
je
fidivrl
sarl
cs
sub
ficompl
es
pop
loopne
sub
adc
cmpsl
sbb
mov
lea
lea
fwait
loopne
push
inc
test
or
sbb
pop
or
push
mov
fistps
and
and
mov
dec
rep
and
sub
pop
testb
inc
ret
mov
mov
repnz
and
xlat
fcompl
jnp
inc
pop
into
adc
mov
les
shlb
int3
lret
and
out
jns
mov
mov
dec
push
mov
cmpsb
outsb
fcmovnb
sbb
jg
jae
adc
icebp
jbe
lea
xchg
hlt
jbe
jecxz
sub
orb
clc
or
enter
mov
sbb
stos
xor
push
cltd
imul
scas
mov
imul
xchg
loope
mov
xor
leave
xor
xchg
sub
push
je
add
jmp
xchg
pop
mov
jnp
jp
and
and
enter
jg
lods
mov
cs
call
mov
ja
cmpsb
push
xor
ss
jnp
arpl
and
int3
lahf
sub
in
add
imul
push
inc
addl
arpl
jo
fsubp
mov
and
xchg
dec
dec
jb
jbe
adc
xor
lahf
add
jp
dec
mov
mov
xchg
out
scas
jecxz
lret
push
aam
out
push
inc
cmp
pusha
sub
push
xchg
push
sub
cmp
add
arpl
mov
cmp
das
repz
in
mov
nop
mov
mov
mov
cmp
mov
outsl
aaa
and
or
enter
mov
xchg
xchg
pop
push
adc
push
cli
aas
inc
pop
jae
and
mov
frstor
xorb
mov
lods
aas
scas
dec
push
rol
daa
xchg
mov
and
ds
add
pop
nop
mov
pop
pop
int3
sbb
add
movsb
xchg
shrb
cwtl
icebp
insb
jl
inc
mov
push
aam
push
ror
and
ja
sub
mov
mov
fisttpl
fidivl
add
sub
es
icebp
jle
fisttps
jne
clc
push
or
add
aad
mov
movsb
in
mov
je
sbb
stc
dec
lods
pop
and
jge
inc
dec
pop
jge
inc
jns
cmc
out
out
add
test
add
push
adc
push
jno
inc
jae
push
and
out
mov
inc
movsb
adc
in
pushf
in
cmp
test
adc
xor
jnp
fstps
lods
jne
or
pop
and
lret
shlb
pushf
lcall
pop
cld
xchg
cmpsl
movsb
xchg
mov
ror
adc
jae
addr16
xor
mov
fistps
mov
std
shr
lahf
mov
cmp
out
roll
sbb
call
fsubs
fadds
ds
jecxz
dec
cmp
pop
lea
and
mov
pop
pushf
aas
push
jmp
sti
xorl
pushf
mov
cmp
ds
dec
int3
lods
movsb
xor
xor
or
adc
pop
sub
popf
stos
add
inc
inc
add
rolb
or
mov
inc
cwtl
pop
adc
or
add
mov
jns
xchg
sar
stc
or
mov
pusha
and
mov
fwait
mov
in
jo
cmp
xor
popf
hlt
stos
fisubs
cmp
popf
pop
add
jg
cmp
sbb
mov
mov
cmpsl
pop
call
daa
mov
outsl
adc
lods
aaa
jae
cmpl
push
xor
in
movsb
mov
movb
mov
or
loopne
sbb
sti
sub
jae
adc
pop
roll
mov
leave
cmpsl
das
jne
fiaddl
inc
push
inc
loop
mov
xor
imul
jmp
je
lcall
xor
mov
xchg
roll
jnp
push
mov
outsb
or
cs
dec
arpl
pop
add
adc
mov
xchg
xor
gs
popf
jae
push
sbb
pop
ss
icebp
in
and
jg
pop
stos
sarb
pushf
aas
movsl
fstps
stos
ljmp
les
std
sbb
jb
xchg
std
mov
or
and
in
cmp
jl
test
outsl
xchg
cmp
cmpsb
mov
pop
shrl
pop
or
sub
xchg
loopne
out
and
and
inc
sti
push
lock
test
movsb
mov
add
popf
push
popf
jns
jae
stos
lret
xor
jno
mov
mov
add
stos
ss
xchg
mov
cmp
sbb
sbb
sti
fstpl
add
test
addl
cld
xchg
inc
jo
jge
mov
mov
mov
and
xchg
pop
jae
sub
rolb
push
xchg
pop
cmp
adc
xor
jg
in
in
cmp
xor
jns
sub
out
aad
xchg
aas
call
xor
mov
pop
stos
imul
loope
subl
sbb
movb
loop
dec
dec
mov
sbb
pop
sub
and
outsl
popa
lea
xchg
icebp
lods
inc
lods
lock
add
test
in
lea
jno
shrb
insb
dec
in
dec
aaa
clc
lret
push
lock
push
jbe
stos
or
push
stos
xlat
push
imul
sub
or
js
jns
inc
push
and
mov
sub
add
fnstenvs
xchg
fadds
inc
enter
cmp
cmp
aam
subb
dec
lret
loop
ss
and
and
out
jne
xlat
dec
out
inc
outsl
cmp
xchg
movsl
arpl
xor
dec
je
push
aas
fnsave
int3
cmp
xchg
into
xchg
pop
pushf
sub
jno
fidivrl
imul
jae
callw
mov
data16
out
jle
xchg
testl
sbb
pop
andl
ret
mov
sub
bnd
rol
inc
push
pop
mov
cld
cwtl
sahf
data16
andl
inc
into
std
test
loope
bound
sub
sbb
mov
sub
iret
mov
xlat
and
pusha
mov
psrlw
test
and
in
xchg
add
cmp
popa
jle
scas
xchg
iret
push
in
xchg
mov
aam
pop
mov
mov
pop
orl
dec
jge
mov
sub
cmp
jmp
rol
movsl
cwtl
add
xchg
in
or
fsts
push
or
out
and
iret
sarb
aaa
sub
jae
int
xor
or
cmp
andl
cmp
jle
mov
sbb
outsb
lods
mov
je
jns
add
out
pop
add
mov
lods
cmpsl
loop
push
lret
mov
mov
lods
jg
and
xor
mov
sahf
mov
cwtl
sbb
in
jno
adc
cmpsl
xchg
sbb
mov
xor
call
sbb
add
pop
outsb
xor
sub
aaa
rep
movb
sub
out
xor
lret
sub
mov
inc
adc
aas
je
sub
sbb
call
xlat
push
add
mov
adc
sbb
lret
in
adcb
scas
push
fistps
pop
dec
outsl
cmpsl
add
cmovbe
orl
cmc
or
sub
xchg
mov
mov
imul
nop
adc
push
gs
js
and
test
test
negl
int
aad
dec
xchg
lret
push
adc
or
or
mov
mov
xchg
dec
add
mov
pop
push
push
add
adc
lcall
aaa
and
outsb
bnd
mov
outsb
jecxz
sub
add
sbb
xor
pushl
mov
mov
stc
mov
enter
mov
push
je
data16
fldcw
mov
mov
mov
pop
imul
fdivl
mov
mov
lret
test
mov
mov
and
cmpsl
sbb
js
iret
shrb
inc
xor
pop
jge
les
mov
jle
std
mov
es
cmp
sub
jno
mov
pop
es
test
xchg
pop
insb
pop
mov
test
out
ret
inc
and
cmp
out
or
mov
je
mov
push
shr
add
or
sbb
aad
insb
mov
cmpsl
sbb
sbb
cmp
mov
cltd
inc
lcall
or
aad
rcl
jp
int3
mov
out
push
lret
xchg
shl
arpl
fdivrs
roll
cmp
lahf
jge
mov
mov
adc
mov
fdivr
jmp
arpl
mov
sbb
xor
fcmovbe
mov
mov
push
arpl
scas
lret
xor
xchg
fidivs
mov
test
mov
popl
rol
jne
and
add
mov
movsl
jne
test
push
adc
dec
mov
pop
sub
adc
rcrb
es
test
popf
dec
sub
xlat
lahf
xor
cwtl
push
and
adc
add
rcl
mov
scas
bnd
push
shlb
popa
jae
or
shrl
mov
mov
hlt
or
scas
mov
mov
inc
in
add
mov
aas
hlt
mov
pusha
add
jbe
jecxz
rcll
xor
cmp
cmpsb
mov
xchg
jne
fdivl
rcrl
sub
scas
mov
and
into
je
fstpl
xchg
dec
insb
jno
mov
mov
fists
jno
or
jmp
mov
dec
test
pushf
ret
lret
loop
sub
mov
je
int
and
cli
in
mov
pop
shr
mov
lcall
adc
mov
lret
jmp
dec
cwtl
mov
push
lret
cld
mov
ret
inc
insl
cmp
int
stos
leave
lds
xchg
stos
sub
add
aam
test
lds
pop
cwtl
fs
scas
add
jne
mov
aam
int
and
inc
aam
ljmp
aaa
lods
jno
adc
xorb
add
lahf
mov
and
insl
bound
ljmp
gs
sub
sub
jmp
xor
sub
int
scas
mov
fsubrl
test
pushf
add
adc
cld
pop
mov
out
mov
cld
scas
clc
pop
jbe
mov
mov
or
cmc
mov
jmp
fisttpl
mov
divb
addr16
int
mov
and
and
shll
movsl
loope
cmp
dec
sbb
punpckhbw
cmpsb
jne
push
mov
pop
sti
test
push
push
mov
push
inc
iret
popa
repz
sub
es
cmp
arpl
sbb
push
icebp
inc
push
flds
add
fisttps
lock
fiaddl
ljmp
mov
pop
daa
jp
lahf
fists
mov
cmp
mov
ret
xchg
movb
imul
pop
negb
scas
sbb
pop
out
imul
nop
lahf
inc
push
into
scas
test
cli
sub
adc
insb
jmp
jne
inc
xchg
ret
push
pop
clc
jb
push
lods
aam
loop
out
stos
jb
bound
in
into
mov
jmp
add
and
cltd
pop
inc
mov
lods
inc
sub
loop
mov
sub
sbb
xchg
cs
gs
ja
sbb
adc
jb
scas
lea
jp
or
and
cmp
loop
nop
repz
lret
mov
int3
lea
xor
cmc
or
cmp
scas
sbb
loope
mov
outsb
xchg
xlat
mov
call
out
sysenter
push
fldl
sbb
push
mov
bound
lock
dec
dec
ret
xor
xor
lods
cmp
dec
ds
mov
adc
xchg
dec
fldl
dec
xchg
sub
insl
data16
scas
fdivp
in
inc
dec
out
xor
popa
push
pop
jb
gs
jno
xchg
cmpsb
mov
cmp
mov
add
sub
cs
into
inc
lea
push
fadds
popf
insl
and
xor
xchg
pushf
xchg
cmp
sbb
push
xchg
or
pop
lret
or
push
push
cli
loope
std
cmp
jg
lock
imul
or
mov
pop
fcoml
fcomip
mov
mov
xor
mov
pusha
dec
cs
push
fidivl
xchg
fcoms
mov
add
insb
test
mov
les
mov
bound
hlt
mov
add
mov
sbb
loopne
ja,pt
mov
pop
adc
loop
sub
sub
fwait
iret
scas
rorb
repnz
decl
and
shrl
fidivrs
sahf
out
mov
jnp
jne
iret
out
mov
insb
loopne
call
stc
or
xchg
cmp
push
ret
iret
pop
out
imul
xlat
xchg
and
repz
xchg
std
jge,pn
xor
mov
inc
popf
mov
sub
repz
add
in
or
insl
mov
and
xchg
xchg
mov
adc
mov
dec
mov
pop
loope
pop
loopw
test
push
fidivl
jb
sti
cmp
arpl
adc
movsl
fstl
test
lock
add
aaa
popa
xlat
jne
push
inc
push
fistpl
xchg
sbb
dec
fldcw
mov
pushf
sbb
mov
ficomps
imul
cmp
jmp
pusha
dec
adc
shlb
jle
sbb
addb
push
adc
jecxz
mov
jge
rorb
arpl
cltd
testb
pop
mov
lock
sbb
dec
push
or
mov
push
icebp
in
mov
sub
ret
dec
ret
push
fidivs
xchg
and
push
mov
mov
out
lcall
mov
in
xchg
adc
in
add
jge
add
xor
je
or
adc
push
ds
not
fsubrl
out
shlb
rorl
pusha
in
sti
test
push
lods
mov
adc
xchg
pop
inc
ret
inc
mov
cmp
mov
mov
in
or
dec
nop
cmp
lret
xchg
sbbb
mov
inc
pop
pop
scas
cmpsb
jp
in
xchg
inc
xchg
push
sbb
ficoms
xchg
xchg
xor
cli
rcl
jne
mov
repnz
xchg
mov
inc
xor
std
rcll
jp
aad
dec
fcmovbe
pop
fs
sub
push
test
mov
push
dec
daa
mov
push
cmpsl
xchg
push
ljmp
xor
nop
into
dec
fdivs
cmp
in
inc
loop
test
testb
addr16
mov
inc
cwtl
or
mov
jne
orb
or
xor
mov
mov
mov
lods
push
dec
out
sbb
test
iret
lock
dec
aas
sub
push
nop
lock
or
inc
push
roll
lods
cltd
pop
or
mov
pop
or
cli
dec
push
xchg
movsl
fmuls
popf
mov
insl
add
js
fadd
dec
addr16
call
imul
int3
sarl
subl
and
cmpsl
mov
fdivr
lods
fnsave
sar
cli
xor
pushw
xchg
pop
jne
or
daa
cmp
out
pop
adc
ret
incb
cwtl
pop
pushf
pop
dec
notb
movsb
mov
sub
out
jp
add
lret
out
mov
xor
aaa
mov
mov
sbb
jg
adc
sbb
lret
inc
pop
fcomps
mov
mov
stos
cmc
daa
pop
sbb
add
out
xchg
sub
cmp
pop
scas
jge
adc
mov
pop
ret
jo
mov
and
inc
xchg
imul
mov
mov
mov
push
int3
test
and
pop
mov
pop
jae
aaa
xor
cmp
jno
jbe
sbb
cmp
jns
pop
loop
jg
push
into
fwait
loopne
cmpsb
mov
loop
cmp
xchg
or
mov
mov
cwtl
imul
cmp
jge
lods
mov
push
adc
jns
push
test
nop
out
movsb
push
pushf
jbe
sahf
xchg
pop
jle
cmp
ljmp
subl
aaa
fs
jl
nop
pop
testl
jae
mov
xor
lret
xor
cmp
movsl
data16
shlb
and
daa
lcall
push
push
sbb
in
xor
mov
call
int
stos
xchg
mov
into
inc
xorb
lret
hlt
push
outsl
repz
dec
movsb
inc
sub
push
es
imul
repz
mov
sbb
push
in
sbb
mov
adc
in
xor
add
andb
test
outsb
adc
cld
xor
fcomps
xor
mov
scas
mov
and
or
sbb
dec
and
push
lods
mov
sub
test
pop
mov
mov
out
mov
xchg
addb
dec
xorl
testl
shlb
fcomps
jns,pn
inc
scas
dec
add
pop
add
sub
push
pop
adc
push
mov
loope
daa
test
adc
lahf
ret
sub
sbb
inc
xchg
jle
ret
push
imul
icebp
lea
mov
out
movsb
cmp
pop
jle
ja
int3
testb
mov
les
xlat
sub
fsts
dec
adc
inc
enter
test
fwait
cmp
adc
xchg
sbb
xor
rcrb
faddp
xor
es
repz
call
cmp
inc
cmp
jns
movsl
mov
stos
pop
ret
data16
jg
loopne
push
push
loopne
adc
imul
xor
mov
or
dec
push
xor
jp
xor
mov
loopne
mov
xchg
repz
dec
loop
test
ja
scas
aas
xor
and
fdivs
xchg
fistps
or
mov
lods
push
xchg
fstpt
pause
jg
lock
or
cld
dec
jge
js
cmp
adc
out
adc
mov
aad
ss
ret
outsl
sub
add
imul
jle
inc
mov
gs
cli
and
cmpsb
cmp
ja
in
mov
mov
mov
test
xchg
test
insl
stos
int
mov
test
repz
dec
imul
data16
jg
das
push
pop
jno
fs
push
sbb
leave
mov
movl
cmpsl
xchg
adc
sub
mov
repz
jg
mov
shrb
adc
pop
inc
repz
push
jo
ja
push
mov
add
nop
dec
ret
mov
fdivrl
jg
lret
push
push
mov
sub
fnsave
push
insl
scas
sbb
pop
incb
mov
filds
fiadds
jnp
ds
mov
xchg
cmc
sbb
shrb
ret
dec
lret
add
pop
push
xchg
into
sbbb
dec
mov
sti
daa
js
xchg
arpl
andb
nop
push
fistpll
jl
rclb
pop
xor
test
lahf
je
add
clc
jp
popl
addr16
dec
mov
jnp
and
aad
mov
inc
push
sbb
mov
ffree
in
cmp
dec
ret
mov
cmpsb
mov
xor
cmp
xor
iret
xor
jle
pop
insl
js
inc
xor
repz
mov
mov
rorb
lahf
dec
aaa
lea
insb
je
mov
adc
xchg
mov
add
hlt
push
je
call
ss
dec
jmp
add
dec
add
cmp
adc
cltd
push
inc
inc
xchg
inc
xlat
push
mov
or
ja
clc
fstpl
push
xor
add
lods
lods
lret
int
adc
out
gs
popa
push
sar
enter
in
test
nop
jne
push
test
lock
jo
jge
cmpsl
movsb
or
cmovp
sahf
mull
fwait
jno
inc
jae
add
mov
mov
jo
push
or
mov
add
push
cmp
push
jnp
or
push
fsubr
push
lcall
adcb
and
arpl
adc
push
daa
sub
rorb
pop
iret
sub
push
adc
push
in
repnz
sbb
push
movsl
popf
or
sub
inc
mull
cmp
and
push
je
add
mov
jmp
pop
adc
ljmp
pop
mov
scas
hlt
js
loope
int3
dec
sbb
fs
pop
imul
jp
and
arpl
insl
jecxz
insl
js
mov
test
adc
ret
or
push
pop
lock
lods
xchg
sub
xor
add
in
int3
aaa
les
ja
sub
aad
xchg
mov
rolb
shlb
lret
aam
pop
xchg
into
fisubs
cmc
dec
mov
inc
mov
mov
dec
fnsave
sbb
cli
insl
inc
ret
sub
cmpsl
std
xor
rol
icebp
daa
pop
jno,pt
outsb
inc
pop
cwtl
std
xchg
fcmovu
pop
sbb
gs
testl
dec
push
in
insl
out
test
cwtl
rol
int3
dec
push
popf
hlt
jecxz
or
scas
pop
scas
into
or
sti
push
outsl
cpuid
mov
pop
push
out
mov
in
hlt
push
rorb
data16
lahf
sub
add
sub
cmp
and
arpl
pop
sbb
lods
sub
leave
test
sub
clc
in
dec
and
scas
stos
fdivs
jmp
in
iret
adc
subl
bound
xor
pop
push
sub
pop
add
rorb
sbb
out
out
add
dec
enter
fisttpl
popf
iret
fldcw
out
lret
add
aam
out
int3
jb
sbb
outsb
inc
dec
push
mov
dec
xor
xor
aam
ljmp
mov
pop
cwtl
stos
test
movsl
sub
outsb
sub
xor
pushf
cmp
mov
xchg
bound
mov
inc
mov
push
fwait
hlt
mov
sarb
jg
xchg
jae
push
push
out
nop
clc
inc
or
xlat
xchg
and
sbb
es
and
mov
pop
pop
mov
jmp
cmpsb
inc
push
leave
jbe
outsb
icebp
cltd
andl
pop
cmp
mov
orb
jb
test
pop
mov
sahf
xchg
decb
jbe
add
add
push
hlt
pop
pop
xor
fisttpll
scas
iret
pop
ret
fcmovnu
cwtl
lret
mov
in
in
sbb
or
scas
stos
das
and
pusha
dec
out
adc
cmp
lret
jne
nop
jno
mov
ds
pushf
les
and
popa
push
push
ljmp
mov
cmc
rorl
test
cmp
js
cmp
dec
lcall
pusha
xchg
jnp
pusha
jae
pop
aad
xchg
cmp
addr16
cmp
cmp
sti
pop
and
out
mov
cmp
lods
jle
sbb
push
xchg
jge
repz
outsb
notb
push
cmp
aad
fxch
cltd
hlt
jmp
fcompl
pop
mov
popa
loop
jle
aam
lahf
fadds
leave
mov
scas
add
pop
popf
mov
dec
add
pmulhw
rol
pop
sbb
or
push
cmp
dec
inc
and
adc
push
xor
mov
add
shlb
adc
mov
pop
adc
test
cmp
cmpsl
inc
jne
pop
add
jbe
enter
test
push
sbb
and
jnp
or
ficoms
sbb
jp
shlb
mov
les
inc
repnz
les
loopne
dec
icebp
mov
and
out
dec
orl
cwtl
lret
in
adc
insl
jp
inc
shlb
inc
sbb
mov
jmp
mov
pop
cmc
sub
mov
sar
xchg
imulb
mov
push
dec
sbb
push
cmp
andl
or
mov
orb
enter
add
aaa
popf
lcall
std
mov
push
mov
jo
test
enter
mov
pop
adcl
pop
jecxz
mov
xlat
gs
sbb
xor
int
push
aad
gs
ljmp
and
pop
inc
lock
xchg
in
cs
xor
mov
pop
test
cmpsb
mov
push
dec
out
out
ljmp
dec
mov
add
pop
repz
pop
xor
jae
shrb
jg
mov
inc
push
and
mov
scas
dec
dec
push
lahf
jns
out
mov
addr16
adc
loop
or
jne
int3
ljmp
or
fldenv
loop
lcall
push
lcall
into
xchg
mov
mov
jecxz
adc
popf
jg
pop
test
mov
lds
xchg
loopne
es
jno
mov
cld
dec
test
andl
fildl
or
loopne
in
pop
mov
push
push
dec
rolb
ds
cmp
xor
pop
push
xchg
ficoml
jge
push
inc
insb
push
mull
lods
sti
int3
fistps
stos
sti
dec
cld
cmp
pop
pushf
aaa
popf
enter
sub
jg
add
add
inc
test
in
clc
insl
lcall
ss
push
test
mov
jbe
cld
lock
pop
jo
cmp
fisubs
icebp
sub
jl
adc
test
mov
mov
jno
mov
and
mull
mov
ret
scas
mov
icebp
loope
jne
mov
add
and
aaa
sbb
sbb
push
imul
cmpsl
push
lods
arpl
mov
or
mov
push
flds
sbb
cmpsl
cmp
js
imul
mov
add
mov
xchg
in
mov
push
ret
loop
sahf
push
lcall
cmp
jb
mov
and
sbb
pop
out
out
inc
ds
rorb
pop
out
dec
es
mov
leave
dec
int3
pop
in
xor
cwtl
xor
dec
clc
jp
mov
or
rcll
jl
es
or
pop
jnp
inc
clc
scas
ljmp
sbbl
jne
mov
xor
mov
mov
or
ja
and
dec
sub
aaa
cli
xchg
rorb
jg
lret
cmc
add
ret
pop
xlat
andb
lods
jb
loopne
es
sti
add
adc
adc
hlt
sbb
push
ljmp
or
test
mov
mov
inc
xchg
cltd
jne
push
mov
ljmp
stos
inc
or
sub
sbb
and
ljmp
scas
cmp
jno
in
imul
push
or
xchg
into
scas
cmc
div
and
fcoms
jbe
cmpsb
jmp
stos
repnz
pop
adc
scas
insl
mov
insb
mov
mov
push
pop
xor
sbb
fsubl
push
mov
aam
inc
xchg
out
int3
das
mov
aad
cmp
adc
iret
sbb
inc
mov
inc
dec
mov
add
movl
cmp
or
sahf
pop
xchg
jp
jb
or
add
cltd
push
adc
imul
jmp
cmp
xchg
enter
adc
push
into
push
mov
pop
jg
mov
scas
push
bound
and
out
les
pop
ficoml
imul
jb
pop
mov
push
in
push
push
jl
xchg
lea
sar
mov
outsl
pop
push
add
push
popf
jb
inc
cmp
fnstenv
or
pop
jo
mov
xchg
ss
inc
push
inc
mov
fwait
stos
jae
cs
jl
inc
out
aas
loopne
and
fwait
pop
cmpsl
test
add
shl
enter
ja
daa
cld
out
iret
xchg
negl
jecxz
test
addr16
lds
cli
sti
cmp
hlt
popa
loopne
out
fwait
pop
sarl
xor
lds
test
dec
add
add
ss
push
or
cmpb
aas
pop
idiv
fsubrl
js
add
push
jns
jnp
inc
out
dec
sahf
jp
and
push
dec
xchg
mov
scas
sbb
data16
mov
pushf
pop
dec
test
inc
std
xor
btrl
sub
cmp
dec
add
test
cli
test
adc
lcall
mov
loop
mov
pop
xchg
fstpt
pop
pop
inc
in
outsl
fsubrs
addb
repnz
clc
xor
mov
cld
adc
inc
xchg
xor
push
scas
inc
pop
jge
add
pop
in
dec
xchg
fidivrs
mov
fsubl
int3
rolb
lods
inc
mov
aaa
aas
jmp
xchg
jl
sbb
outsb
iret
cmp
pop
push
sbb
sub
ljmp
stc
pop
adc
sti
mov
and
lahf
data16
add
fiadds
rcrl
out
loope
fisttps
gs
out
cld
insb
pusha
pop
xlat
jne
adc
sub
ljmp
and
pop
dec
addr16
xlat
rcrl
into
or
sub
cmpsl
scas
add
imul
insb
inc
test
sahf
jl
mov
ss
inc
pop
cwtl
into
sub
add
push
lahf
mov
mov
sub
push
or
addr16
mov
inc
cmp
hlt
add
xchg
inc
lods
sbb
dec
jmp
jmp
sahf
xor
add
aaa
nop
popa
push
dec
orl
sahf
lret
pop
jl
pop
popf
clc
adc
mov
sub
pop
test
in
xchg
outsb
repnz
cli
sbb
add
xor
xchg
add
inc
jmp
in
fimuls
cld
rcr
aam
leave
mov
sub
mov
inc
divb
fucomp
les
inc
cwtl
or
mov
cwtl
mov
sbb
dec
movsl
test
out
pusha
mov
mov
addr16
insb
sti
enter
jno
das
shlb
adc
out
jecxz
sub
jge
mov
pushf
or
pop
ja
imul
cmp
inc
gs
sbb
mov
pop
mov
mov
jno
pop
in
cs
lds
push
pushf
xchg
mov
hlt
lret
inc
int
adc
std
xchg
pop
push
and
int3
aad
mov
pop
mov
pop
cmp
mov
orl
or
mov
pop
xchg
xlat
shrl
inc
mov
jne
popf
jnp
mov
or
in
sbb
andl
pop
les
add
bound
jp
xchg
sbb
xchg
push
mov
jne
movsb
sarb
jae
inc
ucomiss
enter
lret
psubusb
ret
and
mov
mov
neg
sbb
sub
lods
hlt
mov
fsubr
pop
fsubrs
orl
sbb
sub
cmp
sarl
cmc
sub
push
push
insl
push
cwtl
lock
xchg
xchg
lret
dec
xchg
div
cmpsl
mov
sub
repnz
adc
jmp
pop
mov
popa
pop
in
push
test
divb
push
aas
add
pop
call
add
xor
rcl
mov
stc
loope
inc
outsb
jge
xchg
add
mov
mov
mov
insl
lock
fdivs
orb
cmpsb
cmpsl
outsb
bound
imull
xchg
jo
pop
stos
cmp
int3
aad
pop
cltd
ret
mov
xchg
add
or
jo
xlat
mov
popf
loopne
mov
mov
add
xor
xlat
das
add
movsl
sbb
xchg
push
or
mov
push
nop
inc
mov
addr16
aad
adc
or
out
popa
shrb
sub
mov
cli
pop
sbb
xor
adc
mov
into
lock
pop
push
mov
mov
sbb
icebp
or
cmpl
out
push
or
out
hlt
dec
and
subb
shll
pop
inc
sbb
mov
pop
in
ftst
iret
pop
mov
shr
dec
sahf
cmp
jmp
fstp
xor
and
insb
insb
ljmp
or
mov
lret
jecxz
fadd
adc
pop
out
xchg
movsl
pushf
pop
cmpsb
loope
daa
mov
dec
add
jne
in
mov
adc
fbstp
lods
rol
or
dec
push
mov
stos
in
das
sbb
push
call
das
dec
xchg
movsl
jae
in
mov
xchg
stos
incb
fcmovnbe
outsb
sub
lods
fstps
inc
pop
mov
shrb
push
lret
stos
add
pop
and
pop
xchg
add
mov
jnp
cmp
leave
dec
shll
add
idivl
xchg
outsb
cmc
adc
inc
push
push
add
adc
sbb
outsb
hlt
mov
loop
jb
out
gs
xor
cmp
push
xchg
cld
in
loop
inc
xchg
mov
inc
dec
pop
fcomps
arpl
sarl
das
sti
mov
and
xor
lahf
js
out
xchg
pop
inc
mov
jnp
fiaddl
addr16
stos
iret
ds
outsb
jecxz
cwtl
mov
aaa
inc
in
sbb
xchg
mov
inc
xchg
jno
dec
mov
sub
loop
pop
movsl
out
mov
lock
jae
jl
cs
dec
mov
xchg
pop
adc
mov
push
dec
mov
adc
popf
lahf
test
jnp
in
mov
dec
les
sub
mov
enter
adc
lock
in
or
mov
das
aas
sahf
jg
inc
adc
mov
mov
xor
adc
mov
or
in
sbbb
lahf
inc
mov
inc
dec
dec
xchg
xchg
int
add
test
push
push
push
push
dec
cwtl
push
jle
xchg
pop
jmp
cmpsl
rcr
aas
arpl
lods
out
imul
xchg
jp
jnp
out
imul
test
jbe
xchg
push
arpl
and
hlt
fsubrl
ja
pushf
inc
sbb
add
popa
xchg
out
pop
orb
or
xchg
sbb
sbb
mov
repnz
sti
mov
fwait
pop
xchg
ja
fsubrs
mov
adcl
enter
dec
mov
fstl
int
xchg
mov
and
aaa
jp
jno
push
sbbl
out
dec
lret
inc
jp
inc
lods
scas
push
cmpsl
clc
aas
mov
ficoml
test
sub
adc
inc
shll
add
mov
mov
fisubrs
jae
xchg
pushf
stos
stos
mov
mov
data16
adc
mov
out
ljmp
ret
aad
and
xlat
dec
js
push
push
loop
mov
inc
test
mov
in
in
xchg
cmpsl
cld
sahf
imul
pushf
fbstp
push
jns
sub
lea
push
rcrb
dec
cmp
sub
jne
je
sub
push
xor
aam
aad
dec
sti
test
ds
mov
ror
mov
pushf
inc
sbb
fildll
iret
test
adc
adc
mov
xchg
add
rcrb
cmpsl
push
test
in
adc
add
ds
imul
cwtl
out
mov
mov
cmp
clc
clc
popl
and
push
popa
ja
xchg
leave
addl
test
adc
lds
cmp
adc
mov
bnd
addr16
lahf
sti
in
and
scas
das
jg
imul
jne
dec
ja
jp
pop
xchg
mov
stos
cmc
add
and
iret
jmp
adc
fwait
xchg
fdivrp
cmp
add
dec
push
jbe
test
lods
outsb
mov
bound
adc
pop
push
cli
sbbb
mov
xchg
lcall
mov
push
loop
fcompl
std
pop
push
test
test
xchg
inc
mov
mov
out
sbb
stos
lret
jae
adc
fxam
scas
popa
or
sub
test
lret
negb
xchg
out
fwait
adc
cmp
call
test
jo
lret
aaa
sbb
data16
pop
or
push
stc
out
push
ja
sbb
lods
outsb
or
pop
fisttps
pusha
or
mov
cs
mov
ds
pushf
inc
xchg
xlat
shlb
sbb
pop
ljmp
clc
and
ficomps
lods
mov
inc
jle
outsb
lahf
sarl
push
stos
lcall
out
cmp
in
mov
adc
rorl
adc
adc
cmp
cmp
or
decl
adc
add
fwait
xor
repz
mov
sbb
pop
sti
sub
cmp
xchg
sub
aam
pop
xlat
popf
in
clc
addr16
sar
cmp
mov
xor
mov
lcall
les
mov
add
and
negb
std
mov
into
insl
sub
sub
mov
test
jno
push
jne
insl
jp
xchg
in
shlb
push
jae
mov
cld
cmc
out
sbb
ss
and
or
jge
ss
or
lahf
jno
out
stos
imul
sbb
jmp
sbb
sub
and
cmp
sbb
cmp
or
mov
data16
shll
mov
add
in
js
sub
and
imul
mov
jl
movsb
cmc
jae
xor
lret
mov
mov
fucomip
adc
call
fdivp
mov
pop
fldcw
imul
cmp
mov
jmp
ficompl
cmpsl
push
sbb
das
mov
xlat
frstor
test
sbb
icebp
test
lods
cmpsb
add
pop
stos
cmp
and
ret
das
inc
stos
insb
mov
gs
sub
dec
out
jle,pn
rclb
pop
push
pop
lods
mov
cmp
out
jge
leave
dec
cld
mov
outsb
lods
inc
adcb
inc
mov
inc
cmp
mov
and
and
mov
into
pop
dec
cmp
fwait
in
or
fcmove
rcr
sbb
pushf
xchg
pushf
sbb
in
daa
in
dec
loope
sub
sub
jl
and
adc
sub
xor
es
bound
dec
roll
movsb
xor
aam
gs
out
push
cli
inc
fistpll
outsb
outsl
aam
cmp
in
and
roll
jbe
xchg
mov
js
mov
xor
arpl
mov
xchg
and
shll
pop
jne
inc
sbb
lret
neg
or
aam
enter
sbb
mov
lret
push
jno
mov
jnp
jecxz
sub
pop
lret
push
faddl
psrlq
jne
cmp
setl
les
sarb
push
or
sbb
mov
inc
or
sarl
lcall
mov
pop
cwtl
push
cmpb
sbbb
mov
lock
and
adc
xchg
inc
mov
imul
data16
je
rcrb
rcrb
pop
lds
push
aam
std
sub
pop
pop
jnp
andl
jo
in
nop
popa
out
cltd
repnz
out
ja
xchg
mov
rcll
jb
inc
cmp
push
aas
and
repz
daa
dec
mov
adc
sub
xchg
push
xchg
ret
aam
inc
in
sub
push
cmp
sahf
test
ror
add
push
xor
mov
xor
adc
mov
add
addr16
push
inc
ss
lock
fisttpll
imulb
int3
sub
mov
sub
sbb
mov
adc
movsl
sti
and
jo
cmp
in
jbe
and
shlb
jnp
je
add
popf
push
and
imul
pop
je
repz
pop
cmp
fwait
adc
ja
test
pop
sahf
push
push
stc
mov
push
subb
nop
or
rolb
es
out
test
sub
xlat
sahf
getsec
jae
add
cmp
cmpsb
call
hlt
and
mov
mov
pop
and
and
aas
ret
sti
or
in
pop
sbb
jae
mov
mov
fcmovu
sahf
add
aaa
fstpl
xchg
xlat
xchg
jge
mov
in
add
lahf
stc
ljmp
rcrb
fsubrs
sbb
jae
call
rol
loope
jae
pop
cmp
aad
mov
xchg
push
dec
iret
adc
or
sti
cmc
lds
sub
sub
mov
clc
and
cld
xor
mov
test
sbb
pop
and
stos
incl
inc
mov
into
shll
ret
lret
pop
imul
xor
por
dec
vcmpsd
rol
aad
pushf
out
dec
sub
add
xor
xchg
movsb
and
sub
popl
loopne
out
lret
and
cs
add
ds
int3
inc
clc
mov
add
sub
push
sub
pop
mov
loop
pop
fmul
rcrl
pop
dec
lock
inc
out
jle
ljmp
push
lahf
aam
out
mov
xchg
inc
pop
shll
sarl
mov
push
popa
mov
xchg
jne
je
aaa
cmp
push
shll
adc
cmp
mov
or
sub
pusha
push
cwtl
mov
cmp
xchg
xchg
arpl
pop
mov
rcr
outsb
xor
or
dec
jp
xchg
and
mov
or
push
mov
shlb
cmp
push
fisttpll
out
cld
dec
dec
push
aam
aas
mov
mov
leave
sub
out
jns
mov
ds
negb
mull
idivl
loop
rolb
push
xor
jbe
pop
leave
xchg
insl
mov
in
fstp
mov
inc
cs
out
push
mov
lock
clc
testb
dec
leave
popa
rorl
mov
insl
in
lahf
or
and
loop
dec
jb
out
pop
mov
mov
mov
or
in
and
dec
test
stc
jns
add
nop
orb
mov
ss
jle
das
jns
xchg
fs
mov
cmpl
out
rclb
adc
loop
jbe
outsl
ds
sub
adc
data16
pop
cli
push
adc
cltd
inc
decl
mov
in
or
movsl
es
and
divl
mov
icebp
push
jecxz
lea
push
stc
and
mov
inc
pop
fcompl
lods
leave
dec
push
sub
sbb
stc
test
mov
mov
lret
pop
cld
cwtl
or
test
dec
mov
add
xchg
ljmp
or
rcrl
adc
xchg
inc
ja
testb
or
out
mov
int3
in
test
cld
dec
adc
and
das
mov
pop
xor
aam
pop
mov
xor
pusha
inc
fidivrs
sti
mov
ret
repz
rcrb
mov
iret
adc
sub
push
dec
icebp
fwait
test
sub
test
or
or
sub
mov
xlat
add
jl
cmpsl
or
add
in
jno,pn
sub
js
popf
inc
and
xor
pop
jne
xchg
adc
jmp
pop
pop
pop
fwait
jb
pop
gs
push
add
dec
or
insb
pop
aad
xor
add
lea
aam
jge
ret
and
aas
jmp
mov
jae
push
imul
push
and
mov
cmpsl
lcall
aaa
sbb
or
inc
jne
dec
jne
xlat
xor
shlb
stos
sub
cmp
push
fidivrl
imul
test
mov
ret
js
mov
leave
and
not
jmp
or
push
je
arpl
pop
pop
xchg
repz
fdivl
xchg
cmp
lret
in
insb
dec
das
dec
cmp
lret
xchg
lds
mov
mov
jecxz
xor
adc
arpl
or
ja
mov
sub
stos
xor
adc
icebp
sbb
xchg
sbb
inc
sub
incl
pop
repnz
pop
jmp
lret
fldt
and
jl,pn
mov
call
mov
add
test
pop
lret
jnp
test
sub
mov
dec
test
std
dec
mov
divl
rcll
xchg
cmp
push
jb
loop
mov
insl
insb
mov
mov
test
push
or
imul
imul
fs
xor
in
icebp
push
shll
mov
push
inc
shrb
inc
xorl
push
jecxz
xor
dec
je
mov
enter
imul
fstpt
and
dec
lret
out
fcompl
cmp
fs
into
and
xchg
movsb
sbb
decl
out
ds
decb
dec
mov
jb
push
in
fstp
add
mov
call
movsl
cmp
dec
mov
mov
subb
push
loopne
adc
dec
pop
sub
out
pushf
pop
and
mov
sbb
cmp
lods
mov
cmpl
pop
daa
hlt
jne
cmpsb
mov
out
and
movl
int
leave
mov
int3
arpl
add
adc
sbb
push
in
pop
mov
es
pop
lock
stos
pop
sub
popa
out
sub
xchg
popa
loop
ror
push
push
test
ret
cmpl
jg
outsb
insb
pushf
sub
ds
xchg
outsl
sahf
pop
int3
dec
test
jae
pop
and
sbb
je
cmp
cmp
mov
mov
mov
push
push
ja
lcall
insb
xchg
int3
pop
scas
add
pop
addr16
clc
dec
sbb
pop
inc
ja
movsb
mov
xor
pusha
js
lds
xor
ss
ljmp
dec
mov
fcoms
sbb
imul
outsb
mov
or
dec
jp
inc
lahf
inc
outsb
add
pop
xchg
mov
or
lret
cld
stos
mov
xchg
sbb
popa
hlt
mov
jp
add
jle
adc
iret
scas
in
dec
push
mov
dec
sbb
dec
mov
je
js
mov
mov
mov
inc
into
cmc
xchg
xchg
add
and
adc
mov
mov
mov
adc
xchg
pop
test
hlt
bound
in
repnz
pop
cwtl
pusha
je
xor
mov
push
lcall
cs
inc
jno
ljmp
cltd
ds
sbb
stos
fistpl
mov
mov
jl
pop
mov
sbb
mov
jmp
test
sub
loope
lcall
push
aam
nop
inc
into
pusha
popa
imul
icebp
in
dec
test
mov
aad
stos
mov
jmp
pop
and
mov
gs
mov
push
gs
scas
jne
adc
push
data16
push
mov
inc
xchg
in
arpl
and
cmp
mov
inc
testb
shlb
loop
jp
mov
pop
adc
arpl
loop
cwtl
dec
xchg
inc
add
sub
fistl
mov
xchg
out
repz
icebp
in
call
inc
dec
mov
imul
inc
xor
dec
lds
push
jle
mov
inc
add
sbb
adc
sub
daa
into
lods
leave
adc
outsl
int3
mov
lret
xchg
addb
jecxz
mov
pop
cmp
dec
cmp
lcall
ja
adc
iret
popf
lret
addr16
push
push
sbb
push
into
xor
shrl
xchg
xor
call
insb
fwait
leave
cwtl
mov
pop
jp
fadds
cs
cmp
rcrl
cmpl
cmp
pushf
pop
mov
bound
pop
ret
inc
lret
int
div
movsl
ficompl
push
ret
sbb
enter
push
add
scas
test
jl
es
shl
xor
mov
insb
shl
fdivr
flds
push
rorb
sub
daa
cmp
mov
call
lods
pop
jb
mov
cmpsb
dec
xor
mov
pop
imul
sti
movb
mov
mov
stc
inc
inc
cmp
notb
dec
cmp
orl
push
push
adc
mov
jl
hlt
adc
adc
sbb
sbb
dec
pop
repz
mov
repz
and
mov
pusha
add
sbb
sarl
int3
jne
hlt
arpl
adc
hlt
mov
dec
cld
lods
ret
loopne
jp
jns
lret
fmul
inc
decb
mov
leave
pop
in
into
xchg
mov
xor
add
mov
mov
add
pop
pop
mov
mov
mov
jmp
data16
fdivs
ds
scas
xlat
call
adc
and
mov
scas
repz
inc
or
push
lea
mov
inc
fidivrs
cwtl
adc
loop
mov
xchg
jle
xor
icebp
insb
jmp
sbb
pop
aam
pop
lods
into
mov
adc
and
mov
inc
outsb
mov
ss
sbb
inc
lahf
sub
and
lcall
inc
out
iret
jle
jnp
push
jb
idivb
mov
les
cwtl
jne
dec
mov
int
jae
shrl
ss
xchg
ljmp
hlt
mov
outsb
or
xchg
lock
cmc
xchg
adc
add
cmc
cmp
fisubl
pop
movsb
notb
sbb
dec
dec
xchg
pop
jno
pop
add
ja
rcll
sub
xor
push
push
cmp
call
mov
mov
jb
pop
pop
icebp
and
jmp
outsb
imul
out
mov
les
mov
rclb
lret
das
jno
pusha
jecxz
pop
sbb
pop
cld
hlt
jle
out
pop
and
mov
lds
push
rol
mov
jecxz
in
js
lcall
sub
mov
icebp
add
bound
mov
xor
in
inc
popa
or
cmpb
test
jge
mov
clc
adc
outsb
repnz
fs
xor
ds
or
setae
into
pop
jmp
sahf
sub
mov
bnd
cs
mov
stos
pop
rcrb
push
repnz
jle
add
test
xor
jmp
mov
cmp
lret
adc
out
dec
addr16
enter
mov
push
loopne
push
fs
rcrb
push
arpl
or
add
fs
xchg
pop
sub
in
mov
cmp
push
jg
loopne
push
ja
aam
xchg
or
into
mov
cwtl
cmp
push
imul
in
sarb
adcl
repnz
add
lret
ja
push
movsb
pop
sub
arpl
sti
or
jno
fidivrl
cmp
repz
cwtl
repz
ret
mov
js
push
movsb
jg
popa
jns
int3
push
xchg
cmp
jle
xor
sub
fucomip
lret
dec
pop
inc
adc
push
test
test
jae
imul
add
pop
mov
nop
js
push
sbb
lods
stc
fdivrl
push
pushl
xor
pop
xchg
adc
adc
push
pop
movsb
push
push
push
cmp
xchg
push
arpl
inc
dec
das
mov
sbb
gs
inc
fidivrs
dec
dec
lcall
mov
pop
and
outsb
dec
push
adc
sbb
or
jl
enter
fs
adc
mov
out
dec
cwtl
xchg
je
jne
mov
dec
sbbl
dec
inc
div
xor
push
aaa
mov
sahf
xlat
jmp
inc
insb
loope
enter
sti
pop
mov
mov
mov
inc
jns
add
add
inc
pop
out
jl
fwait
outsl
iret
inc
or
push
aad
stc
sub
sti
dec
in
jnp
sbb
sub
jno
js
mov
and
inc
jno,pn
out
lea
push
sti
dec
mov
ja
or
xor
popf
fcmovu
or
mov
sub
leave
dec
cs
sub
add
mov
sub
dec
mov
arpl
jns
cmp
fucomip
adc
imul
cmpsl
minps
xchg
mov
xor
popf
adc
mov
adc
xchg
jb
mov
or
add
call
or
fimull
cmp
mov
sahf
inc
sahf
in
push
out
stc
clc
popf
push
test
jnp
add
fsincos
mov
xor
jge
aam
fsubrl
jg
call
out
mov
fwait
cmp
adc
xchg
fdivl
movl
cmp
jecxz
gs
adc
mov
daa
cld
mov
cmp
cli
pop
pop
outsl
mov
inc
mov
pop
cmp
shlb
stc
add
idiv
jnp
shl
and
imul
scas
push
lahf
aas
dec
pop
add
push
ja
cmc
lods
jl
cmp
iret
test
test
jg
dec
inc
aam
xchg
into
fsts
loope
jnp
push
push
sbb
dec
pop
xchg
inc
cmp
pop
stos
je
ja
pop
jne
add
pop
sub
mov
pop
in
inc
shlb
adc
cmp
test
ret
test
movsb
icebp
mov
pop
mov
cmp
scas
sbb
mov
push
fldcw
push
shl
in
mov
jp
pop
mov
pop
pop
pop
cmp
adc
test
repnz
loopne
mov
outsb
push
mov
pushf
cmp
jp
bound
push
mov
add
aaa
push
push
out
xor
loop
out
inc
ret
fwait
sub
call
push
cmp
xor
dec
mov
ret
and
inc
inc
jno
mov
or
ljmp
int3
pop
loop
push
ret
lods
and
push
mov
and
sbb
iret
shrl
stos
jp
and
subl
push
adc
stos
adc
outsl
xchg
ja
clc
mov
js
cmp
sub
pop
out
mul
sub
adc
mov
inc
inc
popf
jl
popf
in
dec
xor
mov
repz
pop
inc
imul
and
into
jb
mov
adc
leave
xchg
jns
xor
sbbb
xor
orb
or
mov
clc
int3
jge
inc
negb
adc
mov
cmp
les
lds
fwait
push
cmp
pop
notl
outsb
xchg
into
or
cwtl
sub
inc
int3
push
jle
or
fwait
xchg
int
push
fisttpll
push
sahf
pop
adc
aaa
jbe
sub
pop
imulb
das
shrb
imul
pop
inc
jb
or
mov
push
or
es
mov
call
dec
xor
ret
mov
iret
arpl
lahf
mov
xchg
and
sub
dec
lcall
sub
arpl
in
arpl
cmpsb
movsb
imulb
xor
mov
loope
and
xor
adc
outsl
data16
daa
cltd
xor
sbb
sub
sahf
sub
add
cli
movsb
jecxz
outsb
xor
movsb
mov
and
adc
pop
rcrl
mov
in
jbe
pushf
ret
je
dec
push
insb
mov
iret
pop
cmp
or
add
mov
xchg
pop
je
outsl
out
sbb
xchg
into
addr16
mov
aaa
fnstenv
adc
adc
push
xor
mulb
rcr
xchg
clc
jg
xlat
jp
xor
xor
or
das
pushf
xchg
je
fiadds
les
fnsave
into
adc
jl
jmp
and
loop
push
inc
dec
mov
sbb
orb
sub
sbb
mov
pusha
jns
or
in
pop
or
gs
inc
mov
push
inc
add
leave
out
jb
in
pop
call
jbe
cli
iret
sub
inc
loope
cmp
icebp
xor
adc
shl
xlat
jo
sbb
loop
cli
imul
shl
mov
mov
mov
pop
and
mov
pop
sub
push
or
ret
sahf
sub
inc
or
cmp
jae
pushf
lahf
jns
data16
inc
sti
sarb
and
adc
arpl
iret
addr16
mov
push
es
sbb
cwtl
adc
ret
sahf
test
push
cmpsb
cmp
push
push
adc
mov
inc
fsub
inc
push
dec
loope
inc
test
std
pop
clc
adc
xchg
ficoms
into
dec
sbb
cwtl
out
mov
xchg
jmp
cmp
cli
sub
repz
push
addr16
lret
lds
jp
fisubl
pop
mov
shl
xor
xor
inc
inc
enter
inc
xchg
pusha
or
dec
cmpsb
ret
gs
aaa
dec
jle
test
inc
ffreep
cmpl
add
scas
daa
jmp
adc
js
jecxz
std
cmpsb
cld
push
sub
sbb
or
adc
mov
fisttpl
cmp
jnp
cli
int
out
aam
imul
stos
icebp
pop
dec
out
xchg
adc
jne
sarb
jne
and
xchg
push
inc
jl
xor
push
push
mov
shr
lock
adc
push
add
dec
jl
push
mov
dec
mov
repnz
movsb
fwait
ds
and
call
add
cld
or
sarb
dec
rcll
shll
cwtl
pop
in
rcll
arpl
jnp
sub
scas
and
pop
jo
xchg
stos
cmp
mov
inc
adc
mov
cmp
loope
enter
mov
pop
xchg
pusha
fldlg2
out
lds
inc
inc
bnd
lcall
loop
or
push
xchg
jns
cmp
xor
xchg
test
sub
mov
or
mov
std
sti
add
sbb
xchg
mov
cmp
pop
inc
jecxz
push
adc
sub
insl
clc
scas
push
fsubrl
testl
notl
xchg
fmul
insl
out
rolb
cmp
xchg
sub
or
icebp
push
mov
adc
pop
imul
xor
and
inc
push
movsb
aas
xlat
jl
mov
arpl
sbb
xor
scas
ror
inc
jo
stos
dec
in
jae
pop
loop
mov
mov
pop
and
jbe
inc
call
lret
and
jp
repnz
inc
out
shlb
or
dec
cmc
inc
inc
and
jbe
popa
arpl
fisubl
cs
inc
sbb
sbb
int
push
fwait
iret
lock
out
add
add
outsb
aam
xlat
in
sbb
repz
or
aad
inc
cmp
ja
ret
pop
inc
cmpsl
roll
mov
int3
jo
pushf
cld
sub
xor
push
or
inc
xchg
mov
or
pusha
cmp
pop
dec
xchg
adc
inc
test
push
mov
stos
cmp
stos
lret
xor
pop
dec
add
lret
cmp
jns
push
add
sbb
aaa
dec
loop
jb
pop
adc
xor
or
xor
imul
test
mov
dec
es
aaa
dec
cmp
stos
push
inc
add
sub
mov
popa
adc
xchg
mov
add
xchg
mov
xor
pop
fldln2
movsl
push
outsl
cs
xchg
int3
bound
cmp
jae
pop
sahf
divb
and
leave
loop
xchg
lods
mov
xchg
adcl
jae
push
outsl
roll
jp
jb
xor
push
loopne
ss
jmp
cmp
addl
jno
mov
inc
std
xchg
mov
icebp
stos
jmp
jo
repz
sbb
pop
in
jae
enter
out
mov
push
popf
mov
adc
cmp
add
ljmp
lea
aam
jg
add
hlt
int
out
adc
cmp
jno
shlb
sar
fadd
mov
fs
repz
inc
mov
fs
inc
cmpsb
push
xor
shrb
jne
push
outsl
fldl
outsb
pop
jbe
insl
dec
movsb
cmp
jo
pop
xchg
clc
adc
adc
push
adc
dec
push
fnstsw
lret
xchg
and
jg
ret
icebp
lods
out
pop
stc
int
mov
jg
das
mov
push
cmp
outsl
push
lcall
stos
lods
sahf
add
adc
xor
cmpsw
inc
adc
ret
xchg
push
sbb
in
in
popw
sbb
push
jg
in
loop
dec
int3
add
mov
xor
fldcw
fsub
nop
fwait
out
cmp
flds
xchg
lretw
adc
jmp
jge
iret
js
out
loope
ret
pusha
sub
nop
fdivs
inc
jb
jl
sbb
dec
push
push
ret
mov
test
clc
jl
inc
xchg
pop
out
cmp
jo
enter
mov
xchg
cmpsb
fists
movl
jne
lahf
mov
out
cmp
jne
sbb
js
or
jmp
xchg
dec
add
or
mov
xor
inc
imul
test
aas
icebp
insl
shl
sbb
push
mov
inc
or
js
cld
fwait
cs
or
mov
jmp
mov
cmp
cmp
or
push
xor
ficomps
outsb
sub
icebp
sbb
push
es
mov
in
movsb
mov
mov
jle
imul
sbb
int3
rcll
lods
movl
and
add
std
mov
xor
dec
jg
fcompl
daa
loop
xchg
orb
xor
fwait
cwtl
aas
inc
clc
add
inc
pop
cmp
sub
pop
mov
xor
fwait
loopne
ret
adc
fisttps
test
sarb
std
out
xchg
sbb
lahf
iret
jo
and
cmp
mov
push
insb
add
push
xor
imulb
ficoms
push
cwtl
mov
out
pop
or
addl
push
sbb
out
pop
xchg
xlat
sbb
dec
popf
mov
sub
ret
sbb
xor
lds
pop
dec
mov
pop
mov
cmp
clc
mov
push
xor
clc
cmpsb
imul
push
sarb
mov
pop
and
jb
mov
lods
cli
add
or
xchg
sbb
fistpl
mov
out
mov
adc
pop
mov
hlt
jae
adc
mov
cs
add
ljmp
sti
xlat
or
mov
cmp
enter
push
jae
inc
shlb
or
aam
leave
in
iret
sub
int
pop
and
loopne
aas
mov
fmul
rcl
or
aad
mov
pop
subb
adc
adc
test
loopne
mov
not
jp
loopne
dec
test
imul
sbb
nop
sub
rcrl
xchg
scas
insl
bound
mov
stos
rcrb
xchg
sub
cmp
xchg
cwtl
subb
idivb
fiadds
ret
add
leave
mov
mov
inc
push
cmpsl
leave
dec
pop
shrl
xchg
hlt
add
xchg
enter
nop
adcl
movsb
data16
aas
sub
aaa
stos
jne
call
mov
jae
callw
push
or
in
inc
mov
or
mov
leave
sbb
sbb
inc
xor
adcl
aas
rol
mov
adc
xor
sbb
hlt
scas
mov
outsl
cmpsl
decb
dec
scas
jle
adc
mov
shl
mov
sbb
repnz
pop
push
sbb
sbb
cwtl
pusha
shl
cmp
add
xchg
fistps
imul
push
and
enter
enter
popa
sbb
inc
xchg
and
out
imulb
sub
mov
loop
mov
jl
int
push
or
sub
inc
pushf
out
shrl
mov
mov
cmp
mov
xor
or
mov
imul
push
sbb
mov
out
lret
jge
aaa
rcrl
negb
jb
call
pop
fcoml
push
movl
mov
or
aaa
xlat
cmpsb
ficoml
dec
sub
cmp
xlat
aas
mov
jg
jns
pushf
fbstp
dec
mov
cmp
xchg
and
sub
pop
mov
aad
ljmp
xchg
xor
mov
lahf
push
daa
or
adc
icebp
push
sub
pushf
lret
xchg
dec
aaa
call
and
jo
in
pop
repz
add
sar
and
jle
dec
push
inc
fdivrs
push
and
pop
jp
out
adcl
sub
loopne
mov
lret
pop
popf
arpl
xor
addr16
cld
sbb
stc
sub
mov
ljmp
cld
adcb
fstpt
outsl
mov
sbb
mov
inc
push
lock
clc
lahf
inc
das
push
sub
xchg
clc
in
mull
jmp
jne
ficoml
inc
inc
js
mov
adc
addr16
xor
sti
rol
inc
xchg
adc
outsb
lret
roll
mov
xchg
popa
jae
data16
xor
or
insl
movsb
xor
mov
imul
dec
inc
sub
mov
jb
adcl
pop
outsb
lock
les
and
sub
cmp
jb
loope
and
and
out
cmpsb
pusha
and
push
pop
add
dec
xor
in
push
aad
sarl
fstps
mov
stos
inc
mov
aad
out
addr16
sar
pushf
push
repnz
cwtl
adc
mov
add
leave
lret
jl
rcr
inc
outsb
cmc
stc
cs
push
mov
xor
aad
jo
xchg
cmp
cltd
in
mov
lods
das
mov
pop
push
inc
scas
gs
mov
js
lret
mov
mov
or
in
cmpsb
pop
dec
mov
fstps
inc
scas
pushf
fdiv
mov
or
mov
or
imul
sub
stos
dec
mov
lds
mov
inc
jns
loope
jecxz
inc
lods
clc
push
nop
test
push
mov
mov
mov
mov
mov
lret
cmp
inc
jnp
outsb
inc
stc
push
mov
or
adc
imul
mov
mov
shll
inc
popf
pop
mov
pop
lret
and
iret
mov
ljmp
insl
inc
add
dec
leave
cld
cmp
in
cmpsl
xor
sbb
testl
pop
movsb
bound
xor
mov
cmp
jne
loop
cli
sbb
negl
mov
jno
movsb
loop
aad
lcall
rolb
frstpm(287
js
cmpsb
xchg
cwtl
loop
sub
cmp
and
mov
stos
pusha
fs
xchg
ljmp
pop
sub
mov
cmpsb
add
xchg
lahf
push
xlat
and
sub
lret
ja
je
jecxz
push
dec
jb
and
inc
dec
rolb
sbb
das
lods
cs
dec
imul
sub
mov
shl
repnz
jo
xor
fmull
xchg
mov
pop
jge
ja
negl
push
cltd
or
cmp
jo
sti
xchg
lods
mov
loope
cmp
fsubr
js
inc
pop
push
inc
and
sahf
mov
bound
jb
fwait
mov
data16
mov
lahf
iret
sbb
test
test
adc
xor
jo
enter
jo
stos
inc
xchg
pop
jp
addb
or
loopne
jg
inc
ss
into
or
or
rol
mov
add
sub
aad
xor
rclb
adcb
jecxz
shl
stos
inc
inc
pop
jl
mov
mov
ror
lea
dec
sbb
sti
mov
stos
cld
jl
xor
lock
leave
stos
or
addr16
je
rorl
jnp
jg
cld
adc
pop
mov
mov
add
xchg
mov
dec
cmp
loopne
jg
fistps
xchg
dec
or
stos
icebp
fnstenv
repz
xchg
cmpsl
jb
push
movsb
mov
outsl
lock
nop
js
movsb
adc
mov
dec
cwtl
add
adc
jne
or
in
dec
mov
xor
and
gs
cmp
mov
mov
rorb
sub
push
fs
out
pop
jnp
xchg
add
test
mov
fwait
pop
pop
jmp
xor
fcoml
inc
mov
push
xlat
loop
and
cwtl
add
mov
pop
jb
dec
shrb
or
hlt
mov
rcr
pop
das
pop
ficompl
mov
addr16
adc
xor
iret
and
jb
subb
and
mov
mov
push
jg
pop
push
scas
mov
push
cmp
jle
into
push
mov
and
jp
sub
and
dec
test
imul
dec
or
push
adc
inc
inc
mov
adc
cmpsl
fsubrl
cmp
mov
loopne
and
sub
icebp
jno
jbe
shl
imul
push
bnd
push
xor
mov
add
rcll
sar
repnz
es
sahf
lds
in
mov
rcl
and
cld
push
and
and
dec
add
rcll
lds
jl
out
mov
les
movsb
std
add
fists
or
sub
cmpsl
test
movsb
out
jnp
stc
icebp
add
mov
jmp
inc
push
sub
in
jnp
xor
mov
inc
aam
aaa
stos
insb
inc
shll
nop
out
jne
mov
in
aaa
jno
push
jo
imul
test
and
into
mov
xor
jne
mov
pop
shrl
xchg
lcall
add
jne
dec
mov
sub
or
and
xorl
pop
adc
ror
add
mov
lret
push
in
fisttpll
filds
clc
sub
loope
pop
push
imul
jecxz
and
xor
fstps
bound
push
icebp
or
xlat
jnp
pop
jmp
push
gs
int
xchg
mov
test
dec
push
xchg
nop
pop
loop
pop
fildl
fs
push
dec
test
fsubp
andb
cmpsb
in
pop
aas
push
pop
push
dec
in
test
dec
sbb
dec
out
xor
or
stos
cmpsl
in
shrb
es
xchg
push
stc
mov
cs
or
lock
mov
cmpsb
mov
popf
sub
sub
add
nop
pop
or
jbe
add
or
scas
nop
sbb
insb
push
push
sub
cmpsl
ss
add
int3
sub
ljmp
inc
movlhps
decb
fsubl
inc
dec
pop
add
cmovle
and
pusha
iret
dec
adc
ds
xor
jo
or
insb
imul
inc
xchg
in
clc
loopne
push
addb
pushf
pop
leave
xchg
in
lods
sub
test
xchg
mov
enter
out
push
cli
jbe
andl
sti
dec
mov
mov
cmp
orl
ss
jg
outsl
test
push
fyl2x
loopne
jo
shlb
mov
pop
and
push
call
cmc
sahf
movsb
mov
repnz
cli
add
movsl
ds
jmp
pop
cli
addl
mov
mov
imul
enter
push
xchg
pop
xor
jbe
faddl
dec
shll
pop
jmp
add
js
inc
and
shrb
scas
jne
out
mov
repz
sbb
jb
push
push
mov
pop
dec
and
sbb
loopne
rclb
pop
add
shrb
addr16
sub
push
jb
test
test
mov
loop
sub
outsl
nop
lcall
or
nop
rolb
aad
ljmp
sbb
push
inc
sub
sbb
cmpsl
repz
das
out
loop
stos
dec
lret
fldenv
adc
inc
cltd
fidivrs
push
dec
adc
aam
out
and
inc
ljmp
lds
push
dec
sti
test
adc
sbb
stos
popf
cs
xchg
cmp
jg
xchg
pop
ror
cmp
push
mov
xchg
call
push
out
add
movsl
jo
jo
ja
enter
add
inc
in
std
or
sbb
dec
xchg
xor
cmp
inc
sub
stos
adc
gs
lret
test
mov
push
dec
rclb
add
add
jae
xchg
dec
sbb
pop
mov
hlt
mov
fstp
addl
fwait
dec
mov
insl
fwait
repnz
stos
insl
pop
add
cmc
add
aad
add
shlb
cwtl
inc
lods
dec
gs
pop
data16
cmp
pop
dec
mov
jg
loopne
mov
push
out
cmpsl
pop
repz
das
sub
and
xor
add
push
out
pushf
pop
dec
movsl
lods
push
mov
lods
cltd
fdivl
pop
sbb
or
jne
sbb
xor
jns
test
mov
stc
stc
mov
arpl
fwait
adc
sub
adc
add
push
mov
adc
sbb
sub
mov
or
dec
xchg
push
cmp
inc
lcall
daa
mov
adc
stos
sub
xor
shl
xor
mov
movsl
push
xorl
scas
popa
wrmsr
inc
dec
imul
xchg
mov
imul
mov
aaa
scas
into
inc
pusha
out
lods
pop
testb
shld
inc
cmp
ss
mov
jae
aam
add
leave
dec
cli
sub
test
mov
xchg
in
mov
aam
xchg
jno
lsl
mov
repz
jmp
xchg
clc
mov
addr16
pop
mov
bound
xchg
stc
outsb
inc
cltd
pop
jmp
rcrl
lahf
push
in
in
ret
les
ljmp
pushf
test
sub
xchg
sti
jmp
hlt
cmp
dec
mull
out
push
mov
ret
xchg
or
orl
out
jae
push
outsb
xchg
or
push
or
ret
into
cmpb
xor
push
ss
push
xchg
sub
mov
sbb
pop
fwait
idiv
mov
repz
test
pop
test
cli
lods
into
aaa
dec
push
in
mov
clc
and
inc
add
add
pushf
and
inc
mov
adc
cmp
cmp
adcl
mulb
lds
loopne
dec
cmp
pop
lahf
cmp
mov
mov
push
hlt
movsl
mov
loope
lcall
in
ret
xor
dec
lods
add
js
xchg
ljmp
jle
outsb
cmc
je
push
pop
mov
mov
or
xchg
and
mov
mov
ds
arpl
loop
pop
pop
jp
mov
ljmp
mov
sarb
cmpsb
inc
out
stos
and
jmp
adc
stos
jbe
and
jo
int3
fisubrl
push
loope
mov
daa
xor
mov
dec
mov
jmp
cmp
je
push
jle
fwait
push
push
add
push
jno
lods
das
fsubs
cs
cmp
mov
pop
push
sarb
fs
push
daa
cmpb
push
push
mov
push
data16
sbb
rol
cwtl
xor
nop
pop
dec
icebp
mov
icebp
push
mov
mov
cli
rorl
js
xor
inc
scas
mov
add
mov
mov
es
push
push
scas
data16
push
mov
jno
ficompl
mov
ja
lea
cltd
jae
xchg
adc
andb
dec
push
push
movsl
test
shl
fs
test
xor
mov
in
mov
xchg
shrl
or
pop
inc
or
dec
fistl
xlat
in
mov
scas
ss
jns
xorb
jns
sahf
jecxz
les
cli
sti
out
inc
shll
shll
fdivs
out
xor
cld
pop
xor
or
push
jo
sbb
xor
lock
cmp
push
fists
jne
xor
inc
dec
pop
pop
lods
std
xchg
xchg
pop
sub
pop
fdivl
movsb
xor
xchg
pop
jmp
sbb
insb
push
inc
enter
mov
rorb
mov
stc
jecxz
jo
or
and
push
inc
test
xchg
push
sub
fcomp
sbb
js
js
mov
bound
aas
pop
jbe
fldl
mov
dec
into
lea
call
lret
and
jp
in
ja
pop
lds
es
fwait
and
or
lds
mov
pop
aam
into
subl
jbe
icebp
cmp
push
jne
cmc
ss
mov
in
loope
cmp
imul
and
std
mov
mov
fnstenv
jmp
jne
adc
add
bound
sbb
loop
aas
call
mov
mov
mov
mov
jge
shl
lcall
pop
notb
xchg
dec
sarl
and
jmp
cmpsb
mov
repz
adc
sbb
ja
insl
scas
insb
sub
mov
insl
xor
add
fbld
xor
jmp
movl
jbe
dec
jle
add
vaddpd
popa
scas
dec
push
fmul
adc
lods
xchg
jno
cmp
push
cmpsl
movsl
or
or
sahf
sub
inc
pop
repz
ss
and
mov
mov
jnp
out
sbb
inc
cmp
push
test
fs
pop
lret
fs
hlt
lock
and
mov
ja
movsb
mov
daa
mov
mulb
jae
jecxz
sbbl
ljmp
sub
inc
gs
sti
lock
bnd
xchg
enter
pop
daa
inc
or
addr16
xchg
and
fdivs
sahf
sub
pop
ljmp
ljmp
push
pop
mov
repnz
xchg
sahf
lea
jo
pop
mov
xchg
popf
xor
js
nop
jmp
shr
jge
stc
jbe
ret
and
leave
push
mov
dec
int
sub
pop
sub
inc
xchg
bswap
fsub
pextrw
jnp
cmp
sbb
add
cmp
push
out
lea
mov
push
inc
and
mov
pusha
lock
out
push
pop
cld
cmpsb
xor
push
jbe
in
add
adc
add
xchg
aaa
sbb
mov
jne
inc
filds
adc
dec
mov
mov
outsl
cmp
inc
mov
stos
cld
into
inc
call
out
push
add
rclb
dec
scas
test
ret
jp
add
push
es
push
mov
mov
daa
adc
pop
push
jecxz
outsb
and
mov
dec
push
mov
int3
sbb
lea
lcall
xchg
add
pop
xchg
xchg
mov
mov
adc
dec
mov
or
in
stos
mov
mov
inc
pop
ljmp
push
push
mov
cli
movsbl
pop
mov
dec
int3
cs
dec
leave
mov
pop
hlt
adc
cwtl
add
xor
lret
adc
or
push
inc
sub
ret
mov
xor
das
cmp
out
cld
jmp
ret
ror
je
adc
cmp
in
jbe
shrb
mov
jne
sub
mov
mov
mov
mov
jmp
data16
jo
inc
loop
sbb
mov
inc
rcll
aad
aaa
mov
js
mov
jbe
dec
mov
mov
sti
mov
jb
int3
je
loopne
cmc
pop
test
cmp
sub
inc
fwait
mov
or
pop
lcall
push
jne
sti
pusha
ret
aam
cmc
call
sub
pushf
imul
js
mov
push
aam
pop
jecxz
nop
bnd
stos
repz
or
add
adc
das
pmaxub
mov
arpl
int3
loope
push
cmp
roll
out
push
push
aas
cld
rcrb
mov
push
scas
in
xor
adc
fucomp
sarb
inc
out
sub
pop
ret
adc
adc
in
fisubrs
push
insb
aas
nop
push
jl
push
dec
cltd
lea
mov
cmp
inc
pop
add
and
fldl
movsb
fs
loope
bound
fbld
dec
dec
scas
pop
cmp
pop
inc
sub
jae
movsb
xor
mov
inc
mov
xchg
out
pop
loopne
insb
inc
mov
jo
push
adc
add
cmpsb
out
add
ficoms
stc
lret
xchg
imul
lods
jo
scas
mov
xchg
mov
js
scas
or
xchg
into
lahf
lea
mov
gs
xchg
dec
sbbl
inc
push
xchg
in
movsb
jno
push
mov
push
sbb
mov
mov
jnp
in
sub
movsb
inc
mov
clc
xchg
in
pop
or
jo
adc
sbb
and
rorb
jge
add
imul
and
les
ss
inc
sub
add
scas
cltd
cld
inc
and
in
push
lea
xlat
inc
clc
out
jecxz
aam
push
fadds
sbb
pop
test
add
inc
dec
dec
jg
inc
cmp
or
aaa
dec
add
adc
in
imul
fcomp
adc
shll
cmpsb
xor
push
addr16
cmp
adc
and
mov
fdivs
addb
repnz
fidivs
movsl
xor
sub
popa
xchg
mov
shll
xor
push
cmc
enter
scas
dec
pop
inc
lahf
data16
je
mov
jb
xor
inc
out
cmp
jns
ret
xchg
lret
push
pop
pop
enter
ss
sbb
cwtl
loopne
push
cltd
xchg
iret
mov
scas
fadds
push
add
pusha
mov
sub
mov
and
out
test
push
jae
cmp
mov
dec
jmp
loope
dec
sub
inc
mov
int3
lea
jge
out
pop
mov
in
fcoml
jle
dec
repnz
mov
mov
push
sub
rclb
repnz
sub
or
jmp
jbe
fstpt
aad
push
sub
mov
aam
aad
fwait
push
xchg
popf
dec
jp
in
xcrypt-cbc
cmpsl
push
fildll
sarl
adc
or
adc
xchg
dec
pop
movsb
adc
repnz
test
repz
inc
jp
jno
addb
sbb
stos
xor
vpshufhw
insl
xor
xlat
insb
dec
popa
out
mov
mov
sub
sub
clc
or
mov
stc
sub
adc
add
dec
push
and
lock
push
imul
fidivl
adc
lds
stos
sub
xchg
pop
pusha
mov
xchg
jmp
inc
lret
rcrl
mov
sbb
shrb
pop
cmp
call
add
nop
cmp
mov
push
xchg
jbe
mov
jg
jns
in
out
mov
nop
scas
add
xor
or
stc
fldcw
pop
enter
lcall
sbb
fwait
sarb
add
sahf
pop
out
xchg
adc
aas
pop
aad
mov
cmp
dec
add
and
fnstsw
jnp
insb
and
jne
mov
mov
add
stc
pop
enter
and
enter
mov
or
and
cmpsl
int3
cmp
outsb
sbb
push
shlb
sarb
subl
ret
dec
out
mov
inc
lea
jp
enter
lcall
fs
jno
movb
cmp
push
cld
pusha
mov
mov
insb
cmp
call
cmp
mov
inc
into
adc
sbb
push
inc
aas
dec
and
sub
jbe
cmp
kmovb
pop
aas
bound
mov
stos
xchg
jnp
out
stos
sbbl
sbb
cld
dec
fidivrs
xor
inc
and
orb
nop
xor
mov
cli
aaa
xchg
aad
mov
lods
mov
int3
fisubrs
lret
daa
inc
sub
sti
enter
repz
in
ret
test
js
and
sub
mov
mov
mov
pop
sbb
mov
mov
rcl
sub
fcmovb
imul
dec
movsb
les
cwtl
jne
lahf
mov
lock
pop
jmp
in
pop
sbb
aad
sbb
xchg
xor
add
push
aas
push
mov
loop
cmc
cmpsl
xorb
sub
mov
jecxz
mov
jecxz
je
jns
add
sub
movsl
pop
add
add
xchg
sbb
mov
outsl
cwtl
push
or
outsb
dec
cld
push
mov
jge
clc
scas
lahf
sub
sub
mov
leave
push
data16
xor
inc
push
mov
fs
fists
push
bound
addb
inc
and
and
lods
inc
inc
inc
cmc
mov
dec
ds
push
mov
pushf
int3
mov
mov
loop
mov
in
mov
fstpt
in
mov
scas
jecxz
add
push
inc
adc
iret
xchg
push
add
lea
xchg
test
mov
cmpsb
ficompl
mov
enter
or
inc
lahf
sbb
pop
cmp
jge
add
popa
mov
repz
or
jecxz
dec
imul
pusha
dec
cmp
push
jge
fdiv
out
jno
bound
mov
scas
push
inc
xorl
mov
xor
push
in
and
sub
fs
pop
cmp
lret
mov
std
outsl
jle
xchg
pop
or
sbb
cmp
sti
leave
dec
mov
stos
mov
pop
into
lcall
jae
dec
or
mov
push
mov
adc
test
xchg
adc
and
adc
aaa
js
aas
xchg
mov
mov
loope
mov
cmpsl
fildll
pushf
add
pop
aaa
mov
dec
sub
xor
in
sub
roll
idivl
repnz
push
sub
mov
and
punpckhwd
cld
ficompl
jmp
addb
jmp
and
bound
mov
and
and
insl
popa
repz
inc
adc
add
test
xor
sbb
out
loopne
fsubrl
mov
clc
stos
or
mov
mov
cmp
jb
sbb
cmp
and
loopne
decb
adc
daa
and
xchg
dec
jge
shll
lret
add
and
jge
mov
or
rcrb
xlat
fsubl
xlat
xchg
jge
aad
mov
jg
mov
loope
jp
add
jmp
sub
mov
cld
mov
mov
pushf
lock
lods
add
scas
mov
pop
mov
sbb
xor
pop
outsl
jl
mov
gs
push
fwait
inc
jp
cltd
mov
adc
push
shlb
xchg
dec
sub
jmp
stc
out
sub
fidivs
cmp
dec
js
jae
pushf
fisubs
sti
jp
scas
sbbl
inc
xchg
push
add
in
fs
mov
aaa
dec
and
test
test
jb
repz
push
or
and
ljmp
dec
add
cltd
mov
push
push
xor
jnp
out
jne
xor
jno
aaa
sbb
pop
push
push
mov
je
adc
pop
or
loop
incb
dec
push
push
mov
imul
xchg
inc
aad
test
call
mov
adc
xchg
push
or
ds
insb
fadds
fmuls
ror
pop
xlat
shr
jle
push
push
js
rcll
pop
inc
addr16
jge
xchg
jae
fucomp
pop
inc
clc
negl
pop
popa
leave
shll
push
mov
sarb
in
ljmp
cmpsl
lds
xchg
scas
repz
dec
xchg
cltd
dec
push
in
stos
sub
mov
sti
cmp
push
sbb
fisttps
test
lods
insb
stos
fwait
mov
lea
xor
sub
sub
sbb
bound
shrl
mov
icebp
das
ljmp
sbbb
in
or
data16
add
mov
xchg
sub
xor
sub
repz
pushf
hlt
jmp
mov
sti
pop
loopne
mov
sahf
jge
or
mov
int
push
mov
loop
dec
sub
stos
adc
mov
gs
mov
fadds
pop
ljmp
data16
mov
adc
push
out
pop
sahf
fcoms
clc
jnp
test
shrb
or
xchg
dec
or
mov
sbb
push
call
push
push
movb
push
loope
jmp
xor
daa
dec
or
jnp
dec
cmp
xchg
pushf
ljmp
mov
iret
fs
insl
rol
jecxz
jmp
call
cmc
daa
pop
outsb
stos
and
mov
or
xchg
inc
jbe
lods
std
dec
fmul
and
push
rcrl
lds
loopne
repz
mov
sbb
ficomps
xlat
ja
out
cmp
or
pop
mov
mov
pusha
sbb
sarb
and
js
clc
test
fwait
xor
lret
sahf
stc
rclb
notb
addr16
cmp
or
cmc
mov
pop
jecxz
inc
in
mov
lock
xchg
sbb
inc
and
repz
mov
xchg
adc
lds
sub
cmp
pop
pop
sub
jecxz
push
icebp
bound
inc
jae
shlb
mov
int
out
xchg
jns
sbb
jbe
and
mov
add
daa
jae
jge
ljmp
xchg
enter
sarb
jge
ret
inc
push
jo
mov
sti
jecxz
scas
js
xchg
xchg
repz
enter
mov
push
and
push
push
out
cld
stos
mov
or
pop
mov
xchg
inc
es
rolb
es
leave
lahf
and
inc
out
jle
fistpll
popa
cmpsb
or
mov
mov
and
int3
xchg
mov
aaa
gs
cmp
loop
cmc
xor
adc
in
mov
or
lahf
out
negb
xchg
lods
popa
std
out
xor
pop
repz
cmp
jg
mov
mov
mov
dec
rcr
and
int
cmp
call
sbb
pop
pop
stos
pop
push
out
mov
dec
inc
gs
adc
fld1
jmp
scas
dec
sub
mov
pop
cmp
lret
push
jbe
punpckhbw
enter
adcb
mov
xchg
adc
inc
push
and
les
in
sbbb
xor
xor
adc
and
hlt
shl
outsb
scas
mov
outsb
out
dec
aam
add
in
ret
lret
sahf
mov
jno
add
insl
jle
cs
aaa
pop
xor
insl
pop
divb
and
pop
mov
or
das
orb
sub
cmpsl
leave
in
rep
sahf
dec
lock
cli
ljmpw
add
pop
fldenv
jle
pusha
test
xchg
in
sub
adc
mov
push
push
push
fwait
mov
in
out
scas
mov
popa
sub
jl
inc
gs
and
and
ljmp
scas
or
cmp
icebp
jnp
ret
fs
mov
cmp
cs
xchg
movsb
icebp
psubw
add
shr
inc
pop
adc
fists
mov
lret
mov
inc
movsl
scas
loopne
push
outsl
cli
dec
imulb
cmc
aas
gs
inc
add
leave
mov
jno
imul
std
add
jmp
std
push
ljmp
cmp
pop
popa
pop
fs
pop
mov
stos
fisubrs
mov
jne
bound
daa
ret
or
aas
setae
hlt
dec
push
inc
mov
pushf
xor
adc
push
or
scas
iret
test
push
cs
add
cli
inc
sti
sub
dec
repz
lcall
popa
in
loopne
mov
int3
push
lret
imul
xor
mov
sbb
dec
lcall
inc
call
inc
loopne
js
and
pushf
lcall
sahf
or
push
sbb
loop
lods
sbbl
clc
and
mov
cmpsb
lahf
push
dec
aas
dec
cmp
fimull
xor
sbb
rorb
lds
and
mov
jmp
enter
leave
mov
mov
adc
in
filds
sbb
rorb
loopne
out
repz
cwtl
add
data16
xchg
inc
mov
outsb
cwtl
aam
out
dec
dec
scas
insl
and
test
stos
mov
js
mov
xor
cmc
pusha
pop
xchg
cmpsl
rolb
mov
pop
test
sub
mov
jbe
pop
mov
popf
sbb
jp
movsb
imul
fldcw
add
sub
xchg
adc
test
mov
mov
pop
dec
cmp
daa
js
and
cli
and
rolb
add
inc
stos
daa
in
inc
ficompl
xchg
lock
mov
stos
stos
push
xchg
pushl
mov
out
mov
pop
pop
cs
fildl
or
add
jl
loope
sub
or
pop
sar
in
jecxz
sbb
push
imul
test
ds
imul
fisttpl
push
push
cmp
leave
push
aas
int3
lahf
add
imul
ret
ljmp
stc
popa
sub
xchg
int
jns
mov
lea
xor
or
push
addr16
movaps
mov
loop
int
fstps
cmpb
pop
jle
mov
fisubrl
adcl
jne
xchg
fstl
popf
and
sub
cli
push
mov
lods
mulb
jge
divl
cmpsb
mov
push
repz
jl
data16
hlt
pop
mov
dec
xor
and
ljmp
aaa
fdivrs
dec
mov
and
cmp
or
xor
test
and
lret
dec
in
sahf
andb
adc
dec
cmc
fists
sub
xchg
imul
ja
in
and
pop
rcll
adc
leave
test
call
mov
mov
imul
stos
loope
mov
mov
adc
jae
jp
xorl
or
call
sbb
pusha
xchg
jnp
daa
mov
mov
dec
xchg
jp
jae
jns
gs
popf
xchg
leave
fs
pop
cmp
adc
mov
or
les
call
daa
xlat
pushf
or
push
jge
push
fmull
sub
pusha
ja
cmpsl
sub
cld
or
jae
xchg
fmulp
dec
test
jns
push
into
lahf
mov
and
dec
push
mov
mov
and
dec
or
popf
lods
jae
cli
sbb
xorb
lret
aam
inc
adc
xor
mov
or
in
pop
shlb
es
cltd
loopne
xchg
add
jecxz
mov
loopne
pop
popa
xchg
mov
gs
popl
sahf
popf
ja
adc
lret
adc
hlt
and
mov
nop
inc
jg
mov
push
movsb
sbb
cmp
or
ss
imul
ss
mov
jbe
mov
pop
xchg
leave
add
test
cmp
sti
xchg
jge
fdivp
mov
or
xor
test
sbb
loop
cmpsb
xchg
test
std
pop
pop
dec
jo
inc
test
popa
das
iret
and
xchg
sub
xchg
test
hlt
adc
mov
in
push
push
mov
sbb
lds
mov
sbb
lret
inc
or
push
and
imulb
outsl
sub
stc
or
adc
sti
pop
gs
in
mov
aas
xchg
cs
jle
xchg
inc
movsb
hlt
xchg
call
xchg
repnz
jno
movsb
sbb
cltd
cmp
push
test
pop
ss
cli
or
jge
sub
lds
cmp
aam
decb
inc
cmp
and
rcrl
int
pop
es
mov
sub
adc
stc
push
mov
cmp
xor
xchg
cmp
inc
or
dec
sbb
dec
jb
stc
les
enter
cltd
sbb
add
mov
dec
push
popa
jmp
rorb
push
orb
scas
cmp
xor
insl
push
adc
test
push
push
inc
push
dec
push
cwtl
loop
push
lods
sub
cmp
dec
sbb
mov
int3
leave
outsb
push
repnz
dec
push
enter
xor
popa
adc
adc
add
jg
cmp
ds
out
pushf
pop
js
out
dec
clc
clc
or
imul
jl
sbb
sbb
push
pop
ja
in
mov
mov
cmp
or
push
mov
mov
dec
scas
dec
xchg
lcall
xor
jle
cmpsl
add
add
and
xchg
lret
arpl
add
bound
mov
adc
pop
rorl
cmpsb
lret
pop
dec
adc
loopne
xchg
js
and
fs
adc
adc
push
add
xchg
loope
mov
aam
push
and
int3
inc
add
sub
loop
dec
sarb
or
in
cs
shll
inc
inc
or
ds
xor
xor
xchg
push
mov
popa
leave
inc
lods
jl
out
adc
lds
frstor
push
lahf
shrl
mov
jae
sub
test
fwait
or
data16
aam
adc
fistpll
mov
xchg
mov
inc
or
and
adc
jb
fbstp
push
inc
add
jp
sub
mov
jmp
mov
movsb
or
cwtl
gs
xchg
cmp
in
and
cli
mov
das
mov
test
pop
add
xchg
divb
cmp
lock
cmpsl
push
xchg
sti
nop
gs
popl
push
test
mov
out
in
push
insb
jle
jb
in
test
mov
lea
es
out
push
ljmp
frstor
jae
and
divb
pushf
mov
sahf
inc
cli
inc
sub
hlt
cmp
mov
jb
push
cmp
jo
scas
mov
push
cmc
lods
xchg
shll
pop
and
rcrb
or
pushf
push
or
ret
imul
jmp
sahf
in
xchg
dec
js
test
aad
les
cli
mov
pop
and
pushf
push
or
repz
xor
cltd
push
and
cli
movsl
test
cmp
pop
xchg
outsb
clc
out
xlat
notb
dec
dec
loop
cmpsl
inc
add
inc
fimuls
mov
add
mov
push
ja
int3
inc
pop
pop
sahf
addr16
cmpb
mov
push
cltd
lock
mov
jmp
sub
testb
sub
loopne
sarl
add
rcrl
mov
adc
fucomi
subb
and
adc
fistpl
sbb
jg
fistpl
sub
rolb
and
pop
fs
xchg
jb
lods
lods
add
adc
add
lahf
fisttpll
rcll
push
repnz
clc
sub
aaa
test
add
adc
rcrl
pusha
clc
mov
pop
movsl
push
xchg
sub
mov
push
add
dec
out
or
or
call
scas
or
mov
add
test
shrl
dec
ljmp
aaa
bound
insl
mov
ds
imulb
cltd
out
xor
ret
xor
das
pop
shl
pop
jg
scas
xchg
jle
mov
mov
and
cmpsl
sbb
mov
mov
int
jo
and
and
movsb
out
pop
xor
imul
jge
xorl
sahf
std
mov
pop
pop
int
loop
dec
ficomps
lds
stos
inc
sbbl
or
mov
adc
in
cli
dec
je
mov
mov
loopne
inc
rcrl
int
mov
inc
jle
nop
sub
cmp
pop
lret
sbb
sbb
push
lahf
into
imul
aad
cmp
ja
loop
inc
idivl
cmp
sti
in
pop
inc
xor
push
out
je
pop
dec
push
pop
hlt
push
bound
test
dec
sub
aas
sub
ss
jg
imul
test
test
fwait
mov
lods
pushf
sti
lcall
push
arpl
lods
js
xor
mov
js
sub
push
test
xor
movsl
call
xchg
sub
push
cmp
outsl
lock
aas
mov
adc
xor
pushf
xor
adc
aad
jecxz
sbb
pushf
addl
mov
mov
xor
shrl
sub
clc
jmp
fisttpll
push
enter
push
jle
and
xchg
ret
mov
aas
xchg
mov
stos
mov
or
aaa
and
in
xchg
cmp
stos
sti
data16
int
mov
cmpsb
inc
add
jge
stos
or
xchg
or
ja
lret
cmp
ja
repnz
sbb
cwtl
and
gs
pop
mov
push
and
cmp
insb
sarl
lds
bound
push
or
mov
sbb
fldenv
or
mov
or
lcall
pop
popf
xor
ss
ja
shr
add
inc
jo
aaa
mov
ret
dec
out
push
xor
lcall
cmpsl
adc
out
popa
adc
xor
gs
dec
cli
data16
movl
add
or
xchg
out
mov
mov
adc
js
loopne
pushf
movsb
adc
out
sahf
add
push
clc
mov
jmp
scas
out
mov
push
and
mov
lret
or
xor
insl
sbb
lahf
aam
xor
push
lock
xorl
jmp
imul
fs
xchg
cmc
lret
and
pushf
mov
and
mov
pop
and
xchg
cmc
sub
lods
mov
dec
xchg
xchg
aad
out
pop
cmp
inc
push
imul
mov
mov
mov
pusha
adc
aas
dec
sarb
pop
push
mov
push
xchg
add
cld
fcomip
insb
flds
aad
cmpl
xchg
je
jae
or
sub
mov
pop
jae
dec
lahf
arpl
push
cs
pushf
jne
stc
pop
add
lret
xchg
cmp
mov
mov
add
lds
jo
es
add
mov
jge,pn
mov
rcrl
add
and
mov
icebp
test
jne
jle
rcr
mov
jbe,pn
addr16
jae
aaa
imul
rorl
ret
jns
or
stos
and
cmc
dec
test
cmc
adc
loop
dec
out
or
es
pusha
xchg
adc
ret
xor
dec
push
dec
push
add
sti
and
push
das
jecxz
es
jle
loopne
jne
xor
push
cmp
dec
das
inc
mov
lea
test
test
xor
icebp
roll
es
cmp
and
sub
push
out
xor
dec
jl
call
hlt
or
sub
cmp
push
cmp
adc
push
cs
cli
xor
push
jno
out
mov
addr16
pop
stos
dec
xlat
mov
hlt
imulb
popf
xchg
cli
pop
mov
adc
shlb
cmp
in
jmp
xchg
inc
xlat
sbb
aas
mov
iret
fimull
xor
jge
lds
movsl
or
lock
scas
lods
movsb
mov
aad
int3
in
sbb
xor
mov
push
lret
sbb
cwtl
enter
cmp
insb
push
pop
jbe
jae
and
andb
rolb
add
lcall
mov
add
xchg
push
shll
scas
test
pop
sbb
fistps
clc
adc
frstpm(287
mov
adc
lahf
lock
cld
add
ret
test
stos
mov
loopne
and
dec
mov
pop
pop
mov
andb
scas
ret
add
add
out
and
hlt
adc
addr16
mov
pushl
in
jl
adc
jo
mov
sub
mov
jae
fimull
sbb
dec
clc
fists
fcomip
xor
divb
cwtl
or
inc
push
mov
pusha
insl
clc
and
inc
pusha
sub
imulb
outsb
aaa
or
movsl
movsb
xor
in
and
add
mov
inc
lea
addl
shrb
movsb
fstps
dec
sbb
dec
mov
loopne
inc
mov
mov
out
or
mov
inc
cli
jno
std
inc
pop
lret
push
push
test
cs
mov
dec
mov
dec
sub
push
mov
sbb
or
insl
or
or
shrb
inc
dec
rorb
cmp
lds
ds
test
mov
leave
jge
in
in
cmpsl
hlt
cwtl
jg
jbe
std
movsb
mov
shl
push
nop
jne
mov
and
and
in
mov
ljmp
mov
imul
adc
lret
test
lahf
in
mov
mov
mov
lds
sub
pop
pop
pop
cmp
movsb
jo
cmp
and
xchg
stos
pushf
shrb
adc
jge
shll
add
mov
call
add
iret
subl
sub
xor
aad
stos
fnsave
loopne
movsb
mov
adc
xchg
xchg
sbb
mov
add
fiaddl
sub
dec
aas
loope
sub
mov
pushl
into
adc
push
mov
xchg
jmp
test
int
sbb
dec
mov
idiv
rorl
mov
rcr
mov
ret
adc
scas
fstps
lahf
std
cmp
fs
repz
loope
stc
repz
sbb
iret
pop
sbb
mov
mov
dec
das
sub
lods
adc
pop
ret
loope
pop
aam
xor
xchg
jg
mov
lds
xchg
rcll
loop
cmp
sub
call
pop
imul
add
pushf
mov
das
ss
lahf
sbb
pop
pop
jbe
std
pop
add
imul
mov
jno
fwait
icebp
movsl
loop
cmp
xchg
hlt
fucom
sub
int
data16
ljmp
adc
xchg
sbb
push
pop
mov
xchg
jbe
and
es
jl
adc
lods
mov
sti
mov
xor
or
sub
jg
push
insb
sub
push
aad
cmp
cmp
fdivs
push
pop
cli
cmp
jno
int
push
xchg
fstpt
imul
imul
aas
xchg
mov
mov
add
lret
xor
rorl
pop
aad
cmovs
mov
and
dec
rclb
push
mov
out
lods
mov
loope
ret
ds
mov
dec
cs
pop
fsubrs
aas
gs
cmpsb
inc
dec
or
mov
mov
imul
mov
and
add
in
fcoms
adc
in
cmc
xchg
adc
in
or
xor
xchg
imul
in
sub
add
add
sub
and
stc
or
jns
leave
adc
push
dec
inc
out
dec
out
fistl
jbe
lods
lods
pop
lods
add
nop
ds
or
jbe
mov
pop
dec
in
ret
adc
sub
std
xor
push
xlat
lret
pop
in
dec
add
pop
icebp
icebp
cmp
nop
sarb
mov
or
sbb
stos
shll
addr16
imulb
shll
add
dec
dec
jmp
clc
rorb
sbb
pop
arpl
ja
in
pusha
fcompl
mov
sub
frstor
sub
dec
loop
cmpsl
loop
adc
add
hlt
das
dec
push
stos
mov
fmul
jge
imul
nop
icebp
or
mov
inc
bound
scas
xchg
sbb
adc
rolb
adc
ja
ljmp
fsubr
sub
loopne
testl
popf
jle
mov
xchg
mov
negb
inc
shrb
lds
daa
mov
shrl
in
xor
and
cmc
repz
cltd
mov
mov
cmpsl
xchg
cmpsb
and
rolb
insb
sub
push
add
pop
aam
pusha
dec
repz
sub
push
test
mov
daa
xor
testb
lret
popa
jb
ds
loope
ss
pop
push
lods
nop
rolb
pop
and
mov
inc
and
inc
pop
fldt
mov
pushf
jno
loopne
repz
push
outsl
dec
dec
dec
leave
fchs
ja
xchg
stos
les
cmc
mov
fstl
xor
add
out
imul
inc
loopne
pop
cmpsb
inc
jl
adc
leave
aaa
stos
xor
jecxz
aam
scas
sarl
data16
fdivrs
inc
icebp
mov
dec
addr16
scas
insb
push
mov
jno
mov
mov
insl
icebp
ds
sub
inc
std
push
fsubrl
sti
das
jge
aad
loope
popa
daa
xor
iret
aad
push
push
sbb
loopne,pt
leave
add
xor
jl
push
data16
call
gs
shll
dec
test
xchg
xor
movsb
mov
pop
and
enter
adc
cmpsl
fwait
ljmp
ss
mov
lcall
pop
insb
jnp
push
bound
lods
xchg
fisubrs
hlt
mov
push
mov
sub
ss
mov
insl
dec
add
lret
xchg
imul
int
xchg
mov
fisttpl
fcoml
div
jmp
sub
bound
mov
sahf
push
sarl
pop
rcr
mov
daa
cmc
sbb
lock
push
sub
xor
movsb
jae
xchg
pop
sbb
clc
mov
cmp
mov
pop
sahf
leave
ds
fidivl
data16
lret
xchg
aad
pop
sti
jecxz
nop
and
mov
es
ljmp
inc
mov
inc
pop
out
add
enter
fnsave
and
xor
int
push
std
push
hlt
js
icebp
stos
mov
ja
lods
fsubs
add
jbe
mov
xlat
fxch
mov
cmp
lock
out
jbe
mov
lcall
subb
popf
push
bound
adc
mulb
fisttps
idivb
mov
and
jge
cmc
stos
push
in
add
lods
out
cld
movsl
xorb
and
cmpb
dec
pop
mov
xchg
or
mov
ljmp
lock
mov
jl
jmp
and
jmp
cltd
movd
cwtl
adc
xchg
loop
ret
jae
repnz
mov
jns
dec
push
xchg
leave
fdivrl
lods
fsubl
stos
pop
push
dec
and
ret
fs
cmp
ds
ret
in
lods
push
inc
jge
lcall
dec
pushf
add
push
movsl
fimull
sub
or
xchg
stos
push
fwait
adc
jb,pn
call
jbe
pop
movsb
add
mov
or
jmp
out
imul
mov
lcall
xchg
inc
out
out
pusha
push
mov
dec
ficoms
push
xchg
xor
sti
sub
xchg
ja
jne
in
pop
pushf
mov
test
fcompl
push
sub
xchg
rclb
lds
or
loop
in
mov
enter
pop
int3
sahf
js
jge
test
xchg
stos
testb
mov
into
iret
pusha
fsubrl
push
movl
pop
pushf
dec
roll
xor
sti
jo
leave
sbb
cltd
dec
rcrb
cmp
loope
inc
arpl
inc
xchg
aaa
sbb
rcrl
jns
lret
jno
mov
pop
xchg
loopne
repnz
jl
mov
push
mov
fs
loopne
in
inc
jo
mov
cld
fimull
cmc
pop
fidivl
inc
and
push
adc
movsb
xlat
push
pop
pop
adc
ret
mov
push
ret
add
por
imul
push
movsl
scas
pop
push
jl
mov
pop
icebp
mov
mov
push
pop
std
xlat
sti
jle
jecxz
inc
push
clc
pushf
lret
xchg
add
cmpsb
ljmp
adc
add
push
subl
in
mov
mov
mov
jp
in
mov
or
sub
call
mov
xor
inc
mov
adc
or
gs
jae
mov
inc
mov
pusha
inc
adc
cmp
ss
jo
pop
les
pop
jl
jnp
jg
mov
cmp
and
push
test
int
push
mov
push
movsl
xchg
mov
jle
cmp
bound
cmp
or
mov
or
cld
leave
xchg
mov
lods
mov
mov
lcall
mov
ds
mov
inc
insb
mov
push
std
mov
in
andl
push
mov
mov
mov
xor
jg
cs
sub
nop
dec
cltd
dec
push
dec
jno
mov
ss
mov
inc
push
mov
xor
push
das
loop
add
jge
lahf
scas
mov
loop
icebp
imulb
cmp
rcll
shr
cwtl
cmp
shr
mov
pop
pop
xor
xchg
rorb
loope
fcomps
mov
ds
adc
outsl
mov
or
movsl
cltd
push
dec
xlat
push
pop
stos
aaa
or
mov
push
rcrl
mov
push
imull
sub
cmp
add
pushf
out
mov
adc
jno
mov
test
imul
int3
cltd
and
pop
jl
in
jp
jp
orl
int3
sbb
pop
das
pop
push
pop
push
jne
pushf
jge
jle
sub
addr16
js
inc
pop
insb
test
push
mov
or
jmp
xchg
aad
add
imul
into
das
mov
mov
sbb
popa
jne
xlat
nop
gs
fnstsw
adc
mov
jecxz
in
into
or
mov
xor
je
movsb
or
iret
fisttpll
xor
sbb
dec
xor
jg
jae
lcall
pushl
or
fisttps
push
mov
mov
clc
shll
loop
push
cmp
xchg
mov
mov
lea
jns
out
rorl
fmuls
jl
idiv
add
test
dec
cmpsb
fisttpl
sbb
xchg
jne
pop
in
arpl
test
sub
ret
dec
mov
scas
sbb
fs
or
cmp
test
xchg
push
cltd
sbbl
aas
and
jns
fiadds
mov
cmp
xor
sub
inc
pop
inc
stc
pusha
jb
or
nop
or
mov
xchg
mov
dec
dec
call
fcomp
xchg
ror
cwtl
inc
int
stc
xchg
fiaddl
test
in
mov
cmpsl
mov
push
pop
iret
add
xlat
xchg
jl
inc
sbb
icebp
sbb
in
repz
add
sub
ffreep
jmp
sarb
mov
or
sbb
outsb
cld
pop
and
gs
and
clc
xor
xchg
push
into
pop
and
push
pop
aad
aad
adc
mov
pop
jecxz
dec
add
in
js
scas
nop
fimull
mov
cs
loopne
sub
into
rorl
hlt
ljmp
loop
push
repz
hlt
xchg
ret
mov
scas
lds
stos
subl
dec
mov
push
pop
xchg
mov
aaa
push
xor
inc
lea
out
out
dec
out
sub
addl
imul
mov
jno
sub
ss
aad
mov
adc
fildll
mov
ljmp
jp
pop
push
fisttpl
mov
adc
and
pop
enter
jb
cmpsb
jle
mov
mov
lret
add
js
xor
shl
test
lret
pop
insb
jae
mov
es
dec
std
test
pop
fimull
xor
sahf
lret
pop
push
mov
fs
cmc
sub
pop
jno
test
mov
mov
iret
push
fnstenv
cld
xor
push
pop
inc
imul
and
into
push
out
mov
sbb
mov
pop
bound
xlat
jge
mov
je
dec
sub
pop
sbb
cld
cmpsl
adc
push
cmpsl
jecxz
and
loopne
scas
aad
pop
loopne
mov
dec
sbb
cmpsb
repnz
inc
or
je
xor
int3
jns
insl
xor
cld
fisttpl
jg
or
fnstcw
popa
cmp
jp
mov
test
cli
fdiv
jbe
sbb
jle
push
rclb
mov
out
aad
dec
jb
cwtl
shll
fildll
imul
test
dec
and
bound
in
sub
fwait
xlat
ret
fisttpll
pop
cmpsb
jns
mov
lock
push
ret
adc
add
or
pushf
scas
add
dec
inc
push
pop
aas
loop
call
scas
fidivrs
je
mov
mov
xchg
in
rcl
mov
jne
jo
cmp
lds
jno
popa
sub
mov
lods
bound
jne
jecxz
adc
pop
test
cmp
sub
and
fs
mov
outsl
scas
push
mov
test
pop
cmpsw
enter
insb
mov
outsl
add
mov
dec
xchg
dec
adc
mov
sbb
or
movsl
xlat
mov
jg
arpl
cmc
jg
mov
xlat
sbb
mov
mov
xchg
xchg
jae
bound
or
ret
sahf
xchg
lret
pop
adc
aas
std
xor
push
lret
sub
or
scas
push
pop
jg
outsl
pop
add
inc
jae
dec
sbb
sub
xchg
pusha
mov
lret
repz
loope
leave
cli
adc
pop
cmp
ret
cli
in
sbbb
arpl
fiaddl
stos
movsb
pop
jns
int3
mov
popf
pop
sub
mov
xor
mov
xchg
ret
mov
inc
into
cld
enter
jne
push
or
mov
and
daa
xlat
jno
fisttpll
mov
cmc
cmp
cmp
mov
imul
adc
movsb
stos
mov
aam
sub
xor
shrl
sub
lcall
lock
mov
out
adc
adc
popw
imul
cmpsl
adc
xchg
cwtl
imul
lahf
shlb
pop
icebp
or
jb
sti
sub
xor
jl
mov
or
pop
ret
adc
and
subb
movb
add
sub
inc
testl
pop
aaa
repz
loope
mov
cmp
push
sub
mov
getsec
or
adc
pop
nop
jecxz
movsb
push
imul
ja
divl
lcall
fcomps
dec
mov
bound
cmp
mov
fsubrl
dec
add
or
lods
xlat
ss
cmpsl
fisubs
mov
std
adc
mov
mov
mov
outsl
adc
mov
push
dec
lcall
cltd
aam
fstp
push
insb
xchg
ret
popf
rclb
inc
mov
pop
dec
and
and
pop
loope
mov
int
or
loope
lock
scas
cli
stos
fs
cmc
ret
hlt
mov
jb
scas
stc
iret
ja
mov
cwtl
pop
daa
adc
das
mov
out
cld
or
mov
bound
hlt
arpl
push
in
popa
stos
out
sti
and
inc
push
or
sub
std
mov
js
adc
clc
pop
std
sbb
adc
orb
push
std
daa
mov
out
or
lds
insb
adc
jl
testl
mov
jns
repz
stos
or
pop
cmp
flds
jo
pushf
xor
mov
inc
mov
sbb
sbb
nop
push
leave
mov
xchg
js
pop
gs
ljmp
ret
pop
and
inc
leave
push
pushf
xchg
dec
mov
jne
mov
ret
popa
jae
in
loope
imul
or
pushf
in
mov
out
hlt
or
dec
ljmp
inc
stc
and
sbb
push
cld
add
sti
loopne
loop
int
pop
xor
cs
mov
out
clc
push
inc
fbld
sti
xchg
add
jb
inc
subl
out
pop
add
adc
sbb
aad
clc
mov
in
or
ss
jae
jg
out
test
mov
push
xor
and
and
xchg
sbb
fisttps
shrb
pcmpeqd
ret
stc
hlt
stc
test
mov
sub
lods
pop
sbb
xchg
push
sbb
loopne
cmpsl
pop
adc
daa
scas
xor
cmc
mov
into
cmp
les
push
mov
test
scas
sub
lret
hlt
addr16
enter
xor
xor
enter
push
cmpsb
cmp
dec
sahf
test
pop
repz
cld
daa
dec
adc
je
sub
cmpsl
inc
and
sub
test
add
sub
xchg
jbe
fs
cmc
and
arpl
in
sbb
xchg
pop
adc
cmp
pop
xor
outsb
pusha
or
out
sbb
cmp
inc
mov
push
push
divb
jo
xchg
or
fstpl
shll
push
sub
and
aad
and
pop
mov
rorb
sbbl
sub
pop
xchg
jge
repz
into
lods
enter
repz
repnz
push
lods
mov
incl
mov
xchg
pop
add
sub
xchg
mov
pushf
outsb
push
and
insl
cmp
lock
mov
jns
jp
and
lock
repnz
mov
adc
lods
popa
sbb
mov
repnz
dec
gs
cld
jmp
pop
push
dec
dec
jle
adc
jge
cmp
cmp
cmp
add
shlb
loop
test
push
dec
jp
pop
cmpsl
arpl
call
jmp
out
push
pop
ljmp
repnz
push
dec
fldcw
ja
xchg
fimull
cmp
xchg
jb
jecxz
xor
popa
push
repnz
xorb
aad
cmp
push
cwtl
jmp
into
mov
inc
out
and
enter
ret
jg
pop
fs
lahf
jmp
inc
cmp
out
fmul
mov
or
mov
jl
test
inc
push
cld
jl
sbb
add
jl
and
dec
sbb
aad
sbb
mov
push
das
js
xchg
xchg
in
repnz
push
cwtl
lahf
cltd
pop
mov
mov
cmovae
ja
test
or
sahf
mov
rolb
sub
call
frstor
dec
pop
jo
sbb
jg
cmpsl
and
adc
inc
mov
mov
fadds
or
inc
imul
ret
dec
xchg
inc
incl
jmp
cli
cmp
test
sub
gs
and
jp
or
pop
lods
sbb
jge
testb
repnz
xchg
insl
jmp
in
movsl
mov
aam
shrl
test
imul
push
int
nop
addr16
push
mov
sbb
fildl
loopne
jns
jge
and
cmp
mov
add
cwtl
insl
sbb
inc
jmp
jmp
pop
cli
jmp
lcall
movsb
add
xchg
lret
enter
imul
out
in
lret
js
jbe
cli
lods
cmp
push
fnstsw
lret
push
mov
lret
cmp
xchg
push
or
loope,pn
adc
mov
bound
xor
pop
outsl
or
loopne
enter
shll
inc
jns
call
push
fcmovu
stc
pop
jae
dec
outsl
ret
or
sbb
adc
addb
xor
movsb
scas
fldenv
mov
scas
not
aam
mov
jp
test
addl
ficoml
cltd
pop
lods
jl,pt
jge
or
cwtl
push
flds
imul
das
mov
mov
push
pop
mov
iret
outsb
mov
mov
lock
mov
and
jbe
test
loopne
cmp
pop
pop
popf
inc
sub
lret
in
xor
lock
fs
lret
cld
jge
aam
pop
mov
jp
imul
xor
lahf
insl
outsb
ds
xchg
mov
dec
xchg
mov
out
decb
nop
int3
mov
test
pop
adc
inc
inc
jbe
or
mov
shlb
mov
mov
xchg
test
cmp
sti
push
xor
inc
mov
sub
jb
lret
mov
test
icebp
adc
push
in
jae
in
mov
sub
jle
in
lret
leave
jnp
jnp
ret
mov
mov
and
or
ss
bound
mov
sub
sahf
pop
mov
xchg
xchg
jp
fiaddl
or
out
jecxz
mov
add
rcr
negb
inc
pop
out
popa
out
bnd
lcall
out
jle
sub
pop
into
mov
jle
or
mov
mov
pop
push
mov
mov
xchg
inc
insl
leave
pop
arpl
xchg
ljmp
push
cli
cltd
sub
xchg
gs
pop
add
shrb
adc
test
cmpsb
jb
xor
pop
aad
add
ret
mov
lea
mov
lock
lods
adc
mov
or
mov
jle
jne
cmp
cmp
subb
and
pcmpgtd
aaa
std
add
mov
add
imul
imul
cmp
idivb
mov
sub
lods
dec
mov
and
roll
and
dec
out
mov
cli
pop
mov
idivl
or
jg
fucomp
jo
jno
jo
shr
mov
jne
or
fnstsw
xor
and
jp
cmp
insb
mov
pop
test
or
popf
xor
sbb
das
push
xor
loopne
stos
andl
mov
scas
insl
inc
xchg
aad
fisubrs
lret
push
cmp
mov
movsl
stos
cli
xorb
push
out
mov
mov
and
jb
add
mov
xchg
lods
in
andb
cmp
popf
mov
add
jp
test
mov
dec
xor
scas
repnz
push
pop
jno
cmp
or
sti
sarb
pop
push
aad
pop
cltd
xorb
jbe
stc
mov
push
stc
sti
test
leave
add
call
pop
clc
test
jecxz
ret
out
std
push
push
xchg
mov
mov
ficoms
mov
movsb
andb
jg
mov
hlt
xor
inc
out
adc
cmc
sbb
fbstp
loop
ss
mov
sub
arpl
and
dec
or
jmp
xor
call
mov
jns
repz
test
fs
mov
repnz
sbb
repz
fsubrp
or
and
int
push
scas
push
lods
push
imull
adc
cwtl
mov
jo
test
sbb
dec
jb
mov
iret
push
add
aad
pop
mov
mov
or
test
xor
lahf
pop
mov
movb
std
repnz
jns
xor
mov
cmp
pushf
pop
inc
in
loope
xor
in
aam
or
adcb
push
inc
movsl
hlt
in
mov
jle
sahf
sbb
dec
sbb
mov
sub
je,pt
cmp
cld
sahf
fldt
xchg
dec
lret
cmp
ficompl
sub
add
xor
fisubs
test
push
pop
movsl
mov
and
adc
cmp
dec
test
hlt
fbld
pop
inc
sbb
push
sub
aam
inc
and
leave
sub
xchg
scas
leave
xchg
xchg
js
mov
xchg
jno
xlat
in
cmp
jae
pop
das
cmpsl
scas
sbb
or
or
sbb
in
nop
xchg
push
sar
fistps
inc
and
sbb
js
aas
sbb
sub
cmp
iret
jbe
scas
push
push
shlb
loopne
shl
aas
popf
mov
fstl
pop
adc
push
pop
xchg
fwait
pushf
pop
lahf
test
add
xchg
dec
adc
push
or
arpl
cli
inc
jmp
adc
imul
adc
lret
dec
aas
test
cmc
or
das
arpl
or
popw
shr
dec
mov
xor
out
jbe
sub
fimull
arpl
je
cltd
jae
pusha
adc
xchg
jmp
cmp
notb
out
xlat
or
dec
jle
jae
test
insl
stc
mov
mov
pusha
dec
mov
jecxz
pop
or
sbb
adc
jb
scas
mov
sbb
movsb
xlat
pop
push
jecxz
mov
cmp
pop
mov
push
roll
call
add
mov
xlat
xchg
or
adc
push
stos
xchg
iret
loope
mov
in
lods
inc
cld
jmp
cld
adc
adc
out
mov
mov
repz
lock
lahf
in
lods
dec
lahf
fucom
xchg
ret
cmc
inc
js
jmp
pusha
imul
jbe
or
mov
xor
xchg
cmpl
nop
lds
jbe
pusha
add
lock
in
adc
nop
cmc
fstpl
dec
loop
js
sbbb
xchg
cli
mov
cmp
and
stos
into
dec
mov
fists
and
pop
jbe
pop
pop
test
int3
pushf
testl
or
lahf
jb
out
into
mov
adc
mov
jae
jmp
xchg
jne
shll
call
imulb
jbe
imul
addr16
mov
arpl
push
iret
cmc
sbb
mov
or
xor
lea
cmc
pusha
in
into
sbbb
jle
and
sub
lods
test
and
push
ljmp
sbb
fmuls
mov
mov
loopne
jecxz
repnz
mov
pop
fnsave
mov
mov
inc
cmp
es
repnz
out
mov
add
and
pop
mov
divb
pop
xchg
jno
inc
cmp
imul
sub
mov
and
xor
pop
mov
xor
jecxz
jecxz
lock
push
push
cltd
push
loop
scas
xor
mov
adc
mov
xchg
out
repz
dec
jno
jb
mov
inc
mov
repz
or
add
mov
pop
sahf
iret
icebp
xchg
pop
lds
cmpl
movsl
aas
or
mul
xor
fs
cmp
loope
insl
les
jmp
and
and
mov
add
adc
pop
add
xorl
ja
pop
inc
push
js
push
outsl
xchg
adc
icebp
into
cmp
xor
adc
or
sub
mov
lret
js
cmp
shrl
push
mov
clc
inc
sbb
je
add
push
outsl
inc
in
push
dec
push
js
cmp
lock
cld
lock
and
pop
cld
nop
in
js
test
mov
jp
imul
in
mov
adc
lahf
xor
add
je
nop
xchg
insl
mov
inc
clc
sub
xlat
dec
je,pt
dec
or
scas
mov
cmp
setle
cmp
mov
vmwrite
aaa
cld
lcall
push
dec
push
mov
bndldx
mov
out
jns
ret
pop
jb
jle
push
daa
aaa
aam
lcall
addb
jl
loop
in
notl
fcmovbe
push
insb
loopne
or
dec
out
stos
scas
xchg
stos
add
push
jno
inc
dec
push
xchg
mov
mov
lock
lahf
push
aaa
mov
sahf
inc
xchg
addr16
jmp
outsl
push
mov
sbb
fimull
xchg
sub
mov
fstps
negb
push
pop
xchg
pop
lea
mov
or
in
dec
dec
mov
adc
fsubs
xorb
inc
inc
movsb
ret
loop
enter
mov
adc
adc
test
and
roll
test
aas
out
sti
ja
addl
icebp
push
mov
sub
inc
push
cmp
ficoms
sysenter
sbb
add
adc
xor
xor
xchg
jl
mov
das
cltd
jo
call
xchg
bnd
sbb
sbb
loope
sbb
dec
lcall
inc
lahf
jl
cmp
movsl
jp
push
xchg
sub
mov
jo
push
jbe
fimuls
or
fwait
adc
push
ss
loop
pop
mov
test
dec
sub
cltd
cltd
enter
icebp
sub
pop
add
cwtl
xor
dec
movb
jmp
in
sub
cmp
aaa
insl
andb
lods
ret
lret
orb
sub
fdivl
push
cmp
sub
cmc
repz
push
jp
fstpl
lock
cltd
movsb
push
imul
mov
sbbb
xchg
stos
adc
pop
mov
or
popf
je
js
cmp
subl
push
popf
fadds
mov
negl
dec
xlat
in
jo
mov
popa
sarb
arpl
sbb
into
mov
mov
adc
aaa
xchg
xchg
lds
jecxz
mov
inc
sub
add
mov
jb
fbld
daa
sahf
jge
js
sbb
clc
jbe
xorl
inc
or
loope
cmp
sub
je
xor
enter
aaa
mov
popf
fcoms
pop
xchg
shll
push
pusha
sub
push
or
pop
insb
fbld
mov
xchg
push
icebp
fsubrp
jno
and
adc
sti
neg
pop
sbb
jns
inc
outsb
mov
cmp
mov
cltd
lret
cs
cmpb
inc
rcrl
xchg
aam
push
and
mov
mov
mov
jno
pop
inc
xchg
inc
fadds
fwait
add
push
std
les
insb
repnz
adc
cmc
mov
jle
jg
loop
push
fsubrs
or
lock
and
jmp
mov
scas
rcl
mov
pop
mov
dec
cltd
pop
dec
aaa
xor
aad
fisttps
mov
cltd
subb
call
or
sub
jo
xchg
movsl
clc
in
fstps
push
es
cmp
leave
push
mov
cmp
push
dec
loop
push
pop
arpl
jb
repz
add
add
ss
jge
jb
sbb
psrlw
mov
cmpsb
in
pushf
outsb
pop
inc
out
add
ret
xchg
divl
pop
lea
and
inc
lods
cld
lahf
test
js
aam
in
push
sub
cltd
jnp,pt
dec
repnz
sbb
lock
icebp
jo
cltd
dec
mov
in
cmp
outsb
mov
mov
xchg
sbb
sbb
imul
and
ss
and
in
cmp
sub
jle
inc
sti
push
add
sar
mov
and
out
push
xchg
pusha
daa
nop
lds
les
insb
jge
push
mov
and
add
pop
andb
mov
mov
add
js
xchg
arpl
out
in
mov
ret
or
jmp
or
and
pop
fdivrp
cmp
dec
sbb
cld
jno
and
sub
ficoml
gs
roll
das
pop
jbe
loop
lods
lods
bound
rorl
jae
jns
inc
jge
cwtl
lcall
test
std
push
fsubrl
cltd
add
aad
negl
pop
mov
or
pushf
sub
add
sbb
pop
mov
push
sub
adc
jno
mov
je
add
sub
push
pop
mov
or
in
cmp
and
mov
ret
cs
das
scas
fs
lahf
or
add
jecxz
loope
jmp
add
dec
or
xchg
jnp
dec
mov
and
or
dec
nop
pop
mov
cmpl
data16
or
mov
and
pop
aad
jl
lock
inc
xchg
mov
int
pop
mov
orl
xchg
lret
jno
dec
test
popf
mov
jno
pop
nop
icebp
test
mov
sub
push
aaa
inc
push
imul
aad
stos
into
roll
cmp
inc
fisttpll
loope
popf
mov
cmp
lds
pop
lret
scas
mov
add
xchg
mov
sbb
clc
mov
idivl
adc
and
cmpsb
test
xchg
add
rclb
lea
jge
testl
jle
sbb
int
pusha
test
aam
movsl
je
loop
rcrl
jg
dec
jbe
jge
ret
das
in
movsb
scas
leave
daa
jbe
lahf
mov
das
sub
rcrb
jo
cmp
les
push
in
clc
mov
fildll
test
pop
test
sub
jl
inc
add
lea
cmc
icebp
js
stos
mov
aaa
sbb
fisubrs
int3
pop
mov
test
xor
add
xchg
ja
mov
inc
outsl
xchg
pop
mov
pop
dec
sbb
pop
mov
adc
mov
clc
shll
jp
daa
mov
sbb
xchg
repnz
dec
lret
lret
pop
and
std
cli
mov
in
mov
out
and
std
out
adc
pop
sbb
pop
sarb
xor
jbe
fs
out
or
inc
fbld
ret
mov
ljmp
rolb
jnp
scas
insb
ss
add
xchg
cmp
jb
jg
daa
or
xchg
push
mov
push
out
pop
jp
data16
test
pop
into
inc
or
nop
nop
stos
imul
mov
stc
jo
push
out
es
jl
or
aad
lods
jo
jg
xlat
xchg
fwait
dec
add
sbb
leave
or
or
popf
mov
dec
dec
adcb
out
mov
jbe
xchg
ja
xchg
mov
shlb
cmp
push
in
addl
pop
shlb
jb
mov
and
outsl
xchg
sub
push
faddl
fwait
push
enter
sarb
adc
fsubp
iretw
add
add
pop
dec
adc
push
fsubs
add
or
dec
mov
sbb
loop
std
add
in
fsubrl
data16
xor
rcrl
out
insl
shrl
sbb
sub
mov
in
movsl
adc
popa
repz
push
imul
add
cmp
gs
pushf
cs
aas
adc
push
jge
mov
test
fistpll
pop
xor
ds
sbb
mov
xor
xchg
sub
mov
loopne
xchg
pop
fidivrs
adc
sub
sub
sub
popa
jmp
mov
mov
jmp
xchg
std
dec
js
js
pop
out
lds
add
jp
xchg
jmpw
xor
xchg
push
int
stos
pop
inc
test
lods
fnsave
test
push
cmc
mov
ljmp
clc
out
cli
pop
inc
leave
adc
mov
inc
pushf
jnp
xchg
sbb
out
sub
pop
pop
xor
or
cs
rorb
adc
aad
jge
or
pop
mov
fldln2
je
imul
pushf
mov
jb
dec
inc
ret
and
or
in
hlt
out
sbb
cltd
or
movsb
shll
jnp
in
push
mov
ljmp
jle
leave
dec
or
pop
and
mov
stc
cmp
mov
or
cmp
out
popa
test
push
shrl
mov
es
ljmp
pop
scas
adc
pop
add
or
insb
negl
sub
xchg
xchg
arpl
pushf
hlt
adc
sbb
jno
mov
inc
filds
adc
ds
iret
and
inc
add
adc
sub
sbb
fwait
jmp
jb
cli
jmp
shrb
xor
ret
or
test
shll
mov
inc
pop
dec
cmp
pop
test
sbb
xor
sub
hlt
xchg
push
xchg
stos
mov
or
xlat
fucomi
scas
mov
cmp
jb
aad
add
xchg
push
pop
mov
clts
cmpl
lds
xor
outsb
jne
setge
push
loopne
push
or
mov
loopne
in
int
push
mov
scas
rolb
bound
sbb
pop
bound
mov
fisubs
cmp
sbb
push
sahf
pop
loope
rcrl
out
pop
lret
cmp
mov
push
or
outsb
arpl
jnp
push
or
push
fbstp
into
rcr
outsl
iret
pop
sub
xchg
arpl
clc
pop
iret
je
xor
xchg
rcrl
adc
mov
xor
adc
pop
fwait
addr16
fnstsw
pop
mov
mov
pop
nop
test
or
icebp
mov
dec
rorb
xchg
lahf
xchg
sbb
test
xchg
sub
je
sub
mov
fs
inc
test
mov
movsb
repz
int
cli
sbb
dec
aam
mov
rcrb
insl
andl
lret
rcll
push
lret
call
push
sub
sub
aaa
add
mov
xchg
testl
ret
cwtl
xchg
adcb
imul
sub
andl
aam
data16
push
lahf
ljmp
mov
movsb
jle
mov
cmc
mov
adcb
sub
sub
scas
iret
cs
jns
mov
mov
lds
fadd
jecxz
loopne
cmp
pop
sub
xchg
mov
jae
adcl
movsl
cmp
cltd
mov
lret
push
pop
mov
pushf
xchg
icebp
dec
fisttps
jns
pop
push
ds
rcll
into
push
mov
or
stc
out
jmp
cmp
lods
das
cmpsb
push
push
repz
out
jo
push
push
es
popf
or
test
mov
jno
loop
insl
sub
leave
adc
daa
stc
rcrl
loopne
rolb
pop
and
inc
ss
outsl
inc
adc
add
mov
jno
cmp
sbb
fwait
push
cmpsb
adc
adc
adc
push
sub
shlb
leave
popa
movsb
jl
jg
gs
inc
movsl
jl
add
andl
xchg
xorl
jbe
nop
loopne
lret
ja
push
push
popa
repz
push
stos
adc
mov
push
std
xchg
gs
xor
mov
sub
push
mov
pop
scas
xorl
mov
fcmovne
mov
lods
mov
out
mov
add
cmpsb
mov
scas
jne
add
sahf
fmuls
xchg
add
cmp
jge
ret
push
adc
add
mov
mov
stos
add
or
mov
rcr
adc
sbb
push
cmp
inc
mov
or
push
jg
and
jg
sub
dec
mov
and
and
lods
sbb
dec
or
les
data16
or
js
inc
mov
leave
int
xchg
jne
test
pop
pop
loop
fs
sti
daa
jnp
push
push
js
dec
jp
stc
cli
xchg
or
jbe
imul
leave
xchg
mov
xor
mov
cmp
fcmovu
mov
cli
and
rorb
es
scas
and
cmp
sbb
ljmp
repz
pop
sti
out
dec
mov
jg
mov
adc
mov
push
cmc
mov
push
test
adc
rorl
cmpsb
sub
and
xor
sub
push
ja
jg
jb
add
xchg
js
adc
int
or
mov
xor
mov
inc
mov
sub
jbe
sahf
or
test
test
sbb
aad
dec
sbb
pop
mov
cmpsb
stc
jae
cmp
ret
sbb
xchg
and
add
xchg
stos
lods
nop
scas
out
jmp
rcll
adc
lea
mov
mov
scas
mov
fdivrs
mov
adc
addr16
mov
or
add
imul
xchg
imulb
ret
jg
inc
movsl
push
ljmp
cmp
add
dec
adc
xor
shlb
ss
mov
push
loope
sbb
lods
mov
sub
fistl
pushf
mov
lea
icebp
pusha
dec
xor
adc
add
xchg
imul
fidivl
clc
rclb
cltd
imul
and
push
iret
notl
leave
mov
and
rclb
xor
sti
outsl
jg
add
pop
into
and
adc
insb
mov
add
mov
adc
insb
psrad
xchg
sub
cli
frstor
ljmp
mov
scas
mov
outsl
fucomi
aas
loopne
popa
gs
movsb
adc
mov
push
test
test
scas
das
adc
scas
out
lea
pusha
mov
inc
push
or
cmp
cmc
fnstcw
add
insl
out
mov
pop
mov
xchg
stos
jno
shl
push
xchg
test
dec
fcmove
and
xor
xor
dec
fisttpll
cmp
jecxz
push
frstor
push
add
xlat
xchg
out
jg
mov
pop
and
lea
jns
mov
stos
mov
andb
mov
pop
or
mov
jae
mov
pop
lods
out
out
aam
fsubl
or
sbb
push
jbe
icebp
sbb
fmull
jmp
xchg
xor
pop
pop
xor
aam
mov
call
inc
std
sub
popf
push
adc
dec
sub
inc
inc
idivb
push
push
rorl
icebp
adc
fidivl
sahf
ljmp
idiv
outsl
xorb
test
xor
or
sbb
dec
push
insb
xor
cmp
cld
bound
outsb
adc
hlt
xchg
sbb
xor
adc
and
arpl
pop
adc
jns
pop
sbb
cli
stc
inc
cli
mull
outsb
int3
or
or
add
xchg
mov
stc
sbb
loope
insb
mov
je
subb
push
dec
lret
jne
sbb
pop
ljmp
sub
or
fldt
lcall
fidivrl
mov
add
bound
stos
mov
addl
pop
out
add
shlb
popf
popf
push
mov
cmc
iret
in
dec
sub
mov
and
and
mov
fnstcw
arpl
loop
sbb
lea
pop
ret
cli
or
mov
mov
xchg
aaa
inc
int
dec
dec
pop
aas
cmc
dec
in
xchg
lcall
hlt
mov
fucomip
mov
fwait
sahf
loopne
out
stos
arpl
lret
sti
iret
ror
pop
xchg
jg
add
imul
and
sbb
jle
enter
push
cmp
mov
je
sub
cmp
data16
ds
stos
pop
filds
stos
xchg
xchg
push
xchg
out
es
jb
xor
stos
lret
mov
xlat
cmp
xchg
pusha
add
loopne
pop
ror
adc
mov
push
je
cmc
lcall
in
xor
imul
mov
lret
add
push
push
fistps
rol
xchg
or
cwtl
sub
cwtl
in
test
movsl
mov
xor
push
mov
jge
popa
call
push
bnd
js
addr16
rorb
icebp
xor
cltd
loopne
mov
push
call
dec
push
loope
les
xchg
mov
xor
jmp
lods
ljmp
mov
xor
add
imulb
loope
jmp
pop
pop
repnz
add
jae
xor
pop
jp
jge
shll
pop
test
fs
sbb
aas
pop
ja
shld
mov
dec
popa
std
int3
enter
call
jp
ret
in
sub
jnp
xor
ds
in
xor
push
cmp
iret
lret
push
popf
or
fwait
imul
push
subl
fidivrs
xlat
ja
adc
out
mov
notl
adc
cltd
or
outsb
jg
jns
xor
aaa
ret
mov
mov
push
mov
negb
cli
xchg
mov
decl
loop
lcall
cmc
pop
gs
pushf
enter
ja
call
push
mov
fwait
pop
ljmp
jb
mov
push
popf
testl
sbb
orb
sbb
inc
outsl
push
jno
nop
push
add
inc
push
jmp
call
mov
sub
fstl
xor
mov
xchg
shll
js
lods
jg
dec
out
jecxz
test
inc
hlt
insl
cvttps2pi
push
jl
jmp
jmp
aam
fucompp
push
jp
jmp
adc
imul
hlt
inc
pop
push
icebp
xchg
dec
xor
pushf
int3
mov
pop
xlat
add
out
pop
aad
fisttpl
scas
in
loop
add
inc
outsl
out
iret
sbb
xorb
mov
jp
push
mov
xchg
lock
jp
mov
jae
mov
pusha
push
push
std
imul
push
roll
and
pop
sub
jbe
jle
sbb
insl
xor
sub
lret
adc
mov
sub
stos
dec
add
push
jne
sub
or
or
popa
xchg
sarl
shl
pop
push
or
cmp
and
aad
mov
out
cli
cmp
cld
int3
jo
cld
inc
das
cmpsl
xchg
sbb
push
andl
adc
out
fwait
ret
push
or
push
jp
push
xchg
lods
fmuls
lret
mov
mov
xor
jecxz
test
cld
in
inc
movsb
mov
lret
adcl
and
push
push
sub
movsb
fidivs
frstor
or
adc
addb
add
das
int
jle
xlat
mov
fdivs
mov
jae
xor
int
das
mov
inc
jecxz
push
xor
rcll
hlt
inc
adc
inc
add
jne
in
jp
pop
cmpsb
mov
mov
jecxz
scas
jg
mov
xchg
cli
cmp
aad
dec
repnz
pop
xchg
icebp
ficoms
mov
or
mov
pop
call
mov
pop
mov
xor
loope
in
cwtl
enter
daa
out
adc
pop
mov
and
dec
pop
pop
jle
dec
xchg
add
adc
push
leave
hlt
mov
inc
lahf
jmp
inc
xchg
jmp
jmp
les
cmpsb
jns
sub
nop
repnz
cltd
inc
jns
shlb
push
inc
std
cltd
int
mov
pop
push
inc
jo
outsl
xor
ret
xor
cmp
sub
loop
test
sahf
bnd
imul
jo
fwait
insb
cmp
imul
mov
pop
dec
cmp
sbb
jg
inc
lcall
rcrl
push
adc
sbb
mov
adc
cmp
fiaddl
fwait
or
int
cwtl
dec
adc
xchg
enter
leave
leave
or
daa
mov
xor
dec
cmpsl
out
pusha
dec
and
push
push
das
iret
pop
shlb
inc
mov
divl
stc
jo
stc
insb
add
mov
inc
test
stc
sbb
add
inc
cmpsb
je
pop
jecxz
mov
call
and
or
imul
andb
out
fwait
push
outsb
stc
mov
dec
into
scas
sarb
loop
rcl
push
pop
mov
push
pop
loopne
push
cmc
aad
je
or
jecxz
inc
cmp
pop
iret
or
xchg
sbb
mov
pop
or
in
xchg
std
jne
ror
fisubl
mov
fsubr
pop
fnstcw
cmc
inc
cmpsl
jge
sbb
sarl
mov
dec
repnz
aad
xor
mov
repnz
mov
enter
js
fwait
mov
fdivrl
adc
xor
outsl
cmpsb
outsl
aaa
or
out
xor
jmp
mov
addb
push
or
xchg
xchg
mov
mov
add
lock
and
sbb
add
and
out
mov
clc
mov
mov
push
mov
adc
cmp
ret
sub
or
cmp
fdivrp
fs
fldcw
loopne
arpl
or
sub
pop
inc
dec
imul
insb
fimuls
aam
xchg
mov
jl
loop
shll
push
or
push
test
scas
pusha
jecxz
mov
cs
pop
rol
push
lret
mov
outsb
in
xchg
push
pop
std
fidivl
stc
in
dec
lcall
jnp
dec
movsb
cld
sub
out
stc
dec
pop
ja
shlb
xchg
or
dec
dec
xchg
dec
mov
lock
or
cmp
sub
jmp
pop
movsb
fldenv
or
dec
jg
out
faddl
mov
mov
cmpl
pop
jns
dec
jae
ja
imul
adc
repz
and
lcall
inc
das
clc
and
jo
jns
jne
aas
inc
xchg
nop
lret
scas
xor
mov
push
jns
push
sahf
orps
shr
inc
xor
rolb
pop
pop
jbe
adc
push
daa
cmp
xor
or
sets
and
data16
mov
pop
mov
pop
inc
and
xchg
and
lock
pop
pop
xchg
dec
xor
adc
aam
loop
push
cmpb
jle
repz
mov
or
rcrl
lahf
into
lds
cmp
push
xor
inc
data16
cmp
mov
jns
mov
sub
cmpsb
clc
imul
inc
adc
push
call
lods
mov
mov
and
add
js
dec
and
test
sbb
push
sub
pop
mov
leave
jnp
mov
adc
jne
sbb
mov
push
js
jecxz
mov
cltd
inc
add
loopne
push
pop
out
xchg
movsb
inc
andl
xchg
hlt
push
mov
stos
imul
into
add
inc
add
push
push
add
imul
add
pushf
mov
aas
push
daa
xor
and
je
sbb
mov
inc
pop
and
lods
popa
add
pushf
jmp
xchg
cmpl
pushf
aaa
push
in
pop
in
lds
mov
push
ss
test
inc
add
inc
xchg
fs
mov
mov
lock
aaa
jp
je
icebp
cli
jnp
ljmp
fcomps
lcall
lcall
repz
and
push
mov
stos
lods
push
stos
jb
fstl
mov
pop
xlat
movq
pop
sub
fiaddl
outsb
jbe
es
repnz
and
ds
xor
pop
sbb
mov
inc
cmp
add
xor
aaa
inc
or
sub
mov
and
lret
add
adc
and
mov
pop
out
cmpsb
loopne
push
bound
int3
pop
aaa
adcw
out
outsb
dec
popf
insl
sbb
dec
call
ret
jl
and
push
xorl
push
inc
mov
dec
stos
daa
aaa
iret
movsb
ret
loope
dec
mov
xchg
mov
mov
jmp
jb
in
cmpsb
mov
and
push
ljmp
out
pusha
aam
test
mov
xor
rcll
mov
xor
jecxz
cld
inc
lods
fxtract
bnd
lret
ja
loop
testl
jae
negl
inc
dec
aam
and
add
push
or
sub
shll
nop
cmp
lret
imul
into
test
sub
fidivrl
push
dec
add
push
mov
cmpsb
lahf
std
frstor
push
xchg
repnz
fildll
mov
cld
ret
out
push
pop
or
mov
adc
mov
fsubs
pop
rcll
mov
lahf
inc
mov
sub
cmp
mov
pop
scas
xchg
jle
stos
out
mov
rorb
movsl
shl
mov
cmp
pushf
sbb
or
jnp
lret
or
add
daa
or
mov
jmp
add
or
push
push
mov
jo
sahf
bound
rcl
in
aad
push
repz
cli
mov
push
arpl
out
add
and
cmp
roll
fs
mov
test
jno
push
sub
flds
repnz
lahf
sbb
lret
cmp
test
hlt
push
out
jno
mov
sub
mov
cmpsb
push
loopne
gs
nop
cmp
sub
mov
adc
iret
sbb
movsl
into
jecxz
stos
outsb
test
call
inc
dec
lahf
push
inc
jbe
in
adc
addr16
sarl
mov
mov
imul
adc
aad
decl
jno
negb
mull
or
mov
pop
mul
xchg
pop
inc
jmp
mov
adc
push
pusha
stos
cli
fsubs
data16
mov
mov
xchg
push
pop
xor
jecxz
rolb
sub
outsl
sahf
pop
cmc
mov
mov
rorl
lret
mov
adc
loopne
cmpsb
cmc
addb
mov
push
jp
mov
jmp
mov
or
jne
arpl
push
push
adc
in
mov
pop
leave
add
test
fs
test
out
xor
sub
clc
ret
xor
ficompl
call
fwait
out
sbb
ret
prefetch
xchg
adc
and
mov
inc
aaa
inc
or
scas
out
jae
fbstp
jl
div
aas
xor
std
je
adc
ja
push
mov
mov
cli
gs
shrb
enter
shl
cwtl
dec
dec
btl
inc
dec
dec
in
xchg
mov
pop
ss
mov
sub
xchg
push
jle
xchg
cmp
subl
add
jo
adc
mov
inc
in
mov
orl
les
js
mov
in
iret
shll
xor
mov
push
add
push
push
ret
dec
scas
mov
xor
sbb
addr16
fwait
pop
js
outsl
outsb
dec
test
jecxz
or
pop
dec
mov
push
pop
pop
test
lahf
cmp
push
pop
mov
stos
ss
mov
pop
sub
test
cli
cmp
test
pop
cmp
and
push
fisubrl
in
adc
and
sub
hlt
dec
lock
mov
push
fdivr
stos
aad
jnp
xchg
sbb
and
les
inc
pop
mov
test
sub
or
lret
das
sti
dec
cld
pop
xor
fs
test
mov
xchg
sarb
cmpsl
clc
mov
iret
adc
lahf
insb
outsl
out
nop
ficoml
aam
call
xor
cmpsl
mov
in
mov
out
dec
movsl
aam
shll
nop
adcb
inc
scas
mov
jo
sbb
xchg
in
cld
rorl
dec
adc
bound
fcoml
lcall
push
jp
imul
and
les
and
cwtl
aaa
fcoml
add
out
mov
lds
push
in
mov
pop
jmp
movsl
push
adc
std
ret
jbe
rolb
arpl
fsubrl
addr16
movsl
fists
out
repnz
std
loope
adc
imul
sub
pop
sbb
std
flds
std
outsb
sbb
movsb
lock
cltd
shrb
mov
loope
int
xor
mov
nop
xchg
and
lahf
decb
nop
sub
add
or
adc
cmpsb
mov
mov
test
lahf
scas
inc
inc
sub
jecxz
xorl
lds
cmc
scas
aad
mov
js
cmpsl
mov
in
cs
ret
inc
pusha
jo
fcom
push
adc
loope
cltd
fdivl
out
enter
mov
push
lret
add
js
xchg
std
xchg
xlat
inc
push
in
or
in
push
repnz
stc
iret
and
test
daa
in
mov
insl
repnz
or
xchg
mov
or
cmc
test
bound
xchg
fimull
add
push
push
sbb
push
jmp
in
out
test
xchg
orl
sub
push
sarb
push
insl
xorl
mov
icebp
jg
mov
in
bound
jl
or
ret
dec
inc
clc
clc
into
in
lea
pop
xor
pushf
inc
loopne
bound
mov
hlt
enter
scas
popa
addr16
pop
push
add
js
cltd
mov
adc
add
aam
mov
sub
inc
movsb
jecxz
dec
daa
lret
jge
mov
mov
test
insb
leave
xchg
clc
enter
sbb
out
lds
lcall
mov
fimull
pusha
xchg
xor
xchg
jmp
dec
cmp
jle
inc
imul
adc
fisttpll
or
shl
push
adc
mov
cli
cmp
data16
test
subl
pop
xor
add
cld
xor
push
hlt
mov
jb
sbb
mov
repz
mov
jae
mov
mov
imul
ja
mov
xor
bound
mov
lods
negl
decb
fcmovnu
in
shll
inc
pop
pushf
jo
and
add
sub
in
pusha
inc
mov
xor
cmp
stc
aad
fs
popa
outsb
xchg
and
aas
add
push
xor
xchg
xor
jbe,pt
sti
push
rol
loopne
lahf
xchg
rclb
fisubl
aad
fstpl
dec
xchg
mov
addr16
mov
mov
js
hlt
insb
lds
mov
mov
sub
in
mov
fsubl
popf
inc
jp
lret
pop
dec
xchg
es
int3
stos
pop
and
inc
jecxz
insb
jp
fsubrl
lret
sub
push
fwait
insb
push
jb
dec
sbb
jne
ret
inc
cmpsl
dec
fisttpll
andps
loopne
push
pop
cmc
inc
stc
fs
push
adc
pop
mov
std
jbe
je
jp
dec
adc
pop
adc
call
xchg
aad
daa
addr16
xchg
out
sbbb
in
int3
pop
sti
cmp
mov
xchg
js
aas
xor
lock
or
cmc
out
jo
sbb
add
flds
jmp
aam
outsb
push
jo
pop
loopne
daa
mov
rcl
repnz
es
add
add
mov
pop
nop
jl
fs
jl
sarl
xor
sbb
stos
sub
lahf
out
push
rolb
scas
add
shlb
jno
shrl
or
sub
push
mov
push
jecxz
ret
iret
push
js
inc
inc
sbb
push
inc
test
inc
das
popa
adc
mov
mov
inc
fidivl
es
lods
adc
push
xchg
sti
outsb
test
mov
xchg
nop
lods
dec
loopne
jle
popw
mov
movsl
test
jno
btr
or
in
repz
jl
ja
shrb
shll
xor
pop
fidivrs
sbb
adc
xor
fs
daa
out
mov
adc
popf
out
out
xchg
int
jnp
lcall
push
mov
and
lods
add
aas
sbb
or
in
and
out
or
leave
xchg
pushf
out
or
mov
adc
out
cmpsl
out
cltd
das
mov
daa
ret
and
les
mov
inc
add
jno
push
std
cmpsl
mov
push
loope
adc
loop
out
jne
loop
mov
subb
or
loop
popa
fistpl
mov
inc
outsb
xchg
scas
cli
imul
jns
mov
cmp
repnz
cmpsb
lea
xor
je
dec
fmul
fucomp
aaa
sbb
mov
adc
sbb
cmp
jg
mov
pop
mov
in
xchg
pop
jb
gs
ja
enter
mov
inc
push
out
sbb
enter
mov
xor
adc
sbb
jne
aam
cli
loop
jge
inc
dec
repnz
cmpb
sub
cmp
or
scas
or
fisubs
xor
out
push
shrb
dec
jnp
and
test
rorb
jge
cmp
js
or
dec
dec
sub
jnp
dec
jle
mov
or
push
jg
aam
and
jl
loopne
dec
inc
cwtl
mov
mov
mov
jmp
dec
xchg
inc
inc
xchg
xor
push
shl
sti
ret
push
fincstp
mov
test
push
int3
enter
cmp
nop
dec
stc
ror
outsl
mov
or
or
loop
sub
sub
xchg
cmpb
xchg
aam
adc
or
inc
jge
stc
rolb
inc
cmc
xchg
push
mov
sub
adc
or
jmp
sbb
pop
mov
lret
xchg
movsl
push
sbbl
dec
rorl
mov
push
jl
and
mov
in
push
lret
lds
repz
and
ljmp
faddl
mov
and
std
dec
xchg
int
sbb
jns
cmp
shrb
pop
int
cmpsb
bound
pop
jne
jns
js
shlb
xchg
ret
cmp
pushf
xchg
mov
jns
add
or
arpl
cmp
cmc
mov
scas
xchg
dec
or
pop
cmp
cwtl
imul
lret
insl
lahf
xor
cmp
imul
fs
inc
mov
add
pop
xchg
enter
push
scas
mov
outsb
xchg
shlb
dec
pop
fcmovne
cmc
inc
mov
sub
std
lds
jae
repz
andl
dec
xor
lea
shrl
sbb
sbb
mov
mov
pop
add
cwtl
lock
ljmp
insl
jg
sub
inc
movsl
out
inc
jl
sub
ss
mov
pop
imul
clc
lret
daa
sbb
mov
inc
add
outsb
lcall
insl
mov
arpl
out
cmp
les
enter
mov
jg
push
fisttpl
adc
mov
jns
enter
inc
pop
js
push
push
xadd
fdivrs
divps
aas
flds
rorb
jecxz
adc
mov
in
testb
cwtl
sub
push
lods
stc
stos
mov
jle
and
mov
cwtl
jg
dec
repz
jge
inc
adc
mov
adc
jne
aaa
stos
mov
pushf
sbb
push
shll
daa
mov
push
push
xor
pop
out
adc
pop
xchg
test
push
push
mov
add
adc
add
mov
rcrl
mov
xlat
or
xor
add
sbb
or
cmp
outsl
mov
xchg
dec
sub
sti
out
pop
xor
sti
jecxz
bswap
andl
out
aam
arpl
mov
testl
add
cmpsl
lret
pusha
iret
push
sub
mov
insl
adc
adc
sub
dec
mov
dec
sbb
mov
icebp
mov
push
jp
sbb
mov
pop
push
and
fcomps
imul
ret
xchg
leave
jbe
shrl
adc
and
out
fwait
jmp
xchg
movsl
movsl
pushf
fisubrl
adc
cmpsb
adc
dec
fwait
pushf
jnp
cmp
repz
in
pop
enter
repz
pop
pushf
outsl
xchg
test
sti
xor
cmpsl
push
insb
loopne
cmp
shlb
aaa
sbb
sbb
sbb
sahf
push
imul
and
sbb
and
push
push
popl
stos
cmp
shl
add
push
fnstsw
sub
mov
mov
scas
es
aad
jae
movsb
leave
pop
icebp
fnsave
lahf
mov
xor
add
shll
adc
mov
dec
inc
adc
lret
mov
das
adc
pushf
mov
mov
loop
lods
add
subl
repz
testb
out
loope
movsl
sbb
mov
cmc
clc
insl
cmp
adc
or
shll
sbbl
sbb
push
loopne
dec
mov
fadds
dec
cmp
xchg
mov
mov
or
sahf
mov
stos
les
addr16
add
dec
mov
sub
or
rcr
mov
adc
ds
mov
xchg
leave
and
nop
add
aad
cmpb
lods
mov
or
adc
movsb
js
out
outsb
pop
test
leave
jle
inc
jp
adc
mov
sbb
xor
xor
outsl
pushf
jae
push
pop
into
imul
shrl
sub
addr16
push
test
ja
fdivr
dec
ja
js
adc
jmp
insl
jle
mov
das
mov
pop
push
aam
in
xchg
mov
lock
gs
and
shlb
icebp
adc
jbe
pop
mov
movsb
xor
push
js
pop
jb
ja
pop
or
xchg
fnsetpm(287
divl
sbbl
push
xchg
sbb
sahf
add
xchg
js
pop
push
jle
lret
dec
cli
mov
xor
ljmp
inc
pushf
mov
lods
dec
les
xor
push
dec
push
test
dec
sbb
fcoml
test
push
fistpll
inc
cmp
mov
test
jnp
cmp
adc
movsl
es
mov
fldl
cs
fiadds
outsb
mov
scas
inc
inc
mov
fildll
mov
outsb
inc
sub
std
cmp
mov
ljmp
jae
sub
rcrb
or
fldcw
out
mov
jp
push
mov
test
or
jg
es
movsb
mov
xchg
xchg
shl
cmp
call
inc
add
in
push
daa
lds
scas
lahf
cmp
lock
sbb
test
cmpl
mov
in
in
push
or
dec
mov
pop
enter
push
fs
shll
xchg
mov
mov
insl
ja
outsl
mov
mov
imul
xchg
push
icebp
into
loopne
clc
jle
pop
inc
mov
hlt
nop
push
loopne
ds
lret
lret
clc
das
adc
xchg
sti
sub
in
dec
pop
xchg
sbb
mov
xchg
out
mov
mov
mov
jne
jo
or
leave
xor
lea
dec
cltd
data16
in
mov
inc
xlat
out
sub
cmp
mov
sahf
ja
mov
out
je
in
sbb
lods
or
lret
out
jg
cmp
mov
inc
imul
mov
mov
xor
push
mov
ljmp
das
sub
cmp
das
xor
pop
or
jg
add
sbb
xchg
xchg
dec
ret
sub
dec
stos
pop
out
pop
and
mov
fldl
out
mov
dec
cmpsl
and
loopne
les
dec
cmpsb
pop
cltd
divl
or
aad
daa
dec
and
inc
cmp
dec
cmp
and
sub
cli
xlat
aad
and
div
dec
and
iret
incb
test
adc
decb
loop
pusha
in
sub
stc
ds
enter
in
xor
mov
or
sbb
ror
aam
jbe
int3
pusha
mov
mov
xor
dec
repz
ja
js
sbb
bound
jne
outsb
and
push
cmpsb
and
pusha
inc
or
or
shrl
pop
xchg
inc
mov
push
sbb
insb
or
jo
adc
test
mov
mov
sbb
xchg
adc
push
roll
jns
hlt
mov
rorb
mov
mov
xchg
lcall
mulb
push
jne
fwait
insl
add
pop
cmp
cs
dec
jne
loopne
ret
adc
mov
xchg
adc
fildl
push
jmp
hlt
xor
xchg
or
arpl
jp
push
xor
aam
ret
cmp
dec
scas
adc
and
rclb
cwtl
sbb
pop
test
cmp
addb
notb
loopne
andl
decl
mov
cwtl
mov
mov
or
and
maskmovq
repnz
dec
jmp
aaa
push
push
adc
stc
jl
and
mov
jb
xchg
add
and
imul
jbe
jecxz
lcall
cmc
xor
rclb
sti
jns
fisubrl
add
fadds
mov
push
mov
cmpl
cs
xor
xchg
orl
loopne
jae
mov
sub
pop
and
sub
pop
mov
scas
push
andb
aas
jmp
dec
inc
iret
jae
mov
shll
xchg
mov
fmull
xor
mov
imull
lret
mov
xor
add
mov
scas
push
pop
ret
pop
inc
fsubrp
sti
inc
push
inc
push
loopne
and
push
mov
xor
xchg
adc
push
mov
shl
and
pop
xor
sarb
mov
shrl
add
mov
je
call
out
mov
add
inc
hlt
push
jecxz
cli
addr16
das
les
movsb
enter
scas
push
push
mov
jecxz
add
loop
mov
pop
outsb
mov
push
call
fisttps
roll
sbb
das
int3
test
xchg
popa
mov
shlb
inc
xchg
imul
mov
hlt
es
jnp
pop
mov
jl
jbe
lret
add
sti
frstor
or
arpl
mov
dec
loop
shlb
ss
out
clc
insb
jae
nop
in
adc
add
xor
daa
xchg
testl
fwait
aam
test
xor
or
and
mov
dec
inc
and
jo
mov
push
push
jp
popf
test
je
cs
push
and
out
xlat
nop
test
call
ljmp
inc
add
xchg
dec
and
dec
fcoml
mov
insl
sub
test
mov
mov
lret
cwtl
mov
test
imul
mov
cmpsb
shlb
fsubrl
pop
xor
data16
fiaddl
negb
and
loopne
aaa
sbb
nop
mov
les
mov
lahf
insb
sub
cmp
jbe
sub
xchg
xor
cmc
jecxz
lcall
push
xchg
pop
sbb
mov
adc
mov
test
add
fists
sbb
adc
out
test
or
xor
das
inc
mov
movsl
dec
mov
popa
xor
and
mov
push
je
xor
cmp
cs
repz
push
push
or
xchg
js
xchg
pop
jno
jo
fsubs
scas
sar
in
in
and
imul
sbb
scas
add
dec
dec
fs
loopne
dec
add
or
sbb
movsb
adc
sti
or
push
or
jg
or
mov
insl
add
fsubrl
insb
imul
pusha
adc
in
mov
scas
lods
inc
or
loopne
popf
dec
repnz
add
out
lahf
jmp
sub
into
lret
inc
sbb
jno
out
xorl
inc
cli
push
leave
jp
std
movsl
mov
ret
shl
rcrl
or
outsb
call
test
add
movsl
cltd
pop
xchg
ljmp
push
cmp
dec
enter
sahf
cmpsl
cwtl
jb
div
push
ljmp
outsl
jmp
mov
add
adc
add
orb
add
int3
add
pop
cli
xchg
addr16
test
cli
or
mov
sti
lret
pushf
cmovbe
pop
push
lods
sbb
cmp
dec
push
rol
adc
roll
xchg
inc
mov
and
test
add
or
pop
sbb
jg
mov
pushf
push
lret
adcb
ds
mov
sub
lret
sarl
outsb
les
iret
mov
adc
cwtl
mov
and
je
inc
xor
fwait
mov
in
xor
std
test
into
negb
cmc
aad
loope
push
cmp
or
ret
popa
pop
cwtl
sub
rcr
inc
ret
xor
mov
outsb
push
mov
fwait
hlt
sbb
loopne
sbbl
movsl
aam
dec
rcrl
or
mov
pop
data16
adc
push
scas
jb
push
cmc
neg
sub
daa
das
out
rorb
push
mov
push
ljmp
add
add
cld
lods
ss
pop
add
jno
rcll
rol
aaa
and
outsl
fisttps
sbb
inc
mov
imul
and
cmp
arpl
push
push
xchg
push
sub
sbb
xchg
mov
cmpsb
ja
outsb
repz
sub
aam
dec
sbbl
ja
sbb
jecxz
mov
pop
andl
nop
lret
dec
jg
push
cmpsb
lret
xor
leave
insl
inc
sbbb
loopne
cmp
fldln2
enter
xor
push
dec
dec
fsin
aam
xchg
cltd
out
jl
pop
push
xchg
cwtl
and
push
mov
addr16
jl
loopne
jns
dec
xor
loope
push
lock
test
in
ret
mov
jmp
cmc
adc
push
mov
test
std
arpl
push
mov
mov
and
inc
fmul
leave
mov
scas
shlb
add
inc
and
lahf
or
rcrl
mov
adcl
pop
mov
mov
repz
mov
cmp
push
roll
out
xor
cmc
mov
jbe
loop
mov
repz
emms
sbb
icebp
in
and
xor
adc
push
scas
enter
pop
sahf
ds
or
mov
arpl
dec
mov
enter
pop
lret
test
xchg
leave
ret
fcmovne
cmpsl
push
mov
imul
js
and
jg
into
cld
lret
cwtl
cmp
rclb
xchg
push
movsb
jnp
incl
incl
jl
sub
into
push
mov
lret
int
call
sub
or
sahf
pop
cmp
popa
gs
lods
or
xchg
jno
stos
mov
fsubrs
adc
fsubl
jno
icebp
adc
sbb
ror
adc
xor
mov
xor
mov
in
repnz
adc
lret
dec
fcom
adc
jno
test
sbb
nop
bound
or
lods
out
test
andb
push
mov
adc
mov
mov
leave
out
fs
rol
xchg
mov
add
adc
add
mov
inc
ljmp
jle
xlat
adc
rclb
sub
sbb
inc
jp
sbb
jb
inc
pop
lods
dec
cmp
jecxz
inc
imul
cld
inc
mov
lock
push
push
mov
leave
frstpm(287
inc
out
jbe
aas
lea
mov
fbstp
inc
jbe
push
int3
sub
cmp
stc
aad
cli
faddp
inc
ja
mov
repz
mov
frndint
mov
push
in
add
mov
stc
xchg
in
mov
or
sub
lds
xchg
sub
mov
add
xchg
xor
mov
sahf
adc
push
les
or
test
inc
loope
sti
std
aad
pushf
pop
xchg
xchg
into
arpl
in
push
in
fnstsw
or
sbb
lret
adc
sbb
repnz
mul
cmp
arpl
mov
shr
adc
adc
inc
wrmsr
adc
cld
faddp
dec
scas
mov
mov
cmp
xchg
jle
aad
push
xchg
shrl
cmp
dec
add
pop
ja
add
or
adc
pop
iret
cmpsb
sahf
push
sbb
addr16
lahf
mov
jo
les
or
aam
test
adc
add
rcrl
scas
sub
xchg
mov
push
aas
pushf
lock
ret
movsb
lret
sbb
sbb
jb
shlb
jp
fisubrs
dec
sbb
movsl
jecxz
cmp
sub
push
push
jb
mov
gs
imul
push
orb
jnp
cmpsl
or
testl
jo
aas
addr16
stos
xor
jne
add
push
daa
xchg
ss
inc
jge
mov
push
mov
stos
pop
movsl
sbb
mov
mov
loopne
cmp
adc
es
sbb
push
inc
test
jle
cli
jb
pop
movsb
push
or
inc
inc
pop
push
es
add
ljmp
or
ds
data16
mov
sbb
or
push
inc
jns
divl
sahf
ds
lahf
adc
cmp
xor
cmp
fnclex
push
sti
sbb
jnp
xor
outsb
pop
inc
mov
sub
cs
or
out
sub
jecxz
sub
pop
test
test
jnp
das
dec
adc
mov
iret
call
ret
jne
xlat
or
shl
out
sti
mov
data16
sahf
testb
pop
sbb
cmpsb
std
push
sbb
dec
shl
xlat
aad
lods
sub
sahf
lret
sub
arpl
push
push
cmc
jg
cli
adc
push
cmp
xchg
jg
dec
jns
or
out
in
push
adc
sub
mov
xorl
imul
xchg
mov
sub
ja
mov
loopne
dec
fdivrp
xchg
test
mov
inc
popw
push
cld
cmp
push
pop
inc
mov
imul
test
pushf
jl
dec
nop
adc
push
andl
push
cmp
imul
data16
shlb
sarl
cltd
fidivrl
dec
imul
dec
mov
inc
inc
fdivrp
adc
mov
add
adc
mov
pop
fcompl
lock
cmc
mov
push
jp
jne
cmpsl
or
push
sub
bound
xchg
je
fst
les
mov
pop
hlt
inc
insb
xchg
aas
stos
insb
jo
icebp
stc
mov
inc
fdivrp
fisttps
lock
pusha
adc
daa
inc
cmc
out
leave
imul
pop
mov
mov
in
ror
pop
dec
mov
add
repz
call
and
xor
les
insl
lods
in
add
sahf
addl
fmull
sbb
ss
aaa
outsl
lret
dec
icebp
daa
lcall
stos
inc
arpl
out
das
pop
mov
inc
scas
or
and
xchg
iret
cld
mov
movsb
xor
cltd
xor
mov
mov
jns
hlt
bound
decb
cld
dec
fsts
sub
inc
fwait
cmp
test
or
stc
or
lret
ss
mov
or
loopne
xchg
sti
roll
dec
sbb
addr16
sti
divb
imul
pop
jmp
hlt
scas
pop
bound
cwtl
int3
jno
add
sbb
fxch
jo
cmp
lea
in
jbe
mov
popa
jg
cmc
sbb
inc
mov
lea
mov
ret
inc
shr
imul
inc
and
fs
int
fcmovu
fwait
pop
aad
std
xchg
jle
rcl
iret
aaa
mov
lret
jns
jge
mov
sub
lcall
add
sub
inc
setbe
push
pop
xor
push
xchg
mov
out
or
xor
std
sub
addr16
sahf
jbe
aas
lret
movsl
cmp
mov
lcall
push
add
pop
dec
fstpl
lret
dec
push
mov
les
cmp
int3
mov
xor
pop
repz
dec
mov
push
movsb
pandn
xor
push
xorb
cmp
jno
movsl
leave
and
mov
and
mov
push
popa
jmp
sbb
mov
std
jle
and
out
aaa
bound
lcall
sbb
fimuls
movsl
xor
dec
xor
mov
jmp
in
fdiv
add
dec
jg
or
cmp
or
das
mov
imul
pop
sub
adc
jb
adc
jp
decb
lcall
jmp
repz
inc
sub
inc
test
stos
lret
jb
movsb
cmp
dec
out
or
jno
inc
mov
ret
adc
divb
ret
ret
repnz
push
dec
je
xor
adc
hlt
and
pop
sti
xchg
or
sub
mov
les
movsb
imul
inc
jl
js
or
insb
or
popf
mov
lret
rcll
out
daa
push
add
int3
out
and
sub
add
mov
jno
inc
push
sbb
mov
dec
xchg
rcrl
cmp
mov
jae
cli
mov
iret
pop
test
mov
scas
mov
pop
cmp
imul
and
cli
pop
cli
push
cmp
mov
xlat
xchg
inc
hlt
je
xlat
pusha
push
cmp
je
add
push
sarb
ret
pop
stos
clc
sbb
cs
shrl
fldcw
adc
lock
shr
mov
xor
mov
loop
push
sbb
aad
mov
loopne
stc
ss
rol
cmp
gs
xlat
shlb
mov
loope
pop
pop
mov
mov
mul
mov
cltd
lock
xlat
mov
sbb
fs
inc
ljmp
mov
mov
push
fwait
psubsb
jmp
in
cld
xchg
mov
in
pop
rcrb
jnp
sbb
mov
pop
xchg
icebp
pusha
xorl
xor
or
or
jle
jge
stc
in
push
jnp
mov
sbb
out
js
sti
jae
sbb
lods
jge
ror
sub
hlt
imulb
gs
lds
push
mov
sub
mov
xor
inc
test
fstpl
jo
push
mov
xchg
inc
add
repnz
js
sbb
stos
xchg
in
sub
or
rcr
xor
or
mov
add
pop
jnp
lcall
or
push
mov
jge
sti
inc
sbb
sbb
outsl
movsl
mov
mov
xchg
lcall
jbe
dec
xor
or
fmull
pop
rorl
sub
testl
icebp
mov
das
push
dec
dec
push
scas
repnz
mov
sbb
xchg
cmc
lea
pop
data16
sub
je
clc
sbb
mov
arpl
xchg
add
call
mov
dec
jge
test
push
loope
dec
loopne
mov
jbe
stos
cmpb
das
jbe
roll
mov
cs
mov
sub
in
push
or
mov
lcall
or
dec
leave
push
ss
add
cltd
and
jne
test
adc
mov
add
rorl
andb
sbb
and
xchg
stos
mov
clc
pop
jbe
xor
fs
sbb
mov
cmc
jne
pushf
xor
repnz
idivb
fiaddl
inc
inc
shl
popa
cli
cmp
push
ljmp
xor
sbbl
cld
pop
or
sbb
and
call
xlat
and
and
mov
movsl
xchg
mov
xor
lea
test
xchg
stc
daa
mov
jp
sub
mov
cmpsb
mov
rorb
shrb
roll
sub
lcall
xchg
repz
dec
dec
jle
push
ss
sti
nopl
or
das
xor
dec
or
xor
ret
fwait
mov
push
fwait
cltd
jae
fdivrl
outsb
jnp
aad
mov
addr16
icebp
pop
fdivl
orl
outsl
fnsave
xor
dec
mov
cwtl
scas
sub
fstpt
ret
jne
and
xchg
sti
cmpsl
sub
add
call
adc
push
jbe
pop
pmuludq
rol
fmuls
jl
pop
cmp
pop
in
mov
xor
mov
lock
jge
jp
push
sub
rorb
jbe
push
xor
cmpsl
sti
mov
cmp
test
add
mov
xchg
mov
rorl
cld
notl
cltd
nop
adcb
outsl
dec
xchg
cmc
cmp
push
nop
mov
inc
sahf
mov
test
mov
push
or
and
mov
fwait
movb
xchg
imul
xchg
jno
sbb
xchg
add
pop
test
push
cmp
add
pop
out
sbb
mov
icebp
int3
in
mov
jno
or
mov
xor
adc
fst
outsb
push
cmp
and
test
imul
push
or
push
jmp
nop
sbb
stos
xlat
cwtl
dec
out
std
or
cltd
cmpsb
testl
push
loope
mov
inc
loopne
popa
adc
les
inc
cmp
imul
and
int
xor
sub
out
sub
popa
sub
and
push
xor
xchg
or
adc
jecxz
stos
jbe
jne
pop
test
lods
xorl
inc
dec
std
popf
loop
xchg
dec
push
mov
pop
cmpsb
dec
mov
mov
xlat
ret
cmp
jnp
jnp
add
stos
lret
xchg
lds
jmp
in
sub
xor
cli
adc
adc
sub
sbb
iret
sub
mov
imul
mov
jnp
cmp
outsl
sub
insl
push
pop
scas
in
aaa
xor
add
pop
lods
push
pop
pop
rcrb
aam
mov
mov
adcb
lcall
pop
pop
jmp
ljmp
sti
in
jbe
mov
cmpsl
mov
inc
outsl
sti
pop
inc
fisubrs
inc
xor
notl
adc
data16
js
popa
jnp
hlt
cmp
push
cmp
adc
add
mov
sbb
notb
xor
cwtl
lock
mov
sbbl
aad
push
les
xchg
lock
xor
mov
enter
aaa
mov
add
adcb
xor
cmpsb
jge
scas
jmp
mov
in
xor
jmp
jbe
xchg
cli
jg
pop
inc
shlb
in
cmp
cli
scas
div
movsl
test
cmpsb
dec
xchg
and
sub
call
xchg
push
imulb
xchg
xchg
push
out
mov
sbb
jb
xlat
adc
jp
xchg
test
xor
fistl
add
sti
xor
mov
sbb
mov
xchg
push
xor
mov
stc
dec
add
dec
popa
add
lds
mov
fdivl
mov
jb
inc
loope
adc
int
loop
xchg
inc
in
lods
lret
adc
mov
rorw
das
ss
pop
aas
add
or
lods
xor
aaa
mov
mull
icebp
mov
das
mov
mov
xor
ds
int
dec
out
rclb
lahf
xchg
dec
jo
mov
or
xchg
and
jae
sub
fistpll
mov
iret
popa
pop
loope
stc
ffreep
jg
jecxz
lret
lods
imul
sub
inc
es
lock
mov
sub
adc
and
rol
sub
bnd
and
ss
and
sub
jmp
mov
jne
adc
test
daa
into
in
and
jge
lods
mov
add
sbb
inc
sti
scas
cli
jmp
push
cmp
and
int3
in
cmp
pop
cmp
add
push
int3
sub
sub
push
jae
ljmp
mov
adcw
ljmp
stos
mov
xchg
xchg
shrb
je
stos
mov
fwait
fwait
jb
dec
xor
lcall
xor
std
jg
xor
popa
inc
mov
xor
mov
mov
fnstsw
fidivl
ss
xchg
jle
ret
xchg
and
lret
sbb
mov
hlt
xchg
jno
bound
mov
sbbb
cmp
sub
jle
sub
lds
xchg
xor
decb
jne
push
fwait
sahf
mov
pushf
lcall
cltd
and
into
addr16
push
inc
fdivrl
mov
jno
repz
enter
push
pop
cmp
cmp
or
cmp
xchg
xchg
sbb
adc
in
jns
dec
imul
inc
test
test
cwtl
fisttpll
or
jno
div
out
in
xor
mov
mov
sbb
cmp
mov
dec
jmp
mov
push
add
dec
inc
fwait
xorb
loop
mov
push
inc
outsl
jne
iret
jne
mov
inc
push
jecxz
cmp
push
int
loop
cli
push
and
push
push
mov
pop
xor
aaa
in
mov
std
loop
lods
aam
push
fwait
dec
orb
leave
stos
mov
fmull
call
pop
mov
mov
fstpl
lcall
out
lcall
sbb
xlat
add
aas
lock
fildl
jmp
clts
pop
insl
cmp
pop
testb
mov
mov
inc
pusha
or
mov
dec
call
mov
sub
and
push
adc
fidivrs
jle
cld
push
dec
sub
mov
cli
inc
insb
hlt
incb
cld
sbb
pop
test
sahf
xor
pop
lret
sbb
ds
popa
sbb
stc
icebp
psubw
xchg
test
out
mov
jae
push
pop
xor
sbb
in
lock
xchg
ret
dec
sbb
cmpsb
adc
pop
int
out
mov
dec
test
popa
push
lret
cmp
into
xchg
and
les
ja
rcrb
xchg
out
lret
push
mov
ljmp
mov
or
mov
ret
fwait
popf
out
cmp
jne
sub
mov
or
fsubrl
adc
movsb
add
fidivrl
into
insl
movsb
data16
out
inc
loop
dec
in
mov
dec
mov
ret
andl
test
xchg
popf
xor
adc
sti
inc
out
pop
stos
ja
cmp
js
xchg
data16
imul
addr16
icebp
cmp
fldt
in
xchg
mov
test
cli
sbb
push
lods
repz
push
adc
icebp
aas
out
jge
pop
pushf
mov
or
inc
xchg
cmc
jnp
sub
fsts
outsb
ret
ja
movsb
leave
mov
loopne
xlat
sbb
fwait
jno
mov
hlt
adc
ds
stc
mov
pop
jbe
movl
lds
out
mov
pop
jae
jae
jo
xchg
sarl
enter
imulb
or
add
cmp
les
dec
add
out
adc
pop
shll
mov
cmp
clc
leave
push
daa
shll
cmp
ret
jns
xchg
std
iret
repz
jg
inc
insb
ja
loop
scas
add
xor
shl
push
test
mov
repnz
cmpsl
inc
sbb
mov
clc
add
fnstcw
mov
pop
mov
push
and
sub
inc
fldenv
push
mov
in
sub
adc
pinsrw
pop
and
lret
push
fcompl
inc
subb
loop
jp
das
pushf
loop
and
ljmp
or
push
cmp
jl
pop
int
adc
mov
mov
xchg
fmull
mov
xchg
mov
test
pop
es
fiadds
nop
fadds
cmp
in
mov
lds
fnstenv
cs
pop
mov
into
jmp
loopne
insb
mov
and
bound
xor
xor
clc
mov
adc
fwait
bound
jle
push
sub
mov
pop
dec
cmp
xchg
pop
mov
mov
ret
pop
ret
leave
mov
clc
cld
aad
std
ficoms
xchg
push
push
cmp
jns
iret
push
dec
lcall
jp
loopne
mov
mov
fucom
pusha
push
mov
sub
fld
dec
fildl
std
fs
imul
or
inc
or
jmp
or
jmp
dec
jecxz
shll
int3
xchg
sub
pop
inc
scas
mov
sbb
aam
sub
pop
dec
push
out
pop
subb
sbb
mov
out
mov
xlat
xorb
sub
add
cmp
movb
pusha
sbb
adc
mov
adc
ss
shrb
cmpsb
xor
outsb
mov
mov
mov
daa
cmpsb
push
xor
xor
ss
push
loope
jl
pushf
ret
insl
jmp
lods
scas
jl
mov
push
adc
adc
mov
cmp
mov
call
cmp
xor
mov
dec
arpl
cs
pop
mov
jne
and
sub
jp
pop
jae
call
bound
aad
push
jne
mov
sbb
lret
cmp
and
lret
push
pop
test
inc
pop
orl
mov
mov
sahf
sbb
bound
xor
push
mov
lods
xor
or
adc
insl
sbb
mov
punpckhbw
outsb
aas
add
imul
lods
or
sti
mov
inc
sub
add
gs
into
lret
sub
insb
rol
jns
xchg
fcmovnu
or
dec
sarl
mov
cltd
sbb
sbb
cmp
jnp
jns
pop
into
and
loope
outsl
leave
push
aad
xchg
rcll
enter
fldt
lret
mov
lds
xchg
movsb
scas
mov
ret
popf
nop
add
loope
test
jns
loope
scas
enter
popf
inc
loop
or
mov
and
mov
enter
aas
lahf
insb
idivb
sub
or
int3
cltd
movsb
xor
jmp
add
lock
shrl
imul
or
adc
nop
and
mov
mov
in
push
pop
repz
add
sub
adc
rcll
bound
lods
clc
xor
add
loopne
les
adc
imul
sub
ret
sti
xor
outsl
es
xlat
outsl
mov
lea
inc
fildl
xor
mov
cmp
xchg
aam
xchg
mov
aaa
sub
jbe
inc
mov
add
inc
out
fisubrl
lcall
push
fsubrs
mov
mov
add
repz
lock
shll
sbb
arpl
mov
or
mov
test
cs
xorl
test
jbe
adcl
xchg
push
into
stos
inc
loope
in
dec
mov
dec
mov
incl
pop
mov
int
icebp
mov
out
or
dec
popa
jle
sub
movsb
push
subb
fs
jnp
mov
xchg
adc
into
mov
rolb
pmulhuw
xchg
mov
orb
clc
push
in
dec
sub
test
sub
mov
xchg
jle
insl
push
mov
cld
inc
ja
test
out
sbb
sbb
xor
add
cmp
enter
iret
inc
jb
adc
xchg
dec
in
mov
lds
mov
sub
daa
dec
or
xorl
arpl
dec
add
in
dec
fs
mov
add
fs
pop
fisubrs
decl
mov
adc
mov
lcall
push
pop
xchg
mov
lret
jb
dec
inc
ss
in
addr16
inc
sbb
xor
je
scas
add
ret
mov
push
adc
xchg
mov
icebp
push
gs
out
lahf
in
bnd
shrl
mov
push
adc
stc
ja
or
pop
adc
sub
shll
pusha
bound
sbb
xor
jns
jl
fs
aas
or
jb
cmp
ja
adc
dec
inc
add
in
or
int
push
jp
push
loop
out
int
cwtl
inc
mov
push
or
shrl
xchg
dec
mov
and
rcrl
rorl
stos
push
stos
hlt
push
or
cmpsl
in
pusha
decb
adc
or
mov
pop
in
xor
rcrb
mov
pop
stos
loope
or
ficoml
lods
inc
lret
adc
dec
push
mov
in
cmpsb
push
and
shlb
add
ds
lea
and
repnz
nop
scas
lret
sub
adc
fst
outsb
shlb
jnp
push
xchg
sbb
push
inc
adc
imul
mov
ret
loope
pusha
pop
loop
push
mov
mov
jle
leave
ror
xor
jp
stc
jnp
and
sub
add
maskmovq
divl
push
outsb
pop
push
jb
lods
mov
pop
pop
adc
mov
sbb
in
jle
and
std
movb
mov
lods
cmp
insb
int
daa
ljmp
mov
jb
ret
or
dec
popa
jbe
xchg
push
cmc
aaa
lock
dec
inc
cmc
lds
mov
pop
repnz
mov
jno
jle
aaa
cmpsb
jne
mov
or
clc
adcb
dec
sbb
test
fucomip
or
ret
insb
or
xlat
push
iret
adc
pushf
std
pop
insb
test
and
mov
pop
nop
aas
inc
push
cmp
insl
jl
dec
fildl
adc
test
add
xbegin
pop
data16
dec
loop
cmpsb
cld
popa
cwtl
cltd
cmp
clc
aaa
out
cmc
pop
xor
adc
push
mov
dec
js
sbb
dec
or
bound
push
sbb
mov
cwtl
bound
sarb
mov
sub
mov
push
jp
sub
loop
cmc
dec
mov
das
jne
loop
aad
xchg
adc
decl
lods
jo
movsl
aad
fsub
jae
pop
mov
das
movsl
xor
ja
insb
sub
fidivrs
xchg
out
mov
mov
sbb
sbb
loop
fidivs
cli
in
shlb
mov
pusha
mov
test
push
mov
inc
jno
lret
xor
nop
xchg
shll
or
in
push
ds
inc
scas
xor
dec
std
inc
mov
mov
test
adc
mov
repnz
dec
repnz
stos
and
inc
jns
mov
mov
imul
add
repnz
mov
cmp
or
popf
inc
mov
or
int
add
in
sahf
outsb
push
or
call
pop
lods
mov
hlt
sub
mov
pop
shrl
aam
stc
pop
scas
jecxz
test
push
jle
xchg
pop
or
mov
pop
fcmovb
leave
cld
jae
dec
iret
sbb
or
cmpsb
push
incl
jg
std
ds
rol
sbb
sbb
mov
fisubs
imul
cmpsb
xor
inc
fwait
xor
sub
or
out
cmp
dec
movsb
jbe
mov
lea
imul
icebp
inc
xchg
in
addr16
scas
stos
mov
sahf
orl
sub
cmp
shrl
sbb
loop
xchg
aad
mov
jle
inc
mov
push
stos
enter
mov
adcb
push
and
in
jle
fs
cmp
and
adc
and
stos
addl
pop
push
adc
push
push
or
test
push
nop
out
std
xor
imul
xor
xchg
out
pop
in
fisubs
jns
xor
iret
add
popa
cltd
jb
or
mov
cmc
inc
add
data16
or
jmp
fistl
jae
mov
mov
sub
push
inc
cmp
arpl
mov
shrb
mov
cmp
pop
adc
in
add
cmp
sbb
sub
setg
addr16
adc
xor
pop
mov
sahf
mov
xor
lret
mov
jp
add
fisubrs
enter
pushf
subb
aaa
xlat
mov
push
imul
lret
into
test
cwtl
push
dec
cmp
dec
int
xchg
test
and
addr16
mov
mov
mov
aam
out
test
jne
in
out
mov
orb
iret
aaa
gs
add
repnz
out
push
pushf
repz
mov
push
popa
push
push
mov
das
movsl
sarl
fiadds
adc
pop
ja
aas
testl
jnp
bound
add
sub
test
mov
dec
popw
push
adc
fimuls
push
pop
sbb
ficoml
jne
mov
jb
mov
call
aas
pop
jl
cwtl
jl
adc
push
mov
cs
pop
adc
int
ja
nop
sti
in
enter
mov
jg
sub
or
xor
inc
add
pop
test
pop
mov
mov
pop
inc
mov
add
or
aad
pop
out
xchg
add
cwtl
and
pop
shll
and
repz
adc
jmp
cmp
dec
sub
push
sbb
shll
bound
test
pop
test
pop
sbb
lret
pop
jns
xor
pop
fisttps
loopne
inc
xor
in
mov
adc
lahf
pop
inc
shll
arpl
and
add
int
stc
mov
sub
fsubrl
loope
sub
pop
cmp
ja
xchg
mov
jbe
shlb
sti
mov
popf
xchg
inc
ret
jae
dec
xchg
test
mov
stc
dec
inc
pop
stos
js
adc
fildl
testl
popf
add
jne
inc
fcoml
subl
lahf
jmp
xchg
mov
out
add
loop
inc
push
pop
or
fstpt
pop
cmpsb
out
test
add
mov
repz
dec
sbb
adc
sahf
inc
stos
testl
and
in
leave
jge
mov
loop
arpl
cwtl
fimull
lcall
in
jmp
outsl
cmp
mov
xlat
in
push
fimull
lret
stos
xchg
adc
xchg
push
jbe
icebp
pop
outsl
pop
xor
mov
insl
pop
xchg
add
xchg
cmp
in
addr16
enter
sbb
xchg
fistps
sbb
call
or
mov
dec
mov
iret
lret
shl
cmp
sub
cmp
pushl
nop
add
pop
enter
or
and
sti
addr16
cmc
jb
pop
sub
popa
push
inc
push
out
enter
inc
es
subb
pop
bound
pop
shrl
mov
cltd
scas
inc
push
ret
nop
mov
sbb
arpl
ret
outsl
repz
fnsave
test
stos
add
pusha
mov
mov
cwtl
push
ficoml
pushf
lret
aad
stc
mov
mov
std
or
xor
push
mov
int
push
xchg
fisttpll
or
cmp
cmpsb
in
sahf
pop
shr
test
mov
fwait
pop
shrb
call
push
xchg
mov
pop
inc
and
scas
inc
lahf
loope
mov
adc
fisubrs
subl
std
mov
shll
pop
mov
sub
jne
cmp
push
mov
ds
ljmp
loope
adc
es
mov
sbb
rol
cmc
mov
int3
in
imul
leave
push
jecxz
cmpsl
inc
call
mov
in
xlat
inc
jo
mov
pop
add
test
xchg
and
cmp
mov
loop
mov
mov
adc
data16
movsl
int3
cltd
xor
lahf
pop
inc
fldl
lcall
aad
mov
mov
push
mov
pop
xchg
aas
add
xor
int3
cmpsb
xchg
dec
xchg
sbbb
jae
ljmp
xlat
aad
iret
jle
movsb
xor
pop
dec
push
pop
push
mov
popa
imul
jecxz
stos
loopne
pop
loope
xchg
mov
push
sub
sahf
lock
das
insl
data16
cmc
ds
ror
dec
nop
fstps
xor
pop
pop
push
adc
arpl
inc
cmp
and
and
or
jl
or
xor
jns
adc
dec
sti
xor
shrb
outsb
mov
out
or
popa
push
ret
and
mov
push
outsl
mov
daa
sti
and
pop
aad
stos
cmpl
movsl
in
lea
imul
enter
in
into
lret
mov
dec
movsb
data16
icebp
push
xchg
lock
jl
mov
push
aas
test
cmp
xchg
in
outsb
imul
iret
ret
movsb
nop
stos
sbb
pop
add
mov
mov
out
lods
xchg
insl
cmpsl
dec
jne
fstpl
pop
repz
lcall
jae
mulb
jb
bound
add
daa
or
loop
inc
mov
mov
sub
xor
xchg
movsb
lods
add
xchg
cmp
inc
push
push
mov
sub
in
push
call
popl
push
mov
ret
andb
mov
ja
jae
jnp
fistpll
jle
adc
dec
or
or
movsl
dec
prefetch
jecxz
mov
jge
xchg
and
cmp
push
xor
mov
rorl
sub
xor
jg
pop
add
push
test
rol
std
xchg
loop
mov
mov
call
scas
outsl
mov
dec
addr16
into
cmp
cli
or
mov
je
aam
cwtl
mov
cmp
mov
jg
fdivl
scas
cli
inc
sarl
pop
cmp
pop
lock
call
mov
push
repz
jp
shlb
push
dec
push
mov
inc
push
mov
pushf
push
jmp
call
bnd
jle
inc
dec
add
sub
cltd
test
fisttpll
dec
jne
xor
int3
fisubs
push
testb
pop
mov
push
fcomi
sbb
and
add
je
xor
hlt
cmp
mov
dec
or
std
js
mov
outsl
bswap
push
xacquire
jge
jnp
loopne
popf
inc
sbb
icebp
xor
and
repnz
cmp
ficoml
out
and
jno
pushf
mov
mov
mov
cmp
mov
movl
repnz
xor
sbb
stos
sbb
push
or
add
cld
scas
outsb
pop
data16
sbb
cmc
mov
and
pop
pop
push
fsubl
adc
mov
cmp
lret
mov
adc
fistpll
out
push
in
aaa
stc
dec
sub
insb
jecxz
mov
mov
xorb
test
insb
pop
shll
fdivl
pop
pop
fwait
data16
pop
shr
pop
mov
cmc
outsl
bound
jmp
jge
lcall
dec
scas
ja
add
xchg
les
mov
jbe
or
sub
popa
call
aam
test
mov
add
and
xchg
je
xchg
xor
dec
nop
clc
xchg
rorl
sbb
mov
addr16
mov
gs
pop
sub
cltd
sahf
push
out
push
and
jne
xchg
push
and
rcrb
push
add
adc
repnz
popf
pushf
mov
and
cmp
nop
dec
mov
loope
mov
push
test
dec
pop
test
shlb
xchg
rcll
scas
jb
xchg
push
xchg
loopne
shlb
out
add
mov
iret
fisubrs
ja
xchg
decb
xchg
adc
cmp
jmp
cwtl
xchg
and
out
mov
sbb
push
or
inc
pop
push
sub
cmp
mov
sbb
hlt
mov
lahf
subl
cmc
dec
xchg
jle
addb
je
out
inc
add
mov
add
insb
xor
insl
cltd
out
adc
test
mov
out
push
and
or
fistpll
je
inc
and
popf
sub
lcall
push
sub
fmuls
sbb
out
mov
dec
ljmp
fisubrs
daa
in
outsb
ja
jae
add
in
aad
add
int3
pop
or
mov
and
out
lcall
pop
jo
lods
dec
iret
nop
fnstcw
repz
call
push
cmp
movsl
stc
adc
loope
pop
mov
jecxz
sbb
arpl
int3
sbb
enter
sti
jne
fwait
call
and
push
jnp
dec
cltd
int3
sbb
add
sub
ret
cld
jno
aas
jnp
and
int
ret
cltd
mov
enter
mov
sub
jmp
mov
fdivrl
inc
test
push
and
add
add
loop
xchg
cltd
in
ss
fidivl
rolb
sub
test
shlb
sbb
push
inc
jnp
mov
lahf
jmp
cmp
add
dec
rolb
out
xchg
pop
xorb
adc
inc
in
push
xor
jg
xor
in
push
out
cmp
hlt
out
xor
inc
xchg
hlt
sub
mov
lock
and
inc
jecxz
pop
dec
mov
imul
ficompl
aad
pop
lcall
ds
jnp
push
lcall
shr
ljmp
mov
add
fadds
sbb
push
aaa
aaa
cmp
cmp
movsb
mov
lcall
push
aad
adc
add
xor
adc
sub
xchg
dec
mov
test
xchg
int3
mov
out
icebp
lock
inc
cwtl
jmp
cmpb
js
and
aam
in
adc
cs
movsb
pop
xchg
inc
cmpsb
sbb
ret
push
add
int3
iret
inc
xchg
fisubrs
mov
out
mov
arpl
cmpsl
adc
push
or
pop
push
and
iret
mov
jns
or
xor
xor
dec
pop
les
fisttpl
mov
aaa
outsl
imul
test
xor
pop
pop
testb
fiadds
sbb
pop
jno
push
push
mov
jae
push
sub
int
inc
cs
or
sub
xchg
push
inc
dec
xlat
movl
fwait
scas
pop
dec
push
jbe
pop
dec
add
mov
and
xchg
inc
push
das
jno
stc
and
mov
mov
mov
jne
xchg
mov
mov
cmp
sbb
aas
leave
orl
outsl
mov
add
insl
fcmovbe
cmpsl
sarb
cwtl
xor
adc
sbb
jmp
pop
push
gs
lcall
cmp
inc
adc
cmp
daa
pop
stos
lods
jl
push
fwait
add
dec
adc
fwait
adc
and
rorb
xor
rorb
add
pop
outsl
cmp
push
cmp
jae
inc
mov
and
nop
mov
push
xchg
das
cmp
ret
inc
cltd
xchg
cmpsl
daa
inc
fmulp
pop
push
push
sub
push
cmpsb
inc
insb
cmpsl
cmp
adc
cmp
movsl
mov
jo
mov
mov
test
das
movsl
jmp
xchg
sti
push
mov
addl
jno
test
out
jnp
dec
mov
int
jns
cwtl
scas
insb
sahf
scas
nop
push
loope
inc
and
mov
stos
pop
cmp
sub
mov
sbb
imul
mov
jmp
and
or
arpl
leave
addr16
mov
xor
test
fistpll
je
pop
jno
aaa
dec
fadds
push
and
loope
mov
dec
addb
mov
push
lods
or
jo
xchg
shrb
pop
xchg
dec
mov
sub
scas
mov
faddl
inc
xchg
icebp
mov
out
lret
mov
mov
ss
loopne
stos
ret
jle
and
push
xor
dec
arpl
es
cli
mov
adc
outsb
aaa
mov
push
iret
nop
xlat
insl
jmp
fs
sub
data16
dec
xlat
popf
xchg
fs
push
fdivl
cmp
out
inc
and
xor
jp
adc
pop
sub
mov
push
cmc
xor
fwait
lods
rcl
xchg
lds
popa
inc
das
adc
or
movl
ret
xchg
add
ds
xchg
insl
pusha
shrb
cmp
adc
cs
mov
dec
mov
aas
insb
mov
xor
outsl
cmpsb
xchg
or
inc
mov
dec
xchg
and
mov
mov
push
call
xchg
in
sbb
mov
mov
push
lahf
scas
mov
jp
pop
xor
sub
xlat
lahf
pop
pop
dec
arpl
or
adc
pop
inc
mov
mov
pop
xchg
das
mov
lret
shrl
and
inc
push
jl
lea
stos
outsl
pop
insb
push
aad
pushf
les
out
es
mov
mov
push
dec
mov
out
lods
and
push
stos
pop
into
repnz
jp
enter
rol
xchg
xchg
lods
lcall
mov
nop
int
dec
fstl
pushf
bound
dec
into
pusha
std
push
fldenv
xor
in
lret
ss
or
aas
mov
xchg
pop
push
in
shrb
jge
jo
xchg
sub
addl
pushfw
lock
inc
adc
fdivs
adc
mov
and
scas
and
call
add
in
mov
insb
xchg
cmp
xchg
nop
jg
in
or
add
cmp
mov
jmp
pop
and
xchg
cmp
xchg
inc
cmp
inc
push
lds
add
cwtl
leave
and
push
pop
pop
dec
aam
ffreep
iret
fmull
pop
enter
shl
rolb
or
xor
and
hlt
lea
adc
inc
jl
ja
in
mov
xchg
call
int
and
and
or
mov
xchg
mov
jno
lahf
or
mov
jne
or
sbb
shl
popa
cltd
push
cmp
push
iret
dec
ss
xor
pop
mov
clc
fldenv
repnz
clc
arpl
xchg
cld
jns
sbb
lods
sub
outsb
aad
jl
testb
inc
inc
inc
dec
push
out
jae
xchg
jmp
les
adc
mov
xorb
fstpl
popf
sbbl
in
add
sti
push
int3
inc
dec
test
sbb
mov
movsl
xorl
jg
jns
enter
cmpsl
pop
cmp
jg
and
in
add
mov
push
cs
out
fildl
fnstcw
adc
jecxz
arpl
push
pushf
das
cwtl
dec
mov
aaa
insb
icebp
scas
or
pop
xor
adcb
mov
andl
aam
repz
mov
dec
or
testb
mov
add
add
or
inc
das
insb
push
jge
mov
movsb
rcl
scas
add
or
cmp
pop
push
lods
jp
or
imul
stos
cmp
pusha
popf
jmp
push
push
mov
mov
lea
in
in
out
imul
sub
adc
aas
lds
xchg
jg
adc
test
sbb
xchg
ffree
xor
xlat
adc
adc
inc
cmp
jbe
subb
mov
pop
mov
out
out
jmp
push
shrl
lcall
xchg
mov
sbb
push
push
jno
in
mov
and
insl
pop
push
sbb
pop
repnz
dec
loope
xchg
mov
mov
lret
xor
pop
xor
dec
add
fisttpl
pop
lock
jo
loope
fdivl
jmp
fstps
ror
adc
mov
lret
fs
sbb
or
fnstsw
shlb
scas
rol
xchg
popw
test
or
mov
dec
inc
fisubrs
push
xchg
or
pop
dec
push
jns
push
mov
std
cs
add
mov
pusha
inc
sbb
pop
pop
outsl
jl
and
pop
pop
sbb
or
ret
lcall
in
mov
inc
sbb
sbb
mov
push
xor
push
sbb
mov
fcompl
ret
loop
lahf
mov
fsubl
fsubrs
dec
mov
movsl
jae
mov
hlt
addb
sti
jno
cli
clc
xor
outsl
dec
cld
fnstcw
mov
jge
xchg
scas
inc
or
add
addb
and
insl
xor
xor
and
or
in
stos
cmp
cmp
rcrl
ret
stc
outsl
jp
fadds
repz
push
lods
fwait
loop
iret
cmp
sbbb
xchg
out
pop
scas
ja
jmp
xor
xor
xor
jnp
sbb
xor
fs
xor
inc
adc
xor
mov
mov
push
lock
imul
cmp
repz
dec
mov
aad
or
sub
mov
arpl
dec
cmpsl
sub
mov
push
ja
mov
dec
ss
scas
jae
and
push
cmp
ja
jl
ret
loop
fimull
pop
lret
push
cltd
mov
cwtl
sbb
loope
enter
cmp
pop
mov
jae
sub
xchg
ret
icebp
adc
imul
inc
push
mov
movsl
aad
inc
pop
repz
inc
adc
call
movsb
mov
stos
add
ljmp
or
mov
cmp
mov
pop
aaa
je
or
imul
aam
adc
push
jl
mov
movsb
push
adc
jecxz
sar
mov
mov
fcmovu
ret
and
mov
jmp
jge
clc
xchg
pushf
xchg
mov
mov
pop
mov
fstp
pop
loop
sbb
jl
pop
adc
or
mov
in
pop
add
dec
cmp
enter
inc
mov
clc
call
pop
pop
shrl
pop
and
pop
adc
mov
dec
push
mov
popa
pushf
pop
fbld
jno
and
fwait
or
cmpsl
sahf
or
cltd
push
movsl
mov
fsub
out
sti
out
xchg
xchg
cmp
pop
stos
std
lods
or
lret
cmp
icebp
imul
fmulp
sbbb
push
mov
cs
mov
add
sbb
dec
cmpsb
pop
add
xchg
adc
cmp
push
cltd
and
cmp
push
out
push
push
inc
inc
out
jo
xlat
test
rcll
or
jecxz
mov
popa
rolb
ficoms
add
cld
jo
add
das
add
aad
int
lea
xchg
mov
mov
cmp
lock
cld
inc
xchg
jbe
adc
or
pop
fldt
push
stos
or
mov
pop
mov
ret
mov
lcall
sbb
pop
pop
sbb
xchg
loop
shlb
mov
fldcw
les
and
cmp
test
in
jecxz
je
mov
ljmp
pop
fcoml
in
arpl
and
adc
cmp
pop
adc
test
inc
icebp
xchg
cmpl
mov
mov
xchg
negb
hlt
add
xchg
sbb
sarl
push
rorb
inc
jns
mov
add
push
stos
inc
or
in
rolb
fs
jle
and
in
lock
mov
sbb
mov
ret
mov
adc
std
lea
push
push
dec
mov
lea
shl
es
jo
mov
imul
aam
jecxz
xor
aam
cmp
mov
mov
gs
test
push
xchg
bound
pop
rcrb
dec
scas
popf
jl
cmpsl
negl
aam
cmp
in
arpl
fnsave
or
int
or
lret
dec
cmp
subl
loop
int3
jbe
mov
push
mov
test
xchg
stos
lds
push
and
jo
imul
aam
push
lret
icebp
mov
xchg
jno
mov
subl
insb
jne
add
dec
sbb
stos
or
sub
ret
subl
mov
xor
jge
pop
movsl
push
data16
mov
push
mov
pop
and
cltd
aaa
gs
sub
lds
std
loop
cmp
add
adc
pop
scas
xchg
xchg
inc
lret
imul
mov
ret
mov
sub
add
les
sbb
xchg
ficoms
mov
and
xor
leave
fwait
lods
test
mov
mov
cmp
or
adc
adc
push
or
jbe
push
push
nop
mov
pop
dec
sbb
pop
jb
push
pop
add
repz
adc
dec
fsubp
cmpb
fs
push
push
fs
cmpsb
mov
add
aam
jl
jno
nop
loope
outsb
les
push
lahf
and
jns
cmp
inc
outsl
mov
xchg
std
push
sahf
lea
test
gs
je
addr16
pop
push
aad
xlat
divb
jmp
je
sub
xor
push
pusha
popa
sti
aam
sahf
dec
inc
scas
fwait
push
mov
mov
and
fwait
inc
mov
fnstsw
inc
in
in
mov
or
test
sarb
adc
mov
ss
in
dec
scas
pop
lds
jb
mov
inc
outsl
push
cmp
push
outsb
push
sbb
cld
xor
inc
sbb
push
mov
mov
int
popa
ficompl
cltd
fisubrs
sbb
or
dec
movsl
aad
push
sub
push
xchg
mov
push
call
push
cltd
jecxz
out
andl
xchg
repnz
repz
jns
stc
pusha
xor
cmp
push
aam
stos
and
mov
jns
mov
mov
ja
push
dec
and
in
enter
mov
mov
dec
sahf
aam
out
and
das
stos
dec
imul
fidivs
jp
scas
cli
arpl
icebp
fiaddl
jb
mov
sbb
lods
push
shrb
pop
sti
into
sub
iret
jmp
pop
xchg
imul
aas
mov
mov
jbe
repnz
jno
xor
das
cmp
mov
and
jle
and
mov
pop
fs
aam
rcll
cmp
sbb
ljmp
xorl
pop
dec
imul
rcll
xchg
push
shll
aad
in
add
sbb
xchg
std
or
out
dec
xchg
mov
mov
repz
rolb
mov
sub
sbb
stc
pop
pop
je
loope
xor
fistps
sub
fsubs
leave
sbbb
push
loopne
jge
out
fwait
dec
add
push
or
and
dec
jb
or
sub
cmp
fidivrl
fucom
aas
std
outsb
or
shl
or
mov
je
mov
inc
in
cmpsb
cmpb
mov
pop
ret
xor
repnz
loopne
adc
inc
idivl
inc
pop
jno
mov
popa
mov
repnz
leave
sub
addr16
and
stos
lahf
dec
lcall
xor
add
sub
mov
pop
loop
out
shrb
ret
movsl
addr16
or
mov
mov
mov
xchg
and
xchg
jno
int
or
stc
mov
xchg
outsb
dec
call
ds
adc
sahf
orl
sub
xchg
adcl
test
mov
cmpsl
push
mov
inc
repz
addr16
and
stos
xor
fldcw
imul
movsl
cmp
inc
scas
into
dec
jns
or
xor
xchg
pop
fcmovbe
scas
xchg
mov
add
in
pop
repnz
rcrb
fucom
adc
xchg
add
pop
dec
pop
mul
mov
movsl
in
cmp
xor
jb
sbb
insl
rcrb
dec
lds
loope
in
xchg
or
push
std
mov
jecxz
mov
push
dec
xor
outsl
mov
push
aas
mov
inc
push
inc
in
test
pop
inc
or
mov
jo
in
rcrl
or
aad
stos
jecxz
xchg
xchg
inc
jo
in
into
cmp
shrl
stos
jb
jmp
aas
cmp
inc
push
arpl
adc
adc
and
and
sbb
and
popf
movsb
jbe
es
les
scas
sbb
adc
loopne
iret
sbb
cwtl
shrl
lods
inc
pop
mov
jne
movsb
das
adc
ja
push
push
call
mov
lock
mov
mov
js
push
and
dec
enter
insb
insl
pusha
test
shll
pushf
lret
daa
adc
in
test
sbb
iret
pop
insl
in
iret
test
ror
or
or
fldl
push
mov
pop
jl
ret
test
inc
fadd
faddl
loope
icebp
adc
lcall
adcl
sub
nop
mov
xchg
sarl
adc
nop
push
inc
jne
mov
aas
mov
scas
fwait
cmp
fiadds
roll
xor
lods
lock
mov
jge
test
lret
call
js
ret
add
mov
sub
push
out
imul
icebp
test
hlt
inc
mov
mov
xchg
dec
adc
inc
lock
lds
sti
mov
cli
lcall
mov
dec
imul
arpl
and
mov
dec
add
push
sub
nop
sbb
push
dec
fcoms
cmp
adc
clc
call
mov
test
arpl
cmpb
je
xor
lcall
inc
pop
sahf
jo
mov
xchg
rolb
pushf
and
xor
dec
mov
ret
jb
mov
jns
inc
int
dec
inc
xor
jb
out
push
rorb
mov
outsb
push
mov
nop
iret
aad
int3
push
addr16
add
inc
or
push
xchg
pop
add
jnp
or
mov
test
jl
mov
fdivs
in
mov
mov
mov
cmpxchg
test
les
push
dec
bound
sti
inc
repz
sub
mov
sbb
sahf
ds
je
in
repnz
movsl
xor
mov
cmpsb
or
cs
sub
dec
mov
xor
pop
leave
repnz
inc
xchg
push
jl
mov
push
or
xchg
jmp
mov
xchg
fisttps
jno
mov
cmpsl
lahf
xlat
fnstsw
and
xchg
mov
jno
das
cwtl
push
addb
repz
shrl
inc
mov
mov
ret
fmuls
sbb
adc
inc
xchg
cld
stos
insl
outsl
sbb
testl
lds
out
xchg
xchg
mov
mov
push
push
pop
and
mov
and
shll
faddl
out
dec
imul
bound
out
lock
mov
popa
ret
test
sbbl
nop
mov
lcall
je,pt
push
xor
int3
inc
repz
push
pop
pop
mov
das
mov
roll
adc
data16
sbb
mov
mov
arpl
mov
aaa
cld
pop
jae
mov
adc
nop
and
orb
mov
jle
mov
fs
mov
jb
inc
cli
mov
add
scas
xlat
addb
pop
pop
test
or
mov
lahf
push
popa
mov
mov
stos
ret
test
outsl
outsb
imul
xor
mov
cmp
and
shll
xor
test
repz
xchg
shrb
in
jge
and
popa
jae
or
cltd
fisubrl
ror
jmp
sbb
shr
xchg
adc
dec
push
lods
dec
jnp
mov
fdivr
loopne
xor
test
cmp
pcmpgtb
out
cmp
mov
rolb
xor
popf
cmp
jp
inc
addr16
in
cld
repnz
sub
jle
lds
movb
popa
or
sar
int
mov
daa
cmpsl
insb
fidivs
inc
or
mov
ds
addr16
ds
jp
or
gs
mov
xor
push
inc
addr16
outsb
test
adc
push
jp
dec
pop
adc
dec
arpl
test
xchg
call
cld
xchg
fistl
xchg
aad
mull
xchg
mov
mov
adc
pop
aam
into
lahf
scas
mov
xchg
pop
sbbl
pusha
outsl
enter
loop
mov
ss
adc
xor
mov
out
xor
aaa
add
jnp
jge
in
xchg
in
xchg
lods
cwtl
inc
or
pop
je
adc
jnp
dec
rclb
pop
cmpsb
jbe
pop
sahf
stos
fsubrp
imul
xchg
xchg
icebp
xor
mov
outsb
push
push
adc
adc
out
pop
rclb
xchg
dec
xor
jnp
and
pop
movsb
data16
sti
sbb
sub
aad
pop
dec
add
or
les
add
and
sahf
inc
loope
xchg
out
adc
pmullw
lret
int3
mov
pusha
push
fcmovbe
push
mov
xor
mov
mov
dec
adc
push
fsubrp
test
jmp
daa
mov
sub
pop
mov
lds
repnz
dec
mov
xchg
sahf
pop
push
sub
cmpb
outsb
pushf
movsb
ljmp
frstor
xorb
cmc
and
jp
add
sub
push
arpl
xchg
xchg
jns
popf
lea
repz
orb
bound
shr
push
insb
mov
jge
xor
push
jae
test
std
pop
adc
adc
imul
xchg
or
lods
clc
cmc
sub
push
jecxz
jecxz
or
fldcw
lahf
jb
jbe
in
sahf
in
pop
in
nop
sbb
shrl
mov
test
sub
mov
xchg
xor
push
or
adc
lods
mov
aad
in
adc
xlat
inc
jg
out
sahf
outsl
mov
jns
sbb
test
and
and
mov
jg
imul
dec
lds
xor
and
or
sub
ljmp
shlb
push
repz
pushf
andb
test
sarl
in
ret
test
arpl
aas
aaa
adc
dec
repz
subl
in
imul
fst
pop
aas
pop
in
fldcw
sub
daa
lret
cmp
fcmovnbe
aad
cmp
enter
cmp
call
push
rcrl
shrb
iret
out
push
xchg
loope
mov
stos
cld
mov
shlb
push
sub
inc
aaa
mov
inc
jmp
movsl
lcall
push
popl
vpmaddwd
lret
movsl
cwtl
adc
jle
aam
xor
xchg
testl
push
mov
pop
adc
jae
and
xlat
mov
ret
movl
stc
dec
push
imul
jecxz
mov
stos
jmp
je
sub
dec
and
addr16
repz
cli
loop
pop
cmp
mov
xor
ja
sbb
xchg
idivl
pop
xor
mov
adc
les
xor
hlt
cltd
push
roll
popf
mov
and
xchg
mov
jnp
in
lock
ja
mov
sarb
jecxz
jle
lcall
clc
in
pusha
aaa
sbb
aad
adc
jp
adc
ffreep
mov
xchg
jecxz
xor
cmp
call
stos
cmp
jnp
pop
dec
pushf
inc
icebp
mov
dec
jle
test
rolb
lods
lret
sbb
adc
cmp
fcos
mov
mov
pop
cmp
cwtl
loope
dec
push
imul
shrb
ret
pop
int3
mov
mov
ret
mov
sbb
pop
jns
aaa
push
push
pop
xor
or
repz
int3
mov
testl
int
inc
xchg
push
je
push
add
cmp
popf
jmp
mov
inc
cld
sbb
pop
fwait
into
fisttpll
and
repz
push
ss
addr16
jnp
sbb
inc
nop
and
add
out
add
and
stos
or
movl
sub
jne
mov
stc
mov
stc
mov
mov
jl
pushl
mov
cmp
xlat
lcall
jle
arpl
cmpsb
dec
popf
pop
sbb
push
dec
and
cmpb
mov
jno
loopne
and
imul
xchg
icebp
xchg
dec
das
js
ds
dec
mov
addr16
int3
and
fs
std
xchg
sahf
cmp
mov
jecxz
mov
sub
pushf
adc
add
lret
push
sahf
jne
fmull
ja
inc
or
rcrb
add
xor
add
and
bound
arpl
sub
pop
sahf
arpl
cmp
or
pop
push
pop
adc
icebp
jecxz
sub
add
xchg
sbb
or
dec
aad
sti
roll
or
test
pop
out
mov
sub
or
test
cs
and
cmpsl
and
pusha
cmc
and
mov
xchg
mov
int
fstp
lahf
pop
loopne
jecxz
adc
hlt
dec
gs
aaa
fidivrl
lds
sub
jo
idivl
loop
jb
inc
xchg
aad
inc
imul
insb
test
add
jnp
xor
je
xor
shll
cmc
mov
test
mov
xor
dec
jmp
loopne
sbb
sahf
push
scas
clc
push
mov
inc
rcl
adc
inc
cmp
sti
mov
pop
insb
rcl
insb
sbb
pop
loop
ret
pop
jno
loopne
cmpsl
call
mov
xlat
mov
jae
inc
loope
and
sbb
scas
mov
loopne
scas
pushf
aas
cmp
sbb
jb
lret
cli
sbb
imull
xlat
pop
inc
mov
pushf
dec
or
lret
dec
and
fcomip
mov
or
in
push
out
dec
pop
loope
push
idivl
jp
imul
das
push
add
inc
push
add
sub
rcrb
dec
xchg
lods
mov
mov
xor
cmp
xlat
mov
or
std
mov
mov
into
sub
scas
pushf
out
sbb
adc
sti
cmp
mov
mov
mov
cmp
mov
subl
xor
cmp
data16
stos
cwtl
mov
adc
testl
js
pop
mov
xchg
xchg
arpl
dec
scas
jmp
jle
jo
mov
repnz
jl
rorb
adc
gs
out
or
clc
or
push
mov
or
jno
jg
jmp
negl
cmp
adc
iret
cli
outsl
es
imul
xor
add
popa
xchg
xchg
test
out
mov
pop
add
and
sbb
out
and
int3
movntq
ljmp
ret
lods
mov
repnz
cld
fistl
dec
sbb
xchg
ret
in
sub
stos
mov
mov
fidivs
fcoml
bound
inc
cmc
mov
or
mov
mov
cmpsb
out
pop
sti
pop
pop
rorb
fcomps
rcll
pusha
mov
test
icebp
jecxz
test
sub
fidivrl
jecxz
test
inc
jp
rcrl
sub
push
or
inc
mov
add
sub
xor
xchg
imul
fistpl
xchg
push
mov
jg
mov
cwtl
or
scas
int3
inc
addr16
out
jge
adc
ljmp
int3
xchg
xchg
xor
mov
mov
test
lock
outsb
ficomps
add
ficompl
push
subl
aad
aam
cmp
hlt
ja
arpl
and
ret
ret
push
cmp
cmp
adc
inc
fdivrl
mov
imul
shll
cs
pop
cmp
add
sbb
jnp
lret
mov
or
xor
leave
into
xlat
xor
arpl
lret
mov
mov
cwtl
jl
push
xor
jno
ja
shll
and
mov
and
mov
push
xor
andl
mov
mov
sti
jne
mulb
jnp
in
push
jecxz
fbld
xchg
mov
in
push
dec
and
or
xchg
adc
cmp
fistpl
jge
repz
xchg
leave
adc
mov
outsb
por
mov
dec
cmp
add
sbb
add
popf
mov
test
push
lcall
out
jns
loopne
sbb
gs
daa
jmp
mov
inc
xor
mov
std
mov
and
adc
xor
inc
sahf
shlb
mov
adc
cmp
push
xor
pop
stos
adc
jb
roll
out
call
jb
lcall
add
or
pop
je
and
and
inc
popf
push
sub
repz
jbe
cmp
inc
das
pop
test
popa
lds
sub
mov
das
fadds
hlt
jp
outsl
jae
mov
cld
nop
shlb
stc
pop
jnp
pop
inc
loop
mov
push
das
push
shrl
push
out
xchg
pop
leave
add
mov
test
int3
cmp
loop
add
insb
sbb
shll
pop
jae
push
push
out
pusha
stc
insl
jbe
arpl
stos
dec
out
adc
pop
mov
pop
enter
subl
inc
mov
shll
aad
cwtl
mov
icebp
insb
and
sti
fisttpll
hlt
call
lods
mov
jle
movsb
sbb
mov
das
andb
pop
pop
stos
std
jb
push
leave
pop
call
sub
ret
loopne
sub
push
xor
mov
sub
jp
int3
mov
in
cmpsl
xor
pushf
out
adc
lea
aam
cmp
mov
adc
sbb
test
fimuls
or
stos
popa
jg
cmp
sahf
xor
sbb
inc
add
in
or
and
adc
pushf
push
js
dec
outsl
leave
scas
mov
add
repz
pop
or
jmp
push
cmp
daa
xchg
lods
sahf
aam
icebp
int
fsubl
cwtl
les
xchg
dec
out
testb
mov
mov
or
and
ret
stc
cs
push
xor
movsl
sbb
mov
bound
out
or
xchg
into
movsb
mov
jecxz
cli
es
cmp
push
sbb
pop
lret
xchg
mov
pushf
xchg
mov
dec
push
mov
test
mov
jb
ffree
int3
stos
scas
adc
cmp
iret
or
dec
pop
lahf
iret
fisttpll
addr16
int3
add
and
and
adcl
ficompl
pop
xlat
inc
outsl
gs
arpl
sbbb
std
sbb
sub
nop
shr
roll
jb
ret
test
adc
stc
mov
sub
daa
fnsave
roll
pop
and
push
jmp
xchg
lods
mov
repz
pminsw
les
dec
fidivs
xchg
insl
loop
dec
out
fmulp
dec
addb
sub
ret
cltd
jg
dec
and
xlat
lods
sar
or
jnp
ja
aad
pop
mov
jmp
imul
test
lods
xor
rorl
into
push
mov
xor
pusha
push
mov
pop
adc
subl
imul
xchg
iret
pop
sbb
add
mov
pushf
js
push
psllw
iret
jecxz
fdivs
mov
jmp
sub
dec
lods
mov
jnp
jle
seto
inc
insb
pop
or
das
mov
fcomps
iret
dec
divl
inc
add
aam
das
js
xchg
je
jo
aad
mov
iret
test
cmc
movsl
bound
testb
cwtl
or
push
push
in
dec
push
fistpll
stos
cmp
push
xor
pop
cs
dec
stos
or
stos
mov
push
cs
and
lret
and
stos
pop
int3
add
lds
mov
inc
insb
sbb
xor
in
divl
cltd
icebp
push
das
sub
iret
cmp
scas
jge
lods
add
mov
jne
movsb
enter
cmpsb
cwtl
idivb
arpl
popw
je
mov
mov
jnp
xchg
mov
inc
arpl
dec
mov
fiadds
aas
pop
mov
adc
sub
cmp
add
jae
in
push
clc
hlt
mov
mov
repnz
mov
jb
sub
or
xchg
or
rol
inc
mov
mov
jge
mov
addb
mov
jae
scas
or
daa
mov
xchg
aam
sbb
pop
or
add
inc
ljmp
and
mov
test
or
cwtl
cmp
xchg
jg
and
ss
push
mov
lods
mov
leave
xchg
rclb
or
or
sbb
and
dec
push
sub
push
pushl
inc
cmp
xchg
sub
sbb
loope
stos
sub
test
sbb
ljmp
not
lcall
adc
lods
push
dec
xchg
sub
cmp
pop
fistpll
jmp
sub
push
push
scas
dec
mov
jbe
adc
dec
cmp
sub
enter
cmp
mov
lret
sub
push
shrb
ds
dec
dec
adc
ja
jg
mov
inc
int3
jae
push
mov
mov
sarb
dec
push
pop
into
push
adc
dec
and
gs
add
inc
add
dec
movsb
fwait
pop
mov
dec
mov
pop
les
sahf
add
cmp
and
and
lret
mov
xlat
mov
push
push
xor
sbb
repnz
sbb
scas
add
adc
and
pushf
sub
test
push
imul
xor
jne
cmp
push
pop
into
xchg
adc
mov
xchg
push
or
inc
pop
aam
mov
int3
repnz
into
jae
or
jp
adc
stos
sti
cmp
dec
loopne
xor
pushl
in
or
arpl
pop
pop
insl
jecxz
inc
and
cmpsl
xlat
add
cmpsb
mov
shll
adc
mov
xchg
leave
fmul
jne
notl
icebp
bound
jbe
jecxz
fwait
pop
movsb
lods
and
in
dec
incb
add
cmp
push
adc
jl
cmp
jb
mov
cmpsl
xchg
ret
lahf
mov
inc
pop
push
sbb
xor
addr16
cwtl
test
mov
mov
push
inc
pop
imul
ret
pop
pop
lcall
rcrb
pop
cltd
pop
push
cmp
push
inc
in
loopne
or
js
push
aad
mov
adc
call
cmc
fcoml
pop
es
sti
xchg
cld
jno
sahf
cli
cmp
movsl
dec
lds
mov
aas
sbb
test
jge
push
mov
mov
jno
andb
mov
xchg
addr16
fsubrl
cli
js
lock
cltd
fstpt
fstpl
cmp
stos
add
jmp
frstor
jp
mov
mov
add
pop
daa
ficoms
int
data16
repnz
rcrl
lahf
mov
jb
dec
or
je
data16
lods
adc
test
pop
insl
mov
ljmp
or
jmp
add
xor
cwtl
cwtl
push
insl
mov
mov
sarl
xor
push
pop
jle
ja
in
sub
jns
das
add
mov
cli
sub
popf
xchg
mov
jge
in
inc
mov
js
das
cld
pop
sub
mov
jp
or
dec
mov
xor
mov
jl
lcall
adc
lods
pusha
cmpsl
and
or
fimuls
popf
shrl
add
or
test
xchg
xchg
inc
pop
mov
stc
pop
loopne
add
cmp
mov
lock
outsl
out
stos
jnp
or
xorb
xchg
cmc
pop
mov
mov
mov
add
adc
jne
andb
ret
xor
mov
shll
mov
repnz
sbb
inc
push
push
in
push
mov
lods
das
cmpsb
adc
imul
xor
cwtl
cmpsl
xlat
lret
mov
xchg
in
inc
mov
call
push
aam
mov
mov
sub
push
mov
pop
mov
js
adc
in
push
sti
int3
pop
js
jbe
push
and
push
sbb
stos
ret
lock
aas
or
js
pop
xchg
adc
mov
push
push
push
mov
outsl
push
inc
gs
fcmovne
test
xchg
sub
icebp
add
push
js
inc
fs
adc
pop
aad
insb
mov
xchg
scas
pop
call
dec
xchg
jge
pop
out
add
jne
pop
jbe
out
dec
inc
pop
dec
cmc
outsl
jp
jno
loopne
push
lock
rcrl
in
sti
push
cs
jne
mov
mov
mov
lds
sti
sbb
pop
xchg
gs
and
sub
dec
mov
dec
jno
pop
shrl
popa
ljmp
xchg
jns
stc
mov
and
mov
stos
adc
negb
push
cwtl
fs
and
nop
cld
adc
jp
pop
imul
rcll
scas
das
sub
out
idivl
lods
in
loope
movsb
ficoms
lods
inc
or
or
outsb
shrl
pop
jg
movhps
shll
inc
mov
mov
in
idivl
and
add
fmull
cli
cltd
mov
pusha
nop
lods
pop
les
mov
cmp
stos
sbb
test
sbb
rolb
sub
jno
filds
or
inc
or
pop
lret
sbb
repnz
shll
push
stc
add
and
mov
mov
mov
call
mov
hlt
adc
and
push
dec
adc
mov
cli
faddp
mov
stc
movsb
stos
pop
mov
or
cli
out
cmpsl
stos
andb
lret
mov
ja
stc
pop
ret
movsl
lods
and
jb,pt
mov
xchg
inc
mulb
andb
mov
sbb
adc
and
mov
push
dec
test
dec
xchg
loop
out
or
inc
add
pop
adc
rcrb
fsts
sub
fadds
sbb
stc
ret
jg
int
int3
push
rolb
psrad
xlat
or
loope,pn
or
and
es
les
test
adc
js
push
jno
push
cld
sub
rcll
insl
adc
push
loopne
push
aas
sbb
or
sbb
push
lods
in
adc
icebp
xchg
push
das
ds
adc
insl
arpl
push
int
push
mov
inc
in
stos
fsub
cmp
std
rclb
popf
outsl
sti
mov
add
jp
icebp
sub
movsb
out
mov
mov
repnz
pop
popa
ret
or
loope
cmpsl
dec
or
nop
xor
in
nop
adc
iret
std
add
lods
xchg
aaa
push
lods
mov
test
repz
sti
add
dec
mov
or
in
out
cmp
add
mov
push
or
or
pop
pop
ss
loop
cli
fisubl
les
mov
jns
cmp
and
lcallw
sbb
je
jne
adc
and
pop
xchg
xchg
rcrl
roll
jne
aad
jb
dec
mov
dec
outsl
xchg
inc
add
push
cwtl
out
outsl
test
mov
cwtl
mov
test
adc
mov
out
jg
inc
popf
mov
loope
lcall
movsl
mov
lahf
divl
adc
add
mov
idivb
sub
inc
inc
je
inc
call
cmp
mov
mov
in
cs
xor
loopne
daa
xor
mov
ds
into
pop
bound
jecxz
inc
jp
pop
adc
jl
lcall
mov
pop
in
xor
inc
js
push
adcl
sub
lea
scas
pop
pop
les
test
pop
add
subb
push
fs
jge
cltd
addr16
xchg
insb
leave
xchg
xchg
pop
inc
repz
icebp
jl
pop
dec
push
pop
sub
iret
lcall
or
fwait
sub
int
and
mov
sahf
test
jmp
cmp
mov
mov
mov
lock
inc
sbbl
xchg
repz
xor
lret
and
push
in
mulb
sarb
gs
lds
jle
xchg
lock
lret
les
mov
mov
push
repnz
or
mov
and
mov
push
pop
push
negb
inc
dec
and
cmpsl
pop
dec
jns
and
ss
xor
cmp
inc
es
xor
cmp
sbb
cmp
orb
xchg
jge
xchg
cmp
lret
sub
dec
sub
inc
pop
cwtl
scas
pop
add
pop
or
sub
aas
movsl
mov
inc
fmuls
cmpsb
in
xchg
adc
push
adc
push
and
xchg
cwtl
data16
xchg
sti
aad
ss
decl
insl
sub
jb
sub
sarb
xchg
inc
push
add
sub
jp
mov
jo
jle
outsb
dec
ret
jecxz
pop
mov
mov
mov
stos
shl
jp
outsb
out
lret
mov
fstpt
add
jo
jg
pop
and
push
xor
and
js
pop
call
insl
popf
pop
andl
dec
cmp
xchg
fsubr
push
xlat
cmp
cmp
xorb
mov
add
push
inc
add
sarb
addr16
adc
add
push
arpl
outsb
daa
cmp
push
stc
and
push
sbb
pop
or
mov
cmp
mov
or
cmp
arpl
jle
lds
decl
mov
ficoml
or
fcmovb
add
jmp
mov
cmp
sub
or
jecxz
mov
out
loop
notl
aaa
push
sbb
inc
icebp
mov
std
movl
inc
fs
pop
sub
adc
enter
in
cmp
pop
popf
mov
mov
adc
stc
mov
daa
mov
pop
outsl
adc
pslld
jl
adc
jae
testl
dec
lcall
imul
fwait
test
je
sbb
in
sub
mov
push
aad
out
ret
dec
xchg
push
insl
sub
cltd
or
adc
imul
mov
jo
push
and
dec
les
cs
test
mov
mov
xor
das
xor
stos
popf
inc
fxch
push
gs
mov
ja
inc
add
out
movsl
negl
push
popa
fucomi
inc
jbe
imul
push
inc
out
and
in
movsb
and
roll
sbb
addr16
pop
ja
cmp
test
mov
sbb
xorb
or
ret
repz
mov
jmp
ljmp
fcomps
popa
xor
data16
insb
cmp
jno
cmpsl
and
sub
pop
push
call
mov
nop
test
jo
inc
push
test
aas
cmp
fbld
xchg
fwait
and
sbb
popf
mov
push
jmp
pop
fwait
mov
cmp
mov
mov
mov
pop
test
jecxz
jbe
mov
inc
stc
ss
leave
mov
aas
in
mov
repz
stos
jae
gs
mov
cmc
push
xor
cmp
in
in
fdivrl
pop
inc
ret
push
or
push
pop
push
lea
adc
or
pop
stc
scas
xlat
pop
rorb
jl
daa
pop
mov
mov
sbb
push
push
mov
xchg
hlt
int
mov
push
sub
cmp
sbb
mov
loop
cmc
test
xchg
adc
mov
fisubl
aad
mov
xchg
mov
mov
add
add
fwait
adc
shlb
push
call
test
adc
xchg
nop
xchg
stos
ds
cmp
mov
rcr
lret
insl
add
push
mov
fimuls
mov
mov
lahf
xchg
int3
pushf
add
outsl
xchg
dec
push
cmpsb
testb
loope
scas
and
push
arpl
sub
clc
mov
mov
pop
hlt
cmp
nop
nop
jmp
mov
mov
and
int
xchg
mov
or
cmc
sub
xor
pop
mov
mov
pop
jecxz
mov
mov
xor
popa
mov
or
mov
pop
mov
enter
jne
rcl
jb
aas
inc
and
iret
scas
gs
dec
inc
xchg
jl
cltd
icebp
les
outsb
iret
repz
fwait
call
shl
dec
sbb
or
fs
loope
in
dec
or
xor
scas
xchg
and
testl
mov
fldenv
jnp
or
and
sbb
bound
movsl
test
inc
or
inc
xor
inc
xor
js
push
mov
add
push
jno
add
idiv
dec
push
inc
push
add
push
mov
mov
jno
flds
push
mov
or
lcall
sbb
and
popa
dec
jbe
out
into
cltd
call
loope
into
leave
das
test
jge
int3
xor
dec
rorl
mov
lods
js
mov
andl
js
xchg
xlat
push
cmpl
into
nop
out
push
shrl
out
ljmp
sub
sub
xor
scas
push
ljmp
jo
fprem1
xchg
dec
jne
lods
fistl
into
mov
call
lods
out
test
cwtl
repz
outsl
sahf
sahf
xor
xlat
inc
or
xchg
pop
call
shlb
lods
adc
fsubl
xchg
sbb
adc
scas
pop
mov
xchg
and
sti
adc
aas
into
call
dec
daa
hlt
repz
mov
dec
cs
data16
mov
mov
sbb
push
mov
fcoml
or
mov
mov
lock
sbb
sub
mov
addr16
cmpsl
jb
sbbl
pop
rolb
outsb
inc
fisttpl
pushf
sbbb
and
out
push
lahf
cmp
das
fcmovbe
pop
and
fdivrs
fcomps
fdivp
pop
pop
inc
pushf
jno
xchg
cmpsb
ja
js
lahf
pop
mov
add
cli
pop
scas
cmpsl
jnp
aam
pop
loopne
stos
mov
sti
cs
movsb
rcrl
stc
fucomi
ret
push
push
pusha
pop
and
test
dec
mov
popa
xchg
add
andps
dec
test
xorb
mov
iret
sbb
jb
fwait
ret
push
mov
or
pop
jns
lock
sbb
mov
mov
cmp
out
clc
add
daa
outsb
fildll
push
add
into
mov
repz
test
or
xchg
or
mov
add
mov
xchg
add
sbb
fistpl
push
test
lcall
repnz
gs
loopne
out
flds
scas
mov
cmp
add
lods
pop
aad
rcl
cmpsl
std
int
int
mov
insl
cmp
sbb
sub
jb
push
mov
adc
loop
mov
pushf
outsl
pop
xor
ja
mov
xor
lea
bound
xchg
lcall
outsl
jg
inc
cli
cmp
pop
in
ret
repz
add
xor
or
lock
xchg
mov
mull
add
pop
cwtl
ret
or
es
jne
and
add
aad
push
pop
xor
and
std
movsl
mov
add
pop
mov
pop
mov
mov
dec
filds
xchg
bound
mul
mov
iret
test
lods
fdivrs
jno
xor
stos
lahf
test
scas
insl
js
dec
shrb
into
scas
pop
test
mov
sbb
fldt
jne
sub
mov
push
dec
push
push
mov
inc
jne
xor
mov
movsl
subb
sub
jp
int
xor
loopne
in
sbb
int3
pop
cmpl
out
lea
lods
fisubrl
cs
fstl
fldenv
jnp
or
stos
pop
push
into
cmp
jne
add
jae
mov
cmpsl
stc
ljmp
andnps
shlb
lret
cmp
imul
inc
in
fsubs
cmc
pop
fwait
xchg
test
loopne
in
in
lods
jns
mov
mov
fmuls
das
add
inc
xchg
call
push
sarb
popa
dec
xor
sub
mov
or
adcl
bound
xor
mov
xor
mov
sbb
mov
imul
fs
or
push
push
mov
aas
inc
push
scas
test
popf
andb
mov
sbb
xchg
sub
sub
lcall
mov
and
jge
ljmp
xchg
adc
imul
lret
popa
cmpsl
mov
popa
sahf
xor
mov
or
push
rorl
inc
pop
inc
insb
fstps
lcall
iret
es
mov
xor
lods
mov
aad
xor
push
xor
nop
data16
mov
outsb
or
adc
xlat
movsl
les
stc
in
xchg
lods
out
pushf
repnz
cmp
std
sbb
mov
stos
loop
out
xchg
pop
imul
rorl
lods
stos
sub
call
popa
sub
mov
mov
in
enter
rclb
out
mov
and
out
jmp
outsb
mov
xchg
jae
sti
mov
mov
xchg
mov
push
or
sub
rorb
ret
and
mov
cmp
push
repz
out
ret
imul
sbb
add
jl
aaa
push
cs
imul
aaa
or
push
lahf
loop
rorl
or
aad
dec
mov
stos
repz
rcll
pop
sub
mov
mov
fimull
or
pop
mov
inc
aaa
scas
inc
xlat
lret
pop
xchg
sti
outsb
jns
xlat
mov
and
xchg
rorl
inc
mov
mov
das
or
sub
push
cmpl
xchg
lret
ss
jo
cmp
sbb
xchg
dec
push
mov
mov
in
clc
cmc
sbb
out
ljmp
jle
out
cwtl
and
or
xor
pop
xchg
fs
into
sub
sbbl
pop
dec
and
mov
xor
sahf
mov
mov
aaa
cmp
aas
mov
out
add
int
sbb
stc
and
loop
lds
jmp
or
dec
xchg
call
les
mov
mov
lds
mov
mov
dec
out
stos
insb
pop
iret
ja
scas
xchg
mov
dec
lods
shlb
inc
xchg
sub
loopne
shrl
add
push
xor
jmp
sub
jne
ljmp
rorb
jb
fprem
ret
or
inc
and
pusha
into
shrl
js
test
adc
push
hlt
aam
dec
icebp
xchg
push
mov
mov
int
mov
loope
lds
xor
push
inc
in
pop
scas
pop
dec
ret
mov
mov
into
or
lcall
bound
or
loope
das
jns
mov
cmp
or
dec
sbb
addr16
dec
fs
shlb
js
mov
out
hlt
jb
push
xchg
push
leave
sbb
mov
icebp
inc
js
or
jo
dec
lcall
cmp
aaa
das
mulb
out
lea
bswap
lods
and
test
lods
jb
sub
ds
fdivr
or
shrb
xchg
jns
pop
mov
add
cmpsb
mov
sahf
push
pop
mov
pop
lret
outsb
scas
std
xchg
mov
ljmp
pop
lea
push
mov
loope
outsl
call
repz
xor
mov
stos
push
fs
push
cmp
mov
faddl
dec
imul
mov
and
or
mov
push
jno
int3
jg
push
dec
movsl
jp
fldenv
daa
xorl
fstl
ja
sbb
inc
icebp
stc
aam
scas
int3
adc
jbe
cmpsl
jbe
mov
jmp
aam
cmp
sbb
sub
out
jb
sub
fisubrl
loope
adc
inc
sbb
cmp
and
cmpsl
icebp
mov
test
cmp
cmp
and
cld
pop
jb
mov
outsl
call
adc
cmp
sbb
iret
in
cld
jmp
cmc
outsb
sbb
stc
cmc
clc
push
mov
mov
leave
lret
movsl
add
movl
push
in
jp
cmp
xchg
adc
push
mov
push
mov
das
cwtl
push
jmp
sbb
push
dec
add
add
push
and
adc
inc
in
sahf
das
sbb
lahf
xchg
jne
mov
and
xchg
cwtl
push
inc
cmp
mov
lea
and
xlat
popf
cltd
pop
add
jne
pop
imul
ja
insl
repnz
and
mov
and
adc
jp
out
aam
inc
imul
xchg
js
popf
rep
lds
xor
mov
and
fs
add
xchg
aam
pop
out
out
int3
cmp
or
repnz
adc
push
imul
mov
sub
xchg
or
sub
inc
das
notl
pop
or
aad
aas
push
lahf
dec
mov
push
shrl
or
jno
cli
icebp
sbb
outsl
push
add
adc
ss
xor
dec
mov
adc
aad
scas
sar
push
cld
rorl
clc
cmpsl
and
cmp
sti
jp
xchg
iret
aaa
jno
xchg
sub
xchg
call
mov
jg
sbb
roll
jg
mov
and
adc
je
div
sahf
mov
stc
sbb
test
mov
pushf
adc
shlb
cltd
aas
push
push
cmp
jle
sbb
jno
cmp
xor
rorb
push
daa
cmp
in
shrl
cs
adc
sti
ljmp
jns
mov
fs
fwait
dec
call
and
mov
mov
mov
or
lcall
aas
lret
pop
fcmovnu
pop
sbb
xchg
mov
and
push
jge,pn
idiv
pushf
mov
mov
xor
popf
roll
cld
cmc
call
pop
add
mov
cwtl
pop
aam
jge
pop
es
jb
loop
outsl
xchg
int
mov
cmp
sarl
pop
sbb
cmp
jl
nop
fs
lock
leave
dec
mov
int
lods
sbb
jno
xor
dec
add
push
xchg
das
mov
jb
inc
mov
mov
xchg
and
or
add
mov
ja
stos
int
mov
ret
testb
push
adc
stc
cld
sub
jb
mov
in
fadds
cmpsb
fucom
rcr
mov
shll
fcoms
scas
sahf
cmpsl
clc
ja
jb
xchg
andl
outsl
add
subl
inc
ret
or
adc
jmp
fwait
adc
and
imul
jb
pop
or
sti
pop
pop
or
imul
in
test
and
fcmovne
in
loopne
pminub
adc
cmp
and
enter
push
inc
inc
or
sub
cmp
mov
cld
je
lret
mov
push
out
nop
sub
rclb
jp
add
into
cwtl
push
mov
and
xlat
jnp
and
xchg
pop
ss
fcomps
pop
jns
out
sbb
insl
push
pusha
push
sahf
mov
jmp
cmp
ret
mov
inc
negl
leave
jns
mov
jmp
test
fwait
outsb
xor
mov
call
xchg
loopne,pn
xor
sbb
pop
mov
out
lea
xchg
cltd
add
gs
mov
mov
out
stos
std
test
fildl
cmp
xor
mov
int
pop
push
aas
adc
xor
loop
aam
and
or
fbstp
dec
les
cmp
mov
dec
lret
stos
dec
xchg
pop
ljmp
lea
cmp
jp
stos
js
dec
dec
scas
and
jno
add
sub
push
mov
push
scas
xchg
and
push
cmp
jl
sahf
inc
scas
addr16
xor
stos
das
jo
das
pop
push
arpl
stc
sbb
fcoml
adc
stos
adc
push
or
cmp
jnp
sbb
inc
dec
clc
cwtl
fcmovbe
or
cmc
mov
xor
shll
arpl
jp
nop
xchg
mov
lcall
pop
dec
push
push
jno
outsb
lock
sti
fcmovnb
insl
rcrl
or
ret
pop
shl
test
call
xchg
mov
hlt
cs
mov
push
pop
xor
outsb
in
clc
daa
or
jo
pop
push
xchg
enter
push
dec
cwtl
jo
push
out
mov
daa
mov
popa
shll
mov
fdivs
imull
cli
in
fwait
iret
xchg
repz
adc
pushf
js
jbe
je
sub
aad
int3
lret
out
loopne
je
mov
rolb
xchg
iret
in
popf
fwait
inc
adc
inc
arpl
mov
adc
jnp
shlb
cmc
pop
out
inc
inc
mov
inc
jae
adc
mov
pop
popf
outsb
pop
pushf
sti
popf
pop
jne
gs
jecxz
sub
aas
mov
mov
sbb
jl
xor
mov
test
add
ss
dec
cmpsb
sub
inc
addr16
inc
add
aas
xchg
clc
or
and
fcmovnbe
or
arpl
jno
mov
mov
jp
xchg
jmp
rorl
ficomps
faddl
clc
loopne
xor
sbb
sbb
enter
icebp
ret
and
or
mov
bound
lcall
shl
aad
sub
movsl
out
fildl
nop
fs
cmp
cmp
arpl
arpl
pop
out
push
adc
lock
xor
mov
loope
or
pop
fidivrs
inc
jbe
sub
jae
ja
cmp
xchg
xchg
outsl
xchg
lret
jb
jo
jne
inc
xchg
stos
mov
push
jg
mov
sbb
jbe
pop
stos
xchg
int
lcall
outsl
jae
inc
xor
add
fs
fmull
jecxz
dec
xchg
push
mov
jnp
add
jb
lcall
dec
hlt
cli
sbb
adcb
subl
rcr
mov
cmpb
or
popa
in
mov
jp
fneni(8087
imull
mov
mov
and
mov
shl
ret
idiv
loop
fdivrs
mov
cli
jge
lods
and
fmuls
push
out
out
das
cmp
rolb
mov
rcrb
sub
mov
xchg
jno
test
mov
cwtl
jp
xor
rcr
out
test
dec
shrb
icebp
repz
mov
cwtl
pop
sbb
xchg
lahf
and
inc
outsb
pop
sar
xchg
or
mov
or
in
sbb
lret
pop
loopne
leave
out
into
cmp
jp
fwait
jg
movsb
out
mov
in
test
pop
aas
xchg
sub
int
xchg
aam
mov
loopne
sbb
ret
sbb
jp
outsl
ret
stc
stos
stos
adc
je
cmpsb
rcll
fimull
mov
mov
jge
mov
pop
mov
out
xor
or
and
add
movsl
dec
test
sbb
mov
mov
mov
sahf
ret
ret
or
pop
stc
cmpsb
push
xor
cmp
push
outsb
add
adc
pop
repz
lds
and
rcrl
ja
daa
out
ss
imul
xchg
movsl
and
rcrb
jecxz
xorl
xchg
cmp
push
or
mov
sub
inc
out
mov
stos
movsb
xchg
lret
add
test
cmpsb
stos
push
movsb
adc
push
mov
pop
loop
add
mov
fsub
out
in
xchg
jns
inc
add
pop
push
push
jno
int
cmp
into
mov
fdivl
mov
out
xchg
popf
dec
cmp
lret
mov
jo
rcrl
pop
mov
jmp
leave
insb
sbb
iret
rcrb
outsb
or
cwtl
and
bound
loopne
test
xor
xchg
jnp
mov
lret
nop
lret
cwtl
mov
sub
sub
test
push
cli
mov
mov
and
mov
lahf
sbb
lds
in
mov
scas
addr16
cmp
test
lahf
mov
stos
pushf
lret
scas
mov
imul
push
je
push
adc
xlat
pop
sub
xlat
and
sub
dec
cmpsl
jo
js,pt
jae
pop
lods
xchg
mov
dec
add
in
xor
sti
fisttpll
push
adc
jp
out
lcall
lret
cs
inc
or
outsl
aas
ds
subb
test
outsb
xor
push
movsl
inc
xchg
aam
lods
and
push
ret
lds
adc
iret
sbb
or
aas
rorl
mov
inc
test
fdivp
into
sub
addr16
aaa
ja
pop
jl
dec
add
outsb
jb
lock
push
push
cwtl
andb
or
inc
dec
ljmp
lcall
pop
nop
and
push
mov
add
in
push
ljmp
data16
push
pop
leave
adc
out
sbb
jb
mov
test
inc
aaa
out
cmp
add
jp
xor
mov
insl
push
and
jne
sahf
inc
mov
pop
adc
aaa
sbb
mov
loopne
loop
cwtl
push
mov
enter
cld
or
cmp
or
cmp
cs
sahf
cmc
lds
jge
mov
neg
xchg
pushf
mov
jle
shll
xor
mov
xor
lcall
into
pop
mov
testl
mov
push
push
popf
sub
aam
pop
xor
fs
out
xor
bound
pop
mov
cmc
xor
pop
test
add
movsb
pop
pop
fxch
ret
lods
lret
pop
mov
das
xor
mov
rcll
fwait
and
sbb
inc
scas
xchg
out
jl
daa
mov
and
push
imul
gs
push
sub
jbe
or
and
pop
jmp
test
loope
movsb
les
sahf
ret
rclb
cmp
cmp
iret
cli
mov
arpl
mov
dec
subb
scas
test
lahf
test
loope
mov
mov
cmp
jg
sub
stos
cltd
mov
hlt
loope
in
hlt
out
jmp
rol
mov
mov
inc
push
or
push
or
xchg
xchg
pop
aas
fxch
lods
lods
into
inc
or
jb
jnp
push
imul
sub
push
xchg
fcmovb
mov
in
test
add
je
mov
mov
sarb
mov
out
mov
and
int
fcomps
test
push
inc
out
push
in
lock
sti
ret
dec
xor
add
cld
nop
xor
repnz
jecxz
jno
stc
cmpsl
cmp
pop
mov
loop
cmp
insb
bound
fldcw
out
jns
sbb
cwtl
and
and
addb
mov
mov
jmp
repz
jno
decb
mov
test
sbb
jnp
les
sbb
jb
sub
fiaddl
mov
cld
shr
jnp
sbbl
sbb
pop
jns
daa
es
pop
das
inc
cltd
shlb
movsb
out
mov
mov
orl
loop
leave
ja
push
inc
sub
popf
inc
cld
push
adc
cmp
jge
xor
insl
icebp
xchg
test
jo
mov
cld
and
push
lods
stc
push
jg
int
in
sbb
hlt
in
inc
pop
out
cmpsl
xor
sbb
mov
adc
mov
hlt
rcrl
xchg
dec
js
mov
xchg
scas
xchg
addr16
notb
pop
in
dec
or
popl
adc
push
pop
dec
cwtl
movsb
sbb
dec
inc
pusha
imul
mov
aaa
jecxz
sbbl
and
xchg
into
jbe
cmp
push
xchg
ljmp
je
into
jl
sbb
ljmp
sub
cmp
test
pushf
dec
nop
jmp
sbb
jno
mov
add
stos
sub
adc
mov
mov
insb
mov
lret
push
subb
dec
sti
jl
subb
cld
mov
inc
out
lock
out
out
push
mov
push
push
mov
jno
add
int
mov
lcall
outsb
test
mov
sub
sbb
clc
jns
out
dec
cmpsl
mov
imul
bound
cld
inc
inc
cmp
clc
lahf
xchg
cmp
std
push
sbb
push
mov
pop
jne
mov
repz
inc
jnp
fwait
cmc
sbb
dec
test
sbb
jge
xchg
cmp
stos
or
sub
pop
stos
pop
test
pop
fs
icebp
mov
outsl
into
or
push
imul
sarb
int
cmp
fmul
repz
inc
pop
inc
daa
push
lret
dec
jecxz
mov
push
cmp
int
popa
ljmp
rcrb
int
cltd
movsb
insl
cmp
xchg
mov
dec
leave
add
adc
call
lds
jge
imul
sub
scas
repz
push
mov
insl
fnstcw
xor
push
stc
and
push
adc
xchg
cs
xchg
iret
lcall
xchg
sub
push
out
jno
add
push
int3
hlt
sub
pusha
aaa
push
and
xchg
movsb
sub
scas
and
push
out
mov
and
dec
repnz
mov
cwtl
jne
adc
mov
mov
gs
ss
bswap
ficoml
test
push
mov
mov
xchg
jge
cli
leave
pop
pop
leave
ja
adc
cld
in
add
or
push
sbb
xchg
xchg
dec
xchg
pop
adc
loop
jns
and
and
movsb
lods
cltd
in
mov
pusha
sarl
movsb
rcrb
push
add
dec
jge
xlat
stos
sbb
ss
shlb
push
cmpb
imul
sub
xor
sbb
cmp
shll
mov
repnz
out
jl
shl
push
adc
cmp
mov
repz
mov
pop
fsincos
ds
cli
cmp
jg
mov
mov
xchg
inc
subb
sbb
cwtl
sbb
cmp
data16
dec
adc
dec
sub
pusha
ret
jb
sarl
adc
xor
dec
mul
cmp
jg
xchg
cli
push
pop
roll
mov
stc
adc
mov
and
cmp
cli
test
lods
fisubrl
fisttpll
and
and
shll
adc
jmp
mov
shrl
inc
gs
mov
sarl
xor
inc
mov
cld
clc
inc
fdivs
xor
cmp
adc
int
push
dec
push
xlat
or
js
fsubr
scas
fistpl
mov
mov
or
cmp
inc
rcrb
insl
arpl
outsb
pop
xor
mov
pusha
sti
adc
fwait
std
add
sbb
xchg
or
xchg
jns
out
inc
pop
iret
adc
aaa
ficoms
cmp
dec
ljmp
xchg
sbb
cmp
out
mul
adc
imul
pop
and
les
lds
mov
test
xor
enter
cmpsb
out
jle
bnd
repz
outsl
test
ficoml
jmp
jbe
std
pusha
or
jo
jge
jmp
mov
fildl
inc
pop
filds
dec
xor
ds
and
dec
lret
movsb
jae
pop
int3
inc
mov
inc
pop
sub
rcrl
mov
in
and
pop
mov
cld
xor
daa
cmp
add
mov
movsl
jbe
mov
aam
or
jmp
mov
dec
fs
js
pop
adc
jge
ficomps
mov
cmpsb
std
rorb
lds
sbb
out
pop
test
fisubs
ds
repnz
fnsave
and
or
aad
add
mov
int3
mov
pop
or
addb
or
aam
shlb
add
stos
out
pop
imul
repnz
sbb
add
in
cld
pop
push
sbbl
mov
insl
lock
aaa
jne
fsts
sbb
mov
push
mov
scas
xchg
mov
ficoms
xchg
shll
loopne
stos
ret
cs
in
test
iret
and
idivl
jne
ret
test
mov
mov
les
outsb
push
push
movsb
popf
hlt
idivl
imul
push
mov
mov
xchg
push
xorb
cld
adc
sub
stos
int3
sbb
icebp
cmpsb
shll
enter
stos
adc
pop
shll
imul
jne
push
push
dec
iret
xchg
push
fsts
ret
mov
dec
cmp
mov
shr
xchg
and
icebp
movsb
add
int
sahf
lods
pop
mov
pop
shr
mov
scas
std
shll
aad
inc
into
rorb
icebp
mov
sub
mov
ret
into
mov
ret
out
lds
jmp
movsb
adc
dec
and
jmp
xor
fsubl
in
fstpt
popa
cmpsl
xchg
popf
push
aam
xor
ja
add
cmp
enter
mov
lcall
cs
or
jb
aas
inc
inc
add
imul
xchg
cmp
sbbb
and
adc
scas
and
rcr
xchg
xchg
mov
or
and
push
dec
inc
push
bound
jge
in
jbe
inc
pushw
pop
mov
in
aam
xor
out
fdivrp
fldenv
nop
sbbl
xchg
and
xchg
stc
dec
lcall
xor
repnz
push
test
in
xorb
inc
pop
jecxz
or
pop
int
test
lock
sets
mov
mov
fsubrl
push
std
add
add
in
nop
add
scas
lods
les
or
sbb
sbb
arpl
inc
jns
fst
outsb
mov
pop
fs
mov
xor
adc
insl
fistpll
cmova
add
inc
jbe
lds
push
cld
mov
dec
jmp
inc
out
cwtl
in
mov
mov
pop
mov
out
sbb
dec
push
mov
mov
cmp
repnz
ret
pop
mov
stos
dec
sub
xor
fbld
cmp
popf
xor
push
std
rcll
lret
movl
sub
mov
cmp
push
adcb
jge
xchg
popa
add
aaa
sub
sbbl
fucomip
add
ret
adc
in
inc
shrl
fisttpll
leave
xor
and
fs
adc
mov
xchg
aam
push
subb
stos
sti
push
push
dec
test
and
sub
inc
imul
int
sbb
mov
mov
ss
jp
in
fs
test
or
add
shrl
jnp
sbb
mov
sti
and
mov
dec
imul
xchg
and
in
fs
sbb
stos
ret
sbb
popa
jo
add
stos
aas
mov
push
jp
sub
daa
xchg
out
loop
or
dec
movsb
flds
mov
movsl
xchg
in
xchg
push
or
push
test
movb
xchg
push
repnz
add
mov
out
lods
xor
enter
xor
divb
es
int3
mov
xchg
jecxz
jmp
xchg
or
popf
adc
sub
sti
in
and
fsin
xchg
and
lods
dec
jp
fldl
jg
pushf
mov
daa
inc
add
clc
cmp
dec
sub
push
or
jge
movsb
add
orb
lret
mov
jae
jecxz
push
mov
mov
ja
mov
std
shrb
sbb
push
xchg
mov
inc
or
scas
adc
fs
sbb
push
xchg
xchg
xor
jnp
data16
popf
scas
mov
ljmp
ja
dec
sahf
adc
cli
dec
imul
mov
xor
lcall
fcoml
dec
dec
arpl
shl
mov
fcom
jo
xor
rolb
mov
adc
add
xchg
and
insl
push
jp
sbb
sbb
pop
or
jb
pop
jp
jle
mov
pop
push
pop
loopne
add
xor
mov
adc
loopne
xor
scas
pop
mov
mov
clc
sahf
ja
clc
xchg
jmp
sub
cmc
and
dec
aam
or
inc
sahf
les
adc
add
aaa
lds
jp
roll
out
sbbb
mov
jno
pop
add
mov
xchg
into
mov
shll
pusha
xor
adc
or
lds
add
bound
in
cmpb
mov
inc
out
dec
mov
fidivl
add
xlat
or
mov
popa
mov
mov
shlb
fimull
cli
mov
insb
into
jp
mov
sbb
inc
in
pop
inc
lret
insl
aas
mov
sub
mov
inc
jno
je
cli
mov
nop
fidivrs
incb
shl
push
rorb
xchg
xchg
dec
push
jg
pop
fnstenv
rcr
fisubl
pop
pop
adcb
aad
insb
xchg
and
loopne
jbe
adc
mov
and
repnz
dec
mov
mov
fistpl
jno
jl
xor
pop
sbb
sub
inc
dec
cmc
ja
je
sub
pop
sub
mov
push
xorb
mov
pop
rclb
pop
in
scas
lret
pop
jae
pushf
cmpsl
bound
and
das
xchg
mov
cmp
sub
mov
rclb
mov
or
popf
lcall
cmp
jl
pop
sbb
movsb
mov
dec
pusha
and
ljmp
xchg
bound
xchg
push
loop
or
xor
jle
cmp
lods
push
icebp
lds
xchg
xchg
adc
jbe
sahf
repnz
pop
pop
jae
call
inc
and
push
aam
mov
mov
dec
shrl
pop
insb
jmp
sahf
cmpsb
daa
cmc
popf
adc
jecxz
mov
xchg
shlb
icebp
ret
sbb
jge
pushf
sub
hlt
pop
xor
lret
dec
sbb
sbb
jl
das
nop
call
jecxz
cmpb
ja
inc
lret
cmc
in
pop
std
xor
mov
jno,pn
das
scas
iret
pmuludq
xor
stc
insl
vpandn
aad
psadbw
fiaddl
mov
bound
enter
mov
cmp
sub
cmp
mov
xchg
xchg
in
xchg
inc
sbb
jns,pt
lock
xchg
ficompl
jne
dec
pop
sbb
std
les
insl
fs
into
das
jo
pop
gs
aas
es
lods
mov
or
mov
push
pushf
sub
test
inc
inc
inc
push
outsb
clc
inc
add
fldcw
pop
in
loopne
aad
shrl
rorl
mov
inc
mov
sbb
movnti
movsb
mov
imul
push
cmp
fbstp
dec
lds
sahf
push
test
cwtl
or
insl
or
dec
push
out
mov
mov
or
mov
jl
pop
mov
bound
rcr
leave
inc
repnz
or
xor
xor
lea
outsb
inc
jecxz
sbb
and
in
adc
outsb
enter
pop
push
jge
dec
mov
push
icebp
sub
pusha
push
inc
xchg
imul
movsb
test
jno
repz
arpl
push
jns
flds
repz
sarl
mov
add
jbe
sbb
jge
lods
mov
inc
adc
ja
jmp
in
push
loopne
and
pusha
inc
pop
inc
xlat
cmpsl
cmp
int3
cmp
sbb
and
xchg
and
fsts
dec
or
inc
add
lahf
sahf
push
push
cltd
ret
xor
movsl
jns
pop
jmp
repnz
xlat
repnz
and
mov
clc
insb
iret
push
jg
ret
les
pop
into
push
ja
addr16
fistpll
fwait
mov
adc
pop
fstl
shlb
fwait
push
mov
mov
addl
pop
push
and
sahf
int3
add
test
and
push
jl
sti
adc
mov
adc
insl
pop
nop
jno
sbb
inc
scas
mov
and
inc
icebp
add
xchg
push
subl
inc
das
cltd
pop
out
jnp
xchg
push
in
add
mov
adc
dec
bound
xchg
fwait
fs
mov
or
push
cmp
dec
mov
pop
pop
sub
mov
in
xor
in
scas
push
dec
js
out
mov
and
lock
inc
int3
inc
mov
jns
sti
stos
mov
add
movsl
sti
aad
cmp
cmp
jno
mov
sti
sbb
add
cmp
push
xchg
inc
inc
repnz
pop
xor
mov
adc
lods
mov
add
inc
xchg
ds
cmp
pop
lret
cmc
jne
mov
repnz
cld
cmp
jne
push
sub
mov
dec
cli
fwait
adc
fisttpl
mov
mov
jmp
ss
ljmp
pushf
in
fldt
mov
pop
or
xchg
fildll
fmull
mov
dec
sbb
jae
push
repz
pop
dec
mov
inc
inc
fnsave
popl
cmp
jp
in
mov
push
dec
add
popf
addr16
test
or
mov
pop
add
or
or
push
ss
movsb
mov
stc
xor
pop
fnstcw
push
jl
mov
push
loop
sbb
pop
daa
add
or
xlat
jbe
mov
fcompl
jb
test
adc
es
xor
and
mov
lds
cmp
lret
scas
mov
jle
pop
testl
testl
rorl
test
pop
dec
pop
mov
lret
cmp
push
mov
xor
stos
loope
pop
dec
fucomi
cmpsl
dec
fisttpll
or
xor
pop
cs
mov
pop
pop
push
lods
dec
inc
sbb
sub
push
in
add
add
mov
dec
push
push
sbb
pushf
mov
vpaddb
das
mov
pop
add
sbb
adc
arpl
xor
aaa
sub
fimull
mov
and
mov
and
xor
push
xor
sbb
cmp
or
pop
xchg
pop
ja
mov
jnp
adc
xor
jbe
xor
jb
adc
xchg
jl
xor
mov
mov
and
jne
in
sbb
scas
jae
mov
xchg
cmp
rcrl
andb
xor
bound
fisubrl
fistpl
cltd
out
or
test
int
test
scas
or
inc
mov
push
mov
inc
out
inc
add
xchg
test
inc
out
rcl
xlat
push
lock
enter
shll
inc
mov
insb
rorl
shll
outsb
lahf
xchg
ret
pop
lret
push
mov
mov
bound
scas
jl
stc
jae
je
cmp
push
inc
dec
fsub
push
mov
push
fadds
sub
sub
stos
sub
push
push
or
lock
pop
testb
dec
mov
test
sbb
shr
mov
add
ret
insl
fcmovnb
xor
gs
jmp
int3
insl
cmp
pop
add
sub
call
inc
cmp
data16
outsb
push
adc
hlt
aad
call
jge
xchg
inc
stos
push
aas
adc
aam
in
add
jno
xchg
xlat
mov
mov
xchg
xor
cmc
mov
ljmp
inc
xchg
and
pop
sub
lods
fsubr
movsl
pop
rcl
cmpsb
xor
pop
sbb
sub
cmpsl
dec
pop
fs
add
sub
arpl
sub
fs
cmp
mov
xchg
lock
fsub
jp
daa
movsb
mov
inc
adc
sbb
dec
xchg
dec
adc
mov
mov
mov
jnp
inc
inc
fadds
sub
add
xor
dec
test
daa
dec
jae
mov
pop
xor
lret
mov
add
in
pusha
mov
into
mov
inc
mov
clc
pop
add
xorl
mov
scas
and
mov
mov
jecxz
or
mov
adc
imul
fs
cmp
ret
xchg
test
mov
fincstp
mov
cmpsb
inc
jbe
movb
and
fiaddl
jg
push
mov
stc
mov
push
and
or
enter
mov
xchg
xchg
push
sbbb
in
cli
jnp
mov
xchg
mov
jno
mov
sub
pop
repnz
cltd
test
test
cmpsl
stc
stc
aaa
call
ds
mov
add
leave
rcll
dec
inc
not
push
inc
in
add
add
loope
push
xchg
jge
xchg
sub
cmp
negl
les
mov
in
fistps
sbb
rolb
roll
dec
mov
lds
mov
mov
sub
imul
popf
imul
xor
lods
or
pop
cmp
sbb
sbb
lret
je
xchg
adc
mov
and
adc
into
xchg
call
inc
sbb
mov
call
test
stos
xor
inc
je
cmp
or
dec
dec
jo
xchg
dec
xchg
lock
mov
insl
jae
jecxz
jo
or
or
aaa
inc
xchg
cld
stc
stos
and
xor
lahf
roll
lahf
aaa
icebp
xchg
xor
and
arpl
out
sub
inc
mov
push
rclb
sub
or
mov
pop
std
jl
jns
push
lret
cs
push
mov
and
push
movsl
int3
adc
gs
aam
pop
pop
iret
xlat
fimull
lock
jbe
lock
xchg
push
rorb
adc
shll
sbb
cmp
sub
je
xchg
jecxz
or
adc
xor
mov
outsb
stc
mov
fistpl
xor
xchg
xchg
xchg
sbb
movsl
les
mov
or
mov
gs
jb
fnstenv
mov
and
shll
adc
mov
cmp
bound
sbb
cmpsb
call
add
sbb
clc
cmp
pop
adc
mov
sti
and
pop
jle
push
fisubrs
mov
inc
dec
mov
outsl
fsubrs
add
jno
cmpl
ljmp
out
aam
out
rcl
xchg
xchg
leave
bound
mov
imul
sti
icebp
fs
mov
inc
dec
or
cwtl
add
mov
and
or
or
test
sbb
aad
sub
leave
jl
mov
lock
cwtl
sub
cs
es
cmp
jne
pop
rcrb
shr
popa
add
pop
or
lret
clc
pop
and
scas
shll
mov
into
gs
xor
cmpsb
outsl
jge
mov
lds
xchg
fwait
test
mov
pop
add
jno
cmp
cs
sub
pop
add
sahf
je
lea
mov
xchg
addr16
push
fsubs
lcall
into
adc
fiadds
sbb
shl
aam
out
mov
js
insb
pusha
jb
jno
mov
adc
or
mov
int3
sahf
sbb
pop
rclb
bound
xor
das
cld
mul
ljmp
xchg
inc
out
xchg
mov
mov
loopne
pop
cltd
ret
cltd
outsb
bound
scas
fistps
loope
xchg
jns
cmc
into
jge
xor
push
inc
lds
mov
mov
lods
xor
and
mov
ds
mov
sbb
lcall
lea
add
jp
gs
push
pop
push
insl
and
and
aas
inc
and
or
int3
insb
cmp
scas
jl
into
and
xchg
mov
sbb
and
pop
pop
push
add
cmp
js
arpl
jnp
jo
fiadds
cmp
dec
aam
and
jbe
pop
lret
loopne
pop
testl
testl
cwtl
insb
pop
add
loop
pushf
out
in
xor
sahf
pop
xor
and
jge
adc
aad
push
js
mov
pop
in
sub
inc
test
pushf
mov
xchg
pextrw
and
xchg
xchg
enter
mov
hlt
cmp
lret
push
dec
push
loopne
rolb
xchg
sbb
fs
ja
add
pop
ffree
push
mov
js
lret
mov
inc
push
daa
jl
or
sub
jbe
adc
mov
inc
mov
push
or
fdivrl
cltd
jp
ja
mov
dec
stos
jp
dec
mov
jmp
mov
shll
jbe
mov
or
lock
fdecstp
rorl
pop
push
les
repz
xchg
push
ret
pop
mov
sbb
imulb
leave
int
lds
arpl
cmp
shlb
jl
mov
push
xchg
push
imul
fwait
jl
and
es
loopne
push
mov
hlt
mov
ss
jno
add
pop
push
push
jnp
pop
stos
lret
xor
jno
xor
or
jno
ljmp
xchg
adc
gs
sbb
std
in
xor
nopl
jne
cmp
xor
hlt
add
mov
mov
adc
nop
pushf
fcmovnbe
inc
enter
inc
out
jnp
insb
mov
outsl
icebp
or
scas
mov
sub
mov
repz
aas
outsl
scas
orb
sbb
xor
sbb
inc
outsb
push
jbe
cmc
mul
lods
mov
mov
jp
sub
popa
jmp
sbb
and
xor
mov
and
lds
sbb
fisttpl
nop
push
outsl
mov
je
das
cmp
sbb
fadds
xlat
inc
push
dec
insb
sub
xor
push
dec
outsb
sub
jae
testb
shrl
inc
sub
xchg
push
pop
lea
xchg
mov
add
mov
in
push
popf
mov
mov
inc
clc
adc
or
fiaddl
enter
sbb
icebp
xchg
test
fisttps
adc
orl
push
insb
cmpsb
int3
imul
movsl
mov
popf
cmp
ds
test
pop
pop
lahf
and
inc
jne
mov
sub
ret
dec
push
xorl
pop
mov
cmpsl
daa
std
cltd
ret
xlat
mov
lret
shl
aas
push
int3
add
movsb
pop
shrl
jae
cld
add
jge
icebp
xchg
mov
mov
xor
pop
mov
aam
enter
inc
fwait
mov
lock
lcall
xor
pop
fst
pop
std
inc
mov
int3
movsl
and
jmp
mov
fcmovbe
ret
add
movsl
mov
push
dec
mov
mov
adc
into
in
or
lds
mov
imul
mov
cmp
fstl
subb
and
mov
or
ret
inc
test
jecxz
es
scas
xor
movsl
cmp
pop
cli
mov
aad
dec
stc
les
mov
xchg
lahf
test
lods
sti
push
xor
push
xchg
int
sub
xchg
movsl
cmpsl
xchg
icebp
and
sti
out
push
mov
mov
mov
dec
jmp
sub
jne
sbb
in
sbb
and
add
ds
xchg
jg
ds
jno
dec
loope
out
sub
mov
jns
and
sbb
nop
adc
scas
push
aam
jmp
inc
sbb
push
cwtl
jp
fwait
sub
test
rcrb
out
fsts
push
push
or
mov
and
pop
or
adc
je
clc
xchg
and
pop
sub
jmp
icebp
mov
icebp
nop
lcall
fadd
dec
ret
loope
mov
sub
push
inc
icebp
out
gs
xchg
jl
pop
inc
dec
ja
dec
sar
pop
hlt
js
adc
mov
cmp
jg
cli
mov
cltd
incl
inc
fs
into
or
adc
cs
xchg
in
mov
in
hlt
sti
pusha
mov
push
js
jne
pop
test
push
xor
jp
ljmp
insl
pop
dec
sbbb
aaa
add
add
imulb
and
mov
mov
sbb
or
jl
fsts
pop
sbb
fmul
sbb
lock
insb
imul
shl
jmp
adc
mov
push
popf
jbe
pushf
jae
sbb
data16
jl
leave
les
xchg
outsl
test
xchg
scas
out
inc
push
gs
pop
daa
and
mov
fs
dec
jnp
xchg
stos
dec
or
cmc
push
xchg
ja
mov
jge
sbb
mov
enter
or
std
clc
add
xor
and
leave
loope
dec
dec
cmp
out
jb
popa
mov
out
mov
mov
xor
mov
xor
mov
rorb
cli
sub
sarb
in
loope
jl
and
sbb
push
xchg
and
pop
jge
push
mov
xchg
jle
leave
mov
in
lea
stos
lret
in
daa
sti
insl
xor
mov
adc
movsl
aad
mov
sub
lret
mov
xor
cmc
sbb
add
lds
mov
test
pushf
cmp
sub
mov
pop
nop
sub
xorb
andl
pop
popf
daa
ljmp
mov
xchg
xchg
xor
mov
mov
rcrb
add
int
or
cmp
mov
jge
sbb
xor
jae
mov
sub
rcrb
ds
inc
and
cmc
stos
dec
popa
fs
loope
mov
bound
mov
or
int
sbb
xchg
subl
mov
xchg
inc
sbb
or
add
mov
cs
es
ret
pop
mov
adc
hlt
adc
mov
aam
dec
sub
pushf
cwtl
mov
sub
pusha
lock
fnstcw
loopne
test
popf
inc
mov
dec
dec
jmp
sub
test
jmp
mov
mov
jge
jno
push
loopne
sbb
mov
dec
xor
loop
cmc
daa
repz
loopne
mov
dec
pop
mov
add
and
iret
pop
push
lea
push
mov
xor
xor
mov
adc
dec
push
jg
inc
mov
xor
pop
loopne
push
aas
leave
mulb
jbe
clc
inc
stos
push
sahf
popf
add
mov
or
imul
add
mov
and
xchg
jae
pop
and
xchg
jp
and
mov
jl
outsb
ds
pop
and
mov
shr
test
mov
adc
mov
es
push
sub
in
jae
adc
jns
movsb
jecxz
movl
adc
push
and
mov
jnp
dec
mov
jle
out
shll
fcoml
aam
lret
fidivs
mov
ljmp
cmc
ret
cmpsb
ljmp
inc
inc
out
inc
in
rcrb
es
mov
sbb
sbb
shr
ljmp
dec
jmp
sub
xorb
adc
xor
dec
inc
sub
cli
mov
jb
or
inc
out
aam
into
icebp
leave
int3
dec
inc
mov
das
es
cmpsl
inc
pop
rorl
cltd
mov
add
dec
xchg
je
outsl
sti
pusha
mov
inc
pop
jg
add
and
dec
add
adc
mov
out
gs
cmp
loop,pn
nop/reserved
lahf
add
xorl
push
in
in
test
adc
push
cmpsl
pushf
jle
dec
dec
fstpt
and
lea
dec
stc
cmp
je
jecxz
mov
cmpsb
ss
inc
sbb
lret
mov
xor
sbb
jno
pop
mov
aam
cmpsb
int3
fisttpl
mov
imul
mov
pop
leave
loop
xchg
pop
dec
mov
repz
push
pop
out
scas
imul
xchg
stc
mov
sub
or
sub
sub
mov
push
mov
movsl
push
push
movsl
fdivp
add
inc
imul
jg
lret
xchg
push
cltd
test
sarb
mov
push
add
enter
xchg
imul
lods
sub
in
inc
mov
fstl
movsb
mov
push
leave
fcmovnb
in
test
mov
imul
sub
cmc
jo
cmp
fists
jns
inc
mov
repz
in
imul
dec
xchg
out
cmpsb
bound
mov
jnp
jnp
fs
stos
cmp
pop
hlt
fbstp
cmp
in
push
add
and
xchg
jmp
add
roll
lods
sbb
sub
insb
sbb
movsb
mov
push
mov
insb
mov
inc
out
aad
cld
leave
fld
xor
and
pop
or
stos
lock
lock
popa
sti
popf
arpl
scas
xchg
das
das
icebp
xchg
add
iret
xor
cmpsb
mov
addl
in
inc
sbb
adc
pop
adc
fsubp
xchg
out
imul
mov
jbe
mov
aas
adc
adc
shll
pushf
xchg
adc
mov
das
add
repz
stos
and
scas
pop
cmpsb
jmp
testl
jnp
pushf
push
pop
lds
mov
dec
sbb
mov
sbb
cwtl
rolb
fiaddl
jae
test
lret
pusha
imul
jge
cmp
pop
imul
fisttpl
adc
push
loopne
push
icebp
dec
jle
adc
dec
mov
or
xlat
push
pop
inc
test
mov
xchg
mov
test
movsb
mov
mov
popa
push
jle
movsb
es
insl
cmpsb
fstpl
and
sbb
loope
fiaddl
sub
and
lcall
jp
add
lret
cltd
sbb
push
jl
hlt
addr16
lods
nop
push
or
xlat
insl
jae
mov
xor
add
das
loop
add
loop
lods
or
push
push
test
outsl
push
jb
pop
enter
inc
fimull
and
dec
mov
adc
adc
xor
rcl
push
xchg
push
add
adc
xor
popa
cwtl
mov
dec
add
sub
push
stc
fisttpl
xor
outsl
adc
arpl
and
fnstsw
aaa
test
je
test
lcall
push
insb
arpl
pop
loope
lods
stos
pop
push
imul
enter
mov
add
sbb
int
outsb
push
mov
subb
lds
cmp
cltd
cwtl
shr
sub
lods
bound
jae
mov
sbb
jmp
movsb
xor
xchg
movsl
gs
or
rcrl
in
ljmp
xchg
and
xor
lret
loop
das
stc
popa
add
or
lret
test
and
xor
lea
stos
lea
movsb
xor
lock
or
shrl
aad
cld
les
xchg
jg
jne
cs
pushf
mov
fs
negl
lret
pushf
cmp
pop
jo
and
mov
pop
test
divb
xchg
jno
mov
icebp
repz
mov
jl
xchg
lret
decb
adc
inc
dec
scas
dec
fcmovu
jle
movsl
call
push
sub
mov
fdivr
scas
dec
mov
add
push
add
lret
int
push
inc
jbe
adc
mov
cmp
pop
test
push
push
sub
sbb
jae
rcl
pushf
adc
pop
inc
loop
icebp
pop
neg
inc
adc
not
cmc
lods
es
out
mov
cmp
popf
scas
inc
mov
nop
inc
sub
pcmpeqb
mov
lret
loope
push
mov
mov
clc
cli
mov
push
xchg
test
scas
and
test
fst
sarl
fldz
jecxz
pop
int
or
leave
cmp
mov
ret
popf
or
fdivs
dec
push
jne
sbb
pop
nop
and
jge
add
xor
imulb
jnp
movsl
jns
mov
cmp
push
mov
or
cld
jnp
push
adcb
fs
cwtl
aad
xchg
call
mov
mov
sbb
das
cmp
int3
popa
jo
fdivp
pusha
jno
cld
out
orl
lcall
cmp
inc
addr16
jno
dec
mov
inc
int3
mov
repnz
test
ja
in
outsb
cli
nop
mov
dec
adc
lcall
jnp
mov
inc
fiaddl
sbb
adc
mov
insb
sub
xchg
fisubrl
sti
insl
subl
pop
stos
dec
pop
push
mov
repnz
hlt
jg
ss
push
adc
push
out
cli
fsub
sub
jge
mov
mov
inc
push
lret
dec
inc
orl
movsb
or
jp
fsubrs
pop
or
sbb
push
mov
pop
jecxz
push
jne
push
stc
adc
cmc
pop
adc
cmp
test
and
mov
pusha
mov
jne
loope
adc
pop
js
cs
cmc
push
imul
add
and
xchg
in
lret
fs
dec
jo
cmp
int3
leave
sbb
scas
jo
cs
out
sarl
js
arpl
ret
popa
pop
jne
outsb
rcll
pop
push
mov
sbbb
mov
pusha
mov
aas
xor
mov
ja
leave
jmp
movsl
hlt
mov
std
sbb
fiadds
lcall
or
mov
mov
repnz
sub
mov
out
mov
out
gs
or
popf
pop
mov
shll
sbb
add
dec
xor
jmp
mov
dec
leave
insb
out
imul
xor
loope
in
aam
sub
add
xor
inc
cmpsb
or
fs
daa
xchg
sub
andps
cli
xchg
push
setns
daa
arpl
pusha
pop
or
insl
bsr
and
push
out
mov
insb
leave
inc
in
pop
sub
dec
test
or
repz
std
mov
add
movsb
xchg
inc
xorl
loop
pushf
arpl
xchg
frstor
ljmp
push
xchg
std
addb
and
ficompl
mov
sti
push
outsb
mov
push
adc
orb
push
xlat
movsb
cli
hlt
inc
daa
mov
cs
mov
mov
or
add
cmp
cmpsb
test
fs
and
mov
movsb
lahf
popf
xchg
das
cmc
flds
cmp
or
xchg
hlt
dec
movsb
cmp
jnp
insb
cmpsb
lds
pop
test
mov
ja
and
lcall
mov
inc
test
pop
lret
addb
push
stc
fiaddl
ja
push
xchg
mov
ja
das
push
sbb
xchg
popf
mov
sub
sub
pop
jl
pop
rol
vrsqrtss
adc
add
js
mov
pop
lret
adc
les
xchg
adc
mov
sarb
cmp
in
outsl
adc
dec
jmp
cmp
fwait
outsb
pop
and
sahf
aas
sbb
jno
mov
bound
mov
ja
mov
adc
cmp
lods
ds
fldenv
ret
andb
hlt
arpl
inc
outsl
popf
adc
pusha
sbbl
jecxz
mov
std
mov
sahf
sarl
int3
inc
stos
push
aaa
jae
js
push
in
fcomi
sbb
lret
pop
shl
push
out
mov
mov
popa
and
int
repnz
out
inc
mov
lea
cmc
test
push
jl
cmc
repnz
jge
sti
or
adc
shlb
incl
inc
loop
and
lods
cmp
into
pusha
imulb
les
rclb
test
mov
push
push
mov
test
std
out
jb
subl
dec
iret
hlt
adc
mull
cmpsl
fcom
inc
xor
sbb
ss
jno
ret
shll
jecxz
enter
inc
mov
xchg
jmp
in
aam
pop
dec
mov
or
arpl
add
jb
xor
std
inc
pop
test
mov
cmp
add
stos
jb
jg
and
lret
cmp
add
fdivl
cli
pop
cwtl
ret
mov
adc
mov
lock
hlt
xchg
lea
xchg
mov
jnp
subl
lods
fsubl
stos
cmpsl
ljmp
scas
or
sbb
xchg
mov
sbb
hlt
mov
lods
pop
mov
stos
aas
sarb
push
movsb
outsl
inc
mov
insl
call
sbb
xor
test
gs
test
je
fwait
or
push
insl
inc
int
nop
xchg
and
cmc
sub
je
cwtl
cmpsl
fbld
scas
ss
xchg
out
cld
xchg
je
je
push
sbb
fimuls
add
sbb
push
fldt
es
stc
and
and
or
inc
and
and
fistl
xchg
xchg
data16
lret
jno
inc
adc
ja
or
cmp
out
testb
or
popa
out
sbb
call
dec
fmuls
int3
mov
jg
xchg
pop
stc
movsl
sbb
jle
in
jecxz
out
test
mov
sub
mov
fisttpl
loope
mov
into
xor
call
aam
xchg
mov
pop
inc
adc
pop
mov
mov
dec
xchg
cmpsb
pop
push
test
jo
faddl
out
push
inc
pop
pop
and
jns
daa
rorb
out
and
loope
data16
sahf
divb
daa
mov
ficompl
fs
jp
inc
xchg
out
loope
lret
subb
out
ffree
clc
rcl
add
stc
xor
push
ret
cmp
and
and
shll
dec
mov
repnz
ror
lret
pop
and
sarl
add
iret
jne
test
clc
and
les
in
add
mov
xlat
adc
shlb
in
and
and
hlt
mov
sbbl
out
pop
in
add
daa
sub
arpl
sub
lcall
js
push
pop
popf
iret
jle
jecxz
cmp
int3
dec
jnp
mov
int3
or
in
mov
dec
pushl
xorb
lds
in
push
dec
lcall
bound
xchg
in
mov
test
pop
aad
sahf
str
push
pop
add
cmp
dec
aam
mov
pushf
lods
sub
mov
cld
roll
loopne
fdivrl
sub
aad
loopne
cli
ja
negb
jo
pop
xchg
mov
lds
dec
ret
lock
adc
pop
xor
das
or
dec
xor
loop
fs
push
push
adc
cmpsb
jecxz
repz
ds
mov
das
lock
cmp
in
adc
jl
pushf
aaa
xorl
hlt
or
dec
inc
jl
stos
xchg
imul
xchg
mov
int
mov
js
pusha
xlat
add
outsb
je
or
add
scas
push
dec
ror
jmp
inc
xchg
loope
cmp
mov
pop
jg
mov
fstpt
imull
adc
out
jns
pop
test
sub
inc
notb
xchg
xor
lea
int3
cmp
cmc
or
test
mov
data16
and
adc
adc
ljmp
repz
sbb
mov
mov
lea
cli
inc
mov
fsub
sbb
sub
sbb
add
fmul
daa
xchg
cmpsl
jno
push
negl
lods
lods
out
push
fstl
adc
dec
das
push
cmp
nop
enter
or
gs
pop
xchg
cmp
lods
sub
xor
gs
push
push
popl
shll
xchg
and
test
jae
call
jo
mov
int
xchg
gs
movb
add
mov
xor
clc
mov
pop
cmp
xlat
and
scas
xlat
fsubl
push
add
std
cmc
iret
outsl
inc
sbb
shlb
push
lret
clc
xor
test
repnz
jno
popa
and
into
subb
sub
mov
fisubrs
cmc
xchg
pop
inc
idivb
adc
pushf
imul
inc
test
gs
fisubl
test
push
push
lock
adc
dec
lds
inc
mov
sahf
ds
pop
mov
cmp
sub
scas
push
data16
addb
subb
pop
dec
frstor
insl
les
dec
adc
js
lcall
ljmp
in
bnd
int
and
xorl
rcr
ljmp
cmc
lods
sub
inc
pop
sahf
out
push
movsl
mov
jle
adc
and
lahf
insb
outsb
les
add
fists
pop
int
jae
fwait
mov
pushf
push
cmpb
adc
pushf
jno
or
pusha
std
dec
sub
pop
hlt
push
fwait
xchg
or
inc
test
sub
push
cwtl
adcb
in
cmpsb
rcrl
scas
mov
adc
push
gs
mov
aad
std
and
add
adc
jecxz
cmp
cld
std
mov
pop
into
jmp
sub
stos
jnp
pop
cmpsl
cmp
in
pop
fisttpl
sbb
jecxz
adc
or
sbb
in
mov
clc
shll
leave
incl
sub
cmp
pop
pushl
idivl
dec
fwait
jecxz
mov
add
nop
sub
outsb
shll
mov
fsubl
push
or
add
cmp
push
push
cs
sbb
mov
insl
inc
inc
inc
xor
push
mov
inc
lret
push
mov
fwait
mov
sbb
dec
xorb
fdivs
pushf
cmp
mov
es
cltd
push
rclb
push
cld
cld
fs
inc
shl
xchg
rcrl
into
addr16
xchg
sbb
push
mov
sub
inc
lcall
push
push
fisubl
jp
cmc
inc
and
adc
js
iret
mov
xchg
movsb
mov
fs
and
out
xor
cld
push
ror
adc
jp
dec
mov
decb
inc
idivb
int
mov
jo
pop
lea
pop
bound
mov
inc
xor
add
int3
cmpsl
in
push
push
das
mov
jae
repz
ljmp
js
sub
lea
mov
hlt
cmp
shl
clc
inc
fwait
adc
lock
gs
ret
adc
insb
test
and
call
outsb
movsl
addr16
scas
enter
jl
ret
xchg
into
xor
pop
shl
ja
test
add
insb
lods
mov
sbb
push
mull
sti
insb
mov
adcl
sbb
sbb
lret
in
mov
jno
mov
sti
xchg
mov
test
add
arpl
push
hlt
jne
xor
push
imul
es
or
pop
push
leave
adc
stc
rorb
xchg
pop
in
shrb
pushf
pop
adc
adc
roll
int3
adc
arpl
adcb
pop
push
mov
scas
or
pop
loop
pop
adc
dec
mov
push
sbb
ret
idivl
movsl
decl
icebp
dec
xchg
jg
jo
or
out
push
mov
and
pop
jnp
jo
pop
subb
sub
decl
mov
dec
bound
mov
xor
dec
dec
cli
aam
test
xor
sub
pop
rolb
jl
add
sub
pop
adcl
sbb
adc
fadd
in
or
dec
xchg
push
rcrb
loopne
stc
pop
adc
pop
scas
jl
adc
shll
xchg
push
lcall
cmp
int3
xchg
push
sbb
lea
lcall
jno
movsb
or
imul
cmpsb
or
inc
jmp
pusha
mov
sar
push
enter
add
jl
and
sub
mov
lret
pop
push
jb
outsl
adc
cmp
push
sbb
je
xor
pop
imul
and
inc
sbb
xor
push
ret
mov
movsl
xor
in
sub
mov
or
or
mov
pop
repnz
add
push
or
mov
icebp
movl
lahf
or
lds
dec
int3
in
ud2
ret
js
pop
adc
sbb
adc
stos
sbb
dec
jae
dec
std
mov
out
ja
xor
aad
ret
add
pop
lock
scas
rcr
mov
imul
dec
sbb
inc
push
clc
sub
dec
popf
lahf
mov
ds
jns
into
mov
push
ja
cmp
pop
addr16
xor
imulb
inc
mov
add
inc
test
mov
and
inc
inc
or
inc
pop
ret
stos
cs
mov
mov
insb
cmp
cmp
or
mov
lds
fimull
or
dec
loopne
data16
mov
das
jle
gs
dec
sbb
add
adc
fs
jbe
inc
mov
pop
gs
ss
arpl
add
cmp
jb
and
adc
cmp
iret
stos
daa
outsl
push
call
sbb
mov
mov
mov
clc
mov
or
lock
bound
adc
cmp
and
push
mov
add
add
sub
jno
in
cmpsl
cli
cmp
mov
and
sti
pop
inc
enter
sub
adc
jbe
test
lcall
orb
sbb
icebp
icebp
xchg
jecxz
cmp
jmp
mov
pop
mov
mov
in
cmpsb
adc
mov
and
cli
add
push
in
loopne
testb
lods
adc
cmc
mov
arpl
sbb
popf
pusha
cld
ljmp
cltd
test
pop
mov
lret
je
add
mov
jb
cmp
in
rol
mov
insb
dec
xor
es
jae
dec
and
stos
call
sahf
insb
pop
dec
bound
mov
test
push
fmull
nop
inc
cmp
test
mov
inc
lret
out
out
sbb
mov
dec
into
loopne
mov
lods
sbb
add
dec
cmp
aaa
pop
cmp
loopne
in
jmp
outsb
add
and
icebp
dec
mov
in
dec
xchg
mov
xchg
fs
jg
and
push
mov
and
sarb
push
aam
sbbb
push
stos
popa
and
mov
cmp
or
xchg
pop
test
cmpsb
les
jbe
out
call
js
fbstp
imul
push
das
fistl
push
inc
inc
mov
ret
fldl
arpl
mov
lea
cmpsb
push
loope
xchg
sbb
addr16
inc
dec
icebp
ret
mov
sbb
ret
cld
and
dec
xchg
pop
adc
mov
mov
xchg
jns
ret
lahf
test
adc
out
inc
mov
sbb
jecxz
mov
mov
loopne
mov
int3
or
inc
inc
in
adcb
xlat
mov
insl
sub
jl
lock
in
rcrl
and
add
add
jb
inc
data16
std
loopne
aas
dec
sub
push
cli
jne
inc
les
es
or
lock
scas
stc
lahf
aaa
sub
out
inc
cli
and
lret
dec
jge
test
inc
xchg
sub
mov
adc
sbb
ja
mov
jo
and
pop
int
arpl
imul
inc
lods
int
fsubr
hlt
ret
inc
pop
jle
adc
and
mov
sets
sbb
cltd
cmp
std
shrb
stos
adc
xor
insb
emms
in
in
popa
and
mov
mov
ja
xchg
imul
jae
jns
mov
cmc
icebp
stos
shrb
shrb
jl
insb
mov
jne
xchg
sbb
mov
pop
pop
sbb
or
or
ds
mov
add
mov
dec
outsb
outsb
inc
movsl
or
popf
pop
cmp
out
xor
dec
jecxz
dec
mov
cmp
pop
insb
lods
aam
loope
mov
mov
popa
inc
dec
fnstsw
scas
bound
jb
adc
imul
fisttpll
adc
in
scas
cmp
inc
add
push
pop
jne
mov
and
sub
leave
aaa
mov
call
pop
hlt
fs
loope
ljmp
loope
xchg
mov
mov
iret
push
mov
jae
xchg
test
scas
cmpsb
inc
js
push
xor
push
push
dec
scas
jmp
outsl
out
subl
mov
or
adc
xor
cmp
mov
or
or
dec
ret
jge
fimuls
lea
lahf
pop
xor
jmp
and
fnsave
xor
mov
mov
sbb
pushf
sti
inc
push
xchg
inc
and
rorl
shll
cmpsb
mov
mov
dec
pop
mov
fld
cmp
mov
movsl
test
inc
adcb
mov
addr16
repnz
xor
fimuls
sub
ja
stc
adc
inc
aad
jl
lods
xor
and
add
pop
mov
sub
xor
movsl
push
cmpsb
mov
loopne
loop
cmpsb
subl
mov
lods
lret
test
add
inc
mov
jnp
jnp
jnp
sbb
sbb
jb
fldcw
fildl
testl
insb
cmp
lret
push
xor
mov
sub
push
mov
jbe
lock
or
pslld
test
pop
adc
leave
sbb
jno
jge
xor
cli
adc
sbb
hlt
sbb
pop
ljmp
jnp
out
nop
aaa
or
movsl
rcll
dec
and
xchg
cmpsb
inc
jae
and
cmc
testl
xchg
addr16
ljmp
sbb
movl
cmc
insl
aad
xor
test
aam
aaa
and
or
mov
sbb
inc
cmp
call
lods
clc
adc
aam
sbb
fcomps
cmp
stos
xlat
mov
jmp
icebp
icebp
ficoms
add
popf
cld
stos
cwtl
cmpl
fwait
in
mov
pop
mov
add
xchg
sbb
sub
std
shll
jecxz
mov
pop
leave
lea
cmp
bound
lcall
and
sbb
and
mov
push
dec
bound
pop
push
rclb
dec
ret
push
in
jecxz
add
xor
into
popf
push
push
aas
pop
repz
mov
mov
mov
lcall
pushf
jle
repz
imul
xchg
xchg
sbb
fimuls
lcall
jo
jbe
int
repnz
and
cwtl
sbbl
ja
lahf
sarl
lods
xchg
repz
adc
cmp
js
jno
fbld
sbb
sbb
mov
inc
movb
test
mov
sub
shll
clc
sub
sub
in
cmp
insl
mov
lahf
mov
hlt
add
fwait
mov
push
or
xchg
dec
rolb
inc
pop
icebp
cs
inc
jl
mov
pop
dec
or
pusha
data16
or
jmp
sbb
ja
jno
addr16
in
arpl
faddp
or
xor
inc
outsb
fcoms
fistps
ror
stos
cwtl
cmp
call
fcoml
jp
jns
clc
loope
out
mov
outsb
jns
ret
dec
adc
test
xchg
loopne
mov
sub
jo
cli
add
push
fldt
inc
ret
pop
xchg
push
ss
mull
sbb
jae
aaa
hlt
stos
jne
xlat
jmp
shll
xchg
out
inc
loopne
or
inc
std
jnp
push
pop
mov
cmp
xor
mov
fwait
mov
mov
dec
xchg
mov
scas
fwait
pop
mov
fdivl
fistpl
inc
divl
push
sub
push
sub
xlat
cmpsl
mov
jmp
cmp
and
fs
in
movsb
or
xor
jmp
push
nop
mov
jle
jb
ret
lods
cmc
fcomps
test
and
sub
addr16
fmuls
add
fists
add
out
in
push
jae
push
add
gs
lds
shl
out
fsubrl
insl
mov
fmulp
nop
cli
es
imul
int
jmp
cmp
xchg
mov
out
clc
ss
jae
or
cmpsb
lret
pop
sub
mov
mov
adc
fldt
mov
mov
loope
mov
xchg
mov
xor
lret
fs
arpl
lods
xchg
andb
jbe
cmp
push
bound
pop
arpl
dec
pop
ljmp
pop
notb
lods
div
pop
xchg
int3
xor
mov
sub
stos
lock
iret
gs
adc
cmp
mov
popf
sahf
or
inc
mov
cmc
out
pusha
mov
mov
aad
mov
jp
frstor
sub
jecxz
mov
je
xchg
xchg
xchg
or
push
cli
lea
mov
in
pop
stos
xchg
repnz
gs
scas
inc
std
xchg
jne
adc
xchg
movsb
add
stos
mov
sbb
cmp
jo
jmp
jnp
popa
stos
sbb
lea
ficomps
jae
gs
pusha
push
mov
jmp
stos
cli
fwait
adc
popa
out
int3
sarl
mov
fwait
into
aam
in
jl
xchg
xchg
fs
mov
out
ja
push
inc
jno
in
xor
idiv
inc
daa
xor
movsl
sbbb
out
outsl
movsl
sti
mov
xchg
sbb
add
xchg
mov
out
cs
xlat
lea
sub
jmp
dec
cmp
in
cltd
js
outsl
adc
inc
repz
or
subb
and
shll
jo
cmp
cmp
mov
or
jo
mov
xor
int3
push
or
pop
popf
add
jp
stos
push
cmpsb
sbb
rorb
cld
inc
dec
xor
stc
imul
adc
xchg
jge
jae
push
outsb
inc
adc
pop
push
aas
pop
xor
loop
push
into
stos
mov
mov
xor
mov
xor
test
add
in
call
jp
pusha
scas
add
sti
cli
mov
adc
cmp
bound
mov
sbb
in
int3
lock
mov
or
push
rorb
imul
xor
test
arpl
cmp
mov
add
hlt
stos
add
xchg
and
inc
dec
jo
inc
lcall
adc
mov
xor
cmp
cltd
push
pushf
dec
rorl
jl
je
pop
adc
mov
xor
sbb
fldcw
aas
xchg
push
mov
adc
ds
xor
adc
clc
lods
in
fstp
cltd
aaa
sub
hlt
aam
fbstp
xchg
rorb
fists
cmp
cmp
roll
fwait
cld
enter
call
in
dec
repz
adc
test
out
lods
ret
push
fwait
cs
push
leave
ljmp
imul
jge
jg
data16
push
scas
xor
inc
sub
cli
roll
push
movsb
popa
test
icebp
loope
mov
push
add
shll
xchg
mov
test
cmp
push
jl
lahf
sbb
pop
dec
clc
gs
push
cmp
or
in
imul
out
pop
les
imul
addr16
cmpsb
sub
ljmp
sub
cmp
in
dec
jg
aad
xlat
push
jp
addr16
popa
test
es
clc
mov
das
insb
loope
xchg
pop
sub
or
add
jmp
adc
and
sar
shl
int
notl
jg
cmp
leave
rcrl
jmp
inc
mov
daa
cmp
jb
jns
les
cmp
add
adc
adc
xchg
cmc
leave
pop
out
add
cli
sub
adc
mov
sbb
sub
shll
sub
iret
xor
mov
xor
testl
ret
cmp
mov
fcomps
push
fsubl
push
xor
adcl
and
lods
sub
insl
rcl
cmp
sbbb
fs
xchg
push
rep
xchg
inc
shlb
pop
inc
push
popl
push
in
and
jae
lock
in
and
pop
repnz
addr16
xor
repnz
xor
xchg
imul
mov
xor
in
cmpl
xor
lods
xchg
inc
mov
push
mov
stos
mov
decb
mov
jae
test
std
sub
mov
not
dec
mov
aas
gs
fnstsw
push
fcom
push
stc
out
imul
and
stc
out
cli
test
int
out
push
mov
jmp
xchg
repz
ljmp
dec
repnz
sub
and
mov
xor
stos
jmp
sarl
jle
aas
cltd
xchg
and
movl
stc
cld
mov
mov
dec
jns
fsubl
insl
ror
push
lds
add
ret
mov
iret
out
add
pop
roll
test
je
out
call
mov
not
cltd
adc
and
mov
lcall
sub
test
jg
jnp,pn
xor
in
int3
jecxz
loopne
adc
xor
sti
ja
insb
push
test
test
jge
les
hlt
pop
jae
sbb
sbbl
pop
call
jns
or
push
jg
xlat
mov
lret
mov
stc
loope
xor
stc
or
ljmp
mov
fstps
jp
int
jb
je
or
and
mov
jns
dec
cs
cmpsl
inc
stc
adc
push
mov
repz
movhps
mov
jle
inc
out
xchg
ljmp
sti
div
ds
mov
aaa
push
loopne
adc
or
loopne
mov
pop
insl
adc
mov
or
adc
leave
sbb
ljmp
sub
mov
inc
test
xor
pop
test
dec
add
clc
out
xor
xor
dec
jp
jecxz
sbb
xchg
inc
jmp
stos
adcl
cwtl
jl
lds
sbb
add
in
jecxz
hlt
pop
cmpsl
aad
add
prefetcht0
lret
pop
sub
imul
je
sbb
shl
xchg
hlt
jmp
enter
mov
incl
xchg
mov
mov
insl
popf
cltd
arpl
cld
mov
jns
scas
jecxz
loop
pop
xchg
in
jns
or
jmp
out
ljmp
xor
inc
sbb
js
shlb
sub
dec
mov
outsb
out
jl
dec
mov
sub
and
mov
mov
mov
leave
das
cmp
mov
cmp
jle
fists
adc
sub
xchg
cmp
bound
subl
cld
mov
or
cmp
push
aas
aam
leave
out
inc
and
xlat
enter
rolb
scas
sbb
es
push
pop
mov
add
stc
and
pop
mov
out
dec
shrb
lods
popf
jg
push
sub
mov
sub
nop
stos
insb
xchg
data16
call
data16
cmpsl
or
add
in
cld
dec
push
daa
and
push
add
mov
sbb
jo
dec
stc
and
in
repnz
or
mov
call
divb
jp
repz
xchg
adc
pop
sahf
out
jle
les
fimull
mov
loop
pop
les
addr16
rcrl
repnz
pop
push
iret
add
add
inc
cmp
sub
test
mov
adc
push
ficoms
in
mov
gs
mov
push
addl
inc
push
sarb
xchg
jbe
xlat
mov
and
loopne
mov
adc
mov
cltd
xor
add
pop
ja
orl
sub
mov
push
outsl
jmp
push
and
xchg
or
nop
xor
lahf
mov
push
cmp
stos
add
mov
add
xchg
push
inc
mov
xor
adc
ds
sub
test
mov
aam
bound
push
or
pop
push
jl
jae
inc
mov
lret
push
jnp
in
into
int
testb
dec
dec
js
fsubs
addb
mull
mov
jg
inc
cmp
test
pop
sahf
sub
popf
shlb
pop
push
or
sub
inc
cli
sub
push
dec
stos
dec
add
add
movsl
and
push
inc
dec
into
cmc
sbb
or
repnz
pop
daa
into
cltd
or
scas
push
mov
push
insb
fisubs
pop
push
lods
aas
hlt
dec
hlt
cmp
cs
movsb
mov
pop
add
jnp
push
push
stc
cwtl
js
mov
mov
push
dec
push
outsb
out
add
and
test
aam
aas
fbstp
push
xor
push
xor
mov
fcoms
push
adc
and
out
vpackssdw
pop
out
call
jns
adc
stc
mov
xchg
js
push
dec
adc
sub
push
sub
int
stos
and
mov
jo
dec
mov
shll
out
mov
lret
shlb
mov
pop
nop
pop
pop
repnz
clc
xor
cmpxchg
int3
faddl
fst
xorl
adc
imul
and
jmp
pop
in
adc
sub
mov
shrb
and
pop
addb
xchg
and
lock
test
inc
push
movsb
ss
adc
cmp
inc
push
adc
in
cmp
cmc
popf
sub
shll
scas
or
outsb
push
ds
or
sbb
ss
pop
cwtl
xor
jmp
xchg
repz
addr16
cmp
sarl
das
mov
lahf
adc
or
addr16
adc
mov
push
or
cmp
lods
mov
pop
test
cmp
outsb
inc
mov
scas
pop
push
call
inc
ret
loopne
sbb
stos
sub
and
sbb
cs
add
or
jne
jno
imul
inc
lods
loope
mov
mov
shlb
inc
jnp
insl
pop
jl
and
jl
pop
in
pushf
es
sbb
shll
xchg
push
aam
cs
sbb
das
cmp
lods
lret
add
pop
mov
das
scas
arpl
roll
cmp
leave
jg
scas
jmp
xor
pop
mov
and
daa
shl
std
scas
pop
jge
push
pop
and
dec
sub
loop
fdivrp
stc
fdivrl
or
sbb
lea
lds
jmp
xor
sub
dec
cli
push
mov
repnz
lret
ja
out
sti
fsubs
test
lret
loopne
sbb
jge
push
adcb
ja
gs
mov
iret
leave
pop
sarb
mov
cmp
mov
pushf
sbb
ja
pop
mov
stos
bound
mov
out
imulb
ret
mov
gs
inc
imul
xor
adc
insl
test
sub
adc
stos
rdmsr
ja
adc
mov
es
stos
sub
iret
orl
mov
mov
aad
cmp
mov
into
bound
les
mov
mov
pusha
movsl
lahf
xor
cmp
fs
push
fmulp
add
xor
mov
out
xchg
jae
push
inc
dec
aas
test
test
clc
rorb
aam
jo
mov
lock
push
mov
loope
cmp
inc
aaa
sub
cwtl
in
outsl
decb
outsl
adc
push
add
ljmp
jne
out
les
or
adc
push
mov
hlt
inc
cwtl
xchg
jg
or
mov
leave
lods
pop
or
loopne
push
mov
fmull
ljmp
xor
push
mov
xchg
mov
xchg
mov
push
jg
push
cmp
les
inc
aaa
and
fimuls
aam
cmpsb
sarl
mov
inc
push
xchg
fs
dec
inc
jmp
xchg
cltd
pop
bsr
ret
xor
or
push
fisttpl
hlt
in
repz
out
in
inc
in
insb
stos
fxch
mov
or
pop
lahf
add
cmp
mov
in
int3
or
mov
cmp
or
sbb
add
xor
andl
jae
fnstenv
sbb
pushf
sbb
test
add
fldenv
sti
push
jne
push
adc
push
lahf
mov
incl
fldl
xor
rcrb
sbb
cld
loope
lock
cmpsb
cltd
lcall
je
xor
mov
xlat
mov
into
popa
dec
lock
es
mov
sub
fcoml
ret
cmpsb
dec
in
call
xchg
mov
inc
sbbb
out
imul
and
xor
aam
jb
sbb
or
sbb
lock
daa
arpl
sub
movl
mov
roll
cltd
cmp
push
cmp
outsb
das
sbb
sub
adc
push
xlat
mov
inc
jb
dec
xchg
out
pop
stos
fs
mov
jmp
dec
shl
cmp
xor
fcoml
and
and
inc
ljmp
in
xchg
inc
scas
ret
fdivrp
jp
inc
cmp
sbb
cltd
loop
divb
iret
mov
push
cltd
or
or
pop
push
push
push
scas
cmp
arpl
xchg
inc
xchg
cmp
rep
outsl
out
je
mov
fldcw
shlb
sbb
pop
dec
xchg
lds
jbe
or
nop
sar
adc
and
add
mov
faddl
test
mov
jno
mov
jp
pusha
cmp
fistpl
shll
xor
int
loope
aaa
xor
bound
sub
nop
test
mov
sahf
push
out
push
inc
push
bound
fdivrs
add
sub
mov
sbb
inc
mov
dec
flds
cmc
jle
xchg
dec
loope
jl
out
dec
fsubs
pop
cli
neg
jbe
push
and
cmp
jmp
repz
leave
cmp
dec
mov
xchg
stos
pop
and
lea
fsubs
stc
aam
or
and
sbb
pop
sub
xlat
sbb
nop
cmp
mov
lods
stos
decb
mov
ja
imulb
mov
jp
jo
icebp
test
cltd
sbb
cmp
popf
push
adc
jne
stos
pop
push
shr
fdivrp
daa
cmp
xchg
cwtl
xor
mov
jg
lret
fldz
dec
dec
popa
sbb
push
mov
and
hlt
pop
subl
add
and
dec
xchg
push
rcr
mov
xor
bound
push
sysret
or
jmp
xor
adc
and
mov
xchg
outsb
mov
sbb
mov
rcr
das
int3
push
pop
in
mov
nop
mov
adc
sbb
cld
jle
sbb
dec
lock
imul
pop
sub
push
dec
scas
outsl
aaa
push
mov
int3
cmp
sbb
pop
lea
cmpb
les
jecxz
ljmp
inc
fistps
xor
cli
or
xor
test
pop
ss
imul
inc
test
or
sub
shll
pop
inc
dec
cmc
in
icebp
shll
aam
icebp
jb
das
or
in
lcall
out
lcall
pop
mov
dec
ret
jg
pop
sbb
scas
pop
lea
and
pop
push
gs
arpl
cmp
mov
mov
adc
in
xor
ja
cmp
mov
call
mov
xchg
add
sbb
mov
push
pop
lods
in
lahf
les
lds
pop
push
xchg
cmp
mov
outsl
sub
aaa
outsb
shrl
cmp
sub
notb
cltd
stos
mov
cmp
fdivl
popf
push
jae
sub
jle
mov
or
test
rol
pop
and
sub
repz
jle
xchg
cmp
add
stos
mov
adc
lcall
dec
push
imul
out
jb
cs
dec
sbb
mov
addr16
in
enter
rcl
mov
mov
loopne
xor
out
xchg
jl
mov
test
inc
xchg
mov
mov
frndint
andb
xchg
imul
jmp
cmp
push
shl
fldenv
xchg
jg
shlb
inc
lock
mov
loopne
dec
and
xor
scas
lds
push
ljmp
inc
mov
sub
mov
mov
cmp
add
fsubp
enter
add
repnz
push
aad
jmp
leave
sub
clc
pop
mov
mov
loopne
cmp
xchg
stos
add
pusha
or
scas
lods
lret
fsubrs
bound
jle
les
shrb
cs
out
xchg
cmpsl
xor
pop
xor
dec
adc
cmp
sub
stc
jns
jne
aaa
push
repz
mov
push
mov
pop
shl
inc
stos
push
xor
dec
fbld
cli
add
mov
push
dec
adc
lds
ja
pop
lock
in
repz
das
sbb
sbb
sbb
mov
negl
pop
out
bound
sub
push
cmp
orl
ret
or
test
out
sbb
dec
aam
add
sub
jl
insb
mov
mov
pop
pop
sbb
movsl
and
mov
loop
jnp
pop
dec
inc
pop
sbb
fistl
mov
nop
push
mov
addr16
inc
fwait
or
sbb
shrl
add
shll
inc
inc
pop
ds
xor
jl
ja
fcmovnu
sti
adc
lods
iret
cmp
xor
pushf
jno
cmp
jno
jns
lods
sbb
and
xchg
jle
stos
adc
inc
dec
mov
testl
pop
imul
mov
cmp
das
dec
inc
or
mov
out
jmp
test
fcomip
ja
xchg
daa
xor
xchg
arpl
cmp
cmp
mov
mov
mov
sbb
inc
jnp
andb
fisttps
sbb
repz
cmp
inc
cmp
fsubs
push
mov
sbb
dec
shr
pop
in
repnz
pop
push
rep
negb
mov
aaa
outsl
cmp
xor
stos
mov
dec
xlat
pop
sbb
stc
out
push
fmull
xchg
insb
add
cmp
lahf
fsts
mov
les
xchg
mov
lcall
jg
and
test
sub
out
and
mov
in
out
cli
sbb
into
test
xchg
imul
ljmp
pop
pop
xchg
roll
out
mov
and
push
cmp
cmp
fisubl
mov
pop
mov
and
movsb
pop
pop
push
outsb
ret
sub
shr
rcrl
mov
pop
inc
pop
mov
scas
pop
dec
inc
bound
jbe
pop
pop
lahf
adc
cmpsb
testl
jno
push
mov
xor
bound
aas
sub
loope
sbb
jne
push
ficompl
mov
cmpsl
mov
inc
pop
push
negl
inc
bound
adcl
int3
stc
jnp
sub
dec
aam
sub
or
sub
addl
imul
mov
outsb
addl
jge
incb
lcall
push
mov
dec
sub
and
mov
mov
fisubrl
mov
mov
arpl
orb
lds
and
daa
push
inc
and
ret
mov
jnp
and
sub
mov
and
out
hlt
mov
or
pop
and
sbb
cmp
push
xchg
sbb
sbb
xchg
mov
push
mov
dec
idivl
cmpsl
mov
adc
dec
gs
jmp
in
rorb
sahf
push
cmp
cmpsb
jno
mov
cmp
fdivs
and
mov
mov
movsb
jp
mov
or
je
add
pop
mov
mov
and
adc
jge
xor
push
mov
xchg
insb
jnp
mov
and
mov
popf
pop
or
dec
sbb
push
sbb
gs
dec
lds
int3
dec
or
xchg
and
imul
sahf
lret
lods
out
mov
insl
jg
dec
ss
sub
out
call
xorb
add
aaa
cmp
xor
jo
ret
jle
inc
mov
aad
jae
cli
or
or
mov
repnz
std
sbb
add
out
nop
scas
addr16
inc
loope
movsb
pop
daa
xchg
aaa
cmp
das
xchg
mull
and
adc
nop
mov
fnstenv
push
push
mov
xchg
dec
xchg
inc
xlat
orb
pop
int
mov
std
jecxz
jnp
cmpsb
addr16
outsl
fmuls
xor
jl
mov
mov
pop
jg
mov
test
fisubrs
push
pop
lcall
inc
sub
out
imul
jnp
push
mov
scas
bound
pop
sar
popa
or
xchg
jecxz
jo
inc
fiaddl
push
pop
stc
movsl
and
inc
dec
or
scas
cltd
test
mov
popa
push
pop
mov
dec
mov
orb
les
adcb
shrl
pop
ret
js
in
fidivs
push
leave
insb
sub
das
xlat
cmp
xchg
xchg
mov
inc
outsb
mov
inc
iret
in
sbb
int3
fwait
and
push
jge
mull
jle
jp
inc
movsl
xchg
sub
sahf
mov
jbe
rclb
repnz
mov
mov
pop
js
lret
inc
imul
frstor
push
fdivp
cmp
mov
mov
cmpsb
popa
pop
jns
decb
mov
aad
pusha
xchg
lods
repnz
pushf
mov
scas
jp
stc
mov
dec
mov
pop
scas
mov
jbe
xchg
and
outsb
jo,pn
test
data16
and
repz
std
pop
mov
lock
lock
mov
cltd
xchg
push
push
das
cmpsl
cld
push
fists
loope
xor
scas
inc
dec
inc
push
dec
inc
cmp
cltd
sub
mov
sti
dec
jbe
push
arpl
dec
or
dec
sahf
push
cmpsl
es
inc
mov
fildll
fdivs
aaa
adc
sbb
fs
pusha
mov
arpl
insb
inc
outsl
sbb
insl
decl
jne
scas
mov
pop
sahf
inc
sbb
fsubr
dec
sbb
inc
js
push
shlb
pop
adc
push
sub
inc
or
pop
cmp
dec
xchg
out
cmp
fisttpl
dec
out
cmpsb
jg
das
pop
ss
out
fisubs
movsb
pop
bound
pop
or
jnp
roll
les
pop
add
repnz
push
add
stc
notb
mov
popf
int3
sub
cli
cmp
mov
call
mov
fnsave
hlt
cmp
icebp
xchg
xor
hlt
pop
iret
scas
dec
mov
cmpsb
ja
dec
popa
push
les
or
dec
repz
jecxz
cmpsb
and
xchg
cmp
andb
arpl
fsubrp
sbb
test
pusha
mov
mov
push
xor
pop
mov
fs
push
js
rolb
pop
xchg
add
xchg
sub
sbb
mov
out
push
xor
std
xlat
sbb
or
mov
pop
mov
fucom
insl
shrb
fs
ljmp
pop
or
xor
hlt
dec
out
push
in
aaa
cs
dec
orl
xchg
in
mov
xchg
stc
mov
xchg
out
dec
cli
sub
testb
in
fs
sbb
adc
shrl
mov
dec
mov
lret
ljmp
loope
bound
or
stc
roll
mov
mov
dec
cmc
inc
out
push
xor
xchg
sti
je
ljmp
pop
int3
clc
push
es
pop
sub
fsubs
aam
ds
fnstenv
mov
sbb
mov
stos
enter
iret
pop
je
xchg
sbb
jp
out
push
cmp
int
dec
mov
insl
pop
imul
push
push
push
fdivs
out
in
aam
xchg
cltd
iret
out
mov
ret
lret
rorb
aam
imul
movsb
xlat
hlt
push
or
repnz
adc
js
not
cmp
fsts
pushf
dec
jnp
mov
push
outsl
mov
xchg
cltd
inc
lea
xor
jge
insl
aaa
push
sbb
dec
sub
repnz
das
dec
and
cmpsb
dec
add
aam
push
les
nop
negb
push
subl
mov
pop
in
addl
pop
ret
and
push
sub
push
fsubl
lds
in
and
mov
xchg
addr16
popl
lret
cmp
cmp
jmp
pop
inc
repnz
push
xchg
fs
outsl
xor
and
lea
sub
fsubp
inc
pop
xor
in
jmp
ja
xchg
sti
jbe
mov
lret
sub
or
out
xchg
enter
lods
dec
push
inc
leave
arpl
je
cmpsl
mov
fstpt
adc
xor
lds
int3
pop
fwait
loope
mov
out
inc
and
rcrb
xorl
mov
loop
test
jg
sti
pushf
or
aad
add
push
sbb
pushf
jecxz
push
js
loop
aaa
popa
xchg
lret
add
jle
and
movsl
add
loope
sub
inc
sbb
jle
push
cli
xor
mov
in
sub
push
rcl
add
scas
sub
dec
shrl
push
and
adc
outsb
or
cwtl
aad
jg
jns
imul
mov
mov
lahf
int3
inc
sbb
in
push
iret
mov
iret
ja
fisubrl
stc
xchg
test
inc
xor
popa
test
leave
dec
jns
das
ret
ds
in
mov
nop
testb
xchg
sub
inc
push
stos
fsts
mov
loop
ss
or
cs
push
dec
call
iret
mov
out
mov
push
dec
in
movsl
add
sahf
mov
fcmovnbe
xor
popf
lods
xor
jb
mov
cltd
mov
mov
mov
outsb
mov
pop
xchg
mov
mov
addr16
flds
jb,pn
mov
xchg
clc
mov
cs
loopne
hlt
enter
shlb
rcll
xchg
sbb
pop
fidivs
inc
in
pusha
pop
or
ds
lret
and
xchg
jne
jp
ficompl
inc
out
adc
xor
sub
scas
mov
imul
mov
fdiv
aas
push
fstp
mov
cmc
movsl
js
jge
mov
out
jp
or
inc
xor
in
xor
stos
xor
mov
mov
fstpt
mov
xchg
jae
push
ljmp
sahf
or
mov
jb
lods
cmp
inc
push
push
add
out
leave
add
pop
mov
cmp
add
scas
or
and
rcrl
das
fbld
jmp
test
push
push
xor
jecxz
sbb
push
cmp
rcl
pusha
jo
popf
and
cmp
enter
shrb
xchg
ret
mov
sub
fisttpl
popa
xchg
and
sub
dec
adc
add
cmp
into
fldl
aas
and
jno
mov
and
aad
jle
jo
mov
int3
ret
dec
addl
rcrl
mov
xor
xor
shl
ret
int
aad
cmp
std
shrl
cmpsl
jo
mov
out
or
dec
out
pop
mov
jmp
dec
push
in
pushf
and
or
cmp
inc
jecxz
xchg
mov
fstps
or
mov
pop
ja
dec
jbe
jb
adc
jge
pop
mov
push
test
push
pop
add
divl
imul
fidivrs
call
mov
loopne
jle
out
in
sub
add
sahf
leave
pop
pushf
and
ret
mov
or
push
fidivrl
adc
into
in
jp
pushf
rorb
pop
jp
xchg
dec
dec
pop
dec
jbe
test
and
sahf
fwait
add
rolb
or
gs
lods
aas
pop
js
xchg
sbb
lahf
jnp
enter
cmp
arpl
mov
sub
dec
into
jbe
sub
subl
pop
cmpsb
inc
xchg
add
add
mov
stos
and
mov
add
fs
adc
outsb
in
lock
jp
push
xor
add
mov
sti
adc
or
stc
adc
pop
or
mov
add
cwtl
das
roll
fwait
adc
sub
out
hlt
xchg
enter
pop
mov
xor
xor
dec
adc
pop
in
mov
cmp
divb
mov
mov
lret
xchg
push
mov
nop
ret
jl
inc
aad
sbb
and
ds
loop
sbb
loope
test
les
nop
test
mov
pushf
lret
dec
sub
push
mov
push
mov
subl
into
enter
xchg
push
repz
in
xor
stos
xor
psubd
jg
out
push
pop
xchg
divb
inc
adc
jo
jo
hlt
mov
jo
jp
enter
or
mov
imul
filds
sub
pop
mov
dec
mov
sti
test
cmp
mov
loopne
adc
std
movl
push
in
push
cmc
out
sbb
loope
xchg
mov
mov
pop
std
xor
or
adc
bound
jl
insb
movsb
pushf
and
dec
ja
sbb
push
clc
fwait
jno
into
stc
lods
enter
inc
inc
enter
xchg
xor
loop
add
int
aas
out
mov
push
std
or
mov
dec
movsl
fs
jno
iret
std
xchg
out
xchg
pop
icebp
ds
or
int3
pusha
sti
mov
hlt
dec
push
in
fcompl
mov
jle
sbb
rorb
xchg
push
xchg
mov
mov
sbb
push
fs
aaa
inc
or
cwtl
cltd
ffree
mov
mov
in
or
repz
or
mov
xor
cwtl
dec
xorl
lahf
xor
cwtl
mov
imul
and
lret
fdivs
mov
fiadds
andl
mov
xchg
loope
or
xor
sbb
and
mov
clc
mov
pop
add
mov
lods
out
shrb
test
adc
int
pop
pop
out
rolb
popa
xor
icebp
pop
inc
mov
mov
cmp
scas
or
sub
sub
push
hlt
inc
dec
and
or
dec
adcl
mov
call
cs
jb
push
xor
add
adc
adcl
lahf
shlb
xor
lea
dec
std
mov
fnstenv
lea
sub
repz
or
scas
xor
mov
push
leave
mov
inc
aad
sahf
sub
jne
int3
loop
pop
insb
testl
into
jne
add
dec
sbb
dec
adc
sub
dec
xchg
mov
dec
mov
aad
xor
insl
mov
leave
mov
xor
push
push
inc
sub
sbb
jae
push
je
push
sub
stc
ret
xchg
pop
cltd
pop
fcompp
dec
inc
mov
pop
mov
icebp
add
or
dec
insb
push
sbb
mov
or
cmp
lcall
add
sti
lds
mov
dec
inc
aaa
out
data16
lea
movsb
xchg
xchg
mov
sub
inc
ret
fiadds
idivb
lods
ret
jmp
rorb
aas
sub
sbb
je
fxtract
ficomps
arpl
sti
scas
icebp
loop
fisubl
adc
jo
scas
stos
into
in
sbb
mov
jmp
and
mov
fdivl
lods
xchg
pop
push
roll
fnsave
out
pop
xor
jl
out
lret
call
mov
nop
dec
sbb
fld
and
pop
into
arpl
sbb
nop
lret
cmp
inc
and
es
das
inc
or
mov
mov
jb
dec
push
dec
es
jne
rolb
shrl
cmp
pop
int3
pop
pop
stos
movsl
mov
out
xchg
dec
clc
popf
xor
pop
scas
ss
adc
cmp
dec
push
sub
repz
add
cli
es
jmp
xchg
jno
std
mov
js
fcompl
adc
clc
int3
enter
in
push
sti
imul
and
mov
cmc
es
imul
inc
and
scas
aas
mov
test
pop
push
cmpsl
push
or
call
inc
imul
sbb
shlb
mov
pop
jno
loope
lods
jnp
pusha
push
xchg
cmp
or
push
aad
mov
movsl
fwait
in
push
imulb
jns
xchg
pop
shrb
push
stos
add
call
mov
sub
int
xor
test
mov
dec
sbb
inc
aaa
in
jmp
or
sti
push
sahf
or
cmp
lds
rclb
cmc
push
test
mov
add
aaa
pusha
xor
mov
pop
adcl
les
push
inc
mov
cmpsb
mov
ljmp
imul
lea
inc
mov
daa
call
mov
push
inc
xchg
arpl
ljmp
iret
stc
cs
aad
outsl
sub
adc
and
pop
dec
mov
adc
push
lahf
jp
int3
cmp
cltd
xchg
lret
pop
scas
inc
adc
and
pop
xchg
std
pop
fidivrl
xchg
inc
mov
aaa
or
out
fdivrs
and
movsb
add
test
movsl
inc
ret
inc
xor
xchg
lret
repnz
mov
cmp
push
cmpsb
inc
pop
nop
ds
xlat
dec
adc
mov
pop
mov
pop
incb
push
fcmove
pop
push
es
push
adc
pop
in
sbb
or
insl
ljmp
data16
sbb
sub
testl
pop
xchg
test
push
gs
sub
psllq
call
loope
lock
rcrl
xchg
cs
adc
push
inc
in
xchg
inc
push
jge
test
xchg
lds
mov
jnp
es
add
or
ja
mov
rorl
and
add
pop
arpl
sub
ror
mov
add
lret
adc
rcr
xor
pop
and
pop
pop
insl
push
or
data16
les
xor
mov
xchg
push
xchg
sub
hlt
jle
pop
and
mov
data16
push
mov
mov
pusha
jmp
xchg
xor
fcoms
jno
adc
lcall
jnp
jnp
cmp
inc
fs
out
fdivrl
cmp
or
clc
jne
jmp
mov
lret
lods
sbb
inc
ret
es
inc
jp
aas
out
inc
jecxz
mov
sbb
mov
mov
out
pavgb
in
or
cmp
sbb
mov
xlat
enter
fwait
sti
mov
outsb
inc
es
adc
jmp
leave
xchg
cs
and
and
sub
addb
cmp
xchg
nop
mov
mov
sbbb
add
jae
and
inc
ret
pop
dec
sub
ret
cmc
sbb
loop
cs
push
test
push
test
sub
sti
repnz
adc
sub
in
dec
test
js
fdivr
nop
int
sahf
lcall
mov
add
mov
fs
mov
push
sbb
mov
sub
rorl
or
jns
rorl
repz
jl
sbbl
dec
fstps
das
into
fwait
inc
add
ret
cmpsb
rcl
bound
jecxz
stc
cmpsl
outsl
aaa
sahf
pop
ljmp
sahf
ja
imul
int3
adc
sub
pop
jae
divl
pop
jmp
icebp
and
mov
mov
jo
rcll
lcall
add
add
gs
jbe
adc
and
mov
imul
movsb
test
es
xlat
stos
mov
aas
jecxz
or
shll
xchg
lds
daa
cmpsb
mulb
sar
pop
sbb
imul
pusha
and
fimull
rorl
imul
push
sbb
aas
mov
call
out
mov
jnp
subl
push
ret
mov
repz
pushf
sbb
mov
div
je
insb
dec
sbb
pushf
js
dec
mov
push
jbe
jnp
stos
inc
pop
insb
jmp
add
js
inc
mov
sub
nop
jns
pop
sbb
ljmp
mov
pop
mov
jg
sub
loope
pushw
add
xor
inc
cmovle
test
les
pop
arpl
mov
dec
add
push
sti
sbbl
in
add
sub
or
lret
sbbb
cld
sub
xchg
and
ret
stc
inc
push
inc
loope
xchg
push
push
or
mov
rclb
and
mov
shrb
ss
jno
mov
cmpsl
sub
mov
pop
mov
inc
clc
cmp
stos
in
enter
add
leave
mov
jle
jo
pop
dec
jae
inc
test
cli
sbb
mov
test
inc
jnp
jecxz
in
sbb
stos
jo
shll
testb
and
inc
lods
mov
and
xorb
sub
rclb
iret
mov
andb
push
jnp
add
mov
jg
cvtdq2ps
imul
cmc
mov
and
lods
jo
stc
idivl
movsb
push
and
inc
imul
sahf
xor
jp
enter
ffreep
cs
loope
mov
aam
in
roll
icebp
testl
and
mov
rclb
dec
shll
mov
inc
lahf
js
daa
fdivl
cmp
xchg
sti
xchg
and
or
imul
loope
and
adc
outsl
pop
add
scas
into
lea
push
divb
pop
rorl
in
arpl
adc
jmp
adc
sub
xchg
jmp
insb
ret
sub
pop
adc
sub
int3
xlat
xor
call
jg
fisubrs
mov
mov
push
jl
in
fdivs
sub
push
inc
into
push
pushf
dec
loope
mov
xchg
ja
push
mov
jnp
sbb
idivl
add
aas
imul
jl
mov
or
lds
insl
je
ret
cmp
out
fs
mov
add
mov
sbb
pop
idivb
loopne
sti
ret
and
mov
and
sbb
sbb
mov
dec
pop
leave
ss
iret
pop
xor
mov
push
pop
negl
cmpsb
dec
notb
mov
mov
cmp
sub
jae
ss
pop
xchg
xor
cmp
ror
sahf
sub
rolb
inc
dec
je
pop
sar
daa
inc
sbb
cmpsl
mov
jmp
sbb
jb
mov
adc
inc
into
jo
shll
outsb
enter
inc
xor
in
clc
jnp
mov
cld
jno
in
addr16
outsb
and
add
dec
shll
add
cs
adc
call
inc
sti
rorb
or
pop
add
mov
dec
xchg
fildl
add
ljmp
mov
xchg
jecxz
push
inc
push
mov
mov
jle
stc
lret
xchg
rol
rclb
mov
add
cmp
mov
dec
mov
sbb
ret
lret
loop
movsb
mov
xor
push
mov
adc
and
and
jge
pop
xor
or
mov
pop
addb
imull
xor
lcall
enter
jno
inc
rcll
adc
sti
orl
out
add
push
int3
popf
adc
loop
pop
push
ret
and
pushf
add
push
push
mov
and
cwtl
fcmovbe
call
lods
mov
xor
push
mov
mov
mov
test
int
sarl
push
mov
sub
jnp
stos
in
test
and
pop
xor
sub
jl
mov
shr
sahf
aam
pop
mov
or
fdivr
adc
add
or
cmpl
fcmovb
or
rorl
pop
pop
pop
jmp
shl
pop
or
mov
adc
cmp
push
mov
stos
cmpsb
and
mov
mov
je
jns
xchg
arpl
mov
xchg
or
push
xchg
adc
push
adc
pop
inc
dec
inc
clc
jo
or
dec
shll
mov
les
out
in
loop
inc
flds
jb
jg
push
xor
insl
out
push
loope
dec
bound
sub
data16
shll
xor
shrb
in
mov
cmpsl
rol
lcall
push
mov
stos
mov
sbb
test
popa
test
sti
scas
clc
stos
xchg
jmp
bound
ret
xor
jmp
pop
call
lock
jmp
hlt
das
shll
call
push
push
pop
mov
and
inc
hlt
scas
mov
sub
jno
mov
mov
daa
mov
jo
xlat
andb
cmp
ja
je
aad
sarb
testb
push
cli
test
imul
pop
ljmp
jno
push
sbb
fsubrl
imul
add
add
xchg
jns
sbb
mov
dec
xor
xchg
in
xor
stc
movsb
inc
inc
add
fmuls
les
std
imul
jnp
insb
push
xor
fidivs
divb
jns
inc
jnp
ror
jmp
test
push
hlt
movsb
adc
lods
dec
jne
mov
push
push
push
mov
mov
fs
fadds
mov
lock
dec
cli
fcmovu
lds
inc
ss
test
xchg
aad
scas
push
jmp
stos
fcmovnu
call
es
ds
xor
xchg
mov
jle
mov
cmpsb
movsl
popf
push
outsb
test
pop
popf
aaa
mov
lahf
ret
sub
pop
repnz
aam
cmpsb
popf
inc
mov
sbb
pop
pop
push
pop
pop
ss
mov
mov
pusha
jne
fisubrs
cwtl
stos
push
mov
enter
arpl
jge
push
in
daa
push
adc
loop
sub
test
push
mov
lock
inc
scas
dec
mov
cmp
add
push
cmp
ljmp
stos
jg
fwait
sti
jae
inc
sbb
mov
rclb
pushf
and
into
and
scas
mov
inc
sub
mov
sbb
sti
or
lahf
and
jns
mov
push
ljmp
or
add
mov
mov
fwait
inc
hlt
scas
fdiv
inc
dec
sub
push
loop
outsb
push
mov
push
imul
in
xchg
test
jl
adc
pop
divl
mov
xchg
xchg
push
lcall
fs
loope
ret
push
jbe
pop
sub
sub
lock
push
xchg
enter
add
dec
test
aas
sbb
in
scas
shr
cltd
xchg
les
adc
dec
icebp
push
xor
xor
mov
into
pop
enter
dec
insl
jae
sarl
fadd
shlb
loope
popf
or
push
sar
dec
cld
inc
mov
mov
shrb
fidivl
xor
pop
cmp
mov
push
xor
add
ljmp
orb
fucomi
loop
adc
push
jns
lcall
lcall
fistpl
mov
cmp
sub
adc
cwtl
pavgw
jbe
cmp
fidivrs
outsl
mov
inc
in
push
ficoml
ja
cmp
sub
out
xor
mov
in
imul
and
adc
sarb
into
xchg
xchg
pop
movsl
stos
jg
push
addr16
xor
push
and
mov
jnp
movsl
push
push
xlat
add
fwait
lcall
and
rcrl
adc
pop
sti
nop
pusha
pop
arpl
xchg
push
scas
mov
sbb
mov
inc
xchg
jle
add
sub
mov
lods
aas
out
punpckldq
or
in
and
repnz
test
mov
cmp
mov
adc
or
and
movb
mov
outsb
cli
and
mov
ret
mov
dec
pop
and
fcmovnbe
test
ja
cmp
pop
subb
adc
outsl
sub
sbb
push
fsts
cs
and
push
movsl
push
clc
mov
into
adc
scas
lret
sbb
sbb
outsb
mov
das
mov
push
mov
sar
lods
xchg
mov
jle
repnz
push
cmp
push
mov
push
mov
mov
dec
enter
stos
push
sbb
pop
imul
or
inc
pop
xchg
adc
gs
cmp
add
out
and
lret
test
mov
clc
shrb
and
fdivrp
imul
cmp
repnz
out
lds
and
in
jge
cmpsl
dec
repnz
data16
or
xor
jl
push
repnz
xchg
fadds
scas
xor
fwait
jns
sbb
stos
pop
pushf
xor
fsubrl
xchg
cli
mov
inc
fidivrs
idivl
jg
repz
pop
repz
push
cmc
jge
and
test
mov
mov
daa
mov
dec
imul
fs
add
push
add
addr16
insb
or
lret
fildll
push
mov
xchg
xor
xchg
pop
mov
les
imul
sbb
aad
test
test
hlt
add
xor
es
push
mov
les
out
mov
cmp
in
lret
jle
mov
es
adc
lds
and
xchg
outsl
out
imul
sub
jo
outsl
mov
js
jmp
std
ds
stos
stc
cltd
dec
insb
pushf
jo
pop
mov
push
in
rorl
std
pop
repz
xchg
daa
js
shlb
mov
les
sub
xor
push
add
adc
xlat
imul
sbb
pop
xchg
jle
in
inc
inc
test
adc
pusha
jmp
push
test
inc
pop
bound
rcr
mov
lahf
jnp
dec
dec
push
cmp
jl
fdivrs
mov
add
pop
mov
faddl
pop
push
out
mov
rorb
or
sahf
lods
jecxz
test
jmp
jbe
pusha
inc
out
int3
popl
rcrl
int3
mov
stc
push
imul
lods
pop
xor
out
loop
mov
inc
int3
lret
push
andb
pop
xor
mov
mov
cmp
out
inc
insb
lret
push
jp
ljmp
cmp
or
test
mov
out
js
mov
lret
dec
push
ja
adcb
jg
jne
fadds
dec
inc
cmpsb
lock
hlt
ret
in
xchg
sub
jge
push
xchg
or
and
into
leave
subl
sub
mov
or
mov
mov
subb
hlt
stos
adc
addl
push
scas
pop
jns
divb
mov
iret
pop
arpl
sub
test
mov
aaa
fsubl
dec
push
push
shll
sub
and
cmp
sbb
in
fcmove
dec
push
fsubs
jb
jmp
cwtl
and
movsl
and
mov
jne
and
inc
rcrl
sbb
sub
enter
sbb
and
adc
movsl
test
roll
inc
pop
xchg
popa
or
mov
mov
ficompl
popf
sub
or
test
aaa
cmpsb
lret
xchg
das
push
xor
fldcw
das
pop
xchg
dec
movsl
cmp
sub
mov
jl
push
cld
mov
mov
pop
mov
mov
fistps
xchg
jno
cli
loopne
adc
test
shrl
popf
in
mov
jmp
push
sub
sbb
scas
adc
cmp
inc
xor
cmp
sti
mov
jns
sbb
lret
stos
pop
outsb
fidivrl
jecxz
mov
dec
cmpsb
iret
cmp
and
mov
xchg
push
mov
and
or
and
cltd
int3
out
lds
pushw
cmp
lahf
das
cs
cmp
jo
xor
dec
repz
xchg
notb
jg
inc
jmp
das
dec
ficoml
pop
es
jne
hlt
xchg
cmp
aas
outsl
or
inc
fstl
out
stos
and
inc
andl
sub
pop
js
mov
mov
cmp
adc
aam
dec
movsb
mov
inc
pop
arpl
push
loop
xchg
movsb
pop
cs
sarb
ficomps
sahf
push
ret
sub
outsl
incb
push
lock
xchg
xor
xlat
sbb
inc
xchg
test
cmc
daa
cmc
jmp
push
push
sub
cmpsl
loope
adc
add
push
mov
in
mov
inc
cmpsb
or
int
inc
push
inc
and
aaa
add
or
cli
cs
pop
jle
sbb
mov
or
pushf
fimull
data16
adc
test
insb
mov
repz
mov
inc
lea
jp
pop
mov
out
or
hlt
xchg
sbb
cmp
jp
data16
out
pop
sub
xchg
fcomps
hlt
stos
lods
cmpsb
xchg
sti
lcall
pop
cmc
icebp
fldt
repz
sub
in
sbb
jns
dec
cmp
inc
sbb
pop
icebp
mov
xor
xor
incb
mov
shrb
cmc
mov
orb
jne
ret
pop
lcall
mov
jmp
add
dec
or
inc
nop
cmpsl
sub
pop
in
jns
test
xor
loope
das
push
icebp
stos
pop
and
cmp
lods
add
out
xor
pusha
mov
and
lahf
fst
test
scas
mov
stc
fldt
xchg
lock
and
fwait
lods
cwtl
fs
mov
jb
xchg
mov
test
mov
nop
jmp
adc
in
clc
in
or
clc
add
jno
xchg
mov
lods
stos
cs
shll
in
adc
icebp
clc
add
mov
add
jle
pusha
jae
adc
xchg
sbb
or
nop
lods
push
adc
adc
mov
movsb
pop
add
adc
cmp
mov
lods
sbb
mov
dec
mov
mov
inc
fistl
rcr
stos
or
dec
ja
ret
xchg
call
sub
pop
push
xchg
and
push
addr16
adc
dec
push
loop
cs
inc
cmp
test
daa
jb
icebp
inc
icebp
scas
xchg
and
adc
mov
xchg
or
sbb
cmp
shl
xor
iret
idivb
mov
inc
stos
mov
adc
inc
jp
mov
out
mov
mov
cwtl
xor
push
not
jbe
push
cmp
arpl
sar
jg
stc
dec
gs
push
aaa
fisttpll
sub
adc
fdivr
push
pushf
push
jns
cltd
xor
hlt
ja
dec
add
jns
jnp
ja
jmp
dec
orl
or
les
mov
imull
add
jle
push
inc
lcall
inc
cmc
xor
notb
popa
jne
incb
mov
xchg
enter
xchg
inc
fwait
add
mov
pop
dec
imul
adc
inc
mov
adcl
sbb
nop
popa
add
fiaddl
push
test
movsl
sub
pop
nop
and
daa
mov
scas
mov
sti
jg
fs
or
popf
and
test
sub
stos
stos
shr
ret
cmpsl
fucom
xor
push
dec
jg
mov
inc
adc
shlb
push
adc
push
add
push
or
out
out
in
fs
fisttpl
mov
adc
mov
fdivr
xchg
sub
cmp
sbb
pop
cmpsb
dec
repnz
sub
add
add
ja
fst
sbb
push
mov
push
inc
add
lahf
lahf
enter
cltd
ss
sub
xchg
sbb
movl
aaa
adc
std
mov
cs
cmpsl
stc
mov
lret
lret
mov
inc
jns
add
dec
ss
push
pop
add
inc
mov
inc
xor
stos
mov
mov
dec
ljmp
and
jnp
mov
es
sti
hlt
jge
jne
inc
addr16
fsubrs
scas
js,pt
iret
popa
ljmp
out
or
mov
and
aaa
dec
fisttpll
jmp
idivl
rcrb
popf
mov
mov
sub
mov
push
mov
cmp
jecxz
fs
mov
jmp
orb
nop
mov
bound
fimull
pop
cwtl
ret
mov
lcall
jmp
and
ret
jno
in
jge
xchg
xor
push
movsl
xchg
movsl
test
xor
adcb
push
notl
data16
xchg
inc
mov
sub
mov
dec
xor
cmp
and
inc
or
jno
aas
push
jl
adc
in
or
cmpl
mov
xor
mov
dec
es
xlat
in
into
sbb
lret
shrb
dec
jge
jecxz
cmpsb
mov
lahf
lock
push
iret
hlt
lods
mov
js
mov
xor
jnp
out
or
mov
jne
pop
cmp
or
stc
inc
pop
pop
cmpsl
pop
xchg
sub
xchg
inc
mov
arpl
sbb
test
int
mov
mov
xchg
and
sbbb
dec
add
dec
cwtl
fistps
adc
ror
notl
xchg
dec
dec
lret
xchg
push
testb
cmp
scas
lret
mov
pusha
loopne
fnstcw
and
push
cmp
jnp
mov
sbb
sbb
xchg
rol
push
push
mov
pop
jae
pop
inc
sar
mov
push
xorb
mov
adc
push
mov
xor
fmuls
add
jnp
enter
imul
cltd
iret
pop
pcmpgtd
push
gs
adc
xlat
lea
adc
pusha
inc
lods
pop
repz
inc
jp
jb
xchg
sbb
stos
call
lahf
shrb
popf
add
ss
leave
pop
mov
lock
push
popa
cltd
jge
cmc
push
cmpsb
das
xchg
ret
cmc
int
test
add
js
inc
in
lods
pop
push
test
and
mov
sahf
sbb
test
shrb
or
jnp
ret
addr16
cmp
fisttpl
mov
xor
mov
adc
push
sub
mov
jge
ret
mov
fstps
or
pop
outsb
lahf
sub
into
clc
xchg
xor
lahf
and
daa
mov
mov
cmp
jge
inc
dec
mov
cmpsb
mov
mov
scas
mov
jmp
adc
sbb
sbb
aad
mov
lret
in
lds
sbb
aas
and
lret
shr
movsl
out
pop
xchg
mov
mov
js
mov
es
dec
jae
out
mov
or
mov
lods
arpl
iret
pop
ror
enter
mov
notb
dec
test
test
push
je
jg
test
lock
push
push
lcall
int3
cmp
popa
jb
fldl
test
aad
and
cmp
ds
out
jl
mov
sbb
jmp
out
lods
test
pop
stos
xor
fdivs
loope
xchg
fstpt
pop
mov
fwait
nop
add
inc
cs
addb
dec
daa
dec
jp
cmpsb
jnp
out
out
cmp
push
lahf
rcll
xchg
aas
int3
sbb
lds
daa
rol
in
dec
jno
imul
faddl
xchg
sub
les
mov
pusha
outsl
rclb
xor
loopne
mov
mov
mov
lret
test
imul
stos
aaa
jnp
scas
mov
inc
rcrl
addl
inc
insb
decl
inc
loop
inc
lods
xor
nop
cmp
push
sub
adc
push
out
xchg
and
imul
mov
inc
das
pop
lea
sub
mov
inc
das
stos
test
push
xchg
ljmp
fwait
mov
cmc
lret
lock
dec
sbb
ljmp
jp
call
jge
dec
fs
xor
movsl
add
push
adc
inc
daa
or
in
gs
dec
in
fwait
or
data16
pop
mov
sub
mov
jge
sub
mov
mov
jmp
and
popf
out
cs
jl
lcall
jecxz
lods
in
lret
cld
fdivrs
ja
cwtl
sbb
out
sbb
mov
xor
cmp
xchg
mov
lea
inc
sti
sub
data16
pop
and
jge
adc
mov
stc
lahf
mov
xor
movsb
xchg
push
or
pushf
in
mov
dec
int
add
jns
push
aaa
mov
cmp
mov
cwtl
stos
mov
mov
add
pushf
outsb
test
or
mov
jb
sub
cmpsl
dec
mov
sbb
nop
push
addr16
stos
mov
or
cmp
jle
in
repz
push
sbb
je
sbb
imul
push
icebp
pop
cs
dec
mov
in
data16
dec
xor
dec
in
mov
ret
adc
cmp
jbe
inc
xlat
adc
pop
popf
mov
sbb
ficoml
rorb
pop
jo
or
sub
jb
test
and
dec
fprem1
shl
pop
outsb
sbb
imul
push
fisttps
mov
inc
js
mov
rolb
and
pop
out
mov
mov
inc
mov
ss
insb
jmp
mov
imul
rol
cwtl
mov
and
cs
movsb
and
fs
cmpsb
and
jnp
push
push
cmc
mov
add
out
jmp
daa
and
cli
push
les
aaa
out
push
pop
xchg
lds
xor
cmp
or
dec
jle
dec
decb
fadds
mov
adc
cmp
cs
mov
push
std
jecxz
inc
outsb
popf
das
outsl
faddl
mov
jg
push
rcl
das
ja
cmpsl
dec
mov
mov
fimull
push
push
pop
cmp
cmpsb
mov
cmp
ds
mov
pop
test
sbb
add
mov
test
rolb
inc
fadds
fidivrl
pop
push
dec
xchg
sub
xchg
sbb
push
pop
cmp
dec
xchg
xor
inc
add
mov
xchg
fcompl
push
lock
hlt
es
mul
cltd
pop
mov
stos
and
cmc
xor
fidivrl
push
inc
hlt
es
loop
rcll
xchg
sahf
sti
adc
pop
push
cmp
fsubr
cmp
jl
ja
mov
jne
fsts
je
cmpl
mov
xor
in
xchg
cli
mov
test
bound
or
fst
and
call
stos
mov
dec
cmp
jb
iret
sub
add
dec
addl
push
add
cmp
inc
xor
cwtl
arpl
jecxz
cs
adc
jge
xchg
and
jne
out
in
push
inc
pop
jbe
inc
ret
rorl
jne
cmp
jl
mov
es
dec
mov
aad
jbe
mov
sub
mov
add
mov
arpl
xchg
jp
inc
xor
imul
adc
pop
insl
int
jp
fisttpll
mov
xchg
mov
cmp
jg
je
out
cli
mov
mov
adc
jbe
adc
jmp
mov
test
and
push
sub
xchg
cwtl
push
sub
lods
ret
cmp
push
aaa
sahf
pop
mov
jb
jbe
mov
or
test
dec
fildll
ret
mov
cmp
repnz
lods
inc
sub
and
mov
dec
clc
sbb
inc
fildll
sbb
adc
mov
xchg
push
in
test
jno
jae
or
adc
imul
std
fsubl
ror
ss
js
rep
jp
sub
xor
push
mov
cmpsb
stos
xor
ljmp
insb
add
sbb
pop
into
xor
and
iret
jg
ret
or
lcall
and
pop
clc
shll
xor
jmp
mov
lods
mov
mov
push
unpcklps
int
xchg
nop
sarl
inc
or
cmovle
push
sahf
xlat
sub
mov
cltd
inc
repnz
idivl
push
and
shlb
add
ss
hlt
ret
shl
not
xor
mov
sub
insl
fidivrl
inc
outsl
in
and
pop
pop
movsb
movsl
lods
ret
cmp
jmp
sti
mov
idivb
push
adc
nop
bound
stos
fdiv
mull
lahf
lret
orl
xor
leave
and
icebp
testl
mov
std
outsb
xor
les
ljmp
jne
leave
push
popf
mov
nop
out
jmp
fsubr
xchg
sbb
push
in
rorl
pusha
jb
fmull
mov
add
call
jge
xor
fbstp
adc
lret
dec
xor
ret
xor
ja
leave
sub
jcxz
aam
cltd
dec
jns
loopne
pop
adc
lods
push
push
cmp
enter
mov
xchg
lahf
arpl
outsb
or
stos
mov
adc
inc
mov
aad
sub
mov
and
js
mov
stos
sub
cwtl
push
mov
cltd
mov
push
mulb
popl
scas
cwtl
addr16
popa
clc
xchg
mov
cmp
pop
addr16
pop
sub
inc
lcall
mov
mov
lods
in
nop
js
and
pop
mov
xchg
enter
push
cmpsl
jg
sbb
stos
clc
xlat
mov
shr
xchg
mov
stos
push
js
in
cmp
js
dec
out
sbb
lcall
fbld
or
in
mov
add
xchg
mov
fdivrl
sti
and
es
sbb
push
add
mov
mov
mov
insb
pop
mov
clc
cmp
push
push
imul
mov
sub
repz
int
sub
and
bound
aam
mov
sahf
jg
clc
call
inc
mov
pop
stos
jl
cmp
ss
sahf
cs
aad
sbb
pop
dec
imul
xchg
sarl
dec
adc
inc
jp
dec
jmp
int3
xor
dec
das
mov
loop
fsubl
stc
ljmp
mov
in
cmp
pop
in
ljmp
test
fdivr
sti
call
push
dec
cs
in
xor
pop
cmp
mov
xchg
pop
cmc
mov
lods
cs
lea
cmp
mov
mov
adc
pop
jg
jbe
call
adc
push
movsb
test
daa
ja
inc
int
frstpm(287
jnp
out
stos
loop
xchg
int
cltd
adc
or
add
pusha
faddl
or
enter
loopne
and
daa
rolb
lret
int
testl
xchg
loope
in
imul
cmp
adc
in
cmc
sub
add
es
jbe
xchg
dec
mov
mov
add
addps
fildll
xor
outsl
lock
mov
aam
push
dec
negl
sbb
push
push
cmpsb
cmpsl
jbe
lock
xchg
cmc
lods
les
add
enter
sbb
imul
lea
xchg
mov
sub
mov
xor
lret
mov
cmpsl
adc
leave
repnz
mov
mov
std
xchg
jge
pop
push
lds
push
ja
sbb
fwait
jle
dec
ljmp
push
fcmovnu
sbb
imul
loope
shl
xlat
call
xchg
jmp
and
popa
push
adc
jae
mov
dec
jmp
xor
out
mov
insl
sbb
sub
xchg
cli
lock
call
pop
push
lret
mov
imul
pop
aaa
cltd
enter
xor
in
repz
xchg
inc
and
aas
cld
push
dec
outsb
inc
add
dec
andl
mov
loopne
shlb
xchg
dec
subb
add
mov
mov
mov
popf
or
aam
mov
dec
or
jb
xchg
dec
inc
loopne
dec
daa
fiadds
inc
inc
pop
int
movsl
out
pusha
stc
pop
cmpsb
orb
inc
lret
inc
adc
pop
aas
pop
and
rorb
loop
mov
or
inc
test
xor
mov
dec
mov
ljmp
inc
test
clc
add
dec
fisttpl
mov
jne
mov
cs
shll
cmpsl
cmpsl
testl
notl
testb
pusha
push
addr16
xchg
dec
xchg
cmpsl
xchg
icebp
pop
xchg
or
dec
in
push
push
je
clc
aad
adc
mulb
fisubrs
dec
fwait
sub
xchg
int3
addb
sub
sbb
jge
iret
sub
aaa
cmp
lods
jecxz
ja
and
fcoml
daa
je
dec
sbb
xchg
push
cmpsb
cmp
dec
sbb
inc
and
iret
xchg
ljmp
aaa
test
sub
xchg
sbb
xchg
dec
sbb
sbb
jmp
pop
sbb
jne
cwtl
std
loope
cmpsl
ficoml
imul
aam
jge
cmpsl
jmp
fwait
data16
sysenter
push
ss
xor
imul
lock
stos
push
fistpl
popa
das
test
pop
gs
jnp
add
mov
stos
test
insb
mov
stos
mov
inc
scas
mov
mov
cmp
xor
jae
or
lock
push
push
inc
pop
in
push
imull
and
mov
inc
popa
insl
adc
pop
cmp
icebp
stos
mov
or
jno
jo
test
fldl
shlb
push
call
aas
cmpsb
push
sub
xorb
outsb
inc
sub
and
sub
aad
cmpsb
push
push
inc
mov
push
sbb
or
popf
in
xchg
sahf
aaa
iret
adc
into
dec
pop
cmpsb
cmp
or
addl
movsl
out
pop
ret
ljmp
push
jecxz
add
sub
fildl
movl
lods
inc
lahf
add
adc
roll
pop
or
leave
imul
sbb
push
jnp
pop
inc
xchg
jbe
sbbb
lret
test
or
cmp
lcall
in
lea
mov
jno
dec
rorb
adc
cmp
push
sub
mov
pop
jg
outsl
mov
fxch
idivb
inc
or
sub
icebp
cld
cmp
iret
sub
loop
les
pushf
stc
fisttps
mov
cs
cli
scas
fnstsw
pop
addr16
std
mov
mov
cwtl
sub
add
pop
pop
mov
iret
mov
xor
pop
mov
fstp
cld
cmp
pop
movsl
rcl
sub
mov
sbbl
pop
aad
lcall
sahf
push
mov
sub
daa
cmp
inc
sub
cmp
jp
jecxz
negl
shll
lea
popf
int
repz
je
mov
fsubrs
and
int3
mov
lret
sub
jnp
inc
movsb
mov
inc
mov
mov
enter
dec
daa
fistpll
jp
jo
jbe
notb
xchg
movsb
fistpll
push
dec
xchg
mov
sti
sbb
mov
cmp
filds
and
sub
aad
or
cmp
dec
test
and
dec
arpl
inc
xchg
outsl
sub
dec
push
movsl
inc
jp
int3
xchg
xor
jo
sub
mov
mov
xchg
imul
aam
jbe
cmpsl
and
dec
dec
push
push
sub
mov
loop
xchg
dec
add
lret
lret
push
dec
sub
orl
and
sarl
cmp
sub
stos
ljmp
sbb
imulb
jbe
outsb
test
mov
mov
sarb
cmp
and
push
adc
hlt
loopne
sub
iret
inc
mov
aas
in
mov
mov
in
xchg
clc
sub
pusha
mov
shll
repz
pop
sahf
xor
mov
cs
mov
or
add
xchg
push
pop
push
int3
mov
testb
xor
cmpsl
call
nop
hlt
inc
loopne
insl
mov
mov
push
cmp
cmovge
dec
pop
xor
dec
inc
xorl
je
repnz
dec
add
scas
cmp
push
pop
and
loope
jo
roll
ds
ret
lods
stos
cmp
push
divb
icebp
jecxz
fbstp
test
inc
inc
out
push
push
or
mov
add
sbb
mov
dec
call
adc
adc
mov
dec
mov
sahf
fs
pop
cmc
sub
inc
std
add
sub
inc
in
add
fisttpl
inc
outsl
fistl
xchg
lret
push
adcl
popa
and
jl
add
sub
popaw
fimuls
shlb
mov
xchg
mov
add
xor
testl
mov
push
rcrb
mov
pop
ja
jecxz
incb
inc
mov
add
test
lea
mov
mov
inc
mov
sbb
neg
fldenv
push
adc
je
dec
sub
neg
les
lds
les
xchg
inc
cltd
mov
push
movsb
jecxz
sub
hlt
testl
mov
inc
jno
aam
jge
mov
mov
test
adc
test
and
mov
pop
cld
sub
mov
add
or
mov
leave
dec
div
xchg
shr
addl
adc
jae
mov
in
inc
sar
fldenv
sub
outsl
push
xchg
pop
lods
adc
js
pushf
out
iret
pop
fmuls
and
lods
fiaddl
inc
bound
sbb
dec
sbb
fnstsw
rcr
jnp
pop
cwtl
mov
dec
xor
sub
fcoms
mov
adc
and
outsl
movsb
sub
rcrb
jp
je
aaa
je
mov
loop
fs
jo
adc
sbb
jmp
lcall
cmc
cmpsb
adc
jne
sbb
test
test
jno
push
popa
repz
mov
add
xchg
sti
andl
xchg
adc
inc
xor
repz
fnsave
stos
mov
add
adc
inc
mov
mov
in
sub
adc
mov
cltd
adc
bound
xchg
imul
sbb
sub
jne
roll
into
loopne
lods
enter
sbb
or
mov
xchg
rcr
jl
imul
mov
sbb
and
and
lods
dec
loope
mov
adc
jmp
and
jbe
ret
aam
inc
or
out
dec
mov
pop
sub
inc
dec
popa
mov
jg
push
add
mov
jl
push
jae
xchg
test
mov
loop
popa
jmp
das
popf
in
loop
pop
jecxz
dec
pop
cltd
jp
cmp
adc
jge
test
ss
xor
sahf
sahf
fiadds
adc
add
repnz
shlb
inc
pop
lea
arpl
mov
pusha
and
out
int3
test
adc
pop
mov
xchg
push
fsubr
jp
xchg
jb
lret
lds
mov
push
mov
fisubs
addr16
mov
jb
cmc
aaa
pop
pop
dec
mov
sub
push
outsl
jns
mov
push
int3
inc
mov
lods
push
popf
out
lret
rolb
es
and
or
lahf
xorl
xchg
out
ss
add
into
pop
in
int3
xchg
lock
in
repnz
das
mov
cmp
xchg
test
addr16
sbb
in
xchg
mov
mov
mov
cmpsb
mov
enter
aad
pop
out
aam
cmpsb
xchg
orl
shl
xor
mov
aam
mov
or
mov
add
adc
pop
add
popf
lret
ret
jns
out
daa
xor
clc
gs
ficoms
mov
decb
fsubrl
add
sahf
fwait
add
pop
xchg
jo
lcall
enter
cmp
adc
scas
shrl
fwait
movsl
push
mov
stos
xchg
and
push
adc
cmp
inc
insl
pop
insb
jae
mov
mov
dec
pop
push
insb
mov
inc
jg
and
sbb
sub
icebp
dec
imul
out
pop
mov
cmp
mov
cmp
inc
cld
lods
popf
testb
adc
imul
mov
jae
adc
mov
loopne,pn
pop
xor
xchg
cs
push
cmp
pop
mov
and
lret
outsb
shlb
out
std
mov
pop
ja
pop
mov
mov
push
out
or
cmpsb
mov
out
mov
or
std
out
rolb
loopne
dec
inc
in
push
and
add
lahf
pop
aas
leave
adc
mov
pop
sbb
fiaddl
pop
mov
pop
cmp
jle
xlat
pop
ret
int3
rorb
leave
or
mov
fdiv
inc
pop
dec
icebp
xchg
dec
add
hlt
mov
sbb
xchg
pop
pop
mov
push
pop
dec
and
xor
pop
add
adc
adc
push
cmpxchg
mov
or
icebp
jge
inc
aas
xor
in
push
inc
inc
div
jmp
sbb
cmc
pop
mov
subb
jl
sub
pop
imul
xchg
and
nop
lahf
mov
test
mov
in
imul
or
movsb
or
adc
int3
arpl
arpl
push
jne
pop
or
cwtl
bound
mov
faddl
subb
push
add
daa
arpl
push
sbb
fwait
push
fsubrl
jnp
stos
add
in
insb
push
xor
and
or
out
add
js
aam
orl
aad
in
sub
or
fs
push
mov
ss
data16
sbb
add
shlb
int3
daa
loop
jnp
jnp
ret
and
outsw
push
sbb
setb
jno
sbb
aad
xchg
arpl
scas
fsubl
lea
sbb
arpl
lods
aad
adc
pop
mov
cmp
fsubl
add
and
aas
push
je
sbb
mov
or
xor
mov
rorl
cmpsl
imul
jge
mov
push
out
push
sub
pop
push
cld
bound
dec
sbb
cmp
shr
dec
das
xchg
inc
out
mov
mov
xlat
cli
push
std
bnd
idivb
xor
cmp
xor
xchg
int3
inc
repz
or
lret
jmp
addl
sbb
push
cvtps2pi
call
cmp
xor
data16
sbb
add
jb
push
stos
call
xchg
cmp
and
adc
xchg
mov
aam
or
pop
in
mov
enter
jecxz
xor
arpl
lcall
cltd
or
cmc
divb
out
test
jp
mov
test
xchg
xchg
aas
lock
jge
mov
bound
leave
and
xchg
aas
jno
push
mov
mov
mov
cmp
mov
lret
mov
or
loopne
and
dec
jns
hlt
in
outsb
fnstenv
fwait
lds
adc
sbb
icebp
xchg
in
push
pop
mov
lods
add
dec
lcall
in
mov
scas
dec
daa
jbe
add
sub
add
sub
mov
rorb
ret
cmpsl
lods
lea
jb
sub
dec
inc
pop
push
pop
std
notl
sbb
jecxz
jns
xor
and
dec
inc
repnz
inc
stc
daa
frstor
int
or
inc
sti
iret
push
cmp
or
cld
loopne
mov
push
movsb
lods
sarl
sub
jg
jp
sub
por
push
enter
push
push
sub
inc
push
sub
in
pop
inc
mov
je
sub
dec
inc
enter
fidivrs
rol
outsl
adc
mov
outsl
test
inc
pop
mov
bound
incb
xor
addr16
mov
push
rclb
imul
mov
arpl
in
gs
and
and
mov
adc
nop
xor
dec
push
fistpll
aas
push
or
and
lret
popf
rcll
jo
pop
xor
and
pop
popf
dec
sti
and
sarl
jle
pop
loopne
push
sub
cltd
push
int
dec
in
inc
sbb
jns
lods
into
and
xchg
test
sbb
add
xchg
inc
pop
aaa
shl
shlb
xor
adc
push
or
loop
cmpb
lahf
orl
sub
or
adc
dec
mov
popf
and
jne
inc
push
ret
push
jmp
inc
dec
test
sub
lea
xchg
in
movsl
xchg
aad
sbb
adcb
inc
jo
and
daa
dec
lods
ret
fcoml
push
xor
inc
dec
and
dec
popf
sub
popf
cmpsl
aas
mov
sbb
cmpl
push
push
lahf
dec
pop
int3
iret
mov
repnz
add
jge
popa
cmp
sbb
addr16
test
leave
push
hlt
scas
sbb
or
inc
cld
push
icebp
dec
mov
adc
push
loopne
ficompl
rcrb
sub
cmc
test
fstl
dec
jbe
popa
lock
or
push
in
dec
pop
push
xchg
jmp
jbe,pn
int
sbb
fwait
or
cld
mov
icebp
mov
push
es
fs
adc
add
dec
mov
mov
loopne
xor
mov
and
out
imul
xor
sub
inc
sahf
adc
push
and
mov
mov
and
mov
pop
test
push
aam
test
sub
mov
fs
push
sahf
insl
mov
call
cmpsl
lahf
dec
jno
push
clc
mov
inc
insb
push
aas
jmp
popf
iret
sbb
cltd
add
daa
jmp
sub
mov
xchg
bound
fisubs
je
mov
fidivs
sahf
test
adc
cltd
sub
sbb
aad
pop
das
test
jg
sub
mov
or
and
xor
das
mov
in
clc
lock
mov
xchg
pushf
pop
mov
repnz
xchg
push
pop
xchg
lcall
jne
mov
add
or
or
lds
mov
xbegin
xchg
stc
mov
dec
xor
test
or
mov
pop
pop
pop
pop
test
mov
fs
add
pop
aam
ljmp
loop
jns
mov
xchg
xchg
push
mov
pushf
mov
cmc
xchg
out
push
pushf
ret
aas
mov
out
mov
push
mov
xchg
xor
dec
sbb
jecxz
je
jne
stc
add
fwait
or
mov
nop
repz
jo
and
fsubrl
inc
mov
cmp
mov
fldl
sub
loope
inc
lcall
dec
bound
rcrb
sub
insl
ss
mov
mov
mull
out
frstor
push
ja
imul
jg
orb
hlt
aad
xchg
inc
mov
loop
jecxz
or
jmp
mov
sahf
loop
dec
inc
sbb
mov
mov
add
ret
cltd
mov
cmpsb
movsb
test
pop
cltd
and
nop
dec
out
and
mov
cmp
xor
insl
std
mov
pop
ret
cli
cmc
add
hlt
movsl
mov
testl
mov
mov
and
cld
cmp
loop
lret
or
adc
or
mov
mov
ss
xchg
mov
dec
add
loopne
mov
sbb
das
mov
or
fmull
inc
pushf
stos
jae
xor
rcll
pop
fstpl
stc
mov
les
xor
flds
imul
mov
fnstenv
mov
mov
lret
sahf
outsb
fsubr
xor
mov
pop
cmp
pusha
pop
xchg
aas
push
or
outsb
sti
decl
orl
adc
pop
sub
jmp
cmpb
pop
or
pop
xchg
mov
addl
mov
mov
lods
insb
iret
pop
cltd
sbb
mov
fcmovu
shl
fst
call
sbbl
cmc
xor
add
and
xchg
pop
or
or
fildll
dec
mov
mov
repnz
cld
sub
push
aad
xor
iret
jb
lea
mov
adc
sbb
sbb
or
mov
je
sbb
sahf
outsl
inc
sbb
stc
dec
ret
dec
pop
lods
fisttpl
sub
push
inc
lods
xchg
jl
lret
adc
sbb
mov
push
mov
data16
and
sbbl
xor
mov
pop
mov
dec
cmpsb
cmpsb
in
mov
sbb
pop
hlt
adc
cs
and
scas
in
inc
pop
xor
inc
mov
sub
cmc
mov
mov
xor
dec
adc
push
test
sbb
push
pop
mov
jb
jno
push
mov
push
xor
or
push
xchg
popa
sub
jp
enter
leave
addr16
jae
pop
in
insl
mov
sbb
clc
fildl
push
fbld
jae
push
push
xor
push
leave
ds
jbe
push
scas
inc
lock
and
push
push
sbb
inc
icebp
jb
mov
jg
pop
inc
xor
sbb
jns
loop
xchg
test
pusha
jbe
push
ja
xchg
cmpsl
and
ficompl
push
fs
add
jne
jb
subl
js
push
fsubr
mov
lret
xor
and
mov
xor
iret
ja
xor
push
ret
adc
sahf
pop
and
mov
imul
jno
stos
mov
mov
xchg
into
sbb
cltd
cmp
das
pusha
xchg
dec
nop
push
mov
xchg
cmp
and
rcll
pop
adc
add
mov
lret
iret
insb
xchg
cmpsb
lods
mov
mov
loope
and
std
mov
rep
pop
mov
jecxz
sub
ljmp
pop
ret
lret
stos
sub
enter
or
iret
div
cmp
mov
adc
pop
popa
call
mov
adc
movsb
loopne
sbb
icebp
loope
int3
mov
pushf
dec
shl
movsl
imulb
stos
fdivrs
cmp
decb
insb
jb
push
repz
or
enter
sbb
add
pop
xchg
jbe
outsl
dec
push
movsl
data16
mov
mov
fistl
dec
sbb
sti
ja
gs
xchg
fisubrs
scas
inc
mov
push
push
cs
repz
jecxz
loopne
sub
out
mov
sbb
lods
outsl
or
sbbb
add
and
gs
push
mov
rorb
push
cld
sbb
sarl
or
push
stos
add
lods
pop
mov
rcrl
pop
sub
or
lea
enter
cwtl
mov
inc
loope
hlt
mov
add
jo
sti
xchg
fisubrl
in
cmc
popf
in
adcb
jle
aas
dec
outsl
and
pop
aaa
pop
push
fcoms
fisttpll
movsb
cmc
repnz
inc
cmc
shlb
xchg
dec
faddl
fimull
adc
adc
int
stc
ljmp
sbbl
idivb
jge,pt
mov
jae
sarb
fwait
push
add
xchg
cltd
or
outsb
push
es
int
push
outsl
dec
sbb
xchg
xchg
les
fldcw
push
lock
cmc
mov
cmp
xor
and
into
cltd
pop
xchg
cmpb
lods
or
push
je
pop
cmp
gs
or
cmc
sbb
fsubl
sbb
and
inc
loop
test
sub
pop
test
xchg
out
dec
mov
jecxz
out
mov
mov
mov
xor
clc
or
pusha
pop
iret
mov
adc
outsb
mov
or
decl
adc
shr
xor
sbb
ss
cmp
jo
mov
push
inc
ret
inc
cmc
xor
mov
push
xchg
mov
cmp
sbb
adc
cmp
cmp
mov
sbb
movsb
in
addr16
inc
add
clc
or
mov
pop
adc
lcall
cmp
cmpsl
aas
test
lock
outsb
imul
add
icebp
arpl
xchg
pushf
pop
jg
cmp
sahf
mov
test
sbbl
cmp
sbbb
sub
or
loop
jnp
pop
jb
cld
pop
mov
sbb
mov
ret
mov
cmp
rcrl
jno
sbb
cmp
mov
iret
out
ret
dec
fwait
or
stos
callw
leave
mov
add
cmp
incb
bound
jle
mov
das
test
push
fists
push
fldcw
jecxz
outsl
test
stos
movsl
or
sbb
out
mov
stc
jmp
mov
loopne
aam
pop
dec
fcomip
std
adc
push
mov
mov
xor
adc
push
orl
cmpsl
mov
sbb
jecxz
test
xor
pusha
cmpsl
out
lret
dec
pop
cmp
cltd
movsl
pop
test
adc
in
mov
movsl
rorl
fnstsw
mov
sarl
cmp
push
js
add
xchg
mulb
and
xchg
cwtl
addb
mov
and
xchg
xchg
xor
xchg
and
inc
dec
pop
inc
int3
loope
pop
pushf
out
ficomps
fstpt
pop
fwait
testb
jns
cld
lds
je
fnstcw
gs
cmp
mov
inc
sbb
jle
test
push
ljmp
cs
mov
dec
adc
inc
cmpsb
mov
xchg
mov
push
push
movntq
push
pushf
adc
inc
jge
fsubrp
dec
cmpsl
xchg
mov
mov
cld
push
and
add
pop
mov
mov
repz
dec
gs
mov
or
jbe
mov
aam
push
pop
xchg
xor
mov
cmp
cmp
loopne
adcl
push
xorl
xlat
shll
or
jmp
test
repnz
ljmp
fstpt
aaa
xchg
xor
nop
mov
and
out
popa
sbb
xchg
lret
or
daa
push
je
dec
push
pop
sub
test
or
dec
ret
jb
cmp
loopne
add
in
fnstcw
js
scas
fidivs
pusha
ret
lcall
add
cmp
shll
scas
out
loopne
aad
mov
sarb
push
call
mov
ljmp
mov
aad
and
mov
imul
mov
sub
adc
incb
mull
out
and
or
xchg
adc
cmp
test
adc
subl
pop
das
sti
pusha
dec
adc
test
gs
jne
mov
roll
out
xchg
push
dec
stos
orb
rcl
dec
push
push
inc
adc
sarb
pop
xchg
or
and
out
push
xor
sbb
lods
lcall
jp
loope
mov
jmp
fldcw
adc
pop
arpl
inc
xchg
in
adc
xchg
pop
mov
xchg
inc
imul
lcall
add
stos
add
gs
xchg
jg
lret
movsb
xchg
movsb
and
cmpsb
in
jo
pusha
sbb
jg
pop
ds
fdivs
add
scas
push
xchg
aad
add
loop
out
xchg
clc
in
push
cld
mov
loopne
inc
hlt
xchg
dec
mov
or
test
push
push
mov
clc
out
out
mov
add
fiadds
mov
aas
cmp
std
outsl
xchg
jmp
mov
stos
mov
adc
dec
push
in
leave
xchg
push
jge
popf
jp
js
notl
rcr
push
fldcw
insl
mov
lret
sahf
push
imul
cmpsb
leave
adc
icebp
lock
test
mov
sbb
sub
xchg
push
test
ret
and
xorl
jnp
fsubs
and
addb
pushf
out
stos
add
movsb
dec
xor
mov
ljmp
icebp
es
stos
jl
pop
les
mov
icebp
scas
repz
jne
or
ja
lret
dec
cmc
push
pop
pop
xor
push
ficoml
orb
stos
sarb
call
sub
pop
outsl
mov
cwtl
fnsave
je
cmp
jp
pop
outsl
mov
rolb
or
dec
xor
aad
xchg
aad
xor
jnp
mov
xchg
aaa
or
pushf
jmp
lret
mov
xchg
mov
sahf
cmc
or
adc
mov
or
cs
sti
xor
xchg
ss
ret
loope
fists
sbb
push
cmpsl
lahf
mov
pop
in
jne
orb
add
in
add
adc
jge
add
ds
es
scas
push
mov
xchg
sbb
popf
stc
mov
leave
rorl
in
ja
rcll
cmpsl
jae
movsl
mov
test
cmpsl
mov
pop
sti
scas
sub
iret
push
shll
mov
adc
je
test
ja
xchg
das
mov
push
cwtl
pusha
andl
jg
xchg
dec
mov
icebp
daa
lea
adc
test
lahf
pop
into
inc
out
bound
push
sub
cmp
or
fwait
push
pop
frstor
xor
xchg
push
pop
xor
xor
mov
int
data16
inc
repnz
ret
aam
sub
aaa
xchg
dec
movsl
sbb
lds
jle
add
cmp
call
std
xchg
jae
daa
in
xchg
ljmp
adc
rcl
in
inc
jbe
push
lods
icebp
lret
adc
scas
enter
cmp
rcll
mov
xor
and
ror
mov
cmp
adc
shrb
shrb
pop
cmc
cld
test
mov
mov
or
push
inc
das
pop
jnp
or
lea
dec
cltd
push
xor
add
sahf
shrb
push
cltd
inc
cmc
dec
mov
cwtl
lret
outsb
mov
loopne
lds
jp
out
mov
and
or
add
negl
xor
repz
add
cmpsb
cmp
icebp
sub
lods
push
fnstsw
xchg
inc
ret
insb
lret
js
scas
subl
adc
ror
jns
fwait
push
xor
aam
js
dec
xchg
lahf
pushf
repnz
insb
xchg
roll
push
and
pop
cmpsb
jae
add
pop
push
push
sub
pop
xor
jmp
and
pop
xor
addr16
out
jecxz
cmp
lods
out
dec
mov
loopne
fsin
movsb
pop
mov
jge
xor
jl
mov
cltd
into
inc
adc
mov
test
mov
sub
push
imul
fisubs
push
outsl
cmc
sub
xor
jl
adc
aas
outsb
xchg
push
neg
jae
xor
sbb
movsl
test
mov
dec
test
and
js
and
pop
mov
out
mov
mov
outsl
mov
stos
dec
sbb
jnp
aas
mov
ja
mov
xchg
inc
push
mov
push
into
inc
outsb
sets
fs
pop
push
shlb
inc
mov
lds
std
mov
roll
in
pop
and
push
mov
push
fistl
adcb
jo
scas
pop
lret
push
add
jno
push
mov
inc
adc
adc
in
push
add
test
test
leave
imul
jno
push
lret
enter
push
add
fs
loope
cmpb
xchg
pop
or
mov
sub
cli
mov
jg
add
ret
add
adc
int
mov
scas
cltd
or
jbe
daa
xchg
test
push
push
cmpsl
xchg
and
in
fcoml
adc
lret
sahf
fistps
xchg
push
cld
inc
push
and
test
or
xchg
adc
rorb
subb
push
rclb
xchg
mov
movsl
ret
ret
jne
div
into
aaa
stc
aad
js
aaa
outsl
mov
cs
cmp
xor
clc
mov
pusha
pop
sbb
aas
fcomps
xlat
nop
push
ficoms
mov
adc
lea
and
adc
scas
jecxz
sti
sar
out
fbstp
or
inc
xlat
push
cltd
test
sarb
push
sub
xchg
push
jp
out
and
pop
cmc
xor
fildll
dec
sub
dec
stc
add
inc
aas
stos
xor
pop
mov
push
cmp
out
popf
leave
xchg
mov
xor
int3
mov
inc
nop
or
mov
dec
pop
mov
in
int3
sahf
xchg
stos
mov
push
push
push
pop
pop
fmuls
and
dec
or
ds
clc
sbb
inc
pop
inc
dec
frstor
enter
pop
pop
sbb
cld
add
fadds
pop
mov
mov
lods
sub
xchg
sbbl
jne
push
cmc
fisttpl
mov
ss
scas
mov
cmp
jno
xor
xor
push
mov
inc
mov
mov
dec
push
and
pop
or
fidivl
pop
pushf
mov
inc
fidivrl
sahf
icebp
xchg
adc
sub
pop
adc
clc
xchg
jle
addr16
negl
mov
or
jmp
sub
xlat
mov
xchg
ret
push
ret
dec
push
fldt
pusha
aaa
cmp
shll
mov
fs
cmp
or
gs
sbb
dec
inc
sbbb
popa
cmp
xor
js
cmp
pop
cli
mov
add
push
lahf
xchg
cwtl
enter
add
or
out
loope
pop
movsl
jmp
mov
pusha
push
daa
push
add
jmp
popa
sub
cmpsl
pop
ljmp
fcompl
push
int
xchg
stos
scas
gs
or
add
mov
shll
lahf
dec
out
dec
stos
lret
jl
inc
fisubs
test
out
fucomip
outsl
fldt
push
lock
xchg
nop
xor
ljmp
mov
adc
lret
sahf
xor
and
cmpsb
orl
mov
movsl
sbb
imul
jae
clc
in
outsl
ljmp
fisttpl
jb
sbb
xchg
jle
mov
pop
adc
out
fldt
mov
out
in
sub
mov
push
mov
mov
cmp
sub
fcoml
mov
push
imul
clc
dec
fdivrs
out
es
test
cmp
add
bound
out
cld
pop
pop
lods
cmp
add
ss
or
cmpl
jns
cld
cs
push
xor
daa
int
mov
mov
stos
popa
xchg
sub
cmc
xchg
scas
mov
scas
test
ds
in
in
stc
inc
jo
jns
sbb
outsb
insl
push
jl
insl
xchg
insl
xor
lea
cltd
cmc
xchg
jle
mov
inc
enterw
and
shl
add
add
icebp
jno
fcom
lock
movsb
sarl
movsb
js
repz
push
and
shll
aaa
xchg
cs
jg
cmp
int3
and
push
fwait
outsl
insb
andb
and
dec
mov
push
pop
dec
pop
pop
scas
cld
lods
insl
adc
es
push
decb
gs
xchg
imul
xor
sti
fidivrs
add
sbb
pop
test
inc
jp
pop
sub
int
push
sbb
and
gs
insl
push
fwait
sbb
imul
sub
cltd
daa
fwait
sub
and
out
insb
pop
inc
adc
fistps
add
sbb
xchg
dec
mov
mov
push
jg
js
mov
push
dec
or
das
cmp
dec
repnz
mov
sbb
pop
push
inc
add
fisttps
sub
inc
loope
cmp
add
push
xor
lret
rcr
ret
push
xchg
out
pop
jne
sbb
ret
xor
cltd
fs
mov
insb
fsts
das
inc
jns
aad
js
scas
in
inc
xor
pop
jl
jle
test
xchg
sub
mov
outsb
pop
les
in
loopne
or
repnz
scas
fsub
pop
leave
arpl
mov
mov
les
cld
dec
shll
icebp
adc
hlt
mov
in
xchg
and
call
hlt
dec
xor
dec
aam
or
lea
fldcw
bnd
mov
sbb
mov
out
mov
sub
lea
pop
xor
int
imul
iret
rcrb
fimull
jge
or
pop
xchg
out
dec
mov
cmc
and
or
jo
rolb
sbb
outsb
cmp
pop
fs
into
pop
inc
outsl
push
inc
dec
sbbl
mov
inc
loope
orl
push
dec
out
je
in
ret
in
pop
sahf
fs
rolb
fucomp
andb
cmp
mov
mov
xchg
rcr
lahf
scas
mov
or
inc
lahf
mov
pop
inc
lods
jno
je
outsl
add
pop
cmp
lds
inc
mov
pop
fwait
mov
mov
addl
fs
icebp
mov
lock
add
cli
inc
idivb
rcll
and
mov
and
cmp
push
mov
mov
gs
add
push
loope
rclb
dec
gs
shl
test
xchg
xor
enter
out
mov
rol
jb
and
pop
add
andl
lahf
aas
fisttpl
mov
cmp
pop
nop
cwtl
into
or
cmc
push
jnp
out
out
test
sahf
mov
or
mov
cmc
leave
mov
insb
pop
loope
aaa
and
cli
pusha
fisubs
or
mov
movsl
push
inc
pop
mov
and
mov
and
lea
lock
stc
arpl
lock
pop
out
bound
pop
orb
xor
test
cmpsl
inc
cmp
and
mov
push
rcr
jl
cmp
outsb
cmpsb
pop
enter
jno
and
mov
stos
mov
jno
or
aas
push
fidivrl
sahf
push
push
lret
push
sbb
pop
and
adc
pop
pop
sub
nop
sbb
xlat
jge
lret
std
pop
cmp
stos
lret
hlt
negb
mov
jl
push
fwait
ljmp
xchg
cmp
push
add
lock
movsl
xor
mov
sbb
jl
in
xchg
icebp
push
lods
popf
xchg
jle
loop
in
or
pop
adc
jb
cmp
lea
andl
and
mov
lds
mov
scas
mov
sbb
rcll
arpl
lcall
stos
decb
xor
test
rol
aad
mull
jno
jo
mov
clc
xor
js
daa
cmpsb
insl
ds
mov
mov
mov
lds
sbb
cmpsb
mov
xor
cli
out
push
mov
adc
in
adc
leave
mov
inc
pop
jns
aaa
jecxz
cmp
cmp
shrb
pop
xchg
cmp
aad
sbb
adc
push
call
mov
out
xchg
popf
push
addr16
mov
cmp
test
jg
pop
aaa
shl
movq
push
mov
fstpt
jno
add
cld
or
jo
leave
fcoml
inc
rclb
mov
imul
xchg
nop
sarl
jo
inc
loopne
or
rcrb
lahf
jbe
adc
out
mov
not
add
inc
cli
insb
adc
adc
ds
addr16
xchg
fldenv
fld
test
cltd
insl
sbb
add
fdiv
pop
cwtl
pop
bound
jnp
dec
shll
lret
jp
xchg
push
movsb
cmp
fildl
xor
xor
int
ret
fld
sub
outsb
mov
outsl
in
bt
xor
mov
sbb
lret
sub
lods
into
adc
pop
shrb
aas
jnp
imul
sub
xchg
jmp
mov
and
loop
loopne
popa
test
sbb
lock
mov
mov
dec
pop
inc
cmp
push
lcall
lret
xlat
xor
mov
bound
cmpsl
movsl
mov
test
jmp
rcl
xchg
adc
dec
adc
or
mov
shrl
xchg
lahf
fucomip
pop
mov
mov
inc
add
push
addr16
push
mov
mov
push
movsb
push
sub
mov
push
arpl
fidivl
adc
bound
dec
pop
sub
sbb
sbbb
jle
dec
push
jne
mov
cli
and
shll
push
out
sbb
enter
fdivl
stc
out
push
hlt
lret
lcall
adc
cld
pop
out
pop
scas
movsb
jle
clc
hlt
xchg
shlb
imul
lock
xlat
ss
inc
imulb
inc
popf
mov
mov
jecxz
out
lret
or
fcom
pop
pop
les
cwtl
adc
xchg
sbb
cwtl
addb
dec
les
cmp
mov
ljmp
add
out
jmp
inc
push
push
aas
pushf
xor
in
ljmp
xor
addl
push
cmp
mov
inc
inc
jle
incb
ds
iret
cld
insl
es
out
or
and
sub
xor
and
and
fiadds
cmpsb
jmp
push
sub
and
xor
add
mov
mov
adc
dec
mov
xchg
out
iret
fs
insl
mov
loop
fwait
out
adc
jl
sub
movsl
das
cltd
xchg
and
sbbl
or
push
push
add
cmp
mov
or
adc
hlt
outsl
xor
pop
pop
fdivs
and
sub
push
inc
mov
test
inc
cs
cbtw
cmp
pop
adc
and
sub
iret
pusha
hlt
repnz
cmp
mov
imul
rorl
push
in
pop
adc
jmp
mov
jg
out
dec
sub
mov
adc
adc
xchg
fldl2e
sub
fstps
inc
push
out
insb
hlt
addb
icebp
adc
xor
arpl
stos
loop
mov
das
mov
fildll
movsl
jl
mov
xchg
xor
mov
pop
xchg
inc
call
mov
ficompl
push
je
imul
mov
or
and
in
sub
push
sti
call
aas
sarb
cmp
sbb
lds
test
add
ljmp
mov
dec
dec
shrl
hlt
out
dec
bound
pop
rorb
out
cmp
cmpsb
cmp
outsb
mov
rorb
xor
fimuls
or
push
inc
jo
mov
jle
xor
jnp
in
inc
cmp
add
pushf
hlt
mov
repnz
dec
dec
ret
pop
push
mov
and
aaa
push
dec
daa
jne
mov
push
cmp
aaa
xor
jns
cmp
scas
and
dec
jmp
aaa
jge
psubsb
addr16
aas
xor
sti
les
adc
or
fisttpll
add
inc
sub
pusha
sub
sub
mov
lret
mov
ret
mov
sbb
dec
sub
mov
mov
movsb
or
mov
mov
mov
adc
push
stos
push
or
out
jnp
adc
enter
xor
sub
pop
add
cmpsl
aad
add
ds
orb
mov
or
push
pop
aaa
sbb
or
pop
and
mov
mov
sbb
adc
inc
pop
xlat
hlt
ljmp
pop
adc
xor
pop
mov
ss
dec
jbe
cmc
and
sub
xchg
sub
adc
pop
sub
or
ja
jge
mov
jmp
xlat
test
xor
xchg
shl
push
aad
xchg
rol
push
gs
inc
hlt
aas
es
mov
inc
or
mov
mov
mov
stos
xchg
loopne
repz
mov
mov
fadds
or
push
ret
mov
cmpsb
cli
inc
pop
pop
jbe
das
jne
in
push
push
dec
xchg
cmp
cmc
xchg
divl
cmp
int
movsl
dec
jae
xchg
popa
fdivr
mov
xchg
out
int
faddl
cmp
clc
rclb
cmp
mov
in
push
mov
out
jbe
sbb
adc
leave
sbb
pop
mov
jmp
out
mov
pop
test
jl
enter
lcall
cmp
jne
pop
mov
dec
mov
jle
mov
rol
push
aaa
enter
pop
sub
insb
mov
sahf
xor
rcrl
lea
popa
inc
xlat
addb
pushf
xorb
cs
pop
fdivrp
dec
sahf
outsb
push
cltd
aaa
xor
cmp
test
lds
and
cmp
dec
fwait
dec
or
cmp
jmp
decl
mov
and
shrd
pusha
arpl
cltd
fwait
sbb
jae
ja
popa
lahf
test
test
jecxz
cmp
jl
repnz
out
cld
dec
int
push
push
and
mov
push
outsl
mov
inc
nop
bound
push
xlat
bswap
mov
push
jle
cwtl
sarb
jg,pn
jle
jae
mov
idivb
loope
lods
fistpll
xor
sub
xor
fwait
cld
mov
test
push
xchg
dec
ja
in
sbb
mov
mov
into
popa
ds
xchg
xchg
rcll
negb
push
out
xchg
pop
pusha
lock
dec
xchg
add
push
xor
int3
faddl
nop
clc
mov
stos
in
mov
sbb
push
inc
adc
repz
mov
pavgb
std
stos
fcmovne
push
lods
sbb
jne
imul
pop
std
cmpsl
xor
outsb
incl
pop
and
rolb
add
arpl
push
clc
stos
jle
out
mov
fadds
stos
sbb
hlt
call
mov
mov
mov
mov
push
fstpt
clc
xor
not
pop
push
xchg
inc
and
dec
test
outsl
popa
aas
cmpsb
sub
pop
rol
adc
insl
lahf
dec
fucomp
loope
mov
jns
inc
xchg
pop
xor
mov
and
and
inc
scas
xchg
std
sub
pop
and
pusha
cmp
cmp
cmp
imulb
pop
rcll
xchg
es
jmp
push
out
mov
mov
imul
daa
push
dec
or
clc
adc
mov
out
adc
adc
aad
jmp
lcall
and
fmul
mov
pop
popa
gs
jmp
addr16
dec
das
adc
outsl
pop
mov
clc
rcrl
imul
pop
test
or
xor
test
jp
dec
inc
les
pop
adcb
add
ds
mov
es
cli
mov
jbe
cmp
rolb
add
cmp
jle
jb
arpl
jns
pop
repnz
imul
mov
cwtl
inc
dec
loop
mov
adc
adc
mov
sbb
pop
jne
dec
adc
inc
pop
add
add
fsubl
sarb
pop
aam
incl
ret
je
sub
cmp
push
xor
lds
shlb
fisttpl
mov
insl
int3
and
cmp
call
into
dec
push
push
xchg
xor
fs
out
adc
call
repz
sub
daa
test
mov
mov
and
clc
insb
stc
xchg
enter
mov
mov
sar
mov
cld
xchg
jne
int
dec
xchg
jg
in
fldl
int
lcall
sub
outsb
aas
push
hlt
fdivs
push
lock
adc
sbb
loop
dec
aad
fists
inc
test
push
bound
push
pushf
repz
nop
icebp
xchg
xchg
mov
add
lret
add
inc
jnp
out
sub
or
outsl
scas
xor
inc
jle
or
push
or
xor
fsubr
inc
outsl
mov
lods
lock
adc
cmc
jno
cmpsb
xchg
pop
out
xchg
pushf
adc
mov
cmc
outsb
sbb
out
cmpsl
sub
addb
sbb
sub
fisttps
cld
sub
inc
or
sub
lret
dec
xor
push
fwait
mov
jo
xchg
and
repnz
push
sbb
out
arpl
lret
dec
sub
movntq
lcall
xchg
jge
inc
inc
lods
call
outsb
xchg
pop
pop
je
mov
lret
jge
daa
loopne
sub
jg
mov
sarb
rolb
cltd
xchg
add
mov
or
adc
mov
adc
dec
inc
push
adcb
ficoml
shrl
xchg
fxch
jae
mov
and
jg
rorl
sub
ror
dec
dec
pop
jb
push
cmpsb
rcr
pop
ljmp
jo
test
mov
xchg
inc
jns
mov
add
int
push
lahf
lods
and
addr16
lahf
ja
pushf
std
cmovs
mov
scas
mov
addl
aas
jno
cld
leave
sbb
fucom
lock
fimull
mov
fldt
push
and
push
mov
rorb
cmpsl
aam
push
pop
push
shrb
fsubs
inc
orb
push
cli
mov
jnp
lcall
mov
mov
xor
cmp
ljmp
jmp
movsl
cmpsl
pop
sub
xchg
adc
cmp
aad
xorb
test
iret
adc
mov
jecxz
inc
mov
into
shlb
fisubs
mov
mov
and
shrl
jbe
mov
lret
cmp
pop
add
mul
push
dec
dec
lods
mov
jno
fsubrp
repz
subb
sbb
push
jg
mov
bound
daa
mov
test
xchg
out
jecxz
lock
pop
cli
xlat
fbld
adc
fisubs
fistps
cmp
in
inc
xchg
mov
and
jle
adc
xchg
je
insl
jl
rorb
ret
mov
data16
adc
cli
mov
cmc
sarl
push
aam
mov
pop
fnop
dec
sahf
lds
adc
das
inc
lods
fidivs
shrl
ret
add
pop
lods
gs
jne
fwait
dec
mov
loopne
cwtl
push
outsl
jle
incb
arpl
xor
imul
push
neg
clc
fbld
sub
es
mov
push
lds
test
movsb
aas
sub
sbb
inc
nop
or
sub
pop
jnp
xor
and
jo
arpl
sbb
lahf
adc
mov
mov
movsl
add
daa
ja
add
rclb
loope
insl
bndldx
hlt
sbb
xchg
call
cmp
ss
mov
add
cmp
xor
push
fimuls
fadd
das
pop
dec
or
inc
mov
mov
stos
mov
in
dec
jecxz
pop
loopne
sti
cmp
int
mov
dec
jnp
std
add
mov
or
sbb
fisttps
cmc
stc
data16
mov
hlt
cmp
out
movsb
xchg
cld
pop
call
jge
cli
addr16
imul
mov
push
jnp
orb
mov
sub
jb
mov
hlt
or
ud1
icebp
rorl
mov
movl
dec
mov
adcb
fcmovnu
stos
jae
rclb
xor
mov
dec
sbb
cmp
sub
push
imul
pop
mov
xor
inc
lds
xchg
mov
mov
cmpsl
add
adc
int3
xchg
xlat
test
js
and
ret
fmuls
cs
js
push
jle
addb
adc
dec
je
mov
sti
arpl
cltd
mov
cmp
shrl
add
jl
sbb
dec
das
jno
pop
daa
mov
orb
cmp
pop
pop
lds
mov
cld
add
dec
pop
fdiv
mov
mov
cmp
inc
dec
in
adc
adc
adc
mov
dec
and
cmp
push
out
sub
or
std
pop
or
sbb
mov
cmp
aaa
jbe
mov
andl
nop
popf
and
test
lret
jecxz
pop
iret
scas
rolb
imul
idivl
in
dec
pop
fnstsw
stos
cmp
pop
inc
pop
push
in
jg
xchg
mov
push
lea
fldenv
xor
cmp
rcrl
push
mov
mov
iret
adc
es
scas
jns
jae
sub
xchg
and
mov
insl
xor
xor
inc
jp
mov
inc
lock
imul
dec
push
sub
leave
cld
loopne
sbb
mov
int3
sub
jp
shrb
jno
jge
das
shr
mov
mov
mov
adc
add
lret
jle
xor
rclb
fsubl
xchg
mov
mov
data16
pop
dec
jns
and
mov
inc
cmp
xor
gs
inc
xchg
jnp
add
fisttpll
daa
movsl
xchg
mov
vpmacsdqh
ja
shl
adc
xchg
jne
data16
and
sbb
adc
jl
cmpsl
adc
movsb
dec
test
jns
arpl
call
in
jb
mov
pop
and
xor
imul
add
repnz
out
push
outsl
bound
ds
out
mov
lds
pop
addr16
and
inc
pop
lret
stos
subl
ret
xchg
inc
sbbl
js
push
adc
sub
addr16
out
cmpb
into
add
shl
movb
cmc
xchg
cmc
adc
std
cwtl
inc
rol
mov
in
push
xor
cld
test
cmc
push
jp
aas
aad
sahf
lcall
pop
pop
fsubrs
stc
nop
jl
cs
cmpsb
stc
dec
cltd
shll
add
xlat
loopne
rolb
pop
clc
lods
outsl
and
sub
adc
je
fcomps
test
clc
jns
xor
fldl
pop
jecxz
or
mov
push
add
sbb
int
into
xchg
int3
mov
popf
ret
adc
ljmp
mov
inc
insl
out
or
test
dec
cli
stos
rcll
mov
aaa
mov
or
loopne
cld
mov
fsubs
je
mov
mov
jbe
xor
cmp
hlt
jnp
adc
fists
out
xor
ret
dec
imul
pop
daa
cmp
imul
stos
cmp
rcll
out
mov
loopne
test
jl
pop
fsts
jecxz
push
cmp
call
add
sub
pop
pop
incl
into
mov
arpl
add
into
dec
adc
lods
xchg
jb
sub
loopne
loopne
test
loop
sti
in
std
mov
outsl
mov
cs
flds
mov
mov
pop
jne
insl
ret
push
bound
scas
xor
mov
rclb
rcrl
hlt
xchg
lock
or
repz
out
ss
push
outsb
mov
andb
and
or
pusha
sahf
push
or
cmp
push
xor
jne
add
mov
rclb
fisubrl
loop
push
jmp
test
jb
pop
movsl
rol
in
mov
lret
add
mov
and
scas
pop
inc
shll
pop
orl
shrl
sub
mov
aaa
movsl
mov
push
xchg
shl
fwait
push
mov
sub
pop
pushf
ret
or
repz
xchg
or
xor
mov
lcall
shll
add
test
and
cli
xchg
into
out
and
lcall
mov
mov
mov
mov
mov
std
cwtl
xchg
push
push
stc
test
shrb
test
push
jb
dec
sti
mov
xor
adc
testl
xlat
add
xchg
pop
ss
fadds
mov
ss
dec
sbb
cmc
mov
cli
xchg
mov
lcall
pop
push
cld
add
ss
ret
aad
lret
adcl
sbb
sbb
lods
ror
shl
popa
lock
ret
and
in
aad
idivw
iret
add
push
cld
sbb
mov
inc
cmp
or
into
iret
and
or
sbb
xor
lods
js
int3
push
jne
lods
xchg
sahf
mov
addl
mov
mov
es
jno
lods
sub
fmull
cmc
fimull
sub
mov
stos
scas
cs
sbb
push
jl
mov
xchg
push
aam
rcll
jecxz
pop
or
mov
call
cmp
pop
push
fdivs
push
xchg
sbb
adcb
xor
xchg
inc
scas
imul
imul
insb
and
add
cmp
ror
push
adcl
aad
mov
pop
ljmp
pop
jmp
popf
pop
mov
mov
ljmp
insl
and
dec
js
add
inc
add
jno
jmp
popf
jmp
fists
add
iret
adc
mov
mov
adc
shrl
cmp
sub
inc
pop
xchg
aad
cmc
or
or
and
into
icebp
xchg
dec
dec
jae
cmp
pop
insb
adc
das
int3
enter
mov
cmp
pusha
call
mov
mov
mov
fisttpll
xchg
popa
rol
inc
addr16
mov
jle
inc
cmp
shll
xlat
push
popf
sahf
inc
xor
push
jg
sbb
mov
rcrl
push
imul
xchg
cmp
xchg
negb
push
jmp
lods
fists
push
fstpt
mov
fcoml
daa
mov
fisubs
test
xor
lret
sbb
lahf
xorb
pop
outsb
sbb
mov
jp
dec
pop
mov
mov
xchg
lea
mov
mov
and
jg
cmpsl
pop
cmp
jg
ljmp
adc
mov
mov
test
dec
nop
inc
and
and
int3
sbbb
sub
sub
mov
mov
clc
int3
in
mov
pop
vphaddbw
lock
movsl
push
int
mov
aad
decb
add
jg
das
and
ficomps
mov
add
popa
stos
cmp
inc
leave
adc
adc
stos
ljmp
std
push
cmp
mov
rol
push
dec
dec
sbb
xor
jge
in
ss
jns
pop
adc
xchg
sbb
mov
jbe
xor
arpl
les
ret
and
mov
mov
pop
dec
push
popa
icebp
fdivp
or
cmp
cmp
test
leave
arpl
leave
iret
xlat
movsl
incb
orl
xchg
add
push
pop
das
notl
push
inc
and
xchg
add
imul
adc
clc
inc
mov
not
cmp
mov
inc
stos
pop
push
arpl
push
xor
lcall
notb
fsts
mov
sub
push
pop
sahf
test
jne
fisttpl
inc
or
sbb
jno
cmp
aam
inc
pop
pop
sti
shrb
mov
mov
mov
xlat
repz
sub
or
pop
mov
and
mov
loop
and
mov
pop
inc
out
mov
outsb
test
jmp
loop
or
jp
repz
test
mov
lahf
xchg
sub
ljmp
out
sbb
ret
xchg
cmpsl
mull
stos
popf
cwtl
mov
dec
jbe
loopne
jmp
jae
jge
dec
pop
cmpsb
sub
daa
cmp
sub
mov
and
shrl
ds
sub
aaa
xchg
jne
cld
dec
dec
mov
imull
icebp
xor
push
push
mov
xor
dec
fimull
push
mov
inc
cmc
or
pushf
or
jecxz
pop
and
adc
and
scas
mov
push
pop
cmc
aaa
cld
mov
shlb
rorb
loopne
adc
mov
cmp
mov
out
mov
jmp
dec
cld
push
lret
leave
dec
ret
xchg
mov
pushf
mov
iret
cs
mov
mov
add
and
cmp
jnp
inc
loop
jns
cltd
xchg
sbb
es
pushf
out
xor
jns
pusha
cmp
mov
mov
repz
mov
or
xor
and
cmpsl
jo
jmp
lods
dec
mov
clc
repz
ljmp
insb
jg
pop
sbb
data16
mov
ljmp
mov
insl
cmp
sub
dec
sti
mov
clc
popf
dec
cmp
push
daa
repz
cld
mov
inc
mov
sub
pop
jge
push
mov
jge
hlt
in
dec
scas
lock
dec
inc
fsubrl
fldt
mov
rcrl
mov
jne
cmovl
cli
mov
mov
cltd
adc
int
test
mov
jae
sti
mov
xlat
fcompl
mov
scas
adc
xchg
in
loop
mov
mov
and
cs
lds
pop
mov
nop
sbb
loop
dec
pop
int3
xor
shll
push
rcrb
daa
outsl
sbbb
movsb
lds
addr16
neg
adc
inc
mov
push
sub
dec
adc
hlt
add
negl
push
imulb
mov
js
mov
lods
popa
shlb
fs
dec
shlb
pop
stos
mov
and
sbb
fdivs
les
xor
sub
shrl
pop
jnp
or
fiadds
fcmovnb
mov
dec
cld
test
sub
inc
sarb
cmp
sub
cld
inc
nop
dec
gs
add
mov
jmp
pop
xor
hlt
xchg
push
jne
enter
jo
aad
cltd
jmp
and
add
inc
test
add
add
adc
in
push
das
es
adc
or
pop
ja
leave
adc
pop
idivl
cmpsb
mov
loope
pop
cmpsb
xchg
mov
cmpsl
scas
scas
jp
imul
cltd
or
or
test
loop
test
mov
cmp
ds
add
pop
lds
push
enter
fadd
scas
and
imul
pop
fwait
inc
or
dec
cmp
test
jbe
add
scas
out
hlt
mov
sbb
push
inc
mov
clc
and
cmc
sbb
or
std
out
dec
inc
add
movsb
popa
stc
movsb
test
cltd
ljmp
inc
insb
inc
pop
dec
mov
lods
add
es
pusha
daa
jge
dec
nop
mov
mov
xor
sub
xchg
outsb
cli
repz
jb
loopne
lcall
or
nop
pop
test
add
sbb
fisttps
mov
adc
jae
jp
or
jg
sub
int
inc
inc
sbb
mov
jne
cmp
xor
add
sbb
adc
xchg
and
inc
mov
mov
pusha
sbb
mul
mov
in
pop
cmpl
push
js
shlb
arpl
sub
ret
cmp
sub
gs
push
inc
xchg
sbb
aas
out
mulb
xchg
mov
jmp
in
jne
add
pop
pop
sub
daa
add
inc
test
jo
daa
mov
push
dec
mov
mov
std
lods
cli
adc
mov
mov
imul
xor
call
mov
movb
push
xchg
ja
dec
cmp
into
in
orb
ja
cmpsb
fdiv
xlat
pushf
mov
and
mov
jns
inc
jp
adc
out
mov
cmp
pop
lea
push
sbb
xchg
sbb
arpl
add
add
shll
jmp
lahf
mov
rolb
adc
iret
nop
fidivrl
mov
loop
mov
clc
js
jbe
lret
jle
or
roll
imul
mov
and
mov
xchg
xchg
xor
lds
dec
test
or
inc
arpl
mov
cmc
mov
lcall
sbbl
and
fsubp
in
mov
xchg
iret
cmp
jecxz
lods
or
outsl
dec
js
xor
or
pop
fadds
jae
adc
cld
mov
dec
popf
js
sbb
lret
arpl
sub
cwtl
daa
sub
cmpsl
addr16
in
mov
mov
ret
sbb
addr16
xor
jge
ljmp
cmp
cltd
mov
stos
clc
mov
push
lds
push
xchg
test
add
fsubrl
mov
cmp
adc
mov
aaa
push
sbb
out
mulb
add
xor
mov
std
mov
inc
cld
mov
and
push
cli
push
ljmp
jmp
xor
mov
jl
movsl
cmp
xchg
arpl
cmpsb
shll
mov
leave
inc
inc
inc
daa
cs
add
xchg
or
jecxz
into
mov
mov
das
jns
add
dec
inc
out
pop
inc
sbb
add
pop
pop
xchg
cmpsl
xor
shrb
insb
addr16
rorb
dec
test
add
out
inc
inc
and
cmpsl
in
pop
xchg
xchg
cli
pop
repnz
and
cmp
inc
stc
gs
xchg
xchg
add
jb
out
push
insb
pop
cmp
imul
or
adc
daa
popf
dec
stos
mov
lock
push
iret
push
fadd
sbb
dec
cmpsb
std
insl
cmc
out
mov
add
movsl
pop
fwait
cmc
aam
mov
cmc
cltd
sub
lods
scas
sar
insb
dec
loopne
insb
fwait
ja
mov
mov
sub
scas
test
ret
inc
fdiv
and
das
mov
jmp
fs
and
rorb
jg
pop
xlat
jge
loope
test
push
cltd
sahf
mov
int
xor
loop
jl
xlat
scas
add
psubsb
push
pop
sbb
jl
pop
xlat
lea
and
stos
stos
add
arpl
inc
mov
inc
test
movsl
scas
dec
lods
nop
xchg
jno
inc
out
push
rcll
in
push
pusha
ja
mov
lods
test
sub
mov
cmp
xchg
add
add
or
lret
imul
jecxz
int
xchg
fcmovnu
cmc
iret
sbb
add
mov
mov
gs
sbb
xchg
insl
or
pop
shl
aad
inc
stc
jbe
jg
pop
xchg
imul
aad
inc
lods
ds
mov
aam
xlat
imul
fistpl
shrl
in
outsb
popa
cmpsb
mov
fmuls
cmp
sub
push
dec
lods
bound
or
push
sub
dec
jmp
xor
push
int
sarl
test
cwtl
fstp
push
push
cli
xlat
xchg
push
cwtl
or
ficoml
jnp
lock
lcall
stos
setle
push
adc
lret
push
mov
add
imul
cmpsl
add
adc
call
fwait
adc
sbb
lds
inc
call
icebp
cmp
dec
sbb
xor
sbb
mov
lahf
or
cwtl
xor
adcl
int3
jle
mov
aam
and
int
sbb
je
inc
adc
and
mov
pop
in
mov
cmc
mov
test
cmp
addr16
imull
filds
adc
xchg
cwtl
loop
popa
shl
scas
sbb
sbb
cmpsb
fsubrp
leave
push
xchg
bound
and
mov
cld
sub
dec
fs
ja
push
dec
adc
insb
push
gs
jns
push
insl
mov
ds
ficoms
nop
sub
lods
pop
jg
jmp
add
xor
insb
jo
insl
push
mov
xchg
sub
cli
arpl
enter
mov
sub
mov
ret
jle
out
repnz
jmp
sbb
stc
inc
cmp
movb
xchg
js
push
inc
push
push
insl
mov
adc
sarb
jne
pushf
fmul
std
insb
fimuls
sarb
sbb
mov
std
shr
pop
fdivl
test
cmp
fldt
fsubr
std
popf
es
and
sbb
jp
not
shl
jmp
mov
sbb
loope
in
mov
and
sub
loop
cmp
lock
jnp
xchg
repnz
ret
sbb
imul
frstor
add
fdivs
popa
push
add
jae
pop
mov
or
add
and
pop
sahf
scas
push
loopne
arpl
push
jl
mov
xor
jle
out
out
pushf
arpl
mov
movsl
cltd
adc
sub
inc
push
cmpsl
sti
jecxz
adc
xorb
xorb
imull
hlt
mov
cmp
loopne
pop
mov
out
divb
mov
fucom
outsb
or
push
and
out
lret
ret
outsb
out
xchg
xor
add
dec
xor
or
popl
sbb
sub
stos
in
daa
ljmp
popa
movsl
adc
popf
jne
in
ljmp
push
pop
or
ljmp
pop
and
add
fiaddl
mov
pop
insl
mov
cmpsl
pop
test
xchg
shlb
pop
add
pop
and
daa
movsl
das
push
loopne
es
cmp
movsl
and
movl
test
sub
pop
icebp
sarl
jp
and
jmp
adc
idiv
pusha
fstps
add
cmp
mov
pop
jbe
mov
sti
xchg
and
pop
sbb
cmp
data16
sub
data16
push
insl
xchg
nop
lock
sbb
out
pop
ljmp
and
lock
mov
icebp
xchg
pop
pop
add
pop
jg
jb
scas
pop
pop
dec
fidivl
outsl
test
adc
and
mov
dec
dec
jns
dec
cltd
jg
loopne
adc
adc
adc
push
ja
lods
icebp
stos
iret
insl
outsl
inc
push
mov
arpl
and
dec
vsubpd
lods
dec
mov
divl
or
ja
mov
shrb
dec
inc
and
iret
jl
sarb
out
inc
xchg
fs
xor
xchg
cmp
inc
and
cmp
xchg
imul
mov
sbb
sub
jne
mov
push
mov
imul
mov
and
inc
add
mov
cmpsb
out
xchg
inc
ret
fwait
sub
mov
jae
mov
out
add
xlat
in
test
outsb
mov
jmp
insl
lret
xor
std
jp,pt
adc
jl
fiaddl
outsb
popa
pop
repnz
repnz
not
push
ds
in
jmp
cmp
push
popa
in
pop
or
jmp
xor
jmp
lcall
and
rorl
and
pop
cmc
pop
jl
je
jb
adc
mov
adc
leave
push
pop
roll
lods
inc
outsb
adc
inc
mov
call
mov
stos
or
into
notb
aam
cld
jns
movsl
sbb
sub
cmp
rorb
fs
aam
inc
and
adc
pop
int3
stos
in
filds
pop
aam
xchg
pop
sub
push
faddl
and
mulb
test
xorl
mov
insb
out
mov
mov
pop
dec
mov
pop
fistpl
xchg
add
jmp
mov
add
jmp
mov
mov
out
in
inc
les
push
jnp
xor
or
push
call
pushf
push
mov
or
mov
test
mov
out
and
xchg
or
fnstcw
into
inc
pop
leave
push
shlb
adc
out
lahf
cld
xchg
mov
aaa
dec
mov
adc
dec
jmp
je
nopl
decb
cmp
mov
adc
adc
push
adc
adc
int3
test
pusha
shrl
sbb
in
fnstenv
xor
push
xor
inc
mov
push
inc
lock
pop
stos
lds
out
outsb
xor
add
prefetcht0
jne
mov
scas
mov
adc
popf
adc
and
adc
add
int
lret
lcall
test
call
xor
pop
inc
sbb
inc
xchg
mov
repnz
xchg
lcall
pushf
jns
lret
cmc
xor
pop
sti
xchg
das
hlt
cmpsb
fnstcw
fcmovu
mov
je
pop
les
clc
xor
ret
dec
stos
push
int
sti
add
in
sbb
daa
mov
fmuls
cld
in
pop
cmp
mov
aam
leave
or
xchg
jno
and
icebp
leave
jae
pop
pop
dec
stos
shr
shlb
xor
push
icebp
sahf
push
mov
sub
fbstp
in
ret
pop
mov
test
mov
roll
mov
pusha
fnstsw
in
ret
into
ss
imul
pop
fsubl
iret
mov
test
pusha
addr16
daa
icebp
arpl
jns
xor
sub
pop
fadds
popf
fcoml
popa
xor
mov
shl
sub
add
sub
incl
jnp
mov
rcrb
xchg
lcall
fisttpll
mov
push
pop
jp
fbld
adc
mov
lcall
and
call
xor
daa
inc
push
mov
mov
push
stos
fdivrs
push
daa
popf
repnz
push
mov
cmc
jne
inc
xchg
test
mov
popf
stos
add
fstpt
lock
outsl
sti
inc
mov
push
stos
shrb
mov
mov
in
aam
shll
cld
jl
addr16
lds
imul
inc
pop
pop
mov
xchg
test
mov
leave
push
sbb
push
fsubrl
out
lock
aam
das
fwait
xchg
xchg
adc
and
sub
lea
mov
in
mov
outsl
dec
iret
lods
mov
inc
inc
mov
pop
add
pop
jl
ja
xchg
dec
fsubrl
das
popa
cmpsb
pop
ljmp
sbb
xor
loop
xor
mov
lahf
dec
xor
mov
in
mov
sti
sub
push
mov
int3
xorl
lret
test
in
add
xchg
xrelease
cld
subb
out
cmc
gs
stc
xor
iret
dec
jl
push
cmp
sub
loop
dec
pop
dec
cmp
int
inc
daa
mov
loop
sub
sbb
mov
out
mov
loopne
add
jae
ja
lret
in
dec
sbbb
daa
popf
jb
mov
test
dec
frstor
push
dec
sub
mov
andl
stos
repz
mov
push
push
movsl
es
loopne
ja
out
fwait
repz
dec
stc
lret
mov
movsl
and
dec
ret
add
mov
cmp
loope
ret
push
jo
mov
fwait
mov
mov
dec
jmp
jl
lods
jns
repz
popf
xor
int3
xor
and
pop
fs
popa
stc
gs
and
repnz
jne
gs
add
inc
push
mov
mov
pop
imul
ret
add
or
mov
xor
xor
cmp
mov
das
lock
in
jae
fdivrs
mov
sbb
mov
cltd
incb
insl
scas
sbb
push
mov
idiv
mov
xor
push
ja
pop
dec
int
sbb
mov
cli
subb
or
or
push
bound
mov
cmp
push
testb
out
test
ljmp
inc
push
rorb
push
dec
mov
fnstsw
inc
sbb
mov
push
xchg
cmp
sub
jns
fisttpll
pop
aas
call
jmp
cmovns
push
xchg
dec
mov
stos
xchg
push
jecxz
push
into
mov
out
mov
sub
addr16
mov
pop
fnstsw
pop
add
addr16
xor
mov
adc
push
std
xchg
xchg
cmp
adc
int
jae
jnp
push
fsts
lods
out
mov
add
hlt
mov
mov
adcl
push
adc
loopne
and
xor
test
mov
xchg
movsb
outsb
jns
shl
cmc
nop
xor
pop
or
xor
dec
pop
dec
out
cmp
xchg
mov
fistps
inc
cmp
insl
and
addl
gs
rorb
and
push
xchg
jne
ficoms
and
jmp
mov
movl
cmp
xor
lret
icebp
gs
out
jns
cmp
jno
movsl
jp
negl
pop
xchg
xorb
or
xor
lock
mov
push
adc
ds
addb
sub
inc
dec
cli
inc
pusha
push
fsubs
cmpsl
outsl
sbb
fwait
scas
jns
mov
xor
ljmp
mov
popa
rcr
dec
inc
mov
shll
faddp
sbb
jcxz
xchg
pop
xchg
mov
dec
or
fiaddl
mov
push
sarl
dec
ret
repz
xor
mov
fs
cmp
fists
lret
xchg
out
cmc
inc
pop
scas
mov
mov
aad
scas
dec
into
mov
cmpsb
clc
mov
lret
adc
nop
xor
mov
adc
or
insl
bound
arpl
shll
add
push
add
or
orb
add
push
dec
inc
add
adc
leave
sub
sub
lret
add
cs
mov
or
jg
adc
adc
int
es
mov
mov
in
mov
and
je
jp
jns
dec
dec
add
cmpl
sahf
mov
ret
xor
push
add
flds
out
jb
cli
sbb
xchg
mov
mov
loope
dec
aas
push
scas
gs
call
sbb
fildll
btr
and
lret
aad
ss
add
add
pop
inc
sbb
mov
sbb
pop
call
xchg
ljmp
clc
hlt
pop
jae
in
jp
xchg
xchg
dec
in
shr
push
int3
inc
cli
lds
imul
lret
shlb
xchg
test
jnp
inc
nop
outsb
cmp
or
dec
or
hlt
gs
outsb
fldl
adc
icebp
adc
mov
fbstp
test
jmp
out
jl
ljmp
int
push
leave
rorb
popf
lret
sbb
icebp
adc
mov
outsl
pop
dec
push
pop
lea
push
arpl
aam
inc
pop
mov
push
add
mov
pop
and
loope
aam
or
inc
xor
into
jecxz
call
imul
push
inc
hlt
fstl
stc
lods
jg
repnz
add
lret
adc
out
rorl
dec
mov
push
out
lret
mov
push
outsl
shl
and
loope
ret
insl
test
pop
pusha
lret
xor
leave
cmp
xchg
nop
pop
clc
test
enter
cmpsl
cmc
and
es
adc
mov
push
mov
sub
popf
cmpsl
push
insl
aaa
ja
pushf
dec
pop
push
cmp
xor
add
popa
fnstcw
cltd
lds
call
pop
das
adcb
jmp
add
dec
cmp
xor
or
push
mov
adc
out
adc
ds
xor
or
or
add
and
test
bound
loop
adc
popa
test
cmpb
add
dec
shrb
jmp
adc
sbb
aaa
and
jge
mov
jp
mov
sahf
xchg
mov
adc
xor
out
mov
loope
adc
outsl
xchg
push
gs
add
mov
and
add
jmp
fcmovnb
clc
fld
shll
jmp
int
aam
ret
inc
jle
out
cmpsl
jno
dec
call
push
popa
filds
pop
cmp
sbb
add
loope
mov
cwtl
popf
adc
jmp
iret
in
mov
cmpsb
mov
mov
stos
cmovno
mov
repnz
ljmp
inc
stos
cmp
jnp
addr16
pop
mov
adc
pushf
mov
sbb
insb
ss
push
jp
sbb
lret
mov
repz
xor
push
jo
xor
sub
cld
div
cmp
xchg
push
and
fucomi
or
cmpsl
xor
cmpb
fsubrs
ja
add
cmc
pop
mov
push
xchg
jb
int
aad
inc
mov
xchg
ficomps
push
popa
push
push
cmp
and
pop
jbe
out
cltd
inc
mov
and
fnsave
test
rorb
mov
mov
cmpsb
jno
shl
aaa
cmp
es
movsb
in
mov
inc
adc
jl
dec
aad
loopne
jo
vmread
outsl
adc
fldenv
out
test
cmc
sbb
idivl
mov
adc
add
add
push
imul
add
scas
xor
repz
ret
sbb
jmp
mov
jnp
xor
and
roll
sub
mov
jge
in
adc
cld
pusha
and
lods
dec
out
das
fs
in
repnz
push
or
fidivrs
aas
xchg
jp
jb
push
in
dec
cmp
fwait
mov
lret
sbb
lock
xchg
lods
dec
popf
adc
fwait
das
imul
jle
icebp
sub
jg
repnz
shll
jne
clc
arpl
sbbl
inc
sub
mov
xchg
jmp
dec
cs
movsb
test
mov
cmp
push
outsb
push
mov
push
icebp
xor
mov
fmuls
clc
test
addr16
aas
popa
clc
push
fnstenv
dec
cmp
jae
stos
cmp
xchg
inc
dec
stc
addr16
add
pushf
dec
stc
sahf
in
add
cmp
cs
cmpsl
mov
sbb
out
int3
mov
lret
mov
mov
pop
sbb
loope,pn
jns
add
lcall
push
cmp
fmulp
ret
orb
sbb
fld
stos
nop
mov
jb
mov
fisubl
push
inc
xchg
adc
int3
loop
pusha
enter
dec
outsb
or
cld
xor
dec
or
inc
imul
mov
negb
mov
out
test
or
inc
jnp
decl
push
adc
mov
test
test
test
sti
xor
loop
xchg
int3
jg
sbb
xchg
sub
les
add
js
divl
dec
dec
cltd
sbb
cli
repz
adc
push
or
pop
test
stos
xchg
inc
push
inc
fnstcw
aam
mov
xor
adc
cs
lods
jb
adc
fadd
fisubrs
dec
je
inc
and
fdiv
mov
push
loop
lods
mov
mov
int3
dec
ds
mov
jle
loope
mov
adc
pop
out
outsl
data16
mov
cmpsb
pop
sbb
lds
ja
ret
fmull
arpl
cmpsl
cmpsb
fs
lret
adc
rclb
pop
add
mov
sbb
pop
push
inc
dec
js
movsl
jl
ljmp
cmp
and
repnz
aas
and
aaa
mov
hlt
and
pop
arpl
dec
mov
test
mov
jo
stos
dec
dec
xchg
rcll
fstpl
mov
adc
xor
cmp
lea
and
scas
cs
add
jge
push
jecxz
jb
daa
mov
push
push
fwait
xor
sbb
dec
pop
ds
cld
lods
sub
sub
mov
ficoms
mov
push
lds
loop
out
push
adc
loop
movsl
test
stos
pop
push
out
mov
scas
or
shlb
lods
mov
ret
fistps
call
into
inc
add
xor
ret
iret
adc
lods
lahf
fs
in
jmp
bound
in
inc
out
fsubrl
dec
jmp
and
insb
push
pop
or
cmc
jecxz
jnp
inc
iret
enter
jb
push
fbld
ljmp
pop
ficoml
sub
scas
inc
pop
jg
lds
es
xchg
cmp
dec
sub
and
cld
mov
pop
push
cwtl
cmpsb
inc
sub
pop
leave
mov
in
sub
iret
mov
scas
addl
int3
arpl
iret
cmpsb
movsl
and
pop
notl
mov
pop
into
jns
ss
cmpsb
fsubl
popf
sub
xchg
cli
dec
fsub
icebp
push
push
inc
xor
xchg
mov
push
pusha
add
pop
push
push
xor
andl
insl
adcb
inc
and
lods
dec
pop
xor
xor
andb
loop
mov
and
gs
and
mov
inc
lcall
sub
ja
les
ja
popl
xlat
ret
lods
xlat
pop
jbe
or
jne
xchg
and
stos
pop
jmp
mov
dec
sub
std
cwtl
clc
jg
push
dec
jg
xlat
loope
cmc
cmp
fsubrl
daa
popa
sahf
lahf
pop
or
fdivp
fst
imul
sbb
mov
mull
scas
mov
xchg
adc
push
cmpsb
subb
cmc
jbe
nop
scas
xor
cli
pushf
bound
je
in
xor
pop
pop
dec
adc
cmpsl
stos
xchg
jle
inc
xchg
sub
pop
adc
bound
mov
adc
or
adc
push
jb
dec
push
cmp
scas
roll
and
out
in
sbb
ficompl
ljmp
push
pop
or
stos
nop
adc
mov
dec
jno
and
sbb
dec
and
mov
mov
mov
iret
fstps
test
sbb
sbb
js
pop
xchg
mov
xor
sub
pop
xor
adc
cmc
lcall
jne
sub
push
mov
stos
popa
sbb
pop
testl
movsb
jge
xchg
and
mov
repnz
lock
jmp
insb
xchg
testb
add
hlt
add
bound
es
xchg
jg
ret
add
or
cs
push
dec
insl
std
jns
imul
add
push
pop
xchg
push
cmp
in
cmp
cmp
pop
dec
jbe
jnp
push
or
inc
mov
popf
or
movsl
sbb
mov
inc
jle
xchg
mov
jmp
mov
jg
adc
and
add
movsl
js
sarl
lock
xor
jmp
insb
inc
mov
ljmp
cwtl
jge
je
mov
mov
mull
inc
fsubrl
xor
push
sbb
and
jnp
and
sub
dec
jmp
test
pop
mov
adc
dec
aaa
and
mov
andl
xor
pop
lcall
inc
dec
ljmp
subb
movsl
out
mov
add
pusha
int3
mov
loope
xor
lret
vmulsd
popf
jb
pop
aam
loop
std
dec
stos
mov
insb
jbe
add
pop
insb
mov
fsubrs
lret
sti
test
cmpsl
adc
adc
and
ds
fwait
pusha
testl
popf
repnz
ljmp
dec
inc
xorb
or
xor
push
mov
dec
fcomi
adc
repz
call
popa
sbb
inc
rcpps
sbb
stos
push
lea
or
adc
es
push
adc
movsb
fists
sbb
loopne
cmpsl
xchg
cli
rcr
lret
and
adc
and
lock
push
addr16
sti
out
xorb
adc
fldt
sbb
mov
jne
out
push
cli
in
sub
lods
repz
jo
mov
cmpsl
adc
sbb
sbb
jl
fildll
fwait
adc
ss
aas
bound
push
roll
mov
mov
pop
or
test
push
shrb
pop
rorb
pop
scas
lods
xchg
pop
lcall
enter
mov
movsl
add
push
adcl
sub
or
and
mov
xchg
les
sarb
mov
sub
and
mov
mov
adc
xchg
xor
je
pop
add
mov
mov
out
xor
lods
mov
ficompl
inc
test
dec
sahf
or
stos
cmp
stc
pop
inc
stos
pop
xor
inc
cmp
sbb
sbb
outsl
adc
orb
fbstp
or
popw
mov
sbb
dec
icebp
lea
or
ret
mov
cmpsl
mov
and
fildll
xor
loopne
cmp
ret
xchg
mov
es
adc
dec
jle
dec
xor
repnz
pop
lods
aaa
fs
pop
or
mov
mov
xor
lret
jp
cld
lret
mov
sbbb
pop
mov
jae
or
mov
subb
ds
push
xchg
jno
sub
and
and
lods
jecxz
cmc
or
push
sub
stos
lds
cmp
cmp
and
out
insb
push
mov
imul
pusha
bound
arpl
popa
xchg
repz
mov
xor
mov
add
test
jp
bound
es
outsb
insl
aad
loopne
and
dec
imul
xchg
pop
jecxz
xor
outsl
jns
and
test
jno
sub
int
adc
sub
adc
mov
dec
std
push
push
mov
sub
fdivrl
dec
mov
jae
xchg
aaa
push
or
mov
dec
lods
add
pop
xor
cwtl
jp
notb
bound
sarb
fildl
jb
fs
inc
push
sbb
jl
lret
mov
sub
call
sub
mov
xchg
mov
mov
adc
mov
imull
inc
lahf
in
xor
sub
adc
dec
and
jo
out
sahf
lret
insb
into
data16
pop
mov
and
adc
sahf
les
shll
cmpsl
das
sbb
dec
mul
jp
lret
mov
rorl
frstor
add
cmpb
jg
mov
inc
mov
jge
aas
inc
psubusb
fwait
or
dec
mov
jae
ud0
fmuls
or
in
enter
dec
pop
in
repnz
pcmpeqb
mov
incb
adc
pop
xor
stc
inc
cltd
shl
insl
pmuludq
ja
mov
fcomps
sub
sbb
iret
popa
icebp
jo
sub
adc
push
dec
cmp
xor
jbe
shlb
or
mov
xchg
out
fildl
in
xor
imul
pusha
ds
or
cmpsb
sub
lret
insb
jo
insb
adc
les
cltd
xchg
pop
fidivrs
add
and
adc
fwait
ljmp
mov
or
lock
pop
dec
or
aas
mov
jle
movsl
pop
mov
shrb
xor
fstl
stos
cmpl
mov
mov
aam
inc
or
cmp
testl
and
and
mov
ljmp
popf
lcall
std
mov
inc
bound
sub
sbb
push
jge
cmpsb
sub
xchg
fstps
movsl
adcb
sbb
sbb
lret
cmc
jae
test
sbb
mov
jecxz
cmp
cs
inc
scas
xchg
pop
mov
lahf
testb
scas
lods
imul
xchg
cmpsl
push
pushf
pop
add
and
cmp
das
iret
sbbl
fbld
out
ds
or
cld
pusha
add
daa
jne
fnsave
jge
insb
aam
jecxz
pop
sub
outsb
ret
push
gs
cmp
daa
cmpb
addl
cmp
ficoml
sub
mov
hlt
out
inc
pop
mov
jno
add
loopne
loope
arpl
mov
xchg
or
por
movsb
rcrl
ja
cmp
out
lods
mov
mov
cli
out
sub
lock
aas
in
mov
int3
dec
jl
inc
and
xchg
push
dec
out
addr16
stos
mov
mov
sbb
push
jo
rclb
and
xchg
sub
or
stos
shr
mov
sbb
mov
pop
int
jae
jbe
sbb
add
xchg
cmp
jg,pt
mov
adc
adc
iret
inc
sbb
movsl
push
lock
fwait
sbb
clc
dec
adc
sbb
push
sub
dec
mov
cmp
jge
jae
inc
cld
les
mov
dec
pop
ja
sarb
fstpl
cmc
movsb
movsl
fsubrl
add
or
xor
cs
repz
sti
adc
aas
aad
hlt
push
push
adc
scas
mov
cltd
push
mov
loope
roll
jmp
lcall
pop
mov
scas
sbb
in
lea
xor
data16
test
adc
push
jno
xor
xchg
mov
aam
ljmp
and
jecxz
fildl
jne
aaa
adc
pusha
jle
mov
mov
mov
lahf
fidivl
pop
sbb
repz
pop
xchg
push
movsl
mov
mov
dec
pop
movsb
fwait
sub
mov
cld
adc
cmc
mov
mov
in
push
xor
jg
xor
in
pusha
inc
mov
jge
pop
fldl
adc
add
lock
mov
fists
lret
lret
sbb
xchg
imulb
inc
fidivrl
or
loopne
ret
les
jecxz
inc
into
or
jmp
cmpsb
cmp
test
mov
xchg
enter
fs
lret
jmp
or
mov
fs
and
sbb
addb
push
add
repnz
mov
call
imul
repnz
cli
xor
mov
dec
push
push
mov
jbe
scas
jg
xor
lods
xchg
ss
idiv
sahf
pop
loope
sbb
sub
push
cmpsb
push
imul
aam
pop
pop
rorl
xchg
cmpb
jae
leave
xor
dec
pop
insl
lret
jbe
and
pop
loopne
cltd
mov
hlt
icebp
lahf
xchg
cmp
rol
and
add
mov
sbb
fidivl
movsl
cmp
cs
push
stc
xchg
loopne
addr16
mov
repz
adc
loop
pop
dec
cli
mov
mov
xor
hlt
pushf
scas
mov
dec
jp
xor
sub
pop
xor
pop
mov
push
icebp
mov
and
stc
cmp
jo
push
vmovdqa
xchg
ret
and
int3
iret
lea
sbb
and
mov
mov
fdivr
mov
jne
jo
add
jae
imul
jne
outsb
rcrl
inc
and
lcall
add
dec
cmp
pop
sti
cs
or
jns
push
jb
inc
pop
sbb
jl
lds
xor
repnz
clc
cmp
rclb
icebp
push
xor
add
and
scas
mov
cltd
sbb
inc
mov
movsb
std
incb
mov
sub
mov
fldenv
inc
inc
out
lods
std
inc
pusha
add
lds
mov
outsl
sti
xor
cmp
push
adc
add
daa
sub
hlt
sbb
or
pusha
jb
gs
aam
loop
shr
popl
fsts
jb
popa
push
test
push
movsb
jne
aam
arpl
pop
mov
jg
cmp
xchg
mov
mov
gs
setno
push
lcall
pop
sub
fistl
cmp
fisubl
lahf
xchg
pop
rolb
pop
sbb
shlb
movsl
lds
fbstp
xor
adc
mov
push
out
stc
dec
fsubrs
add
pop
je
pop
sbb
pop
iret
repz
popf
test
pop
sbb
jmp
icebp
ss
dec
lret
pusha
pushf
in
cmpsl
pop
push
or
addr16
push
mov
inc
dec
pop
dec
lret
stc
in
pop
push
or
bsr
test
sbb
or
xchg
xchg
jbe
lods
imul
ret
jne
sub
add
mov
hlt
dec
bound
outsl
shr
sub
scas
jmp
andb
and
popa
psubb
push
sar
lods
jle
add
or
cmpsb
cmpsb
clc
int
cmpsl
push
adc
lret
fidivs
jo
out
movsb
jmp
or
cs
jne
sub
jecxz
inc
jmp
jno
xlat
inc
xor
cltd
les
and
inc
sbb
dec
xor
jae
aam
pop
xlat
ret
outsl
lods
in
ret
mov
inc
mov
inc
fcoms
mov
jmp
loopne
push
mov
int
xchg
or
insb
xchg
inc
insl
test
pusha
in
loopne
mov
rcpps
fistpl
xchg
mov
sbb
sub
mov
insl
inc
movsl
push
inc
cmpsb
mov
int
inc
pop
rolb
or
aad
and
out
push
lahf
rcrb
mov
xor
outsb
mull
jbe
pop
cmp
fcomip
aad
shll
sbb
repnz
lret
or
push
mov
cmp
hlt
outsb
pop
sbb
out
and
add
sub
inc
ljmp
testb
int
sub
lea
shlb
xchg
fnstenv
sbb
aaa
adc
mov
xchg
add
xorl
fwait
dec
pop
lahf
pop
mov
inc
mov
add
mov
pop
pop
adc
fisubs
repz
dec
sub
mov
icebp
std
push
bound
sbb
dec
fsubs
pop
pop
arpl
dec
inc
in
jbe
cltd
dec
xor
mov
xor
out
fstps
testb
out
jb
stos
and
cli
pop
lea
roll
stos
jle
mov
insl
adc
mov
ficompl
sahf
aaa
xor
inc
outsb
fwait
cmc
sub
sbb
and
push
je
arpl
mov
dec
mov
aas
aaa
pop
sbb
or
adcl
notl
imul
pop
sbb
push
cmp
faddl
aam
push
mov
test
test
fisubs
xchg
xchg
and
test
or
or
xchg
mov
fnstcw
push
push
mov
movl
insl
jo
cli
sarl
and
add
cmpb
rorl
sub
jnp
clc
mov
iret
push
in
cmp
xor
cmp
dec
dec
xor
mov
pop
xchg
rcrl
adc
mov
pushf
loop
add
es
pop
lods
sub
push
inc
scas
aad
jmp
and
or
je
add
dec
outsb
lds
lret
scas
add
mov
mov
sbb
jg
pop
sbb
sub
xchg
xor
push
adc
fstpl
mov
movsb
gs
ror
scas
xchg
jb
jl
jo
inc
stos
daa
inc
fnstcw
daa
sub
add
adc
idivl
pushf
insb
sub
push
xor
lret
nop
inc
add
xlat
in
repnz
sbb
das
aad
cli
fists
jg
jbe
mov
aaa
or
mov
rcll
pop
or
lds
cmp
sub
pop
push
scas
push
inc
arpl
mov
fs
sub
loope
cmpsl
loopne
sub
and
jg
out
mov
mov
mov
jecxz
sbb
fidivrs
shl
sbb
out
mov
dec
cmpsl
xchg
add
rorb
inc
jne
push
sub
iret
stos
iret
jns
stos
ret
sbb
cmc
ret
test
adc
les
adcl
xchg
std
dec
add
xor
pop
int
addr16
xchg
aaa
call
xor
and
push
movsb
cwtl
fisttpll
sbb
lds
sub
lret
add
add
dec
stos
iret
add
scas
dec
xchg
loop
or
lods
pop
pop
sub
rcrl
ljmp
clc
inc
cwtl
aas
dec
adc
cmovo
ret
pop
arpl
mov
mov
daa
leave
jle
mov
sbb
dec
dec
pop
in
add
cmc
dec
cmc
sub
das
cli
sahf
pop
mov
cs
jae
mov
mov
xor
cltd
adc
loopne
inc
mov
jle
insb
int
push
lods
stos
add
insl
jno
inc
jmp
push
fistl
or
lock
pop
add
sub
fnstcw
sbb
pop
add
sbbb
sbb
dec
lret
into
stos
pop
add
adc
and
mov
repnz
jge
mov
mov
mov
xchg
adc
into
jns
add
push
or
lock
arpl
inc
or
xor
out
push
add
in
mov
mov
sub
mov
movsb
sub
mov
mov
call
add
inc
loopne
mov
repnz
jmp
adc
dec
dec
jbe
cmpl
sub
loop
pop
btr
outsb
adc
cmpl
rcrb
aaa
daa
mov
mov
lock
push
aad
mov
cmpsb
stos
aas
sub
shr
push
rcrl
dec
mov
sbb
sub
scas
in
test
lods
mov
xor
dec
lock
xor
insl
add
mov
data16
mov
dec
lahf
mov
loopne
test
lea
call
stc
add
inc
sbb
adc
fs
inc
cld
pop
push
lds
jb
mov
push
sbb
mov
push
jb
aad
jne
mov
jge
js
pop
leave
addl
pop
jge
dec
dec
dec
iret
and
jge
lea
sbb
mov
dec
leave
add
fsts
ss
xor
shrl
add
inc
cmp
sbb
dec
sub
fsubs
xor
jnp
lret
pop
scas
rclb
adc
push
mov
aam
call
lret
sbb
enter
cmp
mov
scas
mov
ret
jno
faddl
and
and
mov
in
iret
mov
mov
in
push
mov
cmpsl
jae
or
sub
test
fistpl
inc
jne
jns
hlt
jns
or
loopne
xor
icebp
mov
test
cld
sbb
xchg
lret
iret
add
test
movsl
xor
out
inc
je
aaa
cld
xchg
shl
sbb
add
xor
xchg
stc
mov
inc
or
arpl
add
push
sbb
jb
push
and
jle
mov
ss
or
daa
iret
pop
scas
mov
jo
ljmp
pop
sbb
or
jmp
sub
and
add
repz
xor
jmp
and
dec
jmp
pop
cmp
mov
cmp
popa
cmp
push
xchg
push
or
push
pop
stc
ret
jecxz
jecxz
dec
xchg
dec
ja
sbb
cmp
push
pushf
add
mov
icebp
push
pop
xchg
pop
sti
aaa
mov
shrb
mov
mov
loopne
jb
mov
fbstp
mov
mov
lea
push
push
test
in
push
pop
push
push
outsb
movsl
push
or
pop
lea
pushf
push
dec
ds
xor
imul
dec
dec
mov
xlat
int3
push
cmpb
sbb
xor
mov
test
enter
mov
pop
nop
xchg
fildll
mov
push
pop
dec
dec
movsb
jp
dec
int3
push
inc
sub
xchg
dec
popa
sahf
xchg
dec
push
fmuls
mov
ljmp
sub
enter
sbb
ret
sbb
dec
jo
push
mov
sub
aaa
es
and
mov
es
fs
push
push
jp
sub
push
sbb
movsb
enter
test
popa
mov
push
push
ljmp
in
lds
cld
imulb
mov
lods
cwtl
fldcw
daa
dec
stc
pop
ret
repz
into
pop
aas
xchg
and
test
pop
xchg
shlb
cmp
xchg
stos
stos
shrb
or
or
insb
xchg
out
xchg
enter
xchg
mov
jae
xchg
ja
and
cmp
jb
adc
clc
pop
push
sub
inc
jmp
mov
sbb
lret
loopne
lock
and
fs
test
lock
iret
testb
fistpll
inc
mov
mov
fs
int3
sub
cmpsl
repnz
jecxz
mov
and
mov
lcall
or
int
es
pushf
mov
cmpsl
and
and
xor
imul
jmp
sbb
push
or
push
insb
inc
dec
push
gs
aam
sub
xor
jnp
push
insl
jl
push
out
ffree
cmc
shlb
push
stos
pusha
or
or
dec
pop
mov
xchg
add
repz
fmuls
mov
cmp
push
mov
push
push
icebp
fst
xchg
mov
push
stos
dec
pop
fcmovnb
pusha
add
lret
push
dec
addr16
adc
mov
addr16
aam
loopne
inc
rcrl
and
movlps
test
lock
adc
fcmovnb
or
jmp
out
mov
xchg
cld
into
sub
pop
popf
xchg
mov
in
mov
cltd
or
and
cmp
sub
stc
stc
nop
mov
mov
das
xor
jns
das
mov
sub
enter
cld
call
push
ja
mov
test
cmpsl
loope
out
pminsw
les
mov
or
lcall
or
dec
jg
mov
pop
xchg
fsub
call
in
ja
add
push
jbe
mov
imul
xchg
test
jae
popa
push
mov
xor
test
fstl
bound
aam
loop
adc
cld
sbb
test
mov
pop
xchg
sub
cmp
cmovns
lds
jne
or
shll
stc
stos
fistps
jmp
out
imul
sub
pop
lds
push
push
adc
and
adc
sar
js
sahf
jp
movsl
aaa
mov
repnz
stos
rorl
push
fxch
push
call
xor
sub
loop
jecxz
mov
xchg
das
pop
out
add
xor
sub
int3
jno
popa
sbb
mov
mov
push
inc
andb
insl
or
xor
adc
push
mov
mov
add
jne
dec
in
cmp
adc
test
mov
scas
mov
mov
in
xchg
loop
xor
inc
jo
cmp
out
fcomp
scas
xchg
jle
in
or
fdivs
or
inc
fcomps
arpl
push
das
ret
lret
cmc
arpl
fsts
stos
mov
lcall
mov
cmp
cs
rorl
xchg
cmp
xchg
bound
test
sub
rcrl
stc
pushf
cld
adc
mov
imul
lret
cmp
faddl
out
movsb
xor
lock
push
xchg
es
in
orb
pushf
jp
mov
mov
enter
adc
sbb
mov
imulb
imul
lahf
cmpsl
scas
mov
adc
adc
lcall
sbb
dec
addb
pop
fadd
sub
xlat
dec
jb
fmull
notb
mov
xchg
inc
inc
psllq
fisubrs
cli
pop
mov
adc
rcr
jae
outsb
ret
ljmp
cmp
test
sub
ljmp
jbe
jmp
and
pusha
or
cmp
inc
pop
insl
mov
xchg
mov
flds
inc
jbe
subl
mov
dec
jne
push
rcrl
jo
repz
stos
jne
jl
fmul
cmpsl
mov
lahf
sub
and
push
jnp
pop
sub
push
push
pop
fimuls
push
ret
in
sarb
imul
movsl
push
nop
fidivrl
aaa
scas
xchg
insb
adc
or
movsl
into
test
mov
push
push
inc
lcall
add
inc
inc
das
das
inc
push
in
popf
sub
adc
ds
adc
sub
rcr
lret
ror
xchg
fstl
iret
movsl
xor
test
aas
clc
rcll
push
gs
les
xorb
xor
mov
inc
mov
xorl
mov
xchg
lods
call
loopne
data16
or
pushf
cmp
pushf
and
mov
push
push
mov
lock
mov
imul
or
pop
cwtl
faddl
xchg
std
int
pop
mov
mov
int3
lcall
lea
inc
cmpsb
ds
bound
pushf
and
lret
dec
inc
jae
and
xchg
sbb
or
daa
jns
idivl
mov
mov
hlt
pop
and
loopne
mov
bsr
in
aaa
mov
mov
adc
hlt
and
and
push
movsl
mov
out
or
scas
add
repz
test
inc
cmc
mov
lods
fildll
leave
orl
bound
iret
mov
pop
iret
and
in
orb
xor
mov
cmp
pop
in
xchg
std
shll
in
sub
sbb
or
cmp
fwait
sub
mov
test
adcb
jnp
jnp
les
mov
push
mov
movsl
cmp
testb
push
xchg
stos
cs
lea
xchg
or
push
pushf
sub
test
cmp
xor
sbb
mov
adc
cli
sub
cmp
and
out
aam
mov
push
in
loope
lret
and
lret
cmp
in
cwtl
cmp
stos
shlb
sbb
jb
in
pop
fists
inc
cmp
outsl
cli
jbe
xchg
mov
cmpsb
jg
or
dec
test
jb
inc
adc
arpl
fisubs
lcall
leave
out
jecxz
dec
stc
inc
ds
adc
dec
std
ljmp
adc
sbb
dec
jecxz
fbstp
mov
jl
sub
adc
cli
sbb
lcall
adc
xor
test
mov
adc
jns
in
xor
mov
scas
lock
xchg
mov
out
xchg
shl
sub
ret
mov
fimull
add
into
jge
movsb
ror
roll
lldt
adc
and
add
jl
ret
or
divl
loope
gs
inc
pop
mov
icebp
jno
outsb
push
mov
add
pop
push
sbb
pop
cmp
loope
dec
dec
xor
lea
inc
and
imul
aaa
sub
push
jecxz
mov
xchg
adc
jnp
repnz
jnp
jge
test
xlat
xchg
stc
sub
lret
arpl
adc
adc
fsts
adc
sarb
pushl
jl
int
pop
push
adc
into
setne
sti
jmp
cli
fincstp
or
mov
int
rcrb
popf
push
fnstcw
aas
inc
loop
mov
pop
data16
xchg
into
icebp
push
sub
jmp
out
sbb
scas
inc
dec
in
rcrb
mov
fsubrl
and
into
stos
test
call
lret
push
xor
mov
push
scas
pop
sub
mov
xchg
jmp
xchg
dec
xor
dec
sbbl
es
pop
sarb
mov
jno
cltd
rorl
or
cli
sbb
rcrl
sub
jns
aas
in
int
xor
sub
stos
cmp
and
loop
mov
data16
jns
insl
jmp
or
cmp
push
jns
clc
fwait
sti
and
repnz
adc
pop
inc
mov
subb
sub
sti
dec
daa
fisubrs
cmp
jecxz
dec
dec
inc
adc
aad
into
sbb
mov
push
insl
fldl
outsl
fcmovnb
adcb
jmp
push
push
or
shlb
ja,pt
fimuls
stos
and
das
inc
mov
mov
jle
lret
enter
push
cmpsb
xor
leave
dec
imul
jmp
inc
mov
cmpsb
notb
insb
push
push
repnz
lods
shlb
test
mov
mov
push
jb
and
imul
lock
test
pushl
rclb
jmp
fwait
js
inc
mov
inc
shr
aaa
test
or
je
lcall
int
sub
mov
out
fadds
cmp
xchg
mov
xchg
data16
adc
add
sub
xchg
add
push
out
inc
arpl
mov
hlt
sub
cmpsb
mov
xchg
mov
lahf
daa
pop
mov
in
in
add
inc
pop
cltd
mov
pop
pop
int3
cmp
fstpt
pop
or
int3
or
cmp
sbbl
xchg
add
int
into
shl
cld
loope
lods
insb
add
lret
jle
sbb
ljmp
push
jo
cmp
xchg
jae
and
pushf
call
repz
push
jb
lods
push
rolb
add
push
movsb
sbb
mov
push
rcrb
fidivrs
xchg
sub
mov
jne
xchg
mov
pusha
stos
ja
loope
rcrb
add
adc
adc
add
or
sbb
cmp
inc
insb
cmp
shrb
xchg
jp
cli
imul
jns
sbb
or
xchg
ja
shl
and
xor
je
aad
bound
imul
adc
mov
add
mov
sbb
sub
and
mov
or
mov
dec
mov
loope
lret
ficoms
or
add
enter
mov
ret
dec
mov
push
or
add
mov
xchg
fs
out
xor
inc
loop
int
mov
hlt
push
aas
mov
cmpsb
nopl
lret
sub
or
in
xchg
movsl
sbb
fstps
push
enter
iret
cli
push
das
jle
cwtl
iret
lea
sub
lock
mov
jno
dec
arpl
adcl
cltd
xchg
scas
ret
pusha
xchg
add
inc
int
or
adc
push
scas
je
mov
scas
std
fwait
lods
xor
jae
add
hlt
xlat
sbb
data16
sbb
clc
dec
jne
aas
lds
push
pop
xchg
js
push
jbe
pop
dec
test
movsl
mov
rolb
mov
aam
enter
enter
mov
mov
je
pop
pushf
push
pop
and
jns
orl
mov
mov
fcmovu
outsl
or
arpl
out
insb
lods
jns
cli
gs
and
call
insb
jecxz
and
lock
fdivrl
test
into
aaa
and
add
add
fldt
imul
leave
xor
aas
lds
sbb
xchg
mov
scas
enter
roll
hlt
bound
call
loopne
mov
or
out
leave
pop
divb
add
mov
pop
movsb
push
push
stos
pop
roll
xchg
or
ja,pt
xor
movaps
jno
mov
pop
mov
js
lcall
jp
sub
mov
sbb
in
jge
dec
push
mov
mov
sbb
jnp
xor
pop
push
repnz
dec
repz
or
jle
aas
inc
repnz
mov
popa
mov
mov
pop
push
xor
dec
cli
jge
cli
pop
and
push
mov
fsubrs
das
xor
test
jae
pop
insb
push
cltd
mov
xchg
mov
sub
mov
in
insb
shr
add
outsb
leave
dec
pop
call
test
add
js
shlb
adc
jne
push
and
pop
test
mov
mov
pop
xor
xchg
mov
shr
sbb
dec
sbb
push
or
adc
hlt
into
je
adc
gs
add
in
in
gs
mov
xchg
pop
xchg
shrl
cmp
or
scas
inc
hlt
push
stos
sub
cmpsb
mov
push
dec
adcb
adc
mov
sti
addb
xchg
es
dec
test
subl
push
xor
sbb
xor
mov
adc
fistpll
xchg
pop
jae
push
add
mov
lods
sti
scas
dec
pop
adc
cmc
xchg
fildl
mov
movsl
icebp
out
testl
dec
pop
xchg
adc
imul
call
mov
inc
repnz
dec
clc
dec
andl
push
lret
xor
xchg
je
or
into
cmp
cmpsb
mov
movsl
cmp
iret
jl
sub
inc
push
jns
dec
lret
jbe
fcmove
insl
jg
pop
fs
pop
push
fnstcw
pop
test
enter
pop
lock
test
sbb
jmp
aad
cmp
in
mov
std
subb
push
xor
stos
xchg
pop
sub
std
icebp
push
sbbb
lods
xchg
mov
ret
hlt
push
mov
adc
mov
les
mov
test
aam
and
and
popa
mov
push
movsb
xor
mov
push
les
jb
mov
or
clc
dec
dec
push
inc
fs
scas
sub
pop
xchg
dec
mov
setg
xchg
mov
call
addl
or
mov
mov
or
fcompl
mov
push
inc
xor
lock
mov
je
xchg
sub
fsubs
imul
push
jp
push
adc
push
jmp
sub
jg
cmp
sbb
mov
push
int
enter
data16
pop
sub
push
mov
fbstp
mov
fs
stos
nop
fstps
mov
in
xchg
inc
mov
fcmovne
mov
jge
pusha
mov
popa
jmp
les
nop
push
sbb
stos
push
jb
pop
xchg
add
sbb
outsl
lret
add
pop
in
pop
in
mov
mov
inc
inc
jmp
cmpsb
scas
dec
shlb
jmp
mov
sbb
xor
mov
mov
sbb
sarl
repnz
mov
insb
loop
xchg
lea
sbb
mov
jp
repz
mov
sti
cmp
pushf
pop
add
pop
lahf
pop
and
rcll
pop
ds
push
push
das
ret
loop
fdivrl
jle
aad
mov
insl
ds
inc
stos
jp
lret
mov
mov
lock
ds
pop
std
mov
jmp
pop
dec
push
dec
and
mov
mov
nop
cmp
call
xor
xor
movsl
mov
addl
xor
dec
jp
repz
jne
fcomp
mov
lcall
in
push
out
dec
mov
fsubs
xchg
mov
popf
pop
inc
jg
adc
jl
fmull
sub
mov
mov
sub
adc
out
hlt
into
adc
pop
lods
jae
movsb
popa
scas
ss
jg
sbb
jecxz
xor
in
fstpl
dec
ficompl
lods
loop
pop
rorl
push
mov
jae
inc
jge
inc
movsl
cmp
xor
pop
data16
pop
dec
pop
mov
inc
xchg
shrl
imul
cli
cmc
xor
sti
push
wrmsr
add
ja
int3
adc
fs
adc
push
xchg
out
dec
cmp
xchg
fcmovnbe
cwtl
ja
push
lods
add
mov
add
xor
rcrb
inc
adc
dec
movsb
push
iret
jno
inc
fsts
adc
hlt
dec
xchg
stc
lcall
fcomi
adc
push
mov
shl
cld
cmc
nop
jl
or
cmpsl
mov
fwait
xor
xchg
mov
push
test
or
pop
xor
lahf
rcll
xor
aas
vpor
sbb
mov
mov
push
pop
inc
pop
aad
mov
pop
xchg
loope
inc
in
push
fxam
dec
sbbl
clc
js
shlb
mov
push
xchg
mov
inc
xor
mov
lret
fwait
pop
shll
movsb
inc
test
cmpsb
sub
stos
and
dec
jo
sub
daa
loopne
dec
or
or
jle
sete
sbb
je
mov
xchg
jp
notb
push
rdmsr
aaa
sbb
mov
out
push
ffreep
adc
jne
pop
testl
push
dec
or
stc
dec
icebp
in
pop
ds
mov
jae
mov
in
int
fsts
fcompl
adc
xlat
add
in
daa
scas
stc
inc
sbbb
inc
flds
pop
lahf
mulb
ja
pop
loopne
fnstenv
jg
mov
dec
out
mov
mov
adc
push
das
xchg
js,pn
sub
xchg
fwait
inc
repz
cmp
ds
pop
in
sub
dec
lahf
js
push
iret
mov
std
sbb
js
and
arpl
roll
push
cwtl
icebp
insb
insl
and
insb
mov
mov
popf
popf
xor
nop
insl
movsb
xchg
cwtl
insl
jo
cwtl
dec
insb
pop
ror
pusha
repnz
cli
sub
sarl
jmp
rcl
insb
lock
jg
sub
call
int3
jns
adc
push
cmc
popf
dec
jno
adc
jno
jns
repnz
xchg
gs
mov
push
xchg
bound
jo
test
mov
push
repnz
shrl
fldenv
int
ret
cmp
clc
fwait
dec
test
mov
cmp
lods
add
lahf
adc
or
jne
lret
adc
pop
daa
jns
inc
out
fdivl
xchg
loopne
repz
push
inc
ljmp
arpl
inc
pop
data16
fs
insb
xor
cmc
push
fsubrp
cmpb
in
es
pushf
insb
push
xchg
leave
bound
mov
data16
pop
mov
cmp
mov
int
mov
hlt
sarl
jg
push
orl
inc
xor
and
loop
add
adc
icebp
sti
fmuls
cmovae
idivl
nop
imul
mov
push
mov
dec
jmp
sbb
lret
pop
div
subb
pop
dec
pmulhuw
mov
and
xchg
in
jge
in
or
mov
jbe
out
push
cmpsl
aas
xchg
lret
lcall
jae
push
xchg
push
jle
jns
xor
idivl
dec
movsl
cmp
insb
push
mov
or
push
mov
outsl
cmpsl
or
jg
adc
pop
in
mov
inc
push
xchg
jl
fdivr
in
sub
sbb
push
sbb
aam
loop
daa
addl
or
mov
movsb
cli
or
inc
decb
lock
sbb
inc
xor
test
mov
jg
xchg
xor
fldt
cmp
jno
mov
cmp
pop
push
out
repz
push
inc
adc
xor
add
and
insl
pop
cwtl
add
dec
int
adc
pop
lret
mov
push
add
xor
sub
xchg
filds
in
in
jo
xchg
arpl
setp
scas
pop
ret
ds
pop
pop
xchg
dec
cmpsl
mov
push
sub
or
mov
scas
jo
data16
mov
mov
jno
dec
push
cs
pop
jbe
sbb
stos
cli
pop
out
jno
sub
lret
adc
data16
aas
rcl
aam
std
out
out
ds
fistpl
mov
mov
insl
inc
insl
icebp
aam
and
jg
jbe
mov
scas
into
mov
jne
pop
mov
xchg
and
pop
sub
fdiv
push
and
test
imul
adc
rcl
xor
xor
aas
repz
lock
cmc
movsl
cmp
cmp
ja
push
repz
mov
xor
mov
mov
xchg
inc
pop
or
aaa
jne
xor
jne
sbb
add
stos
popa
stos
inc
dec
sub
fs
adcb
cmpsl
mov
sti
pop
add
mov
shrb
call
sub
dec
adc
insl
jo
out
pop
pop
sbb
idivb
jb
jne
inc
icebp
fnstcw
push
inc
mov
data16
xchg
mov
mov
out
mov
loop
and
push
ljmp
cmp
test
addb
bound
mov
sub
repz
mov
iret
test
mov
outsl
fidivs
pop
call
mov
test
sti
sbb
mov
cwtl
fmulp
imul
imul
stos
ficompl
mov
mov
test
ljmp
aaa
sarl
jns
movsb
dec
add
mov
scas
push
sbbb
scas
inc
insl
xchg
es
push
inc
jl
leave
xchg
fidivrl
jo
testl
jae
xchg
xchg
mov
mov
xor
inc
xchg
rcl
in
dec
xchg
sub
insl
scas
pusha
loope
inc
into
xchg
arpl
mov
mov
add
sub
and
aam
sub
cs
push
fisubl
call
push
rcrl
lea
push
and
imul
jp
xchg
inc
mov
sbb
jne
mov
ja
enter
pusha
rclb
lock
fists
xor
pop
bound
push
dec
pushf
pop
sub
mov
lret
ret
jmp
sbb
pushf
cmpl
cmc
ljmp
movsl
test
jecxz
stos
aam
in
jl
rcrl
rorl
dec
cmpb
loopne
sbb
lret
jp
cmp
or
xor
bound
stos
ds
pop
ss
dec
push
jmp
loop
repz
adc
movsl
in
cli
fs
sub
cwtl
mov
aas
cmp
rolb
push
inc
aaa
lcall
xchg
lret
insl
push
mov
jmp
aas
xchg
dec
adc
and
aaa
dec
idivb
shr
orl
aad
jmp
jg
cmpsb
je
jno
cwtl
mov
in
sbb
cmc
lahf
and
adc
out
rclb
shrl
out
jle
scas
jo
orb
lcall
shrb
movsl
lcall
sbb
or
mov
sarl
dec
fildll
in
fneni(8087
rcl
test
out
inc
push
sub
pop
ror
inc
imul
push
add
push
adc
jl
adc
jnp
add
xor
int3
loopne
pop
mov
fidivs
inc
adc
push
xchg
jnp
sbb
lcall
mov
fildll
add
sbb
push
push
cmp
push
xchg
ljmp
and
sbb
rorl
or
mov
adc
cwtl
mov
iret
push
into
mov
inc
in
pushf
inc
add
dec
mov
incl
iret
fnstenv
mov
testl
xchg
mov
mov
push
fstpl
mov
testb
call
inc
out
jne
je
scas
sbb
out
fdivrs
lea
xor
mov
add
cmp
pop
fstp
pop
inc
loop
loopne
call
or
or
jp
sub
pop
mov
sub
fidivrl
add
cmpsb
popf
popa
dec
pop
cmovno
dec
fimuls
jae
add
xchg
inc
out
cltd
push
lock
ja
push
sti
lret
hlt
push
pusha
repnz
sbb
lock
mov
adc
cmp
xchg
adc
sub
jns
xor
stc
mov
lcall
int
mov
roll
xchg
lods
js
push
jo
cmp
xor
sbb
xor
pop
sbb
mov
insl
lea
push
negl
fsubrp
lock
mov
cli
inc
test
jmp
mov
rorb
test
fisubrl
pop
into
enter
inc
cmp
pop
fsubr
mov
cli
in
jnp
aas
cmp
dec
xchg
or
rol
pushf
add
adc
dec
in
push
add
lods
cmp
pop
mov
cmp
mov
shlb
jge
push
mov
test
es
shll
out
push
fldenv
adc
push
dec
iret
aas
cmpl
lret
sub
dec
negl
pop
xchg
adc
aad
inc
test
clc
add
in
jle
cmc
out
adc
pop
daa
cmc
sbb
cli
divb
adc
inc
cmp
dec
nop
jge
rorl
cmp
das
xor
stos
xchg
out
in
push
cmp
xor
les
shlb
test
cwtl
mov
movsl
xchg
dec
clc
fmuls
sub
movsl
je
xchg
sbb
mov
mov
sbb
pop
ja
mov
divl
shld
push
rorl
cltd
fisttpll
or
sbb
pop
xchg
in
cmpl
adc
aaa
mov
cmp
cwtl
adc
imul
lock
popf
insb
cmp
inc
aam
adc
or
sub
sbb
push
sub
data16
xchg
dec
sub
xor
mov
sbb
sub
add
insl
outsl
movsl
push
data16
and
call
dec
jecxz
xor
lcall
out
xchg
add
rorl
test
out
and
lret
mov
sbb
sbb
gs
mov
mov
push
adc
addb
ret
cmp
sbb
shll
sbb
clc
insb
enter
push
mov
hlt
mov
push
xchg
loope
adc
enter
push
mov
mov
jo
ficomps
fdivl
sub
hlt
xor
dec
ljmp
xchg
xlat
pop
daa
test
loop
mov
and
inc
lahf
lock
inc
push
mov
jne
aam
sarl
ficoml
inc
cmpsb
test
sbb
jns
add
add
inc
add
mov
aad
in
lcall
or
sbb
xchg
mov
jmp
sub
loope
pop
pop
shlb
out
scas
jae
std
out
enter
xor
rcl
es
xchg
mov
fldcw
mov
push
lds
sub
lret
lds
adc
dec
mov
stos
cltd
in
outsl
xchg
scas
sub
push
adc
pop
in
lret
addb
test
jle
out
inc
adc
and
cmpsb
and
and
insb
lds
sbbb
fistpll
cmpl
cmp
xchg
loope
rorl
iret
stos
add
imul
fidivs
ror
jmp
lcall
cmpsb
and
out
jge
dec
xor
outsl
adc
and
adc
mov
das
insl
xchg
adc
xchg
insb
inc
aam
push
loop
dec
inc
jno
cwtl
lock
dec
jb
loop
cmc
iret
xchg
lods
xor
test
adc
mov
int3
clc
stos
aad
add
imul
mov
out
int
ss
aas
scas
or
int3
lods
pop
pop
int3
arpl
mov
enter
lcall
clc
or
jecxz
and
mov
pop
sbb
sbb
jb
inc
jmp
sub
adc
ret
lods
sbb
inc
sbb
push
mov
jae
movsb
mov
jle
push
mov
jp
sbb
das
shll
sbbb
pushf
divb
jbe
jmp
pop
lret
sbb
mov
in
outsl
popf
fwait
hlt
and
jl
dec
dec
jo
pop
or
xchg
mov
mov
inc
adc
push
test
mov
lds
inc
jmp
xchg
pushf
cwtl
push
push
scas
cld
xlat
push
push
pop
xchg
xor
or
mov
mov
xor
sub
stc
adc
pop
jp
xchg
cwtl
push
xor
outsl
jecxz
lods
icebp
push
inc
mov
scas
pop
loope
popf
mov
loop
cli
sbb
sub
xor
insb
cwtl
jle
sub
aam
cmp
loop
jg
cmp
xlat
add
add
nop
sub
out
dec
inc
repnz
adcl
cmp
lldt
mov
in
mov
pop
in
subl
jno
dec
dec
pop
and
shrl
jmp
sub
outsl
jp
pop
cmc
stc
xor
xchg
pop
adc
push
lods
movsb
inc
lcall
cmp
mov
filds
pop
in
cmp
xchg
imul
imul
and
scas
fisubs
sbb
aas
in
dec
push
lea
incb
dec
rcr
outsb
mov
pop
add
call
sub
dec
mov
rcll
add
cmp
cmp
sarl
adc
shl
jnp
addps
xchg
repz
inc
out
sub
iret
jp
dec
sahf
xor
xor
fcomip
rol
mov
je
mov
jnp
loopne
sub
mov
bound
sub
add
int
outsl
xor
insb
xorb
add
loopne
and
sbb
mov
xchg
and
sbbl
xor
mov
inc
jno
dec
orb
dec
or
das
adc
mov
sahf
add
mov
out
faddl
mov
mov
cli
sahf
xchg
inc
add
xor
in
nop
mov
dec
and
icebp
lods
push
scas
cmpsl
xchg
push
insb
faddl
cmpsl
xlat
mull
xchg
clc
arpl
mov
gs
push
inc
jno
rcr
or
movb
enter
cmp
xor
push
or
mov
icebp
test
cmp
mov
pop
sbb
lods
push
stos
dec
mov
popa
loop
mov
hlt
pop
inc
jnp
mov
bound
and
xchg
sub
fcmove
cmc
imul
push
jg
loop
ret
mov
mov
cmp
jns
mov
adc
lods
push
shrd
dec
mov
outsl
pop
inc
sahf
or
mov
mov
inc
lret
jae
mov
sub
inc
mov
or
mov
and
xchg
int3
cmp
cmc
mov
test
imul
fsts
movsb
stos
loopne
cwtl
dec
mov
sbb
dec
dec
xor
xchg
mov
dec
loope
pop
fxch
xor
loopne
mov
imul
inc
xchg
jns
jbe
dec
clc
jp
mov
pop
mov
jmp
fwait
xlat
addr16
in
xor
scas
sbb
gs
push
in
and
clc
mov
testl
or
jg
xchg
arpl
jbe
stos
shll
out
lret
jg
inc
iret
mov
ja
mov
addl
stc
push
sbb
or
popf
sbb
mov
dec
popf
mov
sarl
jle,pt
jae
dec
cmp
or
test
popa
testb
test
nop
fnstsw
outsb
xchg
add
sti
bound
call
mov
add
aaa
inc
xchg
and
sub
xor
lds
stc
das
es
sbb
shll
push
ds
mov
mov
jmp
mov
sub
scas
imul
popf
jno
jge
je
pop
sub
adc
sbb
fisubs
and
dec
roll
repz
movsl
das
popa
xchg
pop
push
cmpsl
daa
movsb
aaa
xchg
mov
mov
cmpsl
lahf
mov
xor
insb
adcl
push
enter
xor
into
test
adc
adc
leave
sahf
fiadds
fdivp
jl
sbb
mov
dec
arpl
push
jne
icebp
sbb
movb
jae
mov
mov
shll
shrl
pop
sub
sub
jns
sbb
or
xchg
add
incb
lret
sar
data16
into
fwait
pop
cmpsb
and
mov
shr
adc
mov
mov
sub
sbb
fdivrs
sbb
movsb
add
push
mov
icebp
daa
sbb
cmp
jbe
in
push
and
mov
pop
mov
loop
inc
mov
adc
fs
nop
xor
jl
mov
mov
push
pop
add
adc
mov
cmpsb
jecxz
xor
push
cmp
mov
pop
push
imul
mov
mov
sbb
pushf
arpl
loopne
add
hlt
out
movsl
out
stc
repz
xor
pop
mov
mov
or
mov
outsl
aas
scas
ds
sub
push
pop
es
lods
pushf
out
cltd
lock
pushf
push
mov
add
je
pop
xor
sub
ss
push
xor
inc
insb
sbb
xchg
mov
notb
or
outsl
out
jae
mov
das
clc
imul
bound
push
in
and
adc
add
lret
sub
rcrl
mov
xorb
pop
pop
ds
dec
pop
ficomps
out
mov
test
stos
clc
leave
jo
or
xchg
js
push
in
add
cmp
xor
loope
insl
jle
lds
cmc
fwait
fs
push
cmpb
out
test
dec
push
cwtl
in
pop
sbb
sbb
jg
fwait
jae
movsl
push
rcrl
mov
lret
outsl
mulb
into
popf
xor
jl
ljmp
jbe
add
or
push
push
loopne
xchg
mov
out
or
mov
sub
cmpsl
andl
mov
sub
jo
jnp
sub
fists
dec
or
cld
out
faddp
xchg
jbe
mov
repnz
loopne
sub
jp
lods
clc
bound
ljmp
push
pop
and
out
data16
mov
loope
mov
fistpl
scas
cltd
add
adc
sbb
push
mov
loope
cwtl
ljmp
mov
into
xchg
xor
repz
mov
mov
cmpsl
arpl
addl
mov
jb
test
add
cld
xor
mov
aad
fsubrs
inc
or
outsl
fsubs
hlt
mov
jmp
push
fistpll
sbb
jnp
cmp
icebp
sahf
push
dec
adc
shl
or
mov
cs
leave
iret
and
lret
push
or
insb
xchg
push
in
or
adc
mov
pop
lret
movsl
push
in
mov
xor
out
dec
sbb
ret
pusha
mov
pop
add
fs
mov
push
mov
ficomps
inc
sub
fsubp
ret
movl
jg
out
addr16
lods
fadds
insb
in
or
sub
dec
fsubs
movsl
in
push
mov
loope
adc
in
cmpsb
gs
fs
outsl
addr16
jbe
ljmp
ret
lret
pop
xor
imul
mov
sub
mov
xor
add
popa
mov
sbb
xchg
stos
jecxz
mov
push
xor
pop
ljmp
scas
push
std
dec
movsb
and
mov
enter
or
sub
popf
pop
push
mov
cli
stc
sahf
lea
mov
aas
std
inc
jo
pop
cmp
add
mov
jns
xor
inc
or
push
adc
call
dec
push
enter
xor
stos
push
cmpxchg
stos
out
pop
push
inc
mov
or
jmp
xor
sarb
popa
daa
mov
or
inc
inc
xchg
mov
arpl
popf
jg
jecxz
dec
divl
ds
std
clc
push
push
and
mov
sarl
inc
mov
cwtl
sbb
js
test
xchg
sub
inc
repz
and
or
inc
cli
lods
and
xchg
int3
in
xchg
mov
loop
in
jge
mov
cmp
jmp
fists
jg
mov
inc
cmc
jg
mov
mov
lret
inc
dec
dec
jge
std
fmuls
pop
andb
and
fdivs
cmc
aaa
mov
pop
and
lcall
jo
jns
movsl
lea
lds
sub
pop
pop
ret
scas
jo
xor
and
dec
xchg
lods
cli
popa
lods
cmp
outsl
gs
ss
inc
xchg
pop
cmp
and
and
sub
shlb
pop
cmp
jns
jo
scas
jb
inc
sbb
nop
jl
shrb
pushf
xlat
add
pop
insl
fld
sti
xor
push
mov
or
into
fisubrs
xchg
pop
mov
push
je
jecxz
and
push
inc
cmp
fidivs
pop
fidivl
mov
fildl
fldl
mov
push
pop
sbb
daa
dec
or
jbe
stos
add
sbb
inc
sbb
ss
xchg
test
pushf
pop
inc
mov
loope
or
sbbl
sti
pop
sarb
test
inc
xor
lea
lret
pop
push
sub
aas
add
pop
fnstcw
ljmp
mov
out
lahf
addr16
gs
xchg
push
aaa
or
bound
fistpll
std
in
and
addl
sub
out
push
mov
gs
cli
lods
cmpsl
push
xor
inc
dec
mov
cmp
sub
leavew
lock
sbb
cmp
lock
jle,pt
movsl
inc
push
sub
push
ss
or
test
in
and
lock
mov
sbb
mov
push
dec
and
fxch
test
cmp
ljmp
cli
adc
dec
cmp
mov
aam
jno
stos
in
aad
fs
mov
pop
mov
scas
xor
addb
push
dec
jns
jecxz
stc
aaa
xor
outsb
xchg
push
cld
fstps
leave
pop
outsb
mov
shlb
jmp
xchg
outsb
int3
out
rcrl
push
mov
inc
cmp
fs
sbb
test
call
mov
pop
loop
loopne
out
or
cmpb
sbb
jbe
pop
xchg
loopne
jnp
or
popf
clc
fwait
lret
ficoml
mov
repz
push
inc
cwtl
mov
sti
cld
ret
push
mov
sahf
mov
cmp
xor
cmp
dec
mov
or
mov
inc
push
mov
and
je
mov
pop
or
cmp
jbe
rsqrtps
sub
sub
addr16
test
push
not
stos
test
cmpsb
push
sbb
mov
in
and
ret
cwtl
inc
into
push
call
push
arpl
ret
scas
aaa
movsb
push
rcrl
adc
neg
repz
test
inc
cmp
das
push
jl
andb
dec
mov
ss
aam
dec
cli
push
push
jbe
stc
lahf
cs
push
push
or
push
mov
pop
loopne
adcl
lcall
xor
pushf
in
pop
loop
push
subb
add
pop
cmp
jmp
xchg
call
out
cmp
dec
imul
push
push
movsb
add
mov
and
jmp
std
pop
jns
xor
mov
xor
loop
in
sub
mov
ret
mov
and
movsl
out
push
loopne
jecxz
dec
mov
pushf
bound
sbb
pushl
sbb
mov
stc
mov
ljmp
test
xchg
mov
push
add
jne
inc
push
call
inc
je
aas
pop
or
xor
test
lods
xor
cmpsb
imul
nop
push
js
fisubl
mov
cmp
hlt
jno
cmp
rcrl
cwtl
push
adc
push
arpl
mov
dec
mov
mov
cld
fsubr
cmp
loope
cmpsl
sub
stos
dec
xchg
lret
aaa
mov
out
mov
fmull
out
or
call
into
stos
mov
pop
mov
inc
mov
sbb
mov
stos
scas
mov
scas
mov
cmp
add
pop
insl
movsb
ds
xchg
sbb
cwtl
stos
mov
inc
shlb
pop
jbe
jle
ds
mov
iret
cmp
ret
xor
test
inc
cltd
bnd
mov
aas
jno
sbb
test
inc
cli
inc
jg
xchg
enter
call
in
loope
pop
push
test
pop
dec
inc
adc
cmp
int
mulb
sub
and
lds
mov
clc
pusha
cmpl
inc
dec
mov
imul
push
or
imul
mov
jae
xchg
xor
nop
mov
mov
in
mov
or
cltd
cmpsb
fildl
negb
xor
xchg
cwtl
mov
out
adc
test
arpl
ficompl
lcall
fcmovu
mov
dec
rcrl
inc
xchg
push
jg
or
in
inc
leave
cmp
outsb
jecxz
push
mov
xchg
push
in
adc
bound
jp
xor
fwait
xchg
fwait
lret
pop
sub
jl
neg
call
test
loopne
sahf
add
sub
inc
lcall
adc
outsb
loope
mov
or
test
icebp
and
imul
pop
inc
pop
je
inc
xor
mov
outsl
ss
jle
pop
sub
push
fadds
mov
fwait
cmpsl
cmp
adc
cwtl
shl
mov
ds
or
jp
dec
dec
mov
das
sub
out
adc
aad
and
adcb
cmpsb
scas
push
pop
loop
pop
pop
in
jle
or
outsl
enter
jle
mov
jecxz
jle
adc
movsb
sub
cltd
fidivrl
mov
rorb
pop
in
adc
aam
jge
lea
sbb
adc
jbe
lahf
and
adc
icebp
cmp
shlb
sbb
fcomp
movsl
mov
lods
sub
nop
push
loop
push
into
es
mov
es
imul
cmp
mov
add
scas
outsb
adc
jg
dec
and
test
cmc
pop
cltd
imul
push
into
add
sahf
fstl
pushf
push
jmp
jo
pop
mov
out
aad
inc
or
add
xor
pop
mov
repnz
adc
mov
xor
repz
popa
mov
add
sbb
std
jmp
lret
lds
movsl
xchg
scas
cmp
call
les
mov
push
loope
xlat
aaa
aam
std
or
ja
les
inc
sub
xchg
mov
add
jl
dec
inc
fisttps
push
nop
jmp
addb
jl
sbb
dec
imul
sub
fucomi
jecxz
dec
xlat
pop
stos
mov
push
add
out
pop
inc
jp
mov
pop
cwtl
cmc
iret
sub
lcall
ja
sarb
mov
mov
lods
cmpsl
call
mov
je
andb
stos
jae
js
xor
add
repz
sbb
mov
xchg
stos
xchg
notb
mov
mov
cli
aas
dec
shlb
lret
fwait
js
loope
das
test
in
sbb
or
inc
lret
sbb
and
xchg
or
xor
sti
scas
ret
push
or
into
dec
mov
push
sub
push
pop
cmp
aam
push
jmp
outsl
push
mov
xor
push
scas
or
jge
loop
aaa
in
or
ss
add
insb
cmp
lcall
pop
jmp
mov
jp
jae
pop
je
mov
xor
mov
mov
orb
fldcw
mov
out
jl
jl
les
mov
push
cld
cmp
fiadds
int
fbstp
rolb
jb
jecxz
mov
clc
jl
js
sbbl
xor
cs
or
cmp
sbb
rorb
leave
xchg
repz
dec
add
push
push
xchg
fbld
cltd
test
inc
pusha
outsl
jg
add
xchg
lock
xchg
push
push
mov
push
push
lcall
mov
cwtl
jp
xor
inc
bound
mov
int
rol
add
cmove
out
dec
jbe
push
in
lret
das
sbb
sbb
xchg
jbe
stc
aam
add
rorl
push
jo
fdivl
fisubl
out
mov
roll
andb
in
loop
shll
mov
inc
xor
test
push
mov
repnz
insb
jnp
dec
mov
fstpt
les
in
xchg
je
jnp
dec
std
ss
push
jae
add
es
mov
shll
mov
dec
lret
fwait
sbb
fcoms
iret
pushl
jns
mov
jecxz
dec
or
shll
cmpl
loope
lret
ret
cmp
mov
add
in
out
mov
sbb
xchg
xchg
pop
lret
and
aam
inc
push
iret
test
aam
mov
jno
xlat
pushl
addr16
imul
mov
addb
sub
mov
or
sbb
lods
lods
mov
mov
addr16
fcmovnu
arpl
pop
jle
movsb
lret
fcmovb
fimull
sti
cmc
mov
shl
lahf
pop
pusha
fadd
adcl
push
xor
fs
inc
loopne
dec
cmp
ret
repz
loopne
mov
pop
mov
push
inc
mov
xchg
loop
shl
fwait
subb
sbb
test
jmp
xchg
sub
aas
push
or
or
jmp
sahf
idivl
cmp
je
mov
xchg
icebp
rorb
jae
inc
out
jecxz
jle
pop
ss
dec
xor
jo
clc
inc
adc
xorb
jb
mov
or
mov
fwait
arpl
lret
aad
sldt
sbb
adc
xor
xor
rorl
cmp
xchg
addr16
cmp
fcomps
loope
cmpsb
pop
cld
pop
js
add
xor
mov
dec
jp
jmp
shll
cli
mov
mov
jo
mov
mov
test
adc
shr
mov
pop
push
fdivl
mov
lahf
push
test
fnstcw
jle
or
in
cmp
xlat
stc
scas
and
pushf
sbb
stos
sub
add
xor
lods
sahf
call
into
lock
inc
stos
cld
stos
cli
f2xm1
or
cmpsl
jbe
scas
xchg
aaa
call
add
outsl
scas
mov
aas
test
popa
pop
cmp
insb
dec
aam
lea
lcall
cs
xchg
push
xchg
stc
xor
xchg
mov
je
adc
mov
add
xor
jne
ret
inc
push
pop
pop
add
xorl
stos
scas
enter
mov
pop
pop
mov
push
and
orl
dec
cmp
call
dec
imul
cmp
mov
adc
lea
fiadds
fwait
xchg
cmp
std
sub
sbb
cmpsb
cwtd
fistps
fldenv
imull
mov
inc
mov
mov
push
out
cmp
or
adcb
mov
bound
jecxz
mov
push
mov
dec
shrb
popf
int
js
arpl
mov
mov
sbb
sbb
push
jl
jl
testb
lods
cli
xchg
es
sbb
dec
mov
or
jno
dec
sub
imulb
loop
pop
scas
fld
movsb
inc
or
add
adc
mov
mov
in
sbb
mov
stos
mov
mov
xchg
push
inc
mov
sahf
fldl
jns
test
scas
mov
mov
jb
sbb
xorb
push
scas
mov
mov
das
fbld
mov
jg
insb
fnstcw
xchg
push
daa
in
pop
rorl
push
stos
daa
add
movsb
cmp
mov
shr
mov
insb
add
sbb
ljmp
pop
aas
test
popa
mov
in
mov
push
mov
push
mov
sbb
sub
aas
and
pop
jle
sub
icebp
je
daa
inc
or
pop
pop
icebp
push
fmuls
sub
cmc
cld
loop
push
addb
test
arpl
pop
and
fwait
nop
push
cmp
mov
in
popa
cmp
in
xor
cmp
cmp
xor
sahf
scas
fs
pop
in
cmc
mov
fsts
shl
jae
subl
add
enter
and
in
jns
xor
aaa
and
or
mull
idivl
jo
cld
adcl
adc
or
cwtl
xchg
inc
xchg
bound
mov
cmp
arpl
xchg
or
pop
in
add
or
loope
cmp
push
cwtl
adc
sub
and
fldcw
imul
loop
xchg
xchg
jae
and
jnp
add
sbb
adc
mov
mov
jns
sbb
inc
jns
loope
mov
pusha
mov
outsb
mov
cmpsb
incb
loope
loope
popf
aad
lcall
movsb
mov
mov
pop
cs
bound
int
gs
in
jmp
and
sti
fstps
mov
lds
nop
mov
pop
rcrl
add
popa
lea
mov
push
mov
add
mov
inc
sub
shll
mov
inc
sbb
add
bound
jmp
aaa
mov
ljmp
arpl
mov
int
sub
adc
cwtl
inc
addb
lret
mov
std
sbb
aas
sub
sbb
rcll
push
xor
pop
sub
mov
es
cmc
sub
loop
jnp
dec
mov
cmp
add
movsl
leave
ficompl
outsb
loope
dec
scas
sbb
jg
movsl
in
fists
xchg
mov
popf
fimull
inc
push
stos
mov
sub
ja
lods
lods
dec
pop
test
push
add
fimull
dec
xor
movl
testl
shl
or
add
jne
bound
fidivrs
add
cmp
test
movb
inc
mov
jle
pop
leave
push
iret
leave
dec
pop
je
imul
inc
add
loop
push
inc
int
popa
sub
loopne
fstpt
lret
aad
faddl
clc
cmpsl
in
out
push
mov
push
mov
sbbb
mov
rorl
insb
inc
clc
and
insb
fistpl
cmpb
lock
push
push
pusha
loopne
lods
adc
mov
inc
xor
inc
push
mov
adcb
pop
dec
adc
add
std
int3
movsl
loopne
jl
frstpm(287
xchg
push
dec
daa
xchg
imul
cmpsl
push
pushf
and
mov
mov
cmpsl
inc
sti
lea
rcrb
insl
dec
push
mov
movsl
orl
xchg
std
insl
pop
iret
in
shr
mov
inc
jo
ret
sbb
mov
orl
mov
subl
mov
push
and
scas
addr16
add
imul
sarl
roll
stos
cld
adc
mov
fcmovne
and
mov
dec
fcmove
sub
xlat
aas
push
mov
pop
cmove
push
aam
xlat
into
idivl
xchg
adc
ret
hlt
leave
xor
stos
mov
loop
push
out
cltd
adc
iret
push
call
ret
test
out
mov
sub
iret
ja
std
add
mov
arpl
cmp
jb
repz
sbb
push
xor
nop
sbb
adc
cmpb
or
icebp
in
cld
shlb
outsb
dec
pop
fiaddl
insb
shl
inc
mov
mov
sbb
add
jl
mov
ja
js
jmp
insb
jno
sahf
pop
insl
stos
mov
negl
shr
jg
adc
comiss
imul
add
jecxz
sbb
xchg
jmp
into
cwtl
mov
sbb
into
out
fwait
negl
mov
mov
jmp
mov
lea
and
lcall
pop
popf
fstps
sbb
and
clc
lahf
cmp
cmpsl
or
ret
xchg
sti
mov
inc
rol
inc
xor
aad
aam
add
add
adc
orb
push
mov
cmp
mov
test
jl
dec
sarl
into
fsubl
pop
inc
stos
xchg
pop
add
fisubl
imul
xor
add
lea
mov
int3
scas
add
fildll
mov
movsl
dec
sub
imul
jo
xlat
sahf
ds
fdivrs
cli
adc
adc
pop
pop
mov
insl
dec
xchg
jo
sbb
cmp
cmpsl
cmp
adc
xor
or
adc
pop
pusha
inc
sahf
xor
pop
inc
aaa
add
mov
add
sub
ss
out
mov
dec
int3
dec
je
mov
out
in
sbb
xchg
mov
cwtl
outsl
dec
jnp
fs
jbe
fcomi
lock
jae
dec
and
nop
out
cmp
nop
cmp
ljmp
sahf
test
lret
js
push
int
lret
jl
jae
popf
fcmove
xchg
iret
subl
and
movsb
push
scas
push
popf
sub
fstpl
dec
cmp
pop
hlt
ret
pop
cltd
and
add
ljmp
mov
stos
fisttpl
jg
lods
mov
popa
add
mov
xchg
xchg
popfw
push
leave
sahf
sahf
nop
subb
add
inc
cs
and
int
xchg
es
and
add
jmp
xor
pop
sbb
xchg
orl
jl,pn
pusha
cmp
xor
gs
xchg
push
frstor
cmp
sbb
dec
aad
jecxz
adc
dec
add
ret
push
popa
in
inc
add
icebp
stos
pop
pop
sbb
or
pop
pop
pop
push
push
mov
hlt
cmp
test
in
push
cltd
pop
arpl
gs
emms
mov
and
xor
cmc
outsb
jne
sbb
pop
dec
jne
test
cmp
xlat
sbb
mov
mov
sahf
push
push
xchg
inc
rorl
cmp
lret
mov
mov
popf
pusha
dec
pusha
cmp
xor
pop
clc
mov
jge
jns
adc
or
in
insl
test
push
sub
outsb
mov
sbb
inc
pop
out
test
dec
sub
pushf
ds
sub
xor
inc
add
mov
xor
jno
les
dec
in
scas
arpl
cmpb
cltd
jg
pop
arpl
aad
out
push
daa
jno
repnz
cmp
push
lcall
jns
ret
mov
mov
ret
testb
idivb
or
stos
icebp
sub
icebp
incb
stc
mov
xchg
cmp
or
scas
or
cltd
ss
ss
loope
adc
jmp
sbb
icebp
sbb
cld
and
sti
out
imull
xchg
push
int3
xor
shrb
stos
enter
and
mov
lds
jg
sbb
mov
cmp
mov
or
fcmovnb
push
or
dec
inc
mov
iret
mov
cmp
insb
out
adc
fcmovu
xchg
call
add
xchg
adcb
push
data16
enter
daa
adc
test
jle
mov
sub
fimuls
mov
les
or
adc
xchg
scas
loopne
push
add
sarl
fdivl
push
xchg
cld
cmp
cld
and
dec
jns
xchg
cs
mov
mov
in
cmpsl
add
or
sbb
rclb
shll
push
mov
mov
add
clc
fstpl
pop
fs
adc
adc
and
xor
stc
xchg
fldl
pusha
enter
mov
lods
cmp
inc
cltd
andl
sti
mov
jmp
jmp
and
out
lahf
xchg
cmp
fdivr
repz
out
pop
movsb
mov
xchg
dec
xor
add
pop
out
jl
scas
mov
es
pushf
xor
inc
into
xor
jno
outsb
mov
dec
jecxz
dec
mov
lods
cli
jl
clc
xorl
push
mov
int3
dec
mov
rcrl
cmc
xor
shrb
popf
cmp
call
jg
das
mov
sahf
mov
add
fucomip
dec
nop
xor
pushf
or
outsb
inc
inc
jne
cld
inc
pop
adc
int
lea
cli
xrelease
xchg
mov
cmp
es
int3
in
sub
scas
outsl
cmp
adc
mov
int
int3
js
inc
xchg
mov
mov
jb
mov
jg
jno
into
sbb
xor
lret
out
cld
add
cld
mov
fwait
mov
push
sbb
sbb
test
stos
leave
pop
jb
mov
adc
lea
pop
notl
xorb
je
ret
gs
je
and
ret
mov
icebp
add
leave
dec
adc
mov
sub
loope
mov
push
repz
mov
inc
jns
xor
mov
loope
push
cmpsl
loopne
push
sub
pop
inc
jge
inc
pop
bound
mov
repnz
xchg
inc
lds
js
fwait
sub
inc
addr16
and
in
mov
inc
repz
in
aas
sbb
xor
iret
push
or
cmp
adcl
jp
inc
mov
mov
push
lret
mov
mov
push
shlb
arpl
fwait
imul
adc
mov
xor
ret
mov
xchg
out
sub
je
inc
jbe
jl
fstpl
test
mul
gs
xchg
lret
dec
repz
insb
rorl
ljmp
lcall
mov
mov
mov
mov
or
testl
xchg
jns
dec
cmc
mov
add
and
rcl
jp
shl
movsl
pop
mov
cmp
in
jmp
mov
cwtl
fmull
int3
inc
push
loopne
jmp
mov
scas
lret
jmp
cmp
rolb
mov
in
add
sub
daa
ror
jmp
pop
adc
insl
sub
out
pop
call
mov
fdiv
cmpsl
aam
mov
cmpsl
inc
mov
push
pop
in
cli
imul
jp
repnz
and
pop
push
inc
lret
mov
add
and
cmp
mov
mov
pop
out
pop
jns
in
sbb
and
rcl
scas
jmp
inc
hlt
sbb
mov
mov
mov
xchg
push
jg
ja
leave
mov
aaa
cmp
sbb
popa
loopne
into
or
cmp
inc
test
ret
inc
out
inc
in
aaa
pop
out
test
pop
adc
gs
cltd
cmpsl
dec
sub
mov
pop
add
pop
pop
aaa
and
cpuid
loop
jno
and
xlat
pop
mov
dec
sbb
int3
enter
or
test
inc
and
test
sbb
cs
dec
xor
xlat
repz
push
mov
imul
gs
pop
mov
out
daa
push
sbb
jecxz
xor
add
cmp
dec
mov
dec
mov
insb
loop
out
in
lahf
mov
in
dec
clc
ljmp
mov
scas
in
xlat
addr16
into
cmpsb
sbb
out
inc
sub
sbb
or
test
flds
xchg
jmp
sub
cmpsl
mov
dec
ljmp
mov
push
sub
pop
pop
out
pop
nop
mov
push
mov
inc
fwait
ret
xor
bound
jne
outsl
fwait
std
sub
mov
sub
cmc
add
fstpl
sub
xor
dec
jb
movzbl
ljmp
in
jo
sahf
cmpsl
rclb
xchg
sub
lds
push
jns
das
test
insl
or
xchg
push
test
outsl
dec
test
sti
xor
adc
pop
ljmp
sbb
and
pop
mov
or
and
jo
jo
mov
mov
shlb
call
cmp
ljmp
int3
xor
mov
jno
ljmp
jne
cmp
fdivrs
out
mov
mov
subb
sbb
add
ljmp
mov
jae
push
cmp
mov
fbld
sub
fiadds
fwait
int
rclb
test
in
int3
nop
push
jecxz
sti
pop
adc
and
adc
lret
in
addl
mov
mov
inc
mov
enter
int3
lock
lods
loopne
outsb
cli
js
pop
sub
divb
dec
cltd
movsl
test
jno
xchg
outsb
cltd
arpl
iret
adc
roll
arpl
dec
cs
and
rol
dec
loope
stos
jp
lds
mov
adc
cmpsl
test
mov
jnp
jbe
xor
adc
popf
in
out
cmpsb
jp
adc
xchg
icebp
cmp
imul
mov
adc
insb
push
outsl
adc
shlb
ljmp
fildll
jo
dec
push
shll
js
cmp
inc
pusha
cmp
test
les
pop
adc
sbb
outsb
lds
and
rorb
ds
sbb
add
sbb
and
rcll
push
xchg
insb
jge
insl
aaa
aas
adc
movsl
mov
add
pop
mov
negl
mov
movb
sub
dec
into
and
int
movsl
test
mov
push
cmp
mov
mov
sarb
sub
ds
sbb
jge
daa
adc
cmp
pop
subl
popf
fwait
xor
ja
xor
push
jmp
out
xchg
movb
sbb
aad
aaa
cli
lret
pop
fcompl
pushf
ds
mov
adc
push
pop
orl
mov
lods
out
fwait
ret
daa
and
roll
xor
imul
jp
push
enter
push
hlt
add
inc
mov
pop
fdivrp
jbe
ss
imul
enter
push
sbb
test
out
push
push
pop
daa
stos
data16
stc
jo,pn
push
not
sub
mov
loope
mov
std
cltd
aaa
stos
jmp
imul
clc
xor
sbb
test
pop
test
mov
xor
loopne
dec
dec
gs
and
push
fstpt
add
cld
sub
jl
hlt
pop
jecxz
fsubrp
sub
add
mov
fwait
mov
and
inc
xchg
ljmpw
inc
movsb
popa
xchg
xchg
idiv
pop
adc
cmp
xchg
sub
inc
sub
inc
sti
dec
rclb
nop
jp
test
js
outsl
movhps
pop
jne
pusha
gs
mov
or
jnp
flds
enter
mulb
cmp
sarl
fidivs
fwait
cmp
rclb
push
jmp
mov
jno
popf
dec
popa
mov
xchg
and
dec
xorl
loopne
xor
sahf
xor
cmp
shl
dec
cmp
outsb
or
and
je
inc
rorl
lahf
outsl
mov
ss
inc
or
xor
aam
shl
sub
test
lret
push
jge
sbb
jb
out
psubd
xor
or
jbe
add
pop
test
inc
xor
push
jle
dec
pop
leave
add
jg
pop
mov
adc
mov
js
lahf
shlb
aad
adc
add
push
inc
loop
gs
pop
add
xchg
push
adc
push
outsl
jb
jg
sub
fs
in
leave
and
and
leave
lcall
loop
and
or
sub
and
sarb
sahf
jo
cmpl
xchg
jns
xor
xlat
sbb
sahf
sub
cmp
inc
popf
pop
jle
in
add
rcl
cmp
mov
stos
push
and
repnz
vmaxps
shrb
and
in
sbb
int
shrb
iret
insl
in
test
xchg
cmp
leave
insl
push
push
sbb
arpl
leave
out
pop
and
int
lds
jne
dec
mov
outsb
xchg
cli
mov
add
xchg
in
jbe
and
aad
cmp
xchg
dec
add
fimuls
cmp
push
jle
mov
fcmovu
insb
push
jge
pop
pop
pop
pop
mov
push
push
push
int
xchg
mov
inc
mov
mov
cmp
push
aam
jb
std
lds
mov
sbb
pop
fdivl
dec
incb
sbb
fisubrs
fs
in
mov
aaa
mov
lock
or
push
push
test
mov
cltd
cli
or
inc
lcall
sub
ret
call
inc
sahf
xor
std
arpl
pushf
mov
lds
adc
daa
xchg
inc
mov
lcall
int
dec
jae
fwait
fwait
xor
fistl
rcrl
xlat
es
ds
nop
movsl
xchg
jae
push
jns
jmp
cmp
xor
pop
fnsave
dec
pop
in
mov
xor
int
push
jbe
or
addr16
mov
leave
insl
adc
jae
pop
cmp
cmp
fistps
fwait
mov
adc
mov
aas
scas
scas
std
adc
lcall
rolb
mov
in
cmp
dec
cmpsb
cld
test
andl
mov
lret
sub
sub
xchg
xor
mov
in
lea
or
sub
or
add
sub
jne
mov
repz
cld
mov
lret
jg
pop
repz
arpl
mov
mov
push
sahf
cmp
and
mov
xchg
shlb
add
push
outsb
add
inc
ja
leave
add
ds
dec
add
jp
cmp
push
mov
mov
in
push
lods
pop
loopne
push
xchg
sbb
inc
xchg
dec
int
sub
fs
inc
sbb
fwait
jnp
arpl
sahf
jp
and
sbbb
inc
xchg
fidivrs
adc
in
push
mov
add
loop
lods
mov
push
lret
jbe
xor
hlt
mov
movsl
mov
xchg
wbinvd
scas
jae
arpl
inc
push
jns
stos
sub
xor
or
mov
push
jo
out
btrl
jmp
and
fs
lock
cmc
ret
pop
cltd
or
fistl
int
pop
jbe
pop
cmp
dec
pop
rolb
inc
lods
sub
jbe
mov
dec
adc
xchg
dec
cmpl
cwtl
push
jae
push
adc
dec
mov
jmp
dec
in
icebp
push
pop
and
jae
or
in
jne
mov
dec
jmp
arpl
loopne
push
movsb
pop
mov
adc
pop
push
addb
ljmp
aam
sub
push
fs
out
cmp
mov
pop
mov
stos
jno
testb
mov
cwtl
stc
inc
push
mov
push
ja
jne
add
xchg
fsubrl
scas
cli
in
ja
xchg
mov
outsl
sbb
mov
js
sbb
push
sbbl
ss
das
mov
rcl
and
lahf
add
ret
or
int
cmp
or
jg
pop
les
inc
mov
outsl
dec
push
xchg
stos
dec
push
out
andb
lret
sbb
icebp
ficoml
xchg
xchg
or
add
or
addb
or
es
pop
push
jne
movsb
movsl
test
fwait
push
sahf
or
or
push
add
and
test
sbb
daa
pop
flds
adc
inc
and
jae
or
push
xlat
pop
inc
sub
les
and
fs
popf
cltd
scas
bound
inc
ret
or
rorl
cmp
js
scas
repz
mov
js
xor
push
popa
xchg
push
mov
jle
adc
iret
cmp
and
pop
sti
fwait
cltd
push
cltd
xchg
int
dec
fcmovnbe
push
cmpsl
loope
sbb
sbb
out
daa
add
and
dec
out
jmp
mov
lods
sbb
dec
mov
mov
das
pop
push
and
dec
sub
push
in
arpl
lds
lahf
push
addb
push
push
aam
mov
sti
add
or
lods
dec
mov
xchg
cmovns
out
mov
movsl
jnp
add
mov
sbb
scas
xchg
stos
push
or
psrld
mov
and
add
mov
movsb
frstor
cmp
jno
and
test
cmp
lahf
add
aas
xor
popf
dec
mov
add
cmp
sbb
inc
pushf
jns
jbe
insl
aas
pop
in
out
adc
xchg
xlat
mov
out
inc
mov
imul
adc
lea
stos
mov
xchg
pop
aaa
jge
in
xchg
jnp
fwait
mov
push
imul
sbb
pop
sbb
out
and
dec
dec
stos
mov
iret
adc
jp
out
push
std
mov
adc
into
xchg
mov
out
hlt
xchg
push
lock
faddl
mov
xor
cli
jne
or
xor
pop
push
int
sub
sub
inc
enter
push
add
push
mov
aam
fnstsw
je
cmc
jg
adc
or
cmpsl
mov
inc
bswap
sbb
add
lret
fcomps
sub
cli
mov
insl
cld
out
push
stos
mov
pop
and
add
add
mov
sbb
push
sub
jo
mov
and
fistpll
xor
inc
movsl
repnz
dec
jmp
in
xchg
andb
xor
and
bound
inc
repz
pop
scas
mov
sbb
push
push
pop
sub
sbb
xchg
pushf
mov
mov
scas
iret
cmp
mov
das
test
and
hlt
cli
xchg
dec
dec
dec
cli
pop
push
movsl
stos
sysenter
fwait
mov
shrl
inc
push
cmpb
xchg
dec
loope
and
mov
adc
out
test
out
jnp
je
fs
repnz
lret
inc
add
jge
push
mov
imul
sub
xchg
cs
call
scas
ss
add
lahf
ret
xchg
mov
call
xchg
out
mov
xor
xor
jmp
pop
push
and
dec
pop
inc
add
jnp
shrb
data16
add
mov
add
jle
popf
repz
ret
xor
add
out
mov
mov
jae
jp
kmovd
mov
or
push
sbb
jbe
cmpsl
xchg
sub
repnz
sahf
xchg
daa
fmull
xchg
mov
mov
fistpll
sahf
data16
mov
jns
mov
mov
adc
or
push
jle
in
push
push
adc
cmpsl
adcl
dec
popf
jge
push
dec
xchg
stos
pop
call
lods
inc
out
cmc
mov
inc
sbb
stc
aad
push
bswap
rcrb
jnp
adc
xchg
shll
mov
mov
out
aad
and
out
inc
dec
imull
push
cmp
pop
rorl
popf
fcmovb
dec
mov
push
jecxz
lret
jmp
adc
pop
scas
mov
ret
push
pop
imul
sahf
ds
sbb
mov
cmp
xor
fmul
cmp
sub
popf
stos
xchg
movsb
mov
cmc
jmp
shrl
mov
fwait
mov
xchg
loope
aam
adc
lcall
ja
mov
mov
sarb
push
mov
repnz
mov
cmc
and
lret
xchg
dec
jp
repz
pop
shlb
sub
gs
or
lods
sub
aaa
daa
and
push
mov
test
cmp
fldenv
sbb
add
adc
and
and
mov
addl
dec
bnd
loope
clc
jne
mov
mov
inc
and
scas
adc
cli
filds
sbb
mov
nop
xor
fimull
mov
mov
in
sarl
lock
mov
jmp
fwait
dec
ljmp
insb
cmpsl
test
loop
dec
add
decb
int3
aad
add
test
lea
shlb
fnsave
into
outsl
loope
xrelease
push
jns
les
sub
xor
fistl
jb
or
sub
out
fimull
adc
mov
jo
hlt
pop
add
jo
mov
and
in
jo
xchg
jmp
mov
or
mov
out
test
sbb
pushf
js
sub
jmp
dec
shll
and
fstpl
test
ret
add
mov
cmpsl
adc
jmp
dec
xchg
xchg
jbe
stos
out
xor
xor
mov
ds
nop
adc
jne
xchg
pop
mov
nop
sahf
leave
movsb
cmpsl
dec
out
mov
outsb
sub
sarl
pop
sub
je
jnp
and
sbb
stos
sbb
daa
icebp
pop
lds
jnp
pop
jp
in
jne
imul
mov
daa
adc
iret
mov
test
cli
mov
movsb
aam
inc
mov
lret
sub
mov
cmp
push
adc
mov
jp
push
push
inc
fcmovnbe
xchg
fmuls
js
popf
jns
scas
lret
add
push
pop
pop
mov
pushf
push
lahf
fmull
rcl
loope
xor
add
xchg
jmp
and
jmp
cmpsb
fs
xor
mov
mov
pop
mov
push
call
insl
dec
shl
xorl
loopne
fmull
stos
push
aam
jns
push
jg
add
ret
xchg
add
cmp
ficompl
inc
mov
xchg
popl
dec
jl
pop
rcrl
notb
lret
inc
sti
test
push
fldl
andl
cmc
sub
mov
push
and
movsb
int
xor
mov
or
cmp
cli
xchg
jecxz
call
adc
mov
and
out
mov
sub
dec
inc
shl
loop
or
mov
addr16
bound
add
sub
push
add
xor
dec
hlt
mov
adc
insl
je
cmp
repnz
inc
or
jmp
repnz
fstpt
lds
and
inc
mov
and
imul
sub
push
in
push
inc
insb
movsl
add
inc
sarb
aas
loopne
lods
imul
out
jp
cmpl
lock
test
adc
or
mov
jg
cmpsb
or
xchg
sub
das
pop
cmp
jb
nop
imul
lahf
xchg
loopne
adc
scas
lret
shrl
push
and
loopne
ss
fisubl
inc
int
in
fimuls
xor
jmp
shll
push
lcall
lods
aad
dec
push
xor
dec
mov
das
xor
dec
js
aad
sub
push
das
cltd
sbb
inc
ret
add
loope
clc
pop
inc
arpl
test
sbb
frndint
sub
sub
push
ret
nop
rolb
xchg
pop
xchg
dec
orl
fldcw
fnsave
mov
push
sbb
ret
cmpsl
daa
repnz
movsb
mov
xchg
movsl
xchg
jne
cs
cmp
movsl
cli
cli
bound
iretw
scas
imul
outsb
ja
popa
fdivs
loope
inc
dec
cld
adc
lds
outsb
int
and
int3
add
lahf
lahf
aaa
testl
jnp
and
push
je
xchg
add
inc
enter
ss
fdiv
orl
xor
addl
xchg
mov
sbb
aaa
adc
add
dec
xchg
punpckhdq
aas
fcom
mov
out
inc
ret
push
or
roll
cwtl
jne
imul
shrb
dec
icebp
mov
jnp
out
mov
test
arpl
xchg
jg
sub
push
xchg
adc
pop
jbe
iret
mov
and
dec
mov
shll
mov
mov
pop
mov
cltd
scas
cltd
or
scas
lret
sub
pop
sub
bnd
and
in
inc
cmp
cmp
fstpl
or
insl
cmp
xchg
fistps
sti
dec
dec
mov
add
dec
pop
loop
mov
pop
test
inc
jl
outsb
insb
add
fistpl
js
in
cmp
popf
fwait
rcrb
ja
xchg
mov
mov
imul
out
pop
mov
aam
addr16
hlt
dec
mov
cmpsl
lcall
sbb
rorl
daa
loopne
aad
add
test
xor
inc
cmpsl
jg
int3
xor
imul
mov
ret
out
enter
test
aam
mov
pop
jge
pop
sbb
insl
insl
mov
push
xor
stc
fiadds
test
and
push
push
das
jb
ficomps
push
jo
adc
mov
repnz
push
adc
lret
add
mov
call
push
xchg
xor
mov
sub
and
test
imul
arpl
xor
lretw
cmp
and
ficompl
dec
fnstenv
pop
pop
mov
push
aaa
inc
cmp
daa
stos
ficoml
mov
ljmp
sbb
aam
adc
pop
inc
adc
dec
and
pop
jne
add
in
sub
lret
iret
xchg
mov
add
sub
cmpsl
push
cmpsb
adc
iret
jle
push
aas
js
arpl
dec
jecxz
mov
xchg
mov
ficoml
lock
lahf
imul
inc
xchg
subb
int
test
pop
test
cli
and
adc
ret
xchg
xor
ja
loopne
sub
adc
cmpsb
popa
fdivl
mov
mov
push
push
aad
dec
loopne
mov
pushf
cld
push
lds
or
add
mov
push
xor
dec
push
test
xchg
data16
mov
aam
mov
imul
cmpb
in
stos
int
js
frstor
cmp
test
mov
negb
aaa
imul
dec
and
stos
negl
jg
shrl
daa
popa
fmull
les
hlt
xchg
adc
shrl
fimuls
add
fisubs
insb
out
bound
cs
push
sub
fnsave
lods
jo
jge
cld
xor
xchg
adc
mov
imul
lods
mov
incb
cmc
lds
rclb
adc
add
scas
iret
aam
jge
dec
repz
xchg
push
mov
lret
push
lds
and
dec
lcall
xor
mov
sub
xchg
out
inc
aad
inc
iret
inc
cmp
or
imul
mov
bound
test
sbb
scas
popa
xor
std
dec
inc
add
cld
pop
mov
push
ss
or
call
mov
pop
lret
pop
fstps
push
rolb
fidivs
aad
push
cld
ljmp
jl
fcoms
inc
out
insb
xor
xchg
add
loope
mov
mov
mov
out
sti
cs
stc
inc
stos
outsb
popf
lret
mov
je
repnz
test
jp
fnsave
jno
jo
cltd
fcoml
lea
cmp
movsl
hlt
mov
iret
mov
xchg
or
add
push
jnp
lds
jg
out
into
xlat
fidivrl
ds
mov
cmp
jnp
aad
loop
cmp
add
sub
pusha
pop
or
xor
daa
sbb
or
ret
call
dec
add
test
xchg
fwait
adc
into
in
int3
sbb
fdivl
out
scas
jno
inc
aaa
lods
test
mov
in
push
or
jle
mov
flds
add
cmpsb
push
jmp
lret
out
or
pop
pop
cmpsb
mov
popf
bound
lret
mov
sub
jns
mov
cmpsl
enter
mov
pop
xchg
xchg
and
outsb
push
jecxz,pn
daa
in
es
stos
mov
mov
pop
mov
and
ljmp
cmpsl
shll
lods
add
lcall
loope
jge
push
xchg
into
jne
fbld
sbb
dec
insl
cmp
addr16
xchg
mov
and
xor
sbb
lds
mov
inc
cmp
js
mov
pop
test
inc
iret
movl
insl
scas
sub
mov
push
add
cmp
mov
mov
and
ret
adc
push
test
and
jns
push
dec
out
xchg
js
aam
cmp
out
clc
and
nop
je
or
push
nop
sub
test
jns
outsl
ja
stc
xor
fs
push
js
lods
jb
pop
scas
jmp
vorpd
sub
out
inc
int3
out
bound
fld
sbb
or
sbb
out
pop
add
mov
and
ljmp
fwait
in
fdivs
add
dec
cmp
mov
stos
test
add
sti
or
and
cmpsl
lods
xchg
jl
div
adc
xchg
rol
push
nop
lcall
jmp
mov
sti
clc
jge
data16
out
mov
lahf
movsb
rolb
loopne
mov
insb
imulb
insl
lock
arpl
out
mov
pop
aad
dec
adc
or
xchg
fisubrs
inc
repnz
sub
xor
xlat
jmp
xchg
clc
gs
ret
mov
inc
js
dec
dec
cs
push
push
adc
repnz
ds
inc
mov
imul
pop
jle
sub
jmp
dec
mov
fmuls
cltd
stos
sbb
imul
hlt
test
adc
and
adc
jbe
sbb
mov
dec
cmp
stos
insl
cmpsl
popa
lea
push
ds
adc
icebp
push
or
xchg
mov
inc
push
loop
or
jb
js
stos
push
cwtl
sahf
clc
mov
or
mov
das
jae
pop
cmp
aaa
and
and
xchg
std
jnp
sti
in
inc
mov
aaa
xchg
rcl
push
push
adc
mov
fucom
cmp
int
sahf
cmp
and
adc
add
pop
adc
dec
cwtl
and
sbb
call
gs
mov
aam
sbb
add
sub
mov
xchg
dec
sub
pop
mov
add
dec
mov
push
lea
popf
sub
push
icebp
xlat
mov
sub
adc
in
add
aas
adc
pop
ret
push
jmp
jns
add
gs
push
lds
movsl
jle
sbb
notl
ret
add
pop
jae
gs
pop
mov
pop
rcrl
je
loopne
pop
or
cs
inc
push
cwtl
ftst
mov
insl
inc
ss
dec
jns
sahf
insl
xlat
adc
xchg
xor
testl
push
dec
movsl
xchg
int
ss
pop
dec
in
xor
rorb
cwtl
pushf
sub
fisubs
loopne
repnz
cmp
aam
in
cmp
shrl
mov
jmp
shll
pop
xor
int
test
push
inc
xor
and
add
sub
jo
or
int
inc
ja
mov
inc
sahf
pop
add
add
aam
or
stos
cmp
jno
inc
divl
out
ja
sub
enter
or
ja
cmc
outsl
sub
pushf
lcall
aaa
push
xchg
movsl
cltd
fwait
sbb
or
and
aaa
fidivl
rep
mov
xor
xchg
data16
mov
push
jbe
push
cmc
jg
stos
xchg
jecxz
mov
push
sarl
insl
bound
mov
adc
insl
inc
jmp
mov
xor
mov
jne
add
hlt
and
jmp
in
jmp
jle
mov
inc
stc
mov
mov
jno
dec
mov
xlat
scas
lods
pop
aad
mov
mov
in
xor
jmp
adc
sbb
decb
es
out
xchg
mov
or
add
in
lods
add
sbb
das
adc
loop
mov
sbb
fs
shrb
cmpsl
movsb
lahf
mov
cld
and
sub
dec
or
adc
xchg
dec
rolb
and
ds
dec
enter
outsb
jae
sahf
xor
lret
adc
les
mov
fwait
mov
jg
and
rcr
cltd
dec
test
push
push
ljmp
jb,pn
push
in
mov
ds
in
cs
jb
enter
hlt
movsb
rorl
sbb
jl
push
cs
aaa
nop
xor
xchg
xchg
aam
sub
or
mov
add
scas
cmpb
out
add
das
adcl
mov
add
push
gs
and
inc
and
scas
jae
sti
out
cmpsl
out
mov
jge
sbb
hlt
sbb
mov
push
and
out
jnp
inc
outsb
aas
clc
dec
adc
jns
mov
aam
dec
rcrl
daa
mov
aad
icebp
cmp
mov
add
mov
cmp
lock
aad
adc
mov
andl
aas
xchg
xlat
jnp
jmp
dec
sbb
pop
push
test
fstps
pop
nop
cld
add
inc
icebp
xor
sub
cmpb
lods
movsl
cli
mov
jge
out
cmp
adc
shlb
fldt
scas
ja
push
bound
mov
fistl
cmp
lret
mov
cwtl
and
and
popa
push
cli
hlt
lds
icebp
xchg
push
mov
push
sbb
lahf
popf
test
jge
inc
fs
je
cmpsb
inc
movsl
into
sbb
inc
mov
cmpsb
jae
cmp
sbb
cmp
mov
xchg
fidivl
adc
int3
rolb
mov
cs
adc
mov
test
ja
push
pop
mov
in
adc
je
pushf
aas
int3
lret
popa
dec
inc
rorl
add
or
sub
leave
jecxz
adc
sub
lds
test
dec
cmp
push
pushf
adc
cs
dec
xor
sub
sahf
push
xchg
sub
mov
xchg
add
push
cmpsb
data16
mov
mov
jmp
push
into
and
jle
sti
stos
fs
mov
mov
and
inc
sbb
pop
pusha
call
lds
test
mov
or
les
mov
repz
popa
iret
cwtl
xor
pop
test
add
mov
sub
add
xchg
sub
mov
divl
jo
test
fldcw
incl
lods
mov
addr16
sub
fisubs
sub
sub
sbb
shrl
loopne
subb
push
out
into
adc
ja
leave
pop
aas
cmp
adc
mov
jnp
loopne
inc
and
loope
fs
pop
mov
jb
rcr
add
dec
pop
push
xchg
dec
inc
xor
sbb
xchg
lods
dec
or
negl
mov
aad
mov
sub
out
call
mull
repnz
daa
in
scas
dec
mov
inc
add
cld
aas
pusha
loope
fcomps
dec
cmpsl
dec
dec
mov
mov
int3
sub
xor
dec
add
cmp
xchg
jmp
mov
cli
icebp
jno
inc
andnps
test
push
jno
test
jle
cli
pop
popa
in
or
pusha
xchg
push
dec
nop
dec
inc
fcmovnbe
push
add
adc
sbb
pop
mov
push
inc
mov
mov
or
xor
mov
mov
mov
lock
insl
cmc
cltd
aas
in
sarl
jno
call
sbb
inc
test
or
icebp
das
enter
sub
sbbl
mov
inc
mov
sbb
ss
push
fnstsw
repz
ret
sbb
lods
jl
sbb
das
test
mov
inc
fwait
mov
cmp
push
roll
mov
js
adc
int
cmp
in
iret
scas
jle
mov
lcall
inc
daa
testl
and
xor
notl
mov
jno
mov
adc
push
ret
and
adcb
popa
pop
add
mov
mov
lahf
mov
std
insb
mov
mov
xchg
fstl
pop
sub
std
aas
movsb
jo
cmp
fwait
or
dec
fwait
fwait
jnp
iret
imul
lcall
daa
dec
insb
ffreep
xchg
pop
movsb
inc
jmp
addb
xor
pusha
dec
stc
pop
and
push
push
sub
pop
inc
mov
sub
mov
das
cmp
fstl
js
daa
aad
sbb
imul
mov
or
cmp
sbb
xor
sbb
lahf
jecxz
adc
sbb
add
jmp
adc
incb
test
dec
adc
mov
pop
andb
out
cmp
inc
scas
fsubrl
or
push
inc
add
pop
push
xchg
insl
lods
jae
mov
cmpsl
pop
test
repnz
push
add
popa
add
fistpll
jle
push
xor
testl
addr16
sub
incl
shrl
bswap
xor
add
bound
and
xlat
lea
push
inc
call
ret
sub
jle
or
add
xor
repz
dec
notb
hlt
js
or
arpl
lret
in
dec
fwait
hlt
lea
inc
mov
mov
aas
cld
mov
mov
je
cli
mov
xor
aad
cmpsl
mov
jle
jge
xor
push
mov
lods
xor
sbb
xchg
stos
adc
test
imul
mov
push
daa
xchg
std
call
hlt
lods
xor
scas
sbbl
adc
imul
jae
rorb
jo
mov
imul
mov
in
fwait
stc
test
pop
jmp
outsb
dec
jo
mov
fadd
push
sub
lods
shlb
unpckhps
mov
pop
push
imul
xchg
cli
cltd
addr16
pop
stos
or
push
js
and
xor
das
push
pop
sti
mov
aad
adc
sub
lds
jne,pn
lds
pop
mov
sub
sbb
imul
mov
inc
je
cli
clc
add
insb
push
inc
nop
adc
cwtl
push
popf
cmp
add
jb
or
sbb
enter
sbb
mov
jge
clc
stos
cmp
push
inc
jns,pt
xor
loop
std
xor
out
cmp
movsl
pop
sub
add
mov
fildll
outsl
ljmp
lea
mov
lcall
lods
lds
rol
push
ficoml
push
dec
mov
add
and
movsl
dec
push
in
pop
in
add
addb
mov
icebp
cmc
mov
cwtl
jns
xchg
pop
and
jb
lea
rorl
sbb
xchg
xchg
dec
inc
aam
shrb
push
mov
rclb
adc
inc
std
pop
cltd
xor
aaa
popf
inc
sarl
lahf
jae
cmp
or
cmp
push
or
std
out
sub
dec
pushf
pushaw
dec
sbb
mov
int
cli
cmp
xorb
pop
cld
pop
push
loope
das
jmp
dec
cmp
xchg
xchg
and
mov
ret
xchg
jae
lahf
xchg
outsl
fildll
popw
cli
jecxz
and
pop
test
outsb
mov
mov
or
fstl
insb
sub
inc
stc
dec
int3
dec
cmp
ret
xchg
bound
push
loopne
jg
aam
jbe
mov
xchg
push
dec
xchg
or
in
leave
lock
jp
inc
push
push
cmp
xchg
add
inc
and
or
fdivrp
add
add
inc
and
lods
roll
mov
and
jl
scas
jo
adc
jl
mov
idivl
imul
popl
ret
lea
stos
dec
and
into
add
push
jb
jns
stos
add
adc
stc
imul
mov
popa
sbb
lahf
pushf
fisttpll
xchg
lret
sub
xor
aad
stos
push
dec
popf
pop
out
jno
mov
mov
add
pop
mov
pop
mov
test
mov
xchg
push
repz
pop
sbb
jo
dec
mov
ret
push
sti
xor
out
sbb
or
jl
sbb
lods
test
mov
xchg
lcall
cld
dec
push
aaa
insl
inc
or
jp
mov
dec
lret
or
dec
and
ss
jbe
mov
stos
scas
fs
lock
subps
stos
outsl
rolb
jo
pusha
cwtl
mov
addr16
shlb
test
jl
mov
ficoms
and
ret
das
fmuls
test
mov
ljmp
add
arpl
es
cmp
pop
pop
mov
adc
inc
add
mov
cmp
add
mov
mov
fiaddl
mov
inc
push
call
sub
negb
sub
lds
or
jns
mov
movd
mov
ljmp
scas
adc
in
popf
jge
or
push
push
dec
inc
push
jbe
dec
fwait
mov
sti
jbe
das
sub
pop
cli
sub
pusha
rcr
push
dec
sub
adc
push
jg
hlt
mov
and
and
ja
shr
mov
sbb
cld
outsl
lahf
es
loopne
push
dec
rclb
jecxz
lahf
jp
xor
push
pusha
jp
cmc
mov
fwait
or
mov
sub
ficomps
and
xchg
lret
push
and
int
int
mov
addr16
insb
and
insl
fwait
mov
mov
data16
inc
jae
xchg
popa
mov
shlb
ret
cmc
fcomps
lret
sbb
fstpt
mov
sahf
into
jle
xor
mov
and
mov
mov
ret
xor
push
push
mov
pop
push
pop
bound
fdivl
xchg
jge
popa
cmpsb
mov
dec
aaa
into
pop
mov
push
iret
cmpsb
sub
stos
push
mov
bound
or
mov
or
hlt
adc
int3
sti
xchg
leave
adc
pop
inc
push
out
push
iret
mov
dec
lods
cmc
es
cli
mov
jb
pop
gs
cwtl
xor
jae
dec
loope
jns
loop
mov
insb
maxps
int3
mov
fwait
pop
jp
stos
outsl
inc
dec
cmp
pop
pop
push
fidivrs
xchg
lret
fcomi
mov
push
add
std
mov
fldenv
sar
or
roll
int3
fs
cmp
ss
das
or
push
lret
shlb
ljmp
js
xchg
mov
std
mov
or
cmp
pop
cmpb
cmp
xchg
test
mov
push
arpl
adc
pop
add
xchg
inc
push
xor
out
xor
or
mov
pop
aas
sub
dec
data16
mov
pushf
add
out
negb
mov
jmp
jb
push
fcmovnbe
fxtract
sbbb
xchg
mov
push
fcomi
testb
imul
push
loope
fsubrs
jnp
out
cld
stc
movsb
add
lds
push
rorb
jg
pop
imul
das
mov
mov
pop
mov
loope
or
pushf
sbb
aaa
sbb
lahf
sbb
xlat
mov
pop
popa
out
or
aad
loopne
sub
insb
outsb
jnp
adc
fldcw
fwait
sub
mov
mov
xchg
imul
jg
outsl
pusha
pop
aam
cmc
js
and
sbb
sarb
lock
sub
jp
sbb
xor
clc
loope
inc
cmp
mov
and
stos
cmp
sarl
outsb
push
push
shlb
in
sbbl
adc
jne,pt
push
test
hlt
scas
testl
fnstenv
jmp
adc
ljmp
jnp
popa
mov
jb
imul
inc
daa
rcrl
add
jo
or
imul
jnp
insl
leave
test
push
adc
daa
hlt
sub
clc
cmp
and
xchg
call
inc
dec
pusha
inc
mov
shrb
mov
jnp
cmp
or
out
add
add
adc
xchg
adc
in
mov
pop
inc
cli
jg
sbb
jp
repz
sub
xor
enter
xchg
mov
lds
cltd
popf
push
sbb
int3
mov
cmc
repz
sub
push
sub
jae
pop
in
xchg
mov
cmp
inc
mov
shr
pop
and
bound
lds
pop
mov
repnz
clc
enter
nop
daa
sub
nop
cltd
mov
mov
insl
hlt
daa
pop
dec
push
jmp
mov
fwait
sbb
push
fsts
sbb
lahf
fnstsw
pop
and
data16
aaa
sbb
mov
repnz
push
insl
push
or
cmovo
cmpl
int3
adc
repz
or
or
push
mov
out
mov
neg
int3
pop
mov
scas
sub
shl
scas
stos
dec
test
mov
andb
push
add
mov
lods
test
lock
imul
fimull
add
fwait
nop
pusha
mov
dec
jns
adc
out
es
orl
sub
pop
enter
in
sbb
push
ficompl
sbb
std
leave
sub
test
mov
movsl
imul
push
add
sahf
sub
es
imul
xchg
ss
adc
fstpt
inc
ja
shrb
inc
mov
jne,pn
into
mov
cmp
popf
mov
es
je
inc
push
sar
leave
leave
dec
dec
xchg
fidivrl
mov
jecxz
pop
xor
mov
mov
repz
movl
scas
inc
xchg
xchg
xchg
lahf
pop
xchg
mov
out
sbb
xor
out
adc
and
or
cmp
out
out
scas
dec
ds
test
rorb
push
xor
repnz
hlt
xchg
dec
negb
pop
cwtl
xor
sbb
insl
testl
add
adc
sbb
ret
hlt
imul
adc
jmp
jp
sbb
scas
adc
push
lods
cltd
mov
call
dec
cs
and
push
pop
shlb
cmpsl
scas
sbbb
xor
and
imul
add
mov
and
stc
lods
sub
leave
jmp
dec
push
or
dec
cmp
sbb
inc
imul
enter
mov
lods
test
add
ds
dec
sub
inc
mov
inc
stos
xor
xor
loope
jle
inc
xchg
xchg
stc
jnp
test
nop
lahf
cld
das
ds
mov
hlt
jo
pop
ljmp
in
fdiv
xor
adc
push
out
fdivrl
mov
inc
jne
insb
pop
inc
jp
enter
dec
hlt
test
loopne
fimull
inc
xlat
sub
inc
lea
xor
inc
cmp
sbbl
rcrb
pop
clc
in
mov
pop
loop
hlt
lods
xor
cmpsb
data16
incl
inc
jp
movsl
cmpl
mov
xchg
fdivrl
push
bound
xchg
pusha
xchg
adc
pop
add
push
sbb
imul
loope
sub
push
cmp
popa
push
out
mov
jae
push
jle
addr16
js
pushl
mov
pushf
fildll
mov
sub
fwait
rcll
push
dec
les
lret
mov
rcl
sub
dec
push
inc
inc
hlt
gs
outsb
jae
mov
mov
jnp
mov
add
pop
or
mov
movsb
stos
mov
sub
mov
xor
pop
in
push
lret
and
pop
sbb
cltd
pop
leave
jmp
das
leave
jle
mov
stos
dec
jne
out
aaa
insb
or
and
inc
pop
jp
or
aam
testl
divl
sub
dec
es
test
leave
inc
lods
std
mov
pop
ficomps
pop
clc
outsl
mov
adc
inc
int
mov
cmp
fidivrs
or
add
push
xor
out
inc
fcmovnb
pop
faddl
fstpl
imul
es
icebp
push
mov
imul
sbb
push
mov
mov
add
jnp
adc
xchg
pop
mov
stos
inc
push
and
mov
pop
stos
loop
cmc
out
xorb
adc
jg
fstpl
push
mov
inc
mov
clc
and
lahf
into
fdivp
cmp
ret
or
data16
cmp
fistps
xor
pop
add
xchg
rcl
inc
mov
and
pushf
and
xchg
repz
mov
in
jo
clc
mov
xchg
cld
test
mov
adc
xor
fildl
clc
clc
xor
mov
dec
jae
push
cwtl
inc
xchg
fwait
xchg
fwait
std
cmp
and
dec
jno
jge
pop
nop
push
or
xchg
call
inc
fists
sub
imul
pop
jp
rolb
mov
xor
addr16
nop
inc
outsb
xor
arpl
test
cvtps2pi
dec
cltd
jnp
addr16
mov
pushf
xlat
mov
mov
mov
add
mov
out
push
xorb
xor
out
in
pop
jl
andl
pop
rolb
movsl
add
mov
std
fisttpl
cmp
mov
out
push
jp
lock
pop
mov
sub
ret
leave
jb
mov
call
clc
sti
dec
jecxz
xor
je
adc
in
mov
ja
inc
cmpsl
loopne
enter
sbb
cmp
test
es
xor
push
data16
push
push
jne
push
jbe
ljmp
sti
rorb
inc
mov
dec
cmp
adc
lret
dec
xlat
mov
xor
cmp
notb
cltd
sahf
cmpsl
nop
mov
sbb
push
inc
ja
lock
inc
idivl
mov
lea
cmpl
and
mov
fwait
dec
xchg
sahf
cmpl
push
rcrb
push
fadds
sbb
dec
mov
and
insl
je
mov
mov
insl
inc
pop
lret
inc
pop
jno
sbb
fldt
push
sub
rcl
in
mov
pcmpgtd
test
and
outsl
out
push
sbb
or
ja
or
push
xor
aad
sbb
adc
ret
cltd
setl
or
jns
loope
push
or
pop
pop
mov
outsl
ds
and
cmp
mov
or
jge
lret
jle
outsl
sbbl
xor
jl
inc
pop
or
add
sub
loop
fs
mov
mov
jl
push
cltd
loopne
adc
jns
call
adc
sbb
jmp
mul
in
add
roll
push
adc
dec
cmc
mov
jns
ljmp
iret
add
stc
push
iret
inc
sarl
inc
mov
mov
lds
jmp
mov
jmp
aad
ljmp
dec
and
or
dec
iret
movsb
xor
mulb
mov
dec
fcoml
and
xchg
xchg
out
shrl
sub
dec
adc
sbb
mov
mov
das
negb
add
cmp
xor
push
ret
jmp
jl
into
push
aam
add
fldcw
test
pushf
enter
pop
pop
push
fwait
jmp
cs
cmpsl
add
push
pop
pop
push
dec
pop
je
hlt
in
sub
inc
push
outsl
psubw
lds
sub
out
cmpsl
movsl
fdivs
or
testl
gs
inc
mov
f2xm1
daa
mov
es
add
cmp
call
leave
sti
mov
lds
lods
loope
idivb
pop
dec
xor
or
pop
cmp
pcmpeqb
mov
and
mov
pop
add
mov
or
cli
pop
es
pop
pop
mov
mov
sbb
cmpsb
movsb
clc
jp
sahf
mov
stos
adc
push
imull
mov
jmp
daa
adc
xchg
out
mov
loopne
add
enter
jno
loope
movsb
cmp
pop
test
mov
leave
and
mov
lea
repz
adc
icebp
fisubrl
mov
rolb
push
xchg
cmpb
ret
imul
jo
addr16
out
ja
inc
mov
cwtl
iret
sub
inc
cmpsl
push
cmc
mov
cli
movb
testb
xlat
xor
push
inc
push
mov
out
sbb
fimuls
rorb
push
jmp
jp
jg
xchg
popa
icebp
daa
cmp
jae
icebp
outsb
gs
mov
xchg
gs
test
test
dec
inc
repz
jnp
push
loopne
out
in
cmpl
mov
imul
and
mov
jo
popa
popf
dec
std
cs
icebp
repnz
jbe
rorl
hlt
xchg
jae
or
xchg
ret
pop
ljmp
popl
rolb
fwait
mov
mov
add
daa
scas
adc
idivb
mov
inc
jl
imul
movsb
pop
testl
outsb
adc
mov
jl
lret
icebp
sbb
in
add
fmuls
pop
je
arpl
mov
add
in
outsl
ljmp
fisubrs
mov
hlt
repnz
push
add
lds
pop
loop
call
add
into
pusha
jle
jle
enter
repnz
into
jge
mov
mov
lcall
add
out
dec
test
push
repnz
ffree
mov
cli
mov
cltd
ret
mov
orb
sbb
or
loope
mov
cli
lret
mov
jns
insb
xchg
pop
shlb
sbb
mov
xchg
sahf
loope
push
mov
fwait
std
mov
int3
push
jecxz
int
or
in
lret
pop
push
mov
cld
xchg
mov
inc
jl
sub
push
ja
aas
or
jmp
mov
ja
mov
sub
ss
in
ss
fsubl
test
xchg
inc
mov
repnz
inc
movb
inc
es
je
jecxz
in
mov
aam
fs
stos
nop
roll
mov
dec
lods
aas
pop
jne
loopne
test
xor
add
add
pop
das
or
js
ret
lcall
stc
test
xor
mov
pop
enter
cli
mov
call
cmp
jo
and
mov
sarb
out
adcl
push
mov
cmp
and
cmpsb
mov
ret
repz
aam
std
sbb
push
fildl
aaa
push
cmp
mov
sub
fwait
hlt
inc
repz
fadds
int
out
inc
ljmp
inc
loope
cmpsl
mul
ror
fsubrl
sbb
push
mov
jno
inc
sbb
and
rorb
rcr
in
jne
lods
sbb
imull
pop
mov
xchg
lock
push
adc
imul
push
out
jmp
pop
cwtl
cmpsl
cs
jp
inc
ss
cvtps2pi
cld
jno
enter
or
shr
jle
mov
mov
out
jne
pop
mov
sbb
icebp
adc
insb
cmpl
out
sub
ja
enter
sbb
add
add
cli
and
jns
jno
daa
jmp
scas
ljmp
fwait
dec
xor
and
add
jmp
inc
mov
jb
imul
add
ljmp
cmp
add
lea
or
shrl
aad
out
push
mov
lods
lcall
mov
fsubl
jbe
data16
mov
mov
jmp
mov
push
cmc
fst
aaa
lea
sahf
movsl
mov
adc
and
sbb
inc
loope
mov
mov
cmpsb
push
ret
stos
mov
cwtl
mov
pop
cmp
roll
adc
pcmpeqd
push
in
lock
sub
or
mov
out
dec
inc
inc
cmp
popf
pop
inc
in
aam
push
dec
and
insb
stc
negb
popl
in
data16
aad
shl
xchg
mov
jge
loopne
push
sbb
mov
mov
mov
or
cmp
sbb
jecxz
outsl
out
incl
shll
cmp
addr16
fnsave
cmp
dec
movl
cmp
loop
pop
js
xor
jnp
test
mov
dec
testb
mov
test
fs
dec
dec
xchg
fdivr
scas
cwtl
std
cmp
dec
jne
push
rorb
inc
in
push
jmp
add
sbb
addr16
inc
out
jecxz
dec
mov
mov
mov
ljmp
mov
mov
push
mov
and
mov
xor
jno
xchg
pop
dec
sub
sub
sbb
push
cli
movsb
loop
sbb
jo
hlt
aam
jp
andb
inc
cld
mov
pop
rep
push
aad
outsl
push
or
into
jle
shlb
shll
mov
push
or
pop
rorl
push
cltd
inc
pop
fidivrl
mov
inc
fisttps
add
int3
lcall
fs
or
arpl
mov
xchg
movsb
bound
push
insl
adc
jae
xor
mov
in
rclb
cmp
lds
sbb
sbb
mov
nop
and
sub
aad
xchg
pop
out
cmp
inc
insb
sub
int
adc
push
jge
mov
addb
pop
dec
dec
sub
xchg
bound
in
adc
add
push
ficompl
pop
adc
mov
imul
cli
ljmp
sbbl
dec
ret
flds
addr16
push
xchg
cmp
fidivl
das
popa
pop
test
mov
inc
int
rcrb
cmp
out
jno
cmpsl
pop
mov
pop
sub
ljmp
mov
in
outsl
jle
mov
fldenv
insb
xchg
je
pmaddwd
push
jmp
xchg
mov
lahf
loopne
repz
stos
xor
fidivl
add
mov
jne
je
adc
xor
ret
fldl
dec
or
insb
andl
mov
movsl
ja
mov
sub
stos
adc
aas
mov
stos
xchg
mov
test
cltd
fsubl
jnp
cmp
outsl
jge
movb
cld
addb
dec
lds
daa
int
and
aas
mov
mov
pop
cmp
cld
popf
sub
in
inc
inc
addl
mov
clc
data16
repnz
cmp
jl
sub
inc
call
xchg
rclb
sub
sub
xchg
outsb
mov
pop
in
lahf
cmp
mov
addr16
inc
adc
sahf
sub
fisttpll
sub
push
fnstcw
push
aam
lcall
pop
fwait
outsb
lods
dec
hlt
sti
or
nop
xor
inc
cmp
and
add
mov
in
sarb
and
push
push
pop
imul
push
inc
fsubr
aam
scas
sub
pop
push
cmp
test
movsb
bound
mov
push
cmpsb
jecxz
imul
dec
imul
mov
or
sbb
imul
das
enter
and
push
test
loope
ss
sbb
dec
adc
xchg
adc
jge
adc
outsl
jns
jnp
push
sbb
adc
jle
pop
mov
lea
sahf
xchg
jno
cld
cli
push
jp
xor
fwait
jg
clc
sbb
adc
add
pop
in
repz
adc
mov
sarb
in
jbe
in
add
cmpsb
cmp
rcr
add
mov
mov
mov
mov
sti
fadds
sub
scas
in
pop
mov
xorl
stos
xor
cmp
ficoml
cmpsl
clc
and
sbb
es
gs
mov
dec
mov
pop
aas
push
and
loope
fisubrs
dec
push
push
outsb
leave
mov
ret
xor
pop
inc
pop
adc
lods
mov
pop
xchg
outsb
add
push
mov
mov
jle
js
orb
or
sub
or
cltd
jg
dec
fsubl
aad
and
jne
aam
and
std
or
pop
daa
pusha
cmp
das
in
dec
aad
or
jnp
pop
dec
xchg
add
fcoml
push
jb
out
push
lahf
dec
mov
shll
xchg
jo
ja
push
scas
fcmove
push
stos
stc
dec
cmpsl
jecxz
add
xchg
lea
jmp
or
push
lds
gs
cmc
cmp
mov
mov
mov
popa
jo
inc
adc
ss
dec
es
pop
adc
cwtl
into
lcall
insb
imul
push
dec
xchg
pop
cmp
insl
add
mov
or
push
mov
adc
aaa
sub
sub
out
xchg
or
sbb
cmp
push
popa
inc
loop
and
imul
test
out
dec
sub
jb
inc
mov
dec
add
lret
cmp
mov
out
mov
std
fmulp
outsl
and
mov
sub
or
into
cs
in
push
sti
in
repz
inc
out
add
mov
idivl
mov
xchg
jne
mov
jle
lcall
or
xor
sahf
ret
or
mov
cmc
push
pop
iret
pop
adc
lahf
les
lret
fnclex
jae
stos
idiv
mov
fcmove
dec
loope
adc
mov
push
add
mov
pusha
rclb
mov
stos
jmp
pushf
out
out
xor
cltd
cmc
lcall
lea
dec
popa
sbb
xchg
xchg
sub
mov
xchg
mov
mov
xchg
xchg
rcll
xrelease
jns
repnz
movups
push
xor
mov
xchg
lods
pop
and
jge
sysexit
or
adc
xchg
sbb
jmp
out
cltd
enter
jno
xor
add
mov
or
ds
addr16
mov
pop
push
jne
fists
nop
mov
scas
gs
jp
add
pop
mov
sub
int3
xchg
add
pop
sub
int3
adc
in
pop
mov
pop
jnp
push
pop
jmp
test
fmul
pushf
out
je
mov
jmp
loope
jnp
dec
or
pop
push
and
jge
imul
ljmp
xchg
jns
dec
fisubrs
fnsave
leave
repnz
loopne
or
mov
cs
or
add
dec
xchg
ss
jns
mov
mov
mov
xchg
nop
pop
cli
aam
add
push
std
sbb
cltd
xor
push
cmp
pop
and
in
mov
repnz
fs
icebp
fisubrl
add
ret
rcrb
ret
lcall
and
jb
adc
pop
shll
pop
jnp
enter
xchg
jb
icebp
aaa
repz
mov
ja
sub
sub
nop
aam
mov
sub
out
repz
cli
pop
inc
inc
push
pop
mov
in
aaa
bound
xchg
mov
stc
rcl
xchg
jmp
push
rol
sbb
popf
lahf
pop
and
icebp
mov
sub
lods
xor
dec
dec
or
dec
push
mov
xor
lret
aas
push
jmp
test
mov
push
in
lods
mov
jecxz
xchg
fs
sub
mov
and
push
movsb
push
int
loopne
mov
sbb
adc
jne
idivl
fwait
cmp
jg
pusha
xchg
or
test
jp
dec
inc
lea
and
jae
insl
push
pop
and
or
jmp
sahf
xchg
cs
test
cs
jno
data16
rclb
mov
out
ret
cmp
jbe
mov
push
add
xchg
cli
xor
xchg
in
scas
and
sbb
inc
mov
repz
push
sbb
adc
ss
nop
and
stos
das
inc
ret
cs
mov
push
cmp
rcll
adc
enter
fcomps
addl
scas
mov
mov
sbb
inc
push
ret
xlat
push
mov
into
icebp
pop
scas
verw
inc
daa
adc
push
push
mov
push
sbb
loop
scas
mov
lock
pop
jns
sub
sbb
and
push
std
sbb
xor
shr
or
jns
popa
int3
pop
dec
dec
je
or
out
sbb
fildll
test
add
xor
popf
das
shl
idiv
xchg
int3
shll
test
orl
enter
aad
add
iret
cmp
cmp
icebp
in
sub
aad
mov
mul
repz
int
cmp
inc
add
out
insl
lods
pop
subl
call
xor
xor
std
insl
sbb
scas
jo
adc
sub
fwait
push
push
add
sbb
jp
push
enter
hlt
icebp
bnd
loop
cmp
mov
push
jo
mov
mov
jnp
jecxz
test
scas
repz
adc
adc
out
popf
xchg
or
aas
out
cmpl
xchg
fs
inc
scas
pop
roll
sub
xor
push
ds
les
mov
loope
xchg
xchg
addr16
out
pop
popa
arpl
jmp
mov
add
mov
xor
outsl
outsl
jbe
mov
fldl
or
jb
andps
fs
sahf
push
fcmovne
test
add
mov
mov
jns
push
imul
mov
dec
xlat
es
adc
push
fs
push
je
dec
push
mov
iret
adc
mov
or
inc
pop
dec
adc
cwtl
or
cmp
ja
add
jmp
mov
pop
aaa
call
sti
fldenv
xchg
pop
inc
mov
pop
ret
out
mov
mov
pusha
lahf
and
push
xchg
shl
ret
dec
ds
psraw
push
cmpsl
outsl
cmp
jae
arpl
adc
sti
in
popf
mov
dec
mov
xchg
out
mov
xchg
mov
cmc
mov
add
pop
test
outsb
mov
cli
fdivrl
inc
sbb
and
dec
cmp
jmp
xchg
in
jp
pushf
sub
mov
decb
outsb
aad
int
mov
addr16
lcall
loop
aaa
arpl
ss
xchg
pusha
fsubrl
js
pop
shlb
into
outsl
je
sub
jg
pop
add
repz
mov
mov
daa
in
pop
repnz
es
push
nop
mov
aad
push
inc
sbb
and
sbb
mov
jg
stos
mov
jecxz
int3
cmp
mov
adc
aad
in
inc
bound
dec
shlb
cmp
stc
and
pushf
lret
lahf
cmp
stc
fwait
mov
mov
xorl
pop
push
sbb
mov
add
mov
mov
sub
jnp
add
loope
add
data16
push
xor
roll
test
dec
pop
lock
ret
arpl
inc
pop
test
push
add
out
scas
ret
pop
out
xor
or
add
ds
mov
push
pop
xor
aaa
jg
sub
ja
inc
mov
inc
cmp
repz
insl
loope
mov
jo
pop
addr16
sub
das
dec
addr16
jg
add
sbbl
leave
ds
sub
adc
xchg
call
stc
or
lods
pop
loop
fdivrl
mov
cmc
loopne
and
jg
in
mov
gs
add
lods
inc
jne
xchg
add
or
ds
push
jmp
sbb
jg
mov
xchg
cli
xor
inc
xchg
or
lods
pop
decb
adcl
arpl
mov
mov
test
ljmp
addb
mov
dec
clc
jmp
dec
mov
out
sub
add
stos
xchg
rcrl
xchg
ret
shll
ror
jmp
nop
push
push
loop
or
rcr
dec
test
inc
xchg
jb
dec
jg
xor
popf
jo
pop
inc
cmpl
dec
xchg
mov
add
or
mov
mov
adc
lret
movb
cmp
sahf
mov
addr16
cmp
movsl
repz
xchg
lds
jno
xor
cmp
test
lods
sbb
int
xchg
rorb
clc
aaa
sarl
aam
test
mov
call
xchg
nop
mov
sahf
jae
push
xchg
test
je
or
fwait
mov
fs
fwait
xchg
dec
sbb
jp
jge
adc
lods
jp
mov
sbb
adc
xor
shl
push
mov
or
adc
adc
daa
cmp
cwtl
shll
sbb
mov
add
cwtl
adc
pop
xor
xor
lahf
ja
jo
fcmovu
and
out
int3
out
clc
mov
jae
cmp
sbb
inc
xchg
dec
dec
pop
dec
cmp
jp
dec
pop
xchg
mov
cld
pop
sbb
or
mov
or
mov
fmull
jge
cmpsb
sti
fs
ret
data16
enter
add
sub
fadd
and
sbb
outsb
mov
lret
ljmp
adcl
cltd
jbe
test
cwtl
xchg
jns
shrl
cld
iret
popa
ret
cmpsl
dec
jns
es
imul
loopne
xor
or
test
mov
fs
adc
stos
js
cmp
pop
inc
dec
sub
pop
cld
add
scas
mov
fiaddl
bound
add
adc
pop
mov
mov
cmpl
in
sbb
sub
push
push
imul
rolb
adc
icebp
mov
mov
xor
fwait
loopne
insl
mov
mov
or
mov
daa
sbb
fdivr
out
or
in
mov
mov
gs
ret
push
pop
xchg
ret
sub
mov
xchg
arpl
xlat
cmc
lods
mov
jmp
sbb
insb
nop
sub
push
aaa
or
int3
mul
xchg
inc
mov
outsl
outsl
cmpsb
incb
out
jnp
out
out
mov
push
adc
jb
aaa
int3
cs
lods
cmp
ret
stos
cmpsb
jne
pop
push
pop
mov
aas
cltd
test
pop
mov
loopne
lcall
shlb
fwait
lea
and
mov
sahf
jmp
ljmp
clc
cmp
xchg
rcll
inc
adc
mov
rorb
cwtl
fists
xor
in
xchg
fs
inc
out
nop
test
lock
loop
jbe
in
imul
add
imul
sbb
in
xchg
mov
or
cld
pop
xchg
fistpl
jle
stos
shlb
jp
mov
stos
mov
pushf
hlt
loope
sbb
arpl
outsb
idivl
fwait
mov
or
jbe
cmp
mov
xor
lcall
mov
push
sbb
or
bound
mov
or
or
and
imul
sbb
cmc
shll
jae
adc
inc
lahf
cwtl
push
je
mov
movsb
bound
xor
aad
and
test
sahf
sbb
sti
aas
or
sarb
faddl
sbb
jbe
jae
mov
dec
push
outsb
pop
fists
movsl
mov
jp
sbb
imul
loopne
and
lret
outsb
mov
pop
xor
mov
pop
imul
stos
add
out
pusha
mov
enter
xchg
jl
add
mov
popf
push
and
inc
frstor
outsb
in
movsl
push
push
jne
ljmp
sbb
divb
pop
orb
movsb
aad
sbb
cmpsb
dec
mov
or
mov
das
mov
cmc
cmp
mov
cmp
dec
fisubs
or
repz
cmp
pop
jo
das
xor
xchg
adc
fisttpll
rdpmc
mov
dec
or
or
aad
and
cwtl
xchg
dec
scas
les
lret
clc
lock
sar
out
fisubrs
pop
clc
adc
sbb
jo
test
xor
push
xor
adc
and
daa
xchg
aad
mov
scas
andb
xchg
test
movsb
xchg
and
mov
jo
or
or
imul
xlat
xlat
dec
xorl
jnp
stc
mov
xlat
scas
cwtl
testb
or
push
or
lret
pop
mov
fbld
mov
adc
mov
xor
pop
cmpsl
sub
mov
sbb
cmp
adc
aas
or
ljmp
out
push
aad
sbb
push
in
add
add
add
xchg
and
rcrl
xchg
and
inc
addr16
push
test
dec
aam
pop
inc
daa
push
pop
stos
adc
lret
cmp
bound
cmpsl
jae
xor
sbb
sti
dec
mov
sti
mov
adc
into
sahf
inc
sbb
xorb
pop
dec
bswap
fsubs
mov
std
mov
stos
fisubrs
cmp
sub
jne
or
xor
dec
mov
js
pop
adc
dec
jmp
pop
ret
shl
and
mov
sub
push
nop
and
cmp
stos
unpcklps
loope
adcl
xor
push
mov
mov
out
fs
jno
mov
ja
cmp
in
jnp
outsl
pushf
fldcw
sub
or
push
dec
inc
mov
xor
pop
pushf
pop
mov
xor
lds
imul
push
and
arpl
sbb
inc
dec
xchg
sub
pushf
mov
add
and
and
sbb
or
enter
pop
cld
cld
push
outsb
jb
sti
popa
gs
data16
inc
jmp
leave
pop
bound
lret
mov
orl
lods
pop
mov
sub
sbb
jbe
mov
mov
iret
push
cmp
dec
lods
jmp
mov
lcall
mov
fisubl
lods
loop
insl
repz
lock
imul
xor
test
xor
xor
pop
dec
add
test
and
js
sarl
lods
fsubrs
iret
call
mov
inc
or
movsb
mov
outsl
lods
fsubs
mov
imul
pop
cltd
mov
mov
in
jbe
dec
outsb
xor
mov
mov
aam
and
movsb
lds
xchg
mov
xchg
fimull
add
sbb
lret
mov
pushf
cmp
inc
add
add
adc
jmp
push
adc
out
inc
aad
lahf
cmp
gs
mov
in
cmp
sbb
cmpsl
pop
daa
idivl
xchg
hlt
fwait
or
popa
mov
shrl
or
lods
lods
pop
fimuls
push
cmpsl
das
sar
test
push
rorb
cmp
or
in
addr16
sub
add
mov
sub
sti
popf
es
imul
call
and
ja
xor
lock
int3
fadds
and
loope
cmp
push
imul
shrl
repz
and
push
dec
or
jp
pop
add
ss
jmp
aam
cmpsl
addb
insl
out
loopne
hlt
shrl
test
jg
jp
scas
ret
pop
stos
test
mov
cmp
pusha
es
xchg
push
adc
adcl
lods
jae
mov
jnp
daa
outsb
xchg
cmpsl
lock
ljmp
xor
out
push
inc
and
jae
and
pop
aas
mov
repz
repnz
repnz
push
xchg
fidivrl
fadd
in
iret
mov
adc
add
adcl
mov
repz
push
ljmp
xor
lods
int
pop
iret
mov
mov
movsb
push
or
clc
mov
icebp
clc
stos
sti
add
ret
ss
cmp
in
lods
in
jae
movsl
mov
pop
data16
lds
out
xchg
xor
add
jo
subl
js
push
lods
popa
lcall
das
cmp
inc
cwtl
addr16
dec
and
cmpsl
cmpsb
pop
push
jl
inc
mov
int
je
das
call
fistpll
mov
fsubrs
arpl
std
out
and
push
dec
jo
leave
enter
je
or
mov
test
idiv
jl
jae
sbb
push
iret
arpl
lds
fsubp
je
jnp
cmp
fisubrs
shll
add
sbbb
mov
adc
imul
jnp
repz
ret
les
notb
negb
and
sbb
call
xlat
stos
or
inc
mov
cmp
aam
sub
mov
les
filds
cmova
fisttps
fidivs
push
push
cwtl
inc
jnp
sahf
and
pop
repz
jb
repz
stc
jbe
in
push
add
test
dec
mov
mov
add
in
or
in
stos
movsl
imul
mov
sbb
mov
sub
aaa
jecxz
xchg
dec
scas
ds
pop
test
lcall
pop
xchg
mov
in
cwtl
xchg
xor
jl
push
outsb
adc
xor
movsl
pop
or
movsb
xchg
dec
mov
adc
stos
push
dec
pop
and
cmpsb
outsb
pop
ss
add
push
push
adc
cwtl
dec
dec
ja
daa
scas
ljmp
cmp
mov
loop
es
inc
adc
ret
ss
mov
xor
dec
inc
aas
xchg
dec
cli
push
sbb
cmp
dec
mov
xor
push
in
xchg
lcall
add
pop
and
push
movsl
out
mov
lret
arpl
jo
bound
movsb
lcall
in
xor
push
leave
ljmp
lahf
movb
leave
outsl
ja
in
cmp
andb
fistl
push
sbb
ss
adcb
sti
xchg
aaa
xor
push
inc
push
and
add
test
add
repz
jnp
sti
js
dec
repnz
cli
cmp
sbb
dec
das
add
gs
mov
jb
leave
mov
xchg
rcrb
inc
adc
repnz
xchg
lds
add
icebp
dec
imul
mov
mov
inc
bound
leave
cmp
and
sub
inc
fnstcw
in
cmp
rcrb
in
mov
pop
mov
xor
addr16
adc
add
cmp
das
stos
mov
mov
repnz
fldt
fcmovne
pop
cwtl
arpl
push
cmp
stc
dec
out
in
std
in
sbb
mov
xor
int3
fucomi
xor
fmul
cmc
mov
incb
push
pop
mov
fwait
sub
add
cmpsl
and
and
arpl
out
xchg
cmp
pop
mov
sub
add
jmp
adc
dec
jb
push
fildl
lret
inc
insb
gs
filds
sub
xor
lcall
sub
sbbb
jns
push
ljmp
es
in
out
xor
rol
in
mov
push
outsb
arpl
pop
sahf
fdivl
sub
dec
maxps
dec
testl
outsb
pop
stc
cmp
add
scas
mov
xchg
mov
std
stos
and
push
dec
insb
push
dec
xor
adc
repnz
push
cwtl
and
dec
sub
push
loope
mov
addr16
add
mov
or
mov
or
in
sbb
das
add
pop
cs
and
push
aam
ljmp
fimuls
in
cltd
jb
add
hlt
mov
daa
andb
or
mov
adc
adc
adc
ljmp
cli
cmp
lds
inc
iret
outsb
call
mov
mov
mov
ficoms
or
mov
pop
nop
repz
rclb
pop
stc
mov
sub
inc
sbb
inc
adc
jnp
mov
mov
ds
push
add
sbb
mov
aad
inc
push
add
jmp
notb
lds
pop
leave
sbb
test
sub
jp
mov
jo
inc
rclb
and
paddb
stos
jle
dec
xchg
pop
loopne
dec
sbb
mov
aam
sbb
bound
pop
adc
jb
shlb
pop
push
insb
xor
add
and
inc
xchg
mov
icebp
popa
push
shll
and
jecxz
ds
pop
dec
cmp
jg
add
add
lds
stos
pop
cwtl
xchg
jg
outsb
das
lcall
add
pop
xor
mov
das
aas
sub
dec
xchg
cld
mov
scas
or
imul
in
sbb
pop
fildll
enter
jno
scas
pop
ret
addb
inc
andl
dec
pop
int
add
sbb
mov
pop
pop
movsb
xlat
ficoml
lcall
stc
dec
pusha
pop
fwait
xchg
sahf
enter
dec
push
shr
icebp
arpl
clc
test
or
cmpsl
jmp
imulb
popf
or
iret
std
xorb
lea
xchg
inc
adc
stos
or
repnz
mov
out
or
jb
add
mov
repnz
push
mov
test
inc
lret
dec
mov
adc
mov
aad
lahf
xchg
or
imul
int
lods
les
inc
sbb
inc
jg
push
jmp
insl
les
or
cld
pop
mov
mov
jecxz
shrl
aad
dec
sub
add
cs
or
mov
add
xchg
xor
std
test
xor
jl
js
pusha
xchg
adc
push
loop
or
adc
sbb
dec
idivb
mov
push
add
hlt
cs
lock
add
mov
fwait
rclb
insb
std
pop
mov
lock
sub
adc
loope
jns
fbld
mov
stc
cld
push
lret
loope
jg
push
adc
cmp
inc
sbb
lahf
loop
pop
mov
in
fwait
add
lcall
int3
xlat
shlb
sbb
mov
aam
mov
cmp
xor
xor
cmp
je
fisttpll
shl
cld
and
mov
and
fwait
sub
lcall
xchg
ss
adc
test
mov
stos
xor
mov
cmp
fidivs
and
iret
jne
push
or
jbe
shrb
adc
push
loope
jne
popf
jns
dec
sbbl
int3
and
lods
xor
shrl
cmp
push
lock
ret
mov
repnz
sbb
or
mov
push
jl
mov
test
pop
mov
mov
and
fstpl
push
movsb
jg
and
xchg
addb
xlat
xchg
stc
in
mov
inc
popa
sbb
cmp
aam
nop
in
jno
pop
push
pop
adc
nop
xchg
sbb
xchg
int
bound
or
ja
push
lcall
fbstp
loope
es
cmp
cmp
push
sbb
test
and
aad
outsb
mov
sbb
mov
mov
mov
aaa
int3
mov
add
dec
mov
mov
pop
fnstcw
push
movsb
add
and
ljmp
pop
mov
lea
sbb
mov
cmpsb
mov
movsb
lret
sub
push
popf
pusha
sub
clc
sbb
out
lock
inc
je
leave
jns
sbb
inc
mov
push
test
lods
ljmp
and
repnz
outsb
roll
mov
push
sti
stos
mov
or
cmp
ja
int
xlat
dec
inc
push
inc
out
outsl
pop
fwait
jl
mov
lods
inc
and
sti
fcoms
data16
xlat
gs
sub
sub
ss
or
mov
mov
mov
inc
mov
icebp
lock
fucom
scas
adc
mov
jge
lds
dec
push
in
push
repz
das
ret
dec
cli
fnstenv
mov
pop
lret
xchg
xor
shrb
fiadds
jae
clc
jae
pop
jbe
mov
xchg
mov
add
push
pop
orb
imul
xchg
mov
cli
cmp
rorb
add
es
jbe
jecxz
dec
mov
aas
or
xchg
inc
ret
mov
pop
adc
lods
jmp
mov
or
mov
sbb
pop
adc
stc
mov
mov
xchg
bnd
xor
loope
dec
cmp
int
sbb
cmpsl
mov
sbb
xorl
sbb
cmp
sub
repz
add
loop
jo
mov
add
adc
mov
dec
mov
into
cld
mov
js
mov
lods
mov
xchg
sub
iret
arpl
inc
cmpsl
rcll
mov
pop
xchg
jge
cmp
adc
ljmp
dec
in
mov
jle
push
scas
js
jle
in
repnz
sarb
fdivs
lods
sbb
inc
cld
push
pop
js
es
rcr
sti
andb
insb
mov
dec
es
ss
shl
mov
dec
loopne
and
pop
aaa
insb
rolb
xor
sub
sub
and
stos
add
mov
or
lcall
jecxz
lea
loopne
add
push
cmpl
ss
ljmp
mov
sbb
popf
sbb
inc
int3
or
int3
popa
jnp
stos
inc
mov
sbb
mov
out
aad
adc
std
xchg
hlt
xchg
out
out
fwait
out
in
push
xor
jecxz
sbb
adc
xchg
push
push
movsb
adc
aaa
adc
test
movsl
sbb
out
icebp
insl
jns
mov
and
push
jno
sub
add
fcmovnbe
lds
mov
and
je
dec
leave
sbbl
add
aas
jl
push
push
arpl
mov
sbb
test
repz
loope
mov
mov
jbe
mov
xchg
push
and
loop
fwait
in
cmp
fisttps
rorb
sbb
sub
sub
outsl
pop
jl
test
pop
fmul
and
ds
mov
jge
pop
pop
mov
jae
adc
mov
cmp
loopne
lods
jmp
pop
pop
aas
cmp
mov
das
scas
cs
push
repnz
gs
int
inc
pop
push
int3
cmp
push
arpl
loopne
lcall
dec
push
mov
sub
xor
movb
cli
and
imul
notb
xchg
pusha
or
js
jo
push
inc
pop
leave
mov
add
xchg
iret
jb
pop
push
sub
xor
fisttpll
adc
jp
mov
xor
cmp
sbb
mov
pop
xchg
insl
cmpsb
cs
imul
pop
je
xor
cli
push
ss
jg
xchg
mov
mov
add
push
es
das
in
adc
loope
and
xor
pop
push
mov
gs
scas
inc
push
push
pop
fisubrl
or
or
mov
dec
lret
out
pop
mov
popf
or
jns
push
in
or
or
dec
mov
in
outsl
cmc
iret
rcll
mov
dec
mov
loopne
test
jae
rcrl
pop
or
pop
loope
cmp
loope
repnz
adc
mov
das
dec
adc
mov
mov
ret
inc
mov
adc
stc
mov
push
lahf
mov
add
fmull
loop
es
jne
add
jns
and
cmp
or
and
sar
cmp
mov
push
push
add
aaa
scas
mov
dec
mov
mov
xchg
lds
popf
inc
movsl
sbb
in
mov
jae
lret
push
xchg
add
adc
xchg
xor
xor
stc
xor
sbb
push
movl
mov
aaa
scas
or
or
push
inc
mov
cwtl
sarb
in
fisubl
add
jmp
fidivs
dec
mov
mov
ret
jmp
dec
dec
sub
jns
mov
xor
sbb
inc
add
int
push
mov
aam
iret
ja
cltd
mov
in
arpl
fldt
mov
stos
cmpsl
gs
mov
int3
movzwl
xchg
inc
hlt
lods
jns
movsb
movsl
into
xor
xbegin
adc
mov
stc
sbb
enter
jl
jecxz
push
inc
push
or
sbb
add
addr16
xchg
in
xchg
mov
push
dec
push
jl
cmp
cwtl
lock
les
es
mov
arpl
push
or
pusha
jp
test
mov
jmp
cmc
xor
aas
mov
loopne
arpl
mov
ret
xchg
ja,pn
test
or
push
adc
daa
dec
sub
sub
mov
and
inc
fnstsw
leave
aaa
mov
jns
jae
cmp
rcrl
aad
ljmp
ss
fbld
inc
lret
insb
or
or
pushf
out
orl
mov
mov
aad
and
popf
aad
mov
and
in
fdivr
out
adc
dec
aaa
imul
pop
mov
jne
inc
or
pavgw
push
jp
sbb
mov
loope
mov
inc
lods
mov
mov
mov
enter
das
sbb
add
sbb
rol
pop
inc
mov
sahf
dec
sbb
xchg
mov
movsb
shl
pop
stos
shlb
add
add
mov
icebp
or
sbb
inc
sbb
xchg
icebp
inc
insb
dec
add
loope
xor
in
pop
dec
sbb
js
std
jge
enter
mov
pusha
pop
orl
orb
icebp
lods
inc
stos
mov
pop
mov
dec
xor
push
sbb
mov
popa
inc
stos
add
shll
test
stos
mov
jl
cmpsb
fdivrl
push
jmp
rcr
sbb
cmp
je
mov
mov
ljmp
cmp
ljmp
mov
out
push
call
cmp
iret
xchg
idivb
mov
fsubrs
pushf
mov
nop
push
popa
inc
stos
or
scas
sbb
push
cmc
jne
push
inc
cmp
leave
dec
or
test
push
push
cmp
call
inc
xor
pop
pusha
jae
adc
dec
int
xchg
mov
mov
hlt
and
out
lea
clc
ret
inc
ret
push
pop
pop
jae
fidivl
sti
push
das
lcall
cmp
gs
leave
lods
adc
jo
or
inc
push
stc
xor
enter
cmp
sbb
rolb
push
sarb
sbb
xchg
inc
test
push
int3
push
push
cmp
mov
push
or
lods
inc
loopne
ret
and
push
xchg
fwait
push
faddl
fcmove
icebp
ljmp
add
test
xor
rorb
lds
cmp
iret
lret
fs
inc
mov
iret
fistpl
cld
mov
adc
and
mov
jp
add
and
inc
fdivs
xchg
ss
gs
jo
cmp
andb
leave
xchg
jmp
aad
xchg
jb
mov
incl
popf
sti
or
push
or
mov
add
pop
movsb
cli
mov
push
cmpsb
cmp
and
dec
fs
lcall
insl
sarl
adc
sub
or
sub
sub
movsl
cmpsb
sbb
mov
lret
enter
xchg
xor
ja
adc
mov
push
adc
or
pop
inc
ljmp
mov
sub
movsl
cmp
dec
mov
adc
jle
sbb
mov
or
mov
lret
sbb
aam
sbb
mov
mov
push
lock
cmpsl
in
arpl
loope
lock
sub
lret
test
jns
aam
call
push
push
popf
jp
fnstenv
notl
mov
test
mov
addr16
jp
xor
stos
bound
fsub
xchg
pop
jns
int
inc
dec
push
xchg
lods
ds
iret
dec
jbe
inc
rolb
xor
add
repz
int3
or
xchg
mov
sbbb
push
aas
xchg
movsb
insl
or
das
fstpl
fs
mov
and
and
and
mov
inc
mov
ss
dec
fisubs
xchg
jne
loopne
je
mov
sbb
dec
pop
aas
bound
je
fcoml
pop
icebp
pop
xchg
aas
sbb
pop
lcall
xor
shlb
in
imul
adc
hlt
insl
jae
faddl
mov
pop
dec
mov
imul
inc
iret
pop
or
xchg
imul
dec
cmp
adc
push
pop
test
xlat
js
and
aaa
jp
and
mov
movsl
pop
jg
rcll
mov
inc
adc
out
cmp
add
pop
add
mov
xorl
shlb
xchg
test
or
lods
aas
xor
adc
pop
test
lods
cmpsl
adcb
mov
adc
rclb
and
xlat
mov
push
test
insl
out
mov
cmc
dec
enter
push
dec
inc
add
mov
shrl
cmp
mov
addl
xlat
push
push
pushf
add
xchg
push
or
jmp
jbe
jle,pt
xchg
adc
repnz
rcll
adc
mov
fstpt
or
test
add
xchg
push
mov
stos
inc
mov
and
pop
shlb
push
leave
dec
lcall
push
push
cltd
and
jbe
adc
pop
jne
es
int3
dec
pop
xor
mov
addl
popf
shlb
mov
or
loop
push
fnstenv
in
pop
lea
mov
jmp
mov
mov
pop
xor
xor
outsb
mov
mov
xor
cmc
adc
mov
cwtl
mov
and
mov
pop
cmp
mov
cmpsl
add
gs
jns
loopne
loop
or
rcr
test
insb
das
stos
add
enter
mov
sub
out
adc
cmp
rclb
aam
repnz
data16
jmp
jo
sub
xor
mov
or
test
fsqrt
jo
mov
mov
add
lret
cmp
mov
fldenv
mov
pop
pushf
addr16
add
fldt
stos
out
mov
leave
or
out
ror
pop
cmpsb
repnz
adc
js
sbb
arpl
das
popf
dec
sti
int
xchg
outsl
mov
mov
in
mov
out
push
lahf
pop
fistps
or
ja
cmp
pop
jbe
lods
in
dec
fisubs
ds
movl
xorl
mov
fdivp
cltd
sbb
cwtl
nop
jmp
arpl
cmpsb
dec
pop
jmp
in
rcl
test
or
xchg
shll
xchg
dec
std
dec
rcr
lds
or
jle
scas
push
je
pop
xchg
in
in
jmp
and
mov
mull
push
outsl
fidivrl
scas
xor
int
pop
lds
adc
mov
xchg
shl
shlb
cld
call
or
push
pop
sbb
js
rorl
jg
stos
and
xchg
cmp
cmp
fdivp
pop
int3
mov
insb
fldcw
pop
lahf
mov
outsb
xchg
cmp
pop
and
jecxz
mov
adc
push
bnd
test
out
xor
test
xchg
or
inc
arpl
push
in
fidivs
shlb
push
mov
outsl
lea
call
pop
mov
enter
lret
dec
in
fsubrs
bound
and
lret
mov
dec
jecxz
mov
imul
inc
movsb
push
std
js
cmp
fildll
cmpsl
pusha
pop
and
xchg
mov
pusha
stos
mov
in
sub
sbb
in
stos
clc
mov
xchg
pop
cmc
repz
mov
adc
mov
mulb
sbb
push
mov
jno
pop
and
pcmpeqw
xchg
inc
mov
xchg
enter
std
or
or
aam
movsl
mov
lahf
pop
cmp
scas
test
dec
rorl
adc
pusha
mov
pop
pop
mov
mov
or
mov
xchg
jb
fistps
cld
fiaddl
nop
js
js
xchg
inc
jae
fldcw
sbb
inc
sbb
xchg
xlat
cmp
adcl
xchg
jns
fdivrl
and
aas
mov
xor
loop
lcall
mov
outsb
jo
cmc
pushl
mov
sbb
test
lcall
fildll
jnp
and
cmp
push
lock
cmpsb
mov
mov
pop
out
mov
xchg
pop
xchg
outsb
push
adc
in
fisttpl
lret
mov
jle
cmp
dec
test
pop
push
repz
andl
in
pop
jae
sub
cmp
dec
out
icebp
aam
adc
mov
cmpsb
dec
pop
cltd
push
out
repz
sub
add
dec
add
add
lea
push
xor
das
int3
sbb
mov
xchg
jae
out
xor
mov
mov
xor
movsb
or
xchg
push
sbb
ret
iret
orl
out
sub
add
gs
xlat
mov
jo
pop
faddp
and
sbb
push
push
out
cltd
sbb
xchg
push
mov
cmp
sbb
in
pop
nop
cmpl
aaa
inc
mov
xor
ljmp
rcl
and
inc
jg
sbb
andb
loop
cmp
lcall
or
mov
call
mov
mov
loope
xchg
sbbb
ret
loopne
pop
add
jne
lcall
rcll
mov
loopne
es
out
push
imul
add
inc
arpl
sarl
lcall
nop
or
into
cmp
test
pop
mov
dec
hlt
jae
cmp
jb
lea
je
xor
mov
jge
loop
mov
xor
mov
popf
jge
movsb
add
adc
out
sub
fucom
and
mov
fiadds
xchg
dec
imul
mov
aam
mov
jo
dec
add
push
lods
mov
cld
ret
push
aas
loop
popf
movsl
cld
sbb
mov
jo
pop
mov
sub
fstps
enter
aam
outsl
push
mov
orl
iret
aaa
mov
ss
clc
jbe
ret
in
and
jmp
inc
and
aad
lock
push
call
data16
popf
push
adc
push
push
arpl
mov
cs
xor
rcrb
stc
adc
lods
sbb
in
jne
insl
imul
push
das
pop
daa
dec
sahf
les
outsl
ret
pop
fmull
mov
and
loopne
ficoml
mov
cltd
mov
pushf
adc
insb
clc
adc
and
clc
xorl
iret
lret
xchg
pop
jge
mov
scas
pop
pop
popa
push
add
gs
lods
pop
loope
or
fistpll
sbb
nop
mov
xor
mov
xchg
cmp
std
push
ja
or
inc
pop
aam
je
push
mov
mov
sar
or
mov
xchg
xchg
adc
movsb
loop
mov
enter
mov
sub
adc
push
repz
push
jnp
dec
and
repnz
jnp
mov
popa
mov
add
mov
clc
nop
inc
xchg
movsb
mov
mov
mov
push
pop
adc
add
sbb
jnp
les
adc
fbstp
mov
imul
or
mulb
out
movsb
jo
mov
sub
leave
mov
add
xchg
sbb
mov
cmpsb
and
fnstsw
mov
cmp
dec
out
cmc
pop
pop
fcmovbe
fistpll
dec
pushf
xor
sbb
mov
add
lcall
out
sarl
stos
dec
push
sub
hlt
pop
xchg
imul
ret
cmpsb
mov
mov
or
insb
dec
in
mov
orb
jmp
fdivl
lahf
repz
dec
xchg
arpl
xor
cmp
jne
mov
cld
pusha
mov
push
out
xlat
sbb
lock
sbb
push
stos
jecxz
lret
jb
mov
mov
sbbb
out
push
popa
pusha
nop
ja
test
push
rcrb
lods
insl
sti
loopne
rolb
inc
mov
movl
mov
mov
cs
mov
mov
dec
mov
nop
pop
cmp
inc
imul
sub
insl
add
mov
fstpt
xchg
in
pusha
cmp
xchg
sbb
clc
cmp
leave
push
out
lcall
dec
jno
or
push
push
pop
dec
into
sahf
test
out
and
jae
or
sbb
pop
mov
inc
sbb
adc
inc
dec
cmp
sbb
shll
pop
jo
mov
sub
fstl
mov
cs
test
dec
inc
adc
or
jecxz
adc
out
shlb
pop
fcoms
xor
pop
push
sub
mov
outsb
std
jo
movsb
dec
cmpb
mov
lds
rorb
popa
sub
mov
or
pop
mov
test
jo
mov
ret
jns
or
mov
add
sub
mov
inc
and
stos
xor
sub
add
pushf
in
jns
pop
fidivrs
inc
or
ds
lods
fwait
pop
cmp
js
mov
cmp
mov
add
dec
sbb
mov
cwtl
push
jg
mov
in
cmpsb
pop
in
cmp
cli
dec
and
leave
pusha
mov
pusha
lret
sbb
xor
enter
repz
xchg
cmp
xchg
in
jl
push
pop
pop
push
xor
cmp
jo
sub
aas
mov
push
adc
jbe
mov
repnz
push
pop
stos
hlt
xchg
add
loope
mov
and
pop
sub
rcrb
pop
out
pop
cmove
inc
mov
scas
mov
inc
sub
cmpsl
xchg
mov
push
jmp
das
sbb
add
fsubrl
push
jns
push
dec
push
jb
mov
jae
xlat
jno
scas
pop
adc
jo
call
mov
enter
fcomps
sbbl
mov
stos
xchg
outsb
insb
pop
notb
jg
mov
cltd
mov
leave
ret
xchg
dec
jbe
mov
push
cmc
js
fdivs
adc
stos
xchg
adc
cmc
mov
je
ficomps
pushw
xor
mov
push
data16
mov
lods
and
push
test
dec
jnp
dec
dec
mov
testb
sub
int3
adc
xor
inc
pop
sahf
lods
hlt
test
lahf
jo
adc
push
clc
test
jo
ljmp
lcall
mov
arpl
sti
cmc
dec
in
in
add
icebp
js
mov
cwtl
mov
rcrl
test
xchg
icebp
jmp
pop
ror
adc
test
dec
cs
push
pop
shl
jecxz
add
dec
data16
in
int3
cmc
mov
lret
shl
jnp
add
movsb
dec
jmp
pop
insb
mov
cmp
loopne
mov
ds
test
es
ljmp
mov
mov
fidivrl
mov
adc
or
push
cld
push
sub
adc
xor
xchg
leave
stos
jl
push
dec
test
ret
pop
jo
cwtl
aad
pushf
xchg
lods
inc
aas
mov
dec
das
lock
dec
push
mov
push
sbb
mov
mov
shlb
lea
adc
adc
les
lock
push
int
lds
hlt
dec
pop
lcall
ret
pop
xchg
sbb
aam
mov
push
negl
shlb
daa
mov
lret
cltd
pushl
adc
jmp
jnp
xor
lods
or
iret
in
inc
push
mov
mov
xchg
gs
jmp
call
jl
pop
sbb
dec
jb,pt
test
ret
xor
outsl
sub
sbb
or
xchg
aas
xchg
jne
testb
push
ficompl
add
push
jno
lods
dec
dec
mov
pop
sbb
xor
push
testb
mov
mov
dec
ja
pop
mov
push
aam
adc
fldenv
mov
mov
nop
lea
cwtl
or
pop
andl
andl
mov
mov
dec
imul
sub
cmpsl
cld
add
push
or
mov
dec
loope
dec
mov
sbb
lgs
lret
popf
mov
fldenv
xor
pop
sahf
add
jo
jmp
xor
out
cmc
push
test
xchg
cmp
popf
inc
inc
jmp
sub
sub
sbb
pop
cs
je
mov
push
jnp
push
pusha
popa
xor
push
aaa
add
mov
ret
pushf
lahf
insb
pop
das
sbb
mov
jmp
or
pop
and
loope
sbb
je
test
sbb
orl
loope
cmpsl
inc
aaa
adcl
push
push
aad
push
out
in
jmp
mov
mov
cmc
pushf
arpl
shrb
jle
xor
push
lcall
xchg
mov
push
orb
jp
mov
fsubrs
and
scas
rclb
lahf
pop
and
insl
aad
les
pop
xlat
pop
jbe
sub
or
or
test
mov
jb
xor
dec
mov
xor
pusha
cmp
addl
cltd
int
jnp
loop
outsb
inc
add
insb
dec
jp,pn
mov
std
pushf
dec
cwtl
pop
mov
sbb
dec
add
leave
push
adc
xlat
aam
push
std
and
leave
mov
sbb
sahf
sbb
in
or
mov
bound
ret
pop
sahf
je
mov
inc
iret
jle
fstpl
jp
nop
xlat
notl
mov
jae
into
push
leave
jl
sbb
mov
push
popa
xor
adcb
add
mov
loopne
ret
xchg
mov
test
adc
lods
dec
add
shll
mov
jecxz
mov
and
lret
repnz
mov
std
xchg
sub
mov
out
jecxz
or
lret
pop
shrb
add
mov
fisubs
mov
dec
inc
push
mov
loop
xor
or
aaa
add
mov
push
inc
cli
es
xchg
das
adc
icebp
xor
pushf
shlb
xchg
outsl
test
fucompp
mov
in
int3
cmc
shlb
scas
mov
shll
loope
popa
fsts
stos
arpl
adc
fs
fisttpll
cmp
mov
mov
pop
mov
out
xchg
loopne
lods
push
and
mov
je
je
test
jo
mov
dec
into
into
sub
arpl
in
test
sub
iret
dec
adc
mov
into
je
ret
pop
lret
aas
mov
outsl
daa
icebp
neg
xchg
inc
dec
inc
pop
cltd
into
repnz
imul
mov
out
adc
fs
lret
fiadds
aaa
and
inc
aad
negl
mov
test
dec
lods
push
stos
sub
pop
aad
push
std
scas
mov
popf
jb
add
cmp
cltd
out
lret
leave
inc
cmp
icebp
xor
lahf
push
mov
jecxz
test
mov
jne
push
sahf
dec
das
sti
mov
insb
sbb
sub
or
test
xor
sbb
inc
adc
jb
jae
push
mov
inc
cmpsl
or
cs
lods
cmp
push
sbbl
jb
outsb
push
stos
jmp
push
mov
xor
mov
hlt
nop
test
jge
into
gs
aaa
shrb
mov
sbb
pop
inc
cmc
aad
in
movsb
test
loop
inc
iret
imul
jae
iret
jnp
pop
enter
mov
outsb
or
mov
stos
sarl
loop
mov
outsl
bound
mov
mov
and
cwtl
lds
cmp
adc
shrb
dec
mov
lock
fnstsw
repnz
cmp
pop
pop
test
xchg
push
or
dec
and
fidivrs
pushf
xchg
or
out
xchg
enter
add
mov
xchg
xchg
std
sbb
in
fiadds
movsb
jp
lret
test
outsb
and
sub
stos
jp
or
int3
mov
ljmp
xchg
sub
lahf
roll
insl
lret
imul
cld
inc
imul
enter
lret
inc
adc
mov
xchg
stc
dec
sarl
cmp
cwtl
fdivl
outsb
roll
fidivl
cltd
lock
cwtl
aam
fidivl
inc
test
arpl
mov
fldt
lcall
in
cmc
mov
adc
lcall
push
cli
or
rclb
dec
xchg
fnsave
mov
xchg
notl
test
mov
fcmovu
insl
push
push
out
ds
push
sub
dec
jae
ret
loop
or
jge
sti
setp
lahf
out
nop
dec
pmaddwd
test
cmp
enter
int
adc
rolb
xor
lret
sub
mov
pop
and
inc
cmp
cmpsl
or
push
xchg
add
inc
mov
int3
icebp
popf
idivl
fimull
rcl
testl
add
cmp
jmp
sub
jb
imull
loop
mov
cmc
push
outsb
push
in
lds
rorl
sbb
inc
xchg
cmp
dec
popf
xor
or
aad
rol
sub
xchg
rcl
or
push
fidivrs
pop
repnz
xor
inc
aam
xchg
adc
mov
lock
inc
int
das
pop
add
sbb
jno
inc
lcall
mov
scas
stos
mov
imul
adc
fiaddl
pop
test
outsl
sar
repnz
mov
stc
xor
popa
std
mov
sub
imul
mov
sub
roll
insb
out
lea
sub
jno
clc
mov
imul
js
sbb
scas
dec
fucomi
and
shlb
xchg
mov
scas
adc
push
sub
cmp
mov
xor
pop
inc
cwtl
test
arpl
jge
mov
in
popa
pop
mov
stos
in
cmp
cli
jmp
mov
cmp
cmp
imul
sarl
cwtl
xorb
lcall
out
popl
in
push
push
mov
test
call
frstor
push
xchg
sub
into
arpl
bound
cmp
popf
add
in
or
jl
pusha
push
xor
icebp
out
push
pop
jge
mov
add
pop
imul
xchg
mov
xchg
mov
xchg
icebp
out
add
repz
pop
push
nop
cli
ja
pop
sbb
xlat
ss
das
and
cltd
or
ds
cwtl
adc
movl
xor
dec
imul
cmc
out
xchg
std
and
rcrl
pop
fwait
inc
shll
cmpsl
call
xchg
lea
std
loope
fs
mov
cmpsl
lret
cli
stos
mov
add
hlt
push
xor
add
sti
fimuls
data16
dec
inc
in
pop
mov
cmp
fisubrs
xchg
in
cmp
in
inc
iret
fistpl
outsb
lret
roll
pop
daa
jns
cmp
mov
stos
add
out
fisttpl
jecxz
mov
xor
jg
add
iret
inc
std
ja
sub
pop
pop
fs
sbb
shrl
xchg
mov
inc
out
dec
shlb
mov
push
mov
ljmp
repnz
leave
sbb
xlat
push
out
cmp
pop
das
scas
mov
ret
lock
sub
mov
fisttpll
cmp
dec
inc
jecxz
adc
adc
adc
sub
xchg
fiaddl
ficoms
push
mov
icebp
sti
test
mov
addb
dec
es
mov
fmuls
and
dec
jb
fldenv
push
mov
xchg
fcomps
mov
daa
add
ja
lahf
aaa
cmp
dec
xor
and
das
popf
add
fstps
or
mov
adc
inc
inc
daa
jnp
iret
stos
mov
xchg
sbbl
xor
xor
js
fs
sbb
rcrb
movsb
rclb
mov
std
or
lods
je
les
loop
icebp
sbb
inc
dec
push
push
imul
mov
push
sub
iret
push
mov
mov
int3
cld
sbb
jns
divl
xor
icebp
cmp
aad
sbb
rcrb
sbb
push
mov
mov
lea
xor
popf
jne
inc
xchg
loop
sub
mov
push
cmc
or
adc
mov
sub
mov
lret
mov
fdivl
mov
lret
imul
xor
inc
jb
cli
or
pop
adc
xchg
push
pushf
das
inc
shlb
call
cli
lock
lods
movsl
pop
aaa
adc
cs
push
call
lods
adc
jo
mov
faddl
js
repnz
scas
jl
pop
scas
iret
xchg
pop
adc
jl
iret
xlat
mov
xor
pushf
popa
imul
add
stos
cmp
shlb
jmp
jg
pop
pusha
pop
in
xor
cmp
jp
xchg
das
cmpsb
daa
gs
orb
mov
into
fcomps
jecxz
cli
sbb
aad
sub
jns
imul
ljmp
xchg
sahf
sahf
sub
and
or
subl
pop
movsb
js
shlb
push
je
sub
roll
adc
lods
push
shlb
add
hlt
or
add
pop
imul
out
mov
iret
or
lret
push
sub
sarb
add
stos
fisubl
mov
sub
outsl
xchg
fisttpll
sbb
sbb
xor
in
xchg
gs
cmp
int3
cld
xchg
shrb
add
push
insl
cmc
dec
clc
pop
mov
popf
out
lds
jmp
sti
out
adc
mov
hlt
pop
andl
xor
ret
adc
inc
xlat
in
or
bound
bswap
fistps
mov
sub
xchg
mov
test
xor
sbb
mov
jle
or
and
stc
xchg
scas
cwtl
popf
and
outsb
pop
jno
sub
movsl
sbb
push
push
imul
add
addl
mov
out
jg
sbb
cltd
jge
pusha
xchg
xchg
cmc
pop
test
xchg
mov
aas
pop
loope
cmp
xor
mov
push
loop
repz
sbbb
daa
mov
jl
stos
push
mov
pop
fdiv
ljmp
or
push
cmpsb
inc
or
xchg
addr16
out
xchg
pop
jno
arpl
xchg
xor
cmp
xchg
es
mov
and
or
mov
mov
sub
lods
fbstp
jge
jns
in
jecxz
sahf
shll
push
std
shrb
dec
lock
mov
out
sbb
and
jb
clc
ficomps
pushw
out
pop
sbb
sub
ss
cmp
xchg
jnp
xchg
mov
aaa
cmp
xor
lcall
xchg
ljmp
lock
inc
subb
dec
int3
push
push
mov
loop
pushf
mov
fisubrl
push
push
stc
dec
insl
jg
cmp
movb
mov
pop
xchg
dec
push
es
pop
xor
aaa
inc
fcoms
mov
fstpl
or
cmpsl
outsb
scas
rcrl
fstps
ljmp
xor
push
and
or
xchg
ret
mov
dec
sti
dec
gs
cmpb
sub
mov
push
jns
scas
xchg
out
sub
push
sub
or
cmp
fildll
je
inc
lea
pop
les
inc
xor
mov
adc
xchg
fidivl
adc
lret
inc
int
ja
insb
aam
push
fdivl
push
jnp
imul
inc
add
inc
test
adc
xchg
pop
or
cmpsb
fld1
popf
mov
xor
loope
js
addr16
cmp
es
mov
popa
mov
dec
sbb
sbb
xchg
jl
js
daa
cltd
xchg
adc
sahf
sti
xor
sub
shrl
aaa
push
push
loopne
ret
movsl
ss
ja
jle
xchg
cwtl
icebp
scas
rcl
in
bound
push
int3
sbb
add
xlat
xchg
adc
dec
js
je
ss
jae
sub
cmp
dec
sbb
movsl
jmp
scas
shll
jg
in
cmp
aas
out
fsubrs
shl
aad
cmp
fnstcw
push
pop
leave
sahf
sub
cmp
xlat
test
hlt
into
loop
lcall
movsl
je
dec
stc
fcomip
xchg
and
aas
add
lds
into
insb
popf
xor
ds
lds
mov
mov
push
int3
cmp
aam
data16
sub
or
loop
cmc
fwait
jb
ficoml
mov
or
xor
xchg
sbb
rcl
mov
cmp
jae
push
pushl
sub
inc
aad
int3
pop
xchg
stos
cmpsb
cs
ja
repnz
mov
jns
fs
rclb
or
or
and
dec
jae
test
cld
push
jecxz
lods
movsl
dec
mov
sub
les
mov
pop
mov
je
sbb
inc
sub
nop
jns
test
jo
mov
out
jo
orb
adc
cmp
das
cmp
out
out
stc
lret
lret
int
sbb
jp
and
into
mov
jno
stos
leave
in
sub
int
nop
push
mov
shrb
movsb
loop
fildll
inc
mov
or
fildl
out
mov
pop
sub
mov
in
leave
xor
cld
into
dec
int3
popa
adc
inc
sub
mov
mov
mov
popa
jl
inc
mov
pop
pop
int
xor
out
divl
or
ja
dec
insl
inc
adc
jno
add
ljmp
stos
dec
cmc
sarl
fldcw
pop
lahf
and
hlt
sahf
imul
add
sub
adcl
ret
xchg
nop
test
test
sbb
xor
sbb
xor
repnz
inc
cmpsl
jb
mov
sub
mov
das
cmpsl
adc
adc
and
and
jg
in
hlt
mov
lret
mov
lea
push
or
cmpsl
out
push
sbb
xchg
xor
mov
sub
pop
inc
jnp
pop
fdivs
mov
rol
mov
stc
fbld
sbb
jnp
xor
lods
push
or
stos
add
sub
fnstcw
or
mov
xor
shlb
inc
sbb
xor
sub
jb
cmp
xor
sti
lcall
dec
lcall
aam
jae
sbb
push
mov
jb
inc
not
shrb
mov
popf
push
jne
out
outsb
ret
flds
add
xchg
sahf
xchg
rorb
fs
cmp
les
jmp
rolb
adc
cmpsb
xorb
imull
cmpsb
mov
int3
inc
dec
and
lock
dec
jle
fsubs
add
xchg
jg
stc
sub
jecxz
jle
cltd
jb
cmp
andb
shrb
jno
or
mov
popa
pop
adc
enter
cmpsl
fimull
adcl
and
andl
test
jns
pop
outsl
add
xchg
int
inc
in
hlt
popf
pop
icebp
iret
pop
pop
lcall
in
push
shrb
repnz
xor
and
pop
pop
sub
sub
into
pop
sub
cltd
leave
jnp
or
add
adc
pop
popf
sbb
sahf
repz
movsb
mov
inc
xchg
sbb
push
insl
mov
rcll
or
repz
ds
in
or
sub
push
je
sub
cmp
push
enter
cwtl
cmp
xchg
or
clc
inc
pop
rcll
dec
addr16
inc
and
fnstenv
sahf
nop
inc
sub
mov
cld
loope
lret
sub
mov
pop
pop
mov
test
xchg
add
add
packsswb
lods
mov
insb
jns
stos
sub
ffreep
hlt
pusha
sub
outsl
push
dec
out
and
xchg
jne
sbb
sbb
lret
dec
and
sbb
jp
pop
pop
sbb
adc
insl
enter
ret
mov
adcl
jp
dec
push
sbb
mov
js
xchg
stos
addb
dec
nop
add
js
test
int3
pop
in
imul
cwtl
jno
xchg
pop
test
push
inc
lahf
and
dec
xchg
xor
mov
adc
xchg
repnz
xchg
mov
sahf
mov
add
push
dec
int3
adc
outsl
mov
cmpsb
adc
add
add
jbe
push
xchg
loopne
xor
shr
dec
mov
ja
push
nop
sub
imul
ljmp
sbb
popf
push
lods
cmp
and
test
or
gs
punpcklwd
push
ja
adc
inc
mov
gs
jne
arpl
sbb
pop
aaa
dec
adc
ja
bound
push
in
pop
movsb
imul
outsb
pop
sub
lods
out
cwtl
clc
mov
pop
cmpsl
pusha
mov
mov
mov
clc
fdivrl
pop
and
adc
jnp
pop
addr16
add
cmp
adcb
mov
outsl
test
and
out
into
or
daa
lock
sub
dec
fimull
clc
aaa
push
push
xlat
dec
test
insl
adc
ret
jp
xchg
push
add
sub
dec
jnp
gs
mov
lea
adc
subl
mov
jbe
lock
sarb
mov
sub
call
xor
popf
popa
or
adc
and
sub
push
xlat
push
clc
mov
mov
rol
pop
aas
sti
ret
or
xchg
mov
sbb
imul
adc
nop
sbb
es
push
pop
mov
imul
jo
aas
sarl
ret
add
mov
add
in
adc
pop
dec
cltd
xchg
je
lds
imul
adc
mov
lcall
aas
jmp
pop
sub
mov
push
in
int3
dec
or
push
loopne
push
sbb
jge
pop
data16
pop
push
lret
pop
in
push
popf
cltd
arpl
adc
sub
lea
repz
inc
bound
mull
sarb
jmp
pop
scas
push
and
xor
movsl
push
popa
popf
and
mov
in
js
adc
push
in
xchg
out
pop
es
frstor
sarl
std
div
stos
loop
jl
sub
push
mov
dec
mov
mov
and
fsubs
xor
loope
inc
lock
sub
stos
add
mov
nop
push
mov
mov
fldcw
mov
jmp
cmpsl
daa
test
sub
xchg
sbb
cmp
out
popf
push
lea
popa
sub
sti
pop
adc
push
adcb
call
int
dec
or
push
ror
ret
arpl
or
test
jp
cmpsl
xchg
xchg
dec
cwtl
xor
sub
sbbb
fisubrs
pcmpgtb
mov
adc
jae
cmp
andl
jp
jl
pop
fnsave
mov
fistps
push
fwait
dec
rcr
fnsetpm(287
stc
mov
mov
mov
aam
pop
insl
imul
into
int3
ljmp
jmp
adc
add
pop
sub
insl
loope
cmp
push
std
pop
jnp
push
test
les
inc
fwait
imul
pop
mov
test
mov
mov
dec
sub
jo,pn
pop
repz
pop
test
dec
cltd
adc
call
sahf
notb
adcl
shlb
pop
dec
sub
fwait
cs
jbe
dec
ss
jnp
push
loop
lock
adc
shlb
popf
jmp
sub
enter
push
xchg
sbb
icebp
dec
and
pop
add
test
mov
lock
and
lods
cld
or
js
aad
outsl
orb
jle
cmp
cmp
mov
xlat
dec
add
test
in
sbb
nop
int3
imul
and
add
jnp
popa
xchg
shlb
shll
cs
inc
sbb
imul
mov
sbb
imul
or
push
xchg
add
movsb
int3
dec
pushf
push
out
mov
das
and
imul
pop
sub
inc
push
movsb
cmp
jmp
dec
shlb
push
jnp
aad
outsl
scas
imul
aam
and
je
data16
imul
call
lea
aam
xor
cmp
mov
xchg
call
std
cmpsl
jne
mov
sub
cmpsl
cs
push
pop
and
xchg
mov
mov
pushf
push
add
andb
and
ja
in
and
jo
add
rolb
jecxz
push
lock
out
lods
movsl
push
push
mov
and
faddl
loope
jbe
sub
aas
mov
js
pop
mov
cltd
pop
sbbl
push
movsl
sbb
push
add
je
ljmp
pop
ds
jae
xor
inc
and
outsb
mov
cmp
es
pop
out
arpl
mov
pop
call
inc
cwtl
or
adc
sub
push
gs
add
lods
shrb
cmpb
mov
test
push
push
push
gs
inc
jl
mov
jb
pmaddwd
mov
and
hlt
jle
dec
jbe
loope
xor
sbb
cmpsb
push
in
mov
outsl
movsl
aaa
jp
adc
and
lds
pop
push
std
xchg
push
aaa
sbb
mov
scas
cmp
xor
cmp
aaa
lds
mov
push
jg
inc
cmp
inc
inc
adc
dec
fmull
xchg
xlat
push
adc
popa
movsl
pop
stos
push
xabort
decl
cmp
sbb
xchg
xchg
imul
cs
and
cmpsb
cmp
fidivrs
scas
mov
loop
out
adc
in
xchg
jns
lahf
aaa
sub
cmp
lcall
lret
movsb
bnd
lds
push
inc
shll
push
mov
inc
push
pop
pusha
dec
aad
scas
arpl
nop
mov
in
or
gs
rorl
out
lock
xchg
fisttpl
push
pop
jo
in
xor
xlat
mov
fstpt
ljmp
push
add
push
test
clc
rcl
sub
pop
and
jl
insl
test
inc
loop
cwtl
leave
movsl
pop
jne
jp
int
inc
aam
pop
pop
scas
jae
and
sub
push
mov
jae
sbb
dec
pop
push
dec
cmpsl
add
adc
out
sub
lahf
data16
or
int3
test
or
es
mov
pop
ljmp
clc
inc
add
shrl
pshufw
mov
int3
mov
xchg
mov
repz
push
ss
push
addr16
pusha
push
and
cmp
inc
pop
jb
cmpsl
push
lcall
shl
jge
push
xchg
call
pop
pop
mov
icebp
xchg
jno
sarb
xchg
xchg
lret
ja
leave
cltd
gs
cmp
fcmovbe
push
and
xchg
aad
icebp
jbe
aam
sub
mov
jmp
cmpsb
out
push
jno
sbb
sahf
sbb
icebp
push
sbb
sub
cmp
jp
dec
dec
or
iret
adc
inc
mov
inc
adcb
loop
aad
sti
xlat
pop
mov
dec
xor
push
lds
mov
xor
clc
and
cmp
roll
lds
mov
adc
lcall
sbb
or
mov
cli
jmp
movsb
lcall
int3
fisubs
or
pop
cmpl
ret
adc
inc
cmpsb
loopne
out
jno
push
repz
xchg
inc
lahf
icebp
sub
sarl
xor
leave
sahf
jnp
loopne
in
faddl
loope
and
cmpsb
mov
xchg
xchg
fnstenv
mov
mov
adc
inc
clc
shrb
lret
inc
arpl
inc
insl
push
in
leave
daa
fistpl
sbb
shll
mov
push
clc
xchg
test
push
ret
push
scas
mov
outsb
mov
add
gs
xchg
jbe
jle
cld
test
in
cltd
stos
daa
mov
xor
push
lahf
jle
ja
jmp
out
add
xchg
mov
mov
test
adc
mov
insb
sahf
pop
pop
add
inc
movsb
sub
cmpsl
std
dec
negb
loope
int3
movsb
pop
jg
sub
cmp
fcmove
sti
rolb
and
sub
out
mov
jp
loop
mov
in
pop
jb
lods
mov
imul
push
push
mov
stos
outsb
fsubrl
fldcw
in
inc
ds
icebp
cmp
inc
adc
jb
push
lea
jp
or
fcmovnb
sar
mov
das
mov
popf
cs
inc
push
seta
stos
adc
ds
mov
imul
mov
xchg
call
inc
sub
jp
divps
std
adc
stc
aas
jecxz
ret
rorl
movsb
adc
cmpsl
mov
sahf
sbb
pop
sub
sbb
or
inc
fwait
int3
sub
xlat
loop
cld
ret
lret
pushf
pusha
xchg
sarb
inc
fcmovnu
push
wbinvd
in
sbb
sarl
lods
leave
mov
insb
adc
mov
fldcw
ljmp
outsb
scas
fwait
xor
insb
rolb
mov
ret
cmc
dec
push
push
xor
mulb
jno
inc
lods
les
fwait
cli
shrl
push
xor
jg
pop
mov
jnp
cmp
rep
add
push
ficomps
lret
addr16
xchg
or
or
xorb
mov
repz
incl
push
rcrl
ret
scas
nop
lret
xchg
orl
lods
cmp
sub
cld
jbe
xchg
pushf
cli
add
cmp
push
leave
or
fadds
pusha
sbb
mov
mov
mov
mov
jmp
pop
pop
fs
cs
sbbl
cmpl
movsb
mov
pop
imul
and
and
sbb
cmp
leave
clc
lods
adc
lds
mov
inc
xor
or
stos
out
notl
shll
dec
js
fwait
pop
out
in
cmp
pop
add
mov
mov
fisttps
fs
mov
out
sub
dec
jo
insl
jle
sub
icebp
sub
insb
xor
mov
into
cld
mov
xchg
dec
rolb
popf
mov
pop
cmp
cmp
lds
xor
aaa
xchg
in
mov
les
lock
mov
andl
add
in
push
rclb
push
fcmove
cmc
mov
sbb
int
mov
sbb
nop
in
dec
sub
adc
stc
sub
jae
and
addl
fmul
adc
sahf
loop
dec
cs
or
and
ja
xor
mov
push
push
xchg
push
inc
out
shlb
cwtl
lea
aad
xor
aaa
ljmp
mov
je
test
test
cmova
pop
xchg
jo
xor
jg
mov
aaa
mov
addr16
inc
lret
jecxz
leave
push
inc
test
test
stc
sbb
add
cmp
ret
mov
mov
adc
leave
and
mov
test
iret
mov
pop
adc
lret
in
cmp
cwtl
mov
nop
test
mov
lods
inc
pop
out
mov
test
sti
add
aad
dec
mov
xchg
push
and
test
lret
movsl
inc
out
jo
jle
sub
lods
imul
sahf
das
push
push
leave
mov
test
ljmp
lcall
xorb
mov
push
jecxz
cmp
ja
push
push
inc
ja
sahf
leave
lock
xchg
jmp
dec
xchg
or
test
in
adc
ret
leave
push
stc
std
cwtl
roll
xchg
and
dec
sub
int
rcr
aam
nop
mov
jb
mov
insl
cmp
push
pop
and
dec
lds
push
xor
sbb
fcoml
xchg
wbinvd
adc
je
and
xor
jle
in
insl
push
jnp
or
push
pop
push
pop
mov
xchg
jecxz
jnp,pt
sub
int
ljmp
jge
test
mov
mov
test
mov
cmpsl
fcomi
sbb
sbbb
shlb
lea
lods
mov
xor
arpl
or
and
enter
add
aas
mov
push
xchg
jmp
jns
cmp
cmp
mov
movsl
mov
mov
jle
bound
idiv
repnz
hlt
inc
movsl
cmc
imul
push
cs
sti
push
in
cli
jmp
and
repnz
orb
je
pop
mov
call
int
xchg
rcl
out
dec
mov
test
dec
mov
jge
rcr
nop
popf
test
cs
sub
bound
add
negb
ds
inc
mov
fxtract
xchg
jp
pop
ss
xchg
push
inc
cmpsb
jbe
int
add
ret
sahf
sbb
inc
stc
push
in
push
das
adc
nop
incb
push
addr16
mov
xor
aaa
mov
push
lods
mov
jnp
add
jecxz
roll
mov
cmp
stos
iret
test
decb
add
mov
mov
hlt
loopne
pop
repz
test
mov
je
call
iret
outsl
and
shufps
out
jmp
xor
sub
xor
sbb
movsb
mov
test
insl
cmc
jo
mov
xor
push
out
xchg
inc
adc
fwait
lods
in
int3
cs
fdivrl
pop
lds
loopne
inc
push
clc
jle
xor
sbbb
js
adc
or
mov
mov
jg
mov
imul
cltd
sbb
addr16
pop
adc
test
lret
mov
popf
lods
mov
js
cmp
rcrl
jo
mov
mov
xor
xchg
xchg
outsb
test
jecxz
mov
in
jp
mov
sahf
push
in
adc
and
and
repnz
popa
jge
mov
std
cmpsb
pop
mov
jmp
fld
sbb
mov
int3
fs
lret
roll
lods
fwait
jnp
insb
mov
or
je
outsb
or
or
jo
xor
mul
orb
xchg
jge
iret
inc
js
lcall
cmp
lahf
sbb
or
xchg
sub
cmp
add
in
stos
mov
leave
sbb
or
fwait
ret
popa
dec
cmpsl
inc
sub
lahf
push
shrb
fwait
lock
pusha
stos
push
jbe
xlat
push
add
jae
dec
pop
add
insl
gs
out
jecxz
inc
add
jg
jo
cwtl
negl
xor
addr16
stc
in
mov
inc
fidivl
mov
pusha
loopne
add
daa
scas
out
nop
sti
xchg
sub
icebp
jg
enter
sbb
je
xlat
add
sub
xchg
push
push
adc
sbb
popa
lcall
mov
xor
push
es
push
stc
jle
scas
lahf
jbe
sub
aad
mov
pop
subb
add
jg
dec
fdivrs
push
pop
xchg
jns
lret
push
sbb
pusha
push
fsub
push
das
int3
inc
pop
or
pushf
mov
adc
xor
ljmp
fcompl
mov
adc
adc
sub
aad
bound
inc
jle
sbb
cmc
lock
push
btr
out
aaa
add
pop
cmp
add
jmp
sahf
inc
inc
push
clc
cmp
popf
xchg
inc
mov
nop
jae,pn
test
jl
push
addl
out
sub
mov
push
mov
fstpt
adc
pushl
xor
push
pop
jl
pushl
mov
in
fistl
lcall
mov
pop
fwait
lret
andb
movsl
shlb
out
pop
subb
sbb
and
out
fidivrs
rorb
xchg
pop
lds
ljmp
mov
imul
rorl
xchg
pop
cmp
push
mov
ss
mov
mov
ret
adc
and
in
leave
add
imul
in
rorb
cmp
push
inc
dec
push
les
clc
ret
movsb
xor
cmp
xchg
sbb
repnz
fsts
xchg
insl
cmp
arpl
loopne
lods
lods
iret
cld
rorl
leave
fidivrl
and
adc
mov
push
jg
xchg
out
ja
jno
sub
push
test
aam
imul
add
subl
mov
cld
push
jmp
add
int
hlt
shlb
dec
sub
les
icebp
aas
into
push
pop
adc
push
pop
jb
push
fsts
adc
ja
pop
cmp
add
xchg
loop
int3
or
pop
or
iret
or
sbb
scas
bound
popf
cwtl
cs
jl
dec
jns
dec
adc
sub
ds
out
ljmp
xchg
in
mov
out
hlt
movsl
cmpsl
frstor
xchg
lret
mov
bound
cmpsl
rcrb
cli
mov
cmp
mov
mov
adc
sub
push
cmpb
icebp
pop
sub
test
dec
xor
and
push
or
add
imul
dec
sub
out
iret
cmp
sub
push
imul
cltd
std
leave
ss
fwait
jae
jne
mov
stos
jb
sub
fiaddl
in
push
js
test
pop
mov
cmp
cmp
clc
inc
leave
cmp
ss
in
dec
nop
pop
adc
gs
cmp
push
jg
jae
aad
pop
mov
aas
jb
icebp
stos
cmp
dec
fwait
sub
adc
inc
lahf
or
pop
ljmp
push
cmp
call
mov
push
cmp
or
jecxz
subl
cmp
fmull
lahf
add
into
jmp
push
cmp
sahf
mov
jle
inc
xlat
push
xchg
push
test
or
out
push
push
test
xor
scas
xchg
outsl
repz
stos
loopne
cmp
xorl
jno
faddl
xchg
aam
mov
movsb
subl
cld
popa
push
sti
test
repnz
push
in
iret
dec
xchg
xchg
jmp
jmp
add
push
repz
xchg
lds
loope
aas
gs
xchg
loopne
adc
push
ljmp
ret
addr16
jne
sti
call
enter
xchg
cmp
push
fs
cmp
sbb
imul
int3
jb
jg
xchg
sbb
adc
push
and
pop
pop
cmp
lods
lcall
pop
lock
lcall
dec
stc
dec
shll
aad
leave
push
cwtl
bound
enter
mov
arpl
call
cli
lods
ja
sti
iret
jecxz
cmpsl
ret
pop
or
dec
jecxz
popa
xor
xchg
ret
in
pop
sub
fnstenv
sbb
jg
adc
dec
mov
pop
pushf
sub
mov
add
or
or
or
xchg
pop
sbb
imul
mov
sub
iret
nop
in
popa
inc
movl
cli
xlat
jno
sub
lahf
jge
sub
inc
imul
loop
and
adc
cltd
in
jb
ss
cmp
mov
mov
push
test
pushf
scas
xchg
test
add
int3
and
sahf
movsl
scas
stos
mov
aad
dec
sub
mov
enter
mov
outsb
ja
jne
cmp
lret
stos
aam
lahf
sarb
fsubl
mov
mov
push
mov
pop
jo
push
gs
jp
jg
adc
cwtl
mov
xorb
inc
lea
jmp
ret
scas
mov
lcall
pop
sub
sub
scas
movsl
in
cmp
xchg
sbb
clc
fcoml
inc
mov
ret
jle
test
xchg
jmp
jp
jecxz
orb
cld
out
xor
fbld
mov
insb
xor
lock
stos
les
add
inc
push
lahf
cltd
adc
ljmp
fisubrl
int
or
sub
iret
adc
repnz
je
xchg
pop
mov
insb
sub
rcrl
adc
divb
lcall
imul
scas
mov
and
enter
lea
int3
xor
adc
aaa
pop
outsb
push
xor
add
es
test
xchg
out
inc
push
hlt
jle
or
push
test
lods
lcall
in
dec
jno
mov
cli
push
xchg
adc
insl
pop
inc
xor
addr16
xchg
std
ds
pop
dec
ljmp
aam
ja
adc
adc
leave
xchg
xchg
xchg
jmp
xchg
fisubrl
cld
test
sub
push
nop
push
loope
cmp
adc
and
sbb
pop
inc
rorl
mov
cmp
aam
addl
add
iret
sbb
hlt
xor
adc
sbb
or
rcl
imul
sarb
xor
cltd
lock
dec
sub
pop
sbb
mov
pop
dec
bound
add
or
repnz
xchg
pusha
adc
inc
ja
test
add
inc
clc
int
movsb
shll
loopne
ret
or
mov
xor
mov
mov
das
push
adc
lods
int3
add
add
ret
pop
adc
fdivl
stos
xchg
inc
push
cmp
fnstenv
decl
lea
int
and
push
out
loop
inc
jbe
das
xor
pop
adc
popf
pop
leave
cld
leave
test
mov
xchg
mov
push
sub
int3
shlb
and
jne
pop
stc
push
fnstcw
push
in
xor
inc
cld
fwait
pop
mov
or
xchg
inc
push
scas
lock
ss
push
push
jl
and
cmp
jecxz
mov
cmp
aaa
js
cwtl
shrl
dec
pop
pop
and
sbb
xchg
xor
ljmp
cmpsl
fistpl
into
ss
jae
inc
out
das
jg
jmp
dec
jl
das
xchg
call
sbb
orl
xchg
dec
call
mov
mov
mov
lahf
xor
mov
popf
ss
daa
and
sbb
cmc
jge
push
icebp
jae
xor
ficoml
aad
xor
jnp
das
jecxz
pop
cld
add
dec
jnp
rorl
mov
push
and
or
in
ret
data16
mov
cmpsb
inc
push
adcb
add
fisttps
jmp
cld
push
pushw
clc
mov
sbb
les
cmpsl
gs
test
sub
fwait
xor
stc
push
add
mov
das
loop
cmp
iret
dec
mov
sbb
fs
stos
out
jge
pop
outsl
call
cmpsb
in
add
ss
push
or
stc
mov
out
mov
push
mov
xchg
mov
pop
lea
sbb
jl
cmp
loope
aas
int3
mov
xor
stc
push
cmp
rorl
add
shlb
loope
test
loopne
cmpsb
pop
and
daa
stos
sub
mov
call
cmc
or
ds
pop
int
int
hlt
xchg
adc
sub
inc
mov
jae
lock
cld
cmp
mov
in
or
pop
bound
xchg
movzwl
sbb
js
mov
sub
xchg
lds
insl
mov
loop
leave
add
sbb
jge
cmp
fwait
push
xor
imull
mov
and
inc
test
mov
cmp
lret
aad
dec
xchg
xlat
push
inc
sahf
les
jmp
cmpsl
push
scas
faddl
mov
fstps
ljmp
shrb
or
dec
mov
inc
or
repnz
sahf
mov
jge
sbb
pop
jne
ficoms
out
lock
js
mov
fistpl
or
arpl
in
sub
es
mov
inc
push
push
inc
sub
xchg
mov
out
test
inc
dec
cmp
in
xor
mov
push
pop
std
pop
fwait
pop
fcmovnbe
mov
in
les
outsl
in
out
pop
decb
mov
cmc
aam
stos
pusha
dec
loope
xchg
int
jo
mov
jns
test
shll
cmp
popa
xor
mov
add
cltd
fimuls
into
lret
or
inc
ror
xchg
fiadds
scas
add
mov
and
sub
aam
movsb
or
or
pop
js
lds
sub
loope
test
cld
xchg
je
mov
jno
inc
sub
sbb
outsb
mov
or
shrl
scas
scas
fs
in
mov
shll
or
inc
push
das
jb
data16
jle
jbe
sub
pop
sbb
xor
mov
push
or
or
jecxz
push
aad
popa
lods
subb
adc
cld
in
sbb
divl
stc
ljmp
fwait
imul
xor
repz
and
cmp
movsl
pop
xor
sahf
jno
in
mov
roll
test
test
dec
fs
inc
insb
addb
inc
inc
cmp
hlt
jnp
inc
sub
out
bound
subl
repnz
lcall
lea
xor
rcrl
xchg
sahf
pop
movsl
cmp
xchg
pop
cld
add
xchg
std
aaa
mov
jge
mov
pop
push
sub
clc
inc
shlb
aaa
cmpsb
icebp
lea
decb
pop
fs
movsb
hlt
ss
jbe,pt
ljmp
call
in
in
les
fcoml
inc
arpl
ret
repz
daa
scas
out
push
push
lods
mov
add
mov
divl
and
mov
xchg
negl
push
rorb
pop
adc
lahf
mov
out
or
jb
mov
daa
mov
fsts
xlat
fsub
fimull
out
enter
divl
add
fld
icebp
fdiv
push
push
ret
rcrl
mov
sbbl
icebp
adc
rcrb
jb
pop
movsl
dec
jl
rcrb
scas
out
xor
mov
rcrl
iret
fcmovnu
jb
xor
js
hlt
sbb
inc
cmpsb
shrl
add
pop
or
mov
idivb
cmp
and
stc
repnz
cli
xchg
inc
sbb
ss
movl
xchg
mov
sbb
test
lcall
cmp
adc
repz
orb
ss
mov
imulb
sub
or
ret
out
ja
and
scas
cmp
push
loope
leave
aas
push
les
mov
cmpl
jo
cmp
push
in
loop
jo
or
fsubs
into
lods
mov
add
pop
mov
sahf
mov
imulb
stos
cs
add
clc
pop
sbb
out
pop
adc
mov
mov
push
mov
jbe
cltd
push
fsts
in
or
dec
cmpsl
sahf
inc
insb
rorb
inc
add
adc
nop
xchg
adc
gs
mov
clc
imul
or
jnp
addr16
loop
inc
sbb
xchg
mov
xchg
push
leave
movsb
jne
pop
jns
addb
cmpsb
dec
movsb
idivl
fbstp
pop
ror
and
test
mov
dec
das
or
pop
cmp
or
mov
jne
bound
aam
out
scas
in
mov
adc
lret
jmp
ret
out
push
xorl
cltd
ret
mov
adc
add
push
cmp
insb
pop
push
jmp
cltd
adc
ja
sub
iret
jo
pop
push
jo
push
add
in
or
loop
cltd
pop
aad
lock
sub
cld
stos
jle
sub
shlb
jp
nop
adc
adc
push
add
icebp
push
jnp
imul
pop
call
hlt
mov
sbb
push
inc
nop
pop
mov
mov
cmp
or
jns
adc
in
ja
xor
mov
pusha
inc
js
sub
push
jne
xor
insl
sbb
pop
mov
jae
lret
mov
std
cld
add
mov
inc
ficomps
cmp
and
sarl
pop
xchg
add
or
repz
dec
xlat
ficoml
fistpl
test
mov
mov
mov
cmp
jl
or
fs
jge
mov
add
cmp
stos
pop
sbb
xchg
sub
xor
cmc
lret
addr16
cmp
mov
jbe
mov
pop
sbb
xchg
shlb
xchg
test
stc
pop
inc
mov
lds
out
mov
sub
fstpl
shll
push
lahf
or
aad
out
jmp
sbb
cltd
in
je
xchg
mov
or
inc
mov
imul
xor
mull
clc
outsb
and
movsl
rolb
push
ds
in
andl
jo
fildll
mov
mov
ret
fildl
pop
jmp
or
and
cmp
push
mov
sbb
adc
sti
dec
jp
scas
and
test
or
lds
mov
test
sbb
lods
fld
inc
incl
icebp
inc
scas
jo
mov
imul
mov
jl
ja
test
pop
pop
xchg
shrl
shl
outsl
mov
and
add
inc
add
adc
dec
and
push
mov
xchg
cmpb
shll
aaa
out
ret
xchg
cltd
xor
push
xor
mov
cmp
mov
pushf
push
fimull
sub
lret
or
xchg
inc
mov
data16
mov
lock
push
xchg
fcomip
int3
dec
mov
paddusw
push
adc
cmp
sub
jmp
sbb
repz
andl
rorb
adc
negl
jg
sub
fwait
jg
lock
jo
aaa
pop
jmp
push
icebp
pop
pop
jmp
and
sbbb
xlat
mov
jmp
out
inc
xchg
push
push
sbb
mov
xor
fisubl
mov
dec
xchg
in
mov
fwait
mov
jle
leave
shll
mov
or
dec
fidivrl
sbb
addr16
aaa
stos
leave
jno
add
push
xor
test
arpl
jecxz
push
sub
movsb
insl
inc
xor
mov
inc
shr
adc
cmpb
mov
adc
adc
add
mov
mov
filds
loopne
pop
les
test
nop
lods
pop
push
or
sub
sbb
xor
dec
adcl
xchg
dec
psubusb
sbb
mov
and
sbb
hlt
push
sbb
cmpl
cs
lds
push
test
xor
test
addl
xchg
mov
xchg
shl
imul
popfw
fmuls
cs
and
lock
mov
push
dec
jmp
mov
inc
sahf
cltd
dec
adc
mov
sub
iret
je
sub
jle
mov
movsb
or
loope
or
add
cmpsl
push
dec
sbb
pushl
dec
xchg
jmp
or
fisubrl
repnz
xlat
xor
ja
gs
loopne
or
std
fiaddl
int
mov
jecxz
es
or
cld
cmpl
or
sti
in
dec
mov
xor
mov
xchg
adc
das
mov
jle
cmc
or
loopne
ljmp
sbb
repnz
pop
outsl
insl
test
sbb
push
or
jns
test
nop
sub
xchg
shlb
ljmp
insl
or
test
cmc
inc
adc
or
shll
adc
sarb
mov
fdivs
cmc
orl
repz
cmpsl
int
xchg
jmp
add
and
mov
cmp
mov
adc
fistpl
sti
jne
pushf
mov
pushf
inc
sub
ljmp
pop
lcall
nop
jecxz
pusha
dec
loope
movsb
cmp
cmc
clc
mov
xchg
sbbb
inc
out
cmp
push
sub
pop
xorl
dec
adc
sbb
jb
jmp
cli
arpl
push
sbb
xchg
dec
xchg
fadd
push
mov
fisubl
arpl
cmpsb
aad
add
mov
mov
xchg
data16
adc
sbb
jl
mov
xor
stos
jg
ret
insl
rcrl
rorl
movsl
inc
sbb
xchg
and
xchg
and
in
jecxz
shlb
dec
shlb
stos
and
aas
mov
repnz
adc
mov
repnz
mov
negl
nop
push
pop
mov
aas
xchg
sbb
jge
xchg
nop
sub
in
jae
inc
repz
mov
pushf
mov
mov
ja
xchg
inc
test
cs
sbb
cmc
fs
std
and
pop
loop
lods
mov
jg
dec
cld
jecxz
add
pop
jge
add
pop
clc
push
arpl
iret
aaa
fdivl
fadds
mov
shll
out
scas
adc
mov
mov
cli
adc
rolb
rorb
xor
leave
xor
scas
insb
call
add
sub
jle
roll
push
jmp
test
jb
cli
pop
cmp
lods
pop
push
sbb
add
dec
negb
push
inc
lahf
out
ss
sub
call
daa
popa
cmc
inc
je
insl
sbb
mov
sbb
pop
xor
mov
std
inc
mov
es
lea
xor
dec
out
sbb
testb
push
iret
cmpsl
sahf
ss
sub
cmpsb
aaa
sub
xchg
dec
adc
int3
movsl
xlat
daa
cmp
dec
in
rorb
daa
dec
adc
xor
in
push
and
dec
mov
shr
xchg
jecxz
imul
cmp
inc
icebp
dec
out
xchg
push
pop
add
inc
sbb
in
mov
les
outsl
xchg
xor
lods
mov
pop
or
es
dec
mov
push
adc
insb
out
fldcw
mov
fs
mov
adc
loop
jmp
jae
out
out
and
out
jmp
in
ds
jle
xor
mov
inc
lret
lods
jge
clc
rorb
jmp
dec
mov
push
fsts
adc
adc
dec
int3
shrl
pop
subb
and
xchg
mov
in
fimuls
mov
cltd
mov
fisubrs
cmc
jbe
lea
nop
inc
mov
and
imul
fcmovnbe
in
jge
jle
je
mov
pop
fwait
and
cmp
or
ja
loopne
jns
jnp
pusha
mov
xchg
mov
lahf
pop
arpl
leave
fldt
fisttps
jno
repnz
pop
sbb
stc
xchg
pushf
movsl
jns
lods
lret
mov
fidivs
dec
rorl
cmp
fxch
ljmp
into
add
push
clc
lret
pop
movsl
ljmp
xor
data16
ljmp
cmpsl
mov
sub
cmpsb
or
xor
jle
jno
push
or
xor
sbb
or
mov
adc
test
repz
xor
push
cmp
int3
push
bound
mov
mov
pop
addr16
aad
out
ss
or
dec
cmp
testl
sarb
addb
pop
mov
adc
repz
andb
xchg
mov
mov
sub
jg
imul
in
cmpsl
pop
enter
popa
mov
pop
xchg
fwait
sbb
movsb
repz
int
pusha
adc
jge
dec
mov
ret
or
hlt
es
inc
add
outsb
cmc
or
sbbl
xchg
jnp
andb
lret
out
push
ret
mov
je
cld
lock
mov
out
fstl
leave
or
pop
push
dec
jno
mov
push
mov
or
mov
sbb
imul
aas
int
mov
xchg
inc
lods
es
fbld
gs
jns
xchg
xlat
rorb
lods
xlat
scas
enter
and
fisubrl
pop
mov
lcall
mov
adc
pop
jb
fwait
jecxz
enter
pop
jb
out
mov
xor
mov
inc
mov
jno
pop
xor
jmp
das
subb
sbb
test
sahf
jbe
jle
shlb
jbe
jge
mov
and
fdivrl
std
daa
cmp
fnstsw
adc
data16
or
jne
xchg
aad
mov
jae
jl
and
adcl
push
xchg
stos
stos
pop
mov
adc
dec
push
xchg
lods
and
loopne
leave
add
popa
mov
ret
pop
push
movsb
lahf
jmp
repnz
add
das
pop
mov
shl
sbb
or
pop
sub
lock
jne
mov
sbb
les
repz
xor
jle
pushf
enter
frstor
cli
test
fisubrs
scas
mov
sbb
int3
gs
jae
je
sbb
sbb
add
push
push
mov
cld
cltd
stos
adc
in
push
in
fs
sbb
adc
push
outsb
mov
sarl
mov
cmc
jbe
xor
adc
repnz
dec
dec
mov
xor
xchg
cmp
inc
and
mov
popa
adc
sub
sbb
mov
add
fbstp
push
movsb
mov
cmp
mov
mov
xchg
sbb
xor
cld
mov
lods
jmp
ljmp
inc
cmp
dec
out
sarl
sub
sub
sub
push
xor
addl
mov
and
mov
ficoml
adc
inc
add
fisubl
push
push
aas
push
push
cmpsl
pop
nop
push
movsl
imul
sti
xor
xchg
jmp
and
dec
movsb
jae
push
pop
stos
xchg
stos
inc
lock
shr
insb
xchg
lret
jnp
js
xor
xor
clc
dec
xor
sub
iret
es
and
loop
orl
out
jo
std
imul
push
or
cld
shrb
std
ljmp
fdivs
incl
xor
pushf
iret
loop
shll
inc
mov
sbb
jg
push
mov
dec
es
sbb
xchg
xchg
mov
or
js
adc
mov
cmpsb
sub
push
mov
imul
adc
fst
pop
lea
imul
pop
in
lods
jle
cmpsb
or
mov
lret
xchg
pop
mov
push
mov
lahf
aas
jp
inc
iret
imul
addr16
pop
movsl
inc
out
enter
pop
push
test
inc
or
mov
out
push
cwtl
or
sahf
jo
or
push
mov
pushf
jmp
dec
loopne
add
pop
nop
pushf
fstpl
in
aas
mov
dec
loope
rcrb
jne
popa
fs
sub
shll
jns
mov
cmp
inc
xstore-rng
cmpsl
push
addr16
sbbb
dec
jg
adc
jb
mov
ds
fs
or
cwtl
pop
mov
inc
mov
adc
mov
or
shll
mov
push
sub
loope
or
sbb
lret
or
popa
jo
dec
cmp
pop
in
sub
push
mov
xor
dec
out
aaa
and
mov
adc
and
in
roll
jbe,pt
jle
jle
push
repz
adc
add
pop
add
mov
lock
or
xor
xchg
idiv
roll
push
mov
inc
imul
mov
stos
popf
sbb
mov
xor
push
mov
insb
psubw
cmp
cmpsb
or
scas
mov
or
pop
push
jle
mov
loope
xchg
jno
or
fnstcw
push
sbb
mov
pop
jmp
ficompl
jne
cltd
jge
nop
cs
jbe
inc
and
and
push
int3
sub
inc
jno
int
addb
lea
and
into
cmp
mov
loop
vrsqrtps
loopne
xchg
or
pop
nop
xor
mov
std
idivb
mov
mov
in
lahf
dec
and
pop
fwait
subl
xchg
xor
push
fstpl
icebp
fdivr
jmp
imul
push
inc
inc
inc
and
dec
mov
cmc
pop
xlat
fildll
mov
adc
sbb
and
push
pop
lahf
mov
fcomps
xchg
fidivrl
dec
fnclex
inc
stos
movsl
inc
add
or
lret
cwtl
outsl
mov
push
sub
shll
sub
daa
fidivs
mov
scas
shll
sbb
sub
xchg
movsl
push
popa
das
fsts
cmp
lcall
mov
push
xor
hlt
and
or
pop
pop
mov
adc
cmpsl
mov
outsl
sbb
stos
mov
lret
xor
lds
mov
sahf
push
push
cmc
and
or
mov
movsl
ror
lods
adc
fsubrl
test
mov
dec
out
push
xorb
lahf
idivl
and
xor
mov
jae
rol
fdiv
xchg
inc
inc
rcrb
roll
out
mov
mov
imul
dec
in
testb
test
das
jle
lcall
dec
xor
dec
fnsave
xlat
cmp
test
sbb
and
add
stc
mov
lods
dec
lcall
jecxz
dec
out
dec
sbb
jl
push
cmp
aas
xchg
loop
inc
mov
mov
pop
jne
aas
sbb
sti
mov
nop
xchg
loopne
push
xchg
addb
inc
and
testb
push
push
insb
and
mov
aaa
in
fwait
cmpsl
inc
dec
shll
or
xor
pop
add
loopne
inc
fwait
sbb
in
inc
push
adc
jmp
inc
jmp
flds
mov
mov
mov
pop
sub
xor
repnz
js
jmp
insb
and
inc
lret
mov
out
jg
and
in
gs
push
mov
jp
sti
test
push
push
mov
xor
mov
xor
push
call
xchg
push
cmpsl
ret
dec
lcall
jp
xor
and
push
inc
cmp
push
cmp
jp
inc
addr16
or
scas
push
mov
outsl
aad
dec
insb
enter
insb
das
sbb
in
addr16
repz
movsl
insb
mov
sahf
mov
mov
xchg
add
pop
ret
inc
mov
push
push
pop
xchg
cwtl
int
cld
fidivrs
pop
dec
jmp
push
mov
repz
mov
push
mov
mov
inc
imul
mov
std
sub
sub
inc
mov
fs
lock
loope
into
push
and
cmp
bnd
mov
rorl
in
jno
pop
pop
dec
scas
es
sti
out
daa
out
mov
pmulhuw
iret
lods
and
flds
in
stc
testb
mov
adc
fbstp
enter
insb
mov
xor
in
sbb
sub
add
shrl
dec
push
bound
aad
popa
pop
out
orl
jno
mov
cmpsl
js
insb
lds
cltd
stos
dec
andl
lock
and
pusha
insl
icebp
dec
fidivrl
and
scas
jg
sbb
push
lea
imul
sub
scas
push
push
or
or
mov
addl
mov
sub
pop
mov
inc
nop
clc
gs
xor
xlat
xchg
or
lods
lods
xchg
les
push
mov
xlat
mov
es
lds
lret
cmp
cltd
dec
fcmovnb
mov
ds
negl
mov
nop
arpl
xchg
adc
sub
dec
loope
sti
add
sbb
arpl
cld
add
das
es
stos
outsl
movsb
mov
dec
inc
mov
jno
lods
pop
jecxz
mov
xchg
test
cs
cmpsb
out
lock
sbb
scas
pop
movsb
js
adc
cmc
movsl
push
cmovle
shrl
xor
jecxz
addr16
movsb
push
xchg
xchg
cmpsl
and
idiv
push
or
adc
nop
clc
and
sahf
repz
and
add
cmp
iret
pop
hlt
mov
out
pop
out
pop
adc
xor
xor
push
iret
fwait
mov
rcr
daa
fs
pop
cmp
push
jo
insl
test
pop
adc
filds
lret
sbb
das
out
mov
int
pop
sub
mov
out
pushf
aad
loop
das
add
aam
mov
inc
neg
clc
cmp
sti
scas
add
js
lret
pop
shrl
xor
test
jg
and
stc
mov
jae
das
incl
xchg
inc
cmpl
and
sub
inc
jp
loopne
mov
add
mov
fnstenv
out
filds
pop
popa
insb
mov
popf
test
hlt
int3
and
loop
into
in
push
jp
mov
mov
repnz
push
aas
ljmp
dec
imul
bound
fwait
mov
push
dec
xchg
dec
popa
pop
aas
sbb
fstps
mov
add
les
scas
push
inc
loope
xlat
inc
pushf
jnp
mov
lods
sbb
sbb
push
push
andl
insb
clc
dec
mov
out
loopne
inc
xchg
pop
mov
adc
repnz
mov
out
pop
lock
lods
mov
in
out
fisubrs
adc
xchg
lods
sbb
ret
xlat
fdivl
mov
clc
sub
jns
mov
loopne
push
sub
and
sbb
xchg
lds
mov
jmp
cs
jo
icebp
lods
lods
sub
mov
insl
and
movsb
test
sub
nop
lret
sti
xchg
mov
jg
jl
add
scas
jo
pusha
or
lods
into
aad
xor
push
and
or
in
add
inc
dec
shlb
and
sub
cmc
inc
pop
sbb
jo
aas
insb
repz
sti
mov
xchg
gs
mov
cmp
iret
add
cli
pop
cwtl
jmp
in
shr
or
movl
xchg
xchg
add
ret
in
inc
jge
adc
push
push
xchg
aam
fstpt
push
pusha
shr
xchg
lods
inc
addb
std
sub
pop
mov
sarl
je
rclb
scas
not
pop
mov
xchg
out
mov
xchg
mov
aam
inc
add
push
mov
cmpsl
shll
loopne
jno
cs
test
lcall
cmp
sbb
test
mov
js
shlb
adc
fcoml
popf
or
pop
lods
scas
jmp
aas
mov
xchg
inc
jmp
mov
add
shrb
jmp
add
mov
xor
jae
sub
sub
mov
push
ficoms
push
mov
test
stos
mov
ljmp
aad
xchg
into
jb
lds
shlb
lret
lds
dec
enter
shll
andl
lds
cld
pop
cwtl
and
adc
jns
inc
fidivs
mov
leave
sub
nop
cmp
sub
fists
fisubrl
cmp
mov
xor
ret
add
lret
push
mov
adc
fwait
pop
jmp
shrl
insl
imul
pushf
cs
lcall
or
stos
cld
mov
cmp
out
sbb
hlt
sub
into
adc
rclb
push
fisubrl
cmpsl
cs
lods
rcrl
lret
jmp
rclb
loopne
or
pop
fisttpl
sbb
mov
cmpsb
xchg
xchg
in
mov
xchg
in
sub
jbe
pop
xchg
lods
popa
lcall
lahf
pop
enter
enter
lret
sub
fsubrs
jae
iret
mov
pop
ficompl
pusha
repnz
aas
jae
lods
fdivl
cmp
xor
loope
push
imul
jne
cs
pop
push
sub
dec
jne
sbb
enter
arpl
pusha
jmp
in
sub
aas
popa
fldenv
cmpsl
pop
jne
inc
pop
dec
xor
adc
adc
test
insb
sub
stos
ret
mov
cli
push
mov
std
or
jbe
push
dec
jne
sbb
pop
add
push
imul
outsl
inc
shrb
dec
addb
fidivs
add
xor
ret
fldl
ret
jo
jmp
test
aam
or
inc
jge
xor
push
in
pop
mov
xchg
mov
mov
or
mov
shrb
jg
test
adc
jae
mov
jle
and
cmp
dec
fsubrs
add
outsb
cmc
mov
and
dec
mov
dec
gs
mov
jbe
mov
ss
xchg
scas
imul
push
sbb
sbbb
add
int
jecxz
leave
push
or
mov
dec
lock
inc
inc
xor
adc
xchg
sbb
fmul
add
pop
pop
roll
fbld
cmpsb
xor
inc
or
or
and
inc
in
cli
jecxz
jmp
in
test
pop
jns
inc
ss
sbb
cmp
xchg
xorl
sldt
out
cmp
adc
pop
lahf
inc
cli
sbb
xchg
subb
add
and
repz
mov
mov
push
shlb
add
adc
adc
pop
xor
fisubs
out
jecxz
adc
pop
adc
mov
lahf
and
dec
les
in
lock
cs
sbb
and
mov
lods
push
inc
dec
xchg
jae
pop
aam
lods
es
out
mov
scas
xchg
mov
stos
scas
xor
add
stos
adc
mov
and
xchg
movb
adc
pop
ret
dec
inc
in
lahf
sarl
add
out
aam
jg
push
pop
fnsave
cmpl
mov
shrb
in
negb
sahf
sbb
cmpsl
mov
out
into
in
leave
cmp
insl
jo
push
xchg
dec
or
fdivp
or
inc
adc
cmp
hlt
jl
outsb
cmc
mov
inc
iret
scas
icebp
mov
push
mov
shld
sbb
cltd
jno
dec
inc
arpl
movsl
lock
and
mov
mov
jl
mov
dec
xadd
mov
cmp
pushf
mov
xchg
cli
sub
adc
jecxz
lcall
testl
sbb
stc
ljmp
fnstcw
xchg
or
mov
inc
jb
mov
sub
cli
jns
or
and
rcrb
scas
leave
inc
adc
jae
or
mov
xchg
fwait
xor
push
pop
sub
xor
lea
inc
js
imul
push
rcrb
inc
mov
push
dec
push
jno
adc
sub
ds
pop
dec
repnz
and
jo
sbb
push
addb
popa
xchg
fbstp
nop
jb
push
add
mov
ja
dec
lea
imul
shl
scas
xchg
xor
popa
leave
stos
rcll
int3
movsb
imul
lock
xadd
jecxz
std
iret
cltd
jo
rclb
mov
dec
jmp
jmp
addb
jg
or
ja
or
inc
inc
fisttpll
or
imul
jae
mov
fwait
ret
sub
mul
jb
repz
in
icebp
dec
mov
pop
dec
xor
mov
fnstcw
test
adc
mov
cmc
nop
movsb
mov
push
cmp
ds
jne
xchg
in
dec
or
sbb
cld
in
pop
shr
cli
push
stc
imul
hlt
iret
stc
and
nop
fisubs
fidivs
mov
and
cli
add
xchg
pop
mov
dec
inc
or
lcall
or
xchg
sbb
in
arpl
imul
sahf
lds
hlt
scas
repz
es
or
insb
ss
sbb
cmp
adc
mov
mov
fiadds
repz
in
jecxz
sub
shrl
mov
imulb
into
cltd
iret
inc
movsb
sbb
jnp
stos
popf
dec
add
xor
mov
fdivrs
pop
mov
out
push
or
xor
mov
movsb
lods
leave
cmp
in
lods
dec
test
mov
mov
fstpl
mov
xor
ror
jns
adc
mov
mov
into
popf
pusha
sub
mov
gs
xchg
push
dec
jle
iret
fcmovu
in
add
push
cmpsb
dec
and
out
mov
sti
pcmpgtw
mov
cmpl
mulb
aas
fisttpl
rcrl
mov
jb
and
mov
lret
sub
insb
ss
xor
mov
ret
and
lret
or
fs
shll
divb
rolb
jae
scas
cmc
aaa
sub
scas
cmp
and
clc
sub
xlat
icebp
fildll
adcb
xchg
adc
xchg
in
sbb
neg
pop
push
gs
mov
push
loop
mov
gs
bound
adc
clc
div
jae
outsl
test
jecxz
mov
movb
dec
es
mov
adc
hlt
mov
adc
call
mov
and
dec
xor
sbb
shrd
imull
jb
sbb
pop
iret
or
cli
push
add
out
push
mov
xor
sub
pop
inc
mov
repz
or
push
in
inc
es
mov
int
sub
and
into
jge
addl
xchg
jne
scas
mov
and
adc
or
cld
sbb
sub
push
mov
ss
sbb
stos
sti
lret
leave
xor
hlt
add
test
inc
xchg
sti
pop
cmp
shlb
cld
fldl2e
int
push
pushf
ja
fcompl
dec
mov
lcall
inc
jg
sbb
movsl
jp
fsts
je
or
orb
test
ret
aaa
lock
cmp
lods
inc
push
jne
in
jbe
dec
jns
in
loop
ret
rolb
sub
inc
out
loop
mov
or
adc
call
inc
pop
rcll
mov
mov
movl
movsl
xor
mov
movsb
pop
les
sbb
sar
popa
pop
push
xchg
in
push
dec
xor
imul
pop
dec
xchg
and
and
cmp
cmp
stc
sub
pop
push
xcrypt-ecb
mov
pushf
adc
jbe
add
lret
gs
xchg
scas
dec
mov
stos
and
out
repz
test
jmp
jge
jno
ljmp
ret
enter
xor
jecxz
dec
incl
iret
roll
sub
mov
pop
inc
inc
add
xchg
test
ja
jno
sarb
pop
push
sbb
inc
inc
pop
mov
xor
in
or
lds
imul
arpl
jmp
inc
dec
pop
adc
push
cmpsb
daa
adc
cmc
sbb
dec
adc
loop
in
test
push
inc
xor
push
pop
or
fs
ss
sbb
inc
imul
fisubrl
daa
push
add
xchg
cltd
scas
xor
mov
lret
or
cmp
xor
xchg
in
mov
movsl
cmc
lods
out
hlt
call
adc
int3
stc
dec
insl
imul
je
inc
jmp
icebp
push
mov
pop
repnz
mov
push
ret
pop
inc
ret
jbe
adc
pop
popf
cs
sbb
out
addl
sub
sbb
pop
ljmp
jns
icebp
add
shll
fmuls
adc
xchg
jb
rcrb
inc
push
std
jg
mov
mov
shll
xchg
cltd
or
sub
dec
ja
pop
jbe
push
adc
cmpsb
xor
xor
sub
xchg
and
pusha
ljmp
xchg
into
mov
push
enter
xchg
adc
sbb
adc
adc
add
push
lret
fdivrs
test
adc
pusha
loopne
xor
test
shlb
in
fcmovnb
pop
xor
mov
dec
xlat
push
jecxz
and
sub
or
incb
xchg
or
jae
scas
mov
mov
ljmp
inc
mov
rorl
pop
mov
addr16
pop
xchg
int3
repnz
bound
loop
jg
xor
arpl
mov
push
pop
jecxz
push
xor
cmpsl
dec
and
jno
leave
mov
mov
pushf
xchg
out
mov
dec
sub
icebp
pop
mov
mov
mov
icebp
repz
mov
pop
sub
fsubrp
cld
pusha
mov
les
sbb
sbb
sti
sbb
mov
sub
ret
sub
mov
cwtl
mov
frstor
sub
shrl
roll
aam
mov
pushf
loope
push
scas
insl
loop
or
out
mov
fs
inc
mov
lcall
mov
notl
clc
mov
jle
xchg
jg
insb
out
fwait
cmp
fmuls
lods
push
cltd
sar
lods
cmp
popf
jae
sub
sti
fldcw
test
push
pushf
bswap
mov
into
add
fisttpll
roll
pop
int3
or
hlt
sub
icebp
je
mov
dec
jmp
outsl
lods
xchg
in
out
in
enter
sub
lcall
enter
xorl
or
dec
and
in
lahf
mov
sti
sbb
dec
jbe
outsb
rorb
int3
mov
jo
orb
loopne
sbb
dec
inc
push
movsb
jp
or
mov
add
jno
xchg
sub
lcall
sub
mov
adc
aaa
dec
sub
cmp
scas
jb
jne
jl
fs
leave
outsl
ds
loop
mov
xchg
push
jmp
out
dec
add
inc
push
int
adc
jne
adc
and
jl
sahf
int3
stc
add
test
inc
cmp
cltd
mov
or
add
gs
std
in
jge
fld
xchg
ret
cwtl
movsb
xor
cmp
pop
call
imul
mov
and
je
in
fdivr
lock
dec
jnp
std
and
xchg
and
mov
in
adc
lods
mov
cld
and
dec
xor
sbb
ret
iret
dec
xchg
adc
clc
cwtl
and
add
sbb
mov
jb
xor
pop
mov
shlb
jge
sbb
push
int
fs
xor
out
or
sub
sbb
repnz
pop
jns
cs
inc
pop
mov
xchg
mov
out
cmp
dec
in
orl
sub
bound
cltd
xchg
lea
cmp
pusha
jae
pop
fcmovbe
pop
xchg
xor
aaa
jbe
sbb
mov
inc
xor
xor
inc
adc
sbb
xchg
dec
cmp
mov
fisubrl
mov
fdivr
dec
dec
in
in
sti
mov
xchg
stos
into
sub
xchg
es
xchg
dec
call
xor
inc
rorb
inc
mov
inc
iret
ret
std
push
clc
xchg
orb
cmpsl
sbb
push
insb
xchg
fstpl
dec
stos
les
test
push
adc
shll
inc
imulb
mov
push
cltd
and
stc
dec
lock
xchg
mov
lret
push
fbstp
pop
push
sub
scas
stos
jae
xor
dec
add
xchg
das
push
cmp
xchg
stos
arpl
sub
int3
cmp
loop
xor
jp
xchg
imul
pop
mov
xor
fcomip
or
jb
or
incl
aam
imul
push
insb
sbb
or
out
shl
push
sbb
insb
add
ret
das
test
or
cs
or
pusha
mov
or
rolb
jp
mov
adc
test
add
js
pop
jg
jge
out
xchg
outsb
push
mov
sbb
es
xor
cmp
inc
push
ds
out
les
jg
rolb
xor
fimuls
lcall
xor
cmp
bound
jbe
add
shlb
iret
repnz
jp
jae
aad
mov
mov
pop
mov
pop
mov
lods
adc
dec
popf
mov
cld
addr16
sbb
and
lret
push
xchg
scas
sub
aaa
adc
bound
clc
and
jle
and
cmpsl
out
addl
sbb
in
push
and
pop
sbb
aam
add
lret
dec
out
jno
sub
fistl
out
in
fdivs
cs
shrl
pop
mov
gs
and
fdiv
in
into
xchg
testb
dec
cmpsl
sub
loopne
pop
pop
hlt
mov
add
mov
daa
push
sub
sbb
sub
lods
insb
lret
enter
add
jp
push
ret
dec
cmp
dec
enter
mov
sub
adc
add
hlt
push
mov
out
push
or
cld
daa
test
xor
mov
and
lds
push
mov
cs
jle
and
xchg
xchg
dec
and
pop
xchg
adc
clc
mov
mov
pop
imul
aam
and
jle
and
loop
lods
loope,pt
pop
aaa
test
xor
pop
jns
sub
xchg
push
fs
fisttpl
outsl
in
mov
jmp
lds
shr
and
jl
imul
iret
leave
xchg
fldl
idivl
fsubs
sbb
and
lret
push
fsubl
insl
daa
adc
cld
pop
divl
mov
adc
movsl
mov
and
inc
and
shlb
daa
mov
in
mov
cli
jl
mov
ja
jno
cmp
rolb
xchg
adcl
jno
in
xor
cmp
popf
add
test
jne
mov
or
aas
cs
scas
cld
push
push
sub
pop
test
push
lret
lea
push
sbb
ss
imul
ds
and
push
aad
xchg
pop
test
xor
into
push
mov
xchg
jmp
pop
repz
int3
ficoml
loopne
sahf
ss
and
inc
test
mov
test
mov
pop
lahf
adc
pop
dec
mov
sbb
les
nop
xchg
arpl
addr16
sbb
pop
loop
dec
test
fsub
dec
rorb
jno
ljmp
xlat
rcll
jo
scas
xlat
xlat
jle
cltd
jns
mov
mov
movsb
jne
lea
push
mov
inc
xchg
arpl
inc
cmpl
or
stos
pop
imul
or
lret
cmp
cmp
cli
adc
sub
setb
push
aaa
icebp
xor
cltd
adc
por
fcos
mov
icebp
or
xchg
bound
lea
cld
jae
loopne
add
cld
enter
dec
push
das
or
fs
jne
dec
push
in
or
cmp
ja
jmp
cltd
mov
dec
es
ret
lods
jge
xor
pop
jno
enter
and
mov
mov
push
popf
stos
dec
push
das
popf
jl
pop
and
sbb
xchg
jae
out
cmc
inc
mov
aaa
and
outsb
mov
aaa
inc
test
inc
ds
sbb
push
sahf
lret
push
imul
dec
and
jp
rcrl
mov
cmp
aas
out
sub
pop
mov
cmp
rclb
and
imul
push
cmp
xor
stc
xchg
jmp
std
push
xor
cwtl
jno
inc
add
into
out
push
ss
inc
adc
outsl
icebp
clc
inc
xchg
outsb
daa
sbb
xor
aaa
jl
mov
or
push
push
pusha
repz
stos
icebp
faddl
push
push
add
jno
sbb
rcl
and
pop
push
hlt
and
andb
xchg
push
jmp
and
sbb
aas
in
loop
adc
insl
fs
fisttpll
fsub
pop
ljmp
dec
dec
mov
pusha
movl
adc
mov
outsl
arpl
fcomip
inc
repnz
out
sbb
repz
pop
pop
enter
dec
and
outsb
xchg
adc
lahf
test
xor
inc
pop
aam
jge
mov
enter
and
fiaddl
aas
and
xor
and
notb
ret
lea
in
test
data16
xchg
lock
push
addl
push
sub
dec
push
cmp
rorb
cltd
addr16
inc
push
mov
int
in
lea
aaa
add
sub
add
shr
iret
inc
shl
jno
insl
mov
outsb
add
iret
mov
rcl
fnsave
sub
out
jns
repnz
decl
subl
sub
andl
and
xor
dec
mov
je
mov
mov
inc
mov
mov
cmpsl
out
cmpsb
adc
mov
jp
testl
add
test
testb
mov
pop
into
xor
jb
adc
lock
dec
loope
lret
xchg
in
rorb
mov
xchg
mov
sbb
pusha
xchg
in
mov
or
movsl
pushf
xchg
jmp
icebp
inc
inc
lods
out
addb
and
fistps
or
push
test
daa
ja
add
cltd
and
clc
mov
sbb
test
sub
mov
js
add
adc
clc
ja
ds
sbb
xorb
in
daa
ljmp
jne
sbb
jecxz
es
int
cli
push
insb
mov
into
sbb
call
das
fsubl
lods
dec
fisttpll
ljmp
xor
insb
jg
mov
xchg
push
test
sub
xor
fwait
push
les
int3
div
ljmp
sti
inc
or
mov
ret
addl
mov
jg
mov
xchg
movsb
lahf
sqrtps
dec
insb
les
fisubrl
sbb
push
cmp
xchg
repnz
inc
adc
inc
js
or
test
jnp
jg
and
jecxz
ret
mov
xchg
sbb
cmp
push
xorb
pop
and
xchg
call
lretw
adc
mov
jae
pop
jno
adc
testl
jp
fdivrs
and
xchg
das
test
xchg
into
arpl
and
mov
sbb
filds
aaa
adc
pop
lret
jne
mov
leave
lods
scas
cmp
imul
push
sarb
push
test
xchg
sarb
xlat
lcall
cld
int
loop
int
ficoml
sub
cmpsl
push
dec
pop
pop
jbe
cmpsb
pop
pop
cmp
pop
stc
lret
shl
jp
push
fs
ret
out
jge,pn
ljmp
fwait
daa
jno
out
adc
and
add
mov
mov
mov
inc
jne
jge
pusha
pop
dec
pop
xchg
aam
xchg
cmp
fs
adc
or
rorb
cwtl
mov
pop
sbb
shlb
xor
aas
gs
jg
out
je
jne
pop
and
xlat
icebp
aad
mov
push
push
jecxz
das
mov
das
jbe
iret
push
ret
pop
mov
testl
movsl
pop
scas
xchg
sbb
inc
xor
xor
sub
jl
mov
dec
sbb
sbb
adc
outsl
cmpsl
jg
pop
cwtl
or
jg
les
lret
sub
add
stos
mov
into
jo
lret
nop
outsl
sbb
mov
loopne
adc
ja
loopne
push
imul
imul
cmp
push
in
xchg
jns
lret
fcmove
and
inc
pop
ret
das
out
int3
mov
adc
cld
jg
dec
dec
pop
xchg
mov
jo
daa
imul
xchg
pop
sbb
je
mov
sbb
xor
cwtl
mov
fsts
jnp
adc
sub
call
mov
outsl
into
xor
cmp
xchg
popa
insl
inc
xor
repz
das
pop
jmp
es
adc
out
insb
les
loope
jmp
stos
sub
rorl
mov
cs
repz
pusha
out
loop
xor
imul
rorl
clc
cmc
das
xor
popf
sbb
aam
shr
lea
inc
loopne
xor
jmp
xor
ss
mov
mov
cmpsl
mov
pop
xchg
sahf
pushf
aaa
and
scas
roll
lock
sbb
cmp
xchg
rcrb
mov
testb
imul
dec
xor
shlb
sarl
jle
inc
mov
inc
test
popf
fwait
push
add
insl
xchg
in
popa
jmp
add
and
pusha
popa
addr16
pop
int
mov
fldcw
dec
cmovns
pop
push
mulb
orl
adc
cmpsb
xchg
cmpl
cld
sbb
jbe
jmp
js
xor
icebp
jp
and
pop
jmp
out
addr16
cwtl
pop
shll
mov
les
dec
orl
faddl
test
sub
shlb
and
cmc
out
or
inc
ret
cmp
cwtl
inc
fcmovb
jmp
xlat
and
stos
push
or
jnp
je
dec
stos
ds
inc
mov
shlb
outsb
push
mov
rcrb
add
adc
in
cmp
adc
bound
sub
or
leave
dec
add
lea
inc
adc
repnz
and
xchg
aam
dec
mov
sbb
icebp
mov
jnp
push
movsl
mov
jbe
cli
pop
pop
mov
aad
mov
dec
mov
xchg
xor
push
mov
mov
add
cmp
dec
push
jno
jmp
aad
stc
dec
inc
cltd
mov
ljmp
sub
shl
arpl
call
xor
into
lahf
sbb
xchg
jle
dec
mov
shlb
dec
test
xor
rcrl
scas
arpl
loope
orb
por
test
mov
lahf
xchg
push
pop
cs
pop
sti
xchg
sub
movsb
loope
imul
roll
aad
mov
pop
lcall
inc
jge
push
adc
sub
xor
stc
adc
pop
or
pop
in
jecxz
mov
pop
pop
add
cwtl
out
lcall
mov
xchg
aam
js
negl
xchg
mov
jg
stos
cwtl
je
lods
mov
movsb
or
jae
not
pop
mov
xchg
jbe
xor
xchg
outsl
xchg
clc
inc
dec
inc
add
movsl
insb
mov
icebp
mov
cmp
xor
sbb
mov
pop
dec
xor
sbb
jbe
xor
sub
inc
mov
shlb
arpl
fwait
movsb
jb
and
push
lods
cs
repz
dec
clc
mov
pop
fcompl
pop
add
cli
lret
sbb
test
scas
and
mov
mov
shrb
bound
sbb
xchg
add
fisttpl
sub
mov
stos
test
call
dec
idivl
adc
sbb
push
mov
mov
push
lods
and
jecxz
mov
xchg
jl
packsswb
mov
mov
mov
sarb
dec
xchg
fcompl
xchg
popa
imul
pop
and
aas
ret
cltd
sbb
and
push
cltd
sub
push
ss
xlat
shlb
call
loopne
inc
pop
push
lret
jns
cltd
push
adc
mov
pop
imul
xchg
scas
fmuls
std
mov
xchg
ret
fldl
lret
hlt
or
call
loope
sub
pop
pop
mov
in
andl
dec
imul
mull
fs
test
lahf
push
dec
sub
je
cltd
mov
adc
pop
mov
jg
dec
call
data16
cwtl
inc
push
sbb
mov
dec
dec
std
add
cmp
inc
mov
cmpsb
imul
in
jl
shl
xor
stc
cmp
movsb
bound
or
cmp
xchg
push
jl
and
addr16
js
inc
pop
push
inc
fsub
cmp
mov
mov
add
incb
das
lret
mov
and
dec
js
test
pusha
add
cltd
or
mov
pop
sbb
push
sbb
mov
stc
lods
mov
out
jecxz
stos
xor
hlt
jo
inc
inc
xor
mov
dec
sahf
xor
cmovae
fsubrl
cmpb
pop
xchg
lock
xchg
adc
mov
lock
pop
jb
fidivs
inc
aas
pop
pop
repnz
jp
cli
sbb
sub
movsl
jl
mov
out
add
jp
mov
mov
mov
mov
mov
mov
fsubs
daa
neg
add
and
pop
les
inc
pop
xor
mov
sub
out
bound
fistpll
cmp
fdivl
inc
xlat
push
and
fxch
out
add
pop
sti
aas
or
in
imul
xchg
xor
jbe
jne
mov
adc
popa
inc
out
xchg
xchg
or
sub
mov
stc
mov
pusha
call
cmp
pop
cli
aam
xor
lcall
or
xchg
jle
and
mov
xor
popa
or
cli
jmp
faddl
xchg
jae
dec
andl
jg
sbb
loop
mov
lret
push
and
sbb
repnz
push
scas
in
cmp
es
or
dec
dec
add
cmc
sub
jae
push
in
in
aam
sbb
dec
ss
mov
sub
scas
adc
pushf
or
sbb
in
sbb
in
call
sub
fistpll
imul
insl
adc
adc
dec
pop
or
adc
adc
mov
adc
scas
std
cmc
sub
mov
mov
enter
movsb
aad
scas
push
sahf
lcall
inc
adc
loopne
fwait
xchg
jp
cld
fdiv
lea
jg
cmc
cli
loope
popf
dec
loope
add
dec
xchg
filds
mov
out
enter
and
movsb
ds
or
mov
mov
arpl
adc
cltd
pushf
mov
mov
and
lods
mov
jg
xor
outsb
fmul
hlt
clc
test
es
shll
fxrstor
enter
add
popa
mov
pop
fwait
cmc
xchg
test
int3
lret
or
std
std
push
insl
sar
push
mov
mov
mov
stos
sub
imulb
push
insb
ficomps
dec
les
ds
rcrl
push
test
add
pop
pop
sub
jbe
inc
ret
inc
cmp
xor
out
jmp
sub
cmp
cltd
iret
fdivrs
xchg
pop
es
or
pop
out
jae
pop
ljmp
pop
insl
dec
or
cmpsl
insl
sub
inc
sbb
inc
mov
sbb
enter
repnz
sub
push
iret
sub
divb
out
lods
filds
inc
sti
pop
pop
xchg
jmp
daa
jnp
cmpsb
xchg
add
das
ret
sarl
xor
sub
sbb
in
fwait
adc
icebp
push
clc
mov
lds
jl
fldcw
ficomps
jae
adc
or
int3
sub
cmp
adc
in
adc
dec
in
cmpl
stos
lods
xor
in
cwtl
dec
lds
jp
and
inc
lods
test
cmpb
mov
or
aam
jns
sub
or
jae
test
jne
mov
xchg
and
and
adc
mov
fsubrl
jne
lds
lods
and
sub
cmpl
in
lock
push
and
int3
mov
loopne
loopne
mov
sbbl
clc
dec
cmp
nop
test
movsl
xorb
cmp
jbe
sub
inc
lock
jae
loop
lods
mov
xor
cltd
add
jnp
xor
test
shll
adc
test
xchg
outsb
cmp
ret
xor
jmp
jecxz
fisubrs
sbb
xchg
push
les
xor
dec
lret
ret
lret
jo
xlat
mov
out
sti
push
in
lret
sub
in
and
repnz
cli
aad
and
pop
sbbl
es
lds
subb
inc
paddusw
xor
popf
mov
add
sbb
mov
filds
in
iret
sbb
cmp
rcll
mov
addl
adc
adc
cld
lods
inc
xchg
add
scas
dec
aad
mov
pop
push
pop
push
jnp
stc
iret
fcoms
test
movsl
into
push
mov
lods
cld
cwtl
fs
mov
arpl
inc
or
inc
sbb
mov
dec
mov
pop
mov
mov
adc
add
es
aas
mov
sub
subl
sbb
jecxz
dec
pop
lcall
inc
psubw
sub
cmp
sub
movsb
bsf
lea
mov
lcall
mov
popa
mov
out
icebp
inc
xchg
push
aas
vmulpd
sub
ds
outsl
ret
pop
mov
pop
pushf
xlat
dec
pushl
aad
sbb
xchg
add
arpl
fistl
add
pop
inc
cmp
loopne,pn
adc
pop
jle
sbb
hlt
mov
push
dec
inc
push
mov
lods
rorb
fs
push
stos
subps
aad
sub
stos
ret
inc
xchg
mov
test
fcom
mov
xor
je
and
in
in
scas
jge
ret
push
cli
pushf
aas
in
dec
lea
jbe
push
jmp
mov
hlt
mov
in
adc
xchg
push
xor
sub
and
lret
cmp
in
dec
pop
rclb
push
dec
rclb
lret
jle
enter
mov
inc
xor
cmp
outsb
dec
in
cmp
enter
pop
inc
popl
push
add
sti
xlat
and
mov
sub
sbb
daa
push
sub
lods
scas
scas
andb
xlat
outsl
aam
lods
xor
das
sti
adc
in
inc
adc
lock
sub
rep
jb
sbb
and
jnp
xchg
rorb
sub
xchg
mov
push
dec
aad
clc
or
adc
push
mov
adcl
mov
out
cli
ljmp
dec
lret
mov
test
enter
inc
jae
or
jae
rcrb
cld
pop
mov
jmp
mov
mov
sub
push
or
pop
enter
ss
xchg
test
fsubs
or
xlat
jne
add
int3
test
leave
sbb
out
hlt
stc
das
cs
aam
lret
adc
stos
insb
loop
cwtl
ja
js
mov
popa
xchg
ret
pop
das
cmc
gs
lahf
push
lcall
xor
dec
clc
dec
int
fdiv
lahf
push
xor
xchg
fstl
add
fcoms
xchg
pusha
in
stc
pop
xor
pop
pop
xor
push
rcrb
push
fsubrs
mov
jmp
bound
and
test
dec
cmc
pop
aad
data16
loop
adc
setns
lds
stos
sarl
add
mov
add
push
jns
jge
xchg
push
es
enter
lds
and
push
mov
cmp
lods
jg
push
inc
inc
mov
or
out
pop
adc
rclb
pop
mov
or
ss
mov
ljmp
cmp
cmp
in
xchg
dec
xor
add
sbb
ljmp
xchg
test
int3
and
mov
cmp
testb
mov
inc
lcall
jo
jns
inc
mov
scas
aad
stc
add
mov
adc
add
movsb
jmp
sbb
sbb
dec
cmp
arpl
je
out
add
insl
lock
ja
imul
dec
push
ljmp
ljmp
rcll
mov
mov
stc
and
icebp
pop
cmpsl
jae
fsubs
sbb
pop
out
adc
cmp
xchg
ret
mov
or
and
dec
mov
mov
sbb
adc
or
add
sbb
ljmp
mov
lea
loope
xor
push
mov
cwtl
mov
mov
xor
ja
jle
xchg
fs
push
in
jns
cmpsb
xchg
enter
leave
jecxz
mov
sub
mov
mov
rolb
push
xchg
sub
mov
lahf
and
test
sub
push
fdiv
xchg
or
rorl
scas
and
loope
aaa
pop
imul
ret
lods
mov
fdivrs
ds
add
jge
dec
out
adc
inc
mov
jne
inc
pop
popf
out
fdivl
xor
test
stos
ja
jnp
outsb
dec
sarl
mov
pop
sbb
push
and
jbe
jge
jbe
les
call
pop
push
sbb
lods
pop
and
cmp
push
cmpsl
sbb
lods
test
gs
cmp
inc
jmp
and
lods
nop
inc
lods
and
test
mov
movb
fwait
inc
popf
es
mov
cmpl
daa
imul
dec
lock
movsl
stos
jo
in
test
aad
xor
xchg
push
adc
pop
pop
jecxz
inc
cmp
dec
movb
stc
mov
popf
mov
rep
mov
or
push
xor
pop
data16
bound
push
or
jb
daa
idivb
jg
lret
pop
mov
or
in
lods
xor
inc
scas
lret
jnp
ds
jnp
mov
test
sub
push
xchg
mov
adc
push
or
xchg
stos
xchg
sahf
stc
pushf
jno
mov
addr16
cli
cld
rorb
push
pushf
pop
cld
mov
sub
sub
std
add
out
adc
mov
or
dec
in
mov
outsb
jp
mov
xor
mov
inc
stos
pop
test
ret
adc
shrl
jecxz
sbb
lahf
pop
jno
sbb
and
mov
add
ss
cmp
cmp
js
hlt
fdivp
dec
sbb
jbe
mov
rcrl
cmp
mov
cmpsl
sub
pop
adc
sub
dec
jne
xchg
shll
loopne
pop
xchg
xchg
arpl
mov
popf
ret
ror
in
cmp
jns
or
lods
loope
insl
in
movsb
push
mov
icebp
add
inc
cmp
inc
out
jl
sub
sbb
popf
adc
mov
or
xchg
pop
jg
xchg
loopne
sbb
insb
and
in
mov
dec
pop
lds
jns
popf
arpl
mov
aad
jle
int
mov
sbb
xor
cmp
mov
fs
and
adc
pop
xchg
stos
outsb
cwtl
testl
xchg
stos
sbb
repz
mov
cmpsl
fsub
loopne
loop
lock
jmpw
mov
nop
adc
xchg
test
push
dec
adc
call
mov
mov
das
daa
and
pop
cli
xor
pop
iret
sbbl
das
add
push
mov
inc
aad
addr16
cmp
push
adc
or
movsl
push
or
imul
nop
and
jmp
in
iret
ret
lods
inc
cmp
mov
pushf
test
stc
test
popa
pushf
inc
sub
jbe
bound
mov
fs
mov
push
subl
add
pop
lahf
or
adc
sbb
xchg
inc
dec
jbe
sti
xor
push
lcall
in
mov
pushf
shrb
loop
adc
es
insl
xor
cs
xchg
mov
jne
and
mov
scas
cli
icebp
stos
shr
loope
sub
iret
pusha
or
jg
push
xchg
cmp
push
js
clc
cmp
stc
push
repnz
mov
adc
adc
push
stos
lret
fs
lods
pop
xor
sbb
mov
daa
arpl
push
dec
and
add
lds
cmpsl
mov
push
pop
ror
repnz
xchg
imul
shlb
sarl
in
lret
aaa
aaa
es
dec
test
pop
adc
ljmp
adc
jae
jns
pop
pop
xor
xchg
imul
sub
xor
add
mov
push
pop
ja
ds
les
sub
xor
movd
shrb
testb
popa
dec
fwait
inc
gs
mov
test
xor
imul
popa
movq
sub
sbb
adc
test
sub
pop
add
and
cmp
fidivrs
mov
pop
aad
int3
and
ret
dec
jbe
lods
lcall
rcll
rcll
and
jmp
test
rorl
sub
ds
lahf
repz
push
dec
fwait
mov
adc
dec
jbe
pop
push
sbb
clc
jns
ds
adc
sahf
dec
insb
jbe
sub
popa
insb
in
shll
movb
mov
mull
xor
out
cs
stos
add
test
or
pop
cs
mov
add
or
fld
es
sub
ficomps
mov
xchg
outsl
in
fdiv
mov
push
fidivs
jb
or
mov
pop
xor
fsubl
shlb
rorb
es
jns
push
shlb
leave
mov
xchg
inc
adc
fldt
inc
popf
insl
mov
fidivrl
movsb
cmpl
fsubrl
aaa
sbb
out
dec
daa
mov
jnp
ret
ds
sbb
clc
jns
push
push
add
inc
shlb
mov
fwait
in
push
inc
pusha
sbb
fcoml
jle
xchg
aas
es
rol
and
test
inc
sbb
cmp
xchg
push
inc
ja
xor
rol
cmp
rcll
std
es
dec
negb
sbb
dec
xor
cmp
add
xlat
inc
jne
mov
and
mov
popa
pop
jns
test
xchg
jb
or
mov
jp
dec
jg
dec
sbbb
loop
cld
cltd
and
jns
lock
mov
push
clc
andb
lret
add
sub
sbbb
xchg
mov
add
sub
or
push
xchg
sbb
xchg
xor
cmc
das
inc
and
out
and
je
mov
ljmp
mov
xorl
insb
or
cmp
xor
jnp
bound
adc
int3
sub
mov
pop
cltd
push
push
cmpsb
mov
stc
stc
mov
imul
idivb
mov
mov
out
addr16
lea
mov
roll
fcmovnb
arpl
jge
push
xor
xchg
lahf
imul
sbb
or
xchg
outsb
pushf
shrl
push
push
sub
push
pop
loop
mov
or
mov
add
scas
or
fcoml
insl
and
loop
mov
cld
pop
fs
adc
fmull
in
mov
jp
xchg
mov
or
rcrl
rclb
pusha
jmp
push
iret
lret
jo
cmp
mov
sbb
out
clc
xchg
mov
out
cmp
mov
adc
iret
fisttpl
inc
dec
decl
sahf
xchg
mov
jg
inc
adc
sbb
lea
dec
xor
jnp
xchg
push
jo
cmp
dec
in
outsl
out
repnz
push
mov
adc
cmc
in
out
jae
adc
add
lahf
sbb
loopne
mov
and
inc
lcall
add
jl
mov
lret
js
mov
mov
jbe
pop
leave
jbe
pop
shr
or
mov
or
or
push
dec
mov
push
sbb
jle
cmp
sub
lret
cmp
adc
test
in
test
pop
and
scas
sub
sub
fistpll
fsts
xchg
decl
pop
fidivrl
inc
mov
jnp
outsb
ret
je
scas
push
in
add
repz
pushf
adc
cmc
aad
cli
shlb
gs
aam
sub
std
test
add
mov
js
scas
xchg
mov
gs
lea
xchg
and
sbb
inc
call
int3
shl
cld
push
adc
push
popa
mov
in
jbe
iret
movsb
adc
outsl
hlt
add
fnstcw
sub
fistpll
mov
shll
jbe
mov
dec
mov
mov
dec
jae
sbb
test
stos
loopne
jge
and
call
std
fisubl
lea
push
add
inc
icebp
mov
or
xchg
xor
jmp
xor
push
dec
pop
lret
sbb
mov
add
scas
inc
pop
sbb
push
ficompl
jae
add
xor
pop
or
cmp
cmpsb
fisubl
loop
jp
xlat
std
add
sbb
cmp
movsb
xor
out
adc
aas
sub
and
mov
and
sub
sub
inc
call
lds
xlat
insb
repz
adc
inc
inc
gs
xor
pop
inc
rorb
xor
cld
rclb
push
mov
fiadds
add
mov
or
mov
and
lods
mov
fdivrl
or
xchg
pop
jecxz
ja
dec
jbe
gs
loop
sbb
xchg
jge
je
into
pop
or
cmp
enter
mov
mov
cmp
shll
mov
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
sbb
adc
test
add
in
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
outsl
or
in
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
add
add
push
adc
adc
add
in
add
add
add
pop
add
add
push
add
inc
add
add
jns
dec
add
outsl
add
add
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
addb
add
add
addb
add
add
add
addb
add
add
addb
add
add
add
addb
add
add
add
add
addb
add
addb
add
add
addb
add
add
add
addb
add
add
addb
add
add
add
addb
add
add
addb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
add
add
addb
add
push
xor
xchg
xor
xor
and
psrad
and
loop
and
loop
and
loopne
push
pop
out
data16
ud0
.byte
