push
call
ret
ret
stos
int
or
aas
in
subl
and
push
adc
std
nop
addr16
and
sub
mov
lea
subl
aam
ret
out
sbb
imul
sub
mov
inc
mov
pop
cmpsl
fisubrl
xchg
dec
mov
jns
mov
pop
mov
jecxz
mov
icebp
nop
dec
pushf
scas
mov
inc
or
jp
xor
cmpl
add
stc
cli
xchg
mov
adc
andl
mov
xchg
sbb
btrl
jmp
loope
lcall
mov
aam
int3
pushl
adc
dec
add
mov
stos
jmp
lahf
dec
mov
leave
mov
fwait
and
or
xchg
cwtl
loope
lods
in
cwtl
jne
rcll
push
movsb
out
dec
and
add
adc
xchg
mov
cs
push
dec
add
mov
sbb
stos
mov
cmp
loope
icebp
imul
ds
insl
movsb
test
cmp
xor
test
data16
cmpsl
dec
dec
push
aaa
mov
inc
and
outsl
xor
mov
lret
mov
leave
dec
fisubl
push
cltd
mov
mov
in
shl
int
fcoms
cmc
pop
push
dec
int3
stos
ret
adc
lret
dec
cli
or
xchg
outsb
jecxz
cld
lea
ficomps
xchg
inc
out
cmp
sbb
mov
xor
adc
xor
sub
sarl
scas
std
popf
jmp
mov
xor
sub
aad
sub
adc
sub
cmp
sbb
sbb
mov
jl
dec
pushf
repz
pop
mov
das
movsb
cmp
cmc
cmpsb
imul
jo
jp
push
lods
push
leave
cmp
xor
js
addr16
fwait
sbb
cmc
stos
mov
imul
dec
rolb
push
mov
xchg
stos
jbe
pop
fisubrs
mov
insb
adc
imull
add
ret
ret
repnz
mov
jo
pop
lahf
sahf
xchg
fidivrl
stos
aam
cmp
sub
lret
xchg
mov
xchg
xchg
cmp
ja
bound
mov
or
cli
add
inc
dec
aad
dec
clc
jnp
jmp
jge
test
scas
adcl
inc
mov
lret
cmpsl
jno
js
int
daa
jg
push
xchg
cs
pop
mov
push
mov
and
adc
push
in
jl
mov
sbb
ja
cmpsb
das
adc
sbb
xchg
and
adc
dec
mov
jmp
std
cmpsl
inc
dec
push
pusha
adc
and
pause
jns
mov
xor
cwtl
sub
cmc
xchg
cmp
addb
lahf
push
push
sbb
hlt
fildl
icebp
sbb
shr
adc
pushl
cmp
lock
jl
ss
into
outsb
mov
or
out
ljmp
jno
inc
sbb
dec
testb
pop
and
fists
subb
mov
insb
dec
xchg
mov
and
inc
in
testb
jne
stos
mov
sarb
bound
mov
out
cmpsl
push
jle
rorl
cld
ficoml
add
mov
cli
test
adc
out
and
jbe
jmp
leave
shlb
jae
sbb
pop
mov
jb
push
jmp
and
leave
int3
test
sbb
test
dec
rcrb
xor
enter
sti
push
jle
insb
cs
push
enter
jge
add
clc
mov
jno
or
stc
push
inc
in
jno
dec
cmp
dec
sar
xor
data16
adc
sbb
sbb
inc
and
pop
push
xor
jg
fldcw
scas
shrb
inc
push
outsl
cmp
jnp
int
jecxz
jmp
cmpb
mov
hlt
adc
insb
pop
incb
xlat
mov
mov
int
dec
lret
fucomi
enter
xchg
in
push
jno
mov
pop
imul
roll
pop
jne
mov
in
fldenv
nop
sbb
insl
and
into
lods
adc
jae
out
jo
pop
mov
stos
mov
fdivrs
int
pop
shlb
jnp
mov
sahf
movsb
pusha
dec
test
outsb
inc
aam
iret
dec
aad
add
ds
adc
or
orb
inc
mov
xchg
mov
xchg
mov
js
cltd
stc
gs
scas
cmpsl
cmpsl
add
mov
xlat
jecxz
fidivrl
aam
movsl
sub
xchg
daa
and
push
jle
aam
xlat
js
aaa
mov
mov
in
jmp
and
loope
daa
push
enter
rorl
xlat
jne
pop
xor
aam
sub
add
or
jmp
mov
loop
push
pop
xor
dec
test
shll
mov
dec
cltd
xchg
push
sbbb
mov
jmp
je
mov
mov
mov
push
int3
xchg
dec
push
xchg
mov
mov
xchg
into
fdivl
xor
jmp
push
int3
pushf
add
fdivs
pop
hlt
popa
mov
jg
aas
xchg
call
imul
cli
in
ficoml
mov
mov
add
ds
xchg
mov
and
cltd
icebp
mov
pop
cltd
es
cmp
xchg
loopne
mov
loope
xchg
ds
jbe
pop
sub
inc
shrb
push
add
lea
les
mov
out
fisubl
loopw
mov
daa
xchg
es
or
pop
or
jae
xor
ljmp
loope
adc
data16
cmp
cmpsb
fwait
xor
lret
das
fwait
test
sub
pop
jno
cmp
adc
or
addr16
aas
and
aaa
ljmp
mov
in
xchg
lock
adc
mov
scas
cmp
rolb
dec
mov
movsb
rclb
mov
call
inc
sbb
push
sub
mov
mull
or
dec
sbb
cmpsl
shlb
jmp
sbb
dec
mov
cmp
jb
xchg
mov
movsb
adc
fucomp
mov
outsb
xchg
push
sahf
and
call
in
lods
int
andb
popa
inc
dec
aaa
jg
notl
mov
and
xor
xchg
in
add
cwtl
xchg
cmp
iret
loope
dec
dec
inc
shr
mov
mov
stos
cmp
xlat
out
push
and
inc
lods
lods
add
add
mov
popa
xchg
clc
sbb
jmp
push
std
xchg
add
xorl
rcrb
xchg
nop
or
es
add
out
jo
out
out
mov
fisttpll
jnp,pt
je
cmpsl
pop
push
sub
xor
jge
adc
jmp
sahf
add
cmp
fnstsw
aad
jecxz
arpl
inc
lret
stc
stos
pop
cmpsl
jecxz
sub
xlat
pop
cmp
xchg
xadd
xchg
add
out
aaa
popf
js
mov
inc
mov
adc
imul
scas
or
shll
inc
adc
mov
add
inc
or
insl
in
jge
lcall
cmp
and
lret
aas
or
xchg
dec
pop
leave
pop
and
jl
pop
mov
imul
add
jbe
inc
daa
sbb
mov
jnp
negl
pop
push
pop
insb
push
sbb
xor
loopne
mov
jle
lahf
adc
repnz
stos
mov
je
xchg
sbb
test
cmp
mov
add
push
scas
adc
rcr
lcall
adc
mov
mov
jg
fimull
test
cmp
inc
dec
add
ja
loopne
cmc
jge
xchg
cwtl
add
imul
pop
and
fprem
sub
mov
loop
rolb
xor
cmc
movsb
lods
stc
dec
and
dec
xchg
sub
xchg
in
iret
mov
cwtl
leave
dec
jmp
pop
addr16
addr16
sub
push
push
xor
dec
mov
mov
adc
mov
lea
cmc
shl
mov
movsb
pop
inc
cltd
mull
mov
cmp
pusha
notb
dec
sub
subb
lcall
pop
in
rcr
add
pop
xor
jge
pop
popf
mov
adc
cmpsl
cmpsl
sub
sub
or
sbb
mov
jb
add
jmp
das
pop
dec
loope
outsl
jmp
xchg
mov
adc
dec
je
xchg
out
enter
xchg
push
mov
enter
xor
jne
adcl
mov
push
inc
mov
push
pop
out
xor
pop
cld
aad
jns
xor
repz
sahf
or
dec
faddl
imul
inc
mov
test
pushf
into
mov
jb
adc
fs
inc
and
clc
lahf
inc
adc
cmc
std
lahf
rorl
fdiv
enter
or
scas
xor
fdivs
stos
cmp
xchg
pop
sub
jns
out
mov
popa
fs
mov
das
lret
and
mov
fstps
loope
mov
es
xor
addr16
test
lock
sbb
add
imul
test
ljmp
add
inc
in
fsubs
xchg
nop
imul
div
cmp
dec
pop
shl
or
xchg
movsl
inc
in
xor
jmp
ja
loope
xlat
push
rorl
js
pop
lds
sub
iret
jp
xlat
repz
cmp
jecxz
or
jb
loop
stos
leave
lahf
imul
sbb
test
sbb
jmp
mov
adcl
leave
xchg
movl
clc
jecxz
cmp
arpl
mov
adc
pop
nop
loope
idivb
stos
sbbl
sbb
lea
hlt
imul
mulb
mov
and
out
xchg
jg
sbb
sub
mov
and
inc
into
sub
ficomps
scas
scas
mov
cmp
clc
or
in
push
mov
sub
popf
adc
inc
or
aad
ds
or
push
scas
jns
xchg
sti
jns
or
dec
lret
jae
lret
aas
xchg
ss
int
push
test
icebp
adc
dec
sbb
mov
hlt
test
outsl
cmp
push
mov
and
cmpb
lret
mov
xchg
repnz
cltd
out
inc
pop
dec
cmp
aaa
lock
dec
mov
loope
cmp
insl
jg
rorb
ss
icebp
push
out
jmp
sub
inc
mov
or
pop
pop
dec
pop
xchg
inc
cmp
inc
push
lods
fs
jp
divl
fdivrl
pop
inc
aas
arpl
enter
aaa
cld
arpl
bound
outsb
and
pop
jb
mov
loope
ds
enter
xchg
xchg
mov
pop
cmp
xor
mov
roll
and
jb
ret
mov
aas
mov
lahf
pop
call
mov
inc
icebp
out
lods
push
push
sub
push
repnz
pop
and
ss
push
fisttpl
insb
mov
fcoms
adc
aad
ds
sub
iret
push
push
aaa
cmpsb
out
ljmp
push
lock
je
stc
sub
xchg
test
test
cmp
xor
out
add
scas
ds
in
sub
or
fisubrl
push
add
fsubl
inc
aam
push
out
jae
pop
pop
xchg
jb
xor
in
pop
mov
mov
aas
jnp
sbb
movl
lods
stos
ds
xor
mov
insb
push
orb
cmp
sbbb
jne
or
sysenter
push
rcrb
jns
clc
dec
cmp
or
xor
lods
cmp
mov
sarl
icebp
push
daa
jne
loop
xor
fidivs
stc
mov
lcall
dec
mov
stos
adc
push
leave
mov
xchg
in
sbb
push
ret
xor
adc
rcr
or
inc
ja
cld
fidivl
sbb
pop
cmp
mov
pop
ljmp
hlt
ja
inc
ds
and
popf
add
inc
xchg
cs
sarb
test
pop
sbb
fsubl
xchg
mov
lea
outsb
mov
ja
sbb
aad
cmp
inc
or
mov
cmp
gs
sti
xor
out
jmp
leave
or
push
icebp
cmp
mov
aam
mov
adc
sbbb
fsubl
or
ljmp
pop
push
mov
inc
movsb
dec
mov
pop
cwtl
adc
arpl
outsl
imul
dec
inc
sahf
cmpsl
ja
add
sub
push
push
mov
adc
inc
addr16
arpl
sbb
jge
test
sbb
iret
sti
cltd
dec
xchg
mov
loope
stc
or
fwait
xor
pop
inc
aad
ficompl
lahf
test
fwait
xchg
addr16
cmp
add
outsb
inc
sub
inc
les
and
fimull
cli
mov
lock
push
test
inc
push
sti
add
mov
popa
inc
div
or
bound
inc
dec
mov
in
lods
mov
enter
incb
movsb
dec
adc
cmp
loopne
into
test
sarl
push
sub
mov
xor
inc
rcr
inc
push
int3
mov
pop
mov
cmp
loope
jge
pop
shrw
lods
int3
ret
fs
inc
add
dec
gs
jo
mov
sbb
loopne
cmp
or
jecxz
mov
lock
aaa
mov
cmp
mov
sub
in
cltd
cwtl
mov
int3
lods
lods
lret
lea
mov
mov
pop
mov
pop
data16
sub
in
pop
sahf
sub
inc
movsl
insl
call
popf
insb
mov
mov
repz
outsb
and
int3
mov
mov
push
lcall
nop
sbb
xor
xchg
cmp
dec
add
add
cmpsb
xchg
ljmp
testb
and
test
fbld
pcmpgtd
sub
repnz
int3
test
stc
sbb
mov
loop
dec
cli
mov
sbb
imul
jge
movsl
lahf
cmp
add
add
aas
push
mov
push
dec
ret
xor
mov
ret
mov
cmp
insl
rclb
fmull
jb
mov
pop
push
test
std
xchg
sub
nop
clc
or
or
test
shrb
cmp
es
and
xchg
push
jp
clc
inc
lods
rcr
sub
nop
cmp
mov
shll
idivl
lcall
fmull
arpl
nop
lods
out
nop
mov
jmp
add
sub
mov
sbb
lret
cld
sti
mov
sbb
loopw
mov
mov
jle
lods
fstpl
pop
jbe
shr
mov
push
jg
addr16
sub
hlt
mov
xor
mov
cwtl
jns
icebp
cmp
or
cmp
inc
pop
mov
push
xlat
fsubs
es
mov
xlat
into
pop
cmp
insb
dec
fnstcw
iret
cld
inc
mov
or
shrb
mov
setp
xchg
aad
and
or
repnz
add
int
aam
or
jle
icebp
stos
addb
mov
dec
push
or
pop
mov
jecxz
inc
jne
mov
into
mov
push
or
mov
dec
pop
nop
xor
cmpsl
fs
or
mov
incl
and
enter
pop
dec
push
mov
sarl
inc
sahf
mov
int3
pop
pop
sbb
or
push
or
adc
or
popa
pop
jg
jle
fs
sbb
aas
mov
icebp
sbb
mov
push
sbb
adc
xchg
lret
mov
sub
ja
dec
aam
dec
sub
jns
rcrl
mov
fwait
adc
xchg
or
mov
mov
sub
pop
popa
xlat
cwtl
aad
js
inc
cmpsb
clc
in
ss
cmp
mov
mov
scas
mov
shll
insb
insb
jno
sub
xchg
test
push
sub
nop
out
dec
jmp
pop
lcall
cmp
jge
pop
pop
inc
add
adc
les
push
dec
iret
cmpsl
js
dec
insl
ss
popf
xchg
out
popa
shll
into
mov
mov
or
xor
into
inc
mov
jo
and
jmp
lret
leave
in
mov
mov
ret
fldenv
or
and
jno
xor
sahf
mov
inc
dec
dec
mov
in
xor
stc
adc
mov
mov
jmp
xor
adc
in
and
sbb
lahf
js
sub
mov
fs
push
arpl
sub
aad
nop
adc
push
xchg
push
cmp
lret
popa
loopne
xchg
outsl
out
mov
mov
and
fldt
and
add
aad
push
jecxz
dec
or
stos
push
xchg
in
jbe
icebp
and
cmp
lds
jle
test
add
mov
push
aaa
imul
test
clc
popa
pushf
add
int3
loope
js
sub
xor
ds
shrb
sbb
sahf
repnz
bnd
rcrl
lods
jg
fnstsw
fisubrs
bound
add
outsl
scas
in
inc
test
test
rcll
xor
adc
cmc
xor
iret
ja
lret
rclb
and
mov
hlt
jbe
or
daa
jno
les
push
and
repz
out
inc
in
insb
and
pop
xchg
fsubrs
dec
inc
dec
test
push
add
pop
jg
sti
stos
adc
add
mul
push
shrl
mov
dec
sub
push
push
push
mov
inc
scas
push
scas
pop
arpl
enter
in
lock
out
ljmp
xchg
cmp
pushl
fiadds
xchg
jo
cwtl
push
lods
nop
cmc
dec
xor
dec
xchg
fstl
ret
cmp
xchg
cmp
sahf
es
push
cwtl
pop
inc
leave
and
sub
xorl
add
cli
pusha
test
inc
mov
divl
sub
arpl
subb
pusha
insl
ja
fsubl
in
jbe
xchg
dec
xchg
shll
sbb
cmp
lods
dec
cmp
rcrb
daa
int
je
add
adc
lock
das
xchg
fisubrs
xchg
sti
cmp
cld
or
dec
out
or
fsubs
mov
loop
fcoms
add
out
popf
inc
movsl
out
leave
std
dec
xchg
mov
and
pop
mov
fiaddl
lods
jae
ljmp
sbb
insb
mov
insb
or
iret
movups
rcll
test
loope
sbb
ret
addl
cmc
call
jg
push
pop
xor
pusha
push
aaa
in
cmp
aas
aas
lcall
sarb
xor
jmp
loop
pop
jnp,pn
jl
xchg
lock
int
pop
and
ss
shll
xor
xor
push
push
adc
test
adc
cmp
ret
sub
mov
push
dec
push
mov
cltd
xor
cmp
xchg
sbb
in
push
bound
add
jbe
add
mov
insl
loop
dec
in
outsl
pop
xor
test
cwtl
inc
mov
dec
push
adc
sub
add
add
add
out
cwtl
adc
push
out
stos
mov
mov
push
mov
dec
shl
adc
stc
cmpsb
xchg
or
scas
popa
sbb
pop
cld
aaa
in
stc
mov
shrl
jns
into
outsb
inc
push
sbb
sti
sbb
cltd
push
lret
dec
dec
adc
jp
lret
sub
sbb
sbb
lock
lret
xor
insl
add
cmp
push
imul
inc
pop
fisubs
mov
clc
inc
int3
push
dec
mov
cmp
out
cmp
divb
push
jno
std
dec
or
pop
or
push
data16
jb
ror
jle
ja
push
inc
mov
sbb
jmp
jne
add
push
mov
xchg
mov
arpl
enter
xor
push
cmc
inc
ja
mov
push
jnp
mov
pop
add
je
mov
jbe
mov
or
and
les
int3
or
xor
mov
outsl
stos
into
push
in
adc
or
sbb
sbb
hlt
cmpsl
xor
xorl
and
rorl
test
cwtl
adc
mov
or
and
int3
test
call
addb
adc
add
xlat
inc
sahf
push
push
cs
cmpb
dec
sub
cmp
insl
mov
cmp
mov
xchg
push
jae
es
dec
cmp
movsb
arpl
lahf
imul
xchg
jo
lds
jnp
movsl
out
shrl
pop
in
xchg
test
sub
mov
imul
out
repz
lock
mov
inc
sub
notl
push
scas
cwtl
fnsave
adc
cmp
sbb
xchg
pop
out
cmp
rorl
scas
enter
xchg
mov
lods
int
test
imul
mov
mov
sbb
mov
int3
fwait
pop
pop
sub
icebp
mov
pop
inc
mov
js
cwtd
mov
movsb
test
std
inc
adc
cmc
pop
mov
xor
out
adc
aad
andl
dec
dec
fldcw
out
test
out
jle
stos
bound
ret
sbb
out
xchg
inc
rcll
push
icebp
jae
in
mov
mov
sbb
fwait
cli
je
push
dec
adc
dec
sbb
xor
jae
loopne
inc
cld
jp
sbb
aaa
ret
jbe
or
shr
fsubr
pop
test
xor
cmp
in
adc
pop
orb
adc
cs
dec
jns
mov
pop
gs
pushf
xchg
addr16
cmp
jb
jl
outsl
mov
mov
jp
xor
lea
int
mov
sub
pusha
dec
lea
pop
hlt
inc
mov
xrelease
xor
rclb
dec
adc
loope
mov
xchg
push
loopne
lahf
xchg
das
shll
sbb
mov
jnp
xchg
add
jmp
cs
jge
xchg
es
mov
jne
fists
adc
gs
dec
jne
repz
xor
popf
aam
nop
xchg
adc
iret
jmp
idivb
pmovmskb
push
adcl
shrl
mov
cli
push
xchg
ja
loopne
loope
adc
sub
lods
push
dec
and
adcb
xor
js
outsl
movl
xor
repz
std
or
inc
shl
cwtl
mov
xor
hlt
jle
mov
xchg
xor
insb
call
fwait
xor
mov
out
lahf
ljmp
filds
inc
pop
push
rclb
push
xchg
pusha
push
divb
ds
iret
jge
in
in
inc
push
jmp
mov
ljmp
sub
shll
hlt
mov
in
jp
jo
fiadds
xor
or
shll
movsl
and
icebp
iret
outsl
aaa
xor
sbb
cltd
inc
jne
ss
psadbw
xchg
repnz
lahf
lcall
jb
push
add
shrl
inc
mov
js
in
add
inc
and
sbb
fildll
pop
mov
std
outsb
adc
dec
out
call
fistpll
test
xchg
aam
sbb
setl
inc
and
lret
mov
sub
sub
sbb
or
jecxz
mov
or
cmc
inc
fisttpll
jo
lock
aam
loop
pop
arpl
les
adc
int
jne
js
add
imul
or
cwtl
mov
jl,pn
imul
sbb
lods
and
mov
jp
test
adc
sbb
bound
icebp
imul
adc
push
and
test
mov
gs
call
call
mov
and
jle
lock
or
fisttpll
pop
xor
add
inc
mov
sbb
sar
xor
popf
cmp
add
xor
fimuls
sbb
ja
cwtl
aam
and
mov
test
cmp
in
in
popa
mov
pusha
rcl
cld
push
test
icebp
mov
bound
rcrb
or
out
cli
stos
add
ficomps
int
pop
add
fadds
outsb
cwtl
sahf
enter
sub
daa
stos
jae
sbb
aaa
sub
sbb
fdivr
dec
lahf
mull
ljmp
js
push
ret
xor
loope
mov
cmp
call
pop
pop
loope
movsb
inc
pop
xlat
fcoms
mul
jg
jge
aas
sub
add
mov
pop
dec
sbb
outsb
scas
xchg
cmp
lahf
push
sub
std
sbb
xchg
or
mov
iret
jno
rcrb
push
pusha
xor
jae
mov
xor
push
pop
jg
sub
mov
fwait
mov
jbe
in
cld
sub
iret
loop
int
cmp
adc
stos
pop
push
xor
xor
pop
add
and
hlt
pushf
or
movsl
hlt
xchg
test
pop
xor
sbb
sub
xchg
pop
jge
in
das
push
ret
jmp
xchg
add
mov
dec
roll
shl
pop
or
sub
test
mov
lds
or
mov
pop
es
pop
cmp
push
push
adc
cs
xchg
loop
addr16
fstpt
xchg
push
out
cmpsl
movsb
ret
cltd
and
mov
mov
dec
out
mov
stos
aad
outsb
xor
xor
flds
ja
fsubl
rol
popf
stos
jmp
inc
cli
pop
inc
dec
mov
bound
aam
xor
sbb
push
pop
dec
and
pop
mov
loopne
jo
insb
sbb
out
inc
repz
sub
in
jae
mov
jo
sahf
into
test
cltd
pop
fnstenv
sbb
movsb
sti
xchg
repz
.byte
mov
sbb
add
pop
rol
iret
mov
add
xor
test
cmp
shr
xchg
outsb
ds
xchg
daa
add
add
or
dec
cmp
mov
pop
fstpt
xchg
jecxz
push
pop
sub
and
mov
test
fldt
mov
add
inc
mov
and
lret
loope
push
xor
je
es
inc
rol
xorb
adc
or
cmc
rcll
jle
leave
test
jo
sbb
xchg
xchg
jnp
flds
lret
inc
iret
ds
jecxz
idivb
test
adc
cmp
xor
or
inc
xchg
js
gs
shlb
sub
mov
cmp
fsts
sahf
add
movsb
insl
ret
push
add
add
cmp
les
mov
mov
and
mov
xor
lcall
aad
ret
inc
dec
jmp
aad
shlb
aad
xor
push
mov
mov
and
xchg
bnd
dec
movsb
jo
cmovnp
jecxz
push
or
push
sub
loope
jae
pop
fdiv
lcall
ret
sub
stos
bound
test
and
mov
jg
std
add
out
xor
sbb
add
jo
rclb
rcrb
loopne
cmp
std
inc
jae
push
rcll
mov
cli
clc
inc
push
or
movsl
clc
mov
push
and
fwait
ror
sub
int
dec
push
lods
in
repnz
pop
leave
cmp
stos
push
push
xlat
sub
lcall
lods
fisttpll
sar
test
dec
add
and
int3
movsb
andl
and
and
inc
adcl
push
cmp
test
mov
cmpsb
mulb
movsl
xlat
mov
imul
dec
sub
repnz
jl
ja
sbb
jbe
jmp
xchg
or
addr16
lret
lret
sub
and
lock
imul
arpl
and
ja
out
notb
push
loope
xor
gs
sub
pop
xchg
je
sub
dec
inc
push
nop
jne
fbstp
and
xchg
jno
outsb
sub
dec
lret
and
push
das
std
fnstenv
and
sbb
xor
pop
xchg
pop
ret
mov
loop
ret
jmp
int
dec
push
xor
push
cmp
lods
cld
rcrb
push
mov
mov
and
sbb
pop
mov
js
jmp
lods
jg
popa
out
lret
jbe
scas
lcall
jbe
hlt
sbb
adc
testl
rcrl
loop
jb
jnp
push
xchg
push
fisttpll
nop
leave
clc
dec
adc
inc
fsub
stos
mov
roll
mov
mov
sbb
and
dec
push
add
adc
insb
xchg
ds
lods
test
xchg
pop
imul
mov
mov
add
push
push
test
push
out
in
int3
stos
ret
push
mov
xchg
imull
mov
cmpsl
imul
mov
and
sti
or
add
repnz
aas
pop
test
jno
push
and
pop
loop
inc
jmp
aaa
dec
jmp
xor
insb
sahf
push
add
popw
jl
lret
and
inc
inc
adc
dec
cmovae
inc
pop
jl
jmp
jo
outsb
call
nop
jae
rol
adc
xchg
loope
hlt
clc
mov
lds
jo
and
repz
out
pop
nop
shll
test
sbb
pop
lea
sub
mov
mov
add
mov
sub
cmp
loop
mov
and
enter
loope
and
dec
pop
repnz
lock
stc
inc
pop
mov
insl
jae
and
pop
outsb
fs
xor
xchg
jns
pop
lds
xchg
imul
xor
cmc
mov
mov
ret
sub
and
fbld
mov
cmc
mov
push
fimull
mov
out
shlb
fidivl
push
insb
pop
sbb
add
scas
cmp
add
pop
xchg
sub
sub
cmp
stc
stos
cli
ja
aaa
inc
or
lahf
daa
mov
movb
repnz
mov
mov
mov
add
add
xor
mov
pop
iret
and
movb
jp
sbb
bnd
bound
cmpsb
iret
jl
loop
daa
push
pop
pop
rclb
in
cmp
sbb
adc
xchg
stos
mov
ss
cmpsl
inc
or
xor
dec
xchg
mov
pop
icebp
or
and
cmp
adc
js
aam
inc
dec
mov
add
push
add
iret
inc
cmp
gs
cmp
jmp
fmuls
inc
pop
cs
mov
js
pop
loopne
out
pop
sub
mov
ret
fdivp
cmp
xchg
add
cmp
daa
pop
push
out
mov
repz
lahf
mov
dec
and
iret
sbb
into
and
ljmp
sub
mov
call
in
test
loop
mov
or
lds
in
call
lods
in
mov
arpl
xor
or
mov
push
push
cmc
adc
nop
cmp
dec
or
adc
out
addr16
fistpl
stos
ljmp
test
mov
rcr
clc
loopne
xor
sbb
add
dec
clc
incb
mov
push
push
daa
test
in
cld
sbb
out
mov
or
test
js
xor
xlat
dec
push
dec
fdivl
jbe
fdivs
lea
popa
int3
pop
fstpt
xor
lret
sub
dec
and
mov
call
sub
pop
ljmp
leave
dec
mov
rolb
pop
mov
adc
xchg
insb
add
lods
in
and
jg
sbb
ficomps
push
daa
xchg
push
dec
lds
pop
mov
adc
jp
enter
insb
es
ret
rorb
xchg
in
pop
insb
aaa
jno
mov
add
addl
cli
clc
xor
inc
addb
arpl
add
popa
test
pop
push
mov
or
rcrb
sbb
ret
mov
pop
sbb
sub
mov
ret
xor
xchg
sbb
mov
cmp
mov
shrl
sbb
add
stc
mov
ja
cmpsb
hlt
xchg
cltd
xor
mov
aam
int3
lods
adc
xor
fsubrl
sarb
xor
arpl
xchg
popf
movsb
ret
nop
xor
fadds
enter
loope
jecxz
fmulp
mov
mov
sub
jecxz
sbb
sub
jmp
dec
std
sbb
lds
jnp
pop
into
mov
.byte
mov
.byte
.byte
add
add
movsb
add
adc
sbb
add
jae
inc
shrl
lret
pop
out
int3
loope
or
test
mov
mov
xor
xor
mov
hlt
lcall
das
clc
cmpsb
pop
scas
pop
add
add
je
and
mov
mov
mov
or
fmull
enter
push
mov
lods
push
pop
cltd
dec
cwtl
jbe
xchg
adc
adc
xchg
fstpt
clc
fwait
add
adc
fsubrl
decl
inc
dec
hlt
adc
sub
enter
clc
es
in
cltd
enter
shrl
cltd
jb
jle
mov
out
pushf
js
inc
adc
pop
and
sub
mov
xchg
icebp
sub
push
mov
and
sbb
jnp
gs
and
inc
pop
sub
dec
mov
sub
stos
lock
bound
das
out
ss
push
psllw
into
out
and
jge
das
ror
repz
sub
mov
mov
sub
dec
push
scas
psrad
sub
and
les
stos
das
mov
rcl
jb
jecxz
pop
inc
mov
add
in
jecxz
sub
jb
dec
idiv
mov
and
mov
adc
pusha
push
fwait
adc
jle
jb
ss
or
sbb
out
out
popa
daa
aaa
push
dec
mov
inc
and
dec
cmp
inc
outsl
test
adc
jno
incb
daa
xchg
jbe
cmp
add
add
sbb
lcall
call
in
jbe
outsb
ret
add
mov
outsb
adc
push
add
lods
mov
fsubrs
push
or
lcall
into
popf
mov
in
and
push
pop
pusha
aam
sbb
dec
insb
stc
ljmp
imul
xchg
mov
inc
cltd
movsb
sub
jg
pop
mov
pop
push
std
pop
nop
stc
mov
and
mov
out
inc
or
enter
cmpsl
push
pop
inc
lret
sbb
cmc
xor
roll
dec
mov
adc
adc
ljmp
popa
mov
mov
or
pop
je
mov
imul
test
sub
and
jnp
fistps
sub
mov
add
xor
cmp
lods
mov
push
in
cs
inc
jnp
call
push
cmp
push
lea
lret
repz
jns
add
inc
leave
pop
repnz
insb
lahf
roll
imull
xor
xor
cmp
fidivs
sbb
xchg
lods
aaa
test
arpl
pop
aad
cmpsl
repz
xor
cmp
ret
pusha
outsl
hlt
cmp
call
jmp
mov
shlb
jle,pn
cmp
je
xor
add
sub
pop
fnstsw
add
cmp
dec
faddl
pop
int
mov
and
outsl
hlt
add
mov
inc
pop
lret
mov
sub
in
lret
popf
shlb
insb
cld
sbb
je
ret
daa
lret
pop
fsubp
out
cld
sbb
rcrl
ror
pushf
push
jge
pop
sbb
and
lret
scas
inc
inc
xchg
imul
sbb
loope
out
push
jecxz
xor
scas
imul
adc
or
in
ds
addb
sub
dec
daa
push
jnp
aad
insb
add
push
xor
add
dec
adc
ss
add
push
adc
out
jmp
xchg
aam
push
inc
mov
xchg
iret
sbb
int
pop
ret
.byte
add
add
add
add
add
add
sub
add
dec
add
orb
add
js
add
add
add
add
add
add
add
add
add
nop
add
addb
add
test
add
add
add
add
add
add
add
test
add
mov
add
movb
xor
add
or
add
add
add
add
add
add
add
out
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
sbb
add
add
pop
push
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
adc
add
in
add
add
add
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
mov
push
add
sbb
add
add
add
add
add
add
in
add
add
add
push
add
add
dec
add
dec
add
add
pop
add
dec
add
inc
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
mov
test
cmp
gs
popa
cmp
xchg
out
sbb
mov
and
imul
and
inc
add
jno
push
in
jnp
daa
mov
daa
fists
and
and
test
out
enter
mov
inc
cld
dec
xor
add
jge
cmpsl
popf
sbb
and
pop
lcall
movq
fimull
je
push
xchg
pop
and
or
das
int3
cmp
push
insb
icebp
loopne
imul
xor
mov
daa
jecxz
out
adc
ret
xchg
rol
add
pop
and
fwait
sarl
testb
pusha
cli
test
push
jmp
jae
inc
ficoms
jp
sub
shll
shr
xchg
sbb
pop
call
sbb
je
xchg
in
adc
jp
push
js
fldcw
and
xor
popf
dec
outsl
popf
loop
ja
jge
aaa
push
jl
addr16
inc
lcall
jl
daa
or
test
lret
xor
mov
push
pop
pushf
jne
into
and
sub
xchg
xor
in
pop
jno
mov
jmp
mov
sbb
dec
decl
fisubrs
mov
ret
outsl
icebp
and
jge
out
push
adc
hlt
inc
jg
xor
add
adc
jge
les
pusha
call
idivb
in
mov
xchg
jecxz
ss
mov
psrld
std
bound
icebp
sbb
mov
cmpsl
int3
jmp
out
jae
mov
and
or
dec
stc
out
loopne
mov
mov
push
rcrb
loopne
or
int3
addr16
movsl
in
sahf
ljmp
stos
jecxz
fcomip
and
jnp
pushf
in
in
xchg
jnp
fs
leave
xchg
scas
mov
lahf
and
sbb
aad
inc
jmp
inc
sbb
scas
cltd
outsb
clc
shl
cmpsb
mov
subl
stc
push
rorb
mov
lods
mov
mov
test
sub
fsubrl
xchg
aaa
test
sub
push
dec
nop
or
bound
out
mov
add
sub
cmp
shr
out
imul
adc
mov
push
arpl
rolb
in
ljmp
sarl
sub
xchg
jno
cmpsl
testl
add
xchg
enter
sub
jne
loope
add
push
loopne
jnp
sub
xchg
mov
or
mov
into
ja
and
adc
pop
dec
imul
and
lahf
mov
xor
add
mov
cmp
loope
mov
cltd
push
in
dec
sbb
push
test
adc
lret
es
out
xor
ljmp
cwtl
mov
push
inc
xchg
sbb
repnz
xor
iret
sahf
mov
xor
mov
loopne
incl
aam
movsl
jbe
pop
jo
adc
add
sub
les
jnp
test
inc
into
or
lahf
cmp
hlt
std
mov
pop
mov
sahf
push
sbb
cmp
xchg
inc
out
dec
push
push
xchg
repz
je
lods
je
ss
mov
dec
sub
cmc
inc
pop
mov
je
shrl
sub
push
cmp
mov
pop
sbb
insb
lcall
cmp
and
sub
ja
int3
cmpl
or
add
dec
inc
lock
sbb
sbb
popf
into
mov
or
pop
in
mov
call
out
lods
lods
aas
xchg
or
push
shlb
cmp
sub
mov
mov
xor
cmp
lds
jl
sbb
or
pop
mov
and
dec
inc
mov
sub
sbb
das
pop
out
nop
xchg
cmp
push
jno
cmc
mov
cmp
stos
rorl
mov
scas
ljmp
movsb
aam
sti
out
mov
out
inc
mov
mov
jmp
call
ljmp
in
cmp
cmc
popa
and
or
rcl
lods
xor
mov
dec
inc
into
pushf
xorb
hlt
popa
mull
sub
hlt
xchg
cmp
hlt
repnz
jnp
or
jb
mov
in
fucom
cmc
dec
insb
bound
mov
ror
int
ja
pop
out
pop
icebp
sahf
addb
packuswb
in
addr16
push
or
sub
sub
jbe
cwtl
mov
fdivrl
or
mov
nop
gs
mov
movsb
mov
or
mov
enter
cmp
cmovp
std
pop
mov
imul
inc
testl
insb
xchg
sbb
out
xchg
inc
aaa
fcompl
sahf
jecxz
push
xor
sbb
inc
mov
xor
and
dec
mov
inc
push
push
jae
lods
inc
out
or
addr16
pop
and
cwtl
pushf
adc
mov
xorb
sahf
call
adc
popa
add
pop
pop
jo
leave
push
jno
ret
cmp
addb
daa
mov
addr16
and
sub
inc
cmc
cmp
into
ror
xor
cld
gs
std
push
in
adc
test
inc
roll
jmp
inc
mov
xor
fiadds
jg
lock
popa
pop
cmpsb
popf
jbe
inc
jle
ret
and
or
leave
lahf
mov
add
push
dec
mov
push
andl
out
push
xchg
mov
enter
shl
or
loope
mov
test
out
cli
mov
mov
imul
cwtl
lea
bndldx
scas
mov
xchg
daa
xor
jb
call
jge
aaa
dec
nop
rclb
call
imul
add
and
test
popf
loope
repz
jae
xchg
lds
mov
je
hlt
int
in
push
and
dec
pop
or
insb
cmc
shrb
fs
push
pop
mov
xchg
jecxz
xchg
mov
hlt
nop
pop
lds
push
in
pop
and
mov
jmp
testl
xor
pop
jmp
ficompl
test
dec
fs
push
xor
adc
stc
mov
fxch
in
arpl
add
add
pushf
add
sub
fbstp
jle
dec
les
cs
daa
das
imul
lcall
inc
test
xor
test
mov
clc
into
jg
xchg
jl
jno
xchg
jnp
daa
mov
mov
dec
pop
js
pop
add
popf
stos
or
in
pop
inc
data16
mov
xor
sub
xor
xor
popa
push
leave
jns
lods
insl
imul
mov
jo
das
xchg
and
clc
ljmp
mov
cli
adc
sub
cmc
test
push
dec
repz
negl
pop
pop
insl
das
sub
pop
ljmp
nop
add
insl
sub
test
mov
nop
rorl
cmp
repnz
nop
adc
icebp
cmp
inc
jg
mov
jbe
pop
mov
jmp
mov
outsb
les
in
inc
stos
ljmp
rdmsr
cmp
mov
push
push
cmc
pop
sub
push
lret
xor
inc
iret
subl
cmp
stc
cmc
ss
xchg
daa
clc
pop
shlb
inc
sbb
mov
push
sub
xchg
sahf
and
pop
js
jnp
arpl
sahf
hlt
and
sbb
inc
sti
icebp
mov
cld
cli
push
gs
sbb
out
dec
cmp
xchg
adc
call
shll
popf
push
ds
adc
scas
pop
mov
adc
lds
xchg
push
add
lods
pop
pop
aad
sbb
xorb
sub
sub
aad
or
fcom
outsl
cltd
mov
repz
adc
jge
or
push
and
test
rcll
jns
pop
das
loopne
dec
test
and
cwtl
dec
dec
mov
dec
fsubr
xor
lret
dec
cmp
or
mov
aaa
test
sub
xchg
xchg
sub
addr16
sub
sub
adc
mov
das
dec
cmp
lods
shl
or
pusha
loop
mov
mull
add
adc
out
pusha
xchg
scas
lret
mov
nop
cmp
inc
xchg
push
jb
enter
and
sarl
and
cmp
push
mov
out
ret
notb
push
dec
aas
and
sbb
cs
incb
movsb
mov
xorb
arpl
jl
sub
xchg
leave
jae
mov
movsb
pop
icebp
pop
bound
test
nop
dec
cmp
insb
or
push
jecxz
mov
in
cltd
in
push
mov
idivl
push
out
sub
das
sbb
rolb
xchg
je
jp
std
into
add
and
repnz
add
movsb
pop
ficomps
xlat
movsb
add
adc
dec
xchg
rcrb
test
bound
ficoms
and
xchg
rcl
jp
pop
dec
add
adc
add
xchg
cmp
add
out
push
nop
add
push
repz
les
xchg
xor
cmpsb
jecxz
sbb
clc
cmp
and
insl
jmp
test
imull
pop
adc
mov
cwtl
and
rclb
fs
shl
mov
in
pop
test
lock
push
lcall
clc
add
stc
jae
and
fs
xchg
lds
aam
fistps
ret
jp
shrb
cmpsb
pushf
mov
and
xchg
xlat
and
inc
jle
ds
add
ret
xchg
pop
inc
nop
mov
push
insb
pusha
and
fdivrl
inc
mov
jns
or
repz
jns
sub
xchg
in
nop
sub
clc
add
sbb
mov
ljmp
movsb
dec
jecxz
xchg
mov
xchg
fnsave
lods
push
imul
inc
and
mov
dec
mov
cmpb
or
outsb
hlt
shll
shrb
push
pop
insl
inc
out
test
outsb
or
dec
outsb
dec
pop
fsubs
jle
and
scas
pushf
lds
test
sarl
xorl
movsl
test
dec
cmp
movsb
cld
inc
test
loop
push
iret
and
dec
xor
sub
repz
xor
dec
dec
sti
push
pop
jne
mov
fdivr
cmc
cmp
ss
mov
pop
fidivrs
fistps
call
ja
cmp
test
ret
dec
sub
jae
dec
push
or
and
dec
jecxz
mov
out
scas
xlat
cwtl
pop
test
add
enter
inc
xor
sbb
pop
loop
mov
pop
sub
or
mov
hlt
add
mov
imul
push
adcl
push
xor
xor
wrmsr
cli
enter
ret
aam
sub
pop
push
jnp
ds
lods
mov
and
pop
xchg
rcr
dec
add
insb
insl
sti
or
and
lea
sbb
xlat
mov
sub
rolb
adc
dec
cwtl
int3
cmp
rol
jg
stos
pusha
in
dec
jle
fs
repz
mov
aad
fsubp
ret
push
lods
sub
jbe
out
fldl
stos
dec
adc
in
in
xlat
enter
addr16
push
and
lds
inc
inc
or
xor
imul
js
adc
xchg
xchg
sbb
mov
das
sbb
loope
and
xorl
icebp
jecxz
out
subl
loope
xchg
insl
xor
fldcw
or
lahf
jmp
dec
pop
adc
xchg
lahf
sbb
ror
cmc
lahf
pop
adc
dec
xor
lds
adc
iret
dec
loopne
dec
fwait
andl
sub
arpl
mov
inc
cmp
xor
movsb
movswl
test
push
adc
sub
stos
mov
xor
mov
push
aaa
mov
sbb
push
aad
iret
cmpsb
rcrl
mov
int
stc
mov
xchg
sarb
add
dec
scas
and
lahf
jge
scas
movsb
aam
outsb
dec
push
jno
ds
jo
mov
inc
lods
test
outsl
xor
and
add
push
jno
cmc
pushf
sbb
jecxz
mov
mov
aam
ljmp
and
jg
imul
jecxz
xor
adc
fdivs
pop
mov
stos
les
imul
insl
enter
mov
jno
xchg
push
xor
xchg
bound
stos
adc
jnp
add
lods
lds
pop
dec
xchg
in
jecxz
push
mov
in
call
sahf
out
mov
and
inc
add
fsub
jne
mov
dec
es
stos
mov
bound
fisttps
rcl
or
push
inc
js
sub
inc
test
pusha
adc
mov
mov
inc
loope
sti
fadd
push
xor
in
jmp
bound
adc
sub
push
pop
adc
and
pop
hlt
cmp
shll
subl
mov
fwait
push
pop
xlat
inc
insb
aad
call
arpl
xchg
int3
mov
cmp
pop
bound
dec
pop
cmp
shlb
sub
push
cmp
in
push
cmpsb
ret
inc
push
cwtl
int3
in
fldt
jle
adc
clc
in
out
or
loop
dec
xor
fiaddl
mov
pop
mov
add
pop
je
ss
loopne
rcll
xor
pop
adc
mov
sub
mov
sahf
cltd
data16
test
repnz
sbb
ljmp
jo
out
out
mov
loop
mov
push
test
adc
push
adc
mov
mov
inc
aam
cmpsl
mov
arpl
popf
loopne
andb
jge
lock
mov
mov
adc
call
nop
jne
push
and
mov
dec
sub
cmp
jb
push
inc
inc
in
push
add
aad
xor
nop
lea
or
xor
dec
and
jg
iret
push
or
movsl
mov
sub
inc
cmpsb
mov
sub
or
ds
sub
ja
fmuls
pop
push
cmp
inc
cmp
ret
aas
test
pop
and
lea
repz
push
mov
mov
or
repz
mov
cmp
test
sub
dec
bound
push
mov
lret
loopne
cltd
lcall
or
jb
ja
pushf
adc
scas
bound
dec
lcall
ds
push
mov
add
dec
dec
mov
aaa
adc
jl
inc
scas
test
xchg
test
push
inc
fidivrs
jnp
cmc
in
push
xchg
ss
in
sub
scas
cs
mov
stos
into
cwtl
incl
jmp
movlps
mov
and
cmp
adc
gs
mov
push
pop
sahf
mov
cmpsb
jnp
jmp
cmp
mov
mov
pop
xor
mov
pop
or
jg
adc
cmc
scas
pushf
lret
xchg
mov
insl
sub
mov
xchg
repz
in
push
imul
or
sbb
ljmp
inc
mov
and
test
inc
mov
dec
ljmp
arpl
pop
xchg
and
clc
mov
out
add
push
and
jo
and
nop
out
stos
sub
pop
jo
push
iret
gs
push
mov
aas
inc
lahf
aad
mov
dec
outsl
aaa
xchg
xchg
push
out
dec
sbb
fprem
xchg
loopne
sbb
add
repnz
xchg
jl
pushf
and
push
xchg
sbb
cmpsl
inc
mov
popf
cmp
mov
outsb
jmp
xchg
lcall
ljmp
jmp
in
repz
orb
clc
push
or
xchg
pop
aaa
std
or
dec
or
test
push
xchg
movsl
lret
in
xor
test
cmp
ss
inc
out
xchg
sub
jl
aad
mov
push
jge
dec
xor
dec
clc
xchg
arpl
ret
xchg
mov
sub
push
cmp
push
push
add
jo
pop
movsl
adc
inc
aad
mov
push
pop
mov
or
ja
cmp
push
out
add
data16
push
loopne
sbb
dec
scas
mov
xor
mov
or
adc
lcall
das
loop
cmp
inc
adc
shll
or
xchg
ret
mov
and
adc
mov
adcl
stos
mov
push
push
or
pushf
mov
xor
cmp
push
lret
add
add
xor
test
cs
xor
clc
adc
pop
dec
movsl
or
cwtl
push
sub
cmp
and
rcl
mov
pop
jp
repz
cmpxchg
sub
std
sbb
xor
stc
fs
pop
insl
leave
and
popf
sahf
mov
and
pop
loop
insl
mov
mov
or
inc
pop
divl
mov
mov
dec
lock
lods
mov
mov
popf
xchg
add
cltd
inc
fwait
icebp
out
popa
sbb
andb
or
lahf
dec
int3
aas
imull
outsl
cwtl
push
insl
inc
mov
pop
xor
popf
cwtl
dec
in
ficomps
pop
mov
dec
inc
dec
fnsave
sub
jl
test
cmp
xor
sub
adc
pushf
inc
xchg
jno
in
or
sbb
rcrl
daa
sti
test
mov
sti
stos
lahf
movsl
ret
pop
ja
push
or
xchg
mov
push
mov
dec
dec
push
and
push
ja
push
call
imul
inc
push
inc
movsl
push
pop
gs
cmp
xlat
mov
popa
sub
pop
push
and
pop
pop
scas
shr
push
mov
rclb
mov
mov
inc
lock
clc
fnsave
inc
xor
je
pop
xor
adc
sbb
pop
mov
add
cmpsb
out
pop
lahf
cmp
xor
cmc
bound
push
jmp
inc
xor
jecxz
xchg
xor
jae
jp
lea
repnz
jnp
jp
repnz
mov
test
mov
andb
fs
jl
sbb
fiaddl
mov
cmpsb
mov
xchg
push
sub
or
insl
and
stos
mov
add
vdivps
aaa
or
dec
or
inc
fdivs
test
shr
test
push
test
jmp
icebp
dec
clc
fdivl
rcrl
sbb
lcall
jmp
jo
outsl
jae
inc
mov
sub
jne
scas
push
xorl
popf
jo
and
stos
sbb
push
cmp
out
and
fld
in
mov
in
pop
insl
jg
cmpsl
inc
mov
adcb
dec
mov
push
popf
mov
mov
sub
in
shlb
inc
lcall
jne
ds
mov
in
cmp
pop
push
mov
cmc
lock
mulw
pop
je
das
movsl
mov
cmp
sub
cwtl
call
popa
add
jmp
loope
stos
cmpsl
mov
out
sub
ret
inc
dec
movb
mov
push
mov
rcrb
in
lret
mov
push
inc
out
ja
repnz
mov
aad
mov
fcomps
inc
xchg
out
xchg
inc
xlat
stos
lret
push
jecxz
cmp
into
xchg
lahf
mov
jae
mov
dec
jbe
dec
mov
sub
cmc
mov
rorb
add
jo
test
repnz
sbb
les
mov
dec
jle
inc
add
jbe
sbb
push
daa
add
scas
enter
test
push
jb
cld
xor
sbb
sub
lcall
mov
cmp
pop
fwait
push
cmp
jg
scas
lret
add
sbbl
xor
push
jae
sbb
xchg
ljmp
test
bnd
pop
push
imul
repnz
xor
xchg
insl
out
sub
push
lea
add
fsubp
iret
pop
hlt
nop
push
sbb
comiss
movsl
sbb
fisubrl
jl
pop
cmpl
mov
fistpl
outsb
lret
mov
je
fs
pop
inc
fidivrs
test
cli
loopne
and
out
test
add
jl
push
scas
jg
mov
cmpsb
mov
cli
cltd
and
push
adc
shlb
xor
push
mov
dec
xorl
loop
mov
leave
cmpsl
fwait
lcall
outsb
inc
push
clc
aaa
enter
cmp
xor
xor
jne
mov
fs
scas
jne
sbbl
std
cmpsb
scas
mov
shl
push
and
cltd
inc
movsl
mov
add
xchg
inc
cmpl
outsb
sbb
add
popf
stos
dec
int3
daa
mov
jg
addb
adc
mov
jne
divl
mov
jp
aam
aam
jb
popf
xor
push
mov
imull
mov
subl
aaa
in
and
or
add
ljmp
mov
popf
int3
pop
hlt
push
sub
sbb
mov
jne
clc
push
shrb
add
sub
cmp
ss
add
out
lock
push
pop
bound
mov
test
hlt
pop
mov
arpl
je
cmp
testb
xchg
adc
xor
xorl
mov
xchg
cmpb
fbstp
cmp
push
cmp
popa
in
dec
mov
lret
in
mov
sti
fsubrp
fs
sbb
aaa
rorl
in
leave
pop
push
push
aam
imul
dec
jnp
sub
in
ret
pop
jae
mov
fsubrl
enter
popf
or
mov
pop
push
xchg
je
inc
in
ss
mov
push
sub
int3
lret
dec
mov
aas
fmul
inc
aad
je
push
push
cmpsl
xchg
sbb
bound
stos
call
ja
cmp
les
dec
sub
cmp
cmp
in
jmp
xchg
js
mov
aam
mov
mov
or
insl
into
int3
fsts
or
scas
xor
jmp
cmpsl
popa
addr16
gs
dec
out
push
stos
jno
data16
dec
mov
inc
nop
dec
xchg
mov
cld
mov
mov
ljmp
loop
xchg
xchg
push
pop
mov
add
sub
insl
xchg
arpl
lahf
pop
dec
xchg
or
aam
cmc
jp
fbstp
adc
jb
xor
mov
push
and
cwtl
xchg
add
data16
lods
xchg
xor
push
and
out
dec
xlat
int
cmpsl
pop
js
pop
in
nop
and
in
das
adc
mov
lods
lods
mov
loopne
xor
subl
xor
daa
mov
xchg
mov
loop
adc
lds
push
out
adc
jg
sub
fstps
pop
cmp
ss
test
shll
push
call
out
jbe
cltd
pop
rorb
incb
adc
push
add
lock
pop
mov
bound
and
dec
call
inc
inc
jmp
or
and
scas
sub
scas
sub
dec
cmpsl
ret
add
xchg
icebp
mov
lret
fistl
pop
addr16
cltd
dec
mov
adc
shlb
mov
addb
mov
mov
sub
xchg
movsb
ljmp
in
sti
dec
push
jecxz
test
pusha
adcl
push
ss
add
aaa
scas
inc
add
jo
ljmp
mov
mov
xchg
out
addl
insl
or
or
xchg
pop
pusha
pop
cmp
nop
pop
loope
js
lahf
and
mov
outsb
std
jmp
pushf
hlt
inc
mov
aam
daa
std
sbb
stc
sti
mov
xchg
or
mov
movb
pusha
mov
sbb
push
mov
cmp
sbb
outsb
xchg
movsb
dec
out
xor
push
repnz
add
jmp
sbb
or
cmp
mov
fimuls
test
movsl
mov
stc
loope
and
and
adc
lret
imul
inc
in
push
mov
mov
pop
or
mov
inc
jmp
dec
inc
fsub
xchg
mov
jg
arpl
inc
pop
inc
mov
cmp
in
test
scas
cmp
jp
adc
jns
pop
icebp
xchg
adc
out
xchg
mov
shrl
pusha
stc
call
or
jp
xor
mov
shrl
mov
inc
and
mov
and
push
mov
push
out
push
jno
lret
fstpl
xchg
data16
add
dec
pop
fidivrl
mov
int
lock
and
add
adc
pusha
mov
bound
call
inc
out
inc
mov
push
xor
sub
bound
int3
cmp
test
out
ja
sub
sbb
fs
dec
pop
mov
and
push
mov
inc
out
arpl
xchg
xor
xchg
inc
in
loopne
xchg
sbb
dec
add
jg
ja
out
xor
aad
mov
flds
push
imul
je
xchg
lods
or
sub
repnz
xchg
xlat
mov
sub
and
das
mov
jno
cmpsl
sti
mov
dec
mov
inc
xor
cmpsl
aam
and
pop
les
push
push
push
adcb
andb
fwait
dec
in
sub
dec
lods
ds
push
mov
or
sbb
jo
stc
dec
or
xchg
shlb
int3
jbe
fwait
mov
cmp
je
arpl
loopne
jg
and
cmp
mov
cmpsl
adc
xchg
push
add
xchg
adc
pop
xor
jo
inc
mov
fists
sub
sbb
fldt
and
cmp
and
pop
jns
sbb
xor
cmp
xadd
negl
pop
xchg
inc
rcr
insl
adc
cmp
leave
pusha
movsb
into
sub
adc
stos
push
sbb
xlat
push
popf
mov
mov
dec
call
fisubs
jle
mov
inc
add
jnp
cmp
movsl
scas
dec
je
pop
fildl
pop
andl
sub
nop
fisttpl
stos
je
add
mov
imul
sub
ss
loope
and
mov
dec
repz
add
inc
iret
xchg
movsl
pusha
outsb
xor
mov
xchg
stos
int3
jp
sbb
je
sbb
mov
loopne
stos
lret
out
outsl
pop
xchg
scas
push
lret
imul
out
and
fdivs
cltd
movb
mov
xor
hlt
adc
push
fucomp
ret
inc
adc
pop
pop
sbb
ficomps
push
cmp
jle
fs
outsl
xchg
hlt
cs
pop
push
or
mov
push
in
inc
dec
int
mov
cli
ja
jecxz
jnp
mov
or
jae
popa
aad
push
int3
pop
hlt
sub
test
in
inc
mulb
lds
out
adc
lea
lods
lods
and
lds
jmp
shrb
xor
jb
loop
pop
movsl
popa
xchg
pop
add
adcb
scas
outsl
mov
pushf
repnz
push
pushf
xchg
ljmp
push
mov
test
cmpsl
mov
lods
mov
divb
dec
icebp
or
jecxz
xchg
pushf
or
pop
push
lcall
icebp
push
inc
adc
xor
lods
push
in
test
jg
das
dec
outsl
xor
test
sub
insb
dec
sbb
xor
and
das
out
mov
push
in
cmp
push
xchg
arpl
cmp
int3
jmp
test
adc
fwait
ss
into
testb
enter
sbb
int
aam
inc
int
cwtl
ret
pop
inc
cmc
sti
imul
jle
adc
xchg
movsb
cmp
mov
pop
sub
hlt
fs
cld
jne
shl
in
les
pop
add
enter
gs
aaa
shll
arpl
lds
pop
lret
sbb
pop
aam
mov
jb
xchg
ret
pusha
test
jae
pop
out
push
scas
cwtl
jne
insl
and
push
pop
sbbl
dec
sub
repnz
jne
inc
xor
sbb
notb
and
pop
js
mov
push
rclb
hlt
adc
and
mov
or
push
cmc
das
dec
aaa
sti
jecxz
aaa
cmpb
fsubs
in
mov
inc
test
and
gs
xchg
adc
push
mov
mov
push
fldcw
jno
shll
les
mov
and
andps
mov
xacquire
push
sar
xchg
clc
lock
or
ficoml
mov
dec
nop
mov
push
xlat
mov
ljmp
push
mov
lock
inc
aaa
mov
lock
cmp
fcmovu
aad
push
push
and
shrb
dec
cwtl
sbb
inc
movsb
mov
add
cmpsb
mov
gs
jle
clc
cld
xchg
pop
pop
enter
cmpsl
lock
or
stc
dec
ds
push
xor
movsl
stos
mov
out
cs
cltd
insl
cmp
hlt
jp
jbe
mov
push
or
jns
and
pop
mov
in
movsl
iret
dec
push
rcrl
mov
sarb
mov
inc
mov
sahf
xor
mov
xchg
adc
and
shll
int
icebp
adc
insb
in
cld
sahf
sbb
cmpl
push
mov
xchg
adc
jl
cmpsb
inc
and
dec
sub
mov
cwtl
or
test
imul
into
sarl
xor
inc
inc
push
cmp
fdivr
jne
pop
xchg
mov
popa
lock
inc
xchg
cld
movsb
test
cltd
mov
sbb
mov
xchg
icebp
sub
sbb
in
xor
xor
add
mov
dec
mov
enter
xchg
aaa
push
rcl
cmp
leave
js
stos
outsb
fs
inc
jo
sarl
inc
pusha
dec
fisubs
xchg
and
cmp
sarb
xchg
ret
clts
mov
xchg
inc
mov
mov
stos
push
dec
jb
jne
fwait
cmp
enter
loope
inc
adc
movsb
flds
lods
sub
enter
xor
shr
mov
daa
xor
mov
mov
mov
testl
or
adc
int
inc
or
mov
add
mov
or
scas
mov
insl
xchg
inc
test
adc
jp
push
adc
cmp
push
push
daa
jae
les
hlt
dec
imul
and
fs
pop
push
sbb
xchg
aad
js
sub
daa
ds
inc
pusha
scas
aam
jg
icebp
xor
ja
jl
stos
sbb
ficoms
jnp
std
mov
shlb
movsb
mov
lods
scas
adcb
mov
les
shll
mov
push
xchg
arpl
fistpll
pop
inc
scas
test
enter
jle
pop
jns
loop
jge
dec
ljmp
daa
fimull
add
pop
in
and
outsb
dec
cmpsb
rorb
cs
dec
fistps
push
insb
out
ljmp
sub
stos
pop
push
roll
aam
sbb
dec
xor
cmpsl
outsl
jmp
into
cmp
inc
sbbl
mov
jno
xor
cmpb
sbb
jecxz
lahf
pop
add
sahf
mov
iret
or
dec
sbbb
stc
inc
jo
xchg
dec
jg
xor
push
jo
cltd
add
jbe
xchg
shrb
andl
pushf
and
push
xor
bound
push
loop
sti
cli
lods
sub
movsl
mov
lock
fimull
in
test
fisttps
mov
dec
pusha
dec
mov
pop
push
popf
mov
dec
mov
lea
or
xlat
push
sub
stos
pop
pop
xchg
int3
nop
push
imul
and
std
or
sbb
mov
cs
adc
mov
fwait
add
xchg
lret
out
insl
add
lock
dec
incl
adc
outsb
jo
out
sbb
jmp
lock
ljmp
call
int3
das
cmp
mov
jl
cmp
jl
inc
jmp
jo
pushf
int3
xor
fldl
mov
pop
dec
or
xchg
pop
shrl
lret
push
xor
out
in
repnz
mov
jae
inc
arpl
dec
in
cs
jno
imul
mov
movsl
cmp
xchg
pop
data16
add
movsl
inc
loope
jmp
pop
cwtl
pop
fiadds
dec
mov
xlat
ret
adc
inc
cmpsb
mov
out
or
lds
aam
insl
mov
push
in
pop
mov
pop
mov
or
sbb
sti
fistpll
not
pop
mov
xor
push
cmp
jae
jo
dec
mov
fldl
cs
frstor
fisubrs
test
jmp
pop
out
pop
inc
jne
add
lret
addr16
das
scas
call
clc
ficoms
enter
mov
push
inc
std
xlat
ret
pop
or
mov
mov
xchg
dec
cmc
dec
fs
ror
cmpsb
movsl
rcrl
scas
xchg
xor
dec
test
imul
ficoms
jae
xor
jns
push
jl
daa
insl
mov
jmp
adc
arpl
enter
sbb
sub
outsl
stos
pop
jae
inc
fisubl
orl
push
jne
daa
cmp
pop
adc
mov
jmp
jl
jne
jb
jo
and
mov
jo
push
dec
fcoms
or
or
inc
imul
mov
leave
in
cmp
pop
scas
mov
fsts
adc
test
fwait
push
nop
and
test
out
xchg
jmp
in
adc
and
jns
mov
hlt
add
test
sti
fadds
outsb
and
add
leave
lret
xchg
push
pop
call
inc
outsl
xchg
mov
leave
outsb
in
scas
cli
dec
testb
adc
std
es
add
test
or
movsb
mov
lods
jb
pushf
add
fcmovbe
fsts
inc
and
shll
fst
xchg
jg
daa
out
or
das
int
sub
loopne
hlt
scas
aas
pop
jbe
fstpl
xchg
scas
mov
fcmovnbe
out
mov
push
xchg
ret
inc
sar
insb
pop
add
out
fcompl
imul
in
out
inc
xchg
push
test
ss
pop
fisubl
sub
xlat
pushf
jecxz
or
les
outsb
or
inc
mov
sbb
fldln2
adc
test
dec
lahf
and
js
arpl
xorb
int
mov
push
sub
or
gs
mov
sarl
imull
decl
push
hlt
rol
fiadds
jg
mov
cmpsl
fs
mov
bound
cmp
shl
xchg
or
pop
xchg
cmc
je
lret
add
or
jecxz
pop
xchg
dec
ss
mov
lcall
adc
imul
pop
mov
leave
and
fisubs
mov
or
pop
push
sub
jg
idivl
lods
fnstsw
call
xor
pop
cmpsl
stos
xchg
adc
fstpl
std
rcrl
adc
inc
roll
push
or
iret
or
into
gs
mov
insl
inc
and
pop
xlat
xchg
addl
int3
inc
push
sbb
cmpl
loope
imul
mov
adc
add
push
add
push
pop
cli
jmp
sbb
std
jno
pop
sbb
fbstp
imul
scas
pop
push
inc
data16
xchg
cwtl
add
dec
sub
inc
dec
leave
inc
out
sbb
data16
or
stos
mov
loope
mov
lret
pop
dec
jp
jae
jbe
xchg
js
leave
popa
ret
jge
xchg
xor
rorl
mov
or
pusha
stc
mov
add
sub
mov
js
or
gs
cld
dec
push
xchg
jle
jge
lret
ja
pop
and
loope
xchg
and
lock
pop
inc
cwtl
inc
inc
mov
bound
mov
pop
jl
pop
pop
inc
jge
out
xchg
ljmp
stc
call
fisubl
gs
jecxz
mov
in
ficomps
ljmp
test
push
movsl
cmpsl
popf
push
aaa
pop
xor
cwtl
es
xor
mov
xchg
jmp
pop
mov
aas
mov
and
inc
and
ljmp
inc
mov
in
fimull
sub
push
xorl
ja
pushf
shlb
fwait
adc
pop
sbb
or
mov
mov
mov
cwtl
jge
les
lock
leave
jp
cmp
mov
out
cmp
subl
jmp
xchg
es
mov
in
pop
xor
dec
icebp
test
xchg
dec
cmpsl
adc
xor
insb
push
cmp
sbb
or
sbb
inc
repz
aaa
jmp
stc
out
xchg
lret
sbb
ds
popa
mov
outsl
xorb
jge
mov
inc
inc
repnz
lgs
fldl
pop
xchg
into
arpl
arpl
add
jnp
stos
or
sbb
mov
mull
stos
sub
sti
jle
rolb
inc
cmp
mov
pop
add
std
mov
test
or
cmp
data16
lahf
inc
cmp
or
lock
pushf
mov
roll
xchg
mov
inc
mov
aam
dec
pop
out
movsb
xor
sub
imul
mov
jnp
out
ret
insb
mov
mov
ret
xchg
push
test
cli
push
loop
cmpsb
fnsave
stc
adcb
loopne
sbb
mov
dec
inc
hlt
cmc
in
sbb
jne
mov
roll
push
cmpsl
inc
xor
dec
out
ja
movsl
mov
repz
movsb
jle
mov
inc
daa
lods
and
xchg
adc
bound
sub
call
jg
mov
cltd
inc
test
pop
adc
or
cmpsl
adc
dec
lret
test
mov
scas
mov
sub
in
push
lock
fld
cli
push
pop
test
cltd
adc
or
inc
lock
jno
test
cld
bound
data16
popa
les
cltd
loope
add
pop
sti
ja
movsl
pop
sbb
scas
xchg
sub
jno
fcomip
mov
inc
xchg
jae
enter
icebp
mov
cmpb
insl
push
icebp
stos
or
push
push
push
shll
push
movsl
cmp
movsb
cli
or
clc
push
inc
xchg
jno
repnz
loop
call
jne
dec
push
sahf
fistpll
scas
psrlq
cmp
int
pop
sbb
int
fistpll
insl
push
pop
fldcw
ljmp
xor
jmp
loop
mov
jb
cmp
mov
out
mov
ret
inc
outsl
in
mov
add
xchg
insb
ss
add
jo
arpl
sti
add
mov
push
test
xor
pop
imul
fwait
orb
cmp
add
mov
add
insl
mov
insl
add
sbb
lcall
mov
out
xchg
test
pop
test
ret
ss
sbb
sub
rcll
xchg
dec
xchg
cmp
cmc
and
lret
add
movsb
sub
lock
cmp
adc
or
pop
insb
bound
repz
mov
nop
pop
mov
iret
mov
mov
pusha
out
icebp
stos
inc
lahf
out
push
loopne
and
out
out
pop
jmp
xor
mov
aas
jecxz
cmp
das
mov
and
lds
scas
das
out
xchg
add
call
xor
inc
ret
sarl
sbb
in
shlb
insb
int3
mov
xchg
xor
in
inc
clc
ret
mov
push
pop
sbb
pop
jl
cmc
or
pop
je
outsl
pop
imul
lahf
mov
shrb
and
outsb
jns
jae
pop
sarb
enter
push
inc
push
mov
push
add
mov
jo
cmpsb
rcrb
push
ljmp
inc
fsubrs
mov
es
lret
pusha
shrb
jg
mov
jae
je
loope
lods
cmp
scas
int3
mov
in
or
cld
lcall
xor
loopne
movsb
out
ss
dec
out
hlt
adc
dec
mov
cmp
mov
sub
push
cmp
cltd
push
mov
out
add
push
jmp
test
icebp
cmp
dec
sti
pop
test
insl
or
lea
aad
repnz
inc
xchg
dec
xor
out
cltd
mov
and
adc
ret
pop
sub
fnstenv
mov
push
data16
inc
or
dec
mov
add
push
fwait
add
pop
add
addr16
jb
je
inc
jge
data16
inc
inc
insb
and
dec
xor
add
cltd
mov
or
xchg
mov
mov
insb
iret
daa
adc
mov
test
je
mov
inc
xchg
orl
xchg
ret
push
fcoms
or
mov
mov
pop
sub
push
push
imul
test
sbb
paddusb
jno
dec
icebp
add
cmp
mov
xor
mov
add
les
xlat
jmp
insl
mov
adc
popf
push
or
dec
test
jnp
insb
mov
adc
mov
inc
movsl
clc
add
xor
fdivrp
cmp
or
imul
jp
cmp
scas
inc
scas
push
mov
sbb
pop
pop
outsb
in
fisubrl
and
sbb
mov
ret
inc
pop
xchg
loop
mov
push
add
std
nop
in
arpl
idivb
mov
les
loope
loope
dec
faddl
add
outsl
nop
lods
fdivl
int
int3
gs
mov
jae
pop
sub
and
in
lds
xchg
pop
dec
xchg
cwtl
mov
dec
mov
inc
xchg
movl
ret
and
loop
aaa
and
lods
sarb
sub
cmp
mov
ret
xlat
pop
lea
loopne
sub
lods
mov
in
push
daa
ror
jo
push
lock
and
leave
jg
fwait
jge
inc
or
sub
pop
imul
fstps
imul
jno
and
ror
dec
jnp
jae
leave
jb
jmp
aam
inc
lret
mov
loope
add
mov
aad
dec
push
mov
mov
int
mov
pop
fwait
mov
add
shll
lea
inc
push
ret
pop
lods
movsb
out
xor
inc
nop
add
hlt
inc
outsl
mov
lret
fs
scas
nop
aas
push
cwtl
mov
dec
jb
in
or
pusha
mov
aam
gs
in
leave
je
cli
cltd
test
mov
stos
dec
or
shl
xchg
cmp
jg
addb
loope
das
gs
sub
push
movsb
inc
out
fwait
ss
jae
inc
mov
fxch
test
mov
ss
mov
mov
bnd
mov
inc
decb
sub
les
and
jecxz
loopne
and
mov
sub
movsb
adc
or
pop
pop
imull
push
jno
xchg
mov
bnd
insb
adc
mov
test
ja
in
jmp
rorl
insb
movsl
mov
xlat
xor
adc
push
push
aam
inc
sub
cld
enter
notb
js
jne
push
pop
test
std
jl
jne
in
sbb
lret
scas
aad
xchg
je
sub
push
mov
mov
sbb
incb
and
cwtl
aas
pop
pop
and
pusha
into
stc
roll
pop
jae
imul
sahf
adc
dec
ja
sbb
rcr
cwtl
dec
orb
fidivrl
mov
fisubrs
jp
jl
dec
xchg
xorl
mov
jmp
les
fst
xlat
addr16
in
mov
xlat
daa
hlt
in
dec
push
outsl
push
enter
sbb
and
leave
adc
movsl
mov
xchg
sub
daa
sarl
repnz
cli
and
jo
push
or
test
inc
cmpsl
stc
sub
mov
cwtl
pop
in
pop
mov
push
jns
xor
pop
mov
mov
xor
jo
mov
adc
shl
mov
fldt
inc
idiv
dec
enter
sub
jnp
js
mov
xchg
jb
in
in
cmpsl
iret
les
and
pop
mov
mov
test
pop
lods
cmc
out
mov
mov
push
shl
ljmp
in
mov
das
test
sbb
add
jmp
xchg
add
out
jnp
subl
or
sub
xchg
cld
andb
movsb
mov
xchg
nop
out
fisubrl
or
mov
push
jge
jmp
sub
pop
cmpsb
jne
xchg
cmp
popf
pushf
push
aas
push
cmp
xor
push
inc
or
lds
or
add
aas
test
lea
out
mov
or
dec
hlt
add
add
mov
jmp
jno
xchg
stc
sbb
or
negl
cmp
and
int3
aad
cld
popf
cmp
imul
sahf
out
shlb
xor
daa
jmp
imul
outsb
ret
fwait
pop
adcb
aad
push
ret
test
int3
jb
jbe
js
mov
clc
je
test
clc
sub
jl
fistpl
mov
ret
and
mov
jbe
mov
xor
add
out
and
cmp
fnstenv
lret
xchg
iret
mov
fdivs
rcrl
push
out
out
nop
idivl
dec
rcll
xchg
cmp
ret
pop
jmp
cmp
push
mov
pop
push
xchg
add
sub
loop
push
outsl
xor
arpl
test
dec
dec
lahf
icebp
imul
sti
and
insl
sub
sub
dec
inc
lahf
mov
shlb
xor
imul
in
lock
scas
xchg
push
imul
cltd
les
xor
jecxz
popa
testb
push
or
adc
dec
sub
mov
imul
imulb
or
mov
adc
test
xlat
cwtl
push
xchg
lods
jecxz
fdiv
mov
mov
out
cwtl
data16
cmp
adc
mov
adc
pop
add
xchg
repnz
outsl
lahf
add
ljmp
popl
mov
sub
out
mov
sbb
lcall
push
out
sbb
cmp
inc
mov
dec
dec
sbb
or
in
dec
stc
inc
popf
and
ds
lret
pop
mov
fsts
std
stos
sbb
push
and
mov
push
cwtl
mov
xor
std
in
pop
ja
and
jl
adc
sbb
out
adc
pop
sbb
mov
pop
dec
cmpsb
shl
xchg
add
cmpsl
and
ret
inc
mov
sub
scas
pop
jecxz
fs
daa
or
xchg
and
cmp
loope
sar
pop
sbb
loope
pop
push
pushf
cmpsl
insb
test
sbb
dec
adc
mov
sub
shll
mov
xchg
sbb
loopne
push
sar
sub
inc
and
aas
pop
add
adc
jno
lock
mov
sbb
xor
ja
pop
fdivs
cmp
test
push
dec
fcompl
es
mov
lock
lahf
push
xchg
ds
pop
shrl
in
les
mov
in
push
shrl
jecxz
adcl
add
loope
lahf
adcl
imul
lock
push
adcl
mov
enter
rorb
sarl
out
or
cwtl
inc
cmp
test
call
or
mov
rclb
int
xchg
mov
xor
sti
rcr
jbe
dec
repz
jae
jmp
dec
push
int3
out
pusha
imul
xchg
push
dec
insb
mov
jg
pop
xchg
cmc
add
mov
jb
mov
rcll
daa
loop
movsl
mov
jb
or
into
push
loope
mov
imul
and
pop
dec
shll
add
pop
mov
pushf
lock
mov
sbb
lret
mov
sarl
mov
in
fcomi
cmp
mov
fcoms
pushf
repnz
jp
or
pop
xchg
mov
and
mov
es
mov
shll
and
xor
pop
jns
adc
push
popf
dec
jge
cmc
xor
sub
push
and
dec
jno
pop
push
call
repnz
mov
rcrb
fucomi
push
nop
out
sbb
xor
pop
ds
pushf
jp
jne
repnz
aad
js
in
fidivl
or
repz
fbld
mov
test
aam
or
mov
mov
std
jnp
and
stc
imul
cli
jp
data16
sub
inc
xchg
pop
xchg
sahf
ljmp
imul
mov
scas
movsl
sub
clc
das
sbb
dec
jp
les
out
xchg
cmp
jne
dec
add
and
in
ds
and
rcll
adc
or
fldcw
fbstp
movsb
dec
cli
lods
out
pop
push
insb
jb
push
push
fldl
fsincos
and
scas
sbb
push
roll
lods
jnp
sbb
xchg
add
jns
cltd
or
lock
or
scas
addb
jge
dec
ja
adc
xchg
cld
bnd
imul
sbb
jle
and
pop
push
mov
arpl
outsb
addr16
mov
rcrl
push
dec
ret
cmc
das
movsb
in
jp
inc
aas
mov
jge
hlt
ss
or
in
or
fisttpl
scas
inc
dec
sbb
or
gs
fs
test
xor
out
call
iret
sbb
enter
push
aad
add
sub
adc
push
std
pop
fwait
mov
dec
mov
cmp
les
mov
icebp
ljmp
ss
outsb
sbb
jmp
scas
and
lods
gs
je
call
jmp
outsb
movsl
fists
xlat
rclb
or
xchg
in
inc
into
jmp
cmpsb
sbb
inc
mov
mov
in
movb
cmp
sub
lcall
mov
fisttpl
fcmovne
ret
insl
ljmp
dec
inc
out
xchg
mov
push
addr16
inc
outsb
stos
mov
clc
aam
sahf
movsb
flds
pop
cmp
mov
test
or
dec
sub
in
outsl
or
xchg
ldmxcsr
leave
fnstsw
and
roll
lahf
or
jae
xor
push
rolb
nop
movsb
sahf
andl
popf
adc
outsl
pop
movsl
dec
sub
test
mov
adc
test
shll
sbbl
daa
lods
push
ja
xor
push
jb
xorb
or
ja
jmp
adc
sbb
jmp
push
jg
imulb
dec
loope
and
fildl
lahf
add
cmp
das
xchg
push
jle
cwtl
cmp
sbbb
and
fisttps
rclb
loope
push
jne
mov
jle
jne
vaddsubpd
bound
push
lahf
dec
jnp
imul
adc
fiaddl
sbb
sbb
loope
into
mov
fs
add
pop
xor
jge
mov
push
loop
fs
dec
movsl
or
ret
stos
jg
repnz
jle
jecxz
sbb
sbb
xchg
xchg
cmpsb
insl
cmc
inc
dec
xchg
je
xchg
xchg
xchg
dec
pusha
and
cmpsb
icebp
xor
lds
xchg
push
scas
decb
adc
cld
dec
icebp
jb
loop
enter
inc
xchg
adcb
lret
mov
dec
test
out
arpl
incb
mov
test
mov
dec
mov
imul
push
into
add
or
add
lods
stc
int3
stos
push
xchg
in
cmpsl
pop
iret
aam
clc
pushf
add
jae
sub
ret
hlt
mov
inc
fisubrs
imul
dec
mov
flds
and
inc
repnz
mov
loop
adc
jae
subl
cmpsb
sub
mov
adc
lret
xchg
ffree
mov
mull
jl
insb
in
xorb
and
pop
das
and
js
bound
push
loopne
mov
ljmp
adc
and
mov
shlb
xor
adc
pop
xchg
and
lret
cltd
inc
push
out
test
out
into
cli
push
jl,pn
mov
movsl
xchg
xchg
jne
inc
ss
cmp
rcll
dec
adc
inc
push
je
das
imul
scas
inc
popf
mov
movsl
dec
das
and
mov
push
lret
xchg
lret
dec
out
insl
or
jb
mov
push
out
es
push
mov
scas
test
loopne
xor
jp
xor
mov
int
push
psubq
xor
mov
adc
sub
data16
pop
int3
xchg
jb
adc
adc
es
imul
dec
push
mov
xchg
push
ret
aad
mov
inc
sbb
push
xchg
mov
adc
mov
jmp
jmp
cmp
out
jmp
lret
ret
call
inc
data16
loope
pop
xor
xor
sub
fisttpl
lea
pop
pop
adc
loop
les
int
and
mov
dec
popf
rcl
mov
or
es
dec
xor
mov
rcr
push
fildll
nop
sub
mov
fnclex
mulb
push
popa
mov
in
push
enter
or
inc
lea
sub
pop
mov
xchg
xor
cmp
divb
pushf
add
ret
pushf
arpl
jbe
das
jb
ja
dec
xchg
xchg
push
cmp
nop
jno
outsb
scas
xlat
pop
sub
inc
cmpsb
adc
aaa
sahf
ja
in
xor
sub
mov
dec
jbe
cld
ss
jne
enter
repz
test
dec
les
shrd
stos
jle
xchg
xchg
sbb
fdivrs
sbb
push
cli
dec
inc
add
mov
xchg
pusha
adc
sbb
inc
xchg
cli
or
cmpsb
lret
xchg
jns
rcl
andb
adc
fxch
mov
push
push
push
pop
mov
je
mov
sbb
ds
dec
mov
cmpsl
bound
negb
decb
daa
jge
mov
xchg
jns
or
pop
out
pusha
sbb
scas
ds
and
inc
fiaddl
sbb
xor
out
dec
mov
outsl
adc
fnsave
jp
push
mov
push
callw
inc
and
sub
mov
imul
inc
fnsave
dec
js
clc
push
call
into
push
in
cltd
clc
mov
xor
sbb
mov
mov
push
cs
xchg
mov
scas
adc
mov
jge
test
mov
rcrb
mov
dec
mov
push
sbb
stos
sub
add
mov
je
push
jo
lods
push
mov
mov
pop
inc
add
or
movsl
icebp
pushw
inc
sbb
fcoms
sbb
in
les
ret
push
jp
test
add
lock
push
sub
push
out
or
push
cld
daa
adc
test
push
imul
mov
or
nop
or
imul
cmpl
jne
push
out
insb
leave
cmp
jle
lods
sbb
sbb
push
dec
hlt
pop
icebp
loopne
cmp
out
add
int
lcall
xor
mov
sbb
sahf
xchg
iret
jne
cmp
pop
repz
loope
les
sbb
or
mov
rcrl
scas
arpl
lods
adc
mov
inc
data16
or
and
ja
int
and
cmp
sub
call
sbb
cmp
push
cmp
repnz
or
sbb
rclb
sti
addb
in
jae
loop
xor
pop
sub
xor
repnz
jns
cmp
insb
jne
ficomps
push
cwtl
in
mov
mov
out
rolb
mov
mov
imul
pop
das
sub
and
cmpsb
or
popa
and
jo
push
pop
movsl
inc
sub
nop
dec
xchg
xchg
inc
mov
mov
mov
mov
mov
xchg
adc
push
cmp
test
sbb
adc
in
mov
pop
mov
inc
data16
mov
aam
add
gs
jecxz
jns
inc
push
scas
sub
xchg
sahf
mov
call
push
xchg
or
ss
mov
mov
pop
inc
mov
data16
inc
cmp
loop
push
fildl
mov
jnp
inc
rcll
dec
adc
fdivrs
inc
mov
mov
shlb
cli
cld
jo
aam
call
call
into
rcr
cli
inc
pop
shrl
inc
fs
lret
add
aad
sub
push
mov
xchg
inc
insl
rol
out
loop
inc
mov
mov
nopl
add
mov
fs
adc
adc
pop
lds
out
jmp
fwait
push
sbb
lea
clc
movsl
lea
push
cmp
loopne
or
int
adc
jle
mov
dec
int3
ficoml
adc
out
cmp
das
xchg
sahf
in
shrl
cmp
add
mov
mov
sub
cmp
dec
jbe
mov
sub
mov
clc
mov
sahf
jl
iret
into
std
addb
adc
inc
dec
int
aam
and
test
movsl
das
mov
push
arpl
mov
mov
mov
shll
add
jl
add
cmp
dec
push
sbb
sub
sbb
out
mov
push
adc
dec
loopne
bound
fisubs
cli
out
pusha
sub
jnp
xor
pop
out
in
and
mov
pop
out
aas
pop
xchg
sbb
pop
sub
cmp
into
fisttps
rcrl
pop
jge
fsts
mov
jecxz
js
jecxz
jnp
lcall
cs
aad
in
jnp
out
sahf
push
jge
pop
fwait
out
push
in
cmc
mov
adc
loope
push
or
inc
fmulp
call
mov
and
inc
pop
adc
mov
pusha
flds
pop
mov
push
cmpsb
insb
pop
addl
rcrl
dec
fwait
and
cmp
cmp
push
jmp
mov
lock
or
sub
cltd
aam
rcr
push
inc
loop
and
xlat
adc
loop
movsl
sub
and
jne
jl
sbb
xor
into
or
sti
lcall
sahf
xchg
adc
loope
sub
mov
int
sub
jb
or
or
imul
out
mov
push
xchg
fdivrl
scas
in
and
inc
push
fs
mov
hlt
xlat
aam
xchg
movsl
push
out
sub
in
jno
push
and
mov
jae
shll
push
pop
cmpsb
pop
popa
cmpsb
cmp
sbbb
in
outsb
decb
pop
sbb
mov
adc
mov
mov
loop
sbb
sub
dec
xchg
inc
push
addl
ret
fidivl
xchg
dec
sbb
hlt
scas
mov
inc
dec
pop
jne
mov
jmp
or
push
clc
rcrb
lds
lods
lds
ds
xchg
mov
sub
out
scas
fdivrl
xor
popf
shll
lods
rcrb
int3
jecxz
popf
arpl
ret
mov
out
xor
xchg
fsubrp
jae
arpl
aaa
add
mov
xchg
dec
dec
jle
inc
sub
xor
mov
inc
gs
sub
xchg
xchg
lea
lret
div
mov
insb
dec
xchg
clc
or
clc
mov
fimuls
adc
outsl
mov
gs
stos
inc
push
inc
ret
fcompl
push
fcompl
add
es
data16
xsaves
scas
into
sbb
inc
lret
cmp
pushf
icebp
or
dec
repz
and
out
bound
loopne
add
jns
stos
and
pop
sub
popa
push
shll
repz
sub
xchg
xor
push
cmp
orb
adc
mov
push
or
out
or
mov
adc
push
stc
cli
gs
jmp
int
sbb
jnp
sub
cmpsl
mov
shrl
or
mov
push
call
and
and
cmp
pushf
cmp
xchg
test
add
lods
and
sarb
paddsw
sbb
insl
pusha
sbb
sti
jne
pop
ret
sbb
add
mov
stos
push
add
fidivrs
scas
mov
jle
pop
xor
jecxz
push
dec
pop
and
sub
add
pop
push
mov
bound
pop
inc
dec
aam
mov
test
frstor
gs
mov
mov
scas
jg
imul
fsts
je
loopne
mov
or
test
sahf
sbb
push
movsl
push
leave
outsb
or
cld
cli
sti
xorb
mov
jp
push
pop
fstps
scas
insl
xchg
repz
add
sbb
rcr
stos
cmc
dec
jne
daa
xchg
add
push
leave
xor
jmp
sahf
xchg
std
xor
loopne
jbe
mov
sub
sahf
imul
mov
ds
lret
add
loop
loope
push
in
mov
pushf
leave
test
jne
pop
pop
and
lock
out
adc
mov
jb
dec
iret
cmpsl
lods
jecxz
subb
dec
popa
in
pop
repnz
and
pop
enter
jno
adcb
inc
inc
fs
pop
push
xchg
adc
cmp
fcmovu
iret
xchg
pop
idiv
xchg
pop
cmp
call
mov
lea
loop
scas
cmp
scas
icebp
ret
jg
pop
and
scas
test
add
or
hlt
mov
sub
mov
or
lret
or
push
lret
add
das
push
cwtl
push
cmp
enter
in
outsb
rcrl
sbb
pop
jae
push
cmp
mov
mov
lahf
in
xor
lahf
sbb
aam
vmwrite
sti
nop
mov
sbb
or
mov
pushf
push
jp
inc
sbb
push
mov
cmp
or
fwait
pop
lcall
nop
insl
jp
or
neg
mov
cmpsl
or
scas
mov
push
mov
in
aam
shrb
pop
mov
call
adc
and
dec
xor
pmovmskb
adc
inc
pop
popl
and
push
js
loope
push
push
fldenv
and
adc
pusha
push
push
das
arpl
rcr
xor
push
das
aam
test
mov
push
mov
sbb
and
adc
xor
stos
lahf
imul
pop
pop
fucomip
or
mov
aas
mov
scas
rclb
test
xor
sbbl
repnz
sub
in
out
test
fsubs
popf
cmp
sbb
jp
jg
adc
xorl
sbb
stos
dec
push
aaa
pop
pusha
mov
jb
rclb
cmpsl
in
cs
mov
inc
rcrl
jbe
int3
mov
mov
test
outsb
mov
pop
lods
mov
pop
push
pop
sti
add
pop
sbb
xchg
nop
stc
test
in
xor
shll
jns
adc
pop
xchg
pop
insb
sbb
inc
call
daa
push
push
push
adc
lods
jp
mov
jno
dec
lock
xchg
push
or
out
std
lret
add
inc
data16
fdivp
sbb
xlat
xor
addr16
dec
sbb
jle
lret
cmp
cmpsl
sbb
jecxz
cmpl
adc
fucomi
out
jo
and
outsb
call
mov
sbb
loop
mov
jbe
repz
jae
scas
pop
ret
ficompl
cmp
xchg
push
sbb
into
pop
out
cmpsb
add
mov
rcrl
dec
and
mov
mov
daa
push
or
jmp
mov
data16
repnz
sahf
arpl
dec
jne
inc
xchg
and
pop
lcall
sbb
xor
xchg
and
push
rcll
out
out
and
and
decl
int
jl
in
xchg
dec
in
mov
or
and
jg
sub
pop
mov
cs
pop
lret
nop
stos
dec
cmpl
pop
mov
popf
leave
cmp
cmp
test
mov
or
sbb
aam
inc
pop
mov
cmp
mov
mov
pop
stos
push
push
sub
nop
test
outsb
mov
mov
je
sub
mov
test
aad
stos
addr16
outsl
jns
and
xchg
mov
ja
dec
mov
mov
push
cli
ljmp
arpl
dec
pop
test
cs
jl
insl
call
lret
cmp
mov
dec
das
xchg
js
pop
cmc
pop
movsl
out
sub
jns
stos
mov
or
aad
mov
cmp
dec
out
inc
arpl
fmull
mov
jbe
inc
mov
dec
lret
xchg
inc
test
fs
sub
cmpsb
dec
mov
and
jns
cmp
mov
adc
mov
pop
es
push
aad
and
and
lods
xlat
add
and
xchg
clc
stos
push
pop
aas
xchg
push
repnz
ss
push
outsb
aad
jo
sbb
pushf
es
push
popf
jae
and
or
lret
pop
int3
mov
loop
inc
or
mov
imul
jns
fcoms
inc
mov
or
cmp
imul
repz
inc
call
sub
mov
xor
test
pop
inc
cmp
mov
fstps
pop
sub
pop
mov
or
lcall
sbb
sbb
loope
cli
je
jl
dec
sub
shlb
enter
jb
icebp
inc
cmp
out
and
fisubs
rorb
popl
sub
mov
adc
mov
mov
adc
mov
aaa
push
mov
icebp
negb
imul
sbb
addr16
ret
cmpsl
cmp
imul
data16
into
es
fldenv
mov
dec
mov
inc
pusha
lock
mov
sub
pusha
int
xchg
mov
jg
stc
inc
dec
mov
loop
cmpl
pop
xchg
imul
nop
aas
pusha
mov
stos
ds
imul
fcomp
ljmp
out
inc
mov
fistl
xchg
std
mov
adc
hlt
dec
int
push
mov
arpl
add
jne
lock
pusha
lods
mov
add
or
xor
jp
push
mov
sub
push
dec
adc
inc
inc
lret
push
push
lcall
mov
mov
les
mov
add
xor
repnz
neg
sbb
mov
into
xor
data16
popa
daa
out
dec
in
rol
call
loop
pop
pushf
adc
mov
cwtl
movsl
aam
push
push
jo
aaa
in
cmc
cs
stc
sbb
jmp
push
sahf
push
mov
fcoms
repnz
cs
cmp
enter
inc
lea
dec
xchg
xor
movsl
dec
ffreep
in
xor
stos
fs
enter
in
rol
repnz
inc
lods
dec
data16
fwait
add
mov
icebp
cli
out
cmp
imul
lcall
inc
mov
xchg
sub
mov
imul
mov
jo
add
inc
arpl
enter
jmp
add
pop
data16
pop
and
pop
xchg
sahf
popf
adc
mov
gs
addr16
iret
movsb
sbb
and
int3
or
stc
sub
pop
and
mov
testl
movsb
cli
movsl
sbb
ja
mov
iret
mov
shrl
add
pop
popl
push
jbe
int
ret
push
lock
jno
test
xchg
cmp
shl
cmp
jl
inc
mov
insb
in
mov
cwtl
lods
mov
cmp
sub
lahf
sarl
mov
adc
ss
cmp
cs
jbe
push
jnp
adc
pop
or
out
pop
xchg
daa
lods
leave
xchg
lods
rolb
div
add
mov
mov
sub
pop
jge
cwtl
rol
inc
pop
jb
mov
cmpsb
lea
rcll
xchg
mov
cs
pushf
adcl
int3
push
imul
mov
fwait
adc
movsb
push
pop
pop
lret
adc
adc
adc
jecxz
mov
test
in
dec
cs
adc
popl
out
roll
nop
rcl
mov
nop
push
shrb
test
arpl
xchg
pushf
lea
filds
push
aaa
xlat
test
gs
sbb
sahf
inc
rcll
mov
xchg
or
rdtsc
inc
sbb
xchg
jp
inc
in
dec
repz
out
mov
fimull
call
and
fs
shlb
adcb
and
cs
aaa
push
aaa
outsl
movsl
sbb
imul
and
inc
cmc
push
test
sbb
sub
aas
mov
jmp
fadds
dec
dec
mov
ja
jne
push
jge
jbe
lock
scas
lock
mov
adc
out
mov
mov
xor
es
inc
mov
and
cmp
cld
mov
les
sub
jmp
test
imull
push
or
ds
aas
add
imull
in
add
rolb
lods
or
cld
leave
mov
sbb
xor
add
jl
scas
cmc
iret
mov
push
rclb
sub
or
adc
add
std
loop
mov
mov
push
mov
arpl
cmpsb
mov
dec
inc
pop
jecxz
push
je
dec
jle
cmp
scas
pand
mov
jne
nop
xor
movsl
cmc
sahf
cmp
pop
xchg
add
sbb
test
divl
push
push
mov
cmp
adc
scas
jnp
xlat
call
popa
xor
pop
add
shr
dec
pop
or
fisttps
or
xor
dec
jmp
jnp
in
sbb
push
sub
jp
pop
mov
add
and
cmpsb
add
gs
popa
lods
sub
jmp
lret
scas
cs
adc
leave
rorl
push
rclb
aaa
dec
addr16
cmpsb
or
add
insb
popf
pop
xchg
inc
push
std
sub
lds
int3
rol
jns
ficompl
cmp
sahf
or
mov
pop
and
orl
mov
imul
cmc
push
call
dec
jno
adc
adc
lret
mov
sti
cmpsb
jge
xor
movsl
mov
test
cmp
mov
mov
or
mov
stos
inc
pop
jns
movsl
pop
cmpsb
movsl
inc
add
mov
mov
ss
pop
cwtl
xchg
in
cmp
mov
movsb
lcall
loope
dec
mov
cmc
mov
push
adc
test
arpl
arpl
lahf
es
pop
mov
jno
inc
imul
add
add
inc
lods
inc
out
jmp
pusha
fistps
adc
cmc
lds
mov
sbb
js
or
fisubs
gs
pop
data16
fnsave
fwait
pop
and
adc
pop
xchg
ret
cmp
clc
jo
test
aaa
insb
sub
in
pop
mov
stos
ds
cmp
dec
and
pop
sbb
pop
push
cmp
loop
inc
push
push
xchg
and
xor
inc
in
ja
and
xchg
mov
add
mov
sbb
das
lcall
out
popf
and
xchg
testb
push
jmp
js
out
or
xorb
cwtl
xchg
stos
out
jg
sbb
jae
cld
cs
imul
rclb
mov
pop
xor
aaa
test
push
cmp
jb
fs
jnp
lds
mov
or
icebp
mov
jne
xchg
inc
movsl
xchg
or
pop
testl
fldenv
pop
js
into
push
cmp
shlb
sbb
mov
pop
daa
or
pop
adc
xor
pop
lret
or
adc
adc
int3
faddl
inc
cld
cli
repnz
sbb
inc
cltd
lcall
out
xchg
add
push
bound
enter
mov
lea
xchg
fisttpl
test
dec
push
imul
inc
ret
xchg
dec
add
lahf
xchg
cmp
sub
andb
push
pop
or
mov
pop
push
mov
popf
lods
mov
sbb
cmpsb
or
and
xchg
fbld
fdivrp
jno
pop
xchg
and
daa
fiadds
or
repz
fs
xor
jle
in
cs
pop
das
xchg
out
mov
inc
or
jne
addr16
mov
jle
gs
nop
or
stos
std
shll
cmp
jmp
rcrb
aam
add
inc
mov
cltd
jo
jns
call
pop
leave
jle
jne
mov
adc
mov
lods
sub
cwtl
les
fwait
pop
xlat
dec
sub
push
scas
lahf
repnz
dec
dec
mov
imul
sub
push
je
mov
cmp
add
jo
loopne
dec
icebp
lods
push
cwtl
pop
test
hlt
imul
dec
push
mov
mov
xchg
pop
jno
cmc
lds
popa
push
sarb
hlt
not
mov
shrb
ja
stos
mov
jmp
mov
dec
xor
and
test
mov
xchg
inc
int
clc
es
inc
ret
daa
sbb
mov
fisubl
arpl
mov
fdivrl
ja
out
pushf
je
pop
mov
paddusw
out
sbb
in
pop
sub
dec
xchg
in
jp
stos
fdivs
mov
adc
bound
xor
fcoms
dec
std
push
or
not
in
push
push
ljmp
aaa
in
sti
dec
out
das
add
dec
inc
jmp
jge
mov
adc
gs
mov
ds
fcompl
fcomps
repz
je
enter
cld
movsb
xor
je
add
test
or
pop
adc
sarb
push
push
xchg
sub
test
imul
adc
add
fldenv
inc
mov
fdiv
ss
shrl
jg
xor
or
or
sbb
jne
es
jne
out
jmp
adc
idivl
in
push
fwait
push
cmpsb
jmp
mov
negb
insb
sbb
adc
mov
stc
daa
mov
scas
gs
or
push
push
inc
jp
adc
mov
cmpsl
scas
cli
dec
cmp
xor
sbb
es
icebp
fisttpll
add
jmp
movsl
and
sbb
data16
inc
push
stos
addr16
add
cmp
loopne
adc
and
imul
in
and
push
adc
jne
mov
jns
ljmp
mov
fcompl
icebp
ja
sbb
xchg
lret
aam
mov
or
inc
pop
movsl
in
cwtl
xor
pop
in
or
and
xor
pop
scas
push
sbb
cmpl
aaa
rcrb
mov
lds
aas
fs
sbbb
ret
jmp
push
jg
jno
inc
xor
inc
enterw
xor
mov
jecxz
pushf
sbb
std
repnz
gs
xor
xor
jb
in
sbb
sahf
dec
jmp
push
mov
shll
mov
fmull
jb
in
ja
dec
sbb
clc
addr16
xor
int3
push
shll
adc
sub
mov
jp
test
xor
sub
cld
mov
mov
popf
iret
inc
mov
dec
dec
das
imul
xor
test
xchg
enter
cmpsl
add
out
dec
sub
mov
shl
negb
stos
mov
and
push
dec
shlb
add
xchg
hlt
stos
cmp
dec
aam
subb
xchg
clc
push
call
cmpsl
push
lds
lods
mov
mov
jb
jp
daa
mov
mov
mov
xchg
and
pop
xchg
outsb
pop
jns
pop
shrb
shll
arpl
xchg
push
aad
and
push
jns
dec
xor
push
mul
test
mov
cwtl
inc
add
xor
or
add
push
lret
fwait
es
or
aas
mov
mov
push
mov
add
mov
dec
cld
nop
adc
xchg
rcrb
andb
jnp
xchg
pop
pop
imul
incb
or
jecxz
stos
inc
enter
mov
mov
mov
jl
in
or
xlat
inc
add
nop
jl
imul
ds
or
xchg
pop
cmp
stc
pop
pop
cmp
imulb
push
je
cmpsb
mov
fbstp
cmp
repz
dec
cmp
mov
imul
call
mov
in
int3
imull
pop
or
dec
sbb
iret
loope
test
fidivl
mov
xor
sub
popl
js
push
xchg
fdivp
inc
loop
xchg
mov
push
scas
jl
in
sbb
call
clc
mov
insb
insb
les
pop
cwtl
sbbb
aaa
andl
fimull
fisubrs
scas
daa
push
jle
sbb
push
gs
sub
cltd
mov
and
lret
xor
lcall
mov
cmp
dec
fcmove
inc
xor
cli
jo
mov
dec
clc
test
pushf
jmp
push
out
pop
out
mov
test
fcomi
xor
stos
dec
nop
test
stc
push
movsb
pop
jmp
adc
andl
jge
or
popa
mov
add
sbb
mov
cmp
push
nop
sbb
mov
mov
push
cmpl
scas
adc
push
push
in
ret
rorl
and
jnp
push
stos
lret
inc
jne,pn
test
mov
mov
mov
pop
adc
inc
pusha
jmp
roll
cmp
xlat
inc
and
xchg
pop
loopne
xchg
add
lret
and
xchg
dec
xlat
in
push
push
xlat
or
lods
cli
mov
outsb
divb
pop
or
aad
and
or
xor
mov
sbb
imul
push
fadd
ret
mov
arpl
jns
mov
arpl
ljmp
add
push
sbb
jnp
sub
jns
add
and
scas
sub
sub
fcmove
lcall
fisubl
cld
xor
jbe
sub
jl
movsb
dec
int3
fidivrl
add
cli
cmp
test
push
jbe
fdivs
cmpsb
call
xchg
addr16
int3
fsubrs
dec
pop
inc
out
sub
into
xor
mov
ret
adc
xor
lock
rol
jns
mov
loop
setae
and
xor
adc
mov
jns
fst
orps
xchg
pop
mov
add
inc
add
rorl
mov
sti
cmp
mov
jne
das
mov
pop
test
movsl
lret
mov
mov
punpckhdq
jmp
mov
cld
mov
jle
in
lret
aas
pop
rcr
in
adcl
outsl
push
push
and
imul
imul
lods
mov
and
sahf
or
dec
mov
fcmove
mov
cmpsl
xor
scas
pop
push
sub
in
push
pop
inc
fcoms
das
mov
or
shll
loop
pop
outsb
rcrl
mov
xor
lea
cmc
mov
fsubrl
mov
pop
test
mov
jp
mov
or
xchg
mov
cwtl
imul
std
jno
pop
mov
inc
push
add
pop
mov
cwtl
or
out
lcall
loopne
test
xlat
pushf
inc
mov
cmpsl
or
sbb
xchg
std
shl
mov
add
xchg
jg
cli
out
sub
es
repz
les
cmp
arpl
fsubp
adc
cmp
dec
push
cmp
insl
aaa
xor
lea
ss
out
cmc
inc
inc
out
scas
push
sbb
decl
dec
in
outsb
dec
inc
jg
lods
notl
jl
mov
pop
inc
mov
ljmp
cmp
aas
fnsave
push
pop
adc
jle
jbe
loope
popl
das
cli
icebp
adc
xor
xorb
xor
mov
xor
stos
mov
mov
push
cmp
cmp
push
or
int3
lret
push
pop
cmp
es
outsl
cmp
aas
aaa
aad
enter
clc
xor
cwtl
jp
cld
ret
push
js
mov
add
pop
lcall
adc
sub
lea
sahf
aam
push
fucomp
test
daa
movsb
and
xor
inc
pop
sub
and
dec
inc
sub
sub
xor
ljmp
rorb
ret
decb
fidivrl
int
scas
cmpsb
cmpsb
loopne
lcall
in
mov
idivb
mov
mov
popa
enter
xor
icebp
pop
cs
inc
je
or
mov
stos
lahf
xor
sub
push
or
push
push
inc
pop
and
mov
mov
sbb
mov
andb
xchg
ret
cmpsb
push
mov
and
cld
pop
cmp
or
imul
jb
shrb
jp
mov
ret
push
push
repnz
stc
inc
inc
sub
add
adc
incl
mov
adc
rorb
pop
mov
add
test
jb
mov
call
pop
jno
push
jbe
inc
shlb
push
stos
sub
mov
popa
inc
roll
shlb
pop
and
movsb
out
mov
adcl
pop
cwtl
push
mov
lock
mov
data16
in
mov
pop
mov
fnsave
shlb
out
jb
fiadds
sub
pop
adcl
mov
popf
push
cwtl
cs
jmp
push
or
xor
pop
adc
aam
in
sarb
xchg
jne
cmp
dec
fcom
adc
push
and
xor
jae
pop
xchg
aaa
add
jecxz
or
leave
daa
ret
add
adc
xor
push
mov
xchg
add
and
and
inc
hlt
fcmovnu
fwait
add
sbb
mov
xchg
mov
out
push
test
pushf
data16
inc
xchg
fwait
cmpsb
jp
sub
fwait
ss
lahf
lea
push
jo
and
popa
jmp
shlb
push
stos
sbb
into
mov
mov
or
cmpsb
icebp
inc
jno
pop
adc
xchg
iret
xchg
pusha
sub
push
mov
dec
icebp
es
mov
pop
xchg
scas
and
xchg
mov
xchg
roll
pop
pushf
and
scas
push
stos
jg
mov
int
dec
pop
jnp
sbb
sub
mov
push
jo
rol
pop
aam
or
mov
and
push
dec
in
inc
xor
add
xor
dec
sub
mov
aaa
sub
pop
push
jge
fbld
jnp
mov
ret
gs
movsl
sub
cmpsb
jbe
aam
xchg
int
pop
dec
push
push
fcoms
cli
andl
cmpsl
cmpsl
jae
push
add
and
xor
push
and
ficomps
sahf
jmp
pop
popf
jl
push
cld
data16
add
adc
shrl
hlt
insl
xchg
cmp
lahf
add
push
aam
pop
ret
cmp
movsb
lahf
inc
out
stos
and
pop
sarl
push
fs
mov
cmpsl
in
pusha
sahf
jbe
pop
int3
fadds
popf
cmc
jb
adcl
inc
sbb
xor
adc
das
test
and
and
mov
loop
ss
mov
add
bound
call
sub
repnz
sub
push
xor
adc
popl
dec
leave
and
sub
int3
jne
cmpsb
mov
xor
loope
mov
sub
add
sub
movsl
out
jge
shll
cmpsl
enter
aam
and
bound
leave
inc
push
sbb
add
pop
shrl
fldenv
and
xor
imull
pop
jnp
popa
pop
dec
mov
jne
fdiv
mov
cmp
and
in
xchg
mov
jp
jns
inc
mov
jge
xchg
and
push
xchg
aam
mov
es
fimull
dec
push
or
mov
jge
rcrb
lods
imul
ljmp
insb
imul
sub
icebp
inc
sahf
push
push
pop
andb
jae
cmpb
adc
add
call
sti
outsl
or
cmp
popf
push
int3
in
mov
cli
dec
add
sub
pop
and
in
dec
xlat
jl
fsubr
and
jbe
dec
mov
rorb
mov
out
cwtl
jns
dec
dec
ret
jl
xchg
inc
sub
sti
test
stc
push
push
cmp
lcall
mov
jmp
in
pop
and
sub
xchg
sbb
sub
jns
sbb
inc
into
sub
inc
test
ret
aaa
mov
jo
loopne
ret
mov
sub
push
cmp
test
pop
sbb
add
push
push
jp
test
dec
orb
add
in
aas
inc
sbb
mov
jno
inc
pop
push
icebp
push
shlb
jmp
dec
xchg
daa
jbe
ret
in
insb
ret
in
sub
arpl
add
push
lock
dec
movb
popf
sbb
out
and
jecxz
xchg
dec
movsb
aas
jle
in
imul
repnz
insl
gs
mov
inc
outsl
shll
mov
xlat
loopne
adc
or
dec
mov
stc
inc
xlat
inc
cmp
lahf
jnp
into
push
sub
fs
cmpsl
cwtl
lods
ljmp
pop
arpl
data16
push
dec
imul
clc
ds
ret
and
mov
mov
std
jo
icebp
ret
jns
xor
aas
imul
sbbl
mov
mov
fidivrl
dec
or
and
push
mov
jnp
and
inc
rcpps
xchg
and
faddl
js
cmp
jl
pop
cmp
adc
jp
dec
mov
iret
jbe
dec
ficompl
inc
lock
adc
mov
pop
repnz
flds
daa
push
sbb
fcmovnb
add
sub
stos
or
fisubs
xchg
fucom
aad
shr
add
inc
clc
xchg
push
rcll
in
sub
sarb
das
or
fiaddl
dec
mov
or
fstl
sahf
stos
xchg
subl
sbb
push
xchg
sahf
add
fdivp
push
pop
push
cmp
stos
in
sbb
jge
adc
dec
mov
mov
xchg
adc
ror
ljmp
repnz
inc
jno
pop
jmp
aam
jle
adc
mov
inc
sub
outsb
xlat
mov
mov
adc
call
in
jecxz
and
jbe
mov
adc
mov
and
ljmp
movl
xor
loope
sbb
mov
mov
insb
mov
fwait
jo
shrl
and
cmp
dec
xlat
mov
ja
cmc
imul
adc
inc
cmp
aas
mov
mov
shlb
mov
call
jbe
pop
inc
sbb
inc
push
dec
dec
push
push
sbb
das
test
stc
insb
daa
stos
adc
stos
sub
xchg
inc
adc
jae
xchg
dec
pop
xchg
xchg
sbbl
mov
pushf
sub
int
fs
idivb
adc
add
outsl
les
bound
push
lods
ret
xchg
cmpsl
push
add
xchg
mov
xchg
jle
pop
mov
and
jo
in
stc
inc
enter
sbb
test
jg
out
dec
sub
imul
cmp
gs
and
inc
fcmovb
inc
fldcw
lods
aas
leave
jo
and
out
sbb
add
test
push
out
sub
mov
mov
add
ret
adc
xlat
cmpsb
call
fnsave
mov
sub
jle
fistps
test
sahf
fisubrl
push
cli
pop
xchg
jmp
ret
lods
or
and
sub
mov
movsb
lock
cmpsb
dec
inc
ja
pop
ret
loopne
xor
outsb
mov
adc
cmpsl
loop
jp
dec
mov
bound
stc
push
fidivl
pop
insb
mov
cmp
add
outsb
jg
xor
sub
add
jmp
push
fmulp
jae
xchg
dec
mov
jae
cmp
icebp
enter
add
xchg
in
shr
push
mov
fwait
rorb
hlt
sti
and
sub
pop
dec
cmpsb
out
adc
lcall
rorb
sahf
ds
and
popa
cmc
or
out
pop
add
fwait
in
inc
stos
daa
lods
mov
in
dec
mov
jns
cmpb
andl
dec
adc
push
ret
sti
fs
in
and
movsl
fldl
pop
mov
pop
mov
push
adc
sbb
push
ds
xchg
test
pusha
insl
jns
xor
lods
jae
xor
out
nop
push
cmc
dec
or
sub
or
push
das
aam
loop
xlat
test
sub
jo
arpl
andl
into
sub
mov
or
les
cld
push
imulb
inc
mov
jb
jnp
lods
mov
adcl
cmpb
nop
xor
jb
insl
pop
or
addr16
xchg
bound
test
repnz
popa
and
cld
xchg
jle
adc
dec
loopne
fs
jo
shlb
jmp
aas
les
test
loop
or
ljmp
and
mov
stos
dec
xchg
lds
dec
inc
and
stc
mov
and
push
jnp
mov
fs
jge
jb
push
jl
or
pop
push
adc
sbbb
adc
iret
cmp
or
sub
ret
dec
stos
fdivrp
pop
mov
push
xchg
por
and
xor
ss
add
int
push
add
gs
add
lock
stc
pop
mov
outsb
inc
daa
mov
in
in
add
mov
jle
xor
dec
repnz
clc
addr16
pusha
shlb
enter
incb
aad
mov
pop
xchg
jne
call
jp
mov
mov
stos
xor
je
sub
kmovb
mov
dec
jne
and
daa
es
cmp
sub
mov
pop
call
ficompl
imul
push
aad
icebp
push
push
lcall
js
sub
dec
xchg
sti
sub
iret
or
dec
sarb
imul
mov
sbb
jb
aam
imul
or
adc
mov
nop
popf
je
pop
fiaddl
mov
pop
mov
push
mov
sub
cmp
jb
clc
sbb
and
adc
mov
mov
popa
push
or
divl
jbe
test
cltd
push
hlt
rsm
mov
add
js
sbb
stc
sub
hlt
lahf
jae
adc
cwtl
data16
movsl
jns
outsb
lods
daa
shll
sbb
popf
mov
and
cwtl
sbb
xor
in
repnz
jp
test
mov
movsb
pop
sub
or
mov
loopne
sub
popa
cltd
xor
jo
cmp
pop
xchg
aaa
fistpl
pop
cmpsb
popa
popa
andb
push
jl
adc
filds
pop
and
xchg
out
push
add
jmp
je
sahf
xchg
lds
cmp
mov
push
inc
pop
adc
sub
pop
push
jo
dec
repnz
dec
mov
fldz
movsl
loope
dec
inc
mov
lcall
mov
mov
or
scas
sub
icebp
mov
imul
inc
into
sahf
out
clc
outsb
lcall
mov
jbe
neg
repnz
push
leave
mov
icebp
inc
das
push
push
or
pop
sbb
jno
pushf
test
adc
es
pushf
fbstp
cmp
sbb
pop
inc
hlt
stc
fst
fisttpl
dec
xchg
push
scas
cmpsl
lcall
mov
iret
in
and
negb
out
and
mov
mov
cld
orb
adc
rcl
push
and
xor
dec
push
gs
shlb
pop
jne
das
cs
and
push
into
dec
dec
pop
jbe
roll
test
cmpb
jb
test
stos
and
popf
xchg
pop
cmc
xor
mov
aas
sahf
xchg
bound
jbe
aad
jmp
add
add
into
sub
inc
push
out
or
ss
fnstenv
aas
xchg
dec
hlt
pusha
ret
hlt
pop
adc
cmpsb
cltd
cmp
and
sbb
shl
fmul
mov
call
scas
mov
inc
sbb
mov
sbb
lods
sub
js
cmp
inc
push
loopne
xchg
jb
mov
cmp
push
lock
mov
pop
mov
andb
ret
outsl
sbb
jo
loope
enter
mov
sbb
addb
jae
mov
int3
jne
dec
pop
sbb
jg
js
mov
jno,pt
movb
or
das
addr16
int3
in
add
insl
dec
gs
sub
sbbl
and
outsb
in
std
test
cmp
out
jnp
fistl
rcrb
insb
loopne
xor
repnz
or
or
or
cltd
ficompl
dec
pusha
cli
std
aad
mov
rcll
sub
sbb
cmpsb
jnp
fdivrs
rorb
dec
jl
cmpsb
adc
pushf
arpl
insb
sub
out
ds
xchg
push
jp
movsl
inc
push
mov
jne
pop
jl
adcl
mov
xchg
out
and
rcrl
scas
mov
adc
fidivs
das
jg
mov
or
xor
xor
ds
dec
imul
lahf
imul
adc
inc
pop
mov
push
test
stos
scas
rcrl
outsb
fidivrs
imulb
jns
push
sub
lock
insb
mov
inc
rcrb
sub
int
jne
xchg
mov
jecxz
sbb
stc
adc
shll
add
loop
mov
push
cmpsl
les
pop
mov
and
mov
xchg
stc
jl
fwait
mov
cli
mov
sbbb
inc
and
dec
fisttps
sub
pop
sbb
xor
das
xor
pop
bts
aaa
mov
cmp
pop
adc
sub
out
out
jmp
movsb
and
pop
jge
scas
lret
sahf
jmp
and
rclb
sbb
xchg
mov
cwtl
ret
dec
xor
loop
mov
mov
sti
aaa
mov
sub
jbe
imul
pop
ljmp
in
or
mov
pop
int3
mov
adc
ds
fisubrl
dec
xor
pop
sub
sub
or
aas
adcl
iret
fisubrs
inc
add
and
push
dec
cmp
sbb
ret
arpl
rcl
or
xor
and
stos
inc
push
roll
ds
cs
or
mov
xchg
mov
sub
push
andb
cmc
jo
push
fildll
sub
jae
enter
ds
popf
outsb
mov
cmp
mov
dec
cli
xlat
mov
cs
jne
call
xor
testl
push
or
jge
inc
das
out
push
xlat
movsb
test
pop
ss
dec
add
lcall
xchg
ds
pop
xchg
dec
cmp
xchg
std
sarb
push
lds
pushf
je
cmp
dec
dec
adc
xchg
inc
jmp
xchg
pop
mov
cwtl
inc
xchg
cwtl
mov
cs
or
add
xlat
scas
lock
cwtl
in
mov
inc
mov
cmpsb
and
mov
shrl
popa
and
add
popf
lcall
adc
fmuls
cmp
fnstcw
dec
or
cmp
imul
push
xchg
add
fdiv
dec
movsb
sub
jb
cltd
dec
incl
mov
loope
or
cwtl
leave
sarb
jle
scas
and
pop
sub
je
cs
and
sub
pop
bound
subl
push
inc
dec
fcmovbe
jmp
leave
shl
shll
sub
jg
adc
fcoml
add
stc
xchg
xor
out
push
sub
fdivp
lcall
fldl
pop
xchg
mov
push
stos
ret
add
pop
nop
lea
imul
pop
mov
test
or
idivb
sub
push
jbe
mov
or
int
mov
jl
push
icebp
jecxz
push
movsl
movsl
mov
shll
fisttpl
pop
adc
xorl
xor
and
nop
adc
or
mov
lods
arpl
roll
call
mov
sub
push
cld
lret
shll
loop
xchg
jg
pop
dec
addr16
fs
pop
mov
sbb
add
cs
insl
loopne
pop
jb
dec
fldt
adc
mov
jecxz
shlb
and
call
and
mov
dec
xchg
mov
sub
js
pop
les
fwait
add
cmp
lds
pop
cmp
movsb
and
outsb
adc
adc
cmpb
and
loopne
sbb
scas
push
or
mov
inc
mov
mov
out
fidivs
std
jnp
lods
dec
jge
add
call
aas
xlat
mov
jp
nop
push
movsb
push
mov
test
in
lret
sahf
shrl
sub
dec
loope
mov
es
addr16
pop
bound
test
ja
add
hlt
mov
pop
xchg
scas
pushf
inc
xchg
xchg
adc
pop
addr16
call
les
call
pop
mov
mov
push
sahf
test
out
xchg
shl
das
add
aam
aas
ficoml
sbb
and
xor
ja
mov
lods
adc
fsubrs
push
mov
mov
imul
mov
daa
jnp
push
mov
adc
mov
clc
leave
ljmp
dec
and
pop
sbb
fs
pop
xchg
mulb
mov
gs
mov
pop
fmuls
cmc
inc
mov
icebp
leave
cmp
xchg
in
and
jne
adc
sub
dec
out
sbb
xchg
test
andl
mov
pop
paddb
repnz
in
sub
mov
adc
push
fdivl
push
inc
mov
daa
out
jle
lds
inc
mov
jbe
and
xorl
mov
and
lock
icebp
inc
pop
pop
loope
pop
or
out
outsl
fcomp
inc
inc
sbb
sub
xchg
mov
xchg
pop
mov
sub
lods
mov
and
repnz
cwtl
push
mov
jbe
pop
sbb
sub
pop
dec
popf
push
mov
scas
xorb
or
test
in
jne
cmp
stos
daa
stos
rorl
xchg
test
in
jnp
jecxz
hlt
mov
mov
and
push
and
sbb
data16
lds
push
lods
icebp
inc
icebp
xchg
inc
rcrl
jle
adc
aam
call
jg
pop
add
and
fistpll
fisttpl
insb
lahf
xchg
inc
je
pop
call
mov
push
test
mov
adc
adc
in
push
mov
popw
mov
jnp
in
lcall
lcall
popa
divl
push
inc
sbb
cs
test
push
sub
xor
loopne,pn
test
sub
adc
int3
lods
pop
lahf
xlat
insl
int3
xchg
cmpsl
push
ljmp
mov
cld
inc
sub
pushf
add
lods
bound
push
adc
mov
rorl
jp
adc
xor
cmpsl
shrb
data16
test
cmp
popa
cmpsl
mov
sbb
cmp
pop
outsl
shll
jb
mov
repnz
mov
mov
movsb
mov
push
push
mov
outsb
test
pop
dec
out
sub
bound
inc
push
xchg
sbb
push
jmp
push
inc
adc
jle
mov
stc
sub
jno
cs
sub
and
nop
jo
loop
jne
rcrl
xchg
adc
xor
pop
ret
add
icebp
in
mov
cmp
dec
cmp
notl
cwtl
icebp
pop
mov
or
ja
sub
and
out
fldt
push
mov
jnp
mov
sub
addr16
mov
ljmp
movsb
out
push
add
jecxz
loopne
scas
pushf
sbb
cs
mov
pop
out
and
fstps
jnp
mov
insl
cli
jns
loopne
clc
lds
dec
xchg
xchg
jbe
and
pop
scas
adc
xchg
ss
xor
ret
jecxz
sub
sub
push
jns
add
add
jp
mov
xorl
jecxz
adc
mov
add
stos
mov
mov
jg
sub
ljmp
fistpl
movsb
fwait
xchg
inc
fimuls
xor
push
inc
pop
mov
movsl
xor
subb
or
out
mov
pop
adc
add
lods
ja
jne
cld
ror
sub
cli
sub
movsb
sbb
pop
inc
or
sbb
mov
aad
cwtl
shrl
push
lods
mov
jge
jmp
shlb
jns
mov
std
xchg
adc
bound
ret
push
add
push
push
mov
and
inc
sub
and
cld
mov
stc
dec
push
sbbb
mov
mov
sub
ljmp
dec
xchg
movsb
fwait
int3
pop
or
bound
dec
mov
jle
ljmp
fcmove
addr16
pushf
pop
xor
call
dec
scas
lea
dec
or
mov
sbb
sub
cmp
mov
sbb
mov
jmp
ret
sbb
roll
ljmp
dec
jo
andl
dec
in
ret
lods
cs
mov
xchg
dec
cmp
jb
or
fsubrl
lods
fxch
je
rcll
call
jg
imul
cmp
push
cmpsb
mov
aas
push
mov
outsb
out
pop
pop
pop
lahf
and
dec
lds
div
inc
push
ret
out
add
cmp
or
xlat
ror
aas
mov
adc
jge
sub
ret
divb
sbb
mov
mov
mov
xor
xchg
jno
test
call
je
mov
lock
test
popf
adc
aam
jo
jp
imul
dec
nop
or
dec
lock
rcrb
sti
and
insl
aas
dec
sub
push
nop
pop
push
push
xor
test
xchg
aad
test
test
lods
mov
pushf
loop
ud0
or
pop
test
mov
loopne
and
mov
pop
test
pop
xor
add
pusha
add
imul
aas
push
add
pop
test
les
dec
jbe
or
sahf
lods
scas
test
add
test
or
jl
and
icebp
popf
ficoml
push
je
idiv
or
aam
jge
pop
mov
int
mov
sbb
cmpsl
jae
aam
scas
xchg
and
cmp
lret
lock
jle
cmp
add
stc
shll
cli
mov
mov
pop
popf
test
shlb
pop
rol
out
and
or
pop
pop
call
cmp
nop
addr16
cmp
cmpsb
adc
inc
jb
xor
inc
pusha
mov
cs
cmpb
cmp
clc
jo
repnz
xor
mov
cmp
rcll
adc
stos
lods
fs
ret
cli
push
fwait
jbe
xlat
movsl
xchg
lret
shlb
scas
pop
dec
push
sub
and
or
mov
xchg
push
and
jmp
dec
roll
std
mov
in
outsl
dec
push
jne
std
mov
in
sub
dec
iret
mov
lea
rolb
mov
sbb
loop
jbe
push
jne
push
pop
dec
not
or
adc
xchg
pusha
out
popa
or
push
sbb
inc
push
outsl
out
or
and
in
jnp
and
ficoml
sub
sbb
mov
sahf
outsl
fwait
sbb
out
or
and
mov
xorb
add
out
rcrb
and
mov
jnp
rep
aas
sbb
andb
loopne
mov
out
scas
pop
jns
jg
mov
pop
leave
ljmp
fwait
add
ljmp
sbb
incl
aad
sub
es
mov
dec
mov
in
sub
xor
movsb
out
jbe
inc
mov
cmp
repz
and
mov
jmp
sahf
dec
out
lock
imul
nop
fdivrl
in
sub
mull
in
xchg
cmc
fwait
dec
adc
dec
insb
adc
push
push
inc
mov
popf
add
mov
mov
nop
inc
or
arpl
push
sbb
or
out
xchg
jmp
test
inc
outsl
inc
add
add
neg
sbb
or
mov
xor
inc
xor
sbb
fsubr
inc
shrb
sbb
loopne
push
lret
jg
sbb
adc
sar
in
mov
arpl
cmpsl
mov
es
xor
fcmovne
sbb
fs
dec
dec
mov
scas
das
xchg
bound
and
int
imul
pusha
lcall
adc
adc
or
push
add
xorb
add
mov
jge
push
stos
lea
cmp
addr16
mov
mov
orl
adc
dec
push
mov
pop
mov
xor
sahf
push
fidivrl
scas
mov
and
out
out
inc
mov
push
xchg
addl
in
inc
fiaddl
xor
gs
xor
push
insb
int3
dec
and
lcall
shll
gs
xorl
sub
pop
loope
add
daa
fldenv
xchg
inc
js
mov
push
scas
and
lahf
mov
mov
leave
int3
mov
mov
xchg
jg
mov
and
jp
dec
push
and
mov
sbb
and
pop
jbe
je
dec
sbbl
div
add
mov
add
daa
mov
roll
mov
push
inc
in
mov
ret
rorl
call
and
insl
dec
stos
movsb
cmpsb
pop
fwait
jp
mov
data16
mov
popa
inc
aad
ds
fnstcw
mov
sub
pop
enter
mov
lea
push
inc
lahf
dec
push
notl
pop
fs
sahf
cld
movsl
xor
jg
clc
or
and
mov
jecxz
xorl
jb
js
aaa
lods
mov
adc
fisubrl
cld
xchg
cmp
xchg
dec
xor
mul
repz
add
sbbb
adc
cmc
pop
mov
inc
lods
pop
call
mov
cmp
orb
int
mov
jecxz
push
dec
mov
sbb
scas
mov
push
int
inc
mov
sbb
xor
andl
jno
es
mov
in
jb
clc
xchg
les
call
push
ljmp
sub
mov
mov
push
sub
les
orl
insb
call
js
sbb
mov
ss
mov
adc
mov
mov
notl
ds
lea
test
jno
jge
mov
dec
lea
inc
lds
pop
fwait
mov
xchg
test
inc
clc
decb
scas
add
sub
inc
js
jns
jo
jg
nop
test
sub
test
sub
ret
pop
loopne
out
xor
jns
ret
fs
xor
cs
mov
sub
add
xchg
add
xlat
xchg
pop
cmp
clc
mov
cltd
lret
int
aad
movsl
filds
ret
mov
jmp
test
mov
xchg
cmpl
out
pushf
int3
ret
push
dec
push
insl
sbb
outsl
mov
repz
adc
popa
mov
pop
outsb
orl
mov
jmp
jne
ljmp
push
and
daa
push
add
xchg
adc
int
dec
nop
jae
pop
insl
mov
adc
cld
or
cmpsb
loop
or
out
jmp
aas
xchg
imul
jg
xchg
orb
cmp
out
les
lret
fcomip
sbb
inc
ficomps
dec
mov
or
mulb
mov
repz
lcall
mov
mov
addr16
rcll
or
aaa
or
xor
inc
mov
pop
out
jnp
inc
and
es
movsb
pop
ret
in
loope
jae
dec
pop
subb
repnz
jmp
in
dec
pop
int
mov
add
xlat
or
add
lcall
mov
scas
in
ret
mov
jno
push
jmp
jne
xor
inc
popf
mov
lock
cmp
push
xor
dec
fstps
notl
lret
rcll
imul
ja
push
stos
ljmp
sub
inc
enter
pop
into
add
sub
add
test
sub
and
push
dec
sbb
icebp
shrb
mov
in
fucomi
mov
dec
imul
dec
out
pop
lods
gs
pop
imul
lcall
or
js
inc
pop
cmpsl
jmp
jmp
shr
push
mov
stos
pop
mov
imul
inc
lret
aaa
push
cmc
or
and
mov
cmc
push
cmp
repnz
add
xor
xor
or
pop
sti
stos
adc
dec
in
in
or
inc
shlb
in
cli
aam
mov
xor
cwtl
pop
dec
dec
adc
sbb
jns
rcr
push
mov
loopne
aam
enter
mov
or
jmp
pop
in
push
sbb
cmp
outsb
hlt
ja
adc
test
leave
mov
jbe
imul
nop
cmp
std
aaa
xchg
cmp
inc
cmc
xlat
out
aam
cli
xor
push
in
ret
push
enter
and
add
ss
mov
cmp
push
repz
les
cmp
repz
push
rep
inc
int
jno
stc
dec
xor
jmp
jg
js
add
push
jae
ds
test
dec
movl
jg,pt
mov
cli
push
mov
jge
je
inc
cs
ret
pop
sub
stc
mov
xchg
scas
mov
inc
xchg
push
fwait
xor
adc
xchg
or
add
add
mov
mov
addb
pop
test
pop
ficoml
sbb
xor
mov
aad
lea
outsl
nop
fsub
pop
pop
mov
int
add
orb
dec
mov
and
lock
jg
xor
mov
hlt
fnstsw
js
mov
pop
sbb
cmp
divl
in
cld
cld
cmpsb
mov
jae
jo
mov
sbb
mov
cmpsl
aam
xchg
mov
call
pop
xchg
and
hlt
ss
pop
push
cmpsl
sti
dec
in
sbb
xor
in
or
jne
sbb
xor
xor
push
sbb
cmp
in
das
mov
sub
pop
testl
jg
dec
or
stos
stc
cmp
push
mov
sub
stc
push
popf
out
jbe
ret
cmp
ja
fwait
imul
loop
pop
dec
imul
cmp
cs
int3
sarl
push
cmpsb
out
scas
xor
movl
ret
nop
push
add
fs
inc
sbb
stc
sbbl
int3
push
fs
dec
into
hlt
sbb
mov
jbe
int3
push
mov
mov
outsb
aaa
xchg
mov
cmpl
fwait
jge
cltd
mov
xchg
imul
in
icebp
pop
push
push
sub
jg
in
xchg
nop
and
push
inc
imul
adc
inc
mull
xchg
and
shlb
sub
sbb
enter
xchg
mov
inc
xchg
lods
push
or
jle
pop
xlat
or
adc
inc
push
in
enter
call
inc
popf
sub
popa
jmp
stos
repz
pushl
icebp
mov
or
mov
jne
call
adc
mov
cltd
xor
dec
cli
or
lds
ficompl
mov
xor
movsb
nop
sub
mov
mov
cmp
flds
jp
mov
ss
pop
mov
fisttps
xor
pop
aas
push
sahf
das
mov
add
xchg
and
and
add
test
push
lock
mov
xchg
aam
add
push
in
or
jge
sti
mov
adc
aam
lods
imul
or
jae
outsb
rcll
inc
jno
lods
cmp
cmp
out
cmp
dec
xchg
sub
leave
and
or
cltd
in
lea
fwait
lahf
inc
xor
sbb
adc
jmp
mov
pop
lahf
xchg
out
and
jp
out
jecxz
shlb
clc
push
fs
mov
jmp
scas
mov
jle
add
fldl
push
push
pop
sub
push
jg
mov
push
mov
ret
outsb
mov
inc
xor
jb
add
in
cwtl
or
hlt
lahf
xchg
xlat
out
daa
mov
push
addr16
cmc
icebp
or
xorb
mov
lea
push
pop
jne
xchg
bound
je
lods
jmp
xor
jbe
dec
mov
sub
lods
xor
xor
call
pop
xor
or
or
shlb
adc
ljmp
fsubs
loope
sarl
ja
aad
xchg
in
data16
fcoms
imul
push
addl
add
lods
mov
roll
xchg
push
aad
sub
clc
sti
and
mov
xchg
clc
or
stc
loopne
mov
lret
lods
loop
lea
lods
mov
pop
cmp
sti
or
inc
movd
dec
and
test
stos
lret
dec
xor
movsb
mov
dec
push
stc
cltd
ror
lahf
and
and
outsl
push
jp
xchg
cltd
hlt
xor
xor
movsb
pusha
out
push
xor
fildll
rcl
jge
jle
lret
mov
xor
jnp
and
hlt
inc
mov
pop
mov
inc
dec
loopne
pop
stos
stos
fsubl
aam
popf
xchg
ja
mov
in
jne
sub
mov
cmp
out
fdivr
cwtl
out
and
xchg
bound
mov
sbb
repnz
popa
stc
mov
sbb
repz
imul
test
jae
andl
sti
aad
xchg
mov
xchg
dec
and
fmuls
xchg
outsl
insb
cmp
popf
out
leave
push
in
adc
int3
ret
test
dec
xchg
shll
or
mov
mov
int
mov
outsb
movsl
cmc
in
loop
mov
test
cwtl
add
arpl
ret
mov
aam
and
mov
lcall
sub
out
dec
iret
lock
sti
mov
or
outsb
xchg
sbb
push
shrb
or
add
lods
fucom
inc
sub
scas
lea
das
xchg
lods
imul
cmp
dec
call
mov
insl
mov
movsb
insb
cmp
int3
popw
fdivs
xor
ja
sahf
dec
inc
cmp
cmc
hlt
mov
adc
xor
mov
and
dec
fs
outsb
mov
xor
sbb
adc
in
cmp
jp
mov
negb
les
ja
scas
add
push
push
pop
push
lret
cld
ds
xchg
sarl
test
shrl
pop
or
pop
aaa
mov
sub
les
in
inc
xchg
and
mov
sub
int
hlt
fxch
outsl
aam
pusha
jno
test
mov
sub
xchg
ja
mov
pop
icebp
xchg
fidivrl
and
outsb
push
xor
xchg
push
shll
add
out
jecxz
icebp
aaa
cmc
sub
dec
jo
pusha
popa
cmp
add
and
call
mov
adc
jns
cli
xchg
negb
sbb
or
pop
popa
mov
mov
std
sbb
fwait
addr16
xchg
lcall
mov
pop
push
push
movsl
mov
mov
xor
jo
popa
mov
add
es
subb
and
and
insb
adc
iret
mov
add
repnz
repz
sbbl
or
test
mov
mov
mov
mov
xchg
jns
inc
leave
js
sub
dec
mov
repz
test
andb
insb
outsb
mov
mov
xor
fs
addr16
dec
jecxz
jns
and
sub
mov
in
cli
jne
jmp
inc
data16
push
cmp
test
outsl
or
sub
aaa
sub
sub
stos
popa
push
in
ret
cld
or
hlt
sarl
stos
flds
xchg
push
mov
xchg
jb
stos
dec
pop
mov
ss
lds
imul
inc
pop
dec
mov
add
out
lds
pop
in
sbb
pop
cmpsl
lods
popf
push
pop
push
or
add
or
lods
neg
xchg
sub
push
je
mov
lcall
mov
push
test
jmp
iret
in
mov
inc
mov
pusha
repnz
dec
push
sbb
shl
rcll
lahf
mov
aad
lods
loopne
std
shrl
push
push
adc
pop
pop
inc
gs
test
mov
in
ljmp
fstps
jmp
pop
push
cli
pop
in
add
icebp
sahf
xor
pusha
push
cmp
cltd
sahf
loope
out
pop
mov
sar
sub
aaa
adc
leave
rolb
xchg
pop
adc
add
aam
std
movsl
cmp
adc
pop
push
pushf
jl
in
int
sub
out
adc
jns
or
and
outsb
push
icebp
outsl
cmpsl
fildll
mov
loope
adc
mov
mov
cs
xor
sbb
pop
mov
sub
cld
jg
xchg
xor
ret
jne
jbe
out
inc
fs
add
jne
and
int
fcoms
fwait
cwtl
and
in
mov
in
stos
cli
nop
lods
and
lods
mov
js
popf
jmp
addr16
or
xchg
mov
add
stos
arpl
aam
push
shlb
repz
push
shl
fs
frstor
xor
xor
hlt
fldt
loopne
icebp
scas
stc
jmp
mov
mov
cmpsb
cmpsb
pop
into
subb
or
cmp
mov
scas
mov
inc
pop
dec
and
push
or
ds
rclb
mov
adc
mov
das
dec
insl
xchg
push
adc
orl
mov
pop
mov
cltd
icebp
xlat
xchg
movsb
cmp
mov
inc
call
sub
mov
cltd
cmpsb
jp,pt
cmp
mov
xor
cmpl
add
and
push
xchg
scas
fcoms
dec
lea
add
pop
adc
xchg
pop
push
xchg
pop
add
ja
dec
xor
and
iret
loope
add
jp
fs
fsts
stos
sbb
mov
and
int3
and
push
sbb
ds
lea
sub
pop
cmpsl
leave
push
leave
jmp
loopne
pop
insb
adc
mov
jecxz
inc
or
jns
mov
divl
hlt
xchg
in
xor
sub
dec
fdivrl
pop
ret
or
xlat
adc
pop
stos
ss
add
addr16
insl
sub
cmc
cmp
int3
push
aad
push
fucomip
mov
xor
mov
mov
mov
shr
mov
lods
sub
aam
mov
iret
lret
ret
cmc
inc
push
mov
add
add
pop
xchg
lret
ret
addl
call
pushf
imulb
hlt
decl
mov
sub
sbb
js
mov
cmp
clc
cmpsl
lret
test
lahf
mov
ror
mov
loopne
jno
xor
ret
aas
movsb
popf
lods
sbb
pop
xor
mov
mov
sub
jmp
addr16
js
xor
xchg
sbb
or
hlt
inc
add
in
bound
inc
mov
mov
mov
jo
out
and
cs
pop
adc
mov
ret
mov
mov
mov
pop
fistpll
stc
mov
fincstp
mov
pop
or
cmp
mov
cld
movsl
or
lock
popa
clc
mov
mov
inc
ds
mov
in
ja
das
jmp
lret
sbb
in
loopne
sub
movsl
pop
xor
mov
test
fcompl
aas
fmuls
sbb
mov
sub
cmp
pop
cmp
adc
fmull
jg
mov
mov
jge
jno
pusha
mov
mov
rcrb
push
xchg
add
sahf
std
adcl
xchg
jo
sarl
jb
test
jle
add
loopne
or
out
xchg
pop
inc
dec
ja
push
pop
fistpl
xchg
mov
and
add
dec
lds
inc
ret
repz
pop
sbb
insl
into
out
sahf
sar
push
enter
aam
pushf
iret
into
or
fisttps
xchg
xchg
mov
cmp
es
pushf
loopne
loopne
inc
xchg
inc
stc
scas
lret
add
push
mov
mov
mov
loop
adc
aam
js
push
inc
mov
dec
inc
popa
sub
adc
dec
out
rorl
xchg
sarb
daa
stos
xchg
add
sahf
stos
cmp
adc
loopne
sbb
xor
fstpt
in
push
dec
mov
fdivrs
mov
pop
shlb
ss
mov
enter
adc
mov
jmp
scas
shll
pop
lcall
rcrb
cwtl
mov
xchg
lock
sub
jmp
adc
inc
mov
pop
cmpsb
imul
outsl
mov
in
inc
mov
sbb
jmp
mov
sbb
cli
pop
std
lods
ret
shrl
xor
mov
imul
js
dec
out
inc
and
push
cmpsb
fnstenv
xchg
int3
ficompl
subb
ror
testl
dec
js
lods
inc
out
aam
lahf
xor
push
jg
stos
fldenv
mov
std
sub
outsb
mov
test
dec
in
xor
mov
sbb
sub
int3
pop
addl
imul
jg
mov
fwait
testb
jmp
outsl
pop
ds
mov
mov
xorb
dec
or
push
rol
int
xor
mov
mov
add
cmp
push
in
fidivs
fiadds
mov
jo
mov
sub
in
or
js
xor
sbb
fildll
pop
out
lret
mov
into
fidivrl
popf
out
mov
lds
cmp
inc
ss
inc
inc
repnz
gs
push
mov
jns
cwtl
add
mov
test
sbb
pop
mov
cmpl
jmp
add
int
add
sub
int3
dec
in
mov
sub
sarl
add
lods
subl
inc
adc
divb
push
cmp
loop
js
fnsave
push
rolb
ret
xchg
lcall
cmp
or
adc
loopne
call
loope
xchg
add
sbb
dec
pushl
scas
lods
xlat
xor
mov
je
iret
xlat
mov
repz
xor
push
cld
jne
sbb
sbb
andb
stc
cltd
xchg
mov
inc
sbb
lock
sub
fs
insb
jae
addl
and
sub
loop
out
inc
xor
add
mov
inc
push
out
gs
orl
jecxz
sbb
sub
cld
lods
mov
sbbb
xor
and
sub
fisubs
lret
fnstcw
push
xor
in
fnstsw
out
inc
out
bound
jg
adc
mov
arpl
xor
inc
lea
aam
and
sti
or
lock
sub
or
and
mov
ds
out
daa
scas
test
xor
pop
insb
and
pop
jge
jmp
pop
xor
in
xchg
int3
adc
repnz
dec
mov
jnp
inc
jo
add
push
adc
icebp
cwtl
iret
shrl
cwtl
insb
out
aaa
xlat
enter
push
hlt
jmp
mov
mov
shrl
push
fcmovb
mov
test
push
out
cmp
fldcw
sbbl
xlat
es
mov
and
js
add
inc
insb
add
mov
jae
adc
cmp
sbb
pop
in
mov
out
inc
repnz
sub
mov
mov
inc
loope
inc
shlb
sbb
cmp
dec
bound
stos
mov
mov
fcomps
rcr
fwait
into
call
bound
mov
lds
xchg
js
mov
adc
ja
aaa
push
push
push
ret
ja
cmp
loopne
adc
xchg
jno
stc
call
fmuls
push
lods
or
cmp
js
call
sbb
daa
sub
insl
xchg
jmp
and
int3
insb
lcall
iret
fwait
jg
inc
unpckhps
jmp
mov
sbb
or
mov
lods
jns
mov
ficoms
and
outsb
cmc
test
dec
into
dec
dec
popl
and
pushf
sbb
xchg
sahf
lods
mov
fidivrs
in
add
jg
and
inc
dec
or
push
mov
cmp
test
xchg
add
fs
sub
jno
and
mov
daa
outsl
lock
test
pop
push
mov
hlt
adc
cmp
inc
out
cmpsl
rclb
pop
pop
addr16
enter
cli
push
xchg
jge
sub
shlb
frstor
mov
sub
in
mov
lret
push
cmovb
xor
sbb
dec
lds
mov
inc
mov
stos
fsubrs
add
xchg
cmp
xor
flds
cmpsb
xor
jne
inc
push
mov
arpl
call
mov
cmpsl
int
pushf
or
mov
popa
mov
cmpsb
fdivs
or
mov
mul
imul
lock
mov
xchg
mov
inc
pop
frstor
and
xchg
orps
mov
lcall
stc
int
add
mov
pop
lcall
loopne
pop
pop
flds
out
shll
loop
cs
or
stc
fadds
fisubl
and
mov
fwait
xor
aam
jl
in
dec
xor
push
dec
out
cmpsl
hlt
mov
jmp
mov
mov
push
mov
dec
pop
int3
pop
in
clc
mov
addb
cwtl
adc
dec
push
ljmp
int
scas
push
cwtl
loopne
and
jl
pop
aas
hlt
sub
arpl
icebp
and
pop
fnstsw
imul
xor
movsl
test
in
mov
add
and
cmp
test
cmc
cmp
lret
test
clc
xchg
push
adc
loopne
adcl
add
orb
int3
insl
mov
fs
mov
cld
sub
and
and
loop
and
mov
add
mov
sub
mov
fdivrl
lds
sbb
in
sbb
jecxz
in
sbb
or
rol
daa
mov
mov
mov
mov
push
or
pop
or
xor
add
aas
fs
iret
add
adc
pop
dec
sub
scas
or
pop
outsl
mov
or
mov
int
inc
fisubrs
loopne
adc
notb
pop
sti
xor
jl
roll
mov
js
rcll
sub
dec
mov
pop
mov
aas
mov
sbb
sub
sub
jb
imulb
out
or
lock
pop
test
sub
sub
jl
jno
push
ret
movq
mov
xlat
adc
inc
sub
xchg
stc
repnz
mov
mov
ds
jb
out
mov
fldcw
repz
inc
rolb
int3
lret
loopne
jge
andl
push
cvttps2pi
push
dec
testl
imul
mov
pop
mov
movsb
sarb
push
leave
pop
pop
jne
dec
movsl
fcmovnb
mov
cmp
dec
scas
pop
lods
inc
sbb
jbe
xchg
xchg
ret
and
addb
sub
sub
lret
mov
mov
into
dec
jno
mov
imul
pop
call
test
cld
sahf
pop
xor
mov
out
fstpl
push
adc
cmp
mov
xlat
pop
daa
add
or
adc
js
outsb
adc
std
or
shlb
mov
lods
out
js
xchg
in
ljmp
enter
adcb
movsb
js
and
pop
sub
test
pop
dec
push
cmp
cwtl
jae
sub
xchg
lock
xor
in
gs
xchg
xor
rcr
dec
aam
cmp
hlt
xchg
cmp
cwtl
andl
cmpsb
sub
jmp
fmuls
jp
cmp
dec
insb
and
outsb
loope
test
aaa
cmp
adc
repnz
hlt
add
fucomp
std
pop
aas
shlb
bound
bound
sbb
jg
test
sbb
lods
idiv
jl
xchg
or
or
bound
es
loope
xchg
ret
int3
cli
or
loopne
xor
sub
dec
test
inc
inc
sub
xor
inc
fnstcw
jbe
outsb
mov
xchg
fisubl
mov
pop
jnp
fcoms
adc
dec
jg
push
jne
lds
pushf
fmuls
cmp
mov
xor
pushf
stc
sbb
in
xchg
and
andl
xchg
xchg
in
mov
scas
dec
pop
lds
dec
mov
cmpsb
push
hlt
popa
xor
les
dec
into
in
pop
jbe
lahf
xchg
sahf
popa
adc
inc
mov
ret
mov
dec
movsb
add
popf
lods
out
out
sub
cmpl
pop
fadd
nop
rorb
cld
mov
or
xchg
int
rorb
jg
fwait
xor
ret
loopne
dec
out
lea
stc
jle
dec
dec
dec
pop
sbb
dec
ret
mov
cmpb
repnz
mov
mov
lcall
inc
in
in
sti
iret
pop
mov
mov
scas
data16
jge
mov
jno
inc
cld
out
ret
fwait
add
rorb
insl
sbb
xor
adc
pop
addr16
jle
pop
pop
ret
in
jl
enter
xchg
ja
xchg
adc
lds
cmpsb
in
out
iret
pop
aam
mov
cld
cmp
or
push
aam
lret
ret
push
lods
lea
cwtl
lret
mov
lahf
push
into
ja
adcb
push
jno
push
movsl
jp
popf
shll
out
inc
sbb
push
mov
jo
mov
fdivrp
test
jo
push
sbb
popf
xchg
pop
pop
movsl
mov
loope
pop
das
addr16
push
push
outsl
xor
fcmovnu
jmp
popf
lea
into
aaa
dec
inc
dec
dec
cmp
test
cltd
sbb
popf
mov
lock
aad
mov
cltd
xor
inc
or
mov
xor
pop
aad
xor
in
out
jp
mov
es
es
out
mov
lahf
or
lods
pop
insl
loop
jge
fcmovnb
or
insl
xor
lods
lock
sub
test
fisttps
stos
jl
outsb
add
cmpb
mov
dec
push
adc
ja
out
mov
cmp
or
negb
mov
and
test
xchg
xorl
jle
popf
xchg
jecxz
push
mov
mov
and
mov
daa
and
arpl
lret
sbb
orb
lret
rcrl
cld
push
sbb
das
ljmp
mov
mov
jbe
bound
inc
popf
jb
or
mov
mov
div
mov
xor
xchg
lcall
xchg
or
dec
jae
int3
xchg
popf
outsb
cmp
push
xorb
xchg
push
outsl
add
fdivrp
ss
cmp
sub
lret
dec
xor
in
scas
jns
pop
mov
icebp
sti
mov
mov
add
insl
movsb
mov
lcall
xchg
icebp
clc
jno
ds
into
psadbw
fwait
inc
and
clc
popf
test
stos
cmp
scas
inc
loop
mov
sub
jl
cmp
sahf
shl
pop
mov
inc
test
andb
push
dec
adc
loope
fxch
js
xor
in
repz
clc
pushf
and
div
jbe
shrl
cmpsb
pop
xchg
and
xchg
mov
data16
pop
ret
mov
shrl
sahf
fs
nop
push
mov
xor
cwtl
sahf
pusha
add
jbe
pop
push
std
test
add
mov
add
add
mov
sub
fcoms
xchg
jo
xor
sbb
scas
mov
jmp
out
cmpsb
lret
int3
rcrl
xchg
cmp
cwtd
jne
push
pminsw
decb
in
mov
fst
out
pop
iret
dec
js
imul
mov
xchg
lock
jmp
int3
outsl
ds
push
mov
jb
repz
or
sahf
jge
nop
testl
xchg
mov
sbb
cmp
inc
and
and
lret
ficompl
sbb
lcall
sub
sbb
test
cld
fdivrs
add
jns
fcmovnu
stc
push
inc
jl
lock
cld
dec
push
adc
lcall
out
scas
sarl
dec
jg
inc
sbb
fldt
adc
fdivrl
and
shlb
jnp
xor
pop
xchg
inc
je
imul
jb
ficompl
gs
jmp
addl
xchg
insl
shll
cmc
sbb
out
les
xlat
inc
pop
ret
lods
in
imul
inc
pop
loope
scas
ficoms
das
sti
xchg
pop
test
lea
fstps
jecxz
xor
dec
int3
mov
cmp
loop
add
sub
test
or
aad
pop
mov
scas
aad
push
popl
jmp
sub
dec
fisttps
fs
mov
test
aam
push
cmp
fistl
pop
xchg
pop
inc
mov
in
out
mov
sub
push
and
mov
pusha
push
test
sub
lahf
sub
inc
outsl
xchg
dec
fs
pop
lahf
mov
inc
ret
and
loopne
out
cwtl
mov
insl
ds
clc
jb
cmpsl
imul
filds
mov
test
xchg
ret
sub
sub
push
pop
setns
pop
cmp
push
rcr
stc
out
repz
shll
or
leave
sti
test
iret
sub
fstpt
xor
add
mov
rol
loop
pop
shll
arpl
lret
in
cmp
pop
sub
cmp
cmp
push
sub
fidivrl
aaa
insb
fisttpl
in
sub
scas
lret
fistpll
cmp
scas
xchg
nop
sub
inc
divb
inc
push
pop
imul
jmp
jge
jmp
push
jne
jmp
push
data16
movsb
int
mov
sarb
mov
mov
cs
cmp
jp
xchg
iret
in
loope
adc
push
repnz
test
mov
jne
out
xor
adc
push
xchg
pop
out
and
push
pusha
mov
jb
inc
or
xor
lock
cmp
add
push
add
ret
push
sbb
sub
mov
jno
iret
jne
push
mov
movsl
les
iret
sbb
lret
pop
stc
adcb
nop
push
cmp
test
mov
addr16
mov
bswap
test
inc
dec
popa
push
push
in
ret
add
mov
es
xchg
out
cld
or
je,pt
ljmp
push
sbb
inc
nop
mov
inc
dec
sub
mov
sub
fwait
mov
jae
fs
inc
aas
jle
int3
push
xor
push
int
add
inc
sub
sbb
data16
or
pop
test
repnz
dec
repz
fst
mov
mov
mov
bnd
das
test
add
add
or
or
std
jnp
or
mov
ftst
dec
or
sub
adc
mov
aaa
add
into
add
sbb
mov
das
jmp
and
stc
mov
pop
roll
sti
int
mov
mov
stos
push
shl
cmpsb
or
into
mov
loopne
jg
int
mov
int3
negl
hlt
mov
aad
dec
jbe
xchg
pop
push
mov
push
stos
push
cmpsl
xchg
jmp
daa
pop
lods
loop
insl
mov
dec
fnstenv
push
sub
bnd
pop
jbe
inc
pop
lea
cmp
cmp
leave
lret
leave
pop
bound
push
imul
adc
ds
xchg
lcall
aad
ss
pop
xor
dec
add
adc
pusha
jge
movsb
out
push
sub
xlat
mov
faddp
ds
jecxz
pop
subb
js
mov
mov
adc
cmp
push
adc
out
inc
sbb
mov
inc
loopne
sbb
push
xchg
sbbl
adc
cld
adc
int3
mov
inc
xor
xchg
xchg
or
jo
pushf
add
or
push
and
clc
push
mov
or
pop
js
fisttpl
sbb
adc
inc
fstpt
lret
fidivl
lods
mov
add
pop
lahf
xchg
mov
mov
jle
inc
push
into
cmp
xchg
in
xchg
mov
mov
xchg
add
shl
jecxz
jnp
out
cs
ret
push
sahf
fisttpl
cli
addr16
out
or
clc
mov
dec
int
repz
jg
or
sbb
fimuls
stos
cmpb
mov
icebp
xor
cmc
cld
fwait
rorb
mov
out
jnp
loopne
sti
call
std
outsl
push
or
jb
jl
xchg
dec
bsr
jae
pop
arpl
fwait
add
cltd
pop
cmc
lock
lock
fsubr
data16
out
mov
adc
xor
test
adc
jp
jge,pt
test
cmp
dec
adc
lods
fstl
jns
jo
cltd
and
outsl
push
mov
ffree
xchg
shrl
cltd
inc
je
incl
fimull
push
aam
xchg
sub
jl
sbb
nop
mov
into
jnp
insl
adc
add
insl
xor
sar
or
sub
outsl
sub
cmc
outsl
loopne
imul
adc
lret
lahf
add
xchg
xchg
or
pop
pop
test
xlat
mov
loope
pop
mov
je
mov
sbb
mov
popf
cmp
cwtl
mov
icebp
js
out
ret
sbb
lock
faddp
mov
pop
cwtl
inc
popa
or
dec
call
dec
mov
cmp
dec
imul
add
in
or
popf
or
or
xlat
adc
test
out
mov
shrl
cld
repz
or
imul
test
mov
movsb
sbb
mov
notl
test
pop
mov
jmp
mov
pop
es
fmuls
movsl
or
ret
or
cld
xor
inc
or
and
or
cli
dec
loopne
addr16
push
cli
stos
lds
test
jmp
jbe
jg
in
adc
pop
pop
loopne
xchg
lcall
pop
stos
fnstenv
jge
pminub
xchg
popf
mov
les
rcrb
dec
pop
stos
jg
loop
push
mov
push
mov
sub
movb
mov
faddl
and
pop
xor
push
dec
scas
aam
fmull
fsubs
arpl
imul
sbb
dec
sbb
xor
mov
inc
push
push
sbb
icebp
aad
mov
or
add
xchg
gs
xchg
movsl
cmpb
gs
adc
lcall
mov
cmp
adc
ds
cmp
gs
mov
and
pushf
fidivrl
mov
mov
js
xor
xchg
xchg
jb
pushw
fwait
or
cmp
pop
dec
inc
lock
js
enter
pop
dec
mov
data16
lret
test
dec
xor
out
lods
add
fsubrs
lods
lcall
dec
mov
aaa
mov
mov
loopne
sub
out
popf
mov
insl
jmp
mov
xlat
popl
repz
sbb
xchg
movsl
in
fisubs
sarl
aaa
clc
pop
mov
add
mov
lock
xchg
xor
dec
mov
adc
cmp
xchg
inc
dec
adc
xor
arpl
fistps
nop
lea
pop
jl
xor
xchg
sbb
xchg
xchg
push
test
popa
fidivl
push
lea
hlt
push
jmp
test
inc
mov
iret
xor
pop
sahf
ss
dec
add
arpl
fidivs
popa
test
push
rol
or
dec
in
std
cmp
xchg
es
aad
xchg
adc
aad
stos
mov
scas
loop
sti
mov
fisttpll
fdivl
mov
scas
neg
imul
jne
rcrl
int
repz
xchg
fdivrs
cltd
sbb
sbb
lock
add
jl
xlat
push
sbb
adc
xchg
add
jmp
mov
sbb
cmp
pop
std
imul
xchg
push
or
gs
stos
cmc
mov
pop
ss
cwtl
orb
stc
mov
mov
lret
ror
pop
sbb
mov
out
cwtl
cli
jnp
inc
add
rclb
out
xchg
in
dec
xchg
daa
lret
loope
sub
mov
outsb
icebp
dec
std
rclb
push
je
das
cmpsl
int3
jmp
shl
add
sbb
jge
hlt
or
xchg
jo
and
sbb
outsb
xchg
scas
lods
dec
lds
sub
das
add
loopne
sub
sahf
add
in
adc
out
mov
repnz
imulb
mov
cmc
and
sti
mov
daa
mov
in
inc
mov
inc
dec
loop
fldt
es
sbb
test
insb
dec
dec
flds
lds
loopne
cmpsl
loopne
sbb
pushf
adc
jne
lahf
cmp
pop
out
shlb
and
outsl
jmp
or
mov
mov
cli
mov
fstpl
adc
mov
pop
jl
rcr
mov
leave
mov
daa
cli
shrl
movsb
mov
je
push
mov
daa
xlat
jo
addb
adc
push
sbb
or
sbb
data16
or
inc
adc
loopne
adc
lcall
jns
enter
inc
orl
mov
and
addr16
and
ja
mov
mov
outsb
and
sar
rcll
aam
iret
js
fs
cli
mov
add
scas
jmp
sub
or
pop
ljmp
in
push
rcr
push
fdivl
cmp
data16
je
adc
stos
xchg
fcompl
ds
add
aad
clc
inc
or
pushf
hlt
sub
mov
movsl
addr16
add
addl
nopl
lahf
ret
scas
shlb
mov
xor
fucomp
jmp
movsb
imul
dec
mov
jecxz
pop
movsl
jo
jmp
add
scas
insl
das
ror
xor
fidivs
and
out
mov
lock
sub
data16
adc
test
andps
ret
xchg
ficompl
enter
adc
mov
shlb
data16
int3
int
xchg
add
lds
jecxz
orl
cmp
into
lcall
test
dec
dec
cmpb
push
stos
in
xchg
push
lods
std
dec
inc
xor
movsl
xchg
xor
js
jns
rcl
fwait
jmp
mov
xchg
jnp
aam
adc
popa
mov
push
cmc
sarl
xchg
xchg
js
fcom
xchg
in
inc
mov
rcrb
in
jbe
scas
cmp
cld
lds
jecxz
pop
insb
mov
jnp
cmp
sbb
movsb
in
test
icebp
sbb
dec
sbb
sbb
cmp
sub
daa
scas
jmp
adc
into
in
or
xor
in
movsb
faddl
repz
pop
xchg
fisubl
fwait
sbb
pusha
sti
loopne
pop
adc
pop
pop
ja
xchg
rcll
test
popa
jl
mov
pop
shrl
xor
stos
imulb
dec
xchg
ficoml
enter
stos
pop
jne
pusha
push
sub
push
rcr
sbb
add
bound
jns
mov
and
sbb
lahf
lcall
inc
clc
jle
mov
mov
inc
dec
pop
xor
xor
jg
fnstenv
jbe
cld
cmpl
lcall
pop
sub
mov
dec
cltd
jo
repz
sbb
test
sub
cmp
or
test
inc
lret
sub
pop
idiv
or
xchg
inc
setbe
mov
repz
sti
aaa
sub
and
xchg
jmp
push
leave
dec
mov
sbb
filds
or
and
movl
hlt
dec
xchg
mov
cmc
scas
lret
dec
add
ret
loope
adc
lds
xchg
jnp
sbb
dec
rclb
or
fwait
loop
ds
iret
std
pushf
dec
add
pop
or
pop
inc
sub
push
pushf
js
dec
lcall
daa
sub
stos
push
nop
pop
push
sahf
cli
js
dec
jge
ficompl
cs
sub
inc
lods
mov
xor
pop
adc
lret
repnz
loope
cmpb
std
or
imul
or
imul
es
dec
jmp
outsl
sub
or
and
jb
rcll
inc
dec
push
mov
dec
dec
fidivs
pop
js
out
mov
filds
dec
fistl
mov
iret
call
sub
push
pop
and
or
jo
in
pop
in
aad
mov
iret
sti
jnp
shrl
mov
imul
inc
add
cmp
in
movsl
fcmovne
mov
xchg
ja
dec
adc
push
jns
push
lods
mov
mov
mov
mov
sti
xlat
mov
fdivl
test
in
and
sbb
dec
mov
lahf
arpl
insb
ret
test
mov
xchg
push
mov
or
out
sbb
insl
sbb
cli
sub
dec
adc
rcrl
adc
push
mov
inc
push
repz
mov
rcrl
cmp
cmp
fadds
faddl
jecxz
das
out
scas
mov
push
inc
or
dec
cmpsl
enter
mov
add
or
jl
mov
fnstsw
outsb
loopne
jmp
jmp
jno
pop
inc
mov
fadds
stos
add
jbe
jns
in
shr
cli
aad
ret
loope
lods
xchg
mov
or
or
jb
xor
cmp
mull
test
add
das
lea
dec
je
jp
shlb
lds
shrl
punpckldq
loope
jge
fimull
jb
jne
cmp
ja
sti
mov
mov
add
idiv
fwait
inc
mov
mov
jb
pop
dec
mov
popf
pop
scas
clc
pop
scas
imul
pop
inc
xchg
in
lods
push
in
ljmp
shrb
repz
outsb
dec
inc
xchg
push
fbstp
cmp
dec
shrl
adc
push
call
adc
dec
pusha
std
dec
xor
into
arpl
mov
push
jnp
mov
das
insb
lahf
xchg
mov
lds
out
mov
idivl
jb
int3
adc
dec
movsl
das
cltd
xlat
lret
fistl
gs
andb
ljmp
inc
mov
mov
mov
sti
enter
xchg
fs
inc
das
loop
xor
in
das
out
push
aad
mov
test
pop
and
out
push
out
or
shll
sub
sti
xor
push
and
or
push
xor
sti
sarl
test
fs
mov
cltd
cmc
mov
adc
test
fcmovb
cs
xchg
sbb
mov
mov
mov
in
out
add
out
and
dec
scas
movsb
es
stos
iret
fstps
xchg
xor
fwait
test
out
mov
loopne
and
xchg
or
shlb
add
jle
rclb
mov
or
cmp
lea
negl
test
mov
dec
push
inc
pop
sbb
mov
xchg
lods
pushf
scas
jno
push
dec
and
jmp
in
pop
mov
inc
push
imul
loopne
pop
sub
mov
insb
shrb
xor
push
std
jae
xor
dec
stos
or
mov
add
dec
sbb
cltd
xchg
or
push
and
hlt
mov
and
push
mov
mov
xor
cmp
xchg
sti
xor
sbb
sbb
jno
xchg
inc
into
scas
idivl
out
lahf
mov
std
mov
mov
fsubrp
mov
popf
inc
push
clts
or
call
sub
repnz
cmp
out
ja
das
test
shr
cmpsb
shr
lcall
push
jmp
xchg
dec
mov
jecxz
jb
aad
leave
and
push
cmpsb
pop
push
jb
addr16
aad
in
lock
and
cmc
dec
sbb
in
movsl
sub
xchg
adc
stos
pop
mov
jns
mov
sbb
mov
sbb
jmp
seta
mov
sahf
xchg
mov
in
gs
cwtl
imul
xchg
mov
mov
pop
push
mov
addb
and
popa
and
movsb
jbe
mov
adc
aaa
mov
cmp
mov
inc
out
pop
lds
mov
pusha
jno
sub
lock
mov
jp
cmp
inc
pop
int3
jmp
jae
repz
std
adc
cmp
cltd
sbb
or
fdivrl
mov
std
pop
cmpsb
and
dec
add
mov
pop
js
jecxz
lea
mov
jle
stos
mov
sub
cmp
pop
cmp
or
out
fbld
sub
bound
aas
mov
push
int
inc
mov
fs
push
fstpl
gs
mov
cmp
ret
push
adc
xor
ret
cmp
mov
sub
jo
lret
test
pop
jno
push
in
cmp
cwtl
es
pop
lods
mov
mov
pop
inc
mov
jo
sbb
adc
arpl
push
dec
jmp
and
jno
mov
mov
mov
jbe
mov
pop
push
pop
pop
cmpsl
test
mov
push
outsl
shrl
int3
pop
cmp
add
cli
out
test
and
xchg
add
cli
inc
sarl
add
mov
shrl
mov
sahf
js
stos
adc
or
mov
je
repz
push
push
xchg
push
popf
cmp
push
or
shrb
mov
sub
push
xchg
mov
cs
cmp
inc
xchg
lcall
stos
mov
pop
pop
addr16
jne
push
test
rorb
aad
test
pop
call
das
adc
mov
sub
dec
xor
jb
out
inc
inc
cmpsb
iret
lret
pop
mov
inc
mov
push
in
push
cmp
cmp
push
push
std
xor
add
cmp
in
mov
ficomps
mov
xor
stos
popa
cwtl
lahf
lods
inc
ljmp
cld
and
repz
xlat
movsl
sbb
xchg
sub
or
inc
out
jb
ret
int3
xlat
sbb
mov
fadds
mov
shrb
adc
in
cmc
pop
lock
sub
mov
out
adc
pusha
hlt
stc
pop
jmp
xchg
jno
stos
inc
adc
and
push
jmp
jns
mov
jo,pt
push
hlt
arpl
mov
int3
mov
lock
insl
testl
loopne
pop
sbb
sub
sub
sub
jp
ror
mov
orb
jg
xor
notb
lock
das
push
fcmovnu
pop
adc
add
sub
mov
jl
out
js
movsl
mov
xchg
cmc
scas
aas
dec
push
js
mov
push
pushl
and
or
idiv
loope
insb
sub
inc
sbb
push
jecxz
ljmp
inc
inc
xlat
jmp
jp
cmp
add
push
popl
mov
cld
fistps
xchg
icebp
xchg
or
cmpb
adc
addr16
lods
outsl
jnp
add
lods
cmp
in
lock
ja
pop
repz
int3
sti
lret
xor
loope
jb
sub
mov
cld
or
js
cmp
jl
push
in
insb
push
cli
int
jno
mov
inc
inc
rorb
push
aas
mov
pop
cld
daa
fidivl
inc
and
jmp
clc
push
subb
int
int3
inc
jl
imul
pop
rorl
sub
or
cmp
int
and
mov
pop
sbb
xchg
jle
subb
fldt
cmpsl
int
mov
repnz
and
fistpl
gs
mov
popa
sahf
adc
loopne
sti
xor
jle
xor
pushl
push
pop
mov
mov
push
dec
stos
int
xor
cmc
sbb
push
outsb
and
subb
rcrb
or
arpl
pushf
ljmp
add
cmpsb
push
sbb
cmp
jae
adc
inc
cmp
in
fcmove
test
dec
pop
leave
pop
pop
jb
jmp
inc
pushf
mov
imull
sar
jl
adc
in
mov
lahf
mov
pop
popf
aam
mov
mov
es
mov
out
push
gs
sbb
je
rolb
push
inc
sub
pusha
popf
aaa
pop
push
test
cmp
mov
das
push
and
jae
add
xor
mov
js
sub
or
xchg
add
dec
ret
push
push
pop
dec
out
rcrb
mov
enter
dec
inc
ret
jbe
lea
test
jb
and
mov
jle
fadd
xchg
mov
jne
jge
push
lea
jle
and
out
adc
xor
jmp
aaa
loope
pop
add
ljmp
jmp
ds
shl
jbe
cli
mov
lods
xchg
lods
mov
je
inc
out
testl
enter
rclb
test
imul
pushf
xor
mov
sbb
sbb
sub
jb
push
add
xlat
int
lcall
insl
outsl
xor
cmpsl
mov
imul
lret
les
lret
cltd
pop
xchg
in
inc
mov
jl
movsl
inc
in
jb
jmp
push
fldl
xchg
lea
sbb
push
cmp
mov
pop
and
inc
cmp
push
pop
roll
rorl
pop
stc
cltd
sti
pop
outsl
push
int3
mov
loope
imul
in
xor
scas
mov
jge
push
lret
inc
sbb
test
dec
dec
repz
adc
mov
xor
mov
xchg
notl
inc
fwait
inc
pop
das
aas
test
xchg
push
test
js,pn
mov
mov
dec
fldcw
cmp
sub
inc
insb
add
ljmp
pop
xor
stos
aaa
xor
fisubl
push
adc
add
fscale
ja
mov
scas
push
test
insl
push
fdivrs
or
sbb
adc
decl
es
into
lret
inc
test
inc
add
daa
movsl
jl
xor
imul
test
lahf
sbb
cmp
roll
adc
mov
cmp
fsubr
test
xor
pop
mov
cmpsl
test
lret
pop
fistps
xchg
push
add
ljmp
fs
mov
fsubl
sub
fcom
push
sbb
out
dec
and
push
jnp
mov
shll
xor
mov
shlb
into
jns
mov
add
pop
dec
sbb
jl
out
mov
aam
dec
inc
cmp
xchg
subb
mov
fsubrs
push
inc
push
scas
lock
imul
out
test
pop
in
insb
cmp
inc
out
push
test
lcall
ret
lds
push
push
movsl
push
sbb
jbe
ja
ret
jns
xor
push
shrl
xor
outsl
lods
lret
shr
nop
popf
jne
inc
mov
clc
loopne
xlat
iret
cmp
fdivl
arpl
movsl
push
and
add
dec
loopne
xlat
adc
xchg
jle
hlt
jbe
hlt
push
dec
adc
sbb
lods
and
imul
aad
ljmp
lds
cmc
shll
adc
loope
or
xor
pop
pop
mov
adc
movsl
pop
sar
ds
mov
leave
jae
out
dec
mov
add
xchg
js
pop
cmp
push
testl
push
add
ffreep
out
mov
mov
aaa
shrl
ret
sti
fidivs
addb
clc
dec
inc
cs
pusha
lahf
adc
iret
jno
loop
idivl
jge
shrl
sub
pop
outsl
jl
leave
imul
bound
pop
ja
dec
and
sbb
ljmp
movsl
mov
arpl
mov
jl
fcomps
shrl
fwait
adc
or
cmp
push
cmp
and
jp
insl
or
lahf
shll
sbb
jmp
or
xor
sub
pusha
cmp
fisubs
sub
push
ds
in
cmc
fcmovb
cs
lods
mov
push
nop
in
sti
sti
aad
out
icebp
adc
xchg
data16
xlat
mov
stc
movsl
fidivrs
push
jae
mov
imul
out
dec
cmp
mov
sbb
inc
lods
dec
xchg
movsl
popa
stos
dec
shll
inc
fbstp
loope
pusha
imul
mov
sub
add
and
dec
sbb
mov
mov
fcomps
or
xchg
shll
jmp
dec
aad
mov
mov
lret
js
push
sub
ret
dec
faddl
imul
jo
js
pop
out
inc
out
jb
push
push
or
add
jge
movb
out
add
xor
jp
inc
push
mov
push
inc
subl
clc
ljmp
icebp
adc
sub
push
dec
mov
pop
icebp
xchg
pop
cmp
dec
pop
jo
push
sbb
mov
sbb
cmc
movsb
imul
mov
pop
aas
add
cmp
fsubrs
jns
mov
mov
int
inc
or
shlb
shrl
sub
movsl
cwtl
and
mov
das
sbbb
fidivrl
mov
xchg
test
in
cmc
xor
in
push
scas
adc
test
shlb
and
addl
into
scas
adc
sub
xor
lcall
pop
push
fcmovu
xor
and
push
loope
pop
nop
inc
push
not
popa
push
xlat
popfw
pop
cmpsb
dec
mov
ret
push
int
mov
leave
mov
push
add
jne
jle
pusha
jmp
pop
and
mov
mov
inc
sbb
aam
jle
in
add
cmp
shll
clc
jecxz
push
mov
push
or
test
mov
rcrl
mov
pop
jg
imul
push
hlt
xchg
inc
mov
lods
xchg
leave
jb
push
mov
mov
popf
fmuls
sbb
xor
shr
mov
push
inc
js
aaa
das
mov
cli
xor
ret
in
ds
jl
push
and
xchg
xchg
roll
call
pop
aas
mov
sub
dec
push
cmpsl
lcall
testb
sbb
or
adcl
or
inc
out
cmpsl
xchg
imul
scas
mov
dec
jnp
dec
test
lds
and
xchg
xchg
out
insl
clc
inc
mov
jo
xchg
cmpl
add
and
cwtl
in
iret
mov
xlat
int
dec
xlat
ss
out
lcall
in
sub
scas
sbb
push
or
enter
jecxz
dec
mov
fcoms
xchg
xchg
push
enter
pop
jge
test
push
xlat
std
les
push
popa
add
adc
or
movsb
fistl
dec
out
xor
ljmp
pop
cli
icebp
mov
adc
mov
mov
push
sub
dec
lock
jnp
leave
xchg
adc
mov
mov
inc
repnz
mov
outsb
sub
pop
repz
test
movsb
loopne
test
jecxz
lret
sbb
shl
add
imul
add
addl
xlat
cmpsl
jle
mov
jne
sarl
mov
push
popf
xlat
push
inc
push
inc
rcl
sbb
cmp
and
and
xor
mov
ficoml
lea
xorl
dec
add
fistps
sbb
icebp
lods
xchg
setg
adc
adc
enter
roll
lods
insb
pop
push
hlt
cmp
lcall
dec
cmpsb
pop
int3
loop
pop
cld
div
jnp
insb
cli
mov
and
pop
cs
cld
fwait
enterw
fadds
filds
jne
mov
cmpsl
jo
fabs
loopne
mov
in
push
popf
cmpsb
inc
in
dec
pusha
sbb
mov
in
sub
inc
jle
lods
adc
jo
cmpsl
add
bound
or
dec
cmp
push
sti
cmc
sarl
pop
jnp
inc
fcoms
jns
xchg
xchg
fisubs
pop
mov
test
scas
sub
mov
out
dec
test
sub
mov
test
xchg
testl
sub
sub
ss
les
sarl
pusha
int
in
mov
push
xchg
push
dec
imul
roll
loope
data16
inc
dec
cmp
xorps
inc
int
xor
lds
stos
add
push
and
dec
stc
jle
cs
xor
sub
mov
subb
cmpsl
sbb
orl
add
adc
cltd
jmp
imul
pusha
mov
add
xor
das
sbb
scas
xchg
xor
scas
icebp
fcoml
ja
dec
sbb
adc
das
in
dec
inc
xor
jns
cmp
sbb
imul
test
shll
mov
mov
adc
pop
jecxz
jnp
adc
fdivp
lods
push
movsl
jo
xchg
inc
mov
jecxz
loope
sar
addr16
mov
repnz
push
lea
movsl
inc
push
inc
sub
or
add
mov
test
test
cli
adc
aaa
xchg
or
xor
roll
mov
and
mov
mov
ja
lcall
adc
pop
movl
jno
stos
mov
or
or
jg
ss
dec
jb
lods
loope
or
push
inc
outsb
rcl
pop
loop
push
jb
cmp
cmp
cmp
inc
btc
cmpsb
ret
dec
mov
xor
pop
add
fistpll
mov
mov
pop
lahf
mov
mov
imulb
ds
mov
xor
lock
cmpsb
repz
and
nop
insb
push
movswl
and
adc
fwait
inc
mov
xchg
out
inc
inc
sbb
lcall
sub
inc
mov
mov
aaa
sbb
sub
clc
xchg
outsb
aam
push
push
sbb
pushf
movsb
mov
leave
leave
mov
mov
jo
cmp
sbb
add
mov
imul
ja
inc
xchg
adc
mov
and
add
push
or
nop
add
dec
mov
lods
push
push
popf
dec
xchg
fidivs
daa
jns
lahf
xchg
mov
loope
cmpps
pop
cmc
pop
xchg
dec
dec
push
in
je
xor
ret
insl
nop
cmc
jbe
sub
add
mov
pusha
fsubrs
sbb
outsb
data16
lock
enter
mov
lret
inc
insb
divl
push
jbe
inc
gs
or
int
sub
lods
pop
repnz
andl
sahf
lret
insl
bound
and
inc
add
daa
js
jbe
popa
inc
stos
pusha
ss
leave
jbe
pop
xchg
in
xchg
cmc
dec
xchg
fldt
lret
stos
jp
cli
test
outsb
push
loop
add
push
sbbl
push
jne
xchg
mov
enter
iret
xorl
shll
ljmp
and
cmp
adc
add
mov
mov
stos
in
dec
dec
mov
xor
pop
sub
rcr
dec
hlt
scas
bound
lret
push
or
sbb
mov
repz
cmp
jbe
ja
loop
mov
aaa
fstps
arpl
dec
in
lods
popf
push
xor
and
cli
out
add
adc
insb
add
jb
sbb
xchg
sbb
pop
xchg
push
xchg
push
cld
jg
lcall
mov
movsl
test
jmp
jp
dec
xchg
aas
movsl
xor
xchg
sub
lret
ret
jae
adc
xlat
rclb
dec
cmp
lcall
mov
adc
xchg
mov
es
test
das
push
ret
pop
lods
data16
in
cmp
ss
loop
cltd
inc
popa
dec
push
mov
jae
mov
fdivl
ret
gs
incb
stos
xchg
fs
cmc
push
pusha
xchg
xor
sbbb
enter
cmp
xchg
push
shrb
xor
loope
mov
movsb
mov
in
test
in
inc
mov
xor
xor
add
iret
das
cmc
subb
add
addr16
inc
xchg
cmpsl
jl
jmp
jecxz
jecxz
rcpps
add
sarb
and
loope
into
or
rep
movsb
pop
movsl
fwait
out
xchg
subl
lahf
push
xlat
push
xor
jnp
shll
jb
cltd
mov
sub
data16
push
js
inc
rorl
lahf
jo
ror
sub
push
add
dec
pop
pop
je
fnstsw
adc
or
icebp
cmp
aam
pop
push
or
add
push
pop
out
stc
mov
pop
gs
jp
jle
inc
sub
cmc
ret
test
add
popf
in
xchg
aas
inc
pop
push
jno
xchg
adc
dec
mov
sbb
adc
lcall
pusha
dec
mov
orb
xor
jecxz
dec
mov
das
mov
mov
out
pop
sub
mov
pusha
rcll
xor
int
cld
jo
in
xchg
sub
leave
movsb
test
fstpt
divl
out
pusha
xlat
xor
fidivl
insl
out
lret
xchg
add
inc
xchg
insl
stc
cmpsb
cmp
lods
je
push
std
cmp
pop
add
mov
jl
mov
lret
test
jnp
subb
enter
roll
cmp
push
jge
sbb
dec
aas
insl
cmpsl
or
mov
adc
test
xor
enter
push
iret
mov
dec
out
push
daa
pop
adc
das
sbb
pop
pop
andl
jg
aaa
std
xor
push
pop
out
shlb
sbb
adc
outsl
pop
jge
mul
int3
add
insl
add
cld
jecxz
mov
jl
jns
sbb
test
clc
jno
loope
add
popf
mov
cmpsl
cmp
push
sub
dec
ja
in
inc
jo
loopne
xor
jle
mov
sub
add
xchg
sti
sbb
jl
jno
inc
mov
rclb
aas
xchg
addr16
sub
das
push
dec
popf
fnstcw
in
add
jno
lahf
popa
je
xchg
addr16
sub
out
out
xchg
ds
jae
mull
enter
jle
je
jnp
push
pushf
loop
fidivl
xchg
in
push
ret
xchg
dec
push
xchg
mov
xchg
pop
stos
mov
repnz
mov
add
xchg
gs
inc
fcomps
dec
pusha
dec
inc
mov
pop
into
dec
pop
leave
nop
adc
mov
clc
jmp
jp
lock
pop
sbbl
push
rolb
fisttps
notl
and
add
sbb
incl
je
aaa
adc
jge
xchg
push
cli
mov
xor
sub
push
testl
jecxz
test
stc
pop
je
dec
int
clc
cmc
jmp
jecxz
add
cmp
adc
sbb
iret
mov
push
push
lcall
clc
lds
orb
dec
ss
inc
push
sbb
pop
pop
sti
xor
sti
clc
test
inc
cmpsl
cld
fldt
fwait
xor
or
jb
pop
jns
into
pop
sub
xchg
stos
push
add
lahf
loop
rcll
dec
mov
sbb
mov
adc
push
push
dec
mov
sbb
jecxz
sub
out
add
add
test
xchg
xor
scas
cmpps
test
daa
and
mov
jle
addr16
lret
out
data16
mov
sar
in
push
fwait
push
repz
sub
xchg
cmp
pop
mov
inc
rorb
mov
add
pushf
out
cmp
pop
xchg
xchg
mov
leave
aas
inc
cmc
and
in
das
xchg
scas
loopne
xchg
cmp
jnp
stos
dec
hlt
mov
sub
imul
jg
jl
div
mov
rclb
lea
lds
pop
lds
inc
ss
push
jecxz
adc
inc
mov
mov
sub
movsl
outsb
and
and
pop
jmp
in
mov
pusha
cmp
lahf
pop
jne
dec
inc
pop
inc
inc
dec
sub
jnp
mov
outsl
popl
call
cltd
mov
popa
adc
add
sub
sub
jne
fdivr
andl
dec
sbb
xchg
mov
mov
hlt
aam
into
hlt
jo
das
sbb
aaa
pop
pop
add
std
shll
fs
clc
jbe
sub
outsb
jb
test
push
mov
xor
jno
out
aaa
out
xchg
lret
dec
and
ror
vpcomuw
jo
sbb
cmpl
adc
rorl
add
xlat
or
xor
sti
push
xchg
lcall
dec
arpl
rorl
popa
and
lahf
outsb
std
ficoms
arpl
xchg
cltd
inc
pop
xorl
aad
mov
xchg
in
in
add
dec
inc
xchg
enter
mov
cmpsb
shrl
icebp
dec
inc
dec
aas
aaa
fdivrp
jb
jmp
incb
xor
xorb
inc
dec
into
jmp
arpl
outsl
jne
repnz
push
mov
cs
push
xchg
inc
sbb
sahf
adc
sub
insb
add
jecxz
ret
lods
lcall
lock
lret
sub
sbb
cmp
in
xor
xor
mov
sti
push
add
sub
mov
ficoms
mov
mov
loope
jae
mov
incb
sbb
xor
push
mov
repz
or
outsb
jae
repnz
xor
cmp
fimuls
xchg
inc
or
push
cltd
dec
push
fldt
pop
pop
pusha
add
jb
xchg
push
je
or
jae
movb
xor
mov
xor
jbe
dec
jns
int3
ljmp
jnp
pop
mov
lret
in
add
pop
xchg
jmp
bound
iret
cmc
ret
out
add
lret
mov
jnp
push
add
and
fildll
xrelease
int
inc
adc
inc
cmc
popf
loop
andb
jno
mov
pop
dec
shrb
lret
js
push
mov
mov
aas
je
dec
add
pop
push
cwtl
xchg
imul
mov
mov
mov
xor
mov
push
mov
push
sbb
inc
cmp
inc
gs
mov
mov
jecxz
jl
mov
mov
adcl
xor
jb
pop
pop
xor
out
in
sahf
cmp
xor
leave
jl
xchg
aam
sub
insb
fstp
loope
xor
pop
daa
mov
jge
cmp
add
es
xor
movsb
mov
jl
loopne
int
xor
icebp
imul
lock
mov
cmp
cmp
sbb
test
pop
fs
lods
fadd
mov
adc
in
inc
sub
xchg
mov
jo
and
pop
push
dec
dec
pop
sub
adcl
sbb
scas
jae
mov
and
sub
cmc
mov
out
lods
fsubrs
rol
cmp
xchg
dec
ret
xchg
imul
mov
jl
lret
adc
mov
clc
pop
xchg
inc
and
inc
sbb
inc
push
test
cli
out
xor
push
and
lods
pushf
xor
push
out
sub
inc
and
inc
mov
in
stos
lods
test
and
popa
xor
notb
ret
jnp
mov
jo
mov
jbe
adc
add
inc
push
mov
mov
stos
push
mov
mov
xchg
gs
fld
fwait
in
mov
sbb
mov
jo
xor
cmp
jae
jnp
cmp
sbb
sub
insl
icebp
lea
mov
shrl
ficompl
into
pop
jecxz
add
fisttpl
inc
inc
divl
adc
dec
mov
lcall
test
sbb
push
js
or
mov
pop
popa
je
out
shll
pop
xchg
add
mov
andl
xchg
sub
lds
push
and
sub
mov
nop
mov
repz
fists
je
rclb
inc
and
adc
push
ja
add
jo
jmp
out
in
notb
sbbb
aas
inc
inc
cmp
jmp
aas
fidivrs
dec
leave
pop
fisttps
decl
repz
mov
adc
add
faddl
dec
and
xchg
mov
adc
dec
jb
inc
or
xor
mov
cmp
lods
out
cwtl
ret
or
test
in
or
roll
jbe
insb
mov
and
ret
loopne
out
test
adc
mov
rcr
inc
cwtl
std
sti
xchg
and
xor
insb
stos
dec
pop
popf
popf
push
jb
rcrb
push
mov
pop
xorb
call
mov
jne
mov
push
lret
or
insl
fisubrl
jmp
out
xchg
out
push
push
push
cmp
movsb
push
mov
xchg
or
cmpsb
mov
jae
jo
cmpsb
sbb
mov
cmpsb
cmp
loop
dec
cmp
cmp
xor
mov
dec
arpl
sbb
mov
js
xor
shll
enter
imul
ds
jmp
jg
bound
and
insb
pop
mov
into
cmp
dec
test
out
mov
sbb
xor
dec
ja
rcrb
or
xor
jmp
pop
repz
loopne
enter
add
outsb
popa
adc
adc
jle
xchg
sub
xor
test
sbb
and
aad
inc
je
andl
loope
xchg
jg
adc
xor
mov
out
subl
test
cmp
push
push
push
inc
inc
ds
jg
pop
inc
jns
and
pop
loope
cmc
cld
loope
xchg
push
outsl
cmp
data16
das
sub
adcl
divb
out
jne
add
les
push
popf
fldenv
stos
mov
lods
scas
ss
mov
pop
push
fdivr
addb
push
lods
shrb
popa
xchg
lock
inc
push
xchg
jge
idiv
xorl
mov
xchg
inc
mov
sbb
mov
hlt
out
ljmp
xor
nop
fldt
pop
mov
inc
mov
hlt
pop
xor
into
xchg
adc
test
push
negl
fmuls
or
leave
lret
cmp
xor
mov
and
mov
in
stos
xor
sub
fsubrl
adc
test
jnp
into
add
test
sbb
test
test
imul
dec
pop
mov
loop
adc
pop
push
sti
clc
fldl
fsubrs
popa
cltd
iret
jo,pn
lahf
mov
sarb
push
and
xor
sub
leave
call
dec
jge
negl
or
and
inc
sub
jo
arpl
scas
jmp
push
dec
enter
rcrl
jo
sbbl
cmp
sub
jg
imul
insb
inc
lret
or
enter
xor
push
cmc
cmpsb
sbb
adcl
cmp
fisubrl
lods
mov
rorb
ds
xchg
daa
mov
mov
adcl
push
mov
test
test
inc
xlat
or
shlb
in
lea
adc
push
push
js
push
repz
mov
jle
or
mov
in
loopne
cwtl
cmp
ljmp
jo
ja
lret
in
shll
cwtl
dec
xchg
or
jns
ja
roll
mov
inc
xorl
sbb
negb
xor
enter
and
cmp
mov
out
jp
scas
mov
mov
add
mov
jbe
lds
pop
scas
ja
movb
imul
mov
mov
xor
cmp
mov
fwait
fs
dec
insb
dec
mov
add
sub
in
loope
popf
or
sbb
hlt
hlt
xchg
dec
out
ror
les
pop
sub
in
movsl
andb
jl
push
pop
ror
cmp
push
addb
sub
clc
out
xorb
sub
lods
xor
and
iret
pop
outsb
jle
jmp
mov
cmp
subl
aaa
xchg
aad
pop
fsts
or
sbb
outsl
lds
pop
push
add
inc
fbld
das
sub
test
fdivs
jnp
mov
xor
xor
aas
addr16
mov
lret
mov
add
mov
loopne
pop
mov
aam
dec
inc
push
xchg
push
sub
mov
pop
xadd
push
addr16
test
mov
jb
mov
cs
xchg
add
cmp
jp
sbb
out
dec
subl
lret
popa
mov
inc
inc
gs
ret
cmc
jge
ljmp
and
dec
or
in
ljmp
sbb
lock
adc
cmp
jle
mov
loope
pushf
pop
mov
xchg
jecxz
jns
and
cmpsl
lods
dec
cmc
shl
out
mov
mov
jge
jle
inc
cli
mov
xchg
adc
call
rcll
adc
and
fsubrs
neg
test
orb
bound
inc
sub
ret
push
and
dec
pop
ja
stos
insb
andb
xchg
xchg
sbb
inc
mov
cmp
or
call
push
lods
in
aaa
sub
rcll
mov
out
inc
dec
or
movsl
push
xchg
out
cmp
sti
fsubs
or
add
int
scas
sub
inc
cwtl
stc
mov
xchg
cltd
pusha
xor
and
xchg
jo
or
mov
mov
pop
das
add
dec
xchg
pop
mov
xor
add
cli
imul
mov
in
mov
push
xchg
add
pslld
push
outsl
lods
fistl
mov
cmpsb
dec
adc
lds
or
dec
mov
mov
mov
stc
fs
xchg
mov
enter
pop
outsb
sti
inc
outsl
js
jo
xchg
inc
adc
xor
shlb
add
sahf
aaa
es
scas
jne
repz
cmc
lods
icebp
cld
out
cmp
push
out
aad
cli
xchg
daa
fsubl
lock
xor
call
xchg
ljmp
daa
sbb
xor
cltd
fs
pop
xchg
sub
jno
or
and
dec
arpl
daa
pop
rcl
imulb
mov
fisttps
std
pop
test
pop
mov
sub
or
addr16
fcmovbe
jae
bound
pop
cmpsb
leave
adc
out
xor
dec
mov
imul
jbe
lcall
push
cs
imul
cmp
movsb
stos
jae
cmp
daa
add
adc
ficoml
idivb
rcrb
stos
das
add
mov
and
inc
inc
repz
mov
loop
adc
mov
xor
je
cmp
out
test
ds
adc
add
imul
sub
mov
mov
sub
sbb
mov
lods
sbb
lock
pusha
cmp
mov
push
and
out
mov
cld
data16
mov
fs
jle
sbb
lret
xor
out
into
adc
and
xchg
mov
inc
call
adc
rclb
fstps
sbb
adc
inc
in
and
sub
into
jmp
ret
lret
jnp
xor
dec
outsb
mov
adc
aas
fwait
scas
fsubl
sbb
out
jo
mov
sbb
and
icebp
repnz
sub
cmpsl
xchg
clc
cs
xchg
sbb
and
aaa
pop
adc
or
fsin
rclb
jge
sbb
addr16
loopne
fwait
jle
mov
lcall
std
mov
jmp
push
mov
push
and
into
cmp
push
cltd
push
inc
cmc
arpl
mov
int
rorb
jl
mov
fmul
push
sub
cli
int
daa
int3
and
mov
imul
ja
inc
lds
hlt
out
rcll
xor
sub
pop
xchg
jp
cwtl
ficoms
cmp
fwait
mov
into
out
dec
fbld
xor
xor
cwtl
mov
loopne
jno
cwtl
xchg
xor
imul
push
lahf
mov
lods
in
scas
movsb
das
loopne
loop
add
outsl
add
push
mov
cld
movsb
push
arpl
aad
mov
sub
push
cli
aaa
xor
jbe
cmp
addl
notl
dec
int
xor
outsl
mov
sub
xchg
lret
ret
push
adc
xor
cs
sub
mov
js
inc
dec
xchg
sub
movsb
sahf
call
xorb
mov
inc
mov
and
shrw
ror
das
negl
sub
add
fimuls
add
orl
lret
fimuls
push
imul
add
push
sar
cmpsl
jno
adc
xor
fdivr
xor
cltd
inc
mulps
xchg
jne
aam
or
dec
hlt
inc
adc
push
sub
ficoms
jle
sub
mov
cli
sbb
addr16
adc
mov
mov
das
in
rorb
xor
aas
mov
push
xchg
fdivs
cwtl
jl
and
out
xor
cmp
adc
fists
cld
inc
push
je
sbb
repnz
cmp
add
lds
fldenv
mov
sbb
xchg
cmp
loope
test
cld
pop
aas
ds
mul
push
sbb
push
fxtract
shl
or
aam
pop
mov
lahf
test
andb
fwait
add
in
lcall
xor
pop
add
mov
int3
adc
push
mov
lds
stos
and
mulb
or
push
jnp
shrl
bound
pop
enter
xchg
cli
fistps
adc
nop
int3
scas
scas
cs
push
outsb
enter
gs
sub
and
pop
enterw
lods
mov
dec
leave
shrb
out
sub
ja
bound
insl
mov
mov
fcmovnu
cmp
adc
outsl
add
lods
mov
mov
lret
xchg
sbb
push
mov
mov
arpl
fcom
cmp
dec
and
stc
cmp
push
jge
pop
cld
js
mov
sub
jl
lea
xor
push
shll
fwait
sbb
sbb
aas
xor
inc
cmp
cmc
sbb
and
lds
jno
jno
mov
scas
jns
out
xlat
adc
and
dec
and
shr
in
js
mov
adc
stos
test
jnp
add
sub
vmread
xchg
push
test
push
mov
data16
pop
aam
inc
not
add
fisttps
push
stc
mov
stos
scas
pop
xor
nop
int
sbb
lret
notl
out
shrb
leave
pop
sbb
ret
jecxz
mov
push
cs
ds
and
xchg
or
scas
sbb
das
pop
mov
adc
push
add
xor
jmp
pop
addr16
fists
decl
push
xor
dec
shl
dec
pop
or
mov
roll
outsl
std
inc
in
pop
shll
ja
mov
test
dec
push
cwtl
xchg
divb
dec
add
dec
ja
rclb
xor
sbb
pushf
sbb
lods
inc
cmp
jne
or
mov
cmc
cmp
sahf
jns
pop
xor
inc
loopne
push
test
in
cmp
aad
xor
or
lret
dec
int3
push
fsubs
dec
fdivs
out
es
and
dec
mov
lret
pop
test
in
loopne
pop
xchg
flds
mov
inc
nop
sub
cwtl
sahf
mov
negl
dec
int
dec
cmp
cmpsb
ljmp
or
lods
imull
xor
cmpsb
iret
push
mov
addl
pop
push
mov
and
xchg
cwtl
xchg
fadds
inc
in
movsl
xlat
sub
cmpsl
adc
in
lcall
imul
sbbl
into
xor
adc
inc
iret
mov
loop
andb
call
aas
out
mov
add
xor
add
imul
repnz
clc
lods
gs
icebp
or
cltd
cmpsb
xor
enter
scas
fwait
mov
loopne
sti
frstor
aaa
js
je
movsl
mov
push
cmpsb
cli
je
dec
faddl
adc
or
xchg
sar
test
mov
sub
or
ljmp
xlat
cmpsb
std
sarb
mov
out
stc
inc
test
pusha
pop
loop
inc
pop
repz
and
jnp
insb
mov
inc
push
inc
js
fdivrl
push
fcoms
add
pop
pop
imul
or
imul
or
pop
sbb
jnp
test
mov
leave
aas
xor
mov
inc
rolb
pushl
jl
leave
push
jbe
add
in
jge
adc
push
repnz
mov
fdivs
stc
sar
lods
adc
xchg
push
inc
lcall
into
jle
lret
ret
mov
jb
lds
adc
push
xchg
outsl
add
push
push
adcb
int3
sbb
xchg
jb
int
push
lods
shrb
out
mov
mov
dec
cmp
add
inc
jmp
cltd
outsb
or
cmp
and
jno
rep
cmpsb
mov
rol
cmp
adc
ret
add
xchg
inc
mov
sub
test
dec
adc
xchg
mov
ja
sub
stc
xchg
adc
xor
jb
ljmp
sub
xchg
jnp
cmp
test
pop
imul
jne
xor
stc
add
mov
jno
and
dec
xlat
pop
fildll
lods
aam
pushw
mov
repz
and
mov
cmp
loopne
cmp
inc
cmp
inc
push
test
mov
mov
fcoml
rclb
movsb
adc
or
fidivrl
cmpsl
push
repnz
inc
cmpsl
mov
mov
sbb
movntq
outsb
cmp
test
or
pop
cmpsb
ficomps
lcall
movsl
ja
addl
add
mov
xlat
jo
stos
mov
mov
je
or
inc
xchg
or
in
fistpl
mov
add
xor
outsl
orl
cmp
dec
aad
mov
fdivl
nop
pop
inc
sbb
std
das
popf
sbb
xchg
xchg
mov
mov
jb
int
sbb
rcrb
nop
fdivr
adc
fistps
push
sahf
add
cld
xchg
outsb
xchg
dec
sub
fists
pusha
add
es
ss
jecxz
add
pusha
cmp
adc
push
push
xor
and
fsubrl
add
lock
push
xor
sub
adc
or
sub
add
mov
insb
inc
scas
mov
pop
repnz
test
lods
sub
jb
ss
lret
pop
call
icebp
or
and
inc
incb
mov
movsb
mov
xorb
scas
fs
jecxz
imul
jmp
cwtl
mov
sbb
daa
add
lds
and
add
fstps
pop
add
cmpsl
mov
lods
dec
mov
xchg
adc
jb
imul
loop
inc
add
hlt
cmp
cmpsl
test
jg
mov
or
cmp
pop
hlt
pop
jo
and
pusha
ds
pop
xchg
jno,pt
dec
pop
dec
dec
xor
add
sbb
push
sar
mov
nop
test
hlt
mov
jne
and
xchg
into
ljmp
cmc
mov
push
rcrl
adc
push
xchg
cmp
lds
cmp
xor
loop
mov
push
insw
sub
mov
mov
fyl2x
cmp
push
sub
shlb
in
xor
fstps
shl
or
imul
pop
loop
mov
pusha
sahf
aam
pop
mov
fcomps
adc
add
sarb
push
imul
xchg
movsb
xorl
jno
or
fildl
repz
and
pop
mov
adcb
addb
js
in
pop
iret
mov
sbbb
xlat
adc
or
aas
jno
shlb
or
clc
xchg
fidivrs
ficompl
insb
cmc
aam
add
out
sbb
xchg
in
es
mov
insb
stc
gs
cs
shrb
sub
jl
gs
and
cltd
push
adc
mov
mov
and
cmpsl
arpl
pop
ss
int3
inc
cmc
jmp
mov
xchg
lods
repnz
ja
xchg
filds
adc
push
nop
leave
mov
je
aad
outsb
mov
cli
popa
xor
test
pop
sti
popf
jne
mov
outsb
push
test
mov
sub
jl
dec
dec
cs
dec
addr16
mov
scas
jle
add
loopne
mov
cmpsl
sub
rclb
jl
push
out
loope
pop
leave
or
cld
inc
ficoms
dec
adc
xchg
js
lea
shlb
push
lods
movsb
lret
pop
dec
movsl
iret
xchg
cmpsb
jecxz
add
inc
adc
shr
push
push
xchg
inc
in
call
inc
and
sbb
mov
push
ljmp
mov
xchg
in
cmp
mov
inc
xor
pop
xlat
inc
or
icebp
fdivs
add
lcall
mov
cmp
xchg
test
jno
es
inc
scas
ds
in
push
xor
ret
sub
fimull
mov
insb
iret
frstor
push
sub
sub
movsb
push
aas
inc
xor
movsb
sar
pop
mov
mov
jmp
push
inc
add
cwtl
mov
out
fidivl
jnp
jmp
add
push
out
gs
lret
add
in
jno
and
xchg
and
xor
push
iret
cmp
and
repnz
sub
aad
push
mov
loop
jnp
mov
movsl
cmp
xchg
leave
imul
lret
and
push
mov
jle
insb
pop
pushf
stos
out
xchg
mov
jno
cwtl
das
cmp
jnp
rcrl
cmp
push
not
dec
jo
inc
sub
loope
shrl
lahf
pop
call
call
push
imul
and
inc
push
cmp
daa
mov
xchg
jns
rol
jns
into
hlt
sbb
repnz
aaa
call
arpl
ror
fisubs
mov
scas
and
xchg
mov
jne
mov
fisubrl
cmp
pop
mov
mov
es
mov
subb
mov
push
adc
sbb
xchg
test
ljmp
pop
cmp
data16
dec
mov
or
int3
pop
jnp
cltd
lcall
mov
jmp
hlt
mov
lds
push
lock
es
mov
adc
or
pop
idivl
sahf
fnstenv
lcall
xchg
loope
cmp
into
mov
adc
xchg
pop
cs
xchg
jl
ss
mov
mov
mov
subl
inc
jo
mov
inc
cwtl
mov
xchg
cwtl
push
ret
xchg
sub
mov
dec
adc
cmp
push
mov
outsl
or
data16
in
rolb
mov
mov
cmpsb
call
test
int
outsb
pop
rcl
iret
inc
pusha
scas
dec
cld
mov
mov
outsb
popf
jo
xor
xchg
pop
mov
cld
cmp
in
test
push
adc
mov
aad
xchg
mov
push
cwtl
std
cmc
mov
pop
loope
int3
negl
xor
lret
mov
fucomi
adc
jnp
cld
jno
cwtl
pushf
sub
mov
pop
fcoml
mov
push
cmp
mov
dec
lahf
or
sub
pop
pop
cmp
mov
ja
popa
cmpsl
inc
mov
add
mov
jae
lret
daa
imul
je
add
sbb
sub
fisubl
out
popf
adc
popf
or
or
por
and
sub
xlat
mov
fisubs
lods
scas
inc
cmp
pop
sub
test
dec
sub
xchg
mov
dec
adcl
xchg
roll
xchg
sbb
repz
ret
jmp
daa
imul
rolb
lods
loope
test
std
icebp
test
aas
or
or
mov
sub
push
ljmp
cmpl
jns
imul
inc
insl
add
lea
arpl
iret
clc
pop
mov
pop
adc
xor
jmp
cmp
ds
mov
sbb
inc
push
and
sbb
jae
imul
mov
das
or
and
dec
or
mov
sahf
div
sti
add
or
cmpsl
add
fldenv
addr16
dec
mov
mov
mov
enter
shlb
in
xchg
shrl
or
xor
je
scas
inc
cmp
daa
add
cmpsl
movsb
in
or
adc
stos
pop
rcrl
pop
sub
lea
lock
jmp
jmp
ljmp
ret
out
jge
and
or
repz
mov
adc
or
sbb
inc
push
out
insl
cmpsl
adc
mov
ret
repnz
insl
cmp
adc
sbb
faddl
imul
or
je
ljmp
dec
mov
xchg
repnz
mov
pop
push
jb
xor
pop
xorl
loopne
aas
pop
test
inc
or
jge
imul
int3
movsl
sub
xor
sarl
fidivs
mov
xchg
jnp
imul
out
push
popa
mov
testb
sbb
js
lcall
into
mov
push
cmpsb
mov
dec
cmpsb
insb
xor
add
sti
mov
sbb
cmp
jns
adc
mov
jge
shll
xchg
cmp
adc
xchg
jp
or
icebp
adc
ss
out
enter
pop
orl
and
xchg
inc
scas
icebp
mov
out
pop
test
mov
ja
fwait
aaa
xor
pop
xchg
cmp
sbb
lret
js
js
insl
data16
pop
das
add
pushf
rcrb
mov
mov
push
mov
lods
cmp
fmuls
mov
push
mov
push
nop
stc
addr16
outsl
int3
sti
cwtl
xchg
clc
and
mov
repz
push
sub
cli
jne
out
ret
add
mov
bswap
and
jmp
addr16
mov
call
cmp
imul
ljmp
ja
push
jnp
xchg
mov
pop
pop
jae
xor
mov
aam
mov
lret
push
jg
sti
test
mov
inc
in
pop
lods
lahf
cmpb
xor
dec
cmp
mov
mov
cmc
ds
sbb
and
and
rcll
push
xchg
mov
rcll
repnz
in
rclb
testl
pop
cmc
dec
mov
lods
adc
je
push
mov
inc
or
hlt
pop
adc
jo
mov
nop
lret
mov
jg
int3
push
gs
mov
sbb
xchg
inc
pop
ljmp
bswap
xchg
loopne
adcb
stos
mov
adc
aam
mov
subb
ret
lea
cs
cmc
jo
movsl
mov
rorl
fcmovbe
or
inc
arpl
fcompl
cmpsb
popf
fildl
xor
cld
xchg
lahf
mov
xlat
adc
push
int
enter
lret
push
lods
mov
xchg
lret
lods
scas
sub
hlt
pop
mov
lret
dec
lds
lods
jo
push
mov
add
dec
repnz
scas
sbb
cmp
scas
addl
gs
sub
cmpsb
mov
push
pop
fwait
jl
lret
sti
sbb
push
xchg
daa
shll
repnz
loope
adc
jbe
scas
mov
xchg
xchg
repz
inc
mov
gs
jb
imul
mov
push
push
sbb
cltd
add
sub
pop
or
repz
nop
mov
xor
jae
xor
xor
pop
sub
xchg
inc
dec
mov
int3
or
push
jecxz
aaa
push
pop
or
pusha
ret
add
mov
pushf
or
bound
mov
and
jmp
ret
and
cmp
sub
add
jge
jae
fistpl
es
jl
dec
inc
pop
jnp
dec
jns
sti
or
jmp
out
mov
fimull
cmpsb
mov
jno
push
insb
or
add
out
cmp
lahf
imul
in
dec
jbe
cltd
xchg
add
lret
clc
pop
adc
in
es
mov
sahf
pusha
sbb
or
fists
adc
mov
dec
cmpsl
cmp
or
mov
xchg
pusha
orl
jno
loope
lahf
lcall
pop
lahf
rolb
les
into
hlt
mov
push
test
into
das
fcomi
mov
lret
sub
cwtl
adc
adcb
pop
inc
ror
stos
popa
push
or
popa
daa
pop
sub
jecxz
xchg
adc
lods
push
clc
mov
fwait
in
xchg
dec
icebp
andl
add
cmpsl
shrb
out
inc
xchg
xchg
mov
xchg
xchg
or
mov
mov
and
in
das
jns
inc
push
mov
mov
inc
or
cmp
cmpsb
mov
pop
mov
arpl
jns
clc
sarb
xchg
xor
xlat
and
daa
setno
and
sahf
dec
mov
inc
inc
pop
fucomp
std
cmpsl
mov
out
mov
mov
mov
mov
mov
int3
cmpsb
cmpsl
daa
cwtl
popa
add
mov
les
testb
mov
lods
or
in
mov
or
xchg
imul
jbe
mov
aaa
mov
xor
mov
out
fcoml
cmp
cltd
loope
push
add
and
cwtl
xchg
int3
insb
jnp
mov
aas
and
push
mov
sbb
inc
daa
std
and
jbe
push
xchg
frstors
xchg
sub
lods
jo
push
dec
jle
call
mov
arpl
sbb
out
loopne
pop
mov
rcr
movsl
adcl
popa
mov
push
jns
hlt
fadds
lret
lahf
lret
sbb
aam
test
ss
inc
fsub
es
xchg
inc
push
mov
pushf
xor
cltd
mov
bound
cs
jmp
into
xor
stos
ss
cmp
jo
divl
scas
push
shll
adc
jle
ja
fisubrl
fisubrl
fimuls
in
pusha
jae
sub
adc
popf
frstor
mov
adc
add
lock
add
clc
shl
cmpsb
mov
sbb
jae
jnp
out
int3
cwtl
bound
jns
inc
adc
jge
les
mov
sbb
je
xor
add
mov
sub
shl
and
ret
mov
mov
sub
lock
cmp
inc
xlat
sbb
shrb
dec
or
and
jg
fs
jns
jmp
repz
out
sti
xchg
hlt
push
adc
and
cmp
jns
inc
push
in
pushf
popa
mov
pop
clc
std
mov
mov
add
pop
pop
jbe
push
inc
es
and
push
jae
loop
mov
push
push
mov
sub
ret
test
sahf
xlat
jns
js
jnp
mov
bound
xchg
sbb
sarl
adc
jo
sub
pop
pop
fs
stos
filds
cmp
push
jnp
iret
iret
sarl
lret
subb
mov
fucomi
shll
hlt
adc
xor
jnp
or
fstps
xchg
pop
lcall
fadds
and
push
out
push
jg
add
sbb
mov
ljmp
lds
movsb
pusha
mov
roll
push
fistpl
xchg
jecxz
aad
push
sub
xchg
and
push
push
push
movsb
insl
jae
mov
cmc
lahf
inc
rcll
sahf
imul
arpl
mov
push
jbe
leave
sbb
add
loopne
sub
jp
dec
sub
data16
inc
call
sub
shll
jno
push
jne
scas
mov
sbb
adc
pop
xchg
enter
push
xor
xor
jg
int3
lods
add
mov
adc
cmpsl
dec
jne
test
add
call
xchg
add
mov
jae
rol
xchg
sub
mov
je,pn
into
pop
jle
das
stos
xchg
jnp
and
dec
or
lret
sbb
sub
loopne
jno
mov
aam
mov
jle
dec
cmp
mov
lods
or
mov
sub
adc
ds
pop
cmp
mov
sub
aaa
cli
jne
jnp
xor
or
push
in
sub
hlt
mov
mov
data16
jecxz
dec
stos
bound
mov
push
mov
je
addb
popf
push
std
lcall
pop
sub
push
clc
mov
push
pop
sub
dec
insl
mov
jge
mov
push
or
int3
setno
ljmp
xlat
push
fdivrl
dec
add
adc
mov
lea
inc
mov
sub
dec
int
mov
or
xor
insb
lods
xchg
loop
fcmovb
test
loop
jl
mov
and
jnp
int3
mov
pop
clc
fwait
cli
adc
xchg
sbb
outsb
rorl
bound
lret
shlb
mov
test
mov
int
ja
movsb
repnz
in
mov
mov
xor
mov
xor
movsl
shrl
ja
cwtl
mov
and
mov
jmp
cmpsb
mov
add
out
or
sub
cmp
in
push
mov
inc
cmpsl
dec
out
cmpsb
sbb
fstpl
xor
inc
pop
loop
fdivl
push
incl
xchg
cwtl
lcall
aam
cld
pop
out
out
stc
int3
sub
xchg
push
popf
jmp
cmp
out
lcall
adc
cwtl
nop
loopne
mov
scas
push
push
rclb
adc
ret
jnp
adc
icebp
js
int3
or
jge
sbb
mov
adc
femms
movsb
fistpll
iret
loop
enter
inc
ja
movsb
into
ja
loop
mov
xlat
sbb
cmp
jge
psubb
cmp
hlt
cld
test
xor
jmp
inc
stc
aad
cli
cmp
scas
inc
pop
mov
cltd
jae
orb
ds
jnp
xlat
mov
sti
jnp
test
fwait
adc
lds
xchg
push
stos
call
sbb
addr16
insl
add
popf
imul
mov
dec
inc
push
jmp
stc
xchg
mov
ret
cwtl
in
arpl
push
and
std
push
add
call
ds
pop
jno
pop
cmp
out
testb
sbb
or
cltd
cmpsl
mov
push
icebp
mov
mov
gs
fs
and
mov
cmp
into
push
and
mov
cltd
inc
pop
mov
xchg
aad
stos
ljmp
mov
dec
arpl
dec
inc
ss
pop
lock
loopne
sub
flds
scas
mov
stos
inc
icebp
outsl
cwtl
cwtl
mov
scas
aas
push
inc
or
xchg
and
lcall
stos
add
aaa
test
mov
pop
or
shl
fistl
jge
and
jge
orl
sbb
rcll
das
aam
test
rorb
add
cmp
or
adc
mov
in
call
jno
out
push
mov
mov
fstps
ret
shrb
sub
push
inc
je
mov
insl
jp
mov
ret
mov
rclb
sbb
pushf
imul
sub
cmp
es
sbb
pmuludq
jno
pop
jle
mov
es
inc
mov
sahf
push
add
roll
cmpl
loope
out
mov
data16
std
add
outsb
stos
in
mov
repnz
cwtl
push
arpl
mov
divl
jns
jnp
in
sub
push
rorl
pop
jmp
imul
aas
xchg
push
fldt
push
or
pop
inc
push
mov
outsl
aaa
les
andb
fdivrs
rorb
push
mov
xor
fsubrp
jmp
icebp
xchg
push
or
jno
lea
mov
dec
movsl
sub
and
sbb
iret
and
setle
pop
outsb
fdivl
sbb
mov
addr16
mov
xchg
push
jnp
push
mov
adc
mov
call
sub
fmul
mov
sbb
add
mov
cld
stc
dec
pop
stos
lcall
inc
call
jge
loopne
sbb
jg
sub
dec
mov
cld
sbb
push
lret
add
sbb
filds
hlt
jns
sub
mov
mov
mov
popf
subl
fsts
jmp
push
jge
in
cmp
pop
adc
nop
dec
and
jbe
imul
xchg
imul
push
mov
fs
cmp
pushf
dec
cmp
movsl
imul
shlb
jl
push
mov
push
call
sbb
mov
xor
mov
xlat
pcmpgtw
loope
gs
pop
pop
ret
ljmp
mov
sbb
aad
subb
pop
stc
repz
dec
jle
in
arpl
or
imul
inc
ja
or
sbb
jle
lods
lcall
cli
pop
mov
or
imull
mov
mov
fildll
ds
popa
mov
mov
mov
jl
xor
scas
ds
sbb
fdivrl
adc
xchg
cmp
xchg
ss
insb
add
inc
xor
push
inc
mov
sbb
cmc
roll
movb
push
lret
popa
mov
mov
imul
test
mov
mov
pushf
inc
cmp
pop
inc
mov
arpl
scas
cmpsl
call
pushf
dec
lahf
lods
mov
and
inc
or
dec
out
rcrb
or
jp
xor
cmp
xchg
push
sahf
cwtl
out
xor
bswap
push
fiadds
dec
notl
mov
popa
lcall
insb
cmpsl
stos
mov
pop
fsubl
cmp
mov
jnp
fwait
push
sti
mov
mov
jo
mov
and
cmpsb
jo
addl
pop
div
test
leave
cmp
push
mov
rcr
outsl
sbb
push
incb
jl
jp
stos
cli
cmp
int3
xor
mov
dec
fwait
sbb
xchg
lock
mov
pusha
or
scas
cltd
mov
jl
scas
dec
ret
xchg
test
adc
mov
mov
insl
jns
xchg
addr16
mov
mov
xor
ret
cmp
ljmp
mov
and
stos
mov
inc
push
fwait
cmp
mov
shll
mov
push
add
clc
in
imul
shl
pop
mov
daa
fbld
hlt
out
cwtl
jne
mov
jbe
dec
nop
pop
push
sub
push
or
lret
ljmp
outsl
mov
inc
fsts
imul
adcl
insb
movsb
xchg
in
nop
lods
cld
xor
mov
test
add
mov
push
aam
pop
push
pop
aaa
outsb
xor
out
inc
push
adc
push
cmp
cmp
daa
rclb
push
arpl
loop
push
aaa
add
out
roll
dec
cmp
lea
xor
lret
pop
pop
pop
or
push
or
add
sub
pop
jg
dec
fadds
ss
icebp
or
sbb
add
push
enter
in
mov
pop
lcall
pop
in
aam
push
xchg
movsl
inc
test
aaa
xlat
dec
inc
lea
xor
dec
hlt
sti
dec
mov
test
dec
push
shl
cs
mov
cmp
cmp
mov
out
or
call
inc
out
int
jmp
cmpsb
inc
lds
fsubs
xchg
add
adc
test
gs
mov
cmc
push
pop
test
es
inc
jnp
cmp
andb
pop
orl
jle,pn
xor
xchg
stos
clc
and
cmp
mov
dec
xor
pushf
shll
sti
mov
cmp
mov
fs
into
sbb
cltd
pop
mov
sbb
sub
out
pop
xor
mov
pop
pop
dec
hlt
xor
fcoms
sub
lcall
rorl
insb
add
daa
fnstenv
mov
cmp
aaa
fwait
cmp
mov
add
xchg
xor
leave
call
inc
enter
rclb
and
dec
mov
data16
inc
push
aad
cmp
mov
xchg
into
mov
dec
out
sbb
adc
push
mov
call
mov
xor
scas
fidivl
test
aaa
dec
sub
icebp
sti
test
rcrl
lretw
add
push
icebp
cmp
jne
xchg
call
cmp
mov
push
cmp
cmc
pop
and
addb
cmp
xchg
fadds
lahf
push
test
cmp
popf
adc
mov
stos
dec
mov
jmp
adc
je
test
xchg
push
inc
pop
jnp
std
cmp
mov
jne
lret
xchg
enter
inc
sbb
xor
mov
adc
cvttps2pi
push
pop
dec
or
mov
daa
mov
inc
sub
aas
jne
mov
xchg
inc
sbb
mov
push
in
lea
inc
add
out
lret
movsl
dec
jb
xchg
scas
push
pusha
jns
add
enter
add
add
or
inc
mov
push
or
xchg
xlat
mov
sub
cmc
xchg
mov
cmp
push
inc
jns
cmp
js
mov
inc
addr16
push
adc
dec
shll
mov
in
aam
mov
mov
ljmp
xchg
push
shll
movsb
add
mov
dec
jle
pop
aaa
xor
xor
jp
xchg
push
test
inc
add
dec
inc
or
gs
ds
mov
xor
jl
cmp
push
out
pusha
pop
or
mov
xorl
out
inc
mov
pop
sub
xor
pop
pushf
in
fiadds
mov
xchg
push
lods
js
adc
mov
repnz
adc
jns
dec
vcvtpd2dqy
push
inc
adc
out
dec
loop
or
inc
gs
into
jnp
pop
pop
fstpl
pop
mov
adc
adc
shll
andl
and
or
or
movsl
mov
push
push
fisubs
cmpsb
jae
out
mov
into
addr16
ficompl
nop
int
push
xor
xchg
push
pop
adc
push
insb
or
cli
dec
xor
ss
add
cmpsb
jmp
push
negl
jns
jmp
idivl
pop
inc
fcoms
nop
dec
mov
and
test
lar
add
jnp
cltd
popa
js
push
mov
pop
mov
out
repz
or
fwait
loope
mov
arpl
pop
adc
push
sub
arpl
pop
test
mov
rclb
cmp
adc
movsb
mov
test
in
jl
jecxz
fidivrs
mov
filds
cmp
mov
dec
sbb
icebp
pop
lods
push
push
fisubrs
scas
push
mov
pop
jne
sbb
into
in
sub
in
add
cmp
nop
xor
andb
outsl
iret
pop
fdivrl
insl
pushf
jmp
jmp
fwait
adc
add
pop
adc
or
xchg
fs
inc
ffree
or
xor
ret
push
filds
rcll
add
out
fbld
add
push
xchg
mov
sbb
mov
mov
inc
sbb
push
mov
iret
dec
xchg
movsb
xchg
push
jns
aam
push
mov
repz
push
adc
jb
insb
mov
pop
sbbl
xchg
mov
sbb
sub
xor
bound
or
pop
jl
mov
and
inc
gs
inc
hlt
mov
pop
jg
divl
aas
xchg
add
dec
scas
mov
push
xor
push
divb
daa
jmp
out
out
lret
out
xor
addr16
mov
je
or
sti
pop
or
enter
in
mov
xchg
iret
in
aaa
int3
cli
into
and
cs
imul
mov
stc
ud0
xor
mov
add
shl
sub
xchg
push
or
jbe
xorb
xor
adc
stos
sbb
xchg
mov
dec
add
les
or
xor
scas
enter
imul
xchg
aad
dec
insl
mov
mov
push
aad
movsb
andl
icebp
dec
outsl
mov
in
in
add
lods
xlat
jp
neg
fidivl
xor
xchg
lcall
push
ficoml
out
add
aas
test
add
sar
int
mov
popa
daa
inc
or
cwtl
mov
fnsave
adc
cmp
mov
lret
push
adc
cwtl
pop
paddw
movsl
sbbb
xchg
jle
and
stos
inc
xchg
pushf
cs
les
lods
leave
sbb
jg
rcrl
mov
lods
lahf
inc
and
cmp
shl
sub
inc
or
in
mov
push
and
xchg
xor
and
cmp
fldenv
dec
scas
mov
sbb
out
sub
push
and
lret
nop
pop
test
loopne
lret
push
lods
loop
xor
lahf
push
pop
cmp
mov
pop
cmp
mov
scas
jbe
sbb
stos
inc
loope
sbb
in
push
hlt
sahf
and
movsl
push
stos
adc
scas
inc
les
cmpsb
jno
nop
das
dec
mov
pmaddwd
jle
out
lods
arpl
das
xchg
pop
fidivs
mov
inc
push
sub
mov
mov
jo
dec
and
stc
notb
ret
aad
clc
shll
pop
cs
add
dec
jge
stos
xor
cmp
xor
es
aam
addr16
or
push
xor
popf
lds
sti
mov
inc
mov
ror
repz
ljmp
push
mov
jbe
data16
outsb
std
loope
pop
jle
jbe
and
cld
or
ficompl
fwait
mov
and
jbe
gs
cs
dec
stc
mov
jle
inc
lret
mov
mov
hlt
add
sub
and
std
jecxz
and
lret
mov
lcall
xchg
loope
scas
sub
into
mov
test
mov
add
push
loop
xchg
dec
sti
pop
dec
jle
mov
cltd
rcrb
dec
shr
movsl
fxch
xchg
fcoms
mov
test
das
xchg
pop
loopne
fdivl
pop
and
das
enter
mov
jl
outsb
pop
jno
add
pop
or
divl
jns
dec
popl
rcl
filds
pop
daa
inc
mov
jb
or
aas
xchg
out
jmp
mov
pop
fisubrs
dec
inc
loope
sahf
repnz
lds
out
mov
popl
and
mov
es
mov
xchg
xchg
inc
sub
stos
leave
sub
stos
outsb
test
jne
jae
add
inc
adc
int
or
fyl2xp1
sub
pop
test
push
aad
dec
dec
fldt
and
in
fs
sbb
jb
or
and
sub
mov
push
push
mov
adc
cli
int3
lea
add
adcb
shlb
xor
adc
xor
aam
mov
lods
cmp
fimull
lods
sti
into
sbb
iret
jg
test
push
ret
call
and
sub
mov
scas
cld
sub
pushf
pushf
lods
movsb
sarb
dec
lret
and
sub
xchg
gs
sbb
pusha
pop
lea
test
xor
bound
mov
mov
push
xchg
clc
or
das
gs
lcall
fsub
push
jg
jo
into
cmp
popa
loopne
comiss
push
jno
dec
inc
cwtl
and
out
dec
cmpl
add
and
dec
iret
and
fucomp
into
or
sub
movsb
rorl
xor
int
sbb
sub
arpl
test
aam
jge
add
pop
imul
pop
outsl
push
call
rolb
pop
lods
cmp
jg
popf
int
out
jne
lods
adc
shl
call
addr16
iret
jne
sub
jl
lret
mov
add
push
es
imul
dec
lds
pop
pop
addr16
sti
imul
gs
sbb
cmp
mov
lahf
js
pop
aam
push
ret
inc
std
hlt
fldenv
divl
xchg
xor
mov
mov
aaa
xor
fmul
cmp
mov
ret
ds
mov
sti
fisubl
outsb
dec
cmc
and
or
xchg
dec
jge
adc
gs
sub
push
andb
mov
xor
or
push
push
test
jne
movsl
jl
cmpsl
cmc
pop
inc
std
cmp
pop
inc
in
icebp
push
xor
adc
dec
test
outsb
sub
nop
fadd
cltd
xchg
mov
les
mov
cld
mov
jb
cmc
fsubl
jmp
loopne
fs
mov
into
cli
mov
adc
sahf
push
mov
in
jp
cld
adc
push
mov
inc
cltd
xor
inc
xchg
clc
int
fs
fs
or
aas
rcrl
subl
sub
pop
leave
call
push
out
adc
or
cld
or
adcl
imul
jp
push
jl
dec
fs
insl
lea
dec
jb
add
and
mov
mov
aas
lock
mul
test
xchg
inc
hlt
cwtl
and
fcmove
pop
mov
jae
cld
xchg
and
adc
or
dec
dec
mov
inc
popa
leave
loopne
mov
addr16
enter
hlt
std
inc
popa
ret
and
sbb
mov
mov
xchg
movsl
push
mov
rcll
ror
mov
rcl
xor
sub
sbb
sub
dec
pop
fsubs
dec
lods
xlat
push
adc
movsl
movsb
xchg
in
push
inc
inc
fcmovnbe
jo
sti
imul
xor
imul
out
pop
fwait
push
mov
mov
pop
lahf
add
xor
out
arpl
push
mov
sub
push
sti
xor
pushf
push
outsl
sub
and
pop
or
and
and
sbb
or
push
enter
pop
inc
mov
test
mov
sub
jmp
adc
sbb
data16
pop
cmp
and
dec
adc
and
leave
sub
add
lods
push
pop
dec
xor
in
inc
fnsave
mov
xor
mov
stos
ja
movsl
xor
mov
add
jecxz
movsl
inc
push
lret
dec
push
dec
jne
mov
mov
mov
push
adc
xor
jmp
pushf
sub
notl
hlt
push
lret
aaa
cmp
ficoml
add
mov
mov
add
icebp
or
and
xlat
pop
mov
jl
sbb
ljmp
xor
mov
rcr
jne
ljmp
call
inc
call
sarb
jnp
scas
push
add
jp
ljmp
xor
leave
movsb
and
cmp
mov
and
lods
mov
addl
pop
scas
inc
pop
into
pop
dec
add
shlb
mov
icebp
jae
fcmovnu
xchg
pop
stos
arpl
andb
bnd
mov
ja
and
into
in
popa
add
ss
inc
add
sub
pop
push
jnp
cmp
loopne
and
mov
push
movsl
sarl
jo
in
loope
ljmp
int
sbb
jle
sub
mov
mov
cmp
cmp
push
fistl
scas
es
xchg
fsubrs
mov
mov
imul
pop
and
sbb
gs
sbb
movsl
jecxz
movsb
jl
cmp
xchg
and
push
repnz
insl
subb
or
push
dec
push
jne
mov
fisubs
add
xabort
ss
and
pop
cmpsb
js
push
aaa
shlb
mov
sub
pop
pop
scas
or
adc
add
adc
add
xchg
sbb
jg
fdivl
aas
mov
ljmp
stc
or
cmp
fst
out
stc
lea
test
clc
mov
mov
jmp
jp
clts
adc
jno
arpl
mov
fistps
or
xor
pop
xchg
mov
mov
push
pushf
pushf
jge
notb
fiadds
xchg
fs
add
sbb
into
mov
mov
out
mov
push
test
loope
inc
mov
bound
ficoml
xor
inc
push
xlat
mov
lock
bound
inc
adc
cld
adc
add
cmpsb
js
xlat
sbb
mov
xchg
adc
push
les
repz
pusha
mov
out
mov
push
mov
shll
mov
iret
aad
int
into
inc
out
sub
test
cmp
xor
out
mov
cmp
pushl
adc
movsl
int
inc
xchg
dec
sbb
mov
ja
inc
sub
lahf
popf
jmp
cmp
push
mov
fcmovu
pshufw
ficoms
ret
xor
cmp
push
lret
jb
mov
aad
clc
dec
out
je
fnstsw
xchg
push
add
mov
stc
adc
imul
pop
das
cmc
and
jmp
add
lret
clc
fistpll
inc
dec
pop
xchg
or
in
pop
out
rcrb
dec
push
loopne
int
bnd
imul
dec
stos
pop
imul
jns
sbb
test
lret
or
and
scas
sbb
scas
sbbl
out
sub
sub
xchg
das
mov
aaa
mov
test
xor
fadds
daa
aas
cli
fnstcw
out
mov
inc
js
ja
subl
add
shll
sub
outsl
sub
in
cmpb
fwait
es
push
clc
xor
das
stos
orl
test
mov
inc
fadds
nop
mov
sub
mov
xor
test
sub
sub
or
lock
fstpl
cld
add
push
mull
xchg
jns
bound
cmp
cld
inc
loope
dec
shrl
sbb
andl
xlat
cmp
dec
das
mov
xchg
faddl
xor
test
sbb
cmc
mov
cmp
mov
aas
jmp
mov
enter
invd
mov
dec
shl
sub
cmp
inc
or
lret
aaa
lds
in
xchg
xor
fsubr
jge
std
jb
mov
mov
adc
pop
jns
outsb
add
dec
pop
out
pop
les
jno
and
fwait
bound
pop
and
mov
es
xchg
js
pop
outsb
cli
aaa
insl
repnz
xchg
mov
jl
sti
xor
cli
mov
jbe
int
jmp
pop
out
add
clc
push
mov
or
or
test
mov
ret
subl
cmpb
sbb
out
jmp
jno
mov
enter
jp
fxch
scas
fisubrl
movsb
mov
jg
mov
push
sub
xchg
call
pop
mov
incb
adc
negl
or
cmp
ljmp
pop
and
inc
mov
xchg
pop
stc
in
xor
movsl
jecxz
fistpll
lret
mov
shl
cwtl
cmpl
in
sub
insb
loope
adc
mov
ja
jle
sub
mulb
push
cwtl
mov
test
mov
adc
adc
adc
xor
jo
pop
je
stc
lock
fldcw
pop
adc
adc
mov
mov
xchg
sub
fsubr
ja
sub
push
pushf
imul
loopne
and
add
aaa
ss
add
sub
dec
xchg
push
aad
mov
mov
sbb
pop
addl
pop
xor
mov
cmpb
pop
popa
xchg
xor
sub
mov
mov
popf
test
add
dec
jae
dec
jb
jbe
int3
gs
pop
popa
pop
xchg
mov
imul
test
or
add
and
xchg
adc
icebp
xchg
xchg
mull
into
seto
test
fs
sub
adc
es
sarb
adc
fisubrs
mov
popa
and
dec
and
adc
mov
cwtl
or
adc
aaa
push
jbe
mov
push
xor
adc
lea
aas
imul
dec
test
cmp
hlt
pop
outsb
jns
int
lea
in
jb
stos
mov
in
insl
and
sbb
jle
out
jmp
jg
test
add
add
jg
inc
mov
dec
xor
ds
push
sub
push
popl
lret
fwait
push
or
adc
in
rcrb
ret
enter
mov
pop
push
xchg
add
js
cmp
pop
xor
push
or
xchg
dec
pop
insb
adc
sbb
out
mov
or
adc
push
lea
and
je
pop
xchg
jmp
jae
and
scas
mov
ret
xchg
cmp
loopne
or
jbe
pop
out
cmp
cltd
mov
cltd
insb
cmc
ret
xor
les
movsl
lods
fcompl
mov
test
jmp
ds
out
inc
call
sbb
out
into
jns
rorb
mov
movsb
shld
jnp
test
inc
jb
mov
and
inc
and
push
jbe
outsl
pushf
mov
outsl
and
mov
lret
sub
and
adc
jno
xchg
and
nop
add
ljmp
sbb
cmpsl
imul
ja
shll
lock
repnz
in
cmp
out
mov
andl
cmpsl
and
pop
pop
xor
ds
movsl
jns
xor
into
jnp
xlat
mov
add
add
push
push
adc
push
cmpsl
fdivrs
fstps
push
cmc
cltd
imul
mov
sbb
jb
or
loope
in
jecxz
or
fcomps
dec
fnstcw
push
xchg
fs
mov
aaa
in
in
repz
das
mov
rorl
xchg
cmp
pop
popf
mov
dec
cltd
rorb
sub
fpatan
ret
sbb
mov
lahf
or
clc
insl
cmp
rorl
inc
jnp
cmp
loopne
sbb
test
clc
jle
jge
jle
std
clc
iret
push
je
fimuls
pop
mov
mov
mov
sahf
cwtl
mov
mov
mov
outsl
mov
mov
pop
hlt
test
lret
mov
insb
xchg
xor
and
sbbb
mov
and
push
sub
rcrb
push
into
push
sahf
cli
les
cmp
add
pop
sbbb
lret
adc
mov
mov
xorb
cwtl
sahf
fsub
mov
lcall
xchg
jg
jns
mov
push
pop
xor
fistl
decl
inc
push
and
xor
dec
adc
movsl
jmp
in
nop
jae
in
scas
adc
outsb
mov
lret
inc
inc
leave
pushf
mov
jb
mov
push
xchg
xor
jne
jne
jbe
mov
pop
rorb
fists
daa
push
rclb
xchg
outsl
mov
in
mov
add
add
sbb
mov
push
arpl
jbe
sub
test
xor
loopne
test
js
mulps
sub
pop
push
sub
dec
xchg
lret
mov
sub
shr
insl
daa
add
fldl
xchg
sbb
and
push
popf
insb
adcb
imul
cli
add
lret
add
dec
xor
lcall
es
sbb
fidivl
cmp
fcmovnb
or
test
lods
sbb
xchg
bound
je
loop
lock
cmpsl
sub
dec
call
in
pop
lods
mov
bound
iret
ds
xchg
dec
jle
les
popf
sbb
mov
in
xor
cmpsb
mov
mov
jmp
pop
lea
mov
xchg
mov
outsl
add
pop
out
div
mov
xor
call
xchg
pop
sti
push
fidivs
cmp
jmp
cltd
stc
or
aam
mull
imul
shlb
loope
xor
sbb
ds
push
jno
add
fsubrl
pop
jno
in
or
cs
movsb
adc
fists
dec
sbb
aas
or
add
jne
xchg
push
cmc
test
push
cmp
jbe
imul
pop
pop
aas
inc
xchg
xchg
cmc
push
push
outsb
ss
add
std
pop
mov
loopne
fistps
test
imul
sub
cmp
lods
mov
push
mov
dec
mov
cmpb
ret
or
int3
cli
or
fsubp
inc
push
push
jl
xor
xor
push
jmp
std
mov
mov
pop
fsubr
in
inc
test
sbb
fcomip
add
xor
cmp
pop
cmp
ret
mov
clc
aad
add
xchg
rcl
pushf
in
sbb
cmc
and
adc
push
dec
add
xchg
cwtl
mov
dec
mov
mov
loop
subl
push
xchg
lods
repz
fdivs
push
leave
adc
fldcw
insb
adc
not
lds
cld
pop
or
pop
mov
sub
mov
jg
ret
dec
test
lret
sub
pop
pop
icebp
xor
mov
sbb
mov
jne
sub
iret
js
icebp
jo
mov
mov
or
cmp
cmc
scas
mov
movsl
shll
loop
pop
jg
cmp
dec
or
push
jg
cmp
les
xlat
push
fwait
add
jp
lret
out
jle
outsb
pop
lds
pop
clc
clc
clc
aas
dec
pop
jle
pusha
loope
xchg
add
inc
addr16
push
and
sbb
sub
and
mov
es
popa
sbb
and
cmp
xchg
mov
pop
leave
jge
xchg
daa
xchg
lcall
in
es
rcrb
or
pop
call
pop
in
fiadds
add
rcr
inc
pop
outsl
repnz
pop
sub
daa
cmp
and
xorl
xlat
ss
xchg
ljmp
pop
cmp
inc
add
sbb
clc
std
mov
pop
adc
xchg
rclb
rcrb
dec
lea
rorb
xor
jne
sbb
mov
jg
xchg
mov
int3
xlat
push
sbb
pop
hlt
inc
add
pop
into
outsb
addr16
scas
inc
mov
adc
xchg
jno
adc
les
sbb
les
pop
or
inc
repnz
mov
jb
add
in
push
mov
repz
cmpsb
sub
xchg
pop
into
mov
push
test
outsl
arpl
decl
dec
enter
adc
fisttpll
data16
ror
test
jno
xchg
fcompl
loopne
sub
cld
lods
jmp
int3
and
cmp
or
fdivl
lcall
sub
add
loop
lods
jne
cltd
insl
loopne
sbb
ja
push
adc
jns
and
pop
outsb
add
ja
ss
mov
xor
lcall
push
pop
add
mov
test
mov
addr16
scas
add
add
xlat
cmp
mov
ljmp
sbb
mov
sahf
xor
imul
mov
movb
lcall
cmp
addb
dec
ret
shll
lods
popf
cmpsb
sub
in
mov
mov
add
add
mov
incl
out
ret
sub
rcll
pop
sbb
shlb
inc
sarb
insb
ja
push
mov
loope
sbb
push
cmc
jge
jbe
mov
stos
jge
shll
xchg
lods
mov
xor
and
adc
pushf
and
cmp
ds
clc
outsl
cmc
sarl
testb
outsb
push
mov
sub
orb
xchg
push
mov
push
mov
sub
add
xor
sbb
jl
and
jle
ss
xchg
insb
pop
adc
ret
mov
out
push
mov
pop
and
jae
add
clc
jae
xchg
popf
ljmp
fsts
movsb
lcall
mov
sub
and
mov
mov
inc
clc
pop
push
iret
std
mov
hlt
aas
js
addr16
dec
pop
inc
dec
shlb
cmp
mov
xlat
into
jae
or
ret
test
or
ljmp
xor
lea
lds
icebp
and
push
test
popa
stos
and
shll
cli
iret
add
call
outsl
cmp
xchg
test
fidivrs
subb
popf
adc
in
cmp
jne
pop
cmpsb
jmp
mov
sbb
out
lret
out
xchg
mov
cmc
iret
jno
aas
xchg
xlat
dec
jg
into
mov
or
add
sub
push
icebp
adc
in
das
das
aaa
out
rorl
mov
dec
hlt
xchg
and
ret
stos
test
mov
sti
mov
mov
popf
fsubl
cmp
lock
lcall
pop
mov
push
and
lcall
pop
xchg
ret
and
lret
sub
pop
ja
cmpsl
popa
shr
inc
movsb
ficoml
lahf
sbb
cmc
cs
cmp
std
inc
repz
daa
mov
out
cmp
push
int3
std
addb
xchg
mov
dec
sbb
addl
addb
and
enter
std
fs
or
push
aad
lea
aas
outsb
dec
mov
sub
test
push
out
and
cmpsl
xchg
mov
fcomp
notb
pop
jnp
or
movsb
mov
and
fsubrp
sbb
fidivrl
rorl
movsl
ret
cmp
adc
lret
and
stos
mov
out
cmpsb
mov
sbb
int
cli
lods
hlt
aaa
mov
push
lock
adcb
ss
dec
adc
sub
addr16
gs
sub
shrb
clc
mov
sarb
lods
sbb
inc
ds
cs
add
sbb
loop
sbb
imul
push
and
mov
pop
das
dec
lds
dec
aam
mov
lahf
bound
lret
cs
jne
mov
cmp
fdivl
mov
in
xchg
lret
imul
andl
out
dec
mov
cs
pop
mov
xchg
out
cmp
pushfw
mov
xchg
pop
xchg
push
pop
test
movsl
xor
adc
in
jbe
xchg
stc
pop
loope
iret
mov
xor
scas
xor
dec
movsl
clc
jne
mov
pushf
out
and
incb
pop
sarb
mov
popa
pop
and
mov
add
inc
mov
mov
daa
sahf
data16
xor
pop
xchg
pop
push
push
jmp
jne
jo
iret
ljmp
gs
sahf
pushf
out
jle
mov
pop
fstpl
stos
or
jo
out
sahf
inc
push
push
fcom
dec
mov
jmp
test
int3
rolb
orb
test
loopne
mov
arpl
mov
insb
arpl
mov
aam
ja
loopne
hlt
pusha
mov
add
dec
enter
js
fstl
sub
pop
jg
aas
arpl
jne,pn
outsl
pop
or
or
movsl
or
lock
stos
aaa
test
xor
enter
cltd
aaa
push
sub
insb
popa
mov
and
outsb
xchg
aaa
es
push
sbbl
adc
mov
xor
sti
or
sub
test
adc
and
gs
loopne
xor
fildll
jno
sbb
pop
js
mov
xchg
es
inc
repnz
dec
mov
xchg
or
add
cmp
sahf
or
pop
aad
cmc
in
test
gs
hlt
mov
scas
pop
outsl
aad
lods
in
test
fstps
push
mov
inc
add
xchg
cmp
ret
out
mov
sbb
sbb
adc
in
mov
mov
inc
push
call
rolb
xchg
das
push
shrl
loop
sarb
or
xchg
xor
pop
inc
popa
sbb
gs
popf
cmp
cmp
adc
add
add
roll
ja
mov
shll
add
rorl
mov
and
mov
and
addb
add
cwtl
sbb
mov
inc
fsubl
and
sbb
mov
shl
pop
sahf
inc
inc
dec
ds
arpl
test
dec
add
popf
xor
jmp
xchg
sbb
les
xchg
mov
dec
or
in
fcoml
bound
mov
repz
out
and
lret
repnz
into
jb
mov
mov
stos
push
in
xor
mov
pop
add
lahf
std
jno
cmp
mov
sbb
xchg
jp
sti
add
in
adc
mov
dec
mov
jnp
cld
scas
lods
imul
hlt
repz
jmp
into
aaa
stos
scas
popf
mov
push
cmp
fidivrl
cli
mov
push
mov
mov
and
movsl
outsb
jle
int
jns
and
hlt
push
idivl
sahf
fnstsw
in
jp
das
insl
jp
lock
fstl
test
xchg
jle
ds
out
sbb
rclb
in
mov
lods
icebp
out
add
mov
mov
sub
ret
jae
dec
pop
cmp
push
inc
jbe
lea
sbb
pop
mov
repz
xor
cmpsb
outsb
cmp
adc
aam
ret
js
dec
push
leave
push
insb
xchg
sub
cmp
sahf
lahf
ljmp
pop
ljmp
outsb
mov
sub
sub
cmpsb
adc
and
sub
jge
sbb
push
idivl
mov
xor
sti
pop
andb
fldt
into
xor
xorl
push
adc
jns
adc
std
cmp
out
push
cltd
ret
pop
cli
push
ss
out
std
enter
data16
divl
jp
ficomps
insl
add
and
xchg
in
loope
aad
imul
jns
mov
dec
push
jne
cwtl
cwtl
insl
rcl
jb
xor
rcll
sbb
lcall
xor
add
push
mov
add
inc
mov
sub
mov
int3
dec
lcall
jmp
adc
inc
test
pop
cmp
movsl
sbb
cmp
loope
xor
mov
ss
inc
lods
sub
flds
fisttps
lods
aad
xchg
mov
xchg
push
jmp
xor
rorl
mov
mov
arpl
inc
jle
mov
fs
sbb
jecxz
pop
add
jecxz
push
cs
xor
add
inc
push
sub
or
dec
or
and
jne
dec
out
xchg
adc
cmp
adc
ds
mov
fs
repnz
pop
cli
std
push
testb
cld
xchg
stos
mov
xchg
push
jp
hlt
or
jb
movsl
push
repz
mov
xchg
jmp
clc
aas
stos
jmp
seta
adc
mov
pop
xor
call
enter
jge
xchg
movsl
cwtl
and
mov
sub
scas
xor
lods
mov
mov
iret
jae
adcb
mov
popa
or
add
mov
mov
push
cmc
push
popf
sub
stos
mov
fwait
sbb
cmp
iret
adc
mov
ljmp
pop
repnz
stos
ljmp
sahf
add
decb
fstpt
xchg
jb
daa
outsl
add
mov
repnz
push
xor
or
mov
add
mov
insl
in
pushf
push
imul
mov
repnz
pusha
test
sarl
mov
cmp
add
mov
and
call
pusha
out
insl
add
jle
push
sbb
push
out
xor
into
dec
push
sub
jno
mov
scas
mov
es
aam
push
fnstsw
aaa
push
sub
xor
cs
lock
mov
xor
pop
xchg
mov
lahf
xchg
ret
adc
sub
lds
inc
dec
cli
sarl
jns
ja
sbb
cmp
add
lahf
jmp
sub
daa
mov
pop
jl
jp
mov
in
lods
mov
outsl
jb
adc
inc
xchg
jnp
loope
lods
sahf
lret
movsl
xor
lret
cmp
dec
jnp
les
and
mov
nop
test
int
mov
and
mulb
subl
jmp
push
add
sbb
decb
or
add
xchg
xchg
fwait
push
inc
jo
ficoms
sbb
mov
loope
iret
and
jb
ljmp
lods
in
imul
sti
adc
or
adc
fimuls
xchg
xchg
and
out
movb
inc
lods
arpl
sti
xor
mov
mov
mov
in
idivl
out
add
ret
cld
cmp
sarb
test
enter
orb
mov
jg
mov
dec
pop
dec
rcll
scas
sbb
fnstsw
iret
test
push
fisubrs
rorb
les
sub
outsb
lret
mov
push
push
xor
idivb
dec
push
mov
cmp
sbb
push
inc
mov
daa
iret
subb
sar
popf
adc
arpl
inc
es
dec
mov
mov
xchg
xor
sub
inc
adc
jg
jno
loope
mov
imul
sbb
xchg
xlat
adc
jl
cmc
je
mov
imul
aaa
mov
xor
inc
dec
rcll
mov
push
and
aas
jns
mov
out
mov
movsl
in
and
and
dec
push
stos
gs
subl
daa
dec
add
mov
add
shlb
mov
mov
out
fnstenv
pop
out
pop
int
test
and
jae
jae
and
sbb
mov
in
aas
scas
enter
roll
push
pop
jns
or
std
push
sbb
pop
test
cwtl
mov
xchg
or
cwtl
enter
mov
push
push
push
rorb
out
sbb
or
or
add
cld
out
hlt
pop
popa
push
cld
loopne
pop
jle
cli
jl
jo
push
and
add
sub
lds
iret
ret
clc
add
cmp
inc
inc
dec
rclb
stos
xchg
mov
sbb
fadd
ja
add
jl
xchg
shlb
and
int3
jo
push
loopne
pop
add
dec
lds
inc
mov
xor
dec
or
xchg
xor
aas
arpl
mov
jmp
push
sub
into
lahf
aam
clc
lret
outsl
in
iret
ret
jne
rcl
xchg
sti
js
aad
mov
in
icebp
mov
cmpb
scas
xchg
mov
jb
inc
repnz
jae
xchg
fsub
lcall
mov
imul
sub
in
mov
adc
mov
cmpsb
push
xor
jmp
jb
out
test
lcall
xor
lret
jo
add
xor
and
in
repz
fildll
mov
jecxz
dec
xchg
out
iret
aas
xchg
out
call
jnp
xchg
dec
add
aam
and
inc
cwtl
mov
ret
xorb
dec
popa
sbbb
xchg
mov
cmpsb
je
xor
mov
mov
pop
or
sbbl
xchg
lret
pushf
dec
shr
add
cmp
sahf
jnp
or
inc
je
inc
fidivl
cmp
ficompl
add
inc
xchg
inc
iret
pop
pop
mov
push
dec
jns
mov
xor
push
cltd
bound
pop
clc
and
aam
and
insb
call
jmp
clc
insl
ss
aam
nop
in
int
test
or
bound
xor
add
pop
movsb
xchg
jp
sbb
jmp
sub
addr16
rdmsr
cmp
mov
pop
in
sbb
sub
xor
lret
aaa
es
xor
movsl
xorb
adc
aam
mov
cmp
xor
mov
fucomp
or
mov
pop
insl
ljmp
out
out
inc
xchg
dec
cmpl
inc
lret
sahf
add
ljmp
pop
adc
mov
and
sbb
movsb
shlb
fldt
ret
jge
jmp
and
nop
dec
or
rorl
and
mov
inc
aaa
sarl
clc
sbb
insb
pop
inc
int
jle
fcmovnb
jecxz
test
fdiv
sahf
xorb
fs
mov
scas
fs
mov
sbb
js
mov
push
cmp
add
lret
mov
rorb
pop
cmp
mov
pop
icebp
xchg
mov
or
xchg
fsubrs
ret
nop
pop
jbe
sub
subb
ds
jb
jnp
add
enter
sbbl
out
pop
ds
dec
push
in
dec
add
stos
pop
sub
sub
shll
inc
dec
jmp
inc
xchg
mov
push
lret
jmp
or
aaa
out
sbb
sbb
xchg
push
pop
jp
jnp
inc
pop
test
outsb
stc
sbb
add
mov
stos
mov
call
movaps
mov
je
sti
in
loop
mov
ss
lret
sbb
in
mov
in
addb
cli
imul
rcr
shrb
stc
loop
pop
cmp
pop
cmp
jbe
dec
and
pop
pop
lret
lret
clc
ss
jle
xchg
push
push
enter
push
jns
call
sub
mov
push
inc
pop
pushf
out
cli
jecxz
lods
cmp
fisubl
mov
and
icebp
popa
mov
xlat
mov
dec
push
push
scas
andb
lret
shlb
fdivs
pop
arpl
lds
xor
inc
sub
jae
js
cmp
jb
loop
je
inc
and
add
sti
arpl
jo
jb
rcrl
cmp
cmp
shl
mov
adc
aad
xchg
lods
imul
lcall
dec
repz
lret
mov
xor
xchg
clc
cmc
cmp
xchg
push
stc
add
addr16
fnstsw
mov
hlt
jmp
sub
fnstenv
mov
lahf
out
fisubrs
cmp
in
nop
mov
pop
pop
cmc
mov
pop
jnp
jae
popa
pop
cmc
push
std
inc
mov
add
loop
push
adc
fidivrl
stos
and
mov
jnp
sub
lret
fdivrp
notl
mov
popf
stos
out
jmp
inc
scas
in
loope
imul
fildl
sub
jmp
jecxz
aas
mov
imul
sbb
std
push
inc
cli
ficomps
adc
jbe
fistl
leave
int3
mov
mov
fwait
pop
sub
cmp
dec
mov
ret
or
adc
pop
and
add
inc
xchg
mov
push
sub
cmp
lcall
loop
std
lods
shrl
dec
and
sbb
inc
push
outsl
or
sbb
icebp
out
xor
jecxz
loope
daa
mov
sti
xor
pushf
mov
stos
popa
sub
add
add
fdivrl
push
mov
xchg
sub
bnd
imul
mov
xorl
sbb
fsubs
sbb
adcl
cmc
and
repz
cmpl
in
es
add
sbb
xchg
cli
mov
push
add
aas
adc
dec
std
inc
bound
dec
mov
inc
pop
test
xchg
jmp
jp
cmpsl
daa
test
stos
xor
push
fbstp
ljmp
mov
add
pushf
test
pop
insl
push
repnz
inc
iret
fnsave
mov
cmpsb
pop
aas
mov
and
rorb
push
out
jb
add
shl
je
mov
shlb
insl
xlat
mov
in
mov
mov
rolb
pop
insl
xor
arpl
jl
sti
jo
out
adc
pop
loopne
adc
stos
inc
sub
aaa
sub
je
jmp
mov
lret
push
add
je
push
xor
stos
xchg
push
inc
out
cmp
and
enter
imul
fstl
mov
iret
rcrl
rorb
pop
sahf
rolb
xchg
jbe
cltd
sti
sub
insl
repz
push
xchg
shr
jns
cmp
ss
and
jle
dec
add
sbb
jmp
and
repnz
push
mov
stc
dec
mov
mov
sarl
movsl
ds
pop
into
inc
mull
cmp
lods
inc
inc
leave
insb
pop
push
sub
push
jecxz
dec
in
test
data16
xor
mov
dec
inc
bswap
adc
in
shll
lahf
arpl
movsl
call
iret
add
fimull
dec
sbb
loopne
daa
push
fcoml
cmpsl
pop
push
cmpsl
loope
ds
loopne
pop
mov
ljmp
or
push
pop
xchg
arpl
and
call
cmp
add
push
jb
push
lods
ret
mov
imul
xor
aas
mov
xchg
or
push
jmp
jns
out
sbb
sub
fistpll
jnp
inc
les
push
bnd
dec
mov
mov
mov
jae
dec
mov
ja
jp
incb
addr16
push
test
mov
jmp
test
lahf
inc
jp
addr16
rolb
call
scas
gs
adc
jge
loope
xor
js
les
sbb
insl
pop
dec
lods
fwait
aam
dec
xchg
sub
lds
mov
cmpsl
outsb
adc
mov
int3
mov
out
fcompl
mov
fbstp
push
loope
mov
mov
sbb
dec
popf
dec
test
cwtl
and
push
aam
idiv
repz
jo
xor
icebp
xchg
loope
pop
mov
jle
rcl
jo
fmull
leave
test
pop
jp
jecxz
loopne
das
and
sbb
sub
hlt
test
inc
shlb
daa
add
popf
or
fadd
fldenv
xlat
pushf
cmpsl
push
pop
push
inc
fiaddl
mov
bound
xorl
js
xor
xor
pop
mov
ret
xchg
push
xchg
cld
inc
mov
sbb
cltd
fwait
adc
lret
insl
pop
sahf
adc
jbe
lret
call
sysexit
pushf
mov
sub
add
int
inc
add
cld
mov
or
sub
vaddsubpd
rolb
addb
cmp
pop
add
repz
xchg
pop
mov
mov
fcos
and
rorb
jae
aaa
int
lahf
repz
leave
daa
lcall
out
dec
xchg
cmp
jl
repz
shl
sahf
inc
or
jg
jge
jg
notb
testb
pop
outsl
daa
pop
jecxz
call
lods
dec
sti
push
lret
mov
sub
mov
mov
scas
push
adc
dec
cs
loop
or
mov
cmpsl
xor
fchs
mov
xchg
bound
lret
imull
dec
pop
add
fisubrl
arpl
shlb
pop
push
cld
mov
xor
xchg
cmp
xlat
and
test
dec
lea
outsl
es
sub
mov
xchg
mov
ret
movsb
lcall
sti
xor
xchg
lods
sub
mov
dec
pop
jb
push
cld
pop
sbb
int3
popa
cmp
push
push
mov
sub
add
int
mov
adc
ss
je
imul
mov
sub
push
mov
jne
mov
cli
pop
fnsave
pop
cs
jne
mov
add
cmc
mov
jg
cmp
pop
push
ds
popf
mov
cmpsl
xchg
add
mov
and
aas
test
loopne
sti
mov
pusha
mov
imul
push
mov
in
add
mov
test
cmpsl
test
movsb
repz
das
mov
fdivrs
fldl
pop
add
mov
push
std
adc
out
cld
scas
cmp
push
push
jge
cltd
nop
fdiv
xchg
lock
in
dec
jne
push
inc
or
jp
decb
fsubrl
cwtl
shll
icebp
out
inc
and
dec
cmp
fcompl
sub
mov
test
adc
jae
jecxz
push
test
pop
incb
pop
gs
add
xchg
adc
dec
xor
mov
dec
xchg
andl
xor
call
or
lcall
andb
xchg
lahf
push
push
inc
or
pop
sub
sbb
jmp
push
fidivrl
xorl
xor
sbb
mov
loop
xchg
ja
cmp
shr
mov
mov
ret
inc
and
xor
lock
and
pop
fisubrs
lds
dec
enter
in
rorb
dec
pop
cmp
mov
xchg
insl
mov
adc
xchg
int
adc
cmp
pop
or
push
lea
add
push
pop
lods
aas
andl
push
loop
imul
sti
leave
js
testb
mov
lahf
fsin
mov
cmp
sbb
pop
das
xor
je
adc
js
sti
into
xchg
pop
aam
filds
test
add
mov
add
cmovl
dec
xchg
sarb
std
push
inc
or
push
sub
je
push
ljmp
mov
xor
repnz
mov
mov
sub
outsb
push
pushf
lods
lock
push
dec
push
cmp
xor
jecxz
xchg
movsb
and
daa
jnp
jp
lods
loop
stos
xlat
mov
or
xchg
fisttps
mov
lret
out
cmp
cmc
cmp
or
xchg
out
adc
dec
scas
inc
or
loope
jmp
fsts
cmp
shl
mov
xor
pop
lcall
jns
sti
stos
cmpsl
insb
addr16
popa
pop
mov
inc
inc
or
cmpsl
inc
ljmp
mov
jmp
push
pop
mov
movsl
pop
xchg
ds
cmp
je
add
ja
jecxz
jnp
out
pop
imul
fisubs
push
inc
sahf
jns
mov
fildll
jnp
stos
lea
and
xchg
popf
sbb
adc
fidivrs
lcall
mov
out
shr
aas
mov
mov
leave
mov
sub
xchg
xchg
cwtl
pop
pushf
add
push
jp
pushf
push
xor
xor
cld
mov
inc
stos
cmp
lret
out
dec
or
pop
loop
mov
cmp
and
in
nop
adc
xlat
jle
pushf
push
sub
test
lods
pop
in
or
ljmp
push
ja
fcomi
cmpsb
mov
pop
fwait
mov
xchg
cs
cld
movsb
lds
out
mov
adc
jb
adc
mov
cld
cmpsb
dec
xchg
iret
xor
or
xor
add
pop
mov
pop
jnp
jnp
xor
stos
aaa
mov
mov
js
cwtl
jmp
sub
pop
es
aas
xchg
adc
mov
loop
adc
sub
mov
lds
push
in
push
mov
std
loopne
pop
movl
sub
movsb
adc
repz
mov
xor
ret
xchg
repz
mov
mov
inc
ficoml
pop
in
mov
push
and
fwait
jne,pn
into
adc
leave
fildll
sub
and
cmc
mov
cmp
mov
and
fsubrs
push
pushf
sti
adc
ds
out
dec
push
imul
xor
mov
jbe
popa
mov
jno
aas
fs
pop
mov
sbb
sar
push
push
mov
xor
in
lret
out
lcall
ds
stc
adc
pushf
fisttps
das
xor
jo
lods
lahf
test
addr16
ljmp
mov
lods
fisubl
xchg
aas
cmpsl
adc
pop
xchg
sahf
jmp
pusha
call
pop
outsl
rorl
adc
test
sub
or
insl
es
out
xor
pop
insb
and
imul
fistl
jmp
cld
cmpsb
mov
inc
mov
notb
popf
xchg
stc
cmc
and
in
aad
jge
lods
add
je
add
cmp
fdivs
std
stc
add
shlb
push
loope
cmp
insb
lcall
not
repz
sbb
fs
gs
and
mov
movsb
mov
inc
mov
cmp
mov
cli
sbb
mov
sub
repnz
sub
rcr
cmp
lods
mov
stos
icebp
mov
xor
insl
push
mov
mov
inc
stos
push
jl
cli
xchg
cltd
pop
push
lods
cwtl
out
mov
mov
xchg
or
or
jmp
jbe
mov
cmp
push
das
int
mul
loop
or
mov
cltd
outsl
pop
sub
push
js
push
movsb
fildll
les
push
sbb
mov
ret
and
cmp
lods
out
jle
jae
out
mov
push
cwtl
mov
fistps
je
leave
inc
inc
cmc
and
int3
leave
rcl
pop
add
js
in
mov
inc
je
cmp
repnz
cmp
push
xor
sbb
jmp
scas
scas
sbbl
shrb
xor
arpl
enter
frstor
fisubrl
lret
mov
xchg
gs
mov
jno
dec
loope
in
cmp
mov
mov
add
and
sub
out
inc
je
out
add
lret
mov
jbe
sub
stos
stos
push
aad
aaa
dec
pop
push
mov
and
scas
or
cmp
ret
jmp
xor
jno
int
fnstcw
data16
aaa
adc
cwtl
mov
xchg
mov
add
lock
scas
jmp
in
scas
xchg
jne
movsl
sahf
jne
ss
stos
dec
in
addr16
xlat
mov
into
mov
test
adc
add
jb
push
inc
adc
and
push
and
jl
inc
leave
ffree
jle
stos
sub
enter
lea
and
jp
daa
cmp
test
shll
movsb
xchg
ja
push
daa
mov
adc
sbb
lahf
and
and
cltd
jmp
sbb
xchg
push
dec
cltd
push
test
push
movl
sbb
adc
stc
lahf
shrl
jnp
dec
add
daa
xlat
add
and
inc
mov
test
rol
std
lea
cmp
pop
mov
loop
sbb
lret
pop
fisubl
in
mov
in
or
mov
ja
shll
xchg
adc
out
test
jno
cmp
subl
fmul
sarl
clc
xor
add
movsb
outsb
out
push
xor
adc
fs
inc
jnp
mov
xor
inc
push
cltd
int3
psrld
xchg
push
dec
inc
pop
dec
cli
scas
sbb
dec
loop
cwtl
cmpsb
add
aaa
out
stc
ljmp
std
aaa
in
and
scas
cmpsl
mov
iret
sub
mov
pop
adc
into
cmpsb
test
pusha
mov
pop
stos
gs
xor
cmp
rolb
pop
cltd
sbb
mov
xorl
loope
js
mov
aam
pop
in
add
xchg
in
jp
mov
scas
push
mov
xorl
loop
fisubrl
lods
pop
in
add
mov
or
push
add
adc
je
jae
or
push
ret
pop
add
and
pop
xchg
pop
imul
ror
out
pop
fbstp
enter
cld
inc
dec
ret
or
jmp
stc
bound
ret
addr16
clc
mov
push
adc
clc
inc
test
push
dec
out
push
or
outsb
mov
pushf
das
stos
xchg
and
mov
xchg
aas
scas
cmp
stc
adc
mov
cmpl
sub
in
cltd
scas
pusha
leave
mov
mov
jnp
pushf
mov
jns
pushf
jo
in
enter
loopne
aam
jb
pop
mov
movsl
lret
sbb
out
xor
sbb
lds
gs
insb
aaa
mov
pop
adc
xor
rclb
into
insl
push
in
sub
inc
ss
call
mov
jle
jle
push
add
cmc
aam
pop
sahf
gs
fsubs
dec
pop
cwtl
stos
mov
cmp
xchg
or
adc
sbb
push
adc
xchg
sahf
imul
inc
jl
enter
push
or
sbb
enter
imul
icebp
fsts
push
out
jbe
push
sbb
xchg
lret
movb
xchg
loopne
mov
mov
std
idivb
rol
mov
xlat
aas
add
and
in
and
pop
and
mov
dec
dec
movsl
sub
dec
add
jae
push
or
je
sub
dec
push
jp
mov
sub
xchg
push
jo
pop
rorb
or
call
fcoml
aam
inc
pop
sub
pop
or
push
in
mov
adc
push
test
cwtl
sub
mulb
or
mov
dec
xor
rol
sahf
inc
addr16
xchg
mov
inc
jg
jle
nop
pop
jp
pusha
subb
or
mov
in
pop
enter
jg
mov
add
cs
xchg
dec
scas
xor
adc
jb
dec
cmpsb
cmp
sbb
jp
lret
jno
dec
xchg
fdivl
mov
push
push
shll
hlt
bound
xchg
fimuls
lea
or
stos
adc
jmp
imul
aad
jge
nop
iret
dec
dec
rcll
je
rclb
fcoml
stc
sbb
mov
and
mov
int3
push
fbld
xchg
or
xchg
mov
mov
xchg
das
pusha
sahf
adc
and
push
add
cwtl
push
inc
sbb
pop
fidivrs
cmp
xchg
ret
popa
inc
loop
lcall
scas
xchg
sub
stos
xor
push
sub
jbe
inc
orb
std
inc
iret
icebp
sbbl
jg
mov
xchg
jmp
xorb
mov
lock
push
sub
mov
sbb
sahf
cmp
addr16
xchg
mov
and
enter
and
sbb
xchg
iret
in
mov
adc
add
pop
mov
aam
aad
fisubl
pop
inc
cmpsl
dec
gs
mov
ljmp
shrl
aad
pop
jge
andb
mov
mov
out
and
jge
jbe
xchg
lahf
jne
push
pop
sbb
mov
dec
test
inc
push
jbe
cmp
stos
out
popf
jo
aas
scas
cmpl
loope
mov
js
fucomi
xchg
jno
cltd
outsl
ret
movsl
jno
cwtl
adc
or
jmp
cs
int
dec
imul
int
add
pop
dec
inc
lods
xor
mov
les
mov
adc
in
push
es
pop
xchg
xchg
ret
fnstenv
lods
aad
js
clc
inc
inc
adc
mov
popa
cltd
cmp
mov
aam
and
stos
jl
adc
ficoml
mov
scas
sbb
pop
lret
sbb
xor
rclb
flds
add
mov
jge
xor
loopne
mov
ret
xchg
lcall
mov
rorb
and
ds
std
mov
and
cwtl
fwait
xchg
and
test
push
xor
adc
cli
jne
insl
mulb
data16
and
cmp
pop
ja
pop
mov
xlat
out
sbb
sti
push
fistps
cld
pop
jmp
mov
xchg
movsl
pusha
xor
jns
sti
int
lods
add
sub
xor
imul
sub
jnp
fwait
or
add
jle
out
sub
pop
sbb
cmp
imul
or
add
mov
fdivrs
stos
cpuid
loop
fsubl
arpl
add
dec
test
push
loope
incb
stc
lahf
sbb
push
testb
mov
push
mov
mov
mov
adc
aam
sub
insl
and
xor
cmp
mov
jle
test
lret
aas
or
mov
sbbl
arpl
pop
push
scas
mov
mov
ja
andl
hlt
lahf
stc
mov
inc
xor
rorb
mov
jne
cmp
sahf
adc
adc
and
jge
cmp
mov
aam
cwtl
xchg
sahf
shr
mov
fsubr
mov
movsl
sub
sbb
add
add
fdivrl
cld
sbb
jnp
and
adc
jns
insl
rolb
push
insl
jns
adc
stc
rclb
int3
ss
test
jle
lret
inc
adc
inc
xchg
jb
xor
jne
sub
xor
call
lahf
cmp
stos
out
mov
stc
dec
psraw
aam
ficoms
in
mov
cmp
cmp
imul
inc
dec
sub
test
ja
movsl
incl
or
fiadds
negb
sub
std
adc
jl
add
sbb
dec
mov
push
mov
xchg
sub
jle
xor
mov
fstl
and
pop
mov
pop
addb
sub
jecxz
lahf
pop
jmp
and
xchg
stos
or
ret
mov
xchg
inc
jb
ficoms
xchg
cs
sbb
mov
les
xlat
addr16
xor
and
jg
out
nop
jns
and
aam
ljmp
push
pop
jns
push
scas
lds
pop
mov
leave
push
ret
sub
inc
shll
lret
rclb
ret
outsl
cmp
movsb
mov
push
negb
int
ficomps
and
or
bound
mov
cmp
or
fwait
add
sbb
fisttpll
insl
mov
and
frstor
stos
pop
jmp
inc
sub
jmp
inc
sbb
adc
push
enter
cltd
roll
add
iret
popa
aas
add
dec
add
pop
hlt
adc
xchg
pop
sub
pop
out
leave
inc
push
scas
in
xchg
scas
lock
push
or
or
mov
test
push
cld
push
sbb
push
cmc
dec
iret
jg
dec
lods
sbb
into
dec
jg
out
scas
int
xor
or
pop
mov
cs
out
les
das
jb
push
shlb
jecxz
in
fistpll
stos
fdiv
bound
das
cmp
xor
imul
cltd
in
pop
adc
mov
std
sti
scas
movsb
movsl
in
mov
cmpl
mov
es
lods
sbb
jmp
mov
sub
cltd
mov
pop
ja
sbb
mov
fnsave
pop
jbe
imull
icebp
jl
push
test
cld
jbe
gs
ljmp
lcall
ss
daa
jns
and
push
mov
sahf
jb
mov
rolb
lcall
lea
mov
jmp
loop
xlat
dec
xchg
jle
arpl
lahf
std
or
rcl
push
xlat
je
aas
mov
pop
aad
mov
test
inc
les
cmp
in
add
scas
mov
add
and
dec
pop
out
jnp
adc
dec
pop
loope
dec
xor
jae
lahf
inc
and
xchg
jg
mov
push
movsl
cmpsl
mov
lock
pushl
pop
push
sub
pushf
mov
mov
je
gs
inc
ja
fiaddl
sahf
aaa
xor
testl
loopne
mov
fiadds
adc
fdivs
neg
push
add
aas
push
cmc
pop
jno
mov
js
xor
fwait
mov
pop
daa
mov
push
mov
stos
adc
js
sbb
sbb
xor
test
jl
xchg
aam
mov
cmp
repnz
push
movsb
call
imul
sub
adc
cmpsl
mov
push
lock
nop
jne
adc
loope
sbb
push
jmp
xlat
sbb
dec
mov
enter
push
xor
les
stos
add
add
sbb
pop
push
mov
imul
les
outsl
sbb
ret
bound
push
out
xchg
mov
or
adc
fistpl
jnp
imul
mov
hlt
pop
xchg
sbb
sbb
push
js
jg
inc
sbb
cmp
int3
hlt
jae
test
and
jecxz
test
js
pop
and
lretw
mov
lret
inc
dec
push
mov
test
fcomp
int
daa
inc
cwtl
cmp
cmp
iret
adc
xor
lods
cli
dec
sbb
rorb
in
dec
push
jo
insl
enter
sti
xchg
mov
das
mov
dec
inc
and
lcall
jl
cltd
arpl
pop
pop
es
testl
push
jo
push
outsb
dec
add
stc
pop
addr16
cmp
mov
xchg
out
fnstenv
inc
xchg
mov
or
or
and
lret
clc
push
daa
roll
out
std
sbb
fmull
pop
push
int3
adc
mov
cmpsl
mov
out
lds
push
add
frstor
loop
or
mov
sbb
xor
das
mov
bound
mov
push
inc
sub
insb
ret
push
xchg
add
andb
inc
pop
inc
xor
sbb
ror
outsl
es
mov
sbb
daa
jp
or
lcall
repnz
push
pop
sub
pop
stc
cmp
fldl
das
xchg
sahf
adc
test
mov
sub
repz
pop
sub
jg
sub
decl
mov
sti
mov
push
int
daa
inc
loop
lods
out
mov
pop
and
lea
pop
push
cmc
mov
gs
lret
and
push
mov
ljmp
or
sti
push
sub
in
nop
in
and
inc
loopne
or
fst
pop
shlb
scas
mov
mov
jbe
mov
xor
push
in
lods
inc
cli
fdivrs
insb
jl
stos
jns
test
dec
loope
mulb
sub
mov
sti
xchg
in
add
push
clc
and
fimuls
hlt
cltd
mov
aad
addr16
push
jmp
pop
mov
push
or
int
sbb
out
repz
bound
nop
fldl
xlat
pop
loope
stc
sub
or
hlt
mov
sahf
pop
jl
cmp
in
and
adc
dec
adcl
xorl
dec
and
push
cmp
outsb
and
inc
out
mov
mov
in
dec
jmp
dec
ljmp
aaa
loop
sbb
lea
add
aaa
and
inc
pop
jle
fnstsw
push
ljmp
das
jmp
int
xor
mov
fdivrs
hlt
test
pop
adcl
call
push
cltd
test
jmp
jo
dec
jle
adc
das
clc
addl
out
cltd
in
push
adc
inc
out
sahf
mov
outsb
lahf
scas
shll
adc
orl
jne
insb
add
scas
dec
xchg
dec
inc
xchg
idivb
and
dec
dec
push
pop
push
dec
xchg
adc
decb
push
and
or
mov
adc
xchg
dec
and
cmp
lds
pop
cwtl
or
out
jg
pop
test
add
sbb
mov
fwait
xlat
insl
jae
push
push
and
insl
sbb
sahf
dec
lock
jge
inc
xchg
sti
mov
mov
pop
push
xor
fwait
mov
dec
stos
test
cli
inc
adc
test
enter
int
xchg
inc
mov
out
and
adc
push
mov
mov
movsb
in
xchg
jae
jmp
push
stos
jge
inc
xor
ds
pop
je
shr
jg
test
roll
sub
loopne
cmp
roll
imul
mov
out
push
in
pop
jnp
lock
adc
and
imul
mov
push
js
sub
pop
mov
adc
jbe
or
dec
shrb
outsl
mov
pop
cmpsb
xchg
test
mov
stc
insl
lahf
jge
in
ret
cli
sar
or
sub
insl
dec
jecxz
aad
jnp
inc
dec
jge
test
movsl
cmp
movsb
xchg
int
jae
jns
pop
push
outsb
fsub
nop
xor
cltd
loop
mov
imull
lock
xchg
xor
sbb
dec
jo
mov
inc
dec
jbe
cmc
cmp
sarl
sub
and
xor
xor
mov
out
jno
cmpsl
pop
out
cli
sub
lock
push
adc
outsl
jno
fists
xor
mov
test
push
jmp
sub
in
nop
fwait
cmp
inc
aas
loope
mov
shlb
or
js
xor
mov
dec
fisttpl
and
ds
js
lock
sbb
jg
add
add
xchg
dec
js
mov
inc
outsb
mov
add
lcall
movsl
push
imul
pop
add
xchg
add
clc
sub
fcoml
xor
addb
dec
cli
int
xchg
xor
loopne
xor
stos
lds
sub
push
mov
jmp
push
pop
arpl
mov
mov
inc
push
enter
cltd
pop
shrl
push
adc
push
mov
adc
push
cmp
push
jnp
jmpw
jns
repz
out
dec
scas
clc
adc
and
cmp
or
dec
add
pusha
loopne
xchg
jae
xchg
subb
fs
push
fildl
enter
push
cmp
dec
popf
scas
cmpsb
push
inc
cmpsl
imul
jbe
cmpsl
adc
aad
int3
cmp
mov
hlt
and
jns
sub
jecxz
add
sbb
or
sbb
push
jg
lea
push
and
and
out
jg
mov
push
cmp
jns,pt
lea
sarb
dec
cltd
addr16
andb
in
lods
je
inc
cld
sub
ds
jns
sub
xor
sub
stc
test
jp
xorb
xor
adc
rcrl
jecxz
fdivl
filds
mov
out
lret
stos
add
outsl
and
sbb
push
inc
inc
fiaddl
add
mov
mov
faddp
into
adc
push
xchg
arpl
outsb
xchg
mov
jl
cmp
loopne
push
stc
std
cmp
or
add
gs
popf
js
mov
jbe
rclb
cmc
ficomps
mov
sub
ds
sub
ret
out
cmp
dec
bound
jp
inc
jae
adc
stc
jno
shll
fs
lods
imul
pop
push
sbb
push
sahf
or
push
xor
fdivl
cltd
int3
mov
sub
pop
aam
aas
push
les
xchg
test
or
and
jnp
mov
pop
leave
in
pusha
add
xor
sub
je
fimull
cmp
jecxz
jecxz
in
pusha
xor
sub
scas
lds
xor
push
mov
and
and
pop
jmp
dec
leave
push
add
inc
xchg
sahf
test
popl
mov
jno
fidivs
fisubrs
sub
mov
sbb
mov
dec
jge
jbe
outsl
hlt
insb
leave
mov
or
push
repz
in
fildl
pop
std
pop
jmp
jge
inc
mov
xor
ss
sub
inc
dec
mov
sbb
sbb
imul
lret
mov
jae
jmp
clc
adc
out
aaa
pushf
jl
add
stc
mov
sub
xorb
and
cmp
scas
jmp
leave
jmp
push
cltd
sti
insb
xchg
je
cmp
sbb
lea
xchg
pop
dec
call
in
pop
popa
push
mov
lcall
dec
sub
mov
inc
mov
push
dec
cmc
or
pop
clc
rcrb
subl
pushf
movsl
push
sub
out
push
out
nop
arpl
outsb
adc
inc
das
adc
popa
pop
cmp
push
sarl
mov
lcall
mov
lret
mov
ljmp
dec
loop
imul
sub
mov
push
pusha
add
xchg
cltd
in
push
jp
adc
inc
push
pop
push
mov
punpckhwd
idivl
mov
and
jae
enter
jmp
jae
in
inc
cmp
mov
push
rep
repz
inc
xchg
jo
and
fs
movsb
lods
lods
fstps
call
jp
cmp
sahf
cli
mov
lcall
movsl
pop
push
scas
xor
enter
stc
rcl
andb
mov
push
mov
inc
inc
pusha
test
push
aad
jne
mov
fsubrp
cltd
stos
jbe
lods
xchg
aas
sbb
jl
lods
neg
push
jle
in
sbb
scas
cmc
or
jo
sbb
and
gs
add
mov
pop
lods
jbe
and
shl
jb
iret
popa
arpl
sti
inc
inc
add
dec
in
cmc
movsl
push
iret
mov
stos
fdivr
xchg
test
nop
cmp
mov
push
cs
and
mov
xor
call
je
push
ja
xchg
jb
in
xchg
shrl
andl
aad
mov
xchg
call
mov
das
divl
mov
push
fsubl
stos
insb
ficoml
push
add
mov
data16
roll
lahf
xchg
out
loop
cmp
enter
bound
scas
push
lahf
fst
nop
orl
clc
mov
ja
jp
mov
mov
repnz
fildll
mov
or
repnz
push
sbb
adc
js
addb
inc
in
decl
daa
cmp
push
imul
pop
lret
andb
loope
cmp
mov
in
iret
fwait
dec
repnz
icebp
pop
sbb
popl
nop
scas
popa
mov
repz
mov
ljmp
ffree
out
push
cmpsl
cmp
mov
xor
push
mov
inc
sti
cltd
aas
and
and
sbb
clc
cld
push
or
leave
data16
fdivrp
pop
jp
adc
pusha
lods
adc
sub
push
scas
fsubr
cmp
addr16
test
mov
aam
test
sub
das
inc
stc
ljmp
ret
xor
cmp
pop
dec
rolb
sub
push
jg
fisttpl
mov
scas
or
sub
push
mov
insb
mov
and
and
adc
push
leave
cld
ss
popa
in
cmp
loopne
jmp
jno
lock
xchg
sub
xor
mov
xor
jmp
mov
dec
pop
test
lock
mov
add
stc
xchg
cmp
fsubr
imul
adc
test
jp
cs
mov
hlt
pop
fcompl
subl
inc
mov
stos
mov
icebp
and
test
sbb
test
pop
or
sub
mov
and
rclb
subb
clc
push
das
inc
xchg
adc
xor
in
inc
negl
fstps
div
mov
mov
jns
addr16
scas
push
dec
sahf
ljmp
jno
dec
mov
adc
and
nop
ss
fsubr
jb
xchg
push
or
scas
and
jne
lock
mov
in
test
xchg
jecxz
fmull
push
popf
xchg
jae
lods
out
js
push
repnz
dec
into
cli
pushf
jmp
inc
mov
mov
and
inc
jae
sti
icebp
add
adc
jg
cmp
aam
daa
js
out
dec
mov
mov
shrl
sti
jne
cwtl
pop
mov
xor
xchg
sub
cli
andb
jbe
push
pop
mov
test
lcall
cmp
pop
lcall
test
xorb
in
sahf
pop
lods
xor
jo
mov
adc
mov
adc
push
and
dec
xchg
in
fsubl
es
aas
and
and
pop
xchg
push
stc
mov
mov
in
add
test
movsl
cmp
rcl
lret
into
push
inc
nop
shlb
adc
mov
add
sub
and
sar
cmpsl
jecxz
jg
or
aad
iret
push
sahf
lock
in
cmp
andl
inc
jae
scas
mov
sbb
mov
cltd
out
xchg
pop
sbb
pop
sbb
je
loope
movsb
xor
pop
add
jp
subb
push
sbb
test
sub
inc
mov
jle
rclb
xor
out
lods
call
adc
inc
jns
bound
imul
das
in
out
fs
test
ss
xchg
jmp
aad
jae
addb
jbe
addr16
fistl
jp
shlb
jns
xchg
or
add
xor
jae
push
mov
insl
out
add
xchg
leave
jo
clc
adc
mov
mov
sti
push
mov
and
pop
jle
mov
mov
js
dec
fs
xor
xchg
arpl
xlat
and
stos
xchg
test
fcoms
imul
sbb
test
popf
cld
fistl
cld
fsubrp
inc
insb
mov
rcr
push
sbb
push
mov
cmp
mov
repnz
dec
mov
jmp
cwtl
push
out
fwait
mov
rcrb
dec
je
popa
push
pop
lcall
and
xor
std
fs
out
dec
inc
imul
ja
iret
xchg
rorl
cmp
lds
inc
and
dec
mov
jmp
pop
lret
adc
dec
stc
push
pop
popf
iret
push
mov
dec
jnp
dec
adc
push
mov
js
pop
and
jmp
mov
sbb
fistl
arpl
inc
out
push
jg
or
js
into
cmpsb
lds
aas
mov
mov
out
add
movsb
mov
into
adc
or
sbb
push
push
dec
insl
and
das
das
sbb
imul
data16
fiadds
push
mov
lods
data16
mov
pop
out
mov
enter
ret
bound
adc
jno
inc
mov
adc
mov
aaa
inc
xor
pop
lcall
hlt
add
and
and
push
adc
insb
cmp
cli
and
es
shl
sar
inc
fsub
push
pop
inc
jecxz
cs
leave
xor
cwtl
jnp
jmp
mov
jne
and
ss
fcmovnu
sub
mov
in
call
sub
xor
cmp
jns
push
test
out
cmp
aaa
and
test
xchg
or
lods
sbb
or
mov
pop
dec
test
xor
imul
xor
add
icebp
das
aad
push
dec
les
notb
or
pop
jge
mov
push
xchg
pop
mov
lcall
cmp
test
popf
test
iret
call
js
hlt
dec
and
mov
rclb
push
pop
je
jns
jmp
insl
stos
jbe
movaps
loop
mov
movl
push
xor
stos
sub
xchg
mov
mov
jbe
shlb
mov
imul
xor
je
popa
cmpsl
cmp
pusha
adc
cmp
pop
jmp
out
xchg
inc
enter
test
mov
out
aad
cmp
loopne
or
iret
xchg
and
inc
scas
mov
pop
xlat
add
mov
jge
sub
push
testb
std
fimuls
dec
faddl
sbb
add
mov
xchg
jmp
lea
mov
int
mov
cmp
add
pushf
xchg
mov
in
ja
jo
rcl
sbb
xchg
cld
add
sub
pop
pop
xor
sub
cmpsl
xchg
inc
mov
mov
dec
mov
daa
dec
subb
xchg
rcrl
add
add
fiaddl
addr16
gs
les
test
mov
cmp
lret
jmp
or
std
push
xchg
sbb
cltd
mov
mov
es
jb
dec
ret
fisubrs
out
sbb
adc
call
pushf
ja
mov
imul
sbb
jecxz
dec
pop
mov
or
mov
movsl
fwait
mov
cli
aaa
push
orb
mov
leave
sub
cli
cmpsb
or
gs
mov
aas
rcrl
dec
rol
incl
cmpl
or
cmp
adc
inc
xchg
addr16
jno
loope
insl
dec
imul
out
xchg
adcb
insb
jl
or
jp
lods
xorl
or
addb
xchg
stc
jmp
cmp
je
pop
fwait
orb
push
and
pusha
nop
loopne
fstl
mov
cwtl
movl
cmp
jg
xor
outsl
loope
loop
and
ret
xchg
pop
addr16
imul
push
push
cmpl
out
sbb
loope
popf
sbb
int3
adc
icebp
inc
je
or
movl
movsl
xchg
mov
out
sub
push
xor
das
repz
fwait
xor
rorl
aad
lds
insb
test
roll
iret
je
xorb
mov
inc
inc
outsb
cmc
fs
or
cmpsl
pop
dec
push
cmpb
add
push
jbe
xchg
in
lret
sbb
clc
cld
ret
fmul
sub
out
mov
adc
push
out
fnstsw
stos
and
xchg
test
and
ret
pop
jecxz
xchg
add
inc
cmp
adc
sbb
js
icebp
fistl
sbb
xchg
add
or
gs
imul
imul
adc
adc
es
ret
dec
lods
jns
int
mov
scas
fstps
daa
cmp
xor
mov
sahf
loop
xor
jbe
insb
cmp
in
push
test
out
dec
push
sbb
push
cmc
clc
out
mov
cltd
xchg
sub
nop
std
mov
call
out
cs
cmpsl
inc
add
dec
adc
add
in
add
xor
outsl
fbstp
pop
push
cmc
ret
pop
sbb
mov
jbe
push
xlat
dec
add
jae
aas
fsubl
shll
mov
xchg
jne
jne
mov
add
jbe
dec
xchg
and
stos
mov
cmpsl
jmp
arpl
xor
xor
mov
cmpsb
nop
rolb
ja
leave
pop
mov
dec
xchg
and
dec
add
jae
mov
stc
mov
push
loopne
repnz
stos
mov
push
sub
mov
mov
xchg
lret
cli
fstps
pop
in
fdivrs
in
dec
data16
dec
lahf
cmp
nop
jne
rcrb
mov
cmc
shl
daa
popa
push
movsl
ljmp
pop
and
in
sbb
pop
dec
or
mov
lods
outsl
mov
adc
fcmovb
pusha
push
cmp
push
pop
mov
std
rcr
add
cld
in
sub
lret
add
stc
dec
lcall
lods
repnz
push
in
sub
xchg
or
sub
sub
add
and
scas
xor
jg
cmp
pop
mov
cmp
xchg
pop
aas
fisttps
push
adc
aad
repz
je
in
inc
sar
dec
ja
lcall
pop
sub
js
fmull
sti
mov
cmpsl
sbb
and
or
sbb
stos
push
leave
jne
repnz
or
and
adc
inc
movsl
inc
xchg
xor
pop
mov
pop
inc
loopne
mov
js
push
adcb
mov
movsl
xchg
xor
cmp
adc
push
aas
push
mov
ret
out
rcl
aaa
inc
mov
mov
mov
or
and
cmp
or
mov
push
sbb
insb
cmp
push
dec
gs
call
sbb
push
xlat
ret
pop
inc
or
pop
mov
scas
jg
adc
out
and
push
push
cmp
xchg
dec
pop
xchg
aaa
xchg
sub
cli
sbb
xchg
loopne
cmc
pop
ud2
pushf
pmaxub
dec
and
cmp
adc
adc
pop
or
push
cmp
pop
mov
xor
inc
adc
mov
lods
jne
mov
dec
test
mov
add
push
xor
loop
sub
or
sub
std
sarb
pusha
jmp
inc
and
pop
call
pusha
shll
xchg
std
or
xor
mov
xchg
fistl
inc
shll
std
mov
cmpsb
bound
inc
xchg
out
mov
stos
aad
hlt
leave
js
xchg
lock
iret
imul
addl
dec
je
jne
mov
jecxz
fwait
cld
mov
sbb
jb
push
xchg
daa
ret
xchg
push
std
stos
scas
ja
jns
rorl
jmp
adc
ljmp
incb
pop
mov
or
pop
subl
cli
pop
dec
ds
pop
les
fists
bswap
popf
sub
sub
ss
xchg
out
add
push
cmp
pop
xchg
scas
or
test
cmpsb
push
fdivl
call
out
push
add
imul
or
jne
jg
pop
xchg
ret
mov
jbe,pn
pop
loopne
xchg
insb
cmp
push
xor
push
mov
fbld
repz
sub
jg
repnz
adc
xor
loopne
push
in
clc
out
in
jmp
pushf
mov
aas
sbb
pop
or
rorl
mov
xor
stc
test
leave
stos
jo
adc
pushf
fdivrl
xlat
sbb
mov
dec
sub
test
push
push
pop
repz
xor
outsb
mov
mov
dec
stc
lods
hlt
in
xorl
or
mov
ficomps
lock
or
and
cmpsl
xchg
outsl
mov
movsl
dec
mov
cmc
adc
jo
or
repnz
insl
data16
test
sub
sub
jae
or
loopne
add
test
fs
sbb
std
in
sbb
jge
ror
adc
xor
inc
pushf
add
sbb
jb
int
mov
sbb
mov
add
mov
lea
fcmovbe
mov
mov
xchg
mov
jg
mov
add
cmpl
jo
pop
or
and
ja
aas
sti
mov
dec
pushl
push
aad
xor
lret
inc
jecxz
pop
icebp
iret
insl
pop
add
ja
sbb
sub
scas
push
cld
or
push
rorb
fstpl
dec
jb
pop
das
int3
cmpsb
push
cmpsl
xor
ljmp
je
dec
jnp
data16
jl
repz
mov
lock
aas
push
jecxz
fdivrl
lret
insl
mov
inc
das
sub
aad
fiaddl
mov
int3
rorl
arpl
stos
roll
mov
lds
and
in
dec
jl
ds
add
fwait
cmc
or
stc
push
in
jne
ss
hlt
pop
mov
sub
in
cmp
cmpsl
xor
test
stos
add
iret
sub
repnz
mov
cmp
push
jecxz
mov
cltd
inc
sbb
push
push
mov
mov
cmp
xchg
and
hlt
cltd
mov
imul
aas
das
mov
jp
dec
bound
iret
mov
fdiv
sub
sub
jbe
push
mov
push
cld
aas
cmp
aam
xchg
pop
testl
cmp
mov
or
out
stos
mov
push
test
aas
js
or
xor
imul
add
push
cs
cld
cwtl
xchg
in
inc
test
les
or
mov
push
adc
mov
jg
loopne
cmp
call
push
fsubl
lret
scas
dec
shlb
push
cwtl
jo
mov
cmp
push
sub
pop
test
sub
lds
shrb
push
sub
inc
fwait
stos
and
mov
mov
mov
mov
fcmovb
jo
inc
adc
jg
mov
out
or
inc
sbb
loopne
out
pop
cmp
pop
cmp
and
pop
xor
mov
xor
in
add
popf
mov
inc
sbb
dec
jg
pushf
nop
inc
and
or
add
jb
push
mov
test
in
xor
bound
inc
icebp
sub
sub
mov
jmp
mov
arpl
pop
inc
inc
and
nop
xor
push
in
jb
pop
test
sbb
jle
cmp
notb
into
idiv
add
repz
clc
add
dec
insl
xor
roll
jecxz
ja
sub
fstl
push
lret
inc
movsb
jbe
xchg
sbb
movsb
mov
iret
jle
bound
adc
adc
insl
mov
mov
lods
mov
aam
pushf
imul
es
outsb
insl
sbb
stos
jl
fnstcw
rorb
mov
add
cmp
dec
sbb
loopne
es
mov
aas
fs
ss
cwtl
cwtl
scas
push
mov
dec
test
in
xor
sbb
or
dec
mov
pop
sti
pop
dec
sub
xchg
cld
mov
sub
mov
mov
fdivs
sbb
cwtl
add
cmpsb
mov
les
inc
dec
das
push
mov
repz
dec
add
pop
test
pop
mov
push
xorl
xor
xchg
movsb
clc
mov
outsl
jno
mov
aaa
lcall
pop
scas
rclb
sahf
cmc
pop
xor
mov
ret
sub
dec
clc
add
test
int3
movsl
insb
dec
push
or
aaa
int
jg
jns
cmpsb
cmc
adc
mov
fdiv
push
hlt
dec
push
dec
mov
dec
lret
sub
push
or
dec
addr16
mov
aas
inc
mov
int
xor
ds
mov
add
jmp
jnp
sarl
push
test
loop
popf
pop
inc
or
push
pop
or
cmp
inc
mov
inc
mov
insl
mov
in
and
mov
push
ds
jns
dec
push
cmp
xchg
xchg
rcrb
adc
ds
jb
mov
xor
or
add
sbb
rcll
gs
in
mov
add
mov
dec
movsb
outsb
in
scas
movsl
xor
add
or
repz
es
lahf
dec
mov
es
sahf
pop
mov
les
push
movsb
int
inc
mov
adc
int
clc
outsb
mov
dec
xchg
ljmp
out
xchg
mov
and
xlat
jne
xor
cmp
outsb
cmp
mov
pop
jecxz
adc
out
and
mov
sarl
int3
xchg
pop
mov
stos
hlt
lock
repnz
fsubr
je
sub
inc
fisubrs
and
add
inc
idivl
stos
and
leave
or
arpl
mov
add
shrb
cmp
xchg
aas
fists
pop
test
je
jp
ret
nop
push
jle
loop
daa
mov
adc
inc
inc
es
outsl
jae
push
cs
aaa
loopne
in
stos
pop
fdivs
data16
mov
pop
pop
jne
int
ss
mov
and
daa
js
mov
xchg
xor
hlt
out
andb
lret
cld
push
and
pusha
rorb
and
js
and
mov
pop
icebp
test
stc
push
adc
jb
lea
adc
push
sub
pop
lcall
aas
mov
dec
mov
aaa
das
xlat
jns
push
xchg
movsb
je
out
daa
adc
pop
mov
test
je
push
inc
ret
sarb
das
fistpl
lods
or
jns
jp
ja
addr16
ficoms
mov
sbb
out
push
es
roll
lock
out
repnz
fwait
cwtl
out
dec
movsl
sti
dec
fiaddl
sub
aas
pop
fmull
jbe
dec
or
jle
inc
loope
insb
outsb
mov
daa
faddl
adc
loopne
test
aaa
stos
and
rcr
scas
xlat
sti
addl
push
imul
dec
xchg
cld
daa
fs
jp
add
push
adc
loopne
pushf
dec
mov
mov
inc
mov
aam
call
mov
push
xchg
add
std
jo,pt
scas
push
jnp
out
xor
ljmp
fmuls
jns
jp
mov
pop
fwait
mov
adc
pop
adc
jecxz
out
cmpsl
jecxz
jle
scas
ljmp
mulb
sub
push
scas
xlat
mov
jecxz
cmp
dec
mov
xchg
movsl
bound
mov
cltd
mov
add
dec
stos
clc
mov
fs
adc
xchg
and
adc
cs
lret
mov
mov
mov
ljmp
adc
mov
mov
dec
lea
addr16
in
sub
fnsave
xor
pop
cld
jb
addb
outsb
dec
mov
mov
test
xchg
pop
xchg
fcmovu
inc
mov
lret
push
insl
ret
mov
testl
lds
adc
pop
push
gs
cmp
cmpsl
add
lcall
cld
clc
push
add
add
nop
fisubrs
inc
push
test
lret
data16
in
push
int3
in
sbb
xor
lahf
out
je
cmpsb
call
cmpsl
js
imul
adcl
jne
dec
mov
out
jl
clc
stos
sarl
in
lods
inc
aas
inc
mov
inc
lds
das
jp
enter
xor
pusha
lods
or
mov
lahf
xlat
and
add
hlt
jecxz
std
in
dec
lahf
xor
add
and
pop
inc
outsl
add
lods
test
push
stos
cwtl
mov
hlt
incl
or
jl
mov
clc
inc
out
xchg
mov
xor
or
xchg
fldcw
std
sbb
test
in
or
adc
cs
fwait
in
js
adc
popa
loopne
push
jnp
int3
outsb
jbe
sbb
mov
lods
mov
je
cwtl
or
push
hlt
cmpsl
xchg
pop
daa
iret
jmp
push
sbb
mov
aaa
jno
stos
adc
call
pop
lods
cmp
pop
popa
mov
scas
in
xor
mov
imul
push
data16
rcl
mov
les
mov
or
in
mov
and
sub
xor
ret
test
rcrl
adc
jecxz
adcb
adc
sub
cmp
daa
adc
inc
mov
xlat
fwait
or
jns
cltd
lcall
in
pop
clc
int3
outsb
pop
iret
mov
mov
loop
sub
or
push
in
mov
and
fidivrs
mov
mov
ja
mov
pusha
dec
enter
cmp
or
scas
inc
repnz
mov
fists
rolb
sub
adc
mov
and
scas
cmp
sarb
sub
repnz
in
insb
loopne
lea
aaa
cmpsl
sbb
push
lock
rcr
xor
xchg
sbb
inc
jecxz
mov
xor
xlat
add
adc
and
jle
mov
dec
fs
addr16
xchg
jo
xchg
test
push
push
push
ja
push
sahf
outsl
mov
int
jp
es
add
jne
data16
mov
push
push
lret
movl
stos
in
test
dec
dec
pop
fsubl
dec
lret
xor
cli
mov
xchg
addb
ds
push
out
inc
pop
in
and
mov
adc
xchg
cld
divb
cli
mov
cmc
xchg
cwtl
sub
xchg
movsb
mov
and
lret
imul
mov
dec
test
mov
scas
int3
or
xor
icebp
and
lea
rorb
das
inc
ss
sub
push
ss
mov
dec
gs
bound
repz
test
ficoms
inc
ret
nop
test
cld
mov
pop
mov
mov
outsb
pop
push
xchg
xchg
in
cmc
sti
mov
add
cmp
scas
mov
in
pop
sti
call
mov
leave
outsl
dec
in
mov
shll
fcom
rcr
psraw
mov
add
ja
testl
loope
dec
jns
sarl
push
cmp
push
outsl
movsb
mov
int
inc
sub
gs
jp
push
sub
pop
or
cmpsl
cs
cli
cmp
sti
aas
mov
pop
add
popf
sbb
sbb
mov
aas
ja
and
mov
test
mov
and
pop
dec
lods
scas
xor
jno
pop
push
movsb
cmc
pop
rcll
orb
xchg
fiaddl
mov
jle
nop
mov
int
mov
stos
stos
and
roll
xor
stc
mov
dec
mov
popa
push
pop
jbe
cmc
mov
push
cmp
xlat
aad
lock
xlat
add
pusha
aaa
movsl
std
dec
aad
pop
sbb
sub
adc
mov
aas
repz
sub
dec
mov
sub
add
imul
leave
mov
sbb
fmull
mov
push
pop
xchg
and
sub
sub
nop
pop
mov
bound
ljmp
dec
sbb
push
sar
add
xorb
mov
mov
jo
mov
subl
fldenv
mov
flds
mov
mov
idivl
mov
mov
xor
sub
inc
negb
adc
mov
cmp
xchg
filds
out
out
cmpsl
add
add
popl
das
mov
gs
jmp
out
sub
and
paddusb
gs
imul
mov
adc
and
or
neg
movups
inc
sbb
dec
mov
fidivl
or
sbb
fidivl
jge
mov
sbb
in
ss
push
rcrl
dec
je
nop
cld
ret
stc
bound
dec
xchg
notl
insb
fdivp
ret
stos
shll
mov
push
pop
pop
dec
mov
pop
sti
mov
inc
cmp
jmp
ss
sbb
sbb
jae
xchg
jmp
mov
mov
aam
jmp
mov
movsb
cmc
sarb
addr16
je
add
aam
mov
jns
xchg
xorb
xchg
out
mov
loopne
cmp
mov
mov
cmpsl
sub
shr
cld
mov
movsl
int
fldcw
mov
test
mov
mov
mov
mov
push
lods
mov
test
out
inc
inc
pop
psrld
outsb
jne
jl
rclb
inc
dec
jb
pushf
sbb
flds
stos
cld
mov
mov
fnstenv
dec
xchg
cmp
add
add
lods
inc
shll
leave
cmpsl
jecxz
xchg
inc
es
test
hlt
ljmp
sbb
fisubs
movsb
aas
subl
adc
addr16
push
in
sbb
sub
cwtl
add
stc
roll
add
pop
das
out
arpl
out
or
pop
xor
xchg
push
fcmovne
mov
rcrl
and
add
push
mov
add
repnz
and
sub
sbb
test
iret
insb
daa
jb
xor
test
or
jle
lret
jle
aas
xchg
aad
std
dec
call
popf
movsl
pushf
pop
sub
out
rcrb
clc
xchg
mov
shlb
and
xchg
sti
jmp
les
xchg
hlt
stc
popa
jns
in
xchg
bound
decl
dec
icebp
iret
adc
cmp
add
jg
xchg
subl
movsl
sub
xchg
test
jno
mov
rcrb
push
inc
adc
fstps
insb
or
xlat
push
insb
mov
cmpsb
inc
pop
mov
cmp
mov
xlat
adc
nop
sub
cmp
int
mov
jle
sbb
mov
inc
aad
std
inc
add
addr16
repz
dec
inc
lods
imul
sbb
ljmp
xor
cmc
pop
cli
mov
xorl
jae
fldl
sahf
adc
popa
sbb
pop
sbbb
xor
pop
ja
fs
sbb
lret
adc
mov
cld
inc
mov
cs
mov
clc
add
loopne
or
xchg
cmpsb
sbb
cs
mov
ljmp
lock
mov
mov
arpl
leave
stos
aaa
fbstp
data16
jl
xchg
mov
bound
mov
adc
lret
and
mov
ror
clc
xor
sub
mov
sub
es
cmp
icebp
fsubrs
imul
fldt
imul
sbb
iret
stc
loopne
popa
xchg
mov
adc
inc
cmc
mov
adc
rclb
les
js
push
fcmovne
push
mov
lods
jp
or
xchg
sub
repnz
repz
xchg
adc
sti
scas
es
ret
popf
or
aam
inc
jg,pn
adc
test
mov
dec
outsb
push
shl
outsb
cmpsb
push
cmpb
insl
push
jp
fldcw
sub
or
imul
pop
pusha
cmp
sbb
or
cmovs
xchg
xchg
or
add
jno
lahf
sahf
sarb
dec
popf
xchg
and
ret
aaa
mov
test
movsb
push
test
je
loope
into
fistpl
dec
jg
add
lret
xchg
or
pop
xchg
fwait
cmp
orb
push
sahf
push
inc
enter
sbb
mov
pushf
imul
cmp
mov
push
dec
and
or
mov
leave
lret
xor
rcrl
xchg
arpl
jno
xchg
dec
fs
sarb
adc
out
pop
or
pop
inc
loopne
leave
std
dec
xchg
pop
das
xlat
aas
jle
aas
dec
into
jnp
jmp
test
fnstenv
arpl
xor
sbb
cmp
lret
mov
lahf
lahf
sbb
add
fptan
mov
sbb
scas
stos
pop
ret
mov
mov
xchg
fdivl
incl
leave
lcall
dec
imul
pop
push
loope
dec
in
aaa
add
push
bound
shll
lahf
and
jle
lea
cltd
sahf
add
pop
mov
rorl
or
push
and
jne
cmc
pop
xchg
inc
lret
arpl
cwtl
fdivrs
push
iret
mov
mov
adc
mov
dec
sub
mov
loopne
sub
add
pop
pop
push
add
jmp
lods
nop
mov
push
inc
lods
push
jmp
bound
aam
inc
scas
loopne
mov
addr16
cmp
sbb
adc
adc
std
sti
sbb
push
data16
out
dec
nop
test
dec
dec
xchg
lcall
jp
push
mov
jbe
dec
and
mov
mov
sbb
inc
sti
clc
je
rcr
cmpw
mov
sub
aad
jnp
xor
arpl
lahf
dec
or
pop
cmp
out
cmovle
dec
inc
lret
movsb
mov
push
jge
xchg
outsl
push
push
loope
push
jne
xchg
cs
subb
ret
push
stos
sarl
jl
adc
mov
cmp
pushf
mov
aam
out
dec
repz
cli
jecxz
insl
push
add
aam
testl
mov
sbb
leave
popa
js
mov
push
mov
out
mov
jno
ja
sub
push
jo
mov
xchg
es
jmp
dec
and
clc
or
push
or
scas
and
mov
js
sbb
xorb
cmp
jl,pt
imul
sbb
adc
lret
aaa
mov
pop
ljmp
jns
sub
clc
adc
jae
push
fcomip
lods
or
adc
sahf
call
aaa
add
mov
stos
arpl
lock
insl
xchg
mov
dec
pop
ret
sarb
or
or
out
jns
cmp
push
pop
ret
test
leave
or
xlat
je
pop
mov
mov
es
mov
mov
push
inc
cli
lret
outsb
shrl
sbb
arpl
imull
xchg
mov
sub
loope
cld
jno
pop
push
mov
lods
fiadds
fs
jbe
cmc
add
call
imul
xor
rol
sub
pop
fstps
lret
gs
pop
jecxz
add
pusha
push
adc
into
in
adc
outsb
push
cmp
cwtl
sarb
mov
pcmpeqw
cld
mov
xor
and
sbb
and
push
insb
jbe
dec
imul
insl
out
stc
fsubp
mov
mov
mov
cmp
aaa
out
xor
sbb
daa
xchg
fnsave
call
xchg
pop
js
push
adc
stc
cmovle
int
cwtl
mov
sarb
stos
push
xor
stos
fs
pop
in
xchg
lcall
inc
pusha
push
sbb
js
xor
test
mov
sub
ja
lea
fsubs
sbb
shl
xor
push
repnz
decb
ds
pop
add
mov
out
shll
fcompl
sub
into
repz
ja
mov
leave
rolb
nop
dec
and
push
repnz
lods
stos
bound
fstl
es
inc
cmpsl
cmc
jg
add
sti
sbb
dec
aaa
xchg
test
faddl
inc
movsl
shll
clc
pop
sub
fistpll
mov
jns
aam
out
lods
push
lcall
imul
out
mov
adc
mov
das
addr16
pop
xor
adc
andb
out
xchg
sbb
add
xchg
mov
sub
mov
jp
ds
bound
jge
fists
pop
xor
loop
mov
push
dec
mov
into
push
jo
outsb
inc
dec
and
test
jns
sbb
out
inc
ret
roll
or
push
rorl
jle
mov
xchg
dec
mov
enter
dec
jge
cmp
and
jno
sbb
mov
pop
scas
sub
in
jge
jmp
subl
dec
lock
mov
out
fsubrs
pop
adc
cwtl
lret
lea
add
fcoml
lods
outsl
or
in
int3
adc
andb
mov
add
add
adc
xor
clc
lahf
or
fs
cmp
add
cmp
sub
leave
jbe
loop
loope
xchg
cmc
add
in
test
xchg
out
ja
and
fwait
mov
ficoml
dec
test
mov
adc
bound
shl
fwait
xor
iret
lea
push
and
pop
adc
push
jmp
mov
cltd
mov
cltd
je
ss
sti
inc
stos
sub
ficoml
and
in
andb
mov
jecxz
cmp
xchg
nopl
int
jno
xor
xchg
je
dec
dec
ja
jns
ds
call
mov
xchg
dec
adc
lret
sub
les
in
into
cmp
mov
mov
dec
jnp
ret
out
adc
cmc
push
ror
inc
dec
repz
lahf
lret
int
mov
test
out
cld
pop
pop
cltd
sub
sbb
lock
test
and
and
stos
xor
mov
mov
aaa
out
icebp
xchg
repz
pop
dec
test
ja
mov
pop
cmc
test
imul
ret
js
shl
icebp
push
xchg
cwtl
out
hlt
inc
push
jb
imul
push
shrb
lea
jge
sbbl
leave
pop
loopne
imul
movsl
movsb
cmp
sti
fildl
and
or
mov
call
clc
insb
inc
ja
sub
or
inc
jp
repnz
out
stc
in
push
cwtl
rorl
je
vcvtdq2pd
xchg
xchg
fwait
inc
jg
movsb
sarb
and
jge
loop
lret
shlb
adc
sar
cli
and
imul
lds
xchg
flds
in
aam
sbb
sar
sbb
mov
ljmp
in
insl
mov
cmp
mov
repz
add
testb
and
outsb
inc
imul
scas
pop
leave
jbe
fistpl
or
xchg
inc
push
sbb
fistpl
mov
mov
sub
push
popa
cmpsl
mov
js
sahf
bnd
cmp
loopne
jp
popa
inc
xchg
xchg
mov
lcall
sub
inc
cmpsl
mov
mov
dec
mov
sub
xor
cmpsl
loope
push
into
fxch
push
mov
setnp
es
test
xorb
pop
test
inc
add
fs
push
call
scas
inc
sbb
cmp
mov
jns
jmp
mov
mov
mov
xor
cmpsl
fs
ror
outsb
push
shr
cmpsb
mov
dec
daa
fsub
cmp
inc
add
sarb
fisubl
push
sub
and
mov
xchg
arpl
aam
mov
pop
dec
xchg
jbe
xor
stos
xchg
add
jle
jno
xor
jp
ss
lds
lods
gs
and
ret
dec
popa
push
ljmp
cmp
cwtl
mov
add
mov
adc
mov
sub
aas
pop
pop
and
inc
cmp
andl
pop
fucomi
movsl
enter
dec
pop
ljmp
fiaddl
jl
sahf
fwait
jp
adc
and
add
stos
mov
jnp
imul
cmp
shrl
jl
push
jne
cmp
es
repz
jb
xor
cmpsb
xchg
sbb
lcall
push
push
mov
cmp
jecxz
popa
inc
ficoms
out
sti
cmc
sbb
mull
jnp
jo
adc
lea
jbe
out
xchg
adc
mov
popa
cmc
dec
sbb
pop
inc
loop
push
cmp
aad
sti
fwait
fs
cmp
aam
xchg
xchg
loop
jle
or
xchg
mov
hlt
out
pop
push
mov
sbb
out
jecxz
push
dec
daa
mov
xor
test
mov
mov
mov
mov
mov
repz
mov
mov
push
sar
cwtl
je
push
mov
fucomp
clc
js
lea
add
int3
sub
cmp
stos
loop
cmp
jns
enter
cmp
lock
mov
popa
xchg
xor
cmpsb
pusha
outsb
dec
jb
xchg
jmp
icebp
push
fwait
insl
xchg
popl
and
scas
clc
and
stc
and
push
pop
mov
mov
iret
cwtl
aam
mov
mov
jne
mov
shll
cmp
dec
push
frstor
stos
cmp
dec
add
jbe
or
mov
inc
mov
push
fstps
adc
push
outsb
pop
or
inc
add
ret
jle
push
popa
cmc
xor
cwtl
shrl
xchg
cld
mov
sbb
imul
mov
add
imul
out
mov
add
call
mov
jns
imul
xlat
out
mov
or
in
faddp
les
pop
ljmp
in
mov
jg
and
outsl
negb
dec
jecxz
mov
adc
mov
repz
sarl
mov
jle
lcall
dec
mov
in
push
enter
roll
sub
mov
fstps
jmp
mov
addr16
ret
jo
adc
shrl
jae
icebp
mov
fwait
add
sub
xor
inc
and
sahf
xor
add
push
notb
push
or
adc
adc
insb
or
add
loop
and
sub
add
cmp
mov
lock
movsb
add
mov
mov
cltd
sub
gs
cs
mov
add
mov
adc
or
add
aaa
and
pop
adc
add
xchg
pop
imul
movsb
andb
fnstsw
pop
cmp
inc
in
dec
jmp
aaa
push
pop
insl
fldenv
pop
or
sub
cmp
mov
out
ja
fistl
mov
xlat
xchg
and
xor
mov
mov
es
subl
lret
outsb
lret
fildl
out
dec
insl
pop
mov
push
addb
insl
cmp
mov
imul
ljmp
mov
test
sbb
push
cmc
aaa
mov
andb
lahf
pushf
lock
or
inc
cmc
pop
adc
sti
std
ss
je
mov
push
fsubr
and
std
fmul
and
aam
push
test
loope
mov
push
nop
test
leave
or
or
xchg
fbstp
test
inc
mov
test
push
mov
adc
and
nop
shlb
out
add
popf
rcrl
cmpsl
xchg
dec
pushf
xchg
decl
cmp
mov
aad
mov
dec
and
mov
jno
enter
inc
mov
mov
sbb
mov
mov
dec
iret
pop
rorl
fildl
mov
cld
verr
pop
add
mov
push
or
lahf
lock
adc
inc
ds
int
js
add
rorl
in
stos
fnstcw
outsb
sbb
inc
jns
nop
adc
add
sahf
je
and
lret
dec
lret
jmp
jb
stc
mov
lds
rclb
mov
stc
outsb
fwait
cmpsl
dec
movsl
repnz
in
inc
rolb
scas
frstor
and
sti
lods
mov
pop
leave
add
mov
cmp
cmp
ss
pop
add
rcrl
mov
or
mov
mov
in
add
repnz
hlt
inc
ljmp
jb
jge
sbb
clc
adc
sbb
jg
push
or
inc
dec
pop
adc
fiaddl
cmp
cld
leave
jae
movsl
mov
iret
test
bound
sbb
repz
push
mov
jo
ja
push
and
testb
clc
std
xchg
cmp
lahf
stos
push
xchg
loop
mov
or
insb
sti
bswap
scas
stos
xchg
mov
aaa
sbb
pop
out
and
inc
pop
jnp
xchg
call
repz
mov
test
jge
push
xchg
loop
jl
push
movsb
xchg
mov
lods
fists
mov
iret
leave
enter
popf
aas
mov
xchg
lret
mov
jg
icebp
mov
inc
push
add
pop
ja
cmp
push
inc
movsb
add
aam
inc
arpl
mov
add
popf
pop
test
lods
pop
clc
jo
and
push
clc
push
adc
sbb
xor
or
idivb
mov
push
addl
fimull
mov
loope
loopne
lret
xchg
mov
leave
push
sbb
jne
mov
xchg
test
das
icebp
add
pop
test
leave
inc
dec
add
push
ret
or
cmpl
adc
sub
mov
cmp
sub
sbb
outsb
pop
mov
out
cltd
jnp
dec
arpl
in
sub
xor
xchg
fisubs
call
lods
ror
ret
mov
cmp
xchg
mov
sub
or
mov
mov
adc
enter
xor
lods
in
and
add
pop
hlt
adc
push
testb
xor
cmpsb
ret
das
testb
push
movsb
pop
inc
pop
fdiv
fcomip
pop
cli
clc
adc
inc
mov
xlat
or
or
test
sbb
pop
jb
mov
out
add
scas
pop
jne
in
adc
in
pop
mov
add
insb
xor
rcrb
xchg
aaa
negl
cld
ss
mov
xchg
cmc
jns
mov
cmp
cmp
push
fwait
push
dec
sbb
pop
push
mov
das
fbld
mov
xchg
fcoml
adc
cmovle
movsb
fs
stc
fs
in
jge
and
insl
cmp
push
rcll
jns
test
jb
add
vucomisd
mov
stos
mov
push
xchg
jbe
in
cs
jne
push
mov
hlt
xchg
rcll
dec
mov
pop
push
push
pop
dec
les
xor
inc
pop
inc
mov
xchg
lea
jbe
in
or
jp
mov
push
loop
jg
push
rorl
jo
xchg
sbb
insb
loope
add
arpl
or
and
or
mov
ss
outsb
scas
out
test
add
mov
push
xchg
sbb
xchg
loope
insb
mov
insb
xchg
sbb
psrad
stc
pop
dec
addr16
mov
cmc
pop
popa
lods
inc
sbb
adc
mov
cmpsb
insl
xchg
in
fidivs
and
bound
xchg
insb
lret
dec
xlat
fldenv
je
or
mov
mov
push
arpl
sarl
sbb
and
xchg
inc
test
xor
sub
fadds
dec
xchg
push
jg
push
test
xor
cmp
jo
sbb
push
arpl
jp
lahf
mov
cwtl
aas
lds
aas
adcb
push
test
xorl
imul
mov
mov
push
xor
scas
bnd
repz
add
xchg
imul
pop
daa
pop
inc
xlat
dec
xor
adc
clc
jge
fs
inc
push
stc
or
sti
mov
cmp
mov
push
pop
aas
das
mov
xchg
dec
sub
jle
xchg
xchg
shlb
sbb
push
insl
stc
cmp
and
jnp
xor
mov
dec
cmp
sub
stos
and
jb
js
aam
int
push
cmp
fdivp
pop
cld
call
fmuls
testl
dec
jne
jno
mov
incb
cmpb
push
and
out
fiadds
dec
jmp
mov
dec
dec
cmp
lcall
sbb
fcomip
pop
mov
sub
mov
lea
scas
pop
incb
fstl
daa
mov
hlt
test
in
std
lock
cmp
push
push
jg
jbe
mov
fwait
inc
ja
or
ret
fildl
fwait
push
mov
pusha
wbinvd
jbe
mov
in
arpl
cmc
into
xor
inc
iret
mov
lods
dec
and
mov
mov
xor
in
xchg
out
subb
and
fiaddl
xchg
inc
lods
lahf
adc
dec
adc
scas
xor
lds
ret
cli
jbe
push
int
mov
xchg
imul
dec
fwait
jl
sub
repz
jno
inc
call
gs
add
and
nop
xor
jo
cmpsl
jno
and
and
or
xchg
fisubs
insl
jp
fs
ljmp
jbe
out
lret
aas
xchg
shr
adc
push
jg
testb
add
xchg
data16
into
fisttps
xchg
mov
test
nop
mov
push
add
jge
ljmp
or
xchg
mov
inc
lret
jno
in
leave
nop
ljmp
xchg
aaa
or
pop
jne
dec
push
adc
hlt
inc
cmpsb
pop
inc
jnp
mov
nop
popf
jns,pn
pop
dec
dec
jmp
aas
out
inc
xor
js,pn
push
add
mov
mov
and
adc
movl
into
add
insl
outsb
inc
pop
or
add
inc
dec
adc
push
ja
repnz
push
cwtl
add
dec
sbb
jge
or
mov
shr
cs
cltd
mov
dec
negl
xchg
add
sub
mov
andl
int3
cmpb
jne
jo
or
sub
xor
popf
push
and
clc
dec
mov
repz
out
popa
cmp
push
push
push
xchg
xchg
bound
mov
gs
push
add
adc
out
out
sbb
dec
jge
inc
insl
push
push
pop
sub
or
pop
sub
mov
cmpsl
fstl
out
dec
jge
imul
sub
mov
in
rol
push
loopne
xor
jp
lret
sbb
in
inc
mov
xchg
hlt
in
cld
adc
adc
popa
xchg
mov
out
push
mov
mov
in
fcoms
or
sbb
lods
fstpl
xchg
mov
lahf
out
mov
jns
rcll
fstl
out
jns
rcll
cmp
jb
sub
xchg
scas
jb
loopne
jl
xchg
jge
fwait
add
test
lret
enter
rcll
cmp
cs
loopne
pop
dec
insb
cli
leave
mov
testl
xchg
pop
into
notl
sbb
fmuls
loope
dec
add
outsb
jo
test
test
testl
lock
xchg
out
jnp
sub
xlat
inc
lea
lret
or
stos
ljmp
inc
cmpsl
push
inc
call
mov
pop
mov
inc
leave
cmc
data16
outsl
dec
dec
and
pop
push
ret
int3
clc
mov
add
and
adc
cmp
out
adc
xorl
sub
hlt
jne
xchg
xchg
or
sti
call
push
xchg
in
xor
xor
adc
pop
js
filds
aad
cmc
and
xor
adc
mov
imul
sbb
inc
adc
mov
jecxz
xor
cltd
jl
inc
mov
push
ja
pop
sbb
data16
lcall
imul
lea
imul
pop
repnz
in
push
add
and
in
aaa
jle
mov
add
push
lret
adc
stos
mov
sub
inc
push
dec
and
shl
sub
clc
ret
insb
push
pop
out
xor
addr16
cmp
stc
scas
lock
movsl
sbb
xlat
xchg
imul
test
in
inc
js
arpl
sub
jo
cmpb
or
cwtl
fidivl
andb
or
mov
mov
cmc
sub
cltd
pop
mov
fidivrs
pop
mov
and
or
arpl
inc
test
lds
aaa
scas
enter
cmp
sahf
and
iret
sub
notl
mov
jbe
jnp
fwait
lret
fildll
cmp
add
loop
and
pop
shrl
mov
stos
jge
out
cmp
inc
fnsave
icebp
lret
in
insl
adcl
aad
cmp
xor
fisttpl
andb
mov
ss
pop
mov
or
push
shll
insl
pop
mov
jno
mov
pusha
add
push
pop
sbb
mov
test
pop
xchg
or
js,pt
or
push
dec
loop
mov
fnsave
stc
test
xchg
sub
mov
sub
repz
mov
rcrb
xchg
push
lcall
cld
mov
sahf
inc
or
inc
cmp
adc
in
icebp
push
push
test
das
jb
pushl
pushf
sbbb
pop
inc
lock
jb
icebp
iret
ja
lock
pop
out
mov
and
das
popa
cmp
inc
xlat
xchg
lcall
pop
mov
lret
jge
mov
addl
dec
psubq
jmp
or
lea
dec
mov
popf
mov
insb
xlat
and
fsubl
test
push
popf
pushf
inc
adc
ret
xor
popa
xor
or
add
cmp
push
sub
jp
sub
test
and
lret
popa
sbb
pop
and
mov
out
popa
pop
mov
and
out
xor
add
push
popa
mov
insl
mov
lret
daa
push
daa
inc
mov
movsb
cmp
aaa
mov
div
pushf
pop
sub
clc
pushf
cwtl
out
out
sbb
testb
sub
movsb
lcall
dec
or
lcall
adc
mov
add
fisttpl
test
out
pop
int
pusha
lret
inc
shll
mov
add
jmp
jg
out
in
or
jno
and
int
push
outsl
imul
sbb
adc
outsb
mov
lcall
mov
pop
push
clc
inc
lock
sbb
or
lcall
aaa
lods
adc
subl
imul
fucom
fwait
pop
push
lret
mov
xchg
jle
mov
nop
dec
int3
mov
notb
lds
leave
lret
mov
fimuls
rcrl
fldcw
cwtl
sub
sarl
js
pop
bound
daa
lea
or
in
test
test
pop
stos
lcall
jmp
rcll
cmp
inc
mov
sbb
imul
jmp
aad
test
push
decl
mov
test
xchg
mov
test
push
rorb
or
data16
and
ret
lret
xor
nop
lahf
xor
repz
fstpl
jmp
or
xor
decl
jg
sub
sbb
fwait
and
stos
inc
das
jmp
jle
data16
cltd
sub
xchg
aas
jae
scas
not
dec
outsl
mov
lret
cmp
fwait
imul
cmp
jne
insl
test
pop
bound
jl
xchg
mov
shl
mov
shl
dec
pop
sahf
mov
mov
cmpsb
je
xchg
es
mov
das
fs
ss
pop
lret
pop
mov
or
stc
add
fnstenv
push
aaa
jnp
mov
pop
xchg
mov
dec
xchg
stos
cmp
int3
cmp
sbb
adc
push
out
mov
push
cli
das
js
dec
lahf
dec
push
lea
adc
pop
jle
pushf
xchg
div
ret
pop
sbb
stos
jp
sahf
sub
push
scas
fnstcw
and
pop
and
inc
jno
add
xor
into
xchg
jbe
dec
aas
xchg
cmp
push
sbb
int3
dec
adc
pop
int3
inc
adc
jge
mov
cli
int
cs
adc
imul
scas
andb
in
jp
ljmp
lcall
add
in
add
stc
mov
lods
xchg
popl
dec
dec
push
jns
bound
test
outsb
mov
icebp
mov
mov
dec
jecxz
push
adc
shlb
bound
pop
sbb
jns
mov
mov
xchg
jns
nop
xchg
test
inc
fld
xor
dec
cmc
jg
mov
lock
dec
bswap
or
je
mov
outsl
imul
std
pop
pop
out
jle
jns
inc
arpl
xor
sub
movsb
pop
icebp
arpl
sub
adc
dec
push
inc
shll
popf
ds
out
jg
pop
loop
aas
sub
add
xor
imul
jno
inc
arpl
sahf
mov
inc
inc
mov
movsl
fisttps
lahf
push
stc
or
rorb
test
incl
lods
jne
and
loop
xchg
lahf
xchg
into
lret
push
mov
sbb
out
sahf
ds
pop
fidivl
jecxz
lret
and
subl
pop
out
lods
arpl
and
pop
ja
stc
std
sarb
stc
ret
out
call
adc
leave
jb
test
mov
outsb
lret
mov
test
neg
stc
insl
inc
jb
repnz
adc
and
fs
inc
jecxz
and
hlt
or
fldcw
cmp
aad
and
pop
jb
and
jne
mov
and
pop
lea
aam
andl
xchg
jb
jle
cmp
rorl
sub
sub
mov
pop
jne
mov
vmwrite
mov
sub
rcrb
and
adc
jo
sbb
lock
ret
enter
jno
cmp
shl
sub
dec
pop
cli
stos
add
cmp
sbb
sub
movsb
cs
mov
pop
mov
fs
out
dec
in
adc
es
add
sbb
les
sti
into
sbb
aas
mov
xchg
xlat
xchg
sbb
insb
fldlg2
lahf
inc
adc
push
std
cmp
or
aad
inc
xchg
shrb
shll
lcall
or
xchg
xchg
stos
js
mov
adc
jae
aaa
ret
pop
sub
js
shl
mov
or
cs
ret
push
rorb
jo
je
sbb
neg
loope
movsl
pop
arpl
cmp
insb
pop
inc
pushf
xor
aaa
lods
mov
movsb
int
inc
fwait
push
pop
inc
les
in
lret
in
es
sbb
pop
and
clc
cld
fdiv
in
icebp
inc
and
ret
sub
xchg
into
push
insb
insl
push
sbb
stos
dec
popa
push
push
imul
pushf
xor
dec
xchg
add
sahf
pop
ja
xchg
sub
push
rcrl
or
jnp
and
mov
pop
leavew
test
or
out
xchg
or
adc
mov
enter
adc
outsb
fadds
add
repnz
out
jg
dec
test
int
call
pop
inc
cld
mov
xor
mov
movsl
push
add
bound
xchg
iret
mov
das
and
xchg
adc
xor
and
cltd
cltd
or
fidivl
test
dec
in
mov
push
scas
call
shr
fdivs
lret
inc
outsl
mov
inc
sbb
ds
pushf
lea
repz
int
leave
mov
jmp
dec
sub
cmc
add
pop
pop
std
sub
stos
in
mov
lock
pop
add
cmp
mov
les
ja
xlat
mov
sbb
icebp
subl
or
rcr
mov
scas
por
xchg
mov
aam
push
jno
mov
ficoms
shll
mov
mov
mov
add
insl
mov
xchg
cmpsl
clc
push
xchg
mull
test
sahf
cmpsl
add
lret
mull
add
into
movsl
sbb
fsubs
iret
repnz
push
push
fdivs
xlat
aas
sarl
test
imul
clc
call
xlat
jns
jg
cli
adc
lret
stc
jne
leave
or
inc
ja
mov
mov
pop
inc
mov
fdivrs
aaa
mul
cmp
movsb
sub
rclb
xchg
lods
adc
or
cmp
out
mov
or
mov
add
xchg
ja
leave
pop
sub
int3
jg
ret
xlat
pop
pop
xchg
out
ds
stos
adc
scas
dec
insl
ss
adc
andb
into
popf
jle
dec
cltd
mov
mov
fucomp
ds
xchg
fdivrs
push
push
popf
call
test
add
xchg
push
scas
or
mov
or
fistpl
adc
notl
mov
dec
and
jge
sahf
xchg
jns
push
in
xchg
inc
fidivrl
pop
xor
pop
inc
mov
nop
out
ficompl
rcpps
push
push
or
aam
pop
pop
mov
jns
fisttpll
and
push
adc
ljmp
test
imul
jbe
cmpsb
inc
std
mov
pop
inc
mov
aaa
sbb
cmp
pop
jae
test
add
pop
nop
lcall
pop
loopne
subb
imul
xor
pusha
push
enter
mov
dec
icebp
insl
jle
subb
not
xchg
movsb
and
and
ljmp
inc
sbb
sub
mov
add
push
mov
repz
jecxz
xor
inc
out
sarl
cmp
pop
xchg
lret
test
orl
adc
xchg
push
inc
push
cmp
pop
jo
idivl
scas
out
mov
fimull
and
loop
xchg
pop
int3
jno
ds
aas
arpl
insb
dec
movsl
mov
or
and
mov
mov
repz
or
sbb
mov
movsb
xchg
faddl
sarl
rcrb
inc
inc
daa
aas
clc
in
add
xor
xchg
push
es
adc
pop
add
mov
std
int3
subl
leave
loopne
mov
rcll
mov
leave
aas
mov
lock
mov
into
ss
aas
movsb
and
lds
push
int
inc
mov
insl
fs
out
inc
dec
mov
aas
and
sti
sbb
sbb
fcompl
in
repnz
add
daa
nop
std
pusha
clc
in
xlat
mov
cmp
pop
icebp
imul
push
xor
loopne
sti
or
lods
in
or
inc
iret
scas
or
sub
mov
and
xchg
mov
dec
cwtl
mov
loop
out
out
xchg
inc
gs
xchg
mov
pop
jnp
xor
mov
lds
pop
lret
inc
clc
adc
or
les
inc
mov
mov
ficompl
adc
ret
add
xchg
daa
jge
pusha
arpl
mov
xor
adc
shll
sbb
mov
shrb
les
jnp
hlt
mov
mov
loop
xchg
pop
push
fwait
out
xchg
mov
or
aam
lret
andb
lds
mov
daa
scas
dec
jmp
adc
movsb
adc
lret
movsb
push
cmp
aas
aam
jae
mov
adc
in
xchg
ljmp
fmull
mov
inc
out
xor
sub
cmc
or
out
push
lret
daa
sbb
ficomps
inc
je
test
scas
push
lods
vpaddq
imul
ja
jne
pop
adc
cs
jmp
jecxz
es
cmp
out
and
adc
add
add
in
inc
loopne
mov
dec
jecxz
sub
push
repz
not
xchg
pop
mov
lcall
fbstp
inc
cwtl
fisubrs
pop
ror
pop
imul
mov
clc
insb
jbe
lret
out
mov
out
popl
mov
mov
pop
sti
jnp
add
xchg
push
mov
cmp
in
shl
and
loopne
ss
sub
xchg
mov
inc
jp
mov
jmp
xor
push
and
andb
mov
push
lds
testb
test
pop
cmp
lcall
sbb
pop
outsb
dec
mov
call
cmp
add
dec
push
movsb
ret
mov
xchg
in
fldl
adc
lret
mov
mov
jg
mov
sahf
pop
jge
imul
mov
aaa
xchg
jno
sub
pop
lock
call
stos
dec
sub
cmp
cmpsb
shlb
pop
mov
push
in
ja
stc
mov
pushf
push
xor
movsl
imul
inc
sbb
cli
cmp
add
xchg
out
jg
and
inc
cmp
js
movsl
clc
xchg
cmp
adc
cmovns
push
pop
sub
mulb
test
nop
popf
movsb
call
fldl
movsl
cmp
sahf
fcmovu
fwait
repz
out
xor
pusha
call
icebp
jmp
jmp
fcmovb
jo
insl
cmpsl
or
dec
fisubrs
cs
in
in
mov
fidivs
push
arpl
mov
std
aad
pusha
jne
cmovs
dec
repnz
decb
ljmp
fwait
fimull
push
mov
data16
data16
cld
pop
cs
jo
and
sub
push
repz
lret
adc
jmp
cmp
aas
push
iret
add
icebp
push
jno
mov
xchg
xchg
dec
xor
inc
test
or
xchg
push
xchg
jbe
cmp
scas
sbb
mov
loopne
loop
test
cmp
in
adc
fcom
out
mov
mov
out
mov
push
push
mov
ret
fldt
orb
in
outsl
clc
sbb
mov
mov
stos
scas
adc
repnz
enter
aas
ds
inc
push
loop
rclb
mov
add
sub
add
mov
or
pop
lods
movsb
es
insl
jnp
int
or
mov
cmp
mov
lahf
cs
fldt
push
fsubs
negb
push
sbb
ljmp
xor
mov
or
mov
dec
mov
cs
cltd
sti
cwtl
sti
and
repz
inc
sbb
jp
or
ret
xchg
pushf
sbb
adc
jge
mov
or
xchg
xor
sub
push
loope
popf
or
xor
inc
cs
push
cmpsl
les
push
icebp
adc
popf
cmp
mov
das
stos
cli
nop
cltd
insb
cmp
sbb
fisttps
ja
cmp
les
cwtl
aas
mov
adc
pop
add
rorb
daa
out
or
sub
ljmp
dec
cmc
mov
inc
fisttpll
and
mov
pushl
inc
in
cld
xchg
jns
mov
fmull
pusha
test
pop
and
movl
push
pop
cmpsb
cmpsb
daa
pop
ret
lds
data16
or
jns
imul
int3
pop
and
aad
xor
insl
lcall
push
in
fdivs
xor
movsl
cmp
jge
jb
dec
gs
cmp
jb
or
lcall
or
rorb
lahf
out
mov
lea
push
rclb
in
pop
daa
sahf
rorb
dec
jle
mov
stc
popa
add
push
cmp
outsb
sbb
cmp
mov
inc
int
xchg
fwait
push
outsb
mov
fbstp
movsb
xchg
mov
lock
out
int
fildll
mov
xor
in
xor
jg
cmp
in
pop
test
arpl
sbb
pop
scas
add
jae
push
push
int3
subb
mov
sbb
aaa
pusha
sub
jnp
addr16
iret
je
pop
fsubl
dec
and
add
jno
lahf
jno
pusha
adc
pop
bound
adc
int3
xor
std
repz
inc
lret
push
loope
popf
xlat
aad
jbe
jb
ja
adc
cmp
push
and
push
mov
fwait
push
pop
imul
add
inc
insb
lcall
insl
pmulhuw
mov
xor
pop
or
push
mov
sbb
stc
inc
jp
popf
jge
fldl
iret
adc
dec
cmp
pop
and
fisubs
lret
or
or
mov
das
ja
adc
out
loop
jmp
fidivl
jno
dec
pop
fstpt
nop
and
out
xor
push
dec
ja
add
xchg
pop
xchg
xchg
pop
xchg
idivl
out
mov
fs
pop
jmp
push
lock
mov
es
in
jbe
cmp
mov
clc
cmp
data16
mov
cli
fsub
jmp
xor
mov
cld
pop
je
aas
test
pop
cmp
fidivrl
sbb
mov
sub
popa
or
lahf
inc
pop
xchg
xor
sub
xchg
pop
sub
sub
sbb
ficompl
fucomp
mov
scas
mov
xor
enter
loop
iret
xor
dec
sub
int3
loope
mov
inc
mov
push
cltd
sub
add
mov
and
and
mov
ret
ss
cmpsl
xor
iret
jbe
test
xor
xor
sub
aaa
mov
into
cmp
push
ss
inc
stos
xchg
mov
stos
test
mov
insb
mov
adc
jg
int
xchg
mov
inc
pop
fwait
shrb
aam
mov
popw
fs
push
loope
dec
xor
mulb
icebp
xor
jne
fs
adc
addl
or
ss
testl
movsb
pop
pop
sbb
xor
pop
pop
mov
mov
jg
push
sbb
test
fidivs
mov
add
je
cli
and
mull
adc
insb
subb
jecxz
pop
cmp
cmp
les
and
cmp
cmp
jno
cli
mov
or
xchg
dec
push
mov
in
xchg
ss
cmp
cmc
sti
jecxz
popf
iret
fimull
sbb
lock
mov
lret
fsubrl
mov
out
lea
jmp
push
loopne
popa
adc
dec
out
push
mov
fidivl
sub
push
popa
dec
sub
repz
jbe
push
imul
das
cmp
clc
inc
xchg
mov
pop
inc
sbb
push
and
test
clc
outsb
cmp
xor
icebp
mov
addr16
into
sti
inc
rep
sbb
mov
add
aas
arpl
cld
jne
adc
into
inc
xor
xchg
mov
mov
insl
adc
leave
push
das
xchg
mov
adc
mov
aad
stos
add
loopne
test
outsl
dec
adcl
lret
cs
xchg
add
cwtl
cmp
iret
dec
iret
fsubp
in
ss
adcb
pop
or
inc
add
lea
loop
cmpsl
mov
aaa
arpl
fldt
ret
call
stos
pop
out
scas
js
jl
mov
push
pusha
xchg
std
outsl
outsl
outsb
cmc
mov
adc
fsubp
data16
xchg
pop
ds
in
cmpsb
repnz
sub
mov
jno
xlat
inc
pop
add
ja
sub
sbb
push
mov
mov
cs
cmpsb
mov
or
mov
loopne
cwtl
lahf
outsl
ja
push
push
ret
data16
adc
loop
xchg
xor
fs
pop
push
int3
lret
add
outsb
or
fisubrs
rcl
cmc
stos
pop
addr16
sub
sbb
xlat
in
pop
pop
aas
mov
cmp
xchg
aaa
enter
hlt
andl
je
mov
test
mov
jo
shlb
test
mov
fwait
pop
pop
out
shl
dec
lret
popa
xchg
pop
aaa
or
jb
mov
mov
sub
cmp
cmp
cld
mov
mov
mov
cmc
xor
mov
test
sbb
fsubl
call
cmp
sti
push
aas
inc
dec
jno
mov
sbb
movsl
jl
insl
mov
inc
cmpsb
std
imul
push
mov
es
push
adcb
mov
cmp
or
add
pushf
iret
mov
stos
pop
mov
add
rcrb
pop
sahf
cmp
mov
popf
jmp
adc
mov
out
mov
jo
jnp
stos
gs
push
pop
stos
call
lds
mov
rclb
xlat
mov
aad
ret
repz
icebp
in
loop
std
mov
jbe
sahf
je
shlb
inc
pop
push
jle
cwtl
and
adc
jmp
push
addr16
inc
xchg
inc
out
rorb
scas
ljmp
fildll
mov
and
add
mov
and
sbb
add
rol
dec
add
push
jbe
push
push
stos
ret
xchg
mov
stc
loopew
aad
outsb
ret
xlat
cwtl
push
xor
adc
dec
xchg
lret
test
inc
insl
mov
imul
lea
fidivs
push
imul
jl
dec
in
inc
mov
mov
repz
or
xchg
int3
dec
arpl
mov
in
fs
mov
pop
std
mov
imul
loope
lds
ja
xchg
xchg
fmuls
movsl
outsl
inc
fucomi
loopne
push
mov
inc
mov
in
sbb
imul
jmp
js
dec
xchg
dec
inc
pushf
std
lret
xchg
outsb
cmp
negl
mov
push
ret
adc
aad
sbb
mov
lods
xor
adc
pop
fidivs
les
fiadds
mov
and
adc
test
push
pop
aaa
adc
cmp
rcrl
lock
shl
mov
flds
push
adc
addr16
add
xchg
out
js
mov
push
jp
fidivrs
mov
jno
jno
in
inc
fdivrl
mov
int3
mov
or
jns
orb
xor
dec
or
push
mov
test
pop
fcomip
push
jo
pusha
fimuls
adc
test
lods
or
daa
push
cmp
dec
mov
push
add
inc
xor
inc
mov
adc
jmp
cwtl
out
jp
stos
fdivrs
hlt
dec
jbe
sahf
push
xchg
out
mov
ds
cmpsl
mov
xchg
mov
fistps
icebp
sbb
lods
push
push
mov
fwait
or
imul
mov
pop
and
stos
jbe
jmp
ljmp
or
or
jb
dec
stc
nop
out
shrb
mov
mov
pop
int3
test
ret
in
test
idivl
xor
icebp
pop
xor
loope
cmp
sub
loop
popaw
mov
xor
nop
std
out
push
orl
rcrl
xchg
or
cmpsl
dec
je
inc
pop
cwtl
into
mov
xchg
jp
push
mov
es
inc
inc
cli
pop
and
mov
mov
push
ret
pop
xchg
cmc
adc
push
lods
pop
mov
xchg
mov
xlat
mov
arpl
inc
jl
inc
or
in
mov
add
aad
mov
mov
mov
and
inc
stos
xchg
dec
xchg
outsb
sti
xchg
jo
call
push
xor
push
push
xchg
sub
mov
add
movsb
mov
xchg
add
cltd
jl
mov
ret
fs
mov
stos
push
push
inc
lahf
iret
cmpsb
ds
xchg
mov
rcrb
mov
js
inc
aad
mov
bound
push
mov
and
shlb
aad
aaa
dec
mov
xor
dec
packssdw
pop
shl
mov
fisttps
mov
cmpsl
inc
je
gs
jp
repz
pop
add
jmp
mov
dec
jg
gs
lock
jae
add
aas
cmp
fs
dec
addl
inc
jmp
lsl
jg
or
mov
mov
adc
mov
xor
into
mov
ret
pop
lods
movsl
sbb
add
in
fsubs
mov
into
shl
aas
shr
jne
int
adc
jge
pusha
fwait
test
dec
js
loope
or
jae
and
aaa
xchg
and
jae
das
test
push
lea
pusha
and
cmp
mov
leave
test
insb
mull
mov
and
push
cwtl
inc
imul
test
xor
cmc
lock
inc
xchg
pop
test
movsb
sbb
mov
fwait
sub
fcom
jmp
sub
fmull
and
inc
push
xor
mov
dec
imul
stos
sahf
push
leave
out
pusha
daa
lret
fwait
shll
cmc
imul
inc
mov
and
sbb
ret
jbe
movsl
sub
inc
lods
xchg
pop
push
or
scas
jle
mov
push
in
dec
icebp
loopne
test
push
lock
pusha
loop
sbb
cmc
andb
loop
ljmp
jne
aaa
mull
arpl
in
mov
cmp
aad
insb
sub
or
fstpt
push
cmp
push
imul
mov
rol
test
and
enter
in
std
cltd
arpl
push
shll
xchg
push
rcrl
jge
movsl
xor
mov
dec
xchg
mov
xor
in
pop
dec
adc
lods
push
xchg
orb
insl
in
div
mov
mov
pop
incb
cwtl
sub
repz
loope
bound
jp
loope
dec
stos
arpl
sbb
lods
in
hlt
sbb
pop
out
das
out
in
shll
outsl
mov
mov
xchg
ds
mov
and
dec
dec
cmp
or
cmp
shlb
inc
lds
pop
adc
jg
xchg
mov
cwtl
or
mov
notb
push
mov
push
hlt
popf
dec
add
imul
dec
out
adc
push
or
arpl
pushf
jp
pop
mov
pop
stc
inc
push
aad
inc
lds
std
mov
and
sarb
in
mov
pop
lahf
push
jmp
stos
cmc
jecxz
xor
mov
call
ljmp
lret
test
in
bound
inc
jle
mov
dec
shlb
add
jns
mov
inc
sub
int
fs
xchg
movsb
clc
daa
jno
dec
and
pop
or
inc
in
jo
in
jns
push
and
and
fidivrl
clc
loop
fsubrl
lds
pop
mov
xor
in
imul
gs
or
cmc
adc
or
ljmp
insl
mov
push
add
and
inc
sbb
in
loope
pop
test
cmpsb
mov
sahf
lret
mov
and
arpl
cltd
mov
mov
sub
adc
xor
or
xlat
rclb
shll
push
mov
ret
push
int
in
lods
gs
sub
adc
cmp
mov
jno
pop
push
mov
aas
imul
adc
idiv
xor
jl,pt
cwtl
inc
fistpll
mov
and
cwtl
stos
ja
popa
insb
cwtl
xchg
aas
dec
stos
jo
mov
push
cmp
sbb
mov
sahf
mov
add
xor
outsl
mov
js
cs
iret
fstpt
mov
rcll
jno
pusha
mov
jge
bound
lcall
and
dec
ret
fistpl
and
cmpsb
ljmp
add
xor
or
xchg
outsb
xor
pop
mov
les
and
popf
loope
fnsave
out
enter
fs
inc
lds
test
out
in
pop
jno
push
into
hlt
loopne
mov
jne
test
int3
pop
sub
and
out
sub
push
push
fsts
iret
inc
popf
repz
rclb
dec
inc
movsl
pop
test
or
pop
lods
roll
lret
pop
xlat
push
pop
dec
jnp
cmpsl
aad
sti
repz
nop
movsl
fwait
adc
pusha
dec
xlat
fxch
jmp
sar
lcall
push
inc
jb
cwtl
fists
jmp
lret
les
and
inc
popa
pop
insl
xchg
nop
cltd
add
and
sub
cmc
xchg
add
sbb
fsubrl
adc
imul
and
jns
imul
rcrb
dec
mov
xor
out
lcall
lcall
push
pushl
int
imul
jg
pop
mov
mov
in
out
gs
aad
inc
sbb
ljmp
and
push
xor
shrl
pop
nop
jae
int
hlt
outsl
scas
xchg
ljmp
xchg
mov
sub
sub
and
jne
dec
aaa
fildll
lahf
xor
or
insb
add
jo
sub
lods
addl
pop
aad
mov
xor
cld
jp,pt
push
iret
cli
xchg
imul
into
adc
ret
test
sar
mov
mov
mov
fwait
xor
jns
negb
mov
sbb
add
or
movsl
mov
movb
scas
or
mov
sbb
icebp
dec
enter
lcall
xlat
aaa
cmpsb
push
in
popf
std
jge
mov
in
add
mov
sarb
scas
mov
bnd
popa
push
cltd
push
pusha
incb
mov
lcall
sbb
add
jno
cmpsl
mov
or
lds
add
ja
sub
mov
sub
sti
in
adcl
in
cld
cmp
mov
int
sub
insb
dec
lahf
push
cmp
movsb
mov
cmp
sub
orl
les
sbb
loopne
jg
je
xchg
in
sbb
shl
outsb
mov
aas
dec
cwtl
pusha
insb
aas
aaa
call
dec
or
leave
stos
mov
jb
test
mov
mov
jmp
xchg
js
aam
add
sarl
jecxz
xchg
xchg
mov
je
sbb
push
call
test
mov
inc
cmp
incb
jae
in
adc
shrl
in
out
xchg
mov
sub
mov
leave
mov
ds
push
sti
sti
fisubrl
cltd
mov
push
addr16
cwtl
pop
pop
xchg
stos
xor
test
sub
int
lret
pop
addr16
push
mov
aad
pop
pop
sbb
or
js
or
sahf
mov
out
fidivl
fldcw
stos
and
sbb
dec
xchg
rorb
xchg
sbb
imul
cltd
pop
pop
or
out
inc
lods
xchg
jecxz
mov
fstpl
sbb
cmc
xor
or
fnsave
xchg
mov
cmpb
dec
or
xlat
fidivs
xchg
adc
jle
adc
js
mov
sbb
testl
inc
shlb
movsb
xor
loopne
sbb
xor
jmp
sub
notb
fiaddl
cwtl
xor
inc
push
repz
xchg
cmp
and
test
int
fisttpll
adc
dec
cmp
lock
add
push
es
mov
lock
movsb
add
lret
mov
cmpsb
out
xchg
add
fiadds
mov
sbb
jmp
jae
jb
imul
mov
push
sub
gs
inc
cld
pop
cli
shr
dec
dec
lea
cmpsb
xchg
cmpsl
mov
add
mov
cmp
aaa
sbb
mov
pop
jbe
icebp
aaa
vstmxcsr
and
outsl
lret
sbb
dec
lret
jp
pop
movsl
out
dec
in
movl
xchg
jb
adc
push
loopne
xchg
cmp
sub
mov
xchg
es
fisubl
dec
and
cli
push
push
pop
inc
add
lea
push
mov
clc
pusha
pop
jg
int
ret
ret
cld
lods
mov
lcall
mov
pop
lods
xor
insl
push
cmp
cmp
xchg
jo
aad
add
jb
xor
adc
jg
addl
dec
adc
cmp
push
cmpsl
mov
les
cs
dec
ljmp
sub
xlat
sub
dec
cmp
scas
lea
cli
leave
dec
mov
enter
fcomp
sub
dec
sub
daa
xchg
data16
cmp
inc
and
imul
scas
fdiv
push
into
sub
mov
xchg
mov
rorb
pop
dec
sub
xor
mov
add
mov
sub
out
dec
cltd
sub
ret
xchg
jo
loopne
es
fisubs
sbb
or
pusha
pop
add
mov
inc
pop
and
insl
fmull
ds
loop
dec
and
pop
push
sub
in
fnstsw
shll
lds
daa
pop
imul
adc
mov
mov
sbb
xchg
mov
add
inc
mull
mov
push
dec
out
sbb
sub
mov
or
dec
dec
add
in
fsubrs
jno
decb
adc
cmpsb
and
add
jae
fst
ljmp
mov
inc
dec
mov
or
cmp
or
pop
dec
cmp
dec
jbe
int3
lock
insb
push
insb
faddl
int3
dec
icebp
aam
xorb
mov
icebp
xor
and
scas
pop
jno
xlat
or
jmp
mov
ret
pop
adcb
out
cmp
cmp
mov
inc
or
adc
lods
cmp
mov
mov
cmp
pop
mov
jae
xor
jne
jecxz
fwait
enter
pushf
lods
fidivl
add
stos
lret
sbb
int3
push
movsl
movsb
xchg
mov
sbb
pusha
jl
xor
lcall
orb
xchg
adc
fsubrp
test
enter
cltd
dec
sbb
adc
cs
jecxz
fimuls
inc
std
test
or
ljmp
and
add
sub
icebp
jle
fists
fsubr
repz
inc
pop
insl
xchg
testb
xchg
divb
fbld
sahf
stc
mov
sbb
sbb
mov
roll
push
mov
lock
jno
loopne
nop
xor
xor
push
and
filds
inc
aad
dec
pop
jp
outsl
fsubr
stos
xor
cmp
cmp
movl
mov
mov
inc
xor
popf
push
sub
roll
sti
and
xor
jae
jmp
jl
shll
rclb
ret
mov
test
negb
data16
cmp
lods
movsb
or
sbb
iret
aad
xchg
imul
inc
dec
and
leave
je
jmp
in
nop
dec
dec
pop
in
in
and
push
jne
leave
jmp
cltd
adc
dec
addr16
jg
fucomp
bound
cltd
or
popf
sbb
je
mov
test
adc
andb
mov
dec
pop
jb
or
pushf
int
inc
lret
or
adcb
or
and
inc
mov
mov
cmp
popa
mov
stos
push
fs
adc
pop
cmp
and
fsubrp
cmp
xor
jmp
aas
push
lret
xor
cmpsl
jae
inc
ret
dec
je
xor
xchg
cmp
mov
fdivl
scas
push
imul
cwtl
aaa
xchg
sub
popf
popa
addb
mov
arpl
lods
mov
jle
popf
add
inc
into
das
outsb
and
jo
jno
or
mov
pop
mov
mov
mov
lea
in
push
and
jle
dec
sbb
xchg
adc
ljmp
mov
in
test
xor
add
xor
shrb
or
jb
cmpsb
pop
and
sub
in
and
sub
imul
cli
pop
scas
das
in
adc
lahf
inc
fwait
push
add
ds
sbb
jo
iret
mov
lods
lret
sub
sti
xor
sar
sub
sbb
inc
stos
jnp
jbe
les
mov
test
mov
lcall
or
or
je
inc
imul
insl
stos
fdivs
imul
outsl
dec
dec
inc
cmp
dec
xor
pop
bound
jge
sub
cld
popa
lcall
lahf
add
je
and
mulb
or
test
fists
add
xchg
cltd
mov
jle
repz
dec
xor
js
mov
iret
loop
in
cmp
idivb
xor
mov
add
mov
adc
cmpsl
enter
sub
dec
arpl
popf
mov
negl
sub
xlat
test
mov
dec
lret
adc
out
test
cs
sti
jle
call
lret
in
mov
pop
cmp
jle
arpl
loope
sar
ret
out
mov
aaa
xor
cmp
pop
push
push
sahf
stc
jp
lcall
loop
lcall
data16
outsl
push
jge
fisubrs
push
dec
lret
inc
repz
shlb
sbb
int3
loop
mov
pop
adc
cmp
dec
mov
add
bound
xchg
aad
cwtl
mov
or
mov
inc
or
xchg
mov
cltd
jp
fldenv
shll
jg
and
xchg
inc
aaa
or
sbb
ret
sbb
js
pop
inc
loopne
in
shr
rcrb
or
mov
mov
xchg
xlat
shll
adc
push
addr16
sub
shrl
jbe
mov
les
mov
xor
fs
lahf
xor
mov
jle
push
leave
or
mov
ljmp
arpl
dec
leave
push
xor
inc
shlb
or
mov
push
cs
add
mov
in
lock
jp
xlat
popa
add
mov
mov
fcomi
xchg
add
test
jbe
sub
sbbl
mov
jp
pushf
pop
xor
imul
xor
xchg
adc
jp
push
std
loop
inc
dec
movsb
jecxz
fldl
insb
adc
sbb
xchg
jge
in
adc
es
call
xchg
cltd
in
gs
sub
aaa
xchg
andl
sbb
pop
fstl
repz
fs
pop
mov
push
sbb
cmpsb
push
xor
dec
xchg
xchg
stos
xchg
adcl
repz
das
xor
push
mov
ret
mov
xchg
xchg
sub
outsl
and
vhsubpd
out
sbbb
aas
cmp
fwait
rcrl
xor
add
fisttps
dec
add
into
sub
xchg
jecxz
call
les
lock
loopne
push
push
xchg
xchg
push
push
jmp
mov
cld
sbb
sub
dec
push
inc
out
jbe
push
out
xor
adc
mov
test
jns
je
push
imul
inc
into
stos
xor
stos
popa
js
faddl
pop
dec
push
mov
mov
loope
cmp
dec
push
mov
push
mov
and
mov
mov
cmp
or
inc
fidivrs
add
or
sbb
cmpsb
arpl
sub
mov
add
mov
cmp
sbb
mov
xorb
fldenv
xor
mov
sub
cld
or
fcomps
sub
xlat
bound
inc
mov
test
aaa
outsb
lods
lret
sbb
and
dec
mov
cmp
jne
mov
inc
or
movsl
push
js
jae
xor
pop
lret
mov
in
dec
movsb
xchg
add
rorl
jecxz
pop
out
ja
ja
inc
xlat
int
fisttpl
stos
push
mov
mov
pop
aaa
loopne
push
xchg
outsb
pushf
lcall
xor
adc
in
add
dec
xor
or
mov
fnstcw
sbb
aaa
gs
mov
cld
arpl
mov
test
fwait
dec
cmc
repnz
and
test
loope
adc
popf
fs
dec
sti
lods
jl
xchg
mov
andl
ds
adc
sbb
icebp
outsl
scas
push
test
jae
cltd
mov
push
in
int
pop
movsl
outsb
ret
sbb
scas
and
jo
sarb
mov
jl
ret
lret
mov
inc
fidivs
testb
and
adcl
push
popf
push
int3
pusha
xor
cmpsb
bound
mov
or
inc
or
jbe
inc
or
loop
or
addb
clc
jecxz
shl
adcl
inc
ja
or
mov
pop
das
and
pop
loopne
ds
jge
pop
rcr
lods
cmp
push
xchg
mov
jno
int
leave
mov
orb
jp
cs
add
cmp
sub
sub
out
mov
dec
lea
inc
rcll
outsl
push
mov
scas
movsb
imul
mov
rorl
mov
inc
fstp
adc
test
xchg
mov
popf
xchg
test
and
bound
out
xor
movsl
jns
xchg
or
and
aad
and
dec
pop
sbb
rolb
cli
xchg
out
test
cltd
shrl
bound
inc
les
subl
or
mov
jge
push
dec
push
dec
nop
sbb
dec
js
jecxz
or
into
pop
insl
dec
adc
cli
fsubr
test
mov
stc
add
fsts
jns
insl
cmc
neg
aaa
xor
in
jb
adcl
fisubs
sahf
lret
data16
dec
ja,pt
jae
rol
inc
add
xor
les
dec
punpckhwd
scas
adc
sbb
cwtl
fiaddl
aam
in
jp
xor
iret
movsb
and
into
adc
insb
cmp
push
mov
mov
xchg
fwait
or
adc
xchg
shrb
imul
inc
ljmp
enter
lcall
or
dec
pop
int
adc
push
mov
scas
in
xchg
nop
xor
sbb
push
insb
dec
loope
enter
add
iret
fwait
ret
adc
paddw
sbb
clc
mull
fsts
scas
pop
inc
push
cmp
loope
lods
stos
ss
loopne
pop
lods
icebp
mov
inc
popa
fsubr
sub
scas
ret
loop
loope
out
icebp
xchg
inc
iret
test
fwait
out
adc
mov
cld
rcll
stos
jg
icebp
pop
ds
cltd
xchg
adc
iret
jae
lret
push
cmp
adc
ljmp
enter
ds
test
outsl
lock
add
pop
xchg
in
sub
inc
scas
gs
inc
pop
adcl
adc
pop
pushf
mov
xor
in
test
push
notl
pusha
sub
cmpsb
inc
dec
push
lods
add
rcrl
pusha
cld
popa
fisttpll
movsl
xor
fdivrp
subl
jo
int
mov
xchg
xchg
into
cmp
int3
insb
mov
add
mov
mov
add
sub
inc
dec
sub
and
imul
jge
mov
inc
clc
insb
dec
fldln2
gs
lods
push
pop
inc
lock
lret
pusha
jmp
cmp
mov
stos
int
pop
inc
andb
les
adc
out
rcrb
mov
mov
jp
push
sub
hlt
dec
cli
mov
adc
sbb
subb
push
lods
xchg
aas
cmp
aaa
xchg
pop
inc
inc
mov
shll
movsb
cmpsl
call
ficoml
inc
jo
loopne
or
push
imul
ficompl
in
imul
cmpsb
mov
or
pop
sti
lsl
hlt
push
push
popf
inc
jle
pushf
and
mov
jge
addr16
sbb
push
scas
sbb
sbb
push
rcrb
jecxz
js
enter
cmp
shrb
jp
movsb
and
test
xorw
mov
lret
test
int
xor
cmp
sbb
adc
jge
sbb
mov
fldenv
sbb
xor
loopne
clc
aas
jne
push
mov
imul
or
dec
jb
mov
stc
filds
sub
add
in
clc
mov
cmp
in
outsb
adc
and
out
sti
lret
sbb
in
dec
or
inc
mov
je
popf
push
test
cmpsb
andl
shlb
or
cmp
pop
sub
adc
outsb
pop
sbb
outsb
push
push
mov
jb
push
mov
shll
pop
pop
pop
adc
in
or
enter
fisubl
shl
lods
jmp
repnz
or
push
lea
xchg
mov
jnp
jns
bound
testl
int
and
out
mov
shrb
std
jno
mov
xor
bound
and
cwtl
adcb
pop
mov
pop
leave
sub
pop
lods
mov
jo
gs
jns
insb
ljmp
and
ljmp
int
cmp
cmp
out
ljmp
in
ss
cmc
or
push
movsb
xchg
js
jmp
xchg
hlt
shrl
adc
aaa
dec
fstl
push
xchg
pushl
cli
adc
test
and
xor
and
movsl
dec
aas
in
mov
adc
push
iret
inc
imul
loopne
scas
add
xor
mov
cltd
ffreep
pop
mov
dec
int3
popf
adc
cmp
mov
es
mov
mov
xchg
sti
ss
iret
rorb
nop
adc
test
sbb
mov
cmp
lret
jns
lret
jno
or
repnz
jns
mov
xchg
inc
cmp
movsl
es
das
jne
rol
fwait
and
xchg
sub
jg
outsb
mov
inc
imul
ss
xor
mov
xorl
mov
dec
mov
ret
jo
testl
push
lahf
sahf
sbb
fnstenv
adcb
bound
fstl
incb
lds
adc
mov
in
rclb
pop
lret
cmp
cmp
aas
mov
les
cltd
xchg
les
mov
xor
and
lods
pop
jmp
xor
inc
inc
mov
pop
pop
mov
pop
and
push
ret
cwtl
in
lcall
xor
mov
add
or
arpl
scas
shr
out
inc
outsl
int3
leave
scas
jp
arpl
std
cmp
sbb
lret
std
testb
enter
rol
push
inc
adc
repz
xchg
std
les
mov
dec
aam
subl
mov
or
movsb
xchg
aam
imulb
push
sub
fisubl
or
inc
jne
sbb
into
sbb
cmp
loop
lds
add
and
jmp
and
ret
stos
jb
stos
in
xchg
cld
loope
mov
dec
xor
mov
sti
out
or
mov
pop
mov
sbb
sub
jo
repz
test
pop
dec
push
pop
jge
xor
lcall
ja
mov
mov
mov
mov
add
mov
frstor
jmp
popl
subb
mov
das
inc
fwait
jmp
sbb
enter
push
dec
cwtl
aas
xor
fs
jnp
pop
out
lahf
jmp
pop
sub
scas
push
mov
call
outsb
jle
push
test
add
mov
jne
or
imul
cld
xchg
add
inc
popf
bound
pop
scas
xlat
mov
and
lods
dec
mov
cmc
pop
cmp
ffree
xchg
ror
inc
sub
cmp
and
push
shlb
or
sahf
xor
leave
std
data16
shl
rcll
sbb
mov
aaa
hlt
scas
popa
xchg
xor
xchg
mov
ds
mov
mov
mov
mov
or
inc
popa
jns
push
cwtl
fimull
add
mov
push
orl
jo
aaa
xchg
pop
and
sub
lahf
or
gs
imull
int
mov
loope
mov
cmp
in
xor
int3
mov
adc
fcomi
cmpb
and
scas
sbb
rcr
sbb
call
insl
enter
arpl
xor
in
sub
sub
cmp
aad
aaa
xlat
jo
mov
ja
loope
pop
in
fdivr
push
lea
xchg
movsb
cmp
out
inc
mov
rol
aaa
clc
push
rcl
jbe
cwtl
cmp
in
sbb
add
shrb
cmc
shlb
repnz
push
xchg
mov
jl
mov
and
stc
loopne
ficoms
cmpb
test
xor
fstps
add
mov
popa
imul
or
add
popf
mov
into
and
loopne
stos
push
adc
mov
mov
pop
or
add
adc
popa
out
fnstsw
push
xchg
mov
out
xchg
dec
mov
mov
sub
jl
ljmp
sub
sahf
pop
cli
shl
not
ljmp
clc
cltd
test
xor
icebp
cmc
int3
jge
shlb
inc
xchg
push
sbb
pop
mov
int
repz
adc
or
push
loop
scas
dec
and
jg
inc
adc
xor
dec
pop
add
ljmp
mov
sbb
imul
inc
lret
inc
outsl
loope
or
lods
pop
cmp
pop
jp
sub
icebp
lods
mov
dec
aas
xor
jg
inc
daa
sahf
push
pusha
mov
and
and
pop
and
xchg
fstl
gs
or
js
into
xor
adcb
jl
incb
xchg
std
push
pop
repnz
jge
lods
cmp
subb
addr16
jbe
aas
dec
int3
movsb
jp
pop
shll
mov
jge
push
ret
push
jge
jb
cmp
add
dec
cmc
sahf
rcrl
andb
lods
int3
aam
popf
xor
sbb
loop
ror
jnp
into
push
bound
leave
cmp
in
adc
mov
mov
daa
movsb
mov
imul
jle
or
sub
fsubrs
fbstp
inc
ljmp
fs
cli
shrb
and
lcall
sbb
xor
adc
loop
pop
mov
inc
and
mov
sbb
jg
add
pop
mov
pusha
dec
fnsave
mov
cmp
cs
lods
scas
fidivrs
push
xchg
adc
insl
xchg
mov
jno
inc
lret
jne
dec
cmp
mov
or
mov
ds
push
jns
out
mov
push
cmpsl
fwait
cmc
and
sbb
repnz
jle
mov
popa
pop
int3
adc
psadbw
aam
and
sub
es
scas
xor
jmp
out
jle
popf
in
stos
mov
add
test
xor
adc
loop
fldenv
mov
mov
mov
faddl
fldcw
outsb
scas
inc
in
int3
or
inc
lods
xor
fisttpll
js
fcmovnb
sbb
jmp
popa
jge
dec
push
in
and
add
sbb
and
sahf
cs
punpckhdq
cli
in
icebp
gs
and
jp
dec
iret
inc
dec
cmp
je
loopne
pop
cltd
fstpl
and
mov
icebp
std
jl
sub
add
clc
inc
jb
into
cmp
loop
xor
div
inc
aam
ficompl
cltd
dec
sub
dec
pop
scas
xchg
dec
dec
pushl
fisttpl
xor
mov
xor
pop
and
cwtl
je
std
or
xor
push
pop
in
push
bound
movntps
sbb
fcoms
adc
jmp
dec
aad
sbb
add
add
or
xchg
xlat
ret
mov
cmc
stos
and
jl
daa
lea
andl
push
iret
arpl
test
mov
and
sahf
lock
adc
fisttpl
nop
in
dec
push
lahf
ds
addr16
sub
sbb
or
xor
gs
and
pop
std
out
xchg
clc
or
cltd
movsl
push
push
das
pop
daa
or
xchg
lock
cmc
enter
in
sbb
jae
xchg
sti
int
out
mov
in
rcll
dec
popa
mov
ror
xchg
pop
pop
into
push
jnp
ret
sahf
pop
sub
aam
pop
lods
cltd
icebp
ljmp
outsl
pop
jl
adc
scas
xchg
in
xchg
imulb
pushf
mov
pop
pop
popf
aad
push
data16
fst
test
mov
icebp
inc
stc
cs
aas
and
fiaddl
lea
dec
std
out
mov
clc
stos
xchg
mov
mov
jmp
in
mov
pop
popa
inc
js
push
mov
pop
xchg
jl
test
pusha
and
divb
pop
enter
xchg
jle
adc
ficoml
aam
sub
or
mov
testl
mov
lret
shrl
js
out
ds
cmp
jb
loop
jle
mov
push
in
mov
xchg
push
sbb
xor
lret
push
mov
xor
mov
clc
loope
push
sub
insb
outsl
scas
pushl
mov
call
scas
mov
in
dec
test
int
xor
ss
dec
andb
sub
sti
add
imul
cmp
punpckldq
inc
stos
out
hlt
xor
icebp
xor
fisubl
add
mov
stos
scas
cmp
test
aam
sub
sbb
xchg
push
pop
stc
outsl
inc
push
mov
sarl
sbb
xor
aad
lock
xor
xchg
je
jnp
lret
imull
testb
cltd
movsl
cmp
adc
lret
mov
adc
leave
adc
push
mov
jmp
xchg
mov
mov
orb
sbb
push
testb
add
lcall
jae
fwait
xchg
fwait
xchg
mov
inc
repz
xlat
cmc
inc
jp
jo
fs
push
pusha
mov
bnd
mov
dec
lds
cmp
rcll
arpl
pop
inc
push
cld
outsl
pop
sub
imul
mov
mov
and
cmpsl
popa
pop
adc
ss
adc
sub
bound
fsubl
mov
adc
xor
cmpsb
call
mov
out
cmc
test
enter
lods
pop
mov
aaa
dec
mov
in
stos
in
lods
sub
pop
arpl
pop
fs
and
jae
xor
repz
xorl
mov
push
add
sbb
cs
bound
lods
sbb
mov
pop
add
xchg
mov
mov
jne
mov
or
rorb
mov
dec
into
push
push
fs
add
inc
outsl
mov
add
fcmovnbe
add
fsubrs
and
adc
shl
cmp
cli
pushf
mov
adc
cltd
sahf
ja
pop
mov
or
or
xor
test
xor
sar
sti
inc
mov
cmp
push
fscale
stos
or
add
pop
fdivr
mov
into
in
hlt
xchg
jbe
and
mov
push
sub
dec
mov
mov
adc
into
xchg
sub
nop
xchg
mov
or
adc
flds
stos
adc
ficoms
mov
cmpsb
adc
xor
daa
pop
xchg
and
test
mov
and
das
jno
inc
dec
mov
enter
push
pop
inc
es
stos
and
ds
and
cmp
sub
addr16
je
sti
push
in
adc
shll
cmpsl
adc
iret
xor
inc
add
test
fwait
lods
and
xor
jne
addb
rcrb
sub
outsl
or
mov
xrelease
sub
addr16
out
mov
adc
int3
subb
mov
adc
pop
jno
es
je
test
fstl
sti
nop
dec
shrl
mov
push
pop
or
loope
sub
pop
xchg
lret
sbb
cmp
inc
out
cmc
dec
dec
test
sub
fcmovnbe
into
shr
jmp
adc
out
cwtl
inc
push
add
stos
scas
cmp
sub
dec
sbb
xchg
int3
dec
sbb
dec
mov
pop
push
cvtps2pd
push
mov
insl
jle
mov
pushf
bswap
mov
fisubrl
inc
push
mov
out
sbb
roll
jmp
into
aaa
adc
mov
cs
imul
push
out
cmp
adc
mov
dec
cli
addr16
out
sbb
mov
andb
sbb
sti
je
inc
into
push
out
out
pusha
and
xor
movsb
jnp
daa
fistpll
xchg
push
add
test
movsb
daa
sub
mov
test
mov
aaa
xchg
push
ja
adc
daa
jle
sbbb
addr16
frstor
push
stos
out
mov
jmp
jnp
repnz
sarl
jecxz
lcall
cmp
dec
inc
pop
ja
ret
push
xchg
jmp
rcr
pop
bound
xlat
cmpsl
sahf
dec
xor
and
cmc
dec
adc
mov
pop
ret
add
lahf
mov
fs
mov
fidivrs
daa
scas
scas
cmc
lahf
dec
inc
mov
and
ljmp
and
mov
lock
insb
mov
ss
bound
xor
js
cltd
and
loop
xchg
sub
and
popa
shrb
fwait
cmp
jb
aam
xor
cmp
fidivrs
mov
xlat
or
aas
inc
pop
addr16
loop
mov
sbb
dec
sub
jne
sbb
mov
hlt
jecxz
push
lds
rorb
push
mov
pop
fwait
adc
rep
and
test
mov
enter
pusha
add
imul
hlt
adc
fbld
inc
add
mov
xor
sbb
jmp
dec
jge
mov
xor
sbb
cmp
sti
and
mov
or
je
xor
les
pop
rclb
pop
add
test
rcrl
push
repz
test
and
call
int
sub
out
daa
repnz
scas
ret
imul
stos
pop
cli
xacquire
xchg
clc
ljmp
xor
jecxz
sub
and
orl
xor
jns
lods
ss
sahf
xor
cld
mov
mov
cmp
xchg
movsl
imul
out
adc
test
and
cmpl
imul
jmp
sbb
or
xchg
cmpl
lret
imul
xchg
or
je
pop
iret
call
pushl
xchg
and
adc
add
fld
jnp
in
ret
and
xor
movsb
test
leave
adc
mov
aas
icebp
dec
cmp
mov
mov
fisubl
cltd
push
clc
fs
push
mov
add
lock
push
mov
add
out
jne
pop
shll
mov
fisubl
xchg
mul
pop
push
pop
adc
mov
xchg
out
jecxz
orl
cmp
pop
cmpb
mov
push
mov
test
jg
xchg
inc
sub
lods
icebp
push
sub
lods
outsb
and
inc
mov
imulb
jecxz
jo
mov
out
mov
jbe
jno
std
mov
mov
loope
std
add
bnd
cli
inc
and
jno
call
lcall
scas
mov
cld
sahf
mov
jb
dec
adc
cmp
dec
or
dec
push
inc
inc
pop
add
push
clc
jne
lret
js
xchg
outsl
mov
imul
hlt
inc
jae
insb
nop
js
cmp
iret
mov
mov
mov
cmp
add
jecxz
push
idivl
sub
into
mov
push
inc
mov
lahf
jp
in
fidivs
mov
mov
js
jp
xchg
jno,pn
adc
push
push
adc
xchg
fndisi(8087
mov
inc
xchg
pop
je
mov
inc
adc
push
fbld
jg
imul
inc
adcl
jmp
gs
mov
sub
sub
xor
or
jbe
sbb
gs
aam
xchg
cli
jle
fstpt
fs
ret
or
aaa
daa
or
std
jne
outsl
push
add
shrb
lea
push
je
pop
lods
ljmp
pop
xchg
mov
xchg
ljmp
push
insl
dec
cmp
xor
inc
jg
pop
stos
insl
imul
shl
mov
in
rcll
add
lea
push
push
cmp
in
adc
fs
insb
mov
into
rolb
cmpsl
mov
mov
outsb
cmpsl
leave
cmpl
insl
adc
fs
sub
jbe
movsb
add
push
test
pop
or
insl
lea
or
sbb
jns
sbb
out
clc
lods
fcomps
cmp
dec
sub
push
cmp
vcvtpd2dqx
cmp
mov
inc
fidivrl
gs
cmp
inc
ret
fnsave
push
daa
sbb
arpl
add
pop
push
fistl
fisttpll
mov
imul
scas
repnz
rcl
adc
cli
mov
aad
testl
loope
cwtl
stos
ficoms
push
inc
pop
inc
dec
f2xm1
mov
jns
cli
sub
jns
sahf
fildl
call
push
icebp
mov
and
movl
fxam
dec
and
push
sub
imul
adc
sbb
inc
inc
fsts
shl
or
lds
xchg
cmp
pop
mov
addr16
pop
push
push
add
mov
cmp
or
xorl
cltd
jl
movsb
pop
sub
enter
cmpsb
loopne
xor
fists
xor
push
pop
cld
ret
and
iret
and
push
dec
dec
arpl
rcrl
pop
imul
sbb
mov
flds
add
cltd
fwait
dec
pop
loopne
jae
xor
lds
jno
xorl
cmp
dec
push
sub
cmc
push
xchg
cmp
inc
mov
stc
sub
mov
cmpb
jp
decl
test
movsb
lock
js
pop
cmp
jnp
xor
repnz
pop
mov
mov
fs
in
stc
sbb
mov
in
sti
xchg
mov
mov
cli
mov
or
mov
push
cs
push
pushw
sti
roll
jne
push
or
testl
les
movsl
cs
in
int
dec
mov
and
push
pushf
inc
sbb
and
cmp
fsubrs
dec
filds
cli
hlt
enter
xlat
adc
repnz
frstpm(287
shll
sbb
mov
sbb
xchg
adc
pop
ss
xchg
jne
mov
sbb
inc
or
adc
sbb
repz
cmc
lds
dec
fwait
mov
insb
jge
jno
xor
cmp
gs
and
test
adcb
mov
pusha
mov
popa
dec
push
xor
push
push
sub
xchg
scas
dec
test
adc
xchg
jo
cli
adc
shrl
sbb
addr16
inc
iret
mov
cs
dec
or
push
stos
scas
in
clc
add
in
xor
imul
ret
sbb
xchg
dec
cmpsl
fcmovnbe
insb
cmpsl
jbe,pn
xchg
adc
pop
in
jge
mov
into
push
mov
in
push
fcoml
dec
pop
mov
sub
mov
fcmovnbe
daa
rcl
pop
sbb
dec
movb
js
sarb
mov
xchg
lock
xor
imul
push
leave
dec
adc
jne
pop
pop
adc
insl
xchg
jno
in
inc
add
sub
mov
adc
sub
loope
dec
int
add
adc
lds
ret
jl
imul
repz
pop
mov
mov
aas
lods
jmp
out
bsr
loopne
imul
cld
jbe
jmp
cmp
mov
or
adc
ds
dec
orb
pop
adc
mov
sbb
push
dec
jmp
stos
sbb
adc
repnz
frstor
lret
mov
dec
jmp
leave
loop
lahf
mov
xchg
sbb
outsl
mov
test
cmpl
dec
inc
cmp
lock
pop
out
or
clc
mov
pmuludq
ret
adc
popl
mull
mov
cmp
jnp
in
sbb
pop
out
xchg
in
and
shrb
pop
cmpsl
fsub
jo
scas
orl
sub
into
jno
cmp
xchg
hlt
repz
mov
mov
leave
dec
int3
imul
arpl
cmp
sbb
cmp
sbb
mov
cs
fbstp
jnp
int3
sbb
adc
cmp
push
shll
cmp
or
add
mov
xchg
ret
push
xor
cs
xchg
push
ret
rclb
loope
mov
repz
or
icebp
ret
sbb
cmp
fsts
mov
cmp
sti
repnz
pop
jp
mov
imul
pop
inc
sbb
pop
mov
hlt
inc
test
pop
mov
and
xchg
dec
stc
xchg
aas
mov
test
cmpsb
fisttpl
cli
outsb
icebp
dec
pushf
je
mov
imul
aas
test
pop
clc
add
or
sbb
xchg
jb
daa
xor
and
adc
lcall
cmp
cmp
adc
adc
jb
cld
in
aas
jl
lcall
data16
xchg
xchg
mov
fsubs
out
pop
xor
push
dec
mov
pop
int
xchg
push
pop
mov
push
sub
jns
ljmp
popa
lods
mov
aad
mov
bound
lret
add
rcrb
fwait
imul
sbb
pop
loopne
int3
jmp
lods
dec
into
iret
add
fsubrl
jno
cmp
repz
aam
xor
sbb
mov
fstpt
cmpsb
iret
lahf
mov
fistpll
cmp
mov
int
or
out
in
idivl
jne
insl
inc
cli
dec
outsl
popf
push
fwait
pop
inc
jns
jecxz
sbb
shr
mov
sub
das
mov
rcr
push
stos
sbb
inc
fcompl
xor
or
enter
fcmovnu
sub
movsb
lods
mov
mov
imul
mov
test
in
ror
shrb
ds
pop
push
push
imul
cmc
out
lahf
sub
mov
pop
addr16
sbb
and
pushf
lock
dec
mov
movsb
cmp
sub
movb
imul
adc
push
adcl
mov
hlt
scas
mov
jge
ret
orb
sbb
test
push
jo
xor
js
add
in
adc
fnsave
scas
sub
pusha
or
out
mov
aaa
adc
fdivp
push
fstps
push
sbb
into
or
ljmp
dec
mov
ret
loope
or
sbb
lret
es
leave
scas
cmp
mov
hlt
mov
xor
ds
push
mov
xchg
ret
cmp
adc
fldenv
mov
xor
sub
in
outsl
dec
push
adc
icebp
mov
jmp
push
adc
add
or
jnp
and
out
sti
std
push
je
nop
out
mov
xchg
dec
sbbl
dec
das
out
stos
fstp
sub
test
inc
mov
addb
mov
stos
repz
stc
fisubrl
add
mov
pop
add
daa
sbb
ss
testb
mov
or
xor
aam
sub
and
in
adc
xchg
pop
popa
adc
and
pop
sub
xchg
sti
push
cmp
mov
sbb
cmp
cmp
and
ret
rcr
pop
in
fwait
loope
sahf
sbb
sub
push
and
incl
pop
frstor
mov
ljmp
ficompl
int
fimull
pop
sub
pop
in
out
adc
adc
xchg
cmc
ret
call
sbb
incb
xor
mov
fdivr
into
cmpsl
lcall
xchg
jbe
repz
add
adc
out
mov
push
push
pop
sahf
inc
sbb
xor
add
rorb
sub
pop
jmp
mov
mov
jnp
es
adc
arpl
out
lahf
pop
pop
cmp
push
pushf
mov
cli
jae
je
cmpsb
sbb
test
jle
lods
jmp
lcall
pop
mov
daa
lock
push
inc
mov
iret
mov
mov
fadd
cmpsb
push
sbb
mov
xlat
add
dec
es
in
inc
cli
pop
outsl
out
addb
repnz
xchg
roll
jns
lods
and
fs
xchg
ret
loope
es
pcmpgtb
ficoms
pop
stos
je
sub
inc
and
fstl
popf
and
es
cmpsl
loopne
rcl
sbb
jo
xchg
xor
and
lret
pop
jg
popl
jae
jo
jl
mov
sbb
adc
lret
add
jge
daa
ffree
cmpb
icebp
or
cmc
pop
dec
call
pop
mov
enter
cmp
fadd
mov
das
data16
jg
or
lods
loop
sbb
pop
mov
ret
es
add
insl
inc
push
cld
stos
int
or
and
loop
lods
push
ficompl
or
adc
movsl
pop
jae
sbb
test
outsl
das
imul
clc
icebp
pop
mov
filds
xchg
rcrb
jo
jge
int3
and
push
pop
cmp
add
jae
cld
xchg
daa
sub
dec
adc
xchg
incl
jns
mov
data16
std
xchg
xchg
dec
imul
cmpsb
sub
mov
cmpsl
fwait
and
loop
push
xchg
stos
jle
daa
dec
adc
push
icebp
and
shl
pop
sub
rclb
shrl
js
push
mov
jge
mov
dec
movsl
ss
sub
mov
adc
sub
ja
xchg
shlb
sbb
push
pop
sub
cs
push
mov
in
mov
loopne
nop
bound
les
jo
aad
aad
add
sub
adc
push
dec
into
mov
pop
popa
ds
xchg
mov
mov
jmp
push
ja
cmp
sbb
push
xchg
ds
fcompl
outsl
pop
add
sub
jb
movb
icebp
mov
push
inc
flds
subl
mov
adc
lret
jb
push
pop
inc
cmp
loope
in
pop
sarl
mov
cltd
pop
jecxz
shrl
jae
xchg
cmc
ds
sbb
or
and
xor
loope
sbbl
daa
cltd
xchg
sub
push
adc
add
icebp
ds
add
shrl
les
aas
or
sub
sub
in
decl
inc
mov
testl
insb
or
xchg
sbb
daa
sub
mov
push
inc
push
jmp
sbb
test
imul
inc
lret
cmc
xor
and
insl
fst
inc
out
repnz
xchg
xchg
hlt
xchg
in
cmpxchg8b
dec
mov
xchg
je
pop
daa
sub
jp
pop
push
cltd
sbb
cmp
fs
mov
fbld
dec
out
lcall
xor
xchg
nop
or
pop
xchg
mov
in
lcall
jge
pusha
push
or
push
mov
mov
add
xrelease
ss
repz
and
pop
sub
iret
mov
and
push
mov
sub
mov
jge
adc
mov
and
fdivs
sbb
rcrl
adc
jb
inc
or
movsl
hlt
loop
pushl
add
lods
mov
sub
loop
jb
dec
dec
cmp
and
mov
adc
mov
lds
push
pop
lods
dec
inc
pop
je
sbb
and
push
aam
in
fnsave
stc
add
adc
sub
dec
sbb
cwtl
xchg
dec
or
or
sbb
inc
sub
leave
or
movsl
adc
das
test
or
push
inc
xchg
mov
sbb
jb
and
lea
ja
rol
lret
das
adc
pop
mov
nop
mov
aaa
dec
jbe
dec
jne
mov
mov
test
and
data16
subb
dec
ret
mov
push
repz
or
out
or
pop
add
ficoms
nop
cld
in
inc
sub
mov
scas
add
adc
rcrl
cwtl
push
sbb
into
test
cmp
fdivp
jnp
cmc
test
popa
pop
ja
add
jne
nop
lds
sub
or
dec
xchg
addl
xchg
call
stc
lods
mov
rcll
adc
sbb
and
jne
jbe
cmpsb
cmp
mov
out
rorb
jp
fcmovnb
xchg
mov
adc
addr16
xchg
dec
popa
dec
mov
mov
or
mov
popa
jno
adc
jmp
or
xchg
mov
or
lret
stos
lea
add
xchg
call
pop
insb
add
cltd
sub
xor
push
adc
lods
repnz
mov
cmp
add
mov
add
mov
push
mov
and
push
inc
mov
lds
bound
inc
sahf
les
mov
int3
xor
or
lods
sbbb
or
rol
xor
mov
xor
pop
or
push
sub
lods
xchg
in
bound
sarl
loope
or
pop
loop
lret
ljmp
lret
inc
pop
imul
cmp
addl
cld
out
popa
sub
aaa
adc
add
insl
inc
in
lea
mov
dec
andl
scas
xchg
mov
stos
insl
loope
jne
loop
icebp
xchg
cmpsb
enter
sub
xchg
add
das
fs
adc
inc
sub
addr16
js
jbe
cmpsl
stos
pop
add
xor
mov
push
xchg
inc
insb
scas
loopne
mov
lods
adcl
imul
and
fdivrs
mov
and
cmp
push
adc
pop
or
jp
lcall
pop
out
fsubs
data16
int3
sub
jp
je
mov
adc
cmp
push
imul
xchg
push
sub
mov
out
jns
and
jo
jge
lahf
daa
push
push
pop
pop
xchg
lea
cmp
sub
pop
test
fistl
mov
cmp
int3
xchg
idiv
push
cmpsl
lds
mov
ficoms
out
data16
imul
sbb
cmp
add
adcl
xlat
movsb
push
dec
jp
sub
clc
into
icebp
push
sub
mov
cmpsl
pop
jo
xor
fs
dec
push
cmpl
xchg
mov
push
add
daa
lret
repz
and
and
fldcw
mov
stc
push
cmpsl
and
shlb
fstp
out
shrl
push
push
adc
mov
cmp
movsb
or
loope
pop
int
cld
add
cmp
add
lods
aam
pop
imul
push
incb
enter
cmp
pushf
xchg
dec
gs
pop
mov
add
xor
les
clts
pop
jb
sub
lahf
adc
jne
int
and
fwait
mov
movsb
in
insb
mov
clc
jp
inc
stos
out
int
adc
add
insb
hlt
jae
scas
rclb
negb
test
xor
or
sub
in
dec
adc
mov
cmp
test
mov
adc
mov
orb
insl
dec
out
in
xchg
add
xchg
aam
gs
lods
or
pop
icebp
mov
aad
out
ud1
dec
jg
pop
jp
stc
nop
shrl
rcrb
sub
add
and
bound
inc
inc
movl
sub
icebp
lods
sti
mov
inc
mov
jb
out
lock
add
adc
sahf
push
test
fnsave
sbbl
shlb
pop
cmpsl
int3
xchg
inc
ljmp
xchg
pop
fs
jae
ret
push
and
jg
cmp
outsl
orl
mov
stc
push
jle
out
mov
mov
stc
xchg
dec
mov
xchg
in
outsb
stos
dec
cmp
stos
bound
jmp
jno
test
cmp
inc
out
lret
mov
or
mov
sbb
nop
push
dec
push
lods
leave
cmp
cmp
jl
imul
cwtl
mov
cmpsl
adc
push
xor
add
inc
push
rcll
sbb
into
je
enter
mov
insl
xorb
adc
ljmp
ret
in
fwait
je
fdivs
repnz
repz
xchg
inc
jae
adc
inc
sbb
pop
setae
push
push
jae
push
insl
inc
fcoml
cmp
ja
in
insl
dec
lret
jae
add
xchg
subl
push
inc
hlt
xor
xchg
rol
cwtl
cmp
push
sub
shlb
sbb
popf
ficoms
and
pop
lods
in
imul
xor
imul
adc
jnp
jge
xchg
xchg
mov
bound
je
pushf
mov
test
adc
aad
jecxz
mov
stos
lods
ljmp
call
das
adc
sub
sub
std
cmp
in
cltd
add
adc
jl
ja
ljmp
mov
sbb
mov
add
fiaddl
push
cmpsb
or
pop
scas
stos
cmp
test
adc
je
cs
inc
and
mov
loop
mov
das
mov
roll
nop
addr16
dec
notl
enter
cwtl
repz
xor
leave
outsb
cmpsl
js
mov
js
loopne
pop
repnz
insb
xor
inc
inc
xor
divb
xor
loope
add
xor
mov
orl
mov
in
mov
cmp
sub
repnz
repz
loopne
adc
sbb
lds
mov
ljmp
scas
sbb
aaa
sub
and
cltd
test
and
mov
pop
lods
pusha
and
idivb
jecxz
cmp
push
ljmp
das
repnz
adc
inc
repz
cmpsl
jp
add
push
int3
notb
pop
pusha
jns
ret
movsl
cmp
adc
pop
dec
jo
stos
dec
cmc
fisubl
dec
movsb
sbb
inc
jb
in
or
stc
mov
push
mov
pop
push
nop
lds
in
subl
dec
xchg
shll
xchg
dec
jo
and
mov
cmp
sbb
fisttps
divl
adc
fnstenv
in
push
sub
ror
hlt
sub
in
cmpsb
ficoms
lock
jmp
lea
add
add
jne
lea
or
or
pop
push
ret
mov
add
lock
iret
clc
insb
mov
jl
rep
in
scas
dec
xchg
in
or
addr16
inc
cs
enter
mov
jge
sbbb
fcmove
cmp
dec
out
push
lret
mov
aam
in
insl
mov
xor
repz
xor
cmpsb
xor
pop
aad
rcl
inc
xor
mov
ljmp
sbb
xrelease
jmp
insl
jno
jnp
mov
cmp
fstl
xchg
sbb
jmp
fidivl
cs
fsubr
fistpll
fwait
cmc
out
dec
jne
sbb
or
aaa
pushf
jo
xor
not
push
jmp
insl
jnp,pt
mov
cmp
jle
adc
push
mov
add
repz
cltd
mov
inc
enter
nop
test
xorb
data16
jne
inc
dec
fcoms
outsl
mov
inc
pop
push
inc
cmp
insl
scas
push
mov
sbb
lahf
or
push
lret
iret
mov
adc
das
fdivs
cmp
mov
xor
imul
sbb
dec
xor
xor
aas
xchg
lds
sub
add
mov
subl
in
xchg
pusha
rclb
bound
out
icebp
pop
xor
shrl
jb
out
mov
pop
fcmovb
dec
rorl
je
mov
fptan
imul
outsl
jl
jmp
mov
imul
jno
sub
sbb
movsl
pop
outsl
push
xchg
sub
insl
rorl
int3
xchg
mov
test
adc
out
call
push
lea
xchg
mov
loope
or
jb
repnz
xchg
mov
mov
jmp
sbb
int
sbb
xor
rcrb
scas
push
jns
std
and
push
or
loop
ret
shrl
mov
mov
sub
fcompl
pop
in
cmpsb
shl
jbe
mov
xchg
mov
lahf
loop
mov
add
inc
insl
movl
aam
ja
stos
loopne
mov
bound
aad
xor
pop
sub
push
adc
orl
cmp
sbb
pushf
div
push
mov
mov
pushf
and
js
mov
jp
xor
stos
out
cmovl
xlat
mov
lods
and
sbb
movsl
inc
push
lret
dec
jg
nop
xchg
jns
fistps
push
outsb
pop
push
sub
inc
push
and
les
scas
mov
xor
enter
sti
push
jl
fdivs
dec
ret
sahf
mov
sbb
bound
xchg
popa
fwait
fs
xlat
inc
sahf
jecxz
dec
cmp
repnz
xlat
shrb
and
ja
std
adcb
mov
loopne
pop
dec
xor
mov
mov
pop
in
sar
push
dec
or
adcb
aad
sbb
je
cld
pusha
sbb
cmpsb
dec
and
test
stc
jno
jmp
in
adc
ja
inc
insl
adc
test
or
sub
push
push
xchg
adc
mov
lcall
xor
jne
mov
imul
and
fs
lds
stc
sub
faddl
cmp
push
mov
mov
pop
ss
insl
jb
mov
push
jge
cmpsl
loopne
sub
test
push
clc
out
push
pop
add
dec
fcompl
adc
pushf
adc
rorl
mov
negb
pop
xchg
scas
jmp
cmpsl
sbb
jnp
mov
xchg
inc
ljmp
jb
lds
notl
cmp
push
adc
pop
pushf
push
out
test
add
dec
addr16
push
popf
por
pop
pop
out
mov
xchg
je
popf
ss
xchg
xchg
cmp
inc
inc
lret
push
imul
rcl
int3
mov
dec
push
lods
int3
inc
mov
in
aaa
sbb
or
cmp
xor
xchg
enter
out
test
rcr
cmp
pushf
lock
dec
cmpl
iret
test
stc
insb
push
add
pop
or
sbb
pop
pop
xchg
stos
mov
enter
divl
and
and
sbb
fidivrl
adc
cmp
and
ret
cs
dec
cmp
lock
pop
dec
and
iret
push
mov
sbb
ret
mov
add
sbb
xor
sbb
push
pop
fistpll
push
ljmp
xchg
sub
movsb
mov
cmc
xor
xchg
shl
mov
das
add
mov
or
add
pop
je
add
outsb
fldenv
xor
jmp
xor
inc
push
lret
cmpsl
and
mov
dec
jmp
sub
nop
push
cmp
push
cwtl
mov
mov
push
imul
jne
sbb
sar
ret
dec
xorb
add
pop
ljmp
jb
sarl
mov
ret
cli
lock
jl
cmp
aaa
or
loopne
cmp
out
sbb
shlb
ror
cmp
js
out
push
stos
xor
aam
sbb
and
sbb
cmpsl
adc
push
test
das
fnstcw
fwait
dec
push
aaa
xlat
movsb
bswap
pop
lea
push
iret
dec
and
inc
ficompl
sub
cmp
mov
mov
lds
inc
and
stc
inc
leave
add
sbb
jp
shll
cwtl
lahf
pop
aaa
test
iret
rclb
scas
cwtl
inc
cltd
jo
ficoms
clc
inc
test
xchg
daa
iret
jno
imul
push
test
and
cmpsb
test
adc
test
mov
insl
in
pop
and
pop
scas
rcll
xor
xor
icebp
ret
jg
adc
loopne
insb
dec
sbb
mov
ficompl
sbb
sub
arpl
xorl
and
in
mov
pop
stos
mov
jp
test
or
jge
push
mov
push
mov
mov
and
jecxz
scas
xorb
insl
adc
push
xchg
cmp
lods
pop
int
icebp
sbb
lahf
fmuls
jecxz
adc
in
bound
mov
cmp
lock
add
test
fstp
cs
mov
xor
mov
into
sahf
jg
mov
lcall
scas
mov
in
or
ds
fmull
mov
xchg
fucomp
jbe
lcall
xor
aaa
and
xor
je
jae
add
fsubl
jmp
out
xor
cmp
arpl
rorl
lock
adcb
cmp
imul
repnz
dec
sub
push
add
mov
ss
ja
shl
or
fdivs
lods
mov
fldt
icebp
cmp
xchg
or
fbstp
or
mov
xchg
aaa
sbb
push
lds
ss
push
lret
mov
iret
cli
cmp
ljmp
adc
orb
in
fcomp
or
inc
pop
inc
adc
jl
loope
pop
mov
mov
sbb
adc
nop
xor
xchg
mov
test
jb
jl
outsl
mov
push
mov
or
sti
vmovq
mov
dec
aas
dec
sbb
xor
sarl
repnz
stc
lds
out
pop
jle
jmp
mov
shlb
cmp
fdivl
sbb
movsb
cs
ss
sub
sbb
jb
pop
push
add
adc
dec
gs
push
mov
sbb
sbb
jns
or
pop
mov
cltd
xchg
popf
nop
bound
shrb
sbb
popf
adc
cmp
push
pop
ffree
cld
inc
rcl
sbbl
add
mov
add
jmp
fwait
imul
test
cmpsl
pop
or
mov
add
cltd
mov
jg
push
cmp
xchg
inc
std
shll
sub
jns
jge
xor
out
ret
add
cmp
adc
ret
xchg
jg
sahf
xchg
out
adc
nop
cmpsb
outsl
nop
loopne
or
scas
data16
mov
mov
lods
sbb
loope
loopne
test
jl
xchg
add
cli
xor
pusha
xchg
xchg
movsb
rcrb
sahf
out
push
lock
les
rolb
iret
cmp
cmp
lds
lahf
adc
loop
inc
mov
jnp
popa
lock
xchg
mov
mov
lods
cld
mov
mov
enter
enter
lcall
int3
faddl
add
jns
or
xchg
cltd
xchg
or
xchg
or
or
in
sbb
dec
sub
xchg
jl
pop
jb
mov
sti
pop
mov
cwtl
and
inc
dec
adc
sub
or
pop
sti
add
lock
fbstp
bound
shll
jnp
jno
aam
inc
lock
clc
inc
cltd
gs
movsb
xchg
jb
push
adcb
xor
jbe,pn
es
shll
adc
xchg
inc
jne
stos
aaa
push
jns
mov
aaa
adc
pop
inc
inc
out
ret
dec
outsb
nop
fstpl
jae
ds
pop
mov
and
xchg
in
cs
fistpl
push
cmp
pop
arpl
or
pop
mov
pusha
insl
mov
lret
mov
pop
std
repnz
push
inc
aaa
lods
dec
jne
fwait
mov
out
movsb
adc
inc
or
inc
repz
and
neg
xor
xor
push
mov
ss
dec
lods
sub
adc
in
sti
adc
or
ficoms
mov
aas
xor
pop
mov
outsb
sahf
stos
jnp
sarb
pop
cmc
xlat
out
adc
stos
cmp
dec
dec
add
push
shrl
fimuls
pusha
mov
out
pop
and
mov
or
pop
lea
mov
or
pusha
add
hlt
mov
ljmp
add
and
loop
xchg
fistpl
jae
popf
jb
mov
sbb
je
adc
cmp
nop
mov
lds
pop
jle
loope
mov
jecxz
xchg
push
inc
aad
xchg
push
out
in
or
inc
and
sub
inc
dec
inc
test
xor
out
sarl
mov
or
xchg
out
pop
imul
fcomp
lods
xor
sbb
shll
push
sbb
scas
and
lret
sub
inc
mov
in
test
repz
js
cmpsl
mov
decl
hlt
mov
mov
loope
or
in
jp
pusha
mov
outsl
divl
jbe
cmp
mov
sub
cli
jbe
hlt
aad
pop
sbb
xor
lods
pop
mov
push
lahf
mov
cmp
bswap
add
pop
iret
cld
jge
gs
add
mov
jmp
mov
add
cmpl
or
scas
std
mov
mov
pop
xor
icebp
cld
repnz
pop
outsb
push
xor
xor
push
stc
pop
call
daa
push
cmpsb
insb
call
sub
sub
dec
adc
lock
shll
cld
movsl
js
fwait
inc
hlt
inc
addl
stos
in
sbb
xorl
inc
xchg
or
pop
and
xchg
pop
jno
popa
shrl
pop
insl
mov
xchg
mov
popf
pusha
mov
push
pop
js
jmp
test
in
dec
mov
cmp
lods
mov
pop
aas
aas
sub
bound
addr16
fxch
lret
pop
aaa
lcall
outsb
adc
xor
xor
dec
adc
push
and
fadds
mov
scas
div
andl
push
fnstsw
shrb
adc
mov
mov
jp
stos
pushl
arpl
rorl
add
sub
imul
daa
inc
mov
push
popa
cmpsl
arpl
push
maskmovq
idivl
and
aas
rorl
pop
jns
into
addl
sti
clc
jb
jmp
das
pop
out
adc
dec
jnp
pop
adc
nop
pop
cmp
pop
pop
xor
cmp
fimull
and
daa
and
stos
cmpsl
and
xor
push
push
inc
stos
cwtl
or
mov
pop
sahf
test
shl
push
mov
dec
mov
jecxz
shrb
hlt
dec
add
out
hlt
add
loope
out
xchg
les
stos
add
cmp
mov
ds
pop
arpl
test
jle
jl
jnp
cwtl
ss
out
scas
outsl
sub
jmp
pusha
imul
mov
rep
mov
sbb
cltd
push
fiaddl
ret
cld
mov
rorb
add
xchg
dec
scas
sahf
pushf
dec
fidivrs
cmp
pop
dec
xchg
or
cmpsb
jg
xchg
inc
mov
and
push
mov
imul
push
xor
insl
rcl
and
je
scas
idivl
test
movsl
push
cmp
dec
movb
sbb
cmp
ss
fcmovnb
lock
mov
fstpt
jns
sbb
jbe
loopne
das
and
xchg
shlb
fwait
outsl
sbb
mov
push
inc
popf
pop
arpl
jne
and
leave
int
xor
xchg
fst
mov
sub
push
insb
jp
pop
xchg
xor
adcl
lret
jae
scas
or
push
out
and
lods
xchg
cld
cmp
or
fsubs
fdivl
lcall
fbstp
jno
add
fnstcw
add
mov
repz
and
cmp
jnp
adc
out
dec
push
xlat
push
adc
mov
notl
out
adc
jmp
mov
out
ds
loopne
insb
lods
pushl
cmpsb
lahf
and
mov
in
xchg
dec
push
xor
daa
std
scas
in
ret
dec
outsl
add
sbb
add
out
fistpll
cmp
popf
imul
aaa
lret
repz
lahf
sbb
aad
loope
add
popf
nop
into
adc
sbb
xchg
jae
fwait
pop
push
sti
outsb
mov
mov
adcb
loopne
push
mov
dec
adc
data16
adc
sub
add
arpl
fisubl
mov
xchg
xchg
xchg
pop
sub
or
pusha
and
fs
lods
imul
fisttpl
loope
pop
loopne
es
mov
xchg
pushf
or
dec
jne
cmp
cmp
xor
push
enter
daa
pop
push
pop
dec
mov
or
xchg
jns
sub
sbb
sub
sbb
jae
or
mov
mov
fistl
sahf
jno
mov
jo
jnp
pop
push
cli
mov
xor
mov
pop
sbbl
es
mov
popf
mov
fisubrs
and
xchg
jp
rcrb
dec
pop
lcall
cmpsb
dec
insb
ljmp
push
cs
cmp
cmc
stos
push
nop
ret
xchg
jb
repnz
xchg
cmpsl
mov
cmp
push
stc
or
xchg
out
push
fcomp
mov
sbb
pop
mov
aam
adc
rolb
loopne
ret
push
mov
leave
jo
les
pop
push
jo
or
stc
mov
sub
inc
cs
scas
xchg
test
jo
and
pop
loopne
rolb
xor
jp
mov
or
int3
pop
push
inc
sub
pop
imul
mov
movsl
or
jge
mov
loopne
loope
cli
sbb
negb
mov
in
mov
inc
or
xchg
aas
leave
jle
sub
add
push
sbb
fwait
and
movb
pop
sbb
lea
adc
and
xor
or
sub
mov
shlb
mov
xchg
jecxz
movsl
cld
lock
sub
xlat
or
pop
inc
int3
adc
out
cwtl
push
out
movsb
inc
cwtl
divb
pop
inc
ds
cmp
pusha
cld
xchg
mov
pop
loopne
push
mov
lods
xchg
ljmp
imul
hlt
psubsw
mov
scas
or
or
popa
push
push
lret
sub
mov
lret
cmp
pop
adc
in
dec
xchg
mov
adc
cltd
lods
push
lcall
jl
mov
mov
mov
sbb
fs
cmp
scas
sub
adc
push
rcr
gs
xchg
mov
cmc
lea
mov
aad
insb
cmpsl
and
jl
loop
push
add
sahf
mov
outsl
mov
dec
das
push
iret
jle
aad
inc
cmp
rcll
cmp
dec
fldcw
mov
sub
aam
mov
mov
cmp
sbb
xor
push
xor
mov
mov
stc
cmp
inc
out
xor
ret
inc
into
sbb
add
movsb
mov
rcrb
sub
rclb
jbe
inc
xchg
inc
jno
mov
cmc
push
xchg
into
test
mov
sahf
imul
fldcw
repz
repz
push
and
jno
or
mov
mov
push
fldcw
xor
pop
jbe
pop
out
movsb
xchg
adc
repz
jl
sarb
les
sbb
bound
and
jle
sarb
and
rol
adcb
mov
sahf
scas
div
scas
imul
in
stc
push
dec
jno
lock
fisttpll
lcall
data16
lret
mov
dec
sbb
in
das
insb
push
sti
jmp
andnps
or
in
loope
xchg
dec
and
mov
dec
and
bound
rcl
dec
adc
dec
out
adc
xchg
xchg
imul
ja
sbbl
add
cli
cli
outsb
sahf
das
imul
and
pop
enter
cli
xor
insb
adc
cmc
pop
sbb
cmp
ds
lock
mov
lock
movsb
add
fadd
dec
mov
out
xor
mov
xor
inc
pop
xlat
repz
mov
and
cmpl
aaa
mov
jecxz
aad
cld
dec
not
add
sbb
sti
push
sbb
add
xorl
add
xchg
xorb
lret
out
cmp
and
sbb
adc
or
pop
mov
xchg
fmull
sbb
push
xor
repz
and
lds
sub
mov
popf
pop
push
mov
insb
std
mov
movsb
sbb
stc
cmp
mov
sub
cmp
adc
aaa
fidivs
xchg
cmpsl
orb
xor
sbb
enter
or
pop
dec
loope,pt
int3
ret
mov
mov
and
push
ljmp
cs
mov
cmpsb
pop
inc
inc
xor
repz
dec
mov
pop
ja
in
lret
loope
lock
imul
dec
stos
iret
movsl
mov
cld
les
mov
fld
int
into
inc
outsl
adc
out
inc
nop
inc
cld
adc
sbb
mov
adc
xlat
mov
jb
add
xchg
insl
jns
jge
dec
scas
stos
xor
test
lea
inc
iret
cmpl
sbb
mov
imul
insl
fchs
aaa
ss
pop
jae
pop
mov
mov
test
nop
push
arpl
or
mov
adc
mov
mov
mov
mov
and
xor
mov
cmp
add
sub
call
xor
mov
mov
aaa
mov
jbe
pusha
xor
mov
jmp
inc
cwtl
adc
inc
and
and
ficoml
inc
push
push
add
and
movsl
push
dec
adc
or
jl
and
lods
mov
arpl
repnz
add
gs
add
jp
cld
in
adc
cmp
pop
lret
cmp
rcrl
inc
mov
push
push
shr
push
ljmp
pop
xor
mov
daa
cltd
xlat
nop
push
dec
pop
aas
mov
cmp
scas
add
movsl
sbb
addl
and
pushf
mov
mov
inc
sarl
pop
repnz
enter
stos
pop
std
aad
sbb
sbb
fwait
sub
mov
cmp
or
mov
ret
in
cli
scas
subl
pop
mov
in
pop
jg
mov
nop
rol
xchg
cmc
sub
ret
stc
gs
lea
cmpsb
outsb
jne
lcall
jmp
scas
aaa
in
mov
leave
push
inc
mov
xchg
mov
push
subb
mov
sub
add
out
xor
in
mov
lds
sahf
add
insl
push
add
aad
stos
mov
add
push
pop
push
gs
stos
and
cmp
in
jns
pop
loopne
scas
and
aad
cs
adc
sbb
shlb
lock
in
mov
nop
add
iret
inc
and
lret
dec
fisubs
scas
pop
fstps
xor
adc
imul
mov
leave
inc
incl
dec
xlat
pop
sub
shrb
cmp
std
nop
les
aam
pop
repz
push
inc
aaa
mov
pop
xor
mov
bound
or
pop
xlat
inc
push
xchg
and
rcll
aad
push
out
mov
cmpsl
dec
jl
xor
pcmpgtb
fists
fbstp
js
rorl
push
mov
pop
push
jnp
adc
cmpl
jge
xor
mov
ficompl
cltd
hlt
stos
clc
mov
cmp
push
and
fldenv
inc
cwtl
aad
mov
xchg
cmp
and
pop
add
xchg
popa
mov
je
roll
xlat
scas
roll
stos
mov
lea
and
push
mov
int
incl
xchg
ljmp
cmp
repnz
insl
adc
call
cwtl
sbb
sub
icebp
sbb
aaa
adc
dec
out
rcrl
subl
and
sar
jne
out
lds
mov
add
stos
pop
xlat
fwait
mov
inc
or
insl
daa
xchg
cmpsb
bnd
mov
mov
mov
pop
in
jnp
push
cmp
xchg
pop
mov
mov
negb
xchg
rcrl
and
mov
xor
cmpsb
das
shr
movsb
cmpsl
mov
test
leave
pop
pop
add
push
sar
fistl
leave
inc
cmp
imul
or
or
pop
cli
movsl
mov
adc
sti
xor
daa
push
mov
push
leave
in
sbb
mov
add
movsb
mov
push
xor
fs
xor
and
cmp
inc
sbb
jne
push
outsl
fisubl
mov
lahf
imul
mov
pushf
fcompl
movsb
in
mov
or
cld
push
mov
mov
mov
mov
jb
pop
xchg
lock
mov
push
fistl
out
addr16
fisubrs
mov
jg
add
pop
sbb
or
jge
sbb
and
out
mov
aad
mov
repz
cmp
roll
sahf
es
xor
orl
stc
imul
jp
imul
ds
adc
mov
imul
ret
and
jne
adc
mov
out
lret
data16
and
dec
fcomi
cs
xor
jno
sub
sbb
les
int
push
fsubs
push
mov
xchg
inc
scas
lahf
and
mov
pop
inc
movsb
mov
push
hlt
lds
mov
scas
int3
xor
stos
in
dec
dec
out
stos
bound
into
xchg
sub
adc
pop
sahf
push
enter
xchg
mov
addr16
js
pminub
cli
jge
add
dec
adc
js
rolb
popa
push
adc
stos
scas
in
cmp
iret
mov
out
or
int3
push
mov
cmp
mov
mov
lods
imul
xlat
cli
ja
mov
mov
jo
pop
mov
jecxz
push
and
ljmp
nop
jge
in
stos
fstps
clc
cmp
daa
fs
test
jg
das
and
sub
pushf
mov
inc
xor
dec
les
pop
push
dec
adc
mov
imul
jo
inc
mov
push
int3
imull
in
or
add
dec
movsb
stos
mov
dec
cli
sub
and
arpl
xchg
shll
cmpb
mov
cmp
xchg
mov
dec
aad
jmp
pusha
mov
pop
cli
andb
mov
pushf
and
fnstenv
xor
loop
xchg
pop
dec
outsb
lds
aas
mov
push
je
pop
mov
loopne
test
enter
leave
lahf
add
pop
aad
pop
push
cmc
adc
daa
mov
leave
adc
jle
xor
aaa
lock
add
pushf
sbb
scas
mov
bound
shlb
mov
sub
fmul
ret
dec
cs
cmp
mov
dec
or
jae
fdivl
or
sub
rorl
lahf
adc
dec
ljmp
inc
push
shll
cmp
or
mov
push
or
es
sub
mov
test
jno
test
cmp
mov
mov
test
or
ja
sbb
sub
aam
arpl
in
mov
test
cld
or
lods
sbb
fbstp
mov
test
or
repz
sub
adc
inc
scas
daa
xchg
test
dec
mov
pop
mov
fnstenv
cmp
pop
sbb
or
sub
es
mov
imulb
out
jge
adc
xchg
mov
mov
decb
cmp
into
mov
iret
stos
outsb
ret
cmpsl
movsl
fs
enter
xchg
dec
cmp
inc
into
hlt
and
gs
in
pop
mov
enter
int
loopne
jae
popa
cmp
lret
mov
jmp
sub
mov
push
movsl
das
jmp
in
xor
xchg
xchg
and
sbb
loop
sbb
daa
js
or
inc
fs
inc
jp
lds
mov
outsb
int
xchg
cmpsl
jle
rol
add
push
cmpsb
and
std
lods
sub
mov
mov
repnz
je
xor
call
ret
out
and
lahf
shr
ret
les
sahf
fbld
pop
sub
daa
imul
jecxz
shlb
push
cmp
and
mov
or
add
rcl
int
add
pusha
xchg
mov
xchg
insb
lods
cmpsl
cmp
orl
pop
call
stos
jmp
out
xchg
fildl
leave
popa
add
rclb
dec
insl
gs
mov
sbb
stos
cmp
inc
sbb
bnd
es
and
or
data16
mov
mov
jle
in
mov
addr16
rcrb
inc
jo
xchg
stc
add
inc
sub
or
adc
fstpt
and
int3
add
jae
jae
push
dec
mov
rcll
data16
pshufw
sti
xor
ljmp
mov
mov
push
out
data16
cltd
jno
inc
scas
ret
xlat
icebp
ret
add
adc
in
out
sub
or
pop
inc
sbb
repz
jecxz
dec
mov
addr16
mov
sarl
leave
inc
push
xchg
int3
dec
xor
int
push
push
std
push
movsl
icebp
lock
lea
lock
je
push
movsl
dec
ret
push
pop
into
lods
test
lcall
cmp
aas
cmp
or
scas
stc
pusha
shrb
pop
fadd
jae
mov
push
int
fbld
orb
pop
push
mov
jns
fidivrs
loop
sbb
sub
test
cmp
repnz
sbb
cwtl
xchg
adc
jno
push
fs
xor
lea
and
shll
and
out
pop
mov
cmp
repz
mov
insl
ja
add
mov
popl
mov
xchg
addl
lods
jle
aaa
lret
add
cmpsl
xchg
addr16
shrb
mov
adc
mov
cmp
adc
int3
lcall
xchg
mov
fsub
lcall
stos
mov
ja
mov
sbb
mull
xor
add
xor
into
into
pop
jp
addr16
jnp
in
mov
cmp
lods
mov
lea
test
xor
pop
repnz
jmp
jb
inc
enter
stos
fidivrl
rol
test
and
jp
adc
dec
cs
jb
add
add
cmp
sbb
add
mov
ret
mov
jns
xor
add
mov
inc
ljmp
sub
sar
stos
pop
jno
fistpl
push
sbb
shr
sub
in
or
dec
sub
loopne
divb
jmp
cmp
push
pop
xchg
and
testb
sbbb
in
pop
or
in
jecxz
loopne
testl
xchg
or
push
popa
lods
out
shll
pop
mov
insl
nop
imul
cli
repnz
sub
add
rorl
lds
or
dec
add
mov
mov
aas
std
push
sbb
mov
loopne
jecxz
imul
je
push
sarl
push
loopne
aad
fstl
pop
and
jno
mov
out
loope
out
pop
pop
pop
mov
sub
popa
xchg
pinsrw
lret
jle
mov
xchg
push
or
es
and
cmp
sti
fmulp
lret
push
mov
aad
pop
pop
test
pop
add
stc
adc
cmp
ds
je
xchg
add
stos
mov
inc
out
and
add
mov
test
cmp
lods
lea
sbb
jl
mov
lds
add
test
xchg
lahf
pop
xchg
ss
mov
in
les
mov
addr16
push
and
sub
adc
ret
pop
mov
pop
jg
inc
scas
sub
enter
movsl
aam
adc
pop
add
dec
es
cmp
gs
sub
dec
int
mov
push
xchg
fstpl
jns
jae
fiadds
add
std
jne
lods
das
cmp
in
or
mov
int
jmp
stc
xor
lahf
call
fsubl
std
vmovdqu
xorl
inc
dec
pop
int3
sub
cmp
mov
jmp
insb
fisubrl
cmpl
xor
ficompl
imul
mov
and
jmp
adc
imul
xor
scas
lahf
inc
sbb
jae
ds
cmp
sub
xchg
jno
adcl
hlt
or
aad
mov
inc
jbe
mov
pop
jno
fstps
stos
xchg
cmp
pop
or
jle
rclb
xor
cld
inc
sbb
test
adc
ja
adc
imul
push
jnp
nop
in
inc
iret
mov
add
adc
aas
jecxz
mov
pop
sub
test
push
lret
cltd
sbb
fldcw
stc
adc
mov
adc
mov
lea
lods
lea
shl
push
fdivs
daa
out
jo
add
lret
dec
lret
xchg
adc
in
rorl
mov
stos
adc
cli
xchg
adc
in
cmpsl
xor
leave
sbb
pop
in
cli
stos
cmp
xor
mov
icebp
scas
mov
dec
pop
fists
mov
sub
mov
mov
scas
imul
test
mov
add
add
inc
mov
xchg
add
xorl
ljmp
bound
es
jns
xchg
jle
test
add
pop
loop
out
mov
inc
loopne
mov
dec
fcoms
push
leave
sub
int
loop
bound
cs
jecxz
fcom
out
sub
adc
xchg
inc
push
outsb
repz
das
jo
adc
jg
dec
das
leave
pcmpeqb
stc
ds
and
jo
popf
clc
push
ret
push
cmp
stc
rcrl
loope
lahf
fsubr
mov
push
pop
or
jo
jg
aaa
mov
ja
mov
scas
or
mov
mov
dec
addl
fistps
aad
mov
bound
xlat
sbb
ret
cwtl
jl
and
cmp
cwtl
outsb
jae
pop
add
addr16
leave
cmp
leave
xlat
mov
jg
bound
cmpsb
cmp
sbb
push
sbb
xlat
stos
add
ljmp
sbb
jmp
push
xchg
aaa
aam
jge
cmpsb
sbb
neg
in
xor
pusha
adc
xchg
addr16
mov
sarb
std
mov
js
push
into
pop
add
stos
mov
sub
pop
iret
popa
mov
xor
mov
aad
cmp
add
mov
mov
xchg
pop
cld
cmc
cmp
out
pop
mov
js
xchg
movsl
push
mov
mov
jl
lret
sbb
test
push
sub
mov
xor
jo
int
call
test
or
data16
cwtl
sahf
mov
into
jmp
and
std
mov
cld
popf
lods
adcl
in
cmp
movb
movsb
repz
aam
jecxz
sub
sbb
inc
mov
adc
loope
scas
wrmsr
xchg
add
push
notl
mov
push
inc
iret
jmp
int
dec
repz
call
notb
inc
imul
lret
jns
fs
pop
loope
movb
insl
into
sti
aad
adc
cmpsb
in
xchg
shll
add
pop
or
clc
clc
jo
adc
outsl
push
in
into
stos
mov
movsl
cmpsb
add
jge
outsl
dec
cmpsb
push
lret
sbb
leave
mov
or
imul
ret
lods
cwtl
in
popf
xchg
insb
scas
or
jo
call
pop
shr
mov
sub
cwtl
movsl
adc
adc
add
jbe
hlt
dec
roll
dec
mov
push
iret
nop
nop
dec
mov
sahf
nop
leave
cmp
or
in
dec
lods
jbe
cld
hlt
ds
dec
adc
pop
stc
push
sbb
mov
in
xor
ret
push
mov
imul
and
cmp
fstpt
pop
in
and
jo
jns
cmp
mov
sub
stos
sbb
sub
mov
mov
sahf
popf
sahf
aas
jl,pn
pushl
les
pop
adc
lods
fwait
in
fcompl
in
xchg
rolb
mov
jae
sub
add
xchg
icebp
mov
mov
push
lds
sub
mov
add
add
nop
jmp
adc
scas
je
loopne
and
mov
mov
in
push
popl
ja
insb
sbb
clc
popa
cmp
lcall
sub
testb
lods
cmp
imul
stos
inc
inc
aad
sbb
fsubrs
pop
cmp
dec
int3
cmpsl
and
fcoml
cmp
notl
cmc
ss
test
rcll
dec
out
flds
xor
inc
stos
adc
pop
cmp
mov
pusha
cmpsl
xchg
fwait
into
insl
loop
or
cmp
sub
aaa
or
loopne
icebp
xlat
cmpsb
icebp
pop
pusha
dec
jo
pop
int3
cld
sbb
inc
lahf
cld
push
ja,pn
or
test
cs
aas
nop
mov
out
test
ret
fwait
push
xor
and
ret
and
lods
imul
mov
data16
xchg
mov
jle
cs
int
iret
or
std
xchg
ret
jb
clc
or
jnp
repz
shll
int
mov
scas
pusha
movsl
loop
jbe
mov
ljmp
pop
cmpsl
and
jecxz
push
and
jg
imul
pop
push
jl
xlat
cmpsb
inc
mov
jmp
push
adc
jle
add
fcmovne
pop
pusha
dec
push
push
enter
lods
jno
inc
pop
leave
rcll
and
pop
mov
mov
cmc
scas
push
subb
ds
jne
mulb
pop
mov
shlb
std
inc
cmpsl
mov
cmpsl
adc
aad
mov
insb
push
call
xchg
fs
test
or
icebp
dec
inc
cmc
xorl
adc
lock
pop
cmp
cmp
mov
dec
sbb
repz
push
insb
cmp
add
jo
mov
or
jl
hlt
xor
scas
xchg
fistl
sub
pop
clc
shrl
addb
xor
jns
xchg
xlat
jge
nop
inc
cmpsl
cmp
lcall
test
in
lret
cs
mov
bound
loop
xchg
xor
daa
and
add
test
sbb
dec
scas
clc
int
mov
cmpsl
pop
js
pushf
lods
notb
decl
add
push
push
out
idivl
cli
mov
jge
jg
in
fistpll
mov
dec
mov
mov
push
pop
push
sbb
scas
cmc
das
mov
jmp
jg
sub
lods
inc
jb
mov
add
pop
ret
lret
and
repz
fs
int3
divb
jl
fisttps
sbbl
pop
aad
jmp
bound
sub
jnp
jle
add
mov
lock
xor
pushw
pop
ret
mov
jge
in
clc
xor
leave
or
pushf
testb
add
stos
orl
out
cmc
inc
adc
adc
test
inc
cmp
dec
dec
xlat
es
dec
lock
push
jo
mov
inc
test
mov
repnz
shrl
push
jp
xor
sbb
add
xor
scas
mov
dec
out
scas
cmp
stos
inc
stc
cmp
rorb
pop
rcrb
pop
int
mov
jge
mov
dec
dec
loop
loop
pop
or
cltd
je
aaa
push
dec
dec
aaa
repnz
xor
out
arpl
mov
xchg
mov
cmp
aas
and
iret
nop
scas
pusha
inc
fnstenvs
iret
daa
adc
mov
and
pop
fs
cmp
add
arpl
int3
and
int
fwait
push
sbb
dec
sbb
sti
iret
loope
mov
dec
xchg
mov
mov
ficomps
jle
lods
pop
pusha
mov
jb
push
repz
mov
sub
adc
pop
gs
push
xor
jmp
lock
paddsw
cli
es
fistpll
sbb
xchg
aam
pop
int3
sahf
sahf
std
insl
mov
and
pop
shll
or
jne
pop
or
fcomip
add
cmpsb
pop
mov
and
xchg
xchg
std
into
push
mov
je
pop
out
adc
jp
test
sahf
out
push
ds
dec
dec
adc
fcmovu
xlat
mov
xor
xchg
out
mov
js
lods
es
mov
and
lds
xchg
adcb
aaa
leave
mov
stc
or
dec
and
or
and
pop
push
push
out
mov
mov
push
hlt
xchg
std
inc
mov
push
dec
jp
sbb
ret
mov
push
mov
add
xor
sub
add
mov
notb
cwtl
pop
repnz
adc
lahf
jo
loopne
pop
ja
dec
sub
imul
inc
xor
repnz
add
add
or
xchg
jecxz
add
pop
mov
cmc
xlat
lods
push
insb
fs
mov
or
pop
jns
in
pop
add
inc
mov
iret
call
pop
loopne
icebp
inc
int
jno
out
es
filds
add
dec
sbb
sarl
mov
jle
call
cltd
orl
lcall
inc
adc
test
lahf
dec
popf
loope
inc
mov
mov
loopne
pop
scas
loop
mov
jns
mov
mov
faddl
sbb
push
fstpl
adc
jnp
jle
nop
lds
mov
dec
push
inc
insb
fmull
cmp
and
xor
inc
gs
sbb
add
fnsave
push
in
int3
mull
cwtl
cmp
jns
jg
rcll
jo
push
loope
mov
les
xchg
mov
into
pop
sub
jle
mov
inc
jl
and
lods
cs
cli
mov
movsl
sti
cmpl
cltd
ja
das
rol
and
dec
das
inc
bound
out
rcll
pop
fmulp
pop
outsb
mov
adc
xchg
in
fbld
adcb
xlat
inc
mov
inc
scas
and
int3
ficoml
or
inc
xchg
and
sub
sub
dec
mov
orl
mov
pop
xchg
xchg
jmp
or
inc
mov
scas
mov
add
sub
dec
pop
outsl
xorb
in
bound
sbb
and
fstps
pushf
xchg
mov
adc
pushf
enter
lea
iret
mov
mov
iret
shll
mov
xchg
sub
cs
inc
xlat
xchg
pop
repz
in
testl
jg
inc
push
mov
lods
jns
dec
shrl
jb
cli
mov
mov
pop
mov
jne
add
lock
test
cmp
mov
lds
rcrb
movl
lds
test
lds
mov
mov
mov
into
add
jb
mov
sbb
fcmove
mov
xchg
xchg
or
ljmp
or
xchg
sahf
int3
cmpsl
lahf
repz
mov
aam
or
push
fstl
dec
sub
imul
shlb
outsl
jge
sub
cmpsb
xchg
xchg
push
fcomps
fdivr
adc
lret
adc
outsb
mov
ret
cmp
repnz
jl
in
or
xor
add
inc
aas
push
pop
mov
push
mov
aas
jno
fildl
jl
clc
xor
pop
fldcw
fnstsw
xor
inc
or
out
inc
mov
push
xchg
pop
mov
mov
sbb
pusha
popa
mov
cmc
shlb
pop
je
insb
repnz
push
out
xchg
out
into
xchg
mov
mov
mov
push
iret
dec
rol
push
sahf
jae
add
add
mov
aas
sub
xor
and
sub
call
add
sub
and
sbb
fcomip
popf
jmp
mov
push
loopne
daa
jno
xor
cwtl
lcall
outsl
jmp
faddp
add
orb
push
xchg
push
in
pop
inc
mov
insb
jmp
pusha
or
jge
dec
sub
repnz
or
cmp
push
lret
cmp
testl
call
mov
aam
cmp
into
cltd
adc
fists
out
and
fdivl
xor
push
pop
fisubl
push
outsl
mov
xor
jmp
push
sub
xchg
inc
xchg
shl
pop
adc
lock
xchg
push
dec
jbe
pop
jp
xchg
lock
not
jg
pop
cmp
ljmp
add
add
testl
jno
and
dec
out
movlps
sbb
inc
hlt
pop
push
push
push
lret
jecxz
scas
push
cld
jp
nop
or
stc
decl
fwait
rorb
xchg
jl
lcall
enter
sbb
ss
xchg
push
pop
repnz
sahf
leave
mov
add
jnp
pop
add
in
dec
mov
cwtl
das
xchg
cld
cmp
jle
sbb
aaa
testl
rorb
sbb
ds
icebp
pop
fadd
sahf
dec
fucomi
inc
sub
cmp
dec
fdivrp
test
push
vunpckhps
fimull
xor
adc
leave
loopne
shr
mov
dec
loope
mov
mov
test
jbe
pop
int3
mov
push
add
or
daa
mov
aas
pop
xor
push
std
out
js
subl
xor
mov
push
jp
shll
mov
fisttps
pop
aam
push
cmpb
scas
mull
fwait
sbb
shlb
mov
push
add
jne
cmp
fiadds
mov
sti
mov
and
inc
mov
ret
shll
mov
pop
addr16
jae
pop
lcall
jae
mov
cmp
jns
jle
fidivrs
push
pushf
push
out
pop
insb
lret
imul
dec
cmpsb
mov
out
enter
pop
lfs
cli
xor
es
add
mov
incl
pop
mov
fmull
popf
call
and
dec
fmull
xchg
ret
aad
dec
xlat
fsub
mov
outsb
cmc
movsl
pop
cltd
sti
pop
jae
push
sub
ret
pop
push
inc
jae
mov
and
movsb
push
loop
lods
in
mov
cmp
fs
mov
std
fildl
xchg
rcl
sub
push
mov
pop
in
lret
cmpsb
pop
sbb
cli
clc
sbb
mov
jge
sub
lds
mov
outsb
test
orb
dec
sbb
xchg
pop
sub
cwtl
inc
cmp
adc
pop
clc
fmulp
push
mov
dec
dec
mov
and
movsb
out
shrl
sbb
rclb
push
lock
push
cmp
jo
fimuls
push
imul
scas
movsl
push
cmp
adc
mov
push
test
lret
js
xchg
icebp
mov
dec
cmpsl
daa
pop
sar
loop
pusha
mov
sbb
cmpsl
jl
loopne
add
cmp
scas
jl
add
leavew
mov
sub
jns
imul
push
mov
sbbb
cmc
mov
lods
out
jo
xor
mov
push
inc
je
or
mov
aaa
enter
stc
and
jmp
in
pop
into
pop
popa
adc
xlat
pop
mov
jno
xchg
mov
mov
ss
push
ja
lret
mov
pop
out
cmp
fimull
fcomp
mov
pop
cli
inc
pushf
test
sub
xchg
nop
pop
jmp
xchg
jmp
es
aas
mov
mov
fcmovbe
popf
into
jno
and
and
jbe
sub
shll
adc
dec
mov
adc
mov
mov
xchg
mov
push
sbbb
mov
popf
sub
daa
mov
jns
fnsave
hlt
lahf
dec
dec
inc
sub
cs
jnp
leave
into
adc
jne
popa
outsb
fdivrp
mov
sti
mov
sbbl
in
outsb
repz
inc
jae
fisubrs
movsb
jne
enter
lahf
movsb
sbb
pushf
or
adc
xchg
loope
in
movsb
cmc
shl
into
fbstp
xor
faddl
imul
cmp
sub
sub
shlb
fadd
mov
fidivrl
call
mov
loopne
xchg
subl
hlt
rolb
lea
mov
add
in
nop
xor
icebp
cmc
inc
sub
bound
sbb
mov
push
stos
jae
jp
je
ret
sbb
iret
and
cmp
push
inc
mov
sahf
dec
cwtl
mov
outsl
cltd
mov
leave
or
push
stos
test
nop
stc
mov
in
movsl
jg
das
imul
dec
add
push
xorb
int
and
pop
movsb
gs
dec
cmpb
or
movsb
sub
pop
adc
arpl
ss
push
adc
cmpsb
aam
cld
cs
cmp
cmc
add
adc
adc
jnp
idiv
pop
mov
inc
or
mov
cmovg
xor
sbb
std
xchg
lds
sub
ret
inc
mov
out
jnp
mov
jbe
xchg
std
in
add
mov
leave
and
dec
push
cmp
add
dec
ljmp
out
lods
mov
mov
jae
outsb
in
pop
or
inc
shrb
xchg
inc
jmp
dec
stos
fwait
cmp
push
mov
dec
daa
rcrb
mov
push
pop
nop
into
adc
aaa
pop
ret
xor
sbb
cmp
scas
ds
out
lds
xchg
dec
rolb
test
lods
jne
add
stos
push
scas
jae
insl
stos
rcll
adc
scas
int
addr16
pop
mov
sbb
push
xchg
lock
jecxz
mov
cmp
bound
add
add
aaa
sbb
stos
cmc
mov
and
and
dec
lea
pop
hlt
lahf
mov
stos
xor
lahf
add
xchg
lods
sbb
fists
mov
adc
push
cmpsl
ret
imul
xor
mov
lcall
inc
pop
mov
mov
popf
ret
or
js
fcompl
jne
and
out
xor
mov
adc
mov
sub
gs
por
lret
fsubrp
add
and
mov
or
jb
in
xchg
rclb
sar
outsl
cmp
mov
insb
sbb
mov
mov
cwtl
fs
imull
scas
mov
pop
xlat
clc
mov
xor
push
sub
test
xchg
adc
jg
pop
outsl
movsb
sbb
or
push
mov
nop
jge
mov
daa
out
fiadds
inc
fisubl
sahf
aaa
jecxz
bound
in
xor
and
int
dec
adc
aas
orl
xchg
out
mov
xor
push
in
xchg
pop
cmp
adc
rcrl
mov
and
jb
pop
mov
inc
jo
inc
and
xchg
or
aas
out
push
xabort
jb
pop
cltd
pop
inc
fldt
jns
push
das
lcall
or
jl
adc
jb
cmp
pop
pop
dec
mov
xchg
jp
push
lret
sub
shlb
or
add
push
ret
fwait
jle
jg
fiadds
lret
in
icebp
loop
cmp
jno
xor
push
xor
push
inc
sarl
push
cmp
xchg
ja
add
pop
add
mov
mov
adc
or
loop
or
leave
adc
inc
inc
loope
lods
jmp
mov
data16
xlat
jecxz
xor
fmull
incl
addb
inc
pop
sbb
jmp
loopne
fisubs
lret
mov
push
adc
popl
dec
inc
sbb
cld
in
cltd
scas
cmp
mov
or
jmp
xor
fs
push
inc
cld
xor
mov
je
ror
mov
push
and
subb
or
pop
ja
xchg
adc
decb
fs
das
ror
push
inc
rcr
inc
mov
or
in
push
dec
lods
inc
xor
mov
addr16
fstpt
pop
dec
push
pop
mov
sti
shll
cwtl
mov
xor
fwait
xchg
ja
jb
cmp
daa
rcr
test
es
lock
xchg
bound
mov
inc
fsub
xchg
scas
outsb
mov
in
add
and
xlat
xorl
loope
mov
pop
mov
mov
notb
or
or
xor
add
iret
flds
fwait
mov
icebp
or
xor
mov
jb
lods
stc
mov
cmp
cmpsb
push
shr
xor
mov
fsubrl
test
dec
adc
and
inc
xchg
add
int
sbbl
ret
pushf
clc
mov
dec
cmc
xchg
sbb
sbb
lds
mov
enter
enter
cmp
shrb
sbb
push
pop
cs
lcall
xchg
imul
xor
daa
add
or
mov
fs
mov
imulb
aad
orl
testl
ljmp
mov
mov
or
adc
adc
fcoms
es
or
cmp
sub
fcmove
ss
fistpll
adc
adc
int
cmp
and
xor
pusha
adc
push
xchg
mov
mov
xchg
js
and
pop
sub
jns
lds
pop
push
push
rol
xor
test
fs
aad
or
fbstp
test
bound
jbe
cmp
jo
add
pop
adc
out
adc
cmpsl
pop
popa
mov
jnp
xchg
std
out
mov
int3
cmp
xor
pop
arpl
les
dec
and
cs
mov
jae
jnp
pop
fs
inc
iret
cmpsl
push
mov
xchg
shl
inc
xchg
sti
lahf
jmp
pop
popa
mov
jmp
cmp
stos
dec
and
add
imul
cmp
mov
push
dec
lods
and
cmp
add
cmpsl
add
iret
mov
push
pop
adc
js
sub
dec
inc
sub
adc
add
xchg
js
test
mov
sub
or
ja
stos
inc
addl
pop
pop
es
inc
mov
wrmsr
fcoml
loop
dec
bound
mov
jo
push
add
popf
adc
mov
sbb
outsb
cmp
jmp
lcall
jge
inc
cmp
dec
scas
add
inc
pusha
xchg
nop
adc
adc
lea
sti
jno
mov
mov
lods
pop
push
xchg
lods
mov
push
shlb
or
divl
mov
iret
repz
jae
mov
mov
shll
xor
loopne
inc
shr
ret
insb
mov
add
jg
arpl
push
cmpsb
sub
mov
or
das
flds
lods
sbb
xchg
movl
xchg
xchg
loopne
dec
scas
adc
jmp
lock
popa
aam
push
mov
push
push
faddl
lods
sarl
push
jo
jge
ja
out
dec
neg
pushf
push
push
and
pop
push
into
pusha
es
or
pop
xchg
mov
cwtl
mov
sbb
cltd
call
jle
icebp
push
mov
enter
loop
and
in
repnz
pop
arpl
lock
add
orl
inc
daa
inc
sbb
push
stos
in
pop
scas
add
int
sti
movsb
negb
jo
fstpt
les
fs
and
inc
lods
mov
out
rclb
scas
sbb
loope
add
aas
cmpsb
xlat
mov
lahf
jg
mov
push
movsb
push
in
lea
int
loope
iret
xchg
lds
std
inc
jp
xchg
insl
and
cld
adc
fnstcw
jae
mov
dec
add
add
adc
sarl
scas
repnz
xor
clc
shll
hlt
jge
ss
dec
stos
push
rcrb
je
out
ret
enter
jns
pop
mov
stos
sub
cmpb
shll
inc
and
sbbl
or
xor
inc
and
scas
xorb
rol
and
out
xorl
xor
fwait
lea
lahf
fidivs
daa
negb
das
jecxz
scas
loop
lahf
cmp
cmpb
jl
scas
insb
pushw
js
sbb
cmp
ds
adc
stc
jne
dec
jne
add
xorl
lea
in
std
iret
cli
arpl
sub
dec
bnd
or
pop
nop
fldl
dec
mov
das
dec
nop
es
aas
cli
sub
aaa
lock
mov
push
inc
inc
push
aam
lcall
push
ret
mov
jns
push
add
jl
sti
or
jmp
sbb
mov
addl
jb
pusha
outsl
mov
xor
xor
sbb
aas
and
push
pop
cwtl
sbb
jo
fstpt
sbb
in
int
adc
add
pop
adc
addb
imul
push
or
dec
xor
mov
shrb
mov
sub
jb
sbb
sbb
imul
mov
jge
mov
js
push
lods
dec
mov
lret
in
inc
cmp
stos
sub
rol
jnp
sti
mov
dec
scas
inc
push
pop
jns
insb
xchg
arpl
xchg
aam
inc
mov
mov
adc
cwtl
fcomps
nop
mov
in
cmc
xchg
lods
rcll
lcall
add
std
aas
fdivl
xchg
jmp
movsl
sahf
mov
mov
push
iret
leave
pop
sbbb
and
xchg
add
pusha
xor
xor
xchg
adc
leave
icebp
add
cwtl
ds
and
or
jne
xchg
fadds
inc
xor
popf
and
imul
jns
jae
fstpt
mov
dec
and
xor
sbb
test
xor
xchg
popa
pop
out
mov
test
inc
xchg
movsl
pop
ljmp
ds
mov
gs
mov
mov
dec
xchg
xor
xor
lea
shlb
mov
mov
fcom
cs
outsb
and
sub
test
push
lret
mov
aas
inc
jl
mov
xlat
fbstp
xchg
fcomps
repz
shlb
push
dec
jne
and
pop
xor
clc
bound
add
xchg
stos
fiaddl
cmp
xor
push
push
mov
inc
rorl
dec
movsl
incl
mov
int
mov
es
rcll
nop
push
stc
jge
mov
add
sbb
mov
negb
adc
scas
mov
lret
add
mov
mov
ss
mov
jbe
addl
cs
push
xchg
movsl
jno
push
repz
cltd
outsl
enter
sub
sahf
pop
inc
or
std
xlat
adc
fldenv
mov
pop
cltd
movsl
and
sub
xor
mov
add
push
js
mov
cmc
lret
insb
jge
xor
mov
lock
mov
scas
les
insb
stc
xor
aas
shrl
or
mov
das
xor
lcall
pop
in
cld
pop
or
std
call
in
xor
add
es
data16
fistpl
sbb
inc
adcb
xor
loop
or
cmp
repz
stos
cmp
cmp
fisttps
mov
push
add
dec
imul
mov
arpl
iret
and
fistl
test
mov
rorl
mov
les
cmp
dec
outsb
and
jle
xor
mov
xlat
sbb
in
inc
repz
jle
or
insb
es
loop
cwtl
cmp
leave
lret
pop
add
enter
sbb
dec
dec
shll
outsl
push
inc
and
lcall
adc
flds
fdiv
add
es
std
adc
arpl
inc
inc
push
mov
cmp
ss
daa
incb
cmp
sub
or
pop
xchg
mov
and
sub
mov
mov
cmp
cmp
test
push
fsubr
cmp
add
test
iret
add
pop
ja
fucom
mov
cmovge
ret
xor
shr
cmpb
out
mov
sub
sub
mov
divl
add
xchg
les
andb
jecxz
mov
and
xor
cmpsl
xor
in
adc
xchg
sar
scas
push
fwait
and
mov
jns
pusha
push
mov
pop
lret
xchg
mov
push
mov
repnz
enter
addb
fsubrs
repnz
mov
mov
add
in
or
mov
icebp
arpl
cmp
pop
or
into
add
mov
aas
jmp
lret
daa
int
jns
inc
mov
rcll
popf
push
mov
xchg
pop
cmp
mov
out
cld
sbb
or
call
jbe
gs
cmp
sub
movsb
loopne
xchg
pusha
add
and
cld
inc
push
jecxz
xchg
das
inc
xchg
mov
jnp
js
sub
adc
lcall
jbe
aaa
lahf
dec
mov
sub
imul
pop
jns
jecxz
mov
lds
out
jecxz
aaa
adc
add
aam
mov
out
popa
mov
lret
sub
jb
aaa
inc
mov
cmp
jmp
std
cmc
mov
mov
stos
stos
sub
btrl
xchg
mov
int
fsubrl
out
push
dec
aam
and
pushf
mov
pop
cmp
fs
jnp
out
cmp
push
mov
xor
xchg
repz
mov
fcmovu
sbb
mov
into
cmpsb
lret
ss
xchg
inc
add
bound
dec
mov
inc
jnp
lahf
add
rolb
mov
jg
mov
lret
push
stc
jecxz
mov
ret
pop
push
sbb
add
mov
sub
cli
xor
fcmovnbe
hlt
and
or
add
out
pop
mov
or
aaa
mov
xor
xchg
jge
ljmp
dec
out
fwait
push
push
cwtl
scas
lods
cmpsl
dec
add
xlat
lret
cmpsb
sahf
xchg
adc
lock
or
imul
jmp
and
call
jle
test
push
inc
leave
cmp
push
pushl
jns
lods
dec
scas
arpl
mov
and
xor
xor
add
lea
imul
ror
fdivs
dec
and
rorl
xchg
xchg
data16
addr16
lret
movsl
pop
jmp
xchg
mov
repz
movb
jae
daa
lock
jecxz
and
cmp
jmp
mov
mov
mov
in
cs
out
cld
repnz
lahf
aam
xchg
out
xlat
and
cmpsl
iret
pop
aas
jp
ret
pop
lea
loop
pop
cs
or
shrl
imul
cmp
repz
push
out
xchg
and
into
xor
jns
sti
inc
cmp
in
test
inc
fstp
xchg
push
xlat
lret
adc
inc
mov
insl
mov
aaa
mov
inc
lahf
sbb
addr16
insl
lahf
test
nop
mov
dec
clc
outsl
or
call
jae
mov
fnstenv
fs
and
aad
fwait
hlt
gs
sbb
jg
fstpl
lahf
adc
mov
push
push
cmpsb
sub
push
mov
cmpb
xlat
xchg
lret
adc
outsl
mov
test
popa
es
xor
imul
jno
sbb
cmp
or
xor
sti
in
lahf
cmpb
mov
test
ds
adc
in
addr16
in
pop
jne
loope
lret
shr
packssdw
movsl
aas
push
outsl
sbb
push
arpl
cmp
testb
add
mov
cmp
fiadds
cmp
and
imul
cmp
clc
lcall
sbb
jae
sub
loopne
mov
repnz
push
arpl
cwtl
lcall
out
les
out
addr16
ja
adc
pop
dec
push
icebp
xor
sahf
jae
sub
outsl
test
repnz
cmc
and
mov
das
add
jecxz
sbb
xchg
jb
dec
sbb
xchg
hlt
pusha
mov
xor
ret
jnp
mov
lcall
pop
xor
lods
xor
icebp
pop
popf
cmp
xor
popf
sbb
sub
mov
fisubrs
dec
lods
aaa
cmc
out
xor
insl
mov
or
jne
daa
jp
repz
shll
cmpsl
in
imul
xor
cmp
sbb
mov
jae
push
xlat
sub
xchg
push
mov
xlat
in
mov
cmpsl
inc
lret
pop
popa
push
xorb
pop
add
inc
jp
mov
or
inc
jge
lahf
andl
dec
adc
cmpb
mov
aad
and
ss
jo
jns
outsl
loopne
icebp
stos
adc
sahf
mov
sbb
jb
xor
fistpll
jbe
dec
adc
sarl
mov
pushf
push
pop
int3
mov
repnz
popf
rorb
lret
cmpsl
sarb
xchg
push
add
sub
mov
mov
pop
lods
mov
dec
rcrl
aad
sbb
shl
rorl
lea
and
pop
push
xchg
mov
aaa
add
aaa
movsb
inc
fs
into
test
in
call
mov
mov
fldcw
mov
xchg
rcrb
push
push
mov
call
mov
call
das
add
jo
sub
mov
pop
ret
enter
and
insb
xchg
fcmove
data16
jecxz
daa
sbb
push
push
popf
cmp
scas
adc
cwtl
add
mov
mov
inc
dec
mov
test
mov
fsubrp
aad
sub
jbe
push
test
cmp
mov
add
push
jmp
and
pusha
repnz
aas
mov
add
movb
test
mov
rcll
push
and
sub
push
aad
mov
sbbb
scas
movsb
test
jle
cwtl
xor
lahf
dec
mov
enter
arpl
and
push
mov
scas
arpl
std
xchg
mov
adc
and
pop
add
jp
scas
and
shl
cs
scas
sbb
ret
aaa
popf
xorb
cmc
xlat
cli
out
sub
add
xor
mov
xchg
loopne
push
sub
ljmp
add
lahf
pop
cmpsl
sub
mov
int3
rclb
pop
popa
mov
pop
adc
int
repz
mov
add
push
adc
xor
rol
pop
out
mov
push
nop
dec
aam
cmp
fsubrs
in
setne
cmpsb
cmp
mov
into
js
rcr
adc
mov
dec
lds
mov
or
dec
xchg
dec
jp
test
out
pop
ds
scas
nop
push
daa
jae
push
rorl
mov
xchg
ja
xor
sahf
fists
mov
jne
fimuls
sbb
daa
push
mov
pop
test
stos
movl
mov
iret
aam
loop
test
inc
dec
mov
xchg
or
loop
mov
push
mov
xchg
je
push
inc
lock
pop
subl
xor
insb
adc
mov
push
test
or
in
dec
xchg
pop
xor
cmp
addr16
xor
dec
gs
shll
pushf
subb
pushf
and
lea
lret
dec
jle
mov
xor
mov
jae
xchg
inc
fistpll
add
repnz
mov
outsl
cli
cli
push
push
lcall
in
mov
add
fs
idivb
cld
mov
inc
sbb
pop
mov
jnp
sbb
adc
pop
pop
divb
lret
or
je
cmc
into
popa
repz
jl
js
rolb
fadds
cmpsl
jg
fs
dec
fs
les
dec
inc
sbb
xor
mov
jnp
push
jge
adc
xchg
imul
lahf
jg
lods
les
mov
popl
mov
mov
bound
push
push
xor
das
jne
xchg
xor
jmp
shrb
jp
xor
ljmp
add
movsb
imul
and
mov
push
sbb
mov
or
inc
push
mov
fsubrl
fists
fildl
mov
movsl
repnz
dec
out
inc
xor
popf
in
andb
and
gs
shll
fmull
in
repz
cmp
adc
repz
mov
mov
jnp
leave
add
rorb
js
push
xchg
xor
pusha
aam
push
xor
scas
adc
pop
enter
xor
adc
jmp
test
lahf
mov
mov
xchg
inc
ret
cwtl
xchg
jp
clc
mov
pop
fimull
push
cmp
sbb
ret
jecxz
mov
test
aas
push
add
mov
or
push
push
pop
xor
pop
jecxz
aas
jo
mov
xchg
push
pop
incb
iret
int
nop
jb
ret
sti
mov
hlt
or
icebp
xor
dec
ljmp
out
pushf
pop
cli
or
cmp
push
push
dec
and
gs
mov
dec
ljmp
and
jle
sarb
push
adcl
and
xchg
mov
nop
and
into
mov
fstp
mov
pushf
fidivl
push
mov
outsb
imul
pusha
adc
loop
sti
call
repz
in
bound
pop
dec
xor
sub
mov
xor
adc
daa
dec
sub
test
cmp
int3
in
andl
testb
pop
lea
pusha
or
fdivr
movsl
and
aaa
mov
es
int3
cmc
ljmp
inc
or
adc
sbb
adc
lret
arpl
or
test
push
cmp
push
xor
les
adc
call
inc
sub
mov
push
daa
sbb
cmpsb
cli
mov
xchg
inc
insl
inc
xor
outsb
jno
cmp
pop
or
push
rcl
pop
dec
ja
sub
adc
imul
in
sub
inc
or
icebp
test
sbb
and
sahf
jne
mov
aam
in
pop
push
cmpl
mov
sarb
mov
arpl
sbb
in
mov
jnp
sarb
ja
push
push
lock
cmp
int3
test
pusha
scas
jnp
sub
hlt
mov
clc
cmp
push
mov
cmp
push
push
mov
sbb
shll
pop
loopne
xchg
insb
sbb
adc
andb
ljmpw
call
xlat
adcl
xor
or
ret
add
adc
shr
movsl
daa
movsb
mov
in
cld
sbb
cmpb
sub
dec
push
xchg
shll
mov
jl
xor
cmp
cld
mov
mov
lods
push
divl
or
sub
hlt
leave
or
stos
cwtl
pop
adc
data16
clc
jb
mov
dec
mov
cmp
out
adc
stos
data16
out
leave
ja
jp
mov
push
outsb
mov
in
mov
movb
cmovl
leave
popf
push
mov
sub
fs
xchg
push
std
sub
out
jecxz
inc
adc
inc
addr16
pop
es
aam
add
ret
lgs
nop
sahf
repnz
pop
nop
and
dec
jns
xchg
dec
std
rcll
or
ljmp
xor
mov
std
dec
add
std
cmp
add
dec
inc
rcll
stc
mov
test
idivl
fwait
clc
xor
sbb
movsw
mov
and
pushf
cmp
jg
mov
xor
loopne
movsb
loope
popf
repz
cwtl
jno
faddl
pushf
push
xchg
mov
pop
sbbl
pop
add
push
mov
repnz
lahf
ljmp
mov
addb
mov
shr
clc
std
cmc
jecxz
adc
int
sbb
das
xchg
outsl
xchg
stc
and
lret
in
dec
and
movsl
adc
cli
or
xor
cmc
gs
add
mov
aad
test
fwait
aad
dec
cltd
loopne
scas
mov
imul
cwtl
popa
aaa
mov
cwtl
and
sub
sub
sbb
pop
mov
scas
sbb
sbb
test
inc
mov
sahf
push
push
stos
sbbb
stos
pop
mov
mov
mov
popf
popa
push
icebp
fwait
scas
xor
mov
and
cmpb
inc
xchg
xor
mov
add
lods
in
push
jmp
pop
loopne
mov
adc
fdivl
inc
mov
bound
jl
cmp
ljmp
mov
mov
dec
orl
outsb
sub
xchg
and
inc
xor
xchg
sbbb
lds
cmp
or
dec
push
adc
sbb
mov
mov
movsb
fnsave
cmc
adc
jo
mov
push
ficompl
out
rorl
mov
pop
mov
inc
gs
jp
and
or
mov
into
iret
lods
inc
and
mov
dec
dec
lods
adc
mov
xchg
cli
pop
test
push
loopne
adc
ret
aam
lret
pop
inc
add
dec
xchg
push
cmp
movsl
aad
fists
push
xor
inc
push
jnp
clc
cltd
aad
mov
add
xchg
pop
repz
stc
pop
insl
sahf
aad
in
fstpt
inc
cli
fldenv
stc
mov
stos
cmp
call
in
add
jae
cmp
cmp
ss
sbbb
adc
add
test
jecxz
int3
aad
cmp
bound
shll
ljmp
cmpsl
or
stos
add
xor
xchg
rorl
jmp
cmpsl
cmp
pop
and
or
lahf
lock
add
insl
imul
adc
aaa
iret
mov
push
mov
pop
and
icebp
mov
jns
or
push
dec
push
dec
xor
dec
or
into
dec
add
sub
insb
test
lret
push
aas
shrb
pop
fpatan
sub
sub
mov
xchg
mov
sbb
aaa
dec
jmp
dec
mov
sbb
mov
lcall
mov
out
jge
nop
xchg
mov
push
das
jnp
mov
mov
jnp
xor
xor
cli
inc
pop
mov
mov
adc
outsb
pop
fidivs
sub
nop
ja
out
js,pn
call
aad
clc
sahf
cld
lods
and
js
mov
jae
push
jle
mov
adc
pop
push
test
jb
xlat
xor
sub
int3
iret
sbb
dec
shrb
shlb
inc
xor
bound
push
inc
in
outsb
mov
xlat
cmpsb
pusha
movsl
inc
fs
in
test
in
imul
inc
mov
in
mov
push
mov
sahf
jmp
xchg
mov
ljmp
inc
add
jg
add
adc
les
and
cmp
inc
mov
cmp
pop
mov
incb
jb
push
mov
adc
outsb
mov
inc
pop
insb
repz
dec
inc
jbe,pt
mov
es
xor
and
or
sbb
cmp
inc
fisubrl
inc
dec
dec
jb
das
mov
xchg
xchg
aam
dec
add
dec
popa
lds
aas
cmp
daa
sbb
in
in
sbbb
jbe
data16
call
jp
mov
jle
bound
fnstenv
pop
adc
outsb
cmpsb
outsl
inc
xor
cmpsb
mov
mov
in
sub
insl
jnp
dec
out
push
clc
loop
fdivp
sub
mov
in
dec
push
and
shrb
add
mov
sub
mov
xchg
loopne
arpl
stos
int
dec
xchg
xchg
rcr
popf
mov
jno
ficoml
into
fcomp
in
je
shll
dec
xorb
adc
out
imul
mov
cmpb
cmpsb
xchg
mov
pop
mov
cmp
pop
xchg
insl
imul
scas
adc
mov
test
andb
add
cmp
pop
mov
adc
xchg
lods
inc
andb
dec
xlat
jbe
jmp
cmp
mov
inc
sub
ret
fidivl
or
cmpsb
or
call
push
pop
out
ljmp
sub
mov
or
mov
repnz
push
out
jmp
lret
inc
lea
adc
sarl
xchg
add
lock
popf
add
push
stc
leave
outsb
lea
or
ret
push
test
inc
sarl
xchg
mov
sarl
xlat
cmp
sarl
insb
mov
lret
aas
and
je
rcr
mov
aaa
nop
fs
addr16
filds
out
add
mov
mov
enter
push
sbb
cltd
sub
dec
fildl
dec
xor
ljmp
sbb
push
mov
inc
mov
xorb
lret
aas
xchg
pop
cli
dec
push
imul
js
push
in
sub
mov
loope
push
mov
movsl
jp
xor
add
inc
popa
cs
mov
xchg
pop
xchg
stos
lea
je
sti
and
adcb
pop
xor
loopne
inc
loopne
xor
out
call
and
das
mov
or
sub
mov
sub
dec
fwait
pushf
cmp
sbb
das
fsts
inc
jecxz
cwtl
fxch
ljmp
out
or
iret
hlt
cmp
cltd
nopl
and
mov
dec
js
decb
mov
dec
cmp
sub
mov
movsb
or
push
cmpb
lret
es
mov
xchg
mov
cld
jle
arpl
mov
jno
pusha
jecxz
xchg
rcl
imul
cmpsl
mov
push
into
or
loope
mov
lock
fimull
test
jb
outsl
dec
sub
inc
or
test
rcl
xchg
pminub
sar
sbb
inc
pop
push
call
shl
xchg
pop
into
mov
and
inc
mov
jns
sub
mov
in
mov
jle
xchg
fisttps
sbb
aam
dec
add
aaa
xor
test
ljmp
fsubs
adc
sbbb
jl,pn
mov
fdiv
aam
add
loopne
ud0
lock
push
cltd
movsl
mov
pop
loope
adc
sahf
pop
mov
dec
bound
ds
shlb
mov
sub
jp
xchg
ja
inc
enter
into
int3
in
pop
nop
ja
sahf
adc
retw
testb
loop
lret
adc
sbb
outsb
adc
insl
sub
rolb
jo
mov
sbb
scas
push
pop
ja
addr16
mov
cs
xchg
push
bound
add
mov
add
pop
outsb
aaa
or
adc
mull
cmp
lret
stos
insb
xchg
cs
out
dec
jmp
lcall
pop
pusha
push
mov
add
stos
adc
sbb
fistps
jg
cmp
dec
outsl
rcrl
mov
hlt
sub
gs
cltd
outsb
repz
sbb
add
xor
cmp
rcr
mov
adc
insl
jbe
es
call
or
and
push
jae
xchg
xchg
in
cwtl
mov
sbbl
cmpsb
in
xchg
lods
and
in
unpckhps
mov
test
subl
fdivrl
pop
aad
ljmp
gs
sahf
jge
test
mov
idivb
push
call
push
insb
jl
mov
test
pop
push
out
insl
and
mov
fidivl
out
lea
lahf
cmp
popf
ret
push
mov
mov
inc
and
dec
or
mov
sahf
lret
call
leave
push
push
pop
sub
add
xor
shll
mov
adc
fisttpl
loope
outsl
mov
nop
inc
stos
lods
adcl
fstpt
clc
add
cmp
adc
je
fnsave
clc
shll
sub
fcomps
jmp
je
mov
pop
inc
inc
sub
add
pusha
inc
xor
push
push
std
ljmp
mov
sbb
dec
pop
cmp
mov
mov
cmp
addr16
lods
jg
mov
mov
ret
or
inc
add
rclb
lock
cmp
mov
aad
push
cmpsb
or
insl
or
push
mov
mov
out
mov
bound
popf
rolb
xchg
pop
pop
mov
pop
jae
shlb
decb
test
addr16
out
inc
jnp
pop
shrl
xchg
mov
lcall
lea
xlat
inc
pop
pop
lock
adc
add
lods
push
dec
mov
cmp
enter
mov
cs
pop
scas
adc
inc
pop
jecxz
fmull
mov
imul
insl
jge
jmp
test
in
cmp
nop
leave
outsb
add
cld
loop
mov
push
sbb
clc
mov
sub
shrb
dec
fnstcw
in
dec
loope
outsl
leave
mov
cltd
jno
sbb
subl
jbe
test
sbb
into
mov
sti
xor
push
dec
popl
and
aas
xor
mov
insb
add
push
notb
insb
inc
imul
xchg
jno
dec
cmp
fisubrl
gs
fstpt
test
xor
fimuls
mov
mov
inc
and
out
pop
sub
test
pop
mov
push
xor
adc
pop
ret
jge
jns
mov
jmp
aaa
jne
mov
loope
and
insb
inc
mov
iret
jle
add
fcompl
inc
aaa
outsl
data16
popf
ret
gs
mov
aad
mov
imul
dec
dec
dec
test
cli
stos
data16
mov
ficoms
or
jg
je
dec
push
pop
mov
and
jne
data16
dec
mov
stc
jb
leave
movsl
imul
jb
aad
mov
cmp
outsb
shrb
push
in
insb
jmp
inc
jmp
rorb
sbb
pop
xor
xor
adc
xchg
pop
fisubs
sbb
bound
lcall
dec
outsb
cmp
push
xchg
popl
xor
cli
ds
mov
fisttpll
sti
stos
cmpsl
icebp
xchg
mov
push
xor
jl
push
mov
enterw
imul
popa
stos
xor
mov
mov
sbb
scas
or
loope
das
subb
and
xchg
popa
out
sub
das
fwait
lcall
sbb
test
pop
mov
ret
lock
repnz
push
mov
sarl
bound
push
cmp
pop
push
jl
adc
ja
push
or
insb
movsb
lods
xchg
xor
mov
and
iret
xchg
sbb
mov
sbb
call
push
lahf
jnp,pt
ljmp
pop
sbb
mov
and
notb
mov
add
insl
out
pop
test
pusha
dec
in
inc
mov
cmpsl
dec
fdivl
mov
or
cmp
push
xchg
fisttpl
mov
and
push
inc
or
lods
jbe
jae
aad
xchg
and
pop
das
push
shr
jns
sbbb
mov
push
cmpsb
jp
push
push
enter
mov
outsl
pushl
jl
repnz
mov
push
xchg
mov
cmpsl
and
push
adc
push
mov
pop
repz
decb
aad
jbe
enter
in
arpl
jmp
jp
and
push
cmp
lods
sub
mov
mov
test
push
nop
mov
ds
fisttpll
pop
sub
xchg
in
and
cmp
gs
cmp
roll
ficomps
inc
outsb
xchg
scas
addr16
notl
adcl
xor
add
in
pushf
aam
push
out
add
mov
jle
xor
pop
add
dec
lds
cmp
and
bound
xlat
shll
and
ljmpw
nop
fcompl
insb
sub
outsb
mov
outsl
mov
sub
jne
sub
insb
push
lret
test
cmp
xchg
mov
sbb
cwtl
lds
es
movsb
push
adc
sbb
and
xor
adc
cli
pop
into
mov
jmp
xchg
rorb
or
pop
lcall
xor
sti
xlat
outsl
pmulhw
adc
fists
test
andl
gs
push
mov
enter
push
outsb
dec
cmpsb
jg
inc
sbb
cmp
imul
inc
jge
jp
cmp
pop
fmuls
or
push
adc
jmp
mov
lods
out
jecxz
daa
sub
dec
jmp
pop
add
pop
jge
out
leave
mov
rorb
shrl
sbb
imul
roll
push
pop
sbbl
mov
int3
pop
outsl
adc
cmpsl
daa
dec
stos
sub
rol
pop
push
xor
push
movsb
cvtdq2ps
cmpsl
xchg
jbe
dec
push
pusha
jb
add
ror
dec
xor
aam
rcr
scas
and
mov
call
and
fcmovbe
loope
fst
mov
push
jo
push
mov
mov
out
pop
dec
cli
jnp
js
das
push
addb
inc
push
cmc
adc
cmp
ret
mov
cmp
mov
int3
mov
sub
flds
in
ret
fsubrl
jo
mov
fisttps
pop
sub
mov
pop
out
lods
rorb
das
push
mov
fwait
pop
sbb
xchg
pop
mov
or
sub
pop
fs
xchg
into
sub
testl
jmp
popf
inc
dec
pop
loop
imul
mov
push
jl
mov
ja
or
pushf
out
sub
cmp
daa
pop
mov
into
lcall
mov
das
inc
cwtl
das
sub
jle
je
or
lods
loope
lea
xlat
sub
xchg
lock
lahf
xor
scas
xlat
add
push
push
insb
loop
dec
add
loopne
outsb
test
sarl
adc
aad
shll
mov
imul
xlat
cld
loop
xor
add
cld
loopne
out
test
sti
push
dec
mov
inc
test
clc
pop
xchg
lea
dec
ja
xchg
clc
clc
jns
sti
not
in
inc
push
xor
sub
repz
imul
jecxz,pt
jne
or
xchg
mov
mov
nop
xchg
out
int3
cld
hlt
int3
lret
mov
or
fidivrs
mov
jno
sub
stos
out
outsb
pop
push
mov
je
xchg
inc
dec
sub
cmp
jae
or
aas
mov
jmp
into
insb
lods
outsb
jno
inc
es
xor
or
loope
int
sub
loopne
dec
add
clc
mov
cld
ret
in
push
xchg
mov
ret
adc
sub
cmpsb
pop
add
push
add
in
sbb
dec
loope
pop
mov
sbb
cmpsl
mov
lds
xor
xlat
fmuls
mull
add
dec
test
ret
pop
sbb
jmp
cli
add
mov
dec
mov
inc
adcl
fwait
movsl
cmp
inc
sbbl
in
pop
jne
xchg
aad
fs
adc
dec
lret
sbb
inc
add
movsb
pop
jnp
push
mov
push
stos
aad
and
outsl
rcrb
cltd
adc
test
xlat
nop
dec
movsl
and
lcall
cwtl
jns
add
cmpb
movq
sub
inc
or
imul
popa
add
loopne
push
inc
push
or
or
cmp
sub
sub
imul
in
pop
ljmp
icebp
dec
fwait
add
cmpsl
aad
push
sahf
pop
cwtl
ja
jl
jns
lods
daa
mov
data16
xor
or
mov
movsl
scas
out
cmp
pop
inc
sub
sbb
arpl
roll
mov
inc
sbb
xor
or
jno
xor
dec
dec
mov
mov
push
imulb
mov
fwait
xor
mov
xchg
or
add
xor
push
nop
mov
inc
ljmp
inc
into
or
sbb
fwait
jb
fs
jnp
pop
movlps
cmovbe
clc
fcomp
mov
ds
scas
rolb
mov
hlt
lret
daa
add
out
push
push
fisubrs
inc
test
arpl
xchg
cmp
jg
mov
sub
shlb
pop
xchg
sub
xchg
fcomi
in
shrl
and
mov
aam
aad
jmp
mov
xchg
xlat
repz
idivb
sbb
dec
mov
aas
xor
jl
sub
rcr
insb
loope
out
gs
test
iret
jge
lcall
popf
adc
xor
outsl
sub
jo
lds
sub
cmp
inc
testb
pusha
gs
inc
test
and
mov
pop
adc
xchg
out
push
mov
pop
mov
fistl
into
pop
imul
jo
cmp
cmp
jmp
sbb
insb
dec
push
adc
cmp
int
add
mov
cld
ja
mov
dec
cmpsb
lods
decb
push
pop
enter
mov
jle
jle,pn
jns
fidivs
xor
push
lods
enter
sub
ds
rclb
mov
nop
rclb
adc
pusha
test
xchg
movb
fists
mov
nop
stc
fs
ljmp
xchg
xchg
pop
shlb
cmp
imul
push
sub
repnz
sub
sub
dec
mov
or
scas
sub
inc
imul
out
xor
sahf
loope
mov
xchg
mov
ljmp
push
jg
nop
xchg
stos
xchg
mov
arpl
fs
mov
ret
push
fistpll
push
inc
or
dec
aam
pusha
in
dec
cmc
rcrl
pop
pop
jmp
cmp
test
out
jns
adc
add
push
in
jnp
testl
jnp
es
mov
jbe
not
push
mov
stos
test
cmpsb
pop
and
or
cmp
out
inc
arpl
negl
mov
outsb
and
mov
pop
in
inc
pop
cmp
jno
cmp
inc
xchg
push
push
fadd
pop
push
std
mov
xorb
call
xor
pop
or
in
shrb
push
mov
xor
sub
cmp
mov
imul
lret
pop
ss
je
adc
int
fisttpl
sahf
nop
aaa
nop
mov
cmpsb
mov
and
or
out
push
dec
push
push
jmp
push
jp
adc
sbb
xchg
add
inc
sub
nop
add
sub
scas
push
jge
fnstsw
ret
enter
cmp
out
loop
enter
adc
cmp
stc
push
xor
mov
cmp
inc
push
sub
iret
scas
mov
jecxz
cmp
out
mov
xchg
rolb
push
adc
or
xor
repz
pop
mov
ja
cmp
out
or
pop
loope
jb
mov
xchg
adc
pop
push
xchg
repz
test
insl
lods
imul
aaa
test
mov
jg
dec
xor
xor
ss
insl
stos
out
lods
pop
pop
mov
mov
je
cmp
jne
cmp
faddl
adc
mov
fidivrs
cli
mov
mov
or
add
jmp
test
dec
int3
inc
push
or
lea
daa
pop
neg
pop
outsl
mov
cmp
enter
ja
xor
pop
shll
cmp
lret
xchg
jp
dec
push
xchg
mov
andb
push
inc
les
mov
fisttps
rcll
aad
sub
inc
cmpsb
pop
mov
adc
inc
cmc
aas
cmp
mov
xchg
mov
sbb
test
popa
repz
ss
xlat
sub
mov
adc
clc
add
icebp
and
sbb
xor
addr16
loope
adc
out
cmp
fisubl
arpl
insb
int
mov
pop
and
dec
mov
add
cmp
pop
cmpb
lcall
fwait
jge
or
test
jl
push
mov
cltd
fisttpl
shrb
sub
stc
in
xor
rorl
imulb
push
jle
fnsave
pop
dec
push
out
cwtl
inc
mov
add
shll
adc
stos
or
ja
lahf
push
adc
mov
ss
jmp
mov
mov
faddp
nopl
cli
enter
jmp
ja
cmp
shlb
push
mov
xchg
ror
shlb
outsb
stos
push
shlb
scas
jnp
fisttps
xchg
pushl
mov
pop
push
sbb
icebp
sub
jno
xchg
shll
mov
add
stc
and
inc
sbb
mov
movsl
and
sbb
jns
add
dec
out
jne
je
push
sar
mov
shlb
pusha
insb
inc
sbb
fs
or
or
cmp
jp
pop
or
push
std
cmp
ljmp
stc
je
popa
dec
sbb
ror
shrb
clc
in
shrb
les
orb
gs
add
mov
inc
cwtl
aam
and
pop
sahf
sub
jae
jp
dec
iret
cltd
add
push
rcrb
mov
xchg
inc
adc
lock
stc
popa
fmull
xchg
ret
insb
inc
mov
js
daa
ret
dec
lret
sbb
cmpsb
pop
call
push
rorb
add
jge
arpl
xchg
mov
std
lar
push
add
dec
pop
xor
loopne
xchg
flds
lock
call
sbb
in
repnz
dec
mov
in
dec
or
mov
jmp
in
and
sbb
pushf
add
xchg
mov
dec
aam
int3
sbb
fstpl
scas
add
aas
xchg
cwtl
push
sub
out
out
in
and
mov
mov
and
sbb
xor
fwait
add
ret
inc
cmp
sbb
leave
outsb
pop
mov
mov
mov
ds
fisttpll
push
icebp
hlt
cli
aam
cmp
std
add
cmp
dec
shr
outsb
aad
push
xchg
mov
out
push
dec
out
lds
or
mov
lret
sbb
xchg
mov
or
lret
ficoml
decl
xor
stc
push
orb
push
xchg
jp
jecxz
es
test
int
cmp
sbb
add
adc
mov
shl
cmp
bnd
out
mov
mov
ret
push
pop
sarl
insb
xor
lcall
or
mov
add
dec
mov
cmc
ret
add
fnstsw
scas
pop
pop
in
iret
pop
sahf
sbb
jg
aad
imul
decb
leave
sbb
pop
inc
ror
cmpsl
xor
mov
clc
lods
adc
adc
push
xchg
es
or
push
add
push
xchg
clc
ljmp
xchg
or
lock
out
dec
cwtl
cmpsb
out
cmc
iret
xchg
dec
mov
lods
mov
aad
arpl
adc
cs
orb
jmp
adc
sub
sub
negb
sub
xlat
cmp
fstl
leave
call
mov
inc
mov
insb
popa
dec
nop
lods
sub
adc
in
call
and
jnp
pop
in
push
stos
push
inc
in
cli
lock
rorl
nop
es
fmul
lahf
mov
ljmp
cs
repnz
inc
inc
daa
out
cmp
sub
shr
xor
lods
and
stc
sub
mov
and
int
in
xor
fwait
push
dec
ds
rolb
fildll
insb
xchg
pop
jg
mov
fwait
jo
xchg
gs
cwtl
dec
dec
arpl
pop
testb
daa
fldl2t
push
stc
cmp
fcom
fimuls
imulb
or
test
std
sub
push
xlat
jne
mov
lea
sub
mov
ret
lock
xor
jbe
adc
push
mov
cli
add
dec
mov
cmpsb
jge
push
cli
int3
jo
ljmp
mov
and
cmpsl
imul
sar
inc
cmp
cmp
xchg
xchg
popf
xor
mov
mov
and
cld
mov
ds
mov
push
ljmp
sub
jo
mov
iret
daa
out
test
jl
or
pop
in
or
jno
insb
mov
fidivs
sbb
test
clc
out
inc
dec
adc
mov
mov
adc
std
sahf
mov
add
punpckldq
lds
test
dec
scas
lock
adc
mov
pop
push
popa
push
int3
pop
dec
sbb
in
mov
adc
push
sahf
mov
cmp
and
pushf
aad
mov
dec
test
jno
out
andb
sbb
and
mov
fs
daa
dec
xchg
sub
dec
les
sub
popf
xchg
iret
jge
mov
xchg
out
xchg
or
add
dec
icebp
les
pop
and
ljmp
jle
push
mov
rclb
stc
xor
adc
xchg
ret
hlt
push
imulb
roll
int
cmp
daa
push
xor
push
add
cmpsb
pop
mov
xchg
bound
outsb
mov
leave
inc
ja
fnstenv
lods
shll
leave
dec
shl
jbe
sub
stos
cli
push
pop
in
das
int3
push
inc
sub
sub
and
mov
mov
fidivl
rolb
mov
es
fsubs
loop
jmp
mov
aaa
push
push
mov
je
js
sbbb
fnstenv
pop
outsl
out
cli
ret
adcb
cmpsb
pop
push
scas
pusha
mov
cmp
add
jbe
fsubl
push
mov
stos
dec
or
loopne
mov
jb
mov
test
repz
cmpsl
push
les
cmp
dec
imul
out
xor
jns
mov
jo
das
mov
adc
cmpsl
test
loope
adc
fnstcw
sbb
cmp
push
aam
or
gs
arpl
sub
ret
cmc
dec
mov
cmp
xchg
ja
outsb
push
lret
into
mov
hlt
xchg
sbb
jecxz
scas
lea
dec
test
xor
negb
test
mov
int3
dec
lret
hlt
lcall
cmpsl
pop
mov
xchg
jecxz
cs
pop
or
cs
and
mov
scas
repz
mov
jl
push
icebp
jb
sub
cwtl
push
stc
outsl
mov
and
int
roll
je
mov
xor
sahf
sub
jae
test
mov
fimull
es
xchg
xchg
pop
xchg
adcl
mov
hlt
mov
test
inc
in
add
cltd
pushl
and
add
or
aad
iret
insb
rep
push
mov
clc
sub
mov
mov
pop
leave
js
leave
jmp
or
dec
ljmp
ljmp
repz
mov
enter
lret
sbb
aam
jmp
loope
xchg
sub
xchg
aam
imul
loopne
daa
sti
mov
ja
getsec
addr16
add
pushf
xchg
or
leave
jl
std
mov
fcoms
sub
dec
jae
mov
shlb
cwtl
jns
ljmp
adc
data16
pop
adc
mov
jae
jecxz
add
mov
testb
popf
incb
mov
fwait
xchg
inc
inc
adc
enter
loope
dec
xor
adc
movsl
sarl
push
sub
or
imul
cwtl
movsl
adcl
jb
push
jns
nop
adc
dec
icebp
push
aas
mov
push
mov
mov
in
pop
filds
jno
fnstenv
dec
pop
jo
xor
lret
arpl
lods
pop
adc
call
or
repz
mov
mov
sub
push
aad
lahf
dec
xchg
or
pop
pushf
xchg
imul
lds
ret
pop
lods
jle
and
xchg
jle
push
cmp
scas
xchg
or
xchg
cs
fistps
mov
cmp
clc
or
mov
fdivrl
sub
push
or
xor
pop
sub
add
mulb
or
inc
mov
sbb
ljmp
or
pop
imul
popa
fmulp
iret
fwait
loope
or
adc
add
aaa
pushf
aas
movl
inc
ss
adc
int3
aad
dec
or
and
dec
cmc
insl
mov
leave
cmp
mov
fistl
fiadds
mov
mov
push
bound
sarb
mov
into
mov
inc
pop
sbb
push
cmp
pop
adc
cmpsb
mov
add
sbb
jle
es
cmp
mov
xor
mov
sub
les
test
jo
jp
cmp
adc
cmp
cltd
jp
cltd
dec
aam
mov
lock
in
movsl
cld
dec
push
rdtsc
jge
dec
orb
scas
jge
sub
mov
enter
fbld
pop
loopne
lcall
mov
adc
push
sbb
adc
out
nop
xchg
mov
shll
xchg
and
xor
sub
dec
inc
jp
testl
aaa
mov
lret
dec
mov
out
mov
pop
insb
pop
out
fisubs
out
or
stos
jecxz
aas
fdivrs
dec
lock
cmpsl
mov
aas
rcl
push
xorl
rcll
sub
aam
pop
mov
pop
jge
push
dec
daa
cld
call
mov
mov
adc
les
ficoms
cmp
xor
jp
mov
cmp
mov
xchg
popa
cmp
into
sbb
mov
imul
lods
js
jns
add
in
xor
stc
sub
add
push
jp
push
add
pop
pop
mov
aaa
sub
xchg
mov
dec
pushf
jbe
mov
xchg
sbb
cmc
fildl
outsb
addb
dec
dec
jmp
lods
call
movsl
out
pop
dec
push
mov
pop
sbb
xchg
push
leave
push
and
data16
inc
aad
jmp
push
scas
add
inc
lea
fdivr
repnz
pop
jge
daa
std
lahf
add
pop
adc
fucomip
jg
xchg
subb
sbb
stc
ret
or
adc
out
inc
stos
out
mov
call
popf
adc
jl
rorl
insl
hlt
dec
jb
or
cs
add
sub
movsb
dec
adc
scas
adc
in
xchg
call
fcoms
fs
mov
or
ljmp
push
or
rcll
jge
push
out
movsb
lret
inc
cmp
add
sbb
je
push
ficoml
stos
lret
jp
jb
lea
aaa
test
into
mov
movsb
inc
andb
dec
sbb
je
and
sbb
mov
mov
pop
xchg
mov
mov
xchg
lcall
xlat
fs
add
add
mov
les
mov
arpl
push
or
mov
push
and
sbb
push
cli
and
jne
sarl
sbb
xor
out
mov
jae
push
add
fsub
dec
test
clc
sahf
ds
sahf
xor
insl
cmp
pop
scas
aas
adc
xchg
mov
xchg
outsl
out
test
jno
xlat
add
negl
sub
or
jb
pop
cld
sbb
and
inc
gs
or
stos
or
bswap
mov
in
ss
mov
sbb
xor
jge
int
outsl
inc
sub
outsl
addr16
push
xchg
dec
mov
in
jbe
sub
pop
xor
lea
in
xchg
xor
out
iret
inc
push
adc
lahf
loope
cmp
lds
mov
mov
inc
xchg
xchg
jmp
inc
outsb
imulb
push
cmp
dec
fcmove
enter
fmull
jb
enter
sti
shlb
mov
push
ss
call
call
rcll
gs
jp
shr
jmp
inc
xchg
lds
and
jg
xor
mov
subl
xor
faddl
xor
pushf
movsl
iret
aas
cmp
pop
mov
hlt
jmp
lret
imul
mov
sub
xchg
cmpsb
cli
cmp
xor
xchg
inc
out
xor
add
out
or
mov
out
inc
in
cmpl
add
les
fmull
jns
inc
pop
cmp
iret
fbstp
mov
or
cwtl
fs
inc
out
adc
mov
xchg
mov
inc
in
mov
popf
xchg
sti
adc
xchg
shll
scas
sub
adc
outsl
pop
adc
and
push
mov
mov
mov
sbb
adc
sbb
std
cmpsb
xchg
sub
inc
mov
cmp
and
sub
cmp
fwait
and
or
fcomps
imul
mov
test
lds
lret
out
or
mov
sbb
push
popa
fcomp
js
gs
pcmpeqw
mov
jb
cmpsb
aas
mov
adc
fidivl
aaa
mov
mov
andb
mov
push
sahf
mov
test
repz
mov
sti
sbb
mov
fistpl
cs
inc
cmc
sub
or
dec
sahf
jge
aaa
and
push
dec
push
out
jns
imul
js
pusha
sub
mov
ja
push
hlt
inc
testb
test
fisubrl
push
fwait
rorb
or
cwtl
outsb
testl
in
pop
nop
sub
cmp
sub
je
sub
imul
jmp
scas
pusha
push
mov
call
dec
insb
sbb
ja
loop
pop
sbb
test
cmp
out
xchg
out
jp
cmp
imull
pop
mov
cwtl
or
sbb
jo
lds
popa
sbb
and
cld
orb
aas
test
lds
mov
int
or
add
xor
js
fmull
js
push
cltd
dec
xor
mov
cli
int3
pop
adc
aad
fwait
jo
outsl
daa
clc
out
jmp
scas
sbb
ljmp
push
out
mov
addr16
bswap
jo
aam
fs
pushf
xchg
aad
jns
lods
in
lret
daa
das
in
js
or
pushf
imul
imul
je
add
or
out
sbb
adc
or
into
or
in
push
arpl
mov
cmp
xchg
ljmp
adc
pop
jae
lret
lret
lock
sarb
repnz
inc
out
std
clc
adc
jb
hlt
mov
pop
sbb
pop
mov
imul
sti
fs
push
dec
push
pop
ljmp
jne
out
jae
out
sbb
ret
nop
in
mov
push
sub
mov
jae
adc
pushf
xor
inc
pusha
inc
frstor
pop
ljmp
pusha
movsb
stos
je
stos
mov
inc
scas
push
int3
push
mov
push
mov
jns
loopne
pop
aaa
jp
out
test
fmulp
inc
fs
and
in
push
jns
out
loop
in
sub
in
lahf
push
stc
loopne
call
pop
cmp
mov
xchg
cmpsl
or
lahf
sub
inc
or
mov
pop
rclb
mov
arpl
jmp
repz
js
pop
arpl
inc
mov
sub
dec
out
mov
push
fsubl
outsb
jge
fnstenv
mov
in
sbb
in
outsl
and
and
in
filds
mov
bound
sbb
sbb
test
mov
push
mov
fiadds
inc
mov
fs
fisttps
xor
inc
fsub
aas
pop
shrl
push
les
shrl
add
mov
sbb
aad
cmp
cmp
push
adc
xor
ror
insl
xor
jmpw
frstor
jae
sub
sti
cmp
ss
lock
or
imulb
mov
es
fadds
sbb
mov
aas
push
fmul
fcmovnb
test
daa
int3
jl
pushl
pushf
stc
sahf
mov
movsb
mov
xchg
fwait
xchg
fwait
imul
shll
pop
in
out
jno
inc
dec
lods
testb
insl
dec
jbe
mov
push
push
inc
int
call
insl
fadd
in
into
xor
jne
aad
in
mov
pusha
adc
into
clc
and
outsb
mov
xchg
outsb
jg
pushf
push
jnp
xor
test
mov
iret
sbb
dec
xchg
gs
scas
rorb
cmp
lods
jmp
push
add
mov
loopne
cmc
or
lret
jbe
push
lea
outsl
or
outsl
ss
add
mov
pcmpgtd
dec
sub
fistpl
ljmp
inc
xor
cmp
xorl
sub
pop
sar
mov
mov
loop
popf
jno
xchg
pop
push
add
ja
in
cs
loop
mov
mov
dec
lret
and
sbb
es
cmc
cmp
push
aaa
mov
gs
lret
out
leave
or
dec
lea
inc
negb
push
sub
lea
mov
out
mov
imul
lret
adc
test
pusha
xor
jg
jecxz
and
pop
pop
les
sub
jecxz
mov
call
rclb
movl
push
xchg
dec
sahf
ret
ret
sbb
cmp
mov
xchg
sbb
hlt
push
scas
aam
mov
das
popa
push
inc
je
out
nop
inc
into
jg
in
arpl
les
and
ja
push
dec
pop
adc
in
loopne
sbb
push
das
mov
out
jns
dec
imul
movzbl
and
mov
sbb
fwait
in
aad
scas
sbb
cs
mov
xchg
cmpsb
rolb
inc
jne
sub
test
in
mov
mov
mov
fdivs
lcall
add
fwait
ss
andb
sahf
out
push
rorb
mov
dec
inc
and
cld
sbb
rcr
xor
test
inc
add
lea
and
xchg
nop
xchg
mov
jp
aam
push
sbb
es
inc
add
jecxz
sub
jbe
fmuls
roll
scas
mov
test
dec
add
ja
jns,pn
lock
gs
jbe
aad
subb
and
jns
scas
xor
mov
sub
push
js
test
imul
xor
shll
cltd
adc
cmp
in
xchg
push
out
push
cld
cmp
iret
data16
push
mov
jns
sahf
sub
dec
fnstsw
inc
repnz
sbb
ljmp
cwtl
mov
loope
fcompl
stc
lock
sbb
xor
or
mov
xor
jge
or
dec
or
pop
enter
aad
or
or
rorl
mov
inc
xchg
lret
push
xchg
sbb
ja
sti
and
int
stc
sbb
pop
lods
sub
cmp
xor
or
lods
in
and
daa
fdivrs
icebp
push
insl
sub
dec
addr16
push
loopne
and
not
sbb
sti
pushf
add
jmp
imul
xor
leave
pop
lds
cmp
lock
push
mov
icebp
movhps
enter
pop
mov
inc
out
or
dec
outsl
pushf
push
mov
gs
imul
fnsave
mov
cmp
rcll
push
xchg
es
hlt
sub
insl
xchg
lcall
outsl
adc
rorl
or
cli
loop
scas
insb
test
mov
adcb
shrl
cld
push
push
fcompl
test
cld
orb
loope
iret
adc
cmp
add
loopne
repnz
adc
andb
cwtl
jecxz
xorb
jno
push
test
sbb
xchg
xor
leave
inc
fwait
jnp
add
mov
addr16
mov
test
push
adc
xchg
sbb
xchg
add
and
sti
push
add
daa
sub
add
push
xor
mov
ljmp
jno
test
stc
mov
xchg
fists
add
adc
push
sub
ds
and
push
ret
jl
in
shl
nop
xlat
test
inc
testl
sub
shll
inc
clc
int
test
xlat
or
jg
gs
jecxz
and
sbb
sbb
leave
fiadds
rcrl
xchg
push
cmp
push
notl
and
jl
leave
fadds
and
iret
lea
fcoml
and
xchg
pop
stc
out
jmp
xchg
inc
or
pop
push
ret
out
and
stos
add
ficompl
jns
mov
das
inc
pop
push
sbb
js
cmpb
addb
call
pop
or
xor
or
aas
and
add
dec
pop
sub
shll
sbb
jns
pop
push
aaa
sahf
test
xlat
mov
mov
xchg
jge
jmp
ror
xchg
loop
cmp
in
je
test
sub
push
out
ja
cltd
mov
movsb
test
lock
into
push
fs
pop
inc
push
fildl
lds
scas
mov
or
loope
push
dec
and
dec
test
xor
ret
or
lods
fnstcw
test
cmp
insl
hlt
sub
or
xor
mov
lea
dec
fnstenv
sbb
pop
std
ss
cmp
cwtl
inc
cs
sbb
out
or
cli
xor
sti
in
fstpl
in
add
ja
daa
push
mov
jne
push
mov
push
jg
adcb
out
fnsave
sti
js
pop
in
and
xor
jle
push
and
adc
cli
in
pop
clc
icebp
orl
das
mov
loope
cmp
ficoms
inc
add
cmpsb
test
shlb
adc
sub
jbe
adc
push
test
ss
mov
xchg
push
mov
call
xchg
push
sbb
shll
ja
jmp
cmp
shrb
push
aaa
mov
outsl
sbbb
test
jns
call
xor
mov
dec
jno
ds
mov
pop
pop
sar
out
or
mov
add
push
sbb
mov
clc
mov
or
inc
jmp
out
lods
adc
xchg
push
fcoms
es
mov
xorl
iret
or
cs
xchg
xor
pop
mov
dec
pop
or
popl
xchg
repz
jge
loopne
repz
pop
or
cmp
nop
dec
jne
cmc
inc
cmp
push
cmp
mov
lds
insl
in
pop
js
and
hlt
cld
push
pop
cmovbe
shl
sub
das
mov
pushf
dec
inc
imul
and
jmp
cmp
into
jb
xchg
xor
and
hlt
pushl
mov
fildll
xchg
mov
cmp
xchg
adc
adc
xor
or
push
testb
sbb
add
fidivs
mov
push
bound
add
cmp
xchg
lahf
dec
pop
outsb
xor
loopne
ljmp
pushf
pop
in
mov
loopne
mov
mov
or
inc
xor
mov
mov
jmp
rcll
loope
sti
ja
xchg
jg
push
lods
sub
mov
push
jbe
sbb
imul
sub
jle
push
inc
in
pusha
mulb
loop
cmp
adc
das
dec
jne
pop
cmpsb
dec
outsb
xchg
ja
sub
mov
xor
adc
imul
ret
out
pushf
mov
ljmp
add
or
jp
loopne
xchg
mov
push
movsl
lret
dec
lds
push
into
loopne
mov
sub
adc
push
dec
pop
push
jae
sysret
clc
mov
sarb
mov
mov
cmp
and
addr16
stc
arpl
lods
movsl
ret
js
clc
js
mov
jle
nop
add
sub
fwait
xor
push
sbb
cmpsl
mov
outsl
dec
dec
cli
fsubrs
pop
mov
fwait
cmp
pop
sbb
sub
insl
pop
adc
xor
aam
mov
sub
lds
bound
and
sbb
test
inc
imul
icebp
mov
inc
push
push
push
cmp
inc
cltd
lods
mov
loopne
jno
sbb
das
pop
fs
popf
adc
mov
sub
mov
out
xchg
pop
and
out
cld
push
jne
ret
xchg
rcrb
ret
pop
inc
mov
pop
nop
jge
cmp
sub
lcall
divb
cli
dec
rol
jns
mov
adc
hlt
fcoml
dec
fwait
sbb
xchg
leave
enter
push
jno
xchg
fcmovnbe
or
addr16
mov
enter
mov
mov
xchg
repz
fs
enter
and
xchg
les
or
cmp
pop
enter
push
fists
sahf
mov
iret
or
cmp
pop
sbb
aam
push
pop
aas
push
clc
out
es
arpl
sub
aad
or
movsb
loope
dec
inc
mov
cmc
lea
lods
pop
jo
xlat
arpl
div
pop
daa
aam
mov
fsubrl
js
push
mov
cmp
punpckhwd
rolb
sbb
popa
pop
imull
popl
cmp
adc
mov
xchg
das
add
push
xor
loopne
jbe
mov
xor
iret
mov
jge
sbb
addr16
fs
jle
cmp
cwtl
sub
mov
sub
jno
lcall
mov
imul
arpl
lret
push
or
mov
dec
lods
pop
pop
jo
cmp
dec
jo
xchg
gs
jae
icebp
add
stos
or
adc
or
dec
mov
aaa
pop
and
dec
cmpsl
pop
insb
mov
ja
insb
push
test
cmp
mov
std
inc
sarb
xchg
shll
in
mov
sub
call
out
out
addr16
mov
pop
and
icebp
mov
rcr
inc
repnz
mov
out
movsl
xchg
add
int
jp
mov
pop
mov
insb
pop
negl
cld
inc
icebp
pop
mov
and
repz
dec
sti
cmp
dec
push
mov
sahf
jl
dec
xchg
sbb
cmc
push
lret
xchg
fdivr
and
cmc
mov
mov
mov
repz
sub
cltd
mov
ret
xlat
aam
es
lret
fiaddl
adc
imul
mov
ss
jbe
push
loopne
jb
and
test
test
in
mov
push
lret
xchg
jg
and
jp
fstpt
int3
add
and
sti
xchg
cmp
xor
je
pop
dec
insb
push
scas
sti
lahf
pushf
push
mov
pop
jb
dec
inc
mov
jo
divl
shrl
add
lods
in
loopne
arpl
mov
mov
xchg
insl
in
test
mov
cli
inc
cld
mov
das
test
xlat
mov
insl
cmc
xor
cmc
dec
xchg
mov
in
sbb
popf
inc
mov
push
push
jle
cmp
scas
lahf
testb
sub
mov
mov
mov
pop
pop
bound
mov
push
jo
or
fdivl
movl
xchg
or
aas
popf
add
cmpsb
test
xchg
popf
push
sub
fsubrl
cli
mov
out
xorb
sub
arpl
jge
sti
test
pop
lahf
popa
dec
jp
jg
incb
mov
pusha
ret
es
int3
mov
js
xlat
shr
popf
arpl
mov
xor
fwait
push
or
mov
xor
sub
sbb
jno
ret
fadds
push
push
push
enter
clc
in
es
mov
test
ds
push
mov
add
jns
mov
repz
scas
decl
pop
fdiv
mov
daa
out
daa
push
sub
je
cmpsb
push
cmpsl
or
add
stos
lret
pop
aaa
jecxz
subl
dec
ss
or
cmpsl
xlat
sub
imul
xchg
xchg
jg
aaa
ficoms
dec
test
mov
lock
cmc
add
aas
popf
ljmp
arpl
mov
shlb
call
data16
cs
jl
pop
mov
in
sbb
fld1
daa
pop
test
adc
dec
loop
jge
mov
cmp
pop
pop
mov
jge
add
arpl
repz
cwtl
adc
or
popa
out
xchg
leave
ficompl
push
rcr
mov
xor
pop
or
ret
bt
shlb
clc
cwtl
stos
jmp
lods
fnstsw
pop
insb
in
fwait
out
push
test
push
das
sahf
push
out
or
dec
aam
jns
das
lds
stos
pop
int
popf
xchg
hlt
movsl
jecxz
lret
pop
lret
adc
lahf
dec
in
hlt
xchg
pop
outsb
movsl
pop
repnz
ss
lock
mov
lret
mov
push
mov
repnz
mov
push
ja
push
shrl
sbb
mov
insl
cmpsb
test
out
xchg
adc
rorl
pop
outsl
xor
cmp
repz
jecxz
mov
push
jg
lret
lcall
cmpl
dec
fwait
stos
or
cmp
rorb
xchg
xchg
shrl
or
popl
lret
mov
inc
andl
imul
cs
movsl
pop
rcr
enter
int3
aad
lret
dec
lahf
and
fildll
push
lods
bound
and
dec
mov
negl
xchg
push
mov
pop
leave
lea
or
mov
cmpsl
inc
push
pop
test
sbb
or
push
fsubl
jmp
leave
xchg
divb
sahf
adc
not
jnp
shl
cmp
loopne
inc
sbb
mov
sbb
jb
xchg
mov
int
sub
shr
xchg
mov
fidivrs
inc
xor
hlt
jl
adc
test
enter
out
sub
pop
cld
std
das
or
jo
xchg
cltd
xlat
fiaddl
adc
fwait
add
inc
int
arpl
dec
mov
inc
test
cmpsb
popf
push
add
and
sarb
int
movsl
addb
jbe
sbb
mov
push
divps
lods
cmp
jo
bnd
xlat
cmp
mov
adc
adc
out
cwtl
or
faddl
cmc
cmp
push
cmpsb
mov
or
stc
adc
test
test
push
out
xchg
popa
repz
inc
sbb
mov
rol
in
adc
cli
adc
rcll
cmp
and
ja
clc
ja
dec
nop
nop
rorl
and
outsb
xchg
iret
scas
push
push
ds
mov
data16
pop
lods
mov
xchg
cmpsl
or
sub
lds
mov
shl
shrb
iret
mov
and
loopne
es
sub
pop
movl
out
cli
sub
sbb
sahf
jp
pop
rol
xchg
sub
mov
bound
jmp
mov
lods
push
mov
add
loopne
cmc
pop
pop
dec
dec
and
ljmp
push
xor
mov
xchg
dec
ja
mov
and
jns
outsl
or
pop
iret
mov
and
lods
mov
pop
mov
dec
adc
dec
enter
xchg
jmp
aas
gs
and
pop
push
loop
movsb
pop
adc
insl
xor
inc
mov
and
rol
push
jne
xor
dec
out
mov
movsl
adc
xor
jae
adc
inc
cmp
in
sti
dec
movsb
or
cmp
jmp
stos
sbb
pop
cmpl
cmc
icebp
js
pop
inc
mov
inc
repnz
pop
lahf
out
test
adc
mov
cli
mov
or
mov
loopne
mov
xor
xor
or
out
out
jno
push
mov
xchg
bound
rorb
into
or
pushf
loop
adc
cmc
jmp
dec
and
push
add
pop
es
out
or
out
push
sub
sub
pop
cmp
mov
push
cwtl
or
and
dec
fabs
pop
mov
mov
push
lret
xchg
loop
pop
rcl
push
pop
lret
icebp
aad
hlt
cli
daa
cmpsb
mov
mov
xchg
jns
push
nop
xchg
into
dec
inc
dec
inc
mov
fidivl
jle,pn
out
jae
loope
pop
cmc
cli
clc
sbb
aam
push
shlb
jne
out
cmp
sub
js
stos
push
pop
xor
in
addr16
cwtl
jmp
push
out
pop
jne
aas
ljmp
mov
adc
add
or
jnp
mov
and
daa
or
sbb
insl
addb
rcr
xlat
push
ja
fistl
mov
insl
loope
jle
sti
mov
movsb
add
inc
adc
or
test
mov
mov
std
xor
inc
xchg
cmp
jo
int3
xchg
cmp
or
mov
adc
dec
adc
add
mov
mov
mov
lret
mov
mov
loope
lds
imul
pop
sti
gs
imul
popf
lret
nop
jno
add
pusha
cli
sub
hlt
in
adc
mov
add
out
xor
add
loope
or
xchg
push
fidivrs
mov
ss
test
aad
inc
mov
std
les
test
int3
mov
ret
jp
fsubrl
jns
clc
xchg
lret
inc
sti
dec
push
fdivrp
add
or
pop
adc
jbe
and
mov
mov
pusha
insl
pop
out
xorb
jae
sahf
mov
inc
sbb
faddl
aas
add
lret
aam
inc
and
jge
pop
inc
add
jecxz
movsl
imul
ret
insl
pusha
outsb
jno
inc
aam
push
orb
lahf
mov
cmp
cmp
sub
cmp
outsb
clc
dec
fidivl
mov
pop
mov
sbb
add
test
adc
popa
xchg
mov
test
mov
insl
outsb
sub
test
xor
movsb
fists
into
xchg
out
faddl
or
hlt
mov
jmp
dec
push
cmp
ret
pusha
xchg
push
pushf
dec
xchg
cmp
and
or
adc
rcrl
ja
jl
sahf
or
cltd
test
call
push
adc
mov
das
cmc
jmp
shl
or
test
pop
sub
jg
inc
adc
dec
dec
or
iret
stos
jl
loopne
lods
cmp
outsb
dec
outsb
js
sub
stc
stos
pop
adc
nop
inc
int3
enter
outsb
cmpsl
mov
pop
push
daa
sbb
scas
js
cmc
mov
adc
imul
or
inc
sbb
dec
push
or
addb
mov
lret
pop
lahf
iret
sbb
lahf
iret
pop
stc
sub
insl
ljmp
mov
push
fidivrs
jne
lahf
fldt
fs
lret
jl
cmpsb
insl
fisttps
cmp
pop
es
pop
jecxz
mov
add
lea
cmc
mov
mov
lcall
call
mov
add
sub
les
imul
mov
mov
ret
xor
push
aad
sbb
push
or
mov
stc
call
jbe
mov
arpl
xor
pop
sbb
xor
ror
aaa
into
push
dec
es
call
in
pop
lea
cmc
jne
ror
lahf
cld
jl
cmpsb
fidivl
orl
jmp
das
arpl
lcall
mov
mov
nop
jecxz
fiaddl
jle
lock
ja
frstor
jnp
icebp
inc
mov
loopne
or
js
add
sub
sub
lods
adc
pop
test
push
add
mov
sbb
mov
adc
jo
insl
lahf
shlb
pushf
cmp
es
dec
jb
adc
cmpsl
ds
mov
push
inc
adc
test
cli
sbb
test
adc
cmp
cmc
jle
repnz
jno
sbb
jo
fldln2
test
mov
icebp
push
adc
sbb
jnp
aam
mov
mov
jne
sbb
adc
clc
fsubrl
inc
mov
les
and
int
daa
adc
adc
push
dec
and
cld
mov
imul
and
lret
push
inc
push
lock
loop
enter
shlb
cmpsl
mov
xchg
jmp
push
sbb
add
movsl
sub
add
mov
mov
mov
lahf
inc
shl
jmp
nop
mov
lods
dec
mov
aaa
fstpt
fsubs
out
pop
lds
mov
daa
adc
lret
xchg
add
jns
sub
jae
pusha
jge
imul
jnp
in
outsb
add
push
xchg
cmpb
sbb
addb
int
sbbb
add
sbb
fidivs
sub
fisubrl
rorb
jnp
mov
addb
or
sbb
mov
int
ret
call
inc
sub
inc
dec
inc
xor
sub
mov
jg
jbe
in
ret
push
mov
sub
cli
rclb
repz
adc
out
shlb
idivl
adc
mov
scas
xchg
add
lea
cld
sub
or
outsb
repz
mov
cmp
jecxz
hlt
aad
sti
dec
div
cmp
aam
mov
cli
stos
lcall
outsb
and
adc
imul
xor
and
add
imul
cmp
enter
jae
rol
xchg
outsl
iret
sub
popa
xchg
push
jmp
mov
int
mov
ret
adc
dec
pop
jl
or
inc
or
adcl
xchg
cltd
dec
lods
mov
xchg
add
lods
push
ret
aad
movsl
mov
in
mov
and
pop
jecxz
aam
fwait
cmc
dec
mov
jnp
ljmp
jae
sub
mov
jle
xorb
sbb
enter
adc
fwait
xor
dec
cmpsl
cmc
out
into
fidivs
je
outsb
cmp
sti
push
and
pop
popa
inc
js
mov
pop
mov
push
lock
jg
mov
jne
sub
loopne
dec
addr16
mov
bound
repz
sbb
movsl
jbe
cmp
dec
xchg
mov
push
sbb
movsl
aas
pushf
fstps
adc
fildl
stos
nop
xchg
sbb
int
sti
ljmp
andb
fldl
cmp
sbb
cmp
pop
mov
js
andnps
sahf
push
loope
repz
mull
pop
scas
ret
mov
mov
jp
inc
ds
jmp
mov
jmp
xor
pop
ljmp
pop
mov
lods
test
clc
sahf
ljmp
movsb
jmp
jnp
adc
push
data16
pop
shll
lock
xchg
xor
fisttpl
gs
aaa
out
xorl
fs
shrb
out
out
and
out
sbb
sub
insl
or
imul
mov
and
outsb
cld
mov
testb
jl
dec
jae
shlb
test
outsb
out
push
fs
or
in
testl
ret
dec
push
xchg
lods
subl
out
or
repz
push
rolb
push
dec
ss
adc
rorb
jns
lds
add
cmpsb
notb
cltd
push
sub
das
mov
fidivrl
push
idivb
or
dec
filds
mov
mov
or
imul
or
enter
mov
je
jo
repz
jae
pop
xor
dec
pop
popa
or
mov
sahf
sbbb
iret
aas
cmp
sub
xor
or
mov
xor
mov
lahf
testl
push
dec
sub
ss
lock
sbb
push
out
add
adc
and
test
mov
icebp
ja
ret
lret
add
pop
iret
ror
and
adc
xor
idivl
push
sti
dec
sbb
sub
out
call
fcoml
inc
push
xlat
neg
push
and
pop
xor
push
sub
in
clc
stos
clc
rclb
or
xchg
iret
lret
adc
jbe
imull
cmp
add
xchg
ljmp
pop
enter
mov
sbb
inc
mov
shl
inc
clc
mov
mov
xor
inc
sbb
lds
cmp
scas
roll
loop
pop
dec
push
cmp
ret
sub
sbb
out
cmp
add
adc
dec
dec
jge
test
pop
sbb
addb
pusha
lds
jno
push
jo
push
xor
mov
fsubr
adc
stc
or
pop
mov
jmp
in
movsb
pop
cmp
mov
jae
mov
stos
pop
xor
pslld
inc
xor
push
in
hlt
shlb
pop
mov
lcall
mov
push
insl
loope
sub
xchg
cli
xchg
and
cmp
iret
pop
repnz
clc
mov
ret
sub
or
adc
mov
or
enter
xchg
fstps
mov
movsb
jmp
push
loop
or
fcmovnu
repz
sub
imulb
test
in
insb
pop
dec
mov
pop
cld
pushf
dec
daa
xor
xchg
mov
fs
mov
adc
mov
cmp
dec
add
inc
jl
mov
and
pop
push
pop
cmp
out
loope
movsb
xor
jo
fsubrs
jecxz
in
cmp
cmp
fsubs
ss
imul
inc
out
pop
mov
int3
adc
testb
icebp
cmp
lret
dec
rcll
push
mov
pop
lret
and
and
out
mov
lahf
cltd
mull
in
ja
adc
call
dec
and
fstps
add
into
into
cmp
in
jb
fldcw
and
adcb
loopne
inc
jle
add
lret
push
repz
jae
mov
popf
lods
xor
pusha
push
repz
and
push
sbb
and
int3
cwtl
icebp
jl
xchg
loope
and
jp
ficompl
inc
add
dec
push
jmp
insl
cli
or
lods
rcr
adc
and
pop
dec
lock
jb
shlb
inc
jo
adc
jle
xchg
movsl
rolb
or
cmp
addr16
mov
punpckhwd
lret
xor
ja
jle
mov
cli
fildll
fstps
test
xchg
jecxz
sbb
stos
xor
mov
jns
jns
adc
mov
mov
xchg
clc
mov
loope
sbb
outsl
mov
sti
sti
mov
test
out
test
les
pop
xor
or
jle
in
int
jl
pop
fsts
sbbb
cmp
std
mov
loop
test
lock
and
push
insb
jl
push
inc
hlt
fsubp
mov
mov
mov
cmp
dec
lods
xor
and
outsl
ja
sbb
das
out
sub
rolb
cmp
cmpsl
xchg
es
inc
fiaddl
into
jns
cld
mov
push
jecxz
xchg
xchg
iret
sub
pop
mov
popa
ds
inc
push
xlat
xor
out
shlb
push
xorl
outsl
xchg
mov
xchg
xor
stos
pushf
mov
inc
test
repz
xor
mov
daa
xchg
adc
mov
repz
rcrl
and
and
sahf
jo
cli
hlt
mov
push
mov
mov
insb
dec
or
sub
inc
cmp
das
xchg
xor
cmp
fidivrs
xchg
lds
xchg
xchg
and
scas
sub
shll
int
cmp
xchg
nop
inc
pop
daa
jb
or
mov
loop
adc
ja
and
pusha
adc
out
stos
and
mov
xor
push
cmp
shlb
mov
fwait
jo
adc
dec
mov
cmp
xchg
pop
sub
inc
test
jo
mov
xchg
movsl
mov
or
divb
insb
xlat
add
fs
inc
jb
add
lahf
hlt
in
add
push
mov
es
rclb
dec
insl
add
fcmove
inc
or
xchg
xor
insl
sub
cwtl
fstpt
mov
fs
shll
xlat
shrb
pop
sti
inc
rcrl
sbb
ja
data16
or
lock
xor
cmp
pop
shl
lret
adc
ficoml
es
adc
xor
inc
add
jb
xchg
insb
mov
lods
je
inc
dec
push
stos
ficoml
ret
and
andl
jae
xor
inc
outsb
jecxz
jno
dec
lods
lret
sti
test
aas
sub
cmp
jl
inc
aaa
sbb
mov
cmp
out
mov
lahf
inc
sbb
fimull
adc
ss
xchg
cmpsl
mov
jmp
mov
or
stos
jns
add
shll
xchg
xchg
dec
test
mov
sbb
push
pop
outsb
sub
xor
fwait
aas
imul
and
fnsave
dec
movsb
jp
in
mov
cmp
loope
imul
in
inc
stc
adc
insl
xor
sub
jns
add
std
shll
dec
fwait
test
push
mov
cmp
jle
or
sbb
mov
insl
cmp
jns
sahf
mov
push
adc
sub
out
add
clc
xcrypt-ctr
cmpsl
sbb
sbb
into
test
mov
adcb
inc
clc
sub
cld
cltd
fnsave
sub
testl
test
inc
int3
iret
sbb
pop
add
mov
nop
cli
sub
and
or
movsl
pop
pop
fimull
push
cmp
pop
test
inc
repz
lods
shll
cs
ja
loopne
or
jmp
aas
xlat
std
and
mov
test
pop
test
flds
ja
xchg
mov
cmp
mov
out
sbb
shll
mov
push
jnp
lret
cmpsb
jl
fwait
cmc
stc
jl
or
movsb
sub
pop
stos
shrb
in
aad
adc
paddq
adc
insb
aad
jo
pusha
insb
xchg
mov
fistpll
cmp
and
lock
cli
pop
pusha
call
push
stos
push
popa
movsb
mov
stos
imul
popa
shr
lea
sub
dec
and
and
stc
sub
jecxz
fldcw
pop
js
loop
dec
dec
dec
out
aas
mov
lret
sub
test
push
shll
adc
mov
imul
xor
and
and
jmp
xchg
add
mov
rcrb
push
fistps
pop
mov
scas
cmp
sbb
sarb
aam
cld
roll
pop
cmp
iret
sub
test
std
jp
mov
inc
and
mov
mov
sub
add
je
lock
out
les
dec
fdivl
mov
sbb
test
and
or
jmp
les
or
test
fdiv
movl
shrb
cli
test
inc
jns
cld
sbb
lret
sub
js
insb
sarl
mov
nop
add
cmp
shlb
jb
rclb
and
mov
outsb
shrb
mov
inc
into
and
mov
decb
lcall
les
daa
rolb
adc
imul
cmp
push
jecxz
xchg
add
or
dec
xor
push
lea
sti
mov
or
mov
loop
scas
push
insb
repz
mov
inc
dec
cmp
dec
ficoms
fiaddl
pop
pop
add
test
movsb
mov
pop
sbb
and
ss
in
jae
add
ljmp
mov
mov
fcmovnb
xchg
or
in
xchg
mov
inc
jo
or
push
lea
das
arpl
pop
movsb
add
or
dec
dec
push
mov
nop
pusha
lods
popf
cmp
adc
push
scas
insb
call
sbb
int
mov
iret
out
dec
cmp
outsl
mov
mov
push
orl
push
rol
sub
cmpb
in
push
movsb
and
jnp
pop
cmpsb
jl
cmpsl
xorl
popf
fdivr
add
push
pop
je
movsl
stos
mov
ljmp
bound
mov
cltd
mov
call
out
or
pop
fidivrl
jmp
lods
fidivrl
lret
lods
cmp
stos
cwtl
xchg
lock
shll
and
xchg
ds
es
cltd
xchg
push
movsl
imul
test
xorl
sbb
ficompl
fmuls
and
lock
testb
push
adc
bnd
mov
repz
xor
call
jge
jmp
and
xor
scas
jo
daa
pushf
cmp
cmpsl
push
and
ror
add
fisubrs
out
push
les
rorl
mov
push
xchg
ds
push
inc
mov
in
rorl
pand
repnz
pop
mov
push
test
cmp
sahf
ret
cmpsl
add
test
orb
xorb
mov
jmp
dec
xor
xchg
call
add
push
cmp
lods
mov
cmpl
sbb
jl
test
scas
cmp
add
cwtl
lea
ds
xor
enter
fdivs
add
xchg
sub
cmpsl
sub
ja
xor
mull
imul
pop
jle
mov
lcall
push
data16
xor
or
out
push
leave
in
bound
push
fwait
jg
idivl
out
sti
fildll
xor
lret
sbb
xor
jns
pop
cmp
shrb
mov
std
cmpsl
rcr
push
jge
jp
mov
fsubl
mov
or
mov
test
insb
dec
xor
cmp
mov
cmp
movntq
or
push
ljmp
stos
hlt
push
pop
and
popa
mov
nop
ss
in
sahf
sbb
dec
sbb
gs
mov
mov
xchg
test
fs
shrl
cmpsl
repz
test
cmpsl
dec
cvttps2pi
push
lahf
adc
adc
add
add
xchg
adc
push
jl
mov
clc
fcomps
or
adc
imul
testb
cmpsb
push
mov
dec
dec
xor
cmc
ret
add
and
cmc
scas
jb
sbb
or
jmp
jg
jl
adc
mov
adc
test
inc
jo
outsl
fldt
testb
mov
test
push
lock
orl
data16
mov
lcall
orl
scas
addr16
mov
pop
pop
insl
sti
cwtl
lcall
pop
add
adc
fiadds
bound
mov
pop
or
int3
dec
imulb
mov
mov
cmp
pop
aas
jnp
fistps
inc
dec
add
outsl
enter
jp
jmp
lahf
fnstcw
push
or
es
enter
fiaddl
sub
lahf
cmp
push
lahf
jns
xor
xchg
mov
and
sbb
in
pop
les
imul
ret
es
mov
cld
push
xlat
push
mov
imul
jno
popf
mov
lods
and
push
mov
inc
xchg
mov
dec
insl
adc
push
dec
add
fwait
and
pop
ja
sub
sarb
jb
lret
jno
fbld
cmp
in
imulb
mov
push
call
lret
lret
and
bound
in
jmp
or
sub
cmp
stc
lds
dec
cmp
nop
nop
int3
and
push
push
lock
adc
or
jle
shll
mov
add
lock
les
in
not
cmp
mov
pop
fstps
sbb
push
out
mov
shrb
jae
movsb
test
and
mov
loop
pop
adc
loope
cwtl
in
es
popa
loopne
push
push
outsl
push
cmp
mov
gs
int
inc
ja
xlat
or
mov
cmp
sbb
test
icebp
sub
xchg
and
cltd
jp
sbb
cmp
sbb
jle
rclb
inc
cmp
push
test
rolb
jge
lret
adc
scas
lods
push
jno
cmp
mov
xchg
in
das
shrb
arpl
insl
xchg
sub
push
ss
pop
pushf
iret
out
jge
jb
pop
cmp
or
popa
movsb
dec
adc
mov
inc
fs
xor
aaa
pushf
cmp
cmp
dec
dec
imul
lret
push
jne
inc
jp
ds
mov
and
pop
sbb
lret
or
mov
das
popf
and
cwtl
add
lock
fs
mov
dec
inc
xchg
mov
mov
xchg
mov
mov
or
push
test
and
fdivrs
mov
pop
mov
ficoms
lock
lahf
fwait
out
fsubr
rcrl
add
subl
outsb
jne
sbb
push
jns
cwtl
loopne
js
subb
inc
sbb
sbb
dec
call
jnp
sub
jo
not
cmp
fs
sbb
and
cmp
xor
test
lret
cmc
mov
daa
movsb
add
adc
dec
test
cmp
aas
cmp
lcall
mov
shl
out
out
mov
inc
das
lahf
mov
add
es
dec
or
cwtl
lret
in
and
mov
ljmp
pop
stos
fs
arpl
adc
push
and
scas
addr16
jae
scas
mov
jns
pop
daa
outsb
mov
jbe
iret
or
sbbb
insb
pop
call
and
imul
xchg
hlt
rcrl
popf
mov
jbe
mov
xor
mov
cld
jbe
mov
pop
repz
mov
ljmp
and
xor
adc
faddp
add
in
mov
aaa
into
jbe
andb
and
adc
icebp
xor
inc
pop
mov
fmull
adc
inc
into
stos
arpl
cmp
add
fistl
xor
popf
or
jg
ret
enter
sbb
sub
adc
pop
xor
mov
shll
adc
xchg
mov
cmp
sbb
test
negl
sbb
adc
ljmp
leave
or
cmp
jbe
mov
mov
sub
fildll
xchg
push
mov
mov
sub
push
xor
outsb
xor
es
sub
inc
ret
shrl
bound
into
decl
and
sub
push
add
sahf
inc
shrl
mov
jnp
mov
add
frstor
mov
aam
push
into
aaa
cld
mov
popf
pop
sub
sbb
call
js
jae
sub
out
xlat
cmp
inc
adc
mov
out
dec
inc
movsb
les
in
lcall
lahf
add
in
std
scas
out
data16
cli
jo
cli
mov
or
pop
or
push
mul
sub
adc
je
stos
lock
in
inc
pusha
nop
testb
movsl
in
sti
mov
jno
jl
insl
jnp
nop
dec
xchg
jo
xor
fdivrl
adc
dec
inc
inc
leave
ret
repz
add
jecxz
or
rcr
out
frstor
or
rcr
adc
shl
adc
stos
das
pushf
lret
sub
ja
bound
mov
mov
mov
loop
push
stos
icebp
cmp
lods
add
jno
mov
iret
cmpb
xchg
mov
dec
add
push
xor
into
and
rorb
loopne
or
ret
mov
mov
sbb
sbb
or
daa
cmpsb
mov
imul
stos
shl
std
into
out
fisubs
inc
imul
aad
or
aad
jns
test
enter
xchg
inc
pop
xchg
bound
pop
mov
out
mov
bound
leave
inc
jns
xchg
pushf
icebp
popa
pop
xchg
xchg
or
insl
ret
pop
jmp
or
add
ds
or
stos
push
push
das
jle
jns
sbb
jns
xchg
pop
divl
xchg
cmc
pop
rclb
mov
xor
mov
or
push
js
push
and
test
aad
scas
mov
out
pop
test
inc
fstpt
push
xor
jl
dec
adc
xchg
cmp
adc
out
pop
mov
lods
cmp
out
sub
push
frstor
sahf
mov
fyl2x
fmull
add
in
or
out
pop
add
add
cltd
push
add
adc
addr16
cmpsl
lods
adc
scas
xor
mov
scas
jae
jno
jmp
ficompl
fisubrs
xor
fisttpll
mov
popf
adc
push
inc
and
mov
fdivl
imul
add
sbb
push
hlt
add
cmpb
or
neg
dec
pop
rorl
and
mov
ret
push
push
int3
cmp
sbbl
rcrb
xorl
int3
lret
add
and
xor
dec
jg
adc
or
addb
cmc
movl
inc
adc
push
jg
gs
push
sub
mov
int
push
out
cmp
in
test
loope
popa
inc
cltd
jo
insb
mov
cmc
add
cld
add
mov
arpl
dec
push
mov
ret
daa
mov
and
mov
adc
mov
jno
push
adc
jno
dec
cmpsl
ror
mov
mov
in
dec
lea
fnstcw
mov
sti
cmpsl
and
test
hlt
fwait
sub
clc
inc
pushl
sub
add
in
pop
in
xlat
lock
enter
jns
shrb
imul
sbb
int
daa
rorb
push
nop
adcb
jo
mov
test
sub
add
cmp
mov
push
sub
or
fdivs
int
pop
popa
mov
adcl
mov
mov
in
jl
jg
test
in
pop
aam
lret
arpl
adc
clc
bound
lods
add
add
jae
cmp
jnp
loope
pop
xor
stc
ficomps
mov
test
stos
xor
in
dec
cmpb
push
incl
int3
or
jl
stc
andb
adc
cld
push
sahf
orl
and
pop
loopne
sub
mov
cmp
mov
test
pop
out
mov
or
push
fisubl
ret
sub
jmp
add
cwtl
ja
std
in
jns
xchg
aaa
and
dec
mov
outsl
xchg
or
aam
xchg
sbbl
inc
pusha
mov
std
inc
inc
adc
addr16
dec
jae
ret
in
scas
aad
and
add
nop
sbb
mov
xor
xchg
repz
std
int
push
lahf
fadd
jl
int
ja
jge
and
mov
out
stc
dec
ret
xchg
lret
ljmp
movsl
pop
lret
cmpsb
mov
cmp
adc
mov
xchg
shll
mov
pause
faddp
scas
xchg
aam
int
add
xchg
jbe
test
jge
mov
out
jecxz
sbb
lahf
and
sub
ja
icebp
mov
pop
cli
into
jnp
into
clc
mov
ss
pop
or
dec
mov
je
mov
sub
xor
pop
shl
jae
insl
fbstp
mov
adc
in
test
rcrl
call
repnz
cld
popa
or
adc
or
rcll
add
push
mov
ljmp
cli
cmp
xor
fnstsw
outsl
fmuls
sbb
cmp
add
cwtl
xchg
sbb
js
jl
jge
jg
cmp
mov
lret
ss
jb
stos
inc
mov
cmp
add
mov
or
push
mov
inc
mov
sti
pop
jecxz
jbe
lds
mov
mov
nop
mov
mov
and
inc
and
cltd
pop
cmpsl
fcoml
cmpsl
jbe
aas
adc
jmp
cmp
sarl
mov
enter
sub
int3
addr16
das
out
stos
jl
sub
xor
xor
adc
incb
pop
test
lods
popa
push
lret
fwait
inc
push
fisubl
test
in
push
pop
cmc
dec
mov
sub
idivb
push
mov
and
jl
sbb
sbb
jecxz
cwtl
lret
das
cmp
xchg
je
pop
push
mov
outsl
mov
bound
or
dec
add
push
mov
cmp
dec
sbb
add
aam
int
scas
jecxz
pusha
hlt
loopne
and
sbb
xor
pop
int3
push
stc
xchg
pop
lret
sbb
and
ss
or
dec
inc
lds
aas
adc
xor
mov
sbb
ljmp
sub
mov
fsts
mov
imul
test
jae
dec
rep
xor
xchg
test
stc
int3
xlat
out
mov
xchg
cmp
test
dec
sbb
sub
movsb
dec
movsl
jns
add
es
nop
mov
shlb
add
cmp
jp
sub
jmp
ret
pop
cs
enter
test
jo
push
dec
sbb
pop
xor
push
fwait
andb
mov
popa
scas
jno
ljmp
loope
bound
sbb
js
adc
insl
add
inc
mov
mov
fadds
pop
mov
xrstors
pop
jnp
mov
pop
stos
cmpsl
enter
movsl
xchg
fldl2e
pop
xchg
incb
xor
cwtl
pop
cmpsb
jns
xchg
jle
mov
xchg
bound
mov
pop
xchg
mov
clc
push
mov
outsb
mov
sbb
loope
xor
mov
mov
ret
mov
data16
xchg
addr16
ja
or
or
push
mov
in
or
and
scas
sti
mov
idiv
adc
rcrl
xor
xchg
aas
sbb
ljmp
insl
stos
arpl
sub
and
mov
aam
out
xor
xor
movsb
mov
into
lds
lock
adc
test
hlt
inc
pop
and
sub
repz
xchg
lods
aam
xchg
lock
cmp
cmpsb
cmpsl
imul
inc
sub
aad
mov
in
aaa
xor
fwait
leave
xchg
int
mov
pop
outsl
push
xlat
push
arpl
rcl
jge
ret
jae
jg
add
movsb
inc
repnz
call
popf
popa
aam
js
or
xor
dec
clc
sbb
ret
pop
jae
push
adc
push
fsubr
pop
mov
divb
adc
cltd
mov
dec
hlt
xor
imul
aas
jmp
ss
pop
in
es
sbb
imul
adc
rcr
clc
mov
add
ret
or
call
add
cwtl
push
mov
push
pop
aad
inc
pop
cmp
ret
popa
loopne
out
inc
mov
add
rorb
sbb
inc
and
mov
ja
cwtl
pop
adc
add
aad
cmp
mov
adc
sbb
fs
jb
movsb
adcb
inc
mov
fstpl
xchg
mov
and
fcoml
test
jmp
scas
ds
mov
jne
pop
cvtps2pi
inc
mov
adc
shlb
dec
xchg
add
scas
iret
sub
mov
outsb
sub
ljmp
cs
mull
xchg
or
pop
lods
push
hlt
pop
mov
add
xchg
ffreep
pop
or
add
dec
adc
dec
nop
mov
cmp
push
ja
rcrb
aad
pop
xchg
add
cmp
pop
mov
jle
and
sub
mov
sahf
pop
ret
loope
lahf
pop
push
mov
jl
test
out
xchg
or
hlt
cli
insl
jg
xor
ss
or
mov
pop
jmp
test
jae
das
cmp
dec
cmp
pop
les
call
or
xchg
add
stos
lods
imul
fisubl
cmp
and
sub
xor
int
stos
cmp
dec
loopne
add
repz
dec
loopne
jbe
cmp
jnp
jbe
js
jmp
mov
or
adc
push
sbbb
push
push
mov
dec
enter
adc
pusha
hlt
xchg
inc
push
sbbl
xor
arpl
xlat
pop
jns
ljmp
jns
or
inc
jge
or
and
cmc
hlt
rorb
ret
lds
lock
pushf
jbe
sbb
fisubrs
enter
rclb
adc
or
test
popf
inc
popf
mov
cmp
inc
lret
and
jo
cmpsb
add
loope
pop
adc
bound
xchg
outsl
jge
dec
mov
out
jecxz
sbb
pusha
sbb
sbb
call
dec
aas
xchg
data16
scas
sbb
outsb
mov
sub
jbe
adc
add
fistpl
jecxz
mov
movl
and
movsl
inc
mov
jae
out
or
inc
lahf
pop
std
addr16
in
daa
mov
and
pop
lds
cmp
pop
jb
hlt
lods
adc
andl
les
pop
lock
sarl
and
xchg
mov
jg
dec
cmc
call
xchg
mov
out
ret
cmc
pushf
or
mov
sub
clc
inc
mov
inc
out
fnsave
stc
mov
stos
in
pop
inc
icebp
mov
sahf
dec
dec
pushf
pusha
mov
insb
orl
movsl
jp
pusha
pop
in
push
fs
nop
pushf
xchg
dec
ret
jne
cld
shlb
sub
sbb
mov
xchg
mov
adc
dec
vaddsubpd
dec
aam
aaa
in
push
xchg
lock
testl
and
icebp
cmp
rorl
dec
andl
les
fdivl
lret
orl
lahf
jo
dec
ljmp
xor
jb
fucomi
andl
mov
adcl
lock
repnz
or
mov
and
or
out
scas
gs
mov
daa
jl
data16
jnp
mov
xor
add
mov
xchg
jp
or
outsb
movsb
push
add
repnz
pop
adc
inc
lock
push
es
scas
adc
adc
mov
aas
es
call
outsb
rcrl
sub
popa
mov
mov
jae
dec
lea
movsl
fwait
cmp
xchg
shlb
or
ret
mov
hlt
push
insb
loopne
outsl
mov
push
pushl
mov
lea
add
inc
dec
fs
rolb
test
adc
push
push
sbb
pop
or
ljmp
adc
mov
add
mov
xchg
or
jecxz
mov
mov
enter
mov
scas
imul
clc
push
cmp
mov
sub
xchg
cmp
jmp
inc
addr16
mov
adc
gs
xlat
inc
pop
cmpsb
mov
fcmovbe
subb
pop
adc
movsb
repz
xchg
add
mov
dec
fs
int3
out
mov
insb
in
hlt
jecxz
pusha
push
push
jmp
inc
push
pop
outsb
out
test
xor
jle
jae
scas
cmp
push
push
popf
xrelease
dec
out
cmpsl
jle
popf
cmp
jne
je
int3
mov
call
clc
and
push
xchg
sub
mov
aad
lods
xlat
push
test
xor
pop
mov
dec
lea
mov
push
insl
dec
jg
iret
jmp
dec
adc
jmp
gs
ss
jl
into
sub
mov
es
xor
xlat
mov
fmul
pop
xor
inc
mov
mov
add
cmp
jp
aam
jns
lods
sbb
pop
pop
dec
or
ss
divl
mov
fidivl
xchg
jecxz
push
and
inc
mov
jae
sbb
cmpsb
fbld
and
lods
cli
push
jbe
xor
imul
test
rol
ja
adc
cs
mov
add
paddd
xor
stc
iret
out
jl
jno
stc
sub
push
cmc
xor
fucomp
rorl
and
cmpsb
mov
cmp
popf
xchg
dec
fs
cmp
adc
movsb
mov
mov
mov
divl
lret
lcall
adc
xorl
movsb
xchg
stos
in
cmp
outsb
xchg
fldcw
pusha
test
fwait
jmp
mov
add
add
sbb
adc
jae
jl
xchg
scas
jb
fnstcw
mov
adc
cltd
clc
xchg
sbb
lods
bound
test
or
push
lock
push
aad
aas
les
push
fcoml
push
or
clc
adc
cmp
push
sub
insb
ret
movsl
popa
aam
loope
jbe
insl
insb
fs
jnp
cld
cmc
push
mov
mov
repz
dec
push
int
and
pop
dec
cs
fiaddl
jecxz
push
test
out
jno
add
sahf
jg
and
sti
popl
jmp
mov
daa
pop
xor
cs
stos
out
sti
sarl
outsl
insb
test
in
movsb
sbb
add
or
hlt
addr16
sarb
sbb
or
xor
push
xor
mov
inc
pushf
mov
xlat
sti
sub
add
push
jb
aam
and
or
add
call
push
popf
test
adc
xlat
add
xor
and
mov
ret
sub
dec
mov
push
popf
pop
jl
push
in
daa
mov
sbb
or
in
xor
sub
ja
out
and
push
or
popf
cmp
into
push
pop
lret
repnz
lock
shlb
sbbl
dec
dec
vandnps
adc
fwait
jmp
fucomp
jne
push
pop
stos
clc
js
movsl
mov
and
dec
jge
push
rcll
fs
lret
gs
lret
les
lret
popa
andnps
mov
ffreep
mov
cli
repz
jecxz
mov
insb
cmp
lods
aad
inc
push
jno
jg
imul
mov
insb
jbe
xchg
test
outsl
xchg
add
sbb
cmc
scas
ret
mov
sahf
movsl
clc
cmp
and
adc
adc
arpl
or
cmp
movsb
mov
push
fcmovu
lock
cmp
xchg
mov
pop
xchg
lods
cltd
fcmovnb
cmpsl
xor
hlt
hlt
stos
inc
sub
loope
or
je
inc
add
cmp
scas
fstpl
pop
in
ret
adc
arpl
imul
popf
pusha
outsl
enter
sbb
lods
push
ds
test
subb
insl
in
push
push
mov
mov
jp
test
mov
or
pusha
ret
fisttpll
mul
jle
sbb
pop
enter
mov
pusha
jb
dec
dec
aad
dec
shl
pop
dec
in
dec
push
dec
xlat
mov
add
rcr
addr16
dec
fwait
mov
scas
mov
stc
and
ds
cmp
sbb
jo
jecxz
pop
or
mov
test
aad
lock
xchg
das
sbb
out
pop
sahf
clc
mov
push
arpl
adc
mov
pop
loope
cltd
or
xor
fcoml
aas
fwait
add
orl
sub
insl
into
adc
pop
or
jno
xchg
xor
ja
pop
pushf
push
pop
pop
stos
push
jns
xchg
sub
mov
dec
add
repz
test
fs
mov
test
mov
pop
rorl
lea
aaa
dec
cld
mov
mov
out
mov
push
data16
lcall
cmp
pop
outsl
int3
or
or
in
xchg
shrb
fld
mov
je
dec
test
mov
push
mov
movsl
cli
add
add
xchg
inc
mov
push
mov
inc
pop
mov
jo
lcall
pop
jmp
fcomps
test
push
lret
xchg
adc
jbe
movaps
inc
hlt
pop
adc
mov
test
sub
jmp
sub
and
addb
jl
inc
mov
sti
nop
rcll
pop
jo
in
cld
fs
pop
xchg
sub
loop
test
shl
jmp
out
sub
sub
hlt
cltd
lock
iret
or
fiadds
sub
cmc
jo
icebp
jo
fimuls
pop
in
lcall
std
jle
add
adc
inc
adc
and
adc
data16
sub
pop
cmp
insl
clc
xchg
cltd
outsb
add
aam
jae
mov
push
xor
inc
ljmp
lock
std
loop
jg
push
add
lock
sub
cli
sub
mov
cmc
jns
xchg
cmp
adc
sbb
dec
pop
mov
cs
push
decb
test
mov
mov
subl
imul
mov
jmp
dec
mov
mov
jl
lea
jae
push
aaa
in
lods
aad
mov
cmp
mov
xchg
loop
ret
cmpsb
mov
mov
add
imul
pop
adc
mov
xchg
pop
add
cltd
mov
push
ret
adc
in
in
mov
xor
test
mov
dec
xchg
dec
mov
mov
testl
mov
adc
xchg
dec
mov
dec
jg
add
test
outsb
aaa
idiv
xchg
mov
sub
or
mov
sbbb
mov
lcall
cmpsl
xchg
in
mov
mov
lret
jle
pop
fldcw
inc
mov
push
in
rcrl
int
sbb
or
pop
xor
mov
fsubl
ja
xchg
orb
sub
and
imul
outsl
or
mov
das
test
inc
push
lods
push
jbe
adc
sub
sub
dec
mov
dec
fadds
lock
mov
arpl
jp
aas
rcl
cltd
sub
adc
push
lahf
push
adc
arpl
xor
fwait
sahf
test
lods
divl
jb
mov
jnp
and
mov
add
outsl
jp
inc
sbb
jp
in
pushf
push
pop
inc
push
sti
xchg
push
xchg
mov
inc
mov
call
cmp
lds
mov
dec
mov
xchg
arpl
test
fnsave
fstps
pop
insl
scas
xlat
iret
mov
add
xor
sub
xor
loopne
cwtl
int
movd
mov
or
not
pop
push
sbb
xchg
into
mov
and
cmpsl
pop
shrl
aam
push
push
loop
or
outsl
loop
dec
xchg
jbe
test
bound
outsl
mov
dec
dec
nop
pusha
pop
subl
outsl
dec
test
in
or
into
jmp
fsubr
mov
dec
cmp
pop
in
sub
negl
lret
push
fwait
xchg
and
lret
shrb
mov
fistpl
call
add
mov
das
mov
insb
pushf
jecxz
imul
int3
mov
or
and
sbbb
es
hlt
icebp
xor
popf
dec
adc
jecxz
ja
or
sbb
int
sbb
inc
not
pop
fbld
aaa
je
jae
data16
jnp
inc
scas
ja
cli
pop
or
xchg
jge
xor
les
mov
ret
jle
jbe
add
push
or
fisttpl
jmp
cli
pop
ret
lods
jb
popf
cmp
pop
adc
push
pop
cmp
call
sti
je
add
sar
shl
fwait
or
sbb
shlb
adc
mov
push
not
stos
fs
mov
xchg
in
push
mov
push
inc
in
fadds
fsubl
imull
mov
dec
sub
sahf
pop
sahf
dec
mulb
dec
cmpsl
add
pop
inc
jmp
movsl
nop
dec
xchg
cmc
mov
pushw
enter
arpl
or
loop
dec
imul
fiadds
cmp
xor
rorl
stc
shrl
in
shll
subl
push
xlat
jp
pop
jnp
jp
pushf
xor
sbb
dec
add
sub
idivl
addl
pop
insb
call
mov
pop
mov
jp
mov
cmpb
loope
ljmp
test
je
add
sbbl
shll
cwtl
test
xor
jb
inc
push
jg
mov
js
hlt
cmpsl
sti
in
jmp
cmp
mov
push
push
mov
test
fnstenv
lcall
push
jecxz
scas
sbb
lcall
mov
add
es
mov
pusha
xor
mov
lret
dec
enter
mov
loope
aad
enter
mov
outsb
adc
cmpl
cld
push
xchg
test
fstpt
inc
inc
jae
or
shlb
jle
mov
jno
dec
notl
jmp
cmpsl
xor
inc
lret
sbb
dec
xor
aas
xchg
and
push
xchg
mov
popf
and
add
or
out
mov
or
sub
enter
roll
in
shr
ret
into
imulb
jl
push
push
ret
sub
fidivrl
push
push
ficoms
scas
cltd
flds
sub
fistpl
clc
jle
add
int3
mov
leave
pop
mov
pop
decb
out
repz
jno
pop
jno
fistps
xchg
inc
sbb
push
jp
or
and
ja
shl
mov
clc
sbb
mov
jl
mov
clc
outsl
out
mov
and
add
mov
sub
push
xchg
or
xlat
jge
dec
jl
in
xchg
outsl
ja
es
pusha
inc
pusha
and
mov
aam
jl
mov
mov
cld
ret
jge
ljmp
mov
ret
mov
pop
and
mov
and
xchg
insb
sbb
call
adc
jbe
mov
xchg
inc
ljmp
mov
pusha
aad
mov
mull
mov
xor
push
mov
cwtl
pop
adc
mov
jo
call
pop
lea
inc
push
rclb
lret
add
daa
xchg
pop
lcall
cmp
mov
ja
mov
mov
lcall
popl
jg
add
rcrb
pop
in
jp
sub
fstpt
out
aas
push
push
dec
sub
outsb
test
fwait
scas
push
imul
push
sahf
mov
fwait
std
subb
enter
arpl
xlat
add
pop
or
push
cltd
outsl
adc
pop
je
js
cmpsl
pop
loope
jmp
movsl
add
mov
iret
insb
and
inc
loope
sub
sbb
mov
xor
ja
dec
cmp
mov
mov
outsb
xchg
push
add
mov
jmp
mov
jp
lret
fcmove
adc
jo
cld
sahf
loopne
inc
fistpl
or
sahf
out
push
xchg
mul
and
loope
dec
ss
pop
pop
fldcw
sbb
pop
cmp
int3
outsb
inc
xchg
dec
fiaddl
rcll
mov
test
pop
movsb
cli
xor
mov
sbb
cmp
scas
or
mov
push
lahf
daa
pop
rcrb
repz
fs
test
jmp
std
cmp
loopne
into
test
fsubl
andl
mov
dec
stos
movsl
lea
mov
mov
sti
push
or
iret
stc
sub
cld
out
out
scas
outsl
stos
xchg
andl
xchg
xor
into
enter
pop
roll
mov
sub
cmp
sub
loop
mov
adc
lcall
mov
int3
xchg
je
adc
mov
cmp
and
dec
mov
bound
jmp
push
scas
jg
out
xchg
jl
mov
arpl
ds
call
jnp
fcmovb
add
pop
mov
shll
cmp
add
pop
out
inc
jb
jmp
testb
dec
cmpb
or
lock
and
push
xchg
mov
rcl
inc
mov
arpl
mov
nopl
jmp
movsl
inc
imul
pop
xchg
cmpsb
fwait
imul
sub
xor
cvtps2pd
cmp
es
adc
mov
in
cmp
js
test
rolb
loope
cmp
adcl
or
sbb
inc
rorb
pop
and
or
pop
mov
bswap
mov
mov
inc
pop
lds
jmp
scas
and
push
fimuls
push
in
or
add
into
hlt
pop
inc
inc
mov
sub
enter
jg
daa
pop
popa
adc
sti
into
xor
ror
mov
pop
dec
adc
test
add
bnd
push
imul
shlb
add
xor
mov
jae
in
cmp
adc
xor
fstp
mov
jmp
jb
sbb
push
push
out
sbb
ret
jb
cmp
mov
fabs
or
push
bound
adc
cs
loopne
jno
push
dec
ja
inc
push
outsb
andb
inc
push
jae
dec
or
rolb
dec
dec
and
push
inc
dec
mov
or
shll
ja
lds
popf
stos
cmp
clc
xchg
mov
stc
inc
and
imul
dec
xlat
imul
subl
sbb
or
pop
mov
ret
fadds
mov
mov
sbb
push
lret
push
rol
icebp
aam
mov
aaa
lods
or
leave
mov
pop
loop
loopne
das
adc
dec
mov
mov
xchg
jne
sarb
pop
and
cmp
cmp
minps
cld
and
mov
addr16
sub
insb
jno
inc
sbb
das
iret
mov
in
push
and
out
fmuls
mov
adc
ret
fsubr
jo
loope
test
cli
cmp
insb
outsb
mov
mov
push
mov
inc
int3
lea
mov
dec
pushl
fisubs
out
mov
stos
push
sbb
xlat
fstl
and
out
mov
stc
jmp
and
push
stc
stc
sbb
addr16
fwait
mov
mov
sbb
push
push
fstps
hlt
lret
mov
cmp
adc
jp
add
imul
pushf
clc
repz
scas
mov
push
mov
pop
dec
push
and
pop
adc
ss
xor
mov
adc
sbb
inc
loop
adc
push
out
addb
dec
arpl
stc
mov
pushf
lret
js
mov
xlat
sbb
push
mov
popf
aad
bound
cmp
into
mov
ljmp
mov
loopne
jno
mov
fnstcw
add
loopne
outsb
fcoml
sub
inc
cli
inc
stos
cmp
push
inc
sub
xchg
icebp
sbb
aas
ret
pop
lds
mul
fs
aad
sub
leave
aad
popf
xchg
fmuls
add
insl
in
andb
mov
xchg
mov
push
jmp
out
movsl
gs
mov
push
cmpsb
aas
cmp
outsl
add
std
sahf
push
push
out
mov
int3
mov
fwait
je
and
xor
repnz
lods
push
pop
pop
clc
out
hlt
shl
imulb
or
and
xchg
gs
pop
jmp
out
sub
add
mov
xor
jo
nop
ret
jne
ret
inc
push
stos
lcall
loop
add
stos
dec
mov
push
adcl
icebp
bound
inc
jle
js
pusha
fbld
sbb
test
insl
cwtl
inc
push
mov
mov
lret
cmp
aas
sbb
pusha
loop
cmp
or
jb
dec
lods
add
out
out
dec
mov
dec
and
xor
adc
dec
and
shrl
arpl
arpl
dec
and
adc
lds
dec
push
or
repnz
cmp
jg
xor
mov
push
outsb
pop
and
cmp
pop
cmp
mov
scas
adc
cli
les
lret
movsb
aaa
pop
addr16
mov
jae
inc
jmp
cmp
std
or
jge
add
mov
mov
mov
jae
jae
cwtl
push
fucomp
repz
nop
push
loope
sbb
mov
das
cmp
push
pop
dec
repz
fwait
xor
xchg
add
pop
cmp
inc
sbb
or
pop
xorb
gs
jb
adc
xchg
repnz
sbb
cmpsl
push
aam
fnstcw
lret
cmp
add
pop
ret
or
popf
or
jmp
into
add
xchg
lds
call
ss
iret
xorl
xor
mov
test
mov
stos
cvtdq2ps
outsl
add
imul
xor
fnstsw
and
xor
pop
mov
mov
in
and
xor
jge
idivb
imul
fcom
adc
test
push
mov
inc
pusha
inc
rcr
add
push
fbstp
es
sub
add
lds
outsl
popl
dec
mov
jb
pop
xor
xchg
xor
xchg
xor
cmp
fstpt
int
pop
mov
push
insb
addr16
stc
inc
jmp
rcrb
gs
cltd
pop
dec
fs
sbb
adc
mov
fstl
ljmp
lret
pop
cmp
add
inc
rcr
int
cmp
lds
scas
mov
in
cwtl
in
mov
pop
lods
lods
sahf
mov
push
rcl
pop
xchg
and
setb
or
mov
lret
mov
dec
push
add
inc
ja
sub
mov
test
dec
add
outsl
loope
push
mulb
les
push
sub
aam
xor
jb
out
cmp
jb
int3
mov
or
in
aaa
or
fbstp
inc
fs
fxam
jecxz
fbld
lock
adc
out
popf
out
mov
inc
sbb
pushf
ret
pop
sub
test
jnp
lcall
lods
and
fcoms
scas
push
or
dec
ret
xorl
std
inc
sarl
sbbl
lods
cwtl
add
cs
and
add
inc
or
loopne
cmp
cwtl
cmp
aam
test
adc
dec
sbb
adc
xor
push
popf
fstpl
int
mov
push
inc
add
mov
or
push
mov
shll
fcmovnu
lods
lahf
ret
shl
xchg
adc
or
lret
cld
push
stc
hlt
xor
fbstp
andl
and
push
fldenv
inc
push
pop
repz
pop
in
roll
ja
xor
add
jmp
cs
push
mov
mov
cs
repz
lods
fwait
test
mov
jmp
lods
adc
or
push
xor
sub
fildl
adc
jg
imul
mov
testb
dec
leave
mov
imul
jmp
mov
push
push
mov
sbb
cld
push
mov
fistps
cmpsb
push
jmp
or
or
aam
pop
imul
xor
stos
and
outsl
das
xlat
or
stos
fsts
cmpsl
fsts
push
cmpsl
push
mov
mov
mov
inc
repz
xor
rcrl
cmp
mov
fs
fs
and
pop
cmp
xor
adc
roll
pop
stc
lret
push
sub
pop
mov
inc
outsb
jl
stos
mov
push
sbb
aam
jg
sub
fsubl
insl
pop
mov
mov
xchg
subb
jp
testb
into
pop
xor
int3
test
test
and
js
sub
mov
sbb
lahf
or
and
es
sarb
push
cbtw
cmp
loope
push
cmpsb
mov
jge
loopne
or
lods
aas
lock
subl
adc
mov
mov
add
pop
int3
out
mov
gs
pop
ret
jbe
pop
int
adc
push
adc
sub
adc
xchg
cmpsl
je
es
sbb
insb
sbb
cmp
fwait
leave
aaa
jnp
stos
mov
jl
and
or
push
mov
jb
scas
clc
decb
inc
stos
sti
ljmp
fsts
addb
add
imull
push
jp
push
cmpsl
jge
add
xchg
sub
xchg
jb
xchg
and
lcall
in
push
jbe
test
sub
cli
or
pop
inc
sub
dec
stc
jae
push
ror
inc
mov
xor
push
insl
dec
jne
lods
mov
int
inc
sub
out
jae
sub
fisttpll
pop
push
call
pop
pop
in
push
pop
mov
daa
jbe
dec
inc
or
inc
cli
lcall
sbb
and
inc
jp
movsb
fldl
shll
mov
int
dec
fldenv
ljmp
out
push
sub
xchg
adcb
push
shll
sub
or
or
paddsb
add
shll
stos
mov
xchg
mov
outsl
jmp
popa
dec
jp
into
push
mov
jno
jecxz
insl
mov
dec
and
jne
ljmp
mov
pop
cwtl
or
cli
cs
pusha
lds
rcrb
test
sbb
xor
decb
mov
in
lock
dec
xor
repnz
scas
addl
hlt
insl
xor
test
gs
sub
cli
pop
add
xchg
cmp
xor
or
popf
or
ret
push
subl
pusha
adcb
ficoml
push
test
call
ret
movb
mov
in
adc
adc
cmpsl
push
leave
inc
mov
ss
add
mov
inc
push
push
or
xchg
pusha
inc
cwtl
mov
and
aaa
push
sbb
jbe
dec
xor
lods
inc
push
pop
jmp
repz
xor
out
mov
shll
and
jo
pop
cwtl
insb
or
das
lahf
stc
and
adc
and
lret
mov
cmp
sub
jns
hlt
sarb
add
cli
inc
stc
sub
push
std
adc
mov
loop
xchg
sub
inc
ds
popa
dec
aam
mov
inc
or
sbb
adc
jbe
mov
insb
push
xor
idivb
scas
xchg
adc
cmpsb
movsl
push
mov
pusha
mov
mov
aas
or
jmp
in
dec
inc
pop
sahf
fldl
cmp
cli
pop
cwtl
cld
dec
xlat
paddusb
pop
ret
or
sahf
xor
sahf
sbb
mov
add
and
push
and
in
xorl
push
dec
pop
xor
ja
ficoms
fs
iret
push
ds
mov
mov
cli
jne
and
push
add
rcll
lock
cltd
xchg
jecxz
aad
negl
das
dec
fsubrl
daa
cmp
in
test
or
push
fildl
jns
mov
pop
xlat
jne
insl
daa
into
test
mov
inc
mov
push
push
stos
cs
xchg
inc
and
xor
lea
pop
mull
sbb
call
jbe
dec
cltd
loope
cmp
pop
push
fs
mov
ds
dec
icebp
xchg
callw
add
scas
rcll
imul
ss
mov
sub
jge
shrb
or
data16
leave
mov
loop
nop
fcmovb
mov
ret
fsubrl
xchg
mov
mov
mov
movsb
mov
cli
pop
popa
popa
dec
add
lods
aad
outsl
and
xlat
and
push
jnp
pop
jle
movsb
xchg
lahf
or
inc
jb
push
mov
mov
dec
mov
fwait
scas
dec
mov
sbb
mov
sbb
and
push
stos
andnps
and
cltd
into
iret
inc
scas
into
jge
js
jb
sbb
xchg
into
in
mov
out
or
jne
fs
sbb
mov
jno
push
mov
xchg
and
mov
ret
ja
loop
pop
call
sbb
mov
mov
bound
mov
dec
sub
sbbl
or
pop
sbb
xor
cmpsb
ficomps
mov
adc
setno
stos
or
mov
insb
pop
sub
mov
pop
sti
push
inc
arpl
pop
int
xchg
xchg
inc
loop
test
add
fcompl
stc
xchg
ja
sbbl
pop
pusha
orb
mov
jl
repz
jp
xchg
xlat
rolb
imul
xlat
lret
inc
sbb
ljmp
push
or
gs
cld
mov
jne
ljmp
pop
scas
ds
or
sahf
lods
mov
xchg
add
sbb
stos
aaa
pop
loope
pop
lods
leave
mov
test
cmp
mov
sbb
out
jle
push
push
mov
test
dec
jbe
insw
push
cmp
into
adc
sbb
ss
pop
cwtl
xor
xor
enter
jge
sarl
xlat
test
insl
push
push
repz
pop
insl
jns
add
cs
stc
mov
pop
dec
rorb
arpl
lcall
das
outsb
loope
imul
push
jle
fildll
adc
inc
sahf
sbb
mov
test
xlat
jb
mov
shl
cmp
outsl
adc
loopne
orl
loop
ss
push
pop
pusha
sbb
push
sbb
pop
jne
cltd
sti
addr16
sub
add
mov
int
es
push
orb
push
aas
roll
mov
aad
dec
and
push
iret
popf
arpl
jno
xor
jbe
push
xor
loop
pop
xor
and
jge
xorb
mov
mov
rorb
sbb
pop
cmpsb
or
pop
insl
mov
idivl
or
test
mov
ljmp
push
xchg
pop
scas
jg
in
mov
ja
pop
ja
outsb
sub
lret
cmc
loop
pop
sbbb
in
test
inc
xor
xchg
mov
sub
jnp
or
ja
stos
mov
pop
fisubrl
hlt
and
addl
arpl
push
lret
mov
xchg
inc
mov
lahf
insb
mov
jle
gs
cmp
push
es
cmpsb
adc
cmp
clc
mov
lods
stos
lret
cmp
imul
add
inc
mov
push
fcoml
sub
push
not
mov
or
or
xor
sti
inc
mov
data16
jle
in
negb
fmulp
xchg
adc
xor
clc
enter
inc
shl
xchg
jg
bound
add
inc
push
adc
cwtl
scas
push
add
mov
sbb
aas
mov
popa
mov
pop
lahf
addr16
dec
jnp
pop
cmp
mov
shll
ljmp
test
aas
add
adc
sahf
jp
movq
pop
sub
push
xchg
mov
out
repz
fistpll
pop
dec
cld
jle
sbb
bound
dec
and
pop
addb
push
mov
in
mov
mov
pop
pop
dec
jg
les
test
push
mov
push
ss
pop
enter
and
orb
divps
xchg
out
out
adc
cmpsl
lea
sahf
xor
fisubrs
or
jmp
test
push
push
lea
addr16
jl
pop
inc
popa
fisttpll
push
dec
inc
add
loope
loop
mov
insb
mov
xchg
xchg
inc
cld
pop
push
fsubrl
or
jbe
int
ret
sub
fists
push
out
ljmp
orb
das
in
or
push
add
or
inc
lahf
mov
lds
xchg
adc
mov
cmp
xchg
dec
cs
lods
iret
push
jmp
xlat
mov
jne
jno
jne
hlt
cld
inc
out
push
push
pop
sbb
xchg
xor
push
xchg
mov
cltd
stos
inc
lods
adc
inc
cmp
fnsave
jb
inc
jns
sbb
inc
sub
xor
in
data16
cltd
jg
aas
mov
leave
call
xchg
pop
fidivrs
lods
jne
fwait
js
jecxz
testb
push
fs
inc
aaa
push
xchg
add
inc
std
inc
addr16
pop
shlb
idivl
mov
add
lods
pop
and
ret
adc
orb
mov
push
insb
lret
in
cltd
lahf
mov
out
arpl
stos
cltd
ret
insb
or
inc
pop
pusha
call
ret
push
das
mov
int
and
in
or
dec
push
ss
xchg
fs
popa
sub
pop
cltd
cwtl
push
and
call
jae
cmp
sub
inc
mov
inc
xchg
out
sbb
ds
mov
leave
pop
jg
divl
idivl
jnp
adc
dec
scas
sub
hlt
lods
mov
stc
out
test
mov
xor
mov
add
pop
xlat
int
rclb
pop
movsb
sbb
daa
push
out
sub
jg
cmpsl
xor
jecxz
imul
add
ficoms
das
xchg
jle
xchg
out
hlt
ret
imul
adc
mov
fisubrs
fdivrs
add
xor
sbb
das
js
and
inc
addr16
jne
cmpsl
pop
cmc
add
arpl
pop
lds
in
pop
imul
rorb
inc
cmpsl
xchg
jle
mov
rcl
pusha
test
add
sbb
xchg
xchg
iret
pusha
test
jae
mov
mov
xchg
sbb
shrb
rorl
inc
jns
add
inc
call
inc
fistl
negl
xchg
and
xchg
jmp
in
and
add
fldl
dec
push
sbb
hlt
enter
pop
push
inc
das
pop
jmp
pop
test
mov
mov
pop
dec
arpl
es
loop
enter
pop
lret
push
daa
jae
dec
mov
mov
testl
xchg
mov
in
cltd
ljmp
mov
push
pop
es
xor
cli
movsb
xchg
sub
dec
push
xchg
or
pusha
sub
shl
ret
pop
cld
in
sbb
pop
add
pusha
repnz
int3
push
or
inc
or
int3
popf
dec
ficomps
mov
sub
mov
mov
imul
add
or
ljmp
icebp
xchg
push
mov
loopne
xor
jb
push
and
jb
leave
loop
mov
shrb
sarb
dec
bound
inc
adc
push
fdivl
sahf
testw
not
sbb
enter
mov
mov
sbb
pusha
or
shrl
icebp
in
or
test
notl
or
movsb
pop
ja
cmc
enter
sti
out
add
test
jns
cmpsb
or
mov
pop
mov
aad
xchg
adc
cmp
ficompl
sub
xchg
lahf
popa
push
xchg
mov
shrl
add
xchg
inc
mov
jmp
xchg
jl
repnz
adc
scas
xor
fldl
test
jecxz
pop
pop
and
xchg
ret
fwait
sub
icebp
int
cld
enter
mov
xchg
mov
out
shlb
fadds
mov
adc
sub
mov
pop
fidivl
fidivrl
sahf
sahf
mov
jge
cmp
jae
mov
lcall
into
test
scas
lods
mov
rcl
adc
int
and
jno
cmpsl
jge
popf
dec
insl
sbbl
xor
dec
push
pop
xorb
push
lret
mov
jp
push
cwtl
js
mov
mov
lea
adc
mov
mov
jno
clc
test
test
xchg
jae
pop
ja
mov
push
pop
sub
cmp
pop
jb
movsb
mov
nop
imul
lock
sbb
xchg
mov
mov
das
into
pop
mov
call
hlt
push
mov
or
pop
push
and
cwtl
lock
sbb
icebp
rorl
and
je
ret
nop
ljmp
mov
jnp
stos
cwtl
sbb
mov
xchg
shl
push
sbb
out
cwtl
pop
adc
ss
pop
cwtl
cs
push
and
mov
movsl
out
jae
xor
orb
mov
enter
lcall
pop
mov
cltd
cmp
pushf
fwait
aam
pop
xor
sti
dec
std
cmpsb
cwtl
popa
adc
push
dec
int3
push
xchg
inc
cmp
sbb
or
sbb
add
cmp
pop
sti
mov
scas
nop
push
data16
aas
add
fcoms
rclb
shll
add
outsl
cwtl
ja
xor
sbb
push
js
ja
sub
sub
mov
jno
pop
int
stos
cli
std
adc
xor
in
mov
mov
xchg
xchg
mov
push
cld
sub
icebp
jmp
mov
in
mov
adc
test
add
cltd
push
sbb
in
inc
bound
pop
imul
mov
mov
das
xchg
outsb
pop
jge
scas
stc
lahf
dec
add
pushf
xchg
jbe
jne
pop
jecxz
dec
sub
int3
jne
and
jmp
push
imulb
xor
xor
rcrb
cwtl
dec
aaa
push
inc
movsl
add
mov
mov
cli
fisttps
stc
xchg
or
stc
dec
push
out
add
add
les
andb
lods
jecxz
lcall
inc
cmp
nop
adc
inc
lea
mov
jo
scas
mov
dec
mov
cmp
push
lock
fisubrs
or
call
ljmp
jp
arpl
xchg
mov
aam
and
inc
es
rolb
ja
loop
mov
subb
mov
pop
fsts
lods
adc
push
jnp
pop
cmp
sarl
movsb
xor
add
add
std
arpl
sbb
testl
imul
nop
inc
mov
outsl
repnz
out
shll
loope
mov
or
in
lret
xor
jecxz
adc
int
stc
in
divl
xorl
xor
pop
mov
dec
cmp
add
jecxz
add
mov
cli
fbstp
push
xor
and
movsb
add
aaa
scas
mov
lret
sete
push
dec
pop
cli
fnstcw
push
jb
pop
lods
call
xor
cmp
nop
nop
ret
mov
mov
jb
into
push
mov
mov
inc
adcb
test
fcomip
push
mov
inc
js
in
mov
cmp
mov
adc
aad
cmp
inc
xchg
out
sbb
pop
mov
jmp
sbb
push
jle
inc
inc
incb
dec
mulb
hlt
je
cmp
cld
jge
fnsave
add
cmp
pusha
dec
or
sarl
push
add
xor
xchg
inc
out
push
cmpsb
push
inc
jge
arpl
test
jl
mov
fbstp
and
rclb
push
dec
fsubl
adc
xor
mov
push
addr16
push
add
js
xchg
sub
das
add
add
pop
pop
scas
aaa
mov
scas
orl
fnstsw
ljmp
dec
in
iret
mov
xchg
jns
js
popf
lahf
cmpl
fisubrl
adc
cltd
push
lahf
popf
xor
test
jbe,pn
xchg
push
lret
cmp
pop
push
jmp
mov
cmp
imul
leave
mov
imul
adc
push
outsb
fdivl
pushf
xor
and
sbb
or
xchg
xchg
pop
xchg
shlb
incl
or
rcl
inc
jo
ret
pop
ror
mov
out
cld
lods
inc
push
rolb
out
sbb
cmp
dec
andb
xchg
add
testl
daa
push
and
cmp
cld
data16
sbb
push
test
cmp
rcl
cs
dec
pop
daa
and
pusha
fcomps
add
pop
and
dec
xor
jnp
int
repz
cmc
push
mov
pop
int
sbb
int3
sti
jmp
push
mov
sbb
std
cmpsb
fxch
mov
jae
cli
xchg
cmpsb
icebp
pushf
decb
pop
mov
sub
or
mov
mov
popa
add
loop
add
xlat
mov
inc
add
sbb
push
sbb
push
in
mov
or
imul
mov
lods
daa
loop
aas
dec
cwtl
mov
in
lret
cmp
jno
fidivrl
pop
mov
jb
lods
inc
add
daa
insb
mov
inc
pop
call
cmp
lds
pop
and
cmp
and
sarb
lods
das
iret
mov
pop
xchg
addb
pushf
into
scas
pop
gs
fbld
pop
or
dec
rorb
imul
jge
insb
or
popf
xchg
cmc
xchg
ss
dec
outsl
xchg
fisubrl
in
dec
inc
inc
sbb
cmpsl
lret
push
flds
lods
or
add
rcll
aam
or
sbb
inc
jle
jb
jo
iret
inc
mov
es
dec
notb
ficoml
pop
push
or
rcrb
pop
icebp
and
add
jae
cli
push
push
xchg
mov
popf
xchg
sbb
test
sahf
adc
push
inc
es
xchg
add
pop
xchg
ljmp
xor
sub
sub
sbb
sub
jmp
sahf
aam
jb
dec
fucomi
add
orl
jae
dec
call
daa
or
cmp
or
jo
cmp
ds
rcl
es
push
dec
cs
pop
insb
test
pop
inc
jle
dec
out
jle
adc
inc
push
test
rcrb
enter
xor
and
jae
sub
mov
jbe
decl
loopne
mov
mov
pop
imul
lret
jp
cmpsb
jo,pn
mull
xor
sbb
sti
aam
xor
lahf
cmpsb
test
mov
inc
push
or
popa
cmpsl
faddp
jb
fs
into
push
add
cmpsl
or
sub
adc
sub
mov
ljmp
xor
pop
test
iret
lahf
shrb
je
insl
mov
push
stos
push
dec
fwait
sub
and
xor
orb
add
aam
enterw
cmp
jl
pop
inc
pop
loopne
dec
iret
push
and
iret
test
out
and
loopne
adc
fs
es
out
lahf
cltd
or
mov
dec
mov
push
ret
lahf
stos
shll
jle
cld
lahf
sar
daa
and
xchg
movsl
sub
jecxz
cmp
adc
inc
jbe
dec
outsb
std
pusha
movsb
jl
push
scas
inc
stc
xor
stos
imul
mov
rcll
es
adc
insb
mov
test
bswap
pop
dec
dec
pushf
imulb
push
push
insb
mov
cwtl
push
xor
dec
and
fmuls
scas
mov
xchg
decl
out
inc
inc
mov
xor
sahf
adc
out
hlt
xrelease
inc
mov
stc
xchg
sub
fninit
lahf
pop
lret
adc
pop
lret
push
out
pop
iret
lock
test
xchg
cmp
inc
ss
or
jns
mov
mov
loop
clc
or
frstor
jbe
push
outsb
xchg
dec
mov
push
stos
hlt
es
dec
std
xorl
into
mov
jl
xchg
lods
cs
popa
insl
sti
adc
stos
dec
test
inc
lods
pop
loopne
and
mov
jae
cwtl
into
fiaddl
push
mov
orl
out
pop
push
ljmp
mov
mov
jnp
scas
xor
sarl
popf
js
les
adc
adc
es
pop
pop
inc
bound
movsl
fcoml
xchg
push
stc
xor
inc
or
inc
sti
test
pop
lods
into
shr
xchg
and
clc
lock
adc
movsb
sahf
sub
add
sbb
push
jl
mov
outsl
pop
lret
mov
unpcklps
outsl
xor
shr
ror
dec
in
sub
jl
subl
enter
cld
add
fisubrl
push
push
psubusb
push
mov
push
int
enter
sbb
xchg
rol
cmpsb
lods
jo
mov
add
jno
int3
inc
movl
int
sub
jge
jp
mov
push
outsb
jbe
ss
xchg
jae
and
int3
in
jmp
dec
add
aam
aas
das
sti
cmc
fwait
ss
roll
lods
or
jae
loop
cwtl
and
mov
mov
movaps
push
in
popf
imul
loope
push
hlt
sub
outsb
sub
aad
dec
ss
lcall
jecxz
notb
cmc
inc
xchg
rcll
popa
js
xchg
xchg
pushf
orl
movsb
and
pushw
xchg
repz
or
pusha
cmp
dec
imul
inc
roll
xlat
in
or
jg
bound
or
pop
and
or
stc
mov
test
test
mov
pusha
xor
jecxz
mov
push
cld
cli
shll
mov
xor
or
adc
dec
and
iret
dec
cmp
out
jecxz
jp
fsubs
sub
scas
cmp
push
xor
shll
push
sub
push
mov
push
aaa
rclb
jne
das
ds
add
sub
insb
out
mov
fwait
sub
cmp
sti
addl
push
into
sub
cmpsb
enter
add
ret
jne
aad
icebp
fdivr
out
pop
rorb
sarb
mov
push
mov
std
lcall
scas
sbb
sbb
fcomps
mov
pop
or
mov
jge
sub
lods
xchg
push
sbb
dec
xor
popa
cli
inc
mov
jb
pop
addl
shlb
aad
fs
xchg
sub
pop
popa
push
sti
shrl
movsl
bound
stos
aaa
inc
sbb
sub
repnz
mov
cmp
mov
sbb
xchg
push
dec
cmp
popf
lret
jmp
cmc
xor
dec
cs
add
pop
or
inc
mov
xchg
aaa
jbe
hlt
or
inc
or
cmp
xchg
stos
sub
repnz
push
lcall
inc
add
mov
add
and
sub
stc
mov
cmp
pop
mov
mov
insb
or
lret
and
sub
fcmovnu
loope
pop
repnz
cli
in
pop
sbb
ja
mov
ds
enter
mov
inc
jg
dec
cli
addb
or
addl
mov
jae
mov
mov
jle
xchg
pop
mov
xchg
imul
pop
call
xchg
out
adc
mov
push
test
imul
fwait
jle
sub
adc
jg
mov
popa
jne
mov
mov
aam
and
repz
mov
popa
cmpsb
dec
add
sahf
cmp
adc
cmp
das
hlt
jmp
push
jb
bound
dec
test
imull
test
cmpsl
xor
add
lods
out
dec
xchg
dec
or
push
in
add
fists
pop
fimull
in
cltd
xchg
push
enter
jae
std
fwait
in
add
adc
cmp
mov
addb
xchg
int
jnp
mov
xlat
and
je
xor
adc
inc
js
aam
popf
cwtl
cmpl
xchg
pushf
xor
xchg
movsl
bound
sub
push
loopne
pop
pop
add
xchg
fwait
out
xchg
dec
je
dec
jmp
loope
mov
ds
mov
xlat
lahf
jno
mov
hlt
add
mov
xchg
icebp
das
push
mov
jb
test
std
sub
sub
mov
xchg
popa
jb
jmp
push
mov
sbbb
jae
loope
imul
ret
outsl
sbb
inc
lcall
testb
jp
clc
das
in
jbe
inc
xchg
sub
sbb
add
cltd
ret
jecxz
sub
pushf
inc
inc
and
push
cmp
int3
mov
mov
sub
ret
stos
aas
bound
push
xchg
pop
sub
inc
rol
pop
mov
in
test
enter
xchg
push
jnp
inc
out
popa
scas
xchg
add
jle
rcrb
xchg
and
aam
fildll
enter
lret
in
pop
movsb
sahf
xor
xchg
aad
inc
sbb
jge
cmp
mov
cld
stos
js
xor
push
mov
or
iret
jp
int3
repnz
cmp
or
jb
adc
mov
sbb
add
les
rcrb
test
sti
sbb
sahf
mov
inc
dec
mov
push
out
adc
cmp
out
out
test
sahf
mov
daa
inc
stos
jae
iret
xchg
dec
cmp
add
and
jmp
xchg
icebp
rcrb
call
or
lahf
stos
add
mov
add
insl
or
fildll
movl
imul
lcall
fsts
jae
call
movsl
pushl
out
jno
scas
popa
inc
aaa
out
sarl
out
mov
sahf
in
popf
ret
mov
xor
ds
nop
sbb
fisubs
push
or
das
xchg
pop
fs
add
mov
out
out
xor
out
filds
movsb
inc
sbb
sbb
lods
sub
mov
sub
adc
mov
mov
ja
mov
cmp
xchg
jnp
adc
in
aaa
mov
xor
sbbl
inc
inc
push
sahf
sbbl
imull
jbe
jmp
sub
mov
add
jl
xchg
push
jl
out
dec
call
mov
add
mov
fld
pop
aam
adc
outsb
fsub
repz
add
movsl
decl
xor
mov
outsl
lea
iret
mov
sub
addr16
pusha
or
out
xchg
enter
sub
xor
lret
shlb
sub
pop
fmulp
mov
xchg
lods
test
enter
test
jb
mov
add
je
jecxz
cmpsb
dec
and
les
pop
push
and
lret
rorl
mov
aas
cwtl
les
xor
push
adc
fdiv
xchg
fst
sbb
fwait
std
inc
call
add
xor
xor
jnp
sahf
les
lock
adc
push
push
mov
mov
sub
dec
xchg
cmpsl
push
test
push
int3
push
xchg
inc
test
push
fistpl
lock
pop
xor
icebp
push
aas
dec
pop
lock
dec
js
pop
js
xor
mov
sub
dec
or
es
push
arpl
push
mov
mov
dec
lcall
movsl
push
jg
add
mov
lret
and
jge
xor
idivl
movlps
inc
stc
mov
jge
push
rcrb
dec
lods
insb
xchg
aad
dec
add
mov
dec
sbb
pushf
dec
in
adc
cmp
test
mov
out
jbe
cmpl
sub
repnz
jl
stc
cmp
cmpsb
loop
sub
add
lret
xor
dec
jecxz
mov
in
push
mov
das
jno
push
call
imul
movsb
into
repnz
mov
fbstp
push
incl
push
dec
xchg
adc
fbstp
out
dec
in
and
sub
sahf
lcall
ret
push
insl
dec
sbb
jle
test
mov
pop
scas
notb
loop
in
inc
in
jecxz
cltd
mov
sbb
mov
fimull
mov
shr
leave
inc
push
add
insl
sub
std
and
pop
jg
dec
test
sub
dec
subb
in
clc
lods
in
dec
imul
les
fidivl
and
pop
repz
adc
ja
dec
and
pop
loopne
mov
xchg
popf
shlb
add
adc
cmpsb
dec
inc
rorl
adc
nop
add
fsubrs
inc
pop
fs
out
cmp
or
dec
dec
add
fstps
and
xor
xchg
jmp
adc
push
popa
dec
or
cmc
test
rorb
ljmp
push
jmp
lret
into
inc
sub
dec
mov
into
cs
jnp
out
xchg
push
ds
int3
push
mov
jge
rorb
loopne
pop
or
cmp
adc
and
shl
faddl
scas
and
stc
in
out
lret
inc
xchg
or
ret
fdivrl
das
test
cmp
pop
out
cwtl
aaa
pop
mov
sub
roll
xchg
aas
fidivrl
dec
jne
jns
out
fldlg2
ljmp
or
pop
cld
std
lret
fs
insb
ja
add
push
gs
jecxz
push
inc
xlat
sbb
sub
jmp
clc
popf
add
jbe
mov
popf
fidivs
mov
mov
push
cmpsb
cmp
pushf
cmp
add
xchg
cmpsl
pop
mov
cltd
mov
ss
mov
and
andl
mov
inc
test
movsl
sbb
cwtl
push
inc
shl
lret
mov
repnz
push
fisubrs
pmaddwd
add
mov
xchg
in
inc
decl
ret
mov
inc
pop
lea
dec
xlat
in
int
gs
nop
mov
ss
ds
dec
add
mov
add
or
movsb
rolb
out
cvtpi2ps
sbb
sbb
jle
push
cmp
inc
mov
jge
jbe
mov
sub
int
sbb
xlat
fistl
dec
aas
pop
fldenv
pop
insl
mov
enter
push
pop
aam
and
mov
stos
sbb
jnp
hlt
ja
sbb
cmp
insb
and
jmp
dec
or
xor
dec
aas
xchg
scas
ljmp
scas
xor
mov
jbe
pop
add
push
fidivrs
enter
hlt
insl
imul
imul
mov
ss
cwtl
mov
dec
adc
lahf
gs
sbbb
dec
les
sub
leave
jo
lea
pop
sti
pop
aaa
arpl
ljmp
lret
inc
out
xchg
or
outsb
xchg
sub
jl
push
adc
add
loopne
cmp
movsl
xchg
lret
jb
int3
sbb
or
pop
pop
movsb
jmp
stos
or
aad
ja
mov
push
and
sub
loopne
jns
add
cmc
jb
test
sub
inc
dec
int3
cs
call
popf
addr16
mov
push
xlat
mov
idivb
test
fwait
mov
cmp
bnd
dec
fwait
inc
arpl
rcrl
mov
pop
adc
add
ficoml
imul
and
out
inc
test
add
xor
sub
or
lcall
lds
std
add
push
insb
jl
daa
mov
push
lahf
imul
jbe
jmp
sbb
sbb
into
out
push
stos
call
pop
or
jne
dec
adc
xchg
push
shrl
dec
xchg
cwtl
jns
scas
mov
outsl
rcrl
repnz
stos
rolb
add
lods
mov
mov
pop
ret
insb
push
into
clc
iret
xor
adc
jge
movb
pusha
fs
sbb
sub
jge
repz
jmp
mov
clc
xlat
dec
mov
add
test
push
add
adc
out
shl
pusha
scas
mov
data16
pop
dec
insl
popf
scas
cltd
jp
imul
test
adc
sub
clc
std
inc
xor
pusha
push
inc
inc
aas
test
fldenv
cmp
ret
shrb
xchg
push
xchg
xchg
data16
mov
fistpll
cmp
xchg
inc
nop
dec
xor
xchg
enter
mov
pop
xchg
or
jle
adc
movl
add
scas
into
aad
out
imul
adc
leave
ss
cmp
inc
fdiv
or
aaa
push
fistps
mov
fisubl
xchg
lahf
in
jae
xchg
sub
or
and
cmpl
shrb
dec
sub
xchg
sahf
je
mov
push
mov
dec
movl
push
rcrb
or
outsl
rcr
call
mov
xor
push
xor
or
in
inc
leave
adc
test
inc
sti
mov
jae
xor
sbb
pushl
mov
je
leave
cmp
imul
mov
call
inc
in
in
adc
mov
icebp
es
fcmovnu
push
mov
add
int
notl
inc
or
add
fsts
sbb
cmp
sub
inc
cmp
adc
insb
loope
fwait
ljmp
sub
cmp
inc
jle
inc
pusha
aam
jle
sti
aad
push
jge
dec
pushl
mov
inc
flds
jp
or
pop
jb
mov
and
lret
sbb
sarl
or
sub
mov
mov
je
adc
pop
mov
mov
or
cmp
cmp
leave
pusha
loopew
fwait
push
mov
ja
or
aam
mov
cld
sbb
stos
leave
sahf
dec
insb
sbb
jmp
lock
xor
adc
repnz
fisttpl
negl
mov
cmc
sub
js
jns
or
add
aaa
out
inc
cmp
out
mov
mov
add
jmp
mov
jg
jo
push
lods
negl
lock
cld
mulb
cld
jecxz
inc
xor
pop
dec
or
or
cmpsb
lods
sbbl
sbb
inc
add
out
movsb
ljmp
jge
popf
push
add
and
rcr
pop
test
icebp
pop
dec
movsl
pop
fucomip
and
mov
cmpsl
or
jb
dec
test
pop
mov
fistps
jp
xchg
or
mov
inc
std
pop
jmp
jecxz
in
cmp
and
cmp
pop
mov
ret
lds
jnp
test
and
and
in
mov
lds
pop
lcall
or
movsb
sub
sahf
or
addr16
inc
and
cs
mov
nop
jb
ss
popf
int
js
mov
adcl
inc
sub
dec
enter
cmp
addr16
out
lret
mov
mov
dec
push
mov
int3
out
cs
mov
lcall
or
int3
sbb
pop
mov
or
cmp
and
push
mov
outsb
out
push
lret
jg
cmp
xchg
jo
adc
ror
fcompl
add
cltd
mov
or
cmp
movsl
xchg
jo
pop
pop
roll
pop
dec
loop
lret
inc
sub
inc
adc
push
enter
mov
xor
sbb
loop
and
lahf
jle
pop
or
inc
call
arpl
mov
rep
out
mov
fisubrl
das
xlat
cwtl
test
pop
push
or
xchg
lea
es
push
dec
push
xor
repz
xchg
stc
loopne
loop
or
push
fldt
lret
xchg
jl
push
mov
sbb
das
lret
inc
test
negl
adc
xchg
push
je
dec
sub
push
pop
sub
lods
fwait
scas
dec
xchg
jp
bound
stos
jno
addr16
std
adc
adc
sbb
sub
std
pusha
lods
aam
dec
pusha
and
lods
hlt
inc
jo
add
fwait
loopne
mov
jns
jg
lcall
inc
dec
inc
mov
decl
adc
out
xor
push
inc
cmp
fadds
push
or
mov
xchg
out
xchg
popf
fmulp
fs
adc
movsl
movsl
adc
xor
add
es
cmp
mov
fld
push
mov
das
dec
lods
out
popa
insb
fcomi
xor
cmp
int
mov
jge
sbb
pop
out
xchg
xchg
jmp
sub
hlt
movsb
cmp
add
cwtl
sub
fildll
jb
sbb
inc
push
mov
mov
mov
lods
lea
fs
fs
push
pop
mov
fdivrs
repz
add
mov
xchg
dec
ds
or
lcall
cli
nop
inc
mov
in
or
dec
and
lods
adc
cs
iret
stos
popf
push
cmpsb
push
xchg
rorb
negl
inc
fwait
test
mov
test
sbb
xchg
xchg
cmp
roll
movsl
pushf
push
jns
dec
push
push
add
push
jb
int
push
test
mov
jmp
movsl
push
leave
imul
push
sbb
out
push
cmp
enter
adc
enter
or
cmpl
arpl
shlb
mov
stos
ret
cmp
mov
xchg
add
push
rcll
fdivrp
mov
sub
loopne
jg
outsb
rcrl
call
and
push
aam
sub
insl
or
adcb
mov
jno
xor
xor
jo
lock
in
ret
enter
dec
sar
sub
push
out
cmpsb
mov
movl
xor
push
cltd
leave
in
or
push
adc
xor
pop
xchg
push
dec
scas
sub
popa
dec
sbb
adc
jne
movsl
scas
mov
shlb
imul
lret
jb
xchg
inc
push
repz
adc
pop
sub
mov
ret
imul
jbe
mov
mov
int3
rcrb
iret
into
loope
dec
mov
test
jns
lods
inc
in
stos
imul
mov
pop
daa
pop
xor
sti
rcr
call
mov
push
or
mov
cmp
inc
cltd
cmp
ret
roll
aad
fcomps
cmpsb
jbe
pop
add
out
fdivl
xchg
adc
das
dec
xor
fistpll
xor
xchg
outsl
notb
xchg
adc
pop
call
insl
dec
mov
test
cmp
fs
xchg
sbb
or
xchg
rol
cld
fnstsw
or
insl
xchg
sbb
repz
rolb
in
cmpsb
pop
fdiv
int
or
dec
into
jbe
movsb
sbb
mov
adc
sbb
or
add
xlat
push
int
pop
enter
push
ja
push
loopne
push
into
cmpsb
loope
jne
xor
repz
aaa
adc
adc
mov
insl
in
jne
cmc
loop
es
dec
es
cld
inc
stc
push
xchg
sbb
test
sub
lods
cmp
ljmp
addr16
fadds
fimuls
gs
hlt
inc
cmp
ds
mov
mov
stc
mov
dec
pop
rorl
jne
xchg
jp
jg
shlb
push
insb
pmaxub
xchg
push
ds
es
xchg
fidivrs
sub
add
xor
jb
push
cmp
inc
enter
fistl
mov
and
cmp
test
push
inc
adc
jecxz
imul
inc
popa
push
test
lock
dec
fists
inc
mov
adc
push
pop
pop
scas
pusha
sub
jmp
xchg
fldt
sbb
push
mov
dec
dec
inc
mov
cmc
in
cli
cld
lds
sub
out
dec
inc
jmp
mov
xorb
add
ds
ljmp
pop
into
loope
daa
lock
adc
pop
sbb
mov
and
into
loop
bound
clc
ja
lahf
mov
and
jmp
sub
push
push
in
xchg
xchg
jecxz
mov
std
dec
test
inc
dec
mov
cmpsb
mov
pop
fwait
mov
call
mov
cmp
clc
gs
dec
sub
adc
cmp
popf
pop
sar
xchg
mov
inc
jb
adc
stos
sub
ljmp
adc
mov
cmc
mov
cmp
outsb
adc
sub
push
cmp
jge
popf
fadd
mov
dec
cmc
cmp
xchg
push
out
or
xor
js
lods
fisubrs
sub
jl
sbb
rcl
sti
subl
nop
sahf
out
sbb
and
sti
push
sub
cli
dec
adc
mov
lret
in
enter
fwait
aam
in
fwait
call
nop
mov
iret
xchg
pop
out
test
jns
cmp
xor
in
ljmp
ds
push
mov
lret
fdivl
fprem
lret
js
das
mov
mov
xchg
cld
or
jne
popa
pushf
lahf
sub
add
xchg
fbstp
iret
cli
cmpsl
dec
dec
inc
sti
or
jge
sti
cwtl
mov
mov
cs
repz
stos
int3
mov
sub
aam
decb
push
mov
xor
inc
and
jl
test
sub
jl
clc
gs
jno
stos
aam
insb
cmc
popa
cltd
loop
push
ljmp
xchg
mov
stos
out
xor
or
pop
add
xor
dec
dec
mov
xchg
push
xchg
push
lock
lea
sub
xchg
lret
pop
push
jbe
stc
add
or
data16
pop
mov
xor
andb
insl
sub
cmp
and
sbb
gs
fwait
and
sbb
push
cmpsl
xor
cmp
pop
int3
ds
movsl
mov
and
ret
adc
jmp
dec
into
imul
ret
cmp
into
cmp
push
leave
xor
dec
dec
les
push
ja
clc
pop
mov
dec
mov
or
fisttps
in
hlt
loope
sub
push
jae
mov
sahf
loop
add
hlt
inc
imul
inc
inc
popf
push
int
ja
mov
sti
repnz
jns
pushf
inc
imul
or
imul
cmp
jmp
pop
xchg
sahf
mov
or
add
mov
inc
jg
dec
ja
ss
xchg
inc
mov
and
sti
mov
jmp
dec
call
mov
scas
pop
add
jge
rorl
xchg
out
ret
push
sub
ficoms
jo
mov
inc
dec
mov
cs
mov
mov
gs
nop
mov
lock
jo
adc
mov
in
faddl
mov
inc
popf
jae
mov
push
sarl
ja
push
cmp
push
xor
cmp
shrl
sarl
and
fneni(8087
rcll
mov
xchg
leave
push
addr16
lock
xchg
shl
jne
data16
inc
out
fcoml
pop
cmpsb
scas
outsl
push
push
mov
mov
cmp
sbb
popf
scas
push
lock
jl
and
mov
or
pop
jne
push
sub
and
pop
and
mov
pop
ja
enter
test
xor
sbb
ss
push
mov
das
push
jmp
sub
sbbl
shld
inc
jae
aas
push
and
gs
gs
mov
mov
sub
and
cmp
das
in
sbb
hlt
rorb
lcall
outsb
loope
dec
btsl
jnp
loope
stc
repz
lock
or
bswap
fstps
pop
push
fstpt
sbb
aad
push
andb
mov
mov
insl
enter
mov
inc
mov
js
and
xchg
or
sbb
mov
subl
adc
popf
sahf
mov
xor
idivb
iret
push
cmp
ss
sbb
xchg
int3
pop
out
shlb
push
dec
sub
loopne
cmp
in
jecxz
fwait
popa
adc
lret
subb
mov
daa
in
lods
out
sar
mov
js
sbb
je
je
int
inc
test
in
scas
xchg
fdivs
mov
les
dec
add
mov
fldl
sbb
push
scas
jno
jo
sbb
repz
cmpb
mov
mov
mov
pop
loop
mov
cltd
or
xchg
mov
cmp
ret
inc
jp
jbe
dec
jl
push
mov
stc
xor
imul
leave
insb
adc
mov
mov
dec
lods
pop
hlt
push
mov
xor
roll
hlt
add
adcl
jge
push
mov
and
inc
cmp
loop
rcl
inc
sti
sti
push
out
mulb
pushf
jp
or
cmpl
or
sahf
mov
sti
push
mov
cmp
pusha
xor
aam
das
pop
adc
mov
fsts
sti
pop
es
push
jle
lret
inc
xor
punpckhbw
mov
scas
adcl
jge
iret
lahf
scas
pop
push
cmp
mov
jge
jp
xor
mulb
mov
jle
mov
shrl
pushf
mov
fs
cmp
int
adc
pop
fdiv
sbb
pusha
mov
les
in
mov
xchg
mov
add
or
psllq
xchg
rolb
push
cmpsb
jo
add
aad
inc
jle
dec
imul
mov
cmpsl
icebp
dec
xor
pop
or
push
sub
mov
call
sbb
mov
out
test
fmull
xchg
pop
xor
dec
mov
or
adc
decl
mov
push
test
pushf
xchg
decb
stos
push
outsb
inc
popa
ret
fisttpll
dec
lea
mov
shr
jl
push
ja
mov
arpl
inc
adc
rorl
sbb
mov
pop
xchg
fildl
jmp
mov
jae
xchg
jno
pop
sti
dec
dec
pop
mov
jbe
ja
jne
mov
mov
fistl
mov
int3
push
and
mov
repnz
outsl
sbb
scas
lret
negl
inc
pavgb
mov
mov
pop
scas
test
repz
xchg
outsb
andb
dec
daa
loop
lds
adc
mov
jecxz
sub
clc
push
stos
and
dec
or
inc
push
push
cltd
sti
push
aas
nop
mov
in
xchg
pop
xchg
sub
ljmp
cwtl
dec
mov
jp
mov
test
push
mov
leave
push
scas
dec
pushf
inc
push
or
mov
enter
inc
lret
lcall
push
js
cmp
jns
xchg
aad
shlb
sti
mov
aad
fdiv
push
fidivs
jns
and
and
ret
jecxz
sar
adc
push
mov
ficoms
arpl
movsl
mov
stos
aaa
and
outsb
scas
fwait
in
push
mov
adc
push
inc
jb
lock
fdivl
xchg
lcall
fwait
push
fisttpll
call
and
cmpsb
ret
mov
fnstsw
lods
push
arpl
leave
roll
cli
into
or
push
cld
popa
cli
hlt
pop
pop
jne
cwtl
fsubp
ds
mov
popf
mov
jns
mov
sbb
outsb
lds
jb
out
test
into
xor
or
int3
das
faddl
jo
imul
jb
sahf
cli
xor
enter
push
cltd
add
mov
cmp
pushf
pop
sub
mov
je
adc
daa
jp
jo
iret
aas
aaa
setnp
pop
insl
out
test
cmp
dec
repnz
mov
lret
sbb
rol
adc
cmp
dec
std
daa
jns
popf
inc
sbb
cmc
pop
xchg
insb
int
or
scas
add
cmp
pop
pop
and
and
jno
addb
cmp
sbb
fstl
imul
sbb
mov
in
scas
aas
jno
and
ret
adc
pop
hlt
jb
iret
fadds
sahf
movsl
insb
mov
mov
add
and
test
stc
adc
xor
orb
or
test
mov
ss
push
dec
pushf
sahf
cmp
mov
adc
dec
sub
neg
and
push
fdivs
call
sbb
mov
into
mov
ds
lcall
mov
cmp
pop
adc
sbbb
iret
mov
inc
mov
into
fs
inc
std
repz
out
jnp
dec
inc
pusha
ljmp
dec
and
das
jae
push
xor
dec
out
fistl
lods
mov
fidivs
lret
div
add
ss
inc
push
jns
and
rolb
mov
pop
fisubrl
lcall
sahf
and
sub
mov
rcrb
sub
lock
lea
imul
sub
cmpsb
lock
jo
out
stos
imulb
jo
dec
jbe
out
add
pop
inc
sahf
cmpsb
out
push
das
fmul
lods
pop
cmpsl
sbb
out
jno
ljmp
stos
push
outsb
adc
movsl
and
push
dec
mov
xchg
data16
inc
imul
aam
xchg
mov
sub
mov
fnsave
mov
dec
cmpsb
xchg
jmp
pop
clc
and
mov
pusha
mov
xchg
addl
in
pop
adc
mov
pop
out
ja
addr16
mov
daa
mov
lods
stos
push
stc
sbb
xchg
and
cmc
subb
cmp
addr16
lea
adc
push
and
push
xlat
inc
pop
push
cli
subb
pop
mov
enter
hlt
add
sub
xchg
xchg
cmp
daa
xchg
cmp
imul
xor
jne
mov
pop
pop
ss
dec
icebp
mov
loope
sub
inc
xlat
loope
mov
cmpsb
xchg
icebp
ret
or
jnp
or
mov
dec
sub
test
adc
ja
cmp
pop
or
push
adc
pop
sbb
push
in
jns
outsl
mov
sub
int3
xor
add
and
arpl
cmpsb
jae
popf
call
xor
movsl
dec
jo
sub
or
fwait
lahf
pop
or
add
ja
xor
or
scas
pop
mov
dec
leave
jmp
ja
sbb
sub
scas
mov
int3
scas
mov
inc
add
inc
sbb
out
sub
stos
ja
jmp
out
int3
jb
in
or
jmp
mov
cmp
push
in
aam
clc
xchg
and
sub
and
sbb
into
hlt
mov
and
lret
inc
or
inc
leave
rclb
cmpsl
hlt
mov
cmc
cltd
add
or
cwtl
push
pop
cmp
fildl
pop
ds
inc
lods
adc
test
rcl
mov
push
inc
out
lds
sbb
fsubl
mov
pop
jecxz
and
shrb
pop
push
add
test
push
mov
ret
push
adc
aad
push
mov
cmp
fdivr
jno
xor
call
repnz
push
push
mov
cmp
pop
out
mov
xor
jnp
cld
ja
inc
adc
mov
cmp
mov
rcrl
and
lret
mov
and
sbb
fstpl
roll
lods
call
or
mov
stc
sbb
cmp
enter
into
clc
sbbl
scas
pop
fisubrs
push
sub
ficoml
jne
jb
inc
and
inc
mov
add
mov
test
or
pop
xor
sti
push
xor
lret
pop
and
mov
mov
jbe
push
dec
adc
negl
mov
pop
aaa
ss
push
inc
xchg
cli
insb
mov
sbb
ss
leave
dec
fadd
mov
jo
jnp
push
lods
rorl
and
mov
sbb
jae
inc
push
shr
adc
out
sahf
push
mov
ficoml
jns
imul
out
in
fcoml
ds
pop
pop
jl
les
xchg
repz
popf
in
outsb
add
mov
adc
sub
fists
xor
xor
daa
pop
sub
sbb
add
mov
sub
ficoms
jg
je
cwtl
nop
sub
lods
dec
insl
stc
fstps
divb
cmp
mov
into
lcall
add
ds
lahf
lret
test
pop
or
in
push
aad
push
sub
adc
mov
add
adc
lahf
les
inc
pushf
das
mov
inc
dec
dec
fs
mov
mov
push
in
mov
lret
sbb
test
push
add
lret
imul
call
js
pop
repz
add
out
jno
scas
mov
cmp
jp
mov
cmpsl
push
jne
mov
add
addr16
cmp
sub
pop
into
push
shrl
es
mov
sub
adc
push
jmp
add
jp
pop
and
leave
sub
inc
stc
cmp
inc
xchg
pop
xor
insl
push
cld
xchg
and
add
push
xchg
mov
daa
stos
daa
push
into
add
lds
fldcw
mov
dec
and
fwait
push
hlt
stc
addr16
imul
sbb
js
out
push
push
jge
or
push
es
fisttpl
testb
enter
cmp
mov
sbb
arpl
mov
xchg
sarb
jl
xchg
xchg
inc
pushf
nop
lock
loopne
mov
es
sbb
gs
pushf
test
jne
mov
or
js
inc
pop
dec
push
dec
mov
scas
xor
pop
pop
or
sbb
mov
mov
ljmp
fcmovnu
frstor
test
jle
fwait
shrb
js
mov
enter
or
mov
jmp
mov
stc
dec
lahf
jge
or
popf
pop
pop
mov
mov
dec
jno
xchg
sbb
jle
push
addr16
mov
xchg
cli
movswl
add
fiadds
call
pop
rorl
or
push
mov
and
es
lds
leave
xchg
test
out
rcrb
mulb
fisttpl
ds
inc
pop
cmp
mov
addl
push
inc
call
movsb
jb
lahf
xchg
mov
ss
jbe
jecxz
xchg
pop
adc
arpl
push
aam
stos
add
out
sbb
pop
xor
inc
adc
or
adc
aad
pushf
cmp
jg
xchg
nop
pop
div
xor
sub
mov
loope
and
outsb
fildll
aas
dec
xor
arpl
or
sub
loop
dec
int
imul
adc
mov
dec
retw
cmp
xchg
stc
fwait
mov
div
outsl
loopne
sub
es
jmp
int3
mov
adc
pop
fcoml
xor
inc
xchg
stos
into
in
lods
xor
insb
push
das
jae
mov
jnp
aad
lods
outsl
es
stc
dec
movsl
dec
lcall
cmpsl
cmp
sbb
cmp
sarl
int3
int3
mov
and
add
push
lds
jo
and
and
mov
pushf
decl
cmp
or
imul
shlb
mov
pop
jmp
lods
sbb
pusha
mov
xchg
scas
mov
cmpl
jp
push
pushf
mov
mov
inc
push
arpl
cmp
xorps
icebp
bound
out
xchg
sahf
movb
jmp
cwtl
stos
adc
push
pop
lret
mov
ljmp
mov
movsb
jmp
dec
cmp
and
mov
out
sbb
mov
ret
lods
int
in
pop
mov
test
testl
test
adc
fidivs
push
pop
scas
add
add
aam
jg
inc
xchg
loop
pop
push
imul
test
sbbb
fs
adc
sub
inc
jg
mov
testb
fsubrs
pop
scas
jo
mov
cmp
jmp
sbb
stos
sub
das
test
sub
mov
ljmp
or
imul
push
clc
add
mov
rolb
pop
jp
lcall
loope
xlat
js
xchg
add
jbe
push
sub
lods
adc
hlt
push
xchg
lcall
xor
xor
popf
testl
and
push
jne
mov
js
mov
inc
or
nop
push
push
fsubs
mov
sbb
push
out
bound
in
stos
xchg
adc
stos
mov
loope
adc
ficoms
and
mov
xchg
or
out
cmp
dec
mov
mov
inc
add
mov
hlt
mov
lret
and
cmp
pushf
jb
out
or
sar
cmc
cmp
sti
ds
daa
out
ja
inc
add
sub
fstps
inc
xchg
arpl
dec
xor
dec
cmc
pop
pushf
aam
inc
stc
push
add
mov
in
jp
inc
jl
out
xchg
lea
fnstenv
add
adcl
sub
js
push
shl
lods
push
cwtl
daa
lea
mov
dec
add
divl
outsl
jecxz
push
pop
lods
add
test
mov
xchg
xchg
mov
icebp
dec
mov
push
ret
movsl
inc
scas
pop
leave
cltd
hlt
dec
dec
jnp
adc
mov
pop
jl
dec
leave
jp
pop
mov
addr16
xchg
cmpsl
cmp
scas
mov
out
sub
nop
xchg
loop
pop
lahf
and
mov
lret
xchg
jne
cmpsb
pop
mov
jmp
pushf
xor
add
inc
adc
adc
xchg
mov
mov
andl
sbb
add
rcrl
cmp
push
clc
pop
gs
jns
mov
and
insb
cwtl
test
fcmove
stos
mov
lds
pop
aas
cld
leave
pop
mov
adc
cli
xchg
mov
andb
imul
xor
mov
and
call
in
xchg
outsl
arpl
int3
stos
jne
mov
and
xor
loop
sbb
test
add
sub
jmp
into
test
clc
aas
insl
xchg
inc
repnz
rcll
cmpb
pop
dec
lahf
int3
dec
incb
add
adc
xchg
rclb
mov
mov
int
ss
or
sarl
lock
mov
mov
scas
repz
cmp
lods
cld
cmc
movaps
add
push
into
mov
cmp
scas
mov
push
in
data16
fildll
in
adc
outsb
test
ja
cmc
push
jl
add
dec
mov
sub
mov
mov
std
out
cli
insb
mov
push
in
jecxz
js
lea
sub
out
rorl
pushf
mov
and
repnz
mov
xchg
sub
mov
lods
xchg
mov
fistl
inc
dec
fcompl
mov
imul
mov
andl
nop
cmpsl
push
xchg
push
inc
pop
mov
mov
orb
daa
int3
add
jle
aad
xorb
xor
test
test
pop
ret
lret
push
loope
popf
test
adcb
mov
xor
mov
push
adc
cmp
pushf
jae
jg
or
int3
xchg
jb
dec
in
mov
jecxz
lret
xchg
ds
xorl
test
mov
mov
xor
hlt
sbbb
lods
aaa
mov
imul
shll
mov
push
data16
xchg
aad
aad
push
inc
fcoms
into
inc
adc
pusha
jmp
out
dec
ja
test
inc
xor
test
pop
sbb
sub
fadds
lods
mov
fcmove
push
sub
adc
loopne
fdivrs
ffreep
and
mov
sub
fbld
dec
mov
test
add
adc
cmp
xor
jle
rcll
pop
mov
sbbl
clc
cmc
pop
je
inc
fstpt
mov
jecxz
out
int
das
xchg
sbb
inc
mov
aam
iret
mov
scas
icebp
cmp
or
fists
mov
inc
subb
subb
out
test
in
loopne
xchg
inc
repz
mov
lcall
jne
sarl
xchg
cmp
test
cld
fnstcw
jle
iret
sbb
stos
push
pop
call
dec
leave
mov
push
aad
push
mov
decl
pmaxub
cmp
inc
fs
scas
jae
mov
enter
sbb
notl
cmpsl
imul
add
pop
addr16
xchg
aad
pop
and
adc
ss
iret
addr16
mov
out
jae
shll
push
stos
rorl
inc
cs
jnp,pt
in
mov
xchg
jle
out
outsl
out
bound
mov
shll
dec
insl
fistps
push
jecxz
sarb
addl
orb
xor
and
add
add
inc
popf
into
rorb
pop
jl
mov
or
inc
pop
dec
frstor
sbb
in
sti
mov
stos
jl
cmc
lret
mov
out
loope
clc
aas
repz
inc
cmp
cmp
mov
rorl
push
aaa
mov
or
push
std
or
inc
pushf
and
div
xor
mov
loopne
add
hlt
jnp
or
push
outsb
cmp
mov
stc
arpl
xor
dec
pop
stc
inc
jo,pn
scas
popa
inc
mov
pop
out
ret
push
jmp
jmp
xchg
add
or
xor
push
aaa
lock
mov
mov
and
into
aas
xorb
shrl
add
mov
nop
jae
dec
xchg
inc
push
and
arpl
mov
add
enter
call
mov
test
cmp
into
xchg
shlb
inc
xchg
js
sbb
arpl
push
cmp
dec
adc
lods
ss
pop
jmp
or
cs
jb
rolb
scas
outsl
inc
sbb
fnstcw
mov
xor
pop
mov
mov
das
jle
aad
movsb
dec
xchg
jae
sbb
xor
jle
outsb
dec
sub
and
xchg
jbe
les
pop
jno
lds
stos
sub
and
push
subb
ret
add
inc
int3
into
jno
jmp
dec
loop
mov
das
inc
mov
pushf
dec
push
and
xchg
fwait
mov
cmpl
hlt
inc
mov
in
xor
mov
mov
and
in
sbb
push
cmp
les
fs
sub
aad
jnp
scas
xchg
dec
lret
xchg
mov
jl
or
inc
lods
pop
out
cli
enter
dec
fldt
imul
cld
mov
lret
dec
cmp
adc
jmp
or
cmp
mov
scas
dec
loope
push
mov
push
mov
cli
inc
jl
sbb
jp
mov
test
cmp
nop
jbe
in
shrl
mov
inc
adc
xor
fimuls
jno
test
outsl
fs
bound
and
or
push
insb
cmp
xchg
and
cli
call
rcrb
rcrb
orl
pop
inc
das
sbb
inc
sub
inc
jmp
icebp
jnp
cmp
pop
push
push
test
xchg
or
jb
pop
xor
mov
fdivr
mov
mov
cmpl
fs
push
insl
dec
cmp
cmp
outsl
rolb
lahf
hlt
cltd
inc
inc
je
sub
aaa
rclb
loopne
xchg
and
les
shll
shlb
out
pop
mov
cmp
sub
lods
push
push
out
add
movsb
inc
xor
fs
inc
out
mov
inc
pop
dec
jno
pop
mov
ret
lods
test
sub
push
dec
push
les
sub
fs
pushf
jmp
ds
loop
adcl
pop
mov
out
imul
and
pop
insl
pop
loope
aad
loope
nop
sub
scas
add
push
lahf
xchg
jns
cmp
add
in
xlat
push
sub
mov
xchg
icebp
icebp
xor
jbe
mov
xchg
std
cld
test
jns
dec
out
ret
mov
xchg
in
out
stos
into
test
in
dec
mov
cmp
shlb
cmp
lock
fcom
es
mov
xor
sbb
or
jbe
das
xor
out
jno
loopne
mov
pop
inc
push
jo
add
pop
nop
into
sarb
lret
dec
mov
sub
rorb
das
ds
lcall
dec
bound
xchg
mov
push
or
pop
inc
jmp
fiadds
cmpsb
and
ja
movsb
lea
cwtl
scas
mov
in
pop
push
sub
xor
adc
push
pop
or
aam
fisubs
mov
xor
push
xor
cmovne
push
or
mov
call
fsubs
cmp
pop
cmc
pop
outsb
lahf
mov
xor
je
test
ret
and
mov
xor
dec
ss
jmp
loope
popa
cmp
jno
xor
xchg
mov
dec
int
push
in
or
xlat
mov
in
repnz
or
mov
in
inc
fmulp
lods
pop
inc
imul
jne
xor
js
mov
sub
inc
cmp
add
add
orb
leave
lods
aad
cwtl
sti
mov
sub
mov
es
mov
xor
xchg
lea
push
mov
dec
ficompl
loopne
ljmp
adc
mov
paddw
sub
jl
pop
out
cwtl
pop
mov
dec
mov
push
xor
stos
negl
xchg
loopne
pop
lods
sbb
popf
or
jns
shrb
push
push
jbe
in
jne
xorl
inc
in
pop
sub
pop
shl
js
pop
repz
dec
int3
xchg
xchg
lret
xor
es
jbe
aaa
adc
fcomps
jae
xorb
adc
jge
sub
fisubrs
jno
mov
das
sbb
push
dec
or
enter
sub
mov
push
adc
shrl
cmp
xchg
sub
cltd
pop
test
stos
xor
cmpsb
stos
js
pop
nop
fiaddl
inc
daa
or
imul
cmpsb
insb
adc
cmp
xchg
xchg
stos
adc
out
fldcw
loope
pop
rcr
jp
dec
cmp
push
mov
or
les
mov
push
cmc
cwtl
nop
xchg
and
jmp
daa
xchg
insb
xchg
imul
fidivrs
lds
enter
pop
sub
dec
pop
lret
or
fisubrl
push
pop
and
or
pop
rcl
lea
push
sahf
roll
cwtl
mov
mov
jecxz
out
js
mov
cld
pop
cltd
out
mov
and
js
mov
lret
lret
arpl
cmpsl
mov
nop
rcrb
aam
jae
pop
cwtl
sbb
dec
add
leave
dec
and
insl
mov
dec
nop
mov
mov
outsl
ljmp
pop
in
inc
std
repnz
jg
cmpsl
les
cmp
mov
xchg
push
std
lahf
sahf
fs
stos
lds
in
jo
xchg
je
pop
push
add
add
aad
je
or
bound
jmp
movsb
pop
cli
dec
sub
lahf
dec
dec
pop
lea
loope
popa
mov
pop
lret
cmp
push
mov
outsl
dec
jp
scas
fwait
ss
lods
lds
or
cli
or
popa
outsl
jmp
xchg
mov
repz
mov
jno
outsb
int3
lcall
lea
mov
jp
mov
dec
jb
add
hlt
lahf
mov
xor
insb
pop
mov
xchg
mov
or
adc
lcall
mov
scas
and
or
rcll
xor
imul
lret
mov
cmp
dec
or
or
adc
mov
sub
cmp
xchg
mov
sub
inc
iret
in
cmp
push
les
out
into
mov
imul
ljmp
pop
pop
loop
rorl
sbb
faddl
gs
sbb
pop
insl
in
xor
mulb
lock
lahf
sbb
imul
sbb
jmp
fwait
sarb
mov
xchg
andl
dec
cmp
adc
dec
jo
cld
jbe
int
or
sub
mov
movsb
mov
faddl
loope
pushf
xor
mov
mov
rcrl
in
repz
push
dec
sar
xor
sub
fwait
push
mov
push
mov
dec
mov
jge
dec
jno
insl
mov
jge
das
popa
xchg
cmpsl
dec
mov
inc
mov
push
cmp
cs
xchg
popa
dec
repnz
lret
or
push
xchg
mov
push
xchg
lcall
aaa
popa
mov
sub
sbb
pop
cmp
outsb
fimull
jmp
or
scas
xor
call
mov
arpl
and
pushl
mov
xchg
icebp
gs
movsb
test
mov
aas
fbld
jg
in
icebp
xchg
mov
ficomps
xor
pop
sub
fwait
out
out
jne
repnz
push
sbb
mov
lods
insl
push
or
sub
jbe
and
imul
mov
adc
cmp
scas
aaa
cs
roll
mov
xchg
xchg
add
hlt
inc
inc
mov
lock
pop
movsb
push
adc
jo
push
enter
mov
mov
mov
not
cmp
rorl
fs
mov
mov
and
mov
mov
xchg
push
sbb
repnz
icebp
xor
stos
aas
add
sub
addl
and
or
in
jle
push
mov
pop
cmp
mov
or
push
xchg
pause
repz
sbb
popf
mov
pop
mov
dec
loope
in
or
lret
call
mov
shlb
mov
in
push
xorl
stos
sub
fsubrl
jb
or
lcall
push
lock
cwtl
inc
pop
iret
in
cmp
lods
call
cmpsl
cmp
sbb
push
ret
ja
lret
push
out
roll
daa
sub
and
add
daa
nop
fs
xlat
mov
ret
add
in
dec
shr
cmpl
inc
push
sub
push
loopne
je
sbb
mov
xchg
loopne
push
inc
cmpsl
push
int3
mov
orb
pop
lock
inc
fcmovu
mov
sub
out
or
cltd
cltd
cmpsl
dec
jo
mov
mov
pop
push
push
fwait
push
imul
addr16
addl
and
lret
pop
and
mov
push
pop
lods
lds
lahf
daa
stc
mov
sub
in
out
js
dec
std
shll
pop
jp
aas
out
pop
mov
js
cli
mov
out
aam
add
lds
aas
cs
mov
fsubs
movsl
in
gs
xor
adc
pop
in
add
sub
sbb
in
loopne
push
sub
push
sub
lds
mov
arpl
xchg
push
adc
push
nop
stos
mov
lock
imul
jo
into
inc
rorb
add
sub
mov
push
cli
popf
xchg
scas
dec
icebp
inc
into
popa
inc
insl
lret
mov
fsubl
add
imul
ds
mov
mov
mov
mov
loop
subl
test
sahf
mov
push
inc
pop
and
pop
sbb
cwtl
jnp
adcl
jo
faddl
jno
or
mov
sbb
and
jo
call
out
pop
inc
or
lcall
leave
stos
loope
packuswb
cmp
sahf
gs
sbb
sbbl
test
sbb
test
xor
push
out
cmp
repz
push
push
loope
jo
test
mov
in
push
popf
pop
and
ljmp
inc
aas
scas
sub
cmpsb
int3
cmpsl
sub
sahf
add
push
jmp
push
dec
lea
pop
rcr
cmp
stc
jnp
or
xchg
xchg
pop
sub
cmp
sub
dec
dec
andb
mov
pop
xor
pop
lea
push
inc
into
sub
int
push
andl
xchg
or
mov
jne
hlt
jbe
shrl
xor
cltd
test
jae
or
mov
mov
into
jle
mov
mov
cmp
or
dec
xchg
mov
and
adc
mov
loop
mov
and
mov
enter
pop
xor
cli
pop
das
add
dec
inc
dec
mov
adc
cwtl
movsl
popf
xor
lods
sbb
ficompl
jb
fs
mov
mov
lock
cmp
add
loope
mov
test
pop
add
inc
stos
or
test
push
mov
add
or
mov
push
mov
ja
dec
push
sbb
movsl
aad
xchg
jnp
xchg
xchg
inc
and
lret
pop
jmp
pop
icebp
imul
test
pop
lahf
xchg
lods
out
xchg
mov
roll
in
mov
dec
inc
into
movsb
in
pop
mov
and
insb
mov
push
mov
jo
into
sbbl
pushf
std
ret
addb
cmpsb
out
insb
arpl
lahf
mov
cmp
mov
add
jle
mov
repnz
loopne
or
cmp
push
dec
addr16
mov
and
hlt
fstpl
fisubs
jne
mov
stc
int3
jecxz
repz
and
je
cmpsl
cmpsl
sbb
xlat
and
jo
fisubrl
bound
xor
cwtl
sub
mov
icebp
dec
jb
lods
mov
xor
aaa
mov
xor
hlt
cmc
inc
mov
jbe
adc
dec
mov
pusha
xor
push
xchg
hlt
lcall
nop
cmp
add
repnz
sbb
pop
fs
les
ljmp
loop
jmp
add
xchg
mov
nop
dec
ss
in
mov
mov
mov
dec
inc
push
push
mov
xchg
into
cld
lds
cs
push
inc
push
mov
mov
mov
jnp
lea
out
inc
mov
mov
dec
mov
scas
push
cmpsb
inc
jo
clc
dec
mov
mov
mov
scas
shrl
cli
fwait
test
test
mov
aaa
cmp
ret
movsb
shrb
pop
outsl
repz
mov
mov
insb
stos
cmp
xor
jge
dec
jns
xlat
rol
stos
pop
int3
sbb
scas
pop
jae
aam
mov
std
mov
hlt
pop
aaa
inc
pop
push
loop
loope
mov
daa
jne
push
jns
sbb
neg
inc
nop
decl
mov
mov
fisubl
ljmp
loopne
std
out
ds
xor
lret
int3
jecxz
mov
jp
fs
pop
adc
les
dec
mov
in
test
jns
daa
aaa
jle
ja
push
mov
cmp
xchg
aad
leave
loope
xchg
xchg
mov
incl
popa
rcl
repnz
lret
push
push
fcomip
cs
cmp
lods
sahf
repnz
sbb
adc
adc
lea
mov
adc
xor
bound
sub
jmp
in
mov
vpavgw
test
xor
jne
test
or
push
daa
dec
push
push
adc
inc
sbb
jmp
mov
mov
dec
sti
add
dec
xor
mov
adc
pop
pop
setne
lahf
cmp
pusha
lock
push
nop
cli
cmp
inc
inc
xchg
push
xchg
addr16
imul
pusha
stos
push
pop
and
push
xor
xchg
aas
jmp
pop
cmpsb
int
int3
stos
fwait
xchg
xchg
push
nop
repz
mov
add
mov
out
dec
xchg
bound
out
arpl
cmc
out
mov
aam
lds
orb
arpl
pushf
fucom
int3
and
pop
jbe
adc
xlat
and
xor
and
push
mov
les
stc
inc
mov
cmp
push
into
pusha
add
cmpsl
add
pop
test
decl
push
pop
xchg
cwtl
insl
sbb
jo
ret
xlat
cmp
or
jns
mov
ret
jno
testb
cmp
cmp
dec
mov
test
push
pusha
xchg
sub
xlat
fisubl
arpl
mov
cmpsb
fwait
dec
push
cmp
pop
pop
addl
flds
sarb
sbb
xchg
push
pop
or
imul
cmp
out
cmp
jo
bound
fisttpl
push
jne
das
movsb
sbb
push
mov
add
lock
loope
loope
leave
cmp
punpcklwd
std
mov
fistpll
lahf
fidivrs
std
aam
in
subl
xchg
push
pop
ds
out
mov
dec
cltd
ja
inc
lret
sub
mov
test
cmpsl
mov
call
jle
daa
ret
orl
addr16
sub
iret
mov
movsb
push
cmpsl
xchg
add
mov
mov
iret
mov
popa
or
push
cli
sbb
jne
fistps
adc
xor
clc
out
sbb
mov
in
jne
mov
je
sbb
outsb
in
mov
adc
push
dec
mov
pop
pop
aam
xlat
push
pop
jae
add
push
sbb
nop
roll
cld
dec
jecxz
cmpsl
or
orl
int3
mov
pop
pop
aam
cmc
xchg
mov
mov
fldenv
jbe
cmp
add
and
ljmp
pop
popf
lret
mov
mov
xchg
rolb
js
jle
jmp
pop
fsubrl
repnz
clc
cmp
lds
pusha
cmp
mov
jmp
test
mov
scas
mov
cmp
push
inc
mov
adc
lods
arpl
cmp
js
push
scas
sub
jecxz
xchg
aaa
jne
mov
shrl
jb
jmp
inc
int3
xor
push
outsb
sub
into
lock
push
dec
mov
dec
xchg
pop
mov
lods
cmp
dec
fsub
jp
sub
sbb
movsl
pop
push
int3
pop
cld
outsl
cmp
shrb
sbb
jns
lock
cmp
mov
push
pop
fisubl
adc
sti
adc
dec
cld
call
imulb
hlt
jne
mov
ret
nop
aas
cwtl
cmc
add
and
push
push
inc
xchg
push
mov
mov
lock
or
mov
das
lea
cmpsb
sarl
dec
xchg
or
xchg
dec
loopne
xor
or
adc
jbe,pn
in
sub
xchg
lahf
jecxz
loop
sub
adcb
sbb
jp
jecxz
inc
pop
sbb
mov
xor
scas
inc
aas
decb
mov
aad
orb
loope
into
das
rcr
les
cmovae
cmp
push
mov
add
inc
add
push
lcall
xlat
jl
cld
xor
jmp
aam
cmp
pop
in
insb
mov
jb
aam
sbb
xor
mov
aaa
das
push
fisubl
inc
cmc
dec
pop
push
repnz
mov
out
test
cmp
mov
xchg
xor
jecxz
mov
call
adc
aam
int
xchg
mov
jne
inc
jecxz
ljmp
dec
inc
mov
stos
cmp
push
push
add
or
gs
enter
and
cwtl
lds
mov
cmpl
adc
adc
dec
jg
mov
adc
addl
das
sub
ret
and
in
add
sti
mov
add
mov
out
jno
push
mov
mov
jae
jb
nop
mov
rep
ss
mov
rorl
repz
aas
xchg
rcll
ficoml
lods
lods
jmp
pusha
dec
or
xor
or
sbb
sti
cltd
bound
mov
loop
mov
cli
stc
pop
xchg
sub
ret
add
in
push
add
insl
ss
fisubs
cmpsb
insl
pusha
jno
xchg
lds
cmc
sub
imul
xchg
inc
dec
mov
std
pop
outsb
rcl
adc
sub
lock
imul
pop
pop
fldl
xchg
loopne
cmc
jb
dec
adc
mov
add
xor
in
clc
pop
xchg
pushw
add
cmp
fwait
shlb
dec
ret
pop
add
mov
cmpb
lcall
mov
cmp
xbegin
adc
adc
sub
and
rorb
icebp
das
outsb
cmc
pop
fdivrs
int
cld
nop
or
out
cli
ret
ss
dec
or
cmp
je
in
sbb
fisttpll
test
or
xor
fcomps
or
or
xchg
and
movsb
inc
cs
mov
cld
add
add
jl
mov
add
pop
mov
cmp
test
outsl
jnp
sub
rorl
mov
call
push
mov
es
js
movb
mov
test
int
cmpb
inc
mov
in
lret
aam
dec
xor
cmpsb
ja
xchg
loopne
imul
xor
aad
int
out
ret
out
pop
pop
fstpt
mov
bound
pop
add
inc
adcl
shlb
dec
loopne
add
repnz
dec
push
call
lds
imul
sub
jmp
sub
cmc
push
xchg
pop
ljmp
jae
pop
imul
pop
out
pop
push
jge
mov
enter
cmp
push
sbb
lahf
roll
push
gs
addr16
cmp
pop
inc
xor
push
cmp
sub
push
sbb
fistpll
mov
gs
xchg
inc
jp
lods
aam
cs
sbb
fldcw
stc
add
xchg
idivl
scas
notl
pop
mov
and
clc
jns
imul
sbb
jo
in
jmp
mov
jl
jns
push
jae
loop
and
cld
pop
movsb
addr16
lods
sbb
xlat
loopne
scas
sbb
xlat
out
repz
pop
or
add
xchg
sbb
push
sbb
cwtl
xor
inc
hlt
movsl
xor
cs
fistpll
movsb
jno
call
mov
mov
aas
pushf
das
nop
cmp
out
mov
push
mov
and
cmpl
call
xchg
insl
nop
mov
cmp
adc
mov
mov
pop
xchg
in
fnstsw
cs
or
fdivr
xchg
dec
sub
sub
push
dec
repnz
lods
inc
mov
adc
cld
enter
scas
les
fmull
fisubrl
ror
incl
pop
popa
in
mov
dec
ds
pop
sbb
xor
mov
loopne
cltd
mov
xor
imul
movb
push
stc
xchg
push
loope
in
into
sbb
int3
sub
fbstp
xchg
cmpsl
mov
in
das
sub
pop
cs
ror
arpl
jl
aaa
dec
adc
in
test
dec
fdiv
jecxz
out
mov
in
xlat
das
sbb
xchg
push
into
adc
cwtl
test
push
out
jp
ret
aam
movsl
popf
jmp
mov
lret
aas
in
inc
inc
cmp
push
mov
aaa
add
cld
push
add
sar
or
add
cs
test
adc
mov
sti
fcmovnb
sub
pop
mov
repnz
xchg
faddp
xor
pop
xor
sbb
lods
ret
inc
and
jns
xor
and
dec
adc
pop
or
mov
imul
jae
gs
call
lahf
pop
stc
in
aad
dec
dec
xchg
ret
loop
movsl
adc
and
rorl
insl
roll
mov
inc
daa
mov
xor
mov
xor
jne
rcrl
sbb
jge
out
arpl
mov
lret
pop
xchg
clc
leave
jnp
lret
xlat
and
stos
movsb
xchg
int3
or
cli
loope
add
pop
das
mov
cltd
xor
or
inc
jmp
movsb
or
mov
and
lcall
cld
fcoml
out
mov
outsb
das
xchg
jns
in
inc
push
mov
pop
mov
mov
inc
sbb
xor
outsb
sbb
add
fiadds
clc
gs
cmp
xchg
and
lret
popf
inc
loop
jle
imul
sbbb
sub
int
push
inc
in
aas
sbb
push
xlat
add
lret
rcl
daa
bound
jecxz
call
mov
xchg
testb
lods
add
cld
daa
mov
cmp
pop
in
jae
stc
sahf
ja
xlat
inc
lock
popf
and
inc
int
call
inc
lcall
into
adc
add
push
lcall
and
movsb
subb
mov
mov
mov
add
mov
cmp
pop
pusha
mov
push
add
ret
mov
rcrb
add
or
je
bswap
inc
jbe
cmp
sub
xchg
callw
add
movsb
ret
jae
mov
inc
popf
es
xchg
add
mov
xchg
cmp
cmpsb
cmp
outsb
test
mov
lods
push
mov
push
mov
aad
fcoml
out
lret
add
cmp
xchg
dec
xchg
mov
pop
lea
mov
adc
test
and
popa
push
pop
inc
in
iret
pop
cmpb
negb
mov
dec
divl
push
mov
fistl
fnstenv
es
ficomps
lods
push
jbe
push
mov
or
fdivrs
inc
mov
and
and
popw
cwtl
hlt
push
inc
frstor
jle
xchg
cli
inc
jb
inc
stc
in
pop
data16
add
popa
ret
push
inc
jbe
sbb
push
cmp
sub
add
jo
jg
mov
dec
add
inc
mov
call
cmc
enter
pop
inc
adc
inc
xchg
pop
shlb
int
mov
jo
lret
xor
mov
popf
add
testb
clc
mov
sub
sub
sub
aam
xor
test
pop
subl
aam
ja
and
mov
dec
cmpsb
adc
ljmp
dec
dec
lods
fnsave
push
paddusb
jno
mov
shll
push
xor
sbb
es
inc
test
clc
jecxz
push
cmp
mov
idivl
dec
cmp
pop
cli
shrl
addr16
aas
jg
in
mov
push
mov
arpl
adc
lock
push
orb
inc
pop
inc
fs
mov
sub
das
bound
repnz
int
sahf
insb
jnp
mov
xchg
or
daa
sub
jge
add
stc
int
mov
das
sub
scas
filds
cmpsl
clc
or
and
push
jne
shlb
into
cli
jle
push
mov
mov
mov
mov
and
inc
ss
enter
in
int
xchg
clc
push
lret
xor
mov
ficomps
call
out
inc
movsb
sbbb
pop
pop
movsl
popa
xchg
sti
mov
and
and
fsubs
jne
repz
push
stos
scas
jne
scas
lods
inc
inc
daa
pushl
clc
mov
xchg
or
jne
sar
loope
adc
push
adc
xor
pop
mov
enter
call
iret
fwait
pushf
jge
lret
sbbb
cmp
lahf
fdivl
push
pop
lret
mov
in
rcrl
movsb
out
or
xchg
daa
data16
lcall
fninit
arpl
dec
test
repz
fisubrs
popf
jbe
xor
inc
dec
fcmovbe
push
add
in
push
test
pop
iret
xchg
add
lock
sub
scas
cmp
ljmp
mov
movsb
sbb
shlb
stos
outsl
inc
sahf
fisttpl
push
in
adc
loop
scas
cli
cmp
sub
inc
movsl
in
pop
mov
and
mov
pushf
lcall
push
mov
adc
and
mov
arpl
js
lcall
add
rolb
add
in
popa
push
mov
pop
outsl
es
fisubrs
mov
mov
shlb
add
xchg
mov
jecxz
push
add
cmp
call
loopne
lret
fwait
push
sahf
iret
mov
imul
shlb
popl
popa
inc
es
ret
arpl
sbb
in
lcall
pop
lock
arpl
cmc
or
rcrb
sub
inc
lods
jmp
jl
inc
lret
xchg
rcrl
sub
imul
cli
pop
cmp
sbb
xor
rorl
arpl
data16
dec
or
push
jae
mov
mov
mov
xchg
lea
aam
imul
stos
push
ljmp
cmp
into
and
pop
push
push
sbbl
je
das
int
mov
and
es
add
sub
pop
mov
jne
xor
pop
movsb
dec
lcall
cld
fsts
inc
pop
pop
and
insb
popa
push
mov
ja
pop
js
je
lock
test
add
rcrb
xchg
fidivl
popf
pop
pop
cwtl
into
pop
and
fsts
or
xor
hlt
in
push
scas
test
jnp
icebp
stos
xchg
push
je
sub
inc
popf
daa
fwait
int3
or
jbe
into
pop
add
aam
xchg
adc
rorl
and
rcll
xchg
jbe
pop
mov
cmp
leave
adc
aas
mov
in
cli
stc
mov
ljmp
mov
pop
sub
adc
lods
mov
fdivl
and
jb
dec
out
shlb
addr16
mov
lds
in
dec
repz
xchg
out
pop
lock
cmp
pop
movsb
out
dec
imul
cmp
gs
xchg
or
jg
repnz
fwait
add
adc
je
inc
mov
pushf
pop
xchg
scas
fsub
scas
ror
push
mov
mov
add
push
cli
cmpsb
rorb
int3
inc
ja
arpl
rorl
jmp
jbe
arpl
cmc
pop
pop
dec
arpl
sar
xchg
pushf
xlat
insb
loopne
add
daa
bound
adc
jno
mov
shlb
repz
test
nop
repnz
cmc
pop
cmpsl
ret
and
jle
in
mov
sarl
mov
movsb
inc
insb
xchg
or
decb
fildll
out
push
aad
push
sbb
jae
es
ljmp
or
push
fsts
test
xor
gs
mov
cs
test
out
pop
sbb
lahf
cwtl
ret
int
pop
std
push
int3
into
sahf
push
push
test
dec
lcall
jb
and
pop
ds
lock
call
clc
xlat
rorl
pop
mov
pushf
add
push
xchg
insl
rol
mov
xchg
cld
sbb
sbb
mov
sub
stos
sbb
pop
dec
lret
inc
mov
test
sahf
pop
sub
and
loopne
insl
enter
adc
jle
push
in
shlb
shll
xor
sub
enter
mov
dec
inc
cltd
and
push
fcmovne
loop
jns
cmp
stos
es
fcoml
jl
sbb
aas
out
lea
jg
xor
stc
dec
rolb
pushf
pop
pop
sbb
push
jns
xor
mov
xor
mov
push
movsb
imul
sub
jno
out
cmp
je
xchg
or
les
pop
xchg
mov
insb
subl
int
cmpsl
loop
sbb
idivb
jno
hlt
push
push
stc
push
rcr
fxch
sub
add
xlat
hlt
out
and
gs
in
mov
lret
and
pusha
jo
in
aam
mov
out
daa
add
sbb
add
stc
or
cld
adcl
add
mov
test
scas
lds
vpsubusw
pusha
xchg
in
cwtl
mov
fidivrs
in
xlat
pushf
shrb
jns
lahf
stos
cltd
or
loopne
inc
leave
jb
add
sbb
mov
mov
pop
shll
int
jb
sub
jne
int
stos
sahf
adc
adc
jecxz
adc
cmp
dec
xchg
mov
out
js
daa
xchg
dec
inc
ja
and
lods
mov
add
arpl
test
pushl
adc
ficomps
mov
sbb
aam
sar
dec
add
mov
push
pusha
loopne
fucomp
mov
notb
pop
cs
xchg
sub
jl
mov
mov
pop
and
sti
gs
pop
cmp
push
mov
sarb
fwait
sub
and
pushf
pop
push
and
and
das
sub
into
push
shll
outsb
cld
push
pop
xor
mov
outsl
xchg
push
cmp
xchg
jecxz
sbb
jp
mov
mov
pop
pusha
aam
fwait
cmp
sbb
popf
cld
das
xor
xchg
or
cmp
mov
lds
mov
fisttpll
movsl
fists
fcompl
pop
dec
mov
outsb
aaa
pop
push
mov
and
loopne
lea
das
bound
mov
xchg
or
xor
add
bound
mov
mov
cmp
outsl
test
lock
fbstp
fstpl
push
sbb
cld
xchg
xchg
bound
int
xor
xchg
data16
stos
cmp
mov
std
inc
pop
jnp
or
cmp
cld
in
test
xchg
lret
push
mov
iret
push
jl
std
xchg
lret
sub
mov
mov
clc
sahf
xlat
cmpsl
add
bound
lret
mov
adc
or
or
dec
in
pop
mov
mov
outsb
add
ljmp
mov
cs
push
mov
mov
shlb
in
xchg
pop
pop
enter
mov
mov
loope
arpl
cmp
rcrl
jle
jle
add
dec
dec
mov
xor
push
mov
movsl
js
xor
inc
subb
std
mov
xchg
outsb
cmp
adc
in
je
sub
xor
mov
testb
jne
mov
push
enter
dec
mov
and
aas
imul
push
adc
xchg
jp
inc
lahf
aaa
in
mov
push
mov
push
lods
fst
xchg
js
jge
mov
imul
xchg
dec
mov
imul
dec
add
fs
pop
ljmp
xchg
mov
scas
inc
xor
sbb
cmp
movsl
mov
dec
xor
xor
lret
push
and
sbb
insb
push
add
in
push
mov
xchg
or
sbb
push
xor
mov
push
dec
and
dec
and
rcrl
clc
jmp
adc
add
adc
in
rcll
sahf
jle
aam
cs
sar
or
pop
adc
push
add
add
and
adc
lods
or
inc
adc
sub
clc
hlt
pop
or
dec
in
fldcw
fnsave
sarl
sbb
xor
or
mov
shl
push
inc
jg
xchg
add
outsb
sbbb
or
add
mov
dec
push
test
push
xor
jp
ficompl
push
mov
adc
jae
pop
mov
test
lds
dec
xor
push
das
add
negl
pop
cltd
add
rcll
clc
lea
loop
jb
jbe
repnz
lock
cmp
sbbb
scas
std
mov
lods
shll
cmp
stc
dec
dec
mov
nop
xchg
sbb
xlat
pop
jbe,pn
lahf
xor
sti
je
sub
cmp
loop
adc
sub
sbb
ljmp
add
mov
sub
repz
cli
ds
shl
ja
pushf
sub
xor
xchg
jae
cltd
in
jno
mov
insb
or
movsb
cmp
sar
mov
inc
ja
push
pop
jmp
mov
cmp
ret
mov
adc
push
xchg
inc
jecxz
or
int
mov
inc
ret
jg
mov
or
inc
clc
dec
or
sub
xchg
push
cmp
push
add
imul
jg
lods
int3
jmp
data16
push
outsb
movsb
mov
sub
into
in
jae
push
pop
f2xm1
cmp
lret
xchg
inc
stos
ret
adc
mov
pop
iret
out
data16
xchg
xchg
inc
pop
into
negb
add
in
insb
and
dec
mov
cs
aad
add
mov
jecxz
jns
imull
add
or
cld
outsl
fildl
in
mov
arpl
test
jle
cmpsl
into
ljmp
mov
pusha
or
lock
mov
ss
mov
loope
mov
inc
mov
imul
push
or
adc
movsl
sbb
and
push
cltd
mov
add
sub
push
push
push
add
subl
in
leave
push
jle
movsl
out
mov
mov
out
cmpsb
aad
bound
add
daa
cmpsb
in
ud2
sbb
sahf
add
inc
lahf
mov
jns
mov
cltd
add
iret
fcompl
dec
outsl
xchg
lock
jmp
out
push
mov
dec
in
and
in
fwait
sub
add
sub
add
shrl
stos
dec
fs
cmc
mov
dec
ss
add
inc
daa
outsb
jg
fwait
or
mov
cmpsb
jbe
call
insl
imul
stc
in
idivb
aas
adc
es
ret
pop
jo
in
mov
mov
int
push
test
xchg
adc
mov
cld
test
add
out
fs
inc
mov
adc
cmpsl
jae
movsl
or
mov
imul
cs
std
jne
push
in
fsubr
pop
xor
arpl
std
mov
movsl
xchg
pop
inc
xchg
hlt
outsb
mov
mov
scas
push
loop
push
dec
jge
icebp
js
cwtl
jge
loope
or
in
add
iret
imul
andb
stos
out
popf
lods
jle
mov
mov
int3
fcomi
xchg
sarl
mov
xorl
add
int
push
out
pusha
fmull
stc
push
pop
jb
dec
pop
jb
mov
hlt
loope
mov
or
arpl
jns
push
add
lret
pop
ds
movsb
je
sub
adc
in
lahf
xchg
lea
ss
mov
pop
xchg
pop
pushf
and
and
add
push
ret
sub
mov
adc
mov
sahf
in
shr
sbb
push
fwait
mov
sbb
add
inc
sti
inc
sbb
fs
nop
xchg
popf
sbb
je
mov
negb
dec
addr16
ret
sti
jmp
cvtdq2ps
cmpsl
scas
xchg
ret
inc
inc
orb
inc
inc
ret
add
xchg
data16
xchg
aas
insb
imul
clc
faddl
fbld
lods
inc
jnp
mov
xor
call
push
cmp
js
sbb
push
sub
jecxz
addr16
or
js
es
test
or
popa
nop
aad
pop
mov
or
mov
repz
inc
and
dec
mov
stos
xor
jo
imul
fmuls
push
rep
int3
push
lret
dec
imul
mov
fs
repnz
push
test
and
ja
testb
jp
aaa
xchg
roll
enter
pop
hlt
dec
fimuls
data16
mov
push
xor
jbe
add
bnd
and
cmpsl
or
lcall
ds
sbb
push
pop
mov
ret
cmpsb
and
dec
imul
popf
mov
js
fimuls
addb
in
push
jg
negb
flds
fmuls
cli
adc
fmul
mulb
arpl
cmp
stc
ljmp
pusha
push
inc
and
aas
scas
add
sub
imul
pop
mov
ds
dec
cmp
mov
aad
ds
inc
daa
mov
lea
pop
cld
roll
and
and
jmp
gs
mov
iret
aas
inc
dec
sub
lds
push
or
mov
xchg
mov
pop
les
jp
movsl
in
pushl
lock
dec
mov
sub
mov
and
cli
inc
push
jl
int
xlat
lds
icebp
mov
rcll
push
lods
adc
xlat
in
in
sbb
or
mov
xor
gs
jmp
sbb
pop
testb
dec
enter
shr
jbe
lods
les
bound
push
jmp
push
push
cli
outsl
jbe
mov
cmp
pop
mov
in
lcall
jnp
jns
cmp
jb
push
or
sarb
insb
scas
dec
insb
pop
scas
or
mov
test
je
push
cwtl
xor
cli
jb
mov
out
out
xor
test
jmp
or
mov
jno
xor
sbb
fs
push
into
push
aaa
mov
nop
push
fwait
cltd
push
das
hlt
jae
xchg
lret
cmp
sub
shrl
jno
add
inc
mov
and
xchg
mov
mov
adc
icebp
imul
incb
in
gs
or
rclb
cmp
ficompl
push
jl
dec
out
dec
addr16
fcom
rorb
cld
addr16
test
psubusb
xchg
mov
lds
jl
add
enter
mov
jle
lods
jnp
jbe
in
cmc
push
push
sbb
out
cmp
mov
mov
add
fwait
jns
and
add
jbe
je
adc
and
fwait
xchg
xchg
daa
adcb
xchg
hlt
adc
subb
imul
rorl
mov
decb
mov
jne
mov
cmpb
push
xor
cmp
ss
mov
add
iret
or
mov
dec
sbb
mov
mov
adc
rclb
cltd
push
sahf
inc
popf
lret
pop
adc
fistpll
add
sbb
sbb
xor
addr16
mov
cs
add
nop
pop
lods
add
cmp
das
mov
sub
inc
mov
and
jbe
inc
addl
inc
loop
mov
adc
hlt
dec
push
xchg
xchg
scas
aam
push
dec
scas
ds
jb
sub
adc
mov
dec
cmpl
cmp
aas
mov
mov
adc
pop
movb
xor
sub
in
mov
xchg
movsl
in
out
cmpsl
cld
inc
cmp
insl
mov
add
les
push
aas
imul
mov
cmp
sub
popf
or
xchg
movsl
mov
iret
addr16
dec
shrl
outsb
xor
jl
sbb
mov
cmc
lds
arpl
xchg
daa
fnstenv
outsl
mov
pop
sbb
subl
ljmp
sahf
inc
push
xchg
mov
cs
push
ljmp
cmp
call
pop
mov
jle
xchg
in
inc
xor
or
lahf
stc
cmp
mov
clc
adc
ljmp
mov
scas
jecxz
enter
mov
xchg
cmpl
cmp
stos
lods
xor
dec
ja
call
mov
shl
jb
xchg
push
test
daa
xlat
flds
xchg
ljmp
ret
sub
fsub
shlb
pop
mov
leave
ja
jmp
imul
ss
stos
lods
cwtl
roll
and
fistl
dec
fldln2
xor
cmp
stos
repnz
cli
xchg
xchg
dec
dec
aad
mov
push
push
stos
fistps
movq
clc
repnz
and
pushf
testl
outsb
in
ss
pop
xchg
rcrb
xor
outsb
daa
and
bound
adc
lret
cmp
and
dec
popa
lock
les
ds
cmp
jg
bound
cltd
pop
filds
loop
insl
sti
test
cwtl
cmp
cltd
push
pushf
mov
es
fdivs
xchg
in
in
ret
clc
and
mov
or
shll
lgs
ljmp
jecxz
dec
or
out
adc
out
repz
xchg
scas
rcrb
inc
add
jne
out
ss
xchg
mov
sahf
les
cmp
or
in
fldl
lret
xchg
pop
mov
dec
int
push
add
loope
sahf
out
mov
push
lahf
cmp
test
hlt
sbb
jns
imull
jge
jle
mov
shl
mov
pop
rcl
mov
jg
rorl
sahf
jle
xchg
xor
pop
stc
roll
cmp
leave
js
push
jp
rcr
hlt
sbb
mov
or
decl
xchg
cmpsb
cli
dec
mov
push
jmp
sbb
lds
arpl
icebp
int
or
mov
sub
lea
scas
mov
out
es
xchg
ds
sbb
test
inc
add
movsb
rcll
ret
ja
lods
int
xchg
std
inc
xorl
add
stos
loope
pop
jb
mov
mov
push
dec
leave
aam
xchg
hlt
xchg
sub
out
ja
mov
cld
cmpsl
jg
nop
xlat
inc
into
loopne
push
inc
fidivs
and
inc
xchg
aad
hlt
sti
dec
or
mov
popf
jnp
pop
out
roll
push
mov
fs
fcmovbe
lock
dec
inc
fwait
jge
sub
push
hlt
add
es
movsb
in
pusha
xchg
orl
subb
pop
dec
jbe
xor
adc
call
jmp
scas
jnp
dec
or
cmp
js
sbb
adc
je
mov
sub
add
push
mov
dec
aam
mov
and
shrl
lcall
add
jp
add
dec
int
fs
mov
lds
jmp
mull
cmpsb
cwtl
movsl
sbb
fimull
data16
in
pop
push
jb
outsl
jb
es
call
push
outsl
test
mov
clc
sbb
ss
ss
pop
fsubl
cmpsl
in
fsubl
nop
rorl
flds
fnstcw
xor
xchg
and
mov
test
push
pop
mov
rcrl
jae
jecxz
push
cmp
lds
addr16
inc
dec
push
bnd
jnp
jae
sarl
inc
cltd
cltd
ffree
stos
loope
inc
mov
and
jg
pop
push
out
fcmovnu
out
repnz
cmp
jno
push
jmp
sub
mov
movsb
jae
inc
lods
or
out
mov
jp
xor
test
jo
add
stc
jecxz
dec
mov
aam
add
dec
shl
sbb
pop
repz
push
xor
sarl
pop
bound
jl
xor
cmpsb
xchg
test
aad
push
sub
or
cmovno
adc
mov
mov
mov
mov
pop
adc
test
fisubs
out
jp
mov
cs
dec
xor
lahf
test
inc
jmp
rcrb
dec
xor
dec
push
call
xchg
jp
out
cmp
pop
xchg
cmp
lods
call
leave
cmc
divl
xor
jb
fildll
fdivl
in
std
and
push
and
jnp
pop
in
mov
xor
loopne
mov
push
push
mov
xchg
inc
push
ret
int3
mov
sbb
gs
std
out
xchg
xchg
sbb
cltd
pop
mov
dec
xchg
out
dec
and
dec
jae
divl
cmpsb
adc
mov
aas
mov
loope
sub
clc
pop
stc
int
nop
add
or
pusha
mov
mov
sbb
fs
mov
cmpb
dec
lcall
data16
orb
add
int
out
or
aad
and
sbb
push
imul
ds
iret
pop
fildl
popa
cli
mov
aas
inc
xchg
lock
or
lods
aas
nop
push
cmp
sbb
ret
repz
xchg
repz
pushf
aam
jecxz
mov
add
lock
es
sub
mov
and
mov
pop
sub
push
movsb
popa
in
pop
cmpsl
ret
shrb
pusha
sub
mov
and
sub
cltd
push
mov
push
insb
dec
cmp
ljmp
ljmp
push
xor
inc
out
jg
in
scas
lds
outsl
stos
inc
push
lcall
int
cmp
addr16
fbstp
es
shrb
pusha
sub
bound
cwtl
notb
push
add
ds
adc
sbb
dec
xor
sbb
fwait
or
lock
mov
push
insl
insb
test
xor
rcl
out
cmp
addr16
icebp
daa
pop
loopne
js
movsb
call
sarb
std
mov
adc
cli
fwait
xchg
cmp
dec
jae
int
into
lea
cltd
stos
mov
je
addr16
sbb
jno
movsb
push
mov
pop
std
cmpsb
jno
lock
lea
std
xor
lret
xor
sub
jl
ds
in
push
iret
dec
imul
dec
mov
dec
addr16
call
scas
pop
mov
mov
loop
xchg
and
mov
into
arpl
mov
test
mov
dec
ja
shrl
in
sub
dec
and
outsb
cmpsl
or
stos
dec
lret
xlat
inc
call
or
xor
pop
fadds
mov
out
dec
imul
lods
push
nop
jo
leave
data16
addl
andb
in
bound
fcompl
stos
out
mov
mov
insb
xchg
xchg
hlt
inc
pop
cld
mov
mov
cmp
ljmp
sbb
jl
or
out
in
ret
bound
std
and
pop
push
ffreep
sub
mov
jno
mov
adc
dec
pop
mov
or
jp
call
or
sarl
xchg
sbb
ret
in
in
fadds
call
loope
test
mov
jne
arpl
xor
push
andb
or
pop
jne
lock
nop
or
or
sub
js
sbb
mov
mov
mov
sub
out
mov
insb
out
sbb
lods
inc
mov
cmp
dec
nop
cld
test
sbb
jbe
jle
mov
sub
inc
sti
clc
aas
sub
stos
sub
sub
mov
cltd
enter
inc
lret
cmpsb
mov
inc
mov
in
xor
inc
add
into
sub
sti
or
pop
leave
mov
mov
lea
sbb
pop
mov
add
outsl
xchg
jo
push
add
into
ficomps
ljmp
dec
dec
jns
dec
cmp
push
es
mov
stos
leave
hlt
addr16
mov
mov
mov
sti
inc
and
jmp
arpl
testb
in
xchg
mov
xor
cmc
add
push
or
fistpll
imul
imul
out
fsubrl
daa
in
imul
sahf
cli
ret
adc
in
icebp
and
add
xor
jge
ret
fcmovne
pop
cmp
mov
mov
jl
fnstsw
sahf
sarl
dec
mov
jae
lret
jle
sub
xchg
xor
addr16
push
rcrl
push
adc
cmc
sub
inc
mov
insl
jae
pusha
or
notb
and
test
mov
ret
jae
push
repnz
or
stc
ja
mov
sub
push
jne
mov
nop
add
and
jbe
jp
and
loopne
ss
stc
bound
movl
pop
int3
pop
psubsb
cmpsl
test
lds
jnp
clc
dec
or
mov
shrl
mov
movsl
mov
cli
push
pop
or
xchg
out
cwtl
int
jne
imull
iret
out
mov
repnz
data16
push
out
imul
lea
in
xchg
mov
insb
mov
inc
add
pop
jae
and
adc
cmp
mov
inc
mov
xor
mov
cli
incb
cmp
cwtl
xchg
cmp
mov
cmpsl
mov
pop
xor
call
sub
jl
and
out
mov
leave
lods
rorb
fisttpll
inc
or
pop
and
push
imul
inc
push
test
cmp
subl
frstor
xlat
lock
outsl
lsl
negb
shrb
in
and
imul
fistpll
je
pop
lahf
dec
and
icebp
sbb
test
xchg
lods
test
ret
jns
xchg
lahf
mov
push
xchg
jne
sti
jb
cli
addr16
cmp
jo
xchg
inc
ror
fwait
add
adc
jbe
pop
repnz
lret
xor
fisubs
xlat
add
xor
cli
cmp
pop
xor
pop
inc
jmp
sub
xchg
lock
leave
jb
rclb
adc
cwtl
scas
mov
mov
mov
cmpb
adc
ljmp
in
scas
inc
in
imul
push
mov
mov
lock
loope
xor
test
and
addr16
mov
mov
inc
sbb
sbb
mov
bound
xlat
sbb
sub
sahf
sub
sub
sbb
sbb
push
sbb
dec
sbb
adc
fsts
jl
les
stos
dec
mov
test
insb
iret
daa
push
int3
notb
push
scas
cwtl
leave
cmpsb
repnz
adc
cmp
cmpl
pop
jg
and
imul
in
in
cltd
jbe
shrl
xchg
js
jmp
mov
pop
sbb
ja
mov
rcr
scas
fs
mov
xchg
mov
sbb
mov
pushf
sub
clc
scas
les
jbe
dec
sbb
push
cmc
shlb
jns
scas
pop
pop
jl
sbb
ret
push
lods
mov
movsb
cltd
dec
xor
outsl
pushf
je
mov
lds
repnz
jo
nop
or
dec
loope
out
insl
inc
scas
adc
ficompl
mov
cmp
je
push
mov
lea
out
xchg
adc
xchg
dec
call
aad
in
aaa
das
sbbl
in
or
jecxz
xchg
adcb
push
inc
incb
mov
inc
addr16
cmpl
or
push
push
xlat
xchg
ret
push
inc
xchg
sbb
lret
cmpsl
shll
repz
push
pop
ret
cwtl
popf
or
jns
pop
aad
movsb
add
push
adc
adc
xchg
jg
pusha
mov
jle
loope
icebp
nop
aam
and
push
js
xor
cmp
pop
push
dec
sbb
add
loopne
dec
enter
jbe
pop
cmp
xor
lods
rolb
cwtl
pop
jns
subl
xor
imul
pop
into
int3
loopne
icebp
xchg
mov
push
stc
pop
out
mov
jnp,pt
mov
xor
mov
mov
repnz
ss
mov
mov
mov
inc
popa
inc
dec
pop
jl
sti
cwtl
test
xchg
clc
imul
lcall
pop
xchg
fsubrs
inc
jmp
sbb
mov
loopne
push
movsl
jecxz
push
sbbb
mov
shl
xor
imul
pushf
out
or
mov
cmc
or
dec
or
lock
mov
or
jle
xor
lahf
adc
imul
out
cmc
loope
xchg
stos
jg
push
fldcw
dec
lods
stos
jb
add
aad
jmp
adc
lret
into
stc
loop
in
add
xor
ljmp
cmpsb
adcb
enter
sbb
mov
cmc
arpl
add
cmpsb
lahf
push
push
mov
inc
aas
repz
sahf
insb
add
pop
inc
pop
xor
push
sbb
sbb
and
dec
rolb
cltd
xor
jecxz
mov
dec
xchg
add
int
pop
mov
jae
repz
mov
pop
cmp
mov
cmpsb
daa
xchg
or
cmpsl
shlb
sbbl
inc
cmp
sbb
ret
jnp
cmpsb
je
mov
frstor
or
add
mov
inc
ljmp
clc
xchg
pop
inc
stos
pop
mov
xchg
xchg
sbb
lret
cwtl
adc
roll
fdivl
stc
daa
pop
dec
jbe
pop
es
mov
adc
xchg
loop
shr
add
sbb
lods
popa
push
jo
jb
enter
cwtl
scas
fistl
out
aaa
inc
fimuls
roll
or
pop
inc
lds
mov
dec
adc
cmp
lea
fcoml
inc
xchg
repnz
mov
loope
inc
stc
pop
test
dec
je
adc
fwait
jg
mov
insb
push
sub
and
negl
subl
dec
rolb
pop
jno
push
iret
add
push
mov
in
shlb
and
aad
sbb
pop
push
cmc
loop
out
mov
cmp
push
sbb
out
movsb
push
push
pop
jae
mov
cwtl
adc
ret
rcrl
push
leave
sbb
movsb
jmp
shlb
rcrl
push
jae,pt
jno
adc
sub
dec
push
fldl
notb
dec
les
xchg
inc
das
daa
stos
jg
push
jg
imul
push
push
aad
lahf
pop
fsubl
add
jg
or
test
int
rorl
pop
test
add
es
jbe
push
lock
orl
fs
aaa
repnz
or
dec
push
in
adc
scas
adc
fistpl
cmpsb
fmuls
jae
dec
push
adc
pop
ss
dec
pop
es
data16
lods
std
adc
add
lea
and
daa
rolb
filds
jo
lret
add
lahf
cmp
shl
mov
xlat
mov
or
fs
mov
mov
mov
adc
cmc
inc
or
mov
les
jns
mov
not
fwait
mov
sbb
icebp
inc
out
sahf
xor
ja
clc
popf
mov
sbb
adc
ret
mov
mov
fldenv
lea
sbb
lds
in
push
and
jnp
cmpsb
iret
xchg
outsl
dec
shlb
sub
repnz
push
push
sarb
mov
mov
push
stos
fbld
dec
ljmp
or
inc
mov
add
xor
push
cmp
std
in
mov
movsb
push
pop
cmp
cs
ja
into
test
sub
lock
cmp
xor
ss
pop
or
mov
add
jb
inc
test
popa
shrl
mov
hlt
inc
mov
jp
add
add
ret
movsl
add
xchg
loope
or
add
cmpsb
add
xor
push
es
stos
add
pop
dec
pop
pop
cmc
js
or
push
sub
adc
fwait
jg
dec
dec
xor
imul
aad
das
out
mov
jmp
sbb
pcmpgtw
call
push
jp
jno
sarl
mov
lods
push
sub
cmp
popl
mov
mov
jle
cmp
dec
clc
jecxz
xchg
jl
add
mov
xchg
mov
adc
pop
pop
repnz
popa
push
les
adc
inc
mov
aad
and
lods
lods
inc
ss
jge
fidivrl
sub
imul
mov
loopne
arpl
into
mov
scas
out
or
jnp
inc
add
push
addr16
xlat
fwait
stos
clc
fcmove
testb
inc
push
mov
mov
push
out
aas
xor
mov
mov
roll
in
mov
push
aad
xchg
addr16
sbb
jg
sbb
jnp
arpl
stc
push
xchg
cmpsl
nop
xchg
inc
inc
xlat
pop
push
cmpsl
add
mov
inc
aaa
push
or
xchg
aas
test
xchg
dec
jb
das
cmp
jl
mov
or
lret
mov
sbb
cli
inc
aaa
xchg
mov
lods
shrl
ds
fnstenv
mov
testb
inc
arpl
mov
mov
mov
mov
cli
cmp
das
mov
cmpsb
pop
loopne
pushf
jp
fst
into
pop
mov
jge
push
adc
xchg
in
xor
ja
push
push
les
sub
add
sub
xchg
mov
sub
and
add
xchg
cmpsl
push
add
jecxz
aas
dec
sub
andb
cmpsb
push
test
ret
mov
fisubrl
rcrb
mov
fistpl
fs
and
inc
ret
roll
int
les
lret
cmp
pop
lds
add
or
adc
jb
mov
pusha
lret
addr16
cmpsb
test
sub
sar
xchg
fwait
enter
dec
movsb
int
xor
pop
or
outsl
or
hlt
mov
jae
pop
mov
push
movsb
arpl
scas
xlat
or
jp
out
rcrb
icebp
into
popf
jo
pop
fsubl
pusha
int
arpl
es
data16
mov
insb
cmc
cmp
or
push
js
jge
movsl
dec
inc
push
test
popl
repz
push
or
mov
sahf
and
cmpb
xchg
je
mov
int
inc
dec
lcall
xor
aas
decl
pop
jge,pt
or
std
orl
mov
sub
push
push
bound
shll
shrl
mov
pop
xor
and
mulb
add
or
iret
pop
insb
call
or
aad
data16
addb
mov
das
xlat
lds
mov
dec
sbb
mov
ljmp
rcrb
xchg
rcl
and
or
xchg
jb
adc
dec
mov
pop
repnz
int3
xor
xchg
pop
jns
js
test
mov
and
and
xor
addr16
daa
ret
inc
mov
call
jb
lods
aaa
or
cli
dec
dec
mov
or
movsl
insb
arpl
les
dec
fnstsw
ret
in
pop
sbb
aaa
sub
and
insl
sbb
int
mov
popl
add
xorb
shl
inc
jl
outsl
jg
mov
pusha
fstpl
dec
hlt
sub
repnz
adc
adc
mov
fdivrs
inc
pop
es
or
lods
sbb
inc
ja
jnp
inc
or
sbb
mov
jmp
jg
jl
or
push
lcall
cmp
inc
and
dec
adc
pop
pushl
icebp
imul
and
je
nop
adc
lcall
jge
clc
mov
jnp
adc
dec
pop
rorb
test
inc
imul
pop
adc
fmull
xchg
sub
pushf
dec
iret
or
cld
jno
loop
sbb
xor
fs
mov
sbb
and
and
sbb
sbb
push
xchg
jle
lock
pop
jle
or
clc
xchg
test
sub
mov
iret
shl
push
aad
xor
or
dec
adc
call
sahf
mov
daa
add
xor
hlt
inc
inc
jne
orb
iret
xchg
stos
test
push
movsw
mov
and
mov
popa
mov
xor
das
cmp
mov
xchg
int
aad
bound
in
fiaddl
fstpl
jb
mov
adc
and
aas
clc
and
aam
out
cs
test
mov
push
stos
push
lahf
push
mov
lock
lret
push
jbe
enter
add
or
bnd
add
les
adc
loop
sti
mov
mov
je
jecxz
outsb
int3
fimuls
subb
lds
jecxz
stos
sub
mov
inc
cmp
inc
cmpsl
or
add
outsl
push
sti
mov
push
mov
lcall
mov
jmp
inc
mov
and
enter
movsl
xlat
adc
nop
cmpsl
or
mov
cmp
push
mov
subb
push
inc
dec
into
out
lahf
sti
push
push
inc
mov
rdtsc
mov
icebp
loopne
movsb
pop
jne
into
push
xchg
in
cmp
add
mov
fadd
or
imul
cwtl
xchg
cmp
dec
jle
inc
sub
dec
jmp
lret
mov
inc
xchg
push
cld
or
mov
pop
nop
dec
cmc
add
cmp
pop
add
insb
leave
jl
add
ja
jno
adc
inc
or
cmp
loopne
and
test
popa
loope
cwtl
outsl
lahf
xor
mov
and
enter
aaa
xchg
push
fmuls
insb
jmp
insl
test
mov
roll
cwtl
or
mov
hlt
xchg
xchg
addr16
das
clc
pushf
xor
push
adc
stc
and
shrb
dec
and
mov
and
movsb
insl
out
xchg
push
jns
and
cld
popa
jae
orb
sbb
pop
add
push
repnz
int
mov
mov
mov
addr16
jo
xchg
sub
adc
jae
popf
lods
add
arpl
imul
mov
imul
push
mov
bound
rorl
scas
jbe
push
out
dec
sub
jecxz
int
scas
xchg
cmp
jno
fcmovu
sbb
je
test
imul
test
mov
jb
dec
arpl
mov
shrl
aam
cltd
jb
xor
sub
push
dec
scas
cwtl
xor
in
std
sub
xor
pop
inc
aas
add
das
mov
mov
in
add
pop
add
lods
pop
in
in
xor
pop
imul
in
int3
aad
and
mov
cmp
sub
fildll
push
mov
arpl
pushl
xor
xchg
push
stos
into
xor
sbb
mov
sub
ret
push
repnz
daa
aas
ds
loop
dec
je
std
cmc
mov
shl
cmp
jle
int
setg
cwtd
into
cld
xor
in
xor
inc
pop
inc
fcmovnu
sbb
sub
int
aam
das
mov
or
pop
ret
and
dec
push
xchg
in
lock
xchg
pusha
test
inc
mov
jbe
out
mov
mov
inc
xor
inc
fbstp
lcall
push
loop
push
mov
push
jmp
std
hlt
shll
fcomi
pop
les
adc
rolb
sub
and
jnp
loope
addr16
inc
faddl
lcall
pop
push
scas
scas
mov
sub
iret
jle
cltd
insl
clc
adc
and
cltd
shlb
and
test
push
ret
lods
jmp
and
out
jg
push
call
or
mov
ljmp
pop
jmp
in
addr16
lock
jmp
gs
mov
mov
lcall
push
int3
popa
inc
jae
pop
and
test
popf
or
outsb
in
cmpsl
inc
lret
loop
lea
lret
pop
dec
dec
into
ss
pop
and
popa
add
and
loopne
inc
lcall
dec
mov
movsl
repz
push
push
fiaddl
popa
cmp
xchg
xor
jne
sbb
cmpl
inc
mov
push
das
push
leave
sub
frstor
push
mov
adc
lret
shll
mov
or
jge
mov
mov
pop
adc
icebp
mov
inc
fstl
adc
push
xor
dec
aam
pop
push
adcl
push
add
and
add
sti
subb
pop
sahf
push
xchg
sub
push
push
addr16
scas
hlt
dec
aaa
lret
push
and
test
mov
dec
nop
push
dec
sbb
orl
loop
xchg
je
ja
aas
jns
orl
or
jno
gs
and
lret
sbb
loop
ja
inc
out
int
pushf
xchg
xchg
lds
cmpsl
pop
pminub
fstps
add
ss
adc
in
ss
and
xor
out
cmp
jge
cmp
cmp
xor
lcall
add
in
or
mov
mov
mov
shl
mov
mov
adc
inc
mov
stc
fsubs
inc
mov
clc
inc
lods
adc
or
mov
movsb
xor
gs
inc
loopne
inc
dec
sbb
int
popf
push
jmp
inc
adc
jo
xchg
icebp
subl
mov
sarl
scas
dec
push
popa
icebp
fwait
stc
sbb
mov
pop
pop
mov
popf
or
lret
pusha
jge
and
xor
cmpsb
sahf
push
fisttps
sub
xchg
cmp
xchg
jae
mov
jmp
mov
int
push
pop
jg
dec
dec
xchg
dec
inc
fcom
mov
pop
push
and
push
nop
scas
dec
sbb
jmp
mov
loope
repz
and
daa
popf
mov
ss
add
mov
sti
test
mov
cli
inc
xchg
fsubrs
add
loopne
gs
test
push
jno
add
jmp
dec
push
jno
push
inc
incb
cmpsb
sbb
nop
push
mov
test
dec
loop
inc
lret
into
fmuls
ret
cli
pop
daa
inc
inc
in
fucompp
fstl
adc
gs
decb
and
xor
mov
testl
or
leave
movsl
fstpt
es
xchg
and
sub
in
stos
push
xchg
mov
mov
push
xchg
fimuls
push
idiv
lahf
sub
add
push
test
and
imul
mov
mov
outsl
mov
jmp
and
call
hlt
sbb
push
mov
push
jne
outsb
xor
into
cmp
movsb
sub
lock
lret
ljmp
imul
xor
sbb
mov
fsubrs
add
mov
xchg
sub
pop
imul
sbb
push
and
in
dec
xor
stos
js
dec
lret
sbb
inc
fwait
shll
dec
jbe
push
add
xchg
insb
sub
cmp
cmp
jb
cli
int
pop
rclb
es
imul
cmp
fistl
cmpsb
and
push
xor
jp
repz
icebp
pushf
dec
sub
mov
leave
iret
pop
bound
pop
fisubrl
mov
jp
bound
or
cmp
xchg
dec
dec
mov
rclb
mov
inc
xor
sbb
mov
push
call
sbb
repnz
or
jnp
insb
add
lcall
shl
mov
inc
popa
mov
jmp
mov
daa
scas
mov
mov
jg
adc
mov
andl
xchg
or
lods
inc
fldcw
and
push
xchg
lea
pop
and
sbb
pusha
and
mov
stos
cmp
xor
push
cs
cmp
fdivrp
dec
jle
and
and
lods
sahf
insb
dec
rorb
dec
jmp
out
or
or
dec
mov
cmc
mov
repnz
dec
or
cmp
cli
shll
rorl
jp
adc
in
aam
sbb
fstps
das
ja
mov
cmp
stc
cmpsb
icebp
sbb
outsb
adc
in
out
mov
lcall
int3
stc
or
inc
xor
sbb
dec
ss
mov
and
out
push
pop
jo
test
rep
stos
fldcw
jg
je
rcr
outsl
jge
sbb
out
gs
inc
jb
call
das
daa
cli
popf
rol
add
sub
std
xchg
aam
iret
inc
addb
sbb
aaa
mov
mov
add
ret
mov
add
xor
cmp
nop
or
adc
sub
imul
out
dec
cmp
xchg
sbb
lea
stos
dec
cmp
jmp
add
mov
add
pop
sub
mov
sbb
in
push
gs
lods
dec
mov
push
mov
sbb
arpl
fcoml
imul
ret
push
scas
cmp
dec
sahf
fisttpll
jp
dec
sbbb
call
pop
push
dec
loope
ja
popa
in
mov
sub
lret
pop
fs
and
lret
xor
cwtl
lcall
xchg
je
mov
aam
dec
and
bound
add
add
sahf
imul
subb
and
inc
cmpsb
push
arpl
je
outsb
xorb
daa
cmpsl
cmpsb
or
or
xchg
mov
ss
adc
pusha
lret
mov
pop
sub
pop
cmp
pop
push
sub
clc
popa
mov
sub
int
add
jg
sarl
jbe
sti
iret
test
mov
dec
cld
or
add
cmp
rcrl
les
dec
jmp
push
pushf
ss
mov
out
jecxz
mov
jecxz
cmp
imul
mov
mov
out
mov
push
adc
xchg
fdivrs
xor
cld
mov
std
pop
jecxz
in
jbe
lods
dec
mov
lret
pushf
jle
sarl
xchg
das
pusha
ss
adc
lock
or
cmp
jo
adc
out
inc
addr16
inc
les
sti
sti
ret
filds
cli
test
mov
loopne
out
outsl
ror
scas
femms
mov
push
sarl
and
jbe
fbld
int3
les
sub
push
enter
jo
push
ljmp
fs
and
loopne,pt
lock
dec
cmp
jecxz
xchg
pop
xchg
cmp
mov
in
pop
cmp
out
jl
push
add
and
int
sub
and
lahf
js
inc
outsl
jp
test
fstpt
cld
mov
outsl
fidivl
xor
imul
push
out
sub
mov
xor
pop
mov
lret
gs
xchg
sub
mov
flds
cltd
test
out
jge
xor
cmp
pop
outsb
jb
fucomip
inc
cmc
lcall
inc
pop
adc
jmp
out
dec
test
mov
aad
nop
dec
dec
div
pusha
mov
leave
sbb
mov
sbb
mov
imul
pop
sarl
mov
dec
ja
test
jns
sbb
std
xchg
js
dec
test
ss
push
mov
jnp
mov
push
lret
sbbb
inc
cmp
pusha
repnz
xlat
jnp
inc
lret
push
push
adc
dec
add
lahf
neg
sbb
inc
xchg
sub
mov
push
push
or
pop
shll
std
ss
and
aas
lock
repz
lret
addl
daa
push
ljmp
cwtl
push
xorb
jb
add
ret
test
pop
data16
or
fcom
nop
jae
xor
fcmovne
mov
loope
ss
insl
repnz
cmp
loop
xchg
xchg
pop
fadd
mov
es
push
repz
aam
sbb
icebp
dec
fs
sub
or
push
fucomi
ret
mov
pusha
pop
or
jg
clc
dec
js
mull
aas
in
jnp
jl
cld
insl
sti
stc
xchg
out
popa
out
rorl
mov
mov
adc
add
je
mov
out
in
mov
mov
add
xchg
jno
and
into
xchg
or
dec
xor
jae
sbb
adc
jb
cmpsb
mov
arpl
push
pop
lret
mov
push
adc
ret
dec
add
ja
aas
xor
jge
add
in
rcll
cmpl
sub
pop
dec
fcmovnb
int
je
mov
aad
incb
adc
sub
inc
add
mov
cmp
movsb
sahf
insl
ret
movb
inc
or
pop
or
inc
fcomps
daa
pushf
adc
lock
push
cwtl
fwait
sbb
jge
pop
xor
xchg
xor
cmpsl
mov
loopne
push
icebp
lods
scas
and
cmpsl
jle
mov
jb
xchg
aas
jp
cwtl
cld
pop
mov
mov
int3
mov
in
inc
std
sub
fdivrl
outsb
add
pop
daa
andb
test
loopne
or
test
sti
out
lret
mov
ss
pop
adc
movsl
xchg
add
testl
int
fidivrs
and
les
and
rcll
pop
xlat
repnz
insb
cmp
add
lret
in
mov
cmp
scas
xchg
stos
cmp
rolb
sbb
mov
xor
das
push
loop
push
shrb
or
cmp
push
roll
icebp
jns
pop
jbe
pop
add
sub
ret
xor
cs
cmp
or
or
jae
rcl
xor
test
sub
jmp
mov
push
dec
les
adc
inc
xchg
mov
inc
push
mov
das
gs
ja
stos
adc
inc
or
mov
or
mov
add
xchg
xchg
movsb
dec
and
xchg
pop
dec
repnz
cmp
in
or
cli
call
mov
sub
jbe
mov
jno
lret
adc
dec
push
xlat
xor
xchg
popa
or
jmp
outsl
adc
nop
inc
mov
imul
aad
mov
mov
cld
xchg
or
ss
in
ljmp
sub
xchg
mov
pop
lea
into
fwait
or
mov
mov
cmp
push
out
pop
mov
push
mov
enter
xchg
fiadds
adc
leavew
jb
or
bound
je
mov
das
stc
inc
cmp
mov
jge
mov
pusha
push
jl
in
fistl
orw
mov
mov
sbb
push
xor
in
inc
sub
pop
lds
or
sbb
mov
dec
jg
cmp
ss
push
cltd
loop
xchg
dec
xchg
cmpsl
pop
inc
scas
add
ret
add
bound
mov
insl
or
into
repnz
insb
popa
mov
int3
mov
xchg
pop
adc
pop
js
inc
jo
fiaddl
outsb
xchg
nop
xchg
lret
mov
loop
cmc
mov
push
pop
into
imul
sub
test
shlb
test
adc
dec
scas
pop
mov
aad
aas
stos
jae
test
xchg
and
in
cmp
rcrb
jl
and
xchg
mov
data16
loopne
testb
push
jo
xchg
popf
cs
fs
sub
and
adc
stc
std
popa
or
test
add
sub
jnp
in
ret
add
jmp
mov
pop
filds
lret
push
divl
mov
xor
pop
cltd
inc
sbb
push
jmp
into
into
and
mov
jb
push
dec
push
mov
xor
mov
sub
sub
adcl
jmp
pop
push
sar
and
cmpsl
fwait
dec
add
loopne
xchg
mov
pusha
repnz
lret
pop
sbb
jp
jb
or
jb
call
clc
repz
imul
aaa
add
sbb
loop
lahf
dec
outsl
sub
inc
loop
aas
addr16
outsb
xor
pop
stos
fcomps
xor
imul
fists
dec
out
xchg
cwtl
mov
ret
inc
outsl
mov
jmp
je
jmp
push
stos
adc
mov
pop
push
fiaddl
fidivl
cmpsl
dec
inc
add
icebp
repnz
sub
xor
cmpb
xor
ds
push
in
outsb
in
and
cwtl
add
inc
adc
xor
jg
das
jl
stc
pop
fadd
inc
xor
shlb
push
mov
outsl
test
jmp
rorb
jl
cmpl
mov
in
dec
push
into
cmp
fsubrs
sbb
inc
loop
xchg
stos
cmc
test
xchg
sbb
insl
push
popa
xchg
ja
sub
sub
mov
push
cld
sub
pop
or
push
or
cmp
pop
sub
out
int3
lods
rorl
out
or
pop
pop
fstpl
stos
nop
cltd
repz
mov
addr16
add
stc
mov
das
pop
xchg
outsb
loop
xor
push
jno
jle
push
xchg
pop
lret
scas
addr16
sub
inc
popf
addb
adc
shlb
xor
sbb
lock
dec
mov
call
sub
pop
cmpsl
stos
push
out
scas
aam
cld
push
imul
mov
mov
adc
xor
push
push
mov
push
dec
pop
lds
sbb
mov
pop
repnz
or
das
hlt
mov
mov
inc
test
js
shufps
shll
ljmp
rcl
sarl
jge
fyl2xp1
dec
pop
sbb
or
outsb
bound
ds
mov
les
rolb
call
push
dec
sbb
xchg
jno
cmpsl
inc
leave
or
sbb
jb
out
cwtl
dec
leave
je
std
jae
aas
xchg
stos
sub
loop
aaa
add
push
add
in
inc
and
push
mov
cmp
iret
out
outsl
xchg
das
push
aam
jne
fsubl
inc
cmp
mov
add
jns
insb
xor
mov
cmp
outsb
push
outsb
jmp
orl
mov
shll
lea
sub
hlt
fcoms
inc
sub
xor
jne
pusha
mov
sub
inc
data16
inc
test
sbb
repnz
push
xchg
outsl
or
and
dec
popf
pusha
xor
and
inc
adc
and
roll
sarl
xor
pop
add
pop
xor
push
pop
or
cmp
cmpsb
cmp
insb
jecxz
cld
lahf
adc
inc
xor
sub
lahf
inc
jl
xlat
mov
cld
test
cli
cs
dec
and
dec
cmp
pop
sbb
ds
or
mov
xchg
dec
xchg
out
lret
or
cmp
nop
push
ret
mov
call
mov
xor
mov
mov
add
in
mov
inc
and
mov
mov
xchg
push
stc
xchg
dec
and
out
ret
inc
mov
pop
rorl
push
mov
popf
pop
sbb
pusha
and
sub
xor
imull
sub
addr16
dec
addr16
mov
cmp
push
ja
or
push
and
xchg
sarl
test
sub
into
xchg
jno
xchg
cmp
lea
lcall
push
fbld
add
adc
loope
out
inc
push
daa
outsl
in
stos
adc
pop
fimuls
shll
xchg
outsl
scas
sbb
insb
push
inc
adcl
imul
sbb
adc
or
add
sahf
xor
xchg
adc
cmp
sbb
ljmp
in
lds
aad
mull
sub
or
mov
sti
lcall
mov
out
dec
sub
imul
jge
sbb
sbb
enter
bound
and
ljmp
mov
sbbb
sbb
jl
xlat
xor
addr16
adc
adc
loop
add
fsubl
xor
loop
pop
mov
adc
in
fwait
mov
aam
sub
push
mov
loopne
in
jnp
cmpsb
pop
mov
ljmp
xchg
or
inc
lods
push
xchg
sbb
sbb
out
pop
adc
mov
xchg
lret
inc
ljmp
and
mov
mov
adc
dec
mov
inc
cmp
cmp
mov
mov
in
push
mov
cmpl
push
fs
insb
enter
xchg
sub
or
add
negl
je
sahf
andl
xchg
and
es
dec
push
lret
das
cmp
test
mov
in
sahf
ret
sbbb
jae
lcall
mov
lods
and
jmp
cmp
cmp
or
mov
sbb
fnstenv
ret
xchg
push
jno
in
dec
pop
jmp
mov
sbbb
xor
movsl
imul
dec
and
shr
leave
inc
push
push
jl
fsubs
add
mov
push
dec
lds
sub
in
pop
hlt
jb
cmp
and
out
fidivs
aad
xchg
pop
shlb
adc
mov
or
or
mov
popa
mov
cmpsb
pop
jmp
aas
test
sub
loope
mov
mov
xor
popf
fcmovu
outsb
pop
in
mov
mov
aaa
fisttpll
push
rorl
popa
sub
cmp
sbb
popf
imul
cli
mov
sub
lcall
imul
xor
cmp
pusha
daa
movsl
jge
mov
lea
lret
xchg
sub
test
and
iret
push
lods
pop
pop
dec
enter
cmp
cli
jl
ds
shlb
rcrl
adc
aas
pop
or
out
jecxz
xchg
cmc
mov
xchg
test
mov
mov
out
dec
pop
adc
scas
les
inc
cmp
enter
enter
es
ret
sbb
sar
test
movsb
repz
sub
push
sbb
cmp
dec
inc
sbb
negb
int
sub
pop
ds
dec
aad
out
idiv
pop
jle
xchg
mov
stc
pop
pop
repnz
stos
dec
int
pop
and
cmc
pushf
lods
jnp
jle
mov
test
add
adc
mov
xor
and
xchg
repz
pop
clc
cmp
jb
jbe
scas
fists
andl
iret
out
orb
sti
jnp
aad
or
pop
cmp
nop
pop
jecxz
sbb
push
add
movsb
dec
es
pop
jg
lea
push
cld
popa
push
fldenv
mov
add
mov
jp
inc
and
jmpw
sbb
mov
cmpsl
lret
call
push
xchg
test
xchg
jae
mov
xchg
and
fildl
or
negl
repnz
notl
inc
sub
lret
sub
outsl
xchg
lret
ss
fwait
imul
mov
jnp
mov
insb
jnp
hlt
mov
xlat
nop
xchg
and
fimull
pusha
daa
js
cmpsl
cwtl
loop
and
vucomiss
inc
mov
xchg
flds
pop
cmp
pop
int3
pusha
xor
pop
hlt
cmp
mov
lret
sbb
filds
leave
cli
mov
repz
jecxz
movsl
imul
jmp
cmp
sub
testl
movsl
cmc
mov
and
cmp
rcr
mov
out
sahf
xchg
pop
mov
out
popa
stos
and
mov
cli
inc
add
sbb
cmp
addr16
cli
xchg
mov
js
daa
outsl
imul
pop
or
or
sub
or
je
dec
cmp
in
pop
dec
out
testl
mov
add
stos
fmull
xchg
popa
inc
sbb
jae
push
and
mov
ret
mov
cld
push
add
adc
bound
push
inc
add
shlb
sub
adc
xor
js
gs
mov
sub
adc
lret
dec
mov
pusha
sbb
lods
out
movsl
test
mov
fildll
ss
cmpb
dec
sub
jno
jbe
jp
push
fsubrl
imul
fcoml
aam
repnz
clc
adc
pop
push
cmc
lret
pop
cmp
outsl
xchg
cmpsb
fmul
cmp
mov
insl
test
xchg
and
and
pushf
inc
fimull
jp
bnd
jno
mov
cmpsb
mov
push
jg
sbb
xchg
pop
sub
leave
jne
aad
or
popf
lret
pop
insb
mov
jl
sbb
add
ljmp
test
repnz
fwait
push
es
stc
pushf
push
mov
mov
out
jmp
out
xor
adc
xor
into
cli
jo
jg
cmc
pop
decl
cmp
cmp
js
inc
mov
in
mov
adc
decb
mov
lods
jns
dec
push
movsl
mov
daa
movsb
das
outsb
icebp
popa
into
lcall
xchg
ja
push
shrb
es
pop
pushf
in
push
ja
popf
imul
mov
mov
cmp
push
sahf
xor
fstl
repnz
fsts
push
push
xchg
fdivl
jae
lock
mov
and
xor
cmp
popa
xor
jnp
ret
notl
cltd
jbe
dec
dec
sub
shrb
scas
inc
test
mov
les
cmp
mov
pop
neg
add
cwtl
xlat
dec
mov
outsl
sarb
lcall
jns
fcomip
xor
lock
int
push
daa
xor
jp
loope
outsb
push
mov
sbb
bound
add
mov
rcrb
mov
mov
mov
fistps
cs
rcr
add
fs
rclb
jae
sbb
gs
pop
fwait
xor
cmp
repz
cmc
pop
nop
movb
mov
xor
popf
xchg
mov
adc
lds
shr
mov
ds
in
and
mov
sbb
sbb
push
not
and
in
fdivp
out
sbb
repnz
scas
arpl
jmp
nop
imul
jge
aam
push
add
push
mov
inc
repz
js
mov
sub
repnz
xchg
aad
mov
sub
sbb
movsb
add
shlb
xchg
insl
mov
imul
data16
fisubrl
jne
test
pop
mov
loopne
shlb
subb
pop
les
push
dec
inc
xchg
mov
push
and
xchg
jp
sub
add
jo
insl
mov
mov
and
jge
dec
mov
out
rclb
fiadds
shl
xorb
mov
mov
fcmovnbe
push
icebp
or
xor
filds
roll
mov
outsb
lcall
jmp
call
push
mov
jbe
mov
mov
movsb
push
mov
push
leave
pop
int
in
sub
inc
lea
adc
ja
imul
push
lret
sub
in
xorb
jns
insb
test
in
cmp
jl
adc
out
lds
mov
hlt
push
dec
mov
cld
mov
idivb
mov
out
std
push
popa
scas
loop
in
dec
icebp
or
or
sarb
ror
cmp
icebp
pop
xchg
add
stc
cmp
in
rcl
or
daa
mov
mov
xorb
push
mov
add
push
and
adc
mov
mov
jl
mov
cmp
rep
sbb
iret
dec
sub
xchg
xor
inc
jl
gs
repz
adc
inc
roll
cmp
ja
add
add
stos
lock
jns
dec
js
xchg
movsb
in
in
jg
lods
mov
jg
mov
test
jmp
shr
ffree
in
dec
stos
cmpsl
jbe
mov
and
pushf
dec
sub
push
enter
enter
mov
popa
out
xor
push
or
pop
adc
mov
lds
xchg
add
rolb
xlat
sub
inc
and
and
mov
push
xchg
repnz
push
clc
scas
mov
pop
loop
add
aam
xchg
fdivs
out
test
jne
mov
pop
cmpsl
pop
jnp
lcall
iret
mov
sbb
gs
sub
insl
xor
dec
ja
call
mov
ret
call
mov
and
push
dec
enter
or
lret
add
jp
jbe
int
lds
mov
pushf
ja
mov
adcl
xor
outsl
jae
fistpll
inc
orl
pop
adcl
push
mov
pusha
notb
cmp
dec
cmp
sbb
cwtl
adc
add
pop
mov
pop
push
das
ret
sbb
mov
les
cmp
neg
mov
xor
adc
inc
addl
push
xchg
stos
xchg
xor
cmp
mov
in
push
sub
push
movsl
fdivs
mov
and
push
xor
scas
mov
lods
in
outsl
pop
xchg
imul
ret
mov
jo
mov
inc
sbb
pop
decb
pop
mov
jnp
sbb
and
dec
cmpsb
mov
ss
fsubr
adc
lods
cwtl
sahf
jecxz
notb
xor
in
adc
test
adc
shrl
repnz
lret
mov
jnp
and
adc
xor
movsb
jmp
mov
insb
cmc
sti
inc
xor
leave
pop
dec
scas
inc
insl
std
shl
loop
dec
pop
ds
pop
stc
in
lods
inc
movsb
hlt
cwtl
mov
fimull
cli
pop
loop
les
dec
dec
sub
add
jbe
cmp
in
jl
sbb
pop
ret
aaa
fnstsw
mov
mov
lea
mov
insb
mov
xlat
in
fwait
js
dec
xor
icebp
imul
test
pushf
sarb
inc
cld
inc
pusha
stc
cld
mov
or
mov
pop
jle
mov
xor
enter
push
mov
lods
les
ret
subb
push
addl
cs
aaa
pop
scas
dec
mov
pop
cmp
dec
imul
nop
push
mov
and
push
fbstp
test
xchg
dec
nop
add
mov
or
fwait
popf
or
pop
jbe
inc
adc
xchg
xchg
inc
push
and
mull
pop
jecxz
push
loop
iret
ja
xchg
xchg
sbb
aaa
fisttps
mov
daa
ljmp
int
aas
leave
lfs
dec
adc
mov
xlat
movsl
sbb
shrl
lea
loope
push
fs
mov
or
fisubrs
orl
std
mov
mov
repz
pop
and
or
mov
in
cld
mov
mov
push
push
in
inc
dec
shlb
fwait
or
cltd
loop
fdivr
mov
lods
daa
mov
in
leave
mov
inc
mov
lcall
stos
xchg
lret
mov
inc
outsb
nop
xchg
push
ja
mov
mov
mov
popa
push
jno
pushf
repz
idivl
jl
adc
loop
lahf
dec
lret
sti
test
xor
out
out
xchg
fdivrs
xchg
in
mov
outsb
jge
push
test
divb
lods
mov
cmp
push
std
scas
daa
fildll
mov
inc
cmp
aaa
in
jge
pop
cmpsb
jne
cmc
ret
adc
dec
pop
jae
sub
out
imul
xchg
mov
outsb
sub
adc
add
outsb
mov
mov
jnp
ja
lret
stos
shlb
mov
test
dec
xor
lock
xchg
jae
lods
iret
mov
sti
and
adc
and
stos
imul
imul
loop
xchg
jmp
popf
pmuludq
mov
inc
or
sub
jnp
movsl
lahf
pop
push
cmc
adc
inc
mov
fldt
roll
neg
cmp
cmp
xchg
adc
mov
jge
xchg
lret
dec
sub
mov
in
and
out
sub
in
push
sbb
repnz
cs
dec
sbb
pop
mov
je
sbb
fwait
scas
stos
ljmp
sub
stos
inc
lods
xchg
stos
faddp
mov
adc
test
out
inc
ss
adc
jl
scas
jg
daa
xor
sbb
mov
inc
insl
xchg
mov
jmp
frstor
push
jns
lret
mov
xor
xor
loope
mov
shll
popf
sbb
aas
xchg
dec
pop
out
push
fisubs
out
jl,pt
and
sbb
cmp
add
sub
outsl
or
mov
scas
mov
mov
mov
rcll
push
aas
lods
xor
out
mov
pop
fcom
dec
pop
sbb
rcrl
push
cmp
and
mov
mov
push
fiaddl
out
sbb
mov
test
cmp
clc
mov
icebp
and
sub
and
divb
insb
mov
mov
adc
addr16
cmc
jl
xchg
fildl
les
mov
in
or
or
sbb
imul
ret
push
rcll
std
in
xchg
or
mov
into
and
push
and
fistpl
pop
lds
in
arpl
jle
adc
test
testb
xchg
data16
lods
cltd
adc
add
fnsave
xchg
jge
inc
and
nop
dec
test
imul
int3
lea
scas
lahf
sar
mov
movsl
les
xlat
loopne
jno
push
stc
mov
xor
imul
leave
ret
fimull
dec
scas
ror
daa
cmp
arpl
xchg
pop
or
in
xchg
and
xor
and
fstpl
ljmp
inc
or
repz
stos
loope
mov
mov
aad
test
idivb
cmp
inc
in
mov
loopne
cld
insl
adc
sahf
cwtl
jp
inc
popf
aam
mov
sbb
adc
mov
idivl
clc
cmp
sar
cmpxchg
loopne
stos
in
push
xor
cli
arpl
add
fldenv
iret
xor
mov
test
jecxz
mov
in
jae
loopne
and
dec
jnp
dec
gs
bound
xchg
sahf
lret
xlat
ljmp
mov
fstl
xchg
jmp
cmp
movsb
test
jge
and
jno
jg
or
pusha
push
xchg
in
mov
out
pusha
repnz
fbld
outsl
add
addl
cwtl
push
leave
sahf
outsl
testb
xchg
cs
sub
dec
clc
xchg
std
sub
lret
xchg
pop
sbb
ljmp
dec
fisttpl
popf
sub
push
in
or
addr16
testb
mov
addr16
jne
jmp
int
in
and
and
cmp
xchg
insl
cld
sbb
xchg
scas
dec
sahf
inc
pop
jl
mov
jl
mov
cli
dec
das
sti
add
pop
xor
xor
jne
cbtw
mov
popf
mov
cld
inc
sub
mov
sub
mov
sahf
nop
leave
pop
adc
jecxz
stos
adc
nop
jle
push
push
and
shr
jno
mov
cwtl
or
mov
repnz
mov
xchg
movsl
sahf
ljmp
push
push
add
pop
add
pop
or
ret
jmp
dec
in
sbb
test
sub
add
pusha
je
push
idivb
mov
or
lret
mov
pop
movsb
sbbl
cmp
and
nop
enter
cli
das
lds
mov
jb
xchg
dec
insb
insb
aad
push
pop
iret
xchg
mov
shlb
sahf
mov
shl
xor
sbb
sbb
mov
fildll
pop
fisubl
inc
fwait
cmp
or
mov
push
sbb
lcall
clc
popa
pusha
pop
dec
fwait
mov
scas
pop
inc
jnp
cmp
xchg
jns
dec
mov
sbb
sub
call
xchg
dec
mov
push
lahf
inc
lds
lds
test
shrl
nop
mov
ja
jne
insb
push
pushf
fwait
inc
loope
mov
fldt
push
adc
enter
sub
xor
xchg
je
adc
xor
push
cld
push
rclb
mov
inc
xor
pop
and
dec
or
pop
xlat
clc
push
mov
xchg
dec
mov
mov
xlat
sub
add
sbb
push
scas
and
jbe
jl
stos
push
ficomps
int
dec
pop
or
lods
insb
aam
out
aas
mov
dec
xchg
out
andl
mov
inc
lea
cmpsb
cmpsl
call
mov
mov
jnp
dec
pop
stos
out
and
iret
or
or
cmc
mov
add
ds
or
call
icebp
mov
xor
mov
imul
adc
lods
rorb
out
fisttpl
jb
shl
and
jl
adc
lret
insb
rcll
add
subb
repz
ret
push
lods
scas
sarl
mov
popa
jmp
outsb
repz
sbb
xchg
mov
aad
std
mov
lcall
mov
or
in
sub
sub
nop
inc
insb
cmp
push
mov
add
or
cmp
lock
or
jbe
mov
out
ror
jg
sti
fisttps
add
push
aaa
sbbl
lea
nop
add
fnstcw
ja
in
stos
push
out
push
add
js
inc
jbe
jnp
jb
mov
shrl
mov
add
dec
push
jae
jne
cmpl
leave
fbld
xchg
lret
and
add
jns
jno
lcall
and
in
or
repnz
mov
or
outsl
lahf
and
adcb
sbb
hlt
dec
fcoml
jne
lret
mov
lret
jnp
lret
rorb
rorl
fwait
sub
call
pop
incl
pop
sbb
repz
xchg
popf
xchg
dec
mov
xchg
xor
je
pushf
lahf
inc
cmp
adc
sahf
xchg
cltd
push
out
xchg
aaa
repnz
xchg
cmp
pop
cs
fidivrl
lret
mov
cmpsb
mov
and
sbb
push
into
push
lock
pop
popf
push
xorl
sbb
aam
push
shlb
pop
or
es
mov
lea
xchg
cs
lea
mov
or
mov
lret
and
mov
jae
out
dec
jno
scas
jle
lods
addr16
pop
mov
sub
adc
jae
jl
sub
shr
js
adc
ja
mov
shlb
ficoml
popa
divps
cld
sub
out
mov
push
mov
or
adc
push
insb
jl
into
flds
pop
lods
clc
sbb
or
pop
sbb
push
icebp
mov
push
int3
sub
add
stc
xor
icebp
rorb
sarl
adc
sarb
sub
mov
cmpsl
sti
lock
dec
pusha
inc
mov
in
cmp
test
push
ret
inc
add
ds
repnz
fs
mov
pushf
push
push
aam
pop
add
insb
pop
sbb
push
push
push
lock
cmp
jnp
fmul
shrb
cmp
shl
cld
push
push
and
ss
xor
lea
add
test
rol
mov
sub
xor
shl
add
scas
pop
and
jecxz
pop
test
int3
iret
mov
adc
xchg
mov
mov
cmp
mov
xchg
loope
pop
pop
pop
rorb
mov
xchg
iret
add
popf
mov
adc
mov
pushf
xor
js
or
dec
bound
sahf
xor
pop
daa
jno
test
pop
xchg
push
or
out
ja
sub
mov
xor
popf
pop
stos
jns
sub
test
dec
repnz
mov
test
fstpl
or
arpl
mov
cld
mov
les
sub
xor
fildll
shl
sbb
das
add
std
out
mov
cmpsl
and
les
jl
sbb
adc
jmp
mov
sub
das
xor
mov
inc
xchg
das
ficoms
aam
cmp
sub
mov
stos
mov
inc
and
rcrl
ret
inc
mov
nop
outsb
sti
sub
mov
cs
xchg
lret
cli
shlb
fcmovb
add
repz
repz
aam
inc
sbb
pop
out
xor
and
pusha
stos
mov
les
xchg
fbstp
lods
rcrb
xchg
js
ret
mov
push
fcmovnbe
std
iret
mov
pop
sub
fdivs
sbb
test
ret
rorl
or
test
addr16
repz
lds
mov
cli
push
sbb
xchg
mov
dec
cmpb
sahf
mulb
aas
in
das
ss
test
jle
loopne
jle
jg
mov
pop
mov
mov
lea
push
mov
xlat
add
xchg
xor
pop
push
pusha
js
mov
imul
sub
pop
adc
push
cwtl
cmc
or
fnstsw
shl
int
in
hlt
push
adc
add
lds
cmp
in
mov
jecxz
adc
add
dec
popf
es
pop
or
jg
inc
jl
fdivs
xorb
dec
fs
push
call
sub
push
jns
mov
or
xchg
sub
adc
fnstsw
cld
pop
das
fdivp
push
pop
out
and
jg
test
mov
and
dec
mov
cmpsb
adc
or
shl
sub
pop
mov
ret
movsb
fnstenv
adc
xchg
add
lcall
bnd
daa
shlb
scas
sub
in
adcb
in
ds
lds
aaa
ret
sbb
or
xorb
popf
sub
pushf
or
lahf
icebp
and
int
frstor
es
negl
test
mov
ror
adc
jmp
adc
xchg
out
mov
nop
mov
sbbb
mov
jmp
cmpsb
pop
mov
outsb
add
stos
lods
jmpw
dec
stos
push
cmpsb
ret
or
sub
loope
jno
sti
cmp
jb
xchg
jmp
jno
jmp
andb
out
push
call
push
fcompl
jle
scas
adc
mov
mov
loope
loop
jl
pop
xor
lahf
into
jp
lea
fucomi
cmc
dec
sti
adc
pop
adc
fistl
jns
stc
pusha
repz
scas
cmc
stos
test
xchg
test
out
jle
xchg
dec
int3
dec
scas
inc
add
lods
push
mov
mov
call
adc
inc
inc
pusha
xchg
push
cmp
mov
fldt
sahf
mov
incb
mov
mov
mov
fdivr
call
pusha
insb
push
shlb
push
lock
std
dec
or
pop
sub
inc
das
xchg
insb
arpl
out
or
sub
sahf
mov
dec
lret
shll
dec
and
adc
adc
xor
mov
and
pusha
jns
loope
clc
pop
push
add
pop
xor
dec
cmp
sbb
rcll
push
push
sub
dec
mov
cmpl
je
ds
or
mov
xlat
push
sbb
jo
jle
incl
test
push
xorl
mov
xchg
aad
movsb
inc
pop
shl
xchg
in
lret
lret
xchg
je
jecxz
sub
jp
les
and
movsw
mov
mov
loope
xchg
sub
xor
push
jns
stc
mov
push
or
popa
mov
pop
cmp
push
iret
push
cli
ss
mov
sti
aad
pop
xchg
xchg
mov
dec
push
sub
cmp
in
lcall
dec
ljmp
ds
inc
iret
stos
mov
push
jae
cwtl
xor
mov
pushf
inc
aad
sbb
jne
xchg
shlb
jge
cmp
repz
inc
shlb
mov
push
push
xchg
rorb
lcall
or
mov
inc
pop
test
push
fidivl
cmp
or
notb
mov
push
cmpsl
mov
xchg
loopne
das
dec
xor
mov
cvtps2pi
lret
dec
add
sbb
mov
jp
push
and
enter
jbe
mov
in
push
mov
ret
or
xchg
pop
paddd
mov
mov
pop
mov
or
jb
dec
aam
imul
aas
add
or
xchg
movsl
push
jnp
hlt
xchg
jo
daa
in
clc
mov
sub
push
jmp
lea
stos
imul
adc
push
sub
jo
int3
adc
fsts
aad
bound
dec
adc
mov
add
add
or
movsb
mov
rolb
scas
popa
ljmp
push
jne
cmp
test
push
mov
sbb
iret
popf
shlb
arpl
icebp
push
or
enter
dec
lods
fwait
xchg
xchg
inc
mov
mov
cmp
imul
into
push
in
mov
push
lock
clc
orl
lret
cmpsb
sub
out
sarl
push
inc
je
cs
mov
in
inc
lods
dec
xor
mov
pop
push
pop
xor
shrl
jo
xor
loopne
push
xchg
ljmp
pop
out
xor
sbb
xor
lods
push
out
xor
add
push
add
add
dec
arpl
test
mov
jns,pn
mov
add
pop
lcall
inc
pop
cli
dec
xor
cmp
sbb
jne
mov
sub
pop
or
addr16
ja
mov
out
pop
jb
xlat
pusha
loope
lret
cwtl
mov
into
imul
mov
ffreep
mov
push
imull
adc
dec
xchg
mov
aaa
fldenv
and
mov
jns
push
jg
ret
and
mov
xor
xchg
and
daa
adc
pop
repnz
scas
sub
scas
mov
out
jns
mov
cmp
mov
out
fiaddl
bound
dec
push
adc
pop
push
inc
aad
sub
jp
sub
inc
cs
jno
movsb
pop
sbb
push
out
mov
mov
fwait
and
pop
adc
add
cmp
hlt
es
mov
les
imul
pop
popa
sub
xorl
dec
ss
xchg
mov
loopne
test
cmp
xchg
sbb
and
xor
pop
scas
cmp
ss
cld
enter
jo
fdivl
out
inc
mov
aaa
sub
push
cmp
and
and
xlat
push
dec
rcl
cs
dec
xchg
xchg
push
mov
add
or
add
insl
xchg
and
add
shlw
xchg
rclb
popa
jecxz
punpckldq
push
adc
push
add
push
cld
cmp
mov
scas
stos
jmp
rcrl
xchg
loope
add
aad
sub
jae
lods
rorb
out
fstpl
loopne
shll
push
push
fadds
ss
imul
lret
test
in
in
es
mov
sub
or
xor
cmp
cmpsb
js
in
mov
xor
or
decl
es
mov
dec
icebp
cld
das
jb
mov
pop
sbb
test
scas
sub
pop
insb
enter
mov
stos
out
clc
movsb
dec
jle
cs
xor
mov
sub
lahf
in
pop
into
ja
sbb
mov
add
pusha
imul
or
inc
xchg
xchg
or
pop
xchg
pop
sti
bound
loope
ja
xor
lea
xor
xchg
jae
nop
arpl
sti
mov
aaa
mov
outsl
lea
mov
sub
lock
or
and
mov
shl
in
xchg
outsl
mov
mov
insl
in
in
jmp
lock
jle
push
fwait
cltd
xor
ds
xor
cmp
dec
add
add
cld
loop
pop
mulb
xchg
lret
fsubrp
xchg
xchg
out
outsl
fisubs
mov
mov
pop
clc
cmp
mov
jne
and
add
scas
push
addr16
or
push
mov
pop
les
ret
dec
xchg
call
sub
cmc
mov
hlt
mov
xlat
jmp
loopne
jno
jbe
jno
lock
mov
sub
and
xchg
pop
pop
shl
cltd
pmovmskb
jnp
mov
test
iret
lds
dec
pop
loop
pop
mov
test
xor
aaa
sub
gs
or
dec
aas
or
fdecstp
sub
inc
mov
mov
mov
in
jo
daa
cld
dec
lock
hlt
or
gs
fisubrl
xor
cs
and
lods
push
mov
jmp
add
ret
jae
adc
mov
rcrb
sub
and
pushf
rcll
int
scas
int3
bswap
lds
lret
or
lods
call
push
inc
sbb
inc
jnp
fnstenv
mov
addr16
loop
dec
mov
adc
roll
sub
test
subl
push
insl
cmp
inc
js
and
stos
jecxz
sbb
cmp
dec
int
cs
pop
or
scas
out
sbb
arpl
imul
adc
or
jecxz
outsb
addr16
clc
in
xchg
lahf
xchg
xchg
lret
imul
out
pop
jb
sub
ljmp
push
push
outsl
mov
adc
js
movsb
aas
fistpl
push
cltd
xor
rorl
mov
adc
call
adc
je
cmp
xor
jp
xor
cmp
sub
sub
add
addl
mov
bnd
xchg
daa
dec
xor
addr16
mov
insl
cmp
data16
add
push
ljmp
cmp
imul
outsb
mov
popf
sub
adc
scas
insb
jmp
cmp
jecxz
loope
shrl
inc
dec
adc
xchg
ds
lcall
xor
jbe
gs
test
loopne
hlt
and
pop
leave
cmpsb
mov
fldcw
jmp
pop
pop
scas
test
push
lods
es
xor
or
xchg
push
jg
aaa
jmp
sti
or
adc
insb
fwait
outsl
and
mov
and
or
fildl
scas
push
and
popl
jno
dec
adc
sub
ror
scas
es
dec
push
in
adc
fmuls
rorl
sbb
fistpl
add
push
test
and
fistpl
pop
iret
or
xchg
mov
adc
cmp
sub
xor
mov
lods
inc
jecxz
dec
sbb
dec
sbb
mov
sbb
jne
fwait
xor
push
mov
mov
lahf
call
pop
or
cmpsb
ret
mov
int
test
xorb
dec
or
xchg
insb
jb,pt
push
pop
sarl
cmp
scas
loopne
adc
int3
ds
shr
sbb
push
into
stos
rcrl
push
add
les
pop
cld
std
repz
pop
aaa
jne
fbstp
inc
sbb
dec
xor
push
push
or
xor
dec
add
test
std
push
add
mov
mov
mov
jb
add
dec
xorl
xor
adc
jb
dec
fimull
inc
inc
dec
mov
jne
xor
shrl
push
jle
daa
shll
mov
mov
jecxz
xor
pop
call
test
test
mov
mov
loope
subl
aas
mov
scas
jno
fnstsw
xor
add
push
mov
mov
in
shll
pop
add
out
pop
dec
rclb
std
fs
xchg
addr16
mov
mov
imul
and
sub
stc
jg
roll
adc
jno
int
pop
mov
bound
imul
test
insl
sbb
sbb
adc
aam
ficoms
notb
dec
mov
call
repnz
movsl
adc
add
xchg
fucomp
in
scas
test
jmp
adc
push
inc
stc
mov
mov
xor
pop
add
addr16
xor
lea
xchg
inc
lret
xor
insl
dec
sbb
mov
sahf
stos
or
push
mov
add
out
xchg
and
lret
repz
mov
adc
sub
jb
aas
xchg
xchg
pop
sub
cmpsb
xlat
inc
stc
sub
stos
fistpll
mov
xchg
outsb
je
sub
xchg
mov
sub
mov
sub
repnz
mov
push
aas
cmp
push
arpl
fisttpll
jae
push
insl
add
out
fistpll
and
movsl
jg
adc
xchg
push
ret
insb
cltd
stos
dec
and
in
add
pop
push
xor
icebp
add
or
mov
push
enter
push
fmul
jo
sti
mov
mov
lock
sbb
in
or
cmc
mov
xchg
pop
cmpsl
out
push
imul
sub
and
in
sbb
mov
xchg
dec
mov
test
jnp
dec
xor
mov
inc
pop
cmp
jle
and
adc
push
mov
aam
or
subb
mov
adc
push
push
lea
outsl
inc
sbb
ficompl
insb
ret
xchg
and
cmpsl
mov
mov
enter
std
sbb
cmp
dec
mov
pop
lea
cmpsb
aas
mov
cmp
fdivs
ljmp
cmp
mov
iret
adc
fidivrl
lods
in
add
xor
xchg
lret
and
call
outsl
inc
js
cmp
lods
fiaddl
xor
cmp
fldln2
mov
notl
or
lods
adc
iret
loop
xchg
xorb
xchg
fimull
and
cli
xchg
mov
mov
xchg
ljmp
mov
cwtl
icebp
rcl
xor
push
mov
movsl
xor
xor
pop
fsubr
cmp
xchg
insl
pop
mov
into
jno
mov
les
divl
push
xchg
repnz
rcrl
inc
pop
test
mov
shr
outsl
into
out
or
sub
cwtl
movsb
mov
out
inc
pop
punpcklbw
ficoml
negb
pop
lock
les
mov
addr16
pop
xchg
popf
aad
inc
outsb
push
add
xchg
or
mov
add
push
divb
add
sbb
loope
and
xchg
std
add
pop
loope
push
enter
movsb
mov
inc
cwtl
mov
in
insl
pop
sbbb
mov
and
mov
dec
adc
dec
fadd
dec
mov
ljmp
loope
test
repnz
sbb
mov
mov
adc
pop
jecxz
les
jmp
and
pop
sbb
push
adc
clc
stos
mov
mov
outsl
mov
or
xor
pop
dec
dec
add
cmc
mov
xor
xchg
jno
xor
sub
inc
movsb
jnp
mov
push
and
dec
or
call
cmpsb
test
lods
mov
mov
outsl
cli
lret
inc
js
lret
fs
xchg
ljmp
jecxz
fsubl
cmp
cs
mov
sub
jecxz
shlb
mov
aad
inc
mov
and
and
hlt
pop
mov
jecxz
inc
notb
gs
jns
dec
push
sub
cmpsl
jo
pop
pop
jecxz
cmc
movsb
lea
push
rorb
mov
cwtl
insl
sub
push
ljmp
adc
push
fmuls
xchg
and
ret
push
sbb
inc
inc
cmpsb
and
jmp
adc
icebp
push
fisttpl
les
push
sub
fistps
ss
adc
pop
cmp
mov
push
fistpl
pop
push
or
aas
fs
aas
jle
cmp
fisttpll
xor
daa
ret
loopne
mov
xor
pop
lret
cmp
ljmp
movsb
int
jle
stos
add
jecxz
ficomps
lret
sub
push
sub
pop
inc
lcall
xlat
add
jo
movsl
jge
idivb
or
cmpsl
in
push
dec
fisubl
stc
mov
ficompl
or
pop
or
mov
pop
lret
and
push
and
jp
cwtl
lods
hlt
or
jp
xor
or
cmp
mov
pop
call
mov
scas
in
cmp
in
xchg
leave
shll
cwtl
jl
and
fadds
push
mov
decl
and
jo
jbe
nop
add
and
add
jns
aad
lods
sub
mov
mov
movsb
add
xor
fsubs
cmpsl
push
popa
je
dec
cld
pop
imul
fnstenv
and
mov
aas
or
lea
adcl
shlb
lods
xchg
andnps
out
sub
sbb
or
sub
xchg
xchg
dec
imul
jns
stos
popa
sahf
clc
cld
mov
orl
and
dec
out
mov
insb
mov
and
outsl
sbb
cmp
push
dec
ffree
arpl
ja
sbb
xor
in
xchg
clc
mov
push
and
jecxz
xchg
fimull
test
cmp
lods
add
mov
bound
ljmp
bnd
mull
nop
jo
imul
jle
and
sahf
popf
sbb
mov
push
inc
jmp
jns
fwait
test
movsb
in
lods
jp
mov
mov
bound
jbe
dec
leave
mov
daa
mov
scas
cwtl
cmp
fcomp
mov
dec
xchg
loop
arpl
inc
cmp
xor
dec
adc
je
push
ret
or
fwait
xor
and
jo
enter
stos
xlat
xchg
out
and
out
adc
insl
dec
fwait
mov
shlb
xor
xorl
pop
dec
gs
and
push
sbb
cmc
xchg
pop
out
clc
inc
fmuls
je
in
mov
nop
cmp
mov
pop
hlt
jo
das
dec
adc
ds
fisubrl
test
sub
pop
cs
movsb
bound
push
add
add
adc
ja
test
and
push
shll
sbb
leave
ja
aad
ljmp
xchg
xchg
jb
inc
push
sbb
mov
test
loopne
mov
fwait
cs
add
ljmp
mov
out
and
xchg
adc
aaa
pop
repz
mov
test
mov
xchg
jo
xchg
mov
data16
jne
imul
cmpsl
or
sahf
jge
mov
mov
mov
lret
cmp
arpl
jmp
les
push
ljmp
adcb
inc
lahf
sbb
sub
ucomiss
sbb
fadds
imul
adc
out
pop
vhaddps
stos
adc
std
leave
dec
and
les
sbb
pop
add
mov
das
mov
shrb
sbb
sbb
push
lock
xchg
pusha
les
cmp
addr16
push
ret
adc
cs
shl
push
test
ret
cwtl
sub
mov
lock
mov
ds
pop
js
pop
inc
dec
nop
xchg
or
js
pop
loope
aas
je
mov
les
add
push
fcomp
ja
and
out
pushf
cmp
jecxz
xlat
mov
nop
cmpsb
enter
inc
push
xor
lds
mov
cltd
rdpmc
pop
cwtl
pop
pop
mov
or
mov
inc
sahf
js
mov
or
sahf
fcoms
xchg
cs
or
add
movsl
push
ficompl
mov
or
jne
mov
cld
les
out
ret
cmc
mov
xor
or
movsl
insl
into
fisttpll
and
lods
push
and
ljmp
push
divl
push
jl
xchg
rorl
add
mov
test
mov
popl
xchg
aaa
or
repz
cmp
pop
rolb
add
pop
std
mov
xor
sti
or
orl
stc
sbb
mov
test
jno
sub
push
clc
stc
mov
lahf
jecxz
das
jnp
mov
stos
pushl
adcb
push
mov
and
push
xlat
insl
add
movsb
xorl
insb
jmp
getsec
cli
mov
std
scas
in
test
hlt
test
adc
jmp
inc
addl
mov
jmp
or
stos
or
or
sbb
inc
fldcw
mov
icebp
jb
push
jb
mov
xlat
cmp
jl
jecxz
push
mov
push
ss
mov
loopne
jmp
ret
sbb
cli
call
icebp
mov
xchg
dec
jecxz
sbb
fstl
mov
daa
movsl
jb
push
int3
xchg
push
mov
imul
jb
xor
pop
clc
aam
ret
insl
inc
rcll
rorl
setge
loope
stc
push
out
out
cmp
mov
sub
rcrb
movsl
add
lods
push
sbb
lds
sar
dec
test
icebp
outsl
sub
jb
mov
pop
push
int
sub
or
mov
jecxz
adc
cmp
xchg
aas
sub
adc
jno
sub
fbstp
xor
test
jecxz
fistl
sti
adc
jb
shlb
daa
lods
xor
or
inc
xor
scas
mov
fistl
jbe
int
and
push
cmpsl
pop
fwait
js
mov
inc
adc
repnz
pushf
adc
sbb
cltd
jo
jle
faddl
insl
xchg
sbb
pop
in
cmp
xchg
push
das
xor
xchg
scas
xchg
push
movsl
cli
out
jg
ljmp
mov
and
xchg
xor
lret
or
or
mov
cld
pop
xchg
and
ss
mov
cmpl
lahf
and
sub
jle
push
fdivs
cmp
je
and
movsl
int3
shlb
insl
notb
in
pushf
xor
xor
jle
adc
imul
fisttps
push
and
jae
mov
test
dec
cmp
mov
jmp
imul
push
data16
inc
lods
data16
lret
stos
fwait
mov
je
loopne
fstps
inc
imul
dec
pop
ds
push
aas
cmc
xchg
add
add
pop
jge
aad
xor
sub
and
xchg
outsl
xlat
in
cld
ja
adc
adc
movsl
xor
and
inc
popf
stos
mov
push
mov
adc
adc
addr16
std
cmpl
sbb
iret
mov
xor
xor
stc
mov
loopne
ljmp
test
jle
call
or
test
test
ficoms
mov
and
nop
mov
sbb
add
shlb
inc
push
das
pop
sbb
sbb
dec
cli
xor
sub
out
jecxz
push
xchg
mov
xchg
push
dec
pop
adc
xchg
js
pop
cmp
fcomip
roll
clc
test
gs
clc
jp
jae
cli
fsubs
sahf
incb
pushw
sub
inc
mov
mov
cli
add
in
imul
and
and
add
loop
or
add
frstor
sub
xchg
push
jbe
into
pop
lret
adc
jecxz
and
mov
sti
push
mov
mov
lahf
jb
sarb
fistpll
insb
jb
mov
fimuls
mov
xor
out
mov
mov
test
xor
fwait
shrl
push
popf
dec
mov
mov
cmp
sub
jl
adc
int
xorb
pop
rcr
les
xchg
xor
dec
and
xor
pop
sbb
fisubrl
sti
into
dec
fdivr
pop
pop
into
sbb
testl
adc
lods
pop
and
xchg
pusha
sbb
push
std
pop
lea
aad
je
imul
rclb
std
adc
or
or
push
sbb
popf
sbb
sbb
push
push
fwait
lock
pop
jmp
xorl
push
sti
adc
imul
outsl
sbb
clc
or
or
scas
push
outsb
test
push
add
jp
jns
xchg
mov
inc
sbbl
pushl
adc
cmp
or
jnp
out
jae
lcall
push
in
adc
push
data16
and
push
add
push
sub
sahf
mov
push
sbb
mulb
pop
ret
xchg
std
mov
arpl
inc
addr16
insl
lahf
lea
inc
iret
scas
cmp
pop
dec
aam
mov
inc
xor
popa
cli
inc
out
xor
je
dec
in
adc
xor
xor
aad
dec
pop
in
inc
pusha
or
xor
fmulp
and
jb
xchg
add
mov
jno
mov
cmpsb
std
jo
in
lods
js
push
xchg
and
mov
aas
sti
stos
mov
roll
xchg
data16
adc
mov
add
jecxz
sbb
lret
das
jns
out
sbb
adc
dec
cmp
xor
push
aad
into
sub
call
adc
push
dec
xor
or
popf
jno
mov
dec
stos
decb
test
jecxz
sbb
loope
pop
cld
popf
loope
test
ss
in
test
ds
adcl
and
lds
mov
adc
xor
mov
fwait
mov
into
inc
call
inc
fwait
push
addr16
xchg
or
adc
fwait
push
cmp
jp
push
out
daa
inc
loope
inc
inc
insb
loope
and
stc
jmp
pop
aam
mov
and
inc
sbb
lds
hlt
loopne
pop
xlat
lock
push
fcmove
jbe
xor
inc
push
dec
jae
into
cmp
jl
push
push
ds
popa
cli
cmpsb
divl
push
inc
inc
nop
push
shl
push
dec
pop
xchg
dec
in
data16
aas
xlat
jp
int
sub
in
aam
mov
or
xor
movsl
shlb
bound
dec
sub
aas
cld
push
cmp
dec
lods
sub
xchg
add
outsl
jne
fwait
loope
jle
andb
push
mov
inc
inc
mov
xor
push
push
fwait
add
roll
testl
lods
jo
out
pop
lods
xchg
xorl
mov
mul
cwtl
cmpsb
daa
mov
stos
ss
inc
fs
dec
xchg
xchg
loop
jb
popf
lods
sub
ljmp
arpl
add
test
or
xor
fdivs
lret
cmp
inc
mov
insl
xor
xor
mov
pop
xchg
ret
pop
or
aaa
leave
xchg
mov
gs
hlt
pop
pop
scas
ss
pop
adc
stos
and
or
xchg
pop
shl
outsb
dec
addr16
xor
pusha
sub
cmp
adc
cmc
out
int
shl
or
pop
cmp
pop
lods
daa
iret
stos
fwait
repnz
xor
test
push
das
dec
pop
mul
xchg
test
mov
push
sbb
pop
int3
mov
push
xchg
rcrl
aaa
imul
repz
pop
int
cwtl
int
add
mov
mov
je
mov
jo
lahf
div
adc
inc
xor
xchg
xchg
js
sarl
mov
inc
je
cmp
stos
and
popa
popf
orl
jne
les
pop
stos
fwait
call
insl
aas
adc
or
js
daa
jp
insl
ret
fchs
ret
dec
outsb
fdivp
test
jp
leave
jae
addr16
mov
cli
std
mov
adc
push
mov
jnp
mov
cmp
mov
adcl
data16
and
adc
iret
std
sbb
lods
pop
lea
sub
or
or
call
ds
mov
mov
jno
xchg
xor
add
xlat
sbb
out
loopne
add
addl
push
movsl
in
clc
mov
enter
and
xlat
xchg
daa
rcll
xor
imul
adc
pop
dec
inc
or
push
iret
popf
sbb
shll
xchg
call
int3
popf
adc
rolb
pop
test
popf
mov
and
cmpsl
ja
stos
fnsave
arpl
pop
pop
jecxz
outsl
jns
nop
inc
pop
mov
and
dec
push
or
fistps
adcl
arpl
mov
mov
test
cltd
push
popa
or
sbb
dec
sub
sbb
mov
adc
sbb
and
mov
nop
lods
add
xchg
xchg
in
aam
push
adc
or
repz
enter
out
fidivs
cmp
mov
mov
sti
rol
lahf
fcmovnb
sub
and
clc
push
dec
mov
arpl
movsb
add
iret
mov
das
cmpsl
test
mov
stos
lds
sbb
mov
inc
stos
pusha
mov
fisubl
dec
fucomi
add
or
jmp
lods
xchg
mov
adc
pop
push
sub
adc
bound
mov
push
lods
shl
fwait
test
push
aaa
pusha
add
shlb
add
gs
adc
bound
cli
and
js
pop
or
cwtl
sub
testb
in
js
mov
or
jnp
jns
loop
iret
cmp
sbbb
outsl
jne
inc
sub
loope
data16
ficoml
rolb
cmp
jle
cmp
jne
bound
cmp
gs
rcll
jns
js
sbb
inc
nop
mov
mov
xor
imul
push
push
and
loopne
jnp
sarl
xor
stc
sbb
sbb
cld
or
jg
sub
sbb
inc
jns
adc
xchg
dec
dec
in
cmp
cmp
lahf
pop
or
cwtl
jns
pop
jae
movsl
push
mov
in
arpl
faddp
xchg
add
lds
stc
or
and
sti
jne
mov
xchg
loope
push
lahf
out
shll
dec
stos
sub
imul
arpl
fcomps
fmuls
out
sub
mov
stc
cmp
and
push
repnz
enter
pusha
testb
push
jbe
mov
and
sub
jnp
xchg
cmpsb
mov
pop
jg
pop
push
movsb
stos
fcmovnu
std
les
push
xlat
outsb
push
jge
jecxz
xchg
sbb
xchg
and
adc
add
sub
cmpb
fdivrl
subb
cmp
or
cmp
inc
pop
aad
test
or
lods
mov
idivl
hlt
out
dec
outsl
dec
xor
addr16
and
cmp
sahf
cmp
pushf
pop
cwtl
xor
sbb
push
aam
and
mov
jp
inc
jmp
xchg
aas
jge
pop
ss
push
call
mov
inc
mov
jo
xchg
hlt
lds
mov
mov
or
mov
in
push
jmp
sti
incl
pop
push
stos
sub
jo,pn
fsubrl
jb
mov
lcall
cmp
inc
cmp
rcr
adc
out
gs
mov
inc
inc
andl
call
mov
out
lret
fwait
xlat
stos
sbb
loopne
jo
mov
rolb
mov
icebp
pushl
sbb
fs
sub
push
mov
push
push
int
pusha
push
cmpsl
iret
fcoml
push
fistl
jg
fwait
xchg
adc
mov
cmpb
adc
jnp
frstor
dec
push
adc
cmp
addr16
pop
and
outsb
mov
dec
repz
pop
call
arpl
gs
mov
int
add
ljmp
outsl
sbb
and
adc
cmp
into
negb
xchg
jl
je
stc
mov
aas
push
insb
mov
xchg
bound
add
push
jbe
test
mov
cmp
test
daa
mov
xchg
fidivl
ret
cltd
pop
xorl
cld
mov
mov
cmp
rcll
mov
lock
pop
les
data16
xchg
loope
mov
fucomip
repnz
sbb
push
xlat
iret
stos
fs
out
jecxz
lret
dec
repnz
add
sub
xchg
mov
and
dec
ss
push
cmp
cli
dec
iret
pop
fsubp
pushl
pop
sbb
fimuls
pop
test
jne
aad
insb
repz
jo
mov
ret
in
in
jle
xchg
js
jo
shr
and
test
inc
jg
scas
adc
sub
inc
or
idivl
ja
cmp
scas
aam
fiadds
dec
jle
test
push
jg
icebp
in
add
sub
out
inc
test
xchg
fnstsw
inc
fwait
dec
fsubrl
idivl
dec
insb
xchg
jnp
ja
xlat
and
sarb
mov
lock
mov
fmull
pop
out
mov
pop
push
call
and
dec
hlt
movsb
inc
cmp
clc
jnp
push
xchg
rorb
out
fstps
mov
cmp
fimull
rcr
fistpl
adc
xchg
sub
outsl
sbb
mov
jo
and
inc
and
rcrb
push
aam
lret
test
arpl
jae
xor
sub
add
bound
xor
or
lahf
jl
ss
xor
iret
inc
loop
lret
mov
cmp
or
and
subl
xchg
push
scas
lcall
xor
pop
orl
dec
mov
xlat
mov
dec
clc
push
xor
mov
push
lock
dec
add
adc
mov
cwtl
test
cld
sbb
xchg
cs
cmp
xchg
shll
out
lea
pop
fwait
shll
subl
jl
xchg
jg
pushf
and
les
pop
pop
loop
mov
inc
sarl
dec
notl
adc
dec
add
adcb
sub
cmp
enter
xchg
pop
dec
xchg
aas
push
add
out
stos
je
and
push
xchg
movsl
adcl
in
cmc
fidivrs
mov
xor
and
mov
mov
fadd
lret
mov
inc
ret
dec
nop
dec
jecxz
dec
mov
pop
leave
ret
fcomi
mov
mov
ss
mov
loop,pn
jl
fcmovnbe
pusha
mov
dec
fisttpl
jae
imul
and
push
xor
ror
mov
in
js
adc
mov
test
rcrb
mov
mov
loop
ret
clc
inc
push
ret
js
and
div
push
in
lret
andb
jns
xor
lret
in
xlat
int
pop
add
inc
add
repnz
clc
xchg
dec
sarb
inc
cmpsl
push
pop
pavgw
pop
add
fistl
mov
mov
icebp
xchg
push
in
mov
and
nop
dec
or
clc
fsubrl
pextrw
insl
mov
push
jecxz
or
jle
imul
pop
mov
insl
cmp
sarl
push
and
mov
cmp
xor
inc
xor
insb
pop
adc
scas
lds
fimuls
rol
imul
mov
das
call
ss
stos
mov
cltd
test
jl
ret
dec
fimuls
push
fistl
xchg
jp
lahf
jns
jae
out
inc
loopne
sbb
adc
mov
loope
inc
andb
adc
daa
lods
xlat
fwait
push
jno
cli
dec
gs
jae
jb
mov
inc
insb
das
push
xor
inc
stc
pop
xlat
fs
out
call
std
and
in
push
push
ja
xor
loopne
dec
lock
xor
inc
sub
adcl
push
dec
test
mov
aad
pop
cmp
cmpsl
scas
mov
jae
fs
adc
cwtd
xchg
or
xor
mov
imul
aas
push
clc
jmp
lods
push
sbb
orb
xchg
fwait
cmp
loop
movl
push
mov
jne
pop
lahf
inc
outsl
jg
sbb
pop
xor
sete
into
ja
push
lods
sbb
stos
dec
adc
dec
mov
addl
inc
jo
dec
xchg
adc
loop
ja
sbb
enter
jl
int3
push
pop
out
hlt
adc
pop
inc
insl
inc
pop
leave
xor
cmp
mov
in
sub
je
outsl
xor
push
xor
inc
cmp
jmp
xchg
jnp
repz
lods
jno
lea
push
jo
test
jbe
add
or
pop
or
test
dec
imul
lods
aaa
es
stos
dec
clc
cltd
iret
dec
repz
sub
stc
movsl
sti
xor
int
mov
mov
aad
cmpl
ret
pop
frstor
adc
lcall
mov
lea
pop
dec
mov
lods
add
push
fs
lods
insl
mov
sbb
insl
mull
insb
xchg
fisubs
mov
mov
sbb
sub
dec
xlat
pop
and
mov
ds
ret
sub
cltd
jae
pop
xorb
sbb
jb
push
out
lret
pusha
stos
mov
mov
repnz
test
adc
mov
sbb
pop
mov
leave
adc
jge
cs
inc
repz
add
shrl
imul
inc
cmp
das
dec
push
test
test
lret
mov
ds
xor
push
leave
and
ror
in
mov
fildl
mov
jle
add
jo
pop
inc
xor
xor
mov
out
sbbl
push
push
daa
loop
movsb
movsl
movsb
int3
loop
pop
fistpll
shrl
jg
or
xchg
xor
enter
pop
in
in
jl
xchg
pop
xchg
daa
addb
in
jecxz
jae
jp
roll
scas
fidivl
xor
stc
push
pusha
pop
jmp
lret
lds
pop
cmc
push
xchg
addl
inc
les
inc
push
aad
loop
int3
pop
stos
outsl
sbb
or
pushf
loopne
mov
and
out
subl
mov
aam
mov
test
cmpsb
pop
jb
push
push
jmp
mul
jno
dec
mov
push
sub
xor
loopne
hlt
xor
and
lcall
cmpsb
adc
cmp
sarl
pop
pop
jle
mov
popf
ds
fs
push
imul
outsb
ss
jp
and
mov
insl
sub
loop
adc
andb
jb
dec
or
cmpsb
add
adc
sarl
test
sub
hlt
lcall
mov
mov
shrb
cmp
mov
in
sbb
loop
pop
aad
movsb
dec
mov
mov
stc
push
dec
iret
xor
nop
ret
mov
popf
stos
or
mov
dec
xchg
jo
enter
mov
xchg
lret
xchg
jo
cmp
in
mov
pop
pop
dec
psubq
mov
jp
fdivr
sub
js
les
sbb
push
loop
scas
jae
xchg
jle
into
in
rcrl
push
fisttpl
in
stos
sti
jo
inc
mulb
fimuls
inc
loope
push
add
mov
or
cwtl
adc
push
cmc
scas
mov
leave
xchg
pusha
sbb
adc
xchg
or
cld
dec
dec
addr16
ljmp
popa
fcmovne
cwtl
test
and
push
sbb
add
rcrb
adc
aaa
push
pop
dec
dec
jle
lret
or
pop
dec
jno
loope
mov
jne
cmpsb
repnz
pop
xorb
arpl
inc
and
addr16
arpl
cmp
popf
jg
pop
dec
bound
fisubrl
mov
movsl
dec
mov
dec
ss
addl
xchg
orb
and
mov
imul
mov
xchg
movsb
cmp
inc
push
xor
jmp
sbb
sarb
pop
hlt
xor
push
pusha
push
lea
repnz
aaa
repnz
and
add
shlb
loop
ret
xor
dec
add
mov
sarb
adc
xor
dec
xchg
mov
jge
jno
mov
dec
popa
jae
mov
or
loope
sub
cmp
pusha
testb
mov
mov
mov
jecxz
xchg
les
out
adc
jl
cmpsl
xchg
adc
xor
outsb
fwait
adc
inc
push
js
out
xchg
mov
mov
jge
dec
iret
shll
push
loop
sbb
pusha
out
lret
sbb
mov
xor
les
fisttpll
stos
or
inc
arpl
cmp
pop
test
addr16
cmp
ficoms
jne
jle
push
lret
aas
dec
mov
pop
jbe
outsl
or
stc
cmp
popf
sbb
jns
les
popf
decb
mov
xor
rcrb
sub
shlb
add
inc
dec
push
xor
lock
push
stc
movsb
js
cmp
popf
mov
in
div
sar
mov
popa
ds
add
adcb
stos
out
mov
sbb
pop
mov
out
mov
sub
cmp
push
jp
clc
push
sbb
not
ds
xor
adc
dec
push
imul
xor
jmp
inc
lock
sbb
xchg
and
add
lds
das
hlt
pop
xor
bound
ja
pop
std
pop
and
inc
out
dec
mov
sbb
lahf
dec
fbld
add
cwtl
pop
cmp
fdivrs
mov
push
dec
pop
push
fnsave
jb
cli
in
pop
jbe
jg
orl
jle
or
repz
movsl
adc
and
sbb
mov
cmpsb
xchg
mov
into
pop
lret
ja
repnz
and
sbb
cli
pop
leave
fiaddl
pop
inc
mov
mov
sahf
ffreep
cmpsl
mov
fwait
pop
inc
mov
jno
insb
push
clc
inc
out
es
lea
imul
out
dec
pop
dec
push
fistps
jbe
in
push
or
dec
inc
mov
inc
fdivl
sbb
cmpsb
stos
cmpps
adcb
loope
lret
add
mov
and
pusha
fwait
sbb
push
inc
mov
push
sub
fdivs
push
into
cs
lcall
pop
clc
cli
sarl
mov
inc
sahf
out
jecxz
inc
adc
push
fmull
push
mov
pop
fs
jmp
push
enter
inc
scas
test
cmp
or
outsl
test
das
and
adc
fcmovu
stos
sti
sbb
mull
int3
cmp
out
lock
pop
jp
sbb
repnz
lock
xor
lcall
ds
std
ret
jne
or
cltd
in
stos
shlb
sub
pop
push
pop
idivl
xchg
jae
repz
lcall
subl
rcrl
and
mov
clc
shr
aas
mov
gs
lock
pop
mov
or
and
jae
or
add
popa
inc
repnz
push
add
mov
cmp
mov
arpl
add
xor
pusha
sahf
sbb
scas
sub
mov
xchg
test
sbb
dec
mov
test
pop
adc
scas
push
popf
cltd
repnz
dec
roll
loop
mov
popa
adc
xchg
movsl
mov
insl
scas
dec
icebp
addb
sahf
ret
xchg
mov
sbb
cwtl
add
shrl
notl
or
sahf
cmp
mov
daa
and
fisubrs
fisubrs
sbb
aaa
jp
outsl
cmp
mov
movb
mov
popa
sbb
mov
jae
xor
push
cwtl
xchg
icebp
pusha
push
pop
xchg
lcall
inc
push
xchg
jae
orl
and
ds
cmp
push
in
enter
cltd
xor
jae
stos
cltd
mov
ss
or
stos
mov
xchg
xor
div
stos
insl
inc
fs
fists
and
inc
outsl
lods
out
sahf
aas
scas
bound
ror
jo
pop
sbb
xor
sbb
mov
loope
fiaddl
sub
rorb
movsl
outsl
ds
jno
xchg
fidivrs
sbb
int3
mov
mov
sbb
mov
int3
and
push
fdivrl
nop
aam
add
mov
push
icebp
lahf
pop
test
or
pop
pop
or
repnz
pop
pop
dec
mov
ds
and
jge
repnz
lcall
ljmp
add
xchg
xchg
xor
fwait
jmp
xchg
pop
popf
sub
cmp
aam
lahf
mov
test
fildl
mov
repz
inc
cmp
jle
iret
dec
mov
dec
js
lahf
jns
push
and
push
loope
add
xor
mov
outsl
lcall
xor
out
aam
dec
pop
fs
jl
imul
sbb
push
mov
and
into
stc
gs
ret
outsb
xor
adc
mov
push
ja
mov
mov
mov
lock
dec
mov
jp
outsb
ret
xchg
sbb
gs
adc
inc
decl
imul
cmp
lcall
xor
push
mov
cwtl
ret
adc
ret
popa
inc
in
out
mov
xor
cs
and
xor
mov
aad
adc
xor
lcall
fsubrs
inc
into
xor
dec
xor
sbb
push
scas
aam
jb
jae
cmp
mov
movsl
dec
pop
cmp
xor
ss
fnstsw
cmpsb
fadds
xchg
or
sbb
push
push
mov
inc
sbb
xchg
sahf
jg
mov
hlt
and
inc
cmp
pusha
nop
pop
jmp
adc
xor
add
jp
push
adc
in
test
icebp
int3
inc
lret
ljmp
xchg
adc
ret
rcrl
daa
inc
leave
pop
and
cmovb
and
sub
xor
cmp
lcall
aam
add
inc
adc
push
jae
pop
lret
jmp
mov
cmp
sbb
movsl
jne
mov
lret
paddq
pop
inc
pop
sbb
lds
in
inc
cltd
mov
retw
add
scas
jmp
sbb
inc
inc
cmp
std
repz
ror
or
in
mov
jle
inc
les
xchg
mov
add
mov
jge
stc
dec
sbb
jmp
mov
into
adc
cwtl
cltd
cmpsl
push
in
aas
mov
mov
stos
scas
notb
ja
mov
push
dec
jecxz
dec
popf
mov
mov
lcall
push
jns
pop
pop
xchg
or
adc
jge
popa
xor
test
int3
push
add
test
aas
jae
rcrb
mov
push
pop
xchg
pop
pop
pop
aas
sub
ja
sti
xor
lret
hlt
dec
dec
cmpsb
inc
decb
lods
mov
pop
mov
sar
pop
out
scas
jecxz
lock
daa
push
and
mov
push
mov
test
add
mov
jle
fcos
cld
pushf
jns
jne
cmp
dec
int
aam
hlt
jae
or
daa
cmp
dec
fimuls
push
push
loop
fs
repz
add
add
sub
mov
dec
xchg
iretw
mov
xchg
fwait
fs
and
xor
test
cmp
ret
dec
add
dec
mov
and
int3
pop
mov
leave
xchg
adc
lret
push
sbb
mov
cmp
dec
add
fisubrl
mov
mov
jg
cmpsb
jae
and
sub
adc
scas
fidivl
xlat
lock
ret
arpl
fs
xlat
cli
in
hlt
lret
decl
mov
and
test
and
dec
mov
pusha
cmp
mov
push
pop
test
mov
xchg
and
or
addr16
fmulp
mov
or
in
enter
adc
int
aas
stc
add
aas
ja
sahf
cwtl
fwait
jae
xchg
stos
popl
mov
outsb
ds
push
and
jmp
xorl
cs
ljmp
xchg
mov
mov
out
jne
out
or
repnz
inc
pusha
mov
shll
push
dec
dec
mov
rcl
popf
inc
jg
dec
aas
cmpsb
and
jne
xchg
je,pn
repz
sti
out
lods
pusha
xchg
into
sub
in
out
into
jmp
insl
sbb
xchg
or
imul
push
mov
push
je
test
mov
in
jmp
mov
push
push
cmp
inc
pop
lds
lcall
xchg
jnp
sub
cltd
mov
notl
xchg
outsl
sbb
cmpsb
movsl
outsb
sub
and
add
adc
dec
call
rol
sti
push
lea
enter
aam
push
xchg
jb
or
or
hlt
pop
jecxz
mov
push
fimull
sub
pop
adc
adc
cmp
cmpsb
aam
popf
inc
xchg
scas
pop
shrl
arpl
adc
pop
jmp
idivl
dec
push
ret
inc
inc
ss
lds
push
mov
cwtl
pop
lock
in
mov
push
loop
adc
push
and
mov
ret
adc
std
ret
mov
out
ds
sub
stos
mov
mov
int
cld
js
sbb
mov
mov
scas
jns
pushf
pop
and
sbb
movsb
loop
pop
mov
sahf
fmull
and
pop
jo
or
insl
imul
jp
push
pop
push
jb
int3
or
or
jo
xor
outsl
outsl
lock
add
fs
rcr
mov
add
jb
fiaddl
adc
ret
pop
jno
lea
add
sbb
repz
pushf
aas
enter
insl
mov
js
daa
loop
jns
inc
aad
mov
push
movb
inc
das
xor
insl
fs
mov
lds
in
sbb
idiv
cmpsl
cmp
stos
mov
in
and
jne
test
xor
jb
scas
xchg
pop
fcoms
gs
fucom
pop
fidivrs
arpl
xlat
or
mov
mov
leave
in
xor
int
sahf
movsl
inc
fadds
pop
mov
std
loop
jle
rcr
dec
js
movsb
rcrl
dec
test
aam
int
or
imul
push
inc
push
sti
jae
lret
jge
or
pop
sbb
into
sbb
xor
add
mov
add
cmpsb
xchg
pop
sbb
mov
cmc
xchg
add
xlat
clc
push
pop
in
aam
int
pop
xor
jne
mov
int3
loop
mov
inc
jmp
inc
jmp
add
push
sub
mov
loope
mov
popf
add
loope
aas
jb
ljmp
and
jnp
add
mov
pop
inc
cltd
out
push
popw
or
dec
inc
xchg
or
fcoml
fwait
dec
aas
cmc
shrb
or
lods
or
jns
sub
adc
sub
in
sbb
cltd
mov
icebp
bound
xor
or
ja
es
mov
fmull
pop
xor
cmp
mov
subb
ret
sub
xor
stc
or
mov
add
insl
fsub
mov
mov
std
adc
inc
lret
cmp
dec
add
fimuls
or
mov
data16
push
in
sbb
cmp
jp
movsl
jmp
movsb
push
int
mov
push
sub
mov
repnz
add
mov
or
fucomp
scas
cmp
test
mov
push
pop
insb
jae
scas
aas
aam
das
mov
inc
ss
push
fldl
xor
std
pusha
add
leave
dec
xchg
lds
and
jle
lret
jecxz
add
mov
push
xchg
jnp
cmp
test
inc
sbb
adc
mov
and
js
or
adc
shl
jnp
push
addl
dec
xchg
mov
loop
cltd
inc
mov
stc
mov
jp
lea
lds
stos
mul
jge
sbb
cmp
fsub
cld
xor
jg
das
cmpsb
rorb
ljmp
bswap
push
and
adc
loopne
inc
add
xchg
mov
dec
push
jecxz
mov
pop
add
jge
out
pop
ret
jno
push
int3
lods
gs
addr16
mov
jp
lods
mov
fdivrp
imulb
and
imul
jo,pt
sbb
jo
test
lock
push
test
cmp
insb
shlb
push
mov
insb
cmp
and
mov
pop
add
fwait
mov
mov
cmp
test
xor
lcall
cli
add
std
iret
mov
popf
inc
in
pop
ljmp
sti
jno
add
fs
ja
adc
cmp
push
insl
cmp
ja
out
and
xor
fldcw
push
push
ret
ds
mov
mov
lcall
jae
xor
fwait
into
repnz
std
jecxz
stc
or
dec
sbb
or
inc
test
jns
and
ja
push
jp
mov
adc
in
push
xor
lahf
adc
jp
adc
push
hlt
and
pop
loopne
cmp
xchg
xchg
push
mov
dec
movsb
icebp
fcoml
push
pop
push
cmc
jl
sbb
mov
cwtl
cmp
cld
and
inc
stos
loope
jge
out
push
hlt
insb
mov
fnstcw
out
adc
adc
inc
idivb
ret
mov
movsb
or
pop
cmp
mov
mov
pop
jns
fistpl
aas
push
jge
push
popa
mov
sub
pusha
pop
mov
pop
adc
jo
mov
jecxz
dec
loop
push
in
add
push
movsb
daa
and
push
movsl
mov
mov
pop
sbb
pushf
mov
cmpl
adc
aas
mov
mov
inc
stos
enter
mov
push
sub
pop
mov
xor
dec
adc
sub
push
jp
test
jmp
jb
stos
popf
fnstsw
lock
test
int
mov
subb
add
imul
lds
orb
addr16
dec
pusha
and
shrb
es
jns
in
and
add
sub
aam
imul
test
sub
sarb
or
sub
stos
lret
inc
std
insl
pop
jmp
add
lods
ds
mov
sarl
cmc
sub
and
cvttps2pi
cwtl
add
pop
cmp
inc
roll
shr
fsubl
gs
cltd
cmp
lret
imul
add
mov
movsl
js
add
inc
clc
stos
mov
repnz
sub
or
int3
xorl
sbb
sahf
jae
mov
mov
xchg
push
jnp
sbb
popf
sub
xchg
hlt
dec
cmpsl
push
scas
jnp
ret
testb
pop
aaa
add
lods
or
jmp
push
ds
push
push
xor
jg
or
jmp
push
and
mov
or
pushf
jae
div
xchg
fbstp
jecxz
shl
cmp
rcr
add
inc
dec
ja
inc
pop
sar
lds
sub
sub
inc
movsl
jl
cmp
stc
xor
rclb
lret
pusha
aas
jecxz
mov
add
pop
add
pop
xor
mov
scas
lock
jecxz
test
pop
int
aaa
add
push
imull
shlb
fs
aad
ror
movsl
cmp
mov
push
lahf
mov
loopne
cmp
mov
or
fistps
les
xorl
push
jns
mov
dec
xor
fcmovne
adc
inc
cli
out
push
inc
jns
repz
scas
mov
push
int
mov
cltd
test
negb
clc
cmp
mov
fldt
push
subb
mov
mov
xor
jg
shl
sub
icebp
clc
mov
sbb
cmp
jl
xchg
out
xchg
mov
fisttpl
dec
lock
es
shlb
lock
push
add
andnps
fdivrs
dec
test
and
fistpl
jl
stos
mov
jmp
push
push
pop
lret
out
rorl
push
imul
sub
mov
jnp
push
pop
sub
push
subb
push
lret
sbb
frstor
sub
or
sub
inc
pop
xchg
dec
jbe
das
xor
je
sbb
add
push
cmpsb
sahf
imul
xchg
aam
outsb
lea
lods
add
mull
stos
sti
fisttpl
movsb
dec
and
or
lea
rclb
movsl
and
fwait
mov
pop
cmc
xchg
dec
shr
add
aam
stc
mov
bound
ret
inc
xchg
stos
stc
lods
adc
cmp
sbb
rcrl
ljmp
pop
je
dec
in
jae
pop
mov
xor
xchg
mov
adc
pop
fsubr
call
subb
in
mov
lcall
cmp
inc
xchg
in
loopne
add
xor
aam
xchg
stos
sub
ljmp
push
std
mov
jnp
and
push
sbb
hlt
dec
or
push
jecxz
rcpps
cmp
test
fwait
and
xlat
fiaddl
insb
mov
mov
lods
mov
shll
inc
sub
inc
push
int
es
not
sub
cmpl
fwait
pop
iret
jecxz
mov
sub
and
jae
cmp
enter
das
movsl
xor
repnz
mov
outsl
in
stos
adc
xchg
shrb
nop
inc
mov
repnz
test
and
mov
aad
xchg
mov
mov
ret
test
inc
adc
jmp
inc
sbb
clc
gs
push
mov
xor
pop
movsb
or
pushf
mov
les
lret
adc
sub
or
or
loopne
inc
in
pusha
mov
cmpsb
stc
mov
or
daa
in
dec
loop
dec
repz
inc
aam
scas
fcmove
cmp
dec
int3
push
out
lahf
out
pushf
ss
jno
push
insb
xor
notl
inc
adc
push
enter
test
xchg
mov
inc
push
in
xchg
movsl
imul
loope
jp
cmp
out
lds
jae
scas
aaa
cwtl
inc
cmp
aam
gs
sbb
pop
adc
rcll
pextrw
es
out
mov
test
out
in
mov
push
ret
hlt
orb
xor
fwait
iret
inc
incb
mov
fsubrl
push
jno
out
sbb
jae
inc
cli
add
stos
out
imul
hlt
mov
fidivrl
jmp
jno
xchg
dec
xchg
mov
sbb
inc
mov
mov
xor
jle,pt
dec
enter
or
xor
adc
popl
mov
sbb
push
enter
js
inc
popf
jl
fiaddl
lds
inc
sbb
push
adc
int
xor
lock
or
xchg
ja
mov
push
lock
insb
leave
jno
sub
xchg
shlb
bound
mov
jl
int3
repnz
lods
pushf
jl
stc
cmp
cmpsl
xchg
cmp
xor
push
ss
gs
mov
imulb
lret
or
dec
cli
push
mov
int
mov
lret
loope
stc
xchg
mov
outsb
sbb
fisubrs
inc
xor
xchg
pusha
aam
int
push
sub
mov
mov
adc
ja
je
lret
stc
scas
test
inc
sahf
ret
pop
lods
shlb
movsl
sbb
xchg
mov
sbb
xchg
adc
lods
stc
jmp
pusha
xchg
xor
dec
sub
push
or
fidivs
sub
add
scas
xchg
loope
ficoml
nop
cwtl
pop
jmp
sbb
clc
pushf
je
cld
les
loopne
add
pop
jle
inc
xchg
das
mov
cs
cmpsb
adcb
iret
xlat
in
out
loope
js
inc
add
jb
icebp
iret
add
lret
popa
inc
lds
adc
push
fisubl
mov
cmp
in
aaa
pop
inc
pop
test
bound
mov
mov
js
cmp
mov
adc
lahf
jmp
mov
mov
jmp
xor
mov
push
mov
ljmp
scas
test
pusha
hlt
push
add
in
int3
roll
out
lods
jle
repnz
mov
xchg
mov
push
xor
cmpsb
sbb
rorl
cltd
mov
xor
ljmp
out
adc
pcmpeqb
mov
into
xor
test
mov
enter
cmp
xchg
xlat
in
sbb
cmp
and
lcall
cmp
push
test
mov
mov
std
push
movsl
mov
mov
dec
out
sti
jo
dec
jnp
cwtl
pusha
loope
push
lret
dec
repnz
aas
ljmp
mov
int
add
pop
cmp
mov
addl
sub
fdivl
popa
rol
push
in
and
inc
gs
or
cmc
add
dec
ss
mov
mov
push
and
popa
xchg
pop
fwait
mov
jge
pusha
mov
xor
cmp
arpl
jne
xor
mov
ss
ss
incb
adc
push
adcb
push
mov
jle
mov
sbb
mov
add
popf
mov
repnz
add
pop
inc
xchg
icebp
add
leave
enter
pusha
xor
push
into
jnp
cmpsb
lds
pop
mulb
push
addr16
sub
shl
jae
or
mov
cmpsb
test
jae
mov
mov
add
out
mov
push
icebp
loope
and
and
das
shrl
push
or
sbb
xchg
sub
or
mov
insb
xor
jge
sbbl
mov
mov
sbb
jp
ds
inc
jl
pop
sub
adc
dec
sbb
xor
mov
dec
in
push
clc
int
adc
outsb
mov
addr16
or
and
ror
fidivl
ljmp
les
mov
jbe
mov
jbe
mov
push
lock
fildll
mov
stos
repz
aad
sar
ret
sbb
rep
cmp
int3
pushf
adc
jl
lods
cmpb
mov
or
shrl
mov
sbb
iret
hlt
xchg
add
test
ja
cs
push
fsubr
lret
xor
sbb
sub
pop
xchg
mov
push
cmp
and
outsb
rcl
sbb
fs
addr16
les
aad
sub
idiv
out
insl
clc
sbbl
iret
ja
pop
inc
jb
ss
xchg
fimull
xchg
std
divl
iret
pop
sti
mov
mov
pop
sbbl
shll
push
pop
sarb
cwtl
mov
dec
pop
cltd
loopne
inc
ds
in
pop
fucom
push
mov
xchg
cmp
or
in
ss
xor
adc
or
and
mov
sbbl
iret
loop
insl
mov
addr16
ss
cmp
imull
ds
push
mov
mov
fldt
dec
sbb
sub
mov
xor
mov
subl
jnp
sti
mov
push
sbb
call
rcrl
mov
cli
dec
fisttpll
push
je
insl
rcl
jmp
and
jb
jne
push
int3
inc
pop
cmp
push
fcoms
mov
stc
sbbb
lret
pop
mov
cmpsb
pop
push
decl
fidivrl
int
out
dec
nop
sbb
jo
dec
inc
inc
cmp
test
fadd
in
mov
dec
xchg
roll
and
pop
in
push
dec
xchg
stc
lcall
orb
jp
push
mov
sub
inc
inc
daa
add
pop
jle
jecxz
pop
add
and
arpl
enter
psrld
dec
add
aam
les
loop
movsb
xchg
xor
dec
pusha
in
add
out
sbb
repnz
fcos
dec
loope
mov
lahf
or
scas
shll
cmp
into
aam
hlt
test
movsb
jae
xchg
int
mov
push
mov
dec
and
orl
pusha
sub
push
mov
cmc
xor
in
mov
push
mov
sub
inc
jl
pop
dec
inc
das
repz
lods
xor
sub
lods
add
mov
pop
int
mov
and
and
mov
lret
pop
dec
aaa
mov
sbb
fsubs
pop
movsl
sub
push
popf
mov
inc
add
push
xchg
dec
xchg
cmp
sarb
nop
mov
out
mov
jg
shl
push
movsb
sub
loope
sub
jg
cmc
xchg
push
cld
lea
test
mov
and
or
jo
cwtl
xor
cmpsb
fs
into
arpl
test
aam
inc
in
jp
out
negl
adc
loop
dec
adc
pop
push
jle
fdivl
ret
shlb
outsl
iret
rcl
imul
jo
daa
insb
insb
insl
mov
xor
popa
mov
stos
add
cmp
mov
jo
loope
stos
addr16
stos
jns
add
mov
mov
pushf
xchg
lock
in
imul
mov
or
add
mov
inc
scas
fidivl
dec
rol
add
insb
mov
mov
dec
and
std
loop
aas
push
mov
lcall
mov
mov
out
sbb
mov
fdivrl
push
mov
fadds
dec
lock
cs
outsl
mov
xor
aas
sbb
ffreep
mov
jbe
dec
xorb
imul
mov
nop
push
mov
xchg
movsl
mov
add
lcall
gs
icebp
inc
push
in
imul
aad
push
sbb
inc
jmp
repnz
imul
sbb
inc
int
dec
stc
mov
js
mov
cld
iret
stos
xchg
std
popa
push
ja
aam
out
push
lret
jmp
sub
pop
pop
shlb
add
lret
jno
xor
and
lcall
jp
sub
xor
iret
jl
out
pop
ja
movsb
sbb
cmp
pop
inc
sti
aad
jl
ljmp
in
ret
jg
mov
xor
jle
daa
pop
ja
push
outsl
rcrb
cmp
das
push
inc
outsl
test
sbb
adc
notl
addb
mov
cli
push
arpl
sub
push
out
pop
push
push
and
mov
dec
lods
cmc
imul
mov
cld
stc
cli
adc
push
cmp
inc
cld
dec
jp
or
adc
insl
push
pop
lret
adc
xchg
inc
into
and
test
cltd
mov
ja
jae
int3
inc
test
test
cmpsl
sbb
pop
push
lret
mov
test
xchg
xchg
jb
testb
lods
xor
popf
das
ret
dec
push
xchg
xor
mov
mov
xchg
jmp
or
loope
add
repnz
dec
daa
mov
pop
lock
mov
enter
sbb
jge
mov
xchg
mov
adc
scas
push
shr
ss
stos
sbb
enter
cmpsb
jecxz
inc
xchg
mov
outsl
lods
xchg
fs
dec
push
insl
into
aam
in
jecxz
lods
std
pop
and
and
sarl
shrl
dec
adc
add
sti
ss
mov
mov
dec
imul
mov
inc
add
rcrb
stos
fs
sbb
loop
push
je
leave
pop
inc
fisubrl
fwait
fs
pop
les
iret
add
cmp
cmpsl
ror
inc
out
aas
cwtl
test
jmp
scas
aas
test
jo
xchg
pushf
jbe
out
sub
pushf
arpl
adc
push
lods
cmpsl
inc
std
mov
push
lds
pushf
cmp
mov
xchg
add
mov
push
sub
dec
push
add
inc
sub
xchg
jge
push
mov
dec
push
dec
and
rolb
fimuls
mov
add
sbb
pop
rorb
js
xor
inc
xchg
faddl
pop
xor
pop
inc
pop
rcll
jbe
imul
jecxz
push
mov
pop
emms
or
jl
pop
cmc
test
sub
and
lret
cmp
das
or
mov
arpl
test
loope
dec
push
xorl
cltd
inc
push
testb
mov
test
scas
lret
xchg
push
pop
inc
insb
addr16
incl
insl
inc
jp
adc
mov
pushf
sub
cmp
dec
shlb
inc
push
dec
jae
push
cmp
xchg
call
push
jmp
or
pop
jno
fwait
scas
xchg
xor
test
mov
imulb
loopne
mov
sbb
push
fsubrl
fnsave
add
or
add
enter
pop
ja
add
add
pop
out
sbb
into
mov
adcb
lret
mov
adc
mov
adc
pushf
sarb
cmp
push
test
outsl
stc
lods
cmp
mov
lea
mov
xchg
icebp
out
inc
jo
imulb
cwtl
xchg
push
inc
inc
adc
and
add
in
int
sub
bound
cmpb
jmp
xchg
mov
push
cmpsl
adc
sub
ja
xchg
movsl
push
mov
lret
mov
push
mov
aam
es
push
in
lds
fcmovnu
jae
mov
mov
pop
rep
sub
cld
xchg
jbe
adc
mov
fwait
dec
ss
mov
add
sub
cli
add
je
out
mov
pop
std
fists
cmp
push
jl
xchg
inc
xchg
inc
cmp
push
idiv
mov
mov
jl
aas
imul
dec
mov
cmp
popa
test
push
dec
scas
or
call
mov
ds
jle
outsl
inc
gs
lahf
xor
push
sarb
mov
push
jae
shlb
mov
ja
cwtl
lahf
test
sarl
ret
inc
mov
testb
rcrb
sub
pop
inc
xor
xchg
push
jbe
jo
nop
xchg
inc
mov
mov
dec
inc
and
push
mov
mov
cmc
es
pop
lahf
sysexit
rcrl
xchg
or
sbb
bound
out
adc
cwtl
and
inc
mov
lret
jl
push
fists
jp
push
pushf
std
mov
mov
pop
push
push
sti
mov
mov
fildl
repnz
push
hlt
outsl
mov
mov
out
jne
leave
lods
push
cmp
and
jecxz
mov
pop
cmc
rcl
jmp
pop
mov
sub
lret
sbb
add
xor
das
scas
mov
pop
xor
dec
mov
mov
in
shl
sub
pop
lock
je
push
push
shl
or
inc
repnz
mov
icebp
incb
hlt
adc
loopne
ss
push
loopne
imul
dec
outsb
mov
in
push
mov
add
xor
jbe
sub
cltd
push
or
fs
call
aaa
cmc
sub
cmp
jge
inc
or
dec
mov
sbb
add
xchg
xchg
mov
pop
clc
icebp
and
adc
xlat
inc
cmp
jnp
and
inc
stc
sub
in
lock
insb
xor
imul
popa
mov
lock
push
cltd
or
inc
inc
mov
push
out
adc
push
sarb
and
dec
jl
sub
and
addb
dec
pop
mov
dec
in
pop
sbb
and
cwtl
out
push
iret
movsl
test
aas
mov
gs
mov
push
dec
insl
sti
incl
xchg
pop
imul
scas
test
dec
cmp
and
lcall
leave
mov
daa
jle
scas
mov
or
call
pop
sub
add
mov
inc
fwait
pop
mov
inc
jg
ja
dec
nop
mov
mov
movsl
push
subl
push
arpl
xchg
dec
cs
mov
pop
pop
test
xor
adc
cmp
test
inc
sbb
outsl
push
sub
adc
testl
insb
xor
sbb
or
sti
or
cs
and
pop
pop
adcl
ds
pop
sbb
repz
jb
mov
scas
fistl
icebp
adc
adcb
lahf
dec
sub
fnstenv
mov
cmpsb
into
repnz
jo
cwtl
mov
add
xchg
mov
jecxz
dec
fwait
xor
aas
test
cmpsb
jo
enter
push
or
add
aaa
and
adc
enter
adc
mov
out
ret
out
pop
xchg
popf
fcomip
mov
mov
push
mov
and
in
out
andl
repnz
movsb
xchg
mov
cld
add
push
push
scas
rolb
jne
or
cltd
cmpb
scas
shll
lret
add
sub
sub
mov
stos
out
xchg
out
mov
repz
and
pop
lahf
pop
push
mov
adc
out
cmpsb
cmp
or
lods
add
mov
test
test
mov
fsubl
repnz
cs
in
les
mov
and
push
mov
jno
or
mov
mov
repz
xlat
jb
es
lret
sub
rcr
ljmp
das
push
pop
dec
mov
xor
jp
outsl
inc
add
sub
sub
js
enter
add
clc
faddl
mov
mov
sub
adc
ret
push
inc
inc
adc
movsl
outsl
add
push
aaa
stos
pcmpeqb
outsb
or
mov
cmpsl
aaa
in
jo
xor
cmpb
mov
repnz
addb
push
or
inc
movsb
or
mov
jb
enter
cmp
lods
mov
mov
cmp
xor
sar
loop
loop
call
pop
dec
mov
fldcw
fs
add
lcall
xchg
mov
dec
sbb
arpl
imul
cmpsb
dec
enter
test
jae
mov
jp
push
fiadds
movl
mov
cmpl
test
dec
mov
mov
jecxz
sbbl
jmp
pop
mov
mov
mov
pop
and
jmp
repz
xchg
js
pop
mov
test
stos
out
xchg
cwtl
jmp
add
pop
and
stos
cmpsl
xor
adc
ds
ret
ljmp
mov
or
imul
add
pop
inc
sbb
pop
jbe
es
mov
add
adc
jns
jp
cmp
dec
adc
mov
pop
mov
push
cmp
in
test
jns
cmpb
dec
jno
jmp
dec
and
cltd
pop
es
ja
loopne
jne
addr16
mov
jnp
incb
sub
push
sarb
sbb
cltd
stc
cld
shl
pop
sub
mov
call
outsl
mov
push
repz
hlt
repz
pushf
test
rcrl
pop
xchg
ljmp
xchg
add
adc
cmp
sahf
nop
jnp
inc
pop
shlb
sbbl
movsb
cwtl
and
daa
out
xchg
inc
ret
adc
movsl
lahf
cmp
outsl
inc
icebp
cmp
int
call
push
and
setne
rorb
adc
xchg
jbe
and
sbb
jo
fistps
xchg
push
jge
sbb
pop
das
repnz
or
add
xchg
jb
sbbl
pop
sbb
je
jl
pop
xor
js
retw
lock
xlat
mov
sbb
in
fcmovnb
icebp
inc
cmp
dec
lcall
and
shlb
xchg
push
pop
movsl
mov
lea
or
dec
ljmp
inc
xchg
add
mov
mov
mov
mov
movsb
out
out
jbe
aam
xor
jl
add
mov
pop
das
sub
lcall
cld
mov
mov
jb
cltd
sub
xor
inc
fmul
jmp
mov
mov
icebp
int3
dec
in
sbb
or
mov
inc
pop
push
ds
cwtl
popl
and
cmp
xor
in
cs
cli
or
jo
aad
cmc
ds
fcoml
imul
mov
cmp
mov
or
xlat
aad
rolb
js
pop
jle
sbb
pop
adc
mov
add
push
mov
xchg
enter
pop
ret
data16
popa
dec
add
movsb
cs
outsl
lods
out
xchg
cmp
outsb
mov
aad
in
arpl
lret
cmc
add
or
push
pop
jno
mov
mov
push
xor
mov
and
jno
sub
aad
add
sbb
cmpsb
inc
pop
rclb
push
aas
push
inc
mov
jae
hlt
sbb
lods
loope
push
ljmp
fs
jmp
push
icebp
rcrb
xchg
pop
into
dec
pop
pop
cmc
inc
dec
pop
mov
in
jg
mov
daa
jno
mov
xchg
inc
mov
lret
xchg
lcall
popa
ficompl
xor
jnp
jecxz
or
arpl
or
mov
cwtl
pop
test
pop
clc
or
add
loopne
andl
cmp
sahf
sbb
shll
mov
mov
pop
or
inc
rorl
xor
loop
cld
pop
fwait
ret
pushl
inc
jl
pop
out
jmp
bound
add
pop
add
jmp
sub
pop
icebp
imul
ss
or
lret
nop
ret
mov
xor
pop
mov
pop
dec
sbb
je
sahf
and
xor
or
xchg
mov
enter
push
jge
fstpt
dec
mov
aad
sbb
popa
rclb
aaa
cs
popa
xor
dec
lods
in
lcall
adc
inc
mov
xor
push
loope
insl
inc
pop
mov
add
in
and
in
test
ljmp
cmp
pop
notl
gs
push
fmuls
sahf
sub
xchg
das
enter
lret
and
jmp
cmpsb
mov
jbe
inc
rep
data16
mov
jno
mov
and
push
sub
out
or
scas
sahf
jo
arpl
mov
mov
adc
addb
dec
mov
insl
lahf
cmp
icebp
sbb
xor
jnp
les
xor
dec
pop
or
ret
cmp
xor
and
in
in
add
test
nop
push
insb
movsl
mov
imul
jg
js
decb
bound
ss
sub
pop
sbb
int3
sbb
not
cltd
mov
nop
aas
inc
and
mov
imul
sbb
and
xchg
pop
js
and
mov
xlat
pop
mov
lret
int3
pop
lds
cld
or
xor
push
bound
fists
enter
sub
fmuls
adc
or
adc
pop
or
xchg
mov
test
jecxz
cld
sub
pop
xor
dec
sub
fisubl
sbb
addr16
mov
sub
int3
rorb
clc
mov
loopne
loop
cmp
push
jg
jo
fiaddl
popf
push
popl
ss
push
cmp
xor
mov
push
dec
or
arpl
sbb
mov
movsl
xchg
roll
sbb
hlt
mov
fnstsw
ret
mov
fdivrs
fs
pop
mov
call
push
shll
lret
out
repz
in
testb
xchg
xchg
adc
push
cmp
pop
pop
aaa
jmp
orb
jb
dec
lret
aad
clc
add
mov
pop
dec
and
cmp
jp
stos
add
ror
mov
stos
fidivs
jg
pop
adc
lock
sarl
xchg
into
mov
adc
dec
shlb
cltd
push
mov
inc
imull
push
mov
mov
push
lcall
mov
and
push
adc
fldt
mov
push
insl
mov
dec
rclb
cli
pop
pop
add
sub
pop
mov
sarl
imul
mov
and
mov
in
sbb
pushaw
sub
lds
imul
mov
pop
adc
scas
sub
jge
sbb
fstl
arpl
dec
mov
inc
inc
iret
stos
movsb
int3
out
fnstenv
mov
xor
dec
aaa
outsb
iret
or
mov
scas
faddl
je
repz
incb
icebp
popl
in
pop
test
in
mov
orb
cltd
aaa
mov
sub
or
jmp
xor
mov
xor
loope
inc
popa
push
aas
inc
and
push
push
stc
popa
xor
sub
gs
jns
dec
loop
cmp
fimull
sub
cltd
ljmp
icebp
adc
push
lds
lds
pop
jae
test
les
call
mov
xchg
fsubrs
jecxz
push
dec
pop
and
adc
sub
dec
data16
dec
lret
lea
xlat
mov
outsl
mov
into
dec
cmp
rcl
popa
xor
or
lret
add
push
jb
sbb
out
lds
imul
loope
or
aas
loope
loopne
sti
shll
fwait
pop
sub
jge
pusha
je
mov
testb
aaa
rclb
stc
inc
icebp
rcrl
imul
and
cs
cltd
mov
bound
rcrb
pop
int
gs
data16
ret
shl
inc
jmp
xchg
mov
mov
and
sub
cmpsb
int3
mov
scas
mov
dec
js
roll
pop
into
imulb
dec
stos
push
pop
in
dec
inc
cmc
push
xchg
jg
mov
dec
lret
push
jns
mov
and
testl
cwtl
sets
lods
orl
lret
cmp
add
in
orb
xchg
and
push
push
mov
iret
lret
jo
xchg
cwtl
in
in
push
shlb
negb
xchg
jle
add
pushf
add
mov
outsb
outsb
mov
lcall
mov
stos
xor
sub
jl
icebp
xor
mov
pop
addr16
xorl
cmp
or
inc
lahf
lahf
out
jle
pop
mov
gs
xchg
dec
stos
pop
jno
inc
es
push
push
jle
adc
in
pop
mov
movsl
pop
lret
sub
mov
sbb
rorl
jle
or
rcrl
mov
cli
lret
inc
fst
lds
sbb
cld
jae
add
mov
ss
pop
xor
inc
aaa
cmp
scas
mov
xlat
ja
daa
dec
mov
dec
rcll
push
cmp
sub
xchg
nop
outsb
jbe
xchg
das
inc
and
out
push
jne
mov
sub
dec
xor
sub
hlt
sub
inc
ret
sbbb
aad
or
adc
pushf
push
sbb
out
jle
shlb
dec
mov
xor
repz
shlb
lods
lret
pop
adc
xchg
inc
es
or
push
dec
mov
cmpsb
mov
aaa
or
add
mul
xor
pop
stc
fmuls
jne
jnp
data16
into
shrl
mov
int3
cmp
jnp
dec
jmp
aaa
dec
movsb
rcrl
jbe
sub
repz
je
divb
pop
jl
fsubrp
movb
aas
adc
pop
sbb
sti
daa
mov
mov
pushf
aas
inc
scas
fistpl
dec
push
xor
push
jnp
cmc
ret
les
clc
inc
fwait
push
cmc
lods
adc
orl
pop
cmp
cmpl
mov
scas
fs
mov
loop
test
imul
lods
cmpsb
jp
dec
stos
mov
push
push
mov
or
lods
les
loop
push
add
cmpsl
in
pop
iret
stc
push
cmp
pop
pop
mov
sub
inc
pushf
push
mov
xor
xor
ds
icebp
inc
xchg
push
xchg
mov
jne
mov
out
jno
cmp
adc
inc
inc
and
mov
inc
jmp
cmc
leave
cld
mov
fldt
pop
int3
lahf
stc
loope
pop
in
cltd
clc
mov
mov
xlat
sti
out
shll
jge
xchg
or
imull
das
ret
jns
push
adc
rol
inc
sbb
das
idiv
outsb
int3
fnsave
dec
push
xlat
out
cmp
stc
mov
add
cli
pop
sti
mov
xor
divb
in
int
pop
cmc
xor
push
mov
and
jne
repnz
test
mov
fwait
leave
pop
add
jle
cmp
jl
lea
xor
int3
xlat
test
lcall
or
cmp
icebp
xchg
dec
in
ret
xchg
pushf
aas
js
push
daa
ja
push
mov
mov
mov
stos
xchg
fildll
cmp
mov
xor
test
iret
out
dec
jne
lahf
cmp
jne
xor
pop
dec
inc
lods
fldl
fldenv
nop
cvtpi2ps
and
and
xor
das
adc
into
ljmp
sub
xor
lret
or
fidivrs
xor
lods
rclb
push
rorl
push
insl
cmpsl
and
loopne
jb
and
and
and
or
fisubl
test
cli
or
fsubl
loope
pop
xchg
sbb
inc
or
jae
mov
xor
jmp
xlat
js
gs
fisubrl
fistps
js
cli
xor
cmp
sub
iret
loope
ja
fst
mov
xchg
dec
jo
pop
adc
daa
leave
inc
fadds
fldl
mov
jp
inc
popf
dec
loope
std
xor
inc
xchg
jbe
inc
ret
arpl
jmp
aam
mov
mov
bound
out
daa
icebp
test
andl
cmp
adc
push
pop
test
cmp
xchg
sbb
pop
fs
fwait
jbe
dec
inc
popf
mov
xlat
lods
jnp
in
sahf
sbb
and
addr16
dec
nop
ds
mov
xor
mov
lret
into
jne
movsl
push
and
jl
push
fdivs
js
sti
cmp
or
lcall
dec
imulb
hlt
pop
sbb
sbb
xchg
adc
les
jmp
repnz
aaa
cltd
lock
jo
fwait
mov
add
xor
dec
dec
xor
cmp
and
jg
dec
adc
test
sub
outsb
faddl
jge
push
add
shlb
sub
pop
outsl
test
lock
xchg
cs
dec
pushf
pop
or
dec
lret
aaa
jae
pusha
xchg
rorb
push
dec
in
repnz
xor
pop
xchg
add
push
jne
addr16
dec
jmp
mov
cmp
lret
sarb
lds
mov
jmp
sbb
xlat
stos
push
fiadds
cld
loope
sub
xchg
adc
test
xlat
loop
and
loope
jne
inc
pusha
dec
push
in
pop
jle
mov
jns
in
pusha
pop
sbbb
aam
fstp
out
push
sti
in
or
xor
add
loop
jg
dec
xchg
fildl
js
xchg
negl
sbb
cmpsl
scas
pushf
inc
mov
fiadds
cmpsb
icebp
js
dec
xchg
test
cwtl
ss
push
fcmovnu
adc
popa
shrb
scas
inc
popf
and
mov
movsl
nop
popf
cmp
add
adc
cmp
jecxz
test
fisubrl
mov
and
xlat
frstor
mov
lods
lods
dec
mov
inc
ja
and
jge
xchg
push
dec
sub
shll
sahf
adc
popa
insl
and
pop
sub
jg
sub
les
sub
cmp
mov
adc
addr16
sub
adc
pop
cmpsb
inc
mov
loopne
sbb
cmp
xorl
les
push
repnz
sbb
icebp
pop
jnp
or
cmp
jne
pop
call
aaa
fnsave
xchg
mov
cmc
fs
jmp
pop
xor
mov
mov
popfw
pop
mov
pop
push
andb
mov
mov
jae
data16
pop
inc
pop
mov
mov
mov
clc
mov
je
pop
movsl
jecxz
pop
jg
sbb
xchg
out
push
sar
lds
add
xor
or
lods
stos
shrb
andb
icebp
push
movsl
sbb
sub
mov
fistpll
andl
xchg
mov
das
cmpsl
iret
rcr
push
js
xchg
sbb
in
pusha
dec
mov
or
nop
jge
test
push
push
cmp
jp
xor
in
push
div
xor
jmp
insl
xor
mov
jb
mov
mov
iret
dec
and
sbb
jg
push
sbb
leave
cs
int3
adc
dec
jae
push
into
test
push
inc
into
das
inc
jb
roll
int
outsb
pop
add
or
lods
ret
mov
sti
add
nop
add
rcl
cmp
push
mov
mov
out
cmovae
in
out
movsb
and
movsl
bound
jns
or
mov
push
jb
jno
cwtl
fdivrs
push
inc
das
sub
dec
mov
out
mov
jno
shrb
push
dec
inc
scas
or
inc
mov
int3
scas
xor
stc
jmp
negl
and
mov
fs
fisttpll
jmp
rorl
rcrb
cmp
pop
bound
shl
sti
int
jmp
add
imul
in
and
mov
or
jmp
dec
xchg
insl
jb
lahf
pop
mov
cltd
adc
ljmp
test
mov
shl
or
call
in
jne
ret
sub
and
push
scas
fsubrl
call
cmp
bnd
or
jl
and
or
jb
test
imul
mov
insb
movsb
subb
bound
xchg
cmp
add
jl
add
nop
scas
stc
adc
stos
or
inc
int3
les
jno
xor
mov
mov
and
pop
inc
and
cmp
pop
bnd
inc
popa
push
and
xchg
ds
jge
push
mov
xchg
loope
mov
repz
and
push
cs
fiadds
lds
inc
mov
push
cmpsl
mov
sub
in
test
das
int
inc
bound
mov
lea
daa
pop
mov
aam
sahf
rorl
push
sub
inc
and
sbb
xor
fldln2
pop
gs
mov
push
mov
test
add
dec
jle
and
lods
push
push
xchg
outsl
dec
jae
jb
add
dec
inc
adc
xor
jmp
and
mov
ss
xchg
test
pop
in
test
in
adc
dec
sub
adc
xchg
bound
nop
gs
cmp
es
jle
inc
cmpsl
psubusw
outsb
xchg
lods
sub
popf
sbb
pop
jl
push
mov
jne
inc
or
dec
shlb
sbb
cmp
xchg
add
inc
cmp
jo
cmpsb
mov
pop
adc
push
aaa
cli
call
aas
das
std
mov
popf
push
dec
mov
fs
mov
add
imul
rcll
clc
mov
shrb
xchg
inc
inc
clc
mov
lods
sbb
icebp
dec
cmp
idivb
add
imul
popa
xchg
ret
push
and
test
pop
jnp
inc
mov
daa
or
sub
mov
dec
andb
jmp
and
xchg
fbstp
outsl
insl
jnp
sbb
pop
cs
imul
inc
and
mov
gs
pop
dec
or
or
push
hlt
jb
or
outsb
cld
adcb
addr16
dec
cmp
aas
xchg
sub
hlt
push
loopne
inc
xlat
push
or
and
mov
loope
or
pushf
incl
gs
jnp
inc
out
jecxz
sbb
cltd
rcr
popa
jmp
andl
out
mov
cltd
hlt
pop
jno
xchg
cwtl
xchg
out
adc
gs
xchg
mov
stc
mov
aaa
cld
in
or
adc
divb
mul
adc
fbstp
mov
inc
in
sbb
lods
outsl
push
add
dec
inc
xchg
inc
sub
cmp
xchg
pop
cs
pop
jmp
cmp
aam
mov
fadds
and
push
adc
fistpll
xchg
cwtl
out
adc
movsl
xchg
pop
mov
gs
addr16
add
out
and
dec
div
or
loope
mov
sub
int
inc
pop
insl
fidivl
xchg
in
cmp
fistps
cli
dec
sar
mov
jo
dec
out
mov
fdivrp
lahf
mov
les
sbb
sub
testl
dec
cmp
inc
push
lret
mov
or
mov
push
lcall
loopne
mov
outsb
aaa
repnz
push
js
push
aaa
aaa
loop
xchg
packsswb
adc
ja
xor
ret
fnstenv
sbb
andl
cld
jle
daa
dec
and
in
lcall
mov
test
das
add
sub
dec
mov
jns
aas
nop
or
pop
loop
xchg
mov
or
insl
int
aad
out
push
iret
mov
subb
xchg
je
push
pushf
add
out
addr16
icebp
loop
movsl
mov
sbb
outsl
jae
mov
cmc
adcb
dec
adc
les
dec
mov
fnstenv
add
arpl
push
mov
dec
mov
mov
dec
mov
in
cmpsl
push
call
and
pushf
add
sub
mov
mov
pop
cltd
mov
xor
and
jecxz
xor
aad
gs
adc
adc
xor
je
in
outsb
leave
and
pop
popf
lret
xor
mov
and
imul
mov
jge
dec
push
jne
push
cmpsl
fsubrs
sbb
add
sbb
add
decl
loope
push
push
shll
fwait
sub
lret
pop
leave
push
mov
pop
or
insl
repz
in
add
scas
and
push
test
cmp
pop
xchg
lock
mov
inc
lret
adc
lea
mov
out
sarl
xlat
movsb
gs
add
jl
in
cmp
pop
or
clc
dec
arpl
xchg
mov
sub
lcall
sti
aad
cmp
incl
jne
sbb
push
dec
sub
jns
mov
push
adc
cmp
test
push
adc
jo
shlb
add
inc
mov
add
push
adc
popa
stc
inc
leave
imul
mov
or
fxam
xor
mov
mov
std
xchg
into
fisubrs
loope
pushw
pop
int
dec
js
inc
iret
jbe
gs
xchg
mov
shlb
push
cmpsb
lods
test
leave
sbb
lock
aad
dec
pop
loop
cmpsl
fwait
sub
hlt
loop
add
mov
pop
daa
adc
add
pop
push
testb
sub
out
in
pop
mov
pusha
jle
xchg
jle
xchg
mov
mov
sub
jmp
movsb
mov
addl
add
sub
xchg
call
jmp
ja
iret
jle
notl
push
add
pusha
popf
rcrl
sbb
mov
in
mov
scas
cltd
jbe
inc
push
cmp
or
rol
and
pop
test
push
sbb
push
push
pushf
mov
nop
jmp
jle
in
jae
je
pop
nop
sbbl
and
aaa
aam
jnp
je
and
jno
sub
pop
pop
cmc
push
xchg
adc
xchg
mulb
add
aas
jl
and
cmp
das
ja
movsl
in
jg
subl
call
sbb
out
inc
repnz
mov
and
and
xlat
mov
dec
inc
mov
jmp
mov
xchg
mov
out
mov
mov
mov
xchg
aad
es
jp
sub
push
jge
xchg
push
xor
mov
adc
cmp
cwtl
es
scas
stc
sbb
and
gs
fcoms
jnp
push
aad
xchg
ljmp
cmp
dec
test
enter
ss
dec
ficoms
adc
sub
sub
imul
stos
push
gs
mov
fnstsw
into
mov
aaa
add
or
mov
xor
rcl
lcall
lock
pop
loop
movsw
filds
stos
call
jg
mov
jnp
es
aaa
lahf
mov
repz
fs
in
jecxz
jge
mov
pop
and
test
push
cmpsl
mov
lcall
xor
xchg
and
jnp
inc
out
jle
dec
ret
in
pop
les
aad
push
sar
in
idiv
fs
xchg
loop
lret
mov
fwait
jns
fnstcw
mov
test
data16
adc
lock
test
rep
jl
lock
xchg
popa
dec
loopne
adc
cmp
insl
pushf
lods
scas
push
in
mov
lcall
sub
dec
mov
mov
sti
jb
leave
adc
iret
aas
or
cmpb
lcall
lahf
xor
xchg
push
fwait
loopne,pt
test
and
lods
mov
fninit
test
outsl
aaa
cmc
jnp
inc
xchg
fistpl
dec
scas
jmp
mov
xor
subb
jecxz
and
arpl
xor
test
arpl
ret
data16
mov
mov
push
sub
mov
jmp
in
repnz
xchg
hlt
mov
adc
jecxz
imull
std
and
lcall
aaa
das
pop
adc
dec
adc
jmp
data16
pop
and
xchg
jb
cmp
xchg
mov
mov
lcall
mov
loope
sub
std
lods
adc
wbinvd
aam
cmp
or
mov
cli
in
dec
rclb
ja
pop
mov
jp
int3
insb
inc
add
xor
sub
push
in
xchg
cmp
in
or
inc
sarb
fdivrp
call
addl
mov
inc
lret
cmc
hlt
mov
dec
xchg
push
push
std
mov
popa
xchg
arpl
orb
es
dec
inc
jg
inc
push
cmpsb
mov
dec
add
scas
and
test
cltd
mov
push
cmpsl
xchg
jns
lcall
or
mov
mov
in
or
test
nop
and
dec
fdivs
daa
push
pop
shll
push
xchg
dec
bound
lods
cltd
jecxz
imul
push
inc
jns
popa
or
mov
push
dec
pop
push
sub
addb
mov
stc
adc
fcoms
pusha
fcomps
jae
dec
cld
mov
inc
push
and
adc
mov
pop
gs
fnstenv
add
arpl
loopne
cmpsl
cwtl
loope
or
xor
xchg
test
popa
data16
aad
mov
rorl
pushf
mov
aaa
pop
js
push
xor
clc
ljmp
mov
movl
cmp
jae
rol
lahf
jo
xchg
mov
mov
add
gs
ljmp
xorl
in
ret
iret
jl
cmp
stc
mov
xchg
push
orl
cmp
mov
add
cmp
pop
fcompl
loop
pop
or
mov
dec
sub
push
xchg
jns
adcl
cmp
cmp
push
xor
mov
cmpsb
pop
mov
dec
ret
in
ret
gs
inc
or
out
pop
sub
cmc
in
jle
mov
push
dec
cld
loopne
mov
and
xchg
mov
inc
lret
lret
daa
test
xchg
lcall
fadds
popa
lret
icebp
js
dec
pushf
cmp
aam
mov
or
pop
test
in
cvtps2pd
pop
inc
cmp
frstor
dec
in
daa
xor
xchg
push
sbb
push
lcall
sub
popf
jg
mov
and
rcll
test
leave
or
mov
es
and
mov
out
in
mov
call
mov
adc
sub
add
and
rorl
add
inc
lahf
pop
pop
lock
outsl
ret
add
xor
add
xchg
add
enter
sbb
mov
lods
icebp
sub
xchg
mov
and
pushf
daa
mov
aas
shll
xor
adc
aaa
std
cmp
lret
outsl
shlb
rcl
popa
sti
push
push
inc
dec
jns
mov
aaa
jecxz
cmp
pop
xchg
or
cld
inc
xchg
add
loope
adcl
jne
sti
jo
shlb
xor
pop
push
stos
lret
sahf
xor
loopne
pop
aad
ficoml
mov
loopne
pop
cli
rcl
movsb
lods
mov
sti
iret
mov
js
inc
mov
xchg
loopne
dec
add
jo
out
xchg
test
outsb
enter
xchg
sub
int
or
lret
mov
mov
test
inc
sbb
xchg
loopne
jmp
leave
outsb
iret
shr
pushf
mov
out
push
imul
out
dec
jnp
dec
subl
dec
daa
in
jmp
aad
push
fimull
in
daa
clc
mov
enter
dec
rolb
lret
sbb
repnz
mov
and
sbb
sbb
in
adc
aas
fwait
out
imul
sub
ljmp
add
js
push
nop
in
lea
sub
rorb
xchg
mov
adc
mov
pusha
adc
rcrl
jg
lcall
cmp
xlat
pop
fisubl
je
outsb
add
stos
inc
xor
loopne
push
stos
push
aas
xchg
ja
stos
xor
nop
add
sub
mov
jecxz
std
fists
sbb
push
and
cs
jg
jo
or
lods
fisubl
push
sub
iret
dec
mov
loopne
sbbl
lock
cmpsb
int
notb
xchg
in
repz
xchg
or
stc
mov
insl
daa
insb
ljmp
jns
nop
cmpl
fucomip
push
sbb
pop
inc
mov
jb
jl
das
inc
mov
adc
inc
mov
sbb
int3
and
inc
mov
push
cmp
and
cmovnp
add
mov
outsb
jg
popf
adc
jmp
and
imul
mov
jno
lea
mov
xlat
lods
jg
pop
cmp
dec
sub
int3
pop
lea
pop
pop
mov
in
imul
dec
add
cmc
jp
jge
mov
lock
out
push
adc
test
out
outsb
fwait
add
jbe
popa
ja
push
fwait
jecxz
xlat
lahf
iret
pop
cmp
nop
js
mov
push
or
fwait
jmp
iret
sbb
in
in
dec
in
cli
jns
rol
pop
push
iret
ds
sti
loop
repnz
xor
mov
ds
push
stos
jnp
add
jg
mov
mov
sub
fcmovnu
xor
push
dec
inc
repnz
cli
jecxz
xchg
lea
test
inc
fadd
scas
fldenv
push
or
shlb
stos
add
dec
movsb
insl
and
jo
and
mov
in
mov
divb
mov
lahf
outsl
push
jl
adc
sbb
xor
or
imul
icebp
sbb
int
cmp
adc
lret
leave
pop
lds
ffree
into
jo
and
enter
pop
jp
addl
pushf
rolb
aas
cmp
repz
fdivrs
dec
sbb
jmp
cmp
inc
gs
mov
xchg
sbb
mov
mov
cwtl
lds
cmp
jo
jg
push
outsb
lret
jl
stc
addr16
or
mov
scas
pop
cwtl
imul
mov
or
leave
push
add
int3
mov
sbb
push
adc
das
pop
lds
adc
or
lods
and
adc
in
push
xor
mov
pop
lahf
dec
and
mov
rcr
dec
fwait
mov
push
in
icebp
hlt
fwait
mov
scas
mov
scas
mov
sub
daa
jbe
add
mov
xchg
xchg
insb
ds
adc
xor
aam
cld
jno
mov
jnp
repnz
jg
fsubrs
jmp
out
jbe
andb
sbbl
xchg
inc
mov
rclb
dec
divl
mov
or
ret
stos
or
fdivs
mov
ja
push
mov
inc
in
rol
in
pop
jb
jl
xchg
dec
mov
adc
jbe
push
sbb
test
dec
mov
mov
inc
cltd
xchg
movsl
push
test
pop
sahf
adc
jl
jae
les
daa
adc
std
adc
andl
mov
inc
mov
push
dec
xchg
lcall
sbb
sub
push
aad
sbb
scas
and
popf
ja
add
or
frstor
adc
mov
cmp
sub
testb
dec
lret
or
inc
sbb
int
in
shlb
cmpsl
sbb
pmaxub
iret
les
mov
mov
fcmovbe
push
dec
mov
mov
ficompl
lret
or
div
sub
push
or
ljmp
xchg
push
inc
fistpll
and
push
rorb
dec
push
fcmovne
jge
loop
cmp
popa
mov
add
adc
fimull
cs
loope
test
stos
lahf
scas
sbb
add
jp,pt
jle
mov
pushf
or
mov
pop
fcoms
rclb
push
into
lds
xchg
mov
rcrl
movsl
push
xchg
repz
push
inc
xlat
or
shlb
insl
jno
sub
bound
mov
pop
pusha
push
repz
test
test
mov
lods
rol
imul
pop
mov
js
stos
clc
cmp
xor
cmc
decb
dec
pop
cmp
cli
cmp
xchg
test
repnz
pop
ja
pop
xchg
and
lret
push
test
and
push
imul
xchg
and
sbb
push
out
cmp
test
lea
loop
imulb
cmp
cwtl
ds
cmp
stc
arpl
xor
mov
dec
or
out
mov
and
outsb
loopne
daa
sbb
imull
js
push
mov
xchg
mov
or
out
xlat
xchg
cmp
push
out
pop
sub
sub
jb
pop
dec
mov
scas
loopne
xor
cmpl
mov
jge
pop
adc
jle
mov
faddl
mov
inc
imul
cmp
adc
sub
fidivs
and
andb
and
repz
pop
cmp
pop
sbb
sub
aas
cwtl
xor
in
add
call
add
stc
jp
orl
or
push
pop
mov
jp
dec
idiv
outsb
sub
and
or
fmulp
mov
xchg
add
and
push
cmp
mov
pop
push
js
jecxz
fcmove
loop
test
jae
sub
xchg
jecxz
jne
sbb
les
add
inc
aaa
enter
and
loop
adc
ss
enter
test
and
sub
pushf
cmp
adc
push
push
add
fsubrl
xchg
or
int3
mov
cmovnp
les
adc
pop
dec
and
jns
jo
daa
roll
add
sub
pop
cs
xor
scas
gs
mov
or
pusha
loope
adc
jge
cmp
xor
cmp
das
or
cmpl
inc
negb
mov
cli
les
je
sbb
push
push
mov
dec
xor
jge
sub
sahf
shlb
adc
popf
dec
out
jb
push
cmc
sti
sbb
ret
inc
fwait
aas
movsl
addr16
incb
inc
aam
and
sub
cmp
dec
hlt
in
test
stos
jno
dec
test
cmpsb
cmp
std
nop
push
adc
scas
xor
cmp
pop
js
cmp
mov
pop
jo
add
xchg
lds
xchg
pop
movb
sti
inc
mov
cs
fwait
test
xchg
jns
in
mov
in
cmp
cwtl
push
xchg
sbb
call
and
clc
mov
fisubrl
in
les
daa
out
mov
jmp
dec
in
cmc
idivl
in
jp
fs
fwait
push
push
aad
mov
aad
addl
sarl
loop
sub
inc
test
hlt
mov
aad
lods
or
xlat
mov
xor
jl
adc
out
inc
mov
repz
mov
cmpsb
jne
pop
iret
or
xchg
or
sub
out
mov
repnz
cld
ljmp
mov
mov
and
call
jle
mov
push
fwait
add
mov
or
cltd
daa
fptan
adc
pop
mov
cmp
jp
ja
or
push
jno
xchg
inc
mov
push
repz
into
and
dec
test
or
and
mov
out
pop
mov
pusha
stc
int3
je
adc
scas
and
push
sbb
inc
or
pushf
pop
mov
rclb
fnstcw
push
fsubrl
jnp
aaa
imul
adc
js
sarb
sbb
jae
adc
cmp
test
mov
fs
push
pop
test
lods
mov
xchg
add
loopne
cwtl
mov
nop
lds
jecxz
cs
and
repz
imul
arpl
popa
dec
mov
sbb
in
and
sub
pop
rolb
push
loop
push
rcl
pusha
lds
mov
pusha
cli
mov
add
or
push
lret
add
das
or
ds
pop
mov
jge
sbb
xchg
leave
push
sbb
mov
rolb
insl
shll
jecxz,pn
imul
rorl
subl
es
shlb
call
testb
in
into
and
fninit
xchg
iret
mov
ss
jge
int3
nop
dec
out
xorb
iret
test
ret
bound
ljmp
or
out
dec
sbb
ja
inc
sbb
mov
sbb
stos
daa
mov
xor
nop
aam
neg
divl
lock
sbb
sbb
sub
mov
arpl
shlb
cmp
add
repnz
sub
lds
jp
enter
cltd
xor
cmp
nop
mov
lcall
cld
imul
push
xor
push
or
shrb
dec
push
cmp
cmpsb
xor
add
int3
xor
scas
insl
lcall
inc
adc
or
adc
ss
lods
loop
xchg
push
mov
inc
add
jmpw
mov
inc
in
xchg
jne
lods
imul
imull
aas
outsb
mov
pop
jnp
rclb
ss
into
in
cmpsb
js
pop
mov
or
xor
ja
push
jmp
pop
mov
push
mov
adc
sub
cmpsl
dec
xor
xlat
std
xlat
sbbb
leave
fcompl
or
inc
xchg
xor
dec
jmp
rcrl
in
sbbl
cmp
lods
or
lds
js
ret
inc
mov
inc
jae
mov
addb
pop
cwtl
out
cmp
mov
scas
in
cmp
movsl
std
shrb
outsb
jne
dec
jns
test
sbb
scas
xlat
icebp
arpl
icebp
cwtl
mov
jns
inc
sbb
xor
jge
in
test
dec
hlt
outsb
push
mov
push
inc
mov
cmp
jg
pop
pop
add
stc
mov
lcall
mov
in
sahf
jmp
mov
arpl
mov
push
imul
fisubrl
shll
enter
and
adc
mov
pop
xchg
xor
popa
shl
mov
mov
mov
inc
xlat
xchg
cmp
jp
leave
pop
loop
or
and
pop
adc
add
fwait
in
push
pop
push
jg
mull
xchg
lret
xchg
jmp
daa
aad
subb
cmp
push
and
adc
adcl
dec
push
iret
sub
test
or
mov
js
dec
sub
dec
orb
fcoml
cmp
jmp
cmpsb
lods
cmpsb
cmc
mov
and
sub
aas
cmpsl
mov
aas
push
lret
cld
pushf
inc
xchg
test
jge
cmp
repz
adc
xor
inc
add
das
sbb
cmp
movsl
jg
cmp
icebp
sub
shufps
aaa
inc
in
cmp
cltd
outsb
nop
adc
sbb
jecxz
mov
push
inc
jb
leave
xchg
mov
xor
jecxz
push
adc
sub
cwtl
popf
fstps
cs
out
jle
lds
cmp
cmp
xchg
add
mov
das
and
cmp
xchg
cli
cmp
dec
jb
mov
test
or
outsb
rol
in
out
fisttpl
outsb
jmp
mov
mov
dec
and
xor
pushf
dec
aaa
dec
cmp
cmp
sub
sub
test
push
scas
push
or
and
movsl
pop
or
outsb
movsl
xor
fldt
add
ret
push
and
jmp
iret
add
outsl
std
rorb
jmp
pusha
aas
xor
add
jnp
add
pop
add
adc
mov
stc
adc
cmc
xor
mov
negb
xor
fldt
cld
mov
pop
sbb
and
ja
xor
popa
out
cmp
sub
out
xchg
add
add
js
sub
mov
push
pop
pusha
push
outsl
cmp
sub
negb
adc
cmp
xchg
out
lods
mov
mov
cmp
mov
mov
ds
nop
and
pop
mov
or
adc
in
clc
imul
sub
in
pop
mov
mov
insb
push
mov
lret
loopne
jp
pop
xchg
cmpsl
mov
decl
dec
data16
add
and
push
lock
outsl
jno
cmp
in
push
stc
xor
pop
mov
inc
and
xchg
ret
pop
push
inc
xchg
nop
mov
das
xor
xor
inc
pop
mov
loope
and
outsb
shlb
loopne
sti
adc
xchg
lcall
sub
rcr
mov
inc
and
pusha
fsubrp
pop
popf
aam
dec
add
sbb
push
rcrb
sub
loopne
add
jbe
cld
dec
movsl
and
std
and
aam
ficompl
shrl
ret
mov
cwtl
stos
inc
xor
cld
mov
or
sub
fwait
push
and
or
cmpsb
xor
cmp
test
sti
je
mov
in
cmpsb
mov
mov
ret
mov
jp
enter
xlat
xchg
add
cmp
in
mov
jmp
mov
mov
xor
negl
mull
add
outsb
mov
in
mov
in
jge
stos
push
aad
out
push
dec
pop
jnp
in
cmp
daa
das
add
shl
push
pextrw
sbb
push
sahf
pop
icebp
std
sti
fcmovne
dec
dec
gs
xor
push
lret
pop
inc
xor
loopne
stc
jmp
and
mov
push
imul
sbb
sub
cmp
mov
popf
fsubrl
push
lahf
ret
leave
out
cli
hlt
sbb
adc
sub
inc
into
xlat
mov
clc
dec
and
pop
inc
ljmp
and
xchg
dec
push
lock
mov
loope
xor
xchg
sub
mov
in
inc
push
sbb
push
and
push
xchg
inc
mov
in
and
sub
mov
jne
pop
jb
ljmp
pushl
mov
push
cmp
cmp
shll
push
and
fchs
lret
xor
pop
int3
adc
jo
dec
pop
or
and
in
fwait
aam
sbb
data16
dec
jb
mov
adc
movl
imul
sub
push
lret
cmpl
mov
or
lods
fwait
loop
sarl
mov
repnz
daa
push
cltd
mov
adc
iret
or
flds
pop
lea
push
in
repnz
mov
xor
mov
cs
xor
jl
rolb
xchg
sub
jmp
xor
stos
adc
pop
mov
cmp
xor
outsb
and
out
negl
xchg
jl
in
add
mov
mov
mov
fbld
xor
mov
iret
dec
test
ret
xor
sbb
mov
leave
stc
nop
xchg
test
icebp
or
fistpll
cmpb
imulb
mov
inc
mov
mov
fdivr
add
and
pop
mov
fidivs
jne
int3
jne
shlb
lods
cli
lock
jns
negb
sbb
jp
lret
sub
es
pop
movsl
shlb
inc
mov
push
cmpsb
scas
aas
add
sub
aaa
add
sbb
lea
mov
imul
pop
mov
fstp
or
jmp
push
or
mov
and
out
lret
adc
jle
pop
cmp
sub
arpl
sub
pop
jmp
out
and
ja
out
add
mov
pop
cmp
push
call
fsubl
adc
loop
arpl
lret
test
mov
cld
push
inc
iret
pop
shl
insb
cmp
aam
scas
out
sub
fxch
test
call
lret
hlt
jle
sbb
mov
mov
or
push
push
hlt
adc
aam
jp
and
popf
adcl
andb
dec
jg
shlb
xchg
push
add
or
adc
ljmp
out
jbe
pop
in
pop
outsb
sbb
mov
dec
fs
cwtl
push
sbb
sub
popf
ds
in
insl
nop
adc
push
cmpsb
mov
fmuls
lea
add
sub
clc
idiv
std
mov
mov
lret
xchg
xchg
popf
sti
fsubrs
movsl
rorl
mov
xchg
mov
mov
gs
push
movsb
mov
xchg
mov
dec
mov
ficoms
sbb
dec
jmp
rorb
mov
push
jo
cmp
dec
sub
mov
jle
jns
scas
adc
insl
cld
shrb
jmp
jp
aaa
repnz
add
aaa
push
ret
jne
out
push
cmp
stc
push
xchg
fldl
pushf
add
fstps
xchg
mov
lock
inc
out
push
push
nop
or
sub
xor
loop
js
movups
movsl
jle
adc
jne
mov
fsts
pop
push
ja
jp
pop
sti
cld
lods
divb
mov
data16
jge
lahf
mov
sbb
cmpb
push
sub
xor
mov
test
insl
or
outsl
dec
ss
into
cmpsl
jl
or
mov
movsb
sub
jae
inc
cld
pop
outsb
scas
jg
push
divl
jae
pop
es
mov
and
cmpsb
ret
sbb
mov
push
inc
push
lods
scas
mov
in
cmp
sub
cmp
mov
arpl
into
dec
rol
inc
sbb
pop
xor
jnp
addb
lds
dec
add
faddl
cltd
dec
dec
push
cmpsl
in
icebp
movsl
xchg
xchg
insl
xor
xchg
add
loopne
mov
cmp
and
nop
aas
andl
stc
inc
sub
xchg
fsubrl
pop
cmp
clc
mov
in
or
call
sbb
les
or
pop
nop
dec
sbb
out
add
cmpsb
mov
daa
in
js
test
adc
aad
dec
mov
mov
subb
aam
push
dec
cmp
in
sbbl
jo
mov
fwait
adc
out
fisubs
mov
daa
fisubrs
bound
arpl
or
and
sbb
cmpsl
inc
xor
sbb
jmp
dec
inc
hlt
cmp
clc
mov
xor
std
cmp
mov
cmp
push
xor
add
in
rcl
sub
pop
push
cmp
jmp
xchg
inc
shll
lret
hlt
iret
mov
mov
inc
xchg
mov
mov
sub
sahf
push
lret
adc
lahf
add
idivb
lcall
test
lret
mov
xchg
cli
std
sarl
mov
sub
push
sahf
pop
ss
ret
push
push
fwait
fwait
mov
inc
pop
inc
and
and
fstpt
push
xor
pop
jg
movsl
and
es
ljmp
jmp
popf
or
aas
incb
mov
shrl
ja
sub
addr16
jl
mov
rcrl
mov
movl
mov
adc
cwtl
in
inc
or
sub
inc
push
notb
inc
fsubrl
xchg
sti
mov
sub
pop
fs
mov
sbb
mov
mov
xlat
fnstenv
sahf
aam
pop
add
push
xchg
imul
scas
xchg
push
xchg
mov
leave
or
push
cmp
addr16
pop
outsl
sub
mov
insl
pop
xor
fistpl
lds
push
jb
cmc
mov
ret
scas
popf
push
and
cli
xchg
std
and
inc
fnstenv
cmpl
sbb
jae
jg
cmpsb
mov
sub
int3
stos
fstl
aas
xor
mov
push
hlt
inc
pusha
mov
dec
ds
sub
jmp
adc
ja
mov
sub
inc
das
mov
mov
xor
daa
inc
mov
rcll
scas
punpcklbw
adc
push
dec
pop
add
int
scas
es
cmc
pop
daa
dec
jo
in
push
xorb
mov
test
jo
out
ss
or
mov
mov
jmp
jl
xchg
fwait
es
cmp
inc
rcrb
inc
enter
outsb
hlt
in
sub
inc
pop
imul
int
xor
sahf
es
inc
xchg
mov
popf
mov
mov
jns
outsl
fiaddl
or
and
xor
jp
inc
jns
xchg
inc
jnp
imul
js
xchg
push
sub
cmpsl
push
xlat
jmp
pop
lea
outsl
test
jb
xchg
repnz
lods
bound
push
fildl
cmp
pop
sbb
sbb
pop
shll
mov
sbb
jbe
lret
jge
dec
fistps
or
or
inc
push
add
sub
push
mov
in
fstpl
or
pop
int3
mov
enter
test
movsl
xor
or
call
int3
mov
jae
mov
arpl
outsl
js
cmpsl
fdivp
adc
test
add
xchg
daa
jno
sbb
cmpsl
out
lret
cmpsb
pop
cmc
dec
arpl
cli
imul
bound
enter
jle
dec
sub
mov
inc
enter
outsb
out
cltd
jg
mov
xor
ffreep
add
leave
fcompl
insb
shl
lahf
or
adcb
xchg
and
add
inc
sbb
fwait
push
push
mov
jge
daa
push
pop
and
loop
sti
call
out
std
dec
loopne
ss
jg
clc
add
data16
xchg
stos
icebp
inc
xchg
ds
push
psllq
addr16
fwait
pop
hlt
sub
hlt
xchg
jae
and
rclb
xor
pop
xchg
incb
add
jmp
or
int
les
dec
adc
xchg
dec
xchg
lea
js
adc
mov
fisubl
popa
outsl
ljmp
mov
adc
mov
adc
out
cli
addr16
ljmp
dec
jns
sbb
jge
sub
fistl
shlb
mov
sarb
pop
mov
pop
icebp
mov
jno
and
dec
in
mov
jne
repnz
pop
push
xchg
push
pop
pop
aas
and
ret
mov
dec
popa
mov
rol
int
jl
cs
dec
in
nop
ret
or
push
cmp
lods
or
mov
mov
mov
leave
aad
push
adc
jecxz
call
dec
or
xor
ss
add
ljmp
leave
and
add
shl
lcall
mov
sahf
pop
xchg
push
inc
xchg
pop
out
and
inc
jb
fsubs
inc
pop
int
aam
xor
test
shll
xchg
cmp
jb
aas
hlt
mov
pushf
rorl
lret
jo
pusha
insl
enter
repnz
lret
sbb
popa
into
mov
mov
aas
xor
or
das
stc
ret
inc
insl
push
mov
loopne
mov
movsl
mov
fs
dec
push
mov
mov
sbb
clc
pop
mov
push
xchg
jecxz
out
sahf
xchg
cmp
movsb
cs
enter
inc
mov
js
sar
or
dec
xor
xchg
adc
cmp
movlhps
insb
rorl
xor
pop
aas
jno
jmp
sub
loop
pusha
loop
cmp
pop
xor
cltd
ret
test
and
push
aam
hlt
popf
fcompl
shll
xchg
stos
insb
jp
pop
je
dec
aam
shlb
mov
lods
iret
sbb
pop
xchg
pop
jecxz
orl
cmp
daa
or
dec
cli
jl
lods
or
aas
cmp
cmp
loopne
movsl
fldenv
inc
xor
mull
xchg
imul
lret
arpl
mov
cmp
push
pop
lcall
fs
or
sub
ja
mov
clc
xor
push
test
mov
push
std
or
int
loope
fwait
sti
loope
jl
pop
xchg
pop
mov
adc
faddl
mov
mov
icebp
sbb
xor
bound
push
xchg
loope
push
loopne
imul
dec
cmpsl
mov
jo
jnp
mov
fistpl
push
fdivr
out
push
mov
xor
mov
xchg
jno
leave
cmp
dec
jge
movsb
push
lea
mov
stos
add
stos
adc
add
mov
daa
cmp
xlat
cmp
mov
adc
xor
jl
pop
mov
jo
lret
push
lods
xor
lahf
inc
inc
add
push
lret
mov
ret
adc
cli
cmpsb
sub
mov
pusha
movsl
dec
outsb
faddl
xchg
dec
sbbb
inc
lret
xor
hlt
lock
mov
aas
push
xchg
jns
icebp
std
push
lret
push
shrl
pop
xchg
jns
not
push
xor
add
xchg
pushf
xor
push
cli
mov
xor
xchg
add
call
hlt
or
aad
jbe
cmpl
andl
aaa
mov
pop
add
xchg
push
pop
lea
and
mov
leave
and
or
andl
push
insl
push
pop
mov
lea
pop
mov
out
mov
mov
jle
pop
add
leave
lods
fsubp
sbb
push
or
dec
jmp
arpl
add
pop
in
dec
push
scas
ficoml
dec
test
mov
idiv
jnp
inc
enter
lock
mov
fprem1
sub
fisttpll
pop
lods
push
bound
je
aas
sub
insb
cmpsb
jnp
adc
lock
cmp
xor
movsl
push
pop
subb
lret
mov
and
xor
xor
mov
sub
movsb
and
arpl
mov
xor
inc
or
pushf
fnstcw
mov
cmp
imul
out
or
sbb
sbb
out
stos
cld
ljmp
mov
sbb
add
cmp
std
jo
dec
cmc
ss
sti
leave
xor
sbb
loopne
jae
adc
in
adc
sub
ret
xor
ja
or
push
xor
cmp
rol
or
fisttps
fwait
loopne
loopne
sub
pop
jae
popa
aaa
lcall
mov
aaa
or
cmp
push
push
sbb
dec
push
dec
mov
int3
or
or
push
gs
shrb
sub
inc
pop
scas
icebp
addr16
xchg
dec
rol
push
lods
sahf
pop
inc
out
sub
jge
add
mov
jp
add
jo
lea
push
xor
sbb
dec
jge
cwtl
out
mov
fisubrs
add
cli
movsl
mov
repz
movsb
out
outsl
xchg
adc
aad
push
xchg
inc
sbb
fstpt
or
mov
or
testb
test
sub
clc
fcomip
xor
mov
jbe
and
jl
js
push
movsb
pusha
sub
out
jge
imull
lahf
add
lret
xchg
fldcw
imul
push
dec
xlat
jno
rclb
jno
fstpl
stos
out
rcrb
push
jl
cmp
xor
into
pop
pop
xor
repnz
inc
xor
pop
or
je
popf
pop
xor
jle
dec
adcb
pop
popf
pop
jne
mov
cmp
push
in
push
dec
lcall
mov
jle
cltd
push
out
subb
inc
adc
fildl
andb
rcll
sub
andb
out
push
dec
stos
dec
inc
inc
push
mov
pop
pop
mov
adc
inc
or
clc
jo
std
mov
or
retw
pop
xchg
sti
adc
sbb
fucomp
xor
stos
adc
xchg
ja
sub
es
frstor
outsl
xchg
mov
lcall
je
ljmp
cmp
lret
test
cmp
and
int
sbb
dec
add
and
clc
add
vandpd
and
cwtl
aas
jnp
bound
lret
cli
imul
pop
je
lock
out
mov
fsub
sbb
out
shrl
sbb
icebp
xchg
sbb
les
insl
enter
imul
daa
lahf
dec
dec
mov
ret
repnz
ds
div
mov
out
lods
fwait
or
sbb
xlat
push
jl
xchg
jmp
dec
fldt
icebp
fldenv
mov
icebp
sbb
nop
xorl
sub
iret
or
push
jnp
adc
mov
test
cltd
jno
cmp
mov
xor
pop
daa
jne
cmpsb
mov
daa
add
shlb
cld
pop
andb
push
cli
dec
sbb
in
fstl
stos
clc
loopne
xchg
jle
cmp
fnsave
cmp
mov
in
stos
mov
test
or
enter
inc
push
ds
xor
leave
ficoms
int
loop
adc
dec
mov
sbb
ds
inc
lods
ds
xchg
test
add
movb
mov
jne
xchg
push
sbb
push
sbb
push
popa
dec
push
loop
jns
mov
aaa
or
xor
jo,pn
les
pop
sub
adc
repnz
jg
sbb
sarl
test
jge
dec
fcomp
and
inc
jae
incb
insb
out
int
test
aam
ss
out
les
xchg
pop
cmc
rol
xor
or
push
jb
jmp
call
int3
ret
das
mov
lahf
push
adc
lcall
pop
jb
dec
insb
xor
int3
or
test
sub
outsl
or
das
stos
dec
lret
jne
dec
data16
ja
xchg
lahf
cmp
arpl
mov
push
out
jge
sbb
jmp
push
jge
xor
jge
lret
enter
xchg
cmc
xlat
add
add
popa
sub
iret
test
lods
xlat
xlat
int
and
lahf
sub
mov
dec
cmp
cld
push
sarl
dec
test
jnp
mov
repnz
push
stos
xchg
repz
push
pop
sub
mov
inc
fldl
cmp
mov
xchg
cmp
in
sbb
jo
dec
xchg
mov
popf
pop
leave
inc
mov
add
incl
rol
lahf
enter
sub
cmp
cmp
mov
pop
cltd
xor
and
or
loop
cmc
mov
sti
pushf
and
leave
fldenv
xchg
ficoms
jo
scas
stos
mov
test
mov
mov
jle
insl
mov
mov
ret
jbe
jp
fwait
lea
or
inc
arpl
xchg
test
int
dec
fwait
js
mov
fwait
int3
shrb
insb
cltd
xchg
sti
mov
inc
ja
stos
pop
adc
stc
cmp
lretw
pop
adc
setno
xchg
cli
outsb
jp
add
push
xor
mov
push
lds
out
cmp
xor
sbbb
lds
sub
daa
nop
mov
jb
jmp
lret
das
out
mov
sahf
inc
aam
adc
jecxz
leave
mov
dec
cld
fldcw
mov
adc
scas
pop
divl
xor
mov
sub
insb
inc
mov
fisttpll
data16
pop
jb
daa
roll
fnstsw
out
sarl
aam
lahf
sahf
pop
dec
mov
lods
add
pop
inc
out
popf
push
mov
pslld
int
xchg
test
lret
aas
ja
mov
mov
stos
push
jle
fsts
in
cmp
push
mov
int3
inc
lret
fisubrs
sub
lds
lock
or
pop
loopne
loop
rcrl
inc
mov
aam
out
push
xor
pop
inc
jne
bound
push
cltd
out
das
cs
imul
out
xchg
mov
pop
adc
aad
cmpsl
cmpb
aad
jp
shlb
mov
lahf
sub
and
testl
xchg
sahf
inc
cmpsb
cld
lahf
shl
nop
out
repnz
pop
cmpsl
dec
arpl
adc
inc
orb
xorb
insb
push
paddd
pop
xor
adc
push
jno
jo
shll
test
xor
in
fwait
in
iret
xor
repnz
out
outsl
dec
pop
push
or
mov
gs
sub
aas
decb
cs
lret
adc
jecxz
in
mull
cmpsb
mov
push
std
dec
add
cmp
dec
data16
cmc
outsl
lea
mov
jae
lret
jl
xor
repnz
add
add
lds
je
bound
dec
mov
fldenv
out
cs
stc
sub
out
dec
lret
test
push
lcall
and
mov
jno
cltd
loope
sbb
je
ljmp
test
sbb
cmp
pop
fmuls
mov
lret
inc
cmp
call
mov
adc
or
xor
mov
pusha
ret
cmp
insl
xchg
inc
stos
cwtl
xchg
test
pusha
sbbb
in
addr16
cs
lret
pushf
ljmp
or
sbb
js
jl
adc
pop
popf
xchg
or
and
idivl
pop
rcrl
pop
mov
loop
add
cld
xchg
mov
xchg
scas
lret
popf
popa
in
pusha
scas
sahf
and
push
cmpsl
arpl
sbb
ss
mov
push
repnz
sbb
push
iret
ja
sahf
shll
sub
jl
out
xchg
test
lcall
pop
loope
leave
insb
lods
cltd
stos
mov
sbb
mov
ret
fstpt
xor
xchg
leave
jmp
adc
loope
sub
xchg
mov
fidivrs
jno
shll
xchg
inc
lcall
sbb
or
das
mov
pop
add
xchg
js
xchg
and
lcall
mov
push
cmp
daa
mov
inc
fidivrl
mov
adc
pop
je
xchg
faddl
movsb
pop
out
bound
pushl
jne
xlat
mov
pop
adc
jo
stos
enter
das
mov
mov
sbb
add
xchg
les
lods
pop
shrb
sbb
dec
movsb
in
aam
xchg
lcall
mov
lods
dec
aad
add
inc
icebp
sbb
clc
pop
inc
xor
stc
aam
xor
test
dec
dec
out
adcb
pushl
out
mov
xchg
ja
pop
loope
addl
jbe
pop
adc
fs
sahf
insb
stc
je
out
daa
push
repz
jne
call
cmpsl
movd
mov
push
mov
adc
mov
cli
pop
sub
out
and
sbb
mov
stos
jae
fs
pop
xor
pushf
sahf
and
pushf
aas
idivl
sub
ffreep
nop
sbb
in
lds
cli
push
add
lahf
push
addr16
imul
in
inc
scas
jge
es
push
insb
xchg
lahf
sub
push
pop
xchg
add
in
int3
inc
orl
sub
pop
inc
xchg
mov
sub
daa
fcomi
mov
jp
push
xor
or
xlat
push
aaa
and
cli
fdivrs
mov
and
xlat
jb
xor
jmp
imul
loop
jp
out
xchg
fdivrl
ds
in
adc
mov
pusha
fadds
push
xlat
jne
aad
neg
sub
out
iret
cmpsl
jne
fwait
xorl
loope
repz
add
jno
dec
idivl
mov
test
jl
fbld
mov
jno
imul
in
push
stos
lods
mov
pop
arpl
jno
fisubrl
inc
xchg
xchg
sbb
add
nop
negb
xor
pushf
cmp
aad
mov
aas
notb
test
addr16
les
and
push
aam
mov
xchg
add
push
jb
inc
lds
cmc
adc
and
push
test
mov
sahf
stos
push
and
pop
rolb
js
adc
cmpsb
xchg
add
dec
into
push
pop
push
jle
xchg
xchg
sbb
mov
xchg
mov
mov
sub
inc
ds
jo
and
mov
jo
push
sbb
jo
add
movsl
adc
push
xchg
mov
in
daa
rorb
lods
das
adc
add
stos
sbb
mov
pop
lods
imul
pop
inc
loope
mov
fdivrl
fsub
cs
push
pop
sub
jecxz
jbe
pop
mov
call
shl
inc
mov
mov
pusha
imul
adc
and
add
inc
mov
pusha
iret
sub
pop
aaa
mov
mov
push
add
xchg
es
dec
ljmp
jmp
pusha
mov
push
adc
pop
push
ret
lret
test
fstpt
out
je
imul
cmpsl
aam
jg
arpl
dec
add
cwtl
insl
sti
and
adcl
movsb
stos
or
cwtl
js
inc
sbb
jae
nop
or
sbb
pop
sbb
or
mov
cmc
fwait
adc
daa
mov
cld
sub
pop
rorl
jle
jo
xor
test
loope
mov
lock
sub
mov
jg
mov
or
and
jle
push
xor
int3
and
sbb
lret
movsb
stos
stos
fadds
inc
mov
mov
jbe
pop
or
in
push
dec
sar
fs
fsts
test
cwtl
xor
push
sbb
xchg
jae
pop
mov
repz
clc
add
sldt
sub
out
sub
pop
sub
adc
lods
inc
insl
mov
sarl
sbb
lahf
test
xchg
xchg
push
push
mov
ja
shrb
lock
stos
jnp
ror
sbb
repnz
movsl
add
call
test
push
mov
ds
test
sbb
loopne
mov
push
sbb
sbb
outsl
cmp
lds
aad
adc
in
in
xchg
fwait
push
insl
dec
repnz
and
stc
daa
inc
mov
and
pop
outsl
cmp
mov
pop
push
xchg
repz
nop
inc
in
rcll
mov
movsl
xor
cmp
mov
pop
stos
xchg
cmp
arpl
fistpl
jmp
pop
mov
scas
mov
data16
test
jge
inc
mov
test
ret
push
outsb
add
lret
mov
out
daa
rol
dec
in
enter
arpl
pop
negl
fcomps
push
test
iret
dec
cmp
push
lahf
lock
adc
jmp
shll
mov
loopne
outsb
xor
gs
jmp
fnclex
xor
sarl
xchg
stc
xchg
mov
jle
inc
sbb
lahf
mov
call
data16
andl
add
lds
xorl
xchg
xchg
cs
xchg
fsubl
inc
scas
cmp
in
cld
insl
mov
inc
add
je
dec
dec
or
adc
aaa
cmp
out
mov
mov
testb
rcrl
mov
cltd
add
repnz
pop
aas
pushf
pop
push
jb
sbb
rorb
je
add
xchg
mov
aad
cmpsb
shl
and
xchg
je
pushf
xor
jmp
push
icebp
test
loope
adc
sub
inc
jecxz
pop
jle
mov
insb
movsl
adc
add
outsb
out
cmp
dec
cmp
pop
mov
jp
pop
pop
repz
repnz
les
or
aam
pop
sti
xor
shrl
mov
mov
push
fwait
lret
ja
jbe
sahf
aam
jmp
mov
bound
imul
add
fmuls
stos
adc
pop
mov
je
push
hlt
mov
stos
pusha
test
xor
xchg
inc
in
stos
xor
ds
pop
mov
rcll
inc
mov
mov
clc
cmpl
and
xor
movsl
fcmovnb
jne
pushf
sub
orl
adc
mov
cwtl
xchg
insl
dec
mov
insl
dec
test
in
pop
inc
adc
mov
std
out
push
arpl
inc
aad
in
pop
fmuls
mov
outsb
xor
mov
pop
psraw
incl
dec
jae
jecxz
cltd
inc
aaa
and
pop
inc
mov
push
out
xor
fimuls
xor
jmp
test
xchg
xchg
cmpsb
lock
adc
push
pop
pop
xlat
loop
in
fidivs
dec
jbe
out
jbe
dec
jp
out
mov
insb
popf
adc
cwtl
fistpll
pushf
jo
sbb
fwait
pop
popa
jmp
push
fnsave
inc
and
xor
test
jb
out
int
into
or
xor
fidivrl
stc
enter
push
mov
jno
call
xlat
add
cltd
xor
xor
sbb
lret
fcom
mov
out
jnp
ret
sub
lcall
push
xchg
out
inc
xor
fsubrl
mov
jb
add
pop
js
dec
adc
in
test
out
push
iret
repz
sbb
rcr
in
cltd
push
cmp
add
jbe
add
jp
cmp
push
xchg
push
rcll
cld
dec
xchg
inc
xor
andl
loope
adc
jb
cmpsb
aad
and
or
jp
xchg
push
mov
or
xor
dec
stos
mov
mov
push
rcll
subl
pop
xchg
dec
mov
cld
jns
push
shrl
lods
stos
push
jae
inc
mov
fwait
outsb
aad
ficomps
ss
aam
mov
mov
mov
pop
adc
popf
mov
and
inc
pop
pop
jb
push
mov
cmp
dec
rcrl
push
push
add
inc
aam
sbb
lock
lock
inc
inc
push
push
mov
movswl
pusha
jge
dec
or
sub
andl
leave
dec
daa
inc
sahf
xchg
push
jmp
mov
test
mov
inc
aas
sti
sbb
shrl
imul
fmulp
sahf
xor
push
and
jae
cmpsl
jae
push
mov
jb
insl
mov
xor
aam
jne
arpl
add
add
mov
xor
into
adc
imul
frstor
xor
mov
xor
sti
and
addr16
cmc
aad
mov
pop
sub
sub
pop
or
add
lds
scas
out
push
popf
cwtl
or
test
lock
cmpsb
xor
inc
notb
aad
add
clc
sarb
sbb
push
xchg
scas
mov
mov
mov
lods
jmp
sub
fwait
ret
stos
sub
push
xchg
mov
test
ret
pop
jp
add
inc
scas
push
cwtl
xchg
push
cmp
stc
and
jmp
lret
adc
aaa
loopne
push
aad
aaa
out
sbb
cltd
loop
fstl
dec
push
pop
xor
in
push
stos
arpl
mov
dec
and
push
movsb
xor
lea
sbb
jl
cmc
push
and
es
adc
mov
mov
test
sti
sub
in
lea
enter
push
nop
insb
xchg
push
mov
addl
mov
inc
imull
adc
mov
xchg
jnp
dec
push
jecxz
mov
js
jbe
or
pop
mov
dec
ja
dec
out
cltd
imul
mov
out
mov
push
or
inc
or
add
dec
call
gs
mov
mov
sbb
mov
rcll
bound
adc
mov
jns
mov
repnz
push
test
jl
sbb
stos
fsubs
or
in
and
sub
pushf
shlb
pop
adc
dec
or
push
cmpb
cmpsl
and
lods
push
sbb
in
int3
cmpsl
jns
sahf
test
xchg
cmp
pusha
loop
les
jp
sub
mov
or
icebp
jecxz
push
fs
imull
loope
jge
xchg
push
fwait
mov
push
or
fistpl
mov
adc
cmp
inc
test
fxch
sbb
cmp
pop
popa
mov
pop
mov
jnp
imul
push
out
jl
xor
adc
popf
adc
sub
shll
jmp
arpl
dec
call
sub
xchg
add
scas
push
lods
arpl
pop
lret
push
jne
imul
icebp
sub
fdivrl
lods
jg
xchg
inc
loop
mov
push
cwtl
mov
xchg
clc
push
cli
xchg
outsb
mov
xor
mov
xor
jle
sub
pop
scas
mov
xor
mov
les
jle
mov
dec
jbe
addb
leave
ret
mov
and
mov
inc
ror
sbb
fcmovne
shrl
pop
and
pop
inc
cmc
or
es
iret
inc
loope
outsb
stos
mov
leave
cmc
xlat
add
add
fistps
adc
rcrb
jb
push
sbbl
stos
into
fs
inc
jne
mov
pop
dec
and
pop
sbb
incl
int3
nop
outsl
xchg
mov
or
lret
cli
or
sti
mov
sub
sahf
inc
nop
mov
daa
dec
xor
cli
mov
addr16
inc
lods
lds
sar
lea
cwtl
bound
mov
pop
or
cmpsb
lods
das
lret
mov
andl
dec
pop
orb
push
pop
stos
aad
cmpsl
ud0
gs
jg
and
pop
push
adc
push
jns
mov
loop
add
lock
dec
stos
mov
lds
movsl
xchg
adc
adc
inc
dec
lods
pop
mov
dec
xorl
icebp
pop
les
fdivl
lea
sub
test
xor
jmp
fildl
pop
adc
scas
pop
cmp
cmp
and
imul
mov
fcmovnu
xchg
hlt
jge
xorb
stos
scas
push
cmp
adc
les
cld
xlat
in
test
jnp
adc
imul
pop
movsl
sbb
sub
push
sub
adc
sti
adc
push
lea
mov
or
pop
mov
repnz
lret
or
aad
mulb
pop
inc
loop
imul
push
rcr
xor
xchg
andl
sbb
test
inc
pushf
dec
and
sahf
out
in
mov
sahf
scas
adc
push
test
and
loop
lahf
out
xchg
std
jmp
pop
loope
mov
stc
sub
push
int
adc
push
ds
pusha
inc
xchg
push
lret
shll
pop
add
negb
add
add
sub
inc
fcomp
mov
fistpll
or
mov
xor
pop
cmpsl
ss
bound
jge
mov
xchg
inc
and
pop
fs
or
aaa
inc
imul
mov
xor
xchg
lret
into
js
dec
pushf
repnz
ljmp
insb
je
sbb
orl
add
into
dec
push
sarb
lahf
inc
lcall
outsb
mov
std
xchg
xchg
dec
push
or
mov
xor
jle
sub
pop
and
movsl
cltd
dec
les
lods
fadds
add
cmp
push
fs
clc
add
repnz
lea
xor
sbb
into
xor
inc
nop
sarb
and
test
mov
pop
jg
fsts
mov
das
leave
pop
aam
xor
jg
xchg
in
lods
dec
sub
xchg
enter
or
xchg
div
sub
xchg
push
ror
in
mov
mov
sti
into
mov
ret
mov
push
jl
scas
les
push
leave
mov
push
sbb
pop
movsb
mov
xchg
lret
mov
sub
mov
xchg
pop
outsl
xor
inc
and
pop
xchg
push
cmpsl
shll
int
mov
stos
mov
out
pushf
lea
jge
mov
mov
cmpsb
lret
pop
hlt
and
mov
xchg
xchg
scas
lods
fcoml
add
push
add
outsb
out
mov
clc
adc
push
add
loop
enter
pop
hlt
cmp
shl
jno
xchg
lods
jmp
into
mov
mov
mov
and
outsl
dec
inc
dec
pop
sub
mov
sti
sbb
pop
int3
xor
mov
lods
mov
jb
mov
in
push
dec
pop
js
push
jecxz
mov
xor
mov
jno
sti
out
popf
sarl
out
or
fmul
movsl
bound
mov
sbb
xchg
cmp
dec
fsts
popf
push
cltd
mov
das
hlt
popf
insb
adc
dec
test
je
inc
pop
andb
rcl
push
int3
mov
jmp
or
out
xor
scas
mov
mov
push
add
jnp
dec
cmp
rorl
mov
test
jg
cmp
sub
inc
jge
sarb
nop
inc
mov
fcompl
and
fsubs
imul
push
icebp
mov
cmp
sub
xor
mov
cmp
gs
mov
push
loopne
push
lret
orl
cmp
lock
ds
test
inc
and
jl
inc
int
inc
aas
add
scas
orb
inc
sbb
int3
xchg
sbbl
sbb
maxps
loopne
popa
into
pop
pop
jl
lret
ffree
ss
adc
push
jle
sbb
imul
sub
mov
lea
leave
lret
push
ds
push
adc
subl
dec
push
cmc
adc
aam
pop
adc
nop
pop
je
scas
dec
mov
mov
add
sbb
xor
shlb
mov
testb
pop
and
push
shr
cmp
sub
mov
xor
daa
and
jmp
loop
cs
loope
ljmp
mov
add
push
and
sub
xchg
add
inc
and
cld
xor
insb
testl
jl
bound
mov
jb
adc
sub
or
push
outsb
inc
leave
test
push
lret
dec
push
jno
xchg
jmp
outsl
in
sbb
xor
movb
mov
out
dec
lds
mov
stc
mov
jne
xorl
ljmp
jnp
mov
or
lock
adc
mov
inc
add
and
mov
or
out
out
push
ja
jle
push
xchg
int3
inc
add
xchg
int3
pop
ror
xchg
mov
sbb
push
es
ja
imul
pop
inc
xchg
rolb
in
ss
fidivl
test
cmc
fistpll
or
inc
lret
dec
xchg
mov
xchg
cltd
sbb
xlat
cmp
mov
or
xor
inc
fisubl
dec
pop
xor
pop
lcall
mov
adc
jbe
aam
or
or
daa
push
mov
pop
pop
jno
ljmp
dec
sarb
mov
sbb
paddsb
shrb
pop
or
stos
popf
pop
bound
mov
inc
test
icebp
jmp
or
push
arpl
adc
sbb
gs
adc
jns
push
out
cwtl
mov
in
push
sub
in
jp
push
xor
jbe
fsubs
push
jb
or
aam
ret
pop
ret
pop
cmp
sbb
fisubl
and
xor
push
imul
fcomip
stc
adc
and
sbb
push
xor
mov
and
jbe
jne
fwait
mov
movsl
or
sahf
mov
sbb
js
push
and
mov
push
sub
pop
insb
or
scas
jnp
and
mov
stos
aad
ja
sbbb
mov
pop
mov
inc
add
or
mov
cmpb
mov
cs
test
sbb
inc
push
orb
fcompl
adc
pop
mov
loop
cld
sub
arpl
cmp
mov
nop
fsub
aad
scas
pop
int3
stos
fistl
cmc
into
les
sub
stos
pop
sar
popa
pushf
and
cmp
mov
jne
insl
xchg
add
jb
dec
sbb
add
lcall
bound
js
hlt
or
jmp
push
icebp
adc
sarb
subl
mov
sub
roll
add
sbb
jmp
outsl
add
jno
ret
cmp
xchg
sbb
inc
imul
add
mov
in
push
ss
fcom
jge
xchg
sub
imul
pop
cmp
add
pop
push
mov
sbb
mov
or
test
cmpsl
neg
daa
stc
leave
and
sub
scas
mov
cmp
and
icebp
cwtl
and
rorb
out
push
inc
stos
icebp
cltd
xor
mov
push
xor
and
insl
mov
cli
jp
mov
imul
addr16
jmp
mov
or
stos
fsts
fcmove
rcrl
pop
dec
jnp
mov
mov
es
mov
xlat
or
pusha
mov
push
or
es
pushf
std
bound
cmp
pop
push
lds
ficoml
push
push
and
popa
mov
ret
rcrl
test
aam
jns
in
loopne
and
xchg
xor
aad
cmp
mov
jo
xchg
or
lods
jo
ret
xor
ret
cmpsl
lds
or
in
inc
adc
push
sarl
jg
sbb
and
dec
incb
xchg
test
popf
jge
out
mov
clc
push
mov
pop
inc
popa
push
lcall
in
outsb
int3
add
jecxz
call
pop
rolb
or
pop
ljmp
xchg
pop
fidivs
lea
pushf
repnz
mov
add
loopne
aas
cmp
iret
js
jl
cli
lcall
or
push
ret
push
or
loopne
inc
xor
pop
ror
push
pop
aad
mov
xchg
dec
subl
sahf
mov
pop
pop
fcmove
lret
push
lock
in
sub
lahf
mov
xchg
mov
mov
push
insb
mov
mov
or
jo
adc
sbb
mov
xor
push
testl
pop
in
jl
popf
test
mov
jecxz
ljmp
adc
add
ret
test
testl
mov
les
shlb
jne
sbbb
mov
lahf
sbbl
outsl
mov
pop
std
imul
push
pop
mov
fmuls
xchg
xchg
lahf
dec
push
arpl
xor
movsb
pusha
shrl
push
aam
aas
and
mov
leave
or
cmp
sub
mov
ja
or
imul
dec
adc
rclb
incb
pop
or
mov
xor
mov
xchg
inc
xchg
mov
mov
mov
cmp
aad
pop
test
add
mov
pop
int3
push
test
jne
adc
or
pop
dec
fnstsw
pop
pop
mov
dec
cmpsl
inc
inc
add
repz
jns
xchg
mov
in
aaa
insb
imul
push
inc
cmp
xlat
mov
or
divl
sub
negl
mov
sub
mov
inc
stos
test
popf
out
clc
ljmp
outsl
cs
or
jp
dec
or
mov
or
xor
dec
fwait
xchg
inc
adc
inc
in
xchg
outsl
popa
lock
push
stos
mov
add
pop
gs
push
in
test
out
aam
mov
xchg
cmp
xchg
inc
addl
stos
aam
negb
inc
jl
div
pop
outsb
es
xchg
push
stc
mov
ficompl
and
xchg
mov
jbe
stc
jge
sti
pop
pop
movsb
lods
out
xor
jne
or
dec
aaa
cwtl
mov
lea
call
mov
ret
andb
addr16
xor
inc
mov
mov
fildll
push
pop
xchg
xor
pop
cmp
lret
test
inc
sbb
dec
mov
mov
and
inc
or
push
test
mov
cmpsb
jno
push
lock
mov
stos
pop
mov
mov
adc
repz
pusha
outsl
dec
push
jmp
loope
sti
fdiv
mov
movsl
add
push
dec
pop
pop
rcrl
inc
dec
add
es
and
scas
je
jb
and
xor
inc
cmpsb
xchg
mov
adc
scas
leave
fsub
movsb
xlat
jbe
mov
mov
mov
aas
flds
adc
pushf
jb
in
outsl
cmp
repnz
mov
adc
and
dec
jno
insl
sbb
lcall
incb
scas
fneni(8087
sub
xor
icebp
cs
adc
fsts
in
xchg
add
sub
pop
ss
rcl
adcb
and
lcall
loop
cld
aam
notb
enter
or
adc
add
daa
cmpsb
lret
mov
add
sbb
fdivrl
cmp
cmp
lret
enter
and
movsb
and
pop
test
push
sub
sub
lods
mov
jb
int
mov
mov
add
jecxz
jmp
lea
push
inc
mov
and
push
pop
sub
in
xlat
mov
push
dec
add
dec
push
mov
pop
les
imul
xorb
out
movsb
inc
cmpsb
xchg
jb
js
das
popa
fwait
pop
cmpsb
jmp
mov
loop
ret
fsts
inc
adc
enter
adc
ds
push
and
jnp
xor
and
add
sub
outsl
aaa
dec
inc
add
push
lcall
pop
lods
sub
jecxz
sbb
daa
push
movsl
dec
addl
xchg
scas
xchg
or
jo
mov
mul
ljmp
adc
popf
inc
decl
pop
push
pop
outsb
pushf
rcl
mov
cmp
mov
cmpsb
pop
push
pop
pushf
aaa
add
testl
inc
inc
sub
cmp
loop
cmpl
cld
sub
mov
shlb
lret
ffreep
filds
and
adc
scas
pop
lret
mov
jbe
pusha
fimuls
das
sbb
push
clc
add
xor
iret
fwait
icebp
mov
ljmp
pop
xchg
rcll
xchg
je
fisttps
pop
mov
sub
jnp
sub
adcl
cmp
jl
push
scas
cli
gs
mov
mov
pushf
popf
insb
mov
std
mulb
jb
jmp
xor
ret
leave
pop
and
popf
mov
mov
jmp
mov
mov
dec
sbb
mov
sbb
cmp
add
js
cmpsl
inc
cmpsl
lds
jbe
jmp
mov
or
mov
fmuls
jle
insl
cmpsb
data16
cmp
xor
sarl
push
shll
or
push
pushf
pop
clc
cld
xchg
inc
sub
xchg
enter
push
cmp
shll
cmp
add
adc
sti
dec
push
ss
sub
stos
rolb
cwtl
mov
xchg
enter
or
cmp
sbb
or
xor
lea
stos
pushl
lret
dec
sbb
or
fsubrl
mov
sbb
or
mov
clc
or
addr16
jae
sbb
cmp
add
pushl
push
ror
fldcw
add
xchg
in
mov
pop
xorl
aas
jne
shr
call
aas
dec
xchg
pusha
sbb
push
cmp
insb
mov
lods
jo
and
mov
add
in
sbb
xlat
mov
into
pop
loope
rcrl
mov
es
lock
mov
scas
out
aaa
pop
stc
stos
sub
mov
std
inc
push
clc
jle
insl
imul
out
cmp
icebp
lods
jne
mov
mov
pusha
push
loop
and
imul
mov
jno
push
cmp
popf
push
jl
movsb
mov
jae
xchg
push
nop
dec
shll
movsb
pop
loope
sub
or
push
outsb
xor
mov
movq
dec
and
arpl
push
test
add
mov
fwait
or
out
sbb
repz
push
mov
pop
es
imul
and
lea
add
scas
sbb
dec
mov
xor
pop
dec
and
test
sbb
mov
dec
lds
mov
sbb
int3
push
sbb
in
scas
imul
push
test
cwtl
xchg
lods
mov
popf
mov
fisttpl
jns
xlat
sahf
or
pop
loop
add
and
add
xchg
inc
loop
std
dec
aas
fbstp
pop
pop
movsb
add
push
popf
lret
leave
cli
lret
and
sbb
xchg
sahf
stos
imul
subb
insl
in
test
scas
dec
lcall
aaa
sbb
imul
dec
in
push
jae
js
jnp
shr
xor
jbe
js
xor
adc
mov
xor
xchg
mov
int
in
or
insl
pop
out
movsl
push
push
data16
adc
dec
cmpsl
nop
insl
loopne
jb
mov
lock
add
mov
in
inc
push
mov
clc
mov
cmp
dec
addr16
mov
icebp
testl
mov
fs
cmp
cmpsb
push
jbe
jo
in
xchg
imull
push
mov
sahf
clc
repnz
sti
stc
ficoms
add
sbb
mov
je
cmp
mov
cmp
fistl
mov
adc
xor
mov
lret
fs
ljmp
xor
mov
or
xor
stc
fcmovnbe
mov
mov
dec
add
xchg
cmp
push
sahf
fstpl
push
movsb
pop
push
mov
test
sarb
mov
nop
jo
popf
adc
jno
mov
inc
cmp
std
ret
and
lds
pushf
lods
scas
mov
fisttpll
inc
daa
fimuls
je
in
aam
sub
sub
dec
jae
outsb
notb
lods
or
in
cli
xor
cmp
push
add
and
scas
sbb
mov
or
mov
ss
add
subb
pusha
and
aaa
push
sbb
dec
or
or
lret
sub
sub
arpl
pop
jne
mov
mov
inc
xor
xlat
xchg
or
xor
pop
mov
enter
mov
mov
je
xchg
shl
sub
into
and
xchg
mov
push
js
sarl
call
repnz
mov
test
popf
lret
sub
adc
sub
mov
or
lods
ss
jl
shl
test
mov
sub
fidivrs
clc
mov
out
ret
sub
pop
adc
stos
pop
push
insl
pop
or
pushl
into
lea
adc
jne
pushf
jmp
xlat
xchg
mov
stos
in
gs
lret
in
inc
mov
cld
fidivs
jle
push
mov
add
fs
jmp
sub
jbe
pop
mov
adc
repz
cld
les
cli
sub
std
mov
lret
push
xor
mov
cmp
test
sub
or
ds
in
jmp
jecxz
push
addb
popa
ds
arpl
pop
adc
sbb
and
stos
and
xchg
mov
test
sbb
out
xchg
pop
clc
ja
cwtl
movsl
sub
dec
loope
sahf
fimuls
jbe
sbb
fcmovnbe
rorl
iret
mov
push
dec
push
leave
loope
jp
mov
mov
dec
in
mov
movb
bnd
mov
addl
enter
ror
xchg
mov
dec
push
das
subl
add
out
cmpsl
popa
push
clc
jmp
jp
mov
roll
loopne
sbb
jns
rorb
dec
pop
loope
mov
out
sub
add
pusha
shll
mov
pop
int
fidivrs
pop
dec
and
dec
pop
lods
cwtl
xor
mov
bound
test
jp
mov
popa
lea
andl
cmp
xchg
cli
dec
sub
cmp
mov
imul
add
mov
stos
adc
cld
nop
je
sub
lds
or
out
cld
in
aas
sub
adc
sbbb
dec
or
call
bound
cmp
mov
jns
push
push
test
dec
jnp
mov
jns
xchg
xchg
adc
inc
test
or
pop
inc
ret
cltd
mov
and
inc
push
mov
mov
jne
js
sub
das
mov
lret
lods
inc
cmp
bound
stos
inc
out
js
les
in
repz
mov
sub
adc
scas
or
roll
mov
pop
xorl
int
dec
popf
icebp
gs
mov
pop
rcll
mov
movsl
adc
lcall
cmp
test
mov
pop
dec
das
pop
xchg
adc
adc
cmpsb
push
pusha
fucomp
pusha
push
push
fisubrs
pop
sbb
out
stos
xor
jge
add
imul
or
out
inc
adc
mov
jns
push
xchg
sbb
mov
js
pop
cmpsb
fisubs
pop
sbb
fidivrl
lret
loopne
roll
adc
int3
gs
pop
jge
dec
mov
xchg
dec
jmp
and
xor
orl
insl
fsubrs
mov
dec
enter
and
cs
dec
or
fwait
push
cmp
push
pop
cmp
or
shr
inc
jmp
aad
mov
pop
sbb
out
cmpsl
sub
test
ljmp
lock
mov
addl
adc
bnd
mov
add
jae
pop
test
sbb
adc
int
sbb
inc
mov
in
adc
mov
push
dec
xchg
stc
test
in
inc
push
flds
call
pop
pop
dec
xchg
iret
mov
repnz
pop
mov
lock
test
cltd
jb
cli
sti
daa
or
push
push
inc
adc
aas
mov
and
mov
xchg
cs
or
stc
jg
arpl
or
clc
test
or
mov
aas
xchg
movb
cmp
add
lock
movsl
mov
mov
cli
cld
inc
jns
lcall
sub
cltd
adc
mov
lods
jl
addr16
xchg
push
ret
out
jns
and
hlt
lret
xchg
adc
popf
dec
push
lret
xchg
or
inc
push
adc
leave
popf
mov
movsl
mov
adc
xor
jne
insb
xor
mov
xchg
ljmp
jp
push
pop
sarb
sub
icebp
mov
and
push
test
js
mov
pop
mov
test
sub
dec
mov
pop
popf
loop
rolb
lock
push
int
sbb
lret
hlt
in
mov
dec
cmpsl
mov
pop
repz
rcrl
cld
cmp
imul
jecxz
and
or
xor
in
adc
push
loope
mov
xchg
loop
cmp
int3
push
xchg
repz
rorl
movsl
or
mov
test
fmul
data16
cwtl
jl
mov
test
add
inc
mov
fidivrl
jg
fsubr
xor
sub
adc
jmp
add
adc
push
das
mov
mov
ja
push
aaa
mov
fwait
cld
in
mov
iret
sub
pushf
int
sti
push
adc
and
out
mov
lea
imull
jl
xor
add
adc
cmc
test
cmpsl
push
xor
xchg
lods
mov
fdivl
fnstcw
cld
stos
dec
or
jle
mov
pop
fnstsw
sbb
mov
mov
adc
mov
mov
xchg
xchg
pop
loopne
and
pushf
ficompl
je
sub
mov
sbb
mov
mov
dec
mov
imul
into
pusha
rcrb
jb
sti
dec
addr16
movsb
xchg
fs
jb
ljmp
xor
push
push
xor
pop
cmp
push
scas
out
add
lret
mov
fnsave
das
jle
lret
and
xor
aam
xchg
popa
rcrl
mov
and
sahf
add
pop
push
fldt
outsb
push
jmp
dec
or
inc
lods
sbb
jno
mov
enter
jne
arpl
mov
adc
jne
cmp
hlt
and
out
jae
jmp
out
jmp
lds
pop
add
xchg
adc
aaa
mov
stc
js
pop
mov
mov
cld
push
push
test
dec
adc
popf
pushf
and
cmp
jo
mov
adc
insl
fimuls
sarb
pusha
fbld
and
xchg
sbb
aaa
mov
sbb
rorl
push
aam
xchg
add
out
aas
add
dec
sbb
nop
xor
mov
jb
mov
xor
mov
rorb
mov
aaa
div
push
imul
popa
lea
mov
in
gs
xchg
pop
fdivrl
cmp
ficoml
ljmp
imul
cld
pop
push
fnstsw
in
repz
in
sbb
cwtl
jg
pop
xchg
jne
test
inc
fcmovnbe
jno
push
pop
and
insl
lods
or
push
and
scas
std
fs
pop
jmp
xchg
mov
call
inc
cmp
dec
adc
fdiv
outsl
jcxz
push
or
sbb
fwait
pop
lea
dec
adc
insb
xchg
dec
lret
adc
and
dec
into
pushf
sub
icebp
xlat
imul
negb
pushf
out
jne
sahf
and
inc
shrl
js
repz
dec
movsl
sbbl
mov
cmp
or
xor
sti
mov
out
xchg
jge
fdivs
add
mov
push
pushf
jmp
stos
adcl
das
xor
or
popa
xchg
pop
inc
adc
xor
pop
or
mov
push
stos
jl
mov
je
sbb
push
fwait
in
ja
push
daa
cmpl
ret
bnd
lcall
outsb
mov
and
addl
bound
dec
push
faddl
and
and
imul
lods
hlt
adc
push
add
mov
rcl
xchg
ljmp
nop
inc
test
push
js
clc
or
mov
sbb
pop
sarl
add
in
inc
jbe
shl
pop
pop
insl
or
outsb
sahf
lret
push
rcrb
push
loope
sub
pop
dec
rclb
test
cmovge
push
test
or
fs
icebp
inc
das
xor
or
testb
in
sub
push
ret
xchg
scas
pop
lods
lods
dec
or
fmuls
aaa
lock
out
pop
sbb
stc
cmc
pushf
out
cld
push
xor
aaa
test
stos
rorb
pop
enter
jno
mov
test
mov
sub
pop
addl
aad
xlat
pop
add
popf
icebp
or
ret
jnp
btr
or
push
lret
loop
in
add
push
aam
and
adc
mov
cmovbe
data16
out
sub
xchg
pinsrw
push
in
ret
ret
in
add
arpl
push
push
popf
pop
mov
pop
jmp
outsb
xchg
or
call
rcl
jle
pop
hlt
mov
add
jae
mov
jbe
outsb
lods
inc
xchg
add
daa
mov
arpl
scas
enter
test
stos
cltd
addr16
push
andb
scas
push
sahf
dec
push
pop
shl
dec
je
fidivl
in
js
aad
jecxz
ljmp
push
das
cmp
loop
das
mov
test
cmp
or
pop
leave
cmpsl
addr16
filds
cmp
push
mov
sub
in
or
jno
mov
out
mov
inc
mov
pop
popf
cmp
dec
or
mov
mov
inc
int
lods
sarl
arpl
nop
lods
inc
and
loopne
push
sbb
add
jp
subl
jne
pop
and
repnz
xor
push
mov
test
jmp
and
pop
inc
mov
pop
lahf
jmp
mov
fidivs
jns
fldt
mov
mov
fdivl
sub
pop
pop
sbb
add
cmp
pop
nop
sub
sbb
mov
int3
push
or
rcrb
or
into
test
push
pop
test
orl
arpl
ljmp
fcomip
mov
lahf
dec
stos
sbb
jg
shr
ds
xor
jle
and
faddp
data16
mov
add
outsl
xor
imul
or
fs
jbe
rclb
leave
lea
sbb
int3
lds
xchg
out
add
sub
shrl
pop
ret
push
push
stc
or
loopne
adc
jae
dec
xorl
icebp
test
pop
pop
aam
add
inc
cwtl
lods
out
hlt
cld
pop
and
adc
xchg
cmp
mov
dec
popa
lock
dec
fists
lods
leave
mov
xor
test
mov
push
xchg
pop
mov
sarb
cmc
mov
nop
lods
js
add
add
jle
lds
pop
rolb
adc
inc
and
movsb
stos
pop
in
jo
stc
push
dec
imul
xchg
call
in
stos
dec
in
jge
sbb
inc
lea
push
pop
cs
sub
adc
xchg
push
lds
xchg
push
repnz
ss
add
xchg
ds
xchg
push
xchg
or
bts
hlt
cld
xchg
mov
iret
scas
cld
adc
out
jno
lods
sbb
test
arpl
or
sub
stc
jl
imul
mov
repz
popa
sbb
insb
push
stos
inc
ror
popf
add
mov
push
out
js
adc
sub
ret
in
mov
stos
mov
pop
sbb
ss
xlat
lds
xlat
sbb
or
mov
mov
jg
jb
mov
dec
sub
pop
jns
add
mov
xchg
and
push
clc
sub
mov
jle
loope
test
je
sub
mov
lods
cmpl
pop
insb
dec
sub
subl
fs
jno
inc
dec
test
jo
mov
leave
sub
imul
and
into
mov
cmc
ret
mov
and
clc
push
insl
shlb
addr16
jae
sub
or
push
add
inc
fmuls
movsb
jno
cmpsb
pusha
push
xlat
xor
inc
xchg
hlt
jge
orb
mov
inc
dec
add
mov
int
mov
fs
idivb
xchg
cmc
aaa
jae
fisttpll
cmp
pop
aam
jb
loopne
xchg
aas
inc
inc
push
or
dec
and
fnstsw
out
and
in
pop
jl
int
lods
test
dec
jae
test
pop
addr16
jbe
test
jle
lods
mov
mov
int3
sbb
mov
push
lds
icebp
xchg
inc
in
imul
loope
jno
addr16
inc
lahf
jl
jb
sti
sbb
mov
inc
adc
or
insb
das
dec
adc
or
sbb
mov
ret
fsubrl
or
push
testb
sub
popf
je
out
xchg
jno
andb
mov
movsb
sbb
nop
and
fisttps
fsubrp
aaa
fucomip
sub
lahf
lahf
push
sub
outsb
lods
push
pop
adc
ja
cmp
mov
fnsave
imul
lahf
xchg
rcrl
inc
ffree
jecxz
insl
fisttps
adc
inc
test
aad
dec
imul
popf
fldl
cld
repz
fsubrs
fcmove
je
push
movsb
mov
fcmove
fcomp
cltd
test
dec
les
mov
add
lret
addr16
jmp
mov
loope
pop
les
les
punpckhwd
dec
xor
sahf
jns
les
cli
push
je
enter
sub
xchg
in
cli
sub
lods
popa
xor
inc
xchg
fbstp
push
xor
es
fdivrs
int
lea
or
fdivs
mov
mov
add
addr16
lea
mov
and
pop
les
popa
sahf
in
aas
push
fs
sbb
jg
js
es
ss
pop
mov
pop
pop
in
mov
jno
lea
mov
push
adc
jecxz
cmpsb
xchg
test
inc
sbb
push
jmp
imul
jae
loope
int
mov
imul
es
add
icebp
into
ret
xor
stos
and
sbb
aaa
and
je
cmp
jge
sub
aad
daa
push
ret
leave
leave
lea
stos
mov
mov
out
pop
mov
mov
pop
add
test
mov
or
shlb
xor
mov
jne
push
mov
xchg
add
fistl
es
cwtl
xchg
fistpl
dec
sub
out
lods
icebp
adc
adc
sub
imul
ret
ret
insl
dec
sub
xchg
jbe
mov
sarl
pop
jns
push
test
cmp
inc
push
cwtl
stc
sub
loope
lret
push
mov
lds
or
cmp
rol
push
adc
sbb
sub
dec
and
jg
cwtl
cs
mov
push
adc
sti
aaa
popa
mov
push
cmp
xchg
jle
shl
clc
dec
jbe
data16
aaa
lods
xchg
mov
cmovb
adc
xor
fndisi(8087
icebp
lock
mov
ljmp
fcompl
adc
xlat
std
xor
xchg
inc
mov
xlat
add
xor
insl
sub
lret
es
cmp
daa
out
pop
mov
out
repnz
orb
adc
dec
jns
xlat
daa
add
push
add
jge
pop
push
fwait
mov
fbstp
mov
xor
xchg
xor
cmpsl
dec
cmpsb
roll
sub
push
pop
fidivrs
push
aas
and
pop
push
jno
sbb
std
xlat
cs
das
leave
mov
int
repz
outsl
inc
sti
loope
popa
pop
push
addr16
and
mov
ret
xor
add
xchg
movsl
pop
mov
sbb
mov
mov
scas
add
add
mov
pop
xchg
nop
lahf
pop
call
shlb
cmp
test
jae
out
sub
pop
and
pusha
and
mov
and
and
stc
lcall
lods
xor
sbb
test
xchg
loope
sub
pop
mov
jbe
cmp
das
les
lret
ja
addr16
xor
add
push
cmc
mov
scas
mov
imul
push
inc
pop
pop
push
arpl
ret
mov
fbstp
jno
aam
and
sbb
or
cwtl
mov
or
int3
mov
xchg
cmp
mov
pop
xchg
jp
aam
popa
arpl
aaa
mov
stos
pop
cld
and
mov
jmp
mov
aaa
and
sbb
push
jae
sbb
xchg
ficomps
es
sbb
js
mov
cmp
jnp
nop
das
adc
jp
cmpl
cmpsb
movsb
mov
push
fldl
dec
loope
lods
hlt
adc
cld
add
leave
mov
sub
dec
mov
test
in
mov
lret
push
xchg
lods
call
incl
movsb
nop
sbb
cmpsl
enter
mov
push
pop
sub
jge
or
stos
shr
cmpsb
in
les
aaa
dec
push
movsb
sbb
mov
inc
stos
daa
jb
xchg
pop
push
add
jnp
cwtl
push
mov
sbb
jns
cmc
dec
mov
insl
mov
pop
jmp
mov
icebp
and
int3
adc
fcomp
lret
out
call
inc
adc
push
jae
imul
lock
dec
mov
jge
std
xchg
jle
leave
xor
adc
loop
js
insl
xchg
mov
push
jge
pop
mov
mov
cmp
push
push
sub
push
rclb
int
lret
sub
cmp
cmp
enter
mov
lds
pop
inc
ja
xchg
jae
call
in
xchg
mov
out
cmpsl
inc
pop
and
xor
xchg
sbb
out
int3
mov
jmp
and
aas
lret
shrb
popf
imul
shlb
push
and
xchg
movsl
or
cmp
lods
ja
scas
mov
mov
enter
stos
cmp
ljmp
stc
fwait
sbb
rcrl
es
sbb
sbb
popa
out
fwait
mov
mov
jno
add
divl
bound
mov
xchg
add
test
inc
xor
fidivs
clc
es
inc
sbb
out
mov
cs
fisubs
xchg
in
cmc
or
or
inc
das
sbb
and
std
add
pop
out
cmpsl
pop
push
or
mov
xor
jnp
mov
ds
sbb
decb
adc
popa
sbb
je
pop
mov
rcrl
and
sahf
inc
out
mov
stos
fwait
in
cmp
sub
mov
push
data16
mov
sarl
out
mov
data16
iret
xlat
es
dec
inc
sub
rcrb
call
adc
add
mov
adc
iret
sahf
mov
sub
mov
mov
pop
incl
xchg
sbb
pop
mov
cmpsb
sub
les
pop
mov
pop
aaa
insl
add
idiv
shrl
xchg
jg
in
leave
xchg
xchg
mov
mov
jg
mov
push
loope
call
push
das
fwait
add
push
add
or
inc
jnp
je,pn
sbb
inc
arpl
push
mov
ret
push
dec
fwait
cmp
hlt
out
adcb
or
daa
jnp
inc
jecxz
data16
pop
popf
mov
xchg
dec
pusha
or
adc
outsb
repnz
outsl
push
cmp
clc
xor
mov
cwtl
push
mov
rorl
cmc
out
shll
lcall
and
out
mov
call
mov
sbb
mov
ret
push
mov
or
adc
mov
mov
outsl
leave
push
pop
xchg
inc
inc
push
dec
lds
sbb
push
jbe
loope
addr16
dec
adc
sub
cmp
addr16
mov
loopne
xor
adcb
cmpsb
std
inc
push
jecxz
cmc
std
jle
dec
jne
imul
push
sbb
rorl
js
aas
subps
jge
mov
test
and
dec
adc
adcb
dec
insl
xchg
inc
jecxz
inc
cs
inc
in
add
cmpb
jno
sub
in
lds
call
hlt
movsl
js
fists
js
xchg
jecxz
mov
nop
ret
jo
call
xor
bound
popf
pushf
out
ja
aad
stc
insb
xchg
jb
dec
cs
not
xchg
lahf
sbb
out
outsl
push
inc
or
cltd
fnstcw
jns
pop
stc
mov
insl
cmp
mov
cld
ljmp
fisubl
push
fcoml
int
cmp
xchg
xchg
dec
lods
mov
jne
in
sbbb
cmp
adc
addl
outsl
shl
and
call
and
in
mov
scas
rorb
mov
hlt
sub
std
mov
clc
aaa
and
cmp
add
adc
add
xor
cmp
mov
pop
add
daa
mov
pop
fadd
dec
dec
stc
rorl
xchg
js
push
mov
negb
js
sar
sub
add
loop
fadd
aam
xchg
notl
enter
pop
inc
push
adc
xor
out
inc
and
popa
or
mov
xor
pop
lock
xchg
shlb
int
out
cltd
leave
mov
inc
fwait
rolb
dec
ss
fildll
sbb
in
rcl
loop
cwtl
cmp
sarl
test
add
shrl
ljmp
lods
stos
mov
stos
std
and
xchg
xor
fnsave
fnsave
pop
adc
repnz
xor
or
call
hlt
sub
repnz
movsb
add
lock
stos
push
test
xlat
mov
mov
popf
sbb
or
dec
lret
fimull
dec
mov
repz
jae
mov
mov
xadd
pushf
xchg
out
adcb
adc
jnp
loop
pop
insl
out
lea
pop
or
and
jns
xchg
cmp
sub
lret
push
sbb
adc
fs
cmp
dec
xchg
ljmp
dec
add
xlat
cld
negb
movq
mov
sub
aam
sar
adc
movsl
movsl
mov
inc
cmp
push
mov
mov
std
js
mov
mov
cmp
cmpsb
call
jb
loope
imul
cmp
mov
popf
test
adc
rolb
and
mov
inc
xchg
xchg
hlt
mov
mov
nop
xchg
inc
mulb
inc
sahf
xor
xor
loope
fstpt
insb
sti
divb
inc
add
insl
add
and
int3
shlb
mov
popf
shlb
leave
and
add
push
leave
push
into
sbb
cld
cmp
fistpll
mov
into
or
lea
insl
fnstcw
jbe
mov
fs
jns
add
shrl
cmp
nop
push
imul
jp
inc
int3
xchg
out
pop
fistpl
clc
cli
push
jecxz
jnp
dec
pusha
xchg
push
aam
cmp
cs
insb
imul
or
sti
int
call
cld
test
fidivs
rcrb
jb,pt
mov
mov
adc
mov
movsl
sub
inc
or
iret
xchg
test
test
sahf
inc
xor
or
push
in
js
ds
gs
push
rorl
mov
adc
xchg
xchg
mov
pop
scas
xor
push
jo
pop
movsb
rcll
adc
aam
dec
xor
adc
inc
jl
jae
sbb
inc
sbb
pop
das
adc
out
mov
cmp
cmc
aam
mov
in
loope
jl
aas
xor
in
aam
and
je
cmpsl
aad
or
adc
dec
inc
dec
pushf
jle
lods
mov
mov
lahf
nop
sub
lock
push
filds
dec
inc
jae
add
fsubr
mov
and
fistl
cwtl
jae
mov
lea
pop
xchg
lea
inc
push
add
scas
cld
out
cmp
addr16
lret
cltd
roll
sbb
aam
pop
and
imul
lret
pop
nop
fistpll
inc
icebp
and
jno
int
repnz
or
cmp
js
fcoml
sbb
adc
jg
adc
ret
inc
mov
dec
jmp
test
sti
and
add
aas
mov
fistpl
sbb
sbb
add
xor
xor
imul
mov
lret
pop
lret
inc
jl
dec
scas
mov
push
pop
fsubrl
nop
stc
push
jmp
jno
adc
mov
bound
xlat
inc
and
ret
fdivrs
adc
pop
cli
push
ss
or
daa
cmpsl
pop
sub
decl
addl
or
pop
popf
and
mov
mov
icebp
dec
movsb
out
lds
inc
subl
dec
inc
xchg
jle
mov
loopne
mov
inc
divb
scas
mov
adc
scas
lret
xchg
je
ret
mov
repnz
mov
cmp
hlt
decb
sub
cmp
rorb
mov
mov
data16
fcomi
fwait
jno
pop
fcompl
jnp,pn
cli
imul
hlt
jp
adc
clc
sahf
je
push
daa
pop
push
sbb
push
fcomi
inc
test
pop
add
fisttpll
mov
adc
or
test
sub
pop
push
jge
subl
mov
dec
ds
enter
inc
ret
lret
idiv
cmovnp
roll
push
push
loopne
jg
xor
add
cmp
add
idivb
sub
xchg
jno
dec
or
cld
inc
or
or
cmp
gs
fisubrs
fs
jge
ss
jp
or
in
out
loopne
mov
std
cwtl
jge
pop
mov
loopne
cmp
jl
std
enter
pushf
adc
pushf
xchg
out
mov
add
push
xchg
push
movsl
cs
jbe
das
mov
mov
cmp
mov
leave
adc
pop
dec
add
adc
sbb
sbb
nop
push
mov
add
rclb
add
lods
fadds
add
loop
bound
xor
ret
mov
or
test
adc
jbe
xor
mov
cmpsl
xchg
out
fnstcw
mov
jae
push
ficoms
les
add
mov
rep
sbb
or
arpl
aam
test
push
xchg
mov
out
cmp
pushf
cmp
xor
jno
ja
stos
jae
call
mov
adc
push
push
sub
lock
adcb
mov
outsb
movsb
nop
imul
cmp
inc
ds
xchg
and
mov
loop
push
call
jl
fldcw
repz
jl
clc
shl
adc
adc
stos
addl
jbe
mov
cltd
mov
and
sbb
mov
mov
fisubl
repz
std
popa
add
add
ja
fldt
mov
aas
sub
dec
lds
fs
push
out
sti
sub
cmp
sarl
addb
gs
stos
in
lret
cmc
int3
mov
jg
rcll
pusha
jne
in
repnz
push
jge
call
mov
jne
movsl
push
dec
add
lock
jle
add
pop
das
xchg
outsl
cld
or
adc
das
popa
test
pop
xchg
sbb
xchg
aad
add
mov
xchg
ret
push
add
lods
cmp
sbb
les
cmp
cmp
std
push
mov
fdivs
arpl
imul
adc
mov
mov
push
add
repz
fisttps
ret
push
inc
call
fstpt
aaa
mov
jle
xor
mov
xor
cmp
addl
cld
pop
mov
and
imul
xchg
dec
sbb
ja
repz
adc
ss
ret
fmuls
popa
in
mov
flds
ja
xor
mov
cmp
aam
push
sbbl
lea
bound
jmp
add
ret
addr16
and
mov
out
aas
xor
mov
adc
pop
jbe
aaa
sub
dec
sub
scas
jo
sbb
ja
sub
push
insl
pusha
sbb
sub
inc
fwait
insb
jbe
push
je
scas
jo
cmp
ss
push
leave
and
add
cmpsl
jl
cmp
adc
or
int3
xor
dec
arpl
sub
and
out
add
cltd
add
hlt
fildll
ljmp
add
inc
pop
fbld
dec
mov
lret
aad
push
lock
pop
jecxz
jne
repnz
arpl
cmp
adc
cltd
pop
mov
sarb
sub
or
cmpl
xchg
cmp
lahf
push
sub
out
std
hlt
inc
les
push
imull
cmp
mov
pop
jg
mov
in
icebp
jo
xlat
mov
mov
jmp
add
inc
lods
mov
or
je
mov
pop
pop
decb
test
xor
out
rcl
mov
xor
aas
rolb
imul
push
push
enter
in
movsb
hlt
das
in
xchg
and
xchg
inc
xchg
not
sbb
addr16
adc
and
pop
iret
jns
loopne
push
add
insb
sti
mov
incb
pop
adc
idivl
roll
push
and
shlb
adc
or
shrb
out
fdivrs
inc
mov
loope
xchg
lcall
push
sbb
and
push
pop
mov
jb
sbb
pop
dec
cli
cmp
cld
or
rcl
pop
mov
sub
int3
sbb
push
mov
or
dec
or
leave
fsts
pop
aam
mov
and
pop
cwtl
adcl
mov
cmpb
cli
int
in
mov
or
push
mov
int
jp
lret
neg
lds
sbb
and
sub
xchg
xchg
push
mov
pop
and
lcall
mov
repnz
lods
ja
push
adc
mov
imul
ljmp
fstpt
mov
lock
sti
cmp
fstpt
jecxz
jp
cmp
pushf
add
lock
lret
dec
add
mov
mov
test
loopne
xchg
sbb
lret
pop
dec
mov
popa
or
add
fisubrs
pop
adc
popa
lods
cmp
leave
fstl
lcall
adc
mov
sub
push
int
repnz
lret
mov
jmp
cmc
icebp
xchg
mov
cld
insl
je
push
inc
in
out
fcoms
sahf
push
add
fiaddl
shl
in
sbb
testb
pop
out
jmp
mov
adc
cmp
pop
mov
jnp
ds
ficompl
stc
mov
cmp
jmp
pop
scas
lcall
test
xchg
clc
push
jmp
jge
sub
sub
mov
inc
sub
lea
add
es
inc
and
inc
inc
cwtl
lods
jbe
outsl
cmp
xchg
adc
cmp
mov
or
jecxz
sub
jl
mov
add
add
push
push
push
xchg
les
pop
clc
sub
inc
xchg
test
stos
push
mov
sarl
push
sub
mov
add
cmpsl
mov
rorb
stos
cmp
jl
nop
cmp
mov
into
jnp
xor
mov
out
cmp
xchg
dec
shl
xchg
sub
pop
or
add
loop
data16
and
gs
push
mov
jmp
or
sub
repnz
test
ret
xor
lods
data16
in
jnp
fiadds
outsl
mov
pop
test
ds
into
jne
jecxz
dec
add
xchg
jg
lods
adc
inc
push
stos
xchg
xchg
xchg
or
jbe
and
jne
adc
sub
pop
lea
inc
dec
fadds
sub
jle
jecxz
out
pop
mov
cmc
loopne
popf
aad
lret
cld
sbb
xor
ret
or
aad
adc
shlb
jmp
out
mov
or
pop
xor
lods
dec
cs
out
fsubrl
lock
rcr
xchg
mov
outsb
test
leave
or
and
sub
flds
cld
mov
scas
aas
or
nop
inc
addr16
xor
and
frstor
pop
pop
pop
jge
scas
ds
xchg
add
pushf
pop
in
mov
xorb
dec
pop
jle
push
push
stos
fwait
lods
cmp
xchg
cmpsl
loopne
dec
sbb
add
sub
add
sub
lds
xchg
xchg
ret
divb
ja
into
stos
and
movsb
jg
xchg
pop
jne
cltd
mov
xorb
fs
insl
sahf
lcall
lea
push
cmp
cmp
leave
mov
cmp
sub
push
or
lcall
loopne
mov
xor
adc
xor
sahf
insl
pop
lea
cmpsl
sub
lods
cmp
stos
das
out
int
push
xor
imul
ror
xchg
and
push
stos
pop
mov
dec
and
mov
push
sar
sbb
and
or
icebp
pop
and
jcxz
push
dec
outsl
test
pop
and
mov
mov
pop
mov
mov
push
mov
pop
mov
stc
aad
cmc
mov
or
mov
lds
sub
lret
lods
in
sub
loope
jne
jae
lcall
sbb
ret
push
scas
loope
out
mov
jo
scas
push
push
jnp
jns
and
mov
icebp
xchg
loop
es
rolb
pushf
jns
xchg
popf
rorl
test
insb
inc
cmpl
push
sbb
xor
in
jae
lret
mov
xchg
imul
leave
loopne
cltd
pushf
out
sub
ljmp
xor
in
sub
xchg
and
push
in
adc
adc
jnp
xchg
sti
dec
mov
xlat
xor
or
jb
cmc
roll
cmpsb
mov
adcl
in
jmp
repnz
xchg
mov
add
sub
lock
sbb
insl
scas
jle
fimuls
pop
and
das
rcrb
pop
sahf
mov
mov
js
insl
movl
push
enter
mov
pop
sarb
cmp
mov
mov
ror
add
ljmp
test
dec
clc
cmp
fists
popf
fs
and
and
cltd
out
je
mov
mov
out
jecxz
les
cmpsb
xlat
sahf
insb
lds
or
and
das
sti
push
inc
mov
popa
outsb
and
je
mov
pop
lods
dec
mov
push
mov
cvtpi2ps
jno
pop
adc
fcomi
mov
bnd
cmpl
mov
fidivrs
arpl
mov
xor
adc
and
push
sbb
sub
cvttps2pi
jmp
dec
int3
sbb
je
popf
mov
lar
mov
cmp
clc
stos
ss
out
outsb
test
xchg
out
in
push
aam
pop
je
xor
adc
pushf
enter
fdivr
xchg
fwait
cmp
lret
or
les
jge
add
nop
xor
popa
faddl
lock
imul
ret
and
je
adc
sbb
push
popa
fldt
pop
fwait
push
outsl
cmc
or
jno
add
mov
push
or
rolb
xor
sbb
or
xchg
xchg
push
outsb
xchg
cmp
push
fdivp
ret
insb
cltd
data16
adc
add
std
push
jp
lret
cmp
ss
inc
dec
jmp
sub
data16
sbb
jge
sub
out
std
scas
aad
arpl
aam
lahf
cmp
mov
adc
xor
push
es
ss
addr16
lock
cwtl
ljmp
das
enter
or
cld
sub
cli
push
stos
jle
adc
or
or
outsb
aas
sbb
les
scas
sbbl
xchg
ja
push
xchg
push
dec
add
cmp
or
xchg
aas
or
jmp
or
test
gs
or
sub
pop
mov
subb
call
loope
rcr
outsb
push
push
sbb
stos
or
push
jecxz,pt
and
pop
add
lods
test
enter
add
jb
inc
lret
test
inc
imul
hlt
rolb
sbb
test
ret
lgs
aaa
in
aaa
and
push
mov
or
xor
repnz
repnz
mov
daa
hlt
mov
sahf
push
std
xor
mov
jns
pop
mov
push
fisttps
or
dec
mov
mov
mov
push
shll
cmp
sub
dec
nop
pop
cwtl
adc
push
addr16
inc
push
out
aad
in
push
hlt
mov
mov
ljmp
jbe
je
fimuls
movsb
jae
pop
movsl
mov
test
jb
push
jbe
push
sub
cmp
pop
adc
je
sbb
sbb
lcall
imul
dec
cmp
sub
push
stos
mov
gs
arpl
dec
vmovss
cs
add
pop
push
cmp
repnz
jae
mov
test
push
sbb
arpl
xor
xchg
sbb
adc
shrl
add
out
std
add
and
les
or
or
pop
cmp
push
and
push
add
mov
pop
inc
or
imul
adc
mov
adc
mov
adc
xchg
fldl
rol
jns
xor
dec
push
jnp
lcall
movsl
ret
push
in
lahf
pop
add
xor
cmp
jg
lret
mov
mov
mov
mov
pop
inc
stos
in
sahf
es
shll
adc
mov
push
aaa
shll
div
add
mov
in
xor
punpckhdq
mov
sbb
add
push
push
dec
dec
mov
or
jp
mov
insb
ret
shrl
nop
jno
xlat
mov
push
sub
test
mov
and
loopne
push
cli
je
pushf
inc
in
movb
std
clc
rcrb
mov
in
dec
sbb
jl
pop
sub
in
mov
cmpsb
adc
test
cld
mov
lods
inc
adc
inc
jge
pop
xlat
aad
mov
jnp
cwtl
dec
xchg
xorb
and
mov
xor
test
mov
sbb
hlt
mov
xchg
call
jne
ja
in
sbb
and
mov
xchg
test
cmp
lods
lods
sbb
jo
fstl
loope
pop
sti
cwtl
mov
daa
cmc
dec
ljmp
lret
sbb
xchg
mov
mov
mov
or
jmp
sahf
sahf
in
add
xor
dec
add
loop
in
push
pop
sub
push
imul
dec
cmp
pop
repnz
imul
mov
inc
sub
pop
sub
icebp
nop
addr16
push
scas
pop
fisubs
rcrb
xchg
loop
inc
or
mov
daa
jg
sub
mov
js
and
arpl
lret
push
mov
inc
repz
or
pop
sub
xor
dec
inc
sbb
mov
sub
push
loopne
push
inc
loopne
mov
jb
mov
in
sbb
xchg
push
jnp
ror
pop
addr16
pop
jle
pop
jbe
add
lock
adc
xchg
jne
pusha
pop
mov
jge
aas
into
inc
neg
push
fstpl
popa
push
jge
es
add
insb
repnz
mov
fsubl
adc
fwait
xchg
pop
insl
in
or
aas
orb
add
test
gs
adc
jge
push
dec
pop
int
push
mov
sub
fs
je
sahf
jns
adc
mov
add
inc
outsl
dec
xchg
mov
inc
out
dec
fs
pop
sbb
sub
push
ficoml
jl
cmpsb
div
adc
adc
jo
jbe
sbb
adc
cltd
insl
jecxz
hlt
fwait
sub
pop
mov
es
push
jne
enter
add
cld
inc
insb
pop
leave
sbb
xor
inc
jmp
mov
in
add
ljmp
jmp
and
sahf
sub
cli
push
cmp
push
xchg
push
mov
adc
xor
cmp
in
std
cmp
add
and
and
fnsave
sub
loop
das
pop
and
jle
cli
cli
dec
sbb
push
lret
mov
lods
xor
mov
sub
xlat
or
jl
dec
sub
ja
pushf
addl
cld
pop
mov
fwait
sbb
jno
adc
sbb
dec
call
and
add
jmp
cmp
adc
aas
scas
shrl
into
inc
out
in
xor
sub
dec
push
icebp
es
and
sub
lret
adc
mov
test
push
mul
jbe
icebp
clc
sub
pop
repnz
testb
pop
sbb
xor
push
adc
pop
adc
fisttpl
into
sahf
ret
in
repz
mov
mov
push
mov
push
mov
cli
arpl
push
mov
divl
or
fxch
push
sarb
ljmp
cs
add
rolb
out
stos
push
fwait
js
sub
cmp
and
cmp
dec
push
cmpsb
xchg
push
push
dec
enter
pop
js
push
mov
inc
mov
sub
in
fs
lds
loopne
ja
adc
lods
test
mov
mov
push
fidivrs
test
pop
mov
or
pop
push
pop
pop
dec
sahf
mov
lcall
fnstcw
mov
dec
mov
call
pop
or
add
fsubl
outsl
jecxz
dec
cmpl
push
xchg
gs
jle
addr16
mov
inc
cmpb
add
xchg
cmpsb
sub
mov
xor
stos
int
shlb
mov
mov
mov
pop
movsl
inc
pop
imul
add
mov
pop
jns
rcl
dec
mov
fwait
adc
push
dec
out
mov
sub
jnp
addl
jns
sahf
call
mov
stos
aas
clc
ds
xor
data16
adc
inc
mov
xor
xor
stos
out
cli
gs
jno
dec
push
and
and
popa
mov
mov
cmpsl
test
mov
dec
movsl
add
test
dec
lret
in
mov
std
add
nop
xchg
cmpsb
inc
pushf
mov
aam
mov
pop
outsb
gs
das
aad
push
adcb
fcomps
mov
or
inc
mov
lds
imul
cmp
movsb
js
gs
lods
daa
inc
sarb
jge
lcall
loope
into
dec
mov
xchg
lcall
xchg
jb
xor
and
jle
or
add
pop
mov
insb
scas
repz
sti
mov
fistps
out
loopne
and
push
notb
fistl
push
mov
add
push
push
insb
jnp
mov
mov
sbb
aas
sub
adc
mov
cmp
cmp
arpl
jmp
loope
mov
jbe
iret
pop
pop
out
sbb
int3
out
out
out
orl
mul
xchg
movsl
je
adc
fildl
mov
xchg
xchg
pop
movsb
and
insb
mov
sub
push
xor
pop
roll
or
loop
fisubs
test
sahf
pushf
lea
and
cmp
sbb
fistpll
mov
fists
adc
and
mov
out
in
xchg
and
lret
outsl
nop
dec
out
sbb
sbb
cmpxchg
sub
loop
push
dec
jno
nop
pop
inc
xor
push
rolb
popf
pop
cltd
mov
shll
fistpll
mov
mov
xor
es
and
lret
cmp
jge
or
fistpll
imul
fildll
popa
cmp
xor
mov
or
push
and
loopne
sub
imull
pop
jbe
stos
cmp
mov
rol
or
push
push
inc
or
idivl
int
jle
cmp
or
ret
cltd
push
hlt
push
lahf
sbb
xchg
std
or
adc
pusha
pop
cmp
pusha
es
mov
inc
pop
loopne
mov
inc
jae
out
sti
xor
mov
ss
mov
sub
push
pop
cmp
cmpsl
xchg
sahf
dec
push
or
cwtl
adc
dec
pop
jae
pop
idivl
ret
out
loope
ret
icebp
fsubs
daa
and
std
add
std
lea
std
ficompl
pop
xchg
popf
lds
fcmovb
cmpsl
inc
rcll
xchg
add
fisttps
fisubs
imul
mov
jmp
xchg
fimuls
push
into
and
rcrl
mov
pop
inc
jns
sti
daa
dec
cli
sbb
or
in
popa
fldcw
xchg
fwait
pop
fcoms
into
scas
hlt
adc
sbb
xor
es
pop
sub
cmp
popf
or
push
insb
loope
inc
add
test
lods
inc
push
push
in
shrl
adc
jmp
adc
and
or
jb
xor
pop
aas
push
inc
or
seto
out
adc
out
jno
pop
pop
fwait
inc
mov
and
popf
and
repnz
xchg
adc
and
nop
mov
sub
fidivs
stos
cmpsb
sbb
push
add
leave
push
imul
in
cmp
push
cmp
cwtl
stc
pop
mov
loopne
into
pop
mov
push
into
adc
xor
sbb
xor
not
mulb
insl
fsubl
test
std
in
stos
int3
sub
pop
pusha
cmpsl
test
jg
cmpsl
mov
fwait
jbe
mov
scas
fisubrl
xor
mov
rep
arpl
mov
in
out
jbe
popa
push
pop
sub
inc
cmp
inc
inc
or
icebp
roll
jmp
mov
mov
es
inc
pop
out
sbb
inc
add
pop
andl
sub
cwtl
pop
push
lods
xchg
or
adc
mov
sub
mov
pop
lret
xchg
fcomps
jle
mov
mov
in
sarb
pushf
lods
call
movsb
cmp
xor
test
inc
inc
xor
sbb
mov
xchg
xor
and
movq
xor
mov
cmp
dec
xchg
mov
adc
dec
adc
lods
and
mov
arpl
stos
jne
add
leave
repnz
rol
jecxz
xchg
bound
gs
mov
nop
data16
mov
gs
xchg
jge
stos
call
jp
sbbb
dec
add
test
dec
divl
divl
add
fisttpl
ret
fdivrs
je
test
adc
cmpsb
jle
ret
sub
sub
in
in
clc
stc
mov
mov
repnz
mov
inc
push
inc
inc
mov
mov
test
call
jno
jo
sarb
sub
test
test
jo
dec
mov
push
ja
lods
ret
mov
push
pop
stc
mov
pop
mov
lods
xchg
jnp
xor
xor
dec
imul
aaa
pop
sbb
lock
inc
dec
pushf
jg
cmp
into
out
jbe
pop
sbbl
in
rcr
sarl
xchg
test
jbe
fistps
jbe
add
es
cs
in
cmpsb
inc
stos
les
adc
cli
push
frstor
and
push
add
gs
pop
mov
pusha
cmp
test
add
pop
lret
xor
ss
or
push
xorb
cwtl
xor
shr
mov
cmpsb
lahf
repnz
pop
arpl
inc
nop
scas
add
pop
jmp
mov
mov
fistps
xchg
xchg
js
aas
mov
jb
sbb
sbb
sub
pop
test
inc
mov
xor
inc
gs
sti
repnz
leave
adc
lods
xlat
insl
push
add
sbb
inc
scas
dec
mov
imul
insb
shl
mov
fnstenv
dec
cmpsl
dec
cmp
push
pop
ja
and
mov
inc
lods
cmpsb
push
xor
xrelease
dec
clc
cmp
inc
jae
cli
fdivl
jp
or
das
loop
pop
mov
loope
add
insl
repz
enter
xchg
sahf
add
lock
data16
pop
push
xor
das
fiadds
ja
fbstp
inc
cmc
out
sub
lcall
aas
push
arpl
and
xchg
dec
add
mov
ja
insb
inc
cli
lods
jno
iret
popa
loopne
mov
jbe
les
fmull
pop
std
mov
lahf
sbb
sub
xor
or
lds
rcrb
int3
or
cmpsl
aaa
int3
divl
and
lods
or
fsubrl
aam
jbe
sub
lea
lret
lahf
loope
test
in
dec
push
cmp
sahf
jl
testl
adc
or
jle
jecxz
and
mov
out
add
jmp
mov
cmpsb
cmp
popl
jne
mov
or
test
sahf
push
push
into
adcb
outsb
pushf
inc
mov
or
dec
sub
push
push
sbb
mov
push
test
loop
dec
repnz
movsb
mulb
mov
and
les
adc
sub
das
jbe
or
testl
daa
lods
cmpsl
cltd
jg
mov
into
enter
insl
push
lret
sbb
inc
and
xchg
sahf
insl
cmp
sbb
out
pop
jae
push
fldcw
bound
push
mov
pop
arpl
mov
sti
aad
inc
lock
dec
pushf
dec
repnz
ljmp
push
mov
js
or
outsl
xchg
add
lock
mov
mov
pop
sub
aas
inc
push
aad
xorb
and
dec
dec
inc
push
gs
lock
test
xor
jo
outsb
jle
mov
or
lcall
lahf
mov
xor
fsub
lahf
cmpsl
stos
mov
sbb
sub
jnp
jp
xor
add
imul
mov
mov
lods
ds
and
sub
mov
and
jge
shlb
mov
inc
insb
push
push
fisttps
xlat
push
pushf
popf
gs
sub
std
incl
inc
sahf
bnd
sbb
mov
push
xor
and
in
dec
and
push
xor
adcl
cli
cs
mov
cmp
call
ljmp
fdivrs
sub
outsb
lea
sbb
xchg
add
mov
xchg
add
rorl
fldcw
xchg
fstpl
xchg
dec
ret
sub
imul
aam
push
push
sub
mov
mov
repz
pop
jno
and
cwtl
stc
push
add
xchg
ja
xchg
jmp
xchg
or
out
jmp
jl
mov
pop
daa
inc
shll
dec
xor
scas
inc
sar
ds
int3
cmc
scas
mov
add
sbb
testl
inc
push
push
mov
not
out
mov
test
mov
lods
sbb
inc
xchg
sarb
daa
xor
dec
je
scas
sub
adc
cmpb
lea
stos
mov
pop
decl
inc
and
cmp
xor
sub
push
sub
xor
out
dec
mov
cmpsl
ficomps
mov
cmp
xor
sarl
sbb
leave
pop
inc
xchg
add
jne
sbb
orb
scas
stos
jp
lret
bnd
xlat
outsb
inc
clc
in
xor
mov
pusha
dec
push
jb
rcrb
data16
ret
hlt
pusha
add
scas
stc
xor
cltd
scas
test
xchg
ljmp
call
nop
pushf
adc
pusha
add
out
jl
add
mov
jp
or
adc
cmp
add
mov
iret
les
fs
mov
iret
mov
pop
cmp
xor
jns
popa
jb
add
pop
mov
xchg
mov
inc
adc
loopne
pushl
jle
cltd
inc
dec
and
fildll
push
mov
cmp
jo
dec
int
inc
mov
lret
lahf
jge
ss
xchg
std
data16
xchg
adc
push
addr16
jnp
xor
mov
les
inc
jecxz
les
push
pop
lret
hlt
aas
cld
inc
cmpsl
cmp
test
cmp
decl
xlat
movl
push
or
mov
shr
sbb
repz
inc
aas
and
push
and
sbb
int
or
mov
in
sbb
mov
bound
fisttpl
sbbb
jmp
js
ret
mov
mov
sbb
xchg
xor
push
sbb
fldcw
hlt
xchg
mov
mov
setne
int3
jecxz
lcall
and
inc
ja
rclb
ss
and
pop
pop
xor
punpcklwd
fs
mov
loope
push
adc
es
add
mov
stc
adc
std
xor
pop
sub
mov
or
dec
pop
and
loop
aad
mov
imul
mov
aaa
lods
lods
fmull
repnz
icebp
mov
fwait
leave
orb
sbb
clc
fs
jbe
mov
mov
jp
shr
add
inc
lea
jnp
dec
xchg
add
mov
jge
xchg
repnz
pop
cmpsl
push
cld
jno
in
in
cmp
std
stc
fildll
or
cld
lea
in
fdivrl
cmp
xor
xchg
sbb
and
lods
sbb
jno
lcall
push
sub
js
scas
lock
arpl
gs
lret
xchg
scas
mov
and
fisubl
push
mov
roll
or
pushf
pop
xor
cmp
adc
call
sbb
fnstsw
pop
cmp
mov
loopne
popf
mov
cmp
inc
xor
adc
int
push
dec
int
fdivrs
sbb
dec
push
popf
inc
mov
cmp
sub
out
inc
and
loop
pop
dec
aaa
cli
jmp
sbb
inc
out
jmp
mov
dec
push
pop
rolb
mov
addr16
sbb
sahf
mov
and
adc
adc
dec
leave
ret
jle
iret
sub
int
lds
push
and
jnp
lret
enter
xor
nop
and
pushf
mov
jo
pusha
jecxz
mov
jbe
sub
mov
jne
sahf
inc
ljmp
jo
pop
xchg
shr
or
jae
scas
pop
mov
out
popf
sub
imul
stos
pop
push
outsl
je
scas
or
pop
lock
mov
dec
mov
icebp
cld
ja
leave
andb
adc
out
xor
or
fisttpl
push
push
icebp
dec
fldl
in
sbb
push
pop
dec
jmp
or
cmc
jge
cmpsb
lock
mov
jno
cld
sarl
lret
ret
scas
pushl
cmpsb
jge
xor
incl
stos
mov
xor
daa
outsb
push
imul
add
lock
lods
dec
mov
xchg
xor
xor
mov
pop
ds
daa
fcmovnb
jns
es
dec
add
or
or
inc
bound
notl
movsl
pop
push
into
lret
mov
cltd
xchg
pop
je
imul
pop
in
out
fisubrs
test
push
pop
xor
std
cltd
sub
imul
xchg
push
out
sbb
mov
pusha
jne
push
repz
dec
sbb
push
xchg
jb
mov
mov
fstpl
sbb
aas
sbb
in
ja
sbb
iret
lcall
stc
subl
ljmp
cmpsl
leave
movsb
test
lock
adc
mov
mov
fstl
xchg
push
imul
insl
mov
loope
rorl
cwtl
mov
pushf
jb
es
inc
pop
xchg
repnz
mov
popf
cmc
test
add
xchg
pop
mov
jns
cmp
lea
insb
sbb
jnp
xchg
std
mov
mov
mov
mov
call
cmpsl
push
stc
pop
es
push
popa
sbb
mov
aam
dec
imul
xor
dec
and
fxch
jae
xor
rol
stos
ret
loopne
dec
fmuls
fsubp
imul
xchg
mov
and
sbb
pushf
sub
add
jno
jl
inc
xchg
pop
inc
fnsave
std
or
jl
repnz
jl
idiv
add
mov
fiadds
leave
notb
lahf
push
lods
pop
inc
adc
lock
sahf
add
push
mov
test
sub
push
out
mov
jne
enter
and
add
cwtl
add
pop
inc
pop
dec
dec
aaa
fmuls
das
pop
shll
mov
lret
jb
or
and
loop
jmp
pushf
shll
push
jnp
sub
popf
adc
js
subb
scas
rorl
pop
enter
dec
jnp
push
push
jp
scas
int
push
std
or
inc
mov
jecxz
insl
xchg
shlb
xchg
rcll
lea
mov
cmp
push
cld
fistl
ss
sbbl
ljmp
dec
xchg
xchg
pop
push
add
icebp
aam
shrb
mov
out
jne
mov
and
pop
and
out
inc
sub
mov
into
cmc
ss
adc
movl
clc
movsb
loope
outsb
lcall
outsb
adc
xor
inc
cmpsl
in
jns
push
rep
mov
stos
mov
in
in
stos
push
mov
adc
pop
mov
adc
arpl
xor
bound
fldl
cmp
data16
xor
out
rorb
sbb
mov
jle
nop
mov
in
sbb
mov
add
xchg
ljmp
inc
mov
push
ss
lcall
lret
out
jge
and
xchg
movsl
sub
mov
incb
repz
mov
shl
jbe
cmpsb
rcrl
aam
out
push
sub
inc
cmp
loop
xor
imul
call
jle
mov
jo
push
adc
cmc
lret
mov
shll
add
jbe
nop
sub
imul
mov
or
xchg
enter
dec
rcl
mov
fwait
xor
mov
ljmp
pushf
add
out
sbb
cmp
scas
dec
mov
imulb
jbe
sahf
sbb
sub
andb
rolb
data16
push
out
mov
hlt
iretw
mov
sbb
cmpsb
pop
outsl
fwait
aaa
xchg
arpl
aad
add
and
jp
in
xor
insb
cli
jne
push
fs
mov
test
dec
mov
xor
inc
outsl
mov
add
jmp
add
in
lods
cmp
xor
xchg
push
adc
shll
cmp
inc
hlt
dec
outsl
fidivrl
xchg
push
les
dec
mov
stc
mov
xchg
pop
mov
add
mov
sbb
xchg
inc
or
pop
xchg
aad
sub
scas
jo
mov
addr16
js
jecxz
jno
dec
icebp
aam
adc
mov
cmc
out
ret
repz
xchg
cmp
add
sbb
hlt
lret
inc
popa
mov
mov
lea
add
lret
fs
jp
or
xor
jno
dec
lcall
sub
js
iret
push
daa
dec
cmp
xor
xchg
aaa
mov
stc
cli
cwtl
add
std
lods
popa
add
jae
je
test
int3
cmp
mov
sbbl
xchg
mov
mov
in
cmc
sub
mov
sbb
jnp
rcrb
sbb
aad
xor
and
mov
mov
jne
mov
lret
push
xchg
add
adc
and
adc
test
mov
xchg
sbb
sub
xchg
mov
mov
scas
js
xor
xor
lods
or
mov
call
jp
and
repz
es
testb
or
sub
xchg
fdivp
mov
and
lock
movsl
inc
daa
jns
or
enter
and
xor
cwtl
jecxz
xor
outsb
out
jnp
adcb
dec
imul
pop
clc
fsincos
sahf
insb
dec
pop
rorb
int3
adc
mov
stos
jg
push
xlat
mov
jmp
mov
lods
xor
jge
dec
test
icebp
stos
filds
das
sub
sti
inc
ret
sti
clc
sub
in
xchg
mov
call
faddl
push
mov
cmpsl
sub
repz
fwait
test
cmp
sub
call
and
dec
mov
jmp
jge
ret
test
pop
dec
lock
int
shl
insb
or
pop
pop
out
cli
mov
hlt
pop
inc
mov
ss
cmpsb
lds
sbb
push
mov
ss
ds
mov
xor
sahf
sbb
add
ja
int
sub
cld
fadds
xchg
mov
push
movsl
xchg
loop
add
imul
add
dec
pop
mov
mov
repz
int3
lcall
jge
sbb
push
inc
in
inc
aas
xor
lret
pop
data16
loopne
xor
push
orl
loopne
lcall
mov
mov
mov
cwtl
lret
pop
sub
loopne
ficomps
data16
jae
xor
test
push
inc
iret
lahf
stos
cmpsb
mov
mov
movsb
xor
jmp
cld
sub
div
xor
dec
mov
mov
pop
sti
mov
aam
jmp
xor
out
stos
adc
std
jnp
mov
nop
fs
jg
xor
aas
jge
adc
sahf
cs
push
fsubs
insb
dec
jno
cmpsb
xorb
icebp
inc
mov
aaa
les
pop
andb
inc
fnstenv
test
add
out
repz
pop
lret
es
cwtl
push
jns
jle
push
imul
push
jge
sbb
pop
sbb
adc
push
je
add
xchg
xor
push
jb
cwtl
mov
xor
sub
in
adc
icebp
dec
loopne
std
cmpsb
jp
cmpsl
divb
ficoml
mov
and
dec
dec
mov
hlt
push
jle
jb
xor
adc
xor
pushf
sbb
push
and
out
sub
mov
jmp
adc
in
xor
not
pop
mov
mov
test
sub
dec
inc
sarl
sbb
aam
add
or
fcoml
and
and
jns
je
cmpsl
mov
enter
mov
test
ficomps
adc
mov
nop
sbb
insb
fistpl
xchg
decb
adc
filds
pop
jmp
and
inc
movsl
adc
jecxz
ljmp
xchg
pushf
adc
and
xchg
mov
mov
xor
cld
sub
les
xor
sbb
pop
rorb
gs
xlat
insl
mov
cwtl
jp
roll
out
iret
enter
rep
inc
fisttps
insl
push
andl
in
idiv
pop
dec
sti
push
ficomps
aas
push
aad
jo
push
cli
out
mov
xlat
jg
jecxz
and
fwait
dec
and
pop
out
stos
leave
jnp
or
ljmp
fsubrp
and
and
or
xchg
dec
rcll
test
push
into
stc
or
imul
sbb
pop
mov
ror
gs
jge
out
mov
enter
jmp
fwait
insl
rcrb
xchg
insl
je
xor
insl
dec
test
pop
lret
mov
pushf
cmp
pop
int
mov
sbb
xor
inc
icebp
imul
in
adc
call
mov
je
dec
xor
into
add
sti
mov
lea
and
pop
mov
push
lahf
movsb
push
lret
mov
and
ds
pop
pop
xchg
jns
xor
lea
aaa
xor
sahf
inc
push
lea
mov
pop
adc
xchg
dec
jae
rorb
arpl
push
subl
hlt
nop
mov
mov
inc
pop
orl
or
cmp
cmpsb
inc
lock
stos
mov
out
mov
imul
add
mov
push
in
lahf
xlat
pop
outsl
jns
pop
jmp
dec
nop
and
popf
mov
roll
dec
int3
adc
add
sbb
daa
push
inc
sbb
test
ja
movb
mov
aad
adc
add
rcll
test
stos
lret
jb
xor
cmp
fmull
rclb
in
dec
shr
loope
icebp
out
pushf
push
cld
test
imul
cmp
dec
pop
dec
cs
roll
ja
adc
mov
fwait
rcr
std
xchg
add
mov
xchg
notb
int3
stc
sub
push
cltd
lret
mov
lcall
push
mov
push
mov
outsb
in
sbb
or
or
bound
imul
sahf
adcb
xor
dec
dec
sub
mov
push
xlat
push
sub
mov
dec
cmc
xchg
loopne
out
test
or
xchg
imul
rcrl
pop
push
add
daa
xchg
aam
leave
adc
or
add
add
imul
cmpsb
pushf
pop
mov
cmpsb
sbb
mov
xchg
dec
pop
popa
xlat
jns
pop
and
insb
and
fs
jmp
mov
aas
scas
mov
sbb
xchg
add
sub
sbb
xchg
mov
bound
filds
jb
cld
jmp
in
es
pusha
shrl
push
call
jb
imul
mov
cmpsl
inc
mov
es
jle
and
fadd
sarl
push
daa
pop
movl
dec
lret
mov
sbb
movsl
mov
das
rorb
cmc
loope
mov
dec
cmp
cmp
adcl
lds
fildl
test
rcrb
mov
pop
adc
ret
testb
inc
gs
sub
insl
imul
jmp
shll
push
icebp
jbe
jb
xchg
shrl
insb
icebp
pop
nop
rcl
mov
int
mov
push
push
jne
aad
mov
xchg
fldlg2
pop
fwait
aam
sub
repnz
cmp
ss
hlt
fcomps
sbb
xchg
cmp
std
xchg
repz
push
idivw
mov
and
jmp
aam
addr16
mov
aaa
sahf
lods
mov
lahf
or
pop
fists
xorb
cwtl
xchg
and
cmp
xor
sti
xchg
addr16
xor
cmovle
out
frstor
fstl
and
out
dec
dec
and
inc
jg
and
mov
leave
xchg
cmpsb
jne
jb
sub
mov
fidivs
aaa
fidivs
or
cmc
dec
jg
stos
pop
jl
xlat
mov
pop
pop
in
mov
inc
push
fcomip
pusha
sbb
pop
mov
mov
scas
dec
or
pop
or
int3
push
dec
push
pop
rcl
xchg
es
push
inc
adc
and
fstps
fisubl
loope
sub
jno
cld
outsl
xchg
test
push
jge
xchg
popf
mov
jecxz
xor
xor
pushl
pop
bound
testl
lds
aas
sbb
inc
sub
popa
fs
mov
fcomps
out
push
arpl
xchg
cli
ret
cmpsb
fwait
loop
xchg
in
sub
mov
cmp
push
pop
cmpb
popf
in
ja
jnp
sbb
mov
mov
xor
adc
sarb
push
int3
movsb
imul
in
jmp
nop
push
push
icebp
dec
cmp
mov
lahf
dec
ljmp
out
test
pop
pop
pop
jl
xchg
xchg
pop
rorl
rorb
push
fs
rorb
dec
aad
popf
je
and
shll
shll
sbb
loope
out
sbb
mov
xchg
pop
cmp
dec
jbe
out
xchg
dec
mov
xchg
xchg
add
mov
cli
fsubs
out
sti
cmp
bnd
addb
repnz
inc
out
cmp
push
ret
push
sub
jb
ret
mov
mov
adc
add
lods
sbbl
dec
inc
sbb
aam
or
and
in
test
pop
cs
orl
pop
dec
and
pop
lock
inc
mov
stos
mov
jge
mov
lret
pop
in
pop
xchg
ficomps
mov
in
repz
and
imul
sahf
inc
add
std
pop
fwait
pop
xor
mov
iret
sbb
add
mov
push
or
xchg
leave
push
aas
push
ds
add
inc
push
cwtl
repz
js
add
stos
cmpsb
or
pushf
and
xor
xor
xchg
out
ljmp
fists
es
or
xor
mov
xchg
mov
push
push
ja
and
xchg
inc
scas
lods
xchg
xchg
jl
mov
mov
jmp
mov
push
outsl
jns
push
sub
in
xchg
mov
insb
dec
mov
xor
mov
xor
icebp
pop
dec
std
imul
pop
sbb
cmp
lock
jmp
adc
aam
cmp
test
pop
popf
jae
test
dec
xchg
mov
insb
xlat
test
sub
popa
sbb
mov
fiaddl
cmp
push
mov
test
std
cli
mov
push
lock
cld
mov
pop
mov
call
push
jp
ljmp
mov
xor
nop
cmp
xlat
adc
sbb
inc
addb
data16
or
mov
out
push
adc
xchg
loop
xlat
and
div
and
adc
xchg
mov
sub
pop
repnz
jp
xchg
into
push
push
and
fmuls
or
or
dec
scas
and
and
dec
lock
lret
addr16
mov
and
shll
sub
lock
fildll
aas
sbb
xorl
xchg
xchg
es
fistpl
scas
ds
in
push
iret
repnz
out
xchg
adc
xchg
subl
popa
xchg
mov
add
imul
lahf
movl
push
mov
sbb
stc
pop
add
dec
andb
frstor
sar
mov
insl
and
sub
pop
in
std
in
into
push
or
adc
dec
lds
popf
mov
fstps
inc
je
sbb
insl
enter
mov
xor
pushf
push
pop
je
dec
inc
loopne
test
adc
int3
mov
es
imul
leave
jmp
jne
loop
gs
iret
insl
ret
pop
mov
lods
inc
adc
aad
cltd
adc
mov
adc
adc
call
push
mov
or
mov
mov
pop
or
lret
ss
aaa
loop
cmpsl
movsl
jno
add
xlat
frstor
negb
add
cwtl
push
sub
mov
fisttpl
xor
sbb
xchg
shrl
xchg
movsb
mov
sub
push
mov
push
lret
mov
mov
push
adc
fsubs
test
mov
add
jle
pop
aam
outsb
cld
js
xchg
mov
es
mov
addr16
mov
inc
cmp
bound
incl
inc
enter
mov
mov
xor
dec
jo
iret
pop
push
add
aaa
add
mov
sbb
lock
push
jp
cmp
xchg
lock
xchg
push
ds
push
jmpw
rcl
stos
mov
in
mov
fnstcw
push
das
lods
nop
insl
pop
add
sub
loop
je
push
test
mov
mov
xor
xor
lcall
xchg
outsl
iret
movsb
iret
and
imul
ret
jnp
insl
andl
mov
cmp
fs
sub
sub
scas
int
push
ljmp
push
mov
data16
es
fwait
loope
and
std
push
jmp
ret
jne
push
jecxz
cwtl
leave
mov
outsl
xlat
dec
xchg
sbb
shlb
or
xchg
lahf
shlb
shr
jae
jno
or
cld
in
icebp
out
cwtl
and
ljmp
xchg
dec
push
xchg
in
xor
mov
jp
popf
daa
rcrb
icebp
std
jne
sbb
mov
test
xchg
fnstsw
pushl
xor
data16
push
pop
fwait
loopne
pusha
sub
mov
push
lods
or
lret
add
jns
mov
bound
lea
loope
lods
popl
cld
call
push
andb
cld
sarb
mov
push
daa
or
adc
pop
mov
inc
dec
std
test
push
push
mov
cmp
mov
insb
leave
push
in
ja
fidivl
xlat
push
cmp
mov
and
test
xor
push
mov
fisttpll
add
or
aam
sti
add
or
leave
scas
std
add
sub
inc
sbb
and
sahf
mov
xor
mov
in
add
cld
scas
ja
notb
add
out
sub
xor
mov
pop
pushf
or
jb
and
dec
xchg
xchg
lret
arpl
lds
cwtl
cs
push
shrd
xchg
cmpsb
xchg
xchg
stos
xchg
sbb
cwtl
cmp
lock
mov
push
imul
mov
mov
sbb
lea
pop
push
pop
cmp
icebp
sub
jl
in
jnp
lret
jbe
out
push
and
pop
push
andb
movsl
in
ret
dec
jns
cmpsb
insl
push
leave
jb
es
imul
lea
mov
sbb
pop
popf
movsl
xor
cld
push
test
mov
add
jb
aaa
lcall
push
sub
shrb
int3
xchg
push
add
fsubrp
push
mov
lahf
les
mov
ret
jns
shrb
in
shlb
stos
sub
push
mov
cmp
mov
cmp
int3
adc
sar
push
cmpsb
xor
cmc
ret
bound
outsb
das
jae
in
dec
cld
std
lods
imul
repz
sub
paddw
je
pop
test
out
shrb
inc
testl
mov
sub
shll
lret
enter
jecxz
xchg
xchg
xchg
test
pusha
fcoms
pop
mov
mov
mov
lahf
fcoms
repnz
cmp
and
aam
fsts
cmpsl
mov
test
fcoms
mov
aad
shlb
or
mov
mov
rcrb
xchg
or
jbe
add
mov
push
jae
pop
fldenv
mov
xchg
es
cmp
pop
mov
add
push
repz
mov
cmp
cwtl
mov
cmpsb
sub
cs
cmp
cwtl
sbb
shrb
popa
lret
xchg
ja
sub
stos
gs
shl
fcoml
mov
push
and
out
repnz
or
dec
out
jmp
mov
ljmp
dec
push
jmp
push
inc
pop
cmp
cmp
jmp
lret
mov
dec
fisubl
into
inc
push
jb
out
mov
pop
and
int
mov
jno
inc
mov
cld
jnp
cmp
pusha
repnz
xor
lret
jle
add
loope
inc
xor
arpl
or
mov
cmp
cmp
mov
jmp
popl
inc
jp
rolb
mov
popf
loopne
arpl
lea
push
outsl
in
cmp
es
lahf
and
add
pop
popf
dec
aas
sbb
jns
dec
dec
negb
ds
mov
pop
cmp
movsl
lret
ljmp
push
mov
lret
jbe
testb
push
pop
adc
xor
shlb
xchg
sbb
mov
sub
fsub
in
test
or
pop
hlt
xchg
and
mov
loope
scas
jns
push
push
loope
dec
rsqrtps
pop
cmp
outsb
xchg
and
cmp
dec
test
jo
jo
movsb
test
sub
sbb
inc
pop
lock
inc
jl
mov
or
sbb
xchg
xlat
sbb
pop
add
add
js
mov
hlt
ja
pop
test
sti
jecxz
repnz
xlat
popa
cmpsl
pop
out
push
lods
cmc
push
xchg
sbb
xor
insl
inc
and
or
pop
outsb
mov
das
inc
add
pop
fcompl
imul
cmp
jae
xor
pushf
sub
xorl
fs
xor
ds
mov
xchg
xchg
adc
clc
lds
mov
ficoml
subb
xchg
inc
fcoml
fstl
adc
mov
and
shr
xor
cld
je
sub
jae
xchg
imul
test
shlb
stc
stos
push
and
mov
mov
inc
mov
es
xchg
ljmp
std
js
fs
xor
inc
jns
add
add
adcb
out
out
sbb
adc
cmp
or
cmp
xchg
dec
adcb
lods
jge
cltd
mov
int
lock
sbb
pop
mov
sub
arpl
or
scas
adc
dec
add
jl
stos
dec
mov
inc
sub
add
filds
cs
mov
out
lea
push
repnz
sbb
mov
adc
mov
ret
sbb
mov
test
test
lods
mov
das
add
jb
bound
imul
add
out
std
lret
ficompl
jmp
xchg
testl
mov
dec
sti
std
sub
aas
xchg
ss
inc
imul
mov
mov
xchg
push
faddl
call
sbb
movsl
sub
imul
test
ret
int
adc
xchg
jno
adcb
gs
push
sbb
test
inc
int3
mov
add
inc
pop
xorl
aam
popa
jp
sub
jl
daa
fwait
sbb
mov
scas
push
xor
adc
mov
dec
outsb
jbe
lock
cltd
icebp
mov
sbb
pop
scas
addl
mov
aad
adc
inc
mov
rcrl
dec
lock
jne
push
scas
fiaddl
mov
sti
fmul
pop
push
jl
mov
nop
lcall
mov
cs
sub
or
push
in
mov
bound
add
or
pop
cli
and
sub
sahf
dec
pop
sub
and
enter
popf
repz
ret
push
cmpsl
out
int
call
scas
mov
and
aaa
or
in
lods
inc
out
stc
xchg
aas
push
sub
push
jp
shrl
push
lods
jae
sub
std
neg
loopne
hlt
pop
or
mov
rol
addr16
repnz
mov
lret
and
jnp
add
sub
jl
out
dec
mov
idivl
xchg
lds
std
mov
inc
xchg
push
sub
das
adc
movsb
cmp
outsb
loopne
mov
jle
add
test
fnstsw
dec
cmp
ljmp
and
xchg
sub
push
xor
sbb
or
pop
stc
add
lret
call
clc
out
xchg
pop
stc
fbstp
mov
int
push
xor
or
stos
xor
fnstcw
int3
cmovge
inc
push
sub
lods
inc
fiadds
mov
cmc
arpl
imul
rcr
xchg
shlb
fldt
mov
icebp
inc
push
xor
mov
pusha
stc
repnz
icebp
cmp
add
aas
leave
sbb
xor
cmp
pop
xlat
mov
adc
aam
or
push
xchg
test
pop
xor
stc
in
popf
mov
push
xor
inc
adc
gs
inc
test
mov
call
pusha
xchg
call
in
ret
or
pop
inc
sbb
insb
adc
or
aas
inc
cli
icebp
aad
jg
fidivrl
into
jbe
repz
loope
push
fldt
dec
pop
jbe
xchg
dec
imul
mov
dec
dec
dec
lods
push
cmpsl
loop
and
mov
rolb
daa
sub
idivb
imul
cmp
movd
icebp
cmp
mov
and
sbb
arpl
insl
jns
push
dec
push
inc
out
addr16
dec
fucomp
enter
mov
and
pop
push
data16
xchg
pop
out
shrb
leave
jge
push
or
lods
in
jg
jg
lret
dec
inc
cmp
sub
popa
push
stos
dec
ja
xor
mov
in
js
popa
dec
xor
jne
push
adc
adc
lods
mov
dec
push
sub
push
fdiv
xlat
stc
adc
sbb
cmp
adc
lock
fistpl
aad
aas
std
lods
frstor
lods
cmp
jmp
xlat
or
leave
and
popa
inc
jnp
cs
and
leave
cmpsb
daa
jne
sbb
mov
push
push
jb
adc
out
jb
sbbb
jo
sbb
push
movsl
mov
xchg
mov
lret
jb
jne,pn
imul
inc
pop
shrl
mov
data16
lds
fnsave
in
jge
xchg
imul
sub
fiaddl
push
pop
push
cmp
addb
fildll
jge,pt
testl
inc
stc
xchg
pop
lds
jns
cwtl
push
adc
test
xchg
inc
adc
int
mov
rclb
dec
fiadds
in
pop
push
adcb
push
inc
scas
jle
pop
nop
nop
and
std
fisubs
xor
adc
lret
out
fistpll
dec
cmpsb
fcmovb
outsb
adc
addb
or
xor
mov
scas
sbbb
aas
cld
icebp
adc
jmp
lret
inc
popf
cmpsl
aaa
dec
and
scas
out
repnz
jecxz
loopne
or
sub
imul
push
pop
imul
cmpsb
mov
clc
stos
push
jge
ss
test
adc
ljmp
lcall
cmp
notb
repz
flds
push
mov
sub
add
xor
mov
xchg
mov
test
jo
lock
pop
cld
dec
fiadds
jecxz
cmpsb
icebp
push
mov
jmp
push
push
xchg
sahf
testb
xor
mov
xchg
subl
testb
out
bound
lret
rcr
adc
jl
xchg
imul
sub
jno
adc
loope
mov
pop
mov
jecxz
lahf
adc
fldenv
sbb
out
ret
adc
dec
in
jmp
pop
lret
repnz
jp
popl
push
cmp
arpl
int
cli
jle
and
fists
pop
gs
arpl
push
sahf
add
loope
imul
mov
sub
outsl
jns
cs
lock
push
in
mov
inc
push
rcll
jl
or
pop
sub
daa
xlat
jmp
addl
ljmp
mov
or
mov
jle
inc
inc
ljmp
cmpsl
int3
test
push
repz
loopne
bound
call
fisubl
mull
test
xchg
push
andb
test
sti
adc
xchg
test
inc
fdiv
mov
jp
arpl
insb
add
add
cmc
inc
push
pushf
push
inc
cwtl
mov
or
shll
and
cmc
fidivrl
dec
loop
mov
mov
and
and
push
jmp
mov
and
push
loope
ds
inc
lahf
jle
orb
call
int
push
jbe
sbb
mov
push
ljmp
xchg
mov
test
xlat
bound
ja
xchg
dec
dec
sub
mov
aaa
cltd
outsb
cmpsb
pop
xlat
lret
xor
cmpsl
hlt
nopl
jno
loopne
icebp
aas
aas
hlt
push
jno
or
aam
inc
push
dec
hlt
adc
pusha
mov
int3
test
push
and
lahf
mov
push
adc
cmp
push
cld
lret
fldenv
cli
sti
in
call
sarl
pop
cwtl
lds
xor
add
orb
std
push
mov
jmp
nop
sbb
and
arpl
adc
es
scas
jmp
add
inc
jne
push
cmpsb
test
aaa
outsb
sub
mov
clc
jns
pop
icebp
mov
loop
inc
mov
pop
push
leave
jno
push
xor
loop
sbb
jg
xchg
jecxz
inc
ret
cmp
mov
lret
aad
jb
arpl
out
xchg
xchg
xchg
lret
notb
xchg
orb
inc
dec
xchg
xchg
push
adc
pop
adc
mov
pop
jnp
push
mov
cmp
push
push
in
jns
xchg
stos
jl
pop
out
add
fiaddl
jle
dec
mov
push
insb
out
jnp
loopne
fst
lret
mov
clc
in
cmp
movsl
shll
cmp
xor
push
pop
shrb
in
test
iret
out
mov
outsb
dec
inc
pop
mov
fldt
cltd
mov
loop
pop
test
dec
or
inc
iret
cld
and
add
test
sub
and
int3
mov
into
push
ds
cmp
pop
cltd
mov
jecxz
cld
call
sub
push
call
pop
hlt
stos
int
xor
scas
cmp
push
enter
leave
xor
fcoms
xchg
push
mov
fsubp
mov
or
in
rcrl
mov
pusha
faddl
test
cmovs
js
push
jle
fcompl
xchg
repnz
xlat
repnz
mov
int
mov
push
pop
mov
rorb
ss
xchg
mov
push
ss
and
lods
and
ret
ret
pushf
mov
xor
cli
xor
es
adc
and
jb
fcmovu
dec
sub
loop
dec
pop
xchg
xchg
in
push
push
hlt
dec
jo
jb
cmc
cmp
dec
cltd
aas
jp
arpl
lcall
mov
push
mov
mov
mov
jl
pop
ret
mov
dec
andl
in
push
push
call
aas
popf
xchg
psllw
xchg
lahf
pop
xlat
fistpll
push
lret
into
mov
js
shr
and
int
mov
ret
fbld
pop
sarl
dec
add
leave
test
inc
or
clc
and
pusha
fstpt
mov
dec
mov
lcall
arpl
cld
push
mov
repz
aad
repnz
aad
in
add
mulb
gs
aam
xchg
dec
bound
sbb
out
mov
cmp
mov
rorb
adc
into
sub
inc
loope
mov
mov
int3
fiadds
icebp
aas
sub
pop
adc
and
mov
std
pushf
fsub
cmp
xchg
repnz
jmp
imul
cmpsl
ffree
xchg
lcall
rolb
arpl
movsb
cmc
fistpl
sbb
fnstcw
stc
jecxz
shl
test
addr16
pushf
test
lret
je
pushl
mov
std
jecxz
aad
data16
push
pop
ret
rcrb
fisubrl
adc
leave
in
cmpsl
mov
dec
ss
xchg
sbb
cmp
test
dec
cmpl
rcrl
jg
enter
lret
xchg
int3
mov
pop
push
sub
fwait
mov
ja
jg
xchg
add
ds
loop
mov
push
or
roll
or
jecxz
cmpsl
fcoml
xchg
dec
cltd
and
dec
mov
inc
xor
cmpsl
dec
fimuls
enter
pop
cli
mov
and
xor
movsb
and
sbb
jg,pn
and
mov
ret
out
xor
pop
insb
mov
xchg
and
cmpsb
jno
pop
sbb
or
out
inc
push
push
push
lods
cwtl
sbb
lret
add
mov
jg
lds
sub
adc
mov
inc
movsl
lret
xlat
mov
mov
xor
dec
jb
stos
out
popa
xor
xor
jno
and
pop
rorl
xchg
mov
lods
loope
in
sub
sti
hlt
jmp
out
popf
cmc
and
mov
loopne
dec
mov
lods
sbb
andl
jmp
subb
inc
mov
jge
jmp
shr
pop
jg
pop
inc
sbb
leave
or
rep
repz
and
xchg
repz
ds
dec
push
jle
push
mov
jp
push
adcb
inc
mov
dec
adc
inc
incb
stc
ds
push
pop
xor
mov
dec
mov
and
aad
mov
enter
pop
jg
scas
hlt
or
xor
cmc
std
ret
dec
dec
adc
scas
int3
pop
test
inc
xchg
push
pop
cli
es
fsubl
and
cmp
push
push
popf
scas
push
sbb
add
ljmp
imul
scas
inc
insb
adc
aam
xor
shlb
cmpsb
pop
repz
inc
addr16
insb
mov
mov
inc
push
jnp
mov
cltd
mov
mov
or
jle
ret
sub
jl
lret
cli
fwait
xchg
ss
arpl
mov
jge
push
js
rorl
into
lahf
nop
stos
xchg
adc
cs
push
mov
addl
in
cmpsl
aam
clc
daa
inc
inc
pop
sub
pop
lods
xor
mov
jp
iret
pop
inc
rolb
xchg
into
lods
xchg
add
test
jmp
push
push
xchg
jg
cmp
add
or
inc
xchg
andb
vmwrite
push
mov
orl
stos
mov
es
sub
pushf
clc
stos
push
mov
stos
mov
sub
addr16
sbb
adc
lods
and
stos
fidivrs
shlb
loope
inc
xor
fwait
repnz
fs
das
pop
leave
push
mov
xchg
nop
sub
pop
fimuls
insb
jo
faddl
inc
repnz
pop
cli
add
mov
push
xor
sbb
jmp
lds
ret
mov
xor
cmp
xchg
sub
rorb
sub
xor
aaa
mov
mov
and
mov
in
notb
in
or
fs
dec
add
test
loopne
lret
in
popa
test
and
fbld
lcall
xchg
sub
pop
fisubl
in
andl
out
xchg
mov
ljmp
or
sbb
jns
or
mov
inc
dec
pop
push
cs
adc
int3
mov
sbb
aad
inc
xor
inc
jmp
repnz
push
jne
int
les
sbb
ret
mov
cltd
push
lock
sub
movsl
clc
push
aas
add
std
repnz
mov
call
repz
shlb
sbb
xor
call
fwait
cmp
mov
filds
cmpsb
xor
push
inc
cmpb
outsl
dec
dec
xchg
sub
call
cmp
in
jnp
dec
adc
fmull
jl
and
xlat
jle
lret
loop
repz
mov
mov
jecxz
add
push
adc
out
jg
loope
cli
cmp
fadds
test
jbe
mov
dec
rclb
jg
xor
sub
and
xchg
inc
cmpb
inc
add
mov
loope
mov
fbstp
inc
out
mov
lahf
mov
inc
and
cmp
push
and
mov
push
call
ret
adc
add
movsb
add
xor
push
loope
push
std
cmpsb
aam
xor
mov
xlat
dec
add
movsl
sbb
sbb
or
mov
xorl
daa
jge
and
inc
xor
pop
dec
jecxz
push
cmp
popf
test
pop
mov
xor
jne
mov
xchg
int
sub
daa
ret
push
push
test
sti
pop
mov
lahf
sub
ret
add
jns
clc
mov
fstpt
adc
pushf
gs
adc
outsb
repnz
lahf
in
or
dec
daa
lcall
add
dec
push
je
sbb
in
out
popa
or
jecxz
push
mov
sbb
mov
lcall
fs
inc
mov
loopne
or
rcll
and
cmp
int
iret
cmp
xor
mov
fcmovnb
roll
pop
mov
mov
aad
orl
inc
neg
push
insl
sub
jl
mov
es
sbb
stos
push
loopne
jno
mov
adc
add
xchg
fistpl
sub
ret
xchg
lds
shlb
lods
sbb
icebp
jae
mov
xchg
subl
fs
push
popa
push
push
push
inc
push
and
sbb
sbb
add
testl
out
in
movsb
gs
lods
stos
pop
pushf
outsb
push
repz
cld
mov
mov
cmp
hlt
mov
pop
xchg
push
jo
mov
inc
add
xor
or
fidivs
jbe
mov
test
js
out
add
andl
fwait
out
inc
and
gs
cmp
mov
pop
add
daa
nop
shrb
loope
dec
ja
push
call
sbb
or
movsb
dec
in
xchg
push
in
mov
sub
mov
jmp
lret
iret
mov
pop
sub
mov
ja
negb
hlt
addr16
mov
jbe
movsldup
mov
cld
or
lret
shrl
idivb
add
mov
stos
or
or
sbb
or
cmp
jae
inc
sbb
pop
or
sub
adc
je
cmp
mov
pop
push
mov
out
bound
test
adc
mov
mov
ja
mov
jno
and
cmp
ret
inc
in
in
push
xlat
test
cli
dec
add
andb
xchg
or
mov
shl
sub
jp
dec
jmp
mov
lock
enter
lea
fidivrs
xor
push
and
mov
shrb
xchg
call
test
sbb
and
or
and
addr16
packuswb
clc
mov
sub
shlb
adc
cmp
jmp
cmpsb
sbb
ret
sub
jno
jbe
xlat
imul
jle
mov
gs
repnz
pop
adc
fmuls
lods
or
xor
inc
loop
pop
mov
pop
dec
mov
clc
mov
sbb
xchg
pop
lahf
pusha
sbb
sub
int
jge
ljmp
xor
cmp
push
add
inc
and
adcl
mov
mov
jae
or
rcrb
jno
loop
or
push
mov
pop
gs
sbb
call
push
pop
nop
aam
fstpl
adc
push
push
and
aad
pop
inc
sub
push
mov
mov
and
addr16
inc
cmp
pusha
stc
dec
and
and
sbb
loope
jl
adc
ret
cs
xchg
fisubrl
jne
dec
add
or
lods
mov
stc
pop
lahf
scas
sbb
ss
cmp
stc
sbb
in
inc
in
mov
mov
cmc
pop
cmp
insl
pushf
jno
fisubs
mov
push
out
shll
jb
xchg
ret
fdivrs
fnstenv
push
inc
sbb
pusha
or
int3
cs
jo
adc
add
lret
test
clc
lock
jle
inc
pop
jmp
sbb
cmp
or
aad
xchg
jb
ja
insl
push
or
and
push
mov
xchg
adc
sahf
pop
popa
xchg
les
mov
arpl
sub
js
stc
push
fbstp
or
call
or
incb
das
push
mov
dec
lahf
xchg
aam
and
pushf
popa
gs
jle
xchg
push
lea
cmp
sbb
subb
mov
push
cmpsl
push
in
outsl
mov
cmpsl
pop
cmp
mov
push
xchg
imul
cmp
sti
pop
and
cmp
movsb
hlt
sbb
or
fidivs
stos
xchg
lock
loopne
or
fwait
jne
add
or
inc
jmp
int3
or
imul
mov
cmp
mov
and
fdivl
mov
aas
test
mov
xchg
adc
mov
mov
add
add
adc
dec
lods
aas
xor
or
ljmp
jmp
std
mov
xlat
dec
inc
ds
cmp
repz
cmp
dec
hlt
push
mov
dec
cmpsl
cld
or
xlat
std
xor
cli
jnp
jg
sbb
mov
mov
mov
pop
imul
popa
mov
mov
pop
mov
outsb
leave
pop
and
aaa
outsl
repnz
stos
inc
sub
sub
in
and
daa
adc
add
in
repz
pop
cltd
fimull
push
daa
adc
sub
inc
out
jns
sahf
jnp
pop
fisubrs
clc
fwait
xor
push
les
xor
push
fistpll
sbb
jp
dec
stos
rolb
lret
outsl
sub
testl
dec
repnz
jne
inc
dec
push
lcall
inc
fiadds
pop
or
cltd
outsl
cmp
add
lret
loopne
jae
sarb
cmp
faddp
insb
cmpsb
test
sub
cli
gs
mov
int
add
sub
mov
and
jg
rcrl
cmp
mov
into
daa
xchg
adc
outsl
mov
into
jns
pop
daa
mov
lcall
cmp
in
shr
subb
insb
test
scas
decl
in
sub
fwait
pop
or
inc
sbb
mov
push
and
and
jbe
repz
push
ret
scas
lea
sbb
push
int3
daa
jno
mov
aaa
mov
cmpsl
imul
jb
jl
cli
cwtl
testb
xchg
pop
jns
pop
call
pop
mov
push
loop
int3
dec
std
mov
pop
insb
pop
arpl
es
xorb
cmp
jne
adc
push
inc
hlt
sub
outsb
pop
adc
fmull
je
sbb
sahf
push
sahf
mov
dec
loope
mov
push
fdiv
and
push
push
jmp
fs
jns
inc
dec
cld
imul
push
arpl
out
cmpsb
je
std
jns
xor
add
dec
push
jne
test
jo
movsl
sbb
dec
fcompl
xchg
push
inc
add
push
inc
aad
addr16
bound
xor
inc
test
mov
inc
sarl
mov
and
daa
adc
fimull
mov
clc
and
pop
xor
lods
or
pop
adc
mov
jne
testb
in
fcomps
push
or
aad
test
in
in
inc
repz
arpl
xor
pushaw
push
cwtl
or
pop
mov
insl
pop
js
pop
inc
xchg
or
jecxz
jecxz
lret
stos
adc
pushf
or
std
mov
sub
cmp
jge
ret
jo
loop
sti
mov
xor
inc
loopne
js
mov
movsl
cld
lock
xlat
xchg
sti
pop
inc
call
pop
and
jmp
jae
push
popf
testb
leave
or
mov
jp
and
mov
lock
pop
pushf
xor
hlt
dec
loop
out
xchg
inc
sbb
add
pushf
cmp
add
jnp
and
sahf
inc
out
popf
movsl
out
sarl
push
imul
pop
mov
movl
subl
imul
add
ljmp
or
mov
xor
test
daa
inc
cmp
jne
and
sbb
xor
jmp
xchg
inc
xchg
imull
sub
in
push
inc
mov
outsl
pop
scas
add
mov
movsb
sub
lods
pop
mov
push
repnz
dec
inc
fsub
jnp
push
addr16
xlat
repnz
sbb
fcompl
pop
cmpsb
xchg
repnz
lcall
ss
xchg
jl
xchg
call
dec
in
sbbl
movsb
leavew
inc
sbb
sahf
pusha
jl
mov
leave
xchg
and
jg
fmull
adcb
bound
addr16
jns
xor
dec
flds
adc
jb
out
add
sbb
push
and
jns
or
stos
loope
inc
sub
mov
cmp
and
fcmovnb
push
daa
outsl
dec
leave
push
mov
mov
mov
addr16
repnz
shlb
dec
and
or
lahf
daa
out
in
cmpsb
shll
inc
cmp
adc
out
aad
arpl
repz
sahf
in
insb
outsl
jne
push
roll
imul
std
insl
xchg
or
pop
adc
jp
fmul
adc
cwtl
shrl
cmp
pop
push
push
inc
jge
outsl
dec
sbb
xchg
popa
lods
sbb
bswap
stc
aas
rorb
inc
push
pop
cwtl
mov
jb
mov
push
adc
add
int3
or
sub
test
push
push
fwait
rcrb
mov
push
aad
inc
mov
and
jg
mov
lock
sbb
cmp
cmpsl
jmp
or
int3
aad
movsl
sub
push
cli
or
jge
and
push
lock
jne
add
imul
rclb
and
in
icebp
dec
sbb
rol
scas
in
movsb
pop
outsb
add
or
xchg
add
sub
loopne
iret
int
xchg
stos
sbb
psllw
into
aad
jno
ficoml
mov
add
sbb
and
pop
test
lret
data16
mov
or
mov
jno
or
inc
mov
sarb
cli
dec
xchg
and
adc
mov
xchg
adc
cmpsb
jmp
cmp
pop
adcl
sbb
outsl
je
mov
cltd
int3
push
das
xor
inc
test
add
fldcw
xchg
mov
add
mov
sarb
mov
jle
out
adc
dec
ret
out
mov
aam
pop
mov
int
repnz
loopne
dec
fldenv
mov
leave
call
xor
mov
cld
stos
xchg
mov
pop
movsl
jmp
jbe
xchg
aad
scas
cmp
popf
or
adc
lock
popa
dec
out
mov
inc
movsb
popa
andl
aaa
mov
dec
cmp
repnz
aad
cltd
outsb
or
fcoms
call
and
fnop
mov
sar
push
and
cmpb
adc
test
mov
cmpl
jl
jg
lahf
push
dec
sub
in
push
into
inc
test
push
fsts
pop
js
add
jmp
fistps
xchg
pop
push
in
repnz
adc
mov
sbb
fsubrl
inc
jns
andb
pop
loopne
ja
dec
mov
ret
adc
cli
pusha
iret
and
dec
mov
cmpsb
mov
mov
or
pop
jl
cmp
inc
lods
or
cwtl
push
test
fwait
mov
gs
sbb
aad
push
jb
jb
movsl
add
cli
or
xchg
mov
std
inc
cmp
inc
lret
jns
ss
je
pop
hlt
mov
push
jcxz
in
add
jp
mov
xchg
ret
sub
adc
aaa
xchg
jg
repz
push
inc
lcall
jmp
test
nop
int
out
adc
mov
test
fldenv
mov
cltd
lcall
int
pop
iret
sbb
lods
pushf
xchg
jecxz
xchg
mov
shrb
jp
ss
jmp
shl
scas
mov
pop
hlt
loopne
and
call
mov
xor
test
pop
js
cli
dec
add
insl
mov
outsl
fs
insl
push
pop
cmpsb
mov
inc
sbb
fwait
mov
mov
repnz
mov
push
dec
add
orb
lds
dec
sub
sub
and
push
orl
and
sahf
jb
pushf
sub
jnp
test
cltd
mov
and
mov
mov
cmp
addl
mov
inc
dec
pop
cmp
inc
dec
jp
imul
xchg
jo
repz
nop
filds
inc
adc
cmp
and
push
or
fmulp
xchg
icebp
cmp
insl
jo
dec
pop
insb
or
sbb
enter
test
cmpsb
and
mov
insl
xor
lahf
cmp
cwtl
adc
test
cmpsl
or
pop
push
ret
adc
or
mov
ja
std
add
adc
loop
push
cld
imul
cmp
cld
sbb
push
das
jp
pop
sahf
lret
push
xchg
arpl
insb
les
stos
dec
aas
test
add
fstp
cmc
test
popl
inc
ret
pop
lcall
in
or
cmpsl
pop
in
xor
adc
cmp
pop
scas
out
scas
sbb
lea
test
mov
bound
icebp
cltd
lahf
in
xchg
push
mov
mov
rcl
iret
cmpsb
adc
fstl
rorb
push
loope
sub
xor
push
shll
mov
mov
cs
sbb
clc
sbb
sub
and
jno
add
pop
xchg
imul
cmp
movsl
fiadds
fdivr
addr16
fdivl
inc
add
dec
insb
jmp
add
xor
xchg
mov
xchg
jb
fwait
xchg
inc
nop
testb
dec
mov
adc
and
inc
imul
xchg
cmp
rcll
and
sbb
add
call
clc
and
fcomp
lahf
cs
inc
sub
dec
sarl
scas
and
outsb
jnp
andb
jmp
push
and
add
insb
jbe
jg
xor
and
mov
xchg
or
push
andl
jmp
xchg
sub
sarl
in
xchg
sbb
test
enter
cwtl
outsl
cmpb
mov
pop
nop
cwtl
pop
add
ret
enter
inc
lods
pop
pop
pop
mov
pop
xor
mov
push
mov
mov
mov
jno
adc
roll
inc
shl
lods
push
sbb
sti
lods
dec
xor
sbb
pop
cmp
leave
popa
pop
sbbb
xchg
jl
pop
cmp
jno
insb
clc
and
mov
lock
adc
pop
adc
and
ret
fucom
bnd
and
mov
push
jmp
push
mov
push
jnp
fdivrs
sbb
sub
fisubl
nop
les
lea
test
into
cli
inc
les
mov
mov
dec
push
pop
mov
lahf
mov
imul
lock
xor
lock
ljmp
cli
orb
mov
lods
fnstcw
inc
add
mov
mov
loopne
test
xorl
cmp
pushf
add
xor
test
lcall
dec
add
test
ja
cmp
loope
mov
sbb
ret
sahf
out
ret
mov
push
xchg
aad
pop
mov
xlat
add
rorb
jns
push
pusha
or
and
outsb
and
dec
jbe
xor
dec
sbb
mov
or
mov
sbb
xchg
jl
js
cmpsl
int3
jg
test
pusha
mov
add
andl
or
scas
sbb
push
xor
dec
stos
xlat
data16
cmp
add
mov
and
test
mov
data16
or
lcall
movsl
cs
mov
int3
cmp
mov
pop
mul
ss
xchg
mov
lds
aad
test
xchg
mov
stos
out
mov
mov
sbb
and
pushl
inc
add
jmp
movsb
and
sti
sbb
mov
pushf
imul
or
mov
cmp
adcb
cmp
sbb
mov
aad
push
fwait
add
rcll
cli
pop
mov
xchg
sbb
push
pop
jbe
out
xor
test
out
and
or
mov
lcall
mov
aas
std
out
cmc
shrl
les
mov
mov
mov
sub
negb
lea
mov
cmp
iret
fs
scas
mov
jne
xor
adc
push
cld
cmpsb
push
int3
inc
stos
loopne
inc
add
pop
je
dec
add
iret
lea
mov
cmp
pop
mov
dec
xor
mov
jmp
mov
mov
push
insl
inc
out
ss
sarb
jecxz
dec
outsb
push
cmpsb
mov
dec
fmuls
lcall
cli
mov
pop
stos
sbb
push
or
push
xchg
mov
dec
stos
popa
divl
pop
push
xchg
int
dec
loopne
dec
adcb
xchg
aas
aam
nop
leave
ret
test
cmp
out
push
andl
pop
outsb
or
inc
pop
sbbb
mov
fsubl
mov
pop
push
pusha
jle
negb
or
jae
ss
mov
mov
cmp
stc
mov
xchg
sti
lret
int
mov
dec
inc
neg
pop
sarb
int3
xor
stc
pop
dec
dec
loopne
out
inc
pop
iret
dec
sbb
inc
loopne
aad
int
repz
jo
sbb
rcrb
xrelease
imul
repz
ss
outsl
push
data16
lds
ret
mov
sub
dec
mov
repnz
cmp
outsl
or
add
test
dec
xchg
inc
ljmp
out
jmp
mov
adc
in
testl
mov
xchg
int
fdiv
inc
xchg
cmp
xchg
dec
mov
enter
xchg
add
sti
cmp
xchg
jns
adc
sbb
push
imul
jp
add
out
xchg
lds
mov
test
and
scas
in
pop
xorl
xchg
fsubrs
fs
xchg
push
inc
pop
fimuls
je
dec
mov
inc
ja
arpl
sarl
ret
or
push
sbb
pop
mov
lret
out
inc
das
loopne
mov
divl
pop
in
push
shrl
ds
or
in
adc
or
mov
jne
or
mov
gs
mov
popf
data16
inc
mov
aad
insl
jl
mov
xor
pusha
pop
cs
mov
xchg
std
cmp
xor
aas
pusha
adc
mov
test
jbe
push
sbb
xchg
xchg
mov
push
sbb
fcmovu
sbb
and
bound
dec
notb
inc
mov
loop
or
push
fidivrl
pop
mov
add
inc
jae
aam
push
mov
inc
adc
xor
pop
cmp
cmp
push
mov
scas
push
rclb
push
inc
stos
lds
fistps
xor
movsl
jp
pop
add
jl
notl
test
add
pop
or
dec
inc
lret
mov
jo
jg
dec
icebp
ret
add
jo
mov
ret
fcomp
sub
adc
fildl
loopne
stos
push
push
xchg
jns
jp
mov
inc
mov
xchg
and
sub
lret
inc
loopne
dec
dec
cmpsb
imul
sub
popa
imul
rcrl
pop
fists
mov
pop
push
add
push
rorl
ds
xchg
mov
cmp
lret
mov
or
dec
and
mov
mov
push
mov
ret
aaa
repz
into
insl
loopne
arpl
pop
cmp
in
test
in
add
aaa
test
cmpsl
sbb
jns
shlb
fsts
jg
adc
pop
popf
push
rcrb
sbb
adc
mov
push
sarl
andb
jp
enter
fwait
cmp
mov
jl
js
mov
fidivl
mov
movsb
push
cmp
lret
jg
mov
hlt
ret
adc
push
push
insb
testl
or
mov
jmp
hlt
and
cmpsb
mov
push
in
fists
sbb
outsl
adc
push
ljmp
dec
push
popf
fstl
pop
and
or
bound
mov
std
jl
and
cmp
xchg
fcoml
in
ret
out
imul
js
daa
xchg
shl
and
in
test
and
cmp
sbb
sbb
pop
xchg
fadds
pop
cmpsb
push
test
adc
out
ficomps
mov
pop
push
js
bound
xchg
cltd
sbb
add
mov
and
cmp
rcl
notl
ja
inc
jl,pt
xchg
jg
dec
xchg
push
imul
lret
icebp
push
lret
adc
mov
in
lds
or
sbb
cmp
inc
jnp
pop
das
mov
sbb
and
inc
lcall
stc
xchg
and
cmp
push
fidivrs
outsl
popf
push
sbb
cmovs
or
in
or
mov
jns
jmp
xchg
xorl
jmp
mov
mov
test
and
enter
jl
in
xchg
jo
mov
push
add
inc
imul
neg
inc
adc
mov
xor
and
jg
in
jno
mov
and
xchg
cmp
sbb
out
mov
jmp
adc
mov
mov
cmp
cmp
ror
or
adc
stos
pop
arpl
test
call
call
std
push
push
or
pop
jle
aas
jle
test
aas
sbb
xor
mov
aad
pop
loope
add
call
push
mov
xchg
sub
out
mov
testb
xchg
jmp
mov
arpl
mov
iret
adc
rorb
adc
adc
cmp
mov
out
and
add
xchg
fs
sbb
jge
and
xor
jnp
cmpsl
cmpsl
test
mov
out
or
mov
out
loopne
jo
sahf
dec
cmp
cmc
clc
push
scas
cmpsl
jo
shrb
lahf
lcall
jb
mov
mov
aas
es
loope
or
cmp
std
fstpt
xchg
scas
mov
mov
andl
fld1
rcl
add
repz
xchg
mov
jecxz
xlat
loopne
pop
or
das
pop
xchg
lret
adc
inc
test
sub
pop
xor
add
sub
mov
jbe
push
mov
sbb
xchg
xchg
sub
cmp
xchg
rolb
cmpsl
scas
jmp
idivb
ret
dec
sbb
into
add
std
xchg
inc
push
mov
lret
sarb
ljmp
outsl
inc
fidivs
mov
pushf
pop
mov
pop
xor
mov
pop
stos
cmp
iret
in
arpl
xor
xchg
daa
fistps
outsl
lahf
and
rol
negb
jbe
dec
xor
ret
push
inc
jns
fmul
mov
out
fld
repz
mov
inc
jmp
inc
and
cmp
jp
mov
inc
push
cmp
mov
loopne
sub
repz
and
sbb
leave
inc
mov
hlt
insl
sahf
stos
imul
mov
sub
push
jb
addr16
rcl
hlt
mov
bnd
pop
lock
in
ds
imul
push
or
push
xor
out
xor
xchg
sub
fsubl
jns
add
jle
jns
imul
clc
mov
repnz
cli
inc
cmp
inc
push
and
dec
push
inc
pushf
cmp
hlt
jp
and
xor
fdivrl
jne
jl
add
inc
xor
in
add
cmp
out
cwtl
pop
mov
mov
mov
cld
loope
xor
mov
or
inc
ds
inc
jecxz
push
jle
fsub
aas
inc
sbb
pop
pushf
je
insl
jae
into
adc
mov
xchg
test
jmp
mov
inc
jle
xor
sarb
sub
jne
pop
push
jp
clc
add
gs
push
outsb
aam
subl
jae
leave
adc
add
xor
jg
push
push
and
arpl
xchg
pop
mov
js
jnp
dec
sbb
push
push
mov
dec
inc
adc
mov
lods
mov
pushf
dec
imull
cli
mov
pop
je
cmp
repnz
mov
inc
mov
daa
xlat
fsubrs
repnz
std
adc
mov
dec
sbb
add
sub
lret
mov
sub
push
into
daa
mov
sbb
cmc
sbb
sbbb
gs
ja
out
push
imul
xchg
sub
aam
in
call
clc
sbb
mov
imul
and
loopne,pn
mov
lds
or
xchg
int
cli
pop
jle
cmc
cmp
stos
outsl
subb
inc
dec
push
lock
xchg
notb
int3
jp
jp
repnz
ljmp
mulb
aad
sub
jne
mov
sbb
lock
xor
adc
dec
mov
mov
push
push
add
push
and
pushf
xor
sti
fmul
mov
dec
cwtl
pcmpgtb
cmp
fidivl
sarl
int
fsubl
cmc
lret
mov
dec
xor
and
or
mov
add
call
lahf
data16
dec
stos
enter
pop
adc
jnp
pushf
and
movsb
cmp
cmp
add
pusha
fsub
shll
hlt
hlt
lcall
ja
mov
xchg
lods
fisttpl
loop
outsl
daa
mov
xor
sub
or
xchg
jmp
testb
int3
out
push
insl
sarl
cmc
cmpsb
sub
rol
jnp
aaa
cld
push
fwait
call
adc
adcb
or
repz
leave
inc
mov
mov
notl
fsts
shll
or
repz
ret
lret
push
pop
xor
sbb
push
pop
ficomps
inc
push
divb
out
imul
dec
or
add
icebp
lret
imul
mov
outsb
jge
mov
paddusw
bound
rcr
mov
dec
ficomps
or
lret
iret
push
mov
mov
fndisi(8087
nop
xorl
stos
sti
mov
test
lcall
xlat
ret
sub
cmp
js
sahf
xchg
movsl
push
push
adc
xchg
xchg
mov
jns
xchg
jno
push
rolb
popf
mov
rcll
inc
sub
roll
rolb
xchg
dec
push
xchg
jno
xor
mov
jnp
test
sti
sti
xchg
in
cmp
xor
add
lcall
add
dec
cmp
lret
mov
test
cltd
mov
jg
das
lods
div
mov
sarl
or
rcll
mov
inc
sbb
dec
and
std
or
mov
divb
in
test
sub
in
mov
xchg
push
cmpb
dec
sub
jne
stos
int3
les
loope
nop
shl
cwtl
sbb
in
je
faddp
or
inc
adc
out
sbb
loope
adc
je
and
jbe
decb
xor
jmp
pusha
mov
add
adc
or
sbb
or
sub
mov
adc
and
test
ret
sbb
adc
rolb
je
mov
mov
cmp
inc
js
push
xor
out
jmp
push
sbbb
xor
xchg
test
dec
add
cltd
out
jecxz
pop
and
js
out
pop
dec
aas
outsb
add
rolb
push
cmp
stos
subb
movsb
xor
pusha
xorb
sbb
clc
xchg
fcmovbe
insb
inc
into
and
or
lret
out
sbbl
dec
dec
and
sahf
lods
jmp
pop
repnz
jnp
sub
sbb
mov
loopne
jge
shrb
push
loopne
push
pop
aas
mov
pop
and
lahf
adc
out
in
in
mov
test
xchg
and
jb
sarl
mov
mov
cmp
push
icebp
or
add
fidivrs
mov
outsb
hlt
popa
and
stc
fstl
bound
inc
loopne
out
xchg
push
mov
shl
lea
outsl
add
push
mov
mov
call
iret
outsb
mov
push
pop
push
pop
mov
pop
jge
icebp
dec
adc
jecxz
ljmp
sti
aas
leave
fs
testb
adc
jg
call
adc
les
inc
lock
in
roll
in
cmp
adc
inc
pop
iret
push
les
add
pop
imul
stos
int
cmpsb
dec
ds
pop
shlb
add
aaa
pop
or
enter
test
jbe
test
icebp
jo
adcb
mov
rcl
xor
mov
lahf
testl
out
mov
dec
sbb
mov
jmp
dec
xchg
mov
pop
cli
cmp
lret
lret
sbb
mov
jno
xchg
add
mov
iret
add
pop
test
nop
adc
cmp
loope
ljmp
mov
jne
push
hlt
dec
sahf
push
rorb
or
iret
pop
scas
mov
mov
hlt
or
push
pop
daa
and
sbb
mov
mov
in
movsb
xor
dec
add
lods
cmp
mov
pop
push
or
pop
jmp
add
aad
ret
mov
ret
dec
cmp
das
lds
insb
add
outsl
aad
pop
xlat
repz
mov
push
into
sbb
push
lahf
paddusb
call
pop
divl
mov
or
mov
clc
lods
inc
stc
push
test
cwtl
jecxz
dec
scas
inc
mov
fsub
xor
sub
into
je
jge
pop
mov
call
sbb
dec
cmpsl
mov
mov
jno
imull
add
lds
cmp
aad
outsb
in
orl
lock
mov
popl
xchg
push
neg
push
insl
mov
mov
mov
mov
jbe
dec
jmp
aaa
push
push
stos
std
ljmp
mov
mov
lahf
adc
xchg
scas
popa
jmp
add
mov
testb
mov
in
cmpsb
jecxz
dec
jg
loopne
daa
divl
mov
jecxz
in
mov
gs
jecxz
mov
xchg
adcl
repnz
inc
mov
ds
out
cmp
cmp
rcrl
ret
sub
xor
imul
inc
push
inc
sub
xor
loope
inc
push
push
push
incb
ss
lods
addr16
sbb
jecxz
inc
sub
xchg
xor
popl
aas
jp
and
fmull
sub
loop
dec
xor
mov
ja
imul
xchg
cwtl
cs
jbe
lea
cwtl
lret
push
out
xchg
adc
sbb
pop
adc
cmc
jb
xorb
sub
push
sahf
jecxz
and
inc
fistl
rcrl
mov
xor
sbb
dec
mov
jo
xchg
neg
ds
xchg
mov
xchg
outsb
fistpll
leave
push
ja
out
inc
add
jmp
aam
mov
dec
xchg
lahf
mov
cwtl
pop
dec
mov
adc
repz
add
dec
xor
in
sub
iret
jg
push
test
ffree
push
xor
or
lods
ret
xchg
or
fisttpl
xchg
ja
sub
popf
xor
add
stc
cwtl
add
ljmp
fs
mov
mov
mov
lea
mov
leave
mov
subl
out
cmc
jle
ljmp
cmp
dec
loopne
jo
xchg
lahf
pop
or
mov
pop
mov
cmc
insl
iret
mov
xor
jne
jp
dec
mov
jne
jmp
int
test
mov
mov
inc
dec
inc
shll
rcll
cmp
sub
fcomip
inc
imul
inc
orl
cmp
subb
xchg
in
fldt
add
inc
and
jge
into
cmpsl
xor
lea
mov
add
cmp
sub
movsl
fcomps
adc
repnz
fcoml
fisubl
add
jns
xor
sbb
push
insb
adc
inc
xchg
push
dec
dec
orl
or
loope
push
dec
dec
cs
sbb
xchg
insl
pop
fwait
cld
lret
adcl
stos
cmpsl
jg
mov
push
xchg
imul
loop
in
mov
data16
pop
jne
lahf
movsb
jns
mov
pop
jl
scas
aad
sbb
ja
add
jno
mov
and
mov
jge
or
xor
xlat
xchg
rorl
cmp
sbb
mov
mov
push
loope
aaa
aaa
push
cmp
sub
and
jecxz
cmc
btc
mov
mov
xor
add
mov
aaa
cltd
fdiv
aam
and
pop
mov
cmp
sbb
add
scas
sbb
mov
push
stc
shl
dec
xchg
sbb
mov
jmp
mov
jecxz
rcrl
mov
mov
int3
cmp
pop
dec
fdivr
push
adc
jmp
fldcw
mov
mov
shlb
sub
push
in
jo
addb
sub
jno
cmp
add
into
pop
out
bound
ds
xor
xor
jg
mov
lods
lock
repz
mov
iret
ja
sub
addr16
aam
lock
push
or
rorl
inc
int
movsb
and
pop
lock
sbb
cltd
push
les
cli
pop
xor
sbb
stos
sbb
fsubl
fwait
pop
xchg
aad
sbb
sub
out
aam
adc
xor
dec
xor
mov
mov
jmp
fs
cli
out
sbbl
stos
jmp
stc
scas
cmp
loopne
pop
lret
adc
mov
cmpsl
in
xor
sbb
fistl
push
push
sarb
lret
std
push
and
fmull
je
and
notb
and
test
add
xchg
or
adc
cmp
repnz
out
fidivs
aas
xlat
dec
mov
ret
push
and
or
mov
push
scas
imul
cmp
or
dec
pop
in
add
inc
sti
and
inc
fwait
mov
in
dec
arpl
sbb
inc
mov
jnp
out
sti
das
int3
imul
clc
inc
push
add
push
test
mov
mov
loop
int3
aaa
jg
push
iret
lret
cmp
test
lock
push
push
and
mov
scas
mov
dec
inc
cmpsl
xor
in
mov
repz
jae
rorb
in
xor
mov
push
mov
cwtl
js
arpl
jb
hlt
push
jns
insl
mov
sub
mov
xchg
sbb
jmp
xchg
jmp
je
xchg
and
test
pushf
shrl
inc
cmp
inc
lret
or
or
icebp
push
cltd
lock
mov
jecxz
jne
xchg
imul
fisubrl
loopne
loop
jae
sbb
mov
dec
inc
in
jl
sub
or
adc
negl
sbb
xor
test
loope
scas
ljmp
in
adc
in
cltd
fcmovu
psllq
jne
pop
mov
push
or
or
push
out
adcl
push
inc
inc
push
mov
dec
xor
ja
mov
test
push
shrb
incb
xor
sahf
lods
lcall
cmp
popa
push
jg
call
pushf
fdivp
adc
rorb
xchg
jne
inc
push
mov
adc
cmp
imul
jg
aad
in
mov
push
pop
or
jge
cmp
pop
push
mov
pop
stos
push
add
or
push
adc
mov
cmpsl
stc
mov
mov
dec
repz
aaa
inc
sti
push
cmpsb
mov
sbb
dec
nop
cmp
fcomip
add
cmp
decb
sti
xor
fcompl
fstp
sbb
mov
or
mov
inc
js
ljmp
nop
mov
xchg
push
add
and
rol
test
cs
mov
xor
push
rorl
out
iret
icebp
ret
add
jo
mov
push
out
adcl
outsl
push
mov
dec
jno
int3
pop
lret
pop
jmp
pop
xor
les
nop
dec
scas
out
jmp
leave
repnz
add
jecxz
stos
xchg
xor
add
lds
jp
pop
mov
inc
dec
daa
jbe
imul
add
gs
lahf
test
lods
pop
push
dec
lea
les
out
xchg
jg
in
out
inc
push
popf
xchg
mov
mov
rcr
testb
fisttpll
arpl
sbb
pop
push
or
mov
loopne
mov
ss
sub
push
shrl
sbb
aas
insl
or
andl
aas
fwait
imul
dec
fisubs
xlat
inc
movsl
stos
push
dec
adcl
fistpll
cmp
insl
sbb
sbb
xor
lds
mov
xchg
test
int3
js
jno
mov
lahf
dec
sub
insl
sarb
sbb
dec
adc
xchg
jb
push
outsb
mov
or
sbb
mov
jp
ljmp
loope
je
adc
xchg
and
sbb
push
rol
test
mov
inc
jecxz
inc
mov
mov
ds
out
mov
repnz
lea
push
jno
popa
sahf
jno
test
push
and
mov
jmp
pusha
fld
sub
jmp
inc
adc
mov
daa
cmpsl
ss
mov
push
into
xor
jo
inc
push
lock
cs
mov
lods
inc
test
cmp
rorb
pop
mov
sub
lea
inc
sub
out
in
xchg
sub
scas
inc
jnp
push
test
stc
mov
push
jb
negl
push
mov
movsb
xchg
sub
pop
lea
pop
add
mov
mov
ds
addr16
rorb
cmp
pushl
xchg
shlb
pushf
xchg
push
div
inc
lock
dec
aaa
popf
frstor
sub
enter
punpckldq
mov
mov
mov
stos
out
outsl
sub
and
push
sbb
cld
push
adcb
jl
inc
cwtl
pop
repnz
insb
adc
addr16
adc
sub
push
stos
sub
xor
jp
lods
adcl
push
test
out
stos
xchg
sub
dec
sbb
iret
pop
dec
les
pop
fldcw
add
or
mov
out
cli
lret
lds
ds
test
fldl
mov
fcomp
adc
pusha
pop
loop
jmp
scas
pop
mulb
cmovnp
loop
pusha
ret
fcmovnb
and
icebp
add
mov
jne
notb
loop
sub
sub
sti
in
jmp
inc
sub
lret
mov
cmp
aam
leave
inc
and
cmpsl
mov
push
cmp
insl
jb
mov
mov
pop
mov
dec
and
mov
loopne
test
xor
enter
jno
insl
das
jmp
dec
xchg
mov
lret
pop
test
xlat
in
jg
mov
push
fdivr
stos
movsb
fcompl
push
xor
mov
lods
cmp
cmp
jp
ljmp
loopne
adc
sbb
cli
movb
dec
dec
out
sbb
gs
mov
xchg
loope
add
xchg
jnp
sbb
lock
mov
pminsw
mov
jbe
fs
sarl
je
sub
aam
adc
test
pop
pop
sbb
ret
sbb
fstps
xchg
jl
mov
cld
mov
or
pop
test
into
xor
sub
adc
lods
mov
hlt
test
sti
pop
popa
mov
pop
push
or
imul
mov
outsb
inc
outsl
mov
lahf
ljmp
aas
mov
push
nop
xchg
pusha
xchg
dec
ret
cmp
mov
cld
jecxz
dec
sbb
les
ljmp
in
inc
cmp
dec
dec
mov
jnp
ljmp
sbb
insl
xor
jnp
outsb
and
hlt
push
insl
in
xor
cltd
mov
pop
nop
and
push
jp
push
mov
roll
inc
xchg
sbb
je
xchg
dec
or
data16
lret
out
js
push
push
jle
sub
std
mov
inc
adc
mov
sarl
out
mov
jge
pop
pop
daa
imul
jnp
and
aad
sub
enter
cmp
jecxz
fistpll
lods
fisubl
jecxz
add
and
adc
inc
inc
and
or
and
pop
nop
push
mov
hlt
aam
cmp
inc
add
dec
je
dec
das
int
ret
xor
jecxz
add
scas
sbb
pop
shll
lea
inc
scas
sahf
jg
shlb
andl
sbb
lock
in
mov
movsl
in
push
std
popa
repnz
push
inc
inc
mov
inc
jno
pushf
mov
dec
mov
pop
mov
jno
push
cmpsb
imull
in
out
out
cmpl
in
xchg
mov
divb
or
adc
cltd
repz
pop
lahf
fsubrl
outsb
sar
ljmp
test
addr16
sbb
xorb
jl
mov
ja
push
stos
and
and
mov
push
sbb
mov
mov
int3
lea
ret
inc
outsb
or
std
and
jne
mov
shlb
mov
push
xchg
or
imul
sbb
dec
mov
daa
sahf
jg
cli
push
jbe
adc
ret
xchg
ljmp
es
daa
cmpsb
pmulhw
mov
aam
movl
jae
cmp
push
bound
mov
outsb
mov
cmp
aaa
push
lcall
pop
dec
push
mov
in
fcmovne
movsb
jbe
pushf
aam
sti
jle
cli
lds
xchg
scas
push
faddl
aam
cmpsb
jecxz
mov
mov
mov
push
inc
push
pshufw
stos
fdivs
cmc
movsl
jns
add
pop
pushf
jge
sub
mov
xorb
into
inc
pushf
jg
add
mov
mov
aad
cld
stos
dec
nop
cmp
mov
xor
andps
fsubs
add
push
adc
jmp
pop
pop
out
sub
pop
das
add
mov
dec
cltd
into
int
subl
push
addl
ret
pop
insl
jle
movsb
xor
push
int3
shrl
shlb
add
fnclex
insb
fsts
cmp
pusha
loop
push
outsb
mov
and
inc
out
mov
jl
out
stos
cltd
inc
push
addl
aam
repz
jmp
data16
cmpsl
xchg
pop
jcxz
into
scas
repz
lock
xor
sub
sarl
mov
mov
out
das
jo
dec
jl
and
out
fwait
testb
dec
sbb
sti
insl
lahf
sti
sbb
rcrl
pop
push
shrl
int3
jb
hlt
sub
dec
xchg
std
xor
or
int
stos
sub
push
or
clc
into
xlat
jg
loope
or
ret
and
loopne
sub
stos
fmull
jae
aad
xchg
jne
cli
ret
push
stc
pop
subl
ror
movl
mov
fcoml
es
notb
mov
push
out
lret
and
and
sbb
sub
inc
into
test
sbb
add
jmp
xor
mov
dec
mov
and
outsb
adc
mov
bound
ljmp
fisttpll
cld
push
rorl
mov
push
movsl
mov
inc
shr
mov
or
jb
or
xchg
mov
movsl
mov
pop
std
mov
cli
mov
loop
pop
in
movsb
andb
pushf
jns
loopne
jp
inc
sbb
loop
popa
xchg
daa
jno
add
pop
lahf
and
mov
inc
arpl
push
in
fstpt
add
push
and
push
add
daa
xchg
das
inc
test
xlat
inc
dec
sub
das
ljmp
les
out
or
push
je
mov
add
xchg
out
cmp
out
scas
cmc
sti
mov
pop
aam
add
loop
lea
inc
mov
cli
adc
xor
or
outsb
sub
mov
cmp
pushf
bound
xchg
dec
mov
shll
mov
adcl
mov
shrb
pop
mov
mov
jns
or
sahf
pop
icebp
push
dec
mov
jno
xchg
and
xor
scas
mov
and
mov
jb
jl
test
mov
or
xor
xchg
and
cmpsl
pop
xor
sub
xor
sbb
push
sbb
insl
cwtl
out
cmpsb
daa
cmpsb
addl
mov
adc
or
push
mov
add
sbb
dec
push
jge
jge
filds
repz
idiv
add
or
fldl
in
push
std
stos
mov
cs
sub
mov
aas
xlat
insl
aaa
and
mov
mov
dec
jge
mov
mov
lret
aad
out
mov
test
jl
cmpsb
loop
jno
mov
and
rorl
xchg
jno
jmp
xchg
or
ret
outsb
adcb
out
cwtl
xchg
cmp
fdivr
rcll
jmp
sub
sbb
cli
mov
jns
lcall
jle
test
insb
and
jmp
push
ret
xchg
hlt
ja
popf
mov
inc
jp
sbb
mov
and
add
rorb
neg
arpl
scas
scas
in
mov
push
loopne
cmp
and
add
cli
nop
ljmp
push
fidivrs
adc
loop
jmp
mov
leave
xchg
daa
jg
xchg
sub
mov
xor
mov
test
pop
fs
jb
or
push
mov
xchg
sbb
test
push
and
test
and
sbbl
icebp
push
fistps
or
lock
push
mov
inc
outsl
pop
push
mov
dec
notl
jl
xor
push
rolb
scas
loope
fcompp
dec
xchg
jg
cli
loop
pop
aam
scas
stos
imul
push
push
cld
xor
rcll
or
cmp
dec
test
shlb
imul
or
cmp
lock
sub
sbb
pop
sbb
aaa
mull
call
mov
stos
mov
int
push
leave
mov
push
ja
es
icebp
subl
call
cmp
mov
xchg
shr
push
sbb
mov
test
int
mov
mov
dec
insb
hlt
les
pop
sti
and
cmc
pop
pop
cmp
pop
je
xchg
mov
push
iret
mov
inc
push
xor
rorb
je
xor
scas
lods
fsts
inc
lret
ret
movsl
xlat
hlt
in
mov
call
jb
std
outsl
out
popa
insb
xchg
jnp
int
and
test
insl
xor
sbb
in
adc
shlb
fmul
push
fstps
bound
xchg
inc
mov
jg
pop
add
ret
or
add
ret
sbb
and
inc
dec
iret
sub
lods
or
sub
loopne
sti
icebp
dec
push
cmp
mov
sbb
test
bnd
repz
pop
pop
loop
ret
dec
cmp
or
sahf
lret
sbb
fs
add
loop
outsb
test
mov
hlt
shrl
dec
aad
add
jmp
fs
int3
mov
mov
icebp
ret
les
inc
fs
mov
dec
xor
pop
and
repnz
or
test
xchg
and
xor
dec
stos
sub
sarl
outsl
arpl
popf
lret
pop
add
xchg
loop
mov
das
mov
mov
shll
stos
xor
pop
in
mov
jge
lods
push
mov
iret
insb
cmpsb
lock
hlt
hlt
scas
sbb
outsb
pop
mov
rclb
repz
dec
add
ds
dec
fs
imul
xchg
aaa
je
testl
mov
or
inc
xor
ret
mov
out
or
sbb
mov
push
sub
pop
cmpsl
inc
push
pop
push
push
cltd
cmp
cld
scas
aaa
xor
pop
sub
iret
movsl
jne
jge
pop
sbb
xor
sub
and
pop
xor
mov
pop
and
fdiv
lret
xchg
movsb
cmp
hlt
push
or
and
sub
movsb
push
shrb
scas
jne
lahf
and
imul
and
add
xchg
jbe
cltd
int3
xor
jle
das
adc
aad
ljmp
fisubl
jmp
cmp
mov
jmp
pop
fldl
add
fisttps
inc
or
sti
sbb
xchg
cmc
roll
or
add
sbb
aas
lock
add
xor
mov
frstor
push
push
cmp
dec
into
shll
std
mov
xchg
add
adc
jmp
out
mov
inc
add
popa
aad
or
mov
jno
jae
stos
lret
iret
in
push
insb
sub
fnstsw
adc
sbb
or
mov
sbb
mov
xor
xchg
addl
mov
bound
jne
sbb
pop
pushf
sbb
push
inc
jnp
xchg
dec
test
pushf
inc
mov
push
sbb
sbb
mulb
fisubrl
scas
imul
not
sahf
inc
imul
out
sbb
jp
jl
or
scas
int
ret
arpl
push
or
jmp
out
sbb
mov
test
pop
jo
mov
repnz
pushf
jle
xchg
cld
sub
xor
push
fisubs
jmp
test
addr16
mov
sarl
add
in
adc
pop
fcomps
aad
pminub
xor
out
mov
push
arpl
cmpsl
sub
lods
in
adc
sahf
xlat
and
in
sbb
popa
push
andb
push
xor
and
mov
mov
es
fldt
insb
xchg
jbe
jo
jecxz
cmc
daa
cli
pop
mov
sub
std
lret
or
jbe
repz
fidivrl
inc
inc
xor
add
sbb
sub
ret
mov
scas
jl
and
sub
pop
push
mov
clc
rcrl
xchg
stos
adc
ljmp
jnp
mov
outsl
outsl
jl
inc
sub
pushf
inc
stos
es
adcl
fisubrs
call
aad
sar
imul
insb
ret
jle
aam
mov
sub
out
mov
adc
sub
ficoms
jg
jle
iret
add
js
inc
outsl
insb
out
inc
out
cmpl
pop
ljmp
push
icebp
dec
fisubs
pop
cmp
jns
rcpps
fcompl
sbb
or
mov
lret
scas
std
sbb
mov
mov
dec
repnz
mov
xchg
iret
cmp
in
ret
adc
inc
nop
jb
sbb
and
xor
pop
sbb
sub
cmp
insl
mov
dec
scas
pop
and
fnstcw
test
xchg
mov
test
fcompl
arpl
imul
mov
out
adc
sub
mov
push
lds
bound
jns
or
pop
inc
jmp
std
test
loop
int3
jl
jnp
adc
dec
aad
imul
negb
in
add
and
stos
fcmovnbe
sub
lods
mov
mov
push
bound
mov
ds
test
aas
mov
in
dec
insb
sub
dec
add
movsb
test
mov
or
dec
scas
aas
add
icebp
mov
lret
lods
hlt
addl
mov
sub
fmul
pusha
mov
mov
lret
cmpsb
lahf
sbb
mov
mov
jmp
mov
add
aas
jb
ja
repnz
outsl
movsb
stc
jne
push
test
pusha
xlat
push
pop
mov
dec
add
mov
adc
aas
lods
push
mov
and
aad
loop
dec
xchg
shlb
hlt
aad
fs
or
stc
push
mov
cld
jne
xor
jp
stos
test
imul
arpl
je
sbb
mov
dec
inc
cmp
sbb
mov
stc
mov
adc
or
orb
and
mov
or
mov
in
mov
incl
scas
cwtl
jp
int
push
dec
insl
pop
xlat
lock
sub
lods
xor
les
dec
pop
mov
xlat
cmp
jl
jl
sbb
pusha
sbb
test
jmp
jp
sbbl
mov
jae
test
imul
cmpsl
and
cmpsb
mov
cmpsl
lods
cwtl
int
mov
mov
push
pop
incb
in
inc
inc
push
stos
scas
lock
lods
shrb
and
push
or
xchg
xor
dec
ja
xlat
aaa
jp
bound
dec
jge
lret
add
sub
add
subl
jnp
xchg
rcrl
lret
pop
mov
cmp
orl
in
cltd
fucomip
ret
xchg
leave
leave
enter
push
out
pop
cmp
cld
add
push
lock
scas
dec
fdivrp
xchg
pusha
mov
inc
mov
push
test
repz
inc
cmpsl
fnstenv
pop
mov
fisubrl
add
jo
loopne
lods
xor
push
cld
dec
rclb
jns
xchg
mov
push
push
scas
jle
rcrb
xchg
fists
push
mov
and
scas
xor
dec
scas
mov
jae
mov
jmp
add
dec
fistpl
push
push
lock
pop
mov
push
dec
add
mov
mov
cmp
int
push
jp
dec
xlat
out
js
mov
test
inc
push
cmp
cmpsb
cmp
sbb
pop
frstor
bnd
xchg
addr16
rclb
ret
shlb
pop
push
stos
dec
test
xchg
pop
cld
cli
sub
je
and
adc
jae
pusha
pop
mov
stos
pop
sub
pop
xchg
test
cmpps
mov
and
sbb
mov
stc
sbb
xchg
xor
repz
adc
jno
int3
mov
mov
cmp
or
xlat
fisttps
mov
iret
daa
ljmp
pop
hlt
and
add
jo
test
repnz
insb
dec
xor
jecxz
jp
inc
xlat
adc
pop
or
dec
jge
dec
and
std
mov
lods
or
rcrl
repnz
xor
incb
ja
lahf
iret
sbb
mov
pop
les
les
sti
in
fwait
aas
das
jg
add
xor
test
lcall
jb
rorl
cltd
repnz
fnstenv
cltd
sub
jecxz
loope
mov
das
inc
fwait
pop
lret
lods
push
mov
inc
and
sbb
pop
insb
mov
mov
popf
clc
push
mov
sub
nop
idivb
stc
fs
popa
out
or
mov
push
push
mov
cmp
sbb
mov
pop
fs
int3
lcall
inc
inc
aad
jmp
add
cld
dec
shll
sarb
mov
movsb
mov
cmovs
xor
or
xor
loop,pn
push
cli
ds
add
stos
mov
cwtl
fmull
sarb
xchg
mov
push
sub
xchg
daa
je
fsubrl
mov
cmp
repnz
mov
cmp
insb
jge
loopne
xorb
andb
mov
sub
sbb
addr16
or
push
cmp
dec
dec
xchg
in
cli
sub
or
pop
aad
shrb
and
leave
flds
data16
mov
outsl
dec
pop
sub
or
insb
mov
arpl
popf
jle
test
scas
mov
stc
sub
movl
outsl
push
rolb
mov
lods
fidivrs
jge
scas
jp
jp
stc
mov
loope
int
jnp
xor
adc
sub
mov
out
pop
imul
sub
adc
in
mov
loope
cmpb
add
popf
push
pop
int
cmp
or
inc
xchg
push
shrl
adc
xor
fmull
sub
stos
int
xchg
pop
mov
out
test
mov
loope
mov
outsb
movsb
fsubl
sbb
mov
push
sub
ss
adc
movsl
sti
inc
cmp
loope
mov
test
lods
mov
adcl
ficomps
add
or
sbb
jno
flds
add
sbb
pop
push
int
push
inc
inc
pop
jnp
outsl
add
movl
add
xor
inc
out
aad
in
mov
mov
enter
jl
loop
and
push
shll
mov
enter
stos
outsl
std
sub
in
and
cs
jo
cmp
stos
jb
push
ffree
jmp
arpl
mov
sahf
popa
pusha
sbb
fsubs
jnp
cli
lcall
clc
filds
xchg
daa
sahf
inc
or
lods
in
jne
pushf
cmp
bound
cltd
jecxz
xchg
sbb
dec
xlat
in
dec
popf
jmp
into
mov
lods
lock
inc
inc
sub
wbinvd
dec
iret
cmp
xchg
outsl
or
push
xor
dec
sbb
ret
push
in
setp
sub
negb
outsl
cmpsl
mov
inc
mov
stos
mov
repz
rcl
dec
push
or
out
sahf
lret
xchg
in
xor
sti
fwait
or
dec
jmp
lret
cmc
xor
cmp
sbb
pop
lcall
das
rorl
mov
cmp
nop
push
fisubrs
cmp
xchg
pop
ret
mov
pslld
and
pop
fisubl
adc
mov
jmp
out
xchg
into
fprem1
test
cmp
cmp
movsw
sti
jmp
outsb
mov
notb
test
jg
shlb
fwait
ss
add
push
mov
jp
stc
pop
and
adc
sti
dec
or
push
add
lret
bound
enter
inc
and
sub
in
jl
sbb
shlb
addr16
fbld
xchg
pop
mov
xor
mov
jae
hlt
fs
insl
mov
stos
jecxz
fucom
ret
add
sub
mov
jmp
test
lds
shll
out
and
xor
xchg
roll
sub
xor
js
popf
adc
test
mov
ret
je
push
nop
popa
aas
clc
iret
mov
les
xlat
fbstp
out
sbb
pusha
mov
xlat
cmpsl
je
push
aad
loope
lds
dec
push
stos
aad
movsb
pushf
and
sarl
pop
lods
mov
mov
add
xor
loop
mov
ret
jnp
testb
inc
cmp
sub
pop
push
xchg
mov
loope
cltd
adcl
movsb
add
mov
test
jb
loop
dec
or
jmp
cs
int3
in
adc
jmp
lds
in
in
pop
xchg
jne
adc
dec
dec
and
pop
inc
in
test
mov
stos
jp
loop
add
cmp
xor
mov
jne
mov
cmpsb
or
xor
js
or
test
sub
jl
js
pop
aam
sbb
push
jns
cwtl
es
in
cmp
pop
jnp
jae
int3
or
cwtl
rcrl
xchg
pop
and
popf
xchg
stc
adc
mov
mov
jns
loope
rclb
mov
mov
repnz
and
ds
in
mov
out
lods
in
loop
aam
and
dec
fs
add
sbb
in
dec
mov
cmp
ds
mov
adc
imul
mov
dec
ja
cli
sub
xchg
out
push
aad
in
push
add
sub
push
jno
ficoms
push
push
enter
jg
mov
inc
cld
jg
lahf
xchg
pop
xor
cwtl
adc
push
orb
adc
pop
jmp
cld
inc
xchg
outsl
ds
call
loopne
nop
imul
jo
sub
or
add
cmp
int3
mov
sbb
icebp
fiaddl
jp
ret
xor
push
sub
jmp
sub
rcll
sahf
push
insb
shlb
test
or
pop
loop
pop
jb
or
imul
aas
into
and
stc
push
xor
mov
outsl
jnp
rcr
mov
dec
cld
fwait
pop
insl
loope
clc
sbb
xor
imulb
and
mov
and
arpl
mov
popa
push
das
mov
mov
add
nop
les
movsl
sbb
push
and
shll
jg
xchg
addl
nop
or
inc
ljmp
push
jbe
std
and
lock
loop
out
lahf
cmp
push
shrl
out
es
xchg
cmp
stc
movsb
sbb
push
imul
stos
add
out
and
dec
mov
popf
in
fwait
inc
lock
add
lret
fcomi
mov
sub
shl
je
ljmp
je
or
add
stc
and
mov
jmp
cmc
dec
sahf
shll
push
cwtl
adc
lock
cmp
mulb
out
shll
sbb
out
aam
bound
mov
shl
test
mov
sahf
mov
gs
mov
fs
popf
cwtl
enter
out
pushf
xchg
pop
lcall
dec
mov
icebp
lret
pop
ret
xchg
push
mov
loope
cwtl
cmp
mov
inc
adc
testb
xor
and
lahf
pusha
mov
sbb
push
or
loopne
imul
je
das
dec
and
test
roll
sbb
mov
pop
orl
and
mov
xor
mov
jle
mov
ja
and
add
cli
aad
int
imul
dec
negl
call
and
out
jmp
sub
jnp
dec
jmp
lods
clc
or
aas
jmp
push
or
xor
add
dec
xchg
data16
dec
es
lret
add
dec
dec
xlat
jae
icebp
adc
popa
call
push
cmp
pushf
in
es
imul
jo
pop
xor
dec
jmp
mov
cltd
movsl
je
xchg
cltd
int
mov
sahf
repnz
sbb
mov
xor
mov
ret
hlt
cmc
sbb
mov
int3
push
mov
and
inc
addr16
pop
or
jne
xchg
dec
sbb
lea
mov
test
xor
mov
pop
jecxz
test
ret
scas
insb
or
ss
cmp
jno
jl
and
js
aaa
pop
add
fucomip
shl
andl
andl
stos
or
or
sub
cmp
pop
mov
rclb
jp
push
data16
pop
add
and
xchg
in
shl
push
inc
adcb
out
movsb
roll
and
xor
out
xchg
mov
sub
movsl
adc
cltd
inc
jge
dec
push
xlat
cmp
mov
insl
nop
movsb
idivb
scas
jo
loop
repnz
xor
das
out
enter
sbb
add
jmp
call
std
lods
add
jae
mov
test
imull
xchg
jmp
popf
rcrb
mov
sbb
shrw
push
cmpsl
mov
mov
jns,pn
fnstcw
sub
lcall
movl
lcall
out
in
insl
jb
adc
mov
xchg
stos
sbb
cld
add
pop
mov
pop
sarl
daa
addr16
add
movsb
pop
shlb
xlat
clc
pop
lret
jl
push
mov
jo
addr16
cwtl
jnp
mov
mov
lds
enter
xchg
push
fldcw
shll
dec
pop
dec
xor
adc
pop
orb
push
pop
into
testl
das
insb
into
xchg
xchg
ror
ljmp
jne
mov
xchg
inc
sbb
sahf
jno
add
cs
xchg
and
xchg
out
xchg
pop
jbe
push
push
xchg
pusha
push
mov
stos
push
sbbl
scas
lahf
repnz
rolb
jno
mov
je
fdivrl
cld
fimuls
fwait
inc
cmpsl
jo
fcmovbe
push
fdivrl
fidivrs
sbb
and
jns
add
pop
and
stos
push
sti
es
cld
mov
push
pushw
push
jecxz
fldcw
push
lods
dec
ds
lods
sarb
inc
jo
xlat
mov
lock
and
lret
mov
cwtl
inc
jmp
aad
lea
cmpb
ret
cmpsl
sarl
aaa
mov
xlat
jecxz
push
sarl
pop
push
mulb
push
icebp
lret
fcomps
lock
shrb
jl,pn
cmc
add
mov
shlb
or
insb
fucomi
add
fwait
inc
std
test
rcll
adc
cmp
andb
addb
insb
shrb
lcall
xor
ljmp
cmp
in
mov
imul
dec
faddl
mov
inc
mov
enter
movsl
popa
and
adc
pop
ret
daa
and
mov
mov
rcl
ss
movsb
shl
pop
jnp
inc
inc
repnz
stos
loope
xchg
nop
lds
mov
stc
jmp
sub
lock
out
loopne
jmp
dec
out
imul
mov
enter
inc
in
mov
inc
xchg
adc
add
outsb
mov
stos
pop
and
leave
aaa
out
cmp
mov
subb
insl
in
sbb
mov
or
pop
je
pushf
scas
imul
adc
and
es
mov
imul
jg
lret
pop
pop
sahf
jae
push
jns
jno
aad
dec
or
inc
fisubs
fmul
test
and
addr16
sub
out
inc
inc
lret
jne
inc
add
imul
push
out
lods
dec
mov
enter
inc
rol
call
cmp
fcmovnbe
lds
aaa
sahf
mov
daa
arpl
jo
jmp
push
mov
fwait
xchg
sbb
and
mov
popf
out
pop
fidivl
sarb
push
ret
adc
ucomiss
mov
or
jp
das
aam
movsb
lret
push
shll
xor
adc
movsl
scas
pop
out
pop
inc
dec
jne
mov
inc
push
and
push
ja
push
test
pop
sbb
jae
imul
xor
rolb
cmc
lahf
in
mov
and
push
inc
addr16
test
cmp
xchg
in
fstps
sub
jmp
stc
lods
mov
or
mov
repz
xor
push
ds
or
fcomps
data16
sbb
std
dec
test
or
lahf
shl
mov
add
scas
aas
mov
jp
jge
out
push
fnstcw
adc
ja
aad
or
pop
in
rcr
adc
sub
jnp
ror
scas
js
dec
cmp
sbb
push
fwait
je
or
jg
jp
insb
dec
mov
pop
mov
adc
push
out
call
adc
popa
and
pop
mov
add
push
mov
pushf
cli
inc
push
dec
aas
aad
movsl
pusha
fidivrl
xor
ds
mov
cli
pop
roll
test
adc
adc
clc
call
loop
pop
insb
ficomps
ds
aad
int3
jno
fidivrl
push
dec
jmp
mov
je
repnz
push
clc
sahf
adc
mov
popa
pop
dec
in
std
clc
and
lret
xor
pop
andl
mov
arpl
inc
lods
and
push
cs
in
out
out
mov
push
inc
mov
fwait
repz
pushf
mov
fcmovnu
mov
pop
out
aam
cmp
scas
xor
divb
ret
daa
mov
add
popf
mov
leave
push
jg
sarb
inc
adc
xchg
mov
xchg
popf
in
mov
sbb
sbb
fnstcw
imul
out
jns
mov
sub
xor
push
not
scas
ljmp
imul
sub
lds
call
xor
inc
adc
ds
xlat
fnstsw
or
aas
stc
pushf
inc
mov
enter
push
push
int
cmc
scas
push
xlat
lea
lret
loopne
mov
pop
xchg
cli
sbb
push
xor
xchg
add
or
push
push
out
pop
cld
inc
and
in
cmpsb
dec
sti
jge
xor
outsb
jnp
cli
pop
imul
mov
xorl
ret
dec
cltd
or
push
mov
jb
push
mov
in
out
mov
xchg
cmp
cs
scas
repz
mov
jle
leave
jno
jmp
mov
pop
sub
xchg
pop
popa
stos
je
sbbl
sbb
stc
pusha
adc
pop
sahf
mov
pop
sbb
lret
cld
testl
mov
mov
adc
loop
mov
addb
negb
cmp
xorl
mov
mov
pop
sbb
fs
xchg
cmpsl
xchg
or
jno
mov
call
sahf
repz
jo
dec
jp
repz
dec
scas
sarl
mov
mov
fiadds
jno
jnp
lahf
shl
ja
mov
daa
xor
push
popa
out
jae
xor
sbb
out
jecxz
jns
repz
cmp
add
leave
shlb
push
sub
and
push
rcl
sub
inc
leave
aaa
pushf
xchg
jecxz
popa
sti
inc
int
inc
pcmpeqd
pop
pop
lcall
test
repnz
push
adc
iret
jo
push
mov
xor
scas
and
or
outsl
push
aas
fucomi
fsubs
and
cmp
negb
movsb
mov
mov
xor
sub
ja
dec
pop
arpl
test
dec
outsb
sahf
fld
ss
int
add
xchg
sub
leave
cmp
xor
in
outsb
xchg
cmp
bnd
and
sbb
into
mov
inc
rcr
addr16
inc
and
insb
loopne
push
inc
lods
push
cmp
jbe
inc
in
fs
mov
stc
icebp
scas
int3
enter
es
arpl
or
cli
out
shrb
pop
aaa
out
mov
cli
inc
aas
lea
jne
loope
insl
nop
insl
add
adc
out
adc
sbb
or
rcr
mov
movsb
movsl
sub
jl
xchg
inc
xchg
test
add
xchg
out
xrelease
es
add
fistl
out
movb
xor
or
out
add
into
mov
mov
cmp
adc
xchg
sbb
xchg
xchg
movsb
cwtl
dec
ljmp
outsl
fsubrp
insb
mov
xor
ljmp
addr16
inc
lret
and
cltd
cli
and
push
inc
in
sbb
adc
aam
add
into
mov
jmp
jns
adcb
adc
sahf
add
pop
fbstp
into
jnp
pop
test
xchg
xchg
or
arpl
data16
mov
cmp
sub
xlat
stc
cmpsb
sti
cld
add
js
jb
ljmp
mov
jl
add
cwtl
jo
addr16
cs
push
push
out
leave
adc
ret
adc
pushf
lret
stos
add
push
pop
movzbl
fistpl
repnz
imul
inc
in
das
sub
xor
sub
or
shrb
mov
cmp
das
stos
push
jae
sti
repz
jne
aam
lock
cmpsb
or
mov
je
test
pop
movsb
xchg
lahf
dec
pop
and
rorb
lods
jl
shl
cmp
sub
sti
jno
out
lret
and
outsb
mov
push
incb
aam
sbb
jg
inc
pop
cmpsl
test
call
loope
dec
sub
pop
mov
sub
add
cwtl
inc
mov
test
test
jne
push
xor
rcll
cwtl
mov
jbe
out
ljmp
daa
push
mov
xchg
or
xchg
mov
and
cltd
fs
xor
lret
ja
insl
ss
outsb
shll
clc
jne
stc
cmp
mov
jnp
pop
pop
in
je
lret
xchg
pop
insl
in
jae
cs
dec
sarb
scas
lods
test
mov
add
aam
xor
jp
pop
pop
mov
jne
pop
xor
add
dec
adc
sbb
jnp
loopne
subb
fxch
lcall
mov
xsha256
cmpsb
xchg
pop
insb
sbb
lock
into
iret
pushf
mov
mov
or
loope
lods
cwtl
movsl
pop
clc
inc
lret
mov
call
jecxz
xor
insl
or
es
les
xchg
mov
adc
jno
mov
sbb
xor
ds
shrl
xchg
adc
pop
adc
divb
fwait
and
add
cmp
adc
sahf
loope
sub
mov
mov
sahf
mov
push
xchg
push
ljmp
out
push
mov
icebp
sub
cmp
pushf
sub
lods
out
sub
or
xchg
xchg
mov
nop
je
push
jmp
lods
xchg
mov
clc
mov
or
xchg
lcall
mov
push
jno
in
dec
jo
inc
dec
cmp
push
mov
pop
jne
or
sti
adc
cli
mov
jl
mov
adc
std
leave
int3
test
cwtl
mov
icebp
lods
push
data16
imull
pop
std
iret
fwait
les
xor
hlt
jg
mov
xor
out
mov
xor
cmp
cmp
lods
arpl
jg
hlt
test
mov
jb
movsb
dec
jbe
stos
add
movsb
mov
hlt
pop
sarl
adc
push
sarl
push
test
test
adc
lds
pop
mov
mov
fstl
add
xchg
pop
loopne
fldt
fnstenv
dec
and
mov
and
lds
shlb
mov
nop
mov
jae
jge
roll
xchg
ds
push
push
or
hlt
test
sub
adc
inc
leave
dec
test
mov
cwtl
mov
push
mov
push
pushf
loope
shlb
inc
stos
cltd
cmp
mov
sub
and
ret
inc
fsubr
shr
xor
arpl
mov
outsl
in
scas
div
xchg
cmp
test
das
push
inc
addl
clc
pop
lea
lock
inc
sub
sarl
pop
inc
mov
xchg
jno
jo
pop
leave
pop
sbb
sub
hlt
sub
jb
roll
xor
mov
nop
mov
dec
out
push
pop
adc
sahf
inc
stc
orb
pop
sbb
xchg
call
in
xchg
mov
outsl
pop
xor
negl
cld
lcall
mov
pop
sbb
push
sub
int3
xchg
dec
outsb
jmp
push
lock
jg
push
out
sahf
sahf
push
or
scas
push
rcll
das
and
push
cmc
mov
or
insb
loopne
cmp
cwtl
lahf
jge
dec
mov
jnp
dec
arpl
aaa
clc
and
insb
shlb
mov
icebp
jg
mov
cltd
jne
cmpsb
mov
xchg
dec
mov
in
icebp
idivl
repnz
lods
mov
fsubrl
pop
inc
call
movups
cmp
aam
ds
notl
mov
pop
outsl
inc
lods
nop
test
enter
lods
ja
stos
sub
mov
mov
fldcw
lea
xor
jne
les
pop
dec
popf
repnz
and
mov
mov
xchg
dec
add
push
xchg
nop
adc
out
hlt
in
mov
cmpsl
jae
mov
sbb
outsl
adc
jnp
dec
clc
pop
jne
mov
fwait
push
das
into
aas
sbb
push
sarl
xchg
push
mov
roll
hlt
xchg
jno
movsl
jg
roll
mov
sbb
push
data16
mov
ret
rolb
shl
insb
mov
mov
mov
je
mov
sets
cli
pop
push
cmp
mov
jo
ret
dec
jge
xchg
lods
ror
add
inc
inc
lcall
stos
lcall
pushf
push
jle
push
into
repnz
jns
sbb
jg
push
pop
test
xchg
mov
out
insl
adc
or
adc
jecxz
mov
pop
add
out
xchg
in
xor
cmp
jo
dec
das
imul
inc
xchg
mov
in
push
xchg
jae
sub
out
cmp
lock
iret
push
pop
dec
adc
push
bound
cwtl
fldcw
mov
sbb
dec
fistps
daa
stos
insb
inc
pop
sub
ret
mov
clc
dec
leave
les
cmpb
xchg
addr16
or
lcall
loop
les
xlat
xchg
add
lcall
cli
insl
cmpsl
add
lock
pop
nop
jo
lock
leave
in
and
and
jo
scas
jecxz
push
mov
fmulp
dec
fs
push
pusha
das
ret
sarl
mov
xchg
sbb
cwtl
in
mov
movsl
push
push
lret
jmp
and
idivl
arpl
in
dec
inc
fcmovu
xchg
cld
sub
insl
mov
mov
bound
in
iret
xor
in
cmpsl
sbb
add
lods
push
ljmp
mov
fidivrs
add
and
mov
into
xchg
or
and
and
test
mov
jp
lret
inc
mov
nop
mov
scas
or
dec
and
pop
push
xchg
icebp
dec
aam
sub
cmp
xor
and
cmp
mov
sbb
push
pop
add
cmp
orb
jge
jmp
int
push
hlt
add
in
bound
fsubrl
mov
mov
cli
data16
and
dec
jno
mov
stc
jb
data16
out
test
popa
shl
mov
insb
add
outsl
pop
out
subb
xchg
and
movsb
repz
dec
popa
or
aam
or
push
jno
jmp
adc
sbb
js
xchg
fsubrl
loope
inc
push
dec
scas
sub
add
mov
lock
enter
fsubp
jecxz
lahf
cld
ljmp
in
fidivrs
jl
xor
fdivrp
sbb
mov
mov
loope
or
xor
leave
loope
dec
adc
dec
sbb
jg
push
je
ficompl
loopne
stc
xor
addr16
addr16
push
push
inc
jle
stos
jmp
lret
adc
stc
xor
outsb
lret
mov
push
inc
jecxz
mov
daa
mov
pop
push
addr16
cmp
sti
mov
jl
fcmovb
test
int
test
adc
cltd
and
nop
leave
push
orb
stos
mov
call
ss
mov
test
lret
xchg
jne
imul
mov
int3
imul
sti
inc
loop
inc
arpl
sub
or
negb
std
adc
push
mov
or
adc
lahf
push
scas
ds
dec
sub
push
jae
inc
cmp
data16
and
adc
sub
rcll
mov
jo
sbb
test
jae
outsb
mov
and
sbb
hlt
aam
fucomip
jb
pop
adc
push
test
adc
adc
addr16
fstl
fnstenv
dec
es
mov
inc
or
xchg
inc
test
xor
repz
pop
into
jae,pn
adc
dec
and
mov
adc
aaa
aaa
lcall
sahf
dec
js
push
nop
or
adc
sub
or
data16
ror
mov
mov
sub
leave
insl
lea
hlt
pushf
cmp
lcall
cmc
pop
and
and
sub
or
dec
enter
inc
cltd
enter
cmp
sbb
sbb
lahf
sbbl
or
mov
in
jecxz
push
outsb
in
cmp
inc
test
mov
pshufw
dec
imul
and
jl
imul
xchg
push
popa
dec
ret
mov
xor
xchg
adc
dec
jle
sbb
pop
xor
orl
aam
inc
push
sub
fistpll
mov
es
xor
and
sub
arpl
sbb
pop
xchg
inc
sub
call
and
ror
cwtl
sub
jnp
cmpsl
xchg
dec
dec
adc
movb
aam
fwait
test
push
add
movl
jbe
lea
gs
test
add
pop
jb
mov
inc
lea
xor
jbe
cmp
lods
dec
push
xchg
testl
and
mov
sub
dec
lods
jbe
cwtl
fucomi
in
dec
aaa
mov
xlat
add
mov
or
jecxz
in
add
xchg
aad
pop
lret
xlat
ja
push
mov
xor
testl
or
sub
in
hlt
jb
dec
into
pop
mov
pusha
cmp
add
popf
cmpb
cmp
test
mov
enter
push
clc
lahf
pop
fidivl
repz
adc
cmpl
push
xor
out
pusha
daa
push
out
leave
imul
add
icebp
mov
jg
sbbb
mov
stc
fsubl
or
jp
add
jae
mov
add
xorl
pop
cmp
ror
mov
test
insb
dec
call
or
cltd
aam
jne
sbb
cli
dec
subb
arpl
ret
mov
jg
xchg
push
or
xor
cwtl
jl
jns
sub
imul
repnz
push
cmp
ds
pcmpgtw
dec
cwtl
pop
fdivrs
cmpl
mov
lret
add
out
xor
or
movsb
and
jg
outsb
mov
lock
or
out
add
jae
movsl
rcrl
cmp
or
es
jp
push
jg
push
sbbb
xor
aam
repz
jnp
or
mov
out
jl
fimuls
mov
cmp
cmp
cmpsl
add
inc
push
fimuls
scas
cmp
mov
inc
add
cmpb
dec
push
decb
out
xor
add
mov
push
les
rcl
sbb
dec
stc
sbb
out
mov
mov
inc
sub
add
dec
sub
inc
adc
jmp
iret
pop
scas
sbb
adc
dec
pop
jecxz
jae
jo
andl
add
push
nop
in
and
push
cmc
imul
xchg
mov
push
test
sarb
adc
and
movsb
popa
xor
dec
lahf
loope
cwtl
xchg
xor
xor
xor
inc
and
movsl
test
sarl
outsb
dec
inc
cld
dec
std
and
insl
rorl
stc
pop
and
dec
mov
dec
mov
xor
mov
push
mov
jg
jbe
pushf
sbb
rcrb
decl
outsb
cmp
cmp
xchg
xchg
outsb
dec
cmp
lcall
inc
cmp
addl
out
jg
inc
mov
pop
insl
jmp
mov
out
sub
or
adc
mov
and
imul
dec
addr16
cs
mov
call
sub
outsb
xor
mov
sub
mov
pop
enter
or
mov
sub
inc
lock
dec
bound
std
jmp
scas
int3
jecxz
cwtl
lea
mov
outsb
pop
adc
cmp
nop
mov
jne
xchg
pop
dec
xor
xor
imul
fs
or
mov
les
rorb
xchg
gs
jge
dec
das
repz
sbb
inc
and
mov
jns
mov
push
cltd
notl
mov
cmp
cmpsb
add
xorb
shll
add
push
cld
in
mov
and
outsb
dec
and
in
jb
sti
or
mov
scas
sar
xchg
stc
pusha
mov
and
stos
mov
sub
mov
or
ja
adc
push
js
sub
pop
lods
inc
stc
mov
adc
arpl
xchg
cmp
neg
fs
lret
ds
push
jb
loope
inc
enter
mov
pop
ja
cmp
scas
sahf
shlb
fldenv
jno
subl
lahf
mov
in
je
push
insb
repz
jg
scas
fptan
neg
mov
dec
cmp
mov
popl
push
push
lods
or
mov
ljmp
inc
arpl
idivl
lods
xlat
adc
sahf
jnp
add
sbb
jp
xlat
cld
popa
test
out
jb
call
jne
fsubs
bswap
or
imul
lock
mov
ficoms
xor
into
mov
dec
push
inc
jmp
mov
sbb
xchg
mov
je
cmp
sub
je
loopne
inc
imul
xor
lods
pop
mov
cmpsl
fcmovnu
jle
ret
icebp
push
adc
out
cltd
dec
or
movsb
sub
or
ja
lahf
push
jg
mov
lret
outsb
aam
dec
jno
xchg
std
push
push
mov
imul
lcall
test
adc
fdivr
jae
aad
mov
loop
aad
pop
xchg
dec
add
movsl
inc
inc
push
imul
mov
jno
divl
pusha
nop
inc
loopne
mov
dec
mov
dec
mov
dec
dec
sti
or
xchg
xchg
jecxz
lcall
decb
ja
pop
pop
jge
add
jle
add
mov
movsl
sub
clc
in
jp
push
push
sub
popa
mov
incl
dec
aas
ja
xlat
sbb
xor
or
movl
push
outsl
mov
fiaddl
aas
mov
push
cmp
mov
out
fdivrs
fwait
sub
daa
movsb
js
sub
fs
addr16
fdivrl
into
call
ss
leave
call
lods
pop
push
in
and
jbe
out
repnz
mov
push
std
mov
lods
add
mov
outsl
pushf
fisttpl
xchg
cmp
xchg
jmp
test
xchg
ret
push
ja
xchg
add
adc
mov
adc
lods
stc
mov
sub
hlt
fwait
cs
dec
xchg
and
push
cmpsl
mov
add
scas
jge
xor
repnz
fistps
arpl
cmp
movsl
sbb
mov
cld
and
mulb
scas
push
push
hlt
push
into
outsb
stos
cmc
xor
repz
fwait
push
inc
shl
push
shl
enter
enter
mov
push
xchg
sbb
negb
inc
out
add
jg
ljmp
hlt
lods
sub
and
jmp
add
mov
ret
loopne
xchg
sbb
xor
jecxz
mov
or
fwait
ss
arpl
sar
mov
cmp
or
popa
cmp
sub
inc
test
lods
add
fnstsw
out
lcall
int
cmc
scas
stc
test
lds
mov
pop
push
mov
sti
adc
jo
outsb
in
adc
fidivrs
cmpl
out
xchg
roll
shll
pushf
insl
lock
nop
pusha
sti
insl
mov
sbbl
lea
pop
dec
jecxz
xor
icebp
dec
enter
pop
sbb
jae
mov
inc
daa
push
cs
adc
jl
cmp
adc
ret
or
in
jns
shlb
adc
jnp
mov
lea
push
xlat
in
xchg
ror
pushf
leave
push
jo
test
pop
aad
push
pop
or
imul
cmp
stos
push
inc
add
or
jb
mov
push
sbb
hlt
in
int3
es
or
shl
int
data16
sbb
cmpsb
rcr
push
push
stos
pushf
in
push
pop
iret
lods
and
sub
xchg
xchg
int3
inc
adc
add
push
jae
xchg
mov
iret
sub
daa
cmc
mov
jbe
cmpsl
stc
sbbl
jbe
xor
ljmp
jne
addr16
xchg
into
loope
push
xchg
out
icebp
add
ror
push
icebp
pop
dec
adc
aad
arpl
push
pop
push
add
movsb
addr16
outsb
jno
cs
dec
cmp
xor
xchg
sbb
or
loope
das
sti
mov
loopne
test
push
shll
movsl
insb
fists
push
push
push
push
or
push
add
adc
fldt
lods
imul
in
mov
lahf
pop
les
adcb
xchg
inc
mov
xchg
rcrl
add
jmp
hlt
dec
cmp
sub
in
out
iret
rclb
imul
shrl
pop
adc
mov
or
and
and
shll
dec
lcall
xor
mov
cwtl
aad
pop
sub
cmpsl
or
jg
test
jb
mov
xor
push
pop
jb
repz
mov
mov
add
sbb
outsl
in
cmp
lods
jl
aaa
dec
pop
cmp
hlt
add
js
jle
roll
es
into
scas
push
outsb
sbb
push
fimuls
cwtl
lds
or
lret
or
jae
hlt
insl
das
fisttpl
fmull
sbb
stos
add
movsb
jg
jno
cmp
movsl
xchg
sbb
jb
xchg
cli
popf
xchg
xlat
inc
xor
sbb
dec
aam
mov
mov
push
mov
push
add
mov
cmp
mov
dec
cmpsl
and
mov
push
push
xchg
cmc
mov
push
fstps
mov
or
xchg
movsb
iret
jle
push
xchg
fidivl
cmp
and
mov
movsl
into
lahf
xchg
sub
add
mov
cli
mov
mov
pusha
cmp
xchg
sbbl
fs
lahf
xchg
loopne
cmp
aad
pop
jns
cltd
and
scas
lret
insl
mov
inc
addr16
or
push
scas
shl
lods
cli
in
sub
shll
imul
into
inc
jecxz
xchg
aaa
or
sub
mov
cltd
outsl
lds
jmp
sub
push
jecxz
icebp
dec
test
pop
fwait
xchg
or
pop
ds
fadds
popa
aas
or
mov
in
jb
push
sti
nop
ja
cmpsl
mov
push
mov
out
imul
xlat
sub
mov
pop
pop
xchg
ret
xchg
add
aaa
test
adc
int
adc
dec
sarl
iret
test
cs
lret
sbb
sbb
add
jp
mov
out
mov
repnz
imul
add
std
in
dec
jle
clc
inc
xor
test
and
xor
cmp
int
shll
jns
cld
out
shll
jg
pop
pop
jg
mov
adc
in
fnsave
mov
rcl
inc
setno
cmp
pop
lods
and
dec
mov
stos
mov
int
cmp
sar
sbb
cs
adc
mov
rcl
jecxz
jnp
subl
es
inc
mov
fdivrp
jg
jge
fwait
pop
sbb
shlb
xchg
inc
mov
and
ljmp
or
mov
xchg
mov
rsm
js
orl
clc
imul
mov
add
js
or
test
pushf
lds
clc
xor
adc
push
adc
and
sub
jl
mov
daa
pop
mov
outsb
cmp
xchg
call
jmp
fidivrs
pop
outsl
call
scas
push
or
add
aaa
xchg
popa
insl
movsl
cmp
mov
pop
jl
mov
dec
jecxz
push
jp
outsl
out
xchg
cs
adc
push
leave
sti
xor
add
iret
loopne
jno
sub
in
jge
xor
jb
das
mov
inc
les
add
pop
mov
incl
rclb
aam
adc
or
les
and
sbb
and
jg
testl
or
add
inc
lret
jge
inc
push
sub
mov
cmp
or
lahf
into
cmp
push
adc
mov
push
cwtl
adc
pop
stc
pop
cmovae
loope
bswap
jno
dec
sti
inc
cmp
inc
mov
fldenv
sbb
es
dec
gs
div
cmp
mov
lock
sub
sbb
add
jp
sbb
mov
inc
sbb
outsl
mov
pop
mov
push
cmp
pop
idivl
adc
mov
adc
and
repz
jp,pt
aas
xchg
or
movsb
or
pushf
fcomps
test
loop
sbb
ljmp
cmc
pop
fbstp
repz
push
pushf
jl
sbb
test
std
bound
mov
mov
or
mov
idivl
xchg
push
pop
test
lahf
xchg
ds
add
mov
scas
pusha
jp
push
mov
mov
iret
lahf
out
inc
arpl
clc
push
fbstp
ljmp
js
adc
push
movsb
sarl
push
pop
pop
push
int3
in
cmpsb
in
dec
mov
jo
pop
and
std
and
inc
adc
imul
adc
jmp
lock
pop
test
test
js
and
into
lret
mov
mov
push
popa
jnp
cmpl
test
test
fsubp
dec
add
test
outsb
repnz
and
test
push
dec
dec
fnsave
sub
mov
dec
sub
and
adcb
or
add
idivl
push
movsb
add
ret
out
jp
shl
sbb
loopne
jg
jl
stc
sbb
mov
adc
sbbb
lods
je
stc
fwait
mov
lret
sbb
loopne
mov
test
xchg
fnstenv
cmpsl
call
rolb
movl
imul
lahf
sub
pop
jle
je
add
pusha
movhps
or
adc
cmp
mov
pop
dec
out
add
loopne
mov
adc
and
xchg
push
xchg
popf
outsb
arpl
and
loop
push
xchg
inc
in
pusha
fsubl
xchg
cmp
sarb
pop
pop
out
repz
cmp
iret
lds
jne
divl
push
mov
xchg
mov
xchg
lea
popf
insb
dec
insl
out
outsb
sbb
nop
inc
xchg
shld
mov
test
ret
xchg
mov
stc
jo
sub
int3
push
and
fsubs
mov
insl
bound
inc
mov
testb
fistl
int3
xchg
movl
cli
ret
xor
cmpsb
jae
enter
mov
clc
in
and
xor
dec
cld
mov
jecxz
jg
sub
adc
adcl
test
pop
push
sbb
xor
cmpsl
enter
cmp
mov
loopne
push
dec
mov
jns
leave
sbb
lret
int3
cmp
jb
xor
mov
jnp
outsl
jns
stos
dec
dec
test
mov
popa
ret
stc
shlb
call
sub
xchg
movsb
lea
imull
inc
or
mov
dec
or
sub
fidivl
push
cmpsl
sbbl
loope
mov
ljmp
add
sub
inc
jl
das
nop
inc
es
cmpsl
loope
and
out
sbb
adc
xchg
clc
sbbb
pop
lods
pop
daa
lcall
pop
scas
or
xchg
loope
rcl
dec
xchg
adc
je
scas
mov
push
test
into
shr
lcall
gs
ja
mov
movsb
aas
pop
xor
lds
rcrl
movsb
fistpl
test
pop
push
int3
or
cld
inc
aam
adc
sub
sub
hlt
or
mov
inc
mov
cmp
mov
mov
pop
xor
stos
push
int
mov
mov
scas
ds
dec
adc
or
sbb
aas
pop
sbb
mov
mov
in
clc
mov
mov
or
push
jno
push
jge
jne
jo
pushf
xchg
stos
cld
mov
aam
pusha
mov
xchg
mov
test
in
mov
cmp
or
sbb
call
or
incl
cmc
push
popa
cmp
push
das
lock
cmp
mov
movsl
test
lock
mov
cmp
xor
lds
jae
movsb
loop
pop
in
push
or
bound
enter
adc
jecxz
inc
bound
call
sbb
dec
mov
mov
mov
dec
sbb
movsb
aad
xor
xchg
mov
div
es
adc
and
and
fmuls
mov
mov
mov
xchg
and
pop
push
jbe
icebp
jns
jbe
int3
cmc
jne
push
or
std
cmp
test
mov
push
lahf
out
or
xchg
jge
loopne
sti
dec
pop
cmp
cs
xchg
jo
xchg
fisttpl
mov
sub
arpl
test
hlt
and
xor
les
mov
scas
btr
adc
mov
insl
mov
enter
or
mov
in
jne
mov
rcrb
mov
inc
inc
push
rorl
push
add
and
ss
dec
out
fnstsw
sub
andb
mov
sti
xchg
ret
xchg
pop
insb
jno
dec
mov
movl
imul
pop
or
cwtl
mov
rcll
test
pop
test
mov
int
lret
xchg
jmp
fists
in
adc
xor
inc
add
jno
orb
dec
sub
std
outsb
dec
sbb
cmp
and
fdiv
int3
and
repnz
lods
outsl
sbb
js
sub
movsb
loop
jb
push
mov
dec
jmp
js
fstps
enter
mov
mov
mov
cmpsb
dec
pop
insl
xchg
jg
pop
negb
lahf
jb
sbb
test
xlat
fildl
pop
push
mov
add
add
cmp
add
inc
inc
cmp
push
sub
lret
sbb
push
ljmp
xchg
xlat
sar
or
mov
hlt
stos
mov
and
jnp
lods
mov
iret
cmp
push
movups
clc
nop
imul
and
fwait
insb
dec
fistpl
push
packuswb
xchg
xchg
or
push
jge
xor
lret
fcomps
dec
cmp
mov
or
gs
push
mov
mov
cli
frstpm(287
or
int3
jns
push
fildll
addb
out
adc
xchg
roll
cmp
push
add
jg
ljmp
jg
int3
ret
add
rol
aas
dec
lock
ficoml
cmp
xor
push
jns
enter
std
aam
jmp
cmp
lret
mov
mul
sahf
lea
aaa
sbb
insl
sahf
xchg
push
rorb
xlat
mov
mov
imul
dec
or
stos
in
dec
int3
imul
mov
jecxz
mov
addr16
sub
or
pop
sub
push
dec
xorb
pop
adc
xlat
adc
or
push
xlat
repz
adc
mov
adc
lea
das
bnd
lods
mov
shlb
xchg
mov
cmpl
pop
and
je
js
push
stc
and
dec
pop
in
xchg
cmp
call
imul
jnp
std
push
ja
jbe
outsb
divl
push
pushf
lds
mov
xchg
xchg
mov
enter
jns
jecxz
cli
fimull
dec
cmp
mov
jo
sub
mov
aad
loope
xchg
in
jmp
stc
xchg
jle
cmc
inc
imul
bound
adc
push
stc
sub
add
and
nop
or
pop
push
inc
mov
cmpsl
in
cmp
mov
sbb
loop
fsub
and
jbe
xchg
rcrb
dec
lret
sub
jbe
test
call
mov
cmp
ret
stos
imul
sub
inc
mov
pop
jle
out
push
loope
es
aad
es
imul
stos
repnz
jecxz
cmc
das
cmovge
filds
mov
scas
mov
add
jl
out
gs
xchg
and
mov
cmpsb
les
jns
popf
or
out
pop
and
pusha
rcr
push
stos
out
in
movsl
dec
and
inc
mov
test
and
and
push
into
and
pop
in
and
fstps
pushf
mov
lods
fs
aad
mov
xor
clc
jecxz
loope
stos
fmull
stos
stos
inc
and
shr
cmpsb
mull
pop
add
mov
fldcw
adc
cli
fimuls
push
mov
js
in
je
pop
lods
dec
sbb
sub
mov
data16
movsb
in
dec
jl
pusha
adc
cmp
lds
lcall
pushf
add
adc
push
jecxz
hlt
in
push
xchg
icebp
arpl
add
mov
sbb
lods
or
xchg
push
xor
mov
gs
adc
xor
out
imul
xor
jno
xor
enter
imul
push
add
jae
or
push
pushf
push
sbb
mov
aad
xchg
out
mov
pop
outsl
sub
ret
mov
lea
and
mov
sti
mov
cs
or
or
hlt
dec
shl
sti
aaa
mov
imul
std
sbb
shll
xor
cmc
dec
or
and
fldz
sub
inc
in
push
add
push
cs
clc
and
jge
loop
fucom
int3
mov
clc
xor
mull
mov
mov
lock
and
test
add
pop
and
scas
faddl
cmp
or
daa
xor
mov
dec
sub
lods
stc
mov
sub
sub
add
pop
cli
mov
adc
xchg
xor
lcall
sub
mov
lds
insb
fs
or
pop
and
ds
cld
xor
xlat
push
in
dec
notb
lahf
out
das
icebp
pop
sbb
bound
subl
les
jo
sbb
les
outsb
adc
rclb
loopne
cmp
mov
aad
push
testb
hlt
andl
or
jb
in
dec
outsl
ja
arpl
js
sbb
arpl
arpl
push
pushf
test
lock
shr
cltd
mov
dec
jg
sub
mov
push
out
mov
pushl
adc
and
sbb
les
mov
or
movsl
int3
and
dec
mov
xchg
icebp
or
test
cmp
and
testl
push
lea
les
cmp
in
rolb
adc
fcompl
jge
cmp
outsb
std
loopne
dec
insl
inc
mov
adc
imul
ljmp
and
orb
inc
mov
push
push
and
cmpsl
cmpsl
cltd
std
mov
pop
lods
push
stos
call
push
jl
ja
lea
push
popa
int
mov
leave
or
xchg
or
arpl
sbb
or
test
out
sub
and
inc
cmp
jo
xchg
imul
xchg
xor
pusha
inc
or
ss
sahf
das
sub
push
mov
adc
je
btc
int
jl
mov
mov
sti
shll
les
sti
ja
cmc
ja
sub
pusha
add
aaa
addr16
xchg
sbb
stc
xor
pop
pop
and
clc
push
inc
cs
sbb
stc
push
fistl
inc
pop
into
mov
push
adc
mov
clc
add
sub
fiadds
in
jae
adc
cmp
push
mov
sub
push
mov
jae
mov
pop
pop
movsb
xchg
ret
lcall
outsl
stos
ficoml
lock
out
div
xchg
lods
in
mov
mov
mov
sub
mov
hlt
or
arpl
fcomp
pop
jp
pop
rcl
ficoml
out
mov
ja
mov
pushf
inc
call
fildll
fisttpll
movsl
test
inc
pop
pushf
jg
push
enter
add
stos
add
pop
pop
ljmp
outsl
mov
in
clc
out
out
scas
sub
bound
jmp
dec
xlat
cmp
sti
xor
data16
pop
mov
or
lods
test
mov
mov
loop
and
mov
dec
popa
fstpt
jmp
ljmp
cmp
imulb
and
adc
mov
pop
or
cli
ljmp
dec
push
cmp
or
lahf
sti
lock
add
lea
fimuls
jg
pop
lea
and
imul
bound
jnp
addl
inc
mov
and
ss
or
mov
lea
test
add
push
cltd
ss
sub
add
lret
ljmp
iret
mov
sahf
mov
sub
sub
clc
addb
push
inc
mov
popa
mov
xchg
sbb
xchg
mov
mov
mov
xchg
jae
movups
data16
mov
outsl
xor
pop
adc
cmp
sbb
adc
fcoms
in
mov
sbb
fstpt
imul
and
sub
jo
loope
pop
scas
pop
insb
fsubrl
stos
je
shl
adc
xchg
das
jb
sub
fwait
sbbl
cmc
xchg
mov
pop
das
sub
in
daa
pop
adc
mov
movsl
push
lahf
mov
mov
mov
sub
popf
xor
test
mov
pop
cmp
xlat
pushf
push
out
sub
mov
xchg
cld
icebp
and
je
xchg
add
shll
mov
pop
and
aam
icebp
xor
xor
sbb
jl
mov
mov
arpl
call
aam
pop
cmp
cmp
in
decb
inc
xlat
xor
out
sbb
dec
repz
sbb
cmp
sbb
bound
xchg
sbb
iret
inc
sub
les
insl
dec
mov
test
into
lods
stos
lret
negb
popf
lret
jp
cmp
leave
mov
inc
push
les
lock
pop
leave
orb
adcb
push
sub
fldenv
loope
push
inc
mov
adc
sub
fiaddl
add
mov
js
jmp
addl
or
cmpsb
push
xor
mov
stos
push
aaa
sub
sbb
in
fs
adc
lret
cwtl
xchg
adc
sbb
cmc
dec
mov
aaa
aaa
ss
cmp
rorl
push
cmp
sub
cwtl
cmp
sub
and
call
stos
fwait
push
and
mov
mov
fisttps
mov
ret
scas
stos
sarb
mov
push
pushf
std
jmp
sbb
sub
xor
stos
aad
add
push
mov
sub
test
mov
fwait
ret
mov
bound
aam
mov
mov
push
sbb
lcall
mov
int
repnz
fwait
adcb
jecxz
xchg
ja
bound
pop
sbb
or
cltd
mov
cmp
pop
xchg
add
add
inc
into
out
mov
push
aam
cltd
xchg
and
stos
mov
in
dec
call
and
mov
xchg
or
stc
jae
xor
fsubrl
add
sbb
ret
jmp
test
dec
pushf
mov
clc
add
mov
cmp
sub
cmp
xchg
roll
and
and
scas
ror
cmp
addr16
cmp
inc
ja
lock
or
orl
nop
rcr
cmpb
pop
xor
mov
mov
inc
xchg
lds
sub
stos
andl
movsb
mov
push
cltd
adc
hlt
xchg
aam
mov
add
mov
jecxz
test
and
cmp
xor
lret
int3
cmp
sti
rcrb
fnstsw
mov
lock
adc
scas
cmp
mov
stos
ljmp
fistl
cmp
xor
jg
movl
lods
adc
mov
movsb
repnz
add
push
jp
mov
test
aad
xchg
dec
lret
shll
push
pushf
pop
out
ds
xor
or
jge
loop
pop
adc
stc
fadd
sti
mov
mov
sbb
fcmovb
inc
fcoms
or
mov
int
rorb
fistps
fbstp
cmp
adc
lahf
lds
push
xchg
dec
add
xchg
stos
add
mov
das
add
cmp
inc
dec
pushf
shll
adcb
insb
mov
mov
mov
jle
jnp
mov
jge
inc
or
inc
add
jns
or
subb
jg
je
adc
outsl
sub
in
adc
dec
xchg
pop
sub
xor
lods
inc
or
jge
mov
inc
popf
and
xor
push
mov
fstl
je
push
cmp
jbe
test
dec
or
xor
xchg
outsl
cmp
or
dec
ds
or
dec
adc
fstpl
xchg
and
mov
stc
pop
mov
movsl
lods
push
cmp
cmpsl
test
test
adc
paddq
mov
and
lods
jbe
mov
es
push
cmp
jno
sub
shll
movsb
imul
dec
jmp
mov
adc
push
cmp
lahf
cmc
jl
loopne
dec
mov
sahf
data16
cmpsb
in
jno
lahf
lahf
int
test
mov
jno
push
sarb
test
arpl
ret
pop
add
out
cmp
jae
mov
cmpb
mov
xor
stc
inc
lret
inc
mov
jne
mov
adc
mov
jb
dec
xchg
pop
clc
mov
int
shrl
mov
iret
jmp
mov
xor
negl
sub
lahf
pusha
shll
push
inc
sub
imul
cwtl
push
lea
cmpb
jae
xchg
les
scas
pop
enter
or
sbb
sti
cmpsl
dec
jnp
add
cmp
push
roll
inc
aam
push
std
into
sub
mov
iret
ret
dec
test
ret
out
inc
js
out
mov
push
lds
jp
sahf
es
jge
push
cwtl
push
movsl
mov
pop
push
push
pop
or
addr16
fs
jne
int
inc
les
rcl
daa
adc
ljmp
mov
insl
push
arpl
adc
cmp
nop
lds
aas
flds
call
inc
negb
fldl
jo
adc
cmp
lret
dec
cmp
pop
or
dec
shlb
xchg
push
dec
xchg
cli
sti
mov
push
mov
and
mov
mov
push
adc
push
punpckhdq
inc
or
inc
inc
lahf
enter
sbb
inc
shrl
arpl
dec
cmc
jmp
or
mov
and
xchg
aas
cli
pop
sarb
push
fsub
jg
mov
stos
fisttpll
rorb
adc
adc
std
xchg
jbe
ss
sti
mov
push
js
jmp
les
sub
in
movsb
cmpsb
movsl
push
mov
cld
imul
inc
das
sub
stos
cmp
cs
dec
push
stos
fwait
test
iret
pop
jle
adc
aam
mov
xchg
push
loope
lods
inc
cmc
lret
and
mov
cmp
daa
notl
dec
sub
test
aas
xchg
insl
aas
and
outsb
imul
xchg
int
ret
xchg
inc
adc
jae
pop
adc
dec
shll
mov
xchg
jg
xchg
mov
cmpb
sti
stc
jmp
loopne
sub
or
cwtl
movsl
xchg
int3
xor
mull
mov
js
pop
loopne
ds
xchg
inc
ja
jo
stc
lea
les
pop
adc
ret
fsubs
xchg
push
call
mov
and
sbb
lods
popa
das
adc
adc
aad
adc
in
add
orl
jmp
sbb
popf
sub
push
ss
sbb
stc
push
int
adc
push
lock
insl
inc
xchg
lret
dec
mov
push
popl
cmpl
jmp
jg
sahf
mov
rorl
ss
fisubrs
and
xchg
xlat
sub
mov
fwait
stos
in
lcall
sbb
jbe
pushl
add
push
add
adc
xchg
mov
dec
into
roll
dec
xchg
leave
push
fidivrs
mov
adc
aam
mov
add
push
lds
lea
adc
jo
loopne
or
rcl
add
jl
mov
inc
push
nop
lea
mov
mov
enter
and
aam
aaa
andl
arpl
gs
cli
test
hlt
pop
data16
jae
adc
mov
cmp
hlt
rcl
rcrb
push
sbb
fcompl
loop
xchg
mov
imul
push
push
jg
inc
xor
cltd
pop
daa
cs
cld
xchg
dec
pop
mov
call
rcrb
out
call
mov
es
sub
rorb
and
sahf
inc
fimull
jmp
and
xor
lds
mov
mov
adc
divb
popf
bound
cmc
icebp
inc
sbb
lods
cmp
jno
xor
push
ds
mov
jp
push
cmpsb
fs
add
mov
adcb
push
and
and
sbb
or
imul
call
sahf
cmp
pop
test
jnp
pop
sbb
push
mov
mov
pop
xor
loop
and
sub
cmp
fwait
mov
fs
mov
sub
jno
adc
rolb
push
test
lds
mov
into
ljmp
cli
add
push
jle
push
insl
inc
movsb
xor
mov
paddq
jbe
das
adc
out
gs
sbb
push
inc
mulb
cmp
lcall
outsb
push
mov
jae
pop
enter
jcxz
sbb
push
xor
pushf
roll
sbb
stos
cmp
mov
add
flds
enter
mov
in
dec
cmp
mov
push
xchg
push
int
stc
xchg
call
lcall
aad
leave
mov
mov
mov
cmp
xor
jns
int
xchg
scas
daa
popf
int3
pusha
mov
mov
fwait
int
std
ret
pop
rclb
je
je
ret
test
push
mov
mov
or
loopne
cs
inc
fld
mov
xor
push
push
lds
popf
dec
int
fnsave
in
mov
xor
jb
loopne
mov
xorb
mov
push
xlat
movsl
push
arpl
loope
cmp
mov
insl
pop
daa
or
loope
fsubrl
mov
lret
and
sbb
std
sub
jno
dec
xchg
sbb
lret
std
or
out
js
mov
push
xchg
aaa
mov
pop
or
aaa
mov
pop
frstor
add
in
inc
mov
inc
cli
cmc
and
xchg
xchg
loope
ror
data16
mov
add
jbe
test
and
push
ds
fsts
mov
jb
pop
popa
lret
dec
in
sahf
adc
ds
jecxz
popa
mov
outsl
leave
mov
push
call
fistl
xor
adc
movsb
add
mov
mov
mov
cld
in
or
pop
adc
inc
mov
lock
enter
out
dec
xor
lret
mov
inc
adcb
push
std
push
cs
imul
enter
inc
enter
scas
mov
lret
push
in
inc
adc
pop
aas
int3
js
mov
xchg
std
test
cmp
pop
neg
xor
xor
or
les
cmp
dec
bound
stc
pushf
push
fcoml
mov
cli
xor
repz
leave
test
iret
inc
test
andl
push
sub
cmp
aam
jno
cmc
je
adc
inc
jnp
adc
inc
mov
mov
add
push
testl
sarl
push
jle
mov
sub
sti
out
push
cltd
lods
pop
icebp
rep
iret
dec
jl
icebp
mov
jno
cmp
mov
adc
inc
cwtl
or
rorl
repz
aas
xor
sub
mov
sahf
push
mov
jne
sarb
mov
mov
in
in
pop
mov
pushf
sbb
add
inc
xor
and
add
loope
cltd
lret
and
jno
mov
sar
xor
sbbb
mov
mov
rorb
ficoms
push
push
cmp
pop
inc
das
outsb
mov
js
push
inc
sub
test
add
lds
mov
cwtl
jae
inc
jle
xchg
push
push
notl
xorl
adc
ljmp
push
in
fs
jne
in
mov
adc
in
repnz
push
scas
add
inc
adc
insb
mov
mov
lds
mov
jecxz
addr16
int
and
je
sub
in
ret
call
pop
xor
aas
dec
repnz
lods
enter
movsl
jns
sbb
int
in
out
outsb
push
cmc
orl
scas
push
add
pop
push
or
mov
adc
in
loope
sahf
add
repnz
ret
and
lea
js
test
mov
push
lods
mov
dec
inc
pop
out
insl
mov
push
out
add
sbb
movsb
or
test
add
fisubrl
lahf
xor
sbb
sub
cld
xor
inc
aad
ffree
cmpsl
xor
ss
daa
lds
pop
data16
jle
mov
stos
mov
rcrl
jp
sti
movsl
iret
and
add
or
pusha
cmc
sbb
idivl
cmpl
mov
jecxz
arpl
insl
add
lahf
lcall
add
jmp
cmp
fdivrs
and
enter
inc
mov
xor
add
pop
adc
mov
dec
das
sub
shll
ret
adc
cmpsb
push
in
aas
lods
aaa
nop
sub
push
push
cmp
jmp
and
jne
ret
cltd
iret
sbb
dec
adc
dec
loop
push
ljmp
fs
pop
pop
mov
inc
xchg
or
into
push
inc
test
inc
orl
popf
adc
insb
cmp
orl
cli
lret
sbb
jo
jns
aam
adc
mov
lahf
hlt
xchg
jge
jns
xchg
jne
push
aas
rcr
sub
int3
iret
out
loopne
push
push
cmpb
push
inc
jae
xor
int3
int
cmp
nop
cmp
jnp
jmp
dec
rcrb
xor
movsl
push
lds
mov
in
stc
dec
loope
jo
gs
nop
bound
mov
into
movsb
inc
sub
xchg
xor
movsl
cmc
push
outsb
aad
int
mov
mov
in
dec
lock
mov
push
addr16
and
mov
inc
mov
sbb
das
in
into
div
jge
xchg
data16
aam
ret
jg
mov
imull
xor
iret
outsl
mov
and
iret
ss
sub
adc
pusha
pop
in
jbe
movsb
stos
addr16
inc
fmuls
xchg
xchg
mov
cmp
rol
orb
in
pushl
fs
mov
cld
fldenv
cmpsl
xchg
lods
push
cmp
fcom
pop
dec
push
sub
mov
lret
dec
call
adc
adc
jmp
aad
sarl
sbb
in
adc
pop
repnz
xchg
jb
mov
gs
insb
pop
mov
pusha
xchg
test
dec
push
fildl
insb
xor
mov
mov
inc
sbb
lods
xchg
mov
stc
push
xchg
pop
test
sbb
pop
mov
inc
sbb
testl
mov
sbb
shlb
jns
jecxz
in
jmp
lret
mov
or
mov
enterw
dec
pusha
mov
add
sti
mov
shrb
stos
inc
mov
and
je
ret
popf
jne
sub
cmpsb
or
or
out
testl
loope
loop
mov
std
std
rol
mov
sub
sbb
negb
ja
aaa
inc
jne
ret
inc
rorl
mov
jmp
sbb
mov
xchg
fcomp
and
stc
xor
sbb
or
les
ficomps
inc
inc
mov
sbb
repz
inc
dec
xor
sahf
xchg
inc
jo
data16
bound
mov
fld
xor
stos
push
cmp
push
xchg
fildl
mov
fsubr
mov
pop
sbb
inc
pop
gs
aaa
push
inc
mov
out
adc
sub
jno
adc
jnp
iret
sbb
xor
jne
push
pushf
sub
outsb
or
dec
push
sahf
icebp
sub
scas
mov
scas
cmc
rolb
cltd
fsts
mov
adc
scas
mov
jb
lret
push
push
fistl
mov
lret
add
inc
sub
cs
mov
ljmp
jle
mov
aas
mov
xlat
cs
fcmovnb
repz
ficomps
sbb
inc
std
and
sahf
fisubl
out
cmc
cmp
jge
inc
loope
jmp
jmp
out
iret
jecxz
hlt
adc
and
sahf
stos
xchg
roll
ror
and
rcr
popf
mov
inc
add
pop
lret
lea
mov
inc
mov
adc
dec
fdivrl
mov
vsubpd
sbb
xchg
mov
pop
ljmp
push
push
push
cmp
push
fcmovbe
pop
sub
and
pop
or
dec
insl
pushf
sub
pop
icebp
ljmp
dec
outsl
outsl
lock
cmpsb
mov
gs
enter
dec
mov
inc
push
and
es
jne
roll
adc
xor
mov
add
and
iret
test
jno
mov
xor
out
shll
or
jb
push
test
and
lock
push
jbe
loop
mov
nop
pop
cli
cmp
int
bound
sti
repz
ja
fidivrl
sbb
cmp
inc
sbb
iret
int3
dec
mov
in
jmp
xorb
pushf
xor
and
popa
push
mov
mull
out
inc
xor
out
xorb
imul
movsl
pop
xorl
shlb
repnz
outsl
into
daa
rcll
cli
repnz
jle
push
fcoms
in
and
inc
bound
jne
jle
jno
popf
inc
lahf
push
mov
lds
cmpsb
and
out
dec
dec
data16
cmp
adcl
adc
lds
inc
outsl
enter
enter
mov
or
clc
pop
ret
cmp
push
and
pop
fwait
test
mov
icebp
dec
fidivs
adc
mov
aam
int
dec
jno
lret
insb
repnz
push
ja
fcmovb
inc
cmp
loope
outsl
shlb
mov
push
or
xchg
mov
sarl
sbb
cmc
cmp
cld
sub
add
pop
pop
mov
mov
daa
cltd
and
pusha
and
mov
mov
mov
sub
faddl
daa
cld
imul
rcll
std
shlb
dec
mov
mov
inc
adc
loopne
mov
xchg
fstps
push
push
inc
idivl
or
pop
pop
push
cmpb
outsl
setae
and
jg
push
push
inc
pop
je
dec
jb
sbb
data16
sbb
cmpsl
mov
cmp
les
jno
mov
rcll
aas
or
or
jmp
jbe
daa
loop
mov
and
stc
sub
adc
pop
inc
in
in
test
test
ret
cmpsb
sbb
mov
cmpsb
cmp
jno
xor
cmp
pop
fs
imulb
pop
stos
lret
pop
stos
adc
es
out
ljmp
and
pop
xchg
push
jle
mov
std
sti
xor
add
popa
mov
pop
inc
xor
fwait
xor
setbe
out
mov
adc
rcr
aas
outsb
scas
inc
inc
adc
cltd
and
cmp
aas
das
mulb
enter
ret
data16
dec
fnstcw
or
inc
daa
cmpsl
loop
fimuls
add
cmp
jge
push
xchg
stos
mov
inc
push
lcall
mov
mov
cmp
dec
fistl
sub
sub
jmp
mov
fistl
adc
pushf
sbb
nop
fdivrp
and
arpl
outsb
sar
js
test
aaa
or
xor
xchg
lcall
sbb
or
negl
iret
aas
mov
ja
cs
xchg
inc
sbb
xor
sbbl
mov
orl
add
sti
sub
xor
mov
mov
or
jmp
imul
jae
add
jae
call
sbb
outsb
sub
stc
cmp
push
icebp
or
push
ret
test
jne
lret
inc
sti
fs
in
hlt
jno
push
mov
das
xchg
push
dec
ljmp
mov
out
cli
rclb
arpl
cmp
mov
push
pop
leave
pop
jecxz
faddp
adc
add
jo
mov
cmp
sub
sub
pop
cmp
sbb
mov
pop
imul
fiadds
insl
add
mov
or
std
cmpsb
scas
mov
mov
add
not
insb
lret
call
divb
int
mov
mov
mov
xchg
or
pop
cmpsl
push
jo
and
pop
mov
cltd
or
aam
add
or
shr
lds
in
prefetch
or
shl
shl
arpl
imul
sub
and
outsl
mov
into
and
shrb
ret
pop
xchg
mov
mov
lock
int
data16
lea
sub
pop
cli
dec
adc
aad
shlb
popa
dec
aad
and
jl
xchg
push
rcrb
mov
and
jmp
cmp
xlat
adc
outsl
repnz
dec
cwtl
lock
push
inc
test
lahf
add
adc
out
cmc
je
add
popf
dec
xor
nop
adc
inc
push
adc
mov
mov
mov
fmull
mov
mov
lcall
ret
cli
jp
dec
negb
shrl
dec
movsl
inc
sahf
cltd
jg
xlat
and
mov
cs
cmp
rol
in
shl
repz
ja
sub
xchg
punpckhdq
push
sti
push
fsub
enter
dec
mov
fisubs
mov
stos
pop
adc
in
aam
sub
sub
add
inc
jecxz
pop
or
bound
gs
stos
ja
in
jo
sti
addr16
aam
scas
pop
stos
rclb
enter
push
cmp
and
add
scas
hlt
add
cltd
xor
mov
or
cmp
cmp
pop
jnp
cmp
sbb
fisubs
daa
das
xor
xorl
pop
aaa
rol
dec
cmc
push
hlt
popf
stos
cwtl
sub
push
jge
test
ret
leave
ds
fldl
es
pop
and
bound
or
mov
test
sub
inc
js
pop
cmpsl
push
push
xor
mov
scas
inc
xchg
sbb
cmp
and
loopne
jmp
inc
scas
pop
addr16
xchg
in
stos
sti
js
jg
fimuls
sub
aam
pop
sub
lods
xchg
inc
andl
sbb
sti
cmp
push
xor
jl
fcoml
test
je
jns
xchg
cmp
jne
sbb
sub
push
lahf
mov
insb
sub
into
test
scas
cmp
adc
mov
mov
or
shrb
add
pop
mov
adc
inc
cmp
scas
mov
fnsave
inc
xor
imul
pop
shl
push
dec
xor
shrb
decb
insb
loop
cmp
ljmp
xchg
roll
cmp
push
inc
mov
inc
cmpsb
mov
std
in
test
xor
lock
popf
popa
inc
js
lods
or
push
and
in
icebp
lret
into
pop
xlat
inc
int3
xchg
les
fwait
dec
xchg
jae
add
cli
and
popa
sbb
mov
sahf
sub
jg
cmpsl
jb
loopne
xchg
jns
loope
mov
mov
ret
aaa
xchg
lret
pusha
mov
cmovno
js
jbe
jmp
and
mov
insl
push
pushl
js
inc
cli
stc
sahf
mov
add
test
push
int3
or
popa
test
je
sbb
loopne
pop
xchg
fwait
lds
gs
testb
pop
adc
int3
push
mov
mov
sbb
pop
inc
pop
inc
mov
test
dec
decl
sub
out
push
pop
stos
or
loop
ljmp
test
xor
outsb
xchg
mov
and
les
jg
jno
dec
es
sbb
jo
mov
imul
jae
in
and
ror
sbb
daa
into
and
lcall
cli
mov
fmul
adc
movsl
or
fs
dec
mov
ja
inc
movsl
and
xchg
sbb
push
and
inc
xlat
dec
adc
data16
sbb
std
xchg
push
ljmp
push
mov
std
stos
jb
out
and
in
xchg
cmpsl
jp
mov
adc
mov
fisttps
adc
jle
enter
fwait
xor
xchg
clc
mov
mov
and
les
push
addr16
dec
lea
imul
mov
push
not
jnp
push
inc
cmp
repz
shlb
rol
fdivrs
out
fldt
push
adc
dec
pop
adc
enter
dec
fdivp
mov
jbe
mov
inc
jg
mov
mov
cmp
mov
inc
push
daa
fcmovnu
shlb
add
or
xor
push
jle
int
addl
pop
add
mov
adc
ss
jle
iretw
and
dec
shl
jmp
mov
xchg
push
sarb
xchg
cmp
sbb
loopne
rcll
scas
xchg
inc
pop
cli
sub
fmull
repnz
mov
adc
dec
sbb
sbb
arpl
adc
xchg
mov
idivb
mull
pop
arpl
or
mov
into
or
fstps
orl
jb
sub
cli
push
imul
sub
in
inc
js
dec
rcr
xchg
mov
mov
ss
mov
dec
das
int3
mov
iret
add
fsubrs
or
std
fprem
int
cmp
test
adc
add
xchg
orl
pop
push
jne
jg
pmaxsw
lret
scas
push
loopne
std
add
add
cmp
lret
jno
cmp
cltd
or
lret
mov
add
mov
jbe
jmp
mov
rcll
pushf
in
push
cltd
mov
enter
jmp
sub
sti
fdivr
imul
cmc
and
clc
push
iret
pop
jnp
daa
dec
outsb
xchg
dec
add
movsb
out
sbb
mov
test
out
out
sub
lods
adc
bound
xchg
test
cmpsb
je
mov
mov
icebp
loop
fdivl
nop
add
mov
fadds
push
jo
jns
jl
sub
stos
ror
cs
test
xor
push
and
or
jmp
xor
inc
and
lds
xchg
aam
cmc
insl
inc
add
mov
mov
xorb
mov
mov
out
rcll
xor
jge
sub
inc
xor
mov
cmp
cmp
das
cmp
gs
pop
pusha
int3
push
loopne
cli
cmpsl
inc
jbe
and
adc
inc
je
and
rcrb
addb
bound
cli
pop
scas
sbb
or
imull
xor
sub
les
ss
jmp
dec
popa
xor
jns
filds
lock
jae
inc
shlb
lea
push
sbbb
mov
cmpsb
sbb
cltd
sahf
xor
mov
or
movsl
push
loope
insb
aad
jl
lret
pop
arpl
or
pop
push
dec
and
mov
adc
sbb
jns
leave
daa
rolb
test
sub
push
dec
out
pop
jecxz
pop
xor
jmp
imul
cmp
cmp
shl
jb
cmc
jg
pop
jno
push
or
or
imul
or
ret
lret
notb
jl
lods
and
nop
popf
pop
mov
xchg
mulb
outsb
sbb
inc
sub
and
xor
fisttpll
fabs
pop
or
jg
adc
push
inc
out
add
dec
jne
in
add
xlat
shlb
sub
pop
push
lea
dec
mov
sbb
leave
test
push
mov
or
mov
and
mov
add
push
pusha
lods
scas
ds
test
movsb
stc
sub
mov
mull
cmp
loop
movsl
fldt
int
dec
inc
inc
mov
ret
xchg
scas
cmc
xchg
jmp
mov
and
sub
das
mov
icebp
push
mov
and
int3
jl
test
ficompl
pop
shl
mov
and
pop
mov
std
dec
outsl
push
lret
mov
add
mov
popf
mov
in
iret
rclb
andl
push
mov
cmp
jno
pop
add
xor
sbb
fadds
add
sbbl
lahf
push
sub
ret
movl
mov
repz
in
push
rol
or
iret
adc
dec
leave
lods
mov
dec
jo
mov
movsb
xchg
iret
inc
dec
gs
xchg
sahf
push
lret
push
xorl
push
outsb
or
js
jecxz
loope
and
repnz
cwtl
push
and
xor
push
mov
fs
mov
jl
xlat
cwtl
incb
cli
iret
lret
inc
add
movsl
add
push
cmpsb
repnz
dec
fidivrs
dec
add
jbe
push
xchg
pushf
lret
ja
xchg
out
jecxz
mov
repnz
dec
mov
mov
or
ljmp
cmp
movsl
jle
insb
xor
imul
add
adc
orl
xchg
loope
cmp
xor
jecxz
mov
je
sub
cwtl
scas
push
xchg
add
jae
in
mov
sbb
out
mov
lcall
hlt
inc
sbb
sbb
loopne
movsl
cmp
jae
mov
sub
mov
fbld
sarb
sti
fidivrl
rcl
imul
jo
popf
addb
lret
fidivrl
stc
test
orl
mov
mov
xor
inc
mov
into
xchg
fidivs
push
arpl
test
enter
cld
mov
icebp
jns
xor
jg
sub
popf
jb
or
test
and
mov
movsb
inc
rolb
mov
ret
pop
fldl
push
add
outsb
ficomps
add
rclb
pop
sub
psllw
imul
pusha
aad
mov
add
ret
jne
int
mov
inc
es
movaps
fistps
idivb
sub
insl
lods
push
popa
into
jae
dec
mov
shlb
and
adc
dec
jecxz
jge
nop
pop
into
addr16
fmuls
mov
in
mov
cmp
push
cmpb
sub
test
jbe
push
cltd
aaa
js
or
inc
push
jp
mov
lret
je
mov
pop
es
fwait
mov
dec
or
clc
cmp
mov
mov
test
in
std
test
inc
out
or
mov
push
cmp
fucom
adc
xor
or
pop
jne
mov
sbb
or
add
mov
or
shlb
test
sbb
add
pop
shl
scas
rcrl
sub
pop
outsb
test
sub
fstpl
sub
push
shrl
adc
pop
jo
push
pop
je
inc
movsb
and
sar
mov
inc
idiv
sbb
hlt
dec
or
in
and
and
mov
mov
jmp
mov
adc
xchg
add
jae
ss
mov
dec
data16
or
adc
jb
or
shr
les
mov
sbb
mov
ljmp
mov
add
mov
jno
dec
mov
push
jp
das
xchg
cmc
mov
jbe
jb
and
insb
dec
inc
jg
fdivrl
jle
cmpsl
mov
mov
mov
mov
sbb
rcll
or
sbb
stc
pop
pop
imul
test
out
or
pushf
int
mov
fwait
sti
cmp
mov
pop
xchg
pop
mov
cmp
pop
mov
mov
mov
aad
add
and
mov
pop
xchg
add
mov
stc
mov
cmp
fiadds
stos
push
adcb
pop
arpl
sub
out
pop
mov
cli
adc
sbb
imul
mov
dec
fwait
adcl
jecxz
stos
cld
sbb
sbb
jbe
xchg
adc
in
ror
fidivrs
adc
fsubrl
mov
nop
adc
inc
addr16
adc
add
mov
scas
call
lcall
ljmp
mov
xchg
inc
test
push
sbb
scas
xor
je
mov
mov
shrl
std
cmp
or
cmp
xlat
mov
iret
and
push
cld
push
aaa
xchg
inc
imul
int
sbb
repnz
xchg
mov
sti
fucomp
out
ds
lea
shll
and
sbb
scas
mov
popa
mov
or
mov
jge
xchg
in
mov
mov
dec
and
fidivl
or
cli
stc
lods
xchg
out
pop
add
mov
pop
sarl
imul
inc
mov
addb
arpl
lret
ss
js
add
add
popa
mov
fisubrs
sub
leave
inc
mov
into
sti
xchg
xchg
aad
pop
adc
sbb
stos
lods
jae
js
aaa
mov
xchg
or
fwait
mov
jb
mov
push
pop
cmp
int3
push
jg
cmp
jmp
scas
push
cvtdq2ps
sbb
outsl
push
inc
mov
sbb
gs
stos
imul
es
cmp
mov
xor
sub
jb
sbb
adc
into
cmc
jl
repnz
pop
dec
mov
push
outsb
sbbl
inc
stc
aas
aad
scas
cmpsb
add
add
cmp
sub
mov
adc
test
cmp
enter
out
fistps
fistps
push
jne
jecxz
orl
mov
cmp
jb
mov
sub
dec
and
nop
decb
xchg
jl
inc
or
and
cltd
xchg
push
loope
daa
loopne,pn
iret
mov
push
or
fistl
mov
aam
or
test
cmp
call
xor
ja
rorl
lock
push
pop
popa
ja
xchg
not
out
jge
sub
out
and
pop
sbb
dec
dec
xchg
nop
push
sub
lahf
sub
inc
push
adc
fstps
or
push
mov
xchg
gs
push
mov
pushf
in
lret
adc
outsl
xchg
repz
in
sub
lret
cwtl
xchg
je
xor
scas
pop
ret
arpl
xchg
leave
jbe
mov
fildll
cmp
sahf
test
xlat
xchg
lock
xchg
and
jge
push
push
out
test
test
in
fstp
inc
icebp
nop
aad
mov
ds
pushf
loopne
aad
push
inc
jg
daa
dec
jge
xchg
adc
sbb
sbb
mov
movl
push
lret
cs
push
mov
and
mov
fbld
jb
xchg
addr16
push
xor
decb
xchg
je
nop
xchg
ds
test
cld
mov
rcrb
xor
std
clc
loopne
dec
iret
arpl
cmp
cmp
mov
fists
arpl
imul
fmulp
adc
or
or
mov
iret
es
movsl
mov
jg
adc
stos
dec
call
xorl
movsl
outsb
cmc
ds
jb
arpl
dec
aas
lods
lcall
mov
imul
xchg
adc
mov
jmp
and
outsb
outsb
movsb
sub
sub
xchg
cwtl
and
add
adc
and
xor
push
mov
jg
xchg
sub
stos
xor
xchg
repnz
dec
call
mov
add
sub
xchg
cs
aaa
or
push
sbb
ss
rcrb
aam
cmp
add
sub
inc
cmpsb
xchg
push
add
xor
sub
pop
cmp
loopne
push
ljmp
shrl
popf
cmp
dec
xchg
stc
out
add
insb
call
jo
fsubp
into
jecxz
mov
sub
std
dec
cltd
add
sbb
xchg
stc
cld
cmpsb
ja
mov
das
xor
lods
cwtl
dec
xchg
in
pop
out
icebp
sub
fstpl
pop
push
adc
and
jle
cmc
das
mov
leave
adcb
pop
in
add
pushaw
add
jo
xor
notl
fiadds
lock
adc
popa
inc
shrl
xchg
or
fnstcw
mov
lock
xor
xor
adc
lods
addr16
xorl
push
pop
fcompl
cmp
nop
mov
adc
fidivl
cld
fbstp
aam
mov
flds
jge
mov
cmpsb
scas
adc
aaa
vpmaddwd
mov
scas
inc
in
mov
dec
mov
xchg
pop
mov
dec
cmpsl
mov
out
iret
mul
fdivs
mov
add
sub
test
idivl
lahf
or
mov
jnp
fs
shll
out
movsb
stos
or
cmp
mov
in
mov
mov
dec
jns
adc
fcmovb
mov
stos
jp
cli
lahf
xchg
sub
sbb
pop
add
daa
test
jnp
lret
sbb
sbb
stos
gs
fsubl
mov
inc
scas
or
dec
or
jnp
and
cmp
orb
sub
scas
outsb
out
xchg
ret
rclb
adc
jb
lods
ret
mov
pop
mov
fbstp
pushf
inc
sub
cmp
test
mov
aad
pop
movsl
jge
inc
sbb
sub
add
imull
inc
cs
not
dec
outsb
hlt
add
xchg
rorb
out
shll
int
pop
xchg
shrl
push
cmpsb
popa
pop
jno
xor
icebp
pop
lock
fmuls
outsl
cmc
mov
push
gs
dec
mov
cs
jns
lock
outsl
mov
sbb
dec
and
cli
sbb
or
jecxz
bound
stos
jp
add
into
cs
fwait
in
popf
jecxz
cli
cs
pop
andl
push
xor
cmpsb
icebp
daa
ja
popf
pop
fs
imull
cmp
and
idivb
mov
int
ret
pop
xchg
xchg
push
pop
jmp
cmp
dec
or
inc
clc
in
adc
ljmp
mov
add
sahf
fisttpl
mov
in
sbb
mov
cs
cld
movsb
ss
sub
adc
and
xor
lret
sbb
mov
fsubrs
out
test
lds
xchg
xchg
sti
xor
xchg
shrb
clc
xchg
pop
les
push
mov
jno
pop
addr16
pop
pop
mov
jmp
cmp
jbe
or
xchg
lds
or
and
shl
enter
repz
add
movntq
and
inc
sub
repnz
add
sar
sbb
push
rcrb
xchg
sub
out
jp
lcall
or
adc
insb
std
xor
or
inc
mov
sub
pop
aas
leave
mov
test
ja
js
jp
insb
out
dec
mov
pop
cmp
pop
cmp
sub
out
test
out
cld
sbb
fsubrs
push
filds
pop
movsl
int
ja
fisttps
mov
or
xlat
push
sbb
adc
pop
push
shlb
pop
inc
aad
xor
xchg
xchg
xchg
mov
std
lahf
push
push
in
or
cmp
adc
cmp
call
push
int3
pop
out
inc
scas
mov
or
lock
leave
inc
dec
rol
mov
rcrb
fsubl
loope
cmp
jg
loop
rorl
nop
insl
xor
ljmp
dec
in
push
sub
or
mov
mov
addl
pop
pop
les
xchg
sbb
popf
fdivp
jne
int3
xchg
pushf
sbb
enter
mov
xchg
test
jnp
call
sbb
std
jecxz
push
test
push
lods
sar
repnz
sbb
loope
add
idivl
iret
aad
fucomip
stos
cmpsb
cmp
ret
jmp
mov
adc
stos
push
pop
fcomps
jo
xor
jne
stc
dec
insl
jmp
outsb
add
push
cmc
aaa
sub
xchg
sbb
cmp
push
dec
shll
push
cmpsb
sbb
into
loopne
sub
push
sub
sub
ret
ret
jno
out
cwtl
cli
push
and
sahf
dec
mov
cltd
cwtl
push
inc
aaa
xchg
fisubl
inc
ljmp
xor
jbe
repz
mov
and
popf
sub
aad
adc
in
sub
sbb
xchg
push
pop
ds
mov
and
mov
mov
xchg
adc
imul
rorl
inc
cmp
pop
jp
jge
mov
fsts
sbb
sbb
mov
pop
fsubrs
mov
and
arpl
icebp
cld
inc
cmp
inc
cmp
sub
dec
add
mov
or
cld
je
mov
sub
xor
jg
jno
pop
jge
dec
inc
into
mov
mov
cmp
push
push
xchg
xchg
xchg
mov
mov
outsb
sarl
les
lea
pop
jl
push
and
dec
mov
lods
adc
jl
jge
sbb
pop
sbb
pop
fimuls
pop
popf
push
je
sbb
cmpsl
xor
push
cmp
jl
bound
adc
in
test
fldz
outsl
loop
ret
lods
xchg
out
sbb
roll
lea
das
push
adc
rclb
inc
mov
or
int
icebp
adc
add
mov
pop
lock
fistpl
push
jle
adc
lods
push
icebp
mov
int
add
arpl
lods
push
lret
outsl
adc
stc
jmp
push
inc
xchg
xchg
sbb
fchs
or
cmp
clc
lock
and
insl
adc
shrl
cli
dec
dec
sti
push
fdivl
adc
dec
inc
cmpsb
repnz
and
xchg
in
push
xor
jg
and
clc
test
push
aaa
enter
jg
cmpsl
popa
aam
sbb
push
push
dec
ret
add
cmpsl
sub
jg
cwtl
cmp
inc
mov
and
jl
int3
push
fmuls
sbb
fnstenv
mov
and
loope
sbb
pop
pop
std
in
fsubl
push
aaa
movsb
adc
pop
leave
sub
movsl
lahf
sub
mov
std
jb
pop
iret
xchg
in
push
sub
adc
je
pop
push
inc
or
mov
test
xchg
xlat
mov
std
fs
push
and
flds
rorl
push
or
mov
jnp
or
or
jl
xor
and
rcll
cltd
out
adc
clc
mov
jb
insl
cmp
jno
sub
cmc
adc
push
les
out
gs
jg
rcll
test
push
mov
incb
loopne
lcall
jnp
push
push
or
flds
lcall
mov
pop
int3
stc
in
inc
cs
jb
mov
xchg
mov
pop
add
xchg
adc
cmpb
mov
inc
subl
cmpsl
xchg
shrb
js
mov
js
iret
das
nop
sbb
xchg
in
fisttpl
repz
and
out
xchg
lret
inc
cmp
and
xor
iret
and
dec
inc
out
cli
popf
push
mov
out
adc
ret
inc
gs
in
addl
sub
xchg
jno
jl
sub
pop
xchg
pop
fisttps
add
adc
sub
movsl
add
push
xchg
mov
dec
inc
insl
pushf
inc
add
or
pop
add
mov
in
enter
fwait
xor
test
adc
mov
stos
mov
add
pop
push
mov
add
ljmp
es
jecxz
dec
gs
stc
adc
mov
sub
js
call
mov
inc
sbb
inc
arpl
push
or
inc
mov
out
scas
dec
dec
pop
pop
in
nop
adc
add
hlt
bnd
rcr
mov
sub
adcl
push
dec
insb
es
fldenv
cmp
in
add
push
mov
nopl
jg
das
sbb
int3
mov
sbb
rcr
scas
xchg
sub
adc
mov
pop
jmp
or
inc
mov
subb
repnz
mov
std
pop
push
nop
and
cmp
pop
mov
lcall
dec
and
add
les
lret
cld
hlt
cmc
icebp
outsb
pop
add
mov
test
mov
and
pop
addr16
xchg
fidivs
pop
fisubrl
ret
addr16
cmpsb
xorl
push
sub
dec
pop
cmp
in
mov
daa
fcomps
dec
push
loop
test
cli
scas
out
js
xchg
mov
sub
mov
adc
filds
into
in
std
xchg
mov
xor
xchg
pop
inc
mov
push
xor
mov
int3
jno
aas
xlat
lods
dec
mov
mov
mov
mov
adc
jae
mov
arpl
sub
divb
lock
sub
int3
ret
stc
adc
loop
xor
sbb
jmp
dec
outsb
inc
fildll
push
xlat
shrl
movsl
or
xchg
push
in
out
xchg
xchg
ret
test
loope
in
jo
xlat
outsb
nop
jg
dec
and
jne
shll
cld
iret
push
divb
mov
fcmove
sbbb
mov
mov
cli
inc
cltd
in
movsl
cmpsl
push
aaa
push
insl
push
ds
add
loop
inc
lcall
inc
add
fstpt
jb
std
fldcw
sahf
iret
into
lock
test
push
mov
test
test
loopne
aam
xchg
insb
shlb
lea
pop
mov
int3
mov
or
jge
push
les
dec
push
pusha
jne
cli
test
fcoml
lods
lods
and
cmpsl
shll
ljmp
or
incl
fldcw
std
and
push
inc
js
test
shrl
pop
jb
cmc
jae
vpopcntb
fs
dec
xchg
jnp
inc
jbe
popa
jecxz
sbb
pop
in
lods
fwait
popa
in
cmp
xor
push
jecxz
xchg
jle
aaa
cmpsl
cmc
xchg
lods
fwait
pop
push
ljmp
jbe
mov
fadds
push
and
shrl
adc
mov
lds
ja
cmp
mov
test
es
adc
xchg
lds
mov
jg
inc
xchg
mov
ljmp
imul
loop
mov
leave
cmc
icebp
dec
fnstcw
pop
stos
popa
aaa
and
shr
mov
or
xor
lds
sub
or
insl
movsb
lods
bound
gs
xchg
shll
sub
inc
ffreep
mov
xlat
test
std
xchg
outsl
in
out
add
clc
pop
push
or
scas
notl
outsl
xor
jg
gs
jns
inc
sbb
cltd
les
test
sbb
jnp
les
mov
js
xchg
pop
pop
fisubrl
call
adc
daa
mov
push
mov
xor
adcl
xor
fmul
pop
xorb
cmp
dec
aaa
mov
or
jbe
pop
xor
cmpl
scas
pop
ret
xchg
bound
pushf
cmpb
iret
clc
enter
mov
icebp
scas
fiadds
in
dec
dec
push
adcl
call
and
sbb
sbb
jp
data16
dec
adc
fdivl
xlat
xor
fbstp
hlt
pop
mov
push
mov
mov
in
mov
and
and
cwtl
xchg
hlt
mov
out
jns
mov
inc
push
inc
inc
jae
jge
push
fstl
xchg
pop
mov
pusha
mov
jecxz
out
hlt
jmp
test
sub
pop
adc
adc
mov
in
sahf
xchg
xchg
sbb
inc
ret
cltd
sbb
outsb
cmp
lret
call
inc
push
fs
into
mov
scas
or
dec
cmpb
fists
xchg
inc
push
pop
xchg
ja
out
inc
loope
data16
xchg
scas
push
jo
jl
mov
cmp
jnp
jp
jecxz
xor
mov
sbb
pop
loope
in
sub
and
adc
mov
cmp
imul
gs
xor
rcrb
xchg
xor
pop
icebp
cmp
xchg
aad
imulb
aas
ds
jno
int
repz
add
mov
mov
lea
xchg
loopne
ljmp
mov
pusha
call
sahf
popf
add
rolb
outsb
xchg
xor
mov
adc
fisttps
movsl
or
pop
lods
cmp
xchg
adc
int
xchg
xchg
aaa
mov
in
dec
xchg
adcl
lea
mov
jbe
sub
adc
jl
or
or
inc
dec
xor
imul
xor
sub
cs
es
jns
adc
pop
pop
xor
popf
leave
xchg
cli
mov
push
stc
and
jo
pop
stos
jmp
inc
iret
in
adc
fildl
shll
pop
ljmp
cmp
js
or
or
mov
dec
sub
jnp
pop
inc
mov
stos
mov
stc
scas
adc
xor
mov
jnp
xorb
ja,pn
jmp
xor
xchg
sbb
loop
jno
jae
movb
add
lahf
inc
add
ret
cmp
lcall
cli
mov
not
out
adc
lret
jl
pop
mov
stc
xor
int3
shrb
dec
jns
adc
or
push
fnstsw
ret
and
rcll
cwtl
bound
cmc
lock
stos
xor
adc
out
pop
rcll
cs
pop
mov
popf
sbb
sub
push
jo
push
mov
adc
ds
mov
mov
or
fwait
sub
push
inc
adc
jnp
popa
shll
jb
js
movsb
insl
hlt
lret
fs
push
daa
jmp
dec
mov
sbb
mov
inc
or
push
or
in
and
pop
ja
adc
pop
ret
push
xchg
adc
out
cwtl
xchg
out
scas
mov
data16
jb
je
iret
mov
in
stos
pop
push
jle
test
push
repnz
jb
xchg
popa
addb
mov
push
test
sub
dec
or
xchg
xchg
jg
mov
jo
pop
jae
nop
add
test
cmpsb
or
movb
fdiv
push
aaa
or
or
mov
cmc
jae
add
mov
push
movsb
loop
fs
lahf
push
sbbl
adc
sub
in
mov
loope
mov
pop
dec
lock
out
pop
xchg
jecxz
jmp
sub
mov
decl
inc
enter
in
pusha
push
add
jno
pop
js
cmpsb
pop
or
jno
idivb
std
push
lds
or
insl
and
push
xchg
dec
inc
jge
or
cmp
clc
adc
jg
adc
mov
adc
test
aam
stos
xchg
lods
fimull
lods
push
or
sub
ljmp
adc
jge,pn
mov
inc
adc
xlat
jbe
pop
ret
add
mov
sbb
cmp
fistpll
je
and
push
xchg
push
xchg
jp
cs
test
je
mov
addb
and
fnstcw
pop
adc
adc
xor
mov
push
lcall
sbb
fwait
arpl
popf
push
mov
mov
icebp
sbb
aaa
xchg
inc
mov
cmp
push
xchg
adc
adc
cli
jbe
in
mov
mov
lahf
pop
outsl
cltd
cwtl
add
iret
sub
out
jge
sub
in
jge
inc
movsb
and
pop
pop
pmulhw
stos
hlt
idivl
scas
ret
repnz
sbb
dec
mov
mov
lret
out
insb
push
sbb
cli
sbb
out
loop
movsl
pop
jge
jae
int
xor
jge
jns
sbb
add
push
fldcw
jp
scas
xchg
push
repz
add
push
xor
xor
or
xor
push
jne
mov
int3
add
mov
insb
insb
push
push
mov
sbb
jb
push
push
notl
out
mov
fwait
push
stos
or
cmp
popw
adc
bound
fidivl
jg
aaa
xchg
rolb
insb
pop
test
cmp
sbb
pusha
pop
sbb
loopne
mov
push
out
int
test
popf
es
repz
rclb
subb
add
cmp
fwait
movsl
fidivrl
out
jb
cwtl
sub
lods
addr16
jne
jmp
or
sbb
inc
cld
cmp
xchg
mov
into
add
mov
test
adc
out
hlt
in
xchg
or
ret
dec
mov
xor
movsb
popf
in
icebp
mov
mov
xchg
add
lret
xchg
sub
iret
add
jecxz
pusha
cwtl
mov
sbb
mov
in
xor
xlat
sbb
addr16
jecxz
pop
lods
push
sbb
mov
jge
mov
push
and
mov
sahf
pop
call
cmc
adc
das
sub
mov
rcrl
cmp
in
adc
ror
std
sub
sub
in
int
cmp
jne
mov
fldl
sbb
xchg
loope
lock
stos
mov
mov
and
add
lret
inc
icebp
faddp
mov
pop
push
lret
loope
popa
add
push
or
xor
adc
push
fdivr
adc
jg
and
movsb
rol
or
sarb
jb
mov
mov
xor
repz
inc
adc
sub
cmp
xor
push
lret
lret
cmp
add
lods
mov
mov
and
jae
mov
sbb
hlt
leave
movsb
xor
mov
inc
fistpll
mov
decl
cmp
mov
jecxz
out
aam
jmp
cmp
leave
mov
addr16
clc
cmp
rorb
dec
cmp
outsb
out
mov
inc
ljmp
es
roll
insb
jecxz
add
adc
inc
lcall
push
stos
pusha
call
jg
xchg
sbb
cmpsl
inc
test
dec
sub
incl
jne
sbb
enter
push
and
adcb
loope
or
mov
mov
pusha
dec
cmp
mov
jbe
in
fimuls
aas
lret
dec
pop
ja
bound
call
dec
mov
dec
outsb
orl
inc
jns
adcl
loope
pop
setno
push
aad
jle
neg
push
decb
ss
dec
or
addr16
std
sub
lock
xor
xorl
arpl
mov
mov
inc
fwait
pop
ds
push
arpl
sbb
mov
pushf
enter
xchg
xor
repz
xchg
std
mov
add
movsb
subb
lcall
xor
sbb
push
or
cmpsb
push
lret
dec
dec
xor
mov
mov
sahf
shlb
pop
mov
xchg
cli
in
lock
xchg
dec
popf
dec
xchg
dec
test
xchg
pop
imul
daa
mov
jmp
sbb
test
mov
aas
fsubrl
sbb
ss
cli
add
xor
xor
jno
pop
sub
shrb
lock
adc
in
das
xorb
int
call
adc
push
inc
jg
add
outsl
popa
insb
fidivs
outsb
xlat
or
jl
ret
sbb
adc
stc
repz
push
popa
lods
inc
xchg
xor
mov
and
xchg
addr16
sbb
daa
or
into
out
call
mov
pop
xchg
mov
cmp
pop
mov
je
adc
adc
jge
and
and
lcall
inc
int3
ret
hlt
xchg
jns
arpl
pop
add
pop
lret
pushf
mov
mov
fldcw
cmpsb
pop
fldl2e
jmp
dec
subb
sbb
dec
pop
loope
cmc
inc
popa
lret
inc
test
mov
mov
ror
push
das
iret
xchg
pop
daa
pop
pop
sbb
jmp
and
push
jl
lret
jp
imul
ss
add
mul
mov
adc
mov
insl
dec
js
jb
cmp
sbb
out
adcb
fstps
hlt
loop
jp
jns
movsl
adc
enter
lods
sub
sub
mov
dec
pcmpgtb
pop
cmp
sub
xor
mov
or
pop
stos
cmp
add
jne
fsubrl
loopne
test
xor
movl
pop
stos
xlat
mov
and
out
push
dec
or
subl
or
push
mov
mov
cmpsl
xor
xchg
fisttpl
xor
pusha
mov
call
inc
lock
mov
xchg
inc
jns
mov
pop
push
xor
movsb
mov
into
pusha
ficoms
addr16
popf
cmp
fidivl
stc
iret
arpl
jo
push
repnz
movsb
adc
mov
add
cs
mov
outsl
in
pushf
or
insb
in
into
int
daa
cli
stos
mov
mov
dec
gs
jo
xchg
mov
cmp
es
and
out
push
xchg
aam
jno
xchg
xor
stc
test
pop
jle
das
adc
clc
xchg
arpl
jne
pop
gs
std
fsubrs
or
jp
push
push
xchg
or
xor
mov
into
aas
loopne
mov
jnp
cmp
cmpsl
pop
mov
filds
stos
aaa
cmc
jle
lea
call
mov
aad
in
imul
or
in
call
adc
pop
inc
sub
add
test
fildl
outsl
dec
sti
cltd
dec
mov
lret
sbb
mov
mov
into
fsubs
mov
in
push
push
push
fisubs
xor
shrb
pop
cmp
inc
hlt
in
hlt
pop
jge
js
call
fndisi(8087
dec
loope
xor
imul
aad
dec
std
push
inc
imul
dec
adc
sbb
inc
sbb
mov
outsb
std
hlt
lret
and
xchg
clc
pop
loop
cmpsl
mov
out
xor
insb
adc
xor
jnp
jge
shlb
repnz
add
mov
je
shl
lret
add
xchg
and
ficompl
inc
cmp
fdivrp
clc
adc
dec
popf
scas
cli
test
pop
push
push
pop
daa
add
mov
xchg
xchg
flds
mov
lret
fsincos
ss
xor
adc
sub
cmp
outsb
ret
subb
or
adc
or
sub
imul
mov
gs
loop
sahf
sbb
adc
xor
repnz
test
mov
loopne
mov
sub
xor
jbe
daa
mov
ret
inc
mov
mov
mov
adc
add
dec
push
lret
xor
fst
cmp
or
stos
or
jmp
mov
rcrl
inc
sbb
scas
ja
ficompl
out
pushf
inc
dec
jle
pop
repz
sahf
push
shll
fs
imul
add
cmpl
stos
pop
bound
dec
adc
add
mov
insl
testb
in
sbb
or
test
push
adc
jg
jne
test
push
mov
add
jnp
jne
insb
mov
stos
lcall
cmp
cs
jo
push
mov
cmp
adc
popa
int3
lahf
mov
cmp
push
ret
fisttpll
jno
cmpsb
imul
push
std
out
sub
icebp
pop
insl
in
jb
ja
sub
movsb
xor
xchg
dec
out
cli
iret
pop
or
dec
icebp
mov
dec
push
test
lcall
sahf
sbb
push
mov
sbb
add
in
mov
mov
cmc
xchg
add
or
int3
sub
dec
push
push
mov
sub
inc
sub
mov
shll
pop
daa
pushf
leave
cmc
xor
test
cmpsb
and
fildll
mov
pop
xor
and
jmp
xor
sbb
xorb
arpl
decb
pop
or
mov
ret
xchg
bound
stos
pop
fsubs
cwtl
ss
hlt
inc
jno
pop
cli
ja
inc
and
out
enter
dec
jg
push
sub
or
add
pop
push
or
mov
mov
repz
jge
sbb
arpl
jns
mov
and
mov
or
mov
dec
test
stos
mov
fsubr
mov
test
push
xchg
adc
push
xchg
or
movsb
pop
mov
mov
stc
pop
dec
push
dec
sbb
mov
or
inc
or
int
sbb
int3
outsb
scas
mov
test
cmp
mov
cmp
jp
pop
pop
cld
pop
inc
mov
xor
mov
addr16
jns,pn
mov
addl
aas
lds
xchg
das
mov
pop
fadds
rorb
dec
jmp
aaa
stc
push
cmp
fadd
lahf
scas
fsubrs
lds
aaa
aaa
xchg
stc
sbb
push
enter
stos
call
pop
js
pop
cmpsb
xor
and
lret
inc
mov
jge
sub
sahf
inc
jb
xchg
dec
leave
bound
inc
lret
stos
pop
sbbl
int3
ja
push
push
dec
idivl
mov
mov
or
mov
data16
fidivrl
mov
and
call
xor
pushf
xor
mov
fstpl
xchg
ds
inc
cmpsl
sub
test
jno
mov
in
cmp
inc
xchg
jb
insl
scas
ficompl
ja
xchg
xchg
leave
shrb
pop
mov
mov
lret
push
stos
inc
das
push
rorl
mov
add
decl
stos
cmp
stos
mov
mov
inc
bound
mov
cmpsb
or
repnz
cmp
jmp
push
jle
jmp
sbb
jge
mov
sarb
sbb
mov
push
cmp
repz
maxps
xor
test
das
xchg
or
adc
push
testb
cltd
stc
pop
ret
cli
adc
fmul
movsl
dec
dec
out
mov
lods
mov
dec
iret
xchg
inc
inc
and
mov
inc
jg
mov
xchg
xchg
fidivs
std
or
fistl
lock
ficompl
cwtl
out
jg
dec
push
loop
out
inc
pop
setbe
cmp
add
push
add
fstl
jb
add
jg
and
stc
andb
clc
and
aaa
clc
jns
lock
mov
push
je
movsl
jg
fdivrl
inc
adc
mov
jbe
pop
mov
mov
mov
jne
int3
hlt
addr16
add
mov
push
stos
fs
popa
add
mov
out
add
popa
fwait
arpl
data16
and
jnp
stos
jge
jg
inc
push
arpl
and
sahf
and
sub
jl
mov
jns
fadds
add
adc
push
pop
sub
test
mov
insb
inc
pop
ljmp
mov
inc
into
int3
lahf
pushf
jbe
test
call
orl
out
sub
les
push
mov
or
lods
imul
ljmp
jmp
mov
mov
int
jp
in
dec
enter
jo
jecxz
pusha
push
js
test
out
push
mov
push
adc
iret
and
adc
out
push
add
dec
mov
xchg
sbb
mov
lds
popf
cmp
and
enter
adc
add
pop
mov
lods
inc
push
ss
shll
cmpsl
mov
icebp
mov
push
push
xchg
cmpsb
mov
arpl
inc
fwait
inc
and
repnz
loopne
loope
jmp
les
in
stc
insl
mov
das
sbb
je
icebp
insb
add
clc
ss
fs
mov
or
pop
sarl
pop
nop
shlb
push
or
call
or
rcll
mov
insb
mov
mov
sub
or
mov
mov
mov
mov
jmp
gs
xor
sbb
shrb
add
push
dec
cltd
addl
xchg
popf
fsubrs
fcoms
or
pop
pusha
outsb
pop
push
aam
dec
je
xlat
movsl
mov
je
pop
cmpsl
sub
fsubp
lods
iret
xorb
lods
bound
cmp
decb
aam
daa
push
rol
mov
adc
inc
cmp
and
and
inc
ss
test
mov
into
cmp
pop
push
loopne
or
inc
xchg
dec
cmpsl
mov
mov
add
dec
imul
test
jnp
les
cmp
pop
out
add
gs
push
pop
popa
sub
out
sbb
push
stos
ret
movsl
mov
sbb
xor
inc
push
xchg
xor
movsb
fists
out
es
cli
rcrl
xor
test
pop
lret
pop
xchg
les
rcll
data16
out
add
shr
jle
push
jmp
fisubrl
cmp
and
test
jl
pop
add
and
xchg
arpl
inc
aas
cmc
in
inc
ret
scas
dec
in
test
stc
add
iret
mov
dec
notl
ss
cmp
add
sub
arpl
or
bts
jns
pop
jge
xchg
mov
xor
outsl
icebp
int3
adc
es
dec
and
dec
add
push
aam
out
xchg
jno
fbld
xchg
outsl
pop
dec
jno
inc
xchg
cs
incb
jge
mov
fsubrp
fdivr
inc
pop
int
mov
sbb
push
mov
loopne
stos
dec
mov
lcall
nop
lahf
push
sbb
add
popf
sbb
popf
sbb
jno
mov
rolb
jp
ds
jle
lea
jns
adc
in
aaa
adc
test
adc
jno
jne
js
stos
sub
pop
cli
sub
aad
and
or
ret
push
das
test
lahf
out
rclb
or
inc
je
jge
bound
add
je
adcl
rolb
shl
push
push
pop
loope
push
cwtl
out
scas
les
jns
pop
xchg
arpl
xchg
adc
in
sub
mov
sub
and
xor
mov
pop
js
test
dec
shll
in
nop
cmp
stos
cmp
clc
dec
int3
add
xchg
scas
lret
xorb
dec
adc
pop
add
sub
test
cmp
and
and
mov
test
jge
adcl
in
adc
mov
cmp
mov
xchg
xor
cmc
pushf
mov
lock
jno
icebp
inc
out
inc
cmc
dec
lahf
dec
lahf
xor
or
inc
xchg
dec
test
mov
out
sub
les
mov
dec
or
dec
xor
add
mov
sti
dec
jns
loop
dec
pop
and
push
jge
xchg
lret
inc
add
inc
dec
mov
out
mov
nop
push
jg
mov
shlb
stos
std
or
jle
mov
and
inc
aam
xor
adc
jg
jle
jg
rcrl
jns
insl
xchg
cmp
lds
sub
push
xor
imul
sbb
ret
sbb
outsl
mov
and
clc
xor
inc
mov
int3
sbb
cli
lret
fldcw
.byte
cmpsb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jo
or
call
div
fs
xchg
call
out
cld
test
or
add
addl
jle
sub
mov
pop
pop
xor
add
mov
push
mov
pop
movzwl
pushl
adc
pop
mov
add
xor
add
add
xor
mov
mov
mov
call
mov
test
xor
imul
rol
rol
pop
pop
sub
mov
add
mov
cmp
jne
jmp
push
dec
dec
outsl
jl
pop
mov
pushl
pop
lods
jne
jnp
icebp
push
inc
sub
mov
out
or
inc
out
and
stos
xor
sub
sbb
bswap
or
out
xchg
and
or
ss
popa
jg
dec
push
pop
cwtl
cmpsb
mov
mov
adc
das
mov
jmp
cmp
jp
xor
sahf
add
lcall
test
add
cmpsl
sahf
lea
out
lahf
jecxz
nop
or
out
or
out
or
mov
push
jbe
insl
sbb
mov
mov
lds
mov
fs
sti
sub
dec
and
and
dec
and
ljmp
inc
sbb
push
sbb
or
dec
cmp
jecxz
mov
int3
fs
xchg
mov
frstor
loop
movl
lret
and
in
dec
pop
sbb
shlb
jo
and
js
mov
mov
shl
mov
inc
jno
loop
push
and
push
push
scas
xorb
fsts
fs
gs
lds
xchg
leave
stc
int3
jg
arpl
or
jmp
stc
cmpb
mov
je
mov
sahf
jnp
ljmp
pop
hlt
cmp
mov
stos
mov
fimull
inc
es
insb
bnd
sub
and
xlat
call
int
ss
and
movsl
cmc
arpl
orl
shlb
mov
pop
or
stos
sahf
adc
lcall
push
push
cmp
cmpb
mov
jge
push
loop
mull
mov
repz
or
mov
inc
pop
lock
and
lahf
or
rolb
test
xor
hlt
mov
and
into
fwait
fsubl
pop
test
or
jge
jg
inc
cmc
xor
in
movsl
sbb
out
mov
lret
js
push
dec
stos
dec
mov
xor
fcompl
loop
pop
mov
je
js
mov
and
mov
jl
inc
xor
or
icebp
xor
cmpsb
aad
mov
ror
mov
int
mov
add
pop
cmpsb
mov
enter
sbb
cmpsb
out
rcll
outsl
int
mov
xchg
add
int
push
shlb
adc
rol
iret
rol
xor
call
pop
or
cmpsb
out
mov
xchg
jecxz
push
cmpsb
out
xor
cmpsb
out
xor
mov
cmpsb
mov
lret
cmpsb
out
add
test
pop
cmpsb
and
mov
pop
cmpsb
fistpl
jmp
out
inc
pop
xchg
cmpsb
jge
sbbb
and
xor
xor
push
xor
ljmp
ss
cmpsb
out
mov
pop
mov
inc
add
in
ss
cmpsb
push
xor
movsl
sbb
add
jl
add
ljmp
cmpsb
out
aad
psllw
mov
movsb
ss
cmpsb
or
sbb
cmpsb
out
mov
add
test
out
rol
cmpl
add
pop
pop
stos
inc
mov
inc
cmp
cmpsb
xor
add
mov
cmp
lret
cmp
ret
dec
push
lock
sbb
adc
fistpl
xorl
pop
sbb
cmpsb
out
orl
mov
mov
pop
pop
ljmp
pop
stos
mov
in
pop
cmpsb
mov
shrb
inc
cmp
cmpsb
or
sbb
cmpsb
out
mov
sbb
lock
mov
or
xchg
in
or
mov
xor
out
xor
jno
xor
cmpsb
out
xor
cmpsb
mov
mov
or
lods
mov
subl
inc
lods
prefetcht1
jl
pusha
pop
jge
outsl
jmp
subl
icebp
xor
mov
lods
prefetcht1
jl
pusha
cli
icebp
add
cmp
pushf
lods
dec
push
mov
jmp
and
cli
pop
adc
pop
subl
push
leave
test
pop
push
jns
push
cmp
pop
cmpsb
out
aaa
push
mov
cli
pop
adc
pop
subl
jmp
cmp
cmpsb
out
aaa
push
mov
cli
pop
adc
pop
subl
subl
data16
xor
movsl
leave
mul
scas
mov
rcrl
jmp
xor
pushf
lods
dec
push
mov
jmp
and
cli
pop
jb
mov
mov
lock
cmpsb
pusha
inc
fldl
sbb
sbb
pop
movsl
push
xchg
mov
gs
out
push
movsl
out
mov
inc
dec
lock
xor
mov
mov
xor
out
push
movsl
out
shrl
stos
rcl
inc
scas
out
xor
cmpsb
out
mov
push
cmpsb
out
xor
cmpsb
out
ss
jae
xor
int3
mov
repnz
mov
dec
add
mov
fbld
mov
mov
xor
cmpsb
test
out
mov
xor
mov
xor
cltd
out
xor
stc
imul
cmpb
mulb
xchg
inc
add
jmp
mov
addr16
jne
xor
gs
mov
mov
jg
imul
cmp
popf
leave
mov
jl
mov
inc
ds
xor
mov
mov
pop
addb
mov
shrl
fwait
mov
ret
push
testb
ljmp
sbb
dec
lods
hlt
cmp
fdivl
mov
push
xor
clc
ret
push
xlat
lock
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
mov
adc
out
and
cmpsb
out
xor
cmpsb
out
xor
cmpsb
xor
cmpsb
out
xor
cmpsb
out
xor
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
cmpsb
out
xor
dec
loope
cmc
imul
xor
dec
add
in
adcl
in
dec
es
pop
mov
test
mov
repnz
cli
jge
loopne
sahf
jmp
insb
pop
test
fnstsw
mov
or
dec
je
dec
ret
jb
insl
dec
nop
fdivrp
out
and
cmp
popf
out
inc
dec
fcompl
add
cmpsb
xor
sub
cmpsb
sti
mov
fsubs
xchg
pop
filds
push
add
push
pop
mov
dec
and
outsl
sub
ds
data16
inc
popa
inc
or
dec
std
push
xorb
cmp
jg
mov
and
scas
xlat
mov
loopne
adc
out
in
add
or
inc
stos
push
xchg
insb
jle
out
ret
xchg
sbb
add
shlb
mov
dec
jnp
pop
lea
pop
add
add
add
or
add
add
add
movsb
add
adc
add
add
add
sbb
pop
push
add
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
fs
insb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
popa
jb
gs
inc
add
add
jae
jb
gs
je
imul
je
inc
arpl
jo
gs
inc
jne
data16
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
cli
fwait
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
jmp
nop
or
add
add
push
pop
cmp
adc
dec
nop
clc
jg
lcall
and
enter
sahf
add
aam
nop
mov
dec
mov
jecxz
sub
enter
inc
lods
repnz
pusha
push
inc
and
scas
push
fs
dec
or
xchg
adc
add
cmp
inc
add
push
je
imul
sbb
push
and
mov
shrb
and
add
inc
aam
mov
adc
add
pop
push
dec
bound
arpl
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
aaa
sbb
and
and
pusha
in
jo
insb
sbb
push
xchg
add
in
jb
cmp
push
sbb
sbb
or
and
fcoms
add
cmp
sbb
add
lock
test
sti
inc
add
in
adc
les
loopne
call
or
inc
inc
sub
je
movzwl
js
sbb
mov
cmp
push
pop
lods
or
cmp
xor
or
cmp
sbb
sub
and
nop
lock
push
mov
cmp
cmpl
jne
push
add
call
add
test
jne
faddl
pop
mov
mov
jb
aas
or
mov
add
lea
js
sbb
mov
addb
inc
cmp
jne
in
icebp
cmp
adc
push
popf
pop
nop
mov
xor
add
rcr
daa
add
dec
cld
add
mov
aam
sbb
iret
or
outsl
adc
pop
cwtl
add
push
add
iret
add
push
push
adc
mov
nop
push
push
pop
loopne
icebp
into
adc
add
xchg
add
sbb
aaa
pop
inc
nop
cmc
cmp
inc
addl
rolb
push
or
push
jne
adc
adc
call
xchg
add
or
inc
add
jb
push
pusha
add
ret
scas
sbb
hlt
jmp
ds
aas
push
or
ret
test
add
es
call
add
mov
xor
insb
call
ret
std
sbbb
fmul
ja
pop
and
jge
mov
incl
sub
cmpl
add
gs
push
or
inc
add
into
mov
cli
iret
mov
out
jmp
sub
cmp
stc
mov
adc
mov
add
test
dec
or
je
ret
test
sti
repz
pop
xchg
adc
add
xchg
cmp
adc
pop
mov
jnp
add
out
or
mov
inc
push
add
and
push
and
cmp
mov
test
je
add
sarl
add
adc
inc
in
mov
add
decl
clc
aad
fs
psubusw
dec
test
js
push
push
add
or
push
pop
jne
pop
scas
jns
inc
push
and
jle
ja
add
mov
insb
in
cli
dec
inc
add
dec
in
xor
or
incl
scas
push
mov
pop
sbb
rol
sub
jnp
add
repz
jae
nop
pmaxsw
and
add
add
xor
push
hlt
mov
stos
or
lock
push
jae
xchg
sub
lea
adc
adc
add
cmpsl
data16
in
jle
add
sbb
insb
or
adc
cmpsb
shrb
mov
hlt
jmp
ljmp
add
sbb
ret
xchg
and
loop
or
mov
or
inc
mov
lahf
cmp
pop
pusha
jle
es
mov
mov
std
push
mov
cmp
sub
push
add
pop
scas
shll
xor
dec
mov
or
xchg
popa
je
jl
add
adcb
or
add
leave
xchg
orb
inc
test
and
jae
mov
rorb
add
addl
push
mov
cmp
mov
add
aas
xchg
data16
pop
aam
xor
ud2
jbe
call
and
pop
add
aas
je
lods
inc
dec
add
mov
adc
xor
leave
add
add
int3
arpl
cmp
and
movsl
scas
and
push
push
call
int
aaa
adc
dec
pop
xchg
pop
je
cli
adc
aas
xchg
in
add
xor
push
jne
cmc
loopne
test
jle
lea
sub
inc
pushf
rcll
das
cmpsb
add
into
aaa
or
xchg
push
mov
push
mov
mov
pop
insl
subb
dec
xor
rolb
jne
pusha
in
adc
sbb
pop
lods
cmp
or
jp
inc
test
cmpl
aam
adc
in
inc
and
or
push
add
dec
xor
rolb
stc
rcrl
sbb
jecxz
ss
add
push
or
fidivs
cwtl
lret
add
sub
lds
int3
mov
mov
test
je
pop
add
and
add
xchg
adc
testb
or
add
imul
in
loopne
push
push
dec
fs
xor
sahf
mov
aam
sub
inc
add
jle
movsb
adc
int
popa
and
sahf
mov
mov
aas
clc
dec
pusha
mov
cmpl
mov
adc
add
hlt
add
add
add
iret
and
jl
xchg
jno
add
mov
hlt
push
xchg
ret
add
and
in
or
cs
les
dec
stc
repnz
sldt
push
sbb
xchg
jns
add
sub
out
mov
pop
hlt
leave
adc
cmp
aad
cmp
mov
in
mov
je
xorl
in
cmp
xor
pop
push
lret
inc
sbb
mov
or
pushf
in
fstpt
loopne
push
cmp
xchg
sbbl
dec
or
cmp
cmp
add
add
ror
add
add
sub
js
pop
hlt
jmp
pop
movsl
popa
ficompl
outsl
xor
in
pop
or
testl
and
mov
dec
cwtl
in
push
shll
add
or
push
cld
adc
xor
sbb
or
cmpsb
adc
cmc
mov
add
jmp
pusha
cli
or
jl
adc
xchg
rolb
ret
cmp
mov
cmp
or
or
ljmp
add
rolb
loop
add
jg
add
adc
pop
cmp
mov
jne
sub
lret
mov
or
add
ret
and
bound
fwait
dec
and
loope,pt
xchg
push
dec
je
sub
fiaddl
popa
push
inc
sub
scas
xor
test
pop
and
and
decb
inc
cmpsl
shlb
cmp
mov
push
adc
push
insb
add
push
add
adc
add
fdivs
mov
addr16
add
pusha
fsubs
test
jne
in
xrelease
xor
inc
or
addl
hlt
xchg
mov
clc
add
or
es
mov
push
aaa
sub
movsl
repz
jg
leave
sarb
cmc
sarb
push
imul
add
xchg
and
mov
and
inc
into
add
in
repnz
mov
sub
add
lcall
inc
or
call
cmp
pop
clc
shll
dec
rcl
xor
inc
fisttps
mov
sub
sbb
addl
pop
aaa
push
test
xor
dec
ret
ss
dec
adc
adc
es
xchg
sbb
adc
adc
xchg
pop
sbb
int3
sub
cmp
jl
xchg
cmp
inc
jns
add
add
sbb
nop
mov
andb
aad
or
std
movsb
add
inc
loopne
mov
enter
test
adc
xchg
sbb
scas
mov
sub
rclb
imul
orl
lock
mov
add
dec
mov
add
cmp
push
clc
pop
and
fsubs
or
addr16
sub
xor
and
cmp
or
xchg
je
mov
rclb
call
mov
add
xchg
insl
mov
add
addl
daa
adc
xchg
fxch
sahf
push
aam
icebp
adc
push
lea
xor
mov
sub
inc
add
mov
add
int3
test
push
inc
je
add
xor
jb
add
add
push
push
pop
mov
stos
rorb
jne
push
pop
shr
test
mov
mov
push
stos
ja
jg
mov
sub
pop
mov
jnp
or
inc
mov
jmp
inc
pop
sub
scas
mov
push
in
or
adc
dec
inc
dec
add
fiadds
jmp
jp
dec
movsb
add
or
jge
cmpsb
test
aas
dec
dec
adc
add
xor
fsts
in
or
out
repz
xor
dec
jmp
dec
cmc
pop
ds
xorb
cmp
adc
xchg
int3
dec
jmp
adc
push
repnz
lock
sbb
push
lahf
dec
xchg
add
aam
push
arpl
andb
mov
or
add
push
es
xor
pop
xchg
mov
sti
rolb
or
orl
xchg
fxch
and
test
jge
je
and
and
add
inc
nop
push
adc
jne
sbb
repnz
add
hlt
test
mov
or
fs
xchg
push
mov
mov
loope
popa
cmc
push
xchg
out
stos
mov
add
daa
or
rorb
jg
push
orb
push
xchg
sub
xor
scas
push
outsl
test
xchg
push
or
pop
add
push
int
push
and
ret
add
cmp
add
sub
adc
cmpb
loopne
lock
or
jb
add
test
dec
cltd
pop
and
dec
icebp
loopne
test
clc
jne
dec
inc
or
jns
or
adc
movsb
shlb
add
add
mov
pushf
push
or
stos
add
loop
push
int3
cmpsb
aas
inc
add
cwtl
dec
sub
push
inc
push
sbb
add
adc
cmpsb
mov
add
popf
add
cmp
sub
jno
push
add
mov
add
cmp
adc
xor
je
je
add
cli
add
push
or
aaa
cmp
sub
mov
cwtl
push
push
or
and
mov
mov
add
mov
int
cmp
lods
and
mov
lds
in
adc
lock
pop
push
mov
push
push
lock
mov
test
add
or
add
movaps
lahf
cld
mov
jne
fsub
es
adc
repz
push
jge
push
cltd
pop
sub
or
bound
add
testb
add
sub
roll
sahf
add
jne
and
fstl
pop
sub
cmp
jmp
movsb
xor
pop
movl
addr16
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
or
mov
xlat
jmp
xor
add
ret
add
lock
loop
xchg
loopne
adc
jmp
gs
xchg
and
rorl
inc
pop
movl
cmp
xor
add
cs
push
add
and
fcoms
jp
mov
and
jns
add
imul
jmp
sbb
cmpsl
dec
fnstsw
add
and
add
and
xorl
mov
jmp
ss
xor
add
push
repnz
push
ja
add
lock
sarb
aam
adc
add
lret
xchg
call
mov
mov
xchg
test
and
nop
mov
sub
mov
ret
cwtl
mov
stos
mov
fsub
inc
sbb
jne
add
jo
or
loopne
sbb
mov
and
es
pop
pop
cmp
stc
aad
add
push
gs
adc
rcl
xlat
xor
loopne
shl
add
stos
scas
rolb
add
rorl
xor
mov
call
cmp
out
add
int3
enter
call
fcmovnu
lret
add
loopne
jecxz
in
in
pop
push
push
push
push
sub
pop
add
pusha
loopne
push
add
popl
stc
rcr
mov
nop
push
imul
scas
in
xlat
push
cmp
add
je
mov
js
add
rep
cld
push
and
pop
jmp
pop
cmp
or
sub
add
sbb
add
inc
rorb
add
xchg
test
or
jp
cmp
jbe
cmc
cmpb
jne
or
add
out
lcall
sbb
inc
loopne
mov
add
push
push
adc
lock
loope
add
dec
sbb
pop
dec
add
mov
into
add
xor
testl
ja
inc
js
xor
cs
lea
push
pop
and
add
inc
cmp
jbe
add
or
xchg
cmp
or
push
pusha
jl
jmp
arpl
call
inc
xorb
movzwl
add
sbb
repnz
inc
add
mov
push
add
add
call
testb
mov
xor
in
js
in
or
sbb
pop
jmp
jecxz
lret
sbb
je
subb
add
push
jg
push
pop
sbb
add
bound
sbbb
mov
sbb
movl
and
or
jb
cmp
roll
pop
add
inc
xchg
hlt
jle
add
pcmpeqd
ror
call
leave
mov
xor
push
shr
add
fwait
loopne
and
push
dec
into
popa
out
pusha
ret
es
xor
enter
fnstenv
dec
mov
add
cmp
cmp
mov
ret
push
sbb
jmp
enter
pop
lock
out
je
pusha
mov
cmp
jne
xor
adc
dec
std
mov
add
add
sbb
xchg
sbb
xor
jp
jl
pop
cltd
or
push
jmp
add
xor
nop
mov
mov
adc
or
add
or
stos
adc
dec
add
stos
pop
inc
imul
inc
mov
or
int3
push
nop
xor
dec
iret
mov
cltd
xor
sub
and
in
inc
add
push
add
xchg
xor
pop
pop
jge
test
movb
hlt
jl
loopne
add
stc
inc
add
add
fnstenv
in
shll
mov
dec
jne,pt
add
sbb
add
cltd
enter
sbb
xor
mov
mov
push
inc
add
push
and
sbb
sub
or
add
rolb
popa
aas
pop
mov
push
sub
sbb
test
sarb
jmp
iret
add
and
ja
sbb
sub
rclb
jne
dec
mov
adc
pop
imulb
mov
mov
fdivrs
lock
out
cmp
in
inc
push
fdivrl
cmovbe
je
xchg
add
popa
jb
mov
jbe
or
adc
pop
ret
or
add
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
mov
repnz
inc
cmpsl
push
jae
out
push
xchg
xor
cmp
in
add
push
mov
pop
sbbl
dec
add
test
mov
lods
sbb
lahf
pop
add
adc
xchg
sub
xchg
loop
or
add
addl
add
movsl
sbb
nop
jmp
pop
xor
xchg
add
push
push
pop
pop
add
adc
dec
add
mov
es
or
pop
add
push
cmp
dec
clc
lea
xchg
jnp
sbb
call
dec
jo
sub
push
pushl
and
inc
hlt
xchg
ret
ja
add
or
xchg
loope
pusha
cmp
add
sbbl
addr16
push
inc
add
push
arpl
dec
cld
adc
out
mov
jmp
clc
or
loop,pt
int3
ret
mov
push
rorb
push
push
inc
push
inc
pop
add
outsl
jb
popa
outsb
fs
add
jo
push
dec
loopne
add
dec
popa
sbb
add
jne
movsb
imul
jo
int3
lods
jbe
ja
push
aam
leave
orb
sub
fdivr
sbb
adc
inc
lret
ret
sbb
add
xor
ss
mov
push
pop
add
call
mov
jmp
add
xchg
movlps
mov
call
or
mov
sbbb
lret
xor
loope
add
mov
sub
fidivl
cld
add
stos
mov
fadds
stos
sarl
and
pop
arpl
loop
mov
js
imul
inc
sbb
in
cmp
aam
sbb
add
testb
icebp
jnp
xorb
and
dec
add
cmp
add
adc
or
rcrb
js
shl
mov
les
or
push
push
cltd
add
and
enter
movl
ret
lods
fs
ret
pop
orb
sub
xchg
cld
mov
pusha
addb
mov
and
mov
mov
into
add
call
adcb
fstps
loope
lahf
or
add
mov
push
divb
jp
add
sbbb
add
jb
imul
and
or
and
or
pop
pop
pop
add
mov
add
or
dec
push
orl
mov
add
and
or
mov
add
push
clc
pushf
inc
test
cmp
mov
add
call
orb
add
loope
add
push
imul
cli
in
push
sbbb
sbb
fcmovnb
push
push
bound
pusha
enter
mov
add
shl
xchg
adc
add
push
mov
cld
jmp
fs
clc
push
adc
xchg
rcrb
inc
add
pusha
sub
jmp
or
pop
pop
mov
pop
ret
add
jl
push
add
imul
pop
pop
inc
pop
dec
sub
push
and
mov
jbe
cmpb
imul
cmp
cmpsb
jne
cmp
popa
fiadds
dec
adc
loopne
add
call
xchg
or
sarb
lock
add
push
adc
out
mov
mov
cmp
into
add
out
push
je
push
pop
movsl
add
jbe
cmp
loop
and
insl
xchg
push
ret
mov
les
xchg
js
inc
stos
popa
xor
lret
or
push
or
push
stos
cmp
lods
popf
daa
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
jle
add
leave
sbb
hlt
enter
das
mov
dec
add
add
jo
mov
insl
mov
add
aad
sbb
movl
stc
rcll
add
jecxz
ss
xor
xchg
mov
jmp
add
enter
je
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
cmp
add
in
lds
inc
push
out
dec
pop
cs
and
add
add
jne
pop
fs
jae
add
pushf
or
popa
into
je
adc
je
add
add
dec
add
popa
mov
mov
cld
xchg
jmp
ja
jne
add
sahf
inc
adc
daa
inc
inc
icebp
insb
hlt
xchg
and
inc
mov
xor
pop
lcall
inc
lea
call
or
rcl
and
mov
movsb
andb
movl
mov
pusha
and
incl
dec
cmp
pusha
pusha
push
push
jge
add
enter
push
add
imul
push
mov
ds
mov
ljmp
jne
or
andb
cmp
or
movsb
xchg
ljmp
mov
adc
add
mov
sub
cmpsl
dec
add
inc
pop
xchg
fs
mov
je
les
inc
add
rol
jmp
cmp
int
push
shlb
add
dec
test
sbb
lret
cmpsb
add
add
add
sub
pop
push
mov
cmp
adc
mov
jbe
xchg
cld
cmp
aas
jmp
add
mov
sub
add
ss
xor
or
adc
sub
add
inc
adc
and
jmp
add
push
mov
add
stc
sub
enter
sbb
jecxz
inc
int
and
iret
push
and
jl
jge
push
in
into
lock
fdivr
push
cld
or
frndint
push
add
roll
imul
test
pop
ret
sahf
and
repz
inc
cmpsl
jmp
lods
add
mov
cmp
cmp
fs
xor
dec
fimull
lock
rclb
sbb
sti
clc
add
add
sbb
inc
add
inc
sub
lea
bound
mov
push
movaps
cmp
dec
stos
pop
and
pop
movsb
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
adcb
add
add
and
mov
mov
sub
loope
push
sahf
jo
add
daa
push
enter
fistpl
lock
aam
add
out
cmp
adc
mov
insb
or
mov
add
movsb
jp
sti
cmp
fucomi
js
pop
inc
xor
test
repz
sbb
fbstp
ds
shrl
jg
in
pusha
mov
pushf
sbb
mov
movsl
add
add
lcall
jnp
jle
andb
pop
cmc
or
cmpl
nop
pop
mov
or
push
in
dec
push
leave
cli
inc
or
inc
mov
pop
push
mov
je
pop
call
mov
add
push
or
jne
movb
rcll
sub
inc
call
inc
sub
lea
add
inc
xchg
push
push
shll
iret
cmp
sahf
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
mov
ficoml
mov
or
add
incl
mov
push
pop
push
add
lcall
add
adc
sbb
sbb
and
sbbb
pop
xchg
sbb
sub
leave
mov
fxtract
xchg
shlb
add
cmpb
ljmp
add
pop
mov
sar
push
cmp
call
jne
nop
sbb
mov
aaa
and
push
push
add
mov
inc
jno
adc
sahf
sub
or
jnp
in
cmp
dec
adc
shrl
cmp
jne
or
mov
or
fsubrs
add
jbe
pop
fs
or
pop
and
jge
jne
mov
push
pusha
jg
pop
push
outsl
add
push
sub
orb
add
adc
js
das
add
mov
daa
add
pop
add
mov
jb
mov
outsb
add
inc
daa
jo
mov
out
inc
sub
lock
add
cmp
sub
stc
jns
add
mov
xor
jmp
xchg
outsl
neg
add
adc
inc
cs
add
inc
sub
jl
lock
test
lret
pop
push
lea
push
xlat
js
add
xor
add
test
lret
add
dec
stc
fiaddl
push
lock
inc
inc
jg
push
jne
mov
les
add
pop
in
jmp
sbb
add
inc
jl
xchg
dec
sub
sbb
jbe
inc
mov
push
jo
or
or
pop
mov
cld
add
clc
rclb
movb
inc
push
dec
mov
addb
js
xchg
sub
cwtl
hlt
lock
pop
mov
fs
mov
or
clc
cmpsl
icebp
ftst
ljmp
xchg
and
add
addr16
jge
leave
mov
sbb
push
and
call
add
andl
ror
je
xor
es
stc
mov
nop
loope
pop
inc
xchg
subb
cmp
push
mov
loop
mov
push
addl
push
cmp
stos
pop
pop
inc
push
es
add
cli
or
les
mov
adc
mov
sarl
pop
sub
in
daa
in
add
subl
pop
and
xchg
push
xor
xor
in
add
jbe
push
and
cld
inc
movsb
add
nop
push
push
push
mov
je
push
repnz
mov
pop
add
dec
xor
push
scas
or
jo
ljmp
mov
cld
testl
and
sbb
mov
jns
loopne
or
add
cmp
add
call
jp
push
dec
xor
adc
lea
testl
popa
scas
mov
jno
add
pop
mov
inc
push
inc
cmpsb
stc
dec
add
jmp
pop
shrl
enter
pop
adc
add
add
dec
mov
add
xchg
cli
arpl
add
sysenter
pop
and
dec
jg
aam
jno
mov
lret
or
push
push
roll
push
push
push
test
in
or
cli
dec
loop
and
pop
shlb
mov
adc
cli
jle
cmpsb
fadds
mov
into
push
orl
push
out
lods
inc
dec
and
pop
addps
repnz
jmp
rol
dec
lret
dec
jg
sub
add
scas
out
leave
sub
shlb
add
ret
ljmp
pop
inc
pop
dec
dec
add
pop
orb
pop
ds
xor
aaa
mov
testl
cmp
inc
adc
pop
mov
cmp
push
adc
pushl
loope
enter
add
jmp
push
popa
lret
mov
xchg
bound
out
in
add
nop
dec
rolb
or
inc
addb
mov
mov
out
sub
nop
xchg
in
movsb
pop
adc
imul
out
dec
int3
cmpsb
sub
add
insb
mov
add
add
pop
sub
das
or
sbb
hlt
sub
cli
add
je
push
in
fnstcw
aad
bound
stos
sahf
push
mov
sub
fiadds
jl
cmp
inc
jle
and
icebp
hlt
iret
in
add
jo
add
add
lea
cmpsb
jg
xchg
sti
push
push
lock
std
xor
xchg
aaa
jns
cmp
cld
lcall
add
inc
pusha
icebp
jle
jmp
rclb
mov
pop
cmp
repz
mov
je
movsl
add
or
scas
inc
pop
push
clc
adc
test
mov
and
and
cld
aad
and
and
sbb
ret
sbb
aad
xor
and
jo
push
scas
sub
add
adc
cli
nop
add
mov
adcb
add
aam
lret
pop
fistpl
repz
inc
jg
add
inc
movsl
inc
adc
pushf
push
mov
jo
in
push
loopne
std
loop
and
enter
nop
pop
sbb
and
jne
pop
clc
jl
or
scas
stos
repz
ret
mov
dec
pop
addb
iret
jmp
gs
leave
shll
or
push
pop
xor
push
movb
dec
pop
sbb
xor
pop
add
lcall
add
push
pusha
cmp
add
sbb
mov
pop
push
push
add
bound
sbb
call
icebp
shrl
pop
test
enter
pop
mov
dec
test
scas
jl
inc
push
icebp
cwtl
cmp
call
mov
mov
stc
loope
jb
fisttpll
push
in
push
pop
push
inc
cmpsl
clc
push
or
sbb
shlb
add
std
jnp
add
and
enter
mov
xchg
pop
mov
mov
mov
or
and
mov
pop
fistl
sahf
pcmpgtw
sub
sbb
cwtl
scas
pop
sub
testl
incl
adc
pop
repz
add
aad
push
xor
hlt
sub
add
jno
jmp
shrl
sbb
cs
aas
stos
cmpsl
push
add
lock
jmp
inc
sbb
setb
or
int3
movsb
popf
add
jmp
and
mov
lock
xchg
sub
push
and
shlb
cmp
inc
and
pop
das
jmp
jp
or
call
mov
sub
or
cli
mov
repz
ret
xor
xor
mov
popa
sub
pop
cli
xchg
or
xor
cwtl
add
and
mov
cltd
cwtl
cmp
into
cmp
xor
clc
push
or
pop
sarl
pop
stos
add
and
cs
addb
pop
cmp
sarb
xlat
or
push
orb
in
cld
add
pop
clc
dec
shll
mov
cli
adc
iret
call
and
jmp
dec
adc
add
push
xor
jl
add
inc
dec
xchg
dec
lock
add
or
and
cltd
xchg
in
aam
fstpt
add
cmp
addb
sbb
mov
add
ds
adc
lock
mov
pusha
sbb
cvttps2pi
ljmp
cmp
shll
add
cltd
jmp
les
inc
adc
popa
test
jge
and
subb
mulb
dec
jne
jmp
pop
and
loop
cmp
fs
add
lcall
or
and
cltd
jo
pop
sbb
pushl
cwtl
incb
pop
add
aaa
ret
jmp
mov
mov
inc
imul
add
pop
add
je
or
add
push
sub
inc
xor
mov
xor
test
push
in
movsb
scas
xchg
aaa
nop
nop
mov
mov
add
ficoml
jne
adc
fistpll
in
cmp
loopne
mov
ljmp
jno
js
imul
add
inc
sbb
cs
mov
add
addr16
pop
addb
push
or
jnp
sub
lods
mov
fdivs
dec
sub
inc
cmp
stos
add
fisttps
xor
inc
mul
shld
loopne
testb
das
insb
push
mov
add
scas
or
popf
adc
popa
xchg
inc
fcoms
add
sub
mov
nop
ret
or
cmp
std
aad
jne
cmp
jb
faddl
je
loop
and
add
mov
inc
ret
sub
or
es
or
adc
call
mov
popa
cmp
add
xchg
std
test
fisttpll
dec
daa
jmp
adc
ja
cmp
sti
xor
pusha
push
cmp
jae
sbbb
ljmp
ret
jg
push
ss
movd
xor
xchg
loop
add
or
in
cmp
pop
mov
add
inc
pusha
ret
xchg
nop
push
add
mov
or
sub
sbb
fdivrl
add
push
adc
jge
push
mov
pop
add
xor
pop
lea
inc
lock
push
inc
cmpsb
add
xchg
push
xchg
add
mov
es
fwait
scas
dec
pop
sti
add
mov
sub
loope
mov
mov
test
fyl2xp1
xor
dec
jno
add
and
jns
mov
dec
cltd
dec
jmp
test
ror
call
sub
outsl
lret
cmpl
fldl
adc
sub
sbb
lahf
aam
repz
clc
test
cld
icebp
int3
jmp
add
jge
stos
daa
push
inc
add
jb
push
mov
scas
mov
mov
jl
or
std
in
xor
mov
or
out
add
sbb
xor
ret
mov
cmpsb
daa
cwtl
imul
ja
add
aam
fdivs
jne
or
jmp
pop
cmp
add
sti
or
cs
dec
stos
sbb
push
stos
testl
add
jbe
xchg
xchg
pop
out
add
xor
xor
xor
pop
int3
aam
and
imul
sbb
push
pop
mov
add
inc
sbb
add
cmpsl
mov
imul
addr16
inc
sbb
add
shlb
inc
inc
imul
fcomps
add
les
and
push
dec
pop
addps
inc
mov
push
add
sub
cltd
imul
jae
decl
ja
add
and
nop
lcall
stos
or
dec
loopne
push
cli
lods
test
pop
jo
sbb
lods
inc
lcall
sbb
jge
mov
add
add
and
jbe
test
push
lock
mov
mov
xor
sub
inc
inc
add
cli
mov
and
rolb
jge
sub
cmp
jle
push
cs
pop
add
insl
call
fmull
cmp
cmp
push
ds
andl
popl
add
xchg
sbb
sbb
sub
jno
or
or
lock
loop
nop
pop
jg
das
push
in
add
lods
popa
jmp
decl
ja
or
lock
fadds
ljmp
push
xchg
insb
or
call
popf
xor
leave
loopne
sbb
cs
adc
push
add
push
enter
hlt
mov
sub
ret
dec
cld
daa
adc
cmpsl
add
pop
add
mov
or
sub
lock
push
add
xor
clc
adc
jle
int
sahf
xchg
dec
jo
add
aaa
jl
inc
push
push
dec
adc
dec
add
lea
add
ret
movsb
ret
out
jmp
dec
xor
mov
mov
push
pop
nop
mov
push
call
or
or
repnz
mov
jns
test
add
je
xor
pop
mov
xor
addl
ret
jl
inc
sbb
mov
adcb
pop
push
push
mov
in
out
clc
pop
ds
or
adc
fimull
fisubrl
add
pop
sbb
js
push
sbb
pusha
notb
xchg
push
mov
sub
outsl
add
ret
mov
add
cmp
push
or
add
jg
adc
adc
hlt
out
jmp
push
cmpsb
xchg
lahf
mov
fwait
out
jnp
je
add
dec
sti
jo
dec
hlt
ret
jge
xchg
je,pt
xor
jns
or
cmp
and
xorl
data16
push
add
fcoml
test
adc
punpcklbw
leave
dec
cmp
fsub
inc
or
add
jne
shl
add
cmp
mov
add
inc
ljmp
xlat
sub
add
test
pop
push
add
mov
cmp
xchg
add
add
cli
and
movsb
jg
push
push
nop
pop
xor
movb
sbb
shl
scas
dec
push
jo
mov
inc
addr16
jmp
test
mov
sub
push
addb
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
xor
fists
imul
adc
clc
push
mov
outsb
pop
cwtl
insb
xor
cs
cmc
add
inc
inc
je
outsl
outsb
add
popa
mov
add
adc
test
loopne
add
movsb
jge
jecxz
sub
rol
out
fs
add
or
dec
add
add
jno
add
pop
adc
xchg
ds
dec
or
or
pop
lea
les
cmp
xchg
outsl
test
dec
add
shlb
add
nop
dec
jmp
mov
cmp
jp
dec
dec
repz
data16
stos
jae
push
inc
inc
push
add
add
sbb
andb
movsb
or
xchg
pop
addr16
sbbb
add
test
pop
and
jne
cs
adc
mov
add
inc
cmp
scas
add
jne
xchg
jb
xor
jle
jns
inc
mov
testl
xchg
loopne
push
or
je
in
jb
rcrb
arpl
dec
hlt
jae
fcomps
pop
dec
cmpsb
js
and
sub
and
mov
ljmp
mov
dec
adc
and
push
add
icebp
mov
ret
and
out
cmp
add
testb
cmpsb
push
imul
imul
push
pop
and
dec
and
pop
repz
roll
cld
cmp
xchg
cltd
dec
add
jmp
mov
cmovnp
and
push
cld
jne
xchg
add
dec
mov
cmp
fmull
ret
add
ficoml
cld
lods
add
je
loop
add
add
jge,pt
icebp
inc
arpl
add
pop
xor
in
lock
sbb
fists
mov
stos
shrb
daa
iret
sbb
dec
or
inc
mov
sbb
jge
push
add
pop
bts
setle
add
cmpb
aam
add
pop
and
sbb
popa
adc
or
lea
rclb
mov
nop
add
sti
mov
divl
sarb
mov
leave
loope
notb
push
rolb
dec
xor
movsb
add
jno
aas
mov
sub
and
jne
cmp
cmp
movb
inc
mov
add
or
jle
add
jmp
les
cmpb
ret
inc
xor
cs
daa
sbb
mov
mov
paddsb
shrb
mov
jnp
add
mov
rorb
push
add
jae
push
sub
push
add
lods
fisubl
cmp
jmp
add
add
mov
dec
fstl
ss
inc
leave
adc
jae
pop
enter
cmp
cmp
mov
mov
scas
mov
test
mov
mov
outsb
jo
add
cmpb
pop
inc
mov
sub
dec
jecxz
sub
adc
jmp
push
cmp
mov
dec
pop
or
jle
add
sub
xorl
mov
fsts
outsl
imul
xor
adc
add
test
in
pop
ret
rorb
bound
add
jle
fistpl
iret
add
or
push
lret
data16
sbb
add
mov
and
icebp
and
cmp
sbb
add
push
adc
pop
es
sbb
psraw
sub
mov
add
pop
xor
add
mov
sub
icebp
in
and
pop
push
add
sub
test
push
orl
cli
add
push
inc
or
and
adc
sbbb
mov
lock
lods
inc
rolb
roll
sarb
rol
add
jmp
stc
inc
cmp
inc
rcll
or
inc
sbb
pushf
push
mov
sub
mov
push
dec
jbe
push
pop
dec
adc
jb
add
add
sbb
inc
repz
xorl
add
ficoml
ljmp
cmp
cs
add
dec
mov
int
dec
adc
cmp
lret
adc
jl
mov
inc
jl
add
stos
subb
add
int3
xor
and
into
mov
add
pop
aam
test
pop
int
les
popa
push
iret
ret
add
je
and
adc
cmp
cs
lods
cmovs
mov
decl
rol
add
lods
in
and
jae
test
pop
add
jbe
mov
and
push
sbb
push
pusha
mov
push
icebp
mov
push
mov
mov
cld
mov
dec
mov
inc
int3
add
jne
cs
add
mov
and
roll
sbb
add
pop
rolb
sbb
xor
ja
sub
jmp
add
cmp
add
rcrb
add
dec
adc
int
ja
pop
mov
mov
pusha
sbbb
and
jmp
mov
cmpsl
add
dec
sbb
pop
aad
jp
int3
andb
ret
sbb
push
xor
jo
imul
or
add
jle
inc
push
shrl
ljmp
nop
sbb
mov
jmp
fistl
push
clc
inc
cmp
cmp
pop
mov
pop
xor
daa
ret
loop
mov
ja
sbb
leave
inc
andb
sub
mov
dec
shrb
ljmp
sbb
pop
movsb
jno
and
add
nop
sub
loopne
pop
repnz
not
dec
sbb
pop
jbe
nop
xchg
mov
xchg
add
dec
xlat
aaa
push
jecxz
out
ja
nop
je
inc
cmp
mov
jo
pop
out
add
xchg
fldt
fmulp
add
call
add
cmp
sub
rclb
and
call
xor
mov
sbb
and
jbe
jge
jge
add
hlt
sub
flds
out
scas
adc
addb
aas
sbb
and
inc
add
or
or
cmpsb
ret
leave
add
hlt
adc
add
andl
sub
imul
idiv
mov
cld
mov
and
aam
cltd
test
xchg
xchg
cwtl
xor
and
mov
add
mov
jecxz
xor
add
leave
sbb
lds
mov
rolb
jbe
imul
fimuls
add
mov
inc
bound
lods
inc
addb
xlat
fadds
lods
add
xor
xchg
mov
add
or
sbb
test
int3
into
sbb
add
test
add
pop
mov
ror
movsl
push
sbb
nop
add
outsl
cmp
and
jo
lret
hlt
into
jo
add
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
es
xchg
jp
pusha
cmc
pop
out
jg
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
dec
daa
popl
fiadds
adc
push
push
rcrb
jmp
add
fs
aam
imul
pop
add
dec
jp
iret
mov
cmp
fadds
ds
push
jl
pop
scas
mov
pop
or
cmpl
leave
dec
dec
in
xchg
jo
add
xor
in
hlt
cmp
mov
mov
push
movsl
mov
popa
es
mov
sbb
clc
add
daa
mov
and
push
fwait
xchg
and
leave
push
add
and
aad
bound
or
xor
aas
push
cmpsl
add
enter
in
hlt
or
ficoms
add
or
jno
cmp
or
xchg
add
lock
mov
stc
dec
call
jne
or
fisttpl
or
fisubl
add
sbb
cli
movl
outsb
pop
shlb
add
loopne
shr
in
xlat
add
cmp
jb
ja
mov
repz
add
sbb
inc
loop
out
add
ret
adc
add
push
repz
shr
test
sti
or
cmp
or
jne
or
xor
add
add
ljmp
add
and
scas
stos
scas
hlt
xchg
das
add
sub
add
pop
nop
pop
shrd
lds
dec
mov
lock
add
xchg
cmc
bnd
add
fcomp
inc
xor
addl
mov
and
stc
and
jl
icebp
mov
imul
stos
shl
lds
loop
cmp
jo
push
sar
add
mov
cmp
int
lods
dec
jmp
js
icebp
rorl
call
add
test
xchg
rcrl
jne
add
aaa
test
loop
add
les
cld
ja
in
pop
add
push
movsl
xchg
call
inc
in
add
inc
shlb
add
push
shlb
add
or
mov
push
std
jmp
add
add
inc
cmp
inc
testb
data16
incl
mov
or
xchg
or
stos
cmp
imul
lods
inc
sub
or
adc
sbb
aam
outsl
sub
add
cmpsb
and
or
jno
minps
dec
verr
xchg
sbb
leave
and
sub
addr16
ljmp
and
call
adc
enter
jb
or
or
xchg
add
xor
inc
add
int3
xlat
add
jge
xor
ja
adc
sbb
inc
add
cmovnp
mov
or
idivb
add
adc
mov
add
cmp
sbb
add
call
add
sbb
push
jne
aas
xor
sub
dec
ja
push
adc
xchg
adc
pop
mov
add
sbb
mov
lods
sub
daa
dec
sbb
mov
add
sub
xor
rol
adcb
cmpsl
pop
mov
add
loopne
mov
pop
mov
cmp
aam
movsb
xor
push
stos
or
push
fsub
mov
mov
mov
orl
movsb
or
adc
dec
cmp
jnp
add
mov
jle
jne
cmp
push
add
popf
mov
dec
ja
ds
in
add
inc
mov
push
or
call
cmp
mov
adc
popf
add
cmp
xor
mov
mov
rorl
jmp
dec
loopne
inc
in
cmp
xor
cmp
xor
and
setno
sub
and
xor
aaa
pop
inc
js
lods
or
add
and
push
add
jb
cmp
sbb
call
addl
jb
cmp
andl
int3
enter
ja
mov
add
dec
and
in
jb
or
xchg
sbb
and
enter
pop
jb
or
sbb
and
push
in
add
cmp
add
mov
and
ret
jb
cmp
scas
hlt
add
and
insb
enter
fs
cmp
shlb
and
dec
or
dec
out
rcrl
dec
lods
xchg
xchg
movzwl
rolb
shl
adc
ret
call
sarb
mov
and
sbb
add
orb
cmp
xorb
scas
mov
jnp
xor
push
subl
imul
add
mov
mov
shlb
jae
in
xor
aam
or
icebp
xchg
repnz
enter
cmc
or
negb
out
add
stc
xchg
cli
enter
pop
jb
cmp
sbb
loope
sub
and
xchg
in
in
out
jb
cmp
adc
adc
jmp
gs
inc
in
or
in
sbb
inc
out
xchg
adc
shll
add
jb
cmp
sbb
subb
and
xchg
fcmovne
add
in
jb
cmp
sbb
shlb
and
xchg
add
enter
jb
cmp
sbb
leave
mov
xchg
lret
add
in
jb
and
iret
inc
inc
mov
mov
xor
mov
in
pop
test
and
in
jb
cmp
mov
dec
call
sbbb
aas
adc
inc
test
out
mov
cltd
loopne
or
cmova
mov
pop
rolb
xor
add
rorb
js
shlb
ja
add
popf
repz
fiaddl
adc
pushf
add
dec
gs
jo
pop
nop
stc
pcmpgtb
test
loopne
pusha
jmp
add
gs
outsl
add
cmp
clc
movsb
pop
divb
and
jp
and
or
dec
outsb
add
jno
lret
pop
cmp
inc
jp
and
or
pusha
subb
insb
add
nop
cmp
pop
mov
mov
fs
insb
jno
pop
pusha
enter
or
push
adc
add
or
xor
or
or
imul
mov
xchg
sarb
scas
outsb
gs
sbb
fimuls
loopne
dec
jbe
add
xor
sbb
inc
addr16
addb
or
pop
dec
lds
xor
enter
int3
popw
dec
mov
jbe
sbb
fs
add
sarb
clc
adc
mov
sarb
and
pop
rorb
xchg
push
insb
inc
popa
xchg
mov
outsb
pop
push
fs
lea
mov
punpcklbw
int
test
int
xor
push
repnz
xchg
add
stc
jp
mov
outsl
mov
fcoms
shll
adc
inc
inc
arpl
push
mov
pop
insb
popa
and
push
add
pop
sub
push
loopne
jns
add
in
nop
pushf
pop
push
jb
add
or
imul
int3
push
repnz
dec
je
cmp
loope
pop
hlt
add
inc
ds
xchg
or
lods
pop
in
popf
add
gs
push
std
inc
dec
popa
rcrb
lea
jo
add
insb
popf
pusha
inc
push
or
test
jb
jae
mov
pop
sub
lods
xchg
cmp
sbb
aas
nop
shr
adc
add
add
xor
push
and
in
mov
inc
ret
pop
ljmp
pop
or
adc
xorb
mov
stc
mov
jge
add
pop
dec
dec
and
into
imul
and
insl
jnp
add
pop
or
out
add
mov
fnstcw
xchg
fmuls
jge
push
daa
pop
pop
hlt
add
dec
sub
shl
clc
ds
or
mov
cmp
add
inc
jp
shrb
mov
inc
xor
sub
jmp
int
xchg
jbe
jmp
stc
addr16
push
mov
shll
add
in
leave
add
cmpsb
je
or
xchg
fimull
adcb
fsubl
mov
mov
sti
je
fmuls
xor
add
push
lods
nop
dec
call
push
adc
adc
adc
adc
fisubs
or
pop
inc
dec
jp
add
adcl
mov
adcb
lahf
and
addb
ja
jae
hlt
add
jge
cmp
adcb
xchg
sub
xor
add
lret
push
inc
cmc
sahf
push
addr16
shlb
ret
push
test
or
aas
pusha
ret
mov
shl
stos
adc
or
lods
and
and
and
lret
adcl
adc
dec
cld
mov
loop
mov
xchg
xor
sub
leave
sub
or
add
in
mov
mov
je
cmp
add
ds
dec
aas
sbb
hlt
dec
fidivrs
xor
push
add
add
hlt
and
mov
add
push
lock
mov
add
mov
jno
je
pop
push
inc
bound
cmpsb
dec
ds
mov
fidivl
aaa
xor
aad
mov
add
test
push
js
add
ror
dec
adc
cltd
pminsw
dec
iret
mov
stc
inc
xchg
sub
test
xchg
daa
loope
fmuls
fadd
mov
push
sub
xchg
call
sub
sbb
enter
xchg
negb
or
jne
in
aas
push
ljmp
xor
add
lahf
rcrb
fsubrs
stos
dec
nop
lret
pop
add
pop
sbb
push
nop
sub
pop
pusha
addb
xchg
rolb
jmp
cmpsb
jbe
repz
cmp
jg
mov
pop
lcall
fcompl
xor
and
push
cmc
push
aas
add
sbb
adc
add
push
divb
pusha
add
sarl
xchg
es
mov
mov
ljmp
addr16
sbb
ret
mov
xor
cmp
call
and
movsl
rol
lahf
add
cmp
or
and
add
addl
insl
dec
loope
adc
clc
hlt
push
cmp
push
add
sbb
dec
pop
sbb
lods
pop
sub
jo
sbb
add
push
adc
ret
call
das
subb
xchg
add
lock
incb
adc
enter
rorb
jmp
mov
add
shl
push
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
sbb
cld
sarl
pop
add
and
sar
add
clc
inc
cmp
adc
pop
pop
push
mov
lret
dec
mov
push
jne
add
push
add
imul
jb
bound
dec
lock
ret
adc
and
or
call
decl
shlb
add
adc
inc
push
cli
test
pop
or
pop
sbb
fsubp
cwtl
push
xor
jl
test
or
add
sub
test
lods
add
push
inc
pop
test
adc
mov
andb
jne
cs
dec
dec
inc
sub
adc
shlb
dec
je
loopne
add
cs
in
scas
add
or
icebp
jbe
push
lea
jg
nop
sbb
daa
add
and
lahf
adc
mov
add
roll
lea
por
inc
stos
shll
sar
sbb
pop
and
in
add
pop
out
jl
nop
sarb
push
call
mov
test
add
iret
jge
and
pop
add
mov
roll
dec
test
add
add
lret
decl
popa
add
stc
inc
or
and
push
add
mov
add
add
ss
inc
lea
repz
out
mov
pop
scas
push
inc
jae
add
shlb
inc
and
dec
lock
cmp
into
mov
lods
or
and
bound
aas
sub
add
dec
das
sbb
hlt
out
cmp
ret
push
orl
sbb
add
xor
or
lcall
and
jmp
adc
dec
mov
addl
loopnew
xor
jne
push
cmp
sbb
add
hlt
dec
jae
push
fisttpl
cmpb
jl
add
adc
roll
movsb
pop
xchg
mov
pop
rcr
xchg
push
faddl
lahf
add
mov
push
mov
add
jmp
pop
clc
leave
add
test
xor
sarb
getsec
imul
pusha
cmp
jae
mov
rorb
push
addb
xchg
in
jmp
mov
push
add
call
mov
jl
mov
es
je
xchg
dec
fsubrl
add
mov
cmp
push
pop
test
jne
lea
fisubs
movzbl
shr
and
sahf
pushl
add
loop
inc
stc
mov
lds
pushf
or
cltd
xchg
jns
shlb
xor
jl
add
inc
and
push
notb
movsl
xchg
push
rorb
dec
fsubrl
adc
iret
add
test
cltd
adc
leave
cwtl
push
int3
cmp
inc
cmp
push
aad
orb
jne
sarb
testl
je
leave
sbb
pop
mov
and
mov
add
stos
enter
jne
addps
out
loopne
cmc
sub
dec
add
pop
xchg
sub
pusha
pusha
mov
jb
pop
xchg
dec
push
push
mov
mov
fldl
or
shlb
lea
xorb
roll
or
add
pop
cli
jmp
mov
pop
inc
test
xchg
pop
shlb
pop
negl
dec
aas
setg
cmpsb
xchg
mov
into
add
bound
aam
add
push
js
imul
push
add
xchg
add
inc
xor
xchg
add
mov
ret
inc
mov
xor
and
cmp
dec
mov
lock
ja
add
or
push
jl
or
mov
add
pop
jle
add
push
pusha
or
xor
dec
add
stc
mov
push
add
inc
adc
inc
loopne
dec
dec
mov
mov
add
pop
pop
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
or
add
sub
mov
es
push
cli
add
or
call
pop
roll
flds
cld
and
xor
js
or
xchg
stc
dec
mov
add
arpl
popa
lahf
in
fs
or
or
shlb
loopne
add
pop
gs
xor
add
rorb
xchg
xchg
add
cmc
pop
sbb
and
fisttpll
add
push
add
inc
cmc
cmp
leave
sar
add
out
rcrl
lret
or
add
jecxz
movsb
jne
add
sub
test
out
or
cwtl
jnp
add
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
popf
aam
dec
xchg
cmpb
push
cmp
mov
outsb
add
arpl
dec
in
dec
mov
or
sbb
mov
sbbb
add
mov
outsl
enter
push
ret
xor
mov
in
cmpsl
fdivrs
add
mov
stc
popf
sub
je
add
fldt
fs
adc
int
ljmp
dec
dec
and
mov
sub
or
cmpsb
sbb
xor
sub
push
or
clc
mov
add
mov
xchg
clc
add
jl
inc
pop
pushl
jae
dec
or
add
inc
add
cmovno
fstpl
ret
adc
imul
sub
add
ret
add
add
or
rorb
and
fildl
fdivs
inc
or
sbb
mov
pop
mov
movsb
add
dec
fstl
add
push
pop
and
jp
add
popf
jno
cmp
iret
add
int
sti
imul
or
add
and
jo
jp
add
rolb
clc
pop
fwait
cmp
and
mov
adc
push
or
adc
xor
add
mov
mov
mov
adcb
xchg
inc
and
cmp
cltd
or
iret
daa
cld
add
aaa
push
and
add
imull
pop
xchg
or
test
add
loopne
mov
add
mov
mov
add
fisubrs
mov
psllw
je
xor
leave
out
sub
clc
add
dec
in
xor
std
dec
add
xchg
or
imul
jg
add
out
cmp
lds
and
popf
orb
xchg
mov
xchg
push
shlb
cwtl
aam
add
popa
jb
or
add
xor
insb
cld
xbegin
sbb
ja
adc
jle
jae
shlb
pop
dec
aas
add
in
push
mov
cltd
mov
icebp
insl
lds
add
mov
sbb
sub
lock
fwait
mov
add
jl
or
orl
add
adc
je
data16
add
test
test
and
js
imul
and
ja
adc
add
test
and
dec
std
adc
and
xlat
add
jg
insb
mov
aad
or
pop
in
mov
insl
and
fs
inc
jno
add
jl
sbb
jmp
jno
imul
in
mov
xor
lods
es
imul
jne
mov
or
imul
pop
inc
je
push
sub
lcall
dec
sub
add
add
or
sub
push
sbb
fimull
and
add
sahf
aas
xor
add
in
in
mov
push
sbb
jb
cwtl
and
push
inc
add
fistpll
add
push
add
icebp
andb
hlt
cltd
mov
push
aas
test
xor
push
dec
or
insb
pop
pop
mov
mov
pop
iret
ss
cld
mov
add
ret
fisttpll
loopne
test
push
movsb
jecxz
dec
add
or
sub
lret
cwtl
mov
xchg
in
rolb
imul
sbb
jecxz
mov
and
insl
mov
sbb
and
mov
and
mov
cltd
cld
jbe
jg
sar
or
fcmovbe
add
test
inc
adc
inc
adc
jmp
repnz
mov
add
cwtl
sbb
xchg
push
rcrb
pop
pop
sub
out
lods
nop
adc
xlat
add
add
xor
popa
in
in
insb
push
add
out
pop
pop
xchg
sub
mov
pop
add
mov
data16
pop
movsb
dec
fwait
mov
es
add
jmp
push
jnp
mov
mov
je
push
mov
mov
add
lods
js
push
adc
addl
ds
pop
repz
popa
sbb
add
push
dec
repnz
sbb
add
jecxz
dec
xor
dec
aas
out
call
rcr
push
add
sub
je
imul
add
mov
cld
sub
cwtl
and
push
in
gs
shrb
lock
xor
mov
mov
stos
adc
cwtl
in
push
mov
jge
sub
push
xchg
sbb
dec
dec
clc
loope
cmpsb
jno
orb
add
das
fsts
mov
pop
sub
dec
jne
mov
leave
sbb
fsub
add
ret
in
inc
push
add
cs
gs
jno
enter
add
jmp
inc
cmp
add
dec
xor
jecxz
adc
repz
stos
in
push
pop
aas
cmp
fbld
xor
ret
loop
push
adc
or
jno
mov
test
mov
cmpb
testb
daa
out
pusha
and
push
jmp
cmp
dec
in
xchg
repnz
mov
shlb
rorb
add
dec
adcb
add
jg
in
mov
push
jmp
inc
shrb
aam
adc
scas
cmovae
add
cmpb
jb
pop
push
inc
inc
or
dec
hlt
add
mov
add
sub
push
clc
into
jns
loop
add
sbb
mov
fadds
repnz
add
aad
add
test
jecxz
sti
push
lea
hlt
mov
cltd
out
adc
adc
mov
sub
xor
jecxz
pop
loop
cmpb
mov
add
bt
das
jae
cld
sub
lahf
clc
sub
add
dec
add
add
cwtl
add
sbb
or
adc
add
clc
sti
rorb
push
add
pop
xor
add
ja
addb
hlt
cmpsb
push
jmp
sub
or
loope
or
aaa
dec
shrl
add
rolb
ljmp
or
ljmp
inc
xor
dec
ret
mov
test
and
inc
pop
std
cs
xchg
lsl
and
outsl
sbbl
mov
xor
and
dec
mov
mov
ret
or
xor
mov
dec
es
lea
lea
cmp
iret
sub
outsl
sub
addr16
xchg
mov
jae
add
add
add
xor
xchg
push
mov
test
pop
les
inc
inc
lret
movsl
pop
add
fmuls
je
and
push
addr16
movsl
add
ja
imul
popa
das
push
call
fiaddl
scas
and
mov
mov
sub
add
and
leave
push
or
mov
loope
jne
jmp
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
jmp
push
pop
add
pop
cwtl
sbb
push
enter
push
inc
add
sahf
jne
mov
mov
ljmp
ror
adc
loopne
adc
add
jne
fs
add
inc
xor
mov
add
hlt
test
shlb
cmp
ljmp
push
jg
lahf
pusha
ljmp
je
xor
call
pop
jle
jp
add
push
adc
add
ds
sub
popf
loope
int3
lea
add
fmuls
loop
xchg
in
push
cwtl
rcrl
or
pop
xchg
or
test
lret
add
inc
mov
push
stos
add
dec
mov
jne
sub
or
or
push
add
sub
daa
add
add
popa
sub
xchg
add
cmp
call
repnz
shll
cltd
and
pop
fstl
rolb
add
loop
xor
cli
fisubs
pop
inc
loopne
lret
aas
mov
fwait
mov
ljmp
fcomps
mov
add
fimull
or
call
out
xor
mov
dec
xchg
cld
rolb
mov
sbb
jo
adcb
lock
add
cmpsb
dec
or
dec
int3
mulps
pop
sub
cmp
out
add
clc
lds
mov
add
pop
and
adc
lods
insb
or
stc
aaa
aas
push
add
mov
fcoms
mov
daa
lds
add
jo
inc
dec
das
push
jnp
cmp
add
sbb
insl
adc
hlt
or
add
sub
cwtl
sbb
test
xchg
fcmovu
leave
inc
ret
add
and
or
mov
dec
lds
jns
add
pop
jmp
inc
add
dec
adc
jns
aas
pushf
sbb
inc
inc
shlb
or
scas
adc
hlt
aad
pop
lds
jmp
pop
jg
inc
inc
push
add
add
popf
mov
add
js
test
fs
mov
pop
push
add
xor
jmp
mov
add
enter
setg
ljmp
mov
test
andb
or
or
jp
adc
cmp
jle
fnstsw
jle
add
scas
pop
int3
or
add
add
pushaw
xchg
cmp
jecxz
shlb
jnp
pop
mov
cmp
out
cmp
aam
mov
sub
push
mov
pop
dec
push
xor
clc
call
inc
sub
and
cmp
pop
clc
add
inc
lods
mov
xchg
fmull
call
adc
jno
pop
je
ja
sub
repz
cmp
ret
mov
mov
std
add
xor
gs
sub
fildll
je
sbb
enter
sbb
jo
push
or
loop
push
or
imul
lock
add
pop
sbb
jle
filds
ret
das
out
dec
pop
mov
add
insb
xor
ja
push
aad
xor
and
adc
call
inc
mov
es
aam
sbb
hlt
sub
mov
pop
xchg
pusha
adc
add
pop
mov
xchg
enter
sbb
or
ret
or
sbb
jle
fmuls
fnstcw
mov
push
adc
xor
jg
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
frstor
int3
movsb
add
daa
add
hlt
inc
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
sti
loopne
jle
pop
adcl
inc
out
adc
in
or
orb
inc
inc
cwtl
mov
jnp
pusha
aam
repnz
jo
addr16
jne
cld
add
inc
dec
jl
lods
jae
cmp
sub
adc
sub
lea
add
cmp
ficoms
insl
xchg
dec
jns
movsb
sbbw
push
sbb
mov
mov
add
adc
jp
pop
jno
xor
add
xchg
or
sbb
mov
pop
ljmp
jo
test
lcall
add
sbb
jb
inc
and
bound
es
out
add
mov
and
add
ss
sbb
inc
les
notb
mov
pop
call
sbb
lock
aam
sub
movsl
push
jbe
lldt
jl
dec
clc
jmp
ds
cmc
push
mov
out
push
add
adc
and
push
mov
fcompl
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
sub
mov
push
jnp
add
sub
pushf
je
fildll
test
add
fwait
cmpsl
xchg
test
or
cmc
mov
sbb
add
mov
push
pop
and
fmul
cmp
push
add
cli
pop
pop
call
sub
sbb
pop
ret
je
pop
daa
push
fmuls
mov
or
add
outsb
push
add
cli
push
out
icebp
ds
jno
maskmovq
nop
mov
movsb
mov
adc
mov
gs
pop
and
add
add
shrb
and
sbbb
call
and
test
push
pop
imul
xchg
inc
add
mov
jmp
add
sub
test
add
aad
ret
pushf
or
and
jne
jmp
roll
ret
add
inc
sbb
sbb
fildll
adc
or
lea
sbb
push
gs
push
add
mov
xor
inc
mov
add
sbb
pop
cmpsl
js
cmp
dec
pop
shlb
or
and
adc
push
iret
cmp
pusha
mov
in
sub
mov
mov
pop
sbb
fcoml
lret
int3
lea
add
add
leave
or
add
outsl
js
lods
inc
test
popa
lea
push
add
push
fmuls
push
dec
sbb
sbb
cwtl
adc
lods
icebp
and
xor
sahf
jl
sub
xchg
jbe
adc
das
jo
inc
mov
jmp
add
lods
or
sbb
add
loopne
jb
inc
or
test
dec
xchg
adcb
sub
idivl
and
cmp
aaa
or
adc
es
jo
add
and
je
add
shlb
add
inc
in
in
add
fldenv
clc
push
or
adc
js
add
mov
ret
pop
lcall
es
add
dec
rorb
add
in
shll
outsl
xorl
xchg
add
dec
bound
mov
mov
push
xchg
call
mov
popf
addl
add
aad
pop
and
inc
orb
jl
cs
std
jmp
or
adc
nop
mov
add
js
enter
in
and
inc
cmp
jg
scas
jno
dec
test
test
add
dec
jmp
insb
mov
pushf
push
sub
ficoms
push
mov
in
lahf
add
jmp
xchg
jle
je
xchg
and
pop
pop
inc
mov
add
mov
insl
jp
les
testb
pop
test
sub
add
sub
shlb
call
xchg
scas
mov
pop
or
mov
add
sti
loope
xchg
or
sbb
lock
add
insb
popa
push
xchg
aam
mov
sub
popw
add
xlat
cmpsb
push
outsl
fucom
popl
pop
std
into
inc
dec
stc
arpl
or
movsb
das
cmp
addb
mov
ss
push
add
add
push
mov
loopne
add
enter
fiadds
jl
xchg
pushf
jo
loope
add
scas
mov
nop
mov
and
imul
setl
and
addb
xor
add
subb
adc
insb
repz
stc
std
xor
add
inc
push
ud0
cmpsl
fadd
and
push
mov
inc
add
sub
adc
sub
add
jle
shr
stos
mov
mov
scas
lods
push
cmpl
mov
and
sahf
cmp
dec
dec
test
add
jmp
test
ja
xchg
cmp
lock
dec
js
jge
push
hlt
es
and
adc
jbe
pop
aas
add
sbb
sbb
test
pop
add
jne
and
and
inc
add
lock
sub
jle
adc
cld
mov
jmp
xor
xchg
mov
mov
add
lods
sub
adc
add
jge
andb
push
add
cmp
cmc
jne
push
cmp
rolb
movsl
and
mov
push
cmpl
pop
pop
popf
out
std
mov
call
and
push
dec
ds
ret
and
mov
movaps
popf
xor
mov
mov
call
inc
rolb
and
repz
and
inc
inc
mov
adc
add
adc
jae
push
sub
mov
data16
into
movsl
clc
xchg
adc
add
cs
push
mov
das
out
inc
cld
mov
add
jg
and
orl
insb
hlt
dec
je
or
sbb
or
addr16
lret
int3
add
mov
inc
mov
lahf
push
add
mov
pop
rolb
mov
or
dec
ficomps
xchg
aas
push
xchg
loopne
jbe
cmpsb
add
or
repz
add
call
add
stos
mov
addl
inc
icebp
xor
ficoms
ss
push
add
sub
jmp
dec
and
add
hlt
or
inc
add
shl
push
decb
add
jmp
fcomi
lds
sub
sub
dec
cltd
jb
enter
cmp
add
cld
add
scas
ret
mov
fwait
push
inc
test
jle
dec
pop
cltd
jl
subb
adc
sti
sbb
sahf
aad
imul
adc
mov
fldenv
add
outsb
cmp
sbb
lea
push
add
push
mov
arpl
dec
ret
testl
test
sti
pop
push
jg
or
clc
jne
icebp
inc
push
adc
add
fs
jmp
sbb
jne
mov
inc
std
loopne
test
jmp
mov
add
inc
mov
add
imul
dec
adc
rorb
push
addl
push
jb
or
and
mov
add
xorb
or
lcall
jge
add
cltd
pop
nop
add
mov
xchg
enter
cld
xchg
cmp
sahf
push
jl
adc
jg
add
jmp
pop
push
add
jo
in
addb
add
push
lock
jge
hlt
add
xchg
and
xchg
lods
add
pusha
jae
dec
in
pop
ljmp
into
inc
mov
pop
add
dec
inc
cmpsl
add
mov
les
mov
loope
mov
call
add
andl
add
sub
or
insb
xchg
lcall
enter
pop
popa
shrb
rolb
xchg
add
out
addb
xor
sbb
xchg
jmp
jae
in
xor
repz
repnz
adc
xor
push
jmp
loopne
or
add
and
add
enter
jg
pop
inc
or
orl
or
adc
jns
mov
fcoms
nop
incb
xchg
movsl
sbb
or
mov
and
adc
mov
add
cmpl
popa
jg
and
xor
sbb
add
and
lock
add
jne
pop
sub
in
and
out
test
cld
add
dec
lea
cs
mov
notb
add
mov
xchg
and
mov
les
xchg
push
ror
enter
in
mov
shlb
adc
sbb
mov
orb
cwtl
imul
jg
jnp
cmp
mov
jle
cmp
add
sbb
into
mov
mov
inc
mov
mov
outsl
call
pushl
fstps
xlat
arpl
mov
mov
cmp
rclb
add
or
lret
or
movsl
pop
sbb
add
pop
ret
stos
out
cmp
xor
addl
lods
scas
je
lock
pop
loopne
mov
xor
or
repnz
add
adc
xchg
push
add
xor
mov
testl
adc
scas
aaa
add
fistl
and
jne
mov
test
xchg
je
arpl
aas
lret
mov
and
test
cld
das
in
jl
add
xchg
add
adc
pop
or
add
shrl
and
test
clc
sahf
mov
jns
add
xor
mov
inc
dec
nop
cmp
frstor
mov
mov
add
cmp
add
add
ss
pop
lods
sbb
aam
test
or
cld
test
pusha
inc
sbb
sub
mov
mov
add
and
popa
in
xchg
pop
mov
mov
scas
pop
and
mov
daa
add
lret
add
cmpsl
or
add
outsb
ficompl
lods
xor
test
xchg
data16
pusha
mov
adc
push
fs
cld
outsb
jmp
dec
mov
add
jl
mov
xor
or
andl
nop
es
add
or
cmp
add
in
adc
stos
sbb
inc
fsubs
out
ret
pop
pop
jns
imul
add
testb
dec
sarl
xchg
imul
nop
sub
leave
push
adc
sub
xchg
cmp
xchg
mov
or
add
sub
sbb
xchg
push
push
adc
in
pop
negb
add
or
repz
les
inc
sub
sbb
incl
sbb
add
inc
shll
add
jnp
add
jle
mov
pop
push
add
adc
fwait
and
outsl
add
imul
sbb
mov
mov
rcrb
add
xor
fildl
mulb
lret
add
aas
shlb
sub
push
int3
inc
cs
shlb
roll
add
add
xchg
jg
add
jp
pop
test
jmp
decl
add
add
testb
add
cmp
test
inc
jge
cltd
or
pop
loopne
mov
add
lahf
mov
jge
adc
cli
add
cs
sub
inc
in
out
mov
hlt
cmpsb
jnp
addb
jl
in
add
js
jge
lea
add
lds
out
add
arpl
test
and
in
cmp
cmp
or
add
xlat
ret
pushf
adc
clc
sub
push
sbb
add
inc
in
ret
jne
xchg
add
dec
cmp
incb
imulb
movsl
fstl
shr
mov
sub
pop
adc
adc
call
xor
add
push
clc
jle
push
add
js
sub
adc
inc
in
jp
pcmpeqw
sti
inc
aam
daa
lods
scas
add
push
insb
movsl
mov
inc
push
or
pop
call
push
inc
stc
add
mov
mov
retw
pandn
sarb
repnz
add
adc
add
cmp
cmc
xchg
dec
push
pop
jae
dec
loop
cmp
stos
add
setg
lret
lds
mov
loopne
lret
dec
addb
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
dec
int3
lret
cld
out
add
repnz
shrb
aam
sarb
pop
int3
test
mov
icebp
orb
push
push
cmc
and
jecxz
and
test
mov
push
xchg
sub
push
roll
adc
int
add
and
in
add
jbe
add
sbbb
sub
add
xchg
add
jb
add
loop
loopne
sbb
dec
mov
mov
push
mov
repnz
pop
adc
push
xchg
push
outsb
xchg
sbb
mov
das
mov
cmc
rcr
mov
pop
cmp
sub
add
add
sbb
aam
test
jbe
sbb
mov
inc
cld
add
dec
insl
jo
mov
and
add
mov
hlt
ret
pop
shl
ja
cld
or
cwtl
push
hlt
cmpsb
daa
push
enter
inc
aam
jmp
mov
lret
sbb
les
mov
mov
pop
fsubl
push
adc
push
rol
hlt
mov
clc
inc
mov
push
cld
push
inc
pop
inc
mov
push
add
adc
adc
mov
stc
or
and
and
stos
mov
pushf
ds
add
fnstenv
sbb
mov
das
jb
popf
cmp
and
sub
out
mov
add
hlt
or
add
test
and
outsb
in
shlb
enter
ltr
nop
cmp
movsl
test
sbb
push
adc
add
cmc
and
cmpl
pop
ret
jmp
mov
test
call
inc
icebp
sbbb
and
sub
mov
cmp
pop
or
add
fsubl
add
inc
imul
add
popa
arpl
inc
xor
inc
mov
mov
add
cs
adc
add
cld
loope
enter
mov
shlb
pop
ds
dec
subb
cmpb
cwtl
sete
dec
popa
and
and
jp
iret
cli
jl
subl
adc
or
push
movsb
xor
cmp
xor
adcb
and
mov
sarb
or
cwtl
xor
mov
xchg
es
idivl
add
mov
add
in
sub
clc
sbb
fdivr
lock
in
or
call
dec
int3
sbb
outsl
adc
test
popf
call
and
xchg
shr
mov
loope
insb
in
aad
cltd
push
mov
and
rorl
adc
and
loopne
cmp
push
xor
adc
insl
pop
pushf
sub
xchg
push
loopne,pt
mov
mov
pushf
pusha
lahf
adc
dec
setg
scas
fs
or
cmpsl
repz
sti
adc
adc
mov
fistps
xor
mov
aas
xor
nop
jg
insb
adc
test
sbb
dec
jl
jle
xorl
mov
jg
add
out
sub
cmp
push
push
dec
dec
inc
inc
inc
xchg
xlat
es
mov
dec
fildl
stc
mov
pop
pop
mov
cmp
gs
jge
mov
jle
cmp
dec
or
sub
std
addb
jge
add
ljmp
inc
movsb
lock
cld
popf
add
lds
mov
fsubrp
inc
lahf
sbb
scas
jmp
mov
and
jne
mov
adc
sti
add
add
ja
xor
mov
add
pop
aaa
scas
pop
ljmp
outsb
add
rcrb
mov
add
jne
mov
rorb
arpl
insl
cwtl
dec
sub
cmp
inc
add
cmp
jl
push
sbb
leave
pop
sbb
punpckhwd
xchg
mov
and
in
jmp
sbb
stos
xor
xchg
je
clc
sbb
mov
loopne
and
stos
push
pop
lret
or
pushf
or
xor
push
aas
add
sub
mov
loopne
and
lret
adc
sbb
or
repnz
xchg
mov
mov
add
mov
stos
or
inc
xchg
jmp
nop
add
jge
cmpsl
cmp
mul
mov
stos
xchg
push
add
xor
in
add
aad
or
jmp
ds
push
adc
pop
adcb
add
push
loop
add
add
sub
fistl
roll
mov
div
mov
add
mov
dec
je
dec
add
mov
xor
sbb
ret
jecxz
aas
jns
pop
add
daa
sub
idivl
ret
mov
xor
and
and
add
cmp
fnstenv
add
int3
fisttpll
daa
mov
mov
cmp
je
push
push
in
and
nop
sub
sub
or
lcall
syscall
pop
pop
inc
loop
scas
push
ret
rolb
das
test
add
sbb
cld
inc
sbbl
and
jg
cmpsl
insl
or
and
mov
lahf
lock
sub
inc
add
and
clc
xor
mov
cli
cs
push
cmp
cli
insb
add
xor
mov
xlat
jne
xor
xchg
mov
add
mov
push
mov
addb
inc
add
xchg
jmp
pop
scas
jle
or
pusha
jmp
push
dec
lock
mov
call
pushf
adc
pop
pop
cwtl
nop
rolb
cmp
mov
scas
icebp
add
xor
aaa
dec
fimuls
pop
or
stc
add
adc
jne
and
push
add
sbb
adc
out
jecxz
outsl
xor
scas
jp
add
xor
add
int3
sub
mov
ljmp
sti
dec
sub
or
jecxz
sbb
and
mov
xchg
adc
push
pop
out
loop
mov
loopne
add
or
inc
or
rolb
lods
cmp
movsl
shlb
add
mov
add
mov
add
push
hlt
push
mov
mov
and
pushf
add
daa
xor
jb
je
add
ss
clc
inc
clc
mov
jmp
inc
inc
int
outsl
mul
add
addb
jbe
xor
add
push
mov
and
sub
mov
add
or
sti
jmp
add
testb
sub
test
ljmp
testb
or
in
ret
nop
mov
xchg
adc
movsb
push
rcrb
stos
cmpsb
and
aas
bound
sub
faddl
sbb
ljmp
add
or
cld
cmp
mov
clc
sub
adc
jbe
repz
out
and
dec
sbb
inc
push
icebp
dec
xor
into
subl
mov
test
pmuludq
shll
cld
mov
jne
fsubl
inc
inc
add
int
add
mov
xchg
add
and
xor
pop
jmp
out
push
ret
fiadds
fsubs
std
arpl
out
mov
dec
add
jmp
or
xor
les
in
adc
push
inc
or
inc
and
or
mul
cld
xor
bsr
xlat
loopne
insb
jmp
push
add
pop
inc
addl
push
jle
pop
mov
sub
repnz
jne
push
mov
dec
rolw
jecxz
mov
cmp
mov
xor
insl
pop
movsb
xor
leave
or
inc
shlb
add
or
testw
adc
add
add
dec
inc
adc
add
push
fldt
adc
pop
aas
or
imul
clc
in
test
fsubs
loope
pop
dec
xchg
jo
add
sub
fsubs
fldl
cmp
add
int
inc
pop
out
clc
filds
ds
jnp
mov
add
fucom
mov
and
mov
xor
jmp
mov
clc
lsl
add
cmpb
sbb
or
add
aas
cld
jg
sbb
orb
push
and
pop
in
jmp
add
cmpsb
xor
mov
sbb
and
inc
mov
or
ljmp
add
dec
ret
add
mov
cmp
add
or
mov
add
adc
jne
xchg
ljmp
add
xor
jl
add
sub
addl
or
push
add
sbb
lock
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
aas
lock
notl
or
sbb
ret
les
jne
add
lret
jmp
test
add
stos
and
push
and
inc
sbb
lea
xchg
push
adc
cmp
aad
cmpb
sub
mov
jmp
dec
stc
leave
lock
push
aad
dec
dec
push
inc
lock
icebp
push
rcr
loop
sub
out
add
xor
cmpsb
sarl
incl
cwtl
lds
or
add
jmp
sbb
cmp
sub
adc
je
aas
sub
add
sbb
xchg
call
sub
rolb
or
and
add
ret
popa
rclb
stc
inc
add
fchs
xchg
addl
aas
jmp
and
add
mov
std
loopne
ds
adc
loopne
ret
lods
out
add
lret
dec
cld
cmp
orb
jae
fimull
nop
repz
push
push
adc
ljmp
daa
pop
mov
dec
xchg
sub
jns
cmp
lahf
xor
sar
add
sbb
adc
cmp
adc
mov
push
jne
lret
popa
mov
es
les
push
add
and
add
push
test
inc
sbb
shrl
add
inc
pushf
mov
cmp
mov
add
rcll
sub
push
mov
jl
xchg
xor
sub
or
push
and
mov
clc
sub
add
int3
or
lret
jns
stos
das
push
loope
mov
jae
xchg
dec
movsb
xchg
pop
add
and
ljmp
add
adc
xor
sbb
clc
fldl
add
jo
scas
xchg
adc
fwait
je
add
xchg
cmp
jmp
ficoml
jo
js
and
rolb
bswap
ret
adc
and
jl
fadds
mov
pop
push
or
sub
pop
ljmp
dec
cmp
xor
fninit
push
not
mov
cmp
sarl
add
loopne
add
add
call
out
cmp
sub
test
pop
inc
cmp
cmp
or
cmp
or
jl
add
xor
mov
addb
iret
fdivr
imul
pop
add
test
jbe
arpl
add
lret
enter
stc
push
add
dec
andl
sti
mov
cmp
ja
mov
adc
push
adc
cli
jae
pop
shll
add
call
adc
inc
mov
sub
jb
pop
jecxz
adc
int3
loopne
jne
mov
sbb
dec
leave
inc
and
movsl
std
cmp
sbb
arpl
loop
int
les
fnsave
add
stos
push
ret
orb
sub
into
dec
pop
out
mov
daa
lea
dec
add
jmp
leave
addb
xor
xchg
add
daa
or
ret
lahf
sub
je
xchg
add
shlb
add
and
add
test
dec
clc
repz
ljmp
push
and
mov
mov
or
adc
xor
and
ja
add
dec
loopne
incb
test
rorl
nop
add
add
mov
aas
sbb
daa
movzwl
mov
push
xchg
mov
jl
pop
push
add
pop
cmp
mov
bnd
xchg
jb
insb
add
mov
ret
inc
inc
push
std
dec
mov
into
mov
mov
es
push
je
nop
ds
or
out
addl
push
jne
js
add
add
test
gs
pop
cmp
cmp
les
dec
sbb
add
jne
add
mov
fildl
sub
dec
pushf
in
rcrl
add
push
jne
jno
jp
mov
lods
adc
sbb
loope
setne
and
hlt
loop
add
jecxz
rorb
shrd
sbb
xor
lds
jne
aam
and
sbb
cmpb
xor
xor
lock
xor
cmp
mov
imul
xor
bound
mov
dec
xchg
cmp
daa
mov
lds
int3
addr16
pusha
or
jle
leave
in
mov
stc
lahf
add
imul
ljmp
jmp
push
divl
add
or
add
jmp
and
inc
pusha
es
pop
in
movsb
cmp
mov
aaa
push
add
sub
or
nop
xchg
xchg
add
push
cmp
dec
out
xchg
pusha
cmpb
inc
jo
add
inc
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
aam
xchg
jo
or
popa
bound
addr16
insb
insl
outsb
add
jno
push
jae
jne
add
jns
xor
xor
add
cmp
das
add
pop
pop
jo
add
cmp
sub
and
or
mov
das
fidivrl
imul
and
xor
subb
jle
add
pushl
jg
aam
mov
xor
xchg
inc
jl
or
mov
add
shlb
lods
dec
xchg
or
adc
lss
je
outsb
fld
cmp
add
pushf
jecxz
insl
popf
rcrl
shlb
or
enter
xor
add
or
add
stos
jge
xchg
pushf
pop
in
add
test
scas
jno
imulb
push
push
aaa
push
daa
sub
push
mov
cmp
mov
imul
jno
outsb
es
stc
adc
xor
or
push
fildl
pop
mov
add
roll
inc
dec
loope
out
test
or
dec
inc
mov
xchg
push
inc
psubb
aas
mov
and
daa
lret
add
dec
addl
aad
mov
popf
adc
add
pop
sti
jecxz
add
in
fnstcw
add
push
dec
stos
add
and
lock
pop
hlt
pop
loopne
shl
movsl
add
add
push
or
and
and
sti
add
add
cmp
add
jl
lock
clc
mov
fs
fsubs
add
testb
jg
or
cld
popa
mov
jl
add
xchg
rcll
adc
cs
xor
and
decb
sbb
aam
nop
mov
add
dec
jne
cmpb
adc
adc
insb
or
popa
cmp
add
pop
add
or
dec
imul
xor
adc
mov
test
fnstenv
xchg
dec
add
and
add
scas
fcompl
add
leave
mulb
fwait
repz
sub
mov
popa
pop
inc
movsl
cld
call
into
pop
mov
bound
test
adc
xchg
outsl
notl
jne
andl
enter
mov
clc
inc
out
add
mov
lods
dec
add
adc
mov
xor
cmp
addl
push
sbb
addb
xor
or
jbe
pop
xor
and
adc
dec
sub
and
add
mov
cld
push
xor
loopne
adc
mov
push
pop
cmpb
pop
xchg
mov
jl
mov
mov
sbb
filds
addr16
adc
ret
add
in
jb
push
rclb
pop
adc
lret
test
negb
xor
dec
add
jno
push
mov
inc
adc
add
lods
lahf
mov
sub
aas
cmc
enter
sbb
sbb
rol
pop
inc
mov
bswap
test
adc
iret
arpl
jg
cmpsb
repnz
or
mov
cltd
mov
out
jl
movsl
rorb
sbb
in
mov
xchg
stos
int
popa
stc
pop
out
add
hlt
movsb
cmp
inc
sbb
mov
lcall
dec
adc
aad
add
ret
mov
mov
pop
pop
xchg
pop
dec
fs
lahf
pusha
ffree
jne
xor
cmpb
push
pop
pop
jle
inc
bound
or
push
jno
stos
add
es
icebp
push
jne
jae
xchg
sub
aaa
pop
push
das
push
into
sbb
fildl
push
add
jne
inc
ds
filds
or
pop
jae
mov
mov
lcall
testb
aad
add
enter
jns
dec
add
adc
pushf
xchg
cmpl
popf
add
icebp
xor
dec
scas
adc
add
pop
xchg
jl
shr
std
mov
push
and
inc
dec
adc
fcmovnu
xchg
sub
cltd
negb
add
pop
cmc
cmpsb
add
bound
mov
ja
sbb
add
mov
inc
inc
xchg
mov
jo
hlt
loop
hlt
xchg
add
call
stos
jnp
add
ljmp
add
mov
or
or
dec
jnp
add
imul
add
sub
add
push
jns
cld
jne
xor
push
leave
add
add
jl
pop
dec
pop
clc
inc
add
push
and
imul
ret
idivl
inc
repnz
add
cld
push
add
leave
dec
or
push
aad
add
mov
cwtl
push
mov
repnz
or
roll
lock
xor
xor
into
jne
jmp
rorl
pop
not
push
cmpsl
rclb
test
mov
psrad
andb
dec
fidivl
add
mov
pop
add
jno
icebp
mov
test
or
add
and
add
test
shr
jl
sbb
faddl
mov
mov
pop
sub
mov
sbb
add
jno
fwait
adc
push
push
std
in
mov
add
pop
jge
cmc
sub
add
sub
add
fwait
sbb
mov
enter
sbb
fldl
pop
pop
push
repz
push
les
push
lds
adc
sbb
pop
add
cmp
mov
pusha
dec
pop
add
and
outsl
push
mov
jns
popf
in
roll
sub
mov
or
inc
jl
addr16
daa
add
rolb
mov
test
add
adc
adc
mov
push
inc
jnp
add
xchg
stos
inc
mov
clc
add
aas
movsl
adc
shll
push
cwtl
sbbb
xchg
sbb
cmp
push
pop
push
fs
cmp
mov
enter
dec
push
add
shll
cmp
and
mov
add
aam
add
cmpsb
imul
aas
loopne
mov
movsb
scas
lahf
cmp
sub
add
pop
mov
mov
jo
or
mov
popa
add
iret
mov
inc
cmp
or
jge
movsb
adcl
fstl
add
outsl
imul
int3
lret
inc
out
adc
push
push
xor
call
dec
in
mov
rorb
pop
xchg
xor
lods
jo
mov
or
inc
stos
cmp
sahf
repz
cmp
add
jo
sbbb
movsl
xchg
inc
loop
lret
add
out
hlt
scas
xchg
add
aam
pop
movsl
cmp
aaa
pop
ja,pt
sub
xor
xor
insb
mov
cmpsl
cld
xchg
add
lea
pop
aam
mov
push
repnz
xchg
out
xor
cli
mov
add
in
orb
mov
sbb
scas
fld
add
jno
dec
adc
xchg
fiaddl
repz
or
cld
adc
shrb
jg
je
add
xchg
adcb
add
pop
xor
jg
and
inc
dec
sbb
adcb
adc
cmc
ds
add
les
mov
cmp
fdivl
add
mov
cmpsb
js
sbb
dec
mov
or
out
xchg
or
mov
pop
int3
mov
dec
sbb
test
sub
dec
push
fistpll
cmc
in
or
popa
jl
lret
xchg
xchg
fs
sbb
add
inc
cwtl
and
outsl
repnz
xchg
and
test
aaa
or
cmpsl
int
hlt
into
les
xorl
add
inc
dec
mov
mov
ds
lea
test
test
call
xchg
mov
inc
stos
add
imulb
adc
popa
and
int
sti
mov
mov
mov
lahf
loopne
in
pop
push
and
jp
inc
inc
test
push
dec
and
xchg
sub
sbb
push
mov
dec
insl
rclb
add
sub
and
add
fcompl
mov
add
ja
stos
add
mulb
xor
loopne
sbb
pop
dec
add
add
mov
fsubrl
pop
lods
je
add
mov
mov
fcoml
into
adc
cld
add
jnp
or
sub
pop
or
test
and
add
aas
add
mov
adc
js
dec
sub
add
xlat
dec
das
fidivs
inc
sbb
lret
aad
out
or
xor
cmp
loopne
iret
movsb
add
flds
test
clc
out
mov
pop
cmc
cld
cmp
add
adc
jecxz
cli
fiadds
or
add
enter
sub
daa
dec
out
shlb
add
mov
pusha
or
dec
imul
or
insl
jae
jbe
jb
mov
int
and
pop
push
push
out
mov
movsb
xchg
sti
mov
rolb
push
ds
push
mov
adc
pop
repz
jp
dec
divb
adc
mov
daa
mov
sbb
add
sub
xchg
mov
test
clc
bound
add
push
mov
adc
push
mov
mov
jbe
sbb
xchg
mov
dec
pop
adc
pop
lcall
pop
jns
add
push
enter
add
ret
adc
cmp
add
xchg
arpl
or
xor
add
iret
in
incl
mov
les
mov
hlt
mov
cli
popf
add
fstl
lds
out
shl
sub
mov
rclb
or
cmp
xchg
adc
add
addl
dec
push
shll
mov
add
pop
rolb
and
lcall
mov
push
and
jb
cmp
lock
mov
cmpl
sbb
dec
imul
push
push
add
jbe
shll
inc
add
aaa
test
adc
test
icebp
out
pop
or
add
fsubrl
xor
jne
decl
popa
dec
in
push
loop
add
cmp
scas
inc
cmpsb
imul
mov
xchg
sub
lods
cmpsl
add
mov
mov
xor
cmp
mov
xchg
jae
test
add
shl
dec
mov
add
sti
popf
jne
mov
cmp
inc
dec
push
dec
inc
pop
add
xor
es
sub
rcrl
jo
pop
add
push
jo
adcb
ljmp
dec
or
rcl
pop
xchg
mov
jge
lea
roll
fsubl
mov
push
shrd
pop
xchg
cmp
jp
add
lcall
arpl
gs
hlt
adc
add
mov
fcmove
mov
roll
insb
push
aad
loope
fdivs
push
pushf
test
fdiv
rclb
cld
cmp
das
add
sbb
xlat
mov
neg
notl
dec
or
jecxz
or
or
xchg
add
and
add
pushf
std
mov
popa
fisttpl
pop
xchg
movsb
push
and
mov
cmp
mov
shrb
hlt
xor
repnz
mov
add
aaa
inc
pop
cwtl
idivl
test
les
cvtps2pd
inc
jge
or
daa
push
mov
or
jne
addr16
sub
movd
mov
xor
add
jle
add
sbb
pushf
add
dec
cmc
or
add
add
jne
mov
enter
in
push
imul
lds
adc
xor
mov
push
hlt
adc
adc
cmp
push
add
es
dec
add
cmp
add
adc
pmulhuw
in
xlat
push
movsb
add
mov
inc
subl
rclb
pop
jb
call
push
xchg
cmp
mov
call
fdiv
std
rolb
add
sahf
cmp
outsb
scas
jge
add
mov
adc
mov
inc
fwait
sub
add
dec
mov
mov
cmp
xchg
pop
and
sbb
adc
cmp
es
add
sar
mov
movb
lret
push
lock
scas
fnstcw
mov
push
repz
add
mov
inc
sti
add
out
stos
add
cli
cmpb
add
call
cli
mov
xchg
sub
cmp
xorl
push
lgdtl
adc
call
aas
loope
xlat
popa
pop
lret
cmp
jle
inc
rol
cmp
jge
cmp
cmp
or
ds
and
dec
adc
aaa
jns
pusha
int
daa
add
add
test
iret
in
mov
fincstp
inc
add
cli
add
inc
sbb
sbb
inc
xchg
inc
mov
add
pushf
lods
sub
jge
lock
add
mov
mov
xchg
push
lret
adc
sbb
lods
lock
ficompl
jns
popf
pop
add
insb
add
xchg
out
xchg
aam
cmovae
inc
pop
loopne
lret
mov
movsl
cld
clc
pop
add
jmp
and
enter
add
in
cld
repnz
xchg
inc
dec
jne
xchg
push
add
xchg
int3
daa
jl
add
pusha
loop
add
faddl
pop
rcrb
add
daa
fistps
imul
add
mov
flds
fldt
push
pusha
dec
int3
or
lea
out
add
xchg
scas
cld
in
and
push
mov
lea
mov
push
pop
stos
inc
subb
xor
mov
loope
clc
cmp
inc
adcl
test
outsl
movsb
jl
clc
rol
jg
lea
push
jge
je
es
xor
cmp
pop
adc
mov
fdivrl
adc
push
mov
data16
sahf
inc
inc
jne
dec
or
cmp
push
mov
pop
add
data16
pop
lcall
xor
and
ret
sub
leave
jo
popa
es
inc
call
sbb
shlb
push
mov
push
jne
or
lcall
and
rolb
cmp
js
push
and
xchg
mov
xchg
pop
xchg
mov
clc
popf
pop
ja
popa
bound
leave
ja
pop
mov
fiadds
jl
test
dec
and
add
push
imul
lcall
sub
outsb
rcrb
lea
pop
adc
mov
fisttps
or
mov
jns
pop
enter
lock
xchg
xchg
hlt
jnp
jns
add
popf
inc
cmpsl
lcall
fists
fs
cmp
or
xlat
das
bnd
add
std
inc
adc
xchg
int3
popf
nop
incl
aaa
add
add
adc
repnz
iret
call
jge
hlt
out
mov
test
pop
add
push
sub
xor
add
mov
or
xchg
lods
mov
paddusw
add
dec
add
mov
add
cmc
shrb
fsubrl
push
adc
in
aad
jecxz
sbb
cli
push
subb
adc
mov
jmp
dec
and
jnp
mov
sbb
mov
or
jp
lock
xor
or
ror
push
or
and
push
data16
pusha
pop
jne
ret
adc
pop
inc
push
mov
bound
dec
adcb
add
pop
stos
push
ja
fldl
loopne
pop
call
adc
adc
mov
lds
int3
jno
xchg
add
dec
add
nop
icebp
fidivrl
add
or
mov
jp
xchg
or
dec
adc
or
jmp
clc
data16
je
add
adc
mov
cmp
mov
push
adc
jg
pop
or
out
pop
add
in
push
sub
add
mov
scas
enter
loopne
aas
sub
cmpsb
out
adc
add
push
push
pop
popa
or
push
or
shr
mov
pop
pop
jae
pusha
jmp
or
jge
sub
inc
adc
ljmp
add
mov
ljmp
arpl
leave
add
jle
aam
bnd
add
fisttpl
loopne
xor
sahf
dec
orb
mov
arpl
in
stos
enter
data16
dec
js
xor
add
or
add
push
cli
mov
rcll
fcoml
ja
or
test
sbb
fsubs
repnz
sub
add
dec
pop
out
add
push
add
dec
xor
loop
sub
fidivl
cmp
fstl
push
sbb
inc
sub
add
inc
xor
mov
push
mov
xor
push
nop
ficoml
mov
push
push
add
jb
add
adc
sbb
sub
inc
push
jecxz
or
je
inc
add
fstpl
dec
sbb
adc
sbb
stos
add
mov
or
xor
pop
cmp
or
sbb
or
loope
cmp
jne
and
mov
aam
jmp
repnz
faddl
mov
xor
fwait
add
mov
fstl
ja
or
cmp
jb
jg
add
push
xchg
dec
test
and
jae
test
xchg
and
add
into
cmc
dec
mov
fwait
jmp
and
rolb
fisubs
sbb
add
jg
and
add
adc
ret
add
mov
pop
xchg
add
pop
insb
and
lods
sub
rolb
xor
inc
adc
mov
fsts
rcll
aaa
jmp
push
movb
int3
sub
add
je
cmp
fs
dec
xor
ljmp
dec
sbb
pop
sbb
notb
jnp
sub
iret
and
pop
add
pop
xchg
mov
add
push
sar
mov
push
add
aam
jbe
add
or
pusha
popf
add
add
inc
test
push
add
ret
push
add
jo
out
or
mov
jne
das
mov
jb
mov
aam
inc
push
and
cmpsl
adc
sbb
negb
xchg
out
add
out
pop
push
and
xchg
test
nop
push
out
jl
xchg
insb
adcb
push
and
push
test
pop
ror
sub
cmp
cmpb
jmp
addb
ljmp
pushf
insb
jmp
or
in
movsb
mov
xor
lods
mov
inc
in
ret
add
dec
pop
outsb
imul
pop
mov
add
call
mov
add
test
pop
out
movsb
in
inc
jmp
cbtw
jno
or
inc
lock
mov
mov
inc
les
je
mov
shrb
add
jmp
push
add
push
andb
rolb
in
xchg
xchg
jns
cmp
dec
sub
pop
inc
push
fisttpll
in
add
or
jge
cmpsl
fdiv
dec
pop
fisubs
add
cwtl
inc
fdivrs
lock
clc
pop
sti
mov
ret
sub
in
and
out
xlat
dec
pop
test
scas
in
lea
add
stc
inc
rcrl
adc
sbb
fwait
mov
loop
cmp
add
popf
loopne
rorl
lods
add
in
adc
mov
js
sbb
jg
mov
cltd
mov
pop
add
add
das
push
push
add
sub
shr
mov
fnstcw
sbb
add
mov
ror
jmp
xchg
add
pop
pop
cmpsl
push
or
push
add
jnp
jmp
sbb
pop
bound
ljmp
dec
test
push
mov
arpl
loop
push
inc
ja
mov
add
sbb
pop
ds
add
cmp
aam
in
add
mov
mov
nop
hlt
and
incb
adc
xor
into
in
addb
lock
sahf
jns
and
pop
xchg
and
add
ljmp
test
mov
add
xor
sarb
test
xorl
aam
mov
push
jns
pop
out
cwtl
sarb
pop
in
xor
clc
mov
in
jg
xchg
divb
push
hlt
arpl
sbb
stos
pop
insb
repnz
xchg
add
inc
or
add
imul
in
aam
jb
add
and
add
maskmovq
divl
pushf
add
pop
push
push
inc
dec
orps
mov
mov
add
mov
pop
adcl
rolb
adc
sbb
xor
ficoml
pop
cld
call
gs
int
aad
test
mov
outsb
movsb
adc
add
hlt
cmp
dec
or
add
scas
dec
dec
xchg
add
cmpsb
hlt
movsl
pop
dec
push
dec
loop
add
dec
push
test
cmp
aam
add
hlt
cli
and
jnp
or
stc
mov
ds
pop
xor
add
jno
add
adc
lock
mov
xor
setns
notb
xor
gs
mov
sub
orl
add
inc
pop
add
clc
test
or
fsubs
add
dec
nop
inc
icebp
fs
enter
jo
xchg
pop
rolb
sti
mov
incl
xorb
add
aaa
loop
cs
sbb
add
loope
cwtl
push
icebp
and
add
push
stc
xchg
adc
icebp
cmp
or
or
les
xor
jg
clc
dec
or
aaa
pop
sbb
xchg
add
push
adc
add
dec
push
xor
ss
insb
inc
jne
add
cwtl
repnz
pushf
pop
and
adc
inc
push
inc
fcoms
pop
sbb
gs
jb
in
or
xor
ret
bswap
icebp
nop
shlb
sbb
call
add
rol
mov
mov
jge
add
mov
str
pop
inc
cmc
outsb
test
in
cmp
fcmovb
popf
rolb
aaa
mov
jmp
xor
dec
pop
and
cli
roll
incl
sbb
pop
imul
gs
pop
pop
sub
lea
cwtl
push
or
and
add
fmuls
mov
pop
dec
hlt
jo
add
inc
jg
pop
and
add
not
pusha
call
pop
cmp
iret
pop
jne
add
outsb
arpl
pop
out
les
and
inc
mov
push
std
add
cld
movl
out
je,pt
sbb
cmp
enter
inc
or
notl
xor
loope
lods
jmp
add
addr16
cmp
xor
or
push
jae
scas
cmp
adc
mov
add
sbb
sbb
lea
pop
loop
pop
add
cmp
je
and
and
jp
push
inc
les
inc
inc
pushf
sbb
jp
xorb
mov
cmp
jno
sbb
lea
mov
cmp
call
or
add
add
push
cltd
jns
pop
rcl
jg
icebp
add
xor
xchg
jecxz
fildl
or
loope
adc
dec
sbb
icebp
test
ret
add
or
jmp
sub
test
pop
hlt
cltd
mov
je
lahf
into
or
js
add
adc
ret
adc
inc
jge
fs
push
lods
add
enter
add
andb
cmp
cmp
xor
or
inc
insb
jecxz
mov
repnz
shl
sbb
movsl
cmp
mov
sub
loope
nop
out
cmp
jo
rorl
adc
dec
push
lods
and
les
sbb
bound
push
and
clc
dec
push
inc
sub
rcl
jno
inc
add
lahf
movsb
cmpl
outsb
add
call
add
cmpsb
pop
rorl
jmp
pop
or
loopne
sarl
pop
aam
or
dec
shlb
lock
sub
jmp
and
scas
xchg
sub
jl
adc
push
mov
add
pop
xlat
movups
enter
jl
xchg
fwait
ret
rorl
add
int3
and
dec
shr
add
hlt
or
add
out
das
inc
cmc
and
ret
inc
lcall
je
or
push
add
pop
clc
xor
inc
stc
add
xlat
xchg
out
and
xor
and
add
push
adc
pop
dec
test
and
xor
negb
xlat
adc
dec
jg
or
fldl
fadd
decb
add
inc
add
dec
or
push
push
fdivrl
enter
sbbb
loope
ret
cmp
and
pusha
cwtl
sarb
out
int
mov
push
inc
add
push
sub
hlt
ja
fnstcw
adc
shl
add
inc
add
sbbb
out
adc
outsl
add
add
ficoms
xchg
xor
push
add
push
push
movl
fildll
add
movsb
xor
add
mov
mov
add
aad
mov
int3
rcr
add
jle
mulb
mov
add
in
sub
xor
fbstp
dec
add
nop
dec
dec
add
and
add
sbb
fildll
stc
cmp
add
add
insl
add
mov
xlat
sbb
add
into
push
sti
jge
dec
dec
xor
push
out
mov
setbe
js
push
mov
adc
and
inc
or
bound
add
stos
ret
iret
sti
dec
out
add
push
jp
fwait
icebp
cs
xor
popf
lahf
cmpsb
dec
push
nop
and
out
sbb
and
inc
mov
packuswb
inc
paddb
stc
cli
cmp
or
mov
add
dec
mov
ror
fs
push
insb
add
add
lahf
scas
add
js
cmc
mov
mov
mov
inc
std
add
movb
mov
inc
fcmovne
js
nop
clc
add
adc
test
cmp
push
xchg
sbb
das
xchg
mov
scas
insl
pusha
or
ljmp
subb
or
rcrb
xchg
jb
scas
testl
out
sub
mov
xlat
pop
nop
sub
add
xlat
pop
mov
stc
fs
iret
das
and
testl
sbb
inc
repnz
xor
xchg
jno
cwtl
pusha
std
lcall
inc
cmp
adc
ds
cmp
add
mov
dec
lock
add
add
and
call
mov
sbb
cmp
sub
imul
js
add
push
cmc
fisubl
pop
add
out
rorb
les
adc
jmp
mov
data16
dec
jle
add
adc
add
sti
aam
add
push
in
pop
adc
add
sbb
inc
fucomp
dec
sbb
sub
push
adc
add
dec
add
scas
hlt
inc
out
fdivr
jns
xlat
nop
mov
test
cwtl
enter
shl
or
jb
xchg
mov
add
and
xor
mov
pop
aaa
inc
adc
shl
inc
and
or
fmuls
fildl
in
adc
inc
cmpsl
sub
sbb
cwtl
sti
add
cltd
mov
inc
sti
cmp
or
clc
mov
pusha
cld
mov
arpl
add
addr16
xchg
mov
sbb
loop
add
mov
or
and
inc
cmp
pop
jmp
and
xchg
ja
add
nop
divb
movsb
shlb
fiadds
mov
or
in
into
sub
add
popa
popf
insl
push
sbb
shlb
adc
sub
cmp
add
and
pop
adc
cmp
add
mov
add
mov
cld
sbb
subl
insl
loopne
or
pusha
clc
mov
aas
test
sub
add
mov
inc
test
mov
inc
mov
xlat
jmp
daa
mov
add
in
add
or
test
and
aam
rcr
icebp
push
sbb
sbb
inc
inc
loopne
and
cmp
rcl
pop
std
xor
in
push
test
test
mull
jns
or
mov
add
adc
les
add
repnz
hlt
add
inc
test
out
add
xchg
test
sbb
add
ljmp
inc
shl
or
or
adc
cld
ja
leave
add
imul
mov
invd
adc
xchg
cwtl
loopne
jmp
lock
and
fcomps
sub
ret
pop
pop
add
xor
imul
xchg
int3
stos
popl
xor
mov
or
hlt
in
hlt
add
mov
pop
add
test
jns
rorb
test
outsl
rol
cmc
sub
loopne,pt
test
rorb
add
pop
stc
outsl
addb
mov
xchg
add
sub
and
cmp
or
cmp
mov
cmp
cmp
dec
add
mov
rcl
add
xor
push
mov
nop
cmp
xchg
add
xlat
add
pop
clc
jne
aaa
enter
pop
outsl
arpl
ret
insb
inc
dec
in
adc
fidivrl
sub
pop
push
mov
jl
dec
push
aas
xor
call
adc
or
dec
test
out
pop
pop
push
and
and
xchg
cmc
jl,pn
push
ljmp
out
xor
les
pusha
imul
mov
aas
push
stc
mov
enter
jns
pop
ljmp
sub
add
cmovb
loope
adcl
xchg
into
xchg
push
add
stc
xchg
pop
xchg
pop
sti
sub
jmp
adc
sbb
add
inc
scas
sarl
aas
popa
inc
in
pusha
fistpll
les
sbb
test
mov
adc
pop
mov
inc
sub
mov
mov
add
lcall
add
adc
test
sarb
dec
add
cli
push
sub
aaa
loopne
jo
inc
cmp
les
add
xor
push
cmp
sbb
cli
push
add
adc
mov
aam
test
cmp
add
cmp
push
inc
in
or
xlat
inc
pop
dec
clc
shll
add
int
stc
insb
xchg
outsl
insl
add
enter
sub
outsb
pop
call
fiaddl
mov
and
out
add
push
jp
fstpt
aaa
xchg
xor
or
sti
mov
std
sub
movsl
into
pop
insl
mov
add
and
adc
test
or
cmp
clc
loop
xchg
sbb
or
add
insb
sub
mulb
cmp
inc
pop
sbb
push
xchg
adc
sahf
lret
add
push
and
rolb
mov
push
or
mov
pop
aas
pusha
pop
or
xor
cmp
in
sti
ja
pop
add
xor
or
sub
jle
rcrb
fiaddl
add
loop
xorb
or
push
or
and
or
psubusb
mov
add
add
call
push
xchg
add
adc
add
and
in
pop
rorb
mov
xor
cmpsl
dec
xchg
xlat
addr16
push
jno
into
sbb
call
add
jl
popf
mov
rorb
xor
push
bound
push
popa
cmp
test
and
mov
mov
pop
sub
mov
js
mov
mov
in
add
cld
or
sub
and
call
adc
mov
aas
push
inc
orl
ret
ror
fistpll
mov
adc
sbb
add
add
sub
push
jmp
xchg
add
adc
xchg
lret
jge
cmp
sbb
or
loope
add
orb
lret
scas
or
dec
aam
xchg
fdivrl
sti
in
loop
jmp
mov
xor
mov
or
clc
cltd
jns
ja
add
aaa
shrl
or
mov
out
inc
call
add
aaa
xchg
push
jbe
pop
add
and
cli
mov
jb
aaa
inc
adc
adc
lea
aad
pop
inc
and
adc
xor
ret
push
testb
enter
add
or
jmp
cmp
cmpsl
and
pop
mov
call
out
add
add
cmp
les
push
or
scas
and
cmp
orb
and
adc
pop
add
and
mov
cmp
jl
mov
dec
mov
or
out
adc
mov
test
cmp
sbb
clc
aas
cmpsb
xor
outsb
sub
or
jmp
cmc
sbb
inc
or
xor
adc
mov
add
push
enter
mov
mov
xor
push
outsb
and
jecxz
aaa
mov
add
sbb
mov
add
dec
cwtl
aaa
cmp
adcb
xchg
add
lods
lcall
adc
push
fiadds
in
test
daa
xchg
or
mov
pop
add
mov
adc
mov
dec
cmp
clc
or
pop
ret
mov
adc
xchg
inc
repnz
bound
inc
in
push
jne
pop
adc
add
mov
cli
inc
lock
cwtl
cmpl
out
jmp
inc
push
cwtl
hlt
add
sub
mov
dec
ret
fnstsw
adc
and
jb
cld
jge
and
cmp
add
mov
jp
or
repnz
mov
dec
cld
mov
push
dec
xor
mov
push
pop
and
adc
nop
xor
loopne
add
aam
shr
das
movhps
outsb
adcb
pop
add
bound
add
insl
das
lret
mov
pop
push
pop
mov
ret
adc
lods
enter
add
incl
divb
xchg
aaa
nop
xchg
sbb
dec
adc
js
dec
add
mov
ja
bswap
and
mov
pop
mov
test
add
std
repz
nop
sbb
add
mov
movsl
cmp
pusha
xchg
and
aas
adc
add
or
int
xor
sub
add
testb
adc
push
adc
aaa
icebp
loopne
lock
jno
inc
fadd
sbb
or
pop
ds
js
in
xor
add
push
adc
dec
into
adc
jns
dec
ret
cltd
inc
loopne
xor
pmulhw
int3
scas
inc
rorl
pop
or
lods
in
adc
cmp
das
cli
xorl
adc
push
pop
add
bound
add
adc
dec
loopne
add
in
mov
push
jecxz
imul
add
lahf
pop
das
xchg
xchg
movsb
xor
add
or
cmp
or
outsb
mov
in
cmp
jl
pop
mov
jo
rcl
add
stc
or
lret
pop
imul
inc
cmp
add
js
stc
or
and
jmp
cmp
dec
lcall
loop
adc
call
mov
out
rcll
add
roll
xor
push
add
or
push
xor
push
and
mov
adc
aas
inc
mov
mov
jmp
fadd
and
rcrb
mov
in
or
clc
or
sub
mov
mov
subps
mov
sub
sbb
add
mov
or
test
mov
add
call
mov
jecxz
adc
enter
add
jle
shlb
outsl
sbbb
cltd
sbb
rorl
sbb
aas
ds
adc
jmp
jge
faddl
dec
sbb
pop
stos
test
outsl
inc
scas
add
jl
std
sbb
add
add
jmp
push
xor
xchg
push
adc
cvttps2pi
ficoms
and
out
add
mov
mov
rolb
cmp
add
cld
lds
out
adc
push
jle
pop
mov
mov
pop
sbb
fcomps
inc
inc
xor
jle
dec
add
and
inc
sbb
ret
sub
dec
xchg
add
stc
jle
or
test
sbb
mov
add
jg
or
fdiv
fadd
testb
jmp
jecxz
icebp
and
daa
punpckldq
and
xchg
cmpsb
or
adc
push
pop
aaa
sarl
or
cltd
or
push
sbb
std
pop
pushf
lcall
shlb
sahf
xor
das
loopne
xchg
add
shl
jg
mov
adc
cmp
add
adc
into
sarb
add
pop
dec
mov
sbb
cltd
fstps
dec
mov
fs
cmp
pop
pop
test
adc
mov
mov
pop
cld
add
test
ljmp
add
aas
add
mov
mov
jge
mov
add
sbb
cli
cmp
popf
and
dec
fistpl
test
add
and
mov
movsb
jg
dec
or
push
daa
add
xlat
inc
mov
sbb
add
call
dec
add
adc
or
test
movsl
jecxz
mov
jo
push
cmp
add
pushf
mov
cmp
push
mov
xor
cmpl
add
pop
test
dec
mov
push
add
mov
jmp
das
sub
mov
mov
cmp
je
std
pop
inc
hlt
xor
loopne
add
shlb
and
add
loop
sbb
into
mov
mov
pop
adc
sbb
pop
add
or
dec
pop
or
sbb
pop
mov
xor
jbe
pop
inc
sub
and
out
cmp
pop
sti
add
xlat
inc
dec
sete
xor
add
or
repnz
push
cwtl
loop
push
or
inc
xor
stc
xor
clc
aad
shlb
add
loopne
fiaddl
out
repz
movsb
xlat
add
fcoms
mov
into
push
stos
fs
and
push
cmpsb
lcall
xor
je
enter
adc
add
push
cmp
or
cli
jo
add
mov
sbb
inc
and
push
xchg
into
cld
lods
nopl
cwtl
fists
sub
inc
xor
xchg
add
sbb
cmp
fs
pop
inc
xlat
sub
dec
jge
dec
jle
push
lods
push
add
in
pop
add
or
cli
mov
test
lret
inc
clc
fisubs
push
pusha
cs
idivb
ret
ss
hlt
stc
pushf
cmp
push
shrl
add
mov
push
add
mov
sub
cmpb
add
mov
neg
bound
jmp
cmpsl
cld
cltd
fistps
inc
push
call
cwtl
sbb
push
movsb
mov
jmp
jg
xor
aam
mov
ljmp
movsb
cmp
lods
rclb
adc
filds
ret
enter
icebp
out
stos
inc
pop
push
movb
mov
jb
add
and
and
push
or
push
inc
mov
cld
sar
and
adcb
enter
mov
xchg
int3
mov
and
push
int3
lret
or
nop
aam
push
cmp
sahf
and
xchg
js
lea
daa
xchg
ret
add
rcrl
and
cmp
push
mov
sahf
in
lock
fwait
inc
mov
add
xchg
add
lret
cld
xor
out
add
mov
cmp
pop
ljmp
test
imul
call
cmc
adc
stos
and
cld
inc
and
xor
mov
xor
inc
cmp
cmp
push
inc
orb
test
or
and
or
pop
push
jmp
cmp
jne
add
jb
pop
enter
mov
mov
add
mov
push
or
or
mov
roll
cltd
xor
and
jmp
add
mov
je
fcoml
add
dec
nop
push
jecxz
push
ljmp
push
loopne
rolb
dec
jne
fisttpll
xor
shlb
jcxz
and
push
add
pop
fisttpl
push
call
xor
pop
sub
pop
add
dec
xchg
pushf
add
cli
out
add
add
das
out
push
in
push
jnp
cs
add
int3
shl
or
orb
iret
or
cmp
lret
loopne
enter
or
jg
je
jbe
jle
add
roll
sbb
xchg
nop
filds
rcr
in
sbb
add
aam
adc
add
pop
sbbb
inc
rcl
mov
sbb
roll
adc
roll
popf
lock
xor
add
shl
xor
ss
negb
add
add
shlb
hlt
add
cld
cmp
add
sarb
ds
inc
out
ljmp
add
sar
clc
inc
in
sub
mov
inc
sub
jmp
sbb
subb
ljmp
cmp
out
add
inc
sbb
in
and
pop
and
rolb
mov
idivb
jecxz
and
call
iret
data16
mov
cmp
add
and
cmpsb
cmp
cmpsl
cmp
add
inc
sbb
loopne
add
lods
subl
outsb
push
inc
scas
ret
stos
dec
push
imul
subb
cmpb
je
jo
add
add
jp
mov
bnd
push
mov
cmpl
jne
inc
mov
ja
mov
xorl
call
shlb
or
loopne
add
add
push
add
xchg
xchg
push
mov
push
rcll
push
add
cmp
add
lahf
sbbl
fwait
rcrb
cltd
rcrb
sets
mov
dec
jecxz
cmp
add
dec
lock
into
rorb
or
loopne
and
or
into
add
xchg
inc
mov
xchg
in
sbb
add
or
mov
cld
in
jno
js
pop
and
xor
es
push
mov
repz
enter
je
mov
add
push
loopne
xchg
pusha
pop
popf
mov
das
add
jl
jo
cmp
pop
sbb
inc
jae
call
mov
xor
sbb
add
loope,pn
mov
jmp
movsb
add
inc
js
test
sbb
xor
sbb
push
iret
add
xor
push
add
psadbw
add
scas
pop
sbb
xlat
ljmp
add
mov
aad
push
lods
xor
add
push
rorb
dec
jne
dec
push
or
ljmp
rclb
add
cld
mov
adc
enter
mov
movl
popa
ds
mov
out
repnz
pop
push
shlb
add
cmp
or
mov
sub
sub
inc
add
clc
or
add
adc
shll
out
add
gs
test
daa
jbe
adc
xchg
cmp
je
rolb
aad
cmc
adc
jne
sti
add
mov
xchg
add
jp
mov
pop
scas
js
pop
cmp
add
daa
add
push
mov
stos
add
lret
sbb
ds
rcrb
jno
inc
or
sub
cs
push
xor
stos
mov
pop
add
adc
push
repnz
sbb
dec
xchg
sbbb
or
push
adc
repz
and
bnd
add
adc
addr16
pop
cmp
adc
xlat
enter
cmp
pop
add
mov
cmpsb
rcll
or
repnz
xchg
dec
xchg
sbb
into
sbb
pop
adc
add
gs
cmp
mov
stc
jbe
aas
fsubp
mov
push
fld
and
cmp
add
adc
loop
xchg
lock
test
arpl
inc
sbb
scas
and
xor
add
and
jno
sub
shrb
add
stos
mov
and
xor
mov
add
or
jns
lock
xorl
call
push
mov
push
xchg
cli
fs
inc
pusha
sbb
cld
stc
jle
sbb
adc
mov
test
push
test
sbb
nop
push
mov
lock
cld
and
cmp
add
cmp
inc
mov
adc
movsl
xor
xor
sarl
inc
sub
and
and
jo
add
loope
push
mov
or
nop
push
mov
or
push
xchg
incl
and
and
add
icebp
leave
repz
imul
add
mov
dec
or
mov
stos
es
in
mov
mov
mov
sub
adc
jb
dec
shrb
call
mov
sub
adc
sbb
test
fs
sub
sbb
mov
lret
push
out
cmp
inc
pop
or
aam
stos
and
xchg
lret
or
pop
add
pop
inc
push
and
xor
bound
repz
xchg
or
push
and
pop
lods
mov
inc
adc
iret
sbb
dec
push
lret
add
data16
pushf
sbb
or
add
mov
add
loop
push
inc
jmp
jmp
sbb
aad
push
mov
test
pop
stos
mov
xchg
push
aas
mov
pop
or
jecxz
test
cli
and
in
inc
popf
lods
cld
pop
pop
add
push
mov
dec
or
adcb
out
xchg
loope
pop
mov
pop
cmp
push
dec
shr
repnz
cld
cmp
call
and
je
sub
out
pop
push
add
maskmovq
rorb
add
xor
ret
aas
orl
jmp
inc
sbb
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
add
mov
dec
js
ret
mov
add
cmp
mov
jl,pt
inc
cmpsl
add
inc
add
mov
shld
mov
cwtl
pusha
inc
icebp
add
dec
test
inc
arpl
mov
and
adc
shll
inc
cmp
push
sarb
push
or
rcrb
jl
adc
add
sub
push
add
dec
pushf
pop
adc
pop
dec
push
lds
pop
push
loopne
jl
mov
inc
test
cmc
in
jo
sbb
fbstp
sti
jle
push
pop
lret
clc
insb
out
pop
xchg
fisubrs
arpl
mov
sbb
add
je
fisttps
popf
and
push
xlat
in
or
xchg
pop
jbe
test
inc
add
mov
mov
xchg
add
rorb
jle
push
add
mov
mov
shl
icebp
ret
and
mov
rorb
in
rolb
lcall
data16
add
sti
mov
cmp
jg
sbb
add
jb
in
scas
jne
in
push
cld
repz
aas
pop
pop
mov
les
xor
nop
adc
sub
mov
fisubs
add
jg
movsl
sarb
lea
pop
xor
add
push
sbb
rorb
stc
jns
add
fidivrs
mov
cmp
inc
pop
sbb
jne
inc
mov
pop
imul
in
fs
mov
xchg
push
mov
inc
add
pushf
nop
int3
jbe
push
cmp
ljmp
inc
mov
or
push
int3
daa
je
add
or
add
cld
dec
xlat
add
lods
push
adc
mov
orb
int
dec
xor
add
call
add
cmp
jo
mov
movl
jne
inc
add
lahf
push
add
mov
push
add
test
in
pushl
clc
pop
push
movsb
mov
adc
add
mov
add
test
enter
mov
inc
xor
push
adc
enter
and
push
mov
scas
xor
mov
insb
or
jle
add
loope
aam
add
add
mov
mov
or
add
loopne
mov
dec
or
push
push
into
pop
pop
add
add
add
mov
lret
inc
add
push
push
ret
mov
push
pop
or
sbb
rclb
aam
js
push
add
xchg
cmp
out
or
lahf
pop
cmp
sbb
and
push
add
dec
mov
mov
mov
push
pop
in
add
ret
adc
push
inc
push
push
pop
testb
mov
jo
rolb
jg
call
sub
fmul
add
inc
and
lea
out
add
add
jge
push
fwait
jno
mov
daa
and
xchg
push
popf
add
sub
mov
cltd
add
or
mov
test
addb
fstl
je,pn
lcall
arpl
jae
out
add
sub
add
jbe
dec
lods
sub
dec
add
push
push
imul
add
loopne
dec
lret
add
scas
es
adc
add
mov
add
jne
sub
rcl
add
xchg
inc
dec
repnz
push
push
fidivrl
pop
clc
out
pop
lock
xchg
cmp
prefetchnta
clc
loope
lock
add
test
dec
cmp
xchg
loopne
push
inc
mov
xlat
pop
imul
add
leave
scas
out
stos
mov
inc
sti
fdivp
dec
lahf
pop
add
mov
aam
cli
add
dec
add
shlb
add
mov
decb
sub
add
bound
ret
add
cmp
mov
movw
add
push
rorb
jg
je
add
lock
or
lods
cs
add
inc
add
push
mull
fmul
jl
pop
sub
sbb
sbb
or
out
add
push
mov
add
add
pavgb
sub
push
inc
cli
xchg
je
xchg
sbb
cmpb
pcmpeqw
adc
add
bound
ret
xchg
incl
pushf
loop
pop
int3
push
push
push
add
ljmp
fists
enter
loopne
add
inc
test
out
add
or
jle
cmp
and
push
sub
cli
and
pop
jp
push
inc
push
add
jns
loope
arpl
insb
je
add
xor
lods
cmp
inc
dec
cmp
jne
or
and
dec
fcoms
xor
loop
mov
jge
jecxz
add
inc
fisttpl
icebp
inc
lea
inc
adc
ficompl
jno
cmp
and
push
mov
add
add
addr16
dec
sbbb
push
jae
cmp
jbe
or
xor
dec
and
fxch
inc
in
aas
add
or
icebp
inc
pop
movsl
adc
jmp
test
verw
loopne
or
mov
mov
push
cs
lds
add
icebp
xor
mov
and
out
adc
fstpt
cld
mov
mov
wbinvd
jne
push
pusha
daa
mov
ljmp
dec
add
icebp
jbe
push
dec
pop
pop
clc
lods
hlt
mov
push
cmpsb
add
daa
push
add
push
jnp
jbe
add
xchg
ret
mov
insb
jae
dec
and
pop
sub
popa
jns
loopne
add
sarl
andb
push
loopne,pn
pop
sub
add
rol
arpl
outsb
sbb
add
out
scas
test
mov
aad
adc
push
les
add
movsb
adc
mov
cwtl
scas
bound
adc
popf
jo
add
mov
xchg
sbb
xorl
arpl
add
inc
rolb
push
jo
add
push
rcl
add
nop
lcall
or
sbb
add
iret
enter
xchg
sbb
xorb
add
and
pop
adc
push
gs
xchg
movsl
loopne
add
ss
add
lret
jecxz
sub
add
jmp
leave
negb
jno
add
inc
jmp
sbb
cmp
stc
scas
cld
jo
add
insl
fadds
subb
in
int
push
ja
fadds
mov
pop
dec
add
ds
in
jp
test
and
arpl
loopne
sbb
roll
sbb
adc
add
xor
in
push
dec
add
fs
outsb
data16
insl
add
cmc
xor
mov
mov
add
testb
rclb
add
std
or
or
sbb
mov
mov
enter
out
das
adc
sub
js
add
sti
xor
xchg
xor
cli
mov
dec
es
enter
cmp
add
push
inc
dec
in
mov
jle
in
mov
lods
add
fnstsw
push
sub
inc
rolb
mov
loopne
mov
cmp
jo
sbb
add
faddl
add
push
or
adc
cld
test
pop
adc
pushf
pop
ljmp
test
xchg
add
daa
fbld
test
jl
stos
adc
sub
xchg
or
sti
mov
incl
mov
dec
push
add
ret
jmp
call
xchg
or
xchg
in
push
push
add
mov
cld
adc
sbb
dec
into
adc
push
adc
sbb
xor
sbb
xorb
adc
mov
add
inc
adc
call
jns
sub
add
sbb
add
stos
sbbb
add
jne
decl
pop
inc
sbb
or
loopne
jle
add
inc
dec
add
dec
cmc
rcr
lret
fsub
push
add
cmp
das
fcoms
cmp
and
inc
push
cld
add
mov
pop
in
ja
inc
or
sar
loope
add
ret
xchg
add
inc
jbe
hlt
js
mov
es
push
js
adc
jo
cmpsb
and
xor
incl
es
add
flds
add
push
movsl
pop
inc
les
sub
inc
gs
in
lock
test
imul
test
pop
jmp
push
pop
negb
sti
wbinvd
add
adc
adc
loop
lea
lahf
pop
lds
lcall
mov
dec
add
add
cmpl
push
dec
push
sub
jl
or
rcrl
in
pop
inc
add
mov
jnp
add
stc
hlt
xchg
mov
cmp
mov
sbb
add
sbbb
or
dec
xchg
call
lea
adc
add
jge
in
mov
add
mov
aad
xor
loope
add
xchg
mov
jnp
pop
xlat
lds
mov
xor
or
leave
push
addl
jge
mov
inc
nop
dec
sub
inc
loope
ret
js
movsl
and
cwtl
sub
lods
mov
fimull
jo
push
mov
movsb
jae
aas
jb
orb
cmp
inc
dec
mov
cmp
jg
sbb
and
rolb
add
or
lahf
inc
xor
xchg
je
jnp
cmp
jle
rcr
lret
dec
jmp
add
jmp
pop
mov
imul
xchg
mov
and
dec
mov
test
sub
jno
loopne
inc
mov
int3
dec
cmp
cwtl
out
cmp
xor
add
mov
hlt
movzwl
fiaddl
orl
jno
enter
rolb
je
xchg
add
xor
cmpl
jmp
imul
mov
jmp
inc
cmp
or
push
mov
add
das
test
int
mov
add
push
mov
add
jmp
mov
cmp
sub
adcl
cmpsb
flds
add
xor
add
xchg
cmp
dec
xor
sbb
dec
push
inc
pop
pop
popf
fidivrl
adc
test
xchg
or
mov
std
xchg
rolb
or
adc
stos
pushf
in
push
add
push
mov
inc
inc
xor
add
cmp
or
hlt
clc
or
add
push
in
ja
inc
addl
orb
lock
jbe
jno
add
push
je
cmp
push
add
lret
iret
or
dec
ljmp
push
in
call
cmp
add
testb
test
adc
pop
mov
add
add
jmp
pop
enter
push
cwtl
sbb
mov
mov
dec
lock
mov
jb
and
jnp
and
out
cmc
lock
scas
loope
jne
loopne
add
mov
arpl
out
mov
add
dec
add
mov
pop
cmpsl
pop
testl
sbb
aas
std
add
and
push
mov
aad
mov
and
repz
rolb
cmpb
lret
shlb
inc
add
xor
icebp
idivb
xor
test
push
lds
add
flds
lods
outsl
push
shr
fwait
cltd
cwtl
add
xlat
mov
call
adc
enter
scas
xor
sbbb
jmp
push
incl
popa
add
jne
cmp
out
aas
mov
mov
mov
sub
ljmp
mov
pop
mov
test
mov
cmp
int3
fdivrs
add
fsubl
repnz
or
fildl
sub
out
cmp
adc
adc
cmc
cmp
xchg
add
adc
ljmp
cmp
lods
add
add
push
or
aas
sbb
mov
test
adc
push
mov
pop
sbb
andb
sub
push
add
xchg
push
loopne
dec
lret
mov
mov
sub
je
mov
jp
or
mov
cmpsl
jbe
movsl
test
mov
sub
inc
mov
jmp
sbb
add
in
sbb
cli
sub
or
xor
sub
add
aam
shl
ja
add
adc
and
test
mov
cmc
out
pop
add
adc
cld
pop
or
out
cmp
and
pop
in
adc
add
daa
fldenv
or
clc
pop
add
push
inc
test
fisttpl
pop
xor
adc
int
sbb
xor
mov
stos
faddl
ret
push
add
push
cmpsl
add
psubsb
leave
add
pop
dec
jecxz
add
lea
clc
lock
scas
add
jbe
dec
add
mov
push
xchg
and
xor
adc
incl
xchg
cmpsb
add
push
mov
or
add
int
add
mov
xchg
or
sbb
sbb
jle
xchg
nop
dec
adcb
cs
mov
movsl
orl
mov
imul
add
outsb
adc
and
inc
mov
and
sbb
cmpsl
xor
mov
add
hlt
mov
sbb
xchg
repz
push
add
cs
dec
push
int
mov
xorl
pop
sub
add
mov
shr
add
movsb
xchg
cmp
ljmp
adc
repnz
aad
icebp
adc
arpl
add
mov
enter
push
dec
or
adc
in
movb
xor
ds
clc
pop
pop
fadds
loopne
adc
sub
add
sub
and
dec
mov
rorl
rorb
fadds
sub
stos
mov
jp
push
xor
lods
mov
add
enter
loopne
movsb
imulb
pop
dec
sub
pop
cwtl
add
or
push
add
das
dec
aam
shlb
divps
mov
nop
jbe
add
xchg
add
push
xchg
push
mov
rclb
inc
gs
loop
adc
add
or
sbb
sub
push
pop
add
mov
mov
jno
cwtl
arpl
test
push
push
lret
and
mov
inc
mov
outsb
aas
jnp
lret
mov
add
add
sbb
call
dec
add
mov
insb
pop
and
dec
cltd
xchg
andb
fcoml
push
add
pop
inc
popa
call
je
push
std
adc
fisttpl
push
test
inc
and
sbb
add
mov
cmp
xlat
xchg
stos
pop
test
ds
insb
add
nop
fisttps
ret
dec
or
fwait
push
mov
add
inc
loope
mov
add
adc
adc
lods
adc
pushf
fs
mov
cmpsb
call
push
lock
and
or
and
inc
movsb
call
mov
leave
dec
add
jno
lea
mov
add
es
jb
add
inc
push
sbb
mov
cmp
adc
push
jg
inc
sbb
push
lret
pop
outsl
cld
inc
inc
add
cmp
repnz
sub
stos
xchg
or
cmp
mov
xchg
xorl
aas
or
sbb
mov
sbb
sbb
and
mov
push
mov
int3
subb
pop
aam
sub
pop
add
iret
aad
add
pop
push
movsl
lret
add
lahf
sub
adc
add
mov
subl
loop
push
lret
xchg
in
push
add
mov
mov
stos
cmp
imul
cmp
mov
arpl
mov
stos
cltd
lds
pop
xor
xchg
push
ret
xchg
and
add
lahf
and
imul
add
movsb
sub
xchg
das
pusha
push
test
or
test
jmp
push
add
push
jo
sbb
or
add
sbb
pop
or
fs
or
adc
push
adc
outsl
pop
jb
out
loop
sbb
adc
pusha
int
shr
stos
pop
add
aaa
mov
pop
fwait
lahf
aam
and
jne
push
jae
adc
sub
cld
cmpsl
push
cmpsl
mov
add
mov
and
test
test
jo
stos
add
push
and
pusha
nop
and
cmp
pop
add
push
call
pop
data16
and
xor
xchg
pop
sub
push
add
movsl
jnp
mov
lcall
enter
test
push
mov
or
push
sahf
cmp
push
fs
or
xor
call
add
sti
outsl
xor
mov
negb
cmp
adc
or
inc
sub
dec
adc
and
add
cmpsb
inc
push
inc
xor
test
cmp
pop
dec
sub
push
arpl
jne
jae
dec
pop
add
and
jmp
push
les
cld
cmpsb
dec
add
cmp
and
inc
sbb
sti
pop
add
mov
xor
pop
lods
dec
rorb
in
fiaddl
fmul
addb
stos
xchg
fsts
sub
mov
pop
sbb
sarb
and
mov
inc
orb
pop
push
das
xor
mov
cltd
pop
xchg
clc
data16
inc
cmpsl
ret
jecxz
mov
adc
adc
mov
movsb
or
inc
add
adc
dec
jno
dec
jp
mov
or
xor
jmp
and
scas
sbb
es
cli
xchg
les
add
fidivl
int3
adc
and
inc
std
fstpt
dec
mov
mov
jg
test
sbb
addl
sbb
and
add
mov
sbb
pop
add
dec
fwait
sar
push
aaa
add
xlat
in
ss
and
add
fcmovbe
shl
dec
add
jp
push
cmpsl
sbb
push
call
adc
sbb
lcall
imul
push
push
xor
sahf
shl
jmp
aam
and
rcrb
inc
cltd
pop
pop
pop
inc
sbb
sub
lret
xor
adc
xchg
lea
stos
sbb
sbb
add
dec
mov
movsl
or
xchg
cmp
loopne
cld
imul
jbe
lahf
pop
sbb
cmpsl
inc
push
bound
add
or
push
and
mov
insb
subl
mov
cmpsl
push
add
xchg
pop
jl
add
dec
push
and
jbe
add
pop
or
cmp
jne
insb
lds
inc
pop
notb
add
push
jns
subb
cmpl
mov
call
ret
add
cmp
jbe
adc
adc
mov
lock
cmp
jp
dec
add
xchg
ret
mov
mov
and
outsl
add
pop
outsb
push
mov
loope
jbe
sub
xchg
add
mov
xchg
test
xor
fucomip
or
outsl
out
inc
add
adc
mov
clc
repz
mov
xchg
out
test
nop
pop
jl
aas
xchg
test
push
ficompl
cltd
mov
add
loope
xlat
inc
pop
add
push
adc
pop
pop
aaa
push
add
push
add
popa
jae
repnz
js
add
lock
addb
push
fs
add
xchg
je
mov
popa
pop
sbb
repz
push
stc
mov
in
add
cli
mov
pop
es
pop
hlt
mov
cmc
movaps
bound
cmp
pop
add
negb
adc
jbe
add
push
push
aas
stos
cs
pop
push
push
mov
or
inc
mov
sbbb
addr16
add
loop
cmp
mov
add
rcrb
mov
cmp
or
xor
dec
int
shll
popf
cmp
push
and
add
push
xor
daa
dec
and
add
pop
jae
sbb
mov
ljmp
bound
xchg
add
cmpsl
fwait
xor
sti
or
add
sub
mov
repz
jg
xchg
mov
or
inc
popa
mov
mov
add
sub
pop
mov
adc
mulb
xor
and
cwtl
imull
out
js
mov
jnp
data16
add
dec
lret
in
add
repnz
loopne
cmpsl
add
cmpsb
gs
add
jo
or
and
ds
dec
pop
xchg
pop
insb
clc
pushw
xchg
push
inc
jns
sbb
add
fdivr
fs
pop
call
xchg
gs
sahf
dec
dec
push
adc
add
add
stos
push
or
sahf
inc
xchg
loopne
jns
or
sub
inc
enter
test
inc
add
icebp
mull
es
or
add
pop
push
cmp
add
xchg
and
sbb
addl
push
pushf
shlb
jb
hlt
sbb
gs
addl
lret
push
sbb
push
mov
inc
jbe
mov
mov
enter
scas
iret
cwtl
in
or
sbb
add
mov
int
test
test
xor
inc
int3
push
xchg
popf
or
pop
lods
adc
out
outsb
inc
cmp
push
cld
xor
and
cli
or
into
push
sbb
cmpsl
add
ret
pop
adc
mov
add
and
lret
sbb
push
into
loop
lds
mov
js
sub
inc
push
push
dec
inc
jecxz
lret
pop
sub
jge
mov
mov
xor
pusha
mov
add
mov
push
cli
lahf
add
push
adc
shlb
adc
data16
sbb
add
xchg
sbb
dec
push
add
shlb
jb,pt
outsb
jp
dec
fldl
cmp
jg
imul
inc
and
dec
jge
push
insb
jl
nop
dec
hlt
outsb
sbb
jnp
jg
bound
rolb
insb
cld
push
add
pusha
push
inc
jae
add
inc
out
cmpsl
fs
mov
adc
inc
jo
mov
add
dec
mov
mov
add
adc
lahf
arpl
jb
pusha
in
bound
fs
and
add
jbe
jno
mov
popa
dec
je
arpl
scas
rclb
outsb
cld
add
jae
pop
jbe
ja
adc
mov
mov
rorl
add
jae
dec
arpl
ljmp
sbb
data16
ja
jo
arpl
inc
sbb
popl
and
popa
lock
push
xchg
add
mov
dec
repz
add
and
incb
dec
xor
dec
gs
imul
lahf
xchg
pusha
add
outsb
add
xor
ljmp
popa
jbe
mov
push
cmp
bound
or
jge
jp
lock
add
and
fisubl
loopne
out
xchg
add
push
adc
movsl
xor
inc
ja
dec
add
insb
mov
jb
fidivs
popa
add
rolb
insl
jnp
add
enter
mov
in
and
mov
mov
loopne
pusha
adcb
dec
xchg
test
and
push
nop
ss
pop
xchg
cmp
stc
enter
add
test
cld
jnp
fidivrs
xor
add
mov
xor
bswap
daa
xchg
leave
icebp
in
pop
adc
xor
add
sub
adc
call
pop
mov
loop
arpl
mov
or
add
or
sub
sub
or
mov
xchg
dec
in
cli
notb
test
fstpt
out
or
mov
test
add
dec
or
faddl
push
rclb
mov
add
cmpb
test
int3
sbb
in
jge
aam
in
inc
ret
out
testb
dec
cli
jl
or
mov
rcll
push
scas
cwtl
loope
add
mov
orb
add
jno
add
lahf
jno
add
add
and
enter
ret
cmp
xchg
jmp
pop
push
mov
psubd
push
pusha
in
dec
or
inc
ljmp
jle
dec
sbb
mov
xchg
xor
add
je
in
mov
cmp
push
mov
ret
js
cwtl
push
nop
out
into
add
fisubs
jbe
add
js
xchg
rol
test
adc
fbstp
add
incb
add
pop
add
movl
xor
and
mov
loopne,pt
ret
test
xor
ret
adc
mov
out
cmpb
or
sbb
std
or
das
xchg
testb
sbb
push
xchg
and
mov
popl
xor
xor
cmp
xor
inc
orl
out
dec
xchg
das
push
je
push
jnp
add
xchg
pushf
mov
aam
mov
test
lea
mov
xor
loopne
cmc
sbb
mov
push
adc
and
adc
enter
dec
mov
pushf
lahf
push
sbb
test
mov
mov
lods
comiss
out
int
pop
lcall
loop
sbb
add
scas
int
fisttpll
out
mov
jmp
imull
or
je
push
dec
cmpsb
fs
movsb
xor
or
fidivrs
add
std
test
aad
and
sarb
pop
std
sbb
dec
cltd
jge
push
or
add
pop
push
dec
mov
and
mov
or
in
pop
inc
shrb
add
push
nop
enter
je
inc
shr
aam
fcoms
or
fsubl
loopne
in
pop
call
nop
in
add
bound
lock
cmc
hlt
fcompl
pop
cld
call
rol
add
cld
xor
adc
adc
call
or
in
or
movups
adc
inc
sbb
sbb
push
and
pushf
arpl
inc
shll
loop
add
adc
clc
cmp
or
add
add
aas
adc
fadds
or
pop
inc
dec
xor
or
mov
adc
clc
adc
add
inc
popf
shll
lods
call
or
pop
icebp
dec
mov
push
push
lods
and
push
inc
fidivs
fstps
fnstsw
out
or
shl
ja
outsl
or
pop
jg
add
jle
xor
and
in
add
test
add
pop
pop
push
add
sub
adc
mov
xor
add
cvtps2pi
shll
xor
fdivs
jne
cmpsb
pop
jne
outsl
add
adc
xchg
add
push
sarl
pop
das
pop
pop
push
movsb
in
add
in
inc
cmpsl
enter
push
add
fldcw
gs
adc
add
jmp
das
test
movl
or
pop
mov
inc
jmp
add
inc
push
or
push
jae
add
push
bound
add
mov
aad
lcall
sub
push
cmp
dec
ficomps
cmp
sub
stos
sub
mull
ret
push
jg
cmp
pushf
addr16
pop
push
jo
imulb
add
pop
cmpsl
jb
mov
jae
mov
xchg
add
xor
cmp
sbb
push
int
les
movl
inc
add
jne
add
cld
or
and
jbe
ret
nop
es
xlat
xchg
xor
imul
push
shrb
add
movsl
cmp
xchg
mov
test
scas
dec
add
mov
inc
pop
fdivrl
cwtl
or
fs
add
dec
shlb
ja
jnp
jge
inc
insb
pusha
mov
jl
push
dec
ret
lret
push
pop
and
enter
add
data16
jb
cs
push
shl
and
pusha
shll
add
ret
xor
insl
mov
int3
add
xor
sub
sarb
clc
add
insb
inc
add
push
sbb
shr
popa
loopne
pop
add
je
mov
add
mov
shlb
test
in
je
es
loopne
sbb
add
push
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
stos
and
icebp
ds
jae
sti
push
mov
inc
and
pop
bound
out
add
ret
pop
sbb
and
add
adc
add
add
mov
movsb
push
xor
and
and
test
pop
enter
lods
jp
or
les
add
mov
pop
add
lea
lret
in
repnz
aam
mov
push
dec
xorb
insb
jnp
mov
outsb
ret
into
mov
repnz
jecxz
bound
scas
call
add
pop
jbe
and
sbb
add
push
fdivrl
orl
loope
popf
clc
add
out
add
cmpb
mov
loop
xchg
xor
mov
testl
sti
mov
aad
das
and
xor
jl
xchg
rcrb
add
out
cmp
jae
mov
orl
sbb
mov
mov
dec
push
lea
hlt
add
or
sub
aad
xor
mov
pop
lahf
aas
push
or
push
adc
and
add
cmp
mov
adc
mov
clc
leave
add
dec
inc
stc
les
shlb
loopne
dec
fs
add
add
dec
add
es
stc
and
add
jmp
fwait
push
mov
loope
les
shrl
cmpsl
lcall
add
mov
mov
add
xor
add
lahf
imul
adc
sbb
adc
add
nop
push
sbb
inc
xchg
repz
pop
lods
or
adc
inc
dec
and
sub
xor
out
mov
test
dec
mov
dec
cs
jge
dec
push
in
ret
sti
loopne
jle
inc
out
mov
jbe
fldl
mov
cld
popf
sub
jge
lds
pop
outsb
add
jns
add
dec
xor
es
faddl
daa
pop
jl
adc
jno
or
jg
pop
xorl
sub
add
call
pop
adc
jae
adc
and
in
sbb
shll
sub
outsb
fcomi
jb
add
fnstenv
in
popa
add
or
pusha
cmp
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
pop
andb
cwtl
call
jne
push
jle
xchg
loop
add
mov
sub
rorb
and
lods
pop
or
xor
lock
sbb
je
xor
mov
push
inc
add
lods
fstpl
or
lock
add
push
and
inc
adc
cmp
fistps
push
add
add
xor
mov
shr
cwtl
mov
inc
dec
shr
stc
push
mov
cmp
jae
test
pushl
mov
add
push
cld
mov
sub
in
cs
and
lea
inc
insb
pop
cmp
mulb
dec
sarl
sub
add
push
jb
inc
and
cld
push
pusha
add
or
hlt
add
mov
adc
sbb
das
or
sub
jbe
in
fisttpll
add
and
out
inc
cmpb
xor
loop
adc
sub
inc
aam
add
adc
sbb
adc
and
push
ljmp
in
or
std
or
lock
fs
aaa
cmp
call
imul
inc
inc
aas
dec
xchg
lahf
into
lret
add
xor
subb
dec
mov
add
aad
sub
mov
lea
adcb
or
add
cmp
cmp
adc
dec
push
loope
jge
sbb
gs
dec
push
sub
add
push
sbb
sub
pop
inc
aas
or
pop
in
pop
je
dec
add
loop
ds
ljmp
jle
aad
inc
or
shl
dec
fisubl
sub
add
loope,pn
pushf
jno
or
xchg
cmpsb
add
dec
push
and
add
js
and
scas
dec
add
sub
nop
fwait
xor
fnstsw
inc
je
pop
adc
scas
pop
mov
mov
sbb
pop
jge
xchg
add
movsb
out
sbb
add
rcrl
xor
mov
jnp
lock
or
adc
add
seta
mov
mov
add
adc
add
leave
lret
or
xor
dec
mov
add
xchg
insb
jp
pop
clc
jle
add
aas
stc
mov
dec
aaa
xchg
cmp
adc
add
mov
addb
or
loop
lds
lret
dec
inc
inc
add
ret
xchg
dec
test
adc
mov
xor
push
cltd
mov
jae
mov
pop
push
mov
stc
pop
std
pop
jp
jbe
push
ret
dec
movb
sbb
fwait
cmp
cmpsb
dec
jl
jns
clc
inc
dec
mov
nop
fs
adc
jl
mov
call
stos
in
add
xchg
pop
dec
movsb
push
mov
jmp
sbbb
adcl
int
add
jne
pop
add
xlat
out
xor
inc
clc
push
pop
mulb
loopne
push
push
mov
add
lods
jns
pop
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
inc
shlb
pop
add
mov
imul
push
add
loop
popf
in
jle
das
sbb
add
les
adc
add
aam
dec
pop
and
psrlq
pushf
inc
cmp
dec
add
mov
fsubrs
push
xlat
lods
mov
push
sub
and
stc
pop
aam
sbb
mov
mov
and
pop
movsl
dec
inc
push
mov
and
add
sbb
cmpsb
rcrl
cmp
loope
mov
daa
add
and
add
inc
and
inc
pop
sub
mov
hlt
ja
sub
lea
or
fadds
add
rorl
push
add
sarb
movsl
add
mov
jp
or
imul
loopne
and
aad
inc
mov
xor
add
in
in
add
pop
mov
test
xchg
xchg
jmp
es
or
add
leave
jecxz
or
imul
mov
push
call
test
ds
or
rcll
and
push
mov
dec
add
push
jb
jne
adc
mov
mov
add
mov
lds
test
shr
add
and
loopne
add
push
in
sbb
das
out
jg
or
cmp
dec
xchg
add
push
outsb
xchg
add
nop
xchg
jmp
les
and
lea
add
popf
mov
xor
in
add
std
jae
mov
add
imul
jb
nop
push
add
out
sub
mov
add
or
and
xlat
cmp
jbe
add
jmp
ss
insb
ds
add
push
dec
aam
je
cmp
mov
arpl
or
mov
pusha
outsb
dec
or
add
inc
push
int
push
add
sub
lock
shrb
rorb
pop
jne
int3
jnp
pop
into
fs
mov
adc
mov
rorb
sub
cmp
jmp
scas
xlat
push
adc
jmp
pusha
pop
sbb
loope
call
leave
cmp
add
jp
mov
clc
and
sub
and
clc
mov
addl
enter
add
dec
pop
mov
sbb
add
loop
mov
add
and
jle
out
ret
pop
imul
xchg
mull
cmp
loope
adc
mov
xchg
cmp
je
add
xchg
adc
pop
stos
out
push
dec
and
popl
int3
mov
clc
cmp
enter
xchg
inc
push
loopne
icebp
add
xor
mov
fsubs
add
jg
push
adc
mov
repz
jmp
xor
pop
mov
pop
or
shll
xor
scas
inc
out
inc
add
xor
int
sarl
loopne
scas
mov
adc
inc
movsb
jo
stos
add
pop
sub
pop
or
cld
stos
add
sbb
and
push
ljmp
ret
push
into
test
add
jbe
popf
push
sbbb
cmpsb
outsb
stos
xor
fs
or
movb
cmp
jo
rolb
stos
rcrb
das
out
push
imul
lods
sbb
es
and
xchg
pop
es
dec
add
shrb
or
jae
dec
mov
daa
pop
dec
or
jge
adc
mov
cmp
dec
add
inc
xor
stos
dec
bound
imull
adc
xor
xor
leave
pusha
mov
inc
cmp
mov
add
insb
rcrl
cmp
mov
mov
mov
cmp
or
leave
dec
popf
dec
adc
movsb
inc
jo
cli
nop
aam
push
xor
push
jne
push
add
int
push
leave
and
dec
adcb
fstl
cmp
inc
jmp
test
add
jne
or
movsl
pop
sub
inc
mov
mov
push
cmp
int
push
pusha
in
add
pushl
cmp
jbe
and
lock
and
fmuls
jne
push
inc
mov
push
or
cmp
lahf
mul
inc
add
shl
cmp
add
ja
fdivl
jbe
lock
add
jle
xorb
xchg
mov
push
in
sub
scas
fmuls
add
push
mov
or
repnz
call
pop
push
and
orb
pop
cmp
xchg
loop
adcl
add
inc
inc
mov
cs
adc
jge
addb
push
mov
fldt
sahf
repnz
add
dec
inc
cmpl
jmp
jge
cmp
xor
inc
sub
inc
cld
cmp
xchg
outsb
inc
jg
xchg
ss
add
sahf
lods
adc
mov
mov
les
add
lea
scas
xor
stos
dec
add
imul
adc
adc
inc
fsubl
loopne
orb
addl
add
adcl
inc
shrb
xchg
and
aam
mov
loope
call
xchg
push
fs
lods
bsf
add
repz
sbb
pop
add
mov
add
or
jne
adc
int3
iret
fs
sbb
fcompl
add
adc
jns
fcompl
shl
sti
pop
cwtl
push
inc
xchg
je
cmp
repnz
and
mov
pop
add
mov
sub
cltd
push
xor
mov
or
dec
jno
add
or
jbe
sub
add
jne
cmp
cmc
pop
jle
add
stc
and
mov
sbb
btc
rcrb
adc
push
addb
jno
mov
xlat
add
add
ja
out
or
jg
pop
cmp
mov
cltd
lock
pop
aad
mov
mov
orb
out
or
push
jae
mov
jp
add
aas
push
aam
dec
popa
aas
packuswb
cs
and
lds
test
js
xchg
mov
mov
sub
dec
pop
pop
cmp
sub
dec
clc
inc
jnp
lret
jae
xchg
dec
fs
add
sbb
sti
sub
push
adc
add
xor
movsb
add
mov
add
jge
xor
and
sub
sub
bswap
loopne
jo
adc
pop
rolb
shll
ja
push
sbb
add
je
call
add
mov
dec
sbb
test
std
cmp
aas
gs
vshufps
sub
test
cmp
add
jp
add
add
xchg
sub
add
fwait
pusha
add
out
loop
add
and
jmp
gs
or
xor
pop
sub
adc
and
adc
pop
add
lods
dec
or
mov
idivb
cld
rorb
adc
jge
add
cld
cs
int
popa
add
push
out
imul
push
rcrb
insl
add
jle
ret
mov
cmp
mov
sub
lods
call
mov
or
leave
or
or
xchg
mov
inc
cwtl
add
bound
loopne
int
into
jl
add
movsb
dec
imul
adc
jle
add
jne
mov
sysenter
mov
cmp
xorl
and
fiadds
xlat
push
dec
lahf
jp
add
leave
push
in
cmpsb
adc
cmp
and
pop
jne
inc
test
pusha
mov
in
xchg
scas
adc
nop
jle
add
shll
inc
in
jne
pop
xor
shr
testl
cmc
test
sub
adc
mov
lea
pop
dec
ljmp
scas
or
inc
add
add
add
or
in
dec
insb
leave
add
loope
sbb
mov
rol
add
sub
iret
add
cmpsb
scas
push
jbe
icebp
mov
call
pop
cmpsl
out
push
and
movsb
xchg
add
xchg
xor
mov
mov
add
inc
fcomip
addr16
mov
add
out
cltd
mov
xrstor
cmp
jg
ljmp
mov
cmpsb
pop
addr16
cmp
jmp
mov
in
enter
movsb
mov
add
and
add
mov
add
mov
out
aas
das
and
push
mov
ss
push
sbb
add
cmp
sbb
scas
sbb
pop
xchg
into
repnz
add
jp
inc
das
nop
adc
daa
jl
je
xor
in
mov
clc
add
popa
adc
out
adc
fwait
test
push
insb
or
orb
push
dec
pop
clc
into
inc
test
fdivr
add
in
ja
fstpl
push
lods
add
adc
dec
xor
pop
xor
adc
mov
or
rorl
add
popa
jae
jo
add
push
dec
outsb
add
je
and
addr16
push
jb
in
js
arpl
rolb
lret
decb
popa
mov
xor
sti
and
aam
xchg
mov
icebp
xlat
pop
in
push
add
sub
fiaddl
push
pop
push
sub
clc
insb
jmp
outsl
scas
push
jecxz
sub
mov
ds
pop
dec
insl
adc
inc
dec
jne
sbb
sti
cld
sti
jbe
cmp
push
movl
les
jb
inc
push
into
rcrb
add
jmp
shl
add
test
mov
cmp
lea
cmp
add
ret
sarb
add
adc
and
cld
sti
add
jle
sbb
xor
aad
insb
sub
mov
cwtl
mov
lods
add
xchg
pop
cmp
lret
das
mov
lods
xorb
aam
add
aad
lret
mov
daa
nop
dec
aas
roll
negb
adc
push
mov
cs
mov
add
or
movb
jmp
shrl
xchg
add
roll
lock
std
js
popa
sub
jmp
xchg
add
sarb
imul
bound
and
dec
test
xor
add
int3
cmp
loopne
cli
sbb
add
out
call
faddl
jecxz
mov
push
ljmp
dec
mov
dec
cmpb
inc
dec
and
xchg
jne
cwtl
sub
jl
add
insb
inc
rolb
inc
dec
and
cmp
call
dec
imulb
mov
insb
add
push
cmpsb
mov
pop
ss
mov
or
loop
add
in
jl
add
push
inc
cmpl
adc
mov
lea
roll
add
sbbb
inc
jne
sub
mov
inc
out
test
sub
or
out
andb
and
xchg
cmp
push
jns
ss
push
cltd
pop
mov
fadds
xchg
fldt
ds
xchg
add
nop
inc
outsl
add
push
out
add
add
pop
add
jmp
xchg
xchg
add
loopne
add
cmp
ja
or
add
xchg
sub
dec
inc
add
sbb
in
mov
out
test
mov
inc
nop
aam
shlb
sub
push
cmp
mov
xor
fcomps
leave
xchg
add
or
lgdtl
sahf
xlat
call
ret
or
sbb
sbb
aam
movsl
adcl
and
stos
add
clc
das
xchg
loop
dec
sbb
js
insb
mov
cmp
shll
cltd
stos
jae
mov
mov
fdivrs
xchg
test
sub
add
dec
push
cli
aas
cmpsb
inc
adcb
pop
add
ficomps
aam
aas
add
shlb
xchg
fstpl
mov
pop
or
mov
fs
loopne
jl
jno
cmp
jg
mov
sbb
rolw
movb
sbb
outsl
or
pop
shrl
loop
inc
dec
push
add
jbe
or
push
aad
mov
mov
fiaddl
movsb
jne
mov
adc
and
and
jbe
sbb
sub
lods
stos
cmp
jp
in
iret
pop
out
add
push
inc
lret
cmc
push
std
pop
cmp
mov
xchg
or
and
add
xchg
lock
testl
cmp
hlt
lods
bnd
clc
mov
inc
lret
jnp
ret
cmp
hlt
shlb
ljmp
or
sub
loop
jne
call
adc
mov
pop
cwtl
loopne
push
add
aad
and
push
inc
mov
and
or
outsl
sbb
enter
dec
lcall
jae
add
scas
push
and
stos
add
add
and
mov
jge
add
mov
stos
push
pop
push
lock
adc
loop
or
add
xor
mov
dec
cmp
testl
sti
test
repnz
bound
xchg
pop
add
sbb
sbb
or
rolb
dec
shlb
andb
pusha
dec
add
or
incl
dec
jg
jp
std
sbb
add
call
add
daa
push
aas
fiaddl
rol
lea
pop
repnz
icebp
test
scas
sub
test
adc
shl
xor
sub
inc
or
jmp
or
cmpsb
cs
inc
mov
ss
subb
push
dec
psubsb
cmp
das
das
push
rolb
add
or
mov
lock
and
cwtl
pop
mov
add
cwtl
pushf
psrld
mov
pop
sbb
test
fisttpl
stos
add
dec
pop
hlt
mov
sbb
pop
sbb
inc
cmp
cmp
loopne
out
sub
lods
add
sti
add
cltd
add
out
or
inc
add
roll
nop
sbb
mov
jp
add
add
xchg
lock
cmp
adc
jnp
add
and
add
sub
jmp
xchg
clc
lret
adc
jbe
or
ss
add
inc
sub
push
lock
shr
out
inc
call
add
sahf
pop
xchg
ja
sub
pop
loopne
jl
les
insb
outsl
lock
add
hlt
mov
adc
icebp
pop
dec
or
cmp
and
dec
pop
imul
ret
jo
test
test
add
mov
mull
dec
ljmp
lods
cmc
in
test
les
jns
pop
push
aam
orb
test
sahf
add
cmc
cld
or
xlat
mov
ret
adc
mov
cmpsl
ficoms
sbb
mov
xor
hlt
sarb
jnp
pop
jecxz
dec
push
jmp
add
xchg
mov
aam
cmp
das
jbe
dec
in
and
or
call
xor
xchg
loopne
add
mov
xchg
add
inc
inc
push
aas
and
mov
daa
add
jo
test
inc
lea
mov
jp
add
xchg
into
jne
add
mov
dec
add
pop
std
sbb
mov
xchg
pop
add
lds
push
je
out
mov
mov
or
xchg
aad
sbb
mov
das
add
fistps
pop
sbb
mov
pusha
push
or
add
mov
sbb
repz
ds
adc
add
push
or
jae
add
inc
cmpsb
adc
add
xchg
out
nop
popf
xchg
adc
add
xor
add
xchg
xchg
and
xor
ss
ds
mov
add
mov
add
pop
lahf
addl
das
xchg
pusha
mov
xchg
add
mov
add
mov
popf
dec
lock
and
mov
mov
add
mov
push
push
clc
ret
push
pop
and
xchg
cmc
adc
ret
mov
hlt
in
pop
std
add
add
sub
jae
xchg
xchg
mov
lock
xchg
out
jmp
adc
and
aaa
fstpt
push
add
or
lock
jge
add
sub
add
xchg
jmp
mov
pop
movsb
add
adc
jmp
pop
mov
jne
dec
clc
push
mov
push
or
add
inc
jnp
fldenv
int
add
mov
and
les
sub
and
mov
mov
fmuls
not
inc
in
add
cmp
add
adc
cmovp
add
push
mov
nop
out
cld
cmp
fstpl
cmp
movsl
mov
add
or
and
pop
stos
test
ficoml
xlat
inc
clc
mov
sti
outsl
pusha
ja
add
aaa
iret
movl
push
aas
and
mov
loop
das
rorl
cmp
nop
popa
lea
mov
and
fbld
pcmpgtb
jmp
out
fwait
loopne
arpl
call
push
dec
ret
sti
jae
sbb
adc
cmp
and
mov
add
pop
push
test
add
and
sbb
scas
sub
mov
mov
add
adc
faddl
rep
mov
sub
add
cmpsb
mov
adc
add
bnd
push
es
push
inc
imul
jge
cld
mov
add
pop
inc
clc
adc
jbe
add
jae
stos
add
adc
sub
divb
repnz
add
aaa
loopne
pusha
mov
sbb
push
sub
shrl
test
incl
dec
roll
or
sbb
mov
and
jae
cwtl
cli
loopne
add
inc
xor
sub
jmp
add
dec
add
sub
cmp
dec
pop
xor
divb
adc
mov
sbb
inc
lret
mov
fs
int
xor
call
pop
pusha
xchg
icebp
bnd
daa
mov
pusha
xor
add
mov
cmp
repnz
das
cmpsl
adc
and
mov
inc
les
push
add
jns
push
call
push
fiaddl
or
sbb
cli
inc
jne
push
mov
int
cmp
aam
or
clc
inc
in
xor
push
or
pop
push
add
inc
add
int3
cld
loope
outsb
mov
or
sti
cmc
leave
sub
cmp
cmpsl
jo
inc
popa
push
out
or
push
in
adc
adc
dec
in
outsb
sahf
pop
addr16
out
add
dec
mov
sub
push
inc
xor
mov
mov
cmpsl
jmp
xlat
in
cmp
das
pop
add
pushf
test
inc
xchg
jo
dec
push
push
fisttps
hlt
or
cld
inc
adc
mov
pop
mov
leave
add
rolb
cmp
ret
inc
or
and
iret
add
clc
hlt
cld
adc
add
gs
add
mov
in
stos
pusha
add
inc
adc
cmp
xor
jo
mov
cmp
nop
xorl
xor
stc
wrmsr
fsubrl
aas
outsl
adcl
adc
cwtl
or
pop
adc
sbb
cmp
or
or
adc
cmp
sub
jns
add
das
cmp
lds
les
ret
mov
sub
mov
mov
fstpt
ret
adc
test
loopne
cwtl
pop
repz
push
xchg
xlat
mov
adc
pop
adc
jbe
rolb
es
dec
pextrw
loop
push
int3
push
add
adc
sbb
addr16
push
jb
add
or
stc
mov
cld
fwait
stos
cmpsb
add
sbb
push
aaa
or
adcl
jo
inc
out
xchg
add
ja
sbb
pop
xlat
lahf
sub
incl
sub
and
lea
incl
mov
dec
daa
sbb
sbb
add
and
add
cmpsb
imul
jns
out
add
rorb
in
jp
dec
ljmp
push
mov
mov
sbb
mov
sub
xchg
incl
clc
and
les
orb
aam
mov
dec
cltd
test
mov
addr16
lret
mov
push
insb
add
pop
dec
or
gs
or
in
out
xchg
arpl
clc
loop
sub
lods
xor
or
adc
mov
out
outsl
adc
ret
pop
add
mov
test
xor
gs
sbb
mov
lahf
call
movsb
push
pushf
pop
and
add
mov
add
jecxz
and
movsb
push
push
in
xor
loopne
daa
add
sarb
pop
fs
cli
add
je
in
rcrb
add
jmp
xchg
jp
pusha
mov
adc
repz
scas
xor
out
add
jo
or
cmpsl
add
lock
mov
sub
add
hlt
aaa
stc
or
jp
push
xor
jle
cmpsb
test
adc
test
cmp
mov
mov
nop
adc
push
push
cmp
int3
cmp
sbbl
and
sbb
pop
add
in
fldenv
pop
and
int
and
add
mov
dec
xor
add
and
pusha
clc
pop
fiaddl
pop
xor
mov
mull
outsl
aas
mov
or
cmp
mov
cmp
pop
lods
pop
inc
add
push
cld
xchg
je
lahf
in
xchg
add
dec
enter
add
xchg
xor
loope
or
mov
repz
popw
fwait
loop
pop
push
add
mov
stos
test
fs
pop
inc
imul
add
add
mov
jmp
dec
pop
fistpll
test
mov
push
adc
fldl
push
std
out
adcl
xor
add
adc
add
adc
sbbb
loope
mov
mov
addb
lcall
mov
inc
enter
sub
add
jo
push
mov
cmp
filds
adc
imul
add
iret
cmp
and
nop
pop
add
pop
fsubrl
add
roll
outsl
push
adc
daa
cmp
pop
add
push
pop
cmp
scas
add
mov
fdiv
and
jp
add
jo
add
xchg
test
cli
lea
jnp
loopne
add
fsubl
jecxz
pop
add
sar
loopne
call
ret
mov
mov
sti
add
aam
les
in
dec
and
out
das
push
outsb
jecxz
ljmp
fdiv
jmp
mov
stos
mov
ljmp
jecxz
data16
xchg
les
in
sub
repnz
add
hlt
leave
add
testb
mov
pop
shll
popa
ret
or
pushf
sarb
das
add
or
rorl
add
adc
fs
xchg
mov
stc
jne
loopne
popf
add
lods
push
stos
sarb
add
sbbb
movsl
test
sub
bound
and
add
imul
xor
loope
ret
add
xor
jns
or
adc
es
bound
xabort
adc
test
add
pop
mov
aas
dec
cmc
sbb
adc
inc
and
sbb
shlb
jmp
sbb
sbb
daa
adc
add
data16
loope
cld
aas
pop
sub
xor
das
fs
insl
lret
and
jne
add
jmp
filds
and
adc
add
or
or
or
jmp
adc
xor
adcb
sbb
add
push
add
or
add
out
or
ds
repz
push
xor
movb
movaps
notl
jle
inc
xchg
add
mov
mov
pop
sbb
fwait
daa
lock
add
or
xor
mov
shll
mov
cs
pop
add
or
pop
mov
adc
pop
mov
cli
add
pusha
fisttpl
faddp
fsubs
loop
fdivl
sahf
ja
sub
imul
adc
jb
cmpsl
mov
add
inc
adc
hlt
cs
test
mov
pusha
scas
popa
push
cmpb
jge
dec
adcl
popf
dec
adc
xchg
or
mov
mov
mov
adc
add
pop
je
push
repnz
pop
add
orl
cmp
xor
es
ljmp
pop
repnz
sbb
dec
cmp
or
cmp
cltd
add
push
add
icebp
test
sub
adc
out
leave
add
cli
cwtl
fistl
xchg
dec
jg
stos
mov
ljmp
ficoms
cmp
and
mov
cmpsl
mov
add
pop
out
push
add
mov
xchg
and
mov
icebp
pop
xor
push
add
dec
add
add
les
mov
fdivrs
inc
jmp
adcl
push
or
mov
xorb
sarb
insb
add
xor
and
and
adc
xchg
mov
sub
fimuls
push
in
pop
xchg
jecxz
daa
int3
mov
ficoml
fcompl
dec
push
jae
cltd
mov
int
add
test
xchg
inc
add
mov
sub
fwait
andb
pop
push
call
repnz
adc
lea
cmpsl
movsb
add
sbb
mov
add
push
loope
pop
add
rolb
fildl
daa
repnz
cmp
add
or
add
pop
mov
add
push
jns
add
pop
scas
mov
test
ret
mov
sbb
mov
loopne
add
jbe
cmp
add
orb
push
mov
add
pusha
mov
in
mov
loopne
jo
and
or
mov
xchg
movsl
cmpsl
jecxz
jbe
cmp
movb
xor
into
xor
add
inc
fidivrl
in
or
loop
jecxz
int3
xchg
mov
imul
push
out
andl
mov
mov
push
pusha
repz
mov
add
xchg
push
in
inc
sub
push
lock
pop
cs
push
add
inc
jg
add
lods
inc
add
cli
loop
inc
repnz
adc
pusha
cmpsl
jl
cld
add
out
insb
les
mov
nop
std
xchg
sbb
push
mov
inc
adc
cmp
pop
xor
es
test
mov
sbb
add
sti
hlt
mov
in
pop
push
inc
dec
jne
mov
add
add
or
js
add
ss
lods
push
jne
jbe
pop
shlb
mov
iret
dec
cltd
add
inc
mov
inc
popa
lret
cmp
sbb
add
adc
mov
xor
add
sub
push
jo
add
loop
xchg
mov
pop
add
outsl
movsb
mov
cmp
rorb
and
hlt
xor
mov
pop
outsl
popf
add
xor
test
jp
pop
jno
adcb
out
jo
out
bound
fsub
mov
lock
pop
shrb
xor
add
outsl
sub
pop
sbb
xchg
dec
add
leave
xor
loope
mov
pop
xor
ror
mov
jb
outsb
test
jge
xor
pop
sbb
pusha
aas
jecxz
rolb
dec
and
clc
push
ja
add
stc
nop
mov
in
xor
mov
mov
xchg
dec
stos
xchg
add
push
add
test
fildl
enter
and
sbb
nop
cmp
and
dec
push
jo
add
lcall
add
jbe
sub
pop
scas
sbb
mov
add
adc
xor
cmp
add
stos
shlb
add
frstor
loopne
add
lahf
mov
jle
jns
insb
adc
hlt
loopne
push
daa
mov
push
ficompl
mov
js
vpunpcklwd
mov
dec
ds
lock
sub
add
and
add
aaa
push
push
add
add
sub
lret
adc
inc
scas
pop
addb
rorl
das
outsl
sbb
dec
out
xchg
jg
ja
push
add
add
mov
dec
rol
xor
fwait
jmp
inc
push
mov
repnz
add
lods
ss
les
dec
cmp
push
ljmp
xchg
add
popf
or
push
andl
je
and
jg
test
mov
adc
cli
addb
imul
cmp
sbb
imul
push
loopne
add
pop
cld
mov
adc
push
dec
sbb
test
add
aas
test
scas
add
add
jne
push
add
arpl
jle
add
push
cs
out
adc
hlt
and
push
dec
lea
add
nop
add
sbb
and
mov
arpl
add
cmp
es
cmp
add
popa
pusha
push
lock
cs
mov
dec
add
pop
and
mov
int3
imul
fs
add
push
shlb
add
mov
add
xor
cwtl
jmp
push
dec
or
push
mov
mov
sbb
repnz
jle
jg
sbb
popaw
pop
lea
xchg
xor
add
js
or
in
add
lea
adc
adcb
sbb
aaa
mov
outsb
cmc
clc
add
lds
jmp
sub
sub
or
repz
aas
cmp
scas
pop
mov
adc
insl
add
push
clc
stos
ljmp
sbb
outsb
popf
pop
stc
gs
sub
pop
or
rcl
mov
add
lods
pop
cli
xchg
out
mov
dec
stc
addb
jle
ret
lea
add
sbb
lea
push
add
lret
dec
sub
cmpb
test
js
incb
or
cmp
add
orb
pop
jnp
out
push
xchg
pop
add
daa
int
dec
pop
push
add
jb
sahf
push
add
fdivr
mov
xchg
lea
xlat
add
add
sbb
sub
push
xchg
pop
mov
shl
add
out
pop
aas
and
xor
sbb
lods
cld
push
add
outsl
or
lret
jne
push
lock
arpl
out
loopne
sarb
add
jb
dec
push
in
fistl
aas
insb
and
mov
or
jno
add
adc
xor
inc
lcall
and
pop
jge
push
and
movsl
sub
sub
fisttpl
inc
dec
add
notl
pop
cmp
insl
inc
aas
movb
inc
stc
lea
data16
frstor
xchg
enter
add
aam
sbb
test
add
shlb
add
enter
fs
loop
loopne
repnz
movb
cli
int3
faddp
leave
sar
imul
mov
or
mov
adc
or
and
inc
or
pop
xchg
add
xchg
loop
and
inc
mov
test
inc
imul
push
mov
lods
inc
push
jmp
lds
mov
fisttpll
fimuls
lods
pop
or
mov
inc
cmpsb
mov
xchg
jmp
push
pop
sub
add
nop
arpl
lret
pusha
xchg
add
mov
push
add
aaa
addr16
loop
push
mov
mov
push
lcall
push
std
add
sbb
mov
or
jno
pop
mov
and
insl
or
sub
popf
pop
xor
out
mov
icebp
inc
add
push
and
xor
mov
outsl
lahf
loope
sbb
sarb
pushl
pop
adc
mov
push
inc
inc
inc
stos
nop
enter
add
inc
xchg
and
rcl
add
pop
test
add
loope
nop
adc
mov
mov
test
sub
movsb
loope
add
or
adc
and
add
std
addl
pop
xlat
and
dec
imul
mov
movsl
add
adc
add
xlat
sti
inc
add
rdtsc
loopne
cld
mov
add
std
adc
mov
les
add
clc
adc
and
add
inc
ror
mov
push
push
pop
xor
jmp
lods
stc
jo
or
or
loope
jle
inc
movsb
add
pop
leave
and
add
mov
sbb
add
jne
lcall
jge
pop
int
leave
xchg
leave
in
and
jno
and
dec
or
jb
clc
loopne
je
xchg
add
jbe
dec
add
bound
mov
cmp
cld
xchg
xchg
add
cmp
outsb
aas
mov
mov
add
pop
cli
mov
and
pop
sbb
cmp
outsl
lock
mov
popf
fistpll
push
loopne
add
jno
lret
add
pop
pop
call
lds
inc
dec
clc
test
dec
hlt
sub
test
out
loopne
push
cmp
lret
dec
pop
popf
jl
dec
ljmp
add
push
push
adc
enter
jne
mov
inc
dec
shrb
ret
mov
xor
imul
addr16
cltd
mov
pop
dec
stos
push
add
sub
mulb
add
sbb
xor
add
test
cmp
movl
jo
mov
sbb
test
bound
add
negb
pusha
pop
xor
push
jo
add
dec
inc
mov
loopne
add
shrl
in
push
add
clc
ljmp
inc
vpmulhuw
cmc
add
pop
into
pop
fsubl
add
xor
sarb
sti
add
sub
cmp
or
add
mov
in
ljmp
orl
movsb
jo
sarb
fstl
add
cmp
sarb
add
sub
test
cld
push
lldt
push
mov
add
cmc
cmpsb
pop
add
or
sub
fldcw
jl
push
inc
add
out
addr16
rcrb
mov
add
pop
adc
xchg
dec
jo
add
push
cmpsl
inc
add
lret
or
pop
add
pop
adc
daa
mov
xchg
adc
xchg
shrb
jecxz
adc
sbb
sub
xor
add
and
jb
sbb
or
cmp
ret
xchg
notb
iret
or
push
stos
fs
jge
xor
ret
add
or
xor
loopne
add
popa
decb
add
int
loopne
repnz
nop
sub
loop
scas
mov
push
mov
push
adc
or
cmp
inc
fmull
orb
mov
pop
aam
sub
int3
popf
cmp
imul
adc
mov
xchg
xchg
into
jle
pop
xchg
jp
and
push
add
out
jg
jmp
inc
add
inc
clc
adc
shll
pop
jno
add
and
std
fadds
add
or
cs
and
xchg
add
fwait
jle
inc
or
mov
inc
imul
adc
or
pop
mov
cmp
push
int3
iret
xlat
loopne
push
loop
test
inc
je
jnp
mov
add
loop
repz
negb
pop
xorb
add
sub
insb
popa
arpl
xchg
adc
fs
jecxz
jns
add
in
pop
or
aad
add
jle
inc
pop
dec
imul
cmp
cmpsb
cmp
or
mov
adcl
push
jae
int3
dec
jmp
fsts
sub
inc
cwtl
xor
or
cld
inc
push
adc
pusha
and
mov
in
mov
adc
fcomi
fisubs
pop
pop
leave
outsl
lock
mov
or
rolb
mov
aas
add
or
mov
and
cmp
mov
stos
mov
or
and
scas
mov
andb
jl
add
push
or
cmp
cmp
add
jg
call
add
out
cltd
movsb
and
xchg
pop
cmpsb
cmp
mov
push
ja
sbb
int3
add
lock
cltd
sub
jae
dec
pusha
dec
in
lcall
loop
sbb
add
imul
mov
lahf
rolb
jno
push
xor
scas
cmpsl
sbb
pop
movsb
fsubrs
jae
add
bound
sbb
add
sbb
xor
je
inc
dec
jae
add
test
mov
xchg
rclb
sbb
sub
popa
mov
and
je
clc
cmp
in
or
jge
sub
rcrb
test
adc
addl
fs
dec
xchg
sub
mov
adc
add
lcall
add
out
cld
push
fs
movsb
inc
and
sub
arpl
jbe
addb
push
and
cmp
jne
xchg
enter
add
rclb
clc
fsub
scas
mov
jbe
test
sub
cmp
sbb
movsl
jle
push
mov
cmp
add
xchg
call
and
incb
push
add
in
sbb
lret
fadds
ljmp
lock
shlb
xor
and
push
sbb
test
add
data16
sarb
inc
call
add
sbb
jb
push
testb
jg
pop
adc
pop
sub
lea
jg
bswap
xchg
jmp
push
and
clc
and
add
fs
and
aad
add
xchg
ret
scas
cmp
mov
cmp
xchg
adc
stos
adc
mov
inc
test
xchg
out
sbb
mov
jle
adc
jb
in
pop
testb
test
test
cmpb
adc
dec
jl
add
mov
mov
add
lahf
mov
aas
sbb
or
into
or
sbb
add
pop
das
movsl
clc
jne
lods
daa
pop
pop
jns
inc
xor
push
push
xchg
inc
push
mov
test
movsb
jae
bound
xor
sbb
clc
adc
cmp
jmp
inc
inc
add
aam
xor
fisubl
adc
add
xchg
stc
es
insl
mov
aas
data16
jne
pop
and
add
inc
das
mov
add
pop
cwtl
xor
push
dec
pop
inc
inc
movsl
sti
mov
dec
inc
dec
jne
xor
rorl
pusha
stos
fstpl
dec
test
inc
jle
aaa
fildl
xchg
xlat
mov
push
add
add
out
sbb
mov
add
push
xchg
cmc
mov
in
jecxz
pop
add
cmp
mov
pop
jne
insb
movsl
cmc
adc
cmp
fadds
jge
add
sbb
cmpl
adc
push
push
lret
lock
add
and
adc
and
mov
mov
sub
xchg
add
cmp
ljmp
fs
mov
xchg
add
clc
stos
inc
sbb
jg
ljmp
pop
clc
or
adc
dec
sub
mov
in
inc
mov
ret
iret
mov
and
lret
pop
and
push
add
adc
inc
add
outsl
and
shr
mov
aaa
mov
cmpsl
and
xor
in
fisttpll
lcall
jo
adc
pop
pop
inc
dec
dec
add
int3
hlt
inc
and
enter
sub
out
xor
lds
movlps
add
dec
add
push
fstl
call
mov
pop
in
add
sbb
lret
insb
and
or
add
aad
cmp
mov
out
ret
mov
pop
clc
dec
mov
cmpsb
add
sub
lret
or
xchg
jmp
out
std
xlat
and
outsl
jns
adc
lea
hlt
int
pusha
sbb
or
xor
xchg
dec
testl
add
add
xchg
jp
les
inc
movsl
adc
ja
aam
mov
adc
jbe
lret
xchg
popl
add
lock
fidivs
push
or
or
nop
pusha
push
push
add
mov
pop
ret
in
xor
cs
clc
cmp
mov
fs
add
cmc
cmovo
jle
xor
jecxz
daa
add
scas
and
lods
add
jno
arpl
mov
js
in
pop
ret
test
push
ss
push
repz
fnstsw
out
push
nop
fdivr
add
jg
das
ss
loopne
cmp
and
lock
jbe
mov
aad
add
in
movb
hlt
add
test
addl
shlb
add
and
fwait
scas
andb
push
push
add
mov
ja
push
mov
jmp
testl
mov
add
sbb
sub
test
loopne
pop
xchg
add
jmp
flds
push
xchg
push
aam
add
cmc
imulb
xchg
stos
daa
push
add
adc
out
and
xchg
jbe
add
movsb
add
sbb
loopne
loop
or
aam
pop
sti
lea
and
aaa
mov
rcr
minps
push
inc
pop
shrl
enter
sbb
inc
add
xor
dec
push
bound
leave
add
and
aad
insb
mov
pop
fmul
sbb
jne
cmp
dec
andl
fsubrs
enter
pop
aad
add
cmp
dec
jne
cld
int3
add
jp
jmp
push
add
pop
inc
xor
dec
cmp
add
and
xor
fildl
xchg
mov
and
pusha
add
dec
gs
loope
ret
push
dec
popa
insl
ficoms
adc
or
push
call
outsl
jb
aam
mov
imulb
jne
xchg
pop
mov
imul
scas
std
mov
fwait
cmc
leave
sub
mov
inc
test
mov
sbb
outsb
fisubrl
dec
aam
xor
enter
xchg
jno
movl
loopne
mov
in
add
and
push
add
jae
je
or
or
push
repnz
andb
incl
fstpt
add
mov
push
inc
rclb
lods
jnp
movsl
pop
adc
mov
aad
xlat
enter
add
sub
popf
lods
mov
int3
dec
sub
data16
cmp
bound
pop
pop
fisubs
cmp
sub
in
cld
add
pusha
add
push
je
xor
push
add
add
xchg
push
xchg
add
dec
or
xor
gs
mov
add
in
clc
add
push
pop
sbb
add
cld
lret
inc
stos
cmp
movsl
cld
adc
xor
mov
adc
add
pop
push
mov
mov
das
lods
xchg
push
jecxz
dec
add
rolb
push
mov
test
and
in
push
adc
ret
clc
or
add
pop
or
inc
push
push
add
dec
and
hlt
push
lock
push
jne
add
add
orb
mov
punpckhwd
mov
dec
pop
stc
and
and
dec
mov
jl
mov
push
test
and
ds
shlb
dec
in
xchg
add
mov
jbe
test
or
out
inc
cmp
jge
scas
rolb
fcmovbe
movsb
bound
mov
xor
pusha
std
rcll
enter
stos
leave
jae
imul
adcl
jmp
stc
sbb
js
add
lahf
push
lds
add
jno
and
mov
scas
out
call
add
mov
ror
mov
or
ds
lds
les
mov
out
inc
or
pusha
push
pop
push
push
add
xchg
je
int3
sub
mov
or
cs
ret
push
adc
add
fldcw
add
adc
cs
add
nop
pop
pop
jmp
subl
in
outsl
fnstcw
add
aas
and
setb
add
icebp
pop
and
je
add
call
dec
enter
mov
push
mov
pop
addr16
mov
lea
std
and
jmp
xor
add
add
pop
dec
mov
clc
add
inc
or
adc
add
movl
pop
cmp
jmp
aaa
sub
jnp
out
fcmovnb
int3
call
jg
incl
sar
push
add
movb
jmp
les
jne
jno
jnp
jg
add
add
sbb
or
add
adc
mov
orb
and
or
mov
add
shlb
incl
inc
or
sub
cmp
dec
inc
cmp
sub
movsb
cld
ljmp
and
add
pop
jno
xchg
or
into
xor
jp
add
jbe
add
or
mov
or
xchg
add
lods
cli
mov
sbb
mov
add
lods
sti
loope
cmc
dec
or
cmp
cmpl
stos
mov
sub
push
and
xchg
or
cld
add
mov
and
jne
nop
dec
add
dec
mov
mov
in
pop
or
add
ret
jne
add
imul
jp
aam
mov
adc
inc
push
add
loopne
xchg
cli
mov
and
ljmp
or
in
or
cmp
xchg
or
dec
push
mov
mov
sbb
add
sbb
push
push
jg
iret
das
bnd
cmp
add
xlat
add
sti
sub
mul
sub
addb
push
pop
push
and
pop
pop
test
rolb
fs
pop
cmc
xor
pushl
or
aad
addb
nop
test
xchg
fistpl
or
out
xchg
pop
fbld
lret
stos
dec
add
repz
imul
pushf
sbb
push
sub
xchg
push
push
ror
mov
repnz
repz
add
daa
idivb
xchg
sub
inc
and
ficoml
cltd
push
pop
xchg
inc
add
cmp
sbb
bndstx
mov
in
cmp
pop
movsl
add
and
push
hlt
add
popa
sbb
pop
inc
sub
subb
fs
jo
mov
ret
stos
push
add
js
es
dec
lods
jg
cld
add
clc
out
cmp
out
test
cwtl
cmp
push
clc
mov
insl
pop
in
es
inc
push
mov
aam
inc
add
movsl
push
in
mov
add
in
mov
adc
push
popa
in
push
mov
incb
into
adc
add
sub
add
mull
daa
add
mov
out
cmp
shlb
loopne
xor
jno
lret
fildl
xchg
adc
testb
daa
flds
jmp
ljmp
hlt
and
add
enter
add
pop
loope
cmpsl
shrb
int3
mov
jmp
xor
lcall
mov
and
leave
add
lock
adcb
cli
sahf
pop
add
adc
pop
adc
insb
mov
sahf
mov
add
andl
ja
clc
jnp
loop
test
pop
fcoms
movl
push
adc
pop
jmp
inc
xor
mov
add
sub
rol
jno
mov
mov
movsb
dec
add
push
mov
inc
sbb
sahf
or
ss
add
sub
xchg
cwtl
cltd
add
xchg
add
adc
push
pop
lock
sbb
inc
adc
add
adc
dec
or
push
add
shlb
pop
push
or
arpl
add
adc
push
cmp
sar
pop
add
lahf
push
sub
adc
sbb
inc
jp
and
add
mov
enter
sbb
inc
mov
aam
ret
adc
jnp
jb
sbb
loopne
add
int
repnz
xor
mov
scas
xchg
xchg
push
inc
pop
mov
push
lock
jo
add
int
jecxz
xlat
loopne
add
std
pop
rolb
jle
and
push
add
mov
inc
call
imul
add
rcl
xchg
addb
fists
cmpsb
fisttpll
pop
add
lret
movsb
sbb
iret
pop
add
popf
sub
stos
add
scas
addr16
dec
clc
xchg
jns
pop
add
dec
pop
testl
es
sbb
inc
insb
rcrb
aad
add
std
mov
or
inc
mov
iret
add
xchg
push
xchg
inc
inc
jo
lock
mov
add
sbb
add
imul
or
jp
addl
mov
xchg
or
adc
or
inc
dec
and
jl
mov
adc
jbe
add
cmp
mov
leave
sbbb
gs
pop
jae
call
pop
decb
idivl
mov
sbb
and
inc
fs
push
add
push
clc
fwait
inc
and
mov
cmp
out
imul
pop
cmpb
cmp
xlat
add
inc
clc
cmp
or
add
mov
pop
add
test
testb
cmp
lret
xor
jae
inc
out
jbe
dec
cltd
pop
xor
or
clc
mov
mov
add
test
xor
add
shl
jno
lock
cmp
add
insl
movsb
xor
cmp
in
add
adc
mov
and
rclb
test
std
push
aam
rorb
push
or
ficoml
add
icebp
dec
jbe
add
mov
and
jge
sbb
add
and
fwait
add
loope
add
fcom
adc
pop
mov
add
mov
or
test
add
lea
or
dec
add
test
and
lahf
pop
cwtl
es
add
sti
in
push
jne
and
roll
sbb
loop
add
adc
jbe
add
sbb
sub
cmpb
inc
xchg
aas
mov
jne
jp
xchg
scas
jle
cmp
jo
add
les
stc
and
xorb
push
std
mov
jl
push
rolb
js
in
cmpb
push
or
into
fs
or
adc
bound
add
mov
or
xlat
dec
inc
xorb
lret
jle
filds
int3
inc
mov
inc
dec
sub
cmp
cs
ljmp
add
push
test
sbb
mov
inc
std
ds
lea
lret
mov
adc
in
jl
xorb
ud0
jle
adc
add
push
xchg
shl
add
cmp
je
add
add
pop
in
add
mov
cmpsb
xchg
fistps
xchg
inc
sti
inc
fsts
jmp
inc
sbb
jge
add
imul
test
in
mov
or
inc
shrl
imul
imul
add
xchg
loopne
pop
push
lock
lods
add
adc
inc
add
mov
imul
call
dec
stos
nop
push
add
pusha
dec
and
insl
mov
jl
or
add
jne
add
je
add
mov
or
sbb
xor
push
and
or
xlat
mov
add
or
add
and
add
repz
or
xchg
mov
or
fadd
lock
cwtl
cmc
add
ret
add
fldl
enter
mov
insb
sbb
add
call
xor
cmp
fwait
push
flds
in
cli
movsb
adc
push
enter
sub
loope
xlat
adc
das
hlt
push
cmp
add
in
mov
minps
dec
mov
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
pop
cwtl
pop
jns
mov
pusha
pop
mov
mov
jmp
mov
inc
cmp
add
rdmsr
pop
or
mov
sahf
xchg
mov
lret
jecxz
mov
testl
cmp
lahf
or
add
inc
aaa
mov
jne
dec
and
es
cmp
rcll
fiaddl
cltd
sbb
and
loopne
adc
add
insl
in
negl
push
dec
mov
das
dec
pop
aam
in
mov
mov
add
lods
pop
imul
adc
mov
adc
add
cmp
lgdtl
xchg
adc
jmp
jge,pt
dec
xchg
xor
sub
out
sub
xchg
inc
movsl
cmp
add
je
push
pop
pusha
adc
clc
mov
loop
fadds
lods
pop
adc
add
pop
ja
psubsb
dec
rclb
nop
sub
add
or
fcomps
shr
lret
jae
push
mov
loopne
pop
or
xor
jg
add
xor
add
adc
dec
fnstcw
jae
test
adc
inc
out
and
sub
mov
sbb
push
or
cmp
xor
and
punpckldq
pop
clc
cmp
jne
ffree
xchg
jnp
jb
push
and
cld
aas
cmp
xor
cmpsl
pop
int
es
sbb
add
mov
or
add
adc
push
and
jecxz
add
jae
ja
mov
pop
push
xorb
ds
adc
push
and
mov
test
or
stc
pop
mov
hlt
add
mov
add
push
push
jl
out
jp
xor
add
fbstp
pop
or
add
or
sbb
push
pop
outsb
inc
dec
inc
and
cli
add
imul
cs
add
add
aad
hlt
test
call
cld
lock
lds
pop
inc
mov
dec
insb
push
add
push
call
in
cmp
mov
scas
add
and
push
jmp
mov
jle
mov
dec
out
sub
leave
push
jbe
movsb
enter
scas
sub
adc
repz
mov
add
sub
ret
mov
add
and
xchg
inc
test
inc
ljmp
mov
push
jge
dec
add
loop
icebp
add
sub
pushf
dec
lock
sbb
cmp
xor
and
push
xor
dec
loopne
mov
jbe
ret
cwtl
cld
loopne
pop
add
movsl
les
add
movsb
ds
lods
dec
adc
stos
movsl
cmpb
int3
or
mov
daa
add
adc
jmp
add
fs
push
arpl
push
adc
lret
shr
out
mov
dec
daa
add
ljmp
push
insl
sub
cmp
add
mov
nop
add
xchg
add
adc
add
mov
jne
add
xor
shr
and
cli
out
lret
push
in
xchg
sub
push
lods
aad
add
repnz
imull
mov
pushf
dec
mov
mov
add
adc
dec
dec
jg
rorb
adc
in
out
sub
push
add
xchg
xor
js
dec
stc
lock
lock
xor
cmp
or
mov
sub
cwtl
test
add
outsb
xor
pop
cmpsb
add
push
cmp
add
mov
je
add
push
add
push
add
loopne
aam
mov
mov
repnz
ret
ja
pop
daa
jo
mov
nop
cs
lcall
add
js
inc
sbb
push
adc
add
sub
je
add
cmp
jne
push
fistl
movsb
mov
in
adc
insb
pop
cli
or
cmpb
mov
and
dec
add
lret
adc
add
mov
adc
cmp
add
in
fstpl
stc
pushf
xor
push
mov
cmpsb
add
and
xor
add
adc
or
add
mov
out
xchg
pop
xchg
pop
mov
lea
push
push
call
cmp
add
and
xor
inc
ficoml
xchg
xchg
insb
or
call
add
cmp
sub
xchg
outsl
add
add
lods
cs
ljmp
pushf
loopne
xchg
dec
xchg
add
mov
mov
inc
std
sub
mov
repnz
stos
cltd
ror
mov
mov
pop
xor
enter
jge
loope
pop
and
movsl
add
or
lret
movsb
add
jl
sub
mov
insb
pop
mov
pop
pop
mov
cmp
inc
xchg
or
roll
ja
lock
fisubrs
in
test
lods
jecxz
arpl
adc
or
sar
dec
imul
xor
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
or
inc
xchg
rorb
js
cmp
mov
lea
lock
pop
push
ret
jbe
xlat
stc
cld
fwait
jns
sbb
cmpsl
xchg
inc
ljmp
js
push
fwait
push
xchg
inc
lret
and
inc
sbb
movsb
pop
adc
cli
jno
pop
xchg
inc
icebp
and
add
mov
add
adc
test
jle
insb
pusha
mov
rolb
enter
dec
adc
inc
or
data16
cltd
sbb
add
xlat
push
jmp
inc
dec
lcall
inc
adc
push
cmc
jno
xor
mov
stc
fsubs
mov
test
mov
outsb
or
repz
mov
jne
test
jl
add
clc
cwtl
pop
lahf
and
inc
aas
movsb
inc
pop
cmp
pusha
inc
xchg
and
jb
sbb
add
cs
add
insb
roll
or
sub
add
fstl
jmp
xor
aam
inc
jl
and
in
add
mov
xchg
cld
jbe
repnz
ja
mov
jecxz
push
add
add
dec
rcrb
mov
jle
pop
xchg
jmp
push
xor
addr16
icebp
push
fmuls
cmp
add
xchg
xor
imul
push
cmp
imul
sub
sbbb
fisttpll
adc
jnp
add
push
add
add
add
dec
sbb
sub
add
sub
sbb
pop
xor
andl
lldt
mov
rcrl
pop
addl
je
lock
and
mov
cmc
dec
adcb
lea
sbb
into
cld
stos
sub
sbb
jmp
aam
sub
lods
xchg
add
add
adc
nop
or
jbe
hlt
mov
orb
lret
loope
jle
pop
jnp
add
or
int3
mov
icebp
add
mov
test
lea
test
clc
cmpb
or
nop
dec
jle
sub
je
push
in
ljmp
sbb
pop
or
insl
jl
shl
inc
add
imul
adc
xchg
fchs
sub
adc
add
or
jmp
add
je
lods
jp
jo
adc
aaa
psrad
sbb
decb
or
setge
andl
jne
shrb
add
outsb
xlat
dec
cltd
pop
nop
add
push
js
sub
xor
add
dec
and
add
mov
mov
add
aam
push
fucom
jmp
or
mov
repz
add
lret
add
into
mov
and
push
les
mov
xchg
jg
nop
pop
or
adc
shlb
push
adc
fucomip
pop
lods
push
insl
clc
or
push
inc
adcl
xchg
mov
add
scas
add
rclb
sub
sbb
mov
or
sub
sub
cmp
add
and
in
loopne
add
shl
faddl
fucom
call
mov
in
pop
cmc
sti
adc
add
xor
mov
or
test
test
pop
ljmp
or
inc
jae
jb
sub
add
adc
add
dec
cmc
imul
cmp
in
dec
push
mulb
dec
insl
add
sbb
push
add
in
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
mov
fstps
out
mov
hlt
jecxz
add
dec
cmpl
push
cmp
bound
addb
out
add
sbb
lock
mov
out
clc
ja
jl
add
call
in
imul
mov
sbb
in
jmp
mov
mov
xchg
je
add
jl
daa
pop
fs
add
jo
imul
add
lahf
dec
aaa
adc
subl
jge
push
insb
imul
sub
add
cwtl
ret
pop
sbb
faddl
loop
sahf
jb
lods
xchg
call
ror
mov
in
inc
add
pop
movsb
mov
test
sbb
add
or
or
mov
and
out
push
rorb
adc
add
and
daa
inc
inc
call
adc
ja
into
addr16
in
sub
jne
cmp
out
psubsw
adc
adc
push
push
add
cmp
add
out
ljmp
orl
jbe
jmp
add
cmc
push
icebp
and
outsb
or
pop
test
shll
pop
adc
sub
test
jmp
out
fcmovbe
mov
add
test
xchg
xchg
fcompl
add
jl
lcall
outsb
push
mov
lods
into
mov
pop
out
loopne
jne
sbb
ljmp
roll
rcrb
cmp
jb
xor
dec
lock
ja
pop
aam
mov
pop
xor
cwtl
add
jmp
imul
or
cmp
ja
jbe
jb
mov
pop
pop
mov
mov
es
push
sbb
jo
inc
push
add
loope
pop
dec
push
mov
push
mov
in
dec
std
add
ds
jo
int3
add
mov
sbb
xor
add
push
andl
xchg
mov
ljmp
sarb
cmp
inc
inc
inc
arpl
push
add
in
adc
xor
xchg
push
pusha
es
add
pop
ds
fsubrs
add
fidivs
cli
pop
pop
in
add
adc
rol
mov
cltd
mov
add
pop
mov
dec
add
push
push
pop
push
dec
andb
in
jge
add
jecxz
adc
cmp
add
jle
loopne
cs
xchg
cli
add
leave
add
in
test
out
pop
sub
pop
mov
inc
rcrb
jmp
jae
roll
int
mov
pop
jno
push
out
test
jecxz
pop
call
inc
or
add
xchg
out
jg
jo
push
push
add
push
mov
jmp
lock
js
cmp
inc
jle
mov
popa
add
pop
mov
cld
add
iret
loop
inc
cmp
adc
dec
push
out
add
int
adc
in
inc
mov
es
mov
les
in
mov
fstp
inc
jmp
add
lods
stos
test
sub
add
cmp
sub
cmp
sbb
fcompp
bound
cmp
gs
fsubrl
ljmp
call
pop
mov
mov
nop
mov
pop
in
in
iret
dec
mov
out
lods
jmp
push
insl
call
pop
mov
add
or
mov
movsl
enter
jbe
adc
loop
and
gs
mov
push
lock
aad
push
add
addb
adc
incb
xor
fwait
pushf
push
test
loopne
je
pop
mov
xchg
add
fcmovu
inc
subb
cli
mov
aad
adc
shr
rol
les
push
outsl
jae
add
add
add
pop
add
mov
mov
test
bnd
into
arpl
xor
fwait
loopne
rorl
pop
fistpll
dec
popf
stos
add
notl
jno
cmp
test
rcl
loop
ret
fcmovu
repz
jecxz
mov
ret
dec
push
pop
cmp
pop
pop
xor
pusha
add
clc
sbb
adc
pushl
lret
cwtl
nop
aad
fdivrs
popa
xchg
test
add
inc
sub
and
mov
arpl
mov
int3
sbbl
jno
roll
mov
sub
xchg
cli
rolb
mov
sub
add
mov
mov
add
lret
add
data16
xchg
addb
in
out
fwait
adc
xchg
mov
ljmp
add
subl
enter
orb
add
in
stos
mov
and
pop
dec
jnp
inc
lock
add
add
je
jne
jae
add
adc
dec
pop
add
cmp
add
movsl
stos
adc
pop
add
mov
lods
out
ja
and
in
mov
add
xchg
push
jnp
lods
stos
add
sub
mov
sbb
mov
dec
add
push
sbbb
sbb
xor
mov
add
cmp
or
out
push
pop
sbb
add
popf
mov
mov
jecxz
lcall
xchg
lods
pop
daa
sub
rorb
cmpsl
movsl
xor
ret
add
sbb
push
xor
and
push
push
push
adc
cmp
add
mov
je
add
mov
mov
jo
lods
addr16
mov
dec
xchg
mov
addb
push
add
fucomp
out
xchg
dec
test
sbb
ffreep
test
push
int
mov
add
dec
dec
dec
xchg
test
mov
adc
or
out
xorb
pusha
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
rcrl
out
jo
ret
jne
lods
invd
add
xor
pop
add
lret
cmp
add
and
push
add
lock
add
shrl
lret
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cs
cwtl
add
ja
fistps
lods
scas
inc
dec
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
ret
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
xchg
add
jecxz
dec
test
lods
test
push
sbb
ficomps
pop
jne
ss
dec
add
call
jmp
out
fdiv
mov
jno
vpmulhuw
mov
dec
sbb
pushf
insb
ret
stos
stos
or
cmp
or
xchg
xor
add
orb
or
xchg
dec
je
and
jns
add
push
pop
scas
add
mov
jae
repnz
cmp
fcomps
add
push
adc
mov
outsb
mov
mov
pusha
xor
cltd
jo
and
sbb
pop
sub
lods
es
add
outsb
out
enter
jb
out
push
in
mov
jne
lock
jg
call
jo
les
xorl
fsubr
cmc
subb
flds
cmpsl
aam
xlat
xchg
call
ds
in
test
adc
in
out
out
fbstp
jae
add
inc
sub
stc
iret
ret
push
pop
ret
subb
push
fsubp
xchg
pop
add
add
sbb
xor
fadds
cs
xchg
aad
repz
dec
repnz
add
data16
jmp
lock
test
mov
xorl
je
jle
or
mov
jmp
mov
dec
sub
adc
cli
dec
out
mov
add
and
xor
ljmp
fs
add
lret
push
push
jg
xor
mov
jno
add
sub
sbb
hlt
xlat
cmpb
mov
pop
jae
add
xor
call
rcl
dec
add
shrl
addl
or
test
add
xchg
mov
call
or
test
inc
jmp
insl
adc
xor
pop
jg
shll
sub
pop
dec
insl
popf
xor
add
sub
pop
cltd
pop
shrb
data16
ss
mov
sub
stos
movsl
mov
jle
add
lahf
test
jb
loop
mov
cmp
cmpl
cmpsb
add
mov
adc
add
lock
inc
or
mov
sbb
push
sbbb
add
gs
jg
add
cmp
push
sbb
outsb
push
add
pushf
cwtl
jb
imul
xchg
addb
add
xchg
jo
push
cmp
je
and
popa
mov
fldcw
mov
mov
xchg
add
ja
jb
push
cmp
and
xorb
push
je
icebp
cs
rcl
dec
push
cld
mov
add
adcl
xchg
sub
cmpsl
dec
addl
xorb
shl
sub
mov
add
lret
add
fs
daa
push
sar
imul
mov
sub
add
fdivl
mov
mov
add
xchg
out
sub
add
add
dec
repz
jmp
adc
xor
jno
inc
or
jne
mov
mov
add
mov
jge
jl
lret
xlat
mov
add
bound
mov
inc
push
pop
add
or
call
mov
cwtl
insl
and
int3
icebp
add
sbb
clc
popa
mov
cmp
cmp
mov
and
mov
fucomi
orb
test
jecxz
and
out
add
jbe
cltd
push
pop
mov
cmp
dec
popf
add
and
jg
add
iret
loopne
call
push
xor
jb
cwtl
push
out
fwait
cld
adc
repnz
fdivl
add
or
and
inc
aad
sub
dec
call
lret
add
mov
add
sbb
jmp
loopne
add
pop
jnp
or
cmp
pop
lret
push
xchg
inc
aaa
cmovs
add
cld
sub
xchg
add
push
shrl
or
sbb
rol
mov
cmc
pop
xor
mov
inc
shld
cli
add
xchg
stos
push
rcrl
nop
push
add
adc
ja
inc
gs
jns
add
arpl
jbe
add
fiadds
insb
xchg
add
cmpsb
call
push
push
or
add
vmread
rclb
pop
data16
cmp
xchg
or
mov
jmp
pop
andl
mov
push
movsb
aaa
mov
add
push
push
cmpsl
pop
adc
xor
ja
cmp
jne
push
push
or
mov
loopne
faddl
dec
outsb
add
jb
gs
and
push
cmp
and
fwait
cwtl
adc
aaa
xor
push
mov
ss
push
dec
cld
js
and
add
shlb
xor
inc
and
add
add
sbb
xlat
icebp
add
xor
stos
add
push
or
inc
lcall
adc
roll
lret
sub
add
adc
popa
mov
cld
in
movl
fcom
shlb
pop
fwait
in
adc
add
and
enter
jne
sbbb
clc
fisttps
mov
add
mov
xchg
inc
mov
adc
jo
repnz
cmp
jae
popa
icebp
pop
jmp
imul
xchg
push
cld
jae
punpckhbw
mov
cmp
fs
loopne
sub
push
jae
mov
ficomps
addr16
pop
add
jecxz
xchg
aaa
insb
jns
cmpsb
lret
cwtl
cs
out
jmp
sub
jne
call
cmpsl
adc
mov
add
mov
hlt
mov
xor
lods
add
or
sub
testl
cmp
add
push
pop
or
cld
stc
add
jecxz,pt
and
push
arpl
push
out
int3
decb
shll
in
add
clc
sub
popf
ret
ja
imul
inc
and
add
aad
sti
add
sub
in
pop
mov
stos
push
mov
iret
inc
fdivrs
sti
cmp
sub
add
mov
pop
pop
mov
cmc
sub
sbb
or
push
movsb
mov
and
add
loope
hlt
xor
xor
jg
add
cs
xchg
enter
add
jnp
cmp
test
jp
jbe
pop
lds
shll
jmp
mov
and
popa
push
lea
iret
ret
lcall
xor
mov
adc
push
jl
mov
sbb
pop
filds
mov
sub
mov
add
sbb
sysret
pop
pop
out
shlb
test
add
sub
fadds
add
xor
adc
ljmp
fwait
icebp
popf
loopne
dec
mov
sti
shrb
nop
cmp
lea
or
sub
cmp
imul
push
sbb
rorb
nop
adc
notb
mov
mov
add
movsb
loope
and
pop
and
int3
add
sti
pop
push
mov
imul
jno
add
out
call
push
push
cmc
js
movsl
and
shlb
incb
sub
dec
sti
dec
cmp
dec
add
cs
inc
pop
xor
je
xor
push
add
pop
push
pop
add
push
pushf
in
add
jg
aam
ret
daa
jno
in
mov
push
jbe
jne
push
and
daa
sub
out
adc
add
ret
add
cltd
je
xor
daa
add
sbb
sbb
push
rcl
jne
pop
adc
icebp
scas
inc
loopne
shlb
cmp
push
int
add
loop
movsb
out
call
mov
clc
mov
mov
shll
add
inc
xchg
daa
fcoms
je
ljmp
lds
daa
call
arpl
xor
jne
sub
hlt
xchg
int3
sub
lahf
pop
xor
mov
or
cmp
add
add
push
mov
pusha
pop
jb
ficoms
repz
inc
mov
adc
add
pushf
pop
mov
subb
push
mov
sbb
popa
and
das
stc
fadd
pop
xor
cli
push
sbb
jb
push
nop
lock
sub
push
int3
add
dec
je
xor
test
sti
sbb
stos
push
xchg
or
adc
add
call
mov
inc
pop
mov
add
scas
and
test
pop
sbbl
add
add
add
mov
in
je
pop
dec
add
add
pop
adc
jle
add
daa
push
in
sub
or
push
test
adc
arpl
shl
es
push
and
js
pop
sbb
jl
popf
sbb
or
mov
cmpsb
je
call
cmovs
and
and
stos
sub
rclb
pop
inc
stc
add
pusha
and
aad
add
mov
inc
inc
mov
or
pop
sbb
orb
shlb
add
negl
hlt
orl
push
add
dec
add
outsl
push
add
xor
test
mov
sbb
jle
int3
fs
inc
pop
mov
daa
je
nop
in
add
add
data16
mov
mov
and
cli
dec
push
dec
push
testb
xor
add
add
cmpsb
sbb
xchg
add
aaa
pop
xor
xor
nop
sbb
add
shll
sbb
dec
add
add
cld
push
sub
mov
push
scas
call
cld
adc
mov
cmc
adc
pop
pop
xor
sarb
xchg
into
push
cmp
mov
jne
out
imul
pop
push
cmpsl
sub
jne
xlat
clc
sbb
xchg
pushf
subb
push
iret
mov
pop
inc
jne
shlb
push
push
fbld
mov
and
sbb
dec
dec
push
push
mov
dec
push
in
jne
add
es
in
pop
dec
inc
dec
add
daa
dec
negb
jne
hlt
ljmp
and
nop
ja
jg
dec
add
xor
aas
add
mov
mov
stos
inc
adc
or
add
repz
push
and
enter
and
or
adc
xor
or
mov
add
sub
sub
in
aas
and
xor
push
ds
cwtl
or
jnp
sub
repz
in
xlat
loopne
add
pop
or
es
add
lock
inc
mov
jle
stc
por
adc
ret
cmp
sub
lock
test
cmpb
push
ja
dec
addb
mov
or
mov
and
dec
dec
xchg
add
enter
mov
pop
sbb
fnstcw
add
pusha
add
jecxz
incb
inc
call
jns
mov
push
outsl
add
cwtl
mov
je
sbbl
jle
jecxz
fs
popa
outsb
arpl
cmpsl
fistpll
and
adc
push
shll
gs
sub
adc
mov
add
mov
mov
mov
add
push
xor
loopne
int
xor
cmp
add
movzwl
clc
negl
shlb
sbb
mov
jecxz
cmpb
xchg
add
test
add
dec
cltd
idiv
das
mov
xorl
in
out
xchg
or
inc
push
add
mov
pop
add
push
cs
dec
or
add
cmc
icebp
aam
out
dec
xor
les
and
xlat
adc
cmpb
mov
lcall
jmp
adc
mov
mov
insb
fadd
add
hlt
testb
sub
movb
push
cmpb
jp
xlat
add
lea
js
add
dec
mov
push
dec
addb
rorb
jle
mov
push
push
out
pop
jp
dec
ja
pop
mov
cmpl
pop
add
jge
dec
ret
lret
add
loope
jo
add
cmp
mov
cmp
jge
add
add
sbb
adc
push
pop
cmp
add
mov
pop
mov
repz
scas
xchg
insl
lock
rolb
and
mov
add
xor
add
mov
dec
call
add
imul
mov
fcoms
testl
add
jmp
incl
dec
js
dec
xchg
outsb
pop
or
rolb
addr16
mov
mov
dec
mov
lods
addl
movhps
test
adc
je
add
pushf
pop
sub
ja
inc
cmp
orb
dec
or
bnd
fidivs
pop
and
hlt
add
cmp
addl
sahf
jb
lret
or
or
push
adc
pop
and
inc
sbb
int3
sbbb
jg
repnz
das
add
fisubs
inc
movsb
fildll
jecxz
push
loopne
cwtl
test
add
sbb
add
pop
stc
mov
pop
and
add
lods
sti
sbb
add
mov
push
dec
stc
mov
xchg
inc
mov
sub
add
add
in
rolb
je
mov
cmp
aas
lea
sub
cltd
add
jne
in
cmc
xor
add
sub
rcrl
orl
or
test
add
xlat
mulb
mov
dec
mov
int3
add
in
add
lock
das
loopne
cli
aas
sbb
jmp
clc
push
jle
or
dec
lea
add
add
or
add
lock
vmovntps
ret
movsl
jno
adc
sbb
push
test
push
or
shlb
out
xlat
and
jg
add
add
inc
cmp
hlt
rcrb
orl
inc
add
xor
mov
mov
xchg
dec
cmpb
push
push
outsb
inc
std
push
add
sub
lea
cwtl
daa
stc
add
add
or
mov
adc
dec
push
jp
addb
inc
add
test
add
sbb
or
call
test
repnz
pop
jl
sub
je
dec
push
dec
add
andl
add
add
mov
les
je
pop
int3
lods
add
aaa
shlb
xor
or
jmp
movsl
pop
dec
mov
int
lea
sub
mov
ret
arpl
mov
sub
cmp
pop
pop
nop
cmp
das
lock
push
mov
push
rorb
pop
ds
xor
push
pop
sbb
inc
dec
or
and
jbe
fimuls
sub
add
adc
icebp
adc
jl
pop
push
lods
hlt
xlat
clc
add
cwtl
adc
sbb
loop
pop
jmp
add
sub
push
cmp
adc
xlat
add
jecxz
or
or
mov
add
lahf
pop
adc
mov
push
xcrypt-ofb
cmpsl
sub
pop
and
dec
mov
cmp
movsl
add
insb
jge
insl
jl
cmp
push
or
and
inc
ds
push
mov
adc
push
cmp
jl
dec
adc
add
mov
mov
adc
cmp
add
int
sub
call
lock
jmp
jecxz
mov
mov
sbb
dec
and
out
sub
test
pop
shll
sbb
cmp
lock
jmp
or
inc
add
mov
insb
add
and
mov
pop
or
arpl
add
xor
xchg
subl
cmc
in
das
fadd
push
add
push
bound
je
inc
outsb
push
jmp
movsl
pusha
fsts
add
imul
push
xor
dec
inc
repz
xchg
inc
xorl
cmpb
sub
xor
cwtl
and
add
pop
sub
popf
orl
push
xor
std
add
dec
add
fiadds
sub
test
loop
adc
sbb
loope
cmp
in
stos
or
jp
test
add
out
bound
cmpb
jo
add
xorb
or
push
lea
repz
cmp
inc
or
je
add
or
stos
pop
push
adc
repnz
test
mov
aam
mov
mov
jbe
lds
lock
sar
loopne
mov
mov
add
js
dec
xchg
or
and
inc
pop
lret
jl
mov
sbb
sbb
ds
pop
and
clc
add
mov
mov
aas
inc
mov
pusha
out
inc
cmp
pop
jno
push
inc
cltd
nop
syscall
add
add
push
clc
movsb
push
ljmp
sbb
and
sub
sbb
inc
aas
pop
clc
xor
xlat
sub
cli
mov
std
add
or
rclb
aas
mov
rcrl
loop
ret
xrelease
sub
add
and
jne
pop
adc
loop
pusha
xor
and
fdiv
test
inc
xchg
cmp
into
pop
enter
xchg
seto
and
imul
dec
loopne
pop
mov
mov
push
sub
mov
xor
jns
js
add
aam
xor
out
and
add
inc
xor
xor
gs
xchg
xor
out
pop
popf
shll
xor
pop
sbb
add
outsl
ja
and
sub
mov
inc
add
imul
mov
inc
cmp
ret
push
add
adc
push
jb
popa
outsb
jae
add
jl
jnp
enter
xor
popf
add
push
or
stos
mov
xchg
or
or
sbb
jmp
movsl
out
pop
inc
adc
stos
rcr
xor
jo
xor
jb
lock
jne
pop
nop
js
add
sub
xchg
aam
sbb
call
outsb
push
push
push
jbe
inc
jae
xchg
ja
jl
mov
pop
and
insb
sbb
mov
movsb
cld
jns
mov
push
nop
pop
dec
xchg
xorl
jne
sbb
adc
imul
pop
add
jo
or
addr16
push
and
arpl
jns
add
adc
js
push
pop
pop
pusha
xor
mov
push
add
and
add
adc
jg
shl
jmp
sub
cwtl
sub
std
rcrb
mov
fwait
mov
popa
mov
add
mov
daa
hlt
pop
lock
lret
pusha
or
mov
push
ds
sbb
lock
adc
adc
scas
in
int
cmp
push
sub
in
fldenv
xor
adc
push
mov
xchg
test
pop
mov
pop
pop
sub
jne
data16
je
add
test
or
lea
add
jne
pop
add
loopne
add
in
mov
xchg
add
test
movsl
add
adc
stc
inc
out
shll
aad
cmp
cmp
push
add
xchg
sub
pop
push
mov
sub
lret
pop
cmpsb
or
test
lock
sub
cmpl
enter
and
mov
in
add
push
cmpsb
dec
pusha
data16
roll
adc
jp
into
xchg
out
add
es
fnstsw
fsubrl
lds
jl
imul
push
inc
out
in
hlt
loop
cld
str
dec
mov
or
pop
pop
add
imul
bound
push
mov
push
push
call
dec
or
add
jmp
mov
or
pop
dec
dec
xor
sub
sbb
cmp
jae
xor
pop
or
jmp
pop
sbb
add
dec
lods
dec
inc
xor
adc
sbbb
mov
push
mov
mov
jge
add
cmp
fsqrt
lock
ss
and
inc
ror
mov
push
xchg
pop
fdivl
add
xchg
jle
sbb
dec
sbb
add
mov
pop
adc
outsb
add
dec
bound
add
xchg
cmp
test
sub
mov
movsb
push
push
adc
dec
clc
push
lea
mov
pop
push
add
rclb
add
lods
js
hlt
push
sbb
fdiv
add
push
pop
add
push
jns
add
lods
xor
push
and
hlt
mov
das
add
popf
fs
add
mov
jmp
mov
enter
mov
sbb
lock
push
jle
xchg
xchg
cltd
and
mov
out
fneni(8087
in
jmp
movb
loopne
out
sub
jmp
lock
add
pop
push
in
loope
xor
add
es
mov
mov
mov
jno
cmp
or
fs
pop
and
sbb
dec
add
inc
dec
leave
mov
and
mov
cs
jo
dec
xchg
add
mov
inc
add
inc
or
cmp
cmp
xor
inc
enter
add
and
dec
scas
mov
insb
pop
pusha
inc
and
add
mov
dec
add
lods
cmp
xor
add
xor
mov
lea
dec
inc
clc
mov
mov
cmp
and
pop
pop
cld
leave
popl
stos
arpl
mov
pop
mov
inc
add
loopne
add
and
jns
add
sbb
jp
cmc
into
in
mov
rcrl
jecxz
sldt
xor
mov
cmc
sbbb
or
jbe
test
or
lock
jo
add
ss
cmp
mov
outsb
imul
xchg
mov
push
sub
cmpsb
jns
push
xchg
add
mov
xchg
push
pop
popf
ret
jp
dec
sbb
push
rclb
stc
cmpb
jmp
std
inc
movsl
les
dec
add
jb
jl
and
add
leave
add
movsl
std
aam
scas
fnstenv
add
arpl
jmp
iret
add
xchg
data16
sub
icebp
pop
adc
stos
mov
push
out
pop
xor
jg
dec
in
jo
nop
dec
add
or
add
testb
enter
or
or
pop
and
add
inc
adc
add
and
test
dec
sub
add
lods
xor
out
add
xchg
in
aas
inc
or
push
lea
loop
xchg
mov
add
mov
popf
inc
aas
hlt
je
movsb
adc
movq
inc
xchg
arpl
add
sbb
test
fincstp
push
call
and
adc
je
add
pop
test
cmp
or
push
mov
cmpb
add
push
xor
adc
loop
xchg
pop
adc
mov
or
jns
xchg
imul
rclb
mov
arpl
popf
jo
lcall
adc
inc
dec
leave
addl
sbb
sub
das
and
and
jo
dec
repnz
lret
imul
inc
inc
test
xchg
jb
insb
sub
jo
xor
push
sbb
addr16
test
into
inc
pop
aas
test
sub
xor
in
add
fsubrs
movsl
xor
cmp
mov
mov
nop
dec
add
ficoms
sub
xor
push
xchg
lds
jno
in
and
dec
cld
fidivrl
lcall
sbb
gs
add
sbb
xchg
xor
pop
mov
xchg
test
jb
add
movzwl
rcr
add
pop
or
add
sbb
xchg
je
add
sbb
sbb
add
sbb
daa
and
xchg
sbb
mov
xor
stos
xor
andb
add
mov
cmp
mov
nop
and
xor
add
jno
add
add
jl
loop
sbb
aas
rclb
popf
test
inc
scas
jg
aas
mov
fstpt
ret
aad
mov
insl
or
push
mov
push
mov
gs
xchg
cmc
incl
inc
xor
fstp
orl
push
xchg
sbb
loop
jne
add
ret
xchg
iret
pusha
mov
adc
jb
ljmp
add
fwait
push
lea
add
insb
outsl
ss
pop
filds
xor
inc
sbb
add
aas
push
add
fistpll
fcoml
and
dec
test
aas
cmpsl
aam
sub
pop
mov
fs
pop
cli
lahf
xchg
sbbb
jmp
sbb
add
stos
loop
popa
aas
ret
jo
add
pop
pop
pop
push
push
add
mov
dec
shr
add
adc
adc
pop
add
jb
push
mov
andl
mov
and
and
rolb
dec
or
or
lfs
jns
add
sbb
add
push
adcb
lret
sbb
or
pusha
cmpsb
arpl
sarb
dec
add
and
push
jns
ljmp
push
mov
test
rolb
mov
add
adc
xchg
ret
jne
cmp
mov
testl
roll
les
into
or
lods
jae
and
push
fcoms
pop
mov
sbb
sub
loop
ds
cmc
add
addb
add
add
adc
jmp
mov
cmp
mov
add
mov
xchg
inc
cmp
int
mulb
test
add
cmpsl
iret
push
and
mov
add
push
lahf
and
push
sbb
mov
data16
cld
lock
add
cltd
add
add
js
xor
pop
xor
je
fimuls
mov
or
push
dec
sarb
inc
std
js
add
cld
xor
sub
mov
dec
xor
add
and
push
cli
push
dec
insb
int3
mov
mov
imul
inc
jg
dec
imul
jns
repnz
or
add
xchg
sti
lcall
adc
add
nop
mov
push
enter
add
shll
js
sub
cmp
pop
mov
mov
lods
xchg
daa
icebp
add
inc
push
push
push
jp
xor
dec
loope
add
mov
adc
add
movsb
cmp
les
jle
mov
mov
ss
or
inc
jl
aas
jno
add
inc
xor
mov
pop
add
mov
nop
and
dec
xor
sbb
shr
pop
mov
inc
jns
and
xor
ja
in
mov
sub
adc
add
or
leave
or
sub
mov
out
push
fistps
in
outsb
mov
pusha
gs
add
dec
sub
add
inc
dec
jne
add
dec
inc
mov
add
jbe
aad
lret
nop
inc
fsubs
push
xor
cmp
add
mov
mov
daa
test
cmp
mov
add
aad
test
add
ret
push
or
rorb
lock
roll
mov
inc
or
add
inc
mov
pushl
cmp
loopne
es
pop
mov
imul
ja
sbb
dec
jge
ljmp
add
mov
out
inc
pop
sbb
push
inc
pusha
push
mov
mov
jb
or
mov
pop
add
aad
jno
ret
push
push
pop
clc
test
add
add
movb
inc
std
ljmp
xchg
cli
pusha
and
cmp
scas
sub
jne
add
daa
push
lea
mov
add
popf
ret
adc
push
dec
cmp
add
cs
ja
leave
loopne
add
fsubrs
add
mov
jne
pusha
cmp
sub
mov
mov
add
push
push
xor
nop
mov
cmc
cmp
xchg
rorb
daa
mov
pop
shrb
adc
xor
add
push
arpl
and
movsl
pop
or
loopne
dec
fildl
or
and
xchg
or
sbb
add
fwait
enter
jno
add
jmp
sar
les
sub
sub
xlat
dec
rolb
cmp
or
add
ret
mov
xchg
mov
lods
and
imul
add
sub
dec
cmpsl
add
inc
mov
clc
std
popa
sbb
outsl
psubusw
mov
inc
push
scas
add
loopne
mov
adc
sbb
and
add
adc
pop
add
push
pop
and
dec
aam
repnz
mov
jno
jns
dec
in
adc
mov
movsb
loopne
cmc
in
and
pusha
testl
ds
cld
ja
ret
xlat
sbb
or
pop
lock
lret
xor
mov
xor
add
movsb
aaa
in
inc
inc
cmp
cs
fwait
emms
xor
add
or
sub
loopne
cmp
push
mov
push
add
inc
outsl
push
sbb
sub
add
dec
cmc
add
and
mov
fcoms
ds
cld
add
push
and
and
ds
pop
insl
sub
dec
enter
aam
push
popf
mov
outsl
push
mov
jp
adc
dec
mov
inc
mov
xchg
pop
sbb
lods
pop
mov
test
inc
adc
aas
orl
add
rcrl
popl
add
imul
js
add
scas
jge
jle
test
nop
add
push
imul
bound
imul
je
cmp
aam
pop
ds
popa
fs
pop
xor
and
mov
add
dec
push
addb
mov
push
jns
pop
sub
inc
in
cmp
hlt
xor
pop
lods
pop
or
adc
sbb
add
test
jne
add
dec
pop
sti
add
push
test
pop
or
add
loop
mov
inc
add
adc
mov
dec
add
stos
inc
xchg
mov
dec
dec
jo
aaa
in
insb
mov
add
sub
cmpsb
jl
sub
cmpl
push
adc
mov
sbbb
cmp
push
fmuls
jnp
loope
test
jmp
xor
aas
hlt
call
ss
push
inc
sbb
jecxz
cmp
nop
mov
lahf
xchg
sbb
mov
push
sub
mov
add
cmpl
dec
inc
out
ja
jecxz
notl
add
in
pop
mov
fidivl
inc
cmp
mov
pop
pop
hlt
stos
mov
in
jmp
je
sub
hlt
psrlq
jp
mov
mov
mov
lods
cmp
test
movsb
mov
and
in
adc
fwait
mov
test
movsb
stos
mull
mov
nop
push
add
test
shlb
mov
add
loopne
pop
cld
add
cmpb
jne
incb
jp
jae
add
jmp
aaa
sbb
push
addb
shlb
rol
cmp
mov
or
add
lock
daa
xor
cmp
iret
add
cmp
jg
mov
sbb
lret
icebp
add
xchg
outsb
add
inc
out
pushf
je
push
add
enter
push
pop
add
sahf
bound
cmc
xchg
add
orb
aaa
adc
je
repnz
mov
or
push
add
clc
inc
or
jae
sub
sbb
and
push
add
push
and
sub
cmp
pop
pusha
or
imulb
mov
add
push
add
push
add
add
outsb
push
mov
add
and
inc
pop
xor
fildll
insb
aam
je
mov
adc
add
push
mov
add
cmp
xchg
xor
pop
fs
sarb
or
jne
mov
add
dec
cmc
push
push
stos
inc
add
sub
ljmp
add
pop
sar
mov
xor
sbbl
xlat
cs
js
mov
push
sub
movsb
xor
dec
inc
sbb
xchg
daa
mov
popa
hlt
add
mov
push
xchg
sbb
add
std
ret
shlb
pusha
dec
into
jb
imul
addl
inc
jnp
pop
add
loope
jb
add
xchg
lods
mov
test
fstps
lock
sbb
shl
dec
ret
cmpsb
movb
or
loop
leave
pusha
pop
sbb
adcb
test
popf
int3
or
mov
dec
adc
sub
cmp
cmc
pandn
dec
out
inc
addl
mov
push
cmpsl
or
sub
add
pop
inc
arpl
jo
adc
inc
in
add
sub
sti
dec
movsb
sub
add
ret
dec
mov
je
out
pop
inc
xor
jle
add
xlat
or
xor
popa
cmp
inc
push
dec
out
jl
add
scas
jno
adc
mov
add
pop
or
outsl
bnd
mov
add
and
push
sbb
or
xchg
xlat
sbb
sub
add
out
sub
add
cwtl
pop
push
xor
enter
pop
fnstsw
push
pop
in
adc
mov
add
sub
push
daa
fstpt
jmp
je
ja
inc
mov
arpl
jbe
pop
rclb
jnp
nop
lea
push
inc
js
andb
sbbb
dec
sbb
xor
pop
add
pop
cmp
sub
dec
roll
xchg
and
mov
lea
enter
jbe
add
jne
mov
je
add
je
outsb
mov
jg
aam
pinsrw
mov
test
arpl
push
dec
frstor
inc
add
repnz
push
lock
or
adc
dec
inc
dec
jo
push
add
ds
imul
jmp
xchg
scas
cmpsl
push
cmc
popf
sub
out
rolb
roll
sbb
sub
nop
adc
sbb
aad
orb
sub
and
daa
add
push
cmp
pop
xchg
inc
add
jb
fildl
pop
sbb
pop
cmp
fdivrs
push
lods
jl
stos
add
xchg
mov
push
dec
lea
in
inc
add
cmp
add
test
jecxz
lods
mov
js
dec
add
dec
dec
and
dec
loope
add
mov
or
fsubl
je
cmp
adc
adc
stc
cmp
add
test
mov
fisttpll
dec
add
loop
and
ljmp
inc
mov
push
add
jne
jnp
sub
pop
mov
shl
cmp
ret
cmp
sarl
mov
ja
stos
jnp
add
and
hlt
jg
or
addl
repz
scas
sub
add
push
and
ret
insl
dec
xchg
call
push
jne
lahf
fdiv
xor
sub
pop
lods
loope
hlt
sub
iret
push
js
das
and
outsb
pop
cmp
arpl
lock
pop
dec
out
add
stos
xor
add
pcmpgtd
outsl
xor
fs
mov
rol
push
cs
pop
push
xbegin
into
add
xchg
or
inc
add
mov
xor
fadds
addr16
es
add
cltd
cmp
mov
pushf
or
push
pusha
pop
lods
xchg
int3
rclb
push
add
or
xchg
rol
sub
testb
mov
add
add
or
adc
xor
or
pop
xchg
fnstenv
or
push
or
pop
pop
pusha
add
mov
push
repnz
in
sbb
dec
adc
cwtl
cmp
testb
inc
pop
outsl
inc
jo
jns
test
add
ret
inc
fcmovbe
and
divl
mov
add
adc
add
dec
popa
in
mov
or
dec
jne
testb
push
negl
or
inc
cmpl
xchg
outsl
mov
and
mov
dec
ss
push
addr16
adcl
add
sub
add
jae
pop
push
cmp
add
jl
lret
add
scas
inc
adc
xor
add
pop
add
adcb
in
aas
fimull
cmp
sub
sbb
fcomip
sarl
inc
dec
stos
and
add
mov
jae
xor
mov
pop
add
clc
or
add
lea
push
mov
xchg
push
xchg
ror
add
insl
mov
inc
sbb
mov
fs
sub
inc
cli
sbb
and
int3
add
xor
rcrb
add
dec
xorl
test
arpl
cli
aas
inc
xchg
and
add
popf
add
leave
jle
imul
push
cs
xor
add
cmp
dec
add
dec
or
mov
mov
das
insl
verr
xchg
les
mov
add
mov
jge
rcll
mov
nop
sub
sbb
sbb
lods
pop
xchg
sub
ja
ljmp
fs
sub
mov
pop
enter
dec
jp
andps
test
cmc
add
lret
loop
test
add
call
aad
iret
or
cmp
std
test
dec
mov
xchg
adc
xchg
push
or
call
pop
ret
inc
sbb
rolb
loope
dec
dec
dec
stos
rolb
push
jbe
pop
jnp
push
xchg
lea
xchg
adc
insl
jg
out
dec
push
jmp
pop
pop
shrb
enter
pop
or
mov
dec
xchg
loop
jo
add
dec
outsb
and
jnp
add
add
fs
add
mov
push
push
dec
pusha
fstps
cmc
ret
xor
jp
add
repnz
dec
or
push
jle
add
test
mov
mov
push
add
ret
adc
pmaxsw
enter
mov
lods
jg
clc
and
adc
and
or
inc
fadds
mov
mov
clc
addb
fs
cmp
mov
popf
orps
lods
shll
test
mov
fadds
dec
outsb
test
push
in
sbb
push
jne
imul
js
pop
pop
cmpb
arpl
cmp
inc
bound
push
cmp
sub
or
add
xor
int3
add
daa
cmp
push
add
or
xchg
stos
out
sub
lods
rolb
fdivr
aaa
rcrb
lock
or
fistpl
shlb
ret
mov
mov
add
popf
outsb
subb
sub
inc
cmp
jne
adc
add
mov
sbb
das
rclb
sub
xorb
insl
sbb
shl
dec
shll
or
dec
cmp
add
imul
add
dec
sbb
sub
push
jp
inc
rcrb
jge
cmp
test
jb
jge
mov
dec
lock
xor
mov
adc
das
fsubr
and
ljmp
mov
add
or
jl
lahf
dec
test
imul
adc
mov
inc
inc
in
sbb
sub
addb
call
leave
or
sub
mov
imul
dec
push
jnp
add
sub
test
cmpsl
pop
and
arpl
or
inc
fs
mov
dec
add
pop
sbb
cmc
sub
imul
and
mov
inc
fldl
cmp
add
divl
push
and
mov
adc
jbe
and
mov
cmpsb
test
xor
add
aam
add
sbb
add
test
hlt
sub
lods
xchg
add
adcb
test
mov
xchg
mov
les
int3
or
add
insl
mov
pop
mov
mov
add
xchg
pop
cltd
add
cmp
pop
ljmp
xor
or
inc
lods
and
in
add
adc
xlat
and
out
rorb
add
fs
add
push
dec
and
popf
loop
dec
inc
arpl
inc
lcall
lods
popf
fadds
jecxz
cmp
pop
mov
out
shlb
pop
dec
jns
nop
pop
jecxz
push
jl
test
inc
in
lds
adc
movsb
push
lock
pop
clc
jns
ret
lock
adc
xchg
test
push
ds
loope
mov
add
stos
pushl
mov
add
mov
cwtl
mov
inc
or
cmp
add
out
add
aas
mov
ljmp
call
add
std
and
or
test
in
nop
ljmp
and
mov
ret
nop
push
add
push
pop
adc
adc
je
inc
add
cmp
nop
fcmovnbe
push
std
int
loopne
dec
add
jne
add
mov
xor
jo
insb
imul
push
dec
cmp
fdivr
out
lock
cmp
fistpl
and
xor
jle
inc
mov
jo
hlt
mov
jl
sbb
add
cmpsl
and
or
roll
lock
fcomps
jne
add
pop
mov
incw
pop
in
out
inc
and
ja
xor
push
mov
and
test
repz
in
mov
inc
stc
push
dec
dec
and
sbb
pop
add
daa
arpl
xchg
add
repz
add
in
mov
cli
mov
xor
add
cmp
xchg
je
and
jo
add
ja
fs
mov
sbb
mov
aam
adc
adc
add
outsb
push
gs
add
bound
pop
addr16
mov
mov
push
ja
jp
add
add
pusha
and
lods
dec
pop
cmpsl
nop
push
add
sahf
out
adc
add
push
fimuls
mov
shlb
les
ja
sub
pop
fiadds
fs
pop
out
sub
ja
jae
add
es
imul
pop
and
orb
hlt
ljmp
adc
mov
mov
and
cs
mov
xor
mov
add
jmp
add
les
push
xor
stos
loopne
fisubs
push
xchg
add
push
pusha
mov
push
inc
and
xor
sbb
daa
xchg
adc
push
xor
push
mov
add
adc
inc
mov
testb
inc
call
mov
into
aas
xor
jl
add
in
iret
add
pop
and
push
cmpsb
push
addl
inc
dec
jne
add
jecxz
and
lahf
jae
add
inc
out
fisubrl
das
mov
add
xor
and
pop
inc
testl
dec
ja
dec
or
add
add
sub
fnstcw
add
adc
mov
adc
add
outsb
push
subb
xchg
jae
call
repnz
and
add
adc
mov
jnp
sub
nop
leave
push
jo
or
push
pushl
add
xchg
push
mov
pop
sbb
lret
and
leave
lods
les
mov
sub
rorb
mov
jl
xchg
js
add
sub
inc
push
mov
adc
loopne
cwtl
das
or
xor
push
push
or
jp
pop
add
cmp
pushf
cmc
test
and
cmpsl
outsb
cmp
inc
push
xchg
inc
dec
inc
xor
mov
jno
add
notb
xor
xor
mov
jne
inc
xchg
sbbw
pop
inc
and
cmpl
ss
jo
add
repz
inc
xchg
push
and
push
inc
lcall
outsb
xor
popf
je
scas
jge
adc
call
mov
add
rclb
xlat
jo
add
test
add
loopne
clc
add
jg
nop
sbb
add
lds
add
addr16
inc
arpl
push
mov
push
cmp
lea
xor
roll
dec
adc
in
add
loopne
adc
cmp
jge
ds
nop
lcall
xchg
jnp
jl
sbb
sub
add
cmp
out
faddp
sub
shl
push
popa
jp
add
cmp
dec
cmc
sarb
and
loopne
push
in
mov
and
addr16
mov
pop
add
and
insb
add
negl
popa
xchg
add
lea
pop
lods
scas
push
in
jmp
mov
mov
daa
icebp
xchg
pop
lock
mov
lods
add
lods
add
nop
pop
xchg
fistpll
aas
jbe
inc
lds
and
mov
jae
ret
sbb
inc
or
pop
mov
xchg
testb
in
test
and
sub
call
mov
mov
jne
or
insb
add
out
cmp
cmp
add
dec
inc
outsl
stc
inc
jo
add
jmp
aad
adc
add
xor
xor
and
gs
mov
xchg
outsl
dec
int
into
jnp
iret
add
stos
mov
sub
enter
mov
subb
push
addr16
cmc
fildl
cld
rorb
call
out
loopne
lods
mov
mov
add
adc
lods
outsl
shlb
add
inc
imul
xchg
pushf
sbb
pop
mov
xchg
xor
xor
fwait
pop
cmp
pop
push
lods
add
lock
add
les
pusha
rcrl
push
push
das
add
pop
mov
inc
push
repnz
ja
push
pop
shlb
and
add
insb
data16
test
pop
adc
rolb
test
push
aas
push
scas
push
cli
pop
cmp
add
aaa
jnp
and
add
push
add
mov
sub
xchg
cmp
lahf
add
jns
stc
loopne
xor
add
scas
dec
pop
push
sbb
add
xchg
outsl
mov
dec
adc
mov
aaa
and
dec
arpl
out
pop
jmp
icebp
jo
add
jns
mov
add
enter
arpl
mov
mov
cmpsl
hlt
add
stos
jb
mov
fisubrs
mov
aad
push
filds
adc
add
xchg
int
loope
out
stos
popa
add
lcall
sub
aad
mov
push
cmp
inc
fcoms
sub
shlb
cmp
add
sub
bound
scas
subb
add
jmp
lds
imul
or
inc
cvttps2pi
iret
jecxz
and
lret
and
in
add
cs
movl
jnp
aam
mov
icebp
pop
lock
int
daa
mov
add
add
ror
xchg
push
orb
xor
mov
loop
xchg
push
push
and
lret
outsb
jo
jp
bound
test
adc
sub
int3
push
add
mov
add
enter
rcrl
loopnew
add
aad
les
add
push
icebp
dec
clc
push
shlb
mov
adc
ja
jnp
test
loopne
add
dec
cltd
str
adc
mov
push
or
out
add
inc
pop
cmp
rolb
xchg
scas
inc
adc
pop
xchg
shl
roll
lods
es
sub
or
fldenv
test
test
popa
jbe
insb
xor
stos
lods
ficoml
test
int
test
test
rcl
sub
jo
add
xchg
push
add
dec
jae
mov
lds
add
jbe
lods
bnd
mov
or
in
xor
mov
jl
inc
in
mov
aam
adc
mov
lret
add
pop
std
add
outsl
jo
xor
sbb
js
add
pop
xor
adc
std
cmc
and
je
adc
lcall
adc
mov
add
pop
cmpb
or
push
jne
data16
inc
js
push
orl
jecxz
and
aad
add
jo
gs
popf
add
fistpll
push
sahf
xor
inc
and
push
jne
pop
or
push
mov
cmp
sub
clc
push
xor
sbb
in
add
and
sub
insl
push
dec
pop
stos
pusha
pop
movsb
ds
cld
push
add
xor
insb
bswap
add
scas
mov
andb
add
inc
dec
lds
dec
test
push
mov
adc
add
pop
jle
inc
add
test
cmp
loopne
leave
mov
add
inc
add
add
and
jge
xchg
or
lea
dec
dec
lahf
rorb
add
jno
fidivrs
xchg
int3
push
stos
push
rolb
ja
sbb
adc
pop
mov
jmp
add
push
sub
mov
add
imul
add
stos
dec
popa
add
loopne
pop
jl
enter
pop
adc
in
sub
bound
nop
jmp
mov
sub
xchg
push
mov
inc
rcrb
add
loopne
mov
inc
int3
push
push
jle
pop
inc
add
pop
out
icebp
clc
add
add
je
xchg
das
test
cmpsb
xchg
ja
inc
add
cmp
jp
stc
jo
popl
or
test
pop
push
cmp
push
pushf
push
pop
arpl
in
mov
add
or
stc
jbe
nop
add
push
or
sbb
andb
pop
stos
rol
jb
adc
mov
or
cmp
cmp
inc
adc
and
add
or
nop
hlt
imul
jg
add
mov
jne,pt
daa
sbb
add
cmp
push
add
jmp
rorb
add
fldl
pop
adc
in
enter
lret
pop
xlat
push
arpl
jne
incl
stos
jo
xchg
insb
jecxz
adc
push
mov
ljmp
test
stc
cmpsl
repnz
cmp
sub
nop
test
jg
add
sarl
mov
and
rorb
and
negl
pop
faddp
push
or
mov
adcb
aam
imul
mov
xor
adc
stc
fiadds
mov
jnp
mov
leave
pusha
and
push
push
add
lock
add
ret
nop
out
mov
push
or
or
adc
add
mov
add
call
jne
shlb
movups
cmp
push
jb
sub
add
loope
and
add
pop
mov
xor
add
rcl
shll
push
movb
es
imul
inc
push
add
sub
xchg
popa
pop
push
inc
add
addb
xor
dec
in
ljmp
cmp
adc
or
mov
add
daa
push
pop
push
call
add
xchg
jne
and
scas
jnp
les
scas
shrb
addb
add
sub
jae
loopne
inc
mov
out
and
roll
mov
pop
add
pop
scas
clc
mov
dec
push
icebp
nop
push
in
add
inc
push
mov
jnp
repnz
push
inc
mov
ss
or
add
xchg
mov
push
push
rcrb
ljmp
les
inc
and
mov
inc
sti
add
adc
test
push
mov
jmp
in
inc
sbb
jmp
or
push
mov
pop
incl
jne
add
mov
cmp
paddb
xchg
jae
jo
ret
icebp
ljmp
add
out
add
or
sbb
cmp
leave
inc
add
sbb
inc
xor
add
ds
jnp
sub
ja
cmp
sub
mov
xchg
jmp
mulb
jo
js
dec
push
bound
cmpb
hlt
into
addr16
push
dec
jge
pop
test
add
in
aaa
jo
pop
jge
pop
pop
fcom
in
sub
mov
xor
xor
scas
add
out
add
push
lahf
loop
xlat
xchg
add
xchg
aam
sbb
jne
push
mov
add
xlat
imul
lahf
push
rcrb
into
je
add
mov
or
push
and
shrb
es
jo
add
adc
mov
fistps
clc
or
cmp
add
add
and
add
cld
dec
push
in
dec
cmc
sub
jae
xchg
pop
lahf
cs
inc
ja
xchg
add
loop
stos
and
adc
adc
mov
enter
lock
mov
add
imul
pop
imul
xchg
xlat
and
ja
mov
or
mov
ret
add
shr
imul
loopne
adc
adc
daa
je
ja
ret
and
jb
jmp
add
sahf
mov
add
mov
sub
jne
sbb
jb
iret
popf
call
leave
and
bound
in
sbbb
xchg
inc
add
mov
jno
xor
stc
xor
mov
jle
ret
add
lret
adc
pop
add
ljmp
xchg
add
xlat
cmp
mov
mov
add
add
mov
cmp
add
dec
leave
mov
mov
daa
cmc
mov
jp
jge
call
or
push
cmpsb
pop
push
push
jl
cmp
jo,pn
mov
test
inc
sub
loop
inc
jp
loop
mov
mov
mov
lods
add
fnstenv
add
add
mov
or
add
pop
xor
cld
jne
shrl
push
movsl
xor
and
jo
inc
test
pop
mov
test
xchg
jo
lcall
and
add
inc
dec
sbb
adc
add
mov
xor
movhps
and
or
inc
mov
je
inc
mov
popa
push
loopne
cmc
or
movsb
sub
pusha
lret
mov
cmp
sbb
xchg
dec
stos
cmp
push
xor
sbb
dec
xlat
shrl
shll
or
hlt
out
add
mov
adc
test
add
pop
mov
je
dec
dec
add
sbb
jp
add
or
jmp
adc
cmp
xchg
push
dec
sbb
inc
gs
je
jp
mov
jae
xchg
and
imul
in
pushl
les
push
lods
adc
mov
push
dec
cld
fdivrl
add
into
mov
aas
lods
push
sbb
mov
mov
mov
es
js
jge
cmp
test
jae
cli
mov
jl
call
aas
test
push
loopne
pop
jo
pop
sbbb
add
nop
adc
cs
lret
popf
add
mov
adc
cmp
push
addl
es
mov
pusha
mov
add
push
mov
push
cmp
pop
push
dec
lods
add
lret
mov
inc
pop
sarb
push
xchg
clc
stos
enter
jo
mov
xchg
push
insl
add
out
push
add
push
push
aas
in
mov
hlt
jp
jmp
mov
push
or
cmpsl
je
mov
loopne,pn
push
pop
testl
lea
cmp
dec
add
sub
sbb
lock
mov
add
cmp
push
pop
ficompl
cmpsl
cld
stos
add
add
mov
xchg
jb
dec
sar
pop
and
jne
pushl
js
pusha
mov
sbb
or
sub
loopne
add
jecxz
inc
jns
out
xor
adc
mov
xor
divb
cli
mov
je
lds
pop
mov
inc
cs
test
mov
pop
scas
add
pushf
ja
adc
rdpmc
xchg
mov
ret
jge
test
xchg
repnz
jne
outsb
jne
idivl
mov
add
mov
bound
add
mov
roll
add
pop
mov
inc
add
add
clc
add
sahf
dec
xor
movsb
dec
inc
nop
push
fstpt
enter
not
fadd
rcr
out
cmc
sub
call
fadd
push
stc
fwait
rorb
ljmp
add
test
addl
add
decl
push
mov
inc
repz
mov
pushf
add
cs
xchg
jae
test
push
push
fs
lret
out
add
bound
xor
jg
add
jne
push
outsl
testl
negb
dec
pop
std
fistpll
xor
fsubrs
int
and
jg
mov
jge
dec
dec
lea
push
repz
jo
inc
xorb
ja
dec
pop
sub
pop
add
and
lods
sbb
gs
and
pop
pop
ret
add
mov
add
and
add
lds
push
xchg
jge
add
inc
lock
cli
push
push
add
push
rcrb
jne
add
jge
jmp
or
add
and
inc
lret
jne
add
leave
add
sbb
adc
mov
sbb
pop
mov
xchg
xchg
inc
ljmp
pop
dec
jmp
iret
cwtl
add
or
adc
adc
cmp
sbb
sub
mov
push
and
add
cwtl
les
adc
es
movsl
testb
loope
mov
and
stc
adc
pop
mov
push
sub
imul
mov
cmp
mov
push
add
sbb
out
add
repnz
fisttps
add
int
mov
add
push
and
and
lea
je
add
adc
and
add
shl
mov
adc
add
pop
cli
ficompl
cmp
adc
add
or
pop
clc
and
test
mov
repnz
cmc
mov
cmp
lcall
sub
add
jg
add
je
cmp
pop
pop
push
mov
add
pop
pop
std
fiaddl
out
pushf
cli
add
das
icebp
mov
lcall
cwtl
or
jmp
jl
pushf
pop
and
ret
int3
insb
add
mov
out
cld
inc
aas
lods
or
add
shlb
add
or
pop
dec
or
jg
cwtl
xchg
mov
inc
xor
inc
rcr
sbb
add
jmp
cmp
jne
jns
add
cmpsb
push
push
out
mov
insb
jg
aad
fs
cmp
ds
pushf
mov
es
mov
je
imul
mov
mov
xchg
push
add
adc
jmp
inc
test
lock
xor
sbb
pushf
mov
xchg
jge
mov
and
leave
rolb
or
xor
call
or
in
sub
xchg
lea
mov
repnz
push
mov
dec
sbb
xchg
fildl
repz
inc
xor
inc
in
pusha
adcb
add
xor
hlt
sldt
jge
int3
jmp
xchg
or
push
push
lds
mov
dec
sti
sub
xchg
sarb
es
xchg
mov
fmul
and
inc
gs
pop
mov
mov
xchg
mov
push
and
in
dec
or
cmc
div
add
mov
addl
cs
ror
add
inc
add
inc
lock
lahf
incb
jne
cld
enter
add
adc
out
or
pusha
pop
push
fsubr
push
test
je
add
call
ljmp
cltd
push
dec
je
and
sub
adc
and
xor
test
or
inc
xchg
push
lret
out
fadds
cmp
jg
add
sti
cmpsl
fldl
add
popa
dec
fisubl
mov
das
insl
mov
dec
inc
add
push
and
or
cmp
add
sub
fists
in
add
inc
mov
cmp
subb
push
clc
push
add
cmpsl
jmp
push
fnsave
shl
or
outsb
pop
sub
mov
rcrb
clc
add
xchg
lods
cmc
jp
push
jb
dec
or
add
out
jg
stc
add
testl
and
sub
rcrl
or
aas
sub
mov
jmp
test
cld
mov
jne
xchg
lock
push
mov
out
mov
out
fwait
enter
add
rcrb
push
sbb
cmp
cmp
or
rcrl
lea
mov
inc
xchg
sub
jo
in
push
xchg
aas
call
mov
add
xchg
fsubrl
pop
inc
fildll
inc
nop
mov
pop
or
ret
xlat
insb
loopne
inc
or
jmp
inc
push
cwtl
clc
or
jecxz
dec
or
inc
fisttpl
cld
mov
mov
pop
pop
scas
add
xor
and
sti
jl
and
jp
add
imul
in
sbb
cmp
add
popf
xor
mov
lock
loop
add
fimuls
add
mov
inc
inc
dec
xchg
mov
add
mov
inc
cmpb
fsubr
inc
xchg
mov
fsts
leave
insl
mov
and
pop
shl
loop
mov
enter
popf
jle
gs
push
and
call
aad
mov
add
andl
mov
dec
les
repz
sub
out
xor
add
mov
lcall
sbb
xor
movsb
jae
push
push
push
push
mov
cmpsb
add
setne
loopne
xchg
add
adc
nop
testl
add
push
inc
xor
push
pop
mov
cmc
jns
call
in
int3
sub
push
aam
push
adc
inc
sub
cmp
dec
in
outsl
add
movsl
and
mov
dec
mov
add
add
cmpb
mov
aaa
add
out
ret
ja
mov
push
nop
and
outsl
cmp
xor
call
jmp
les
rcl
dec
xor
dec
adc
jl
adc
jge
add
movsl
cmp
sbb
add
lock
adc
jl
xchg
or
sbb
add
fists
and
es
mov
push
add
sub
mov
inc
push
lret
xor
add
cmp
inc
aam
sbb
push
cmp
push
push
or
push
aad
sub
pusha
shl
scas
clc
je
add
pop
popa
mov
leave
arpl
ss
sti
inc
xor
out
es
gs
shlb
shr
aam
mov
mov
adc
bswap
call
and
addl
and
sub
pop
fisubrs
xorb
movsl
call
or
adc
sub
aaa
xchg
call
inc
clc
psubb
pop
push
ret
or
jge
outsb
lods
push
hlt
xor
sub
mov
dec
inc
repnz
xor
pushf
call
or
lods
shlb
cld
out
pushf
add
push
daa
or
add
rorl
xor
cwtl
add
xor
push
push
rorb
mov
sti
stos
in
pop
push
nop
imul
ret
cmpl
popf
adc
cmp
push
sub
or
or
lea
mov
aas
jmp
cmp
dec
je
inc
add
inc
cmpsl
add
sub
pop
ljmp
push
imul
mov
or
js
add
cld
ljmp
in
mov
add
outsl
push
and
loopne
xor
std
add
rcll
call
ret
nop
sbb
and
sbb
or
add
and
nop
cmp
push
add
mov
enter
fisttpll
ja
add
arpl
add
xlat
test
adc
andb
push
dec
mov
cmp
add
or
cmpsb
and
xchg
pop
inc
dec
inc
dec
or
add
notl
leave
add
mov
add
andl
inc
jmp
les
pop
adc
lret
sbb
mov
and
fisubrs
xor
bound
sbb
sbb
jg
jno
jl
push
lock
out
add
jl
inc
fwait
rorb
jae
nop
aaa
sub
add
or
and
push
std
inc
int3
dec
dec
add
stc
pusha
imul
movsl
inc
adc
add
xor
rcrl
pop
icebp
pushf
gs
jno
add
jg
inc
mov
dec
add
mov
test
fldl
cltd
xor
movsb
add
push
repnz
jp
lods
add
lcall
add
inc
clc
inc
mov
aam
in
hlt
and
add
sbb
mov
push
add
vrsqrtss
push
cmp
inc
out
fiadds
mov
and
cmp
test
sbb
xor
xor
jne
push
movb
arpl
add
mov
or
aas
je
sbb
mov
add
xor
push
sub
fimuls
add
test
adc
inc
hlt
mov
adc
xchg
push
cmpb
lahf
push
pop
pmuludq
popa
add
adc
inc
sub
ret
imul
add
mov
sbb
and
mov
sti
bnd
add
adc
add
test
ljmp
popf
dec
xchg
push
add
daa
lahf
pop
loopne
sbb
in
and
and
js
repz
sub
pop
mov
mov
push
add
xchg
mov
call
test
lret
repnz
shll
sub
loop
add
mov
cltd
add
mov
insb
sub
lea
nopl
inc
pop
push
outsb
fmuls
dec
xchg
loop
cltd
dec
pop
mov
jg
jbe
xor
not
add
dec
cmp
dec
cmp
bound
addr16
mov
gs
add
mov
mov
pop
test
and
iret
inc
imul
add
insb
mov
outsb
xor
add
and
mov
adc
loopne
in
add
inc
add
or
sub
sub
sti
mov
cmp
cwtl
fcomip
andl
stos
test
scas
lods
inc
sub
push
mov
adc
aad
mov
jbe
cmp
cltd
addb
jo
add
add
test
test
sub
push
jo
push
aas
orl
mov
out
pop
jb
or
add
add
shll
fcmovne
sub
xor
add
xchg
testl
rol
mov
test
pop
or
andl
jmp
das
add
rorb
movsl
xor
mov
sub
mov
fildll
fstp
pop
adc
lods
jl
cmp
pop
or
frstor
or
or
sahf
clc
inc
pop
sub
dec
jecxz
jns
add
pusha
push
loope
adc
call
fildl
sub
fwait
xor
dec
filds
call
stos
and
subb
sbb
pop
or
jae
bound
hlt
or
shlb
add
or
test
fucom
int
ljmp
ficompl
xchg
js
add
andl
dec
xor
or
cmp
xor
pusha
rol
and
and
xor
push
mov
mov
push
inc
lods
loop
loopne
inc
iret
icebp
inc
nop
xor
movsl
pushf
dec
dec
fcmovb
jbe
jne
sarb
add
je
scas
push
mov
cld
paddusw
lea
sub
mov
pop
movsl
adc
xchg
rolb
cltd
cmp
jp
add
dec
pop
stc
sub
loopne
add
pusha
lea
cmp
sbb
xchg
mov
or
lea
fiaddl
subl
test
lret
sbb
scas
sarl
std
push
push
jns
push
bound
xor
add
data16
pop
xor
cmp
push
or
push
movsl
notb
push
cmpb
pop
loopne
loope
lcall
jmp
xor
ja
insb
sub
lods
sbb
hlt
and
dec
adc
mov
rsqrtps
mov
test
or
dec
rcrb
imul
cmpb
mov
cmp
fldl
test
mov
adc
test
sbb
int3
jns
rcrl
int
xlat
pop
nop
add
lds
cmp
add
fnstsw
cld
stc
ljmp
cwtl
setno
fiadds
je
sub
pop
mov
push
neg
shlb
and
pop
push
sub
sub
add
out
xchg
fdivr
and
add
mov
testl
mov
clc
fs
pushf
aam
and
inc
add
insb
sub
mov
xchg
lods
jbe
dec
push
fs
aam
mov
xchg
xor
pop
cmp
sub
xchg
xchg
add
mov
mov
cmp
repnz
inc
jmp
call
push
sahf
adc
pop
fsubs
mov
imul
es
cs
add
xchg
adc
pop
mov
and
add
or
dec
add
sub
push
pop
lods
leave
cwtl
add
cmc
sbb
dec
xchg
or
add
cmp
and
dec
adc
add
fdivl
sbb
and
add
xor
and
jb
add
adc
add
test
mov
repz
in
add
xchg
sbb
xchg
sbb
add
sahf
call
add
jbe
lret
notl
cld
in
add
add
loopne
fmul
add
dec
jne
jns
add
mov
pushf
adc
and
xchg
add
and
mov
cmc
xchg
add
mov
pop
mov
add
popa
fadd
rolb
leave
xor
cmp
aad
or
daa
pop
xchg
notl
inc
jmp
not
repz
in
push
pop
sar
add
sbb
or
add
stc
inc
xor
mov
add
scas
xlat
lods
mov
pop
sub
mov
dec
rclb
mov
sub
pop
adc
cmpsb
in
lret
dec
add
gs
rcl
or
popf
xorl
add
pop
stc
scas
mov
jbe
mov
in
push
jle
sti
fadd
and
xchg
aam
add
lcall
and
rcrl
sarb
xchg
mov
add
add
and
lds
jmp
xchg
xor
je
add
cmp
xlat
call
fildl
fsubp
add
lret
insl
mov
in
inc
aas
lds
dec
cmp
adc
jg
lret
mov
xchg
idiv
add
arpl
in
adcl
lea
out
enter
add
and
sub
pop
aas
add
dec
cmp
add
mov
cmp
ret
adc
movsl
or
hlt
es
jg
test
mov
aam
and
and
ficoms
repz
jne
add
shll
dec
add
leave
movsb
push
ret
cmpsb
insb
add
ds
xchg
jno
jnp
add
mov
shl
out
and
add
jecxz
lock
mov
pusha
add
cli
nop
call
add
xchg
adc
jmp
xchg
xchg
push
add
adc
loopne
pop
fsubs
add
daa
rcll
mov
push
and
xor
incl
pop
and
add
iret
cmp
addb
clc
daa
pop
push
add
cmp
call
adc
roll
pop
shll
jmp
jge
sub
push
insb
addr16
jmp
xor
inc
push
add
movb
adc
pop
inc
lcall
inc
cld
add
ret
icebp
mov
xchg
popf
jmp
lock
test
add
add
push
ret
or
add
push
adc
in
call
andl
rolb
mov
add
add
push
mov
clc
jp
sub
je
in
in
cltd
lcall
xor
rorb
add
and
inc
nop
pop
dec
push
add
push
call
add
adc
push
pop
adc
inc
test
add
cmp
or
mov
xor
addb
mov
add
add
mov
in
push
movzbl
and
xchg
mov
push
popa
inc
and
push
sbb
add
stos
mov
and
in
ljmp
je
es
push
add
add
jl
out
inc
add
sub
cmp
addb
or
lea
nop
mov
push
add
ret
rorb
jg
jne
out
and
test
add
mov
inc
dec
or
pop
adcl
roll
sarl
lret
add
adc
add
mov
dec
paddw
add
cmp
jae
movsb
roll
or
cltd
movzwl
bound
and
test
xchg
add
or
fidivl
shll
cmp
and
jmp
or
std
cli
andb
mov
setbe
add
adcb
mov
in
andb
jns
addr16
adc
xor
push
jle
outsl
or
cwtl
xchg
jmp
sub
xchg
and
or
nop
adc
aas
lahf
jle
sbb
add
cmp
stos
xor
ljmp
push
out
stos
test
dec
add
mov
aam
fsubrp
add
enter
mov
dec
jecxz
push
pop
inc
add
jp
xor
pusha
jmp
adc
ljmp
add
repnz
andl
dec
enter
add
push
lret
pop
xchg
mov
inc
cmpb
dec
push
xorb
daa
test
sbb
push
pop
mov
rorl
lds
lods
or
mov
fwait
mov
adc
test
add
mov
pop
and
ret
jle
xchg
clc
or
ja
testb
add
fmull
lea
dec
mov
add
xor
cmpsl
rclb
jae
lock
add
push
lahf
in
push
cmp
cli
enter
add
inc
xor
scas
pusha
xchg
aas
rolb
idiv
cmpsb
add
loope
adcb
or
lret
mov
sub
lds
push
loope
or
xchg
add
cli
and
adc
sbb
dec
js
jno
in
add
xchg
daa
or
stc
or
xor
jg
mov
pop
repz
imul
push
adc
cltd
add
sbbl
inc
adc
dec
inc
cmpb
fsub
cmp
outsl
adc
lods
dec
sbb
mov
sbb
das
add
xchg
ljmp
fistps
dec
mov
mov
ret
mov
add
jne
je
or
jno
unpckhps
les
ja
sarb
ljmp
inc
push
cmc
loopne
test
rclb
and
mov
and
repnz
aaa
xchg
je
and
icebp
cltd
fdivrs
jl
push
mov
adcl
fdivrs
aad
ret
push
pusha
test
jmp
sub
pop
jmp
cmp
lea
pop
movl
int
xchg
mov
pop
leave
aam
mov
rcrb
lahf
je
mov
mov
sbb
lods
add
dec
loope
sub
mov
cltd
test
clc
test
stc
xor
adc
cmp
jp
jo
cmp
mov
shl
or
inc
cmp
cmp
pop
out
pushf
cmpsl
pop
sub
cmp
xchg
stc
jne
or
jns
pextrw
pop
cld
loopne
push
pusha
inc
clc
add
stos
mov
adc
js
enter
sbb
push
dec
and
push
mov
mov
lock
jne
out
and
imul
subl
push
push
mov
jmp
aas
flds
testb
inc
push
or
sbbb
adc
jbe
inc
popa
repnz
ds
test
mov
dec
mov
das
cmp
dec
cmpb
idiv
rclb
iret
push
add
add
cmp
loop
leave
push
aam
sbb
out
mov
add
add
pop
or
inc
les
adc
ret
mov
mov
fwait
add
cmp
xchg
dec
cmpsl
add
mov
xor
dec
test
xlat
mov
leave
adc
cmp
xchg
jne
popf
stos
dec
shlb
cs
push
or
shr
outsl
mov
aam
lcall
inc
jne
cli
repz
inc
dec
cmpsl
cmc
rclb
shlb
rorl
scas
inc
jne
dec
dec
add
mov
mov
and
push
add
sub
push
or
jo
sbbb
xchg
or
ljmp
scas
pop
jmp
sarb
pop
mov
cmpsb
add
xchg
sub
inc
jbe
add
mov
mov
jmp
daa
movsl
lds
outsl
add
push
xchg
es
rolb
lea
ss
dec
out
nop
lahf
add
scas
inc
loop
lock
sbb
sbb
pop
enter
add
call
xchg
stc
popl
ja
push
fsubl
fdivr
fiaddl
sub
adc
adc
not
add
xchg
and
lds
mov
mov
fwait
adc
lret
xlat
sti
jecxz
out
sti
sti
enter
cmp
sbb
sbb
daa
pop
jge
mov
icebp
addr16
and
jnp
jmp
or
xor
les
pop
xor
scas
add
inc
adc
pop
and
xor
or
ja
mov
push
sbb
test
jg
pop
push
mov
cmp
leave
xor
fld
daa
fs
fsubs
rcll
jmp
and
push
inc
daa
rolb
inc
push
icebp
sbb
xor
pop
or
sub
push
mov
sahf
lock
ret
adc
mov
dec
sbbb
or
cli
mov
mov
fs
leave
rcrl
add
add
test
add
out
rol
sub
push
bound
add
dec
add
mov
or
jbe
subl
add
nop
sub
sbb
xor
or
or
lahf
pop
clc
xchg
out
adc
add
and
inc
pop
push
nop
and
mov
push
or
lret
xchg
push
inc
mov
faddl
push
gs
aam
sub
std
out
add
out
lret
and
repnz
out
mov
por
nop
push
push
push
jae
push
ds
lahf
add
rclb
pop
stos
into
pop
or
les
test
cmpsb
test
popa
xchg
push
add
lret
lods
shrl
xchg
adc
or
cmp
add
dec
cmp
push
addl
push
and
cmp
rorb
add
and
mov
xchg
andb
sub
ss
xor
aaa
mov
test
mov
add
push
jnp
sub
mov
pop
cmp
mov
insb
and
dec
ljmp
mov
int
dec
clc
adc
mov
xor
xchg
jnp
lret
or
inc
jl
pop
bound
and
dec
adc
dec
mov
out
mov
push
mov
movzwl
lcall
aad
and
push
dec
and
test
pushf
cmp
mov
out
add
inc
push
jg
in
dec
mov
jae
or
repz
loopne
inc
repnz
xor
imul
add
in
aad
mov
int
mov
jb
and
lcall
and
in
arpl
popf
imul
xor
cwtl
mov
data16
jge
push
hlt
pop
outsl
add
mov
pop
pop
insb
and
sar
js
push
in
jae
pop
mov
fsts
dec
inc
pop
in
add
sbb
testl
jl
dec
xchg
mov
push
out
pop
lods
loopne
in
and
jmp
mov
bswap
add
rcll
scas
push
ss
clc
add
lock
pop
popl
mov
data16
punpcklbw
lods
add
std
repnz
arpl
adc
xor
jno
das
fidivl
add
jo
call
sbb
jb
das
sbb
add
add
lods
cmpsl
jl
add
nop
cmp
dec
xchg
cmc
call
jmp
mov
ret
popf
jmp
iret
add
dec
xor
lcall
orl
fldenv
imul
mov
xor
mov
hlt
sub
xor
or
leave
mov
mov
test
je
jno
mov
xchg
aas
lret
xor
push
fsubrs
xchg
arpl
ds
ret
fdivl
add
cwtl
sub
dec
mov
add
hlt
sub
jbe
clc
or
add
or
test
add
aas
into
scas
add
stos
and
and
mov
inc
cli
roll
or
xchg
and
add
sbb
inc
shrb
add
dec
gs
push
fisubrs
add
push
or
pop
out
mov
sub
jmp
add
imul
or
add
fstps
mov
xor
iret
loop
inc
add
dec
and
packssdw
or
movsb
lods
push
and
dec
pop
push
mov
addl
or
imul
push
pushf
data16
mov
or
mov
pop
or
lock
lret
adc
sbb
mov
pop
xchg
lea
adc
aas
dec
aad
push
ror
sbb
sbb
movl
push
jmp
ljmp
add
daa
or
sbb
pop
cmpsl
add
pop
push
mov
push
add
add
push
jb
je
inc
cs
add
scas
lret
dec
jl
xchg
js
add
mov
mov
testl
dec
dec
fcmovb
sbb
dec
dec
cld
lcall
in
pop
ret
not
js
faddl
and
inc
aam
mov
mov
cwtl
sbb
sbb
pop
in
inc
fnstcw
cmp
call
add
test
dec
inc
icebp
das
sahf
pop
loope
bound
scas
mov
sub
and
je
outsl
mov
mov
rorl
jbe
out
cmp
push
push
out
add
shlb
add
mov
mov
sbb
jb
sbb
xchg
push
fmuls
pop
mov
jmp
add
je
jb
xchg
jle
pop
mov
sbb
inc
inc
push
loopne
in
xor
stos
sub
sbb
test
push
mov
xchg
sub
add
and
lret
push
gs
cmp
adc
mov
lahf
loop
stos
repz
push
add
push
fsubrp
loopne
dec
add
std
push
xchg
jbe
adc
addb
xor
add
btr
push
mov
jecxz
ret
push
cmp
mov
pusha
icebp
in
add
xor
sub
adc
mov
ds
add
xlat
push
insb
push
push
xchg
dec
jb
inc
fcoms
cmp
cmpb
jae
popa
or
movl
cs
and
inc
loopne
mov
add
cmpsl
icebp
sbb
fcomps
enter
push
fsts
inc
and
add
cmp
stc
ja
sub
fiaddl
movsl
mov
je
push
fisubs
iret
xlat
mov
out
jmp
shll
mov
add
pop
movsl
outsl
jo
xchg
add
jge
or
add
test
add
popa
dec
je
push
imul
lret
enter
dec
cld
push
cmp
add
pop
or
sbb
push
daa
div
mov
dec
loop
add
jmp
cmp
jmp
stos
das
jb
add
or
imul
or
je
repnz
icebp
mov
aas
and
popa
cltd
iret
test
jbe
incl
push
adc
adc
pop
and
mov
shll
xor
jmp
aam
pop
adcl
pop
cmp
int
popf
xchg
push
dec
dec
imul
jl
add
loop
lock
sub
lcall
xchg
jl
ljmp
jb
aad
add
rolb
adc
push
lods
add
add
inc
cmp
pop
push
cmp
sbbb
lahf
adc
stc
rcr
xor
xchg
pop
int
adc
lock
xchg
add
xchg
xchg
fsubrl
enter
stc
jbe
insb
add
add
push
inc
flds
int3
je
jge
add
adc
fnsave
cmp
cmp
xor
lea
mov
and
mov
rolb
int3
test
out
bswap
imul
jb
add
push
mov
add
mov
mov
add
jo
dec
scas
imul
call
cmp
cltd
ja
icebp
cmpsb
and
xchg
out
jmp
or
pop
aas
pop
and
adc
leave
into
dec
aaa
sbb
inc
ja
mov
push
or
flds
mov
shr
sub
into
iret
cltd
inc
sbb
inc
adc
aas
inc
dec
pop
dec
pop
inc
shr
mov
pop
add
inc
and
in
sub
jg
push
xor
pop
rorl
loopne
or
and
ret
xor
test
add
shrb
or
dec
stos
adc
inc
adc
movsl
or
jo
fucomip
imul
push
call
add
add
call
jno
sub
adc
pop
dec
lods
and
push
insb
inc
push
inc
cmp
add
mov
je
mov
and
sbb
push
icebp
xchg
adc
out
cmc
push
sbb
mov
sub
cmpsl
xchg
ror
cmpsb
push
pop
pop
in
push
mov
xchg
out
shll
add
and
jp
nop
mov
mov
sbb
mov
push
pushf
add
stos
or
sbb
nop
add
jecxz
hlt
adc
popl
dec
xor
mov
push
xchg
rolb
sub
dec
mov
loop
push
sbb
inc
adc
xor
and
add
cvtps2pi
repnz
jbe
inc
sbb
subb
adc
and
fs
sub
clc
add
dec
out
or
and
dec
sti
mov
jecxz
pop
dec
and
js
add
dec
jns
xchg
mov
in
adc
xor
test
add
sbb
lret
sub
xchg
fldt
pop
jnp
in
pop
or
pop
mov
push
mov
inc
loopne
mov
xor
les
mov
int3
repz
inc
or
sbb
cld
lea
or
testl
add
mov
iret
mov
fists
lock
clc
adc
out
mov
cmp
dec
out
add
mov
mov
pop
push
xchg
mov
mov
fldt
jno
sbb
daa
mov
nop
xchg
adc
scas
ret
int
and
aaa
lock
or
ja
mov
add
pop
jno
add
jo
push
aad
push
pop
sbb
jle
inc
cmp
incl
push
pop
push
xor
test
dec
add
jo
mov
sub
inc
pop
adc
and
push
xor
mov
in
xchg
adc
roll
lea
and
icebp
hlt
or
add
sbb
cmpsb
xchg
jb
add
scas
or
shr
push
int3
jne
scas
dec
fsubrs
mov
add
das
inc
pop
lahf
jne
add
out
pop
add
jmp
aam
pop
mov
xchg
ja
add
in
loope
adc
loopne
cs
test
sbb
sbb
ret
popf
push
add
dec
ds
add
push
mov
leave
or
xchg
or
and
add
xchg
out
test
push
push
mov
jne
mov
add
cld
hlt
pop
xchg
out
push
add
test
or
mov
add
leave
xchg
or
mov
and
cld
pop
add
icebp
adc
add
dec
and
daa
sub
movsl
or
mov
test
test
push
pop
mov
jle
lods
jp
out
imul
jmp
popa
add
fwait
adc
shr
lcall
or
mov
add
pop
jecxz
mov
test
out
cmp
or
add
pop
mov
and
add
xchg
test
jg
jg
jg
add
inc
add
ja
adc
add
mov
sub
xchg
clc
repnz
add
and
adc
loop
lods
cmp
loopne
pop
mov
jmp
sbb
sbb
arpl
mov
pop
or
sti
addb
jecxz
pop
xor
sbb
out
jp
add
enter
lret
aas
or
add
and
mov
add
pop
arpl
add
je
mov
nop
sarb
lods
add
outsl
pop
or
filds
sub
pusha
fadds
mov
repnz
add
dec
loopne
mov
mov
jecxz
sub
lret
call
pop
xorb
sbb
test
or
mov
loope
ja
fsubrl
xchg
mov
out
xor
inc
icebp
push
stos
fs
lret
mov
rcl
hlt
popa
pop
ret
add
movsl
cmp
out
add
jmp
ja
add
dec
mov
inc
mov
fs
or
mov
mov
cmc
shl
add
testl
and
cli
data16
sub
jae
push
dec
imul
dec
ffree
repz
jnp
loopne
add
push
lcall
push
xor
and
incl
dec
add
inc
fistpl
push
pop
jne
or
fwait
pop
or
ja
iret
sti
into
jne
add
xchg
stos
jp
cmp
test
mov
push
adc
pop
mov
add
and
nop
fsts
adc
push
or
add
add
aas
subb
call
mov
lret
sub
push
aad
add
lods
xchg
add
enter
popa
add
add
inc
cmp
xchg
add
ljmp
add
mov
cld
and
andb
clc
loopne
sbb
xchg
lods
add
arpl
rorl
and
add
sub
or
xchg
cmp
out
add
sbb
or
sub
in
inc
jne
out
ja
loopne
and
out
pcmpgtb
inc
push
push
in
add
xchg
clc
je
ret
ds
xchg
pusha
mov
loopne
pop
push
test
add
and
xor
mov
sub
dec
jne
addl
push
push
push
pop
ljmp
fsubrl
adc
push
xor
ret
pusha
cmpsb
push
call
movups
fsubs
sub
mov
cmpl
mov
rorl
loopne
ja
adc
jg
imul
add
push
cmp
ljmp
mov
dec
leave
pop
stc
insl
adc
pop
adc
xlat
inc
mov
push
mov
jle
sbb
dec
or
add
mov
add
inc
dec
jne
xchg
fcompl
cmpsl
adcb
cmc
jge
add
add
pop
add
xor
bound
add
pop
add
xchg
cmp
add
push
or
add
mov
xchg
rcrl
adc
push
pop
cmp
dec
mov
mov
andb
lret
out
add
push
pop
push
test
orl
add
or
shll
add
fidivrs
add
xor
adcl
imul
inc
pop
std
jp
push
add
in
push
and
jne
movsb
test
and
inc
in
jno
ficomps
cmp
dec
mov
lock
pop
aas
lods
sbb
test
push
xor
out
ds
mov
popf
jle
adc
cwtl
push
jp
inc
adc
daa
fwait
mov
test
dec
mov
jge
sbb
fsubrp
popa
loopne
out
push
adc
or
ficoml
xchg
stos
insb
xor
cmp
pop
stc
inc
movsb
cli
mov
call
mov
pop
iret
sub
fildl
jle
add
jns
jno
or
pop
iret
sub
add
jmp
dec
ss
std
decl
xlat
ret
cltd
push
jp
mov
nop
add
push
or
adc
add
pop
and
jo
out
cmp
jae
pop
or
clc
xlat
sbb
jg,pt
jl
xchg
cmp
sub
jo
cwtl
aas
lock
ret
push
daa
lcall
loope
mov
push
dec
add
pop
add
shrb
xor
jmp
sbb
cmp
loop
outsl
and
push
add
jne
mov
jecxz
xor
push
add
test
jge
jge
add
loop
jecxz
and
jge
shlb
push
js
sbb
mov
in
pop
mov
cmp
sbb
js
lcall
cmp
push
mov
in
adc
and
testb
es
xor
cmp
std
jno
cwtl
or
push
aaa
or
add
loopne
popa
xor
mov
loope
ljmp
ja
popa
mov
js
loopne
pop
jo
push
in
rclb
sub
call
test
adc
loopne
loope
rol
mov
add
loope
and
cld
add
sub
or
sbb
ljmp
sbb
sbb
inc
je
je
add
lret
mov
ret
pop
bound
xor
and
mov
sbb
and
daa
aaa
push
ja
mov
push
xor
mov
xchg
or
sub
sbb
fldlg2
sbb
mov
sbb
clc
cmp
pop
pop
scas
ljmp
pusha
js
mov
dec
cld
std
mov
cli
hlt
fwait
clc
imul
shrb
testl
in
hlt
cmp
sbb
in
add
sarl
andl
movsb
pop
jp
inc
scas
and
notb
xchg
dec
in
aas
stc
push
sub
iret
dec
call
hlt
cli
out
add
pop
fcomp
jle
or
jge
sbb
inc
je
push
xor
movsb
std
xor
cmp
test
aas
add
push
hlt
pop
ljmp
pusha
lods
out
imul
pusha
and
andb
mov
mov
out
xor
mov
cmpsl
popa
mov
aas
fsubrl
cli
dec
je
xchg
ljmp
dec
imul
in
dec
loope
mov
inc
hlt
dec
sub
stc
jle
jg
pop
in
js
fdiv
mov
adc
lock
jnp
imull
imul
clc
sbb
sbb
and
or
add
lcall
dec
adc
imul
movsl
mov
dec
test
ljmp
cmc
mov
test
in
lahf
clc
outsb
sahf
aam
stos
cmp
fwait
adc
or
decl
push
xchg
jmp
push
add
les
cli
push
cmp
push
loope
push
lcall
jns
push
add
or
inc
popa
dec
xchg
test
in
insb
fwait
and
loop
addb
inc
push
add
div
pop
mov
sbb
add
or
jp
popf
cmp
inc
inc
sub
and
cmp
cld
in
or
ja
notb
sub
mov
add
js
mov
das
xlat
fxch
mov
call
add
add
pop
xchg
popl
sub
lods
adc
or
repnz
adc
add
push
inc
daa
add
jno
int3
jbe
mov
icebp
add
or
mov
les
inc
scas
adc
shr
sub
adc
icebp
and
cmpsb
cmp
and
add
repz
test
mov
sbbb
mov
out
dec
jecxz
popa
jnp
dec
loop
ret
or
push
js
xchg
sub
inc
and
test
dec
scas
mov
fbstp
add
and
or
addps
out
fcomp
and
jnp
cld
je
or
adc
loope
or
cld
jmp
shlb
dec
negl
xor
stc
movsl
jle
push
movsb
iret
js
mov
ja
shlb
ss
and
nop
xor
bndldx
testb
cmp
and
cld
daa
inc
fisttps
cmp
cmp
xor
adc
mov
xlat
mov
stos
call
loop
and
test
incb
test
inc
in
iret
and
ret
sbb
out
and
out
cld
add
push
cmpsl
mov
loopne
inc
or
jg
adc
clc
cmpsl
and
jb
xchg
flds
cmp
lret
or
mov
sbb
add
add
dec
xchg
inc
jecxz
inc
sbb
mov
inc
inc
clc
lock
push
adc
pusha
cmp
mov
or
and
push
and
pop
test
lods
ds
pop
adc
push
lock
or
mov
shl
add
lahf
mov
cwtl
pop
push
test
sub
es
pop
int
mov
or
test
pushf
add
push
arpl
inc
push
mov
leave
cmp
or
clc
inc
add
and
dec
out
xchg
loopne
pop
sbb
and
inc
pop
sub
dec
mov
adc
add
add
cmp
dec
mov
pop
icebp
jg
and
lahf
lahf
add
mov
jno
repnz
jl
xchg
shll
popa
sbb
daa
loopne
das
add
test
pop
inc
adc
dec
out
ret
cld
adc
in
or
cmp
stc
clc
cmp
dec
and
pushf
or
and
add
or
xchg
pop
and
addb
movsb
mov
les
pushf
ss
add
out
mov
mov
dec
mov
call
repnz
outsl
pop
loop
dec
mov
jl
and
fldcw
and
xchg
js
add
mov
cmp
push
dec
add
sub
push
push
les
xchg
and
in
xor
fsubs
movsb
pop
push
push
pop
jo
loop
push
sbb
bswap
je
sete
les
dec
adc
push
add
pop
inc
les
nop
mov
cmpsl
nop
jns
iret
cmp
and
xor
movswl
sub
adcb
and
push
aas
or
loope
sbb
and
roll
push
adc
clc
jnp
inc
hlt
mov
add
insb
ret
inc
loopne
adc
les
xor
add
test
clc
loop
fcoml
lret
jne
inc
mov
and
popf
cli
clc
in
scas
adcl
adc
outsl
mov
loop
mov
inc
add
xor
sub
sub
dec
cmp
outsb
cmp
dec
lahf
dec
cld
or
fildl
stos
push
outsl
movsb
sub
into
pushf
add
inc
icebp
cmpsl
add
gs
or
hlt
and
and
mov
push
xchg
cld
adc
and
jo
and
jge
mov
mov
pop
stos
add
clc
jmp
scas
add
add
inc
cmc
imul
pop
adcb
lret
inc
jmp
sub
nop
push
jecxz
mov
jl
inc
jmp
or
adc
ds
ds
cmpsl
mov
xchg
nop
lahf
xor
test
repz
idivb
or
adc
push
lea
scas
or
jnp
xor
jns
add
imul
sub
inc
push
adc
lret
out
repnz
sbb
or
or
jmp
hlt
les
jg
add
divb
sbb
cmp
xchg
pop
adc
les
sub
or
jbe
mov
ljmp
mov
push
dec
loop
or
sub
inc
addl
lock
mov
mov
or
dec
add
mov
dec
sbb
in
dec
xor
aas
pop
lods
push
add
and
repz
lret
sub
test
adc
adc
imul
loope
push
sbb
xchg
jg
ljmp
mov
test
inc
lock
cwtl
add
or
sub
mov
pop
test
pop
sub
jge
mov
mov
and
pusha
js
mov
mov
push
out
add
lock
mov
and
dec
sbb
aad
popa
insb
add
and
clc
movhps
mov
cmpsb
xor
rclb
mov
std
pop
jmp
das
dec
test
dec
lods
add
dec
pop
ficoml
mov
pop
adc
cwtl
push
inc
xchg
pop
pop
idiv
cli
mov
fsubs
subl
or
adc
mov
jge
add
insb
inc
dec
or
scas
push
int3
adc
pop
inc
inc
xor
xor
push
lods
push
lahf
nop
and
xchg
add
jo
rcll
and
dec
mov
ja
lods
dec
pop
adc
daa
mov
fcoms
push
mov
adc
pop
loope
sbb
or
sub
jp
jns
add
or
xor
lock
xchg
pop
mov
js
icebp
tzmsk
stos
push
cmpsl
out
aad
and
movsl
add
sub
jnp
jne
lock
rorl
pop
pusha
pop
clc
lea
xchg
arpl
or
xchg
repnz
add
clc
sbb
or
dec
sub
mov
cld
lret
cmpsl
sbb
fbstp
or
xchg
dec
push
jmp
cld
mov
or
das
and
add
xchg
pop
and
jnp
mov
jg
jg
jg
dec
iret
cwtl
sbb
add
push
aas
adc
lock
add
add
adc
pop
jg
and
ret
enter
mov
inc
add
shrb
push
xchg
mov
mov
movl
rorl
inc
add
and
aam
push
popa
decl
or
mov
adc
and
test
sub
and
popa
not
mov
sub
pop
inc
out
ficoms
and
cwtl
arpl
les
xor
adc
add
sbb
mul
or
sti
dec
js
lds
sbb
nop
inc
out
cmp
bound
imul
or
or
jbe
into
outsb
inc
lods
loopne
lea
xchg
adc
push
or
repnz
mov
pop
xchg
sahf
add
mov
stos
jo
ret
sub
adc
ja
shll
adc
lgdtl
lret
cs
inc
pop
add
test
xchg
adc
xchg
aam
in
icebp
decb
sbb
and
aas
xchg
dec
and
xchg
add
aam
loopne
pop
and
jp
pop
orb
inc
incl
btc
xor
or
enter
mov
cmpb
popa
ret
inc
loopne
cmp
jge
pusha
xchg
loope
add
negb
jg
ret
clc
arpl
add
jo
and
or
mov
test
xorb
sti
test
not
add
fstps
outsb
mov
xor
cmpsl
loopne
push
cmp
mov
ja
push
adc
test
aas
add
lcall
test
add
sbb
ja
lahf
lret
or
and
ljmp
push
adc
andb
das
ljmp
adc
jmp
mov
xchg
sub
add
aam
into
mov
xchg
push
add
xchg
mov
pop
stos
sbb
inc
jbe
fwait
loope
mov
cs
mov
les
inc
out
test
inc
div
scas
push
add
adc
pop
sub
mov
scas
sbb
xor
out
iret
mov
xor
or
cmp
and
or
insl
andl
push
nop
loopne
int3
xor
push
xchg
and
mov
push
pop
cmovb
int
pushf
outsl
sub
clc
add
cmp
dec
je
xchg
push
adc
add
test
scas
clc
sahf
mov
xor
inc
pop
enter
jl
dec
mov
ficoms
sti
pusha
sub
test
xor
and
push
stos
ret
mov
sub
loopne
add
daa
je
insb
ja
add
mov
add
pop
ret
push
cmp
push
ds
add
and
lea
pop
add
icebp
xchg
jns
shrb
out
push
cmpsl
jge
add
test
xchg
add
cmp
mov
jmp
sbb
adc
pop
lock
movb
push
nop
movl
mov
rcr
xchg
ret
inc
add
addr16
push
shrl
push
sbb
cmpl
pusha
dec
add
inc
enter
add
and
jo
inc
aas
add
and
jge
fsts
in
xchg
pop
inc
add
adc
cli
xor
lcall
cmpsl
jg
in
rcr
xchg
sbb
inc
sub
fmull
shl
clc
jmp
push
inc
add
ljmp
mov
inc
out
cmpsb
xor
or
xchg
add
shrl
rolb
rolb
mov
out
add
loopne
out
add
sbb
push
adc
pop
mov
add
sub
xor
xor
add
bound
cmc
add
add
xchg
ret
aas
mov
push
hlt
xchg
xor
cmpsl
pop
out
stos
or
ret
scas
repnz
jae
cmp
sarb
je
jmp
cld
add
mov
rol
and
sbb
xchg
xchg
sub
setb
adc
lea
aam
inc
mov
imul
jo
xlat
dec
aam
sti
subb
std
xor
arpl
push
xor
sub
sub
andb
cmp
shlb
insb
adc
es
shll
push
push
hlt
xchg
les
in
add
add
adc
add
pop
divb
test
lods
hlt
sbb
dec
mov
movsl
addb
add
mov
jne
xor
mov
std
mov
mov
inc
icebp
nop
repnz
insb
mov
sbb
or
add
aam
repz
call
fwait
add
out
fistpll
push
popf
notl
mov
rcll
fmul
push
cld
aaa
jo
jge
lock
stos
out
nop
stos
popf
std
add
outsl
pop
aam
mov
sbb
ljmp
scas
pop
popf
lcall
push
push
cmpl
add
mov
add
lock
js
shrb
clc
inc
add
into
cmc
mov
mov
and
inc
repnz
aam
cmp
jnp
push
rorl
jnp
and
fisubl
pop
stos
add
jl
cmp
mov
ret
cmp
clc
xor
xor
daa
dec
inc
jg
int3
das
push
add
mov
xor
pop
mov
andb
shll
movd
aad
cmpb
mov
push
xchg
std
xchg
jl
jbe
dec
pop
pop
repnz
insb
popa
jne
ret
mov
jo
mov
and
je
mov
add
pusha
push
sbb
add
mov
test
lods
inc
jmp
dec
or
adc
cmp
cmp
xlat
add
cwtl
addr16
pop
popa
fs
ljmp
fdivs
mov
sub
add
add
jl
inc
dec
inc
lods
sbbb
fsubs
loopne
dec
add
test
out
push
and
inc
push
mov
nop
pop
call
add
stos
mov
and
adc
add
lcall
movsb
pop
lods
pop
test
jbe
aaa
imul
ret
mov
add
mov
xchg
sub
std
out
mov
mov
sbb
popf
add
lcall
pop
add
lea
jg
jns
outsl
mov
das
out
lock
inc
and
add
adc
std
xorb
mov
push
and
sbb
call
add
push
inc
and
jmp
dec
adc
push
mov
inc
xchg
insb
ljmp
mov
pop
sub
pop
pop
push
jg
jns
mov
sub
shrl
pop
dec
jne
add
cltd
add
push
mov
and
rorb
add
loopne
sub
movb
inc
sbb
xchg
xchg
add
test
andl
adc
sbb
cmp
aam
pop
jp
add
push
cmc
pop
hlt
ds
test
or
sub
adc
shll
out
cli
add
imull
mov
inc
sbb
sub
jmp
add
inc
push
call
add
push
dec
sbb
xor
hlt
and
jb
xor
push
inc
clc
add
push
add
pop
and
and
cltd
sbb
jo
cmp
mov
outsb
sub
scas
sub
jno
add
sub
mov
adc
clc
inc
and
fisubrl
xchg
sub
add
andl
add
adc
fstpl
jmp
js
and
xor
jmp
pop
inc
push
in
lock
push
add
add
clc
call
add
pusha
decl
push
push
push
push
cld
add
jmp
mov
and
sub
loope
loop
add
sbb
ja
and
add
les
testl
or
xor
pushl
dec
inc
sub
ds
pop
cmp
dec
or
adc
push
adc
pop
pop
shl
mov
push
cmpb
cmc
dec
sbb
add
lds
xchg
dec
push
jmp
mov
rcrb
dec
sbb
xchg
add
lds
outsb
rcrb
fst
das
daa
inc
andb
jmp
xchg
pop
sti
sub
mov
jne
add
aam
addb
cmp
ja
dec
aas
lret
jno
add
shrl
jne
rcrb
out
lcall
jmp
xor
jb
push
cmp
clc
push
cmp
clc
cltd
out
cmp
orb
leave
jne
xchg
push
adc
repz
ljmp
push
add
push
lods
in
mov
repnz
dec
add
push
ds
enter
xchg
fisubs
icebp
and
push
inc
add
gs
nop
push
xchg
ret
popw
scas
sbb
inc
ja
sub
or
add
test
sbb
shlb
pop
inc
lcall
icebp
push
dec
sbb
mov
inc
imul
and
lock
rcr
mov
mov
mov
in
ja
pusha
ret
jmp
pop
in
jns
adc
inc
sbb
push
xlat
inc
jo
dec
and
xor
iret
push
adc
pop
and
ds
test
adc
sbb
xchg
dec
lahf
push
xchg
jo
add
xor
mov
ljmp
sbbl
inc
xchg
xlat
mov
and
dec
pop
cmp
sti
test
mov
adc
cmp
add
or
xchg
loopne
cli
cmp
dec
push
cmc
enter
sub
dec
cmp
inc
nop
pop
or
icebp
pusha
add
adc
test
cmp
roll
lods
add
clc
mov
add
jne
xorb
add
decb
push
hlt
adc
add
add
call
mov
cmova
add
sub
xchg
add
mov
inc
pop
ss
les
add
or
popf
in
jno
ds
dec
add
cs
push
push
push
mov
inc
and
dec
inc
je
xor
mov
push
jle
aam
add
fldl
add
xchg
inc
mov
add
cli
jbe
add
rep
push
add
sub
mov
push
call
cmp
xchg
pop
add
imul
push
iret
in
adc
dec
ja
incl
xor
or
xor
pop
add
xchg
adc
push
xor
cmpsb
xchg
dec
aas
push
dec
add
cmp
xor
add
dec
xchg
or
dec
add
cwtl
and
add
cld
adc
xchg
es
data16
cli
mov
sti
insb
or
nop
jp
add
imull
pop
add
jns
loop
xor
pop
leave
lock
ret
pop
inc
imul
pushf
mov
adc
pop
add
and
push
stos
ds
add
push
incl
xlat
imul
or
inc
push
add
push
sahf
aam
sub
add
dec
jle
or
fidivrl
daa
andb
or
cmp
nop
mov
xor
push
mov
cmpb
lds
mov
addb
test
adc
cltd
mov
adc
dec
sub
lahf
push
fldl
add
outsl
in
sub
cmp
jge
add
add
cmp
add
call
imul
dec
xlat
push
or
cs
cmpsb
push
add
int3
mov
push
add
jnp
mov
aam
test
fstp
out
xor
mov
dec
inc
iret
mov
jl
add
mov
push
ffreep
jmp
es
cmp
mov
add
leave
rorb
outsl
dec
push
rcll
jne
fdivrl
pop
or
rcl
pop
test
pusha
xor
rolb
fsubs
mov
xchg
add
jmp
stos
add
jne
and
cmp
xor
out
and
dec
mov
cmpsl
mulb
inc
jge
xchg
jmp
shlb
test
inc
adc
subl
rcll
call
pushl
pusha
add
test
mov
fsubs
adc
out
or
inc
or
xor
pop
push
je
mov
popa
shlb
aas
sbb
dec
stos
jo
les
sub
je
daa
jl
lret
add
andl
mov
jne
push
adc
sbb
or
xor
lea
push
and
in
add
push
movsl
mov
lock
inc
out
add
pop
stos
or
mov
sbb
xor
add
test
sbb
cltd
out
adcl
push
jb
mov
aad
lahf
add
je
inc
or
add
cmp
add
jbe
sub
and
cmpsb
add
mov
lock
push
add
ja
and
and
sub
dec
outsl
test
dec
imul
add
pop
bound
fsubr
cmpb
je
add
leave
clc
add
in
push
push
adc
adc
pop
cld
stos
repnz
jmp
cmp
ja
or
arpl
push
pop
sbb
add
mov
xchg
ficompl
pop
stos
inc
rolb
in
fsts
das
push
faddl
xchg
arpl
into
jmp
data16
adc
jno
mov
sub
adc
aad
jge
jnp
add
enter
push
push
mov
pop
pop
dec
pop
xor
pop
dec
adc
sub
add
sahf
pop
dec
aad
pop
sub
lock
out
leave
inc
cwtl
xchg
push
int3
add
pop
jl
xchg
test
jnp
jmp
outsl
test
jne
add
jns
hlt
xchg
mov
addr16
add
loopne
test
fst
push
mov
cmpsb
xor
cs
lods
or
jl
jne
int3
les
add
push
jge
inc
jbe
adc
add
lret
or
jge
pop
push
test
dec
rcl
rorb
popa
add
cmpsl
add
shlb
xor
sbb
or
mov
add
cli
add
add
stc
rclb
add
jns
cwtl
incl
mov
and
aad
sub
cmp
incl
mov
pop
mov
adc
add
mov
xorb
fdivrs
inc
pop
cli
pusha
sub
ljmp
test
push
ret
mov
dec
dec
jecxz
inc
repnz
es
add
cmp
add
xor
ljmp
aas
shl
pcmpgtd
mov
push
xor
in
sub
sub
mov
fmull
inc
sahf
dec
add
fistps
inc
or
push
pop
add
sbb
add
pusha
mov
jge
add
jbe
xchg
cltd
pop
into
loop
push
popf
pusha
push
add
and
add
mov
dec
or
xor
in
fwait
aas
jecxz
add
js
btr
push
inc
jmp
cmp
xor
fistps
inc
std
pop
icebp
mov
test
push
mov
inc
cmpsl
mov
cmpb
data16
and
add
iret
bound
roll
mov
lcall
sbb
fsubrs
or
adc
xchg
sub
test
repz
lret
add
ja
lret
and
push
sub
add
xor
inc
or
or
jae
mov
xchg
cmp
dec
xchg
xchg
jne
sub
cmp
mov
sahf
jecxz
fadds
mov
test
cli
cmp
in
dec
add
adc
js
in
push
stos
add
xor
adc
jbe
push
movsb
jnp
out
shll
dec
pusha
add
mov
test
sbbb
push
daa
pop
fdivr
dec
add
loopne
push
cmp
mov
jo
rorb
add
jmp
loope
mov
xchg
addr16
mov
testl
jmp
push
adc
popa
mov
or
mov
loop
jmp
aaa
pop
push
movsl
cld
push
xor
fistpl
push
add
adc
adc
cli
int3
mov
das
fildll
add
sub
scas
fnstsw
cmp
clc
repz
pushf
cld
gs
loopne
mov
sub
lock
ds
jno
pusha
hlt
add
mov
mov
inc
jecxz
loopne
popf
push
sbb
add
shll
repnz
add
pop
cltd
ljmp
fwait
add
add
add
shl
add
cli
adc
pusha
ret
cmp
mov
push
ja
add
push
jle
add
and
xchg
add
leave
pop
lock
cmp
inc
add
jae
push
push
inc
push
call
mov
or
hlt
add
add
mov
xor
stos
sub
cli
jge
pop
testl
push
add
or
orl
out
nop
pop
imul
push
xchg
lock
loopne
cmp
clc
add
push
cmpb
je
push
aas
adc
cwtl
inc
shl
or
jne
cmp
xchg
adc
movsb
add
pop
add
jmp
add
xchg
dec
sub
or
in
xchg
lret
sbb
sbb
arpl
sbb
push
je
xor
punpckhdq
hlt
mull
inc
add
cmp
sub
adc
pop
jecxz
clc
pop
call
iret
inc
push
mov
repnz
repnz
push
push
adc
lods
dec
and
cli
inc
jecxz
dec
in
popa
lret
and
push
push
test
jmp
test
xlat
ljmp
fdivrs
js
jmp
push
std
add
fildll
aas
pop
cmp
mov
fdivrs
ret
into
and
xor
inc
sbb
and
add
dec
push
leave
imul
cmp
in
xchg
xchg
ja
add
mov
clc
sub
and
xchg
sahf
fmull
and
inc
pop
in
adc
cltd
mov
dec
sahf
adc
pop
fbstp
iret
addb
test
sub
das
or
mov
pop
xchg
nop
shrb
dec
out
icebp
cs
pop
xor
notl
repnz
stos
les
mov
enter
nop
push
adc
mov
das
add
out
pop
push
mov
sets
add
popa
push
lahf
packssdw
and
lcall
incl
fs
sub
push
pop
leave
cld
inc
xor
movsb
mov
es
jb
cmpsb
test
sbb
add
mov
push
pop
inc
mov
xor
mov
sbb
loopne
pop
lea
pop
outsb
in
lods
cmc
sub
cmp
mov
sbb
fdivrl
pop
push
jo
add
je
cmp
or
add
add
adc
loop
enter
inc
add
aaa
sti
add
mov
add
and
rolb
pop
out
cmp
call
daa
add
mov
mov
cmp
into
dec
push
data16
adc
sub
and
add
or
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
mov
sbb
add
mov
push
jne
add
pushf
pop
adcl
or
mov
mov
aad
add
cmp
adc
and
enter
aaa
dec
add
popf
out
dec
aad
xchg
js
add
andl
mov
add
gs
sbb
popf
push
cwtl
add
mov
sub
fidivrs
mov
lods
add
data16
sub
add
inc
mov
enter
dec
fnstsw
gs
rolb
decl
ja
addl
das
xchg
and
testb
loop
xor
jp
cmp
jb
or
pcmpeqd
jbe
add
fidivrs
xlat
add
pop
adc
mov
hlt
lcall
add
adc
inc
add
mov
jg
adc
mov
and
add
inc
shlb
add
xor
clc
sub
cmp
cld
pop
aam
push
incb
xor
inc
add
add
mov
or
sbb
sub
pop
divb
add
rorl
clc
das
dec
add
cld
lea
or
and
push
scas
xor
pusha
movsb
rorb
add
pop
sub
frstor
sub
jmp
jmp
pop
add
imul
jge
add
xchg
push
aas
pop
mov
repnz
clc
testb
lret
mov
add
aas
aas
mov
inc
dec
jne
call
ljmp
sbb
out
mov
test
cld
push
inc
jp
and
xor
xchg
dec
and
cmp
push
push
pop
inc
adc
jno
push
leave
pop
or
scas
sub
imul
adc
jl
es
sub
in
add
or
push
jae
clc
lret
das
add
or
cltd
and
stc
roll
mov
xchg
lods
adc
addl
inc
inc
xor
mov
add
addr16
vcvtss2si
dec
adc
aad
xchg
mov
lea
cmp
push
repnz
daa
or
sar
or
rolb
sub
aas
lahf
adc
test
cmp
sub
xor
add
lods
sbb
add
push
mov
loopne
mov
pop
jg
pop
adc
fildll
add
pop
mov
insb
jne
add
xor
in
adc
fwait
and
dec
pop
mov
loopne
aaa
call
xchg
pop
fdivrp
enter
dec
sbb
add
test
add
enter
sbb
js
pop
sub
out
push
pop
sbb
imul
add
or
nop
stos
add
je
dec
cli
out
xchg
in
dec
cmp
sbb
xor
ja
subb
add
loope
ss
les
add
pop
sbb
add
adc
cmp
add
dec
add
sbb
sub
aaa
push
out
pop
das
push
test
test
xchg
call
add
and
adc
lahf
inc
pop
sbb
cmp
inc
hlt
add
add
shrl
add
push
dec
xchg
add
cmpl
mov
stos
jbe
mov
and
mov
scas
push
mulb
mov
push
popf
jae
cmp
mov
mov
xchg
or
inc
add
adc
leave
mov
and
test
xor
pop
mov
insb
jbe
mov
xchg
add
jnp
into
adc
push
pop
int
adc
stos
jg
sub
or
and
mov
or
jl
sbb
cwtl
jo
rolb
js
push
mov
call
add
jg
not
lcall
add
nop
int
mov
sub
adcl
add
ret
mov
inc
inc
or
dec
clc
sbb
sbb
pop
imul
add
inc
insb
fisttpll
ret
out
pop
into
call
rorl
xchg
lock
mov
mov
imul
stos
movsb
mov
inc
jge
add
jae
sub
add
add
and
mov
or
xor
lcall
xlat
push
pusha
lods
ret
sarl
pop
mov
inc
inc
add
push
scas
or
adc
inc
movb
mov
movl
add
arpl
mov
shll
out
cmp
push
add
push
jnp
and
ljmp
jmp
xor
xchg
inc
cmp
lock
inc
lret
and
cld
test
pop
cmp
testl
cmp
sub
mov
jo
js
or
or
mov
push
add
mov
mov
cmpb
xor
stos
call
je
out
lods
les
mov
pushf
int3
pop
pop
cmpsl
push
ja
shl
mov
cld
jmp
push
sub
incb
fildll
bsr
add
add
hlt
push
add
inc
lcall
sbb
nop
enter
mulb
leave
fdivl
xlat
jno
and
ja
add
cmpsl
fsubr
into
inc
decl
andl
mov
jno
xchg
fistps
and
repnz
gs
xchg
cmp
mov
sub
jo
hlt
test
dec
add
push
ror
movsl
xlat
out
popf
movntps
rolb
rcrw
add
push
and
bound
add
and
test
fstl
lea
sbb
imul
add
test
lret
fisttpl
add
adc
adc
icebp
add
out
fmull
sub
cmp
xor
xor
out
add
shlb
aam
sub
pop
bound
cmp
or
xchg
arpl
test
stos
addr16
push
mov
pop
add
sub
cmpsb
popa
aad
or
sahf
mov
add
mov
add
cwtl
clc
js
test
xchg
fsubs
sbb
pusha
jns
add
mov
xor
dec
stos
jg
nop
xchg
mov
add
fucomi
rcl
inc
add
dec
imul
and
xor
ret
add
movsl
push
xchg
inc
jp
or
js
cmovnp
ret
jl
dec
cmp
inc
les
clc
or
cmp
add
add
popf
inc
pusha
mov
mov
rclb
and
mov
loopne
add
add
testl
mov
sti
adc
arpl
int
push
rorb
cli
inc
loopne
add
ja
add
sub
mov
mov
add
in
roll
int3
add
aam
xor
imul
outsl
and
icebp
sbb
frstor
push
push
lock
xchg
xchg
jecxz
loope
outsl
xorb
cmp
pop
leave
pop
stos
loopne
add
jecxz
add
in
fisubrl
pop
or
xchg
xchg
icebp
loopne
adc
add
fsubs
andl
sub
add
add
pop
adcb
xchg
lock
insl
rolb
jnp
push
jae
jbe
add
xchg
cmp
pusha
add
mov
lret
test
adc
mull
dec
adc
xchg
jmp
loop
add
popf
pop
enter
add
in
lret
pcmpgtd
enter
in
dec
scas
cltd
in
push
and
clc
pop
push
push
push
add
test
shlb
out
inc
and
sub
push
jle
add
dec
mov
mov
shl
and
sbb
jge
push
xor
xchg
mov
daa
add
xor
shlb
xlat
mov
xchg
repnz
loop
in
jo
add
push
mov
push
nop
std
and
add
xchg
and
mov
add
insb
add
add
or
notl
in
je
sbb
pop
lret
test
js
les
shlb
add
or
xlat
mov
rep
mov
cwtl
repnz
dec
jb
add
in
rol
dec
xchg
xchg
add
mov
lea
fcoms
jne
cltd
xor
dec
cmp
adc
add
xchg
testb
push
mov
and
xchg
lock
cmp
add
xchg
hlt
mov
push
or
adc
jmp
ljmp
xor
jnp
sbb
mov
pop
and
cmp
cmpsb
and
push
and
fiadds
js
xor
add
leave
je
lock
add
cmpl
add
inc
jmp
add
push
adc
pop
stos
add
mov
cmp
mov
inc
add
rol
sub
rolb
insb
sbb
dec
mov
add
nopl
pop
pop
add
lock
xor
jne
cmp
cmp
arpl
dec
push
mov
jo
add
outsl
jns
cmpsl
push
and
mov
add
ja
fiadds
shrd
jmp
ret
shrb
add
roll
aas
add
mov
imul
pusha
jo
add
mov
pop
add
adc
shlb
add
add
mov
push
sahf
fs
mov
addr16
outsl
pop
pop
in
push
rsqrtps
mov
adc
push
mov
jg
inc
sti
push
addr16
adc
call
lods
enter
lret
inc
scas
fs
jne
stos
dec
popa
js
sub
cltd
push
mov
es
pop
loopne
shrb
xchg
add
negb
sbb
ret
add
inc
cld
in
dec
addb
mov
cmp
divb
out
roll
xchg
insl
fs
sbb
xchg
dec
add
jnp
mov
add
int
out
pop
xchg
clc
or
mov
pop
mov
rcrb
mov
pop
mov
int3
popa
lds
shlb
lods
setg
push
cmpb
mov
fwait
sarb
or
iret
xchg
mov
push
jo,pt
add
je
insl
lahf
or
add
stc
mov
xchg
js
jo
add
popf
daa
movsl
pop
add
repz
add
cmc
xchg
lret
jnp
loopne
add
and
roll
fbstp
in
ficompl
dec
adc
outsl
xchg
add
mov
jle
adc
movb
ss
adc
mov
push
mov
cld
add
mov
jge
fbld
movsl
add
cltd
test
aas
xor
stc
jp
loope
pop
pop
dec
in
add
repz
cmpsb
xor
mov
and
rcrb
xchg
jns
add
or
paddb
sub
repz
jle
mov
aaa
imul
lods
and
inc
add
cmpsl
mov
sbb
loop
xor
popf
ret
xchg
or
sub
cmp
mov
sub
insl
idivl
stos
add
mov
mov
or
movl
jg
add
dec
add
inc
jle
call
cmp
fwait
add
ds
add
push
sub
and
data16
pop
push
inc
rcr
mov
test
or
pushf
mov
inc
adc
cmpsl
cmp
add
mov
cmp
pop
dec
out
enter
pushf
mov
inc
add
iret
jmp
jge
cmpsl
call
shll
inc
cmp
orb
mov
adc
mov
repz
and
adc
lods
addb
sub
into
adc
cmc
sar
cmpsl
push
ret
push
add
les
add
insb
jns
xchg
dec
push
mov
pushl
idivl
fmull
add
cli
movsb
add
sub
jae
adc
les
jo
sbb
aam
rolb
mov
mov
pop
test
push
scas
pop
mov
cmp
test
and
lahf
mov
lcall
mov
push
fiadds
sbb
add
add
cmp
add
mov
clc
push
loopne
add
mov
add
adcb
pushf
xor
add
testb
out
lcall
ja
cmpsl
scas
xorb
xchg
psraw
add
popf
imul
add
jns
mov
cmpsl
ret
add
rorb
bound
mov
leave
fcomps
dec
rol
jnp
push
and
sub
je
add
aas
mov
mov
test
push
cltd
cli
imul
xchg
orb
rolb
orb
sbb
inc
mov
and
add
add
cmpsb
dec
jecxz
adc
xor
subl
push
mov
mov
inc
mov
cmp
lock
out
pop
and
mov
cmp
int3
add
test
xchg
mov
xchg
and
jns
imul
xchg
add
mov
and
mov
ret
adc
sbb
sbb
xchg
add
jo
xor
sbb
fbld
add
je
pop
mov
leave
and
sub
jg
add
fs
push
adc
add
mov
aas
mov
add
adc
negb
add
das
push
mov
add
lcall
pusha
mov
sub
add
inc
test
cs
pop
dec
push
pop
je
xchg
sub
adc
push
adc
inc
out
adc
bound
push
push
je
inc
add
add
sub
add
and
jecxz
xchg
pusha
push
addb
leave
jae
xchg
add
es
or
push
and
movsb
jl
mov
fistl
xor
add
aam
and
testb
fwait
mov
ds
js
mov
xchg
xor
outsl
and
sub
movsl
add
movsb
push
inc
xor
pushf
test
mov
dec
rcll
test
fldt
loop
shrb
jb
add
pop
cmp
scas
in
aaa
mov
add
sbb
add
mov
popf
ds
add
adc
andl
dec
cld
rol
fdivrs
loop
xor
loope
add
adc
ret
xor
xor
pusha
rcl
sbb
add
add
hlt
dec
add
lret
cs
xor
add
ja
sahf
mov
into
incl
roll
stos
xchg
mov
add
test
or
inc
and
push
mov
pop
mov
or
pop
dec
adc
jle
loope
add
pop
cltd
rorl
mov
adc
add
cmp
xor
add
dec
or
and
in
cwtl
nop
test
mov
cmp
adc
push
sub
mov
invd
push
cmp
add
jmp
sbb
call
cli
xchg
dec
enter
mov
cmp
sub
xor
mov
loopne
push
jb
faddl
out
dec
add
add
clc
loopne
add
aam
popf
daa
add
xchg
add
mov
push
jbe
dec
jne
add
test
and
pop
pop
pop
adc
into
mov
rclb
sbb
xor
pop
and
cmp
fistl
enter
add
test
in
mov
movsb
arpl
sbb
lock
call
dec
enter
cmpb
dec
loopne
cmp
jle
mov
dec
add
mov
call
sub
mov
lea
mov
dec
out
add
ret
cmp
or
in
pop
push
hlt
push
or
or
test
push
fmuls
je
jp
sbb
jo
inc
scas
ret
pop
sbb
orps
jo
sub
fs
in
cmp
mov
inc
sub
inc
mov
push
aas
cld
push
xor
add
jmp
or
add
mov
sub
stc
inc
add
fsubl
cmp
out
add
sti
push
sbb
or
ret
and
in
testb
add
int
das
aam
sti
pop
fldt
into
imul
pop
mov
or
lcall
push
js
inc
sub
add
jmp
add
add
pop
inc
push
push
jmp
pushf
adc
pop
add
lret
ret
aaa
dec
sbb
add
mov
jns
mov
clc
push
outsb
add
push
js
lods
or
jo
das
cli
push
add
sbb
xor
or
dec
pop
je
jmp
imul
clc
cmpl
bound
lods
xchg
cmp
or
rcrb
ds
mov
daa
mov
push
mov
add
in
mov
sahf
add
jp
mov
mov
add
das
sub
jae
or
mov
and
fdivs
jp
mov
jnp
push
adc
add
and
ret
cmp
add
int3
mov
ja
add
pop
outsb
jbe
inc
cmp
loopne
mov
cmp
cmp
enter
int
ret
dec
hlt
mov
cli
ljmp
sbb
mov
jmp
ficompl
add
jae
add
inc
pop
add
cmpsl
daa
jo
pop
sub
add
aaa
jge
repnz
push
adc
and
orl
iret
fdivrs
pop
sbb
add
add
insb
loope
add
scas
outsb
subb
in
add
cmpl
pcmpeqw
clc
inc
xor
leave
push
lahf
add
push
movsb
sub
mov
mov
repz
arpl
pusha
jmp
or
add
sar
jge
inc
out
ret
jbe
add
sbb
dec
mov
jmp
loopne
add
cmpsb
mov
imul
dec
add
push
xor
add
hlt
arpl
cmp
mov
sub
std
in
rcrb
fwait
scas
sub
loope
mov
adc
cmp
add
inc
sbb
out
addb
inc
insb
or
mov
loop
add
loopne
gs
inc
loopne
loope
push
cld
scas
push
mov
push
insb
pop
in
and
cwtl
adc
add
jb
mov
stos
add
add
jne
lock
push
inc
jle
inc
xchg
sbb
loopne
mov
fsubrl
xorb
pop
aaa
push
jns
aad
push
mov
dec
sbb
mov
mov
cmpsl
cmp
xchg
dec
sbb
xor
popa
out
xchg
hlt
add
lods
rol
pop
cmp
add
scas
sub
mov
ret
xchg
lret
idiv
add
hlt
test
jbe
fwait
hlt
aam
addl
testb
mov
sub
or
add
pop
and
sarb
inc
pop
lcall
mov
call
es
fadds
in
loope
jno
sub
add
orl
add
pop
or
subb
nop
adc
repnz
jb
into
xchg
sbb
jno
insb
push
dec
add
mov
add
vmread
cmp
push
inc
and
mov
icebp
add
mov
ljmp
pushf
or
fdivl
cmp
daa
xor
cmp
inc
lret
adc
pushf
pop
outsl
lret
movsb
xor
add
add
daa
out
or
mov
add
jecxz
adc
pop
mov
sub
lods
outsl
daa
jmp
int3
cld
jns
jge
add
dec
push
pop
pop
rol
cmovns
nop
shrb
leave
add
add
imul
loop
dec
fs
in
lods
add
mov
inc
pop
orl
enter
jp
push
mov
ret
sub
sub
and
add
mov
scas
add
inc
xor
lret
add
out
ljmp
add
cwtl
test
ja
add
xchg
cmp
dec
and
or
mov
add
or
adc
push
jp
ja
sbb
gs
sbbb
rcll
adc
lods
xchg
adc
std
xor
sub
shld
mov
sbb
add
push
ret
gs
subb
mov
add
sbb
pop
jg
loopne
sub
add
xchg
aaa
dec
push
cmp
mov
aam
add
mov
insb
pop
jg
jecxz
and
lahf
xchg
add
cltd
sbb
inc
push
test
xlat
enter
test
mov
add
push
jo
mov
add
call
mov
xchg
sbbb
push
push
xor
jecxz
mov
add
dec
pusha
adc
lea
jno
add
loope
pop
add
or
or
repnz
sbb
pop
scas
add
cmpb
rolb
cmpsb
add
mov
adc
add
adc
adc
fildl
or
or
adcb
adc
jle
add
push
mov
cmp
dec
add
xor
xor
xchg
jp
sbb
mov
shll
inc
or
rorb
or
pop
add
sbb
mov
xlat
loop
mov
roll
rcrb
jb
daa
adcb
add
shr
sub
outsb
and
ja
arpl
sub
or
adcl
pop
add
mov
jbe
pop
movsl
shl
inc
popaw
cwtl
sbb
inc
adc
mov
shrb
popa
lea
div
stos
lock
daa
cmp
mov
add
add
mov
sub
add
lds
jmp
pop
popa
push
je
sbb
inc
adc
pop
or
add
lea
push
xchg
daa
adc
add
rcr
loopne
andl
add
jle
xchg
add
add
ret
cmp
add
inc
inc
fsubs
jl
add
jne
cmp
pop
pushf
sbb
mov
out
sbb
and
lret
add
sub
fimull
xor
aam
adc
adc
std
sti
int3
scas
aad
lret
and
stos
out
jg
xchg
add
push
push
and
daa
lret
mov
jge
xchg
iret
jmp
rcll
add
rcrb
cwtl
pop
and
dec
and
adc
jbe
dec
mov
and
push
and
mov
test
or
add
xor
lea
and
cmp
jb
jge
add
dec
pop
push
loop
add
xor
mov
pop
mov
je
add
je
add
or
push
mov
ret
mov
not
cmp
stc
sbb
jae
daa
jbe
es
bound
sub
inc
inc
jne
cmp
and
aam
andb
in
add
nop
pop
add
mov
jo
adc
rcl
jmp
loop
sbb
jae
subb
outsl
rclb
adc
cmc
pop
sti
daa
mov
and
inc
xor
test
cmp
add
cs
add
jns
test
outsl
mov
add
xchg
mov
cld
out
pop
call
inc
add
rorl
xor
pop
pop
mov
pop
movsb
inc
mov
mov
or
loop
mov
sbb
jecxz
out
lret
jb
mov
sbb
rcl
call
lds
push
lea
mov
add
pop
add
add
pusha
add
dec
add
cmp
jmp
sbb
xchg
loop
push
mov
inc
or
lods
mov
and
add
sbbb
or
cwtl
add
inc
inc
add
adc
add
push
movsb
rcrb
int
add
pop
dec
cli
or
stos
jns
add
fcompl
daa
sahf
mov
fldcw
orb
pop
add
rclb
jl
dec
sbb
stos
push
sub
stos
cmp
ds
fs
rcll
rolb
adc
in
push
mov
repz
mov
or
nop
or
mov
xor
adc
xlat
bswap
mov
push
mov
in
or
sbbb
and
jnp
pusha
jne
push
pop
movl
jle
dec
addl
push
mov
xor
cmp
dec
mov
dec
sub
sbb
cmp
ss
push
dec
sub
add
push
int3
or
mov
add
mov
dec
pop
jno
nop
orb
lahf
pop
xchg
mov
adc
adc
add
lea
test
out
mov
push
mov
xor
adc
rol
lods
pop
andl
data16
or
sub
push
pop
sbb
aas
test
gs
shl
mov
orb
add
mov
inc
call
fcoml
sbb
push
jne
add
dec
int3
movl
mov
pop
add
add
int3
push
dec
jno
cmp
jo
es
fildl
ret
cmpsl
lds
and
or
xor
cmp
add
mov
data16
shr
lds
out
mov
sub
test
sarb
add
mov
add
xor
jb
xor
add
int3
add
mov
sbb
adc
push
mov
jle
push
jg
ljmp
add
push
shr
xor
mov
in
imul
sbb
xlat
adc
lret
pop
mov
adc
mov
scas
push
pop
insb
xchg
clc
inc
loopne
add
incl
jb
jno
xchg
push
jp
outsl
std
pop
inc
add
push
bound
inc
dec
imul
push
das
mov
add
scas
mov
or
mov
xchg
mov
cmp
jae
jns
xchg
jmp
add
out
mov
int
shll
ret
inc
hlt
shlb
and
negb
clc
jmp
xorl
or
dec
adc
add
fistpl
sbb
fsts
outsb
fadd
int3
pop
add
mov
add
xor
add
sub
lods
xchg
dec
adc
std
mov
pop
push
divb
add
mov
push
xchg
nop
pop
adc
jl
add
cmp
jo
jae
adc
clc
jge
roll
adc
sti
dec
and
pop
add
adc
hlt
loope
add
cld
imul
outsb
inc
add
ret
pop
mov
insb
sbbl
sub
mov
adc
push
jae
call
mov
sbb
loope
scas
jb
test
dec
inc
add
sub
imul
sbb
cmp
and
dec
test
mov
inc
pop
pusha
sub
dec
lock
add
mov
dec
pop
fnsave
xchg
pop
and
pop
push
mov
adc
lods
pop
pusha
dec
pusha
adc
add
xor
mov
cmp
xchg
cmp
or
lock
mov
add
rol
psllw
pop
add
push
in
xchg
xor
fs
push
lock
sarb
inc
fadd
loope
inc
or
lds
addb
inc
push
mov
add
xor
adc
enter
or
sbb
adc
adc
sbb
jnp
pop
or
shl
sbb
jnp
jbe
dec
dec
mov
jnp
jno
pusha
leave
movb
mov
add
nop
adc
loope
sbb
add
out
mov
xor
push
or
push
js
push
cld
imul
shlb
or
adc
aam
sbb
nop
inc
push
jp
xor
jl
add
fnstcw
je
test
mov
add
add
xchg
pushf
adc
pop
movsb
stos
pop
or
lock
inc
sbb
inc
mov
add
mov
fdivs
test
or
cmp
add
sbbb
and
or
scas
mov
out
add
push
repz
xchg
dec
pushf
mov
xorl
add
add
lock
loopne
adcl
js
pop
fsubrs
sub
sbb
push
and
sbb
mov
sbb
dec
js
inc
bound
sbb
cld
xchg
int3
adc
jp
add
push
jae
and
inc
je
jl
clc
ja
enter
cwtl
add
or
dec
out
cltd
sbb
les
jmp
adc
mov
pop
call
cs
inc
sub
aad
jo
lods
add
xor
mov
rorb
inc
adc
mov
sbb
adc
or
out
add
outsb
je
std
add
in
loop
out
cmpl
popa
add
xor
xchg
inc
add
mov
xor
out
sbb
add
cmp
rclb
add
add
or
dec
add
in
or
xchg
or
sarl
xor
enter
ljmp
add
insb
rorb
popa
adc
push
orl
mov
add
shlb
out
add
loopne
call
dec
bound
xor
adc
stc
and
sub
xor
cmp
cli
notb
pop
mulb
inc
push
cmp
std
nop
popa
scas
mov
mov
jg
jg
jg
aas
call
add
add
inc
add
enter
or
mov
pop
and
mov
and
adc
les
push
sub
mov
cli
inc
dec
push
jbe
pushf
jno
imul
lods
cmp
push
mov
push
movsb
xchg
sub
aaa
add
dec
rorb
nop
mov
pop
push
mov
dec
add
adc
arpl
sbb
push
mov
add
jbe
add
popa
imul
mov
shr
repnz
push
add
push
fs
inc
add
imul
lock
nop
les
and
sbb
cmp
pop
push
call
xchg
push
push
clc
pop
daa
fdivr
insb
or
add
mov
push
push
mov
enter
adc
add
xchg
test
notl
or
call
pop
inc
fsubrs
sbb
push
cld
adc
lock
sub
je
adc
jo
add
xor
and
ror
cmp
inc
pop
push
push
add
jecxz
push
cmp
and
push
sub
je
das
ret
loope
lods
jo
or
and
jge
inc
jle
movsb
cld
mov
push
jg
mov
add
incl
xor
dec
iret
push
andl
and
not
add
loopne
add
xchg
clc
xchg
cmp
sub
add
imul
mov
add
inc
or
mov
push
rorb
sub
add
jb
xor
cmp
ljmp
rclb
cmp
loope
add
xor
or
movsb
cmp
sbb
mov
mov
mov
ror
fadds
jo
and
push
add
pop
add
in
jne
cmp
pop
add
sbb
inc
movsb
pop
mov
int
cmc
nop
lock
insb
pop
add
inc
in
push
xor
jo
xor
cmp
scas
and
add
xchg
pop
scas
add
inc
int3
mov
inc
cld
add
addl
loope
xor
push
ret
clc
adc
cmp
jl
jmp
mov
dec
pushf
popa
data16
push
imul
fwait
cld
mov
in
loop
aaa
cmp
out
or
add
pop
or
bound
fadds
es
cmp
test
sbb
mov
dec
in
hlt
mov
add
and
in
dec
push
pop
fsts
pop
loopne
pop
dec
pop
add
cmp
mov
fbld
add
or
add
inc
roll
sbb
jb
enter
cmp
faddl
int3
orb
cmp
sub
add
jne
sahf
sbb
push
addr16
adc
les
cmp
xchg
push
mov
xor
shll
popa
cmp
lret
out
jbe
or
xor
enter
cmp
mov
xor
adc
nop
push
cltd
orb
and
inc
fsubs
mov
add
cmp
pop
sub
nop
mov
rorl
or
pop
mov
addb
adc
int3
xor
fcomps
sbb
call
mov
and
lock
test
rolb
xchg
test
push
sbb
xchg
cwtl
add
xor
add
add
inc
push
ja
into
nop
inc
add
push
rclb
xchg
aam
icebp
push
inc
add
ds
cmpsb
leave
inc
cmp
and
scas
xchg
xor
cmp
add
and
cld
and
das
jg
push
mov
nop
aad
mov
shlb
call
cli
inc
xor
add
push
jbe
test
xchg
ror
inc
xlat
testb
inc
inc
sbb
dec
push
pop
cwtl
dec
stos
fbstp
in
loopne
adc
inc
mov
jns
es
mov
inc
je
orb
scas
pop
or
dec
clc
mov
or
inc
and
pop
cmp
dec
dec
pop
xchg
add
jl
xchg
and
mov
inc
ret
ficoml
out
add
pop
ljmp
or
dec
outsb
xchg
jle
push
mov
mov
out
notb
or
dec
add
or
dec
xor
mov
cltd
nop
xchg
mov
in
hlt
je
pop
dec
or
mov
cs
inc
push
stc
push
div
aas
scas
mov
mov
dec
adcl
fadds
and
mov
lret
loopne
jle
dec
jno
jo
add
dec
sub
sbb
jp,pt
repnz
lret
rorb
xorl
jle
dec
dec
xchg
pop
add
jp
mov
sub
pop
in
dec
add
sub
dec
push
adc
jle
jl
or
dec
je
test
das
adc
add
aam
loop
clc
clc
dec
xor
imul
mov
movups
je
inc
jne
mov
mov
or
fs
sub
push
sbb
inc
jb
jns
arpl
popa
fists
jecxz
outsl
outsb
add
xor
xchg
pop
mov
mov
sbb
add
mov
pop
add
jb
jne
and
in
lea
push
inc
mov
mov
sbb
sbb
push
jmp
or
push
imul
push
outsl
dec
jne
mov
push
xor
or
and
xor
inc
fisubrl
ret
or
jo
jns
push
jnp
movsb
jp
push
call
jb
inc
add
inc
and
gs
inc
push
das
jne
sub
unpcklps
inc
mov
testb
jecxz
push
jae
popl
dec
outsl
hlt
xchg
dec
popa
add
or
sahf
adc
inc
pop
imul
push
movsb
pop
lods
push
dec
test
inc
jb
cmpsb
jb
jno
add
xchg
inc
lcall
ljmp
or
shlb
adc
xor
add
cmpsb
popf
lods
cltd
dec
add
push
andb
outsb
aas
push
inc
cmp
mov
dec
je
sub
xor
add
inc
lds
aaa
add
xorb
rorl
pop
scas
sbb
out
push
lock
jo
xor
cltd
or
inc
sub
inc
dec
adc
mov
push
imul
clc
jo
inc
inc
xchg
jp
movsl
fldcw
add
test
jb
add
into
dec
fs
cmpl
out
out
or
lret
adc
jbe
cmovb
dec
inc
adc
dec
sti
insb
cmp
sbb
imul
addr16
fs
xchg
mov
dec
arpl
mov
add
mov
loope
orl
cmp
mov
les
jne
add
out
xchg
add
add
lods
sub
cmp
push
adc
xchg
adc
pusha
lcall
xor
loop
push
add
mov
sbb
inc
add
jbe
adc
add
rolb
in
loope
ds
adc
adc
mov
and
movsb
jbe
repz
jne
xchg
xchg
sbb
adc
push
or
shrb
mov
imul
out
lret
add
adc
dec
sbb
xchg
enter
movsb
mov
mov
add
lret
outsl
flds
addr16
pop
addb
add
out
cmp
lahf
jno
add
adc
sbb
inc
sub
jne
jmp
lods
mov
add
push
push
outsl
adc
add
dec
jg
sub
push
xor
cwtl
cmp
dec
sahf
push
stos
adcl
dec
add
cmp
fidivrs
inc
sbb
mov
xchg
mov
pusha
sarb
call
jo
add
movsl
adc
popl
cmp
scas
pop
into
clc
inc
pop
in
xor
stc
inc
imul
cmp
adcb
aad
push
dec
cmovno
mov
sub
movsl
cmp
scas
mov
punpckhdq
jns
mov
add
sbb
add
jecxz
xor
out
aas
add
cmp
xchg
addb
cs
cmpsl
mov
mov
int3
xorb
cmp
and
inc
cmp
push
movsb
dec
outsl
mov
jle
pop
into
ja
xchg
inc
dec
inc
lahf
and
insl
sbb
and
aas
push
xchg
add
outsl
ja
mov
inc
sahf
xor
inc
insb
add
imul
or
jo
imul
popw
daa
movsl
mov
mov
mov
test
push
pop
mov
jmp
fdivs
sbb
es
ret
xchg
shl
push
lcall
inc
xchg
or
xchg
and
arpl
and
push
lods
jne
icebp
add
or
movsl
sbb
cmp
mov
xchg
sub
orl
lods
xor
add
adc
movsl
sub
or
sbb
sti
es
inc
jne
cmpsl
jp
add
fisttpll
add
lea
dec
jns
notb
inc
inc
in
adc
inc
mov
sub
xchg
add
cmpsb
pop
push
push
push
mov
jno
stos
pop
mov
jbe
fisttpl
prefetch
hlt
push
test
dec
les
pop
outsb
in
push
out
mov
add
xor
cmp
rclb
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
call
push
and
es
add
mov
pop
pcmpgtb
jnp
sbb
add
sbb
xor
popf
cmp
add
jle
mov
add
xchg
xor
daa
adc
and
cmpb
xchg
out
fwait
je
jbe
js
jp
jl
add
loope
xor
leave
mov
add
xor
das
jbe
js
dec
mov
aas
mov
push
fwait
aaa
mov
xlat
mov
inc
cmp
mov
rolb
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
dec
call
negl
inc
mov
rolb
xor
adc
or
xchg
pop
dec
add
bsr
jecxz
add
xor
lret
xor
in
adc
xchg
add
js
jp
jl
mov
popf
sub
jo
and
pop
and
inc
mov
mov
sahf
aas
xlat
popf
loopne
out
stos
inc
daa
pop
cmp
xorb
cmpsl
xchg
es
inc
xchg
lds
iret
dec
icebp
cmp
pop
ss
leave
push
shrl
fldcw
dec
icebp
adc
pop
fbstp
repz
push
dec
push
push
add
cs
add
mov
xor
ss
pop
cmp
jp
add
popa
jbe
push
js
sbb
cmp
pop
sahf
outsl
push
lea
xchg
test
sbb
inc
daa
dec
inc
push
or
enter
add
xor
jle
add
js
xchg
call
adc
inc
dec
movsb
mov
ret
xor
dec
inc
mov
enter
ljmp
movb
sarb
jp
jl
add
sbb
push
inc
lahf
dec
pop
push
xchg
add
cmp
jno
jns
xorl
jecxz
repz
lock
mov
out
and
loope
sub
push
movb
fldcw
inc
lret
xchg
push
add
orl
iret
shl
fdivr
clc
dec
or
adc
fstps
pusha
jae
icebp
cmp
cmpsl
in
mov
cmp
repz
cmpl
loope
push
jmp
xor
mov
adcb
cmp
mov
sti
pusha
and
in
mov
cli
sbb
push
or
jp
push
dec
xor
jle
inc
outsb
dec
scas
push
out
pop
das
bound
scas
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
mov
dec
mov
mov
inc
pusha
sub
add
pop
cs
rcrb
pop
jmp
js
sbbb
lret
mov
out
cmp
cmp
cmp
add
in
xchg
or
repz
clc
testl
mov
adc
xlat
sti
daa
push
inc
aas
in
xchg
pop
repz
and
jo
push
stos
cmp
dec
nop
mov
dec
mov
mov
iret
ror
fmul
loopne
call
add
xor
leave
adc
rcrl
fldenv
loope
jmp
stc
inc
inc
dec
jae
pop
inc
cmp
push
cmp
cmp
cwtl
aas
mov
cs
rcl
fcomp
loopne
call
test
pop
xor
xchg
pop
dec
cmp
cmove
mov
rolb
push
in
rorl
out
cmpb
sub
cmp
sarb
aam
fdivrs
fsubl
loopne
aas
aas
call
xor
lret
sub
sub
and
cmp
inc
fldl
in
js
add
mov
sbbl
push
aaa
je
mov
push
or
add
mov
ret
cmp
inc
leave
push
sbb
stc
dec
inc
push
and
xchg
jbe
js
pop
mov
lods
mov
sbb
iret
lock
hlt
sbb
push
ss
adc
add
inc
aad
and
jecxz
shlb
gs
inc
jae
mov
out
out
out
out
out
in
bound
adc
adc
add
dec
and
inc
insb
fs
and
jl
repz
repz
cmpb
xchg
sbb
dec
jge
xorb
cmpb
enter
jl
or
dec
or
adc
adc
sbb
cmp
and
cmp
mov
call
js
jl
cmp
cld
cwtl
cld
mov
or
int3
mov
aam
fsubr
fdivrl
jo
and
and
add
int3
cmp
xor
cmp
and
in
push
and
lods
flds
fmul
faddl
daa
xchg
in
call
pusha
hlt
loope
cmp
add
pop
test
aas
inc
dec
pop
cmp
dec
and
mov
xchg
mov
push
cmp
pusha
in
xchg
lock
add
mov
add
inc
sbb
add
decb
push
cmp
subps
pusha
dec
mov
cmpsb
mov
lods
out
out
out
out
loopne
pop
dec
add
inc
mov
enter
jb
je
loopne
loope
push
cmp
testb
sub
sbb
jo
in
mov
lock
xchg
pop
push
pop
mov
mov
xchg
movb
dec
mov
rcr
cmp
inc
pop
in
nop
mov
adc
cmp
shr
push
loop
je
jbe
push
cmpsl
mov
cmp
add
mov
cmp
add
mov
inc
add
sbbl
roll
into
inc
mov
mov
mov
pop
inc
jl
jle
add
cmovbe
popf
popa
dec
movsl
sub
in
lods
inc
mov
lcall
decb
mov
mov
stc
jecxz
dec
fiaddl
xchg
aaa
cmp
add
in
std
call
cmp
cmpsl
js
jp
cmpl
xchg
mov
add
pop
cmp
clc
call
cmp
sar
aad
and
push
out
push
dec
add
jno
cs
jl
jle
push
clc
mov
cmpl
add
cmp
inc
out
add
or
loop
cmpsb
pop
popl
mov
sahf
xchg
scas
inc
mov
or
dec
fptan
jecxz
hlt
mov
jmp
xor
add
iret
jbe
cmpsl
dec
add
sbb
jb
cmp
gs
shll
push
fisttpll
jle
mov
xor
add
sarl
cmp
add
lock
xchg
add
jp
aam
jle
testb
sbb
cmp
add
push
push
lahf
lods
pop
mov
dec
out
adc
and
push
cs
in
inc
xor
xor
das
daa
jns
adc
pop
xor
cmp
pop
and
jbe
int
add
add
pop
xor
adc
pop
cmp
mov
xor
aas
inc
cs
mov
call
xchg
hlt
fwait
es
movsb
xchg
add
std
fldlg2
loop
add
xor
daa
sbb
add
xchg
add
loope
out
jno
pop
pop
inc
or
xor
fadds
ss
psrld
pushf
popf
repz
dec
add
push
clc
dec
outsl
cmp
mov
lds
add
ret
or
adc
mov
inc
rorb
pop
cmpsb
push
cli
or
shrb
call
leave
dec
rcll
pop
loope
add
push
outsb
mov
clc
inc
dec
mov
iret
rorb
aam
fcomps
push
sub
in
pop
dec
or
enter
pop
daa
adc
out
sub
fisubs
push
inc
pop
and
jo
je
sub
cmp
lret
xor
dec
rorb
push
fsubl
leave
call
clc
rorl
test
rolb
cwtl
sbb
sbb
and
sahf
xor
jb
je
cmp
mov
adc
loope
push
insb
fcmove
sahf
mov
xchg
mov
adc
leave
int3
test
out
movsb
add
lock
or
cmp
adc
sbb
aas
sub
xor
lahf
push
lahf
push
xchg
pop
dec
lods
push
push
and
add
jmp
stc
int3
cli
les
xchg
add
push
push
xor
jg
add
repz
verw
cmp
add
sti
mov
in
call
lock
clc
xorl
jo
aas
int3
mov
pop
loope
jmp
testb
pop
push
push
test
lret
sub
popf
dec
cmp
push
dec
pop
mov
fbld
push
cmp
stc
mov
cmp
femms
sub
leave
pop
jecxz
sub
movl
pop
rolb
jns
mul
sub
mov
or
pusha
dec
mov
lret
dec
xlat
mov
rcrl
mov
jno
cmp
ret
dec
in
add
mov
mov
pop
cltd
add
adc
leave
sbb
mov
push
fs
call
or
cmp
push
pop
fsubrp
inc
xchg
sbb
push
dec
add
cmp
mov
dec
add
mov
adc
and
and
stos
fwait
lock
aas
add
jae
push
mov
pop
iret
add
xchg
out
or
mov
dec
pop
fidivrl
enter
push
inc
xor
rorb
sarl
ljmp
add
cmp
loop,pn
add
mov
leave
pop
xchg
add
rcr
xchg
aaa
cmp
push
add
push
lds
insb
jno
lock
je
cwtl
mov
sbb
mov
xchg
cmp
add
cwtl
out
imul
ja
daa
int
xchg
cmp
shrl
push
cmpsb
movsb
push
bound
xor
mov
mov
test
add
and
mov
loop
jb
add
setae
mov
ret
pop
jle
xchg
or
imul
push
xchg
shll
test
mov
cmp
pop
inc
fcom
and
fsubrs
add
xchg
call
jno
mov
and
cmp
aas
sub
cld
and
dec
je
ret
xchg
push
leave
xchg
add
ljmp
enter
shrb
dec
adc
daa
in
inc
mov
cmp
adc
sbb
xlat
add
test
rcrb
in
call
add
cmp
popf
add
push
dec
inc
movsl
cwtl
incl
ret
or
or
add
icebp
push
push
pop
mov
mov
add
adc
pop
dec
add
push
dec
arpl
outsl
ret
mov
inc
addb
subb
mov
xchg
in
mov
add
and
inc
in
xchg
ds
cmpb
pop
inc
or
push
push
out
rcrl
cmc
pushf
and
js
add
mov
ds
dec
lahf
hlt
push
roll
call
push
adc
sahf
sbb
fcomps
and
pop
inc
pop
push
fs
shl
pop
je
rclb
test
push
stos
shl
dec
les
cmp
and
arpl
shlb
and
add
xor
das
cmp
not
daa
nop
adc
push
add
pop
push
add
or
mov
sub
xchg
gs
mov
mov
push
jmp
stc
insb
jge
add
in
dec
inc
add
and
xorl
xchg
add
js
addr16
jle
mov
insb
add
cmp
mov
nop
or
xor
xor
add
in
lret
popa
addb
cmc
add
inc
lahf
add
cmp
aas
cmp
sbb
cmp
xchg
mov
out
test
jle
add
cmp
xchg
adc
sarl
mul
cmp
pop
inc
shrb
aam
push
jo,pt
scas
inc
add
aas
mov
outsb
scas
mov
clc
xor
mov
jle
pop
cli
adc
or
mov
cmp
push
xor
dec
popa
jle
jmp
stc
repz
inc
je
and
xor
and
inc
das
sbb
xchg
push
xlat
mov
aaa
mov
push
in
mov
add
mov
pop
pop
and
or
test
roll
cmp
je
mov
call
cmp
inc
jl
aas
lcall
dec
subb
cs
and
add
and
das
inc
xchg
add
add
dec
enter
add
pop
call
or
jecxz
adc
sub
pushf
add
xor
add
and
add
lret
xlat
inc
add
add
movsb
add
mov
jo
pop
inc
stc
xchg
pusha
jp
cmp
loope
in
mov
adc
sbb
rcrl
leave
push
icebp
xor
xchg
inc
fcompl
les
add
xchg
aas
xchg
shlb
or
mov
ds
push
dec
pop
push
popf
addr16
jl
jmp
or
jg
inc
jecxz
and
pop
xchg
pop
out
aas
repz
sub
xchg
pop
cld
xor
lret
pop
inc
das
aaa
add
mov
cmp
add
xor
inc
or
pop
popa
sarb
mov
into
sbbl
add
or
inc
add
xchg
pop
dec
pusha
mov
mov
stos
roll
xorb
adc
loope
push
leave
hlt
add
mov
jl
add
jbe
vmread
mov
aam
mov
mov
movsl
cmp
mov
shrb
pop
lret
test
cmp
add
or
adc
inc
xchg
bound
sub
add
mov
leave
cld
in
lea
add
sbb
dec
dec
out
cmp
fmuls
pop
cltd
add
pop
gs
add
das
and
test
repnz
add
add
sbb
in
call
cmp
cmp
sbbb
lcall
add
aaa
jl,pt
cmp
or
mov
cmp
addr16
test
mov
add
cmp
loope
incb
jne
call
add
xchg
xchg
cmpsb
sbb
add
std
rolb
movl
xchg
cmp
repz
cmp
pop
daa
add
add
pop
add
xchg
ds
add
jmp
jo
or
add
lahf
call
les
add
loopne
jb
add
or
adc
or
pop
jp
test
xchg
out
push
loope
cmp
dec
jl
sub
loopne
js
cld
jns
xchg
or
add
mov
inc
inc
daa
pop
inc
add
cmp
leave
inc
nop
fstpl
pop
hlt
jl
add
pop
mov
xchg
clc
andl
enter
shrb
add
ss
and
jbe
add
aas
dec
lret
xchg
add
mov
add
insb
mov
out
sbb
xor
xor
lds
les
in
push
jp
add
jbe
jnp
xchg
verr
add
jnp
sub
mov
xchg
rol
pop
call
xorb
arpl
or
and
pop
or
jo
icebp
call
add
pushf
jl
rorb
pop
xchg
cmp
mov
sbb
inc
and
daa
mov
inc
add
xor
jg
mov
push
aaa
int
inc
add
bound
cld
fdivs
fisubl
lods
inc
xchg
sub
adcb
in
in
cmp
cmp
dec
xchg
andl
pop
xchg
xchg
xchg
adc
jecxz
js
xchg
mov
jl
add
andb
movsl
clc
enter
ret
sub
fs
mov
mov
add
cmpsb
ret
add
pop
push
xor
add
mov
pushf
je
mov
add
xchg
xchg
pop
fs
xchg
seto
iret
add
rolb
cmp
inc
in
dec
mov
in
test
test
lods
ror
sub
adc
sarl
push
mov
inc
mov
pushf
test
push
aas
vmovshdup
pop
mov
ret
in
cld
xor
rorb
pushf
incb
sub
xor
jb
add
repnz
xchg
jg
aas
or
adcl
jo
in
mov
sub
lds
push
add
fs
jbe
mov
movsb
loop
mov
sub
dec
or
test
push
cmp
inc
loope
mov
lldt
scas
dec
mov
add
nop
mov
js
pop
jp
jl
dec
push
ret
fcoml
pop
add
xor
andb
and
or
fmul
and
sarl
aas
pminsw
stos
jo
pop
mov
dec
or
jb
int3
add
adc
sub
je
int
hlt
dec
add
test
in
and
nop
movsb
and
out
add
test
xor
rcrl
lcall
mov
dec
add
add
add
adc
push
add
add
mov
add
add
mov
rol
jbe
add
and
out
nop
adc
sbb
dec
pop
pop
xchg
pop
sarb
and
dec
or
nop
andl
pop
fnstenv
xchg
xor
pop
je
jnp
add
xor
hlt
popa
push
xor
xchg
es
test
add
mov
fs
filds
jmp
xchg
adc
insb
add
pop
popf
test
jo
mov
test
ret
dec
testl
add
pop
in
or
paddsb
ss
sub
mov
jb
je
dec
gs
stos
jle
sub
push
sbb
mov
cld
pop
mov
addb
xor
mov
in
xor
outsb
call
test
and
mov
loop
sub
add
popa
cmpsl
loope
jmp
stc
dec
inc
push
std
pop
mov
loopne
push
xchg
cmp
pop
in
rclb
and
pop
sub
cmp
inc
das
inc
in
callw
xchg
xchg
into
pusha
icebp
or
stos
push
cmp
add
cmc
lock
and
mov
add
push
icebp
add
int
sbb
inc
sub
cmpb
loop
mov
sbb
cmp
pop
fiadds
arpl
addr16
imul
add
into
jg
and
lods
jg
jg
add
and
inc
loope
jb
dec
add
fmuls
pop
add
xchg
imul
xor
fdivrs
mov
andb
loop
xchg
roll
sub
jge
push
inc
mov
add
dec
mov
push
mov
loopne
addr16
ja
xorb
xchg
je
add
stos
mov
mov
mov
pop
pop
hlt
loop
mov
add
popa
daa
roll
dec
cmp
sbb
pop
test
jb
adc
mov
mov
adc
pop
inc
repnz
pop
clc
lahf
cld
mov
test
xchg
ficoms
adc
jge
mov
loop
add
pop
cmp
add
inc
aas
insl
dec
popf
loop
jb
add
fs
jmp
jp
pop
shlb
xor
daa
sbb
inc
mov
imul
add
and
pop
adc
add
sub
cmp
fidivs
cmp
pop
mov
xor
nop
add
adc
jle
push
fmull
add
popf
leave
mov
stc
jb
je
cmp
nop
aas
out
repnz
pop
shrl
xchg
inc
popf
sbb
ret
test
and
cli
clc
add
add
cmp
rcrb
pop
push
shlb
lock
les
dec
xor
fiaddl
ret
jb
pop
cwtl
mov
cli
ret
addb
stc
push
repnz
sbb
loopne
pop
outsb
movmskps
or
lods
popa
ror
cs
adc
xor
push
sbb
push
out
add
adc
mov
fstpl
cmp
cmp
jmp
stc
add
xor
lock
or
xor
mov
mov
push
lods
mov
sbb
add
sub
add
cmp
adc
sbb
ljmp
lret
jno
adc
sub
mov
xor
pusha
iret
leave
dec
adc
sbb
dec
mov
add
add
sub
add
lcall
add
ficomps
repz
xchg
adc
ret
nop
mov
clc
adc
inc
mov
pop
push
lahf
mov
ret
fcom
xchg
clc
lock
mov
mov
roll
loopne
xchg
js
jl
cmp
je
jbe
pop
dec
mov
fcmovb
jne
xorb
pop
scas
xchg
cmp
mov
ret
fcmovbe
dec
ud0
repnz
jecxz
nop
pop
mov
push
and
rcl
jbe
ret
lock
add
dec
adc
sub
popf
add
test
cmpsb
cmp
dec
lock
shrb
xlat
mov
xchg
scas
lret
and
in
mov
add
mov
or
mov
dec
shlb
outsb
fdivrl
push
mov
cmp
push
daa
and
add
mov
in
lods
lock
xchg
ret
repnz
cmpsb
adc
xor
pusha
lds
xchg
test
je
and
add
push
xchg
add
aam
hlt
push
stc
clc
jno
andb
mov
add
cli
sbb
xor
add
and
and
dec
ds
cmp
xchg
lahf
xchg
and
jns
adc
call
pop
and
dec
or
mov
int
sub
push
xchg
mov
out
lret
cli
add
push
js
and
pop
mov
mov
jle
pop
pop
jg
inc
lock
pop
cmp
adc
sarl
xlat
pop
repz
sti
js
pop
or
orb
dec
dec
dec
cmp
add
call
add
test
and
adc
pop
inc
cwtl
sahf
add
pop
nop
add
adc
pop
add
lret
test
loopne
pusha
xlat
call
arpl
movsb
incl
addr16
test
mov
xchg
push
mov
sub
in
dec
mov
repnz
pop
ret
sub
filds
and
add
push
and
and
cld
roll
sub
xchg
add
dec
push
bound
jnp
or
cmp
rolb
sub
call
sbb
add
iret
roll
dec
jp
dec
mov
add
sahf
xor
xor
add
in
addb
adcb
xchg
push
cmp
push
mov
sub
adcl
cmp
lock
sbb
and
add
popa
add
cmpsl
add
pop
inc
lods
mov
dec
cmpsb
shlb
add
pop
push
mov
add
jle
add
aam
xor
mov
adc
sbb
sub
jb
dec
inc
ds
aam
iret
dec
enter
push
mov
ret
repz
and
add
pop
sub
decb
push
cmpsl
add
add
and
insb
push
mov
dec
in
xchg
fsubrs
lcall
pop
cmp
mov
in
add
ror
clc
xchg
push
je
add
data16
or
or
mov
xchg
fdivrl
add
rcrl
mov
int3
cs
fsub
dec
inc
hlt
in
rcrb
pop
data16
outsb
inc
jb
addr16
jp
add
add
xchg
jo
je
push
out
jl
lods
roll
sub
ret
inc
push
pop
cwtl
sbb
jle
add
jno
jne
jns
pop
jo
add
imul
ja
jle
and
scas
lock
xchg
inc
adc
hlt
jmp
sub
int3
cmpsb
sub
pop
das
mov
and
mov
add
xchg
dec
mov
add
adc
push
mov
sbb
aam
call
outsl
cmpsl
pop
les
cld
es
push
jg
andb
enter
clc
stc
adc
dec
add
lock
daa
pop
inc
dec
pop
add
js
or
xor
dec
push
add
mov
add
pop
pop
js
push
je
clc
cmp
das
daa
ss
lds
add
sub
add
andb
jnp
mov
cmpb
sbb
push
or
outsb
js
push
nop
mov
orb
aam
push
push
mov
shr
mov
pop
ret
dec
add
shll
add
aas
clc
jb
mov
inc
rorl
and
sbb
ss
xchg
gs
cs
ret
jo
jns
push
xor
in
xchg
lock
hlt
cltd
mov
add
ret
pop
aam
mov
rcrl
repz
pop
and
push
fiadds
roll
ds
leave
ror
sub
cs
fucomi
and
inc
add
and
add
xchg
xchg
add
push
push
cmpsb
add
pushf
scas
cld
mov
data16
mov
mov
aas
into
test
add
pop
loope
psrlw
fnstenv
add
sub
fs
test
insb
sbb
leave
sbb
cs
dec
rcr
clc
idivb
jg
scas
jb
je
jbe
js
mov
lret
sub
push
push
jb
add
xchg
shl
andb
add
pop
mov
add
push
insb
cld
and
jl
mov
ret
xchg
rol
js
jp
es
mov
lods
inc
dec
mov
stc
mov
push
cmpsl
stos
dec
scas
loopne
mov
mov
testl
sar
mov
fistpl
punpcklbw
xlat
mov
daa
add
inc
pop
mov
pusha
mov
ljmp
es
call
push
or
push
or
bound
push
adc
xchg
and
pop
pop
fdivl
dec
mov
xor
cli
push
ret
pop
pop
rolb
mov
add
and
dec
add
andb
cs
push
xor
out
jmp
pop
shl
push
cmp
mov
ds
mov
mov
xchg
adc
push
xor
ss
movsb
je
out
adc
lock
aas
mov
add
mov
das
int3
mov
lret
push
cmp
leave
push
outsb
cmovs
repnz
stos
shr
add
divps
pusha
xor
sbb
mov
daa
add
inc
rcrb
mov
jmp
xor
leave
and
adc
push
ss
and
dec
aaa
mov
mov
add
and
jmp
mov
xor
pusha
loopne
cmp
jb
testb
aas
ficoml
add
inc
add
hlt
je
sbb
fwait
adc
sbb
push
mov
jl
xchg
shlb
ds
pop
push
adc
les
push
pop
jo
sub
and
lods
inc
and
dec
scas
cmovl
iret
jmp
cmp
sub
pop
and
xor
jecxz
cmp
pop
add
push
cmp
pop
pop
popl
pavgb
jecxz
loope
ljmp
orb
stos
push
jnp
cmp
push
add
fcoms
add
cli
icebp
adc
xor
pop
in
push
lock
hlt
ja
pop
inc
xchg
cmp
sahf
pop
stos
in
cld
dec
push
iret
inc
iret
daa
flds
cmp
test
loop
add
pop
xor
movsb
inc
xchg
add
push
push
stc
orl
cmp
add
pop
push
es
xchg
shl
dec
sahf
ds
mov
add
repnz
pop
add
sbb
xchg
lods
dec
js
pop
pminub
fmuls
loopne
sbbl
ret
add
cmp
jb
cmp
popl
lods
xchg
loope
mov
or
jbe
pop
ljmp
gs
mov
push
add
mov
inc
mov
aas
das
xchg
cmp
pushf
movsl
xchg
xchg
lcall
hlt
cs
jl
nop
add
les
xchg
rol
add
stos
cmp
das
fsubs
dec
sub
nop
inc
mov
jmp
jbe
enter
out
lcall
sub
push
push
clc
mov
push
jl
lea
mov
xchg
lret
cmp
xor
jb
add
test
xor
add
repz
enter
jecxz
mov
cmp
jl
jo
add
cmp
dec
nop
movd
in
loope
sbb
add
fs
outsb
mov
sahf
mov
loopne
adc
dec
add
dec
hlt
or
mov
daa
iret
sub
mov
pop
xchg
out
popf
in
mov
js
sub
sbb
add
je
jbe
js
jp
dec
pop
pop
movzbl
lret
jnp
push
mov
ljmp
fdivs
add
jle
push
popa
in
add
jns
sahf
mov
andb
test
imul
xchg
orb
leave
in
lock
cmp
xor
push
add
lahf
nop
cmpsb
or
mov
xor
ds
xlat
iret
loop
add
lock
test
and
jl
sub
cmpsb
xor
ror
repnz
sbb
xchg
out
fwait
pop
add
mov
jle
aam
call
pop
pop
ds
incb
dec
xchg
test
jge
add
stos
xchg
mov
jb
push
repz
jmp
repnz
aas
push
popf
and
sub
nop
add
hlt
xor
sbb
and
ja
hlt
nop
in
add
scas
adc
dec
lcall
inc
pop
dec
xchg
es
add
lcall
adc
cld
dec
mov
xchg
add
repz
or
add
adc
dec
pop
addb
jle
push
push
je
jo
jl
rolb
sahf
mov
leave
add
push
pushf
jle
dec
shl
add
cmp
add
cmp
das
or
fcom
loopne
lahf
sbb
and
lds
test
into
enter
arpl
add
sbb
xor
and
dec
inc
cmp
call
sub
lods
add
cld
test
adc
pop
in
lock
fcompl
call
sub
ja
add
hlt
push
mov
pop
add
es
add
dec
pop
cmp
das
lcall
mov
mov
mov
cwtl
xchg
add
push
aam
mov
dec
add
pop
and
pop
add
dec
jo
mov
mov
js
dec
shlb
adc
in
lret
push
outsb
out
leave
in
rolb
jle
dec
clc
mov
jecxz
cmp
and
sub
sub
test
out
or
inc
imul
xchg
fs
mov
push
loop
mov
out
pushf
add
jle
dec
test
dec
add
rcrb
push
fmuls
sub
adc
clc
aam
cmp
sub
lahf
repnz
push
les
sub
aas
rcrb
push
cmp
cs
ret
pop
test
jmp
nop
pusha
call
jmp
adc
cs
add
mov
nop
add
sub
popf
jno
cmpl
shrl
cs
push
jne
lea
daa
push
call
cli
fadd
sbb
int3
adc
call
sub
test
mov
mov
push
push
push
inc
mov
push
cmp
sbb
je
mov
mov
sbbl
movsb
lds
jbe
inc
ss
push
lea
sbb
pop
add
add
add
pop
or
dec
pop
adc
adc
nop
inc
and
add
sub
add
incl
pusha
or
fildl
cmp
xchg
mov
lea
loopne,pt
xor
and
mov
jb
dec
push
sbb
cltd
inc
sbb
ljmp
popf
cmpb
inc
add
sub
test
add
push
pop
cmp
movb
out
push
add
inc
mov
stos
mov
aas
xor
or
add
je
js
jmp
ret
fisttpll
rorl
jmp
dec
jmp
sub
add
stc
mov
loopne
add
movsb
jnp
add
stc
add
movsl
lea
loope
add
add
mov
inc
fwait
sti
cmp
dec
roll
in
inc
adc
xchg
stos
dec
ja
add
sbb
shlb
ret
call
mov
mov
cmpsb
jle
push
sub
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
dec
shl
or
arpl
ds
jnp
aam
mov
and
add
push
and
push
lods
push
sbb
dec
mov
andl
xor
dec
leave
add
add
cld
jmp
add
push
push
cmp
rolb
das
add
jne
mov
ja
add
sub
xchg
sbb
pop
adc
lods
rcr
push
jbe
mov
xor
daa
xor
xchg
dec
mov
fs
cmp
fcom
addl
adc
dec
xor
ret
testb
xchg
adc
pop
add
push
cmp
jmp
mov
pop
xchg
lahf
popf
scas
dec
add
sbb
aam
addl
lret
add
scas
inc
mov
sub
dec
ss
test
mov
sub
adc
addr16
in
xchg
cmp
or
daa
rclb
pop
cli
add
add
pop
push
xor
add
test
jecxz
adcb
jl
add
or
add
and
sbb
cmpsl
into
inc
ljmp
and
mov
rcll
mov
push
cltd
adc
lods
fcompl
jns
rcrb
add
mov
insb
jl
xchg
jns
add
mov
inc
and
sbb
pop
pop
jno
in
scas
cwtl
push
add
roll
or
inc
pop
add
add
cltd
jb
int
xor
push
or
popf
mov
adc
mov
lret
fs
mov
cmp
es
or
jae
ds
push
jge
add
fdivl
push
and
popa
into
pop
bound
or
jle
addb
add
ja
arpl
daa
sarb
xor
test
pop
cmp
scas
mov
add
cmp
jl
fisttpl
test
xchg
dec
jo
add
push
cmpb
fucomp
add
push
insb
xor
subb
scas
add
or
jae
insl
sbb
enter
fisubs
pop
cmpsb
and
iret
je
popa
sbb
jb
mov
jl
fwait
add
enter
je
xor
rol
xor
add
pop
cmpsl
adc
xchg
shll
jg
pop
push
add
mov
inc
cmp
xor
and
push
test
in
xlat
mov
pop
or
push
sbb
push
add
pop
mov
push
and
push
std
add
stos
mov
add
les
push
mov
inc
push
dec
push
add
or
add
push
notb
mov
pop
adc
rcrb
cltd
aaa
divl
stc
ja
pop
mov
mov
dec
ret
xchg
cmp
sti
sarb
pop
notb
pop
test
mov
push
iret
std
jmp
aas
add
xchg
pop
sbb
stc
lahf
in
jp
inc
js
outsb
call
dec
mov
add
fs
sbb
lds
add
icebp
dec
bound
mov
data16
popf
cmp
repnz
shll
or
cwtl
inc
add
or
cmp
add
sbb
fiaddl
add
pop
outsb
pop
int3
jecxz
add
sub
add
lret
cmp
loopne
pop
enter
js
add
sub
sub
ret
push
lcall
scas
in
or
rorb
out
ret
inc
adc
or
rorb
aas
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
sub
fdivs
ds
sub
mov
push
add
imull
cmc
repz
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
pop
imul
into
sbb
shll
stc
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
cmc
xchg
jb
outsb
xor
dec
dec
clc
inc
inc
aaa
push
and
dec
cmp
gs
jo
or
out
clc
jns
and
push
ret
and
jne
fs
jge
push
cmp
push
cmp
imull
jns
out
insl
lea
cwtl
and
bound
mov
push
fs
mov
mov
mov
rorb
in
mov
flds
inc
cltd
icebp
inc
sti
ljmp
int3
and
outsl
shrl
jb
cli
inc
daa
dec
outsl
mov
iret
push
movsb
mov
add
cmpsb
add
add
add
add
xchg
inc
shrb
pop
in
mov
mov
icebp
or
in
inc
ss
rolb
add
pop
je
ja
mov
xor
push
mov
imul
inc
jno
pop
nop
mov
fwait
pop
dec
sar
mov
xor
fxam
push
push
mov
lret
mov
mov
jmp
lds
xchg
mov
sbb
mov
jbe
out
pop
test
lcall
inc
popa
sti
cwtl
push
jb
das
orb
lods
cmp
insl
shlb
lcall
cmp
mov
lret
push
xor
in
cmp
push
add
ja
mov
or
inc
lcall
xchg
add
push
outsb
lea
nop
aas
cmpsb
iret
negl
or
inc
cmp
xchg
jbe
mov
jp
in
push
je
add
clc
sbb
outsb
dec
adc
xchg
lods
cmc
in
loope
inc
jp
imul
or
or
jge
push
xlat
aas
or
lcall
movsb
cli
popf
test
mov
ja
push
dec
mov
imul
xchg
gs
daa
and
and
xor
shlb
jecxz
pop
nop
and
shlb
mov
test
test
cmp
inc
jns
fwait
mov
pop
mov
dec
repz
popf
sbb
std
push
pop
dec
mov
fcoms
and
pop
js
adc
inc
xchg
dec
jnp
xor
fbstp
subb
std
and
jle
imul
je
pop
insb
adc
dec
insl
mov
stos
mov
les
cs
mov
scas
xchg
pop
movsl
sub
out
xchg
aaa
test
fstl
jg
xor
je
add
push
mov
or
fdivl
xlat
pop
hlt
sub
jo
arpl
xor
jecxz
cmp
data16
ret
cli
xor
xor
push
mov
add
adc
orl
xchg
mov
mov
lods
pop
pop
dec
dec
mov
ficompl
cmp
into
pop
aad
or
notb
push
and
pusha
aad
aam
ljmp
or
jle
loopne
push
in
sbb
cmp
nop
or
fs
dec
xchg
dec
lret
leave
in
loope
push
leave
test
cmpb
and
iret
mov
call
imul
sbb
add
jg
fistps
or
fdivrl
imul
leave
ret
mov
jbe
push
inc
cmpsb
clc
mov
test
push
jae
cwtl
or
add
test
mov
pop
jnp
adc
cmp
leave
mov
int3
jo
sahf
xor
insb
clc
out
or
push
push
fists
mov
popf
sub
sbb
iret
std
filds
pop
push
xchg
nop
mov
push
scas
icebp
hlt
sbb
cltd
inc
mov
xchg
cmp
inc
cltd
into
dec
test
gs
call
mov
dec
scas
push
sahf
jecxz
aas
xchg
jno
repz
sub
pop
les
int
adc
xchg
insb
cmpsl
mov
and
dec
pop
movsb
jnp
pusha
lods
cmp
lcall
insl
or
les
and
adc
stc
aam
js
sbb
out
sub
into
or
jge
xchg
repnz
arpl
cmp
clc
cmc
lcall
imul
enter
and
xchg
mov
inc
push
push
mov
mov
loope
test
inc
mov
inc
xchg
insb
frstor
or
xchg
push
add
ja
into
or
pushf
mov
loop
inc
mov
xchg
xchg
fstps
in
mov
cltd
fmuls
jmp
sub
ljmp
xchg
jg
or
push
stc
dec
pop
lods
mov
pop
stos
ds
aad
add
xchg
insl
inc
dec
lods
aam
jge
mov
ss
cmp
sub
xchg
andl
pop
lret
lret
xchg
and
push
clc
fisubl
loopne
and
fldenv
inc
cmpb
add
leave
out
cmp
vmread
mov
les
ja
enter
popf
sbb
adc
xor
jo
mov
and
fsubrl
pusha
jp
lods
jb
dec
shll
rcrb
aas
int3
test
mov
das
or
iret
fwait
or
jb
cmp
ret
std
sub
popf
mov
cmp
ret
xchg
cmp
insb
mov
or
iret
cmp
adc
push
or
mov
fsubrl
push
sbb
mov
js
xorb
and
negb
fistpl
xchg
fistpl
dec
sar
or
lcall
pop
pop
scas
jge
xor
sbb
sub
das
push
xchg
add
pop
cmp
out
enter
ja
test
leave
xor
inc
movsl
sbb
popa
or
jl
call
mov
aam
inc
xchg
lock
push
dec
dec
lods
pop
push
mov
ja
pop
mov
jle
push
rcll
cmp
ja
fisttps
inc
jnp
sbb
andl
hlt
fidivrs
sub
xchg
cwtl
mov
test
fwait
std
movsb
pusha
popa
outsb
adc
or
in
xor
jle
sbb
fdivrl
aaa
push
fwait
pop
fsubrp
pop
dec
call
jle
mov
sub
jns
xor
inc
xchg
shr
sub
cli
fadd
add
cmp
sbb
arpl
shlb
test
popf
mov
clc
sahf
jp
pop
dec
mov
pop
push
test
popa
cmpsb
notw
mov
test
aam
pop
nop
jecxz
push
and
aam
lcall
fadds
pop
and
or
out
sbb
push
sub
fcoms
loope
adc
std
test
xor
jmp
mov
repnz
or
imul
call
ss
bnd
sti
leave
xlat
test
jmp
clc
cmp
adc
fsubrs
je
sub
fldcw
add
pop
mov
repnz
mov
rcr
dec
jl
push
cli
int
stc
nop
mov
arpl
push
xchg
pop
mov
out
mov
mov
adc
pushf
cmp
mov
loope
sub
orl
pop
out
mov
daa
push
cs
sbb
cltd
pop
xchg
fmull
cmpsl
xchg
jecxz
sbb
cs
fidivs
ss
out
mov
into
inc
hlt
or
movb
gs
test
sbb
or
fwait
insl
rorl
sub
fcomps
sub
pop
pop
jge
das
scas
imul
fisttpl
xchg
jo
in
or
call
lea
jg
lods
ret
andb
iret
jp
sbbl
gs
loopne
aas
or
add
fsubl
sub
or
push
movsl
sub
xchg
cmp
cmp
sub
jecxz
xor
xchg
sbb
mov
imul
and
jbe
lcall
pop
push
or
add
das
push
ficoml
ss
push
and
fldenv
imull
xor
call
ja
push
pop
mov
xchg
iret
cmp
or
mov
sub
out
shlb
adc
cli
cli
out
pop
mov
icebp
dec
cmp
xor
aaa
pusha
gs
jno
inc
daa
sbb
enter
iret
ret
lret
pushf
cmp
unpckhps
jle
js
or
inc
cmpsl
fnstenv
ret
xchg
adc
mov
subb
inc
jg
fs
cwtl
lahf
loop
leave
cmp
fimull
sbb
adc
divl
dec
or
pop
mov
shll
jge
roll
pop
inc
cmpsb
inc
bound
js
cmp
dec
mov
sub
pushf
outsl
out
movsl
dec
mov
leave
or
sub
push
add
sbb
inc
and
mov
addl
add
js
sbb
adc
jo
sub
and
xor
shr
push
loopne
rolb
int
orb
jl
gs
xchg
movsl
repz
mov
or
mov
and
mov
or
subl
sbb
xor
add
xorl
push
ja
or
psraw
jno
adc
adcl
mov
pop
arpl
test
sbb
cmp
fdivl
and
jp
jbe
xchg
jle
jecxz
sub
sbb
imul
inc
inc
mov
dec
inc
stc
or
aam
ret
out
dec
fwait
jmp
or
aas
icebp
mov
jmp
mov
xchg
mull
or
cltd
movsb
mov
jl
mov
rolb
andl
jae
aaa
jge
fwait
cmp
ljmp
pop
jbe
pop
mov
dec
add
push
outsb
std
icebp
test
add
push
xchg
lods
or
shll
fisubl
pop
ja
out
repz
stos
inc
xchg
push
mov
xlat
stos
mov
je
cmp
stc
push
pushf
add
mov
or
call
scas
clc
and
jno
mov
or
mov
mov
jae
in
lcall
rcrb
push
sub
fsubp
push
test
mov
shll
xor
jnp
xchg
push
xor
jns
jno
popa
addl
int
pop
movsb
mov
push
ret
or
addb
sarl
fnstsw
insb
jmp
dec
xor
mov
dec
mov
add
lret
push
repz
repnz
xchg
sub
xor
pop
insl
push
cmp
xchg
pop
cmp
hlt
andl
or
jbe
sub
push
lcall
push
lahf
fdiv
mov
fistpl
xor
pop
enter
stos
lret
xor
inc
rolb
adc
xchg
pop
lods
imul
inc
xchg
xchg
inc
push
mov
stc
mov
cmpsl
push
lds
jecxz
adc
inc
or
xor
cld
pusha
add
int
fcmovne
fsubs
sub
imul
outsl
pop
ss
out
sbb
scas
bound
adc
push
adc
hlt
jae,pt
lret
aaa
mov
jmp
iret
test
jg
adc
xchg
jp
gs
lods
popa
xor
lret
fldt
xor
xchg
sbb
std
dec
and
jg
add
out
cmp
or
jmp
inc
dec
nop
mov
jnp
mov
out
sbb
loope
push
xchg
in
test
popa
inc
loop
push
xor
jb
ret
mov
jno
jle
clc
push
sbb
cmp
mov
popf
mov
lcall
dec
cmpsl
sahf
inc
cltd
fistl
add
rorl
add
mov
mov
add
push
nop
mov
push
icebp
fbstp
insb
lods
inc
cmp
scas
push
inc
mov
jno
sbbl
and
mov
jl
sar
push
mov
pop
sar
ja
mov
imul
lds
jge
mov
push
or
insl
cmpsl
jb
lahf
int3
pop
je
push
scas
mov
mov
loope
imul
fsubrs
add
pop
cmp
or
fwait
xchg
fucom
mov
adc
pop
arpl
and
int
pop
xor
pusha
push
sbb
cmp
dec
pop
xchg
adc
dec
outsl
jo
dec
jb
mov
jnp
mov
dec
inc
cmp
test
jbe
ljmp
jl
push
mov
rcr
mov
lock
and
test
cmc
mov
xlat
test
les
pop
mov
inc
pop
fcomps
add
cmp
xchg
inc
cmp
adc
sub
add
in
push
sbb
adc
push
or
shrl
popf
push
je
popf
faddl
scas
mov
jbe
push
aam
ljmp
dec
fcmovb
int
and
dec
aaa
gs
daa
sbb
mov
repnz
mov
push
sbb
mov
mov
xchg
les
xchg
mov
jnp
popa
and
push
bound
scas
aas
insb
cmp
inc
push
xchg
xor
orb
sub
and
mov
cmp
cmp
arpl
push
jecxz
push
sub
fstpl
or
jnp
push
pushf
jne
sub
popf
ljmp
adc
shl
shlb
fwait
adc
jp
cmpsl
daa
dec
cmpsl
cmpsl
jae
sub
std
and
lret
inc
aad
shr
or
fisubl
lods
daa
sub
dec
test
xchg
repz
dec
add
lds
sbb
and
fisttpl
pand
sub
ret
pop
in
scas
dec
xor
fcoms
jle
cli
hlt
jge
inc
sti
je
movl
test
dec
aam
daa
loop
jmp
insl
mov
pushf
loopne
cmpsb
push
sbb
cmp
xchg
xchg
dec
shl
dec
and
out
aad
test
in
pop
stos
rclb
in
bound
jb
dec
xchg
xor
mov
add
or
je
xchg
ja
jmp
mov
in
sbb
dec
inc
cwtl
lods
divb
jne
mov
hlt
je
xor
inc
mov
jp
sub
add
mov
jo
loopne
mov
mov
idivl
jle
or
push
mov
imull
jmp
loopne
int
mov
iret
mov
movsb
mov
in
cmc
lock
jne
mov
ds
nop
mov
mov
add
xchg
in
mov
pop
mov
pop
cmpsb
notl
les
mov
shrl
jl
icebp
lret
daa
xor
mov
les
sahf
mov
dec
ds
pcmpgtd
push
xor
mov
cmp
xlat
and
push
lods
xchg
mov
shlb
ret
push
mov
inc
push
sub
mov
ret
jno
adc
or
sti
inc
mov
in
fsubrl
aaa
shll
add
add
fisttpl
or
fnstsw
inc
mov
xchg
pop
jecxz
pop
adc
daa
xchg
into
sub
lock
ret
cmp
bnd
push
adc
cwtl
sub
out
xor
fsubrl
xchg
push
adc
fnsave
addb
std
mov
int
mov
int
pop
add
aam
dec
mov
push
adc
xor
mov
shrb
jl
push
inc
push
testb
push
push
dec
mov
sbb
mov
fistpll
xor
repz
mov
pop
pop
sbb
test
into
scas
dec
xor
inc
push
push
inc
loopne
cli
xchg
popf
and
cmc
lea
adc
cmp
cmp
inc
pop
mov
jbe
repnz
repz
mov
sub
mov
adc
in
inc
push
xor
psubw
inc
aad
mov
xchg
fistps
pop
sarb
stos
xor
xchg
pop
xchg
ficomps
or
pop
das
adc
mov
cmpl
sbb
and
pop
pop
or
call
loopne
mov
loope
xor
mov
and
pop
movhps
inc
les
xor
pop
mov
dec
add
cs
fwait
iret
mov
pop
scas
aas
je
xor
out
xor
aas
popf
pop
int
xchg
negb
pop
aam
inc
nop
lock
dec
push
pusha
aaa
bswap
pop
out
hlt
cmp
sti
push
out
cs
dec
das
push
or
push
jg
int
sti
or
mov
add
cmpsb
pop
sti
push
jno
inc
sti
pop
mov
les
sbb
filds
dec
inc
icebp
test
jecxz
xchg
inc
addr16
ficompl
into
or
imul
cli
pop
scas
dec
popa
bound
dec
push
inc
fcompl
or
pop
ret
push
scas
arpl
xchg
add
stos
adc
mov
leave
jmp
aam
push
jp
mov
call
aaa
add
mul
or
loopne
bound
lahf
aad
es
mov
les
test
adc
and
aam
pop
xchg
lock
adcl
das
fwait
push
mov
test
xor
aaa
push
add
dec
sub
push
jl
push
sub
fsubrl
sbb
cwtl
in
mov
mov
inc
sahf
pop
push
cltd
and
ljmp
mov
add
mov
ds
jge
fs
adc
push
je
or
mov
dec
xor
stos
imul
dec
rep
inc
mov
fisubs
lahf
fs
iret
ret
aas
das
add
and
enter
jns
mov
ret
mov
jns
xchg
add
inc
rclb
xchg
sbb
int
jge
jge
and
stos
fwait
push
push
push
mov
lcall
and
mov
repz
fldpi
mov
pop
std
stos
int3
or
adc
test
aam
or
push
test
inc
cmp
push
fsts
pop
sets
inc
leave
int3
xor
push
push
xchg
insb
add
xchg
sub
pop
loop
push
in
ret
mov
jae
subb
rorl
or
and
jmp
aad
adc
mov
incb
cmp
inc
push
pop
sub
loope
jg
dec
js,pn
mull
add
insb
lcall
cmc
push
cmp
lret
std
cmp
mov
push
loop
inc
addr16
decl
outsb
lock
fisubs
mov
cld
sub
ja
hlt
je
push
mov
and
clc
and
sub
pop
and
sbb
hlt
mov
or
lods
arpl
dec
ficoml
insb
mov
mov
std
mov
push
lock
add
mov
ss
arpl
mov
dec
cwtl
inc
add
std
aaa
fsubrp
add
or
ljmp
mov
inc
jecxz
repnz
mov
aam
nop
and
mov
or
iret
xor
lds
push
sub
adc
lods
in
lret
dec
and
sbb
imul
pop
lcall
jecxz
test
xchg
xlat
pop
mov
mov
cmp
fcomps
aas
sub
stos
add
and
fsubl
jno
cmp
lret
or
cmpsb
cld
jg
adc
out
dec
sub
push
mov
sbb
imul
mov
xchg
push
cmp
mov
in
dec
cwtl
push
loop
lock
xorl
icebp
mov
pop
adc
push
lahf
add
roll
push
adc
sbb
dec
cmp
cmp
ljmp
fildll
mov
fldenv
cmp
clc
dec
cmp
loopne
pop
mov
std
add
jmp
mov
mov
insl
jge
nop
ret
pop
pop
insl
out
adc
jbe
pop
and
js
jmp
leave
bound
out
add
scas
sub
inc
dec
shlb
pusha
lods
fimull
push
cmc
mov
ss
mov
cwtl
inc
and
cmp
in
adc
gs
cli
loopne
adc
ficomps
jecxz
jne
xchg
out
pop
pop
jae
mov
js
repz
xchg
jbe
jle
inc
sbb
add
xchg
mov
mov
pop
loope
pusha
std
lcall
push
or
loopne
and
cltd
fwait
cwtl
and
in
xchg
mov
xor
ret
mov
or
leave
popf
lods
fbstp
orb
jns
push
ret
jb
xchg
stos
sbb
fwait
xchg
jb
and
inc
insb
aas
pop
cli
fildl
pop
jge
mov
out
ja
gs
addr16
push
out
int3
mov
orl
xchg
inc
icebp
cmp
xchg
fistpll
clc
aas
pop
dec
adcl
dec
cmc
xchg
jge
repz
sar
scas
insl
push
xor
xor
incb
inc
insb
xchg
xchg
pop
sahf
push
xchg
mov
and
add
mov
mov
outsb
pop
mov
mov
subb
pop
fisttpll
dec
insb
and
dec
loope
sbb
dec
int3
insl
nop
lret
je
mov
roll
vcvtdq2ps
pop
lods
aaa
ds
movsl
add
aad
adc
popa
ds
ja
loope
je
lret
dec
mov
cmp
or
pop
jne
xchg
sub
jl
pop
mov
sbb
mov
push
sbb
aam
loope
inc
sahf
push
lods
lcall
adc
movsl
pop
sub
sbb
xor
or
cmpsb
inc
mov
jg
dec
out
pushl
sub
add
mov
xor
pusha
scas
bound
subl
cli
adc
xor
adc
jecxz
cmp
stos
mov
xlat
xchg
sub
idivb
mov
pusha
pop
adc
daa
add
inc
add
test
or
andb
xor
cmpsl
mov
push
push
out
sbb
sub
in
pop
out
arpl
mov
pop
mov
test
sarb
adc
mov
les
pop
ret
push
push
sbb
inc
js
mov
or
aas
ljmp
dec
addr16
mov
add
sarb
sbb
xor
mov
mov
dec
notb
pop
stos
popa
js
xlat
mov
mov
cmp
xchg
sarb
jno
push
ret
cmp
cli
lods
loope
hlt
pusha
repz
or
pop
pop
pop
and
push
movsb
mov
aas
mov
sub
outsl
adc
xchg
iret
out
pop
lret
pop
fs
ror
xchg
test
clc
in
daa
lret
loope
push
and
mov
and
or
push
fistpll
clc
push
mov
pop
mov
pop
and
lods
adc
fimuls
test
nop
je
in
aas
rcrl
push
mov
popf
or
or
dec
je
out
push
jne
inc
fdivrs
imul
fcmovbe
sahf
pusha
sarl
std
movsb
jno
leave
out
push
and
fsubrl
int
jl
dec
adc
test
dec
repz
cmp
sbbb
xchg
ret
jp
add
rcrb
inc
insl
scas
out
les
popa
and
mov
sti
test
fs
cs
fwait
push
jae
je
icebp
rcrb
mov
mov
mov
outsb
xchg
push
stc
inc
cmp
data16
testl
test
stos
xlat
loope
into
int
xor
inc
cwtl
pop
out
or
dec
fwait
mov
stos
jle
add
cmp
mov
sbb
rcrl
pop
xchg
sarb
push
das
popf
call
orl
dec
in
mov
js
xlat
jmp
es
pop
neg
xlat
aad
add
out
jb
cwtl
dec
fwait
mov
inc
cmp
sub
push
mov
aas
dec
fst
sub
inc
lret
sbb
push
cmp
fsin
pop
call
incl
clc
popf
inc
icebp
jne
xchg
scas
push
jbe
enter
adc
fbld
in
sbb
mov
xchg
adc
cmc
cmp
cltd
dec
mov
mov
cmp
or
jo
cmp
lock
lock
jnp
inc
cmp
add
add
ljmp
hlt
sahf
inc
jge
stc
cli
lret
arpl
mov
dec
stos
inc
mov
test
push
add
adc
outsl
pop
pusha
les
push
shlb
pop
or
sbb
mov
mov
pusha
push
cltd
cmp
inc
lods
cltd
aaa
aam
xchg
in
pop
jp
mov
inc
dec
neg
xchg
fwait
in
mov
fcmove
dec
call
mov
xor
outsb
sti
dec
aam
stos
or
out
repz
imul
add
stos
cmc
daa
leave
icebp
sub
pop
ret
fldl
das
dec
inc
ss
mov
mov
xchg
sbb
push
xchg
mov
outsl
mov
int3
cmp
or
pop
jl
stc
cmpl
mov
adc
scas
adc
sub
mov
icebp
push
or
sahf
inc
xor
lret
aad
les
es
out
add
inc
sub
mov
cmp
push
mov
sub
or
cmpsl
insl
sub
cmp
mov
push
das
popf
cmpsl
xchg
xchg
ds
jecxz
mov
cmpsl
cmc
movsl
adc
cmp
lcall
mov
popa
xchg
adc
xor
repz
push
dec
test
inc
cld
jge
insl
mov
cmpsl
test
adc
dec
mov
add
jg
cmp
mov
adc
lret
fstps
mov
in
jl
loope
xchg
mov
lock
rorb
sahf
or
fistl
shr
sub
sahf
add
lahf
out
lret
and
mov
push
lock
jle
fsubr
jp
stc
shll
push
pminub
rcll
jno
cmpsb
or
fdivr
inc
dec
rcll
fwait
imul
xor
push
adc
jns
push
shl
mov
cs
xor
mov
lock
dec
xor
loope
orl
sub
cli
adc
jae
notl
push
sub
imul
xchg
popa
or
jb
in
sti
jmp
jnp
mov
movsb
loopne
imul
xor
enter
add
jo
cmp
jbe
bound
ss
movl
aas
popa
roll
dec
sbb
or
jbe
std
mov
fnsave
es
test
daa
cmp
iret
xor
ja
or
sti
adc
rorl
pop
inc
xor
xor
in
jecxz
mov
daa
out
sub
cwtl
cmpsb
ret
pop
sub
and
xchg
pusha
jnp
inc
push
clc
jae
testb
sbb
mov
rol
sbb
fwait
fs
pop
stos
sti
movsl
sub
sbb
outsl
sub
add
imul
lods
add
shrb
and
jp
rolb
sbb
loope
xor
fbstp
and
mov
in
fcompl
dec
cmp
fdivrs
cs
andb
ret
xchg
aaa
pop
in
std
xor
sbbl
jle
aaa
sbb
pop
pop
hlt
in
insl
aas
ds
mov
push
iret
pop
push
cwtl
ljmp
fistl
push
xor
and
mov
adc
arpl
popa
addb
mov
xchg
dec
out
add
inc
js
jg
pop
pop
mov
test
dec
dec
jmp
pop
xchg
inc
cltd
xor
insb
mov
xchg
outsb
test
pop
pop
aas
xor
test
aad
mov
mov
nop
in
daa
mov
jbe
out
sahf
or
pop
adc
push
sbb
mov
or
cmp
mov
out
sub
or
xchg
jge
xchg
in
mov
pop
loopne
or
mov
dec
call
sbb
pop
dec
lods
or
out
fnsetpm(287
lret
lock
adc
mov
xchg
and
push
rorb
test
cld
aaa
sbb
in
sbb
xchg
aam
loopne
push
or
pop
dec
sbb
jl
jle
push
fisubs
lods
sahf
jnp
mov
loope
inc
aaa
inc
shlb
cmp
sbb
or
das
mov
fmull
or
ja
repnz
xchg
pop
popa
ret
pop
adc
scas
divb
out
gs
ja
orl
cmp
call
inc
cld
loop
repz
mov
ror
xchg
in
mov
add
std
fwait
dec
lods
adc
adc
jb
adc
pop
fiadds
cld
sub
sbb
lret
mov
jmp
int
aam
nop
rorl
pop
pop
rolb
rcll
jbe
ret
push
jo
mov
sub
sbbl
es
mov
xlat
clc
add
shl
push
push
mov
push
mov
fs
cwtl
iret
fs
xor
test
sub
adc
push
add
and
mov
push
jbe
fisttpll
and
lds
sub
loopne
test
pop
or
stc
test
mov
inc
push
clc
push
scas
imul
dec
fwait
bound
mov
jae
xchg
xchg
stos
fisubs
jnp
aad
cmpsb
cld
dec
or
call
psubusb
jo
cwtl
dec
inc
test
ss
ret
aad
pusha
mov
add
pop
test
sbb
andl
mov
mov
ret
adc
imul
ds
push
mov
mov
inc
inc
push
movsb
arpl
insb
imul
push
mov
mov
lock
add
xchg
xchg
cmc
in
jl
enter
mov
loop
int3
ret
movsl
lods
jns
test
sub
scas
dec
cmp
cmp
gs
pop
or
jmp
stc
outsl
test
sbb
subl
inc
popa
mov
sti
arpl
ljmp
or
and
pop
mov
mov
outsl
dec
dec
xor
arpl
push
sbb
fwait
jo
dec
push
lahf
cmc
adc
scas
ficoms
dec
jp
sti
sar
fadd
std
mov
xor
and
inc
enter
and
andl
mov
or
sti
push
jae
sub
clc
mov
mov
lret
enter
sub
in
jl
cmp
push
insb
into
jl
pop
into
scas
jl
add
lock
and
iret
adc
movsb
cmp
loope
lea
cltd
lcall
push
sub
mov
jg
pop
lods
mov
insb
xor
mov
mov
aaa
dec
push
push
andb
mov
jmp
adc
in
out
sbb
xchg
adc
outsl
shrl
mov
pop
inc
dec
stos
dec
push
jns
pop
sub
or
test
mov
in
jnp
mov
adc
mov
int
xchg
popa
loopne
adc
or
fmull
cmpsl
incb
adc
cltd
cmp
inc
pop
into
cmp
lods
in
sbb
push
pop
xchg
cs
enter
repz
mov
jp
jo
pshufw
mov
mov
test
test
jb
and
fidivrl
cmp
sahf
dec
cmpsb
insl
fsubr
jl
cli
push
jnp
xchg
xchg
mov
gs
mov
es
push
mov
ljmp
mov
movsb
fs
xor
push
push
cmpsb
cmp
mov
pop
insb
add
jno
scas
rorb
jl
test
fdivs
xor
jmp
xor
cmp
lods
and
xor
aaa
or
mov
das
pop
adc
xchg
imul
adc
and
jne
and
call
push
mov
push
mov
movsb
shrl
sub
cltd
test
movsb
mov
mov
dec
mov
cmp
xor
push
mov
jmp
filds
cli
std
jns
sbb
out
dec
mov
cltd
mov
push
outsb
lds
adc
dec
fstpt
movsl
ljmp
cmpsb
xor
aaa
sub
subl
hlt
jns
or
cld
cmpsl
adc
mov
scas
push
insl
add
hlt
xchg
sti
push
pop
dec
pop
fists
daa
mov
mov
add
cmp
rcl
int3
pop
mov
enter
shrb
movsb
pop
dec
test
je
dec
xchg
insl
outsb
loopne
mov
mov
lret
scas
std
test
push
adc
fstpl
mov
movsl
push
push
sarb
fdiv
out
cli
repnz
pop
sahf
mov
cltd
mov
mov
mov
cmp
xor
cmp
xchg
mov
es
test
push
dec
sub
sbb
jge
pop
loope
mov
xchg
outsb
push
mov
out
rcrb
ret
fcmovne
and
mov
lock
or
aas
mov
and
push
mov
int
xchg
stos
int3
shrb
hlt
hlt
das
mov
jno
hlt
dec
ds
mov
push
pop
ja
jl
lods
adc
mov
jg
je
or
inc
jge
ja
sbb
pop
inc
rol
loopne
sub
fnstcw
xchg
xchg
xchg
pusha
push
adc
pusha
pushl
sbb
ret
orb
enter
iret
addb
int3
push
xchg
pmullw
adc
cmpl
and
icebp
add
sub
dec
loope
add
pop
and
mov
xor
stos
cmpsl
fdivrl
adc
jmp
mov
inc
inc
sbbl
mov
add
popf
scas
inc
add
in
fcmovu
cwtl
jnp
rcll
call
dec
and
xor
sub
cmc
shlb
nop
jmp
sti
jmp
sub
jp
push
scas
in
inc
mov
cmpsb
mov
sub
jge
sbb
fiadds
pop
jns
xchg
or
mov
into
cmp
outsl
inc
sbb
insl
imul
sub
sub
push
dec
pop
jl
cltd
mov
popf
sar
in
mov
inc
jecxz
pop
ret
cmp
shll
int3
inc
pop
out
xchg
in
add
xor
pop
mov
xor
mov
repz
xor
sbb
andl
gs
ljmp
or
add
or
addr16
mulb
or
ss
lods
sub
arpl
std
push
push
pushf
mov
daa
iret
dec
imul
test
add
xor
ja
lods
lret
dec
lahf
sarb
lea
cld
inc
outsb
push
fwait
loop
mov
pusha
stos
mov
pop
stos
mov
cmp
adc
inc
push
sti
nop
aaa
test
jbe
add
dec
gs
faddl
mov
popa
mov
call
lret
stos
ret
lcall
movsl
js
pop
push
and
cmp
xchg
icebp
loopne
ret
mov
stos
rcl
inc
int3
popa
xor
cmp
push
xchg
xchg
sti
stc
loope
lret
fsubr
in
jl
xchg
daa
mov
mov
rcl
cld
xchg
and
aad
cmp
sbbb
shrl
xlat
cltd
mov
cmp
and
pusha
fisttpl
mov
data16
and
call
cwtl
andb
adc
lcall
loopne
enter
les
dec
jg
jp
mov
dec
insb
pop
int3
jmp
xor
mov
mov
sub
das
lods
mov
add
in
add
sarl
dec
negl
sbb
lcall
cltd
into
icebp
add
cmc
sarl
ds
xorl
pop
push
jnp
mov
test
xchg
std
add
test
das
mov
push
jb
fisttpl
inc
dec
push
scas
insb
lds
push
jle
outsl
fxch
mov
cwtl
fcomps
sub
mov
cli
xor
xor
pop
lret
fs
xor
fucomi
jae
xor
aad
sbb
mov
push
scas
dec
xor
or
aaa
insl
jl
movsl
push
stc
jl
push
lcall
bound
repnz
mov
insl
fwait
pop
xor
in
cmp
enter
or
push
push
mov
jno
movsb
fnstcw
test
cld
add
in
loop
sbb
loope
pushf
cwtl
jge
fdivl
sbb
dec
cmp
cwtl
scas
std
xchg
push
sbb
push
dec
cs
mov
xchg
inc
stos
xchg
sar
dec
sub
fadd
daa
andl
leave
sbb
lods
pop
jl
mov
xor
mov
pop
jne
fdivrl
sbb
push
loopne
lret
mov
add
mov
push
push
adc
test
mov
cld
mov
out
clc
scas
push
test
mov
mov
and
lret
inc
scas
inc
movsl
jns
out
add
loope
cmpxchg
mov
shlb
das
rolb
dec
ljmp
sbb
rolb
pop
popf
jg
inc
imul
pop
jp
fcomps
imul
sbb
xchg
pop
push
lods
lock
pusha
pop
fldl
clc
aaa
push
bound
adc
outsb
cli
popf
adc
mov
cltd
adc
cs
test
lret
adc
mov
xchg
dec
push
int3
xchg
sbb
and
in
adc
mov
rorl
mov
push
sbb
les
mov
sbb
in
push
lods
adc
dec
leave
pop
js
iret
movsb
popf
jmp
cmp
int3
call
gs
cmp
sub
gs
mov
push
xchg
or
nop
mov
xchg
inc
adc
sbb
dec
cld
xor
jne
jle
clc
dec
in
inc
pushf
jmp
unpckhps
add
lods
lcall
ljmp
add
dec
sub
daa
mov
enter
mov
mov
loop
ficoml
mov
js
jbe
push
movsl
aad
imul
jb
mov
or
ret
jb
and
pop
sbb
shlb
fsubrl
fs
push
ljmp
outsb
push
push
adc
sbb
imul
scas
mov
xor
push
xchg
push
jl
adcb
mov
push
loope
cmp
jb
push
jp
jp
sbb
mov
add
rolb
xor
fdiv
sti
sub
es
movsb
scas
cmp
push
jle
aas
inc
cmpsl
insl
clc
dec
or
push
pop
xor
lret
push
gs
inc
jmp
jp
and
and
int
push
sbb
addr16
mov
push
cmp
lods
pusha
add
out
and
jno
push
cmp
adc
pop
add
mov
mov
ljmp
mov
shlb
lea
jmp
icebp
dec
sbb
popf
fcomps
cmpsl
push
inc
dec
and
faddl
mov
cmp
and
sbb
mov
test
scas
dec
xchg
dec
push
rcr
adc
out
scas
mov
out
test
mov
adc
stos
lods
pop
push
movsl
sbb
cltd
cmpsl
jo
xchg
inc
mov
mov
mov
shr
test
jge
lock
sub
icebp
mov
jne
mov
xlat
pusha
stos
or
adc
fwait
pop
aas
popf
and
jge
out
pop
das
idivb
cli
aam
scas
or
xchg
mov
mov
push
popa
mov
or
leave
dec
jno
push
mov
push
inc
lcall
inc
jne
loop
cmp
cmp
push
sarb
mov
mov
leave
cmp
push
out
outsl
stos
jnp
sbb
movsb
icebp
pop
jge
or
jge
loope
std
jp
jne
and
bound
add
cli
jbe
dec
idivl
mov
test
fldl
enter
cmp
es
mov
fsubl
cwtl
jo
dec
dec
rcr
and
adc
xchg
int
xchg
stos
stos
ret
cmp
adc
jle
sbb
add
inc
test
mov
clc
ret
mov
aaa
cli
jo
mov
jle
subb
push
pusha
ror
mov
mov
out
je
mov
out
in
inc
and
daa
aam
ds
pop
push
push
inc
leave
dec
jmp
cli
daa
rol
adc
sbb
jecxz
inc
sbb
dec
stos
mov
test
pop
pushf
fistpll
imul
jmp
pop
xchg
add
dec
inc
cmp
rcrb
sbb
inc
pop
aaa
pop
lods
pop
cmp
out
xchg
mov
or
inc
outsl
aaa
cmpb
hlt
xchg
lods
in
sbbb
ror
int3
jmp
pop
xchg
or
js
outsb
ljmp
jbe
inc
xchg
jle
cmp
fmulp
out
inc
jns
xor
pop
dec
cmpsl
adc
dec
ret
sti
je
outsl
mov
adc
pop
fwait
pop
push
imul
push
lret
inc
sub
hlt
out
aas
jno
int
jecxz
pop
mov
les
cmp
lahf
aas
cmpsb
jecxz
jmp
dec
inc
mov
mov
push
push
xor
mov
jmp
jmp
push
mov
outsl
ret
je
mov
ja
cmp
pop
icebp
lds
mov
jo
mov
mov
push
jp
mov
in
in
test
js
adc
adc
repz
mov
repnz
scas
push
mov
fwait
dec
and
shlb
push
outsb
int3
insb
xlat
clc
adc
push
mov
aad
dec
push
pop
and
add
mov
scas
or
insl
push
inc
and
test
cmovno
sarl
pop
gs
inc
aaa
push
sbb
jns
jg
mov
push
cmpb
or
ja
pop
xchg
cmp
jnp
sub
inc
sbb
in
pop
add
push
xlat
lea
dec
and
arpl
pop
jae
sbb
or
out
movsb
adc
scas
xchg
cmp
inc
add
out
and
cwtl
push
lods
nop
jns
into
addl
and
repz
sub
fisubrl
or
loope
mov
xor
jns
cmp
pop
mov
aaa
mov
insl
out
add
pop
cmp
cmp
stc
hlt
dec
xor
imul
or
hlt
inc
std
or
xchg
mov
jg
mov
xchg
jb
repz
les
loope
mov
loop
test
jge
imul
aas
ret
insb
pop
repz
jns
popa
lds
fsubr
cmpsb
jmp
cmpsb
pop
xchg
sub
lahf
lods
xor
rclb
adc
imul
jecxz
sub
pop
daa
jg
mov
push
cmp
xor
outsb
int3
inc
arpl
and
enter
pop
shll
fs
jmp
icebp
and
push
clc
popa
push
mov
mov
cmp
push
iret
add
repnz
shll
inc
mov
nop
jmp
iret
mov
cmp
jnp
call
arpl
insb
lret
imul
inc
dec
or
lret
int
insl
in
shlb
mov
pop
or
call
loopne
fiadds
jecxz
scas
xchg
out
mov
inc
loopne
sbb
imul
and
xchg
adc
inc
and
mov
sub
mov
call
leave
push
lea
pop
mov
das
std
jo
mov
mov
mov
or
jb
push
push
pop
mov
outsl
out
pusha
stos
pop
xor
jmp
cmp
mov
fiaddl
xor
xor
pop
adc
notl
outsb
ljmp
dec
pop
mov
pushf
cmp
mov
sbb
fisttps
dec
and
imul
add
dec
out
fs
xor
mov
repz
push
push
shlb
movsl
cmp
int3
sbb
jo
sub
jo
hlt
fdivs
dec
cmp
jb
cmp
adc
popa
or
add
xor
movsb
lods
jae
xorl
js
imul
in
aas
fisttps
rcll
xor
test
sahf
add
ret
jmp
in
mov
shlb
lds
aas
push
aas
cltd
dec
push
dec
popa
int
int
mov
cld
adc
roll
imul
xlat
dec
dec
xchg
push
iret
sub
dec
mov
mov
faddl
sub
in
add
rorb
stos
clc
dec
into
fidivrs
lahf
insb
jg
fwait
aaa
add
ss
sbb
push
les
icebp
pop
enter
xchg
lock
subb
cmpsb
push
mov
test
xchg
inc
subl
out
call
sahf
lods
push
adc
icebp
ja
lock
mov
cmp
fnstcw
add
xor
pop
enter
sub
xchg
mov
das
xchg
sbb
or
cld
scas
mov
cli
sbb
xchg
adc
xlat
inc
subb
mov
popa
sub
rcll
test
push
test
xchg
inc
ror
iret
and
pop
ret
xor
adc
ror
jno
faddl
std
mov
test
mov
fwait
sbb
mov
testl
xchg
sbb
dec
jle
loopne
sarl
faddl
std
outsb
clc
cmpsb
imul
xor
pop
out
or
mov
mov
fsubp
movsl
outsb
cmp
insl
inc
ja
mov
es
add
dec
inc
jnp
cmpb
jge
das
fmull
xor
push
sbb
icebp
stos
push
xchg
pop
push
js
cltd
mov
aad
xchg
sbb
les
xchg
xchg
or
mov
cmpb
push
xor
out
sbb
cmpsb
imul
adc
add
iret
cld
popf
cwtl
daa
rorl
pop
cld
and
mov
es
jp
mov
out
clc
xor
lcall
dec
jno
xchg
jo
negb
sbb
ret
adc
pop
push
pop
into
sub
ja
dec
mov
test
add
jns
pop
and
inc
or
push
mov
adc
add
mov
dec
in
mov
imul
fnclex
mov
loop
outsl
lods
in
xchg
mov
adc
inc
xchg
add
add
or
xor
leave
cltd
fidivrs
cld
adc
dec
cmp
rclb
or
xchg
push
cwtl
repz
fmul
int3
dec
sbb
js
mov
jo
cltd
daa
jo
pop
add
push
mulb
inc
mov
aam
fisttpll
and
aam
xchg
jns
lea
push
xor
lcall
push
pusha
dec
ljmp
sub
daa
pop
fldenv
mov
popa
aad
ja
lret
mov
aas
out
sbb
push
ficoml
rcr
inc
stos
rcll
sti
movsb
push
jne
adc
and
or
cmp
push
or
cmpsl
imul
sub
sub
sub
push
fdivrl
mov
rcr
mov
mov
in
mull
add
out
dec
xchg
sbb
or
popa
ss
adc
mov
or
dec
jb
fsubs
push
out
std
sub
or
push
ja
icebp
push
in
jge
cmp
imul
sbb
push
mov
sub
in
ret
fmull
adc
in
data16
out
ficomps
inc
jae
mov
cmp
fidivs
pop
and
sub
cmp
jne
cmpsb
pusha
dec
cs
bound
jge
cltd
push
and
in
adc
in
std
cltd
mov
sarl
ret
out
xchg
mov
std
mov
out
jo
push
outsl
test
or
repz
cmc
jae
jmp
push
push
inc
fisubrs
pop
lcall
inc
jmp
loop
and
jge
pop
and
and
mov
and
leave
add
xchg
and
ja
and
int
and
iret
nop
pushf
jmp
push
push
jnp
xor
in
adc
xchg
add
sbb
andb
fldl
cwtl
mov
test
inc
fwait
loop
add
push
dec
ljmp
shrl
mov
cmp
xchg
mov
jge
xor
jns
xor
and
push
xchg
sub
into
in
ret
stc
or
pop
mov
loop
pushf
cltd
inc
sbb
mov
mov
rcrb
es
ja
rep
or
or
daa
mov
pop
fcomps
in
lods
push
add
sbb
xor
daa
push
cmp
push
jl
xor
pop
add
sub
sub
cmp
sarb
cmp
push
test
shl
popf
xor
dec
mov
pop
movsb
jae
adc
paddsb
in
lods
mov
mov
sub
inc
or
aad
rcrl
dec
jbe
loop
jno
daa
push
shll
jne
dec
jmp
clc
cmpsb
test
lea
stos
mov
shrl
out
pusha
xor
sti
dec
repz
pop
and
bnd
inc
sti
sarl
sub
andl
dec
into
mov
mov
enter
arpl
ljmp
pop
push
push
push
sub
push
fstps
ror
in
les
and
or
pop
sub
xor
cmpsb
jecxz
fcomip
pop
xor
ljmp
cli
in
fiaddl
or
mov
adc
xchg
dec
pop
xchg
clc
mov
inc
gs
jl
mov
adc
hlt
or
data16
xchg
jl
je
in
inc
in
inc
bound
ljmp
or
push
mov
push
mov
jne
mov
shrl
daa
sub
cmp
jb
cmp
addr16
add
jmp
xchg
popf
mov
mov
scas
and
inc
mov
sub
sbb
test
nop
rcll
inc
sub
stos
sahf
cs
add
popa
pop
dec
outsb
jno
ds
cmpsb
xchg
sti
sbb
inc
sub
in
push
and
fs
dec
outsl
movl
in
push
pop
dec
jno
scas
gs
sub
jl
mov
in
cli
sub
test
dec
dec
mov
xchg
test
jl
and
insb
mov
xlat
enter
fsubs
rorb
out
adc
sub
jo
fsts
icebp
inc
enter
sub
jge
fldl
push
sub
adc
scas
imul
data16
and
popf
fs
mov
cltd
cld
aad
cmp
les
das
clc
adc
imul
fs
cmpsl
cmc
rcr
push
rcrb
cli
ss
sub
je
popfw
xchg
dec
movsb
pop
les
rclb
push
jecxz,pn
mov
cmpsb
mov
push
mov
adc
xor
adc
mov
sahf
rorl
and
test
hlt
fsubs
push
cmp
cwtd
scas
or
sub
jns
lret
pop
push
cwtl
xor
pop
rcl
decb
add
sub
push
test
fstps
dec
cmp
jnp
xor
je
pop
xchg
mov
add
shll
data16
jbe
sbb
mov
xor
pop
and
xchg
aas
sbb
pop
dec
push
push
mov
cmp
pushf
xchg
xchg
adc
subb
push
fs
push
jno
jl
lds
out
scas
mov
es
sbb
add
inc
scas
mov
cmpsl
cmpb
jmp
call
cmc
sbb
dec
sub
aad
ja
nop
push
mov
inc
popf
rcr
test
insl
inc
and
out
es
test
ss
out
fwait
sub
mov
aam
mov
jmp
shl
out
movsb
mov
cmp
es
dec
mov
pop
sub
lds
addr16
dec
leave
sub
movsb
push
lods
adc
stos
imul
icebp
pop
pop
xchg
jge
lock
int
iret
xor
pop
in
daa
cmp
sub
mov
stos
push
fdivrs
or
mov
out
cli
add
rcll
jecxz
stc
jg
ret
mov
fadd
sahf
dec
pop
or
push
mov
jae
aad
andl
mov
es
mov
out
mov
dec
pop
ret
push
sbb
iret
add
pop
testb
shl
das
xchg
xor
pop
lock
call
in
and
xchg
fdivl
push
mov
cmpsb
pushf
cmp
fwait
inc
xor
push
ficompl
or
jbe
mov
cmp
mov
icebp
lds
pop
sbb
xor
inc
in
dec
and
xchg
test
das
bound
inc
shrb
shlb
mov
add
xlat
mov
in
pop
xchg
jns
jecxz
stos
arpl
add
loope
movsb
add
sbb
push
push
pop
outsl
add
jge
out
and
add
mov
enter
xlat
aam
cmp
in
or
push
push
sarb
scas
sbb
inc
arpl
mov
stc
cmp
cld
out
repnz
push
gs
cmpsl
lahf
sub
hlt
or
shlb
mov
test
setg
xchg
inc
aad
cmp
or
sub
cmp
add
rol
inc
mov
test
in
and
push
sbbb
push
cmp
movb
fcompl
xor
add
ss
clc
mov
cmovge
lret
ss
in
push
push
rcrb
lret
pop
sbb
xor
jbe
in
int3
mov
js
call
mov
dec
in
ret
xor
shrl
pop
stc
sub
inc
jp
in
out
adc
mov
shll
dec
iret
xchg
mov
stc
cmpsb
insl
jmp
fiaddl
enter
pop
fisubs
fwait
dec
adc
push
ret
dec
pop
inc
addr16
gs
jecxz
add
in
mov
outsl
xor
lods
sbb
in
int3
inc
leave
daa
or
jnp
outsb
xor
mov
adc
scas
and
inc
sbb
xor
ret
lea
ficoml
mov
es
sub
imul
sbb
out
inc
fsubrs
ret
add
pop
sub
xchg
outsb
add
int
xchg
or
push
adc
jle
or
mov
pop
gs
xor
xlat
and
sbb
popa
xchg
mov
test
in
fcmovnbe
xor
in
aaa
pop
ret
jnp
loope
add
adc
rcll
out
mov
pop
ja
push
fmul
pop
lock
xchg
push
loope
pusha
in
sti
push
out
sbb
lcall
shlb
out
outsb
pop
fiaddl
xchg
outsl
imul
mov
cwtl
jecxz
rclb
addr16
add
rcrb
hlt
testb
pop
dec
push
imul
ds
imul
inc
sbbb
sbb
pop
and
cmc
int
xchg
xorb
xchg
inc
ds
jb
ja
push
lret
ljmp
dec
adc
inc
out
mov
pop
adc
mov
fists
add
into
repz
jb
loopne
xchg
aam
dec
pusha
and
xlat
push
out
dec
add
xchg
dec
push
inc
cmp
push
xchg
push
jns
sub
orb
out
popf
fwait
jo
pop
imul
mov
mov
insb
and
mov
jp
gs
in
mov
and
push
pusha
push
daa
dec
shl
repnz
sti
in
mov
push
mov
fnstsw
inc
in
or
into
enter
xor
jecxz
mov
mov
ds
sbb
jle
sub
pushf
mov
nop
xchg
lcall
arpl
sti
fdivrs
jne
arpl
mov
mov
cmc
mov
mov
dec
mov
adc
es
xor
xchg
movsb
fwait
mov
sub
flds
ret
ret
mov
lea
xlat
inc
mov
int3
mov
aad
ret
cmp
dec
mov
dec
enter
sub
pushf
and
fistl
ds
test
lcall
cmp
jbe
mov
out
push
fidivrs
xor
cmp
pop
shll
lahf
dec
mov
ja
push
addr16
gs
stos
stos
sub
push
mov
cltd
cmp
inc
pop
add
shll
addr16
imul
jae
fisttpll
pop
fldt
xor
fucomip
shlb
dec
aaa
mov
jmp
cmpsb
adc
testb
or
fiaddl
pop
pop
mov
pop
fcmovnu
leave
outsl
out
test
push
mov
jns
xchg
mov
int
jb
jne
jne
add
and
jae
aas
jbe
lahf
jmp
or
scas
stc
sub
inc
sbb
push
mov
xorb
aas
fdiv
or
ret
test
push
mov
sub
test
rcll
mov
jg
pop
mov
pop
push
push
in
push
ret
aaa
adc
and
ss
jecxz
inc
push
in
std
dec
into
pop
dec
cwtl
ret
clc
lret
int3
mov
and
cmp
leave
add
dec
or
jge
mov
repnz
jmp
les
ffreep
negl
cmp
push
push
gs
mov
orb
loop
sbb
xchg
movsb
sbb
imulb
add
mov
mov
xchg
adc
ds
adc
push
mov
mov
pop
sbb
xlat
fwait
in
int
test
pop
dec
push
sub
jae
in
test
inc
jno
enter
dec
adc
insb
icebp
ja
or
pop
adc
gs
xor
mov
sub
sub
add
ret
aad
shrb
rol
movl
in
mov
pop
ret
mov
mov
jbe
mov
mov
xchg
in
mov
adc
inc
mov
add
and
fs
notl
test
mov
mov
outsl
dec
cmc
dec
add
icebp
and
xchg
clc
jno
cmp
imul
stos
mov
ret
cmp
xor
mov
dec
and
xchg
lods
xor
cmc
sub
movsb
inc
insb
inc
dec
fisubrl
push
rolb
pop
out
pop
icebp
data16
cwtl
inc
xchg
and
cmpsl
mov
and
or
jbe
push
fildll
daa
push
xchg
bnd
jb
sarb
enter
cltd
iret
or
iret
lret
mov
sub
faddl
mov
ds
int3
cmp
push
popf
les
add
and
sub
lods
std
pop
mov
test
add
push
scas
cmpsl
cs
xchg
hlt
mov
data16
xor
mov
ljmp
orb
stos
ljmp
test
add
pop
or
in
in
lock
cmpsl
insb
sub
mov
lahf
mov
mov
xor
mov
out
and
ja
xlat
jne
sub
sarl
cli
adc
popa
pop
dec
sub
or
xor
dec
lahf
shlb
xchg
pop
xor
jns
sub
xchg
sbb
movsl
pushf
mov
rorl
imul
push
dec
cmp
jge
mov
aas
cwtl
fwait
imul
push
lea
lods
scas
mov
xchg
or
dec
test
sbbb
in
fdivs
pop
scas
jbe
sub
adcl
arpl
movsl
xor
out
dec
or
dec
imul
mov
sub
adc
and
test
nop
mov
jge
push
and
push
add
rcl
scas
icebp
dec
mov
and
test
lea
gs
ds
outsb
clc
add
mov
dec
negl
jecxz
inc
mov
push
jbe
andl
xor
jecxz
sbb
push
dec
or
mov
icebp
pop
push
je
cs
xchg
xlat
scas
out
add
cmpsb
dec
add
add
hlt
xchg
xor
jb
ja
lds
negb
add
ss
pop
cmpb
addr16
cmp
xor
xchg
in
pop
push
addb
jg
xchg
sbb
mov
cmp
ja
adc
test
mov
pop
gs
sbbl
rclb
xchg
pop
push
inc
aaa
sbb
cmpl
cmpl
cmpsb
cmp
push
cmc
xchg
lahf
popf
mov
pop
mov
inc
jecxz
orl
outsl
cmpsl
xchg
ja
push
mov
push
rol
int
into
mov
mov
cltd
ret
repnz
dec
mov
cmp
mov
cmpsl
jnp
test
sbb
sahf
mov
push
aas
jge
int3
cmp
mov
scas
cmc
ret
sub
sub
sbb
cli
or
mov
mov
and
mov
les
xorb
inc
das
jns
xor
aad
pop
shrl
out
push
jnp
lock
dec
loop
gs
push
or
repz
mov
sahf
pop
mov
cltd
fists
popf
jge
adc
stc
mov
xor
andb
cmp
gs
sub
pop
adc
inc
insb
dec
sti
and
xchg
and
jno
sbb
inc
push
cmp
xchg
in
cmp
xchg
jne
lods
xchg
cmp
out
mov
pop
and
rorb
dec
adc
dec
mov
or
xor
je
xor
cmpsl
xchg
inc
int
or
shl
and
xchg
adc
push
or
ficompl
lock
sbb
xchg
in
jmp
clc
adc
or
fisubrs
inc
popf
pop
sbb
fsubl
push
xsave
outsb
lret
and
jb
out
aaa
insb
push
outsb
ret
sbb
cmp
addb
sbb
pop
stos
inc
sub
ret
out
mov
test
ljmp
popf
outsb
loopne
hlt
cmp
cs
pop
push
push
in
lret
and
int3
jl
lds
nop
sbb
push
shrb
cwtl
adcl
daa
movsl
inc
lahf
not
jno
sarb
cmp
fcompl
pop
movsb
dec
mov
cs
jbe
mov
loop
daa
sbb
sbb
mov
mov
ficomps
mov
in
inc
clc
ss
cwtl
pop
fisttpll
mov
idivb
ljmp
push
inc
imul
sub
sbb
mov
out
mov
pop
mov
and
add
nop
adc
scas
or
sbb
push
mov
cmpb
pop
xchg
loope
fldenv
cli
cmpsb
pusha
pop
lret
pop
inc
pop
cmpsl
les
and
xor
add
add
idivl
push
jo
cld
adc
xor
add
fs
pop
lret
ficoms
inc
imul
loope
iret
cmpsl
sbb
pop
aad
insb
je
icebp
test
mov
dec
scas
addl
mov
lds
cmp
xor
push
inc
pushf
andb
adc
pop
fwait
adc
je
mov
adc
push
out
call
jge
mov
mov
mov
repnz
std
loopne
adcl
jbe
mov
lods
jmp
push
enter
mov
or
inc
mov
fmuls
ja
mov
mov
dec
mov
cmpsl
push
dec
cmp
xor
into
mov
dec
lahf
or
mov
mov
loope
push
cmp
pop
cmp
dec
js
into
bound
cmp
inc
bound
sbbb
movsb
jecxz
stos
xorb
jle
xchg
pop
mov
ljmp
mov
jge
cli
rorb
gs
push
add
mov
clc
jp
mov
adc
test
shll
mov
sub
lods
ret
cs
sahf
test
xchg
ret
scas
fnsave
idiv
lahf
aas
daa
cmp
shlb
lock
xor
lahf
bswap
sbb
mov
xor
dec
stc
add
xor
movsb
jmp
sub
rorl
sbb
xchg
and
sub
dec
out
or
repnz
xor
pop
sbb
xchg
jns
popa
sbb
fdivrl
fwait
push
ja
pushf
adc
ret
insl
mov
lret
mov
ror
jb
nop
dec
add
lock
aam
push
pop
orl
pop
inc
mov
loop
jmp
imul
xchg
pop
repz
inc
pop
aad
shl
lods
mov
test
mov
fdiv
inc
mov
pop
dec
inc
xchg
jo
inc
and
mov
imul
dec
aam
and
mov
adc
adc
ss
pop
mov
lock
dec
fstps
test
inc
mov
jle
je
nop
or
push
mov
mov
repnz
outsb
arpl
movsb
ret
pop
mov
mov
xchg
mov
cmpsl
test
xor
adc
test
push
sub
mov
xor
dec
pop
ljmp
das
inc
stos
gs
sbb
mov
xor
fwait
insl
leave
jmp
lret
test
cwtl
xchg
push
rcrb
pushf
idivl
dec
xor
push
pop
pop
adc
sti
ss
popa
icebp
enter
push
mov
xor
inc
sub
outsb
aad
sub
cs
pop
nop
clc
sbb
mov
push
arpl
movsb
jo
inc
outsl
stos
outsb
or
call
fildl
jg
push
xchg
mov
notb
add
rclb
add
sub
mov
inc
cld
inc
dec
adc
pop
mov
icebp
neg
mov
fxch
mov
movlps
or
fisttpll
xor
mov
fs
out
cmp
xchg
ja
aad
leave
mov
cwtl
xchg
sbb
pop
fildl
jp
xchg
lret
scas
cmp
pop
mov
cmp
test
xchg
push
cmpsb
or
or
outsb
xchg
test
adc
xchg
adc
movsl
popl
mov
push
xchg
add
lret
push
repnz
sbb
add
add
inc
cltd
cld
mov
les
xchg
out
int3
lods
jnp
cmp
sbb
mov
loope
lret
movsl
dec
and
out
adc
les
lea
fdivr
std
pop
jl
or
es
add
int
inc
iret
js
mov
outsl
cmp
cmpb
lahf
lcall
mov
int
jb
stos
and
test
hlt
xor
push
mov
push
xchg
fstpt
cs
inc
imul
fcoml
cwtl
aam
nop
sbb
ja
mov
jle
or
mov
sub
iret
incl
int3
fimuls
or
xor
test
and
adc
lock
stos
pop
and
sti
lock
dec
cmpsl
test
cmp
xchg
iret
mov
dec
out
es
push
arpl
aam
sbb
iret
mov
imul
add
adc
in
out
lods
pushf
dec
repnz
xchg
popf
andl
add
in
adc
xchg
std
std
in
mov
cmp
pop
cltd
and
xchg
and
push
cltd
pop
push
mov
jle
inc
jl
imul
push
adc
enter
inc
hlt
in
jns
mov
jmp
les
mov
test
pop
push
or
lock
ret
cmc
cmp
loopne
or
imul
test
pop
or
lds
pop
dec
int3
nop
dec
cmp
or
and
sarb
mov
push
jnp
pop
adc
adc
in
mov
or
arpl
mov
mov
testl
repnz
pop
std
stc
out
and
int3
roll
inc
lahf
faddl
mov
and
jae
ja
test
sbb
pop
pop
mov
arpl
xchg
aas
sub
push
dec
fisubrs
sti
jae
sbb
and
les
pushf
pushf
xchg
sti
adc
orb
or
mov
and
adc
push
cmp
idivb
shrl
jg
aam
cli
in
add
std
xor
pop
ss
push
addr16
sub
adc
jns
adc
dec
fs
pushf
sahf
and
mov
aas
sbb
pop
cmp
sbb
leave
dec
xchg
ljmp
insl
push
fnstcw
repz
das
cmp
cs
in
loop
or
pop
jecxz
pop
inc
aam
mov
ljmp
paddusw
inc
xchg
test
or
mov
pop
loopne
jno
add
mov
sahf
test
mov
rcll
mov
mov
imulb
dec
cwtl
sbb
jns
push
push
or
push
mov
adc
mov
xor
adc
mov
enter
outsl
pop
fsubrl
call
fistps
fistl
sub
sub
icebp
icebp
adc
mov
ja
jp
jb
sbb
das
xor
pop
int3
out
xor
stc
and
in
enter
sub
or
enter
mov
cld
push
stos
mov
cmpsb
fists
add
insb
mov
xor
test
pop
sahf
mov
pop
xor
fsubrl
repz
vpunpckhwd
js
pop
cwtl
icebp
jmp
mov
test
lock
dec
mov
leave
mulb
cmp
arpl
xchg
and
daa
pop
xchg
or
imul
data16
add
cld
pop
lret
cwtl
leave
cld
cwtl
inc
imul
and
cltd
adc
add
sbb
or
es
cltd
xchg
popf
adc
jne
dec
jae
ja
stc
cwtl
andb
or
out
and
out
dec
xchg
push
mov
sub
pop
dec
add
nop
clc
xchg
lret
pushf
inc
aas
les
inc
and
sub
popf
push
js
fmull
xchg
enter
sbb
pushf
lret
sub
mov
repnz
xor
xlat
jb
mov
jno
out
cmp
repz
dec
outsb
jbe
jg
push
pop
sahf
cwtl
sub
inc
jns
jl
xlat
movsb
sbb
test
std
aas
xchg
enter
aad
js
jmp
inc
int
or
rorl
pop
loope
adc
ds
bound
lea
pop
push
push
jl
inc
rclb
mov
push
jcxz
xchg
cmpsb
mov
pop
addps
xchg
es
pusha
pushf
in
or
sbb
aaa
sbb
push
nop
add
jp
gs
test
loop
loope
adc
insb
mov
es
add
jo
subl
in
popf
aad
jp
fs
push
fistpl
ret
popa
mov
inc
das
outsl
leave
jl
cld
sub
inc
js
sbb
adc
and
inc
pop
add
sub
and
popf
or
cmp
int
loop
add
mov
push
std
mov
sbb
jbe
incl
les
jecxz
cld
pop
iret
lea
mul
cmp
mov
add
call
ds
sub
cli
push
push
cmc
xchg
inc
je
and
cmpl
ss
bnd
pop
xchg
lret
gs
push
jecxz
subl
pop
call
mov
fcomp
xchg
cltd
sbb
push
inc
dec
stos
mov
les
lcall
out
jge
leave
mov
cli
jp
push
jecxz
add
cwtl
sub
fbld
sub
shll
jge
popa
loop
call
add
shrl
nop
xchg
xor
sbb
sbb
adc
test
and
or
inc
lock
aaa
fsubs
in
jbe
insb
loopne
xchg
ret
aas
in
test
outsl
sbb
and
add
add
mov
push
xorl
xchg
push
ss
sbb
addr16
sub
addb
xor
pop
sub
sahf
or
cmp
out
fs
enter
push
sbb
add
scas
push
int
dec
or
das
cld
out
xor
mov
fisubrl
dec
hlt
sarl
pop
mov
dec
push
sub
lods
mov
jecxz
pop
shll
mov
test
fwait
xor
xor
out
or
adc
daa
inc
cmp
int
pop
xor
mov
fsubp
aaa
int
les
subl
add
idivl
sub
enter
sub
push
test
std
adc
mov
sub
or
mov
push
iret
mov
sbb
stc
fisubs
jge
ret
and
lds
sub
cmp
lahf
loopne
enter
mov
movsl
test
add
xchg
testb
shll
out
sub
in
ss
add
sbb
inc
stos
cmp
mov
loopne
ret
pop
adc
push
fistpl
mov
adc
icebp
mov
daa
pop
cmp
mov
xlat
in
mov
fsubl
push
sub
xlat
mov
dec
dec
push
push
or
add
dec
lret
sub
xlat
xor
mov
cltd
xchg
daa
ss
ret
lods
icebp
in
jp
mull
adc
aaa
sbb
sbb
adc
jb
in
orl
mov
cmpsl
into
pop
nop
out
std
fs
lcall
sbbl
xchg
mov
int3
mov
adc
sahf
cld
cmc
sbb
cli
int
mov
mov
test
fcmove
repz
jmp
mov
cmp
icebp
pop
xchg
jp
add
ljmp
cmp
and
sub
out
insb
lock
cmp
inc
add
lret
popa
mov
ret
jno
jl
pop
repnz
or
cmp
fcoml
xchg
shlb
rcr
fmull
push
push
or
mov
pop
mov
faddl
pop
fimuls
jo
shrb
int3
mov
push
or
cld
rolb
cld
jp
xlat
xchg
ror
enter
bound
test
icebp
xchg
lahf
imulb
and
mov
lret
mov
push
pop
push
jo
jle
into
mov
pop
mov
inc
outsb
jno
imul
dec
and
loope
lcall
das
jnp
push
jbe
sbb
adc
ret
pop
adc
out
dec
jb
fwait
inc
inc
pop
mov
add
jl
inc
imul
fwait
inc
push
loop
out
shlb
or
int3
ss
jo
cmp
xor
es
imul
sahf
fisubl
xchg
testl
pop
jp
into
mov
dec
jp
in
or
stc
xor
adc
jnp
cmpsb
stos
lahf
pushf
lahf
or
insb
xchg
into
loopne
xchg
ret
sbb
shll
pushl
lods
ja
pmaxsw
and
test
lret
mov
fcomp
out
nop
mov
jb
inc
xchg
cld
or
enter
int3
sub
pop
pusha
les
add
adcb
sti
movd
lret
hlt
scas
sub
movl
cmc
or
inc
cmpsl
lods
out
jno
in
sbb
or
pop
jns
js
leave
sub
cltd
mov
test
mov
pop
jo
xchg
pop
xor
aam
aaa
dec
mov
clc
jge
repz
out
jge
xor
roll
fwait
adc
ja
mov
movsb
mov
shlb
cmp
insb
mov
in
xchg
pop
loope
and
in
pop
lahf
mov
ret
aad
outsb
lock
sub
out
pop
std
fldl
orb
aas
inc
fsubs
xchg
add
es
enter
cli
insb
data16
and
push
and
dec
or
fwait
sbb
decl
mov
in
mov
adc
sub
lahf
lods
in
sbb
adc
push
jmp
sbb
sbb
addr16
pop
lods
jg
or
pop
add
add
mov
sbbl
arpl
cmpb
jmp
cmp
or
fists
in
mov
data16
inc
pop
mul
jns
movsl
sub
cmp
push
push
dec
push
sub
insb
cmp
nop
mov
fwait
scas
insb
and
cmpsb
or
mov
mov
rorb
sarl
xchg
mov
je
shll
dec
xor
cmp
lahf
aam
into
xchg
insl
scas
jmp
cs
xchg
into
jae
insl
mov
xchg
je
sub
das
mov
aas
adc
cld
add
shrb
mov
shlb
mov
dec
jge
jmp
jl
jle
push
add
test
mov
push
out
or
inc
jle
mov
mov
xlat
hlt
test
mov
pop
inc
xchg
jns
cmp
cmp
jo
in
sahf
jno
in
jg
addl
scas
fidivl
xchg
in
ljmp
cwtl
mov
inc
or
movsl
negb
jl
les
add
mov
jo
enter
out
jle
dec
rorl
pushl
adc
add
out
loopne
test
stc
in
lods
insb
cs
enter
push
movsb
fistps
push
mov
popa
std
sub
pushf
hlt
pop
in
inc
orl
imul
add
mov
or
lcall
pop
insl
mov
mov
aad
jecxz
hlt
fisttpl
fmuls
pusha
aad
add
sbb
test
and
outsl
lcall
bound
imul
int3
repz
adc
cli
fcmovb
pop
sub
jge
lock
in
and
sbb
fcoml
insb
cmc
pop
ja
and
mov
mov
sbb
es
jl,pt
mov
push
imul
dec
xchg
mov
loopne
and
out
lret
jb
sbb
lret
sub
mov
mov
push
shl
roll
repz
mov
xchg
jne
mov
mov
xor
das
outsl
jmp
dec
add
popf
arpl
test
and
shlb
enter
pop
insb
sub
cmpsb
pushf
das
or
jmp
ss
in
loop
int3
push
mov
mov
testb
push
out
mov
mov
add
ds
inc
in
adc
repnz
push
inc
inc
mov
mov
and
push
lods
add
cmc
cmp
mov
negl
jl
fwait
add
rolb
pop
push
push
mov
mov
insb
mul
int
daa
lock
jl
dec
loope
loopne
pop
xor
out
ss
xor
decl
push
pop
fnstcw
push
scas
test
sub
jae
mov
stos
repz
out
loope
inc
and
push
push
xchg
pop
pop
sub
dec
xor
dec
xor
clc
adc
mov
dec
xchg
cmc
xor
push
nop
lcall
bnd
cltd
sub
jecxz
loopne
aad
xchg
cmp
mov
in
jmp
vmread
stc
xchg
sbb
fisttps
adc
fst
out
fiadds
stos
shrl
and
movl
dec
adc
cmp
cmp
jge
in
or
imul
out
es
mov
fs
cmc
mov
mov
in
mov
jl
or
mov
dec
mov
arpl
sti
in
mov
sub
jne
cmp
mov
pop
inc
pop
cmp
xchg
insl
aaa
sub
scas
pop
mov
sahf
pop
rorl
add
clc
and
fsubl
cmp
add
mov
cmp
or
sub
ja
push
enter
jb
and
adc
test
outsl
pop
stos
jno
cwtl
les
dec
xor
test
xor
or
cmpsl
cmp
push
xor
cmp
mov
mov
into
pop
add
scas
xchg
in
call
movsl
add
sbb
imul
cmc
add
sub
jmp
in
push
adc
cwtl
sbb
aad
dec
aad
xor
dec
or
sbb
xor
push
adc
dec
xchg
cmp
xor
mov
dec
pop
test
daa
ficomps
es
push
adc
inc
aam
fisubrl
adc
xor
xchg
xchg
mov
pop
cli
imul
std
xchg
mov
lock
test
push
ljmp
mov
rorb
out
outsl
jl
push
clc
fisubrs
jo
lods
cmpsb
mov
dec
daa
mov
leave
movsb
loope
mov
in
call
out
jo
cmpsb
mov
sub
push
inc
je
add
pop
hlt
faddl
js
pop
mov
mov
xchg
out
ljmp
sbb
shrl
push
xor
sbb
fstpl
in
fldenv
sbb
js
and
xor
test
fiaddl
std
in
icebp
repz
pop
imull
mov
sbb
into
cmp
xchg
rcll
out
push
cld
dec
out
xor
mov
and
mov
in
sbb
aam
jno
xchg
jge
in
xor
mov
lods
ret
mov
pusha
enter
stc
scas
pop
test
insl
repz
popf
cltd
pusha
mov
test
aam
jnp
testb
sub
loope
jp
repz
sub
lahf
and
rcl
cmpsl
and
push
dec
mov
cmp
test
jl
adc
mov
addr16
pop
cmpsl
sarb
insb
cltd
adc
inc
push
subl
cmp
rcr
sub
jmp
jmp
cmp
mov
addr16
loop
xor
mov
xlat
jmp
in
int3
loope
add
jb
cmp
lods
mov
mov
pushf
out
sarl
mov
dec
rcr
push
cmp
stos
negl
push
cld
pop
push
orb
mov
push
xor
mov
aaa
popf
fidivl
in
fcmovbe
and
jb
lret
add
paddw
stos
and
out
movsl
aaa
dec
mov
psubsw
shr
adc
sbb
push
sbb
xor
pushf
xor
push
arpl
xchg
sub
lret
fimull
pop
js
outsl
iret
mov
test
mov
mov
xchg
movsb
xchg
mov
xor
cmpsl
mov
push
dec
jbe
fnstsw
adc
push
dec
sarl
mov
add
cmpb
jg
dec
push
cwtl
clc
andb
pop
xchg
push
repnz
test
push
ret
push
push
push
ljmp
sbb
cmc
insl
inc
inc
inc
xchg
stos
mov
cmp
movsl
jae
xchg
mov
mov
outsl
paddsw
inc
cmp
add
scas
adc
mov
xchg
pushf
pop
test
fimuls
inc
fdivrs
and
mov
xchg
les
pop
out
sahf
cmp
ljmp
int3
sub
add
xor
leave
js
fistpll
xchg
icebp
not
pop
pop
and
cld
lret
mov
sbb
add
fldenv
fists
and
bound
inc
inc
adc
filds
lret
cltd
push
lret
arpl
inc
fcomi
add
jg
inc
jno
imul
or
and
jl
jns
cmp
pop
mov
dec
cs
xchg
pop
loop
fmull
sar
mov
pushf
loope
stc
insb
popa
stos
push
pop
imul
push
pop
in
lcall
lret
jecxz
cmp
push
or
xor
lret
std
scas
adc
hlt
orl
das
xor
inc
mov
jbe
lcall
addb
aad
int
pop
cmp
in
pop
pop
jno
push
out
enter
loop
and
dec
xor
sub
js
hlt
arpl
cli
popa
adc
dec
aaa
es
jb
pop
cwtl
and
cmp
cld
in
mov
mov
fidivl
cs
sahf
add
sbb
test
xchg
cli
cmpsb
and
add
pop
test
aas
sub
shll
push
das
in
inc
repz
bound
cmp
xchg
or
mov
out
jo
xchg
stc
je
mov
cmpl
inc
icebp
out
fcoml
adc
cltd
dec
or
ret
aam
mov
push
xchg
mov
mov
sbb
imul
or
cmp
mov
mov
jle
cwtl
test
lods
push
pop
mov
or
mov
or
ja
cmp
mov
out
fstps
adc
out
sti
sub
add
lahf
adc
inc
faddl
je
test
ret
dec
ljmp
adc
mov
pop
and
mov
pop
aam
cld
mov
pcmpeqw
inc
lds
and
add
in
or
xor
outsb
push
shll
stc
pop
orb
pop
fwait
dec
or
gs
lret
test
out
icebp
sbb
es
gs
xlat
sbb
loopne
pop
mov
int
cmpsl
push
jg
pop
xchg
sti
lods
jae
pop
sub
int3
loopne
je,pt
push
inc
fisubs
pop
adc
xchg
mov
adc
pop
lods
dec
inc
add
rorl
andb
push
jg
dec
inc
pop
jg
lea
xchg
sub
cltd
jle
out
mov
lahf
push
in
ffreep
repz
cwtl
push
mov
fcoml
test
fdivs
cmp
sbb
aad
and
stos
popa
xchg
hlt
xchg
or
jge
xorl
pop
lret
pop
rcrl
mov
rorb
xchg
lods
cs
mov
sub
jmp
dec
mov
cmp
popf
mov
xor
and
testl
mov
jae
or
lods
adc
out
or
and
or
mov
add
push
mov
push
mov
inc
add
in
adc
stc
push
clc
pop
in
dec
lcall
push
outsb
lret
and
shrl
lret
out
adc
cmp
int3
xor
sub
pop
jne
dec
jg
test
mov
pop
xchg
arpl
or
orl
mov
mov
idivb
dec
push
mov
sti
or
fstpt
pop
mov
add
fistps
xor
xchg
push
pusha
in
fnstcw
jbe
sarb
inc
inc
xor
xor
lea
lods
ds
and
mov
or
stc
mov
lock
lds
add
enter
inc
sub
out
mov
push
mov
push
in
ficoms
dec
aam
xchg
stc
imulb
das
lcall
sub
popf
test
adc
or
fs
sub
jecxz
int3
repz
andb
popf
insb
or
push
sbb
std
outsl
jbe
icebp
stc
sub
sbb
loope
lods
jno
aam
mov
cmp
jbe
add
dec
xor
jo
jmp
fwait
lcall
dec
ds
cwtl
icebp
icebp
cmp
jl
out
in
xchg
push
pop
cltd
xor
bnd
in
push
mov
xchg
popf
rorl
addb
jecxz
inc
and
es
jbe
mov
jns
addl
cmp
jge
dec
outsb
dec
das
add
nop
mov
dec
fwait
mov
pop
fwait
inc
in
out
xor
and
lret
je
int
in
adc
mul
sbb
sub
fld
jle
dec
or
jp
mov
rcll
adc
push
adc
lcall
daa
mov
mov
adc
and
xchg
cld
push
movsb
icebp
shl
ljmp
cmp
adc
out
xor
pmulhw
scas
push
adc
push
and
ds
lret
fimuls
movsl
stos
out
pop
dec
std
add
mull
mov
rcr
ror
jg
mov
pop
idivl
adc
xor
pop
inc
sub
mov
xor
in
adc
jmp
sub
sbb
ret
mov
mov
cmp
push
dec
aaa
cmc
dec
lods
out
mov
adc
imul
push
cmp
outsb
or
rorl
mov
dec
std
pop
adc
aaa
lods
aaa
cltd
cmpsb
mov
pop
mov
lock
mov
mov
lahf
sbb
ja,pt
lret
cmp
push
push
lds
jo
push
lods
push
ror
out
xlat
rcrb
loope
and
mov
pop
fstpl
adc
and
push
push
sti
xor
ljmp
add
jbe
add
jae
daa
lret
pop
xchg
repz
xlat
outsb
mov
in
fwait
jae
adc
dec
jne
lea
cmp
adc
dec
push
outsl
lods
out
xor
cmp
addb
loop
mov
jb
rcrl
in
out
cltd
js
inc
int
and
nop
jle
nop
test
mov
or
movsb
mov
mov
push
jo
fldt
ret
aad
pop
or
cmp
add
stos
add
in
testl
push
mov
sbb
cmp
ja
loopne
sub
push
xchg
pop
repz
or
sbb
add
shl
xor
cmp
or
pop
lcall
les
jnp
add
cli
lret
mov
mov
sbb
mov
pop
add
jg
xchg
mov
in
test
stos
pushw
hlt
imul
lods
push
sub
xor
push
xor
mov
jl
mov
or
rorb
aad
ror
icebp
insl
jne
das
push
rorb
sub
mov
sti
lret
std
sbb
sbb
cmp
dec
pop
outsb
jp
stos
sahf
out
pop
dec
add
rorl
frstor
push
inc
lods
inc
inc
lock
out
push
and
push
mov
jno
aas
lods
stos
in
leave
popa
imul
and
pushf
movsl
sbb
movsl
test
inc
loope
mov
sahf
cmp
aad
inc
cld
xor
lds
int3
in
leave
lds
je
loopne
dec
cmpl
adc
mov
mov
mov
loop
mov
mov
rorl
repz
sbb
inc
jae
shll
push
jge
bound
repnz
adcl
int3
arpl
adc
negb
inc
pusha
mov
sub
shll
mov
pushf
mov
mov
cmp
cmp
test
fstpt
jns
subb
aad
jno
or
pop
cwtl
adcl
mov
xlat
and
lods
mov
inc
jmp
sbb
in
sub
mov
adc
pushl
jl
int
push
xchg
popf
jp
lea
mov
fisttpll
mov
jbe
mov
out
es
in
stc
imul
inc
inc
push
mov
hlt
xchg
fstps
in
arpl
mov
daa
pop
mov
dec
mov
je
pusha
stos
or
into
jo
lret
sub
call
clc
int
mov
mov
xor
add
call
xor
cltd
adc
mov
and
adc
jbe
sbb
push
sub
fstps
adc
xor
xor
in
push
mov
push
push
jecxz
push
lods
cmp
adc
add
ds
insb
shll
std
mov
mov
int3
out
or
add
adc
jecxz
pop
subb
fidivl
cmp
mov
fs
das
sub
inc
mov
mov
mov
dec
std
outsl
jp
jo
cmp
aaa
inc
cmp
xchg
mov
gs
or
sbb
fmul
pop
jns
fisubrs
mov
push
imul
sarb
cmp
jp
pop
imul
dec
in
inc
pop
sbb
xchg
inc
mov
fnstenv
out
fs
test
stos
lock
cmc
mov
ret
inc
inc
pop
jg
add
and
sbbl
adcb
popf
or
in
jp
jae
decb
lcall
add
daa
mov
out
int3
mov
mov
xor
fwait
add
int3
scas
xor
ja
mov
das
push
add
cmc
push
ret
jge
fdivrs
pushf
xchg
movsl
ljmp
aad
jecxz
pop
out
xchg
flds
js
dec
mov
push
in
std
nop
and
and
jnp
sbb
mov
out
push
fstpl
xor
sarl
cmpb
jnp
pop
xchg
fwait
hlt
clc
hlt
push
testb
lods
sarb
jmp
in
dec
jle
push
add
hlt
pop
pop
inc
outsb
jb
pop
sub
mov
faddl
sub
loop
inc
inc
rorb
testl
cmpl
mov
leave
in
pop
jae
ds
ss
mov
fs
jbe
outsl
out
ja
dec
scas
addl
or
sbb
ljmp
sbb
mov
loop
mulb
jmp
or
test
inc
cmp
loop
ds
ret
dec
rep
push
fwait
das
test
out
mov
shrb
inc
mov
push
push
jbe
and
imul
ret
adc
xchg
jg
or
sti
lahf
iret
xchg
jno
ret
mov
imul
mov
xchg
jp
lea
cmc
add
cmpl
mov
dec
bound
lea
sub
dec
inc
dec
add
and
enter
adc
out
insb
out
daa
xor
mull
test
pop
xor
imul
mov
ret
les
or
daa
xor
iret
adc
jecxz
aad
xor
nop
or
and
xchg
popf
jp
mulb
sar
lock
xchg
jg
iret
jns
dec
mov
mov
rcrl
in
xor
fimuls
mov
xchg
loop
aam
stc
enter
addr16
nop
push
out
movsl
mov
insb
movsb
mov
and
pop
or
cli
mov
out
das
pop
out
mov
hlt
daa
dec
jo
lods
sub
sbb
mov
aam
pop
mov
sub
cli
xorb
fcmovnu
add
das
sbb
push
xchg
mov
dec
aam
mov
subb
mov
loop
xor
xchg
xchg
lahf
sbb
push
addr16
in
xchg
call
fcomip
jl
inc
movsl
mov
movsl
jle
addr16
fsubrs
push
jbe
mov
stos
mov
jae
int3
orl
cmp
add
xor
xlat
mov
out
ljmp
mov
call
les
fidivs
lds
sub
jno
push
mov
inc
mov
push
dec
ret
sbb
mov
testl
pop
lods
shrb
jns
push
cs
sub
cmpsb
jb
out
fisubl
pop
daa
pushf
loop
mov
jb
sub
and
je
push
push
sbb
sarb
inc
push
out
mov
aas
mov
lret
pop
shrl
cmp
sbb
adc
jl
pop
cmp
and
mov
add
leave
xor
mov
xchg
mov
sub
mov
std
jmp
mov
jp
mov
rcl
shrb
insl
jno
xchg
lcall
mov
pop
dec
je
lahf
push
popa
mov
add
jge
call
push
dec
pop
pop
insb
test
jo
or
cmpsl
lret
mov
push
insb
dec
mov
push
shl
lret
sub
cmp
daa
into
mov
xor
cmpsl
adc
lret
mov
test
and
push
daa
lock
jle
jbe
ffreep
loopne
dec
xchg
add
mov
inc
and
pop
cltd
icebp
fnstsw
push
lds
jl
outsl
fmull
jnp
in
fidivs
jp
rcl
stos
mov
ja
imul
add
xor
mov
insl
and
push
add
mov
mov
nop
data16
inc
xchg
in
and
add
nop
ret
jmp
dec
xor
rcrb
repz
mov
popa
mov
in
and
movsb
cmp
bound
aam
xchg
mov
mov
fs
jp
adc
enter
xor
xlat
cmp
icebp
xchg
sbb
or
pop
sti
cwtl
push
daa
cmpsb
pop
xor
inc
mov
fidivl
inc
gs
nop
fidivrl
push
insl
andb
xchg
loop
jne
mov
mov
fidivrl
xchg
xchg
movsl
lods
adc
or
stos
popl
les
mov
xchg
insl
lahf
add
test
and
cli
xchg
inc
repnz
ljmp
fmull
mov
aas
sub
loopne
jmp
sub
fsubl
outsb
xor
cmp
lock
cmp
setae
nop
in
addr16
or
lret
shll
stos
mov
sbb
sub
sbb
in
adc
mov
cmpsb
jl
call
mov
xor
cs
mov
dec
xor
repnz
xchg
das
jmp
mov
push
out
int3
pushf
insb
fwait
cmp
and
and
test
inc
ja
ja
clc
idiv
sub
pop
inc
pop
pop
int
cs
mov
ret
sub
sub
out
push
popa
adc
add
movsb
mov
daa
jbe
sub
xlat
subb
mov
add
sbb
xlat
sub
int3
test
xchg
mov
mov
inc
js
rcrb
outsl
int
or
pusha
lods
shl
cmpl
aaa
scas
out
pop
and
imul
mov
sub
fildl
std
sbbl
sbb
jo
outsb
xor
jl
cmp
dec
movsl
stc
aas
int3
adc
aaa
sahf
outsb
add
subl
mov
push
xchg
sub
inc
repz
sub
aaa
insb
mov
xor
stos
cmpsb
mov
lret
ss
inc
xchg
xchg
xchg
jge
pop
cli
xor
cmp
pop
adc
pushl
push
mov
dec
xor
push
mov
insb
and
ret
sub
imul
lret
mov
cmp
sub
fucom
aaa
push
jns
stos
out
push
xor
xor
xor
and
das
enter
mov
sarb
mov
sbb
mov
subl
out
iret
pop
inc
or
addr16
sub
loopne
mov
scas
in
roll
xorb
js
sahf
add
lods
dec
xchg
in
cmp
cmp
int
ja
jno
ljmp
sbb
inc
jo
mov
xchg
pushf
mov
loopne
xchg
sbb
fbld
sahf
test
inc
push
test
dec
aam
sti
sbb
add
and
push
negb
scas
es
push
std
mov
cmp
in
ret
aaa
popa
lods
pop
push
xor
mov
int3
in
popf
mov
inc
push
xor
pop
jo
xchg
sar
sbb
insb
enter
mov
jle
cmp
pusha
pop
cld
or
dec
or
push
insl
xor
pop
das
jno
dec
outsb
lds
and
pop
lds
sub
fsubrl
fcompl
add
out
pop
je
push
mov
insb
lcall
pushf
fistpl
loop
mov
clc
test
inc
cmp
test
mov
push
insb
push
jmp
filds
xchg
jns
inc
or
xor
add
cmp
cwtl
mov
outsb
inc
or
pop
in
mov
out
mov
lcall
dec
push
shrb
mov
xorl
shlb
adc
lahf
xchg
cmp
inc
push
and
pop
cmp
andl
add
cli
std
jae
jo
ja
outsl
sbb
or
or
mov
push
leave
add
add
popf
inc
xor
mov
in
inc
pop
mov
or
and
push
scas
sbb
lret
jmp
xchg
cmc
mull
inc
pop
data16
mov
and
pop
fnstsw
in
mov
add
movsl
xor
test
pop
adc
pop
lret
push
adc
loope
adcl
les
push
mov
pop
or
xor
jns
xor
push
bound
mov
hlt
mov
mov
dec
dec
jmp
nop
xchg
popa
js
shrb
aas
insl
xchg
sub
inc
sub
lahf
mov
lods
jns
jne
imul
jb
and
out
mov
jle
dec
mov
out
loopne
or
imul
cmp
nop
testb
leave
xor
aas
out
icebp
jo
or
and
aad
dec
int
xchg
xchg
add
js
pop
inc
fcmovnbe
jb
loop
cli
mov
cwtl
enter
dec
pop
jb
jns
loope
das
pop
and
lds
add
lcall
or
cmpsb
in
push
sub
mov
xchg
xchg
mov
xchg
mov
movb
lret
repz
in
filds
nop
push
dec
adc
dec
int3
lods
xchg
mov
lret
dec
out
test
in
in
push
mov
or
xor
stos
out
ret
dec
fdivrl
les
icebp
insb
into
push
dec
cld
cwtl
mov
jno
lods
stc
aaa
into
cmp
clc
out
inc
clc
shr
pop
int
sbb
or
mov
xchg
cmpsl
call
cli
add
mov
dec
mov
xor
sub
ljmp
inc
xor
mov
dec
stos
stos
xchg
jns
mov
mov
dec
mov
enter
push
daa
mov
mov
xchg
inc
pop
pop
out
adc
insl
or
imul
mov
mov
pusha
jne
and
js
ret
xchg
rcrl
cltd
gs
orb
sahf
mov
pop
mov
adc
leave
add
push
in
dec
repnz
into
mov
es
ljmp
sub
push
les
movsl
xor
clc
mov
push
mov
inc
cmp
loope
cmp
push
insb
loope
xorb
outsl
dec
mov
cmpb
mov
and
xor
aad
in
std
and
icebp
lods
or
loop
test
cwtl
lods
cmp
mov
shll
into
adc
ret
loopne
add
lods
inc
in
mov
stc
pop
xchg
add
push
in
dec
mov
hlt
adc
adc
popf
inc
pop
xor
mov
adc
mov
ds
dec
jecxz
xchg
andb
cmpsl
mov
push
dec
loopne
push
fisubs
orb
cld
jmp
cltd
push
mov
data16
mov
and
dec
rorl
add
xchg
jg
fs
in
mov
fisubs
das
arpl
hlt
mov
ja
inc
mov
xacquire
sbb
sub
mov
adcl
xor
fistpll
inc
dec
out
clc
leave
mov
fisttpl
js
cmp
ds
fwait
imul
cmp
mov
pop
inc
jb
bound
xor
mov
fstpl
cmp
mov
xor
mov
andl
cmpsl
mov
inc
in
ss
push
das
adc
cmp
lahf
inc
pop
out
mov
decl
cld
xor
sahf
or
xchg
or
ss
xor
mov
adc
icebp
xor
ds
push
pop
adc
dec
lretw
loope
push
mov
inc
mov
pavgb
test
fcmovu
outsl
int
xor
push
dec
gs
sbb
push
out
sub
push
jbe
dec
xchg
out
insb
jae
mov
jl
aas
mov
sub
call
adc
js
cmc
mov
icebp
test
fwait
and
stos
daa
pop
jb
mov
es
out
cmpsb
cli
cltd
mov
aaa
cmp
sbb
loopne
insb
out
hlt
int3
or
hlt
int3
jbe
in
mov
mov
xchg
dec
test
mov
add
cmp
scas
shrl
add
xlat
inc
mov
pop
in
ds
adc
pop
mulb
inc
adc
mov
lret
push
sbb
enter
add
pop
in
rcl
mov
fst
dec
out
and
insl
add
jg
notb
rcrl
add
movsl
mov
xor
dec
test
jl
pusha
loopne
in
xor
pop
lods
jnp
push
rorb
faddl
mov
xlat
cmp
scas
push
shll
adc
fldcw
xchg
mov
pop
inc
jge
pop
push
jl
cmp
sbb
lods
je
sub
push
mov
jp
sub
cmp
movsb
pop
mov
loopne
and
rorl
push
jnp,pt
data16
xchg
movsl
push
adc
cmp
inc
or
or
ja
pop
mov
ss
push
movsb
adc
cmp
xchg
lret
inc
or
push
and
add
mov
lods
sbb
insb
and
sbb
pop
push
repnz
jb
mov
movsl
sub
dec
and
sbb
cmp
sub
jge
push
cmp
rcr
mov
add
mov
jne
push
lods
fisttps
xlat
icebp
adc
and
jmp
gs
iret
gs
push
jmp
jns
mov
dec
cmp
inc
lock
push
rcl
andb
data16
xchg
cmpsb
fwait
and
pop
int3
jge
dec
inc
add
xor
stos
into
sub
mov
mov
or
xchg
mov
push
sub
lods
es
cltd
ret
jns
imul
loope
pop
cmc
dec
dec
popl
pop
add
lods
stc
pusha
mov
outsl
or
aas
imul
mov
mov
mov
sub
popf
xchg
test
nop
mov
jg
mov
clc
push
int3
imul
jb
lods
xchg
push
psrlw
rcr
mov
dec
mov
sbb
add
clc
test
shlb
sbb
cmp
jo
cwtl
sarl
adcl
pop
add
mov
pushf
movsb
and
fildl
ret
or
repnz
xchg
sub
sub
repnz
pusha
js
dec
add
rcr
rorl
sub
or
xchg
repz
jl
sub
jg
movsb
push
mov
push
stos
jecxz
mov
cld
adc
shlb
loope
sbb
sub
pop
mov
xor
daa
hlt
and
inc
cmp
outsl
fbld
ja
mov
clc
in
adc
aas
lret
scas
pushf
jo
stos
or
arpl
pop
adc
movsb
aam
lret
fldenv
mov
dec
push
dec
hlt
imul
out
xchg
fdivrs
jl
cli
xlat
mov
rolb
adc
and
sub
push
ja
cmp
ss
aad
test
cld
inc
pop
pop
fsubl
outsl
xor
xchg
loop
cmp
nopl
and
mov
xchg
jno
push
test
rolb
adc
xchg
sbb
cld
fsubp
or
outsb
aad
jg
insb
mov
dec
ret
mov
push
dec
into
sbb
orb
cmc
mov
fdivrl
sahf
cli
push
dec
add
stos
pushf
es
pushf
xor
cmpb
stc
jecxz
cmp
fs
xor
fdivrs
push
push
bound
cmpsl
mov
and
or
cmp
icebp
push
or
scas
jae
sahf
pop
xchg
add
and
enter
jno
xchg
popa
mov
push
fs
cmp
pop
push
aam
das
xchg
mov
fbstp
adc
or
or
sub
je
add
mov
xor
in
mov
lret
push
mov
cwtl
mov
das
sub
fcoml
sbb
stos
mov
gs
out
xor
icebp
mov
pop
dec
jl
aaa
pop
lods
sbb
lahf
mov
cmp
bound
sbb
lret
mov
lret
sub
jge
lahf
pop
lret
mov
into
mov
hlt
nop
adc
mov
push
es
lahf
push
mov
or
add
ficoml
ds
jg
pop
add
jge
cmp
mov
leave
adc
push
cmp
rcrb
mov
jns
dec
int3
push
test
mov
lds
pop
push
xchg
xchg
push
int
jno
ljmp
mov
lock
out
mov
mov
push
into
cmp
and
icebp
sarl
mov
or
mov
mov
pusha
inc
jle
lock
and
js
or
inc
lret
scas
test
sub
mov
movsl
lret
out
sub
lret
inc
push
data16
dec
cmp
sbb
inc
add
loopne
inc
inc
sar
adc
mov
mov
rolb
adc
mov
or
cmp
jg
hlt
je
sbb
ror
mov
jp
pushw
ret
mov
js
stc
or
insb
jmp
cmp
mov
out
push
jne
cld
or
xor
lods
shll
jo
xchg
sbb
fadds
adc
add
and
xor
cmpb
addr16
or
mov
daa
call
ljmp
sbb
or
nop
xchg
fwait
jecxz
lods
sub
sub
xor
cmc
push
jge
stos
mov
dec
inc
shr
cmp
and
cmp
mov
push
shlb
in
pop
clc
dec
mov
movsl
and
cmp
xchg
cmpsl
xor
ds
syscall
xor
xchg
jb
fs
add
outsb
insb
scas
adc
dec
jmp
fmuls
dec
shrb
test
ljmp
aas
sbb
jnp
jp
adc
imul
loop
pushf
mov
mov
mov
xchg
cmp
xchg
add
or
hlt
pop
push
and
mov
loope
adc
or
aaa
dec
push
mov
sub
sub
pop
clc
push
push
lea
enter
xor
or
pop
push
sbb
mov
sub
push
aaa
movsl
loopne
ret
ret
cmp
fwait
incl
pop
fbstp
in
ss
cmc
push
cmp
test
lret
mov
dec
repz
andb
xorb
inc
std
cltd
pop
mov
loope
loopne
mov
stos
loope
loopne
out
xor
orl
pop
dec
add
test
out
cmc
leave
fisttpll
stc
fwait
cmc
stc
punpckhwd
xor
leave
imul
aas
lcall
xlat
dec
aam
out
sbb
movsb
fwait
into
pop
adc
pusha
stc
sti
rcll
insl
cmc
mov
jb
jl
mov
mov
cmp
movsl
imul
add
inc
sti
push
stos
and
xchg
mov
je
jns
jno
les
jnp
ret
test
cmpsl
dec
imull
sub
or
cmp
or
fidivrl
loope
cmp
and
dec
es
add
insb
sub
aam
in
mov
insl
test
pop
and
jns
add
mov
push
flds
negl
outsl
push
fcmovb
push
inc
push
jge
push
adc
add
and
xchg
dec
out
or
sti
shlb
lahf
std
add
sbb
sub
leave
mov
fistl
dec
adc
ja
adc
sub
repnz
jb
out
sbb
fstp
mov
stos
fwait
movsl
sub
push
int3
and
mov
mov
mov
addr16
add
mov
sub
mov
lahf
jmp
xchg
cmp
fmull
int
or
push
mov
adc
fdivs
xchg
dec
int
lds
lods
out
push
ja
and
in
test
call
sbb
and
cmc
or
dec
xchg
pop
mov
dec
test
lock
popl
loopne
mov
adc
andb
aad
pop
icebp
inc
leave
fs
mov
nop
int3
xor
cmp
inc
outsl
data16
mov
push
sahf
test
loopne
mov
movsl
mov
ret
sbb
movl
cmpsb
sahf
std
push
pusha
cmpsb
add
sub
mov
mov
icebp
iret
aaa
and
ja
xor
jle
cmp
adc
ds
jmp
cmp
add
nop
fmull
fisubs
clc
clc
mov
nop
lea
cmpb
data16
scas
mov
mov
inc
stos
and
aas
jecxz
gs
fmuls
and
xchg
pop
roll
sbb
insl
fcoms
push
cmp
int3
insl
cmovg
jmp
mov
loop
add
add
movsl
std
pop
fs
push
push
inc
mov
fstl
ficoml
int3
arpl
pop
cmp
cmp
sub
cmp
dec
mov
and
push
mov
push
mov
cmp
jg
jbe
xor
adc
andb
mov
jle
arpl
adc
repz
insl
push
or
stos
rolb
mov
popa
fidivs
aas
xlat
imul
mov
inc
in
fsubrl
xchg
sub
jae
mov
nop
mov
fnsave
stc
or
cltd
jg
pop
mov
fimuls
fistps
pop
push
xor
sarl
int
and
inc
popf
ret
imul
mov
sbb
jl
push
inc
xchg
ror
lods
mov
lret
jbe
push
ret
insl
mov
pop
mov
rcrb
loope
and
icebp
sub
mov
sbb
test
and
mov
stc
mov
sbb
push
loopne
inc
push
dec
stc
dec
iret
out
xchg
jnp
sarl
dec
push
dec
lea
sub
insb
cwtl
lock
mov
int
push
push
fldt
in
test
lock
leave
out
jmp
jp
mov
push
add
and
xor
xchg
scas
scas
stos
insl
scas
adc
mov
jns
imul
push
xchg
shlb
xchg
lret
aad
adc
fwait
add
push
dec
inc
mov
push
mov
shll
test
iret
aas
jns
push
xchg
dec
sub
popf
repz
leave
mov
mov
adc
sub
mov
sub
shrl
ljmp
shlb
mov
xchg
jae
sub
outsb
repz
inc
add
jle
mov
push
test
sti
nop
add
push
dec
xor
jno
mov
push
nop
lahf
cmpsb
jle
cs
std
jno
lock
push
cmp
mov
add
cmp
push
sbb
rclb
push
jge
je
xchg
aam
push
in
or
or
cmp
mov
dec
xchg
inc
rol
mov
das
cmp
mov
add
adc
jmp
imul
and
sub
push
lods
jge
sub
dec
mov
aad
adc
shll
lret
shrl
test
mov
push
push
cmpsb
popf
xchg
add
enter
add
mov
popf
nop
mov
adc
aaa
clc
std
cmp
push
sub
xchg
sbb
add
and
idivb
loopne
loopne
lea
push
cmp
mov
rolb
mov
inc
sbb
push
mov
dec
mov
subl
ret
xor
jne
mov
cmp
or
jp
inc
cwtl
addr16
add
stos
pop
inc
dec
movsl
stc
jmp
daa
push
lret
insl
adc
mov
mov
mov
cmpl
cmpsb
push
popf
inc
mov
popf
and
mov
hlt
add
sbb
push
or
hlt
cmp
fistps
pop
jecxz
icebp
out
sar
les
in
mov
jne
ljmp
pop
cwtl
or
xchg
fwait
sbb
adc
ret
push
mov
xor
adc
imul
dec
clc
adc
je
movb
sarl
shlb
mov
pop
sub
dec
imulb
xor
xor
popa
mov
nop
dec
dec
dec
cmp
mov
rolb
sbb
dec
xchg
in
push
xchg
fcoms
loope
mov
in
xor
and
aam
xchg
and
dec
inc
cmp
mov
cmp
or
stos
and
sbb
ds
add
lods
fiaddl
mov
inc
pop
rorl
push
push
dec
and
and
xchg
inc
cmp
call
and
aaa
sub
inc
mov
outsl
add
das
insl
popf
jmp
mov
jl
adc
inc
ljmp
cmp
push
fistps
dec
aaa
insl
movsl
repnz
jnp
insl
jne
test
xchg
out
xor
xor
test
or
leave
xchg
inc
jg
mov
repz
jp
in
fstl
xchg
aam
cli
mov
push
mov
jmp
xchg
mov
clc
mov
loop
dec
shrb
inc
test
andb
fwait
ljmp
push
xchg
mov
pop
mov
push
test
xchg
out
int
rcll
or
out
adc
jp
in
fidivl
cli
out
in
cmp
pop
sub
sarl
cmp
sbb
cmpl
inc
popf
mov
jo
inc
bound
push
pushf
loope
and
add
jl
out
mov
lret
loop
je
mov
out
leave
je
xorb
adc
gs
sbb
stos
leave
mov
in
and
mov
cmp
addr16
lock
jle
repz
mov
into
dec
mov
imul
imul
in
pop
adc
cmc
js
rclb
fldl2e
cltd
scas
mov
push
clc
inc
addr16
lea
mov
ret
pop
mov
in
or
mov
jg
gs
icebp
inc
shll
cs
sub
mov
daa
das
xchg
cmpsl
insl
mov
lret
test
imul
std
xor
mov
xchg
sti
cmp
out
mov
mov
xor
inc
sbb
jmp
cmp
push
push
push
push
ljmp
push
scas
mov
adc
leave
sti
in
mov
and
adc
adc
shll
nop
xlat
xor
mov
mov
mov
jge
jecxz
pusha
out
sahf
loope
mov
jp
popa
jno
jbe
cmpsl
clc
dec
pop
dec
inc
cmpsl
ficompl
lcall
pop
mov
outsl
jo
mov
loope
pop
loop
sub
mov
sub
lods
jge
jno
loop
sub
fstpt
int3
fwait
or
scas
cmpl
shl
outsb
sub
add
je
cmpsl
jp
sbb
iret
xor
mov
fbld
negl
popa
and
je
daa
adc
aas
outsl
fidivrl
pop
jo
lahf
mov
movsl
cmc
cltd
jbe
scas
mov
mov
inc
adc
cltd
push
lahf
aad
dec
mov
cmp
lock
push
hlt
lds
xlat
adc
cli
mov
pop
sub
mov
pusha
cmpsl
lcall
test
adc
pusha
test
test
jb
push
sti
xor
pop
jp
xchg
fwait
sbb
jl
mov
xchg
fstl
inc
push
push
cmpsl
in
test
mov
xacquire
js
pop
je
scas
jo
test
dec
loop
add
add
pop
enter
lcall
mov
and
loopne
xchg
dec
mov
push
mov
and
sbb
push
cmp
mov
mov
push
popa
repz
or
pop
and
and
jecxz
clc
ror
and
daa
or
mov
ret
xor
inc
ret
loope
cmp
sub
inc
enter
enter
test
fstps
add
es
je
mov
and
push
inc
adc
cmp
lret
addr16
imul
pop
add
push
iret
sbb
add
repz
mov
mov
imul
xor
or
jp
sar
pusha
push
push
cmpsb
data16
xchg
addr16
ret
loope
pop
adc
aas
imul
inc
mov
std
data16
xchg
push
pop
xor
and
iret
or
fcmovu
out
cmpsb
pcmpeqw
ficoms
in
ja
fmul
cmp
push
sahf
jp
cli
mov
mov
addr16
bound
xor
push
push
fcomip
xor
pop
loopne
or
add
mov
ljmp
pop
shll
call
jb
cmp
aad
and
dec
jmp
and
lds
and
insl
nop
dec
fstl
inc
push
mov
data16
adc
xchg
mov
mov
lret
fcompl
fcoms
clc
dec
mov
jne
aas
or
sbb
mov
xor
movsl
fs
cld
std
clc
iret
and
pop
lret
out
aas
adc
or
jle
loopne
mov
aam
std
dec
adc
outsl
cmpl
orl
fisubl
sbb
inc
pop
in
sub
mov
dec
ja
call
sbb
pop
iret
cs
xchg
outsb
sub
and
or
xchg
insl
xor
ljmp
es
mov
jne
lret
add
je
adcl
into
pop
outsb
out
adc
mov
add
pushf
or
jmp
adc
pop
jne
add
jle
and
mov
mov
mov
push
mov
push
out
mov
and
cmp
shlb
dec
test
cmp
push
dec
sbb
cmp
repnz
jg
mov
inc
push
das
loop
push
int3
stc
call
sbb
ret
push
dec
or
lods
mov
push
jns
sub
xor
fiaddl
jne
inc
cld
cld
pop
out
mov
or
mov
cmc
int3
or
shl
mov
aas
xchg
mov
call
pushf
testl
add
sub
into
sub
cld
mov
imul
mov
push
rcrl
mov
mov
inc
into
fisttps
pop
adc
stc
ret
cmc
mov
pop
cmp
ret
imul
out
int3
ljmp
xor
icebp
mov
mov
adc
jo
sbb
dec
push
popf
adc
mov
aaa
lcall
add
inc
out
aas
enter
push
arpl
test
leave
add
fstp
push
cmpsl
popf
dec
fmul
pop
gs
sbb
dec
adc
or
lods
mov
sub
cli
leave
test
push
pop
pop
insl
clc
mov
jo
addr16
lcall
mov
test
or
dec
loope
int3
mov
mov
push
je
or
scas
xchg
cli
push
inc
or
and
sbb
test
sub
mov
movsl
fmull
jle
pop
dec
mov
push
mov
pop
sbb
aam
pop
add
dec
insl
pop
in
mov
sti
pop
pop
imul
mov
leave
xchg
cmpsl
mov
inc
call
sbb
lods
outsl
hlt
rolb
jp
cmp
lods
inc
inc
cmp
lahf
add
jae
pop
inc
push
and
mov
pop
jecxz
repnz
insl
outsl
and
mov
test
pop
mov
mov
add
in
sti
cwtl
stc
xor
sub
ds
clc
or
jmp
mov
shll
pop
dec
or
add
and
xor
pop
outsb
xchg
sbb
lods
in
out
or
pop
pop
push
in
push
mov
jle
outsb
cmc
out
xchg
dec
jmp
movsb
cmp
lods
or
add
pop
daa
push
jb
inc
adc
xor
dec
cli
pop
and
mov
cmp
push
mov
mov
ficompl
dec
stc
inc
jg
lcall
and
or
insb
jg
adc
jns
js,pn
xchg
dec
pop
fadds
std
inc
cmpsb
ds
jns
adc
xorb
cwtl
cs
adc
imull
mov
jmp
add
hlt
std
out
jns
int3
jl
fadds
cmc
mov
cmp
rorb
outsb
fsubr
xor
mov
loope
repnz
and
mov
cmp
sbb
addr16
jmp
adc
pop
frstor
cltd
sbb
dec
jo
inc
movsl
adc
and
imul
aas
jb
stos
pop
xor
jle
mov
ja
or
sbb
pop
mov
inc
mov
ljmp
pop
xchg
add
mov
mov
xchg
jmp
test
loop
inc
scas
in
mov
sub
fbld
scas
dec
mov
cmpsl
dec
arpl
push
leave
pop
jecxz
and
dec
dec
imul
jns
or
arpl
loope
insl
jp
sub
adc
mov
imul
aad
jecxz
inc
push
or
out
lret
cli
mov
inc
pop
cli
cmc
adc
push
mov
cmp
out
cmp
loop
jo
mov
addr16
sbb
push
subb
repz
push
test
mov
and
adc
sbb
jp
mov
and
sub
push
aad
inc
mov
add
lea
test
jl
jg
pop
jecxz
jle
push
mov
enter
fldcw
leave
fcmovu
dec
rcl
cmp
mov
mov
cwtl
sub
in
hlt
cltd
inc
cmp
push
pop
push
inc
or
out
enter
outsl
cld
imul
mul
adc
add
rolb
cmpsl
pop
jb
in
sub
ficoml
pop
adc
mov
ds
fnstsw
aad
mov
dec
cltd
cmovge
pop
test
push
loope
ss
test
xcrypt-ctr
cmpsl
pushf
dec
mov
cmp
or
jg
sbb
stos
jnp
mov
test
out
test
xor
rol
int3
add
sbb
pop
stc
imul
int
jmp
jmp
cmp
pop
into
pop
stos
adc
cmpl
mov
and
sahf
cwtl
loope
push
push
cmp
dec
insb
jl
lret
mov
xchg
xchg
subb
icebp
pop
ss
cmpsl
js
shrb
jo
leave
sub
mov
int3
or
data16
mov
push
inc
jo
sbb
psubw
addr16
test
addl
jg
fdivrl
push
lea
call
xchg
mov
loopne
js
push
push
loope
xor
jb
pop
mov
mov
or
adc
sbb
mov
rolb
adc
stos
fincstp
push
fldt
cwtl
iret
mov
cltd
stos
movsl
loop
pop
or
and
cmp
data16
leave
xor
aaa
inc
cmpsl
sar
std
push
arpl
fstpt
ret
shlb
sahf
add
cwtl
in
cld
xor
mov
into
imull
int3
stos
jecxz
jne
mov
add
push
mov
xlat
and
dec
pop
test
xor
add
push
inc
mov
stos
jo
dec
movsb
rorl
shr
dec
adc
ja
sbb
push
xchg
sti
push
popa
in
cmp
xor
in
jo
xchg
pop
and
fnstsw
and
mov
test
adc
cld
leave
mov
push
sbb
iret
clc
pop
push
or
mov
sub
mov
jnp
xor
cld
mov
push
jbe
lock
mov
adc
inc
aaa
jp
sub
inc
sub
int3
incl
and
dec
fsubl
repz
jg
sub
add
jnp
xchg
sub
pusha
push
je
sub
ffreep
push
stos
jle
jg
sar
pop
insl
adc
shr
dec
test
and
rcrb
mov
sub
aad
mov
shlb
cwtl
shrb
aaa
fistpll
in
push
sbb
enter
pop
leave
shlb
jecxz
shlb
jns
aas
jge
femms
push
js
mov
shlb
loopne
dec
mov
popf
loop
mov
sbb
daa
xchg
incb
sahf
push
mov
mov
rorb
sub
inc
daa
xchg
jne
adc
repz
aas
adc
fsubr
inc
mov
pop
sub
lret
sbb
bnd
out
test
data16
test
daa
cs
jno
repnz
mov
sbb
std
push
pop
mov
adc
mov
inc
in
lock
cmpb
ffree
push
jns
xchg
cld
in
jb
ret
aad
jns
fdiv
xchg
fcmovne
jle
sub
adc
jns
cmp
adc
mov
in
imul
push
cmp
scas
inc
ljmp
ficoms
adc
out
push
rorl
jae
rcrl
leave
movsb
dec
jb
jns
adc
ss
sbbb
jb
mov
adc
in
ret
std
xchg
stc
nop
mov
addr16
test
mov
mov
sub
cs
cmp
xor
add
test
add
shlb
out
jp
jle
inc
lret
jmp
xchg
ds
movsl
xchg
push
out
loop
das
lock
sub
dec
add
popf
dec
mov
adc
gs
push
lea
hlt
std
cmp
jmp
mul
mov
xchg
out
mov
lahf
je
icebp
cmp
adc
push
inc
dec
push
push
mov
and
dec
push
jo
mov
popf
push
cwtl
jnp
jle
xorl
xchg
cmp
mov
inc
out
xchg
fsubr
nop
or
jmp
jb
add
test
cmc
push
ljmp
inc
fcompl
xor
pop
out
push
cmpb
frstor
outsb
dec
inc
fwait
lret
jge
in
in
xchg
faddl
imul
addr16
call
cmpb
movsb
rorl
addl
mov
mov
lret
imul
ljmp
mov
push
and
repnz
movsb
cwtl
shlb
ss
inc
cmp
in
mov
jae
es
pop
and
lahf
test
adc
push
sub
repnz
mov
lcall
push
loop
loop
push
out
sub
jle
push
xchg
add
ret
jnp
mov
clc
sub
fisttpll
scas
or
fbstp
mov
sub
dec
int3
ljmp
mov
sti
pop
mov
jae
out
mov
or
aam
push
rcll
cs
lods
jmp
cld
iret
pop
shll
jp
xchg
fsubs
insb
iret
sub
js
jno
out
dec
clc
lods
xchg
push
loopne
or
sbb
shl
clc
or
and
loop
fcoms
mov
or
push
jne
aad
imul
xor
test
fs
mov
fstpt
test
sub
jb
shrb
cmpb
push
and
xchg
arpl
cmc
xor
adc
or
sbb
adc
stos
cltd
or
jmp
out
mov
mov
ret
leave
ret
arpl
sub
nop
adc
orb
mov
jg
adc
movsb
gs
mov
hlt
cld
test
xchg
ljmp
adc
je
push
pop
fidivrs
cli
mov
iret
lret
lahf
sub
pop
jl
xor
pop
xchg
jo
inc
leave
mov
mov
mov
pop
insl
divb
jo
out
xlat
int
out
mov
mov
and
xor
gs
loope
adc
pop
add
sub
jno
repz
repz
call
dec
loopne
pop
enter
mov
dec
dec
jle
or
jmp
addr16
in
dec
fldt
jl
in
or
jo
inc
sub
push
fs
mov
jmp
xchg
and
ja
add
sbb
jge
fmul
std
enter
cmp
lods
stos
push
push
loope
lea
sahf
int
rolb
shlb
je
jecxz
xchg
mov
xor
mov
fidivrs
push
sbb
std
pushw
inc
or
movsl
and
in
adc
or
mov
jle
pop
in
jno
jbe
xchg
sahf
xchg
int3
outsl
shlb
inc
mov
mov
ljmp
mov
push
stos
and
iret
out
cmpsl
dec
cmc
aam
jae
fcmovu
out
hlt
sub
popf
clc
add
pop
mov
enter
sbb
dec
sbb
data16
xor
mov
leave
push
sbb
jo
push
jl
addb
loop
jl
cld
cmp
mov
mov
pusha
insb
out
xor
sbb
jp
out
push
push
popa
or
das
vpshuflw
xchg
mov
js
sbb
btc
and
xchg
xchg
dec
xor
push
and
adcl
stc
push
inc
xor
mov
lds
add
stc
xor
sahf
repnz
inc
in
dec
sbb
mov
adc
das
outsb
xor
mov
xor
jnp
push
in
push
je
mov
fwait
sbbl
push
pop
rcrl
bound
adc
in
leave
mov
jl
in
adc
ljmp
jnp
cmp
mov
cmpl
cmp
push
in
push
jmp
dec
lods
xor
sub
sahf
mov
negb
pop
xchg
repnz
cs
mov
in
mov
mov
xor
pop
inc
pop
lret
xchg
xchg
inc
fcomi
sahf
dec
std
pop
sbb
jbe
leave
push
xor
lret
mov
adcl
je
inc
xchg
clc
and
icebp
pop
ficomps
negb
cld
ret
test
pop
xor
pop
fisttps
pop
sbb
jmp
stc
mov
jl
pop
xchg
leave
int
das
cmpsl
aaa
fwait
aad
mov
fadd
call
mov
fimull
pop
adc
test
cmp
jbe
sti
repnz
clc
test
jp
idivl
pop
pop
xor
rclb
and
xor
int
subb
aaa
adc
bound
lods
fsubrl
jno
xchg
fisubrl
aaa
mov
pop
cmp
nop
jno
and
dec
push
or
int
nop
enter
cmc
cmp
lcall
je
shrl
ds
repz
pop
scas
sahf
ret
andb
or
push
sub
sub
out
xchg
mov
add
popa
cs
xchg
or
push
rcrb
pop
movsb
js
jmp
mov
mov
pop
out
dec
and
arpl
inc
dec
push
jecxz
enter
pop
sbb
inc
mov
js
sbb
out
movsb
sub
mov
daa
inc
mov
scas
in
add
aas
cmp
push
jbe
repz
xchg
sub
int
fmull
fistps
adc
lods
outsl
inc
xchg
aaa
push
and
pop
insb
inc
test
fsts
jae
jb
pushf
push
gs
xchg
sti
sub
repnz
sahf
mov
ja
mov
jns,pn
test
je
push
mov
lods
arpl
cmp
je
push
lahf
fsubs
ret
idivl
cmp
and
aaa
insb
fsubrl
push
les
or
mov
aad
or
arpl
sub
std
aam
sbb
insl
mov
pushf
adc
mov
cmp
pop
int
xchg
enter
xchg
or
mov
jno
and
movsb
sub
das
in
aaa
pop
jbe
add
mov
jmp
pop
orb
fstps
cmp
int
sahf
and
sub
mov
and
loope
shrl
int
dec
out
add
inc
fnstsw
out
mov
push
xchg
dec
pop
out
pop
push
icebp
icebp
push
cli
stc
mov
pop
mov
call
jecxz
cmc
stos
mov
push
imul
popa
pushf
cltd
add
insb
pop
cmp
ljmp
mov
lcall
push
pop
push
push
dec
xor
adc
cmpsl
imul
adc
mov
aaa
out
mov
lods
pop
lods
add
call
aam
and
test
ja
adc
cmpsb
ret
stc
pushf
add
nop
in
xor
insl
mov
jmp
ja
or
xor
xchg
fimuls
mov
sub
sbb
dec
lret
add
pop
popa
sub
fstpl
stc
pop
cmc
mov
nop
ds
mov
orb
out
xchg
push
jl
sbb
inc
ljmp
inc
shr
mov
aam
pop
mov
mov
or
push
fdivrs
repz
rcr
mov
sbb
lret
pop
cmpsb
cwtl
pop
sti
mov
inc
jecxz
arpl
fnstcw
mov
mov
mov
mov
out
mov
data16
push
rep
sbb
icebp
sub
cmp
xor
sti
jo
std
xor
es
je
sub
sbb
je
lds
outsb
addl
loopne
mov
jns
mov
lea
xchg
fsubrl
mov
cmp
outsb
mov
jno
mov
ds
add
xor
push
jecxz
loop
and
adc
into
cmp
jb
stos
cmp
iret
int
adc
xchg
and
jb
clc
pop
pop
xchg
mov
adc
jge
out
xchg
jecxz
into
in
or
js
sub
test
lods
push
nop
lret
xor
add
inc
int
pop
addb
out
fisubrl
sub
sub
xor
clc
mov
andb
mov
xchg
or
push
je
inc
xchg
orl
jle
inc
rorl
sbb
in
loopne
imul
pushf
mov
repz
shll
xchg
fs
shlb
xor
push
addr16
jge
xor
pusha
jp
sbb
leave
insl
push
bound
nop
jecxz
cmpsl
repnz
jp
out
push
test
in
hlt
cltd
lret
inc
and
mov
lahf
push
inc
in
xlat
sub
mov
scas
mov
orl
cltd
inc
mov
sbb
data16
imul
movsl
jp
mov
xchg
mov
popa
lods
inc
and
rsqrtps
out
jnp
dec
fistps
movntq
or
pusha
ljmp
add
into
lahf
inc
and
call
jge
movsl
bound
sub
cmp
mov
mov
xrelease
push
pop
mov
mov
mov
inc
jns
pop
and
mov
xchg
and
fmuls
popa
lret
mov
sub
push
fsts
les
push
sbb
pop
adc
inc
shll
adc
mov
inc
imul
shrl
xor
or
xchg
or
or
xchg
enter
popa
sub
xchg
mov
dec
push
sub
aam
lret
xchg
dec
in
cmp
add
xchg
or
outsl
and
push
pop
mov
aas
jecxz
push
rcrb
adc
in
push
sbb
mov
xor
xor
mov
push
jne
pop
cmp
sbb
sub
ljmp
adc
jno
out
xlat
mov
mov
inc
lds
sbb
and
sbb
mov
dec
mov
sti
aad
push
sbb
push
sbb
push
and
dec
xchg
cmp
mov
lcall
push
add
jb
mov
mov
nop
sbb
adc
jge
or
leave
mov
cmp
push
sbb
cli
xchg
or
fiadds
sti
in
jge
fld
sub
and
ret
pop
lcall
inc
fnstcw
push
je
movsl
add
and
adc
std
dec
nop
or
jge
cmp
fcoms
sub
in
lcall
rcl
pushf
pop
and
cmp
jge
test
or
es
sub
cmpsb
pop
jle
xchg
add
bound
lods
push
mov
xchg
and
mov
test
push
cmc
or
push
std
dec
mov
mov
and
out
repz
imul
dec
cmp
add
scas
iret
test
add
out
pushf
pop
xor
mov
push
outsl
cmp
fiaddl
push
filds
nop
jl
dec
or
sahf
mov
clc
xchg
mov
mov
add
rolb
xchg
cwtl
adc
xchg
mov
shll
mov
pop
into
sti
imul
or
dec
repnz
or
mov
push
test
xchg
pop
sbb
push
mov
mov
and
ds
dec
and
push
mov
notb
loop
cmc
mov
shlb
adcl
into
pop
aad
mov
roll
das
mov
in
cmc
xor
fimull
scas
push
stos
movsb
jbe
in
jge
xor
sub
jno
in
mov
std
ret
lds
jecxz
sbb
push
out
mov
lret
roll
lret
in
push
inc
je
jno
jl
xor
popa
shrb
pop
dec
lret
mov
leave
ljmp
notb
cmp
mov
or
es
jg
iret
sbb
sbb
dec
ds
repnz
jg
xor
xor
lock
push
fsts
and
or
out
mov
cmpsb
in
jmp
inc
pop
inc
enter
pop
add
push
sbb
mov
imul
adc
and
sbb
aas
scas
cmc
shlb
iret
cmpsb
repnz
out
mov
cmp
push
xchg
daa
push
inc
mov
cli
push
repnz
aaa
mov
aas
ss
mov
scas
mov
add
mov
cld
xchg
adc
addb
pop
mov
add
fisttps
imul
pop
and
stos
sub
enter
dec
out
fbld
xchg
dec
xchg
adc
cmp
test
in
gs
pop
xchg
mov
mov
call
aad
scas
jo
xchg
mov
mov
push
push
mov
pusha
mov
or
out
mov
out
adc
jbe
adc
mov
out
sbb
push
dec
or
scas
xchg
inc
cmp
mov
jno
mov
mov
fldenv
popf
das
sbb
jnp
pusha
mov
jbe
test
ret
and
cmp
dec
mov
stos
mov
jo
aad
jae
xchg
popa
ss
ljmp
addr16
inc
out
push
imul
sub
dec
mov
cmpsb
push
loop
mov
xchg
pushf
or
inc
cmp
enter
dec
jle
jmp
push
into
lahf
cmpsl
adc
jg
mov
sbb
mov
dec
fldl2t
repnz
push
out
lret
outsb
cmpsl
imul
arpl
push
movsb
sub
ss
mov
jno
lcall
ret
sub
in
and
pop
adc
mov
int
xor
and
mov
jge
sbb
outsl
gs
sub
inc
and
xor
sbb
cmp
in
or
or
stos
arpl
jge
add
cld
rorb
scas
mov
arpl
and
fcmovbe
sbb
sbb
out
clc
adc
iret
int3
adc
mov
arpl
data16
lahf
push
push
out
adc
insb
lahf
data16
shlb
aad
lcall
sub
out
scas
pop
mov
inc
ds
in
push
add
inc
flds
mov
dec
adc
cmp
out
lods
clc
cmp
dec
push
insl
movb
fsubp
adc
les
lods
xor
mov
stos
push
mov
sub
fstpl
enter
bound
inc
mulb
pop
pop
adc
scas
nop
mov
ret
adcl
rol
outsl
cmp
test
adc
push
pop
and
cld
pusha
xlat
bound
movlhps
mov
jno
and
enter
mov
lods
fs
dec
std
mov
ljmp
mov
shll
xchg
lds
mov
xchg
jns
addr16
ds
jae
test
fmul
xor
push
push
dec
int3
push
fnsave
shlb
stc
sub
mov
xchg
mov
xchg
push
mov
mov
js
aad
dec
test
add
es
ret
jb
xor
sti
push
cwtl
lret
dec
jle
int3
mov
dec
push
fwait
in
cmp
inc
pop
and
aas
pop
push
dec
xor
mov
ss
cltd
fidivrl
test
fisubrs
mov
xchg
imul
push
in
xchg
cmp
jo
aaa
push
cwtl
xchg
pop
or
sub
xchg
in
lock
leave
sub
cmp
or
arpl
inc
fists
cmp
fs
ja
push
test
adc
cwtl
mov
stos
fimull
fcmovbe
cmp
pop
xchg
fucomip
xchg
addr16
and
mov
mov
push
push
cwtl
ret
sarl
arpl
jg
ja
jo
outsl
dec
cmpsl
sbb
pop
adc
leave
xor
sahf
push
cs
jns
mov
mov
pop
outsl
push
mov
xchg
xchg
test
cmp
loop
sbb
ss
or
mov
repz
loopne
inc
nop
inc
in
movsb
sbb
fwait
xchg
insl
fdivr
jmp
jns
divb
mov
int
inc
imul
mov
loopne
and
dec
aaa
stos
push
jmp
lock
outsl
mov
aam
push
xchg
xchg
xchg
cmpsb
mov
sti
and
sbb
mov
pop
add
cmp
xor
imul
xlat
mov
cmp
out
pusha
mov
mov
repz
pop
xor
mov
sub
xchg
loopne
xchg
enter
aam
test
and
xlat
cmp
push
sarb
scas
sar
je
mov
or
lea
sub
xchg
aam
adc
cmpsb
andl
mov
pop
outsl
xchg
xchg
cli
cmp
jl
clc
sbb
ja
lds
jo
push
jne
pop
in
shrb
pop
jl
or
jns
sbb
or
jns
rcll
mov
xor
or
or
sbb
and
push
mov
push
cwtl
sub
out
fcmove
mov
negl
jl
dec
dec
das
cmp
jns
jbe
divl
dec
lods
rcrl
xchg
fistpl
mov
test
jle
and
icebp
mov
pop
xchg
push
lods
mov
and
addb
push
out
sbb
into
adc
xchg
gs
jb
inc
mov
adc
jbe
test
or
mov
or
add
mov
pop
out
lret
or
popa
inc
repz
cmp
out
cld
or
xchg
dec
jae
mov
jmp
xchg
mov
fadd
sahf
or
cmpl
sub
scas
jmp
es
cmp
and
push
pusha
js
jmp
mov
mov
cmp
out
popa
adcl
enter
jnp
sbb
adc
cmpsb
nop
dec
dec
mov
cmp
pop
rolb
lahf
or
sbb
rcrl
pop
add
jae
das
fs
pop
push
jp
and
fldenv
jle
popl
sbbl
cwtl
test
inc
aam
cltd
fxch
sbb
xlat
dec
dec
cmc
lcall
dec
sub
ja
sti
cvtpi2ps
fadd
adc
sbb
jmp
dec
push
pop
xor
jno
xchg
dec
testb
add
test
sahf
xchg
bound
in
pop
jle
mov
clc
sbb
aas
mov
xor
xchg
pop
or
int3
sahf
adc
outsb
jmp
lock
popf
test
ret
sbb
pop
out
ljmp
push
rcrb
xor
pop
test
outsb
jae
sarb
adc
je
cltd
out
les
mov
mov
sbb
push
sbb
or
jno
pop
sahf
std
jge
mov
cmp
add
sub
and
cmc
sti
dec
imul
aas
lds
lea
xor
dec
nop
jb
sbb
pop
lret
adc
mov
rcrb
pop
stos
mov
pop
out
negl
adc
jns
pop
lods
cmp
xchg
xchg
enter
mov
jmp
hlt
jnp
add
inc
in
push
sti
pop
push
xchg
pop
sbb
repz
stos
jl
sbb
dec
and
mov
pop
sub
loopne
ss
mov
adcl
sub
fidivl
mov
cmp
inc
xor
pop
mov
jb
jmp
cli
xchg
jmp
lea
pop
push
lahf
and
lods
loopne
inc
fs
jecxz
sti
es
cld
outsl
aas
sbb
pop
pop
mov
mov
int3
jnp
sbb
cmp
nop
lock
pusha
lcall
xor
cs
pop
subl
xor
ffree
sbb
and
mov
in
imul
and
gs
pop
mov
xchg
xchg
cmpsb
insl
int3
enter
jge
fistl
or
pop
mov
pop
ret
xchg
imul
negb
fs
and
mov
lock
jp
insb
jl
add
mov
out
push
ret
mov
js
ficoml
insb
mov
push
loope
sub
outsl
sbb
pop
jge
ljmp
mov
dec
movsb
stos
das
xor
push
jp
mov
loopne
in
int3
call
push
test
xor
call
fstl
xchg
daa
pop
jl
cwtl
ss
cmc
out
xor
xor
jb
inc
outsb
sub
push
in
lods
xor
lcall
loopne
mov
lahf
into
inc
dec
jecxz
call
mov
xlat
cs
xchg
xor
sti
dec
pop
aam
jnp
lret
lcall
rclb
ss
scas
cmp
stos
pop
xchg
xor
lret
stos
out
and
aad
orl
pop
pop
repz
lock
xor
cld
adc
and
xchg
sub
mov
out
sbb
bound
mov
aaa
xor
or
lock
fstps
cmp
lods
arpl
popf
pushf
jne
lahf
hlt
mov
xchg
sub
mov
aam
test
and
jne
int3
loope
sar
add
sbb
dec
dec
push
mov
mov
mov
mov
dec
adc
imul
lret
and
mov
das
or
iret
sub
sarl
es
push
fiaddl
xchg
mov
movsb
popa
jg
loope
out
mov
sbb
sub
stos
pop
fwait
decl
ret
push
es
xor
test
sbb
test
push
xchg
adc
dec
fbstp
and
inc
jle
sbb
cli
insb
leave
mov
push
gs
ret
sti
andb
lcall
jns
pop
jg
or
shll
jne
jg
in
movsb
dec
jmp
mov
jl
sub
and
add
in
mov
jbe
dec
jb
pop
xor
sti
cwtl
data16
inc
and
test
pop
cmp
mov
addb
adc
test
push
add
scas
stos
jp
push
add
sub
fstpt
aaa
pop
dec
repnz
dec
into
mov
mov
jp
sbb
sar
adcb
cmp
sbb
cltd
movl
dec
roll
mov
out
adc
sbb
or
dec
das
outsb
xor
mov
dec
nop
sub
movsl
jne
or
lret
and
push
test
aas
pop
sub
mov
ret
ja
pop
pusha
jbe
stos
leave
aam
addr16
test
mov
mov
scas
jge
pop
push
mov
jg
loop
je
mov
sub
pop
pop
lds
inc
xor
fwait
push
sub
or
xchg
int3
xchg
into
movsb
jg
orl
movsl
test
push
adc
das
cmpsl
push
jle
or
jae
iret
add
nop
inc
fdivrl
jb
mov
int3
xchg
mov
cltd
push
add
adc
xor
xor
jb
jp
adc
pop
icebp
jns
mov
sbb
cwtl
in
out
mov
jb
mov
xor
loop
mov
ffreep
jae
cld
cmp
cmpsl
cmpb
mov
lret
cltd
cmpsl
fidivrl
cwtl
fists
jmp
xor
mov
frstor
mov
or
fcmovbe
out
lock
mov
pushf
xchg
gs
inc
outsl
imul
mov
xchg
jbe
out
push
cs
mov
mov
pop
cmp
lea
popa
cs
push
fisubs
or
jns
ljmp
inc
shrl
in
xchg
xlat
lds
mov
testl
cld
enter
mov
pandn
inc
shl
movsb
outsl
shlb
cmc
notl
dec
mov
xor
lret
cmc
sahf
aas
push
imul
or
stos
sar
test
jg
mov
pop
adc
lret
push
movsl
adc
fcoml
jle
or
movsl
mov
mov
push
mov
adc
repz
dec
aaa
dec
mov
cmp
lahf
add
imul
fldenv
lret
loop
xchg
nop
les
mov
mov
repz
xchg
lock
and
popa
orl
jno
ljmp
mov
mov
fst
fsubrl
cmp
arpl
and
jne
cwtl
jno
in
cs
das
cmc
sub
sbb
stos
lods
inc
pop
push
dec
scas
stos
js
mov
sub
icebp
jae
cmp
jge
cmp
repz
sti
aam
or
mov
or
insl
add
xchg
data16
sbb
dec
mov
pushf
scas
xchg
lods
jle
enter
insl
jb
mov
pop
xor
mov
adc
jmp
and
lret
and
pop
jno
add
push
out
rorb
lock
cmpsb
mov
inc
or
enter
push
icebp
pop
push
int
mov
dec
daa
cmpsb
mov
sti
fldenv
xor
scas
cmpsl
mov
loopne
imul
push
lret
pop
adc
push
xchg
insl
movsb
mov
stos
cmp
xor
push
and
xchg
lahf
in
les
mov
add
mov
adc
leave
test
inc
add
sahf
into
addb
or
out
cmp
jge
sbb
in
ja
insb
data16
sbb
mov
fisubl
add
mov
dec
jmp
fs
enter
ds
out
mov
les
xlat
jo
add
or
or
push
xor
mov
push
test
push
test
cmp
das
adc
cs
xor
pop
shrb
into
dec
and
sarl
xchg
pop
push
ret
scas
cmc
ffree
mov
arpl
and
adc
xor
dec
lods
loop
sbb
cmp
in
xchg
or
adc
xchg
bound
jne
jle
jl
mov
xor
jmp
xchg
rorb
arpl
jns
lret
hlt
addr16
xchg
jmp
cld
sbb
sbb
ret
sub
xchg
mov
adc
sti
jnp
xor
repnz
mov
scas
enter
cmp
test
bound
arpl
mov
xchg
jo
les
fcmovbe
jl
add
cs
pop
int
lods
and
cmpsl
pop
out
jne
mov
js
jnp
fcoml
adc
lea
mov
xor
mov
cmpsl
push
sbb
jp
sti
bound
faddl
add
fs
xchg
adc
inc
ret
mov
cmp
add
stos
cmp
xor
pop
xchg
sub
int
mov
add
fisubl
sub
sub
lods
xchg
push
andb
js
cmp
popf
std
outsl
or
hlt
xchg
nop
das
pop
call
nop
cmp
xchg
divl
pop
mov
iret
popf
mov
cmc
aad
imul
or
ja
sub
push
daa
imul
pop
adc
icebp
dec
stos
inc
stos
push
aaa
pop
lahf
testl
pop
jge
mov
inc
pop
dec
lods
dec
sub
push
and
pop
out
mov
inc
sbbl
push
inc
sbb
cmc
and
jns
sub
lret
ds
ret
test
adc
loope
pop
mov
das
cmpsb
sbb
cs
pop
into
xchg
lods
inc
loop
fcoms
adc
cli
in
loopne
sub
xchg
sti
dec
push
repnz
into
mov
mov
cmc
ds
and
mov
rorl
stos
inc
pushf
mov
lret
in
in
fwait
insb
adc
adc
std
and
push
lock
fiaddl
lret
jecxz
sub
out
cmp
lock
aaa
mov
insl
frstors
arpl
sub
iret
das
loopne
in
jne
push
or
fnstcw
loop
fwait
inc
daa
cmp
jp
push
imul
mov
jp
mov
test
shrl
lods
sub
dec
call
ljmp
inc
or
nop
cmp
imulb
fs
mov
popa
xchg
xchg
pop
cmp
mov
dec
cli
sub
and
sti
adc
imul
imul
test
mul
bound
sarl
sbb
das
cmpsb
lods
jl
lds
sub
add
js
cli
jae
popa
pop
xchg
xchg
cltd
sub
out
dec
ret
pop
lahf
stos
repz
ljmp
pop
pusha
and
jnp
shlb
sbb
lea
mov
in
stos
and
cmpsl
and
enter
mov
fisttps
mov
xchg
push
jg
xor
xlat
fsts
cmp
adc
sub
xor
in
push
iret
mov
jle
mov
mov
mov
xchg
in
dec
std
pusha
loopne
mov
xchg
dec
jno
shrl
cli
and
push
cwtl
push
pop
es
fisubl
test
ret
loope
outsl
in
or
push
std
pusha
mov
nop
sbb
ss
mov
pop
out
bnd
inc
imul
mov
fs
test
outsl
in
add
jns
push
pop
je
js
negb
inc
js
psllw
ret
lods
pop
insb
sub
xor
mov
and
cltd
cmp
mulb
fimuls
lods
jnp
push
movb
push
or
mov
pop
and
jnp
pop
mov
inc
arpl
enter
pop
push
fisubrl
add
mov
jmp
cmp
inc
pop
and
mov
ja,pt
cltd
jecxz
movsb
dec
fcoml
shll
leave
sbb
xchg
fsts
jne
cmp
inc
iret
lods
les
add
test
push
xor
call
aaa
mov
test
push
imul
or
cltd
mov
jnp
hlt
out
add
jge
xchg
aas
shl
ret
cmp
cmpl
test
mov
adc
aam
jl
rclb
test
mov
jecxz
adc
scas
call
push
xor
data16
imul
or
in
jne
mov
fsubrs
jne
es
push
mov
cmpsb
test
mov
xlat
mov
inc
xchg
dec
jo
repz
jnp
cmp
push
in
jge
mov
mov
repnz
cld
sub
inc
and
jp
push
jno
pmaddwd
mov
mov
jg
adc
out
dec
stc
ss
sub
pop
divl
sub
xchg
dec
inc
stc
xlat
jl
cmovbe
rcrl
lock
and
ret
rol
cld
push
or
jle
xor
aad
lret
inc
mov
xchg
test
fcompl
lods
stos
dec
fdiv
shll
cli
xor
bound
ja
int
or
js
adc
mov
leave
jnp
sti
loope
jae
roll
adc
stos
push
mov
pop
mov
mov
adc
mov
xchg
xor
xor
sbb
and
xchg
in
mov
outsb
incl
xchg
push
icebp
sbb
xorb
test
aas
push
sbb
xlat
xchg
push
sbb
jle
outsl
mov
aas
mov
push
fldenv
fwait
rcll
mov
sub
pop
jle
pop
cmpl
xchg
shrl
cmp
pop
pushf
movsl
jnp
lock
nop
std
fdivl
xchg
shr
sbb
aaa
sahf
sbbb
cli
repz
inc
xchg
sbb
ret
pop
cmpsl
xchg
inc
sbb
adc
mov
mov
push
mov
mov
push
std
scas
jle
adc
lret
aad
das
pop
mov
push
pop
leave
sub
js
scas
inc
fisubl
sbb
jnp
and
jb
inc
push
cmp
in
inc
in
sbb
fdivrp
jg
push
xchg
cmp
test
or
add
pop
or
scas
lea
icebp
fldenv
rcl
cmp
repz
scas
imul
xchg
or
mov
xor
mov
test
mov
sti
scas
loope
sub
sti
or
jge
cmp
fildll
pop
pop
adc
cmpsb
jb
sti
adc
sub
and
jno
pop
outsl
jle
xchg
sub
adc
mov
mov
cmp
dec
xchg
js
add
test
xor
add
and
in
daa
sti
pop
shlb
cwtl
repnz
div
addl
push
mov
xor
fs
sbb
mull
xor
adc
mov
fidivl
xlat
sub
pushf
xchg
dec
add
mov
je
sub
in
mov
test
inc
push
add
iret
sti
cmc
es
sti
jno
in
subb
iret
push
mov
mov
call
pop
mov
aad
out
mov
xchg
push
and
enter
cmp
pop
add
mov
cmp
sub
loope
loope
pop
sbb
xor
adcl
sub
out
test
add
fs
mov
mov
incl
jo
mov
out
test
mov
cltd
hlt
das
out
nop
test
fmull
and
mov
clc
dec
mov
mov
xor
in
mov
adc
cmp
mov
imul
jmp
addr16
stos
mov
pop
popa
gs
dec
call
ljmp
es
push
jno
fdivl
add
pushf
lea
inc
popa
sub
fdivrp
mov
lods
or
inc
adc
popf
aad
mov
das
or
sub
fbstp
jmp
rclb
adc
gs
mov
jnp
sub
sub
mov
in
outsb
popf
leavew
xor
mov
adcb
loopne
mov
imull
outsb
ja
aas
mov
jmp
loopne
cmp
lods
fimull
cs
inc
xor
pop
cmp
mov
inc
xchg
mov
loop
mov
sub
ja
dec
inc
mov
int3
cld
lods
dec
imul
data16
pusha
or
add
js
jo
inc
lds
leave
sub
mov
xor
cld
out
mov
jecxz
dec
inc
mov
ljmpw
add
lods
inc
mov
jle
cmp
mulb
cs
xor
xor
pop
movsb
inc
jg
popa
cmp
loope
inc
or
xchg
test
mov
mov
stc
sbb
jne
xchg
inc
in
or
sub
icebp
iret
lea
cmp
das
xchg
pop
and
jb
xchg
jbe
int
ss
insb
aam
dec
pop
lds
inc
stos
in
pop
jae
push
or
mov
push
loop
nop
dec
in
sarb
mov
lds
sbb
inc
mov
nop
xor
inc
enter
scas
lcall
cmpsl
adc
lret
fmuls
data16
pop
adc
and
jecxz
cmp
les
xor
daa
in
or
xchg
cmp
ret
xor
add
xchg
les
push
popa
pop
sbb
shl
mov
mov
getsec
mov
cmp
adc
pop
adc
mov
xorl
mov
and
std
lcall
mov
je
jnp
mov
pop
icebp
sbb
gs
out
aad
xchg
and
inc
fidivrl
sub
iret
cwtl
lahf
adc
add
push
fsubrl
popa
out
cmp
pop
xchg
in
pop
inc
cmpsb
mov
test
sub
add
insl
scas
fcomps
inc
jmp
shrl
lcall
int3
fildll
stos
mov
xor
loopne
test
fnsave
xor
lret
fdivrl
repnz
push
std
int3
iret
inc
mov
cmpsb
adc
add
addr16
cmp
mov
test
movsl
sbb
jbe
xor
mov
into
nop
and
sub
xchg
sbb
cwtl
cmp
pushf
add
enter
xchg
sub
call
push
push
repz
fs
in
subb
cmp
mov
push
ret
scas
popa
call
int3
adc
cmp
pop
inc
lret
pop
add
jge
push
data16
aad
loop
cmpsb
ret
pop
dec
dec
sub
in
adc
sbb
out
or
cltd
add
dec
jne
jge
mov
mov
clc
into
sub
add
and
fwait
dec
punpcklwd
shlb
stc
lds
jns
push
adc
xor
lods
cli
adc
sbb
adc
mov
movsl
mov
lods
xchg
xchg
mov
mov
add
adc
ljmp
movsb
cwtl
mov
xchg
mov
popa
mov
dec
cmpsl
pop
js
movsb
dec
sbb
jbe
mov
imul
or
data16
frstor
add
add
mov
ja
xchg
mov
in
rclb
fldl
fidivl
flds
adc
xor
pop
repz
and
dec
dec
test
or
xchg
push
jne
cld
xor
xor
and
sub
or
je
push
sbb
ffreep
mov
out
mov
xor
idiv
xor
pop
pusha
push
mov
mov
arpl
sbb
mov
lods
mov
inc
jne
cmp
scas
aam
bnd
add
jo
negl
jb
xlat
bound
sub
inc
clc
ret
sbb
mov
cmp
fisttpl
daa
xchg
sbb
push
sbb
loopne
aas
sti
ds
jmp
out
cltd
cwtl
fisttpl
cmp
inc
idivb
lock
pusha
mov
icebp
or
popa
jmp
out
insb
cmpl
cmp
nop
out
sarl
mov
sub
adc
xchg
aam
sub
in
inc
xor
sbb
add
loopne
add
jne
das
xor
stc
fsubr
fwait
sub
mov
ljmp
das
mov
loopne
sbbl
lret
into
mov
mov
jo
fbld
sbb
aaa
loopne
sbb
repz
sahf
or
xchg
cmp
int
cs
cmp
dec
aam
cmpl
jae
mov
bnd
xchg
cmp
mov
mov
scas
je
cmp
cli
mov
mov
cmp
ja
fildl
jecxz
cmp
sbb
xchg
pop
in
loop
push
adc
mov
test
pop
add
jnp
jbe
xor
addr16
pop
inc
test
mov
adc
xlat
sub
repz
inc
out
pop
aad
pop
cmpsl
loope
push
mov
bound
das
push
push
clc
mov
adcb
inc
not
imul
jo
fs
xchg
movsb
add
lods
xor
or
mov
mov
leave
in
jg
aam
mov
outsl
call
mov
xor
loopne
xchg
fildl
lds
lret
jp
scas
test
repz
mov
in
jmp
pop
shlb
xchg
xchg
jno
sub
daa
xor
add
adc
fidivl
dec
aad
outsb
imul
repnz
mov
and
push
fisttps
js
or
mov
addb
pop
test
add
jns
mov
lock
dec
test
sub
push
xchg
fmuls
jne
dec
js
mov
mov
mov
push
std
dec
mov
cmp
aaa
cli
sbb
and
std
push
test
rolw
arpl
pop
sti
cli
cmp
in
scas
push
xchg
jno
and
inc
dec
add
sarb
mov
gs
mov
xchg
mov
mov
mov
fldl
jb
inc
stos
xor
out
and
mov
add
adc
fsubrl
push
insl
and
sub
lahf
xchg
lods
test
mov
scas
loopne
push
cmp
inc
mov
testl
or
push
xor
test
dec
inc
xor
cwtl
jns
mov
cmp
or
sbbl
loop
sbbl
pop
cmp
dec
dec
daa
js
out
mov
loop
and
rcr
outsb
icebp
scas
into
push
aam
repnz
loop
enter
popf
mov
push
aad
das
adc
cmp
into
sub
dec
sub
out
mov
loop
xorl
fisttps
inc
mov
xor
jecxz
cmpsb
or
enter
hlt
inc
jno
aaa
into
testb
fnstenv
insl
and
jl
push
lods
mov
test
sbb
push
mov
mov
xchg
fidivrl
cmpsb
insl
imul
mov
mov
pop
xchg
data16
pop
loope
fildl
test
jge
arpl
repnz
gs
loopne
inc
jle
das
xchg
push
cmp
int3
or
jne
cmp
mov
hlt
jae
or
jl
mov
hlt
test
imul
mov
and
fisubrl
sbb
jnp
shl
insl
mov
lahf
mov
xchg
dec
pop
jle
push
cs
xchg
lcall
jp
test
sbb
mov
dec
dec
insb
xlat
inc
xchg
mov
fldt
pop
push
xor
pop
jmp
popf
repnz
test
in
fiadds
mov
nop
fldenv
sti
or
push
sub
flds
mov
lds
pop
sub
hlt
insl
sbb
or
inc
mov
and
cli
lds
lods
push
adc
arpl
mov
cmpsb
scas
jecxz
in
addr16
sub
dec
test
pop
mov
or
inc
popf
enter
imul
test
mov
mov
stc
push
or
imul
test
fiaddl
loope
scas
sbb
dec
pop
adc
out
inc
arpl
repz
jno
push
out
mov
xor
mov
sbb
add
jge
dec
cmp
jmp
pop
fisttpl
mov
push
in
jnp
mov
pop
jle
test
dec
imul
mov
mov
test
ror
adc
jb
or
xchg
out
incl
imul
adcb
psubusb
andl
pop
cmp
push
psubb
push
jno
ds
pop
xchg
adcb
clc
cmp
pop
fwait
stos
mov
mov
or
fwait
inc
mov
inc
arpl
xor
mov
or
sbb
push
xchg
mov
adc
fcmovnu
scas
adc
sub
jg
hlt
sbb
inc
into
pop
std
lods
pop
jmp
jbe
cltd
push
adc
cmp
out
insl
jb
cltd
mov
insb
fnstcw
data16
push
mov
push
fcoml
xchg
test
push
or
cs
aam
add
movsb
pushf
popa
mov
sbb
cmc
push
shrl
stc
push
pop
mov
pop
cld
daa
mov
xchg
xchg
push
lret
mov
push
mov
push
shl
or
jg
adc
lock
push
pop
shrb
sti
mulb
aaa
sbbl
loopne
sub
xor
scas
out
out
call
mov
xchg
pop
out
loop
pushf
jecxz
das
push
add
cld
cli
gs
std
sbb
adc
hlt
repnz
test
ja
out
jp
lahf
add
cmpsl
test
jp
push
test
or
fistps
xor
push
mov
in
mov
push
movsb
xor
add
les
mov
fidivs
fsubrs
ja
dec
movsl
cmp
cmp
out
outsl
cmc
dec
or
call
pop
idivl
dec
leave
add
or
std
cmp
fbstp
xor
pusha
ljmp
test
pop
xor
jmp
out
std
push
dec
cmpsb
fstpl
stos
scas
xchg
icebp
xor
inc
xchg
dec
mov
ds
pushf
and
in
imul
fldl
push
jno
je
mov
movsb
out
fisubs
gs
jmp
scas
inc
bnd
hlt
mov
cmpsl
iret
aam
sbb
lcall
jnp
inc
das
test
and
into
push
and
push
insl
and
mov
clc
andb
jae
fdivrl
inc
stos
adc
xchg
outsb
mov
xchg
rorb
arpl
and
pop
nop
dec
jp
adc
sbb
repz
ds
popa
bound
pop
lret
mov
mov
insb
popa
pop
test
pushf
push
sub
das
xchg
cmpsb
or
xor
inc
pop
sub
imul
je
push
jle
repnz
ficoml
mov
repnz
jb
xor
xchg
pop
sub
lds
and
rorb
xor
xchg
stos
xchg
enter
enter
sub
and
pusha
mov
sub
jmp
dec
adc
push
dec
ss
aaa
pop
cli
pop
jae
fisttps
pop
adc
xchg
add
ret
xlat
sub
xchg
jge
aad
insl
sub
loopne,pt
cmc
hlt
icebp
lock
pop
aaa
pushf
mov
shll
jae
je
into
xchg
xorb
dec
pop
scas
loopne
out
pushf
das
mov
mov
cmp
rcl
adc
sbb
scas
sub
push
or
push
dec
subb
mov
fwait
sbb
int3
jns
xor
mov
push
pop
testb
hlt
cmp
jmp
push
cmp
fcompl
cmp
push
insb
adc
mov
xor
mov
imul
adc
dec
bound
dec
loope
ret
pop
ret
je
test
jp
lret
lea
pop
xadd
hlt
mov
or
inc
jbe
mov
xchg
pop
xchg
and
push
jno
cwtl
nop
xlat
pop
xchg
rcrl
mov
inc
jge
adcl
ja
xchg
jns
out
jne
out
insl
inc
hlt
ret
dec
xor
ja
add
sbb
inc
xchg
fistpl
xor
mov
and
push
in
or
test
sub
fimull
fisubl
les
repnz
int3
pop
xchg
push
push
mov
aaa
call
hlt
or
and
loopne
lret
jb
fstpt
xchg
repnz
jmp
mov
aas
add
inc
pop
std
lcall
in
out
jbe
in
dec
dec
nop
or
pushf
jbe
testb
sub
inc
lea
aad
dec
das
add
sti
mov
sahf
dec
lcall
pop
daa
pop
int3
clc
inc
xchg
mov
in
stos
jg
mov
and
gs
jecxz
subb
lret
dec
inc
dec
cmp
gs
scas
pop
in
xchg
or
daa
push
dec
xlat
movsb
test
jle
lds
rclb
xchg
out
cs
ja
push
fnstenv
stc
adc
loope
lods
xor
mov
popa
rorl
mov
cmpsl
and
rclb
jmp
sbb
mov
dec
movd
xor
pop
cmpsb
stc
add
push
jp
mov
inc
sti
in
adc
out
add
cmpsl
cmp
or
lea
pop
movb
lds
out
jg
bound
xor
sub
inc
xchg
sbb
sub
add
dec
sub
es
ret
idiv
in
and
mov
shll
fdivrp
rcr
lea
jmp
pop
hlt
pop
mov
insl
jge
jmp
xchg
sub
push
push
sahf
in
inc
cs
test
lds
dec
dec
mov
sub
cli
jo
jne
in
stos
sbb
inc
repz
mov
clc
sti
sbb
frstor
mov
cmp
movsb
mov
cmp
cmp
mov
in
cli
int
pop
jmp
cmp
mov
fidivs
shlb
push
cmp
cmp
jecxz
cld
in
mov
enter
repnz
sbb
mov
int3
mov
sbb
cmp
fstl
mov
inc
lret
dec
lods
push
xlat
jo
xor
insb
add
sub
cmpsl
sub
add
popa
jnp
xlat
test
cwtl
roll
mov
test
int3
and
or
aaa
and
and
pop
mov
sub
stos
pop
push
push
cmp
add
jg
and
push
out
mov
out
inc
cli
pop
testl
mov
test
fildll
pop
and
mov
sub
cld
mov
mov
sub
mov
add
and
pop
insb
and
jge
int
push
xor
rclb
fcom
out
mov
rcl
mov
cmp
hlt
xor
mov
sbb
fbld
std
sub
shll
ss
add
push
shll
cmp
xchg
adc
push
ret
daa
leave
pop
imul
hlt
std
lret
cltd
mov
aam
xchg
adc
push
loopne,pt
jp
jg
addr16
push
in
pop
icebp
and
fidivs
push
outsl
mov
inc
sub
aas
imul
fadd
test
push
loope
stos
sub
fsubrl
popa
fdivs
cmc
mov
nop
mov
xorb
push
lods
iret
push
sub
inc
sub
xchg
mov
or
mov
sub
mov
xchg
inc
addr16
add
mov
rorb
xchg
or
testl
rolb
xchg
mov
push
sahf
call
paddq
inc
sbb
jecxz
cmp
push
cmp
xor
jg
sahf
loop
mov
adcl
inc
cmc
and
fnstsw
jle
mov
outsl
pop
push
mov
je
popa
or
test
arpl
dec
jge
mov
fwait
push
add
fdivrl
hlt
mov
jb
jbe
or
mull
imul
sub
cli
ret
jno
xlat
in
fnsave
mov
lds
cmpl
aad
ljmp
mov
gs
loop
push
mov
mov
push
pop
jecxz
add
xor
mov
mov
hlt
dec
dec
jle
mov
je
pop
int
adc
cli
mov
arpl
lcall
or
or
mov
fimuls
mov
lcall
xchg
mov
dec
std
sub
jl
std
add
scas
pop
cs
jle
in
aaa
or
mov
mov
dec
mov
outsl
sbb
nop
inc
mov
xchg
test
mov
addr16
std
loopne
insb
sbb
jl
test
pop
out
push
data16
or
mov
int3
or
int
or
jmp
in
mov
in
lret
inc
clc
xor
lods
scas
or
jne
push
frstor
dec
jae
mov
loope
push
enter
inc
inc
xor
shrb
pop
or
push
xchg
adcl
and
std
call
lds
shlb
movapd
xchg
lret
out
popf
jne
xor
xchg
add
dec
ja
iret
test
add
mov
clc
lret
imull
jae
imul
insl
mov
fisubl
lea
pop
loopne
sbb
mov
cmp
lock
and
out
mov
cmp
push
push
jb
add
xchg
pusha
lret
js
lds
shl
bound
scas
stos
popf
pusha
jne
imul
adc
ret
and
push
sub
xor
lock
mov
xor
add
fmuls
scas
and
cs
push
push
js
movb
add
dec
clc
mov
push
iret
jmp
ljmp
and
lock
cmpsb
xchg
ja
dec
mov
push
clc
adc
lahf
sbb
in
push
iret
lret
scas
filds
loopne
push
inc
loopne
insl
xchg
sti
addr16
ret
pop
arpl
xor
int
cwtl
in
add
shll
enter
mov
inc
movsb
scas
test
aam
in
jno
insl
adc
xchg
int
and
daa
pop
push
fwait
pop
pop
adc
shr
fs
movsb
xchg
aad
test
lcall
push
fisttpl
jmp
or
jno,pn
push
xor
adc
dec
enter
or
cwtl
sub
jle
test
adc
and
jbe
jge
mull
mov
pop
mov
in
daa
inc
loope
insl
pusha
add
mov
call
stos
addr16
mov
arpl
sub
int
fs
add
dec
jmp
jne
pusha
loope
xchg
into
fs
pop
mov
ja
sbb
sbb
out
jnp
pop
outsl
test
mov
ds
es
out
test
and
stc
popa
ds
test
sub
jle
push
mov
scas
pop
push
pushl
repnz
push
pop
pop
sbb
or
push
sbb
push
aas
mov
lret
cmp
adc
jo
xlat
sub
push
mov
inc
adc
mov
push
cmp
scas
pop
aad
inc
femms
jg
dec
mov
in
fwait
xlat
repnz
cs
rcll
aam
lea
cmp
xor
pop
inc
pushf
fdivs
push
mov
lea
bound
jmp
xchg
notb
mov
add
sbb
xchg
hlt
inc
and
fwait
xor
xor
or
dec
xchg
lods
aam
fnstsw
pushf
sub
mov
jge
repnz
outsl
ja
cmp
adc
jae
dec
out
mov
int
pop
call
xchg
js
cmpsb
pop
repz
rorb
mov
sub
jno
sub
flds
jge
push
xchg
inc
xor
popa
or
dec
es
lret
cmp
mov
stos
insl
mov
cmp
arpl
repz
mov
dec
jns
out
js
mov
nop
mov
inc
mov
mov
dec
mov
ja
lahf
dec
push
and
test
subl
inc
sbb
ret
leave
dec
add
in
call
andl
mov
push
or
int3
aam
ss
lds
int3
jge
jecxz
mov
fcomi
mov
jne
xor
sti
fdivrl
es
int3
shlb
fadd
lods
gs
adc
xchg
push
or
push
aam
push
jge
mov
out
rclb
cmp
aaa
jmp
jmp
outsl
dec
and
jbe
cmp
jmp
fstp
ja
sub
and
xchg
or
into
fldenv
out
cld
mov
popf
js
push
mov
mov
test
fcomps
lret
xor
imul
pop
mov
push
or
inc
xchg
fs
push
lahf
mov
add
js
fdivl
in
repnz
stos
xor
or
es
mov
mov
leave
je
add
dec
cmp
sbb
stc
fcmovbe
pop
add
in
cltd
mov
xor
dec
inc
mov
loopne
push
dec
xchg
jecxz
in
lahf
pop
imul
pop
or
pop
sub
mov
jne
or
insl
insl
or
sub
fisubrl
out
pushf
shll
inc
cwtl
pop
out
fidivs
push
js
push
pop
jle
out
mov
mov
int
les
aam
lret
lret
dec
push
jae
add
mov
loopne
lock
pop
jge
ds
les
sub
push
or
in
pop
mov
pop
popf
jo
jge
or
mov
flds
or
xor
cli
call
pop
je
aaa
out
stos
pop
push
push
mov
push
pop
inc
in
icebp
cmp
adc
test
and
pushf
push
shlb
pop
add
push
cmp
xor
nop
es
mov
out
out
hlt
push
pop
mov
cmpsl
jge
jg
cltd
sub
outsl
push
jmp
lock
divb
or
jb
mov
push
jecxz
jmp
imul
pop
outsb
jge
mov
inc
or
xor
jp
inc
lret
stos
loope
sbb
popf
test
and
into
and
repnz
js
cmp
dec
xor
in
or
cmp
arpl
mov
sub
xor
xchg
inc
imul
call
clc
fsubr
test
push
dec
or
jb
jmp
jb
ljmp
in
xor
imul
dec
adc
dec
pop
dec
xchg
pop
pop
adc
jnp
jmp
fisubl
adc
sbb
jp
sbb
pop
repnz
xchg
gs
push
lcall
mov
daa
sbb
outsl
mov
int
cltd
rorl
adc
lahf
jae
dec
je
jns
adc
jne
jecxz
int
ret
and
push
jmp
sub
aad
mov
cmc
popa
es
lds
lahf
push
mov
cmc
lcall
cld
insl
popf
jp
xchg
imul
and
cmp
push
jg
rorb
mov
or
mov
mov
aad
lods
xchg
adc
hlt
mov
fdivs
inc
adc
mov
fsub
popf
stos
xor
inc
xor
mov
mov
pop
inc
sbb
insl
out
cmp
pop
dec
repnz
sub
ja
and
subl
mov
sub
sub
icebp
dec
dec
aaa
push
test
out
dec
cmp
xchg
xchg
je
gs
sub
or
fisttpl
cltd
pop
dec
test
lock
push
iret
inc
es
popa
imul
in
mov
xchg
inc
inc
jg
call
sub
or
push
jae
fs
pop
dec
and
dec
jmp
sbb
push
dec
ja
xor
sbbl
xchg
dec
pop
loopne
pop
sub
dec
mov
add
mov
incl
jge
stos
cmp
cli
jecxz
lea
jo
lea
cld
or
enter
jle
cli
popa
push
or
lods
enter
add
pop
push
sub
les
pop
stos
in
dec
sub
cmp
and
imul
mov
inc
dec
dec
xchg
adc
pop
pop
lods
add
jp
push
lds
aam
add
sahf
xchg
xor
fwait
popf
inc
xlat
and
daa
enter
lds
mov
aaa
das
jecxz
push
mov
popf
lcall
faddl
push
inc
pop
mov
out
cmpsl
stos
gs
cltd
adc
rcrb
and
mov
xchg
fimull
pop
mov
push
ss
xor
inc
jo
or
pushf
ja
lds
dec
xchg
lock
or
mov
stc
into
dec
sub
fstps
jae
push
fs
std
pop
in
dec
data16
lock
adc
stos
lea
nop
fadds
sub
lds
and
sbb
jae
cmp
adc
aaa
test
mov
out
fistps
dec
sbb
aas
mov
int
jae
lock
cmp
fcompl
js
and
adc
pop
jl
mov
inc
sbbl
sub
mov
sbb
and
addr16
push
pop
clc
repz
push
in
adc
movb
fadds
enter
loopne
sub
out
adc
bound
fs
sarl
pop
mov
dec
insb
stos
arpl
cmpsl
rcll
les
push
imul
stc
hlt
sub
inc
mov
cld
jb
adcl
push
cmpsl
negb
subl
push
sbb
lret
cltd
cmpsb
and
mov
or
ljmp
and
movsl
lahf
movsb
movsb
in
pop
test
fwait
in
std
push
outsl
call
sbb
cltd
mov
movsb
negb
outsl
outsb
jmp
adc
dec
push
fiadds
jmp
daa
les
and
xchg
sub
sub
fdivrs
je
sahf
or
clc
fcompl
or
push
jle
mov
cltd
cmp
pop
adc
cmc
in
xor
add
lock
enter
test
insb
add
mov
xor
adc
pop
rcll
loop
mov
dec
and
xchg
in
mov
add
nop
bound
fcmovu
pop
push
cmc
push
cltd
clc
cld
call
gs
lds
adc
jb
mov
mov
or
hlt
cwtl
in
cmpsl
or
outsl
mov
notl
leave
mov
mov
pop
out
push
and
rcl
sub
cmp
mov
out
inc
into
mov
lcall
cwtl
xchg
andl
lret
xchg
cmp
enter
sbb
and
inc
enter
fwait
idiv
rcll
adc
mov
adc
push
push
xchg
stos
subb
push
bnd
lcall
sub
in
divl
ss
fidivrs
xor
scas
push
push
cltd
int3
and
push
cmp
les
cmp
cmc
dec
cmpsl
and
mov
cmp
sub
in
dec
jle
sub
or
jne
inc
sbb
outsl
test
pop
lret
add
outsl
adc
mov
repz
add
add
fdivrl
sub
lret
dec
out
jb
pop
jecxz
jg
add
xchg
mov
int
out
cmp
scas
rol
sub
sbb
mov
mov
xchg
int
gs
js
dec
pop
imul
ja
gs
into
xchg
xchg
loope
cld
out
jg
lahf
sbb
int
shll
push
popa
push
jbe
add
xchg
pusha
mov
mov
xchg
stos
inc
adc
mov
scas
fsubrl
mov
jecxz
add
dec
mov
sub
sbb
adc
jecxz
arpl
jb
and
data16
mov
lret
jns
dec
push
inc
insb
xchg
cmp
cltd
outsl
pushf
jne
mov
adc
xchg
stc
add
mov
hlt
out
inc
aaa
or
jns
sub
sub
push
je
mov
or
pop
sti
or
sub
bound
pusha
stos
insl
or
push
cmp
mov
aas
movsl
or
jae
or
icebp
into
pop
loop
ret
out
xchg
out
jmp
fcomp
leave
int
cltd
sbb
addb
dec
decb
lea
xchg
int
or
mov
and
cmp
test
ja
sahf
ret
push
ficompl
adc
movsb
insb
xchg
cwtl
mov
xchg
repnz
pop
dec
xor
icebp
fs
in
mov
scas
pop
pusha
lret
cld
mov
sbb
mov
push
out
or
lahf
jne
dec
aam
and
cmp
dec
ucomiss
sbb
shll
add
mov
std
mov
mov
loope
les
in
mov
js
shll
lcall
mov
sarb
sbb
mov
xchg
dec
sub
or
sub
gs
enter
cmc
shl
loop
lds
stos
idivl
rorb
aam
adc
mov
dec
lock
and
jnp
in
cld
mov
in
mov
dec
test
inc
xchg
cltd
jl
ret
sbb
inc
test
movsb
mov
jo
or
nop
adcb
jns
sarb
movsl
ret
rorb
sbb
ss
stos
jle
xchg
stc
jp
shlb
push
pusha
inc
mov
shr
mov
repz
daa
jl
in
xor
and
lret
js
mov
cmc
mov
mov
or
cmp
sti
mov
xor
cmc
mov
outsl
mov
xchg
add
add
inc
xor
icebp
insb
fldenv
adc
pop
inc
aad
pop
add
sahf
aad
rclb
insl
aaa
sbb
jmp
adcb
pop
movsl
pop
cltd
add
jmp
fdivrs
shlb
mov
sbb
adc
cmc
adc
mov
mov
and
cwtl
jge
lahf
sbb
mov
cs
inc
mov
or
arpl
mov
dec
jl
icebp
notb
and
shl
xor
dec
mov
jbe
mull
xchg
pushl
adc
in
cmp
out
stos
les
mov
add
xchg
cld
dec
dec
pop
mov
aam
mov
sti
sar
aam
mov
xlat
lahf
pop
dec
and
test
lret
cltd
xchg
movsb
dec
sbb
rorb
mov
popa
inc
fcoms
inc
inc
mov
xorl
fmuls
subl
jge
mov
out
cmp
bound
in
loopne
cld
and
sarb
inc
jae
jg
iret
cmp
iret
adc
push
in
sarl
jp
mov
cmpb
fwait
inc
and
stos
jns
fmuls
push
popf
popa
jnp
mov
and
sbb
loopne
loope
xor
test
addl
test
pop
clc
push
xchg
repnz
addr16
in
and
fs
cld
addr16
jbe
sbb
jmp
inc
repnz
jne
and
pushf
mov
inc
sub
pusha
push
push
and
int3
sub
out
mov
decb
jnp
outsl
js
jae
dec
inc
sub
jb
jbe
cmp
divl
hlt
pop
cli
xchg
out
cmpsl
gs
repnz
pop
jl
aam
sbb
pop
jmp
lock
fdivl
mov
test
cmc
lret
std
fs
aaa
int
daa
incb
xor
lahf
data16
xor
outsb
mov
or
repnz
sbb
jge,pt
loop
iret
sarl
dec
outsb
fildl
mov
xchg
add
push
sub
mov
lret
ret
mov
insl
int
pop
mov
push
popf
mov
movsl
fdiv
int3
lcall
insl
sub
pop
rcrb
std
adc
mov
pop
clc
in
xchg
cmpb
out
and
lcall
and
ret
jbe
xor
sbb
jp
jb
dec
pop
push
mov
insl
test
popa
pop
gs
inc
mov
adc
xor
std
add
lahf
out
and
mov
dec
pop
push
cs
cmp
adc
jne
ss
inc
enter
out
nop
pop
imul
outsl
sarb
lahf
inc
pop
fidivrl
mov
xor
call
fs
push
lock
cmp
push
jns
sub
dec
jg
push
fwait
repnz
adc
jnp
inc
fiaddl
adcl
dec
inc
jp
iret
shrb
gs
dec
lret
add
gs
scas
pop
inc
adc
out
mov
aad
mov
testl
test
lahf
subl
push
push
dec
jb
icebp
stos
jge
and
rol
aad
inc
lret
jmp
inc
and
inc
jno
insl
movsl
xor
dec
jg
pop
in
dec
loop
jg
xlat
int3
push
jne
pop
lds
cmc
ficompl
adc
mov
cmp
stc
das
nop
in
add
ret
in
sahf
insb
dec
icebp
jno
jae
mov
loope
call
mov
mov
scas
dec
sbb
pop
add
jno
push
fistpl
dec
ret
cmp
loope
jge
jns
mov
bound
int3
pusha
aas
lret
cld
sbb
jecxz
fisubrs
shl
imul
jmp
adc
iret
mov
xchg
into
test
loop
mov
pusha
pop
mov
and
ljmp
mov
mov
jl
sbb
popf
stos
cli
jno
in
inc
push
fldenv
mov
lcall
fadds
iret
gs
pusha
cli
jge
mov
pop
popf
fimull
xchg
mov
sti
or
mov
sub
jl
lcall
movsl
movsl
inc
jne
jg
push
mov
push
je
or
decl
out
sub
push
push
iret
daa
lcall
inc
dec
les
pop
test
aad
pop
insl
xchg
inc
adc
mov
shll
iret
dec
fdivr
or
daa
adc
outsl
sahf
cmp
test
jae
jmp
mov
push
loopne
add
jmp
call
xchg
cld
movsl
das
imull
add
jl
jmp
adc
adc
dec
jecxz
cmpb
mov
mov
imul
in
iret
cltd
shl
lock
pop
dec
imul
cld
jmp
jmp
xchg
xlat
dec
cmp
sub
push
pop
lret
and
jb
mov
sub
outsl
int
pop
movsb
inc
ja
jg
mov
push
xor
xorb
in
push
mov
mov
inc
and
sub
jns
mov
sub
jp
add
cwtl
mov
shlb
in
das
mulb
xchg
shrl
les
rep
cltd
inc
aaa
negl
xchg
pop
iret
or
adc
xchg
xor
popa
pusha
xor
mov
cwtl
and
lods
push
jg
inc
scas
or
or
lods
cld
inc
adc
dec
roll
add
shll
rcrb
add
repnz
cltd
adc
dec
mov
out
incb
xchg
jmp
ret
lods
add
arpl
aad
fabs
shl
cmpsl
sbb
outsb
or
sarl
lahf
pop
mov
pop
mov
test
lahf
lahf
daa
mov
xchg
prefetchw
adc
call
mov
shl
xchg
dec
mov
dec
pusha
vsqrtsd
mov
jge
clc
xchg
mov
inc
scas
pop
mov
and
cmp
xchg
pop
repz
pop
nop
ret
imul
sbb
out
icebp
jne
pusha
stc
xchg
popf
cmp
jbe
xchg
test
cs
cmp
lods
cltd
xchg
push
ret
xor
je
lret
mov
fdiv
in
insl
clc
dec
or
clc
sahf
fcomp
pop
cmp
dec
lock
pop
mov
add
inc
sub
in
inc
out
xchg
fisttps
sbb
into
push
pop
jge
push
pop
enter
jl
addr16
pusha
sbb
clc
sbb
inc
xchg
cmp
pop
or
cwtl
pop
xor
gs
adcb
mull
cwtl
push
int
imul
mov
sub
mov
mov
clc
or
fwait
movsl
cld
adc
lods
subl
out
pop
in
mov
cltd
lret
orl
pop
sbb
jmp
outsb
push
enter
lahf
arpl
out
test
push
pushf
dec
inc
cmp
fdivrl
out
mov
inc
fdivrl
mov
mov
add
pop
stc
mov
cmp
sbbl
lods
xor
testb
lret
cmp
and
movsb
dec
inc
clc
cwtl
mov
adc
fwait
jl
leave
mov
jmp
jnp
jmp
shll
and
leave
mov
pop
mov
xchg
add
adc
mov
lods
imul
lahf
jg
sbb
nop
enter
dec
sbb
icebp
pop
lahf
popa
pop
xchg
xor
add
pop
jp
andb
or
in
and
sar
xorb
mov
divl
stos
mov
and
push
dec
xlat
inc
lret
sbb
xchg
xchg
loope
mov
dec
inc
subb
sbb
push
mov
dec
mov
cmp
cs
push
stos
mov
imul
and
mov
adc
data16
sbb
rcl
test
or
in
or
repnz
push
int3
xchg
imul
xor
scas
cmp
inc
fisubrs
inc
je
jecxz
out
rcll
inc
outsb
icebp
fidivrl
xchg
mov
loopne
sti
outsb
arpl
movsl
out
adc
mov
xor
stos
je
mov
nop
lahf
mov
mov
stc
push
sbb
fnstcw
cmp
sbb
push
sub
mov
and
cmpsb
cld
add
lods
fwait
movsl
mov
mov
mov
jg
mov
imul
mov
cmc
cwtl
mov
xchg
cmpsl
nop
dec
lock
add
mov
mov
mov
or
cs
pop
cltd
adc
jle
or
dec
fiadds
std
cmpsl
out
lret
int3
mov
add
repz
out
icebp
sub
popf
outsl
mov
cmpsb
xor
idivb
sub
jle
xor
or
xor
outsl
mov
adc
mov
xor
push
ss
pop
add
outsl
lcall
pop
and
popf
push
std
mov
push
add
ret
push
push
subb
lret
aaa
int
push
in
push
mov
data16
shlb
loop
sar
adc
cmp
lret
xchg
out
int
sbb
sbb
mov
jo
out
bound
mov
inc
dec
sub
sbb
fwait
sbb
sbb
loope
push
xchg
fidivl
and
movsb
icebp
dec
inc
iret
mov
xor
call
jl
sub
mov
sbb
mov
jmp
mov
sbb
push
loopne
lcall
js
mov
add
ljmp
push
sub
adc
sbb
push
movsl
es
ss
jnp
sbb
inc
test
add
or
xchg
scas
cmc
adcl
dec
cmc
pop
adc
pusha
jbe
lahf
lcall
repnz
ja
jp
lret
test
sarb
dec
loopne
clc
imul
or
int
sbb
lret
ret
mov
and
mov
call
cmp
in
lret
enter
adc
jg
faddl
imul
jecxz
dec
lret
scas
clc
xchg
fisubs
inc
mov
mov
stos
stc
repz
out
scas
and
sbb
inc
mov
aaa
repnz
sahf
test
push
and
xchg
push
sarl
and
mov
stos
shlb
inc
and
sub
sub
cld
pop
aas
cltd
jne
push
movsl
mov
pop
adc
repz
out
push
mov
fldenv
inc
fwait
int
rclb
mov
and
lahf
in
aad
jbe
push
inc
mov
in
sub
insl
jns
mov
pop
cmp
mov
cmp
xchg
xor
inc
inc
in
andb
jae
cli
inc
xchg
jne
movsb
dec
sbb
scas
data16
push
sub
daa
pop
mov
xor
ss
inc
addr16
add
mov
movsl
inc
nop
sub
dec
fwait
xchg
mov
pop
aam
adcl
jne
mov
lods
sahf
mov
sbb
mov
jle
mov
sub
xlat
cmc
dec
xchg
test
les
test
nop
test
aad
in
xchg
mov
popf
jmp
das
push
pop
loope
lahf
and
or
sub
inc
pusha
out
pushf
mov
movsb
js
ds
loope
sub
xchg
push
mov
xcrypt-ecb
cmpsl
push
mov
aas
push
jmp
xchg
dec
push
lea
jbe
pushf
fisubl
mov
push
cmp
into
adc
mov
ljmp
insl
sahf
fstpl
notb
xchg
fnstsw
xchg
lods
jns
inc
lods
cmp
ficompl
daa
xor
sbb
and
mov
sbb
jno
movsl
stos
testb
in
loop
mov
stc
fimull
ljmp
out
cmp
arpl
out
and
and
jmp
out
push
xchg
mov
shrb
pop
add
adc
dec
cld
jmp
ss
shll
dec
out
and
jg
sub
mov
out
cld
push
and
shl
ljmp
mov
shlb
push
mov
fwait
jp
add
and
sahf
shlb
stos
incl
xlat
fistps
popf
pop
ds
and
sbb
mov
sbb
sub
leave
test
mov
sub
loopne
lret
cld
movsb
mov
mov
xchg
push
or
and
test
daa
aaa
mov
inc
sbbb
shll
cmpsb
in
fwait
cmp
pop
pop
fs
or
ds
lcall
xor
sbb
out
sub
lret
das
dec
pop
ja
hlt
push
pop
nop
cli
aad
lahf
data16
mov
bound
ja
test
push
cmpb
sub
push
addr16
or
push
insl
pop
cmp
loopew
fidivrl
in
test
or
lcall
mov
fsubs
test
mov
fisttpl
mov
sub
gs
push
movsl
adc
out
mov
insb
push
nop
mov
mov
push
push
add
stos
xchg
xlat
sbb
mov
popf
sbb
icebp
pop
sahf
xchg
push
add
rcrb
adc
jne
aaa
fstpt
les
decb
add
sub
sub
dec
insl
push
arpl
out
push
dec
sub
mov
sub
mov
inc
and
repnz
ret
push
dec
mov
adc
adc
cmp
lahf
sub
je
inc
adc
jnp
jle
mov
rorl
cmc
push
and
inc
pop
push
mov
sti
push
or
ss
ret
push
leave
push
xor
xor
sub
or
imul
inc
fidivrs
jno
add
sbb
sbb
mov
ss
cmp
xor
push
sbb
mov
clc
out
mov
mov
xor
daa
lahf
sbb
or
cmpsb
bswap
jnp
push
ljmp
lods
adc
xor
stos
jno
mov
jp
or
and
test
jle
sub
and
fwait
push
ljmp
sbb
push
adc
outsl
loop
mov
in
sbb
loopne
xchg
add
rcll
lds
fisttpl
fsubp
dec
movsb
movsb
fldt
sub
lret
lods
ja
shlb
loop
jge
xor
mov
ret
mov
mov
or
dec
sahf
lock
or
pop
dec
lods
bound
icebp
imul
loop
sar
mov
add
addl
insb
repz
xor
sahf
mov
inc
insl
inc
call
addr16
je
enter
fs
lods
pop
in
insl
mov
loop
outsl
xchg
cmp
lods
cmc
mov
xor
mov
jle
cmpsb
inc
in
pop
push
inc
sub
cmc
xlat
aam
push
js
mov
and
sahf
out
in
add
dec
mov
aas
les
imulb
inc
in
mov
mov
pop
enter
cmpsb
fdivl
pushl
push
adc
repz
in
jle
fistpll
sbb
mov
mov
mov
popa
jp
cmpsb
imul
sub
mov
cmp
add
push
enter
or
jbe
dec
fists
aam
adc
cmc
sar
test
fsubl
out
push
xor
sbb
mov
and
or
movsb
lret
or
or
imul
sbb
loop
xchg
cli
stos
mov
xor
mov
inc
cmp
jp
int
mov
es
pop
sbb
dec
pop
lcall
inc
clc
gs
mov
in
lock
jo
push
lods
jge
iret
in
mov
mov
in
and
sub
cs
or
in
aaa
mov
xchg
jns
cmp
pop
in
and
inc
jge
cmp
mov
inc
sahf
add
mov
repnz
sub
leave
jbe
xlat
jle
jnp
inc
inc
adc
xor
mov
testl
cltd
and
mulb
xchg
sbb
jge
out
sub
dec
or
push
movb
clc
cmp
ret
jecxz
mov
mov
cmp
stc
push
int
and
notl
rclb
sub
jo
sbb
dec
fs
movsb
notl
sbb
xor
cmp
outsb
lock
paddusw
xor
push
adc
outsl
dec
xchg
dec
pop
mov
inc
addr16
jne
jl
pop
and
insb
jp
movsl
jge
outsb
sub
cmp
mov
adc
mov
push
dec
jg
ds
aas
pop
nop
cld
leave
mov
out
shll
mov
insl
mov
roll
pop
pop
inc
ss
gs
pushf
in
clc
movsl
push
es
add
aaa
dec
mov
leave
lods
sbb
and
or
xor
cmp
dec
mov
jb
xlat
xor
cmpsb
push
mov
imul
fdivrp
icebp
call
jo
lcall
cmpl
adc
cmpsl
xchg
fmuls
stos
xorb
jno
jge
mov
cmp
enter
dec
jne
arpl
popa
jecxz
jb
leave
hlt
adc
test
pushf
in
mov
ss
sti
aaa
push
adc
fiadds
hlt
cmpsl
adc
adc
add
shll
cmp
sbb
sbb
dec
push
rclb
iret
mov
pop
cwtl
fsubs
scas
adc
pop
insl
movsl
call
aam
cmpsb
sbb
fistps
or
jb
dec
daa
mov
sahf
mov
pop
lret
jp
fwait
add
clc
jns
xchg
jl
or
mov
push
rorl
ljmp
dec
ret
push
sbb
inc
fcmove
push
inc
cltd
in
or
jg
jg
push
test
cmp
add
inc
rolb
and
nop
xlat
and
iret
popf
sub
xor
push
iret
cmc
pop
or
scas
xchg
jge
stos
push
adcl
cmp
push
lahf
fwait
xchg
adc
mov
stos
aaa
gs
and
or
pop
mov
mov
lcall
repz
add
out
out
sbb
mov
dec
cs
outsl
rolb
push
out
inc
jecxz
movsb
jge
movsb
mov
push
icebp
add
loop
pusha
sub
pop
cmp
lret
rorl
into
xor
data16
mov
pop
xor
dec
cltd
cmp
push
aaa
cmp
add
pop
out
pushf
nop
sbbl
hlt
dec
fwait
sub
mov
pusha
mov
imulb
pop
sub
xor
adc
adc
aad
jmp
mov
hlt
or
aam
pop
sub
jbe
rorb
enter
jecxz
xor
pop
addr16
gs
scas
negb
les
sub
stos
dec
cmp
jo
aad
jmp
sar
add
pop
jbe
or
stos
xchg
or
int
fwait
pop
sbb
outsb
cmp
push
cmpsb
arpl
jp
andb
jp
jecxz
test
fcoml
out
test
ljmp
imul
pop
pop
jo
xchg
aas
clc
ror
add
dec
xor
mov
imul
xchg
in
xchg
cmp
fstp
dec
inc
pop
sbbb
ret
jg
fs
xchg
inc
sbb
andl
add
jge
test
loop
ja
leave
idivl
jo
mov
shll
cmpsl
faddl
mov
jg
push
loope
jl
jnp
repnz
bound
add
loope
cmp
fsubrl
leave
sbb
fs
jne
int3
pop
push
mov
xchg
ss
into
adc
adcl
mov
ss
sub
jbe
adc
das
sbb
pop
xchg
fyl2xp1
pop
lods
rolb
jnp
jecxz
jmp
xchg
lahf
add
leave
cs
jne
loop
icebp
mov
pop
push
addr16
cltd
pop
test
dec
sub
jl
pop
xor
fisttpll
push
aad
pop
push
imul
call
pop
push
mov
xor
ja
lea
mov
mov
xor
loopne
jo
sarl
xor
in
jmp
arpl
push
mov
call
dec
inc
xchg
add
xchg
pushf
xchg
clc
int
add
adc
pop
cli
sahf
mov
xor
bound
in
add
out
pop
movsl
jge
mov
dec
pushf
cltd
inc
out
inc
xor
lret
insb
movsl
ss
cwtl
hlt
mov
or
or
or
je
pop
sarl
mov
xchg
mov
add
pop
sbb
dec
jge
cld
aad
into
pop
adc
cmpsb
xchg
int3
cmp
add
xchg
dec
bound
mov
mov
sub
pop
jle
lods
pushfw
sbb
popa
gs
test
mov
dec
in
out
xchg
mov
xchg
arpl
test
sub
xchg
lock
sbb
aaa
mov
hlt
add
jo
sahf
movsl
push
sti
push
data16
mov
xor
adc
imul
xchg
jmp
dec
add
mov
fcompl
cmpsb
addr16
and
mov
inc
je
gs
in
pusha
sub
mov
outsb
and
mov
mov
int
jno
test
push
or
jge
call
xchg
das
stos
pop
and
out
int3
xchg
mov
outsl
testb
or
cltd
add
jnp
scas
stc
rcr
sub
add
or
lds
js
cmp
push
sbb
mov
xchg
mov
data16
jg
and
pop
js
fcoml
arpl
popa
pop
or
out
cmp
mov
stos
cltd
inc
cmp
test
loopne
dec
mov
push
dec
int
inc
jnp
xor
inc
pop
xor
inc
mov
dec
pop
subl
mov
sbb
xlat
xor
mov
dec
fildl
sub
stos
xchg
setbe
push
push
icebp
stos
and
dec
mov
aad
aas
mov
pop
jg
or
shrl
pusha
in
pop
cmp
call
push
fdivl
mov
aad
mov
popf
sub
aas
cld
enter
int3
repnz
cli
loop
cmp
sbb
nop
inc
dec
mov
das
sahf
xor
adc
add
shrl
mov
out
int
mov
push
gs
bound
mov
cmpsb
jecxz
test
xor
dec
jmp
mov
insb
scas
sub
mov
add
iret
in
xchg
mov
dec
mov
push
cltd
fstl
adc
dec
mov
aas
pop
jp
jmp
mov
aam
sarl
fwait
push
fadds
cmpsb
insb
inc
imul
xor
or
sub
lahf
les
lea
xchg
push
enter
sarb
ret
leave
cld
icebp
ljmp
mov
dec
mov
inc
or
mov
aas
mov
in
loopne
pop
prefetchw
mov
add
int
and
xorl
lcall
xor
adc
addr16
mov
hlt
adcl
es
dec
mov
pop
lret
test
sbb
cmp
lds
jo
mov
call
xor
cmpsb
sub
mov
cmpsb
loop
data16
js
sub
jno
insl
arpl
ficoms
test
rorl
jmp
add
outsb
fildl
out
shrl
xchg
std
add
jecxz
adc
cmp
add
adc
popf
inc
popf
dec
cmpsl
fldenv
pop
insl
mov
imul
mov
pop
push
push
leave
ja
sub
adc
jmp
and
std
mov
lods
jl
sbb
jge
lea
pusha
mov
mov
push
xchg
test
pushl
scas
fwait
movsb
cmp
dec
aas
add
pop
insl
and
lcall
inc
popa
dec
jo
cli
add
inc
iret
and
cltd
or
push
les
test
and
pop
jno
andl
hlt
xor
sub
add
push
std
sbb
sbb
pop
xchg
pop
loop
adc
into
push
sbb
push
out
cwtl
repz
lahf
dec
lret
dec
pop
test
cmp
sub
and
rep
mov
outsl
cmc
xor
mov
out
pop
pop
mov
jnp
call
and
inc
adc
rcr
stos
addr16
scas
stc
rorb
ljmp
inc
mov
jp
push
push
or
jnp
out
xlat
push
in
repz
adc
in
mov
and
mov
pop
xor
inc
inc
iret
jno
dec
jg
imul
dec
out
fwait
leave
mov
mov
addb
mov
adc
jb
adc
xorl
rcll
inc
repz
adc
xchg
ss
jne
cmpsl
and
dec
dec
mov
imul
mov
fwait
add
aad
mov
test
xchg
xor
icebp
or
or
mov
pop
addr16
icebp
xor
jb
mov
cwtl
fisttpl
mov
fsubrs
jae
sub
xlat
or
inc
pop
fxch
out
outsl
pop
push
cmp
arpl
mov
xchg
test
imul
ror
clc
jb
bound
test
inc
xchg
aaa
mov
sbb
sbb
fisttps
arpl
fsts
cwtl
mov
fwait
loop
stos
adc
nop
add
jmp
dec
pop
mov
push
pop
mov
scas
sub
fdivr
cmpsl
xchg
arpl
xorb
stos
xor
icebp
cmp
ret
outsb
hlt
aaa
mov
cld
dec
bound
xor
fs
add
dec
insl
mov
enter
dec
leave
std
cmp
push
xchg
sbb
fldenv
sahf
aas
imul
or
cmpsb
gs
dec
mov
and
push
push
imul
mov
out
movsl
cmpb
test
jne
js
call
cmc
and
jne
cld
mov
sbb
movl
fmul
add
push
sub
jno
mov
iret
jmp
fistpl
repnz
notl
int
lds
iret
enter
xchg
mov
fwait
pop
sub
dec
inc
pop
sti
jbe
inc
push
adc
imul
pushf
loope
pop
push
add
push
sub
jecxz,pt
or
daa
pop
das
pop
sbb
jle
dec
or
je
inc
adc
rol
test
add
clc
iret
jb
sbbb
xchg
pop
les
xchg
cli
pop
sarl
test
xchg
dec
ja
inc
sbb
xor
pop
sahf
inc
jg
sbb
aaa
dec
xchg
mov
adc
into
out
adc
jp
daa
cmp
mov
sub
jge
ljmp
inc
int3
lret
xor
outsl
push
push
jb
in
and
push
cmpl
sbbl
mov
jo
pop
sub
xor
mov
jmp
jle
gs
mov
loopne
inc
xor
pop
lods
and
daa
sbb
ss
mov
push
test
repnz
mov
push
fdivrl
outsl
jl
jnp
inc
inc
xchg
in
cs
pop
add
jns
jae
into
dec
int3
cmp
fwait
dec
inc
ret
adc
pop
call
sub
mov
lahf
fistpl
ror
lods
cmp
sbb
add
das
mov
test
mov
add
cmp
orb
fimull
pop
or
dec
and
xlat
insb
or
adc
mov
mov
dec
xlat
rolb
adc
cmp
popa
sbb
insb
cwtl
and
or
hlt
xchg
test
and
std
mov
xor
lret
insb
pop
dec
sbb
shlb
andps
sti
push
pop
xor
pop
and
push
neg
push
xchg
movsb
add
cmpsb
pop
decl
adc
dec
and
rep
rolb
mov
lea
or
out
xchg
and
ror
lods
aas
push
push
jno
out
add
or
mov
xor
mov
jno
cmp
jge
xchg
mov
pop
into
mov
sub
xor
mov
sahf
adc
cwtl
mov
lods
outsl
adc
push
repz
out
xchg
mov
cmp
sarl
mov
test
cmpb
xchg
imul
mov
sub
rcr
bound
fcoml
shll
fyl2xp1
clc
mov
cwtl
pop
call
lahf
cmpsl
mov
dec
xchg
lahf
and
jae
jae
xchg
sti
push
xchg
hlt
ss
and
aad
add
mov
or
shll
negb
out
adc
inc
imulb
mov
or
ja
add
fisubs
sub
jmp
and
add
sub
or
sahf
mov
and
sub
fstpt
insb
imul
mov
pop
adc
lsl
jl,pt
sub
or
cmp
js
and
popf
lds
ret
iret
mov
mul
icebp
stos
fiadds
arpl
jo
dec
jg
cld
adc
enter
fstps
pop
shl
xchg
ror
and
sub
int
fsts
enter
stc
ljmp
scas
jge
mov
pop
mov
jle
jno
gs
jl
xchg
lods
jmp
outsb
pop
repnz
add
xor
mov
bound
mov
dec
inc
nop
pop
mov
scas
dec
pop
cmp
pop
in
outsl
loopne
fistl
mov
mov
jo
scas
jbe
repnz
inc
mov
sbb
popf
inc
mov
jnp
jae
fcmovne
cmp
and
mov
xchg
inc
repnz
call
int
or
std
or
fnstenv
aad
hlt
add
out
inc
out
test
pop
cli
pop
mov
push
push
mov
push
pop
mov
sarb
clc
movsl
mov
inc
or
sub
test
push
stos
call
cmp
or
push
mov
mov
mov
dec
fs
lret
data16
mov
repz
lret
movl
xor
out
mov
mul
cmp
rcrb
xchg
sub
jecxz
xchg
sub
sbb
in
and
mov
xchg
push
push
sub
or
out
outsb
mov
xchg
or
adc
push
push
push
sbb
xchg
mov
mov
ja
adc
jne
je
sbb
or
sub
mov
inc
pop
insb
push
adc
adc
mov
push
push
cmp
jge
fwait
jp
or
fistl
filds
mov
sbb
sub
fsubrs
rolb
popf
dec
or
adc
add
lds
pop
sub
xlat
in
jbe
gs
add
int
cs
lods
cmc
and
jg
mov
in
or
dec
mov
decb
xor
inc
test
pop
mov
rcll
sub
push
or
mov
adc
add
das
xchg
inc
add
icebp
and
roll
adc
or
xor
stos
xchg
test
sub
fldenv
jno
ja
ja
xchg
ds
mov
jno
sub
xchg
jl
inc
andnps
fwait
aad
jno
cmpsb
pop
xchg
test
add
daa
iret
lcall
inc
lods
ja
pusha
or
cmp
outsb
or
loopne
fadds
roll
test
mov
lret
rcrl
push
fisttpl
mov
scas
cmpsb
xor
jae
dec
pop
fwait
xchg
mov
mov
fwait
sbb
out
aas
out
lret
or
add
inc
and
jns
mov
movsl
pop
pop
arpl
or
add
push
jecxz
rorl
mov
les
incl
lret
xchg
ret
and
sar
rcr
cmp
adc
push
arpl
xchg
pop
in
int3
push
cmp
stos
sub
or
pop
scas
pusha
mov
daa
mov
arpl
in
clc
out
xorb
jecxz
sub
dec
sbb
mov
in
nop
dec
mov
arpl
and
cmpsl
dec
loop
pushf
stc
loope
int3
outsb
jne
inc
out
sbb
adc
ds
test
js
add
test
pop
or
out
movsl
movsb
clc
js
xor
es
jo
mov
nop
mov
cmpb
lcall
xchg
fnsave
sub
mov
xchg
adc
sbb
into
cltd
call
xor
mov
mov
mov
mov
mov
xor
push
pop
or
mov
shrl
arpl
or
hlt
aaa
mov
out
repz
xchg
rorb
mov
cli
stc
adc
push
stos
sbb
shrl
mov
sub
stos
and
lret
jecxz
mov
lds
in
setae
mov
popa
ret
addr16
push
xchg
mov
test
jg
cmp
jge
jl
pop
sti
testb
call
xchg
inc
sti
bound
push
aad
jecxz
mov
stc
jnp
lret
mov
ss
dec
lock
int3
inc
push
mov
fsub
jmp
push
cmpb
ds
ficoms
mov
cld
or
jle
mov
mov
es
mov
xor
or
test
add
push
cmpsb
ljmp
mov
inc
dec
insb
sbb
mov
sbb
adc
je
jns
lods
outsl
sbb
sub
jecxz
xor
ret
lock
popf
lahf
mov
shrl
ja
in
sub
addr16
inc
mov
dec
fs
es
push
pop
imul
mov
jmp
adc
out
enter
mov
and
jns
jnp
repz
add
xor
xor
push
test
outsl
or
shrl
lahf
lahf
or
dec
int
and
ja
mov
xlat
jle
cmpsb
cmp
xor
mov
pop
dec
cmp
repnz
pop
cmp
out
inc
jl
pop
in
dec
lret
enter
mov
sbb
mov
orl
int3
mov
push
mov
push
push
pushf
or
and
cmpl
add
andl
mov
lods
jb
dec
or
std
js
inc
cmp
lds
push
xchg
int
cwtl
mov
push
js
sbb
xor
notb
push
mov
xchg
les
out
cli
inc
push
ds
rorb
mov
popf
cmpsl
mov
cmp
mov
jl
xor
das
pop
pop
cld
test
stos
jo
call
mov
jle
fwait
mov
int
push
add
repz
dec
aad
mov
roll
dec
icebp
jl
rcr
cli
stc
out
cltd
lcall
inc
imul
mov
xchg
or
add
in
ret
cmp
loop
push
push
stos
pop
mov
xchg
pop
out
sar
cs
ficomps
jno
aaa
pop
sub
mov
testb
push
incb
outsb
cli
les
notl
ret
add
cmp
repz
jl
or
clc
or
test
jg
and
data16
or
add
push
enter
mov
inc
mov
imul
push
in
loope
dec
xchg
fprem
add
imul
add
push
mov
das
sub
mov
cs
push
mov
sbb
add
add
ret
mov
sahf
add
addb
sbb
inc
jbe
xchg
dec
outsl
jge
or
lcall
cltd
test
pop
jg
gs
push
cltd
jne
test
jo
fidivrs
and
mov
xchg
sub
mov
out
ljmp
jecxz
test
and
in
gs
sub
je
jae
mov
mov
jle
test
adc
out
fidivs
pushf
mov
xorl
scas
jno
mov
das
mov
test
pop
loope
mov
test
in
std
adc
sbb
inc
mov
xchg
test
scas
stos
int
clc
sub
push
adcl
pop
mov
in
repz
lret
stc
xchg
push
loop
aaa
push
push
stos
addl
test
sbb
and
and
mov
xchg
adc
cmp
pop
lock
sbb
adc
add
sti
inc
adcl
inc
in
out
enter
pop
jns
jb
lods
es
xchg
nop
xor
xor
mov
lret
push
lret
daa
mov
push
insb
arpl
and
dec
rol
mov
aad
fdivl
fadds
sub
ja
sbb
aaa
pop
jnp
lea
repnz
or
push
pop
ds
fmuls
in
iret
jg
icebp
xchg
jno
cmp
fildl
repnz
in
adc
out
add
xchg
scas
xor
mov
icebp
hlt
xchg
je
mov
pop
xchg
arpl
and
notb
dec
jmp
jg
xchg
push
arpl
mov
dec
fidivrl
adc
push
mov
arpl
push
mov
stos
outsb
sub
imul
mov
xchg
cld
jno
lds
aad
xlat
es
mov
in
cmp
fadd
enter
cmpsb
and
cmp
orl
cmp
inc
and
push
jno
cmp
pop
xchg
push
dec
pushf
mov
mov
pusha
push
adc
mov
out
push
cmp
xchg
sbb
enter
in
or
jp
jno
inc
scas
pop
sub
ret
and
dec
xchg
jge
mov
inc
outsb
out
inc
in
test
cmp
roll
enter
cmpsl
cmp
insb
xchg
lret
enter
sahf
push
jg
loop
xchg
dec
daa
jl
sub
mov
mov
loopne
out
push
jmp
outsb
mov
xchg
int3
lret
xchg
xchg
fwait
cmp
push
and
push
std
mov
sub
inc
rcrb
gs
add
enter
test
int3
mov
push
enter
sub
sbb
inc
lret
jmp
ret
or
lret
inc
adc
jnp
out
jb
or
cmp
push
pop
movsl
rcll
inc
push
push
or
rcr
popf
jb
test
sub
movsl
or
inc
cltd
rolb
jl
inc
icebp
cmp
adc
cs
ror
gs
inc
mov
mov
jno
arpl
mov
hlt
and
or
push
mov
or
fsub
ja
sbb
movsb
gs
xor
jno
mov
mov
out
and
cmpsl
pop
add
scas
xor
add
xchg
cmpsb
out
ja
ret
mov
pop
mov
sub
mov
or
push
rol
cmp
fs
mov
loopne
mov
and
pusha
inc
adc
xchg
pop
dec
sahf
daa
sub
scas
or
mov
push
sub
test
sub
pop
int3
pop
stos
aas
xchg
jae
mov
push
mov
jnp
jmp
movsb
or
or
push
cmc
fistl
jmp
icebp
filds
int
push
xor
sub
jl
sbb
and
loop
jo
cmpsl
aad
pop
pop
loope
push
and
clc
add
test
sarl
mov
jno
mov
out
xorb
fwait
push
mov
fistps
inc
shll
into
imul
push
leave
add
xlat
stc
dec
addr16
cmc
push
daa
inc
pop
ret
inc
cmp
imul
push
aad
das
lcall
pop
xchg
mov
cld
scas
jl
mov
mov
xor
and
popa
cld
mov
jge
add
xchg
leave
add
cmp
aas
pop
and
pushf
sbb
dec
fistpll
mov
xor
enter
ljmp
add
sub
jl
int
rcrl
add
dec
pop
xchg
xor
mov
out
adc
cmp
sbb
loop
into
mov
mov
insl
pop
xor
dec
jne
subb
popa
popl
sti
adc
mov
inc
xchg
into
popfw
test
fcompl
xchg
jg
inc
test
and
in
sub
mov
xchg
shrl
cmp
shl
dec
pop
adcb
fidivs
cmp
xor
jo
xor
in
loopne
xor
test
test
xchg
jmp
lret
and
push
aad
mov
or
arpl
mov
sbbb
xor
imul
add
imul
insb
mov
inc
movsb
or
or
pop
inc
popf
jno
insb
push
call
add
lcall
and
sarl
ficoms
movsb
push
pop
mov
adc
ror
push
dec
or
mov
fcompl
imul
push
sbb
add
add
loope
mov
js
in
cmp
mov
sub
dec
movsl
push
aas
and
dec
inc
mull
or
xor
jno
jbe
xor
ljmp
xlat
fcomp
hlt
std
xor
dec
sbb
adc
fwait
in
sbb
or
pop
pop
sub
xor
sub
pop
iret
roll
lahf
dec
fmull
outsl
xchg
jmp
sbb
int3
ljmp
insb
inc
pop
aad
hlt
pop
mov
ret
adc
dec
sub
mov
mov
mov
in
movd
orl
xchg
mov
loopne
adc
jl
bound
sub
fisubrs
mov
test
loope
and
jmp
loopne
add
sub
test
shr
xchg
not
sbb
pop
shll
jle
and
inc
lock
fdivrl
sub
ftst
scas
and
pop
sub
jbe
xchg
clc
shrl
je
shlb
dec
inc
xorb
fisubrl
inc
or
ja
hlt
stos
out
outsb
iret
jle
xchg
cmpsl
pop
lret
xchg
mov
adc
and
mov
inc
outsl
mov
jbe
adcb
jne
cld
aam
aam
imul
in
imul
sub
ffree
shll
push
mov
sti
enter
cmp
loope
cwtl
mov
jmp
xorb
mov
lods
sub
sbb
adc
mov
push
sarb
cmp
dec
jbe
xchg
mov
pop
clc
loop
xor
pop
jmp
enter
and
cld
xchg
aas
push
sub
mov
icebp
mov
into
movl
std
pop
addb
jno
sub
pop
into
in
cmp
xor
adc
scas
mov
popa
imul
xchg
cld
adc
andl
inc
xor
jmp
stos
pusha
or
test
pop
inc
lock
lret
cwtl
mov
pusha
fmull
cmp
push
stos
mov
data16
xchg
inc
and
aam
or
insb
jle
mov
jg
push
xchg
jne
dec
lock
xchg
or
bswap
cwtl
pop
in
call
fdivrs
mov
jo
into
cmp
cli
outsb
push
dec
or
pop
jns
cwtl
mov
adc
test
test
push
and
mov
xchg
clc
and
or
or
iret
mov
lods
dec
dec
cmp
push
add
sbb
inc
cmpsl
and
repnz
movsl
lds
mov
outsb
int3
lea
push
adc
fldt
mov
aad
pusha
hlt
or
orl
push
ret
test
sub
sbb
into
mov
outsl
adc
cltd
movsb
jmp
inc
inc
mov
fidivrl
cs
xor
push
mov
leave
jno
int3
mov
fmuls
pop
pcmpeqw
sbb
push
pop
jge
lds
mov
aaa
outsl
jno
mov
inc
cmpsl
mov
mov
mov
outsb
out
push
dec
lea
mov
daa
jl
icebp
arpl
scas
xor
ss
push
loopne
fwait
mov
mov
daa
dec
int3
inc
sub
mov
sub
in
andl
mov
sub
pop
pop
adc
aad
repnz
ret
add
hlt
insl
xchg
sti
in
mov
push
test
cmp
out
movsl
pop
cmpsl
jo
xchg
mov
mov
pushf
incl
sub
cli
rclb
add
xor
mov
jno
fnstenv
jg
dec
les
push
jge
dec
lret
sti
incb
or
ds
popf
dec
mov
push
mov
mov
lahf
ljmp
mov
das
dec
pop
lret
std
pop
xchg
rcr
pop
lret
stc
xchg
mov
push
push
pop
dec
scas
out
outsl
pop
call
fadd
dec
mov
xchg
out
inc
xchg
aam
adc
aad
scas
in
loopne
aad
or
cmp
repnz
push
std
lods
push
pop
insb
pop
pop
lret
sbb
mov
ja
mov
mov
les
sub
and
inc
dec
push
cmp
mov
mov
outsl
or
mov
jecxz
les
vmovntps
fidivl
mov
adc
mov
lods
loopne
inc
pop
jecxz
lcall
jbe
cmpsl
mov
das
sub
cmp
outsb
pop
mov
push
mov
pop
lods
cmp
stos
test
inc
cli
dec
sub
push
or
and
adc
test
cmp
mov
sub
sub
aas
mov
sbb
mov
test
push
stc
add
cmp
movsl
fcomi
cs
repz
shl
add
mov
add
jns
aaa
pop
push
push
xor
outsl
add
mov
xchg
outsb
or
lret
popf
inc
jge
dec
dec
jne
sbb
inc
xchg
sar
out
and
ret
pop
in
dec
mov
and
xchg
enter
fwait
pop
nop
mov
loopne
lock
iret
xchg
das
jo
into
test
jge
lods
inc
jb
sub
add
scas
sub
ficomps
inc
mov
mov
adc
outsl
or
jo
das
and
jg
push
sub
test
or
mov
or
xchg
loope
gs
add
jnp
lret
add
and
jo
sbb
jb
inc
jne
mov
insb
add
in
cmp
repnz
mov
cltd
push
popf
sub
cmpsl
aaa
sbb
push
sti
inc
rclb
fwait
and
orl
movsl
xchg
repz
jnp
pop
stc
in
xor
and
mov
ja
sub
or
outsl
pop
negb
mov
sub
pop
sbb
xchg
push
and
pushf
dec
enter
xor
aam
mov
mov
out
addl
push
cmp
js
iret
jb
ja
and
inc
mov
cltd
sub
mov
mov
jle
jg
inc
mov
addb
cltd
cli
xor
popa
push
lret
int
xchg
stos
xorl
jl
aad
jnp
add
idivl
xor
and
dec
pop
fistps
pop
cld
fcoml
sub
ret
gs
adc
push
jmp
out
sbb
inc
je
iret
pop
mov
arpl
divps
mov
inc
pop
sbb
hlt
xchg
xchg
jge
fnstcw
ljmp
aad
inc
repz
subl
sbb
andb
je
xor
jg
jmp
fwait
push
es
and
aaa
scas
cltd
xor
push
data16
sub
and
or
cmp
and
int3
stos
aad
daa
mov
cwtl
lret
inc
and
jle
sbb
jno
cmp
insb
sub
push
mov
ss
xchg
xchg
pop
pop
daa
sub
sub
test
shll
nop
iret
xor
jbe
rcrl
lock
xlat
mov
test
fimull
mov
push
fmul
cmp
les
in
pop
es
popf
fimull
std
popa
mov
pop
hlt
scas
in
ljmp
adc
shrd
adc
sub
pop
inc
mov
imul
les
test
mov
mov
mov
aad
sbb
pop
sahf
js
aam
stc
sub
cmpsl
popa
push
fsts
arpl
pop
jno
in
xor
int
mov
and
vmread
sub
aad
enter
fwait
jnp
sbb
pop
xchg
dec
mov
cmpsl
rcrb
rcl
cld
push
add
enter
lahf
in
mov
xchg
lods
mov
sti
cltd
into
fisttpll
inc
cmp
push
mov
scas
or
aad
lods
ljmp
and
fwait
outsb
popf
lret
mov
cltd
addr16
adc
sbb
mov
ret
icebp
lret
sbb
cli
push
bound
lock
add
jmp
cltd
jne
add
push
in
fnstenv
cli
fimuls
cmp
mov
lods
or
arpl
pop
call
sub
mov
pop
ret
lods
addr16
mov
xchg
icebp
mov
cwtl
push
push
mov
lret
mov
das
fcomi
mov
push
enter
sbb
xchg
sub
and
test
lods
movsl
leave
cld
adc
cmpsb
xchg
cmpsl
dec
jae
push
incb
out
fnsave
sbb
mov
dec
add
xchg
fcompl
idivb
pop
fsts
out
add
xor
out
or
cmc
adc
sub
adc
mov
test
xchg
pushf
out
pushf
mov
dec
adc
outsl
jle
stos
outsl
int
fidivs
insl
mov
fdiv
outsb
pop
adc
and
ja
ror
sbb
add
ffree
repnz
pop
fisttpll
mov
inc
leave
pop
testb
xlat
test
icebp
movsb
and
push
test
xchg
int
std
mov
sti
sti
sub
data16
push
jnp
cmp
xor
sbb
pop
pop
repnz
cmpb
xchg
mov
aad
test
incb
test
aam
mov
adc
push
mov
or
mov
jae
lea
arpl
fstpl
mov
jmp
icebp
mov
test
fisubl
scas
mov
mov
shll
scas
mov
repnz
mov
fdivrs
pop
aad
iret
clc
fsubs
or
loop
xchg
jmp
add
es
cltd
cmc
shll
adc
cmp
xchg
je
lock
pop
and
sub
sahf
movsl
jmp
bound
mov
xor
lret
sbb
fdivrs
aam
cmc
lahf
sbb
add
daa
dec
loopne
cltd
sub
clc
jo
leave
fdivp
cmp
cmovp
movsl
cwtl
mov
cs
mov
jae
mov
enter
mov
das
sti
cli
cli
xchg
loopne
aas
fnstcw
stc
and
es
iret
dec
insb
stos
lret
xor
xor
inc
sahf
repz
mov
push
jne
lods
xor
xor
ds
push
imul
fwait
lods
fnstenv
sbb
nop
cli
or
or
mov
sbb
mov
mov
jle
jnp
in
js
lahf
xor
cmp
push
cld
stos
push
jbe
xor
xchg
pop
movsb
dec
sahf
scas
in
andb
mov
insl
movsb
clc
sub
insl
push
adc
fisubs
es
je
jecxz
sub
sub
cmpsb
aaa
dec
and
outsb
sarl
out
mov
cmp
push
inc
sbb
jbe
jmp
pop
sahf
es
mov
pusha
loopne
ret
js
in
into
popa
cltd
lock
outsb
enter
movsl
imul
mov
jp
frstor
mov
getsec
aam
test
loope
push
test
mov
push
pushf
add
dec
lods
loope
cmp
or
aad
xlat
movsl
cmp
cltd
sarb
and
imul
mov
add
loopne
insl
xchg
test
cmp
mov
sub
pop
bnd
stos
xchg
lea
les
fisubrs
out
mov
cmp
jne
notb
in
pop
ds
cmp
test
stos
adcb
fsub
pusha
inc
lods
or
scas
and
cmp
xchg
add
hlt
sbb
mov
mov
adc
jle
jmp
pop
mov
mov
enter
inc
and
sbb
mov
and
jle
jg
jns
jne
outsl
pop
loopne
dec
sahf
add
insb
and
outsl
dec
adc
fisttpl
mov
xchg
fbstp
popf
push
mov
sahf
sahf
rcrb
sub
push
push
outsl
test
push
push
adc
and
bound
push
pop
cmp
cmp
and
jae
rorl
inc
mov
xor
adc
mov
mov
iret
outsb
icebp
shll
outsb
cmp
adc
insb
movsb
sbb
mov
divl
out
mov
jo
cli
dec
jmp
xchg
add
fisttps
shrl
push
add
pop
add
mov
rorb
and
and
out
sub
xchg
xchg
jecxz
cmp
insl
jae
pop
pop
bnd
or
sub
inc
mul
int3
ss
lcall
adcb
mov
fmul
xor
xor
in
sbb
outsl
add
jbe
sbb
sub
pop
movsl
rclb
or
adc
popa
mov
out
aaa
pop
add
insl
jns
pushf
testl
mov
cmpb
insb
jnp
cmpl
lods
jmp
aam
adc
jmp
mov
lods
push
int
mov
addb
dec
test
xlat
aam
ljmp
mov
lcall
dec
add
inc
scas
sbb
adc
dec
inc
lret
xor
scas
jno
cli
sub
pop
fidivrl
aad
inc
mov
cmp
sti
clc
jns
pop
push
push
ja
mov
xchg
mov
cmpsb
mov
aad
xchg
mov
jl
test
daa
jl
repnz
sbb
aas
pop
dec
dec
add
push
adcl
mov
pop
dec
push
cwtl
dec
add
dec
inc
or
cmpsb
popa
pop
mov
jnp
sbb
mov
cmp
pushf
xor
and
in
xchg
pusha
insl
shrb
adc
ficoms
xchg
out
and
icebp
lods
ja
out
cmpsl
lods
or
rcr
pop
mov
jnp
fisubl
lahf
mov
push
push
mov
addr16
js
popl
stc
jns
movsl
fwait
and
sbb
cmp
popf
push
loope
mov
dec
or
fildll
mov
pop
in
fs
mov
push
pop
push
xor
fwait
inc
in
dec
inc
mov
jo
addb
sbb
sahf
movsb
inc
add
cs
mov
stos
or
xchg
or
jp
xor
sub
adc
gs
push
popa
test
mov
fucomip
stc
lods
shll
lea
mov
adc
movsl
sbb
push
cmpl
or
pop
dec
adc
std
push
sti
xchg
sbb
and
push
shlb
jmp
cld
mov
mov
shl
and
lahf
insb
dec
faddl
jmp
mov
mull
divb
push
lock
push
mov
sbb
in
pop
mull
push
test
cmp
jnp
push
xchg
push
mov
pushf
xchg
leave
xchg
pop
mov
xor
lds
xor
fstpt
sub
daa
test
xchg
data16
and
movsl
xor
mov
mov
sub
push
lods
ja
icebp
mov
mov
sbb
or
sbb
sahf
xchg
ss
sahf
mov
jbe
xchg
mov
fcmovu
popa
mov
mov
add
jg
je
repnz
mov
adc
push
rorl
xor
mov
negb
add
dec
incl
lret
mov
jle
adc
adc
ljmp
cld
outsl
or
or
jecxz
in
add
inc
push
jecxz
cmp
stos
pop
andb
popf
pushf
stos
sti
jge
sahf
and
push
in
out
inc
adc
dec
mov
movsl
push
cmpsl
lock
sbb
mov
adc
jo
mov
dec
add
xchg
jnp
inc
rclb
sbb
add
sub
into
fisttps
arpl
pop
xlat
or
clc
cs
mov
mov
mov
cmp
jno
hlt
adc
pusha
xor
jno
in
insb
pop
jp
sbb
dec
xchg
test
fs
mov
dec
pushf
adc
ss
cltd
mov
sub
or
imul
bound
xchg
xor
dec
or
mov
lcall
or
test
pop
cmp
and
sub
iret
pop
ljmp
fstpl
outsb
stc
and
movntq
out
loope
mov
lods
push
scas
call
bound
mov
neg
fldl
lcall
test
mov
dec
cmp
mov
xor
xchg
pushf
fcoml
lahf
pushf
sbb
inc
pop
or
out
adc
push
inc
out
repz
pop
and
or
pop
sbb
out
push
arpl
mov
movsl
xor
pop
jnp
and
dec
adc
fucomip
lcall
je
pop
test
mulb
jge
sub
loop
and
or
or
push
jae
ds
xor
xchg
cmpsb
dec
inc
outsl
jl
adc
outsb
clc
push
int3
xchg
xchg
shrb
imul
cmpsb
dec
ds
mov
pop
in
pop
dec
push
mov
imul
fisubl
das
stos
add
cs
mov
mov
lea
xchg
enter
pop
or
pushf
in
sbb
cmc
push
insb
or
adc
xor
dec
loope
xor
and
xchg
pushf
xchg
or
jno
or
pusha
dec
push
add
inc
sti
mov
and
popf
cmp
sub
icebp
jge
ds
and
xorb
jl
xchg
aas
fwait
inc
loope
xchg
sahf
lahf
jno
imul
mov
subl
andb
xor
sbb
pop
pop
mov
insb
push
xchg
mov
test
sub
or
mov
es
mov
xchg
add
mov
js
cli
xor
adc
imull
cwtl
sub
cmpsl
and
lahf
stc
popf
jae
out
push
adc
scas
test
pusha
cwtl
push
sti
inc
mov
sub
shll
bound
mov
cmp
pop
daa
data16
jns
pop
iret
into
scas
cltd
adc
mov
scas
sub
push
and
mov
subb
jo
inc
add
xor
xchg
adc
and
xorl
test
sbb
into
jne
lret
pushf
das
push
xor
pusha
mov
into
inc
ret
sbb
add
ja
rolb
lcall
adc
adc
jno
flds
push
sbb
out
ljmp
je
pop
or
imul
lods
xor
ret
pop
xor
jb
icebp
push
and
sbb
das
ljmp
filds
movsb
aad
xor
push
pop
movsb
mov
add
lods
lcall
shlb
sbb
arpl
cmp
movsb
jne
adc
sub
mov
and
in
jbe
mov
mov
xchg
mov
jbe
or
gs
jl
jne
ret
aam
mov
xlat
push
pop
dec
dec
jnp
aas
jle
flds
sbb
or
inc
pop
jmp
inc
enter
jae
bound
iret
mov
and
xchg
sbb
lods
sar
adc
sbb
gs
ret
test
gs
and
movsb
sub
inc
ret
or
dec
xchg
xor
cmp
add
mov
lahf
lret
xor
mov
xchg
mov
mov
xchg
out
push
sahf
sub
add
test
push
cltd
lea
adc
sub
jb
push
adc
pop
in
xor
jp
push
mov
ret
add
sahf
adcb
pop
pop
jae
pop
fdivrl
test
jge
xor
jecxz
dec
pusha
or
xchg
icebp
lahf
in
test
add
loopne
ss
dec
idivb
dec
mov
das
xchg
ret
addl
push
and
test
mov
enter
insb
les
push
cmpb
outsl
out
sahf
pop
push
int
in
or
xor
loope
or
loopne
dec
mov
jb
pop
and
lea
xchg
push
and
into
xor
orl
jle
ja
jl
push
pop
adc
lret
adc
mov
lock
adc
sub
jbe
mov
pop
pop
jbe
ret
xor
out
lods
add
std
test
shr
jns
inc
lahf
out
enter
mov
jecxz
lcall
icebp
mov
xor
dec
popa
lahf
sti
pcmpgtd
or
fs
andl
mov
mov
ljmp
pop
dec
xlat
arpl
stos
imul
sbbb
int
insb
sti
int
imul
in
shll
test
mov
mov
shlb
and
push
test
cmp
cmp
dec
cmp
aas
and
lret
int3
jno
test
push
into
leave
mov
mov
dec
adc
loop
lock
push
in
sbb
loopne
ja
fstl
dec
orl
cmp
lods
outsl
das
les
xchg
mov
lret
decb
lock
mov
jmp
and
dec
in
sbb
cmp
dec
add
mov
xor
jle
cmp
cmc
fistpll
nop
gs
xor
jb
xchg
sbb
repz
out
iret
xor
test
push
fnstcw
cmp
add
mov
stc
sbbl
adc
inc
ret
rorb
add
test
adc
addb
repnz
stos
push
xchg
push
inc
jbe
push
rclb
push
movsb
push
jp
pop
inc
push
push
in
iret
inc
mov
and
mov
mov
mov
inc
xchg
inc
std
fs
stos
leave
scas
into
cmp
mov
push
addr16
pop
pop
pushf
xor
fidivrs
imul
or
nop
and
addr16
sub
mov
test
jl
enter
inc
cld
repnz
fldl
mulb
xchg
sbb
loopne
inc
stos
cli
sbb
or
data16
sub
ja
test
lahf
stos
inc
and
add
mov
fwait
sahf
pop
cmpsl
nop
xchg
jle
repnz
incb
pop
cmpsl
or
pop
xchg
lods
xor
shlb
rcrl
mov
mov
mov
jno
adc
imul
mov
sub
xchg
test
mov
testl
test
call
mov
in
mov
lahf
and
inc
xlat
pop
or
inc
bound
and
jle
and
inc
fists
and
cmp
jae
fs
shl
popf
insb
fistpl
shrl
gs
dec
or
in
xlat
mov
sbb
std
sub
sbb
dec
jmp
subl
adc
test
sub
notl
or
mov
xor
jns
inc
xorl
jne
mov
xchg
add
or
push
outsb
xor
adc
xlat
clc
ret
adc
jmp
jmp
enter
add
xchg
pop
in
jno
fcomip
aad
in
xor
ret
jno
fbld
testb
lock
fstpl
adc
aad
xchg
mov
mov
push
xchg
test
pop
xor
lret
sbb
andb
and
jo
inc
push
repnz
js
push
cld
push
insl
ret
lret
pop
lods
shl
or
jne
cmp
daa
or
jae
ret
jecxz
mov
adc
stos
outsl
push
add
dec
add
inc
imul
mov
es
daa
mov
add
add
pop
push
xor
add
rcr
stos
dec
jp
jge
cmp
mov
ret
jo
lods
xchg
and
mov
xchg
add
push
in
cmp
adcb
std
lret
lcall
cld
xor
push
xor
fsubrs
mov
ss
das
and
leave
xchg
mov
imul
test
fdivrs
test
jmp
inc
pop
les
push
je
push
lret
xchg
lret
dec
inc
shlb
and
pop
mov
into
fidivs
lock
xchg
sub
push
xchg
loopne
xlat
pushf
push
lods
xor
imul
mov
or
xchg
push
add
xchg
mov
movsb
xchg
jno
lahf
cvtps2pi
add
or
cmp
add
jo
insb
mov
jecxz
movsl
push
push
xor
jmp
cmpl
lds
pop
lock
dec
dec
sarl
scas
sti
insb
mov
push
pop
bound
jp
std
rcrb
or
pop
pop
cmp
daa
in
and
jg
je
pop
mov
xchg
mov
sahf
out
pop
jmp
pop
lret
xchg
mov
jl
outsb
pop
cli
std
cwtl
and
jmp
movw
or
popf
decl
pop
fcomps
xor
dec
dec
shll
pop
cmp
and
fsts
mov
fcoms
mov
rcr
adc
cmc
xchg
dec
das
xchg
cli
mov
leave
pushf
test
divl
lds
lret
pop
sbb
orl
jp
mov
xchg
push
outsb
pop
xor
cwtl
sub
push
adc
int
stos
sbb
mov
jg
inc
cli
fs
pop
add
xlat
adc
add
cmp
pop
rcrb
xchg
lea
test
xchg
xchg
lcall
or
adc
ja
xchg
ljmp
push
mov
mov
sub
js
sbb
insb
sbb
loopne
pop
push
pop
cmp
mov
sbb
mov
rcrb
xchg
jnp
lret
outsl
push
das
xlat
and
repz
out
cwtl
push
ss
inc
jne
sbb
or
inc
outsb
jno
add
or
cltd
mov
sub
lock
test
int3
flds
shrb
push
call
jo
and
cli
mov
repz
rcpps
fdivl
xchg
jne
dec
dec
and
lret
leave
mov
sub
adc
aaa
enter
pusha
ljmp
loopne
mov
leave
push
jns
cmp
push
sarb
push
pop
jns
aas
xor
and
sti
push
ljmp
mov
mov
mov
fs
inc
mov
mov
inc
pop
aaa
imul
cltd
lret
in
push
dec
leave
popf
jns
mov
lds
cmpb
imulb
push
in
mov
mov
mov
xor
test
xchg
dec
mov
ficoms
arpl
shr
adc
xlat
cmp
jecxz
mov
addr16
and
repz
xlat
dec
mov
jl
cld
sbb
gs
add
jp
pop
dec
mov
push
fstpl
mov
mov
xchg
cmpsb
sub
and
dec
mov
and
inc
flds
mov
out
dec
lods
mov
cmp
sbb
mov
cmp
or
adc
jb
gs
pop
das
fistps
sub
and
sub
sbb
pop
test
mov
das
mov
outsl
std
gs
and
mov
sbb
aad
xlat
sbbb
imul
add
mov
adc
xchg
lret
inc
outsb
xchg
add
insl
cmpsb
ss
pop
mov
sub
mov
cmpsl
divb
adc
popa
push
aaa
sbb
cmc
xchg
movsb
dec
shll
adc
addl
inc
sbb
inc
adc
push
iret
push
int3
jo
out
out
cltd
enter
mov
lods
hlt
bound
fs
dec
out
xchg
sahf
sbb
int3
lea
inc
and
into
cli
cmpsl
leave
clc
adc
mov
jbe
inc
icebp
mov
repnz
rolb
cmp
subb
jne
sbb
hlt
idivb
movsl
gs
testb
add
sbb
xor
xchg
iret
mov
xchg
cld
nop
xor
cmc
xchg
pushf
adc
push
imul
fxsave
cmp
leave
pop
insb
sub
movsb
fdiv
ss
cmpsb
sbb
pop
cmp
jnp
mov
out
bound
jg
test
mov
cmp
sub
movsb
pop
sub
sbb
jmp
xor
xor
lds
mov
jbe
pop
pop
jg
xlat
dec
imul
enter
push
xlat
sbb
mov
sub
cmp
int
cmpsb
test
lcall
jno
aaa
loopne
mov
into
sarl
les
dec
repz
loopne
cli
sbb
push
sbb
orb
shrb
clc
pop
dec
stos
popa
and
add
jle
pushf
pop
ja
jo
out
test
arpl
aas
shl
adc
outsb
jmp
or
lret
int
cmpsb
in
out
pop
insl
add
nop
push
and
push
popa
mov
xor
push
jae
and
pushf
sbb
sbb
and
xor
repnz
sbb
adc
jg
xchg
imul
rcl
pop
or
fs
add
xchg
ljmp
ja
mov
into
jge
mov
clc
out
movsb
mov
in
out
push
cmp
jne
ljmp
jno
inc
sbb
out
adc
cmp
out
scas
push
push
inc
pop
lea
stos
cmp
cli
out
gs
xchg
es
ja
pop
lods
adc
js
rolb
addl
sbb
jecxz
jecxz
cmp
xor
popa
scas
pop
jg
adc
xchg
xchg
and
out
stos
scas
jns
mov
mov
adc
icebp
idiv
inc
loope
mov
or
call
fdivs
dec
icebp
push
sbbb
ret
dec
inc
xor
pop
adcl
stc
mov
mov
sbbl
fwait
mov
shll
jnp
jns
or
in
jle
ror
dec
fcmovne
outsl
xor
push
paddsw
je
xorb
adc
add
daa
pop
daa
int
out
lahf
and
cmp
nop
rcrl
maxps
xchg
mov
sar
iret
lahf
mov
push
sti
fdivrs
inc
pop
les
hlt
pop
dec
inc
mov
mov
test
lahf
fildll
out
add
cmp
loopne
mov
lret
outsl
ret
jge
cwtl
cmp
out
mov
aas
sbb
pop
mov
test
lcall
inc
sbb
mov
rclb
into
jl
std
push
fwait
lret
or
add
mov
movsl
mov
pop
cld
mov
and
push
xchg
fs
loopne
lret
ficoml
and
mov
add
adc
fstps
push
fistpl
adc
lahf
dec
rolb
shl
es
inc
ljmp
dec
cmp
add
xor
fstpl
in
and
mov
mov
lret
fwait
outsb
mov
enter
lea
test
xor
divl
pop
rorb
mov
add
das
xor
lea
addr16
xchg
fbld
sbb
shl
ljmp
adc
cmc
ffree
int
inc
jl
dec
pop
jle
and
xor
sbb
or
pop
stos
jmp
xchg
mov
lock
iret
outsl
out
out
sub
mov
push
lock
adc
lret
sub
add
outsl
test
xor
xchg
icebp
in
mov
aaa
push
xchg
jmp
jge
lahf
inc
xchg
mov
sub
js
jae
xchg
fidivs
sbb
pop
sub
jge
das
ret
add
mov
jge
jno
mov
or
add
mov
cmp
movsl
rolb
pop
mov
fucomip
sbb
imul
xchg
and
jno
push
sbb
pop
out
and
xchg
push
dec
push
pop
test
and
cmp
mov
and
movsl
cld
sub
imul
push
xchg
pusha
push
jg
aas
fwait
and
lret
jecxz
adc
sub
mov
nop
ss
outsl
dec
imul
pop
inc
sub
push
sbb
pop
push
cs
and
insb
fdivrs
lret
mov
aad
in
mov
sub
fadds
push
mov
push
mov
jne
int3
pop
pop
push
stos
test
jge
mov
mov
mov
mov
push
mov
mov
sub
decl
or
xchg
lret
mov
push
ret
outsb
mov
in
jns
push
pop
mov
das
lods
pop
fsubr
xchg
jmp
add
inc
fistps
mov
sbb
sub
or
push
popa
leave
pushf
mov
shlb
loope
inc
push
rolb
je
or
jne
imul
lea
push
fidivl
mull
push
add
ss
push
mov
adc
outsl
mov
leave
gs
es
push
sub
loopne
scas
sti
inc
lods
mov
push
ds
xchg
movsb
and
dec
rolb
loopne
popa
mov
cmpb
sub
pop
leave
jno
mov
inc
lahf
shlb
xlat
cmp
fildll
hlt
push
int
push
js
jmp
push
push
outsl
out
test
add
mov
mov
add
pusha
cmp
lea
imul
lahf
stos
ja
fstps
sti
xor
cltd
hlt
xor
pop
jns
popa
hlt
int
into
sub
aad
mov
jge
inc
mov
stos
pop
shlb
xchg
fsts
xchg
and
adc
adc
pop
push
and
mov
dec
fidivs
test
dec
adc
insl
add
shll
jo
sub
mov
adc
cmp
pcmpeqb
popf
imul
icebp
mov
ret
xchg
push
cmp
dec
push
daa
int
inc
aas
mov
dec
cmc
xor
pop
jg
ret
mov
mov
addr16
cmp
dec
xchg
lahf
pop
imul
dec
ss
pop
mov
scas
pusha
mov
pusha
insl
stc
inc
or
mov
sub
mov
mov
and
es
inc
push
xor
scas
dec
and
add
shll
cli
or
sub
push
roll
ret
pop
xchg
fwait
popf
push
add
push
add
jnp
int3
and
stos
sbb
and
dec
xchg
jbe
pop
push
and
push
movb
add
push
das
adc
out
cmp
imul
mov
mov
mov
inc
mov
add
dec
dec
xchg
sbb
cmp
cmp
xlat
pop
pop
rcl
xor
test
mov
in
enter
into
inc
lods
lret
lods
stos
arpl
sbb
mov
xor
mov
loop
testl
sbb
sub
push
mov
insl
mov
xchg
fsubrs
fsubr
inc
fwait
loope
jae
lcall
and
clc
dec
pop
add
stos
leave
mov
mov
mov
les
addr16
cmp
test
ljmp
aas
lds
cmp
mov
fwait
divl
mov
sub
push
movsb
sbb
xchg
cli
xchg
pop
dec
lods
sub
rclb
outsb
loop
notl
cs
cmc
push
sub
aas
xor
adc
je
pop
pop
mov
loop
dec
push
inc
mov
ljmp
dec
push
sti
loope
sti
dec
xchg
test
jno
ret
sbbl
je
mov
lcall
int
push
popf
pop
mull
loopne
aam
cs
and
xchg
push
pop
mov
inc
out
cld
sbb
jae
or
stos
jle
add
add
pop
sub
ss
outsb
mov
test
gs
shlb
mov
xchg
xchg
push
fsts
pop
lcall
push
jns
je
inc
decb
sub
lds
mov
sub
aam
xchg
in
insb
inc
sbbl
daa
adc
cmpsl
imul
clc
sbb
sbb
sub
mov
jb
mov
lret
xchg
jg
nop
js
adc
fwait
inc
pop
outsb
push
adc
shl
adc
adc
cmp
pop
jl
imul
and
cmp
mov
icebp
mov
pop
cmpsl
cs
cwtl
add
add
dec
and
cmp
push
aam
cmpsb
fidivrs
iret
lods
xor
xchg
iret
cmp
gs
mov
sahf
insl
add
pusha
testb
and
xlat
jl
add
cmp
dec
jb
fldcw
mov
jl
icebp
xchg
idivl
jle
bsf
jns
push
les
enter
jmp
cmp
lds
incb
dec
xchg
sahf
pop
xor
or
mov
jp
jnp
jmp
gs
mov
rcll
icebp
inc
jle
pop
lahf
dec
or
hlt
in
loopne
cmp
mov
jmp
push
push
push
ret
xchg
ret
cs
and
jge
or
jbe
lods
inc
pop
push
rol
mov
movsl
mov
cmp
repnz
sub
pop
mov
ja
movsb
in
test
outsb
call
jo
mov
repz
dec
sbb
jle
push
mov
fsubrs
xchg
add
ret
add
xlat
iret
seta
inc
mov
cmc
xchg
push
jb
adc
rclb
ret
add
cmpsl
fnstenv
sbb
push
dec
push
jg
pop
mov
jl
jbe
aas
cs
rclb
shlb
dec
insb
mov
stc
jns
std
push
mov
ds
rclb
inc
out
mov
cmp
lock
aam
pusha
add
pusha
arpl
mov
and
fsub
inc
jbe
in
and
lods
xlat
xor
int3
jmp
xchg
dec
lea
pop
icebp
or
pop
xor
pushf
dec
js
push
dec
add
clc
jle
inc
cmpsb
pop
xor
pop
ljmp
mov
es
aaa
into
mov
fdivl
mov
push
inc
mov
jae
inc
mov
in
push
and
jbe
push
jecxz
out
mov
sub
mov
jecxz
xchg
xchg
rol
inc
pop
mov
sub
cmpsb
ret
fisubs
mov
jge
out
xchg
push
rcr
out
gs
and
ljmp
push
dec
bswap
adc
xor
sbb
mov
aad
adc
repz
outsl
clc
pop
int3
mov
push
or
daa
mov
mov
mov
and
add
adc
pop
loop
leave
ret
fstpt
fcoml
cwtl
mov
inc
outsb
adc
mov
jb
fdivs
enter
fcomp
add
mov
jae
aas
outsl
inc
mov
pop
and
pop
or
aaa
movsb
push
ret
pop
and
pushf
hlt
mov
xchg
mov
jp
dec
mov
mov
ss
mov
cmpsb
insb
or
les
jle
xchg
pop
push
pop
and
jne
das
jge
add
imul
add
and
imul
sarl
subl
fiaddl
push
mov
jge
push
mov
pop
iret
test
jne
out
aad
mov
pop
dec
ret
stos
je
pushf
mov
and
sub
xchg
hlt
mov
jl
mov
xchg
pop
mov
jge
pusha
popf
lret
cs
aas
lock
cmp
scas
or
mov
xchg
cli
mov
lods
mov
sub
jp
jge
and
fimuls
xchg
fists
rolb
gs
insl
cmpsb
fwait
mov
xchg
aam
stc
pop
cmc
inc
pushf
adc
mov
pop
adc
jg
lea
adc
push
movl
cmp
test
sbb
mov
lock
aaa
mov
cmp
jb
xor
arpl
cwtl
mov
call
rcrb
movsb
add
sti
cmpsb
mov
mov
cmc
les
les
xchg
jae
in
inc
movsb
add
dec
pop
aaa
sbb
xchg
cltd
push
inc
lahf
jno
test
sub
repnz
loope
out
rcrb
out
jnp
sbb
jnp
test
emms
call
mov
sbb
mov
jecxz
pop
mov
jbe
enter
push
adc
jl
addr16
mov
pop
adc
adc
xor
xchg
mov
mov
push
lea
or
xor
movsl
popa
xchg
adc
mov
lods
into
and
push
subl
pop
jle
jg
add
inc
pop
push
xlat
or
loopw
popf
cli
pop
cs
sub
mov
int3
xor
sti
mov
mov
movsl
in
test
dec
aad
mov
mov
mov
sti
pop
cmpsb
in
jg
shlb
mov
inc
les
cld
sbb
aaa
pushf
push
or
out
std
xor
xchg
paddsb
sbb
and
cmp
popf
mov
bound
sub
in
lods
or
lahf
clc
xchg
sbb
push
into
test
pop
push
mov
addr16
repnz
dec
mov
sbb
pop
fnsave
rcl
sbb
leave
bound
xor
mov
add
mov
ds
jge
jae
pop
sbb
inc
mulb
jge
cmp
mov
ret
imul
lock
or
sbb
movsb
sub
or
pop
jns
and
pop
mov
jno
imulb
pop
cmp
mov
add
jl
push
lock
test
popa
imul
dec
ret
pop
pop
and
jge
inc
inc
aaa
inc
add
andb
and
stos
pop
faddl
cmp
pop
stc
cmpsb
sub
insb
cmp
sahf
jmp
jmp
dec
sarb
jno
dec
cmp
xchg
mov
push
add
mov
push
jnp
adc
insb
stos
test
xchg
imulb
mov
fadd
sbb
add
fidivrs
mov
push
sbb
mov
ja
lock
jns
jp
pop
cli
and
sbb
push
in
lahf
adc
daa
int
popa
outsl
jbe
mov
movsb
and
jle
nop
xchg
jae
sub
shl
fdivl
xor
shr
or
daa
lcall
push
push
mov
lds
mov
and
cmp
jmp
stos
cmp
in
mov
sbb
jb
dec
cmpsl
das
xchg
adc
les
xchg
jne
push
ja
ret
inc
dec
sti
pand
add
addr16
mov
fstpt
cli
xlat
sbb
mov
sub
dec
pop
jp
daa
cmp
out
outsb
pop
mov
lahf
add
xchg
fdivs
pop
jb
jmp
push
ljmp
and
jno
std
sub
inc
int
push
test
popa
icebp
lahf
inc
nop
fcompl
addr16
pop
arpl
push
pop
xchg
decl
inc
and
adc
int
mov
push
nop
inc
fnstsw
mov
inc
and
cld
xchg
lret
sub
mov
inc
pop
insb
push
mov
cmpsl
sub
out
fnsetpm(287
pop
pop
inc
sub
mov
xchg
outsl
dec
iret
mov
and
cs
js
pop
in
call
repnz
jae
cmp
push
add
divb
sub
sar
clc
add
bound
jns
popa
cmp
dec
nop
jg
pop
cmpsb
jle
adc
mov
leave
add
adc
xor
sub
leave
lcall
push
leave
jl
dec
adcb
jne
jecxz
pop
cmp
mov
jg
loop
inc
mov
mov
in
lock
std
push
mov
ds
insl
lret
and
mov
xchg
js
push
xchg
and
jne
iret
dec
dec
arpl
mov
dec
rcrl
mov
ja
mov
sbb
jae
lods
or
cli
push
mov
push
sbb
and
loopne
movl
mov
sarb
and
mov
inc
or
into
ret
dec
in
lds
aas
add
out
pop
pop
neg
fnstsw
mov
push
mov
cmc
push
push
jbe
sub
and
fs
bound
scas
rolb
mov
mov
or
pop
imul
fwait
daa
inc
int
and
sub
push
out
lds
jnp
sbb
test
jae
pop
or
and
pusha
in
div
mov
or
and
jle
test
pushf
repnz
in
mov
inc
fdivl
adc
mov
sub
adc
faddl
int
jae
xor
jno
add
lret
shll
pop
adc
cmp
jnp
push
inc
jb
int
mov
daa
jo
arpl
fwait
std
mov
add
cmpl
pusha
pop
mov
out
pop
jno
hlt
xor
or
ficoml
scas
and
leave
arpl
stos
fcmovnb
pop
popf
add
enter
mov
loope
stos
lret
mov
rcl
out
pop
negl
pop
sahf
dec
pop
jno
aas
pop
and
shlb
dec
push
loop
pop
sub
mov
mov
cmp
xor
loope
les
enter
or
int3
std
sub
movsb
push
stos
stc
cwtl
pop
xor
popf
dec
fcomps
adc
dec
mov
pop
dec
or
aaa
xor
outsb
xchg
pushf
sti
lods
adcl
ret
dec
xchg
cmc
sbb
pop
push
inc
setle
int
push
lret
push
or
cli
sub
add
dec
mov
fldenv
mov
test
stc
mov
mov
loop
mov
rcll
push
xchg
fcomps
or
or
mov
test
stos
sub
xchg
stc
sub
iret
aad
pop
sbb
fnsave
xchg
lock
pusha
adc
rcl
test
xor
jge
nop
dec
insb
mov
pop
in
or
test
sub
sbb
xor
add
nop
add
out
jae
or
into
fdivrp
js
lock
sub
int3
pop
mov
clc
jg
push
push
out
dec
pop
lret
repz
and
xor
fnsave
jmp
sub
outsb
xchg
in
inc
dec
add
mov
jmp
lret
sub
jae
mov
cmp
popa
ret
sbbl
mov
nop
jnp
sbb
xlat
inc
sub
push
jno,pn
out
shrl
inc
call
fidivrl
movsb
pop
inc
cmpsb
repz
push
dec
mov
lret
mov
add
arpl
in
andl
sbb
cmp
es
arpl
ficoml
ljmp
push
inc
xchg
xor
mov
jl
or
pop
int3
js
inc
fcoms
cltd
sbb
sub
insl
dec
xchg
pop
sub
push
mov
and
push
adc
pop
pop
cwtl
fimuls
jge
inc
std
mov
aam
pop
push
push
pop
fbstp
lods
cmp
fwait
dec
mov
lret
adc
adc
les
inc
add
or
ror
in
cmp
push
in
sub
cmc
stos
xor
jb
mov
in
or
xchg
dec
movsl
std
dec
call
jp
xor
sahf
mov
sahf
out
mov
sub
mov
jo
fwait
mov
enter
std
push
inc
je
shl
dec
xchg
cmp
adc
mov
sti
push
lret
xchg
or
cmp
jle
mov
sub
call
in
mov
imul
leave
mov
sbb
xor
xchg
repz
jo
and
repz
jle
fdivs
std
cwtl
dec
xor
test
rol
incb
std
in
bound
test
jns
les
int
cmpsl
fimull
repnz
imul
out
and
jo
dec
insl
notb
ss
xchg
jbe
sahf
push
jle
mov
bswap
cs
ljmp
ret
mov
inc
pop
stos
xor
out
push
or
sbb
lea
icebp
dec
add
push
dec
sbb
add
or
xlat
mov
xchg
movsl
sub
lods
daa
jle
lret
test
imulb
cli
push
mov
add
pop
push
cwtl
decl
jae
sub
add
lret
out
dec
add
bswap
mov
mov
mov
xchg
inc
push
les
testb
xor
sarl
mov
lahf
jge
xchg
ds
jbe
cmp
pop
sub
out
dec
in
add
mov
aas
pop
dec
and
rcll
mov
aam
jge
sbb
cs
dec
cmpsl
mov
ljmp
ss
jbe
sahf
in
fcmovu
sub
push
arpl
push
adc
jns
shlb
rorb
xchg
xchg
jp
xor
into
outsb
xor
nop
sbb
ret
inc
pop
pop
or
aam
in
sub
inc
add
adc
and
out
rorb
dec
clc
xor
roll
and
mov
imul
push
inc
cmp
push
fstps
mov
cli
or
jbe
jns
push
lds
or
or
push
orb
sub
push
mov
in
mov
fstl
jecxz
jle
nop
aad
inc
mov
das
daa
push
sub
outsb
inc
adc
adc
negl
loopne
loopne
sbb
dec
sub
ret
pop
into
test
lcall
stc
cwtl
stc
inc
add
mov
movups
and
inc
jo
les
push
and
out
cmp
sbb
mov
sbb
pop
or
jl
rclb
popf
push
dec
mov
dec
in
jo
enter
mov
jnp
xchg
sbb
hlt
into
jne
repz
pushf
inc
call
rclb
push
fstpl
sbb
pop
pop
cmc
mov
push
sbb
mov
data16
mov
lock
insb
add
xor
push
xchg
cmp
push
js
pop
mov
lahf
les
and
bound
sbb
mov
lretw
loop
sbb
popa
test
das
out
push
fcmovbe
or
pop
pop
out
add
push
sahf
aad
dec
cld
or
or
repnz
sub
inc
cmpsl
sahf
loop
xor
push
fcmovu
enter
mov
in
mov
jmp
inc
mov
pushf
testb
mov
pop
popf
xchg
jmp
cs
movsb
sub
jnp
nop
mov
dec
enter
das
jne
cmp
iret
adc
enter
fcompl
lea
mov
repnz
mov
lahf
xlat
xlat
cmp
lock
popf
rcll
gs
lcall
jl
fisubs
call
pop
repz
jl
test
loopew
ss
push
xchg
inc
int3
cmp
repnz
imul
in
mov
cli
call
idivb
adc
negl
sub
test
xor
into
push
add
cmpsl
cmpsl
cmp
jae
fimull
test
fisttpl
test
jb
xchg
sub
into
adc
xchg
jmp
dec
je
push
xlat
ss
adc
aas
out
sub
jne
insb
mov
dec
sti
lea
adc
push
or
sti
xchg
mov
and
pop
imul
xor
sbb
lock
push
out
lea
adc
dec
int3
stos
imul
stos
mov
sbb
sbb
jae
xor
adc
jecxz
aad
in
push
js
inc
xchg
or
cmp
sbb
ja
ljmp
lret
adc
pop
and
movsl
aad
pop
or
mov
aas
xchg
mov
movsl
pop
fbld
ds
rcrb
jle
lods
scas
mov
and
std
das
or
jl
js
lods
fcoms
push
repz
mov
movsl
mov
lds
cmp
jbe
jmp
loope
das
aas
notl
int3
enter
dec
jge
in
adc
and
push
push
ret
xchg
mov
in
lahf
dec
js
pusha
jae,pn
aad
nop
and
icebp
and
pop
and
je
in
adc
mov
pop
push
test
jmp
cld
cmp
jmp
psubsb
insb
pop
jne
and
bound
xor
adc
jae
ficompl
pusha
inc
popa
xor
pop
cmc
jle
cmc
pop
cmp
enter
mov
inc
jmp
iret
adc
push
nop
sub
lahf
sbb
inc
jmp
orl
mov
lret
dec
fdivs
pop
scas
clc
pop
arpl
ficoms
cli
jle
nop
in
js
add
or
xor
xchg
mov
bound
push
stos
jecxz
mov
or
cmpsl
testl
and
sub
jno
filds
lcall
gs
mov
jo
mov
adc
jp
dec
scas
xor
adc
inc
inc
adc
dec
in
sti
fimull
in
pop
ret
sahf
fcmovbe
dec
jle
xor
lods
lea
push
adc
sahf
add
pop
bound
mov
movsl
xor
rcrb
mov
jl
jne
mov
cmpsb
jbe
aas
imul
push
sbb
sbb
fcomip
sbb
push
call
xchg
sbb
mov
push
cltd
sbb
lahf
imul
cltd
loope
xor
jb
inc
push
cs
xor
leave
add
das
xor
inc
fdivrl
aaa
xchg
sub
lcall
idiv
xchg
js
mov
inc
psubsw
iret
adc
inc
cld
fstpt
xchg
sub
inc
lock
xor
and
add
mov
dec
cwtl
in
jecxz
std
xchg
jp
sub
and
pop
push
nop
fs
sub
inc
movsb
xor
push
iret
fistl
out
push
cmc
jnp
cmp
test
mov
sub
add
xor
in
adc
out
lret
divl
adc
or
in
or
iret
mov
fwait
clc
xor
sub
inc
jae
cmp
push
mov
leave
jg
add
negl
mov
imul
das
mov
or
fisubrs
icebp
xchg
repnz
cmp
dec
repz
out
add
mov
adc
sub
cmp
mov
add
data16
into
cs
add
je
scas
pushf
pop
outsb
sub
scas
pop
das
pop
pop
insb
pop
enter
aas
popa
sub
in
int
xchg
push
data16
dec
push
iret
cmp
dec
iret
sub
imul
or
fmuls
xchg
arpl
lret
adc
mov
rcll
loopne
cmpsl
loop
lcall
xchg
fiadds
scas
andb
aad
rep
xchg
cmp
call
jge
xchg
push
inc
std
or
outsb
out
and
xchg
jl
enter
prefetch
pop
insb
add
jb
stos
sahf
ss
stc
xchg
cmp
sbb
jnp
jo
fs
pop
mov
add
sbb
fidivrl
cmpsl
or
sbb
imul
cmpsl
shlb
adcb
mov
pop
push
cmp
lds
dec
int
adc
cmpsl
pusha
mov
dec
fistpll
shrb
inc
int
cli
orl
or
movq
push
in
xor
sbb
int
outsb
dec
cli
push
sahf
scas
sub
test
negl
mov
and
and
mov
jge
pop
rcrl
adc
sub
std
inc
rcrb
and
and
rorl
sahf
push
pop
icebp
mov
adc
ret
ljmp
shl
insb
sbb
stos
dec
push
push
lret
mov
arpl
les
pop
inc
inc
pop
or
call
iret
lds
mov
push
xchg
cmpsb
xchg
into
and
out
mov
mov
mov
pop
mov
push
xchg
jmp
mov
pop
jae
int
dec
imul
sahf
jmp
ret
xchg
test
icebp
les
sbb
sbb
int
add
inc
mov
je
add
cwtl
sub
pop
or
mov
ljmp
scas
imulb
and
cmc
sti
pusha
xchg
adc
outsb
dec
mov
push
and
daa
std
jmp
pushf
dec
ja
sub
sub
jno
cmp
bound
jg
lret
mov
popa
mov
sbb
xchg
jmp
cs
fdivs
add
je
mov
push
cmc
inc
sbb
adc
sub
cltd
or
ja
push
and
shl
data16
sbbb
mov
lret
jo
xchg
jle
mov
lret
push
fcomps
sti
add
adc
insb
pop
add
ja
cmp
stc
inc
shll
ret
push
fwait
insb
movsl
lods
sbb
subb
lret
pushf
aaa
pusha
cmp
jae
pop
sbb
pop
popa
xchg
jb
call
mov
das
call
pushf
cmp
sbb
out
adc
xor
stc
xchg
push
fwait
ja
fnstenv
sti
stos
lods
xor
fwait
test
ret
mov
push
scas
jne
sahf
in
add
shl
out
or
out
mov
rcrb
incl
sbb
cli
jne
loope
stos
adc
mov
imul
fiadds
jp
es
xchg
int3
sbb
pusha
xchg
rcrb
mov
adc
mov
lahf
icebp
dec
mov
arpl
mov
cmp
mov
mov
pop
into
imul
jnp
inc
hlt
orb
jo
jecxz
imul
push
sbb
cmp
cld
adc
pop
jbe
xchg
add
ljmp
fistpl
jecxz
fsub
add
sub
je
leave
mov
sub
pop
imul
fldln2
cmp
daa
scas
and
mov
rclb
mov
sbb
push
fs
pop
js
pop
psraw
cmp
imul
xchg
cltd
xchg
imul
xor
je
push
mov
scas
fbstp
mov
or
imul
xchg
cmpsl
es
mov
aaa
mov
xchg
push
cmpsl
ds
std
mov
ret
aaa
outsl
adc
lds
push
xor
xor
scas
cmc
jne
mov
stos
xchg
loope
repz
push
adc
bound
xlat
aas
in
add
fnop
icebp
mov
add
xchg
jb
cmpsl
pop
mov
push
jmp
mov
mov
mov
stc
dec
es
sub
mov
test
bound
fs
enter
call
jno
push
daa
movsl
std
fsts
into
pusha
push
mov
push
mov
mov
and
mov
xchg
in
mov
jb
mov
inc
adc
and
cs
outsb
sbb
sbb
or
jp
or
imul
dec
mov
stc
imul
and
decb
mov
pop
mulb
jbe,pt
mov
fmull
cmpsl
cmpsb
scas
sbb
popf
cmp
push
fbld
inc
lods
in
adc
int
mov
mov
pop
mov
in
movsb
mov
cmp
ds
push
push
sbb
xor
stos
mov
in
ss
movsl
gs
add
xlat
sbb
dec
inc
push
repz
cs
test
jg
pop
cld
jb
test
repz
mov
xor
or
dec
add
es
add
shr
xchg
je
push
hlt
mov
test
lahf
scas
xchg
jle
cli
in
mov
sbb
popf
popf
fs
pushf
jecxz
lcall
lock
jno
or
pop
add
sbb
or
add
inc
or
lods
jbe
sub
xchg
mov
mov
addb
fisttpll
leave
nop
or
mov
pop
or
stos
cli
pop
shl
pop
fcoml
scas
xchg
jnp
lret
mov
xlat
cmpsb
bound
cmp
leave
mov
pop
mov
pop
jg
push
dec
sbb
rcl
pop
mov
movsb
mov
adc
add
out
std
rol
nopl
nop
loop
sub
outsb
push
sub
clc
pop
out
pop
stos
add
pop
xchg
in
lods
xchg
adc
push
fsubr
out
dec
loop
sub
scas
hlt
dec
scas
fidivrs
sub
inc
enter
lock
cs
pop
popa
test
in
sbb
adc
add
jne
ficoml
scas
jle
xchg
xlat
ja
mov
jne
fcmovnu
out
loopne
push
cmc
add
mov
bound
sub
mov
ljmp
dec
mov
dec
in
loop
mov
repnz
cmp
inc
xchg
xor
cmp
inc
cwtl
dec
shr
arpl
push
daa
imul
push
or
sub
jp
xor
xor
or
or
dec
cmpsl
dec
repnz
xor
repnz
mov
sub
stc
add
add
scas
daa
dec
movsb
bound
fistpll
push
mov
out
push
cs
push
sub
xchg
mov
ror
rolb
test
sbb
cmp
stos
je
xlat
int
leave
xchg
lret
jo
rclb
sbb
sbb
out
adc
and
xchg
std
inc
int
arpl
psraw
shl
mov
movsl
sub
mov
jmp
inc
lds
xor
leave
nop
jmp
mov
xchg
pop
mov
loopne
xor
cmp
js
lea
je
imul
dec
mov
test
test
xchg
jb
xchg
adc
push
aam
int3
cmc
lock
mov
dec
adcb
stc
clc
inc
or
cltd
inc
xchg
mov
test
and
xor
or
pop
and
jle
jns
in
movsb
cli
pop
inc
xchg
fldcw
xor
ret
and
inc
nop
mov
xor
leave
push
sahf
mov
add
adcl
mov
stos
xor
mov
or
dec
fdivr
sub
inc
xchg
popf
dec
push
mov
or
ret
mov
out
xchg
and
mov
cmc
jp
or
cmpsl
inc
adc
nop
mov
xchg
cmpsb
mov
imul
daa
mov
ljmp
out
adc
cmp
pop
or
int
xor
ljmp
int
subl
test
push
sub
lretw
lret
stos
push
fidivrs
inc
in
inc
and
xchg
cmpl
mov
sarl
sbb
inc
pop
lea
rcrb
nop
push
push
inc
pushl
jg
push
imul
xor
ds
or
cmpsl
mov
flds
in
mov
push
sarb
repz
pop
jle
test
jo
sbb
mov
repnz
shll
dec
mov
data16
push
out
pushf
xor
mov
jg
push
cmp
inc
fmull
push
les
sub
push
xorl
mov
insl
int3
std
cmc
jns
or
inc
cwtl
enter
xor
or
xlat
xchg
outsl
cmp
cmp
clc
fnstsw
fsubrp
mov
jle
sub
lock
mov
out
fs
sub
incb
mov
push
in
sbb
cmp
xor
push
push
stos
sub
or
add
jl
mov
jmp
cmc
jbe
adc
data16
cltd
inc
cmp
ja
xor
xchg
outsl
jnp
xor
and
in
jmp
mov
ds
lds
mov
cmp
scas
mov
fs
xor
mov
mov
push
sti
sub
out
push
or
sub
cli
aam
dec
cltd
pop
adc
mov
xchg
sahf
insb
cltd
push
fisubs
js
push
mov
push
and
xor
daa
ljmp
testl
loop
ss
push
or
int
dec
push
or
out
leave
adc
push
dec
mov
lahf
dec
pop
dec
dec
out
and
sarl
addr16
xchg
pop
jo
js
xchg
addl
cmc
incl
add
aaa
mov
loopne
cwtl
icebp
test
test
aam
mov
loope
xor
lahf
xchg
imul
add
mov
add
jmp
clc
inc
and
addb
ja
cli
test
mov
sub
jecxz
scas
mulb
pushf
push
push
sbb
pop
sbb
sub
mov
fwait
push
imul
and
cmp
jae
or
mov
inc
aaa
orl
inc
cmovb
jl
add
test
adc
aaa
or
fisubrl
ss
ss
inc
jp
sbb
xor
cmp
adc
cmp
dec
and
nop
xor
push
sub
fsubr
cmpsl
sub
add
ret
and
rolb
fsub
das
push
stos
in
test
inc
add
test
rcll
push
cmp
mov
ret
mov
fcoms
mov
pushf
sub
repnz
mov
int3
imul
dec
test
fptan
test
gs
frstor
push
lret
int
lret
stos
inc
inc
pop
lret
cmp
pop
idivb
cmp
ss
test
lods
cmp
xchg
push
movsb
movsb
mov
pop
mov
or
mov
push
jmp
sahf
je
rol
xor
push
jae
aam
sbb
lahf
adc
mov
jo
mov
aaa
adc
mov
arpl
add
xor
sahf
push
fdivrl
cwtl
in
fstl
loopne
es
insb
cmp
ljmp
imul
arpl
lods
loopne
adc
dec
fimuls
in
test
or
mov
xchg
loope
pop
mov
sub
lret
scas
push
pusha
jl
mov
stos
int
lret
push
cmp
test
psubusw
pop
push
jae
pop
insb
and
cwtl
and
mov
push
pop
push
imul
pop
adcb
cmp
xchg
ljmp
movsl
jge
mov
les
push
pop
xor
push
inc
xor
repnz
pop
popl
mov
adc
jae
push
scas
or
outsl
outsb
in
mov
and
xchg
push
jbe
xor
jecxz
inc
mov
fs
lahf
loope
pop
daa
push
mov
leave
or
xor
mov
lock
mov
push
mov
pushf
pusha
mov
rolb
out
jle
mov
es
push
in
adc
stc
test
mov
js
xchg
shll
push
sub
inc
je
fimull
sbb
popa
jno
or
and
hlt
push
dec
jmp
cmp
jno
scas
adcb
push
cmpsb
xchg
pop
inc
out
inc
mov
jle
and
push
movsl
orl
xchg
cmpsb
testl
jle
dec
inc
sub
sahf
xchg
cmpsb
dec
jns
adc
sub
xor
mov
adc
pop
insl
ficoms
ds
push
jmp
or
int3
add
xor
roll
pop
pop
push
jne
pusha
mov
jo
sti
stc
test
pop
push
jmp
pop
fmulp
mov
xor
mov
sarl
aaa
addr16
shll
mov
aad
sub
data16
add
addb
stos
jmp
cltd
mov
pusha
push
popa
stc
and
test
fdivrl
xor
test
stos
pop
pop
in
outsl
push
ret
mov
std
push
cmp
mov
rol
js
xchg
pop
push
in
push
ror
aas
pop
movsl
rcr
xchg
bndldx
dec
test
sarb
cmp
pop
jge
mov
sub
cltd
icebp
loop
pop
outsb
mov
jne
lret
ja
push
inc
sbb
cmp
push
aaa
popf
cmp
or
mov
xor
lahf
dec
pop
pop
jno
ret
dec
mov
ss
or
cmp
xor
dec
aad
in
lahf
jmp
mov
dec
stos
mov
scas
mov
jbe
lock
les
mov
mov
movsl
dec
dec
fistl
insb
es
sbb
sti
dec
mov
cmpsb
inc
mov
test
pop
sbb
xchg
inc
stos
jmp
jmp
xorb
mov
dec
mov
and
mov
call
fs
movsl
push
lcall
ret
mov
ret
lahf
movsb
sarb
rolb
insl
scas
jo
test
xor
mov
outsb
jns
jae
lds
push
jmp
cmp
inc
pusha
bound
and
inc
lds
push
add
int
dec
mov
test
outsb
lods
or
rclb
mov
aas
mov
mov
rol
inc
rep
sbb
mov
push
jp
mov
shrb
add
or
insb
mov
pop
mov
cmpsb
jl
out
loope
dec
mov
jle
pop
sub
mov
mov
shrb
shrl
mov
imul
arpl
pop
roll
sbb
in
jmp
out
push
or
push
mov
ud1
jno
inc
sbb
jecxz
arpl
adc
scas
jb
test
imul
cmp
das
sbb
push
sub
fwait
test
icebp
js
ficoms
xchg
movsb
div
sub
sub
leave
clc
enter
shlb
jno
jp
jb
call
push
sbb
cld
icebp
shrb
xor
push
inc
ljmp
and
or
shlb
xchg
btr
std
dec
push
xor
and
push
testb
sbb
xchg
int
std
data16
orb
jo
ret
add
test
add
and
cmpb
push
ficoml
bound
jb
arpl
pop
stos
es
inc
dec
mov
ljmp
jb
fistpll
ss
je
repz
mov
aad
out
sbb
lcall
or
pop
push
cmp
lret
rcrb
sbb
push
out
jle
shll
sbb
xchg
mov
jecxz
incb
jge
jbe
add
incb
stos
xchg
cmp
lods
sub
imul
xchg
je
jns
clc
rcll
sarl
int3
adc
lcall
insl
lahf
popa
mov
mov
das
dec
mov
sar
negl
xchg
mov
mov
add
mov
notl
and
or
xchg
add
jnp
repz
test
mov
ss
pushf
push
ss
lock
mov
and
rcrb
xchg
pop
sub
pop
ret
mov
mov
jp
mul
add
fidivs
push
sahf
or
cs
push
push
ror
cmp
add
rolb
sahf
arpl
jecxz
movsl
mov
xlat
push
lcall
aad
cmc
ja
cltd
pop
out
pop
das
sahf
or
sbb
ficomps
mov
scas
mov
add
aaa
jl
inc
out
imul
hlt
cmp
jmp
xchg
insb
and
cltd
lret
mov
adc
jmp
mov
into
mov
cmpsl
jo
push
shll
scas
sub
xchg
jmp
cltd
xorb
pcmpgtb
loope,pt
fisubrs
fs
jecxz
jge
sub
in
mov
jnp
dec
jp
ret
jae
mov
cmp
popa
mov
jle
xor
shlb
ret
dec
sahf
mov
mov
push
pop
mov
mov
ret
out
rcrl
and
in
hlt
les
xor
pop
mov
jmp
lcall
xor
jno
imul
xchg
ljmp
mov
sbb
cmpl
mov
orb
pop
les
jge
push
push
ja
aad
mov
nop
daa
sbb
mov
cwtl
pop
stos
pop
dec
xor
dec
fwait
cmp
fwait
add
jecxz
inc
js
inc
lahf
pop
add
pop
cmp
inc
dec
mov
nop
popaw
cwtl
data16
mov
icebp
sbb
fcoms
xchg
or
adc
dec
jg
add
mov
in
test
cmpb
mov
inc
cli
es
in
popa
sbb
leave
mov
leave
xchg
dec
adcl
mov
repz
add
jo
mov
stos
repnz
mov
sub
jno
mov
dec
and
repz
pop
add
or
movsb
sub
int3
aaa
pop
xchg
fsubrl
mov
outsb
pop
stos
sub
addr16
mov
addb
mov
push
mov
es
xchg
insl
out
pop
fsubr
loopne
imul
push
push
push
jns
into
lds
fsts
dec
jge
hlt
stos
xor
fidivl
dec
scas
dec
sbb
je
xor
or
fimuls
mov
loopne
stos
adcb
inc
mov
mov
lock
sbb
outsl
sarl
jns
mov
push
ss
in
push
jae
xchg
xlat
cwtl
jbe
dec
push
mov
stc
loope
int
jnp
lcall
and
inc
xor
in
jbe
fcomps
or
jbe
jb
rolb
lcall
cs
adc
divl
jecxz
fs
idivb
aas
pop
jne
sub
call
push
sarl
icebp
push
scas
mov
cmp
jnp,pn
jmp
pop
xor
sub
pop
addr16
sbb
and
inc
jno
push
mov
out
out
rolb
mov
push
test
mov
ret
or
cmpl
xor
nop
iret
aam
mov
icebp
inc
in
or
divl
int
mov
pop
ret
cmp
inc
in
adc
cmc
mov
push
ja
outsl
cmp
or
xlat
adc
push
pop
fdivl
hlt
das
cmp
cli
repnz
shl
nop
popa
in
les
shll
popf
aad
sbb
lcall
cmp
mov
pop
mov
jge
mov
add
mov
pop
out
xor
or
sahf
inc
jmp
ja
mov
cmc
int
and
movsl
pop
cs
jbe
mov
pop
mov
mov
ror
cli
repz
scas
in
sarl
imul
ljmp
pop
add
clc
imul
addr16
fsubrs
adc
mov
shrb
or
lea
push
or
fsubs
push
leave
push
push
jne
out
sub
pop
test
lret
xchg
push
mov
sbb
adc
jnp
push
lret
add
jb
icebp
ss
or
xchg
xlat
mov
mov
add
dec
jg
loopne
pop
jl
ret
mov
or
stos
pushf
cmpb
popf
add
lea
out
lcall
pmaxub
add
das
inc
add
pop
addr16
and
mov
and
jg
lock
sub
testb
andb
cltd
insb
loope
mov
mov
test
int
mov
and
sahf
sub
pop
pop
inc
xchg
stc
addl
addl
mov
sbb
and
add
in
dec
add
sbb
cmp
imul
test
mov
test
adc
pop
lods
outsb
repz
pusha
mov
fisttpl
or
xor
dec
mov
lret
dec
cs
mov
sbb
popa
dec
jmp
out
fmuls
lods
stc
fsubr
and
add
repnz
cmp
ljmp
clc
adc
lods
lret
xor
sub
add
or
inc
xchg
fs
aad
repnz
and
mov
jnp
shrb
test
pop
cmp
xchg
inc
pusha
add
out
test
fildl
push
out
das
fcompl
comiss
mov
loop
les
daa
cmp
pop
mov
in
pushf
lds
mov
sbb
into
mov
out
cld
sbb
decb
mov
jecxz
sbb
pop
hlt
sub
dec
dec
movb
push
mov
cmp
loop
je
add
les
aaa
scas
rorb
xor
shrl
add
mov
push
daa
dec
xchg
pop
xchg
out
sbb
dec
add
pop
mov
sbb
jae
ja
xorl
sbb
mov
mov
hlt
pop
cmp
jecxz
pop
aad
test
ss
sbb
fsubrl
loopne
imul
sub
dec
pop
je
pop
mov
lods
je
or
dec
sub
insb
sbb
xlat
mov
insb
pop
pop
aas
iret
adc
mov
test
insl
rorb
or
nop
xor
pop
mov
sub
shr
sub
aaa
sbb
enter
sbb
mov
test
mov
cmp
mov
shrl
lea
mov
aam
lcall
xchg
insb
aad
mov
xchg
pop
xor
or
repnz
or
imull
cmp
cs
xchg
dec
push
jmp
lods
ret
fsub
dec
out
dec
sub
dec
mov
push
ret
jmp
fs
push
sbb
inc
out
cld
dec
cmpsb
fildl
sub
pop
lock
cwtl
daa
daa
jge
outsb
and
pop
scas
xchg
inc
test
stos
cld
xlat
lds
sbb
imul
pusha
sbb
mov
push
mov
xor
push
repnz
stos
pop
fiadds
cmp
shll
or
fadds
leave
dec
fmul
cli
inc
mov
mov
insb
xor
mov
insb
