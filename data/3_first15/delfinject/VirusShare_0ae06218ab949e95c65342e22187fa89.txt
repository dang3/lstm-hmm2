cs
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
add
fsubr
incl
gs
jb
lea
sub
add
jns
gs
jmp
mov
inc
adc
push
push
je
imul
in
pop
and
add
inc
das
lret
cmpsb
imul
idiv
outsl
xchg
cs
pop
push
dec
bound
arpl
xor
add
mov
pop
orl
pop
and
xor
and
inc
xor
and
and
xchg
orl
add
rcrl
in
leave
clc
shl
shl
in
enter
inc
shr
in
dec
push
xor
rclb
loopne
fs
xchg
shll
stc
idivb
pop
fcom
push
add
mov
call
jg
inc
and
add
mov
and
mov
sbb
arpl
rcll
ror
ror
push
cmp
rol
sarl
push
mov
add
push
call
aaa
mov
test
jne
xor
pop
mov
mov
pop
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
sub
add
push
mov
mov
call
push
mov
mov
add
xor
idivb
add
or
sti
mov
push
adc
ret
inc
push
push
push
mov
mov
fdivrp
adc
mov
mov
mov
imul
jg
or
push
or
ret
adc
mov
inc
inc
push
je
in
add
add
jmp
add
pcmpeqw
decb
jmp
jo
mov
call
fcompl
add
pop
pop
pop
xchg
mov
mov
dec
cmp
jb
mov
add
call
add
int
bound
jne
mov
outsb
loope
sub
jnp
cmp
cmp
aas
mov
fsubrs
mov
add
cs
sub
jmp
call
mov
mov
inc
mov
jnp
stc
mov
sub
outsb
loope
mov
aam
sar
test
or
fstpt
or
push
sbb
sti
jne
or
dec
mov
cmp
push
sub
dec
fwait
test
add
add
and
ret
dec
xchg
clc
std
clc
mov
test
je
mov
mov
in
insb
call
and
add
fldenv
fdivp
popa
popf
clc
add
mov
mov
movl
pusha
push
dec
push
push
jne
cmp
orb
dec
cmpl
jbe
std
fldt
mov
mov
xchg
loop
sbb
and
mov
outsb
push
mov
sbb
loope
push
bnd
out
ja
mov
add
xor
cmp
je
xchg
mov
add
cld
test
lock
or
add
mov
xchg
fdiv
neg
cmp
das
add
or
aaa
mov
dec
jns
movntq
scas
stos
adc
pusha
daa
hlt
mov
rorb
lock
mov
or
ret
pop
loop
cmp
pop
mov
inc
sub
mov
push
cmp
pop
sbb
nop
jbe
mov
cmp
pop
jo
or
push
push
adc
mov
sub
push
push
call
or
ss
mov
inc
jmp
mov
faddl
popf
jmp
dec
cmp
push
inc
test
mov
and
add
mov
sbbb
pop
flds
add
cmp
add
and
nop
cmp
hlt
sbb
mov
add
jns
jmp
cmp
jg
out
jb
push
xlat
pop
call
push
mov
xor
dec
dec
inc
ds
sti
lahf
mov
fnsave
stos
call
mov
jb
fisttpll
jecxz
cmpl
movsl
adc
movsb
xor
or
call
cmpxchg
shll
ja
ds
outsb
sub
add
cmp
fwait
mov
mov
fldcw
pop
pop
stos
push
call
xor
xorl
test
adc
adc
std
sbb
ds
insb
stos
jmp
inc
push
fs
inc
xor
dec
dec
cwtl
jecxz
test
dec
inc
orl
jnp
jne
sbb
xlat
cmp
imul
pusha
sub
inc
dec
or
insb
adc
sbb
jg
mov
les
cwtl
sbb
xor
cmc
or
fidivs
mov
sub
inc
cltd
imul
dec
call
cmovg
es
test
je
mov
scas
cmp
rolb
or
adc
sahf
jnp
popf
cmp
mov
sbb
mov
in
fwait
push
push
pushl
mov
push
cld
daa
cmp
cmpb
adc
mov
cs
mov
hlt
orb
js
clc
bswap
fdivr
fcmovnu
fcoml
add
mov
adc
xor
cmp
sarb
add
ret
mov
movb
pop
mov
push
int3
xchg
xchg
sbb
mov
ret
push
and
inc
ss
imul
pop
loopne
xor
mov
xorb
mov
adc
rcl
mov
mov
repnz
daa
or
add
inc
ret
or
mov
or
notl
jne
out
in
fldcw
loope
repz
imul
pop
fistpl
push
cmp
icebp
jne
adcb
stc
fsubs
cmp
inc
in
aaa
add
add
int3
mov
jmp
lret
push
fsts
adc
xor
add
icebp
negb
pushf
ret
jmp
dec
in
shll
pop
ret
or
repz
cmp
data16
ret
mov
call
add
sbb
mov
jl
into
sbb
or
orb
adc
or
divl
add
incl
jnp
mov
ljmp
mov
adc
daa
cmp
or
push
or
cmpsb
movsl
cmpsb
add
rolb
sbb
and
incb
inc
add
je
loope
add
hlt
or
ficoml
sub
xor
out
notl
test
testb
or
inc
cmpsb
jb
cmp
sbb
push
cmpsl
das
add
push
lea
xor
in
fucomip
add
pop
add
add
adc
mov
xor
push
loopne
or
scas
cmpsl
fstpt
or
add
and
movsl
fdivrs
pop
negl
lea
sub
jg
clc
push
or
mov
clc
or
adc
add
clc
xor
add
jae
sahf
adc
sub
decb
mov
jmp
fimull
arpl
aas
test
or
shl
sbb
sbb
add
scas
xchg
add
sub
pusha
inc
mov
ja
add
sub
jo
lcall
shlb
cli
pop
mov
fs
hlt
rcll
or
pop
mov
insl
sbb
cmp
inc
or
test
inc
push
sub
cmp
or
push
adc
sbb
roll
ss
inc
aaa
daa
sub
or
or
pop
jmp
mov
adc
mov
out
cltd
push
cmp
daa
push
push
sub
xor
loope
orb
movsl
mov
call
inc
ss
or
adc
or
arpl
push
mov
cmp
xor
pop
add
bound
add
push
push
call
jle
call
mov
sub
fsubrl
sbb
sbb
pop
jle
pop
in
cwtl
fcmovnbe
lock
mov
call
mov
sub
adc
and
fsubrs
dec
push
insb
shll
movsl
pop
pop
cltd
mov
pop
clc
add
adc
adcl
out
loope
jnp
mov
or
dec
cwtl
xor
scas
lock
jle
or
pop
pop
outsb
test
adc
je
pop
jmp
in
sbb
pushl
insl
ja
jmp
sbb
cmp
push
sub
jge
mov
sbb
or
jp
add
addr16
inc
lock
xor
hlt
add
scas
mov
adc
add
xchg
call
sub
sbb
jne
cmp
imul
dec
xchg
or
pusha
pop
jmp
int
pop
or
cs
call
push
std
xor
or
inc
inc
mov
xchg
leave
hlt
and
and
in
push
mov
gs
mov
out
add
adc
xchg
in
testb
mov
scas
test
push
shlb
sub
mov
add
lret
mov
lret
inc
mov
dec
mov
orb
enter
jmp
sbb
ret
xchg
sarl
sbb
pop
pop
or
prefetch
push
xor
sbb
xor
mov
pop
mov
in
stc
pushf
xchg
and
lock
mov
shl
fmuls
sub
push
cmp
xchg
pop
out
xor
testl
cmp
jmp
js
push
inc
xchg
clc
mov
test
clc
into
push
popf
cmovb
cmp
inc
ss
mov
ret
mov
xor
sub
inc
mov
pop
pop
aas
pop
pop
or
sbb
iret
pusha
or
lcall
sub
or
inc
xchg
clc
jbe
mov
cmp
push
sbb
fistl
jle
cmpsl
jnp
call
loope
pusha
test
mov
ret
sbb
std
das
lock
ret
sti
or
orl
jmp
inc
cmpl
mov
pop
pop
jl
or
or
adc
rorl
js
xor
sbb
repnz
shufps
add
push
ss
out
mov
in
arpl
cmp
xlat
test
aad
mov
clc
mov
fwait
mov
mov
or
out
cwtl
sbb
jno
sbb
xchg
in
out
xchg
xor
cld
sub
xor
fdiv
add
push
inc
add
cmp
add
jmp
inc
xor
sbb
mov
push
insb
outsl
testl
jnp
mull
push
daa
mov
adc
addr16
in
movb
jl
in
addr16
dec
out
or
sbb
adc
mov
and
ss
jmp
or
add
fprem
mov
or
stc
xchg
fbstp
aam
ret
add
imul
dec
les
lods
popf
ffreep
fsubl
pop
leave
xchg
dec
xchg
ret
rorb
dec
shl
outsb
icebp
pop
sub
adc
adc
sub
push
jmp
andb
fidivl
iret
stc
ret
or
aas
jbe
or
cmpsb
push
xchg
stos
jg
or
jp
call
in
xor
icebp
inc
jbe
sbb
mov
add
lea
ja
cli
sbb
arpl
frstor
insl
push
jge
sbb
jl
push
and
inc
lret
xchg
call
rcr
inc
repz
jge
inc
and
mov
jo,pt
cmpl
mov
imul
fucomip
rolb
add
fistpl
pop
je
das
xorl
add
mov
add
xor
xchg
sbb
enter
pop
or
sbb
xchg
mov
pop
jne
ret
out
repz
into
xor
sarb
out
jbe
cmp
in
in
cwtl
fstpl
push
cmpsl
pop
jecxz
cmp
mov
test
cwtl
add
sti
xchg
mov
cmp
ja
mov
mov
inc
xor
sub
and
adc
jbe
aam
test
call
in
ret
jne
xor
sbb
outsb
sub
adc
pop
mov
mov
call
in
jbe
xorb
sub
or
cmp
and
pop
outsb
push
je
inc
call
mov
mov
or
divl
je
nop
call
mov
mov
and
rep
mov
je
cld
lea
fistpl
jle
adc
sbb
add
pop
jecxz
ljmp
jb
cmp
ja
sub
dec
sub
fucomip
ret
jnp
pop
pop
xlat
sbb
push
push
lret
rolb
or
jnp
add
data16
sub
retw
fsubrs
mov
jmp
mov
jmp
cmpsl
ret
cmp
adc
push
mov
test
adc
push
add
sbb
loopne
or
sbb
negb
outsb
mov
inc
cmp
mov
push
and
aad
mov
or
mov
jl
cs
test
or
sbb
cmpsl
push
fcoml
das
je
dec
movsl
enter
lock
imul
push
mov
shr
cld
sbb
mov
cmp
jne
dec
ja
adcl
mov
or
xchg
push
or
ret
jne
jmp
or
pop
dec
sti
lea
mov
cmp
jne
sub
mov
cmp
jne
or
insb
xchg
or
cmp
rcrb
idiv
mov
cmp
cmp
jne
shr
shr
or
or
mov
shl
add
pushl
rcll
shrl
lea
jecxz
xchg
or
test
or
or
loop
or
pushf
adc
iret
rcrb
xor
sub
mov
div
cltd
xor
mov
inc
stc
icebp
imul
and
pop
mov
sbb
inc
mov
inc
mov
mov
mov
sub
jle
dec
pushl
sbb
clc
add
inc
dec
jne
daa
sbb
mov
rcll
cmp
push
call
push
test
mov
bound
push
inc
in
and
in
in
clc
mov
push
sub
je
and
je
mov
xchg
pop
pop
je
xor
xchg
sahf
dec
inc
das
je
jge
sub
fucomi
xor
or
cmp
ja
lea
add
sbbl
jmp
inc
jbe,pt
mov
dec
js
pop
sub
jmp
inc
and
pushf
leave
fldt
sub
popl
dec
and
lret
divb
pop
adc
or
push
mov
cmp
aad
dec
pop
xor
dec
inc
ljmp
loope
sahf
or
adc
sbb
pop
lret
in
jl
je
jmp
pop
cmp
lea
pop
lea
fldt
scas
shrl
call
je
pop
out
jge
lds
add
popa
xlat
adc
sub
fs
push
jge
jge
inc
stc
add
pop
leave
xor
sbb
fisubrl
fstp
fldt
fldz
xchg
adc
xchg
or
inc
push
repnz
enter
cli
or
or
ret
pslld
adc
mov
dec
jle
imul
stc
add
mov
adc
out
xchg
sub
jg
repz
sub
jecxz
add
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
mov
jmp
mov
js
inc
cmpb
xlat
fadds
outsb
xor
xchg
jg
das
mov
or
push
push
int3
into
sbb
rorl
mov
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
incl
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
ljmp
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
divl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
jmp
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
call
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
decl
mov
sbb
addr16
repz
mov
subb
loopne
call
pusha
les
outsb
bound
xor
and
push
cmp
in
out
ret
fwait
push
cmp
jne
push
loop
rolb
mov
scas
push
sub
test
mov
pop
icebp
mov
movzwl
lea
sub
push
pop
je
ret
in
dec
push
lret
jae
jae
sub
fucomi
shl
das
hlt
push
xor
add
pop
shrl
cmp
das
push
ss
hlt
jecxz
cmpsb
add
jge
add
jecxz
rorb
test
das
sub
mov
push
decl
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
xor
imul
jne
fninit
fldcw
pop
cmpsb
xor
or
int
shll
aam
leave
mov
inc
or
les
hlt
in
adc
out
push
lahf
xor
rorb
daa
cltd
sbb
pusha
jo
daa
and
aaa
test
mov
pop
arpl
mov
js
mov
call
xchg
pop
sbb
or
jo
mov
or
push
cld
ret
ja
sub
in
ret
xchg
stos
mov
js
cmp
orl
sbb
mov
adc
mov
fistl
sbb
je
pop
mov
jae
aaa
mov
mov
xor
nopl
enter
sbb
jecxz
push
mov
sub
jbe
xchg
pop
call
icebp
pmaxub
xor
and
ljmp
call
pop
adc
push
xchg
inc
inc
mov
rorb
or
loop
push
and
push
pop
push
divb
ret
pop
sub
mov
cmp
into
jae
add
rorb
push
jne
inc
cmp
mov
sbb
xchg
push
fidivs
or
insl
fistpl
call
push
push
mov
pop
sbb
cmp
push
sbb
loopne
xor
hlt
repnz
inc
dec
xor
mov
lock
lea
pop
add
mov
dec
or
shlb
add
imul
or
push
aas
mov
push
pop
pop
call
push
int3
test
jmp
call
lret
hlt
loope
or
jg
mov
adc
mov
mov
jbe
rol
cli
in
push
insl
xchg
add
mov
sbb
fs
lcall
and
jge
push
pop
push
push
add
mov
mov
cmpb
sbb
notl
cld
sub
inc
inc
jmp
add
sti
call
iret
xor
pop
shrd
ret
fsubl
pop
loop
ficompl
adc
ja
or
push
jne
fisubs
rcrl
and
outsb
cld
call
jbe
adc
icebp
cmpsl
lods
adc
sahf
ret
push
call
rclb
cmpl
je
call
inc
insb
and
pop
mov
cmp
sbb
pop
filds
pop
cmp
nop
iret
xchg
xchg
fisttpll
cmp
jbe
push
sub
dec
and
sub
mov
je
xorl
ret
cmc
adc
push
ficoml
mov
mov
sub
cmp
lods
inc
outsl
jnp
insl
mov
pop
add
inc
add
cmp
in
xor
jmp
and
push
sub
mov
adc
add
jmp
aaa
in
adcl
cld
das
je
mov
fstpt
repnz
add
xor
sbb
addr16
sarl
mov
xchg
sbb
push
inc
pop
fwait
insb
fnsave
pusha
pop
xor
pop
mov
iret
faddl
mov
add
scas
push
ss
lahf
mov
xor
std
sub
mov
sbb
mov
mov
jp
call
je
cmp
testl
mov
cmp
ret
insl
shlb
jo
outsb
fwait
sbb
leave
ret
pop
fistpll
add
sub
pop
cmp
getsec
repz
sub
adc
pusha
add
fisttps
sub
jb
je
jmp
cmp
cmp
jge
insl
and
add
cmp
cmp
nop
jmp
mov
jmp
mov
es
jmp
mov
jmp
outsl
mov
fisttps
sbb
into
shll
inc
subl
xor
aam
enter
xor
pop
stos
add
xor
test
mov
scas
ficompl
aas
loopne
je
sub
jmp
stc
xor
and
pop
int3
cmp
push
adc
or
push
pusha
sbb
cli
xlat
not
sbb
push
jge
dec
out
sahf
sbb
add
sub
adc
ds
fstps
mov
rcll
mov
mov
arpl
cli
scas
mov
mov
mov
pop
mov
sbb
cmp
jne
add
aad
in
cmpb
stos
push
cmp
cmc
lret
imul
mov
addl
jo
add
fidivs
pmaxsw
mov
inc
fiadds
call
adc
fmull
mov
sub
outsl
shll
fwait
add
std
xor
cmp
pop
mov
xor
js
ds
add
add
outsb
testb
cmp
pop
cmp
jg
movsl
pushf
in
lcall
lcall
or
lods
out
das
inc
insb
mov
adc
aad
push
mov
xor
pop
xor
idivl
fbstp
adc
sbb
add
call
in
outsb
or
jmp
pop
mov
add
inc
or
sub
mov
push
clc
lds
push
test
ret
rorl
fildll
push
cmp
rcr
pop
jo
rorb
mov
sub
roll
iret
dec
cli
out
test
add
inc
scas
stos
fistpll
adc
ja
add
mov
mov
movsb
in
leave
pop
push
pop
inc
rolb
icebp
push
sbb
outsb
call
dec
or
inc
mov
mov
push
push
jns
mov
or
sbb
push
les
or
mov
cmp
push
add
add
or
mov
insl
outsl
ja
cmpb
push
cmpl
adc
rclb
aad
jne
movsl
fdivs
stos
lods
call
aad
mov
inc
sbb
inc
pop
pop
mov
pop
mov
add
cmpsb
jg
sbb
dec
adc
cmp
shrl
adc
mov
xlat
icebp
dec
lock
cld
xor
out
imul
es
pop
sarl
andb
mov
xor
or
clc
lock
popa
pop
out
sub
jmp
into
call
cmp
mov
into
sub
xchg
dec
jl
lock
adc
mov
pop
cmp
mov
adc
sbb
add
or
ss
add
fs
dec
jne
pop
daa
pusha
stos
mov
sbb
pop
fnsave
repnz
or
out
jb
jmp
loop
mov
jnp
dec
ljmp
or
shlb
and
xchg
mov
loopne
add
cmc
sub
popa
aad
mov
add
clc
adc
fcmovne
pop
aas
les
push
mov
dec
or
mov
out
call
inc
prefetchw
push
stos
inc
or
daa
loopne
or
pop
imull
cwtl
jp
add
push
mov
mov
xchg
clc
push
jg
stos
lock
pop
lea
cmp
sbb
push
shll
mov
mov
cwtl
jl
inc
mov
and
mov
daa
push
ja
aam
sub
fisttpl
shr
push
or
mov
or
addr16
sbb
dec
jl
dec
rorb
ljmp
nop
lock
and
or
lret
pop
add
je
add
jbe
jg
jmp
inc
add
jmp
pop
fstpt
sub
and
pop
add
xchg
push
add
in
add
notl
jmp
inc
jmp
push
loope
push
sub
insb
repnz
in
std
push
pop
cwtl
shrl
rcrl
test
pop
inc
nop
outsb
popa
add
out
inc
xlat
stos
push
add
sub
jo
pop
mov
cli
ret
push
push
cld
add
bound
mov
dec
adc
adc
or
lods
shlb
repz
iret
pop
inc
jl
adc
insb
test
jnp
std
jb
lcall
ret
int3
inc
cld
adc
xor
xchg
xor
cli
pop
dec
or
cmp
cli
bound
push
push
stos
pop
comiss
xchg
pop
add
clc
lret
jo
pushf
mov
mov
jmp
aas
stos
fadd
or
push
xor
or
or
pop
ds
dec
stos
test
rorl
adc
iret
push
inc
jmp
insb
es
jle
pop
jae
out
outsb
dec
mov
mov
mov
add
dec
jmp
ja
insl
fwait
xor
mov
repnz
imul
mov
ss
mov
imul
dec
inc
cld
into
pop
xchg
cld
xlat
xchg
pop
lea
jmp
lret
pop
push
add
push
push
mov
sub
ja
add
push
shr
push
mov
pop
dec
dec
add
sub
int
pop
dec
inc
out
dec
sub
pop
add
add
pop
in
xchg
in
sub
sub
inc
pop
out
cmpsb
loop
cmp
adc
add
cmp
add
jmp
pusha
jmp
push
adc
push
adc
jmp
xlat
xchg
adc
in
xchg
call
add
in
or
stos
lock
push
cmp
jecxz
push
pop
pop
fists
push
cmp
fdivs
push
dec
inc
mov
and
inc
adc
out
xlat
jmp
scas
fbld
mov
icebp
push
mov
jl
cmp
jge
sub
xchg
jl
mov
xchg
add
mov
test
in
fs
in
mov
movsl
cli
fistps
das
call
dec
mov
xchg
jge
pop
fildll
jl
and
icebp
fnstcw
and
stc
add
lea
or
push
push
or
sbb
dec
cmp
lea
jge
cmp
scas
rorl
imul
add
lahf
xor
jo
pop
cmp
xor
das
clc
mov
stos
add
pop
pop
pop
push
mov
out
and
testb
sti
dec
pop
test
decl
dec
js
mov
inc
cmp
mov
sbb
xlat
jo
rorl
fwait
mov
addl
xchg
test
jo,pn
mov
push
and
mov
inc
lea
pop
push
adcb
jo
in
hlt
ret
jmp
ja
jnp
inc
xor
cli
scas
cmp
jl
icebp
call
mov
shl
jnp
leave
popa
ja
and
sbb
or
fldenv
subl
xlat
loope
xchg
mov
pop
cltd
lods
add
cltd
lods
scas
jne
ljmp
mov
rorb
sbb
adc
push
inc
xor
jp
daa
add
add
mov
pop
rcrl
push
or
mov
and
mov
or
sub
mov
cmp
and
lods
mov
ds
je
cmp
jno
pushf
jbe
cvttps2pi
fldcw
test
pop
mov
xchg
sbb
sub
mov
jg
call
leave
mov
or
fcmovbe
sbb
or
hlt
subl
movsb
repz
cmp
fisttpl
or
dec
rclb
xor
fsubr
bound
xchg
mov
ss
inc
add
pop
pop
imul
inc
sbb
sbb
scas
lahf
pop
icebp
jmp
cmp
add
add
mov
sbb
loope
xor
or
cld
fiadds
jle
sbb
add
sarl
add
mov
aam
pop
je
pop
sub
adc
and
lret
lret
fstpt
or
jo
lret
data16
or
mov
lret
jmp
xor
mov
jmp
adc
push
repnz
insb
lea
adc
in
in
mov
jmp
pop
dec
lock
popa
dec
mov
cs
cmp
pop
add
cmp
jne
cltd
sub
and
mov
jns
into
pop
adc
adc
outsl
mov
jne
mov
shr
sbb
addr16
movsb
pop
in
cmpsl
xlat
insb
and
out
in
adc
psadbw
popa
jge
xchg
inc
inc
xchg
pushf
mov
cwtl
fadd
imul
orb
out
icebp
jne
jmp
std
jmp
out
pop
mov
adc
adc
movsl
push
fiadds
sbb
or
or
mov
pop
pop
and
jmp
insb
jo
js
es
add
add
filds
sbb
out
xor
gs
xor
mov
add
nop
sbb
jmp
lret
mull
mov
loopne
mov
xchg
lock
js
fisttpl
lret
xor
push
faddl
shlb
xor
adc
sbb
leave
insl
orl
or
jns
neg
mull
sbb
gs
test
fsubp
mov
rcl
rcl
rcr
out
jb
xlat
cmp
jb
pusha
sar
sub
sbb
inc
loop
pop
test
pusha
subb
repz
and
jnp
pop
nop
add
xor
js
adc
sub
repnz
fs
adc
mov
call
pop
or
add
dec
or
mov
fbld
inc
cmpb
push
add
mov
or
inc
jmp
cmp
jne
mov
and
test
sti
and
sub
fdivs
fbstp
xor
cs
cmp
sbb
inc
xor
fildl
jb
pop
stc
push
jb
out
insl
aam
sbb
mov
jmp
repnz
aaa
jmp
push
push
or
lds
sahf
cmp
mov
adc
fsubr
lea
jg
pushf
cltd
pop
ss
icebp
push
data16
movsb
xor
adc
sub
cltd
clc
lret
jmp
fldenv
push
sarl
rolb
scas
les
shlb
cmp
xchg
xor
or
inc
leave
orb
popa
dec
fnsave
sub
cmp
push
movsl
stos
cltd
pop
mov
or
nop
xchg
hlt
xchg
sub
je
orb
setb
setl
cmp
stos
in
jo
add
adc
add
inc
jmp
add
ja
test
push
dec
inc
loop
ljmp
stc
rol
ss
adc
cmp
gs
or
or
push
mov
sub
test
cmp
push
loopnew
pop
mov
loopne
sbb
inc
inc
loopne
out
jmp
xor
insb
xor
xor
repz
add
jns
bound
push
call
insl
jnp
ljmp
call
or
and
cmp
pop
or
mov
dec
pop
cmp
xor
mov
cmp
jge
js
ljmp
scas
dec
add
lock
out
and
inc
loopne
push
in
and
xchg
in
aad
aaa
das
jmp
decl
push
call
jne
fnsave
in
jge
add
sub
sti
mov
sub
inc
dec
xor
call
push
push
cmp
adc
cmp
scas
arpl
dec
shll
xchg
loope
bound
mov
jg
in
push
lock
pop
mov
push
insb
add
push
push
sub
frstor
jge
jle
int3
or
dec
dec
mov
push
das
cmp
roll
insl
or
lea
int3
call
mov
cmovg
fs
mov
pushf
push
adcl
push
aam
push
xchg
lea
mov
push
or
inc
adc
pop
shll
pop
call
lock
mov
adc
je
lods
lret
push
adc
inc
sub
scas
jmp
jl
jle
add
fsts
jo
imull
push
scas
mov
sbb
mov
call
mov
push
mov
mov
inc
inc
ja
cmp
or
adc
jb
jle
xchg
lret
or
adc
push
test
mov
adc
lods
cs
jecxz
adc
test
mov
fwait
sub
inc
jmp
jne
cmp
add
add
pop
sbb
mov
xchg
jo
jg
inc
push
leave
adc
push
mov
lods
test
xchg
sar
xor
adc
cmp
pop
iret
enter
mov
mov
cmp
js
pop
fmuls
or
add
jmp
ds
testl
repnz
adc
shrl
pop
push
xor
sub
lea
fdivs
arpl
cmp
rolb
sub
rolb
roll
cli
cwtl
in
add
cmpsb
jg
xor
fmul
xor
inc
mov
inc
fucomip
idivb
adc
mov
shlb
sub
add
inc
cmp
sti
jg
movb
ret
dec
push
sub
sbb
pop
imul
inc
pop
cmc
sub
test
es
aas
ret
imul
gs
xor
cs
insb
jg
gs
outsl
outsb
addr16
cmp
jmp
push
inc
adc
andl
jecxz
adc
mov
adc
inc
out
adc
sbb
push
out
sub
call
dec
add
mov
add
and
inc
xchg
dec
push
sub
dec
mov
mov
sub
test
mov
jl
call
int
pop
cld
pop
popw
fmulp
cwtl
jmp
add
mov
add
add
add
dec
and
jnp
out
out
std
ret
inc
adc
dec
repnz
repz
es
adc
lds
testb
jge
push
or
add
add
cwtl
popf
push
adc
jmp
dec
sbbb
mov
cmp
push
fdivs
or
popf
inc
inc
mov
fsubl
push
ret
call
add
push
cmpsb
pmuludq
or
pop
aaa
repz
fs
outsb
xor
cmc
add
inc
jb
xor
sbb
data16
mov
jb
jg
arpl
gs
add
jae
sbb
and
xlat
xor
or
insl
mov
ss
arpl
push
mov
pop
adc
mov
pop
mov
out
add
sub
test
das
inc
mov
push
inc
ss
fwait
xor
and
inc
sub
clc
mov
loop
pop
adc
cmp
inc
jmp
mov
jo
push
adc
push
inc
insl
lea
and
lods
mov
out
in
jg
push
js
mov
ds
mov
cs
adc
das
adc
add
add
fimull
bound
sbb
pusha
push
mov
sbb
in
inc
stos
push
punpckhdq
stc
inc
nop
lods
movhps
repz
jo
sbb
cmp
add
push
test
and
leave
jbe
mov
in
mov
aam
add
or
push
je
sbbb
or
add
lock
xchg
sbb
cmp
push
lea
push
push
popa
dec
icebp
ret
adc
jmp
call
gs
sar
fwait
arpl
je
es
dec
xor
xchg
jmp
mov
push
repz
scas
dec
call
add
dec
xor
mov
or
addr16
ret
loope
mov
data16
jbe
mov
popa
fnstsw
subl
sahf
or
push
ret
add
sbb
pusha
xor
rolb
inc
stos
fnstsw
call
mov
fs
sbb
sbb
in
out
mov
std
call
cmpsb
outsb
ret
cmpsl
push
cmp
call
imul
cmp
jbe
adc
lahf
jmp
call
iret
inc
call
jmp
call
add
push
pop
xor
push
cmp
pusha
js
je
jo
pop
xchg
inc
insb
movsl
inc
call
ss
mov
inc
ret
lahf
sub
cmp
loop
push
push
xor
sub
pop
jle
insb
add
or
in
or
mov
sub
adc
dec
outsb
adc
int3
insb
pop
or
sub
ss
fstpl
je
mov
sub
dec
fcmovnb
mov
push
mov
xor
mov
pop
add
pushf
push
fidivrl
jmp
mov
add
aas
test
jo
cld
das
mov
mov
xchg
iret
rclb
sub
mov
aaa
icebp
insb
xor
and
clc
push
insb
xor
and
pop
mov
and
and
cwtl
nop
or
enter
orl
mov
xchg
shr
in
adc
xor
orb
rolb
mov
xchg
jecxz
into
cmp
fsubs
pop
roll
aam
pop
rorb
add
int3
sbb
rcll
das
mov
sbb
mov
push
sbb
movsb
mov
inc
cwtl
xchg
nop
fs
inc
push
mov
sbb
sbb
insb
push
sbb
fs
pop
sbb
pop
push
push
fs
inc
push
dec
dec
inc
nop
inc
push
sbb
cmp
sbb
sub
sbb
and
sbb
fs
inc
sbb
fs
inc
push
or
add
daa
pop
sbb
cld
sar
orl
hlt
lock
call
in
fdivl
enter
aam
enter
int3
enter
or
sarb
push
dec
dec
inc
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
inc
push
sbb
adc
sbb
or
add
jb
inc
add
sar
nop
xchg
orl
aad
inc
push
sbb
add
enter
clc
hlt
lock
and
and
and
int3
orl
enter
or
enter
mov
enter
test
enter
mov
or
xchg
nop
mov
test
and
jo
enter
push
or
pop
xchg
call
dec
lock
rorl
repz
cmp
jl
mov
sub
inc
push
stc
dec
dec
pop
icebp
repnz
sbb
hlt
cmc
negb
fs
inc
idiv
stc
fs
inc
push
cli
sti
cld
nop
inc
push
sbb
incl
sbb
loop
sbb
in
out
fs
inc
out
jmp
ljmp
in
out
out
inc
push
sbb
rolb
sbb
aam
sbb
xlat
fcomp
fs
inc
push
fcmovu
fcoml
inc
push
sbb
ret
fs
ret
fs
inc
enter
inc
push
lret
nop
inc
push
sbb
into
iret
inc
push
sbb
mov
sbb
mov
mov
fs
inc
mov
mov
mov
push
sbb
in
mov
pop
je
in
iret
inc
pop
fdivs
fadd
xchg
push
add
adc
ljmp
adc
and
jg
cmp
add
inc
js
gs
imul
adc
imul
jle
push
fmuls
adc
inc
dec
gs
jo
inc
fxch
pop
nop
pop
pop
pop
std
incl
enter
dec
jne
dec
dec
gs
outsl
jb
sub
lret
mov
mov
dec
ret
inc
dec
outsb
pop
inc
jb
pop
adc
inc
pop
fs
adc
test
or
insb
xlat
in
inc
fldcw
push
xchg
stos
adc
xor
xor
rorl
mov
pop
push
ljmp
jl
or
imul
outsl
mov
js
xchg
pop
or
rclb
push
inc
xchg
or
dec
jbe
scas
subb
insb
outsl
ja
pop
arpl
pop
or
outsb
jmp
push
mov
test
stos
in
pop
mov
pop
or
push
divb
sbb
dec
jo
fcoml
sbb
test
mov
sub
mov
push
xor
adc
sbb
imul
pop
pop
test
fs
nop
in
inc
cmp
jmp
xchg
pop
fbld
fcomi
push
outsl
imul
or
fcoms
pop
das
or
inc
popa
jae
or
lret
pushf
pop
pushf
inc
xor
imul
clc
pop
pop
lret
jmp
pop
aas
adc
arpl
insb
popa
enter
sub
pop
pusha
mov
jb
insb
gs
mov
inc
and
or
scas
push
je
arpl
nop
or
inc
or
popa
outsl
je
mov
or
inc
imul
add
pop
push
popa
or
enter
lahf
rcrb
or
sbb
roll
fs
and
pop
scas
inc
pop
and
bound
jnp
fcomp
jb
mov
inc
and
xchg
mov
fcomp
xor
lea
gs
mov
lock
adc
cs
xor
push
jo
roll
pop
or
jae
and
and
mov
cmp
jge
pop
inc
add
mov
movsb
movsl
mov
mov
mov
push
imul
into
inc
das
or
jne
or
jns
neg
cld
test
call
dec
mov
ret
jmp
add
dec
xchg
incl
std
ret
push
or
pop
sub
sub
jbe
mov
std
call
mov
sub
jmp
mov
dec
jne
xor
scas
push
pushl
insl
or
loopne
sbb
sbb
pop
push
lock
inc
ljmp
outsl
inc
push
sub
fnstcw
fnstcw
orw
inc
push
mov
andl
jg
add
fildll
fildll
ret
dec
mov
jle
mov
add
rorl
fildll
stc
fldt
orb
add
push
push
mov
in
jg
rcrl
loope
xor
dec
cs
ffree
ffree
ffree
pop
lret
add
mov
push
jl
call
xor
dec
add
pop
inc
pop
xor
sub
cmp
clc
incl
sbb
stc
bound
and
test
mov
sbb
xchg
jnp
inc
call
sbb
sbb
xor
add
dec
add
insb
cmp
pop
aad
mov
push
in
cltd
out
lock
mov
lahf
mov
sti
call
mov
add
lea
push
add
clc
or
push
sar
mov
in
cli
movsl
clc
adc
imull
addb
push
lret
push
mov
or
or
call
inc
in
and
outsb
push
add
lock
xchg
xchg
add
filds
icebp
pop
ret
xchg
out
add
mov
enter
jl
push
pop
mov
call
sarl
rorl
xor
daa
lea
add
lret
mov
mov
inc
fsts
inc
fnstcw
pop
pop
xor
xor
rorb
sarl
adc
mov
add
pop
inc
mov
std
in
mov
ja
and
shlb
mov
or
or
pop
or
inc
pop
shll
pop
jmp
bound
daa
fsubrs
cmp
jbe
xor
pop
outsl
rorl
rcrb
outsb
or
mov
dec
xorl
fmuls
add
sbb
movsl
pusha
and
and
inc
and
rcrl
inc
leave
call
ret
sub
mov
dec
or
sbb
shr
mov
in
ret
dec
mov
test
rorb
scas
xchg
cmp
sub
mov
sbb
insb
push
push
add
clc
or
mov
inc
or
xchg
or
repz
sub
jmp
and
push
bnd
test
push
lock
add
xorb
cmp
jne
pop
hlt
adc
lods
jmp
movsl
imul
xor
adc
pop
sbbb
pop
fmull
call
test
addr16
xor
cmpb
or
jae
ss
xchg
or
xchg
cmp
ljmp
inc
inc
or
sbb
pop
mov
dec
jmp
sub
cmp
jb
cmp
int
std
cmp
imul
movzbl
add
add
pop
jmp
xor
jmp
jnp
cli
in
jle
cmpb
ret
je
in
inc
std
cwtl
leave
ret
and
mov
push
insl
pushl
jne
lea
mov
dec
push
je
adc
and
dec
lods
fiadds
xchg
add
lahf
imul
add
sbb
jo
je
pop
pop
test
call
add
shrl
sbbb
call
adc
cmp
cli
xchg
fisubl
jbe
cmp
sub
je
rolb
jns
push
aam
mov
cmpsl
sbb
pop
xor
aaa
adc
or
jmp
push
cmpsl
stc
push
jne
cld
fwait
mov
push
bound
cmp
jbe
mov
push
fs
jle
xchg
add
jmp
xor
and
mov
mov
lods
adc
jmp
mov
add
xlat
jo
in
add
pop
and
insb
aad
mov
jbe
pop
cmp
mov
or
add
xor
ja
iret
pop
stos
inc
add
movsb
scas
in
mov
mov
lret
sub
leave
mov
or
repz
pop
loopne
add
or
je
mov
push
inc
je
mov
inc
je
mov
dec
sarl
mov
sub
fstpt
and
sbb
adc
sbb
mov
sub
psubw
fildl
repnz
movsb
jg
mov
jl
sbb
iret
mov
sbb
adc
xorb
pop
mov
mov
daa
pusha
roll
and
xor
hlt
mov
int
add
pop
cmp
call
or
push
xor
xchg
or
js
pop
or
xchg
xchg
dec
das
add
adc
jle
mov
lock
push
dec
mov
mov
jbe
jge
push
jno
imul
cld
lea
clc
out
inc
stos
in
ja
int3
and
dec
das
lcall
sti
inc
jmp
add
cmpsl
mov
push
xchg
nop
jl
bound
arpl
scas
leave
push
call
leave
mov
in
sub
fcoml
push
rorl
sbb
adc
imulb
outsb
insl
dec
or
push
and
push
or
or
das
movsb
mov
stos
xchg
push
mov
daa
mov
mov
sub
in
xchg
jg
add
jmp
cmp
jne
pop
pop
rcl
mov
xchg
mov
mov
popl
cli
mov
jl
mov
inc
repnz
stos
jp
icebp
or
jecxz
xor
adc
add
pusha
rcll
andb
mov
mov
mov
sub
in
cmp
push
call
mov
jecxz
mov
push
xlat
cs
sti
out
insl
pop
ret
sti
add
ja
movswl
cmp
out
jle
mov
sbb
test
cmp
add
addl
mov
icebp
xchg
insl
xlat
pop
aad
xor
push
loop
dec
inc
loopne
lods
or
add
mov
fisttpl
cltd
add
icebp
jg
jo
pop
dec
aam
dec
or
sbb
add
sub
je
mov
add
neg
or
jge
inc
inc
je
stos
loop
pop
adc
or
mov
daa
add
pop
mov
inc
push
pop
xchg
dec
add
fdivrs
dec
call
sub
imul
mov
mov
mov
outsl
cmpsb
and
pop
push
push
cli
adc
sarl
lahf
xchg
add
mov
mov
dec
lcall
mov
inc
push
push
dec
je
dec
jne
cli
out
fisttpl
jmp
mov
jnp
stos
jecxz
cmp
in
inc
jne
call
mov
lcall
fildll
filds
or
cmp
xchg
mov
add
outsl
pushf
inc
clc
lea
cmp
lods
adcl
push
push
sub
or
call
dec
sbb
push
lods
loop
dec
test
mov
sub
sub
ficomps
sub
sub
inc
sub
sbb
sub
mov
adc
sub
inc
add
pop
sbb
sub
sbb
sub
loopne
add
je
add
xchg
cmpsl
cmpsl
cs
add
push
sub
jmp
stc
sar
mov
ret
sarb
testl
loope
popf
or
sub
inc
sbb
inc
add
mul
fldt
sub
add
jns
outsb
and
jecxz
loope
leave
stos
mov
or
cld
jmp
fcomp
fstsw
jnp
lds
add
fidivl
mov
adc
cmp
mov
dec
inc
jecxz
inc
int
and
add
sub
jmp
stos
inc
clc
add
jns
mov
ja
jge
dec
add
call
jae
fistps
adc
add
add
or
incb
adc
mov
imul
dec
add
jmp
mov
out
mov
icebp
sti
push
or
mov
push
add
dec
out
or
add
mov
aaa
jg
or
jmp
pop
arpl
test
pandn
or
mov
mov
mov
fidivl
repnz
add
or
loopne
in
insl
add
cmp
icebp
or
fidivl
or
or
fwait
sbbb
or
lods
daa
or
sub
into
and
jne
dec
outsb
popa
fists
cmp
adc
pop
fwait
jnp
push
and
add
outsb
mov
out
aas
jecxz
mov
lods
mov
cmp
mov
ret
and
jmp
decl
test
pop
cmpsb
push
sbb
lea
xor
loope
lret
sub
dec
xchg
fld
add
aam
xchg
or
imul
adc
ljmp
test
daa
inc
mov
push
xor
adc
mov
adc
cltd
adcb
pop
push
imul
or
jno
xor
lea
pop
scas
push
add
inc
jbe
jb
jb
insb
jne
scas
push
mov
sarb
jbe
faddl
adc
fcomps
jmp
pop
lea
dec
jge
pop
hlt
sbb
cmp
inc
adc
cmp
push
lahf
movl
inc
icebp
imull
idiv
or
sbb
cs
icebp
cltd
idiv
out
shlb
pop
xchg
push
in
je
cmpl
or
std
lds
xor
add
sub
jecxz
jb
inc
test
fs
or
dec
sbb
ret
out
cmp
adc
loopne
mov
mulb
lods
sti
pop
je
dec
cmp
inc
stos
add
mov
bound
push
call
xlat
xlat
mov
push
ja
iret
cmp
jns
insb
dec
sub
incl
mov
mov
or
addl
pop
ljmp
out
lods
into
mov
xchg
mov
ja
jmp
outsl
sub
fists
adc
jbe
dec
std
push
mov
mov
std
subl
jo
add
call
mov
sahf
mov
je
cwtl
mov
sub
inc
mov
push
hlt
push
sub
fsubrl
mov
cltd
test
pusha
and
sbb
stc
and
nop
fcomip
mov
fstps
mov
fsubp
jne
daa
iret
cmpsl
or
or
jb,pt
scas
or
add
repz
mov
push
ljmp
fcomi
sbb
xlat
mov
and
retw
pop
aaa
hlt
aam
lds
jle
jmp
xchg
add
mov
mov
adc
jns
mov
cs
mov
cmp
pusha
lcall
push
lock
jmp
outsl
std
cld
jmp
lea
mov
or
sub
and
push
xchg
iret
popa
incl
and
mov
fwait
adc
jbe
lds
fwait
push
mov
lea
sbb
add
hlt
pop
je
mov
push
sbb
jmp
int
movsb
in
pop
in
rol
xor
rol
mov
daa
iret
dec
ds
in
inc
ret
ret
and
addr16
mov
jns
or
in
iret
jge
add
adc
pop
inc
daa
sbb
add
bound
gs
cld
fisubrl
roll
inc
rorb
mov
fcompl
cmpl
pushf
ja
enter
call
rolb
sbb
xor
or
sbb
fcompl
cmp
or
popf
xor
pop
lods
inc
psllq
jo
int
add
pop
mov
adc
cmc
add
adc
mov
jno
jp
adc
jnp
or
out
mov
in
add
cs
mov
out
mov
lock
nop
call
mov
cmp
fstl
or
mov
push
xor
mov
mov
sbb
inc
ss
mov
sbb
lahf
cmp
mov
jl
cli
xchg
jmp
inc
lea
xchg
mov
or
add
adc
and
fs
sbb
adcb
mov
mov
scas
mov
inc
push
add
int3
fmull
inc
add
call
inc
cltd
or
hlt
call
nop
or
js
sbb
xchg
mov
mov
push
sbb
push
enter
in
scas
xchg
iret
jo
push
sub
fstl
or
sub
inc
cmp
dec
or
mov
sbb
shll
lock
push
out
inc
add
sub
ret
rclb
adc
rclb
inc
ds
sbbl
push
divl
push
mov
popa
cld
bound
add
cmp
and
sahf
inc
ds
mov
push
in
inc
enter
jb
fstl
gs
enter
mov
jbe
dec
dec
push
loopne
jo
dec
negb
call
mov
repz
add
cmpl
mov
inc
shlb
js
jg
mov
cld
mov
and
push
or
arpl
lods
mov
les
jle
fucomi
xor
push
jg
cmp
in
loop
mov
and
ret
sbb
xchg
int
xchg
jge
dec
cld
mov
inc
jo
hlt
sbb
or
pop
pop
movsb
jg
push
les
push
sub
dec
lret
lock
adc
ljmp
lock
cmp
sub
nop
and
lcall
test
add
mov
cmp
ficoms
cmp
or
jmp
inc
inc
mov
xchg
add
loope
mov
or
or
sarl
mov
add
inc
push
or
inc
ficoml
mov
push
lock
clc
cmp
cmpsb
adcl
loopne
inc
pop
or
sti
dec
loopne
je
xor
fadd
jle
clc
cmp
rcll
xor
ret
pop
mov
lods
mov
int3
jb
leave
pusha
mov
mov
out
mov
mov
add
fimull
popa
addr16
aam
inc
call
dec
xor
inc
inc
push
push
push
cmp
je
jmp
xor
enter
aaa
jmp
xor
repnz
jmp
and
add
mov
add
push
pop
or
or
or
add
rclb
jae
call
enter
lds
inc
ds
mov
cwtl
push
jle
shll
adc
cmpl
pcmpeqb
loope
xchg
pushf
lods
shlb
add
sbb
mov
mov
add
mov
fcom
cltd
jge
shll
ds
mov
fisttpl
fistpl
mov
and
jo
testl
jl
shrl
sbb
lea
in
popa
adc
adc
arpl
sarb
or
pcmpgtb
addr16
rclb
mov
pushf
inc
lock
jl
loop
lea
aaa
lods
pop
mov
jmp
xchg
xchg
ds
in
fs
pop
pushf
mov
fs
add
mov
nop
mov
int3
or
mov
adc
xchg
adc
cmpsb
xchg
mov
mov
sbb
xorl
mov
add
ljmp
fsubs
imul
mov
cmp
xor
xor
push
arpl
add
mov
lock
sbb
rcr
fsubl
les
scas
sub
jo
push
sub
cmp
jg
mov
mov
dec
mov
sbb
xchg
and
stos
jnp
popa
mov
dec
fnstsw
mov
scas
stc
fcompl
or
xor
in
int
jbe
mov
and
test
int
and
mov
adc
into
mov
or
scas
lret
adc
ja
jb
sbb
add
fldenv
add
nop
pop
jg
push
nop
or
push
scas
xor
fwait
mov
jbe
popa
adc
or
aaa
sub
insb
mov
add
test
scas
lahf
popf
test
mov
mov
mov
mov
add
or
adc
push
stc
jmp
js
fdivl
in
adc
adcb
cmp
out
inc
pop
ja
test
bound
cmp
pusha
xor
add
mov
or
mov
dec
xchg
dec
test
fidivrl
jl
mov
and
mov
sub
adc
jns
dec
or
inc
mov
xor
add
add
adc
push
push
xor
scas
mov
mov
and
ja
call
loop
lcall
je
call
test
pop
shrl
sub
pop
insb
fstps
dec
pop
pop
jb
insl
jne
rdpmc
hlt
loop
adc
jno
mov
stos
cmp
mov
gs
stos
in
inc
adc
jp
xor
repnz
dec
push
sub
in
xorb
ss
pop
sub
adc
sub
jb
add
inc
inc
mov
cmp
jne
mov
iret
push
xor
hlt
hlt
xchg
adc
fs
stc
pop
shl
adc
mov
aas
aad
sbb
popa
rcrb
add
push
fwait
inc
xchg
jl
pushf
das
aaa
mov
jnp
and
sbbb
mov
inc
add
mov
je
dec
lods
lcall
push
mov
sub
jb
inc
mov
xchg
adc
decl
push
dec
mov
ljmp
cld
sub
mov
mov
lock
mov
push
jg
insb
cs
jbe
jb
cmp
mov
repz
mov
add
mov
in
sti
in
sub
mov
adc
call
clc
mov
movsl
cwtl
mov
je
or
js
dec
insl
lcall
adc
add
jmp
jb
repnz
mov
or
call
ret
mov
scas
mov
cmp
cli
cmpsl
add
fwait
mov
inc
inc
cmp
sbb
cwtl
push
addb
push
push
outsl
pushaw
xlat
das
xor
mov
cmp
push
lret
clc
sbb
jmp
push
dec
rcll
in
fucomip
hlt
jnp
mov
cmp
mov
mov
lods
add
jae
xchg
adc
jne
push
adc
dec
in
jns
in
and
mov
adc
into
dec
out
andb
jl
adc
in
jmp
dec
jp,pn
mov
insl
notl
lret
mov
pop
mov
inc
mov
sbb
call
xor
call
xchg
lahf
out
fnstcw
adc
mov
sahf
ret
jg
in
stc
jnp
xchg
pop
in
xorb
mov
cmp
mov
fdivl
push
out
shl
insb
iret
out
mov
sub
and
in
stc
ljmp
mov
jae
out
mov
mov
sahf
cmp
sarb
movsb
sub
nop
xchg
sbb
int3
and
xchg
xchg
int3
mov
call
hlt
pop
mov
and
gs
mov
es
arpl
negl
push
enter
xchg
int
leave
and
int3
enter
popa
rolb
int
test
mov
addb
push
xchg
lret
clc
test
outsl
add
push
mov
mov
inc
sbb
sbb
mov
inc
clc
or
fucomp
cmp
jo
inc
subl
fadd
mov
stos
clc
mov
push
insl
das
fs
js
add
add
fs
xchg
pop
push
test
jo
sarb
push
iret
and
push
dec
add
push
mov
mov
pop
cmp
in
out
xchg
orl
jae
sbb
decb
push
mov
cmp
xchg
or
push
call
lcall
call
test
je
js
cli
and
mov
bound
cmp
xchg
add
sub
inc
imul
push
jo
arpl
js
push
push
mov
mov
out
sub
nop
fsubs
pop
gs
lcall
mov
cmpsb
imul
pusha
pusha
imul
vmread
cmpsb
imul
imul
inc
and
je
rorl
sbb
adc
mov
popf
add
jo
mov
dec
mov
pop
mov
pusha
loopne
xlat
je
xlat
ja
pop
aam
daa
mov
pop
dec
xlat
xor
scas
rorb
fstl
test
dec
arpl
xchg
int
cmpsb
movsb
lods
scas
mov
daa
fwait
pushf
xchg
scas
cwtl
loopne
xorl
fcoms
dec
ss
scas
mov
test
fstps
scas
jl
dec
jae
sbb
js
je
nop
out
shrb
leave
xchg
sub
scas
or
fwait
xchg
mov
subb
sbbl
mov
push
jl
xor
orl
inc
fs
fs
pushf
inc
mov
cmp
mov
int
out
movsb
scas
xor
scas
pushf
cmp
scas
sub
mov
fldenv
and
data16
sbb
sbb
pop
adc
add
cmpsl
inc
cld
or
jl
leave
xor
mov
xor
cmpsl
push
stc
adc
jmp
scas
js
sub
jmp
dec
mov
jbe
and
pop
mov
lods
pop
and
jae
stc
hlt
mov
in
fcompl
or
lods
test
arpl
movsb
fisttpl
jo
dec
mov
ds
mov
sbb
sbb
rol
or
jae
or
mov
loopne
or
cwtl
imul
nop
push
mov
jns
out
test
aaa
idivl
push
sbb
sub
movaps
dec
mov
cmpsl
call
ss
jg
std
push
jae
xchg
aam
test
movsl
dec
idivl
or
mov
test
push
or
in
add
repz
cli
dec
divl
pop
add
lahf
lea
out
mov
not
aad
cmp
pop
lea
push
lea
cs
in
push
mov
mov
push
push
je
enter
outsb
xchg
lret
pushf
nop
mov
dec
xchg
movsb
sbb
mov
addr16
pop
pusha
and
lock
add
push
or
jecxz
fs
sub
pop
mov
fisttpl
adc
lods
xchg
add
in
dec
lock
pop
push
push
je
and
mov
das
adc
cmp
insb
mov
in
sub
xchg
xor
adc
jb
sub
ja
xchg
xor
push
mov
jb
pop
xchg
les
pusha
mov
jne
addb
sbb
mov
xchg
push
or
pop
shr
lahf
stos
data16
and
rcll
fwait
cmp
sbb
ss
pop
and
incl
add
sub
push
sbb
ss
in
adc
or
mov
pop
cmpsl
push
rcll
fildl
or
jae
call
cmp
lods
jge
sub
clc
out
mov
add
adc
add
fldl
xchg
mov
add
or
push
dec
fwait
inc
cmc
jg
outsb
orb
mov
cmp
jle
mov
shll
adc
or
push
lahf
ljmp
lret
jo
in
inc
or
dec
jmp
inc
jne
sub
cmp
add
jne
or
clc
mov
cmp
insb
aad
arpl
test
sub
adc
adc
sbb
aaa
dec
pop
jg
xor
es
scas
stos
dec
push
sub
xchg
cmc
daa
or
orb
push
cmp
pusha
sub
jle
mov
sbb
mov
orb
outsl
or
loopne
mov
jmp
mov
mov
sub
jg
dec
mov
xor
adc
mov
push
inc
sbb
into
popf
push
pop
or
loop
fldcw
sub
inc
clc
insb
shrl
sub
add
inc
lock
push
in
out
popf
push
cmpb
sbb
push
sti
mov
lods
adc
cmpb
dec
aad
fdivrl
and
adc
faddl
repz
nop
xchg
mov
andb
pop
cmc
jge
add
popa
imul
daa
push
je
and
nop
inc
rolb
pusha
and
sbb
and
jbe
or
xlat
cwtl
loopne
int3
jno
aas
lock
cmp
mov
out
inc
lret
xchg
jnp
lock
xchg
cmp
push
fcompl
xchg
out
repz
or
insb
and
rorb
adc
mov
inc
insb
and
sbb
push
push
adc
add
out
inc
je
add
or
inc
pop
pop
test
sub
cmpl
clc
push
arpl
and
push
movsb
pop
push
push
adc
mov
add
xchg
rcrb
jo
adc
push
call
dec
ljmp
mov
adc
mov
cltd
inc
push
xchg
call
mov
ret
cmp
sub
out
push
imul
mov
push
aaa
loop
cmp
pusha
xlat
add
push
add
ljmp
pushf
rol
or
rclb
dec
lcall
frstpm(287
mov
cmp
cltd
mov
test
or
mov
mov
mov
jne
cli
push
or
fsubrs
sub
mov
add
push
or
or
jo
stos
add
push
aam
int3
jle
cmp
sbb
xor
lock
dec
into
call
cmp
sbb
or
add
je
dec
add
adc
or
push
add
add
insb
cmpsl
pop
hlt
call
shlb
adc
and
inc
inc
sub
insb
xchg
mov
push
daa
inc
sbb
pop
ret
inc
aad
jno
pop
and
pop
sub
xor
pop
leave
js
lcall
jge
data16
push
addb
jae
jecxz
shlb
adc
movsl
test
insb
scas
pop
loopne
push
fistpll
adc
lret
testb
loopne
std
add
push
movsl
mov
dec
pop
add
push
mov
insl
lea
xor
pop
xchg
pop
xor
ds
cmpl
loopne
call
cmp
adc
cmpsl
imul
xlat
lods
sbb
cmc
ss
sbb
add
lds
nop
adc
add
pop
jb
inc
daa
leave
xchg
pushf
shl
enter
inc
fwait
pushf
sub
outsl
sub
sub
cwtl
pop
push
xor
xorb
out
add
sahf
pop
push
inc
imul
or
pop
call
in
add
cmpsb
adc
mov
xchg
sbb
cmp
leave
mov
pop
jnp
push
sbb
xchg
inc
nop
pop
outsb
xchg
or
sbb
mov
mov
mov
cmp
inc
pop
pusha
xchg
xchg
popa
xchg
dec
mov
add
int3
jge
lock
pop
addr16
repnz
dec
aad
mov
xor
mov
int3
cmp
jmp
and
cmpb
sbb
xlat
adc
xor
dec
push
mov
cmp
jnp
xchg
pop
lds
pop
sub
fstpl
call
not
and
shlb
popa
xor
mov
or
xchg
inc
push
mov
or
push
cs
fildll
adc
lahf
loope
pop
mov
andb
push
dec
mov
loop
pop
add
mov
dec
mov
not
and
mov
mov
adc
ret
or
testb
mov
pop
jae
imul
sbb
not
and
enter
bound
jbe
aam
pop
rcrb
call
mov
js
adc
lods
test
outsb
add
btr
ret
mov
dec
outsl
pop
dec
jns
call
ficoms
mov
mov
adc
shl
ret
mov
jmp
pop
and
or
or
into
lock
call
aam
lea
fsubr
inc
add
sbb
add
decl
xor
mov
push
je
data16
dec
sbb
rolb
insl
sti
add
push
push
scas
fstpt
sarb
cmpl
adc
sbbb
lea
mov
or
lea
pop
lea
loopne
ret
jnp
jae
ja
push
add
insl
push
aas
sub
push
pop
mov
in
and
push
jle
mov
cld
or
push
cmp
imulw
lea
or
add
fdivs
and
lea
add
filds
mov
push
fidivrl
fdecstp
pushl
outsb
cltd
xor
sub
imul
mov
push
jecxz
pop
cmp
data16
sbb
testb
fimuls
jbe
mov
inc
add
sub
add
sbb
loopne
insb
add
sub
adcl
nop
fwait
in
and
inc
sub
pop
and
daa
mov
test
add
xchg
sarl
and
or
pushf
mov
push
notb
test
ljmp
addl
es
cs
jb
hlt
push
sub
insl
push
add
xlat
inc
mov
xchg
mov
pop
cmp
push
hlt
int3
inc
push
cltd
testb
out
in
add
xchg
sbb
xor
daa
add
popf
inc
ss
icebp
xchg
dec
sti
jl
mov
jecxz
int
ret
push
in
xchg
fs
test
sub
popf
mov
hlt
or
fs
frstor
push
sbb
pushf
stos
leave
cmp
jp
jmp
xchg
repnz
cmc
xor
gs
sbb
pop
xchg
andl
xlat
int
dec
enter
call
sbb
pop
in
js
test
cwtl
and
sbb
mov
push
cmpsb
push
aas
fsts
jmp
xchg
mov
sub
adc
fldt
addr16
data16
xor
dec
xor
xchg
cli
repz
sahf
sbb
sahf
cmp
jg
out
jmp
sbb
popa
sbb
sbb
pop
enter
push
inc
inc
jo
adc
xchg
aad
loope
inc
adc
adc
loopne
xor
pop
and
xchg
mov
fs
pop
push
inc
jb
mov
inc
xchg
sahf
sub
rclb
cmc
pop
and
sub
or
sti
cld
or
addb
or
mov
ret
imulb
xchg
mov
movsl
les
inc
mov
mov
aaa
test
mov
movl
outsl
push
inc
loopne
dec
jmp
sbb
xchg
iret
out
jne
add
add
aas
cmp
push
add
js
hlt
fcomps
jle
bound
data16
pop
or
or
adc
or
add
jne
and
or
loopne
out
xchg
movsl
repz
xlat
nop
adc
lds
mov
jle
mov
sbb
lcall
shll
in
in
xorb
mov
sub
hlt
inc
sub
cmc
push
lahf
push
or
faddl
sub
xlat
mov
jle
or
lds
xchg
inc
lock
pusha
arpl
gs
sub
sub
call
mov
cs
js
and
or
and
dec
xchg
push
push
data16
fadds
mov
jb
fmull
sub
lea
fmul
addr16
and
push
or
xchg
insl
test
int
or
add
mov
fsubrl
pop
orb
add
jle
add
shlb
daa
hlt
sbb
push
int
pop
faddl
rcrl
shrb
inc
xchg
xchg
add
add
pushf
mov
fistps
add
inc
push
push
pop
loope
mov
and
mov
and
fsubrl
ret
pop
or
or
lcall
cmp
sbb
inc
or
outsb
or
mov
adc
sub
mov
jecxz
inc
daa
or
fsubs
adc
fdivl
lahf
xor
test
xchg
cmp
imul
ret
dec
jbe
cmp
out
outsb
or
push
call
jmp
sbb
inc
frstor
lds
repz
enter
inc
xchg
movsb
or
or
int3
xor
cwtl
sbb
cmp
int3
or
arpl
mov
or
incl
insl
mov
adc
push
sarb
xchg
pop
test
push
iret
fdivl
movntq
adc
stos
cmp
sahf
mov
outsl
cmp
loopne
adc
cs
pop
sbb
negb
fmuls
testb
push
jp
jbe
adc
mov
or
pop
add
mov
pushf
push
or
testb
cld
fst
out
sbb
loope
ljmp
mov
lods
jecxz
mov
and
nop
addr16
mov
jmp
jmp
add
mov
mov
pop
lret
push
stos
mov
fistpll
nop
pop
cs
and
inc
lock
dec
sbb
pop
sub
adc
js
sub
ljmp
rcrl
sbb
outsb
scas
xor
inc
lods
in
inc
movsb
add
and
aaa
sbb
dec
sub
outsl
test
ja
xchg
sbb
lret
cmp
int3
ret
cmpsl
adc
cs
stos
push
scas
loop
movsb
mov
mov
or
jbe
dec
push
cmp
pop
loop
inc
cmpsb
sub
xchg
inc
sub
sbb
cmp
cmp
mov
mov
jle
enter
jge
push
mov
mov
pop
test
shll
push
dec
push
jb
inc
jle
outsb
cmpsb
cmp
pop
cmpsl
mov
jno
mov
sub
movsb
push
pop
inc
mov
pop
stc
push
cld
dec
cmovs
mov
mov
xor
out
dec
push
aas
jo
pop
shrb
xorb
mov
stos
pop
xchg
mov
call
or
push
fwait
add
lock
add
jmp
mov
xchg
inc
inc
mov
lods
push
or
test
push
adc
movsb
movsl
or
add
inc
aad
mov
shll
int3
int
inc
data16
scas
push
out
xor
lock
cmp
jecxz
jbe
mov
pop
or
lea
cld
dec
dec
stc
adc
daa
dec
sub
lods
insl
test
push
inc
push
sbb
cli
in
outsl
add
je
jmp
mov
xor
add
xor
push
outsl
bound
lea
jmp
mov
cmpl
push
fcomi
add
or
add
adc
outsl
repnz
and
mov
pop
sbb
push
pop
push
lahf
stos
push
in
push
lcall
add
mov
imul
inc
adc
push
iret
jg
pop
rolb
sbb
xor
lea
push
jb
lea
shrl
jb
xchg
bound
sbb
xor
xor
cmp
imul
dec
adc
sub
mov
subb
adc
ret
inc
push
cltd
adc
js
add
stos
hlt
outsl
mov
mov
test
xchg
sbb
aaa
rol
cmpb
add
hlt
xor
cmp
xchg
repz
stos
or
cmp
addr16
lcall
mov
mov
push
push
rolb
inc
test
clc
ss
ja
or
jge
pop
lock
pop
pop
clc
lcall
scas
sbb
push
ds
pop
jmp
aad
fwait
out
call
push
mov
xchg
test
xor
add
or
and
popf
sub
in
jns
aaa
movb
add
es
nopl
add
lret
sub
jle
jg
add
or
bound
sti
rorb
inc
xor
mov
pop
ret
jmp
cli
xchg
sbb
mov
or
inc
or
cmp
push
push
jecxz
inc
out
push
or
lret
mov
push
cmp
sti
mov
test
arpl
sbb
shrl
mov
or
rolb
sbb
cmp
inc
rclb
shlb
jl
fsubl
or
mov
scas
frstpm(287
add
rcrb
jecxz
or
cvtdq2ps
sbb
std
add
jnp
je
jge
std
jae
fildl
popf
fwait
mov
and
dec
mov
lcall
sahf
mov
sub
or
sub
jae
lahf
or
neg
insb
roll
cmpsl
dec
push
sbb
adc
pop
cmp
ds
insb
movb
add
pop
mov
dec
push
push
stos
or
add
push
mov
sbb
xchg
lahf
lock
or
dec
icebp
xchg
sub
mov
lock
lret
je
or
inc
mov
sbb
sbb
ror
sub
inc
mov
bound
push
push
dec
inc
sbb
aad
fstl
add
out
inc
jmp
dec
test
inc
out
pop
aas
pop
lods
rclb
and
dec
xchg
sbb
jle
stc
imul
sbb
xor
or
dec
push
stos
xchg
ja
inc
mov
inc
cld
add
xchg
mov
mov
mov
popa
ljmp
rclb
pop
adcl
inc
lea
or
mov
out
insb
jg
add
add
xor
aas
adc
cwtl
outsb
addr16
inc
dec
insb
fcmovbe
xlat
and
mov
dec
fwait
cmp
push
inc
or
cmpsl
cmp
sbb
dec
xor
cmpsl
xor
cs
pop
lds
mov
push
cmp
jbe
divb
pop
mov
inc
jb
sub
outsb
daa
cwtl
push
lods
inc
insb
mov
mov
push
push
out
adc
mov
add
or
ljmp
mov
push
push
push
addl
xadd
icebp
sbb
jg
out
out
xchg
add
add
mov
testb
xor
sahf
mov
inc
inc
jo
sbb
or
out
mov
push
daa
or
or
cmpsb
jnp
adc
inc
inc
outsb
shll
and
push
mov
dec
dec
jb
outsb
scas
movsb
pushl
or
mov
and
cmp
pop
or
cmp
cmpsb
incb
cmp
hlt
xchg
mov
nop
int
mov
push
frstor
iret
xchg
jbe
xor
movsb
lahf
or
mov
clc
mov
jae
add
cld
jl
lods
or
jae
outsb
mov
mov
loop
pushf
mov
mov
xor
and
enter
push
push
dec
and
inc
orl
cmp
xor
iret
mov
subl
addb
xchg
call
fiaddl
inc
push
enter
in
push
in
push
in
clc
cmp
xchg
out
ret
inc
xchg
rcll
mov
xor
aas
mov
aaa
cmpsb
pop
mov
stos
loopne
fbstp
cli
daa
adc
push
mov
sub
movsl
adc
and
pop
mov
sahf
mov
xchg
cmovno
fiaddl
mov
popf
ljmp
sub
push
mov
aas
cmp
sub
xchg
shl
sbb
imul
push
movsl
add
inc
xchg
jnp
push
add
sarb
mov
mov
sbb
inc
shrl
aas
add
repz
cmpb
hlt
or
pop
shlb
xchg
dec
pop
dec
adc
clc
push
mov
inc
dec
pop
loopne
mov
or
push
and
in
or
call
jbe
int
out
lahf
in
clc
add
outsl
add
xchg
mov
jno
cmpsb
mov
push
mull
xchg
jle
dec
sbb
push
les
test
adc
daa
lock
jle
stos
dec
cmpsl
jae
sbb
test
cmp
jae
iret
jle
pop
xor
jbe
mov
jle
ja
push
cmp
repnz
pop
xlat
shlb
cmp
sub
fimuls
jp
call
jg
sbb
adc
or
jmp
lahf
mov
or
cmp
push
cli
jno
sahf
out
pusha
es
and
sbb
and
icebp
xchg
sub
sub
or
xchg
add
jle
mov
lds
shr
push
sbb
je
add
ja
inc
mov
xchg
scas
adc
xchg
mov
adc
mov
jl
popf
xchg
adc
call
inc
mov
dec
cmp
bound
dec
insl
nop
adc
mov
gs
xchg
loopne
fcom
rol
stc
push
pop
mov
into
mov
and
mov
or
push
test
dec
call
pop
sahf
std
lret
aas
jb
adc
or
push
in
mov
data16
les
aam
adc
mov
call
call
push
fsubrl
fdiv
call
inc
cltd
xchg
loopne
adc
push
sbb
shl
call
scas
ljmp
mov
push
popa
sbbl
and
dec
sbb
xor
in
ja
mov
dec
jbe
daa
push
jge
fs
jno
xchg
xor
orl
outsb
loop
sub
push
cld
loop
movsb
jnp
addr16
cmpl
and
jl
cmp
push
icebp
in
mov
sarb
jmp
lret
sahf
pushf
subl
xchg
pop
repnz
daa
mov
pusha
dec
out
clc
mov
push
outsl
cmpsb
cmp
pushf
cmp
and
sti
mov
inc
jle
call
adc
xchg
mov
jl
repnz
cld
sbb
mov
mov
jnp
call
push
fwait
push
push
dec
dec
dec
dec
cs
dec
dec
adc
fists
insl
fs
dec
addr16
insb
imul
inc
pop
pop
mov
sub
aas
jnp
insl
imul
fcomps
stc
pop
insw
js
push
adc
jl
insl
jp
mov
mov
mov
adc
inc
or
stos
add
xor
mov
mov
dec
jns
popf
inc
scas
outsb
test
pop
shll
repz
add
xchg
daa
inc
or
push
out
add
add
mov
or
insb
icebp
xorb
cmp
loopne
bound
cmp
jle
bound
mov
outsl
xor
inc
mov
cmpb
adcl
pop
or
test
pop
lea
arpl
pop
jmp
dec
ja
shll
cs
lret
dec
sarl
mov
add
push
popf
adc
add
jne,pn
fcomp
sbb
cwtl
sub
mov
and
mov
cmp
or
xor
int
addb
pop
cltd
jne
push
mov
lahf
lods
testb
mov
mov
jns
pop
aad
stos
mov
int
test
movsl
sub
in
mov
std
test
jne
mov
mov
loopne
mov
add
push
mov
or
xor
xor
add
cmpsb
xor
fildll
fiaddl
mov
add
mov
cmc
subb
or
push
subl
fistl
mov
and
push
cmp
xor
es
inc
cs
or
nop
mov
daa
arpl
xchg
test
push
add
lcall
adc
dec
sbb
mov
push
add
add
push
cmp
sbb
jmp
or
mov
hlt
lea
push
cmp
rcll
push
in
or
sbb
andb
jp
add
or
addb
test
pop
and
adc
pop
and
leave
and
cmp
pop
mov
add
fldcw
outsl
jnp
movsl
subb
sub
cs
lahf
test
xor
subl
insb
inc
pop
or
test
push
insl
fstpl
data16
repz
mov
int3
pop
mov
xor
cld
shrl
cli
fstps
cmp
jge
negl
mov
pop
in
stc
jl
mov
movl
cmp
orb
mov
mov
inc
mov
repz
sub
into
xlat
xlat
xor
sbb
xchg
mov
adc
push
fisttps
psubsb
push
repnz
ss
mov
gs
mov
xor
dec
push
les
push
rcrb
dec
cld
add
sbbb
daa
adc
and
mov
pop
icebp
sub
adc
xor
sub
out
adc
push
xor
pop
inc
jmp
adc
xchg
xchg
lret
repnz
or
push
test
xchg
movsl
es
aam
inc
push
call
inc
les
jno
add
dec
sbb
clc
cmp
mov
aaa
test
and
popa
xorl
add
movswl
mov
bnd
dec
push
aaa
call
add
bound
orl
call
cmpsb
imul
or
pop
pop
ds
dec
push
xor
mov
adc
arpl
push
jo
inc
lahf
dec
sbb
mov
fidivs
push
xorl
and
clc
ficoms
inc
sbb
or
cmp
sbb
and
cmpsb
inc
sub
movsl
xchg
cmp
add
jno
pop
jnp
fcomp
addr16
scas
and
testb
cmp
and
outsl
shrl
jno
fisttpll
scas
mov
mov
or
sub
cli
inc
sbb
rorb
gs
mov
sub
add
push
movl
loop
test
cmp
dec
sub
mov
cltd
cs
cmp
pushl
ja
mov
push
mov
dec
sbb
adc
push
dec
mov
jbe
loop
add
ffreep
push
cmp
dec
out
xor
shr
and
insb
je
sbb
adc
sbb
stc
stc
push
fsubs
push
aaa
add
sbb
int3
ja
push
adc
add
push
adc
cmp
jb
push
jno
and
lods
ret
iret
xchg
lea
movsl
scas
cmp
rclb
loope
dec
mov
daa
sbb
das
inc
xchg
popf
imul
clc
jle
sub
addl
or
add
rcrb
pop
sbb
shr
ficomps
decb
sbb
add
and
mov
sbb
xchg
mov
sub
enter
lea
roll
or
add
fmuls
lahf
test
ja
add
jae
movb
pusha
pop
insl
testb
or
fwait
psubq
rcrl
test
adc
stos
inc
repnz
psubsb
pop
lds
or
in
aam
adc
pop
clc
adc
jno
rcr
push
or
out
sub
fildl
ja
mov
outsl
jecxz
push
sub
add
or
insl
push
inc
pop
inc
or
fistl
into
fisttps
mov
adc
ss
mov
ljmp
aad
push
jge
jns
and
rorb
outsb
xor
cld
cli
or
lahf
rcrb
pop
aam
cmp
outsb
lds
insl
cld
mov
add
add
test
shrl
imul
sbb
fisttpl
or
xor
add
test
sahf
out
jbe
add
and
sbb
dec
popf
out
adc
pop
xor
out
cmp
rorl
ds
mov
fisubl
push
jnp
lock
out
daa
jns
ret
test
mov
das
leave
xchg
outsl
push
add
push
aad
add
cltd
hlt
gs
in
jnp
cltd
sbb
leave
add
or
push
fwait
jmp
dec
mov
sub
or
fisubs
dec
gs
cld
popa
jb
add
dec
cmp
fs
dec
jo
push
or
flds
sbb
popa
shll
jae
data16
clc
and
lods
mov
adc
das
and
ja
arpl
jo
imul
pop
shl
jmp
and
push
add
or
dec
push
cs
test
jbe
mov
or
repz
aam
outsb
adc
cmp
out
dec
sub
xor
xor
xor
xor
adc
inc
scas
cs
and
dec
les
lea
xchg
pop
push
fs
pop
outsl
call
nop
loopne
ret
xchg
ret
mov
add
inc
ljmp
cmp
push
sub
icebp
mov
sub
sub
pop
inc
sbb
mov
mov
or
mov
in
jmp
mov
xchg
es
movb
ret
rorb
fwait
inc
jle
pusha
jg
push
cmc
lea
adc
pop
adc
test
jl
add
jbe
jne
pop
mov
or
loope
mov
addr16
shr
pop
cmpsl
imul
shr
jmp
sub
xor
add
jne
call
push
add
cmp
sub
call
out
loopne
or
test
or
cmc
fisttps
mov
cli
add
cmp
or
push
fisttpl
clc
in
add
inc
aaa
mov
add
dec
out
push
pop
mov
xor
mov
pop
ljmp
mov
jb
lret
in
mov
ret
outsb
out
sbb
adc
adc
cmp
nop
add
inc
pop
or
in
inc
push
or
or
inc
push
cmp
pop
add
mov
pop
ret
enter
leave
lock
cmp
test
mov
mov
or
adc
mov
out
add
sbb
fcoms
push
pop
pop
fnstcw
in
or
sbb
cmp
or
push
shrl
rcrb
push
fadds
call
inc
xor
pop
add
sub
lea
mov
mov
imul
lods
pop
mov
rcl
inc
shr
adc
rcll
repz
in
add
ljmp
sub
xor
jbe
mov
sahf
paddd
incl
out
pop
or
insb
out
mov
test
test
xlat
punpckhdq
dec
dec
add
push
mov
add
test
aam
sbbb
test
add
add
subl
or
je
cli
mov
incl
or
or
xor
lock
pusha
pusha
mov
int3
fsts
and
and
out
xor
into
ja
imul
xor
hlt
negl
mov
adc
xor
mov
jne
pop
or
ss
sbb
pop
jl
add
pop
adc
pop
mov
sbb
mov
cmp
mov
xchg
adc
cld
daa
mov
mov
pop
insl
data16
push
subl
sub
loop
sub
xor
out
inc
inc
sbb
jbe
push
sbb
sahf
mov
inc
push
mov
push
and
lret
leave
xor
inc
cmp
lods
jo
dec
inc
sbbl
sub
or
mov
mov
push
ret
and
xchg
adc
push
add
scas
or
jnp
or
cwtl
lcall
mov
xchg
pop
out
inc
pop
stos
inc
iret
inc
shr
push
bound
mov
add
mov
test
mov
rorl
mov
add
add
addr16
xchg
mov
sbb
dec
fstpt
mov
lret
inc
sbb
and
or
sub
mov
pop
sbb
rolb
and
aad
cli
cmpsb
and
f2xm1
incb
jae
mov
sub
jbe
test
push
popf
push
xor
in
fisttpl
push
lret
mov
add
dec
xor
insb
outsb
popa
push
nop
mov
and
cmp
mov
das
ret
push
adc
dec
iret
ss
inc
mov
ficompl
sbb
shll
push
sbb
pminsw
insl
jmp
push
xor
enter
add
daa
inc
push
or
es
faddl
subl
ret
inc
ss
push
inc
cmc
imull
jl
sbb
xchg
or
and
rorl
mov
push
adc
or
mov
sub
popa
arpl
ficompl
adc
sub
and
rcl
fdivs
add
sub
ljmp
ss
les
dec
and
clc
fmull
int3
movsl
adc
in
and
dec
jg
sbb
push
cmp
mov
fidivrs
mov
hlt
add
xor
popw
mov
cmpsl
stc
or
xor
inc
lahf
mov
jo
jl
mov
xchg
fidivrl
imul
sub
jmp
mov
sbb
pop
inc
lds
insb
test
or
sub
js
and
sarb
sahf
pop
je
mov
in
lods
out
sbb
repz
or
in
mov
call
xrelease
mov
xchg
adc
mov
mov
test
cmc
lcall
add
or
add
mov
xchg
stos
lret
jg
dec
add
sub
push
inc
testb
adc
pcmpeqb
outsb
push
adc
incl
pop
or
mov
dec
lret
pop
mov
adc
add
inc
or
iret
add
inc
xchg
cmc
jo
cmp
arpl
fdivs
push
add
call
adc
dec
add
jbe
or
inc
clc
adc
cli
inc
mov
sub
cmp
mov
cli
mov
sbb
wbinvd
xchg
jg
sahf
jge
ss
and
xchg
jb
or
enter
xchg
movsb
mov
xor
das
pushf
and
jmp
enter
scas
add
sub
push
fdivrl
dec
sbb
imul
and
sub
lods
dec
mov
sub
shl
cmp
in
xchg
or
or
dec
mov
mov
fwait
inc
adc
jne
adc
add
push
or
push
push
push
add
push
push
movsl
jg
sbb
add
add
ret
fstps
faddl
lods
cs
xor
cmp
xor
aas
call
push
xchg
inc
or
jge
orl
push
and
ljmp
sbb
and
lock
jl
sbb
inc
and
fisubs
cmp
sub
and
sbb
or
or
or
mov
xchg
pop
mov
push
mov
decb
bound
loopne
sub
add
push
jmp
adc
pop
imul
mov
jne
lods
add
adc
test
les
xor
repnz
cmc
pop
rorb
dec
push
dec
dec
add
xor
jns
repz
dec
push
mov
jmp
push
sbb
jg
aas
in
pop
enter
cld
jmp
dec
xchg
arpl
bound
lea
add
adc
jne
mov
outsl
sbb
sub
add
je
dec
je
adc
das
pop
je
addr16
jno
popa
cvtdq2ps
inc
push
loope
push
repnz
les
and
lods
sub
mov
dec
or
and
xchg
ja
add
cmp
and
push
ret
cmp
push
call
cmp
enter
and
mov
pusha
add
jae
add
pop
and
ss
imul
adc
int3
mov
lods
pop
pop
fwait
push
add
insl
inc
xchg
out
fdiv
mov
lcall
cwtl
movsl
jmp
or
mov
push
sub
add
xchg
nop
add
or
je
leave
add
lea
xchg
addl
add
xchg
adc
dec
cwtl
fstp
or
mov
or
add
bound
sbbl
mov
mov
cmpb
pop
and
mov
icebp
adc
call
lock
add
or
and
out
in
into
cmp
ja
outsb
and
ret
cmp
addl
jl
cmp
dec
loop
iret
xchg
mov
es
fcomp
adc
pop
int3
je
xchg
lods
inc
inc
int
xor
ljmp
jbe
ret
loop
mov
pop
ret
clc
bound
jle
sbb
or
push
js
push
push
sub
pop
mov
addps
sbb
push
inc
shll
and
mov
sbb
fcmovu
ds
jg
cmp
push
adc
xor
pop
cmp
add
sbb
mov
cmp
xor
je
cwtl
int
add
pshufw
inc
jno
add
jo
add
adc
cmp
and
or
xor
test
pop
xchg
jl
fsubrs
cmp
inc
inc
or
cmp
jne
pop
xor
and
pop
orb
or
shll
idivb
mov
mov
mov
idiv
mov
sarb
sti
jge
xchg
mov
mov
mov
sti
pop
mov
lret
sbb
and
clc
adc
fimull
jns
pop
mov
es
or
insb
out
mov
push
jo
iret
pop
jb
sub
dec
cli
jmp
push
jecxz
or
stc
xor
inc
add
pop
notl
mov
iret
add
pop
add
mov
inc
je
outsb
jecxz
xor
imul
sub
mov
sub
cmp
jge
unpcklps
mov
outsb
movsl
jae
cli
scas
shll
and
jnp
sub
loop
lea
push
icebp
lds
adc
pop
cmp
incl
cmp
ja
push
stc
adc
add
rolb
insb
add
xor
sub
push
lods
lret
rol
push
sbb
aaa
or
cmp
dec
mov
les
into
push
leave
xchg
pushf
mov
arpl
dec
jne
pop
daa
cmp
xchg
mov
add
mov
cmpl
outsb
mov
ret
jo
sub
xor
and
mov
sbb
pop
fwait
movsb
jbe
push
or
subl
pop
add
pop
mov
and
mov
push
mov
popa
add
mov
ret
inc
jno
or
add
add
test
push
sbb
insl
jo
add
sub
add
das
mov
int
sub
ja
sub
lcall
outsl
movsl
sub
or
xlat
loopne
nop
mov
sbb
insb
lret
pop
add
cmc
cwtl
adc
imul
pop
push
sbb
clc
enter
andb
xchg
orl
mov
jmp
in
lea
add
hlt
cmp
into
pusha
frstor
lods
push
push
adc
add
dec
pop
sbb
rcll
es
jne
repnz
cmp
sbb
ja
pop
fiadds
cmp
data16
add
xchg
add
fistl
inc
or
dec
lock
push
data16
cmpsl
or
push
xchg
jae
xchg
cmp
sub
inc
xchg
lea
xchg
cmp
push
shlb
bswap
sub
inc
pop
jmp
scas
and
and
mov
pop
sub
cmp
or
and
outsl
ficompl
pop
out
rol
orl
pushf
or
orl
dec
xchg
xor
sub
sbb
testl
or
add
in
shlb
test
fwait
test
arpl
adc
mov
push
cld
push
mov
clc
pop
mov
jae
pop
ret
or
mov
mov
dec
cmp
and
stos
pop
sub
ret
addr16
pop
cmp
ja
cmp
or
jmp
movsb
fs
xor
xor
insb
sbb
jae
in
and
cmp
inc
jne
inc
jmp
sbb
pop
pop
xchg
adc
in
mov
push
movsb
sub
lahf
mov
cld
sub
and
xchg
pop
mov
loop
adcb
call
dec
call
jo
and
inc
xchg
jecxz
inc
push
pop
sbb
pop
jns
add
std
sbb
pop
and
sbb
shlb
pop
test
dec
cmpsb
push
inc
add
or
push
imul
add
mov
and
pop
fmuls
xchg
pusha
or
mov
pop
ss
jns
sub
orl
jb
clc
add
push
aaa
sti
gs
mov
or
jbe
mov
insb
in
mov
pop
push
pop
fcoml
or
or
into
push
in
shll
addr16
inc
leave
push
pusha
imul
inc
adc
je
pop
push
popa
ja
mov
subl
repnz
jno
dec
pop
sub
push
jne
adcl
cmpsb
int3
fs
jmp
and
push
cmpsl
out
mov
jmp
cmp
sbb
jnp
insb
lahf
mov
nop
pop
rclb
sub
jns
leave
cltd
add
leave
test
cld
es
xlat
sbb
add
or
add
out
and
int
mov
push
cmpsl
hlt
xor
cmc
inc
cmpsb
mov
rorb
cwtl
inc
dec
test
pop
dec
lds
imul
inc
xchg
push
pop
lock
insl
jle
sbbl
add
lret
lcall
rdpmc
lds
xor
testl
ret
cmpxchg
js
lea
sbb
push
jl
mov
test
cmpl
or
xor
adc
outsb
subl
xor
cmp
pushf
ret
jecxz
lret
cmpsl
in
mov
call
testb
fcoms
or
mov
fstpl
std
or
mov
adc
pop
xor
jg
cmp
sbb
cmp
jb
pop
jne
mov
sbb
cmp
ja
inc
fsubl
out
das
sbb
aas
mov
add
stc
mov
das
jbe
pop
jnp
push
repz
jo
ljmp
nop
mov
nop
push
stc
push
add
adc
mov
inc
in
test
push
fsub
dec
add
or
or
add
and
xor
cmp
data16
jle
pusha
outsb
rcr
cmp
xchg
popa
xchg
add
add
push
xchg
inc
test
jae
cmp
sub
lea
sahf
add
inc
fistl
push
push
push
push
xchg
and
adc
add
cmpsb
add
lcall
fnsave
adc
sub
out
mov
jl
add
sub
add
stos
push
add
mov
fnsave
or
pop
mov
sub
xchg
dec
add
add
pop
cwtl
mov
mov
mov
mov
push
jmp
stos
mov
xchg
imulb
int
or
push
or
jge
mov
subl
fdivl
rolb
cmp
and
pop
popa
and
sbb
fmuls
lea
push
add
mov
sarb
jg
fmull
pushf
in
repnz
sub
cmp
jmp
xlat
mov
xor
sbb
lds
pop
push
push
pop
push
pop
fmuls
fdivp
dec
mov
mov
or
add
test
cmp
ret
es
call
out
lea
pop
jg
imul
imul
mov
flds
ja
enter
sbb
incb
mov
fldl
jle
outsl
dec
outsl
add
dec
jo
xchg
push
lea
push
push
xchg
xchg
jg
test
or
push
gs
shll
and
inc
jp
or
mov
je
jmp
cwtl
mov
mov
jne
clc
push
das
movsb
mov
xor
sub
push
sbb
mov
inc
lcall
int
push
js
add
mov
add
cmp
jecxz
aas
test
test
xchg
jnp
pop
aam
add
cmp
scas
inc
mov
sub
aaa
add
mov
sub
or
adc
add
jl
mov
mov
dec
adc
xchg
pop
dec
adc
movsl
xchg
popf
movsl
mov
or
subl
push
mov
and
negb
mov
ficompl
adc
or
into
mov
mov
xchg
pop
clc
lods
sub
test
ret
push
mov
push
pop
dec
mov
gs
add
bound
add
mov
jo
test
divl
inc
call
cmp
sub
inc
popf
ja
nop
and
mov
clc
lcall
fcomps
fnstenv
icebp
leave
jg
or
popf
in
sub
pop
nopl
add
fistl
add
jle
int
push
xchg
mov
push
xor
and
jecxz
mov
xchg
pop
inc
dec
add
cmp
jle
fidivl
jmp
jmp
cmp
jle
add
mov
es
and
xchg
je
mov
xchg
push
and
sbb
pop
mov
or
sbb
out
addr16
ret
or
dec
jmp
push
push
or
insl
or
nop
and
sbb
or
mov
xchg
ds
mov
shlb
jb
sbb
orl
jo
sbb
dec
push
push
or
and
push
mov
mov
ss
jle
cmp
cmp
cld
push
fldt
add
sti
add
cmpb
cmp
mov
sbbb
sub
sbb
push
decl
gs
ljmp
test
push
inc
neg
ljmp
lea
push
pop
mov
mov
packuswb
notl
pop
sbb
mov
xor
fs
sub
add
mov
add
cmpl
pop
dec
jl
loopne
scas
xchg
or
inc
sub
cltd
add
or
or
in
adc
in
mov
orl
sbb
sbb
cltd
inc
sbb
test
ja
cmpl
in
push
and
sar
movsb
cwtl
jmp
pop
mov
mov
jmp
or
or
call
imul
repnz
add
adc
mov
dec
jnp
push
cmp
shlb
mov
cltd
xchg
sub
je
adc
roll
pop
cmc
xchg
and
repnz
mov
je
stc
adc
leave
sbb
adc
adc
cmp
cmp
or
testb
add
or
call
dec
sbb
and
mov
push
mov
push
mov
mov
mov
cs
call
cmp
jge
js
ret
mov
nop
cmp
imul
outsl
add
ret
inc
jae
push
push
pop
test
push
sbb
or
mov
addr16
xor
or
call
enter
es
inc
xchg
test
xchg
andl
adc
push
jb
inc
clc
incl
xchg
ret
and
mov
push
sub
push
jl
dec
push
ret
mov
mov
mov
dec
mov
fcompl
add
mov
mov
jl
ret
sbb
pop
mov
mov
push
sar
sarl
mov
and
mov
outsb
out
fsubs
mov
inc
inc
mov
mov
fmuls
inc
fbld
clc
test
and
add
sti
nop
clc
jne
mov
scas
fmuls
test
jge
mov
mov
nop
out
cli
xor
push
aas
dec
adc
push
pop
pop
xchg
cmpsb
sbb
nop
in
popa
ret
or
adc
test
out
xchg
xchg
gs
cwtl
push
push
shll
out
mov
push
inc
pusha
cmp
call
popl
fcoml
add
enter
notl
adc
lahf
xor
mov
shrb
mull
popf
inc
test
jae
shr
or
movsl
push
mov
js
adc
or
cmp
dec
incl
adc
lret
or
mov
cmp
jle
mov
mov
movsl
add
ss
push
add
xor
pop
adc
sbb
fs
xchg
jl
mov
adc
mov
mov
pop
push
inc
xchg
xchg
rorb
mov
mov
loopne
push
cli
sbb
jle
test
jbe
and
xor
dec
andb
sti
lcall
or
shll
dec
andl
lock
mov
shrl
mov
jmp
lea
push
mov
call
sbb
mov
jp
mov
inc
loope
jnp
xor
divl
je
xor
push
mov
mov
jno
push
add
add
jo
cmpsb
xor
sbb
ss
dec
lea
mov
mov
jp
gs
int
movsb
and
add
jg
shrl
movsb
lods
inc
push
mov
inc
mov
inc
inc
call
orl
jmp
sbb
or
push
pop
add
ret
sahf
test
mov
lret
adcb
jns
fstpl
push
jle
or
inc
jne
gs
cmp
lods
dec
push
fistpll
fdivl
mov
lea
or
aaa
lret
pop
je
mov
ret
or
push
mov
int
and
jmp
and
icebp
inc
je
mov
pop
or
inc
mov
sbb
push
mov
subl
repz
jp
mov
xor
subb
lahf
mov
and
pop
sbb
dec
cmpb
add
mov
fisttpl
add
xchg
fwait
inc
sahf
pop
or
stc
ljmp
or
dec
or
addb
rorb
dec
call
add
popf
xor
adc
ljmp
popf
enter
nop
jno
nopl
mov
sub
cmpl
cmp
rcr
js
shr
cltd
pop
add
aaa
call
add
xchg
cli
sbb
pop
push
ret
inc
sub
mov
jle
sti
mov
mov
xor
cmp
scas
or
iret
adc
xchg
rcrl
lcall
fstps
iret
mov
mov
scas
jle
or
push
pushf
sbbb
mov
mov
aas
lcall
int3
fcoml
mov
lods
sub
outsl
mov
test
sbb
xchg
push
xor
out
inc
testl
jl
add
sbb
and
or
mov
push
loopne
in
out
push
push
sub
add
lock
shr
or
add
dec
cmpb
and
adcl
jne
pop
mov
xor
adc
pop
jp
inc
or
stos
xchg
aam
sub
and
inc
sub
pop
mov
test
sub
jle
xchg
iret
push
test
sbb
mov
andl
scas
lods
xchg
add
add
pop
and
push
leave
imul
enter
jb
xor
push
in
out
fs
shrb
and
push
adc
arpl
fadds
dec
not
sub
sbb
leave
mov
prefetcht0
add
sbb
test
call
inc
xor
adc
ss
push
les
dec
enter
mov
rol
ret
cmp
sbb
test
jp
addr16
push
in
sbb
in
add
frstor
scas
int
or
adc
and
cmp
dec
mov
add
add
call
out
sub
push
fcomps
or
pop
testl
add
cmp
push
fadds
sub
ljmp
repnz
mov
movsb
ret
repz
xchg
int
dec
mov
xor
test
jae
leave
add
fbstp
push
sar
insb
xor
xor
xor
sub
inc
out
prefetcht1
dec
imul
test
imul
inc
jne
jb
push
outsl
jg
js
inc
js
insb
outsl
adc
push
push
inc
outsl
and
xlat
dec
sbb
and
into
je
insl
push
outsl
outsl
je
pop
jae
xor
inc
mov
pusha
jg
inc
cs
pop
inc
jae
push
pop
push
test
std
mov
push
gs
jo
dec
outsb
cmp
mov
inc
jp
mov
inc
cmp
inc
xor
sub
sub
xor
in
xor
add
inc
xor
inc
jge
or
int3
inc
lds
lahf
or
xchg
inc
lock
add
orb
xor
push
and
pop
imul
add
mov
clc
leave
faddl
cmp
call
stc
ss
cmp
jecxz
fnstenv
jns
out
iret
sub
and
out
sahf
out
mov
cmpsl
adc
repz
popf
fmul
xchg
fmuls
cmp
shlb
imul
iret
repz
push
mov
dec
mov
adc
das
or
daa
ret
imul
movsb
and
xor
decb
mov
add
cmp
aaa
mov
std
mov
pop
xor
dec
push
push
add
or
sbb
push
stos
dec
ja
insb
ds
hlt
movsb
shlb
fldenv
push
jmp
and
add
dec
repz
jmp
or
mov
scas
jmp
push
cmp
push
adc
or
xor
adc
into
sahf
mov
bound
or
out
mov
sbb
je
or
jl
ss
xchg
add
mov
push
xor
adc
das
in
leave
add
push
xor
or
xor
imul
sbb
cmp
sub
cmp
inc
loopne
cmpsl
push
push
insb
pop
adc
inc
adc
and
orb
push
adc
out
ss
jo
pop
pop
jge
add
mov
lahf
wbinvd
or
pop
pop
add
inc
add
jb
loopne
add
sub
lock
cmp
add
lahf
push
and
or
outsl
sbb
inc
ds
fistpll
mov
add
jb
lea
dec
jae
mov
add
sbb
dec
push
add
int
daa
add
sub
daa
dec
rcrl
add
int
cmp
xchg
and
xchg
in
add
ret
xchg
leave
stos
in
loopne
mov
push
cwtl
je
or
dec
or
push
mov
jo
aam
stos
dec
sbb
ds
push
call
dec
sub
adc
lock
adc
dec
adc
dec
add
call
arpl
push
sti
and
adc
sbb
repz
sub
push
call
cli
scas
stos
mov
insl
lock
movsl
add
and
and
dec
ja
push
insb
push
or
inc
and
add
stos
shrb
add
pop
jb
pop
inc
js
inc
inc
fmuls
stos
dec
jne
scas
nop
sbb
mov
sbb
push
lret
xchg
push
mov
cmp
das
add
adc
or
pop
inc
loopne
pop
outsl
js
inc
lods
andb
call
jns
lcall
jns
bound
sbb
add
sub
fwait
cmpsl
in
xchg
jmp
sbb
lcall
inc
or
jo
dec
adc
loop
and
cmp
cld
inc
jle
cli
shr
mov
stos
inc
imul
outsl
icebp
clc
mov
adc
mov
iret
dec
stos
jmp
push
add
inc
push
mov
push
ret
mov
fimuls
xor
ret
add
jbe
or
sub
mov
push
cmp
pop
in
xor
cmp
daa
fists
push
dec
aaa
push
adc
sub
mov
xor
adc
mov
inc
sbb
bound
push
dec
in
pushf
adc
icebp
push
call
stos
cmp
call
bnd
mov
in
loopne
mov
or
out
ss
push
repz
and
cmp
out
add
mov
and
out
adc
mov
popl
imulb
call
xor
in
lea
stos
loop
sti
and
sbb
inc
pop
or
adc
imulb
pusha
jge
add
daa
scas
fildl
stos
dec
in
aaa
adc
insl
xchg
sbb
mov
sbb
add
mov
push
mov
or
push
clc
adc
xchg
dec
cmp
lea
popa
rcl
or
xchg
dec
shrl
sub
or
sub
xor
inc
xor
shll
fdivrl
sub
push
aaa
or
jmp
lahf
inc
jmp
repz
ljmp
loope
jmp
shrl
stc
sub
sub
mov
mov
mov
jne
dec
or
mov
adc
mov
xchg
pop
or
enter
xchg
mov
lds
rolb
xlat
mov
outsl
call
adc
insb
bound
xor
mov
or
or
add
pop
inc
or
cmp
add
adc
in
and
stc
sub
cli
add
jmp
xchg
int
add
fists
mov
out
arpl
add
dec
xlat
jl
or
or
add
add
add
or
xor
jae
push
cmpsb
imul
cmp
jo
jmp
pop
ds
xchg
dec
sub
push
sub
inc
cmp
cmp
stc
in
sub
and
in
sbb
jmp
aas
jmp
stc
add
in
add
jecxz
dec
ds
pop
jmp
pop
jmp
stc
jl
mov
jmp
sbb
dec
mov
jmp
cmp
mov
add
or
or
and
ret
pop
add
lahf
pop
or
push
or
out
or
dec
xor
shll
jae
xchg
test
mov
xchg
imul
scas
fnstenv
cmp
pop
cmp
iret
xor
repz
pop
push
int
cmp
and
jl
push
imul
loopne
out
in
pushf
into
test
jl
addr16
jmp
push
les
addr16
pop
in
ds
repz
hlt
cmpb
push
jns
out
jno
adc
sbb
jns
out
push
or
pop
inc
dec
or
cld
or
shl
dec
idivl
je
add
or
in
fsubrs
pop
inc
or
cmpsl
fwait
out
addr16
pop
lea
jne
pop
call
or
sub
lods
push
inc
rorb
cmp
loopne
ds
loop
push
pop
mov
pop
or
inc
out
sub
xor
daa
cli
xor
mov
jmp
or
and
imulb
lret
leave
mov
lret
in
and
jae
das
cmpl
inc
icebp
pushf
cld
push
inc
inc
pop
add
inc
pmulhuw
inc
je
insb
inc
jae
dec
push
fsubs
dec
mov
jnp
test
push
jo
adc
inc
dec
fmuls
inc
outsl
ja
inc
outsb
fs
cmpl
insl
gs
add
sti
inc
inc
xor
paddb
std
mov
sub
xchg
je
adc
ret
gs
mov
or
add
out
daa
lret
stc
aam
mov
mov
loop
push
dec
inc
cmp
sub
bound
cmp
jl
outsb
inc
inc
sub
mov
pop
es
ret
mov
sub
sub
add
jno
or
out
adc
pusha
ljmp
inc
or
testl
imulb
leave
adc
push
sti
adc
jo
pop
adc
test
or
inc
lmsw
aam
shlb
xchg
lock
and
mulb
mov
add
adc
add
les
xchg
push
xchg
out
jae
jae
push
and
push
sti
das
pop
inc
lcall
mov
mov
push
les
pop
mov
and
call
mov
push
inc
sti
shll
lret
inc
fstpt
scas
imul
rorb
jae
inc
dec
adc
lock
mov
pop
push
jb
jns
outsb
nop
adcl
jge
adc
push
or
pop
xor
rolb
push
mov
push
jl
xchg
add
incb
ret
mov
imul
sub
add
insb
jecxz
insl
push
pop
dec
push
add
outsl
rclb
pop
adc
sahf
ss
xorb
lock
mov
mov
cld
aas
adc
popl
faddl
mov
add
aam
hlt
fmuls
add
push
sarl
mov
xor
adcl
dec
das
pushf
push
sub
shrb
push
adc
cmp
imul
or
jp
mov
call
add
push
add
mov
adc
sub
ss
dec
fmuls
sub
mov
outsl
inc
add
imul
and
aas
nop
dec
push
push
pop
mov
inc
inc
push
dec
jle
in
lods
push
imul
mov
jbe
jne
test
je
adc
lds
add
and
add
fildll
mov
jo
push
push
mov
cmp
aaa
xchg
and
lret
adc
fnsave
jmp
insb
cwtl
stos
add
and
rclb
test
adc
in
jge
xchg
leave
jb
pusha
mov
in
sahf
or
push
mov
sahf
addr16
sahf
or
loopne
insb
inc
sahf
addr16
lret
add
jnp
mov
popf
or
or
pop
mov
pop
and
imul
lods
jg
xchg
dec
xor
adc
jne
mov
push
mov
dec
cs
jp
pushf
mov
roll
mov
xchg
outsl
cli
in
enter
movsb
test
stos
incl
hlt
adc
sub
cmp
push
push
xchg
xor
xor
stc
jne
sbb
lret
dec
repnz
and
movb
add
add
sbb
pop
inc
add
lret
jno
push
cwtl
je
loopne
xor
add
add
add
sbb
das
hlt
call
xor
xchg
cmp
push
push
cwtl
add
dec
rolb
hlt
and
mov
push
call
push
sbb
jl
adc
push
fwait
mov
add
mov
test
iret
and
iret
aam
aam
imul
and
jecxz
push
inc
inc
addr16
out
popa
int3
push
nop
xchg
pop
enter
test
pop
mov
or
mov
sbb
push
rorl
or
adc
inc
and
xor
or
adc
sbb
adc
xor
mov
js
or
xchg
lea
pushf
insl
xor
and
push
xchg
and
shlb
and
push
inc
add
loopne
mov
xchg
cmp
stos
ds
jg
cs
push
sbb
sub
ja
and
test
dec
adc
jp
mov
lock
pop
cmpl
hlt
add
aaa
test
out
pop
mov
test
and
mov
cmc
shll
fwait
cltd
push
hlt
cs
pop
movsb
mov
mov
mov
jae
cmp
inc
jmp
jno
pushf
cmp
cmp
iret
and
pop
jecxz
cltd
js
xchg
pop
call
and
sbb
nop
orb
pop
test
sbb
cmp
cmp
inc
sbb
or
fbld
inc
push
call
or
push
into
lds
pop
loopne
and
dec
and
cmp
add
cmp
sbb
jns
repz
sbb
or
clc
call
sub
mov
sub
pop
adc
add
xchg
pop
cmp
fdivs
pop
sbb
mov
ds
mov
pop
xchg
mov
and
test
imul
and
adc
loop
insb
je
daa
jnp
fstpt
jbe
mov
push
mov
sbb
xchg
push
mov
sbbl
xor
inc
repz
repnz
out
xlat
xchg
inc
push
nop
jae
cmp
xchg
push
out
pop
jnp
sbb
outsl
and
sbb
and
pop
xchg
nop
shll
decb
call
adc
mov
test
fcomps
or
cmp
fcoml
cltd
sahf
sbbb
sbb
filds
mov
nop
cld
enter
aam
or
enter
mov
loop
cld
jmp
or
outsl
mov
mov
adc
sub
cmp
incl
push
mov
flds
lahf
shlb
mov
jmp
jp
inc
insl
add
insb
ds
push
movsl
lods
cld
movsb
sbb
jl
out
scas
dec
call
movsb
jb
enter
dec
movsb
mov
adc
xor
xchg
out
call
cwtl
pop
jns
sbb
sbb
cltd
outsl
inc
xchg
pcmpeqb
scas
xchg
sahf
out
pop
mov
inc
push
xor
mov
mov
dec
add
jmp
fists
sbb
rorl
rdseed
and
inc
dec
outsl
sbb
sbb
fiadds
mov
sub
cmp
sbb
mov
jo
sbb
loopne
xchg
cltd
dec
fs
jno
jg
ss
and
sbb
jns
sbb
inc
mov
xor
xor
clc
daa
stc
xchg
sub
mov
ss
add
scas
adc
cmp
lods
adc
nop
sub
mov
lahf
call
mov
cs
dec
mov
adc
sub
hlt
mov
sbb
hlt
pop
push
lahf
jo
stc
ss
xchg
pop
lock
nop
dec
mov
sbb
call
mov
outsl
testl
jo
xor
jne
lahf
test
adc
sub
pop
call
sbb
and
mov
mov
sub
stos
sbb
add
aaa
pop
bound
movlps
and
insb
or
sbb
sbb
push
push
dec
loopne
mov
or
add
repnz
cmovg
insb
pop
xor
es
mov
jge
push
lods
cmp
mov
xor
push
movsb
into
cmp
sbb
xor
and
sub
enter
mov
orl
lods
test
sub
enter
add
and
or
insb
nop
add
rorb
nop
sbb
mov
xor
and
pop
enter
push
inc
add
pop
call
or
fdivl
add
mov
test
sbbb
push
stos
outsl
pop
mov
mov
fsubl
in
push
sbb
jae
pop
xor
rcrl
data16
or
inc
adc
iret
ss
fdivl
pop
cmp
fsubs
int3
sbb
fs
fimuls
cmp
arpl
push
add
mov
aam
xchg
shlb
in
in
inc
or
nop
aaa
rclb
ret
cmp
adc
verr
jns
arpl
mov
push
push
pop
add
adc
ret
in
es
xor
mov
cli
mov
xchg
sub
lret
fcomip
mov
int3
enter
fisttps
enter
and
sbb
sbb
rolb
sarb
pop
mov
jge
pop
push
fucomip
pop
cmp
or
mov
idivl
mov
adc
insb
push
cmp
add
xor
divl
data16
push
mov
and
std
out
add
push
push
call
into
fisttpll
cmp
in
cmp
xchg
leave
into
xchg
iret
idivl
cld
sbb
or
outsl
or
xchg
clc
subl
dec
loop
dec
std
xchg
out
ss
dec
hlt
sti
insb
daa
int3
int3
fs
movsb
push
repnz
inc
push
inc
hlt
push
sbbl
outsb
or
push
jle
and
daa
xor
and
and
sbb
push
jae
out
push
clc
clc
adc
xor
xor
rolb
testl
adc
adc
lret
int3
pop
pop
push
and
pop
lods
sti
inc
mov
adc
sbb
dec
add
or
add
pop
add
and
cs
xchg
ret
es
and
pusha
in
cwtl
or
xor
loopne
pop
inc
ret
lods
in
decl
mov
lahf
movntq
cli
mov
and
clc
xor
sti
in
mov
dec
decl
add
cmpb
lods
data16
popf
push
jbe
stc
jb
lock
jb
push
frstor
pop
iret
clts
jo
and
clc
add
jne
mov
and
xor
roll
cmp
mov
pop
mov
movsb
push
or
clc
jmp
jmp
cmp
adc
scas
les
xor
jne
or
stos
sub
insb
mov
xor
push
push
cmp
or
and
daa
add
push
and
and
fdivrp
in
data16
cmp
int
clc
scas
xor
jl
adcb
pop
repnz
and
jb
cli
or
outsl
push
push
push
add
add
push
inc
pushf
sbbb
mov
add
sbb
push
or
arpl
aam
stc
cmpsl
cmp
adc
mov
adc
adc
lret
sub
ds
xor
sbb
sub
xor
xchg
inc
jo
cmpsl
clc
push
sub
mov
jmp
dec
add
mov
repnz
cld
adc
cmc
or
std
popf
adc
pop
call
mov
or
in
jno
lret
mov
inc
lret
negl
add
rcrb
lds
fistpll
xor
pop
push
jo
sahf
dec
stc
call
cmp
sub
repnz
add
sub
mov
cltd
mov
aad
arpl
iret
and
sub
loop
loop
mov
cmp
pop
into
dec
cmp
in
lock
push
adc
sub
inc
inc
mov
neg
push
sahf
test
sub
lret
push
push
scas
mov
je
scas
popf
inc
add
pop
mov
mov
mov
adc
push
int3
push
cmp
int3
push
sub
lcall
mov
jge
jl
call
push
jne
mov
cs
jp
imul
mov
xor
addr16
add
push
fildll
or
ss
dec
jnp
inc
cmp
mov
jne
idivb
cmp
or
add
or
fidivs
push
push
xchg
cmpsb
sbb
jbe
orl
insl
cmpb
push
fdiv
pop
xor
mov
adc
je
xor
sub
test
inc
xchg
add
push
adc
insl
mov
dec
or
insb
loop
jle
cli
decb
mov
pop
or
mov
jne
fstpt
cltd
xor
sub
jae
and
sbb
clc
sbb
sti
push
dec
mov
pusha
pusha
adc
mov
sahf
out
into
or
int3
fiadds
xor
xchg
int
dec
add
sub
pop
call
mov
mov
into
stos
shl
mov
mov
test
ja
sub
lods
sub
mov
sbb
mov
mov
daa
pop
xor
dec
into
mov
call
mov
sub
in
ret
adc
xor
mov
sub
add
sub
jb
arpl
pop
adc
loop
movsl
add
xchg
lock
daa
jae
fs
scas
and
sbb
dec
xor
or
in
insl
pop
jecxz
jp
fldenv
pop
and
mov
loopne
add
or
or
pop
or
pand
lds
fidivs
sub
jmp
or
pop
shll
gs
jbe
mov
les
mov
or
mov
in
loopne
inc
xor
fisttpl
sbb
jmp
push
ret
mov
stos
jo
aas
das
ds
fcomi
jecxz
aad
in
mov
imul
mov
jge
sbb
mov
cmp
fmuls
mov
mov
into
jmp
cmp
out
int
shll
pushf
js
dec
pushf
add
addb
fmuls
mov
dec
add
xchg
or
push
jbe
fdivs
or
push
pop
xor
xchg
xor
inc
cmp
and
and
sub
cmp
dec
or
shlb
sahf
adc
mov
dec
push
push
rolb
out
jo
arpl
aaa
push
xor
fwait
and
pop
jp
stos
loop
lods
dec
sahf
sbb
jbe
outsl
and
sbb
adc
or
sbb
inc
xor
fs
push
idiv
in
jbe
jb
sub
pop
movsl
inc
out
aaa
mov
mov
movsb
cmp
dec
inc
lret
and
shlb
lds
cmp
adc
cmc
pop
jae
xchg
push
aas
mov
push
in
add
insb
or
jmp
ss
push
xchg
push
sub
push
sub
xchg
add
pop
imull
push
dec
adc
cmp
out
xchg
xchg
out
test
and
sbb
mov
pop
das
and
mov
fsubrp
and
inc
inc
mov
cwtl
sub
xor
pop
sbb
sbbb
or
lret
dec
xor
cli
sbb
mov
fbstp
sub
jb
push
or
cltd
jl
pusha
fcmovu
and
jns
xor
adc
arpl
or
outsb
mov
xor
hlt
add
in
stc
sahf
cmp
push
xor
lds
and
cmp
push
loope
xchg
nop
jg
xor
mov
mov
add
orl
or
mov
cmp
xchg
lods
adc
insl
in
sub
cwtl
lock
add
hlt
push
xchg
in
mov
push
or
daa
and
jge
int3
test
mov
fimull
xchg
dec
orl
adc
stc
fs
jnp
adc
cvtps2pd
pop
insb
rcr
sbb
dec
test
xlat
fsubs
cld
ds
aam
int
aam
xchg
add
mov
xor
mov
test
fwait
sti
aad
jg
jae
test
iret
sbb
push
xchg
and
mov
mov
leave
push
push
lea
lock
add
push
fldl
add
lock
add
or
fs
je
sub
sbb
imul
shr
lock
fdivs
push
cmp
xor
mov
and
sahf
adc
imul
stc
cmp
fidivl
mov
mov
scas
pushl
aam
ficompl
cmc
jmp
jb
xor
xor
cmp
lcall
add
add
pop
call
roll
arpl
and
arpl
xchg
adcl
cmp
aas
cmove
std
cmp
inc
into
loop
xor
add
pop
dec
inc
fsub
or
arpl
outsb
pop
add
push
jo
js
xor
mov
cmp
xor
pushf
xor
int3
push
cmc
or
push
js
xchg
scas
adc
dec
aaa
add
xlat
jns
pop
je
cwtl
xor
add
or
inc
xor
stos
xchg
add
sahf
pop
repnz
xor
pop
add
mov
lahf
xor
gs
lahf
ja
out
repz
fcompl
inc
cmpsl
add
std
imul
sub
call
fdivrs
dec
mov
jp
and
push
ss
pop
hlt
pushf
dec
mov
add
jecxz
pop
clc
cmp
std
mov
arpl
sbb
add
rcrb
nop
iret
inc
cmpsb
push
mov
sbb
mov
xor
adc
sub
js
repz
jne
mov
jne
inc
cmpsl
dec
mov
inc
xor
rol
jecxz
pop
fstps
inc
sbb
push
add
or
insb
insl
inc
push
push
add
jne
add
mov
or
pop
dec
fimuls
dec
and
inc
mov
inc
add
inc
arpl
dec
add
pop
sub
push
sbb
pop
push
pushf
mov
jg
inc
pop
mov
add
add
clc
aas
push
mov
cltd
clc
in
mov
das
xchg
test
data16
push
cld
xchg
sysexit
or
js
or
xchg
andb
icebp
in
rcll
decl
clc
cmp
xor
xorb
adc
insb
outsl
adc
inc
cmp
loop
pop
insl
jae
sbb
add
add
dec
xchg
in
sar
adc
and
sti
adc
adc
rolb
dec
jb
test
cmp
add
addl
or
add
lods
stos
and
scas
mov
adc
push
add
jb
and
mov
in
and
cmp
dec
dec
cs
and
pushf
in
xchg
add
dec
jbe
xchg
sbb
sbb
pop
xor
add
adc
inc
je
or
mov
xor
adc
test
out
inc
dec
jne
push
insb
push
rcl
and
sub
xor
or
cmp
adc
enter
pop
push
sub
add
cmp
xor
lods
sbb
push
xchg
addr16
xchg
xor
jg
and
aad
jp
mov
out
lea
push
ss
and
fs
push
cmp
insl
mov
add
ss
add
push
mov
adc
mov
ss
xchg
insb
jno
pop
fdivrp
sbb
pop
divb
and
stc
sbb
loopne
cmp
push
loope
enter
jae
sbb
sbb
out
aas
push
je
or
idivb
cwtl
loope
or
or
cmp
jl
pusha
push
add
xchg
ljmp
dec
push
mov
rep
leave
fstl
mov
in
jmp
dec
jne
inc
xchg
loope
repz
sbb
sbb
daa
cwtl
xchg
dec
ja
call
out
inc
xor
inc
lock
jl
inc
lahf
xor
sub
adc
stos
push
clc
in
push
lahf
pop
xor
add
dec
jne
push
xchg
je
xchg
inc
sbb
push
sbb
mov
out
dec
mov
cli
push
pop
push
sbb
ret
add
dec
inc
push
and
sub
xlat
xchg
out
movsb
cmp
out
imul
lods
push
xor
lcall
aaa
cmp
in
sbb
cli
shl
or
sarl
ret
in
daa
xlat
push
pop
ficoms
iret
out
jo
inc
mov
or
movsl
enter
cmc
inc
push
lahf
imul
or
xor
jae
hlt
jmp
sar
push
daa
outsb
ljmp
out
push
dec
inc
inc
subb
stos
xchg
popa
sub
jmp
sub
xchg
pop
inc
jno
sub
lock
or
inc
fadds
dec
fmuls
mov
testb
or
sub
inc
jg
jle
popa
adc
inc
jl
dec
cmp
jg
enter
add
mov
jle
inc
xor
xchg
jo
and
dec
push
jmp
jge
add
mov
inc
aam
xchg
jecxz
lea
add
xor
fcmovb
out
in
cmp
jl
shl
insb
stos
sbb
push
push
push
mov
fildl
cmpsb
outsl
insb
inc
or
add
or
mov
sbb
pop
pop
push
inc
xchg
xchg
sbb
mov
cmp
push
fadds
psubq
lods
push
push
push
or
mov
call
call
xchg
mov
or
or
sti
adc
ja
sub
xchg
enter
add
outsb
call
repnz
popl
es
scas
mov
in
out
push
icebp
ret
cmpl
cmpl
inc
cmpsb
adc
dec
pop
mov
cli
mov
in
cmc
mov
add
push
mov
inc
sti
push
mov
pop
mov
repnz
and
orl
mov
sbb
add
sbb
or
add
or
add
add
aam
fnstsw
ds
and
or
adc
jnp
xchg
mov
and
push
jmp
inc
mov
pop
repnz
xor
fs
sbb
jb
or
call
stc
and
call
cmp
icebp
add
mov
mov
adc
push
in
push
pop
ss
out
mov
in
cmp
ja
push
cs
dec
or
xchg
arpl
jecxz
cmpsl
jbe
mov
cmp
repnz
adc
mov
jge
sti
test
fmuls
push
mov
xchg
adc
sub
jle
lahf
jbe
in
mov
orl
outsb
sti
in
and
adc
xchg
cmp
or
sub
insb
mov
jge
mov
push
sub
rcrl
cmp
push
or
pop
rolb
adc
fcoms
push
filds
outsb
stc
or
lea
dec
pop
push
add
fsubl
jo
icebp
pop
jns
adc
call
pop
sbb
je
xchg
sbb
pop
jnp
sbb
or
loope
mov
and
pushf
fs
pushf
cmpsl
out
xor
sahf
adc
add
push
imul
or
call
in
call
mov
loopne
mov
adc
mov
call
xor
sub
ret
outsl
jns
sbb
ss
adc
sbb
int3
es
inc
sbb
adc
test
lock
mov
sub
lcall
out
jmp
pop
jae
stc
lods
out
mov
xchg
xchg
hlt
insl
inc
and
pop
fs
je
mov
ror
cld
pop
clc
push
scas
sti
aam
mov
sahf
nop
punpcklwd
xchg
add
in
out
jns
mov
or
push
call
jne
sbb
or
push
adc
lahf
xor
insb
pop
cwtl
mov
sbb
pop
xor
sbbb
ljmp
iret
adc
mov
enter
inc
mov
mov
inc
jae
xchg
and
inc
push
test
or
push
popa
inc
adc
aas
lock
or
enter
in
adc
and
sbbl
pop
aaa
jb
repnz
dec
jl
add
stos
and
add
les
inc
aam
sbb
or
outsl
popa
add
fcmovnb
xor
mov
jl
xadd
inc
inc
xor
push
adc
add
add
lods
mov
dec
rorb
hlt
dec
mov
aaa
jo
mov
out
xlat
sbb
adc
dec
sbb
mov
int3
adc
dec
mov
jne
adc
cmp
in
and
iret
repnz
in
and
xchg
add
and
lret
add
fs
adc
fstps
js
test
aam
add
jge
movsl
add
cmp
mov
enter
fadds
test
mov
or
mov
lock
push
push
or
ljmp
fidivs
ja
sbb
call
dec
shll
add
ret
mov
mov
add
mov
mov
mov
outsl
push
sub
loop
sub
mov
or
push
hlt
pop
imul
mov
cltd
and
test
aaa
fsub
or
lock
loopne
add
ret
xchg
hlt
sbb
jle
push
inc
das
jnp
add
mov
shlb
leave
sbb
call
mov
jl
call
sbb
sbb
push
add
pop
ss
inc
ss
sbb
add
jg
add
andl
decl
mov
ficoms
int3
push
dec
add
add
lret
push
push
faddl
xor
lock
mov
xlat
test
mov
push
lmsw
push
rcrb
and
and
or
js
mov
inc
pop
dec
mov
add
jl
or
or
fiadds
loop
xlat
mov
push
or
inc
adc
in
sub
sahf
xor
movsb
mov
repz
pop
in
inc
aad
dec
or
push
lods
cmpl
pop
mov
add
scas
jnp
jecxz
cmovne
jno
js
push
imul
push
daa
out
adc
jle
jne
lahf
jo
jae
xor
incb
pusha
arpl
shrl
adc
arpl
push
and
insb
movsb
push
call
sbb
rcrl
cli
test
push
mov
push
jo
jge
cmc
jb
jnp
insl
or
jae
jmp
sahf
in
fstp
inc
call
lea
sub
or
push
out
inc
lahf
add
and
dec
pop
inc
aaa
mov
mov
std
inc
mov
ljmp
mov
adc
rclb
mov
and
xor
inc
mov
rsm
xchg
leave
in
cltd
jns
xchg
pop
inc
add
mov
or
xchg
jl
add
shl
adc
nop
mov
mov
add
mov
sub
xlat
sbb
in
xchg
out
lret
sub
cs
push
cwtl
nop
and
lea
push
ja
popf
sub
push
add
xchg
jecxz
leave
mov
cltd
adc
dec
adc
push
rorl
push
dec
add
ja
jae
dec
mov
testb
cmp
and
jae
daa
jns
xchg
jb
jo
sbb
add
fbstp
ret
adc
push
and
or
push
inc
jne
or
pop
int
addr16
pop
mov
mov
repnz
adcb
imul
and
add
imul
push
mov
cmp
pusha
and
fadd
inc
testl
lahf
inc
dec
faddl
or
pop
jnp
adc
and
add
jmp
mov
or
imul
inc
call
sbb
sub
insl
add
inc
push
dec
mov
push
inc
xor
sub
jb
mov
dec
push
pop
jmp
imul
stos
inc
test
dec
lea
cmovnp
adc
xor
das
loope
sub
lcall
push
and
sbb
dec
mov
negl
jge
xor
and
lea
or
insl
add
xorl
inc
mov
data16
push
sub
or
daa
fsts
push
nop
cmc
or
pop
cmp
in
pop
sarl
mov
enter
push
mov
mov
sub
notb
xor
fcmovnbe
scas
add
xchg
je
mov
push
xor
dec
inc
jb
leave
add
adc
sbb
jnp
loopne
or
mov
add
clc
mov
mov
cli
or
xor
push
cmp
shrl
adc
add
popf
into
icebp
dec
andb
jl
mov
gs
ds
sti
lret
fwait
xchg
addr16
pop
pop
dec
stc
or
add
adc
cmp
ret
and
int3
fxch
xor
dec
orb
outsl
std
mov
test
inc
jae
add
or
or
mov
pop
and
adc
iret
idivl
push
sbb
inc
add
popf
mov
pop
movl
dec
jp
adc
out
loope
jecxz
stos
jb
inc
sub
sub
lahf
pop
xor
loop
push
ret
push
mov
mov
adc
xchg
push
fwait
cmpsb
pop
sub
mov
add
or
outsl
inc
inc
xor
jb
sub
insl
or
mov
out
mov
or
adc
sub
pop
data16
inc
fdivr
inc
or
inc
push
or
adc
addr16
dec
leave
fbld
ficoms
mov
pop
insl
fs
insb
cmp
pop
add
pop
push
adc
pusha
cltd
or
mov
js
mov
outsb
or
enter
notl
js
push
jne
and
nop
adc
jnp
adc
mov
xchg
fisttpl
aas
push
pusha
nop
mov
xchg
sbb
fnstcw
sbb
lcall
fs
stos
in
test
mov
xor
lods
fimull
dec
sbb
dec
pop
movsl
jb
cmp
inc
les
mov
push
shll
sbb
sbb
mul
push
vmread
orb
adc
test
dec
xchg
push
push
push
inc
jo
add
fnstcw
scas
dec
jmp
inc
and
cmpl
xchg
fdivl
jge
push
andb
add
subl
aad
nop
out
sbb
call
clc
ss
js
pop
push
or
ss
push
mov
and
pop
dec
add
lds
rorb
sub
push
out
adc
cwtl
std
dec
dec
sub
push
cmp
jne
cmp
jbe
push
mov
testl
sub
or
jo
loope
add
add
sub
and
test
jnp
jbe
fcomi
insl
out
or
out
iret
xchg
nop
pop
add
push
pop
inc
xor
loopne
push
inc
pop
pop
call
sbb
sub
pusha
add
int3
add
inc
xor
sbb
mov
jmp
sub
shr
cmpsl
mov
subb
je
flds
lods
add
insb
cmp
sbb
push
mov
xchg
or
or
enter
cmp
ja
and
out
sbb
imul
repnz
jb
cmp
sub
add
fbld
pop
gs
scas
icebp
dec
jb
pop
and
popf
imul
sub
jb
pop
test
pusha
or
jnp
std
mov
daa
loop
push
push
in
inc
ss
xchg
sub
jbe
dec
adc
enter
and
push
leave
cmp
mov
lahf
xchg
add
mov
ret
mov
mov
fxch
pop
or
push
mov
push
mov
std
push
pop
in
iret
add
adc
pop
popa
add
pop
push
or
test
add
mov
ret
and
pop
and
xor
cmp
xchg
incl
aas
pop
sbb
add
imul
xor
cmpb
and
inc
pop
or
jno
pop
jle
mov
test
mov
test
test
dec
leave
push
mov
xor
sub
and
pop
adc
stos
cmp
pop
std
hlt
stc
sub
inc
cmp
in
insb
mov
lret
jno
cmp
fs
cld
les
mov
pop
push
imul
cmpl
mov
jae
outsb
pop
loop
mov
cli
aas
jno
fmull
stos
push
push
xor
add
push
mov
insb
mov
fdiv
fprem
pop
in
cmp
xchg
shll
fildll
fxch
dec
mov
pop
adc
repz
gs
jo
sbb
and
lock
xchg
les
icebp
pusha
adc
insb
fcompl
xchg
enter
cli
mov
btr
or
or
or
dec
add
int
inc
mov
mov
mov
and
xchg
faddp
pop
adc
cmc
arpl
sbb
out
cmp
sub
push
push
testl
jecxz
or
and
adc
push
lods
cmp
push
cmp
fildl
adc
or
push
aad
sub
into
dec
inc
popa
mov
ja
mov
mov
pop
lods
loop
inc
adc
xchg
ret
inc
and
xchg
inc
hlt
call
xor
add
loop
out
add
loope
lret
sub
inc
mov
inc
adc
call
inc
ss
into
aad
xlat
inc
pop
das
adc
lock
fdivr
outsl
aad
xchg
push
xor
adc
sub
add
je
dec
or
inc
sbb
xor
arpl
mov
daa
mov
inc
out
call
push
or
pop
mov
or
mov
or
add
mov
inc
pop
inc
push
sbb
and
add
sbb
jbe
cs
enter
push
aad
out
aam
and
fidivl
xor
dec
shl
mov
jmp
movsb
clc
add
xchg
mov
cs
sbb
push
dec
movsl
sub
pop
notb
call
iret
repz
mov
sbbb
xor
jae
daa
mov
inc
mov
pop
pop
imul
or
add
mov
roll
and
leave
aad
ds
fcompl
inc
inc
rcr
cli
aam
sbb
xchg
inc
es
call
sahf
add
sbb
sub
push
mov
mov
lret
movsb
mov
mov
add
jg
mov
mov
lock
push
push
shll
rorl
mov
mov
push
mov
mov
movsb
adc
cmp
adc
pop
adc
mov
in
lods
iret
outsl
push
cmp
lea
arpl
push
mov
pop
pop
sbb
jge
pushf
call
pop
mov
enter
and
call
movsb
push
push
shll
jle
mov
into
out
fstps
xchg
dec
jp
cwtl
add
sub
pop
enter
mov
mov
push
mov
adcb
mov
pop
xor
pop
push
shr
negl
add
cmp
sbb
divb
add
test
out
popf
xor
or
aaa
aas
push
adc
add
mov
mov
push
pop
add
lds
pop
nop
imul
sbb
dec
iret
jmp
insl
sbb
mov
and
test
cli
inc
sahf
or
mov
sub
sub
or
pop
cli
pop
sub
test
pusha
push
ljmp
dec
jle
test
or
inc
call
daa
push
dec
adc
push
out
cmp
call
fwait
jge
dec
das
shr
outsb
enter
imul
push
leave
pop
movsb
pop
and
out
jmp
mov
cmp
jo
daa
xor
daa
arpl
cmc
insb
shll
push
mul
cmp
dec
push
into
clc
push
mulb
clc
ja
popa
sub
cs
pop
aaa
push
cs
lret
gs
imul
dec
jo
jno
jae
gs
xor
lods
ja
jns
gs
pop
xchg
jge
jle
push
or
mov
lcall
and
sub
int
cmpsb
arpl
pushf
pop
and
jmp
addr16
dec
cmpsl
mov
jo
push
pop
clc
fwait
stc
in
sbb
adc
out
in
clc
add
pop
adc
fiaddl
andl
xor
lret
loope
shrb
ss
dec
sub
and
fwait
jmp
xchg
add
xor
outsb
jle
rclb
aas
adc
adc
sub
jmp
jae
dec
and
in
add
mov
jle
cmp
add
xchg
sub
nop
pop
and
in
and
and
call
in
mov
inc
mov
xchg
daa
enter
pushl
inc
fwait
clc
mov
inc
rcr
cmpsb
push
mov
inc
sbb
dec
mov
cmp
sub
enter
or
arpl
cwtl
int3
cld
rcrb
fdivrl
fbstp
aad
fadd
inc
mov
xlat
int3
fsubrs
filds
mov
rorb
adc
aad
fdivrs
ss
call
lcall
cmpsb
sbb
jp
ret
rcrl
aam
xor
xor
push
jecxz
das
popa
loope
add
insb
add
add
adc
stc
testb
cmp
mov
and
xchg
mov
push
pop
adc
fnstenv
sti
sbb
ret
jae
loopne
and
pusha
pop
sbb
aad
xor
cmp
push
xor
xlat
push
sti
fstpl
cmp
cltd
xor
roll
pop
and
sbb
pop
sarl
cmp
pop
push
cmp
imul
in
jmp
inc
pop
pop
inc
lcall
push
add
or
test
dec
add
aad
add
push
mov
sub
dec
mov
pop
repnz
jae
or
pop
sbb
cmpl
out
test
sbb
sbb
aad
add
gs
aam
es
and
ret
or
pop
scas
sbb
sbb
dec
shl
inc
xchg
sbb
push
mov
or
cmp
inc
sbb
mov
popa
sbb
pause
dec
sbb
nop
xchg
mov
call
fwait
add
je
adc
sub
jecxz
aam
jne
jge
fwait
xchg
pop
or
sahf
lret
xchg
sahf
sbb
mov
jns
movsl
mov
add
xor
mov
ljmp
imul
in
pop
movsl
shr
loop
rolb
push
cmc
repnz
sti
adc
getsec
add
dec
notl
repz
or
out
std
push
jmp
fists
aad
inc
fistl
out
outsl
jmp
lret
adc
xor
stc
xor
mov
push
pop
and
leave
push
ss
adc
sbb
ja
rol
mov
sub
daa
jmp
iret
aaa
out
int3
call
or
gs
push
pop
dec
sbb
add
fdiv
pushf
cs
pop
negb
rcll
movntps
dec
stos
jbe
repz
adc
mov
add
jl
jecxz
xchg
adc
icebp
add
mov
mov
bound
push
add
jg
call
aaa
jg
xor
or
jae
dec
mov
cld
test
lock
pushf
sub
les
adc
inc
fdivs
gs
ds
adc
jg
mov
adc
add
mov
add
jg
xlat
stos
insl
daa
fxch
jb
outsb
jns
mov
or
jmp
push
mov
popa
dec
stc
sbb
fs
xchg
mov
fadds
inc
dec
mov
cmp
mov
adc
and
lock
mov
add
adc
jns
jl
lods
movsl
popa
into
daa
test
test
int
sub
aas
test
jle
jmp
ret
and
adc
sbb
push
insb
pop
call
adc
xor
dec
cmp
enter
shlb
rorb
xor
ror
cmp
and
add
iret
lret
iret
aas
lahf
xchg
shll
jbe
or
sbb
gs
mov
int
inc
enter
cmp
and
mov
testl
popa
jmp
or
daa
sbb
mov
inc
push
leave
out
in
cmp
test
dec
adc
xchg
xor
iret
add
push
mov
sub
lcall
xor
inc
mov
dec
xor
dec
inc
adc
ss
dec
rorb
push
xor
fsubr
sub
mov
xchg
jecxz
cwtl
test
into
inc
mov
es
mov
int
xchg
enter
add
xchg
frndint
cmp
inc
lock
xor
inc
fsubr
mov
in
outsb
adc
lret
int
xor
mov
repz
add
andb
cmp
sysexit
jecxz
loope
hlt
lods
lret
jne
sti
fstpl
sub
cmp
sarl
add
dec
sahf
rdmsr
repnz
add
femms
pusha
jo
pop
aaa
xchg
pop
out
add
lsl
xor
jb
jno
pop
xchg
mov
inc
dec
jo
jae
pop
data16
adc
inc
and
scas
mov
fisttpll
and
mov
repnz
adc
adc
push
mov
sub
jo
loop
push
sti
lds
mov
sbb
out
push
cmpl
test
inc
adc
jmp
and
lret
mov
loop
inc
xor
jno
adc
loopne
jmp
nop
xorl
data16
sahf
and
pop
push
pop
pusha
push
cwtl
test
insb
dec
or
adc
cltd
mov
and
in
addr16
loop
push
sub
popa
mov
popl
or
ficompl
mov
ficomps
pop
rorl
pop
xor
jns
scas
xlat
or
andb
xchg
movl
cmpb
jbe
pop
adc
pop
sub
call
and
sarl
das
and
repnz
ret
mov
add
add
and
cltd
add
cmpl
dec
adc
mov
dec
les
xor
sbb
add
push
pushf
rorl
call
jl
push
test
or
lods
or
inc
jne
mov
dec
jecxz
xchg
icebp
xor
dec
dec
fdivrl
dec
ds
mov
or
loopne
aad
les
lret
enter
jo
sbb
std
orb
dec
or
popa
sahf
inc
inc
push
and
sbbb
mov
data16
mov
enter
mov
add
mov
popa
shrl
addr16
sbb
mov
mov
push
pop
das
push
out
insl
inc
ficoml
pop
fstl
es
dec
or
sbbb
add
cmpsl
in
fdivl
and
je
repnz
jmp
jbe
ficoms
xchg
pop
push
jnp
jmp
rclb
and
push
push
outsl
data16
inc
xor
mov
push
or
mov
mov
inc
sub
lds
or
in
cs
cmp
mov
cmp
cmp
addr16
jnp
or
adc
xchg
cmpsl
pusha
pop
jno
pop
outsl
pop
mov
add
ds
xchg
cmp
and
out
push
dec
ja
push
xchg
push
daa
jecxz
out
mov
inc
cmp
dec
jno
shl
ret
scas
mov
sub
jb
repz
and
sub
dec
inc
fisttpl
pop
and
xor
cmp
sbb
in
sub
test
pop
cmpsl
xor
adc
pop
ficoml
fisubrl
stc
cs
jg
idivl
call
call
bound
sti
mov
pushf
pop
nop
inc
enter
or
shll
or
cltd
cmp
sub
les
add
js
imul
imul
ret
ucomiss
xor
cmc
mov
pusha
xorl
test
enter
mov
outsb
cmp
scas
std
mov
or
jbe
movsb
xchg
das
aam
pop
mov
sar
dec
enter
dec
in
sarl
gs
movsb
mov
sub
insb
sub
adc
jae
aaa
push
sub
bnd
inc
addr16
inc
fsubl
pop
clc
mov
push
inc
fnstenv
push
or
dec
sbb
data16
into
pop
nop
add
or
jp
test
mov
lcall
push
or
mov
in
mov
push
pop
les
leave
fs
adcb
sbb
push
cmp
push
in
es
pop
push
into
xchg
sub
mov
dec
and
test
push
or
mov
adc
xor
cmc
movq
pop
lcall
pusha
enter
and
lcall
rcll
and
call
test
out
les
dec
mov
pop
add
jmp
xlat
cmp
shl
sbb
push
cmp
xchg
lods
push
sub
jo
clc
mov
add
push
add
mov
enter
mov
and
popf
int3
ror
or
sarl
jl
filds
mov
in
orl
mov
xchg
jns
subl
lret
mov
ror
popa
sahf
out
into
adc
aaa
pop
xor
in
shr
adc
or
jnp
adc
jmp
xchg
incl
arpl
test
inc
pop
inc
rcrl
test
std
sbb
xchg
sbb
sub
rcrb
mov
jl
xor
loopne
cmp
cld
mov
mov
push
inc
jl
xor
adc
sbb
adc
sahf
mov
pushf
add
popa
out
sahf
sub
push
mov
fld
and
xor
mov
xchg
adc
cltd
cmp
dec
lcall
adc
xchg
int
loopne
add
add
fs
push
int3
scas
arpl
scas
lods
dec
and
mov
add
in
lods
es
or
lods
es
or
push
pushf
int3
jbe
jns
les
mov
sub
inc
inc
sti
push
xchg
cs
flds
fistpll
inc
sub
or
je
jmp
cwtl
out
mov
xor
pop
adc
sbb
dec
cltd
adc
mov
jae
xor
aaa
iret
pusha
sbb
int3
scas
cs
sahf
leave
fidivs
or
xchg
addr16
dec
add
mov
sbb
jno
hlt
scas
push
stos
loopne
stos
adcl
cmp
jg
sbb
add
cs
mov
bound
inc
js
inc
sbb
or
mov
sbb
push
xor
mov
addr16
sti
loope
add
shrb
int
jmp
cltd
imul
inc
dec
xchg
int
mov
mov
adc
and
pop
pop
aas
and
sbb
pop
ds
rcr
jo
and
mov
and
and
add
inc
push
push
dec
mov
add
arpl
loop
jb
push
dec
dec
inc
dec
push
or
push
in
daa
inc
gs
je
repz
aaa
ja
addl
std
popa
jbe
jb
je
pop
mov
inc
jne
inc
sbbl
pop
jb
pop
mov
dec
lret
cmp
jecxz
and
gs
mov
mov
testl
push
cmp
jae
or
pushf
cmp
pop
push
push
inc
dec
daa
shll
pop
or
push
mov
cltd
in
inc
pop
sbb
int
and
repnz
pop
cltd
mov
add
ss
xchg
icebp
fmuls
mov
cmp
and
jp
push
mov
sub
popw
mov
or
and
add
sub
cwtl
jno
loop
pop
inc
adc
insl
pop
push
dec
test
jg
sub
add
mov
enter
push
sbb
lds
inc
dec
jne
xor
pop
sub
push
jecxz
mov
hlt
bound
or
xchg
repz
adc
inc
push
mov
negl
mov
xor
loopne
jb
add
mov
push
idivb
pop
inc
xchg
lea
cmp
jbe
lods
inc
add
fwait
mov
inc
push
bound
push
testb
jns
call
mov
inc
js
cmp
adc
jbe
push
or
mov
popa
mov
enter
xchg
xor
jae
jmp
fldt
mov
dec
sbb
sbb
pop
xchg
dec
mov
js
inc
mov
int3
dec
push
push
es
mov
pop
rolb
xchg
cmp
or
movl
js
fildl
mov
mov
mov
xor
pusha
and
pop
xlat
fimuls
fldlg2
fs
fcompl
loope
mov
dec
pop
sbb
pop
xor
cltd
and
outsb
add
inc
sub
rcrb
or
sbb
sub
js
push
jae
or
pop
add
lods
out
xor
xchg
out
sbb
lds
add
repz
call
in
adc
test
sahf
adc
ret
sti
jbe
mov
fstpt
jns
sub
js
repnz
mov
pop
xchg
inc
mov
xor
into
add
mov
sbb
and
sbb
xchg
and
cmp
or
xor
xor
pop
clc
jns
paddw
push
xchg
pop
pop
mov
xor
adc
mov
xor
mov
and
jecxz
insb
mov
sbb
xor
mov
adc
adc
mov
pop
mov
cmp
pop
or
fsubrl
imull
push
pusha
mov
mov
cmp
daa
xor
mov
and
cmp
mov
rep
loopne
and
xchg
imul
xor
add
outsb
call
or
inc
jmp
inc
ja
lock
or
fdivs
dec
stos
cltd
enter
pop
pusha
iret
cmpb
mov
mov
add
sbb
adc
in
push
jmp
add
shrb
lcall
sbb
stos
pop
imul
sub
dec
adc
pop
nop
mov
sbb
xchg
pop
in
mov
mov
push
js
mov
out
rorb
push
es
addb
mov
xchg
jg
push
jnp
push
stc
push
cmp
adc
out
fildll
sbb
adc
mov
inc
lcall
mov
add
cmp
jmp
int
rolb
inc
add
mov
sbb
into
or
mov
fdivl
cwtl
inc
mov
sbb
push
add
loope
fsubs
enter
jl
jbe
shlb
xchg
daa
cltd
mov
inc
enter
xchg
pop
enter
int3
int3
xor
fwait
and
mov
ds
mov
rcrb
push
int3
repz
push
sbb
js
adc
add
adc
add
test
and
js
daa
sbb
mov
pop
add
mov
adc
or
movsl
mov
push
insl
push
sbb
mov
notl
dec
dec
rorb
mov
ja
imul
sbb
xor
ret
bound
orl
hlt
lods
lods
and
dec
lods
add
jns
je
mov
mov
mov
adc
movsb
insb
sahf
adc
lods
movsb
movsb
ja
nop
int
repz
add
cmp
mov
repz
lret
jmp
cmpsb
and
mov
leave
data16
stos
repnz
daa
inc
jo
xchg
addr16
or
in
jmp
mov
hlt
subl
mov
fdivrs
or
sti
xchg
int3
jmp
jns
jmp
xchg
rcrl
cmp
ljmp
insb
inc
pop
cmp
cmpsl
sub
xchg
movsb
push
cmp
sbb
fcmovnb
push
xor
and
cmp
pushf
or
sbb
aad
lea
movsl
sbb
int3
mov
stos
sub
fldcw
add
mov
mov
pop
adc
mov
jmp
lret
data16
xchg
movsb
js
pop
scas
das
mov
add
shlb
lret
pop
cmp
sbb
pop
nop
adc
or
add
rcrb
sub
ss
sub
add
and
loopne
daa
lret
mov
lock
pop
dec
xor
lret
gs
js
or
sub
cmp
or
push
pop
addb
cmp
add
in
mov
or
in
sub
xor
call
dec
pop
mov
xchg
pop
out
dec
mov
sarb
leave
and
mov
cs
push
pop
and
and
xchg
mov
xor
ljmp
and
std
mov
loopne
dec
xor
pop
idiv
xchg
mov
mov
jae
sub
jno
and
gs
cmp
or
mov
sub
mov
adc
pushf
and
adc
inc
mov
les
jnp
push
xor
in
mov
adc
adc
push
sub
sbb
in
sbb
adc
test
leave
popa
test
mov
push
inc
enter
mov
adcl
fabs
mov
and
jg
js
out
dec
xchg
and
mov
sub
or
xor
ret
enter
mov
xlat
cmp
cmp
cmp
ret
jno
mov
ret
cmp
inc
add
push
cld
pop
and
ljmp
sti
sbb
mov
jnp
js
rcrl
nop
push
cmp
push
sbb
xor
add
call
inc
mov
cmp
or
sti
sahf
push
push
cmp
popa
js
and
push
call
in
adc
or
call
cmp
sbb
mov
push
xchg
adc
mov
mov
jmp
or
and
pop
es
pushl
aam
mov
mov
in
mov
mov
ljmp
mov
aam
add
mov
getsec
add
gs
sub
in
and
add
add
into
dec
enter
inc
xor
mov
add
pop
js
popf
ljmp
mov
add
enter
enter
fcomp
fxch
cmp
aad
loopne
jecxz
in
das
inc
sbb
ja
push
jg
jne
je
insl
push
add
filds
xor
xor
xor
xor
ss
cmp
inc
inc
inc
inc
fmuls
mov
cmp
scas
pop
pushf
fs
pop
push
dec
mov
xor
xlat
insl
mov
pop
in
in
add
cld
imul
cmpsb
imul
imul
cmpsb
imul
mov
int3
dec
shrl
aam
in
jg
pop
pop
insb
mov
xor
add
movl
sbb
pushf
pushf
xor
out
fs
push
stc
xchg
pop
js
cmp
enter
fdivl
mov
and
pop
inc
pop
clc
pop
pusha
test
repnz
mov
fs
leave
xchg
sbbl
jl
pushl
enter
pop
and
adc
inc
cmp
and
push
neg
ret
jmp
cld
or
sbb
insb
shll
cmp
sbb
loope
mov
dec
cmp
jbe
cmp
or
fldt
daa
add
add
inc
fistl
pop
negb
sbbb
int
add
or
add
dec
inc
popf
out
add
stos
push
insb
lock
rcr
or
es
jb
addr16
xor
cmp
dec
jnp
or
jne
and
insb
jns
and
dec
xchg
add
nop
test
push
xor
xchg
lea
add
enter
or
or
orl
or
sti
xchg
or
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
lea
sub
lcall
outsb
lcall
adc
or
outsb
pop
add
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
jge
inc
add
pusha
adc
xor
shll
jo
dec
sub
xor
push
add
dec
shll
and
adc
shll
shll
add
add
aad
dec
ret
and
xor
adcl
sbb
or
add
or
push
push
push
shll
sbb
adc
or
xor
xor
pop
test
adc
dec
stos
mov
add
adc
xor
xor
js
sbb
dec
shll
push
pusha
xor
shll
andb
fwait
jae
imul
out
mov
push
dec
add
mov
addb
or
push
or
cmp
add
stos
test
leave
jbe
add
adc
rcl
adc
adc
pop
or
or
or
add
xchg
add
and
add
or
leave
nop
or
or
or
or
inc
or
or
adc
adc
xorl
pop
leave
nop
or
sbb
sbb
sbb
or
or
add
push
xchg
icebp
fnsave
pop
adc
adc
adc
nop
or
adc
xchg
or
sbb
push
test
cmp
nop
xchg
lods
daa
xchg
dec
xlat
pop
clc
or
and
test
cwtl
xor
xor
aam
jle
and
outsb
jne
outsb
gs
insb
inc
jne
push
dec
inc
or
jnp
imul
mov
dec
fdivs
insb
mov
pop
insb
add
add
sbb
add
adc
push
pop
or
and
mov
mov
inc
hlt
adc
adc
jmp
sbb
dec
in
dec
in
pop
xlat
jne
xor
and
jmp
aam
pop
aam
movsb
push
enter
aas
sbb
cmpsb
pop
jbe
loopne
add
xchg
inc
or
shrb
pop
add
push
add
pop
sarl
inc
push
movsb
cmp
in
lea
movl
pop
xlat
pop
or
sbb
insb
setl
fstpl
pop
inc
mov
leave
add
xchg
popl
aam
in
pop
jo
rcrl
add
scas
jmp
ja
pop
int3
xchg
pop
and
xor
int
xor
adc
leave
or
jmp
xlat
jne
jl
adc
pop
or
push
sbb
je
dec
mov
enter
shlb
sbb
cmove
fsubr
push
scas
jmp
mov
faddl
xor
imul
pop
out
pop
rcrl
pop
in
and
scas
xor
push
test
pop
hlt
setp
mov
mov
xchg
in
xchg
lock
sbb
out
aas
shrb
call
ficoml
and
adc
sub
lock
xchg
mov
adc
add
xchg
inc
adc
lret
sbb
cltd
dec
add
add
or
enter
jg
out
cmp
cmp
cmp
je
jo
es
mov
je
aad
add
je
je
jp
adc
jmp
cmp
cmp
xor
aas
cmp
cmp
aas
cmp
adc
push
xchg
movsb
push
add
lds
nop
cmp
sbb
jne
xor
inc
imul
push
aad
mov
dec
gs
inc
xor
mov
loopne
outsl
outsl
insb
out
jg
add
popa
jo
push
ret
insl
jo
add
mov
sub
mov
imul
jp
arpl
popa
inc
sbb
or
push
jnp
imull
je
popa
insb
push
jne
ss
inc
aam
xor
out
push
add
mov
int
mov
outsl
adc
gs
in
add
frstor
sbb
jl
adc
jnp
mov
jp
jge
insb
popa
cmp
imul
jbe
inc
adc
mov
mov
xor
push
adc
or
fbld
gs
jne
jg
sub
xchg
adc
push
cmpsl
imul
imul
xchg
jbe
or
imul
jb
or
mov
popa
pop
sub
or
imul
out
push
adc
imul
inc
push
bound
mov
inc
jne
adc
mov
xchg
sub
fnstsw
inc
jl
or
pop
adc
adc
xchg
and
adc
dec
push
data16
mov
inc
cld
adc
inc
fs
or
jns
add
testb
push
jae
rclb
fcomp
or
inc
inc
adc
jo
movsb
xchg
sbb
jecxz
mov
adc
lea
aas
lret
hlt
fmull
jnp
bound
shll
inc
inc
mov
adc
or
adc
sub
push
ss
mov
jb
adc
or
push
dec
inc
or
sub
and
add
push
dec
rcr
fdivrp
push
std
jo
ret
push
outsl
jae
adc
add
mov
dec
push
sbb
lds
push
inc
imul
insl
inc
pop
lds
mov
cmpb
fsubrs
or
lcall
push
and
or
or
or
gs
lods
sbb
pxor
fisubrl
dec
lods
push
fcomi
dec
repnz
xchg
or
clc
popf
fsubs
arpl
mov
sub
push
mov
or
adcl
lahf
sbb
or
lret
sahf
mov
fs
andl
insl
dec
iret
fs
push
inc
ljmp
cmpb
pop
xchg
jo
mov
es
ret
push
push
sbb
dec
pop
neg
pusha
push
sbb
shlb
xor
inc
mov
jnp
outsb
push
push
add
pop
and
insb
sbb
push
and
rcll
jo
and
sbb
imul
push
xchg
cmp
mov
addr16
push
inc
adc
xchg
rorl
gs
mov
adc
int3
adcb
inc
push
or
lret
bound
ss
mov
orb
mov
leave
mov
imul
and
push
fs
sbb
push
push
push
jae
fs
lea
push
mov
ret
out
mov
aad
fildll
ljmp
cltd
inc
jp
test
and
dec
jb
test
push
pop
cld
cs
sub
pop
jecxz
cwtl
mov
add
dec
jbe
enter
sbb
push
es
push
stos
xor
xor
cmpsl
jmp
jo
inc
test
or
outsb
xchg
inc
sbb
shll
mov
mov
or
ja
hlt
ret
fwait
inc
stos
adc
fsubs
ficompl
iret
inc
dec
inc
or
jno
rcll
imul
lods
test
gs
push
bound
jge
push
imul
or
add
mov
jae
das
daa
cmovno
xor
enter
cltd
jnp
les
gs
dec
fldcw
mov
inc
imul
sub
bound
inc
inc
ret
insl
lret
pop
push
dec
xchg
outsb
push
shlb
imul
enter
mov
pop
or
xor
mov
fmuls
xor
fisubrs
adc
adc
cwtl
mov
inc
sub
lret
push
repnz
out
dec
adc
insb
cmp
lea
or
mov
sub
test
dec
add
and
scas
movlps
call
push
js
cmpsb
sub
or
xchg
push
insl
and
les
jne
notb
pop
cmpsb
mov
daa
xor
insb
sub
jp
xor
cmp
or
test
cli
cwtl
or
and
adc
push
lret
push
mov
movsb
and
dec
cmp
mov
cmp
sbb
and
dec
adc
gs
cmp
arpl
mov
inc
outsl
js
adc
mov
push
or
sbb
fcmovnb
push
jo
dec
cli
es
inc
ret
adc
xor
xchg
lods
faddp
add
xor
fisubrl
stos
pop
fmul
jg
pop
xchg
sbb
add
lods
jnp
test
popf
arpl
jp
repz
loopne
or
xchg
add
push
mov
fwait
xor
jge
jb
adc
adc
inc
push
arpl
sub
insb
jae
adc
mov
arpl
inc
add
pop
icebp
push
push
fadds
int3
or
and
retw
dec
das
or
jle
dec
add
shr
jae
arpl
aam
movsb
jns
mov
or
aam
insl
into
bound
imul
shll
cmp
sub
cmp
add
insb
pop
ret
ds
or
sub
mov
js
push
adc
std
xor
test
and
sub
push
inc
test
or
or
push
call
bound
jo
lea
jae
adc
mov
fmull
or
adc
fisttpl
jmp
es
jbe
ret
jo
subb
push
adc
frstor
imul
inc
mov
push
sbbb
incl
add
dec
add
add
pop
inc
sub
add
sbb
stos
jb
mov
add
lea
mov
int3
add
neg
fwait
or
fwait
add
js
mov
inc
adc
mov
sbb
adc
add
add
cld
adc
enter
sbb
in
enter
add
xchg
jbe
or
inc
inc
push
inc
sti
adc
xchg
daa
faddp
js
sbb
mov
fadd
pop
cwtl
daa
fwait
popf
dec
jge
test
sti
int3
jo
in
sbb
inc
inc
push
cltd
lock
and
push
xor
add
rcll
fisttpll
arpl
daa
adc
sbb
pop
dec
leave
add
add
add
add
add
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
or
add
xchg
mov
