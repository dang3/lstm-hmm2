mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
fsub
sti
pop
add
scas
adc
std
mov
nop
mov
or
jae
jb
or
push
out
or
aas
add
mov
mov
les
sub
jns
pop
push
dec
bound
arpl
pop
sbb
lock
pushf
insl
xor
int
jl
dec
jmp
arpl
sar
cmp
int3
addl
jmp
fdivrp
and
adc
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
addw
add
add
cmp
adc
adc
std
lods
dec
jo
loope
adc
or
movsb
fldcw
insl
cmp
mov
push
pushf
in
in
cwtl
xchg
nop
adc
in
in
mov
adc
in
in
jo
push
in
pop
pop
push
in
in
or
dec
dec
jns
xor
cld
daa
clc
hlt
inc
sub
daa
call
sahf
cmp
cmp
icebp
loop
dec
sub
add
mov
mov
add
movzwl
mov
ss
pop
ret
addr16
sub
and
stos
cmp
add
popa
lcall
je
jb
inc
and
je
outsl
outsb
and
xor
in
in
adc
push
imul
push
jb
data16
push
mov
push
push
je
popa
clc
adc
gs
insb
outsl
jo
repnz
cmpxchg
ret
lods
jge
jmp
mov
mov
dec
add
inc
or
shll
or
or
or
in
push
dec
adc
push
adc
scas
xor
rcll
adc
fildll
fildll
mov
mov
add
sbb
cs
jp
add
imul
aas
inc
and
dec
in
pusha
cmpsb
sub
inc
dec
ror
xor
sub
xor
xor
cs
pop
xor
cmp
mov
mov
pop
cmp
das
rorl
sub
add
add
neg
std
insl
mov
mov
jl
push
cmp
add
js
enter
and
mov
inc
pop
add
mov
mov
cmc
mov
add
nop
fildl
rorl
push
sub
mov
shr
out
jg
add
mov
mov
and
pop
mov
out
clc
jge
add
ljmp
ja
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jbe
rol
sti
shl
or
sbb
in
push
stc
ret
cmpl
sbb
scas
loop
adc
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
test
push
mov
pusha
push
mov
inc
not
add
push
and
add
jbe
push
add
push
int
add
rclb
or
push
jbe
pop
mov
lods
mov
loop
mov
out
mull
cmpb
mov
sub
mov
mov
sub
sbb
xor
stc
out
mov
nop
cmpb
jmp
fstpt
imul
mov
add
add
clc
test
push
xor
add
add
push
push
push
mov
lea
movb
or
rorl
fwait
and
xchg
or
add
sub
mov
or
ja
push
jle
jg
pop
or
or
imul
lret
outsb
ret
adc
pop
pop
icebp
sti
pop
dec
mov
mov
sub
jae
in
mov
fidivrs
adc
mov
push
and
or
test
jne
in
std
dec
xchg
loop
jns
add
jmp
or
sbb
or
mov
mov
and
push
push
lea
or
push
jg
in
inc
or
push
jne
push
push
mov
cmp
rorb
pushl
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
in
std
add
and
inc
loopne
repnz
sub
pusha
mov
adc
jecxz
jmp
fidivrs
loope
pop
pop
mov
mov
sarl
jbe
ljmp
shl
adc
xchg
xor
push
mov
call
cmpl
test
jo
fs
mov
xchg
adc
cmp
jae
mov
push
aas
dec
and
jae
fmuls
add
lods
iret
lea
movsb
sbb
es
sbb
mov
rolb
pop
or
pusha
jmp
lds
mov
jmp
mov
push
std
sub
add
add
inc
ret
push
mov
iret
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
test
btr
loopne
sarl
or
add
or
dec
jnp
sub
lea
mov
inc
jmp
sbbb
add
scas
fildll
cmp
jb
mov
xchg
in
idiv
int
enter
iret
sub
sub
cmp
and
inc
or
mov
rclb
mov
mov
movl
dec
cld
xor
das
mov
mov
pop
pusha
add
adc
scas
fsubrs
adc
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
lahf
insl
pop
mov
add
push
bsf
mov
push
loopne
rol
loopne
xor
sbb
sub
xor
cmp
pop
cld
jmp
mov
dec
mov
ret
pop
or
inc
bound
cmp
cmp
adc
test
push
pop
xorb
jb
out
subl
or
testl
fisttps
jns
shll
test
roll
out
sbb
mov
jne
subl
icebp
leave
ds
inc
inc
cmpsb
leave
adc
fadds
data16
xchg
dec
cltd
sarb
pop
mov
test
adc
aad
push
aad
xchg
inc
adc
cmp
jne
outsb
fs
cwtl
and
push
cld
iret
push
icebp
push
dec
rorl
sub
xchg
scas
ljmp
mov
pop
leave
outsl
xor
dec
mov
jmp
aaa
inc
add
call
roll
fmull
scas
testl
sub
xor
testb
dec
ret
lahf
lock
cmp
inc
fiadds
mov
popa
ret
xor
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
xchg
mov
lahf
mov
stos
flds
pop
out
add
movsl
movl
in
movl
loopne
add
jno
shr
dec
roll
pusha
aad
popa
in
or
in
or
cmp
jb
sbb
sbb
lret
jb
pop
inc
popa
jo
cmp
rorb
mov
ret
jg
or
decb
movsb
test
lea
push
mov
loop
roll
jne
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
xor
ljmp
cmp
push
and
cmp
push
fsts
sub
cmp
jb
sbb
push
pop
sti
adc
sub
adc
add
jp
jnp
and
stos
jmp
sbb
loopne
lds
add
sub
cmp
xchg
dec
das
push
jge
inc
mov
push
cmp
pop
cld
icebp
dec
or
or
mov
push
mov
add
or
popl
pop
data16
mov
roll
xlat
jno
pop
pop
sub
clc
addl
sahf
sub
add
mov
cmp
stc
call
icebp
inc
cld
test
mov
sbb
xchg
sbb
add
ljmp
cmpsb
imul
cmpsb
sarl
je
iret
ja
cmp
pop
es
pop
mov
call
ljmp
rolb
xlat
add
test
add
shlb
push
ret
andl
push
add
push
ss
adc
jb
lea
jl
inc
sbb
mov
push
pop
add
outsb
mov
dec
add
pop
sarl
jl
test
dec
iret
push
gs
add
xchg
aas
loop
cmp
ds
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
test
sub
mov
stos
push
lods
pushf
jno
mov
cmpsl
push
mov
mov
cld
mov
fs
mov
loop
pop
shr
sbb
mov
add
enter
mov
fadds
insl
rcr
incl
aas
wbinvd
shrl
xchg
add
jbe
aaa
sbb
pop
push
nop
lret
sbb
sbb
add
jb
sbb
test
jg
aas
insb
dec
add
js
adc
inc
add
icebp
mov
loope
inc
inc
and
addr16
mov
push
aaa
loopne
cs
cli
mov
arpl
push
ljmp
jbe
or
mov
lock
push
jae
ss
mov
push
adc
mov
icebp
add
push
mov
inc
sbb
add
push
adc
hlt
jne,pn
push
testb
je
adc
hlt
pop
dec
sub
jmp
mov
pop
pop
push
bound
out
or
loop
call
mov
jge
push
data16
ret
lcall
mov
push
cmp
jne
test
daa
dec
movb
jnp
out
pop
lea
mov
and
lock
push
rcrl
pop
testl
and
shlb
jno
fstpl
pop
mov
dec
scas
mov
mov
stc
es
sbb
xor
inc
setne
xchg
sti
movsb
sub
aas
inc
sbb
inc
icebp
ficoms
adc
add
jp
and
xchg
mov
out
mov
or
outsb
lock
push
push
rorl
jl
inc
pop
mov
cmp
jne
fldt
push
mov
and
sti
jbe
or
jne
mov
ja
loopnew
cld
mov
cmp
sub
call
loopne
fists
ret
decl
inc
in
adc
shlb
mov
jns
adc
mov
adc
fcomps
push
rorb
movb
data16
test
pop
mov
je
mov
push
sub
jnp
push
or
cmpl
mov
xor
int3
or
dec
or
mul
clc
mov
inc
out
adc
test
jle
sbb
cmpb
out
fwait
enter
cmpb
jb
jo
mov
add
dec
loopne
test
mov
push
sub
cli
cmp
je
or
sahf
jge
cmp
in
movq
or
push
inc
fiadds
add
adc
mov
andb
xchg
aam
icebp
or
in
xchg
push
mov
pop
mov
mov
push
dec
jne
data16
test
push
xchg
ret
lea
sub
sti
push
and
inc
add
jo
lock
clc
push
cmp
lcall
or
inc
push
jb
call
jle
inc
les
add
or
push
cmc
inc
scas
loopne
pop
jmp
mov
and
xchg
fisttpll
sub
mov
and
fdivr
or
in
int3
loope
xchg
cmp
cmp
jecxz
jne
mov
int3
sub
jb
ss
mov
sbb
aaa
adc
daa
mov
jae
in
xchg
scas
ds
or
sti
mov
jge
dec
jl
cmpb
cmpsl
adc
negl
xchg
mov
xchg
dec
mov
fadd
test
jp
mov
adc
dec
jb
sahf
mov
cmpsb
cld
dec
loopne
shrl
add
scas
in
scas
mov
mov
xlat
mov
or
ds
repz
xchg
fcomps
cmp
rolb
movb
inc
push
or
pop
inc
loopne
int
dec
adc
and
sbb
mov
imul
fs
out
pop
sbb
pop
jmp
mov
xorl
push
and
sarb
xchg
movzbl
scas
fldcw
dec
das
js
pop
pop
jno
pop
dec
pusha
or
xor
push
pop
incl
add
andl
fdivp
push
lcall
sub
stos
push
sbb
filds
imul
lds
js
outsl
mov
testl
mov
or
imul
into
mov
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
enter
insl
gs
outsl
jb
pop
popa
imul
popa
jae
outsl
add
arpl
fs
incb
pop
jae
popa
insb
insb
and
dec
imul
or
or
es
mov
addr16
outsb
imul
outsb
add
idivb
jae
xchg
jp
mov
cltd
xorl
nop
outsb
and
jo
mov
lahf
mov
das
cmp
dec
cli
push
push
xor
xor
mov
jb
movl
in
pop
mov
into
add
add
clc
jbe
mov
add
inc
add
cmp
jne
mov
xchg
mov
cmpsb
push
mov
cmp
jl
in
inc
clc
or
sbb
movl
jmp
add
out
into
dec
xor
jae
mov
rolb
cmp
jbe
ja
dec
mov
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
aaa
lret
jbe
mov
cmp
xlat
mov
push
pop
int
xor
div
imul
mov
or
mov
icebp
mov
in
dec
inc
xor
hlt
sbb
movl
mov
mov
mov
jnp
inc
add
or
repz
cmp
xor
lods
jb
push
mov
out
ficoms
jne
mov
jmp
mov
sarl
cmp
xchg
push
mov
cmp
jne
mov
ret
out
mov
dec
adc
insb
inc
or
or
or
and
stos
sbb
cmp
imul
dec
mov
outsl
push
sbb
mov
mov
push
out
lea
cmpl
jg
mov
jge
mov
sub
mov
iret
popf
iret
or
pop
sbbb
sbb
pushf
movl
dec
adc
repz
ret
mov
add
call
sub
mov
xor
adc
addr16
sar
jg
add
xor
mov
inc
xor
or
xor
mov
test
cld
pusha
jo
arpl
ss
pop
mov
mov
mov
lds
sbb
mov
mov
inc
mov
mov
enter
cmpsl
lock
out
adc
test
xchg
add
jecxz
sahf
or
in
aam
in
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
or
loopne
push
push
xor
pop
pop
jne
ds
js
mov
out
call
iret
pop
testb
inc
or
je
ljmp
outsl
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
mov
inc
repz
decl
mov
jmp
mov
jmp
mov
insb
adc
pop
repz
cmp
fmull
cmp
je
cmp
ja
sub
mov
jmp
and
in
sub
sub
or
adc
adc
int3
inc
push
push
or
int3
rorl
dec
dec
sahf
out
sahf
pop
popa
insb
jns
push
mov
lea
dec
or
adc
flds
fsubrp
push
add
cmp
jle
loopne
fisttpl
or
shrl
lret
adc
jbe
adc
mov
add
and
sub
pop
inc
cmc
pop
incl
insl
aas
fmuls
mov
or
xlat
fucomp
ja
inc
add
mov
push
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jbe,pn
fucomp
or
inc
lock
or
jbe
and
cmpb
add
xor
std
in
mov
jmp
sub
mov
fimuls
fisubrs
ret
add
js
inc
mov
adc
push
out
mov
outsl
mov
inc
nop
mov
pop
jne
pusha
push
nop
arpl
loopne
or
out
add
inc
sbb
iret
frstor
orl
pop
clc
mov
fidivl
mov
jo
divb
push
add
fisubl
fnstsw
jmp
mov
fbstp
and
mov
add
dec
jmp
mov
clc
ljmp
or
mov
add
movsl
out
das
pop
xor
imul
dec
cmc
mul
xor
cmp
ja
sub
call
mov
fldcw
cmp
pop
outsl
ja
insl
push
sub
adc
or
fstps
testb
fwait
orw
insb
fistps
add
pop
xchg
stos
neg
sub
pop
inc
lods
sub
repnz
or
or
nop
daa
sbb
dec
add
jmp
data16
mov
or
call
lods
sbb
pop
cmp
js
cmpsb
pop
cmp
and
mov
inc
and
cli
mov
sbb
cwtl
aas
mov
mov
imul
ja
and
adc
xor
add
sbb
fcomip
adc
lahf
jmp
cmp
dec
shr
mov
pushl
ds
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
push
shll
pop
add
xlat
xor
mov
sub
std
in
pcmpeqd
mov
sub
inc
xchg
xchg
stc
mov
sbb
lret
jbe
mov
mov
inc
inc
loopne
test
mov
add
push
xchg
inc
inc
in
mov
ret
je
mov
mov
cmp
jne
dec
je
mov
add
pop
add
aaa
add
sahf
loop
sti
scas
fidivl
add
push
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
jmp
dec
in
adc
cmp
jne
shr
sarl
add
push
mov
shr
or
test
cmp
pop
cmp
mov
rol
pop
and
mov
cmp
int
or
dec
dec
dec
and
andb
xlat
add
cli
clc
int
cmp
das
movsb
pusha
push
add
ljmp
or
cmc
add
push
add
outsl
fistpl
neg
sub
or
rcl
push
mov
ss
add
idiv
cmp
push
sub
xchg
jmp
sahf
out
iret
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
adc
es
push
or
ret
pop
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
std
pop
mov
test
jmp
or
or
cmp
ja
test
and
fcoms
out
int
or
incl
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
sub
popf
cmc
jmp
mov
xorb
cmpsb
popf
mov
xchg
and
add
or
pusha
xchg
scas
leave
shl
stos
aad
cwtl
pop
cmp
sbb
xor
mov
mov
push
cmp
sbb
mov
dec
jne
pop
testb
mov
and
xchg
dec
cs
shr
fs
jl
pusha
xor
cmp
cmpl
adc
in
fldt
leave
enter
loop
jns
pcmpeqb
cmp
adcb
push
and
jmp
pop
xchg
lret
xchg
jge
mov
xor
pop
push
cltd
stc
sbb
jmp
fstp
fldt
adcl
adc
out
mov
xchg
arpl
mov
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
jmp
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
decl
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
call
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
pushl
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
cld
rclb
popa
pushf
mov
and
addr16
repz
mov
incl
mov
push
pusha
les
outsb
bound
xor
jmp
inc
xor
sub
xor
insb
sarb
sbb
add
and
or
and
rcr
mov
dec
js
sbb
movzwl
fwait
std
inc
clc
lea
push
push
inc
or
hlt
mov
jne
xor
push
push
mov
pushl
mov
movl
data16
pop
ja
roll
and
pop
pop
std
ljmp
in
sub
ret
sub
jmp
fidivs
jecxz
and
pop
aas
or
clc
mov
push
dec
inc
push
push
inc
push
inc
pop
lcall
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
insb
jne
fninit
fwait
in
clc
sbb
mov
idiv
call
stos
lret
aas
xlat
mov
xor
mov
inc
rep
mov
add
or
cld
int3
leave
out
cmp
push
push
ja
xchg
cmp
daa
jl
inc
sbb
push
movnti
das
and
and
pop
sbb
dec
add
xchg
ret
xor
fnsave
and
mov
rolb
addb
sti
sti
std
sub
or
cwtl
mov
sbb
jle
lock
push
mov
rcr
test
mov
les
xchg
push
btc
fcoml
in
fs
mov
cmp
push
stos
insb
xor
in
pop
mov
push
add
jl
call
ret
sahf
subb
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
pushf
add
pop
fsubrl
clc
in
cmp
je
jbe
add
jae
ss
push
loope
std
mov
mov
push
sbb
jne
jne
sub
add
mov
jbe
pop
loop
adc
inc
movsb
fdivs
cmp
fidivs
paddd
shufps
add
mov
mov
add
sbb
push
and
outsl
clc
mov
ja
pop
out
pop
clc
mov
mov
inc
mov
test
subl
sub
and
adc
add
mov
shr
mov
push
callw
pop
lea
push
in
mov
sub
insb
clc
mov
push
dec
lds
cmp
shll
outsb
and
add
mov
in
inc
sahf
xor
xor
jb
jo
jne
push
or
aaa
or
or
push
inc
sbb
push
inc
fcoml
mov
scas
add
jmp
pushf
add
cmp
dec
aas
lods
rorl
mov
cld
inc
fistpll
jne
mov
in
push
xchg
jmp
lret
test
test
add
scas
je
pop
in
test
call
sbb
pop
add
sub
mov
pop
cs
xchg
les
pop
add
cmp
pop
ljmp
mov
mov
xor
das
mov
or
es
loop
out
les
jle
xchg
pop
push
data16
sub
cmp
test
fstpt
inc
push
stos
fiaddl
pop
pop
gs
cld
in
popa
lock
ds
mov
adc
pop
int3
xchg
adc
mov
std
add
sbb
add
dec
jne
icebp
fucomi
sbb
ret
incl
mov
xor
and
jne
dec
cmp
fists
push
popf
enter
inc
pop
sbb
fcompl
sbb
pop
mov
lahf
in
push
pop
add
mov
lcall
push
hlt
xor
lea
mov
mov
mov
movl
sarl
inc
or
or
pop
cmpsb
cmp
inc
sub
or
jmp
mov
push
mov
xor
or
adc
push
clc
addr16
sub
sarb
inc
xor
imull
xchg
inc
in
jae
gs
testl
sub
mov
idivl
shlb
out
ja
pop
pop
xchg
pop
addl
cli
in
push
pushl
adc
aaa
lock
add
in
pop
xchg
dec
sahf
dec
cs
add
add
jae
xor
pop
push
push
and
sbb
jmp
mov
or
jne
movsbl
inc
inc
jmp
add
mov
popa
addr16
jecxz
cmp
cwtl
xchg
or
sbb
loop
fdivrl
adc
jecxz
pop
movb
clc
cmp
inc
add
jne
pop
sbb
cmp
inc
mov
adc
outsb
pop
loopne
cmp
adc
test
cmp
add
shlb
out
jg
xchg
lcall
into
cli
out
push
je
dec
jge
dec
inc
push
test
lea
add
inc
xchg
fidivs
clc
add
stos
mov
jo
leave
cmc
adc
xor
jne
jbe
adc
cmp
je
orl
and
add
sbb
pop
sbb
cmp
sub
push
cmpsl
sarb
sub
mov
cld
adc
lock
pop
mov
jecxz
lods
fisttps
dec
adc
xor
push
xor
mov
xor
or
add
pusha
sub
repz
cwtl
push
or
and
cltd
pop
add
lds
aas
cltd
orb
mov
lods
aas
jb
add
dec
fdivrs
dec
fadds
rclb
loope
mov
or
push
std
mov
and
fsubl
jne
outsb
ljmp
adc
push
mov
arpl
sbb
enter
push
adc
xor
adc
mov
mov
jno
mov
pop
adc
es
or
dec
pusha
inc
movsb
jmp
pushf
adcb
outsb
jb
inc
mov
sub
enter
aaa
add
cmp
shrl
add
push
push
in
call
std
lods
adc
and
jmp
dec
test
inc
in
push
dec
imulb
pushf
loopne
inc
in
loopne
push
out
mov
outsl
or
fdivrs
call
push
push
or
sbb
leave
mov
dec
das
adc
idivb
inc
sahf
sbb
incb
inc
or
pusha
add
inc
or
jo
cmp
dec
sahf
test
fwait
negb
inc
adc
adc
add
repz
pop
mov
push
sbb
cld
pop
and
adc
loop
xor
add
shrl
jo
sbb
or
ja
ss
mov
cmp
je
sbb
mov
adc
push
sub
scas
adc
dec
je
jmp
add
add
je
jmp
cmp
out
push
adc
xchg
cs
adc
jmp
sub
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
inc
inc
lret
movzbl
push
or
adc
movswl
xchg
sbb
jo
leave
je
push
mov
dec
or
xor
dec
lahf
icebp
push
outsb
inc
sbb
fldl
insb
cli
sub
addl
popf
inc
pushl
xor
push
xchg
jo
cmpb
pop
cs
sbb
fidivs
inc
mov
addb
mov
enter
push
lret
int
sbb
mov
cmp
or
add
or
cmp
jne
orb
cmc
and
loop
lock
sbb
js
dec
jle
jge
test
jle
dec
mov
je
add
fmuls
pop
and
sub
mov
jmp
mov
fisubrl
or
dec
leave
fisubrs
or
ds
mov
in
sti
jle
jbe
fadds
dec
ds
xlat
iret
cmp
jg
cmpsb
push
mov
add
xchg
cmpb
xor
or
popf
mov
sub
jb
fldl
clc
ss
lahf
xchg
ret
dec
xor
mov
sbb
push
mov
mov
add
js
ljmp
cli
dec
jne
pop
pop
dec
add
mov
out
movsl
imul
pop
mov
mov
sbbb
stc
add
cwtl
mov
and
and
mov
icebp
mov
dec
mov
add
loopne
and
test
rorl
jbe
mov
pop
push
scas
adc
out
mov
fcomps
rolb
mov
cmpsb
outsl
jbe
outsl
fwait
in
ja
add
mov
mov
or
push
xchg
xor
push
bound
out
loopne
mov
cmp
mov
add
or
inc
dec
push
push
sbb
bnd
push
out
xor
inc
pop
xlat
test
jne
mov
mulb
fs
cmp
mov
pop
sarb
fsub
pop
gs
sub
je
lock
jnp
lcall
icebp
cmp
cs
fsub
sti
mov
mov
cmp
daa
data16
faddl
lret
xor
ds
xor
jnp
sub
test
sahf
sbb
push
sbb
js
filds
je
loopne
aaa
test
pop
mov
insl
or
dec
adc
sbb
test
in
cwtl
sbb
scas
pop
add
adc
add
add
add
mov
push
test
popl
push
ficoml
adc
jb
adc
cwtl
lods
sub
xchg
push
xor
push
out
sbb
and
mov
mov
pop
pop
pop
mov
dec
add
or
push
mov
rolb
into
xor
mov
or
jmp
mov
movsb
sbb
repnz
add
push
push
or
push
mov
push
push
lret
cmpsl
push
cmpsb
add
mov
cmp
lahf
adc
pop
pop
pop
mov
pop
mov
dec
clc
dec
jl
lock
clc
rorb
pop
jg
jb
scas
adc
push
sbb
add
or
add
sub
dec
jne
dec
push
push
fbld
inc
jg
sbb
cmp
push
pop
mov
pop
push
dec
and
out
inc
insb
xchg
adc
adc
xchg
das
xchg
jle
aas
insb
cli
cmp
add
ljmp
lea
mov
or
movl
cld
inc
push
xorb
mov
mov
das
js
nop
test
sahf
les
sarb
mov
aaa
ret
cmp
pop
adc
popa
xor
je
add
out
inc
cmp
add
sub
sbb
add
outsl
inc
aas
sub
xchg
jmp
lea
cmp
xchg
cmp
push
cld
pop
rorb
loop
decl
iret
cmp
push
jl
sti
lahf
rorb
mov
int
mov
add
sbb
cmpsb
into
rcl
push
fisubl
mov
jge
xor
ret
pop
cmpsl
push
mov
mov
loopne,pn
mov
push
cmp
je
and
aam
push
cmp
add
jo
sti
in
cs
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
popf
je
int3
mov
inc
xchg
inc
add
add
push
xor
push
jl
das
lock
rcrl
mov
jle
scas
outsl
push
je
pop
cld
and
cmp
jl
orb
xchg
aas
idiv
cld
dec
js
pushf
push
pop
inc
out
test
outsl
js
inc
jmp
jns
push
cld
add
mov
inc
lock
cmp
push
sub
es
cmp
jo
repnz
sub
arpl
xor
adc
or
lahf
cmp
scas
mov
ds
rorl
add
das
lcall
rorb
sbb
mov
add
pop
push
xchg
in
popa
mov
pop
lret
mov
lret
cmpsb
mov
jbe
lds
pushl
cmp
cld
and
inc
cld
dec
jmp
jbe
or
push
fs
data16
pop
cmp
nop
push
dec
jne
mov
idiv
lahf
loopne
add
cld
popf
cmp
pushl
add
dec
jmp
inc
xlat
bound
pushf
jb
jg
scas
xchg
add
jne
addb
sahf
in
loopne
adc
adcl
and
jmp
and
jle
pop
xor
out
cli
or
or
movsb
pop
cld
sub
push
adc
and
sub
sub
sub
mov
xor
je
js
mov
mov
jmp
add
jns
mov
cmp
icebp
in
add
pop
and
or
mov
mov
ret
cmp
push
into
push
clc
inc
or
sub
mov
in
add
sti
cmp
jmp
push
cmpsb
movsl
bound
gs
cmp
dec
inc
lret
shlb
dec
shlb
jae
adc
push
in
adc
jg
mov
cmp
jge
sub
roll
sarb
add
loope
mov
aas
adc
shr
in
jmp
and
cmc
adc
iret
xchg
jp
dec
jl
int3
jge
incl
push
mov
icebp
ss
stc
add
lea
clc
mov
pop
inc
dec
cmp
out
mov
or
dec
cltd
mul
mov
mov
push
cmove
lods
cmp
subb
imul
add
gs
cmp
fimuls
add
loopne
adc
lock
push
add
mov
test
std
mov
mov
cmpsl
out
jg
add
sahf
dec
enter
cld
fdivrl
sub
jl
sbb
add
add
mov
fcoms
neg
scas
xchg
jp
je
test
or
inc
jl
je
dec
movsb
cmp
jb
or
jb
stc
pop
sub
jmp
outsb
and
movsl
sbb
dec
add
ret
mov
shrb
js
adc
jbe
imul
xor
push
xor
inc
push
or
dec
push
shll
shll
mov
ss
jo
sbb
xor
jne
mov
shr
sbb
jne
push
icebp
adc
xor
arpl
loopne
sub
mov
xchg
adc
js
scas
sbb
adc
stos
loopne
int3
pop
cmp
gs
in
sub
arpl
out
push
cmp
and
daa
push
pushf
dec
cmp
xlat
jle
loop
int3
cltd
pop
xor
cmp
mov
lods
mov
cli
or
fs
adc
push
push
das
and
mov
push
push
sub
pop
cmpsl
cmp
inc
sub
or
lcall
xor
popf
push
sbb
insl
add
inc
adc
inc
push
jmp
and
jle
inc
jmp
mov
nop
add
adc
inc
pushf
mov
js
pushf
inc
pushf
aas
data16
xor
aaa
enter
data16
pop
pushl
mov
sub
pusha
sub
add
add
add
mov
add
push
xor
adc
mov
cld
shr
pop
sbb
les
inc
push
xor
ljmp
or
mov
fistpl
add
inc
and
mov
push
cmpsb
or
pop
das
or
cmp
sbb
adc
stc
xchg
mov
pusha
clc
movsl
lock
jge
pop
dec
cmp
nop
jle
outsl
negl
ret
cmp
push
lods
add
add
dec
or
inc
jp
fistpll
js
sti
sbb
sub
cmp
cmp
jle
mov
add
xchg
aam
inc
lea
sbb
loop
push
popf
inc
pop
inc
and
mov
cwtl
into
inc
aaa
push
mov
lea
mov
mov
pop
call
adc
xor
lds
fisttps
xchg
ret
add
push
cld
out
cli
or
or
cmp
je
cmp
je
cmp
lret
je
and
or
fistl
jp
clc
jmp
adc
dec
imul
adc
jmp
push
mov
mov
mov
stos
or
cs
cs
adc
popf
sub
jmp
cmp
inc
sub
jns
add
xlat
push
jmp
lahf
inc
sbb
jmp
fstpt
jp
adc
mov
mov
cmp
adcl
sahf
out
push
and
inc
adc
mov
pop
fstcw
inc
mulb
lcall
lret
cmp
loopne
jmp
push
cmp
sub
jmp
inc
sbb
sub
jb
shr
sub
or
sbb
cmp
and
ret
pushf
icebp
jmp
fisubs
adc
dec
push
shlb
pop
jle
jno
enter
cmp
mov
push
sub
cmp
outsl
jp
jb
xchg
mov
xchg
lock
or
out
inc
loopne
dec
inc
enter
push
dec
pop
xor
xchg
dec
adc
rcll
and
pushf
ret
sbb
adc
enter
add
cld
dec
dec
clc
push
aam
aaa
add
sub
jle
ret
addr16
mov
adc
mov
out
lock
cmp
xor
or
je
cmp
out
or
jo
adcb
push
push
pop
or
xor
inc
push
dec
mov
jmp
and
insb
lea
adc
adc
js
jo
sti
popa
pop
iret
pushl
or
push
pop
jmp
aas
popa
in
fcomp
add
sarl
xor
mov
xchg
enter
ds
lock
or
adc
pop
add
fimull
rorb
sbbb
xchg
pop
mov
and
mov
in
cs
dec
in
push
popa
jg
sbb
nop
inc
sahf
mov
jmp
and
out
sub
cmp
inc
mov
jl
sbb
lcall
les
push
loope
xor
add
or
pushl
lock
pop
add
inc
call
out
js
cmc
mov
cmp
add
je
cmp
pushf
iret
push
cwtl
adc
or
sbb
pop
ret
es
dec
inc
mov
adc
hlt
test
movsb
pop
outsl
mov
xchg
add
mov
mov
pushl
cmp
and
add
xchg
adc
pop
pop
ret
clc
sub
pusha
inc
in
mov
mov
lock
bound
iret
xchg
popa
push
or
lcall
adc
mov
repnz
les
jl
ficomps
mov
inc
sbb
in
out
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
je
jle
sub
xor
das
and
testl
mov
mov
add
sub
jb
outsl
mov
sub
jb
add
or
jmp
xor
sub
jmp
getsec
movsl
fadd
lret
jmp
push
subl
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
sbb
bound
movsb
loop
mov
inc
add
lock
ret
or
xor
enter
inc
insl
and
test
insb
xor
cmp
add
ficoml
stos
shlb
adc
inc
jns
movsb
sbb
dec
inc
js,pt
and
jne
adc
int3
and
jg
jp
inc
mov
dec
js
xor
mov
dec
daa
jmp
cltd
sub
pop
sbb
add
je
sbb
setb
jmp
setl
cmp
je
push
nop
ret
add
rorb
pusha
mov
mov
mov
sub
adc
or
and
es
dec
aam
dec
loopne
and
int3
decl
push
cs
pop
push
mov
repnz
iret
push
cmp
sbb
fiadds
dec
or
mov
sbb
sbb
loope
sbb
xchg
out
sahf
mov
add
push
fs
sbb
sub
push
jo
adc
fmuls
testb
dec
ss
fbld
into
in
idiv
cmp
je
andl
ljmp
or
xor
jge
jge
fildl
out
xlat
imul
sti
mov
sub
push
lea
mov
pop
mov
aad
pop
jmp
decl
stos
pop
inc
cmp
lret
in
jge
or
push
in
test
in
push
mov
adc
into
stos
in
mov
push
mov
sub
jge
sub
mov
mov
cmp
push
sub
lahf
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
ja
xchg
xchg
fidivrs
int
mov
jl
lds
cmp
clc
test
push
dec
jne
insb
icebp
insl
jl
mov
push
aaa
push
addl
cmp
decl
dec
clc
jne
scas
add
lock
push
int3
xchg
inc
mov
inc
pop
ja
in
data16
aaa
in
rcrl
push
push
mov
incl
shlb
cmp
pop
lahf
cltd
test
lock
in
inc
ret
inc
sbb
sahf
nop
add
push
add
ret
inc
outsl
push
or
popa
insb
inc
sub
jnp
jne
clc
ret
pop
mov
arpl
mov
mov
mov
cwtl
push
inc
fs
sbb
je
out
sbb
cwtl
push
and
jae
or
add
cmp
clc
jmp
ret
and
cmp
xor
insb
sub
aas
scas
clc
lret
and
sti
pop
jne
les
add
out
enter
mov
jmp
push
andb
movsb
gs
shl
out
inc
push
lods
mov
add
das
popf
test
call
and
idivb
sub
sbb
sbb
test
pop
sti
sbb
repz
mov
sbb
and
dec
fidivl
jne
push
mov
sub
fdiv
outsb
clc
lea
mov
rorl
inc
cmp
mov
push
push
addr16
xlat
into
xchg
imul
lahf
insb
inc
lock
je
fdivrp
fmull
cmpsb
add
lods
jg
movb
imul
in
ret
dec
push
push
movl
roll
cld
imull
shrb
pop
or
pushl
cli
ljmp
jb
gs
xor
cs
insb
movl
addr16
popa
je
sub
insl
gs
and
loopne
jecxz
pop
jle
jecxz
daa
pop
sarl
sti
movb
int3
push
mov
nop
data16
add
add
xor
repnz
cmp
xchg
push
test
sbb
push
cmp
dec
cwtl
jns
push
sub
out
xchg
into
pusha
addl
fldcw
iret
adc
add
or
mov
repnz
mov
cmp
mov
xchg
sti
xor
jecxz
push
lods
repz
ret
std
xlat
sbb
mov
xor
rep
or
push
rcll
stos
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
push
sti
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
in
ficoml
jg
cmp
ret
push
mov
pop
mov
pop
jo
push
cld
jne
je
or
pusha
ljmp
lcall
add
push
or
loop
sub
test
push
or
outsl
pusha
pop
mov
pop
fldt
push
inc
rcrl
ret
cmp
data16
call
push
push
mov
adc
xchg
sbb
mov
pop
pop
inc
ret
ret
sbb
rorl
fnstenv
js
add
ret
add
pop
sub
pop
pop
test
add
lock
adc
sub
lret
cwtl
add
insb
outsb
sbbb
pop
or
push
fidivs
or
jb
lcall
loope
cltd
ja
stos
and
xchg
pop
outsb
pop
sub
inc
mov
lea
dec
fldl
cmp
xchg
cs
loopne
xor
dec
inc
cmp
ja
jg
sub
inc
jmp
inc
pop
xor
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
pusha
add
mov
and
rolb
fscale
aaa
cmp
jae
cmp
jb
or
dec
movb
loopne
adc
loopne
dec
rcrl
add
cmp
lea
lret
push
ret
mov
andb
dec
pop
js
bound
adc
mov
out
cld
loopne
lahf
hlt
mov
mov
xor
roll
mov
xlat
dec
loope
and
je
cmp
ja
outsl
mov
and
cmp
jne
fidivrl
shl
or
mov
push
lea
jg
inc
dec
cld
mov
out
adc
lahf
add
nop
or
xorb
out
adc
or
movl
pusha
jmp
inc
mov
ret
aaa
inc
or
stos
sbb
adc
pop
idiv
xorb
sbb
or
jb
inc
dec
test
adc
pop
sbb
packsswb
nop
mov
cld
lods
mov
int3
je
add
dec
add
xor
pop
mov
ret
cwtl
fisttpll
cmp
mov
lods
test
test
sbb
dec
ja
or
aam
push
xchg
imul
imul
inc
jb
xchg
pop
imul
jo
pop
cmp
mov
mov
push
lcall
xchg
pop
inc
pusha
add
jae
push
xorl
mov
pop
je
test
enter
inc
push
inc
mov
imul
and
inc
push
mov
lock
sbb
popa
popa
outsl
rorb
rorb
xchg
arpl
pop
mov
jbe
add
sbbl
ret
cmpl
cwtl
mov
rorb
roll
int3
or
push
clc
add
pop
sub
jmp
sarb
pop
dec
xor
orl
push
sub
rorb
adc
mov
push
sub
inc
jo
mov
out
or
xchg
xchg
mov
into
mov
mov
xor
sbb
test
or
rclb
cmp
pop
clc
sbb
fnsave
cmpl
push
adc
loop
add
pop
testb
push
push
cs
aaa
push
rorb
or
cmp
lcall
insb
add
jns
push
dec
push
mull
loop
mov
ret
mov
loop
mov
push
xchg
mov
adc
mov
mov
insb
idivb
movsb
or
mov
cmp
aaa
cld
pop
daa
push
push
or
or
or
add
movsb
xchg
or
mov
xchg
sub
dec
rcrb
out
jle
shr
push
insb
xchg
sub
ja
enter
sti
outsb
add
push
or
insl
ja
add
dec
push
dec
inc
aaa
mov
std
ja
testl
mov
fs
gs
aas
jnp
sub
adc
jb
jns
es
imul
bound
inc
push
outsl
arpl
out
mov
jne
je
dec
outsl
je
imul
jge
std
mov
ds
outsl
inc
arpl
or
insl
int
ret
or
jb
xor
xor
jg
loopne
outsl
insl
bound
outsl
js
pop
push
imul
outsl
ja
nop
outsb
cmp
andps
outsb
dec
inc
xor
mov
mov
push
sti
add
dec
cld
sub
jb
lock
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
sub
hlt
cmp
cmp
lock
call
cmp
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
insb
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
fs
push
dec
pushf
pushf
pushf
pushf
inc
inc
push
dec
pushf
pushf
pushf
pushf
pop
pop
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sub
dec
dec
dec
dec
hlt
lock
call
in
fmull
dec
aam
int3
mov
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
xchg
fildl
enter
or
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
leave
leave
test
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sub
hlt
lock
in
in
call
in
aam
in
in
int3
enter
add
test
addl
xchg
mov
adc
lock
and
or
adc
sahf
out
sbb
and
aam
loopne
and
imul
cltd
and
cmp
jl
cmp
xlat
add
shrb
jp
and
ret
in
inc
cmp
push
mov
push
mov
push
sbb
pusha
or
jne
push
gs
and
sti
in
sub
cmpl
pop
lods
str
or
lea
popa
gs
sar
aaa
add
and
push
dec
inc
inc
dec
add
outsl
scas
std
in
mov
pop
push
dec
dec
dec
push
inc
push
dec
sti
fdivrp
mov
push
push
dec
push
push
pop
sub
push
inc
dec
pushf
dec
popa
mov
inc
push
das
pop
cmpsl
jp
xor
out
call
or
inc
scas
mov
cmpsb
psrld
jo
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jae
jb
stos
stos
lods
lods
imul
push
push
inc
outsl
out
jo
add
adc
add
adc
je
insb
jae
fmull
or
fbld
sbb
nop
in
push
push
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
loopne
mov
in
scas
data16
fnstsw
push
mov
movl
js
gs
mov
mov
mov
aas
xchg
push
inc
inc
bound
je
adc
das
js
mov
fdivs
dec
inc
jnp
or
insb
mov
push
leave
leave
insb
les
mov
push
outsl
testl
or
outsb
mov
inc
jb
mov
subb
movsb
jb
shr
es
xchg
sub
js
jg
mov
fdivrs
add
push
sbb
cs
sub
xor
mov
aas
xchg
or
imul
mov
jb
scas
mov
mov
popa
outsb
gs
loopne
data16
or
dec
outsb
jbe
jb
insb
outsl
ja
dec
xor
cmp
cmp
inc
and
dec
in
inc
sti
gs
xchg
scas
xchg
lock
jbe
imul
outsb
scas
in
fstl
push
xchg
insl
jle
gs
andl
jb
scas
inc
addl
adc
pushf
scas
mov
pusha
mov
fs
inc
sbbb
scas
ds
lock
mov
orl
add
daa
push
test
fcoms
or
inc
and
in
inc
push
push
pop
xlat
push
or
scas
sbbl
add
inc
fdivs
push
adc
sbb
popa
sbb
test
inc
dec
dec
push
push
or
lock
push
nop
shrb
push
inc
or
arpl
nop
sbb
xchg
sub
je
mov
or
je
ds
or
imul
shlb
pop
mov
pop
pop
js
fsubl
xchg
xor
cwtl
and
or
cli
dec
out
mov
or
mov
sub
jo
push
mov
bound
adc
stos
push
inc
mov
add
push
addr16
mov
es
stos
mov
data16
pop
jle
add
xor
das
rorb
jo
xor
jns
dec
mov
sbb
lahf
and
cltd
mov
divl
rcll
push
push
gs
outsb
addr16
inc
daa
daa
mov
or
adc
daa
daa
daa
sbb
push
mov
out
and
push
test
mov
rorb
outsl
dec
psllw
nop
int3
mov
fstpl
imul
test
inc
out
gs
cld
fldt
push
adc
jb
popa
fs
mov
jne
int3
add
loop
or
adc
movsb
das
push
sbb
ds
aam
repz
js
mov
adc
jns
jmp
mov
jnp
sbb
fisttpl
push
loopne
sbb
ja
mov
aas
xor
andl
adc
xor
roll
push
dec
push
imul
loope
jne
inc
push
mov
add
add
lods
outsb
arpl
ljmp
pop
fimull
shr
div
mov
mov
add
dec
jb
scas
xchg
mov
mov
aad
mov
xorb
ret
xor
push
aas
jo
lock
cmpsl
mov
add
ja
mov
or
xor
or
addr16
pop
popf
xchg
inc
pop
or
js
sbb
mov
mov
adc
and
les
loopne
push
jl
add
and
adc
sarb
mov
sbb
mov
or
sub
adc
jle
sub
les
rorl
cmp
sub
sub
das
stos
insl
sub
jmp
or
mov
jae
data16
jo
adc
pop
add
and
push
leave
add
adc
orl
dec
dec
loopne
out
add
or
inc
ljmp
dec
lret
add
invd
or
push
add
lods
movsl
aaa
pushf
adc
rcrb
cmp
fcompl
stos
cmp
inc
cld
out
add
lcall
ret
or
inc
sahf
cmp
cmp
sub
pop
add
pop
adc
and
or
sub
mov
stc
add
or
sub
cmpsb
jmp
and
add
jg
or
test
ss
pop
cmp
jne
pop
inc
xchg
xor
ds
sarb
xorb
inc
neg
ret
pusha
add
push
inc
fdivr
push
push
mov
mov
ffree
jmp
mov
je
mov
xor
fstpt
adc
fdivs
push
sub
add
cmp
jg
into
fiaddl
outsb
cmp
or
sbb
xchg
jmp
sub
jne
pop
cmp
je
hlt
or
stmxcsr
pop
pop
pop
jl
mov
pop
pop
dec
add
pop
movsl
aaa
cmp
or
cmp
jne
rolb
mov
add
pop
subb
jno
pop
or
xor
fisubrl
xchg
add
shlb
outsl
sbb
push
enter
inc
inc
xor
fbld
out
sub
push
test
ss
in
popa
add
mov
cltd
leave
std
bnd
fsincos
add
cwtl
insl
mov
mov
xor
repz
jl
in
xchg
fdivp
jmp
jbe
adc
or
fcoml
dec
add
mov
sub
clc
jb
sub
lcall
push
and
movsl
jb
push
push
mov
divb
jne
xor
adc
xchg
xchg
imul
int3
and
clc
leave
add
add
or
jb
cwtl
push
adc
jne
jle
pop
mov
pop
imul
sbb
inc
jne
push
inc
das
mov
in
or
mov
mov
rcr
sbb
mov
dec
decl
jne
mov
dec
jb
jnp
xorl
dec
icebp
cs
call
fucomp
aas
daa
mov
sub
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
addb
sarl
or
or
ss
mov
add
xor
out
test
mov
dec
jp
and
inc
mov
add
dec
call
push
sub
or
mov
inc
inc
mov
pop
sti
dec
jne
jmp
test
rolb
shll
push
fcmovu
jmp
inc
pop
mov
jns
mov
incl
mov
inc
dec
mov
ret
push
sbb
xor
dec
jle
cli
decl
add
pop
mov
adc
pop
pop
sub
sub
jbe
sti
jg
incl
shll
add
push
mov
sub
xor
push
outsb
push
rol
cmp
push
xor
test
xor
dec
cmp
pushl
dec
loopne
sbb
rcrl
pop
ja
or
mov
ljmp
mov
add
sbb
add
xor
adc
movb
mov
sti
ret
sbb
andl
insb
and
fistps
shlb
fadd
faddp
add
mov
sti
push
add
rorl
fdivr
mov
push
mov
xor
add
push
sub
rcrl
loope
pop
daa
add
outsb
ffree
frstor
ffree
ffree
pop
aad
add
push
sub
push
frstor
push
dec
repnz
ss
subb
push
or
add
aam
inc
push
push
scas
aaa
aad
mov
and
hlt
or
cmp
push
loop
mov
adc
or
scas
insl
aad
clc
mov
sarl
pusha
or
push
das
push
and
insl
imul
push
pop
xchg
xor
cmpsl
mov
jg
mov
sete
pop
outsl
xchg
lea
js
pop
inc
add
mov
out
fs
je
cmpsb
sbb
dec
cmp
push
inc
cld
iret
mov
cmp
rcll
mov
stos
sub
pusha
sub
mov
adc
fists
orb
sti
idivl
les
test
jl
cmpb
add
test
fstl
and
pushf
push
xchg
pushl
pop
popa
call
mov
cwtl
adc
out
rclb
sbb
lock
mov
call
out
aas
mov
add
push
cmp
xor
addb
pop
and
subl
jp
dec
hlt
jne
ret
lock
xchg
decl
loopne
mov
andl
insl
lock
data16
lock
setne
jmp
cmp
dec
pop
mov
sbbb
ss
cwtl
or
add
mov
clc
mov
pop
add
ds
fsubs
in
xchg
stos
and
ret
adc
out
pop
jmp
and
dec
mov
push
mov
or
or
pop
sub
decl
add
mov
and
pop
cmp
inc
ja
xor
scas
ret
push
adc
adc
and
in
fnstsw
push
push
mov
mov
jl
pop
rclb
xor
lods
fstpt
push
pusha
mov
repnz
pop
enter
iret
pop
insb
cwtl
mov
xchg
out
lret
clc
test
pop
shll
cld
repz
inc
pop
lret
notl
add
fcmovne
lea
cmpl
adc
imul
mov
emms
push
push
jge
mov
push
loope
mov
jg
mov
or
jbe
or
movl
gs
call
add
out
inc
je
sub
mov
js
movb
pop
mov
loopne
not
mov
pop
add
and
jne
aas
cmp
loope
in
adc
and
hlt
cwtl
xchg
shrl
jmp
pop
lods
xchg
imul
pushf
mov
or
lahf
or
or
dec
jp
xor
sbb
adc
jnp
or
cld
repz
mov
add
cld
mov
mov
out
lea
pop
ret
cmp
xor
push
add
daa
jnp
push
inc
aas
jne
cltd
mov
aaa
mov
and
stos
test
inc
or
mov
and
ret
clc
dec
call
mov
test
mov
mov
dec
jmp
addr16
mov
jp
and
mov
jp
cwtl
rorl
inc
jne
cmp
lock
test
out
in
fistl
iret
loope
inc
pushf
cltd
lock
inc
xor
sbb
mov
jmp
nop
aas
mov
sbb
mov
mov
add
push
push
fsubr
pusha
andb
sub
add
sti
xchg
push
andl
pop
sub
mov
mov
enter
inc
sbb
pop
sub
lock
sarl
sahf
xor
inc
sbb
push
inc
xor
push
lret
popa
add
adc
mov
fdivrs
xor
push
jp
or
testb
fwait
inc
stos
mov
push
or
add
out
and
adc
push
dec
mov
std
mov
pop
pop
mov
ss
not
and
pop
sbb
movl
mov
lcall
lea
mov
jmp
push
movsb
xchg
pusha
mov
mov
add
int3
call
pop
mov
and
repnz
incl
arpl
push
ja
inc
outsl
clc
sti
cwtl
mov
sub
mov
pushl
mov
pop
add
fcomps
cmpsl
jne
push
rolb
dec
pop
jg
mov
out
pop
les
sbb
not
mov
inc
dec
sti
and
add
mov
or
jns
mov
pop
mov
pushf
clc
adc
add
xor
cs
cmp
sarl
pusha
out
lock
aad
or
jg
fwait
test
pop
push
mov
jle
je
loopne
pop
pop
jne
inc
cmp
sbbb
loope
fdivrs
insl
sub
nop
paddsb
push
adc
xchg
pop
xor
outsl
jle
jb
in
aam
jne
jo
ret
xchg
lret
outsl
decl
jp
xchg
inc
out
out
int
adc
add
imul
xchg
loopne
aad
add
push
jge
mulb
fs
push
hlt
clc
cld
push
aad
lock
fdivrp
imull
mov
dec
scas
stos
call
sbb
loope
dec
or
scas
enter
lock
ret
fdivrs
pusha
jo
pop
pop
sarb
rolb
ret
inc
je
mov
neg
das
add
cwtl
hlt
cs
incl
test
jne
test
je
test
jne
mov
decb
dec
xchg
lods
mov
dec
dec
cmc
pop
pushl
cmpsb
lea
mov
xor
les
pop
push
inc
mov
sub
test
cmp
mov
iret
cmp
adc
jo
jo
mov
fnstenv
lret
call
adc
pop
enter
mov
mov
incb
lret
mov
mov
ljmp
movsb
cmp
pop
pop
rclb
hlt
ficomps
mov
arpl
jg
mov
nop
cmpsl
iret
cmp
push
fisubs
data16
rorb
jne
cli
jb
jns
test
add
cmp
jne
sbb
mov
jne
push
add
jne
outsb
fldln2
test
cmp
jns
jns
sbb
or
cmp
add
lret
nop
mov
xor
or
mov
and
inc
call
mov
cmp
or
sbb
sub
sub
je
xor
mov
push
ja
cmpb
jne
es
je
pop
xchg
xchg
mov
sti
outsl
mov
cs
mov
pop
sub
jbe
sbb
pop
fwait
loopne
sub
enter
pop
mov
mov
loop
jne
call
inc
inc
in
add
and
push
test
add
aas
lds
xchg
and
fisttpll
das
or
inc
pop
add
int3
imul
push
pusha
fsts
or
jbe
pop
xor
orb
dec
insl
js
ret
pop
adc
mov
add
cmp
outsl
ss
mov
and
popa
rcrb
lcall
push
mov
inc
cmpl
sbb
shrb
dec
fs
pop
inc
adc
add
cmovl
lret
aad
adc
or
pop
cmp
pop
mov
mov
rclb
es
ds
push
or
jge
adc
xorl
ret
cld
lods
cmp
je
stos
in
mov
sub
xchg
test
bnd
push
outsl
mov
mov
xor
sub
lods
rorb
int
xchg
es
bound
hlt
and
lods
jmp
iret
cmp
xor
sub
mov
fisubs
sub
mov
lret
xchg
outsb
pop
scas
call
jae
fildl
add
or
lret
roll
mov
and
stos
sbb
pop
sti
xchg
mov
sbb
mov
adc
cmp
data16
cmp
ja
add
imul
fistpl
fs
and
in
dec
jle
rolb
sbb
cmp
sbb
dec
cmpb
ret
je
int3
add
pop
xchg
ret
and
mov
xlat
cmp
cld
dec
rcll
pop
jne
lea
mov
ret
pop
les
jmp
mov
in
cmp
xchg
or
das
pop
ja
mov
ss
push
xchg
xor
mov
adc
dec
dec
fsubrs
rcr
jecxz
lea
push
sub
ret
inc
pusha
and
xchg
mov
xchg
xor
sbb
or
popf
imulb
jmp
push
pop
outsb
adc
sub
out
fdiv
xchg
data16
xchg
flds
jl
mov
push
ret
sbb
add
jg
loope
mov
aad
or
jmp
xor
inc
inc
shrl
cld
lods
and
jmp
mov
jl
testl
xlat
mov
inc
jp
call
pop
js
mov
addb
lret
add
jp
adc
dec
fdivl
or
jmp
jecxz
stos
mov
stc
fcomps
push
leave
loopne
dec
cmp
lods
cmp
ljmp
add
mov
push
inc
je
mov
or
je
mov
cmpsl
mov
adc
dec
jl
popf
lock
divl
pop
cmp
jbe
mov
shlb
xchg
adc
cmpb
sub
dec
cvtpi2ps
adc
push
loopne
mov
inc
iret
dec
lcall
clc
xchg
ret
xor
and
add
push
dec
sub
out
adc
daa
xchg
pop
cwtl
daa
xchg
sahf
add
sahf
xchg
out
pushf
add
in
testb
sub
adc
mov
cmpsb
mov
cmpsl
mov
andl
pop
sbb
lahf
fcomi
xor
sahf
ljmp
in
out
cwtl
pop
lods
jmp
sbb
add
enter
jmp
ljmp
xchg
push
mov
pextrw
je
in
push
add
divl
enter
and
pop
adc
mov
loopne
mov
test
sahf
das
cltd
test
push
jbe
fists
pop
mov
sub
sub
mov
jg
iret
push
or
xchg
shll
xor
das
cltd
xchg
sarb
pop
or
cmpsb
int
mov
cmp
ret
test
sub
cmp
and
sbb
dec
cld
lea
mov
jmp
push
mov
push
dec
dec
cmp
enter
jg
jmp
add
orl
rclb
mov
pop
movsl
mov
jle
push
hlt
insl
enter
loope
mov
mov
add
xor
dec
dec
adc
cmp
push
inc
or
xchg
mov
mov
stos
out
add
or
jne
xor
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
into
mov
and
inc
inc
int3
aam
adc
enter
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
aam
pop
loope
mov
cld
mov
sti
mov
mov
cs
mov
repnz
dec
popf
add
test
jne
lcall
fcoms
lock
stos
imul
add
loope
shrb
sahf
mov
add
and
push
sub
jge
jae
mov
mov
fsubrl
test
xchg
scas
subb
or
sti
add
pusha
decl
add
or
mov
add
sbb
enter
sbb
call
xor
movsl
cld
add
popf
mov
xor
lods
push
and
lahf
xchg
mov
dec
dec
inc
dec
inc
dec
lods
or
and
jp
xor
jge
cs
ret
divb
jo
ret
std
mov
aam
cmp
push
jg
sbb
sbb
dec
stos
add
outsb
mov
xor
stos
jmp
mov
jp
mov
loop
movlps
pop
pop
pop
popa
subb
dec
mov
jnp
ja
mov
fimuls
sbb
dec
ret
sub
sub
jbe
pop
jl
mov
mov
mov
movsb
insl
sbb
mov
cli
adc
mov
or
es
or
or
enter
repz
inc
test
dec
je
dec
jne
sbb
in
stos
xor
mov
call
add
je
inc
jne
fldcw
mov
ret
xchg
repnz
repz
jecxz
or
repnz
loop
adc
mov
add
lea
and
ja
add
push
push
push
cmp
divl
sbb
inc
jmp
or
xchg
mov
pop
inc
loop
ret
push
call
sbb
sub
sub
and
jbe
fcomi
adc
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
mov
jns
sub
sub
sub
fucomip
popl
call
adc
movsl
jne
inc
stos
test
xor
mov
and
pop
push
cltd
inc
adc
add
jns
sahf
mov
or
adc
mov
mov
sub
orl
adc
mov
mov
adc
int
in
scas
or
mov
and
mov
add
and
bnd
mov
loopne
sbb
loopne
mov
add
lret
mov
or
mov
shlb
ret
ljmp
jne
testw
jl
mov
cmpl
sbb
movb
mov
aas
inc
sub
adc
clc
adc
clc
out
fabs
push
ja
mov
pop
frndint
rcr
scas
fs
add
neg
jge
fwait
mov
testb
je
fidivl
clc
sbb
lea
mov
inc
sub
nop
shr
and
scas
jo
dec
out
push
cmp
xor
stos
insl
popa
pop
pusha
mov
lret
enter
or
out
outsl
or
cmpb
jb
movb
js
decb
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
adc
shr
mov
push
add
inc
int3
out
inc
out
sbb
add
daa
std
iret
push
push
rorl
je
add
add
neg
or
or
or
fisttps
das
sbb
adc
jl
mov
cmpsl
adcl
mov
or
sbb
popf
jb
pop
decb
or
mov
shl
cmp
mov
shll
sbb
mov
push
sub
cwtl
call
and
jne
dec
sub
cmp
ja
jae
and
inc
ljmp
sub
add
enter
cmpb
divl
sub
sub
pop
jmp
mov
sbb
mov
aaa
ret
jp
jae
dec
inc
ret
scas
mov
lock
sarl
loop
je
fldz
cmpsb
mov
ljmp
lods
xor
jne
inc
mov
daa
xorb
aaa
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
cwtl
jne
mov
and
fdivrl
mov
adc
aas
jmp
fistpl
cmp
pop
and
inc
js
hlt
test
insl
and
push
int
cmp
mov
test
or
fimull
cmpsb
adc
add
jmp
aaa
mov
aas
adc
es
push
inc
mov
rorb
push
cmp
aaa
add
or
outsl
rcl
insb
add
push
int3
push
cwtl
je
and
rolb
dec
pop
add
push
rolb
pop
add
and
and
or
leave
rclb
pop
sbb
aam
lock
test
fldt
fstpl
fwait
out
bound
ficoml
out
fistps
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
out
dec
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
enter
call
fistl
jle
mov
mov
or
sbb
mul
pop
adc
push
testb
jo
andl
test
sbb
mov
fisubrl
cmp
inc
fcom
dec
jg
dec
ret
add
adc
add
jp
fimull
mov
mov
mov
push
cmp
fdivl
and
call
imul
and
add
adc
and
sbbl
add
jp
adc
pop
fwait
jge
subl
adc
inc
dec
mov
sbb
pop
push
aam
dec
enter
addb
fwait
orl
push
jb
or
jb
add
insb
je
mov
push
pop
dec
fnsave
adc
mov
add
inc
dec
jne
sub
dec
mov
aas
cltd
stos
loopne
clc
idiv
imul
jns
push
in
mov
cli
add
repnz
ds
ds
add
test
mov
out
sti
jne
inc
inc
pusha
test
std
std
mov
lds
xchg
rcll
movsl
cmc
inc
pop
cmp
dec
add
sbb
inc
loope
sub
dec
in
test
jg
mov
sarb
ljmp
inc
pop
or
lods
inc
test
pop
pusha
mov
pop
inc
xchg
ret
in
mov
mov
add
jl
addl
mov
and
jl
repz
mov
cltd
mov
decw
jnp
insl
xor
sub
imul
fcoms
or
insl
movzww
add
inc
push
xchg
sbb
dec
pop
lock
push
shlb
adc
lret
add
dec
cmp
dec
lods
pop
mov
or
jp
sbb
fistps
sbb
clc
roll
pop
hlt
imul
push
add
loopne
scas
jbe
sbb
loope
mov
mov
cmp
cs
addr16
xchg
inc
xlat
nop
in
rcll
adc
sub
push
or
out
int3
and
sub
cli
sbb
push
push
cmp
js
inc
add
sbb
lret
jne
push
loop
push
xchg
and
add
mov
sub
cltd
js
rcrl
sub
fisubrl
pop
push
xchg
adc
fcomi
or
adc
add
and
js
pop
cs
pop
push
dec
test
push
in
push
loopne
push
jb
inc
adc
mov
add
in
add
adc
subb
mov
mov
adc
popf
xor
cmpsb
jle
or
and
inc
dec
cmp
je
mov
add
das
inc
inc
hlt
pop
sti
repnz
add
pushl
add
push
lea
idivl
out
or
xchg
repnz
movb
jo
inc
lcall
push
in
mov
ljmp
jecxz
pop
in
jns
fmull
mov
inc
jo
pop
int
repnz
adc
loope
out
repnz
mov
push
lret
push
sbb
or
jmp
and
mov
mov
lea
adc
popf
push
fldt
mov
mov
or
push
mov
xchg
mov
sbb
pop
add
fs
pop
andl
lods
add
sbb
clc
aam
jbe
add
sbb
lods
ljmp
dec
adc
push
cmp
data16
aam
ret
mov
insb
xor
ljmp
sub
sub
and
addr16
imul
push
enter
add
mov
mov
jmp
adc
js
or
inc
cmpb
jne
lahf
nop
mov
add
sub
les
or
vmwrite
pop
add
mulb
aam
mov
add
adc
and
sbb
cltd
cmp
lods
mov
stos
xchg
mov
pop
incl
in
add
shl
loope
mov
mov
push
jne
mov
pop
or
repnz
add
xchg
jae
pop
xchg
shlb
adc
test
int3
popf
sub
push
add
sub
jae
pop
mov
out
mov
jge
dec
add
stos
and
loop
outsl
loop
mov
fmulp
cmp
xchg
fadds
out
dec
jmp
adc
mov
or
divb
or
or
rorb
or
or
add
add
add
or
pop
dec
loope
outsl
or
jl
out
mov
dec
rcr
sahf
cmpsl
jge
jecxz
ret
sbb
and
lock
call
stos
sbb
mov
nop
or
jo
inc
mov
or
mov
pop
bound
das
popf
dec
push
cmp
push
out
adc
lods
adc
scas
nop
aam
dec
rolb
jo
pop
adc
jmp
sbb
cmpsb
idivl
add
sub
xchg
sub
jae
xor
mov
fmull
dec
add
jmp
out
orb
aad
push
cmp
lock
mov
or
xchg
dec
movsb
sub
in
mov
adc
sub
and
loopne
push
sahf
jbe
mov
push
lahf
adcl
adc
push
mov
jl
add
adc
and
cli
out
jae
je
sbb
pusha
sub
je
pop
je
jmp
sbb
icebp
es
jne
mov
jmp
xchg
sub
push
dec
in
mov
into
add
add
cmpsl
adc
inc
sahf
add
push
inc
ljmp
adc
or
inc
cmpsb
fnstsw
or
or
add
pushf
sbb
repz
popa
add
call
js
add
jb
lret
push
pop
dec
es
addb
pusha
jmp
daa
sub
jbe
jb
add
shlb
pop
add
mov
ja
add
and
add
hlt
loopne
adc
sbb
jmp
and
dec
imul
mov
xor
xchg
cmp
test
mov
inc
sub
add
shr
out
inc
iret
mov
pop
xor
xor
or
or
mov
lret
loopne
popf
cmpb
and
push
int
out
imul
cmp
mov
cmp
lea
cmp
mov
shll
pop
sub
fsubrs
mov
adc
stos
pop
push
cmp
cld
clc
xchg
xor
and
aam
add
sbb
scas
dec
das
push
dec
bound
adc
push
add
mov
and
fsubl
aam
test
sub
xchg
push
push
mov
mov
xchg
pop
mov
jo
and
inc
add
bound
cmp
jg
je
mov
inc
mov
mov
or
mov
lods
flds
mov
cwtl
push
pop
or
in
mov
add
mov
pop
or
push
pop
and
jl
pusha
jb
push
sbb
xchg
adc
ret
add
mov
test
mov
push
loop
in
mov
pop
xchg
mov
dec
dec
cmp
sbb
outsl
push
repz
inc
ret
push
xor
into
cmp
and
test
pop
lock
in
ret
push
mov
fucomi
add
cmp
adc
jge
xchg
xchg
addb
mov
mov
sub
pop
jl
mov
cli
aaa
push
inc
push
cmp
jne
sub
das
imul
sub
and
sub
je
dec
mov
and
sub
je
jmp
mov
jmp
push
push
push
jnp
outsb
and
out
clc
jle
out
in
rol
pmullw
xlat
hlt
sbb
mov
popa
shll
mov
jl
jnp
jl
pop
and
pop
mov
and
into
adc
mov
add
testl
add
or
pop
or
aad
push
jmp
sbb
or
shlb
fwait
cmp
or
jl
jne
cmp
jg
sbb
mov
push
xor
cltd
xor
sub
add
pop
fldcw
imul
add
dec
mov
add
mull
popf
insl
push
inc
push
popa
dec
cld
gs
xchg
ret
scas
fcomp
sub
sbb
mov
xor
sub
shrb
repz
jl
call
push
fiadds
dec
pusha
dec
fdiv
inc
sub
dec
addr16
add
xchg
dec
das
mov
fmull
test
sub
dec
pushf
jbe
adc
jge
mov
fidivrl
push
mov
or
rcrb
mov
fildll
cmp
push
rorl
fisubrl
das
mov
and
das
nop
add
or
add
in
fldenv
mov
sub
jb
and
xchg
jge
es
in
aas
scas
sub
lock
cmp
in
out
lock
out
in
cmpl
adc
dec
pop
les
jge
add
fnstenv
test
pusha
sub
push
mov
pop
data16
out
jnp
mov
jbe
cmpb
jle
and
fs
jne
adc
jne
or
cmpsb
ss
push
rorl
adc
mov
pop
popa
inc
cwtl
inc
dec
repnz
and
pushf
mov
clc
and
stc
ljmp
or
jl
and
ret
mov
pop
fsubl
fs
ds
adc
fcompl
jle
mov
outsl
cmp
das
push
jne
mov
dec
notb
daa
push
adc
mov
fs
jle
mov
cmp
jecxz
repz
xchg
dec
xchg
jno
xlat
fs
xlat
xor
repnz
xchg
fcmovb
fistl
decb
popa
in
mov
or
and
fwait
dec
jnp
test
inc
and
sub
and
push
and
clc
insl
cli
test
jp
sub
cli
lods
pop
jge
and
add
push
or
or
dec
mov
sbb
out
je
test
push
cmp
add
pop
jb
inc
xlat
add
sbb
sbb
and
test
xor
or
and
push
and
add
inc
ja
jne
jo
xchg
adc
pop
daa
shlb
adc
rcll
je
dec
cwtl
movsl
movsb
adc
adc
push
xor
mov
mov
mov
nop
xor
cmp
pushf
pop
add
mov
cmp
mov
jns
pop
scas
sbb
adc
adc
push
shl
dec
outsl
mov
add
lock
imul
push
adc
xor
out
ffree
cltd
mov
add
and
fcomps
or
pop
sbb
or
rcrl
fstl
rsqrtps
cmpsb
add
push
xlat
fimull
push
push
push
push
push
sbb
add
add
sarl
sti
sub
jb
or
xchg
push
out
xchg
test
fwait
ror
test
lea
push
jo
out
mov
shr
outsb
adc
mov
cmp
les
popa
cmpsb
fdivl
fprem
push
push
xorl
mov
loope
or
push
hlt
xor
lods
mov
jno
or
add
add
js
nop
xchg
dec
jo
ja
test
jnp
xchg
xor
pop
rcrb
repz
sub
mov
or
and
dec
lea
dec
push
mov
sub
pop
mov
nop
inc
lcall
mov
xchg
or
or
jne
rorl
dec
push
cld
xchg
push
in
popa
aaa
and
in
add
loope
fnstcw
dec
call
cmp
ret
in
or
and
out
sbb
sarb
lds
xchg
push
ljmp
sub
pop
je
xchg
cmp
push
and
sub
adc
adc
cmc
mov
dec
inc
and
mov
rorl
pusha
inc
xchg
sub
incl
pop
pop
out
mov
mov
xchg
shr
pusha
enter
out
in
xlat
add
pop
imul
mov
pop
mov
aam
fiaddl
ss
les
orl
add
mov
fldt
dec
push
rol
cmp
push
mov
adc
hlt
push
push
sub
fidivs
sub
pop
cmpl
sub
and
rcl
mov
mov
fcom
or
test
orb
pop
insl
lcall
jecxz
dec
mov
mov
ljmp
cmpsb
incb
sbb
je
mov
push
add
pop
sahf
mov
jnp
jle
test
mov
popa
lcall
loope
push
fistl
lock
add
jge
mov
rorb
sbb
xchg
adc
call
repz
xor
mov
out
call
add
jmp
mov
fwait
daa
cmp
adc
jmp
icebp
pop
je
jne
inc
push
push
jns
sbb
or
daa
or
mov
out
inc
push
shr
ret
xor
mov
mov
popl
add
sub
and
pusha
lea
icebp
ds
stc
insb
xchg
test
sub
push
test
cmpsb
in
out
pop
dec
or
loopne
pop
jne
movsl
subl
pusha
iret
pop
mov
aam
inc
pop
shlb
aaa
or
loope
and
push
les
jmp
sub
mov
mov
mov
inc
push
loope
test
repz
mov
dec
scas
sub
ret
sub
and
sub
mov
fwait
and
or
jo
inc
mov
cld
cmp
insl
push
in
inc
add
adc
xor
fbld
mov
sti
push
test
mov
cld
pop
faddp
jae
test
jg
in
hlt
push
inc
push
mov
rorb
jl
les
sahf
fiadds
mov
mov
pcmpgtd
test
push
or
pop
dec
sub
cld
push
and
int3
pop
mov
inc
das
xchg
loopne
hlt
test
mov
dec
pop
mov
dec
mov
addl
ret
js
inc
xor
dec
and
push
xchg
pop
fdivl
adc
test
cmp
pop
dec
adc
stos
pop
or
xor
rcr
add
adc
fistpl
sub
mov
adc
ljmp
cmpsl
cwtl
mov
inc
les
sbb
sti
test
or
ja
dec
adc
ja
add
or
fwait
test
stos
xchg
xchg
inc
repnz
inc
out
pop
clc
lock
lods
or
mov
sub
ret
sbb
or
pop
push
or
and
add
and
pop
sub
faddl
cmp
jg
cmp
mov
adc
jns
or
jmp
mov
push
clc
add
inc
jo
jbe
icebp
mov
pop
cwtl
decl
push
cli
loope
clc
mov
dec
imul
push
jb
cmpsb
adc
cld
jmp
push
sbb
mov
fsubrs
fs
notl
rolb
outsb
adc
enter
ret
test
or
nop
xchg
push
fstpl
fcomp
iret
push
pushf
sbb
xor
in
inc
call
or
jge
jb
pop
xor
push
in
push
loopne
in
jo
pop
push
dec
loopne
test
sub
dec
cmpsl
sbbb
push
mov
mov
add
shrb
leave
jo
mulb
and
test
adc
in
loope
add
jb
mov
pop
push
push
cmp
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
cmpsb
jge
add
mov
add
push
pop
or
or
lods
push
ss
leave
lock
jl
dec
xchg
mov
out
nop
movsl
cmp
mov
add
fsubr
clc
dec
dec
cld
pop
cld
cmpl
seto
mov
cmp
dec
mov
sbb
inc
or
add
add
cmpb
mov
and
in
adc
fs
decb
adc
add
mov
jnp
idivb
shlb
push
push
enter
mov
lods
aam
jno
lcall
imul
pop
outsb
mov
jl
imull
xchg
jge
mov
mov
movsb
test
add
leave
and
nop
adc
cmpb
jns
fcoml
adc
dec
aam
ret
lahf
adc
mov
adc
cld
std
mov
add
sub
push
sbb
and
fdivrs
and
leave
mov
adc
ret
repnz
mov
mov
inc
inc
push
lcall
shl
pop
das
push
push
jbe
nop
out
std
sbb
lock
sub
mov
fwait
xlat
dec
movsl
mov
and
dec
andb
test
or
add
mov
les
sub
fldl
outsl
mov
inc
enter
rcr
inc
stc
std
cmp
mov
out
ss
addr16
sbb
add
pop
mov
lds
pop
inc
sbb
adc
aaa
fwait
sbb
adc
jb
enter
sbb
ljmp
scas
jo
add
out
and
daa
cmp
xor
mov
adc
sbb
pusha
and
mov
iret
mov
or
sti
sub
mov
or
mov
dec
movsl
jp
adc
mov
out
adcb
add
int3
mov
out
cmp
jne
cmp
mov
das
call
das
lods
clc
adc
mov
pop
enter
dec
adc
and
jmp
ljmp
jo
mov
dec
call
sbb
cmp
dec
xor
adc
clc
add
mov
sub
xchg
fistpll
aas
loop
fwait
pop
push
stc
cmp
mov
loopne
bound
push
inc
andb
jb
inc
mov
dec
jmp
dec
test
jl
nop
xor
or
sub
and
sub
dec
or
inc
push
mov
jmp
mov
cmp
inc
cmp
fisttps
adc
insl
add
lea
iret
loopne
xor
test
pop
daa
fadd
pop
sub
es
lret
sub
adc
adc
sub
inc
mov
xor
test
jg
jmp
xchg
adc
xor
and
mov
ret
add
cmp
jl
and
cmp
lods
sub
xchg
or
jge
mov
dec
imul
jns
leave
and
cmp
hlt
jge
jl
jne
sbb
sbb
push
ret
mov
aaa
pop
in
xchg
jmp
loopne
sbb
aam
pop
xchg
cmp
add
dec
xchg
stc
push
add
rcrl
insb
jle
adc
push
faddl
setle
mov
bound
mov
add
aam
mov
add
lods
loop
jle
repz
or
or
add
mov
icebp
adc
mov
in
icebp
mov
adc
push
mov
fdivrs
xor
into
arpl
sub
sub
fiadds
pop
push
daa
push
out
insb
sbb
das
pop
and
push
xor
inc
cmp
dec
adc
dec
sbb
repnz
loopne
and
imul
ret
push
outsl
xor
je
js
std
popf
inc
aam
add
push
cs
sete
adc
jne
jge
stc
cmpsb
or
adc
cs
negl
adcl
push
add
mov
ljmp
data16
pop
push
or
test
and
xor
jmp
push
stos
mov
cmp
int3
je
negb
lret
push
je
cmp
jg
inc
nop
pop
sub
inc
sbb
pop
sbb
sub
xchg
iret
sub
insb
sub
inc
sub
lods
je
jae
stos
les
fidivs
sub
ficomps
pusha
test
mov
lea
inc
inc
adc
ret
inc
adc
pop
fildll
and
scas
push
fdivrs
test
movd
sub
andb
test
clc
out
je,pt
cmpb
dec
pop
dec
jb
sub
jp
lcall
jmp
push
rolb
ret
sub
inc
outsb
insl
lcall
add
sub
xchg
mov
jb
repnz
inc
add
jno
adc
inc
ret
sub
cmp
jbe
sbb
push
stos
fiaddl
ficoms
and
jbe
adc
inc
fcmovbe
das
and
push
adc
sbb
mov
xorl
dec
test
jns
jo
je
mov
inc
inc
jne
test
or
jg
jge
sbb
mov
push
sbb
xor
lcall
mov
fdivs
inc
mov
xchg
pop
pop
sbb
stos
sbb
lret
jne
insb
fbstp
dec
cmp
jge
pop
or
pop
jne
xor
or
pop
add
push
or
inc
pusha
dec
mov
add
add
push
ret
mov
adc
pop
imul
push
add
ficomps
dec
shr
mov
mov
aas
enter
rep
pop
cmpl
add
movlps
lods
jl
jmp
punpckhdq
data16
mov
push
sbb
cwtl
pop
push
test
aam
imul
add
cli
xchg
fiadds
stc
push
scas
hlt
add
xchg
ljmp
push
pop
iret
cmp
stos
fs
fcoml
cmpsb
in
cs
lock
mov
xchg
adc
pop
pop
cwtl
mov
pushf
mov
xor
int3
inc
call
sub
mov
mov
ja
cld
mov
push
or
daa
sbb
or
cs
fsubrl
mov
orl
mov
shr
mov
stc
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
pushf
mov
and
xor
pop
out
and
cli
test
and
sub
les
repnz
dec
xor
aas
ret
adc
repnz
xchg
enter
ds
adcb
push
hlt
mov
cmp
add
in
sub
xlat
jo
lock
rorb
stc
cmp
adc
popl
jmp
add
das
fs
iret
scas
insl
add
or
and
daa
add
mov
jo
push
loop
add
mov
jp
in
cmp
pop
push
cmp
out
dec
sub
mov
test
jne
or
add
testb
xchg
cld
jp
aas
adc
outsl
lock
mov
push
sub
adc
loope
dec
jmp
arpl
jnp
jns
mov
push
pop
cmpsl
mov
mov
lods
loop
roll
in
and
fs
in
pop
pop
pop
imul
mov
arpl
nop
mov
jmp
in
sbb
es
lret
mov
jg
xor
add
jge
jne
cmp
test
test
mov
icebp
sti
sub
fistps
push
push
push
outsb
imul
loope
inc
jb
sbb
mov
dec
test
push
decl
or
fs
gs
outsb
outsw
fsts
sarb
fldl
xor
rol
mov
ljmp
mov
or
or
add
inc
jmp
pop
orb
clc
adc
scas
xchg
adc
inc
add
mov
pushf
clc
adc
cmc
movsb
jne
int
ret
pop
sbb
fadd
xor
or
out
pop
xchg
adc
mov
paddw
add
test
jl
std
inc
xor
lea
cmpl
adc
roll
adc
outsb
mov
jmp
cmp
lea
push
enter
inc
ret
mov
pusha
add
lea
mov
nop
inc
cmp
ret
popf
sub
mov
add
xchg
cmp
xchg
or
xor
adc
xchg
or
neg
ret
and
pop
inc
dec
pop
addb
lret
and
push
inc
mov
cs
mov
addr16
or
hlt
cmpsl
leave
pop
inc
daa
paddsb
sub
mov
aaa
mov
hlt
cli
or
loop
cmp
fs
loopne
adc
jb
jecxz
add
inc
or
or
insb
sub
push
test
inc
in
mov
pop
push
push
dec
scas
and
xor
aad
and
call
inc
rolb
ficoms
dec
icebp
fdivrs
mov
repnz
inc
daa
loopne
add
bnd
int
test
sub
pop
add
push
push
sub
sbb
imul
divb
or
incb
imul
gs
jo
cli
scas
push
add
lock
inc
mov
xlat
mov
call
dec
ret
xchg
xor
aaa
cs
xor
call
xor
or
je
jmp
push
inc
cmp
jne
test
push
and
pop
sub
cmpb
loope
mov
stos
daa
inc
test
xchg
js
pusha
push
xor
clc
xor
and
inc
out
test
mov
fistpll
dec
and
xchg
add
sbb
sub
call
jne
push
loopne
fnstenv
mov
mov
movl
push
mov
inc
iret
js
cmp
fists
mov
daa
mov
rcl
jge
loop
or
or
stc
add
loope
mov
push
outsl
in
lea
aaa
xchg
cmp
rol
lds
std
lret
jg
arpl
sarb
inc
ds
push
ja
imul
inc
adc
mov
mov
aas
adc
jb
and
xor
out
sub
movsb
mov
pop
mov
mov
imul
pop
cwtl
mov
inc
push
cmp
enter
push
sbb
inc
mov
adc
dec
popa
mov
clc
cmp
dec
loope
mov
lret
push
mov
mov
orb
xchg
ret
xchg
je
and
or
cmp
sbb
mov
cmp
xchg
mov
insb
je
sahf
xor
mov
or
jge
sub
fnstsw
incl
xlat
jg
pusha
xor
or
decl
cmpl
jnp
popa
xchg
ds
jo
stc
push
lods
sbb
mov
or
jp
or
push
pop
fbld
sbb
inc
incl
mov
xchg
cmp
je
mov
popl
inc
jecxz
arpl
mov
pop
xor
push
add
hlt
int
jg
inc
mov
fisttpl
cmp
sbb
in
inc
xor
ror
cmp
or
adc
decl
pop
js
adc
or
push
scas
cltd
or
xchg
out
inc
aad
dec
repnz
hlt
cmp
or
mov
sub
cmp
mov
jne
pop
mov
xchg
jp
in
cs
cld
mov
dec
dec
or
push
mov
imul
and
pop
jo
mov
inc
inc
jmp
add
es
out
outsl
sbb
rep
je
and
loope
cwtl
fs
inc
adc
orl
sbb
adc
loope
sbb
add
mov
jns
jo
pop
jo
mov
xchg
push
dec
mov
iret
repz
nop
fcoms
dec
shl
cmp
js
push
shl
cmp
mov
or
push
inc
mov
add
out
mov
mov
push
fistps
and
dec
fidivs
jnp
push
pusha
push
jg
es
andb
fs
mov
xor
repz
mov
pop
ja
and
adc
call
out
das
scas
adc
or
cwtl
mov
sbb
mov
mov
int
out
adc
js
mov
jl
lahf
clc
cwtl
mov
hlt
lods
mov
iret
enter
in
push
mov
jns
in
loopne
hlt
mov
mov
fdivs
mov
out
in
jns
rclb
int3
pop
dec
cmpsb
mov
int3
mov
mov
shlb
cmp
mov
pop
mov
insb
repnz
sahf
xchg
mov
lock
push
daa
iret
lods
jb
mov
mov
cmp
fcomps
daa
iret
leave
sbb
je
sub
fmulp
cmp
enter
pop
loopne
jg
add
inc
into
and
lods
jle
leave
sbbb
or
dec
add
js
mov
sarl
in
repnz
or
fidivrs
movsl
xor
cmp
pop
daa
sbb
dec
jb
and
cmp
mov
gs
pop
sahf
sub
mov
pop
dec
pop
test
add
add
test
dec
xor
push
enter
cmp
js
add
inc
pop
sbb
adc
sub
nop
dec
push
xchg
sub
and
leave
sub
xor
rolb
lret
mov
jmp
outsb
sbb
adc
jbe
lret
inc
jmp
pop
dec
aam
clc
subb
imul
or
inc
sbb
jno
sti
xchg
lahf
xor
loopne
cmp
jecxz
jmp
xor
inc
push
mov
jne
adc
xchg
movsb
jl
in
enter
pop
and
outsb
mov
enter
sbb
fisubl
loope
add
dec
cmp
fsub
pop
cld
stc
jl
out
clc
clc
lea
test
ds
daa
cmpb
cmc
sbb
adc
mov
std
pusha
mov
xchg
cld
clc
xlat
lock
cwtl
imul
sbb
test
push
cld
add
sbb
cmp
xor
jecxz
cld
addps
pusha
nop
fistpll
std
mov
pop
and
mov
loopne
call
nop
sub
adc
std
push
or
rcrl
movsb
or
popf
mov
jmp
mov
nop
mov
movsb
lret
push
into
sub
and
add
in
sarl
jns
clc
adc
sbb
add
test
fists
mov
cmp
jb
mov
clc
fnstcw
pop
mov
dec
es
movsb
sub
xor
dec
sub
dec
es
fs
sbb
es
fs
and
cltd
fs
dec
sub
xchg
dec
es
xor
es
xor
cmp
sub
rorb
cmp
pushf
xchg
dec
sub
adc
xchg
dec
sahf
sti
mov
sub
xchg
dec
sahf
xchg
push
insb
cld
in
pop
fcompl
pop
push
std
or
and
test
ljmp
dec
cmp
push
jns
lret
out
popf
push
fsubs
dec
add
outsl
je
stc
repnz
fs
jne
dec
jne
inc
imul
adc
mov
xchg
inc
dec
jb
pop
outsl
jb
insl
jo
in
jg
inc
jb
insl
push
je
pop
push
cmp
enter
and
jns
mov
cmp
mov
inc
jae
pop
inc
jns
adc
xor
pop
outsl
or
add
pop
and
xchg
dec
add
fldl
xchg
xlat
inc
add
and
cmp
sbb
dec
bound
in
lret
fldcw
inc
adc
jp
add
mov
inc
daa
mov
jns
cmpsl
insl
dec
nop
sub
sbb
xor
int
sbb
xor
jnp
inc
push
fs
es
adc
in
mov
pusha
sub
sbb
in
testb
adc
or
xchg
add
ret
stc
out
xchg
inc
mov
and
inc
dec
mov
sbb
adc
add
shrl
es
jl
pop
and
jnp
loopne
adc
push
dec
mov
pop
inc
jb
lret
inc
add
inc
add
mov
adc
sub
fidivs
xchg
adc
push
or
cltd
add
rol
or
sbb
or
dec
outsl
mov
and
bound
iret
pop
pop
xchg
pop
je
jb
clc
sbbl
add
dec
insl
jo
nop
adc
and
xchg
and
stos
mov
jno
and
test
arpl
adcb
jb
stc
or
or
fimuls
arpl
dec
jle
mov
adc
xor
repnz
mov
dec
cld
adcl
cs
int3
add
insl
pop
xchg
mov
dec
sti
dec
dec
aas
in
in
add
in
movsb
mov
lret
in
adc
out
sti
add
mov
or
call
mov
call
das
es
test
xchg
adc
or
xchg
push
shll
or
pop
jb
shlb
gs
add
scas
loopne
xor
add
add
decb
inc
repnz
and
add
test
mov
add
or
cmp
jg
xor
sbb
xchg
cs
sub
xor
scas
sti
and
dec
je
xchg
jno
cltd
sbb
xchg
data16
xor
lahf
push
nop
es
sarb
add
and
jno
in
insb
mov
mov
add
xchg
out
dec
pop
clc
adc
mov
ficoms
xor
mov
and
lock
inc
sahf
lock
je
and
add
repnz
adc
sub
add
xchg
jnp
jae
loopne
in
xchg
loopne
pop
push
push
shl
add
sbb
add
enter
jge
or
xor
xor
cmpsb
push
enter
mov
shlb
jno
jns
xor
nop
add
mov
pop
fidivrs
enter
xchg
sub
in
inc
lock
push
sub
je
jbe
mov
aad
mov
adc
xchg
inc
push
enter
or
mov
in
repnz
or
les
xchg
aam
sbbb
add
scas
jo
push
roll
rcrl
stos
cmpl
dec
xchg
add
inc
adc
add
jae
repnz
in
pop
mov
and
pushf
xchg
add
pushf
xchg
cmp
jmp
push
mov
insl
adc
mov
lods
xchg
mov
decl
lret
call
or
inc
add
hlt
mov
add
andb
sub
pop
mov
je
xchg
pop
add
and
pop
imul
lock
addl
mov
clc
jmp
and
loopne
sub
xchg
mul
scas
sub
xor
lea
and
and
or
dec
and
clc
in
enter
cld
and
pop
push
xchg
mov
sub
inc
pop
dec
inc
pusha
cmpsl
xor
sbb
inc
rclb
cltd
sbb
push
ret
repz
dec
cmp
lds
push
call
mov
in
fdiv
cltd
mov
insl
xorb
push
push
lret
xchg
cld
jmp
adc
push
stos
jo
lods
insb
pushf
notb
or
cmp
jge
loopne
adc
shlb
or
jmp
jmp
div
and
fsubr
and
das
add
mov
push
das
sti
mov
add
jo
jmp
mov
sbbl
push
mov
daa
add
mov
je
aas
sahf
pop
enter
loopne
clc
xchg
nop
mov
mov
aaa
cmp
push
add
or
xchg
inc
pop
in
or
adc
nop
in
loopne
or
adc
stc
or
test
xchg
std
cmp
out
outsb
stc
push
push
jno
lds
jecxz
sub
jae
adc
pop
or
adc
mov
imul
cmp
sub
ret
outsl
cmp
daa
mov
inc
call
xchg
jmp
sbbb
fldt
and
adc
addl
popa
mov
sahf
data16
push
push
adc
call
loopne
and
or
or
pop
cmp
loopne
add
mov
les
cld
rcll
test
adc
dec
push
jmp
or
push
inc
inc
sbb
sub
xor
cmp
je
movsl
loopne
ss
jne
push
cmp
cmpsb
pop
inc
add
xor
rorl
or
or
int3
rcll
and
add
cmp
enter
fwait
mov
je
test
mov
cmc
mov
sbb
sbb
outsl
sbb
pop
xchg
es
nop
jns
insb
adc
push
mov
movzbl
and
and
inc
inc
add
add
adc
cld
push
test
jae
sti
inc
mov
lock
jnp
mov
mov
add
test
mov
fbld
call
and
adc
jmp
sub
sbb
mov
ret
ret
add
push
cmp
cltd
mov
or
movsb
dec
pop
or
and
add
push
jno
push
cmpsl
lcall
adc
sub
fstp
inc
cmp
dec
and
inc
push
push
xchg
adc
jmp
push
mov
and
add
leave
movsl
lds
inc
jae
enter
ret
adc
mov
add
jmp
pushf
movsb
mov
and
fisttps
cmp
adc
fcompl
addb
outsl
pop
rcll
pusha
sbb
filds
inc
and
cmp
ja
mov
ret
cmp
repz
adc
sub
lcall
popf
int3
push
jnp
fnsetpm(287
jae
daa
out
sbb
iret
cmp
add
subl
or
test
push
sbb
rcr
mov
les
mov
and
inc
xorl
sub
fistl
xor
test
stc
mov
xchg
pop
lock
test
pushl
add
xor
add
inc
imul
js
es
push
add
xor
xchg
dec
push
loopne
mov
and
loopne
movsbl
enter
fdivrs
sbb
aam
xor
sbbb
movsb
mov
clc
rcl
shlb
int3
cmp
jne
je
in
in
int
in
add
xorl
add
dec
je
jmp
fcom
mov
les
vextractps
je
loope
int3
and
push
in
imul
pop
rcrl
pop
dec
sbb
jns
out
cmpsb
leave
call
jnp
pop
sbb
pop
pop
xor
push
outsl
mov
ljmp
ret
or
mov
in
in
pop
flds
jno
mov
pop
fnsave
mov
jb
cmp
nop
ret
pusha
cmp
jae
cmp
dec
orl
fwait
test
aad
xorl
mov
fnstenv
and
mov
xchg
stos
cwtl
jno
inc
outsb
push
lock
adcl
ds
nop
pop
mov
fcoms
gs
push
mov
mov
iret
and
aaa
sbb
mov
cli
or
add
sbb
push
test
mov
add
inc
mov
sbb
pop
xchg
push
leave
std
sbb
add
popa
jno
adc
in
push
mov
add
and
in
and
cmc
nop
mov
jle
or
shl
inc
jb
sbb
push
xor
mov
aad
sbb
add
sbb
xor
inc
dec
fists
loopne
adc
in
loopne
sbb
xchg
adc
dec
sbb
and
test
inc
aas
lret
xchg
cmp
cmp
int
mov
in
adc
cmp
repz
mov
test
daa
stc
dec
clc
mov
dec
push
leave
out
push
adc
or
fcoms
fiadds
cmp
dec
cmp
popa
sbb
inc
fcomps
xor
inc
mov
lcall
aaa
fwait
es
xor
and
gs
adc
pop
mov
test
dec
fdivs
and
test
aam
mov
dec
dec
pop
pop
jne
or
add
xor
add
loopne
insb
push
and
es
or
sbb
ret
and
pop
out
into
jbe
in
pop
pop
pop
jns
mov
sbb
sub
pop
pop
inc
addl
and
xlat
test
and
in
inc
pusha
aaa
and
inc
cwtl
add
arpl
test
mov
pop
cmp
sbb
fwait
inc
xor
popa
test
test
lods
sub
cmp
dec
daa
pop
mov
popa
jb
xor
pushf
jno
lock
test
jae
and
xchg
popf
xchg
jb
dec
cwtl
and
or
nop
push
nop
jmp
mov
aad
mov
dec
cmp
sbb
movsl
sub
pushf
in
nop
aas
mov
fidivl
pop
sub
mov
jo
hlt
add
inc
sub
pop
and
sbb
add
push
enter
push
mov
adc
ficomps
inc
cmpsb
gs
mov
or
or
loop
push
pxor
out
pop
xchg
xor
fstpl
fwait
scas
fimull
mov
pop
push
add
lea
cmp
lret
cmc
or
inc
jnp
inc
mov
and
add
pop
xor
aas
enter
jo
jb
sub
ficoms
mov
aas
jmp
adcb
inc
insl
jo
jns
sub
es
dec
jne
pop
push
nop
scas
add
push
add
ret
dec
and
pop
dec
stc
adc
inc
push
ds
dec
jle
insb
add
inc
outsl
jne
xchg
fs
ljmp
cmp
jmp
mov
pusha
dec
addr16
xchg
test
rolb
adc
arpl
jbe
ficompl
das
aas
inc
cmp
shl
arpl
aas
and
inc
adc
adc
push
fcmovbe
cmp
pop
xchg
xor
ret
xorb
aad
into
shlb
jae
movsl
mov
idiv
icebp
dec
mov
andb
sti
and
ss
mov
sub
push
dec
leave
lods
jbe
aas
inc
sti
inc
or
sbb
cwtl
insb
das
add
test
push
inc
pop
jmp
push
add
cmp
cmp
ret
movsl
lea
jne
and
lcall
aam
popa
pusha
test
add
sub
push
xchg
clc
dec
dec
mov
and
or
sub
mov
mov
pop
xor
test
pop
inc
outsb
jns
and
push
push
gs
push
and
test
ret
add
andb
add
hlt
cli
xor
add
cmp
inc
jecxz
adc
scas
mov
push
jle
nop
imul
sbb
inc
push
icebp
fisttpl
xorl
sbb
add
cmp
imul
pushl
out
aam
cmp
pusha
jae
test
ja
add
push
cmp
loope
or
outsb
xor
dec
cli
sbb
movsb
add
ss
push
xchg
xlat
pop
push
cmpsb
clc
sbb
pop
lds
ja
xchg
cmp
jnp
mov
pop
adc
into
xchg
add
add
or
pop
pop
dec
mov
inc
lea
fsubrl
dec
inc
test
mov
add
cmpb
mov
insb
push
incb
mov
call
mov
add
push
inc
mov
jg
orl
bound
idiv
out
daa
xor
xor
add
pop
jl
adc
push
orl
aam
repz
orb
mov
xchg
mov
lods
jle
das
in
dec
icebp
or
aam
mov
cmp
mov
ljmp
in
xchg
fdivrs
cmp
inc
idiv
adc
sti
call
add
aaa
adc
enter
or
gs
and
loopne
cmp
adc
or
xor
ljmp
cmp
push
sub
in
mov
mov
mov
jno
loope
ja
inc
mov
push
fnstenv
jns
imul
pop
sub
inc
ja
sub
leave
lock
stc
dec
leave
mov
leave
sub
sub
sbb
xchg
jl
inc
xor
dec
mov
mov
xor
sahf
lock
sbb
adc
hlt
jl
adc
jle
or
and
sbb
inc
inc
dec
jne
cltd
cmp
inc
push
xor
cmp
adcb
dec
lods
pop
add
jle
push
stc
mov
sub
adc
xor
or
call
dec
jecxz
jno
cmp
jp
push
sbb
lock
sub
fisubrl
insl
in
les
scas
bswap
leave
leave
leave
nop
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
cwtl
cltd
lcall
popf
sahf
lahf
leave
leave
leave
leave
addb
leave
test
leave
leave
mov
leave
leave
mov
mov
add
das
inc
push
add
and
push
add
imul
add
jge
pop
add
lea
jl
cld
inc
les
mov
add
mov
xchg
add
sbb
test
jne
xchg
jmp
push
mov
dec
xor
cmp
jle
mov
imul
dec
adc
hlt
push
adc
jge
scas
mov
jmp
cmp
sub
movsb
add
mov
test
hlt
push
lods
mov
rorl
gs
mov
sbbl
cmpsb
fisttpl
mov
int3
jo
clc
jl
or
sbb
icebp
call
pop
sbb
je
mov
and
sub
out
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
xchg
movsl
or
out
jne
mov
push
int
sub
sti
imul
or
stos
mov
push
dec
inc
push
or
sbb
pop
sbb
lcall
or
bndstx
jmp
and
lds
mov
mov
mov
cmpb
je
std
outsl
outsl
xor
dec
and
decb
ja
pop
sbb
or
jmp
or
inc
inc
imul
adc
pop
movsb
push
add
add
ret
or
movsbl
and
or
jle
add
mov
jo
aaa
iret
xchg
daa
add
fisttpl
cmp
sahf
jne
mov
mov
cmpb
ja
jb
jl
sahf
das
add
add
call
out
mov
sbb
mov
and
inc
outsl
cli
jmp
dec
stc
mov
outsb
fisttps
adc
por
adc
or
jmp
movsl
mov
sub
sahf
push
add
cld
loope
inc
imul
xchg
bound
and
out
sbb
int
jle
jb
sbb
cmp
pop
mov
xlat
or
rol
ljmp
sub
cmp
fimull
mov
fsubr
and
gs
les
or
adc
or
adc
dec
testl
mov
xchg
add
inc
mov
sidtl
xor
add
and
jae
cmc
and
xor
cld
icebp
sbb
fistps
pop
mov
inc
push
push
or
incb
pop
adc
sbb
mov
adc
idivb
pop
xor
loope
sbb
sub
push
sub
dec
or
call
inc
fsubs
out
dec
hlt
icebp
and
jmp
clts
fmuls
and
push
loop
jne
and
add
fdivrp
scas
hlt
inc
imul
cmp
or
push
loopne
rorb
idivl
cld
xchg
cmp
int
imul
pop
adcl
ret
test
outsl
sbb
mov
xor
xchg
pop
inc
jnp
inc
xor
inc
xlat
lcall
xchg
push
lods
call
iret
fcmovu
insl
or
sbb
fsubl
sub
in
sub
add
or
pushw
or
cmp
mulb
fmuls
sub
pop
lret
add
mov
mov
jge
dec
and
pop
jae
or
or
push
rcrb
xchg
inc
clc
fnstenv
and
xchg
pop
out
sub
ret
adc
push
aam
test
fistpll
outsl
xor
sub
shl
push
mov
cmp
pop
xor
xor
push
add
jmp
sbb
sub
sbb
adc
push
or
push
mov
pop
push
mov
add
mov
jp
enter
jl
jno
pushl
int3
fildl
sbb
adc
roll
adc
fs
or
rcrb
inc
pop
testl
cmpsl
xchg
dec
ret
xchg
mov
stc
fs
jbe
fnstcw
or
and
jmp
cmp
and
xlat
sbb
aaa
cmc
xchg
in
mov
std
inc
mov
pop
cwtl
push
call
adc
mov
xor
mov
out
xor
pop
mov
xor
pop
jb
aad
xor
int3
sbb
or
arpl
ljmp
or
cmp
gs
lods
mov
sbb
data16
sbb
push
xor
inc
pusha
gs
inc
insb
popa
add
jae
sbb
imul
jl
add
test
fnstcw
adc
dec
outsl
dec
bound
mov
dec
outsb
insb
jns
data16
mov
fwait
mov
mov
ss
push
mov
cmp
or
jb
or
cmpsl
or
dec
inc
lock
insb
gs
xchg
cmp
pop
jle
push
or
rol
lahf
out
hlt
add
dec
movsb
dec
test
mov
add
nop
adc
out
aaa
outsl
cmp
xchg
or
or
dec
gs
rclb
jae
mov
outsb
add
jne
rcr
nop
shll
ret
in
mov
adc
inc
jbe
dec
or
push
fmuls
lds
in
ds
add
insb
loop
pop
das
xor
mov
insl
wrmsr
aaa
lret
test
and
dec
inc
sub
mov
and
nop
imul
and
mov
inc
inc
jae
or
outsb
enter
cmp
inc
cmp
lret
adc
jb
pushf
cmp
aaa
or
testb
pop
mov
scas
es
nop
hlt
pop
cmp
jle
jae
dec
cmp
popf
add
inc
and
inc
frstor
nop
test
mov
push
adc
sarl
add
mov
cmp
inc
ficoms
je
scas
inc
jle
jb
inc
imul
mov
addb
push
cmp
adc
mov
adc
mov
add
pmaxsw
jo
xor
mov
cmp
ret
push
and
add
nop
jb
or
outsl
sbb
pop
int3
adc
xor
sub
mov
cmp
cmp
les
popa
in
jne
inc
push
arpl
js
shrb
add
loop
and
mov
fisttpl
sub
fldcw
call
or
cmp
push
push
add
icebp
imul
push
adc
lock
add
sub
inc
sbb
in
xor
jae
test
xchg
jmp
pop
and
js
test
je
xchg
or
hlt
mov
adc
int3
lea
push
movsl
cmp
test
jnp
mov
sbb
cmp
push
and
dec
ds
fildll
jecxz
nop
inc
pop
imul
xchg
push
iret
xor
adc
nop
fucom
pop
xor
cmp
shll
pop
push
push
aas
test
inc
mov
out
sub
outsb
push
cmp
test
stos
in
or
repnz
insb
cwtl
jp
ficoml
cmpsl
push
xorb
sub
sub
cwtl
dec
shl
push
lock
outsl
shr
sbb
outsb
and
xor
cmp
cmp
xor
or
roll
aaa
sbb
cld
sti
stos
inc
ds
push
adcl
lea
push
pusha
adc
and
fidivs
pop
mov
xchg
push
pushf
movsl
add
push
sbb
dec
aas
cmpsl
lea
add
push
adc
sbb
pop
xor
aas
jns
add
orl
sahf
fs
shll
add
xor
pushf
jae
push
rclb
sahf
cmpsb
fdivrs
pop
sbb
sbb
inc
pushf
sbb
or
cli
inc
jae
adc
test
out
jbe
in
daa
imul
les
cld
jle
jg
adcb
ja
or
jbe
push
and
mov
addr16
ja
mov
adc
out
sub
jl
sbb
ss
mov
jns
loopne
hlt
cmpb
add
popa
xor
inc
jp
xor
xor
shr
cli
adc
leave
push
or
sub
cwtl
dec
inc
inc
and
sahf
mov
xor
outsb
adc
sahf
jbe
dec
addb
ss
xor
outsl
in
mov
sbb
sbb
fadds
fdivl
xchg
xor
xchg
enter
rorb
or
inc
mov
insb
xchg
hlt
mov
nop
mov
mov
idivl
lcall
inc
popa
aad
mov
jmp
nop
movb
lea
cmp
rcl
mov
push
push
das
fsubr
rolb
push
aaa
push
lock
inc
daa
pusha
lds
and
xchg
push
call
mov
push
dec
inc
push
cltd
add
arpl
dec
int3
insb
sahf
je
sub
adc
pop
in
das
inc
sub
inc
aas
int3
xor
mov
add
or
xchg
mov
sub
into
pop
and
pop
ret
push
lahf
xchg
inc
mov
pop
mov
add
cltd
movsl
xchg
xchg
inc
cmp
adc
movsb
adc
shll
das
push
mov
inc
enter
rclb
inc
jnp
mov
hlt
xchg
lahf
repz
xorb
test
mov
aaa
repnz
xchg
or
dec
push
adcb
cmpsl
or
icebp
pop
adc
mov
pop
pusha
cltd
inc
ljmp
cltd
inc
inc
jne
dec
dec
fs
addr16
or
cmp
adc
cmp
add
nop
and
rcrb
push
add
xor
jo
in
in
jns
mull
in
out
mov
jns
dec
pop
imul
sub
icebp
jns
mov
jmp
xchg
cs
mov
adc
int3
dec
add
loope
sarl
push
shrb
lods
adc
jbe
jns
out
push
and
cmp
les
rcll
dec
je
aas
or
mov
pop
xchg
push
outsb
mov
stos
in
xchg
sub
cltd
loope
mov
sbb
aam
rolb
jp
jg
fisttps
mov
fisubs
es
cmp
fsubs
cmp
push
jo
nop
dec
mov
lcall
dec
and
xlat
adc
mov
adc
dec
pop
mov
dec
pop
inc
or
shlb
jns
jl
roll
rorl
js
fidivl
icebp
roll
sbb
dec
mov
inc
nop
ds
mov
inc
test
das
pop
call
bnd
mov
rorb
mov
xchg
fmuls
int
pop
fsubr
mov
das
mov
loopne
nop
add
aam
dec
iret
repz
or
dec
sub
jg
add
xchg
pop
inc
int
dec
addb
jns
jp
test
out
ss
mov
adc
and
add
jnp
out
push
aam
add
les
xor
leave
xchg
addr16
fldl
inc
add
pop
pop
dec
fldenv
fidivl
fmuls
sub
jl
out
imul
fs
jo
loopne
mov
ljmp
clc
push
push
push
push
push
push
stc
mov
push
call
mov
clc
sub
iret
repz
cmpsl
cld
add
push
adc
aam
iret
sarl
hlt
fdivrl
add
rolb
sbb
sbb
mov
sub
arpl
lcall
xor
push
decb
add
cmp
mov
mov
incl
add
cmc
add
testb
push
dec
adc
push
fs
cmpsl
stc
cmp
les
subl
push
inc
push
arpl
inc
test
stos
dec
cli
imul
dec
xchg
xchg
in
dec
push
push
push
push
mov
pushf
dec
and
mov
fisubrs
push
loopne
in
addb
shl
repz
test
add
out
pushl
add
pop
sub
rorb
mov
jp
push
dec
dec
fs
test
mov
add
jb
out
xor
or
pop
pop
push
lretw
sbb
in
dec
pop
push
lea
mov
insl
gs
xlat
rcrb
xor
dec
jl
cmp
jne
in
mov
xor
je
sbbb
dec
sbb
dec
and
mov
mov
jb
jne
fsubrl
out
jl
or
push
cmp
mov
pushf
push
enter
push
add
add
in
push
mov
dec
ret
ja
sbb
bound
ss
xchg
cmp
test
and
and
or
in
and
jmp
dec
pop
and
lret
mov
incl
pop
or
pop
adc
lock
add
je
sub
sub
inc
fsubl
test
and
and
jmp
sbb
adc
jno
jbe
add
out
adc
dec
fistps
stc
mov
stos
inc
ret
sbb
sub
scas
loopne
pop
xchg
add
push
inc
xlat
and
mov
or
pusha
pop
pop
stc
add
xor
add
jo
or
adc
stos
cmc
pop
lods
sub
push
push
or
jl
mov
xor
shlb
xbegin
xor
sub
dec
jne
pop
or
xor
push
mulb
xlat
rorl
or
sbb
pushw
or
and
rolb
inc
jle
or
push
inc
int3
sbb
int
dec
ja
mov
in
mov
and
inc
ds
inc
inc
hlt
mov
lods
in
in
inc
pop
je
adc
push
adc
sbb
sbb
add
xchg
out
sbb
mov
leave
xor
add
add
or
inc
sub
rcrb
pop
imul
adc
jl
push
test
sbb
sub
mov
cmp
mov
decl
cmpl
pusha
sbb
inc
in
sbb
xchg
aad
nop
cmp
pop
imul
pop
jle
shll
outsb
je
dec
cmp
mov
fnsave
mov
dec
jne
rolb
dec
jne
rolb
mov
xor
adc
add
and
or
pop
mov
dec
ret
std
les
jecxz
xchg
daa
sbb
mov
add
inc
or
pusha
or
cmpb
dec
add
inc
ret
fcmovnbe
movb
test
mov
or
sbb
pop
into
add
push
sbb
loopne
pop
fsubr
xor
cwtl
jmp
popa
dec
lret
cmpsl
test
aam
call
inc
mov
and
xchg
out
cmp
inc
dec
jne
xor
xchg
mov
loop
js
sub
ljmp
scas
mov
es
into
sub
loopne
clc
and
mov
xlat
add
inc
cmp
loope
hlt
push
or
push
jecxz
cmpsb
dec
mov
mov
cs
aaa
sbb
pusha
call
cwtl
rcl
add
ret
sbb
inc
pusha
adc
add
in
inc
aaa
or
dec
push
jl
inc
fidivs
push
push
in
or
hlt
cmp
cmp
je
and
dec
dec
cmp
inc
fldt
add
es
stc
fcompl
pop
push
dec
lock
fbstp
faddl
jmp
decl
jne
lods
or
adc
jbe
inc
mov
fistpll
leave
lock
adc
enter
sbb
push
xor
mov
out
cltd
out
mov
test
ret
mov
fnstsw
sbbb
pop
push
int
rorb
shrl
mov
punpcklbw
pop
xor
xchg
inc
mov
in
js
add
sti
sbb
pop
pop
dec
lahf
lret
mov
test
outsl
hlt
mov
add
test
add
pop
sbb
add
popa
pop
mov
or
jae
lods
adc
adc
fadds
mov
xchg
cmp
xor
cmpb
add
adcb
jecxz
or
mov
dec
jae
je
push
scas
imul
or
test
test
xlat
add
imul
arpl
jb
stos
or
mov
cmp
and
cmpsl
scas
pop
movsb
scas
ss
imul
dec
dec
mov
hlt
jmp
push
test
arpl
mov
sub
mov
dec
sub
add
jg
pop
cmp
imul
adc
jbe
adc
ret
xor
inc
jge
je
les
xbegin
ret
dec
sub
pop
sbb
xor
dec
in
in
imul
sbb
sbb
es
sbb
cmp
push
rcll
in
and
or
lds
mov
jb
inc
sbbb
or
and
bound
and
fwait
in
into
mov
or
sbbb
dec
pop
in
mov
inc
mov
xorl
adc
dec
inc
or
or
rorl
jl
jae
addr16
icebp
and
or
or
rolb
add
sub
mov
pop
outsb
dec
mov
mov
xchg
xlat
and
cld
cmp
xchg
pop
pop
popa
and
mov
or
rclb
fbld
leave
xchg
out
pop
mov
pop
divl
push
in
xor
sub
lea
xchg
rolb
aam
lahf
push
cmp
cld
mov
mov
cli
loope
and
inc
add
mov
jne
sbb
sub
mov
or
out
fmull
int3
add
jp
les
add
fcoml
daa
mov
push
sbb
adc
addb
ja
jmp
rclb
ret
divl
mov
test
xor
pop
dec
call
dec
jl
mov
push
and
subl
jecxz
xchg
andb
jcxz
daa
mov
add
mov
arpl
jge
push
nop
pop
xor
hlt
or
mov
inc
xchg
dec
pop
sub
dec
mov
push
sub
push
xor
adc
dec
cmp
inc
push
es
mov
ret
cmpl
cmpsb
add
cwtl
dec
nop
outsl
jl
and
adcb
arpl
in
or
inc
cltd
sbb
insl
xchg
or
out
add
sbb
pop
adcb
mov
xor
push
outsb
lock
test
mov
dec
cs
jnp
mov
push
arpl
movsb
into
xchg
dec
sahf
fwait
shlb
les
xor
cmp
pop
pop
mov
clc
je
lret
aam
jbe
sub
mov
xchg
or
addl
and
dec
rorb
fldenv
or
arpl
jno
sub
ja
xchg
popa
movsl
sbb
and
movsb
es
test
cmp
mov
testb
dec
push
imul
push
dec
mov
push
lods
lea
add
jp
das
fmull
aas
cltd
sub
andb
inc
push
pop
xchg
push
and
xchg
and
lods
das
cmc
sub
incl
or
insl
mov
mov
lahf
nop
jnp
inc
dec
add
adc
xor
mov
add
push
test
sbb
add
lods
stos
mov
mov
addr16
sbb
add
lea
or
movsb
inc
lods
and
ret
and
jmp
lret
popf
jo
mov
dec
cmp
clc
pop
mov
jns
shlb
sarl
test
test
jns
insl
mov
dec
jmp
out
push
inc
inc
xchg
loope
push
outsl
push
mov
push
adc
xchg
sbb
sbb
add
stc
add
adc
dec
out
gs
imul
mov
imul
jle
test
stos
add
dec
or
add
adc
jne
or
movsl
negb
jne
leave
mov
or
in
stc
std
jle
cmp
push
xor
loop
adc
pop
dec
mov
jecxz
adc
pop
dec
lea
divl
imul
out
jl
call
and
mov
jmp
push
fwait
lahf
sahf
popf
push
or
pop
and
mov
sahf
push
jns
xor
lcall
jl
jbe
into
inc
adc
push
jg
or
pop
sbbl
je
push
rolb
xor
xchg
pop
and
add
insb
mov
mov
es
mov
popa
lods
and
xor
movsb
fs
lcall
mulb
mov
pop
dec
dec
mov
sub
jg
dec
mov
add
adc
add
push
sysret
xlat
movsl
xor
adc
inc
mull
add
dec
add
inc
and
pop
sbb
nop
popf
pop
inc
mov
dec
push
js
leave
in
and
in
push
data16
outsb
mov
add
mov
and
movsl
in
cmp
pop
sti
fucompp
loopne
js
lds
mov
iret
push
adc
inc
jne
in
push
dec
add
lds
adc
adc
inc
out
dec
sbb
inc
and
xchg
pop
and
aaa
adc
and
add
fdivrs
dec
outsb
adc
filds
pop
lods
mov
pop
add
lret
popa
loop
cmp
xchg
insb
rorl
push
xchg
movsl
add
test
jge
push
mov
mov
hlt
rcrb
clc
add
in
sbb
add
sbb
call
mov
inc
loope
je
andl
pushf
scas
pop
rcrl
add
loop
xor
addb
aad
push
mov
jg
pusha
mov
pop
cmp
jae
cli
in
or
or
je
stos
adc
btr
cmp
jl
jne
jbe
adc
jmp
pop
mov
dec
ret
daa
push
jno
sbb
enter
ljmp
xor
lock
cli
pop
ja
and
bt
jb
shl
std
test
ret
ret
cmpsb
icebp
mov
cmp
jne
inc
decl
jne
les
bound
push
or
push
notb
ret
and
jmp
in
and
push
sbb
xor
adc
add
inc
popa
in
lock
jbe
add
mov
cltd
lods
sets
arpl
imul
outsb
imul
xor
repnz
test
mov
mov
inc
cs
sbb
inc
push
incb
push
sarl
pushl
js
or
ret
jne
push
sub
adc
les
xchg
dec
add
and
call
or
dec
test
xchg
pushf
sbb
lahf
fmuls
push
scas
ficomps
or
imul
aas
or
inc
mov
sbb
clc
adc
inc
rcrb
cmp
sub
add
popa
incl
sbb
je
addr16
push
mov
and
jmp
pop
push
adc
jl
inc
and
test
lds
insl
enter
stos
adc
push
mov
rclb
xchg
jl
push
adcb
xorl
adc
mov
push
mov
jo
movsb
jg
xor
cmpl
out
pop
push
add
sbb
push
aam
pop
push
add
inc
and
or
ret
mov
nop
xchg
sbb
adc
and
adc
ja
xchg
cmp
in
in
cltd
jnp
add
aas
push
mov
imul
call
mov
dec
push
movsb
jmp
in
in
adc
dec
ja
insl
in
sbb
cli
iret
push
and
pop
push
adc
addl
cmp
je
jge
add
aam
flds
insb
jle
pop
call
stos
rcrb
pop
jbe
xchg
jbe
jo
into
jne
adc
icebp
push
loope
pop
das
mov
cld
sahf
cmp
mov
mov
push
out
aaa
fbstp
mov
nop
negb
mov
lea
sub
cmp
pop
sbb
jp
cmp
xchg
ljmp
xchg
test
aas
push
jle
and
movntq
pop
jge
pusha
ljmpw
mov
and
cld
pop
rorl
outsb
ja
jo
pop
scas
mov
sub
inc
and
and
dec
testl
adc
pop
hlt
jnp
push
mov
outsl
xchg
cli
push
add
add
dec
inc
es
mov
addr16
or
int
cmp
jnp
call
repnz
rcrl
pop
pop
mov
push
mov
dec
pop
lock
iret
sub
fidivl
mov
xor
xchg
mov
das
popf
rolb
clc
out
cmp
cmp
add
cmc
cmp
test
clc
inc
pusha
xorl
push
mov
inc
sub
pop
adc
push
clc
cwtl
mov
and
inc
ss
clc
pop
imul
sbb
loope
push
adc
js
or
cmpsb
sub
rcrb
cmovl
int3
xor
xchg
mov
xchg
push
shlb
mov
sbb
xor
js
add
data16
xchg
sub
inc
pop
xorl
sbb
pop
xor
inc
sti
inc
jmp
xor
jb
cmp
jne
sbb
adc
fs
xchg
cmp
push
insb
loope
adc
push
sbb
inc
dec
jne
and
int
push
pop
jb
hlt
adc
add
dec
mov
aad
outsl
adc
mov
imul
adc
fldcw
aaa
sbb
call
lods
stos
in
enter
jmp
out
iret
pop
push
mov
or
push
fldenv
imul
or
shrl
mov
mov
bound
cs
jb
xor
mov
stos
push
or
iret
pop
ret
adc
or
and
sbb
daa
pop
data16
pop
adc
rcll
mov
push
scas
repnz
adc
std
cmp
xchg
push
cmp
pop
std
ja
and
and
pusha
mov
sub
shrb
sub
jno
jns
sbb
jne
enter
dec
push
cmpl
int
je
dec
dec
xchg
add
dec
push
daa
outsb
mov
mov
inc
inc
jb
js
dec
imul
ret
movsl
dec
cld
je
lods
xchg
inc
insb
adc
iret
in
cmp
or
aam
sahf
cs
cs
cs
push
add
roll
jne
sbb
test
xchg
xchg
lock
out
sahf
popl
mov
mov
mov
sbb
mov
cmc
dec
clc
imul
pop
out
pushf
and
mov
inc
sbb
sub
xor
adc
adcb
push
arpl
icebp
adc
addb
mov
adc
sbb
and
mov
pop
rcrl
xlat
or
popa
leave
cmc
jbe
mov
cmpsl
movsl
jo
cmp
daa
xchg
dec
xor
cld
lock
xchg
mov
in
push
in
pop
adc
pop
or
adc
in
pop
cld
jbe
in
adc
push
pusha
push
nop
daa
adc
add
add
cmp
jo
test
mov
rcrb
pop
iret
mov
leave
and
xchg
ja
rolb
push
pop
lock
sub
dec
shll
dec
ret
fcoms
xchg
push
sub
cld
push
push
mov
sub
xor
dec
xchg
and
lds
fsubs
test
imul
mov
movsb
repnz
js
jle
sub
and
push
push
or
sub
ret
xchg
es
add
jbe
mov
mov
adc
lock
and
or
jns
js
sbb
imul
clc
pop
add
loopne
inc
std
jb
mov
inc
mov
jns
test
dec
xchg
pushf
and
dec
mov
outsl
daa
mov
nop
push
jb
test
popf
push
fsub
and
adc
fadd
and
in
jp
shll
pop
push
or
js
mov
sbb
in
aas
jo
test
mov
fisubrl
inc
lods
fcmovb
fsubrs
and
rolb
dec
sub
lock
in
leave
les
lcall
outsb
loopne
pusha
adc
cld
cld
mov
pusha
rcrl
sub
fdivrs
mov
clc
inc
clc
in
jl
stc
test
hlt
jp
stos
adc
gs
mov
jb
fcomip
cld
mov
cmc
jnp
and
dec
xor
scas
pop
cmc
jl
lods
jne
jecxz
in
loope
leave
ret
push
add
jo
or
in
sbb
mov
cmp
jl
sbb
or
js
mov
lock
xor
or
xor
fsubrl
jno
jl
adc
call
fs
and
sub
addr16
xchg
mov
daa
inc
xor
rcll
repz
push
mov
jmp
cld
outsl
clc
test
mov
ud0
and
xchg
faddp
outsl
jle
or
mov
jecxz
sbb
inc
push
test
outsb
adc
dec
aam
out
adc
or
or
stc
adc
es
xchg
xchg
ret
sub
xchg
push
inc
loop
xor
mov
adcb
test
dec
push
xchg
xchg
fwait
jge
dec
inc
shlb
sbb
add
cmp
fisubl
sub
lock
xor
jge
sub
into
xor
lahf
jo
aas
pop
push
add
sub
daa
jle
movsl
fwait
inc
inc
cmp
pop
or
pop
in
jle
pop
adc
jle
cmp
pop
dec
push
adc
fs
xlat
hlt
cmp
test
dec
movsb
jmp
fcmovne
sbb
jnp
xlat
addr16
data16
sbb
jg
inc
pop
daa
dec
mov
cmpsl
xor
push
mov
pop
xchg
cmp
or
and
sub
xchg
insl
mov
int
dec
push
aad
cmpsl
fstpt
mov
push
leave
add
cmpb
pop
and
adc
mov
sbb
mov
sub
sub
sbb
mov
sub
jne
mov
adc
pop
aaa
pop
jno
push
inc
mov
or
push
adc
push
test
and
rorl
push
pop
xlat
or
xchg
mov
or
orb
movsb
add
loopne
jb
ss
int
fwait
in
push
xchg
and
mov
xor
mov
test
push
ljmp
mov
repz
in
xor
xchg
sub
stos
add
stos
add
into
jns
rclb
cmp
add
push
add
andl
mov
test
in
jge
or
call
push
in
imul
int
cltd
ret
call
inc
enter
shrl
cmp
jne
stos
push
aaa
call
fsubrs
scas
xchg
adc
cmp
adc
mov
stc
je
inc
pop
inc
sbb
xchg
ja
sub
or
es
mov
ret
lods
rcl
movsb
fistpl
rcl
pop
test
imul
hlt
cmpsb
cmp
scas
in
test
sub
loop
sbb
push
pop
add
pop
add
repz
nop
and
ss
mul
scas
sbb
and
loopne
mov
jne
pop
add
jmp
jg
jmp
mov
jge
cmp
mov
and
pop
je
aaa
insl
scas
fs
push
xchg
pop
cmp
popa
or
lret
loopne
or
cwtl
dec
je
add
shrb
mov
or
jecxz
add
test
enter
test
div
inc
add
in
outsb
xlat
push
mov
or
mov
add
lods
and
scas
fists
in
int3
or
adc
shr
push
das
lods
xor
add
push
into
dec
or
adc
data16
add
push
pop
push
orb
cwtl
rcrl
repnz
lcall
es
int
adc
push
jg
add
push
jmp
dec
repnz
pusha
or
repnz
add
or
dec
clc
sub
wrmsr
inc
loop
lods
xor
arpl
call
sbb
lods
sub
imull
dec
mov
dec
cmp
jle
xchg
xchg
dec
cmpb
add
push
pusha
loop
das
adcb
call
sbb
stos
adc
add
add
call
sbb
inc
pop
dec
rorb
jbe
shlb
mov
mov
loop
mov
add
data16
repnz
imul
sub
xor
xor
sbb
xor
push
je
jne
test
fisttpl
ret
push
or
adc
setbe
arpl
push
in
in
dec
xchg
les
jbe
add
lock
mov
jbe
flds
fldl
rorb
sub
mov
mov
push
mov
rorl
adc
dec
sbb
pop
xor
cwtl
or
mov
rcrb
cmp
dec
mov
dec
xchg
sbb
mov
cmp
dec
mov
mov
pop
or
jmp
mov
or
push
orb
adc
inc
adc
and
lea
jmp
cld
imul
cmpb
stos
repz
cmp
mov
test
popf
mov
into
pop
movb
aaa
aaa
mov
adc
ret
push
mov
mov
push
mov
cs
outsl
mov
add
mov
push
lcall
je
mov
rcl
push
lret
dec
push
sbb
pop
pop
push
jo
xchg
add
mov
je
push
pushw
inc
push
rcrb
sbb
add
pusha
rorl
and
loopne
popa
mov
lea
push
bt
nop
cmp
push
and
scas
jno
in
insb
sbb
subb
nop
cltd
ja
sub
mov
dec
dec
jno
mov
inc
sub
jmp
jne
add
rorl
scas
jne
into
pop
push
sahf
dec
xchg
or
and
mov
cmpl
or
jmp
adc
shrb
jne
mov
cmp
add
sbb
dec
inc
jge
sbb
jle
cltd
arpl
mov
in
mov
mov
cmp
daa
loop
xor
mov
and
adc
pop
inc
push
or
nop
or
pop
jnp
and
in
adc
inc
or
shll
lock
adc
and
cmp
xor
mov
fsubs
cwtl
xchg
xchg
pop
popf
sub
add
push
cmp
dec
ret
loopne
jp
cwtl
dec
jge
lahf
cmpb
pop
or
stos
add
aaa
dec
mov
sbb
aad
cmp
sbb
loop
and
popa
pop
dec
pusha
mov
inc
imul
fisubrs
mov
sub
into
or
inc
pop
and
insb
lret
das
mov
fmuls
fistl
out
xchg
cmpl
cmpl
xorb
adc
negb
add
inc
les
mov
dec
and
adc
shl
cmpsl
or
mov
and
mov
lahf
scas
movsb
pop
jmp
mov
push
mov
lahf
js
test
lea
pushf
sbb
test
xor
xor
fsubs
sbbb
push
lret
repnz
daa
push
or
cmp
jecxz
rcrb
jle
pop
cwtl
cltd
int3
ja
add
dec
or
or
ljmp
cmp
out
lret
push
xor
lret
lret
adc
inc
push
adcl
sub
add
fiadds
rcrb
and
cmp
repnz
icebp
mov
das
push
cmp
enter
outsl
adc
mov
aad
leave
test
sbb
popf
sbb
imul
lahf
jge
pop
adc
xchg
or
and
sti
add
add
jbe
or
sbb
adc
adc
or
test
cld
repnz
cmp
add
push
or
jbe
add
sub
jmp
pop
push
cwtl
lret
stc
jg
adc
hlt
fs
push
mov
mov
mov
movsl
call
addb
bound
movsb
jo
ret
add
dec
leave
test
movsb
push
cmp
fs
test
rcll
and
sbb
popa
in
xchg
lahf
mov
mov
and
sbb
insl
dec
add
and
adc
xlat
loopne
or
or
scas
xchg
pusha
mov
mov
in
test
jg
rorb
xor
pusha
enter
adc
fistpl
mov
or
push
cmp
mov
test
add
icebp
jmp
jmp
xchg
or
hlt
mov
adc
dec
mov
sub
jecxz
push
inc
xor
push
mov
lods
inc
push
add
dec
sbb
lea
jecxz
in
add
add
in
or
cmp
mov
movsl
add
xchg
xlat
xchg
test
jnp
in
sarl
enter
and
adc
faddl
jb
insl
and
xchg
insl
mov
cmp
mov
sub
or
adc
icebp
loop
and
or
jnp
test
xor
out
nop
mov
subb
ficoms
cmp
call
icebp
dec
add
into
ret
adc
jae
jle
test
pop
test
clc
or
dec
or
mov
add
add
sbb
sub
test
scas
or
fwait
testl
ret
xchg
call
in
test
sbb
das
push
test
dec
add
cmpsl
loopne
sub
or
inc
dec
sub
cwtl
mov
inc
loop
andb
pop
cmpsl
shlb
test
mov
xchg
cmpsl
insl
add
xchg
jns
test
clc
dec
or
in
mov
pop
repnz
movsl
stos
cmp
jge
data16
gs
jecxz
roll
sub
adc
push
stos
adc
and
push
popf
xchg
test
loopne
adc
jmp
outsl
push
adc
lret
nop
psraw
mov
ss
push
imul
test
cmp
jne
mov
xor
aaa
mov
ljmp
xor
pop
sub
loopne
dec
sub
jnp
push
addb
adc
je
pop
add
pop
dec
das
pop
or
mov
aad
stos
dec
mov
test
mov
out
loope
addb
add
xor
xlat
sbb
xchg
pop
cmp
mov
pop
inc
nop
outsl
lea
bound
test
jno
mov
outsl
aaa
jno
mov
sbb
pop
sub
and
pop
push
and
fstp
add
and
mov
mov
add
popf
lret
int
loopne
and
jge
xor
jne
jp
test
in
out
enter
or
mov
cltd
mov
rclb
out
or
inc
sub
cmpsb
in
jmp
inc
inc
jmp
leave
or
pop
inc
sub
or
inc
rolb
mov
lock
in
cwtl
fldl
sub
xchg
mov
push
inc
mov
cmp
cli
mov
lahf
cmp
aas
mov
divb
pusha
inc
jnp
xchg
js
popa
sbb
adc
mov
or
dec
jecxz
dec
pop
pusha
pop
pop
adc
jae
push
ficoml
or
adc
sbb
xor
sbbl
add
ficoml
out
sbbb
push
sub
jg
adc
or
dec
sub
push
aad
jle
pop
jo
imul
xchg
jl
mov
in
lcall
mov
hlt
ret
out
sbb
out
into
or
mov
jo
adc
xchg
cmpsb
adc
or
movsb
xchg
add
inc
sti
stos
ja
fimuls
lret
ljmp
inc
and
int
aaa
add
inc
sbb
jp
add
test
add
lret
mov
push
loope
push
ds
inc
pop
push
sbb
addb
fs
xorl
movb
inc
pop
jecxz
mov
cmp
mov
sahf
iret
and
mov
push
sbb
pushf
lods
adc
outsl
push
inc
sbb
popa
adc
aas
or
mov
jmp
sarb
cmpb
add
pop
shrb
hlt
dec
out
dec
loope
xchg
lret
adc
repnz
mov
cld
adcb
inc
imull
mov
ds
fs
mov
enter
aam
or
into
or
pop
inc
rorl
stc
cs
test
and
jl
aam
shrb
push
enter
shlb
and
sti
sub
jge
shrb
mov
popa
xchg
push
add
xor
movsb
enter
adc
arpl
mov
xchg
xor
ja
repnz
js
bound
clc
mov
mov
mov
add
dec
inc
ljmp
sbb
mov
sub
cmp
inc
sbb
mov
sbb
mov
testb
adc
or
pop
inc
jmp
and
lock
sarl
and
jmp
push
cmp
jl
sbbl
leave
test
xchg
sub
pop
cs
mov
mov
loopne
jg
fldenv
nop
cld
sbb
or
cmp
lods
in
lahf
mov
and
out
cmp
sbb
xchg
fisttpl
fs
cs
das
or
js
adc
fisubl
sub
push
hlt
daa
adc
shlb
adc
and
mov
mov
push
sbb
out
cmp
orb
inc
arpl
sub
add
and
add
xlat
push
mov
lret
xchg
adc
inc
out
mov
push
loop
insb
push
mov
das
sbb
push
pop
mov
sub
mov
pop
add
push
inc
fs
add
mov
dec
insb
sbb
mov
mov
push
adc
pop
test
ret
xchg
pop
add
mov
aaa
inc
mov
jge
mov
cmp
decb
sbb
icebp
ret
ja
xchg
cmp
or
push
xor
mov
adc
scas
xchg
shrb
jle
incl
loopne
aaa
dec
jl
test
out
jmp
nop
add
fsubrp
cwtl
jbe
mov
xchg
pusha
add
scas
fs
jne
add
push
movb
or
les
mov
gs
xchg
pop
into
inc
cltd
push
loopne
hlt
aaa
pop
punpcklbw
loopne
jns
cmp
add
lret
cmp
jg
addr16
fidivs
add
movsb
push
inc
and
or
pushf
xchg
xor
scas
hlt
add
sbb
int
sub
stos
lods
xor
sbb
xchg
loopne
adc
cmp
cwtl
das
sbb
xchg
mov
mov
push
lea
push
mov
cld
dec
faddl
add
cmpb
test
sahf
push
cmp
das
add
fdivrs
xchg
xchg
mov
daa
adc
mov
in
push
push
pop
jecxz
push
xchg
add
sub
push
dec
cmp
fwait
ja
ljmp
fsubs
inc
pop
aaa
stos
lcall
and
lret
hlt
mov
or
push
add
push
push
or
jne
repnz
mov
pop
cmp
and
mov
inc
push
sti
mov
outsl
push
subl
pop
ret
jmp
push
out
repz
movsl
das
loop
movups
mov
cs
int
push
mov
push
js
inc
jle
or
jo
jnp
sbb
dec
insb
js
aad
stos
jle
adc
js
addr16
imul
icebp
rcl
out
in
sbb
xor
popa
and
in
pop
inc
leave
jmp
out
mov
and
xchg
fs
ds
xchg
cmp
mov
jne
jb
xchg
adc
adc
movsb
sarb
into
xor
xlat
mov
inc
xor
pop
or
jp
loopne
inc
ret
call
fadds
dec
mov
xor
mov
cmpsb
xlat
decl
push
push
xchg
loop
out
idivl
xor
loopne
shlb
nop
cld
cmp
cmp
pop
jbe
mov
pop
call
sub
or
dec
mov
ja
pop
into
sub
sub
out
sub
xlat
out
in
fimull
fsubrp
add
nop
nop
inc
movsb
jle
mov
jmp
mov
dec
adc
mov
mov
rcrb
outsb
fsts
shrl
sub
sbb
mov
xchg
push
pop
orb
cld
mov
rcrl
pop
les
test
xlat
fcomps
add
daa
xor
orb
mov
dec
rcl
cmp
push
cmp
sub
jno
sub
cmpsl
inc
arpl
dec
adc
jb
or
adc
imul
sar
fadds
pop
lahf
mov
pop
leave
inc
movl
addr16
inc
mov
inc
das
test
lds
push
jmp
jge
test
scas
movsb
sub
jae
mov
and
mov
xchg
movsb
js
je
cmp
push
mov
in
test
subb
xor
adc
xchg
mov
dec
lahf
out
sbb
jo
aad
unpcklps
fcomps
add
in
fs
lret
hlt
jge
cwtl
dec
xchg
pop
jg
enter
mov
inc
mov
sahf
add
lods
jl
inc
jp
mov
imul
imul
add
mov
cld
dec
mov
sub
inc
cmpb
pop
test
cmp
imul
sbb
or
fs
xor
not
and
aaa
int3
ret
or
mull
add
xchg
xor
sbb
aaa
cmp
pushf
cltd
pop
lret
dec
pop
out
popf
cltd
and
sbb
mov
jae
sub
cmp
and
mov
add
test
xorl
jb
clc
pusha
and
int
xchg
jo
pop
push
push
imulb
fdivl
xchg
push
push
jno
push
hlt
stos
pop
pusha
push
mov
dec
sbb
adc
sahf
insl
mov
imulb
or
xchg
and
push
das
and
daa
mov
popa
mov
in
fsubrs
clc
push
add
aaa
pop
les
mov
dec
fstl
cmp
mov
dec
aam
adc
mov
pusha
xor
cmp
in
mov
inc
pop
lods
es
test
sub
adc
rolb
adc
mov
pop
sub
shl
push
nop/reserved
xor
inc
jno
sub
in
stc
in
xor
pop
fcmovb
les
notl
sub
and
mov
adc
stc
sub
push
fcmovbe
je
adc
fadds
cmpl
not
cli
mov
and
or
test
cmp
or
dec
andl
inc
scas
xchg
adc
mov
add
loopne
mov
pop
lahf
jne
fwait
dec
pop
push
sbb
sbb
mov
mov
add
xchg
sbb
aam
sub
dec
lods
xor
in
ficompl
mov
std
push
xor
jecxz
adc
out
sahf
sbb
and
stc
sbb
fldt
inc
jo
out
xor
dec
xor
mov
aaa
out
xor
mov
mov
push
xchg
adcl
xor
push
ret
adc
mov
jo
out
daa
out
jns
mov
mov
mov
pop
fst
test
sbb
inc
shll
dec
das
test
sub
cld
lahf
cmp
xchg
cld
pop
inc
sahf
ret
and
cld
pop
pop
cwtl
mov
or
out
daa
mov
inc
cmp
pop
dec
push
and
imul
mov
xor
sub
mov
rcr
cmp
imul
jge
popa
sub
xor
pushf
mov
or
sti
or
dec
clc
adc
sub
es
aam
or
and
push
movsb
pop
mov
das
hlt
inc
gs
mov
sbb
outsb
lock
or
mov
sub
insb
cwtl
lods
adc
and
add
or
and
and
flds
adc
push
sbb
ret
xor
sbb
sub
and
roll
adc
and
daa
mov
or
out
repnz
mov
or
outsb
loopne
lret
add
mov
pop
neg
jnp
jecxz
icebp
dec
push
or
nop
mov
xorb
mov
fcmovnbe
sub
or
cmp
mov
iret
and
das
sbb
dec
icebp
mov
iret
adc
push
pop
test
xor
or
xchg
jle
sub
add
scas
mov
and
ss
adc
pop
sarl
mov
pop
push
xor
mov
dec
mov
xchg
push
dec
adc
xchg
pop
inc
cmpsb
cmp
cli
in
gs
cltd
and
push
ret
addr16
adc
push
cmp
dec
loopne
add
mov
jne
add
and
testb
mov
repz
cmp
and
in
mov
add
inc
fildll
int3
rolb
and
test
in
xchg
push
and
arpl
in
pop
int
xchg
fdivrl
push
or
es
jmp
push
inc
jns
mov
inc
js
or
sbb
xchg
lds
rclb
hlt
adc
or
lret
rorb
sub
fs
repnz
xchg
and
mov
jbe
cmpsl
ret
popa
mov
je
push
pop
daa
dec
and
or
hlt
jle
das
dec
dec
or
mov
push
fisttpll
sbb
cmp
or
dec
jl
movsl
in
mov
les
popa
jge
mulb
arpl
add
or
cmp
mov
xorb
push
lahf
xchg
inc
shld
stos
dec
mov
rclb
and
cmp
and
cmp
ret
aad
pop
pop
testl
jle
in
int
xor
sub
add
jl
bound
jl
pusha
inc
mov
shll
mov
ret
incb
cmp
repz
xchg
int
mov
lea
pusha
daa
push
or
ret
pop
dec
popf
frstor
imul
call
mov
cmp
and
add
pop
mov
sahf
nop
sbb
call
ficompl
jge
lcall
sarb
xor
push
and
sbb
xchg
shrb
imul
push
jno
hlt
and
adc
call
or
jle
in
lods
std
or
push
add
inc
test
mov
sti
mov
adc
clc
shr
arpl
mov
sub
xchg
cmp
orl
pop
mov
mov
sub
outsl
jmp
xor
popl
add
sub
sbb
xor
add
dec
push
jmp
mov
adc
xchg
pop
mov
mov
popl
mov
inc
arpl
stos
daa
sub
pop
push
pop
dec
ss
cmc
cmp
and
scas
push
rorl
cmpsb
shlb
stos
leave
arpl
xor
or
cmpsb
add
xchg
add
jo
mov
in
push
mov
or
mov
pushf
and
and
arpl
movsb
cmp
jns
cmp
clc
fdivl
in
scas
and
sub
sub
mov
pop
xlat
sub
push
sbb
fidivs
mov
es
fcomps
imul
add
fwait
mov
sub
push
and
push
cmp
xchg
xchg
out
sbb
sub
les
push
iret
xchg
xor
mov
pop
adc
add
jns
push
push
aas
jmp
mov
xchg
mov
aam
insl
adc
adc
sbb
and
bound
or
cmc
fcmovb
push
jmp
inc
jge,pt
mov
enter
call
ret
lret
testl
push
push
daa
out
add
fmuls
rcl
imul
in
mov
scas
fcompl
hlt
popa
xchg
out
mov
addb
cmp
xchg
sub
dec
cmp
cld
je
push
sub
jmp
fimuls
cmp
jge
pop
cmc
sbb
pop
mov
fdivl
outsb
mov
mov
jmp
sub
lar
rclb
stc
push
int3
mov
mov
js
fmull
stc
sbb
popf
push
mov
fwait
sbb
dec
inc
shlb
add
mov
and
cmpsl
je
shrb
cmp
xor
adc
dec
cmp
xor
xor
movsb
sbb
fldcw
hlt
bound
push
enter
mov
pop
lret
adc
ror
xor
cmp
xchg
outsl
and
or
add
add
pop
pushl
jns
and
in
cmp
orl
jae
mov
fistps
outsb
loopne
mov
xchg
ljmp
fidivs
sub
mov
and
insl
daa
pop
loopne
dec
pop
fwait
clc
cmp
in
pop
push
ret
mov
cltd
jmp
push
xchg
inc
pop
sub
lahf
cmp
inc
arpl
clc
pop
or
es
ffree
inc
jbe
adc
movsb
nop
pop
inc
mov
cs
push
add
fists
cmp
ja
bts
jmp
push
sub
lock
ljmp
or
arpl
sarb
add
aam
or
xchg
jmp
sbb
push
push
into
test
mov
jne
dec
pushf
add
add
lahf
mov
add
push
adc
dec
shlb
cld
add
loope
stc
jle
mov
icebp
icebp
push
mov
jns
hlt
sar
add
add
and
rol
push
push
inc
lods
xchg
xchg
push
pop
xor
mov
adc
je
jmp
push
clc
pop
adc
filds
pushf
fdivrl
mov
push
mov
xchg
cmpsb
pop
das
test
inc
add
flds
cmp
shl
ss
lds
cmpsl
and
adc
pushl
ret
lock
sbbb
ljmp
push
icebp
adc
add
xchg
add
add
out
adc
add
sub
and
scas
ror
rorb
daa
shll
push
add
leave
dec
leave
pusha
repz
rcl
xchg
sub
mov
inc
add
xchg
les
mov
sub
ja
sahf
out
xlat
inc
jg
test
nop
push
mov
aaa
jns
ds
call
mov
sbb
cmp
cmp
cmp
jmp
inc
mov
pop
adc
xor
mov
pushf
inc
jb
roll
and
mov
shll
cmpsb
xchg
mov
push
xor
imul
jmp
mov
test
cmp
mov
cmp
rorl
mov
inc
fs
push
ffree
inc
push
xchg
jecxz
and
in
adc
xchg
scas
or
addr16
push
sub
mov
out
sub
bound
adc
fs
ret
ret
ret
jmp
adc
cmp
xchg
les
xchg
add
xchg
jp
das
mov
or
or
sti
jae
cli
or
sahf
mov
or
pop
push
lods
push
insb
xor
call
cmp
or
js
aas
popf
push
mov
fisubl
test
cmp
insb
lods
sbb
js
cmp
lret
sbb
bound
outsl
mov
push
mov
mov
inc
dec
call
pop
loop
dec
adc
and
into
push
xchg
mov
test
cmp
jp
inc
sbb
sbb
and
xchg
lret
push
sub
push
push
rolb
and
loope
xorl
rorb
jle
faddl
cmp
adc
sub
mov
and
ss
jg
jmp
mov
orl
in
enter
or
leave
lock
jmp
cmp
or
inc
call
rolb
fmull
or
xchg
jb
inc
mov
add
pop
inc
jbe
in
mov
cmp
cmpsl
enter
daa
pop
sbb
ret
lock
inc
lea
addl
mov
mov
bound
inc
cwtl
das
inc
add
xchg
push
adc
xchg
sbb
push
nop
out
enter
lock
in
popa
or
hlt
sub
test
das
xor
fisttps
addr16
inc
pop
sub
aas
sbb
xor
inc
inc
xchg
enter
lret
mov
ret
dec
lcall
dec
cmpsb
push
loope
push
ret
clc
dec
sahf
idivl
je
loope
mov
pop
cs
dec
push
pusha
inc
sub
iret
mov
cmp
or
std
sbb
fisubrl
cmp
int3
mov
xor
movsb
mov
add
cld
mov
jae
xor
mov
int3
pop
mov
sbb
aaa
cmp
imul
insl
sub
clc
imul
movsb
hlt
pushf
jmp
daa
aas
sbb
sub
inc
push
lea
incl
sub
cld
jmp
das
int3
or
frstor
in
and
dec
inc
js
adc
fidivs
les
dec
or
dec
pop
adc
sbb
sub
adc
add
inc
or
inc
adc
cmp
pop
xor
addr16
addr16
jge
sub
or
xorb
mov
sysret
push
shr
add
jg
sbb
and
stos
icebp
cmp
sub
ds
jl
adc
jg
mov
push
add
xor
xor
add
add
sub
and
iret
sub
cwtl
je
and
or
mov
lods
or
xchg
data16
push
jo
xor
loope
add
fadds
test
dec
ds
add
mov
and
xor
fnstcw
pop
and
push
mov
xchg
daa
dec
inc
push
pop
xor
insb
je
out
cmp
fdivr
mov
or
lret
sub
xchg
cltd
addr16
call
fiadds
push
rcrl
arpl
popa
movb
pop
dec
mov
insl
ljmp
or
pop
push
fists
xor
cmp
je
sbb
add
in
pushf
fs
andl
daa
jns
sbb
inc
cltd
iret
push
push
loopne
rcll
jp
mov
popl
push
inc
bound
or
cwtl
mov
addb
or
mov
push
adc
push
jns
push
fmulp
xchg
mov
ljmp
daa
outsl
mov
lret
mov
push
jo
pop
lods
and
mov
orl
mov
sbb
mov
stos
negl
sbb
dec
jl
xlat
jg
add
iret
lods
hlt
mov
adc
mov
pop
daa
jg
cmpb
or
xchg
iret
add
hlt
aam
ljmp
adc
adc
dec
mov
int3
pusha
jne
jo
adc
std
cli
sbb
pop
lods
or
je
push
sbb
pushf
inc
lds
shlb
lock
or
lock
adc
mov
adc
add
mov
or
cmp
loopne
push
shlb
lock
and
repnz
and
inc
addr16
pusha
nop
ret
icebp
sahf
add
add
shr
mov
ljmp
lds
int3
fisubrs
mov
loopne
adc
les
xchg
push
rol
pop
pop
je
cwtl
mov
jo
std
divl
cmpsb
hlt
pop
shrb
inc
mov
inc
cmp
add
mov
dec
pop
or
add
daa
stos
push
je
sbb
aas
xor
cmp
cmp
push
shll
mov
sbb
data16
or
cmp
shl
sahf
jne
inc
sbb
adc
xor
jns
push
mov
iret
jo
je
xchg
or
push
pop
pop
stos
xchg
mov
xchg
push
cmp
sbb
jbe
adc
jne
jno
sub
test
push
cmp
pop
xchg
or
sbb
push
jecxz
sbb
sti
mov
fwait
sbb
lahf
adc
jle
jmp
xor
cmpb
push
or
or
adc
push
dec
cwtl
inc
or
addr16
xchg
aam
outsl
aam
or
dec
mov
mov
inc
daa
jne
scas
aad
lds
ret
enter
js
data16
adc
loopne
jle
inc
add
int3
or
dec
xor
fstl
push
ret
andb
loopne
gs
das
cmp
pusha
push
popf
jno
or
jl
mov
jmp
add
jl
jo
adc
mov
or
inc
push
sub
fiaddl
inc
bound
test
push
fmuls
rcrb
popf
add
call
add
inc
push
add
cs
or
lds
fcmovne
jmp
add
neg
cmp
adc
addr16
addr16
aam
imul
xchg
mov
inc
setne
sbb
sub
and
fmuls
clc
movsb
mov
or
movsb
mov
xorb
dec
rolb
mov
outsl
data16
sub
add
xchg
rorb
xlat
fsubs
movsl
mov
andb
push
fidivs
call
enter
jb
aaa
push
hlt
push
or
jp
int
shll
xor
push
orb
stos
inc
pusha
gs
add
mov
xorl
cltd
mov
pop
hlt
add
movsl
add
pop
pushf
jle
in
xchg
push
lods
das
add
sbb
je
or
adc
insl
adc
mov
ficompl
mov
orl
mov
cmpsl
sbb
mov
jp
sub
sbb
int3
add
sbb
sbb
push
adc
adc
pop
add
adc
rorb
push
mov
inc
lcall
adc
cmc
outsl
xor
dec
sbb
xchg
jmp
loop
and
das
sbb
lods
or
and
pop
pop
out
ret
fisttps
or
adcl
push
imul
insb
pop
adc
aas
jmp
xor
xor
clc
rcrb
call
and
adc
jecxz
sbb
cmp
jne
ret
aam
fnstcw
xor
dec
lcall
cmp
add
dec
jmp
inc
loopne
shrb
or
ds
insb
jl
adc
and
and
sbb
adc
sbb
adc
scas
mov
xchg
btr
movsb
adc
xor
adc
push
cmpsb
or
or
pop
mov
or
je
jb
jb
adc
cmp
pop
push
push
movsl
inc
dec
call
pop
add
insl
cmc
sahf
aam
out
push
push
or
pop
test
mov
js
test
int3
xchg
sarl
inc
push
ss
xchg
hlt
adc
incb
int3
inc
sbb
mov
mov
decl
je
outsl
push
nop
dec
shlb
out
add
pop
pop
xor
aaa
inc
jns
mov
inc
daa
pop
leave
sub
mov
mov
xchg
dec
call
dec
nop
push
movntps
inc
or
sub
mov
pop
add
xor
lret
pop
sbb
icebp
and
jne
nop
pop
inc
shll
enter
adc
dec
rol
pop
push
cmpb
dec
jg
fsts
mov
mov
sbb
mov
xor
inc
leave
adc
inc
xor
xchg
push
movsl
sbb
imul
int3
mov
decl
je
std
dec
mov
or
jg
hlt
outsb
and
or
loopne
stos
mov
or
push
iret
lret
or
movsb
push
popf
and
mov
sbb
pop
cmpsl
push
jbe
cmpxchg
sti
and
mov
and
sub
adc
inc
mov
xchg
or
cmp
int3
fiaddl
sbb
and
push
sbb
cmp
jg
push
add
xlat
js
jne
jmp
gs
add
out
fwait
inc
cmp
cmp
dec
sbb
or
sbb
jecxz
sub
sti
xor
jmp
test
and
inc
add
enter
dec
jne
mov
popa
loopne
add
mov
xor
aam
push
out
add
add
out
push
mov
ja
loopne
pop
cld
repz
test
inc
testl
cmp
and
dec
call
andl
adc
push
fwait
pop
pop
int3
pop
js
lcall
loop
jne
das
adc
or
rcrl
mov
push
es
daa
insb
out
or
testb
fistpll
mov
pop
sub
shll
sub
aam
pop
nop
addr16
out
mov
push
or
fsubr
arpl
cmc
shlb
sub
add
xlat
scas
sbb
sarl
pop
pusha
loope
or
add
dec
add
or
dec
popl
lds
dec
xchg
ret
sbb
stos
inc
xor
in
pop
sub
jge
push
test
cmp
ret
sti
insl
rorb
ja
dec
out
mov
xor
pop
cltd
or
fbld
in
or
ja
stos
push
inc
nop
xchg
aaa
call
je
jae
mov
lahf
aaa
xchg
movsb
cmp
nop
pop
setbe
inc
inc
xor
push
inc
je
dec
push
pop
sbb
mov
sub
adc
out
mov
scas
add
xchg
push
in
cmpsb
lcall
cmp
sbb
loop
push
clc
mov
sbb
in
push
shlb
adc
clc
negl
ror
cmp
jne
jo
and
test
fstl
pop
xor
adc
add
push
dec
imulb
dec
scas
or
pop
fisttps
cs
ljmp
pop
adc
fcom
ficoml
push
hlt
je
sub
xor
into
es
je
mov
je
das
xor
sarb
push
js
addb
adc
push
xchg
or
int
ljmp
add
xor
psrad
mov
orb
ret
pop
adc
or
and
jle
add
inc
lret
ss
adc
repz
jecxz
adc
jb
adc
add
inc
add
xlat
cltd
aam
out
pop
sti
cmc
gs
push
leave
inc
add
loopne
adc
rolb
lret
incl
cwtl
fiaddl
in
out
pop
repnz
jmp
hlt
int3
add
cld
movl
shll
lahf
or
and
dec
sbb
pop
fsub
pslld
lret
push
adc
add
hlt
add
and
adc
add
sbb
int
clc
jne
cmpsb
aam
mov
int
pop
mov
adc
adc
hlt
or
cs
dec
xchg
sbb
cmpsl
lock
mov
call
mov
inc
or
xchg
adc
test
fsubrl
popa
cmp
and
roll
dec
cld
jp
dec
imul
pop
loopne
aas
push
cmp
fdivr
and
fmul
shll
inc
xchg
sub
lret
arpl
pop
push
or
repz
jp
or
ja
pop
add
adc
or
sbb
sbb
mov
xchg
sub
cmp
int
nop
sbb
pusha
roll
or
or
add
aaa
das
sbb
hlt
movsb
arpl
or
xchg
fbld
add
sbb
test
aaa
fdivrs
testb
test
lock
cmp
inc
add
inc
xchg
je
jmp
out
xchg
dec
movsl
sbb
sbb
and
mov
insb
bound
imul
aaa
or
ret
daa
jne
xchg
inc
or
cmp
xor
jnp
or
pop
mov
xchg
sbb
or
out
dec
call
cmp
push
icebp
pop
xor
mov
movsb
sub
sbb
mull
test
push
xor
inc
ret
aaa
mov
cmp
xchg
pcmpgtw
push
lcall
mov
push
add
in
jbe
jbe
cmpl
outsb
insb
mov
pop
or
cltd
jecxz
adc
fsubs
or
mov
add
cmp
fisttpl
xor
push
cmp
mov
xor
push
or
xchg
fmull
sbbl
adc
smsw
or
in
or
dec
or
xor
mov
imul
push
daa
scas
sub
or
sub
cmpsb
mov
jp
pop
ds
fstp
testb
push
dec
insb
add
mov
jne
mov
mov
addr16
shrl
fmuls
adc
mov
push
arpl
je
cld
push
test
sbb
add
lds
adc
push
push
movd
mov
xor
test
iret
das
mov
pop
sbb
xchg
clc
dec
or
loop
push
mov
mov
cmp
mov
shlb
ja
mov
in
push
sbb
popa
xor
adc
inc
or
flds
add
and
sbb
icebp
xlat
sahf
fucom
dec
int3
push
ljmp
jb
cwtl
sub
loopne
adc
push
dec
in
je
add
enter
inc
dec
ljmp
add
push
mov
bound
xchg
shrl
adc
dec
popa
adc
and
dec
or
es
adcb
and
fdivrl
loope
inc
push
sahf
insl
loop
loope
pop
scas
prefetchw
mov
mov
mov
cld
mov
pop
rcll
mov
or
and
sub
and
sub
nop
outsl
or
imul
addr16
inc
bound
dec
sub
push
imul
cltd
fbld
jmp
sbb
rclb
adc
jnp
ljmp
add
jmp
push
lock
test
adc
in
test
mov
jmp
pmuludq
or
xor
ljmp
loop
out
call
in
jmp
add
push
add
lods
add
repnz
lods
sarl
or
adc
dec
repz
jmp
repz
add
shll
arpl
inc
sub
aaa
mov
or
or
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
outsb
xor
pushl
lds
jno
inc
mov
movsl
leave
aam
ss
aas
mov
ja
mov
stc
dec
and
pop
and
adc
pop
xchg
sub
fs
fdiv
inc
add
es
mov
ja
out
add
mov
mov
adc
outsb
jbe
daa
lea
nop
fmul
fsub
push
push
jo
ljmp
xchg
push
roll
popa
dec
dec
lods
pushf
je
mov
jo
jno
inc
rcrl
pop
xchg
hlt
pop
loop
in
popf
inc
testl
call
dec
test
cmp
push
or
jnp
sbb
inc
push
les
inc
mov
add
push
cwtl
fwait
addb
adc
or
or
adc
cmp
and
pop
push
jae
or
and
loope
push
mov
js
push
and
loopne
xor
jecxz
sub
andb
dec
jne
xchg
push
test
les
popa
adc
xlat
and
push
lock
iret
loopne
daa
pop
dec
mov
add
ret
adc
fdivl
jl
jecxz
or
shlb
mov
push
sbb
rcr
clc
mov
enter
push
lock
push
mov
push
mov
adc
xchg
xchg
sbb
ja
in
and
push
ljmp
jno
or
subl
push
add
mov
lea
and
pandn
and
in
sbb
sbb
and
inc
adc
adc
outsl
cmp
or
int
dec
jne
movsl
dec
jne
sbb
insl
cmp
mov
and
in
cwtl
jmp
inc
mov
dec
or
sub
or
mov
popf
push
cmpsl
mov
xchg
test
icebp
sub
testl
fstpl
push
mov
jmp
test
and
repnz
adc
add
enter
cmp
mov
pop
mov
movsb
inc
push
or
and
xchg
dec
push
fisttps
sbb
rorb
ret
std
adc
psubsb
jmp
cmp
pop
xchg
mov
arpl
test
dec
push
cld
jnp
scas
push
adc
cmp
clc
divl
rcl
sbb
fxam
push
xor
cmc
or
cltd
repnz
xor
dec
jle
pop
loopne
push
cmc
push
xor
hlt
pop
mov
mov
and
test
adc
fdivl
push
mov
xor
movsl
adcl
sbb
fcoms
mov
lret
inc
mov
cs
fwait
lea
jno
and
nop
push
adc
sub
divl
out
fwait
xor
push
lods
jge
loopne
pop
push
icebp
test
lcall
inc
sub
cmp
loope
cmp
rorb
aam
mov
fistpll
pushf
popa
and
jne
inc
addl
xor
scas
call
test
cli
cld
sbb
pop
push
cs
jmp
pop
dec
xor
add
cmp
xchg
out
add
pop
cmp
in
nop
mov
cmc
rol
adc
aas
or
aad
pop
xlat
lds
orl
adcb
inc
push
add
out
mov
ja
aam
xchg
int3
int3
jge
sub
add
cmp
mov
clc
inc
pop
andb
in
fs
jmp
cs
adc
mov
jmp
loopne
pop
pop
mov
outsl
dec
cmpsb
fcomi
fdiv
mov
push
rcr
shr
gs
cmpsl
out
push
incb
pusha
outsl
hlt
push
inc
jne
mov
mov
push
adcb
repz
jl
or
mov
add
lock
or
mov
pop
mov
mov
loopne,pt
leave
xor
jge
arpl
mov
fmul
test
stos
aam
test
dec
sbb
pop
inc
sub
es
adc
mov
mov
cmp
push
inc
xchg
push
iret
int3
int3
mov
jmp
pop
mov
push
clc
push
jno
mov
inc
pushf
in
add
mov
cld
es
aaa
mov
inc
lock
mov
das
hlt
push
sub
stos
sarb
ret
shl
aas
sbbb
push
dec
mov
or
mov
mov
or
test
push
lds
xorb
sbb
push
movsb
xor
xchg
dec
adc
add
dec
sti
add
adc
push
and
xor
jne
jmp
push
adc
and
sti
cmp
cmp
shr
lea
pop
add
es
cmp
add
imul
scas
push
lahf
mov
xchg
mov
mov
add
imul
adc
sub
data16
add
jmp
arpl
xchg
xor
jmp
sbb
adc
jl
sbb
std
mov
adc
add
nop
cli
les
les
xor
aad
loop
adc
sar
cmp
jns
in
out
add
out
mov
hlt
mov
loop
loopne
push
or
cwtl
aad
or
inc
mov
push
jecxz
sub
add
or
mov
mov
out
or
add
loopne
aaa
xor
xor
loopne
jmp
insb
push
out
adc
add
cmpb
test
jecxz
dec
fdivr
mov
imul
lahf
jecxz
dec
jne
adc
sbb
daa
and
or
fs
mov
lods
sbb
loope
inc
push
lods
cmpl
push
imul
bound
outsl
pop
adc
pop
sbb
testb
imul
hlt
sbb
outsb
xlat
lods
cld
lock
or
cmp
inc
xor
cld
jg
rorb
shrl
cmpb
dec
cmp
dec
mull
addb
mov
xor
sbb
push
and
out
aas
or
xchg
mov
loop
xchg
jnp
cmp
int3
add
divl
add
scas
add
movb
sub
fadds
jle
mov
xchg
nop
pop
adc
or
inc
orps
and
xchg
clc
or
rclb
decl
jmp
idivb
add
mov
jb
je
dec
mov
hlt
adc
adc
jmp
jns
inc
xchg
les
dec
cmp
push
push
imul
adc
outsl
adc
imul
cmpb
and
test
mov
pop
or
inc
push
sbb
ss
fiaddl
cs
or
fistpl
popa
cmp
jle
push
pop
inc
add
add
cmp
sub
sub
dec
sbb
das
sub
sub
add
adc
inc
nopl
jne
repnz
cld
and
add
subl
sbbb
sub
js
popf
sbb
push
mov
sbb
or
lock
push
adc
dec
mov
mov
mov
lock
and
add
xorb
add
sbb
sub
ss
es
sbb
pop
and
lock
movsl
cmp
inc
or
enter
outsl
das
adc
imul
mov
adc
mov
jge
add
add
dec
xor
sub
and
call
jne
jg
sbb
pusha
cmpl
jb
xor
xor
push
sahf
push
mov
je
or
or
add
adc
jle
lea
movsl
add
inc
and
ds
jb
push
pop
add
popf
inc
mov
push
add
insl
and
inc
dec
push
lret
mov
je
and
and
xchg
and
repnz
inc
es
add
leave
dec
movsl
adc
adc
cltd
or
add
push
in
scas
or
jge
cmpsb
daa
pop
movsb
push
stc
cs
pop
pop
std
xchg
add
pop
or
fs
pop
sbb
sub
mov
inc
cmc
and
in
gs
bound
imul
adc
cmpsl
dec
ja
fmuls
insl
or
div
out
addr16
pop
sbb
cbtw
push
sub
lds
ss
sub
in
ret
ljmp
lds
mov
adc
xor
pushf
test
add
cmp
adc
add
jne
mov
insb
popa
jns
jae
lock
rolb
rol
add
stos
pushf
js
cld
mov
in
imul
jns
cs
or
or
add
hlt
int
repnz
adc
add
push
push
inc
push
bound
xchg
lret
dec
add
and
sbb
sub
adc
lds
cmpl
add
adc
mov
adc
inc
aam
cld
push
mov
arpl
arpl
cmpsb
add
insl
add
and
out
pusha
add
loopne
leave
leave
sub
mov
test
leave
leave
je
insb
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
xor
das
xchg
cmpsl
call
jbe
cld
xor
jmp
mov
sub
dec
xor
add
push
mov
icebp
imul
movsb
ja
adc
insb
outsl
addr16
or
popa
imul
jb
jb
jbe
js
jb
jb
jp
jl
jb
jb
jle
pusha
popa
jb
jb
bound
gs
jb
addr16
jb
jb
imul
jb
outsb
outsl
push
push
jb
jb
push
push
push
push
jb
jb
push
push
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
xor
jb
jb
xor
xor
jb
jb
ss
cmp
jb
jb
cmp
cmp
jb
jb
ds
and
jb
jb
and
and
xchg
pop
arpl
sbbl
or
or
leave
adc
mov
add
add
and
sbb
adc
sub
mov
fs
push
sahf
jbe
pop
dec
xor
inc
out
add
push
jecxz
or
in
adc
add
mov
cmpb
sub
lret
lahf
div
push
add
mov
jmp
adc
jmp
add
xchg
and
gs
add
rolb
dec
cli
test
xor
lcall
sbb
push
inc
test
jg
and
inc
loopne
mov
cmp
ret
mov
mov
subb
inc
push
inc
popf
jge
mov
loopne
sub
pop
lcall
add
mov
or
test
pusha
push
popf
mov
dec
sbb
pop
dec
test
icebp
push
shrb
js
cli
mov
and
sbb
or
addl
sbb
cwtl
js
nop
cmp
lods
sti
push
push
ds
jle
ret
unpcklps
int3
mov
or
loopne
mull
xchg
mov
add
fisttps
cmp
andb
add
pop
lds
add
or
iret
mov
or
pop
movsl
mov
pop
push
xor
mov
lds
jb
or
or
shrb
inc
stos
icebp
mov
ret
xor
ret
or
mov
dec
popa
movsl
adc
popa
pop
cmpsb
faddp
cld
mov
mov
sbb
push
xchg
dec
adc
push
mov
ret
pop
jne
push
outsl
jecxz
clc
movsb
or
dec
xchg
add
cmp
add
cwtl
adc
add
jl
mov
sub
jg
iret
add
popa
mov
pusha
rcrl
inc
sarl
imul
sbb
es
jae
inc
add
je
in
jb
cmp
jnp
sbb
clc
test
add
push
outsl
into
sbb
int3
ss
ds
adc
leave
adc
ficoml
arpl
mov
push
and
inc
prefetcht0
ret
cmc
xchg
pop
or
mov
inc
outsl
outsb
je
imul
pop
xor
data16
sbbb
adc
add
or
testl
movsb
xchg
or
imul
mov
add
mov
gs
rorl
push
je
insb
or
inc
or
int3
xor
data16
enter
int
or
je
arpl
adc
fwait
aaa
mov
mov
add
cmc
int
divb
and
insb
or
cmp
add
dec
push
outsb
int
inc
sti
sahf
or
pop
jo
outsl
sbb
push
inc
lret
jle
mov
je
sbb
add
add
inc
jl
or
dec
outsb
jae
lock
sbb
jb
push
inc
insb
shll
push
dec
or
mov
decl
cmp
paddb
xor
push
jo
call
dec
inc
jns
sbb
or
lret
int3
mov
sbb
sbb
adc
xor
pop
idivb
aas
mov
loopne
pop
mov
adc
fdivl
cmpsl
je
add
jne
mov
imul
mov
fiaddl
jl
jp
push
or
push
fidivl
or
enter
addr16
inc
outsl
dec
ret
jae
jb
jae
es
out
pop
fwait
mov
pusha
pop
inc
push
dec
push
add
mov
and
test
decl
andps
lods
mov
pop
sub
gs
cmp
xor
sub
mov
mov
pop
shll
imul
and
insl
ficoms
imul
cmp
lock
pop
sub
and
in
cmp
addl
mov
and
std
fcompl
add
or
sti
aam
lock
or
xor
push
push
sbb
add
pop
adc
ret
stos
outsl
orb
call
sbb
push
add
insb
shl
das
nop
das
aas
addb
gs
cli
mov
testb
xor
sbbl
sub
push
or
rolb
int3
dec
pop
imul
mov
cmp
push
push
add
cmpsl
pop
aam
push
push
cs
jl
cld
enter
addb
nop
lods
adc
cs
les
mov
stos
aas
mov
mov
lahf
pop
sbb
ffreep
xchg
mov
call
icebp
lcall
scas
pop
xchg
jl
mov
mov
fisubrl
mov
fnstcw
mov
xor
or
test
push
mov
and
adc
imul
lods
fwait
jmp
test
push
test
xchg
jl
add
add
xor
call
fs
push
in
in
sbb
les
add
jo
addr16
pop
repnz
xlat
jae
pop
outsl
cmp
inc
clc
loopne
pop
insb
outsb
push
mov
lret
test
nop
jae
pop
sbb
lahf
mov
lds
rclb
cmp
dec
mov
or
and
imul
pop
aas
push
int3
push
or
lods
cmp
inc
test
shlb
push
mov
into
ficomps
subb
pop
test
ja
popa
adc
or
cmp
add
push
xchg
sub
mov
outsb
outsb
adc
inc
insb
xchg
in
rcll
orb
inc
push
add
push
inc
arpl
mov
push
dec
int3
add
or
scas
mov
ja
outsl
ja
adc
clc
inc
inc
adcb
add
dec
jae
fildl
dec
imul
rcrl
push
jb
loope
cwtl
dec
xor
decl
push
xchg
ret
sbb
and
xorb
fmul
imul
test
push
aas
or
sbb
mov
es
adc
out
sbb
mov
dec
jnp,pn
xor
mov
push
pusha
push
add
xor
lds
loopne,pt
xor
in
dec
push
inc
fcoml
in
jmp
push
sysret
in
adc
pop
xor
push
paddq
pop
add
movsb
mov
lock
jl
pop
fsubs
cmpsl
inc
js
adc
mov
or
and
enter
pop
shl
in
add
dec
add
enter
mov
push
xchg
popa
and
insl
jne
stos
mov
push
add
sbb
fidivs
fs
add
push
push
sub
test
scas
inc
pop
rolb
inc
or
dec
pop
inc
out
push
ss
mov
pop
mov
pushf
push
xor
je
jb
pusha
in
jnp
out
pop
and
das
aaa
rolb
push
shlb
add
ds
or
mov
out
inc
cmp
loope
push
push
les
dec
insl
push
outsl
mov
mov
test
jns
test
push
pop
push
pop
in
cmpsl
mov
ret
nop
nop
mov
faddp
pop
clc
xor
adc
mov
inc
in
inc
out
das
pop
js
inc
or
adc
loopne
call
mov
xchg
inc
out
rcrl
push
push
pusha
xchg
cmp
pushf
inc
fs
push
mov
cmp
xchg
lds
mov
and
daa
sbb
sbb
js
je
scas
jns
pop
jno
push
or
mov
mov
cmp
jnp
sbb
loope
dec
pop
dec
jl
jl
jle
fnstcw
sahf
push
cwtl
push
orl
call
fmull
ror
cmovs
cmpxchg
push
and
sub
int3
push
cld
xchg
push
xchg
or
mov
dec
or
test
imul
xchg
les
sub
xchg
jbe
or
outsl
outsb
lds
in
pop
sbb
nop
pop
xchg
push
inc
iret
test
int3
xchg
testl
xchg
mov
push
mov
inc
loopne
inc
sbb
push
sbb
js
and
jnp
mov
push
jo
pop
add
ret
cs
pop
sbb
cmp
mov
lds
aaa
adc
and
outsb
push
add
dec
mov
inc
and
fadds
dec
imul
jns
je
rcrb
bound
insl
fnstenv
mov
ret
mov
bound
xchg
data16
add
jne
xor
add
mov
shrb
sbb
pop
popa
pop
call
arpl
xchg
dec
add
push
je
seto
leave
push
inc
push
hlt
and
cmp
enter
and
lock
jne
js
lds
jge
rorl
inc
cmp
icebp
and
test
add
xchg
sub
dec
or
ret
ja
add
mov
es
jge
adc
mov
jge
adc
adc
ds
adc
aaa
icebp
test
adc
and
xor
decl
lock
nop
lock
enter
pop
ss
cmp
or
inc
cmp
mov
or
idiv
adc
dec
leave
and
xchg
and
jb
pop
aad
aaa
dec
jmp
jne
pop
imul
mov
and
outsl
add
jnp
in
inc
jnp
xchg
aaa
sbb
push
outsl
sub
cmp
je
adc
in
pushf
xlat
cmp
add
and
movsb
xchg
pop
insb
and
lahf
icebp
mov
pop
sar
je
incl
jle
dec
cmpsb
cltd
dec
fst
cmpsl
jcxz
or
cmpb
xor
sbb
loope
cmp
pop
xchg
insl
popa
pop
adc
mov
adc
jle
fimuls
push
stos
sbb
jmp
and
popa
pop
and
push
inc
in
sub
cmp
shr
jmp
cmpsl
xor
cmp
aam
cmc
sub
cld
adc
out
popf
push
jg
mov
mov
gs
and
aam
loop
xchg
or
cmpsl
dec
sub
sub
aaa
cwtl
pop
sub
sarb
aas
arpl
cmp
mov
popa
jb
outsl
outsb
inc
inc
repnz
or
outsb
pop
dec
insb
imul
push
xchg
jbe
add
jb
insb
gs
push
gs
insb
pop
jbe
nop
jg
addr16
imul
dec
mov
aas
xor
insb
insb
outsl
ja
lret
in
rcrl
arpl
imul
jno
popa
mov
pop
pop
or
gs
cmpb
xchg
push
imul
cs
ja
insl
inc
dec
mov
data16
push
outsl
push
outsl
insb
faddp
dec
data16
cmovae
add
pusha
pop
jo
push
pop
imul
rclb
jge
pop
adc
das
inc
je
inc
stos
push
outsl
in
push
xchg
dec
adc
int3
or
jnp
das
or
and
jg
gs
mov
add
push
mov
daa
pop
xchg
mov
loopne
fs
lahf
sbb
sarb
or
nop
cmp
or
push
and
daa
ud2
popa
and
pop
jg
pop
ret
pop
data16
fcomip
aaa
fadds
xor
pop
adc
add
xor
or
lock
jg
pop
outsb
jne
and
inc
icebp
pop
xchg
daa
es
das
lahf
or
xchg
dec
cs
push
arpl
insb
mov
imul
sbbl
das
cmp
cmp
or
das
or
sbb
or
or
adc
push
mov
ljmp
shrd
push
or
dec
dec
dec
int
push
adc
pop
fadds
cmp
or
dec
pop
inc
dec
inc
push
push
inc
push
add
fdivrs
ja
inc
inc
inc
push
dec
push
xor
rcpps
inc
dec
dec
arpl
inc
mov
jb
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
ret
fimull
and
out
inc
inc
xor
xor
jnp
mov
dec
inc
and
inc
xor
inc
inc
push
inc
inc
dec
mov
lods
fsts
dec
push
dec
dec
mov
dec
lods
mov
das
sbb
mov
dec
and
xchg
push
mov
dec
inc
dec
xor
ja
out
push
dec
pop
adc
push
push
push
dec
push
inc
scas
dec
inc
dec
xlat
icebp
xchg
mov
nop
inc
xor
mov
mov
and
or
mov
add
xchg
add
and
icebp
inc
mov
orb
and
int
jle
mov
orb
adcb
adc
cmp
add
or
mov
inc
push
sarb
test
and
ljmp
inc
cmpxchg
and
dec
sbb
add
fists
dec
mov
or
jmp
add
cmpsb
mov
mov
outsb
jg
mov
sbb
ret
fidivrs
inc
shll
add
frstor
pop
and
notb
xchg
pop
out
sub
sbb
sbb
lcall
adc
dec
xchg
lods
lahf
js
insb
xchg
aas
push
ret
das
loopne
dec
jb
dec
icebp
jnp
xchg
adc
sbbl
xchg
loopne
je
jne
and
movsl
xorl
in
or
insb
add
xchg
out
jns
cld
and
adc
adc
inc
insb
inc
adc
inc
and
mov
or
jne
xchg
arpl
jmp
cwtl
loop
mov
push
cmp
je
or
push
dec
repz
idiv
lds
cmp
mov
sub
adc
or
and
mov
add
ss
mov
mov
cmp
inc
das
inc
adc
add
dec
dec
cmp
das
dec
jge
adc
add
sbb
enter
outsl
cmpsl
dec
push
je
shlb
jmp
adc
xor
sbb
sbb
gs
add
or
push
aaa
fldl
inc
push
cmp
adc
sbb
in
xlat
jmp
or
pop
xchg
pop
or
or
mov
jo
pop
pop
jnp
inc
add
mov
add
dec
mov
mov
andb
mov
jb
pop
sar
or
mov
mov
mov
cmp
data16
add
in
cmpb
adc
push
insb
addb
xchg
lcall
fidivrl
pop
jmp
fadds
flds
popa
mov
scas
cli
scas
fiadds
push
or
loop
fildl
or
into
mov
in
or
xor
aad
sbb
mov
mov
dec
mov
ss
pop
pop
mov
clc
adc
shlb
movsl
mov
jge
sbb
inc
sbb
xor
fwait
xlat
jecxz
inc
or
notl
imul
inc
pop
test
pop
jl
mov
or
push
adc
or
rcrb
xchg
push
nop
add
xchg
and
fwait
xor
ja
sbbl
fmull
sub
dec
inc
pop
cwtl
neg
jp
inc
inc
xor
push
das
sbb
neg
push
mov
cli
push
add
out
sbb
add
jbe
pusha
insb
cmp
incb
mov
adc
add
xchg
loope
and
loopne
fcoms
xchg
loop
sbb
sbb
inc
push
xchg
xchg
push
sbb
adc
sbb
cmp
test
nop
push
adc
cli
movb
pop
pop
push
dec
pop
outsb
nop
aaa
daa
fs
inc
pusha
adc
push
and
nop
pop
fiadds
ret
jb
and
push
xor
arpl
fs
jmp
stc
sbbl
sbbb
xor
cmpl
and
mov
push
add
jne
out
loopne
in
fldenv
xchg
xchg
ds
subl
lock
andb
aas
sbb
adc
xchg
cmp
in
lods
xor
push
xor
lock
and
xchg
nop
cld
xor
aas
and
or
sub
test
add
push
inc
ud1
xor
sbb
sub
add
or
test
movsb
out
mov
and
nop
xor
push
movlps
mov
mov
cmp
mov
adc
fmull
ret
test
adc
adc
lds
mov
add
xchg
xor
daa
dec
repnz
out
in
add
adc
sbb
rolb
add
enter
das
loopne
cltd
push
or
cltd
mov
or
loop
mov
or
mov
sbb
cmp
add
xlat
hlt
pop
in
hlt
lock
or
lahf
dec
ja
mov
xor
xor
pop
ret
mov
dec
mov
fcomp
daa
lods
mov
xor
jne
sbb
fcmove
inc
cmp
add
adc
push
jle
movsb
into
push
fidivrl
xchg
lret
pusha
inc
pusha
adc
pop
adc
cmp
adc
or
xor
add
ja
jb
cmp
xchg
push
lock
pusha
and
xchg
leave
pop
push
addr16
xchg
mov
shrb
xchg
xchg
adc
inc
cmp
xchg
mov
add
lods
adc
stc
and
cmpsl
cmp
fcompl
sbb
std
add
cwtl
push
mov
sub
mov
or
pop
or
or
fcomp
pop
shll
push
or
push
push
insb
int3
fimuls
mov
fcmovbe
out
and
mov
cmp
cmpl
push
jp
push
cmpl
les
sbb
pop
aam
fldcw
and
nop
and
and
mov
sub
iret
test
jno
push
ds
in
and
pop
adc
add
cmpsl
loopne
pop
add
es
not
out
push
in
loopne
fmuls
dec
cmpsb
lods
cltd
mov
cmp
insl
in
mov
insl
enter
mov
jne
bound
repz
xor
insb
movsl
mov
fimull
pusha
pop
mov
push
mov
inc
xchg
cmpsl
add
sbb
and
xor
arpl
dec
jbe
rol
mov
rclb
dec
iret
mov
test
adc
divl
frstor
push
or
jno
pop
push
bound
rolb
add
adc
imul
mov
bound
sbb
and
mov
mov
cmp
pop
lock
hlt
dec
pop
ret
rcr
and
inc
test
push
int3
xor
and
add
sbb
dec
lahf
popa
xor
mov
mov
addr16
hlt
popa
inc
lea
loope
movsl
movsl
rcll
inc
push
inc
fs
mov
cmp
js
dec
icebp
adc
push
add
xlat
push
push
outsl
add
fidivrl
outsw
jbe
mov
dec
incl
iret
add
test
or
shlb
ja
shlb
sbb
insb
and
push
jnp
add
xchg
arpl
scas
or
xor
pop
testl
inc
push
sbb
aas
clc
mov
or
sub
orb
jbe
push
adc
std
inc
xchg
jae
pop
or
shll
sbb
inc
xor
push
ds
je
neg
push
pop
sbb
ds
pop
pop
in
mov
adc
cmp
add
jl,pn
add
jbe
data16
fmuls
mov
sbb
dec
xor
sbbb
or
sbb
push
inc
push
adc
sbb
sahf
data16
aam
mov
cmp
and
lea
jnp
icebp
jne
int3
mov
adc
push
movsl
xor
xchg
inc
icebp
add
mov
mov
add
xchg
add
mov
xchg
das
mull
jg
hlt
push
inc
das
cwtl
add
mov
mov
sbb
fimull
jbe
mov
repnz
orps
push
mov
add
and
pop
inc
inc
and
mov
fwait
and
sar
movsl
pop
adc
push
push
cmpsb
jbe
xor
xor
or
aam
adc
cmp
sbb
lea
or
sub
adc
rol
les
xor
pop
dec
repz
add
cld
push
dec
pop
xchg
addr16
add
pop
pop
or
jne
push
jge
add
sahf
hlt
fxch
xor
shlb
in
mov
call
dec
cli
nop
inc
int3
push
push
push
pusha
push
push
lock
add
jl
lahf
hlt
adc
jp
test
add
push
fs
cmc
fwait
aad
imul
test
pop
ror
or
mov
or
fs
fists
sbb
in
push
shll
aam
jle
push
out
pop
arpl
js
xchg
cmp
mov
loop
push
adc
mov
lock
mov
neg
sarb
or
ljmp
push
push
dec
mov
or
dec
dec
gs
add
fiaddl
fincstp
shll
fnstcw
andb
ret
das
and
fcoml
push
xchg
jae
xchg
jne
sub
popf
xor
imul
loopne
scas
enter
xor
pushf
adc
adc
jle
sub
stos
int3
jmp
rolb
imul
pop
adc
and
shlb
mov
arpl
sbb
and
inc
xchg
or
fsubp
sbb
and
cmpsl
aam
out
insb
and
out
fsubrs
push
sub
dec
jmp
enter
jns
pop
bound
lds
add
sbb
lock
das
add
aam
push
mov
xchg
pushw
sub
push
movsl
dec
mov
ja
inc
add
stos
dec
pop
and
loopne
adc
sbb
pop
or
jae
push
add
ficoml
sub
mov
insb
sbb
out
pop
sti
add
lea
add
dec
pop
add
add
bound
fmuls
mov
pop
sub
adc
test
cmp
dec
adc
adc
dec
pop
out
sub
into
mov
lea
or
pop
pop
pop
push
xchg
sub
fsubl
mov
imul
adc
adc
mov
mov
fiaddl
push
frstor
inc
push
loopne
jae
push
faddl
das
call
je
pop
testl
das
and
push
je
or
mov
xor
and
mov
sub
shl
mov
adc
scas
fimuls
xchg
mov
movl
sub
mov
pop
mov
cld
aad
inc
sbb
addb
ret
cmp
jl
pop
sti
popa
cmpsb
or
cld
rolb
jne
sub
add
mov
movzwl
lea
int
push
pop
push
cmp
ss
xor
addr16
xchg
dec
pop
data16
push
inc
mov
icebp
addr16
ljmp
add
ficompl
jne
xchg
inc
ja
clc
push
out
inc
push
and
xchg
mov
jl
jle
push
mov
movzwl
lea
or
inc
lock
mov
mov
inc
dec
or
add
out
mov
xchg
dec
ficoml
pop
roll
add
cmp
imul
pop
inc
mov
data16
aas
push
inc
arpl
dec
mov
bound
loopne
and
clc
pushf
push
sahf
pop
add
je
push
in
fs
lret
add
sbb
shll
shrb
add
sub
aad
pop
jle
add
out
ss
push
add
dec
wbinvd
push
or
and
shr
jge
xchg
add
outsl
push
mov
xchg
jo
leave
shlb
mov
repz
in
sub
loop
push
or
cmp
test
jg
cmp
ret
push
xorl
push
jns
or
movsl
dec
jge
add
shrb
ret
mov
and
xlat
jbe
mov
and
dec
loopne
or
sbb
fsubrl
add
loopne
fldl
xchg
out
or
add
stc
add
roll
push
shrl
cmc
inc
movl
pop
shlb
and
in
arpl
push
inc
pop
repnz
adc
add
dec
adc
mov
dec
cmp
and
add
loop
cmp
lock
inc
pop
push
or
inc
sub
sbb
outsb
scas
loopne
orl
pop
pusha
jne
ss
mov
cmp
push
xchg
pop
add
mov
cmp
jg
test
jle
cmp
jl
cmpsb
aaa
enter
test
enter
cmp
jle
xor
add
dec
sbb
cld
dec
test
ret
hlt
shl
fs
andb
jecxz
dec
dec
and
dec
dec
imul
stos
call
inc
dec
mov
gs
pop
adc
popa
ret
adc
fs
cli
push
add
fcomp
push
dec
test
mov
lods
xchg
sbb
scas
inc
xchg
cmp
or
in
sub
mov
scas
xor
das
inc
dec
fcomps
push
sub
cmp
jge
mov
mov
loopne
mov
insb
inc
ret
in
sub
repz
lock
jl
push
cmp
dec
orb
add
dec
rcrb
jne
callw
mov
shr
adc
xor
cltd
xor
cld
mov
aam
sub
adc
pop
repnz
add
sub
add
ret
pop
add
adc
lcall
leave
xor
push
or
pop
add
mov
xor
enter
xchg
mov
pop
fidivrs
mov
mov
push
mov
mov
mov
cmp
xorb
or
mov
rolb
repz
mov
push
popa
ret
xchg
add
lods
adcb
mov
jnp
add
or
outsl
inc
dec
jmp
sub
adc
imul
add
xor
dec
sti
jo
or
aad
pop
mov
dec
scas
add
pop
or
rorb
pop
xor
cmp
jl
pop
out
lods
test
inc
shrb
je
loope
push
lea
pop
ja
mov
sbb
sub
push
or
sti
lea
dec
jo
clc
xchg
jmp
sti
sub
movsb
mov
movl
mov
sbb
cld
insl
in
je
dec
or
jle
lock
jmp
pop
outsb
inc
sbbl
pop
mov
sbb
or
imulw
aas
sahf
sbb
and
inc
pop
or
and
push
fcom
pop
and
push
sub
sub
or
add
adc
xchg
push
int3
fadds
lahf
ds
jmp
dec
sbb
je
out
adc
mulb
add
add
es
jmp
test
sub
lcall
pushf
mov
sbb
fldcw
sbb
push
or
xorl
es
pusha
xchg
imul
test
push
test
mov
lods
sub
xchg
pop
or
jo
jb
mov
clc
hlt
hlt
mov
sbb
outsl
imul
push
xchg
sub
roll
sub
jmp
mov
lahf
lods
mov
clc
add
testb
imul
adc
xor
pop
je
xchg
push
xchg
push
add
xor
cmp
popa
sub
hlt
int3
add
in
ret
loopne
daa
push
inc
mov
call
adc
in
loopne
rclb
fcoml
loop
imul
and
ljmp
sub
loopne
jg
aad
sbb
inc
push
add
loopne
ficoms
cmp
iret
in
inc
fsubs
fidivl
mov
jae
in
cmpsb
add
push
lods
or
sub
xor
dec
or
push
mov
mov
scas
mov
mov
mov
inc
outsb
subb
xchg
jl
add
push
xchg
dec
hlt
lods
popf
out
cmpsb
sbb
in
in
pop
sbb
push
std
hlt
out
imul
fcoml
xchg
call
add
nop
mov
sub
add
pop
aas
movb
out
adc
mov
addr16
aaa
pop
mov
popa
add
push
sbbb
inc
dec
mov
divl
add
jne
shlb
xor
add
jl
or
in
xor
inc
push
lcall
aas
nop
push
inc
or
push
addr16
add
shll
adc
rol
xchg
cmp
or
je
sub
mov
jne
add
shlb
int3
or
add
popf
jnp
push
xchg
clc
pushf
insb
das
sub
inc
dec
hlt
add
mov
popf
addl
sbbb
and
pop
jne
cmp
insl
cmp
sub
xchg
lret
mov
or
cmp
inc
dec
xlat
inc
lret
inc
pusha
pop
push
ds
orb
cmpsl
inc
arpl
push
jo
push
xchg
cld
push
rcrl
nop
lret
cld
pop
add
sbb
xor
adc
jecxz
lock
push
scas
xor
mov
sbb
adc
into
pop
add
pop
pop
adc
addr16
xor
xor
cmp
and
or
mov
push
adc
pop
push
pop
insb
loopne
fistpll
sbb
push
fidivrl
push
add
ds
cmp
rcll
add
or
lahf
and
push
xlat
and
push
xchg
inc
xchg
pop
fldcw
lcall
mov
add
clc
mov
cmpl
mov
dec
hlt
mov
mov
xchg
lock
repnz
push
lock
xchg
xlat
stc
xchg
arpl
insl
popw
imul
bound
movl
outsl
negl
inc
das
or
push
dec
pop
pop
or
dec
ljmp
push
test
movl
mov
cmc
scas
pop
popf
mov
in
cmpsl
dec
mov
add
gs
xchg
dec
dec
or
pminsw
or
adc
adc
popa
xor
cltd
adc
mov
push
daa
ds
inc
xchg
dec
dec
jecxz
cmp
dec
and
clc
mov
ret
jno
push
pusha
mov
xchg
test
out
pop
inc
clc
test
pushf
cmp
aas
or
aas
aad
out
pop
inc
add
imul
outsl
inc
adc
pop
dec
pop
or
sbb
mov
inc
add
mov
test
sbb
and
xchg
push
roll
mov
shll
sub
shl
push
xchg
js
lods
ret
gs
cmp
aaa
push
or
test
daa
pop
push
repnz
mov
pop
dec
lods
mov
fcomp
mov
and
or
das
mov
daa
inc
or
dec
test
or
sbb
fsts
or
lock
pop
or
mov
out
lods
pop
aas
xlat
pop
jne
mov
pop
ret
or
sbb
fwait
or
test
pusha
cmpsb
xor
adc
and
imul
in
xor
mov
dec
jle
andl
mov
out
inc
mov
dec
dec
stos
push
adc
push
cwtl
or
rcrl
sub
pop
mov
das
daa
jecxz
lret
sbb
sbb
int3
pop
scas
pop
adc
orl
adc
xor
pusha
mov
orl
int3
or
dec
mov
mov
mov
cmp
pop
dec
fcomps
or
dec
cld
cs
and
mov
push
aaa
addr16
and
cmp
scas
jnp
mov
das
sbb
jl
dec
dec
fistps
scas
and
mov
test
and
mov
jp
or
adc
or
sub
push
xchg
or
loope
mov
jno
arpl
aam
popf
lds
jmp
pop
add
mov
mov
and
aad
mov
addr16
movsb
mov
into
sbb
jo,pn
xor
pop
jmp
les
xor
jmp
jecxz
adc
or
push
inc
sbb
push
dec
or
mov
xchg
mov
push
mov
fimuls
push
ret
push
cmp
and
push
cmp
or
sbb
adc
icebp
jns
and
xlat
pop
adc
pop
inc
sub
xor
mov
loop
in
sbb
fcompl
dec
xor
pop
xlat
lea
and
push
jbe
cmovbe
xchg
push
add
les
xor
push
or
fwait
xlat
in
decl
movb
push
and
and
addr16
sub
cmp
ret
fmull
imul
pop
in
sub
notb
push
sub
mov
jmp
pusha
sub
sbb
es
cmpl
fdiv
xor
and
clc
mov
test
test
or
jnp
adc
or
test
lods
adc
clc
loopne
imul
or
push
xor
pop
call
xchg
call
sbb
icebp
or
jp
lods
clc
test
dec
adc
adc
roll
push
test
push
sbb
pop
or
adc
stos
pushf
pop
sar
punpckldq
push
mov
pop
sub
sbb
in
sub
and
xor
stos
pop
imul
adc
call
lea
pop
jmp
push
cmp
sub
pop
out
std
imul
arpl
mov
and
js
pusha
ret
add
mov
out
mov
out
data16
dec
insl
add
ja
adc
andl
cli
mov
add
rcll
sbb
jns
adc
or
sub
push
clc
add
sub
push
dec
jmp
sbb
call
pop
pop
sub
aaa
push
sbb
xchg
xchg
mov
add
cmp
mov
xchg
xor
add
mov
sbb
bound
js
adc
fadd
jmp
cmp
xor
adc
sbb
and
cwtl
push
popf
cltd
lea
leave
xchg
or
dec
cmpl
je
das
cld
and
shrb
lds
sub
imul
leave
or
lea
mov
push
loopne
enter
fs
sbb
xchg
dec
add
or
inc
sbb
loopne
bound
dec
mov
adc
gs
pop
or
pushf
ret
lods
fidivrs
push
ret
or
int
lcall
fsubp
pop
clc
add
lret
subl
inc
cmp
hlt
mov
rorb
mov
xor
popa
mov
or
push
ljmp
sub
push
lret
inc
mov
push
in
ret
and
jae
cmp
out
pop
shlb
into
or
or
fimull
xchg
xchg
test
js
test
mulb
test
mov
push
jnp
inc
adc
nop
add
mov
std
pop
ret
lods
imul
dec
repnz
loopne
mov
fstl
inc
inc
sti
das
and
push
mov
mov
sarb
sub
fiaddl
inc
add
aaa
enter
dec
mov
mov
dec
cmp
add
xor
dec
add
add
mov
js
je
inc
cmp
mov
inc
xor
adc
pop
dec
out
add
inc
js
mov
mov
add
jmp
push
stc
push
stc
sub
fs
popf
push
lock
addb
aaa
push
jmp
repz
dec
push
mov
cmp
je
daa
pop
inc
dec
mov
mov
adc
ja
pusha
and
rorb
xchg
or
mov
sbb
push
jb
jns
pop
sub
sub
es
push
jmp
add
fs
xor
lds
addl
cs
popa
inc
adc
dec
dec
rcrl
test
mov
mov
loopne
and
or
xor
jle
xor
and
mov
popa
nop
inc
pusha
adc
adc
or
pushw
shlb
sbb
sbb
and
lock
iret
inc
add
dec
vpmulhw
jmp
loop
cmpb
xor
mov
fcomps
xchg
loope
inc
and
pusha
int
cltd
sbb
cmpsl
dec
push
mov
lea
popf
aam
or
rcl
push
xchg
les
rorl
sbb
and
cmp
push
cld
cmp
xchg
push
and
sub
push
cwtl
je
dec
push
lret
add
sahf
imul
push
clc
xor
or
sbb
test
push
repnz
pusha
test
hlt
mov
rorb
or
inc
mov
mov
ret
sbb
mov
cmp
xor
add
inc
dec
imulb
inc
or
push
insb
hlt
or
pushf
mov
aaa
jno
sbb
or
xchg
jae
mov
push
push
push
roll
imull
inc
test
mov
roll
enter
mov
js
je
imul
adc
lret
out
pop
mov
int
jg
cmpsb
dec
or
roll
add
adc
pop
xor
mov
push
add
dec
pop
in
and
xchg
fwait
mov
push
inc
subb
aad
dec
jo
or
add
pop
movl
and
nop
push
jns
pop
or
pop
mov
mov
xor
outsl
pop
sub
data16
mov
insl
xchg
test
jne
xor
sub
fsubr
cltd
xor
hlt
out
mov
je
cld
dec
fisubrl
pop
jo
outsl
xor
add
sub
lcall
outsl
and
es
sub
sub
sub
in
push
push
pop
add
rclb
in
outsl
mov
decl
je
ja
xor
dec
xor
cs
xchg
add
cmp
push
and
sub
or
out
cmp
jo
enter
or
mov
sub
punpckhdq
xor
add
push
dec
xchg
inc
lahf
mov
repnz
jo
cs
loope
cmpsl
pop
inc
pop
and
sub
rolb
sub
pop
idivb
jo
add
adc
mov
pop
les
xchg
scas
rcll
cmovns
or
push
mov
pop
jmp
loopne
ss
pop
dec
adc
out
xchg
cltd
int3
push
and
jae
and
cmp
loope
lea
add
adc
mov
pop
push
decl
jge
pusha
lods
sbb
adc
pop
das
jo
out
rorb
push
push
stc
dec
inc
mov
mov
lea
mov
adc
ret
push
or
mov
dec
fidivl
or
fistl
nop
xchg
inc
push
out
xchg
xchg
adc
lock
lea
inc
mov
mov
ja
js
dec
lock
push
cmp
and
sbb
arpl
call
xor
jb
xchg
push
sub
push
loopne
inc
out
cmpsl
xor
jge
mov
jbe
scas
js
not
add
add
fldcw
sub
es
adc
movl
ds
loopne
dec
pop
lret
sbb
cmp
jne
add
test
aaa
fbld
hlt
std
shlb
sbb
cmp
jns
and
inc
mov
add
add
sbb
add
jae
movsl
nop
dec
shr
mov
leave
push
push
xchg
gs
in
mov
xchg
loope
je
and
loop
and
ljmp
jae
rcrb
jb
jp
or
jmpw
xchg
inc
es
or
sbb
aad
out
or
cwtl
and
data16
adc
roll
add
andl
faddl
fs
inc
jmp
in
ret
inc
testb
shrl
xchg
lahf
dec
repnz
stc
push
mov
dec
rolb
testl
push
or
loopne
adc
lods
fcmovnbe
jbe
push
and
lods
ss
fistpl
push
jo
int3
sub
sbb
les
fsubrl
push
push
add
push
test
mov
mov
hlt
cmp
pusha
stos
add
in
nop
sbb
je
scas
and
jecxz
outsl
dec
bound
inc
cmp
and
or
sbb
bound
in
jmp
outsl
sub
adc
adc
sub
push
fsubl
bound
sbb
inc
mov
loop
pop
or
jne
ret
jno
inc
daa
pop
inc
iret
sbbb
jl
dec
in
xor
add
cmp
jne
mov
xor
lret
mov
mov
nop
sbb
pop
jmp
outsb
dec
imull
jl
lock
and
in
es
jns
cli
js
insb
movsb
xchg
push
xor
imul
jo
mov
sbb
jns
xchg
mov
mov
inc
es
mov
dec
cmp
out
push
and
sub
test
fldenv
xor
outsb
jmp
xor
bound
pop
adc
mov
jnp
xchg
and
add
and
cmp
dec
je
adc
loopne
repnz
mov
scas
scas
js
mov
add
fisttpll
jb
inc
push
sbb
fcoms
bound
or
std
loopne
enter
testl
loopne
mov
in
stc
push
outsl
jo
mov
mov
xor
mov
cmp
pop
xchg
out
sub
push
mov
in
jecxz
add
enter
imul
lock
cmp
aaa
popa
xchg
and
mov
loopne
add
into
lock
out
mov
iret
and
loope
sbb
or
push
adc
cs
rcl
outsl
mov
inc
into
push
fwait
xor
rorb
and
imul
nop
and
mov
or
es
rcrb
sub
push
test
out
inc
mov
xchg
in
faddl
lods
loopne
add
sahf
cmc
in
in
ds
in
lods
dec
pop
inc
addr16
pop
or
mov
hlt
mov
jnp
mov
and
fs
pop
test
or
or
or
or
cmp
dec
and
pextrw
loop
sub
mov
mov
cmpsb
lock
daa
pop
add
stos
ret
mov
jp
adc
out
mov
adc
mov
js
jno
movsl
loope
popa
popa
and
jmp
or
sbb
pop
jo
iret
or
adc
and
sbb
jl
sbb
cmpb
push
movsl
jo
shrb
jae
xor
inc
sub
loop
rcrb
test
adc
mov
jge
sub
ret
scas
push
fdivrl
jge
cmp
adc
sub
cmp
and
sbb
sub
xor
fs
popf
push
sahf
inc
push
sbb
jp
in
es
xor
mov
cmpl
sub
add
pop
adc
movsb
push
aam
pop
mov
adc
shll
call
in
jle
xor
out
ret
cmp
dec
test
insb
movsb
pusha
sub
sahf
movb
cmp
mov
test
mov
adc
loope
dec
xchg
bound
dec
push
loopne
fdivr
cld
and
aas
pop
jno
cmp
fstpl
rolb
xor
loope
pop
daa
jno
out
fmuls
fs
pop
sbb
js
add
fsubl
sub
movb
adc
rcl
mov
int
cs
push
scas
push
pop
test
or
aam
lret
xchg
push
lcall
fldt
dec
pextrw
sbb
imul
sbb
inc
lods
and
lods
loope
lods
push
sbb
insb
imul
sarb
movzwl
push
dec
in
cwtl
orb
scas
shll
pop
lds
sub
int
sub
mov
pusha
cmp
sub
fadds
dec
arpl
popa
jb
mov
out
push
add
push
mov
imul
add
loopne
pop
leave
adc
add
in
cmp
mov
adc
add
shlb
adcb
sub
dec
inc
or
inc
lret
repz
outsl
imul
and
sbb
pop
movsl
mov
and
fimull
mov
stos
or
andl
inc
sbb
xor
adc
and
cmp
mov
sub
jmp
mov
jmp
jo
lahf
pop
lock
add
jne
daa
mov
dec
es
add
push
push
hlt
mov
sti
insl
jl
xchg
pop
imul
divb
cltd
jle
test
sbb
adc
adc
push
cld
xor
or
int
cwtl
idiv
sub
hlt
pop
push
add
jle
xchg
pop
sub
pop
sub
add
sub
movl
adc
das
roll
adc
pop
pusha
loopne
pop
ja
push
cmp
xor
jne
sbb
dec
add
insl
scas
insb
push
ljmp
ret
inc
sub
jl
push
inc
out
or
and
call
pop
mov
pop
sbb
add
shlb
xor
dec
pop
hlt
or
sub
cmp
or
cwtl
jmp
jae
dec
sbb
push
loope
clc
pop
testb
or
ret
adc
insb
mov
loop
jb
add
mov
cltd
pop
fists
call
sbb
xchg
rolb
sbb
lods
add
or
or
adc
pop
sub
dec
adc
rorb
jae
or
mov
stos
leave
inc
mov
xchg
dec
iret
add
jae
adc
xchg
inc
fs
cmpsb
lods
add
or
mov
mov
dec
fldl
pop
insb
adc
pop
je
and
sub
adc
push
mov
das
loopw
push
push
mov
data16
xor
sbb
dec
mov
or
orl
pushf
sbb
inc
adc
dec
movb
push
xor
jle
and
negl
sub
lds
xchg
lcall
add
mov
pop
mov
sub
ss
mov
mov
sub
or
lret
push
loope
fdivr
sub
sub
ljmp
inc
adc
stc
imul
rorb
shlb
inc
xor
cmpsl
sbb
xchg
mov
test
sbb
dec
icebp
pop
push
push
mov
push
add
sub
lea
movb
shlb
and
or
adc
xchg
scas
lahf
ret
daa
or
ret
lea
adc
cld
leave
test
pop
xchg
mov
and
or
adc
pop
cmpb
lea
frstor
or
cmp
pop
push
jo
orb
out
or
dec
imul
js
inc
adc
sub
andl
loop
sbb
xchg
and
xchg
mov
xchg
jb
xor
out
mov
pop
pop
pop
ficoms
dec
jmp
fdivr
das
dec
or
loopne
call
lcall
add
jp
arpl
loopne
loopne
or
add
imul
inc
ss
mov
or
enter
lds
cli
mov
mov
sarl
or
or
pushw
or
push
sub
pop
or
push
push
call
mov
dec
roll
adc
or
lahf
push
mov
ja
clc
push
aam
mov
dec
enter
sar
mov
sbb
or
mov
push
je
pop
pop
test
pop
and
popf
or
es
add
sbb
lods
neg
sahf
inc
sbb
cmp
and
call
mov
or
mov
sub
outsb
push
pop
push
bound
push
sbb
push
in
pop
clc
jo
out
dec
xorl
and
inc
jmp
cli
dec
jno
inc
or
ss
mov
or
and
imul
cs
dec
sub
push
inc
addr16
mov
pop
cwtl
cmp
jbe
mov
dec
jp
shll
jno
mov
pop
imul
es
inc
ljmp
icebp
dec
cmp
test
mov
jno
adc
rorl
inc
and
stos
shrb
sub
int
mov
mov
es
rcl
add
std
cmpsl
cli
loopne
sbb
push
push
pop
and
push
xchg
adc
mov
sbb
cmp
mov
push
dec
repnz
add
push
pop
and
xor
push
mov
fucom
and
jmp
or
push
sahf
inc
in
aam
cwtl
insb
inc
cmp
call
inc
sbb
dec
mov
out
shrl
loop
or
jle
sbb
test
sar
pop
dec
and
push
fs
vrcpss
rcr
lea
xchg
adc
and
and
daa
loopne
orl
push
nop
or
out
or
test
jne
mov
fsubs
jmp
push
das
bound
inc
mov
es
insl
rorb
repz
or
in
cmc
data16
sbb
test
xlat
push
jbe
arpl
cmp
cmpsb
mov
mov
cs
js
ret
push
jle
jo
pop
pop
fists
sub
out
cmp
add
or
shr
or
jg
lea
mov
enter
pop
cld
and
and
xor
fidivl
jb
cmp
loopne
jle
roll
sbb
and
adc
ret
sbb
mov
loopne
sbb
push
addb
imul
or
inc
add
fdiv
mov
dec
fbstp
les
rcll
movups
push
jo
cwtl
ffree
push
aam
pop
xchg
mov
inc
fcoml
dec
adc
cmp
jmp
rorb
add
xor
movsl
add
or
dec
jo
xchg
sbb
and
jne
push
jo
nop
inc
adc
out
shld
and
inc
mov
push
movsl
xor
push
in
pop
movsb
aam
xor
adc
adc
iret
mov
es
aaa
lods
nop
sub
adc
lea
and
add
add
outsb
dec
jge
add
inc
jae
add
pop
add
cmp
or
dec
inc
push
movsl
adc
and
pop
and
xlat
adc
sti
das
inc
js
lcall
adc
out
repz
or
xor
sbb
addr16
fninit
rolb
and
sub
push
fdivrp
iret
testl
inc
lea
fcmovbe
inc
shrl
add
and
push
out
cmp
mov
mov
insb
addb
nop
test
aam
xchg
fucom
ret
and
mov
insb
cli
cmp
cwtl
addb
add
xor
mov
inc
adc
js
add
jmp
loop
jnp
neg
ret
push
sub
or
movsb
xorb
xor
xchg
xchg
jns
or
ja,pt
xor
addb
mov
shlb
leave
sbb
and
out
sub
xchg
sbb
xor
pop
or
sub
rcrl
mov
imul
push
mov
or
ss
add
fsubs
sub
aaa
inc
je
fildll
cmp
loope
sub
fmull
or
adc
cmp
cmp
sbbb
add
mov
and
out
and
aas
outsl
mov
daa
and
xchg
dec
lret
stos
out
and
or
ja
in
and
push
mov
mov
and
or
dec
out
insb
xchg
inc
push
mov
sub
int
push
push
mov
and
cmp
xor
jg
fistl
je
ss
jns
mov
mov
fildl
sub
lods
fs
sbb
and
cmp
iret
fidivrl
rclb
inc
pop
test
adc
adc
push
aad
and
cltd
mov
aam
xchg
iret
xor
and
add
xor
divl
inc
and
lods
or
add
adc
or
lods
scas
lods
xor
inc
add
roll
jg
add
inc
add
iret
pop
rcrl
jle
insb
and
sbb
dec
add
and
xchg
pop
or
mov
xchg
mov
push
fs
adc
push
jns
imulb
and
inc
and
sub
push
inc
and
push
shrb
outsb
das
rcrl
add
ret
xor
xor
arpl
sti
mov
popf
push
bnd
adc
inc
xchg
sub
add
mov
xorb
test
jnp
xor
xor
add
test
stos
ja
lock
inc
adc
jb
arpl
or
or
fiadds
lock
mov
scas
dec
sbb
pop
pop
and
or
jb
popf
push
sub
clc
filds
add
or
inc
add
and
dec
inc
aam
inc
mov
jmp
push
imul
mov
push
das
lock
inc
jg
or
cmp
xchg
in
or
in
je
sub
aas
stc
xchg
mov
rorl
cmp
push
ljmp
pusha
fsub
mov
push
adc
adc
aad
mov
sbb
sub
and
dec
repnz
xchg
pop
sub
or
mov
add
stos
pop
jo
je
lret
sbb
fidivl
nop
sub
vpcmpistri
add
lcall
push
inc
mov
add
ret
or
insb
adc
bound
sbb
inc
shlb
test
shll
jle
push
into
push
sub
pop
inc
popa
repnz
mov
cwtl
cli
xorb
adc
push
aam
aam
sahf
ret
inc
imul
jmp
jmp
icebp
orl
mov
lock
mov
inc
mov
sti
cmp
rcr
add
cmp
sbb
mov
sub
and
popl
jnp
or
fbld
rcll
daa
push
fs
pop
mov
leave
cltd
pop
pushf
fwait
sbb
add
rcrb
movhps
std
push
cmp
dec
mov
in
push
out
mov
int
imul
mov
push
dec
test
push
pop
jl
and
mov
xchg
cmp
sub
rorb
add
nop
fwait
dec
aad
or
mov
and
lcall
add
inc
xor
or
cld
add
in
lcall
out
cli
test
stos
xchg
sub
xor
fstpl
std
xor
push
das
out
stos
xorl
dec
das
dec
push
test
add
add
add
and
icebp
mov
arpl
xor
fwait
mov
negb
popa
push
cmp
add
jbe
je
inc
jae
pop
or
sbbl
test
lock
adc
push
cmp
mov
test
push
and
loopne
jle
cli
and
and
ss
ljmp
mov
jo
mov
pushf
push
into
adc
mov
mov
mov
test
xchg
mov
or
xor
push
fstl
cs
jae
add
mov
mov
popf
lods
lods
xchg
popa
adc
ret
loop
jne
fnstenv
test
or
jge
into
xor
adc
aaa
add
jmp
outsb
xchg
mov
out
psubq
mov
push
repnz
push
imul
sahf
inc
lods
add
insb
adc
xor
pop
faddl
pop
and
push
rolb
pop
xor
mov
inc
mov
adc
jle
and
and
incb
and
incb
fstps
or
inc
cmp
jbe
das
xchg
mov
push
cmp
ret
add
movd
inc
and
movsl
mov
push
stos
mov
test
sahf
ffreep
mov
inc
adc
push
nop
sahf
hlt
inc
sub
jo
insl
lock
lcall
repz
pushf
or
jnp
fsubl
pusha
adc
addps
add
pop
mov
sbb
repnz
test
sahf
imul
pop
adc
cmp
xor
push
sbb
nop
inc
mov
or
jge
ja
push
jnp
pop
sub
fidivs
dec
inc
hlt
jl
and
repnz
das
inc
xlat
add
rcrb
add
sbb
mov
push
xchg
push
push
push
mov
jge
and
nop
je
and
out
sbb
les
fsubs
push
inc
jb
xchg
add
lahf
push
mov
pop
add
push
test
xor
dec
pop
pop
pop
call
add
add
push
xor
lods
pop
aas
cmp
push
imull
mov
pop
sub
or
insb
or
fwait
outsl
into
adc
push
and
xchg
inc
mov
adc
mov
out
insl
adcb
jo
sbb
xor
aas
xchg
xor
push
mov
or
pop
cmpb
mov
inc
jne
data16
icebp
adc
popa
or
pushf
aas
xchg
je
roll
negl
popa
outsb
dec
outsl
or
ret
shlb
movsb
shl
xor
js
push
add
dec
js
jmp
mov
pop
xor
and
lds
sub
daa
loope
je
inc
add
enter
mov
or
sbb
add
sahf
fs
decl
int3
and
test
imul
push
mov
inc
inc
inc
movsb
test
mov
inc
inc
inc
mov
mov
inc
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
add
inc
inc
inc
cs
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
push
leave
pop
inc
inc
push
pop
ret
push
sti
sub
and
xor
jno
inc
loope
lea
lds
ret
inc
adc
sub
dec
fmull
sub
shlb
in
movsb
cld
push
mov
test
and
mov
inc
lret
push
mov
sbb
dec
gs
sub
test
rolb
movsb
xor
aam
fsubs
xchg
dec
push
or
fcompl
push
movsb
xor
sub
cmp
nop
lret
dec
in
inc
sub
push
pop
lock
test
cmp
cmp
xchg
add
mov
push
in
add
mov
or
or
lret
push
adc
adc
movsb
jb
adc
lret
cmp
dec
sub
push
sbb
sub
gs
sub
xor
xchg
add
push
movsb
xor
test
les
nop
lret
loopne
and
dec
adc
and
inc
imul
push
cmpsl
fstpt
test
lods
add
les
sub
js
add
or
rcl
pop
pop
sti
or
loope
insb
outsl
jae
and
sub
dec
pop
in
and
adc
bound
loope
roll
testb
imul
out
mov
pop
daa
inc
push
dec
mov
mov
mov
jae
imul
fcomps
test
sbb
arpl
jae
fsubrs
fs
lea
or
push
jp
in
subb
lcall
insl
sub
and
jbe
pop
pop
xchg
or
pop
xchg
sbbl
jns
subl
fmuls
pop
mov
pop
dec
test
movl
or
stos
jns
jnp
xor
dec
outsb
push
out
iret
add
popa
and
jns
in
jbe
cwtl
xor
jbe
jbe
in
pop
xchg
pop
or
add
jo
add
and
xchg
jnp,pt
nop
js
add
sub
jae
outsb
das
pop
fs
dec
aaa
fdivl
das
js
jne
pop
inc
cmp
nop
xchg
cwtl
adc
pop
and
add
movl
and
or
in
sbb
jno
adc
lea
imul
pusha
add
jl
hlt
loopne
pop
jne
fldt
and
mov
push
fisubs
in
xlat
out
pop
movsl
pop
push
sbb
outsb
sub
push
and
sbb
aaa
subb
test
dec
push
test
dec
inc
push
dec
push
pop
dec
xlat
inc
ja
jo
inc
loope
jmp
sub
sbb
mov
xor
jmp
xchg
nop
dec
and
push
or
popf
or
jg
jl
mov
sub
outsl
push
or
pop
jmp
movsb
mov
push
jl
pop
js
ret
test
repnz
pop
dec
pop
ret
push
inc
ja
andb
dec
jl
das
or
inc
sub
jecxz
push
and
imul
push
inc
subb
xor
mov
gs
and
adc
lcall
add
jg
push
inc
insb
push
jns
jo
xorb
add
cmpb
test
or
or
or
out
sbb
sbb
shlb
sbb
cld
ficomps
add
and
movsb
fidivrl
rolb
add
pusha
incb
cld
aas
xchg
aas
sbb
inc
add
add
sub
aaa
mov
add
mov
in
rcl
cmp
ss
addb
stc
imul
jmp
add
mov
out
add
xor
cmpsb
push
jbe
lret
fwait
int
sti
push
sub
push
movsb
out
jmp
in
pusha
repz
shr
dec
fmull
mov
dec
pop
aam
add
mov
mov
inc
jmp
fistpll
addb
push
in
ret
sub
push
bound
mov
cmpsl
insb
mov
pop
sub
popa
fisttpl
stos
mov
jnp
das
scas
test
dec
mov
inc
inc
and
cmp
jbe
scas
inc
fcomps
jl
push
push
add
cmpsb
loope
out
xor
sbb
orb
test
fildl
aaa
add
fs
dec
dec
pushf
add
clc
leave
inc
cmp
lock
add
test
xchg
fwait
dec
popa
rcr
in
flds
nopl
xchg
push
inc
pop
jle
rcrl
les
test
adc
mov
testl
pop
mov
cmp
ljmp
mov
into
shl
mov
add
adc
out
sbb
stos
jo
jo
mov
mov
int
fidivrl
je
cwtl
add
bswap
adc
or
jb
jae
es
cmpsb
xor
pop
dec
hlt
inc
or
push
test
cmpsb
adc
fcoml
sub
pop
dec
or
push
inc
pop
fs
or
fldl
movsl
cpuid
gs
nop
bsf
lret
lock
xchg
ja
push
xchg
push
mov
cli
cmp
repnz
fcomps
fs
inc
or
mov
push
jo
sub
lods
loope
sub
pusha
xchg
add
inc
push
sbb
xchg
in
push
xlat
lods
sbb
add
mov
pop
push
jns
int
call
or
enter
mov
adc
fdivs
push
mov
ss
sbb
inc
sub
test
xchg
or
rol
dec
jo
jo
cwtl
mov
or
mov
and
rorl
fmuls
pop
and
mov
in
call
fstl
adc
testl
xor
inc
orb
pop
and
jns
push
lcall
pcmpeqw
sub
imul
push
pop
adc
push
jbe
mov
mov
imul
data16
daa
dec
outsb
push
imul
popa
pusha
jo
mov
ret
xchg
add
mov
dec
out
jns
xchg
sbb
sub
or
sbb
aam
cmp
ss
push
jbe
dec
sub
jb
iret
imul
fimull
or
or
or
sub
or
mov
imul
add
fisttpl
sub
sub
popa
sarl
syscall
mov
sbb
lds
loop
shrb
nop
out
ss
out
outsb
test
enter
or
xchg
rorb
clc
jo
test
add
push
mov
cmp
cmp
add
push
dec
xor
xor
xor
xchg
loop
pushf
xchg
or
cs
push
push
and
imul
dec
jb
and
and
cwtl
mov
sub
inc
lret
int
sub
mov
mov
jb
je
inc
sub
inc
clc
rcrb
pop
jnp
shl
inc
adc
dec
repz
sbb
push
push
inc
enter
jnp
pushf
mov
inc
jbe
push
pushf
nop
push
jnp
repz
push
call
push
in
fdivp
xor
cld
jle
hlt
or
add
mov
mov
adc
inc
dec
add
add
and
mov
out
jnp
pop
insb
push
xchg
push
add
cmpsb
mov
push
push
test
inc
clc
insb
pop
mov
push
inc
sub
inc
mov
add
sahf
int3
outsb
data16
push
mov
dec
inc
pop
jns
or
pushf
in
inc
jge
push
jns
inc
movsb
int
pushf
outsb
pop
addr16
push
fsubrs
push
pushf
mulb
nop
das
lods
into
lcall
sub
sub
dec
mov
repz
in
test
mov
mov
insb
adc
js
clc
fs
fidivs
mov
mov
dec
dec
fcos
sbb
addb
sub
push
mov
xchg
add
sub
loop
lret
push
adc
daa
xor
hlt
mov
inc
and
inc
mov
pushf
mov
sarb
inc
xchg
mov
iret
xchg
add
fiaddl
mov
mov
ljmp
push
pusha
shrl
out
push
pop
loopne
push
dec
iret
jo
inc
mov
pop
adc
mov
sbb
icebp
cwtl
push
aaa
and
xchg
movsb
jo
enter
jae
push
jno
and
pushf
adc
lret
in
mov
lods
push
into
jp
enter
inc
pop
adc
pusha
pusha
leave
adc
loop
push
or
pop
push
xchg
rcrl
push
jbe
enter
mov
lret
sbbb
sbb
xchg
pop
and
lods
loopne
push
push
push
pop
insb
pop
sbb
test
sahf
out
popa
pop
jae
pop
leave
add
cmp
xchg
daa
lods
stos
sbb
sbbb
rcrb
test
icebp
lds
adc
scas
enter
sbb
inc
push
inc
ss
addr16
mov
outsb
inc
dec
je
mov
pop
inc
fimull
enter
and
add
dec
push
in
ror
and
sub
sub
or
daa
nop
sub
enter
inc
lock
dec
clc
inc
clc
sub
push
xchg
js
aas
js
je
cwtl
int3
add
lahf
adc
dec
sbb
inc
sahf
divb
adc
and
fs
sbb
xchg
js
inc
add
push
jo
and
pop
das
xor
xor
mov
xor
jb
xor
and
xchg
in
or
and
jmp
cmp
or
aas
mov
adc
int3
mov
test
xchg
or
insb
out
outsl
inc
out
mov
pop
shlb
add
and
jmp
popf
and
push
cs
rcl
and
push
filds
xlat
int3
jnp
pusha
or
pop
movsb
pop
inc
test
addl
ret
sub
mov
inc
sbb
or
cmpsl
shl
rolb
jae
xchg
push
mov
dec
rclb
xor
rcrl
cmpsb
rol
cmpsl
lea
mov
and
mov
adc
lods
enter
push
lods
cmpxchg
dec
xchg
jno
or
cs
or
add
inc
imul
inc
les
cmp
push
sti
push
xchg
adc
or
sub
lea
aaa
aas
sub
pop
and
mov
fsubr
or
fadds
mov
movsl
xlat
insl
jp
adc
jb
ss
mov
pop
lods
or
into
or
loopne
in
jmp
push
cmp
and
cltd
bound
hlt
lea
pop
dec
lret
cld
pop
mov
lahf
or
mov
add
js
popf
mov
sub
lods
sti
cmp
cmp
jne
vmread
inc
mov
add
jne
or
or
add
rclb
mov
je
arpl
lret
addr16
popf
test
inc
dec
dec
sbb
loopne
mov
sbb
sub
dec
sub
and
pop
clc
pop
sub
add
and
lock
mov
jo
loopne
add
mov
pop
sub
or
mov
sub
xchg
hlt
mov
ret
or
and
dec
pop
push
dec
in
sub
lock
xchg
pop
je
inc
sbb
xchg
jns
xchg
push
sarl
mov
sbb
xchg
sbb
rorl
cs
adc
push
push
dec
lret
mov
or
femms
mov
fisubrl
xchg
adc
out
jae
push
hlt
and
push
cwtl
cmpsl
jo
arpl
enter
mov
adc
sar
mov
lea
ret
inc
repnz
std
add
cmp
cmpsl
adc
rolb
jmp
pop
dec
ret
inc
popa
inc
dec
repz
mov
movb
test
xlat
dec
in
stos
xchg
add
add
xchg
push
adc
call
xor
mov
cmp
cmp
cltd
cs
pop
test
xchg
fdivs
sbb
imul
cld
out
xor
dec
popa
xchg
add
lcall
fs
mov
or
xchg
orl
seto
or
fcmovnbe
jne
sub
scas
and
jb
adc
cmpsl
pop
hlt
loop
push
mov
aam
ret
shlb
mov
push
or
leave
shll
mov
and
or
cld
mov
adc
pop
mov
jmp
mov
sbb
bound
adc
outsl
adc
mov
scas
jbe
sbbb
andb
sarl
inc
and
or
fildl
scas
sahf
fstpl
lea
adc
stos
fwait
sub
nop
lret
or
sub
xchg
lds
sub
sub
sbb
sti
push
sbb
sar
movsb
rcll
in
rolb
cmp
xchg
ljmp
add
pop
xor
repnz
pop
in
dec
sub
add
outsl
test
add
cld
sbb
push
sbb
rolb
movsl
sub
lret
or
dec
fiadds
inc
nop
push
push
leave
fwait
dec
jae
sub
sub
jno
cltd
imul
out
mov
pushf
mov
enter
and
sub
add
lock
push
dec
sub
add
outsl
and
dec
inc
popf
or
popa
push
mov
adc
xchg
jge
aas
mov
push
icebp
cvtdq2ps
cmp
ja
push
mov
inc
andb
mov
add
push
mov
xor
mov
jb
mov
jl
pop
add
inc
enter
or
negb
jnp
mov
js
daa
iret
sahf
sahf
divl
mov
lahf
inc
mov
push
outsl
sbb
push
or
or
push
add
add
cmp
and
sbb
cmp
cs
cmp
inc
and
int3
fisubs
cwtl
iret
push
movsl
call
xchg
mov
aad
xor
xchg
mov
xchg
inc
mov
jmp
add
fwait
insb
stc
mov
cwtl
loopne
adcl
aam
inc
outsb
and
ficoms
adc
mov
shrb
add
pminsw
inc
popl
and
mov
rcr
jo
loop
mov
sbb
inc
pop
cmp
sbb
mov
iret
inc
mov
xor
and
sbb
bound
movsb
add
int3
xor
sbb
sar
fdivl
add
xor
mov
push
sub
ss
js
lea
xchg
mov
sbb
jge
fs
shrl
and
adc
cmp
mov
imul
ja
mov
xchg
cmp
push
pop
sub
insb
lcall
push
inc
imul
dec
jne
mov
hlt
jne
movb
xchg
cmc
and
and
add
or
iret
add
jne
add
inc
pop
adcl
mov
sbb
aaa
sarb
or
mov
jb
or
movsl
sub
mov
stos
jmp
ret
dec
add
mov
xchg
lret
jne
lods
xor
popf
iret
imul
cmp
test
sbb
pusha
pop
adc
sbb
push
add
adc
mov
aam
mov
dec
and
xchg
pop
cli
inc
add
dec
jnp
xor
xor
rolb
inc
jmp
push
sbb
fisubs
aam
movsb
xchg
test
push
aas
bnd
sbb
fisubl
adc
fidivrs
mov
dec
icebp
jle
push
xor
dec
mov
mov
cmp
jbe
push
sbb
test
cmp
in
mov
decb
and
test
mov
mov
clc
mov
cmpsl
add
sub
cli
ret
sbb
dec
cld
rolb
or
das
inc
push
push
push
dec
dec
jo
repnz
sbbl
pushl
push
cmpsb
js
xor
cmpsb
jmp
xor
or
stc
in
pop
adc
sbb
pushf
pop
inc
pop
dec
jmp
inc
sbbb
push
sbb
shlb
insl
roll
lods
outsl
jmp
shlb
dec
mov
repnz
xor
or
les
addl
cmpl
or
mov
leave
sarb
loopne
jmp
cli
in
pusha
sbbl
or
mov
sbb
pop
lcall
stos
out
add
pusha
xchg
nop
data16
inc
mov
push
jne
lea
inc
push
jle
adc
cltd
pop
ja
rclb
andl
or
rolb
stos
push
data16
ljmp
out
test
mov
cltd
test
add
jl
push
gs
addr16
loop
push
outsb
loope
adc
inc
xchg
xor
popa
pushf
sbb
xchg
or
adc
mov
xor
inc
insb
fcomps
or
insb
fs
or
xchg
or
shll
les
inc
and
daa
adc
pop
incl
je
jno
and
push
add
push
sbb
fimuls
jb
inc
cmova
jae
mov
and
cmpsl
or
add
test
xchg
or
jno
out
pop
pop
push
popa
jo
jns
enter
push
popa
push
stc
iret
dec
xchg
test
dec
cmpsb
rclb
add
jb
inc
and
mov
out
jp
jb
xchg
mov
loopne
pop
arpl
mov
jno
mov
je
xchg
pop
push
mov
xchg
outsb
loopne
jecxz
iret
dec
gs
loopne
and
pop
adc
or
mov
fs
inc
mov
enter
cmp
dec
imul
cli
nop
cwtl
cmp
or
jg
jmp
xchg
popl
imul
inc
bound
jg
mov
jecxz
out
push
cs
mov
rol
jne
bound
sbb
pop
push
rol
pusha
lock
popa
mov
inc
or
xchg
push
inc
inc
jae
iret
push
movsb
je
outsb
add
insl
jae
test
cmp
xor
push
in
lods
test
pop
jns
shlb
jmp
adc
aaa
jno
fiaddl
daa
pop
das
mov
or
inc
imul
sub
mov
subb
shlb
popa
push
pushf
dec
or
push
gs
scas
test
lods
popa
xlat
out
xor
and
push
aad
adc
and
xor
out
cmp
mov
mov
inc
subb
mov
cmp
push
mov
sub
inc
je
mov
jno
jne
adc
shlb
push
mov
inc
test
xchg
push
fisttps
popa
imul
rol
mov
push
xchg
nop
dec
or
addr16
xor
das
adc
cmpsl
sbb
cltd
lods
mov
adc
or
bound
add
das
cwtl
fidivrl
or
lahf
addr16
xor
sub
imul
das
fists
loop
or
xchg
push
xchg
inc
mov
adc
adc
cmpsl
mov
aaa
jl
jne
xchg
jae
or
aad
jg
xor
pusha
and
inc
cmpsl
adc
jno
sbb
movl
pop
pop
lock
ja
or
outsl
pusha
add
arpl
or
mov
xor
sub
cmp
inc
nop
sub
or
push
adc
insb
xchg
movl
xchg
xchg
out
sbb
shll
popa
sub
dec
mov
xor
adc
jo
leave
xchg
outsl
fs
bound
and
jl
lcall
nop
inc
adc
mov
cld
mov
pop
aaa
iret
lret
imul
jl
xchg
push
getsec
cmpsl
adc
in
addb
xor
movntps
push
inc
shll
push
mov
pusha
push
add
xor
pop
daa
push
pop
or
dec
jbe
cmpsl
lods
sbb
jae
sub
inc
lahf
shll
dec
push
push
das
adc
je
lods
jo
and
xlat
push
ljmp
cmp
adc
mov
xor
xor
mov
es
fsubl
and
nop
pop
das
xchg
rcpps
imul
jne
mov
and
outsl
push
adc
clc
gs
cmpsb
mov
push
pop
aaa
addr16
xor
mov
adc
jae
outsl
xchg
bound
or
into
das
xor
xor
xor
jecxz
mov
xchg
push
add
xchg
push
mov
cmp
mov
test
loope
push
cs
mov
push
lea
in
out
in
cmove
add
inc
push
out
cmp
repnz
inc
pushf
in
sti
iret
xor
adc
xchg
xlat
inc
lcall
adc
sbb
arpl
jmp
pop
or
pop
sbb
psubd
add
push
inc
sub
and
push
pop
add
jbe
lcall
inc
in
inc
sahf
or
arpl
mov
in
sbbb
inc
adc
xchg
mov
popf
push
cmpsl
stos
push
adc
inc
dec
adc
sbb
push
and
js
xchg
adc
repnz
adc
jo
aaa
xchg
mov
fimuls
xchg
mov
pushf
lock
fdivl
jb
pop
xor
inc
loope
pop
dec
sbb
xchg
insb
sbb
into
arpl
repnz
es
sahf
stos
test
mov
push
xchg
or
and
xchg
and
and
and
xorb
sub
daa
sbb
cmp
sub
enter
loopne
sub
cmp
jnp
sbbb
xlat
push
in
mov
rcrb
mov
push
les
inc
pop
les
add
out
inc
xlat
jle
rorb
cmp
push
jb
inc
xchg
rcl
pop
sbb
leave
adcb
add
rep
inc
add
out
stc
add
xchg
out
jl
xor
enter
lods
mov
and
sti
inc
lock
js
cmpsl
lahf
add
and
mov
and
cmp
sub
out
into
fcomps
popa
or
add
dec
js
inc
adc
jb
push
and
jb
ret
pop
into
int3
aam
adc
inc
pop
out
and
roll
add
sbb
rclb
push
mov
dec
pop
test
and
insl
or
or
mov
clc
mov
mov
push
or
sub
test
jmp
sbb
lods
lcall
sub
and
or
mov
fcmovnu
cld
aaa
je
idivb
xchg
inc
popa
add
fcmovnb
iret
and
adc
stc
xchg
test
jo
fwait
cmp
pop
xchg
mov
pop
je
ret
cld
and
mov
jle
mov
push
add
dec
xor
in
pop
in
lock
sub
jle
xchg
pop
ficompl
fiadds
or
notl
lret
pop
jge
xor
mov
dec
sbb
adc
or
push
pop
sbb
lret
pop
push
adc
pop
inc
lahf
fdivrs
pop
fcmovnb
add
dec
add
fcoms
mov
icebp
mov
sub
addb
adcb
xor
push
out
ds
cwtl
nop
mov
adc
ds
adc
sub
push
or
nop
xlat
push
push
or
sti
pop
or
jmp
mov
aas
or
std
arpl
out
sub
sub
inc
add
nop
and
mov
adc
fldenv
mov
mov
adc
fiadds
enter
xor
xchg
pusha
jnp
xlat
pusha
fldl
hlt
test
jo
push
push
jnp
inc
sbb
jne
pusha
jno
and
fidivrl
push
imul
and
pop
mov
sbbl
cmpb
or
aaa
cmpb
adc
mov
sbb
ja
popa
mov
sub
add
or
ds
sub
dec
andl
loope
mov
andl
daa
movsl
push
in
ljmp
sbb
popa
sub
push
pop
in
stos
and
adc
mov
mov
xchg
jmp
cmp
mov
xchg
lret
inc
scas
iret
jge
xchg
ss
xchg
test
cs
add
mov
dec
ret
or
pop
lock
jge
ret
repz
imul
sbb
push
xor
push
dec
inc
mov
fld
or
sub
sub
loopne
popf
scas
push
nop
mov
inc
into
rol
je
pop
adc
push
mov
cmpsb
sub
jne
jg
lods
xor
test
mov
dec
jl
adc
jl
mov
mov
insl
jmp
movsl
push
int3
icebp
push
inc
and
jo
sub
test
repz
inc
jmp
daa
testb
add
xor
popa
inc
xor
pop
imul
push
out
mov
push
mov
xor
mov
arpl
sub
xlat
xor
test
push
push
dec
outsb
sub
rolb
add
jg
test
add
jne
pop
push
setae
movb
test
insl
jecxz
cmp
xchg
mov
in
lods
pop
xlat
in
mov
call
lret
aam
or
sbb
cli
push
add
inc
cmp
cmp
jge
add
xchg
mov
fstp
int
and
xchg
movsb
mov
push
inc
in
aaa
lods
out
jnp
cmp
fs
leave
xlat
arpl
jo
and
mov
out
cmp
lds
pop
cmp
or
or
inc
outsb
aas
mov
push
xor
mov
push
js
into
mov
stos
lret
loopne
inc
pop
fs
lock
les
jns
movsb
or
inc
cwtl
lock
sbb
icebp
fdivl
cld
push
pusha
pop
jns
adc
call
or
and
into
insb
repz
add
mov
repnz
out
inc
cmpl
dec
out
pushl
lahf
imull
mov
movsb
je
mov
sbb
jno
and
inc
jle
pop
sub
mov
xor
jae
loopne
lret
or
mov
cs
add
xor
in
cmp
sbb
ret
in
mov
test
pop
lea
dec
addr16
inc
pop
pop
add
cmp
pop
bound
jp
fnstsw
mov
fadd
lods
push
adc
inc
daa
push
int
stos
pop
xor
dec
and
je
loop
and
out
inc
xor
dec
imul
push
inc
mov
inc
loope
nop
mov
push
and
loopw
push
mov
cmpb
jp
xchg
xor
fisubrs
mov
loope
jmp
or
popa
inc
andb
into
adc
adc
cmp
nop
test
in
adc
loop
cmp
sar
lock
or
in
inc
loope
push
add
push
push
adc
arpl
cmp
sbb
rorb
repz
mov
xlat
push
repz
mov
in
das
mov
loopne
orl
adc
pop
fbstp
out
cld
rclb
mov
inc
cmp
or
add
into
add
lret
pop
sbb
sarl
adc
test
or
inc
sbb
inc
je
push
sub
sbb
lods
orb
xor
repnz
pop
das
hlt
inc
push
popa
cld
mov
insl
mov
lods
sub
dec
jmp
aam
mov
sbb
in
xor
pop
pop
inc
jl
rcrl
int3
lock
mov
inc
mov
inc
inc
cmp
jne
movb
popa
push
push
lcall
mov
idivb
add
xor
push
negb
inc
stc
sbb
out
add
inc
pop
sub
inc
add
cmp
call
inc
es
xchg
in
inc
inc
nop
cmp
aas
inc
and
popa
push
or
fcomps
inc
pop
jns
inc
inc
dec
inc
movsb
xchg
inc
nop
sub
orb
or
dec
dec
inc
insl
pop
stc
pop
nop
ss
add
inc
in
pushw
xor
push
inc
enter
insb
inc
push
mov
inc
add
jo
insl
cmp
nopl
pushf
xchg
push
jo
push
and
sahf
add
cmpsb
mov
cmp
ss
in
cmp
adcb
adc
push
dec
test
addr16
jmp
mov
mov
pop
sub
push
mov
jecxz
or
test
ret
outsl
lods
or
sub
sbb
add
inc
push
leave
add
sub
ret
andb
push
pop
sub
in
cmp
pop
loope
addr16
mov
or
jo
hlt
pop
mov
inc
int3
mov
push
call
call
nop
inc
test
imul
push
jl
and
xchg
jns
clc
inc
pop
pusha
popf
cmp
insb
out
xlat
jne
inc
pop
or
mov
loopne
inc
push
push
jp
addr16
iret
in
scas
xor
roll
or
inc
int
test
loope
enter
and
iret
or
mov
mov
and
jne
mov
mov
jmp
aaa
xchg
jle
clc
cltd
mov
xor
inc
add
pusha
ja
movsb
xor
mov
and
mov
push
les
pop
hlt
out
rcll
sub
jae
ss
mov
inc
dec
lock
imul
inc
outsl
push
inc
sub
jae
dec
and
adc
lcall
xor
inc
xchg
es
mov
push
in
or
xor
inc
mov
pushf
nop
fadd
ret
or
mov
cli
cmpsl
fstpt
in
adc
hlt
movsb
test
jbe
add
inc
cwtl
or
rorl
lcall
push
movsb
jbe
lcall
mov
lcall
mov
inc
les
enter
shlb
fcomp
loopne
cld
and
xchg
mov
inc
xchg
out
xchg
mov
cli
inc
mov
or
in
mov
add
shll
shlb
jbe
pop
xchg
adc
jae
idivl
in
xor
pop
loopne
dec
outsl
cmpsl
dec
dec
mov
bound
testl
add
push
into
jns
imul
outsb
test
insb
fmul
in
insb
insb
pop
push
outsl
pop
or
and
push
mov
call
pop
xchg
nop
mov
add
cwtl
pushf
inc
stc
enter
and
mov
wrmsr
or
hlt
inc
sub
test
je
add
pshufd
inc
fmuls
dec
sbb
mov
push
pop
jbe
popa
cmp
aam
jo
xchg
sub
orb
or
loopne
or
add
cwtl
add
add
or
dec
sub
cwtl
xchg
data16
jp,pn
push
jne
push
pop
in
cmp
movsb
cltd
xchg
or
xor
fcoml
cmpsb
dec
xor
fstpt
jecxz
push
add
xorl
emms
pop
mov
bt
jae
cmp
add
cli
mov
jmp
adc
rorb
mov
push
test
sub
cltd
test
pop
clc
and
fnclex
test
bound
push
push
insb
push
inc
jle
or
ret
shll
sti
or
rol
rclb
loopne
push
dec
aam
pop
insb
pusha
xor
mov
xchg
xchg
lods
add
and
and
mov
cld
popf
adcl
outsb
sti
inc
inc
stos
lds
or
sbb
lods
es
mov
add
and
xor
test
or
shll
or
jo
push
add
cwtl
jne
xor
data16
dec
imull
add
cmp
adc
fidivrs
sbb
ret
rolb
popf
pop
es
in
add
add
add
add
add
mov
das
pusha
rorl
cs
jecxz
rolb
dec
icebp
sub
fmuls
cltd
nop
dec
mov
rorb
enter
inc
cwtl
xlat
add
mov
test
loopne
cmp
jmp
mov
push
mov
pop
int
pop
sarl
add
push
mov
mov
pushf
lea
push
pop
sahf
push
dec
test
dec
and
imul
push
add
xchg
dec
das
aas
dec
and
subb
adc
cmp
insb
imul
cmp
push
mov
sti
adc
adc
xor
push
je
pop
ret
mov
jne
les
ja
nop
push
adc
adcl
sub
push
and
loopne
push
les
lcall
dec
or
int3
adc
add
ret
add
ret
repz
sbb
faddl
mov
adcl
mov
leave
es
mov
push
imul
fisttps
mov
mov
mov
jne
pushf
cmp
mov
mov
add
xor
and
out
push
or
pop
lret
sub
add
into
enter
push
pop
cmp
repnz
mov
dec
mov
in
stos
adc
lock
mov
jmp
pop
scas
xchg
xlat
adc
mov
inc
test
adcb
mov
pop
add
mov
sub
add
add
add
or
add
xor
arpl
sub
out
ret
ds
dec
incb
cltd
jge
out
sbb
int3
and
ljmp
xchg
mov
faddl
cmc
rolb
add
mov
mov
inc
and
jae
jge
inc
faddl
adc
inc
in
jge
jge,pt
mov
xchg
cld
push
dec
xor
jns
ret
xor
push
dec
adc
mov
jge
jge
aam
inc
insl
shll
cmpb
mov
or
adc
rorb
testb
dec
jmp
sub
or
nop
or
xlat
out
xlat
adc
nop
je
test
add
dec
add
lea
dec
pop
mov
rol
sub
cmpsb
mov
insb
add
pushf
jae,pn
xchg
out
dec
xchg
fdivrl
push
add
xor
imul
sarb
cmp
mov
add
cmp
add
adc
sub
cmp
inc
add
es
add
add
and
icebp
add
pusha
adc
or
dec
cltd
out
add
cmp
fdivrl
cmp
push
push
movsl
jmp
das
push
cli
mov
add
add
pop
call
jne
repnz
aam
or
xor
cmp
or
and
inc
xchg
lcall
adcl
outsl
push
add
call
aas
insb
xor
cmpsb
pop
je
in
push
and
cmc
stos
sbb
dec
outsb
jp
sarb
out
mov
pop
jbe
lea
push
and
mov
mov
sub
adc
dec
or
sub
and
mov
inc
leave
mov
mov
jge
int3
push
insb
aad
int3
sub
imul
sbb
enter
lcall
popa
imul
or
nop
xchg
push
inc
or
jb
dec
setle
fisttpl
xchg
jbe
clc
add
cld
lock
mov
or
cld
mov
mov
arpl
nop
cld
mov
cltd
les
daa
test
or
cmp
pusha
adc
push
inc
jle
dec
scas
and
or
sub
mov
mov
inc
sbb
cld
add
test
sub
or
dec
pushf
insb
jb
push
addr16
and
orl
test
dec
xor
mov
sbb
pop
dec
inc
js
mov
flds
lds
xchg
faddl
aad
add
mov
enter
sarb
lods
push
subb
mov
sbb
pop
pop
movsb
xor
callw
lret
mov
mov
lcall
xor
mov
mov
cmp
xor
test
or
mov
je
rcrb
mov
add
dec
mov
cmp
mov
hlt
inc
andb
jge
clc
sbb
sbbb
dec
cwtl
mov
mov
gs
pop
fisubrs
mov
adc
outsb
cmp
ficoms
lock
xor
jno
hlt
cli
mov
pop
sbb
ror
fdivrl
scas
ror
enter
or
movzwl
xor
pushf
mov
enter
movsb
int
pop
pop
rolb
pop
cld
or
mov
mov
sbb
inc
outsb
imul
or
lea
inc
add
add
push
add
push
cmpsb
mov
cltd
popa
not
xchg
adc
add
test
mov
sbb
add
dec
shlb
adc
xchg
test
pushf
inc
xorl
push
lock
loope
mov
rcrl
mov
cmp
clc
ja
add
in
addr16
lods
stos
lods
popa
jl
sbb
mov
adc
movb
xor
sbb
fistl
sub
ss
and
sbb
sub
in
or
sub
js
xor
or
arpl
fs
addr16
push
push
pop
inc
imul
jbe
hlt
push
adc
arpl
hlt
roll
pop
pop
daa
xor
les
sub
test
sub
pushf
and
and
and
in
repnz
jl
adc
mov
out
mov
sub
enter
push
push
mov
clc
mov
neg
sahf
mov
ja
enter
inc
or
or
mov
std
cmpl
mov
faddl
pushf
or
inc
mov
jge
and
pop
psubsb
dec
test
inc
es
aaa
aam
add
or
sub
or
js
cmpsb
sbb
inc
jg
incb
lods
hlt
inc
pusha
in
inc
add
xchg
inc
jl
inc
mov
ss
imul
cli
or
xor
sbb
and
xor
loop
push
add
and
xor
test
mov
pmulhuw
pusha
addr16
adc
sbb
jo
orb
xchg
or
add
fs
sbb
mov
lahf
sub
push
xchg
test
add
jbe
inc
loope
imul
pushf
sbb
adc
push
cltd
movsb
enter
ljmp
stos
imul
push
mov
out
add
js
adc
sbb
hlt
jae
add
push
cmp
cld
sbb
test
and
xchg
or
sbb
push
test
add
jb
and
or
dec
jmp
add
lea
cmpsb
inc
sbb
je
or
daa
push
sub
and
xor
dec
cltd
jo
in
push
das
push
mov
inc
sbb
adc
lcall
push
sub
push
shrl
pop
test
aad
jg
popa
xchg
ja
mov
mov
inc
push
les
adc
add
outsl
dec
mov
outsb
jne
outsb
subb
cmpsb
and
imul
or
push
insl
iret
jo
cmp
or
mov
add
jle
adc
and
rcl
sub
fcomip
mov
rol
bound
test
movsl
rorb
ss
adc
adc
mov
cld
popa
mov
jmp
inc
movl
add
mov
mov
ror
pavgb
ja
push
sub
sbb
jbe
xchg
nop
push
mov
out
mov
inc
ret
icebp
pop
sahf
add
mov
cwtl
enter
in
movb
dec
push
aas
add
fcompl
rcrb
pop
pop
mov
adc
adc
mov
cmp
in
jns
mov
popa
das
or
or
jne
daa
jecxz
ds
in
leave
rcll
add
mov
inc
adc
pop
and
inc
and
sub
cmp
inc
push
daa
pushf
sub
ds
sbb
mov
dec
push
mov
jnp
repz
fsubr
inc
cld
push
jns
jnp
lock
push
sbb
data16
out
pop
sahf
pmullw
ds
and
mov
adc
jnp
pop
add
cs
lods
daa
or
data16
test
inc
pusha
push
dec
fistl
paddsw
mov
data16
push
outsb
insb
and
sahf
pop
pop
push
pusha
pop
inc
negl
outsb
adc
addps
adcl
repnz
lods
mov
pop
bnd
gs
push
adc
add
pop
push
imul
cmp
dec
sbb
inc
or
xor
xor
mov
add
test
nop
or
sti
jp
arpl
ds
imul
xchg
dec
enter
gs
dec
cmp
insb
add
pop
sub
jne
and
or
mov
push
pop
clc
mov
xor
pop
inc
dec
add
mov
decl
push
xor
outsl
or
inc
pushf
xchg
orb
or
inc
rolb
add
in
arpl
jo
add
xchg
inc
xor
fwait
sbb
inc
or
or
cmp
sub
or
mov
cs
dec
pop
or
add
push
pop
insb
cmp
add
arpl
dec
dec
mov
das
js
pop
pop
add
dec
or
loopne
sbb
js
adc
jle
out
mov
faddl
sbb
jb
repz
inc
lock
out
roll
adc
mov
and
in
dec
mov
xor
mov
mov
adc
cwtl
pop
int3
pop
repnz
push
add
and
iret
xor
mov
jl
add
mov
pop
daa
add
cmp
stos
jmp
cmpsb
pop
adc
inc
scas
orl
js
out
jae
enter
pop
ds
out
inc
fs
jnp
xchg
xlat
pop
daa
sbb
push
shlb
mov
outsb
fisttpll
mov
out
add
ljmp
lock
cmc
rorb
xlat
mov
pop
cld
pop
test
sbb
pusha
js
inc
pusha
and
cmpb
jge
push
imul
and
stos
push
mov
mov
add
add
dec
push
pop
adc
dec
pop
insb
add
mov
pop
mov
add
lock
fcmovnb
jl
mov
add
inc
add
dec
lea
mov
mov
inc
ja
adc
or
or
xlat
inc
inc
into
aam
dec
pushf
cs
pusha
push
insl
or
or
nop
pop
sbb
push
gs
and
push
cmp
jo
nop
sub
popa
push
mov
fstps
or
lret
mov
sbb
jge
xor
je
imul
sbb
mov
imul
add
sub
and
popa
sbb
jo
testl
cmp
sub
sbb
int
inc
sbb
adc
mov
mov
call
stos
mov
sub
test
or
push
nop
pop
pop
and
lock
in
sbb
or
dec
stos
ss
mov
and
popa
mov
xor
pop
and
adc
in
or
cltd
xchg
cmp
push
mov
imul
mov
scas
or
push
jbe
or
mov
push
cld
jo
or
repnz
jo
cld
xchg
andl
out
push
call
scas
push
jg
sbb
push
aaa
mov
mov
dec
nop
mov
rolb
cmp
jmp
push
add
xor
xor
aaa
cmp
xor
inc
mov
dec
dec
dec
dec
dec
dec
dec
loope
dec
adc
push
push
push
push
pop
pop
pop
sbb
lret
repnz
fildl
ds
add
add
add
xor
cmp
push
addb
xlat
xchg
popa
sub
xchg
inc
test
or
xor
insb
popf
lret
inc
mov
cmovae
je
or
or
shl
loope
jne,pt
xchg
testb
mov
add
adc
orl
cwtl
leave
add
mov
jns
push
daa
loopne
jl
dec
sub
loopne
or
add
xchg
incb
mov
jo
xor
or
and
dec
xchg
and
pop
das
xlat
test
mov
mov
clc
sub
fmull
sub
push
push
into
pop
sti
xor
sti
push
or
orb
adc
inc
jge
shrl
mov
sub
dec
or
sarb
mov
pop
cli
push
sbb
test
ficompl
add
scas
cmp
sbb
and
push
add
jg
jmp
sub
inc
add
sub
inc
cmp
xor
inc
ret
and
inc
aas
dec
pusha
sub
adc
test
or
ret
adc
movsb
fdivrl
mov
outsl
jmp
xor
mov
nop
mov
dec
outsb
adcb
mov
in
sub
ds
inc
add
cmp
pusha
sti
fstps
cmpsb
adc
pop
xchg
add
enter
and
lea
gs
and
sub
xor
inc
xor
mov
or
aad
hlt
dec
mov
into
pop
es
jae
or
push
mov
mov
push
pop
pop
or
pop
adc
and
inc
dec
jg
and
jo
add
test
imul
popa
loope
and
orw
out
dec
in
sbb
xor
int
hlt
and
clc
add
loope
jmp
cmp
rcl
pop
or
pmulhuw
mov
loop
mov
push
add
mov
add
leave
icebp
or
adc
jge
jmp
inc
call
jne
enter
dec
xchg
and
and
inc
mov
aaa
fiaddl
xchg
mov
mov
faddl
jl
std
add
add
pusha
roll
pop
inc
clc
and
cwtl
jmp
mov
dec
mov
cmp
js
fs
fwait
jecxz
pop
test
inc
pushl
sbb
pushl
fdivs
mov
inc
insb
pop
incl
adc
arpl
add
mov
cmp
sub
ds
popa
sar
sbb
xor
xor
dec
inc
lock
test
xor
pop
pop
and
fldt
sbb
add
or
cmp
fsubs
add
jmp
or
dec
pusha
das
add
jne
jle
outsb
outsb
xlat
mov
sub
cmp
push
std
push
push
cmpsb
sub
xlat
cmp
enter
fnstsw
cmp
je
in
dec
adc
fldenv
add
pop
rcrl
cmp
in
in
fists
inc
sbb
jbe
in
push
or
adc
pop
add
paddb
nop
inc
or
sbb
xor
add
sbb
sbb
and
add
xor
dec
sbb
or
mov
inc
cltd
fldt
sbb
xor
add
xchg
stos
jmp
sbb
rcl
inc
imul
pop
xchg
lret
add
push
add
cmp
pusha
xchg
lahf
jl
cmp
nop
popl
jl
dec
in
lret
cmpb
iret
divl
add
xorb
inc
push
aas
cmp
fistps
jno
cwtl
gs
sub
pusha
adc
lods
inc
sbb
insb
push
pushf
addb
mov
movsl
xchg
push
roll
add
addr16
push
add
jle
mov
or
ja
inc
sbb
adc
push
sub
sbb
addl
dec
aas
jl
add
insl
jb
mov
push
push
aaa
cmp
aaa
lods
pop
fstpt
mov
sbb
xchg
push
enter
aas
inc
dec
in
cltd
movsl
push
and
or
test
adc
adc
cmp
mov
nop
adc
xchg
out
mov
add
cmp
add
aas
test
subb
data16
inc
inc
rolb
roll
pop
inc
dec
cmc
rcll
fs
mov
rolb
or
iret
and
add
cmpsl
sbb
pusha
sbb
push
jmp
loopne
mov
cmpsb
nop
mov
out
jle
fdivrl
sbb
adc
data16
inc
mov
dec
js
inc
push
mov
loope
inc
insb
mov
call
in
lea
push
mov
or
test
stos
sub
cmpb
scas
lock
sbb
jns
aad
out
add
pop
pop
adc
inc
inc
and
add
dec
mov
push
jnp
adc
xchg
js
add
inc
insl
pushf
xchg
or
and
mov
loopne
pusha
sbb
es
arpl
sbb
data16
pop
js
xlat
adc
add
cmc
add
sub
or
mov
add
dec
or
xchg
loope
shlb
das
je
repnz
mov
int3
push
das
pop
rcrl
cwtl
dec
add
and
pop
jne
or
imul
cmpsl
xor
jbe
adc
push
insb
test
pop
xor
inc
adc
lea
or
cs
into
mov
add
push
rcll
pop
testb
jle
inc
cmp
xor
cmp
int3
jb
cmp
shll
rcrb
fcoml
pop
inc
les
or
xchg
loopne
inc
mov
sbb
jae
test
or
mov
adc
std
cmp
subl
inc
fsub
add
fadds
outsl
mov
push
or
push
in
adc
mov
sbb
push
aaa
cmp
mov
gs
inc
fmuls
pop
cs
fdivrs
fildll
fisttps
fdivs
mov
jne
mov
sbb
icebp
xchg
xorb
mov
jo
push
mov
cmp
unpcklps
add
adc
pop
scas
adc
negl
sti
out
rorl
mov
cmp
add
adc
inc
fbld
stc
pop
add
xabort
icebp
dec
pusha
adc
mov
lods
sub
add
mov
inc
xchg
ret
mov
cmc
cmp
je
out
insb
dec
and
or
or
daa
mov
sub
mov
cmp
sbb
mov
adc
mov
mov
and
pop
dec
inc
mov
mov
or
adc
in
mov
add
inc
icebp
xchg
insb
out
pop
and
sbb
xor
adc
xchg
xor
mov
decb
inc
shrb
insb
loope
sub
jg
inc
sti
xor
dec
movsb
xor
jo
pop
pusha
adc
iret
jne
add
cmpsb
inc
jns
xor
add
push
jle
sbb
lds
pop
pop
mov
xor
inc
aaa
iret
xorb
inc
cmp
clc
iret
mov
cmp
jae
mov
in
fidivrs
cmp
xor
sbb
lods
ret
pop
sub
add
dec
rorl
pop
sbb
cmp
mov
or
or
test
add
xchg
data16
add
inc
push
push
sarb
mov
and
dec
jmp
mov
enter
lahf
or
cmpsl
in
ror
sbb
push
jecxz
mov
cwtl
cs
divb
push
jmp
add
and
add
jo
ljmp
push
and
adc
cltd
fwait
ror
cld
cld
mov
jge
inc
sbb
xor
jne
outsb
jl
or
mov
in
inc
lea
fiadds
push
sbb
icebp
cmp
jmp
jle
and
and
and
js
pop
xchg
inc
cmp
scas
or
add
sbb
add
lock
sbbb
adc
mov
mov
fldl
fwait
and
cmp
mov
fadd
jnp
sub
or
adc
mov
adc
pop
test
push
movsb
repz
dec
leave
jecxz
jecxz
nop
out
push
sbb
lcall
mov
cmpl
mov
or
mov
xchg
adcl
arpl
push
sbbl
pop
std
xor
dec
in
and
lret
xchg
push
cltd
out
and
fs
stc
xor
cmp
cs
xchg
lods
mov
inc
push
lret
pop
mov
add
mov
clc
sbb
shll
jno
jg
fsubr
mov
and
adcb
cltd
subb
daa
addb
push
testl
rol
mov
mov
xor
inc
jecxz
enter
and
outsl
adc
fsubs
or
pop
loopne
sbb
or
inc
je
inc
sub
or
in
nop
cmpsl
in
and
adc
nop
sbb
fidivl
lcall
jge
or
or
in
mov
clc
mov
or
dec
movsl
inc
jl
mov
sbb
jge
mov
mov
lea
or
xor
add
or
inc
pop
lock
rolb
add
adc
add
out
add
add
or
cmp
sarb
dec
or
out
popf
cmp
movsb
add
push
repnz
popf
and
fmuls
mov
js
jbe
aam
cmp
and
outsb
xchg
cmpsb
add
xor
jle
mov
repnz
push
inc
call
addr16
sbb
orl
and
mov
mov
lock
jo
mov
loop
sbb
push
rcll
sbb
add
add
adc
movsl
icebp
sub
lock
jg
daa
and
and
sub
pop
aam
mov
jne
ret
test
std
sbb
lods
cmc
add
aam
movb
and
mov
adc
test
ljmp
aad
loop
pop
js
mov
or
xchg
pop
cmp
push
inc
lcall
jp
jle
aam
movl
dec
sub
inc
push
dec
adc
dec
or
aad
lods
into
push
push
ret
sbbl
jb,pt
fistpl
dec
cmp
out
jnp
mov
inc
jle
decl
aam
cmp
fmull
mov
adc
popa
dec
fwait
xor
push
inc
inc
push
pop
mov
mov
push
pop
dec
loopne
sub
jnp
dec
xor
sub
imul
dec
aad
dec
in
sub
push
sub
cmp
stos
mov
test
sub
aad
outsl
inc
addl
mov
in
cltd
jnp
add
mov
jo
jmp
cltd
ds
sub
jge
fxch
sbb
cwtl
jb
add
lods
inc
adc
jne
jae
jae
in
and
pushf
aaa
je
movsb
cmp
xor
stc
sub
dec
lahf
xor
xlat
int
add
sub
push
outsb
stos
in
sbb
push
lds
and
stos
sub
mov
out
and
or
test
push
add
jmp
mov
lret
dec
inc
xchg
and
mov
shll
and
dec
pop
lret
jo
push
push
popf
icebp
adc
jb
insb
fisubs
enter
xor
push
rorb
jns
add
dec
enter
xorb
testl
xcrypt-ecb
jecxz
inc
loop
push
jge
gs
fsubrs
inc
xchg
adc
cmovns
insb
les
adc
mov
push
dec
mov
adcl
aaa
xlat
mov
add
push
test
loop
mov
adc
push
and
jo
xor
sub
add
and
stos
add
push
fsubs
pop
sub
mov
sub
lods
jmp
pop
inc
and
mov
jmp
call
jnp
lods
rolb
pop
dec
pop
xor
mov
sbb
rorl
ljmp
ret
popa
pusha
pusha
adc
das
xor
pop
jle
inc
mov
shlb
and
sbb
insb
push
aas
adc
jecxz
or
or
add
pop
adc
adc
adc
pop
test
movsb
dec
fbstp
lock
cmpsl
inc
adc
sbb
fsubr
sbb
popf
xchg
in
popa
das
call
sbb
jne
sub
cmc
adc
push
lock
divb
mov
outsl
inc
mov
cltd
pop
inc
cmp
or
inc
xchg
xor
aas
or
push
jo
or
andl
and
add
enter
cwtl
loopne
cltd
mov
es
lock
nop
out
roll
loopne
fdivl
mov
push
sbb
shll
andb
test
cmp
nop
int
decl
stc
cmp
mov
mov
add
pop
mov
int3
pop
mov
mov
adcl
cltd
cmovnp
mov
in
fmuls
fdivrl
sub
jo
pop
imul
ret
and
pop
push
push
inc
push
dec
das
insb
adc
std
fdivs
xor
andl
cmp
adc
xchg
mov
lods
dec
jg
clc
jg
or
sub
xchg
fadds
lahf
int
fdivl
adc
jg
scas
nop
or
fsubrl
xchg
cld
test
xor
inc
push
sub
nop
push
loopne,pn
fsubrs
rcl
inc
fiadds
sbb
out
push
pushw
add
inc
test
dec
in
and
add
mov
cmc
mov
subl
add
and
shrb
shr
push
mov
insl
xor
imul
dec
insb
les
iret
inc
pusha
push
pop
into
fsubrl
pusha
mov
mov
mov
repz
aad
ss
dec
loopne
repnz
jnp
or
outsl
sbb
inc
xor
cld
stos
fdiv
leave
fmuls
dec
add
test
ds
adc
mov
shld
and
cmp
je
sbb
xor
cmp
popa
lea
loopne
push
lock
lock
pop
sbb
jb
test
ja
ret
xchg
mov
stc
push
bound
lock
or
out
and
inc
fistpl
jne
adc
cmp
mov
les
pop
xchg
pop
lcall
jl
lock
lea
lods
adc
add
js
mov
inc
ret
sbb
mov
pop
cld
push
mov
pop
hlt
arpl
adc
push
test
sbb
xor
pop
adc
adcb
mov
sti
je
loope
addr16
or
add
test
out
out
bound
sbb
test
out
push
jne
mov
stc
not
inc
push
add
inc
mov
push
adc
cmp
adc
daa
mov
clc
dec
loopne
xchg
pushf
pushf
jl
xor
les
and
dec
mov
loopne
cmp
inc
mov
lret
loopne
fsub
orl
mull
and
dec
fmuls
leave
add
adc
orb
pop
add
jno
dec
xor
arpl
push
mov
mov
addl
lcall
xor
xchg
lret
clc
dec
inc
and
incl
inc
mov
or
xor
sbb
jns
pop
mov
imul
lock
jno
inc
nop
add
sub
insl
push
add
xchg
push
imulb
mov
aam
or
ja
pop
mov
xchg
loop
cmp
int
add
sbb
or
mov
lret
stos
cmp
adc
pop
movsl
je
stos
popa
dec
mov
les
cmpb
pop
clc
push
adc
sbb
add
mov
and
xor
mov
lcall
insl
jle
andl
aam
pop
lock
lcall
cltd
inc
push
int
add
adc
fcomps
sbb
xor
add
add
repz
push
lahf
and
sbbl
shll
lcall
test
mov
cmp
ss
and
or
mov
and
pop
jmp
aas
adc
or
sub
call
mov
mov
push
incb
movsb
jl
dec
mov
pop
mov
push
in
xor
dec
sbb
dec
push
add
sbb
cmpsb
dec
setne
sbb
dec
in
or
and
roll
stc
test
cmp
dec
imul
fwait
adc
adc
adc
hlt
sub
jae
movsb
or
sub
scas
push
push
loopne
je
loopne
jle
sbb
inc
xor
sbb
lcall
push
inc
movsb
or
pop
or
push
lock
insl
or
dec
pop
adc
int3
mov
jo
fs
hlt
xchg
or
icebp
xchg
sar
jp
mov
sub
add
sbb
in
jl
out
inc
add
sub
orl
cmp
jne
insb
push
jo
xor
scas
loopne
adcb
unpcklps
inc
adc
jnp
cld
mov
jmp
out
dec
xchg
xchg
xchg
push
inc
fcom
fdivs
xlat
xor
pushf
and
pusha
pop
aad
jmp
push
adc
cmp
sarb
not
test
jg
lret
repz
xlat
pushf
inc
push
and
es
or
add
int3
scas
icebp
pusha
nop
addr16
pop
int3
xchg
adc
mov
incb
sbb
cmc
jo
inc
faddl
dec
add
rcrb
les
jl
mov
in
ret
fcompl
dec
add
loopne
add
pop
les
pop
sub
push
mov
das
loopne
mov
push
adc
push
add
imul
cltd
movsb
pop
lret
andb
adc
or
xor
jae
cld
xchg
stos
jno
push
ja
jb
das
pop
jg
xchg
loopne
jne
sbb
xchg
iret
pop
fldenv
or
sbb
lods
orb
mov
roll
xchg
sbb
divl
out
gs
sbb
cmp
lret
stc
xor
push
sub
add
pop
or
out
fnstenv
sbb
sbb
xor
push
xchg
int3
and
push
rorl
shr
pop
sub
in
jno
jb
mov
xor
cmp
sbb
sbb
adc
int3
popa
inc
fsubrl
enter
out
popa
sbb
subb
and
mov
add
pop
add
fildl
movsb
adc
add
jecxz
inc
les
ret
xchg
pop
shlb
adcl
push
dec
mov
fistl
adc
fidivrs
les
dec
cmovl
add
dec
hlt
cmp
lock
adcl
push
movb
xor
cmp
xor
inc
dec
mov
jp
ss
data16
xchg
xor
je
mov
mov
pushl
outsb
mov
call
sbb
nop
pop
inc
movb
inc
push
stos
lret
out
arpl
cmpb
repz
mov
xor
es
add
imul
cmpl
mov
jmp
add
xor
pushf
outsl
lahf
fs
imulb
aas
je
adc
sbb
into
aas
dec
or
add
clc
mov
push
dec
pusha
ds
ja
adc
xor
xchg
adc
pop
imul
popa
cltd
xor
xlat
xor
ret
pop
push
cmp
pop
adc
cmp
mov
or
mov
inc
xor
movsb
pop
inc
push
inc
inc
addb
js
dec
je
outsb
vpsubb
les
xchg
orb
jle
adc
dec
or
adc
rorl
sbb
xchg
test
in
inc
inc
dec
xor
jb
sub
dec
mov
loopne
push
das
daa
mov
and
add
and
fsts
mov
rcl
pop
in
out
mov
cmp
cmp
lret
sub
inc
lret
fs
int3
imul
jno
lds
test
push
adc
mov
inc
add
inc
jg
loope
inc
outsl
jle
sbb
push
dec
sub
and
call
xchg
add
aad
roll
jbe
insb
adc
dec
adc
aas
sub
sahf
sub
push
aad
add
pushf
mov
sahf
test
adcb
js
or
and
inc
push
mov
fistpll
out
jnp
push
push
jo
push
pop
add
inc
or
in
mov
jmp
jecxz
mov
lahf
or
sub
gs
sahf
cli
add
call
inc
and
and
pop
xor
shll
cmpw
das
sub
mov
mov
sub
mov
dec
mov
or
jno
xor
adc
xor
scas
sbb
push
arpl
and
test
adc
rorb
pop
aaa
lret
ds
sub
stos
xor
add
push
cmpsb
jmp
adc
pushf
ss
xor
and
inc
xor
or
xor
push
fstpt
adc
js
test
ret
push
cwtl
into
xchg
cmpb
je
dec
inc
jge
imul
scas
xchg
push
adc
cmp
imull
lods
jmp
fidivl
xlat
loopne
addr16
outsb
sub
push
cmpsl
push
sub
inc
dec
adc
ja
or
dec
cwtl
push
sahf
inc
pop
btr
inc
jmp
mov
push
bound
inc
notl
cmp
test
push
mov
or
and
xchg
jl
sarl
xchg
imul
inc
xor
stos
or
adc
and
mov
or
inc
sbb
cltd
mov
or
jo
cbtw
add
aad
xchg
and
and
enter
xchg
jmp
or
cmp
ss
lcall
push
inc
pusha
mov
ror
cmp
je
mov
cmp
push
sub
cs
and
int3
push
mov
mov
negl
stos
xchg
loop
lret
pop
lahf
or
jle
xor
fs
add
add
or
cli
jne
in
lods
add
add
mov
enter
push
mov
xor
push
pop
pop
jb
inc
pop
mov
or
inc
flds
mov
adc
xor
jge
cld
jnp
ljmp
xchg
test
push
stc
popf
sbb
cs
xchg
cmpsb
inc
test
push
adc
xor
ljmp
mov
jmp
cmp
xor
scas
out
sub
dec
dec
in
enter
test
stc
aas
and
in
mov
cs
mov
test
and
mov
insl
push
cmp
add
cmp
pop
jnp
loopne
push
push
dec
adc
out
sarb
pop
xor
pop
push
ds
lds
dec
ljmp
push
push
xchg
jg
lret
outsl
xor
inc
sub
cld
fdivrs
daa
cmp
jmp
cmp
pop
push
fsubr
push
mov
jne
jns
insb
sub
push
jl
push
js
bnd
sbb
inc
mov
adc
shl
outsb
addb
dec
pop
or
mov
add
js
mov
push
push
lds
push
lds
push
mov
xchg
inc
loop
cmp
pop
xor
sbb
aam
movsl
push
mov
sbb
cld
mov
pop
test
dec
iret
push
lock
ret
adc
add
in
test
inc
inc
sub
xor
push
imul
sbb
xchg
sarb
push
cmp
xor
call
sub
or
fs
repnz
inc
add
add
int
add
sub
add
push
xor
lcall
adc
jo
sbb
inc
dec
jne
adc
xchg
jne
pop
aam
and
ret
lods
cs
xor
pop
jmp
insb
add
add
push
call
mov
xchg
in
inc
imull
push
fwait
mov
fidivrl
movsl
imul
aaa
pushl
dec
inc
add
cmpb
and
pop
callw
add
push
jg
or
aas
sub
xor
inc
xchg
pop
sub
or
fs
xchg
add
in
imul
fistl
adc
int3
jne
orl
sbbb
ss
lret
hlt
outsl
dec
or
jnp
in
les
pop
add
sbb
in
aam
sarb
in
cmc
or
mov
es
adc
ds
sbb
cmp
imul
pop
mov
dec
dec
dec
push
lock
adc
enter
fidivl
dec
push
pop
mov
xor
push
push
jp
aaa
pop
je
push
jbe
add
push
pop
sbb
fcmove
les
les
mov
pop
or
lcall
mov
int3
jne
mov
popa
cmp
fwait
ds
fcoml
int3
lret
push
mov
cs
call
loopne
xor
call
imul
fwait
mov
shlb
and
add
jmp
aaa
fld1
imul
jl
fwait
rol
and
add
mov
sbb
psrad
mov
mov
cmp
jmp
push
mov
adc
notl
sub
add
xor
sub
dec
jmp
inc
fisttpl
pop
test
sub
mov
mov
pop
aad
dec
pop
mov
in
insl
xor
rclb
aam
ret
pop
and
cmpsb
rcrl
push
jo
cltd
mov
faddl
add
jp
pop
stos
add
outsb
or
add
ja
pop
test
sarb
push
push
sub
popa
mov
lock
call
leave
lods
sub
ja
shll
add
out
mov
pusha
arpl
icebp
in
outsb
mov
dec
pop
dec
push
aam
push
xchg
fdivrs
pop
push
inc
fcompl
lods
sbbl
imul
stos
add
ficompl
cmpb
cmp
xchg
cmp
nop
stos
adc
mov
inc
loop
push
fmull
pop
adc
cmpsl
movb
inc
mov
xchg
inc
and
add
repz
pop
add
sbb
nop
mov
cmp
cmpsl
sub
jl
inc
rcrl
arpl
mov
push
xor
movb
mov
mov
push
inc
jnp
inc
sbbl
sbb
out
push
cmpb
movb
ret
addb
add
pop
jne
cmpsl
in
sub
loope
in
fadd
movb
jle
dec
es
aaa
dec
and
dec
inc
jne
cmp
and
cmp
inc
fcoms
pop
inc
sbb
aam
mov
mov
out
lods
mov
mov
jl
cmpsb
pop
cmp
add
or
and
imul
add
les
xchg
xchg
mov
out
mov
pop
jo
pop
xchg
mov
inc
je
movb
adc
mov
insl
inc
fcoms
cld
call
dec
adc
ret
pop
insl
jmp
ret
nop
fst
enter
inc
cmp
and
pop
push
lea
cmp
inc
xor
lret
inc
xlat
and
outsb
bnd
inc
stc
daa
cmp
outsb
push
mov
rcrb
sub
dec
push
push
xchg
mov
incl
inc
xchg
xor
sub
inc
dec
enter
cld
cltd
gs
sub
add
mov
xor
mov
xchg
out
xor
mov
cmp
std
xchg
lret
jecxz
nop
jmp
pop
push
fildll
orl
add
push
fstpt
mov
es
mov
ljmp
js
xor
sbb
scas
outsb
sbbb
mov
cmp
popa
adc
jmp
mov
aad
pop
sub
inc
fs
rorl
fnstcw
aam
pusha
push
cmp
out
mov
rcrb
pop
ja
add
dec
test
dec
fisttpl
dec
mov
add
mov
or
xor
add
mov
or
adc
push
push
adc
pusha
aam
inc
dec
enter
loope
inc
into
aas
cmp
es
cmp
jl
jne
push
xor
sbbl
cmp
lds
xor
jmp
mov
cld
sub
andl
inc
pop
inc
daa
leave
or
dec
or
loopne
insl
add
xchg
and
stos
shlb
jno
ljmp
aas
mov
add
loop
test
je
xchg
cmp
hlt
dec
lea
jle
xor
push
int
sarb
ror
ss
call
add
movsl
hlt
mov
dec
jnp
inc
lret
push
sbb
clc
mov
call
movsb
add
loopne
add
sete
dec
rorl
jno
inc
add
and
xchg
cmp
jno
loopne
and
test
xlat
inc
jmp
jne
ficoms
pusha
sub
aam
dec
inc
mov
add
pop
inc
push
dec
adc
sti
inc
inc
and
jae
ja
out
dec
xor
and
mov
sbb
cld
add
arpl
jo
aam
push
popf
mov
push
push
push
filds
pop
js
sahf
loop
rcrl
pusha
test
and
sbb
call
xchg
and
or
pusha
cmp
dec
in
orb
and
and
ja
add
or
je
adcb
nop
repz
nop
adc
pop
jge
andl
add
inc
sarl
adc
les
add
pop
pop
loopne
int
xor
sub
push
add
sub
bnd
movsl
jl
pop
push
cld
movzwl
inc
aaa
cmpsb
cli
mov
push
cli
mov
setp
mov
inc
cwtl
incl
fs
jge
push
inc
lds
push
sbb
loop
and
xor
test
mov
popa
cs
jp
jbe
out
sub
inc
xchg
jns
add
dec
sbb
push
add
js
or
call
ret
and
movsl
addl
xchg
push
in
add
lods
addr16
lea
mov
bound
push
data16
pop
xchg
push
in
jae
dec
mov
add
mov
jne
mov
push
cli
inc
jmp
imul
push
add
arpl
out
or
test
shrb
pop
and
repz
xor
mov
popa
fstl
xor
xor
xlat
data16
les
push
faddp
sub
jnp
xchg
call
xor
adc
xchg
fdivs
lods
or
mov
push
lea
xchg
or
repz
sub
mov
xor
gs
notl
push
std
dec
add
pusha
mov
je
and
mov
dec
shrb
inc
lcall
mov
mov
mov
in
cmp
add
rol
lock
insl
mov
xchg
lock
sub
jmp
dec
sub
inc
or
xor
fcmove
lret
push
push
mov
add
in
xor
push
lahf
rcr
addb
movl
inc
push
add
in
repnz
add
dec
movsl
pop
imul
push
pop
fimull
mov
adcl
test
jnp
js
adc
sbb
cmp
sbb
sub
pop
cmp
or
cmp
cmp
or
pop
fcoml
sbb
cmp
cmp
mov
das
insb
mov
jno
xor
lahf
lods
inc
sti
je
in
aas
and
jge
push
adc
mov
fldenv
imulb
loope
fildll
mov
stos
mov
mov
pop
adc
test
mov
inc
xor
out
cmpb
jg
mov
lcall
loop
adc
adc
inc
dec
sub
aam
dec
pop
sub
pushf
pop
mov
dec
loopne
sub
cs
int
and
js
inc
jo
inc
nop
lock
sbb
fdivrp
pop
push
add
push
dec
mov
js
pop
add
inc
dec
stc
nop
inc
cs
dec
pop
js
jnp
add
cmp
les
jno
lods
jle
cmpl
adc
fadds
xchg
xor
adc
or
or
mov
xchg
aas
lock
in
sbb
jle
gs
adc
xor
adc
xor
test
add
negb
xor
fcompl
sub
insl
add
lss
and
testl
clc
push
clc
jmp
and
outsl
scas
sbb
xor
cmp
lods
xchg
xchg
jg
lea
clc
pop
and
sarb
jne
pop
shrl
or
pop
hlt
rol
sbb
xchg
dec
pop
nop
insl
adc
nop
in
sbb
push
sub
dec
mov
ds
and
idivl
pop
mov
orb
imul
setnp
adcb
add
xchg
xor
or
in
or
sbb
inc
adc
sub
js
or
repnz
imul
inc
or
fadds
adcb
jecxz
fsubrl
inc
sbb
cmovb
jmp
sbb
or
lock
lock
xor
cmp
add
jge
daa
mov
sarb
dec
pushf
jns
cmp
jne
decw
shl
mov
lret
jp
jb
push
jns
imul
inc
lock
and
inc
stos
or
in
rcl
pop
xchg
sbb
adc
and
rclb
aaa
in
push
xor
jbe
mov
imul
gs
es
pop
push
ss
ja
clc
dec
push
js
dec
xchg
inc
jo
in
int3
inc
mov
dec
cmpsb
or
sub
and
into
sub
loopne
ds
or
call
push
mov
rcrl
roll
aad
xchg
or
add
inc
in
push
daa
inc
loopne
cmp
inc
leave
pop
and
adc
out
sbb
mov
cmpsl
pop
add
daa
jge
mov
mov
insb
lahf
dec
jp
xchg
rcll
push
cwtl
jmp
sub
and
push
xchg
movsb
xor
mov
pushf
push
outsb
inc
cmp
pop
mov
je
pop
je
test
cmp
punpcklwd
inc
push
push
lret
loope
loope
loopne
stos
mov
inc
mov
sbb
xchg
jne
arpl
cmp
jno
mov
adc
and
xor
loopne
aas
pop
orl
sbb
out
bound
nop
ss
cmp
jne
xchg
xchg
lods
xor
ret
mov
sbb
scas
js
and
fadds
jg
mov
xor
cmpl
xchg
adcl
test
lock
jbe
and
call
mov
dec
or
add
daa
sub
idiv
ljmp
adc
or
pop
xchg
mov
das
in
jl
xchg
xchg
iret
cld
pop
push
mov
add
pop
enter
xchg
jo
mov
imul
imul
sbb
lret
push
jecxz
jnp
add
add
pop
dec
adc
shr
add
out
out
push
pop
aam
lock
adc
adc
add
xlat
leave
cwtl
stos
inc
push
repz
ret
aam
jmp
jmp
cwtl
jmp
pop
sub
rcrb
push
sbb
cltd
lret
dec
adc
and
movsb
cmp
mov
sarb
call
cmp
cs
shl
and
or
or
xor
test
cltd
fadds
cmp
pop
jge
pop
mov
adc
add
xor
iret
insb
mov
add
mov
xchg
fidivrl
subb
inc
inc
sbb
push
or
xbegin
mov
and
fdivrl
rcl
sub
fmull
mov
pop
and
pushf
sub
dec
and
in
and
insb
inc
sbb
movsl
cmp
push
adc
sbb
out
fbld
adc
pop
sub
pop
pop
mov
push
lea
inc
rclb
xchg
jbe
pop
fnsave
lods
or
je
add
out
stos
or
jae
sub
leave
xorl
mov
xchg
cmc
call
inc
scas
xchg
andl
stos
lahf
pop
dec
and
sbb
xchg
push
inc
or
ret
pop
pop
inc
fmuls
or
inc
std
cmp
addl
sub
cmp
mov
mov
dec
jne
mov
ret
sub
addr16
sbb
jne
dec
mov
sbb
add
jne
push
pop
and
pop
add
jg
push
stos
movsl
sbb
jmp
mov
lds
bound
inc
or
dec
sahf
inc
xor
adc
popf
or
push
push
push
cmp
xchg
aam
fstps
loopne
sbb
push
mov
dec
jbe
in
clc
push
aam
add
movl
into
inc
pop
lcall
push
cmp
mov
data16
inc
popa
add
cmp
add
inc
add
hlt
je
filds
pop
fsub
daa
and
jl
je
ja
xchg
adc
lahf
jo
xor
ret
mov
pop
decb
cld
adc
jmp
sub
das
fistpll
sbb
repz
jns
cmpb
rorb
out
adc
xor
or
pop
mov
xchg
inc
dec
push
ret
and
xlat
add
adc
test
inc
pop
aam
mov
jle
jbe
or
adc
cmp
inc
xor
xor
push
call
in
gs
addr16
inc
mov
push
push
repnz
push
gs
fstpt
enter
sbb
shl
or
cmp
cld
fwait
enter
movsl
and
pop
push
rcrb
pop
iret
lsl
adc
mov
dec
add
lahf
test
add
add
xchg
cmp
push
sbb
fs
nop
addb
mov
mov
or
push
dec
xchg
notb
sub
mov
or
test
scas
mov
push
sbb
mov
xorb
dec
es
aaa
pop
pop
in
or
dec
sti
jmp
pop
adc
rorb
out
addl
fists
adc
cmp
inc
xor
stos
bnd
fcoms
push
test
jle
and
sub
clc
outsl
mov
in
ret
sub
cmp
setge
arpl
lret
pop
test
push
push
sub
rolb
add
push
cmp
sub
push
add
lods
add
dec
bound
inc
test
push
sbb
sarl
jno
pop
inc
jle
mov
jle
sbb
enter
dec
lock
pusha
lahf
cmp
jl
mov
xchg
aas
adc
add
fwait
andb
push
jne
lock
jo
dec
stos
sbb
push
lds
lret
pop
xor
ds
mov
mov
xchg
mov
in
and
hlt
mov
insb
adc
lock
jb
je
cld
cld
dec
pop
mov
adc
stos
or
push
xor
out
inc
jl
mov
hlt
push
inc
lock
mov
imul
in
xor
repz
push
nop
mov
mov
idivl
aam
shrb
jnp
repz
xor
push
and
jle
les
jns
out
mov
adc
repz
fdivs
mov
divb
add
pop
adc
mov
xor
xor
inc
aaa
cmpsl
scas
jg
insb
mov
loopne
divb
inc
sub
arpl
nop
out
nop
int3
aaa
pop
push
push
add
pop
inc
jl
lods
shl
add
das
fidivs
add
mov
push
rolb
jp
popa
mov
nop
sub
insb
push
movl
orb
sub
add
clc
in
cmpb
lods
mov
mov
xchg
out
mov
fisubrl
push
fdivs
and
out
push
les
int3
or
mov
mov
and
adc
inc
daa
or
sbb
sub
inc
pop
mov
cld
xor
cmp
inc
mov
out
dec
leave
or
mov
cmp
push
pusha
jo
or
gs
sbb
xchg
or
cmpsl
test
lock
lock
dec
loopne
mov
nop
mov
mov
jg
lea
sub
leave
xchg
test
mov
in
sub
or
pop
and
js
dec
dec
mov
mov
mov
mov
add
push
cmp
cmova
mov
sarl
pop
sub
mov
aam
jb
and
adc
rorb
adc
rclb
fwait
nop
add
pop
mov
mov
dec
jl
inc
fdiv
or
push
and
jmp
dec
adcl
push
inc
mov
nop
test
push
lods
jg
pop
mov
hlt
inc
jle
jbe
ret
aas
pusha
xor
dec
pop
cmp
test
rcll
pushf
call
ds
add
in
roll
inc
push
dec
and
inc
pusha
pause
cmp
pop
loopne
inc
inc
xchg
or
or
nop
test
pop
movsb
or
sub
and
repnz
sub
insl
bound
test
sbb
repz
roll
popa
or
adc
ror
andb
pop
sbb
cmp
adc
aas
loopne
jns
fistps
or
inc
or
fs
dec
mov
adc
adc
jae
xchg
ja
adc
dec
pop
sub
push
es
fists
mov
pop
test
pop
fcoms
push
mov
aas
loopne
out
or
cs
ds
lret
or
xchg
je
and
add
add
mov
sub
or
push
les
or
dec
cmp
or
in
rclb
add
xchg
pop
pop
lods
repnz
imul
jl
cs
imul
sbb
aaa
test
jae
jns
cwtl
pop
es
imul
xchg
xchg
aam
mov
aas
mov
pop
adcb
adc
idivl
inc
fcoms
enter
loope
jge
xor
dec
movl
push
adc
loope
movsl
inc
adc
jl
push
sbb
out
inc
pushf
add
or
js
jmp
or
dec
mov
inc
jno
pushf
pop
rorb
outsb
lahf
xchg
dec
es
add
nop
loop
sub
call
mov
xchg
test
inc
dec
js
push
cmp
roll
ret
push
or
sti
push
fistpl
insb
sar
movl
sbb
xchg
xchg
push
adc
sub
inc
mov
xchg
je
or
push
add
in
out
loopne
adc
push
add
adc
adc
pop
push
ret
add
xchg
sete
bound
nop
pop
andb
add
jp
xor
ja
or
popa
fs
sbb
add
and
mov
add
xchg
addb
add
xchg
mov
add
or
dec
mov
xorl
sbb
pop
test
adc
inc
and
dec
add
and
or
add
mov
lds
sbb
adc
pop
xchg
mov
adc
cmp
add
sbb
and
xor
enter
out
add
add
stos
rorb
das
jg
push
cltd
xchg
adc
insb
and
add
pop
test
adc
ror
jge
sub
pop
jl
pop
xor
pusha
mov
test
push
cmp
test
add
sbb
movsb
mov
push
and
lret
shll
pop
xor
outsl
inc
sbb
out
inc
into
orb
nop
dec
dec
push
popa
jb
gs
cmp
mov
lcall
adc
arpl
in
mov
fwait
iret
out
vorpd
negl
not
fwait
push
loopne
sub
leave
jmp
imul
dec
gs
xor
pop
cmp
clc
add
outsb
sbb
stos
flds
paddusb
lods
cmp
add
mov
das
xchg
jo
adc
cmpl
jnp
adc
bound
dec
push
or
int
or
sbb
pop
add
mov
cmpsl
in
xorb
shl
push
lret
pusha
cmpsb
jo
add
push
sbbl
adc
adc
xchg
imul
pop
fbld
and
out
add
mov
and
leave
in
mov
nop
mov
sbb
sahf
shll
mov
jnp
in
push
adc
insb
flds
or
add
lret
ud2
xchg
add
push
in
shufps
mov
lea
ret
cmc
sub
mov
repz
lahf
pusha
lds
cmp
jmp
add
test
popf
lea
sbb
xor
xor
push
aam
inc
cmp
inc
sbb
and
inc
dec
xor
pop
push
fcmovnb
dec
and
or
pop
add
mov
incl
pop
add
add
add
inc
add
add
ja
jp
fiaddl
or
dec
lock
pushl
or
or
sbb
cmp
inc
mov
pushl
mov
in
in
jmp
ljmp
jmp
jmp
jmp
and
jmp
jmp
jmp
jmp
fdivrp
fdivr
ficoml
ljmp
fdivr
xlat
call
call
call
call
call
call
call
dec
add
incl
dec
dec
dec
lret
sub
enter
mov
push
xchg
add
sbb
imul
pusha
pop
in
or
ja
out
mov
movsb
mov
cmpsl
fsts
or
push
in
or
lock
test
shlb
or
int3
cmp
pop
and
es
mov
out
fs
sbb
mov
push
in
add
fstps
fimuls
dec
pop
add
mov
repz
push
sub
out
lcall
pushf
orl
cld
cwtl
push
mov
add
imul
add
in
js
push
push
jl
negl
ss
fimull
sbb
ljmp
cmp
xchg
ss
out
cs
cmp
cmp
dec
add
rcrl
popa
jmp
mov
adc
pop
push
jo
rorl
repz
adc
push
pusha
add
and
addl
inc
or
push
fstpl
mov
inc
pushf
nop
cmpsl
mov
add
cmp
pop
or
mov
or
in
test
add
add
fs
or
push
rcrl
clc
cmpsl
clc
test
push
inc
or
adc
pop
pop
jo
pop
subl
cwtl
inc
mov
sub
jae
push
das
mov
jp
dec
rolb
es
addl
js
scas
sbbb
adc
out
iret
sub
mov
repnz
jb
nop
inc
clc
adc
cmp
dec
and
sub
adc
sbb
fsubs
nop
jge
call
loopne
inc
sbb
add
dec
loopne
rorb
sub
pop
clc
aas
sub
xchg
inc
or
dec
dec
mov
inc
push
fsubrs
movsl
pop
orl
fs
inc
mov
pusha
lea
pop
xchg
sbb
pop
or
mov
mov
dec
adc
enter
movl
insl
adc
fsubr
push
mov
and
mov
inc
xchg
inc
pop
out
and
or
fcmovb
movsl
les
sbb
sbb
pop
stos
inc
add
popa
call
adc
pop
sub
inc
dec
cmp
repnz
insb
sub
lds
popl
cli
mov
movsb
push
fwait
call
lldt
add
outsb
add
add
subb
push
das
push
push
add
add
and
mov
add
add
sub
mov
mov
cld
and
addl
jo
jp
adc
sbb
sbb
xor
add
mov
mov
or
xchg
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
and
call
and
mov
mov
mov
add
push
mov
xor
test
adc
decl
lock
mov
inc
inc
inc
mov
mov
ljmp
je
cli
mov
test
out
stc
mov
mov
mov
mov
mov
mov
and
lcall
mov
jl
out
push
js
rclb
lahf
out
mov
dec
enter
ds
stc
les
mov
sarb
repz
shrl
hlt
adc
push
push
push
loopne
mov
push
xor
pop
idivb
out
hlt
push
add
sbb
push
data16
cmp
jp
pop
lahf
out
sahf
lods
ror
fdivs
pop
out
mov
push
sbb
fcompl
idivl
clc
push
push
repz
pop
push
in
push
hlt
cld
fucom
imul
push
jo
sbb
mov
mov
insb
xor
pushw
push
push
inc
push
jnp
out
jnp
shlb
je
int
mov
sahf
push
mov
push
xor
mov
cmp
sub
push
pushf
test
jge
out
ds
outsb
jbe
inc
add
neg
push
push
or
add
outsb
call
in
stc
xor
add
data16
insb
adc
adc
jl
push
or
outsb
scas
pop
and
mov
stos
out
nop
mov
imull
ss
jp
xchg
mov
lahf
in
data16
sarb
sub
adc
movd
mov
xor
add
stc
iret
pop
sub
in
mov
in
lcall
push
mov
pop
mov
mov
mov
loopne
fimuls
mov
push
xchg
cmp
loope
pop
pop
sub
popl
pop
lods
xlat
js
dec
scas
and
pusha
mov
jb
jg
jg
rep
cmpsl
push
addb
test
repz
movsb
clc
es
add
adc
fiadds
in
in
lret
xorl
js
sbb
icebp
loopne
testl
sub
mov
mov
les
or
in
and
in
clc
paddb
xorl
push
fs
adc
inc
push
fs
cmp
lock
push
xor
pushf
jl
int3
es
jl
adc
jl
shll
jp
test
scas
std
out
sahf
out
scas
or
hlt
jns
inc
dec
pop
push
pop
xor
js,pn
sub
mov
xchg
xorl
jl
jnp
sub
test
in
sarl
int
xchg
jo
fwait
push
call
je
jl
movsb
push
adc
fwait
inc
out
cmp
mov
lods
xchg
sub
mov
pop
mov
add
xor
push
adc
push
insl
inc
inc
mov
ficoml
push
and
jg
push
jmp
dec
and
mov
test
lea
lock
test
clc
mov
fnstenv
dec
xor
in
aaa
and
dec
push
test
pusha
je
push
and
pop
sbb
sbb
dec
test
lea
lods
mov
inc
mov
dec
cmpsb
addl
inc
movl
xchg
xchg
mov
das
movsb
cmpsl
shll
push
idivl
cmpsb
addl
jne
mov
push
mov
pop
or
mov
popa
fstp
push
test
enter
ds
dec
insb
push
jl
push
ret
inc
cmp
adc
mov
cmp
pop
xlat
adc
rclb
das
add
bound
lods
jae
mov
sbb
jns
loopne
icebp
addr16
adc
jno
add
stc
nop
filds
pop
daa
inc
xorl
adc
pop
dec
inc
gs
insl
adc
adc
xchg
in
xchg
daa
push
jb
mov
push
inc
push
inc
mov
push
jo
daa
or
jo
push
insb
popa
clts
cmp
dec
outsl
repnz
fistl
rclb
imul
dec
shll
mov
out
sbb
push
movl
push
push
sub
add
cmp
sbb
xor
mov
dec
js
mov
outsl
daa
adc
mov
or
sub
mov
dec
adc
sub
adc
dec
push
jo
or
mov
nop
xlat
xchg
testb
push
arpl
fiadds
sbb
inc
inc
push
cmovo
xchg
fsubs
enter
mov
push
lods
test
mov
test
adc
xor
rclb
orb
adc
inc
inc
lret
mov
sbb
stos
mov
loopne
sub
aaa
push
mov
push
outsb
je
mov
and
lret
pushl
pop
ds
push
loopne
adc
inc
xchg
jl
les
jbe
or
xor
push
dec
inc
addr16
je
xchg
jp
inc
inc
push
pop
fnsave
jbe
cwtl
int3
jl
outsl
xor
jb
pop
jbe
adc
rorb
or
popa
and
imul
fcmovb
rorb
mov
cmpsb
mov
ret
add
pop
and
std
leave
pop
mov
add
test
pop
js
mov
test
push
pushf
rcll
add
lret
xlat
xchg
int3
push
imul
add
mov
jmp
lock
cld
lahf
test
or
jne
mov
sbb
jmp
iret
dec
sbb
sbb
or
cmp
mov
jae
xchg
movsl
filds
pusha
cmp
or
push
cmp
xchg
je
sub
in
add
mov
xor
shll
adc
adc
shll
sbb
dec
shll
xor
pop
xor
scas
push
push
test
cmpsb
add
adc
pusha
pop
data16
nop
jb
pop
scas
jl
push
inc
popa
jae
add
mov
sub
inc
jecxz
adc
mov
sub
std
dec
je
and
push
xchg
mov
push
or
or
rorb
bsf
pusha
in
cld
addr16
lock
mov
jmp
hlt
adc
add
js
mov
and
jp
or
add
jne
fcmove
add
mov
sub
add
adc
or
push
or
les
push
mov
add
mov
lret
aam
mov
pusha
imul
mov
jmp
or
mov
lahf
or
mov
cli
mov
scas
fsubrs
enter
les
mov
cmc
nop
inc
cmp
inc
pop
cmpsl
aam
xor
lods
adc
sbb
inc
inc
imull
in
sub
sahf
popa
cmp
add
xchg
fiadds
adc
jmp
js
fisttps
dec
iret
jmp
enter
iret
movsl
mov
inc
dec
jle
or
dec
shlb
rorb
push
push
sbb
scas
jle
ja
addr16
jl
sub
push
clc
pop
add
add
add
cmpsl
daa
jae
mov
rorb
fwait
inc
sub
imul
pop
dec
pusha
cwtl
fs
or
xchg
je
add
mov
push
pop
int
pusha
mov
sbb
jns
xor
dec
lea
sbb
fs
sub
dec
sbb
or
pop
sub
sbb
addb
cs
enter
xor
lock
ljmp
jns
or
mov
loopne
push
inc
add
or
push
or
sub
jnp
icebp
dec
adc
dec
dec
fisttps
jle
or
rclb
pop
mov
push
fimuls
cmp
inc
pop
rclb
push
xor
mov
fcom
out
xchg
icebp
jbe
out
add
lahf
stos
xor
cmp
roll
sbb
inc
and
pushl
add
push
enter
mov
pusha
sarl
jb
jne
movb
pop
aam
sbb
xor
add
mov
jg
les
int3
dec
cmp
loopne
mov
nop
mov
push
sarl
imul
xchg
jp
mov
in
in
mov
mov
add
lock
in
daa
sub
inc
mov
jge
cmp
or
insl
adc
shrb
movsl
in
sub
les
mov
dec
mov
add
add
xchg
sti
cli
jge
rcr
inc
mov
rcl
sbb
mov
ret
aam
in
xor
add
pushf
les
fimull
fs
in
sub
rolb
mov
mov
aas
cmp
je
int3
jbe
sarb
and
inc
mov
and
jb
inc
shll
in
ret
fwait
jle
xchg
dec
inc
push
into
fdiv
negl
rorb
cmp
lock
cli
and
mull
cmpb
xor
or
pop
lds
outsl
dec
mov
sub
pop
mov
std
pop
dec
and
add
cmpb
notb
push
mov
jo
push
and
mov
pop
test
sbb
fidivrs
xor
inc
insb
idiv
cmp
fcomp
inc
mov
inc
js
add
and
cmp
xchg
dec
xchg
mov
inc
pop
js
movsl
or
jo
jo
adc
jl
test
adc
loope
dec
addb
dec
adc
or
mov
mov
and
add
and
mov
push
adc
test
add
xchg
fs
add
and
cmp
sbb
ret
insb
cmp
cmpsb
mov
or
inc
push
and
pop
je
pop
xor
inc
xor
mov
push
push
xor
dec
sbb
push
ljmp
mov
pop
push
addr16
push
in
cmp
jns
adc
inc
ljmp
icebp
or
sub
adc
lods
clc
mov
mov
adc
jmp
jl
test
sub
dec
add
xor
mov
gs
daa
cmp
inc
pop
xchg
cmp
sub
xchg
add
lock
and
insb
push
or
and
mov
pop
pop
or
mov
dec
and
scas
jl
std
xorl
add
dec
jbe
popa
insl
loop
call
dec
adc
push
add
test
dec
add
inc
std
dec
mov
cmpl
hlt
push
jl
xchg
inc
hlt
push
rclb
aad
pop
xchg
cmp
mov
jne
mov
fcomp
shrb
mov
in
inc
jo
dec
jge
mov
sub
add
aam
js
jne
mov
mov
in
aam
xorb
aaa
mov
xchg
push
arpl
or
jbe
aam
test
lea
add
mov
shr
xchg
push
sbb
xor
cli
xor
pop
cmp
dec
jae
imul
jo
pop
or
sub
mov
mov
adc
push
add
les
add
hlt
adc
lods
je
sbb
push
fbld
cmp
jns
js
sbb
sbb
fld
sti
mov
mov
or
ret
loop
bound
jne
test
das
out
inc
push
and
mov
je
push
adc
adc
sbb
sub
jne
sahf
pop
or
add
cmpsl
push
jmp
cmpsb
adc
mov
cmp
pop
pop
lods
movswl
subb
std
cltd
jns
sbb
mov
test
cmp
or
adc
push
imul
cli
out
addb
jmp
movsl
lods
mov
js
andb
hlt
cmp
pop
fcoms
inc
pop
push
pcmpgtw
sub
sahf
pop
scas
dec
lods
cmp
add
xlat
hlt
sbb
popa
mov
inc
insb
mov
aad
mov
sub
lock
adc
fs
jno
nop
pop
fidivl
inc
dec
lea
shrl
fstpl
ret
pop
add
push
insb
pushf
mov
test
mov
pushf
mov
xor
sbb
inc
jo,pn
or
stc
or
cmp
sbb
adc
pop
mov
bound
adc
pop
sub
mov
sub
push
add
sbb
and
jns
fs
inc
fldt
cli
imul
pop
insl
pop
xor
cmpsb
push
in
stc
push
adc
aad
popf
adcb
pop
js
ret
mulb
pop
sub
mov
js
push
data16
or
mov
subb
mov
mov
lret
inc
dec
dec
sbb
or
xchg
dec
leave
mov
sbb
in
mov
xchg
xchg
inc
fcoml
add
jb
loop
orl
fs
xor
out
daa
add
and
lea
popf
add
xchg
jecxz
in
sub
lea
mov
inc
mov
inc
sbb
push
jmp
xchg
adc
fwait
and
and
addr16
mov
lret
scas
sbb
mov
rclb
test
test
pusha
orb
add
sub
pop
mov
ja
mov
sub
add
dec
add
pop
jno
mov
pop
sbb
hlt
and
test
xor
and
cwtl
movsl
push
inc
push
add
add
addb
xor
jle
lock
mov
icebp
faddp
sbb
cmp
jmp
mov
and
mov
xchg
sub
mov
adc
inc
push
add
bound
es
andl
lock
cmc
int3
enter
cmp
das
sbb
mov
add
pop
decl
es
pusha
fwait
pop
mov
and
xor
test
mov
cmp
cmp
inc
je
sub
or
in
ds
adc
fisttpl
sbb
repz
and
cmp
push
push
mov
push
xorb
mov
in
popa
inc
and
clc
test
arpl
scas
daa
lods
inc
or
je
fmull
movsb
mov
sbb
inc
mov
pop
movb
cmp
cmp
push
testl
dec
fisttpll
mov
and
add
pop
xchg
sbb
mov
lods
mov
jo
test
addb
adc
pop
daa
sub
mov
adc
lret
rcll
xchg
ret
fs
rorl
hlt
icebp
xchg
clc
add
cmp
dec
push
xchg
xorb
out
add
lea
ret
and
sti
and
xchg
dec
out
adc
inc
adc
mov
cld
stos
in
ja
push
inc
decb
stc
ss
xor
dec
adc
lret
inc
fimuls
mov
push
call
fwait
outsl
popa
dec
mov
daa
pop
stc
arpl
adc
dec
mov
rol
push
out
cmp
cmpsl
stos
add
or
call
in
cmp
sbb
xchg
es
sub
cmp
adc
movsb
mov
dec
add
pop
or
das
push
scas
adc
inc
xchg
push
and
push
or
lock
pop
add
stos
out
into
inc
push
insb
inc
test
and
in
xchg
je
pop
lock
aas
jnp
push
pop
add
xor
rorb
add
out
sub
movsb
dec
inc
adc
insb
pop
adc
in
pusha
lahf
dec
lret
cmp
adc
adc
rolb
inc
addb
insl
hlt
imul
test
push
ja
add
inc
mov
or
add
test
outsb
inc
sub
shl
sub
or
add
dec
mov
pusha
mov
adc
dec
fstl
enter
jge
rclb
pop
inc
orl
cwtl
add
daa
fldl
sbb
insb
inc
pop
push
mov
sub
sbb
adc
mov
cmp
or
mulb
jns
adc
pop
add
fiadds
cmpb
push
xor
add
mov
xor
divl
outsb
mov
cmpsb
mov
dec
and
push
adc
sub
adc
or
shlb
jno
movb
pop
add
sub
jg
pop
pop
push
dec
out
pop
jmp
cmp
je
cltd
fcmovnu
jno
or
adc
pushf
jge
inc
lcall
or
adc
dec
fsts
popf
sub
cmp
cmp
cmp
movsb
cmp
or
dec
movsb
sub
and
repnz
lahf
test
cmp
aad
xor
add
ret
jbe
sbbb
out
test
push
xchg
js
push
cmp
test
inc
cmpsb
push
pop
dec
push
pop
inc
sahf
dec
pop
pop
mov
bound
cltd
stc
adc
sbb
sub
and
push
inc
mov
or
sub
adc
clc
lds
in
test
nop
clc
cmp
pop
and
push
sub
jns
es
pop
roll
mov
xor
test
push
xor
outsb
push
clc
fldl
enter
dec
in
lret
xor
dec
into
mov
insl
frstor
push
and
es
and
push
insb
or
imul
sub
in
les
push
leave
add
and
mov
add
dec
mov
mov
pusha
adc
sbb
es
inc
xchg
jge
sbb
inc
pusha
bound
pusha
jb
inc
adc
adc
fs
fdivs
into
addb
lds
pop
add
bound
push
xchg
es
cmp
pop
inc
xchg
xchg
sbb
rcl
aas
bound
jno
pushl
xchg
ret
popa
lcall
in
mov
addb
orl
out
cmp
fs
cmp
outsb
push
push
stos
adcb
call
rolb
fwait
cmpsb
pop
fsts
dec
je
sbb
pop
stc
cltd
clc
cmp
xchg
add
push
sbb
sbb
inc
jo
jmp
inc
push
add
pop
pop
pop
sbb
out
sub
adc
push
pop
add
jle
jmp
rcll
and
xor
pop
add
mov
push
mov
jg
imul
jo
inc
dec
or
sbb
inc
push
inc
sub
cmp
or
popa
dec
mov
fsubl
mov
mov
es
dec
pushf
testb
jmp
push
inc
insb
mov
inc
sbb
fs
dec
add
nop
mov
mov
lea
aaa
pop
aaa
inc
lret
shl
adc
or
push
das
xor
xchg
xchg
adc
sbb
insb
mov
mov
push
adc
mov
push
fimuls
adc
das
jl
push
dec
aad
dec
jecxz
shl
xor
or
out
fists
push
mov
inc
bound
cmp
or
insl
fiadds
enter
insb
frstor
ffreep
cmp
dec
mov
sbb
sbb
and
into
add
aad
cmp
inc
pop
adc
ficoml
inc
inc
jne
adc
inc
jne
sub
dec
jne
mov
push
adc
mull
or
pop
mov
jno
jae
int3
loopne
popa
or
outsl
js
scas
inc
lea
andl
test
push
xchg
in
test
movsb
fstcw
es
insb
insb
je
inc
dec
pusha
pusha
xchg
iret
pop
mov
cltd
pop
loop
fadds
and
sub
pusha
or
add
sbb
sbb
fadds
or
sbb
testl
inc
fcoml
test
push
loop
xor
add
fs
adc
sub
call
pop
dec
mov
mov
inc
xchg
scas
xlat
xor
dec
adc
push
div
ja
insl
inc
lods
push
push
or
jp
or
and
test
mov
idivl
cmp
or
adc
inc
js
jmp
xor
leave
insb
jmp
push
xchg
sub
cmp
xchg
iret
pop
fsubrs
push
movsl
loop
call
add
or
jmp
int3
jns
hlt
mov
icebp
push
or
xor
xchg
test
and
cmp
adc
std
push
push
xchg
sarb
ret
jne
inc
add
loope
jbe
add
clc
adc
jbe
dec
push
push
dec
aam
xchg
jge
inc
mov
loopne
cmp
adc
xchg
xchg
and
xchg
and
push
pop
adc
aas
sub
les
mov
pop
adc
lcall
jnp
adc
dec
mov
or
sbbb
out
call
mov
cmpsb
addr16
jns
mov
xor
das
dec
leave
and
push
popa
enter
add
mov
add
aaa
ja
ljmp
dec
or
adc
pop
add
je
or
inc
js
mov
mov
sbb
adc
inc
shll
add
add
pop
sbbl
ss
adc
popa
push
jle
fisubs
add
pop
xchg
or
mov
fcoms
cmp
jmp
sub
mov
push
mov
je
add
jo
inc
in
inc
cld
sub
faddl
enter
fmuls
mov
icebp
loop
mov
add
out
cmp
cmp
or
dec
pop
or
pop
pop
roll
mov
shll
and
sub
addr16
negb
fs
inc
imul
inc
lcall
inc
rorb
add
dec
mov
push
cltd
pusha
or
add
flds
add
add
je
mov
outsl
mov
inc
and
adc
inc
call
rclb
cmpl
inc
mov
pushf
enter
inc
aaa
jns
lret
adc
add
xlat
mov
mov
cmp
or
xorl
mov
das
fs
les
addb
loope
or
enter
xor
dec
or
mov
adc
aas
adc
or
pusha
push
sti
dec
decb
mov
xlat
inc
arpl
cli
mov
xlat
sbb
pop
xlat
dec
add
sahf
adc
add
rorb
push
insb
movb
loop
pop
xor
or
movsl
fistpll
addb
dec
inc
mov
adc
xchg
clc
lret
mov
xor
into
push
mov
and
add
adc
sbbb
sub
jae
push
or
cmpl
inc
inc
dec
or
gs
and
les
je
lock
fists
push
aam
lcall
test
or
push
repnz
push
adc
lahf
jb
add
hlt
pop
sbb
mov
nop
loop
sbb
adc
and
aas
pop
jb
dec
pop
mov
cmp
daa
inc
xlat
cli
xor
push
mov
push
lock
fnstsw
and
lahf
shrb
pop
stos
mov
add
mov
pusha
mov
fs
pop
je
imul
rorb
sti
loopne
pop
jnp
or
rorl
sbbb
adc
sbbb
sub
stos
xor
pop
sub
sbb
mov
rorl
add
dec
push
jne
ljmp
mov
xchg
adc
sbb
xor
stos
fsub
fsub
add
mov
lret
mov
push
jae
add
lret
mov
int
mov
jmp
cmp
or
fimull
mov
sbb
add
xor
or
outsb
inc
and
inc
push
test
mov
jo
psrld
mov
add
pop
cvtdq2ps
sub
sbb
dec
or
inc
cmp
push
fstpl
jns
imul
je
inc
push
dec
or
adc
rcl
rclb
loope
or
sub
sarl
mov
and
pop
xor
adc
add
mov
push
cwtl
or
pop
cmpb
sbb
shl
adc
push
jne
rcrb
or
out
in
add
adc
push
add
aam
addr16
pop
and
or
sub
and
sti
pop
testl
inc
push
mov
jle
and
jne
jno
das
jge
xchg
adc
int
dec
mov
push
test
and
jecxz
popa
cmp
paddusw
jns
ss
inc
call
nop
xchg
push
add
pop
add
call
sbb
popf
fisubrl
adc
mov
cmp
test
data16
ret
leave
and
movb
cmp
mov
inc
or
loop
inc
cmpsl
pop
fwait
adc
leave
adc
das
clc
cmp
mov
lock
imul
xchg
or
aad
movsl
mov
jg
cmp
adc
insb
jb
or
pop
push
add
mov
fdivrs
mov
das
pop
xchg
cmp
aam
dec
iret
mov
cwtl
or
fildll
push
add
mov
iret
mov
nop
push
sub
lds
mov
rcll
and
fildl
add
lcall
cmp
xor
es
push
test
push
dec
or
aaa
pop
jo
and
ret
clc
dec
jae
test
or
adc
call
pop
je
mov
movb
jg
mov
or
push
push
push
js
mov
inc
push
push
fwait
adc
pusha
mov
shl
ss
and
addl
sahf
js
or
call
xchg
test
je
mov
out
dec
repnz
or
nop
lea
daa
sbb
mov
mov
fimuls
repnz
and
and
rcrl
jo
cltd
xchg
ss
or
inc
mov
movsb
add
and
pop
sbb
and
aad
enter
xchg
or
mov
pop
pop
repz
cmp
pusha
cmp
mov
push
movhps
sbb
nop
das
aas
sarl
and
sbb
push
test
xchg
adc
jne
push
jae
ficomps
xlat
xor
or
mov
add
fstl
ficoms
test
daa
in
nop
mov
jno
out
mov
jmp
dec
movsb
stc
sbb
ficoms
lock
adc
lock
cs
je
mov
mov
rorl
rclb
ret
pop
xchg
in
mov
sahf
xor
rorb
or
movsl
insl
or
jo
insl
and
mov
sarb
dec
lods
or
mov
jl
sub
inc
pop
loopne
lea
or
jle
dec
sti
cmpb
xchg
cmp
xor
push
or
faddl
push
mov
fdivs
sbb
adc
inc
jg
adc
addr16
andb
test
fists
push
add
pusha
xchg
xor
inc
pop
push
adc
pop
adc
repz
adc
adc
xor
jmp
pop
aas
sarb
cld
mov
enter
or
or
mov
inc
ret
sub
out
outsl
sub
xor
lods
add
add
sub
add
lea
je
iret
and
test
test
or
mov
fstpl
fstps
cmp
test
xor
mov
addl
cmp
mov
leave
xor
sbb
mov
inc
js
cmp
and
aaa
clc
and
jo
or
inc
sbb
xor
fdivl
cwtl
adc
or
je
inc
aaa
decl
lock
xor
xchg
mov
jl
cmp
ret
adc
inc
push
addb
inc
jg
int3
inc
pusha
pop
cld
add
push
popa
inc
mov
sbb
inc
es
mov
xchg
mov
xor
fld
out
or
test
pusha
mov
aam
adc
test
mov
repnz
add
xor
inc
pop
scas
jb
dec
lea
or
mov
or
xor
inc
sbb
in
int
cmp
insb
mov
pusha
pop
stos
mov
mov
and
and
sub
out
andb
pushl
mov
sbb
js
push
mov
adc
aam
or
inc
scas
inc
rcrb
stos
push
addr16
ja
or
sbb
or
add
pop
add
jecxz
mov
sarl
dec
int3
into
mov
insl
jo
adc
fistpll
add
push
testb
mov
mov
push
jge
add
test
add
jl
shll
pop
rorb
ret
sahf
sub
iret
push
mov
push
add
arpl
sub
inc
fmuls
add
ret
ds
or
xchg
lods
pushf
or
or
pop
inc
icebp
and
dec
add
xor
cmpb
dec
jno
xchg
insb
nop
adc
lock
mov
dec
sub
inc
adc
loope
mov
mov
mov
adc
jg
cmp
lea
fnsave
and
ffree
adc
mov
add
mov
add
arpl
inc
add
nop
mov
ret
je
cwtl
mov
xchg
pop
push
or
sti
outsb
push
mov
xor
test
stos
pop
sbb
inc
pop
out
repnz
shll
cli
and
in
cld
clc
repnz
lret
inc
lock
mov
rclb
negb
or
adc
dec
adc
jle
rcr
or
mov
cs
out
inc
mulb
sar
loopne
inc
lds
push
xor
mov
inc
inc
adc
xchg
push
jne
add
pop
bound
negb
fmulp
imul
cs
in
into
fiaddl
adc
fdivs
scas
xor
int3
loope
or
adc
add
idiv
js
mov
ja
sbb
xor
mov
les
pop
stos
dec
mov
add
or
add
enter
jmp
in
jns
mov
xchg
push
and
sub
es
inc
aaa
loopne
inc
mov
in
insb
mov
es
test
es
jnp
jmp
sbb
cwtl
add
push
gs
rcl
lcall
mov
inc
dec
mov
push
fwait
or
sub
sbb
mov
jge
push
testb
dec
loopne
sarb
push
fsubrl
cmp
aaa
call
mov
loopne
in
or
inc
in
add
jne
push
xor
add
add
icebp
rolb
xchg
sbb
mov
xor
in
orps
addr16
mov
nop
jge
add
adc
xorl
or
sub
mov
sbb
sub
mov
jle
js
inc
xor
je
test
lock
mov
cmp
add
adc
or
ret
mov
and
inc
out
mov
fidivrs
adc
jmp
movsb
sbb
in
sub
xor
mov
pusha
xor
in
or
lods
bswap
mov
sbb
cmp
cmpl
add
and
mov
push
test
sbb
outsl
mov
xor
cmp
xorl
fdivrl
mov
push
sbb
adc
aas
nop
std
ljmp
pop
ja
push
mov
cs
xchg
clc
lea
cs
int3
cmp
out
test
stos
or
jmp
loopne
aam
mov
sbb
adcl
cld
inc
popa
mov
rorb
arpl
fmuls
popa
sbb
sbb
push
add
inc
jecxz
bound
and
jecxz
mov
in
fisubrs
cld
dec
lea
push
imul
call
xor
scas
pusha
and
xor
divl
sbb
sti
scas
loopne
rol
xchg
mov
sahf
adc
sbb
inc
arpl
push
lods
cld
add
jge
sbb
pop
adc
lods
sbb
sbb
xor
je
adc
push
imul
mov
pop
and
pop
inc
sbb
into
daa
js
sbb
or
sbb
mov
push
push
mov
sti
adc
js
or
add
aam
lahf
shl
rcll
or
mov
xor
mov
daa
add
cmpsb
test
cmp
or
rcrb
sub
ljmp
mov
cmovbe
adcb
shrl
xor
jmp
insb
pop
add
xchg
jecxz
mov
cs
jo
mov
mov
push
xchg
int3
xor
andb
into
inc
ja
das
and
sbb
xor
movsl
cmp
adc
or
ret
inc
imul
loope
adc
push
je
scas
sbb
pop
hlt
shlb
insb
out
or
jcxz
daa
adc
push
jmp
sub
daa
daa
fisttps
sub
or
and
dec
or
push
arpl
ret
adc
fs
push
ret
ret
aam
sub
pushf
data16
add
adc
sub
repnz
push
mov
add
sarb
jmp
sub
push
pop
sub
clc
add
push
or
xchg
or
nop
lcall
pop
jno
movsb
push
insb
cmpl
jg
xchg
xor
xchg
sbb
pushf
aad
xchg
icebp
jo
inc
cmpb
jb
sub
in
ss
imul
sub
popa
or
mov
add
inc
add
or
sbb
sub
push
jno
or
pop
xchg
xor
xchg
rol
addr16
add
test
rorb
andb
adc
sbb
push
dec
lret
ljmp
mov
push
jb
cmp
pop
ljmp
popf
jnp
test
test
xor
out
inc
adcl
addb
add
adc
xorb
imul
ds
es
pushf
les
add
adc
lret
pop
rolb
xchg
lock
sahf
cmpsl
stc
push
stos
std
stos
into
jae
and
gs
popa
outsl
int
sti
lret
insb
add
push
mov
pop
incb
push
pop
xorl
cmp
push
in
and
pop
lret
jo
cs
je
sbb
sub
mov
dec
fildl
push
insb
loop
pop
cmpl
popf
mov
inc
sub
add
sahf
mov
cmpsl
dec
test
lock
loopne
dec
subl
push
lea
xor
or
flds
sub
jl
mov
jmp
or
push
jmp
adcb
xor
popa
and
cmp
jne
lea
out
mov
test
cmpb
hlt
popf
mov
cmp
sub
test
cmpsb
push
xor
jne
push
out
shlb
inc
dec
push
jo
in
dec
cmp
repz
fwait
jecxz
mov
sarb
je
dec
dec
add
jmp
rolb
mov
fisubs
push
mov
loop
shr
add
sub
cmp
mov
sbb
add
and
pop
inc
clc
xchg
imul
push
sub
adc
jecxz
xor
inc
setbe
mov
pop
pop
mov
mov
cmp
lods
cmp
xchg
cmp
sub
fsubrl
jecxz
out
pop
adc
dec
sbb
mov
or
dec
push
add
fsubl
ret
icebp
cmp
and
sbb
stos
cmp
push
fs
adc
pop
push
sbb
and
and
sub
xor
dec
add
inc
out
lcall
aas
xchg
mov
test
in
in
push
xchg
mov
mov
add
mov
adc
dec
in
or
insl
jle
mov
pop
mov
or
dec
dec
jne
add
dec
and
add
or
mov
cmp
add
call
repz
cld
pop
add
add
sahf
jno
test
inc
lcall
sub
pop
js
pop
or
push
ljmp
adc
mov
or
xchg
add
nop
xchg
mov
nop
enter
cmp
cmp
testl
test
js
arpl
xorb
add
orl
push
ret
sbbl
xchg
adc
addl
adc
adc
aaa
nop
push
xchg
insb
insb
inc
push
arpl
sbb
sbb
sbb
sub
pop
inc
add
sbb
or
les
dec
dec
pop
shrb
and
inc
push
dec
sti
dec
mov
dec
data16
adc
adc
jmp
fwait
cmp
nop
orb
cmp
scas
icebp
in
cmp
scas
and
mov
dec
pop
lods
andl
cmp
mov
adc
pop
inc
test
mov
xor
inc
ret
jle
add
jl
lea
add
mov
notl
rep
xor
les
shll
jmp
fsubr
xlat
fiadds
aaa
mov
mov
aaa
mov
inc
outsb
add
add
push
lods
xchg
jl
lea
outsb
gs
mov
pop
mov
jae
icebp
pop
fisttpll
mov
dec
mov
scas
movsl
cmp
mov
push
dec
fwait
jne
mov
nop
or
leave
or
xor
adc
fsts
add
nop
add
adc
push
mov
inc
push
jp
pop
hlt
scas
xchg
push
lret
inc
and
inc
out
test
mov
enter
or
push
stc
xchg
pop
cmpl
and
dec
mov
cmp
mov
pop
push
clc
mov
enter
out
rcl
dec
dec
dec
cs
and
xor
shlb
sub
repnz
rclb
sbb
addb
std
mov
lods
scas
filds
or
adc
pop
xchg
and
enter
arpl
jmp
add
mov
jbe
mov
xchg
aaa
and
loopne
inc
aas
add
or
addr16
xchg
sbb
cmp
push
inc
sbb
adc
mov
sbb
mov
or
insl
lsl
je
pop
add
add
mov
ret
aad
inc
lods
sbbb
or
sub
mov
mov
movsb
push
lcall
repz
mov
es
push
inc
jle
adc
or
movsb
rorb
adc
sbb
sub
or
dec
data16
inc
sbb
pop
push
inc
dec
dec
mov
pop
inc
or
fsubl
incl
sub
je
push
cld
inc
shlb
xor
push
inc
inc
ret
andl
aam
dec
cmp
les
je
adc
popa
dec
stos
test
outsb
and
adc
dec
je
movb
inc
stc
rcrb
push
xorl
and
add
repnz
repnz
and
rorb
jle
mov
xchg
cmpsb
cmp
pop
fwait
je
arpl
and
inc
shlb
inc
loopne
pop
lea
xor
push
popl
and
sbb
ja
and
and
mov
or
ja
fwait
jne
sub
xchg
push
push
mov
adc
addr16
xor
inc
adc
pop
or
ret
mov
sbb
fstps
mov
iret
test
ret
jnp
dec
and
inc
fs
pop
neg
shr
push
sbb
fsub
pop
push
insl
inc
dec
inc
fcompl
sub
inc
lds
xor
dec
mov
js
stos
jb
pop
lret
cmp
sbb
mov
mov
gs
xor
sub
fs
idivb
loop
mulb
mov
je
lock
dec
daa
xchg
sub
and
test
fisttps
xchg
inc
mov
shrl
sub
mov
or
loopne
mov
dec
pop
cld
inc
cli
add
cmpsb
test
or
pop
inc
xlat
inc
adc
clc
pop
xor
fdiv
sbb
inc
jle
dec
cld
test
loop,pn
loopne
mov
pop
push
sub
mov
push
hlt
or
dec
dec
les
or
add
sub
dec
or
sbb
cwtl
outsl
cmp
pop
adc
mov
mov
adc
or
cld
test
push
loope
addl
mov
inc
sbb
cmp
in
and
or
cmpsl
fildl
adc
leave
mov
add
and
dec
jmp
inc
ja
push
clc
cwtl
mov
stos
or
out
xlat
xlat
cld
sub
dec
icebp
push
cmp
test
pop
cmpl
xor
enter
push
mov
inc
sahf
adc
adc
jns
inc
lock
imul
orl
jmp
mov
sub
dec
push
cwtl
insb
aas
mov
and
cs
xor
inc
inc
sub
sbb
fisttps
scas
movsb
test
call
movsb
add
cwtl
push
cmp
adc
inc
xchg
fs
and
adc
jae
push
adc
adc
or
gs
cmp
inc
data16
inc
cmpsl
mov
and
jle
lcall
fcompl
mov
push
fiadds
dec
jp
in
popa
lods
ja
enter
in
stc
xorb
dec
push
neg
insl
jg
mov
rolb
and
lock
mov
jns
jg
idivb
jmp
cmp
push
add
gs
test
sub
mov
or
dec
sub
sub
ficoms
sbb
sbb
shl
jl
xor
and
mov
in
add
call
jo
dec
je
add
jmp
bnd
in
aam
bound
cmp
fiaddl
or
sbb
js
dec
subb
call
dec
dec
inc
inc
mov
aaa
adc
cmpsl
movsl
pop
nop
iret
push
push
sbb
inc
add
pop
add
jmp
sbb
lock
test
add
or
sbb
arpl
xor
in
inc
cmpsl
inc
add
gs
and
pop
inc
cld
sub
jno
iret
jg
test
ljmp
inc
mov
adc
stos
xor
lods
adc
adc
adc
xor
jecxz
les
and
jo
cmp
or
ljmp
cmp
jne
pop
arpl
or
aaa
daa
out
adc
insb
xor
pop
test
cmpb
adc
inc
jmp
fs
pusha
jecxz
ficomps
sahf
xor
and
pop
andb
aad
movl
inc
lret
jmp
clc
jge
adc
adc
popa
psubusw
mov
ret
je
xor
mov
rclb
jmp
mov
adc
lock
pushf
mov
cs
mov
dec
and
stos
lret
xor
in
loop
bound
or
ret
sub
inc
add
xor
adc
repz
add
add
lods
pop
rolb
sahf
scas
in
xchg
inc
jle
repz
in
xor
cltd
stos
adc
add
push
jp
loope
daa
cmpsl
loop
cmpl
or
je
out
je
push
inc
ds
js
push
imul
ja
add
sbb
xchg
fwait
clc
orl
cltd
inc
rclb
cld
cmp
nop
int
outsb
push
inc
jne
mov
cs
cmp
in
adc
lock
jae
mov
jb
addb
mov
xchg
or
pop
mov
dec
aaa
inc
push
xchg
xchg
dec
mov
mov
xchg
call
andl
sbb
inc
imul
aas
inc
push
lea
in
inc
pop
sub
cmp
push
add
add
popf
mov
cmc
jo
pop
rcrb
repz
sbb
movl
mov
and
out
or
xchg
adc
lea
sub
shll
jbe
sub
xor
xchg
add
xchg
cwtl
or
push
mov
xchg
mov
mov
and
out
dec
pop
inc
pop
or
pop
ja
mov
lea
mov
ret
lock
add
sub
adc
lods
popa
fistps
xlat
lret
jp
adc
pop
cmpl
stos
push
fdivrl
dec
pop
jl
mov
mov
sbb
aad
dec
or
enter
movsb
loopne
adc
test
inc
add
xor
aam
sub
or
add
sub
adc
sub
jg
adc
inc
repnz
sub
push
sbb
adc
out
sbb
popl
mov
sub
nop
dec
sarb
bound
cmp
add
addr16
adc
push
insb
in
outsl
sbb
mov
scas
xor
jns
test
add
mov
sbb
sbb
pop
movsb
xor
adc
arpl
in
xlat
sbb
sti
lret
imul
popa
mov
pop
or
leave
mov
xor
push
or
and
out
fs
and
add
adc
or
dec
add
mov
or
xchg
scas
or
jge
insl
xor
inc
xchg
outsw
jge
movsb
add
adc
adc
adc
cmp
mov
rcrb
stc
cmpsb
dec
mov
push
nop
pmulhuw
hlt
mov
adc
cmpb
push
and
movsb
lcall
ja
xchg
gs
pop
jmp
sub
jmp
pop
add
add
sbb
add
roll
push
lock
push
or
imul
cwtl
jns
shr
stos
jge
jmp
sub
jmp
arpl
jb
mov
imul
hlt
lret
jne
mov
sbb
sbb
add
insl
jb
test
cmc
jno
mov
and
push
movsb
lock
mov
cs
aas
cmp
imul
adc
into
repz
mov
jb
sub
push
loope
dec
cmp
dec
js
pop
push
pop
or
dec
push
add
jne
movsb
cmp
pop
hlt
dec
cmp
ja
repz
mov
sbb
mov
cmp
daa
jbe
push
addr16
imul
call
cmp
lret
sub
fld
inc
inc
imul
adc
lea
fadd
cmp
add
pop
inc
mov
lds
jne
add
mov
sahf
loopne
xchg
cmp
jae
notl
das
push
cmp
push
push
and
rolb
push
movsb
outsb
sub
push
add
lock
jmp
sub
rolb
or
sub
inc
push
pop
mov
leave
sbb
orb
int
mov
andb
imull
daa
inc
sub
pusha
push
icebp
dec
imul
push
les
xor
push
add
popa
adc
iret
stc
xchg
push
sti
cmp
int
mov
xor
ss
push
dec
push
ja
out
idivb
loopne
and
out
cmc
inc
loop
vmread
and
jbe
js
rcrb
pusha
mov
cs
outsl
lcall
inc
lock
pop
pop
subb
inc
frstor
rclb
push
lret
mov
add
inc
push
xchg
pop
loope
jge
and
lahf
mov
mov
sub
cltd
cmp
push
cmp
test
xchg
add
enter
jmp
and
dec
mov
js
lock
add
pop
lahf
sbb
cltd
sub
loopne
iret
mov
pop
jne
pop
rorb
std
cltd
jno
sbb
icebp
aad
aaa
test
clc
cmp
bound
pop
push
out
push
inc
test
push
mov
or
movb
adc
inc
popf
in
or
negb
mov
cmp
xchg
sbbb
add
push
and
cmp
jge
push
sbb
xor
add
or
sarl
iret
mov
or
out
mov
and
mov
xor
hlt
jb
imul
int
mulb
fs
pop
inc
cmpsl
xor
push
jno
leave
xchg
or
lock
or
push
xor
push
mov
inc
int
mov
imul
inc
cmp
or
or
lods
add
shlb
xchg
lock
repnz
pop
fistpl
adc
adc
adc
pop
mov
sub
adc
mov
inc
movsb
inc
or
mov
push
lods
test
inc
and
loopne
pop
and
add
jns
enter
ror
inc
add
das
pop
in
dec
push
dec
and
fimuls
and
pop
addr16
gs
xor
cli
nop
xchg
sbb
adc
xchg
xlat
or
out
and
mov
jge
daa
rcll
or
loop
sbb
pusha
push
out
adc
call
ffreep
cwtl
loopne
movsl
push
mov
jne
and
cs
push
prefetch
xchg
mov
popa
in
and
inc
xor
inc
ss
adc
fcomps
inc
iret
imul
enter
andb
adc
sub
sub
xchg
rcll
loop
add
test
clc
ds
cmp
aaa
push
in
clc
and
cmpsl
push
or
dec
adc
xor
fwait
repnz
jb
xor
inc
cmc
xor
and
xor
fs
sub
rcll
mov
mov
jge
jmp
je
jmp
pop
add
add
lret
outsl
and
mov
add
adc
jo
jne
jo
shr
mov
inc
adc
cltd
or
daa
xchg
jbe
dec
adc
pop
lret
mov
into
xchg
dec
popf
insl
sub
call
jne
push
int3
and
pop
inc
punpckhdq
bound
shr
xchg
jg
cmp
pop
sbb
xchg
sub
mov
and
and
or
xor
push
pop
xchg
xchg
jne
inc
dec
insb
pusha
test
and
test
cmp
inc
push
push
mov
mov
repz
mov
and
xchg
and
movsb
js
sti
enter
outsl
cmp
lods
sbb
cwtl
popa
in
mov
test
dec
ljmp
mov
js
and
or
inc
decb
mov
lods
out
add
hlt
movsb
icebp
jmp
sub
lea
mov
push
mov
ror
movsb
inc
shl
mov
sub
roll
mov
cli
repz
aas
fdivs
popa
lret
xor
pop
mov
cmpsl
sub
lock
jle
movsl
inc
jmp
imull
lret
and
mov
leave
je
add
sbb
ret
pop
leave
inc
cmc
push
jmp
sub
jmp
call
cmp
add
nop
pusha
dec
push
sub
pop
or
cli
addl
lods
or
or
mov
mull
hlt
aad
or
adc
xlat
xor
outsl
pusha
orb
rclb
sbbb
daa
jp
mov
xor
and
pushf
dec
dec
ja
imul
fdivs
add
mov
test
mov
testl
and
inc
rcrb
mov
mov
daa
or
inc
adc
sub
cmp
sub
addl
sub
xchg
scas
stc
mov
or
mov
add
inc
das
inc
mov
add
out
pop
mov
hlt
add
dec
sub
adc
jle
inc
ds
add
cmpb
mov
dec
jmp
or
inc
adc
xor
or
sbb
in
and
xchg
je
dec
inc
rcll
repnz
pop
sbb
push
test
dec
cmp
inc
jae
inc
mov
push
adcb
and
sbb
inc
mov
jns
sub
and
inc
call
and
or
xchg
je
jns
inc
daa
loopne
sti
nop
call
sub
adc
dec
dec
pop
mov
inc
mov
nop
adc
loop
adc
cmp
js
add
andb
lea
imul
loopne
test
adc
hlt
ja
mov
push
inc
je
and
dec
popf
xor
aas
push
shrl
or
data16
ds
daa
mov
test
mov
mov
mov
stos
xchg
mov
adc
sub
lahf
insl
das
sahf
nopl
repz
xchg
addl
pop
je
sub
jle
sbb
mov
and
fcomi
xchg
push
lods
adc
sub
jo
xchg
aas
in
or
lock
adc
sbb
mov
inc
push
and
push
mov
stos
mov
add
popf
or
mov
inc
mov
inc
add
cmp
in
and
aas
mov
push
mov
jae
mov
mov
jl
fidivrl
sbb
daa
sbb
sub
cmp
cs
push
dec
jo
inc
jns
lods
push
sti
adc
sbb
inc
scas
lea
test
push
sbb
mov
mov
jl
ficoml
das
mov
rorl
cli
dec
mov
cs
fsubl
leave
mov
xchg
rcl
stos
test
sbb
inc
das
xchg
or
out
imul
icebp
pop
gs
inc
loopne
enter
inc
add
inc
js
inc
push
mov
xchg
pop
inc
js
imull
push
jae
sub
add
pusha
loopne
xlat
add
jle
jle
push
add
sub
lods
mov
int3
dec
add
mov
fwait
or
sbb
pop
or
jns
ret
fs
repnz
xor
sub
setno
cmp
inc
cltd
lods
leave
and
sub
outsl
mov
adc
aad
pop
fadds
push
sub
adc
pusha
pxor
jmp
push
ljmp
pop
ret
cmp
jmp
repz
push
shll
andl
aas
inc
and
sub
push
push
mov
sti
sbb
leave
push
jbe
inc
dec
nop
mov
and
adc
xor
enter
sub
cmp
imul
jmp
mov
mov
mov
lret
fcoms
dec
xchg
xchg
js
in
xor
fsts
jbe
pop
int3
adc
cmp
adc
inc
hlt
jne
push
fwait
cmp
arpl
adc
mov
or
xchg
fldenv
fwait
in
or
je
inc
and
loop
sbb
das
js
and
enter
out
fwait
testb
setne
mov
pushf
xor
cmp
pop
shl
fisttpl
adc
mov
push
nop
xor
inc
or
sub
cld
cmc
add
js
add
xor
mov
sti
dec
xchg
or
add
out
sbb
mov
mov
or
xor
pop
push
je
sub
dec
and
xchg
not
jb
and
pop
int
gs
push
and
inc
pop
popf
jo
in
or
push
jno
cs
cwtl
and
and
dec
xchg
insb
addr16
pop
mov
sbb
sub
jae
sub
daa
jns
cmp
mov
or
into
test
cmp
sbb
sbb
flds
mov
or
jl
sbb
xchg
out
add
jmp
xor
mov
add
arpl
inc
imul
fld
push
mov
cmpb
or
loope
and
std
cmp
cs
jge
inc
xchg
cmp
gs
test
xor
mov
sbb
ret
test
jl
and
or
adc
ss
jmp
dec
and
out
push
adc
rorl
int
push
adc
fs
lea
mov
mov
mov
imul
pop
pop
pop
lahf
dec
mov
push
mov
inc
push
hlt
adc
ret
add
shlb
mov
cmpsb
inc
xor
daa
add
insl
and
fstps
and
mov
xor
cwtl
sbb
jmp
test
daa
mov
push
and
das
cmp
fsubrs
sbb
les
cmp
add
push
inc
xor
dec
sub
rol
sub
arpl
push
clc
push
clc
add
iret
xor
stos
xorl
dec
and
enter
int3
lret
shrb
and
mov
mov
jmp
data16
adc
pop
dec
fdivrp
or
xchg
data16
ror
mov
push
insb
pop
sbb
jmp
in
pop
aaa
xchg
xorb
push
xchg
adc
xchg
mov
clc
and
sbbb
add
dec
xadd
jne
dec
xor
ret
mov
dec
jo
mov
negb
push
inc
ss
mov
push
mov
jne
xor
sub
mov
int3
loop
shrb
std
rorb
dec
xchg
sbb
pop
fs
xchg
ja
or
adc
movsb
loop
or
sub
andl
loopne
icebp
jecxz
repz
mov
aam
pop
dec
lahf
sbb
insl
imul
cmp
sub
mov
sub
cmp
pop
lods
xchg
out
adc
or
mov
std
das
push
sub
or
movb
fcompl
add
adc
mov
das
gs
adc
mov
and
add
xchg
inc
das
dec
clc
mov
pop
lcall
sub
inc
mov
inc
daa
sarl
movsl
add
fdivrl
pop
xor
or
jmp
mov
xchg
sahf
sbb
or
mov
xchg
dec
call
imul
push
jb
aam
jge
push
mov
cwtl
add
mov
xchg
inc
shlb
push
aas
int3
add
xor
dec
call
jg
lahf
and
sub
orl
ds
cmp
and
shll
sub
jl
push
xor
push
jg
mov
push
jbe
inc
mov
add
or
in
cmp
js
ljmp
dec
ficoms
adc
call
pop
mov
fs
or
sbb
mov
sbb
push
fnstcw
push
imul
loop
fcompl
enter
push
andb
jne
imul
inc
jnp
xor
ds
lcall
inc
clc
dec
cmpsb
jnp
sbb
add
cli
mov
jmp
pop
js
mov
and
imul
les
sub
lahf
or
mov
inc
sbb
nop
sub
mov
push
jecxz
pop
cmp
xor
lret
cmp
les
test
jmp
adc
or
addr16
pop
push
das
loope
mov
inc
mov
cli
or
inc
and
in
cmp
addb
inc
mov
je
test
sahf
lahf
lock
ret
cmp
aam
add
and
cmp
adc
cmp
sub
add
pushf
andb
push
fldenv
addb
adc
outsl
mov
mov
sub
push
jl
xchg
adc
pop
sub
dec
clc
add
inc
aam
or
cmp
push
fwait
push
leave
fsubl
loopne
cmp
mov
sub
sub
mov
inc
shll
sbb
aaa
add
add
adc
sub
lods
jnp
inc
dec
enter
fiaddl
out
add
movsl
das
pop
rcrl
popa
sbbl
pop
nop
mov
iret
psubusb
mov
fdivs
adcl
cmp
adc
pop
cmp
pop
push
jno
sbb
sub
ss
rcl
mov
arpl
xlat
aam
adc
xorb
fmull
xchg
decb
jne
rcrl
pop
sbb
pop
jns
popa
sub
push
or
rcll
adc
mov
add
jb
add
jmp
std
test
scas
add
inc
mov
pop
pop
inc
imul
push
pop
push
xchg
shll
cmp
sub
push
or
jae
frstor
sbb
add
ja
or
jno
xor
cmp
or
adc
pop
pop
xor
or
sbb
clc
andb
or
sbb
add
lahf
mov
add
push
and
adc
sbb
dec
adc
mov
adc
xchg
les
adc
loopne
push
sub
inc
mov
mov
aam
cmp
sbb
jge
jae
pop
aaa
xor
js
cmc
popa
sub
je
outsl
jnp
ds
push
add
adc
push
push
jo
lock
or
shrl
add
in
popf
dec
je
push
lret
adc
or
inc
lock
cmp
or
imul
adc
nop
mov
fadds
xor
adc
sub
adc
xor
cltd
in
mov
sbb
dec
repz
and
fisubl
or
lea
push
mov
ret
subb
sbb
jbe
or
xchg
imulb
xor
movsl
inc
or
mov
test
daa
and
mulb
sbb
dec
jae
add
mov
call
scas
pop
movsb
add
or
test
cmp
push
mov
fldl
sahf
sub
jns
sbbb
cmp
fucomp
pop
jmp
and
sbb
cmp
iret
mov
sbb
or
xor
mov
jecxz
inc
in
clc
cmp
cmp
or
mov
ja
les
dec
dec
or
mov
cmp
popa
pop
sub
or
add
inc
out
or
repnz
repnz
push
push
sub
xchg
adc
mov
push
and
xor
add
rorl
sub
addb
dec
pusha
inc
add
cld
lret
fs
xlat
cs
out
xchg
mov
mov
ja
rorl
dec
das
dec
xlat
mov
mov
xchg
xchg
mov
repnz
dec
push
adc
add
rclb
push
add
cld
lds
and
pushf
sub
dec
push
pop
adc
add
inc
push
jns
inc
cld
push
add
pop
mov
or
in
mov
cmp
mov
cli
inc
add
ret
add
pop
jmp
clc
test
in
fcom
xchg
mov
dec
pusha
in
and
inc
add
je
mov
add
pusha
sti
or
mov
test
jbe
testb
movsl
push
pusha
sub
push
inc
nop
sub
addr16
or
incb
sbb
xor
and
jmp
xchg
cmp
cmp
ficoml
mov
in
in
xchg
or
sub
add
push
mov
shlb
mov
push
cmp
xchg
adc
xchg
fnstenv
and
nop
xchg
xchg
jmp
xor
add
pand
cmp
push
lods
into
inc
cld
in
mov
xlat
movsl
or
aaa
sub
cmp
lods
faddl
add
push
pop
mov
xor
add
jne
cmp
jne
add
cmp
cmp
loop
aas
jl
sbbl
pop
je
clc
mov
ja
add
nop
xchg
mov
sbb
sbbb
xchg
or
adc
ss
inc
add
aas
jns
inc
jg
rcl
movsl
out
and
push
test
push
ds
les
sub
pop
out
jb
sub
cmp
jnp
dec
cmp
mov
inc
cmp
push
test
xchg
xchg
jo
icebp
push
mov
movsl
fs
cld
xor
or
orb
cs
mov
inc
mov
lock
dec
ret
pop
popa
lock
mov
inc
or
addr16
aas
and
inc
xlat
xor
sub
and
pop
xor
mov
xchg
sub
shlb
daa
pop
daa
fwait
pusha
inc
add
inc
xchg
pop
and
sub
pop
iret
mov
sub
mov
jns
repnz
nop
insl
clc
mov
into
push
or
sub
cmp
inc
push
add
addb
push
dec
mulb
jmp
cmpb
lahf
xchg
inc
or
sub
movsb
pop
sbb
add
rcrl
sbb
loopne
dec
rolb
lret
push
mov
clc
cmpb
add
adc
pop
mov
lret
xchg
stos
xor
or
add
pop
inc
test
or
xor
lds
sbb
pop
adc
imull
push
add
add
je
push
lods
sbb
cs
popf
idiv
mov
shlb
filds
rorb
lahf
add
sub
inc
adc
call
pushf
adc
and
out
leave
or
add
fsts
or
dec
das
add
adc
lods
inc
fisubl
mov
or
andl
pop
loopne
push
cmp
fidivl
scas
push
incb
adc
pop
inc
xchg
cmc
cmp
cmp
inc
data16
dec
shl
inc
dec
sbb
sub
cmp
ret
lret
adc
ret
add
mov
mov
sub
jnp
jg
orb
cmpl
add
iret
daa
lds
mov
popf
and
rcrb
or
and
lcall
mov
ds
cmp
pop
in
xor
aas
test
add
xchg
test
inc
push
seta
jmp
mov
leave
inc
sbb
jmp
or
outsl
mov
mov
adc
inc
fstpl
add
sub
out
sub
adc
sub
into
inc
call
dec
push
imul
scas
xchg
cmpb
sub
push
adc
cmp
clc
fsubrs
cmpsl
cmc
adcl
jge
dec
xchg
xchg
push
scas
sub
xchg
dec
lahf
scas
fs
pop
fdivrs
mov
push
mov
or
xor
leave
pop
push
mov
rol
inc
cmp
mov
add
add
cmp
mov
or
push
add
sarb
sbb
imul
cli
inc
sub
cld
clc
dec
mov
or
rclb
push
scas
cmp
popf
shrb
and
ja
lcall
addr16
sub
repnz
and
jo
jmp
jns
imul
out
sbb
push
out
inc
fcoms
sbb
sub
or
or
pop
cmp
pop
push
mov
cld
rclb
push
iret
pop
and
add
mov
and
sbbb
je
nop
add
xchg
aaa
inc
and
lret
xchg
test
inc
pop
jae
jo
add
add
nop
push
gs
movl
popa
xchg
fs
push
es
and
les
call
icebp
addr16
inc
or
or
push
xchg
or
xchg
add
and
mov
add
scas
inc
dec
es
inc
and
cmp
xchg
cli
fildll
sbb
dec
enter
sub
push
nop
jo
das
loop
mov
adc
daa
adc
adc
sbb
and
push
ljmp
mov
jmp
or
pop
pop
xchg
jne
mov
mov
push
ds
xor
loopne
mov
and
aad
push
ja
stc
xlat
fimuls
cmp
emms
inc
jb
xlat
out
fcmovnb
or
jne
hlt
fisttpl
loope
mov
push
push
aaa
cltd
jmp
mov
jne
dec
cmpsb
fldenv
lds
jno
nop
xchg
inc
shrb
dec
add
or
or
and
sti
mov
iret
or
ja
sbb
subb
mov
aad
and
jns
jle
mov
dec
pop
or
pop
add
add
pusha
and
sbb
push
clc
xorl
adc
ficompl
lea
pop
dec
mov
clc
ss
or
pop
std
jle
sahf
aam
inc
into
xor
dec
test
adc
jnp
or
push
jp
mov
and
push
inc
add
dec
dec
adc
push
jo
into
call
loopne
dec
jg
xor
mov
rcpps
push
adc
cmp
rclb
pop
idiv
or
jl
jns
mov
inc
or
xchg
sub
or
dec
mov
and
gs
outsl
and
insb
or
sbb
lret
jae
addb
fstpl
sub
cmpl
inc
mov
pop
mov
dec
sub
add
xchg
xchg
mov
pop
das
push
vfrczpd
push
push
sbb
sbb
nop
cmp
jb
add
push
mov
inc
inc
fstpt
fnstcw
inc
cmp
mov
pop
aas
sahf
adc
inc
jo
xchg
adc
ds
add
dec
or
jns
mov
add
aam
insb
mov
mov
orb
mov
push
bound
lods
insl
cmp
jae
rol
arpl
or
lock
pop
inc
push
push
add
ret
das
sub
and
add
imul
and
adc
cltd
xchg
xor
mov
scas
out
adc
lock
icebp
pop
or
push
adc
test
sub
pop
add
sarb
adc
jb
rclb
pop
inc
addb
test
xchg
push
scas
rcr
mov
push
cmpsb
loopne
push
popa
jne
stos
mov
sbb
jl
pop
mov
outsb
push
or
pop
mov
and
push
rcll
ret
lock
pop
jbe
inc
sahf
inc
inc
call
vpunpckhwd
xorl
add
insb
inc
add
xor
dec
jne
xchg
movsb
shlb
cld
dec
jle
fcoml
add
stos
xchg
mov
enter
aaa
dec
iret
jge
push
clc
icebp
and
jnp
and
cs
loop
mov
fsubs
sub
rclw
out
mov
shlb
inc
xor
lret
popa
subb
push
dec
xchg
sbb
cli
enter
mov
or
and
lahf
push
push
mov
push
push
push
pop
inc
cmp
mov
movsb
inc
cmp
mov
daa
fldenv
jmp
dec
cmp
shrb
and
in
sub
shlb
nop
mov
clc
test
xor
pop
cmp
pop
in
jecxz
jno
daa
jb
int
rcpps
add
rclb
mov
cmp
xchg
ret
ficompl
out
push
push
lcall
insb
push
aam
adc
loope
nop
xor
lods
mov
mov
lcall
push
scas
cmpsb
aam
addr16
mov
loop
sbb
or
cmp
das
dec
mov
jecxz
pop
cmp
ret
push
js
push
jl
loope
js
mov
sbb
inc
movsb
sub
dec
mov
mov
cwtl
pop
cmpsl
aaa
mov
or
aaa
xor
popf
dec
cmpb
movsl
setg
and
inc
or
aad
or
pop
iret
push
pop
fldl
xor
fcmovu
cmp
adc
or
push
dec
jbe
mov
pop
dec
jmp
gs
and
xorl
ud0
add
jb
dec
adc
adc
cmp
jg
jmp
addb
in
dec
or
jnp
push
dec
adc
dec
clc
pop
jne
pop
mulb
sti
push
adc
or
xchg
rcrb
sub
mov
add
inc
aam
mov
pop
lahf
pop
dec
push
aad
test
add
or
shll
xchg
dec
xchg
add
add
push
pop
mov
mov
mov
in
mov
push
pop
nop
jnp
pushf
xorb
adc
push
dec
dec
add
cs
popl
jle
xor
mov
je
sbb
cwtl
sub
iret
mov
push
adc
pop
jmp
add
jb
dec
arpl
and
jmp
dec
push
mov
pop
in
dec
addb
sub
mov
mov
test
mov
add
gs
mov
inc
push
jle
sub
push
or
dec
push
sbb
popa
dec
scas
por
add
lcall
cwtl
in
out
aas
jns
mov
test
push
pop
ret
xchg
inc
xchg
idivl
xor
jne
add
pop
sbbl
sub
inc
and
das
addr16
dec
or
mov
cli
sbb
xor
jecxz
test
sahf
sbb
nop
or
bound
loopne
push
xchg
cmp
mov
add
cmp
pop
les
sbb
inc
loop
inc
loope
mov
push
pop
adc
push
pop
xor
mov
mov
and
rorl
in
inc
xchg
aaa
xchg
inc
daa
jne
movsl
adc
iret
push
sti
xor
decb
adc
inc
adc
je
push
sub
inc
and
mov
jae
xor
mov
and
sbb
lods
xchg
aas
hlt
sub
mov
or
jp
add
sbbb
inc
and
rcrb
or
nop
sbb
insb
push
rolb
dec
imul
or
cwtl
in
inc
jmp
ja
push
or
jmp
lret
jne
inc
ret
add
pop
addr16
scas
inc
add
push
inc
insl
adc
int
and
inc
pop
and
ja
orl
loope
int3
sbb
sbb
and
jae
nop
int3
cmc
add
jb
insl
shrb
shl
cmp
cli
fsts
inc
or
mov
add
dec
mov
inc
xlat
popa
rorb
nop
in
add
and
jmp
dec
test
fcom
loope
mov
mov
in
test
add
in
adc
mov
jle
and
mov
xor
pop
sub
or
xchg
lds
jo
mov
add
sti
cmc
mov
cmp
push
ficompl
orb
imul
push
ret
loopne
mov
out
lds
push
cli
xor
sti
stos
adc
xlat
int3
push
sbb
xchg
inc
mov
and
push
or
dec
xor
adc
jge
cmp
dec
nop
inc
arpl
mov
sbb
pop
mov
insl
add
add
xor
or
daa
sub
rolb
mov
fsubrl
push
or
push
test
mov
add
pop
or
incl
gs
xor
hlt
jne
xor
push
mov
mov
inc
jne,pn
addl
orl
sbb
xor
daa
or
addr16
mov
mov
pop
sub
or
xchg
push
daa
xor
arpl
push
loope
rorb
add
int
pop
mov
sub
imul
andb
mulb
inc
push
inc
sub
fdivs
adc
sub
aaa
cmc
shrl
or
jge
cmpsl
sbb
add
lcall
pop
mov
aas
fucomi
aaa
add
cmp
jle
aas
pop
push
pushf
lods
cltd
dec
mov
cmpsb
testb
xchg
loopne
fiaddl
int3
xorb
xchg
add
rcll
or
push
negl
test
test
aas
das
cmp
movsb
jae
push
testl
insl
mov
movsl
das
nop
pushf
in
mov
jmp
cmp
mov
pop
shufps
dec
adc
push
add
sub
ror
xchg
mov
push
or
sbb
shll
stos
arpl
add
out
xor
cmp
cwtl
xchg
test
push
adc
sub
std
enter
pop
stc
pop
cmc
popf
xor
je
pop
shlb
ss
lahf
cmp
femms
es
and
xchg
imulb
sbb
cmp
and
test
scas
addb
imul
das
mov
mov
mov
je
cs
adc
add
inc
addl
and
and
or
pushf
push
jns
pop
sub
mov
xor
shlb
adc
adc
push
sub
arpl
xchg
xchg
inc
cmpsb
xchg
inc
lock
and
sub
push
adc
xor
push
cmp
pusha
icebp
adc
xlat
or
jno
inc
repz
xor
adc
mov
push
xchg
ret
mov
psubq
addr16
loope
cwtl
cmp
add
or
cwtl
jb
mov
and
dec
xor
xchg
in
call
lock
dec
or
mov
sub
ss
mov
xor
or
rorl
add
dec
mov
adc
imul
cmpb
xor
push
movb
sbb
add
adc
sahf
outsb
in
hlt
sub
scas
iret
jp
or
push
iret
pop
rorl
xchg
add
or
push
fucom
and
add
or
mov
or
daa
sbb
stc
and
imul
iret
push
call
loopne
rolb
jbe
pop
je
pop
int
ret
sbb
sub
adc
mov
sbb
faddp
scas
xor
xchg
cwtl
xor
mov
dec
pop
fsubrl
or
push
add
pop
xor
push
cmp
pushl
ljmp
adc
add
stc
mov
or
add
jl
cmpl
mov
inc
out
mov
add
mov
icebp
pop
dec
jge
outsl
pop
add
dec
dec
mov
push
xlat
sbb
mov
push
xlat
xchg
adc
or
dec
mov
insl
inc
ret
jns
xchg
lods
mov
add
push
imul
clc
fs
cmp
mov
std
inc
sub
dec
movsl
cmp
clc
clc
lock
dec
sub
or
or
call
mov
sbb
pop
rorb
fmul
popa
nop
out
mov
enter
mov
add
sahf
adc
xchg
push
das
add
sbb
repnz
roll
rclb
dec
add
xor
scas
or
outsl
movb
mov
jmp
cmp
sbb
sbb
dec
inc
mov
jle
int
ss
add
mov
daa
add
sub
lock
dec
or
mov
or
addb
pop
or
jb
gs
and
push
mov
dec
and
mov
xchg
dec
movsl
pusha
or
sub
adc
pop
jmp
mov
insl
add
sarb
sub
mov
loopne
add
mov
cs
jle
out
or
out
iret
push
and
jle
adc
pop
push
sbb
ficomps
int3
add
sub
mov
imul
mov
mov
push
sub
or
icebp
bound
dec
or
ret
stos
cmp
xor
fisubl
add
sbb
lcall
dec
int3
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
hlt
test
repz
int3
add
add
lods
fadd
push
or
dec
add
xchg
and
add
dec
mov
add
jo
inc
add
adc
cld
dec
lea
dec
sarb
nop
pop
inc
incl
scas
and
loope
xchg
lock
dec
mov
add
and
xchg
mov
add
mov
or
hlt
sbb
notl
fnstcw
push
jbe
cmp
and
js
xorb
movsb
xor
in
sub
jne
push
dec
cmp
clc
and
jmp
pop
cmpb
jne
stc
cmpsl
insl
or
cmp
add
sub
test
sub
iret
outsb
pop
sbb
jmp
dec
jne
inc
enter
or
adc
push
inc
xchg
enter
mov
jl
mov
cld
add
sbb
mov
or
sub
sub
push
cmpsb
add
sbb
les
out
xor
loopne
push
imul
es
xor
xchg
das
cmp
popf
adc
call
imul
push
add
jno
jae
mov
mov
lock
push
add
sbb
add
dec
xchg
mov
negb
rolb
push
adc
int3
add
lcall
or
mov
jg
inc
xchg
mov
hlt
xchg
imul
jne
pushf
lret
xchg
aam
pop
leave
mov
jecxz
push
cld
insb
add
repnz
pusha
cmp
fsubrs
add
test
add
add
add
sbb
jne
lea
insb
or
push
insl
insb
sub
pusha
cmp
aam
mov
inc
jnp
enter
adc
testl
push
sub
adc
push
aas
xchg
rorl
and
loop
pop
clc
sbb
jns
mov
adcb
mov
testb
bound
int3
hlt
das
add
sbb
mov
movsb
mov
mov
fwait
xchg
or
adc
fnop
or
sbb
mov
mov
test
lcall
fwait
jnp
dec
sbb
sbb
shlb
adc
add
clc
add
and
aam
dec
repnz
mov
fdivp
jno
cltd
in
jo
mov
movb
notl
and
nop
push
ljmp
out
mov
xchg
sbb
punpcklwd
mov
dec
iret
push
or
add
dec
xor
cmp
push
xchg
sbb
test
xor
js
jnp
dec
add
sub
test
push
add
cmp
adc
outsb
stc
cmp
addb
inc
ret
in
adc
lret
adc
add
add
sub
ss
add
cmp
je
enter
or
popf
and
push
cmc
dec
jnp
sbb
adc
out
push
push
mov
orb
jecxz
add
imul
addl
sahf
rolb
or
jns
sub
mov
inc
jo
xchg
popa
mov
mov
dec
and
xor
add
mov
jne
xor
pop
out
or
das
cmc
dec
xor
mov
and
or
sub
adc
iret
or
in
addr16
mov
push
cmpsl
cmp
mov
sbb
out
movl
pusha
daa
test
and
hlt
or
add
gs
fisttps
add
and
lahf
hlt
scas
test
shrl
dec
adc
call
pop
int
mov
test
xchg
in
pusha
int
push
push
adc
je,pn
pop
imul
or
dec
add
xor
dec
insl
icebp
mov
sbb
mov
dec
or
xor
add
mov
lcall
imul
call
nop
push
cmp
jl
jno
lcall
sub
mov
andb
sbb
mov
nop
sbb
movb
push
xchg
jb
pop
lea
jge
sub
sbb
push
add
cltd
nop
xchg
sub
nop
sbb
cs
xor
push
es
dec
jnp
add
ja
mov
cmp
adcb
ss
xchg
fs
xchg
inc
and
js
pop
mov
loop
pop
flds
add
adc
jbe
sub
leave
pop
fs
nop
ficoml
add
cmp
mov
or
dec
inc
fmuls
aaa
xor
inc
sbbb
lock
lods
dec
xorb
pop
mov
sub
bound
arpl
dec
pop
pusha
push
hlt
add
and
jne
in
adc
pop
mov
adc
lock
push
push
pop
push
or
addr16
cmp
lock
inc
loope
lods
dec
inc
add
or
aaa
pop
jbe
dec
movsl
cmp
mov
add
cmpl
sub
add
jb
jmp
inc
loope
mov
push
or
insb
xchg
std
lahf
cmp
es
repz
cmpb
inc
imul
add
dec
push
xor
push
cmp
in
sbb
popa
loopne
or
enter
xchg
icebp
inc
push
enter
add
imul
cld
jl
sub
or
push
push
insb
test
jmp
xchg
add
outsb
and
add
jge
sbb
js
test
lods
dec
xchg
xor
shld
add
adc
aam
pusha
aaa
clc
jge
cmp
aam
clc
jae
loopne
mov
daa
dec
call
out
dec
call
mov
pop
ss
hlt
shll
ficoml
mov
xor
and
arpl
or
sbb
cmp
mov
setl
dec
cmc
or
lret
fidivrl
push
pushf
pop
xchg
test
cs
js
xor
aaa
push
mov
aaa
inc
pop
rol
xchg
es
sub
mov
cmpsb
or
lcall
and
rclb
inc
add
mov
xchg
cmp
fnstenv
rorl
add
inc
dec
cmpsb
mov
insl
mov
pusha
push
ljmp
jae
xor
dec
or
fucomip
pop
repnz
addl
push
or
adc
mov
in
inc
jno
loope
jmp
push
popa
in
dec
dec
mov
jne
push
daa
pop
push
or
aas
add
iret
dec
test
ds
add
inc
jbe
ret
push
nop
adc
add
xor
outsl
aad
and
pop
mov
fcmovne
lock
pop
leave
push
jg
adc
dec
wrssd
and
loope
in
pop
icebp
pop
movsl
ret
int
sbb
xchg
mov
iret
sub
addr16
je
mov
and
and
fmul
nop
fidivrl
pop
push
out
push
gs
push
push
lds
adcl
add
or
dec
orb
mov
sub
mov
push
js
jne
out
test
test
pop
jbe
xchg
pop
cmp
inc
inc
faddl
sbb
daa
ljmp
out
ljmp
pop
cmp
ja
je
pop
xchg
sahf
add
or
ret
int3
xchg
push
lock
stos
inc
insb
repz
inc
fildl
push
popa
sub
repz
inc
out
popa
in
fsubrs
rclb
pop
fstps
push
fldenv
or
sbb
pop
push
cmp
das
add
cmp
pop
pop
push
aas
fcompl
xor
loopne
inc
push
test
sbb
lds
fwait
jl
sbb
add
es
pop
enter
sub
xchg
or
xor
pop
pop
insb
aas
sarb
mov
orb
push
lret
dec
pushf
in
jo
add
xor
pushf
mov
aaa
shrb
cmp
or
movsb
mov
inc
pop
xor
mov
mov
sbb
pushf
push
js
pop
jmp
loop
add
mov
inc
sub
arpl
jo
push
jno
js
fs
adc
push
mov
push
add
test
leave
dec
mov
clc
and
xchg
movsb
jg
neg
andb
jg
adc
aaa
leave
adcb
inc
push
jmp
add
popa
pop
inc
push
mov
lods
shrb
or
add
push
sbb
jp
or
hlt
dec
adc
add
repnz
jp
ret
push
add
mov
adc
push
fwait
bound
orb
jnp
aad
pop
push
scas
xor
dec
push
clc
adc
inc
adc
xor
add
popf
push
das
shrb
js
dec
dec
sub
fstps
inc
lea
rclb
inc
sbb
sbb
aad
or
push
jne
ja
push
adc
cmp
adc
pop
push
or
inc
adc
fwait
shrl
jo
cmp
jne
adc
cmpsl
rorb
ss
sbb
repz
cmp
or
xor
add
push
lcall
addl
inc
decb
jg
call
call
fwait
imul
jne
add
fstpt
dec
push
add
ret
add
lds
ret
sub
nop
add
inc
mov
fbld
xchg
xchg
adc
and
fadd
and
pop
pop
inc
pop
adc
insl
call
mov
movsl
mov
lods
push
les
int
sahf
nop
inc
sbb
pop
pop
addr16
jne
mov
daa
or
imul
insb
jl
or
pushf
mov
enter
movsl
outsb
test
aam
adc
or
mov
add
adc
xchg
mov
sbb
adcl
push
mov
cmp
pop
lea
push
arpl
push
mov
in
adc
inc
add
or
lret
pop
incl
cltd
dec
dec
dec
mov
movsl
xchg
lcall
ficoms
or
ljmp
jnp
pop
jo
dec
pop
add
insb
out
and
out
cmpl
test
test
lahf
sbbb
xlat
push
push
fdivrl
fdivrs
lock
add
and
adc
jg
add
or
sbb
pop
or
lret
js,pt
adc
jne
push
cmc
lret
mov
sub
ljmp
lods
push
fs
adc
push
in
je
cmp
test
sahf
sub
aaa
cmpb
or
dec
imul
ret
das
mov
pop
fldcw
lret
mov
mov
mov
or
push
mov
add
ret
insl
jle
mov
aam
or
or
in
jmp
pop
or
and
loop
lret
xor
fiadds
inc
push
dec
enter
cmpsl
das
pop
imul
sub
sbb
adc
cli
sub
sbb
and
push
push
xor
push
or
sub
loope
pop
push
jb
adc
pop
sbb
fcomps
rorb
cmpsl
jnp
ret
or
fbstp
and
lret
out
insb
add
cmp
or
aaa
xor
sub
andl
call
pushf
scas
add
andl
pop
daa
imul
in
orb
clc
dec
xor
or
pop
or
std
stos
jle
xorl
jnp
shrb
outsb
cmp
mov
gs
leave
mov
adc
dec
cmp
sbb
rcll
or
fnstcw
cmp
sub
ss
addr16
pop
pop
jnp
add
push
xor
pusha
mov
sbb
add
mov
adc
fisttps
fsubrl
sbb
add
ret
adc
cmpsl
xchg
dec
insb
jecxz
or
out
or
popf
movsb
push
adc
and
or
fstp
clc
adc
clc
add
or
xchg
pushf
iret
adc
or
repnz
and
mov
pop
addb
xchg
adcb
clc
and
sub
lea
inc
add
push
aam
les
and
pop
xchg
pop
mov
out
dec
js
add
ret
cmp
pop
pop
dec
and
push
mov
int
jmp
or
mov
and
mov
insl
cmp
aaa
subl
sbb
and
loopne
lea
rolb
pop
xchg
testb
int3
or
fisubrl
test
fs
dec
and
push
insl
lods
mov
jge
sub
or
inc
push
pop
and
jbe
in
test
je
mov
mov
or
loopne
in
iret
loop
pop
pop
inc
loopne
push
lea
xor
fisubl
lock
ja
dec
lods
lcall
fs
cmp
cmp
push
mov
das
add
or
dec
cmp
aad
adc
push
sub
cmp
in
dec
xchg
rolb
and
dec
dec
mov
lods
push
jnp
dec
testl
add
loopne
adc
cmpsb
mov
jo
jnp
jmp
sub
addl
lods
lcall
pushf
inc
test
cltd
xor
adc
xchg
xor
add
idivl
add
shlb
xchg
in
jp
dec
mov
je
xchg
or
cmp
notl
test
xchg
je
das
mov
loopew
jecxz
sbb
xchg
inc
sub
mov
ficoms
mov
mov
inc
dec
dec
pop
inc
sub
dec
loopne
and
mov
int3
or
pop
and
add
data16
push
ljmp
jb
fsubrs
push
adc
nop
in
inc
dec
inc
cwtl
lods
adc
dec
pop
jg
test
lds
xchg
sub
ja
push
cmpsb
sbb
inc
loop
or
lcall
or
or
loopne
fwait
inc
sbb
cmp
or
adc
mov
push
fld
dec
xchg
dec
shll
jne
fimuls
js
jmp
mov
or
popa
stos
or
clc
sub
sbb
mov
scas
and
jp
fldenv
fs
mov
xor
add
sbb
sbb
and
add
pop
ss
inc
fimull
cmp
or
data16
imul
cmp
or
adc
mov
rcll
xchg
and
or
aad
int
scas
ltr
sbb
icebp
mov
jg
xchg
loopne
jp
cmp
jno
mov
and
xchg
adc
mov
stos
xchg
add
cmp
sub
iret
xchg
and
cld
mov
sub
pop
decl
ljmp
imulb
popa
adc
dec
or
mov
add
ret
idivb
sbb
and
sub
int
push
inc
add
ret
adc
xor
xlat
call
push
add
mov
dec
mov
fistps
push
mov
pop
sub
repz
and
push
addb
or
adc
mov
mov
inc
stos
dec
loopne
and
xor
gs
pop
das
and
insl
cmpsl
add
sub
es
icebp
adc
dec
adc
in
dec
mov
add
add
fdivrs
add
cmp
sbb
sub
je
or
mov
push
cmp
sbb
lcall
or
sbb
leave
sbb
sbb
aam
push
mov
shll
xor
popa
adc
andl
sbbb
push
adc
sbb
js
mov
sbbb
push
mov
jmp
imulb
call
hlt
adc
add
lock
or
or
testl
xor
jle
jge,pt
push
stos
and
push
cmpsb
add
adc
xchg
popa
mov
cmp
mov
jno
and
and
jnp
sbb
pop
jmp
test
push
adc
push
jle
andb
pop
outsb
loopne
fisubrs
ljmp
imul
inc
push
push
je
add
ficompl
xlat
or
xor
jl
sub
cmp
or
push
mov
dec
mov
jo
adc
sarl
mov
or
mov
pop
cmp
adc
adc
js
aaa
shlb
insb
sbb
xor
imul
adc
lock
dec
shlb
test
push
sarb
andl
or
add
enter
movsl
adc
inc
push
add
add
fiadds
test
fdiv
lea
insl
fistpl
and
jae
outsl
pop
add
adc
or
dec
std
ss
pop
or
sbb
adc
jecxz
xchg
inc
sbb
mov
jl
mov
out
aas
outsb
inc
lods
inc
push
push
jle
or
mov
jbe
mov
bound
cmp
mov
mov
inc
fsubr
push
pop
jle
sub
dec
or
inc
jge
data16
lcall
lock
mov
inc
jb
leave
rcr
popf
push
or
cmp
mov
inc
jns
sahf
cmp
sub
fisttpl
mov
xor
enter
enter
sbb
push
mov
out
in
add
js
movl
pusha
xor
adc
add
in
and
add
je
lds
mov
shll
icebp
xchg
mov
pusha
add
insl
inc
pop
gs
push
imul
dec
ss
insl
fbld
cmpsb
test
or
push
and
and
insb
sbb
xlat
add
or
inc
pop
bound
adcb
xchg
xchg
insl
inc
lret
dec
and
adc
popa
aaa
and
addl
testl
push
adc
popa
scas
pop
lret
ljmp
ret
out
inc
jb
jo
jle
in
pusha
out
ss
or
pushf
and
inc
or
or
lcall
inc
sti
jecxz
adc
xchg
xor
cltd
outsb
rorl
dec
push
sbb
cwtl
add
add
inc
mov
xchg
push
xchg
add
inc
sbb
sub
cltd
imull
sub
mov
adc
mov
js
fistl
das
jmp
push
aaa
add
out
jo
and
add
add
or
push
lods
lcall
xchg
bound
xor
mov
sbb
outsl
cmpsb
nop
lea
test
das
sub
sahf
insl
sbb
fisubs
mov
hlt
loope
xchg
fcomps
pop
adc
xor
mov
pop
cmpsl
mov
push
add
popa
jg
or
mull
ljmp
lret
ss
shl
mov
lcall
jb
cmp
test
rorl
push
lock
js
shll
adc
xor
insl
nop
xchg
inc
stc
pop
sbb
pop
daa
mov
sbb
in
clc
ds
repz
adc
pusha
inc
push
push
add
cmpsb
xchg
lret
test
lea
lret
mov
xor
xor
and
and
inc
enter
inc
jle
lods
inc
inc
daa
mov
leave
dec
cwtl
push
ret
push
lods
or
or
or
imul
adc
dec
fmuls
andl
mov
jne
add
ror
iret
hlt
add
mov
loope
or
inc
std
fstpt
add
cmp
pop
daa
sbb
or
pop
repnz
aam
xchg
xchg
in
and
inc
sbb
into
xchg
dec
push
pop
push
outsl
sbb
xor
cmp
xchg
pop
sahf
adc
or
sbb
sti
sub
cmp
mov
mov
stos
xor
scas
rorl
inc
cmp
push
pushf
movb
movsb
imul
push
add
xchg
test
loopne
test
add
mov
and
pop
sub
add
popf
mov
enter
lock
adcl
outsl
ret
adc
and
lret
stos
js
les
sub
xchg
rol
out
push
jnp
test
mov
pop
mov
test
jne
add
add
dec
inc
mov
cmp
test
ja
enter
mov
rcll
rorb
adc
mov
mov
mov
push
adc
sbb
jecxz
test
mov
dec
or
push
int
or
pop
adc
and
call
sub
sbbl
iret
arpl
inc
xor
lods
add
or
ds
loope
xor
sbb
inc
sbb
sub
sub
stos
rcr
outsl
cmpl
or
jns
xor
mov
pop
cmpsl
inc
lock
jbe
out
ja
pop
cwtl
cli
dec
out
inc
fs
pop
es
std
dec
aam
rcl
mov
cmp
pop
pop
imul
scas
mov
mov
fnstcw
test
popf
js
add
jmp
pop
loop
js
push
push
adc
lret
sbb
xor
xor
inc
push
mov
fimuls
ljmp
push
jne
push
or
aaa
sub
daa
add
cs
sub
test
das
les
inc
dec
scas
ret
add
mov
sub
inc
mov
mov
mov
and
stc
imull
pop
sbb
imul
pushf
mov
rcr
xorb
pop
xchg
add
sbb
xor
cmc
add
test
shl
data16
adc
or
xor
inc
outsb
and
sbb
pop
mov
jecxz
les
sbb
inc
and
xchg
xor
hlt
frstor
lock
test
incb
es
repz
push
repnz
rcll
stos
inc
dec
stos
ret
sub
and
movsb
pop
mov
repz
rolb
cmp
adc
xor
sbb
xchg
xor
cmc
mov
xor
inc
je
cld
cmp
notb
adc
or
gs
pop
hlt
mov
mov
xchg
out
inc
dec
pop
lock
adc
xchg
dec
and
sahf
or
lcall
push
jb
movsb
loop
cmp
movsl
daa
aaa
jecxz
jne
in
imul
and
lea
or
daa
insb
movsb
sub
mov
mov
call
pop
divb
xchg
inc
xchg
ds
add
push
mov
sub
adc
push
or
pop
pop
aaa
adc
lcall
push
sub
fwait
les
and
and
aam
xlat
shrb
faddp
push
or
jnp
or
adcl
pop
xorl
jne
ret
je
lahf
adc
push
dec
cmp
addr16
fists
insb
and
xchg
pop
adc
daa
sarl
add
adc
push
ljmp
out
shrb
push
push
mov
mov
out
xchg
adc
xchg
cmp
sbb
adc
adc
cmpb
daa
add
repnz
push
push
lret
xchg
imul
daa
push
arpl
les
and
dec
repnz
lock
ss
mov
mov
xor
cmp
pop
loopne
dec
and
xlat
xlat
push
pop
mov
out
mov
cmp
out
filds
inc
popa
xchg
add
inc
mov
js
push
inc
inc
xchg
ret
les
imul
and
jne
add
push
mov
mov
xor
pop
push
jae
push
adc
mov
mov
and
adcb
push
aaa
or
notl
bound
arpl
jbe
mov
cld
je
xchg
mov
push
add
popf
inc
push
test
pop
loopne
out
jle
or
in
pop
mov
gs
popa
js
jecxz
das
inc
cmp
clc
jp
jns
movsl
sahf
fsubl
pop
or
pop
clc
fs
or
adc
nop
mov
dec
pop
inc
dec
rolb
mov
pusha
movsl
mov
push
outsl
mov
ja
xor
dec
jg
mov
pusha
in
inc
cs
xchg
outsl
pusha
test
cmpsb
mov
sbb
nop
jl
dec
sti
adc
xor
lock
pusha
mov
ss
es
xchg
mov
rcrb
sbb
sub
sub
adc
and
cli
cmpl
push
popa
dec
pop
lods
sbb
scas
nop
loope
adc
cmp
mov
fistl
mov
les
push
shlb
jo
in
in
sbb
adc
xchg
and
cmp
ret
add
mov
jno
test
xor
inc
or
pop
insb
inc
jo
cmp
sub
data16
sbb
push
dec
mov
out
adc
sub
cmp
or
add
cltd
mov
jmp
lret
lock
adc
and
lods
inc
mov
xchg
add
jb
pushf
mov
xorl
push
dec
cmp
or
jmp
adc
les
and
je
cld
push
jb
lock
js
cmp
aam
pusha
int3
push
lods
insl
popf
fdivs
in
add
fists
xor
jb
mov
dec
rolb
int3
jg
shll
mov
sbb
mov
call
loopne
jmp
movsb
lds
scas
add
lds
and
add
sub
fstp
add
mov
xor
fimuls
arpl
pop
add
mov
repz
je
imul
out
mov
adc
addr16
jne
adc
and
inc
mov
xor
shrl
add
add
pop
icebp
mov
adc
jmp
fmull
add
mov
jo
insl
clc
adc
jge
je
jne
inc
addb
or
adc
push
out
mov
addl
rclb
push
out
dec
dec
sbb
sub
dec
insl
xor
je
insb
daa
push
xchg
jg
dec
imul
xor
rcrb
bnd
xor
mov
sub
dec
adc
inc
pop
cwtl
jl
mov
and
mov
fmuls
test
addr16
outsl
cmp
or
mov
jo
or
cmpsl
inc
and
add
inc
inc
add
sub
inc
add
inc
push
shrl
jo
adc
sub
pop
dec
sub
and
jbe
mov
sub
dec
and
add
or
mov
pop
xor
insb
add
add
push
lea
lods
andl
aad
aam
and
mov
pusha
mov
shlb
sbb
add
mov
and
cmpsb
mov
mov
fnstsw
sbb
pushf
enter
jne
loop
popa
mov
push
jne
fcoml
idivl
sbb
push
ja
and
das
es
add
cmpb
inc
inc
mov
js
lcall
xchg
xchg
add
aas
iret
or
inc
jl
loop
pop
xor
jo
aaa
mov
adc
ss
add
pop
add
and
push
pop
xor
test
add
dec
sbb
push
xor
sbb
loope
dec
fstps
outsb
xchg
andl
movsl
rcll
jb
ret
mov
cld
push
push
xchg
pop
popa
pop
insb
cmpsl
or
sti
mov
inc
mov
add
cmpl
dec
lea
hlt
dec
rorb
adc
das
or
cmp
std
adc
jmp
xor
movsb
mov
mulb
shlb
inc
jg
jmp
mov
lock
mov
and
outsb
shl
adc
pop
aas
or
stos
test
xchg
pushf
adcb
jo
pop
add
ret
loopne
and
push
jo
inc
test
push
adc
inc
in
xchg
mov
int3
das
nop
testb
call
inc
imul
stos
faddl
pop
add
test
and
leave
inc
sub
dec
mov
pop
ja
inc
rcll
sbb
jo
add
jno
push
mulb
jge
daa
fcomps
aaa
je
fcomps
rol
jnp
or
xor
xchg
mov
inc
mov
test
push
sbb
stos
and
js
or
cmpsl
add
add
bound
movsb
jno
jecxz
subl
pop
xchg
ret
mov
fistpll
and
cmp
faddl
mov
xor
or
adc
sbb
pop
mov
inc
mov
jecxz
inc
imul
inc
adc
inc
dec
or
inc
or
lea
lock
pushf
and
sbb
imul
or
shlb
sbb
or
push
jb
adc
and
pop
jmp
push
popf
mov
sbb
inc
inc
paddusb
or
sub
mov
ja
pop
or
test
jmp
mov
test
jmp
adc
xchg
cmp
loopne
inc
jmp
fs
dec
xor
add
dec
xchg
adc
test
add
push
in
loopne
mov
add
dec
add
sbb
xchg
push
loopne
and
insb
add
push
out
popa
or
cmp
and
nop
and
xchg
fs
movsb
jb
jl
xchg
mov
test
inc
sub
push
shrb
lods
hlt
mov
mov
mov
dec
pop
or
cld
adc
out
adc
in
adc
push
dec
dec
dec
dec
push
adc
icebp
daa
lahf
dec
dec
inc
xchg
insl
insl
sub
and
push
inc
gs
addr16
and
push
gs
push
cwtl
or
jbe
xchg
test
out
jne
das
add
movsb
nop
push
jp
test
dec
mov
mov
aaa
inc
in
inc
out
sbb
dec
jae
pop
fmuls
call
into
cmp
sbb
push
rcrb
je
mov
mov
inc
add
mov
in
cmc
mov
or
or
mov
mov
lahf
xor
pop
sub
or
and
ret
fisttpl
fisubrl
mov
fsubrs
adc
push
insl
loopne,pn
shll
or
and
test
push
add
xor
push
bound
loope
outsl
and
sub
mov
or
pop
mov
mov
es
dec
sub
nop
dec
dec
or
adc
inc
mov
cltd
sbb
imul
dec
jo
push
inc
dec
mov
mov
sbb
popa
sbb
or
jp
loop
stos
jns
xchg
cmovp
sbb
aaa
shl
xchg
dec
dec
addb
fcmovb
cmp
inc
cmp
add
push
push
nop
mov
ret
lret
mov
inc
push
mov
xchg
sbb
cld
xlat
mov
sub
mov
pop
mov
aas
inc
enter
mov
inc
aam
nop
mov
rorb
mov
shrl
jmp
pop
roll
xchg
pop
roll
add
or
mov
popf
out
jmp
adc
add
cmc
fsubl
das
aaa
outsl
or
gs
add
sahf
xor
xor
sub
push
add
dec
pusha
mov
or
lods
push
lods
scas
cs
aas
movl
loopne
adc
incl
mov
je
dec
je
jmp
or
je
push
sbb
sbb
inc
loop
adc
ret
fnstcw
mov
dec
call
and
or
pop
ret
inc
add
or
dec
sbb
fstpt
ret
fisubrs
adc
dec
lcall
aam
mov
xor
push
xchg
sbb
sub
or
fstl
dec
adc
rolb
xchg
pop
inc
jmp
pop
pop
sarl
xor
jnp
dec
xor
cmpsl
mov
out
lcall
mov
iret
add
xor
addb
pop
push
iret
cs
clc
leave
sub
inc
or
mov
sbb
sub
adc
or
xchg
inc
sbb
xchg
imul
dec
and
dec
lods
ror
sbb
and
sub
pusha
ret
push
and
cltd
mov
and
das
mov
cmp
or
ja
lahf
inc
mov
inc
inc
cmp
jl
scas
scas
adc
and
mov
dec
add
push
sahf
lds
push
hlt
jo,pt
jbe
add
mov
dec
inc
leave
push
or
mov
or
pushf
cmpsb
jae
cltd
into
xchg
das
daa
sub
insl
cmpsl
dec
cmp
xchg
std
repz
and
imul
add
mov
arpl
mov
xchg
fisttps
jle
outsl
add
arpl
insb
push
arpl
imul
mov
outsl
pop
js
bound
fdivrl
jnp
es
jb
jb
popa
or
adc
insb
bound
out
data16
es
imulb
out
add
addr16
jb
addr16
mov
and
ficompl
inc
cmpsb
insb
daa
push
jg
cmp
je
outsb
insb
das
je
mov
out
loop
sbb
and
jnp
mov
pop
fs
daa
mov
ja
pop
je
jo
jb
arpl
mov
cmpsb
outsl
dec
pushw
jnp
mov
pop
or
orb
mov
lock
mov
or
pop
cmp
out
sbb
pop
andl
add
inc
inc
push
push
outsb
je
mov
and
fs
add
mov
or
add
sbb
inc
xlat
and
pop
xor
xchg
or
add
in
pop
pop
cld
setae
sub
or
insl
rcrb
mov
push
add
inc
inc
lea
jns
pop
pusha
adcl
dec
lcall
inc
lods
adc
loop
mov
mov
andl
mov
into
jp
adc
daa
add
dec
add
push
loopne
sbb
mov
nop
mov
mov
push
pop
mov
mov
ret
dec
sub
sbb
lcall
daa
mov
xchg
add
or
les
push
push
add
enter
push
outsb
adc
xor
lea
xchg
mov
sub
push
neg
add
xor
subl
es
xchg
xchg
fwait
dec
adc
xor
xor
push
lods
push
sbb
sarl
dec
and
jmp
sbb
adc
add
rcll
mov
sub
or
sbb
inc
mov
fcoml
ja
or
ja
mov
ds
sarb
or
add
mov
lret
sub
push
sbb
iret
cmp
aas
push
test
xor
add
push
sbb
push
jmp
pop
aaa
push
loopne
ds
or
in
lret
add
add
cmp
pushl
or
or
or
or
or
or
iret
repz
adc
adc
repz
adc
sbb
push
cmp
sbb
push
pop
and
and
and
loopne
fcomps
int3
push
xchg
test
lret
int
jns
std
push
int
xor
cmp
repz
push
arpl
repz
xchg
cmpsl
mov
cmpsl
stc
cmp
or
jns
out
push
bound
mov
jns
out
test
ror
popa
pop
test
in
ljmp
mov
and
or
mov
dec
or
pop
push
adc
adc
dec
sub
xchg
lret
or
or
jb
in
push
or
mov
sub
adc
lret
dec
adc
jb
in
cmp
adc
inc
push
inc
pop
xchg
push
cs
and
sbb
xchg
lret
sbb
xchg
push
jmp
ja
push
popa
cmpsl
push
jns
imul
sub
and
sub
gs
lret
addr16
push
pop
mov
dec
xchg
mov
movsb
sahf
sub
push
pop
add
fdivrl
fcomp
addl
aad
fs
sarb
fsub
adc
mov
js
adc
dec
sahf
pop
and
popa
or
pop
push
pop
push
cwtl
std
leave
clc
push
adc
rorb
sub
loope
out
sub
movsb
jae
sbb
lock
dec
mov
mulps
pop
or
cmp
in
scas
sub
loopne
faddl
add
clc
pop
dec
int3
mov
lcall
add
shrl
or
pop
loopne
push
rcrb
jl
push
ret
es
push
pushf
insb
mov
xchg
inc
lds
push
data16
push
fldcw
popl
fildl
xor
push
xorb
ret
movsb
int
mov
add
nop
push
pop
or
and
nop
mov
sbb
mov
pop
aaa
or
lea
lahf
roll
mov
outsl
xchg
es
out
fucomip
fiaddl
loopne
or
mov
pusha
dec
jl
add
lea
xor
imul
rcrb
and
sub
cmp
push
push
pusha
sti
dec
push
fldl
fsub
repnz
test
lods
pop
jl
push
shrl
fldcw
inc
out
fidivrs
jmp
adc
inc
daa
aaa
pop
xor
adc
add
sub
and
xor
je
dec
add
push
mov
or
out
adc
aaa
icebp
inc
mov
lock
push
lcall
or
shrl
test
and
outsl
add
lock
std
ds
and
arpl
lds
sbb
repz
sbb
inc
adc
lret
and
push
rol
xlat
adc
inc
inc
lea
xor
dec
stos
push
jl
cmp
std
mov
add
outsl
inc
and
sbb
js
movl
jp
insb
sbb
adc
or
clc
adc
add
inc
les
and
aam
rorb
or
in
pcmpeqw
cltd
adc
aas
inc
test
cmp
orl
dec
lret
inc
test
jo
and
sbb
jl
adc
xlat
sub
or
adc
sub
jge
push
add
sub
arpl
xbegin
test
out
mov
pop
imul
push
les
lret
dec
loopne
pop
adc
fiadds
icebp
mov
mov
sbb
xchg
cmp
pop
test
movsb
lea
and
cmp
sub
outsl
addr16
add
xchg
push
out
addr16
pop
nop
mov
xor
xor
fcmovnb
xchg
pop
dec
call
jnp
mov
push
les
cld
xor
loop
mov
xchg
lret
loope
inc
jno
cmp
xchg
dec
or
dec
xor
jno
mov
lahf
mov
je
cmp
mov
lea
popl
push
enter
insb
and
jg
and
inc
jnp
imul
xlat
mov
lock
xlat
add
dec
xor
jp
popf
je
push
cmp
test
push
inc
xchg
leave
sub
lods
movsb
lock
xlat
mov
adc
and
pop
incl
mov
mov
lock
pusha
add
cmp
nop
cld
adc
push
popa
adc
std
gs
and
pop
or
mov
cmp
shlb
mov
inc
and
add
or
adc
jg
rcl
aam
dec
xor
fadds
imul
add
int3
and
mov
fimuls
mov
mov
and
push
adc
loope
jmp
lret
jnp
xor
push
sbb
push
and
jle
push
movsb
in
test
add
inc
push
inc
and
loopne
dec
sbb
push
orb
xor
push
pop
or
dec
xorb
push
add
flds
aaa
inc
mov
add
push
fiaddl
or
nop
xor
adc
dec
xor
push
in
ret
nop
xorl
bndstx
inc
pop
loop
push
mov
mov
movsb
adc
pop
xlat
inc
sub
outsb
push
xchg
pop
inc
or
mov
cmpsl
add
imul
dec
adc
mov
es
jl
fcoms
andb
mov
and
daa
mov
clc
icebp
push
insb
mov
push
adc
mov
test
test
fldl
cmp
xchg
sbb
sti
and
jg
test
sbb
sbb
add
jl
pop
not
push
add
fbstp
int3
cmp
in
aas
in
mov
sbb
stc
faddp
fstpl
call
xor
sub
add
inc
in
nop
mov
xchg
sub
inc
xchg
stc
cmp
fs
sbb
xor
pop
insb
out
xchg
add
mov
lods
leave
sti
lret
jo
adc
jne
es
inc
incb
push
xchg
roll
pop
adc
or
inc
inc
or
repz
inc
push
inc
add
inc
and
jne
call
jmp
popf
push
sub
daa
cmc
and
cmp
dec
push
cmp
add
xchg
outsl
and
outsl
push
jo
lea
xor
addb
inc
imul
jo
lcall
jl
pop
sub
ret
adcl
and
lods
adc
xchg
lret
jae
or
in
ja
cmovnp
dec
cwtl
mov
push
int3
sarb
pop
lock
and
xor
orb
push
mov
xchg
inc
mov
jmp
or
fld
lahf
ljmp
pop
inc
in
and
fildl
add
test
fwait
insb
pop
inc
dec
xor
dec
cmp
je
icebp
shll
inc
dec
adc
test
mov
xor
adc
sub
addl
add
fsubrs
insl
pop
cmc
in
mov
outsl
cmp
adc
lcall
lods
dec
lret
sub
xchg
lret
dec
hlt
mov
sub
repz
dec
stc
or
stos
cmp
inc
jae
inc
mov
rorl
pop
inc
mov
inc
call
inc
xchg
xchg
mov
sub
icebp
dec
jg
not
xchg
stc
add
inc
dec
push
adc
jo
cwtl
dec
enter
sub
inc
lock
push
push
push
inc
add
rorb
ljmp
sbb
xor
push
mov
bound
push
data16
cmp
push
pop
rcrl
adc
dec
dec
insb
adc
push
in
cmpl
inc
xchg
lret
in
mov
mov
dec
dec
jne
xor
je
or
call
or
in
into
gs
push
sub
or
push
mov
push
movsl
sahf
pusha
jb
add
xlat
mov
adc
movl
adc
fs
stc
lea
pop
sub
sbb
dec
in
jae
pop
movsb
hlt
decl
inc
and
inc
lcall
cmp
test
cmpl
cwtl
cwtl
inc
loopne
mov
or
adc
adc
xchg
dec
dec
mov
in
add
clc
sub
insl
inc
mov
sub
das
call
inc
test
xchg
bound
inc
jns
inc
nop
popl
in
mov
imul
sbb
test
adc
add
dec
cltd
inc
rorb
scas
or
daa
mov
and
out
or
xchg
insb
dec
in
loopne
inc
stos
or
pop
dec
xchg
lock
in
mov
scas
dec
in
cmp
sbb
xchg
insl
cmp
pop
dec
movsl
nop
xor
in
pushf
mov
shlb
fidivrl
out
pop
and
and
stos
inc
ret
pop
mov
jns
subb
xchg
test
call
sti
dec
jne
mov
add
int3
push
test
les
popa
mov
push
sbb
dec
and
push
or
les
mov
test
jmp
pop
inc
cld
test
jb
push
test
mov
push
push
cmc
mov
dec
inc
into
inc
nop
fcoml
dec
les
les
cld
push
push
call
or
lods
popf
mov
jmp
outsl
or
ja
push
adc
inc
out
adc
inc
pushf
pop
pop
mov
pop
push
cmp
cmovp
inc
pop
ret
push
and
push
mov
dec
pop
cmpb
ss
ljmp
testl
rolb
call
pop
pop
dec
sahf
mov
or
mov
or
stc
lock
inc
pusha
in
inc
push
pop
add
pop
pop
cltd
adc
pop
mov
pop
sub
xor
pop
push
inc
in
xchg
mov
cmpsl
push
adc
mov
xchg
sbb
xor
inc
jne
outsl
pop
and
add
fcoml
and
inc
push
or
enter
mov
adc
jb
movsb
jmp
cmpsl
xchg
and
inc
pushf
lock
xchg
pop
and
sub
aaa
fiadds
repnz
and
imul
repz
enter
sub
dec
sarb
adc
rcl
push
addb
push
add
add
inc
ljmp
pop
loopne
mov
mov
inc
add
push
pusha
test
mov
cmp
inc
aaa
scas
mov
mov
fwait
add
jns
mov
cmpsb
add
shr
vmread
add
out
xchg
icebp
fmulp
hlt
push
or
into
cld
jmp
in
mov
fcoml
insb
mov
and
pop
mov
out
das
push
push
cmp
jns
out
mov
sahf
out
loopne
call
sahf
lock
clc
movb
xchg
or
and
add
push
inc
push
add
sbb
jle
nop
fsubs
xor
add
cwtl
fildl
mov
sbb
add
insb
imul
fwait
out
jmp
sbb
fiadds
xchg
xchg
jno
sub
nop
repz
mov
pop
mov
push
imul
or
push
lea
lods
mov
and
inc
loop
sub
xor
loope
inc
loopne
fdivl
movsl
pusha
jb
xchg
popl
sarb
or
test
sbb
iret
xor
int
xlat
mov
push
pop
jmp
adc
cld
mov
inc
add
xchg
or
lock
fs
aas
aam
mov
movsl
add
xor
cs
ds
or
mov
or
sub
ja
fldl
and
jmp
xor
dec
xchg
adc
inc
ds
lock
and
inc
push
xor
loopne
sub
repnz
out
arpl
push
pop
push
adc
mov
mov
sbb
jb
xor
xor
xchg
gs
ja
push
cmp
inc
pop
mov
jecxz
aam
sub
jle
std
enter
mov
mov
sbb
jge
lea
pusha
or
mov
imul
xlat
mov
sbb
cwtl
loope
add
push
cmp
cmp
and
jne
gs
adc
or
add
add
pushf
nop
adc
roll
movsb
jmp
sbb
rcr
nop
add
popf
dec
jle
inc
or
sub
sbb
inc
cvtps2pi
bound
inc
loopne
sbb
roll
push
sbb
insl
adc
test
sbb
sar
ljmp
adc
add
jmp
ja
movsb
in
rorb
int3
mov
sub
xchg
push
push
fiaddl
dec
push
mov
or
cmp
xchg
mov
es
mull
in
cmp
inc
adc
popa
sub
cmp
push
add
mov
nop
imul
adc
sub
or
mov
sub
dec
and
adc
mov
sub
les
popl
es
push
mov
fsubs
add
add
mov
add
nop
inc
and
dec
or
add
pushf
sbb
add
xchg
add
xchg
push
mov
in
aas
sub
cmp
mov
mov
imul
add
xchg
lods
aaa
mov
movsl
ja
xchg
test
jb
sbb
mov
inc
add
pop
test
aas
inc
dec
shll
dec
cmp
cmp
movsl
add
and
sub
pop
inc
mov
leave
gs
jnp
push
adc
add
mov
pop
loope
scas
push
fmull
push
movsb
pop
aas
xor
mov
inc
in
xchg
mov
cmp
add
idivb
pop
imul
ljmp
sub
adc
adc
push
mov
fiaddl
std
lret
out
push
jnp
or
mov
inc
test
movsl
inc
pop
das
dec
bound
loopne
loopne
je
mov
and
inc
mov
jecxz
mov
xor
addr16
rorl
sbb
adc
gs
pop
adc
inc
push
arpl
sbb
enter
lock
mov
add
test
sub
xor
movsl
outsb
or
loopne
adc
movsb
dec
mov
and
cmp
scas
pop
notl
xor
leave
pusha
lock
push
or
pop
iret
push
loop
jmp
cmp
je
lea
int3
push
jb
jge
push
dec
scas
push
xor
jl
inc
rcrb
cmpl
mov
sbbb
mov
mov
jmp
sbb
jg
sbb
mov
push
loop
js
cmp
je
and
inc
jl
xchg
or
inc
je
xor
fnstcw
jne
jae
enter
test
imul
pop
push
or
out
mov
sub
add
mov
add
mov
imul
pop
into
movsb
add
lea
mov
mov
inc
sub
dec
js
sub
xorb
imul
lret
sub
pop
cmp
pop
test
test
and
and
cld
jmp
adc
imul
fs
adcl
jbe
test
xor
and
mov
jmp
and
jecxz
adcb
scas
and
das
insl
sbb
xchg
add
xchg
popf
jmp
adc
das
cmp
inc
sti
inc
int3
or
inc
shll
jbe
or
jne
sbb
add
jle
add
shrb
cmp
push
cwtl
lods
mov
ss
adc
je
mov
add
dec
lods
add
push
jae
dec
add
jecxz
fdivr
pop
in
jp
mov
aas
inc
and
dec
adc
mov
xor
pop
xor
sbb
clc
rorb
pop
add
orl
popa
popa
jecxz
xchg
repnz
dec
je
pop
adc
push
xchg
sub
or
clc
rorb
aas
or
or
sbb
cmpsl
push
je
out
push
xchg
negl
add
nop
cmpb
or
jo
dec
sbbl
add
add
mov
sub
push
push
or
adc
pop
xchg
cwtl
or
xor
xor
cmp
or
mov
mov
jns
imul
enter
push
fsubrl
xchg
sbb
mov
enter
and
sbb
sub
adc
in
cs
data16
nop
pop
mov
loopne
or
dec
into
mov
adc
imul
mov
pop
je
pop
loopne
imul
push
jle
fs
scas
add
les
inc
test
pop
inc
dec
das
inc
in
xchg
jg
ss
add
inc
add
inc
adc
inc
aaa
push
inc
sub
pop
add
dec
cmp
fisubrs
sub
pop
and
insb
in
jp
sti
push
adc
fidivl
xor
push
add
pop
nop
xchg
lds
or
ljmp
movsl
and
xor
mov
bound
mov
outsb
inc
pop
enter
pop
xor
push
add
out
push
xchg
or
cpuid
xor
sysenter
dec
nop
jp
bnd
popa
dec
push
sbb
loopne
fdivs
add
add
push
add
inc
hlt
pusha
or
or
or
or
into
shr
adc
es
insl
aas
and
or
push
outsl
mov
ss
nop
prefetch
add
dec
ss
int3
cmp
ljmp
inc
std
das
mov
pop
or
mov
push
or
into
stc
pop
xor
sub
loope
int
cltd
and
pop
adc
and
sub
mov
push
mov
jno
outsl
fs
daa
dec
xchg
sbb
xor
data16
mov
or
clc
xchg
xchg
or
sbb
mov
push
rorb
divb
cmp
cmp
push
dec
inc
imul
push
mov
push
adc
inc
mov
push
aas
add
sahf
push
or
mov
xchg
nop
sbb
jnp
sbb
pop
sbb
pop
daa
fdiv
or
mov
fsubs
xchg
adc
popfw
mov
push
test
clc
xor
gs
add
push
lea
mov
and
cld
xor
lcall
xor
inc
imul
and
jne
stc
mov
or
adc
imul
and
or
jp
addr16
jmp
scas
push
outsb
stc
jl
cmp
xor
outsl
push
mov
inc
or
mov
pop
ds
add
nop
push
sahf
or
inc
push
xchg
arpl
cmp
imul
mov
mov
or
add
sarl
pusha
rcl
mov
loopne
push
jne
jns
loopne
add
out
dec
adc
or
jae
adc
lahf
and
xchg
pop
jo
ret
adc
add
mov
ja
and
cmpb
addb
sbb
popa
int3
mov
push
pop
xchg
sbb
dec
add
add
cmp
fs
mov
jl
jo
jo
or
and
mov
inc
add
and
pop
outsb
add
jb
push
sub
inc
cwtl
mov
sarl
or
or
lea
mov
test
xchg
xchg
xor
cmp
add
add
mov
pop
lcall
and
loopne
sbb
inc
push
inc
add
jle
fs
add
add
mov
enter
xchg
dec
adc
add
and
out
sub
lcall
mov
mov
ljmp
dec
scas
ljmp
ljmp
add
and
jmp
and
and
jp
cmp
jb
push
shlb
int
jns
or
push
pusha
in
cmpb
cmpsl
stc
cmp
add
lods
sub
cmp
sub
aam
sbbl
insb
and
xchg
ja
data16
nop
cwtl
cltd
push
dec
orl
sbb
pushf
out
scas
jnp
pop
mov
push
in
ds
rcr
cmp
cmpsb
push
push
inc
lods
mov
ja
ds
mov
fwait
in
sar
sbb
mov
imulb
pop
dec
out
inc
loopne
jp
je
pop
sarb
jl
lcall
fmull
xor
and
pop
xchg
and
cld
pop
fucom
add
sub
fcompl
push
aam
popf
inc
dec
push
add
jmp
int3
or
shlb
add
div
add
add
dec
outsl
int3
or
lds
push
push
arpl
adc
push
mov
inc
sbb
push
jmp
pop
test
repnz
xor
loop
sbb
inc
insb
lock
stc
mov
dec
call
inc
and
sbbb
push
popa
cmpsl
jmp
xor
test
loope
or
sbb
sbb
mov
sub
pop
popa
xor
daa
mov
sub
push
pop
xor
jnp
jno
fcompl
xchg
addr16
push
add
mov
in
inc
fnstenv
push
and
xchg
mov
flds
add
aad
cmp
popl
cwtl
loope
xor
inc
hlt
add
cmpsl
cmp
loop
mov
mov
cmpsl
add
pop
and
repnz
push
jo
xor
test
xchg
das
in
pop
and
adc
rcl
and
repz
push
je
jb,pn
sub
and
pop
dec
enter
js
rorb
bound
jns
mov
add
and
fcompl
daa
sub
cs
dec
popa
fsubrl
dec
sub
negb
mov
add
cs
cwtl
sub
mov
xchg
push
fistps
ja
cld
pop
sbbl
inc
mov
addb
mov
dec
xchg
sbb
js
rcrb
add
jns
xchg
je
jns
push
pop
mov
pop
sarb
pop
aam
pop
sub
clc
jne
fwait
jne
jne
adc
in
aas
fs
mov
xchg
je
add
pop
add
xor
es
cmp
sbb
sbb
pop
xor
cmpsl
jl
mov
mov
cmc
or
dec
enter
cmp
test
pop
xor
inc
jo
push
adc
ret
xchg
insl
xchg
les
loope
sbb
push
imul
sbb
stos
shlb
repz
enter
xor
popa
testl
fildll
xor
js
rcll
jns
or
add
add
or
andl
outsb
leave
lds
jge
cmp
fidivrl
inc
andl
hlt
sbb
dec
cmp
aas
movsl
dec
nop
dec
dec
pop
adc
jne
mov
push
hlt
jo
push
inc
xchg
ds
and
or
addb
dec
and
pop
in
mov
inc
xlat
popa
add
xlat
orb
leave
inc
inc
scas
jae
fsubrs
inc
lret
in
inc
fwait
mov
xchg
xor
test
into
rolb
cmp
cmpsl
ss
shrl
mov
push
stc
inc
add
sub
cmp
pop
pop
xchg
ret
or
cwtl
pop
fmuls
and
stc
inc
sahf
aaa
faddl
loopne
add
pop
lea
or
adc
xchg
sub
enter
ja
fadds
sti
dec
add
incl
xor
iret
add
dec
inc
sahf
outsb
inc
icebp
and
lea
pushf
ljmp
into
test
inc
call
or
inc
popa
movsl
fcomps
add
or
cmpsl
jb
dec
cmp
dec
call
and
test
push
push
mov
xor
dec
push
in
lret
push
pop
bnd
mov
or
int3
add
cmp
push
in
loopne
xor
nop
lock
cmp
cs
inc
int3
lds
add
push
pop
insb
xor
mov
add
dec
pop
or
inc
shlb
pop
pop
jge
sub
push
pop
jge
add
add
cmpsb
xor
rolb
dec
pop
jns
je
jge
sahf
inc
inc
loopne
add
mov
pushf
dec
dec
dec
pusha
add
push
popf
inc
inc
rcll
add
aad
jae
popa
push
push
add
add
or
loopne
mov
jno
push
xor
arpl
and
xchg
push
cmp
pushf
or
dec
mov
lret
rcll
adc
test
aas
xchg
mov
and
and
aas
xor
sti
mov
test
jmp
clc
sbb
lods
push
in
setb
adc
rcrb
inc
and
arpl
ja
shlb
jl
aam
mov
or
pop
sahf
out
pop
inc
mov
sahf
sub
ljmp
adc
xor
sysret
sub
sahf
fs
push
stos
cmp
adc
lods
fadds
ds
outsl
or
mov
push
ja
dec
mov
sbb
mov
sbb
sub
mov
cmpsl
fsubl
mov
pop
inc
je
cmp
scas
xchg
xor
sysret
sbb
out
and
outsl
fcompl
cs
push
jle
fadds
and
lds
lldt
adc
orl
in
out
sbb
jo
jb
fstps
mov
push
cmp
add
pop
adc
sub
inc
mov
leave
in
xor
push
andps
sub
add
mov
sahf
nop
or
rcrl
pop
and
adc
cld
pop
in
popf
mov
sub
jo
or
outsb
sub
ror
enter
add
pop
and
repnz
or
xor
push
add
or
daa
xlat
xor
ss
xchg
insl
adc
cmp
inc
add
cmp
addb
sbb
push
rclb
es
sbb
sub
es
lods
adc
mov
ljmp
frstor
cmpb
xor
popf
add
bndstx
aaa
add
push
mov
cmc
add
cli
insl
jo
sub
or
je
and
push
push
inc
push
lcall
push
ss
call
test
and
jp
shll
ficoms
xor
pop
call
or
xor
sub
mov
or
test
into
sti
jmp
inc
call
jb
add
sbb
or
xchg
lcall
mov
inc
cmpsb
mov
cmp
fldt
enter
enter
clc
inc
xchg
mov
sbb
dec
fistpll
popa
popa
je
adc
mov
scas
mov
fwait
adc
pusha
xor
daa
hlt
sbb
or
adc
adc
jae
hlt
mov
out
cmp
pop
inc
add
ds
nop
pop
loopne
inc
std
scas
dec
add
add
sub
dec
stos
cmp
sahf
mov
call
pop
fmuls
mov
sub
sub
out
data16
xor
add
dec
dec
xor
sbb
xlat
adc
lret
cli
mov
popa
je
stos
ss
pusha
add
cmp
fidivs
jne
mov
push
ret
mov
adc
push
repnz
inc
test
xchg
in
fistps
ret
mov
shrl
jnp
mov
daa
fistl
lret
cld
adc
xchg
es
xchg
js
lods
or
std
iret
mov
cwtl
xchg
inc
xor
int
dec
mov
jo
push
stos
adc
pop
cmp
push
sbb
xchg
xor
fs
inc
cmp
mov
shr
mov
jmp
sbb
and
push
mov
cmp
inc
xchg
mov
fcomps
add
sub
mov
sbb
sbb
and
lds
inc
pushf
fnsave
fidivl
call
and
test
push
loopne
mov
sub
mov
xchg
push
add
add
add
adc
xchg
or
adc
sbb
inc
cmp
fildll
cltd
orb
int3
inc
xchg
mov
aas
pop
testb
sub
movsl
mov
or
adc
cltd
outsb
sub
lea
add
sbb
les
movsl
ljmp
mov
lock
pop
addr16
adcb
int
movsl
inc
sbb
inc
mov
jb
mov
mov
xor
pusha
and
pusha
or
shlb
gs
loop
push
inc
push
or
adcb
and
mov
adc
aaa
or
mov
mov
stos
rorl
and
sub
repnz
int
and
lret
push
mov
scas
add
push
sbb
push
xchg
mov
push
sarl
jno
inc
or
out
test
push
in
or
test
lret
inc
add
or
sbb
sub
pop
ss
push
inc
add
push
push
pop
into
inc
pop
xor
daa
mov
or
and
mov
push
add
push
dec
popa
add
mov
adc
or
movsb
lret
les
or
outsl
imul
pop
inc
pop
mov
push
dec
fwait
mov
sbb
add
ljmp
push
adc
clc
sub
add
or
shlb
imul
mov
inc
cs
add
xor
movsl
out
adc
inc
sub
iret
adc
loope
add
add
or
pusha
xor
dec
mov
addl
add
pop
scas
and
push
in
sbb
xchg
data16
mov
adc
ret
out
popa
inc
enter
add
in
lods
and
fadd
jo
les
hlt
push
add
sarb
cmp
inc
js
push
data16
jge
push
push
cmp
aas
mov
pop
jmp
sub
aaa
or
cmp
add
sbb
sti
xor
rclb
sbb
fcoml
push
and
mov
mov
icebp
cmp
and
inc
popf
fs
inc
add
lock
sbb
outsl
cmp
pop
or
cmpsl
bound
outsl
push
mov
xchg
mov
test
sti
andb
mov
push
insb
hlt
js
mov
xor
push
xchg
aaa
adc
ljmp
pop
hlt
neg
jmp
arpl
and
sub
scas
andl
ret
pop
cli
add
sub
and
dec
jecxz
mov
test
pop
and
push
mov
int
pop
and
mov
xchg
aam
sbb
jmp
adc
in
cmp
fbld
mov
xor
xchg
test
inc
adc
daa
test
test
cltd
adc
repnz
add
and
xchg
xchg
movswl
dec
or
test
mov
das
sbb
pop
mov
sbb
je
js
adc
mov
out
call
jge
andl
or
and
cmpb
mov
xor
pop
pop
shl
inc
cmp
jns
stc
jmp
inc
inc
or
pop
cmp
sti
adc
sti
jmp
cmp
ss
mov
lock
and
push
sub
cmpb
and
add
aas
test
sub
xor
loopne
jb
loopne
xor
sbb
fcoms
add
jmp
push
xor
fldcw
and
in
and
adc
mov
inc
in
or
pusha
mov
rcll
ss
jmp
sub
push
jb
push
ljmp
and
jns
push
subb
sub
inc
bound
movsb
aam
sub
cltd
mov
push
mov
adc
shll
sub
jle
mov
call
inc
mov
add
in
jle
lret
push
dec
int3
pop
dec
sbb
and
int
inc
sub
in
xor
sbb
sti
gs
adc
jg
xchg
push
sub
add
mov
cltd
inc
push
mov
xor
ss
jo
loope
and
adc
test
pop
scas
cmp
je
mov
lret
mov
cld
push
dec
inc
or
mov
push
sub
sub
mov
xlat
cld
jo
mov
or
xor
ljmp
add
mov
inc
xor
ljmp
mov
lcall
add
add
das
jo
or
sub
sbb
test
insb
pop
mov
cmp
pop
adc
add
push
xchg
insb
and
movsb
mov
sbb
in
orl
pcmpeqd
les
sub
aas
aas
xor
js
outsb
outsb
outsb
mov
mov
mov
test
adc
jge
adc
fimuls
orl
jo
sub
dec
mov
int3
sbb
xlat
dec
lcall
test
imul
hlt
sbb
andb
pop
add
ss
test
cld
jo
and
xchg
pop
sarb
cmp
adc
aam
or
pop
jb
fcoms
xor
adc
or
inc
add
lahf
repz
cmp
mov
lret
and
dec
xchg
mov
and
fsts
push
in
mov
cmpsb
ret
push
jb
sbb
xor
adc
pop
loop
sbb
add
fwait
adc
inc
xor
mov
push
or
push
insb
dec
xlat
call
add
push
mov
in
daa
in
and
push
xchg
or
sbb
push
cmp
xchg
ret
mov
loopne
adc
xchg
adc
or
and
stc
ljmp
push
aam
adc
cmpsl
lcall
scas
jae
orl
das
inc
jmp
pop
shlb
mov
test
aaa
push
sub
andl
mov
ds
push
adc
cltd
js
es
cmc
andl
mov
loop
fistpl
cmp
shlb
int
xchg
mov
dec
ret
js
and
add
jmp
dec
adc
xorb
jp
jne
dec
sbb
out
cmp
lock
add
cwtl
xor
cwtl
out
jbe
add
cmp
xor
and
test
mov
orl
mov
inc
xchg
dec
sbbl
int
pop
pop
cmpsb
int3
ss
rolb
pop
sub
sub
mov
lahf
xor
or
cmp
jl
movsb
mov
push
ja
xchg
sbb
mov
mov
lock
outsl
push
mov
push
pop
dec
mov
add
push
rcrb
pusha
sub
movsb
add
insb
inc
adc
movb
es
pop
mov
or
add
push
sub
or
and
pop
dec
outsl
push
mov
add
push
and
dec
add
arpl
icebp
sbb
call
out
inc
inc
adc
inc
outsb
dec
jmp
jb
xor
or
sar
cmpsb
sbb
pushf
dec
mov
xchg
xchg
sub
add
xlat
mov
inc
add
or
sbb
shlb
and
mov
xchg
push
lea
push
mov
xlat
sbb
ss
fidivrl
dec
call
jnp
ja
outsl
or
lds
sbb
out
sbb
mov
mov
push
inc
addr16
dec
ja
mov
fistpl
or
sbb
or
or
popa
or
xlat
sub
mov
aad
and
out
lods
nop
mov
adc
movsb
sbb
push
mov
lea
stos
inc
fdiv
and
je
mov
mov
ds
sbb
sub
in
add
movsb
dec
xchg
and
and
push
cmpsl
cs
jo
daa
incl
ja
les
mov
add
jmp
dec
je
lods
arpl
lret
aad
add
out
jns,pn
adc
test
ss
jle
jecxz
add
mov
ss
stc
pop
dec
xchg
xor
popa
or
sub
popa
xchg
mov
nopl
fwait
mov
out
mov
fimuls
inc
cmc
inc
or
sbb
cmp
ret
inc
jecxz
sbb
call
arpl
xchg
xor
inc
add
or
or
iret
xor
lcall
icebp
mov
sub
negl
lahf
arpl
lea
mov
xchg
and
or
scas
shl
adc
xchg
sbb
push
ja
jmp
push
loope
inc
lret
dec
mov
ret
js
xchg
inc
out
test
push
inc
sbb
pop
pop
mov
sbb
or
cmp
sub
cwtl
mov
and
loop
mov
and
and
in
pop
mov
and
fistps
ret
mov
dec
inc
testl
iret
decb
stos
sbb
lods
xchg
xchg
add
or
mov
dec
shll
or
in
xchg
andl
ja
xchg
mov
add
add
pop
jl
mov
in
nop
outsb
xlat
jo
add
lcall
in
mov
pop
and
sbb
inc
icebp
testb
inc
sub
mov
mov
daa
fildll
std
sbbb
dec
subb
adc
cmp
pop
dec
mov
push
call
adc
or
adc
inc
add
mov
lock
push
rcrb
xorb
xor
cmp
daa
orl
mov
lea
test
adc
movb
pop
pushf
add
mov
cmp
pusha
cmp
rcll
add
cmpl
or
jmp
lods
test
xchg
cmp
cmpsb
lock
test
jmp
icebp
push
cld
or
add
test
loop
inc
enter
cmp
clc
fisubl
jb
cmpsb
mov
dec
push
clc
ss
pop
adc
adc
iret
and
insl
test
movsl
push
jl
rolb
or
cmp
lods
cltd
push
es
lods
fsub
fs
js
dec
ljmp
adc
ljmp
sbb
mov
dec
sub
or
mov
data16
sbb
popf
popa
inc
mov
inc
aam
in
movb
orb
pop
clc
add
fs
xchg
cmp
xorb
dec
and
lahf
cmp
mov
inc
cltd
lahf
mov
popa
xchg
push
iret
sbb
dec
push
pop
pushf
push
inc
enter
or
pop
sbb
adc
pop
cmpsl
fistps
add
jg
sub
xchg
lret
sarb
and
add
xchg
cmp
dec
sub
cltd
lods
orb
je
xchg
jp
xor
push
push
cmp
push
dec
mov
jmp
loope
jecxz
sbb
add
xchg
xor
fcmovnb
ss
or
adc
fidivs
fldenv
pop
ficompl
cmp
sub
dec
lods
das
push
fucomi
mov
sbb
pop
mov
mov
add
fldl
and
jle
push
iret
xchg
add
mov
pop
shlb
mov
xor
dec
call
dec
pusha
out
xchg
xchg
adc
sub
insl
add
ljmp
inc
ss
xor
push
les
pop
push
imul
in
cmp
sbb
scas
bnd
fsubl
lods
inc
inc
in
pop
dec
leave
mov
mov
es
mov
dec
push
adc
push
or
out
hlt
mov
out
dec
adc
mov
add
mov
imul
loopne
nop
xor
in
pop
adcb
push
sub
push
out
xor
lret
jae
sbb
mov
std
inc
out
cmp
cmp
inc
or
aas
pop
mov
cmpsl
xchg
outsl
lret
cmp
and
and
adc
or
and
je
mov
inc
sbb
sbb
xor
nop
cmp
je
dec
andl
inc
or
leave
aaa
xchg
cmp
mov
arpl
lods
xchg
adc
mov
ss
pop
and
mov
mov
and
ret
push
cmp
je
xor
xchg
mov
repz
repz
add
sub
dec
xchg
mov
pop
push
and
pop
leave
adc
pusha
push
and
sub
push
aas
jmp
pop
rol
add
and
test
jno
or
scas
insb
dec
pop
mov
addr16
sbb
inc
cmp
inc
inc
dec
addr16
push
in
inc
in
mov
fwait
mov
inc
jge
call
je
out
add
mov
sbb
dec
enter
add
xor
push
fstps
push
in
in
push
enter
xchg
insb
in
mov
xor
mov
jmp
popf
add
sbb
xor
pop
nop
push
push
cmpl
xchg
push
xchg
enter
adc
adc
cmp
xor
cmp
rcrb
es
aaa
inc
inc
mov
orl
pop
or
adc
sub
and
dec
enter
or
test
rcl
pop
cmp
add
xchg
or
add
sarb
fidivl
push
pop
pop
call
or
xchg
sbb
jae
insl
inc
xor
push
ret
stos
ret
nop
add
adc
aas
adc
lcall
inc
cs
xor
test
aam
xor
sub
xor
imul
shlb
add
pop
andl
mov
sub
push
and
imul
andb
jge
dec
lds
cmp
mov
xchg
mov
mov
aas
xchg
rorl
cmpb
inc
movsl
addr16
adc
cmp
sub
pop
jl
inc
or
test
push
mov
inc
call
inc
cmpb
sbb
adc
sbbl
and
enter
cmpb
mov
and
sbb
fucompp
int
push
aas
cli
add
roll
mov
add
add
add
adc
pusha
jno
frstor
pushf
inc
loopne
cmp
cmp
sub
sub
cmp
imul
mov
push
cld
adc
add
and
dec
cli
mov
icebp
pop
fmul
repnz
add
inc
enter
pusha
inc
xor
adc
jle
cli
xchg
xor
test
dec
xor
push
dec
xor
lret
mov
adc
je
aaa
xor
or
movsb
mov
mov
push
push
mov
je
cmpsl
call
add
aaa
mov
pop
pusha
inc
inc
int3
shrl
fs
cmp
shlb
stc
aaa
fwait
lods
fldl
das
pushf
push
xchg
loope
xor
popl
mov
enter
mov
sub
xor
in
jne
push
ja
das
fsubl
sbb
inc
mov
lret
mov
pop
js
or
inc
adc
sub
xchg
add
or
sbb
sub
hlt
orb
adc
outsb
cmpsb
inc
pop
sbb
cmp
xchg
or
movsb
push
push
leave
fidivrs
cmp
fiaddl
fdivr
jne
rorb
ja
insb
dec
xchg
and
dec
sbb
and
and
dec
and
jno
comiss
imul
or
jp
inc
cmp
and
jne
mov
cwtl
insb
insl
inc
push
js
add
mov
inc
xchg
or
and
jmp
push
lcall
add
xor
lahf
movsl
movsl
or
sti
add
mov
enter
cli
movsl
and
push
rcll
add
je
jle
scas
jmp
push
and
ret
aam
xchg
xchg
stos
add
cmpb
fwait
lret
lret
add
sub
movsb
lock
and
inc
aas
sbb
push
shll
ficompl
xchg
add
roll
or
fisttpl
test
ja
mov
int3
aaa
mov
ficomps
cmp
in
jae
add
pop
sbbb
dec
nop
and
mov
rorl
adc
inc
sbb
pop
iret
je
or
cmp
pusha
adc
add
and
arpl
inc
mov
xor
lods
and
mov
ja
add
lock
cmp
cmp
mov
in
loopne
in
jo
and
mov
pop
adc
xchg
inc
outsb
pop
add
xchg
clc
jmp
movsl
movsl
daa
js
nop
scas
inc
push
cmp
inc
xor
fldcw
inc
pop
sahf
lods
push
inc
add
test
xchg
repnz
adc
outsb
adcb
dec
or
add
push
mov
add
inc
outsb
or
fs
les
loop
imul
sbb
pop
pop
cmp
or
loopne
or
mov
out
inc
inc
mov
cmp
mov
hlt
enter
std
mov
add
hlt
mov
xchg
dec
inc
andl
and
in
dec
loopne
inc
xchg
push
jge
sbb
hlt
pushf
add
pop
push
out
outsl
pop
mov
scas
xchg
adc
ret
imul
xor
and
add
or
add
lock
dec
mov
adc
or
xchg
dec
inc
inc
orb
mov
push
outsb
cmp
jp
push
and
xor
xor
cmp
adc
adc
imul
repz
mov
adc
adc
pushf
sbb
shlb
jo
arpl
push
aaa
dec
mov
jno
sub
or
adc
and
aas
mov
sub
pop
add
testb
xor
adc
sub
movsb
push
mov
nop
hlt
inc
lods
pop
and
add
adc
inc
mov
inc
call
adc
push
xchg
mov
ret
or
sbb
popa
popf
fistpll
cmc
pop
adc
xchg
dec
movsb
add
mov
inc
xchg
sub
add
inc
or
mov
movsl
mov
clc
inc
push
test
cld
inc
fsincos
loope
or
adc
popa
lds
sub
jbe
and
arpl
push
jg
jl
pop
inc
xchg
lea
les
push
or
in
sbb
mov
nop
or
fsts
movsb
neg
in
cmpsb
or
push
sbb
loopne
sbb
lock
xor
addr16
jmp
ja
loopne
in
stc
push
andl
xor
add
cli
ss
or
jp
test
xchg
push
push
push
adc
mov
or
insb
dec
daa
adcl
lds
or
cmp
cwtl
and
xchg
adcb
mov
shll
pop
push
or
sub
pop
push
das
jbe
adc
out
rclb
push
jae
cmp
and
add
inc
js
mov
insl
in
gs
jmp
sbb
push
or
inc
jno
jo
mov
mov
lret
xchg
inc
cwtl
adc
adc
sbb
lret
rolb
pop
cli
dec
inc
sar
xor
lea
xchg
xor
cmp
add
sub
adc
mov
push
js
jno
aaa
pushf
cs
andl
add
sbb
jb
mov
enter
adc
push
inc
or
add
inc
rorb
or
adc
or
jne
test
adc
cmp
jb
sbb
frstor
fcoms
fsubr
or
fcompl
shlb
add
nop
push
or
cli
in
imul
add
mov
dec
loopne
and
rcrl
or
mov
add
cmp
dec
addr16
pop
mov
out
sbb
out
or
imul
adc
jne
and
jg
adc
imul
push
push
shlb
lock
stos
inc
push
push
je
sub
pop
push
test
xor
and
mov
bound
jg
cmp
inc
inc
test
jle
andl
or
jae
or
mov
push
cmp
dec
add
cmp
scas
lea
and
cs
dec
push
push
pop
and
test
nop
pop
jne
orl
lret
xadd
jmp
les
outsl
lahf
push
je
aaa
adc
fiadds
add
push
decb
or
int
ljmp
or
and
push
out
add
push
fiadds
adc
or
pop
dec
arpl
outsb
adc
inc
shrd
movsl
inc
push
icebp
pusha
sub
cli
mov
jmp
cmpb
or
xchg
xchg
cs
cmp
and
or
inc
mov
add
xor
jo
mov
js
call
out
adc
fnsave
insl
inc
inc
push
xchg
nop
push
xchg
mov
cmp
jl
jge
push
push
pop
movsw
nop
pop
dec
xor
cmp
hlt
test
subb
pushl
mov
sbb
pop
mov
test
add
adc
sub
pop
pop
mov
test
mov
xor
dec
shll
pop
add
dec
mov
ss
add
and
daa
sbb
bnd
mov
or
jmp
sbb
movzwl
movb
shlb
xor
adc
xchg
adc
and
add
adc
xchg
jmp
aaa
and
mov
mov
xor
mov
daa
add
out
xor
xchg
cmp
or
enter
arpl
pop
jg
xchg
cmp
inc
stos
adc
daa
insb
push
push
lods
les
outsl
shl
ret
test
enter
and
add
or
dec
sbb
fists
je
sub
add
pop
rclb
pop
inc
cmp
dec
test
ret
add
xchg
and
add
dec
rcrb
xor
pcmpeqw
test
mov
inc
mov
pop
cmp
jno
js
mov
push
adc
xchg
push
ret
and
mov
sbb
insl
or
adc
sbb
xchg
add
jno
add
jne
js
ss
ret
and
shrl
lods
fsubl
or
cwtl
mov
outsl
push
sbbb
add
push
rcrb
add
fistl
mov
test
fldcw
inc
push
cmpsl
shlb
hlt
aaa
xchg
dec
xlat
cmpb
cmpl
cs
clc
mov
cmp
and
add
inc
cmp
pop
add
xchg
or
ret
push
push
push
and
push
test
lds
rcrl
jecxz
cmp
dec
rolb
lock
scas
xchg
xchg
ljmp
dec
loope
ret
xor
ret
lahf
xchg
dec
ret
dec
pusha
inc
movb
stos
jo
hlt
popa
push
or
sbb
movsl
cmp
dec
inc
daa
fdivs
xchg
jl
inc
xor
shrb
mov
lock
ror
adc
cld
jne
rolb
pop
addr16
add
adc
adc
sbb
insb
adc
mov
test
adc
and
and
mov
testl
fdivs
mov
dec
scas
jne
leave
ret
mov
mov
and
outsb
loope
pusha
jmp
cmp
sti
and
jno
sub
xor
sbb
jge
test
jbe
adc
add
add
inc
and
mov
and
jo
inc
mov
pusha
inc
and
dec
lock
pop
sbbl
sbb
add
adcl
or
dec
cmp
lcall
push
ss
outsl
jle
fcmovbe
jnp
pop
sti
and
and
add
cwtl
xchg
mov
repnz
pop
cmp
pop
mov
cmp
inc
in
pmullw
loopne
add
add
mov
imul
scas
popf
out
adc
jle
inc
cmove
inc
cmp
mov
push
and
xchg
inc
or
gs
adc
sub
rcll
adc
xlat
out
or
add
inc
sbbb
js
movsl
lock
in
jmp
je
adcb
bound
push
push
jo
and
jns
push
inc
cmp
inc
test
add
movsl
imul
cwtl
adc
icebp
sbb
jne
xchg
jmp
cmp
iret
xchg
cmpl
xorb
or
and
mov
andl
sahf
rcrl
xor
jnp
pop
sahf
jae
imul
mov
es
or
scas
adc
mov
sbb
xchg
pop
in
insb
xchg
jmp
inc
pop
xor
pop
xchg
cmpl
xor
xchg
jp
sub
fwait
mov
mov
pop
addr16
jns
add
jo
sbb
repnz
aam
adc
enter
pushf
aas
jo
mov
inc
xchg
fsts
popf
mov
cs
jge
and
dec
dec
push
sbb
cmp
adcb
inc
dec
mov
or
jno
cmp
js
jne
inc
inc
sbb
loope
fsubl
push
pop
push
and
xchg
ret
cmp
adc
loopne
mov
or
mov
pop
push
ret
and
pop
cmp
sti
pop
ret
addl
pop
jae
sub
test
inc
test
sub
shrl
cmc
or
pop
cmove
lcall
imul
mov
arpl
push
push
sub
daa
sub
mov
push
and
shll
inc
xor
int
dec
push
outsl
add
addb
add
add
pop
pop
inc
andl
dec
scas
cmp
pop
inc
inc
and
sub
test
pop
stos
pop
sub
pop
les
pop
iret
into
fisttps
dec
pop
cld
adc
fstps
ret
mov
xor
jle
lret
or
or
push
call
jb
or
inc
sub
jmp
mov
add
add
gs
add
sbb
jg
jns
je
pop
push
mov
push
adc
cs
and
push
rorl
cmp
xchg
jnp
dec
rcl
jns
push
inc
bound
cmpsl
sbb
push
cmp
fdivl
sbb
adc
call
mov
push
jo
adc
sub
enter
imul
sub
js
xor
pop
insb
and
mov
sbb
adc
sbb
mov
mov
add
push
add
add
push
pop
push
push
jo
testb
mov
dec
adc
fldl
push
addb
addb
or
fbstp
sub
and
test
sub
jmp
push
cld
xor
sbb
adc
add
jg
jnp
cmp
scas
je
pop
jle
icebp
fxch
inc
or
jo
jmp
cmp
loope
or
sbb
movsl
jne
cmc
imul
sub
push
and
mov
mov
mov
sbb
loope
aas
les
andl
inc
mov
pop
sbb
adc
orl
iret
mov
push
jbe
mov
sbb
jg
insb
fildll
in
lods
or
or
lea
sub
test
hlt
cmp
ljmp
add
sub
pop
xchg
gs
xor
add
jne
adc
or
sub
xchg
push
add
loopne
cmpsl
jl
mov
out
adc
mov
rcr
sub
dec
sbb
mov
adc
sub
js
gs
sbb
jp
jle
aas
pushl
mov
pop
dec
inc
sub
stos
repz
shll
adc
inc
test
or
sub
loop
pop
and
push
dec
adc
or
dec
cmpsb
pop
leave
mov
mov
das
rolb
ja
stc
addb
or
outsl
mov
pop
dec
fcos
sbb
and
hlt
dec
mov
aaa
fisubrl
xchg
push
sub
push
inc
pushf
mov
adc
gs
pop
add
mov
sub
and
mov
cmc
cmc
mov
inc
or
inc
jns
cld
into
sub
push
jns
mov
popf
shlb
add
push
mov
jmp
dec
dec
in
mov
sub
ljmp
mov
into
popf
mov
xor
mov
dec
enter
sub
add
xchg
rcll
or
sbb
mov
adc
cmp
dec
inc
dec
lret
lcall
pop
leave
adc
adc
xchg
adc
mov
mov
jo
cmpb
jne
lea
inc
add
mov
mov
cld
add
loopne
push
inc
or
lcall
adc
mov
hlt
add
and
outsl
loop
ds
push
inc
fucomip
push
clc
rcr
xchg
rolb
inc
mov
inc
andl
decl
xchg
sbb
xchg
cmp
inc
jb
repz
shlb
call
lods
add
lret
sbb
ljmp
aam
sub
rolb
and
xor
jae
add
xor
xchg
ss
sbb
clc
adc
xchg
jo
call
cmpsl
test
movsl
sbb
jbe
popf
mov
ljmp
and
or
rcr
loope
enter
fcomps
mov
mov
xchg
mov
xchg
or
and
shrl
and
dec
rcrb
add
mov
inc
clc
cmpl
jne
imull
stc
jmp
cmp
out
das
mov
sub
fs
and
cli
fwait
cmp
cmp
add
js
dec
movsl
push
add
push
inc
cmp
je
push
adc
outsb
jecxz
mov
adc
jl
add
sbb
mov
or
and
gs
jo
sbb
sub
inc
mov
pusha
daa
cltd
ja
sbb
inc
rcr
mov
xchg
xor
cmpsl
ss
popa
mov
outsb
cmp
pop
sahf
jbe
xor
xchg
and
in
push
sub
decl
lea
add
test
jge
repz
and
lahf
pop
sahf
fs
push
inc
jnp
mov
sbb
les
dec
js
lea
jno
es
insb
dec
dec
pop
mov
mov
mov
and
push
or
fwait
cmp
mov
jne
mov
jle
shl
pop
dec
cmpsl
mov
mov
adc
cmp
in
cs
std
mov
add
mov
mov
inc
stc
adc
xchg
insl
jmp
and
sbb
add
fsubp
adc
sbb
inc
scas
adc
inc
je
pop
ret
mov
ss
pop
xchg
sti
add
inc
and
fcoms
call
pop
ret
sub
cmpsl
dec
jp
adc
pop
dec
jle
sub
xchg
push
test
sbb
enter
addr16
xor
movsl
inc
int
sbbb
cmp
mov
or
sbb
mov
not
and
mov
add
adc
imul
xchg
sbb
cmpsb
and
int3
inc
lods
sarb
je
jbe
sub
sbb
gs
jbe
and
mov
bound
adc
imul
sub
fwait
pop
rol
sub
push
jo
dec
mov
addb
cmpl
lcall
cmp
or
rolb
lods
sbb
add
jmp
cmp
inc
push
adc
pop
xorb
out
sarl
iret
xor
call
lret
data16
inc
jmp
adc
jnp
int
or
dec
inc
jo
mov
cmpl
inc
je
std
push
cmp
cmpb
push
sub
push
rolb
sbb
mov
shlb
cmp
inc
jge
add
dec
mov
adc
rcrl
inc
sbb
jb
add
and
fisubrs
push
enter
sbb
cmp
sub
push
rclb
add
push
pop
into
xchg
push
mov
mov
push
nop
add
rorb
leave
mov
add
in
dec
mov
add
shll
jecxz
cmp
dec
mov
sbb
pop
cmpsl
in
mov
pop
jp
ss
les
sub
cmp
add
loop
daa
mov
inc
xchg
dec
xor
push
flds
test
in
inc
lea
adc
mov
add
cmp
outsb
pop
dec
xor
mov
dec
bound
jmp
outsl
and
sti
nop
mov
jne
andb
jnp
dec
add
jmp
sub
sbb
add
icebp
pop
cwtl
jg
mov
fidivl
jne
xor
fcoms
pushf
arpl
cltd
sub
cmpsl
scas
ds
adc
add
lret
dec
sub
jmp
push
loope
out
pop
sti
xchg
leave
cltd
push
jp
inc
inc
imul
xlat
stos
push
out
pop
fildl
jb
or
jns
scas
cmp
and
jns
dec
dec
pop
lock
mov
mov
adc
push
lcall
dec
xchg
test
dec
mov
xchg
cmc
jnp
filds
addr16
inc
or
xchg
js
sbb
rcrb
ret
fdivrs
or
imul
scas
addr16
sbb
das
mov
jmp
movsb
lds
cmpl
xorb
fs
push
pop
or
sub
adc
movsb
add
xchg
ret
aam
movsl
mov
mov
gs
adc
xchg
add
xchg
fwait
push
inc
sbb
or
xlat
pusha
adc
xor
adc
add
push
aaa
aad
sub
fildll
imul
inc
inc
push
xchg
pop
push
xlat
cs
dec
mov
lods
shlb
and
icebp
ret
xor
push
sbb
dec
lock
add
jmp
dec
jbe
movsl
push
call
aaa
xchg
xor
or
loopne
nop
push
adc
loope
jno
or
push
insb
adc
repnz
decl
imul
fisttps
mov
mov
sarb
rorb
pop
lds
push
aam
xchg
mov
or
popa
bound
mull
sub
push
jecxz
repnz
rol
popa
xchg
jns
hlt
jl
and
inc
mov
cmp
imul
cwtl
leave
push
xchg
inc
mov
das
push
sub
push
jnp
test
lods
mov
scas
jge
cmp
bound
jmp
lcall
jo
jle
movsb
mov
xchg
pop
adc
jne
mov
add
inc
push
add
push
pop
xchg
nop
push
sti
ficoms
int3
xor
inc
push
iret
orb
jmp
adc
mov
loope
push
add
adc
pop
jle
pop
mov
movsl
and
add
sub
cmp
add
mov
outsl
inc
dec
in
aas
xorb
xor
nop
popf
adcl
mov
push
into
lret
cmp
inc
pop
xlat
and
roll
lea
gs
pusha
subl
push
iret
lea
cwtl
insb
cmp
add
cmpl
movsl
test
movaps
call
testb
mov
cmp
or
add
or
jecxz
dec
ret
sbb
jge
out
lret
dec
jmp
mov
lds
cmpb
and
or
xor
inc
cmp
add
ret
mov
add
aad
push
mov
adc
cli
sbb
sub
xor
xchg
inc
aad
cmovp
xchg
hlt
adc
lock
out
jecxz
or
out
push
or
push
push
mov
repz
nop
jp
xor
push
loope
or
repz
jle
xor
jecxz
xor
scas
orb
add
cwtl
pop
xchg
mov
loopne
adc
es
sub
imul
push
nop
or
call
shlb
or
inc
invd
lahf
add
pop
mov
lea
sub
or
xorl
lock
pop
dec
adcb
add
addb
and
popf
adc
adc
jp
mov
outsl
add
adc
movsb
inc
aam
roll
aad
sbb
andb
jae
inc
or
inc
xor
lods
pop
or
adc
pop
mov
nop
call
call
mov
test
leave
add
pop
adc
bound
or
dec
sub
addb
xor
inc
sub
in
adc
aas
pop
lock
mov
pop
ficoml
pop
cmpl
adcl
sbb
pop
add
shrb
add
jne
outsb
adc
addr16
push
mov
fmul
loop
mov
mov
popa
sub
add
mov
ficomps
fdivs
cmp
add
dec
dec
repz
shlb
call
fwait
xchg
aas
int3
lea
mov
inc
inc
out
idivb
in
jecxz
out
jmp
pop
add
xchg
repnz
xorb
adc
addb
enter
fisttpl
cmp
xlat
xlat
testb
sub
adc
cmc
pop
dec
out
scas
add
clc
and
mov
fucomip
sub
pop
sub
adc
jne
clc
loopne
xor
and
clc
sub
test
icebp
test
lods
jb
dec
sub
mov
jg
or
adc
lahf
jbe
jbe
mov
adc
add
shrl
and
inc
and
in
add
sbb
sbb
inc
insb
cld
stos
push
xlat
lds
add
sub
roll
push
jge
sub
mov
notl
fbld
in
or
and
or
dec
loop
mov
pop
rclb
jmp
jg
sbb
xor
ret
sub
mov
std
dec
jne
adc
dec
jne
jae
dec
xchg
mov
push
xchg
sub
lea
out
iret
or
jbe
pop
sbb
shlb
inc
dec
ret
dec
inc
and
mov
nop
aam
dec
and
setno
lock
push
lcall
push
and
cmc
adc
mov
jmp
cmp
or
pusha
clc
inc
call
sbb
subb
aad
imul
jg
sbb
js
jp
sbb
xchg
sub
jns
fildl
cmp
jg
insb
jle
or
and
mov
jae
lock
test
scas
push
adc
add
inc
sbb
jb
dec
add
in
fidivrs
jle
sub
jl
push
bound
insl
jge
adc
dec
rcr
in
push
and
movsb
fsubl
add
pushf
mov
daa
sub
and
cmp
lds
adc
or
adc
loopne
inc
inc
add
add
sbb
loopne
add
inc
scas
and
fs
and
stc
jl
mov
xchg
or
idivb
xchg
adc
xor
addr16
inc
popa
outsl
push
cmp
sbb
sub
mov
stos
xchg
es
jge
loop
imul
or
pop
mov
mov
adc
imul
sbb
jne
es
cmp
scas
add
aaa
iret
add
push
clc
mov
leave
and
jge
dec
imul
add
loopne
and
cwtl
adc
push
ret
cltd
xchg
or
mov
adc
cmp
ret
and
push
rorb
xor
repz
jecxz
fiaddl
cmp
sub
sar
roll
aaa
mov
xchg
pop
xchg
mov
jo
sar
jns
adc
jmp
test
lret
xchg
lods
insl
xor
addr16
les
or
jle
mov
xchg
lock
push
jne
into
dec
push
sub
inc
cli
or
cmp
rolb
ret
add
popa
or
add
jne
mov
xor
sub
cmp
adc
fnstenv
jmp
dec
psubusb
test
mov
ret
dec
pusha
adc
and
js
mov
jb
or
cmp
push
and
pop
ret
int3
fmul
les
xchg
dec
inc
mov
cltd
shlb
filds
nop
repz
jp
adc
lock
cmp
shl
bound
mov
adc
mov
ss
dec
and
jecxz
jo
push
jmp
testl
fidivl
shl
or
jbe
sarl
sahf
inc
cmp
inc
adc
rcll
push
in
inc
call
fs
pop
dec
mov
or
inc
iret
insb
pop
mov
or
or
inc
sub
and
push
je
push
add
cmp
fistpl
push
adc
sub
push
push
inc
push
lods
inc
jp
mov
stc
mov
or
shlb
das
rclb
inc
cs
and
sbb
add
stos
xchg
add
cmp
sti
dec
or
ss
inc
xorb
xchg
ret
jnp
mov
mov
dec
fnsave
cmp
popa
mov
mov
aaa
cmp
or
and
shlb
ds
push
or
xor
mov
nop
xor
mov
and
test
popa
push
sub
ret
pop
push
cmpsl
jle
popa
nop
movsb
outsl
adcl
xorl
jl
and
sub
dec
icebp
adc
popa
aam
leave
pop
push
sbb
or
rcrl
loopne
les
sbb
sbb
and
dec
clc
sbb
adcl
popa
pop
mov
pop
filds
lock
and
dec
call
leave
scas
fnstsw
adc
add
in
sbbl
test
xlat
add
and
sti
sub
adc
popa
mov
ret
js
jmp
and
sbb
dec
inc
jecxz
test
push
addr16
fisubs
push
jns
sbb
cs
or
sbb
rol
dec
stc
or
push
xor
test
mov
std
and
push
or
mull
xchg
js
gs
scas
mov
sar
inc
or
mov
cmpsl
jg
mov
inc
dec
adc
sbb
loopne
xchg
sub
inc
stos
jns
stos
dec
cltd
and
sbb
cmp
int
dec
push
jns
mov
add
call
lea
mov
cld
les
js
dec
xchg
push
sbb
daa
rorl
fucomi
push
adcl
ss
stos
dec
outsb
mov
ret
mov
inc
mov
sub
roll
inc
shr
dec
mov
iret
lcall
and
add
daa
int
sub
and
add
pop
sub
in
inc
jecxz
inc
fwait
movsb
jmp
dec
jmp
fstl
addl
js
mov
sub
out
xor
xchg
or
add
pop
jge
das
int3
adc
xor
std
cmp
out
xchg
into
mov
out
xor
push
jb
cmpsl
add
inc
das
pop
jl
cmpsl
mov
xchg
jmp
cmp
mov
and
inc
arpl
mov
sbb
inc
test
lock
push
outsb
test
adc
cmp
and
pusha
loopne
xchg
cmp
cli
addl
cmp
lods
and
je
or
jl
es
pop
das
add
shlb
fcompl
push
push
pop
push
fmuls
sub
hlt
xor
and
addb
adc
jne
dec
dec
add
push
fistl
or
rclb
adc
lret
xchg
lret
pop
aaa
nop
push
jae
pop
xor
xchg
dec
mov
mov
test
lret
xor
mov
mov
pusha
sub
mov
jmp
dec
add
cmp
adc
fsubr
das
jne
and
xor
aaa
sbb
out
adc
or
xrelease
pop
inc
inc
aaa
pop
jecxz
loope
push
dec
adc
xchg
nop
mov
cmp
cmc
mov
jnp
mov
adc
push
nop
je
sub
push
ds
scas
xor
push
test
or
insl
mull
in
pop
push
mov
mov
mov
and
das
xchg
push
lcall
movl
push
imul
adc
les
cs
aaa
push
mov
pusha
or
adc
xchg
outsb
out
add
mov
mov
xchg
sbb
dec
mov
xor
mov
and
shl
rclb
push
and
cmp
add
mov
pusha
rep
pusha
orl
push
add
inc
pop
dec
lods
ret
ljmp
inc
pop
or
and
dec
jne
hlt
shl
mov
rolb
mov
or
xchg
mov
daa
insb
xchg
mov
clc
mov
pop
pop
inc
push
frstor
pop
or
and
dec
push
cmp
xor
into
xor
gs
xchg
sub
push
add
adc
js
sub
out
mov
sub
cmp
addr16
sub
cmovae
pop
add
sbb
fsubp
cmp
xor
rcrl
rcrl
sub
xchg
add
cmp
js
and
js
icebp
and
jbe
dec
mov
gs
cmp
subb
or
sbb
fs
cld
xor
lret
std
push
xlat
adc
push
add
imul
rcll
test
in
xor
pop
xor
aam
and
mov
loop
push
sahf
sbb
xchg
mul
pop
int3
clc
jbe
xlat
mov
adc
cmpb
add
cwtl
mov
idiv
bound
xor
xchg
ret
mov
or
sti
ja
icebp
inc
xchg
cli
out
enter
pusha
fs
sub
sbb
popa
loope
mov
adc
mov
dec
sbb
xor
ret
loopne
pusha
jle
fldl
add
test
sbb
mov
mov
pop
cmp
movsl
das
mov
xor
icebp
cmpsl
sahf
or
inc
cwtl
or
shlb
outsl
lock
es
test
inc
fstl
andl
mov
pop
fisttpll
pop
or
xorb
adc
pop
or
ret
add
xor
repnz
push
mov
filds
inc
cmpsb
pop
jl
jae
mov
xlat
jle
xor
pop
leave
nop
cmp
mov
add
add
cmpsl
push
aam
cmovg
inc
and
movsl
and
xorb
mov
cmp
adc
arpl
scas
enter
lahf
fimull
popa
enter
mov
shrb
sbb
sti
xchg
jmp
mov
das
jmp
push
insl
push
xchg
inc
pop
gs
inc
mov
mov
and
mov
cmp
inc
mov
cvtdq2ps
lods
push
lods
mov
mov
sbb
dec
mov
mov
imul
loop
jne
aas
add
dec
and
das
mov
adc
cmp
mov
sub
dec
fmuls
or
icebp
sub
out
mov
sub
shrb
testb
ss
xchg
mov
push
ret
sub
mov
stos
inc
ret
adc
insl
add
cmp
insb
in
cltd
ds
cwtl
insb
lods
sbb
inc
push
pop
jno
sub
pop
push
lret
mov
lock
inc
daa
pop
push
mov
or
cmp
and
dec
es
movsb
xor
popa
jb
int
mov
mov
xor
inc
test
notb
test
pmulhuw
in
push
dec
xor
insb
jmp
push
xchg
and
pop
pop
lds
cmp
out
cmpsb
sub
lock
pop
add
movb
add
mov
jo
ret
pop
dec
and
pop
jb
dec
dec
xor
xor
pop
xchg
in
and
sbb
mov
pushf
push
push
mov
push
andb
dec
and
and
aaa
push
or
pop
popa
dec
inc
push
popa
rolb
push
imul
jo
cwtl
or
frstor
push
in
pop
iret
push
enter
movsl
or
mov
cmpsb
outsl
fcoml
adc
repz
sub
xchg
movsl
cmpl
xor
add
pop
push
into
cmpsl
mov
mov
lahf
daa
mov
ss
inc
pusha
mov
lock
fcomip
cmp
jl
or
jle
sub
jo
add
fldenv
pop
and
dec
insb
cmp
push
push
dec
lret
les
xor
das
cwtl
push
decb
or
push
aad
movsb
pusha
adc
fistl
ret
cmp
mov
sub
pop
push
outsl
adc
out
pop
mov
and
fwait
les
adcl
les
push
sbb
rclb
stos
inc
jmp
pop
mov
add
test
dec
jo
pop
cmpsl
mov
mov
lods
cmpsb
xchg
stc
pop
cwtl
or
dec
mov
xor
lea
mov
sarb
push
mov
inc
pop
mov
movsb
adcb
add
lock
scas
roll
cmpb
push
push
xchg
mov
mov
or
lea
mov
adc
jmp
and
push
inc
sbb
subb
imul
loopne
clc
orb
in
std
sub
mov
adcl
nop
push
add
call
mov
xchg
sub
rorb
xchg
loopne
add
idivl
xchg
out
jno
mulb
sbb
addl
negb
mov
mov
cmp
inc
and
sbb
pop
enter
mov
bound
aaa
lods
mov
adc
pop
pop
push
js
insb
sbb
mov
pusha
js
iret
xchg
push
sub
les
data16
lret
inc
jmp
das
cmpl
pop
mov
arpl
pop
pop
rolb
imul
add
mov
adc
mov
fcmovnbe
cmp
cmc
adc
es
adc
push
inc
bound
roll
pop
mov
inc
je
mov
mov
and
stos
gs
gs
push
ret
and
jo
popa
loopne
xor
call
sub
adc
mov
rclb
gs
pop
push
inc
cmp
inc
loope
ss
rolb
int
fs
insb
movsl
add
mov
push
mov
call
stos
dec
arpl
xor
ja
mov
sbb
push
scas
dec
pop
popa
repnz
lret
mov
or
cmp
movl
es
call
sbbb
xorb
and
and
lods
pop
adc
roll
cmpl
fidivs
mov
inc
cmp
inc
or
pop
loope
in
and
cmp
lret
rorb
in
adc
add
push
or
in
jo
cmp
mov
and
dec
jmp
jae
add
sbb
insb
mov
dec
sbb
pop
dec
inc
inc
xor
and
jmp
xchg
and
sbb
inc
dec
out
pusha
sub
rcll
mov
clc
xchg
pop
mov
xor
sbb
out
les
and
push
pop
or
or
cld
xchg
faddl
mov
dec
push
mov
cmc
push
sub
add
into
jne
fistl
std
xchg
aam
cmc
mov
sub
insl
sub
sarb
int
hlt
scas
icebp
repz
sbb
xor
inc
dec
imul
sub
ja
jmp
xorb
sbb
xor
sub
jo
arpl
mov
orl
leave
ret
cmpsl
daa
movsl
xchg
or
jne
mov
adc
sub
pop
push
je
adc
add
ja
hlt
or
xor
and
inc
push
callw
pop
xchg
dec
push
sub
lds
or
xor
shll
daa
pop
add
insb
insl
jmp
sbb
pop
lea
mov
movsb
jo
and
clc
hlt
test
addr16
hlt
add
mov
xchg
mov
mov
pop
mov
movsb
mov
and
aam
adc
pop
ret
cmp
add
vpminud
dec
fldenv
inc
pop
movhps
jg
dec
or
inc
int3
pop
hlt
je
xchg
push
negb
push
adc
inc
sbb
cmp
pushf
or
cmp
mov
inc
push
sbb
sub
sub
push
xor
jnp
shlb
mov
mov
rorl
cmp
jo
scas
mov
push
cwtl
popa
add
lcall
int3
sub
pop
nop
out
daa
mov
imul
int3
addr16
stos
test
xlat
mov
or
sahf
jl
adc
adc
fs
add
shrl
inc
dec
decl
inc
je
sbb
dec
inc
cmp
xor
mov
add
jae
sbb
and
xor
add
push
in
fisttpll
jecxz
dec
cmp
and
dec
cwtl
test
add
call
inc
adc
or
dec
adc
cs
lock
cwtl
ret
jmp
xchg
subl
cmp
int
adc
dec
xor
dec
aam
out
imul
jg
lock
jmp
cmpl
daa
movsb
inc
ss
sbb
jo
pop
nop
ret
adc
pop
push
or
iret
inc
dec
aaa
rclb
call
pop
xor
or
dec
jg
mov
push
outsb
insb
gs
push
arpl
adc
add
fcoml
iret
sbb
scas
or
loopne
jge
lods
bound
adc
push
dec
cli
loop
jbe
dec
mov
add
cwtl
mov
shll
and
das
int
jp
sbb
std
cs
js
inc
loopne
mov
int
cmp
leave
je
pop
push
out
xorl
ret
test
pusha
mov
outsb
in
shlb
lock
adc
fmuls
or
or
aaa
or
lea
or
xor
hlt
mov
cmp
js
mov
xorb
aam
test
and
roll
rcrl
adc
mov
xchg
dec
jmp
and
lahf
xchg
pushl
pushl
mov
nop
outsl
pop
xchg
clc
xchg
cltd
popa
test
pop
add
sbb
dec
in
jp
cwtl
inc
mov
sub
sarb
sub
push
mov
or
xchg
mov
je
aas
sbb
movsb
dec
cmp
mov
lds
mov
adc
inc
lods
xor
jne
or
data16
jne
pop
pushf
mov
pop
and
and
xor
roll
outsb
sahf
sbb
movb
mov
cmp
inc
jmp
inc
fcoml
addr16
int
inc
pop
movsl
fcmovne
pop
adc
inc
js
test
add
cmpb
divl
and
or
add
pop
add
and
or
or
idivl
sarl
mov
inc
int
add
mov
insl
jnp
shlb
or
xchg
addb
push
repz
mov
daa
cmp
push
cs
sbb
xlat
imul
mov
rorb
test
adc
cs
push
push
cmpsl
and
inc
push
jo
or
repnz
mov
xorb
iret
inc
pop
aaa
jmp
jns
cmpsb
dec
test
int3
mov
cmp
std
cmpsl
push
xlat
dec
inc
dec
dec
dec
inc
dec
dec
icebp
mov
inc
imul
pop
stos
cmpsl
movsb
jo
dec
stc
mov
scas
in
or
add
and
loopne
ja
push
or
sbb
pop
sub
xchg
mov
movb
dec
jmp
fisubrl
imul
sti
sbb
and
inc
popa
mov
dec
or
add
adc
daa
adc
jo
push
das
cmpb
sahf
inc
dec
sub
addb
xchg
or
xchg
rclb
cwtl
mov
cmpsl
pop
mov
dec
aaa
aam
rcll
mov
ret
test
dec
add
xchg
shl
andb
inc
in
movsb
xchg
push
lcall
mov
pop
sarb
or
cld
xchg
es
aam
mov
and
fcmove
test
popa
add
sbb
test
rcll
cmp
sbb
adc
dec
and
popf
jbe
xchg
xchg
sub
mov
ss
mov
inc
es
repnz
sbb
add
popa
test
jo
xchg
out
mov
push
jbe
adc
ljmp
inc
adc
sbb
push
fsubrl
lock
sbb
push
sbb
inc
js
je
xchg
ss
pusha
scas
add
addb
aaa
mov
into
stc
pop
mov
xor
push
xor
pop
movb
mov
mov
adc
or
nop
out
outsb
pop
xor
pop
dec
mov
or
jnp
add
xchg
lea
add
xchg
aam
xchg
sbb
mov
inc
pusha
mov
and
pop
in
mov
inc
lock
or
sahf
ss
test
orl
pop
sub
and
sub
push
inc
popf
jno
cmp
movsl
aad
orb
or
aaa
incl
sahf
sub
add
mov
xor
mov
aas
stos
aam
in
or
pop
xchg
and
in
mov
cwtl
lea
jno
xor
lea
mov
add
mov
or
pop
insb
dec
mov
pop
inc
add
fidivs
sub
js
loop
nop
cmpsl
jle
and
inc
cmp
lock
aaa
fsubrs
lods
mov
mov
jbe
xor
pushf
insl
or
aaa
adc
and
addr16
movsb
xchg
jo
sbb
js
push
icebp
ret
jg
xchg
adc
mov
cwtl
inc
and
adc
adc
mov
dec
test
or
inc
push
popf
jmp
add
aaa
mov
mov
aaa
fstps
and
adc
cltd
movsb
xor
dec
das
adc
or
inc
or
dec
nop
sarl
mov
faddl
fiaddl
dec
stos
mov
add
add
dec
and
and
sbb
push
adc
in
icebp
cs
and
jg
dec
mov
pushf
mov
jmp
decl
popa
and
insb
stos
xchg
add
bound
enter
push
sbb
xor
cltd
xor
ss
or
int
or
dec
sbb
cmpb
jle
aaa
sbb
push
push
or
sub
popa
or
jne
daa
mov
cmp
sbb
cmc
dec
insb
test
ficomps
inc
add
inc
inc
imul
enter
add
sbb
cwtl
push
push
mov
pop
xchg
add
or
dec
add
push
inc
enter
or
ret
ja
jbe
mov
xchg
es
pop
cmp
repz
dec
adc
adcb
fs
aam
ss
fs
or
les
mov
gs
sbb
daa
in
or
call
and
add
ret
mov
rorl
scas
je
mov
loope
add
jge
fwait
loop
test
push
add
lret
pusha
hlt
add
lods
mov
ret
push
cmp
ret
mov
dec
enter
mov
jg
mov
call
push
fstps
add
sbb
sub
dec
add
movsb
xchg
add
add
or
sbb
xchg
sub
cmp
shl
pop
jb
insl
pusha
or
cmpsb
sbb
inc
ss
add
pop
mov
imull
sbb
add
ds
add
repnz
adc
xorl
sub
pop
addb
cmpsl
xchg
mov
sbb
pop
xor
add
mov
lret
add
dec
jmp
filds
or
inc
mov
movl
adc
and
lock
scas
subb
dec
pop
addb
ret
jae
and
mov
mov
shlb
sub
stc
pop
roll
rolb
sub
cmp
in
repz
stos
dec
fs
mov
push
orl
push
clc
lea
sahf
and
add
mov
cmp
fistl
out
pop
stos
cmpsb
jbe
inc
clc
jmp
sarl
pop
sub
cltd
xchg
push
push
mov
add
pushf
cmp
cwtl
push
sbb
dec
or
das
xlat
sbb
mov
arpl
xor
imul
dec
cmp
and
int
sub
inc
xor
xchg
gs
leave
add
sbb
inc
dec
movsl
adc
push
cmp
jae
xor
or
pushf
cmp
stos
test
push
adc
xor
xor
out
popa
xchg
cmp
in
int3
dec
clc
and
icebp
or
and
sub
inc
jo
mov
sbb
aam
xor
ret
incb
sbb
and
jmp
jmp
jo
cld
or
mov
add
in
and
jp
jne
cmp
aam
mov
mov
dec
movsb
mov
jmp
xchg
std
loope
xor
sub
jmp
push
in
mov
rcll
rcrl
jmp
testl
pop
cmp
adc
sub
loope
sbb
inc
pop
test
test
cmp
mov
jle
jne
add
aam
outsl
mov
and
lret
push
jbe
xchg
cmp
fcoml
inc
sbb
sub
ljmpw
nop
lock
jmp
adcl
mov
xchg
or
mov
testl
outsl
xor
adc
xchg
jo
adc
jl
sub
rcll
std
stos
lods
sub
and
or
je
sbb
insl
faddl
dec
jno
pusha
jp
ficoml
dec
jae
int
jns
mov
pop
gs
dec
xor
pop
es
dec
pop
rorl
or
stos
cmpsl
or
inc
inc
sub
test
cmp
mov
jmp
push
sbb
jge
cmpsl
jle
ret
cmp
je
leave
jne
mov
xchg
loopne
mov
orl
and
mov
mov
ss
popa
jb
mov
sbb
addb
ljmp
xor
mov
dec
lahf
xor
sub
mov
xor
add
adc
adc
imul
rolb
push
fldenv
mov
sbb
adc
mov
jge
stos
xor
sbbb
and
cmp
movl
add
mov
sbb
pop
mov
lock
and
fistpl
pushf
out
or
or
jmp
adc
in
sahf
lock
lock
adc
cmp
jns
cmp
push
inc
rcrl
mov
jns
mov
inc
sarl
nop
push
inc
mov
insb
xchg
rolb
mov
cmp
fcmovu
mov
cmpsb
adc
add
add
shld
sahf
mov
dec
mov
cmp
dec
xor
adc
test
push
mov
add
inc
test
adc
jl
sahf
adc
mov
cmp
dec
sbb
mov
fstps
jl
or
sbb
xchg
adc
mov
pop
jp
jmp
daa
or
sbbl
sbb
dec
test
les
popa
femms
push
pop
lret
push
jmp
push
sub
jmp
or
pop
pop
sti
mov
add
xlat
adc
inc
in
sub
push
xchg
push
mov
clc
adc
js
stos
push
test
mov
dec
sbb
lock
call
cmp
repz
push
push
je
fdiv
cmpsb
into
daa
mov
pusha
andl
push
and
push
mull
pop
fs
jmp
addps
mov
xor
xchg
in
sbb
aam
and
das
or
leave
push
inc
jo
jmp
orb
mov
lea
or
mov
adc
xorl
sub
test
dec
insl
dec
outsb
rolb
pop
in
sub
mov
enter
fsubs
xor
cmp
test
mov
bound
shlb
cmp
inc
imul
imul
xlat
mov
rolb
jb
adc
xchg
nop
xchg
mov
lods
nop
dec
test
push
sbb
jne
push
and
dec
movsl
adc
push
push
data16
fiadds
adc
sbb
lret
inc
jp
je
sub
insb
popa
xchg
out
push
adc
loope
push
add
icebp
je
das
rolb
sbb
sbb
xor
cmp
cmp
imul
add
dec
xor
icebp
in
sahf
or
mov
loop
dec
push
outsl
fwait
cli
jne
pop
jg
movsl
xchg
dec
push
inc
popf
xchg
lods
add
rcrl
pop
lcall
or
xchg
mov
test
push
mulb
test
jl
jbe
aas
mov
mov
ja
mov
cmp
cmp
jmp
cmp
and
loope
cmp
fimuls
dec
mov
push
rcll
aas
sbb
cmp
xchg
mov
add
or
and
add
inc
dec
adc
or
jmp
lods
aaa
sub
bound
cli
fs
and
adc
sbb
sbbb
imulb
xor
sahf
add
pop
dec
outsb
int
lea
jo
out
shlb
add
cmp
and
sub
enter
sub
faddl
mov
lods
shlb
addr16
out
inc
cli
scas
adc
mov
push
sarb
or
xchg
cli
lock
fiaddl
sti
sub
call
pop
addl
or
jnp
insl
or
jo
adc
and
movsb
add
lret
rol
sub
mov
sub
shll
add
adc
pop
push
into
xor
insl
loope
add
xor
lahf
mov
mov
or
cmp
lcall
pusha
add
test
mov
sub
push
data16
lahf
scas
pusha
xchg
ss
insl
bound
or
inc
push
into
push
loopne
inc
push
jp
in
aam
push
sbb
ret
jae
jnp
pop
mov
and
add
mov
popa
xor
or
inc
cmp
cmpsl
ret
jbe
aaa
test
aad
adc
rcll
js
xor
pop
or
call
daa
inc
mov
jl
mov
jb
adcl
cmp
xchg
xchg
inc
or
or
cmp
cltd
enter
addr16
int3
sbb
ljmp
sbb
sarb
insl
aas
aam
cmpl
cmp
test
inc
lea
mul
push
cmp
sbbl
aaa
jne
cmpsb
enter
movzwl
push
push
push
cmp
movsb
xchg
inc
mov
mov
stc
xchg
adc
xchg
js
or
mov
and
add
je
je
mov
xchg
subl
mov
iret
in
data16
sub
mov
jns
in
mov
sbb
pop
pop
movsl
flds
leave
stos
popa
sub
xchg
and
xlat
mov
mov
popf
or
push
or
push
sub
and
stc
ss
test
ret
or
mov
xchg
mov
clc
and
mov
jmp
or
iret
adc
add
movsl
push
xchg
add
nop
and
xchg
movsl
test
clc
dec
movsb
ret
out
xchg
and
mov
mov
add
sbb
xchg
sub
or
mov
mov
mov
and
sub
fdivrs
movsl
in
roll
enter
xchg
or
lds
das
inc
dec
mov
adc
cmp
frndint
cmp
jae
mov
enter
fld
mov
jno
fisubl
les
mov
sar
dec
cmpsl
and
adc
nop
lea
and
mov
dec
rclb
sbb
ret
orl
test
inc
pusha
dec
inc
call
or
sbb
mov
cmp
loope
inc
sti
mov
push
lahf
push
in
pop
cmp
pop
jecxz
add
mov
outsb
push
fldl
add
test
fiaddl
pop
mov
pusha
or
das
sbb
xorb
cmp
xchg
mov
or
inc
jmp
mov
loop
mov
dec
sbb
paddb
push
xchg
inc
push
mov
jbe
inc
push
add
dec
mov
inc
out
push
mov
or
dec
in
dec
cmp
daa
and
jno
fcmovnbe
dec
cmp
pop
adc
andl
mov
xor
les
cmp
add
sub
fcompl
sbb
mov
sub
push
jbe
sahf
sti
int3
pop
test
jmp
add
xchg
push
int
sbb
mov
add
cmp
aaa
push
and
andl
icebp
popa
adc
inc
jecxz
dec
push
or
push
mov
sbb
adc
and
dec
out
or
popa
xchg
and
inc
pop
addr16
push
icebp
sar
and
xchg
scas
mov
popa
mov
adc
cmp
cmp
sbb
iret
mov
fisubs
sub
clc
mov
xchg
aaa
add
orl
gs
xchg
and
lahf
and
dec
sub
add
js
lret
add
push
push
lea
and
icebp
adc
jle
pop
cli
into
mov
inc
mov
cmp
dec
sbb
and
pop
mov
mov
outsl
icebp
gs
addr16
inc
imul
sbb
pop
pop
shrb
mov
outsb
pop
mov
js
lock
push
dec
and
mov
or
pop
rclb
push
add
dec
jo
inc
shl
enter
in
push
and
and
sbb
or
shll
dec
push
adc
push
lret
daa
into
loopne
cmovb
cmp
dec
lods
mov
push
sti
pusha
test
scas
add
inc
push
in
lret
lock
insl
scas
lods
mov
insl
shlb
in
loop
xchg
nop
xchg
mov
loope
out
xchg
xor
mov
add
add
jg
lods
rcrl
mov
mov
push
aas
sti
rcl
inc
mov
arpl
or
dec
sbb
pusha
add
aam
xchg
dec
jg
push
clc
jecxz
rcr
hlt
insl
jne
or
xor
movsl
push
pop
add
add
bnd
in
ss
add
jl
lock
jne
int3
rolb
inc
sarb
loopne
mov
add
pop
sar
mov
xchg
mov
sub
out
or
inc
dec
iret
jl
jne
mov
add
pop
cmp
mov
sub
movsb
xlat
movb
test
mov
lret
or
add
sub
push
dec
lds
rorl
out
fneni(8087
sbb
cmp
in
dec
xchg
in
fimuls
adc
cmp
rolb
sar
push
or
adc
test
push
rcl
addb
lds
mov
gs
sub
lret
dec
movsl
or
popa
out
arpl
sarb
add
and
call
pop
lods
xchg
push
icebp
aas
sub
mov
or
mov
push
repnz
in
loope
imul
xchg
jb
push
je
and
movsl
movsl
jmp
stos
cmpsb
sbb
cwtl
pop
pop
sbb
fs
add
test
ret
mov
xchg
popa
push
sub
add
mov
stos
adc
add
cmpsl
es
adc
inc
pusha
adc
push
sahf
test
imul
mov
add
loope
jmp
inc
pop
int3
push
pop
dec
andb
dec
shlb
xor
dec
popa
add
or
add
or
fucomip
lcall
pusha
shlb
push
add
rcll
add
cmp
and
push
movsb
or
lock
mov
jle
mov
jae
cmp
call
dec
jl
lea
mov
faddl
pushf
movsb
xchg
ss
mov
push
je
out
jnp
lcall
add
sarb
xor
mov
cmpb
or
int
popa
jne
pop
xor
add
mov
push
xchg
push
mov
push
add
mov
push
cwtl
js
lods
add
dec
subl
sbb
in
repz
ljmp
inc
lods
xchg
jb
xchg
push
sub
int3
shlb
insb
inc
les
dec
pop
or
outsb
sbb
add
cmpsl
xchg
gs
adc
in
push
adc
fdivrl
orl
cmp
jl
push
push
imul
or
mov
or
orb
sub
mov
fimull
sbb
inc
push
mov
in
stos
subl
mov
aas
add
lret
rclb
cld
out
ljmp
xchg
insb
mov
loop
push
rorb
sahf
lods
test
dec
and
mov
xor
insl
es
or
les
aaa
call
cmp
sbb
push
pop
and
add
cmp
add
jl
shlb
insb
addb
dec
or
mov
cli
rorl
test
xchg
das
push
inc
sbb
fmull
and
push
push
pop
addr16
inc
sbb
aam
lods
add
aaa
mov
or
sbb
push
test
xor
xchg
imul
xor
gs
clc
adc
jne
push
rcr
and
xor
loop
push
call
nop
mov
cmp
inc
lcall
in
aaa
lds
stos
loopne
jbe
je
adc
cltd
sbb
adc
and
mov
ss
pop
add
adc
push
fcoms
xchg
cli
sbbb
call
xor
call
fcmovu
inc
add
xchg
mov
mov
inc
xorb
es
push
inc
lods
shll
pushf
mov
testl
mov
push
adc
das
mov
dec
popa
in
add
lds
or
sti
sbb
or
cmove
daa
and
cwtl
sbb
dec
daa
inc
add
xchg
out
xor
divl
in
mov
inc
xchg
cld
push
xor
or
or
pop
and
adc
sub
pop
cmpsl
or
popa
or
pusha
mov
int3
push
jnp
or
adc
inc
dec
enter
imul
xor
les
dec
cmpsb
xchg
subb
clc
jmp
sbb
jmp
pop
cmp
mov
sub
adc
xchg
int3
pushf
fisttps
mov
mov
rolb
lds
cmpsb
adc
push
enter
sub
inc
and
scas
je
inc
cmp
or
movb
sub
cli
xlat
cmpb
pop
nop
sbb
outsb
and
or
xor
shll
adc
test
rcrl
lcall
shrb
xor
push
mov
and
sbb
push
xor
and
jne
push
lods
xchg
add
adc
adc
xor
push
mov
in
lock
and
icebp
xlat
jno
ret
insl
pop
sub
inc
or
mov
sbb
pop
enter
test
mov
jns
rcrb
dec
mov
inc
incb
or
mov
mov
add
and
addl
mov
pop
push
sbb
or
or
sbb
sub
xor
imul
push
aas
mov
pop
or
roll
push
pop
lcall
sub
mov
adc
inc
xor
dec
in
cmpsb
xor
jne
movb
jmp
cmp
adc
xor
xchg
and
sbb
nop/reserved
add
xor
xchg
sbb
subb
mov
dec
shll
adc
push
sbb
jnp
or
ret
add
test
mov
mov
je
out
outsl
push
add
movsb
xchg
mov
lods
inc
enter
cmpsl
cmpsl
out
inc
fcoms
rolb
loopne
cmp
mov
mov
jp
call
dec
mov
or
arpl
addr16
leave
push
sub
inc
pop
out
and
push
ret
mov
xor
cmpsl
popa
xchg
xor
in
bound
inc
push
nop
out
arpl
nop
inc
push
fs
gs
push
nop
inc
insb
xchg
inc
push
nop
mov
push
nop
inc
push
push
nop
inc
in
push
and
enter
sub
enter
dec
insl
and
enter
enter
mov
pop
enter
int3
jno
pop
enter
in
add
or
jae
add
nop
add
add
nop
jne
jbe
nop
add
mov
add
nop
add
nop
add
nop
jns
jb,pn
add
or
cmp
jb
add
dec
enter
cmp
add
pop
lods
add
add
int3
enter
pop
in
das
cmp
or
xor
cmp
add
dec
in
cmp
xor
in
cmp
add
in
in
aaa
sbb
cmpb
cmp
sbb
cmpb
jb
sbb
inc
insb
inc
sbb
sbbb
lods
sbbb
inc
int3
jb
sbb
inc
in
inc
push
sbb
or
inc
sub
push
cmp
dec
cmp
cmp
dec
push
cmp
mov
inc
push
cmp
int3
cmp
cmp
push
xchg
notb
and
sbb
xchg
insb
push
xchg
xchg
and
sbb
xchg
in
push
xchg
adc
pushl
in
adc
jecxz
rcrl
pop
xchg
aam
fisttps
aaa
repnz
push
hlt
push
lahf
xchg
iret
enter
enter
mov
cmp
call
aam
daa
iret
enter
mov
int3
fmuls
xchg
aam
and
inc
into
xchg
in
loop
in
sbb
and
aam
in
jne
scas
cs
pop
cmp
fs
sahf
lock
int
imul
in
xor
or
push
bound
add
test
xor
iret
out
cmp
sub
jb
cli
push
mov
dec
outsl
push
ja
push
rcrb
or
adc
xchg
cwtl
outsb
rcrl
and
mov
sub
outsl
pusha
dec
imul
stos
insl
call
shlb
insl
call
dec
and
call
mov
popf
fcoms
dec
xchg
add
sub
insb
pop
xor
fdivl
pop
imul
mov
cmp
and
aaa
rcl
mov
inc
dec
stc
dec
lret
gs
add
out
dec
push
cmp
mov
pop
int3
cmc
lods
push
sbb
push
lea
pop
leave
add
or
outsl
test
jge
cmp
or
adc
push
xchg
fldenv
or
or
inc
jmp
jne
ret
and
fs
test
test
mov
cmp
fcmovnu
push
fcomps
aad
push
mov
add
das
xor
mov
pop
add
nop
mov
fs
aam
leave
pop
dec
test
test
sub
andl
push
push
jae
xorb
testb
xor
mov
dec
popf
xchg
xor
push
popa
or
stos
stos
lds
inc
dec
popl
fisttps
call
push
push
icebp
test
cmp
cmp
pop
pop
enter
xor
xor
cs
mov
jp
cmp
cmp
mov
mov
adc
fimull
loopne
inc
sub
repz
adc
or
mov
dec
jmp
or
cwtl
dec
js
or
or
mov
cmpb
sbb
mov
or
mov
push
test
loope
jnp
xchg
cli
push
gs
stos
add
or
jbe
or
sbb
cmp
shrb
incl
movaps
sub
cmp
cmp
sbb
daa
inc
mov
pusha
or
aad
inc
imul
xchg
icebp
and
push
ret
mov
incb
xor
mov
cmp
inc
sbb
dec
inc
cmp
icebp
and
mov
add
push
rcrb
fidivrs
or
nop
adc
stos
push
mov
push
leave
fsub
divb
add
mov
pop
xchg
sbb
and
rorb
lret
or
and
push
push
and
add
mov
xchg
sahf
push
les
std
add
xor
adc
popa
mov
cmp
movsl
out
and
and
add
rclb
add
mov
push
clc
adc
pop
mov
sahf
add
pop
aaa
ds
mov
fwait
inc
cmpb
je
sbb
fwait
mov
sbb
sub
rolb
mov
inc
push
cmp
add
pop
pusha
out
add
daa
mov
loopne
cmp
mov
dec
push
sbb
call
xchg
xor
or
lods
iret
adc
fildl
push
cmp
test
inc
fstl
sub
inc
hlt
stos
mov
mov
ljmp
push
inc
inc
dec
push
jbe
and
push
mov
push
aam
cli
aam
roll
iret
mov
cltd
ss
push
mov
adc
nop
or
push
sbb
mov
push
mov
clc
test
jl
adc
test
add
dec
adc
add
outsb
mov
or
out
fsubs
xchg
dec
lcall
mov
sbb
int3
mov
mov
pop
adc
mov
in
js
jle
or
inc
cs
jle
les
lods
mov
les
sbb
cld
in
mov
lock
test
push
mov
push
push
nop
mov
mov
mov
cld
mov
xchg
lock
dec
mov
cmc
mov
pop
mov
jecxz
cmpb
popa
add
adc
test
mov
insl
je
sbb
call
mov
stos
call
push
fmull
test
shlb
pop
movsb
movsl
adc
push
std
fs
loopne
testl
call
xor
sbbb
mov
push
or
stos
nop
jno
dec
arpl
xchg
loope
and
push
pop
int
inc
jb
mov
dec
xor
fsubrs
pop
pop
xlat
mov
popa
je
fs
jne
bound
hlt
mov
add
xchg
aad
xchg
adc
scas
xor
sbb
fdivrs
mov
sbb
sub
cmpsl
repz
xor
aas
adc
pop
jae
add
neg
jmp
and
adcb
outsb
dec
mov
cmp
inc
or
cld
movsb
andb
mov
dec
dec
xchg
jp
in
shll
shl
fisttpl
push
js
das
test
mov
and
push
xchg
cmp
jecxz
mov
add
add
sbb
add
aaa
cmp
lret
fmul
jno
jl
adc
incl
dec
sbb
movl
or
popf
pop
push
cmpb
or
sub
scas
adc
loopne
cs
and
ret
mov
sub
pop
add
push
fs
jne
ret
insb
call
test
and
mov
or
lods
shl
out
pop
mov
lahf
push
inc
mov
push
pop
lock
mov
dec
xchg
and
cmpsl
add
push
push
push
inc
inc
dec
dec
rorb
mov
dec
inc
pop
push
cmp
es
lock
cmpsl
or
jg
bound
pop
inc
dec
dec
inc
cmp
xchg
and
xchg
or
adc
test
lods
jg
or
rorb
inc
mov
xchg
or
sub
and
mov
add
or
test
mov
jge
inc
jo
and
inc
clc
cmp
movsb
andb
sbb
sbb
inc
dec
cmpsb
fadd
push
xchg
insb
push
add
mov
push
insl
xor
mov
mov
jge
imul
das
out
test
mov
push
mov
xchg
lods
jg
movl
or
or
int3
test
sbb
or
test
outsb
jmp
rorb
xchg
add
data16
mov
imul
ds
inc
inc
mov
jmp
add
loope
sub
and
xor
push
mov
sub
add
jns
mov
gs
dec
ficoml
aas
mov
inc
insl
push
pusha
stc
cwtl
pushf
or
inc
push
dec
push
pop
pusha
cmpsl
sub
add
push
cmpsl
jnp
pop
xchg
out
jle
lods
stos
add
xor
filds
add
dec
add
mulb
icebp
test
inc
push
cmp
por
mov
mov
xlat
pop
ret
jmp
mov
test
adc
hlt
add
inc
push
xor
sarb
push
or
xor
pop
inc
sbb
push
and
ds
rcrb
bound
and
decl
cld
dec
sbb
sbb
and
mov
mov
add
cmp
stos
test
mov
inc
nop
data16
sbb
and
sbb
pusha
aaa
pop
ror
or
and
out
mov
pop
sbb
clc
mov
push
pop
add
cld
inc
and
cmp
cltd
and
stos
notb
lahf
fs
inc
neg
movl
orb
movd
loop
icebp
mov
and
jnp
scas
jmp
mov
dec
addr16
mov
xchg
arpl
push
or
sub
inc
adc
jg
or
pushf
int
push
cwtl
push
inc
fistpll
movsb
cli
xchg
push
mov
sbb
xor
add
jmp
mov
cmp
je
add
sbb
lock
mov
jb
sbb
xor
rcrl
or
rolb
push
or
jns
out
imulb
or
cmp
repz
pop
mov
cmpsl
sbb
lahf
sbb
mov
lcall
fcoms
sub
or
push
rorb
loope
ljmp
add
gs
or
lds
push
xchg
add
iret
jg
mov
ljmp
hlt
adc
shll
and
xchg
in
push
sbb
add
add
push
imul
aaa
and
loopne
push
aad
loop
add
mov
pop
rcrb
xor
xor
mov
test
es
push
shr
loop
repz
fadds
loop
addr16
out
enter
push
mov
shl
add
shll
add
or
shlb
inc
add
ret
fistl
push
cltd
jne
arpl
sbb
cltd
cltd
inc
and
push
jle
or
std
jne
inc
xor
push
in
dec
add
es
jg
xchg
addl
sbb
loopne
jmp
ret
rorl
shlb
loope
or
ret
add
push
flds
or
push
enter
or
arpl
pop
pop
xchg
cmpsb
call
or
or
cmp
mov
add
jmp
mov
xor
adc
push
mov
rcrl
xlat
fnstenv
shrd
cmp
cmp
mov
out
dec
mov
jg
call
loop
bnd
mov
mov
out
add
call
nop
and
and
inc
jecxz
ljmp
jp
push
lea
pop
jae
or
sti
add
add
mov
dec
cli
jmp
mov
mov
movsb
mov
inc
jmp
add
xchg
mov
sub
adc
add
shll
aad
or
jno
test
dec
pop
cmp
sub
sbb
push
jnp,pt
inc
dec
fwait
add
sbb
jo
lods
pop
imul
dec
push
adc
push
dec
xor
inc
adc
nop
push
mov
nopl
test
sbb
xchg
cli
fsubs
mov
fmuls
in
pop
lret
inc
pop
movsl
push
dec
dec
arpl
sbb
test
and
sub
dec
push
fidivl
xchg
sbb
je
add
data16
inc
lea
add
mov
adcl
push
pcmpeqd
add
outsl
btrl
shll
cmp
paddusw
frstor
mov
cmpsl
in
jmp
mull
adc
lret
sub
fisubs
jo
je
enter
lea
mov
shll
adc
mov
sub
les
sbb
add
les
ret
std
sahf
and
pop
dec
mov
inc
lcall
movb
lock
gs
rcr
shll
movsl
adc
shr
mov
imul
in
mov
test
pop
jnp
fdivs
out
ds
inc
adc
adc
decl
adc
repnz
ficoml
add
ret
sub
mov
add
sti
lock
sbb
neg
inc
enter
aam
add
test
push
mov
jg
clc
dec
imul
mov
ss
sbb
addl
add
incl
sbb
outsb
mov
push
enter
lock
jbe
out
jmp
add
push
icebp
and
inc
cmp
jbe
sub
cli
dec
inc
sbb
lea
out
add
in
adc
or
inc
pop
sub
inc
es
add
mov
jo
rolb
jl
lea
add
cmp
nop
mov
cld
shl
stos
jge
mov
add
mov
push
add
or
or
jmp
mov
mov
jp
ror
mov
mov
in
call
shr
aam
fwait
gs
jmp
sar
or
int3
mov
adc
pop
add
lret
enter
push
out
js
loopne
jl
mov
cmpsl
mov
int
clc
push
add
jp
fsubrs
ja
int3
shll
jge
hlt
jae
mov
mov
pusha
and
add
adc
add
jmp
push
sub
sbb
adc
add
mov
sahf
mov
testb
shl
rcrl
push
movd
mov
adc
lcall
pusha
xor
add
or
maskmovq
imull
notb
sub
mov
fsubrp
sbb
or
mov
cld
push
sub
inc
jg
fwait
xchg
sub
and
adc
lock
lock
sub
jecxz
xor
subl
push
les
dec
jns
imul
daa
inc
dec
jb
jne
icebp
and
rorb
jl
and
push
pop
aas
loopne
and
jbe
push
push
adc
pop
push
mov
lret
cmpsb
add
inc
mov
sbb
sbb
loopne
jge
shl
mov
addl
push
mov
les
lock
test
push
in
sub
xchg
push
or
dec
inc
nop
out
sbb
add
and
mov
dec
lods
sub
or
jb
sti
arpl
fists
sbb
je
add
xchg
sbbb
pushf
cltd
mov
mov
daa
add
sbb
shl
pusha
mov
loope
sbb
int
fdivs
mull
pushf
and
cltd
andb
jne
ds
sub
or
dec
push
cs
mov
out
mov
sbb
mov
mov
pop
fldl
fs
dec
mov
mov
adc
sub
push
test
ret
out
jmp
cltd
push
push
loop
jmp
arpl
push
or
in
jbe
and
std
mov
hlt
push
popl
in
test
adc
sahf
test
mov
daa
shlb
add
add
mov
or
imul
add
sub
add
sbb
push
pop
or
push
or
or
or
gs
jno
rcl
lea
cmp
push
inc
inc
xor
in
mov
movsb
jne
ret
mov
jbe
xlat
xchg
push
pusha
add
and
ret
negl
enter
and
push
inc
ret
cwtl
push
or
adc
adc
outsb
xor
mov
add
or
mov
cmpsb
dec
sub
adc
xor
mov
push
cmp
fwait
pop
mov
inc
mov
ret
hlt
imul
xor
andb
mov
jmp
iret
jae
dec
rcl
sub
sub
ficompl
sub
or
xlat
ds
add
sbb
xor
sub
clc
sbb
ret
pop
lahf
test
les
push
push
pop
inc
test
dec
cltd
movsb
xchg
popa
shlb
cmpsb
mov
push
fnsave
divb
cmp
jae
imul
dec
dec
jmp
mov
inc
movsb
push
sub
or
test
fwait
int
lea
addb
sbb
sbb
fnstcw
jmp
dec
and
jg
es
imul
jmp
fnstsw
mov
inc
adcl
add
xchg
imul
dec
push
out
test
loopne
dec
ret
ret
aas
jle
lock
pop
xor
bound
mov
cmp
shll
or
or
jb
adc
pop
mov
stos
xor
add
imul
stos
adc
hlt
sahf
add
int3
pop
or
cwtl
in
mov
push
jne
shll
sub
dec
sbb
enter
sub
and
repz
push
mov
mov
dec
jecxz
mov
lock
test
pop
or
add
inc
out
dec
inc
mov
push
push
sub
add
addl
push
sub
roll
push
fiaddl
sub
add
or
add
or
idiv
inc
push
xor
andb
out
dec
and
jbe
not
shr
and
lret
loop
dec
mov
mov
xor
lea
into
xchg
xor
test
adc
loope
jge
nop
stc
mov
mov
add
inc
push
push
dec
mov
pusha
ret
add
push
push
pusha
scas
jbe
sub
fists
add
mov
jp
adcb
xor
test
enter
xor
dec
shrb
xchg
push
ret
cmpsl
movsb
cmp
add
push
or
add
inc
sub
imul
push
sarb
dec
and
mov
cmp
daa
cmp
xlat
std
jae
insb
aaa
add
xor
push
jcxz
jl
in
aam
addr16
pop
cmpsb
fistpll
jl
sub
cmp
dec
mov
mov
add
xchg
add
push
push
ret
inc
lock
push
aas
adc
pop
imull
sbbb
pshufw
and
cli
sbb
fimull
ret
mov
jo
xor
cwtl
cmp
xor
or
pop
or
xor
cmp
rclb
push
push
or
sbb
or
dec
or
add
js
les
or
mov
or
sub
or
pop
push
inc
cwtl
push
outsb
clc
adc
movl
xchg
and
push
loope
pop
dec
sbb
add
sahf
add
mov
jp
jne
test
pop
movsl
add
adc
push
dec
clc
jae
sub
xor
pop
rcrl
inc
adc
rorb
shl
or
cli
jb
mov
loopne
dec
push
ret
mov
and
rcrl
adc
test
mov
jge
cmp
test
mov
inc
and
and
push
test
mov
push
orl
imul
xor
jecxz
jmp
imul
push
subl
in
iret
shl
or
cltd
subb
enter
mov
add
lds
int
add
xsaveopt
jnp
mov
in
loope
sarl
and
add
add
or
mov
test
push
aas
stos
sub
lret
sbb
faddp
or
es
lretw
inc
call
pusha
push
push
inc
leave
gs
mov
xor
stos
mov
inc
xchg
popf
rclb
sub
push
xor
sub
inc
sub
push
in
sti
push
inc
mov
cmp
and
push
mov
repnz
loop
sbb
or
add
push
inc
push
pop
cmc
xor
lea
push
jae
xor
inc
xor
jb
xor
adc
add
mov
push
dec
leave
mov
test
inc
call
mov
je
sbb
loop
push
test
rcrb
push
push
push
xor
add
add
mov
ret
lahf
mov
add
sahf
dec
mov
dec
push
shlb
xor
js
dec
nop
or
incb
mov
adc
jnp
xchg
cmpb
add
or
sub
sub
adc
cli
inc
mov
and
subb
jb
daa
icebp
push
and
push
jg
push
pop
sub
jbe
popa
mov
sub
inc
add
xchg
dec
inc
je
adc
adc
mov
jp
sub
or
daa
mov
fmull
sbbb
das
mov
das
push
add
mov
fsubrs
enter
in
dec
jmp
push
sub
push
out
sub
bound
fisttpll
add
dec
mov
ss
sub
sub
cwtl
sub
cmc
cs
subl
jb
sbb
dec
xchg
rclb
out
je
push
js
iret
xchg
call
push
inc
notrack
sbb
jecxz
cmp
adc
popa
stos
cs
adc
and
inc
adc
push
jns
and
ds
mov
pushf
sbb
mov
fdiv
sbb
pop
or
add
adc
out
loopne
das
loope
fdivrs
push
or
push
in
mov
dec
or
movl
lock
and
jae
adc
dec
adc
jmp
mov
rol
inc
les
hlt
std
and
mov
incl
mov
mov
out
sub
imul
jb
jecxz
xchg
and
add
popf
pop
jnp
mov
mov
jg
ss
test
sbb
outsb
movsb
cmp
pusha
or
mov
jo
push
sti
negb
je
shll
loopne
in
je
mov
push
or
add
daa
testl
pop
shl
insb
adc
pop
and
fadds
movl
leave
xor
cmp
inc
pusha
insl
pop
imull
mov
jo
xor
adc
push
sub
xlat
mov
mov
insb
lahf
cmp
pop
je
lds
or
and
add
push
mov
and
rorl
dec
adc
or
sbb
mov
inc
and
test
testl
mov
fisttpll
pop
call
adc
shrl
sbb
and
or
or
add
mov
negl
pop
dec
sub
rorl
xchg
push
sub
adcl
fcoms
push
aad
lar
xchg
sbb
lea
sbb
repnz
shr
out
adc
sub
dec
js
sbb
sub
xor
mov
or
loop
in
sbb
push
rcrb
and
and
xor
rorb
loopne
out
fcompl
and
lret
cmp
sbb
decl
and
sbb
mov
rcll
cmp
or
call
jbe
sub
adc
jnp
pushf
pop
and
pop
mov
push
and
adcb
mov
jne
jmp
lods
data16
and
mov
xchg
mov
decl
loop
adc
xor
jmp
push
jnp
clc
ja
pop
xor
add
inc
fistpll
inc
movsl
mov
adc
jbe
pop
addb
sti
jne
shll
outsb
add
insl
adc
je
adc
inc
cmp
sbb
xchg
mov
xchg
xchg
jbe
sbb
mov
cwtl
clc
fsubrs
ret
lods
pushf
dec
lock
xor
cld
repnz
in
pop
add
or
adc
mov
cltd
fdivl
and
inc
sbb
aam
pop
sbb
cmp
sub
call
data16
jbe
adc
xchg
xchg
loope
jbe
add
cwtl
test
adc
mov
cmp
jae
ljmp
loopne
inc
and
ret
loopne
shlb
jb
inc
and
lret
jmp
enter
and
add
daa
out
daa
ss
mov
addr16
sbb
shlb
mov
and
add
mov
rorl
xchg
cmpsb
xchg
idivb
push
or
cld
gs
pop
repnz
stos
cmp
or
loopne
rcrl
loop
pusha
push
xor
jae
hlt
xchg
push
in
lret
and
inc
or
cmp
jge
add
ret
mov
popw
and
adc
jmp
aas
lock
jae
scas
ss
jnp
jb
mov
mov
and
roll
mov
out
adc
sub
xor
call
aam
xor
imul
movups
push
pop
sbb
fiaddl
jmp
jge
imul
sbb
lcall
stos
jge
ds
sub
dec
jne
dec
xor
loopne
in
jne
test
or
adc
xor
sbb
pop
push
in
sub
shr
adc
insb
adc
je
inc
xor
push
lock
push
mov
sbb
scas
xor
dec
adc
or
inc
mov
ret
or
mov
or
inc
adc
inc
mov
inc
insl
in
xor
inc
add
and
mov
insb
mov
jo
cmp
mov
adc
orb
fs
pop
adc
mov
or
clc
or
cmpl
ret
and
ljmp
or
or
hlt
adc
inc
ja
aaa
inc
test
adcb
and
call
pop
stos
mov
mov
fcmovnb
mov
add
cmp
add
pop
test
inc
repnz
push
push
inc
test
jnp
or
inc
adc
pop
gs
lahf
dec
dec
dec
popa
cmp
add
push
or
lea
inc
bound
push
leave
sarb
les
inc
lods
iret
mov
lcall
stos
aam
clc
add
pusha
fsubrl
xorb
das
ss
push
mov
ror
mov
pop
inc
incl
xor
jne
bound
cmpb
out
xchg
push
popa
xor
sbb
inc
mov
push
call
mov
lods
bound
cmpsl
das
sub
dec
jbe
popa
cmp
and
or
mov
aas
lock
cmp
shlb
mulb
das
or
shlb
adc
mov
add
ror
shlb
push
or
xchg
pop
mov
pop
inc
daa
rolb
enter
sub
jb
and
aam
les
call
std
adc
pop
leave
mov
jns
inc
sub
or
cmp
push
sti
push
cmp
sbb
lret
pop
cmp
mov
pop
inc
imul
ljmp
mov
in
loopne
or
push
pop
cld
inc
push
push
adc
add
out
mov
cmp
shrb
add
adc
adc
xchg
fs
jnp
popa
adc
nop
jo
xlat
scas
push
repnz
adc
mov
icebp
enter
dec
aaa
dec
subb
inc
fs
movsb
vpshab
data16
add
push
add
cmp
in
and
and
mov
adc
int
leave
mov
and
xchg
sbb
add
and
sbb
dec
sahf
in
mov
xor
sahf
xor
dec
cmp
dec
sahf
in
inc
mov
loopne
sahf
in
mov
push
mov
cmpsl
aaa
push
mov
pop
mov
int3
pusha
mov
lcall
cld
jo
leave
xchg
jl
or
je
sbb
mov
cmp
mov
lret
pop
test
cltd
movsb
xor
mov
push
mov
push
movsb
pushf
mov
lret
mov
xor
test
lods
in
push
push
pop
cltd
mov
inc
mov
jp
sub
pop
sub
jne
daa
and
lods
xor
ja
dec
jns
out
stc
pop
xchg
lahf
add
dec
and
shll
cmp
imul
fcmovnbe
mov
add
stc
das
or
pslld
outsb
pop
inc
bound
dec
popa
jb
fisubl
jns
jne
pop
enter
insb
pop
jne
pop
push
gs
leave
xchg
je
outsl
jbe
cmp
push
push
pop
pop
jne
outsl
sbbb
and
pop
cmp
add
imul
add
nop
dec
jo
insb
jg
aas
and
imul
lods
adc
push
jns
pop
push
outsl
and
inc
ret
fcmovb
push
daa
outsl
daa
daa
push
nop
pop
xor
das
dec
repnz
push
jne
push
gs
sbb
mov
arpl
pop
dec
outsl
sbb
outsb
ss
mov
and
fistpl
push
into
jb
mov
inc
mov
nop
xchg
cmpsl
ret
xchg
pop
leave
and
or
mov
and
mov
push
ret
fstl
int3
push
inc
adc
xor
mov
in
xlat
mov
dec
rcr
rcr
aaa
ficoml
mov
je
andl
xchg
dec
arpl
out
cmp
cmp
xor
repnz
inc
jg
shlb
mov
ja
adc
add
lret
or
out
test
jne
xchg
push
mov
xor
add
pop
mov
insl
popa
les
inc
movsb
in
rcr
inc
test
aas
xchg
je
fsubrs
inc
lods
mov
mov
xor
inc
out
pop
pop
inc
jg
sub
jnp
inc
xchg
xchg
mov
xor
pop
pop
imul
das
fldenv
rolb
sub
mov
xchg
sbb
flds
andl
out
mov
inc
mov
xor
adc
clc
aas
push
cwtl
mov
cmp
sub
movsl
js
pop
fwait
mov
scas
mov
inc
or
in
es
int
cmpsb
jl
lds
adc
flds
dec
add
outsb
inc
scas
faddl
sbb
jnp
loopne
mov
adc
cmp
enter
les
call
lea
shl
gs
add
pop
int3
mov
sub
cmpsl
mov
mov
pop
pusha
adc
aam
sub
in
cld
cmp
addl
enter
jbe
fwait
mov
std
mov
fdivl
dec
dec
enter
xor
xor
adc
negl
scas
gs
dec
and
and
or
jae
inc
dec
push
mov
push
sub
and
jae
xor
ret
popa
lea
push
inc
inc
push
xor
mov
cwtl
call
imul
mov
aas
xchg
push
leave
pushf
cmovle
rcrl
add
xchg
xchg
les
sub
sub
js
adc
adc
adc
pushf
pushf
pushf
adc
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
sbb
pushf
pushf
pushf
add
add
pushf
pushf
pushf
add
pushf
pushf
pushf
or
or
pushf
pushf
pushf
or
dec
dec
dec
inc
icebp
repnz
dec
dec
dec
dec
cmc
div
clc
dec
dec
dec
dec
stc
cli
sti
cld
dec
dec
dec
dec
std
jmp
dec
dec
dec
dec
loope
jecxz
dec
dec
dec
dec
in
out
dec
dec
dec
dec
jmp
dec
dec
dec
in
out
out
rol
dec
je
sub
sub
mov
dec
dec
push
inc
mov
aas
mov
mov
dec
inc
arpl
jae
push
mov
ficoml
dec
xchg
lret
cmp
pop
hlt
or
mov
data16
dec
xchg
popf
mov
aad
sbb
cltd
xchg
cs
cs
mov
xorb
xchg
jne
add
enter
and
and
insb
dec
jb
out
push
popa
sbb
fidivs
filds
addr16
mov
mov
sbb
pop
sbb
mov
or
inc
adcl
mov
mov
add
es
iret
adc
inc
enter
sub
push
mov
inc
cs
outsb
rcl
pop
mov
adc
cmp
jnp
int
dec
lahf
sub
sbb
sub
aaa
xchg
fwait
movsl
add
lock
jne
or
lcall
push
aam
shll
dec
inc
and
sti
ret
and
xchg
sbb
aas
repnz
ds
bnd
test
cmp
jg
call
sub
ja
dec
sub
das
into
dec
dec
add
setb
insb
dec
insb
dec
pusha
inc
and
jp
out
pusha
xor
les
push
jo
pop
pop
fildl
gs
inc
cs
sbb
loopne
dec
cmp
mov
inc
into
adc
or
add
add
mov
xchg
adc
call
add
xor
and
add
push
int3
mov
jae
nop
cmp
xor
push
popf
mov
cmp
inc
dec
jmp
adc
and
rorb
dec
mov
sarl
pop
xor
sub
xor
and
inc
arpl
inc
mov
flds
clc
and
lahf
inc
adc
fldl
int
popa
mov
mov
ret
insb
push
mov
jae
repnz
push
adc
sbb
pop
inc
addb
nop
iret
stc
fisttpll
push
adc
xor
addb
mov
pushf
out
jp
add
pop
sbb
xchg
js
push
popf
mov
inc
pop
or
xor
dec
scas
sbbb
pop
mov
mov
out
add
sti
or
mov
push
add
add
or
xchg
mov
jmp
mov
push
insl
mov
js
cmp
jae
push
jo
cmp
and
and
jns
dec
hlt
adcl
jge
bnd
jae
and
push
ja
mov
xor
data16
fldenv
jbe
xor
xchg
inc
or
dec
push
pop
clc
dec
loopne
shll
cltd
jp
jmp
negl
imul
xor
jle
outsl
orl
xchg
jne
test
xchg
jne
or
lods
adcl
cmp
xor
add
pop
sub
xor
adc
arpl
outsb
sub
jae
rorb
push
lahf
mov
adc
adc
ss
inc
mov
mov
adc
xor
sbb
mov
js
or
movsl
insb
pop
mov
inc
push
and
jmp
shll
insb
outsl
bound
dec
pop
xchg
pop
xor
xor
add
mov
mov
pop
or
sbb
nop
cmp
addr16
js
adc
int
lcall
dec
or
inc
pop
inc
jl
loope
xchg
xchg
dec
pop
dec
cli
push
dec
pop
test
pop
das
sbb
cmp
pusha
cmp
das
inc
scas
xor
push
les
jbe
mov
cltd
inc
add
and
add
dec
xchg
into
ret
shlb
dec
lahf
push
leave
sbb
negb
pop
stos
lret
push
fistps
or
jle
in
pop
or
insb
push
movsb
push
mov
incb
add
aaa
test
test
cmp
and
mov
mov
data16
xor
adc
xchg
push
pusha
add
cmpsb
sub
cmp
pop
cmpsb
jne
js
push
pop
pop
add
aad
inc
rcrb
test
xchg
or
call
cmpsb
rcrb
clc
and
and
lret
and
adc
enter
shlb
mov
xchg
daa
dec
add
jmp
inc
sub
adc
imul
ds
popa
loopne
cmpsl
cmp
daa
adc
push
push
inc
cwtl
aaa
push
loopne
xchg
pop
add
add
aaa
jo
mov
aas
mov
lock
xchg
mov
inc
mov
ds
xor
adc
hlt
pop
mulb
xor
pop
loope
xor
inc
aaa
or
or
push
inc
fcmovu
cs
cmp
push
hlt
pusha
test
push
adc
sbb
mov
add
push
pop
sub
inc
add
inc
cmp
sub
jp
cmp
ja
popf
arpl
adc
mov
pop
or
inc
pop
in
jmp
cli
out
repnz
and
cmp
jbe
adcb
and
clc
mov
lret
outsl
imul
xchg
cmp
dec
adc
dec
cwtl
mov
xchg
cmp
cmp
push
inc
jbe
cmp
mov
and
rclb
add
loope
inc
push
xor
jecxz
cmp
jns
ja
mov
jmp
pushl
push
xchg
inc
mov
ja
mov
sub
imul
push
pop
inc
popa
enter
cmp
inc
jo
imul
adc
xor
mov
repz
jne
dec
imul
cwtl
mov
mov
xor
add
xor
or
xchg
jmp
mov
jp
and
pop
dec
loop
cmp
jg
je
sub
scas
ret
aaa
insl
mov
or
mov
insl
sbb
push
imul
jg
loope
pop
add
lea
sub
iret
movsl
fnstenv
push
hlt
enter
jmp
dec
repz
inc
cld
mov
inc
fdivl
imul
ds
mov
add
jbe
out
test
aaa
inc
test
cmpsl
xor
mov
mov
pushw
cmpsl
add
xchg
dec
mov
sarb
jb
mov
jmp
test
mov
dec
dec
cld
xchg
mov
aas
xlat
or
insb
fdivrs
enter
lods
add
call
aas
adc
mov
cld
mov
cmp
jne
repz
cmc
push
push
lahf
inc
fs
jo
pop
scas
sub
jle
jp
cmovne
aam
dec
jne
mov
lods
push
mov
mov
mov
push
leave
xorb
jl
sub
or
scas
test
addl
test
stos
std
jo
mov
ret
add
sbb
mov
jne
xchg
add
push
inc
lret
nop
add
push
mov
nop
sub
arpl
pop
or
lret
xor
xor
add
imul
jmp
xor
les
rcll
mov
mov
and
fcmovu
mov
and
sub
insb
in
loopne
adc
orb
push
stos
rcrb
mov
outsb
imul
add
or
mov
test
fstps
mov
adc
aas
loopne
imul
xor
and
jne
in
cmp
sbb
pusha
push
jl
inc
les
mov
or
mov
mov
mov
addl
pop
rclb
subb
dec
push
xor
add
and
pop
lret
mov
int3
pop
inc
icebp
inc
call
enter
cmp
call
movsl
ret
xor
cmp
pop
in
and
dec
pop
or
cmp
pop
fwait
push
dec
test
es
push
iret
xchg
pop
and
xchg
adc
adc
nop
out
jg
jle
push
rcll
cmp
fcmovbe
addl
xchg
fidivl
les
popa
and
ss
inc
test
lret
jge
enter
jmp
jno
pusha
sub
cwtl
mov
stos
mov
les
out
mov
xchg
test
adc
push
adc
mov
or
push
push
dec
sarb
or
adcb
addl
test
lea
add
or
add
mov
xchg
rcll
out
and
arpl
cmc
enter
pop
les
test
addl
xchg
mov
faddl
int
push
add
inc
mov
pop
cmpb
adc
add
adcl
mov
mov
xchg
sub
das
xchg
subl
sbb
xchg
push
jge
mov
hlt
bound
adcl
pop
lahf
dec
pop
cs
pop
ret
dec
adcl
xor
iret
inc
arpl
movzbl
pop
in
sbb
adcb
cld
lea
lods
adc
pop
in
in
adc
aaa
sub
in
inc
xchg
pop
lea
cmp
orb
and
gs
push
mov
push
lret
push
xchg
adc
and
jl
mov
xlat
sbb
sub
or
add
fistps
push
mov
sub
jg
mov
pop
dec
push
push
loopne
inc
mov
cmp
mov
xchg
adc
xor
mov
adc
jae
sub
lahf
jp
or
fwait
lahf
shrb
cmp
lods
sbb
push
sbb
cs
jbe
ret
js
hlt
cli
push
sub
sbbl
jle
mov
jl
and
mov
sbb
les
jns
or
mov
aas
ficompl
pop
cmpsb
enter
subl
repnz
inc
cwtl
gs
or
sarl
mov
outsb
adc
test
mov
call
mov
ret
push
add
push
sahf
xchg
add
add
pusha
ss
pop
xchg
hlt
xchg
push
mov
insb
mov
fadds
pop
pop
and
add
and
xor
imul
dec
jae
adc
fsts
aas
jg
push
jle
mov
repz
insl
pop
out
ja
or
sbb
add
pop
daa
out
sub
or
push
orb
cld
jae
shll
push
inc
cmp
test
inc
movsb
imul
adc
enter
fsubrs
in
les
push
jmp
inc
mov
mov
mov
xor
push
adc
pop
dec
hlt
jno
sub
stos
imul
xchg
pop
mov
mov
int3
cld
jb
cmpsl
rcrb
cmp
push
sbb
mov
inc
cwtl
clc
cmp
or
add
cwtl
cli
test
fsubrl
push
pop
addr16
mov
rol
add
jns
push
int
cmp
mov
inc
inc
stos
adc
ret
addr16
roll
push
repnz
jne
lahf
add
dec
idivl
or
daa
fwait
push
addr16
sub
outsl
dec
adc
dec
dec
and
xchg
add
bound
dec
inc
pop
dec
test
add
in
jns
xchg
cmpsl
push
xlat
push
fsubl
pop
ja
in
adc
push
mov
push
out
outsl
arpl
or
pop
sbb
addr16
gs
ja
add
xor
lret
jmp
pusha
je
pop
ret
inc
lds
pusha
adc
outsl
aaa
in
jbe
fs
test
fs
ss
mov
push
pop
push
fmull
mov
sub
fstps
insb
or
ret
add
xchg
fwait
adc
shlb
inc
movsb
test
jo
pop
fsubs
shlb
je
jb
mov
adcl
xor
js
gs
out
push
xchg
dec
jl
jae
xor
dec
push
sbb
subb
stc
pop
adc
jbe
ja
or
push
iret
movsb
sahf
pop
mov
data16
xchg
pop
sahf
insl
push
mov
push
mov
jae
cltd
rolb
mov
sub
adc
jbe
cmp
cwtl
nop
xchg
outsl
nop
lea
cs
xchg
xlat
pusha
in
push
xchg
outsl
xchg
jae
xchg
cmp
outsl
cwtl
or
or
jne
and
pshufw
pushf
aam
fildll
outsl
mov
or
mov
push
das
cwtl
bound
and
xor
outsl
movsb
subb
dec
mov
xorb
cmp
lods
outsl
mov
lods
out
outsb
or
mov
out
out
test
mov
mov
adc
jno
adc
and
sub
mov
or
sub
mov
outsl
mov
fs
sub
mov
rcrb
rcrb
sbbl
dec
jb
or
bound
pop
enter
leave
and
adc
xchg
dec
push
sub
int3
pop
jb
sub
int3
adc
out
movsb
inc
rorb
rolb
insl
push
mov
aam
jb
in
fistl
jns
inc
push
push
xchg
frstor
inc
jns
fsubs
dec
mov
push
aaa
xchg
andl
pushf
jae
push
js
in
push
lahf
push
ja
leave
inc
push
stc
lahf
loopne
loopne
mov
in
jb
in
cmpsl
inc
je
sbb
dec
mov
rcrb
call
scas
sbb
cmp
fdivs
mov
push
gs
gs
pop
outsb
jg
mov
lock
adc
push
inc
mov
adc
hlt
xlat
pusha
jne
cltd
mov
pop
jp
inc
xchg
xchg
popa
sbb
iret
clc
test
sbb
add
nop
popf
pop
cld
fdivl
inc
in
cld
or
jg
add
sub
aad
repnz
push
pop
bnd
mov
add
pop
jbe
xchg
inc
push
add
push
push
mov
testl
add
pop
or
adc
pop
lret
jne
or
or
lods
pop
mov
ja
pop
jb
adc
adc
jb
adc
adc
mov
mov
ja
push
mov
sbb
adc
mov
inc
xchg
dec
in
lock
sub
pop
push
mov
js
pop
sbbb
xchg
jb
add
push
add
sub
js
inc
jb
inc
sub
inc
xor
mov
jo
gs
inc
pop
sub
jns
test
movsb
shrb
jg
dec
push
or
push
stc
adc
xor
pop
lret
xor
push
sbb
jae
pop
sub
sub
pop
xor
lret
inc
cmp
dec
es
xchg
jp
in
aad
cmp
or
les
dec
lods
cmp
ds
inc
push
lcall
dec
es
jp
jg
sbb
jae
hlt
jp
enter
pop
push
test
dec
aaa
mov
popl
or
cmpsb
pop
and
push
dec
push
inc
push
test
mov
test
or
ror
mov
adc
bound
pop
daa
or
movsl
test
lret
jl
mov
xor
addr16
pusha
cwtl
jl
pop
jb
pusha
or
sbb
int3
jl
repnz
fsubrs
or
addr16
adc
cmp
insb
and
pop
insb
dec
and
movsb
jo
xor
xchg
or
je
pop
sub
push
adc
imul
and
or
jbe
adc
js
cmp
dec
inc
cmp
pop
xor
xor
mov
rcll
adc
enter
adc
cmp
test
jg
mov
xchg
cmpsl
inc
xchg
mov
xchg
push
insb
mov
lret
push
mov
adc
jb
dec
push
cld
ja
adcl
and
test
outsl
pop
enter
xchg
inc
adcb
mov
cltd
inc
cwtl
adc
add
jl
pushf
xchg
adc
js
inc
sbb
sub
mov
jb
xchg
push
movsb
jo
in
sub
add
sub
and
lods
ja
lods
xchg
add
ret
dec
add
int
js
pop
mov
jne
inc
jg
sub
mov
cs
and
insb
adc
test
add
fs
adc
inc
bound
mov
xchg
and
mov
out
or
xchg
rolb
lret
push
les
les
add
test
inc
xchg
dec
in
or
sbb
add
ret
lcall
test
add
and
push
dec
cmpsb
movsb
xor
fs
dec
add
jo
add
xor
lods
inc
jns
fs
enter
cmpsl
fadds
and
xchg
dec
es
pop
fcompl
xchg
dec
movsb
pop
loopne
test
loopne
cmpsl
push
nop
out
mov
xchg
in
lock
call
xor
call
dec
aaa
in
je
mov
leave
add
pop
xor
ret
imul
cvtps2pi
cltd
fs
or
and
mov
enter
mov
cwtl
subb
iret
in
adc
in
iret
in
jl
imul
mov
jae
cs
les
iret
out
dec
pusha
cmp
mov
push
cs
mov
jo
insl
je
movsl
mov
insl
jl
repz
and
jns
dec
mov
test
dec
in
jl
adc
jns
iret
pushf
movsb
mov
dec
in
jo
push
lods
mov
lahf
lret
jae
enter
mov
inc
mov
out
pop
loopne
adc
repnz
sahf
int3
dec
rolb
mov
fsubl
pop
sahf
loopne
in
je
lret
repz
adc
lock
sub
jo
mov
mov
push
in
add
jbe
cmp
cmpsl
or
lods
adc
xor
sbb
in
sbb
and
and
in
cmp
sub
jl
xor
jns
push
jae
cs
cmp
dec
in
jp
je
mov
lahf
lret
jae
cld
push
cmp
push
lahf
lret
jae
nop
pop
enter
lret
jae
sub
movsb
push
stc
pop
sahf
push
jo
pop
sahf
lret
push
add
jae
movsl
jl
sbbb
mov
mov
nop
int3
xchg
adc
cwtl
sahf
lret
jae
pop
pushf
movsb
mov
pop
movsb
cmp
test
push
stc
pop
sahf
lods
les
pop
sahf
lret
inc
mov
iret
cmpsl
push
mov
les
enter
out
int3
fistl
sarb
test
iret
in
cmp
fcom
fsubrl
in
cmp
test
js
mov
rol
adc
mov
inc
stc
or
add
xchg
push
add
push
lock
and
sbb
jnp
push
cmpsl
ret
adc
xchg
and
mov
inc
jle
sub
aaa
push
imul
mov
mov
and
add
lahf
add
mov
or
imul
and
dec
add
mov
mov
es
pop
daa
lods
push
or
ja
jne
jo
adc
push
rolb
adc
and
mov
or
jae
enter
pop
fstpt
or
fldl
jl
mov
add
xor
sub
adc
test
sub
inc
fmuls
cmp
ret
out
push
or
pop
nop
je
xchg
inc
adc
test
sti
dec
ret
pop
scas
mov
ret
jae
or
cltd
push
es
and
pusha
outsb
pop
dec
test
pushf
adc
adc
cmp
jno
sbb
sbbl
fildll
mov
ret
xchg
sub
cmp
mov
pop
and
repz
repz
aas
inc
dec
push
loop
iret
push
pop
bound
dec
mov
mov
mov
mov
xor
loopne
daa
mov
out
and
jge
mov
or
xor
pop
lcall
jns
inc
add
mov
je
repnz
out
sbb
or
or
adc
inc
popf
jb
dec
xor
sbb
pop
inc
dec
mov
test
or
pop
or
pop
enter
push
jmp
jbe
icebp
add
jle
ret
inc
xor
or
loope
daa
movb
pusha
push
rcrb
dec
xor
push
faddl
mov
push
insb
cmpsl
popf
cmpsl
mov
clc
and
nop
ds
add
es
in
movsb
into
push
or
out
pop
nop
dec
mov
ret
mov
outsb
pop
mov
nop
shrb
push
rcl
pop
pop
pushf
push
lock
dec
sti
dec
popf
das
call
mov
ds
rcr
pop
mov
movsl
paddq
rcrb
xchg
and
inc
test
xchg
xchg
es
lds
mov
jp
mov
inc
or
xchg
inc
mov
xchg
sub
test
add
popa
das
inc
enter
sub
sub
pop
cmp
dec
mov
mov
xchg
iret
xor
ret
and
inc
jge
add
jne
or
dec
and
inc
scas
inc
ds
pop
imul
add
inc
mov
jl
pop
cmp
es
cmp
popf
stos
pop
test
cmp
xor
xchg
or
lock
dec
jae
sub
call
call
ss
jo
add
clc
fs
sbb
andl
push
in
lods
xchg
movb
add
push
pop
push
mov
dec
mov
cmp
jae
push
mov
adc
or
cs
inc
and
in
add
hlt
es
nop
pop
cld
rcl
add
lgdtl
es
pop
rolb
fisttpl
or
and
push
dec
shlb
jbe
cmpsb
movsb
sti
aaa
mov
pop
hlt
hlt
and
mov
lock
sub
sti
adc
std
subb
dec
aam
fmull
arpl
sti
movsl
add
daa
xchg
cmc
or
dec
mull
and
xchg
enter
gs
xchg
inc
fiaddl
mov
scas
stos
and
enter
fcmovu
jp
inc
jne
test
add
inc
fs
inc
pop
leave
jl
dec
imul
sti
sbb
mov
jne
insw
dec
add
mov
test
add
push
mov
mov
mov
mov
mov
push
pop
mov
jmp
pop
aaa
sub
lahf
mov
cmp
xchg
pop
sbb
xchg
les
sub
fwait
jno
jb
mov
movsl
dec
clc
dec
clc
in
ret
dec
adc
and
leave
xchg
inc
push
andb
inc
pop
inc
sub
test
xchg
jg
mov
mov
add
bound
mov
mov
fwait
aad
sbb
push
out
testl
mov
sbb
cltd
sahf
out
sahf
cmp
jg
jns
out
mov
repz
out
pop
lcall
iret
dec
pop
insl
jle
mov
scas
mov
sahf
out
hlt
add
push
add
in
test
mov
mov
lods
dec
pop
in
nop
sbb
ficompl
pop
and
xchg
insb
mov
fcmovbe
inc
test
inc
jb
mov
cmp
test
leave
nop
or
cmp
lds
leave
vpmuludq
inc
insl
dec
cs
mov
push
test
test
push
mov
jo
out
leave
and
jmp
cmp
nop
iret
outsb
pushf
mov
hlt
mov
sbb
xor
mov
mov
enter
ss
sub
sbb
mov
mov
mov
and
mov
sub
push
call
lret
jge
add
dec
mov
mov
stc
fimuls
mov
xchg
fidivrl
std
mov
push
inc
aaa
or
rorb
cmp
and
sbb
xchg
dec
lea
ja
xchg
ss
call
mov
popa
jmp
fcoml
lea
dec
add
dec
xor
inc
divl
xchg
mov
test
test
push
dec
ficoms
mov
mov
mov
repz
lret
mov
and
movsl
push
fadds
movsb
aaa
mov
cmp
adc
lahf
mov
dec
or
adc
mov
pop
ret
lods
aam
mov
dec
roll
leave
sbb
add
nop
mov
test
mov
shlb
bound
or
or
pop
or
or
lods
iret
or
dec
cmc
inc
ljmp
dec
lea
adc
popa
cmpsb
lea
flds
xor
pop
sbb
sub
ss
mov
iret
out
inc
cld
sbb
dec
scas
or
movl
sbb
sarl
mov
outsl
sub
in
adc
hlt
xlat
loope
jg
xor
xor
in
mov
push
sub
je
xlat
dec
lea
js
push
add
popa
jbe
int
mov
movl
daa
xchg
ret
inc
add
mov
push
jo
jnp
adc
adc
divb
add
fistpll
mov
mov
mov
xor
push
out
nop
adcb
xchg
pop
pop
pop
inc
mov
jnp
sbb
movsl
xchg
lods
push
imulb
fwait
lods
or
inc
mov
stc
xor
int
mov
loopne
scas
sarb
in
mov
hlt
je
push
push
les
push
inc
sahf
xchg
jge
push
xor
pop
test
pop
js
imul
shrb
je
push
mov
sahf
int3
call
cmp
pop
add
into
data16
insb
test
cmpsb
ss
xorl
xor
scas
in
cmpsb
ss
insl
xchg
pop
nop
push
outsl
insb
adc
hlt
mov
mov
in
cmp
push
pusha
shlb
lods
notl
add
bound
loopne
xor
pop
or
jo
inc
movb
and
fdivs
fcomp
data16
dec
insb
push
push
push
push
mov
push
mov
call
pop
call
stc
shll
mov
and
mov
xor
lock
dec
orl
cmp
cmpsl
push
adc
mov
jp
aam
push
sbb
xor
pop
test
call
iret
aam
jne
movsb
or
fcompl
addr16
add
sbb
jmp
mov
and
xlat
imul
cmp
ret
shrb
adc
mov
sbb
lods
aam
mov
stos
jnp
or
stc
adc
and
adc
add
add
or
sbb
mov
inc
or
and
ret
pop
das
aam
ds
lea
jno
and
push
mov
sbb
movsb
add
fisttpl
ret
mov
sbb
outsl
lods
fistps
lods
outsb
add
pop
insl
cmp
call
das
sub
mov
lahf
pop
mov
mov
fcoms
shlb
ds
adc
or
inc
arpl
xor
mov
fsubs
xor
mov
imul
jge
jno
xchg
loop
jmp
push
mov
enter
fsubl
shlb
in
fistpl
mov
mov
jmp
pop
aad
pop
loop
and
test
dec
or
icebp
jl
adc
aam
js
pop
mov
add
mov
jnp
bswap
mov
ss
mov
or
adc
push
push
mov
add
xchg
mov
bound
and
dec
xchg
and
test
leave
xor
cmpsl
inc
orl
movsl
push
ret
fiadds
xor
mov
push
adc
mov
jmp
lods
sbb
xchg
sbb
xor
fdivs
ss
or
testb
and
or
enter
inc
jae
dec
xchg
jl
mov
mov
cltd
scas
out
mov
fabs
test
sbb
sbb
mov
in
cmp
adc
out
or
inc
rorl
addr16
leave
sbb
pop
add
sub
scas
or
std
sarb
mov
cmp
dec
cmp
int3
mov
shlb
dec
aam
push
lock
mov
and
loopne
enter
sub
and
test
pop
mov
sub
test
mov
movsb
xchg
inc
addr16
test
jne
inc
inc
or
add
xor
mov
inc
test
fldcw
xor
mov
dec
jle
jmp
shlb
add
sbb
dec
stos
mov
mov
mov
and
mov
das
mov
test
shrb
mov
sti
xchg
lods
and
pop
sbb
imul
nop
dec
repnz
pop
push
stos
ss
and
cmp
dec
push
push
lock
xor
adc
inc
gs
and
push
addl
cwtl
sarl
stos
inc
jg
stos
cmp
xchg
push
dec
push
adc
push
jb
in
dec
cwtl
push
addl
je
xor
or
hlt
shlb
adc
inc
rolb
lock
psrld
lods
scas
pop
pop
cmpl
push
push
sbb
test
mov
cmp
inc
sahf
pop
stos
inc
clc
push
mov
out
push
aam
mov
je
xchg
mov
shlb
mov
dec
sbb
cmp
and
push
nop
leave
hlt
test
scas
lahf
mov
mov
inc
int
lods
mov
push
sbb
or
pop
stos
les
cmp
mov
or
cmp
xor
jo
cli
jge
fwait
and
adc
cmp
lods
push
test
in
popa
mov
mov
dec
lods
push
mov
aam
or
aad
fcompl
jo
out
pushf
and
pop
std
push
es
sbb
xchg
or
adc
shrb
jmp
cmc
mulb
sbb
sbb
cmpsb
out
push
and
adc
or
or
out
sub
scas
add
mov
sub
out
push
cltd
in
adc
scas
sbb
ret
pop
xchg
or
lcall
data16
or
push
pop
imul
faddl
xor
sub
out
cmp
dec
pop
pushf
dec
dec
call
aad
loop
xchg
and
cmp
xor
adc
adc
stc
je
adc
and
ret
and
push
sub
ds
mov
and
es
or
pop
add
jl
sub
adc
add
clc
aas
outsl
and
mull
and
orb
mov
outsb
ja
lret
adc
jecxz
xchg
mov
lds
cs
or
fwait
dec
mov
pmulhuw
or
fisttpll
iret
jns
add
xchg
mov
xlat
add
clc
or
in
add
mov
inc
cld
inc
scas
test
adc
outsl
fwait
sbb
arpl
mov
sbb
mov
mov
out
jmp
dec
movsb
jge
cmp
repz
cwtl
or
jmp
xor
pop
lcall
inc
mov
in
mov
nop
dec
xchg
pop
add
xor
mov
and
insl
xor
mov
subb
stc
addr16
sbb
je
or
les
int
cli
xlat
adc
xlat
dec
mov
outsl
mov
xlat
mov
cld
push
pop
xchg
or
adc
subb
in
movsl
jae
and
outsl
loope
dec
clc
inc
mov
cli
shlb
shlb
rorb
lds
xchg
pop
add
lahf
dec
inc
sbb
aas
pop
or
push
mov
push
movsl
mov
insl
or
imul
push
mov
push
dec
add
inc
rcrb
jno
outsb
jg
push
push
push
or
dec
inc
rcrb
imull
and
adc
lds
dec
out
cli
jge
or
push
mov
mov
lods
jbe
roll
in
sbb
inc
and
scas
in
xchg
push
ret
or
xchg
repnz
movsl
popa
pop
or
xchg
hlt
pop
add
jbe
mov
ja
cmpsl
fcmovnu
mov
test
push
xor
add
add
dec
sti
pusha
lock
and
movsb
js
lock
insb
dec
sahf
std
in
loopne
adc
cmp
mov
loop
mov
fstpl
xchg
dec
dec
xchg
cmp
mov
xchg
and
xchg
add
iret
nop
pop
xlat
xor
xorl
lea
mov
and
adc
xlat
fs
cmpsl
dec
pop
and
icebp
add
fsubrs
mov
jle
add
push
mov
pop
icebp
add
lahf
add
add
iret
data16
lock
mov
inc
cmpsl
jecxz
adc
mov
push
push
or
adc
pop
push
or
or
imul
push
adc
test
mov
pop
cmpsl
frstor
lret
mov
in
dec
shll
dec
adc
mov
add
clc
cli
mov
xor
mov
pop
iret
imul
arpl
add
xor
out
lock
dec
mov
test
mov
cs
inc
adc
mov
pop
and
add
cmp
push
push
pop
je
mov
lret
ss
mov
add
pop
push
mov
test
pop
lea
sub
lods
faddl
in
add
lods
stos
dec
imul
aaa
lds
pop
int3
mov
mov
add
les
and
aam
push
pop
lcall
adc
pop
fldl
fcmovne
jp
mov
add
jbe
repnz
jmp
dec
sbb
add
adc
test
ficoml
repnz
add
lds
inc
cs
sub
incb
add
sbb
jp
pop
lahf
cmpl
jne
rcl
lea
cmpsb
arpl
adc
sub
test
xchg
andb
loopne
lods
adcb
pop
int
mov
jne
inc
sub
jmp
lea
andl
jmp
iret
arpl
add
xor
ja
cli
sbb
dec
test
mov
inc
mov
inc
addb
sti
xor
popf
test
rcll
mov
dec
jnp
pusha
pushf
inc
or
dec
mov
adc
cmpsl
push
adc
in
icebp
add
das
mov
mov
rcrl
nop
or
stos
addl
push
lods
into
xchg
adcb
fisubl
pop
sub
mov
sbb
or
mov
xor
int
shlb
and
stos
sub
sub
jmp
mov
sbb
jge
push
cmp
icebp
inc
add
push
lret
test
mov
fidivrl
dec
add
shl
mov
mov
mov
adc
dec
sub
xor
push
add
add
dec
add
add
add
cmp
inc
loope
mov
shll
xor
daa
bound
add
imul
adc
test
jecxz
mov
inc
sahf
addb
test
or
ja
roll
dec
mov
jle
xor
sbb
shl
adcb
insl
push
ret
gs
xor
ret
rolb
lea
push
inc
sbb
nop
aaa
mov
xor
shrb
mov
cmp
clc
outsl
movsb
xor
xor
mov
outsb
enter
in
xchg
cmp
mov
test
cld
push
push
shrb
add
dec
add
push
les
sbb
sbb
mov
push
xchg
inc
pusha
leave
lret
adc
lods
insb
mov
jnp
jns
rcrl
adc
mov
mov
or
jno
sbb
and
sbb
les
dec
loope
cld
es
imul
and
test
inc
sub
js
test
out
inc
sub
test
in
leave
out
inc
sbb
jne
xorb
adcb
fldenv
fisubl
inc
sbb
lock
call
pop
out
sub
adc
mov
mov
cli
mov
pop
in
pop
add
push
roll
clc
mov
aad
cmp
jp
cmpsl
out
ret
dec
and
adc
gs
fimull
sbb
addr16
xor
fld
cli
loope,pn
sbb
jge
or
inc
xor
pop
outsl
ret
shrb
cmp
fmull
inc
cmp
push
divl
stos
dec
ljmp
lods
jbe
ret
in
les
aaa
or
ja
sbb
mov
pushf
popa
imul
into
insb
sub
and
add
jg
les
adc
jne
pusha
mov
mov
sub
cmp
out
and
jp
movsb
xchg
sub
push
inc
mov
ret
pop
and
lds
xchg
fwait
pop
push
inc
add
pop
push
or
dec
add
push
addl
mov
test
jge
lcall
cmpsl
pop
or
pop
mov
xor
dec
movb
and
in
fwait
mov
jle
mov
lret
pop
enter
hlt
hlt
fwait
push
adc
inc
or
xchg
add
lock
leave
xchg
or
in
adc
push
mov
popa
iret
push
fwait
sub
mov
jne
pop
lea
mov
jb
lret
pop
int
push
mov
or
push
int3
push
imul
add
outsl
xor
fldenv
jge
ret
push
mov
cmp
inc
jnp
mov
cmc
cs
inc
or
add
pop
jecxz
xor
or
outsb
fiaddl
cmpb
push
out
xchg
mov
pop
sub
sub
insl
insl
add
daa
imul
je
mov
hlt
or
hlt
pop
or
inc
xor
push
mov
popf
fs
add
test
add
flds
adc
enter
sub
xchg
push
sbb
int
add
sub
and
mov
js
jo
inc
and
inc
mov
sbbl
or
mov
push
xchg
sub
scas
push
inc
ret
test
push
push
das
or
cmpsb
or
pop
in
fists
int
mov
or
inc
inc
sbb
xchg
xchg
xor
notb
xlat
add
pusha
add
loopne
inc
int
push
add
test
fs
fstl
in
popa
and
pop
es
adc
rorb
cmp
dec
movsb
or
push
and
cmp
pop
push
mov
lret
adc
pop
enter
cmpsl
ret
pop
insb
adc
nop
or
push
and
xor
cmp
push
int
andb
orb
mov
or
or
xor
and
scas
and
hlt
inc
sub
or
add
and
ret
je
int
leave
dec
arpl
lcall
dec
cmpl
inc
ret
rcrb
dec
pusha
mov
clc
xor
or
push
dec
or
jmp
xchg
mov
push
loopne
test
dec
fld
adc
jl
daa
mov
and
test
fnstsw
cmp
cmp
or
lret
xor
gs
jmp
jl
lahf
add
ss
addr16
lds
nop
fnsave
push
mov
lahf
cs
dec
dec
inc
inc
dec
dec
dec
push
push
daa
dec
loopne
pop
xor
aaa
xor
xor
fwait
shrb
xor
xchg
xchg
fsubrl
inc
mov
or
int3
addl
pop
je
lods
iret
mov
adc
push
loope
sub
sbb
inc
add
xor
push
in
test
iret
sub
bound
inc
cmpsl
cmp
jl
xor
add
push
add
scas
cld
ret
pop
aaa
shlb
and
or
inc
adc
leave
rolb
add
lea
and
pop
or
inc
lds
add
add
ljmp
movsl
dec
and
inc
mov
xchg
rorl
sbb
sbb
cmp
fwait
mull
jns
shl
jl
cmp
mov
jg
cltd
pop
sub
add
pop
xchg
mov
add
xlat
sbb
es
push
loop
pop
dec
loop
adc
rorb
sbb
sub
pop
pop
inc
imul
pop
jne
inc
ljmp
jecxz
add
or
push
test
add
fdivs
mov
jns
mov
pop
jg
xchg
add
es
fisttpl
cmp
add
cli
aaa
dec
xor
sub
not
xchg
stc
rcrb
es
nop
pop
mov
push
roll
cmp
test
mov
loopne
inc
and
push
andb
pushl
and
pop
cmp
pop
or
push
jne
inc
movsb
xor
xchg
or
nop
adc
inc
xchg
and
cmpsl
jo
add
pushf
pop
aam
roll
pop
mov
adc
jo
add
push
mov
xchg
adcb
out
sub
xchg
push
shlb
push
call
ret
mov
inc
push
jg
fsubl
in
mov
xchg
cmpsl
cmp
call
mov
inc
inc
xlat
dec
shl
std
pop
les
adc
sbb
sbb
fimuls
ss
pop
xor
insb
jl
mov
stc
push
repnz
xor
cmpsb
push
aam
add
push
in
dec
popf
xorb
cwtl
push
jb
add
jns
fisubl
cld
insb
mov
test
fisubs
mov
pop
lahf
adc
nop
jmp
test
sbb
scas
dec
lods
sub
sub
arpl
rorb
jne
imul
push
fsubs
xor
mov
scas
push
xchg
sbb
ljmp
faddl
adc
sbb
pop
movb
movl
add
add
mov
dec
dec
int3
cmp
cmc
or
add
gs
or
add
pop
repnz
or
or
movhps
aaa
push
pop
cmp
mov
lods
jg
mov
data16
fsts
mov
scas
or
pop
inc
mov
adc
pop
jo
push
xor
or
add
inc
fisubs
inc
or
or
jne
bnd
enter
fsubr
test
xorb
ja
xor
or
adc
sbb
sub
and
bswap
sub
xchg
loopne
push
lret
add
xchg
lds
insb
mov
mov
cmp
or
insb
add
add
add
or
or
and
dec
ficoml
add
fwait
pushf
pop
mov
call
fcmovnb
icebp
imul
push
addr16
xor
pop
pop
sub
mov
xchg
add
mov
mov
add
scas
les
test
xlat
mov
mov
test
and
call
stc
add
dec
fcomp
add
xor
push
xchg
or
jne
out
inc
aam
mov
scas
sbb
mov
mov
call
jmp
jp
fsubs
sub
add
push
and
fildl
popa
dec
and
add
mov
adc
shl
mov
out
rolb
sbb
sub
inc
shll
jl
inc
push
push
rcrl
pop
movl
push
add
and
pushl
push
sar
cmp
pop
je
adc
add
inc
push
shll
aas
movsb
repnz
dec
lock
pusha
add
mov
add
adc
out
adc
jae
into
mov
cmp
dec
push
test
lahf
out
push
and
imul
cmp
xor
pop
xchg
push
clc
loop
test
rcrl
dec
insl
ja
subl
dec
sbb
add
divl
call
lcall
or
inc
xchg
fst
pop
xor
bound
mov
xchg
xchg
pop
push
push
mov
dec
stc
xor
out
mov
nop
mov
dec
mov
stos
pop
movsl
inc
mov
fisubrs
loopne
imul
jb
cmp
andl
movsb
loopne
test
cmp
inc
in
adc
cmpsl
inc
dec
inc
cmp
push
andl
or
aas
test
xchg
mov
pop
bound
and
add
popf
out
pop
bnd
mov
jmp
andl
add
sub
in
push
mov
pop
shll
movsb
ret
and
dec
les
in
dec
and
out
sub
inc
push
aam
inc
xor
xor
cmp
nop
dec
sub
aad
push
add
inc
ja
pop
cmp
dec
mov
addb
inc
movb
mov
shrl
and
sub
stc
insb
xchg
and
es
or
inc
dec
push
pop
fcom
xor
cmovs
js
inc
bound
and
and
shld
push
adc
loopne
orl
inc
ljmp
orl
xchg
push
pop
dec
inc
push
adc
std
sbb
dec
adc
lret
fidivl
adcl
test
lret
adc
xchg
mov
mov
add
mov
les
or
mov
inc
das
dec
inc
adc
repnz
aaa
or
xor
adc
cmp
xor
and
dec
mov
sbb
and
pop
ja
leave
and
fnstsw
in
mov
cmp
in
scas
test
dec
dec
scas
aam
fsubl
int
fsubl
cmp
lret
lea
push
push
push
gs
and
jnp
or
dec
mov
push
fcompl
pop
or
xchg
mov
and
xor
pop
dec
pusha
push
mov
mov
sbb
and
push
dec
fsubrs
iret
inc
mov
mov
inc
shl
pop
pop
xchg
sub
dec
cld
mov
dec
or
loope
jecxz
ffreep
or
daa
mov
mov
movsb
insb
pop
push
testl
scas
push
rorl
xor
ds
jmp
cmp
adcb
xchg
es
push
jne
push
pop
xor
sbb
loope
sub
inc
mov
or
mov
test
jmp
sub
rol
xor
movsl
inc
and
and
sub
sub
inc
into
lea
push
jns
pop
aad
popa
xor
sub
or
and
mov
das
mov
loop
icebp
add
lea
sub
loopne
and
pusha
mov
pop
inc
in
sub
mov
push
sub
add
js
sbb
xor
and
dec
cmpsl
fs
fisttpl
pop
sub
sub
jg
dec
mov
lds
pop
or
push
add
inc
jne
add
sub
pusha
fs
cmp
or
xor
xchg
lods
sbb
or
and
cwtl
adc
sbb
or
cltd
sbb
pop
mov
ljmp
jle
dec
dec
sarb
inc
cmp
je
pop
repnz
add
fdivrs
sbb
inc
out
popa
movsb
xchg
pop
jb
sbb
rcl
psrlq
jb
jb
aad
xlat
fdivs
jb
fcmovnu
jb
jb
fstp
ffreep
jb
jb
rol
les
jb
enter
jb
lret
daa
daa
daa
xchg
int
iret
mov
shlb
out
out
dec
rclb
adc
test
daa
cli
adc
mov
jmp
arpl
inc
outsl
or
inc
lahf
testb
in
push
nop
cwtl
in
mov
or
and
xchg
pop
mov
popa
add
movsb
fadd
inc
lahf
or
xor
mov
or
pop
sbb
xor
and
addr16
mov
or
pop
add
cmp
add
fsub
sbb
fs
ljmp
pop
push
fsubrs
mov
xor
and
adc
cmpsl
push
push
stos
xor
mov
xor
or
call
lock
jmp
mov
pop
cmc
jae
sbb
in
adc
fchs
sub
mov
xor
pop
ret
inc
sbb
or
mov
adc
and
cmovno
and
mov
pop
sub
push
stc
add
sbb
adc
cmp
jp
loopne
mov
dec
out
decl
or
icebp
pop
loopne
and
adc
popa
stos
mov
jbe
inc
xchg
adc
int3
xor
pop
mov
int
enter
dec
das
push
jmp
and
adc
push
or
jne
inc
lahf
ret
mov
in
in
stos
inc
in
jns
outsb
or
xchg
push
fs
outsb
leave
test
push
cltd
add
shlb
adc
enter
loop
popa
sub
sub
mov
mov
xlat
or
orb
xor
xor
fsubl
cmpsl
cltd
sub
std
pop
aas
and
jb
and
push
stos
scas
call
iret
jecxz
push
fsubrs
sub
and
adc
or
sbb
int3
das
adc
push
sbb
adc
add
les
xchg
sbb
clc
ud0
outsl
jne
push
movsl
dec
jae
nop
mov
in
xlat
insb
mov
inc
pushf
push
js
jne
shll
pop
jnp
ror
push
iret
loop
sub
clc
and
or
jge
dec
inc
flds
lcall
sub
sbb
daa
add
aas
cmpsb
add
adc
ret
in
repnz
adc
add
pop
out
dec
in
mov
and
cmpsl
jne
addl
push
leave
mov
outsb
xchg
shr
outsl
dec
mov
clc
push
ljmp
js
dec
sub
repnz
lock
jae
pop
push
xchg
lahf
mov
test
loope
sub
mov
and
xchg
nop
and
push
xchg
scas
adc
add
xor
call
and
push
in
sub
push
ret
vunpcklps
and
or
fisttps
adc
add
pop
mov
cmp
inc
and
mov
and
pop
aam
clc
insl
sar
xchg
jle
je
ss
dec
ror
out
xor
mov
lock
and
gs
roll
or
adc
das
xor
dec
fdivs
push
enter
cmpsl
frstor
lock
xor
mov
mov
mov
sub
jmp
pusha
or
and
fwait
pop
add
pop
push
cmp
lds
and
add
loop
jmp
cmp
xchg
xchg
push
in
adc
mov
dec
ret
or
hlt
pushf
push
pop
add
xor
andb
push
hlt
mov
inc
xor
dec
rolb
sub
dec
hlt
dec
push
sahf
or
aaa
or
pop
or
xchg
inc
insl
repz
mov
sub
sub
mov
stos
ds
add
shlb
sub
adc
sbbb
or
or
adc
mov
adcb
xchg
jle
pusha
push
and
dec
roll
popa
in
pusha
cwtl
test
sub
adc
test
mov
test
aaa
adc
xchg
sbb
aaa
inc
add
sub
add
xchg
push
jbe
sbb
nop
repz
sub
enter
arpl
sbb
repz
cmp
xor
mov
mov
adc
adc
cmc
push
xchg
pop
cmpsb
sbb
fdivrl
dec
add
into
adc
fucomi
popf
dec
or
xor
dec
inc
mov
les
loopne
xchg
add
cmp
inc
or
and
popa
and
jae
aad
and
loopne
fisubl
jb
or
jo
or
lret
sbb
push
cmpsl
shll
xchg
inc
push
lahf
jmp
mov
mov
fadds
fyl2x
pop
lock
jne
add
shlb
nop
bound
adc
push
cs
mov
sbb
rclb
dec
rolb
lods
xorb
xorb
dec
push
xor
inc
decb
push
xchg
and
iret
popa
int
cmc
faddl
add
and
mov
or
adc
or
test
or
add
jg
pusha
xor
jl
inc
repnz
add
add
inc
std
neg
call
inc
sbb
adc
add
clc
cwtl
push
add
loopne
out
xor
pop
shrb
rolb
mov
mov
inc
mov
int
int
sub
sub
inc
mov
ljmp
lock
add
sbb
xchg
jnp
inc
orb
add
les
dec
jmp
xor
sbb
sbb
lret
lahf
cmp
test
fdiv
mov
inc
and
fdiv
sti
sub
shrb
inc
imul
mov
fwait
xchg
xchg
xchg
push
push
mov
xchg
ja
orl
inc
ret
xchg
popa
or
add
addl
inc
leave
in
in
xchg
add
adc
mov
popf
cmp
loopne
add
pop
push
inc
cmp
and
jbe
aaa
nop
cmp
pushf
sti
inc
les
add
jns
dec
cli
push
and
mov
pop
nop
das
pop
cmp
dec
xor
mov
enter
push
dec
xlat
or
ss
adc
mov
xlat
inc
dec
mov
xchg
dec
in
push
shl
sub
ja
add
xchg
push
inc
sub
popf
dec
dec
inc
aam
mov
aaa
and
and
jo
jo
dec
rcl
aad
sbb
xor
divl
xor
in
xor
push
xor
out
or
cmp
gs
xor
pop
jno
or
sbb
shlb
lea
add
jns
popa
mov
inc
push
fs
pop
push
push
and
les
lock
push
imul
mov
sub
pop
or
mov
mov
negl
jne
and
stc
and
aad
xchg
sti
inc
lods
sub
movsb
in
clc
nop
je
loop
daa
xor
enter
jg
adc
pop
pusha
and
cld
and
sahf
mov
mov
fadd
pop
test
dec
pushf
mov
adc
shlb
in
pop
mov
icebp
push
sbb
nop
inc
std
mov
leave
inc
push
dec
outsb
bound
aaa
dec
xor
je
add
nop
mov
mov
mov
mov
pushf
push
adc
mov
and
outsl
jae
js
push
pop
and
adc
sbb
fmul
adc
dec
loopne,pn
sbb
call
andl
pop
and
xchg
insl
dec
decl
fiadds
das
dec
loopne
add
dec
jb
in
int
leave
mov
mov
sbb
and
addr16
inc
mov
adc
inc
mov
or
xchg
jo
jmp
jno
je
mov
jb
mov
or
out
push
push
dec
aas
dec
bound
inc
enter
add
inc
add
xchg
mov
pop
test
movsb
adc
adc
xchg
mov
add
addr16
inc
or
sbb
push
add
xor
pop
shlb
xchg
je
jb
or
xor
aam
and
mov
in
loope
cmp
cmp
inc
add
cltd
sbb
add
movsb
xlat
test
insb
and
sbb
dec
or
rcrl
xlat
adc
adc
cltd
adc
fidivl
in
ja
iret
jl
inc
xchg
stos
and
inc
cmpsb
mov
xlat
call
pop
inc
inc
push
imul
rorl
push
add
adc
rol
mov
outsl
inc
ror
mov
adc
popa
insb
outsl
sbb
xlat
or
sbb
push
add
imul
mov
cmp
jb
xchg
repnz
outsl
daa
add
add
inc
es
dec
add
and
ss
in
jmp
mov
xor
lea
data16
loop
sbb
out
out
lock
pop
adc
test
push
push
dec
dec
pop
mov
rclb
dec
sbb
stos
imul
enter
adc
and
mov
xor
xchg
or
shlb
test
xchg
push
jo
ret
loopne
xlat
mov
mov
and
scas
outsl
add
mov
add
push
or
add
xor
mov
lahf
jo
xor
xchg
icebp
es
pusha
or
dec
push
rorb
in
fs
fxch
or
nop
or
inc
push
and
insb
lahf
mov
push
clc
sbb
adc
rolb
push
sbb
imul
fimuls
mov
push
mov
cmpsl
jge
sub
hlt
data16
push
nop
sbb
push
inc
push
mov
insb
ss
and
push
push
and
je
outsb
adc
pop
push
test
jns
push
lock
xchg
and
xchg
xchg
nop
dec
pop
and
xchg
cwtl
mov
add
aad
xlat
sub
jg
lcall
jae
sbb
jo
imul
decl
inc
fisubs
cmp
inc
shlb
mov
and
outsl
xor
or
inc
mov
movsb
or
add
or
cmp
pusha
js
lahf
inc
or
loop
push
gs
push
les
sbb
lea
push
mov
sub
push
sbb
fists
add
aam
mov
dec
dec
push
cwtl
adc
sbb
enter
or
lret
les
jno
or
lea
test
in
in
sahf
fdivs
ss
loope
push
cmp
inc
scas
mov
xchg
push
jbe
jb
popf
mov
pushf
add
test
pop
fsts
shrl
ds
push
or
lock
scas
sbb
inc
mov
pop
xor
xchg
or
test
or
mov
sbb
movsb
inc
add
gs
pop
test
add
insl
pop
insb
push
jne
out
enter
mov
or
lods
pop
cmp
add
pop
out
inc
repz
js
adc
mov
mov
lea
popa
xor
arpl
addb
push
mov
jle
xlat
lea
push
je
pop
sbbb
enter
inc
sbb
jo
mov
pop
cmp
les
scas
xlat
xor
dec
fld
sbb
ficomps
das
movsb
cmp
aas
push
sub
stos
movb
xor
lcall
jno
rcr
add
mov
mov
push
xchg
adc
mov
sbb
jmp
xchg
sbb
test
mov
adc
add
scas
inc
pop
and
xor
adc
pop
inc
add
dec
dec
add
mov
push
add
daa
add
sub
shlb
add
in
in
inc
mov
or
loope
mov
aaa
jns
mov
ds
les
mull
aas
dec
rcrb
adc
insb
mov
iret
test
add
push
cltd
push
add
or
xchg
inc
adc
xchg
or
adc
dec
sbb
aam
mov
mov
dec
in
cwtl
daa
mov
repz
or
test
push
ljmp
js
lock
aaa
mov
repnz
cmp
push
mov
jo
pusha
enter
jo
inc
add
cmp
jg
dec
mov
or
ret
pop
xchg
shll
scas
jecxz
adc
mov
loope
shlb
or
jnp
imull
inc
inc
xorl
lret
into
add
cmp
pop
aam
mov
mov
jle
cmp
jle
inc
fadd
lret
jecxz
cmpsb
cmp
inc
pusha
mov
inc
jge
jle
dec
mov
aas
in
cmpb
out
pop
or
loope
lds
mov
pop
add
arpl
scas
and
dec
enter
sti
scas
call
push
loope
mov
lds
cmp
pop
inc
xchg
std
cmpsb
xchg
ret
jne
dec
jl
or
mov
shrb
imul
mov
mov
insb
lock
pop
mov
pop
aam
add
dec
sbb
scas
pusha
and
rorb
imull
andb
cmp
push
aaa
cmpb
jne
or
adc
dec
add
repnz
lods
add
push
clc
add
adc
push
sub
or
jl
jmp
mov
les
cmp
add
call
scas
add
add
sbb
pop
lcall
mov
das
mov
add
cmpl
adc
mov
xchg
cmp
dec
inc
add
mov
movsl
roll
cltd
pop
dec
loopne
or
and
mov
and
pop
pop
dec
xchg
and
shrb
add
jge
cwtl
orl
adc
jmp
sbb
imul
pop
add
adc
mov
clc
movsb
sub
lock
lods
inc
vsqrtsd
loopne
or
dec
xor
fcmovnbe
test
push
jns
bound
push
jecxz
or
and
push
jo
sub
in
or
je
mov
loopne
movl
inc
cmp
pop
mov
cmp
adc
sbb
loopne
sbbl
cmp
push
loop
dec
punpckhdq
filds
push
push
lods
repnz
inc
sbb
dec
loopne
fidivrs
les
mov
push
and
cmp
and
jg
sbb
call
into
jg
jmp
inc
jne
adc
pop
inc
mov
xchg
test
lds
jno
mov
das
inc
dec
movsl
inc
aad
pop
aad
mov
add
pand
jg
sbb
ds
ret
enter
insl
iret
loop
inc
mov
xchg
push
movl
test
aas
clc
inc
dec
inc
rcrl
mov
mov
mov
stc
rolb
adc
push
daa
loop
cmp
je
push
lret
cmp
aam
and
in
je,pn
xor
clc
sub
mov
loopne
aad
xor
mov
inc
add
mov
xchg
push
xor
cmp
or
adc
mov
mov
mov
cltd
loope
in
and
jb
add
add
adc
dec
xchg
mov
dec
lret
cmpsb
movsl
push
xchg
leave
cmpsb
jb
cltd
add
aaa
jmp
mov
dec
daa
dec
loopne
jne
loopne
loope
dec
subl
ret
fistps
pop
cltd
add
mov
fwait
pop
mov
insl
aam
test
int
add
mov
push
negb
and
jo
xchg
loopne
add
cmpsl
mov
out
repz
mov
add
jle
adc
in
sbb
in
imul
sbb
xorb
lcall
pop
and
je
mov
mov
xchg
inc
or
cmp
cli
rorb
mov
rcrl
pop
mov
jno
mov
lods
pusha
outsb
in
outsb
xchg
xchg
dec
loopne
lods
scas
mov
movsl
pop
or
rclb
jne
pop
jmp
sbb
add
jge
xor
dec
fcoml
es
mov
vpmullw
push
add
or
inc
or
jp
lea
rcrb
clc
bound
aas
iret
mov
sbb
or
mov
inc
fs
popa
jp
aad
scas
cld
sub
in
cli
insb
pop
sub
je
mov
cmp
cli
xor
or
jmp
and
rorl
pop
mov
push
mov
enter
push
fdivrs
addb
sbb
jecxz
sbb
sub
out
mov
andb
pop
movsl
rcr
pop
xchg
and
add
fucomip
xor
adc
xchg
inc
add
jl
pop
cwtl
lock
nop
sub
add
aaa
lods
add
jae
and
jge
push
mov
push
testb
aad
push
sub
adc
stos
roll
or
bnd
mov
in
call
inc
pop
inc
aaa
in
mov
inc
hlt
push
lods
xlat
addl
leave
cwtl
push
sti
inc
orl
adc
aas
or
ja
push
mov
enter
push
push
add
sub
and
sbb
enter
xchg
test
add
fwait
mov
push
mov
mov
jae
jle
movsb
sbb
sub
pop
sub
or
dec
cmpsl
or
sub
mov
aam
mov
or
push
addb
incb
add
and
or
insl
loopne
cmpl
cmp
add
pop
add
adc
add
and
cltd
mov
das
cmp
fbld
jle
mov
adc
mov
clc
mov
adc
xor
mov
xchg
mov
and
mov
push
neg
add
dec
sub
jmp
jmp
dec
cs
in
call
jbe
andl
or
jecxz
lock
rorl
or
pop
out
movsb
test
scas
jle
xor
js
lahf
inc
call
or
jns
jo
or
xlat
pop
je
scas
cmp
aam
mov
nop
sbb
and
test
xchg
sarl
dec
mov
push
daa
leave
push
and
leave
inc
and
xor
push
jle
mov
rcrb
popl
mov
movsb
sbb
incb
cmp
pop
bound
sbb
xchg
push
xchg
add
mov
mov
push
enter
and
sbb
xlat
jmp
mov
lock
pop
add
popa
mov
mov
push
sub
popl
sub
sub
push
inc
mov
out
adcb
and
into
adc
xchg
test
std
std
adc
xchg
or
sbb
add
jbe
jmp
xchg
inc
cmp
jnp
lea
addr16
movb
scas
pop
int
movl
adc
test
mov
fstpt
mov
out
daa
movsb
fsubrl
ret
pop
sarb
adc
xlat
pushf
mov
push
lcall
es
es
sbb
push
jl
adc
pop
and
mov
fwait
and
and
enter
divb
pop
push
inc
push
add
fstp
fwait
lods
push
in
pop
add
push
mov
scas
sub
and
enter
sub
lret
lahf
sub
sub
shrl
sub
jl
fdivrs
xor
mov
js
outsb
jl
pop
ret
testl
pop
cmp
adc
mov
test
sbb
movl
and
and
mov
xchg
pop
in
sbbb
push
cwtl
cwtl
adc
ret
add
rolb
or
cmp
jo
cmp
roll
add
mov
pop
addl
push
pop
and
mov
inc
pop
push
int
dec
push
arpl
and
mov
mov
test
inc
scas
pop
pop
leave
push
into
or
push
cmp
loopne
repnz
popf
scas
inc
dec
inc
pop
pop
cld
mov
mov
test
mov
cltd
fistps
and
sub
or
mov
subb
movsl
sbb
insl
jge
loop
fwait
lahf
mov
movb
push
adc
lock
sbb
and
repnz
push
nop
mov
es
and
sub
xor
dec
scas
mov
js
into
sub
pop
and
mov
enter
add
xor
jl
popf
mov
enter
inc
aaa
xchg
cmp
fs
test
ret
pop
xor
add
sahf
jbe
das
push
or
push
mov
or
inc
inc
daa
pop
fiadds
or
xor
sub
sub
idivl
out
call
mov
pop
inc
ret
pop
cmp
add
movsb
jo
xor
aas
fistl
dec
inc
ficoml
adc
push
fsubs
movsl
ucomiss
push
rclb
or
sbb
xor
or
shlb
pop
add
xchg
and
pusha
das
mov
scas
fwait
lock
int3
xorl
mov
subl
mov
aas
push
imul
in
cli
mov
sub
add
inc
in
lods
add
sub
in
lods
xor
in
and
enter
addb
sub
mov
or
je
dec
or
inc
imul
sbb
pop
xor
fimull
lock
pop
pusha
subl
sub
cmp
shll
cmp
or
or
mov
add
lcall
push
cltd
add
cld
mov
adc
enter
pop
and
push
mov
jp
adc
jg
ds
and
pop
pop
push
inc
lods
push
adc
adc
jp
add
xchg
into
pop
mov
xor
pop
sub
lds
das
push
cmp
bound
je
test
xchg
and
add
aad
orb
nop
ret
movsl
lret
movsl
test
pop
add
xor
mov
xchg
stos
mov
out
lock
mov
inc
and
pop
movsb
mov
nop
icebp
cltd
pop
repnz
jnp
pop
adc
xchg
adc
lcall
lods
push
push
xchg
mov
imul
push
int3
cmp
or
jl
shrl
nop
mov
je
leave
insl
in
pop
add
iret
leave
leave
rcl
adc
mov
jmp
int
push
push
pop
aas
pop
xor
mov
lea
or
or
lahf
xor
sbb
xchg
or
sbb
jl
je
xor
pop
shlb
adc
mov
lcall
sub
pop
inc
mov
lods
loop
ss
dec
add
inc
xchg
nop
out
jnp,pn
mov
cmp
cwtl
or
and
and
rorb
test
cmp
or
stos
insb
jmp
arpl
or
or
aam
rol
adc
sbb
add
dec
pop
fs
js
xor
fnstcw
inc
ds
dec
call
pushf
xchg
fsubs
inc
data16
movsl
aas
pop
test
movl
arpl
and
dec
dec
mov
mov
pusha
xchg
dec
or
test
jae
mov
mov
enter
leave
xor
aam
sub
or
movsl
and
and
inc
pop
cli
fcompl
dec
orb
jns
jl
pop
push
add
cmp
mov
sbb
sub
push
shlb
rorb
sub
lea
fcomps
cmp
ja
nop
dec
lea
xchg
inc
mov
mov
sbb
stc
jnp
rcll
add
lods
mov
push
in
add
pop
lock
hlt
stos
in
mov
insb
jl
sbbb
inc
shrb
xor
jge
xchg
adc
lock
dec
ret
sub
lea
insl
cmpsl
fwait
sbb
cmp
mov
rorl
jo
push
push
movsl
mov
push
cmpsl
pop
movsb
xchg
jnp
lahf
stc
movsl
aas
rcrb
sti
pop
mov
cmp
movsb
jl
shlb
nop
test
shll
out
decb
out
mov
mov
mov
adc
fdivrs
jp
test
mov
sub
xchg
sub
mov
dec
add
and
mov
out
sbb
push
lock
int
inc
pop
aas
push
aas
pop
push
fs
mov
leave
fbstp
cmp
add
push
nop
cli
ss
addr16
outsl
inc
cmpsb
fs
call
inc
xchg
hlt
sysret
dec
lock
cmp
js
or
pop
adc
fstpl
xlat
je
iret
xchg
leave
shll
mov
xor
xchg
mov
xchg
in
pop
pop
dec
loopne
in
in
sub
xchg
nop
in
movsb
pop
cmp
mulb
pop
std
loopne
cmp
xchg
and
mov
mov
sbb
and
jle
push
cmp
dec
push
pop
adc
subl
es
movsl
cmp
nop
and
adc
cmp
push
inc
or
rol
mov
sarl
fstpl
int
cwtl
jecxz
aam
fsts
je
dec
andb
stos
ss
ret
dec
mov
and
mov
stos
sbb
add
add
lret
xor
xor
add
xlat
add
cmp
jmp
push
jne
sub
arpl
shrl
pop
imul
add
imul
lea
add
into
ja
inc
or
or
dec
je
rcll
push
dec
jne
and
pop
fwait
jmp
and
mov
xor
dec
push
sbb
push
pop
add
out
inc
adc
sbb
cltd
push
and
pop
movsb
add
mov
addl
shlb
in
cmp
add
jne
sub
or
xchg
insb
add
mov
pusha
shl
fxch
pop
sub
mov
mov
out
or
mov
sub
jl
fwait
push
add
subl
xor
or
sub
inc
jmp
push
dec
mov
mov
and
pusha
sub
mov
dec
jmp
xchg
inc
or
and
cmp
rol
push
xchg
fistpll
sbb
jno
hlt
pop
rclb
ret
xor
mov
pmulhw
test
or
inc
inc
lock
movsl
fistps
pop
or
mov
jmp
mov
inc
out
mov
push
mov
jg
push
xchg
mov
fisubrl
subb
mov
pop
inc
or
out
es
shll
das
dec
mov
mov
fsubs
aas
mov
dec
sub
xchg
add
add
mov
dec
lret
inc
data16
adc
or
or
mov
xchg
jl
inc
inc
jle
nop
scas
inc
mov
inc
inc
dec
xchg
cmpsb
dec
testb
pop
ss
dec
sub
lret
dec
or
add
or
movsl
sub
push
mov
cmp
nop
push
bound
test
add
pop
add
cmp
and
ret
insb
inc
push
dec
push
jb
add
add
inc
inc
adc
in
and
popf
xor
inc
call
incl
int3
inc
inc
or
and
xor
add
and
xor
cmove
scas
pop
ss
and
in
inc
inc
push
scas
and
movsb
pushf
or
sbb
mov
in
popf
mov
push
inc
cmp
inc
imul
fcoms
ss
rcll
es
inc
sahf
rolb
mov
and
pop
adc
cmc
add
push
xor
inc
inc
in
adc
dec
jecxz
inc
inc
mov
inc
or
jns
and
and
inc
cmp
and
xchg
jns
jns
dec
inc
dec
push
jnp
jae
push
mov
out
sub
add
jbe
cmp
xchg
in
or
sysenter
or
inc
and
mov
fstps
mov
int3
or
lods
add
icebp
sbb
xchg
and
jae
push
fisubs
in
cmpsb
add
mov
xchg
jae
mov
mov
repnz
xchg
inc
in
jns
add
dec
scas
repnz
cwtl
pop
inc
push
clc
mov
push
pusha
call
arpl
roll
pusha
iret
roll
loope
mov
mov
add
or
adc
lods
les
push
pop
jb
movsb
push
dec
mov
shlb
mov
or
or
lcall
cmp
xchg
notb
lods
pop
test
popa
or
or
mov
fs
add
or
push
jo
test
xchg
rorl
cmpb
pop
sbb
jns
test
adc
pop
sbb
in
mov
cmpsb
xor
call
out
dec
movb
inc
push
clc
dec
sub
sub
inc
mov
push
sub
mov
sub
insl
sub
pop
pop
adc
or
test
ret
push
sub
dec
cmpb
adc
or
adc
and
or
mov
dec
inc
pop
rolb
adc
nop
sub
subb
xchg
add
sbb
nop
xchg
add
nop
sub
enter
or
jge
pop
xchg
xchg
inc
lods
arpl
fwait
nop
inc
sbb
xchg
mov
fcomi
imul
push
outsb
mov
inc
xor
out
dec
mov
push
mov
enter
fcmovnb
dec
mov
sub
xchg
add
cmp
fsub
dec
xor
or
dec
enter
push
xor
test
add
mov
sbbl
dec
dec
inc
cmp
push
push
pop
lret
cmp
cmc
aaa
inc
push
push
xchg
add
lcall
and
sub
dec
jmp
data16
push
clc
in
jp
test
jmp
out
pop
les
in
inc
inc
pusha
pmulhuw
and
mov
jns
inc
in
repnz
popa
lea
in
mov
push
test
xchg
xchg
xor
and
add
pop
aaa
sbbb
add
shlb
sub
jne
loope
mov
sbb
imul
aaa
adc
sbb
or
xor
mov
xlat
sbbb
adc
pop
nop
fs
xchg
out
or
dec
sahf
ret
dec
out
dec
cld
add
shlb
mov
or
inc
sarl
roll
mov
orb
xor
add
lock
xor
nop
push
sbb
inc
loope
loopne
adc
sbb
ja
jbe
rcr
pop
mov
dec
ret
add
int
aam
adcb
mov
pop
xchg
in
inc
and
pop
in
mov
push
adc
sub
jecxz
push
addr16
sbb
test
idivl
inc
push
push
clc
or
mov
push
inc
loopne
inc
pop
rclb
lock
cmp
or
popl
adcb
sub
out
jg
pop
lea
xor
popa
movsl
add
inc
nop
push
sub
int
call
shlb
add
cmpsb
lea
ja
mov
add
scas
lea
xchg
and
xchg
ret
mov
push
fdivp
sahf
xchg
push
mov
push
push
sbbb
jns
xchg
cmpsb
inc
xlat
add
shlb
mov
mov
rclb
mov
and
and
loopne
leave
out
paddusb
pop
ss
sbbl
fsubs
inc
aam
cld
aam
or
test
mov
or
leave
test
int3
adc
stos
aaa
xor
or
sub
je
cmp
imul
adc
shlb
pop
bound
movsl
jo
inc
rorl
push
and
sti
mov
stos
add
and
or
or
and
or
iret
outsl
inc
mov
dec
pop
push
das
shufps
fcoms
push
psubsw
cmpb
cmp
inc
pop
mov
or
nop
inc
cmp
dec
add
mov
dec
test
out
ret
jne
dec
scas
loop
hlt
hlt
push
nop
dec
push
lock
mov
nop
dec
in
call
sbb
sub
nop
or
push
add
arpl
adc
loopne
rclb
loopne
fs
pop
add
faddl
and
xor
fadds
aam
in
test
push
sbb
mov
inc
mov
enter
dec
jae
add
mov
enter
sarb
or
and
dec
adc
add
sub
mov
add
push
pop
sarb
inc
scas
lea
cwtl
rcll
rorb
jmp
xchg
push
fmull
cmp
xor
sub
sbb
xchg
push
sub
mov
scas
jcxz
cmc
movb
mov
int3
nop
loopne
xchg
or
lret
add
push
adc
ret
pop
mov
add
out
add
mov
mov
sti
mov
jmp
aaa
nop
les
lds
lahf
pushl
mov
jne
adc
pop
aad
addl
or
mov
add
sub
in
sub
dec
sub
mov
es
nop
jnp
je
ss
cwtl
lea
call
xor
fdivrl
addl
mov
sbb
add
inc
loopne
mov
fwait
not
je
movsb
cli
mov
popl
jecxz
pop
sahf
fadds
adc
lea
inc
add
mov
jae
adc
cmp
in
loopne
xor
stc
call
dec
xor
mov
repnz
call
or
in
in
daa
rcl
je
loopne
jl
nop
sbb
add
popf
jle
xlat
sbb
lock
les
sbb
imul
or
sbb
cmp
adc
mov
popa
lock
xchg
inc
cmpsb
or
and
pop
xchg
lock
push
add
push
stc
push
jecxz
call
sbb
out
imul
xchg
mov
mov
test
and
xchg
pop
push
dec
pop
outsl
jnp
repz
mov
push
mov
pop
imul
push
loopne
mov
fsubrl
mov
push
in
dec
fsubrs
mov
aam
aam
mov
shrb
mov
int3
imul
mov
add
mov
mov
test
push
and
xor
cmp
mov
mov
cmp
scas
aad
sub
dec
mov
hlt
rorl
push
les
rorl
add
inc
lcall
dec
and
add
mov
and
lea
mov
stos
dec
daa
add
dec
mov
adc
loop
movsb
sbb
jmp
or
xchg
adcl
test
and
xchg
sbb
add
imul
leave
inc
lds
adc
enter
mov
lock
arpl
mov
adc
jg
cwtl
or
inc
loopne
push
sub
dec
mov
mov
lcall
ret
cmpsl
stos
inc
pop
cwtl
mov
or
mov
aas
sarl
lods
mov
rorl
sarl
add
adc
add
lcall
xchg
gs
dec
fs
mov
out
or
push
push
sub
popf
push
in
xchg
sub
push
je
mov
push
pop
in
mov
or
je
mov
push
pop
in
mov
or
je
mov
mov
fcomp
add
sbb
mov
push
test
or
xor
adc
in
and
or
leave
adc
enter
and
add
les
add
rcl
jle
inc
mov
pop
inc
les
push
movsb
imul
add
mov
mov
test
icebp
and
fldenv
push
ret
jmp
pop
add
or
pop
imul
cltd
inc
xor
add
pop
adc
movsb
aas
lcall
mov
jl
push
in
push
or
sub
lcall
insl
dec
or
addr16
inc
nop
sub
in
imul
or
mov
cmpl
adc
adcb
sbb
or
jbe
and
pop
xchg
jne
jo
nop
repnz
xor
cmp
addr16
cmp
fs
shlb
mov
xchg
mov
or
in
outsl
dec
shrl
movsb
dec
movsb
dec
clc
insb
xchg
push
dec
mov
and
add
pop
movsb
aaa
js
dec
jp
pop
jmp
inc
jns
leave
add
movsl
lock
dec
xor
inc
inc
aaa
and
shr
in
adc
jo
outsb
push
sub
sahf
out
push
jbe
ret
cmp
jno
or
push
push
pop
outsb
jmp
call
xor
add
dec
loopne
xchg
pop
and
jbe
and
mov
fmuls
xor
rcrb
pop
ror
int3
sbb
xor
inc
adc
aad
in
and
cmp
cmp
in
enter
or
in
adcb
adc
xor
cmp
rolb
pop
or
adc
sub
shlb
les
jmp
push
cs
mov
xchg
jo
and
or
xchg
and
arpl
cmp
pop
pop
adc
inc
hlt
nop
and
sub
jmp
cmp
aas
or
xor
rolb
pop
pop
cmp
in
push
dec
leave
jo
in
or
mov
and
sub
add
in
jg
jno
rclb
fs
sahf
enter
mov
jl
rcr
fwait
icebp
arpl
mov
inc
ror
movl
cmpsl
notb
fcomps
push
push
jb
subl
fcoml
mov
leave
mov
push
repnz
pop
insb
and
data16
test
jbe
aas
cmp
add
xor
rolb
ret
add
or
dec
pop
pop
add
lea
mov
or
push
adc
mov
daa
sti
ja
adc
adc
arpl
mov
lahf
dec
in
mov
pop
in
je
pop
popa
adc
mov
out
xor
popa
jbe
or
mov
adcl
or
jo
push
push
daa
sbb
xlat
or
xor
adc
or
push
sbb
mov
mov
adc
dec
jle
mov
and
inc
das
fidivl
rorb
mov
aad
or
xchg
aaa
add
lock
enter
and
or
jb
out
jns
ret
inc
cmp
or
sarb
outsl
das
in
mov
leave
jne
and
or
dec
adc
leave
and
in
jo
add
xorl
call
repnz
pop
and
out
and
or
and
and
jmp
pusha
mov
dec
in
inc
add
xor
fisubl
arpl
mov
clc
mov
loopne
aad
in
xor
xor
mov
mov
push
test
aaa
loope
loopne
cwtl
mov
lock
jno
push
mov
add
subb
mov
jae
ret
xlat
push
hlt
inc
ret
mov
les
push
adc
add
xor
push
fwait
imul
push
rolb
loop
lods
int3
push
xchg
push
xchg
pop
popa
adc
lahf
pusha
lock
xchg
xchg
cmp
or
jbe
mov
or
mov
add
faddl
xorl
pop
pop
fs
inc
inc
add
out
movsb
loopne
bnd
hlt
jecxz
add
add
mov
add
jg
dec
data16
dec
jnp
add
cmp
cmp
or
js
pop
push
sbb
pusha
jge
in
repnz
or
push
and
adc
xor
cmp
push
enter
jle
cmpb
test
clc
pusha
mov
divl
mov
rorb
mov
sahf
mov
push
jmp
pop
xor
adc
adc
incl
nop
pop
jb
cmpsl
or
inc
lea
repz
or
adc
adc
into
in
lods
test
dec
imul
pop
cmc
imul
in
push
fcoms
mov
call
add
pop
push
sub
pop
insb
and
dec
popa
insb
addl
adc
xchg
lods
inc
mov
mov
sbb
xor
or
push
add
loopne
aas
cmpsl
nop
xor
sbb
pusha
dec
add
mov
add
sbb
xchg
aam
fdivrs
adc
or
mov
test
inc
mov
sti
add
pop
push
outsl
mov
rorb
adc
adc
pop
inc
test
jg
or
aaa
rol
es
push
sub
stos
sbb
adc
add
sbb
or
mov
repnz
xchg
add
lock
dec
dec
cs
clc
inc
mov
jle
out
out
or
cmp
add
pushl
push
push
loop
add
or
xchg
rolb
mov
pop
std
sub
loope
push
jne
or
ffree
outsl
popa
add
shl
mov
dec
dec
aam
das
add
rcrb
adc
in
or
mov
mov
rcll
or
sti
mov
sbbl
cld
in
sbb
dec
inc
insl
pop
adc
jo
add
add
pop
pusha
add
imul
dec
sbb
hlt
hlt
mov
cmp
mov
push
fdivrl
or
mov
push
shrb
add
fmuls
ss
push
sbb
outsb
rol
or
lcall
add
cltd
dec
xor
push
push
ret
aas
xor
movsb
push
mov
jns
lea
je
jmp
loop
and
sbb
in
or
mov
hlt
fnstsw
lea
or
push
jge
adc
enter
mov
iret
movsl
sub
fwait
and
insl
nop
pop
mov
jmp
popa
sbb
add
shr
pop
add
xor
sbb
notb
xchg
pop
or
nop
xchg
mov
mov
xchg
mov
mov
and
xor
push
sub
or
sub
xchg
mov
loopne
cmpsl
add
add
and
adc
add
dec
addr16
addr16
pop
adc
adc
jp
mov
addl
sub
xor
inc
push
xchg
mov
insb
bound
adc
imul
pop
cmp
xor
jns
adc
push
scas
push
rcl
popa
adc
add
out
add
pop
ret
dec
inc
mov
mov
dec
mov
dec
pop
add
xchg
mov
ret
mov
rolb
mov
mov
rclb
jbe
add
mov
loope
addb
sub
arpl
inc
add
mov
sbb
inc
cld
or
loopne
sub
test
jge
scas
add
push
sub
adc
loop
cmc
xor
popf
stc
inc
cmp
jge
stos
mov
push
jo
cmp
jno
ficompl
push
pusha
add
jns
jp
add
add
jl
mov
dec
pusha
pop
inc
inc
aas
dec
adc
test
dec
nop
lock
sbb
add
lods
or
xor
mov
xlat
ja
add
xor
aaa
lock
cwtl
add
lock
repnz
test
loopne
test
xchg
in
pushf
push
cmp
lcall
in
lds
imulb
mov
and
and
mov
ret
repz
rolb
mov
fwait
add
in
jmp
dec
xchg
xchg
cmp
mov
cwtl
add
movsb
adc
push
pop
insl
outsl
jne
ds
ljmp
enter
and
cmp
rolb
lret
aam
mov
pusha
test
add
shll
cmc
imul
sbb
lret
stos
or
pop
add
pop
mov
jbe
mov
and
mov
sub
mov
aam
push
push
mov
je
pop
jmp
mov
and
leave
push
mov
pop
sbb
pop
dec
mov
xorb
pop
pushf
bnd
xchg
xor
pop
inc
sub
negl
and
gs
mov
std
subl
dec
or
lods
mov
xchg
push
into
sbb
push
negb
shlb
or
shlb
cld
adc
rorl
orl
aam
mul
je
jl
adc
push
xchg
sahf
inc
push
sbb
sbb
inc
pop
push
ljmp
add
addl
addl
into
push
jb
dec
add
scas
jo
pop
nop
xchg
adc
dec
sub
aaa
rclb
push
adc
pop
rolb
adcl
xor
and
add
data16
rcr
out
add
out
pop
add
lea
outsl
mov
movsb
addl
syscall
jb
or
imul
mov
lock
jle
cmp
inc
mov
dec
and
int3
push
and
xchg
push
ret
or
or
xor
shrl
xor
and
cmp
or
cwtl
cld
lret
ss
mov
les
jbe
daa
mov
and
push
xorl
dec
sahf
mov
fwait
push
push
int
jo
cmpb
adc
add
fimuls
cmp
xor
jge
adc
imul
hlt
ss
pusha
call
push
sub
ret
nop
cmp
mov
test
add
inc
sub
out
addb
push
outsb
loopne
mov
push
inc
push
jb
loopne
and
cli
sbb
cmp
push
ss
pop
movsb
lret
inc
inc
mov
stos
add
jbe
mov
loop
adc
and
inc
xchg
or
pop
pop
mov
jl
and
movsl
mov
lods
mov
sbb
insb
or
iret
les
jl
addr16
add
xchg
sbb
or
sub
or
imul
pop
xor
data16
cmp
xor
xchg
cmpsl
cs
popf
adc
sub
ret
and
push
frstor
cmc
lock
clc
insl
bound
sbb
xorb
jno
pusha
or
fwait
pop
flds
xor
push
sbb
cmp
push
xchg
mov
sbb
and
sbb
mov
sbb
pusha
xchg
es
jecxz
js
pop
sub
xchg
mov
fimull
loopne
adc
sub
pop
int
cmc
imul
push
inc
xor
jmp
mov
pop
aas
push
inc
inc
aas
xchg
dec
gs
lcall
popl
sbb
sub
pushf
push
mov
mov
xchg
es
xchg
imul
push
add
ds
int
test
pop
fsts
sbb
inc
nop
inc
adc
movsb
pusha
aam
cmp
mov
inc
push
xor
xor
call
ror
or
enter
insb
arpl
nop
dec
clc
xchg
push
out
ja
pop
xor
adc
lods
dec
cmpb
mov
sub
mov
fs
fsubp
dec
sbb
mov
xchg
and
mov
add
in
xchg
sahf
adc
and
inc
pop
fcoms
dec
stos
adc
mov
testl
push
xchg
subl
adc
inc
aas
dec
lret
jmp
pop
hlt
loop
jb
cld
cld
or
test
and
or
inc
or
adc
imul
add
inc
push
cmp
or
jno
mov
or
cmpsb
jne
je
sub
lods
pop
daa
mov
mov
gs
inc
xchg
and
shlb
xchg
xor
fisubrs
ret
inc
pop
test
ret
pop
sbb
mov
scas
popa
and
cmp
addb
jl
clc
dec
xchg
xchg
hlt
xor
imull
and
pop
sub
mov
scas
adc
or
shl
imul
bnd
and
fiaddl
pop
std
je
inc
sub
cmpsb
adc
jo
sub
adc
xchg
inc
dec
sbb
adc
shrl
xor
lods
mov
sub
mov
cwtl
into
adc
xchg
jle
mov
and
jmp
fsubl
add
cs
pusha
push
push
leave
leave
notl
mov
leave
leave
leave
leave
mov
mov
std
or
mov
sub
add
add
pop
sar
mov
cs
xor
cmp
jae
sub
mov
sbb
xor
mov
jg
push
dec
pop
ss
cs
jbe
xor
xor
insl
push
das
loope
or
or
daa
cmpsl
jge
test
push
inc
dec
xor
aaa
jg
jo
jno
jp
xchg
in
push
adc
lahf
bndldx
movsl
push
inc
adc
push
xor
xor
or
ss
dec
pop
cmp
pxor
out
jb
data16
push
dec
dec
out
in
add
push
dec
inc
dec
push
or
pop
or
mov
xor
dec
call
xor
les
movsb
or
prefetch
pop
xor
xor
lahf
xor
xlat
pop
ret
dec
dec
inc
inc
addr16
out
imul
xor
dec
rclb
outsl
insl
inc
jno
dec
inc
push
jb
inc
inc
xchg
cmp
daa
xchg
add
jnp
ja
hlt
inc
inc
xchg
xchg
sarb
jg
fs
ds
inc
inc
dec
dec
cmp
pushl
cmpsb
mov
push
or
adc
and
cmp
fdivrs
pop
inc
mov
push
imul
repnz
push
inc
sub
add
add
andb
xor
mov
or
add
enter
xor
inc
leave
or
and
sbb
call
dec
push
pop
inc
pop
xor
addr16
insl
sarl
xor
push
das
or
add
imul
enter
filds
gs
dec
dec
int
or
xor
daa
iret
and
fisubl
pop
inc
push
inc
pop
mov
jbe
bound
fmuls
pop
or
push
push
xchg
daa
cmovnp
adc
mov
cmp
push
lahf
xlat
push
xor
aaa
cmpsl
xor
cltd
inc
pop
imul
outsb
popa
add
rolb
fsubrp
aaa
addr16
popf
and
jp
outsl
xchg
in
and
xlat
cmp
sbbb
dec
push
mov
dec
dec
push
xor
push
add
stc
jbe
xchg
push
ss
aaa
ss
or
mov
xor
aaa
push
stc
mov
push
jo
outsb
or
xor
imul
outsb
inc
jnp
mov
jno
inc
cmp
dec
pop
xchg
negb
push
add
xchg
xchg
cmp
cmp
insb
ljmp
mov
xor
cmp
xor
fs
jnp
jp
inc
ffreep
bound
mov
or
add
xor
add
outsl
dec
add
mov
inc
pop
pop
lock
sub
xor
and
fdivrs
inc
cs
aaa
js
ret
or
xor
jb
xchg
aaa
push
inc
jns
or
xchg
jl
sub
ss
cmp
cs
add
arpl
push
js
or
aad
push
fs
xchg
mov
mov
pop
mov
add
xchg
cmp
mov
push
lds
jns
outsl
push
sub
push
pushf
repnz
outsl
xor
fcomps
mov
xor
and
mov
lods
loop
pop
loopne
fisubs
arpl
cmp
xor
aas
pop
xor
rcl
out
jnp
inc
pop
jp
sub
inc
repnz
pop
arpl
dec
in
jmp
bound
xor
inc
push
mov
cmp
cwtd
inc
mov
cmp
iret
cmpsb
push
add
pop
mov
inc
pop
add
outsb
outsl
add
pop
dec
and
call
cltd
dec
push
aas
adc
dec
push
inc
rcr
xor
pop
ret
push
inc
xor
ja
pop
dec
sbb
xor
xor
adc
imul
or
xchg
push
inc
push
data16
mov
cmp
push
or
iret
fisubrl
sub
pop
insb
xchg
aaa
out
mov
and
push
bound
incl
xor
cs
dec
push
fidivl
push
dec
pushl
lahf
cs
xor
sbb
dec
pushl
and
xchg
aaa
cmp
andb
lock
push
push
push
jl
dec
jne
addr16
jb
das
xchg
or
cmp
aaa
pop
add
cmp
daa
ja
nop
dec
js
aaa
cmp
lahf
push
popa
test
pop
cmp
cmp
iret
or
sbb
mov
cmp
xor
mov
shlb
aaa
addr16
cmp
call
pop
mov
pop
adc
rcll
pop
xor
lods
jg
sub
sub
daa
mov
ficomps
xchg
xchg
xchg
aas
jno
sbbb
fs
dec
inc
push
sub
pop
inc
cmpsb
xor
aas
notl
pusha
or
fs
mov
or
or
push
push
xlat
mov
mov
push
mov
in
or
and
pop
xor
ss
dec
iret
xor
inc
push
sbb
xor
inc
cmpsl
enter
movsb
xlat
ss
pop
inc
movl
jo
dec
int
xor
xchg
cmp
xchg
jl
scas
xor
bound
xchg
adc
xor
movsl
std
push
xor
inc
push
inc
pop
push
xor
mov
out
push
push
dec
push
push
outsl
inc
or
jb
fiadds
xor
adc
aaa
pushl
jg
notl
xor
inc
push
cmp
cmp
sbb
leave
push
lock
addl
xor
xor
pop
jb
xor
pop
or
or
cs
andb
push
push
and
jg
mov
push
cmp
add
xor
jnp
mov
xor
pop
jb
push
cmp
xor
xor
adc
xchg
dec
xor
xor
xor
outsl
lods
in
inc
outsl
inc
inc
push
sbb
leave
dec
inc
fbstp
mov
sbb
xor
lahf
jl
adc
xor
xor
or
mov
out
popa
aaa
jo
sbb
bound
mov
push
inc
andb
fildl
nop
xor
daa
divl
inc
mov
xor
xor
adc
fstpl
shlb
and
xor
cmpsb
stos
jae
inc
ss
leave
or
xor
jg
push
inc
jno
mov
sub
call
cmp
push
dec
adc
xor
sub
mov
pop
out
fs
ss
xchg
sbb
nop
dec
dec
pop
aaa
dec
cs
sub
ss
dec
dec
push
pop
cmp
cmp
daa
add
jmp
pop
cmp
push
or
movsl
rcll
mov
sub
pop
aam
xlat
push
and
pop
cmp
xor
enter
cmp
push
ja
push
insb
add
idivl
and
cmp
enter
cmp
sub
lahf
testl
mov
xor
and
call
mov
fisttps
push
pop
dec
cs
xor
xor
pop
mov
jmp
push
pop
jns
out
and
mov
xlat
xchg
push
cmp
in
out
and
pop
xor
push
lods
dec
lods
and
pop
push
pop
mov
pop
push
xor
pop
sub
out
and
xor
xor
daa
xor
xor
pop
jge
adc
fadds
push
push
pop
adc
mov
shrl
sub
popa
arpl
sbb
and
xlat
aaa
outsl
cmp
pop
ja
xor
cmp
cmp
xor
sbb
je,pt
pop
mov
lods
push
daa
ja
incb
xchg
int3
daa
adc
inc
inc
dec
push
push
ret
sbb
add
lods
add
or
cmp
add
jne
push
test
push
jbe
xlat
fisubs
inc
jg
rorb
xor
in
aam
pop
inc
pop
xchg
fwait
in
cld
xor
ss
aaa
mov
mov
das
sub
push
xor
cmp
sbb
xor
and
xchg
xchg
dec
xor
pop
inc
jne
lea
xor
mov
fadds
bound
scas
xlat
mov
mov
pop
ss
repnz
or
lahf
inc
and
arpl
scas
fisttps
daa
lea
push
add
scas
ss
aad
jo
sbb
sbb
outsb
mov
and
mov
ljmp
divl
fldenv
xchg
in
inc
push
mov
push
pop
sbb
pop
dec
lahf
and
inc
daa
out
sub
jmp
dec
inc
divb
out
enter
sub
pusha
aas
cmp
mov
ss
xchg
mov
dec
popa
insb
popw
dec
add
fmuls
js
or
push
cwtl
cmovnp
test
push
cmp
fiadds
push
xlat
lock
xor
push
xor
inc
mov
sub
arpl
add
das
push
push
dec
adc
aas
movsb
add
and
jb
jecxz
xlat
ds
push
push
aas
or
jecxz
mov
push
test
xor
xchg
xlat
or
fs
enter
sub
popa
es
nop
adc
outsb
insb
inc
xor
pop
add
daa
inc
nop
mov
mov
loopne
dec
pushf
dec
dec
push
dec
cmp
cmp
aaa
xor
cmp
test
addr16
xor
push
mov
or
dec
cmpsb
bound
movsl
in
pop
xchg
dec
cmpsb
jbe
xor
fs
cmp
pop
push
cmpsl
aaa
sub
andb
lahf
cmp
imul
inc
push
leave
cmp
xor
xchg
imul
xor
or
add
inc
xor
add
test
xor
sbb
ror
gs
xor
xchg
pop
enter
bound
pusha
and
sahf
push
leave
mov
aaa
in
roll
and
xchg
pmulhuw
xchg
or
in
pop
push
xchg
xor
pop
dec
push
or
addr16
add
xor
and
repnz
cs
sbb
sbb
push
mov
rcrl
or
xor
cmpsb
aaa
nop
pop
xor
dec
and
imul
test
mov
and
insb
je
in
popa
movsb
cmp
sbb
sbb
push
cltd
test
inc
jne
xor
sbb
xor
jg
and
xor
es
jb
push
cmp
cltd
xor
mov
xor
inc
jb
aaa
aaa
sbb
les
ss
sbb
xor
loop
add
imul
lahf
lahf
sbb
nop
or
adc
pop
popl
xor
mov
dec
xchg
xor
adc
cltd
or
xchg
pop
mov
jg
and
jb
ss
and
jb
ss
or
xor
sbb
mov
cmp
mov
cltd
cmp
lahf
shll
push
cmp
xchg
add
in
aaa
outsl
arpl
sbb
sub
test
orb
jb
xor
inc
rorl
cmp
and
and
cmovl
test
enter
decl
enter
cmp
xor
shrl
mov
and
xor
mov
sbb
inc
test
ficomps
out
dec
cmpsb
and
ficoms
xor
inc
cmp
sbb
xor
push
xchg
pop
adc
fisttpl
sahf
pop
les
xor
outsl
push
cmp
xor
jmp
sub
adc
mov
pop
inc
mov
mov
cs
jns
xchg
xor
push
pop
pop
xor
pop
inc
dec
and
shrl
xor
push
pop
xor
pop
mov
pop
inc
or
dec
sbb
sub
push
dec
push
push
xchg
push
xor
cmpb
or
daa
dec
inc
push
lods
in
scas
push
out
push
dec
bound
cmp
sub
push
lock
cmpsl
andnps
push
dec
sub
xchg
xor
fbld
imul
dec
inc
dec
dec
dec
xchg
scas
dec
out
jne
lods
outsb
xor
dec
mov
dec
xchg
add
inc
pop
xchg
cmpsb
inc
jecxz
dec
jno
and
and
push
push
and
dec
dec
dec
cmp
mov
sbb
sub
cmp
ja
stos
insl
mov
sub
or
push
mov
sub
and
xchg
jl
mov
xor
dec
shr
lods
mov
fists
jl
out
pop
inc
cmp
xor
out
lods
mov
cmpsl
push
in
push
xchg
adc
aaa
push
and
enter
xor
adc
js
nop
mov
xor
fs
xor
aad
scas
sub
xor
enter
popf
inc
sahf
inc
imul
cmp
mov
fbstp
mov
mov
xor
imul
xor
xor
in
cltd
ss
jae
bound
aaa
ret
nop
sbb
aaa
aaa
lahf
dec
and
aaa
cmp
inc
jb
cmp
sbb
add
sbb
inc
mov
cmp
sbb
dec
scas
shlb
dec
dec
push
inc
test
mov
push
mov
adc
daa
jg
outsl
add
mov
push
push
aas
xchg
arpl
mov
fmull
dec
push
add
push
push
bound
mov
xchg
xor
xlat
pusha
xchg
push
jb
xor
xor
or
orb
rorb
clc
subb
xor
add
cmp
xorb
popf
divb
mov
shll
cmp
push
mov
xor
sbb
das
add
leave
outsl
adc
frstor
mov
ja
sub
bnd
xor
mov
rclb
inc
in
push
adc
xor
movsl
xor
sti
inc
test
sub
and
ficoms
push
lods
dec
popa
outsb
push
and
push
xchg
fistpll
mov
pop
rcrb
jo
or
dec
xor
fisttpl
data16
popa
sub
iret
xorl
fs
insl
je
cmpsl
sub
sarb
mov
lahf
dec
inc
aaa
pop
rolb
incl
inc
sub
pop
push
insb
int3
adc
aas
sub
jmp
insl
ret
xchg
ja
mov
int
lahf
dec
push
das
adc
sbb
or
fidivrl
cmp
mov
out
and
leave
sub
ss
in
pop
xor
xor
aaa
push
xchg
sub
dec
icebp
xor
xor
es
push
inc
xor
xor
sbb
inc
xor
inc
push
nop
sub
cmp
mov
in
xor
insl
inc
bound
je
jb
sbb
xor
xor
pop
fadds
call
roll
mov
fstl
dec
adc
dec
popa
aas
sub
fildl
inc
inc
xlat
icebp
sbb
push
jp
fildll
lret
aas
mov
or
mov
fbstp
addr16
push
jp
mov
xchg
push
jns
jbe
imul
or
pop
xlat
scas
push
cmpsl
mov
sub
push
lods
sbb
in
add
dec
or
sub
sub
xlat
sub
daa
lahf
dec
popa
je
cmp
jns
sub
mov
mov
sub
push
mov
les
sub
movsb
lds
insl
jmp
xor
inc
or
insb
insl
les
insb
dec
cltd
push
sbb
adc
insl
inc
pop
leave
push
mov
loop
dec
das
sub
push
cmp
sbb
fists
test
daa
mov
pop
pop
mov
leave
or
xor
add
sbbl
add
inc
add
xor
inc
xchg
aaa
enter
addr16
inc
pop
mov
cmp
movsb
pop
add
dec
test
sub
nop
push
pop
rclb
add
ss
jo
fadds
dec
adc
addb
loope
push
test
cmp
sbb
shlb
enter
add
fmul
adc
inc
push
mov
inc
test
jmp
test
xchg
movb
push
loop
pushf
mov
add
in
cmp
cmp
jg
adc
pop
xor
mov
mov
sbb
add
loopne
and
push
lock
and
pop
sbb
cmp
jne
cmpb
mov
or
nop
les
mov
add
es
push
loop
in
negb
dec
jae
lock
fildl
mov
push
outsl
ja
mov
cmp
int
cmp
mov
xchg
aam
int3
dec
push
fbstp
pop
jecxz
pop
jmp
imul
mov
mov
fsubrl
mov
xchg
shrb
loop
jne
mov
or
mov
xorb
lods
dec
test
cmp
dec
in
rol
cwtl
xchg
and
in
and
cmpsl
cmp
cmp
xchg
enter
clc
xchg
jne
jmp
jno
jg
fbld
mov
push
stos
xor
add
sbb
outsl
adc
mov
and
loopne
loope
nop
xchg
sbb
mov
shrb
rclb
fld
mov
mov
and
xchg
loopne
jno
push
das
xchg
clc
xchg
push
std
inc
xchg
xor
fiaddl
decl
or
ret
jb
inc
xchg
xchg
cltd
pusha
cmp
je
repz
mov
clc
xor
jb
lods
jecxz
pop
fisubl
icebp
or
movsb
xor
scas
mov
mov
mov
test
add
lret
inc
notb
push
push
ret
push
and
xchg
jmp
clc
out
and
pusha
sbb
push
dec
and
sub
popa
jmp
adc
and
jnp
lcall
pushf
pusha
push
inc
call
pushf
lock
push
lcall
icebp
add
jle
mov
fistps
inc
jecxz
mov
fsubs
dec
aam
adc
aam
lock
jns
inc
fidivl
mov
add
mov
push
outsl
and
test
movsb
loopne
dec
mov
enter
inc
jo
cmp
mov
aas
cmp
xlat
dec
jle
daa
mov
pop
xor
cmpsl
call
jo
sbb
inc
pop
lods
fnstenv
sub
cmp
or
xchg
or
mov
pop
sub
mov
push
adc
clc
pop
imul
sub
loopne
mov
stos
adc
lcall
shll
jne
inc
push
dec
jae
ret
mov
popf
cwtl
shr
push
jae
insb
rolb
mov
in
es
insb
adc
notb
scas
and
fstpl
fwait
dec
adc
imul
ja
sub
in
imul
insl
mov
xchg
mov
or
cmp
push
daa
mov
daa
jns
sub
xor
sub
xchg
je
mov
mov
testl
or
addr16
lods
inc
sbb
jmp
jne
xor
jecxz
jae
cld
nop
mov
push
adc
lcall
sub
test
xor
fdivrl
test
lods
stos
and
lods
pop
cmp
cmp
pop
fstp
test
push
xchg
pop
fldl
push
test
das
sub
cmp
add
and
cmp
xchg
inc
jo
add
movsb
cltd
cltd
pop
out
inc
mov
mov
xchg
pop
push
dec
cmp
fidivl
loopne
push
test
xor
pop
repnz
pusha
jge
clc
dec
imul
and
or
add
xchg
mov
fdivrs
sbb
mov
pop
lcall
pusha
sti
mov
ret
fwait
add
push
adc
mov
jg
sub
xchg
adc
adc
ss
test
xchg
pop
sub
pop
inc
sub
loope
inc
xchg
ret
pop
mov
xor
pop
sub
imul
arpl
xor
sarl
ds
decb
in
mov
mov
lock
mov
jo
push
pop
xchg
inc
pop
imul
rorb
mov
mov
dec
in
das
shl
push
dec
dec
dec
repnz
xchg
push
ret
inc
push
push
dec
inc
push
or
xlat
mov
cmpxchg
dec
movsl
test
jecxz
ret
das
pop
decb
aam
in
fdivrs
in
inc
mov
adc
sbb
sub
xor
repnz
xchg
and
dec
in
mov
add
ds
dec
inc
inc
inc
das
dec
inc
push
inc
push
push
mov
mov
pop
ja
push
repnz
inc
mov
inc
push
mov
inc
push
inc
push
dec
push
movsb
rcll
andl
jne
inc
out
cmp
xchg
lods
fcmovb
nop
push
cmp
add
mov
mov
add
sbb
sub
imul
cmp
sbb
xchg
lods
inc
dec
and
pop
and
sbb
add
add
ficoml
adc
pop
or
dec
add
fwait
mov
faddl
fchs
dec
xor
pop
sbb
jae
out
or
mov
in
add
xchg
nop
je
inc
push
xor
out
rcr
xchg
lret
jmp
xchg
pop
lret
test
setl
iret
dec
imul
push
inc
mov
dec
mov
lcall
sbb
loope
xchg
jnp
sarl
or
fsubl
pop
dec
ds
in
insl
cmp
stos
out
xchg
mov
outsb
jb
adc
inc
jae
out
xor
ret
xchg
add
stos
adc
pusha
out
add
dec
add
jg
push
aam
cmp
jne
inc
push
or
dec
out
mov
insb
add
xor
cld
ss
mov
das
jns
cs
repnz
incl
daa
subl
mov
shlb
jbe
hlt
jp
mov
shll
xchg
test
and
hlt
inc
arpl
mov
jmp
test
xor
xlat
mov
jo
sbb
and
fdivrp
mov
or
or
lock
push
add
fisttpl
inc
sbb
imul
jle
mov
xchg
or
xor
xlat
push
sub
rcrb
push
fidivl
fimuls
imul
call
pop
aad
mov
stos
sbb
jecxz
movsb
sub
adc
or
into
loopne
clc
xor
pop
push
scas
scas
and
andl
mov
out
add
mov
push
jno
inc
push
ficoml
jmp
push
sarb
jmp
sub
mov
add
aam
adc
pop
mov
xchg
mov
push
int3
xchg
ss
add
inc
ret
cmp
sub
jo
and
inc
push
enter
inc
enter
add
in
popf
xor
xchg
aas
jmp
add
pop
pop
pop
mov
and
jp
fucomip
inc
fwait
xchg
aaa
pop
mov
push
mov
popa
shrb
or
pusha
enter
jp
inc
test
movsb
and
or
add
jns
jmp
xor
iret
ficoms
xor
add
addr16
push
add
cmp
pop
or
pop
mov
sub
mov
push
clc
push
push
dec
repz
jno
mov
in
in
cltd
rorb
add
xchg
bound
and
or
js
fstp
lahf
decl
js
repnz
ja
push
dec
mov
inc
loope
rolb
leave
or
push
dec
push
cwtl
add
lock
pop
jne
cmpsb
xor
cmp
nop
das
sub
push
lods
jmp
pop
xchg
adc
nop
outsl
or
out
dec
dec
xchg
pop
dec
repnz
fbld
shlb
add
dec
pop
int
mov
sbb
cmp
mov
cmp
imul
cmp
cmp
sbb
and
dec
imul
movb
push
dec
or
mov
sub
popa
lcall
xchg
cmp
mov
dec
pop
mov
inc
int
mov
es
inc
add
mov
mov
xchg
mov
and
addl
ds
xchg
jl
sbb
imul
xchg
push
andl
adc
les
ds
imul
mov
rolb
cmp
xor
xor
sub
xor
call
xor
mov
adc
sub
add
adc
push
cmpsb
jnp
and
add
mov
sbb
faddl
or
xor
pop
in
dec
cmp
and
sbb
fsubl
loope
aaa
sbb
or
pop
sub
shrb
sub
sub
ret
inc
loope
fmuls
dec
pop
xchg
repnz
add
das
das
jb
sbb
cmp
and
cmp
and
repz
repz
rorb
in
fwait
push
xor
nop
ret
or
fstpl
sub
incl
iret
fmuls
sub
xchg
hlt
jge
push
xor
add
add
out
fiadds
mov
mov
fiaddl
leave
insl
aaa
xor
push
aaa
inc
xchg
cmpsb
push
shlb
or
cmp
mov
mov
push
push
sub
mov
data16
dec
mov
and
shl
es
xchg
decl
and
pop
add
pop
sti
push
int3
jp
inc
nop
cmc
in
jns
inc
and
pop
pushf
in
call
in
and
pop
dec
dec
xor
xchg
cmp
dec
cmp
data16
cmp
cld
pop
shrb
clc
lock
pushl
lea
xor
sbb
fimuls
stc
lock
sbb
xchg
ss
adc
sub
jbe
and
imulb
or
cs
add
push
adc
sbb
sub
push
add
negb
mov
jge
shll
sbb
daa
cmp
cmpsb
fisttpll
cmp
lahf
fs
clc
xchg
and
addr16
loopne
push
push
inc
xchg
pusha
mov
fs
inc
fbld
dec
dec
lods
sar
popa
fs
pop
and
sub
add
sbb
pop
mov
lds
mov
inc
cmp
push
cmp
push
jo,pt
dec
ret
push
mov
lahf
daa
xor
and
sub
inc
jge
xchg
sbb
sub
outsb
mov
cmp
dec
sub
add
and
dec
ret
popa
xchg
inc
clc
sbb
and
xor
test
lods
adc
or
sbb
clc
xor
xchg
dec
push
out
push
xchg
inc
push
daa
dec
sub
fs
ljmp
xchg
sbb
jmp
inc
and
gs
movsb
mov
push
add
aam
out
and
pop
push
cmp
or
clc
insl
loope
inc
data16
mov
jecxz
je
mov
xchg
loope
lds
hlt
mov
sub
and
push
sahf
dec
jo
xchg
push
in
sbbb
and
xlat
repnz
add
mov
sbb
push
mov
push
pop
adc
and
mov
lret
xchg
cmp
lods
fsubl
call
imul
xor
in
hlt
xor
and
pop
cmpsb
xorl
jge
scas
arpl
lcall
clc
leave
cli
adc
add
mov
cmp
or
add
nop
inc
or
or
jle
jne
or
push
mov
insb
adc
push
push
cmp
mov
mov
lods
sbb
in
sbb
mov
mov
lea
push
ljmp
movsb
dec
inc
jb
adc
sub
popa
imul
mov
add
in
ret
std
divb
mov
aam
dec
and
movsb
push
scas
rcl
pop
cltd
pop
mov
sbb
jnp
mov
je
xchg
cld
mov
push
ss
fwait
inc
push
add
lret
outsl
mov
xor
adc
mov
dec
and
mov
sbb
sbb
inc
fiaddl
mov
jg
std
lds
je
sbb
jno
xchg
outsl
arpl
pop
xor
std
mov
ffree
bnd
fcmovb
outsl
addl
adc
std
negl
and
add
sbbl
sbb
shll
inc
gs
or
sub
sub
jae
imul
arpl
jecxz
aas
add
mov
call
mov
jmp
xor
cmp
sbb
push
push
repz
lock
add
pop
inc
mov
sub
or
in
sub
rcrl
aas
insb
push
sub
mov
lcall
hlt
in
int
mov
push
dec
imul
gs
and
xor
push
dec
ja
or
mov
sbb
repnz
mov
dec
pop
push
stos
push
lea
ret
cs
clc
sub
add
add
pop
jmp
xchg
cmp
fdivs
add
push
cmp
movsb
incb
pop
dec
lahf
mov
mov
push
icebp
xor
loopne
or
sub
loope
xor
add
sub
lods
in
add
out
or
sbb
loope
out
scas
lret
nop
adc
add
clc
sbb
test
xlat
lods
mov
add
mov
in
incl
add
arpl
xor
xor
xor
in
cmp
hlt
xor
pop
sub
xchg
dec
add
add
fiadds
add
fwait
aam
adc
fistps
jle
dec
sub
or
pop
ret
push
sub
subl
sub
movsl
scas
nop
les
pushl
mov
lcall
paddq
pop
add
pop
mov
add
jg
push
repz
sbb
mov
fst
ljmp
aaa
in
repnz
ja
fld
adc
xorl
dec
les
popa
jecxz
add
rolb
sub
sub
add
inc
popa
add
and
insl
mov
inc
or
cmpsb
lods
pop
or
push
and
push
add
into
shll
js
push
or
adc
addl
call
add
sub
shl
pop
fwait
lcall
test
icebp
add
adc
add
int
cs
and
fwait
inc
mov
shl
cs
icebp
dec
cmp
push
pop
lret
xchg
mov
ret
push
mov
sub
mov
icebp
sbb
xor
xor
inc
sbb
test
xor
popa
lea
lret
xor
jno
setb
add
shlb
and
inc
jecxz
sahf
insl
jo
pop
hlt
jg
das
and
jne
cmp
sbb
mov
jne
lea
clc
loope
arpl
sbb
in
lds
fnstcw
pop
inc
pop
sub
into
xchg
inc
add
sub
lods
pop
adc
adc
mov
aad
pop
clc
mov
mov
jl
sub
jp
mov
inc
ret
sub
or
xchg
cmp
jnp
or
xchg
dec
dec
inc
daa
or
mov
dec
cli
push
addb
or
push
mov
mov
push
and
jmp
xor
das
pusha
repz
dec
inc
adc
dec
xor
xor
enter
dec
and
out
inc
add
sahf
mov
stc
and
dec
cli
cmp
or
mov
mov
repz
mov
and
imul
push
mov
mov
mov
in
or
jmp
cmpsl
sbb
push
lea
pop
cld
sbb
xor
jg
mov
dec
and
das
mov
scas
loope
jle
call
sub
xlat
push
pusha
adc
rolb
call
in
dec
ret
fiadds
pop
rolb
pop
outsl
in
adc
lock
mov
in
clc
cmp
imul
test
cwtl
dec
dec
pop
out
push
sbb
loope
inc
pop
lea
push
xor
mov
xor
push
leave
ljmp
movsl
out
lea
inc
and
sahf
in
pusha
lret
mov
sbb
inc
rolb
into
lock
mov
push
lods
sub
mov
sbb
lds
repz
pop
xchg
nop
push
in
adc
adc
sbb
xchg
into
dec
in
add
ret
dec
add
in
inc
arpl
shr
add
add
test
xor
add
add
mov
sub
push
mov
movsl
ret
adc
mov
and
push
nop
pop
xadd
ret
mov
pop
inc
push
ret
enter
les
xor
sub
test
mov
inc
add
pop
cs
sbb
mov
aaa
cmp
in
pusha
rolb
mov
dec
dec
cmp
and
loope
xchg
push
cmp
gs
sub
mov
inc
loop
dec
push
jnp
sub
popa
bound
sbb
addr16
dec
rol
sub
les
and
outsb
outsl
je
or
jmp
cmp
loop
enter
das
xchg
rclb
inc
pop
cmp
jl
adc
sbb
movl
lret
inc
orl
nop
pop
mov
pusha
mov
sub
into
into
add
and
mov
mov
push
pushl
cld
pop
arpl
addr16
insl
bound
jb
je
jbe
js
jp
mov
sub
xlat
dec
lea
xchg
sbb
adc
adc
and
cmp
mov
fstl
dec
adc
mov
xchg
cmpsl
xor
scas
js
aad
sbb
pusha
adc
inc
adc
fisttpl
enter
hlt
adc
push
push
ficomps
daa
sbb
push
notl
pusha
nop
pop
pop
xor
test
dec
xor
xor
mov
and
push
push
adc
mov
cmc
push
adc
out
jg
cmp
pop
cmp
dec
add
sbb
jle
push
xchg
mov
sbb
adc
lahf
inc
sbbb
cmp
jg
push
mov
jbe
xor
in
adc
notb
out
xchg
out
ret
rorb
notb
cs
shlb
or
push
leave
test
adc
push
add
push
xchg
pop
inc
std
sbb
in
inc
daa
or
cmpsb
test
repnz
add
dec
mov
mov
test
mov
cmp
mov
pop
sbb
pop
enter
icebp
xorb
dec
sub
xor
xor
loope
sbb
sbb
lea
sbb
push
adc
jmp
push
xor
pusha
cmpsl
insl
jmp
ret
pop
out
popa
push
or
add
movsb
push
inc
aaa
ss
pop
leave
and
and
gs
fwait
add
stc
mov
mov
sbb
pop
add
jne
push
push
imul
jnp
sub
rol
mov
clc
xchg
hlt
xchg
mov
enter
or
mov
mov
adc
lret
and
pop
repnz
pop
out
shrl
sub
into
mov
push
sbb
jle
mov
jg
lods
int3
fcomps
jne
add
xor
push
mov
cmpsb
cmp
fsub
push
enter
ficoml
pop
push
adc
inc
shlb
aas
inc
push
lock
and
push
jg
or
dec
es
push
pusha
orb
pushf
aas
xor
shlb
sbb
jbe
movsb
mov
and
and
ret
sti
out
lock
aam
sbb
icebp
mov
repnz
adc
pop
pop
add
sub
push
mov
mov
inc
ds
mov
aad
arpl
inc
bound
cs
maskmovq
testl
test
mov
dec
jmp
pop
or
in
sbb
sbb
movsb
sbb
xor
dec
pusha
pop
imul
fsts
lret
push
mov
mov
in
sbb
xor
and
lret
pop
and
mov
iret
and
es
adc
sub
repz
inc
push
mov
sti
fisttpll
add
test
test
pop
aam
add
sbb
sbbb
mov
xlat
addr16
shll
mov
movsl
pop
mov
cmp
test
iret
and
jno
bound
sbb
shlb
jmp
scas
add
mov
pop
ja
sbb
insl
call
mov
rorb
aam
inc
sbb
ss
loopne
add
pop
mov
adc
fcomps
dec
push
stos
add
pop
xorb
sbb
ds
sbb
pop
cmp
and
cmp
test
lret
pop
xor
lahf
inc
push
sahf
or
push
and
frstor
pop
in
jb
dec
xor
push
hlt
pop
das
cld
fnclex
cli
popa
sbb
adc
push
push
bound
jns
cmp
js
xor
xchg
mov
fdivr
dec
and
add
adc
andb
push
enter
adc
loop
nop
sbb
add
jbe
xor
outsl
imul
pop
sub
aaa
sub
push
cmpb
out
fcomip
sbb
inc
repnz
and
ds
jl
cmpsl
push
fs
add
test
inc
mov
aad
push
fists
int3
and
pop
jae
sbb
add
mov
orb
outsl
idivl
inc
lcall
out
leave
dec
inc
xor
dec
adc
nop
int
int
sub
sbb
xor
push
sbb
das
adc
cld
xor
rolb
mov
clc
inc
jo
mov
mov
adc
dec
repz
add
pop
add
mov
scas
pop
dec
jae
iret
pop
pop
pop
dec
xor
movsb
sub
sbbb
and
or
cmp
xor
jo
mov
lcall
loopne
fadds
pop
andb
xchg
pusha
and
pusha
or
fdivl
dec
or
lods
jne
pop
and
mov
add
mov
inc
mov
xchg
sub
jl
sub
or
lods
fs
mov
dec
add
insb
adc
push
xchg
inc
pushf
dec
loop
ffree
sub
dec
add
mov
xchg
shrl
mov
fnstcw
or
mov
fwait
and
andb
sbb
sbb
xor
mov
dec
sub
xlat
lock
pop
subb
mov
add
jge
and
mov
adc
pop
push
or
pop
xlat
insb
sti
xchg
or
leave
mulb
cli
pop
add
xorb
stos
sub
stos
inc
add
sbb
pop
int3
mov
mov
sarl
rorb
and
xchg
sub
xor
adc
jmp
stos
mov
dec
rorb
cmc
push
stc
or
or
push
dec
sbb
push
sti
das
scas
xchg
cmc
or
add
mov
dec
mov
dec
div
push
and
outsb
push
fldt
cwtl
push
adc
jmp
ret
addr16
pusha
jbe
ret
lea
adc
hlt
imul
and
mov
in
inc
dec
cmpsl
push
aas
pop
and
ret
xor
dec
insl
movsl
inc
xchg
sbb
lret
pop
aad
or
add
push
and
inc
push
sbb
jae
push
lret
pop
pop
test
cmp
and
outsb
cmp
adc
mov
out
inc
and
jmp
xchg
sbb
fmul
xchg
ss
clc
jle
adc
xor
insb
sbb
addr16
push
push
mov
iret
mov
mov
or
xchg
push
shll
inc
pop
stos
outsl
jb
adc
or
add
adc
jae
arpl
in
andl
jns
mov
add
dec
add
sub
and
sbb
mov
lods
mov
add
sbb
imul
lret
iret
test
mov
dec
popa
or
mov
pusha
cltd
adc
mov
test
adc
add
test
xor
daa
fists
push
and
daa
cmp
testl
push
inc
dec
dec
inc
dec
dec
adc
xchg
jge
inc
inc
push
ds
push
sbb
daa
mov
call
dec
pop
jle
xchg
test
push
popa
test
jnp
jae
icebp
fdivrs
cld
push
xchg
push
jb
sub
cmp
xor
ss
cmpsb
dec
cli
daa
jne
aaa
sbb
call
or
dec
sub
xchg
xor
jae
imul
cltd
sbb
mov
pop
stos
fdivl
inc
jp
notl
imul
aad
mov
fsubr
imul
rorb
mov
shrl
arpl
les
aaa
les
sbb
mov
mov
sub
adc
fisubrs
mov
xchg
mov
or
lds
dec
out
sub
inc
mov
jecxz
or
cmpsl
cmp
push
sub
inc
adc
xor
mov
xor
xor
call
lock
repnz
inc
mov
aad
lock
scas
dec
xor
lock
adc
punpcklbw
cmpl
dec
jmp
ret
test
pusha
leave
push
inc
fdivs
ss
add
xchg
pop
iret
jnp
mov
add
push
ja
sub
dec
rolb
jnp
pushl
mov
inc
adc
xor
es
movsb
pushl
jae
repz
push
mov
and
sbb
sub
lock
pop
xchg
jl
mov
and
sub
pop
pop
add
xchg
test
rorl
dec
pop
or
jbe
mov
aam
ret
rclb
pop
cld
sbb
bsf
pushf
cmpsb
push
push
out
js
addb
xchg
sbb
cmp
in
mov
clc
imul
lock
jb
sbb
fdivrs
and
clc
cmpsl
adc
call
push
pusha
fimull
mov
mov
js
xchg
pop
shrb
fildll
test
jmp
mov
faddp
jo
imul
in
or
mov
addr16
out
pop
repnz
sti
pop
sub
push
inc
push
push
dec
dec
dec
inc
dec
dec
gs
mov
pop
popf
mov
or
add
pop
repnz
sbb
mov
mov
ja
dec
fdivp
sbb
div
mov
adc
repnz
or
xchg
in
leave
test
fiadds
je
or
and
xchg
test
sbb
mov
rolb
movb
cmp
inc
inc
jo
push
xor
mov
push
xor
pop
lock
adc
xor
inc
call
pop
cmp
add
test
jmp
mov
cmp
das
clc
rolb
pop
popa
and
test
push
imul
dec
add
inc
push
inc
mov
nop
sbbl
fs
dec
jg
inc
fmuls
xor
addl
push
pop
jne
out
lods
push
imul
cmp
pop
dec
dec
mov
mov
addb
rclb
push
stos
mov
into
movsb
pshufw
pop
leave
int
out
push
pop
mov
loopne
mov
sbb
adc
mov
inc
sbb
jmp
xor
or
movsb
lea
add
and
pop
mov
and
and
mov
xor
sub
clc
out
xor
pop
mov
mov
adc
enter
popf
mov
rclb
sbb
and
adcl
pop
inc
lods
testb
adc
cmp
loop
push
addb
addl
shlb
add
adc
dec
loopne
pop
sbb
cli
xchg
neg
rcr
jnp
pop
loop
jmp
adc
movsb
xchg
lahf
sbb
dec
inc
or
adc
fcomp
adc
adc
push
ss
xchg
xchg
cmpl
mov
aaa
test
ret
push
lods
daa
pop
push
cs
push
pushf
add
mov
push
sbb
add
push
pop
test
out
into
scas
inc
pusha
xor
leave
xchg
int3
xor
ret
add
imul
andl
nop
clc
sahf
iret
les
dec
das
xor
dec
xor
dec
into
shll
pusha
cmp
js
shrl
sbb
sbb
mov
rdpmc
add
sbb
bound
ja
mov
sub
inc
and
sub
push
add
push
cwtl
sub
pop
test
jge
aaa
or
mov
lea
mov
add
cwtl
mov
js
orl
cmp
mov
inc
inc
dec
or
in
in
pop
andl
stos
xor
cwtl
je
inc
mov
pop
movsl
xor
fmull
addr16
ficompl
sbb
pop
lret
mov
es
dec
dec
adc
add
test
sub
mov
mov
call
fwait
adc
dec
jne
xor
aam
and
mov
jg
jg,pn
add
push
sbb
shlb
stc
ljmp
gs
mov
cs
lock
cld
pop
cld
mov
nop
cmp
mov
pushl
push
loope
sbb
add
mov
enter
xor
add
pop
frstor
addr16
pop
jo
adc
add
add
dec
inc
and
sub
pop
and
jno
cmp
ret
xchg
add
rorb
arpl
sbb
loopne
adcl
clc
movb
lea
sahf
into
shll
push
cld
jge
dec
cmpsb
and
sbb
ret
ret
pop
push
imul
adc
or
pop
adc
mov
dec
sbb
shlb
or
clc
and
push
sub
shrl
adcb
add
jns
xlat
xor
dec
adc
and
aaa
cmp
add
call
fcoml
nop
or
dec
dec
adc
nop
das
cmp
pop
add
cmpb
cmp
mov
out
xchg
mov
lock
jecxz
movsb
leave
lock
dec
pop
sbb
pop
mov
sub
in
mov
xlat
add
adc
xchg
movl
adc
mov
pop
ja
dec
shrb
sbb
mov
push
jbe
lods
clc
popl
dec
cli
mov
clc
or
cmp
dec
inc
nop
xor
xor
add
aad
sarb
adc
cmp
or
cwtl
mov
mov
bound
sub
jl
inc
push
xor
jbe,pn
popa
fs
aam
mov
out
ss
cmpsl
lret
or
pop
dec
imul
outsl
jb
xchg
inc
xorb
pusha
mov
aad
cmp
and
mov
mov
mov
hlt
sbb
jae
push
adc
push
add
or
jno
add
pop
dec
push
sbb
mov
or
push
xor
mov
cmp
jne
rcrb
repnz
add
xchg
mov
mov
cmp
mov
xchg
adc
cmp
repnz
ret
and
inc
inc
add
mov
push
dec
enter
in
add
sub
js
add
sub
mov
stos
rorb
adc
jbe
inc
adc
pushf
nop
bound
inc
adcb
xchg
mov
pop
mov
add
dec
dec
into
and
adc
cmp
iret
aas
clc
add
adcb
pop
sbb
push
add
bound
orl
lahf
and
or
add
nop
pop
mov
sbbb
adc
push
inc
andb
enter
mov
imulb
ja
jbe
pop
adc
fs
mov
adc
sub
adc
out
jae
bswap
inc
sbb
and
and
lods
mov
mov
add
dec
push
push
mov
aas
cmp
inc
xor
sbb
sbb
jg
push
push
dec
push
gs
aas
pop
mov
xchg
add
das
mov
leave
shlb
inc
pop
and
push
nop
or
sub
sahf
jae
out
sub
push
clc
loop
arpl
push
mov
rorb
loope
dec
out
lret
enter
and
and
mov
dec
and
push
mov
pop
jle
push
xchg
dec
dec
cmpsl
jne
incl
push
inc
sarb
push
inc
sub
pop
dec
in
xlat
shr
punpcklbw
adc
mov
inc
jp
scas
xchg
pop
xor
sahf
push
cmovs
xor
xchg
sbb
pop
adc
mov
nop
movsb
or
lds
xor
push
jb
push
movsl
adc
lea
push
push
adc
nop
or
add
movsl
add
sbb
out
pop
or
push
mov
sarb
inc
add
lret
add
sub
inc
inc
mov
jne
cmp
push
jecxz
sbb
lods
mov
push
dec
inc
dec
pop
add
aam
pop
sub
fwait
xor
cmp
xchg
das
in
cmp
add
xchg
imul
sbb
inc
add
sarb
sbb
adc
inc
mov
xchg
lea
or
lods
push
pusha
lret
cmp
xor
sti
inc
push
pop
add
or
jb
loope
inc
cmp
scas
js
sub
push
push
jb
insl
popa
fidivs
push
rcrb
push
shr
add
push
inc
and
cmpsl
jne
push
rorl
ja
dec
and
pop
sub
pop
pop
pop
cmp
pop
inc
add
inc
add
shrl
push
jne
or
xlat
and
sbb
sub
pushf
pop
dec
ss
das
loopne
cld
mov
xchg
das
add
or
insb
inc
dec
cltd
add
fwait
xchg
mov
dec
sub
dec
jl
aaa
and
inc
dec
dec
mov
nop
or
pop
in
pop
xchg
add
insb
js
in
pop
or
push
mov
jo
das
ja
push
mov
adc
int3
adc
ja
xorb
adc
inc
or
or
push
les
or
or
dec
push
in
add
enter
jo
add
cs
add
je
je
imul
pushf
adc
adc
and
sub
cmp
adc
mov
sahf
addb
inc
test
push
or
lcall
dec
dec
add
outsb
jno
movsl
movsb
and
movsl
inc
test
nop
cmpsl
xchg
xchg
sbb
setg
sbb
je
fistpl
dec
pop
sub
cmp
fwait
dec
jo
push
dec
and
lahf
stos
les
dec
and
leave
and
fs
pusha
add
lods
xchg
push
add
fmuls
inc
addl
adc
push
les
jns
hlt
and
or
jae
mov
or
sub
pop
mov
sbb
inc
js
call
jge
push
adc
cwtl
scas
sub
addb
cmp
add
or
ficoml
push
add
das
cmp
add
or
inc
push
pop
nop
and
outsl
inc
inc
or
and
or
lods
cltd
inc
adc
inc
dec
popf
sub
fs
addr16
push
or
fldenv
or
daa
insl
adc
cmp
cmp
add
cmpsb
imul
and
lcall
sub
imul
imul
cmpsb
imul
insb
or
add
adc
loopne
adc
imul
adc
enter
sub
ror
enter
popf
movsl
jmp
dec
addps
push
dec
push
sub
jno
outsl
inc
pop
pop
or
adc
or
pop
push
pop
jmp
or
or
dec
xor
mov
int
jl
mov
jl
or
mov
mov
and
fdivrs
or
ret
mov
and
test
or
adc
add
setae
shrb
sbb
popf
pop
subl
push
dec
jb
jmp
xchg
jmp
sub
adc
popa
mov
hlt
push
fnsave
rolb
repnz
and
lcall
sub
push
xchg
sbb
and
inc
sub
hlt
xchg
int3
mov
xchg
inc
int3
pop
pop
dec
fwait
iret
leave
sbb
enter
pop
les
movsb
and
mov
je
ret
cmp
rol
fbld
and
mov
mov
mov
out
fdivs
mov
fwait
jmp
jbe
add
jae
lock
mov
push
add
push
xorb
mov
or
sbb
fwait
lea
sub
adc
push
fadds
outsb
aaa
or
das
int3
push
mov
push
subl
xchg
divl
or
sub
pop
xchg
lcall
adc
adc
test
or
aaa
push
out
nop
push
or
push
pop
shrb
sub
fwait
leave
adc
add
mov
inc
in
les
cmp
nop
das
sbb
jl
nop
das
sbb
mov
xchg
das
cmp
andb
jb
movsb
and
and
xor
int3
cltd
add
and
add
in
inc
dec
fcomps
cmp
adc
jecxz
or
adc
add
push
push
shll
hlt
push
cmpsb
mov
pusha
pusha
cmpsb
xor
inc
subl
xor
and
fisubs
nop
xchg
sbb
push
add
out
fsubl
out
popa
cmpsl
test
add
inc
dec
mov
inc
sbb
or
movsb
xchg
mov
cmpl
inc
fs
and
and
movsl
mov
xchg
rol
lahf
push
daa
xor
xchg
cmpsl
sbbb
and
sbb
shlb
test
inc
mov
sbb
inc
and
xchg
mov
push
push
lea
mov
inc
sbb
push
adc
fstpl
jl
cmp
enter
pop
dec
pop
dec
and
lcall
insl
add
mov
pusha
pop
fcmovb
jmp
gs
mov
dec
push
pop
aad
cmc
jl
mov
jo
nop
push
push
or
mov
js
push
pop
arpl
scas
pop
sub
add
fucomip
ja
shrb
and
or
add
sbb
push
mov
in
mov
leave
cmp
xchg
cld
aas
sbb
mov
outsb
and
push
in
pop
insb
nop
pop
cmp
pop
je
and
pop
rcrb
sub
adc
insl
loopne
add
dec
jl
mov
mov
cwtl
dec
lock
or
dec
mov
mov
lds
fistl
push
pop
pop
rorb
jmp
orb
cltd
push
push
pop
push
mov
pop
shrb
andb
sbb
pop
call
add
lahf
addr16
lods
je
out
sub
arpl
cmp
stos
jmp
daa
push
dec
cmp
jo
je
aad
xor
jl
jb
xchg
jl
xchg
addb
test
xchg
cwtl
lret
nop
pushf
jecxz
enter
xchg
push
pop
and
or
xor
xor
sub
pop
dec
jno
push
jl
into
cmp
stos
add
les
insb
testb
mov
lcall
fwait
mov
insb
sub
sub
sub
sub
push
pop
aas
es
popa
das
pop
outsb
or
sub
cs
push
mov
lret
sbb
decl
cmpl
daa
fimull
adc
xlat
sahf
inc
test
pop
inc
nop
dec
cmpsb
or
hlt
pop
and
add
insb
insb
mov
xorb
sub
cmpb
mov
or
mov
test
inc
mov
jl
and
lods
mov
cwtl
nop
pop
in
inc
jle
jp
pop
pop
fcomps
inc
repnz
pushl
mov
test
mov
or
cld
icebp
imul
push
pop
sbb
push
int
mov
fadds
call
mov
mov
cmp
pop
minps
sbb
inc
adc
addr16
loope
inc
adcb
adc
cmp
sub
and
sbb
push
adc
daa
orb
adc
add
mov
sbb
sbb
fists
insl
inc
mov
inc
add
mov
cmp
xor
fistpll
decl
ja
orb
jl
jns
inc
sbb
mov
pop
jl
or
push
lods
in
popa
data16
cltd
in
dec
cld
clc
mov
xor
pmuludq
sti
cli
rclb
inc
and
js
insb
es
push
in
bound
add
push
repnz
add
xor
aas
mov
jo
cmpsb
mov
xor
mov
push
outsl
cmp
and
jae
add
sbb
or
rcr
push
or
insl
add
mov
shrb
test
add
xchg
sub
push
in
call
mov
out
adc
fwait
lods
fldenv
mov
and
jl
inc
in
pop
mov
add
and
sarb
enter
push
shlb
leave
int3
push
mov
push
outsl
adc
cmpsl
xor
mov
pusha
adc
xor
out
dec
sbb
in
fs
ljmp
and
push
das
cli
adcb
gs
mov
testl
jo
jae
insl
sub
lahf
inc
sbb
sub
ljmp
push
add
xor
fdivs
punpckhbw
outsb
mov
and
and
sbb
push
dec
gs
aaa
adc
das
adc
add
sahf
inc
or
xchg
push
mov
sub
add
mov
mov
pop
xchg
adc
stc
add
fwait
jge
pop
mov
push
dec
add
xor
xor
and
mov
mov
rcrl
cs
jle
add
add
inc
pushf
popa
dec
add
out
arpl
test
mov
pop
xchg
jo
mov
mov
cmpsb
adc
inc
test
orl
inc
dec
arpl
or
and
mov
sub
decl
inc
mov
xlat
sbb
sbb
mov
add
sub
sbbl
sbb
sub
and
cmp
mov
pop
add
push
or
adc
mov
sbb
pushf
aam
aaa
das
je
shlb
and
push
leave
push
les
xchg
adc
mov
test
or
incl
sub
dec
insb
dec
and
loopne
inc
pop
jb
dec
cwtl
push
enter
mov
push
mov
dec
cmp
test
popf
fldt
mov
jg
inc
xchg
orb
nop
cmp
or
aas
jmp
and
mulb
aad
mov
pop
cmp
es
pusha
add
dec
push
xchg
popl
dec
or
push
clc
sahf
dec
dec
xchg
dec
jl
push
rcrb
pusha
mov
shlb
mov
sub
dec
or
ret
les
jl
jo
jno
and
dec
imul
outsl
filds
sbb
push
aam
ret
lock
sbb
sbb
and
xchg
add
xor
add
clc
mov
pop
mov
fwait
mov
mov
sub
push
test
mov
sbb
add
jno
xor
cmp
mov
or
sub
xchg
fstl
cltd
out
sbb
or
cmpsl
mov
insl
mov
scas
pop
jo
in
or
mov
push
cld
imulb
stos
cmp
or
inc
sahf
and
lar
pop
cmpsb
prefetcht2
jae
adc
nop
movsb
sbb
mov
xchg
xor
test
xor
or
add
dec
push
jbe
in
add
out
imul
loop
mov
into
push
lcall
add
arpl
clc
movsb
call
jmp
push
push
pop
inc
pop
sarb
cmp
aaa
and
fld
push
subb
inc
and
test
scas
sbb
nop
in
lock
loopne
filds
outsl
push
or
lea
shrb
sbb
nop
ret
notl
xor
pop
xor
hlt
mov
add
sub
test
es
adc
mov
daa
sub
dec
or
push
and
and
pop
jle
js
and
cmp
lea
sbb
lds
push
mov
jo
jo
lods
jno
pop
mov
in
add
dec
and
stos
dec
pop
push
loope
mov
imul
inc
xchg
pop
jno
je
push
repnz
jl
jno
ljmp
fisttpl
sbb
sub
mov
icebp
cli
mov
push
testb
mov
mov
inc
out
es
or
pop
sub
out
mov
jno
adc
xchg
inc
add
xchg
cmc
sub
pop
adc
sbb
jb
sub
dec
es
add
jae
push
sub
fcmovne
jae
mov
cli
ds
mov
inc
enter
outsl
lea
movsb
loopne
adc
je
rcrl
add
addl
lods
es
addb
lock
adc
hlt
xlat
loop
and
jb
fisttps
fidivrs
outsl
add
insb
xchg
je
push
jb
or
or
xchg
and
or
add
sbbb
sbb
push
xchg
das
bound
sub
insl
mov
jo
sti
xor
and
insl
sub
push
pusha
cmp
ret
xor
or
mov
filds
jns
xchg
sub
iret
sbb
pop
jne
jne
das
add
cmpl
sbb
ljmp
inc
xor
rorb
imul
mov
add
arpl
pop
addb
xchg
and
push
add
jle
pop
pop
pusha
cwtl
pop
add
add
pop
jne
sbb
in
inc
jne
scas
outsb
adc
out
and
das
js
fwait
inc
fsubrs
insl
sub
xor
mov
push
in
sbb
xor
call
xchg
xor
jns
push
push
xor
cmp
sub
jbe
sub
popf
arpl
rcr
popf
les
ret
ljmp
mov
ljmp
push
pop
and
popa
nop
inc
iret
pop
gs
dec
push
adc
and
pop
pushl
sbb
outsb
push
mov
mov
or
orb
or
mov
cmp
jecxz
rorb
mov
rclb
gs
xor
es
adc
or
xchg
inc
test
mov
xor
mov
and
push
dec
lods
jp
test
lret
stos
imul
sub
adc
sbb
mov
sbb
pop
or
xchg
inc
cmp
jl
arpl
test
lahf
dec
lret
jge
bound
ljmp
sbb
fdiv
fwait
push
dec
or
shlb
xor
insb
dec
mov
pop
in
movsl
and
pop
adc
and
push
add
xchg
arpl
lods
fnstenv
sub
and
and
and
push
sub
pusha
insl
add
mov
and
push
inc
mov
add
or
cmp
jno
cmp
pusha
aaa
push
xchg
adc
mov
nop
xor
inc
loopne
filds
xor
fcoms
nop
inc
add
pop
ja
mov
mov
add
loope
das
jmp
imul
adc
comiss
mov
inc
cld
scas
shrl
mov
pop
aad
adc
sbb
popa
xor
sbb
xchg
xchg
out
mov
fmul
push
leave
add
in
lcall
or
cmp
add
jmp
xor
adc
fnstcw
sbb
xor
inc
xlat
pop
or
mov
jle
xchg
add
sahf
in
out
or
push
xchg
pop
js
sti
sarl
sub
cmp
cld
mov
stos
add
sahf
std
mov
icebp
test
pop
or
inc
js
cmp
dec
push
sbb
adc
rcrb
lds
fsubs
insl
jne
repz
dec
xor
sbb
jbe
ljmp
inc
pushl
xor
pusha
push
mov
popa
sbb
sbb
and
mov
cld
ret
sbb
mov
xor
lock
shl
dec
aas
push
jmp
adc
sub
jae
inc
jmp
aaa
push
cmc
or
mov
mov
in
push
jle
packssdw
leave
in
or
dec
pop
xchg
or
xchg
add
adcl
dec
in
and
and
outsb
xor
adc
dec
adc
mov
scas
adc
pop
mov
mov
jge
fiadds
inc
adc
push
dec
push
add
push
ljmp
inc
scas
test
test
mov
in
rcrl
adcb
nop
push
in
or
inc
push
cld
mov
sub
and
pop
and
mov
push
inc
nop
out
daa
and
mov
lahf
cmp
push
xchg
aaa
push
adc
rolb
aaa
addr16
add
add
enter
sub
pop
sbb
ss
sbb
or
or
jmp
in
mov
sub
int3
adcb
sub
xor
and
fcmovnu
cmpsl
in
ljmp
test
xor
data16
insb
jno
nop
or
test
mov
cmpsb
and
dec
or
mov
mov
ret
mov
add
jmp
loop
sti
pop
faddl
in
xorb
add
mov
in
xchg
cld
adc
inc
mov
mov
inc
lds
dec
lret
out
xchg
jnp
sbb
mov
sub
or
jo
sub
and
lods
and
pop
adc
mov
in
add
decl
inc
xor
or
sbb
xchg
mov
aam
jne
xchg
or
xor
shlb
cmp
adc
mov
dec
and
popa
roll
das
stc
xor
aam
mov
add
xor
jo
pop
add
add
decl
push
call
ja
push
push
inc
inc
inc
xor
push
push
jg
pop
les
inc
dec
inc
push
inc
jle
gs
int
xchg
mov
sub
jne
or
imul
cmp
xor
sbb
push
pop
jmp
movsb
sub
nop
mov
popa
xlat
fs
shll
loope
sbb
shlb
add
jp
rcrb
cwtl
mov
daa
add
lret
add
xchg
push
sbb
cwtl
push
add
mov
or
out
mov
mov
jmp
outsb
sub
lret
cs
jne
adc
jne
adc
jmp
sub
and
jae
lea
fstl
notl
xor
push
jo
cmpb
cmp
or
mov
in
fcompl
fdivrl
cmp
sub
pop
sub
sub
in
push
test
out
mov
mov
mov
xchg
fs
pop
xor
or
inc
cmp
mov
mov
xchg
sbb
cmpsl
pop
sub
lods
pop
gs
dec
sti
lret
pushf
lods
jne
mov
pop
subb
fstpl
mov
jb
xchg
pop
hlt
xor
mov
pop
fmuls
add
mov
dec
pop
and
movl
cmp
nop
or
xchg
xchg
sbb
pusha
jae
test
cmp
call
pusha
nop
mov
rclb
andb
adc
mov
sarb
mov
adc
dec
push
mov
xor
pop
inc
pop
push
push
cli
imul
xor
xorl
mov
mov
aaa
mov
and
mov
insb
mov
pop
mov
pop
add
jge
push
pop
push
orl
gs
mov
jo
popa
out
aas
xchg
xchg
popf
sub
xor
call
jno
or
out
arpl
push
xorl
jg
out
dec
dec
inc
inc
push
mov
pop
xchg
push
clc
or
dec
dec
out
cmp
pop
pop
fsqrt
mov
pop
adc
push
add
ret
pusha
test
cmpl
dec
mov
or
xor
sub
jnp
mov
fs
mov
sub
cld
sbb
loop
adc
jg
clc
mov
jmp
xor
mov
mov
dec
sbb
clc
inc
sub
movsb
pop
fs
jne
xchg
clc
jb
daa
xchg
in
clc
in
int3
and
fisttps
mov
sbb
sub
les
nop
cs
daa
or
add
inc
adc
shr
add
xchg
imul
jmp
inc
cld
lds
test
dec
or
mov
je
xchg
imul
mov
roll
xor
sbbl
scas
or
push
add
mov
rclb
mov
jp
test
xchg
jl
inc
mov
fs
filds
ljmp
dec
lds
xchg
in
ret
add
jge
or
push
sbb
and
or
stos
pop
jne
sub
lret
xchg
inc
xchg
pop
lret
jb
call
sbb
push
cltd
sbb
pusha
jg
gs
or
cmpsl
or
mov
pushl
addr16
fidivs
adc
ret
push
test
enter
inc
mov
xchg
xchg
sarb
push
btr
sbb
pusha
arpl
adc
test
rclb
loope
je
jmp
outsb
insl
and
mov
mov
movsl
sar
push
push
das
dec
dec
inc
add
jecxz
shl
aad
sbbb
mov
aam
test
or
inc
aam
xor
pushf
jnp
and
add
cwtl
repz
add
mov
in
nop
pop
sbb
hlt
sub
cvttps2pi
les
daa
dec
jg
fstps
push
data16
js
in
push
andb
pop
popl
sbb
or
insl
add
dec
xor
lds
sub
pop
sbb
ja
into
dec
js
and
and
sub
je
add
lret
sar
es
je
mov
mov
sbb
mulb
and
mov
adc
js
ret
in
push
dec
inc
inc
add
mov
mov
stos
adc
mov
sub
shll
imul
dec
add
pop
jne
pop
push
sub
pop
cld
or
fldt
fcoml
pop
rorb
fmull
xchg
nop
sub
nop
fdivrl
mov
andnps
les
cs
push
adc
out
pop
test
adc
imul
mov
lea
dec
mov
sub
and
das
lock
jo
dec
sbb
sbb
or
dec
cmp
xor
pop
nop
mov
sub
or
and
pop
subl
add
jge
fldz
push
pop
add
jb
inc
arpl
aad
add
loopne
and
mov
faddl
adc
scas
cmp
xchg
cmp
cmpl
push
ds
lock
fstpt
cmpsb
cmp
mov
or
sbb
xor
jo
divps
addl
xchg
sti
inc
frstor
adc
insl
and
jbe
in
inc
cmovno
je
pop
enter
mov
push
or
sbb
xchg
jne
orb
inc
lock
dec
imul
insl
addr16
jmp
mov
in
mov
xchg
sub
call
ss
mov
push
mov
jge
xchg
mov
dec
int
das
aam
inc
dec
dec
push
or
mov
incl
push
sub
sub
jmp
test
inc
jae
xchg
lcall
inc
pop
xor
lock
outsb
cwtl
pop
inc
mov
jecxz
cltd
into
xchg
rorl
and
mov
adc
xchg
inc
mov
jmp
adc
lea
ljmp
adc
je
orb
or
mov
fistpl
inc
jg
test
mov
adcb
fcoms
dec
movzwl
mov
adc
dec
or
push
addr16
mull
insl
sbb
outsb
das
push
pop
pop
or
xor
sub
sbb
mov
shlb
xchg
xor
jmp
les
push
add
mov
lea
or
filds
loopne
dec
lock
fidivs
inc
cmpsb
xor
sub
xor
and
or
stc
xchg
adc
and
or
roll
pop
jecxz
and
inc
sbbl
xchg
adc
mov
mov
adc
lods
pop
ret
mov
sti
popa
dec
cmp
sbbb
test
inc
mov
ret
out
inc
sub
adc
add
add
add
mov
test
xor
in
jb
test
es
incb
lret
inc
test
js
rcll
mov
push
mov
jecxz
ljmp
hlt
or
and
test
sahf
xchg
cmp
mov
shlb
imul
test
cmp
outsl
subb
xchg
push
clc
pop
es
xor
movswl
cmp
jne
or
adc
cmp
insl
jmp
cwtl
outsb
cmp
pop
xor
sub
ss
fs
mov
or
js
iret
icebp
cltd
in
pop
call
pop
inc
cld
fs
cld
jnp
lcall
andb
nop
nop
lcall
pop
bound
dec
ja
add
nop
dec
or
dec
or
shlb
cmp
xor
xchg
push
nop
es
jbe
add
inc
rol
lidtl
dec
adc
in
data16
push
out
mov
test
mov
setl
mov
and
shll
adc
cmp
mov
adc
pop
je
scas
add
inc
jnp
push
insl
pop
add
lcall
mov
out
mov
sbb
lea
iret
cltd
xlat
lea
adcl
ret
inc
push
sbb
and
jae
sub
or
pop
lahf
outsl
je,pn
movsl
or
and
data16
mov
hlt
outsb
or
mov
push
jmp
push
cmp
inc
inc
cs
push
movsb
pop
jo
xorb
jnp
adc
subl
adc
rcrl
shrb
adc
nop
dec
test
add
mov
popf
lgs
shll
pop
fs
popf
mov
pop
or
mov
dec
xchg
mov
add
add
inc
subl
jo
ljmp
xchg
or
mov
js
and
out
cld
sbb
jp
push
jno
mov
xchg
jmp
sbb
or
hlt
mov
cmp
fisubrl
jbe
fucomi
arpl
adc
or
push
ds
or
or
sub
adc
fcoml
scas
mov
add
adc
fnstcw
add
pop
sbb
mov
mov
pop
loopne
add
push
add
and
mov
imul
ret
push
aas
inc
lret
jns
in
shll
sti
adc
repnz
jnp
pop
movl
adc
rclb
sbb
cmc
xor
lret
sub
nop
mov
fsubp
loop
test
or
xchg
add
mov
and
cltd
int3
jns
cmpsb
sub
xchg
mov
xor
cmp
inc
pushf
sub
add
inc
jb
mov
bound
mov
imul
hlt
ja
rcr
arpl
testb
mov
loop
mov
push
mov
pop
add
out
loop
mov
pop
mov
popf
push
fstpt
leave
and
pop
cmp
mov
sbb
hlt
clc
adc
xor
lock
and
adc
xchg
daa
xchg
add
adc
xchg
push
and
frstor
arpl
sub
sbb
into
pusha
out
test
mov
mov
imul
outsb
rolb
xchg
cli
mov
dec
dec
psraw
and
cmp
mov
adc
lret
push
movsl
pop
adc
imul
je
aaa
jg
and
nop
fimuls
clc
pop
jne
repnz
add
sub
xorb
add
pop
je
mov
mov
dec
arpl
dec
fildll
addr16
lcall
out
jl
cld
push
xor
movsb
sbb
jmp
xorb
fbld
cmp
sub
sbb
lret
xchg
jno
xchg
mov
jmp
call
mov
orb
clc
aaa
enter
fildll
lea
adc
jne
ret
jmp
fadds
xchg
aaa
rcll
daa
nop
inc
aam
fbld
shr
dec
pop
shl
repz
rorl
push
cwtl
sbb
jmp
ret
mov
iret
dec
cmp
dec
jns
mov
dec
push
mull
dec
call
push
or
ret
nop
mov
mov
adc
pop
add
inc
xor
lea
mov
cmp
add
sbb
test
push
lds
inc
dec
jne
mov
dec
aaa
xchg
mov
adc
les
imul
sbb
fildll
test
loopne
test
sbb
movsb
mov
jb
int3
and
test
pop
push
mov
cwtl
or
sarb
loop
xchg
in
dec
xchg
in
or
nop
loope
mov
pop
push
mov
imul
test
and
jl
dec
pmaxub
js
je
stc
xor
je
jo
jae
xorl
insb
insb
add
nop
push
imul
jns
or
pop
pop
pop
pop
lcall
push
push
int
filds
dec
repnz
dec
dec
imul
cmp
cmp
idivb
push
xchg
cmp
enter
cmp
and
xor
xor
sub
sub
inc
inc
add
and
xor
xchg
and
and
sbbb
sbb
jb
nop
adc
adc
enter
or
or
add
add
xor
add
std
cld
std
leave
lret
clc
std
clc
std
hlt
std
sub
pop
jns
std
lock
lock
in
std
mov
std
call
mov
in
loopne
sbbb
dec
fadds
int
insb
fcom
nop
push
add
imul
cmpsl
outsb
enter
jo
js
std
add
adc
sbb
mov
push
in
mov
adc
std
int3
std
rorb
fcoml
std
jb
nop
lret
lods
lods
test
inc
add
or
mov
and
lret
sbbb
nop
add
nop
mov
test
imul
dec
push
jmp
xor
loopne
out
jge
pusha
push
pop
inc
push
and
or
add
adc
filds
jl
pop
inc
xchg
cmp
jbe
lea
mov
push
aam
adc
lods
enter
orb
xchg
cs
fldcw
out
xchg
loopne
xor
push
rclb
jbe
xlat
jl
int3
mov
push
add
test
cmp
or
jmp
xor
or
and
movsb
andb
outsb
inc
testb
jmp
int3
add
push
lock
fiaddl
or
int3
xchg
xlat
push
pop
fadd
inc
ret
pop
mov
inc
data16
clc
add
gs
xlat
mov
out
cmp
shr
pop
test
cmp
cltd
jnp
xor
loopne
pusha
mov
dec
lods
pop
xor
xor
add
cltd
les
popa
or
pusha
shlb
or
loopne
push
nop
pop
and
scas
dec
movsb
inc
shrb
sbb
scas
shll
or
shlb
dec
adc
or
add
scas
popl
push
iret
addl
pop
add
xchg
push
lods
lahf
lret
repnz
inc
dec
sub
and
lds
cmc
out
repz
and
in
insb
cmp
jno
je
outsb
xchg
inc
dec
movsl
adc
mov
lcall
lods
ror
inc
sarb
jne
push
ficompl
fcomps
pop
cmc
xor
mov
push
dec
lock
pop
xchg
les
pusha
aam
xlat
aas
xchg
enter
sbb
and
push
rcrb
enter
pop
and
or
xchg
mov
pop
mov
or
jg
mov
or
clc
jmp
inc
push
dec
push
jo
das
jl
shrl
push
hlt
mov
imul
call
data16
push
fidivs
push
loopne
add
xchg
lahf
and
push
pop
cmpsl
pop
inc
loopne
jmp
or
jl
lcall
pop
push
int3
enter
xchg
les
push
or
rcl
mov
into
rcrl
lock
fcom
cmp
mov
cmp
cmp
fistpll
mov
mov
daa
xchg
lods
mov
mov
push
mov
inc
fs
jae
cmp
jb
test
cwtl
xchg
push
icebp
pop
and
push
xchg
sbb
sahf
ds
mov
cwtl
pushf
data16
xchg
pushf
mov
test
and
imul
loope
insl
mov
xchg
imul
test
push
jnp
mov
mov
out
fisttps
pusha
jb
nop
out
pusha
push
dec
insb
pop
push
sbb
rcrb
push
push
mov
adc
push
pop
pop
inc
inc
push
nop
pop
dec
inc
lcall
lods
inc
xor
gs
dec
dec
dec
jae
enter
insb
dec
jae
dec
xor
int3
xor
mov
imul
mov
imul
pop
enter
sub
sbb
int
and
adc
cltd
nop
out
in
adc
jb
dec
jb
sbb
stos
imul
add
lea
mov
cmp
or
cmpb
pop
sbb
pop
pop
pop
loope
jno
lret
cmp
leave
and
pop
lods
rcrw
loopne
pop
sub
push
dec
ficoms
sub
add
sub
fbld
cmp
and
in
in
inc
mov
ret
cltd
loopne
imul
mov
loopne
fimull
in
ja
test
sbb
rcrb
int3
mov
adc
mov
iret
sarb
dec
xor
dec
leave
enter
xchg
xor
dec
mov
insb
lods
mov
xchg
pushf
xor
mov
xor
lods
mov
add
pop
mov
mov
inc
cmp
dec
jae
xor
xchg
cwtl
sub
dec
rolb
jl
xchg
xchg
out
xchg
test
xor
imul
insl
dec
int
imul
or
pusha
pop
pop
movsb
cmp
pop
fs
push
or
lods
xchg
pop
movsb
dec
push
pop
pop
aam
sbb
inc
mov
mov
dec
jnp
dec
pushf
xchg
add
push
or
xchg
js
fiaddl
jae
decl
fistps
push
jp
test
dec
or
fldenv
inc
inc
pusha
adc
mov
in
sub
mov
enter
cmp
and
enter
adc
sbb
lods
add
or
mov
gs
add
cld
incb
hlt
add
adc
dec
xchg
pop
fwait
lds
and
adc
adc
adc
sub
jecxz
jmp
sub
sti
sub
sub
rclb
jbe
add
adcb
jecxz
cmp
jmp
xchg
fcmovnu
es
rorl
lock
push
mov
xorl
inc
xchg
mov
lock
call
test
sub
orb
add
sbb
xor
pop
adc
ja
xorb
je
cmp
or
in
xchg
or
or
popa
cmp
xor
loopne
insb
sbb
ficomps
dec
mov
inc
mov
mov
sub
int3
fisttps
lcall
movsb
sub
data16
imul
add
call
lret
push
rcrb
fisubrl
xchg
nop
pushf
and
pushf
out
test
jo
roll
jp
jl
js
jo
mov
data16
sbb
sub
sarb
inc
xchg
sub
xor
cmp
decl
insw
xchg
pop
fdivrl
adcb
inc
sbb
mov
dec
insl
xor
dec
movsl
dec
jmp
jno
movsl
insl
or
or
and
movsb
cmp
inc
dec
sbb
cmp
nop
dec
cmp
cmp
sbb
xchg
push
add
loopne
dec
rolb
and
or
add
adc
ds
mov
and
xchg
sbb
js
inc
or
or
jbe
mov
scas
sub
adc
and
or
in
push
pusha
leave
movsl
or
loopne
sub
nop
out
jno
and
les
push
jae
cmpsl
sbb
in
enter
call
in
add
or
in
fdiv
hlt
rolb
and
or
inc
add
aam
fwait
push
std
cmp
cs
popf
fcoms
or
loopne
loopne
sub
inc
mull
ror
out
push
loopne
push
or
stc
fmuls
add
int3
int3
inc
mov
enter
jl
add
push
mov
mov
mov
lods
aam
cmp
mov
imul
aam
or
ret
shll
inc
mov
or
mov
xchg
inc
loope
loope
in
dec
subl
sub
loop
sub
xchg
push
and
in
insb
dec
push
leave
and
sub
mov
inc
jb
sub
or
sub
xchg
nop
loopne
in
sbb
and
fisubrs
imul
mov
fstl
push
ret
outsb
lods
or
repnz
mov
loope
push
bound
jo
inc
dec
inc
or
add
and
and
addb
inc
push
pop
cmp
popa
leave
push
scas
in
xor
in
push
leave
addl
sub
mov
or
sub
adc
adc
adc
xor
test
xchg
inc
repnz
in
out
push
leave
and
sub
sub
and
loopne
nop
sbb
inc
fildll
dec
test
fildll
adc
orb
sar
pop
jb
mov
mov
sbb
cmp
leave
and
xchg
insb
int3
fisubrs
sub
dec
cmpsb
in
sbb
inc
jb
sub
in
push
cmp
jmp
fsub
inc
and
imul
inc
jb
xchg
sub
loopne
xchg
sbb
mov
lods
or
aaa
nop
dec
movsb
fdivr
pop
push
rorb
outsl
push
or
sub
scas
out
sbb
xchg
push
jns
mov
in
js
js
or
mov
pop
xor
in
cmc
je
xor
xchg
out
dec
je
jo
jl
cmc
insb
std
pop
insb
dec
push
inc
push
flds
sbb
pusha
pop
outsl
inc
add
dec
shlb
push
push
push
mov
mov
dec
mov
in
inc
dec
or
add
push
cmp
xor
or
gs
xor
and
sbbb
and
jb
nop
lret
and
sbb
add
adc
add
or
jb
xchg
or
cmp
pop
add
inc
or
jmp
add
nop
add
inc
std
outsb
or
cld
xchg
push
mov
cld
sbb
xchg
cld
sbb
inc
mov
inc
cld
test
cld
movl
in
jae
movsb
repnz
xchg
cld
loopne
loopne
cmp
cld
lods
sbb
push
push
aam
sbb
in
xchg
or
jb
dec
les
in
sbb
shlb
mov
dec
mov
mov
shrb
cld
sbb
inc
imul
test
iret
xor
push
cwtl
cld
and
inc
mov
sub
cld
gs
xchg
ret
cwtl
and
and
gs
sbb
and
mov
in
test
cmp
repnz
mov
add
mov
out
nop
xchg
cld
mov
mov
rorb
lds
or
cld
je
pushf
cmp
add
adc
lods
xchg
out
sar
cld
lods
cld
push
in
shlb
fs
dec
and
cld
xlat
pusha
sbb
push
push
js
sahf
ss
test
into
push
pop
push
mov
popf
cmc
test
adc
lret
xor
ja
aad
gs
test
adc
pop
bound
fistl
incb
pop
gs
out
or
pop
in
dec
fcompl
insb
decl
jo
rcrb
jo
add
in
adc
push
and
mov
sub
jmp
sub
idivl
sbb
add
and
add
add
ja
ret
leave
lds
insl
xor
mov
loope
add
mov
add
jne
fadds
jae
cwtl
pop
repnz
sub
leave
dec
cmpsb
pop
adc
fildll
in
loope
fildll
cmp
or
lods
loopne
fildll
pushf
in
loope
loop
lock
inc
or
scas
pop
add
aas
test
xchg
roll
mov
pop
mov
flds
xchg
ss
aam
xchg
sbb
test
add
mov
insl
mov
xchg
into
push
fldenv
test
xchg
jl
ds
adc
xor
dec
faddp
nop
sbb
mov
sbb
jne
cmp
out
sti
hlt
sti
hlt
sti
lock
flds
sti
in
lret
stc
and
enter
sti
in
loopne
and
sti
jno
xchg
loop
aam
in
mov
rolb
or
int3
int3
push
enter
outsl
enter
and
sti
sub
sti
mov
mov
pusha
inc
mov
mov
loopne
repnz
call
insb
mov
gs
jmp
dec
jne
add
es
jmp
mov
popa
cmpl
test
les
iret
sbb
add
jbe
fildll
dec
clc
pop
jo
sub
or
shrb
add
popf
fnstsw
mov
add
pop
sbb
adc
or
in
das
in
out
out
pop
repnz
xchg
in
out
in
sub
orb
push
push
subb
insb
jns
add
lods
mov
int3
dec
in
das
loopne
fisttps
loopne
sub
or
movsb
sbb
mov
lods
nop
cmp
xchg
in
loope
sbb
stos
in
int3
fildll
and
in
loope
out
inc
enter
sub
int3
cmp
mov
insb
and
in
loopne
loop
sbb
inc
jb
loope
loopne
cmp
mov
sub
fdivs
adc
xchg
stos
pop
mov
cs
cmp
or
mov
das
mov
dec
inc
popf
call
mov
sub
mov
push
ss
mov
push
ds
dec
daa
cmp
jge
dec
stc
cmp
xor
or
and
ret
dec
les
and
mov
sbb
inc
leave
enter
pop
and
mov
not
sarb
sbb
and
mov
or
dec
xor
dec
ret
out
test
add
pop
and
or
mov
repnz
adc
or
sbb
mov
pop
cmpb
and
mov
ss
and
sub
cmpl
mov
sub
jl
aam
les
push
mov
loope
inc
jb
and
add
jl
sub
cwtl
pop
ret
mov
sub
aas
push
pop
mov
fildl
fldt
pusha
pop
rorb
scas
add
pop
mov
adc
je
daa
pop
dec
adc
cmp
aam
into
and
jle,pt
mov
insl
inc
or
pop
xor
mov
mov
out
xchg
xor
inc
push
xor
push
mov
pop
lret
lods
mov
xor
inc
add
int3
dec
sbb
push
adc
popa
fadd
add
and
mov
push
pop
orl
fcmovne
into
adc
je
add
shl
adc
bound
mov
push
jmp
add
lock
inc
xor
push
jae
movsl
test
jne
fdivrl
bound
std
and
call
int3
movsl
mov
movsl
cmp
je
or
xor
test
xor
repz
sub
pushf
addr16
push
xchg
stos
sub
arpl
mov
clc
xor
int3
fstpl
pop
aaa
mov
or
hlt
insl
sub
sbb
sbb
or
fisttpll
sub
sbb
xchg
mov
scas
cli
xchg
or
test
enter
insb
xchg
pushf
in
cmpsl
fisubrs
sbb
or
fists
gs
sub
shrb
and
rorb
lods
and
xor
sub
push
enter
in
loop
nop
sbb
inc
in
out
xor
in
in
jecxz
loop
enter
mov
rorb
add
push
leave
loop
in
out
nop
sbb
inc
in
loop
cmp
in
sub
mov
in
xor
leave
and
in
mov
mov
jns
or
push
leave
out
in
loop
cs
in
xchg
sbb
adc
and
cmp
leave
in
lods
test
or
arpl
leave
adc
test
dec
out
in
xchg
nop
sbb
lods
in
out
xchg
push
sub
in
mov
nop
sbb
or
lods
arpl
or
gs
cs
fcomp
pop
orb
aam
jmp
loop
in
out
xchg
inc
jb
in
jecxz
adc
jecxz
test
in
mov
adc
xchg
loope
lods
sbbb
mov
test
xchg
lret
lods
test
xchg
xchg
pop
loop
sub
mov
cs
mov
xchg
inc
repnz
loop
xchg
add
imul
in
and
in
in
xchg
inc
jb
out
in
xchg
nop
sbb
or
or
mov
dec
cmp
pop
iret
adc
and
sub
xchg
inc
repnz
in
loop
test
nop
sbb
sub
mov
or
xchg
aad
or
sub
scas
xor
mov
lods
xchg
inc
xorl
fildll
nop
sbb
in
fisttps
push
sub
add
loope
insb
call
aam
xchg
pop
or
mov
push
cmp
mov
cmp
sbb
or
mov
cmp
jb
cmpsl
inc
mov
cmp
insb
fildll
adc
xchg
loopne
fsubrp
inc
repnz
xchg
fildll
repz
pop
shr
add
leave
or
std
mov
cs
shl
fsubp
xchg
inc
jb
fnstsw
in
xchg
nop
sbb
in
fisubrs
and
insb
pop
es
mov
cmp
subb
mov
in
imul
fildll
and
loope
loopne
and
in
sub
lods
loope
cmp
and
loope
insb
xchg
dec
xchg
sbb
inc
pop
and
jb
dec
cmp
in
and
sbb
pop
mov
sub
xchg
nop
loopne
fisttps
xchg
and
loope
insb
and
inc
xchg
add
jo
pop
adc
adc
inc
jb
adc
nop
sbb
or
and
and
loope
fsubrp
jb
push
leave
fisttps
loope
mov
jecxz
dec
in
cmp
inc
sbb
push
pop
repnz
or
fdivr
fdivr
loopne
cmp
inc
loopne
aam
iret
and
cs
shl
shlb
or
int3
inc
sbb
inc
jb
loope
loopne
and
in
loopne
loope
add
shlb
movsl
mov
mov
outsl
inc
mov
dec
test
repnz
sbb
fdivr
pop
push
in
push
movsb
mov
leave
andl
xchg
insb
fisttps
inc
push
leave
and
mov
int3
cs
adc
js
xchg
lret
je
or
insb
insb
jo
or
add
fs
pusha
pop
repnz
cld
movl
push
in
push
dec
jecxz
or
dec
decl
inc
xor
xchg
add
sbbb
cmp
jl
nop
lret
cmp
movsl
xor
nop
lret
xorb
xor
lcall
and
cld
les
sbb
xchg
adc
add
or
in
and
or
pop
sub
sub
cmp
add
xchg
mov
push
fisubrs
dec
insb
sbb
inc
jb
fisttps
in
and
in
loope
fsubrp
push
leave
and
loope
fildll
insb
push
or
dec
int3
and
or
pop
pusha
stos
sti
enter
aam
sbb
and
and
mov
sub
xchg
scas
jb
cmpsb
in
insb
loopne
nop
pop
sbb
test
cmpb
movsb
movsb
add
nop
mov
gs
cs
cwtl
shlb
gs
or
in
pop
push
in
nop
xchg
xchg
loopne
xchg
or
loopne
rcrb
mov
or
mov
movb
imul
or
jae
outsl
inc
mov
je
sbbl
dec
jo
loop
and
int3
mov
movsb
ror
sti
sti
lods
add
pusha
jecxz
mov
ljmp
push
push
mov
gs
dec
dec
jecxz
sbb
inc
inc
repnz
inc
sti
cmp
pusha
inc
push
dec
cmp
cmp
cmpb
xor
mov
mov
or
or
sub
and
nop
pop
pop
les
stc
push
in
sbb
sbb
ljmp
mov
lcall
xchg
dec
daa
sbb
orl
pop
inc
inc
mov
sti
int
subl
xchg
cli
sbb
cli
pop
jns
lret
lock
lock
in
cli
fbld
call
sub
cli
cli
xor
jl
dec
fsubrl
jne
mov
fs
movsb
adc
sar
cmp
lods
mov
clc
aam
sub
movsb
test
mov
enter
cli
repnz
xchg
xchg
cli
sar
cli
dec
push
pop
mov
cli
mov
sbb
mov
mov
jb
cmp
lods
and
test
push
cs
cmpb
cli
xchg
add
xchg
xchg
pushf
pushf
cwtl
cmpb
xchg
jb
nop
lret
xchg
nop
nop
mov
add
out
cli
adc
cli
int3
pop
jb
nop
addb
cs
sbb
loop
jnp
cli
cmp
push
in
sub
decl
pop
or
push
pushf
std
pop
lret
dec
test
mov
or
push
adc
dec
cmp
stc
cmp
repz
stos
test
jmp
inc
lahf
movb
mov
dec
add
sbb
ss
clc
sbb
jecxz
fwait
mov
lock
jnp
daa
jne
fmulp
sub
loopne
adc
clc
mov
inc
mov
sub
sub
pop
xor
fisttps
rcl
push
repnz
enter
pop
enter
or
mov
dec
daa
jns
push
lahf
loope
int3
loopne
jb
mov
inc
test
pushf
or
fisttps
dec
dec
jb
insb
loope
fmulp
pop
enter
rcll
xchg
mov
ja
jecxz
loope
and
mov
mov
mov
leave
and
loopne
or
lods
xchg
inc
jb
loope
fmulp
sub
and
sub
pop
dec
adc
nop
sbb
pop
fisttps
int3
xor
in
int3
fmulp
loopne
push
push
push
es
inc
jb
movsb
or
test
je
loope
xchg
sbb
nop
loopne
xchg
or
ror
or
ret
loopne
movsb
mov
or
movsb
xchg
loopne
nop
cmp
and
fmulp
cmp
in
insb
loope
loope
inc
rclb
and
cmovae
dec
loopne
loopne
loop
sub
xchg
int3
loope
leave
and
sub
xchg
or
sbb
in
jecxz
jecxz
and
and
jecxz
in
push
and
loop
fisttps
and
in
dec
fisttps
sub
push
leave
and
insb
loope
cmp
fs
or
sub
ror
and
or
sub
sub
mov
xchg
dec
dec
loope
mov
in
xchg
and
and
int3
int3
sbb
xchg
sbb
or
int3
nop
sbb
xchg
or
xor
in
insb
loopne
fisubs
lea
xchg
inc
rcrb
fsubrp
leave
mov
pusha
and
dec
push
loope
dec
inc
and
dec
sub
leave
and
xchg
dec
jecxz
dec
inc
jb
push
jecxz
jecxz
jecxz
and
jecxz
loop
inc
jb
push
fildll
lea
xchg
sbb
insb
loope
mov
or
loopne
or
jle
loopne
repz
mov
xor
test
loopne
mov
dec
push
loopne
in
lods
xchg
and
stos
push
xor
repz
jbe
dec
inc
inc
movsb
add
add
xchg
mov
je
jno
pusha
adc
fwait
inc
outsb
mov
jne
jne
or
aaa
adc
cmp
nop
xor
cmp
cmp
nop
inc
inc
dec
dec
cmc
nop
inc
push
push
push
pop
sbb
stc
loop
ja
push
dec
jo
insb
cmp
sbb
je
push
and
pop
incb
wrmsr
pop
add
adc
lods
addr16
dec
inc
adc
insb
jo
pushf
pushf
pushf
pushf
js
orb
nop
xchg
cwtl
pushf
pushf
pushf
pushf
pushf
mov
inc
icebp
add
inc
jp
imul
push
inc
adc
imul
hlt
das
sub
dec
inc
inc
fistpl
mov
ss
cli
out
push
or
js
adc
out
inc
addr16
inc
out
add
inc
mov
rclb
mov
sbb
push
fcoml
int3
or
jbe,pn
sub
int3
enter
inc
and
enter
sbbl
sahf
pop
inc
pop
int3
clc
or
and
rcrb
jne
mov
nop
dec
rcl
in
leave
repz
aam
or
xchg
xor
aam
sub
push
aaa
es
jne
push
adc
and
loop
outsl
cmp
or
xor
push
add
dec
lds
test
cmp
aam
loopne
leave
dec
pop
fildll
sbb
daa
fisubrs
sbb
rcll
add
mov
fisttpll
out
std
loope
dec
fildll
push
sbb
jae
loopne
mov
sub
mov
shl
adc
xchg
int
sub
dec
and
pop
mov
enter
or
fdivrl
or
or
pop
lds
or
sbb
call
mov
out
xor
mov
enter
int
aaa
add
data16
inc
sbb
xchg
push
js
arpl
in
in
and
mov
in
out
stos
pop
jb
in
mov
mov
or
pop
xor
dec
and
sbb
xchg
test
add
xchg
jl
aad
mov
cmp
xor
les
in
in
jb
xchg
pushf
in
out
in
xor
dec
dec
out
in
in
shlb
aad
rol
pop
leave
and
add
out
add
mov
or
stos
mov
cmove
jne
fsubr
int3
repz
shrl
jb
dec
jb
insb
fists
add
cltd
pop
add
sti
rol
cmp
sbb
mov
xlat
out
sbb
pop
sbb
and
loopne
push
enter
loope
insl
dec
lcall
sub
paddq
or
push
enter
sub
fcomps
cltd
jno
loope
sbb
inc
arpl
cmp
bound
js
or
ret
inc
push
pop
dec
aam
jne
sub
fisttps
lods
loope
stc
repnz
or
lods
fdivrl
or
addl
push
lock
adc
add
movl
movups
cmpb
xchg
mov
pusha
jge
and
in
dec
fildll
mov
in
lea
cld
mov
shl
cli
mov
ja
push
sub
inc
ret
js
sbb
xor
or
outsb
adc
jp
mov
push
jns
cmpsb
add
or
faddp
sub
inc
mov
mov
dec
push
daa
leave
xchg
ret
mov
sbb
ss
adc
in
push
and
mov
xchg
add
or
fcomp
arpl
insb
inc
sub
in
jne
enter
push
test
xchg
adc
fisubrs
cmp
lea
test
inc
add
mov
sub
aam
rclb
int3
int3
mov
aam
xchg
cld
dec
adc
mov
add
mov
cmp
sub
adcl
adc
lds
aas
xchg
nop
ss
cmp
mov
xchg
aas
imul
add
or
and
and
stos
adc
cmp
fildll
sub
call
mov
sahf
mov
ret
enter
pop
movsl
jl
cmp
cmp
sub
imul
into
and
rorb
and
mov
sbb
test
jo
adc
sbb
and
out
fisubrs
sub
jae
lds
sub
pop
sarb
cltd
out
stos
test
cltd
movsb
cmp
mov
in
and
in
in
out
cs
xor
inc
cs
push
push
dec
push
add
xchg
outsl
push
and
adc
inc
aad
jg
xchg
inc
jb
in
lods
mov
fucomip
push
cmp
inc
pop
je
sbb
jns
insb
adc
sub
xchg
dec
sub
sub
push
in
sub
xor
movsl
loop
inc
jb
push
in
in
in
and
xchg
mov
in
movsb
mov
push
loop
div
pop
mov
or
clc
xchg
lret
cld
cld
decb
enter
and
in
in
inc
jb
push
in
in
in
imul
int3
add
movsb
or
rcl
leave
gs
cs
mov
add
jno
mov
and
lods
dec
fildl
fimuls
gs
lret
movsb
test
add
mov
mov
push
xchg
loop
insb
in
sbb
rcr
loope
push
pop
je
xchg
xor
test
jb
nop
lret
test
rolb
pop
js
in
inc
add
dec
loopne
leave
and
and
insb
fisttps
jb
push
loope
loopne
loopne
and
xchg
insb
sub
xor
in
cs
push
pop
xchg
add
jl
mov
and
and
loopne
loopne
jb
push
leave
fisttps
sub
or
sbb
jb
xchg
push
loope
and
sbbb
sub
inc
xchg
lret
inc
jb
xchg
add
inc
scas
xchg
jmp
or
insb
mov
cmp
insb
xor
loope
std
clc
std
in
leave
lret
cld
std
cld
std
test
xchg
push
leave
xchg
mov
or
addb
mov
or
mov
mov
mov
xor
inc
int3
mov
jecxz
adc
sbb
sub
or
sub
jecxz
pop
sbb
nop
lret
xchg
cwtl
cwtl
pushf
add
add
mov
xchg
nop
fisttps
cs
loope
inc
sbbb
inc
inc
jb
nop
lret
inc
fs
push
xor
xor
loope
sub
in
sbb
insb
fisttps
sub
and
and
or
dec
xchg
or
lret
and
xor
xor
or
sbb
cmp
add
jg
push
loopne
and
xchg
sub
jecxz
push
xchg
jmp
add
dec
loope
shlb
xchg
sub
push
leave
mov
lret
fisttps
sub
inc
jb
loopne
xchg
xor
push
xchg
jecxz
loop
daa
in
mov
cld
hlt
cld
clc
cld
mov
cld
cld
cld
cld
cld
and
add
xchg
and
fisttps
mov
mov
add
and
dec
ficompl
push
inc
inc
fisttps
sub
inc
xchg
and
insb
jecxz
xchg
or
mov
push
in
and
inc
dec
fldcw
inc
dec
push
fisttps
addb
jo
xchg
pop
adc
xor
nop
hlt
sbb
and
or
sub
dec
push
leave
xchg
insb
jecxz
pop
enter
dec
je
and
jl
xchg
dec
xor
inc
repnz
sbb
nop
push
lea
xchg
dec
cld
cld
cld
jns
inc
imul
loopne
and
xchg
and
or
leave
and
loopne
jecxz
xor
xchg
push
aaa
cld
cld
cld
pop
push
mov
cld
xchg
lret
cld
cld
cld
sbb
add
lea
loop
inc
xor
in
sbb
insb
fisttps
and
repnz
loopne
insb
movsl
add
jecxz
sti
cs
sti
sti
leave
and
leave
lds
and
lds
mov
push
dec
push
leave
inc
and
sub
insb
dec
mov
dec
or
or
movsl
inc
lea
push
mov
in
add
enter
add
shlb
and
or
adcb
or
lea
in
int3
loopne
loopne
nop
sbb
and
jb
xchg
fisttps
sub
and
xchg
inc
loop
out
nop
cmp
in
dec
in
jb
push
in
in
in
and
xchg
mov
inc
jb
push
jecxz
loop
in
and
xchg
int3
fsubp
in
inc
jb
push
loopne
loope
add
rcll
pushf
add
sbb
loopne
loop
pushl
adc
loop
int3
sbb
inc
jb
sub
int3
loopne
dec
push
leave
xchg
lods
loopne
jns
inc
jb
or
out
sub
repnz
in
loope
mov
sbb
setbe
das
int3
in
inc
sbb
lods
and
and
loop
in
jb
push
leave
loopne
fisttps
xchg
sbb
inc
loop
out
jb
push
leave
int3
loope
fildll
sbb
inc
loop
out
push
leave
stos
in
in
loopne
loop
mov
test
sub
xchg
mov
js
cli
js
sbb
jo
nop
pop
add
insb
insb
cmpb
push
cmpb
push
jns
pop
or
pop
mov
sbb
in
sbb
or
filds
pop
movb
and
cmp
push
in
cmp
cmp
cmpb
pop
push
in
xor
sub
xor
dec
and
and
and
mov
push
outsl
adc
mov
pop
nop
push
add
iret
or
setbe
cli
cli
stc
add
in
and
sbbl
test
add
sbbl
sbb
hlt
stc
shrb
stc
sbb
in
cmp
stc
stc
xor
in
dec
in
sbbb
addr16
cld
stc
push
add
cmp
int3
add
push
repnz
int3
aam
fistps
jb
dec
sarb
xchg
dec
fsub
stc
insb
arpl
lods
enter
cmp
add
rcl
xchg
sarb
push
stc
or
add
pop
sbb
mov
fs
lods
ret
jp
cmp
nop
outsl
std
test
jecxz
or
mov
adcb
push
ret
add
nop
cwtl
cwtl
xchg
xchg
enter
nop
nop
mov
mov
bswap
mov
lds
adc
sbb
in
repnz
cmpb
inc
cs
mov
dec
fidivrs
arpl
inc
push
je
jo
cs
shrl
pusha
pusha
cwtl
loopne
adc
cmp
add
adc
ss
aaa
and
xchg
iret
push
mov
lret
lods
aam
pusha
popa
aad
fs
movb
inc
mov
dec
dec
loopne
repnz
dec
xchg
pop
pop
pop
xor
mov
test
push
fs
stc
inc
inc
cmp
nop
lret
cmpb
inc
add
xor
mov
outsb
xchg
pop
mov
mov
ret
sub
xchg
lret
stc
stc
stc
add
push
sub
xchg
lret
loope
add
push
jns
xor
mov
fwait
mov
dec
pushf
movb
sub
push
or
fidivs
mov
cmp
fwait
outsl
xchg
orb
mov
xchg
xchg
fwait
enter
xchg
add
add
pop
repnz
clc
sbb
clc
dec
pop
jb
sbb
or
sbbl
push
lock
mov
cs
sub
mov
cmp
or
insl
pusha
jo
lock
lock
xor
and
js
in
mov
nop
jo,pn
clc
test
pop
dec
jae
push
call
push
sub
imul
repnz
xchg
faddl
push
sub
xor
je
xchg
and
enter
nop
dec
sti
or
mov
and
sbb
rorb
enter
shr
add
push
fdivl
and
fdivl
push
in
rol
roll
les
sub
rclb
in
mov
dec
xchg
xchg
mov
mov
and
mov
add
and
movsb
dec
xchg
xor
push
mov
or
push
sub
xchg
cwtl
xlat
nop
dec
mov
xchg
pop
lcall
sub
cwtl
pushf
dec
leave
nop
nop
dec
mov
mov
nop
lret
nop
mov
jb
test
adc
sub
xchg
and
sub
cmp
jo
lret
nop
mov
jb
nop
fs
and
xchg
xchg
sub
leave
gs
inc
mov
fs
or
and
xchg
push
gs
cs
push
dec
dec
or
or
dec
dec
inc
cmpsb
mov
push
sub
push
sbb
sub
push
xor
cmp
cmp
or
xchg
xchg
mov
cmp
mov
xor
xor
add
xor
inc
xor
xchg
sub
push
sub
and
popa
add
mov
add
sahf
cmp
push
shrb
or
sbb
daa
int3
stc
inc
ficoms
mov
jb
push
pushf
ds
add
sahf
xchg
mov
push
lock
add
xchg
je
pop
or
std
pop
lret
dec
test
add
inc
gs
or
mov
or
xchg
add
cmp
xor
mov
sub
pushf
repnz
xor
jge
enter
jb
lea
xchg
mov
dec
inc
dec
out
xabort
mov
mov
cmp
push
pop
iret
lea
enter
cmp
pop
inc
jecxz
pop
mov
cwtl
nop
inc
mov
pop
sbb
dec
xor
cwtl
add
enter
xor
sbb
mov
enter
sarb
sarb
lods
or
mov
mov
add
stc
iret
outsl
dec
cs
fnstsw
imul
fsubrp
or
add
pop
subb
push
test
or
push
jge
sbb
loop
daa
mov
int3
loopne
adc
and
add
fisubrs
xor
mov
lods
mov
daa
and
adc
stos
orb
ja
adc
sub
fsubrp
jnp
xor
movb
mov
ret
or
and
call
clc
cmp
nop
pushf
outsb
test
dec
fisubrs
pusha
xchg
dec
sub
jne
inc
jb
or
insb
and
adc
popf
adc
mov
mov
subb
test
inc
movsl
mov
sub
xchg
push
ret
loopne
lods
or
movsl
rcll
inc
popa
sbb
pop
les
fildll
mov
loopne
rclb
dec
push
jb
movsb
repnz
push
xor
sbb
call
movsb
jo
push
and
inc
in
or
loopne
insb
lret
and
mov
or
jb
gs
adc
jo
jecxz
les
xchg
pushf
or
jb
push
dec
lods
ret
cmpsl
sbbl
inc
pop
loopne
push
and
and
sub
dec
pop
fcoml
mov
inc
jb
int3
loopne
jns
into
xchg
insb
fcoml
je
push
adc
jo
xor
xchg
push
int3
and
sub
adc
xor
cwtl
mov
adc
enter
mov
mov
pushf
xchg
push
pop
mov
mov
and
and
lods
loopne
or
nop
dec
sub
cwtl
and
popa
scas
fildll
insb
cmpl
pop
jl
nop
add
cmp
mov
dec
or
sbb
xor
fwait
push
push
push
nop
lret
sbbb
shlb
mov
pop
nop
rorl
xchg
fs
loop
ret
jl
push
test
mov
rolb
pop
mov
nop
imul
jecxz
mov
pop
mov
adc
sbb
in
fadd
test
xor
sbb
and
jecxz
mov
mov
and
loop
sub
cmp
shl
int3
jb
push
leave
fildll
insb
fildll
adc
and
les
and
sbb
das
dec
adc
inc
jb
pop
sbb
sbb
pop
or
cmp
pop
mov
mov
push
push
sub
dec
insb
jb
fs
loope
mov
xchg
inc
fisubrs
mov
adcb
cmp
and
cmp
xchg
popf
mov
dec
or
sbb
cmpsl
mov
mov
adc
push
pop
xchg
cmp
mov
inc
sbb
cmp
insb
sbb
enter
js
enter
addb
nop
orl
cmp
and
and
and
test
dec
dec
dec
mov
adc
dec
add
movups
cmp
test
inc
stos
dec
pusha
loope
and
dec
push
push
pushw
xor
lret
xlat
pop
push
pop
cmovno
push
adc
fsubl
push
inc
mov
cwtl
push
out
es
pop
fisubs
sbb
loopne
cmpb
out
dec
insb
add
mov
std
ja
cli
xor
testb
dec
push
inc
xor
lcall
orb
adc
nop
ret
mov
cmp
pop
daa
fisttpl
inc
push
inc
inc
loop
jl
in
cmp
jbe
add
fsubrl
pop
cwtl
and
clc
insb
jp
inc
std
jl
jl
int3
divl
push
sbb
inc
add
inc
jl
stc
mov
lock
js
clc
adc
push
sahf
jge
movsb
bound
inc
jle
cmp
fists
mov
lock
inc
add
leave
xlat
insb
xchg
xchg
pop
cld
add
cmp
int3
ds
mov
mov
cs
cs
mov
mov
jl,pt
xor
and
outsb
inc
rclb
cmovae
pusha
repz
je
mov
sbb
mov
push
mov
dec
or
push
and
inc
je
jle
dec
or
add
inc
dec
or
lcall
outsb
je
out
xchg
outsl
dec
ds
push
in
aaa
and
aam
pusha
cs
inc
scas
cmp
fs
imul
outsb
in
fcomps
dec
sbb
sbb
push
fldl
inc
lds
stc
fsubs
inc
filds
jns
sbb
inc
dec
das
push
shll
xchg
inc
adc
adc
aas
movsb
dec
ud1
out
test
lahf
mov
fiaddl
subl
add
addl
pop
push
add
divb
push
xor
rolb
pop
inc
pusha
sti
pop
add
stc
fldenv
and
adc
imull
call
push
mov
adc
je
jbe
call
mov
adc
dec
in
scas
dec
or
es
iret
xorb
pop
xor
mov
daa
fistps
popa
dec
adc
repz
jmp
sbb
mov
sarl
icebp
add
insl
inc
push
sarl
ljmp
jl
pop
gs
and
call
lea
stc
jae
test
dec
sub
or
pop
insb
or
das
in
pusha
or
mov
mov
mov
inc
add
or
jl
and
in
inc
dec
push
aad
test
in
push
inc
call
das
fsubs
sbb
mov
adc
in
pop
jns
sbb
mov
sbb
mov
adc
xchg
lea
ficomps
push
in
push
push
xchg
pop
push
or
ret
andl
popa
call
out
xor
cmp
add
dec
xchg
gs
pop
aam
out
dec
or
pop
add
nop
dec
push
mov
pop
mov
sub
inc
cmp
add
mov
es
cmp
aaa
mov
loope
mov
cltd
lock
clc
cmp
or
inc
lret
add
cmp
mov
test
or
push
call
in
fldenv
mov
pop
push
or
call
mov
and
sbb
lcall
inc
inc
fisubrl
xor
xchg
out
xchg
outsl
nop
sub
pop
xchg
mov
out
and
pushf
or
jle
and
loopne
dec
and
cwtl
sub
std
inc
mov
cmp
mov
stc
push
loope
lahf
out
mov
sub
jne
pop
pop
or
adc
mov
inc
mov
jo
dec
jl
mov
nop
or
or
lret
adc
mov
daa
xchg
sbb
and
push
test
js
out
jb
imul
xor
roll
js
add
dec
or
or
push
xchg
mov
mov
or
testl
inc
add
bound
repz
aad
mull
xchg
mov
jecxz
popf
jecxz
int3
jbe
xchg
jb
mov
mov
scas
mov
sub
rcrb
jge
ss
cmp
mov
sub
call
pop
jmp
pop
dec
mov
mov
das
or
ja
cmpsl
stc
sub
jnp
shr
mov
adc
cmc
and
and
jns
push
adc
adc
js
add
pushf
cmp
pop
add
xchg
pop
sub
and
sbb
movsl
jbe
push
push
popf
push
pushf
and
outsb
data16
pusha
pop
in
or
fimuls
cs
sbb
xchg
add
pop
sti
push
inc
dec
cmp
cmc
iret
imul
popf
out
sbb
dec
fnstenv
xchg
fstl
add
int3
or
leave
or
add
xchg
addr16
cmp
xor
das
mov
cwtl
loope
cmp
jp
addr16
faddl
cmp
adc
and
add
or
neg
and
repz
ja
in
push
into
notb
movsl
and
cmp
lea
fbstp
rclb
insb
scas
and
shll
es
pusha
mov
cltd
insl
ds
pop
fs
pop
stos
outsl
hlt
push
mov
frstpm(287
sbb
std
cld
pop
fisubs
mov
mov
add
xorl
sbb
add
stos
clc
xor
mov
inc
mov
pop
cmpsl
jno
adc
dec
adc
sbb
cwtl
fnsave
std
filds
sbb
nop
cmp
bound
sbb
jno
push
mov
fdivrs
and
pop
aam
lods
ds
adc
and
dec
jne
pushf
xchg
into
push
fs
xchg
stc
orb
out
cltd
imul
adc
mov
outsl
mov
or
xchg
aam
shll
jecxz
xor
mov
shlb
lea
mov
mov
test
test
ror
and
xchg
mov
or
gs
loope
ficompl
inc
dec
push
inc
push
rcrb
push
inc
pop
adc
aaa
cmp
jno
mov
decb
mov
adc
mov
push
arpl
push
push
outsl
scas
mov
push
idiv
repz
cmc
mov
loop
ret
pop
dec
popa
imul
adc
inc
repz
pop
fsubl
es
mov
pavgb
or
dec
outsl
lock
fbld
mov
cld
pop
inc
or
jecxz
inc
pop
push
hlt
mov
push
insb
and
xor
in
pop
lds
fcomp
push
sub
into
wrmsr
aaa
xor
mov
add
inc
adc
scas
movsb
adc
adc
sbb
fstl
adc
sbb
enter
and
sub
inc
cs
xor
test
dec
adc
dec
mov
test
in
pop
aas
mov
and
cs
jo
adcb
and
cs
mov
mov
shl
and
adc
mov
add
inc
jb
pop
and
pop
and
leave
inc
pusha
or
jb
mov
pop
loopne
add
jo
shrl
xchg
mov
dec
fisubl
aas
rolb
mov
xchg
pop
leave
lock
add
dec
jo
adc
pop
and
enter
cmp
xor
sub
sbb
fwait
int
xchg
sbb
and
and
ljmp
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
rcrb
xchg
mov
push
jne
lcall
aaa
jns
pop
and
popa
je
xor
mov
movb
xchg
testl
mov
push
push
adc
das
fbstp
arpl
xchg
mov
sbb
addb
jmp
xlat
cmp
dec
jnp
test
push
mov
pop
xchg
or
and
neg
ror
es
js
inc
addb
repz
pause
cwtl
mov
cmp
mov
loopne
iret
repz
lock
add
jns
out
adc
and
xor
jns
out
inc
dec
push
pop
sahf
out
sahf
pusha
push
jo
out
nop
cwtl
mov
ret
add
inc
out
sub
gs
pushf
je
js
and
in
inc
sbbl
or
leave
inc
in
leave
shlb
popa
and
js
mov
paddusb
call
clts
jle
push
adc
adc
adc
movb
cmp
repz
and
dec
pop
push
jl
pushf
mov
cmpsl
stc
cmp
shl
lock
addr16
sahf
and
inc
push
call
xor
adc
sub
pushf
js
jbe
add
sbb
jmp
inc
out
fisubl
pusha
pop
insb
push
sub
xor
loope
push
inc
lds
es
and
push
cwtl
imul
rep
ja
inc
hlt
push
adc
and
push
sbb
mov
pop
add
pop
xor
or
imul
push
call
neg
jae
adc
adc
incl
incl
fmuls
call
pushl
lock
and
jns
stc
mov
or
push
add
or
iret
repz
add
iret
repz
adc
adc
cmp
call
adc
jns
jnp
sbb
push
sbb
push
adc
sahf
out
orb
sbb
or
add
adc
sbb
pop
sub
cmp
repz
push
push
sbb
fs
jl
fistps
nop
push
add
jns
mull
int3
lahf
out
sahf
add
or
out
ficoms
mov
add
sahf
mov
xor
sub
sbbb
xor
repz
mov
mov
cmp
xchg
mov
mov
int3
hlt
daa
outsb
mov
out
or
mov
pop
pop
inc
add
add
add
mov
outsb
jg
add
mov
cmp
pop
punpckhdq
flds
xchg
add
jle
jmp
rolb
or
mov
ret
or
or
idivb
ret
sbb
inc
mov
sub
push
add
sbb
cli
cli
xchg
shl
cli
in
repz
lock
add
sar
cmc
out
shrl
jg
out
xor
clc
faddl
dec
cmc
cmc
pusha
push
cli
jmp
add
fidivs
incl
movsb
clc
imul
out
add
cmc
mov
jns
scas
loopne
adc
push
out
aad
and
lods
add
xchg
mov
pop
in
add
xchg
mov
pop
repz
test
cmc
cli
add
push
pop
cli
lock
enter
por
jg
aad
fidivrl
push
shlb
jl
ds
push
mov
aad
aas
incl
dec
int
pop
add
cli
xorb
int
cmp
jg
pop
inc
mov
fdivl
fcoml
movsl
sub
push
shr
int3
dec
shrl
hlt
movsb
pusha
dec
mov
aam
cmp
mov
out
jg
inc
int3
mov
and
in
inc
adc
cld
dec
subb
xlat
incb
aas
cld
repz
jp
inc
mov
out
call
cli
rcrb
mov
mov
and
jmp
mov
loopne
mov
push
nop
out
nop
add
lahf
jg
pop
aam
push
mov
inc
fisubl
out
ret
stc
out
add
and
mov
mov
jmp
mov
cld
cmpsb
push
cwtl
sti
cwtl
add
dec
adc
add
pop
cmp
jno
mov
test
iret
aas
mov
push
imul
jo
sarb
mov
loopne
in
add
cli
lcall
xor
mov
push
scas
out
out
add
cld
mov
fsub
add
into
cli
add
jp
iret
add
mov
cld
cld
dec
ror
add
inc
loopne
cmpsl
sub
mov
jle
fucomi
fistl
pushf
mov
ret
cld
repz
fcompl
sbb
into
roll
mov
fdivrs
pop
stos
mov
fcompl
scas
sbb
push
nop
cmp
add
push
je
stc
out
add
roll
js
xor
add
out
test
mov
rorb
adc
jo
mov
aaa
adc
loop
outsb
mov
pop
xor
xchg
jo
add
mov
jnp
dec
jl
mov
mov
out
sub
lods
repnz
aas
fidivl
add
frstor
mov
push
and
push
ror
sbb
cld
mov
fiadds
sub
push
mov
cmp
add
cmc
outsl
mov
inc
cmpb
pop
mov
cmp
nop
add
cmc
add
fistps
push
imul
cmpsb
std
sbb
mov
push
jnp
jnp
faddl
sahf
push
test
jl
fists
fucomip
cmp
or
and
mov
sub
push
add
push
icebp
add
mov
cmp
out
in
cld
or
sbb
out
jl
repz
pop
xor
push
inc
cmp
repz
pop
pusha
push
repz
push
push
fiadds
lahf
cwtl
nop
pop
add
pop
sub
add
mov
mov
jg
add
and
fcomps
inc
push
out
nop
fcoms
sbb
sub
add
fmull
fbstp
insb
test
daa
and
fsubrl
add
and
pop
xchg
fcomi
xorl
mov
aaa
add
push
jp
inc
iret
or
or
jns
add
pusha
add
or
notb
xor
inc
or
sahf
std
sbb
sub
cmp
out
stc
dec
clc
pusha
mul
jns
out
testb
sahf
hlt
mov
shl
jns
out
icebp
call
cmp
repz
repz
in
dec
jmp
ljmp
add
xchg
push
pop
fwait
mov
loope
cmpsb
flds
adc
dec
cwtl
mov
paddusw
pop
inc
jp
mov
bound
inc
or
or
add
or
push
xor
out
sahf
inc
push
fs
cwtl
jns
out
lods
mov
cmp
out
add
sbb
xor
repz
dec
pop
push
loop
cmp
lahf
out
adc
pop
jno
movntq
out
jo
jne
adc
sbb
fcoml
daa
push
push
jmp
jae
das
ror
insl
aaa
xchg
xchg
mov
or
int
xchg
sahf
out
sahf
stc
mov
sahf
out
cld
std
incb
out
sahf
out
test
ja
xchg
jg
push
mov
mov
addr16
clc
add
roll
push
repz
repz
mov
enter
ror
loopne
inc
push
aas
and
jne
cmc
mov
or
insl
dec
xor
adc
add
iret
es
add
in
mov
jb
sbb
and
outsb
mov
sbb
add
gs
fs
into
sub
jl
fistl
dec
loopne
mov
fists
jns
aaa
adc
or
or
sahf
out
pop
sbb
and
cmp
outsb
in
outsl
repnz
insb
imul
enter
enter
add
add
out
xor
or
xchg
out
sahf
xor
add
addb
push
iret
repz
or
sbb
xor
inc
lock
pusha
mov
xchg
pop
pop
cmp
cmp
or
or
ja
cmp
or
or
in
dec
add
movups
insb
mov
ds
pop
das
jo
jl
pushf
pushf
cmp
sarb
or
xchg
mov
pushf
mov
mov
xchg
inc
loopne
aas
pop
sbb
in
daa
nop
push
cmp
sahf
out
cmp
push
adc
dec
dec
dec
sub
dec
dec
dec
lock
xchg
fcomi
fmull
adc
jecxz
sub
xor
or
fs
add
xchg
xchg
xchg
test
aas
pop
repnz
daa
sbb
push
push
pop
jno
jb
cmp
aas
pop
daa
daa
daa
pop
ljmp
or
daa
daa
daa
mov
daa
daa
daa
daa
push
adc
daa
jb
les
daa
daa
daa
daa
bound
movsb
add
daa
daa
daa
addb
daa
daa
daa
daa
pop
sbb
jp
aam
daa
daa
daa
daa
push
mov
daa
daa
daa
daa
mov
add
push
push
rolb
jb
jb
jbe
int3
jb
jb
pcmpgtd
lods
jb
jb
push
xchg
jb
jb
or
pushf
jb
jb
arpl
fsubr
in
jbe
aas
outsb
cs
fisttpl
aas
mov
ljmp
call
cmp
dec
dec
jno,pn
ret
in
popa
and
in
inc
loop
in
dec
dec
sbb
in
shrb
dec
dec
dec
dec
mov
mov
in
dec
repnz
adc
push
incb
add
xchg
xchg
or
lret
xchg
xchg
xchg
xchg
stos
add
mov
lcall
fidivrl
cmp
mov
or
cmp
lea
mov
adc
jae
or
cmp
arpl
cmpsb
add
inc
out
sbb
jnp
cmp
mov
mov
cmp
cmp
mov
cs
xchg
or
ja
inc
dec
dec
aaa
into
addr16
in
daa
scas
pop
xchg
in
inc
out
pop
pop
in
inc
dec
sahf
jg
popf
fsubrl
in
outsl
aas
das
mov
pop
dec
es
mov
and
es
mov
mov
cltd
sub
mov
cltd
and
mov
cltd
dec
movsl
in
xchg
mov
mov
sub
mov
in
and
mov
cltd
dec
es
ret
mov
and
es
dec
and
and
stos
leave
inc
xor
and
fstpt
sti
dec
and
leave
cmpsl
out
leave
inc
xor
and
xor
and
leave
lahf
fistpll
incl
repnz
fistps
adc
dec
push
jns
push
add
xchg
aaa
stos
cmp
inc
jg
push
pop
add
and
cmp
in
or
push
or
pusha
incl
orl
pop
push
and
orl
enter
or
or
aad
xchg
fldenv
and
pop
jo
jb
or
push
cmp
xor
test
and
jl
addb
into
jp
add
rclb
xor
rcl
and
dec
out
jae
popf
lods
mov
sub
pop
and
or
insb
sbb
inc
lea
sbb
insb
mov
xor
gs
daa
xchg
pop
jo
andb
test
pop
in
enter
add
add
jmp
add
inc
xchg
or
and
mull
outsl
pusha
or
lret
inc
dec
dec
add
jae
subl
and
xor
in
fdivl
mov
mov
add
clts
pop
aas
sahf
out
iret
jg
inc
pushl
out
pushl
sbb
and
cli
loop
dec
pop
rolb
or
xchg
add
inc
iret
mov
dec
or
fsubp
jns
sub
sub
add
cmp
out
and
cmp
dec
push
mov
jne
gs
in
adc
sti
xor
dec
mov
and
xor
sbb
sarb
jmp
imul
mov
xchg
data16
sbb
inc
lcall
dec
push
mov
enter
mov
lock
mov
cld
decb
movsl
jge
mov
hlt
or
sbb
icebp
or
adc
in
xor
mov
lods
lret
add
sahf
inc
mov
sbb
mov
add
je
mov
jg
mov
and
scas
adc
add
mov
dec
aad
jne
mov
mov
movl
pop
adc
add
pop
adc
sub
sub
cmp
mov
push
mov
cmp
loope
sbb
sahf
bound
sbb
mov
adc
popf
outsl
mov
push
push
scas
mov
mov
xchg
mov
jns
add
pusha
idivb
adcb
imul
dec
sbb
sbb
push
cmpl
inc
mov
enter
out
in
inc
sub
adc
lods
xor
mov
add
fisubrl
sub
rorb
inc
rcll
inc
inc
pop
jnp
scas
rorb
jmp
in
mov
push
das
or
add
js
lea
lds
dec
mov
or
or
and
outsb
loope
in
dec
scas
cs
inc
sub
fdivrs
mov
or
jnp
or
pushf
lahf
fldenv
xchg
sbb
jecxz
add
insl
add
movb
mov
or
add
fsubrl
jb
je
daa
enter
pop
hlt
jmp
imul
xor
gs
and
in
rcrb
xchg
in
push
jns
mov
das
call
cltd
insb
cs
sbb
insb
pop
in
imul
jmp
xor
loop
ja
arpl
sub
jmp
out
lds
mov
clc
dec
sbb
gs
sub
aam
sub
shll
pop
shr
or
cld
pop
fisubrl
sub
int3
jmp
pop
ja
outsb
insl
popa
lret
ss
mov
xchg
xchg
sub
enter
ret
lds
cmp
xor
les
ret
add
push
out
jo
sub
push
sahf
out
sahf
sbb
xor
dec
pop
jns
out
fs
mov
lods
mov
xchg
mov
pop
outsl
imul
in
jecxz
ret
and
test
and
in
pop
das
add
out
push
sub
pop
je
repz
test
sahf
cmpsl
stc
cmp
add
and
jns
out
pop
jo
mov
out
fdiv
add
adc
repz
sbb
dec
pusha
je
cmp
repz
mov
repz
push
cmp
jo
iret
repz
cwtl
movsb
mov
repz
inc
out
sahf
out
insb
adcb
mov
lcall
dec
pop
je
idivl
repz
shl
cld
push
sahf
out
pop
fwait
push
sub
dec
push
jns
pushf
mov
aam
cmp
out
add
adc
iret
repz
push
fs
test
sahf
out
cmp
in
add
out
cmp
jl
repz
out
mov
iret
repz
sbb
dec
fs
cmp
repz
mov
repz
push
xor
fs
iret
repz
lods
fdiv
jns
cmpsl
stc
add
sbb
push
out
sahf
out
js
mov
sahf
enter
or
sahf
out
pusha
insb
mov
shr
add
cmp
inc
push
push
pause
movsb
mov
lcall
dec
sahf
out
sahf
pusha
jo
mov
out
fdiv
add
movb
sahf
out
sahf
inc
push
adcb
in
adc
repz
fs
mov
stc
cmp
int3
loopne
adc
xor
out
sahf
dec
pusha
test
idivl
add
sahf
out
sahf
push
insb
jl
test
into
shl
aam
clc
cmpsl
pop
test
cmp
repz
and
dec
fs
repz
mov
cmpsl
stc
cmp
adc
sahf
out
pusha
js
mov
out
shl
cld
adc
jns
xor
push
insb
and
sahf
out
mov
repz
add
jo
iret
repz
test
fdiv
iret
repz
push
xor
cmp
repz
pushf
mov
loopne
sahf
out
clc
or
and
dec
out
sahf
out
je
cwtl
test
repz
rcl
add
repz
push
sbbb
fdiv
or
sbb
dec
fs
out
sahf
mov
cmp
sarl
sbb
pop
repz
repz
cwtl
lods
enter
iret
in
or
jns
push
adcb
aam
lock
mov
sahf
out
sahf
sub
pop
je
cwtl
jns
out
lods
fdiv
mov
mov
out
fiadds
cmp
xchg
jl
out
test
fsubr
add
repz
rcll
cmp
fs
repz
js
cwtl
lods
rcr
out
cmp
cld
sbb
sub
jns
out
push
pop
je
xchg
out
sahf
out
mov
fdiv
iret
repz
add
sbb
pop
jo
iret
repz
nop
pushf
mov
imul
hlt
or
out
cmp
js
out
sahf
nop
test
int3
loopne
out
fidivrs
mov
dec
sahf
out
sahf
pop
insb
adcb
jns
fdiv
or
repz
push
insb
or
cmp
nop
mov
sahf
out
mov
xor
jns
out
pusha
jo
cwtl
lods
repz
out
int3
in
or
sbb
inc
push
fs
iret
repz
mov
lcall
sub
out
sahf
out
push
jo
nop
lahf
out
sahf
test
aam
hlt
or
cmp
repz
sub
push
fs
repz
xchg
movsb
mov
clc
cmp
rcl
hlt
mov
jns
push
and
inc
push
fs
out
je
xchg
movsb
mov
jns
out
shl
hlt
add
iret
repz
adc
dec
pop
insb
cmp
repz
mov
iret
repz
loopne
add
or
jns
out
xor
fs
out
sahf
je
nop
mov
out
aam
add
sbb
repz
repz
je
iret
repz
pushf
mov
shl
hlt
repz
mov
sub
inc
iret
repz
pop
push
lcall
add
adc
out
and
push
insb
test
jns
out
mov
in
iret
repz
adc
sub
pop
je
cmp
repz
mov
fsubr
iret
repz
push
sub
fs
repz
mov
iret
repz
or
sbb
out
sahf
out
push
pusha
jo
sahf
out
sahf
nop
mov
cmp
sarl
and
push
fs
repz
movsb
mov
iret
fdivr
or
and
sahf
out
sahf
dec
push
out
out
fsubr
add
mov
jns
inc
push
adcb
aam
cld
or
repz
shrl
cmp
pusha
mov
repz
pushf
mov
fdiv
add
out
lcall
jns
out
jo
xchg
movsb
mov
int3
call
iret
repz
cmp
mov
lods
rcl
hlt
jns
cmpsl
stc
add
adc
cmp
jns
out
jl
movsb
mov
repz
in
or
cmp
je
ds
repz
enter
iret
jns
out
xor
mov
enter
and
repz
mov
out
lcall
xor
out
mov
lock
and
cmp
repz
push
cmp
movsb
mov
repz
mov
push
fs
repz
xchg
mov
call
jns
adc
xor
pop
je
sahf
out
mov
dec
repz
sbb
pushf
test
repz
mov
int3
fsub
lock
mov
repz
cmp
push
cmp
pop
movsb
xor
sahf
out
pop
mov
mov
cmp
repz
add
adc
repz
repz
dec
pop
fs
jl
lahf
and
xor
imul
cs
rclb
push
push
or
mov
je
and
out
mov
ficomps
shl
and
push
test
pushf
testl
xchg
cmp
sub
sbb
inc
test
xor
xchg
xor
pop
adc
dec
sahf
ss
xor
out
push
push
sub
icebp
ds
push
nop
pop
pop
mov
test
mov
push
insb
push
data16
fidivrs
into
js
aam
into
and
daa
call
rolb
xchg
push
lea
or
xor
fsubp
xchg
push
call
xchg
mov
or
dec
js
popf
pushw
movb
dec
orb
dec
sti
fidivrs
negb
mov
pop
test
out
jl
inc
or
pop
inc
mull
ds
sbb
iret
loope
jle
inc
adc
push
clc
ss
xchg
mov
loopne
scas
mov
push
sub
fcomps
dec
out
cmc
test
lods
jp
lahf
sbb
mov
xor
cmpsb
fmuls
data16
dec
inc
divl
adc
out
aam
dec
sbb
f2xm1
imul
inc
pop
rolb
mov
into
fadds
inc
cwtl
shlb
decb
push
mov
iret
dec
sub
hlt
jbe
xchg
iret
sub
adc
mov
in
jnp
jnp
jl
dec
rorb
jnp
xorl
shlb
push
mov
add
jns,pt
pop
iret
add
xchg
mov
fidivrs
push
dec
test
cmp
jp
cmp
lock
dec
cmpsl
mov
icebp
fiadds
push
cmp
push
jnp
dec
rcrl
fs
andl
sahf
cmp
sbb
negl
push
pusha
pop
adc
cs
sbb
dec
mov
fadd
jnp
loopne
mov
mov
roll
scas
loopne
enter
cmp
mov
cmp
push
into
mov
in
or
adc
push
xchg
adc
int3
es
sahf
cmp
lods
jle
into
add
sub
jnp
enter
push
inc
cmpsl
dec
lock
and
es
outsb
data16
mov
inc
idivl
mov
fistpll
out
into
push
out
movsb
into
jmp
mov
lock
int3
or
inc
and
out
adc
out
cs
sbb
xrstor
xor
ret
or
push
inc
dec
ret
roll
adc
out
imul
jl,pt
pop
mov
shld
push
dec
pop
fidivrs
fdivp
ss
push
and
xchg
pop
mov
jecxz
movsb
jnp
out
mov
mov
mov
dec
sbb
cld
shlb
jnp
negl
shlb
out
pusha
pushf
push
jnp
iret
add
xchg
cmp
push
sbb
les
dec
push
psrld
mov
pop
push
jp
pop
push
xchg
outsb
cmp
or
nop
push
pushf
xchg
mov
inc
adc
xchg
sbb
sbb
pop
dec
or
mov
mov
rcrb
ret
lds
push
faddl
cld
pusha
push
fsubr
imul
je
movsb
shll
scas
cmp
dec
mov
imull
push
pushf
inc
jbe
push
mov
dec
fstpt
or
jnp
pxor
xchg
ss
lods
ficoms
leave
js
mov
dec
cmp
push
ds
mov
jnp
ds
dec
xor
xchg
push
lock
mov
sub
fimuls
in
pop
outsl
add
in
faddl
fcoml
out
loopne
push
shl
enter
test
jo
cmp
data16
mov
int3
jp
xor
enter
out
jns
push
mov
push
fs
mov
aam
testb
jp
neg
sbb
dec
xor
push
jge
xchg
fsubs
js
out
gs
ds
inc
dec
push
pop
out
jnp
push
pop
mov
push
sub
push
push
mov
call
gs
xchg
fldl
or
dec
inc
adc
push
and
add
subl
push
lahf
or
cmp
adc
inc
push
mov
push
mov
xchg
adc
enter
nop
inc
add
add
stc
or
pop
add
push
dec
mov
push
add
fidivrs
or
inc
sbb
inc
and
dec
jl
mov
push
pop
dec
aaa
push
pop
dec
add
mov
add
adc
dec
imul
loop
push
inc
mov
add
dec
add
es
ja
fidivrs
push
inc
cmp
mov
in
mov
aaa
or
add
scas
push
fdivp
loopne
dec
inc
xchg
push
add
dec
mov
push
bound
push
cmp
inc
cmp
pop
dec
push
pop
push
aaa
push
xchg
sbb
in
pop
or
iret
add
xorl
or
dec
mov
dec
push
sbb
pop
xchg
dec
inc
cmp
js
fcompl
xor
push
cmp
add
cmp
or
sbb
pop
mov
and
add
cmp
add
mov
cmp
jns
jl
add
or
repz
add
xchg
nop
addb
jl
nop
insl
add
incb
cld
jg
clc
pushf
cmp
mov
jmp
rol
sahf
mov
cld
add
pop
or
push
aas
shlb
dec
jg
add
inc
leave
xor
add
ss
in
in
or
push
mov
insb
xchg
dec
add
add
dec
in
rorl
psubb
addr16
int
out
push
out
ficompl
cmpsl
loope
cmp
add
loopne
pop
movsl
loope
lock
sbb
pop
push
aas
fidivrs
pop
das
andb
mov
fwait
jns
xor
push
pop
std
loope
gs
push
fldl
jns
inc
loopne
jl
pushw
jbe
cmp
out
jg
sbbb
add
pop
sahf
cmpl
pusha
iret
add
rolb
incb
lock
out
loope
aas
pushl
or
push
add
fmulp
jnp
nopl
es
push
add
sahf
out
pop
nopl
into
push
add
mov
or
jge
adc
daa
add
add
out
fnstsw
comiss
dec
pop
outsb
stos
push
loopne
daa
add
pop
mov
jl
std
clc
lock
aas
rcrb
inc
imul
inc
je
jmp
pop
outsl
clc
popl
adc
add
je
loopne
pop
sbb
repz
test
inc
nopl
xchg
pop
cmp
pop
jg
decl
mov
pop
in
imul
insb
les
test
cmpl
cmpxchg
out
sahf
pop
cs
and
add
cld
stos
enter
cmp
fsubrl
pop
sub
push
aaa
pop
lock
inc
jo
adc
jno
cs
fwait
or
cmp
or
push
mov
insb
ss
inc
add
inc
addl
data16
push
pusha
xor
sbb
push
sbb
sbb
cmc
mov
adc
jbe
lock
dec
sbb
cmp
sbb
mov
je
xchg
shl
xchg
xchg
adc
pop
push
cs
push
push
adc
fnstenv
adc
add
and
add
dec
incl
and
enter
mov
cmp
or
movsl
cs
mov
daa
sbb
cmp
mov
test
aas
daa
and
xor
lahf
and
daa
and
jnp
push
adc
cmp
clc
dec
push
dec
out
mov
andl
dec
push
push
enter
daa
cmp
daa
xchg
mov
outsw
push
sbb
js
dec
addl
fisttps
adc
xlat
mov
cmc
sbb
popa
cmp
mov
pop
xor
cmpsl
lahf
adc
pop
test
cmp
inc
and
cmpl
xor
and
mov
inc
push
movsl
daa
cld
sub
push
cmp
aas
xor
mov
sahf
xor
dec
sub
clc
xor
cmp
dec
and
push
jbe
lock
es
and
push
es
jo
mov
and
cmp
jmp
rcll
pop
push
cmp
fs
xlat
lret
fcomip
out
push
lret
push
and
xor
xor
mov
loop
push
xsavec
js
push
xbegin
jb
andl
inc
mov
add
ja
testl
pop
cmp
inc
or
dec
ljmp
pop
mov
xor
outsb
daa
inc
aad
in
mov
xorl
in
js
out
in
outsb
mov
adc
or
xchg
jg
clc
add
pop
pop
ret
add
mov
daa
fldl
mov
es
inc
push
aas
sbb
ds
xor
inc
arpl
daa
in
jecxz
ds
shll
xor
arpl
add
mov
cmp
inc
sub
in
repz
fs
daa
push
sub
es
lret
out
daa
dec
lret
ljmp
mov
daa
dec
add
out
hlt
fwait
jle
xor
in
repz
mov
push
sub
jecxz
push
cmp
adc
addl
inc
xor
in
inc
xchg
ss
imul
or
stos
movsb
out
sub
enter
or
daa
xor
cld
xchg
cmp
arpl
das
es
push
out
js
bound
in
push
inc
incl
addr16
sub
push
push
xor
fisubrl
daa
repz
sub
push
push
add
outsb
data16
inc
push
into
xor
mov
aas
out
cmp
dec
je
stos
inc
aas
call
or
movsb
pop
ret
mov
sub
cwtl
cmp
and
and
xchg
daa
mov
xor
insl
mov
lret
jb
divl
adc
cmpsl
fsubrl
or
sub
cmp
sbb
cmpsl
add
xchg
sbb
test
addl
subl
daa
in
jnp
dec
jbe
or
clc
or
sbb
cs
mov
xchg
fcoms
daa
dec
xchg
fidivs
daa
dec
xor
dec
daa
dec
dec
mov
daa
clc
dec
or
in
cmp
cmp
adcl
sub
dec
out
aas
pop
clc
clc
push
sbb
xchg
loopne
xorl
cltd
cltd
push
mov
mov
cltd
and
push
dec
mull
pause
push
les
sbb
xor
fdivrl
add
sub
push
sbb
outsl
inc
push
jbe
popa
daa
cmp
shl
cmp
and
push
and
popa
mov
jb
pop
pushl
inc
sub
sbb
jae
lahf
es
xchg
cmpl
ret
sub
jnp
pushf
aaa
fstpt
repz
xchg
pop
daa
aaa
jl
sub
and
push
xchg
stos
sub
aaa
fs
cmp
pop
jbe
pushf
adc
jecxz
outsb
push
imul
sbb
fsubr
sbb
push
and
out
jmp
xchg
pop
ss
stos
mov
sub
cmp
sbbl
adc
and
mov
adc
in
push
int3
add
or
orb
push
jo
pop
mov
pop
jg
add
pop
push
xor
lahf
inc
enter
vmread
pop
insb
push
add
ja
or
or
and
rcll
out
mov
es
cmpsb
lds
mov
mov
push
fdivr
jo
ud2
jnp
cmp
scas
mov
pop
jnp
add
mov
and
lock
cmp
int3
setl
pop
sbb
sub
cmp
jg
jo
div
pop
adc
ja
push
out
add
aas
push
add
cmpsb
mov
mov
jg
pop
push
cmp
add
pop
pop
adc
add
pop
jnp
lock
insl
in
pop
cld
int3
iret
popl
or
mov
xchg
mov
jnp
mov
js
aas
jo
inc
mov
das
das
mov
or
cmpxchg
lock
add
dec
dec
add
adc
dec
fs
es
bound
aas
pop
lcall
sub
add
mov
cwtl
fidivrs
jg
xor
shrl
jg
sub
ja
ret
data16
mov
and
mov
subb
push
imul
js
fstpl
or
jbe
insb
adc
out
data16
add
jo
jns
inc
push
fs
in
mov
outsl
fwait
arpl
ss
push
sahf
and
dec
mov
jae
fwait
insb
add
fldl
xor
subb
cmp
mov
gs
add
loop
cmp
add
xor
scas
push
push
imul
nopl
fwait
jno
jae
or
adc
sbb
loopne
or
imul
push
push
shl
inc
xchg
xor
out
out
adc
inc
cmp
popa
jb
dec
outsb
mov
arpl
mov
popa
arpl
es
addr16
ja
fistps
push
ja
jb
arpl
out
xchg
jae
popa
cmpsl
fisttps
add
jb
js
mov
data16
mov
rorl
fnstsw
xchg
repnz
push
inc
cmp
lods
loop
gs
sub
ret
cmp
pop
sub
and
mov
faddl
sub
imul
out
outsl
lcall
inc
insb
lahf
lcall
gs
loope
jnp
xchg
shll
pop
push
pop
jg
out
negb
inc
push
rclb
arpl
push
mov
insb
adc
mov
add
push
or
xor
gs
add
imulb
mov
aas
je
dec
inc
jg,pn
rorl
push
push
push
add
ja
ret
aas
repz
dec
mov
mov
iret
gs
js
iret
sub
adc
cmpsl
pop
inc
fistpll
scas
dec
inc
push
arpl
xchg
daa
jg
push
add
punpckldq
add
push
pushf
je
sbb
jo
mov
roll
jnp
js
inc
push
xorl
bound
mov
aad
jae
fistps
pop
pop
cmc
xchg
andb
push
bound
insl
ret
cmp
insb
cli
js
cmpsl
mov
lret
xor
hlt
loope
sub
pop
fiadds
push
pop
cmpsb
push
jmp
test
push
inc
sbb
addr16
test
push
cmp
mov
fimull
imul
mov
dec
subb
popf
mov
in
hlt
call
outsb
xor
jecxz
add
mov
add
jae
movsb
and
push
vmread
sub
daa
mov
mov
outsl
add
insb
pop
loopne
stos
fs
iret
insb
lds
fwait
fs
js
jnp
lret
push
sub
pop
or
mov
mov
jnp
xor
mov
mov
lock
lock
add
in
push
or
pop
or
or
arpl
jae
xor
inc
mov
jo
sub
xor
mov
xlat
shll
and
scas
push
pusha
ret
and
addl
adcb
mov
imul
pop
push
pop
and
sub
daa
add
or
not
ret
ret
aaa
jo
sbb
push
add
mov
inc
adc
mov
jns
fcmovnbe
adcl
xchg
sbb
dec
pusha
sti
dec
rcrb
inc
adc
insl
rcl
inc
push
addr16
jbe
out
sbb
add
pop
mov
fildll
add
sbb
inc
popl
cmp
mov
mov
pop
sbb
out
mov
insb
mull
scas
inc
pop
es
push
pop
addr16
push
fldt
repz
and
cmpsl
imul
xlat
jb
sub
inc
fnsave
sub
das
jl
es
inc
jae
mov
pop
mov
jnp
cmp
xor
call
cmp
cs
and
add
jne
and
jb
inc
push
fistl
stos
je
sbb
jae
mov
aad
sbb
cmp
adc
or
mov
sbb
mov
sbb
roll
das
fwait
dec
pop
lods
pusha
or
fwait
or
jmp
scas
and
sbb
push
xor
cmp
rdpmc
fisttpll
xchg
popa
scas
out
dec
lods
or
adc
fs
and
add
inc
add
and
adc
xor
mov
arpl
fadds
and
out
pop
addl
xchg
pop
pop
mov
sbb
movb
ss
orl
push
lea
dec
xchg
and
push
stos
pop
lds
sbb
sub
pop
mov
cs
in
sbb
push
out
mov
jbe
add
xlat
movsb
inc
jmp
and
fucomi
and
pop
mov
sub
push
or
aam
insb
sti
adc
xor
push
jo
aaa
insb
iret
insb
jl
stos
jno
jae
xor
or
jae
mov
je
insb
imull
or
loopne
adc
xchg
dec
fsubs
adc
out
pop
jo
aas
repnz
or
pop
repz
shll
bound
out
mov
jmp
ret
sub
mov
outsl
xchg
sbb
orb
sub
xchg
xor
imul
mov
adc
pop
addr16
jne
add
stos
ja
xchg
mov
popw
shlb
jo
add
cwtl
test
sub
sbb
aam
jae
xchg
push
arpl
mov
mov
inc
sarl
pop
xor
sub
pop
mov
pop
add
call
loope
lahf
pop
cmpsl
mov
mov
cli
xor
mov
scas
push
inc
jge
je
addr16
je
add
jnp
jp
sbb
daa
out
cmpsl
insl
add
imul
aaa
push
cwtl
bound
arpl
outsl
lds
inc
filds
daa
jl
out
mov
pop
pop
es
stos
mov
loopne
iret
jnp
inc
bound
sub
xchg
outsb
out
add
dec
arpl
sub
dec
jbe
incl
xchg
adc
mov
fistpl
roll
test
add
push
and
outsb
stos
lods
inc
dec
cmp
add
cli
scas
adc
push
sahf
adc
or
ds
jg
stos
xchg
cmpsl
shlb
outsb
adc
test
mov
cmpl
push
aaa
ljmp
and
js
inc
shlb
jg
mov
iret
and
jo
push
push
jl
fs
xor
sbb
cmpsl
cmp
adc
arpl
push
adc
push
or
test
decb
jbe
stos
jg
popa
fldt
push
xor
push
lds
adc
push
xchg
mov
dec
adc
outsl
push
cmp
roll
imul
mov
lods
fcoms
jecxz
pop
cmp
push
sbb
pop
dec
stos
dec
push
sub
fs
add
mov
addr16
cmpsb
push
xchg
cs
jo
dec
xor
mov
jmp
lcall
cs
stos
add
mov
add
cmpsb
dec
push
push
aaa
add
mov
push
fcmovbe
push
push
adc
mov
pop
push
dec
add
mov
push
adcb
xchg
subl
jg
outsl
dec
cmp
and
adcl
insb
push
add
ret
mov
out
xchg
or
das
pop
xor
scas
add
ret
dec
popf
movsb
xchg
stos
add
push
sub
out
jnp
arpl
add
xor
inc
outsl
push
jl
lret
sbb
jns
es
lea
sbb
xlat
push
mov
idivl
or
xchg
mov
or
sub
sub
shrb
sub
sub
sub
sub
xchg
inc
pop
xor
adc
add
cmpsb
adc
mov
stos
dec
dec
add
or
pop
ljmp
sub
xchg
dec
rorl
addb
hlt
jmp
push
jo
push
out
subl
fdivs
xchg
cli
jne,pn
sbb
mov
sub
push
jmp
cmp
and
mov
arpl
aad
pop
pusha
imul
xchg
or
xchg
lds
shlb
mov
data16
out
adc
ret
adc
imul
jne
push
adcl
add
pop
call
cmp
bound
lahf
outsb
pop
sub
sbb
out
inc
pop
mov
sub
add
mov
fildl
lcall
push
mov
mov
pop
push
sub
or
daa
dec
out
xchg
push
pop
in
and
call
outsl
cmpsl
ss
jp
inc
pop
adc
js
pop
sbb
pop
mov
sbb
into
lds
pop
imul
xchg
mov
push
inc
cli
sub
mov
mov
jo
rcll
push
pop
push
out
inc
or
fistps
pop
jo
jg
and
xchg
or
insl
cmp
mov
addr16
les
das
xlat
inc
add
cld
push
mov
dec
stos
adc
push
xor
jb
cmp
sub
shll
mov
mov
mov
je,pt
daa
sbb
mov
and
fdivs
sbb
cmp
inc
push
aas
daa
aaa
or
xchg
pop
movsb
inc
test
pop
and
push
and
sub
sub
fwait
aad
mov
insb
sbb
push
or
jo
faddl
push
out
bound
mov
xor
sub
roll
pusha
cmp
rcl
pop
push
pop
lds
cs
shlb
movsl
loop
push
mov
aad
or
sbb
rorl
pop
pop
mov
arpl
shl
dec
outsl
aaa
jb
stos
icebp
pusha
add
dec
xor
es
adc
xchg
ret
jmp
sbb
inc
push
adc
sub
push
popa
aaa
pop
ja
push
popa
pop
movsl
or
rcll
pop
mov
adc
xor
jmp
lods
bound
mov
sub
rclb
aaa
js
sahf
xchg
scas
addl
daa
lea
sbb
fwait
mov
fdivrs
mov
ficoml
addr16
jo
dec
pop
adc
fdivrs
cmp
adc
out
sbb
addr16
cs
test
mov
movb
aas
xlat
push
lcall
popf
movsl
test
negb
shlb
out
pop
addr16
mov
push
mov
push
bound
stos
es
sbb
xor
cmpsl
mov
test
fisubs
loop
pop
ljmp
mov
pop
sbb
xchg
aad
insb
ret
push
adc
or
pop
xorl
adc
imull
addr16
cmp
out
pop
shll
xchg
adc
mov
arpl
loopne
mov
cmpb
add
arpl
jae
mov
xlat
stos
jle
lods
inc
outsb
dec
repz
cmp
cvtdq2ps
lds
out
adc
sbb
mov
pop
or
dec
stos
mov
jmp
lods
bound
push
add
vpunpckhqdq
push
sub
xor
js
and
inc
lock
pop
daa
mov
insb
inc
mov
loop
and
jmp
mov
cs
sbb
addr16
inc
mov
push
loope
lock
dec
daa
pop
push
push
jmp
adc
inc
shrd
pop
adc
sbb
push
testl
out
fimuls
push
movsl
pop
sti
adc
push
data16
mov
pop
xchg
mov
xchg
outsb
daa
or
xchg
sbb
sbb
mov
pop
fs
push
scas
daa
testl
jbe
sbb
sbb
cmpsb
pop
into
clc
sahf
mov
dec
sti
add
jbe
arpl
dec
lahf
jne
loopne
cmp
mov
jo
popa
and
inc
mov
jo
jo
incl
aaa
adc
push
cli
addr16
sub
add
adc
sbb
pop
inc
pop
pop
outsl
pop
or
cwtl
mov
fiaddl
inc
and
mov
scas
mov
arpl
mov
mov
test
mov
xchg
iretw
push
push
test
pop
and
fwait
pusha
lods
inc
das
push
mov
or
aas
lcall
das
call
and
popl
out
fdivs
lea
fs
or
xor
push
add
cmp
arpl
push
sub
outsl
sub
push
push
mov
add
scas
jno
mov
add
icebp
cmpl
cmp
icebp
stos
jae
loopw
or
mov
divl
ret
jbe
outsl
mov
jnp
outsb
push
push
cs
or
pop
add
inc
insb
add
pop
aas
lahf
fsubs
mov
or
mov
pop
loope
cwtl
sbb
stos
and
arpl
pusha
pop
je
data16
xchg
rorb
popa
ss
cmpsl
data16
jmp
mov
iret
int
inc
mov
adc
adc
pop
xor
inc
push
daa
sbb
aad
or
subl
addb
mov
sbb
cmp
mov
inc
xchg
cmp
push
out
mov
inc
xchg
xorl
scas
cmp
pop
jg
ss
xlat
sbb
cmpsb
mov
cmp
adc
out
lods
sbb
sub
fisubs
sbb
jmp
in
stos
add
xchg
add
add
push
mov
and
dec
dec
inc
xchg
mov
stos
fs
jmp
mov
adcl
in
pop
dec
loop
push
stos
cltd
sbb
mov
lods
add
stos
pop
xchg
mov
lods
mov
pusha
xlat
fidivl
lret
das
add
push
and
pop
pop
pop
inc
xlat
and
mov
cmpsl
jmp
pop
mov
mov
jnp
add
scas
xor
fisttps
imul
xchg
jg
sti
mov
das
sub
inc
dec
pop
push
outsl
pop
addl
iret
divl
adc
push
test
adc
popa
jae
sbb
xchg
daa
jecxz
fnsave
sbb
in
scas
scas
or
cwtl
sbb
dec
outsb
xchg
arpl
adc
push
sbb
pop
adc
jp
xchg
jne
jecxz
dec
sub
push
adc
dec
sub
pusha
aas
cmp
xor
jmp
cmp
aaa
mov
pop
fwait
cmp
out
jle
push
imul
jne
sub
mov
and
andb
dec
or
sub
lret
mov
push
mov
cwtl
push
test
sub
sbb
push
mov
addr16
or
xchg
sbb
rcll
ficompl
insb
jo
popf
int
and
call
sub
inc
fldt
sub
push
jne
xchg
lods
push
loope
jns
inc
xchg
and
push
sarb
push
insl
and
stc
adc
bound
pop
stos
add
push
outsl
jns
push
push
dec
push
jae
push
sub
insl
pop
out
push
cmp
call
pop
out
adc
mov
shrl
cltd
xchg
add
xchg
adc
jne
sub
in
dec
test
add
xchg
adc
gs
mov
iret
int
sbb
imul
cmpsl
xor
inc
pop
lret
and
sbbl
or
mov
push
jb
push
out
mov
push
mov
mov
test
out
cltd
insl
mov
loopne
pop
and
dec
fs
bound
rcl
push
xchg
movsb
mov
push
inc
sbb
dec
mov
mov
dec
sbb
imul
adc
pop
push
xor
pop
out
jno
inc
sub
insl
pop
sbb
cmp
adc
daa
imul
push
roll
sbb
sbb
dec
xchg
scas
fldcw
lret
mov
xchg
insb
lods
mov
push
sub
adc
mov
mov
stc
inc
scas
and
inc
pop
adc
dec
xorb
sbb
pop
and
test
lea
lock
out
and
push
mov
xor
jne
lods
lret
add
inc
xchg
imul
mov
mov
adc
push
fimull
xor
add
mov
jl
ret
addb
insl
inc
jo
push
js
loope
iret
outsl
sbb
push
insl
inc
fsubrl
loope
xor
ds
shrb
cmc
mov
mov
fbstp
sub
insb
push
dec
mov
sbb
sub
loop
mov
xchg
ret
aas
inc
push
lods
pop
and
mov
insl
jb
push
mov
dec
imul
xor
mov
shrl
iret
mov
pop
adc
lret
mov
xchg
xor
notl
flds
ret
xchg
adc
pop
sbb
inc
insb
insl
xchg
or
rclb
mov
adc
loopne
sub
repnz
mov
mov
jb
xor
int
adc
xor
sahf
push
aad
rorl
mov
inc
adc
fsubl
push
jp
xchg
jecxz
mov
and
loop
jne
mov
inc
popa
pusha
lret
clc
push
or
sbb
push
insb
scas
xor
add
lret
pop
sbb
pop
dec
js
lret
add
adc
and
fstpt
add
mov
addl
or
jo
or
das
or
adc
fdivp
insb
mov
movups
jno
or
addr16
out
or
iret
or
leave
cmc
or
or
sbb
push
push
and
xchg
or
sbb
or
cmp
pop
xor
add
int
and
rorl
lods
or
adc
jle
add
std
ret
addb
insb
add
sbb
rorl
adc
add
inc
or
xor
or
add
in
add
dec
scas
in
push
pop
adc
inc
gs
dec
push
adc
or
add
iret
adc
mov
xchg
mov
and
je
es
adc
push
mov
add
xchg
pop
lahf
add
dec
ret
lea
pop
sbb
mov
dec
js
cmp
push
mov
xchg
or
insl
cs
gs
movsl
or
and
outsl
xchg
and
in
and
sbb
pop
pusha
lea
mov
out
push
dec
sub
xchg
clc
outsb
fs
iretw
sub
fcomps
imul
outsl
adc
and
loope
add
xchg
or
dec
lods
fld
push
jns
out
dec
and
out
inc
imul
pusha
loopne
adc
imul
xchg
and
jmp
jno
jbe
popa
sbb
test
dec
pop
and
sbb
jbe
mov
outsb
insb
negb
dec
pop
add
mov
lods
pop
movsb
inc
adc
jnp
xchg
and
ret
sub
and
or
fs
gs
data16
push
pop
fcmovb
stos
insl
xchg
das
call
pop
sbb
ret
inc
and
xor
std
lds
icebp
push
add
sbb
lret
add
dec
mov
imul
movsl
daa
fnsave
pop
stos
xor
adc
add
sbb
jnp
popf
xchg
dec
xchg
fstps
inc
sub
js
faddl
push
add
outsb
or
dec
fcoml
fs
and
sti
lods
subb
dec
fs
andl
xchg
sub
or
xor
xchg
dec
add
ret
xchg
adc
pop
mov
in
dec
insb
and
sbbl
pop
sbb
ret
or
jnp,pt
int3
sub
jo
sbb
cmp
pop
push
or
pop
and
xor
sub
push
inc
push
rcll
notl
fiaddl
mov
sub
cwtl
and
mov
xchg
sbb
xchg
outsl
dec
rorl
sahf
cmp
dec
xor
mov
lods
int
pop
sub
sbb
mov
xor
sbb
jmp
repnz
mov
inc
mov
add
adc
out
jge
sbb
arpl
sub
cmp
or
adc
scas
or
dec
lret
push
and
aas
test
inc
test
push
xlat
scas
xor
xchg
sbb
shlb
sub
insb
xchg
ja
lods
test
mov
sbb
addl
push
das
outsb
int3
rorb
push
xorl
lods
add
cmp
push
or
and
insl
push
or
fadd
mov
popf
push
dec
vfrczsd
je
gs
rol
jns
inc
lods
rcrl
push
sbb
fdivrl
leave
hlt
pop
or
dec
sbb
pop
rclb
lret
xor
add
mov
jecxz
inc
insb
test
push
cltd
and
or
push
and
outsl
jnp
outsb
daa
imul
or
imull
das
and
mov
adc
insl
ja
add
mov
mov
lock
xor
insl
aad
insb
clc
dec
sbb
cmpsl
add
pop
add
xor
ret
insb
sbb
dec
and
mov
cmp
cld
adc
dec
dec
jb
xchg
add
inc
pop
sbb
inc
cwtl
daa
cmpl
add
and
mov
sbb
notl
push
xor
inc
in
adc
inc
dec
inc
lea
xchg
sub
and
shll
movsl
addl
je
les
add
fistl
xchg
fcoms
inc
jbe
adc
fcompl
xor
dec
push
jbe
aam
or
add
and
out
cmc
sahf
out
and
sbb
aaa
jae
sbb
test
sub
push
movsb
pop
mov
arpl
leave
inc
xchg
and
pushf
mov
xor
sub
cmp
dec
fdivs
call
out
push
push
outsb
inc
outsl
or
fisttpll
out
stos
lods
popa
pop
push
cmp
jge
gs
pop
xchg
xchg
push
xor
and
and
push
push
sbb
rclb
jmp
xchg
dec
sbb
addr16
cmp
sbb
fwait
and
jge
and
jns
cmp
lret
mov
sbb
sbb
dec
data16
int
cmp
or
adc
lea
inc
push
sbb
addb
or
inc
iret
xlat
add
add
add
sahf
or
inc
das
roll
or
jbe
sbb
js
lret
shr
call
dec
data16
movsl
mov
and
xor
daa
dec
adc
and
cmp
and
or
sbb
adc
mov
sub
pushf
into
in
push
cmp
cmp
sbb
sub
bound
sub
and
push
cltd
and
adc
movsb
clc
jg
push
jo
mov
add
sbb
loope
aaa
mov
and
dec
adc
cmp
inc
cmp
insb
outsb
lea
out
cmp
fcoms
pusha
sub
add
mov
adc
fistps
mov
test
add
sbb
cmp
mov
popf
and
sub
imul
addl
push
mov
mov
pop
mov
jno
loop
pop
and
in
jo
adc
enter
imul
sub
or
or
sub
int
sti
mov
jno
imul
xchg
dec
push
sub
and
jne
lret
inc
xchg
pop
and
push
inc
push
sbb
sbb
jo
xchg
push
xor
sbb
push
outsl
fdivrs
xor
jne
in
ljmp
mov
push
jne
shrl
dec
test
mov
xor
xchg
adc
daa
push
xor
out
hlt
inc
clc
je
jne
and
mov
in
sbb
imul
outsb
insb
mov
icebp
sbb
ror
jg
dec
lods
loopne
lods
lahf
sbb
dec
dec
jae
mov
inc
and
mov
xchg
push
dec
stos
rorb
fstpl
sbb
mov
and
jo
addl
pop
stos
inc
sbb
mov
xchg
adc
sub
pop
mov
mov
lds
push
aas
dec
jae
push
enter
adc
mov
and
mulb
leave
gs
or
mov
add
jns
add
pop
dec
ret
mov
cltd
and
xor
sub
adc
out
xor
rolb
das
mov
add
sbb
je
les
xor
push
mov
pop
jno
inc
mov
test
adc
mov
mov
adc
andl
lock
andl
jne
push
xchg
xor
inc
inc
sub
adc
jbe
mov
add
mov
mov
pop
mov
fadd
and
pusha
xlat
dec
gs
mov
daa
insl
ret
test
das
push
mov
sbb
and
or
push
add
aaa
push
inc
mov
and
addr16
pop
xchg
adc
xorb
lods
ja
inc
jbe
mov
and
mov
aad
stos
loope
xchg
repz
inc
sub
sbb
mov
sub
xchg
inc
sub
cmpsb
sub
pushf
mov
sbb
mov
xor
and
add
ret
sbb
or
push
in
into
insl
pop
sub
jmp
push
mov
test
sbb
mov
gs
mov
mov
mov
sbb
outsb
mov
in
jecxz
and
mov
loopne
mov
sbb
xor
rcrl
push
test
pop
bound
xor
and
sbb
les
and
arpl
aaa
test
jmp
ds
push
mov
xor
xchg
sub
adcl
js
dec
sti
xor
push
pop
dec
int3
aaa
inc
adc
mov
mov
pop
aaa
push
jo
sub
sub
dec
jg
fs
xor
jo
std
aam
mov
mov
bound
or
ss
sbb
gs
adc
inc
pop
mov
scas
sahf
jmp
adc
inc
add
dec
add
xchg
or
in
adc
orl
or
add
test
jo
push
fwait
ret
pop
add
adc
sbb
outsb
fists
movups
and
inc
jle
mov
xor
sbb
in
mov
subb
cwtl
scas
int3
inc
adc
inc
add
and
imul
or
inc
or
or
adc
inc
clc
and
out
dec
dec
push
or
bound
outsl
cmpsl
movsb
pop
call
dec
jnp
pop
add
aaa
clc
sub
mov
je
cmp
cltd
lahf
lret
dec
pusha
push
jnp
jns
sahf
inc
dec
gs
out
mov
out
dec
cmpsb
int3
sub
mov
inc
jae
dec
data16
insl
divb
lahf
add
xor
or
xchg
and
adc
add
push
incl
add
add
add
add
inc
add
inc
xchg
mov
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
dec
add
int3
dec
add
