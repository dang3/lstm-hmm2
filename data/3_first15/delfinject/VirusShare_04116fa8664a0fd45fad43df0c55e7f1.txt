cs
xchg
adc
xchg
loopne
jbe
xlat
insb
stc
scas
pop
nop
push
xlat
dec
and
inc
mov
inc
movswl
mov
arpl
orb
mov
pop
dec
clc
lock
mov
inc
mov
adc
out
idivl
imul
call
mov
xchg
jecxz
adc
pop
fmul
decb
push
out
xor
ss
mov
push
mov
test
cmpsb
sarb
das
add
jmp
pop
pop
clc
es
call
jp
inc
popaw
push
dec
add
xchg
mov
in
jns
xchg
or
sub
inc
lods
ja
jge
mov
cmp
pop
stos
sub
in
sub
xor
jmp
or
push
pop
xor
sbb
sbb
mov
lea
int
enter
fstpt
or
xchg
pop
movsb
jno
mov
ror
es
mov
std
cwtl
or
fistps
cmpsl
xorl
fimull
push
js
ret
aam
stos
sarb
test
sub
es
inc
aam
test
push
mov
shrb
cli
jb
sbb
fidivrs
ljmp
fdivrl
daa
mov
jmp
cmp
add
out
push
dec
inc
jnp
push
int
mov
pop
mov
rorb
mov
pop
and
mov
sub
add
fidivl
test
jl
lods
add
xor
mov
js
movsl
movsl
and
fisttpll
fmull
les
xor
add
cmp
repz
data16
notb
sub
pop
add
enter
dec
loope
rorl
outsl
fistps
mov
xsave
rorb
loope
dec
prefetch
pusha
ret
mov
call
pop
xchg
inc
mov
int3
adc
or
cmp
in
xchg
inc
sti
loope
push
mov
je
leave
mov
xchg
adc
lock
xchg
test
jne
pop
cmp
sahf
rcrb
mov
jl
js
cld
test
xchg
leave
ljmp
lds
adc
mov
sbb
xor
mov
arpl
fwait
cmpl
sub
rcrl
xor
push
cmp
push
add
inc
pop
aad
out
jge
and
call
int
enter
out
sti
jo
ja
jbe
addr16
call
sbb
sub
lahf
pop
test
sub
mov
xchg
das
cmp
mov
lret
jbe
mov
or
imul
mov
cmpsb
outsl
cwtl
jne
add
xor
stos
cmp
jg
call
mov
outsb
ljmp
pop
and
sbb
mov
mov
push
jbe
adc
movsb
popa
sub
cmc
in
je
push
pop
adc
stos
in
inc
sbb
jl
xor
jp
out
shll
sbb
inc
jns
negb
daa
es
sbb
push
adc
cmp
sbb
cmp
fisubrs
push
dec
xchg
jb
xchg
cmp
add
outsb
add
jecxz
xor
xchg
stc
nop
push
test
push
jae
test
inc
cmp
and
xchg
sbb
push
dec
xchg
push
cmpl
and
cld
imul
pop
test
sub
mov
cmp
jge
shrb
lret
sahf
shlb
xchg
out
xchg
imul
xor
mov
sbb
xor
mov
into
cli
cmp
out
test
ss
rolb
pop
insl
push
dec
sti
or
mov
adc
scas
stos
stos
stc
sub
roll
popf
nop
or
jns
fists
jne
hlt
gs
jbe
jge
imul
adc
jns
xlat
jo
mov
or
xchg
adc
mov
sbb
lcall
arpl
or
lods
lock
sub
rol
pop
loop
xor
inc
insl
mov
je
outsb
push
xchg
pop
popf
pop
mov
in
inc
clc
int3
push
pop
inc
outsb
jge
jo
enter
xlat
jae
adc
inc
pop
sbb
sti
and
dec
mov
pop
jbe
adc
shrb
das
sbb
lret
ror
inc
ret
ja
test
cmp
cmpsl
out
imul
or
jbe
ret
loope
inc
jae
xor
icebp
out
fld
push
pop
xchg
cwtl
push
lock
mov
and
jbe
adc
mov
inc
fld
push
lret
daa
xor
sbb
pop
mov
rorl
gs
cmp
ret
cmp
cmp
mov
adc
mov
sbb
push
std
fs
inc
mov
jp
mov
or
cmpsl
jbe
aas
lods
addr16
int3
lods
cmc
mov
pop
xchg
sbb
cmpsb
add
jb
and
popa
popa
dec
outsl
sahf
jmp
xor
aam
adc
sbb
cmp
cmp
xchg
call
cwtl
or
add
xor
call
rcrl
in
mov
sub
inc
mov
fcompl
mov
cld
or
imul
xchg
push
popf
push
cmc
imul
mov
rclb
push
ss
shll
imul
pop
out
out
xchg
loopne
insl
rcrl
lret
out
push
imul
dec
rolb
in
repnz
fiaddl
or
add
incb
add
cli
jl
jle
adc
push
xor
sub
lret
jno
mov
clc
push
ss
mov
fistl
shlb
fwait
push
xor
mov
ss
js
push
mov
test
fdivrs
cmpsl
lcall
sbb
daa
cmpsl
aaa
cmp
and
out
adc
testb
adc
xchg
cmp
mov
movsb
mov
mov
fldenv
mov
sbb
and
or
out
fildll
xchg
or
push
mov
push
cmc
xor
push
sub
inc
cli
lret
mov
sbb
jb
aas
outsl
push
and
mov
lret
pop
testb
dec
mov
mov
jne
xor
lods
inc
push
je
mov
movsb
sarl
clc
subl
pop
adc
mov
dec
or
add
aas
jmp
dec
mov
pop
pop
mov
jno
sub
push
xor
and
enter
lods
xorl
lret
jmp
or
lock
cmp
loope
mov
jo
out
mov
stos
cmpsl
push
sub
cmp
or
push
divl
cld
inc
cwtl
dec
sub
xchg
push
dec
push
imul
xor
and
int3
xchg
fldl
in
jmp
or
movups
enter
fs
adc
lods
aaa
lcall
cwtl
push
sub
les
xor
cmpsl
xor
std
loopne
imul
mov
add
dec
xchg
call
xor
mov
insl
add
loopne
scas
rcrb
cli
enter
leave
sbb
pop
sub
aad
fpatan
xchg
mov
sub
push
fxch
mov
fbld
jp
cmpsl
pop
pop
jae
xlat
repz
sub
testl
jne
popf
dec
clc
repnz
adc
shll
les
fcoms
push
andb
dec
sbb
inc
jne
lods
mov
mov
mov
pop
adc
mov
push
xor
in
leave
inc
cmc
ret
fistps
xchg
movsl
sbb
popa
fnstenv
fs
push
pop
aad
mov
and
and
out
movsl
lea
imul
adc
mov
ja
add
cmpsb
sub
mov
pop
add
xchg
xchg
icebp
jle
fdivs
sbb
shrl
int
mov
pusha
add
sti
cmp
mov
arpl
addr16
dec
movsl
mov
xor
fnsave
push
fs
add
push
or
sti
sbb
sub
inc
movsb
aam
das
mov
fstps
add
addr16
mov
sub
adc
iret
push
outsl
lock
jnp
jnp
push
movsl
xchg
inc
xchg
and
xor
shlb
rorl
xchg
adc
inc
inc
pop
xchg
out
push
mov
cs
cmp
fimuls
jg
je
jmp
not
out
fadds
subb
rol
pop
lock
outsl
aaa
test
int
push
cmpsb
push
inc
mov
outsl
add
jp
jl
sbb
sti
pop
xchg
lret
sbb
fisttps
in
sbb
fistps
mov
shll
nop
rcrb
das
xchg
jle
mov
mov
sbb
js
aas
xchg
cmpsb
gs
xchg
mov
lret
xchg
je
out
sub
pop
mov
xchg
fsubrs
jns
in
cli
fldenv
jle
cld
dec
bnd
lock
nop
loop
lcall
pop
mov
mov
in
push
jbe
in
lret
test
popa
repnz
add
das
and
cmpl
cltd
test
and
jnp
inc
imul
int3
loopne
add
inc
inc
ficoms
rcr
push
gs
pop
add
in
and
popa
out
popa
div
inc
pushf
popf
movsl
mov
filds
ds
xchg
or
out
and
cmp
outsl
pushf
or
and
out
icebp
push
add
out
fistpll
ffree
adc
pusha
outsl
ret
in
sbb
loopne
outsl
in
iret
xchg
insb
inc
test
xchg
jge
push
mov
cmpsl
repz
jge
cmp
fnstsw
fwait
loop
sub
cmc
mov
cwtl
out
push
mov
test
mov
mov
enter
lret
add
jno
fistpll
scas
adc
jle
xchg
lret
pop
iret
jg
add
mov
mov
or
lea
or
mov
push
jnp
int
stos
jns
ficoms
mulb
ret
imul
rcll
lret
leave
aam
loope
repnz
jle
cmp
test
mov
sbb
dec
pop
push
adc
mov
sbbl
rol
fistps
inc
popf
aam
test
sahf
and
movsb
xchg
xchg
ja
dec
repz
test
cmp
lret
icebp
dec
pop
sub
mov
fs
mov
aad
pop
les
imul
scas
push
enter
in
jp
jo
rcll
sbb
sbb
xchg
jbe
mov
mov
arpl
jne
sbb
mov
ljmp
mov
mov
aam
push
decl
push
and
test
sti
and
sub
jae
cmp
call
leave
pop
cwtl
push
shl
sub
int
lock
sbb
lock
repnz
adc
aaa
fsubrs
mov
xor
scas
mov
cmp
mov
or
xchg
add
cmc
sbbb
sub
inc
int
fcomps
jns
push
divl
popf
cmovs
test
sub
jb,pn
add
cs
test
icebp
mov
scas
pop
mov
pop
out
cmp
xchg
rcl
mov
jbe
xchg
cwtl
sbb
cld
pusha
push
test
loopne
ljmp
rcll
loopne
sub
gs
push
sbb
stos
sub
or
xor
outsl
stc
mov
xchg
add
dec
idivb
movsl
mov
lock
fldl
sub
sbb
pop
jb
in
add
sahf
daa
daa
stos
addb
or
sbb
inc
inc
std
cmp
das
fisttpll
mov
lcall
lods
jns
dec
or
jns
out
in
jo
shrl
test
or
fidivrs
mov
and
push
mov
stc
sti
jg
mov
andl
push
sub
sbb
loopne
aam
mov
mov
xor
jae
shld
and
adc
popf
cmpsb
sub
or
aam
push
xchg
sub
call
xor
jno
dec
loop
inc
mov
cmp
sar
fsts
add
fisubrs
iret
cmp
or
std
xchg
aaa
adc
or
cltd
addr16
ss
loope
push
in
sub
or
add
mov
xor
pop
mov
les
pop
repnz
sub
jnp
xchg
imul
insl
push
or
mov
ja
mov
stos
push
movsb
jl
outsl
and
hlt
test
jecxz
xor
sub
into
lods
test
mov
jg
sbb
jmp
adc
pushf
and
pop
hlt
inc
fwait
inc
add
mov
movsb
repnz
or
rorb
int3
xchg
jne
mov
xor
rorl
mov
sub
pusha
mov
scas
sub
sbb
lret
movb
scas
test
push
add
cld
inc
push
call
stc
mov
xchg
call
out
ss
popa
insb
test
xor
mov
add
jle
bound
dec
notl
ret
sub
jbe
out
cwtl
xor
adc
cmp
test
xchg
and
rorb
sahf
nop
jno
mov
fisttps
lea
aas
adc
pop
add
into
jge
sbb
inc
in
test
mov
xor
aaa
cld
pop
mov
aas
or
lods
pop
inc
out
cmpsl
and
ret
fistpl
repnz
divb
dec
jmp
jecxz
enter
stc
lea
and
pop
shll
xorl
xlat
inc
push
inc
cwtl
push
mov
sub
add
movsl
sbb
xor
push
cmp
ljmp
xchg
aaa
inc
fstpl
sbb
mov
mov
cld
dec
gs
push
jle
mov
pop
push
cmp
adc
mov
cltd
add
or
jmp
push
and
outsb
cmc
jg
lds
aad
cmpsl
xorl
cwtl
jle
out
mov
xor
cs
stos
mov
cmc
mov
and
cld
cmpsb
jg
in
xor
push
xchg
and
sub
fs
pop
and
jl
outsl
roll
into
xlat
pusha
push
jg
mov
data16
sbb
hlt
movsb
xlat
inc
shl
cmpsb
xor
xchg
insl
mov
stos
lret
mov
adc
incb
rcrl
ja
xor
mov
lds
mov
push
pop
stos
xchg
and
pop
shrl
xchg
pop
daa
cmp
into
stc
mov
or
or
push
sti
mov
fwait
movsb
push
mov
aas
insb
stc
psubq
popa
mov
test
mov
cwtl
call
inc
sub
dec
xor
or
jae
shll
sub
test
ds
and
mov
outsb
aaa
add
sbb
fwait
sbb
pop
leave
aam
fidivrs
andl
rcll
test
popa
lret
test
or
cs
out
xchg
mov
fdivs
inc
jge
lahf
dec
mov
testl
gs
add
or
cwtl
push
inc
xchg
cmp
sub
mov
roll
push
into
cmp
test
loopne
es
inc
stos
aas
or
pop
pop
push
ljmp
das
cld
lea
in
popf
fcoms
adc
xor
xlat
xchg
sti
icebp
xor
xchg
sbb
inc
jb
mov
jecxz
cld
sarb
jge
cmp
push
jl
test
nop
xchg
jne
iret
jns
adc
and
inc
pop
sti
outsl
push
fstpl
inc
mov
lret
jno
loope,pn
cmp
jae
shll
cmp
mov
cmp
dec
arpl
insl
cli
mov
int3
into
sub
pop
fnstenv
ret
sbb
int
and
outsl
nop
inc
decb
xchg
nop
xchg
jle
call
fcmovb
les
cmp
or
cs
mov
jo
testl
data16
test
mov
inc
adc
aaa
repnz
popa
jl
xchg
xchg
inc
adc
scas
std
or
lods
test
lret
and
push
inc
pop
cmp
xor
pop
inc
stos
iret
and
lods
push
dec
cmp
out
or
test
sub
jnp
inc
div
int
mov
mov
fsubl
out
jl
jne
xor
xor
xchg
enter
push
repnz
jbe
mov
aad
push
sbb
jae
pop
cltd
dec
xchg
scas
xorb
push
addr16
jne
popa
pop
push
in
call
and
lahf
inc
gs
int
push
ret
and
movsl
sub
mov
je
push
ss
sbb
adc
mov
sti
outsl
dec
dec
sti
sbbl
add
xchg
xchg
or
scas
icebp
data16
adc
push
lret
mov
dec
jne
push
lret
jns
or
popf
pop
adc
mov
mov
dec
js
shr
mov
lock
fbld
fsub
inc
imul
sub
mov
lock
lret
or
lret
jmp
lock
lds
out
cmp
pop
push
hlt
sahf
cmp
outsl
ss
xchg
jb
cmp
inc
scas
nop
and
int3
xchg
rorb
add
ljmp
fbld
ret
pop
icebp
adc
sti
pop
gs
mov
jle
cmp
add
lds
jl
adc
jo
or
enter
movsl
xchg
rol
or
in
and
pop
sub
jge
sbb
inc
mov
lcall
cmp
mov
cmp
lret
bound
mov
jge
das
out
sub
jge,pt
iret
repz
imul
cltd
mov
mov
nop
xor
sub
fwait
cli
pop
sub
cs
out
cmp
add
pop
fwait
push
aaa
pushf
rolb
imul
lcall
sub
es
add
xchg
dec
rcrl
xor
mov
dec
xor
es
sbb
cltd
and
inc
inc
movsb
stos
xchg
push
data16
jne
imul
mov
pop
mov
ret
xor
inc
jg
sub
or
bound
add
mov
push
push
mov
xchg
nop
jno
insb
repnz
xor
sub
in
adcl
test
push
movsb
in
aad
add
adc
int3
jbe
test
imul
add
rcl
pop
pop
push
xor
imul
aam
push
mov
decl
sub
mov
sub
cmp
jp
das
les
je
inc
rcrb
push
xlat
push
sub
test
xor
les
lret
inc
shl
push
stc
aam
inc
loope
mov
sarb
in
mov
cld
inc
cmp
daa
mov
scas
inc
test
jp
sub
fnstsw
int
jecxz
shl
push
xor
loop
cmpsl
ficoms
mov
push
sahf
loopne
mov
xor
pusha
ljmp
sti
jmp
mov
sub
adc
or
pop
xlat
adc
int
xchg
jge
jae
xor
fsubrl
sub
sti
sub
pop
cmp
adc
push
xor
push
out
imul
ja
add
imulb
pop
adc
stos
dec
test
icebp
push
sub
in
aam
popa
test
mov
cmpsb
cwtl
and
mov
sarb
or
add
roll
int3
cwtl
je
lea
into
fisubrl
test
xor
leave
lcall
std
andl
inc
adc
lock
out
cmp
loope
push
ljmp
sub
pxor
adc
addl
icebp
in
lret
push
jne
xor
adc
add
loopne
aam
ret
in
fnstcw
test
cmp
and
call
xor
sbb
jne
fwait
and
mov
inc
jge
mov
inc
ret
inc
xor
cmp
rorl
jge
jo
mov
push
mov
dec
xor
jbe
mov
mov
aaa
add
imul
mov
aaa
pushf
pop
push
inc
lds
jge
lcall
and
sbb
jl
pop
jae
nop
std
jp
movsb
pop
lds
in
sbb
sub
jo
jbe
out
outsb
mov
add
pop
in
pop
lahf
inc
inc
popf
jns
fmuls
mov
or
sbb
movsb
movsb
or
mov
fistl
push
sub
fildl
adcl
xor
dec
cmpb
xor
cmpsb
not
or
jecxz
mov
stos
mov
jl
mov
push
push
sarl
lret
cmp
pop
repz
ds
mov
add
mov
stos
pop
movsb
stos
test
lcall
subb
sbb
imul
imul
out
dec
and
rcll
aaa
mov
mov
xor
iret
xor
cltd
in
push
inc
sbb
icebp
add
and
jl
xchg
fisubrl
mov
inc
push
and
sbb
xchg
jno
push
dec
or
dec
daa
xor
or
sub
sti
jg
adc
in
xor
push
cs
pop
adc
mov
adc
in
sub
mov
mov
push
cli
dec
clc
jge
cltd
jbe
lret
loopne
loope
aas
or
pop
ja
roll
popa
outsb
pslld
hlt
cwtl
cltd
mov
inc
inc
and
pop
sbb
pop
cld
or
push
or
lea
int3
xchg
sbb
jnp
push
pop
jae
or
and
js
jnp
in
xchg
sub
pop
cld
negl
inc
in
mov
sbb
push
mov
mov
repz
aas
add
mov
jae
and
cld
sbb
adc
icebp
push
iret
js
mov
mov
sub
pushf
andb
sub
sub
add
sub
sub
mov
mov
adc
ljmp
std
clc
lock
loopne
xchg
mov
adc
movsb
sbb
mov
and
fs
lds
cmc
sub
pop
inc
dec
adc
jp
push
mov
stc
ja
push
adc
stos
dec
sbb
lods
cltd
xchg
push
xchg
leave
push
xadd
pop
divb
inc
jns
and
cltd
jle
fstl
sub
int3
ret
xchg
push
fs
or
or
lds
iret
mov
std
ja
repnz
vcvttss2si
nop
cmp
mov
lea
mov
cmc
stos
add
cmc
and
mov
xlat
mov
jno
sub
push
push
cmp
xlat
les
outsb
cmp
mov
cli
mov
jecxz
cmp
push
and
or
sub
lods
push
outsl
cwtl
repnz
aas
je
pop
sbb
ss
adc
inc
and
fcmovu
daa
adc
or
aad
mov
push
decb
jg
in
addl
notb
pop
mov
fisttpl
fistps
cmp
ja
fadds
ret
lcall
into
xchg
bound
jp
jns
push
or
cwtl
xchg
dec
lret
outsl
pop
ds
das
out
inc
mov
mov
bound
in
fldenv
movsl
stc
out
pop
inc
push
popf
test
or
mov
adc
push
pop
dec
mov
test
push
and
push
out
jge
mov
rclb
jecxz
lahf
mov
inc
or
sub
dec
cmpl
mul
pusha
inc
push
mov
fwait
stos
sbb
sub
pop
mov
xchg
xor
in
cmp
aaa
jo
dec
arpl
addr16
inc
mov
cmpsl
data16
sub
push
ss
xorb
mov
dec
push
and
or
movsb
adc
sarl
pop
std
clc
lock
scas
pop
pop
ficoms
jp
pusha
dec
sbb
test
popa
je
lods
fisttpll
push
or
jg
inc
adc
add
jmp
mov
lds
int
repz
daa
xor
mov
aas
cmp
mov
outsl
hlt
xchg
rorl
mov
jge
dec
mov
data16
and
inc
out
les
stos
jmp
cmpsl
push
movsb
mov
out
setnp
lcall
pop
ret
cmpsl
je
out
sbb
hlt
jbe
and
mov
mov
rcrb
sub
les
push
loopne
cli
scas
movsb
add
xchg
cmc
xchg
negl
ss
stos
out
push
mov
mov
sub
dec
in
sub
jne
sbbl
add
out
mov
inc
mov
sub
push
stos
xchg
stos
scas
fimull
lret
cmc
push
cmova
push
popf
ljmp
into
fcompl
mov
pop
inc
jne
push
mov
add
pop
add
jae
inc
adc
lock
scas
add
into
xlat
jmp
push
push
pop
dec
add
xchg
bound
mov
mov
loope
mov
ja
cmp
outsb
xlat
mov
fwait
pushf
mov
xchg
cwtl
mov
popf
add
inc
pop
push
fucomp
jns
rcrb
cmp
fcmovb
dec
jl
fbstp
mov
adcl
xchg
arpl
leave
mov
ja
xor
cmpsb
pop
xchg
and
push
mov
sarb
mov
fidivrs
lds
rolb
jp
mov
int3
cs
push
sub
xchg
mov
push
inc
cli
lods
in
push
in
loopne
mov
call
das
and
jbe
cmpsl
cmp
push
sarl
in
push
not
push
xor
mov
inc
stc
mov
jmp
sbb
jne
cli
cmpsb
mov
clc
xorl
xor
and
cmp
pop
pop
mov
and
lods
dec
repnz
sub
adc
xlat
insl
cmp
lods
int
int
mov
dec
jnp
jmp
ljmp
in
fwait
pushf
xchg
adc
out
or
test
jg
stos
or
mov
rcrl
xlat
int
and
mov
in
or
lds
push
cld
mov
dec
outsb
ja
sbb
fcompl
and
scas
pop
mov
cwtl
push
cmp
xchg
imulb
pop
rolb
cli
scas
lea
std
lret
lock
pop
xchg
cltd
cs
mov
out
dec
fidivl
outsb
daa
xor
loopne
dec
lods
inc
scas
inc
jns
sahf
or
shlb
lcall
popf
inc
xor
insb
xorb
std
iret
mov
mov
inc
dec
setbe
jg
in
out
mov
addr16
insl
pop
pop
mov
out
jl
add
or
inc
std
xchg
mov
and
dec
sbb
data16
test
fwait
adc
inc
mov
lods
test
not
aam
jo
hlt
gs
jnp
mov
xor
sub
pop
in
notl
xor
pop
rol
push
or
or
xchg
jo
and
in
test
cltd
mov
fsubp
mov
bound
aas
out
jo
hlt
and
lods
aaa
cmp
xchg
push
adc
cmp
jle
rcrb
adcl
paddusw
popa
cmp
cli
movsb
call
pop
mov
push
cmpsb
jmp
fstps
inc
cli
adc
push
in
les
lahf
cwtl
push
jb
test
cmp
lret
sarl
out
mov
loope
nop
jg
add
mov
and
enter
jmp
div
xchg
sbb
push
inc
sbb
ror
mov
loop
inc
ds
call
lods
inc
adc
adc
xchg
mov
or
fidivs
pop
jno
fbld
mov
sub
mov
lods
xchg
adc
jb
dec
fs
mov
loop
xor
cli
and
jmp
or
or
bound
add
xchg
add
sub
mov
pop
jns
ror
pop
out
lcall
sub
and
mov
or
xor
dec
arpl
or
clc
mov
outsb
xor
pushf
pmaddwd
mov
xor
int3
neg
cmp
jno
pushw
outsb
xchg
jo
cmp
aad
sbb
cmpsl
cmp
xchg
ja
in
dec
fistpll
outsb
mov
add
sbb
out
push
hlt
jne
add
in
mov
sarl
mov
jecxz
push
cmpl
or
cwtl
subb
mov
push
jge
sbb
and
inc
xchg
jmp
lds
mov
sbb
jne
aas
xchg
arpl
jp
aaa
fildll
sub
xor
push
and
pop
push
push
ror
fsub
outsl
out
xchg
ds
pop
int
adc
fsubrp
push
jno
or
mov
popa
pop
clc
stos
mov
popf
lcall
dec
push
pop
sarl
xor
dec
imul
mov
movsb
dec
rcrl
pop
outsb
fwait
ljmp
push
icebp
test
inc
imul
repz
fadd
out
movsb
shl
mov
mov
mov
adc
xchg
mov
jle
stc
lcall
sbbb
lea
js
lret
sbb
mov
jno
mov
adc
xchg
inc
push
leave
aam
loopne
fists
fstpt
lock
push
push
sub
adc
cmp
xchg
mov
ljmp
jb
xchg
pop
xor
inc
andl
dec
xchg
aad
push
inc
jns
adc
mov
lcall
and
sarl
pop
lret
shr
push
xorl
xchg
fwait
sub
mov
add
sub
cmc
sti
inc
fs
xchg
jg
xchg
dec
sbb
imul
in
and
ds
sub
mov
xchg
or
mov
sahf
arpl
inc
sub
dec
jae
jne
aaa
mov
scas
mov
test
mov
mov
test
movq
and
sbb
jmp
and
stos
jmp
std
dec
add
movsl
lret
lret
xor
push
fabs
fiadds
add
imul
or
jg
adc
ljmp
dec
bound
mov
std
xchg
cmp
sub
dec
mov
ret
jg
adc
xchg
testl
xchg
push
inc
outsl
jb
pop
lods
cmp
es
bsr
int
cltd
mov
mov
cmp
into
out
and
push
pop
jno
psubd
sahf
jno
lock
sub
sbb
shlb
sbb
popf
icebp
sbb
rcrl
repz
rcll
jp
add
dec
hlt
dec
or
popa
fnsave
popa
xchg
rcl
or
xor
incl
xchg
ja
and
sbb
add
aad
call
mov
mov
adc
dec
pop
test
adc
sub
jae
nop
std
jp
movsb
mov
addr16
loop
les
test
popf
nop
jnp
shrl
std
cli
fisttpl
pop
cwtl
push
rclb
dec
adc
mov
inc
mov
mov
or
inc
push
jle
enter
imul
xchg
lret
mov
push
push
adc
pushf
dec
push
add
insl
pop
movl
orb
push
pop
movsb
xchg
ja
lock
call
jle
and
xor
test
les
jp
ret
and
sbb
pop
jp
pop
xchg
mov
dec
dec
nop
jo
add
xchg
and
and
dec
ds
pop
mov
shrl
movsb
dec
and
stos
mov
scas
mov
dec
int
pop
sub
mov
adc
adc
repz
insl
arpl
xchg
dec
jecxz
lds
aaa
pop
adc
mov
cmp
aam
sbb
and
insb
xor
jmp
sub
imul
das
add
test
push
dec
xlat
dec
xchg
in
inc
mov
xor
jbe
shll
mov
jnp
push
xor
and
add
and
pop
xchg
fildl
jns
adc
or
ror
mov
sub
inc
lods
lret
adc
mov
cmp
cltd
bound
stos
andl
and
pop
or
push
fwait
xor
sbb
sbb
mov
dec
and
lea
punpckhwd
mov
sarb
mov
dec
dec
jbe
wbinvd
and
ja
or
xorl
xlat
je
mov
sub
push
repnz
mov
ret
mov
cmp
lcall
or
ret
pmulhw
dec
movsl
fxch
mov
push
cmpsl
scas
pop
sub
js
pusha
fwait
sbb
movsl
push
push
ss
mov
icebp
adc
divb
sub
outsb
inc
push
sbb
mov
push
push
jl
movb
ja
cmpsb
cmp
mov
gs
test
cmp
pusha
dec
lds
inc
cmp
and
cmp
add
inc
or
xchg
cmp
stc
subl
dec
xor
arpl
movsb
xchg
jg
jle
ficompl
loope
popf
imul
test
push
lahf
mov
jecxz
hlt
mov
push
in
and
xchg
cmp
iret
pop
cmpsb
add
mov
repnz
mov
mov
pop
inc
loope
out
push
jae
xchg
xchg
jo
in
mov
add
xchg
dec
push
ljmp
aad
adc
push
scas
pop
in
adc
mov
and
jp
mov
jb
sbb
xor
cmp
repnz
addr16
push
mov
inc
out
daa
aaa
loope
push
int3
dec
pop
out
cld
jne
cmp
mov
ss
push
popa
xchg
sbbb
div
inc
fidivs
pusha
xchg
xor
pop
mov
sti
cmc
mov
inc
addr16
xchg
jmp
push
xchg
pop
iret
xchg
lret
roll
jecxz
ret
loop
xchg
add
xchg
sbb
hlt
push
imull
je
sbb
int
out
fmuls
stc
sahf
mov
shll
rolb
inc
dec
out
in
pusha
xor
mov
inc
xchg
xchg
mov
xchg
cmp
mov
push
pop
test
aaa
mov
and
jmp
popf
mov
add
xchg
inc
aad
cmp
fs
ror
cmc
push
fimuls
sbb
shrl
cwtl
add
mov
fwait
dec
and
push
mov
test
sbb
std
inc
dec
inc
dec
rcl
xchg
gs
sub
and
lret
sbb
es
cmp
fidivl
fs
cmp
ss
mov
enter
push
or
inc
dec
in
mov
push
mov
mov
cmp
jb
movsb
jge
nop
jge
xchg
enter
xchg
cmp
or
repnz
adc
mov
nop
add
push
xchg
pop
lahf
mov
cmpsb
inc
xchg
dec
cmp
fdivr
jl
add
leave
and
aad
mov
test
ljmp
loope
lods
ss
test
sbb
mov
ja
mov
outsl
adc
push
call
sbb
xor
repnz
pop
push
arpl
dec
mov
dec
dec
dec
pop
adc
jecxz
adc
mov
fadds
sahf
mov
push
fninit
sub
enter
in
mov
and
pop
push
and
inc
inc
js
gs
mov
jp
jbe
cs
cmp
push
fbld
mov
int
notb
or
mov
mov
movsl
sbb
in
jl
push
addl
in
or
daa
cmp
dec
cld
out
rorb
adc
jnp
sbb
hlt
ja
or
es
cmpb
test
inc
or
fsubrs
and
sbb
das
mov
pop
int
in
mov
outsb
pop
popf
push
dec
pusha
outsl
adcl
ljmp
out
rcrl
push
ror
pop
mov
xchg
xor
cwtl
inc
lret
mov
xor
testb
divl
xor
inc
xor
ret
add
aam
lret
jae
imull
pop
push
push
mov
lret
pop
mov
add
pop
jp
dec
xlat
cmp
jnp
gs
daa
loopne
out
adc
test
or
mov
mov
leave
xchg
roll
out
sbb
setnp
inc
add
cmp
rcrl
mov
out
fcomi
enter
imul
xchg
sbb
and
push
int
das
pushf
fdivl
pushf
jno
ja
in
addb
sub
add
ret
sti
arpl
icebp
jo
and
pop
mov
mov
fwait
push
fidivrs
xchg
sbb
pop
mov
pusha
pop
jns
lods
mov
imul
mov
outsb
mov
or
lods
mov
push
push
sahf
cmp
inc
add
sub
cmpsb
jns
dec
cmp
dec
pop
push
pop
arpl
or
dec
mov
outsb
pop
sbb
or
mov
lock
imul
xlat
push
pop
jecxz
push
lea
